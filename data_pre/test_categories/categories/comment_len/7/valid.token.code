8	public void draw ( Canvas canvas ) { canvas . drawCircle ( x , y , radius , paint ) ; }
9	public static SM_SYSTEM_MESSAGE STR_SOUL_BOUND_ITEM_SUCCEED ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
14	@ ManagedOperation ( description = _CHAR Manually remove a given object from the cache ( will need re - loading manually from DB ) _CHAR ) public boolean remove ( K id ) { return cache . remove ( id ) ; }
24	Collection < ? extends ClientRequestResult > handleCommandHandleRequest ( final ClientRequest commandRequest ) { switch ( commandRequest . getResultType ( ) ) { case TRANSFER_COMMAND_HANDLES_LIST : return commandExecutionManager . processRequest ( commandRequest . getTagIds ( ) ) ; default : LOG . error ( _CHAR handleCommandHandleRequest ( ) - Could not generate response message . Unknown enum ResultType _CHAR + commandRequest . getResultType ( ) ) ; } return _NULL ; }
38	protected BoardGetCommentsQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
62	public void onDown ( long time ) { mDragLock = DragLock . NONE ; if ( mOverviewAnimationType == OverviewAnimationType . NONE ) { stopScrollingMovement ( time ) ; } mScrollingTab = _NULL ; commitDiscard ( time , _BOOL ) ; }
70	private void _writeVersion ( byte [ ] buffer ) { buffer [ INDEX_VERSION ] = NTP_MODE | ( NTP_VERSION << _NUM ) ; }
96	private static int snapLeft ( Collection < ConstraintWidget > widgets , ConstraintWidget widget , int left , ArrayList < SnapCandidate > snapCandidates ) { return snapHorizontal ( widgets , widget , widget . getAnchor ( ConstraintAnchor . Type . LEFT ) , left , snapCandidates ) ; }
116	public static SM_SYSTEM_MESSAGE STR_MSG_LOCAL_TIME ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
126	public static void registerFuel ( Item item , int duration ) { registerFuel ( new ItemStack ( item , _NUM , ItemStackDictionary . WILDCARD_METADATA ) , duration ) ; }
146	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_ROOM_DESTROYED ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
150	public void apply ( NexusStreamParser np ) throws Exception { }
162	public synchronized void damageReport ( ) { m_clip . invalidate ( ) ; }
182	public static boolean exists ( Bson query , Class < ? extends Bean > t ) throws Exception { String collection = getCollection ( t ) ; if ( collection != _NULL ) { return exists ( collection , query ) ; } throw new Exception ( _CHAR the Class < _CHAR + t . getName ( ) + _CHAR > doest annotated by @ DBMapping ( ) ! _CHAR ) ; }
190	public void startTransition ( ) { if ( mViewToShow != _NULL ) { ViewParent parent = mViewToShow . getParent ( ) ; ( ( ViewGroup ) parent ) . removeView ( mViewToShow ) ; addChildView ( mViewToShow ) ; if ( mViewToHide != _NULL ) mViewToShow . setAlpha ( _NUM . _NUM ) ; } }
195	@ Override public String toString ( ) { return name ; }
203	public void startPlayingAudio ( String id , String file ) { AudioPlayer audio = getOrCreatePlayer ( id , file ) ; audio . startPlaying ( file ) ; getAudioFocus ( ) ; }
229	public static void removeMarkers ( JTextComponent editorPane ) { removeMarkers ( editorPane , _NULL ) ; }
234	public static void showProgressDialog ( final Context context ) { showProgressDialog ( context , DEFAULT_TAG , _NULL ) ; }
261	void checkReadLock ( ) throws DLIllegalStateException , LockingException { synchronized ( this ) { if ( ( _NULL == lockAcquireFuture ) || ( ! lockAcquireFuture . isDefined ( ) ) ) { throw new DLIllegalStateException ( _CHAR Attempt to check for lock before it has been acquired successfully '' ) ; } } readLock . checkOwnership ( ) ; }
265	public GroupsGetMembersQueryWithFields count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
284	public synchronized void clear ( ) { this . value = _NUM ; this . released = _BOOL ; }
311	@ Override public boolean isEmpty ( ) { if ( dsc != _NULL ) { return dsc . isEmpty ( ) ; } else { return _BOOL ; } }
315	@ Override @ PostConstruct public void init ( ) throws IDBPersistenceException { super . init ( ) ; }
317	public boolean contains ( int index ) { return index >= getFirst ( ) && index <= getLast ( ) ; }
324	public SimpleAsyncPollingContainerConfigurer eventListenerAnnotation ( Object eventListener ) { AnnotationEventListenerAdapter annotationEventListenerAdapter = new AnnotationEventListenerAdapter ( ) ; annotationEventListenerAdapter . setDelegate ( eventListener ) ; annotationEventListenerAdapter . afterPropertiesSet ( ) ; pollingEventListenerContainer . setEventListener ( annotationEventListenerAdapter ) ; return this ; }
351	public boolean isNull ( int index ) { return JSONObject . NULL . equals ( opt ( index ) ) ; }
361	public void addIterationListener ( final IterationListener listener ) { listeners . add ( listener ) ; }
365	public void apply ( NexusStreamParser np ) throws Exception { }
371	@ Override public void add ( String ... identifiers ) { blacklist . addAll ( Arrays . asList ( identifiers ) ) ; }
384	public void clear ( ) { getProps ( ) . clear ( ) ; getOverlay ( ) . clear ( ) ; }
385	private void expectedTwoBytes ( ) throws MalformedByteSequenceException { throw new MalformedByteSequenceException ( fFormatter , fLocale , XMLMessageFormatter . XML_DOMAIN , _CHAR ExpectedByte _CHAR , new Object [ ] { _CHAR _NUM _CHAR , _CHAR _NUM _CHAR } ) ; }
393	public static SM_SYSTEM_MESSAGE STR_UNBREAKABLE_ITEM ( DescriptionId value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
411	public AudioMoveToAlbumQuery moveToAlbum ( UserActor actor , List < Integer > audioIds ) { return new AudioMoveToAlbumQuery ( getClient ( ) , actor , audioIds ) ; }
420	public boolean hasAccess ( String ... name ) { if ( this . getId ( ) == _NUM ) { return _BOOL ; } if ( role == _NULL ) { getRole ( ) ; } return role . hasAccess ( name ) ; }
421	@ Override public String toString ( ) { return _CHAR PointD , x : _CHAR + x + _CHAR , y : _CHAR + y ; }
422	@ Deprecated public boolean isSelected ( Map < String , Object > context ) { ModelMenuItem selMenuItem = getModelMenu ( ) . getSelectedMenuAndItem ( context ) . getMenuItem ( ) ; return ( isSame ( selMenuItem ) ) ; }
452	@ Override public void remove ( String ... identifiers ) { blacklist . removeAll ( Arrays . asList ( identifiers ) ) ; }
454	private int klattRule3 ( Element segment ) { Element syllable = getSyllable ( segment ) ; if ( ! isMajIPFinal ( syllable ) ) { if ( isInNucleus ( segment ) ) { return getPropertyAsInteger ( _CHAR rule3 . nucleus _CHAR ) ; } } else if ( isInCoda ( segment ) && ( isLiquid ( segment ) || isNasal ( segment ) ) ) { return getPropertyAsInteger ( _CHAR rule3 . coda _CHAR ) ; } return _NUM ; }
481	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
482	public void pathValuesToPixel ( List < Path > paths ) { for ( int i = _NUM ; i < paths . size ( ) ; i ++ ) { pathValueToPixel ( paths . get ( i ) ) ; } }
504	@ Override public int hashCode ( ) { if ( uri != _NULL ) { return uri . hashCode ( ) + ( ( localpart != _NULL ) ? localpart . hashCode ( ) : _NUM ) ; } return ( rawname != _NULL ) ? rawname . hashCode ( ) : _NUM ; }
508	@ Override public final void run ( ) { try { runImpl ( ) ; } catch ( Throwable e ) { log . warn ( _CHAR error handling ls ( _CHAR + getConnection ( ) . getIP ( ) + _CHAR ) message _CHAR + this , e ) ; } }
514	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigColour copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigColour ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
526	public static void writeTextComponent ( PacketBuffer buf , ITextComponent value ) { writeString ( buf , ITextComponent . a . componentToJson ( value ) ) ; }
557	public void onSaveInstanceState ( Bundle outState ) { if ( activityResultCallback != _NULL ) { String serviceName = activityResultCallback . getServiceName ( ) ; outState . putString ( _CHAR callbackService _CHAR , serviceName ) ; } if ( pluginManager != _NULL ) { outState . putBundle ( _CHAR plugin _CHAR , pluginManager . onSaveInstanceState ( ) ) ; } }
569	public static void main ( String [ ] args ) { MousePicking simulation = new MousePicking ( ) ; simulation . run ( ) ; }
570	public boolean isApplicationEnabled ( ) { AXmlAttribute < ? > attr = this . application . getAttribute ( _CHAR enabled _CHAR ) ; return attr == _NULL || ! attr . getValue ( ) . equals ( Boolean . FALSE ) ; }
590	public void put ( String key , File file ) throws FileNotFoundException { put ( key , file , _NULL ) ; }
607	public AudioInputStream synthesize ( Voice voice , AudioFileFormat aft , Element domElement ) throws Exception { if ( ! voice . hasVocalizationSupport ( ) ) return _NULL ; if ( domElement . hasAttribute ( _CHAR variant _CHAR ) ) { return synthesizeVariant ( aft , domElement ) ; } if ( f0ContourImposeSupport ) { return synthesizeImposedIntonation ( aft , domElement ) ; } return synthesizeVocalization ( aft , domElement ) ; }
610	static void dump ( String title , FloatList list ) { System . out . println ( title ) ; FloatList cur = list ; do { System . out . println ( _CHAR Item : _CHAR + cur . value ) ; cur = cur . next ; } while ( cur != list ) ; }
616	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
649	public final boolean isOverridingLocale ( ) { return ( myOverride & CFG_LOCALE ) != _NUM ; }
673	int observerCount ( ) { return observers . get ( ) . length ; }
702	public String indexName ( ) { return idxName ; }
703	private void next ( SegmentedListIterator < T > iter ) { iter . _curElement = _NULL ; if ( iter . _currSegmentScanCount < _NUM ) return ; if ( iter . _headToTail ) next_down ( iter ) ; else next_up ( iter ) ; }
742	public void insertEntryIndexedField ( IEntryCacheInfo pEntry , K fieldValue , TypeData pType ) { if ( _fifoGroupsIndexExtention == _NULL ) insertEntryIndexedField_impl ( pEntry , fieldValue , pType , pEntry . getBackRefs ( ) ) ; else _fifoGroupsIndexExtention . insertEntryIndexedField ( pEntry , fieldValue , pType ) ; }
758	public void showDetailsArea ( int location ) { DisplayArea displayArea = getDisplayArea ( location ) ; if ( displayArea != _NULL ) displayArea . setVisible ( _BOOL ) ; }
760	public void dump ( PrintWriter output , String title ) { dump ( output , _NUM , title , _BOOL ) ; }
768	private void invalidByte ( int position , int count , int c ) throws MalformedByteSequenceException { throw new MalformedByteSequenceException ( fFormatter , fLocale , XMLMessageFormatter . XML_DOMAIN , _CHAR InvalidByte _CHAR , new Object [ ] { Integer . toString ( position ) , Integer . toString ( count ) } ) ; }
784	public static void unbanChar ( int playerId ) { DAOManager . getDAO ( PlayerPunishmentsDAO . class ) . unpunishPlayer ( playerId , PunishmentType . CHARBAN ) ; }
826	@ Override public int hashCode ( ) { return _NUM * ( _NUM * _NUM + numerator ) + denominator ; }
844	public AudioGetPopularQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
849	public void showLoading ( ) { switchState ( LOADING , _NULL , _NULL , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
874	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set showAminoAcids = _CHAR ) ; boolean value = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . setShowAminoAcids ( value ) ; }
884	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
895	public void toggleLockConstraints ( ConstraintWidget widget ) { int constraintsCreator = getMainConstraintsCreator ( widget ) ; if ( constraintsCreator == ConstraintAnchor . USER_CREATOR ) { setConstraintsCreator ( widget , ConstraintAnchor . AUTO_CONSTRAINT_CREATOR ) ; } else if ( constraintsCreator == ConstraintAnchor . AUTO_CONSTRAINT_CREATOR ) { setConstraintsCreator ( widget , ConstraintAnchor . USER_CREATOR ) ; } mSelection . selectionHasChanged ( ) ; }
902	public static SM_SYSTEM_MESSAGE STR_PARTY_HE_ENTERED_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
917	@ Override public boolean equals ( Object other ) { return this == other || ( other instanceof Project && hashCode ( ) == other . hashCode ( ) ) ; }
919	protected void ensureTX ( ) throws IllegalStateException { if ( m_acknowledgeMode != Session . SESSION_TRANSACTED ) { throw new IllegalStateException ( _CHAR Forbidden call on a non transacted session . '' ) ; } }
923	protected static void deleteRecursiveSilent ( CarbonFile f ) { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursiveSilent ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { return ; } }
939	private int blockHeight ( final int blockRow ) { return ( blockRow == blockRows - _NUM ) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE ; }
943	public static char readChar ( DataInputStream dis ) throws IOException { return ( char ) dis . readByte ( ) ; }
949	public Call post ( String url , Callback callback ) { return post ( url , _NULL , callback ) ; }
964	public void clearStyleKeys ( ) { styleKeys . clear ( ) ; }
975	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( cookie == _NULL ) throw new InvalidObjectException ( _CHAR _NULL cookie reference _CHAR ) ; if ( landlord == _NULL ) throw new InvalidObjectException ( _CHAR _NULL landlord reference _CHAR ) ; if ( landlordUuid == _NULL ) throw new InvalidObjectException ( _CHAR _NULL landlordUuid reference _CHAR ) ; }
976	public AdsGetSuggestionsQueryWithSchools lang ( AdsGetSuggestionsLang value ) { return unsafeParam ( _CHAR lang _CHAR , value ) ; }
985	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
1012	public static boolean isWifiConnected ( Context context ) { ConnectivityManager cm = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; return cm != _NULL && cm . getActiveNetworkInfo ( ) . getType ( ) == ConnectivityManager . TYPE_WIFI ; }
1030	public int degree ( ) { return x . length - _NUM ; }
1046	public static Histogram negate ( Histogram x ) { return x . modifyEventCounters ( _NULL ) ; }
1062	public void apply ( NexusStreamParser np ) throws Exception { }
1076	public DoWhile doWhile ( Conditional cond , Task task ) { return new DoWhile ( this . executor_ , cond , task ) ; }
1108	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { fInCDATASection = _BOOL ; if ( ! fDeferNodeExpansion ) { if ( fFilterReject ) { return ; } if ( fCreateCDATANodes ) { setCharacterData ( _BOOL ) ; } } }
1144	public static String makeDAClassName ( String packagePath , String actionName ) { return packagePath + _CHAR . _CHAR + actionName + _CHAR Activity _CHAR ; }
1158	public static float distance ( float eventX , float startX , float eventY , float startY ) { float dx = eventX - startX ; float dy = eventY - startY ; return ( float ) Math . sqrt ( dx * dx + dy * dy ) ; }
1162	public int writeAnnotationSetRefList ( AnnotationSetRefList annotationSetRefList ) { int off = data . position ( ) ; writeInt ( annotationSetRefList . annotationSetRefItems . length ) ; for ( int annotationSetRefItem : annotationSetRefList . annotationSetRefItems ) { writeInt ( annotationSetRefItem ) ; } return off ; }
1166	private void loadMore ( ) { isLoadingData = _BOOL ; isLoadingMoreData = _BOOL ; mOnLoadMoreListener . onLoadMore ( ) ; }
1198	@ Override public ListenableFuture < MemberRemoveResponse > removeMember ( long memberID ) { MemberRemoveRequest memberRemoveRequest = MemberRemoveRequest . newBuilder ( ) . setID ( memberID ) . build ( ) ; return clusterStub . memberRemove ( memberRemoveRequest ) ; }
1245	private void sortDrawablesAZ ( ) { Sort . instance ( ) . sort ( drawables , _NULL ) ; refreshDrawableDisplay ( ) ; }
1249	public PagesGetQuery global ( Boolean value ) { return unsafeParam ( _CHAR global _CHAR , value ) ; }
1258	public boolean select ( Viewer viewer , Object parentElement , Object element ) { return _BOOL ; }
1259	public void endContentModel ( ) throws XNIException { }
1270	protected boolean isStopped ( ) { return stopped ; }
1274	public static AnnotationGenerator v ( ) { return G . v ( ) . soot_jimple_toolkits_annotation_j5anno_AnnotationGenerator ( ) ; }
1281	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_HOSTILE_DEATH_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
1289	public void selectText ( ) { actions . keyDown ( Keys . CONTROL ) . sendKeys ( _CHAR a _CHAR ) . perform ( ) ; }
1296	@ Override public void onResponse ( GankData response ) { getContentText . setText ( response . toString ( ) ) ; }
1301	public void makeTransient ( ) { this . isTransient = _BOOL ; }
1319	String nextProducerId ( ) { return m_sessionID + _CHAR _prod_ _CHAR + m_producersC . increment ( ) ; }
1332	private static boolean ensureCurrent ( LeasedResource resource ) { return resource . getExpiration ( ) > SystemTime . timeMillis ( ) ; }
1350	@ Override public void printStackTrace ( ) { super . printStackTrace ( ) ; if ( nested != _NULL ) { nested . printStackTrace ( ) ; } }
1360	public void showErrorMessage ( String errorMessage ) { if ( mErrorView != _NULL ) { mErrorView . setErrorText ( errorMessage ) ; mErrorView . setVisibility ( VISIBLE ) ; } }
1379	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
1391	@ Override public final void writeFloat ( float v ) throws IOException { writeInt ( Float . floatToIntBits ( v ) ) ; }
1420	protected String millisecondsToYearWeek ( long millis ) { return getSimpleDateFormatForMilliseconds ( _CHAR yyyy - _CHAR ww _CHAR , millis ) ; }
1431	public void addPoint ( final T point ) { points . add ( point ) ; }
1441	protected void onBindFooterViewHolder ( RecyclerView . ViewHolder holder , int position ) { }
1453	public void decipher ( byte [ ] data ) { decipher ( data , _NUM , data . length ) ; }
1468	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_BLOCK_A_TO_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1483	void reset ( ) { myParserCount = _NUM ; myParserFiles = _NULL ; myLayoutName = _NULL ; myLayoutEmbeddedParser = _NULL ; }
1488	private static int calculateBlockCount ( final int k ) { final int w = _NUM ; final int r = ( k + w - _NUM ) / w ; return r ; }
1489	public static void broadcastPacket ( Player player , AionServerPacket packet , boolean toSelf ) { if ( toSelf ) { sendPacket ( player , packet ) ; } broadcastPacket ( player , packet ) ; }
1527	public void updateGeometry ( int row , Geometry geometry ) { setValueAt ( geometry , row , getGeometryFieldIndex ( ) ) ; }
1528	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stagger_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1537	public void recordHit ( ) { mIsHit = _BOOL ; }
1583	public long incrementAndGet ( ) { return addAndGet ( _NUM ) ; }
1588	@ Override public void endContentModel ( Augmentations augs ) throws XNIException { }
1612	public static void dump ( String title , FloatList list ) { System . out . println ( title ) ; FloatList cur = list ; do { System . out . println ( _CHAR Item : _CHAR + cur . value ) ; cur = cur . next ; } while ( cur != list ) ; }
1617	public static SM_SYSTEM_MESSAGE STR_ITEM_CANNOT_BE_DROPPED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1638	public static final double compute ( ) { double e = _NUM . _NUM ; while ( _NUM . _NUM + e > _NUM . _NUM ) { e *= _NUM . _NUM ; } return e ; }
1643	public void reset ( ) { fSubGroupsB . clear ( ) ; fSubGroups . clear ( ) ; }
1651	public void close ( ) { contents . close ( ) ; }
1655	public void removeCatchable ( CatchablePokemon pokemon ) { if ( cachedCatchable . size ( ) > _NUM ) { cachedCatchable . remove ( pokemon ) ; } }
1686	public void addLanguage ( Language language ) { addLanguage ( language . getId ( ) ) ; }
1692	public PhotosGetQueryWithExtended photoSizes ( Boolean value ) { return unsafeParam ( _CHAR photo_sizes _CHAR , value ) ; }
1698	private int determineMaxLevel ( PhyloTree tree ) { return determineMaxLevelRec ( _NUM , tree . getRoot ( ) ) ; }
1701	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; final ImportBlastDialog dialog = new ImportBlastDialog ( getViewer ( ) . getFrame ( ) , getDir ( ) , _CHAR Import BLAST and READs files - MEGAN _CHAR ) ; final String command = dialog . showAndGetCommand ( ) ; if ( command != _NULL ) execute ( command ) ; }
1716	public void rootRemoved ( ISVNRepositoryLocation root ) { Iterator it = listeners . iterator ( ) ; while ( it . hasNext ( ) ) { IRepositoryListener listener = ( IRepositoryListener ) it . next ( ) ; listener . repositoryRemoved ( root ) ; } }
1733	public void removeCommandClass ( CommandClass commandClass ) { if ( supportedCommandClasses . containsKey ( commandClass ) ) { supportedCommandClasses . remove ( commandClass ) ; } }
1745	@ Override public void flush ( ) throws IOException { OutputStream output = m_streams . get ( ) ; if ( _NULL != output ) { output . flush ( ) ; } }
1794	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
1798	public static void trackEvent ( @ NotNull String eventAction , @ Nullable String eventLabel , @ Nullable Integer eventValue ) { UsageTracker . getInstance ( ) . trackEvent ( UsageTracker . CATEGORY_GFX_TRACE , eventAction , eventLabel , eventValue ) ; }
1806	public boolean isMinScaleSet ( ) { return ! ScaleUtil . isNotSet ( minScale ) ; }
1816	public MessagesDeleteChatPhotoQuery deleteChatPhoto ( UserActor actor , int chatId ) { return new MessagesDeleteChatPhotoQuery ( getClient ( ) , actor , chatId ) ; }
1822	@ Override public void close ( ) { }
1825	public InputSource resolveEntity ( String arg0 , String arg1 ) throws SAXException , IOException { return new InputSource ( new ByteArrayInputStream ( _CHAR _CHAR . getBytes ( ) ) ) ; }
1857	private void cacheRootDistance ( Direction d , float value ) { mDistToRootCache [ d . getDirection ( ) ] = value ; }
1902	public PriorityQueue priorityQueue ( int concurrency , PriorityQueue . PriorityComparator comparator , int defaultPriority ) { return new PriorityQueue ( this . executor_ , concurrency , comparator , defaultPriority ) ; }
1908	public void save ( Writer writer ) { YAML . get ( ) . dump ( saveMap ( ) , writer ) ; }
1925	public void showContent ( List < Integer > skipIds ) { switchState ( CONTENT , _NULL , _NULL , _NULL , _NULL , _NULL , skipIds ) ; }
1930	public final void encrypt ( ByteBuffer buf ) { if ( ! isEnabled ) { isEnabled = _BOOL ; log . debug ( _CHAR packet is not encrypted ... send in SM_KEY _CHAR ) ; return ; } packetKey . encrypt ( buf ) ; }
1932	@ Override protected void onPreExecute ( ) { mCurrentDialog = IndeterminateProgressDialog . newInstance ( R . string . wait_a_moment , _BOOL ) ; mCurrentDialog . show ( getSupportFragmentManager ( ) , WAIT_DIALOG_TAG ) ; }
1933	public void cleanUp ( ) { cacheFragment = _NULL ; }
1952	public PhotosGetUserPhotosQuery extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
1961	public void add ( Object e ) { throw new UnsupportedOperationException ( ) ; }
1965	public AccountUnregisterDeviceQuery unregisterDevice ( UserActor actor ) { return new AccountUnregisterDeviceQuery ( getClient ( ) , actor ) ; }
1968	public static int writeString ( DataOutput out , String s ) throws IOException { ByteBuffer bytes = encode ( s ) ; int length = bytes . limit ( ) ; WritableUtils . writeVInt ( out , length ) ; out . write ( bytes . array ( ) , _NUM , length ) ; return length ; }
1993	public static boolean isMajorRank ( int rank ) { return getInstance ( ) . majorRanks . get ( rank ) ; }
1995	@ Override public void startConditional ( short type , Augmentations augs ) throws XNIException { }
1999	public boolean contains ( int index ) { return index >= getFirst ( ) && index <= getLast ( ) ; }
2001	public boolean isTraceEnabled ( ) { return this . logger . isTraceEnabled ( ) ; }
2027	private void removeLease ( long leaseId ) { if ( this . keepAlives . containsKey ( leaseId ) ) { this . keepAlives . remove ( leaseId ) ; } }
2042	public BafBody newBody ( Body b ) { return new BafBody ( b , Collections . < String , String > emptyMap ( ) ) ; }
2061	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigEnum copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigEnum ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
2068	public static SM_SYSTEM_MESSAGE STR_FORCE_LEAVE_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2076	public FieldVector3D < T > scalarMultiply ( final double a ) { return new FieldVector3D < T > ( x . multiply ( a ) , y . multiply ( a ) , z . multiply ( a ) ) ; }
2149	private int klattRule4 ( Element segment ) { Element syllable = getSyllable ( segment ) ; if ( ! isWordFinal ( syllable ) ) { if ( isInNucleus ( segment ) ) { return getPropertyAsInteger ( _CHAR rule4 . nucleus _CHAR ) ; } } return _NUM ; }
2155	public S2Point negate ( ) { return new S2Point ( - theta , FastMath . PI - phi , vector . negate ( ) ) ; }
2189	public void notify ( LeaseRenewalEvent event ) { LeaseListener l = get ( ) ; if ( l != _NULL ) { l . notify ( event ) ; } }
2203	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigFont copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigFont ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
2213	public MapCursor addCursor ( MapCursor cursor ) { cursors . add ( cursor ) ; return cursor ; }
2217	@ Override public void write ( char [ ] chr ) throws IOException { out . write ( chr ) ; }
2244	public Spring addSpring ( ForceItem item1 , ForceItem item2 ) { return addSpring ( item1 , item2 , - _NUM . f , - _NUM . f ) ; }
2275	public AudioSearchQuery search ( UserActor actor ) { return new AudioSearchQuery ( getClient ( ) , actor ) ; }
2277	public void addHeaderView ( View view , int viewHeight ) { addHeaderView ( view , viewHeight , - _NUM ) ; }
2301	protected void advanceToNextPage ( ) { getPageDelegate ( ) . advanceToNextPage ( ) ; }
2347	protected Object cloneBody ( ) { if ( Body == _NULL ) { return _NULL ; } byte [ ] body = ( byte [ ] ) Body ; byte [ ] cloned = new byte [ body . length ] ; System . arraycopy ( body , _NUM , cloned , _NUM , body . length ) ; return cloned ; }
2360	public static int decrementExact ( final int n ) throws MathRuntimeException { if ( n == Integer . MIN_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_SUBTRACTION , n , _NUM ) ; } return n - _NUM ; }
2379	public static void makeText ( Context context , String msg , int length , int type ) { makeText ( context , msg , length , type , _NUM , _NUM ) ; }
2387	@ Override public void close ( ) { }
2390	public Builder buttonBackgroundColor ( int buttonBackgroundColor ) { this . buttonBackgroundColor = buttonBackgroundColor ; return this ; }
2394	public Builder alphaOfDisabledElements ( float alpha ) { this . alphaOfDisabledElements = alpha ; return this ; }
2404	public void clear ( ) { clear ( _BOOL ) ; }
2405	protected void broadcastDownloadSuccessful ( DownloadInfo downloadInfo ) { }
2457	private void push ( JSONObject jo ) throws JSONException { if ( this . top >= maxdepth ) { throw new JSONException ( _CHAR Nesting too deep . '' ) ; } this . stack [ this . top ] = jo ; this . mode = jo == _NULL ? _CHAR : _CHAR ; this . top += _NUM ; }
2468	@ Override public Iterator iterator ( ) { return new Iterator ( ) ; }
2469	public Forever forever ( Task task ) { return new Forever ( this . executor_ , task ) ; }
2476	protected AdsGetSuggestionsQueryWithCities section ( AdsGetSuggestionsSection value ) { return unsafeParam ( _CHAR section _CHAR , value ) ; }
2488	public final int readInt ( ) { final int byte1 = bs . readByte ( ) ; final int byte2 = bs . readByte ( ) ; final int byte3 = bs . readByte ( ) ; final int byte4 = bs . readByte ( ) ; return ( byte4 << _NUM ) + ( byte3 << _NUM ) + ( byte2 << _NUM ) + byte1 ; }
2492	public void addFlakes ( int quantity ) { for ( int i = _NUM ; i < quantity ; ++ i ) { flakes . add ( Flake . createFlake ( getWidth ( ) , droid , getContext ( ) ) ) ; } setNumFlakes ( numFlakes + quantity ) ; }
2499	public AemListItem down ( ) { buttonDown . click ( ) ; return this ; }
2509	static int dp ( Context context , int val ) { return ( int ) TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , val , context . getResources ( ) . getDisplayMetrics ( ) ) ; }
2512	void onItemClick ( MenuItem menuItem ) { if ( menuItem . isEnabled ( ) ) { dismiss ( ) ; mHandler . onOptionsItemSelected ( menuItem ) ; } }
2514	@ Override public String toString ( ) { return left . toString ( ) + _CHAR : _CHAR + right . toString ( ) ; }
2537	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
2544	public void apply ( NexusStreamParser np ) throws Exception { }
2547	public void increment ( ) { add ( _NUM ) ; }
2555	public static boolean isFileExtensionSupported ( File file , List < String > fileExtensionList ) { if ( file == _NULL ) { return _BOOL ; } String fileExtension = ExternalFilenames . getFileExtension ( file . getAbsolutePath ( ) ) ; for ( String allowedFileExtension : fileExtensionList ) { if ( fileExtension . compareToIgnoreCase ( allowedFileExtension ) == _NUM ) { return _BOOL ; } } return _BOOL ; }
2564	public boolean isLookingForEvent ( ) { return lookingForEvent ; }
2567	private void deleteStorePath ( ) { FileFactory . FileType fileType = FileFactory . getFileType ( this . hdfsStorePath ) ; CarbonFile carbonFile = FileFactory . getCarbonFile ( this . hdfsStorePath , fileType ) ; deleteRecursiveSilent ( carbonFile ) ; }
2584	@ Override public void showMessage ( String message ) { Snackbar . make ( root , message , Snackbar . LENGTH_SHORT ) . show ( ) ; }
2592	private boolean isTestMode ( ) { return ( ( System . getProperty ( _CHAR c2mon . server . testMode _CHAR ) ) != _NULL && ( System . getProperty ( _CHAR c2mon . server . testMode _CHAR ) . equals ( _CHAR _BOOL _CHAR ) ) ) ; }
2608	public static SM_SYSTEM_MESSAGE STR_GUILD_NOTICE ( String value0 , long i ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , i , _NUM ) ; }
2629	public CreatePageWindow selectTemplateContaining ( String templateName ) { WebElement template = currentWindow . findElement ( By . xpath ( _CHAR .// div [ contains ( @ class , '' + '' ' template - title ' ) and contains ( text ( ) , ' '' + templateName + '' ' ) ] '' ) ) ; template . click ( ) ; return this ; }
2650	public final TableSubHeader render ( ) { TableSubHeader element = getElement ( ) ; if ( element == _NULL ) { element = new TableSubHeader ( this ) ; setElement ( element ) ; } render ( element ) ; return element ; }
2654	public AemToolbar edit ( ) { click ( MenuOption . EDIT ) ; return this ; }
2683	public VideoGetCatalogQuery itemsCount ( Integer value ) { return unsafeParam ( _CHAR items_count _CHAR , value ) ; }
2703	public boolean isNull ( int index ) { return JSONObject . NULL . equals ( this . opt ( index ) ) ; }
2715	public static NameValuePair [ ] split_metadata ( String meta_buff ) { return split_metadata ( meta_buff , FDFS_RECORD_SEPERATOR , FDFS_FIELD_SEPERATOR ) ; }
2750	private void sendMessageFirebase ( ) { ChatModel model = new ChatModel ( userModel , edMessage . getText ( ) . toString ( ) , Calendar . getInstance ( ) . getTime ( ) . getTime ( ) + _CHAR _CHAR , _NULL ) ; mFirebaseDatabaseReference . child ( CHAT_REFERENCE ) . push ( ) . setValue ( model ) ; edMessage . setText ( _NULL ) ; }
2765	public static SM_SYSTEM_MESSAGE STR_EXTRACT_GATHER_START_1_BASIC ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2775	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . flush ( ) ; }
2784	@ Override public String toString ( ) { return _CHAR ViterbiPath score _CHAR + score + _CHAR leads to candidate unit _CHAR + candidate . getUnit ( ) ; }
2799	public final int hashCode ( ) { return Hash ; }
2802	public void put ( String key , File file , String contentType ) throws FileNotFoundException { if ( key != _NULL && file != _NULL ) { fileParams . put ( key , new FileWrapper ( file , contentType ) ) ; } }
2834	private ColorFieldEditor createColorFieldEditor ( String preferenceName , String label , Composite parent ) { ColorFieldEditor editor = new ColorFieldEditor ( preferenceName , label , parent ) ; editor . setPage ( this ) ; editor . setPreferenceStore ( getPreferenceStore ( ) ) ; return editor ; }
2836	public static void xml ( String xml ) { printer . xml ( xml ) ; }
2844	public DistributedLogClientBuilder host ( SocketAddress address ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _routingServiceBuilder = RoutingUtils . buildRoutingService ( address ) ; newBuilder . _enableRegionStats = _BOOL ; return newBuilder ; }
2856	public static final String formatVector2 ( Vector2 v ) { return MessageFormat . format ( Messages . getString ( _CHAR canvas . vector . format _CHAR ) , v . x , v . y ) ; }
2892	public void addProvider ( AXmlNode node ) { if ( providers . isEmpty ( ) ) providers = new ArrayList < AXmlNode > ( ) ; providers . add ( node ) ; }
2902	private void inflateConnectivity ( ) { if ( isConnected ) { if ( connectivityView . getVisibility ( ) == VISIBLE ) { if ( ! isConnectivityLayoutOverridden ( ) ) { showConnected ( ) ; } else { showCustomConnected ( ) ; } } } else { if ( ! isConnectivityLayoutOverridden ( ) ) { showDisconnected ( ) ; } else { showCustomDisonnected ( ) ; } } }
2905	void clearCache ( ) { synchronized ( mCache ) { mCache . clear ( ) ; } }
2929	public void showSvnProperties ( ISVNLocalResource resource ) throws SVNException { this . resource = resource ; if ( resource != _NULL ) { setContentDescription ( Policy . bind ( _CHAR SvnPropertiesView . titleWithArgument _CHAR , resource . getName ( ) ) ) ; } else { setContentDescription ( _CHAR _CHAR ) ; } refresh ( ) ; }
2930	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set minReadsAlignment = _CHAR ) ; int value = np . getInt ( _NUM , Integer . MAX_VALUE ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; ProgramProperties . put ( MeganProperties . MININUM_READS_IN_ALIGNMENT , value ) ; }
2938	public static boolean isEmpty ( IsEmpty o ) { return o == _NULL || o . isEmpty ( ) ; }
2955	@ Override public void close ( ) { }
2962	public static Configuration createAlarm ( ) { Configuration configuration = new Configuration ( ) ; Alarm alarm = Alarm . create ( _CHAR faultFamily _CHAR , _CHAR faultMember _CHAR , _NUM , new ValueCondition ( Integer . class , _NUM ) ) . id ( _NUM ) . dataTagId ( _NUM ) . build ( ) ; configuration . addEntity ( alarm ) ; return configuration ; }
2965	public Fraction subtract ( final int i ) { return new Fraction ( numerator - i * denominator , denominator ) ; }
2969	public Iterator iterator ( ) { return nodes . iterator ( ) ; }
2975	void pin ( ) { internalLock . writeLock ( ) . lock ( ) ; try { pins ++ ; } finally { internalLock . writeLock ( ) . unlock ( ) ; } }
2976	public LikesGetListQuery friendsOnly ( Boolean value ) { return unsafeParam ( _CHAR friends_only _CHAR , value ) ; }
2990	public int compareTo ( HumanTime t ) { return delta == t . delta ? _NUM : ( delta < t . delta ? - _NUM : _NUM ) ; }
3016	public static void createAllTables ( Database db , boolean ifNotExists ) { ChatMessageBeanDao . createTable ( db , ifNotExists ) ; }
3080	public void clear ( ) { setAccessToken ( _NULL ) ; }
3081	public int writeAnnotation ( Annotation annotation ) { int off = data . position ( ) ; writeByte ( annotation . visibility ) ; writeEncodedArray ( annotation . encodedAnnotation ) ; return off ; }
3116	public Crop withAspect ( int x , int y ) { cropIntent . putExtra ( Extra . ASPECT_X , x ) ; cropIntent . putExtra ( Extra . ASPECT_Y , y ) ; return this ; }
3120	public static Uri buildItemUri ( long _id ) { return BASE_URI . buildUpon ( ) . appendPath ( _CHAR items _CHAR ) . appendPath ( Long . toString ( _id ) ) . build ( ) ; }
3128	@ NotNull public ObjectProperty < File > imagePath ( ) { return myImagePath ; }
3141	protected int indexOf ( String buffer , int start , int end , char ch ) { for ( int i = start ; i < end ; i ++ ) { if ( buffer . charAt ( i ) == ch ) { return i ; } } return - _NUM ; }
3147	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { UserInfoDao . createTable ( db , ifNotExists ) ; BookInfoDao . createTable ( db , ifNotExists ) ; }
3153	private int blockWidth ( final int blockColumn ) { return ( blockColumn == blockColumns - _NUM ) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE ; }
3157	private void onConditionComplete ( boolean result ) { this . cond_ = result ; if ( this . isDone ( ) ) this . done ( ) ; else this . executor_ . execute ( new TaskRunner ( ) ) ; }
3163	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
3169	public VideoEditAlbumQuery privacy ( String ... value ) { return unsafeParam ( _CHAR privacy _CHAR , value ) ; }
3199	public Single < Void > fetch ( ) { int cache = _NUM ; if ( ! this . firebaseRemoteConfig . getInfo ( ) . getConfigSettings ( ) . isDeveloperModeEnabled ( ) ) { cache = _NUM ; } return observeSingleValue ( this . firebaseRemoteConfig . fetch ( cache ) ) ; }
3213	public void startPlaying ( String file ) { if ( this . readyPlayer ( file ) && this . player != _NULL ) { this . player . start ( ) ; this . setState ( STATE . MEDIA_RUNNING ) ; this . seekOnPrepared = _NUM ; } else { this . prepareOnly = _BOOL ; } }
3218	public boolean hasBlock ( ) { return this . blockClicked != _NULL ; }
3221	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { BookDao . dropTable ( db , ifExists ) ; }
3229	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
3232	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
3258	private boolean canLeave ( Player activePlayer ) { if ( isBrigadeGeneral ( activePlayer ) ) { PacketSendUtility . sendPacket ( activePlayer , SM_SYSTEM_MESSAGE . STR_GUILD_LEAVE_MASTER_CANT_LEAVE_BEFORE_CHANGE_MASTER ) ; return _BOOL ; } return _BOOL ; }
3281	public static SM_SYSTEM_MESSAGE STR_GUILD_EVENT_LOSE_FORT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
3294	public DynamicInvokeExpr newDynamicInvokeExpr ( SootMethodRef bootstrapMethodRef , List < Value > bootstrapArgs , SootMethodRef methodRef , int tag , List args ) { return new GDynamicInvokeExpr ( bootstrapMethodRef , bootstrapArgs , methodRef , tag , args ) ; }
3308	public void insert ( ForceItem item ) { try { insert ( item , root , xMin , yMin , xMax , yMax ) ; } catch ( StackOverflowError e ) { e . printStackTrace ( ) ; } }
3317	@ Override public void endAttlist ( Augmentations augs ) throws XNIException { }
3336	public static void registerKryoClasses ( SparkConf conf ) { List < Class < ? >> classes = Arrays . asList ( ( Class < ? > ) BooleanWritable . class , ByteWritable . class , DoubleWritable . class , FloatWritable . class , IntWritable . class , LongWritable . class , NullWritable . class , Text . class ) ; conf . registerKryoClasses ( ( Class < ? > [ ] ) classes . toArray ( ) ) ; }
3369	public static boolean canUseItem ( Player player , Item item ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canUseItem . ordinal ( ) ] ) { if ( ! restrictions . canUseItem ( player , item ) ) { return _BOOL ; } } return _BOOL ; }
3374	public void addAllFiles ( File [ ] files ) { for ( File f : files ) addEntry ( f . getPath ( ) ) ; }
3379	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
3386	public PhotosGetQuery photoSizes ( Boolean value ) { return unsafeParam ( _CHAR photo_sizes _CHAR , value ) ; }
3421	public void add ( double weight , double x , double y ) { observations . add ( new WeightedObservedPoint ( weight , x , y ) ) ; }
3422	public void takeRemoteHeapDump ( Application application , String dumpFile , boolean customizeDumpFile ) { heapDumpProvider . createRemoteHeapDump ( application , dumpFile , customizeDumpFile ) ; }
3436	public static boolean isAllowed ( Class < ? > typeToCheck , Class < ? > attributeType ) { if ( allowedClassTypeMap . isEmpty ( ) ) { initialise ( ) ; } List < Class < ? >> list = allowedClassTypeMap . get ( attributeType ) ; if ( list == _NULL ) { return _BOOL ; } return list . contains ( typeToCheck ) ; }
3437	@ Override public void close ( ) { }
3449	public EventBuilder async ( ) { this . event . setAsync ( _BOOL ) ; return this ; }
3478	public void start ( Activity activity ) { start ( activity , REQUEST_CROP ) ; }
3488	public Builder flushIntervalMs ( int flushIntervalMs ) { this . _flushIntervalMicros = TimeUnit . MILLISECONDS . toMicros ( flushIntervalMs ) ; return this ; }
3501	public static void show ( Context context , int resId , int duration , int gravity ) { show ( context , resId == _NUM ? _NULL : getString ( context , resId ) , duration , gravity ) ; }
3523	private static void dumpAudioTypes ( ) { AudioFileFormat . Type [ ] types = AudioSystem . getAudioFileTypes ( ) ; for ( int i = _NUM ; i < types . length ; i ++ ) { System . out . println ( types [ i ] . getExtension ( ) ) ; } }
3528	public HarmonicCurveFitter withMaxIterations ( int newMaxIter ) { return new HarmonicCurveFitter ( initialGuess , newMaxIter ) ; }
3534	public synchronized static void removeLuaState ( int idx ) { states . add ( idx , _NULL ) ; }
3544	public static Builder builder ( ) { return new Builder ( ) ; }
3564	public GroupsGetByIdQuery groupIds ( List < String > value ) { return unsafeParam ( _CHAR group_ids _CHAR , value ) ; }
3606	public static boolean equalsNullSafe ( String s1 , String s2 ) { return s1 == _NULL ? s2 == _NULL : s1 . equals ( s2 ) ; }
3609	public GroupsGetMembersQueryWithFilter count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
3614	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set ignoreUnassigned = _CHAR ) ; boolean value = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . setIgnoreNoHits ( value ) ; }
3620	public ScratchoffController attach ( View scratchableLayout , View behindView ) { safelyStopProcessors ( ) ; this . scratchableLayout = scratchableLayout ; this . behindView = behindView ; return reset ( ) ; }
3655	public static SM_SYSTEM_MESSAGE STR_PARTY_HE_REJECT_INVITATION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3665	@ Override public void endConditional ( Augmentations augs ) throws XNIException { }
3678	public int writeFieldId ( FieldId fieldId ) { int off = data . position ( ) ; writeUnsignedShort ( fieldId . declaringClassIndex ) ; writeUnsignedShort ( fieldId . typeIndex ) ; writeInt ( fieldId . nameIndex ) ; return off ; }
3709	public static SM_SYSTEM_MESSAGE STR_OTHER_combine_SUCCESS ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
3710	public ContentletQuery addHost ( String hostIdentifier ) { query . append ( _CHAR + conhost : _CHAR + hostIdentifier ) ; return this ; }
3719	@ Override public void startConditional ( short type , Augmentations augmentations ) throws XNIException { }
3737	public void clearCommands ( ) { synchronized ( this ) { System . out . println ( _CHAR JETTISONING _CHAR + commandQueue . size ( ) + _CHAR COMMANDS _CHAR ) ; commandQueue . clear ( ) ; } }
3752	public void showContent ( List < Integer > skipIds ) { switchState ( CONTENT , _NULL , _NULL , _NULL , _NULL , _NULL , skipIds ) ; }
3761	public void addChildren ( final ReadDataLevelNode parent ) { parent . add ( new ReadDataNode ( parent . getData ( ) ) ) ; }
3764	public static void d ( String tag , String msg , Throwable tr ) { println ( DEBUG , tag , msg , tr ) ; }
3804	private void instantiate ( ) { managers = new AbstractAnnotationManager [ ] { new AnnotationContextManager ( androidUnitTest ) , new AnnotationActivityManager ( androidUnitTest ) , new AnnotationFragmentManager ( androidUnitTest ) , new AnnotationViewManager ( androidUnitTest ) } ; activityManager = ( AnnotationActivityManager ) managers [ _NUM ] ; fragmentManager = ( AnnotationFragmentManager ) managers [ _NUM ] ; }
3833	public boolean isGameEnd ( ) { return isGameEnd ; }
3852	public static boolean isModLoaded ( String id ) { return ID_MAP . containsKey ( id ) ; }
3856	public PhotosGetAlbumsQuery photoSizes ( Boolean value ) { return unsafeParam ( _CHAR photo_sizes _CHAR , value ) ; }
3895	public static ITextComponent readTextComponent ( PacketBuffer buf ) { return ITextComponent . a . jsonToComponent ( readString ( buf ) ) ; }
3904	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { fInCDATA = _BOOL ; if ( fDocumentHandler != _NULL ) { fDocumentHandler . endCDATA ( augs ) ; } }
3906	public static SM_SYSTEM_MESSAGE STR_SKILL_SUMMON_GUARD_MODE ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( value0 ) ) ; }
3921	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
3939	public void showContent ( ) { switchState ( CONTENT , _NULL , _NULL , _NULL , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
3959	public static < T > List < T > toList ( T obj1 , T obj2 , T obj3 ) { List < T > list = new LinkedList < T > ( ) ; list . add ( obj1 ) ; list . add ( obj2 ) ; list . add ( obj3 ) ; return list ; }
3998	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getSecondOfPairFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getSecondOfPairFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
4009	public static void o ( Z1 z ) { o ( z , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
4010	private Token peekNext ( ) { return currentToken ; }
4022	public static void mergeServiceDocuments ( ServiceDocument copyTo , ServiceDocument copyFrom ) { mergeServiceDocuments ( copyTo , copyFrom , SHALLOW_MERGE_STRATEGY ) ; }
4025	public void add ( String string ) { elements . add ( string == _NULL ? JsonNull . INSTANCE : new JsonPrimitive ( string ) ) ; }
4042	public void remove ( ) { buttonRemove . click ( ) ; }
4053	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { }
4092	private Json convertFile ( File file ) { try { return Json . read ( file . toURI ( ) . toURL ( ) ) ; } catch ( MalformedURLException e ) { LOG . warn ( _CHAR Problem reading Json file _CHAR + file . getPath ( ) ) ; return Json . object ( ) ; } }
4099	public void purgeCache ( IContainer root , boolean deep ) throws SVNException { statusCache . purgeCache ( root , deep ) ; }
4134	protected void at ( ) { at ( _BOOL ) ; }
4145	public boolean isSelected ( ) { return currentScope . getAttribute ( HtmlTags . Attributes . CLASS ) . contains ( _CHAR x - grid3 - row - selected _CHAR ) ; }
4148	public Fraction multiply ( final int i ) { return new Fraction ( numerator * i , denominator ) ; }
4156	private void doIndent ( ) throws XMLStreamException { if ( depth > _NUM ) { for ( int i = _NUM ; i < depth ; i ++ ) super . writeCharacters ( indentStep ) ; } }
4178	public static ContextSet fromMap ( Map < String , String > map ) { if ( map == _NULL ) { throw new NullPointerException ( _CHAR map _CHAR ) ; } MutableContextSet set = new MutableContextSet ( ) ; set . addAll ( map ) ; return set . immutableCopy ( ) ; }
4181	public final boolean isAlternatingLocale ( ) { return ( myAlternate & CFG_LOCALE ) != _NUM ; }
4190	public static void dropAllTables ( Database db , boolean ifExists ) { ChatMessageBeanDao . dropTable ( db , ifExists ) ; }
4197	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
4201	public void onDestroy ( ) { if ( ! players . isEmpty ( ) ) { onLastPlayerReleased ( ) ; } for ( AudioPlayer audio : this . players . values ( ) ) { audio . destroy ( ) ; } this . players . clear ( ) ; }
4208	private int wordBack ( int offset ) { int x = wordBI . preceding ( offset ) ; if ( x < offset - _NUM ) { x = offset ; } if ( x < _NUM ) { x = _NUM ; } return x ; }
4209	public static < T extends RealFieldElement < T >> FieldVector3D < T > crossProduct ( final FieldVector3D < T > v1 , final FieldVector3D < T > v2 ) { return v1 . crossProduct ( v2 ) ; }
4213	public void loadUrl ( String url ) { if ( appView == _NULL ) { init ( ) ; } this . keepRunning = preferences . getBoolean ( _CHAR KeepRunning _CHAR , _BOOL ) ; appView . loadUrlIntoView ( url , _BOOL ) ; }
4220	public void addNewFeatureTypeStyle ( FeatureTypeStyle featureTypeStyle ) { if ( this . symbolData . getStyle ( ) == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR style == _NULL _CHAR ) ; } else { List < FeatureTypeStyle > ftsList = this . symbolData . getStyle ( ) . featureTypeStyles ( ) ; ftsList . add ( featureTypeStyle ) ; } }
4223	public static double expm1 ( double x ) { return expm1 ( x , _NULL ) ; }
4231	public boolean removeEdge ( Edge e ) { edgeCheck ( e , _BOOL ) ; return removeEdge ( e . getRow ( ) ) ; }
4239	public boolean canFindAll ( ) { return _BOOL ; }
4258	public DistributedLogNamespaceBuilder conf ( DistributedLogConfiguration conf ) { this . _conf = conf ; return this ; }
4263	protected GroupsIsMemberQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
4281	private void checkConfiguration ( ) { if ( configuration == _NULL ) { throw new IllegalStateException ( ERROR_NOT_INIT ) ; } }
4283	public static void wtf ( String tag , String msg ) { wtf ( tag , msg , _NULL ) ; }
4286	void rollback ( ) { queryExecutor . submit ( _NULL ) ; }
4288	@ Override public void endAttlist ( Augmentations augmentations ) throws XNIException { }
4299	public static Configuration createRuleTag ( ) { Configuration configuration = new Configuration ( ) ; RuleTag ruleTag = RuleTag . create ( _CHAR RuleTag _CHAR , Integer . class , _CHAR ( # _NUM < _NUM ) | ( # _NUM > _NUM ) [ _NUM ] , _BOOL [ _NUM ] _CHAR ) . id ( _NUM ) . build ( ) ; configuration . addEntity ( ruleTag ) ; return configuration ; }
4334	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigColourMap copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigColourMap ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
4348	public int size ( ) { return fDepth ; }
4352	public char charAt ( int position ) { if ( s != _NULL && position >= _NUM && position < s . length ( ) ) { return s . charAt ( position ) ; } return _NUM ; }
4452	public void clear ( ) { clearHelper ( root ) ; root = factory . getQuadTreeNode ( ) ; }
4458	public int key ( ) throws ConcurrentModificationException , NoSuchElementException { if ( referenceCount != count ) { throw new ConcurrentModificationException ( ) ; } if ( current < _NUM ) { throw new NoSuchElementException ( ) ; } return keys [ current ] ; }
4471	public void addSet ( String name , TupleSet set ) { if ( hasSet ( name ) ) { throw new IllegalArgumentException ( _CHAR Name already in use : _CHAR + name ) ; } m_map . put ( name , set ) ; m_sets . add ( set ) ; m_count += set . getTupleCount ( ) ; if ( m_lstnr != _NULL ) set . addTupleSetListener ( m_lstnr ) ; }
4472	public static ServerRequest [ ] appendCheckChallenge ( ServerRequest request ) { return new ServerRequest [ ] { request , new ServerRequest ( RequestType . CHECK_CHALLENGE , CheckChallengeMessage . getDefaultInstance ( ) ) } ; }
4487	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . flush ( ) ; }
4501	public void drawChartTransposed ( Graphics2D gc ) { gc . setFont ( getFont ( ChartViewer . FontKeys . XAxisFont . toString ( ) ) ) ; }
4515	public synchronized void press ( ) { this . press ( _NUM ) ; }
4528	public static SM_SYSTEM_MESSAGE STR_BUY_SELL_HE_DOES_NOT_BUY_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4534	@ Override public List < WebElement > findElementsByPartialLinkText ( String partialLinkText ) { return ( ( FindsByLinkText ) super . getWrappedDriver ( ) ) . findElementsByPartialLinkText ( partialLinkText ) ; }
4592	public static String extractHostId ( String hostId ) { AssertUtil . assertNotNull ( hostId , _CHAR hostId _CHAR ) ; int idx = hostId . indexOf ( HOST_ID_TENANT_SEPARATOR ) ; String id = hostId ; if ( idx != - _NUM ) { id = hostId . substring ( idx + HOST_ID_TENANT_SEPARATOR . length ( ) ) ; } return id ; }
4641	private FilterPanelInterface internal_getFilterPanel ( String hints ) { return new FilterPanelv2 ( this . vendorOptionVersionsList ) ; }
4670	private void readObject ( ObjectInputStream in ) throws IOException { _readExternal ( in ) ; }
4678	public static void multInBuffer ( Vector3f toMult , FloatBuffer buf , int index ) { Vector3f tempVec3 = Vector3f . newInstance ( ) ; populateFromBuffer ( tempVec3 , buf , index ) ; tempVec3 . multLocal ( toMult ) ; setInBuffer ( tempVec3 , buf , index ) ; Vector3f . recycle ( tempVec3 ) ; }
4689	public void addEntry ( Label start , Label end , Label handler , CP cat ) { addEntry ( new CatchEntry ( start , end , handler , cat ) ) ; }
4695	public FieldVector3D < T > add ( final FieldVector3D < T > v ) { return new FieldVector3D < T > ( x . add ( v . x ) , y . add ( v . y ) , z . add ( v . z ) ) ; }
4740	public synchronized void stop ( ) { this . running = _BOOL ; if ( runningThread != _NULL ) runningThread . interrupt ( ) ; }
4749	public void detach ( ) { mEffect . removeParameter ( mParameter ) ; mEffect = _NULL ; }
4803	@ Override public void onResponse ( GankData response ) { getContentText . setText ( response . toString ( ) ) ; }
4880	@ Override public void onLoadContentProgress ( int loadPercent ) { }
4894	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
4904	public synchronized void removeAll ( ) { list . clear ( ) ; }
4958	public static void main ( String [ ] args ) { Ragdoll simulation = new Ragdoll ( ) ; simulation . run ( ) ; }
5001	public static SM_SYSTEM_MESSAGE STR_PERSONAL_SHOP_SOLD_OUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5014	@ Override public void loadData ( ) { return ; }
5033	@ Override public void addListener ( DataSourceUpdatedInterface listener ) { if ( ! listenerList . contains ( listener ) ) { listenerList . add ( listener ) ; if ( getGeometryType ( ) != GeometryTypeEnum . UNKNOWN ) { notifyDataSourceLoaded ( ) ; } } }
5039	private static int perturb ( final int hash ) { return hash & _NUM ; }
5041	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_CHARGE_FAIL_NOT_CHARGEABLE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5053	public AdsCreateClientsQuery createClients ( UserActor actor , int accountId , String data ) { return new AdsCreateClientsQuery ( getClient ( ) , actor , accountId , data ) ; }
5114	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigDate copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigDate ( getCommonData ( ) ) ; } return copy ; }
5181	public Builder addAction ( String actionType , Action action ) { mActions . add ( new ActionPair ( actionType , action ) ) ; return this ; }
5220	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigFilename copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigFilename ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
5250	public Entry copy ( ) { return new Entry ( x , y , data ) ; }
5267	public static void checkMatrixIndex ( final AnyMatrix m , final int row , final int column ) throws MathIllegalArgumentException { checkRowIndex ( m , row ) ; checkColumnIndex ( m , column ) ; }
5272	public void clear ( ) { this . results . clear ( ) ; }
5308	public void select ( ) { checkboxElement . click ( ) ; }
5328	public int size ( ) { return sequences . length ; }
5338	private static void deleteRecursiveSilent ( CarbonFile f ) { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursiveSilent ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { return ; } }
5358	public void clear ( ) { uid = _NUM ; bitScore = _NUM ; percentIdentity = _NUM ; refSeqId = _NULL ; expected = _NUM ; length = _NUM ; ignore = _BOOL ; text = _NULL ; cName2id . clear ( ) ; }
5375	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set showAxes = _CHAR ) ; boolean show = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; final ClusterViewer viewer = getViewer ( ) ; viewer . getPcoaTab ( ) . setShowAxes ( show ) ; }
5393	public DistributedLogClientBuilder statsReceiver ( StatsReceiver statsReceiver ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _statsReceiver = statsReceiver ; return newBuilder ; }
5426	public void process ( int direction , IReplicationFilterEntry replicationFilterEntry , String remoteSpaceMemberName ) { if ( ! isInitialized ( ) ) return ; _filter . process ( direction , replicationFilterEntry , remoteSpaceMemberName ) ; }
5428	public static void createAircraft ( AirMapAircraft aircraft , @ Nullable AirMapCallback < AirMapAircraft > callback ) { PilotService . createAircraft ( aircraft , callback ) ; }
5431	protected PhotosReportCommentQuery commentId ( int value ) { return unsafeParam ( _CHAR comment_id _CHAR , value ) ; }
5434	public Quaternion subtract ( final Quaternion q ) { return subtract ( this , q ) ; }
5448	public static void writeNBTList ( PacketBuffer buf , NBTTagList value ) { buf . writeInt ( value . tagCount ( ) ) ; for ( int i = _NUM ; i < value . tagCount ( ) ; i ++ ) { buf . writeNBTTagCompoundToBuffer ( value . getCompoundTagAt ( i ) ) ; } }
5454	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set show - reference = _CHAR ) ; boolean value = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . getAlignmentViewerPanel ( ) . setShowReference ( value ) ; }
5490	public FriendsGetOnlineQuery onlineMobile ( Boolean value ) { return unsafeParam ( _CHAR online_mobile _CHAR , value ) ; }
5493	public Set < Speaker > find ( final Speaker speaker ) { final ArrayList < Speaker > speakers = new ArrayList < > ( ) ; speakers . addAll ( this . speakers . values ( ) ) ; CollectionUtils . filter ( speakers , _NULL ) ; if ( ! speakers . isEmpty ( ) ) { return new HashSet < > ( speakers ) ; } return Collections . emptySet ( ) ; }
5506	public void writeOp ( LogRecord record ) throws IOException { record . writeToStream ( buf ) ; }
5528	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getNotPrimaryAlignmentFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getNotPrimaryAlignmentFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
5578	public boolean isEmpty ( ) { return buckets_ . isEmpty ( ) ; }
5593	public int length ( ) { return fLength ; }
5612	public static Zutmat o ( Zutmat U ) throws JampackException { if ( U . nrow != U . ncol ) throw new JampackException ( _CHAR Can not compute the inverse of a rectangular matrix . '' ) ; return new Zutmat ( Solve . aib ( U , Eye . o ( U . nrow ) ) ) ; }
5613	public static void e ( String c , String s ) { if ( isEnable ( ) ) { if ( s == _NULL ) s = _CHAR \ _CHAR NULL \ _CHAR _CHAR ; Log . e ( c , s ) ; } }
5616	public String stacktrace ( ) { return stacktrace ; }
5623	public void forceMoveToPrimary ( ) throws RemoteException { if ( getState ( ) == State . ACTIVE ) return ; changeState ( State . PENDING , State . ACTIVE , _BOOL ) ; notifyListenerOnActive ( new ServiceItem ( _electTemplate . getServiceID ( ) , _electTemplate . getService ( ) , _NULL ) ) ; }
5656	private void checkIndex ( final int index ) throws MathIllegalArgumentException { if ( index < _NUM || index >= getDimension ( ) ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . INDEX , index , _NUM , getDimension ( ) - _NUM ) ; } }
5658	@ Override public void write ( PacketBuffer buf , Packet packet ) { buf . writeInt ( getID ( packet . spec ) ) ; }
5674	public void notify ( RemoteEvent event ) throws UnknownEventException , RemoteException { RemoteEventListener l = get ( ) ; if ( l != _NULL ) { l . notify ( event ) ; } }
5677	public boolean checkLogin ( int accountId , int loginOk ) { return this . accountId == accountId && this . loginOk == loginOk ; }
5679	static boolean isYearLeap ( int y ) { if ( ( ( y % _NUM == _NUM ) && ( y % _NUM != _NUM ) ) || ( y % _NUM == _NUM ) ) { return _BOOL ; } else { return _BOOL ; } }
5681	public NotesEditCommentQuery editComment ( UserActor actor , int commentId ) { return new NotesEditCommentQuery ( getClient ( ) , actor , commentId ) ; }
5699	public static Quaternion add ( final Quaternion q1 , final Quaternion q2 ) { return new Quaternion ( q1 . getQ0 ( ) + q2 . getQ0 ( ) , q1 . getQ1 ( ) + q2 . getQ1 ( ) , q1 . getQ2 ( ) + q2 . getQ2 ( ) , q1 . getQ3 ( ) + q2 . getQ3 ( ) ) ; }
5715	public void dispose ( ) { myFileStructure . dispose ( ) ; }
5725	protected static void addSourceFileTag ( SootClass sc , String fileName ) { soot . tagkit . SourceFileTag tag = _NULL ; if ( sc . hasTag ( _CHAR SourceFileTag _CHAR ) ) { return ; } else { tag = new soot . tagkit . SourceFileTag ( ) ; sc . addTag ( tag ) ; } tag . setSourceFile ( fileName ) ; }
5726	public synchronized ZooKeeperClientBuilder sessionTimeoutMs ( int sessionTimeoutMs ) { this . sessionTimeoutMs = sessionTimeoutMs ; if ( this . conectionTimeoutMs <= _NUM ) { this . conectionTimeoutMs = _NUM * sessionTimeoutMs ; } return this ; }
5734	public static Beans < User > load ( W q , int offset , int limit ) { return Helper . load ( q . sort ( _CHAR name _CHAR , _NUM ) , offset , limit , User . class ) ; }
5749	protected void onBindHeaderViewHolder ( RecyclerView . ViewHolder holder , int position ) { }
5781	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HE_ENTERED_ALLIANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5785	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_VOICE_START_NOTIFY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5792	public static < K , E > boolean isEmpty ( Map < K , E > m ) { return ( m == _NULL ) || m . isEmpty ( ) ; }
5795	private void observe ( Future < ? > future ) { Observable observable = new Observable ( future , timeout ) ; queue . add ( observable ) ; }
5800	public void onOperationsBatchSynchronization ( OperationsBatchData batchData ) { }
5806	public boolean isValid ( ) { return wind != _NULL && condition != _NULL && ! condition . isEmpty ( ) ; }
5824	@ Deprecated public Builder cacheOnDisc ( ) { return cacheOnDisk ( _BOOL ) ; }
5828	public void incrementSelectedFTSIndex ( ) { this . selectedFTSIndex ++ ; }
5829	public static LineIterator toLineIterator ( BufferedReader r ) { return new BuffReadIter ( r ) ; }
5833	@ Override public void writePacketData ( PacketBuffer buf ) throws IOException { buf . writeInt ( ChannelManager . getID ( channel ) ) ; channel . write ( buf , packet ) ; }
5853	public static String computeSimpsonReciprocal ( ViewerBase viewer , ProgressListener progressListener ) throws IOException , CanceledException { if ( viewer instanceof MainViewer ) return toString ( computeSimpsonReciprocal ( ( MainViewer ) viewer , progressListener ) ) ; else if ( viewer instanceof ClassificationViewer ) return toString ( computeSimpsonReciprocal ( ( ClassificationViewer ) viewer , progressListener ) ) ; else return _NULL ; }
5870	protected void hideContextualSearch ( boolean immediately ) { }
5871	public void apply ( NexusStreamParser np ) throws Exception { }
5874	@ Override public void startAttlist ( String elementName , Augmentations augs ) throws XNIException { }
5899	public DistributedLogClientBuilder streamFailfast ( boolean enabled ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setStreamFailfast ( enabled ) ; return newBuilder ; }
5901	public static boolean isPcm ( AudioFormat . Encoding encoding ) { return encoding . equals ( AudioFormat . Encoding . PCM_SIGNED ) || encoding . equals ( AudioFormat . Encoding . PCM_UNSIGNED ) ; }
5954	public ContentletQuery addHost ( Host host ) { return addHost ( host . getIdentifier ( ) ) ; }
5957	public void move ( Point p ) { move ( p . x , p . y ) ; }
5977	private HttpURLConnection acquireNextHost ( ) { String host = nextHost ( ) ; while ( ! availability . get ( host ) . tryAcquire ( ) ) { host = nextHost ( ) ; } return getHost ( host , POST ) ; }
5998	public String toString ( ) { return _CHAR PartOfSpeechTagger _CHAR ; }
6029	protected String millisecondsToYearMonth ( long millis ) { return getSimpleDateFormatForMilliseconds ( _CHAR yyyy - MM _CHAR , millis ) ; }
6033	public void incrementValue ( T v , long increment ) { Long count = freqTable . getOrDefault ( v , Long . valueOf ( _NUM ) ) ; freqTable . put ( v , Long . valueOf ( count . longValue ( ) + increment ) ) ; }
6047	public int key ( ) throws ConcurrentModificationException , NoSuchElementException { if ( referenceCount != count ) { throw new ConcurrentModificationException ( ) ; } if ( current < _NUM ) { throw new NoSuchElementException ( ) ; } return keys [ current ] ; }
6052	public Times times ( Task task ) { return new Times ( this . executor_ , task ) ; }
6062	private static String extractTextData ( Document document , String elementName ) { String value = _CHAR _CHAR ; NodeList nodeList = document . getElementsByTagName ( elementName ) ; if ( nodeList . getLength ( ) > _NUM ) { value = nodeList . item ( _NUM ) . getTextContent ( ) ; } return value ; }
6105	public final TestSubscriber < T > assertNoValues ( ) { if ( valueCount != _NUM ) { throw new AssertionError ( _CHAR No values expected but received : [ length = _CHAR + values . size ( ) + _CHAR ] _CHAR + values , _NULL ) ; } return this ; }
6107	public final void writePos ( final Point s ) { writeShort ( s . x ) ; writeShort ( s . y ) ; }
6112	public double distance ( Coord coord ) { return Math . sqrt ( distanceSquare ( coord ) ) ; }
6115	@ Override public Scan open ( ) { Scan s = p1 . open ( ) ; TableScan ts = ( TableScan ) tp2 . open ( ) ; Index idx = ii . open ( tx ) ; return new IndexJoinScan ( s , idx , joinField , ts ) ; }
6117	public static void i ( String tag , String msg , Throwable tr ) { println ( INFO , tag , msg , tr ) ; }
6129	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { BookDao . createTable ( db , ifNotExists ) ; }
6135	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_PARRY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6144	private T max ( T a , T b ) { return a . getReal ( ) > b . getReal ( ) ? a : b ; }
6147	public AXmlNode addChild ( AXmlNode child ) { if ( this . children == _NULL ) this . children = new ArrayList < AXmlNode > ( ) ; this . children . add ( child ) ; return this ; }
6161	public static void o ( Zdiagmat D ) { o ( D , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
6167	String nextConsumerId ( ) { return m_sessionID + _CHAR _cons_ _CHAR + m_consumersC . increment ( ) ; }
6169	@ Override public IBinder onBind ( Intent intent ) { return _NULL ; }
6189	public static long subtractExact ( final long a , final long b ) { final long sub = a - b ; if ( ( a ^ b ) < _NUM && ( sub ^ b ) >= _NUM ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_SUBTRACTION , a , b ) ; } return sub ; }
6199	public int indexType ( ) { return idxType ; }
6204	public TapTarget transparentTarget ( boolean transparent ) { this . transparentTarget = transparent ; return this ; }
6207	public During during ( ConditionalTask cond , Task task ) { return new During ( this . executor_ , cond , task ) ; }
6211	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set summarized = _CHAR ) ; boolean value = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; ( ( ExtractReadsViewer ) getViewer ( ) ) . setIncludeSummarized ( value ) ; }
6244	public static SM_SYSTEM_MESSAGE STR_WATINGTIME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6248	protected Combo createCombo ( Composite parent ) { Combo combo = new Combo ( parent , SWT . READ_ONLY ) ; GridData data = new GridData ( GridData . FILL_HORIZONTAL ) ; data . widthHint = IDialogConstants . ENTRY_FIELD_WIDTH ; combo . setLayoutData ( data ) ; return combo ; }
6251	public SimpleCurveFitter withMaxIterations ( int newMaxIter ) { return new SimpleCurveFitter ( function , initialGuess , newMaxIter ) ; }
6266	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
6275	public void remove ( String key ) { urlParams . remove ( key ) ; streamParams . remove ( key ) ; fileParams . remove ( key ) ; urlParamsWithObjects . remove ( key ) ; }
6282	@ Override public Dfp abs ( ) { Dfp result = newInstance ( this ) ; result . sign = _NUM ; return result ; }
6286	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
6294	public long increaseEquippedItemCount ( Item item , long count ) { if ( item . getItemTemplate ( ) . getCategory ( ) != ItemCategory . SHARD ) { return count ; } long leftCount = item . increaseItemCount ( count ) ; ItemPacketService . updateItemAfterInfoChange ( owner , item , ItemUpdateType . STATS_CHANGE ) ; setPersistentState ( PersistentState . UPDATE_REQUIRED ) ; return leftCount ; }
6327	public static SM_SYSTEM_MESSAGE STR_COMPOUND_ERROR_NOT_AVAILABLE ( int i ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( i ) ) ; }
6347	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
6351	public void updateProfile ( GetPlayerResponse playerResponse ) { updateProfile ( playerResponse . getPlayerData ( ) ) ; }
6354	public PhotosRemoveTagQuery removeTag ( UserActor actor , int photoId , int tagId ) { return new PhotosRemoveTagQuery ( getClient ( ) , actor , photoId , tagId ) ; }
6361	public AccountGetCountersQuery filter ( AccountGetCountersFilter ... value ) { return unsafeParam ( _CHAR filter _CHAR , value ) ; }
6374	GSMessageImpl duplicate ( ) throws JMSException { GSMessageImpl dup = new GSMessageImpl ( ) ; copyTo ( dup ) ; return dup ; }
6390	public void addDependency ( Dependency dependency ) { this . arcs . add ( dependency ) ; }
6399	private int klattRule5 ( Element segment ) { Element token = getToken ( segment ) ; if ( isPolysyllabic ( token ) ) { if ( isInNucleus ( segment ) ) { return getPropertyAsInteger ( _CHAR rule5 . nucleus _CHAR ) ; } } return _NUM ; }
6441	private static boolean validGeometryFieldName ( Expression geometryField ) { return ( ( geometryField != _NULL ) && ( geometryField . toString ( ) != _NULL ) && ! geometryField . toString ( ) . trim ( ) . isEmpty ( ) ) ; }
6458	public MessagesCreateChatQuery createChat ( UserActor actor , int ... userIds ) { return new MessagesCreateChatQuery ( getClient ( ) , actor , userIds ) ; }
6467	public boolean isApplyGroups ( ) { return this . applyGroups ; }
6471	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
6483	public boolean isFontAntiAliasing ( ) { return fontAntiAliasing ; }
6485	public MarketAddQuery add ( UserActor actor , int ownerId , String name , String description , int categoryId , float price , int mainPhotoId ) { return new MarketAddQuery ( getClient ( ) , actor , ownerId , name , description , categoryId , price , mainPhotoId ) ; }
6513	public boolean isMaintainAspectRatio ( ) { return maintainAspectRatio ; }
6528	public static SM_SYSTEM_MESSAGE STR_ENCHANT_ITEM_IT_CAN_NOT_BE_ENCHANTED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6538	public void showLoading ( ) { switchState ( LOADING , _NULL , _NULL , _NULL , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
6539	public void clear ( ) { Arrays . fill ( ritems , _NUM , rsize , _NULL ) ; Arrays . fill ( pitems , _NUM , psize , _NULL ) ; rsize = _NUM ; psize = _NUM ; }
6562	String inprogressZNode ( long ledgerId , long firstTxId , long logSegmentSeqNo ) { return logMetadata . getLogSegmentsPath ( ) + _CHAR / _CHAR + inprogressZNodeName ( ledgerId , firstTxId , logSegmentSeqNo ) ; }
6581	public StringProperty lastReceivedTimestampProperty ( ) { return lastReceivedTimestamp ; }
6592	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { }
6636	@ PreDestroy public void shutdown ( ) { LOGGER . info ( _CHAR shutdown - Stopping tag publisher . '' ) ; republisher . stop ( ) ; }
6640	@ Override public void onAction ( Object actionData ) { mSnackbarManager . dismissSnackbars ( this ) ; mTab . reloadDisableLoFi ( ) ; DataReductionProxySettings . getInstance ( ) . incrementLoFiUserRequestsForImages ( ) ; DataReductionProxyUma . dataReductionProxyLoFiUIAction ( DataReductionProxyUma . ACTION_LOAD_IMAGES_SNACKBAR_CLICKED ) ; }
6671	public static void uinstallApplication ( final Context context , final String packageName ) { final Intent intent = new Intent ( Intent . ACTION_DELETE , Uri . fromParts ( _CHAR package '' , packageName , null ) ) ; context . startActivity ( intent ) ; }
6672	private void expectException ( ) { expectedException . expect ( IllegalArgumentException . class ) ; expectedException . expectMessage ( EMPTY_ERROR_MESSAGE ) ; }
6673	public Fraction subtract ( final int i ) { return new Fraction ( numerator - i * denominator , denominator ) ; }
6679	public PhotosGetCommentsQueryWithExtended needLikes ( Boolean value ) { return unsafeParam ( _CHAR need_likes _CHAR , value ) ; }
6681	protected void performOutgoingBehavior ( ExecutionEntity execution , boolean checkConditions , boolean throwExceptionIfExecutionStuck ) { Context . getAgenda ( ) . planTakeOutgoingSequenceFlowsOperation ( execution , _BOOL ) ; }
6684	public void toPlayer ( EntityPlayerMP player ) { player . connection . sendPacket ( new PacketWrapper ( channel , new Packet ( this ) ) ) ; }
6695	public static void xml ( String xml ) { printer . xml ( xml ) ; }
6731	public Builder withStreaming ( ) { this . streaming = _BOOL ; return this ; }
6749	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
6765	public boolean isAITicTacToc ( ) { return isAITicTacToc ; }
6771	public void removeRepurchaseItems ( Player player ) { repurchaseItems . removeAll ( player . getObjectId ( ) ) ; }
6797	public static void logSelectionIsValid ( boolean isSelectionValid ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchSelectionValid _CHAR , isSelectionValid ? SELECTION_VALID : SELECTION_INVALID , SELECTION_BOUNDARY ) ; }
6810	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; journalWriter . flush ( ) ; }
6816	private ExpressionPanelInterface internal_getExpressionPanel ( String hints ) { return new ExpressionPanelv2 ( this . vendorOptionVersionsList ) ; }
6829	public static void d ( String tag , String s , Object ... args ) { if ( LOG . DEBUG >= LOGLEVEL ) Log . d ( tag , String . format ( s , args ) ) ; }
6833	public static void show ( Context context , CharSequence msg , int duration ) { show ( context , msg , duration , DEFAULT_GRAVITY ) ; }
6837	public void changeCurrentItem ( int indexToChange ) { if ( indexToChange < _NUM || indexToChange > spaceItems . size ( ) ) throw new ArrayIndexOutOfBoundsException ( _CHAR Please be more careful , we do _CHAR_CHAR + indexToChange ) ; else { updateSpaceItems ( indexToChange ) ; } }
6854	@ Override public String toString ( ) { return name ; }
6856	public static ActAction act ( float delta ) { ActAction action = action ( ActAction . class ) ; action . setDelta ( delta ) ; return action ; }
6891	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . getJList ( ) . clearSelection ( ) ; }
6892	public boolean hasErrors ( ) { return getDiagCollector ( ) . hasErrors ( ) ; }
6906	public static String removeLastDelimiter ( String topic ) { if ( topic . endsWith ( TOPIC_DELIMITER ) ) { topic = topic . substring ( _NUM , topic . length ( ) - TOPIC_DELIMITER . length ( ) ) ; } return topic ; }
6915	public void stop ( ) { running = _BOOL ; try { client . close ( ) ; } catch ( IOException exception ) { LOG . error ( _CHAR Exception while closing EtcdFlagFieldUpdater . '' , exception ) ; } }
6924	protected Bindings createBindings ( VariableScope variableScope , boolean storeScriptVariables ) { return scriptBindingsFactory . createBindings ( variableScope , storeScriptVariables ) ; }
6932	public void put ( String key , File file , String contentType ) throws FileNotFoundException { if ( key != _NULL && file != _NULL ) { fileParams . put ( key , new FileWrapper ( file , contentType ) ) ; } }
6967	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { TcNoteDao . createTable ( db , ifNotExists ) ; CustomerDao . createTable ( db , ifNotExists ) ; }
7006	public void configureDetailsArea ( DetailsAreaConfiguration detailsAreaConfiguration , int location ) { DisplayArea displayArea = getDisplayArea ( location ) ; if ( displayArea != _NULL ) { displayArea . setCaption ( detailsAreaConfiguration . getName ( ) ) ; displayArea . setClosable ( detailsAreaConfiguration . isClosable ( ) ) ; } }
7023	public Vector add ( Vector other ) { return new Vector ( x + other . x , y + other . y ) ; }
7075	static void schedule ( Activity a ) { getInstance ( ) . _schedule ( a , a . getStartTime ( ) ) ; }
7080	public void dump ( String title ) { dump ( new PrintWriter ( System . out ) , _NUM , title , _BOOL ) ; }
7103	public void removeEntryIndexedField ( IEntryHolder eh , Object fieldValue , TemplateCacheInfo pTemplate , IObjectInfo oi ) { removeNonUniqueIndexedField ( eh , fieldValue , pTemplate , oi ) ; _size . decrementAndGet ( ) ; }
7140	public boolean jdbcCompliant ( ) { return _BOOL ; }
7143	public static SM_SYSTEM_MESSAGE STR_EXCHANGE_HE_REJECTED_EXCHANGE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
7146	public void apply ( NexusStreamParser np ) throws Exception { }
7149	GSMessageImpl duplicate ( ) throws JMSException { GSBytesMessageImpl dup = new GSBytesMessageImpl ( ) ; copyTo ( dup ) ; return dup ; }
7155	public static SM_SYSTEM_MESSAGE STR_SKILL_SUMMON_STAY_MODE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
7159	public final boolean isAlternatingTarget ( ) { return ( myAlternate & CFG_TARGET ) != _NUM ; }
7176	private static void deleteRecursiveSilent ( CarbonFile f ) { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursiveSilent ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { return ; } }
7203	public byte [ ] readBytes ( ) { return readBytes ( _NUM , Page . pageSize ) ; }
7270	@ Provides @ Singleton @ BlobStoreZooKeeper CuratorFramework provideBlobStoreZooKeeperConnection ( @ Global CuratorFramework curator ) { return withComponentNamespace ( curator , _CHAR blob _CHAR ) ; }
7291	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stumble_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
7293	public String toString ( ) { return new String ( super . toString ( ) + _CHAR with current value : _CHAR + getStateLabel ( getValue ( ) ) ) ; }
7309	public void doUndo ( ) { if ( undo . canUndo ( ) ) { undo . undo ( ) ; parse ( ) ; } }
7314	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { VideoBeanDao . createTable ( db , ifNotExists ) ; }
7315	public Map < String , Object [ ] > highlightToObjects ( String fieldsIn [ ] , Query query , IndexSearcher searcher , int docidsIn [ ] , int maxPassagesIn [ ] ) throws IOException { return super . highlightFieldsAsObjects ( fieldsIn , query , searcher , docidsIn , maxPassagesIn ) ; }
7343	public PhotosGetByIdQueryWithExtended photoSizes ( Boolean value ) { return unsafeParam ( _CHAR photo_sizes _CHAR , value ) ; }
7397	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
7443	public boolean isResizeable ( ) { return resizeable ; }
7459	public void resetOffset ( ) { mXInStackInfluence = _NUM . _NUM ; mYInStackInfluence = _NUM . _NUM ; mScrollOffset = _NUM . _NUM ; mXInStackOffset = _NUM . _NUM ; mYInStackOffset = _NUM . _NUM ; mXOutOfStack = _NUM . _NUM ; mYOutOfStack = _NUM . _NUM ; mDiscardOriginX = _NUM . f ; mDiscardOriginY = _NUM . f ; mDiscardFromClick = _BOOL ; }
7471	public Iterator iterator ( ) { return name2index . keySet ( ) . iterator ( ) ; }
7475	@ Override public void modelChanged ( @ NotNull NlModel model ) { if ( myDesignSurface != _NULL ) { updateDeviceConfiguration ( myDesignSurface . getConfiguration ( ) ) ; updateComponents ( model . getComponents ( ) ) ; updateScreenNumber ( myDesignSurface ) ; myMiniMap . repaint ( ) ; } }
7500	public boolean onUpOrCancel ( ) { boolean state = isPressed ( ) ; setPressed ( _BOOL ) ; return state ; }
7503	public static boolean canUseSkill ( Player player , Skill skill ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canUseSkill . ordinal ( ) ] ) { if ( ! restrictions . canUseSkill ( player , skill ) ) { return _BOOL ; } } return _BOOL ; }
7514	@ Override public void close ( ) throws IOException { OutputStream output = m_streams . get ( ) ; if ( _NULL != output ) { output . close ( ) ; } }
7537	public static void w ( String tag , String s , Object ... args ) { if ( LOG . WARN >= LOGLEVEL ) Log . w ( tag , String . format ( s , args ) ) ; }
7568	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigGeometry copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigGeometry ( fieldConfigBase . getCommonData ( ) , this . buttonText ) ; } return copy ; }
7584	public FriendsGetOnlineQueryWithMobile onlineMobile ( Boolean value ) { return unsafeParam ( _CHAR online_mobile _CHAR , value ) ; }
7593	public PhotosDeleteCommentQuery deleteComment ( UserActor actor , int commentId ) { return new PhotosDeleteCommentQuery ( getClient ( ) , actor , commentId ) ; }
7615	public boolean isBuiltInSelected ( ) { return builtInSelected ; }
7627	public void reportBadSelectors ( DiagCollector collector , ConfigLocationResolver configLocationResolver , String category ) { reportBadSelectors ( collector , configLocationResolver , category , _CHAR _CHAR ) ; }
7658	private void flushLiteral ( List < Elem > elems , StringBuilder sb ) { if ( sb . length ( ) > _NUM ) { elems . add ( Lit . create ( input . location ( ) , Doc . text ( sb . toString ( ) ) ) ) ; sb . delete ( _NUM , sb . length ( ) ) ; } }
7689	@ Override public void flush ( ) { }
7695	public static void wtf ( String tag , String msg , Throwable tr ) { println ( ASSERT , tag , msg , tr ) ; }
7700	public static boolean locationFileExists ( ) { return LOCATION_FILE . exists ( ) ; }
7707	public void dispose ( ) { myFileStructure . dispose ( ) ; }
7712	public static FeatureTypeStyle createNewFeatureTypeStyle ( ) { FeatureTypeStyle featureTypeStyle = styleFactory . createFeatureTypeStyle ( ) ; return featureTypeStyle ; }
7736	public void invalidateCache ( int start , int end ) { m_valid . clear ( start , end + _NUM ) ; }
7741	public static void registerFuel ( Block block , int duration ) { registerFuel ( new ItemStack ( block , _NUM , ItemStackDictionary . WILDCARD_METADATA ) , duration ) ; }
7811	public boolean displayNotification ( ) { return _BOOL ; }
7824	@ Override public RecordReader createReader ( InputSplit split , Configuration conf ) throws IOException , InterruptedException { RecordReader reader = new ListStringRecordReader ( ) ; reader . initialize ( conf , split ) ; return reader ; }
7826	public ResourceLazyLoadingScript metaArguments ( Object ... metaArguments ) { this . metaArguments = metaArguments ; return this ; }
7842	private static boolean isAccented ( Item item ) { return ( item . getFeatures ( ) . isPresent ( _CHAR accent _CHAR ) || item . getFeatures ( ) . isPresent ( _CHAR endtone _CHAR ) ) ; }
7878	public AdsGetSuggestionsQuery lang ( AdsGetSuggestionsLang value ) { return unsafeParam ( _CHAR lang _CHAR , value ) ; }
7883	@ Override public void addEnvVarUpdatedListener ( EnvVarUpdateInterface listener ) { if ( ! listenerList . contains ( listener ) ) { listenerList . add ( listener ) ; } }
7893	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
7929	public void addServiceItems ( ServiceMatches matches ) { if ( matches == _NULL || matches . items == _NULL ) { return ; } for ( ServiceItem item : matches . items ) { serviceItems . put ( item . serviceID , item ) ; } }
7939	@ Override public boolean isEntityUnparsed ( String name ) { return ( fUnparsedEntityChecking ) ? super . isEntityUnparsed ( name ) : _BOOL ; }
7954	protected Object cloneBody ( ) { return Body ; }
7964	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
7966	@ Override public void endAttlist ( Augmentations augmentations ) throws XNIException { }
7974	@ Override public int next ( ) { moveToNext ( ) ; return matchesInResult ; }
7976	public static String [ ] split ( String str ) { return split ( str , ESCAPE_CHAR , COMMA ) ; }
7986	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set useColors = _CHAR ) ; boolean useColors = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; ClusterViewer viewer = getViewer ( ) ; viewer . setUseColors ( useColors ) ; }
8006	public void add ( Character character ) { elements . add ( character == _NULL ? JsonNull . INSTANCE : new JsonPrimitive ( character ) ) ; }
8047	public static boolean isToday ( Date date ) { return android . text . format . DateUtils . isToday ( date . getTime ( ) ) ; }
8074	public PhotosGetByIdQuery photoSizes ( Boolean value ) { return unsafeParam ( _CHAR photo_sizes _CHAR , value ) ; }
8088	public boolean isBintersects ( BitSet H ) { return B . intersects ( H ) ; }
8108	private void startWaveEasternShieldGenerator1 ( ) { sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR EasternShieldGenerator1 _CHAR ) ; sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR EasternShieldGenerator2 _CHAR ) ; sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR EasternShieldGenerator3 _CHAR ) ; }
8126	public boolean isNullValue ( ) { return StringUtils . trimToNull ( value ) == _NULL && StringUtils . trimToNull ( comment ) == _NULL ; }
8140	public static TypeArray v ( int size ) { TypeArray newArray = new TypeArray ( ) ; newArray . types = new Type [ size ] ; for ( int i = _NUM ; i < size ; i ++ ) newArray . types [ i ] = UnusuableType . v ( ) ; return newArray ; }
8198	@ Override public void close ( ) throws IOException { InputStream input = m_streams . get ( ) ; if ( _NULL != input ) { input . close ( ) ; } }
8202	private boolean appendFilter ( ) { if ( isFiltering ( ) ) { useFilteredFromEntries ( filteredEntries ) ; return _BOOL ; } return applyFilter ( ) ; }
8207	public static String readString ( DataInput in ) throws IOException { int length = WritableUtils . readVInt ( in ) ; byte [ ] bytes = new byte [ length ] ; in . readFully ( bytes , _NUM , length ) ; return decode ( bytes ) ; }
8238	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
8272	public boolean isMinIsZero ( ) { return minIsZero ; }
8275	public static void broadcastPacketAndReceive ( VisibleObject visibleObject , AionServerPacket packet ) { if ( visibleObject instanceof Player ) { sendPacket ( ( Player ) visibleObject , packet ) ; } broadcastPacket ( visibleObject , packet ) ; }
8297	public static String combineGetMethodName ( String fieldName ) { return _CHAR get _CHAR + fieldName . substring ( _NUM , _NUM ) . toUpperCase ( ) + fieldName . substring ( _NUM ) ; }
8299	public FaveRemoveUserQuery removeUser ( UserActor actor , int userId ) { return new FaveRemoveUserQuery ( getClient ( ) , actor , userId ) ; }
8305	public final int hashCode ( ) { return Hash ; }
8345	private void writeObject ( ObjectOutputStream out ) throws IOException { if ( unserializable ) { throw new NotSerializableException ( GrantPermission . class . getName ( ) ) ; } out . defaultWriteObject ( ) ; }
8373	public void toString ( StringBuffer s ) { }
8384	public boolean dominates ( Stmt s , Stmt t ) { return getFlowBefore ( t ) . contains ( s ) ; }
8411	public static SM_SYSTEM_MESSAGE STR_OTHER_combine_START ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
8431	public static < T > T make ( Class < T > shieldClass , RSHub rsHub ) { return inst . make ( shieldClass , rsHub , RSHub . class ) ; }
8445	public static int clamp ( int value , int min , int max ) { if ( value < min ) value = min ; if ( value > max ) value = max ; return value ; }
8453	public static String formatDateLong ( Context context , Date date ) { DateFormat dateFormat = android . text . format . DateFormat . getLongDateFormat ( context ) ; return dateFormat . format ( date ) ; }
8457	public AsyncCatchOptions useRazzberries ( boolean useRazzBerries ) { this . useRazzBerry = useRazzBerries ? _NUM : _NUM ; return this ; }
8479	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
8493	public static String toTree ( @ NotNull List < NlComponent > roots , boolean includeIdentity ) { StringBuilder sb = new StringBuilder ( _NUM ) ; for ( NlComponent root : roots ) { describe ( sb , root , _NUM , includeIdentity ) ; } return sb . toString ( ) . trim ( ) ; }
8513	@ Provides @ Singleton @ DatabusZooKeeper CuratorFramework provideDatabusZooKeeperConnection ( @ Global CuratorFramework curator ) { return withComponentNamespace ( curator , _CHAR bus _CHAR ) ; }
8522	@ Override public void endContentModel ( Augmentations augs ) throws XNIException { }
8525	public VideoAddAlbumQuery privacy ( List < String > value ) { return unsafeParam ( _CHAR privacy _CHAR , value ) ; }
8526	private void addEntry ( ) { model . addNewEntry ( ) ; removeButton . setEnabled ( _BOOL ) ; }
8534	public static GenericParser createParser ( CarbonColumn carbonColumn , String [ ] complexDelimiters ) { return createParser ( carbonColumn , complexDelimiters , _NUM ) ; }
8540	public static RefType v ( SootClass c ) { return v ( c . getName ( ) ) ; }
8614	public void configInterceptor ( InterceptorLoader interceptorLoader ) { }
8615	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set show - consensus = _CHAR ) ; boolean value = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . getAlignmentViewerPanel ( ) . setShowConsensus ( value ) ; }
8636	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bind_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8665	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
8703	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
8716	public boolean isMemorySpace ( ) { return _isMemorySA ; }
8718	public void drawLine ( PointF p1 , PointF p2 , Canvas canvas , Paint paint ) { canvas . save ( ) ; canvas . drawLine ( p1 . x , p1 . y , p2 . x , p2 . y , paint ) ; canvas . restore ( ) ; }
8731	public void onAfterSpawn ( ) { }
8732	@ Override public void endConditional ( Augmentations augmentations ) throws XNIException { }
8742	public IStoredListIterator < T > next ( IStoredListIterator < T > slh ) { IStoredListIterator < T > slnext = nextPos ( ( StoredListIterator < T > ) slh ) ; if ( slnext == _NULL ) slh . release ( ) ; return slnext ; }
8754	private StreamedCollection < TimeSeriesCollection > create_tsdata_ ( ) { return file_support . create_tsdata ( CHAIN_WIDTH ) ; }
8762	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
8808	public void addSystemPropParameter ( String key , String value ) { if ( key == _NULL || value == _NULL ) throw new IllegalArgumentException ( _CHAR Illegal system property argument for key : [ '' + key + '' ] value : [ '' + value + '' ] '' ) ; _systemProp . put ( key , value ) ; }
8813	protected void startAuthenticationAndInjectCsrfToken ( HttpRequest request ) { logger . debug ( _CHAR Authenticate because no session is found in cookie store or it does n _CHAR_CHAR_CHAR_CHAR ) ; injectCsrfTokenIntoHeader ( request , latestCsrfToken ) ; }
8817	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { TcNoteDao . dropTable ( db , ifExists ) ; CustomerDao . dropTable ( db , ifExists ) ; }
8846	@ Override public Constant asConstant ( ) { return val ; }
8893	@ Scheduled ( fixedDelay = _NUM ) public void updateStatisticsForAllReposiotries ( ) { for ( Long repositoryId : statisticsScheduleRepository . findRepositoryIds ( ) ) { updateRepositoryStatistics ( repositoryId ) ; } }
8900	protected final void clearIdentifiers ( ) { if ( identifiers != _NULL ) { identifiers . clear ( ) ; } }
8916	private static String format ( double value ) { return String . format ( _CHAR % s % s _CHAR , SCALE_PREFIX , NumberFormat . getIntegerInstance ( ) . format ( ( int ) value ) ) ; }
8948	public void received ( ByteBuffer buffer ) { hasReceivedData = _BOOL ; lastReceiveTime = System . currentTimeMillis ( ) ; }
8973	int observerCount ( ) { return observers . get ( ) . length ; }
8992	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
9000	public static void addTrafficListener ( AirMapTrafficListener callback ) { getAirMapTrafficService ( ) . addListener ( callback ) ; }
9019	private int blockHeight ( final int blockRow ) { return ( blockRow == blockRows - _NUM ) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE ; }
9024	@ Override public void write ( byte b [ ] , int off , int len ) throws IOException { out . write ( b , off , len ) ; md5 . Update ( b , off , len ) ; }
9027	public void apply ( NexusStreamParser np ) throws Exception { }
9028	private boolean hasBaseline ( ) { ConstraintAnchor anchor = mWidget . getAnchor ( ConstraintAnchor . Type . BASELINE ) ; return anchor != _NULL && anchor . isConnected ( ) ; }
9037	public Column removeColumn ( String field ) { int idx = m_names . indexOf ( field ) ; if ( idx < _NUM ) { throw new IllegalArgumentException ( _CHAR No such column . '' ) ; } return removeColumn ( idx ) ; }
9066	@ Override public void read ( PacketBuffer buf ) { types . forEach ( _NULL ) ; }
9097	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { TranslateDao . dropTable ( db , ifExists ) ; }
9112	@ Override public PacketBuffer write ( PacketBuffer buf ) { values . forEach ( _NULL ) ; return buf ; }
9130	public double [ ] guess ( ) { return new double [ ] { norm , mean , sigma } ; }
9146	public void clear ( ) { emptySoftQueue ( ) ; Entry tab [ ] = table ; for ( int i = _NUM ; i < tab . length ; ++ i ) tab [ i ] = _NULL ; size = _NUM ; emptySoftQueue ( ) ; }
9151	private void initializeWebView ( ) { mWebViewClient = new FacebookWebViewClient ( ) ; setWebViewClient ( mWebViewClient ) ; mWebChromeClient = new FacebookWebChromeClient ( mContext ) ; setWebChromeClient ( mWebChromeClient ) ; mWebSettings = getSettings ( ) ; mInitialized = _BOOL ; setDefaults ( ) ; }
9169	public void updateSchema ( TableId table , String topic , Set < Schema > schemas ) { Schema kafkaConnectSchema = schemaRetriever . retrieveSchema ( table , topic , schemas ) ; bigQuery . update ( constructTableInfo ( table , kafkaConnectSchema ) ) ; }
9183	public String missingMergeTipText ( ) { return _CHAR Distribute counts for missing values . Counts are distributed '' + '' across other values in proportion to their frequency . Otherwise , _CHAR + _CHAR missing is treated as a separate value . '' ; }
9186	public void onRecentTabsPageOpened ( ) { if ( ! mCanDisableSessionInvalidations ) return ; ++ mNumRecentTabPages ; if ( mNumRecentTabPages == _NUM ) { setSessionInvalidationsEnabled ( _BOOL , REGISTER_FOR_SESSION_SYNC_INVALIDATIONS_DELAY_MS ) ; } }
9205	public boolean isMaximumScaleUpdated ( ) { return maximumScaleUpdated ; }
9219	public double calculateResidualSumOfSquares ( ) { final RealVector residuals = calculateResiduals ( ) ; return residuals . dotProduct ( residuals ) ; }
9224	private static int hashOf ( final int key ) { final int h = key ^ ( ( key >> > _NUM ) ^ ( key >> > _NUM ) ) ; return h ^ ( h >> > _NUM ) ^ ( h >> > _NUM ) ; }
9231	public static void dropAllTables ( Database db , boolean ifExists ) { BangumiCalendarDao . dropTable ( db , ifExists ) ; MyCollectionDao . dropTable ( db , ifExists ) ; }
9244	public void stopRefresh ( String time ) { if ( mPullRefreshing == _BOOL ) { mPullRefreshing = _BOOL ; mHeaderTimeView . setText ( time ) ; resetHeaderHeight ( ) ; } }
9246	public int length ( ) { return ( ( ( ( ( bytes [ _NUM ] ) ) & _NUM ) << _NUM ) + ( ( ( bytes [ _NUM ] ) ) & _NUM ) ) ; }
9275	public void showLoading ( List < Integer > skipIds ) { switchState ( LOADING , _NULL , _NULL , _NULL , _NULL , _NULL , skipIds ) ; }
9292	@ PostConstruct public void init ( ) { cache . acquireWriteLockOnKey ( clusterInitializedKey ) ; try { if ( ! skipCachePreloading && cacheMode . equalsIgnoreCase ( _CHAR single _CHAR ) ) { cache . removeAll ( ) ; } if ( cache . get ( clusterInitializedKey ) == _NULL ) { this . put ( clusterInitializedKey , Boolean . TRUE ) ; } } finally { cache . releaseWriteLockOnKey ( clusterInitializedKey ) ; } }
9309	@ Override public final void writeBoolean ( boolean v ) throws IOException { dis . writeBoolean ( v ) ; }
9311	private static void splitAdd ( final double a [ ] , final double b [ ] , final double ans [ ] ) { ans [ _NUM ] = a [ _NUM ] + b [ _NUM ] ; ans [ _NUM ] = a [ _NUM ] + b [ _NUM ] ; resplit ( ans ) ; }
9319	public int convertTime ( ) { return this . getTime ( ) / _NUM ; }
9331	GSMessageImpl duplicate ( ) throws JMSException { GSMapMessageImpl dup = new GSMapMessageImpl ( ) ; copyTo ( dup ) ; return dup ; }
9333	public FriendsAddQuery add ( UserActor actor , int userId ) { return new FriendsAddQuery ( getClient ( ) , actor , userId ) ; }
9335	public void add ( JsonElement element ) { if ( element == _NULL ) { element = JsonNull . INSTANCE ; } elements . add ( element ) ; }
9346	public Fraction divide ( final int i ) { return divide ( new Fraction ( i ) ) ; }
9370	public static boolean isNotEmpty ( CharSequence str ) { return ! isEmpty ( str ) ; }
9376	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigFeatureTypeConstraint copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigFeatureTypeConstraint ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
9384	private void startWaveSouthernShieldGenerator1 ( ) { sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR SouthernShieldGenerator1 _CHAR ) ; sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR SouthernShieldGenerator2 _CHAR ) ; sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR SouthernShieldGenerator3 _CHAR ) ; }
9393	public boolean removeStyleKey ( String styleKey ) { return styleKeys . remove ( styleKey ) ; }
9405	protected void showIndeterminate ( @ StringRes final int resId ) { dismissProgress ( ) ; progress = new MaterialDialog . Builder ( context ) . content ( resId ) . progress ( _BOOL , _NUM ) . build ( ) ; progress . show ( ) ; }
9408	public static void checkDimension ( int dimension , int otherDimension ) { if ( dimension != otherDimension ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH , dimension , otherDimension ) ; } }
9417	@ Override public Object clone ( ) { return new QName ( this ) ; }
9425	public void renderBeginningBoundaryComment ( Appendable writer , String widgetType , ModelWidget modelWidget ) throws IOException { if ( this . widgetCommentsEnabled ) { writer . append ( this . buildBoundaryComment ( _CHAR Begin _CHAR , widgetType , modelWidget . getBoundaryCommentName ( ) ) ) ; } }
9430	public long next ( ) { return next ( RecurrenceUtil . now ( ) ) ; }
9457	public static AccountOperationResponseCode delete ( String email ) { PersistenceManager pm = pmf . getPersistenceManager ( ) ; try { UserRecord user = findUserByEmail ( pm , email ) ; if ( user != _NULL ) { pm . deletePersistent ( user ) ; return AccountOperationResponseCode . OK ; } else { return AccountOperationResponseCode . USER_NOT_FOUND ; } } finally { pm . close ( ) ; } }
9471	@ Override public void ignoredCharacters ( XMLString text , Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . ignoredCharacters ( text , augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . ignoredCharacters ( text , augs ) ; } }
9479	protected void load ( String fileName ) throws IOException , BufferUnderflowException , MaryConfigurationException , NullPointerException { load ( fileName , _BOOL ) ; }
9480	@ Override public Iterator < ShoppingCartItem > iterator ( ) { return cartLines . iterator ( ) ; }
9485	public void add ( MultidimensionalReward other ) { for ( Map . Entry < Integer , Float > entry : other . map . entrySet ( ) ) { Integer dimension = entry . getKey ( ) ; Float reward_value = entry . getValue ( ) ; this . add ( dimension . intValue ( ) , reward_value . floatValue ( ) ) ; } }
9512	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
9518	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
9523	private void updateResizeHandlesPositions ( ViewTransform viewTransform ) { for ( ResizeHandle mResizeHandle : mResizeHandles ) { mResizeHandle . updatePosition ( viewTransform ) ; } }
9535	public boolean canFindAll ( ) { return _BOOL ; }
9538	@ NotNull public List < Face > findFaces ( @ NotNull InputStream image ) { return faceTaskBuilder . detectFace ( _BOOL , _BOOL , FaceAttributes . ALL , image ) . withResult ( ) ; }
9542	@ Override public Settings init ( String tag ) { if ( tag == _NULL ) { throw new NullPointerException ( _CHAR tag may not be _NULL _CHAR ) ; } if ( tag . trim ( ) . length ( ) == _NUM ) { throw new IllegalStateException ( _CHAR tag may not be empty _CHAR ) ; } this . tag = tag ; this . settings = new Settings ( ) ; return settings ; }
9585	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
9605	public JimpleBody newJimpleBody ( ShimpleBody body ) { return body . toJimpleBody ( ) ; }
9661	public boolean isAnyStepCompleted ( ) { for ( boolean completedStep : completedSteps ) { if ( completedStep ) { return _BOOL ; } } return _BOOL ; }
9672	private boolean checkCameraHardware ( Context context ) { if ( isInEditMode ( ) ) { return _BOOL ; } if ( context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA ) ) { return _BOOL ; } else { return _BOOL ; } }
9681	public Iterator < E > iterator ( ) { return new PatchingIterator ( innerChain ) ; }
9685	@ RequestMapping ( value = _CHAR / rest / activiti / decision - tables _CHAR , method = RequestMethod . GET , produces = _CHAR application / json _CHAR ) public JsonNode listDecisionTables ( HttpServletRequest request ) { ServerConfig serverConfig = retrieveServerConfig ( ) ; Map < String , String [ ] > parameterMap = getRequestParametersWithoutServerId ( request ) ; return clientService . listDecisionTables ( serverConfig , parameterMap ) ; }
9726	public static void initFileAndLogMgr ( String dirName ) { initFileMgr ( dirName ) ; logMgr = new LogMgr ( ) ; }
9738	public PhotosGetAllQueryWithExtended photoSizes ( Boolean value ) { return unsafeParam ( _CHAR photo_sizes _CHAR , value ) ; }
9740	public Region < S > intersection ( final Region < S > region1 , final Region < S > region2 ) { final BSPTree < S > tree = region1 . getTree ( _BOOL ) . merge ( region2 . getTree ( _BOOL ) , new IntersectionMerger ( ) ) ; tree . visit ( nodeCleaner ) ; return region1 . buildNew ( tree ) ; }
9787	@ Override public long limit ( ) { return fileLength >> > _NUM ; }
9798	public ResourceLazyLoadingScript name ( String name ) { this . name = name ; return this ; }
9834	@ Override public void add ( String ... identifiers ) { whitelist . addAll ( Arrays . asList ( identifiers ) ) ; }
9877	public static void main ( String [ ] args ) { MouseDrag simulation = new MouseDrag ( ) ; simulation . run ( ) ; }
9891	public String toName ( cp_info constant_pool [ ] ) { CONSTANT_Utf8_info ci ; ci = ( CONSTANT_Utf8_info ) ( constant_pool [ name_index ] ) ; return ci . convert ( ) ; }
9893	public void closeCurrentConnection ( ) { if ( connection != _NULL ) { closeUnderlyingConnection ( ) ; connection = _NULL ; } }
9911	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
9921	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; TaxonomicProfileDialog viewer = ( TaxonomicProfileDialog ) getParent ( ) ; viewer . setCanceled ( _BOOL ) ; viewer . setVisible ( _BOOL ) ; }
9940	private boolean checkCameraHardware ( Context context ) { if ( context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA ) ) { return _BOOL ; } else if ( context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA_FRONT ) ) { return _BOOL ; } else if ( context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA_ANY ) ) { return _BOOL ; } else { return _BOOL ; } }
9991	private void throwArrayIndexOutOfBoundsException ( int itemIndex ) { throw new ArrayIndexOutOfBoundsException ( _CHAR Your item index ca n _CHAR_CHAR_CHAR_CHAR_CHAR_CHAR + itemIndex ) ; }
9997	public static SM_SYSTEM_MESSAGE STR_SKILL_SUMMON_REST_MODE ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( value0 ) ) ; }
10000	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; final ClusterViewer viewer = getViewer ( ) ; viewer . updateGraph ( ) ; }
10001	protected boolean visitNode ( ASTNode node ) { return _BOOL ; }
10010	private boolean isDistanceToRootCache ( Direction direction ) { int directionOrdinal = direction . getDirection ( ) ; Float f = mDistToRootCache [ directionOrdinal ] ; if ( f < _NUM ) { return _BOOL ; } return _BOOL ; }
10058	public static SM_SYSTEM_MESSAGE STR_ITEM_COLOR_CHANGE_ERROR_CANNOTDYE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10070	public void apply ( NexusStreamParser np ) throws Exception { }
10071	public ExportDropConfig exportDrop ( ExportDropConfig exportDropConfig ) { String exportPath = UriComponentsBuilder . fromPath ( getBasePathForEntity ( ) ) . pathSegment ( _CHAR export _CHAR ) . toUriString ( ) ; return authenticatedRestTemplate . postForObject ( exportPath , exportDropConfig , ExportDropConfig . class ) ; }
10072	private double linToMelFreq ( double inputFreq ) { return ( _NUM . _NUM * ( Math . log ( _NUM . _NUM + inputFreq / _NUM . _NUM ) / Math . log ( _NUM . _NUM ) ) ) ; }
10105	@ Override public final void run ( ) { try { runImpl ( ) ; } catch ( Throwable e ) { log . warn ( _CHAR error handling ls ( _CHAR + getConnection ( ) . getIP ( ) + _CHAR ) message _CHAR + this , e ) ; } }
10111	public String directionFromBearing ( double bearing ) { int index = ( int ) ( ( bearing / _NUM . _NUM ) + _NUM . _NUM ) % _NUM ; return compassDirections [ index ] ; }
10116	public void onStart ( final FileAlterationObserver observer ) { }
10145	public boolean hasAtMeMsg ( String groupId ) { return atMeGroupList . contains ( groupId ) ; }
10151	public NewsfeedGetRecommendedQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
10157	public static < E > boolean isEmpty ( Collection < E > c ) { return ( c == _NULL ) || c . isEmpty ( ) ; }
10174	public static double [ ] lpc2lsfInHz ( double [ ] oneMinusA , int samplingRate ) { return lpc2lsfInHz ( oneMinusA , samplingRate , _NUM ) ; }
10219	public static double nextUp ( final double a ) { return nextAfter ( a , Double . POSITIVE_INFINITY ) ; }
10237	@ Override public synchronized void write ( byte [ ] b ) throws IOException { super . write ( b ) ; this . branch . write ( b ) ; }
10239	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10251	public void add ( Boolean bool ) { elements . add ( bool == _NULL ? JsonNull . INSTANCE : new JsonPrimitive ( bool ) ) ; }
10254	@ Override public void start ( ) { impl . start ( ) ; }
10262	public static Dfp tan ( final Dfp a ) { return sin ( a ) . divide ( cos ( a ) ) ; }
10271	public AudioMoveToAlbumQuery moveToAlbum ( UserActor actor , int ... audioIds ) { return new AudioMoveToAlbumQuery ( getClient ( ) , actor , audioIds ) ; }
10274	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonSkillArea_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
10289	public void normalize ( ) { double totalCount = totalCount ( ) ; for ( E key : keySet ( ) ) { setCount ( key , getCount ( key ) / totalCount ) ; } dirty = _BOOL ; }
10297	protected void waitForImage ( Image image ) { int id =++ nextTrackerID ; tracker . addImage ( image , id ) ; try { tracker . waitForID ( id , _NUM ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } tracker . removeImage ( image , id ) ; }
10305	protected void generateInstanceId ( V type ) { if ( getId ( ) == _NULL ) { String id = getBaseType ( ) + _CHAR - _CHAR + type . getId ( ) + _CHAR - _CHAR + UUID . randomUUID ( ) . toString ( ) ; setImmutableProperty ( Schema . ConceptProperty . ITEM_IDENTIFIER , id ) ; } }
10312	public void broadcastHate ( int value ) { for ( VisibleObject visibleObject : getOwner ( ) . getKnownList ( ) . getKnownObjects ( ) . values ( ) ) { if ( visibleObject instanceof Creature ) { ( ( Creature ) visibleObject ) . getAggroList ( ) . notifyHate ( getOwner ( ) , value ) ; } } }
10315	public static boolean remove ( String id ) { id = GROUP + id ; if ( cacheSystem != _NULL ) { return cacheSystem . delete ( id ) ; } return _BOOL ; }
10332	public static void w ( String tag , Throwable tr ) { w ( tag , _NULL , tr ) ; }
10344	public Entry copy ( ) { return new Entry ( mVal , mXIndex , mData ) ; }
10350	protected String checkCycles ( ) { myErrorMessage = _NULL ; myHorizontalCycle = _NULL ; myVerticalCycle = _NULL ; if ( checkCycle ( myCurrentTopMatch , _BOOL ) || checkCycle ( myCurrentBottomMatch , _BOOL ) ) { } if ( checkCycle ( myCurrentLeftMatch , _BOOL ) || checkCycle ( myCurrentRightMatch , _BOOL ) ) { } return myErrorMessage ; }
10355	@ Override public boolean equals ( Object other ) { return this == other || ( other instanceof Book && hashCode ( ) == other . hashCode ( ) ) ; }
10365	public static < T extends RealFieldElement < T >> T dotProduct ( final FieldVector3D < T > v1 , final Vector3D v2 ) { return v1 . dotProduct ( v2 ) ; }
10368	public static MutableContextSet fromMap ( Map < String , String > map ) { MutableContextSet set = new MutableContextSet ( ) ; set . addAll ( map ) ; return set ; }
10380	public SiteAdminPage waitForConfirmationWindow ( ) { siteAdminConfirmationWindow . waitToBeDisplayed ( ) ; return this ; }
10392	public void clear ( ) { synchronized ( mLock ) { mList . clear ( ) ; } notifyDataSetChanged ( ) ; }
10428	public void unregisterData ( ) { userData = _NULL ; }
10431	@ Override public void printStackTrace ( ) { super . printStackTrace ( ) ; if ( nested != _NULL ) nested . printStackTrace ( ) ; }
10432	public void writeToByteBuffer ( ByteBuffer buffer ) throws IOException { buffer . clear ( ) ; writeToStream ( new ByteBufferOutputStream ( buffer ) ) ; }
10489	private void deleteStorePath ( ) { FileFactory . FileType fileType = FileFactory . getFileType ( this . hdfsStorePath ) ; CarbonFile carbonFile = FileFactory . getCarbonFile ( this . hdfsStorePath , fileType ) ; deleteRecursiveSilent ( carbonFile ) ; }
10491	public static GenericValue findWebSite ( Delegator delegator , String webSiteId ) { return findWebSite ( delegator , webSiteId , _BOOL ) ; }
10499	public Quaternion multiply ( final double alpha ) { return new Quaternion ( alpha * q0 , alpha * q1 , alpha * q2 , alpha * q3 ) ; }
10518	public synchronized boolean isCompleted ( ) { return completed ; }
10548	public void addFootView ( View view , int footerHeight ) { addFootView ( view , footerHeight , _BOOL ) ; }
10552	public java_cup . runtime . Symbol do_action ( int act_num , java_cup . runtime . lr_parser parser , java . util . Stack stack , int top ) throws java . lang . Exception { return action_obj . CUP $ cup $ do_action ( act_num , parser , stack , top ) ; }
10571	public static void w ( String tag , String msg ) { w ( tag , msg , _NULL ) ; }
10574	@ VisibleForTesting @ Transactional public void markAssetExtractionAsLastSuccessful ( Asset asset , AssetExtraction assetExtraction ) { logger . debug ( _CHAR Marking asset extraction as last successful , assetExtractionId : { } _CHAR , assetExtraction . getId ( ) ) ; asset . setLastSuccessfulAssetExtraction ( assetExtraction ) ; assetRepository . save ( asset ) ; }
10584	public static < E > boolean isEmpty ( CharSequence c ) { return ( c == _NULL ) || c . length ( ) == _NUM ; }
10588	public SearchGetHintsQuery limit ( Integer value ) { return unsafeParam ( _CHAR limit _CHAR , value ) ; }
10619	public void clear ( ) { uid = _NUM ; bitScore = _NUM ; percentIdentity = _NUM ; expected = _NUM ; length = _NUM ; text = _NULL ; fName2Id . clear ( ) ; }
10628	public PhotosEditQuery edit ( UserActor actor , int photoId ) { return new PhotosEditQuery ( getClient ( ) , actor , photoId ) ; }
10635	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10639	private void push ( JSONObject jo ) throws JSONException { if ( this . top >= maxdepth ) { throw new JSONException ( _CHAR Nesting too deep . '' ) ; } this . stack [ this . top ] = jo ; this . mode = jo == _NULL ? _CHAR : _CHAR ; this . top += _NUM ; }
10646	public Queue queue ( int concurrency ) { return new Queue ( this . executor_ , concurrency ) ; }
10658	public CompositeRange add ( Range range ) { _ranges . add ( range ) ; ( ( AllSpacePredicate ) this . getPredicate ( ) ) . addOperand ( range . getPredicate ( ) ) ; return this ; }
10663	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set contract - gaps = _CHAR ) ; boolean collapse = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . getAlignmentViewerPanel ( ) . getSelectedBlock ( ) . clear ( ) ; viewer . setContractGaps ( collapse ) ; }
10676	public boolean isFlaming ( ) { return isFlaming ; }
10687	public static SM_SYSTEM_MESSAGE STR_USE_CASH_TYPE_ITEM2 ( String value1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0s ) ; }
10780	public void onContextChanged ( Context context ) { mNormalHelper . onContextChanged ( context ) ; mIncognitoHelper . onContextChanged ( context ) ; }
10789	public void cancel ( Account account , OCFile file ) { mSyncFolderHandler . cancel ( account , file ) ; }
10800	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
10843	public void moveRelativeTo ( float dx , float dy ) { moveTo ( currentXOffset + dx , currentYOffset + dy ) ; }
10844	public boolean onDown ( float x , float y ) { if ( checkClicked ( x , y ) ) { setPressed ( _BOOL ) ; return _BOOL ; } return _BOOL ; }
10845	public VideoEditAlbumQuery privacy ( List < String > value ) { return unsafeParam ( _CHAR privacy _CHAR , value ) ; }
10857	public void pathValuesToPixel ( List < Path > paths ) { for ( int i = _NUM ; i < paths . size ( ) ; i ++ ) { pathValueToPixel ( paths . get ( i ) ) ; } }
10863	@ Override public void onResponse ( GankData response ) { getContentText . setText ( response . toString ( ) ) ; }
10864	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ _CHAR + delegate . toString ( ) + _CHAR ] _CHAR ; }
10905	public static void e ( String tag , String msg ) { e ( tag , msg , _NULL ) ; }
10917	public static char readChar ( ) { scanner . useDelimiter ( EMPTY_PATTERN ) ; String ch = scanner . next ( ) ; assert ch . length ( ) == _NUM : _CHAR Internal ( Std ) In . readChar ( ) error ! _CHAR + _CHAR Please contact the authors . '' ; scanner . useDelimiter ( WHITESPACE_PATTERN ) ; return ch . charAt ( _NUM ) ; }
10923	public static void d ( String c , String s ) { if ( isEnable ( ) ) { if ( s == _NULL ) s = _CHAR \ _CHAR NULL \ _CHAR _CHAR ; Log . d ( c , s ) ; } }
10958	public void remove ( String key ) { internalMap . remove ( key ) ; }
10959	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sleep_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
11040	private void startWaveWesternShieldGenerator1 ( ) { sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR WesternShieldGenerator1 _CHAR ) ; sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR WesternShieldGenerator2 _CHAR ) ; sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR WesternShieldGenerator3 _CHAR ) ; }
11047	private static TestingServer startLocalZooKeeper ( ) throws Exception { ( ( Logger ) LoggerFactory . getLogger ( _CHAR org . apache . zookeeper _CHAR ) ) . setLevel ( Level . ERROR ) ; TestingServer zooKeeperServer = new TestingServer ( _NUM ) ; System . setProperty ( _CHAR dw . zooKeeper . connectString _CHAR , zooKeeperServer . getConnectString ( ) ) ; return zooKeeperServer ; }
11060	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
11088	public boolean canFindAll ( ) { return _BOOL ; }
11089	public double sum ( ) { return buckets_ . stream ( ) . mapToDouble ( _NULL ) . sum ( ) ; }
11092	public void startPlaying ( String file ) { if ( this . readyPlayer ( file ) && this . player != _NULL ) { this . player . start ( ) ; this . setState ( STATE . MEDIA_RUNNING ) ; this . seekOnPrepared = _NUM ; } else { this . prepareOnly = _BOOL ; } }
11112	public static void pickImage ( Context context , android . support . v4 . app . Fragment fragment ) { pickImage ( context , fragment , REQUEST_PICK ) ; }
11155	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11162	public boolean contains ( int index ) { return index >= getFirst ( ) && index <= getLast ( ) ; }
11168	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . getSelectedBlock ( ) . selectAll ( ) ; }
11169	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
11172	@ Override public void write ( char [ ] chr ) throws IOException { out . write ( chr ) ; }
11185	public static void main ( String [ ] args ) { arguments = args ; JBCOViewer inst = new JBCOViewer ( ) ; inst . setVisible ( _BOOL ) ; }
11187	public void forceMoveToPrimary ( ) throws RemoteException { _electManager . forceMoveToPrimary ( ) ; }
11189	public static boolean isPcm ( AudioFormat . Encoding encoding ) { return encoding . equals ( AudioFormat . Encoding . PCM_SIGNED ) || encoding . equals ( AudioFormat . Encoding . PCM_UNSIGNED ) ; }
11193	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; journalWriter . flush ( ) ; }
11211	private static boolean isSameTreePath ( TreePath tp1 , TreePath tp2 ) { if ( ( tp1 == _NULL ) || ( tp2 == _NULL ) ) { return _BOOL ; } return ( tp1 . toString ( ) . compareTo ( tp2 . toString ( ) ) == _NUM ) ; }
11213	public Array < String > keys ( ) { Array < String > out = new JavaArray < > ( ) ; for ( String key : internalMap . keySet ( ) ) { out . push ( key ) ; } return out ; }
11230	private void doIndent ( ) throws XMLStreamException { if ( depth > _NUM ) { for ( int i = _NUM ; i < depth ; i ++ ) super . writeCharacters ( indentStep ) ; } }
11234	private void sortDrawablesZA ( ) { Sort . instance ( ) . sort ( drawables , _NULL ) ; refreshDrawableDisplay ( ) ; }
11255	public static void i ( String tag , String msg ) { i ( tag , msg , _NULL ) ; }
11263	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MEMBER_RANK_DONE_3_GUILD_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11281	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL && ! fOnlyPassPrefixMappingEvents ) { fDocumentHandler . endCDATA ( augs ) ; } }
11303	@ Override protected void changed ( ) { changes ++ ; }
11328	public static void paintCheckeredBackground ( Graphics g , Shape clip ) { paintCheckeredBackground ( g , Color . LIGHT_GRAY , Color . GRAY , clip , BACKGROUND_CELL_SIZE ) ; }
11333	public void clearAllInsertions ( ) { List < MODEL > items = new ArrayList < > ( ) ; items . addAll ( getOnlyItems ( ) ) ; mInserts . clear ( ) ; getItems ( ) . clear ( ) ; mOnlyInsertsCount = _NUM ; mHeadersCount = _NUM ; mFootersCount = _NUM ; reAddAllItems ( items ) ; notifyIfNeed ( ) ; }
11342	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { try { if ( fLexicalHandler != _NULL ) { fLexicalHandler . endCDATA ( ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
11347	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sleep_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
11390	public String [ ] parseConfiguration ( File xmlFile ) throws SAXException , IOException { Document document = builder . parse ( xmlFile ) ; return ( parseConfiguration ( document ) ) ; }
11396	public static DmnRestUrlBuilder fromCurrentRequest ( ) { return usingBaseUrl ( ServletUriComponentsBuilder . fromCurrentServletMapping ( ) . build ( ) . toUriString ( ) ) ; }
11408	public final ProgressEvent updateProgress ( double dNewProgress ) { Progress = dNewProgress ; return this ; }
11410	public void printLf0Mean ( ) { printVectors ( lf0Mean , lf0Variance ) ; }
11446	public boolean isProjective ( ) { return _BOOL ; }
11519	public WallPostQuery fromGroup ( Boolean value ) { return unsafeParam ( _CHAR from_group _CHAR , value ) ; }
11541	public void put ( String key , File file ) throws FileNotFoundException { put ( key , file , _NULL ) ; }
11555	protected void cancelHeightAnimation ( ) { cancelAnimation ( this , Property . PANEL_HEIGHT ) ; }
11567	private void resurrection ( ) { mNotificationManager . cancel ( R . string . uploader_upload_in_progress_ticker ) ; }
11568	public StaticScript name ( String name ) { this . name = name ; return this ; }
11574	void remove ( int key ) { if ( cache != _NULL ) { cache . remove ( key ) ; } }
11582	public boolean contains ( int index ) { return index >= getFirst ( ) && index <= getLast ( ) ; }
11584	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR show replaceToolbar = _CHAR ) ; boolean show = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; final SamplesViewer samplesViewer = ( SamplesViewer ) getViewer ( ) ; samplesViewer . setShowReplaceToolBar ( show ) ; }
11594	public boolean hasParam ( String name ) { Param p = type . params . get ( name ) ; assert p != _NULL : _CHAR name \ _CHAR _CHAR + name + _CHAR \ _CHAR is not a known parameter _CHAR ; return params . containsKey ( name ) ; }
11616	public void remove ( String key ) { urlParams . remove ( key ) ; streamParams . remove ( key ) ; fileParams . remove ( key ) ; urlParamsWithObjects . remove ( key ) ; }
11623	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11626	boolean removeDisplay ( Display display ) { return m_displays . remove ( display ) ; }
11649	public static void dumpTimingToLog ( ) { mTimingLogger . dumpToLog ( ) ; }
11682	public static final SM_SYSTEM_MESSAGE STR_MSG_HOUSING_AUCTION_MY_HOUSE ( int address ) { return new SM_SYSTEM_MESSAGE ( _NUM , address ) ; }
11736	public void apply ( NexusStreamParser np ) throws Exception { }
11754	public MessagesGetHistoryAttachmentsQuery photoSizes ( Boolean value ) { return unsafeParam ( _CHAR photo_sizes _CHAR , value ) ; }
11762	public static boolean supports ( String db , int majorVersion , int minorVersion ) { return MYSQL_DB_NAME . equals ( db ) && majorVersion == _NUM ; }
11796	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigBoundingBox copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigBoundingBox ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
11802	@ Override public final void write ( byte ba [ ] ) throws IOException { dis . write ( ba , _NUM , ba . length ) ; }
11814	public NotesDeleteCommentQuery deleteComment ( UserActor actor , int commentId ) { return new NotesDeleteCommentQuery ( getClient ( ) , actor , commentId ) ; }
11867	public static DocumentObjectConverter instance ( ) { return _instance ; }
11868	private boolean isChildService ( Operation op ) { String path = op . getUri ( ) . getPath ( ) ; return ! path . equals ( getParentPath ( op ) ) ; }
11873	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
11900	public static < V > boolean isEmpty ( V [ ] sourceArray ) { return ( sourceArray == _NULL || sourceArray . length == _NUM ) ; }
11967	@ Override public boolean equals ( Object other ) { return this == other || other instanceof JsonNull ; }
11976	public void hide ( ) { LayoutParams lp = ( LayoutParams ) mContentView . getLayoutParams ( ) ; lp . height = _NUM ; mContentView . setLayoutParams ( lp ) ; }
11987	public WallPostQuery friendsOnly ( Boolean value ) { return unsafeParam ( _CHAR friends_only _CHAR , value ) ; }
11994	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
12013	public static void main ( String [ ] args ) { RenderingImagesOnBodies simulation = new RenderingImagesOnBodies ( ) ; simulation . run ( ) ; }
12063	public Object remove ( ) { if ( _bottom == _top ) return _NULL ; Object ret = _buf [ _top ] ; _top = ( _top == _buf . length - _NUM ) ? _NUM : _top + _NUM ; return ret ; }
12117	static void addTextChangedListener ( TextView textView , TextWatcher watcher ) { textView . addTextChangedListener ( watcher ) ; }
12118	public void resize ( int maxSize ) { if ( maxSize <= _NUM ) { throw new IllegalArgumentException ( _CHAR maxSize <= _NUM _CHAR ) ; } synchronized ( this ) { this . maxSize = maxSize ; } trimToSize ( maxSize ) ; }
12138	public void apply ( NexusStreamParser np ) throws Exception { }
12156	public void putSampleShape ( String sampleName , String shape ) { put ( sampleName , HiddenAttribute . Shape , shape ) ; }
12164	private void broadcastFromGm ( final Player player ) { PacketSendUtility . broadcastPacket ( player , new SM_MESSAGE ( player , message , type ) , _BOOL ) ; }
12168	@ Override protected void loadData ( ) throws IOException , MaryConfigurationException { cart = new DirectedGraphReader ( ) . load ( dataStream ) ; try { predictionFeatureNames = cart . getFeatureDefinition ( ) . getFeatureNames ( ) ; } catch ( NullPointerException e ) { throw new IOException ( _CHAR Could not get FeatureDefinition from CART _CHAR , e ) ; } if ( predictionFeatureNames . length ( ) == _NUM ) { throw new IOException ( _CHAR Could not get prediction feature names _CHAR ) ; } }
12169	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_EXP_GAIN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12203	public Matrix zoom ( float scaleX , float scaleY ) { Matrix save = new Matrix ( ) ; save . set ( mMatrixTouch ) ; save . postScale ( scaleX , scaleY ) ; return save ; }
12208	public final Observable < Void > evict ( final Object group ) { return Observable . defer ( _NULL ) ; }
12220	private boolean isChildService ( Operation op ) { String path = op . getUri ( ) . getPath ( ) ; return ! path . equals ( getParentPath ( op ) ) ; }
12235	public static double midpoint ( double a , double b ) { return ( a + b ) * _NUM . _NUM ; }
12241	public boolean canFindAll ( ) { return _BOOL ; }
12263	public void renew ( long extension ) throws LeaseDeniedException , UnknownLeaseException { _leaseRenewed = _BOOL ; _leaseRenewedExtension = extension ; str . setLease ( extension ) ; ParticipantHandle [ ] phs = parthandles ( ) ; if ( phs == _NULL ) return ; for ( ParticipantHandle ph : phs ) { renewParticipantLease ( ph , extension ) ; } }
12276	public void apply ( NexusStreamParser np ) throws Exception { }
12305	public void onClearSignedInUser ( ) { mNotificationController . cancelNotification ( NotificationConstants . NOTIFICATION_ID_SIGNED_IN ) ; }
12332	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_BLOCK ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12340	public IStoredListIterator < T > next ( IStoredListIterator < T > slh ) { IStoredListIterator < T > slnext = nextPos ( ( SegmentedListIterator < T > ) slh ) ; if ( slnext == _NULL ) slh . release ( ) ; return slnext ; }
12341	public void updatePokemonList ( ArrayList < Pokemon > list ) { pokemons = list ; clear ( ) ; addAll ( pokemons ) ; notifyDataSetChanged ( ) ; }
12343	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
12359	private void expectedByte ( int position , int count ) throws MalformedByteSequenceException { throw new MalformedByteSequenceException ( fFormatter , fLocale , XMLMessageFormatter . XML_DOMAIN , _CHAR ExpectedByte _CHAR , new Object [ ] { Integer . toString ( position ) , Integer . toString ( count ) } ) ; }
12364	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { SearchSuffixDao . dropTable ( db , ifExists ) ; }
12383	public void renderEndingBoundaryComment ( Appendable writer , String widgetType , ModelWidget modelWidget ) throws IOException { if ( this . widgetCommentsEnabled ) { writer . append ( this . buildBoundaryComment ( _CHAR End _CHAR , widgetType , modelWidget . getBoundaryCommentName ( ) ) ) ; } }
12403	@ Deprecated public MapCursor addCursor ( int x , int y , byte direction , byte type , boolean visible ) { return addCursor ( new MapCursor ( ( byte ) x , ( byte ) y , direction , type , visible ) ) ; }
12405	public BoardCreateCommentQuery guid ( String value ) { return unsafeParam ( _CHAR guid _CHAR , value ) ; }
12413	public static final void pushTransform ( GL2 gl ) { gl . glPushMatrix ( ) ; }
12419	public static SM_SYSTEM_MESSAGE STR_MSG_GLORY_POINT_LOSE_COMMON ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
12421	public ViewsAnimator withViewsVisibilityBeforeAnimation ( final int viewsVisibilityBeforeAnimation ) { this . viewsVisibilityBeforeAnimation = viewsVisibilityBeforeAnimation ; return this ; }
12430	public static Load handle ( World world ) { Load event = new Load ( world ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
12449	private void connectDB ( ) { mongoClient = new MongoClient ( dbHost , dbPort ) ; db = mongoClient . getDatabase ( dbName ) ; usersCollection = db . getCollection ( _CHAR users _CHAR ) ; loginSessionsCollection = db . getCollection ( _CHAR logins _CHAR ) ; }
12450	public void waitUntilClosed ( ) throws InterruptedException { mutex . lock ( ) ; try { while ( state != State . Closed ) { isClosedCondition . await ( ) ; } } finally { mutex . unlock ( ) ; } }
12474	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
12486	public static Vector3D crossProduct ( final Vector3D v1 , final Vector3D v2 ) { return v1 . crossProduct ( v2 ) ; }
12495	public void add ( final Vector2D [ ] bLoop ) throws MathIllegalArgumentException { add ( new NestedLoops ( bLoop , tolerance ) ) ; }
12501	public boolean hasDaughters ( ) { return daughter != _NULL ; }
12510	void attach ( Item item ) { this . next = item ; item . prev = this ; }
12525	public static void i ( String c , String s ) { if ( isEnable ( ) ) { if ( s == _NULL ) s = _CHAR \ _CHAR NULL \ _CHAR _CHAR ; Log . i ( c , s ) ; } }
12526	public static SM_SYSTEM_MESSAGE STR_GUILD_LEAVE_HE_LEFT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12527	public boolean isInfoEnabled ( ) { return this . logger . isInfoEnabled ( ) ; }
12573	public boolean isFull ( ) { return getCurrentPlayers ( ) >= getMaxPlayers ( ) ; }
12580	public void putSampleColor ( String sampleName , Color color ) { put ( sampleName , SampleAttributeTable . HiddenAttribute . Color , color != _NULL ? color . getRGB ( ) : _NULL ) ; }
12613	public EditorFixture enterText ( @ NotNull final String text ) { Component component = getFocusedEditor ( ) ; if ( component != _NULL ) { robot . enterText ( text ) ; } return this ; }
12633	private boolean strictlyAfter ( final double t1 , final double t2 ) { return forward ? t1 < t2 : t2 < t1 ; }
12651	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
12675	public static SM_SYSTEM_MESSAGE STR_SELL_TO_NPC_NO_INTEREST_IN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12682	public void addAppender ( final Appender appender ) { logger . addAppender ( appender ) ; }
12686	protected GroupsGetInvitedUsersQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
12701	public static boolean isStarted ( String timePhaseName ) { RequestLog current = RLOG . get ( ) ; TimedPhase timePhase = current . times . get ( timePhaseName ) ; return timePhase != _NULL && timePhase . isStarted ( ) ; }
12781	public boolean isIgnoreGeometryFields ( ) { return ignoreGeometryFields ; }
12824	public static float nextDown ( final float a ) { return nextAfter ( a , Float . NEGATIVE_INFINITY ) ; }
12833	public void stopRefresh ( String time ) { if ( mPullRefreshing == _BOOL ) { mPullRefreshing = _BOOL ; mHeaderTimeView . setText ( time ) ; resetHeaderHeight ( ) ; } mHeaderTimeView . setText ( time ) ; }
12837	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . flush ( ) ; }
12845	public static SM_SYSTEM_MESSAGE STR_UI_COMBAT_NPC_RETURN_ORG ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12850	private void removeDownloadIdFromSharedPrefs ( int downloadId ) { Set < String > downloadIds = getStoredDownloadInfo ( DOWNLOAD_NOTIFICATION_IDS ) ; String id = Integer . toString ( downloadId ) ; if ( downloadIds . contains ( id ) ) { downloadIds . remove ( id ) ; storeDownloadInfo ( DOWNLOAD_NOTIFICATION_IDS , downloadIds ) ; } }
12886	public static Unload handle ( World world ) { Unload event = new Unload ( world ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
12903	void start ( ) { this . scheduleAckTimeout ( ) ; this . sendListen ( ) ; }
12912	public static AccountOperationResponseCode delete ( String email ) { PersistenceManager pm = pmf . getPersistenceManager ( ) ; try { UserRecord user = findUserByEmail ( pm , email ) ; if ( user != _NULL ) { pm . deletePersistent ( user ) ; return AccountOperationResponseCode . OK ; } else { return AccountOperationResponseCode . USER_NOT_FOUND ; } } finally { pm . close ( ) ; } }
12926	@ Override public void ignoredCharacters ( XMLString text , Augmentations augs ) throws XNIException { }
12938	private void handleFileDataValueSave ( TrackedEntityDataValue dataValue ) { FileResource fileResource = fetchFileResource ( dataValue ) ; if ( fileResource == _NULL ) { return ; } setAssigned ( fileResource ) ; }
12962	public String toString ( ) { return _CHAR CMUVoice _CHAR ; }
12972	public byte [ ] sign ( byte [ ] hash ) { return crypto . sign ( hash , toByteArray ( ) ) ; }
12983	@ Override public void close ( ) { }
12991	public static void main ( String [ ] args ) { SimplePlatformer simulation = new SimplePlatformer ( ) ; simulation . run ( ) ; }
12996	public static boolean isAuthenticated ( ) { SecurityContext securityContext = SecurityContextHolder . getContext ( ) ; Collection < ? extends GrantedAuthority > authorities = securityContext . getAuthentication ( ) . getAuthorities ( ) ; if ( authorities != _NULL ) { for ( GrantedAuthority authority : authorities ) { if ( authority . getAuthority ( ) . equals ( AuthoritiesConstants . ANONYMOUS ) ) { return _BOOL ; } } } return _BOOL ; }
13026	public int writeTypeList ( TypeList typeList ) { int off = data . position ( ) ; short [ ] types = typeList . types ; writeInt ( types . length ) ; for ( short type : types ) { writeShort ( type ) ; } return off ; }
13030	protected GroupsIsMemberQueryWithUserIdsExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
13082	public AccountRegisterDeviceQuery systemVersion ( String value ) { return unsafeParam ( _CHAR system_version _CHAR , value ) ; }
13099	public int indexType ( ) { return idxType ; }
13125	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set sortreads = _CHAR ) ; String which = np . getWordMatchesIgnoringCase ( _CHAR alphabetically no _CHAR ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; inspectorWindow . setSortReadsAlphabetically ( which . equalsIgnoreCase ( _CHAR alphabetically _CHAR ) ) ; }
13150	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; journalWriter . flush ( ) ; }
13153	public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set flipH = _CHAR ) ; boolean flip = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; getViewer ( ) . getPcoaTab ( ) . setFlipH ( flip ) ; try { getViewer ( ) . updateDistances ( ) ; } catch ( Exception ex ) { Basic . caught ( ex ) ; } }
13159	private boolean filterEntry ( ConsoleEntry entry ) { if ( ( logDisabledTypesMask & getMask ( entry . type ) ) != _NUM ) { return _BOOL ; } return length ( filterText ) == _NUM || containsIgnoreCase ( entry . message , filterText ) ; }
13167	public FieldVector3D < T > negate ( ) { return new FieldVector3D < T > ( x . negate ( ) , y . negate ( ) , z . negate ( ) ) ; }
13169	public void undo ( ) { for ( int i = pathEvents . size ( ) - _NUM ; i >= _NUM ; i -- ) { if ( pathEvents . remove ( i ) . isMove ) break ; } applyEvents ( ) ; invalidate ( ) ; }
13208	public static SM_SYSTEM_MESSAGE STR_PARTY_ITEM_WIN ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
13214	public void addSection ( SourceSection section ) { sections . add ( section ) ; }
13268	public final TestSubscriber < T > assertSubscribed ( ) { int s = subscriptionCount ; if ( s == _NUM ) { throw new AssertionError ( _CHAR OnSubscribe not called _CHAR , _NULL ) ; } if ( s > _NUM ) { throw new AssertionError ( _CHAR OnSubscribe called multiple times : _CHAR + s , _NULL ) ; } return this ; }
13276	public int size ( ) { return innerChain . size ( ) ; }
13279	public PhotosGetCommentsQuery needLikes ( Boolean value ) { return unsafeParam ( _CHAR need_likes _CHAR , value ) ; }
13293	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR add file = _CHAR ) ; final String fileName = np . getAbsoluteFileName ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; Basic . checkFileReadableNonEmpty ( fileName ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . addFile ( fileName ) ; }
13316	public void showContentView ( ) { if ( _NULL != mBaseLayout ) { mBaseLayout . showContentView ( ) ; } }
13327	public static DateTime addTimeGrain ( DateTime dateTime , TimeGrain timeGrain ) { return dateTime . plus ( timeGrain . getPeriod ( ) ) ; }
13328	public String tableName ( ) { return tblName ; }
13338	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
13343	public void dispose ( ) { myFileStructure . dispose ( ) ; }
13367	@ Provides @ Singleton @ DataStoreZooKeeper CuratorFramework provideDataStoreZooKeeperConnection ( @ Global CuratorFramework curator ) { return withComponentNamespace ( curator , _CHAR sor _CHAR ) ; }
13369	public void apply ( NexusStreamParser np ) throws Exception { }
13393	private boolean matches ( String selector , String name ) { if ( selector . equals ( _CHAR * _CHAR ) ) { return _BOOL ; } if ( selector . endsWith ( _CHAR . * _CHAR ) ) { return name . startsWith ( selector . substring ( _NUM , selector . length ( ) - _NUM ) ) ; } return name . equals ( selector ) ; }
13409	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
13442	public void hide ( ) { mContentView . setVisibility ( View . GONE ) ; }
13458	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigInlineFeature copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigInlineFeature ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
13470	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_COMPLETE_STAGE_IDARENA ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13480	private void removeEntry ( ) { model . removeEntries ( table . getSelectionModel ( ) . getMinSelectionIndex ( ) , table . getSelectionModel ( ) . getMaxSelectionIndex ( ) ) ; removeButton . setEnabled ( _BOOL ) ; }
13500	@ Override public void endConditional ( Augmentations augs ) throws XNIException { fInDTDIgnore = _BOOL ; if ( fDTDGrammar != _NULL ) fDTDGrammar . endConditional ( augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . endConditional ( augs ) ; } }
13501	public Color sub ( Color color ) { this . r -= color . r ; this . g -= color . g ; this . b -= color . b ; this . a -= color . a ; clamp ( ) ; return this ; }
13507	public static SM_SYSTEM_MESSAGE STR_VENDOR_SOLD_OUT ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( nameId ) ) ; }
13555	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR show gridLines = _CHAR ) ; boolean show = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; if ( getViewer ( ) instanceof ChartViewer ) { ( ( ChartViewer ) getViewer ( ) ) . setShowVerticalGridLines ( show ) ; } }
13568	public static void createAllTables ( Database db , boolean ifNotExists ) { CollectDao . createTable ( db , ifNotExists ) ; UserDao . createTable ( db , ifNotExists ) ; }
13576	public boolean isReadOnly ( ) { return ! isProjectStyle ( ) ; }
13618	public String title ( ) { if ( d != _NULL ) { return d . title ( ) ; } return _NULL ; }
13633	@ Override public String createToken ( int my_slot , int rac_count , int rac_size , String region ) { int regionCount = rac_count * rac_size ; return initialToken ( regionCount , my_slot , regionOffset ( region ) ) . toString ( ) ; }
13639	public boolean isMarkerVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { enabled = ( obj instanceof Rule ) && ( geometryType == GeometryTypeEnum . POINT ) ; } return enabled ; }
13658	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
13672	public synchronized void releaseLock ( String tableName , long transNum ) { if ( this . databaseLocked && this . databaseTransactionOwner == transNum ) { this . databaseLocked = _BOOL ; this . databaseTransactionOwner =- _NUM ; notifyAll ( ) ; } }
13697	public boolean verbose ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR verbose _CHAR ) ; }
13711	public Object invoke ( Object proxy , Method method , Object [ ] args ) throws Throwable { return invoke ( proxy , new StandardMethod ( method ) , args ) ; }
13714	public int hashCode ( ) { return ( int ) ( hash ^ ( hash >> > _NUM ) ) ; }
13738	public VideoAddAlbumQuery privacy ( String ... value ) { return unsafeParam ( _CHAR privacy _CHAR , value ) ; }
13766	public void startSync ( ) { }
13785	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getMateUnmappedFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getMateUnmappedFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
13788	public void addWords ( List < String > words ) { addWords ( words . toArray ( new String [ words . size ( ) ] ) ) ; }
13794	public Expression not ( Expression exp ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
13823	public static void fixme ( Object ... notes ) { }
13833	public byte accumulate ( byte other ) { byte oldv = value ; value |= other ; return oldv ; }
13864	public static WorkspaceRoot fromImportSettings ( BlazeImportSettings blazeSettings ) { return new WorkspaceRoot ( new File ( blazeSettings . getWorkspaceRoot ( ) ) ) ; }
13900	public static boolean isValidMobile ( @ NonNull String mobile ) { if ( ! TextUtils . isEmpty ( mobile ) && mobile . length ( ) == _NUM ) { if ( mobile . startsWith ( _CHAR _NUM _CHAR ) || mobile . startsWith ( _CHAR _NUM _CHAR ) || mobile . startsWith ( _CHAR _NUM _CHAR ) ) { return _BOOL ; } } return _BOOL ; }
13913	@ Override public WebElement findElementByPartialLinkText ( String partialLinkText ) { return ( ( FindsByLinkText ) super . getWrappedDriver ( ) ) . findElementByPartialLinkText ( partialLinkText ) ; }
13915	public Object putResource ( Object key , Object value ) { return ( objectCache . put ( key , value ) ) ; }
13924	@ Override public void startConditional ( short type , Augmentations augs ) throws XNIException { fInDTDIgnore = type == XMLDTDHandler . CONDITIONAL_IGNORE ; if ( fDTDGrammar != _NULL ) fDTDGrammar . startConditional ( type , augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . startConditional ( type , augs ) ; } }
13940	public int update ( V v ) { for ( String name : v . names ( ) ) { this . set ( name , v . value ( name ) ) ; } return update ( this . getId ( ) , v ) ; }
13951	public void removePaintListener ( PaintListener pl ) { m_painters . remove ( pl ) ; }
13961	private DateTimeZone generateTimeZone ( String timeZoneId , DateTimeZone systemTimeZone ) { if ( timeZoneId == _NULL ) { return systemTimeZone ; } try { return DateTimeZone . forID ( timeZoneId ) ; } catch ( IllegalArgumentException ignored ) { LOG . debug ( INVALID_TIME_ZONE . logFormat ( timeZoneId ) ) ; throw new BadApiRequestException ( INVALID_TIME_ZONE . format ( timeZoneId ) ) ; } }
14012	public AemToolbar newComponent ( ) { click ( MenuOption . NEW ) ; return this ; }
14022	public void addListener ( CacheListener < K , V > listener ) { listeners . add ( listener ) ; }
14040	public GroupsEditQuery phone ( String value ) { return unsafeParam ( _CHAR phone _CHAR , value ) ; }
14050	public boolean isAwake ( ) { return isAwake ; }
14084	public static boolean checkExtension ( String query ) { for ( String ext : getExtensions ( ) ) { if ( ext . equals ( query ) ) { return _BOOL ; } } return _BOOL ; }
14120	private static int try_warning ( int count , String s , String e ) { print ( _CHAR > _CHAR + s + _CHAR *** warning ***\ n > Message : _CHAR + e + _CHAR \ n _CHAR ) ; return ++ count ; }
14128	public static < V > boolean isEmpty ( V [ ] sourceArray ) { return ( sourceArray == _NULL || sourceArray . length == _NUM ) ; }
14133	public static Zltmat o ( Zltmat L ) throws JampackException { if ( L . nrow != L . ncol ) throw new JampackException ( _CHAR Can not compute the inverse of a rectangular matrix . '' ) ; return new Zltmat ( Solve . aib ( L , Eye . o ( L . nrow ) ) ) ; }
14135	public static Transaction startTransaction ( SQLiteDatabase writableDb ) { return new Transaction ( writableDb ) ; }
14146	public String toString ( ) { return getName ( ) ; }
14180	public static void main ( String [ ] args ) { MouseInteraction simulation = new MouseInteraction ( ) ; simulation . run ( ) ; }
14187	private synchronized void sendMesssage ( Message message , Peer peer ) throws IOException { System . out . println ( _CHAR Sending _CHAR + message ) ; outBuffer . clear ( ) ; message . writeToByteBuffer ( outBuffer ) ; outBuffer . flip ( ) ; channel . send ( outBuffer , peer . getAddress ( ) ) ; peer . sentData ( ) ; updatePeerLists ( ) ; }
14191	public boolean verbose ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR verbose _CHAR ) ; }
14211	public ElementType rootElementType ( ) { return theRoot ; }
14218	@ PostConstruct public void init ( ) { LOGGER . info ( _CHAR Initializing Equipment cache ... _CHAR ) ; commonInit ( ) ; doPostConfigurationOfEquipmentControlTags ( ) ; LOGGER . info ( _CHAR Equipment cache initialization complete . '' ) ; }
14233	public void clear ( ) { synchronized ( lruCacheMap ) { lruCacheMap . clear ( ) ; } }
14236	public void onBeforeSpawn ( ) { }
14243	public static String convertTeamColorToName ( final int teamValue ) { final Team [ ] teams = Team . values ( ) ; for ( final Team team : teams ) { if ( team . getValue ( ) == teamValue ) { return StringUtils . capitalize ( team . toString ( ) . toLowerCase ( ) . replaceAll ( _CHAR team_ _CHAR , _CHAR _CHAR ) ) ; } } return _CHAR UNKNOWN_TEAM _CHAR ; }
14245	long decreaseItemCount ( Item item , long count , ItemUpdateType updateType , Player actor ) { return decreaseItemCount ( item , count , updateType , QuestStatus . NONE , actor ) ; }
14274	public VideoEditQuery noComments ( Boolean value ) { return unsafeParam ( _CHAR no_comments _CHAR , value ) ; }
14277	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { UserInfoDao . dropTable ( db , ifExists ) ; BookInfoDao . dropTable ( db , ifExists ) ; }
14280	public static void main ( String [ ] args ) { Raycast simulation = new Raycast ( ) ; simulation . run ( ) ; }
14282	public static float abs ( float fValue ) { if ( fValue < _NUM ) { return - fValue ; } return fValue ; }
14292	public static boolean canAttack ( Player player , VisibleObject target ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canAttack . ordinal ( ) ] ) { if ( ! restrictions . canAttack ( player , target ) ) { return _BOOL ; } } return _BOOL ; }
14295	@ Provides @ Singleton @ BlackListIpValueStore MapStore < Long > provideBlackListIps ( @ Global CuratorFramework curator , LifeCycleRegistry lifeCycle ) { CuratorFramework webCurator = withComponentNamespace ( curator , _CHAR web _CHAR ) ; return lifeCycle . manage ( new ZkMapStore < > ( webCurator , _CHAR / blacklist _CHAR , new ZkTimestampSerializer ( ) ) ) ; }
14299	private void writeObject ( ObjectOutputStream out ) throws IOException { _writeExternal ( out ) ; }
14301	public void addColumn ( String name , Class type ) { addColumn ( name , type , _NULL ) ; }
14317	public static void dropAllTables ( Database db , boolean ifExists ) { CollectDao . dropTable ( db , ifExists ) ; UserDao . dropTable ( db , ifExists ) ; }
14344	public void pause ( ) { if ( mHandlerRunnable == _NULL ) return ; mHandler . removeCallbacks ( mHandlerRunnable ) ; mHandlerRunnable = _NULL ; }
14346	public static DmnRestUrlBuilder fromRequest ( HttpServletRequest request ) { return usingBaseUrl ( ServletUriComponentsBuilder . fromServletMapping ( request ) . build ( ) . toUriString ( ) ) ; }
14350	@ Override public void fatalError ( SAXParseException e ) throws SAXException { throw e ; }
14351	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14352	public void replaceToken ( Token token , String replacement ) { try { replace ( token . start , token . length , replacement , _NULL ) ; } catch ( BadLocationException ex ) { log . log ( Level . WARNING , _CHAR unable to replace token : _CHAR + token , ex ) ; } }
14359	public void hide ( ) { LinearLayout . LayoutParams lp = ( LinearLayout . LayoutParams ) mContentView . getLayoutParams ( ) ; lp . height = _NUM ; mContentView . setLayoutParams ( lp ) ; }
14383	public static void show ( final Activity activity ) { show ( activity , Placement . getDefaultPlacement ( ) ) ; }
14388	public void clear ( ) { observations . clear ( ) ; }
14403	public double taylor ( final double ... delta ) throws MathRuntimeException { return compiler . taylor ( data , _NUM , delta ) ; }
14410	@ Override public final void run ( ) { try { runImpl ( ) ; } catch ( Throwable e ) { log . warn ( _CHAR error handling gs ( _CHAR + getConnection ( ) . getIP ( ) + _CHAR ) message _CHAR + this , e ) ; } }
14417	public void unbind ( Object obj ) { Set < IBinding > bindings = getBindings ( obj . getClass ( ) ) ; for ( IBinding binding : bindings ) { binding . unbind ( ) ; } mBindings . remove ( obj . getClass ( ) ) ; }
14470	@ JavascriptInterface public void showToast ( String toast ) { Toast . makeText ( mContext , toast , Toast . LENGTH_SHORT ) . show ( ) ; }
14483	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ caseSensitivity = _CHAR + caseSensitivity + _CHAR ] _CHAR ; }
14488	public static String toUTF8 ( String sStr ) { byte [ ] baBytes = sStr . getBytes ( ) ; try { return new String ( baBytes , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return new String ( baBytes ) ; } }
14490	public boolean contains ( MethodOrMethodContext m ) { return set . contains ( m ) ; }
14493	public void provideStepResult ( ConditionStatus status ) { LOG . debug ( _CHAR Evaluated loadable condition _CHAR + progressData . peekLast ( ) . getLoadableComponentInfo ( ) + _CHAR with status _CHAR + status . getMessage ( ) ) ; progressData . peekLast ( ) . setStepStatus ( status ) ; }
14502	public final ProgressEvent updateProgress ( double dNewProgress ) { Progress = dNewProgress ; return this ; }
14511	public void updateInventories ( ) throws LoginFailedException , RemoteServerException { updateInventories ( _BOOL ) ; }
14523	public While whilst ( Conditional cond , Task task ) { return new While ( this . executor_ , cond , task ) ; }
14540	@ Deprecated public Builder cacheOnDisc ( ) { return cacheOnDisk ( _BOOL ) ; }
14557	public static Html create ( String html ) { return new Html ( html ) ; }
14560	public GroupsGetMembersQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
14565	public GrimpBody newBody ( Body b , String phase ) { return new GrimpBody ( b ) ; }
14590	public BafBody newBody ( Body b , String phase ) { Map < String , String > options = PhaseOptions . v ( ) . getPhaseOptions ( phase ) ; return new BafBody ( b , options ) ; }
14594	public void addWords ( String [ ] words ) { for ( String word : words ) lexicon . addWord ( word ) ; }
14614	public void hideDetailsArea ( int location ) { DisplayArea displayArea = getDisplayArea ( location ) ; if ( displayArea != _NULL ) displayArea . setVisible ( _BOOL ) ; }
14618	private void startAnimation ( long time , OverviewAnimationType type , int sourceIndex , boolean finishImmediately ) { startAnimation ( time , type , mTabModel . index ( ) , sourceIndex , finishImmediately ) ; }
14657	private void refitText ( String text , int textWidth ) { if ( textWidth <= _NUM || text == _NULL || text . length ( ) == _NUM ) return ; int targetWidth = ( textWidth - this . getPaddingLeft ( ) - this . getPaddingRight ( ) ) / _NUM ; this . setTextSize ( TypedValue . COMPLEX_UNIT_PX , targetWidth ) ; }
14671	public void paint ( Graphics g ) { g . translate ( _NUM , - visibleRow * getRowHeight ( ) ) ; super . paint ( g ) ; }
14695	private static void deleteRecursiveSilent ( CarbonFile f ) { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursiveSilent ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { return ; } }
14705	public static boolean readBool ( byte b ) { if ( b == _NUM ) { return _BOOL ; } else { return _BOOL ; } }
14715	public void notifyAbnormalSettedObservers ( AbnormalState state ) { notifyObservers ( ObserverType . ABNORMALSETTED , state ) ; }
14738	protected NewsfeedUnsubscribeQuery type ( NewsfeedItemType value ) { return unsafeParam ( _CHAR type _CHAR , value ) ; }
14746	public void execute ( IAction action ) throws InvocationTargetException , InterruptedException { if ( action != _NULL && ! action . isEnabled ( ) ) { action . setEnabled ( _BOOL ) ; } else { final ISVNRemoteFile svnResource = getSingleSelectedSVNRemoteFile ( ) ; execute ( svnResource ) ; } }
14778	public WallSearchQueryWithExtended ownersOnly ( Boolean value ) { return unsafeParam ( _CHAR owners_only _CHAR , value ) ; }
14779	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL && ! fOnlyPassPrefixMappingEvents ) { fDocumentHandler . startCDATA ( augs ) ; } }
14792	public Vector subtract ( Vector vec ) { x -= vec . x ; y -= vec . y ; z -= vec . z ; return this ; }
14834	public AudioSaveQuery save ( UserActor actor , int server , String audio ) { return new AudioSaveQuery ( getClient ( ) , actor , server , audio ) ; }
14849	public static void e ( String tag , String s , Object ... args ) { if ( LOG . ERROR >= LOGLEVEL ) Log . e ( tag , String . format ( s , args ) ) ; }
14888	private void inspectConditionsWithBooleans ( LinkedList < PsiElement > objBranchConditions ) { for ( PsiElement objExpression : objBranchConditions ) { if ( ! ( objExpression instanceof ConstantReference ) ) { continue ; } if ( ExpressionSemanticUtil . isBoolean ( ( ConstantReference ) objExpression ) ) { holder . registerProblem ( objExpression , strProblemDescriptionBooleans , ProblemHighlightType . GENERIC_ERROR_OR_WARNING ) ; } } }
14916	protected void shutdown ( ) throws InterruptedException { }
14926	public static String makeTag ( Class < ? > cls , @ IdRes int viewId , long itemId ) { return makeTag ( cls , viewId ) + _CHAR : _CHAR + itemId ; }
14964	public void clear ( ) { this . parameters = _NULL ; }
14966	@ Override public void endContentModel ( Augmentations augmentations ) throws XNIException { }
14969	public boolean equals ( BasenameList bnl ) { if ( bnl . getLength ( ) != this . getLength ( ) ) return ( _BOOL ) ; for ( int i = _NUM ; i < bnl . getLength ( ) ; i ++ ) { if ( ! this . contains ( bnl . getName ( i ) ) ) return ( _BOOL ) ; } return ( _BOOL ) ; }
14971	public void handle ( String line ) { }
14976	public void retry ( Context context , OCUpload upload ) { if ( upload != _NULL && context != _NULL ) { Account account = AccountUtils . getOwnCloudAccountByName ( context , upload . getAccountName ( ) ) ; retry ( context , account , upload ) ; } else { throw new IllegalArgumentException ( _CHAR Null parameter ! _CHAR ) ; } }
15020	@ Override public String matchPredicateOperand ( String alias ) { Objects . requireNonNull ( alias , _CHAR alias can not be _NULL _CHAR ) ; return _CHAR ID ( _CHAR + alias + _CHAR ) _CHAR ; }
15027	public boolean isMenuPathEnabled ( @ NotNull String ... path ) { return getMenuFixture ( ) . isMenuPathEnabled ( path ) ; }
15066	public void invalidateBitmap ( ) { ( ( ToolbarViewResourceAdapter ) getToolbarResourceAdapter ( ) ) . forceInvalidate ( ) ; }
15096	@ Override public void startAttlist ( String elementName , Augmentations augs ) throws XNIException { }
15109	private void putIntoCache ( String diphoneName , Diphone diphone ) { if ( diphoneMap == _NULL ) { return ; } if ( useSoftCache ) { diphoneMap . put ( diphoneName , new WeakReference ( diphone ) ) ; } else { diphoneMap . put ( diphoneName , diphone ) ; } }
15131	public static SM_SYSTEM_MESSAGE STR_ABYSS_NPC_BOSS_KILLED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15168	public boolean removeEdge ( int edge ) { return getEdgeTable ( ) . removeRow ( edge ) ; }
15169	private boolean hasURL ( URL url ) { URL [ ] urls = getURLs ( ) ; for ( int i = _NUM ; i < urls . length ; i ++ ) { if ( urls [ i ] . equals ( url ) ) return ( _BOOL ) ; } return ( _BOOL ) ; }
15174	public double [ ] guess ( ) { return new double [ ] { a , omega , phi } ; }
15195	private Object wrapResult ( Object result , Class < ? > viewClass ) { return new JacksonViewAware ( result , viewClass ) ; }
15209	public void discarded ( DiscoveryEvent event ) { DiscoveryListener l = get ( ) ; if ( l != _NULL ) { l . discarded ( event ) ; } }
15212	public boolean drag ( float x , float y ) { if ( ! checkClicked ( x , y ) ) { setPressed ( _BOOL ) ; return _BOOL ; } return isPressed ( ) ; }
15220	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
15238	public String toString ( ) { String eventClassName = ( eventClass == _NULL ? _CHAR < _NULL > _CHAR : eventClass . getName ( ) ) ; String eventIDVal = ( eventID == _NULL ? _CHAR < _NULL > _CHAR : eventID . toString ( ) ) ; return ( _CHAR Class : _CHAR + eventClassName + _CHAR , eventID : _CHAR + eventIDVal ) ; }
15242	public static < T > T checkNotNull ( T object , String message ) { if ( object == _NULL ) { throw new NullPointerException ( message ) ; } return object ; }
15283	public static SM_SYSTEM_MESSAGE STR_MSG_PET_CONDITION_UP_02_01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15294	private Entry findEntryDo ( Lease lease ) { Entry e = findLeaseFromIterator ( leases . values ( ) . iterator ( ) , lease ) ; if ( e == _NULL ) e = findLeaseFromIterator ( leaseInRenew . iterator ( ) , lease ) ; return e ; }
15312	public String readLine ( ) throws IOException { StringBuilder buf = new StringBuilder ( ) ; byte b = ( byte ) read ( ) ; while ( b != _CHAR ) { buf . append ( ( char ) b ) ; b = ( byte ) in . read ( ) ; if ( getPosition ( ) >= length ( ) ) break ; } return buf . toString ( ) ; }
15331	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set show - unaligned = _CHAR ) ; boolean value = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . getAlignmentViewerPanel ( ) . getAlignmentPanel ( ) . setShowUnalignedChars ( value ) ; }
15368	public ShapelessRecipe addIngredient ( int count , Material ingredient ) { return addIngredient ( count , ingredient , _NUM ) ; }
15369	public PhotosGetAllQuery photoSizes ( Boolean value ) { return unsafeParam ( _CHAR photo_sizes _CHAR , value ) ; }
15401	public static < T , K , U > Collector < SimpleEntry < K , U > , ? , LinkedHashMap < K , U >> entryToLinkedMap ( ) { return Collectors . toMap ( _NULL , _NULL , _NULL , _NULL ) ; }
15410	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ReturnHome_ME_TO_B ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
15423	public java_cup . runtime . Symbol scan ( ) throws java . lang . Exception { return scanner . next_token ( ) ; }
15448	public void put ( String key , File file ) throws FileNotFoundException { put ( key , file , _NULL ) ; }
15469	@ Override public String toString ( ) { return Base64 . encodeToString ( getConfidentialityKey ( ) . getEncoded ( ) , BASE64_FLAGS ) + _CHAR : _CHAR + Base64 . encodeToString ( getIntegrityKey ( ) . getEncoded ( ) , BASE64_FLAGS ) ; }
15508	@ Override public boolean equals ( Object other ) { return this == other || ( other instanceof Author && hashCode ( ) == other . hashCode ( ) ) ; }
15525	public static < T > ConfiguredElement < T > create ( @ NotNull FolderConfiguration folderConfiguration , @ NotNull T value ) { return new ConfiguredElement < T > ( folderConfiguration , value ) ; }
15541	private void restoreFromKeypress ( final KeyEvent keyEvent , final int keyNumber ) { if ( keyEvent . isAltDown ( ) ) { final int arrayIndex = ( keyNumber > _NUM ? keyNumber : MAX_RECENT_MESSAGES ) - _NUM ; if ( arrayIndex < recentMessages . size ( ) ) { displayMessage ( recentMessages . get ( arrayIndex ) ) ; } keyEvent . consume ( ) ; } }
15555	public void addActivity ( AXmlNode node ) { if ( activities . isEmpty ( ) ) activities = new ArrayList < AXmlNode > ( ) ; activities . add ( node ) ; }
15577	private void addToken ( String tokenStr ) { Integer tokenInt = ( Integer ) fTokenNames . get ( tokenStr ) ; if ( tokenInt == _NULL ) { tokenInt = new Integer ( fTokenNames . size ( ) ) ; fTokenNames . put ( tokenInt , tokenStr ) ; } addToken ( tokenInt . intValue ( ) ) ; }
15592	public void notifySummonReleaseObservers ( ) { notifyObservers ( ObserverType . SUMMONRELEASE ) ; }
15600	public static boolean saveTime ( ) { log . info ( _CHAR Game time saved ... _CHAR ) ; return DAOManager . getDAO ( ServerVariablesDAO . class ) . store ( _CHAR time _CHAR , getGameTime ( ) . getTime ( ) ) ; }
15625	boolean isRecovering ( ) { return recoverMessages . size ( ) > _NUM ; }
15627	protected void endVisitNode ( ASTNode node ) { }
15633	@ SuppressWarnings ( { _CHAR unchecked _CHAR , _CHAR cast _CHAR } ) public CompilationUnit compilationUnit ( ) { ASTNode $ State state = state ( ) ; CompilationUnit compilationUnit_value = getParent ( ) . Define_CompilationUnit_compilationUnit ( this , _NULL ) ; return compilationUnit_value ; }
15649	public LeadsCompleteQuery complete ( UserActor actor , String vkSid , String secret ) { return new LeadsCompleteQuery ( getClient ( ) , actor , vkSid , secret ) ; }
15697	public Builder appendStringColumnTransform ( String column , String toAppend ) { return transform ( new AppendStringColumnTransform ( column , toAppend ) ) ; }
15709	void assignLocalToStaticField ( Local right , String field ) { PurityNode node = PurityGlobalNode . node ; localEscapes ( right ) ; mutated . put ( node , field ) ; nodes . add ( node ) ; if ( doCheck ) sanityCheck ( ) ; }
15713	public Array < T > values ( ) { Array < T > out = new JavaArray < > ( ) ; for ( T value : internalMap . values ( ) ) { out . push ( value ) ; } return out ; }
15715	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { FriendDao . dropTable ( db , ifExists ) ; GroupsDao . dropTable ( db , ifExists ) ; BlackListDao . dropTable ( db , ifExists ) ; GroupMemberDao . dropTable ( db , ifExists ) ; }
15717	public int writeMethodId ( MethodId methodId ) { int off = data . position ( ) ; writeUnsignedShort ( methodId . declaringClassIndex ) ; writeUnsignedShort ( methodId . protoIndex ) ; writeInt ( methodId . nameIndex ) ; return off ; }
15728	private static void try_success ( String s , String e ) { print ( _CHAR > _CHAR + s + _CHAR success \ n _CHAR ) ; if ( e != _CHAR _CHAR ) { print ( _CHAR > Message : _CHAR + e + _CHAR \ n _CHAR ) ; } }
15737	public void startPlayingAudio ( String id , String file ) { AudioPlayer audio = getOrCreatePlayer ( id , file ) ; audio . startPlaying ( file ) ; getAudioFocus ( ) ; }
15749	public synchronized void deleteAllTables ( ) { List < String > tableNames = new ArrayList < String > ( tableLookup . keySet ( ) ) ; for ( String s : tableNames ) { deleteTable ( s ) ; } }
15811	public LeadsCompleteQuery complete ( String vkSid , String secret ) { return new LeadsCompleteQuery ( getClient ( ) , vkSid , secret ) ; }
15820	public static SM_SYSTEM_MESSAGE STR_DISABLED_OTHER_CHAT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15825	public void addLanguage ( Language language ) { addLanguage ( language . getId ( ) ) ; }
15840	public void addItem ( ForceItem item ) { items . add ( item ) ; }
15847	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getDuplicateReadFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getDuplicateReadFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
15859	public static void renderTemplate ( String templateLocation , Map < String , Object > context , Appendable outWriter ) throws TemplateException , IOException { Template template = getTemplate ( templateLocation ) ; renderTemplate ( template , context , outWriter ) ; }
15864	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_VOICE_FINISH_NOTIFY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15870	private static boolean checkNullForMeasures ( Object object ) { Object [ ] measures = ( Object [ ] ) object ; for ( Object measure : measures ) { if ( _NULL != measure ) { return _BOOL ; } } return _BOOL ; }
15907	public void disabledTestNonReversibleTransform ( ) { }
15909	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_START_FAIL1 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15910	public void addDataSource ( DataSource added ) { registerDataSource ( added ) ; }
15911	public SimplePollingContainerConfigurer eventListenerAnnotation ( Object eventListener ) { AnnotationEventListenerAdapter annotationEventListenerAdapter = new AnnotationEventListenerAdapter ( ) ; annotationEventListenerAdapter . setDelegate ( eventListener ) ; annotationEventListenerAdapter . afterPropertiesSet ( ) ; pollingEventListenerContainer . setEventListener ( annotationEventListenerAdapter ) ; return this ; }
15912	public synchronized void waitForLastSpace ( ) throws InterruptedException { if ( ! _activeSpaces . isEmpty ( ) ) return ; _currentSpaceState = StartupState . WAITING ; wait ( ) ; changeState ( StartupState . NOT_LAST ) ; }
15923	public ExitMonitorInst newExitMonitorInst ( ) { return new BExitMonitorInst ( ) ; }
15927	public static final void drawPolygon ( GL2 gl , Polygon p , boolean points ) { RenderUtilities . drawPolygon ( gl , p . getVertices ( ) , points ) ; }
15931	public int count ( ) { synchronized ( mDiskCacheLock ) { return mLruEntries . size ( ) ; } }
15958	public CART load ( String fileName ) throws IOException , MaryConfigurationException { FileInputStream fis = new FileInputStream ( fileName ) ; try { return loadFromStream ( fis ) ; } finally { fis . close ( ) ; } }
15976	protected void deleteStorePath ( ) { FileFactory . FileType fileType = FileFactory . getFileType ( this . carbonStorePath ) ; CarbonFile carbonFile = FileFactory . getCarbonFile ( this . carbonStorePath , fileType ) ; deleteRecursiveSilent ( carbonFile ) ; }
15979	public void java_lang_Class_getProtectionDomain0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable protdmn = helper . tempField ( _CHAR < java . lang . Class ProtDmn > _CHAR ) ; helper . assign ( returnVar , protdmn ) ; }
16032	public void destroy ( ) { destroyReaderModeControl ( ) ; mParentView = _NULL ; }
16038	public Configurator fromFile ( File file ) { if ( ! file . exists ( ) ) { throw new FileNotFoundException ( file . getAbsolutePath ( ) + _CHAR does not exist . '' ) ; } return new Configurator ( file . getAbsolutePath ( ) , _BOOL ) ; }
16039	public LikesGetListQueryWithExtended friendsOnly ( Boolean value ) { return unsafeParam ( _CHAR friends_only _CHAR , value ) ; }
16055	public Types type ( ) throws DataTypeException { throw new DataTypeException ( _CHAR No type _CHAR ) ; }
16057	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { FileModelDao . dropTable ( db , ifExists ) ; }
16074	public IntArrayList data ( ) { return values ; }
16080	public AemListItem up ( ) { buttonUp . click ( ) ; return this ; }
16119	protected AdsGetSuggestionsQueryWithRegions section ( AdsGetSuggestionsSection value ) { return unsafeParam ( _CHAR section _CHAR , value ) ; }
16132	public PriorityQueue priorityQueue ( int concurrency ) { return new PriorityQueue ( this . executor_ , concurrency ) ; }
16143	public final boolean isOverridingDevice ( ) { return ( myOverride & CFG_DEVICE ) != _NUM ; }
16151	public static String clearLastViewedProducts ( HttpServletRequest request , HttpServletResponse response ) { HttpSession session = request . getSession ( ) ; if ( session != _NULL ) { session . setAttribute ( _CHAR lastViewedProducts _CHAR , FastList . newInstance ( ) ) ; } return _CHAR success _CHAR ; }
16162	public void onRecentTabsPageClosed ( ) { if ( ! mCanDisableSessionInvalidations ) return ; -- mNumRecentTabPages ; if ( mNumRecentTabPages == _NUM ) { setSessionInvalidationsEnabled ( _BOOL , UNREGISTER_FOR_SESSION_SYNC_INVALIDATIONS_DELAY_MS ) ; } }
16163	public boolean isUserSynchronized ( ) { Debug . logInfo ( this . getClass ( ) . getName ( ) + _CHAR Authenticator isUserSynchronized ( ) _CHAR , module ) ; return _BOOL ; }
16174	public static void json ( String json ) { Logger . json ( json ) ; }
16179	public static String extendedTrim ( String content ) { return content . replaceAll ( _CHAR \\ s + _CHAR , _CHAR _CHAR ) . replace ( _CHAR \ n _CHAR , _CHAR _CHAR ) . replace ( _CHAR \ r _CHAR , _CHAR _CHAR ) . trim ( ) ; }
16229	public int createDeferredAttribute ( String attrName , String attrValue , boolean specified ) { return createDeferredAttribute ( attrName , _NULL , attrValue , specified ) ; }
16268	public static double dotProduct ( final Quaternion q1 , final Quaternion q2 ) { return q1 . getQ0 ( ) * q2 . getQ0 ( ) + q1 . getQ1 ( ) * q2 . getQ1 ( ) + q1 . getQ2 ( ) * q2 . getQ2 ( ) + q1 . getQ3 ( ) * q2 . getQ3 ( ) ; }
16273	public VideoDeleteCommentQuery deleteComment ( UserActor actor , int commentId ) { return new VideoDeleteCommentQuery ( getClient ( ) , actor , commentId ) ; }
16281	private void deleteStorePath ( ) { FileFactory . FileType fileType = FileFactory . getFileType ( this . carbonStorePath ) ; CarbonFile carbonFile = FileFactory . getCarbonFile ( this . carbonStorePath , fileType ) ; deleteRecursiveSilent ( carbonFile ) ; }
16299	public static void addPattern ( String emojiText , Object icon ) { emoticons . put ( Pattern . compile ( Pattern . quote ( emojiText ) ) , icon ) ; }
16320	public int size ( ) { return fContextStack . size ( ) ; }
16329	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getReadFailsVendorQualityCheckFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getReadFailsVendorQualityCheckFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
16365	public String toString ( ) { return _CHAR ClusterUnitPitchmarkGenerator _CHAR ; }
16385	static void silentlyClose ( Closeable closeable ) { try { if ( closeable != _NULL ) { closeable . close ( ) ; } } catch ( IOException e ) { } }
16394	private void transformToTridiagonal ( final RealMatrix matrix ) { transformer = new TriDiagonalTransformer ( matrix ) ; main = transformer . getMainDiagonalRef ( ) ; secondary = transformer . getSecondaryDiagonalRef ( ) ; }
16412	private void checkConfiguration ( ) { if ( configuration == _NULL ) { throw new IllegalStateException ( ERROR_NOT_INIT ) ; } }
16419	public static void i ( String tag , String s , Object ... args ) { if ( LOG . INFO >= LOGLEVEL ) Log . i ( tag , String . format ( s , args ) ) ; }
16436	public ModelKeyMap findKeyMap ( String fieldName ) { for ( ModelKeyMap keyMap : keyMaps ) { if ( keyMap . getFieldName ( ) . equals ( fieldName ) ) return keyMap ; } return _NULL ; }
16440	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigGeometryField copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigGeometryField ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
16466	public static SM_SYSTEM_MESSAGE STR_MSG_COMPLETE_EXCHANGE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
16476	public AemParsys removeFirstComponentOfType ( Class < ? > componentClass ) { return removeNthComponentOfType ( componentClass , _NUM ) ; }
16477	public void sendDelayedTimeDeadbandValues ( ) { equipmentLogger . debug ( _CHAR Sending all time deadband delayed values to the server _CHAR ) ; this . equipmentTimeDeadband . sendDelayedTimeDeadbandValues ( ) ; }
16485	private static void check ( double [ ] [ ] x , double [ ] [ ] y ) { Matrix A = new Matrix ( x ) ; Matrix B = new Matrix ( y ) ; check ( A , B ) ; }
16499	public boolean handlesPainting ( ) { return _BOOL ; }
16503	@ Override public void startConditional ( short type , Augmentations augs ) throws XNIException { }
16512	int observerCount ( ) { return observers . get ( ) . length ; }
16528	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { if ( fPerformValidation && fInElementContent ) { charDataInContent ( ) ; } fInCDATASection = _BOOL ; if ( fDocumentHandler != _NULL ) { fDocumentHandler . startCDATA ( augs ) ; } }
16544	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
16556	@ Override public boolean equals ( Object other ) { return this == other || ( other instanceof User && hashCode ( ) == other . hashCode ( ) ) ; }
16573	public static Observations fromSnippets ( KindredSnippets [ ] snippets ) { for ( KindredSnippets obj : snippets ) { if ( obj instanceof Observations ) { return ( Observations ) obj ; } } return _NULL ; }
16585	public void scrollToFinishActivity ( ) { final int childWidth = mContentView . getWidth ( ) ; int left = _NUM , top = _NUM ; left = childWidth + mShadowLeft . getIntrinsicWidth ( ) + OVERSCROLL_DISTANCE ; mDragHelper . smoothSlideViewTo ( mContentView , left , top ) ; invalidate ( ) ; }
16597	public String toString ( ) { return _CHAR AudioOutput _CHAR ; }
16625	protected AdsGetSuggestionsQueryWithSchools section ( AdsGetSuggestionsSection value ) { return unsafeParam ( _CHAR section _CHAR , value ) ; }
16637	public synchronized void press ( int value ) { if ( this . state != Input . State . WAITING_FOR_RELEASE ) { this . value = this . value + value ; if ( this . holdType == Input . Hold . HOLD ) { this . state = Input . State . WAITING_FOR_RELEASE ; } else { this . state = Input . State . PRESSED ; } } }
16645	public static void loadImage ( final Context _context , final ImageView _imageView , final String _imageUrl , final int _placeHolderResource ) { getBitmapLoader ( _context , _imageUrl , _placeHolderResource ) . centerCrop ( ) . into ( _imageView ) ; }
16647	public void addLanguage ( String languageId ) { query . append ( _CHAR + languageId : _CHAR + languageId ) ; }
16653	private DataSourceAttributePanel createDataSourceAttributePanel ( Class < ? > expectedDataType ) { DataSourceAttributePanel panel = new DataSourceAttributePanel ( this ) ; panel . setDataType ( expectedDataType ) ; outerPanel . add ( panel , DataSourceAttributePanel . getPanelName ( ) ) ; return panel ; }
16672	@ VisibleForTesting protected void addOMADownloadToSharedPrefs ( String omaInfo ) { Set < String > omaDownloads = getStoredDownloadInfo ( PENDING_OMA_DOWNLOADS ) ; omaDownloads . add ( omaInfo ) ; storeDownloadInfo ( PENDING_OMA_DOWNLOADS , omaDownloads ) ; }
16676	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getReadNegativeStrandFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getReadNegativeStrandFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
16737	public boolean isLineVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { enabled = ( obj instanceof Rule ) && ( geometryType == GeometryTypeEnum . LINE ) ; } return enabled ; }
16747	private String hashBitmap ( Bitmap bmp ) { int [ ] allpixels = new int [ bmp . getHeight ( ) * bmp . getWidth ( ) ] ; bmp . getPixels ( allpixels , _NUM , bmp . getWidth ( ) , _NUM , _NUM , bmp . getWidth ( ) , bmp . getHeight ( ) ) ; return Integer . toHexString ( Arrays . hashCode ( allpixels ) ) ; }
16843	public void removeMarkers ( ) { Markers . removeMarkers ( pane , marker ) ; }
16856	public void showContent ( ) { switchState ( CONTENT , _NULL , _NULL , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
16865	private void changeState ( final ScriptRunningState newState ) { changeState ( eventBus , script . getName ( ) , newState , script , executor ) ; }
16872	private static String format ( double value ) { return String . format ( _CHAR % s % s _CHAR , SCALE_PREFIX , NumberFormat . getIntegerInstance ( ) . format ( ( int ) value ) ) ; }
16879	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
16930	public AppsGetFriendsListQuery fields ( EnumParam ... value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
16952	public void apply ( NexusStreamParser np ) throws Exception { }
16956	public static long decrementExact ( final long n ) throws MathRuntimeException { if ( n == Long . MIN_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_SUBTRACTION , n , _NUM ) ; } return n - _NUM ; }
16958	private void handleFileDataValueDelete ( TrackedEntityDataValue dataValue ) { FileResource fileResource = fetchFileResource ( dataValue ) ; if ( fileResource == _NULL ) { return ; } fileResourceService . deleteFileResource ( fileResource . getUid ( ) ) ; }
16993	public static String baseTypeName ( String s ) { int index = s . indexOf ( _CHAR [ _CHAR ) ; if ( index < _NUM ) { return s ; } else { return s . substring ( _NUM , index ) ; } }
16997	public double value ( ) throws ConcurrentModificationException , NoSuchElementException { if ( referenceCount != count ) { throw new ConcurrentModificationException ( ) ; } if ( current < _NUM ) { throw new NoSuchElementException ( ) ; } return values [ current ] ; }
17007	public void connect ( ) { if ( listeners . isEmpty ( ) ) { AirMapLog . i ( _CHAR TrafficService _CHAR , _CHAR No listeners , not connecting _CHAR ) ; return ; } AirMapLog . i ( _CHAR TrafficService _CHAR , _CHAR Connecting to Traffic Service _CHAR ) ; if ( connectionState == ConnectionState . Connecting ) { return ; } connectionState = ConnectionState . Connecting ; allTraffic . clear ( ) ; AirMap . getCurrentFlight ( currentFlightCallback ) ; }
17049	private void updateConstraintHandlesPositions ( ) { for ( ConstraintHandle mConstraintHandle : mConstraintHandles ) { mConstraintHandle . updatePosition ( ) ; } }
17075	public AemToolbar delete ( ) { click ( MenuOption . DELETE ) ; return this ; }
17104	@ Override public synchronized boolean isRunning ( ) { return running ; }
17149	@ Override public boolean equals ( Object other ) { return this == other || ( other instanceof Role && hashCode ( ) == other . hashCode ( ) ) ; }
17182	public static double dotProduct ( Vector3D v1 , Vector3D v2 ) { return v1 . dotProduct ( v2 ) ; }
17188	public ContentletQuery addHost ( Host host ) { return addHost ( host . getIdentifier ( ) ) ; }
17195	public Dfp power10K ( final int e ) { Dfp d = newInstance ( getOne ( ) ) ; d . exp = e + _NUM ; return d ; }
17247	public static < T extends RealFieldElement < T >> T dotProduct ( final Vector3D v1 , final FieldVector3D < T > v2 ) { return v2 . dotProduct ( v1 ) ; }
17250	public AudioSearchQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
17279	@ Override public void endConditional ( Augmentations augmentations ) throws XNIException { }
17289	public VideoGetAlbumsQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
17309	public boolean isTextVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { enabled = ( obj instanceof Rule ) ; } return enabled ; }
17318	public int degree ( ) { return coefficients . length - _NUM ; }
17337	public void updateCache ( ) throws SVNException { ensurePreferencesStored ( ) ; }
17379	public void sendMessage ( String message ) { skype . sendGroupMessage ( this , message ) ; }
17405	public static SM_SYSTEM_MESSAGE STR_MSG_USE_ABYSSPOINT ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
17428	public static < T > Set < T > toSet ( T obj1 , T obj2 ) { Set < T > theSet = new LinkedHashSet < T > ( ) ; theSet . add ( obj1 ) ; theSet . add ( obj2 ) ; return theSet ; }
17454	public static int subtractExact ( final int a , final int b ) { final int sub = a - b ; if ( ( a ^ b ) < _NUM && ( sub ^ b ) >= _NUM ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_SUBTRACTION , a , b ) ; } return sub ; }
17460	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
17466	public void addLanguage ( Long languageId ) { if ( languageId != _NULL ) { addLanguage ( languageId . toString ( ) ) ; } else { Logger . warn ( this , _CHAR Tried to add languageId Null ! _CHAR ) ; } }
17477	public FieldVector3D < T > add ( final Vector3D v ) { return new FieldVector3D < T > ( x . add ( v . getX ( ) ) , y . add ( v . getY ( ) ) , z . add ( v . getZ ( ) ) ) ; }
17482	public static SM_SYSTEM_MESSAGE STR_GUILD_INVITE_HE_JOINED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17514	public static long store ( String id , String name , InputStream in ) throws IOException { return store ( X . EMPTY , id , name , X . EMPTY , _NUM , in . available ( ) , in , - _NUM , _BOOL , - _NUM ) ; }
17564	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
17566	private String createName ( polyglot . ast . ProcedureDecl procedure ) { return procedure . name ( ) ; }
17601	public static SM_SYSTEM_MESSAGE STR_MSG_MPHeal_TO_OTHER ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
17613	private void initResource ( String path ) { }
17631	@ Override public void fatalError ( SAXParseException e ) throws SAXException { throw e ; }
17656	@ Deprecated public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
17660	private static boolean validClass ( Class < ? > clazz , Class < ? > classToIgnore ) { return ( ( clazz . getName ( ) . compareTo ( classToIgnore . getName ( ) ) != _NUM ) && ( clazz . getSimpleName ( ) . compareTo ( PACKAGE_INFO ) != _NUM ) ) ; }
17670	public Optional < Double > median ( ) { if ( isEmpty ( ) ) return Optional . empty ( ) ; return Optional . of ( percentile ( _NUM ) ) ; }
17690	public static boolean isLoggable ( int logLevel ) { return ( logLevel >= LOGLEVEL ) ; }
17722	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
17727	protected static void checkValue ( Object value ) { if ( ! ( value instanceof Long ) ) throw new IllegalArgumentException ( _CHAR value is not a Long _CHAR ) ; }
17746	public void cipher ( byte [ ] data ) { cipher ( data , _NUM , data . length ) ; }
17768	@ Nullable public static String readTextFromDisk ( @ NotNull File file ) { return readTextFromDisk ( file , _BOOL ) ; }
17773	static < TypeOfValue > boolean arrayContains ( final TypeOfValue [ ] array , final TypeOfValue value ) { for ( final TypeOfValue arrayValue : array ) { if ( arrayValue == value || ( arrayValue != _NULL && arrayValue . equals ( value ) ) ) { return _BOOL ; } } return _BOOL ; }
17835	public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
17846	@ Override public void onTxEndStatement ( Transaction tx ) { lockTbl . releaseAll ( txNum , _BOOL ) ; }
17891	private void checkConfiguration ( ) { if ( configuration == _NULL ) { throw new IllegalStateException ( ERROR_NOT_INIT ) ; } }
17894	public static Settings init ( String tag ) { printer = new LoggerPrinter ( ) ; return printer . init ( tag ) ; }
17898	@ Override public void addListener ( DataSourceUpdatedInterface listener ) { if ( ! listenerList . contains ( listener ) ) { listenerList . add ( listener ) ; if ( getGeometryType ( ) != GeometryTypeEnum . UNKNOWN ) { notifyDataSourceLoaded ( ) ; } } }
17918	protected void buttonPressed ( int buttonId ) { if ( buttonId == REPLACE_ID ) { try { input . replaceLocalWithCurrentlySelectedRevision ( ) ; } catch ( CoreException e ) { handle ( e ) ; } buttonId = IDialogConstants . OK_ID ; } super . buttonPressed ( buttonId ) ; }
17932	public static void main ( String [ ] args ) { Billiards simulation = new Billiards ( ) ; simulation . run ( ) ; }
17946	public static long incrementExact ( final long n ) throws MathRuntimeException { if ( n == Long . MAX_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_ADDITION , n , _NUM ) ; } return n + _NUM ; }
17948	public static String toUTF8 ( String sStr ) { byte [ ] baBytes = sStr . getBytes ( ) ; try { return new String ( baBytes , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return new String ( baBytes ) ; } }
17955	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; TaxonomicProfileDialog viewer = ( TaxonomicProfileDialog ) getParent ( ) ; viewer . setVisible ( _BOOL ) ; }
17964	public Retry retry ( Task task ) { return new Retry ( this . executor_ , task ) ; }
17984	public boolean compare ( ClusterUnitDatabase other ) { System . out . println ( _CHAR Warning : Compare not implemented yet _CHAR ) ; return _BOOL ; }
18001	public AemTags clear ( ) { for ( AemTagItem item : this ) { item . remove ( ) ; } return this ; }
18096	public void removeAll ( String key ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } synchronized ( contexts ) { contexts . removeIf ( _NULL ) ; } }
18099	public Builder withStreaming ( ) { this . streaming = _BOOL ; return this ; }
18110	public boolean add ( int val ) { int index = insertionIndex ( val ) ; if ( index < _NUM ) { return _BOOL ; } byte previousState = _states [ index ] ; _set [ index ] = val ; _states [ index ] = FULL ; postInsertHook ( previousState == FREE ) ; return _BOOL ; }
18118	public final void write ( final byte b ) { baos . write ( b ) ; }
18124	public boolean isCollection ( ) { return myObject instanceof Map || myObject instanceof Object [ ] || myObject instanceof byte [ ] ; }
18125	public static long now ( ) { return ( new Date ( ) ) . getTime ( ) ; }
18127	public AudioGetRecommendationsQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
18141	public String toName ( cp_info constant_pool [ ] ) { CONSTANT_Utf8_info ci ; ci = ( CONSTANT_Utf8_info ) ( constant_pool [ name_index ] ) ; return ci . convert ( ) ; }
18145	@ Deprecated public String catalogClassName ( ) { return getCatalogClassName ( ) ; }
18163	public static String computeShannonWeaver ( ViewerBase viewer , ProgressListener progressListener ) throws IOException , CanceledException { if ( viewer instanceof MainViewer ) return toString ( computeShannonWeaver ( ( MainViewer ) viewer , progressListener ) ) ; else if ( viewer instanceof ClassificationViewer ) return toString ( computeShannonWeaver ( ( ClassificationViewer ) viewer , progressListener ) ) ; else return _NULL ; }
18170	public static < T > Set < T > toSet ( T obj1 ) { Set < T > theSet = new LinkedHashSet < T > ( ) ; theSet . add ( obj1 ) ; return theSet ; }
18180	private int wordForwards ( int offset ) { int x = wordBI . following ( offset ) ; if ( x > offset + _NUM ) { x = offset ; } return x ; }
18181	public static < T > List < T > toList ( T obj1 ) { List < T > list = new LinkedList < T > ( ) ; list . add ( obj1 ) ; return list ; }
18185	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { TranslateDao . createTable ( db , ifNotExists ) ; }
18201	public boolean needsUpdatingWhileSaving ( ) { return mNeedsUpdating ; }
18225	public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
18273	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { NewsChannelTableDao . dropTable ( db , ifExists ) ; }
18286	public static String format ( char text , char strand ) { if ( strand == _CHAR ) { return _CHAR \ _NUM [ _NUM ; _NUM ; _NUM ; _NUM ; _NUM ; _NUM _CHAR + text + _CHAR \ _NUM [ _NUM _CHAR ; } else if ( strand == _CHAR ) { return _CHAR \ _NUM [ _NUM ; _NUM ; _NUM ; _NUM ; _NUM ; _NUM _CHAR + text + _CHAR \ _NUM [ _NUM _CHAR ; } else { return _CHAR \ _NUM [ _NUM ; _NUM ; _NUM ; _NUM ; _NUM ; _NUM _CHAR + text + _CHAR \ _NUM [ _NUM _CHAR ; } }
18289	public void apply ( NexusStreamParser np ) throws Exception { }
18308	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18317	public static void checkSymmetric ( RealMatrix matrix , double eps ) { isSymmetricInternal ( matrix , eps , _BOOL ) ; }
18321	private static int try_failure ( int count , String s , String e ) { print ( _CHAR > _CHAR + s + _CHAR *** failure ***\ n > Message : _CHAR + e + _CHAR \ n _CHAR ) ; return ++ count ; }
18335	public Optional < Double > avg ( ) { if ( isEmpty ( ) ) return Optional . empty ( ) ; return Optional . of ( sum ( ) / getEventCount ( ) ) ; }
18348	public ElementType rootElementType ( ) { return theRoot ; }
18389	public void clear ( ) { uid = _NUM ; readHeader = _NULL ; readSequence = _NULL ; readWeight = _NUM ; mateReadUId = _NUM ; mateType = _NUM ; readLength = _NUM ; complexity = _NUM ; numberOfMatches = _NUM ; matchBlocks = new MatchBlockRMA2 [ _NUM ] ; }
18403	private void checkConfiguration ( ) { if ( configuration == _NULL ) { throw new IllegalStateException ( ERROR_NOT_INIT ) ; } }
18422	private boolean isTestMode ( ) { return ( ( System . getProperty ( _CHAR c2mon . server . testMode _CHAR ) ) != _NULL && ( System . getProperty ( _CHAR c2mon . server . testMode _CHAR ) . equals ( _CHAR _BOOL _CHAR ) ) ) ; }
18424	static int sp ( Context context , int val ) { return ( int ) TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_SP , val , context . getResources ( ) . getDisplayMetrics ( ) ) ; }
18435	protected Object cloneBody ( ) { return cloneObject ( Body ) ; }
18459	public String toString ( ) { return _CHAR MulticastRequest [ _CHAR + host + _CHAR : _CHAR + port + _CHAR , _CHAR + Arrays . asList ( groups ) + _CHAR , _CHAR + Arrays . asList ( serviceIDs ) + _CHAR ] _CHAR ; }
18469	public boolean isPolygonVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { enabled = ( obj instanceof Rule ) && ( geometryType == GeometryTypeEnum . POLYGON ) ; } return enabled ; }
18502	public PhotosConfirmTagQuery confirmTag ( UserActor actor , String photoId , int tagId ) { return new PhotosConfirmTagQuery ( getClient ( ) , actor , photoId , tagId ) ; }
18506	public void removeGraphModelListener ( GraphListener listnr ) { m_listeners . remove ( listnr ) ; }
18519	public static void xml ( String xml ) { printer . xml ( xml ) ; }
18592	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; final MeganizeDAADialog dialog = new MeganizeDAADialog ( getViewer ( ) . getFrame ( ) , ( Director ) getDir ( ) ) ; final String command = dialog . showAndGetCommand ( ) ; if ( command != _NULL ) execute ( command ) ; }
18603	public void runJob ( Job job ) throws JobManagerException { assertIsRunning ( ) ; if ( job . isValid ( ) ) { JobPoller . getInstance ( ) . queueNow ( job ) ; } }
18614	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { fInCDATA = _BOOL ; if ( fDocumentHandler != _NULL ) { fDocumentHandler . startCDATA ( augs ) ; } }
18619	@ Override public void endConditional ( Augmentations augs ) throws XNIException { }
18630	protected final void unregisterDataSource ( DataSource removed ) { unregisterDataSources ( Collections . singleton ( removed ) ) ; }
18637	private T min ( T a , T b ) { return a . getReal ( ) < b . getReal ( ) ? a : b ; }
18723	public String toString ( ) { return getSignature ( ) ; }
18724	private void throwCloseConnection ( ) throws ClosedChannelException { ClosedChannelException closeEx = new ClosedChannelException ( ) ; closeEx . initCause ( new IOException ( _CHAR Connection has been closed by peer _CHAR ) ) ; throw closeEx ; }
18729	public StaticScript metaArguments ( Object ... metaArguments ) { this . metaArguments = metaArguments ; return this ; }
18772	@ Override @ PostConstruct public void init ( ) throws IDBPersistenceException { super . init ( ) ; }
18773	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_GUILD_CASTLE_TAKEN ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
18799	public boolean isClosed ( ) { return closed ; }
18804	public void init ( ) { verticalStepperFormLayout . initialiseVerticalStepperForm ( this ) ; }
18857	boolean isAncestorOf ( Node a , Node b ) { for ( Node node = b ; node != _NULL ; node = node . getParentNode ( ) ) { if ( node == a ) return _BOOL ; } return _BOOL ; }
18869	public static void v ( String tag , String s , Object ... args ) { if ( LOG . VERBOSE >= LOGLEVEL ) Log . v ( tag , String . format ( s , args ) ) ; }
18871	private ProxySelector autodetectProxyIfAvailable ( Dict proxySettings , ProxySelector result ) throws ProxyException { if ( isActive ( proxySettings . get ( _CHAR ProxyAutoDiscoveryEnable _CHAR ) ) ) { ProxySelector wp = new WpadProxySearchStrategy ( ) . getProxySelector ( ) ; if ( wp != _NULL ) { result = wp ; } } return result ; }
18896	public boolean isConnected ( Direction direction ) { return mConstraintWidget . getAnchor ( lookupType ( direction ) ) . isConnected ( ) ; }
18905	public void closeAllFiles ( ) { for ( InputReader r : fileId2raf ) { try { if ( r != _NULL ) r . close ( ) ; } catch ( Exception ex ) { } } }
18915	public static void showSnackShort ( View view , String text ) { Snackbar . make ( view , text , Snackbar . LENGTH_SHORT ) . show ( ) ; }
18937	int awaitTransmitComplete ( long timeout , TimeUnit unit ) throws Exception { return Await . result ( transmitComplete , Duration . fromTimeUnit ( timeout , unit ) ) ; }
18947	@ Override public void onResponse ( GankData response ) { getContentText . setText ( response . toString ( ) ) ; }
18964	public static Settings init ( String tag ) { printer = new LoggerPrinter ( ) ; return printer . init ( tag ) ; }
18977	@ OPTIONS public Response preflightResponse ( ) { return Response . ok ( ) . build ( ) ; }
18979	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
18995	@ Override public Settings init ( String tag ) { if ( tag == _NULL ) { throw new NullPointerException ( _CHAR tag may not be _NULL _CHAR ) ; } if ( tag . trim ( ) . length ( ) == _NUM ) { throw new IllegalStateException ( _CHAR tag may not be empty _CHAR ) ; } this . tag = tag ; this . settings = new Settings ( ) ; return settings ; }
19024	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getProperPairFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getProperPairFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
19057	protected VideoReportCommentQuery commentId ( int value ) { return unsafeParam ( _CHAR comment_id _CHAR , value ) ; }
19068	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
19072	public void append ( byte [ ] bytes , int offset , int length ) { setCapacity ( count + length ) ; System . arraycopy ( bytes , offset , this . get ( ) , count , length ) ; count = count + length ; }
19078	public void add ( float f ) { data . add ( f ) ; }
19105	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { }
19123	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
19141	protected Definition parseWSDLDefinition ( ) throws WSDLException { WSDLFactory wsdlFactory = WSDLFactory . newInstance ( ) ; WSDLReader reader = wsdlFactory . newWSDLReader ( ) ; reader . setFeature ( _CHAR javax . wsdl . verbose _CHAR , _BOOL ) ; reader . setFeature ( _CHAR javax . wsdl . importDocuments _CHAR , _BOOL ) ; Definition definition = reader . readWSDL ( this . wsdlLocation ) ; return definition ; }
19148	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { }
19178	public boolean isVoiced ( ) { Allophone allophone = getAllophone ( ) ; return allophone . isVoiced ( ) ; }
19207	public static String removeDelimiter ( String s , char delim ) { return removeDelimiter ( s , delim , ( char ) - _NUM , ( char ) - _NUM ) ; }
19227	@ PickTriggerResult public int fromCamera ( ) { final File outputFile = this . createCameraImageFile ( ) ; if ( outputFile == _NULL ) { return PickTriggerResult . TRIGGER_PICK_ERR_CAM_FILE ; } return this . triggerPick ( this . prepareCameraIntent ( this . createCameraImageUri ( outputFile ) ) , QiPick . REQ_CAMERA ) ; }
19236	@ Override public void endContentModel ( Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . endContentModel ( augs ) ; if ( fDTDContentModelHandler != _NULL ) { fDTDContentModelHandler . endContentModel ( augs ) ; } }
19250	public boolean isMatchCase ( ) { return isOptionEnabled ( UrlFilterRuleOption . MATCH_CASE ) ; }
19258	public GroupsGetByIdQuery groupIds ( String ... value ) { return unsafeParam ( _CHAR group_ids _CHAR , value ) ; }
19261	public boolean isReleased ( ) { return mReleased ; }
19287	public static final void removeNullValues ( ArrayList types ) { ArrayList filter = new ArrayList ( _NUM ) ; filter . add ( _NULL ) ; types . removeAll ( filter ) ; }
19290	public static SM_SYSTEM_MESSAGE STR_MSG_USE_ITEM_MULTI ( String value1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0s ) ; }
19291	public boolean contains ( int index ) { return index >= getFirst ( ) && index <= getLast ( ) ; }
19298	public static void main ( String [ ] args ) { PlayerControl simulation = new PlayerControl ( ) ; simulation . run ( ) ; }
19326	public static Dfp asin ( final Dfp a ) { return atan ( a . divide ( a . getOne ( ) . subtract ( a . multiply ( a ) ) . sqrt ( ) ) ) ; }
19342	public static SM_SYSTEM_MESSAGE STR_GUILD_EVENT_WIN_FORT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
19352	@ Override protected float evaluate ( Target target ) { return Float . NaN ; }
19364	private boolean isImage ( String url ) { return url . matches ( Regex . IMAGE_PATTERN ) ; }
19368	public static SM_SYSTEM_MESSAGE STR_MSG_PvPZONE_HOSTILE_DEATH_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
19381	@ Override public void endConditional ( Augmentations augs ) throws XNIException { }
19385	public static void o ( int k ) { o ( k , Parameters . OutputFieldWidth ) ; }
19390	public static void json ( String json ) { printer . json ( json ) ; }
19393	@ Override public void endAttlist ( Augmentations augs ) throws XNIException { }
19412	final public void response ( int state , String message ) { JSON jo = JSON . create ( ) ; jo . put ( X . STATE , HttpServletResponse . SC_OK ) ; jo . put ( X . MESSAGE , message ) ; this . response ( jo ) ; }
19420	@ Nullable public static String readTextFromDisk ( @ NotNull File file , boolean warnIfNotExists ) { assert file . isAbsolute ( ) ; try { return Files . toString ( file , Charsets . UTF_8 ) ; } catch ( IOException e ) { if ( warnIfNotExists ) { LOG . warn ( e ) ; } return _NULL ; } }
19455	public static void showToast ( Context context , int resourceId ) { Toast . makeText ( context , context . getString ( resourceId ) , Toast . LENGTH_LONG ) . show ( ) ; }
19467	public void addToList ( final Object key ) { keyList . offer ( key ) ; }
19468	public String indexName ( ) { return idxName ; }
19496	public Parallel parallel ( Task ... tasks ) { return new Parallel ( this . executor_ , tasks ) ; }
19502	public Crop asSquare ( ) { cropIntent . putExtra ( Extra . ASPECT_X , _NUM ) ; cropIntent . putExtra ( Extra . ASPECT_Y , _NUM ) ; return this ; }
19549	private void resetPersistenceManager ( ) { persistenceManager = _NULL ; }
19552	public RevealBuilder withCurvedTranslation ( ) { this . mCurvedTranslation = _BOOL ; return this ; }
19560	public void onPictureTaken ( CameraView cameraView , byte [ ] data ) { }
19562	public void addEntry ( String entry ) { _classpathList . add ( entry ) ; }
19577	public String toString ( ) { return _CHAR MbrolaAudioOutput _CHAR ; }
19589	@ Override public synchronized void write ( int b ) throws IOException { super . write ( b ) ; this . branch . write ( b ) ; }
19597	public void startInitialisation ( ) { startInitialisation ( ZWaveNodeInitStage . EMPTYNODE ) ; }
19638	static boolean arrayContains ( final int [ ] array , final int value ) { for ( final int arrayValue : array ) { if ( arrayValue == value ) { return _BOOL ; } } return _BOOL ; }
19672	public static StringBuilder quotedString ( String s ) { final EscapeStringResult escapeString = escapeString ( s , _CHAR_CHAR ) ; final StringBuilder result = escapeString . buffer ; result . insert ( _NUM , _CHAR_CHAR ) ; result . append ( _CHAR_CHAR ) ; return result ; }
19674	public boolean isLoaded ( ) { return loaded ; }
19693	@ Override public INDArray asRowVector ( File f ) throws IOException { return asMatrix ( f ) . ravel ( ) ; }
19697	public AdsCheckLinkQuery checkLink ( UserActor actor , int accountId , AdsCheckLinkType linkType , String linkUrl ) { return new AdsCheckLinkQuery ( getClient ( ) , actor , accountId , linkType , linkUrl ) ; }
19707	@ Override public void clearSelection ( ) { selectedPhotos . clear ( ) ; }
19708	public UnrevealBuilder withCurvedTranslation ( ) { this . mCurvedTranslation = _BOOL ; return this ; }
19721	public boolean loggedIn ( ) { return this . loggedIn ; }
19738	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR print ; _CHAR ) ; System . err . println ( _CHAR Print command : not implemented _CHAR ) ; }
19766	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ReturnHome_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
19779	public void remove ( String key ) { urlParams . remove ( key ) ; streamParams . remove ( key ) ; fileParams . remove ( key ) ; urlParamsWithObjects . remove ( key ) ; }
19783	public ViewsAnimator withDelayBetweenEachChild ( final int delayBetweenEachChild ) { this . delayBetweenEachChild = delayBetweenEachChild ; return this ; }
19816	@ JsonIgnore public boolean isDeleted ( ) { return state . equals ( Experiment . State . DELETED ) ; }
19843	public static SM_SYSTEM_MESSAGE STR_MSG_DUEL_START ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
19851	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; PrinterJob job = PrinterJob . getPrinterJob ( ) ; PageFormat pageFormat = job . pageDialog ( new PageFormat ( ) ) ; ProgramProperties . setPageFormat ( pageFormat ) ; }
19916	public static void dropAllTables ( Database db , boolean ifExists ) { NewsDao . dropTable ( db , ifExists ) ; ThemeListDao . dropTable ( db , ifExists ) ; }
19922	public void createOutFile ( String filePath ) throws IOException { this . outFile = new ExifInterface ( filePath ) ; }
19936	public void finish ( ) { try { queryExecutor . finish ( ) ; } catch ( QueryExecutionException e ) { LOGGER . error ( e , _CHAR Problem while finish : '' ) ; } clearDictionaryFromQueryModel ( ) ; }
19955	public boolean isStayAlive ( ) { return stayAlive ; }
19964	public void move ( int newX , int newY ) { controller . mouseMove ( newX , newY ) ; }
19983	public static String base64EncodeByteArray ( byte [ ] bytes ) { try { byte [ ] encodeBase64 = Base64 . encodeBase64 ( bytes ) ; return new String ( encodeBase64 , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { throw new RuntimeException ( _CHAR Exception while encoding bytes : '' + Arrays . toString ( bytes ) ) ; } }
19991	public static < T > String toJsonString ( T value ) { try { return MAPPER . writeValueAsString ( value ) ; } catch ( JsonProcessingException e ) { return _CHAR _CHAR ; } }
20004	private void handleServiceBoundH ( ) { if ( mVerb != VERB_BINDING ) { closeAndCleanupJobH ( _BOOL ) ; return ; } if ( mCancelled . get ( ) ) { closeAndCleanupJobH ( _BOOL ) ; return ; } try { mVerb = VERB_STARTING ; scheduleOpTimeOut ( ) ; service . startJob ( mParams ) ; } catch ( RemoteException e ) { e . printStackTrace ( ) ; } }
20011	private void addItem ( ExpandingItem item ) { mContainer . addView ( item ) ; }
20017	public VideoGetCatalogQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
20026	public int size ( ) { return m_clauses . size ( ) ; }
20032	public void close ( ) throws IOException { synchronized ( this ) { writer . close ( ) ; } }
20033	public void clear ( ) { uid = _NUM ; matchRecord = _NULL ; fName2Id . clear ( ) ; taxonId = _NUM ; }
20034	public boolean isReadAheadIdle ( int idleReaderErrorThreshold , TimeUnit timeUnit ) { return ( lastEntryProcessTime . elapsed ( timeUnit ) > idleReaderErrorThreshold ) ; }
20061	public static SystemParameterConfigAspect create ( Model model ) { return new SystemParameterConfigAspect ( model ) ; }
20104	public BaseResourceStorage createResourceStorage ( BaseResource baseResource ) { return new BaseResourceStorage ( baseResource ) ; }
20114	public GroupsSetCallbackSettingsQuery marketCommentNew ( Boolean value ) { return unsafeParam ( _CHAR market_comment_new _CHAR , value ) ; }
20121	public void hide ( ) { LayoutParams lp = ( LayoutParams ) mContentView . getLayoutParams ( ) ; lp . height = _NUM ; mContentView . setLayoutParams ( lp ) ; }
20150	public boolean contains ( int index ) { return index >= getFirst ( ) && index <= getLast ( ) ; }
20151	public PhotosSaveOwnerPhotoQuery saveOwnerPhoto ( UserActor actor ) { return new PhotosSaveOwnerPhotoQuery ( getClient ( ) , actor ) ; }
20183	public static final SM_SYSTEM_MESSAGE STR_MSG_HOUSING_CANT_OWN_NOT_COMPLETE_QUEST ( int questId ) { return new SM_SYSTEM_MESSAGE ( _NUM , questId ) ; }
20195	public boolean removeName ( String name ) { return m_names . remove ( name ) ; }
20197	Selfie build ( ) { return new Selfie ( format , path , quality ) ; }
20208	public void push ( boolean value ) { ensureCapacity ( fDepth + _NUM ) ; fData [ fDepth ++ ] = value ; }
20221	public static SM_SYSTEM_MESSAGE STR_ENCHANT_ITEM_SUCCEED ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
20229	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
20236	public String binarizeNumericAttributesTipText ( ) { return _CHAR Just binarize numeric attributes instead of properly discretizing them . '' ; }
20243	public void createTable ( TableId table , String topic ) { Schema kafkaConnectSchema = schemaRetriever . retrieveSchema ( table , topic ) ; bigQuery . create ( constructTableInfo ( table , kafkaConnectSchema ) ) ; }
20257	long increaseItemCount ( Item item , long count , ItemUpdateType updateType , Player actor ) { long leftCount = item . increaseItemCount ( count ) ; ItemPacketService . sendItemPacket ( actor , storageType , item , updateType ) ; setPersistentState ( PersistentState . UPDATE_REQUIRED ) ; return leftCount ; }
20264	public synchronized void clear ( ) { lruHead . nextLinked = lruHead . prevLinked = lruHead ; Entry tab [ ] = table ; for ( int i = _NUM ; i < tab . length ; ++ i ) tab [ i ] = _NULL ; size = _NUM ; }
20294	public static void w ( String tag , String msg , Throwable tr ) { println ( WARN , tag , msg , tr ) ; }
20304	public String toString ( ) { return _CHAR VC : Score _CHAR + score + _CHAR ival _CHAR + ival + _CHAR Pos _CHAR + pos ; }
20309	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set description = _CHAR ) ; String description = np . getWordRespectCase ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; getDoc ( ) . getSampleAttributeTable ( ) . put ( getDoc ( ) . getSampleNames ( ) . get ( _NUM ) , SampleAttributeTable . DescriptionAttribute , description ) ; getDoc ( ) . setDirty ( _BOOL ) ; }
20317	public boolean addLegionMember ( int playerObjId ) { if ( canAddMember ( ) ) { legionMembers . add ( playerObjId ) ; return _BOOL ; } return _BOOL ; }
20339	@ Override public boolean isEntityDeclared ( String name ) { return ( fUnparsedEntityChecking ) ? super . isEntityDeclared ( name ) : _BOOL ; }
20393	protected VideoGetQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
20394	protected Object cloneBody ( ) { if ( Body == _NULL ) { return _NULL ; } HashMap < String , Object > body = ( HashMap < String , Object > ) Body ; HashMap < String , Object > cloned = new HashMap < String , Object > ( body . size ( ) ) ; cloned . putAll ( body ) ; return cloned ; }
20397	public void add ( Number number ) { elements . add ( number == _NULL ? JsonNull . INSTANCE : new JsonPrimitive ( number ) ) ; }
20405	@ Override public void removeListener ( DataSourceUpdatedInterface listener ) { listenerList . remove ( listener ) ; }
20409	public static Colour attemptToGetAsColour ( String part ) { Colour col = _NULL ; try { col = Colour . valueOf ( part . toUpperCase ( ) ) ; } catch ( Exception e ) { } return col ; }
20436	public void clearVoiceSearchResults ( ) { mResults . clear ( ) ; }
20515	public void invertProbability ( ) { normalizeToSum ( ) ; double dRemaining = _NUM . _NUM ; Iterator < TKeyType > iIter = hDistro . keySet ( ) . iterator ( ) ; while ( iIter . hasNext ( ) ) { TKeyType oNext = iIter . next ( ) ; setValue ( oNext , dRemaining - getValue ( oNext ) ) ; dRemaining += getValue ( oNext ) ; } }
20526	private final void writeOP ( int value ) { int op = Crypt . encodeOpcodec ( value ) ; buf . putShort ( ( short ) ( op ) ) ; buf . put ( Crypt . staticServerPacketCode ) ; buf . putShort ( ( short ) ( ~ op ) ) ; }
20529	public static SM_SYSTEM_MESSAGE STR_FORCE_HE_LEAVE_FORCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20543	public static void show ( Context context , int resId ) { show ( context , resId , LENGTH_SHORT ) ; }
20545	public static long addExact ( final long a , final long b ) throws MathRuntimeException { final long sum = a + b ; if ( ( a ^ b ) >= _NUM && ( sum ^ b ) < _NUM ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_ADDITION , a , b ) ; } return sum ; }
20570	public void clearAllLines ( ) { if ( textArea != _NULL ) { textArea . setText ( _CHAR _CHAR ) ; } }
20587	public static void e ( String tag , String msg , Throwable tr ) { println ( ERROR , tag , msg , tr ) ; }
20595	public boolean isStarted ( ) { return writer != _NULL || nrtReplicaNode != _NULL || nrtPrimaryNode != _NULL ; }
20613	private void startAnimation ( long time , OverviewAnimationType type ) { startAnimation ( time , type , TabModel . INVALID_TAB_INDEX , _BOOL ) ; }
20625	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { NewsChannelTableDao . createTable ( db , ifNotExists ) ; }
20631	@ Override public String matchPredicateOperand ( String alias ) { Objects . requireNonNull ( alias , _CHAR alias can not be _NULL _CHAR ) ; return alias + _CHAR . _CHAR + idFieldName ; }
20644	public RevealBuilder withCurvedTranslation ( final PointF curveControlPoint ) { this . mCurveControlPoint = curveControlPoint ; return this . withCurvedTranslation ( ) ; }
20663	@ Override public void writeByte ( final byte b ) { baos . write ( b ) ; }
20679	public static SM_SYSTEM_MESSAGE STR_UI_COMBAT_NPC_RETURN_NOMOVE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20706	@ Override protected void onPreExecute ( ) { mCurrentDialog = IndeterminateProgressDialog . newInstance ( R . string . wait_a_moment , _BOOL ) ; mCurrentDialog . show ( getSupportFragmentManager ( ) , WAIT_DIALOG_TAG ) ; findViewById ( R . id . ok ) . setEnabled ( _BOOL ) ; }
20727	@ Override public boolean checkCondition ( ) { return group . hasMember ( player . getObjectId ( ) ) ; }
20788	@ Override public void bindViewHolder ( @ NonNull ViewHolder viewHolder , @ NonNull String item , int position ) { Glide . with ( viewHolder . itemView . getContext ( ) ) . load ( item ) . diskCacheStrategy ( DiskCacheStrategy . NONE ) . into ( viewHolder . photo ) ; viewHolder . itemView . setOnClickListener ( _NULL ) ; }
20804	private void generateGetModuleMethod ( NewBindingKey key , NewDependencyInfo dependencyInfo ) { TypeElement scope = scopeCalculator . calculate ( key ) ; generateGetModuleMethod ( scope , dependencyInfo ) ; }
20807	public void clearIEEEFlags ( ) { ieeeFlags = _NUM ; }
20822	@ Override public void endAttlist ( Augmentations augs ) throws XNIException { }
20827	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
20830	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigFontPreview copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigFontPreview ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
20868	public MessagesCreateChatQuery createChat ( UserActor actor , List < Integer > userIds ) { return new MessagesCreateChatQuery ( getClient ( ) , actor , userIds ) ; }
20870	public static Iterable < Table > listTables ( DataStore dataStore ) { return listTables ( dataStore , _NULL , Long . MAX_VALUE ) ; }
20874	public void decreaseCount ( long decreaseCount ) { if ( decreaseCount < count ) { this . count = count - decreaseCount ; } }
20881	public Region < S > union ( final Region < S > region1 , final Region < S > region2 ) { final BSPTree < S > tree = region1 . getTree ( _BOOL ) . merge ( region2 . getTree ( _BOOL ) , new UnionMerger ( ) ) ; tree . visit ( nodeCleaner ) ; return region1 . buildNew ( tree ) ; }
20892	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
20895	public FaveRemoveGroupQuery removeGroup ( UserActor actor , int groupId ) { return new FaveRemoveGroupQuery ( getClient ( ) , actor , groupId ) ; }
20897	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_TO_YOU ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
20901	public AdsGetSuggestionsQueryWithRegions lang ( AdsGetSuggestionsLang value ) { return unsafeParam ( _CHAR lang _CHAR , value ) ; }
20904	public boolean isEmpty ( ) { return ! isDefined ( ) ; }
20940	@ Override public boolean isAutoStartup ( ) { return _BOOL ; }
20953	void remove ( T obj ) { _queue . remove ( obj ) ; if ( _prioritize == obj ) { _prioritize = _NULL ; } }
20963	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; TaxonomicProfileDialog viewer = ( TaxonomicProfileDialog ) getParent ( ) ; viewer . setMethod ( TaxonomicProfileDialog . ProfileMethod . ReadSpreading ) ; }
20966	public boolean isTreeDataUpdated ( ) { return treeDataUpdated ; }
21004	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
21005	private static int snapTop ( Collection < ConstraintWidget > widgets , ConstraintWidget widget , int top , ArrayList < SnapCandidate > snapCandidates ) { return snapVertical ( widgets , widget , widget . getAnchor ( ConstraintAnchor . Type . TOP ) , top , snapCandidates ) ; }
21015	public static boolean isStarted ( Object caller ) { return isStarted ( caller . getClass ( ) . getSimpleName ( ) ) ; }
21016	public static < V > boolean isEmpty ( V [ ] sourceArray ) { return ( sourceArray == _NULL || sourceArray . length == _NUM ) ; }
21032	@ Override public Object asJavaVal ( ) { return val ; }
21034	public boolean isMenuPathEnabled ( String ... path ) { boolean isEnabled = findActionMenuItem ( path ) . isEnabled ( ) ; myRobot . pressAndReleaseKey ( KeyEvent . VK_ESCAPE ) ; return isEnabled ; }
21044	private static int hashOf ( final int key ) { final int h = key ^ ( ( key >> > _NUM ) ^ ( key >> > _NUM ) ) ; return h ^ ( h >> > _NUM ) ^ ( h >> > _NUM ) ; }
21045	public void apply ( NexusStreamParser np ) throws Exception { }
21053	public boolean isMinimumScaleUpdated ( ) { return minimumScaleUpdated ; }
21065	public GroupsRemoveUserQuery removeUser ( UserActor actor , int groupId , int userId ) { return new GroupsRemoveUserQuery ( getClient ( ) , actor , groupId , userId ) ; }
21082	public Spring addSpring ( ForceItem item1 , ForceItem item2 , float length ) { return addSpring ( item1 , item2 , - _NUM . f , length ) ; }
21085	public boolean hasNext ( ) throws IOException { return thriftReader . hasNext ( ) ; }
21102	default void onEnable ( PluginBase pokkit ) { }
21119	private double doRemove ( int index ) { keys [ index ] = _NUM ; states [ index ] = REMOVED ; final double previous = values [ index ] ; values [ index ] = missingEntries ; -- size ; ++ count ; return previous ; }
21129	public void moveTo ( int offset ) { cursor = offset ; }
21140	public boolean isOp ( ) { return this . op ; }
21163	public static void main ( String [ ] args ) { StopBodyAfterCollision simulation = new StopBodyAfterCollision ( ) ; simulation . run ( ) ; }
21174	public Edge addEdge ( Node s , Node t ) { nodeCheck ( s , _BOOL ) ; nodeCheck ( t , _BOOL ) ; int e = addEdge ( s . getRow ( ) , t . getRow ( ) ) ; return getEdge ( e ) ; }
21215	public void rectValueToPixel ( RectF r ) { mMatrixValueToPx . mapRect ( r ) ; mViewPortHandler . getMatrixTouch ( ) . mapRect ( r ) ; mMatrixOffset . mapRect ( r ) ; }
21231	public TapTarget textColor ( @ ColorRes int color ) { this . titleTextColor = color ; this . descriptionTextColor = color ; return this ; }
21243	public VideoPutTagQuery putTag ( UserActor actor , int userId , int videoId ) { return new VideoPutTagQuery ( getClient ( ) , actor , userId , videoId ) ; }
21245	public Line revert ( ) { final Line reverted = new Line ( this ) ; reverted . direction = reverted . direction . negate ( ) ; return reverted ; }
21261	public boolean hasPassword ( ) { return password != _NULL ; }
21264	public void addObservationProducer ( IObservationProducer producer ) { if ( this . producers == _NULL ) { this . producers = new ArrayList < IObservationProducer > ( ) ; } this . producers . add ( producer ) ; }
21304	public void showSvnProperties ( ISVNRemoteResource resource ) throws SVNException { this . remoteResource = resource ; this . resource = _NULL ; if ( remoteResource != _NULL ) { if ( remoteResource . getRevision ( ) != _NULL ) { setContentDescription ( Policy . bind ( _CHAR SvnRevPropertiesView . titleWithTwoArguments _CHAR , remoteResource . getRevision ( ) . toString ( ) , remoteResource . getName ( ) ) ) ; } } else { setContentDescription ( _CHAR _CHAR ) ; } updateStatus ( ) ; }
21315	public void clear ( ) { read = write = count = _NUM ; Arrays . fill ( buffer , _NULL ) ; }
21337	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
21351	public boolean isUseAntiAlias ( ) { return useAntiAlias ; }
21373	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; journalWriter . flush ( ) ; }
21379	public boolean isMaxScaleSet ( ) { return ! ScaleUtil . isNotSet ( maxScale ) ; }
21410	public void removeWord ( String sWord ) { removeWord ( sWord , RemoveSubStrings ) ; }
21439	public boolean postDominates ( Stmt s , Stmt t ) { return getFlowBefore ( t ) . contains ( s ) ; }
21463	@ Override public void clear ( ) { sumX = _NUM ; sumXX = _NUM ; sumY = _NUM ; sumYY = _NUM ; sumXY = _NUM ; n = _NUM ; }
21495	public SourceDataQuality clone ( ) throws CloneNotSupportedException { return ( SourceDataQuality ) super . clone ( ) ; }
21498	@ Nullable public static Labels fromSnippets ( KindredSnippets [ ] snippets ) { for ( KindredSnippets obj : snippets ) { if ( obj instanceof Labels ) { return ( Labels ) obj ; } } return _NULL ; }
21506	public boolean isInstanceType ( ) { return worldMapTemplate . isInstance ( ) ; }
21520	private void checkHttpParameterConditions ( Method method , Iterable < Field > fields , Set < MessageType > visited ) { for ( Field field : fields ) { checkHttpParameterConditions ( method , field , visited ) ; } }
21521	public void tabTitleChanged ( int tabId , String title ) { StripLayoutTab tab = findTabById ( tabId ) ; if ( tab != _NULL ) tab . setAccessibilityDescription ( title ) ; }
21523	private void loadInstantUploadVideoPath ( ) { SharedPreferences appPrefs = PreferenceManager . getDefaultSharedPreferences ( getApplicationContext ( ) ) ; mUploadVideoPath = appPrefs . getString ( _CHAR instant_video_upload_path _CHAR , getString ( R . string . instant_upload_path ) ) ; mPrefInstantVideoUploadPath . setSummary ( mUploadVideoPath ) ; }
21536	public static boolean isSymmetric ( RealMatrix matrix , double eps ) { return isSymmetricInternal ( matrix , eps , _BOOL ) ; }
21553	private void checkIsInitialized ( ) { Preconditions . checkNotNull ( fileSystemDropExporterConfig , getClass ( ) . getSimpleName ( ) + _CHAR must be initialized first _CHAR ) ; }
21557	@ Override protected void monitor ( ) throws Exception { checkAvailability ( ) ; if ( serviceMonitor == _NULL ) serviceMonitor = new GSPingManager ( ) ; }
21563	public static void checkAdditionCompatible ( final AnyMatrix left , final AnyMatrix right ) throws MathIllegalArgumentException { if ( ( left . getRowDimension ( ) != right . getRowDimension ( ) ) || ( left . getColumnDimension ( ) != right . getColumnDimension ( ) ) ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH_2x2 , left . getRowDimension ( ) , left . getColumnDimension ( ) , right . getRowDimension ( ) , right . getColumnDimension ( ) ) ; } }
21568	public void writeToStream ( OutputStream out ) throws IOException { BencodeWriter writer = new BencodeWriter ( out ) ; writer . write ( this ) ; }
21571	private void notifySLDEditorFileHasUpdated ( ) { for ( SLDEditorDataUpdateInterface listener : sldEditorFileUpdateListenerList ) { if ( listener != _NULL ) { listener . sldDataUpdated ( sldData , dataEditedFlag ) ; } } }
21574	public void apply ( NexusStreamParser np ) throws Exception { }
21577	public void apply ( NexusStreamParser np ) throws Exception { }
21601	public boolean hasItem ( ) { return this . item != _NULL ; }
21604	public static void addTableToDocument ( Document document , PdfPTable table ) { try { document . add ( table ) ; } catch ( DocumentException ex ) { throw new RuntimeException ( _CHAR Failed to add table to document _CHAR , ex ) ; } }
21621	private PolynomialFunction polynomial ( double ... c ) { return new PolynomialFunction ( c ) ; }
21636	public MessagesEditChatQuery editChat ( UserActor actor , int chatId , String title ) { return new MessagesEditChatQuery ( getClient ( ) , actor , chatId , title ) ; }
21660	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARRY_A_TO_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21661	private String fmtTime ( double time ) { return Utilities . pad ( timeFormatter . format ( time ) + _CHAR s _CHAR , _NUM ) ; }
21673	public boolean isEmpty ( ) { return size ( ) == _NUM ; }
21681	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigTransformation copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigTransformation ( fieldConfigBase . getCommonData ( ) , this . editButtonText , this . clearButtonText ) ; } return copy ; }
21683	public java_cup . runtime . Symbol do_action ( int act_num , java_cup . runtime . lr_parser parser , java . util . Stack stack , int top ) throws java . lang . Exception { return action_obj . CUP $ parser $ do_action ( act_num , parser , stack , top ) ; }
21684	@ Override public void write ( String str ) throws IOException { out . write ( str ) ; }
21715	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getFirstOfPairFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getFirstOfPairFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
21739	@ Override public void startAttlist ( String elementName , Augmentations augmentations ) throws XNIException { }
21772	public List < Integer > showDialog ( Director defaultDir ) { setupDialog ( defaultDir ) ; getContentPane ( ) . validate ( ) ; setSize ( getPreferredSize ( ) ) ; setVisible ( _BOOL ) ; return result ; }
21851	public static void updateGatherableStatus ( Player player ) { if ( player . isNotGatherable ( ) ) { long gatherableTimer = player . getGatherableTimer ( ) ; if ( gatherableTimer > _NUM ) { scheduleGatherableTask ( player , gatherableTimer ) ; player . setStopGatherable ( System . currentTimeMillis ( ) ) ; } } }
21854	@ JsonIgnore public boolean isDeleted ( ) { return state . equals ( State . DELETED ) ; }
21857	public static SM_SYSTEM_MESSAGE STR_ABYSS_GUILD_WIN_CASTLE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
21862	public void removeViewModel ( int key , Context context ) { getFragment ( context ) . remove ( key ) ; }
21863	@ Override public Throwable fillInStackTrace ( ) { return _NULL ; }
21888	public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set flipV = _CHAR ) ; boolean flip = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; getViewer ( ) . getPcoaTab ( ) . setFlipV ( flip ) ; try { getViewer ( ) . updateDistances ( ) ; } catch ( Exception ex ) { Basic . caught ( ex ) ; } }
21900	public void push ( int value ) { ensureCapacity ( fDepth + _NUM ) ; fData [ fDepth ++ ] = value ; }
21904	public SimpleFacebookConfiguration build ( ) { return new SimpleFacebookConfiguration ( this ) ; }
21907	public static void v ( String tag , String msg , Throwable tr ) { println ( VERBOSE , tag , msg , tr ) ; }
21990	public boolean isEmpty ( ) { return this == NONE || ( left == _NUM && top == _NUM && right == _NUM && bottom == _NUM ) ; }
22024	public static RefType v ( String className ) { RefType rt = Scene . v ( ) . getRefTypeUnsafe ( className ) ; if ( rt == _NULL ) { rt = new RefType ( className ) ; Scene . v ( ) . addRefType ( rt ) ; } return rt ; }
22035	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigWKT copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigWKT ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
22056	public static byte writeBool ( boolean b ) { if ( b ) { return _NUM ; } else { return _NUM ; } }
22057	public static boolean equalStrings ( String string1 , String string2 ) { return string1 . toLowerCase ( ) . replace ( _CHAR _CHAR , _CHAR _CHAR ) . replace ( _CHAR , _CHAR , _CHAR _CHAR ) . equals ( string2 . toLowerCase ( ) . replace ( _CHAR _CHAR , _CHAR _CHAR ) . replace ( _CHAR , _CHAR , _CHAR _CHAR ) ) ; }
22090	public boolean isEmpty ( ) { return config . isEmpty ( ) ; }
22091	public void showContent ( ) { switchState ( CONTENT , _NULL , _NULL , _NULL , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
22113	public static < T extends RealFieldElement < T >> FieldVector3D < T > crossProduct ( final FieldVector3D < T > v1 , final Vector3D v2 ) { return v1 . crossProduct ( v2 ) ; }
22130	@ Override public void flush ( ) { }
22141	public static < T > Set < T > toSet ( T obj1 , T obj2 , T obj3 ) { Set < T > theSet = new LinkedHashSet < T > ( ) ; theSet . add ( obj1 ) ; theSet . add ( obj2 ) ; theSet . add ( obj3 ) ; return theSet ; }
22181	public int length ( ) { if ( tokens != _NULL ) return tokens . length ; else return _NUM ; }
22190	public void addLanguage ( Long languageId ) { if ( languageId != _NULL ) { addLanguage ( languageId . toString ( ) ) ; } else { Logger . warn ( this , _CHAR Tried to add languageId Null ! _CHAR ) ; } }
22205	public void clearPayment ( String id ) { CartPaymentInfo inf = this . getPaymentInfo ( id ) ; paymentInfo . remove ( inf ) ; }
22223	public static void show ( Context context , int resId , int duration ) { show ( context , resId , duration , DEFAULT_GRAVITY ) ; }
22247	public void makeOneTimeUse ( ) { used = new AtomicBoolean ( _BOOL ) ; }
22248	public static String execute ( String command , File cwd ) { return SubprocessUttility . execute ( command , cwd ) ; }
22258	protected int indexFor ( int h , int length ) { return h & ( length - _NUM ) ; }
22269	public void infinite ( ) { confettiManager . setNumInitialCount ( _NUM ) . setEmissionDuration ( ConfettiManager . INFINITE_DURATION ) . setEmissionRate ( _NUM ) . animate ( ) ; }
22301	public static Object readObject ( byte [ ] data ) throws IOException , ClassNotFoundException { ByteArrayInputStream buffer = new ByteArrayInputStream ( data ) ; ObjectInputStreamExt in = new ObjectInputStreamExt ( buffer ) ; Object answer = in . readObject ( ) ; in . close ( ) ; return answer ; }
22312	public static R1Interval fullLat ( ) { return new R1Interval ( - S2 . M_PI_2 , S2 . M_PI_2 ) ; }
22317	public Fraction divide ( final int i ) { return new Fraction ( numerator , denominator * i ) ; }
22324	@ Override public Settings init ( String tag ) { if ( tag == _NULL ) { throw new NullPointerException ( _CHAR tag may not be _NULL _CHAR ) ; } if ( tag . trim ( ) . length ( ) == _NUM ) { throw new IllegalStateException ( _CHAR tag may not be empty _CHAR ) ; } this . tag = tag ; this . settings = new Settings ( ) ; return settings ; }
22335	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
22378	@ Override public void flush ( ) { }
22391	public boolean removeItem ( ForceItem item ) { return items . remove ( item ) ; }
22393	public boolean isLessThan ( GameTime gt ) { return this . getTime ( ) < gt . getTime ( ) ; }
22398	public AudioGetQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
22402	public Z Conj ( Z a ) { re = a . re ; im =- a . im ; return this ; }
22421	public Future < String > classify ( String snippet ) { final ExecutorService service = Executors . newSingleThreadExecutor ( ) ; return service . submit ( new ClassifyingTask ( snippet ) ) ; }
22422	public void runSimulator ( long timestep ) { accumulate ( ) ; integrator . integrate ( this , timestep ) ; }
22431	public boolean isBcontains ( BitSet H ) { BitSet M = ( ( BitSet ) B . clone ( ) ) ; M . and ( H ) ; return M . cardinality ( ) == H . cardinality ( ) ; }
22465	public static boolean supports ( String db , int majorVersion , int minorVersion ) { return MYSQL_DB_NAME . equals ( db ) && majorVersion == _NUM ; }
22499	public WallCreateCommentQuery guid ( String value ) { return unsafeParam ( _CHAR guid _CHAR , value ) ; }
22510	public void addService ( AXmlNode node ) { if ( services . isEmpty ( ) ) services = new ArrayList < AXmlNode > ( ) ; services . add ( node ) ; }
22513	public void resize ( int maxSize ) { if ( maxSize <= _NUM ) { throw new IllegalArgumentException ( _CHAR maxSize <= _NUM _CHAR ) ; } synchronized ( this ) { this . maxSize = maxSize ; } trimToSize ( maxSize ) ; }
22514	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
22549	public String toString ( ) { return _CHAR _CHAR + offset ; }
22550	public static void wtf ( String tag , Throwable tr ) { wtf ( tag , _NULL , tr ) ; }
22564	public boolean isJsInject ( ) { return isOptionEnabled ( UrlFilterRuleOption . JS_INJECT ) ; }
22582	public static SM_SYSTEM_MESSAGE STR_MSG_GETMONEY ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
22612	public CreateSiteWindow selectTemplateContaining ( String templateName ) { WebElement template = currentWindow . findElement ( By . xpath ( _CHAR .// div [ contains ( @ class , '' + '' ' template - title ' ) and contains ( text ( ) , ' '' + templateName + '' ' ) ] '' ) ) ; template . click ( ) ; return this ; }
22617	private final boolean isItemFilledScreen ( ) { return ( getLastVisiblePosition ( ) - getFirstVisiblePosition ( ) + _NUM ) < getCount ( ) ; }
22625	final long fn ( long v , long x ) { return v + x ; }
22645	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . flush ( ) ; }
22648	public void updateTimestamp ( long timestamp ) { mTimestamps [ mBufferIn ] = timestamp ; setLong ( mBuffers [ mBufferIn ] , ( timestamp / _NUM ) * ( mClock / _NUM ) / _NUM , _NUM , _NUM ) ; }
22649	public static SM_SYSTEM_MESSAGE STR_FORCE_ITEM_WIN ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
22678	public boolean isConnected ( ) { return _BOOL ; }
22679	public boolean isSaved ( ) { return baseObjId > _NUM ; }
22769	public AccountGetCountersQuery filter ( List < AccountGetCountersFilter > value ) { return unsafeParam ( _CHAR filter _CHAR , value ) ; }
22787	@ Override public void removeListener ( DataSourceUpdatedInterface listener ) { listenerList . remove ( listener ) ; }
22798	public ResourcesPoet addIntegerArray ( String name , @ NotNull List < Integer > values ) { ArrayList < String > integers = new ArrayList < > ( ) ; for ( Integer value : values ) { integers . add ( String . valueOf ( value ) ) ; } addIntegerArrayStrings ( name , integers ) ; return this ; }
22831	@ Deprecated public boolean isReverseOrder ( ) { return mIsReversed ; }
22853	public void clearSelection ( ) { List < Integer > selection = getSelectedItems ( ) ; mSelectedItems . clear ( ) ; for ( Integer i : selection ) { notifyItemChanged ( i ) ; } }
22863	public void sync ( final boolean force ) { if ( closed ) { throw new AlreadyClosedException ( ) ; } final int f = force ? _NUM : _NUM ; checkRc ( LIB . mdb_env_sync ( ptr , f ) ) ; }
22874	public static < T > List < T > toList ( T obj1 , T obj2 ) { List < T > list = new LinkedList < T > ( ) ; list . add ( obj1 ) ; list . add ( obj2 ) ; return list ; }
22881	public String toString ( ) { return _CHAR TokenToWords _CHAR ; }
22885	public boolean isColumnar ( int colGroup ) { return columnarStore [ colGroup ] ; }
22893	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; TaxonomicProfileDialog viewer = ( TaxonomicProfileDialog ) getParent ( ) ; viewer . setMethod ( TaxonomicProfileDialog . ProfileMethod . Projection ) ; }
22906	public PhotosEditCommentQuery editComment ( UserActor actor , int commentId ) { return new PhotosEditCommentQuery ( getClient ( ) , actor , commentId ) ; }
22909	public static String combineSetMethodName ( String fieldName ) { return _CHAR set _CHAR + fieldName . substring ( _NUM , _NUM ) . toUpperCase ( ) + fieldName . substring ( _NUM ) ; }
22947	private Map < String , ComplexValue > mapAggregationConvert ( Map < String , String > input ) { return input . entrySet ( ) . stream ( ) . collect ( toMap ( _NULL , _NULL ) ) ; }
22952	public static Properties loadProperties ( String configurationPath ) throws Exception { Properties props = new Properties ( ) ; try ( FileInputStream inputStream = new FileInputStream ( configurationPath ) ) { props . load ( inputStream ) ; } return props ; }
22974	protected void stopListening ( ) { mouseListener . stopListening ( ) ; }
22976	@ NotNull public List < Face > findEmotionFaces ( @ NotNull InputStream image ) { return faceTaskBuilder . detectFace ( _BOOL , _BOOL , FaceAttributes . ALL , image ) . withResult ( ) ; }
22986	public GroupsEditLinkQuery text ( String value ) { return unsafeParam ( _CHAR text _CHAR , value ) ; }
23000	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_GUILD_WIN_CASTLE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
23001	public void appendInterval ( PraatInterval interval ) { this . intervals . add ( interval ) ; }
23023	public void rectValueToPixel ( RectF r ) { mMatrixValueToPx . mapRect ( r ) ; mViewPortHandler . getMatrixTouch ( ) . mapRect ( r ) ; mMatrixOffset . mapRect ( r ) ; }
23033	public FriendsGetMutualQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
23034	public static String clearLastViewedCategories ( HttpServletRequest request , HttpServletResponse response ) { HttpSession session = request . getSession ( ) ; if ( session != _NULL ) { session . setAttribute ( _CHAR lastViewedCategories _CHAR , FastList . newInstance ( ) ) ; } return _CHAR success _CHAR ; }
23092	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
23104	public SecureAddAppEventQuery addAppEvent ( ServiceActor actor , int userId , int activityId ) { return new SecureAddAppEventQuery ( getClient ( ) , actor , userId , activityId ) ; }
23106	public ShapelessRecipe addIngredient ( int count , MaterialData ingredient ) { return addIngredient ( count , ingredient . getItemType ( ) , ingredient . getData ( ) ) ; }
23118	public boolean isListening ( ) { return listening ; }
23130	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { VideoBeanDao . dropTable ( db , ifExists ) ; }
23151	public void sendDelayedTimeDeadbandValues ( ) { this . equipmentLogger . debug ( _CHAR sendDelayedTimeDeadbandValues - Sending all time deadband delayed values to the server _CHAR ) ; this . equipmentSenderValid . sendDelayedTimeDeadbandValues ( ) ; }
23158	public boolean isReadOnly ( ) { return m_readOnly ; }
23159	@ Override public int hashCode ( ) { return _NUM * ( _NUM * _NUM + numerator ) + denominator ; }
23164	private T doRemove ( int index ) { keys [ index ] = _NUM ; states [ index ] = REMOVED ; final T previous = values [ index ] ; values [ index ] = missingEntries ; -- size ; ++ count ; return previous ; }
23183	public static SM_SYSTEM_MESSAGE STR_UNCOMPRESS_COMPRESSED_ITEM_SUCCEEDED ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( nameId ) ) ; }
23202	public MapCursor addCursor ( int x , int y , byte direction ) { return addCursor ( x , y , direction , ( byte ) _NUM , _BOOL ) ; }
23209	private Collection < Var > migrateAsEntity ( SQLTable currentTable ) { Var type = var ( ) . isa ( _CHAR entity - type _CHAR ) . id ( currentTable . getEntityType ( ) ) ; return Lists . newArrayList ( type ) ; }
23228	public List asList ( ) { List result = new LinkedList ( ) ; for ( Iterator it = iterator ( ) ; it . hasNext ( ) ; ) { result . add ( it . next ( ) ) ; } return result ; }
23242	public void updateAllUsers ( ) { plugin . doSync ( _NULL ) ; }
23249	public void initialize ( ) { setupEnvVars ( ) ; this . configSource . initialize ( ASG_NAME , getDataCenter ( ) ) ; setDefaultRACList ( getDataCenter ( ) ) ; }
23257	private void clean ( ) { Reference ref = fReferenceQueue . poll ( ) ; while ( ref != _NULL ) { Entry entry = ( ( SoftGrammarReference ) ref ) . entry ; if ( entry != _NULL ) { removeEntry ( entry ) ; } ref = fReferenceQueue . poll ( ) ; } }
23259	public boolean isGreaterThan ( GameTime gt ) { return this . getTime ( ) > gt . getTime ( ) ; }
23313	public int writeProtoId ( ProtoId protoId ) { int off = data . position ( ) ; writeInt ( protoId . shortyIndex ) ; writeInt ( protoId . returnTypeIndex ) ; writeInt ( protoId . parametersOffset ) ; return off ; }
23327	public AccountSaveProfileInfoQuery maidenName ( String value ) { return unsafeParam ( _CHAR maiden_name _CHAR , value ) ; }
23335	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
23346	public static BKTransmitException transmitException ( int transmitResult ) { return new BKTransmitException ( _CHAR Failed to write to bookkeeper ; Error is ( _CHAR + transmitResult + _CHAR ) _CHAR + BKException . getMessage ( transmitResult ) , transmitResult ) ; }
23357	public static void json ( String json ) { printer . json ( json ) ; }
23371	protected String renderUri ( URI uri ) { return uri . toASCIIString ( ) ; }
23400	public void readFromClassPath ( final String propertyFileLocation ) throws ConfigurationException { properties = readPropertyFileFromClassPath ( propertyFileLocation ) ; }
23407	private Optional < Class < ? >> unwrap ( Object pageObject ) { Class < ? > wrappedClass = pageObject . getClass ( ) ; while ( wrappedClass != _NULL && ! wrappedClass . isAnnotationPresent ( PageObject . class ) ) { wrappedClass = wrappedClass . getSuperclass ( ) ; } return Optional . ofNullable ( wrappedClass ) ; }
23416	@ Override public Fraction multiply ( final int i ) { return multiply ( new Fraction ( i ) ) ; }
23428	protected Table createLinkTable ( ) { return LINKS_SCHEMA . instantiate ( getNodeTable ( ) . getMaximumRow ( ) + _NUM ) ; }
23434	public MarketCreateCommentQuery createComment ( UserActor actor , int ownerId , int itemId ) { return new MarketCreateCommentQuery ( getClient ( ) , actor , ownerId , itemId ) ; }
23455	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
23463	public void sendMessage ( String message ) { skype . sendUserMessage ( this , message ) ; }
23469	public VideoGetAlbumsQueryWithExtended count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
23470	void receiveQuery ( Json json ) { queryExecutor . submit ( _NULL ) ; }
23471	public boolean isSource ( ) { return this . sinkSource == SinkSource . Source || this . sinkSource == SinkSource . Both ; }
23485	@ Override public void ignoredCharacters ( XMLString text , Augmentations augmentations ) throws XNIException { }
23491	public DoUntil doUntil ( Conditional cond , Task task ) { return new DoUntil ( this . executor_ , cond , task ) ; }
23492	private String timestamp ( ) { return DateHelper . currentTime ( ) ; }
23523	private boolean strictlyAfter ( final T t1 , final T t2 ) { return forward ? t1 . getReal ( ) < t2 . getReal ( ) : t2 . getReal ( ) < t1 . getReal ( ) ; }
23542	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
23553	@ Override public void filterOutNonProjectionProperties ( final IEntryPacket entryPacket ) { if ( ! _uidsByProjection . containsKey ( entryPacket . getUID ( ) ) ) return ; short pos = _uidsByProjection . get ( entryPacket . getUID ( ) ) ; _projections [ pos ] . filterOutNonProjectionProperties ( entryPacket ) ; }
23555	public void onStartMove ( ) { getOwner ( ) . getObserveController ( ) . notifyMoveObservers ( ) ; notifyAIOnMove ( ) ; }
23563	public int degree ( ) { return c . length ; }
23566	public static SM_SYSTEM_MESSAGE STR_PARTY_HE_LEAVE_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23567	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; ParametersDialog viewer = ( ParametersDialog ) getParent ( ) ; viewer . setVisible ( _BOOL ) ; }
23569	public boolean canPowerUp ( ) { return getCandy ( ) >= getCandyCostsForPowerup ( ) && api . getPlayerProfile ( ) . getCurrency ( PlayerProfile . Currency . STARDUST ) >= getStardustCostsForPowerup ( ) ; }
23570	public static boolean isEmpty ( String s ) { return ( s == _NULL ) || s . length ( ) == _NUM ; }
23582	@ Override public final int size ( ) { return getAll ( ) . size ( ) ; }
23587	public boolean addOnItemClickListener ( OnItemClickListener itemClickListener ) { return clickListeners . add ( itemClickListener ) ; }
23594	public void startInitialisation ( ZWaveNodeInitStage startStage ) { logger . debug ( _CHAR NODE { } : Starting initialisation from { } _CHAR , node . getNodeId ( ) , startStage ) ; currentStage = startStage ; queryStageTimeStamp = Calendar . getInstance ( ) . getTime ( ) ; retryTimer = BACKOFF_TIMER_START ; wakeupCount = _NUM ; controller . addEventListener ( this ) ; advanceNodeStage ( _NULL ) ; }
23624	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . getSelectedBlock ( ) . clear ( ) ; }
23633	public static boolean hasFileAccessPermission ( WindowAndroid windowAndroid ) { assert windowAndroid != _NULL ; return windowAndroid . hasPermission ( permission . WRITE_EXTERNAL_STORAGE ) ; }
23638	public int size ( ) { return size ; }
23654	public void clearLastReceivedHeaders ( ) { this . lastReceivedHeaders = _NULL ; }
23657	public void invertProbability ( ) { normalizeToSum ( ) ; double dRemaining = _NUM . _NUM ; Iterator < TKeyType > iIter = hDistro . keySet ( ) . iterator ( ) ; while ( iIter . hasNext ( ) ) { TKeyType oNext = iIter . next ( ) ; setValue ( oNext , dRemaining - getValue ( oNext ) ) ; dRemaining += getValue ( oNext ) ; } }
23694	public PhotosGetAlbumsQuery needCovers ( Boolean value ) { return unsafeParam ( _CHAR need_covers _CHAR , value ) ; }
23724	@ Override public int hashCode ( ) { return ( fNamespace == _NULL ) ? _NUM : fNamespace . hashCode ( ) ; }
23730	protected int indexFor ( int h , int length ) { return h & ( length - _NUM ) ; }
23733	public ColumnQuery addCondition ( ColumnCondition condition ) throws NullPointerException { this . conditions . add ( Objects . requireNonNull ( condition , _CHAR condition is required _CHAR ) ) ; return this ; }
23761	private long factorial ( int n ) { long result = _NUM ; for ( int i = _NUM ; i <= n ; i ++ ) { result *= i ; } return result ; }
23785	public Builder flushIntervalMicros ( int flushIntervalMicros ) { this . _flushIntervalMicros = flushIntervalMicros ; return this ; }
23790	public static final SM_SYSTEM_MESSAGE STR_MSG_HOUSING_BID_WIN ( int address ) { return new SM_SYSTEM_MESSAGE ( _NUM , address ) ; }
23796	public String toString ( ) { return _CHAR ViterbiPath score _CHAR + score + _CHAR state _CHAR + state ; }
23798	@ Override public final void run ( ) { try { if ( isValid ( ) ) { runImpl ( ) ; } } catch ( Throwable e ) { String name = getConnection ( ) . getAccount ( ) . getName ( ) ; if ( name == _NULL ) { name = getConnection ( ) . getIP ( ) ; } log . error ( _CHAR Error handling client ( _CHAR + name + _CHAR ) message : _CHAR + this , e ) ; } }
23802	@ Override public String toString ( ) { return _CHAR ViterbiCandidate : target _CHAR + target + _CHAR , unit _CHAR + unit + ( bestPath != _NULL ? _CHAR , best path score _CHAR + bestPath . score : _CHAR , no best path _CHAR ) ; }
23819	@ Override public final Object remove ( Object key ) { return this . set ( key . toString ( ) , _NULL ) ; }
23833	public void addReceiver ( AXmlNode node ) { if ( receivers . isEmpty ( ) ) receivers = new ArrayList < AXmlNode > ( ) ; receivers . add ( node ) ; }
23839	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
23853	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { try { if ( fLexicalHandler != _NULL ) { fLexicalHandler . startCDATA ( ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
23859	public CarouselOptions selectedItem ( int selectedItem ) { mSelectedItem = selectedItem ; return this ; }
23860	public void collapseViews ( ) { if ( isSelectAnimationInProcess || isWaitingToSelectAnimation || isDeselectAnimationInProcess || isWaitingToDeselectAnimation || isSelectedItemStraightened || isViewCollapsing ) { return ; } isViewCollapsing = _BOOL ; updateItemsByMode ( ) ; }
23866	public void finishTemplatesSearch ( NotifyContext notifyContext ) { decreaseCounter ( notifyContext ) ; _backupLog . clearTriggered ( notifyContext . getOperationId ( ) ) ; }
23896	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ caseSensitivity = _CHAR + caseSensitivity + _CHAR ] _CHAR ; }
23903	public static SM_SYSTEM_MESSAGE STR_MSG_PET_CONDITION_UP_01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23905	public void apply ( NexusStreamParser np ) throws Exception { }
23917	public BoxFolder createFolderUnderRoot ( String folderName ) throws BoxSDKServiceException { return createFolder ( folderName , getBoxSDKServiceConfig ( ) . getRootFolderId ( ) ) ; }
23920	private long nextID ( ) { return _idGens [ ( int ) Thread . currentThread ( ) . getId ( ) % IDSIZE ] . getNum ( ) ; }
23957	public static void createAllTables ( Database db , boolean ifNotExists ) { BangumiCalendarDao . createTable ( db , ifNotExists ) ; MyCollectionDao . createTable ( db , ifNotExists ) ; }
23964	public UsersGetNearbyQuery fields ( UserField ... value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
23966	@ Override public void readPacketData ( PacketBuffer buf ) throws IOException { AbstractChannel < ? > channel = ChannelManager . get ( buf . readInt ( ) ) ; packet = channel . read ( buf ) ; }
23987	public Matrix Predict ( ) { return Predict ( _NULL ) ; }
24004	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24026	public AdsGetSuggestionsQueryWithCities lang ( AdsGetSuggestionsLang value ) { return unsafeParam ( _CHAR lang _CHAR , value ) ; }
24041	private String fmtTime ( long time ) { return fmtTime ( time / _NUM . _NUM ) ; }
24047	public boolean remove ( BasenameList bnl ) { boolean ret = _BOOL ; for ( int i = _NUM ; i < bnl . getLength ( ) ; i ++ ) { bList . remove ( bnl . getName ( i ) ) ; } hasChanged = _BOOL ; return ( ret ) ; }
24058	protected void resetInternalState ( ) { setStepStart ( _NULL ) ; setStepSize ( FastMath . sqrt ( minStep * maxStep ) ) ; }
24071	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR show gapBetweenBars = _CHAR ) ; boolean show = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; if ( getViewer ( ) instanceof ChartViewer ) { ( ( ChartViewer ) getViewer ( ) ) . setShowGapsBetweenBars ( show ) ; } }
24075	public String taggerCorpusFileName ( ) { switch ( language ) { case ENGLISH : return _CHAR / export / dat / tag / en / brown . txt _CHAR ; case VIETNAMESE : return _CHAR / export / dat / tag / vi / vtb - tagged . txt _CHAR ; } return _NULL ; }
24096	private void verifyValidation ( ) { setErrorMessage ( _NULL ) ; setValid ( getErrorMessage ( ) == _NULL ) ; }
24099	public void addSection ( String tag , Section section ) { this . sections . put ( tag , section ) ; this . sectionViewTypeNumbers . put ( tag , viewTypeCount ) ; viewTypeCount += VIEW_TYPE_QTY ; }
24117	@ Nullable private static String guessBinaryPath ( ) { ByteArrayOutputStream stdout = new ByteArrayOutputStream ( ) ; int retVal = ExternalTask . builder ( ) . args ( _CHAR which _CHAR , _CHAR bazel _CHAR ) . stdout ( stdout ) . build ( ) . run ( ) ; if ( retVal != _NUM ) { return _NULL ; } return stdout . toString ( ) . trim ( ) ; }
24158	private void checkInit ( ) { if ( ! mInitialized ) throw new IllegalStateException ( _CHAR Scoop needs to be initialized first ! _CHAR ) ; }
24169	private void checkConfiguration ( ) { if ( configuration == _NULL ) { throw new IllegalStateException ( ERROR_NOT_INIT ) ; } }
24185	@ Override public boolean checkCondition ( ) { return alliance . hasMember ( disconnected . getObjectId ( ) ) ; }
24205	public String toString ( ) { return _CHAR MPPointD , x : _CHAR + x + _CHAR , y : _CHAR + y ; }
24220	public void scrollToFinishActivity ( ) { final int childWidth = mContentView . getWidth ( ) ; int left = _NUM , top = _NUM ; left = childWidth + mShadowLeft . getIntrinsicWidth ( ) + OVERSCROLL_DISTANCE ; mDragHelper . smoothSlideViewTo ( mContentView , left , top ) ; invalidate ( ) ; }
24228	public static SM_SYSTEM_MESSAGE STR_ABYSS_PVP_OFF ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
24242	public int size ( ) { return q . size ( ) ; }
24243	@ Override public String toString ( ) { return _CHAR TokenToWords _CHAR ; }
24266	public Until until ( Conditional cond , Task task ) { return new Until ( this . executor_ , cond , task ) ; }
24267	public VideoAddAlbumQuery addAlbum ( UserActor actor ) { return new VideoAddAlbumQuery ( getClient ( ) , actor ) ; }
24274	@ Override public void flush ( ) { }
24276	public static java . sql . Date toSqlDate ( String date ) { java . util . Date newDate = toDate ( date , _CHAR _NUM : _NUM : _NUM _CHAR ) ; if ( newDate != _NULL ) { return new java . sql . Date ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
24316	public Object postMessage ( String id , Object data ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { Object obj = plugin . onMessage ( id , data ) ; if ( obj != _NULL ) { return obj ; } } } return ctx . onMessage ( id , data ) ; }
24320	public void clear ( ) { n = _NUM ; Arrays . fill ( sums , _NUM . _NUM ) ; Arrays . fill ( productsSums , _NUM . _NUM ) ; }
24333	public boolean isDone ( ) { return this . taskManager_ . isDone ( ) ; }
24340	protected void resetInternalState ( ) { setStepStart ( _NULL ) ; setStepSize ( minStep . multiply ( maxStep ) . sqrt ( ) ) ; }
24369	public void delayMethod ( int deltaTime ) { Robot robot ; try { robot = new Robot ( ) ; robot . delay ( deltaTime ) ; } catch ( AWTException e ) { e . printStackTrace ( ) ; } }
24385	public void onStop ( final FileAlterationObserver observer ) { }
24418	@ Override public int hashCode ( ) { int hashCode = getClass ( ) . hashCode ( ) ; for ( int b : bytes ) { hashCode += b ; } return hashCode ; }
24423	public static SM_SYSTEM_MESSAGE STR_TOOLTIP_NEED_MASTERY_SKILL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24428	public static RuleKey forPlainTarget ( Label label ) { return new RuleKey ( label ) ; }
24447	private void skipAhead ( @ NotNull DateTime skipAheadTo ) { while ( activeInterval != _NULL && activeInterval . isBefore ( skipAheadTo ) ) { activeInterval = supply . hasNext ( ) ? supply . next ( ) : _NULL ; } }
24451	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { if ( fAnnotationDepth != - _NUM ) { schemaDOM . startAnnotationCDATA ( ) ; } }
24489	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
24495	public static void w ( String c , String s ) { if ( isEnable ( ) ) { if ( s == _NULL ) s = _CHAR \ _CHAR NULL \ _CHAR _CHAR ; Log . w ( c , s ) ; } }
24508	public synchronized int status ( ) { return this . status ; }
24509	private void addSpanWatcher ( ) { Spannable spannable = getText ( ) ; if ( spannable . getSpans ( _NUM , spannable . length ( ) , getClass ( ) ) != _NULL ) { spannable . setSpan ( this , _NUM , spannable . length ( ) , Spanned . SPAN_INCLUSIVE_INCLUSIVE ) ; } }
24560	public static SM_SYSTEM_MESSAGE STR_MSG_MENTOR_START_PARTYMSG ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24581	private FieldODEStateAndDerivative < Decimal64 > state ( double t ) { return new FieldODEStateAndDerivative < > ( zero . add ( t ) , new Decimal64 [ _NUM ] , new Decimal64 [ _NUM ] ) ; }
24584	private int blockWidth ( final int blockColumn ) { return ( blockColumn == blockColumns - _NUM ) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE ; }
24597	public int size ( ) { return counter ; }
24598	protected String generateDropTableSQL ( TableModel tableModel ) { return generateDropTableSQL ( tableModel . getTableName ( ) ) ; }
24623	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
24627	public Env < T > open ( final File path , final EnvFlags ... flags ) { return open ( path , _NUM , flags ) ; }
24656	public void hideAppMenu ( ) { if ( mAppMenu != _NULL && mAppMenu . isShowing ( ) ) mAppMenu . dismiss ( ) ; }
24663	public void clear ( ) { Iterator < MouseButton > buttons = this . buttons . values ( ) . iterator ( ) ; while ( buttons . hasNext ( ) ) { buttons . next ( ) . clear ( ) ; } this . moved = _BOOL ; this . scroll = _NUM ; }
24678	public void clearSelection ( ) { List < Integer > selection = getSelectedItemsPosition ( ) ; selectedItems . clear ( ) ; for ( Integer i : selection ) { notifyItemChanged ( i ) ; } }
24683	public static Predicate < ItemStack > matcherOf ( Block value ) { return matcherOf ( new ItemStack ( value , _NUM , WILDCARD_METADATA ) , _BOOL ) ; }
24686	public static void showBrand ( Player player , int targetObjId , int brandId ) { PlayerAlliance alliance = player . getPlayerAlliance2 ( ) ; if ( alliance != _NULL ) { alliance . onEvent ( new ShowBrandEvent < PlayerAlliance > ( alliance , targetObjId , brandId ) ) ; } }
24743	public void updateClipPreview ( ) { clipboardPreview . setText ( cth . getPreviewString ( ) ) ; clipboardMaxLength . setText ( _CHAR ( _CHAR + cth . getMaxLength ( ) + _CHAR characters ) _CHAR ) ; }
24751	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { }
24759	@ Override public void ignoredCharacters ( XMLString text , Augmentations augs ) throws XNIException { }
24767	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { SearchSuffixDao . createTable ( db , ifNotExists ) ; }
24778	public void scrollToFinishActivity ( ) { final int childWidth = mContentView . getWidth ( ) ; int left = _NUM , top = _NUM ; left = childWidth + mShadowLeft . getIntrinsicWidth ( ) + OVERSCROLL_DISTANCE ; mDragHelper . smoothSlideViewTo ( mContentView , left , top ) ; invalidate ( ) ; }
24794	public void addRewardProducer ( IRewardProducer producer ) { if ( this . producers == _NULL ) { this . producers = new ArrayList < IRewardProducer > ( ) ; } this . producers . add ( producer ) ; }
24804	protected void onBindInsertionViewHolder ( RecyclerView . ViewHolder holder , int position ) { updateInsertClickListener ( position , holder . itemView ) ; }
24807	public static double nextDown ( final double a ) { return nextAfter ( a , Double . NEGATIVE_INFINITY ) ; }
24820	public boolean isLookingForGroup ( ) { return lookingForGroup ; }
24881	private static boolean isUnderTestFlag ( ) { return underTestFlag ; }
24887	public static < T > T make ( Class < T > shieldClass , RxJava2ObsHub rxJava2ObsHub ) { return inst . make ( shieldClass , rxJava2ObsHub , RxJava2ObsHub . class ) ; }
24928	@ Override public void endAttlist ( Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . endAttlist ( augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . endAttlist ( augs ) ; } }
24932	public static boolean checkPassword ( String password , String hash ) { return ( myCrypt ( password , hash ) . equals ( hash ) ) ; }
24953	public void initializeLogging ( ) { LogWrapper logWrapper = new LogWrapper ( ) ; Log . setLogNode ( logWrapper ) ; Log . i ( TAG , _CHAR Ready _CHAR ) ; }
24956	GSMessageImpl duplicate ( ) throws JMSException { GSTextMessageImpl dup = new GSTextMessageImpl ( ) ; copyTo ( dup ) ; return dup ; }
24965	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; ServicePanel servicePanel = ( ( RemoteServiceBrowser ) getViewer ( ) ) . getServicePanel ( ) ; if ( servicePanel != _NULL ) { new Message ( getViewer ( ) . getFrame ( ) , servicePanel . getService ( ) . getInfo ( ) ) ; } }
24973	@ Transactional ( _CHAR cacheTransactionManager _CHAR ) @ Override public void updateCacheable ( final T cacheable ) { persistenceMapper . updateCacheable ( cacheable ) ; }
24978	public static boolean isNetworkAvailable ( Context context ) { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetworkInfo = connectivityManager . getActiveNetworkInfo ( ) ; return activeNetworkInfo != _NULL && activeNetworkInfo . isConnected ( ) ; }
24995	public void addRepurchaseItems ( Player player , List < Item > items ) { repurchaseItems . putAll ( player . getObjectId ( ) , items ) ; }
24996	private void comfirmOperation ( final OperationId operation ) { final List < Operation > operations = Operation . generateOperations ( operation , getSelectedItems ( ) ) ; new OperationConfirmationController ( new ObservableListWrapper < > ( operations ) ) ; }
25028	public boolean hasGeomExecuted ( ) { return hasExecuted ; }
25042	public static Drawable tintDrawable ( @ Nullable Drawable drawable , @ ColorInt int color ) { if ( drawable != _NULL ) { drawable . setColorFilter ( color , PorterDuff . Mode . SRC_IN ) ; } return drawable ; }
25073	private WatchedObject addWatch ( WatchedObject watched ) { try { _watchedObjects . put ( new WeakReference < WatchedObject > ( watched ) ) ; } catch ( InterruptedException e ) { interrupt ( ) ; } return watched ; }
25075	public static SM_SYSTEM_MESSAGE STR_MSG_Heal_TO_OTHER ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
25078	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_RESISTED_A_TO_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25085	protected void displayAddressOutput ( ) { try { if ( mAreaOutput != _NULL ) mLocationAddress . setText ( mAddressOutput ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
25088	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
25103	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
25110	public < T > T constructObject ( Class < T > newClass , Args mode ) throws InstantiationException { return constructObject ( newClass , mode , new Stack < > ( ) ) ; }
25147	public NewsfeedGetSuggestedSourcesQuery shuffle ( Boolean value ) { return unsafeParam ( _CHAR shuffle _CHAR , value ) ; }
25151	public Fraction add ( final int i ) { return new Fraction ( numerator + i * denominator , denominator ) ; }
25176	public PhotosPutTagQuery putTag ( UserActor actor , int photoId , int userId ) { return new PhotosPutTagQuery ( getClient ( ) , actor , photoId , userId ) ; }
25178	private static void prependSchwa ( Item item ) { Item schwa = item . prependItem ( _NULL ) ; schwa . getFeatures ( ) . setString ( _CHAR name _CHAR , _CHAR ax _CHAR ) ; item . getItemAs ( Relation . SYLLABLE_STRUCTURE ) . prependItem ( schwa ) ; }
25189	public static void json ( String json ) { printer . json ( json ) ; }
25218	public static void v ( String tag , String msg ) { v ( tag , msg , _NULL ) ; }
25221	public void apply ( NexusStreamParser np ) throws Exception { }
25286	public static boolean isValidIPAddress ( String IPAddress ) { return Patterns . IP_ADDRESS . matcher ( IPAddress ) . matches ( ) ; }
25295	public void apply ( NexusStreamParser np ) throws Exception { }
25315	protected boolean isUnauthenticated ( ClientHttpResponse clientHttpResponse ) throws IOException { return ( clientHttpResponse . getStatusCode ( ) . equals ( HttpStatus . FOUND ) && clientHttpResponse . getHeaders ( ) . getLocation ( ) . getPath ( ) . equals ( _CHAR / login _CHAR ) ) || ( clientHttpResponse . getStatusCode ( ) . equals ( HttpStatus . UNAUTHORIZED ) ) ; }
25319	public String toString ( ) { return path . toString ( ) ; }
25320	public boolean validate ( String password ) { if ( this . isLocked ( ) ) return _BOOL ; password = encrypt ( password ) ; return get ( _CHAR password _CHAR ) != _NULL && get ( _CHAR password _CHAR ) . equals ( password ) ; }
25326	public PriorityQueue priorityQueue ( int concurrency , PriorityQueue . PriorityComparator comparator ) { return new PriorityQueue ( this . executor_ , concurrency , comparator ) ; }
25341	@ Override public void startAttlist ( String elementName , Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . startAttlist ( elementName , augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . startAttlist ( elementName , augs ) ; } }
25350	@ Nonnull @ Override public String toVersionString ( ) { return toVersionString ( groups ) + extension ; }
25358	public boolean insertIntoTheCurrentSlot ( ) { if ( ! getVal ( currentPos ( ) , INTEGER ) . equals ( EMPTY_CONST ) ) return _BOOL ; setVal ( currentPos ( ) , INUSE_CONST ) ; return _BOOL ; }
25363	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; Director . showMessageWindow ( ) ; }
25388	public void onReturnHome ( ) { }
25393	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigBoolean copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigBoolean ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
25394	public void add ( WeightedObservedPoint observed ) { observations . add ( observed ) ; }
25400	@ Override public void close ( ) { }
25416	@ Override public String toString ( ) { return getClass ( ) . getSimpleName ( ) ; }
25434	public void clear ( ) { buf = _NULL ; offset = _NUM ; length = _NUM ; }
25441	public final boolean isAlternatingDevice ( ) { return ( myAlternate & CFG_DEVICE ) != _NUM ; }
25442	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
25450	public static SM_SYSTEM_MESSAGE STR_MSG_LOOT_PAUSE_START_OTHER ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
25472	@ Override public void startConditional ( short type , Augmentations augs ) throws XNIException { }
25487	private void createBody ( soot . SootMethod sootMethod ) { body = soot . jimple . Jimple . v ( ) . newBody ( sootMethod ) ; sootMethod . setActiveBody ( body ) ; }
25491	protected Object cloneBody ( ) { return cloneObject ( Body ) ; }
25512	@ Override public void show ( long time , boolean animate ) { super . show ( time , animate ) ; mLayoutTabs = _NULL ; setStaticTab ( mTabModelSelector . getCurrentTabId ( ) ) ; }
25544	private static boolean checkNullForDims ( Object object ) { Integer [ ] dimensions = ( Integer [ ] ) object ; for ( Integer dimension : dimensions ) { if ( _NULL != dimension ) { return _BOOL ; } } return _BOOL ; }
25555	public static String fakeSignature ( String qualifiedName ) { String cname = qualifiedName . substring ( _NUM , qualifiedName . lastIndexOf ( _CHAR ) ) ; String mname = qualifiedName . substring ( qualifiedName . lastIndexOf ( _CHAR ) + _NUM , qualifiedName . length ( ) ) ; return _CHAR < _CHAR + cname + _CHAR : _CHAR + mname + _CHAR > _CHAR ; }
25569	public void add ( String str ) { if ( ! bList . contains ( str ) ) bList . add ( str ) ; hasChanged = _BOOL ; }
25587	public Location add ( Vector vec ) { this . x += vec . getX ( ) ; this . y += vec . getY ( ) ; this . z += vec . getZ ( ) ; return this ; }
25596	@ Override public void clearNodes ( ) { super . clearNodes ( ) ; getPlugin ( ) . getUserManager ( ) . giveDefaultIfNeeded ( this , _BOOL ) ; }
25601	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
25623	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
25681	public void onDestroy ( ) { if ( ! players . isEmpty ( ) ) { onLastPlayerReleased ( ) ; } for ( AudioPlayer audio : this . players . values ( ) ) { audio . destroy ( ) ; } this . players . clear ( ) ; }
25755	public SimpleNotifyContainerConfigurer eventListenerAnnotation ( Object eventListener ) { AnnotationEventListenerAdapter annotationEventListenerAdapter = new AnnotationEventListenerAdapter ( ) ; annotationEventListenerAdapter . setDelegate ( eventListener ) ; annotationEventListenerAdapter . afterPropertiesSet ( ) ; notifyEventListenerContainer . setEventListener ( annotationEventListenerAdapter ) ; return this ; }
25761	public static SM_SYSTEM_MESSAGE STR_FORCE_ENTER_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25764	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_DODGED_A_TO_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25777	public boolean isRasterVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { enabled = ( obj instanceof Rule ) && ( geometryType == GeometryTypeEnum . RASTER ) ; } return enabled ; }
25782	@ Override public void commit ( ) { alerts_ = unmodifiableMap ( alerts ) ; try { getHistory ( ) . ifPresent ( _NULL ) ; } catch ( Exception ex ) { logger . log ( Level . WARNING , _CHAR unable to add collection data to history ( dropped ) _CHAR , ex ) ; } }
25800	public static SM_SYSTEM_MESSAGE STR_BUDDYLIST_ADD_BUDDY_REJECTED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25848	private String makeOTP ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; stringBuilder . append ( mOtpOneField . getText ( ) . toString ( ) ) ; stringBuilder . append ( mOtpTwoField . getText ( ) . toString ( ) ) ; stringBuilder . append ( mOtpThreeField . getText ( ) . toString ( ) ) ; stringBuilder . append ( mOtpFourField . getText ( ) . toString ( ) ) ; return stringBuilder . toString ( ) ; }
25862	public void addLines ( @ NotNull List < RangedContinuousSeries > data ) { data . forEach ( _NULL ) ; }
25869	public boolean displayNotification ( ) { return _BOOL ; }
25882	public static void checkCanceled ( IProgressMonitor monitor ) { if ( monitor . isCanceled ( ) ) throw new OperationCanceledException ( ) ; }
25917	public PolynomialCurveFitter withMaxIterations ( int newMaxIter ) { return new PolynomialCurveFitter ( initialGuess , newMaxIter ) ; }
25926	private void clean ( ) { SREntry entry = ( SREntry ) fReferenceQueue . poll ( ) ; while ( entry != _NULL ) { removeEntry ( entry ) ; entry = ( SREntry ) fReferenceQueue . poll ( ) ; } }
25937	public static Map < String , Object > conditionTrueService ( DispatchContext dctx , Map < String , ? > context ) { Map < String , Object > result = ServiceUtil . returnSuccess ( ) ; result . put ( _CHAR conditionReply _CHAR , Boolean . TRUE ) ; return result ; }
25959	protected Bindings createBindings ( VariableScope variableScope ) { return scriptBindingsFactory . createBindings ( variableScope ) ; }
25965	private ClientCommandTagImpl createCommandTag ( Long id ) { ClientCommandTagImpl commandTag = new ClientCommandTagImpl ( id ) ; commandTag . update ( createCommandTagHandleImpl ( id ) ) ; try { commandTag . setValue ( ( Object ) ( new String ( _CHAR HI ! _CHAR ) ) ) ; } catch ( CommandTagValueException e ) { e . printStackTrace ( ) ; } return commandTag ; }
25999	public void resetAll ( Identity < ? > identity ) { strictPermission . values ( ) . forEach ( _NULL ) ; }
26003	public String toString ( ) { return new String ( getType ( ) + _CHAR with current value : _CHAR + getValue ( ) + _CHAR _CHAR + units + _CHAR ( range : _CHAR + minimum + _CHAR - _CHAR + maximum + _CHAR ) _CHAR ) ; }
26016	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
26020	public void init ( float startX , float startY , float endX , float endY ) { setStart ( new PointF ( startX , startY ) ) ; setEnd ( new PointF ( endX , endY ) ) ; }
26035	public Builder cacheOnDisc ( ) { cacheOnDisc = _BOOL ; return this ; }
26072	public boolean isMaximized ( ) { return maximized ; }
26075	public void remove ( ) { throw new UnsupportedOperationException ( ) ; }
26086	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
26119	void ensureOpen ( ) throws IllegalStateException { if ( m_closed ) { throw new IllegalStateException ( _CHAR Forbidden call on a closed session . '' ) ; } }
26133	private void addSpanWatcher ( ) { Spannable spannable = getText ( ) ; if ( spannable . getSpans ( _NUM , spannable . length ( ) , getClass ( ) ) != _NULL ) { spannable . setSpan ( this , _NUM , spannable . length ( ) , Spanned . SPAN_INCLUSIVE_INCLUSIVE ) ; } }
26140	private void attachTransaction ( QuerySession session , Query query ) throws TransactionException , RemoteException , LeaseDeniedException { if ( ( ! session . isAutoCommit ( ) && session . getTransaction ( ) == _NULL ) || query . isForceUnderTransaction ( ) ) session . setTransaction ( createTransaction ( ) ) ; session . setQueryHandler ( this ) ; }
26144	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getSupplementaryAlignmentFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getSupplementaryAlignmentFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
26156	public MarketGetCommentsQuery needLikes ( Boolean value ) { return unsafeParam ( _CHAR need_likes _CHAR , value ) ; }
26158	protected int addContentSpecNode ( short nodeType , String nodeValue ) { int contentSpecIndex = createContentSpec ( ) ; fContentSpec . setValues ( nodeType , nodeValue , _NULL ) ; setContentSpec ( contentSpecIndex , fContentSpec ) ; return contentSpecIndex ; }
26172	private boolean hasNext ( ) { return currentToken != _NULL ; }
26196	public void removeAddendum ( String word , String partOfSpeech ) { addenda . remove ( word + fixPartOfSpeech ( partOfSpeech ) ) ; }
26222	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
26238	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
26275	@ Override public String toString ( ) { return name ; }
26320	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { if ( fAnnotationDepth != - _NUM ) { schemaDOM . endAnnotationCDATA ( ) ; } }
26335	private boolean isTestMode ( ) { return ( ( System . getProperty ( _CHAR c2mon . server . testMode _CHAR ) ) != _NULL && ( System . getProperty ( _CHAR c2mon . server . testMode _CHAR ) . equals ( _CHAR _BOOL _CHAR ) ) ) ; }
26336	public DocumentQuery addCondition ( DocumentCondition condition ) { this . conditions . add ( Objects . requireNonNull ( condition , _CHAR condition is required _CHAR ) ) ; return this ; }
26339	void unpin ( ) { internalLock . writeLock ( ) . lock ( ) ; try { pins -- ; } finally { internalLock . writeLock ( ) . unlock ( ) ; } }
26350	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HE_LEAVED_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26379	@ Override public void startAttlist ( String elementName , Augmentations augmentations ) throws XNIException { }
26393	public StringProperty lastReceivedPayloadProperty ( ) { return lastReceivedPayload ; }
26395	public static SM_SYSTEM_MESSAGE STR_MSG_Recall_CANCEL_EFFECT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26411	public void showLoading ( List < Integer > skipIds ) { switchState ( LOADING , _NULL , _NULL , _NULL , _NULL , skipIds ) ; }
26451	public static final void popTransform ( GL2 gl ) { gl . glPopMatrix ( ) ; }
26484	public boolean isAllowed ( VersionData versionData ) { if ( versionData == _NULL ) { return _BOOL ; } if ( versionData . getVendorOptionType ( ) == NoVendorOption . class ) { return _BOOL ; } if ( versionData . getVendorOptionType ( ) != this . classType ) { return _BOOL ; } return versionData . inRange ( this . minimumVersion , this . maximumVersion ) ; }
26501	public DocsDeleteQuery delete ( UserActor actor , int ownerId , int docId ) { return new DocsDeleteQuery ( getClient ( ) , actor , ownerId , docId ) ; }
26522	public void closeRows ( ) { SQLModel . closeQuietly ( currentRow ) ; SQLModel . closeQuietly ( currentStatement ) ; }
26534	protected void fireChangeEvent ( ) { Iterator iter = m_listeners . iterator ( ) ; ChangeEvent evt = new ChangeEvent ( this ) ; while ( iter . hasNext ( ) ) { ChangeListener cl = ( ChangeListener ) iter . next ( ) ; cl . stateChanged ( evt ) ; } }
26549	public static byte [ ] translate ( byte [ ] sequence , byte [ ] alphabet ) { return translate ( sequence , alphabet , _NUM , sequence . length ) ; }
26566	public static void main ( String [ ] args ) { LinkTerrain simulation = new LinkTerrain ( ) ; simulation . run ( ) ; }
26585	public void printMcepMean ( ) { printVectors ( mcepMean , mcepVariance ) ; }
26592	static boolean isExist ( String libName , int version ) { String file = _targetSoFile ( libName , version ) ; File a = new File ( file ) ; return a . exists ( ) ; }
26637	public synchronized void resume ( ) { if ( paused ) { setPaused ( _BOOL ) ; if ( currentClip != _NULL ) { currentClip . start ( ) ; } notifyAll ( ) ; } }
26656	public boolean isCollapsed ( ) { return collapsed ; }
26684	public static void copyAssets ( Context context , String assetsFilename , File file , String mode ) throws IOException , InterruptedException { AssetManager manager = context . getAssets ( ) ; final InputStream is = manager . open ( assetsFilename ) ; copyFile ( file , is , mode ) ; }
26692	@ Override public void endExternalSubset ( Augmentations augmentations ) throws XNIException { }
26710	public void add ( short value ) { ensureCapacity ( fLength + _NUM ) ; fData [ fLength ++ ] = value ; }
26740	public void stateChanged ( ChangeEvent evt ) { int scale = slider . getValue ( ) ; value . setText ( _CHAR x _CHAR + String . valueOf ( scale ) ) ; size . setText ( _CHAR Image Size : _CHAR + ( width * scale ) + _CHAR x _CHAR + ( height * scale ) + _CHAR pixels _CHAR ) ; preview . repaint ( ) ; }
26741	public void addEntry ( LocalVarEntry e ) { vars . addElement ( e ) ; }
26744	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
26789	private Object readResolve ( ) { wakeUpQueue = new ArrayBlockingQueue < SerialMessage > ( MAX_BUFFFER_SIZE , _BOOL ) ; timer = new Timer ( ) ; return this ; }
26809	public static NBTTagList readNBTList ( PacketBuffer buf ) { NBTTagList value = new NBTTagList ( ) ; for ( int i = _NUM ; i < buf . readInt ( ) ; i ++ ) { value . set ( i , buf . readNBTTagCompoundFromBuffer ( ) ) ; } return value ; }
26812	private synchronized void disconnect ( ) { disconnectQuietly ( ) ; notifyConnectionListenerOnDisconnection ( ) ; }
26888	public Table < C , R , V > computeTransposedTable ( ) { final Table < C , R , V > transposed = new Table < > ( ) ; for ( R row : rowKeySet ( ) ) for ( C col : columnKeySet ( ) ) transposed . put ( col , row , get ( row , col ) ) ; return transposed ; }
26933	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigSymbolType copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigSymbolType ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
26948	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_BATTLE_END ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26972	public static void show ( Context context , CharSequence msg ) { show ( context , msg , LENGTH_SHORT ) ; }
26993	public < S extends Domino < T , ? >> S convert ( DominoConverter < T , R , S > converter ) { return converter . call ( this ) ; }
27012	public static Record createRecord ( ModelRecord modelRecord , Map < String , Object > fields ) throws DataFileException { Record record = new Record ( modelRecord , fields ) ; return record ; }
27013	public void apply ( NexusStreamParser np ) throws Exception { }
27031	public GroupsEditManagerQuery contactPosition ( String value ) { return unsafeParam ( _CHAR contact_position _CHAR , value ) ; }
27065	@ RequestMapping ( value = _CHAR / rest / activiti / forms _CHAR , method = RequestMethod . GET , produces = _CHAR application / json _CHAR ) public JsonNode listForms ( HttpServletRequest request ) { ServerConfig serverConfig = retrieveServerConfig ( ) ; Map < String , String [ ] > parameterMap = getRequestParametersWithoutServerId ( request ) ; return clientService . listForms ( serverConfig , parameterMap ) ; }
27068	private void expectException ( ) { expectedException . expect ( IllegalArgumentException . class ) ; expectedException . expectMessage ( EMPTY_ERROR_MESSAGE ) ; }
27078	public String toString ( ) { return _CHAR PauseGenerator _CHAR ; }
27135	public static boolean isFullyEvolved ( PokemonId pokemonId ) { if ( EEVEE_FINAL_EVOLUTIONS . contains ( pokemonId ) ) { return _BOOL ; } else { PokemonId [ ] info = EVOLUTION_INFO . get ( pokemonId ) ; return info [ info . length - _NUM ] == pokemonId ; } }
27159	private void deleteLogFile ( int ver ) throws LogException { if ( ver != _NUM ) { deleteFile ( versionName ( logfilePrefix , ver ) ) ; } }
27160	public static SM_SYSTEM_MESSAGE STR_ABYSS_GUILD_CASTLE_TAKEN ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
27191	public boolean addStyleKey ( String styleKey ) { return styleKeys . add ( styleKey ) ; }
27194	public static String createShortTag ( String cName ) { if ( cName . equalsIgnoreCase ( Taxonomy ) ) return _CHAR tax | _CHAR ; else if ( cName . equalsIgnoreCase ( _CHAR interpro2go _CHAR ) ) return _CHAR IPR | _CHAR ; else if ( cName . equalsIgnoreCase ( _CHAR eggnog _CHAR ) ) return _CHAR cog | _CHAR ; else return cName . toLowerCase ( ) + _CHAR | _CHAR ; }
27199	public void requestProjectSync ( @ NotNull Project project , boolean generateSourcesOnSuccess , @ Nullable GradleSyncListener listener ) { requestProjectSync ( project , _BOOL , generateSourcesOnSuccess , _BOOL , listener ) ; }
27208	public void showLoading ( ) { switchState ( LOADING , _NULL , _NULL , _NULL , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
27209	public static SM_SYSTEM_MESSAGE STR_MSG_PAY_RESULT_OTHER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27214	public void onLongPress ( long time , float x , float y ) { getActiveStripLayoutHelper ( ) . onLongPress ( time , x , y ) ; }
27242	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; journalWriter . flush ( ) ; }
27257	public static void showToast ( Context context , int resourceId ) { Toast . makeText ( context , context . getString ( resourceId ) , Toast . LENGTH_LONG ) . show ( ) ; }
27267	public void delete ( ) { if ( getOwner ( ) . isSpawned ( ) ) { World . getInstance ( ) . despawn ( getOwner ( ) ) ; } World . getInstance ( ) . removeObject ( getOwner ( ) ) ; }
27273	public void connect ( List < StompHeader > _headers , boolean reconnect ) { if ( reconnect ) disconnect ( ) ; if ( mConnected ) return ; mConnectionProvider . getLifecycleReceiver ( ) . subscribe ( _NULL ) ; mMessagesSubscription = mConnectionProvider . messages ( ) . map ( _NULL ) . subscribe ( _NULL ) ; }
27341	private double melToLinFreq ( double inputFreq ) { return ( _NUM . _NUM * ( Math . pow ( _NUM . _NUM , ( inputFreq / _NUM . _NUM ) ) - _NUM . _NUM ) ) ; }
27367	public void add ( String key , Object obj ) { context . put ( key , obj ) ; }
27405	private void checkIndex ( final int index ) throws MathIllegalArgumentException { MathUtils . checkRangeInclusive ( index , _NUM , getDimension ( ) - _NUM ) ; }
27420	public static SM_SYSTEM_MESSAGE STR_GUILD_DISPERSE_TIME ( String durationday0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationday0 ) ; }
27434	@ Provides @ Singleton @ ScannerZooKeeper CuratorFramework provideScannerZooKeeperConnection ( @ Global CuratorFramework curator ) { return withComponentNamespace ( curator , _CHAR scanner _CHAR ) ; }
27445	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { FileModelDao . createTable ( db , ifNotExists ) ; }
27451	protected AdsGetSuggestionsQuery section ( AdsGetSuggestionsSection value ) { return unsafeParam ( _CHAR section _CHAR , value ) ; }
27461	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set showLabels = _CHAR ) ; boolean showLabels = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; ClusterViewer viewer = getViewer ( ) ; viewer . setShowLabels ( showLabels ) ; }
27480	public void hold ( int key , int duration ) throws InterruptedException { press ( key ) ; if ( duration >= _NUM ) { Thread . sleep ( duration ) ; } release ( key ) ; }
27485	@ Override public void apply ( NexusStreamParser np ) throws Exception { execute ( _CHAR zoom selected ; _CHAR ) ; }
27504	private void initBulkProcessor ( ) { this . bulkProcessor = BulkProcessor . builder ( client , createBulkProcessorListener ( ) ) . setName ( bulkProcessorName ) . setBulkActions ( bulkActions ) . setBulkSize ( new ByteSizeValue ( bulkSize , ByteSizeUnit . GB ) ) . setFlushInterval ( TimeValue . timeValueSeconds ( flushInterval ) ) . setConcurrentRequests ( concurrent ) . build ( ) ; log . debug ( _CHAR initBulkSettings ( ) - BulkProcessor created . '' ) ; }
27509	public static TestDimensionConfig buildStandardLuceneDimensionConfig ( TestApiDimensionName dimensionName ) { return new TestDimensionConfig ( dimensionName , dimensionName . asName ( ) , getDefaultKeyValueStore ( dimensionName ) , LuceneSearchProviderManager . getInstance ( dimensionName . asName ( ) ) , getDefaultFields ( ) , getDefaultFields ( ) ) ; }
27528	public Date time ( ) { return getCalendar ( ) . toIso ( dateTimeUnit ) . toJdkDate ( ) ; }
27532	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sleep_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
27542	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ caseSensitivity = _CHAR + caseSensitivity + _CHAR ] _CHAR ; }
27547	public AdsUpdateClientsQuery updateClients ( UserActor actor , int accountId , String data ) { return new AdsUpdateClientsQuery ( getClient ( ) , actor , accountId , data ) ; }
27551	public Waterfall waterfall ( Task ... tasks ) { return new Waterfall ( this . executor_ , tasks ) ; }
27560	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; if ( getViewer ( ) instanceof GroupsViewer ) { GroupsViewer viewer = ( GroupsViewer ) getViewer ( ) ; viewer . getGroupsPanel ( ) . addNewGroup ( - _NUM ) ; } }
27597	@ Deprecated public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
27609	public static String execute ( String command , String cwd ) { return execute ( command , new File ( cwd ) ) ; }
27620	public static void threadSleep ( long millis ) { try { Thread . sleep ( millis ) ; } catch ( InterruptedException ex ) { Log . e ( _CHAR Exception _CHAR , StringUtils . exceptionStackTraceToString ( ex ) ) ; } }
27623	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_BARRIER_ATSTAKE ( String value0value ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0value ) ; }
27634	public void addObserver ( AppMenuObserver observer ) { mObservers . add ( observer ) ; }
27654	void initAcceptableFilterList ( int capacity ) { if ( _acceptableFilterIDList == _NULL && capacity > _NUM ) _acceptableFilterIDList = new ArrayList < String > ( capacity ) ; }
27672	void remove ( VisibleObject object ) { if ( objects . remove ( object . getObjectId ( ) ) != _NULL ) { if ( object instanceof Player ) { checkActiveness ( playerCount . decrementAndGet ( ) > _NUM ) ; } } }
27698	@ Override public Packet read ( PacketBuffer buf ) { PacketSpec spec = getSpec ( buf . readInt ( ) ) ; Packet packet = new Packet ( new PacketBuilder ( this , spec ) ) ; packet . read ( buf ) ; return packet ; }
27701	public Provider < T > withKey ( Object key ) { this . key = key . toString ( ) ; return new Provider < > ( this ) ; }
27714	public Series series ( Task ... tasks ) { return new Series ( this . executor_ , tasks ) ; }
27738	public boolean isEmpty ( ) { return this . getEntries ( ) . size ( ) == _NUM ; }
27742	public ServerConfiguration enableDurableWrite ( boolean enabled ) { setProperty ( SERVER_DURABLE_WRITE_ENABLED , enabled ) ; return this ; }
27754	public void apply ( NexusStreamParser np ) throws Exception { }
27756	public String checkin ( IResource [ ] resources , final String comment , boolean keepLocks , final int depth , IProgressMonitor progress ) throws TeamException { CheckinResourcesCommand command = new CheckinResourcesCommand ( getSVNWorkspaceRoot ( ) , resources , depth , comment , keepLocks ) ; command . run ( progress ) ; return command . getPostCommitError ( ) ; }
27761	GSMessageImpl duplicate ( ) throws JMSException { GSObjectMessageImpl dup = new GSObjectMessageImpl ( ) ; copyTo ( dup ) ; return dup ; }
27772	@ PostConstruct public void init ( ) { highPriorityBuffer = new SynchroBuffer ( _NUM , _NUM , _NUM , SynchroBuffer . DUPLICATE_OK , _NUM ) ; highPriorityBuffer . setSynchroBufferListener ( new HighPriorityListener ( ) ) ; highPriorityBuffer . enable ( ) ; lowPriorityBuffer = new SynchroBuffer ( _NUM , _NUM , _NUM , SynchroBuffer . DUPLICATE_OK , _NUM ) ; lowPriorityBuffer . setSynchroBufferListener ( new LowPriorityListener ( ) ) ; lowPriorityBuffer . enable ( ) ; }
27780	public static void hideToast ( ) { if ( _NULL != toast ) { toast . cancel ( ) ; } }
27787	public static void d ( String tag , String msg ) { d ( tag , msg , _NULL ) ; }
27801	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27812	private ODEStateAndDerivative state ( double t ) { return new ODEStateAndDerivative ( t , new double [ _NUM ] , new double [ _NUM ] ) ; }
27820	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ sumDirectoryContents = _CHAR + sumDirectoryContents + _CHAR ] _CHAR ; }
27827	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
27831	@ Deprecated public MapCursor addCursor ( int x , int y , byte direction , byte type ) { return addCursor ( x , y , direction , type , _BOOL ) ; }
27858	public PhotosSaveMarketPhotoQuery saveMarketPhoto ( UserActor actor , String photo , int server , String hash ) { return new PhotosSaveMarketPhotoQuery ( getClient ( ) , actor , photo , server , hash ) ; }
27872	public void apply ( NexusStreamParser np ) throws Exception { }
27873	public DistributedLogClientBuilder periodicDumpOwnershipCacheIntervalMs ( long intervalMs ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setPeriodicDumpOwnershipCacheIntervalMs ( intervalMs ) ; return newBuilder ; }
27888	public static String removeInvertedCommas ( String s ) { return removeDelimiter ( s , _CHAR_CHAR ) ; }
27898	public Vector3D pointAt ( final double abscissa ) { return new Vector3D ( _NUM . _NUM , zero , abscissa , direction ) ; }
27907	public final boolean hasNext ( ) { while ( cur < lastNumber ) { if ( numberToObj [ cur ] != _NULL ) break ; ++ cur ; } return cur < lastNumber ; }
27938	private AudioOption audioOptionFromXmlOption ( Object xmlOpt , String lang , boolean isMainAudio ) { return ( isOptionEmpty ( xmlOpt ) ) ? generateAudioOption ( xmlOpt , lang , isMainAudio ) : createAudioOption ( xmlOpt ) ; }
27975	private void clearIssueReferences ( String launchId ) { List < FailReferenceResource > issues = issuesRepository . findAllLaunchIssues ( launchId ) ; issuesRepository . delete ( issues ) ; }
27980	private char read ( ) throws CompileException , IOException { this . peek ( ) ; if ( this . nextChar == - _NUM ) throw new CompileException ( _CHAR Unexpected end - of - input _CHAR , this . location ( ) ) ; final char result = ( char ) this . nextChar ; this . sb . append ( result ) ; this . nextChar = this . nextButOneChar ; this . nextButOneChar =- _NUM ; return result ; }
27996	public static void writeToFile ( File outputFile , String content ) throws IOException { Preconditions . checkNotNull ( outputFile ) ; Preconditions . checkNotNull ( content ) ; try ( BufferedWriter outWriter = Files . newWriter ( outputFile , StandardCharsets . UTF_8 ) ) { outWriter . write ( content ) ; } }
28008	public void output ( Node input ) throws TransformerException { output ( new DOMSource ( input ) ) ; }
28010	public MyDialog outDuration ( int duration ) { mOutDuration = duration ; return this ; }
28025	public FieldVector3D < T > subtract ( final Vector3D v ) { return new FieldVector3D < T > ( x . subtract ( v . getX ( ) ) , y . subtract ( v . getY ( ) ) , z . subtract ( v . getZ ( ) ) ) ; }
28028	public void removeEntry ( String entry ) { _classpathList . remove ( entry ) ; }
28030	public void removeUnusedTransaction ( XtnEntry xtnEntry , boolean needLock ) { try { if ( needLock ) xtnEntry . lock ( ) ; if ( ( ( ConcurrentHashMap < ServerTransaction , XtnEntry > ) getXtnTable ( ) ) . remove ( xtnEntry . m_Transaction , xtnEntry ) ) m_TimedXtns . remove ( xtnEntry . m_Transaction ) ; } finally { if ( needLock ) xtnEntry . unlock ( ) ; } }
28062	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getReadPairedFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getReadPairedFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
28081	public boolean executeImmediately ( final String command ) { throw new RuntimeException ( _CHAR Internal error : OLD executeImmediately ( ) _CHAR ) ; }
28100	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
28104	public boolean isInUpdate ( ) { return docInUpdate ; }
28115	public void dump ( PrintWriter output , int pad , String title ) { dump ( output , pad , title , _BOOL ) ; }
28159	public static ShoppingCart makeShoppingListCart ( LocalDispatcher dispatcher , GenericValue shoppingList , Locale locale ) { return makeShoppingListCart ( _NULL , dispatcher , shoppingList , locale ) ; }
28160	public void sendDelayedTimeDeadbandValues ( ) { this . equipmentLogger . trace ( _CHAR sendDelayedTimeDeadbandValues - Sending all time deadband delayed values to the server _CHAR ) ; for ( SDTTimeDeadbandScheduler tagScheduler : this . sdtTimeDeadbandSchedulers . values ( ) ) { if ( tagScheduler . isScheduledForSending ( ) ) { tagScheduler . run ( ) ; } } }
28169	public static SM_SYSTEM_MESSAGE STR_KILLMSG ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
28193	public static void updateAircraft ( AirMapAircraft aircraft , AirMapCallback < AirMapAircraft > listener ) { String url = String . format ( pilotAircraftByIdUrl , AirMap . getUserId ( ) , aircraft . getAircraftId ( ) ) ; AirMap . getClient ( ) . patch ( url , aircraft . getAsParamsPatch ( ) , new GenericOkHttpCallback ( listener , AirMapAircraft . class ) ) ; }
28195	public boolean isAintersects ( BitSet H ) { return A . intersects ( H ) ; }
28196	public static void main ( String [ ] args ) { Thrust simulation = new Thrust ( ) ; simulation . run ( ) ; }
28206	public FieldVector3D < T > scalarMultiply ( final T a ) { return new FieldVector3D < T > ( x . multiply ( a ) , y . multiply ( a ) , z . multiply ( a ) ) ; }
28208	public void put ( String key , File file , String contentType ) throws FileNotFoundException { if ( key != _NULL && file != _NULL ) { fileParams . put ( key , new FileWrapper ( file , contentType ) ) ; } }
28216	public void addLanguage ( Integer languageId ) { if ( languageId != _NULL ) { addLanguage ( languageId . toString ( ) ) ; } else { Logger . warn ( this , _CHAR Tried to add languageId Null ! _CHAR ) ; } }
28271	public void removeConnection ( final IConnectionWithReconnect connection ) { synchronized ( connections ) { connections . remove ( connection ) ; } }
28272	public static final SM_SYSTEM_MESSAGE STR_MSG_HOUSING_AUCTION_FAIL ( int address ) { return new SM_SYSTEM_MESSAGE ( _NUM , address ) ; }
28316	protected Integer defaultTransactionIsolation ( ) { return this . defaultTransactionIsolation ; }
28317	public Builder buttonTextColor ( int buttonTextColor ) { this . buttonTextColor = buttonTextColor ; return this ; }
28319	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
28320	public Fraction add ( final int i ) { return new Fraction ( numerator + i * denominator , denominator ) ; }
28328	public void apply ( NexusStreamParser np ) throws Exception { }
28342	public String toString ( ) { return ( constant_pool [ this_class ] . toString ( constant_pool ) ) ; }
28373	public void apply ( NexusStreamParser np ) throws Exception { }
28378	private void checkIsInitialized ( ) { Preconditions . checkNotNull ( boxDropExporterConfig , getClass ( ) . getSimpleName ( ) + _CHAR must be initialized first _CHAR ) ; }
28381	public static String serializeToString ( Document doc ) { ByteArrayOutputStream baos = new ByteArrayOutputStream ( ) ; try { MaryNormalisedWriter mnw = new MaryNormalisedWriter ( ) ; mnw . output ( doc , baos ) ; } catch ( Exception e1 ) { return _CHAR _CHAR ; } return baos . toString ( ) ; }
28390	public void screenshot ( ) { screenshot ( _NULL ) ; }
28393	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
28396	public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set index = _CHAR ) ; String method = np . getWordMatchesIgnoringCase ( METHODS ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; ClusterViewer viewer = getViewer ( ) ; viewer . setEcologicalIndex ( method ) ; execute ( _CHAR sync ; _CHAR ) ; }
28404	public void addNewStyledLayer ( NamedLayer namedLayer ) { if ( this . sld == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR sld == _NULL _CHAR ) ; } else { this . sld . addStyledLayer ( namedLayer ) ; } }
28407	public static SM_SYSTEM_MESSAGE STR_MSG_PET_CONDITION_CARE_01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28409	private char peek ( int n ) { return getLITERAL ( ) . charAt ( idx + n ) ; }
28416	@ Deprecated public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
28419	public static Builder newBuilder ( ) { return new DataQueryParams . Builder ( ) ; }
28440	public void closeListeners ( ) throws GenericServiceException { loadable = _NUM ; for ( String serverKey : listeners . keySet ( ) ) { closeListener ( serverKey ) ; } }
28452	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28462	@ Override public void printStackTrace ( ) { super . printStackTrace ( ) ; }
28482	public static Zmat o ( Zmat A ) throws JampackException { if ( A . nrow != A . ncol ) throw new JampackException ( _CHAR Can not compute the inverse of a rectangular matrix . '' ) ; return Solve . aib ( A , Eye . o ( A . nrow ) ) ; }
28513	public void addLanguage ( String languageId ) { query . append ( _CHAR + languageId : _CHAR + languageId ) ; }
28560	public void addNewStyledLayer ( UserLayer userLayer ) { if ( this . sld == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR sld == _NULL _CHAR ) ; } else { this . sld . addStyledLayer ( userLayer ) ; } }
28606	public T value ( ) throws ConcurrentModificationException , NoSuchElementException { if ( referenceCount != count ) { throw new ConcurrentModificationException ( ) ; } if ( current < _NUM ) { throw new NoSuchElementException ( ) ; } return values [ current ] ; }
28614	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { fInCDATASection = _BOOL ; if ( fDocumentHandler != _NULL ) { fDocumentHandler . endCDATA ( augs ) ; } }
28616	public static void showBrand ( Player player , int targetObjId , int brandId ) { PlayerGroup group = player . getPlayerGroup2 ( ) ; if ( group != _NULL ) { group . onEvent ( new ShowBrandEvent < PlayerGroup > ( group , targetObjId , brandId ) ) ; } }
28617	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28634	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( server == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL server _CHAR ) ; } else if ( lease == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL lease _CHAR ) ; } }
28635	public void loadConf ( DistributedLogConfiguration baseConf ) { addConfiguration ( baseConf ) ; }
28664	public static SM_SYSTEM_MESSAGE STR_MSG_PAY_GIVEUP_OTHER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28680	public void enterFullScreen ( ) { View decorView = mContext . getWindow ( ) . getDecorView ( ) ; hideSystemUI ( decorView ) ; for ( View view : views ) { view . setVisibility ( View . GONE ) ; view . invalidate ( ) ; } }
28685	public static S1Interval fullLng ( ) { return S1Interval . full ( ) ; }
28687	public void removeAllSections ( ) { this . sections . clear ( ) ; }
28692	@ Override public void startConditional ( short type , Augmentations augmentations ) throws XNIException { }
28695	public static float nextUp ( final float a ) { return nextAfter ( a , Float . POSITIVE_INFINITY ) ; }
28703	boolean waitForFileDone ( ) { synchronized ( waitFileSync ) { try { while ( ! fileDone ) waitFileSync . wait ( ) ; } catch ( Exception e ) { } } return fileSuccess ; }
28707	protected static SAXParseException createSAXParseException ( XMLParseException exception ) { return new SAXParseException ( exception . getMessage ( ) , exception . getPublicId ( ) , exception . getExpandedSystemId ( ) , exception . getLineNumber ( ) , exception . getColumnNumber ( ) , exception . getException ( ) ) ; }
28714	public String toString ( ) { return _CHAR JavaClipAudioPlayer _CHAR ; }
28734	private String trimReturnLine ( String string ) { return CharMatcher . anyOf ( _CHAR \ n _CHAR ) . trimFrom ( string ) ; }
28744	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
28747	public static void main ( String [ ] args ) { TrackingContactIds simulation = new TrackingContactIds ( ) ; simulation . run ( ) ; }
28773	public static java . sql . Time toSqlTime ( String time ) { java . util . Date newDate = toDate ( _CHAR _NUM / _NUM / _NUM _CHAR , time ) ; if ( newDate != _NULL ) { return new java . sql . Time ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
28797	public void onContextChanged ( Context context ) { mScroller = new StackScroller ( context ) ; mContext = context ; }
28798	@ Override public void write ( String str ) throws IOException { out . write ( str ) ; }
28851	public static SM_SYSTEM_MESSAGE STR_MSG_GAME_TIME ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
28887	public Builder cacheOnDisc ( ) { cacheOnDisc = _BOOL ; return this ; }
28891	public Transaction createTask ( Task task ) { if ( ! mIsSuccess ) { return this ; } long id = mDatabase . insert ( TasksTable . TABLE_NAME , _NULL , task . toContentValues ( ) ) ; if ( id != - _NUM ) { task . id = id ; } else { mIsSuccess = _BOOL ; mDatabase . endTransaction ( ) ; } return this ; }
28915	public static Builder newBuilder ( ) { return new Builder ( ) ; }
28923	public boolean isAcontains ( BitSet H ) { BitSet M = ( ( BitSet ) A . clone ( ) ) ; M . and ( H ) ; return M . cardinality ( ) == H . cardinality ( ) ; }
28949	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
28962	public static void computeAddresses ( PhyloTree tree , Map < Integer , String > id2address , Map < String , Integer > address2id ) { Node root = tree . getRoot ( ) ; if ( root != _NULL ) buildId2AddressRec ( root , _CHAR _CHAR , id2address , address2id ) ; }
28975	public static long readStartFooterSection ( IInputReaderOutputWriter reader ) throws IOException { reader . seek ( reader . length ( ) - _NUM ) ; return reader . readLong ( ) ; }
28981	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
28987	public static < T extends RealFieldElement < T >> T dotProduct ( final FieldVector3D < T > v1 , final FieldVector3D < T > v2 ) { return v1 . dotProduct ( v2 ) ; }
28991	public boolean isAborted ( ) { return state == ABORTED || state == ABORTING ; }
29008	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_PVP_OFF ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29025	public void clear ( ) { processQueue ( ) ; map . clear ( ) ; }
29027	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
29051	public static boolean isAllowed ( Class < ? > typeToCheck , Class < ? > attributeType ) { if ( allowedClassTypeMap . isEmpty ( ) ) { initialise ( ) ; } List < Class < ? >> list = allowedClassTypeMap . get ( attributeType ) ; if ( list == _NULL ) { return _BOOL ; } return list . contains ( typeToCheck ) ; }
29084	final long fn ( long v , long x ) { return v + x ; }
29138	public void calculateSun ( ) { for ( int x = _NUM ; x < Chunk . CHUNK_SIZE ; x ++ ) { calculateSun ( x ) ; } }
29144	public boolean intersects ( Vector3f v1 , Vector3f v2 , Vector3f v3 ) { return Intersection . intersect ( this , v1 , v2 , v3 ) ; }
29166	public void addField ( FieldConfigBase fieldConfig ) { this . fieldList . add ( fieldConfig ) ; }
29219	public static SM_SYSTEM_MESSAGE STR_CANT_USE_ITEM ( DescriptionId value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29241	public void addLanguage ( Integer languageId ) { if ( languageId != _NULL ) { addLanguage ( languageId . toString ( ) ) ; } else { Logger . warn ( this , _CHAR Tried to add languageId Null ! _CHAR ) ; } }
29255	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigSlider copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigSlider ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
29263	public void generate ( ) { messager . printMessage ( Kind . NOTE , String . format ( _CHAR % s . generate ( ) for % s '' , TAG , topLevelPackageString ) ) ; generateAll ( ) ; if ( ! errors . isEmpty ( ) ) { messager . printMessage ( Kind . ERROR , _CHAR Generating injectors failed : _CHAR ) ; for ( String s : errors ) { messager . printMessage ( Kind . ERROR , s ) ; } } }
29324	private void startAnimation ( long time , OverviewAnimationType type , boolean finishImmediately ) { startAnimation ( time , type , TabModel . INVALID_TAB_INDEX , finishImmediately ) ; }
29336	public int hashCode ( ) { return ( int ) ( hash ^ ( hash >> > _NUM ) ) ; }
29344	public boolean isSink ( ) { return this . sinkSource == SinkSource . Sink || this . sinkSource == SinkSource . Both ; }
29345	public static boolean writeJson ( JsonRootNode node , File file ) { return FileUtility . writeToFile ( new StringBuffer ( JSONUtility . jsonToString ( node ) ) , file , _BOOL ) ; }
29360	@ Override public void loadUrl ( final String url , boolean clearNavigationStack ) { webView . loadUrl ( url ) ; }
29381	public static SM_SYSTEM_MESSAGE STR_UI_COMBAT_NPC_RETURN ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( nameId ) ) ; }
29384	public Boolean isDirectDictionary ( ) { return isDirectDictionary ; }
29407	public static Date stringToDate ( String date , String datePattern ) { DateFormat format = new SimpleDateFormat ( datePattern , Locale . ENGLISH ) ; try { return format . parse ( date ) ; } catch ( ParseException e ) { Log . e ( _CHAR _CHAR + e . getMessage ( ) , _CHAR Please check if you have valid pattern ! '' ) ; } return _NULL ; }
29413	public VideoRemoveTagQuery removeTag ( UserActor actor , int tagId , int videoId ) { return new VideoRemoveTagQuery ( getClient ( ) , actor , tagId , videoId ) ; }
29416	protected void notifyAIOnMove ( ) { MovementNotifyTask . getInstance ( ) . add ( getOwner ( ) ) ; }
29422	public static Set < String > convertArrayToSet ( String [ ] array ) { Set < String > resultSet = new HashSet < String > ( array . length ) ; Collections . addAll ( resultSet , array ) ; return resultSet ; }
29439	private Collection < Var > migrateColumnValueAsResource ( Var instance , String columnName , Object columnValue , String tableName ) { if ( columnValue == _NULL ) { return Collections . emptyList ( ) ; } return Collections . singleton ( var ( ) . id ( id ( instance ) ) . has ( namer . resourceName ( tableName , columnName ) , columnValue ) ) ; }
29452	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
29455	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
29460	@ Override public RecordReader createReader ( InputSplit split ) throws IOException , InterruptedException { RecordReader reader = new ListStringRecordReader ( ) ; reader . initialize ( split ) ; return reader ; }
29464	private void startWaveNorthernShieldGenerator1 ( ) { sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR NorthernShieldGenerator1 _CHAR ) ; sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR NorthernShieldGenerator2 _CHAR ) ; sp ( _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , ( byte ) _NUM , _NUM , _CHAR NorthernShieldGenerator3 _CHAR ) ; }
29467	public boolean isInitialIfExistSearchActive ( ) { return _initialIfExistSearchActive ; }
29470	@ Deprecated public Builder cacheOnDisc ( ) { return cacheOnDisk ( _BOOL ) ; }
29514	public void enqueueBlocked ( E o ) { try { this . execute ( new TaskWrapper < E > ( o , _consumerObject ) ) ; } catch ( RejectedExecutionException ree ) { if ( _logger . isLoggable ( Level . INFO ) ) { _logger . log ( Level . INFO , _CHAR Task can not be accepted for execution . '' , ree ) ; } } }
29521	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
29523	@ Override public void render ( SpriteBatch sb ) { for ( UIElement element : elements ) element . render ( sb ) ; }
29535	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { }
29541	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set mode = _CHAR ) ; String mode = np . getLabelRespectCase ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . setMode ( Comparer . COMPARISON_MODE . valueOfIgnoreCase ( mode ) ) ; }
29555	private Stream < Map . Entry < K , V >> entryStream ( ) { return Stream . concat ( delegate . entrySet ( ) . stream ( ) . filter ( _NULL ) , super . entrySet ( ) . stream ( ) ) ; }
29560	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigWindBarbs copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigWindBarbs ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
29584	public void addEntry ( CatchEntry entry ) { entries . addElement ( entry ) ; }
29609	public int writeEncodedArray ( EncodedValue encodedValue ) { int off = data . position ( ) ; write ( encodedValue . data ) ; return off ; }
29613	final public void put ( String name , Object o ) { if ( context == _NULL ) { context = new HashMap < String , Object > ( ) ; } if ( name == _NULL ) { return ; } if ( o == _NULL ) { context . remove ( name ) ; } else { context . put ( name , o ) ; } return ; }
29617	public INDArray asMatrix ( InputStream inputStream ) throws IOException { if ( channels == _NUM ) return toBgr ( inputStream ) ; try { BufferedImage image = ImageIO . read ( inputStream ) ; return asMatrix ( image ) ; } catch ( IOException e ) { throw new IOException ( _CHAR Unable to load image _CHAR , e ) ; } }
29625	@ Override @ Nullable public Object findTemplateSource ( @ NotNull String name ) throws IOException { File file = resolveName ( name ) ; TemplateSource templateSource = TemplateSource . open ( file ) ; pushTemplateFolder ( file . getParentFile ( ) ) ; return templateSource ; }
29652	private static WritableWorkbook openWorkbook ( OutputStream outputStream ) throws IOException { WorkbookSettings ws = new WorkbookSettings ( ) ; ws . setEncoding ( _CHAR UTF - _NUM _CHAR ) ; return Workbook . createWorkbook ( outputStream , ws ) ; }
29655	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { NewFriendDao . dropTable ( db , ifExists ) ; }
29693	public EntireTextBuilder addBackgroundRes ( @ ColorRes int bgColorRes , int start , int end ) { return addBackground ( getColor ( mContext , bgColorRes ) , start , end ) ; }
29709	public void addAddendum ( String word , String partOfSpeech , String [ ] phones ) { String pos = fixPartOfSpeech ( partOfSpeech ) ; if ( ! partsOfSpeech . contains ( pos ) ) { partsOfSpeech . add ( pos ) ; } addenda . put ( word + pos , phones ) ; }
29710	@ NotNull public IdentificationSet identifyPersonInGroup ( @ NotNull String personGroupId , @ NotNull String imageUrl ) { Face singleFace = findSingleFace ( imageUrl ) ; return identifyPersonInGroup ( personGroupId , singleFace ) ; }
29761	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigTTF copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigTTF ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
29770	public int size ( ) { return fDepth ; }
29773	private static void startIntentIfPossible ( Context context , Intent intent ) { if ( isActivityAvailableForIntent ( context , intent ) ) { context . startActivity ( intent ) ; } }
29798	public static void main ( String [ ] args ) { BowlingBall simulation = new BowlingBall ( ) ; simulation . run ( ) ; }
29833	@ SuppressWarnings ( { _CHAR unchecked _CHAR , _CHAR cast _CHAR } ) public TypeDecl lookupType ( String packageName , String typeName ) { ASTNode $ State state = state ( ) ; TypeDecl lookupType_String_String_value = getParent ( ) . Define_TypeDecl_lookupType ( this , _NULL , packageName , typeName ) ; return lookupType_String_String_value ; }
29870	private void unexpectedCommandError ( String command ) { error ( _CHAR command _CHAR is unexpected in this context _CHAR , command ) ; }
29885	public static < T extends Bean > T load ( Bson query , Bson order , T obj ) { String collection = getCollection ( obj . getClass ( ) ) ; if ( collection != _NULL ) { return load ( collection , query , order , obj ) ; } return _NULL ; }
29886	@ Override public void loadSearchImages ( String searchString ) { loadImages ( repository . getSearchResults ( searchString , RiffsyRepository . DEFAULT_LIMIT_COUNT ) ) ; }
29890	public void unFlushNew ( ) { newSet . addAll ( oldSet , _NULL ) ; oldSet = G . v ( ) . oldSetFactory . newSet ( type , pag ) ; }
29895	public void clear ( ) { emptySoftQueue ( ) ; Entry tab [ ] = table ; for ( int i = _NUM ; i < tab . length ; ++ i ) tab [ i ] = _NULL ; size = _NUM ; emptySoftQueue ( ) ; }
29898	public void tabSelected ( long time , int id , int prevId ) { if ( findTabById ( id ) == _NULL ) { tabCreated ( time , id , prevId , _BOOL ) ; } else { updateVisualTabOrdering ( ) ; mUpdateHost . requestUpdate ( ) ; } }
29905	public static SM_SYSTEM_MESSAGE STR_CANT_EQUIP ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29922	public void dataSinkUpdate ( DataSinkEvent evt ) { if ( evt instanceof EndOfStreamEvent ) { synchronized ( waitFileSync ) { fileDone = _BOOL ; waitFileSync . notifyAll ( ) ; } } else if ( evt instanceof DataSinkErrorEvent ) { synchronized ( waitFileSync ) { fileDone = _BOOL ; fileSuccess = _BOOL ; waitFileSync . notifyAll ( ) ; } } }
29937	public static boolean isPackageInstalled ( Context context , String packageName ) { if ( ! TextUtils . isEmpty ( packageName ) ) { try { PackageInfo packageInfo = context . getPackageManager ( ) . getPackageInfo ( packageName , _NUM ) ; return packageInfo != _NULL ; } catch ( PackageManager . NameNotFoundException e ) { } } return _BOOL ; }
29973	public boolean isDebugEnabled ( ) { return this . logger . isDebugEnabled ( ) ; }
29984	public static SM_SYSTEM_MESSAGE STR_GET_EXP2 ( long num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
29986	public static int addExact ( final int a , final int b ) throws MathRuntimeException { final int sum = a + b ; if ( ( a ^ b ) >= _NUM && ( sum ^ b ) < _NUM ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_ADDITION , a , b ) ; } return sum ; }
30005	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigTimePeriod copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigTimePeriod ( fieldConfigBase . getCommonData ( ) ) ; } return copy ; }
30027	public boolean removeOnItemClickListener ( OnItemClickListener itemClickListener ) { return clickListeners . remove ( itemClickListener ) ; }
30041	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set keep1 = _CHAR ) ; boolean value = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . setKeep1 ( value ) ; }
30074	protected void removeChildListeners ( ) { }
30104	@ Deprecated public boolean preferPublic ( ) { return getPreferPublic ( ) ; }
30114	public void invalidateAll ( ) { if ( m_tuples == _NULL ) return ; for ( int i = _NUM ; i < m_tuples . length ; ++ i ) invalidate ( i ) ; }
30116	public void discovered ( DiscoveryEvent event ) { DiscoveryListener l = get ( ) ; if ( l != _NULL ) { l . discovered ( event ) ; } }
30137	public NewsfeedIgnoreItemQuery ignoreItem ( UserActor actor , NewsfeedItemType type , int ownerId , int itemId ) { return new NewsfeedIgnoreItemQuery ( getClient ( ) , actor , type , ownerId , itemId ) ; }
30148	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
30154	private static void rethrowAsProperlyTypedException ( Throwable throwable ) throws IOException , ConfigurationException { if ( throwable != _NULL ) { Throwables . propagateIfPossible ( throwable , IOException . class , ConfigurationException . class ) ; throw new IllegalStateException ( throwable ) ; } }
30191	public boolean isSmoking ( ) { return isSmoking ; }
30212	private static int perturb ( final int hash ) { return hash & _NUM ; }
30240	public static void v ( String c , String s ) { if ( isEnable ( ) ) { if ( s == _NULL ) s = _CHAR \ _CHAR NULL \ _CHAR _CHAR ; Log . v ( c , s ) ; } }
30259	public void init ( ) { n_var = int2var . size ( ) ; for ( int i = _NUM ; i < n_var ; ++ i ) { varGraph . set ( i , _NULL ) ; int2var . get ( i ) . willUpdate = _BOOL ; } }
30261	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
30262	private synchronized void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; }
30273	protected void showIndeterminate ( final CharSequence message ) { dismissProgress ( ) ; progress = new MaterialDialog . Builder ( context ) . content ( message ) . progress ( _BOOL , _NUM ) . build ( ) ; progress . show ( ) ; }
30285	public static NotNullSpacePredicate isNotNull ( ) { return NOT_NULL ; }
30307	@ Override public void end ( ) { currentTest . get ( ) . end ( ) ; }
30313	public int writeAnnotationSet ( AnnotationSet annotationSet ) { int off = data . position ( ) ; writeInt ( annotationSet . annotationOffsets . length ) ; for ( int annotationOffset : annotationSet . annotationOffsets ) { writeInt ( annotationOffset ) ; } return off ; }
30354	private static boolean isAndroidManifestXmlFile ( @ NotNull PsiFile file ) { return file . getName ( ) . equalsIgnoreCase ( SdkConstants . FN_ANDROID_MANIFEST_XML ) ; }
30392	public void onTransactionSynchronization ( TransactionData transactionData ) { }
30423	public void showContent ( List < Integer > skipIds ) { switchState ( CONTENT , _NULL , _NULL , _NULL , _NULL , skipIds ) ; }
30455	@ NotNull public List < Emotion > findEmotionFaces ( @ NotNull String image ) { return emotionBuilder . emotionRecognition ( image ) . withResult ( ) ; }
30466	public INDArray asRowVector ( File f ) throws IOException { return asRowVector ( ImageIO . read ( f ) ) ; }
30474	public static SM_SYSTEM_MESSAGE STR_SKILL_MAINTAIN_SKILL_TURNED_OFF ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
30487	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
30497	public static String stringToBase64 ( final String data ) { return Base64 . encodeBase64String ( ConversionUtils . stringToArray ( data ) ) ; }
30501	private void sendJson ( Json json ) { try { session . getRemote ( ) . sendString ( json . toString ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
30505	protected AdsDeleteAdsQuery ids ( String value ) { return unsafeParam ( _CHAR ids _CHAR , value ) ; }
30518	public void addWatch ( FileWatcherUpdateInterface parent , Path path ) { if ( path != _NULL ) { try { WatchKey key = path . register ( watchService , StandardWatchEventKinds . ENTRY_CREATE , StandardWatchEventKinds . ENTRY_DELETE , StandardWatchEventKinds . ENTRY_MODIFY ) ; watcherMap . put ( key , parent ) ; } catch ( IOException e ) { } } }
30533	protected String millisecondsToYearMonthDay ( long millis ) { return getSimpleDateFormatForMilliseconds ( _CHAR yyyy - MM - dd _CHAR , millis ) ; }
30561	private void initBroadcastReciever ( ) { IntentFilter intentFilter = new IntentFilter ( ) ; intentFilter . addAction ( ACTION_STOP_SELF ) ; registerReceiver ( mBroadcastReciever , intentFilter ) ; }
30568	private < T , S extends ParseTree > T parseQueryFragment ( Function < GraqlParser , S > parseRule , BiFunction < QueryVisitor , S , T > visit , TokenStream tokens ) { GraqlErrorListener errorListener = new GraqlErrorListener ( tokens . getText ( ) ) ; return parseQueryFragment ( parseRule , visit , errorListener , tokens ) ; }
30591	public void remove ( final int position ) { data . remove ( position ) ; notifyItemRemoved ( position ) ; }
30601	@ Deprecated public Builder cacheOnDisc ( ) { return cacheOnDisk ( _BOOL ) ; }
30644	public void removeWord ( String sWord ) { removeWord ( sWord , RemoveSubStrings ) ; }
30646	@ Override public void onFailure ( IMqttToken asyncActionToken , Throwable exception ) { exception . printStackTrace ( ) ; Log . e ( _CHAR TrafficService _CHAR , _CHAR Error connecting : _CHAR + exception . getMessage ( ) ) ; onDisconnect ( _BOOL ) ; }
30650	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getMateNegativeStrandFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getMateNegativeStrandFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
30662	public double pace ( double f ) { return ( f == _NUM . _NUM || f == _NUM . _NUM ? f : sigmoid ( f ) ) ; }
30681	public static void createAllTables ( Database db , boolean ifNotExists ) { NewsDao . createTable ( db , ifNotExists ) ; ThemeListDao . createTable ( db , ifNotExists ) ; }
30688	public FaveAddUserQuery addUser ( UserActor actor , int userId ) { return new FaveAddUserQuery ( getClient ( ) , actor , userId ) ; }
30690	public Race race ( Task ... tasks ) { return new Race ( this . executor_ , tasks ) ; }
30701	public void removeAllLimitLines ( ) { mLimitLines . clear ( ) ; }
30703	public void addSink ( Set < SourceSinkDefinition > sinks ) { for ( SourceSinkDefinition am : sinks ) this . sinkMethods . put ( am . getMethod ( ) . getSignature ( ) , am ) ; }
30720	public void start ( Context context , Fragment fragment ) { start ( context , fragment , REQUEST_CROP ) ; }
30725	public void createOutFile ( String filePath ) throws IOException { this . outFile = new ExifInterface ( filePath ) ; }
30773	static void removeTextChangedListener ( TextView textView , TextWatcher watcher ) { textView . removeTextChangedListener ( watcher ) ; }
30819	public static PartnerBookmarksProviderIterator createIfAvailable ( ContentResolver contentResolver ) { Cursor cursor = contentResolver . query ( BOOKMARKS_CONTENT_URI , BOOKMARKS_PROJECTION , _NULL , _NULL , BOOKMARKS_SORT_ORDER ) ; if ( cursor == _NULL ) return _NULL ; return new PartnerBookmarksProviderIterator ( cursor ) ; }
30840	public static < T > T make ( Class < T > shieldClass , RxJava1Hub rxJava1Hub ) { return inst . make ( shieldClass , rxJava1Hub , RxJava1Hub . class ) ; }
30848	private float parseFloat ( String par1Str ) { return par1Str . equals ( _CHAR _BOOL _CHAR ) ? _NUM . _NUM : ( par1Str . equals ( _CHAR _BOOL _CHAR ) ? _NUM . _NUM : Float . parseFloat ( par1Str ) ) ; }
30851	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . setVisible ( _BOOL ) ; }
30858	@ Override public void flush ( ) { }
30872	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
30896	public FeatureFlag forName ( String name ) throws BadApiRequestException { FeatureFlag flag = NAMES_TO_VALUES . get ( name . toUpperCase ( Locale . ENGLISH ) ) ; return flag != _NULL ? flag : Utils . < FeatureFlag > insteadThrowRuntime ( new BadApiRequestException ( _CHAR Invalid feature flag : _CHAR + name ) ) ; }
30941	public DistributedLogNamespaceBuilder clientId ( String clientId ) { this . _clientId = clientId ; return this ; }
30945	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
30948	@ Override public Object asJavaVal ( ) { return val ; }
30997	public void deleteLegionMember ( int playerObjId ) { legionMembers . remove ( new Integer ( playerObjId ) ) ; }
31006	@ Override public void startAttlist ( String elementName , Augmentations augs ) throws XNIException { }
31018	@ Override public void onMapLongClick ( @ NonNull LatLng point ) { AirMap . createFlight ( this , REQUEST_FLIGHT , getCoordinateFromLatLng ( point ) , _NULL ) ; }
31028	public MyDialog outInterpolator ( Interpolator interpolator ) { mOutInterpolator = interpolator ; return this ; }
31038	private int klattRule8 ( Element segment ) { Element syllable = getSyllable ( segment ) ; if ( hasAccent ( syllable ) ) { if ( isInNucleus ( segment ) ) { return getPropertyAsInteger ( _CHAR rule8 . accent _CHAR ) ; } } return _NUM ; }
31078	public boolean isGameRunning ( ) { return isGameRunning ; }
31105	public static IntellijLintClient forBatch ( @ NotNull Project project , @ NotNull Map < Issue , Map < File , List < ProblemData >> > problemMap , @ NotNull AnalysisScope scope , @ NotNull List < Issue > issues ) { return new BatchLintClient ( project , problemMap , scope , issues ) ; }
31110	@ Override public final void writePos ( final Point s ) { writeShort ( s . x ) ; writeShort ( s . y ) ; }
31118	public static Boolean isDictionaryFile ( CarbonFile carbonFile ) { return ( ! carbonFile . isDirectory ( ) ) && ( carbonFile . getName ( ) . endsWith ( DICTIONARY_EXT ) ) ; }
31121	public void removeListener ( CacheListener < K , V > listener ) { listeners . remove ( listener ) ; }
31125	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
31146	@ Override public void startExternalSubset ( XMLResourceIdentifier identifier , Augmentations augmentations ) throws XNIException { }
31149	public ModelKeyMap findKeyMapByRelated ( String relFieldName ) { for ( ModelKeyMap keyMap : keyMaps ) { if ( keyMap . getRelFieldName ( ) . equals ( relFieldName ) ) return keyMap ; } return _NULL ; }
31158	public static int addEntryType ( String name , int numArgs ) { entryTypes . put ( name , new Integer ( nextEntry ) ) ; entryArgs . add ( nextEntry , new Integer ( numArgs ) ) ; nextEntry ++ ; return nextEntry - _NUM ; }
31171	public Z Minus ( Z a ) { re =- a . re ; im =- a . im ; return this ; }
31176	public PhotosEditAlbumQuery editAlbum ( UserActor actor , int albumId ) { return new PhotosEditAlbumQuery ( getClient ( ) , actor , albumId ) ; }
31186	public static String nullToBlank ( final String string ) { return string == _NULL ? BLANK : string ; }
31202	public String toString ( ) { return ( mbrolaVoice . toString ( ) + _CHAR Validator _CHAR ) ; }
31263	@ Override public int hashCode ( ) { return _NUM + ( isZero ( ) ? _NUM : ( sign << _NUM ) ) + ( nans << _NUM ) + exp + Arrays . hashCode ( mant ) ; }
31274	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { FriendDao . createTable ( db , ifNotExists ) ; GroupsDao . createTable ( db , ifNotExists ) ; BlackListDao . createTable ( db , ifNotExists ) ; GroupMemberDao . createTable ( db , ifNotExists ) ; }
31284	public static List split ( String s ) { return ( split ( s , _CHAR \\ s + _CHAR ) ) ; }
31292	@ Deprecated public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
31298	public boolean oneofScoped ( ) { return oneof != _NULL ; }
31322	public VideoGetCommentsQuery needLikes ( Boolean value ) { return unsafeParam ( _CHAR need_likes _CHAR , value ) ; }
31327	public static Configuration createCommandTag ( ) { Configuration configuration = new Configuration ( ) ; CommandTag commandTag = CommandTag . create ( _CHAR CommandTag _CHAR , Integer . class , new SimpleHardwareAddressImpl ( _CHAR testAddress _CHAR ) , _NUM , _NUM , _NUM , _NUM , _CHAR RBAC class _CHAR , _CHAR RBAC device _CHAR , _CHAR RBAC property _CHAR ) . id ( _NUM ) . equipmentId ( _NUM ) . build ( ) ; configuration . addEntity ( commandTag ) ; return configuration ; }
31351	private Metrics createMetricsByDimension ( ObjectName objectName ) { Map < String , String > dimensionMap = Maps . newHashMap ( ) ; dimensionMap . put ( _CHAR MBean _CHAR , objectName . toString ( ) ) ; return Metrics . create ( dimensionMap ) ; }
31358	@ Override public void flush ( ) { }
31394	public static void showToast ( Context context , int resourceId ) { Toast . makeText ( context , context . getString ( resourceId ) , Toast . LENGTH_LONG ) . show ( ) ; }
31419	public boolean isDead ( ) { if ( nodeState == ZWaveNodeState . DEAD || nodeState == ZWaveNodeState . FAILED ) { return _BOOL ; } else { return _BOOL ; } }
31426	public static void xml ( String xml ) { Logger . xml ( xml ) ; }
31474	private void checkConfiguration ( ) { if ( configuration == _NULL ) { throw new IllegalStateException ( ERROR_NOT_INIT ) ; } }
31489	private void recordUserActionDuringTabRestore ( int action ) { assert action >= _NUM && action < USER_ACTION_DURING_RESTORE_MAX ; RecordHistogram . recordEnumeratedHistogram ( _CHAR Tab . RestoreUserPersistence _CHAR , action , USER_ACTION_DURING_RESTORE_MAX ) ; }
31497	@ Override public Object asJavaVal ( ) { return val ; }
31504	public FaveAddLinkQuery addLink ( UserActor actor , String link ) { return new FaveAddLinkQuery ( getClient ( ) , actor , link ) ; }
31507	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
31521	public boolean isDimensional ( ) { return ! getDataElements ( ) . isEmpty ( ) && ( columnDimensions . contains ( CATEGORYOPTIONCOMBO_DIM_ID ) || rowDimensions . contains ( CATEGORYOPTIONCOMBO_DIM_ID ) ) ; }
31546	public static Predicate < ItemStack > matcherOf ( ItemStack value ) { return matcherOf ( value , _BOOL ) ; }
31552	public void addAll ( Collection < FeatureFlag > featureFlags ) { featureFlags . stream ( ) . forEach ( _NULL ) ; }
31564	public void put ( final CharSequence key , final Object value ) { this . additionalData . put ( key , value ) ; }
31573	public boolean isEmpty ( ) { return size ( ) == _NUM ; }
31594	public final boolean isOverridingTarget ( ) { return ( myOverride & CFG_TARGET ) != _NUM ; }
31614	@ Deprecated public boolean isReverseOrder ( ) { return mIsReversed ; }
31618	public void apply ( NexusStreamParser np ) throws Exception { }
31637	protected TabDelegate createTabDelegate ( boolean incognito ) { return new TabDelegate ( incognito ) ; }
31650	private void attachReaderToCatalog ( Catalog catalog ) { SAXParserFactory spf = new SAXParserFactoryImpl ( ) ; spf . setNamespaceAware ( _BOOL ) ; spf . setValidating ( _BOOL ) ; SAXCatalogReader saxReader = new SAXCatalogReader ( spf ) ; saxReader . setCatalogParser ( OASISXMLCatalogReader . namespaceName , _CHAR catalog _CHAR , _CHAR org . apache . xml . resolver . readers . OASISXMLCatalogReader _CHAR ) ; catalog . addReader ( _CHAR application / xml _CHAR , saxReader ) ; }
31683	public static ArrayList < Integer > convertStringArrayToIntegerArray ( List < String > arrayList ) { ArrayList < Integer > integers = new ArrayList < > ( ) ; for ( String str : arrayList ) { integers . add ( Integer . valueOf ( str ) ) ; } return integers ; }
31686	public PhotosGetAllCommentsQuery needLikes ( Boolean value ) { return unsafeParam ( _CHAR need_likes _CHAR , value ) ; }
31700	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { NewFriendDao . createTable ( db , ifNotExists ) ; }
31715	public static int incrementExact ( final int n ) throws MathRuntimeException { if ( n == Integer . MAX_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_ADDITION , n , _NUM ) ; } return n + _NUM ; }
31720	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
31726	public void notify ( RemoteEvent event ) throws UnknownEventException , RemoteException { RemoteEventListener l = get ( ) ; if ( l != _NULL ) { l . notify ( event ) ; } }
31738	public void exitFullScreen ( ) { View decorView = mContext . getWindow ( ) . getDecorView ( ) ; showSystemUI ( decorView ) ; for ( View view : views ) { view . setVisibility ( View . VISIBLE ) ; view . invalidate ( ) ; } }
31756	public final boolean decrypt ( ByteBuffer buf ) { if ( ! isEnabled ) { log . debug ( _CHAR if encryption was n ' t enabled , then maybe it ' s client reconnection , so skip packet _CHAR ) ; return _BOOL ; } return packetKey . decrypt ( buf ) ; }
31778	public static SM_SYSTEM_MESSAGE STR_BUY_SELL_HE_DOES_NOT_SELL_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31793	public MyDialog inInterpolator ( Interpolator interpolator ) { mInInterpolator = interpolator ; return this ; }
31802	public static void clear ( EntityPlayer player ) { SimpleCoord at = new SimpleCoord ( player . worldObj , new BlockPos ( player ) ) ; NotifyImplementation . instance . doSend ( player , at , player . worldObj , EnumSet . of ( Style . CLEAR ) , _NULL , _CHAR _CHAR , emptyStringArray ) ; }
31880	public Location subtract ( Vector vec ) { this . x -= vec . getX ( ) ; this . y -= vec . getY ( ) ; this . z -= vec . getZ ( ) ; return this ; }
31894	public ContentletQuery addHost ( String hostIdentifier ) { query . append ( _CHAR + conhost : _CHAR + hostIdentifier ) ; return this ; }
31905	public AppsGetFriendsListQuery fields ( List < EnumParam > value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
31909	public VideoGetCommentsQueryWithExtended needLikes ( Boolean value ) { return unsafeParam ( _CHAR need_likes _CHAR , value ) ; }
31914	public static int byteToUInt ( byte b ) { return b & _NUM ; }
31918	public UnrevealBuilder withCurvedTranslation ( final PointF curveControlPoint ) { this . mCurveControlPoint = curveControlPoint ; return this . withCurvedTranslation ( ) ; }
31919	public String toString ( ) { return _CHAR PostLexicalAnalyzer _CHAR ; }
31951	@ Override public void ignoredCharacters ( XMLString text , Augmentations augs ) throws XNIException { }
31961	public static SpawnTemplate addNewSingleTimeSpawn ( int worldId , int npcId , float x , float y , float z , byte heading ) { return addNewSpawn ( worldId , npcId , x , y , z , heading , _NUM ) ; }
31970	public Builder bitmapTransformerFactory ( @ Nullable BitmapTransformer . Factory bitmapTransformerFactory ) { this . bitmapTransformerFactory = bitmapTransformerFactory ; return this ; }
31990	public void onMove ( ) { notifyAIOnMove ( ) ; updateZone ( ) ; }
32002	@ Override public void write ( LogRecord record ) throws IOException { getLedgerWriter ( record . getTransactionId ( ) , _BOOL ) . write ( record ) ; }
32004	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigString copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigString ( fieldConfigBase . getCommonData ( ) , this . buttonText ) ; } return copy ; }
32023	private static Entry findLeaseFromIterator ( Iterator < Entry > iter , Lease lease ) { while ( iter . hasNext ( ) ) { Entry e = iter . next ( ) ; if ( e . lease . equals ( lease ) ) return e ; } return _NULL ; }
32037	public void removeCycles ( ) { if ( myHorizontalCycle != _NULL ) { removeCycles ( myHorizontalDeps ) ; } if ( myVerticalCycle != _NULL ) { removeCycles ( myVerticalDeps ) ; } }
32048	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; if ( inspectorWindow . getDataTree ( ) . getSelectionCount ( ) == _NUM ) inspectorWindow . clear ( ) ; else inspectorWindow . deleteSelectedNodes ( ) ; }
32068	@ Override public void apply ( NexusStreamParser np ) throws Exception { }
32088	public static InputStream find ( String filename , ZipFile zip ) throws IOException { ZipEntry e = zip . getEntry ( filename ) ; if ( e != _NULL ) { return zip . getInputStream ( e ) ; } return _NULL ; }
32105	public void removeDataSource ( DataSource removed ) { unregisterDataSource ( removed ) ; }
32108	private void refresh ( ) { isLoadingData = _BOOL ; isLoadingMoreData = _BOOL ; mOnRefreshListener . onRefresh ( ) ; }
32112	public void loadSavedApi ( ) { String savedApiLevel = PropertiesComponent . getInstance ( ) . getValue ( FormFactorUtils . getPropertiesComponentMinSdkKey ( myFormFactor ) , Integer . toString ( myFormFactor . defaultApi ) ) ; setSelectedApiLevel ( savedApiLevel ) ; if ( getSelectedIndex ( ) < _NUM && getItemCount ( ) > _NUM ) { setSelectedIndex ( _NUM ) ; } }
32115	public boolean canFindAll ( ) { return _BOOL ; }
32116	public byte [ ] decryptViaKek ( byte [ ] content ) { return cryptoViaKek ( content , Cipher . DECRYPT_MODE ) ; }
32158	public void put ( String key , T value ) { internalMap . put ( key , value ) ; }
32183	public MyDialog inDuration ( int duration ) { mInDuration = duration ; return this ; }
32198	public WallSearchQuery ownersOnly ( Boolean value ) { return unsafeParam ( _CHAR owners_only _CHAR , value ) ; }
32220	public ErrorHandler skipDefaults ( ) { if ( localContext != _NULL ) { localContext . get ( ) . skipDefaults = _BOOL ; } return this ; }
32227	public static SM_SYSTEM_MESSAGE STR_FORCE_HE_ENTERED_FORCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32265	public DatabaseGetCountriesQuery needAll ( Boolean value ) { return unsafeParam ( _CHAR need_all _CHAR , value ) ; }
32273	public static SM_SYSTEM_MESSAGE STR_MSG_Recall_Reject_EFFECT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32285	public static void createAircraft ( AirMapAircraft aircraft , AirMapCallback < AirMapAircraft > listener ) { String url = String . format ( pilotAircraftUrl , AirMap . getUserId ( ) ) ; AirMap . getClient ( ) . post ( url , aircraft . getAsParamsPost ( ) , new GenericOkHttpCallback ( listener , AirMapAircraft . class ) ) ; }
32290	public void broadCastEffectsImp ( ) { List < Effect > effects = getAbnormalEffects ( ) ; PacketSendUtility . broadcastPacket ( getOwner ( ) , new SM_ABNORMAL_EFFECT ( getOwner ( ) , abnormals , effects ) ) ; }
32306	@ Override public ListenableFuture < MemberAddResponse > addMember ( List < String > endpoints ) { MemberAddRequest memberAddRequest = MemberAddRequest . newBuilder ( ) . addAllPeerURLs ( endpoints ) . build ( ) ; return clusterStub . memberAdd ( memberAddRequest ) ; }
32315	private final boolean peekReportEntity ( ) { return fPEReport [ fPEDepth - _NUM ] ; }
32322	public static boolean equals ( @ NonNull final Class first , @ NonNull final Class second ) { return first . getCanonicalName ( ) . equals ( second . getCanonicalName ( ) ) ; }
32325	public static String execute ( String command ) { return execute ( command , _NULL ) ; }
32335	public IStoredListIterator < T > next ( IStoredListIterator < T > slh ) { IStoredListIterator < T > slnext = nextPos ( ( SegmentedListIterator < T > ) slh ) ; if ( slnext == _NULL ) slh . release ( ) ; return slnext ; }
32364	private void scan ( ) { for ( Field field : target . getClass ( ) . getDeclaredFields ( ) ) { for ( AbstractAnnotationManager manager : managers ) if ( manager . canManage ( field ) ) manager . scanned ( field ) ; } }
32445	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set show - insertions = _CHAR ) ; boolean show = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . setShowInsertions ( show ) ; }
32452	public static Map < String , Object > conditionFalseService ( DispatchContext dctx , Map < String , ? > context ) { Map < String , Object > result = ServiceUtil . returnSuccess ( ) ; result . put ( _CHAR conditionReply _CHAR , Boolean . FALSE ) ; return result ; }
32453	public static void updatePhoneNumber ( String phoneNumber , @ Nullable AirMapCallback < Void > callback ) { PilotService . updatePhoneNumber ( phoneNumber , callback ) ; }
32455	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_DODGE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32464	public AdsDeleteClientsQuery deleteClients ( UserActor actor , int accountId , String ids ) { return new AdsDeleteClientsQuery ( getClient ( ) , actor , accountId , ids ) ; }
32497	public boolean removeCursor ( MapCursor cursor ) { return cursors . remove ( cursor ) ; }
32499	public void showLoading ( List < Integer > skipIds ) { switchState ( LOADING , _NULL , _NULL , _NULL , _NULL , _NULL , skipIds ) ; }
32515	public static LikesAttributesImpl copy ( @ Nullable LikesAttributesImpl likesAttributes ) { if ( likesAttributes == _NULL ) { return empty ( ) ; } return new LikesAttributesImpl ( likesAttributes ) ; }
32516	public static SetSpawn handle ( World world , BlockPos spawnPoint ) { SetSpawn event = new SetSpawn ( world , spawnPoint ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
32517	public void incrementValue ( int v , long increment ) { incrementValue ( Long . valueOf ( v ) , increment ) ; }
32534	@ NotNull public ImageOverlayBuilder ocrImage ( @ NotNull OCRResult ocrResult ) { ocrResult . regions . forEach ( _NULL ) ; return this ; }
32540	public void addSubFilter ( SubFilter subFilter ) { subFilters . add ( subFilter ) ; }
32587	public void notifyRequestDialogObservers ( Npc npc ) { notifyObservers ( ObserverType . NPCDIALOGREQUEST , npc ) ; }
32602	@ Override public final void write ( final byte b ) { bos . writeByte ( b ) ; }
32614	private boolean isValid ( GSMessageImpl message ) throws JMSException { long ttl = message . getJMSExpiration ( ) ; return ( ttl == Message . DEFAULT_TIME_TO_LIVE ) || ( ttl - SystemTime . timeMillis ( ) >= _NUM ) ; }
32648	public void move ( float delta ) { }
32651	public static SparseGradient createVariable ( final int idx , final double value ) { return new SparseGradient ( value , Collections . singletonMap ( idx , _NUM . _NUM ) ) ; }
32681	public UsersGetNearbyQuery fields ( List < UserField > value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
32701	public static final SM_SYSTEM_MESSAGE STR_ITEM_CANCELED ( DescriptionId id ) { return new SM_SYSTEM_MESSAGE ( _NUM , id ) ; }
32713	public FieldVector3D < T > subtract ( final FieldVector3D < T > v ) { return new FieldVector3D < T > ( x . subtract ( v . x ) , y . subtract ( v . y ) , z . subtract ( v . z ) ) ; }
32716	public static void install ( Context context , String filename ) { install ( context , BIN_DIR_NAME , filename ) ; }
32727	public QueryTemplatePacket and ( QueryTemplatePacket template ) { QueryTemplatePacket result = new QueryTemplatePacket ( this ) ; result . intersectRanges ( template ) ; result . intersectUids ( template ) ; result . uniteContainsItems ( template ) ; return result ; }
32768	public boolean isMinIsZero ( ) { return minIsZero ; }
32780	@ Override public int read ( byte bytes [ ] , int offset , int length ) throws IOException { int r ; if ( ( r = in . read ( bytes , offset , length ) ) == - _NUM ) return r ; md5 . Update ( bytes , offset , r ) ; return r ; }
32803	public String globalInfo ( ) { return _CHAR InfoGainAttributeEval : \ n \ nEvaluates the worth of an attribute _CHAR + _CHAR by measuring the information gain with respect to the class .\ n \ n _CHAR + _CHAR InfoGain ( Class , Attribute ) = H ( Class ) - H ( Class | Attribute ) .\ n _CHAR ; }
32816	@ VisibleForTesting public DistributedLogClientBuilder routingService ( RoutingService routingService ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _routingServiceBuilder = RoutingUtils . buildRoutingService ( routingService ) ; newBuilder . _enableRegionStats = _BOOL ; return newBuilder ; }
32844	public GaussianCurveFitter withMaxIterations ( int newMaxIter ) { return new GaussianCurveFitter ( initialGuess , newMaxIter ) ; }
32859	public static String toTree ( @ NotNull List < NlComponent > roots ) { return toTree ( roots , _BOOL ) ; }
32876	public FaveAddGroupQuery addGroup ( UserActor actor , int groupId ) { return new FaveAddGroupQuery ( getClient ( ) , actor , groupId ) ; }
32891	private void deleteLegionFromDB ( Legion legion ) { this . allCachedLegions . remove ( legion ) ; DAOManager . getDAO ( LegionDAO . class ) . deleteLegion ( legion . getLegionId ( ) ) ; }
32899	public static SM_SYSTEM_MESSAGE STR_MSG_GET_ITEM_PARTYNOTICE ( String value0 , DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , descriptionId ) ; }
32904	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . setCanceled ( _BOOL ) ; viewer . setVisible ( _BOOL ) ; }
32906	public static void initOrBuild ( Project project ) { if ( hadInitFreeline ( project ) ) { build ( project ) ; } else { initFree ( project ) ; } }
32950	public void skip ( int n ) throws IOException { dis . skip ( n ) ; }
32967	protected final void registerDataSource ( DataSource added ) { registerDataSources ( Collections . singleton ( added ) ) ; }
32969	private void updateExhaustionWithTime ( EntityPlayer player ) { ++ this . exhaustionTimer ; if ( this . exhaustionTimer >= EXHAUSTION_WITH_TIME_PERIOD ) { if ( ! player . capabilities . disableDamage ) { this . addExhaustion ( EXHAUSTION_WITH_TIME_AMOUNT ) ; } this . exhaustionTimer = _NUM ; } }
32970	public Matrix zoom ( float scaleX , float scaleY ) { Matrix save = new Matrix ( ) ; zoom ( scaleX , scaleY , save ) ; return save ; }
32976	@ Override protected FieldConfigBase createCopy ( FieldConfigBase fieldConfigBase ) { FieldConfigMarker copy = _NULL ; if ( fieldConfigBase != _NULL ) { copy = new FieldConfigMarker ( fieldConfigBase . getCommonData ( ) , this . fillFieldConfig , this . strokeFieldConfig , this . symbolSelectionField ) ; } return copy ; }
32995	public FieldSelector add ( Field field ) { return new FieldSelector ( ImmutableList . < Field > builder ( ) . addAll ( fields ) . add ( field ) . build ( ) ) ; }
32996	@ Override public void remove ( String ... identifiers ) { whitelist . removeAll ( Arrays . asList ( identifiers ) ) ; }
33027	public boolean beginHrefExceptionDisplay ( ChildDisplayEvent event ) { return _BOOL ; }
33057	protected Rectangle applyPaddings ( Rectangle rect , float [ ] paddings , boolean reverse ) { return rect . < Rectangle > applyMargins ( paddings [ _NUM ] , paddings [ _NUM ] , paddings [ _NUM ] , paddings [ _NUM ] , reverse ) ; }
33087	public static StorageStatus unusable ( LocalizableMessage reason ) { return new StorageStatus ( Code . UNUSABLE , reason ) ; }
33095	public int size ( ) { return m_firstFree ; }
33105	public void destroyToken ( SSOToken destroyer , SSOToken destroyed ) throws SSOException { try { Session requester = ( ( SSOTokenImpl ) destroyer ) . getSession ( ) ; Session target = ( ( SSOTokenImpl ) destroyed ) . getSession ( ) ; requester . destroySession ( target ) ; } catch ( SessionException e ) { throw new SSOException ( e ) ; } }
33115	public void paintSeparatorForeground ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintForeground ( context , g , x , y , w , h , orientation ) ; }
33120	public void fireGenerateEvent ( int eventType , String name , Attributes atts ) { }
33123	private boolean isClosed ( ) { return out == _NULL ; }
33126	public void scrollToFinishActivity ( ) { final int childWidth = mContentView . getWidth ( ) ; int left = _NUM , top = _NUM ; left = childWidth + mShadowLeft . getIntrinsicWidth ( ) + OVERSCROLL_DISTANCE ; mDragHelper . smoothSlideViewTo ( mContentView , left , top ) ; invalidate ( ) ; }
33129	public double num ( ) { return m_val ; }
33132	public String toString ( ) { return ( ss . toString ( ) ) ; }
33156	@ Nullable private P retrievePresenterFromExistingLoader ( PresenterRetainLoader loader , Class < ? extends P > presenterClazz ) { Object presenter = loader . getPresenter ( ) ; if ( presenterClazz . isInstance ( presenter ) ) { return presenterClazz . cast ( presenter ) ; } else { return _NULL ; } }
33166	@ Override public int hashCode ( ) { return dateTime . hashCode ( ) ^ offset . hashCode ( ) ; }
33170	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
33212	public void paintSliderBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
33250	public void paintButtonBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
33257	@ Override public CancelResult cancelOperation ( int messageID , CancelRequest cancelRequest ) { return new CancelResult ( ResultCode . CANNOT_CANCEL , LocalizableMessage . raw ( _CHAR Jmx operations can not be cancelled _CHAR ) ) ; }
33307	public int read ( ) throws IOException { if ( closed ) { throw new IOException ( _CHAR Attempted read from closed stream . '' ) ; } if ( pos >= contentLength ) { return - _NUM ; } pos ++ ; return this . in . read ( ) ; }
33353	public Builder names ( final String ... names ) { return names ( asList ( names ) ) ; }
33386	public static String before ( String self , String pattern ) { Matcher matcher = compile ( pattern , CASE_INSENSITIVE | UNICODE_CHARACTER_CLASS ) . matcher ( self ) ; return matcher . find ( ) ? self . substring ( _NUM , matcher . start ( ) ) . trim ( ) : self ; }
33431	public boolean isCheckExists ( ) { return checkExists ; }
33437	public void register ( VirtualAttributeRule rule ) { rules . put ( getDummyDN ( rule ) , rule ) ; }
33438	public JSONObject toJSONObject ( ) throws JSONException { JSONObject jo = new JSONObject ( ) ; jo . put ( _CHAR id _CHAR , id ) ; jo . put ( _CHAR value _CHAR , value ) ; if ( exclusive ) { jo . put ( _CHAR exclusive _CHAR , exclusive ) ; } return jo ; }
33455	public String toString ( ) { return _CHAR NamedStyle : _CHAR + getName ( ) + _CHAR _CHAR + attributes ; }
33464	public void paintSeparatorForeground ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { }
33511	public boolean writeEntry ( Entry entry ) throws IOException , LDIFException { ifNull ( entry ) ; return entry . toLDIF ( exportConfig ) ; }
33512	public static boolean isTerminationCancelled ( HttpServletRequest request ) { String status = request . getParameter ( IFSConstants . TERMINATION_STATUS ) ; if ( status != _NULL && status . equalsIgnoreCase ( IFSConstants . CANCEL ) ) { return _BOOL ; } else { return _BOOL ; } }
33546	public String toString ( ) { return _CHAR java . util . ServiceLoader [ _CHAR + service . getName ( ) + _CHAR ] _CHAR ; }
33580	public int size ( ) { return m_firstFree ; }
33592	public String encode ( ) { return headerName + COLON + SP + encodeBody ( ) + NEWLINE ; }
33614	@ Override public boolean isMutable ( ) { return isMutable ; }
33667	public void paintListBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
33707	public static void serverFailed ( String serviceName ) { if ( validRemoteURL == _NULL ) { if ( debug . warningEnabled ( ) ) { debug . warning ( _CHAR JAXRPCHelper : No valid server found _CHAR ) ; } serverFailed = _BOOL ; } else if ( serviceName . startsWith ( validRemoteURL ) ) { serverFailed = _BOOL ; } }
33723	public void paintListBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
33740	@ Override public void write ( String str ) throws IOException { out . write ( str ) ; }
33743	@ NonNull public static < T > Put < T > put ( @ NonNull String key , @ NonNull T object ) { failIfNotInitialized ( ) ; return new Put < > ( key , object ) ; }
33751	private void whenCommitReturnFalse ( LoginModule ... modules ) throws LoginException { for ( LoginModule module : modules ) { when ( module . commit ( ) ) . thenReturn ( _BOOL ) ; } }
33764	static public void assertEquals ( String expected , String actual ) { assertEquals ( _NULL , expected , actual ) ; }
33774	public T message ( String message ) { jsonValue . put ( MESSAGE , message ) ; return self ( ) ; }
33775	public void prepend ( String s ) { content = s + content ; }
33794	public void removePluginConfig ( String name , String pluginSchemaName , String interfaceName , String orgName ) throws SMSException , SSOException { PluginConfig pci = getPluginConfig ( name , pluginSchemaName , interfaceName , orgName ) ; if ( pci != _NULL ) { pci . delete ( ) ; } }
33796	public static Date parseDate ( String d ) { try { return new SimpleDateFormat ( DATE_FORMAT ) . parse ( d ) ; } catch ( Exception e ) { } return _NULL ; }
33868	public boolean isSpinning ( ) { return isSpinning ; }
33902	public boolean isSiteUp ( String siteId ) { try { return getClusterMonitor ( ) . isSiteUp ( siteId ) ; } catch ( SessionException e ) { sessionDebug . error ( _CHAR Failed to check isSiteUp for { _NUM } _CHAR , siteId , e ) ; return _BOOL ; } }
33905	@ Override public boolean isEmpty ( ) { return size == _NUM ; }
33909	public boolean isMutable ( ) { return isMutable ; }
33928	public final Signum negate ( ) { if ( this == POSITIVE ) { return NEGATIVE ; } else if ( this == NEGATIVE ) { return POSITIVE ; } else { return this ; } }
33943	@ Override public PdfFormXObject createFormXObject ( Color foreground , PdfDocument document ) { return createFormXObject ( foreground , DEFAULT_MODULE_SIZE , document ) ; }
33946	public final void lazySet ( int newValue ) { unsafe . putOrderedInt ( this , valueOffset , newValue ) ; }
33987	public void onUsers ( @ NotNull List < TLAbsUser > users ) { if ( ( this . temporalUsers . size ( ) + users . size ( ) ) > MAXTEMPORALUSERS ) { this . temporalUsers . clear ( ) ; } users . stream ( ) . forEach ( _NULL ) ; users . forEach ( _NULL ) ; }
34010	@ Override public String toString ( ) { return name ; }
34022	public void resume ( ) { setPaused ( _BOOL ) ; }
34054	public static Object createToken ( String name , String password ) { return tokenProvider . createToken ( name , password ) ; }
34056	public void save ( ) { if ( ! state . isSaved ( ) ) { state . setSaved ( updateStateEntry ( ) ) ; } }
34062	public final void lazySet ( boolean newValue ) { int v = newValue ? _NUM : _NUM ; unsafe . putOrderedInt ( this , valueOffset , v ) ; }
34082	public static ValidatingUnmarshaller create ( Grammar grammar , SAXUnmarshallerHandler _core , Locator locator ) { Verifier v = new Verifier ( new REDocumentDeclaration ( grammar ) , new ErrorHandlerAdaptor ( _core , locator ) ) ; v . setPanicMode ( _BOOL ) ; return new ValidatingUnmarshaller ( new VerifierFilter ( v ) , _core ) ; }
34083	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
34091	public void paintTreeBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
34092	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { UrlCollectDao . dropTable ( db , ifExists ) ; CustomerDao . dropTable ( db , ifExists ) ; OrderDao . dropTable ( db , ifExists ) ; }
34093	public boolean isSecure ( ) { return _BOOL ; }
34096	public boolean isMutable ( ) { return isMutable ; }
34101	static void selfInterrupt ( ) { Thread . currentThread ( ) . interrupt ( ) ; }
34103	public void mouseExited ( MouseEvent e ) { hasMouseOver = _BOOL ; repaint ( ) ; }
34145	public void removeSchemaElementSelectionListener ( SchemaElementSelectionListener listener ) { for ( SchemaElementPanel panel : panels ) { panel . removeSchemaElementSelectionListener ( listener ) ; } }
34153	public boolean isMutable ( ) { return isMutable ; }
34166	public synchronized void removeObject ( NSObject obj ) { set . remove ( obj ) ; }
34168	public static ComponentUI createUI ( JComponent c ) { return new SynthTextPaneUI ( ) ; }
34202	@ Override public void close ( ) throws IOException { OutputStream output = m_streams . get ( ) ; if ( _NULL != output ) { output . close ( ) ; } }
34214	public void appendToFsb ( org . apache . xml . utils . FastStringBuffer fsb ) { XString xstring = ( XString ) xstr ( ) ; xstring . appendToFsb ( fsb ) ; }
34241	private void uninstallDefaults ( ) { }
34305	@ Override public void end ( String namespace , String name ) throws Exception { digester . pop ( ) ; }
34326	public javax . sip . address . Address createAddress ( ) { return new AddressImpl ( ) ; }
34339	@ Override public String toString ( ) { return content ; }
34353	public void paintLabelBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
34374	public static String defaultPeopleContainerName ( ) { initialize ( ) ; return ( defaultPC ) ; }
34389	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T > Iterator < T > emptyIterator ( ) { return ( Iterator < T > ) EMPTY_ITERATOR ; }
34401	public void schedule ( TaskRunnable task , long delay ) throws IllegalArgumentException , IllegalStateException { schedule ( task , new Date ( currentTimeMillis ( ) + delay ) ) ; }
34407	private boolean isImage ( String url ) { return url . matches ( Constants . IMAGE_PATTERN ) ; }
34460	void reset ( JComponent component , Region region , SynthStyle style , int state ) { this . component = component ; this . region = region ; this . style = style ; this . state = state ; }
34466	private static void log ( final Entry entry ) { try { writer . writeEntry ( entry ) ; writer . flush ( ) ; } catch ( IOException e ) { System . err . println ( e . getMessage ( ) ) ; System . exit ( ResultCode . CLIENT_SIDE_LOCAL_ERROR . intValue ( ) ) ; } }
34481	public R visitAttributeType ( AttributeTypePropertyDefinition pd , P p ) { return visitUnknown ( pd , p ) ; }
34525	void saveResourceIndex ( String resourceType ) throws PolicyException , SSOException { ResourceIndex resourceIndex = ( ResourceIndex ) resourceIndices . get ( resourceType ) ; if ( resourceIndex != _NULL ) { String resourceIndexXML = resourceIndex . toXML ( ) ; resourceManager . saveResourceIndex ( resourceType , resourceIndexXML ) ; } }
34528	public void addConfig ( DelayedConfig config ) { delayedConfigs . add ( config ) ; }
34531	@ Override public void destroy ( ) { this . attribute = _NULL ; this . filterConfig = _NULL ; }
34536	public void skippedEntity ( StylesheetHandler handler , String name ) throws org . xml . sax . SAXException { }
34561	public static void main ( final String [ ] args ) { final int retCode = new LDIFSearch ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
34573	public Observable < Void > addAccountObservable ( Account account ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; addAccount ( account , resultHandler . toHandler ( ) ) ; return resultHandler ; }
34576	@ Override public void run ( ) { DirectoryServer . restart ( CLASS_NAME , shutdownMessage ) ; }
34596	void writeExternal ( DataOutput out ) throws IOException { Ser . writeEpochSec ( toEpochSecond ( ) , out ) ; Ser . writeOffset ( offsetBefore , out ) ; Ser . writeOffset ( offsetAfter , out ) ; }
34607	@ Override public void close ( ) throws IOException { InputStream input = m_streams . get ( ) ; if ( _NULL != input ) { input . close ( ) ; } }
34629	public void handleMessage ( @ NotNull IUser user , @ NotNull TLUpdateShortMessage message ) { try { handleMessageInternal ( user , message . getMessage ( ) ) ; } catch ( RpcException e ) { BotLogger . severe ( LOGTAG , e ) ; } }
34718	public boolean isRepeatable ( ) { return _BOOL ; }
34738	public AccountService addAccount ( Account account , Handler < AsyncResult < Void >> resultHandler ) { delegate . addAccount ( account , resultHandler ) ; return this ; }
34753	protected void fireEscapingEvent ( String name , String data ) throws org . xml . sax . SAXException { if ( m_tracer != _NULL ) { flushMyWriter ( ) ; m_tracer . fireGenerateEvent ( SerializerTrace . EVENTTYPE_PI , name , data ) ; } }
34774	public boolean isDebugMode ( ) { return this . debug ; }
34806	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { ChatCacheEntityDao . dropTable ( db , ifExists ) ; }
34817	public String toString ( ) { return _CHAR BadBinaryOpValueExpException : _CHAR + exp ; }
34822	public int length ( ) { return m_str . length ( ) ; }
34826	final void onDetach ( ) { DraweeSpan [ ] images = getImages ( ) ; for ( DraweeSpan image : images ) { Drawable drawable = image . getDrawable ( ) ; if ( drawable != _NULL ) { unscheduleDrawable ( drawable ) ; } image . onDetach ( ) ; } }
34850	public boolean addAudience ( java . lang . String audience ) { if ( ( audience != _NULL ) && ! ( audience . length ( ) == _NUM ) ) { _audience . add ( audience ) ; return _BOOL ; } else { return _BOOL ; } }
34852	public void paintMenuBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
34859	public void paintSliderBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
34869	public PlaSide negate ( ) { if ( this == ON_THE_LEFT ) return ON_THE_RIGHT ; else if ( this == ON_THE_RIGHT ) return ON_THE_LEFT ; else return this ; }
34870	public double num ( ) { return m_val ? _NUM . _NUM : _NUM . _NUM ; }
34897	@ Deprecated public MapCursor addCursor ( int x , int y , byte direction , byte type , boolean visible ) { return addCursor ( new MapCursor ( ( byte ) x , ( byte ) y , direction , type , visible ) ) ; }
34908	private void deleteEntry ( String dn ) throws Exception { DN realDN = DN . valueOf ( dn ) ; DeleteOperation delOp = connection . processDelete ( realDN ) ; waitOpResult ( delOp , ResultCode . SUCCESS ) ; assertNull ( DirectoryServer . getEntry ( realDN ) ) ; }
34935	public static void main ( final String [ ] args ) { final int retCode = new LDIFModify ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
34945	@ Issue ( _CHAR JENKINS - _NUM _CHAR ) @ Test public void dollar_class_must_die3 ( ) throws Exception { WorkflowJob p = r . jenkins . createProject ( WorkflowJob . class , _CHAR die3 _CHAR ) ; p . setDefinition ( new CpsFlowDefinition ( _CHAR nevada ( ) _CHAR ) ) ; r . assertLogContains ( _CHAR All For Our Country _CHAR , r . assertBuildStatusSuccess ( p . scheduleBuild2 ( _NUM ) ) ) ; }
34968	public static boolean isDesignTime ( ) { return ThreadGroupContext . getContext ( ) . isDesignTime ( ) ; }
34987	public String str ( ) { return ( m_obj != _NULL ) ? m_obj . toString ( ) : _CHAR _CHAR ; }
35032	@ Override public boolean isPowered ( ) { return ( getData ( ) & _NUM ) != _NUM ; }
35066	public ReferencesHeader createReferencesHeader ( String callId , String rel ) throws ParseException { ReferencesHeader retval = new References ( ) ; retval . setCallId ( callId ) ; retval . setRel ( rel ) ; return retval ; }
35071	@ Override public void onServiceDisconnected ( ComponentName className ) { Log . d ( TAG , _CHAR FmRadioActivity . onServiceDisconnected _CHAR ) ; }
35075	private TopologyMsg sendTopoToRemoteDS ( ) throws IOException { TopologyMsg outTopoMsg = replicationServerDomain . createTopologyMsgForDS ( this . serverId ) ; sendTopoInfo ( outTopoMsg ) ; return outTopoMsg ; }
35150	private String stateToString ( long s ) { return super . toString ( ) + _CHAR [ phase = _CHAR + phaseOf ( s ) + _CHAR parties = _CHAR + partiesOf ( s ) + _CHAR arrived = _CHAR + arrivedOf ( s ) + _CHAR ] _CHAR ; }
35153	public void add ( Permission permission ) { perms . put ( permission , permission ) ; }
35175	public void goToList ( Activity activity ) { activity . navigateUpTo ( new Intent ( activity , MainActivity . class ) ) ; }
35222	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
35241	public void paintViewportBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
35291	public void paintLabelBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
35325	@ Override public String toString ( ) { return _CHAR ( _CHAR + exp1 + _CHAR ) between ( _CHAR + exp2 + _CHAR ) and ( _CHAR + exp3 + _CHAR ) _CHAR ; }
35372	public int hashCode ( ) { return op . hashCode ( ) ; }
35380	public Builder names ( final Collection < String > names ) { this . names . addAll ( names ) ; return this ; }
35393	public Rectangle clone ( ) { return new Rectangle ( x , y , width , height ) ; }
35395	private static final boolean compareAndSetWaitStatus ( Node node , int expect , int update ) { return unsafe . compareAndSwapInt ( node , waitStatusOffset , expect , update ) ; }
35397	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException e ) { PrivilegeManager . debug . error ( _CHAR AttributeLookupCondition . setState _CHAR , e ) ; } return s ; }
35409	private void writeObject ( ObjectOutputStream oos ) throws IOException { PrincipalName krb5Principal ; try { krb5Principal = new PrincipalName ( fullName , nameType ) ; oos . writeObject ( krb5Principal . asn1Encode ( ) ) ; oos . writeObject ( krb5Principal . getRealm ( ) . asn1Encode ( ) ) ; } catch ( Exception e ) { throw new IOException ( e ) ; } }
35433	public void clearGraceLoginUseTimes ( ) { operations . add ( PasswordPolicyStateOperationType . CLEAR_GRACE_LOGIN_USE_TIMES ) ; }
35435	public KeyStoreJwtTokenConfig withEncryptionKeyPairAlias ( String encryptionKeyPairAlias ) { this . encryptionKeyPairAlias = encryptionKeyPairAlias ; return this ; }
35455	public void addMetaObject ( MetaObject object ) { for ( int k = _NUM ; k < MetaObjects . size ( ) ; ++ k ) { if ( MetaObjects . get ( k ) == _NULL ) { MetaObjects . set ( k , object ) ; return ; } } MetaObjects . add ( object ) ; }
35476	public int hashCode ( ) { return ( usesShift ) ? ( ~ key ) : key ; }
35491	public void start ( Context context , Fragment fragment ) { start ( context , fragment , REQUEST_CROP ) ; }
35500	public T timestamp ( String timestamp ) { jsonValue . put ( TIMESTAMP , timestamp ) ; return self ( ) ; }
35503	public synchronized String toString ( ) { String toString = _CHAR Thread Auditor - List of monitored threads : \ n _CHAR ; Iterator < ThreadHandle > it = threadHandles . values ( ) . iterator ( ) ; while ( it . hasNext ( ) ) { ThreadHandle threadHandle = ( ThreadHandle ) it . next ( ) ; toString += _CHAR _CHAR + threadHandle . toString ( ) + _CHAR \ n _CHAR ; } return toString ; }
35510	public String toUpperUnderscore ( ) { return toUnderscore ( CaseFormat . UPPER_UNDERSCORE ) ; }
35514	public void write ( String str , int off , int len ) throws IOException { se . write ( str , off , len ) ; }
35560	private Parsed currentParsed ( ) { return parsed . get ( parsed . size ( ) - _NUM ) ; }
35566	public boolean postSingleSignOnFailure ( String hostedEntityID , String realm , HttpServletRequest request , HttpServletResponse response , AuthnRequest authnRequest , Response ssoResponse , String profile , int failureCode ) { return _BOOL ; }
35581	@ Override public void removeConfigurationElementCreatedListener ( ConfigurationElementCreatedListener listener ) { super . removeConfigurationElementCreatedListener ( listener ) ; for ( SchemaElementPanel panel : panels ) { panel . removeConfigurationElementCreatedListener ( listener ) ; } }
35622	void dispose ( ) { try { saslServer . dispose ( ) ; } catch ( final SaslException e ) { logger . traceException ( e ) ; } }
35628	public String toXMLString ( ) throws XACMLException { return this . toXMLString ( _BOOL , _BOOL ) ; }
35641	public boolean isMutable ( ) { return isMutable ; }
35658	public void paintScrollBarBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
35676	public void clear ( ) { synchronized ( lock ) { map . clear ( ) ; bytesCount = _NUM ; } }
35690	@ Override public void closeJDBCConn ( ) { if ( conn != _NULL ) { try { System . out . println ( _CHAR StreamingQuoteDAOModeFull . closeJDBCConn ( ) : Closing JDBC connection for Streaming Quote ... '' ) ; conn . close ( ) ; } catch ( SQLException e ) { System . out . println ( _CHAR StreamingQuoteDAOModeFull . closeJDBCConn ( ) : SQLException on conn close _CHAR ) ; e . printStackTrace ( ) ; } } else { System . out . println ( _CHAR StreamingQuoteDAOModeFull . closeJDBCConn ( ) : WARNING : DB connection already _NULL _CHAR ) ; } }
35702	public boolean delete ( long id ) { return database . delete ( DATABASE_TABLE , KEY_ID + _CHAR = _CHAR + id , _NULL ) > _NUM ; }
35717	public static void start ( Context context , Params params ) { Intent intent = new Intent ( context , DebugPortService . class ) ; intent . putExtra ( INTENT_EXTRA_PARAMS , params ) ; context . startService ( intent ) ; }
35731	public static void access ( Level level , String msgid , String data [ ] , Object session ) { access ( level , msgid , data , session , _NULL ) ; }
35733	public int size ( ) { return m_firstFree ; }
35744	Event walk ( Path file ) { if ( closed ) throw new IllegalStateException ( _CHAR Closed _CHAR ) ; Event ev = visit ( file , _BOOL , _BOOL ) ; assert ev != _NULL ; return ev ; }
35757	public void fillXfaForm ( Node node ) { fillXfaForm ( node , _BOOL ) ; }
35803	public String elementName ( ) { return elementName ; }
35807	public void write ( OutputStream s ) throws IOException { byte profileData [ ] ; profileData = getData ( ) ; s . write ( profileData ) ; }
35819	public void addACI ( ACI aci ) throws AccessRightsException , UMSException { Attr attr = new Attr ( ACI . ACI , aci . toString ( ) ) ; modify ( attr , ModificationType . ADD ) ; save ( ) ; }
35836	public static boolean isSAML2FailoverEnabled ( ) { String enableFailOver = ( String ) SAML2ConfigService . getAttribute ( SAML2ConfigService . SAML2_FAILOVER_ATTR ) ; return Boolean . parseBoolean ( enableFailOver ) ; }
35858	static int indexFor ( int h , int length ) { return h & ( length - _NUM ) ; }
35861	static public void assertEquals ( boolean expected , boolean actual ) { assertEquals ( _NULL , expected , actual ) ; }
35871	public boolean isLong ( STypeDef requiredType , NumberLiteral literal , LineCol lineCol ) throws SyntaxException { return ( requiredType == _NULL || requiredType instanceof LongTypeDef || ( requiredType instanceof SClassDef ) && requiredType . isAssignableFrom ( getTypeWithName ( _CHAR java . lang . Long _CHAR , lineCol ) ) ) && ! literal . literal ( ) . contains ( _CHAR . _CHAR ) ; }
35877	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
35885	public T messageDetail ( JsonValue details ) { if ( _NULL != details ) { jsonValue . put ( MESSAGE_DETAIL , details . getObject ( ) ) ; } return self ( ) ; }
35900	public String encode ( ) { String retval = headerName + COLON ; if ( optionTag != _NULL ) retval += SP + optionTag ; retval += NEWLINE ; return retval ; }
35942	public static boolean seekForV1OrV11Tag ( ByteBuffer byteBuffer ) { byte [ ] buffer = new byte [ FIELD_TAGID_LENGTH ] ; byteBuffer . get ( buffer , _NUM , FIELD_TAGID_LENGTH ) ; return ( Arrays . equals ( buffer , TAG_ID ) ) ; }
35976	public String toString ( ) { StringBuilder str = new StringBuilder ( ) ; str . append ( _CHAR Server Name = _CHAR ) . append ( serverName ) ; str . append ( _CHAR Server Port = _CHAR ) . append ( serverPort ) ; str . append ( _CHAR Status = _CHAR ) . append ( serverStatus ) ; return str . toString ( ) ; }
35997	public boolean delete ( long id ) { return database . delete ( DATABASE_TABLE , KEY_ID + _CHAR = _CHAR + id , _NULL ) > _NUM ; }
36021	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; journalWriter . flush ( ) ; }
36076	public boolean isLogEnabled ( ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isLogEnabled ( ) ; } }
36088	private void add ( SessionID sessionID ) { remoteSessionSet . add ( sessionID ) ; }
36118	protected Schema readSchema ( ) throws ConfigException , InitializationException , DirectoryException { SchemaLoader loader = new SchemaLoader ( ) ; schema = loader . readSchema ( ) ; return schema ; }
36134	public Record < K , V > readRecord ( ) throws ChangelogException { return readRecord ( - _NUM ) ; }
36196	private void validateFocusIndex ( ) { if ( focusIndex >= tabPane . getTabCount ( ) ) { setFocusIndex ( tabPane . getSelectedIndex ( ) , _BOOL ) ; } }
36227	public int size ( ) { if ( hmap == _NULL ) { return _NUM ; } return hmap . size ( ) ; }
36250	public static JsonValue toJsonValue ( String json ) throws JsonException { try { return new JsonValue ( MAPPER . readValue ( json , Map . class ) ) ; } catch ( IOException e ) { throw new JsonException ( _CHAR Failed to parse json _CHAR , e ) ; } }
36263	public Expression predicate ( int opPos ) throws TransformerException { return compile ( opPos + _NUM ) ; }
36277	@ Override public String toString ( ) { String s = _NULL ; try { JSONObject jo = toJSONObject ( ) ; s = ( jo == _NULL ) ? super . toString ( ) : jo . toString ( _NUM ) ; } catch ( JSONException e ) { PolicyConstants . DEBUG . error ( _CHAR NotSubject . toString ( ) _CHAR , e ) ; } return s ; }
36278	public void addUsers ( Set users ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; dsServices . modifyMemberShip ( super . token , users , super . entryDN , GROUP , ADD_MEMBER ) ; }
36280	@ Override public boolean isDisableWriteToDiskDynamicStaticResource ( ) { return _BOOL ; }
36300	public Vector subtract ( Vector vec ) { x -= vec . x ; y -= vec . y ; z -= vec . z ; return this ; }
36306	@ Override protected StringBuilder encodeBody ( StringBuilder buffer ) { return buffer . append ( eventType ) ; }
36322	public static JTextField createMediumTextField ( ) { JTextField tf = createTextField ( ) ; tf . setColumns ( _NUM ) ; return tf ; }
36335	public static String decodeBase64 ( final String value ) { if ( value != _NULL ) { return new String ( Base64 . decode ( value ) ) ; } return _NULL ; }
36337	public void clear ( ) { this . parameters = _NULL ; }
36367	public static boolean isLocalDB ( String dbURL ) throws InvalidException { if ( dbURL == _NULL ) { throw new InvalidException ( _CHAR dbURL is not set _CHAR ) ; } return dbURL . startsWith ( _CHAR local : _CHAR ) || dbURL . startsWith ( _CHAR plocal _CHAR ) ; }
36392	public < M extends Configuration > void deregisterDeleteListener ( OptionalRelationDefinition < ? , M > d , ConfigurationDeleteListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) . parent ( ) ; deregisterDeleteListener ( baseDN , listener ) ; }
36410	@ Override public synchronized void write ( byte [ ] b ) throws IOException { super . write ( b ) ; this . branch . write ( b ) ; }
36424	public boolean isMutable ( ) { return isMutable ; }
36448	public synchronized boolean add ( Object obj ) { TracesMessage log = ( TracesMessage ) obj ; long ts = Long . parseLong ( log . getTime ( ) ) ; if ( ts < startTime || startTime < _NUM ) startTime = ts ; return super . add ( obj ) ; }
36474	@ Override public String toString ( ) { return _CHAR DecimalStyle [ _CHAR + zeroDigit + positiveSign + negativeSign + decimalSeparator + _CHAR ] _CHAR ; }
36493	public static Charset forName ( String charsetName ) { return forName ( charsetName , _NULL ) ; }
36513	private byte convertV3ToV4Flags ( byte v3Flag ) { byte v4Flag = ( byte ) _NUM ; if ( ( v3Flag & ID3v23Frame . StatusFlags . MASK_FILE_ALTER_PRESERVATION ) != _NUM ) { v4Flag |= ( byte ) MASK_FILE_ALTER_PRESERVATION ; } if ( ( v3Flag & ID3v23Frame . StatusFlags . MASK_TAG_ALTER_PRESERVATION ) != _NUM ) { v4Flag |= ( byte ) MASK_TAG_ALTER_PRESERVATION ; } return v4Flag ; }
36537	public void connect ( SocketAddress endpoint ) throws IOException { connect ( endpoint , _NUM ) ; }
36552	public int hashCode ( ) { return uid . hashCode ( ) ; }
36596	public Builder superiorObjectClasses ( final Collection < String > objectClassNamesOrOIDs ) { this . superiorClasses . addAll ( objectClassNamesOrOIDs ) ; return this ; }
36645	public boolean isForgottenUsernameEnabled ( ) { return forgottenUsernameEnabled ; }
36702	public static void closeSession ( ) throws HibernateException { Session session = ( Session ) threadLocal . get ( ) ; threadLocal . set ( _NULL ) ; if ( session != _NULL ) { session . close ( ) ; } }
36741	void recomposeWhiteSpaceInfo ( WhiteSpaceInfo wsi ) { if ( _NULL == m_whiteSpaceInfoList ) m_whiteSpaceInfoList = new TemplateList ( ) ; m_whiteSpaceInfoList . setTemplate ( wsi ) ; }
36750	public void removeTargetFilter ( ) { _targetFilter = _NULL ; }
36756	private static void usage ( ) { log . info ( _CHAR Usage : java org . apache . catalina . startup . Tool [ < options > ] < class > [ < arguments > ] _CHAR ) ; }
36772	public void addColumn ( int width ) { }
36794	public String toString ( ) { if ( array != _NULL ) { return new String ( array , offset , count ) ; } return _CHAR _CHAR ; }
36819	public void replaceChild ( int index , XMPNode node ) { node . setParent ( this ) ; getChildren ( ) . set ( index - _NUM , node ) ; }
36839	private static synchronized String formatDateAsYear ( Date d ) { return formatYearIn . format ( d ) ; }
36844	public Object clone ( ) { try { ZipEntry e = ( ZipEntry ) super . clone ( ) ; e . extra = ( extra == _NULL ) ? _NULL : extra . clone ( ) ; return e ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
36862	public void handleTblButtonAddRequest ( RequestInvocationEvent event ) { EntityAddViewBean vb = ( EntityAddViewBean ) getViewBean ( EntityAddViewBean . class ) ; setPageSessionAttribute ( EntityAddViewBean . ENTITY_TYPE , ( String ) getPageSessionAttribute ( PG_SESSION_ENTITY_TYPE ) ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
36869	public boolean beginContentHrefDisplay ( ChildDisplayEvent event ) { return ( ( ( ResultVal != _NULL ) && ( ResultVal . length ( ) > _NUM ) && LoginFail && ! accountLocked ) || ( ( errorTemplate != _NULL ) && ( errorTemplate . length ( ) > _NUM ) ) ) ; }
36877	public Builder removeName ( String name ) { this . names . remove ( name ) ; return this ; }
36878	public void run ( ) { runWorker ( this ) ; }
36889	public void deleteUsers ( Set users ) throws AMException , SSOException { Iterator iter = users . iterator ( ) ; while ( iter . hasNext ( ) ) { String userDN = ( String ) iter . next ( ) ; AMUser user = new AMUserImpl ( super . token , userDN ) ; user . delete ( ) ; } }
36927	protected void addWarInfo ( File warfile ) { WarInfo info = currentStatus . get ( warfile . getAbsolutePath ( ) ) ; if ( info == _NULL ) { info = new WarInfo ( warfile ) ; info . setLastState ( - _NUM ) ; currentStatus . put ( warfile . getAbsolutePath ( ) , info ) ; } }
36933	public Builder names ( final String ... names ) { return names ( asList ( names ) ) ; }
36943	public void handleTblButtonAddRequest ( RequestInvocationEvent event ) { RMRealmAddViewBean vb = ( RMRealmAddViewBean ) getViewBean ( RMRealmAddViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
36974	static String [ ] checkValidData ( final String [ ] data ) { String [ ] tempData = data ; if ( tempData == _NULL || tempData . length == _NUM ) { tempData = new String [ ] { EasyDeviceInfo . notFoundVal } ; } return tempData ; }
36989	public void destroy ( ) { config = _NULL ; }
37030	public boolean apply ( ObjectName name ) throws BadStringOperationException , BadBinaryOpValueExpException , BadAttributeValueExpException , InvalidApplicationException { return exp1 . apply ( name ) || exp2 . apply ( name ) ; }
37031	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
37036	private void deleteRecursively ( File file ) throws ApplicationException { deleteRecursively ( file , _NULL ) ; }
37047	public T targetObjectId ( String targetObjectId ) { jsonValue . put ( TARGET_OBJECT_ID , targetObjectId ) ; return self ( ) ; }
37051	public boolean isMutable ( ) { return isMutable ; }
37080	public Location add ( Vector vec ) { this . x += vec . getX ( ) ; this . y += vec . getY ( ) ; this . z += vec . getZ ( ) ; return this ; }
37134	public StringBuilder encodeBody ( StringBuilder retval ) { return date . encode ( retval ) ; }
37194	@ Override public void end ( String namespace , String name ) throws Exception { Object top = digester . pop ( ) ; if ( digester . log . isDebugEnabled ( ) ) { digester . log . debug ( _CHAR [ ObjectCreateRule ] { _CHAR + digester . match + _CHAR } Pop _CHAR + top . getClass ( ) . getName ( ) ) ; } }
37244	public boolean hasItem ( ) { return this . item != _NULL ; }
37319	public synchronized void flush ( ) throws IOException { if ( ! initialized ) return ; checkNotClosed ( ) ; trimToSize ( ) ; journalWriter . flush ( ) ; }
37359	public void removeAllMembers ( ) throws UMSException { SearchResults searchResults = getMemberIDs ( ) ; while ( searchResults . hasMoreElements ( ) ) { removeMember ( searchResults . next ( ) ) ; } }
37367	public void mouseMoved ( MouseEvent e ) { }
37376	private static boolean add ( JsonValue subject , PatchOperation operation ) throws BadRequestException { if ( ! operation . isAdd ( ) ) { throw new BadRequestException ( _CHAR Operation is an _CHAR + operation . getOperation ( ) + _CHAR , not an add ! _CHAR ) ; } subject . putPermissive ( operation . getField ( ) , operation . getValue ( ) . getObject ( ) ) ; return _BOOL ; }
37382	public void paintLabelBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
37407	public void remove ( ) { throw new UnsupportedOperationException ( ) ; }
37456	public boolean isEmpty ( ) { return ( m_index == - _NUM ) ; }
37538	public final boolean isSecure ( ) { return securityStatus ; }
37553	public boolean isValid ( ) throws SMSException { if ( smsEntry . isValid ( ) ) { if ( smsEntry . isDirty ( ) ) { smsEntry . refresh ( ) ; } if ( smsEntry . isNewEntry ( ) ) { String [ ] msgs = { serviceName } ; throw ( new ServiceNotFoundException ( IUMSConstants . UMS_BUNDLE_NAME , IUMSConstants . SMS_service_does_not_exist , msgs ) ) ; } } return ( smsEntry . isValid ( ) ) ; }
37560	public static void main ( String [ ] args ) { int retCode = mainModify ( args , _BOOL , System . out , System . err ) ; if ( retCode != _NUM ) { System . exit ( filterExitCode ( retCode ) ) ; } }
37575	public static StoroBuilder configure ( long maxSize ) { return new StoroBuilder ( maxSize ) ; }
37582	public void requestSecondsUntilAccountExpiration ( ) { operations . add ( PasswordPolicyStateOperationType . GET_SECONDS_UNTIL_ACCOUNT_EXPIRATION ) ; }
37594	public final int length ( ) { return array . length ; }
37614	public void paintSeparatorBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
37619	public void removeUsers ( Set users ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; dsServices . modifyMemberShip ( super . token , users , super . entryDN , GROUP , REMOVE_MEMBER ) ; }
37627	public void selectText ( int startIndex , int endIndex ) { JTextComponent . this . select ( startIndex , endIndex ) ; }
37661	public JSONObject toJSONObject ( ) throws JSONException { JSONObject jo = new JSONObject ( ) ; toJSONObject ( jo ) ; jo . put ( _CHAR key _CHAR , key ) ; jo . put ( _CHAR value _CHAR , value ) ; jo . put ( _CHAR pConditionName _CHAR , pConditionName ) ; return jo ; }
37679	@ Override public boolean isDebugEnabled ( ) { return _BOOL ; }
37720	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; journalWriter . flush ( ) ; }
37725	public void traverse ( int pos ) throws org . xml . sax . SAXException { m_dtm = m_transformer . getXPathContext ( ) . getDTM ( pos ) ; m_startNode = pos ; super . traverse ( pos ) ; }
37735	public final int length ( ) { return array . length ; }
37750	static void selfInterrupt ( ) { Thread . currentThread ( ) . interrupt ( ) ; }
37752	public static void premain ( String args , Instrumentation inst ) throws Exception { setAndAddTransformer ( inst ) ; }
37805	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public CancelResult cancelOperation ( int messageID , CancelRequest cancelRequest ) { return new CancelResult ( ResultCode . CANNOT_CANCEL , LocalizableMessage . raw ( _CHAR Internal operations can not be cancelled _CHAR ) ) ; }
37841	public void paintPanelBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
37857	public boolean isMutable ( ) { return isMutable ; }
37867	static void selfInterrupt ( ) { Thread . currentThread ( ) . interrupt ( ) ; }
37893	public int hashCode ( ) { int fhash = ( family != _NULL ) ? family . hashCode ( ) : _NUM ; return fhash ^ style ^ size ; }
37906	public Crop asSquare ( ) { cropIntent . putExtra ( Extra . ASPECT_X , _NUM ) ; cropIntent . putExtra ( Extra . ASPECT_Y , _NUM ) ; return this ; }
37915	public void handle ( String line ) { }
37916	public static < V > boolean isEmpty ( V [ ] sourceArray ) { return ( sourceArray == _NULL || sourceArray . length == _NUM ) ; }
37924	public void description ( LocalizableMessage description ) { this . description = description ; }
37944	private void sendResponse ( HttpServletRequest request , HttpServletResponse response , String returnURL ) { try { FSUtils . forwardRequest ( request , response , returnURL ) ; } catch ( Exception exp ) { FSUtils . debug . error ( _CHAR FSPreLogin : : sendError Error during sending error page _CHAR ) ; } }
37958	public static void checkArgument ( boolean expression , Object errorMessage ) { if ( ! expression ) { throw new IllegalArgumentException ( String . valueOf ( errorMessage ) ) ; } }
37977	public void paintTableBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
37990	public void appendToFsb ( org . apache . xml . utils . FastStringBuffer fsb ) { fsb . append ( str ( ) ) ; }
37994	@ Override protected void finalize ( ) throws Throwable { super . finalize ( ) ; server . shutdown ( ) ; restExpressRunning = _BOOL ; }
38011	public boolean isAuditLogEnabled ( ) { return logStatus ; }
38016	private void enqueue ( Node < E > node ) { last = last . next = node ; }
38071	public void register ( Bitmap img ) { mCache . get ( img ) ; }
38097	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e . toString ( ) , e ) ; } }
38127	@ Override public int hashCode ( ) { int hashCode = getClass ( ) . hashCode ( ) ; for ( int b : bytes ) { hashCode += b ; } return hashCode ; }
38133	public boolean unsetOrdering ( Object first , Object second ) { DigraphNode firstPONode = ( DigraphNode ) poNodes . get ( first ) ; DigraphNode secondPONode = ( DigraphNode ) poNodes . get ( second ) ; return firstPONode . removeEdge ( secondPONode ) || secondPONode . removeEdge ( firstPONode ) ; }
38148	public void init ( ServletConfig config ) throws ServletException { servletCtx = config . getServletContext ( ) ; super . init ( config ) ; }
38151	protected void checkStream ( ) throws IOException { if ( closed ) { throw new IOException ( _CHAR Stream closed _CHAR ) ; } }
38177	public Observable < Void > createOrderObservable ( Order order ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; createOrder ( order , resultHandler . toHandler ( ) ) ; return resultHandler ; }
38181	private JsonValue retrieveObject ( String resourceID , String id ) throws ResourceException { return performRead ( retrieveFullID ( resourceID , id ) ) ; }
38182	@ Override protected boolean checkCollision ( ) { Shape intersection = SVGPath . intersect ( SpriteHandler . getCurrentCast ( ) . get ( _NUM ) . getSpriteBounds ( ) , spriteBounds ) ; return intersection . getBoundsInParent ( ) . getWidth ( ) != - _NUM ; }
38188	private void writeObject ( java . io . ObjectOutputStream s ) throws java . io . IOException { s . defaultWriteObject ( ) ; s . writeInt ( attrs . size ( ) ) ; Enumeration < Attribute > attrEnum = attrs . elements ( ) ; while ( attrEnum . hasMoreElements ( ) ) { s . writeObject ( attrEnum . nextElement ( ) ) ; } }
38203	public static void main ( final String [ ] args ) { final int retCode = new LDAPCompare ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
38308	public ValueExp apply ( ObjectName name ) throws BadStringOperationException , BadBinaryOpValueExpException , BadAttributeValueExpException , InvalidApplicationException { return this ; }
38320	public void addRole ( String user , String role ) { List < String > roles = userRoles . get ( user ) ; if ( roles == _NULL ) { roles = new ArrayList < > ( ) ; userRoles . put ( user , roles ) ; } roles . add ( role ) ; }
38344	public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { if ( dtdHandler != _NULL ) { dtdHandler . unparsedEntityDecl ( name , publicId , systemId , notationName ) ; } }
38376	public Object clone ( ) { Date d = _NULL ; try { d = ( Date ) super . clone ( ) ; if ( cdate != _NULL ) { d . cdate = ( BaseCalendar . Date ) cdate . clone ( ) ; } } catch ( CloneNotSupportedException e ) { } return d ; }
38377	public int length ( ) { return n ; }
38404	private void initializeGroupManager ( ) throws ConfigException , InitializationException { try { groupManager = new GroupManager ( serverContext ) ; } catch ( DirectoryException de ) { logger . traceException ( de ) ; throw new InitializationException ( de . getMessageObject ( ) ) ; } groupManager . initializeGroupImplementations ( ) ; }
38407	public final int size ( ) { return m_firstFree ; }
38444	public static int convertDpToPixel ( Context context , int dp ) { Resources resources = context . getResources ( ) ; return ( int ) TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dp , resources . getDisplayMetrics ( ) ) ; }
38511	public boolean isEmpty ( ) { return collections . isEmpty ( ) ; }
38525	public void handleTblSoapSTSInstancesButtonAddRequest ( RequestInvocationEvent event ) { SoapSTSAddViewBean vb = ( SoapSTSAddViewBean ) getViewBean ( SoapSTSAddViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
38532	public void handleTblRestSTSInstancesButtonAddRequest ( RequestInvocationEvent event ) { RestSTSAddViewBean vb = ( RestSTSAddViewBean ) getViewBean ( RestSTSAddViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
38548	public String encode ( ) { return new StringBuilder ( scheme ) . append ( SP ) . append ( authParams . encode ( ) ) . toString ( ) ; }
38653	public LineSegment transformBy ( Matrix m ) { Vector newStart = startPoint . cross ( m ) ; Vector newEnd = endPoint . cross ( m ) ; return new LineSegment ( newStart , newEnd ) ; }
38686	int size ( ) { return scrolls . size ( ) ; }
38744	public static void addFile ( String s ) throws IOException { File f = new File ( s ) ; addFile ( f ) ; }
38748	@ Override public int hashCode ( ) { long hash = minSmallest + minLargest << _NUM + minLargest >> _NUM + maxSmallest << _NUM + maxSmallest >> _NUM + maxLargest << _NUM + maxLargest >> _NUM ; return ( int ) ( hash ^ ( hash >> > _NUM ) ) ; }
38783	public void popElemAttributeSet ( ) { m_attrSetStack . pop ( ) ; }
38784	public synchronized void addObject ( NSObject obj ) { set . add ( obj ) ; }
38803	public void start ( Activity activity ) { start ( activity , REQUEST_CROP ) ; }
38809	public Kue process ( String type , int n , Handler < Job > handler ) { if ( n <= _NUM ) { throw new IllegalStateException ( _CHAR The process times must be positive _CHAR ) ; } while ( n -- > _NUM ) { processInternal ( type , handler , _BOOL ) ; } setupTimers ( ) ; return this ; }
38819	public Object clone ( ) { MimeType newObj = _NULL ; try { newObj = ( MimeType ) super . clone ( ) ; } catch ( CloneNotSupportedException cannotHappen ) { } newObj . parameters = ( MimeTypeParameterList ) parameters . clone ( ) ; return newObj ; }
38831	private void parseTrailerHeaders ( ) throws IOException { try { this . footers = AbstractMessageParser . parseHeaders ( in , - _NUM , - _NUM , _NULL ) ; } catch ( HttpException e ) { IOException ioe = new MalformedChunkCodingException ( _CHAR Invalid footer : _CHAR + e . getMessage ( ) ) ; ExceptionUtils . initCause ( ioe , e ) ; throw ioe ; } }
38878	public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { if ( m_dtdHandler != _NULL ) { m_dtdHandler . unparsedEntityDecl ( name , publicId , systemId , notationName ) ; } }
38907	public void addInterface ( MappedClass interfaze ) { interfaces . add ( interfaze ) ; }
38924	public boolean isWritable ( String attributeName ) { if ( writables . contains ( attributeName . toLowerCase ( ) ) ) return _BOOL ; else return _BOOL ; }
38942	public boolean verifyXMLSignature ( org . w3c . dom . Element element ) throws XMLSignatureException { return sp . verifyXMLSignature ( element ) ; }
38946	public static boolean isFMInstance ( ) { if ( instanceType == _NULL ) { instanceType = ( String ) configTags . get ( _CHAR INSTANCE_TYPE _CHAR ) ; } return ( instanceType != _NULL && instanceType . equalsIgnoreCase ( _CHAR FM _CHAR ) ) ; }
38952	@ Override public int hashCode ( ) { return dateTime . hashCode ( ) ^ offset . hashCode ( ) ^ Integer . rotateLeft ( zone . hashCode ( ) , _NUM ) ; }
38960	public MaterialBarcodeScannerBuilder withResultListener ( @ NonNull MaterialBarcodeScanner . OnResultListener onResultListener ) { this . onResultListener = onResultListener ; return this ; }
38967	@ Override public void flush ( ) throws IOException { OutputStream output = m_streams . get ( ) ; if ( _NULL != output ) { output . flush ( ) ; } }
38977	public ByteArrayBuilder appendByte ( int b ) { builder . appendByte ( b ) ; return this ; }
38990	public static String decode ( final String value ) { try { return URLDecoder . decode ( value , CHARSET_ISO_8859_1 ) ; } catch ( UnsupportedEncodingException e ) { throw new IllegalArgumentException ( e ) ; } }
38997	public boolean isMutable ( ) { return mutable ; }
39037	public boolean verifyXMLSignature ( org . w3c . dom . Element element , java . lang . String certAlias ) throws XMLSignatureException { return sp . verifyXMLSignature ( element , certAlias ) ; }
39074	public boolean isValidating ( ) { return _BOOL ; }
39083	public static UpgradeParameters upgradeParams ( ) { return new UpgradeParameters ( ) ; }
39121	private CSN addEntry ( Entry entry ) throws Exception { AddOperation addOp = connection . processAdd ( entry ) ; assertEquals ( addOp . getResultCode ( ) , ResultCode . SUCCESS ) ; assertNotNull ( getEntry ( entry . getName ( ) , _NUM , _BOOL ) ) ; return OperationContext . getCSN ( addOp ) ; }
39144	public void append ( String s ) { content += s ; }
39154	public void onSelectMedia ( View v ) { if ( ! mPermissionsGranted ) { mStatusView . setErrorMessage ( _CHAR The application has not been granted permission to read from external storage _CHAR ) ; } else { selectVideoFile ( ) ; } }
39186	public int hashCode ( ) { int hash = tx == _NULL ? _NUM : tx . hashCode ( ) ; if ( defaulting ) { hash += getAntiAliasingHint ( ) . hashCode ( ) ; hash += getFractionalMetricsHint ( ) . hashCode ( ) ; } else { hash += aaHintValue . hashCode ( ) ; hash += fmHintValue . hashCode ( ) ; } return hash ; }
39187	public static boolean isNumber ( String str ) { try { Double . parseDouble ( str ) ; return _BOOL ; } catch ( NumberFormatException ignore ) { return _BOOL ; } }
39222	@ Deprecated public final boolean isInitialized ( ) { return _BOOL ; }
39241	public static void main ( final String [ ] args ) { final int retCode = new LDAPModify ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
39290	public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR AttrSet : _CHAR ) ; int size = _attrs . size ( ) ; for ( int i = _NUM ; i < size ; i ++ ) { sb . append ( _attrs . get ( i ) . toString ( ) ) . append ( _CHAR \ n _CHAR ) ; } return sb . toString ( ) ; }
39336	public String createNameIdentifier ( ) { if ( FSUtils . debug . messageEnabled ( ) ) { FSUtils . debug . message ( _CHAR FSNameIdentifierGeneratorHelper . '' + _CHAR createNameIdentifier called _CHAR ) ; } if ( generator != _NULL ) { return generator . createNameIdentifier ( ) ; } else { if ( FSUtils . debug . messageEnabled ( ) ) { FSUtils . debug . message ( _CHAR FSNameIdentifierGeneratorHelper . create _CHAR + _CHAR NameIdentifier returning _NULL as generator is _NULL _CHAR ) ; } return _NULL ; } }
39344	public static void access ( Level level , String msgid , String data [ ] ) { access ( level , msgid , data , _NULL ) ; }
39355	public void handleTblButtonAddRequest ( RequestInvocationEvent event ) { ServicesSelectViewBean vb = ( ServicesSelectViewBean ) getViewBean ( ServicesSelectViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
39378	public static void main ( String [ ] args ) { int retCode = mainDelete ( args , _BOOL , System . out , System . err ) ; if ( retCode != _NUM ) { System . exit ( filterExitCode ( retCode ) ) ; } }
39379	public AnnotationVisitor visitAnnotation ( String desc , boolean visible ) { if ( fv != _NULL ) { return fv . visitAnnotation ( desc , visible ) ; } return _NULL ; }
39398	public void invalidate ( ) { if ( session != _NULL ) session . invalidate ( ) ; }
39402	public void runSQL ( String connectionString , String createTable ) throws SQLException { Connection conn = DriverManager . getConnection ( connectionString ) ; Statement st = conn . createStatement ( ) ; System . err . println ( createTable ) ; st . execute ( createTable ) ; st . close ( ) ; conn . close ( ) ; }
39405	public void addChangeListener ( ChangeListener l ) { listenerList . add ( ChangeListener . class , l ) ; }
39419	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ caseSensitivity = _CHAR + caseSensitivity + _CHAR ] _CHAR ; }
39426	public Observable < Void > deleteAccountObservable ( String id ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; deleteAccount ( id , resultHandler . toHandler ( ) ) ; return resultHandler ; }
39466	public long max ( ) { return deltaMax . get ( ) ; }
39488	public boolean readChunk ( ) throws IOException { long rawTimestamp = Utils . readUint32 ( raf ) ; Date timestamp = AiffUtil . timestampToDate ( rawTimestamp ) ; aiffHeader . setTimestamp ( timestamp ) ; return _BOOL ; }
39502	public boolean isUnsubscribed ( int restartableId ) { Subscription subscription = restartableSubscriptions . get ( restartableId ) ; return subscription == _NULL || subscription . isUnsubscribed ( ) ; }
39555	public boolean isObjectTriggering ( ) { return ( getData ( ) & _NUM ) != _NUM ; }
39583	boolean hasOutlines ( ) { return getPdfObject ( ) . containsKey ( PdfName . Outlines ) ; }
39589	protected LocPathIterator createDTMIterator ( Compiler compiler , int opPos ) throws javax . xml . transform . TransformerException { LocPathIterator lpi = ( LocPathIterator ) WalkerFactory . newDTMIterator ( compiler , opPos , ( compiler . getLocationPathDepth ( ) <= _NUM ) ) ; return lpi ; }
39591	public String str ( ) { return _CHAR _CHAR ; }
39621	@ Override public void flush ( ) { }
39625	protected boolean hasAlert ( ) { return ( alert [ _NUM ] != _NUM ) ; }
39637	@ Override public int hashCode ( ) { return time . hashCode ( ) ^ offset . hashCode ( ) ; }
39645	public boolean isMutable ( ) { return isMutable ; }
39651	public boolean isEmpty ( ) { return _BOOL ; }
39656	public void endDTD ( ) throws SAXException { if ( _NULL != m_resultLexicalHandler ) m_resultLexicalHandler . endDTD ( ) ; }
39659	public Object clone ( ) throws CloneNotSupportedException { DefaultFormatter formatter = ( DefaultFormatter ) super . clone ( ) ; formatter . navigationFilter = _NULL ; formatter . documentFilter = _NULL ; formatter . replaceHolder = _NULL ; return formatter ; }
39680	public String toString ( ) { if ( array != _NULL ) { return new String ( array , offset , count ) ; } return _CHAR _CHAR ; }
39682	@ Override public String toString ( ) { return attr ; }
39712	public void destroy ( ) { }
39783	public void paintViewportBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
39790	public void windowIconified ( WindowEvent e ) { }
39798	public void initialize ( int animationDuration , int backSideColor , int additionalFlipsCount ) { this . mAnimationDuration = animationDuration ; this . mBackSideColor = backSideColor ; this . mAdditionalFlipsCount = additionalFlipsCount ; }
39801	public static void main ( final String [ ] args ) { final int retCode = new LDAPSearch ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
39824	public void paintViewportBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
39830	String [ ] toCommandLineArguments ( String configurationFile ) { return new String [ ] { _CHAR -- configFile _CHAR , configurationFile , _CHAR -- baseDN _CHAR , baseDN , _CHAR -- rebuildAll _CHAR , _CHAR -- noPropertiesFile _CHAR } ; }
39835	static Map addElementToMap ( String key , Set values , Map toMap ) { if ( ( key != _NULL ) && ( toMap != _NULL ) ) { toMap . put ( key , values ) ; } return toMap ; }
39916	public final void lazySet ( V newValue ) { unsafe . putOrderedObject ( this , valueOffset , newValue ) ; }
39926	public static Query create ( final long startTimeInMilliseconds , final long executionTimeInMilliseconds , final String clientAddress , final StatementType statementType , final String keyspace , final String tableName , final String statement , final String executionErrorMessage ) { return new Query ( startTimeInMilliseconds , executionTimeInMilliseconds , clientAddress , statementType , keyspace , tableName , statement , executionErrorMessage ) ; }
39933	public int hashCode ( ) { return text . hashCode ( ) ^ pos ^ begin ^ end ; }
39946	public void fireGenerateEvent ( int eventType ) { }
39949	public SessionInfo refresh ( Session session , boolean reset ) throws SessionException { SessionID sessionID = session . getID ( ) ; if ( debug . messageEnabled ( ) ) { debug . message ( MessageFormat . format ( _CHAR Local fetch SessionInfo for { _NUM } \ n _CHAR + _CHAR Reset : { _NUM } _CHAR , sessionID . toString ( ) , reset ) ) ; } return getSessionInfo ( sessionID , reset ) ; }
40003	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { HtmlEntityDao . createTable ( db , ifNotExists ) ; CollectEntityDao . createTable ( db , ifNotExists ) ; }
40074	public boolean swapCamera ( ) { synchronized ( SyncOp ) { LogTools . d ( _CHAR RESClient , swapCamera ( ) _CHAR ) ; return videoClient . swapCamera ( ) ; } }
40082	static public void fail ( ) { fail ( _NULL ) ; }
40105	public final String pop ( ) { if ( m_firstFree <= _NUM ) return _NULL ; m_firstFree -- ; String s = m_map [ m_firstFree ] ; m_map [ m_firstFree ] = _NULL ; return s ; }
40110	public boolean isKbaEnabled ( ) { return kbaEnabled ; }
40122	private void seekStation ( final int station , boolean direction ) { startAnimation ( ) ; refreshImageButton ( _BOOL ) ; refreshActionMenuItem ( _BOOL ) ; refreshPopupMenuItem ( _BOOL ) ; refreshActionMenuPower ( _BOOL ) ; mService . seekStationAsync ( FmRadioUtils . computeFrequency ( station ) , direction ) ; }
40137	public Builder removeName ( String name ) { this . names . remove ( name ) ; return this ; }
40138	public boolean addAssertion ( Assertion assertion ) { if ( signed ) { return _BOOL ; } if ( assertion == _NULL ) { return _BOOL ; } if ( ( assertions == _NULL ) || ( assertions == Collections . EMPTY_LIST ) ) { assertions = new ArrayList ( ) ; } assertions . add ( assertion ) ; return _BOOL ; }
40142	public static void printUsage ( ResourceBundle bundle ) { System . out . println ( bundle . getString ( _CHAR message . info . usage _CHAR ) ) ; }
40172	public boolean isLdaps ( ) { return getConnectionType ( ) == LDAPS ; }
40202	public static boolean isWhiteSpace ( StringBuffer buf ) { int n = buf . length ( ) ; for ( int i = _NUM ; i < n ; i ++ ) { if ( ! isWhiteSpace ( buf . charAt ( i ) ) ) return _BOOL ; } return _BOOL ; }
40221	public void removeMenuListener ( MenuListener l ) { listenerList . remove ( MenuListener . class , l ) ; }
40228	public boolean beginContentImageDisplay ( ChildDisplayEvent event ) { return ( ( pageImage != _NULL ) && ( pageImage . length ( ) > _NUM ) ) ; }
40232	public static void main ( final String [ ] args ) { final int retCode = new AuthRate ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
40257	public void onProviderEnabled ( String provider ) { }
40260	public static void access ( Level level , String msgid , String data [ ] ) { access ( level , msgid , data , _NULL , _NULL ) ; }
40264	public boolean controlConcurrency ( Request request , Response response ) { return _BOOL ; }
40279	public void onStatusChanged ( String provider , int status , Bundle extras ) { }
40293	public static Optional < String > first ( final String value , final int n ) { return Optional . ofNullable ( value ) . filter ( _NULL ) . map ( _NULL ) ; }
40294	public static String prepend ( final String value , final String ... prepends ) { return prependArray ( value , prepends ) ; }
40332	private ReconTypeHandler createReconTypeHandler ( ReconciliationService . ReconAction reconAction ) throws BadRequestException { switch ( reconAction ) { case recon : return new ReconTypeByQuery ( this ) ; case reconById : return new ReconTypeById ( this ) ; default : throw new BadRequestException ( _CHAR Unknown action _CHAR + reconAction . toString ( ) ) ; } }
40333	public PdfCanvas showText ( GlyphLine text ) { return showText ( text , new ActualTextIterator ( text ) ) ; }
40345	public boolean isSecure ( ) { return _BOOL ; }
40349	public AMAuthenticationAuditEventBuilder principal ( String principal ) { if ( isNotEmpty ( principal ) ) { principal ( singletonList ( principal ) ) ; } return this ; }
40369	public boolean isMutable ( ) { return mutable ; }
40396	public static < T > LeftValueExpression < T > valueOf ( String expression , Class < T > expectedType ) throws ExpressionException { return new LeftValueExpression < > ( expression , expectedType ) ; }
40488	public void endDTD ( ) throws org . xml . sax . SAXException { }
40553	protected void parseParameter ( AuthenticationHeader header ) throws ParseException { if ( debug ) dbg_enter ( _CHAR parseParameter _CHAR ) ; try { NameValue nv = this . nameValue ( _CHAR ) ; header . setParameter ( nv ) ; } finally { if ( debug ) dbg_leave ( _CHAR parseParameter _CHAR ) ; } }
40590	@ Override public int hashCode ( ) { return ( ( int ) ( seconds ^ ( seconds >> > _NUM ) ) ) + ( _NUM * nanos ) ; }
40610	public void paintLabelBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
40626	private static String toPunycode ( String domainName ) { if ( UrlUtils . isASCII ( domainName ) ) { return domainName ; } return UrlUtils . toPunycode ( domainName ) ; }
40629	public void removeAttribute ( Object name ) { StyleContext context = StyleContext . this ; attributes = context . removeAttribute ( attributes , name ) ; fireStateChanged ( ) ; }
40640	@ Override public void close ( ) { super . close ( ) ; allLocks . remove ( fileName ) ; try { FileChannel channel = lock . channel ( ) ; lock . release ( ) ; channel . close ( ) ; File file = new File ( fileName + LCK_EXT ) ; file . delete ( ) ; } catch ( IOException e ) { } }
40657	private void modifyIndexOnline ( final ConnectionWrapper connWrapper ) throws Exception { final BackendCfgClient backend = connWrapper . getRootConfiguration ( ) . getBackend ( backendName ) ; modifyBackendIndexOnline ( ( PluggableBackendCfgClient ) backend ) ; }
40662	public void onEvent ( final DisruptorReferringEventEntry eventEntryWrap , final long sequence , final boolean endOfBatch ) throws Exception { EventEntryImpl eventEntry = eventEntryWrap . delegate ; onEvent ( eventEntry , sequence , endOfBatch ) ; }
40678	@ Override public boolean isCellEditable ( final int row , final int column ) { return _BOOL ; }
40691	public void globalConfigChanged ( String serviceName , String version , String groupName , String serviceComponent , int type ) { }
40701	static ZoneOffset readOffset ( DataInput in ) throws IOException { int offsetByte = in . readByte ( ) ; return ( offsetByte == _NUM ? ZoneOffset . ofTotalSeconds ( in . readInt ( ) ) : ZoneOffset . ofTotalSeconds ( offsetByte * _NUM ) ) ; }
40707	protected static String removeQuotes ( String quotedString ) { return removeQuotes ( quotedString , _BOOL ) ; }
40750	public void endEntity ( String name ) throws org . xml . sax . SAXException { if ( name . equals ( _CHAR [ dtd ] _CHAR ) ) m_inExternalDTD = _BOOL ; m_inEntityRef = _BOOL ; if ( m_tracer != _NULL ) this . fireEndEntity ( name ) ; }
40754	public void endEntity ( String name ) throws SAXException { if ( _NULL != m_resultLexicalHandler ) m_resultLexicalHandler . endEntity ( name ) ; }
40756	private static void renumProviders ( ) { Provider [ ] p = Services . getProviders ( ) ; for ( int i = _NUM ; i < p . length ; i ++ ) { p [ i ] . setProviderNumber ( i + _NUM ) ; } }
40761	public FastStringBuffer fsb ( ) { return ( ( FastStringBuffer ) m_obj ) ; }
40779	public AccountService deleteAccount ( String id , Handler < AsyncResult < Void >> resultHandler ) { delegate . deleteAccount ( id , resultHandler ) ; return this ; }
40790	@ Override public boolean isConfigurable ( ) { return delegate instanceof ThreadPoolExecutor ; }
40799	public static boolean resolveHostNameEnabled ( ) { return resolveHostName ; }
40871	protected Expression lt ( int opPos ) throws TransformerException { return compileOperation ( new Lt ( ) , opPos ) ; }
40879	public boolean removeElement ( Object obj ) { synchronized ( actions ) { if ( allowToChange ) { boolean result = actions . remove ( obj ) ; if ( actions . isEmpty ( ) ) { if ( headTask != _NULL ) { cancel ( ) ; } } return result ; } } return _BOOL ; }
40924	private void whenCommitReturnTrue ( LoginModule ... modules ) throws LoginException { for ( LoginModule module : modules ) { when ( module . commit ( ) ) . thenReturn ( _BOOL ) ; } }
40938	public void release ( ) { lock . unlock ( ) ; }
40940	public static ComponentUI createUI ( JComponent c ) { return new SynthPasswordFieldUI ( ) ; }
40948	public static Long parseStringAsLong ( String in ) throws IndexParseFieldException { try { return Long . parseLong ( in ) ; } catch ( NumberFormatException e ) { throw new IndexParseFieldException ( in , e ) ; } }
40952	public static Set < Application > search ( Subject subject , String realm , QueryFilter < String > queryFilter ) throws EntitlementException { return getApplicationService ( subject , realm ) . search ( queryFilter ) ; }
40990	public static int calculateLevelColor ( int baseColor , int level ) { return Color . rgb ( calculateR ( Color . red ( baseColor ) , level ) , calculateG ( Color . green ( baseColor ) , level ) , calculateB ( Color . blue ( baseColor ) , level ) ) ; }
41016	public final int size ( ) { return m_firstFree ; }
41097	public void destroyToken ( SSOToken destroyer , SSOToken destroyed ) throws SSOException { getProvider ( destroyer ) . destroyToken ( destroyer , destroyed ) ; }
41144	public void clear ( ) { cache . evictAll ( ) ; }
41152	public void assignRole ( AMRole role ) throws AMException , SSOException { assignRole ( role . getDN ( ) ) ; }
41162	public void stopMasking ( ) { this . stop = _BOOL ; }
41193	public void endEntity ( String name ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # endEntity : _CHAR + name ) ; if ( _NULL != m_lexicalHandler ) { m_lexicalHandler . endEntity ( name ) ; } }
41201	boolean solveConflict ( ) { return solveConflictFlag ; }
41233	public boolean isCaptchaEnabled ( ) { return captchaEnabled ; }
41253	public static LineString fromPolyline ( String polyline , int precision ) { return new LineString ( PolylineUtils . decode ( polyline , precision ) ) ; }
41260	private static int indexFor ( int h , int length ) { return h & ( length - _NUM ) ; }
41288	public static Artwork createLinkedArtworkFromURL ( String link ) throws IOException { return AndroidArtwork . createLinkedArtworkFromURL ( link ) ; }
41295	@ Override @ Deprecated public void log ( Exception exception , String message ) { log ( message , exception ) ; }
41313	@ Override public String toString ( ) { return _CHAR ( _CHAR + exp1 + _CHAR ) _CHAR + relOpString ( ) + _CHAR ( _CHAR + exp2 + _CHAR ) _CHAR ; }
41350	public ValueExp apply ( ObjectName name ) throws BadStringOperationException , BadBinaryOpValueExpException , BadAttributeValueExpException , InvalidApplicationException { return this ; }
41355	public static ComponentUI createUI ( JComponent c ) { return new SynthFormattedTextFieldUI ( ) ; }
41370	private void verifyPackage ( String packageName ) throws Exception { if ( ! mValidPackages . contains ( packageName ) ) { throw new Exception ( _CHAR Package not available _CHAR ) ; } }
41386	private void drawUnderlyingViews ( ) { if ( windowBackground != _NULL ) { windowBackground . draw ( internalCanvas ) ; } rootView . draw ( internalCanvas ) ; }
41409	public void windowActivated ( WindowEvent e ) { }
41413	public final boolean hasSdCard ( ) { return Environment . MEDIA_MOUNTED . equals ( Environment . getExternalStorageState ( ) ) ; }
41415	public String encode ( ) { String retval = Long . toString ( time ) ; retval += Separators . SP ; if ( sign != _NULL ) retval += sign ; retval += offset . encode ( ) ; return retval ; }
41418	public boolean hasErrors ( ) { return ! errorList . isEmpty ( ) ; }
41431	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException e ) { PrivilegeManager . debug . error ( _CHAR EntitlementSubjectImpl . toString _CHAR , e ) ; } return s ; }
41469	public void run ( ) throws ClientException { headerDisplayed = _BOOL ; runStartNowOrSchedule ( ) ; runCompletionNotification ( ) ; runErrorNotification ( ) ; runDependency ( ) ; if ( ! uData . getDependencyIds ( ) . isEmpty ( ) ) { runFailedDependencyAction ( ) ; } }
41521	public void hide ( ) { LayoutParams lp = ( LayoutParams ) mContentView . getLayoutParams ( ) ; lp . height = _NUM ; mContentView . setLayoutParams ( lp ) ; }
41529	public String toBackslashed ( ) { return Joiner . on ( _CHAR \\ _CHAR ) . join ( pathPieces ) ; }
41548	public void addSessionListener ( Session session , String url ) throws SessionException { sessionOperationStrategy . getOperation ( session . getSessionID ( ) ) . addSessionListener ( session , url ) ; }
41552	public static StorageStatus lockedDown ( LocalizableMessage reason ) { return new StorageStatus ( Code . LOCKED_DOWN , reason ) ; }
41590	protected void enableClusteredSession ( Router router ) { router . route ( ) . handler ( CookieHandler . create ( ) ) ; router . route ( ) . handler ( SessionHandler . create ( ClusteredSessionStore . create ( vertx , _CHAR shopping . user . session _CHAR ) ) ) ; }
41592	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ caseSensitivity = _CHAR + caseSensitivity + _CHAR ] _CHAR ; }
41610	public Object clone ( ) throws CloneNotSupportedException { InternationalFormatter formatter = ( InternationalFormatter ) super . clone ( ) ; formatter . literalMask = _NULL ; formatter . iterator = _NULL ; formatter . validMask = _BOOL ; formatter . string = _NULL ; return formatter ; }
41643	public boolean hasDynamicAttributes ( ) { return dynamicAttributes ; }
41651	public static void closeSession ( ) throws HibernateException { Session session = ( Session ) threadLocal . get ( ) ; threadLocal . set ( _NULL ) ; if ( session != _NULL ) { session . close ( ) ; } }
41703	private boolean checkParameters ( DirectoryRMIServerSocketFactory that ) { return needClientCertificate == that . needClientCertificate && sslSocketFactory . equals ( that . sslSocketFactory ) ; }
41716	public Block next ( ) { scan ( ) ; if ( currentBlock <= - _NUM ) { throw new NoSuchElementException ( ) ; } else { return blockQueue [ currentBlock -- ] ; } }
41729	public void paintSpinnerBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
41734	public Builder names ( final Collection < String > names ) { this . names . addAll ( names ) ; return this ; }
41754	private void loadConfiguration ( ) { mClientId = mConfigurationManager . getString ( PREF_CLIENT_ID , _CHAR _CHAR ) ; mClientKey = mConfigurationManager . getString ( PREF_CLIENT_KEY , _CHAR _CHAR ) ; Timber . i ( _CHAR loaded HoundifyCommandManager configuration _CHAR ) ; }
41763	public boolean isDone ( ) { TaskState ts = getTaskState ( ) ; return ts != _NULL && TaskState . isDone ( ts ) ; }
41775	public boolean bool ( ) { return _BOOL ; }
41801	@ Override public String toSQL ( ) { return sb . toString ( ) ; }
41804	public synchronized void removeObject ( NSObject obj ) { set . remove ( obj ) ; }
41805	public static UUID parseStringAsUUID ( String in ) throws IndexParseFieldException { try { return UUID . fromString ( in ) ; } catch ( IllegalArgumentException e ) { throw new IndexParseFieldException ( in , e ) ; } }
41811	protected void release ( PooledConnection con ) { if ( con == _NULL ) return ; try { con . lock ( ) ; if ( con . release ( ) ) { size . addAndGet ( - _NUM ) ; con . setHandler ( _NULL ) ; } } finally { con . unlock ( ) ; } if ( waitcount . get ( ) > _NUM ) { idle . offer ( create ( _BOOL ) ) ; } }
41818	public boolean addOperation ( Operation operation ) { if ( isRunning ) { if ( operationHandlerThreadHandler == _NULL ) return _BOOL ; return operationHandlerThreadHandler . post ( new AndroidOperation ( this , operation ) ) ; } else { return operationQueue . add ( new AndroidOperation ( this , operation ) ) ; } }
41824	protected ViewListener createViewListener ( ) { return new ViewListener ( ) ; }
41847	public void addSubject ( String subjectName , Subject subject ) throws NameAlreadyExistsException , InvalidNameException , PolicyException , SSOException { addSubject ( subjectName , subject , _BOOL ) ; }
41864	public void processingInstruction ( String target , String data ) throws SAXException { if ( documentHandler != _NULL ) documentHandler . processingInstruction ( target , data ) ; }
41872	protected Rectangle applyMargins ( Rectangle rect , float [ ] margins , boolean reverse ) { if ( isPositioned ( ) ) return rect ; return rect . < Rectangle > applyMargins ( margins [ _NUM ] , margins [ _NUM ] , margins [ _NUM ] , margins [ _NUM ] , reverse ) ; }
41878	public static boolean isFederationCancelled ( HttpServletRequest request ) { String status = request . getParameter ( IFSConstants . TERMINATION_STATUS ) ; if ( status != _NULL && status . equalsIgnoreCase ( IFSConstants . CANCEL ) ) { return _BOOL ; } else { return _BOOL ; } }
41905	public static boolean isNumeric ( String s ) { try { Double . parseDouble ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
41914	public boolean isSigned ( ) { return isSigned ; }
41934	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { SavedTopStoryDao . createTable ( db , ifNotExists ) ; SavedStoryDao . createTable ( db , ifNotExists ) ; SavedDailyDetailDao . createTable ( db , ifNotExists ) ; }
41947	@ Override public synchronized int available ( ) { return count - pos ; }
41967	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
41994	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
41999	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
42007	public ByteArrayBuilder appendCSN ( CSN csn ) { csn . toByteString ( builder ) ; return this ; }
42021	public String toString ( ) { StringBuilder toString = new StringBuilder ( ) . append ( _CHAR Thread Name : _CHAR ) . append ( thread . getName ( ) ) . append ( _CHAR , Alive : _CHAR ) . append ( thread . isAlive ( ) ) ; return toString . toString ( ) ; }
42038	public boolean isPolicyModified ( ) { return isModified ; }
42056	protected GenericObject next ( ListIterator iterator ) { try { return ( GenericObject ) iterator . next ( ) ; } catch ( NoSuchElementException ex ) { return _NULL ; } }
42092	@ Override public int hashCode ( ) { return ( month << _NUM ) + day ; }
42094	public void addAttribute ( Object name , Object value ) { table . put ( name , value ) ; }
42099	private void sendError ( HttpServletRequest request , HttpServletResponse response ) { try { FSUtils . forwardRequest ( request , response , errorPage ) ; } catch ( Exception exp ) { FSUtils . debug . error ( _CHAR FSPreLogin : : sendError _CHAR + _CHAR Error during sending error page _CHAR ) ; } }
42102	private boolean isRecordFileExist ( ) { String fileName = _NULL ; fileName = mService . getRecordingNameWithPath ( ) ; File recordingFileToSave = new File ( fileName + FmRecorder . RECORDING_FILE_EXTENSION ) ; return recordingFileToSave . exists ( ) ; }
42106	public int plaline_len ( int offset ) { return lines_list . size ( ) + offset ; }
42116	public void fireEndEntity ( String name ) throws org . xml . sax . SAXException { if ( m_tracer != _NULL ) flushMyWriter ( ) ; }
42138	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { PictureInfoDao . dropTable ( db , ifExists ) ; }
42160	public Builder withEventTopicsMetaData ( EventTopicsMetaData eventTopicsMetaData ) { this . eventTopicsMetaData = eventTopicsMetaData ; return this ; }
42182	@ Deprecated public String toString ( ) { return name ; }
42197	public final void pushContextNodeList ( DTMIterator nl ) { m_contextNodeLists . push ( nl ) ; }
42206	private String s ( Integer val ) { return String . valueOf ( val ) ; }
42219	public static boolean isASCII ( String input ) { if ( input == _NULL ) { return _BOOL ; } for ( int i = _NUM ; i < input . length ( ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > _NUM ) { return _BOOL ; } } return _BOOL ; }
42228	public void reportEvent ( ValidatableObject source , String formattedMessage ) throws AbortSerializationException { reportEvent ( source , new ValidationEventImpl ( ValidationEvent . ERROR , formattedMessage , new ValidationEventLocatorImpl ( source ) ) ) ; }
42233	protected IRoutingResult < R > prepareNotFoundRouting ( Object exchange , R requestContext ) { return prepareNotFoundRouting ( exchange , requestContext , _BOOL ) ; }
42234	public boolean isMutable ( ) { return isMutable ; }
42273	public AnnotationVisitor visitAnnotation ( String desc , boolean visible ) { if ( fv != _NULL ) { return fv . visitAnnotation ( desc , visible ) ; } return _NULL ; }
42278	public String str ( ) { String str = m_DTMXRTreeFrag . getDTM ( ) . getStringValue ( m_dtmRoot ) . toString ( ) ; return ( _NULL == str ) ? _CHAR _CHAR : str ; }
42290	public StringBuilder encodeBody ( StringBuilder retval ) { return callId . encode ( retval ) ; }
42293	@ Override public void closeJDBCConn ( ) { if ( conn != _NULL ) { try { System . out . println ( _CHAR StreamingQuoteDAOModeQuote . closeJDBCConn ( ) : Closing JDBC connection for Streaming Quote ... '' ) ; conn . close ( ) ; } catch ( SQLException e ) { System . out . println ( _CHAR StreamingQuoteDAOModeQuote . closeJDBCConn ( ) : SQLException on conn close _CHAR ) ; e . printStackTrace ( ) ; } } else { System . out . println ( _CHAR StreamingQuoteDAOModeQuote . closeJDBCConn ( ) : WARNING : DB connection already _NULL _CHAR ) ; } }
42297	public PdfCanvas closePathStroke ( ) { contentStream . getOutputStream ( ) . writeBytes ( s ) ; return this ; }
42312	public void preSendFailureResponse ( HttpServletRequest request , HttpServletResponse response , String faultCode , String faultDetail ) throws SAML2Exception { }
42334	public ArrayDeque < E > clone ( ) { try { @ SuppressWarnings ( _CHAR unchecked _CHAR ) ArrayDeque < E > result = ( ArrayDeque < E > ) super . clone ( ) ; result . elements = Arrays . copyOf ( elements , elements . length ) ; return result ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( ) ; } }
42337	private void resetDoubleBufferPerWindow ( ) { if ( bufferInfos != _NULL ) { dispose ( bufferInfos ) ; bufferInfos = _NULL ; repaintManager . setPaintManager ( _NULL ) ; } }
42339	public void removeAllSections ( ) { this . sections . clear ( ) ; }
42362	public String str ( ) { throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER , _NULL ) ) ; }
42364	private CompletionStage < Done > prepareWriteCargo ( CassandraSession session ) { return session . prepare ( _CHAR INSERT INTO cargo ( cargoId , name , description , owner , destination ) VALUES ( ? , ? , ? , ? , ? ) _CHAR ) . thenApply ( _NULL ) ; }
42389	public Builder superiorObjectClasses ( final String ... objectClassNamesOrOIDs ) { this . superiorClasses . addAll ( asList ( objectClassNamesOrOIDs ) ) ; return this ; }
42398	public Observable < Long > cardByTypeObservable ( String type , JobState state ) { io . vertx . rx . java . ObservableFuture < Long > handler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; cardByType ( type , state , handler . toHandler ( ) ) ; return handler ; }
42415	@ Override public void displayMessage ( LocalizableMessage msg ) { schemaElementPanel = _NULL ; noEntryPanel . setMessage ( msg ) ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , NOTHING_SELECTED ) ; }
42466	public void paintSliderBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
42507	static public void assertEquals ( int expected , int actual ) { assertEquals ( _NULL , expected , actual ) ; }
42517	static public Tasker create ( ) { return new Tasker ( ) ; }
42522	public void onStop ( final FileAlterationObserver observer ) { }
42526	private void delEntry ( DN dn ) throws Exception { connection . processDelete ( dn ) ; assertNull ( getEntry ( dn , _NUM , _BOOL ) ) ; }
42579	private void putBackDefaultAggregationDefinitionFromTargetEnabled ( ) { TestCfg . removeConstraint ( aggregationPropertyDefinitionTargetMustBeEnabled . getSourceConstraint ( ) ) ; TestCfg . addPropertyDefinition ( aggregationPropertyDefinitionDefault ) ; TestCfg . addConstraint ( aggregationPropertyDefinitionDefault . getSourceConstraint ( ) ) ; }
42592	public static boolean exists ( ) { return getFile ( ) . exists ( ) ; }
42608	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
42609	public SSOToken createSSOToken ( String tokenId ) throws SSOException , UnsupportedOperationException { return createSSOToken ( tokenId , _BOOL ) ; }
42626	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { ChatCacheEntityDao . createTable ( db , ifNotExists ) ; }
42640	public void clearPasswordExpirationWarnedTime ( ) { operations . add ( PasswordPolicyStateOperationType . CLEAR_PASSWORD_EXPIRATION_WARNED_TIME ) ; }
42665	public static boolean isCookieSecure ( ) { return secureCookie ; }
42672	private void createComponents ( ) { noSuffixLabel = UIFactory . makeJLabel ( UIFactory . IconType . NO_ICON , INFO_SUFFIX_LIST_EMPTY . get ( ) , UIFactory . TextStyle . SECONDARY_FIELD_VALID ) ; }
42716	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { s . defaultReadObject ( ) ; int n = s . readInt ( ) ; values = new Vector < > ( n ) ; while ( -- n >= _NUM ) { values . addElement ( s . readObject ( ) ) ; } }
42724	public void paintSpinnerBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
42727	public boolean isMutable ( ) { return mutable ; }
42769	public void selectText ( int startIndex , int endIndex ) { AccessibleEditableText at = getEditorAccessibleEditableText ( ) ; if ( at != _NULL ) { at . selectText ( startIndex , endIndex ) ; } }
42776	public static boolean matchResources ( Set < String > resources , ResourceType resourceType , ResourceName resourceComparator ) { for ( String resource : resources ) { if ( matchResource ( resource , resourceType , resourceComparator ) ) { return _BOOL ; } } return _BOOL ; }
42794	@ Override public void close ( ) { if ( ! closed ) { while ( ! stack . isEmpty ( ) ) { pop ( ) ; } closed = _BOOL ; } }
42820	public Builder superiorRules ( final int ... superiorRuleIDs ) { for ( int ruleID : superiorRuleIDs ) { this . superiorRuleIDs . add ( ruleID ) ; } return this ; }
42863	public boolean hasCredentials ( ) { return _hasCredentials ; }
42905	@ Override public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ value = _CHAR + value + _CHAR ; }
42914	public static void main ( String [ ] args ) { int retCode = mainExportLDIF ( args , _BOOL , System . out , System . err ) ; if ( retCode != _NUM ) { System . exit ( filterExitCode ( retCode ) ) ; } }
42919	public static < E extends Enum < E >> Builder < E > createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder < > ( d , propertyName ) ; }
42939	private void rotateScreen ( ) { final Context context = InstrumentationRegistry . getTargetContext ( ) ; final int orientation = context . getResources ( ) . getConfiguration ( ) . orientation ; Activity activity = activityRule . getActivity ( ) ; activity . setRequestedOrientation ( ( orientation == Configuration . ORIENTATION_PORTRAIT ) ? ActivityInfo . SCREEN_ORIENTATION_LANDSCAPE : ActivityInfo . SCREEN_ORIENTATION_PORTRAIT ) ; }
42957	public static NSObject parse ( File f ) throws IOException , PropertyListFormatException { return parse ( new FileInputStream ( f ) ) ; }
42979	private void DTDprolog ( ) throws SAXException , IOException { final java . io . Writer writer = m_writer ; if ( m_needToOutputDocTypeDecl ) { outputDocTypeDecl ( m_elemContext . m_elementName , _BOOL ) ; m_needToOutputDocTypeDecl = _BOOL ; } if ( m_inDoctype ) { writer . write ( _CHAR [ _CHAR ) ; writer . write ( m_lineSep , _NUM , m_lineSepLen ) ; m_inDoctype = _BOOL ; } }
42994	public void write ( ) throws IOException , BadLocationException { styleNameMapping = new Hashtable < String , String > ( ) ; writeStartTag ( _CHAR < html > _CHAR ) ; writeHeader ( ) ; writeBody ( ) ; writeEndTag ( _CHAR < / html > _CHAR ) ; }
42998	public static final Table createTestTable ( ) { Table t = new Table ( ) ; t . setName ( _CHAR mytable _CHAR ) ; t . setDatabaseByString ( Fixtures . DB ) ; t . setDescription ( _CHAR My Table stores a lot of data . '' ) ; return t ; }
43059	public void clearMarkers ( ) { mGoogleMap . clear ( ) ; markers . clear ( ) ; }
43086	private static void checkNotNull ( Object v ) { if ( v == _NULL ) throw new NullPointerException ( ) ; }
43112	public int size ( ) { int len = getArrayLength ( ) - ( getGapEnd ( ) - getGapStart ( ) ) ; return len ; }
43117	@ Override public int hashCode ( ) { int yearValue = prolepticYear ; int monthValue = monthOfYear ; int dayValue = dayOfMonth ; return getChronology ( ) . getId ( ) . hashCode ( ) ^ ( yearValue & _NUM ) ^ ( ( yearValue << _NUM ) + ( monthValue << _NUM ) + ( dayValue ) ) ; }
43119	public void addListener ( AMClientDataListener cdl ) { synchronized ( listeners ) { if ( ! listeners . contains ( cdl ) ) { listeners . add ( cdl ) ; } } }
43124	public boolean contains ( int index ) { return index >= getFirst ( ) && index <= getLast ( ) ; }
43127	public Object clone ( ) { UserSelfCheckCondition theClone = _NULL ; try { theClone = ( UserSelfCheckCondition ) super . clone ( ) ; theClone . properties = Collections . unmodifiableMap ( com . sun . identity . sm . SMSUtils . copyAttributes ( properties ) ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } return theClone ; }
43180	public void decrementMaxForwards ( ) throws TooManyHopsException { if ( maxForwards > _NUM ) maxForwards -- ; else throw new TooManyHopsException ( _CHAR has already reached _NUM ! _CHAR ) ; }
43186	public void remove ( AbstractButton b ) { if ( b == _NULL ) { return ; } buttons . removeElement ( b ) ; if ( b . getModel ( ) == selection ) { selection = _NULL ; } b . getModel ( ) . setGroup ( _NULL ) ; }
43208	public static Artwork createArtworkFromFile ( File file ) throws IOException { return AndroidArtwork . createArtworkFromFile ( file ) ; }
43274	public static String read ( String fileName ) { return read ( fileName , Resource . class ) ; }
43283	public static NSObject parse ( File f ) throws IOException , ParseException { return parse ( new FileInputStream ( f ) ) ; }
43309	public boolean isEmpty ( ) { return getData ( ) <= CAULDRON_EMPTY ; }
43312	public int length ( ) { return namesAndValues . size ( ) / _NUM ; }
43361	protected final void copyAttributes ( final int nodeID , SerializationHandler handler ) throws SAXException { for ( int current = getFirstAttributeIdentity ( nodeID ) ; current != DTM . NULL ; current = getNextAttributeIdentity ( current ) ) { int eType = _exptype2 ( current ) ; copyAttribute ( current , eType , handler ) ; } }
43378	public void skippedEntity ( String name ) throws org . xml . sax . SAXException { }
43383	public void unassignService ( String serviceName ) throws SMSException { removeServiceConfig ( serviceName ) ; }
43388	public void handleTblServerConfigXMLUserButtonAddRequest ( RequestInvocationEvent event ) throws ModelControlException { ServerConfigXMLAddServerViewBean vb = ( ServerConfigXMLAddServerViewBean ) getViewBean ( ServerConfigXMLAddServerViewBean . class ) ; unlockPageTrail ( ) ; vb . setPageSessionAttribute ( ServerConfigXMLAddServerViewBean . PG_ATTR_SERVER_GROUP_TYPE , DSConfigMgr . DEFAULT ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
43413	public static boolean isPrintingAllowed ( int permissions ) { return ( EncryptionConstants . ALLOW_PRINTING & permissions ) == EncryptionConstants . ALLOW_PRINTING ; }
43445	@ Override public String toString ( ) { return _CHAR ( _CHAR + exp1 + _CHAR ) and ( _CHAR + exp2 + _CHAR ) _CHAR ; }
43455	public boolean asksAllowsChildren ( ) { return asksAllowsChildren ; }
43468	@ Override public String toString ( ) { StringBuilder buf = new StringBuilder ( ) ; buf . append ( _CHAR Transition [ _CHAR ) . append ( isGap ( ) ? _CHAR Gap _CHAR : _CHAR Overlap _CHAR ) . append ( _CHAR at _CHAR ) . append ( transition ) . append ( offsetBefore ) . append ( _CHAR to _CHAR ) . append ( offsetAfter ) . append ( _CHAR ) ; return buf . toString ( ) ; }
43480	@ Override public Context createSubcontext ( String name ) throws NamingException { return getBoundContext ( ) . createSubcontext ( parseName ( name ) ) ; }
43487	private void whenAbortReturnTrue ( LoginModule ... modules ) throws LoginException { for ( LoginModule module : modules ) { when ( module . abort ( ) ) . thenReturn ( _BOOL ) ; } }
43499	public final int length ( ) { return array . length ; }
43510	public void remove ( RxAction action ) { Pair < Integer , Subscription > old = mMap . remove ( action . getType ( ) ) ; if ( old != _NULL && ! old . second . isUnsubscribed ( ) ) old . second . unsubscribe ( ) ; }
43521	public boolean isClosed ( ) { return isClosed ; }
43525	public int count ( ) { return part_arr . size ( ) ; }
43557	public double num ( ) { return _NUM . _NUM ; }
43565	public void initialize ( String hostedEntityID , String realm ) { }
43578	protected void callSubtreeVisitors ( XPathVisitor visitor ) { m_functionExpr . callVisitors ( new FunctionOwner ( ) , visitor ) ; super . callSubtreeVisitors ( visitor ) ; }
43587	public void treeStructureChanged ( TreeModelEvent e ) { fireVisibleDataPropertyChange ( ) ; }
43626	protected void usage ( ) { System . out . println ( _CHAR usage : java org . apache . catalina . startup . Catalina _CHAR + _CHAR [ - config { pathname } ] _CHAR + _CHAR [ - nonaming ] _CHAR + _CHAR { - help | start | stop } _CHAR ) ; }
43630	public Object clone ( ) { SearchTemplate t = ( SearchTemplate ) super . clone ( ) ; if ( m_attrSet != _NULL ) { t . setAttributeSet ( ( AttrSet ) m_attrSet . clone ( ) ) ; } if ( m_searchFilter != _NULL ) { t . setSearchFilter ( m_searchFilter ) ; } return t ; }
43655	public void paintPanelBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
43674	public static ValueExpression createValueExceptionWithValue ( final Object originalValue ) { return FacesContext . getCurrentInstance ( ) . getApplication ( ) . getExpressionFactory ( ) . createValueExpression ( originalValue , originalValue . getClass ( ) ) ; }
43742	public PlaDirection opposite ( ) { return new PlaDirection ( - dir_x , - dir_y , is_NaN ) ; }
43791	public static < V > boolean isEmpty ( V [ ] sourceArray ) { return ( sourceArray == _NULL || sourceArray . length == _NUM ) ; }
43794	public static int extractPortNumber ( final long socketIdentifier ) { return ( int ) ( ( socketIdentifier >> _NUM ) & _NUM ) ; }
43795	public void visit ( int version , int access , String name , String signature , String superName , String [ ] interfaces ) { if ( cv != _NULL ) { cv . visit ( version , access , name , signature , superName , interfaces ) ; } }
43832	public void visitSource ( String source , String debug ) { if ( cv != _NULL ) { cv . visitSource ( source , debug ) ; } }
43838	public static boolean isMethodDirectlyExists ( Object object , String methodName , Class < ? > ... params ) { try { Method method = object . getClass ( ) . getMethod ( methodName , params ) ; return _BOOL ; } catch ( NoSuchMethodException e ) { return _BOOL ; } catch ( SecurityException e ) { throw new RuntimeException ( e ) ; } }
43842	public String toLowerCamel ( ) { return toCamel ( CaseFormat . LOWER_CAMEL ) ; }
43845	public void handleMessage ( @ NotNull IUser user , @ NotNull TLMessage message ) { try { handleMessageInternal ( user , message . getMessage ( ) ) ; } catch ( RpcException e ) { BotLogger . severe ( LOGTAG , e ) ; } }
43855	public boolean hasStreams ( ) { return streams . size ( ) > _NUM ; }
43931	public Builder removeName ( final String name ) { names . remove ( name ) ; return this ; }
43932	public void fill_ellipse ( PlaEllipse p_ellipse , Graphics p_g , Color p_color , double p_translucency_factor ) { PlaEllipse [ ] ellipse_arr = new PlaEllipse [ _NUM ] ; ellipse_arr [ _NUM ] = p_ellipse ; fill_ellipse_arr ( ellipse_arr , p_g , p_color , p_translucency_factor ) ; }
43948	public String toString ( ) { StringBuilder a = new StringBuilder ( ) ; String separator = _CHAR , '' ; for ( CoreTokenField field : getReturnFields ( ) ) { a . append ( field . toString ( ) ) . append ( separator ) ; } return MessageFormat . format ( _CHAR TokenFilter : Filter : [ { _NUM } ] Attributes : { _NUM } _CHAR , query , a ) ; }
43958	@ Override public void displayMessage ( LocalizableMessage msg ) { noEntryPanel . setMessage ( msg ) ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , noEntryPanelTitle ) ; }
43961	public static boolean isBlank ( final String s ) { return ( s == _NULL || s . trim ( ) . length ( ) == _NUM ) ; }
43970	public final ShapeTile [ ] calculate_tree_shapes ( BrdTraceJoin p_join ) { ShapeTile [ ] result = new ShapeTile [ _NUM ] ; result [ _NUM ] = p_join . get_shape ( ) ; return result ; }
43973	public void sessionInvalidated ( Object session ) { FSLogoutUtil . removeTokenFromSession ( session , metaAlias ) ; }
43986	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
43990	public XMLString xstr ( ) { throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER , _NULL ) ) ; }
44004	private void whenLoginReturnFalse ( LoginModule ... modules ) throws LoginException { for ( LoginModule module : modules ) { when ( module . login ( ) ) . thenReturn ( _BOOL ) ; } }
44010	public static boolean isEnabled ( ) { return _CHAR _NUM _CHAR . equals ( FileUtils . readOneLine ( CONTROL_PATH ) ) ; }
44022	@ Override public void nullifyUsedVars ( ) { bundle = _NULL ; sharedState = _NULL ; options = _NULL ; serviceStatus = _NULL ; defaultRoles = _NULL ; userID = _NULL ; userName = _NULL ; userAttrs = _NULL ; regEx = _NULL ; callbacks = _NULL ; }
44031	@ Override public int hashCode ( ) { return getChronology ( ) . getId ( ) . hashCode ( ) ^ isoDate . hashCode ( ) ; }
44041	public void dump ( String context ) throws KeyStoreException , NoSuchAlgorithmException { dump ( context , keyStore , keyPassword ) ; }
44045	public void handleButton3Request ( RequestInvocationEvent event ) throws ModelControlException { returnToHomePage ( ) ; }
44046	public final boolean isPostdated ( ) { return flags [ POSTDATED_TICKET_FLAG ] ; }
44052	public boolean isSiteUp ( String siteId ) { return servicesClusterMonitorHandler . isSiteUp ( siteId ) ; }
44103	@ Override public String toString ( ) { return super . toString ( ) ; }
44138	public XMLString xstr ( ) { if ( _NULL == m_xmlStr ) m_xmlStr = m_DTMXRTreeFrag . getDTM ( ) . getStringValue ( m_dtmRoot ) ; return m_xmlStr ; }
44166	public Boolean isConfidential ( ) { return confidential ; }
44185	public boolean isBottomCollided ( ) { return isBottomCollided ; }
44196	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { GreenNewsDao . createTable ( db , ifNotExists ) ; GreenStrategyDao . createTable ( db , ifNotExists ) ; GreenUpdateDao . createTable ( db , ifNotExists ) ; GreenVideoDao . createTable ( db , ifNotExists ) ; GreenWatchedVideoDao . createTable ( db , ifNotExists ) ; }
44207	@ Override protected void handleOutput ( String output ) { if ( redirectOutput ) { if ( redirectOutPrintStream == _NULL ) { openRedirector ( ) ; } redirectOutPrintStream . println ( output ) ; if ( alwaysLog ) { log ( output , Project . MSG_INFO ) ; } } else { log ( output , Project . MSG_INFO ) ; } }
44257	public MapCursor addCursor ( MapCursor cursor ) { cursors . add ( cursor ) ; return cursor ; }
44263	public boolean verifyXMLSignature ( java . lang . String xmlString , java . lang . String certAlias ) throws XMLSignatureException { return verifyXMLSignature ( xmlString , DEF_ID_ATTRIBUTE , certAlias ) ; }
44272	public void endDTD ( ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # endDTD _CHAR ) ; if ( _NULL != m_lexicalHandler ) { m_lexicalHandler . endDTD ( ) ; } }
44274	public static SearchRequest newSearchRequest ( final String name , final SearchScope scope , final String filter ) throws DirectoryException { return newSearchRequest ( DN . valueOf ( name ) , scope , SearchFilter . createFilterFromString ( filter ) ) ; }
44277	private static final boolean compareAndSetNext ( Node node , Node expect , Node update ) { return unsafe . compareAndSwapObject ( node , nextOffset , expect , update ) ; }
44296	public boolean isCaptchaEnabled ( ) { return captchaEnabled ; }
44316	public int hashCode ( ) { return name . hashCode ( ) ; }
44317	public char first ( ) { pos = begin ; return current ( ) ; }
44350	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
44393	public boolean hasFlicker ( ) { return flicker ; }
44402	public void run ( ) { if ( Debug . messageEnabled ( ) ) { Debug . message ( tableName + _CHAR : DBHandler : TimeBufferingTask . run ( ) called _CHAR ) ; } nonBlockingFlush ( ) ; }
44405	public static boolean isFavoriteStation ( Context context , int iStation ) { return isStationExist ( context , iStation , STATION_TYPE_FAVORITE ) ; }
44415	private int readContent ( InputStream is ) { int nread = _NUM ; log ( _CHAR Read content _CHAR ) ; String lengthString = headers . get ( requestHeaders [ REQ_CONTENT_LENGTH ] ) ; int length = new Integer ( lengthString ) . intValue ( ) ; length = readData ( is , length ) ; return length ; }
44422	public int size ( ) { return map . size ( ) ; }
44426	public final int length ( ) { return array . length ; }
44444	public static Bitmap resizeImageInFixedSize ( Bitmap image , int width , int height ) { if ( image == _NULL ) { throw new NullPointerException ( _CHAR Bitmap not set ! _CHAR ) ; } return Bitmap . createScaledBitmap ( image , width , height , _BOOL ) ; }
44453	protected String sessions ( ContextName cn , int idle , StringManager smClient ) { StringWriter stringWriter = new StringWriter ( ) ; PrintWriter printWriter = new PrintWriter ( stringWriter ) ; super . sessions ( printWriter , cn , idle , smClient ) ; return stringWriter . toString ( ) ; }
44456	public static ValidatingUnmarshaller create ( Grammar grammar , SAXUnmarshallerHandler _core , Locator locator ) { Verifier v = new Verifier ( new REDocumentDeclaration ( grammar ) , new ErrorHandlerAdaptor ( _core , locator ) ) ; v . setPanicMode ( _BOOL ) ; return new ValidatingUnmarshaller ( new VerifierFilter ( v ) , _core ) ; }
44465	@ DataProvider ( name = _CHAR v6Matches1 _CHAR ) public Object [ ] [ ] v6MatchData1 ( ) { return new Object [ ] [ ] { { _CHAR _NUM : _NUM : _NUM : cd3f : _NUM : _NUM : _NUM : DC30 _CHAR } , { _CHAR _NUM : : cd3f : _NUM : _NUM : _NUM : dc30 _CHAR } } ; }
44475	protected void fireStartDoc ( ) throws org . xml . sax . SAXException { if ( m_tracer != _NULL ) { flushMyWriter ( ) ; m_tracer . fireGenerateEvent ( SerializerTrace . EVENTTYPE_STARTDOCUMENT ) ; } }
44498	protected AbstractConnPool createConnectionPool ( final HttpParams params ) { AbstractConnPool acp = new ConnPoolByRoute ( connOperator , params ) ; boolean conngc = _BOOL ; if ( conngc ) { acp . enableConnectionGC ( ) ; } return acp ; }
44503	public void paintMenuBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
44521	public void addHeader ( String name , String value ) { header . put ( name , value ) ; }
44534	public static void pickImage ( Context context , android . support . v4 . app . Fragment fragment ) { pickImage ( context , fragment , REQUEST_PICK ) ; }
44559	boolean isCaseSensitive ( ) { return caseSensitive ; }
44582	public FieldVisitor visitField ( int access , String name , String desc , String signature , Object value ) { if ( cv != _NULL ) { return cv . visitField ( access , name , desc , signature , value ) ; } return _NULL ; }
44600	public String toXMLString ( ) throws XACMLException { return this . toXMLString ( _BOOL , _BOOL ) ; }
44607	public boolean isMutable ( ) { return isMutable ; }
44636	public boolean isAnonymous ( ) { if ( keyExchange == KEY_EXCHANGE_DH_anon || keyExchange == KEY_EXCHANGE_DH_anon_EXPORT || keyExchange == KEY_EXCHANGE_ECDH_anon ) { return _BOOL ; } return _BOOL ; }
44640	public static final byte [ ] encode ( byte [ ] src ) { return encode ( src , _NUM ) ; }
44645	@ Override public int hashCode ( ) { return this . username != _NULL ? this . username . hashCode ( ) : _NUM ; }
44685	public boolean deleteOldRdn ( ) { return deleteOldRdn ; }
44733	public boolean postSingleSignOnFailure ( String hostedEntityID , String realm , HttpServletRequest request , HttpServletResponse response , AuthnRequest authnRequest , Response ssoResponse , String profile , int failureCode ) { return _BOOL ; }
44736	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { UrlCollectDao . createTable ( db , ifNotExists ) ; CustomerDao . createTable ( db , ifNotExists ) ; OrderDao . createTable ( db , ifNotExists ) ; }
44744	public final int size ( ) { return m_firstFree ; }
44749	@ Override public void closeJDBCConn ( ) { if ( conn != _NULL ) { try { System . out . println ( _CHAR StreamingQuoteDAOModeLtp . closeJDBCConn ( ) : Closing JDBC connection for Streaming Quote ... '' ) ; conn . close ( ) ; } catch ( SQLException e ) { System . out . println ( _CHAR StreamingQuoteDAOModeLtp . closeJDBCConn ( ) : SQLException on conn close _CHAR ) ; e . printStackTrace ( ) ; } } else { System . out . println ( _CHAR StreamingQuoteDAOModeLtp . closeJDBCConn ( ) : WARNING : DB connection already _NULL _CHAR ) ; } }
44751	public static void access ( Level level , String msgid , String data [ ] ) { access ( level , msgid , data , _NULL ) ; }
44788	private void stopScan ( ) { if ( mIsScanning ) { mScanButton . setText ( R . string . scanner_action_scan ) ; final BluetoothLeScannerCompat scanner = BluetoothLeScannerCompat . getScanner ( ) ; scanner . stopScan ( scanCallback ) ; mIsScanning = _BOOL ; } }
44818	public void clear ( ) { map . clear ( ) ; }
44830	public final void popSubContextList ( ) { m_axesIteratorStack . pop ( ) ; }
44845	public Builder removeName ( String name ) { this . names . remove ( name ) ; return this ; }
44883	@ Override public void initialize ( MessagePolicy requestPolicy , MessagePolicy responsePolicy , CallbackHandler handler , Map < String , Object > options ) throws AuthenticationException { this . handler = handler ; }
44890	public void endDTD ( ) throws org . xml . sax . SAXException { m_inDTD = _BOOL ; }
44893	public synchronized boolean hasChanged ( ) { return changed ; }
44903	public void endElement ( String uri , String localName , String qName ) throws SAXException { if ( documentHandler != _NULL ) documentHandler . endElement ( qName ) ; }
44915	@ Override public void onLoaderReset ( Loader < Cursor > loader ) { mAdapter . swapCursor ( _NULL ) ; }
44927	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { UserDao . createTable ( db , ifNotExists ) ; }
44931	public boolean isMutable ( ) { return isMutable ; }
44935	public String toString ( ) { return name ; }
44951	private void update ( DbEntry item ) { mTempValues . clear ( ) ; item . addToContentValues ( mTempValues ) ; mUpdateOperations . add ( ContentProviderOperation . newUpdate ( LauncherSettings . Favorites . getContentUri ( item . id ) ) . withValues ( mTempValues ) . build ( ) ) ; }
44973	private boolean uploadFile ( final HttpServletRequest request ) { if ( ! AccessControlUtil . getInstance ( configuration ) . checkFolderACL ( this . type , this . currentFolder , this . userRole , AccessControlUtil . CKFINDER_CONNECTOR_ACL_FILE_UPLOAD ) ) { this . errorCode = Constants . Errors . CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED ; return _BOOL ; } return fileUpload ( request ) ; }
45021	public boolean isMutable ( ) { return isMutable ; }
45045	static public void assertNull ( Object object ) { assertNull ( _NULL , object ) ; }
45063	public char previous ( ) { if ( pos > begin ) { pos -- ; return text . charAt ( pos ) ; } else { return DONE ; } }
45117	static void clear ( ) { cotCache . clear ( ) ; }
45140	public void add ( BackupDescriptor backup ) { backups . add ( backup ) ; }
45164	@ Override public void destroy ( ) { }
45207	private String stateToString ( long s ) { return super . toString ( ) + _CHAR [ phase = _CHAR + phaseOf ( s ) + _CHAR parties = _CHAR + partiesOf ( s ) + _CHAR arrived = _CHAR + arrivedOf ( s ) + _CHAR ] _CHAR ; }
45223	public static String longToString ( long l ) { return convertLong ( _NULL , l ) ; }
45225	@ Override @ SuppressWarnings ( _CHAR FinalizeDoesntCallSuperFinalize _CHAR ) protected final void finalize ( ) { }
45229	public Builder addPart ( RequestBody body ) { return addPart ( Part . create ( body ) ) ; }
45232	public R visitIPAddress ( IPAddressPropertyDefinition pd , P p ) { return visitUnknown ( pd , p ) ; }
45235	public void requestGraceLoginUseTimes ( ) { operations . add ( PasswordPolicyStateOperationType . GET_GRACE_LOGIN_USE_TIMES ) ; }
45283	public Object clone ( ) { XMPNode clonedTree = ( XMPNode ) tree . clone ( ) ; return new XMPMetaImpl ( clonedTree ) ; }
45291	public TriggerWrapper resume ( ) { return reState ( Trigger . STATE_PAUSED ) ; }
45296	static public void assertEquals ( String message , String expected , String actual ) { if ( expected == _NULL && actual == _NULL ) return ; if ( expected != _NULL && expected . equals ( actual ) ) return ; throw new ComparisonFailure ( message , expected , actual ) ; }
45323	public synchronized void addObject ( NSObject obj ) { set . add ( obj ) ; }
45324	@ ForceInline @ SuppressWarnings ( _CHAR unchecked _CHAR ) static < T , U > T castReference ( Class < ? extends T > t , U x ) { if ( x != _NULL && ! t . isInstance ( x ) ) throw newClassCastException ( t , x ) ; return ( T ) x ; }
45335	public boolean hasSuccessStatusCode ( ) { return statusCode < LOWEST_ERROR_CODE ; }
45358	public void windowDeiconified ( WindowEvent e ) { }
45359	@ Override public void start ( ) throws java . lang . Exception { start ( MembershipService . MBR_RX ) ; start ( MembershipService . MBR_TX ) ; }
45368	public String toString ( ) { return str ( ) ; }
45380	public boolean addElement ( Object obj ) { synchronized ( nextTurn [ containerNeeded - _NUM ] ) { return nextTurn [ containerNeeded - _NUM ] . add ( obj ) ; } }
45392	public AnnotationVisitor visitAnnotation ( String desc , boolean visible ) { if ( cv != _NULL ) { return cv . visitAnnotation ( desc , visible ) ; } return _NULL ; }
45405	public void paintSpinnerBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
45413	public static URL toURL ( URI uri ) { if ( uri == _NULL ) throw new NullPointerException ( _CHAR ` uri _CHAR_CHAR_CHAR_CHAR , e ) ; } }
45421	public boolean validate ( Set < String > values ) { for ( String value : values ) { if ( ! validate ( value ) ) { return _BOOL ; } } return _BOOL ; }
45427	public void paintSeparatorBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
45491	public boolean empty ( ) { return size ( ) == _NUM ; }
45493	public void append ( byte b ) { ensureCapacity ( length + _NUM ) ; buffer [ length ++ ] = b ; }
45498	public boolean isCellEditable ( int row , int column ) { return _BOOL ; }
45546	public void addMarkerToMap ( LatLng latLng ) { Marker marker = mGoogleMap . addMarker ( new MarkerOptions ( ) . position ( latLng ) . title ( _CHAR title _CHAR ) . snippet ( _CHAR snippet _CHAR ) ) ; markers . add ( marker ) ; }
45567	public void endEntity ( String name ) throws org . xml . sax . SAXException { }
45596	public void paintSeparatorBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
45619	public boolean isEmpty ( ) { return collections . isEmpty ( ) ; }
45628	private void modifyVLVIndexOnline ( ConnectionWrapper connWrapper ) throws Exception { final RootCfgClient root = connWrapper . getRootConfiguration ( ) ; modifyBackendVLVIndexOnline ( ( PluggableBackendCfgClient ) root . getBackend ( backendID ) ) ; }
45637	public static String last ( final String value , int n ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; if ( n > value . length ( ) ) { return value ; } return value . substring ( value . length ( ) - n ) ; }
45641	public boolean isCaptchaEnabled ( ) { return captchaEnabled ; }
45660	public void clearParameters ( ) { if ( _NULL == m_params ) return ; m_params . clear ( ) ; }
45661	@ Override public boolean onPreparePanel ( final int featureId , final View view , final Menu menu ) { return super . onPreparePanel ( featureId , view , menu ) ; }
45667	public boolean equals ( Object other ) { if ( this == other ) return _BOOL ; if ( other instanceof Address ) { final Address o = ( Address ) other ; return this . getURI ( ) . equals ( o . getURI ( ) ) ; } return _BOOL ; }
45674	public static final < V > V fromJson ( Reader reader , Type type ) { return GSON . fromJson ( reader , type ) ; }
45676	public static void loadApplicationAnnotations ( Context context ) { loadApplicationListenerAnnotations ( context ) ; loadApplicationFilterAnnotations ( context ) ; loadApplicationServletAnnotations ( context ) ; }
45679	public boolean isMutable ( ) { return mutable ; }
45688	public static ConnectionFactory newRootConnectionFactory ( ) { InternalClientConnection icc = InternalClientConnection . getRootConnection ( ) ; return newConnectionFactory ( icc ) ; }
45696	public void paintTableBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
45847	public JSONObject toJSONObject ( ) throws JSONException { JSONObject jo = new JSONObject ( ) ; jo . put ( _CHAR uuid _CHAR , uuid ) ; jo . put ( _CHAR pSubjectName _CHAR , pSubjectName ) ; if ( exclusive ) { jo . put ( _CHAR exclusive _CHAR , exclusive ) ; } return jo ; }
45915	public static ComponentUI createUI ( JComponent c ) { return new SynthTextFieldUI ( ) ; }
45920	public boolean hasChildNodes ( ) { return ( _NULL != m_firstChild ) ; }
45941	public boolean isVerbose ( ) { return verbose ; }
46010	void repositionCursor ( int offset , int direction ) { getFormattedTextField ( ) . getCaret ( ) . setDot ( getNextCursorPosition ( offset , direction ) ) ; }
46024	public void registerRoutes ( Router router ) { container ( ) . getBeanManager ( ) . getExtension ( RouteExtension . class ) . registerRoutes ( router ) ; }
46035	@ Override public void destroy ( ) { restletXACMLHttpServlet . destroy ( ) ; restletXACMLServiceServlet . destroy ( ) ; restletOAuth2ServiceServlet . destroy ( ) ; restletUMAServiceServlet . destroy ( ) ; }
46045	public void paintTableBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
46047	public void syncBeginTagFile ( ) { saveNestedVariables ( ) ; }
46066	private boolean isInsideCastle ( ) { Shape intersection = SVGPath . intersect ( spriteBoundsArray [ _NUM ] , SpriteHandler . getCurrentCast ( ) . get ( _NUM ) . getSpriteBoundsArray ( ) [ _NUM ] ) ; return intersection . getBoundsInParent ( ) . getWidth ( ) != - _NUM ; }
46073	public void writeString ( byte [ ] str ) { int max = uncompData . length - dstIndex ; if ( str . length < max ) max = str . length ; System . arraycopy ( str , _NUM , uncompData , dstIndex , max ) ; dstIndex += max ; }
46075	private static void checkNotNull ( Object v ) { if ( v == _NULL ) throw new NullPointerException ( ) ; }
46088	public Set < N > neighbors ( N node ) throws NullPointerException { return Collections . unmodifiableSet ( theNeighbors . get ( node ) ) ; }
46096	public void startElement ( String uri , String localName , String qName , Attributes atts ) throws SAXException { if ( documentHandler != _NULL ) { qAtts . setAttributes ( atts ) ; documentHandler . startElement ( qName , qAtts ) ; } }
46099	public void requestRemainingAuthenticationFailureCount ( ) { operations . add ( PasswordPolicyStateOperationType . GET_REMAINING_AUTHENTICATION_FAILURE_COUNT ) ; }
46108	public Future < Job > save ( ) { Objects . requireNonNull ( this . type , _CHAR Job type can not be _NULL _CHAR ) ; if ( this . id > _NUM ) return update ( ) ; Future < Job > future = Future . future ( ) ; client . incr ( RedisHelper . getKey ( _CHAR ids _CHAR ) , _NULL ) ; return future . compose ( _NULL ) ; }
46150	public boolean verifyXMLSignature ( org . w3c . dom . Document document , java . security . cert . Certificate cert ) throws XMLSignatureException { return sp . verifyXMLSignature ( document , cert ) ; }
46177	boolean isTransient ( ) { Object value = getValue ( TRANSIENT ) ; return ( value instanceof Boolean ) ? ( Boolean ) value : _BOOL ; }
46178	public boolean hasOutlines ( ) { return catalog . hasOutlines ( ) ; }
46189	public void exprSetParent ( ExpressionNode n ) { setParentElem ( ( ElemTemplateElement ) n ) ; }
46194	private void loadConfiguration ( ) { mApiToken = mConfigurationManager . getString ( PREF_API_TOKEN , _CHAR _CHAR ) ; mKitUrl = mConfigurationManager . getString ( PREF_KIT_URL , _CHAR _CHAR ) ; }
46195	public void appendNodes ( NodeVector nodes ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; super . appendNodes ( nodes ) ; }
46210	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ caseSensitivity = _CHAR + caseSensitivity + _CHAR ] _CHAR ; }
46251	public static NSObject parse ( File f ) throws IOException , ParseException { return parse ( new FileInputStream ( f ) ) ; }
46253	protected int readBytes ( ) throws IOException { int nRead = buffer . doRead ( readChunk ) ; pos = readChunk . getStart ( ) ; lastValid = pos + nRead ; buf = readChunk . getBytes ( ) ; return nRead ; }
46262	public final static String formatElements ( final HeaderElement [ ] elems , final boolean quote , HeaderValueFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicHeaderValueFormatter . DEFAULT ; return formatter . formatElements ( _NULL , elems , quote ) . toString ( ) ; }
46263	public final int size ( ) { return m_index + _NUM ; }
46297	private boolean confirmDeleteFiles ( ) throws ClientException { return askConfirmation ( INFO_CLI_UNINSTALL_CONFIRM_DELETE_FILES . get ( ) , _BOOL , logger ) ; }
46303	public String clientAddress ( ) { return clientAddress ; }
46314	public final boolean isProxiable ( ) { return flags [ PROXIABLE_TICKET_FLAG ] ; }
46318	static Subscription registerForNotifyChangesToSubNodes ( String dn , SMSEventListener eventListener ) { initialize ( ) ; return addNotificationObject ( subNodeChanges , DN . valueOf ( dn ) , eventListener ) ; }
46319	static MemberName generateNamedFunctionInvoker ( MethodTypeForm typeForm ) { MethodType invokerType = NamedFunction . INVOKER_METHOD_TYPE ; String invokerName = _CHAR invoke_ _CHAR + shortenSignature ( basicTypeSignature ( typeForm . erasedType ( ) ) ) ; InvokerBytecodeGenerator g = new InvokerBytecodeGenerator ( _CHAR NFI _CHAR , invokerName , invokerType ) ; return g . loadMethod ( g . generateNamedFunctionInvokerImpl ( typeForm ) ) ; }
46321	public int length ( ) { int len = getArrayLength ( ) - ( getGapEnd ( ) - getGapStart ( ) ) ; return len ; }
46328	protected void uninstallKeyboardActions ( ) { SwingUtilities . replaceUIInputMap ( comboBox , JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT , _NULL ) ; SwingUtilities . replaceUIActionMap ( comboBox , _NULL ) ; }
46344	public void addShutdownListener ( ShutdownListener listener ) throws IllegalMonitorStateException { addShutdownListener ( listener , ShutdownPriority . DEFAULT ) ; }
46353	public void access ( Level level , String messageId , String data [ ] , Object session ) throws LogException { access ( level , messageId , data , session , _NULL ) ; }
46355	@ Override public PdfFormXObject createFormXObject ( Color foreground , PdfDocument document ) { return createFormXObject ( foreground , DEFAULT_MODULE_SIZE , DEFAULT_MODULE_SIZE , document ) ; }
46418	@ Override public int hashCode ( ) { return year ^ ( month << _NUM ) ; }
46422	@ VisibleForTesting void writeSession ( Session session ) { Reject . ifNull ( session ) ; Reject . ifNull ( session . getID ( ) ) ; sessionCullerTable . put ( session . getID ( ) , new SessionCuller ( session ) ) ; sessionTable . put ( session . getID ( ) , session ) ; }
46460	public void paintSeparatorBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
46468	public static final < V > V fromJson ( Reader reader , Class < V > type ) { return GSON . fromJson ( reader , type ) ; }
46472	public void paintListBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
46524	public int length ( ) { return count ; }
46543	public void put ( String key , Object value ) { this . data . put ( key , value ) ; }
46544	public static < C extends ConfigurationClient , S extends Configuration > Builder < C , S > createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder < > ( d , propertyName ) ; }
46557	public static String extendedTrim ( String content ) { return content . replaceAll ( _CHAR \\ s + _CHAR , _CHAR _CHAR ) . replace ( _CHAR \ n _CHAR , _CHAR _CHAR ) . replace ( _CHAR \ r _CHAR , _CHAR _CHAR ) . trim ( ) ; }
46617	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { HtmlEntityDao . dropTable ( db , ifExists ) ; CollectEntityDao . dropTable ( db , ifExists ) ; }
46619	boolean isEmpty ( ) throws ChangelogException { return getNewestRecord ( ) == _NULL ; }
46659	public void writeSearchResultEntry ( final int messageID , final SearchResultEntry entry ) throws IOException { logger . trace ( _CHAR ENCODE LDAP SEARCH RESULT ENTRY ( messageID = % d , entry = % s ) _CHAR , messageID , entry ) ; writeMessageHeader ( messageID ) ; { LDAP . writeEntry ( writer , LDAP . OP_TYPE_SEARCH_RESULT_ENTRY , entry ) ; } writeMessageFooter ( entry . getControls ( ) ) ; }
46674	public void addMenuListener ( MenuListener l ) { listenerList . add ( MenuListener . class , l ) ; }
46679	private String s ( Integer val ) { return String . valueOf ( val ) ; }
46713	public void handleButton3Request ( RequestInvocationEvent event ) { EntityServicesViewBean vb = ( EntityServicesViewBean ) getViewBean ( com . sun . identity . console . idm . EntityServicesViewBean . class ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
46774	public boolean isMutable ( ) { return mutable ; }
46832	private Element toElement ( final Document document ) { return document . createElement ( this . name ) ; }
46851	public static boolean isSupported ( byte [ ] version ) { if ( version [ _NUM ] != _NUM || ( version [ _NUM ] != _NUM && version [ _NUM ] != _NUM ) ) { return _BOOL ; } return _BOOL ; }
46884	public MapCursor addCursor ( int x , int y , byte direction ) { return addCursor ( x , y , direction , ( byte ) _NUM , _BOOL ) ; }
46906	public boolean isUserRegistrationEnabled ( ) { return userRegistrationEnabled ; }
46912	protected Expression neg ( int opPos ) throws TransformerException { return compileUnary ( new Neg ( ) , opPos ) ; }
46957	private void clearBuffer ( ) { for ( int i = _NUM ; i < BUF_SIZE ; i ++ ) { buf [ i ] = _NUM ; } }
47009	static public void assertEquals ( String expected , String actual ) { assertEquals ( _NULL , expected , actual ) ; }
47047	public final int size ( ) { return m_index + _NUM ; }
47078	public void paintSliderBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
47082	public boolean isShort ( STypeDef requiredType , NumberLiteral literal , LineCol lineCol ) throws SyntaxException { return ( requiredType == _NULL || requiredType instanceof ShortTypeDef || requiredType instanceof SClassDef && requiredType . isAssignableFrom ( getTypeWithName ( _CHAR java . lang . Short _CHAR , lineCol ) ) ) && ! literal . literal ( ) . contains ( _CHAR . _CHAR ) ; }
47088	public synchronized void mouseRelease ( int buttons ) { checkButtonsArgument ( buttons ) ; peer . mouseRelease ( buttons ) ; afterEvent ( ) ; }
47108	@ Override public String toString ( ) { return name ; }
47125	private static boolean useSpecificTrustStore ( ) { return ( ( SystemConfigurationUtil . getProperty ( SOAP_KEYSTORE_FILE_PROP ) != _NULL ) && ( SystemConfigurationUtil . getProperty ( SOAP_KEYSTORE_PASS_FILE_PROP ) != _NULL ) && ( SystemConfigurationUtil . getProperty ( SOAP_KEYSTORE_TYPE_PROP ) != _NULL ) && ( SystemConfigurationUtil . getProperty ( SOAP_PRIVATE_KEY_PASS_FILE_PROP ) != _NULL ) ) ; }
47130	public void requestPasswordExpirationWarnedTime ( ) { operations . add ( PasswordPolicyStateOperationType . GET_PASSWORD_EXPIRATION_WARNED_TIME ) ; }
47138	public void removeAllMembers ( ) throws UMSException { if ( getMemberCount ( ) == _NUM ) { return ; } modify ( Collections . singleton ( new Modification ( ModificationType . DELETE , Attributes . emptyAttribute ( MEMBER_ATTR_NAME ) ) ) ) ; save ( ) ; }
47175	static public void assertEquals ( short expected , short actual ) { assertEquals ( _NULL , expected , actual ) ; }
47182	private synchronized void initDependencies ( ) { if ( ! isInitialised ( ) ) { factory = InjectorHolder . getInstance ( SSOTokenFactory . class ) ; requestUtils = InjectorHolder . getInstance ( AuthnRequestUtils . class ) ; } }
47197	private void mapIdRepoException ( IdRepoException exception ) throws IdServicesException { throw idServicesErrorHandler . handleError ( exception ) ; }
47217	public void destroy ( ) { config = _NULL ; }
47236	public boolean isKbaEnabled ( ) { return kbaEnabled ; }
47256	public static void main ( final String [ ] args ) { final int retCode = new LDIFDiff ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
47271	public int new_no ( ) { if ( last_generated_id_no >= c_max_id_no ) { System . err . println ( _CHAR IdGenerator : danger of overflow , please regenerate id numbers from scratch ! _CHAR ) ; } last_generated_id_no ++ ; return last_generated_id_no ; }
47272	public String toLowerUnderscore ( ) { return toUnderscore ( CaseFormat . LOWER_UNDERSCORE ) ; }
47292	public static NSObject parse ( File f ) throws ParserConfigurationException , IOException , SAXException , PropertyListFormatException , ParseException { DocumentBuilder docBuilder = getDocBuilder ( ) ; Document doc = docBuilder . parse ( f ) ; return parse ( doc ) ; }
47329	public boolean isSecure ( ) { return _BOOL ; }
47339	public void start_circle ( Point2D p_point ) { if ( board_is_read_only ) return ; PlaPointFloat location = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; set_interactive_state ( StateCircleConstrut . get_instance ( location , interactive_state , this , actlog ) ) ; }
47353	public void access ( Level level , String messageId , String data [ ] , Object session ) throws LogException { access ( level , messageId , data , session , _NULL ) ; }
47361	protected void displayAddressOutput ( ) { locationAddressTextView . setText ( addressOutput ) ; }
47456	public static void ok ( String p_message ) { javax . swing . JOptionPane . showMessageDialog ( _NULL , p_message ) ; }
47490	public static boolean binaryDataIsBmpFormat ( byte [ ] data ) { if ( data . length < _NUM ) { return _BOOL ; } return ( _NUM == ( data [ _NUM ] & _NUM ) ) && ( _NUM == ( data [ _NUM ] & _NUM ) ) ; }
47494	static public void assertEquals ( long expected , long actual ) { assertEquals ( _NULL , expected , actual ) ; }
47501	private void endText ( ) { eventOccurred ( _NULL , EventType . END_TEXT ) ; }
47507	private void addServiceListener ( String service , String name ) throws SMSException , SSOException { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR addServiceListener for '' + service + '' , name = _CHAR + name ) ; } AMAuthLevelManager . getInstance ( ) . addAuthConfigListener ( service , name ) ; }
47547	public void paintTreeBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
47591	@ Override public synchronized void write ( int b ) throws IOException { super . write ( b ) ; this . branch . write ( b ) ; }
47606	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
47616	public void addSubpath ( Subpath subpath ) { subpaths . add ( subpath ) ; currentPoint = subpath . getLastPoint ( ) ; }
47644	public BrdOutline insert_outline ( ShapeSegments [ ] p_outline_shapes , int p_clearance_class_no ) { BrdOutline result = new BrdOutline ( p_outline_shapes , p_clearance_class_no , _NUM , this ) ; insert_item ( result ) ; return result ; }
47648	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
47656	public boolean isMandatoryAttribute ( String name ) { return mandatory . contains ( name ) ; }
47716	private void whenLoginReturnTrue ( LoginModule ... modules ) throws LoginException { for ( LoginModule module : modules ) { when ( module . login ( ) ) . thenReturn ( _BOOL ) ; } }
47753	public PrintWriter log ( PrintWriter out ) { return log ( this , out ) ; }
47760	protected ImageView createImageViewFromBitmap ( Bitmap bitmap ) { ImageView imageView = new ImageView ( getContext ( ) ) ; imageView . setImageBitmap ( bitmap ) ; imageView . setLayoutParams ( new LayoutParams ( bitmap . getWidth ( ) , bitmap . getHeight ( ) ) ) ; return imageView ; }
47768	public static void main ( String [ ] args ) { int retCode = mainImportLDIF ( args , _BOOL , System . out , System . err ) ; if ( retCode != _NUM ) { System . exit ( filterExitCode ( retCode ) ) ; } }
47782	public boolean beginTextOutDisplay ( ChildDisplayEvent event ) { return ( curCallback != _NULL ) && ( curCallback instanceof TextOutputCallback ) ; }
47801	public void endEntity ( String name ) throws SAXException { }
47806	public T linkQualifier ( String linkQualifier ) { jsonValue . put ( LINK_QUALIFIER , linkQualifier ) ; return self ( ) ; }
47826	private void closeConnection ( ) { try { if ( connection != _NULL ) { connection . close ( ) ; connection = _NULL ; } } catch ( Exception e ) { DEBUG . warning ( _CHAR Connection failed to close . '' , e ) ; } }
47845	@ Override public int hashCode ( ) { return getChronology ( ) . getId ( ) . hashCode ( ) ^ isoDate . hashCode ( ) ; }
47847	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ sumDirectoryContents = _CHAR + sumDirectoryContents + _CHAR ] _CHAR ; }
47855	public int hashCode ( ) { return ( Float . floatToIntBits ( extraAlpha ) * _NUM + rule ) ; }
47857	private void jumpToTheNearestEndingNode ( ) throws SyntaxException { while ( current != _NULL && ( ! ( current instanceof EndingNode ) ) ) { nextNode ( _BOOL ) ; } }
47859	public void onStart ( final FileAlterationObserver observer ) { }
47898	public boolean isPolicyMappingInhibited ( ) { return policyMappingInhibited ; }
47921	@ Override public void log ( String message , Throwable exception ) { myLogWriter . println ( message ) ; exception . printStackTrace ( myLogWriter ) ; }
47926	public static boolean debugEnabled ( ) { return enabled ; }
47928	public void add ( Permission permission ) { synchronized ( this ) { permsMap . put ( permission , permission ) ; } }
47951	public boolean isTagged ( ) { return structTreeRoot != _NULL ; }
47952	public void removeAll ( ) { clear ( ) ; }
47978	public static PermBindRulePair decode ( String perm , String rights , String bRule ) throws AciException { return new PermBindRulePair ( perm , rights , bRule ) ; }
47979	private JsonValue createJsonMessage ( String key , Object message ) { JsonValue result = new JsonValue ( new LinkedHashMap < String , Object > ( _NUM ) ) ; try { result . put ( key , message ) ; return result ; } catch ( final Exception e ) { throw new JsonValueException ( result ) ; } }
47981	public boolean isSelected ( ) { return ( stateMask & SELECTED ) != _NUM ; }
47991	public Observable < Response < T , String >> usingCamera ( ) { return applicationComponent . camera ( ) . takePhoto ( ) ; }
47996	public static void main ( final String [ ] args ) { final int retCode = new AddRate ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
48021	public final void mouseReleased ( MouseEvent e ) { dragActive = _BOOL ; fire ( ) ; }
48026	public final void clearPassword ( ) { Arrays . fill ( password , _CHAR ) ; password = _NULL ; }
48028	public void addAttribute ( Object key , Object value ) { keys . addElement ( key ) ; data . addElement ( value ) ; }
48030	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException joe ) { PolicyConstants . DEBUG . error ( _CHAR UserESubject . toString ( ) , JSONException : _CHAR , joe ) ; } return s ; }
48039	public final PlaSide side_of ( PlaPointInt p_1 , PlaPointInt p_2 ) { PlaVectorInt v1 = difference_by ( p_1 ) ; PlaVectorInt v2 = p_2 . difference_by ( p_1 ) ; return v1 . side_of ( v2 ) ; }
48061	public long size ( ) { return queueDatabase . count ( ) ; }
48070	public ProductService addProduct ( Product product , Handler < AsyncResult < Void >> resultHandler ) { delegate . addProduct ( product , resultHandler ) ; return this ; }
48075	public void fireGenerateEvent ( int eventType , char [ ] ch , int start , int length ) { }
48076	static public void assertEquals ( char expected , char actual ) { assertEquals ( _NULL , expected , actual ) ; }
48088	static MatchingRuleImpl collationSubstringMatchingRule ( Locale locale ) { return new CollationSubstringMatchingRuleImpl ( locale ) ; }
48095	@ Override public int hashCode ( ) { final int prime = _NUM ; int result = _NUM ; result = prime * result + Arrays . hashCode ( vals ) ; return result ; }
48106	public AttributeSet copyAttributes ( ) { return ( AttributeSet ) clone ( ) ; }
48134	public final String toString ( ) { return name ; }
48167	public void paintPanelBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
48196	@ Override public void skippedEntity ( String name ) throws SAXException { if ( saxLog . isDebugEnabled ( ) ) { saxLog . debug ( _CHAR skippedEntity ( _CHAR + name + _CHAR ) _CHAR ) ; } }
48217	public void unregisterComponent ( JComponent component ) { component . removeMouseListener ( this ) ; component . removeMouseMotionListener ( moveBeforeEnterListener ) ; component . removeKeyListener ( accessibilityKeyListener ) ; }
48220	public void write ( String str , int off , int len ) { buf . append ( str . substring ( off , off + len ) ) ; }
48230	public Builder removeName ( final String name ) { this . names . remove ( name ) ; return this ; }
48278	public static void shutdown ( ) { server . shutdown ( ) ; }
48279	private static void checkNotNull ( Object v ) { if ( v == _NULL ) throw new NullPointerException ( ) ; }
48285	public boolean isSecure ( ) { return _BOOL ; }
48307	public int size ( ) { return super . size ( ) ; }
48314	public static int parseStringAsInt ( String in ) throws IndexParseFieldException { try { return Integer . parseInt ( in ) ; } catch ( NumberFormatException e ) { throw new IndexParseFieldException ( in , e ) ; } }
48325	private static synchronized String formatDateAsDate ( Date d ) { return formatDateIn . format ( d ) ; }
48354	public static PreReadResponseControl newControl ( final Entry entry ) { return new PreReadResponseControl ( _BOOL , Entries . unmodifiableEntry ( entry ) ) ; }
48358	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
48364	public void notationDecl ( StylesheetHandler handler , String name , String publicId , String systemId ) { }
48390	@ Override public int compareTo ( MessageRefEntry mre ) { if ( this . ordinal != _NULL && mre . ordinal != _NULL ) { return this . ordinal . compareTo ( mre . ordinal ) ; } return _NUM ; }
48425	@ Override public void write ( int value ) { digest . update ( ( byte ) value ) ; }
48432	public final int hashCode ( ) { if ( address ( ) == _NULL ) return type ( ) . hashCode ( ) ; return type ( ) . hashCode ( ) + address ( ) . hashCode ( ) ; }
48451	public void reset ( ) { engineReset ( ) ; state = INITIAL ; }
48469	public boolean apply ( ObjectName name ) throws BadStringOperationException , BadBinaryOpValueExpException , BadAttributeValueExpException , InvalidApplicationException { ValueExp val = exp . apply ( name ) ; if ( ! ( val instanceof StringValueExp ) ) { return _BOOL ; } return wildmatch ( ( ( StringValueExp ) val ) . getValue ( ) , pattern ) ; }
48522	public boolean removeSubjectConfirmation ( ) { if ( _nameIdentifier == _NULL ) { if ( SAMLUtilsCommon . debug . messageEnabled ( ) ) { SAMLUtilsCommon . debug . message ( _CHAR Subject : At least one of _CHAR + _CHAR NameIdentifier and SubjectConfirmation is mandatory _CHAR ) ; } return _BOOL ; } _subjectConfirmation = _NULL ; return _BOOL ; }
48540	protected void addDefaultNotFoundRoute ( ) { getRouter ( ) . ALL ( IRouter . DEFAULT_ROUTE_PATH ) . notFound ( ) . save ( getDefaultNotFoundHandler ( ) ) ; }
48552	@ DataProvider ( name = _CHAR writeModifyDataProvider _CHAR ) public Object [ ] [ ] createTestWriteModifyData ( ) throws Exception { return MODIFY_ENTRY_DATA_LDIF ; }
48575	private void returnThread ( WorkerThread t ) { if ( shutdownThePool ) { t . terminate ( ) ; synchronized ( this ) { busyThreadCount -- ; if ( busyThreadCount == _NUM ) { notifyAll ( ) ; } } } else { synchronized ( this ) { busyThreadCount -- ; threads [ currentThreadCount - busyThreadCount - _NUM ] = t ; notify ( ) ; } } }
48609	public OrderService createOrder ( Order order , Handler < AsyncResult < Void >> resultHandler ) { delegate . createOrder ( order , resultHandler ) ; return this ; }
48612	public boolean isMutable ( ) { return isMutable ; }
48626	public synchronized ContextHolder remove ( String key ) { return cache . remove ( key ) ; }
48652	public static boolean isExistingStore ( ) { return isExistingStore ; }
48669	public double num ( ) { return toDouble ( ) ; }
48741	public void paintTableBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
48791	public void visitEnd ( ) { if ( av != _NULL ) { av . visitEnd ( ) ; } }
48796	private void closeSearch ( ) { try { if ( searchStatus != _NULL ) { searchStatus . cancel ( _BOOL ) ; searchStatus = _NULL ; } } catch ( Exception e ) { DEBUG . warning ( _CHAR Connection failed to close . '' , e ) ; } }
48839	@ Override public void bind ( String name , Object obj ) throws NamingException { getBoundContext ( ) . bind ( parseName ( name ) , obj ) ; }
48857	SmsRouteTreeBuilder subTrees ( SmsRouteTreeBuilder ... subTreeBuilders ) { this . subTreeBuilders = asSet ( subTreeBuilders ) ; return this ; }
48867	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
48874	private synchronized void commit ( CSN csn , LDAPUpdateMsg msg ) { final PendingChange curChange = pendingChanges . get ( csn ) ; if ( curChange == _NULL ) { throw new NoSuchElementException ( ) ; } curChange . setCommitted ( _BOOL ) ; curChange . setMsg ( msg ) ; }
48894	public String toString ( ) { return typeString ; }
48918	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; refreshTextStatus ( view , index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
48920	public Builder addPart ( Headers headers , RequestBody body ) { return addPart ( Part . create ( headers , body ) ) ; }
48922	static void useImplement ( DoubledImplement di , boolean isOne ) { try { di . one ( ) ; if ( ! isOne ) { System . err . println ( _CHAR ERROR : did not get LinkageError on DI _CHAR ) ; } } catch ( LinkageError le ) { if ( ! isOne ) { System . out . println ( _CHAR Got LinkageError on DI ( late ) _CHAR ) ; } else { throw le ; } } }
48923	public static ComponentUI createUI ( JComponent c ) { return new BasicEditorPaneUI ( ) ; }
48945	protected void configureReplication ( String replServerEntryLdif , String synchroServerEntryLdif ) throws Exception { replServerEntry = TestCaseUtils . entryFromLdifString ( replServerEntryLdif ) ; addConfigEntry ( replServerEntry , _CHAR Unable to add the replication server _CHAR ) ; addSynchroServerEntry ( synchroServerEntryLdif ) ; }
48970	protected Object validateExchange ( Object exchange ) { Objects . requireNonNull ( exchange , _CHAR The exchange object ca n _CHAR_CHAR ) ; return exchange ; }
49005	@ Override public boolean isMutable ( ) { return mutable ; }
49021	@ Override public void finish ( ) throws Exception { }
49031	public Boolean isRequired ( ) { return required ; }
49052	public static String defaultGroupContainerName ( ) { initialize ( ) ; return ( defaultGC ) ; }
49054	public String toDotted ( ) { return Joiner . on ( _CHAR . _CHAR ) . join ( pathPieces ) ; }
49066	public boolean isClosed ( ) { return closed ; }
49116	public String toString ( ) { return new String ( getType ( ) + _CHAR with current value : _CHAR + getValue ( ) + _CHAR _CHAR + units + _CHAR ( range : _CHAR + minimum + _CHAR - _CHAR + maximum + _CHAR ) _CHAR ) ; }
49137	public static void access ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . access ( level , msgid , data , session ) ; } catch ( LogException le ) { debug . error ( _CHAR LogUtil . access : Could n _CHAR_CHAR , le ) ; } } }
49152	static public void assertEquals ( long expected , long actual ) { assertEquals ( _NULL , expected , actual ) ; }
49249	public Object clone ( ) { try { StringCharacterIterator other = ( StringCharacterIterator ) super . clone ( ) ; return other ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
49255	public void incrementTotalReadRecordCount ( ) { totalReadRecordCount ++ ; totalRequests ++ ; }
49271	public ArrayDeque < E > clone ( ) { try { @ SuppressWarnings ( _CHAR unchecked _CHAR ) ArrayDeque < E > result = ( ArrayDeque < E > ) super . clone ( ) ; result . elements = Arrays . copyOf ( elements , elements . length ) ; return result ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( ) ; } }
49278	public void addResourceType ( ResourceType resourceType ) { resourceTypes . add ( resourceType ) ; }
49328	public static ImmutableConfiguration from ( final Properties properties ) { return new ImmutableConfiguration ( properties ) ; }
49333	@ Override public void flush ( ) { }
49349	public boolean verifyXMLSignature ( org . w3c . dom . Element element , java . lang . String idAttrName , java . lang . String certAlias ) throws XMLSignatureException { return sp . verifyXMLSignature ( element , idAttrName , certAlias ) ; }
49357	public void paintViewportBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
49364	public void removeDomain ( String domain ) throws UMSException { if ( m_dcRoot == _NULL ) return ; DomainComponent dc = getDomainComponent ( domain ) ; m_dcRoot . removeChild ( dc ) ; }
49368	public final void lazySet ( int newValue ) { unsafe . putOrderedInt ( this , valueOffset , newValue ) ; }
49377	@ Override public void write ( char [ ] chr ) throws IOException { out . write ( chr ) ; }
49383	public boolean removeCursor ( MapCursor cursor ) { return cursors . remove ( cursor ) ; }
49404	public T mapping ( String mapping ) { jsonValue . put ( MAPPING , mapping ) ; return self ( ) ; }
49408	public boolean equals ( Object o ) { if ( this == o ) { return _BOOL ; } if ( o == _NULL || this . getClass ( ) != o . getClass ( ) ) { return _BOOL ; } return Arrays . equals ( oid , ( ( ObjectIdentifier ) o ) . oid ) ; }
49426	public boolean isClosed ( ) { return isClosed ; }
49499	public static void access ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . access ( level , msgid , data , session ) ; } catch ( LogException le ) { FSUtils . debug . error ( _CHAR LogUtil . access : Could n _CHAR_CHAR , le ) ; } } }
49593	private void loadData ( ) { }
49616	public static boolean isEmptyOrWhitespace ( int symbol ) { return symbol == CR || symbol == LF || symbol == SP ; }
49619	public boolean beginHasNoButtonDisplay ( ChildDisplayEvent event ) { return ( buttonOptions == _NULL ) || ( buttonOptions . length == _NUM ) ; }
49671	public RequirementsBuilder addProperty ( String name , RequirementsBuilder builder ) { Reject . ifNull ( name , builder ) ; properties . put ( name , prepareChildJsonValue ( builder ) ) ; return this ; }
49674	protected void login ( AuthContext . IndexType type , String indexName , Principal principal , char [ ] password , Subject subject ) throws AuthLoginException { login ( type , indexName , principal , password , subject , _NULL , _NULL ) ; }
49685	public void endElement ( String uri , String localName , String qName ) throws SAXException { if ( documentHandler != _NULL ) documentHandler . endElement ( qName ) ; }
49720	public ByteArrayBuilder appendInt ( int i ) { builder . appendInt ( i ) ; return this ; }
49725	public void handleButton3Request ( RequestInvocationEvent event ) throws ModelControlException { returnToHomePage ( ) ; }
49726	public void visitParameter ( String name , int access ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { mv . visitParameter ( name , access ) ; } }
49759	@ SuppressWarnings ( _CHAR deprecation _CHAR ) public void resize ( Dimension d ) { resize ( d . width , d . height ) ; }
49790	private void prepareAndStart ( ) { cleanup ( ) ; this . getJobFromBackend ( ) . setHandler ( _NULL ) ; }
49792	public void paintSpinnerBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
49795	public WorldCreator copy ( World world ) { if ( world == _NULL ) { throw new IllegalArgumentException ( _CHAR World can not be _NULL _CHAR ) ; } seed = world . getSeed ( ) ; environment = world . getEnvironment ( ) ; generator = world . getGenerator ( ) ; return this ; }
49797	public boolean isRunAsAttr ( String attribute ) { return getProperties ( ) . get ( attribute ) . isNotNull ( ) && getProperties ( ) . get ( attribute ) . get ( RUN_AS_USER ) . defaultTo ( _BOOL ) . asBoolean ( ) ; }
49819	@ Override public boolean onPreparePanel ( final int featureId , final View view , final Menu menu ) { return delegate . onPreparePanel ( featureId , view , menu ) ; }
49838	public void visitParameter ( String name , int access ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { mv . visitParameter ( name , access ) ; } }
49869	public static void serverFailed ( String serviceName ) { if ( serviceName . startsWith ( validRemoteURL ) ) { serverFailed = _BOOL ; } else { remoteStubs . remove ( serviceName ) ; } }
49878	@ Override public boolean equals ( Object ox ) { try { Level lx = ( Level ) ox ; return ( lx . value == this . value ) ; } catch ( Exception ex ) { return _BOOL ; } }
49880	public static boolean isUserLoggedIn ( ) { return currentUser != _NULL ; }
49942	public String toString ( ) { return new String ( super . toString ( ) + _CHAR with current value : _CHAR + getStateLabel ( getValue ( ) ) ) ; }
49982	public static SearchRequest newSearchRequest ( final DN name , final SearchScope scope , final String filter ) throws DirectoryException { return newSearchRequest ( name , scope , SearchFilter . createFilterFromString ( filter ) ) ; }
50045	private void enableTLS ( ) { tlsActiveProvider = tlsPendingProvider ; tlsChannel . redirect ( tlsPendingProvider ) ; tlsPendingProvider = _NULL ; }
50060	public final void clear ( ) { int len = super . getLength ( ) ; super . clear ( ) ; if ( MAX <= len ) { m_indexFromQName . clear ( ) ; } }
50070	@ Override public void clear_doors ( ) { doors_list . clear ( ) ; }
50072	@ Deprecated public static void stopServer ( String className , LocalizableMessage reason ) { DirectoryServer . shutDown ( className , reason ) ; }
50085	public CSeqHeader createCSeqHeader ( int sequenceNumber , String method ) throws ParseException , InvalidArgumentException { return this . createCSeqHeader ( ( long ) sequenceNumber , method ) ; }
50103	public boolean isStyled ( ) { return this . isStyle ; }
50129	public void windowDeactivated ( WindowEvent e ) { }
50144	protected final void fireChildrenAdded ( BeanContextMembershipEvent bcme ) { Object [ ] copy ; synchronized ( bcmListeners ) { copy = bcmListeners . toArray ( ) ; } for ( int i = _NUM ; i < copy . length ; i ++ ) ( ( BeanContextMembershipListener ) copy [ i ] ) . childrenAdded ( bcme ) ; }
50172	public < M extends Configuration > void deregisterAddListener ( OptionalRelationDefinition < ? , M > d , ConfigurationAddListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) . parent ( ) ; deregisterAddListener ( baseDN , listener ) ; }
50196	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
50297	static public void assertEquals ( String message , String expected , String actual ) { if ( expected == _NULL && actual == _NULL ) return ; if ( expected != _NULL && expected . equals ( actual ) ) return ; throw new ComparisonFailure ( message , expected , actual ) ; }
50306	@ Override public void run ( ) { while ( ! isShuttingDown ( ) ) { try { sleep ( getInterval ( ) ) ; } catch ( InterruptedException e ) { continue ; } catch ( Exception e ) { logger . traceException ( e ) ; } processLog ( ) ; } }
50325	public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { if ( dtdHandler != _NULL ) { dtdHandler . unparsedEntityDecl ( name , publicId , systemId , notationName ) ; } }
50331	@ DataProvider ( name = _CHAR illegalLongLimitData _CHAR ) Object [ ] [ ] createIllegalLongLimitData ( ) { return new Object [ ] [ ] { { - _NUM , _NUM , _BOOL } , { _NUM , - _NUM , _BOOL } , { _NUM , _NUM , _BOOL } , { _NUM , _NUM , _BOOL } } ; }
50340	private void updatePolyLine ( LatLng latLng ) { List < LatLng > points = polyLine . getPoints ( ) ; points . add ( latLng ) ; polyLine . setPoints ( points ) ; }
50350	public Builder names ( final Collection < String > names ) { this . names . addAll ( names ) ; return this ; }
50373	public byte [ ] signBuffer ( java . lang . String data , java . lang . String certAlias , java . lang . String algorithm ) throws FSSignatureException { return sp . signBuffer ( data , certAlias , algorithm ) ; }
50378	public void notify_deleted ( BrdItem p_item ) { }
50379	private ResourceException generateException ( CoreTokenException e ) { return new InternalServerErrorException ( e . getMessage ( ) , e ) ; }
50397	static public void assertEquals ( byte expected , byte actual ) { assertEquals ( _NULL , expected , actual ) ; }
50401	protected Expression gt ( int opPos ) throws TransformerException { return compileOperation ( new Gt ( ) , opPos ) ; }
50418	public void write ( String fileName ) throws IOException { FileOutputStream outputFile ; byte profileData [ ] ; profileData = getData ( ) ; outputFile = new FileOutputStream ( fileName ) ; outputFile . write ( profileData ) ; outputFile . close ( ) ; }
50433	public boolean isMutable ( ) { return isMutable ; }
50446	private void putBackDefaultAggregationDefinitionFromTargetAndSourceEnabled ( ) { TestCfg . removeConstraint ( aggregationPropertyDefinitionTargetAndSourceMustBeEnabled . getSourceConstraint ( ) ) ; TestCfg . addPropertyDefinition ( aggregationPropertyDefinitionDefault ) ; TestCfg . addConstraint ( aggregationPropertyDefinitionDefault . getSourceConstraint ( ) ) ; }
50461	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { if ( documentHandler != _NULL ) documentHandler . ignorableWhitespace ( ch , start , length ) ; }
50487	public void deleteStaticGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMStaticGroup group = new AMStaticGroupImpl ( super . token , groupDN ) ; group . delete ( ) ; } }
50585	public ShapelessRecipe addIngredient ( int count , MaterialData ingredient ) { return addIngredient ( count , ingredient . getItemType ( ) , ingredient . getData ( ) ) ; }
50594	public void read_logfile ( java . io . InputStream p_input_stream ) { board_panel . itera_board . read_logfile ( p_input_stream ) ; }
50632	public boolean hasBlock ( ) { return this . blockClicked != _NULL ; }
50649	public int read ( byte [ ] b ) throws IOException { return read ( b , _NUM , b . length ) ; }
50650	private boolean isClosed ( ) { return buf == _NULL ; }
50651	public static String extractKeywords ( String url ) { if ( StringUtils . isEmpty ( url ) ) { return _NULL ; } for ( KeywordMatcher matcher : SEARCH_ENGINES ) { String keywords = matcher . matchKeywords ( url ) ; if ( keywords != _NULL ) { return keywords . replace ( _CHAR + _CHAR , _CHAR _CHAR ) ; } } return _NULL ; }
50663	private void write ( int c ) throws IOException { writer . write ( c ) ; }
50674	public boolean isSecure ( ) { return _BOOL ; }
50679	void sendFile ( PrintStream ps ) throws IOException { if ( testNum == - _NUM ) { if ( ! Support_TestWebData . test0DataAvailable ) { log ( _CHAR test data was not initialized _CHAR ) ; return ; } sendFile ( ps , Support_TestWebData . test0Data ) ; } else { sendFile ( ps , Support_TestWebData . tests [ testNum ] ) ; } }
50738	public ReconAuditEventBuilder reconAction ( ReconciliationService . ReconAction action ) { if ( _NULL != action ) { jsonValue . put ( RECON_ACTION , action . name ( ) ) ; } return self ( ) ; }
50744	private boolean checkIsSubClass ( String target ) { TypeElement type = element ; while ( _BOOL ) { if ( type == _NULL ) { return _BOOL ; } else if ( target . equals ( type . getQualifiedName ( ) . toString ( ) ) ) { return _BOOL ; } type = getParentClass ( type ) ; } }
50768	Object parameterConstraint ( int n ) { return parameter ( n ) . constraint ; }
50781	public boolean addElement ( Object obj ) { synchronized ( actions ) { if ( allowToChange ) { return actions . add ( obj ) ; } } return _BOOL ; }
50788	private static char toHex ( int nibble ) { return hexDigit [ ( nibble & _NUM ) ] ; }
50793	public boolean isMutable ( ) { return mutable ; }
50816	public boolean isKbaEnabled ( ) { return kbaEnabled ; }
50820	String [ ] toCommandLineArguments ( String configurationFile , ConnectionParameters connParams ) { return new String [ ] { _CHAR -- configFile _CHAR , configurationFile , _CHAR -- backendID _CHAR , backendID , _CHAR -- bindDN _CHAR , connParams . getBindDn ( ) , _CHAR -- bindPassword _CHAR , connParams . getBindPassword ( ) , _CHAR -- ldifFile _CHAR , ldifFile , _CHAR -- noPropertiesFile _CHAR , _CHAR -- trustAll _CHAR } ; }
50822	public boolean forceASCII ( ) { return this . forceASCII ; }
50846	public boolean bool ( ) { return ( Double . isNaN ( m_val ) || ( m_val == _NUM . _NUM ) ) ? _BOOL : _BOOL ; }
50848	void resetVolatileDoubleBuffer ( GraphicsConfiguration gc ) { Image image = volatileMap . remove ( gc ) ; if ( image != _NULL ) { image . flush ( ) ; } }
50850	private void processMenuKeyEvent ( MenuKeyEvent e ) { switch ( e . getID ( ) ) { case KeyEvent . KEY_PRESSED : fireMenuKeyPressed ( e ) ; break ; case KeyEvent . KEY_RELEASED : fireMenuKeyReleased ( e ) ; break ; case KeyEvent . KEY_TYPED : fireMenuKeyTyped ( e ) ; break ; default : break ; } }
50867	public PdfFormXObject createFormXObject ( Color foreground , float moduleSize , PdfDocument document ) { PdfFormXObject xObject = new PdfFormXObject ( ( Rectangle ) _NULL ) ; Rectangle rect = placeBarcode ( new PdfCanvas ( xObject , document ) , foreground , moduleSize ) ; xObject . setBBox ( new PdfArray ( rect ) ) ; return xObject ; }
50871	private void verifySuccess ( Result result ) throws LdapOperationFailedException { ResultCode resultCode = result . getResultCode ( ) ; if ( resultCode . isExceptional ( ) ) { throw new LdapOperationFailedException ( result ) ; } }
50890	public FastStringBuffer fsb ( ) { throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS , _NULL ) ) ; }
50892	@ Override public void init ( ) throws ServletException { restletXACMLHttpServlet . init ( ) ; }
50916	public char last ( ) { if ( end != begin ) { pos = end - _NUM ; } else { pos = end ; } return current ( ) ; }
50956	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . restartServer ( ) ; }
50977	public void encode ( OutputStream out ) throws IOException { DerOutputStream tmp = new DerOutputStream ( ) ; if ( this . extensionValue == _NULL ) { this . extensionId = PKIXExtensions . IssuingDistributionPoint_Id ; this . critical = _BOOL ; encodeThis ( ) ; } super . encode ( tmp ) ; out . write ( tmp . toByteArray ( ) ) ; }
50993	private Intent createMarketSearchIntent ( String query ) { Uri marketSearchUri = Uri . parse ( _CHAR market : // search '' ) . buildUpon ( ) . appendQueryParameter ( '' q '' , query ) . build ( ) ; Intent marketSearchIntent = new Intent ( Intent . ACTION_VIEW ) ; marketSearchIntent . setData ( marketSearchUri ) ; return marketSearchIntent ; }
50995	public void addFileAttachment ( String description , String file , String fileDisplay , PdfName mimeType , PdfName afRelationshipValue ) throws IOException { addFileAttachment ( description , PdfFileSpec . createEmbeddedFileSpec ( this , file , description , fileDisplay , mimeType , afRelationshipValue , _BOOL ) ) ; }
51065	public static Date parseyyyyMMddDate ( String d ) { try { return new SimpleDateFormat ( _CHAR yyyy - MM - dd _CHAR ) . parse ( d ) ; } catch ( Exception e ) { } return _NULL ; }
51082	@ Override protected void onPause ( ) { super . onPause ( ) ; }
51115	protected final void fireChildrenRemoved ( BeanContextMembershipEvent bcme ) { Object [ ] copy ; synchronized ( bcmListeners ) { copy = bcmListeners . toArray ( ) ; } for ( int i = _NUM ; i < copy . length ; i ++ ) ( ( BeanContextMembershipListener ) copy [ i ] ) . childrenRemoved ( bcme ) ; }
51152	@ Override public int hashCode ( ) { return years + Integer . rotateLeft ( months , _NUM ) + Integer . rotateLeft ( days , _NUM ) ; }
51154	public void trimToSize ( ) { if ( n < array . length ) { byte [ ] aux = new byte [ n ] ; System . arraycopy ( array , _NUM , aux , _NUM , n ) ; array = aux ; } }
51187	public String str ( ) { if ( _NULL == m_strCache ) { m_strCache = fsb ( ) . getString ( m_start , m_length ) ; } return m_strCache ; }
51207	private void shutdown ( ) throws Exception { TestCaseUtils . dsconfig ( _CHAR delete - replication - server _CHAR , _CHAR -- provider - name _CHAR , _CHAR Multimaster Synchronization _CHAR ) ; replicationServer = _NULL ; }
51257	public void fix_items ( ) { for ( BrdItem curr_ob : items_list ) { if ( curr_ob . get_fixed_state ( ) . ordinal ( ) < ItemFixState . USER_FIXED . ordinal ( ) ) { curr_ob . set_fixed_state ( ItemFixState . USER_FIXED ) ; } } actlog_start_scope ( LogfileScope . FIX_SELECTED_ITEMS ) ; }
51267	public InitializationBuilder requireUserPlugins ( PluginType ... plugins ) { Collections . addAll ( subSystemsToInitialize , SubSystem . USER_PLUGINS ) ; this . pluginTypes . addAll ( Arrays . asList ( plugins ) ) ; return this ; }
51290	static public void assertEquals ( char expected , char actual ) { assertEquals ( _NULL , expected , actual ) ; }
51296	public static void validateTypes ( Map < CoreTokenField , Object > types ) throws CoreTokenException { for ( Map . Entry < CoreTokenField , Object > entry : types . entrySet ( ) ) { validateType ( entry . getKey ( ) , entry . getValue ( ) ) ; } }
51300	public static String intToString ( int i ) { return convertInt ( _NULL , i ) ; }
51316	public boolean isStartTls ( ) { return getConnectionType ( ) == START_TLS ; }
51340	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
51426	public AccountService deleteAllAccounts ( Handler < AsyncResult < Void >> resultHandler ) { delegate . deleteAllAccounts ( resultHandler ) ; return this ; }
51431	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
51471	TemporalAccessor resolve ( ResolverStyle resolverStyle , Set < TemporalField > resolverFields ) { if ( resolverFields != _NULL ) { fieldValues . keySet ( ) . retainAll ( resolverFields ) ; } this . resolverStyle = resolverStyle ; resolveFields ( ) ; resolveTimeLenient ( ) ; crossCheck ( ) ; resolvePeriod ( ) ; resolveFractional ( ) ; resolveInstant ( ) ; return this ; }
51488	@ Override public void finish ( ) throws Exception { bodyText = _NULL ; }
51492	public int hashCode ( ) { return idType . hashCode ( ) ; }
51504	public ByteArrayBuilder appendShort ( int s ) { builder . appendShort ( s ) ; return this ; }
51536	public static RemoteException mapSystemException ( SystemException ex ) { if ( utilDelegate != _NULL ) { return utilDelegate . mapSystemException ( ex ) ; } return _NULL ; }
51556	public boolean bool ( ) { return str ( ) . length ( ) > _NUM ; }
51592	public void reset ( ) { events . clear ( ) ; }
51624	public void addApps ( List < AppInfo > apps ) { mApps . addApps ( apps ) ; }
51640	public boolean isVisible ( ) { return privateInstance . visible ; }
51644	@ Override public void write ( char [ ] chr ) throws IOException { out . write ( chr ) ; }
51675	public void append ( ByteBuffer anotherBuffer ) { append ( anotherBuffer . buffer , _NUM , anotherBuffer . length ) ; }
51694	public boolean isMutable ( ) { return isMutable ; }
51704	public A first ( ) { return elements . head ; }
51716	public void persist ( @ NonNull final String module , @ NonNull final String key , @ NonNull final String value ) { persist ( module , key , _NULL , value ) ; }
51719	public XMLString xstr ( ) { return XMLStringFactoryImpl . getFactory ( ) . newstr ( str ( ) ) ; }
51741	public boolean isEmpty ( ) { return list . isEmpty ( ) ; }
51757	public boolean isQueryPolicyEvalRequired ( ) { return isQueryPolicyEval ; }
51786	public boolean isDone ( ) { return done ; }
51804	public boolean isUnshared ( ) { return unshared ; }
51805	@ Advice . OnMethodEnter public static long enter ( ) { final long startTime = System . currentTimeMillis ( ) ; return startTime ; }
51806	public static ComponentUI createUI ( JComponent ta ) { return new BasicTextAreaUI ( ) ; }
51807	public boolean isHD ( ) { return streams . containsKey ( _CHAR _NUM _CHAR ) || streams . containsKey ( _CHAR _NUM _CHAR ) ; }
51811	public static ValidatingUnmarshaller create ( Grammar grammar , SAXUnmarshallerHandler _core , Locator locator ) { Verifier v = new Verifier ( new REDocumentDeclaration ( grammar ) , new ErrorHandlerAdaptor ( _core , locator ) ) ; v . setPanicMode ( _BOOL ) ; return new ValidatingUnmarshaller ( new VerifierFilter ( v ) , _core ) ; }
51830	public Expected < T > ifNotEmpty ( final Consumer < ? super T > consumer ) { if ( ! isEmpty ( ) ) consumer . accept ( this . value ) ; return this ; }
51868	public ShapelessRecipe addIngredient ( int count , Material ingredient ) { return addIngredient ( count , ingredient , _NUM ) ; }
51893	private boolean isOpen ( ) { return buf != _NULL ; }
51903	public boolean isFull ( ) { return getData ( ) >= CAULDRON_FULL ; }
51942	public < M extends Configuration > void deregisterDeleteListener ( InstantiableRelationDefinition < ? , M > d , ConfigurationDeleteListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) ; deregisterDeleteListener ( baseDN , listener ) ; }
51972	public T situation ( Situation situation ) { if ( _NULL != situation ) { jsonValue . put ( SITUATION , situation . name ( ) ) ; } return self ( ) ; }
51981	public AnnotationVisitor visitAnnotation ( String desc , boolean visible ) { if ( mv != _NULL ) { return mv . visitAnnotation ( desc , visible ) ; } return _NULL ; }
51993	private boolean confirmToStopServer ( ) throws ClientException { return askConfirmation ( INFO_CLI_UNINSTALL_CONFIRM_STOP . get ( ) , _BOOL , logger ) ; }
51998	public static boolean isLogEnabled ( ) { return logStatus ; }
52068	public boolean isReadable ( String attributeName ) { if ( readables . contains ( attributeName . toLowerCase ( ) ) ) return _BOOL ; else return _BOOL ; }
52098	protected DropTargetAutoScroller createDropTargetAutoScroller ( Component c , Point p ) { return new DropTargetAutoScroller ( c , p ) ; }
52102	@ Override public String toString ( ) { return _CHAR RefQueueWorker : : _CHAR + this . workerThread ; }
52104	private void adjustFocus ( boolean inWindow ) { if ( ( component != _NULL ) && component . isEnabled ( ) && component . isRequestFocusEnabled ( ) ) { if ( inWindow ) { component . requestFocusInWindow ( ) ; } else { component . requestFocus ( ) ; } } }
52129	public boolean contains ( int index ) { return index >= getFirst ( ) && index <= getLast ( ) ; }
52150	public void write ( String s , int off , int len ) { try { synchronized ( lock ) { ensureOpen ( ) ; out . write ( s , off , len ) ; } } catch ( InterruptedIOException x ) { Thread . currentThread ( ) . interrupt ( ) ; } catch ( IOException x ) { trouble = _BOOL ; } }
52152	public static boolean isIgnoredProfile ( String realm ) { return IGNORE_PROFILE . equalsIgnoreCase ( getProfileAttribute ( realm ) ) ; }
52160	public void paintTreeBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
52175	public String str ( ) { if ( _NULL == m_strCache ) m_strCache = new String ( ( char [ ] ) m_obj , m_start , m_length ) ; return m_strCache ; }
52188	private synchronized void bytesRead ( final long amountRead ) { if ( amountRead >= _NUM ) { this . readCount += amountRead ; } }
52192	public void resetToPreferredSizes ( JSplitPane jc ) { if ( splitPane != _NULL ) { layoutManager . resetToPreferredSizes ( ) ; splitPane . revalidate ( ) ; splitPane . repaint ( ) ; } }
52202	@ Advice . OnMethodEnter public static long enter ( ) { final long startTime = System . currentTimeMillis ( ) ; return startTime ; }
52210	public DTMIterator asNodeIterator ( ) { throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER , _NULL ) ) ; }
52237	public void clear ( ) { synchronized ( lock ) { items . clear ( ) ; } itemPositionChangeChecked = new SparseBooleanArray ( items . size ( ) ) ; notifyDataSetChanged ( ) ; }
52278	public boolean isSignatureValid ( BasicOCSPResp ocspResp , Certificate responderCert ) { try { return SignUtils . isSignatureValid ( ocspResp , responderCert , _CHAR BC _CHAR ) ; } catch ( Exception e ) { return _BOOL ; } }
52293	public boolean isEncrypted ( ) { return isEncrypted ; }
52314	public Builder removeName ( String name ) { this . names . remove ( name ) ; return this ; }
52324	public static String after ( String self , String pattern ) { Matcher matcher = compile ( pattern , CASE_INSENSITIVE | UNICODE_CHARACTER_CLASS ) . matcher ( self ) ; return matcher . find ( ) ? self . substring ( matcher . end ( ) , self . length ( ) ) . trim ( ) : self ; }
52367	public static boolean isCookieHttpOnly ( ) { return cookieHttpOnly ; }
52371	public void append ( String s ) { content += s ; }
52396	public boolean isModifyPolicyEvalRequired ( ) { return isModifyPolicyEval ; }
52405	public void addChangeListener ( ChangeListener l ) { listenerList . add ( ChangeListener . class , l ) ; }
52426	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
52430	private boolean checkIsSubClass ( String target ) { TypeElement type = element ; while ( _BOOL ) { if ( type == _NULL ) { return _BOOL ; } else if ( target . equals ( type . getQualifiedName ( ) . toString ( ) ) ) { return _BOOL ; } type = getParentClass ( type ) ; } }
52455	@ Override public void write ( String str ) throws IOException { out . write ( str ) ; }
52458	private static synchronized String formatDateAsTime ( Date d ) { return formatTimeIn . format ( d ) ; }
52473	public void paintButtonBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
52487	private void requestNewInterstitial ( ) { AdRequest adRequest = new AdRequest . Builder ( ) . build ( ) ; mInterstitialAd . loadAd ( adRequest ) ; }
52504	public boolean isLogEnabled ( ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isLogEnabled ( ) ; } }
52512	public boolean verifyXMLSignature ( org . w3c . dom . Document doc ) throws XMLSignatureException { if ( doc == _NULL ) { SAMLUtilsCommon . debug . error ( _CHAR verifyXMLSignature : document is _NULL . _CHAR ) ; throw new XMLSignatureException ( SAMLUtilsCommon . bundle . getString ( _CHAR nullInput _CHAR ) ) ; } return verifyXMLSignature ( doc , ( String ) _NULL ) ; }
52530	public void addSubpaths ( List < ? extends Subpath > subpaths ) { if ( subpaths . size ( ) > _NUM ) { for ( Subpath subpath : subpaths ) { this . subpaths . add ( new Subpath ( subpath ) ) ; } currentPoint = this . subpaths . get ( subpaths . size ( ) - _NUM ) . getLastPoint ( ) ; } }
52549	public static void closeSession ( ) throws HibernateException { Session session = ( Session ) threadLocal . get ( ) ; threadLocal . set ( _NULL ) ; if ( session != _NULL ) { session . close ( ) ; } }
52572	public Builder addPart ( Part part ) { if ( part == _NULL ) throw new NullPointerException ( _CHAR part == _NULL _CHAR ) ; parts . add ( part ) ; return this ; }
52604	public void removeAttribute ( Object name ) { table . remove ( name ) ; }
52607	public static void main ( String [ ] args ) { int retCode = mainCompare ( args , _BOOL , System . out , System . err ) ; if ( retCode != _NUM ) { System . exit ( filterExitCode ( retCode ) ) ; } }
52622	public void paintButtonBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
52649	public boolean remove_items ( Collection < BrdItem > p_item_list , boolean with_delete_fixed ) { boolean all_deleted = _BOOL ; for ( BrdItem curr_item : p_item_list ) { if ( ! curr_item . can_delete ( with_delete_fixed ) ) { all_deleted = _BOOL ; continue ; } remove_item ( curr_item ) ; } return all_deleted ; }
52666	public static ComponentUI createUI ( JComponent c ) { return new BasicFormattedTextFieldUI ( ) ; }
52731	static @ ForceInline void checkExactType ( Object mhObj , Object expectedObj ) { MethodHandle mh = ( MethodHandle ) mhObj ; MethodType expected = ( MethodType ) expectedObj ; MethodType actual = mh . type ( ) ; if ( actual != expected ) throw newWrongMethodTypeException ( expected , actual ) ; }
52737	public static boolean isNetworkProblem ( Object error ) { return ( error instanceof NetworkError ) ; }
52743	public void mouseReleased ( MouseEvent e ) { if ( ! e . isConsumed ( ) && shouldHandleRelease && SwingUtilities . isLeftMouseButton ( e ) ) { adjustCaretAndFocus ( e ) ; } }
52768	static public void assertEquals ( byte expected , byte actual ) { assertEquals ( _NULL , expected , actual ) ; }
52793	public void reportEvent ( ValidatableObject source , String formattedMessage ) throws AbortSerializationException { reportEvent ( source , new ValidationEventImpl ( ValidationEvent . ERROR , formattedMessage , new ValidationEventLocatorImpl ( source ) ) ) ; }
52857	public static boolean isEmpty ( final String s ) { return ( s == _NULL || s . length ( ) == _NUM ) ; }
52867	public void run ( ) { runWorker ( this ) ; }
52891	@ Override public int hashCode ( ) { return year ; }
52902	private void deactivateSecurityConfigurators ( ComponentContext context , HttpContext httpContext ) { for ( SecurityConfigurator configurator : securityConfigurators ) { configurator . deactivate ( httpService , httpContext , context ) ; logger . debug ( _CHAR Deactivated security configurator { } _CHAR , configurator . getClass ( ) . getName ( ) ) ; } }
52906	private static < T > SortedSet < T > readPropertyValues ( ConsoleApplication app , ManagedObjectDefinition < ? , ? > d , PropertyDefinition < T > pd ) throws ClientException { SortedSet < T > values = new TreeSet < > ( pd ) ; readPropertyValues ( app , d , pd , values ) ; return values ; }
52922	@ Override public void clear ( ) { cache . clear ( ) ; rules . clear ( ) ; }
52926	public boolean isByte ( STypeDef requiredType , NumberLiteral literal , LineCol lineCol ) throws SyntaxException { return ( requiredType == _NULL || requiredType instanceof ByteTypeDef || requiredType instanceof SClassDef && requiredType . isAssignableFrom ( getTypeWithName ( _CHAR java . lang . Byte _CHAR , lineCol ) ) ) && ! literal . literal ( ) . contains ( _CHAR . _CHAR ) ; }
52946	public void append ( NSString s ) { append ( s . getContent ( ) ) ; }
52948	static public void assertNull ( Object object ) { assertNull ( _NULL , object ) ; }
52950	public final void popContextNodeList ( ) { if ( m_contextNodeLists . isEmpty ( ) ) System . err . println ( _CHAR Warning : popContextNodeList when stack is empty ! _CHAR ) ; else m_contextNodeLists . pop ( ) ; }
52975	public void reportEvent ( ValidatableObject source , String formattedMessage ) throws AbortSerializationException { reportEvent ( source , new ValidationEventImpl ( ValidationEvent . ERROR , formattedMessage , new ValidationEventLocatorImpl ( source ) ) ) ; }
52980	public boolean isMutable ( ) { return isMutable ; }
52991	private static OCSPReq generateOCSPRequest ( X509Certificate issuerCert , BigInteger serialNumber ) throws OCSPException , IOException , OperatorException , CertificateEncodingException { Security . addProvider ( new org . bouncycastle . jce . provider . BouncyCastleProvider ( ) ) ; CertificateID id = SignUtils . generateCertificateId ( issuerCert , serialNumber , CertificateID . HASH_SHA1 ) ; return SignUtils . generateOcspRequestWithNonce ( id ) ; }
53001	static public void assertEquals ( short expected , short actual ) { assertEquals ( _NULL , expected , actual ) ; }
53030	@ Override public void onPause ( ) { delegate . onPause ( ) ; }
53048	static boolean internalPut ( @ NonNull String key , @ NonNull Object object ) { try { OutputStreamWriter osw = new OutputStreamWriter ( mCache . openStream ( key ) ) ; mGson . toJson ( object , osw ) ; osw . close ( ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
53074	public String toString ( ) { if ( array != _NULL ) { return new String ( array , offset , count ) ; } return _CHAR _CHAR ; }
53078	public boolean valueChanged ( ) { return valueChanged ; }
53104	void processMonitorRequestMsg ( MonitorRequestMsg msg , ServerHandler sender ) { enqueueMonitorMsg ( msg , sender ) ; }
53105	static public void fail ( ) { fail ( _NULL ) ; }
53131	public void removeParameter ( String parameterName ) { if ( ! ( address instanceof SipUri ) ) throw new RuntimeException ( _CHAR address is not a SipUri _CHAR ) ; SipUri uri = ( SipUri ) address ; uri . removeParameter ( parameterName ) ; }
53134	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
53143	public void writeModifyDNResult ( final int messageID , final Result result ) throws IOException { logger . trace ( _CHAR ENCODE LDAP MODIFY DN RESULT ( messageID = % d , result = % s ) _CHAR , messageID , result ) ; writeMessageHeader ( messageID ) ; { writeResultHeader ( LDAP . OP_TYPE_MODIFY_DN_RESPONSE , result ) ; writeResultFooter ( writer ) ; } writeMessageFooter ( result . getControls ( ) ) ; }
53158	protected int consumed ( ) { return consumed ; }
53173	private void save ( ) { try { FileUtils . write ( new File ( jarName + _CHAR - Scan . html _CHAR ) , text ) ; } catch ( IOException e ) { JOptionPane . showMessageDialog ( _NULL , e . getMessage ( ) , _CHAR Error saving file ! _CHAR , JOptionPane . ERROR_MESSAGE ) ; } }
53177	public void start ( ) { start = currentTimeMillis ( ) ; end = start ; }
53182	public static ComponentUI createUI ( JComponent c ) { return new BasicPasswordFieldUI ( ) ; }
53184	public boolean isCompressed ( ) { return isCompressed ; }
53194	private void copyTypes ( final Map < String , ResourceType > types2 ) { for ( String name : this . typesOrder ) { types2 . put ( name , new ResourceType ( this . types . get ( name ) ) ) ; } }
53243	public void requestRemainingGraceLoginCount ( ) { operations . add ( PasswordPolicyStateOperationType . GET_REMAINING_GRACE_LOGIN_COUNT ) ; }
53247	private String randomDigits ( ) { Random random = new Random ( ) ; return String . valueOf ( random . nextInt ( _NUM ) ) ; }
53325	public void requestSecondsUntilIdleLockout ( ) { operations . add ( PasswordPolicyStateOperationType . GET_SECONDS_UNTIL_IDLE_LOCKOUT ) ; }
53333	public final boolean isForwardable ( ) { return flags [ FORWARDABLE_TICKET_FLAG ] ; }
53345	public static void createSchemaFromLDIF ( String file , Connection ld ) throws IOException { try ( InputStream fileInput = new FileInputStream ( file ) ) { createSchemaFromLDIF ( fileInput , ld ) ; } }
53426	public static boolean isAnonymous ( ) throws IOException { AnonymousFaceletsTag anonymousTag = new AnonymousFaceletsTag ( ) ; return anonymousTag . authorize ( ) ; }
53470	private void expectedByte ( int position , int count ) throws UTFDataFormatException { throw new UTFDataFormatException ( Localizer . getMessage ( _CHAR jsp . error . xml . expectedByte _CHAR , Integer . toString ( position ) , Integer . toString ( count ) ) ) ; }
53496	private static final boolean compareAndSetWaitStatus ( Node node , int expect , int update ) { return unsafe . compareAndSwapInt ( node , waitStatusOffset , expect , update ) ; }
53508	public boolean isEmpty ( ) { return map . isEmpty ( ) ; }
53527	public String str ( ) { return m_val ? _CHAR _BOOL _CHAR : _CHAR _BOOL _CHAR ; }
53541	static boolean isExist ( String libName , int version ) { String file = _targetSoFile ( libName , version ) ; File a = new File ( file ) ; return a . exists ( ) ; }
53543	public static final Table createTestWorldBankTable ( ) { Table testTable = new Table ( ) ; testTable . setName ( _CHAR worldbankloans _CHAR ) ; testTable . setDatabaseByString ( createTestWorldBankDatabase ( ) . getName ( ) ) ; testTable . setDescription ( _CHAR This table stores data about World Bank loans . '' ) ; return testTable ; }
53551	public Object clone ( ) { if ( ipv6 ) { return iPv6ConditionInstance . clone ( ) ; } else { return iPv4ConditionInstance . clone ( ) ; } }
53581	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException e ) { PrivilegeManager . debug . error ( _CHAR EntitlementSubjectImpl . toString _CHAR , e ) ; } return s ; }
53596	public void endDTD ( ) throws SAXException { m_insideDTD = _BOOL ; }
53613	public final void lazySet ( V newValue ) { unsafe . putOrderedObject ( this , valueOffset , newValue ) ; }
53616	public ValueExp apply ( ObjectName name ) throws BadStringOperationException , BadBinaryOpValueExpException , BadAttributeValueExpException , InvalidApplicationException { return this ; }
53656	@ Deprecated public MapCursor addCursor ( int x , int y , byte direction , byte type ) { return addCursor ( x , y , direction , type , _BOOL ) ; }
53658	public static Topic of ( String identifier ) { return new Topic ( identifier ) ; }
53727	private boolean isNeverExpires ( ) { return getExpiryTime ( ) == defaultExpireTime ( ) ; }
53733	public static String escapeValue ( String str ) { return DN . escapeAttributeValue ( str ) ; }
53735	public java . util . List < HDR > subList ( int index1 , int index2 ) { return this . hlist . subList ( index1 , index2 ) ; }
53740	public void paintTreeBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
53762	@ Override public void addConfigurationElementCreatedListener ( ConfigurationElementCreatedListener listener ) { super . addConfigurationElementCreatedListener ( listener ) ; for ( SchemaElementPanel panel : panels ) { panel . addConfigurationElementCreatedListener ( listener ) ; } }
53790	public String toString ( ) { return actionName + _CHAR = _CHAR + values ; }
53803	@ Override public int hashCode ( ) { return date . hashCode ( ) ^ time . hashCode ( ) ; }
53805	public double num ( ) throws javax . xml . transform . TransformerException { throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER , _NULL ) ) ; }
53831	public boolean delete ( Long failedActionID ) { if ( failedActionID == _NULL ) { throw new IllegalArgumentException ( _CHAR _NULL _CHAR ) ; } return database . delete ( DATABASE_TABLE , KEY_FAILEDACTIONID + _CHAR = _CHAR + failedActionID , _NULL ) > _NUM ; }
53860	public boolean isMutable ( ) { return isMutable ; }
53867	public final void lazySet ( boolean newValue ) { int v = newValue ? _NUM : _NUM ; unsafe . putOrderedInt ( this , valueOffset , v ) ; }
53874	public void deleteUsers ( Set users ) throws AMException , SSOException { Iterator iter = users . iterator ( ) ; while ( iter . hasNext ( ) ) { String userDN = ( String ) iter . next ( ) ; AMUser user = new AMUserImpl ( super . token , userDN ) ; user . delete ( ) ; } }
53900	public PdfCanvas showText ( String text ) { document . checkShowTextIsoConformance ( currentGs , resources ) ; showTextInt ( text ) ; contentStream . getOutputStream ( ) . writeBytes ( Tj ) ; return this ; }
53917	public void putResponse ( String responseId , JsonValue json ) { Reject . ifNull ( responseId ) ; Reject . ifNull ( json ) ; responses . put ( responseId , json . toString ( ) ) ; }
53930	public Observable < Response < T , String >> usingGallery ( ) { return applicationComponent . gallery ( ) . pickImage ( ) ; }
53938	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ _CHAR + delegate . toString ( ) + _CHAR ] _CHAR ; }
53960	private static void checkNotNull ( Object v ) { if ( v == _NULL ) throw new NullPointerException ( ) ; }
53997	public final int length ( ) { return array . length ; }
53999	public boolean hasSubSchema ( ) { return ( subSchema == _NULL ) ? _BOOL : _BOOL ; }
54020	protected String persist ( StringManager smClient ) { StringWriter stringWriter = new StringWriter ( ) ; PrintWriter printWriter = new PrintWriter ( stringWriter ) ; super . persist ( printWriter , smClient ) ; return stringWriter . toString ( ) ; }
54049	public static void closeSession ( ) throws HibernateException { Session session = ( Session ) threadLocal . get ( ) ; threadLocal . set ( _NULL ) ; if ( session != _NULL ) { session . close ( ) ; } }
54052	private void parsedExpsNotEmpty ( Node tokenNode ) throws UnexpectedTokenException { if ( parsedExps . empty ( ) ) { err . UnexpectedTokenException ( tokenNode . toString ( ) , tokenNode . getLineCol ( ) ) ; throw new ParseFail ( ) ; } }
54060	public void append ( byte [ ] bytes ) { append ( bytes , _NUM , bytes . length ) ; }
54067	public static boolean isCookieSecure ( ) { return secureCookie ; }
54087	public static void createSchemaFromLDIF ( InputStream stream , Connection ld ) throws IOException { createSchemaFromLDIF ( new LDIFChangeRecordReader ( new BufferedInputStream ( stream ) ) , ld ) ; }
54090	@ Override public int hashCode ( ) { int code = _NUM ; if ( propertyName != _NULL ) { code += propertyName . hashCode ( ) ; } if ( propertyValues != _NULL ) { code += propertyValues . hashCode ( ) ; } if ( pResponseProviderName != _NULL ) { code += pResponseProviderName . hashCode ( ) ; } return code ; }
54155	public int length ( ) { return m_length ; }
54166	public boolean isMutable ( ) { return isMutable ; }
54194	@ Override public int hashCode ( ) { return getChronology ( ) . getId ( ) . hashCode ( ) ^ isoDate . hashCode ( ) ; }
54197	public static void resetPeakUsage ( String name ) { for ( MemoryPoolMXBean mbean : memoryPoolMXBeans ) { if ( name . equals ( _CHAR all _CHAR ) || name . equals ( mbean . getName ( ) ) ) { mbean . resetPeakUsage ( ) ; } } }
54226	@ Activate public void activate ( @ SuppressWarnings ( _CHAR unused _CHAR ) ComponentContext context ) throws GeneralSecurityException { logger . debug ( _CHAR Activating key store service _CHAR ) ; this . store = keyStoreInitializer . initializeKeyStore ( getKeyStoreDetails ( ) ) ; store ( ) ; }
54245	public void clear ( ) { while ( queue . poll ( ) != _NULL ) ; modCount ++ ; Entry < K > [ ] tab = table ; for ( int i = _NUM ; i < tab . length ; ++ i ) tab [ i ] = _NULL ; size = _NUM ; while ( queue . poll ( ) != _NULL ) ; }
54252	public FieldVisitor visitField ( int access , String name , String desc , String signature , Object value ) { if ( cv != _NULL ) { return cv . visitField ( access , name , desc , signature , value ) ; } return _NULL ; }
54260	public void add ( AbstractButton b ) { if ( b == _NULL ) { return ; } buttons . addElement ( b ) ; if ( b . isSelected ( ) ) { if ( selection == _NULL ) { selection = b . getModel ( ) ; } else { b . setSelected ( _BOOL ) ; } } b . getModel ( ) . setGroup ( this ) ; }
54287	public void appendToFsb ( org . apache . xml . utils . FastStringBuffer fsb ) { fsb . append ( ( char [ ] ) m_obj , m_start , m_length ) ; }
54345	@ Override public String toString ( ) { return content ; }
54358	public int length ( ) { return n ; }
54395	public void addSection ( String tag , Section section ) { this . sections . put ( tag , section ) ; this . sectionViewTypeNumbers . put ( tag , viewTypeCount ) ; viewTypeCount += VIEW_TYPE_QTY ; }
54418	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { SavedTopStoryDao . dropTable ( db , ifExists ) ; SavedStoryDao . dropTable ( db , ifExists ) ; SavedDailyDetailDao . dropTable ( db , ifExists ) ; }
54423	public static String toString ( Pnt [ ] matrix ) { StringBuilder buf = new StringBuilder ( _CHAR { _CHAR ) ; for ( Pnt row : matrix ) buf . append ( _CHAR _CHAR + row ) ; buf . append ( _CHAR } _CHAR ) ; return buf . toString ( ) ; }
54435	public String toString ( ) { synchronized ( lock ) { return new String ( buf , _NUM , count ) ; } }
54474	public int count ( ) { return array . length ; }
54478	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
54503	private void removeClearedReferences ( final Iterator < PooledSoftReference < T >> iterator ) { PooledSoftReference < T > ref ; while ( iterator . hasNext ( ) ) { ref = iterator . next ( ) ; if ( ref . getReference ( ) == _NULL || ref . getReference ( ) . isEnqueued ( ) ) { iterator . remove ( ) ; } } }
54549	private void markIndexing ( UUID id ) { BoundStatement activeStatement = new BoundStatement ( markIndexingStmt ) ; activeStatement . bind ( id ) ; getSession ( ) . execute ( activeStatement ) ; }
54564	private static final boolean compareAndSetNext ( Node node , Node expect , Node update ) { return unsafe . compareAndSwapObject ( node , nextOffset , expect , update ) ; }
54567	private String formatQuoteListToJSON ( List < StreamingQuote > quoteList ) { String jsonData = _NULL ; ObjectMapper mapper = new ObjectMapper ( ) ; try { jsonData = mapper . writeValueAsString ( quoteList ) ; } catch ( JsonProcessingException e ) { System . out . println ( _CHAR TimeRangeStreamingQuoteActionHandler . formatQuoteListToJSON ( ) : ERROR : JsonProcessingException on quote list ! ! ! _CHAR ) ; e . printStackTrace ( ) ; } return jsonData ; }
54574	public String toString ( ) { return _CHAR _CHAR_CHAR_CHAR _CHAR , _CHAR _CHAR _CHAR ) + '' ' '' ; }
54578	private Expression compileUnary ( UnaryOperation unary , int opPos ) throws TransformerException { int rightPos = getFirstChildPos ( opPos ) ; unary . setRight ( compile ( rightPos ) ) ; return unary ; }
54587	boolean removeArgument ( final Argument arg ) { return this . args . remove ( arg ) ; }
54594	public static < T > Expression < T > valueOf ( String expression , Class < T > expectedType ) throws ExpressionException { return valueOf ( expression , expectedType , bindings ( ) ) ; }
54680	public static NSObject parse ( File f ) throws IOException , PropertyListFormatException { return parse ( new FileInputStream ( f ) ) ; }
54686	@ Override protected boolean syncUIControlState ( ) { boolean disableControls = super . syncUIControlState ( ) ; if ( getBroadcast ( ) != _NULL ) { mMP4Controls . setVisibility ( getBroadcast ( ) . getStatus ( ) . isRunning ( ) ? View . INVISIBLE : View . VISIBLE ) ; mSwitchMP4 . setEnabled ( ! disableControls ) ; } return disableControls ; }
54715	public void save ( Writer writer ) { YAML . get ( ) . dump ( saveMap ( ) , writer ) ; }
54721	private boolean isIncrementalWithParent ( ) { return incrementalParent . isSelected ( ) && incrementalBackup . isSelected ( ) ; }
54751	public static HostPort toHostPort ( String ldapUrl ) throws LdapException { try { URI uri = new URI ( ldapUrl ) ; return new HostPort ( uri . getHost ( ) , uri . getPort ( ) ) ; } catch ( URISyntaxException e ) { throw newLdapException ( CLIENT_SIDE_PARAM_ERROR , e . getLocalizedMessage ( ) + _CHAR . LDAP URL was : \ _CHAR _CHAR + ldapUrl + _CHAR \ _CHAR _CHAR ) ; } }
54782	public < M extends Configuration > void deregisterDeleteListener ( SetRelationDefinition < ? , M > d , ConfigurationDeleteListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) ; deregisterDeleteListener ( baseDN , listener ) ; }
54789	@ Override public boolean isPowered ( ) { return getItemType ( ) == Material . DIODE_BLOCK_ON ; }
54815	public static void access ( Level level , String msgid , String data [ ] ) { access ( level , msgid , data , _NULL ) ; }
54819	public boolean isSingleAttributeContainer ( ) { return _BOOL ; }
54835	public boolean isEmpty ( ) { return ( m_index == - _NUM ) ; }
54869	public final int length ( ) { return array . length ; }
54951	public Builder names ( final String ... names ) { return names ( asList ( names ) ) ; }
54970	public static boolean isCookieHttpOnly ( ) { return cookieHttpOnly ; }
54977	public void writeString ( byte [ ] string ) { try { uncompData . write ( string ) ; } catch ( IOException e ) { throw new PdfException ( PdfException . LzwDecoderException , e ) ; } }
55064	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
55066	@ Override public void bind ( String name , Object obj ) throws NamingException { bind ( new CompositeName ( name ) , obj ) ; }
55077	public JsonElement removeProperty ( String key ) { return getProperties ( ) . remove ( key ) ; }
55086	private int socksGetServerPort ( ) { InetSocketAddress addr = ( InetSocketAddress ) proxy . address ( ) ; return addr . getPort ( ) ; }
55164	public void removeEntry ( SSOToken token , String entryDN , int objectType , boolean recursive , boolean softDelete ) throws AMException , SSOException { super . removeEntry ( token , entryDN , objectType , recursive , softDelete ) ; removeFromCache ( entryDN ) ; }
55180	public void append ( NSString s ) { append ( s . getContent ( ) ) ; }
55218	private void editSharedPreferences ( String key , long time ) { SharedPreferences sharedPreferences = getSharedPreferences ( REFS_NAME , _NUM ) ; SharedPreferences . Editor editor = sharedPreferences . edit ( ) ; editor . putLong ( key , time ) ; editor . commit ( ) ; }
55223	public boolean verifyXMLSignature ( java . lang . String XML , java . lang . String certAlias ) throws XMLSignatureException { return sp . verifyXMLSignature ( XML , certAlias ) ; }
55237	public void warn ( SourceLocator srcLctr , String msg , Object [ ] args ) throws TransformerException { warn ( srcLctr , _NULL , _NULL , msg , args ) ; }
55269	private static int readShort ( GifParameters gif ) throws java . io . IOException { return gif . input . read ( ) | gif . input . read ( ) << _NUM ; }
55319	@ Override public synchronized void shutdown ( ) { shutdown = _BOOL ; debug ( _CHAR Shutdown triggered _CHAR ) ; try { factory . close ( ) ; } catch ( RuntimeException e ) { debug . error ( _CHAR Error whilst shutting down a Connection Factory _CHAR , e ) ; } }
55342	public void addSchemaElementSelectionListener ( SchemaElementSelectionListener listener ) { listeners . add ( listener ) ; }
55348	public static void access ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . access ( level , msgid , data , session ) ; } catch ( LogException le ) { COTUtils . debug . error ( _CHAR LogUtil . access : Could n _CHAR_CHAR , le ) ; } } }
55366	@ Override public void addExecutor ( Executor ex ) { synchronized ( executors ) { if ( ! executors . contains ( ex ) ) { executors . add ( ex ) ; if ( getState ( ) . isAvailable ( ) ) { try { ex . start ( ) ; } catch ( LifecycleException x ) { log . error ( _CHAR Executor . start _CHAR , x ) ; } } } } }
55383	public static NSObject parse ( File f ) throws ParserConfigurationException , IOException , SAXException , PropertyListFormatException , ParseException { DocumentBuilder docBuilder = getDocBuilder ( ) ; Document doc = docBuilder . parse ( f ) ; return parse ( doc ) ; }
55394	static MatchingRuleImpl collationEqualityMatchingRule ( Locale locale ) { return new CollationEqualityMatchingRuleImpl ( locale ) ; }
55418	public boolean isSharped ( ) { byte note = getToneByte ( ) ; return Tone . getById ( note ) . isSharped ( note ) ; }
55444	public void reinsert_tree_items ( ) { remove_all_board_items ( ) ; insert_all_board_items ( ) ; }
55477	public ServerState duplicate ( ) { final ServerState newState = new ServerState ( ) ; newState . serverIdToCSN . putAll ( serverIdToCSN ) ; return newState ; }
55481	public PlaLineInt plaline ( int index ) { return lines_list . get ( index ) ; }
55483	public Builder noTransform ( ) { this . noTransform = _BOOL ; return this ; }
55484	public boolean isExportable ( ) { return isExportable ; }
55526	public void handleCreateInstanceButtonRequest ( RequestInvocationEvent event ) { removePageSessionAttribute ( AUTH_INSTANCE_TABLE ) ; NewAuthInstanceViewBean vb = ( NewAuthInstanceViewBean ) getViewBean ( NewAuthInstanceViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
55552	public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . flush ( ) ; }
55555	public static ComponentUI createUI ( JComponent c ) { return new BasicTextFieldUI ( ) ; }
55558	public void addElement ( int value ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; super . addElement ( value ) ; }
55565	@ Override public String toString ( ) { return _CHAR ( _CHAR + exp1 + _CHAR ) or ( _CHAR + exp2 + _CHAR ) _CHAR ; }
55571	public boolean isPersonalQuestion ( ) { return ( dataStatus == PERSONAL_ON || dataStatus == PERSONAL_OFF ) ; }
55572	public boolean isExclusive ( ) { return _exclusive ; }
55589	public boolean isSealed ( ) { return sealBase != _NULL ; }
55602	private void initMnemonics ( ) { mnemonicToIndexMap = new Hashtable < Integer , Integer > ( ) ; mnemonicInputMap = new ComponentInputMapUIResource ( tabPane ) ; mnemonicInputMap . setParent ( SwingUtilities . getUIInputMap ( tabPane , JComponent . WHEN_IN_FOCUSED_WINDOW ) ) ; SwingUtilities . replaceUIInputMap ( tabPane , JComponent . WHEN_IN_FOCUSED_WINDOW , mnemonicInputMap ) ; }
55616	public static boolean isWhiteSpace ( char ch [ ] , int start , int length ) { int end = start + length ; for ( int s = start ; s < end ; s ++ ) { if ( ! isWhiteSpace ( ch [ s ] ) ) return _BOOL ; } return _BOOL ; }
55632	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T > Enumeration < T > emptyEnumeration ( ) { return ( Enumeration < T > ) EMPTY_ENUMERATION ; }
55652	public void move_mouse ( PlaPointFloat p_to_location ) { if ( board_is_read_only ) return ; board_panel . move_mouse ( gdi_context . coordinate_transform . board_to_screen ( p_to_location ) ) ; }
55657	public synchronized void actionPerformed ( ActionEvent e ) { updateRegion ( ) ; if ( outer . contains ( locn ) && ! inner . contains ( locn ) ) autoScroll . autoscroll ( locn ) ; }
55659	@ Override public void clear ( ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR parameterMap . locked _CHAR ) ) ; super . clear ( ) ; }
55665	public static boolean isSupported ( String name ) { return protocolsByName . containsKey ( name ) ; }
55684	public static void println ( char [ ] o ) { System . out . println ( o ) ; }
55709	public < M extends Configuration > void deregisterAddListener ( SetRelationDefinition < ? , M > d , ConfigurationAddListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) ; deregisterAddListener ( baseDN , listener ) ; }
55710	protected String encodeBody ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
55730	public boolean isEmpty ( ) { synchronized ( actions ) { if ( allowToChange ) { return actions . isEmpty ( ) ; } } return _BOOL ; }
55770	public ByteArrayBuilder appendBoolean ( boolean b ) { appendByte ( b ? _NUM : _NUM ) ; return this ; }
55774	void toString ( final StringBuilder buffer ) { boolean first = _BOOL ; for ( CSN csn : serverIdToCSN . values ( ) ) { if ( ! first ) { buffer . append ( _CHAR _CHAR ) ; } csn . toString ( buffer ) ; first = _BOOL ; } }
55792	public boolean isSupportsCredentials ( ) { return supportsCredentials ; }
55799	public void processingInstruction ( StylesheetHandler handler , String target , String data ) throws org . xml . sax . SAXException { }
55849	public static NewSuffixOptions createBaseEntry ( List < String > baseDNs ) { NewSuffixOptions ops = new NewSuffixOptions ( baseDNs ) ; ops . type = Type . CREATE_BASE_ENTRY ; return ops ; }
55851	public static boolean binaryDataIsGifFormat ( byte [ ] data ) { if ( data . length < _NUM ) { return _BOOL ; } return ( _NUM == ( data [ _NUM ] & _NUM ) ) && ( _NUM == ( data [ _NUM ] & _NUM ) ) && ( _NUM == ( data [ _NUM ] & _NUM ) ) ; }
55853	public static void deleteDirectory ( File dir ) throws IOException { if ( dir == _NULL || ! dir . exists ( ) ) { return ; } if ( dir . isDirectory ( ) ) { for ( String child : dir . list ( ) ) { deleteDirectory ( new File ( dir , child ) ) ; } } dir . delete ( ) ; }
55858	public int size ( ) { return namesAndValues . length / _NUM ; }
55859	static boolean equals ( String dn1 , String dn2 ) { return DN . valueOf ( dn1 ) . equals ( DN . valueOf ( dn2 ) ) ; }
55861	private void markDone ( UUID id ) { BoundStatement delete = new BoundStatement ( deleteFromNotDoneStmt ) ; bindUUIDWhere ( delete , id ) ; getSession ( ) . execute ( delete ) ; }
55946	public void paintButtonBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
55955	public String toString ( ) { return _CHAR BadAttributeValueException : _CHAR + val ; }
55956	void refresh ( SMSEntry e ) throws SMSException { smsEntry . refresh ( e ) ; }
55965	public void init ( String componentName ) throws LogException { accessLogger = Logger . getLogger ( componentName + _CHAR . access _CHAR ) ; errorLogger = Logger . getLogger ( componentName + _CHAR . error _CHAR ) ; }
55980	@ Override public void finalize ( ) throws Throwable { super . finalize ( ) ; if ( server != _NULL ) { server . shutdown ( _BOOL ) ; } restExpressRunning = _BOOL ; }
55989	public void removeSchemaElementSelectionListener ( SchemaElementSelectionListener listener ) { listeners . add ( listener ) ; }
56001	@ Override protected Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( e ) ; } }
56022	public XMLString newstr ( char [ ] string , int start , int length ) { return new XStringForChars ( string , start , length ) ; }
56053	private long calcChecksum ( String filename ) throws Exception { return calcChecksum ( new File ( filename ) ) ; }
56055	public static JsonValue newEmptyRequirements ( ) { return emptyJson ( ) ; }
56077	public void addSchemaElementSelectionListener ( SchemaElementSelectionListener listener ) { for ( SchemaElementPanel panel : panels ) { panel . addSchemaElementSelectionListener ( listener ) ; } }
56096	private void enqueue ( Node < E > node ) { last = last . next = node ; }
56119	@ Override public Context createSubcontext ( String name ) throws NamingException { return createSubcontext ( new CompositeName ( name ) ) ; }
56124	protected void enableLocalSession ( Router router ) { router . route ( ) . handler ( CookieHandler . create ( ) ) ; router . route ( ) . handler ( SessionHandler . create ( LocalSessionStore . create ( vertx , _CHAR shopping . user . session _CHAR ) ) ) ; }
56133	@ Override public String toString ( ) { return _CHAR ZoneRules [ currentStandardOffset = _CHAR + standardOffsets [ standardOffsets . length - _NUM ] + _CHAR ] _CHAR ; }
56138	public void clear ( ) { addrs . setSize ( _NUM ) ; }
56146	@ Override public boolean hasOverlappingRendering ( ) { return _BOOL ; }
56154	public static < V > boolean isEmpty ( V [ ] sourceArray ) { return ( sourceArray == _NULL || sourceArray . length == _NUM ) ; }
56159	public static ComponentUI createUI ( JComponent c ) { return new BasicTextPaneUI ( ) ; }
56165	public static boolean isWhiteSpace ( String s ) { if ( _NULL != s ) { int n = s . length ( ) ; for ( int i = _NUM ; i < n ; i ++ ) { if ( ! isWhiteSpace ( s . charAt ( i ) ) ) return _BOOL ; } } return _BOOL ; }
56166	public StatusLine parseSIPStatusLine ( String statusLine ) throws ParseException { statusLine += _CHAR \ n _CHAR ; return new StatusLineParser ( statusLine ) . parse ( ) ; }
56182	public boolean verifyXMLSignature ( java . lang . String xmlString , java . lang . String idAttrName , java . lang . String certAlias ) throws XMLSignatureException { return sp . verifyXMLSignature ( xmlString , idAttrName , certAlias ) ; }
56275	private void decrementInDegree ( ) { -- inDegree ; }
56306	public void removeAttributeValues ( String attrName , Set values ) throws SSOException , SMSException { validateServiceInstance ( ) ; SMSEntry e = instance . getSMSEntry ( ) ; SMSUtils . removeAttributeValues ( e , attrName , values , Collections . EMPTY_SET ) ; e . save ( token ) ; instance . refresh ( e ) ; }
