1	public boolean isApplicable ( ) { for ( IDirector dir : ProjectManager . getProjects ( ) ) { if ( dir . getDirty ( ) ) return _BOOL ; } return _BOOL ; }
89	public boolean isApplicable ( ) { return _BOOL ; }
105	void boxes ( ValueBox ... boxes ) { this . boxes = boxes ; }
107	public void add ( ClosingAwareWebDriver driver ) { drivers . add ( driver ) ; }
236	private List < CarbonDictionaryColumnMetaChunk > readDictionaryMetadataFile ( ) throws IOException { CarbonDictionaryMetadataReaderImpl columnMetadataReaderImpl = new CarbonDictionaryMetadataReaderImpl ( this . carbonStorePath , this . carbonTableIdentifier , this . columnIdentifier ) ; List < CarbonDictionaryColumnMetaChunk > dictionaryMetaChunkList = _NULL ; try { dictionaryMetaChunkList = columnMetadataReaderImpl . read ( ) ; } finally { columnMetadataReaderImpl . close ( ) ; } return dictionaryMetaChunkList ; }
238	public void startPreview ( ) { if ( camera != _NULL && ! previewing ) { camera . startPreview ( ) ; previewing = _BOOL ; } }
259	@ Override public void redo ( Transaction tx ) { }
292	public static String readAll ( ) { if ( ! scanner . hasNextLine ( ) ) return _CHAR _CHAR ; String result = scanner . useDelimiter ( EVERYTHING_PATTERN ) . next ( ) ; scanner . useDelimiter ( WHITESPACE_PATTERN ) ; return result ; }
332	static public ObjectInputStream createArtifactObjectInputStream ( String pathname ) throws IOException { return new ObjectInputStream ( createArtifactInputStream ( pathname ) ) ; }
350	public boolean containsListener ( Listener listener ) { return this . listeners . contains ( listener ) ; }
373	public EmailBuilder withBody ( String body ) { this . body = new DefaultEmailBody ( body , TEXT_PLAIN , UTF8 ) ; return this ; }
375	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) == ClusterViewer . PCoA_TAB_INDEX ; }
431	@ Override public synchronized void start ( ) { LOGGER . info ( _CHAR Starting the C2MON alive timer mechanism . '' ) ; timer = new Timer ( _CHAR C2MON - alive - timer _CHAR ) ; timer . schedule ( this , INITIAL_SCAN_DELAY , SCAN_INTERVAL ) ; running = _BOOL ; }
460	private void removeAnyUnneededPeriodTypes ( ) { Set < PeriodTypeExtended > periodTypeXs = new HashSet < > ( periodTypeExtendedMap . values ( ) ) ; for ( PeriodTypeExtended periodTypeX : periodTypeXs ) { if ( periodTypeX . getRules ( ) . isEmpty ( ) ) { periodTypeExtendedMap . remove ( periodTypeX . getPeriodType ( ) ) ; } } }
462	public String savePhotoInMemoryDevice ( Bitmap bitmap , String photoName , boolean autoIncrementNameByDate ) { return writePhotoFile ( bitmap , photoName , _CHAR MAGICAL CAMERA _CHAR , PNG , autoIncrementNameByDate ) ; }
464	public static boolean isNotNull ( final Object object ) { boolean isNotNull = _BOOL ; if ( object != _NULL ) { isNotNull = _BOOL ; } return isNotNull ; }
485	@ Override public void cleanup ( ) { MinecraftForge . EVENT_BUS . unregister ( this ) ; FMLCommonHandler . instance ( ) . bus ( ) . unregister ( this ) ; structureHasBeenCompleted = _BOOL ; MalmoMod . MalmoMessageHandler . deregisterForMessage ( this , MalmoMessageType . SERVER_MISSIONOVER ) ; }
544	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL && viewer . getJList ( ) . getSelectedValuesList ( ) . size ( ) >= _NUM ; }
603	public static SM_SYSTEM_MESSAGE STR_MSG_SLAYER_LIGHT_DEATH_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
621	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryGaussNormEvaluator - do = ( char | word | all ) [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - wordMin = # ] [ - wordMax = # ] [ - wordDist = # ] [ - charMin = # ] [ - charMax = # ] [ - charDist = # ] [ - o = outFile ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] [ - lowmem ] _CHAR ) ; System . err . println ( _CHAR wordMin = # \ tMin word n - gram size .\ nwordMax = # \ tMax word n - gram size .\ nwordDist = # \ tWord n - gram window \ n _CHAR + _CHAR charMin = # \ tMin char n - gram size .\ ncharMax = # \ tMax char n - gram size .\ ncharDist = # \ tChar n - gram window .\ n _CHAR + _CHAR - o = outFile \ tThe file to output data . Default is stdout .\ n - t = # \ tNumber of threads . Defaults to _NUM .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR - use = o | d \ tUse [ o ] ccurences or average [ d ] istance to assign weights to the graph . Defaults to o .\ n _CHAR + _CHAR - lowmem \ tDo not use caching for documents . Less memory used , more time required .\ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
625	public void schedule ( String serviceName , Map < String , ? extends Object > context , long startTime , int frequency , int interval , long endTime ) throws JobManagerException { schedule ( serviceName , context , startTime , frequency , interval , - _NUM , endTime ) ; }
630	public void incrementCount ( K key , V value , double count ) { Counter < V > valueCounter = ensureCounter ( key ) ; valueCounter . incrementCount ( value , count ) ; }
634	public void processUtterance ( Utterance utterance ) throws ProcessException { utterance . getVoice ( ) . log ( _CHAR PartOfSpeechTagger does nothing ! _CHAR ) ; }
660	public static Object fromXml ( Reader reader ) { return xstream . fromXML ( reader ) ; }
677	public Builder rows ( int rows ) { this . rows = rows ; return this ; }
699	public Remote lookup ( String key ) throws RegistryException { try { return registry . lookup ( key ) ; } catch ( Exception e ) { throw new RegistryException ( _CHAR Failed to lookup with key [ _CHAR + key + _CHAR ] _CHAR , e ) ; } }
763	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getLength ( ) > _NUM ; }
779	public long logSize ( ) { return logBytes ; }
789	public Iterator < E > iterator ( E u ) { return new PatchingIterator ( innerChain , u ) ; }
878	public void insertKey ( DataType key , RecordID rid ) { BPlusNode . getBPlusNode ( this , rootPageNum ) . insertKey ( key , rid ) ; }
891	public void print ( char [ ] charArray ) { synchronized ( lock ) { try { appendLocked ( charArray , _NUM , charArray . length ) ; } catch ( IOException e ) { } } }
909	@ JsonValue public List < Interval > asList ( ) { return Collections . unmodifiableList ( this ) ; }
921	public void startScroll ( int startX , int startY , int dx , int dy , long startTime , int duration ) { mMode = SCROLL_MODE ; mScrollerX . startScroll ( startX , dx , startTime , duration ) ; mScrollerY . startScroll ( startY , dy , startTime , duration ) ; }
931	public static SM_SYSTEM_MESSAGE STR_ABYSS_CARRIER_KILLED ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
947	@ Override public void write ( DataOutput out ) throws IOException { out . writeLong ( duration ) ; out . writeInt ( getLength ( ) ) ; for ( int i = _NUM ; i < coeffs . length ; i ++ ) { out . writeFloat ( coeffs [ i ] ) ; } }
970	public Builder transform ( Transform transform ) { actionList . add ( new DataAction ( transform ) ) ; return this ; }
986	private void assertTable ( ) { if ( mTable == _NULL ) { throw new IllegalStateException ( _CHAR Table not specified _CHAR ) ; } }
1007	public void watchMonitoredDataCache ( PreferenceChangeListener pcl ) { addListener ( INT_KEY_MONDATA_CACHE , pcl ) ; }
1015	public static Object fromXml ( InputStream input ) { return xstream . fromXML ( input ) ; }
1018	public boolean levelEquals ( DataApprovalLevel other ) { if ( other == _NULL ) { return _BOOL ; } if ( level != other . getLevel ( ) ) { return _BOOL ; } if ( categoryOptionGroupSet != _NULL ? ! categoryOptionGroupSet . equals ( other . getCategoryOptionGroupSet ( ) ) : other . getCategoryOptionGroupSet ( ) != _NULL ) { return _BOOL ; } return _BOOL ; }
1021	static boolean linkClicked ( TabLaunchType type ) { return type == TabLaunchType . FROM_LINK || type == TabLaunchType . FROM_LONGPRESS_FOREGROUND || type == TabLaunchType . FROM_LONGPRESS_BACKGROUND ; }
1040	public void dispose ( StepMetaInterface smi , StepDataInterface sdi ) { meta = ( MDKeyGenStepMeta ) smi ; data = ( MDKeyGenStepData ) sdi ; super . dispose ( smi , sdi ) ; dataHandler = _NULL ; finalMerger = _NULL ; }
1067	public void certificateCreated ( long startTimeMs , long finishTimeMs ) { certificatesGenerated . incrementAndGet ( ) ; certificateGenerationTimeMs . addAndGet ( finishTimeMs - startTimeMs ) ; firstCertificateGeneratedTimestamp . compareAndSet ( _NUM , System . currentTimeMillis ( ) ) ; }
1082	public void addFocusGroup ( String group , TupleSet tset ) { checkGroupExists ( group ) ; m_focus . put ( group , tset ) ; }
1087	public boolean accept ( File file ) { return accept ( file . getParentFile ( ) , file . getName ( ) ) ; }
1115	private String modifyProjectName ( String originalProjectName ) { final StringBuffer buffer = new StringBuffer ( ) ; if ( getProjectNamePrefix ( ) != _NULL ) { buffer . append ( getProjectNamePrefix ( ) . trim ( ) ) ; } buffer . append ( originalProjectName ) ; if ( getProjectNameSuffix ( ) != _NULL ) { buffer . append ( getProjectNameSuffix ( ) . trim ( ) ) ; } return buffer . toString ( ) ; }
1132	public Builder withRationaleEnabled ( boolean enabled ) { buildObj . rationaleEnabled = enabled ; return this ; }
1150	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
1185	public List < Map < String , Object >> readExcel ( String file , boolean skipEmptyLines ) { return ExcelReaderCacheGroupHandler . getInstance ( ) . get ( new ExcelReaderFileKey ( file , skipEmptyLines ) ) ; }
1210	public static void launchSettingsPage ( Context context , String fragmentName ) { Intent intent = createIntentForSettingsPage ( context , fragmentName ) ; context . startActivity ( intent ) ; }
1250	public boolean optimizeScanForSingleObject ( ) { return _BOOL ; }
1284	public static String formatSpelledOutAmount ( Double amount , Locale locale ) { return formatSpelledOutAmount ( amount . doubleValue ( ) , locale ) ; }
1293	public boolean isApplicable ( ) { return _BOOL ; }
1334	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
1347	@ Override protected void scanStartElementName ( ) throws IOException , XNIException { fEntityScanner . scanQName ( fElementQName ) ; fSawSpace = fEntityScanner . skipSpaces ( ) ; }
1353	private MetricGroup up_down_host_ ( String host , boolean up ) { final GroupName group = GroupName . valueOf ( getBasePath ( ) , Tags . valueOf ( singletonMap ( _CHAR host _CHAR , MetricValue . fromStrValue ( host ) ) ) ) ; return new SimpleMetricGroup ( group , singleton ( up ? UP_METRIC : DOWN_METRIC ) ) ; }
1380	public boolean isOrderingAsAdded ( ) { return mOrderingAsAdded ; }
1382	private static BigDecimal normalizeDecimalValue ( BigDecimal bigDecimal , int allowedPrecision ) { if ( bigDecimal . precision ( ) > allowedPrecision ) { return _NULL ; } return bigDecimal ; }
1388	@ Override public String toIdString ( Object id ) { return meta . getPrimaryKey ( ) . toKeyString ( id ) ; }
1418	protected SchedulerDriver createInternal ( final Scheduler scheduler , final FrameworkInfo frameworkInfo , final String masterUrl , final Credential credential ) { if ( credential == _NULL ) { return new MesosSchedulerDriver ( scheduler , frameworkInfo , masterUrl ) ; } else { return new MesosSchedulerDriver ( scheduler , frameworkInfo , masterUrl , credential ) ; } }
1443	public void java_lang_System_initProperties ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable sysProps = helper . staticField ( _CHAR java . lang . System _CHAR , _CHAR props _CHAR ) ; helper . assign ( returnVar , sysProps ) ; helper . assign ( sysProps , params [ _NUM ] ) ; }
1515	public static SM_SYSTEM_MESSAGE STR_FORCE_REJECT_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1518	public void delete ( int key ) { int i = ContainerHelpers . binarySearch ( mKeys , mSize , key ) ; if ( i >= _NUM ) { if ( mValues [ i ] != DELETED ) { mValues [ i ] = DELETED ; mGarbage = _BOOL ; } } }
1534	public boolean isApplicable ( ) { ViewerBase viewer = ( ViewerBase ) getViewer ( ) ; return viewer . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
1536	public List < LogicalTable > findByLogicalMetric ( LogicalMetric logicalMetric ) { return values ( ) . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; }
1538	@ Override public boolean shouldSkipField ( FieldAttributes fieldAttributes ) { return ! whitelist . contains ( fieldAttributes . getName ( ) ) ; }
1559	public JComponent createComponent ( ) { return createCheckboxGroup ( ) ; }
1596	public boolean minusFound ( ) { return minusFound ; }
1662	public void zoomCenter ( float scaleX , float scaleY ) { MPPointF center = getCenterOffsets ( ) ; Matrix save = mZoomMatrixBuffer ; mViewPortHandler . zoom ( scaleX , scaleY , center . x , - center . y , save ) ; mViewPortHandler . refresh ( save , this , _BOOL ) ; }
1705	public boolean isSelected ( int position ) { return selectedItems . contains ( Integer . valueOf ( position ) ) ; }
1722	public void removeHeader ( String header ) { clientHeaderMap . remove ( header ) ; }
1743	private void toggleTutorials ( ) { myExpanded = ! myExpanded ; getLog ( ) . debug ( _CHAR Toggled service summary view to expand state : _CHAR + myExpanded ) ; myArrow . setIcon ( myExpanded ? AllIcons . Nodes . TreeDownArrow : AllIcons . Nodes . TreeRightArrow ) ; myTutorialsList . setVisible ( myExpanded ) ; }
1764	public Builder materialDesignInDisabledSteps ( boolean materialDesignInDisabledSteps ) { this . materialDesignInDisabledSteps = materialDesignInDisabledSteps ; return this ; }
1770	public boolean isApplicable ( ) { return getViewer ( ) . getSelectedComponent ( ) == getViewer ( ) . getPcoaTab ( ) ; }
1785	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
1812	@ Override public void endDocument ( ) throws SAXException { return ; }
1821	@ Override public void onSaveInstanceState ( Bundle outState ) { super . onSaveInstanceState ( outState ) ; outState . putString ( POKE_MODEL_STATE_KEY , new Gson ( ) . toJson ( mPokeModel ) ) ; }
1884	@ Override public Serializable parseIdString ( String id ) { return ( Serializable ) meta . getPrimaryKey ( ) . fromKeyString ( id ) ; }
1885	public void addGossipMember ( GossipMember member ) { gossipMembers . add ( member ) ; }
1938	public void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; } }
1950	public void updateWithItemHandler ( String key ) { remove ( key ) ; put ( key , itemHandler . get ( key ) ) ; }
1983	protected boolean hasXIncludeNamespace ( QName element ) { return element . uri == XINCLUDE_NS_URI || fNamespaceContext . getURI ( element . prefix ) == XINCLUDE_NS_URI ; }
2029	@ Override public Histogram histogram ( ) { return p . histogram ( ) ; }
2059	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; serviceID . writeBytes ( out ) ; }
2071	public AudioReorderQuery after ( Integer value ) { return unsafeParam ( _CHAR after _CHAR , value ) ; }
2090	public static SM_SYSTEM_MESSAGE STR_COMBINE_CANT_USE_TOOL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2092	public boolean isOpen ( ) { if ( _NULL != binaryOut && _NULL != dataOutputStream ) { return _BOOL ; } return _BOOL ; }
2107	public static SM_SYSTEM_MESSAGE STR_MSG_DONT_KILL_COUNT_BY_WRONG_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2121	public AdaptableList add ( IAdaptable a ) { children . add ( a ) ; return this ; }
2124	public static SM_SYSTEM_MESSAGE STR_PETITION_USER_NOT_FOUND ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2126	public StreamingStatistics copy ( ) { return new StreamingStatistics ( this ) ; }
2130	public static int binaryLogUp ( int n_ ) { int k = _NUM ; while ( ( _NUM << k ) < n_ ) k ++ ; return k ; }
2132	public boolean isApplicable ( ) { return _BOOL ; }
2183	public void onProgress ( int bytesWritten , int totalSize ) { }
2224	public void changeSpaceState ( int state , boolean electable , boolean replicable ) { _spaceState . setState ( state ) ; modifyLookupAttributes ( new Entry [ ] { new State ( ) } , new Entry [ ] { new State ( state , electable , replicable ) } ) ; }
2228	public Value divide ( Value num1 , Value num2 ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
2276	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_CHANGE_LOOT_PROCESSING_HIS_REQUEST ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2322	public static StatefulHash sha512 ( ) { return Hashes . createStateful ( SimpleHashParameters . SHA512 ) ; }
2456	public void advance ( ) { moveToNextIndex ( ) ; }
2474	public static SM_SYSTEM_MESSAGE STR_MSG_GET_POLL_REWARD_ITEM_MULTI ( int num1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0 ) ; }
2484	public boolean annotate ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR annotate _CHAR ) ; }
2485	public boolean isCheckThirdParty ( ) { return isOptionEnabled ( UrlFilterRuleOption . THIRD_PARTY ) || isOptionDisabled ( UrlFilterRuleOption . THIRD_PARTY ) ; }
2508	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator - do = ( char | word | all ) [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - wordMin = # ] [ - wordMax = # ] [ - wordDist = # ] [ - charMin = # ] [ - charMax = # ] [ - charDist = # ] [ - o = outFile ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] _CHAR ) ; System . err . println ( _CHAR wordMin = # \ tMin word n - gram size .\ nwordMax = # \ tMax word n - gram size .\ nwordDist = # \ tWord n - gram window \ n _CHAR + _CHAR charMin = # \ tMin char n - gram size .\ ncharMax = # \ tMax char n - gram size .\ ncharDist = # \ tChar n - gram window .\ n _CHAR + _CHAR o = outFile \ tThe file to output data . Default is stdout .\ n - t = # \ tNumber of threads . Defaults to _NUM .\ n _CHAR + _CHAR s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR use = o | d \ tUse [ o ] ccurences or average [ d ] istance to assign weights to the graph . Defaults to o .\ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
2530	public boolean isApplicable ( ) { final SamplesViewer samplesViewer = ( ( SamplesViewer ) getViewer ( ) ) ; return samplesViewer != _NULL && samplesViewer . getSamplesTable ( ) . getNumberOfSelectedSamples ( ) > _NUM ; }
2550	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) == ClusterViewer . PCoA_TAB_INDEX && getViewer ( ) . getPcoaTab ( ) . isIs3dMode ( ) ; }
2552	public void enableDragItem ( @ NonNull ItemTouchHelper itemTouchHelper ) { enableDragItem ( itemTouchHelper , NO_TOGGLE_VIEW , _BOOL ) ; }
2557	public boolean isApplicable ( ) { return _BOOL ; }
2580	private Object tryToIgnoreInvalidTags ( final Map < Long , Object > pInputParams ) throws RuleEvaluationException { final Object [ ] valueTokens = splitToTokensAndAllowInvalidTags ( pInputParams ) ; final Object result = InvalidExpressionParser . getInstance ( ) . eval ( valueTokens ) ; return result ; }
2583	public boolean enclosedBy ( NestableTransaction enclosing ) { for ( NestableServerTransaction ancestor = this . parent ; ancestor != _NULL ; ancestor = ancestor . parent ) { if ( ancestor . equals ( enclosing ) ) return _BOOL ; } return _BOOL ; }
2613	public boolean isEmpty ( ) { int bSize = this . bodies . size ( ) ; int jSize = this . joints . size ( ) ; return bSize == _NUM && jSize == _NUM ; }
2722	public EntityQuery distinct ( ) { this . distinct = _BOOL ; return this ; }
2724	public synchronized boolean shouldWait ( List < String > targetNames ) throws InterruptedException { if ( _currentSpaceState == StartupState . LAST ) { return _BOOL ; } if ( ! _activeSpaces . isEmpty ( ) ) return _BOOL ; if ( _currentSpaceState == StartupState . UNINITIALIZED ) { if ( _spaceName . equals ( targetNames . get ( _NUM ) ) ) return _BOOL ; } return _BOOL ; }
2737	public void reset ( final Vector3D p , final Vector3D normal ) throws MathRuntimeException { setNormal ( normal ) ; originOffset =- p . dotProduct ( w ) ; setFrame ( ) ; }
2774	public static void with ( @ NonNull Application application , @ NonNull ShakeDelegate delegate ) { LifecycleCallbacks lifecycleCallbacks = new LifecycleCallbacks ( application , delegate ) ; application . registerActivityLifecycleCallbacks ( lifecycleCallbacks ) ; }
2783	public boolean hasPurchase ( String sku ) { return mPurchaseMap . containsKey ( sku ) ; }
2788	public boolean isWord ( ) { return findChild ( _CHAR ) != _NULL ; }
2800	public boolean equals ( Object other ) { if ( ! ( other instanceof TObjectIntHashMap ) ) { return _BOOL ; } TObjectIntHashMap that = ( TObjectIntHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
2820	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_CANT_ENTER_FOR_TIMEOVER ( String worldname0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 ) ; }
2821	public boolean isApplicable ( ) { ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return viewer . getChartData ( ) . getNumberOfSeries ( ) > _NUM && viewer . getChartSelection ( ) . getSelectedSeries ( ) . size ( ) < viewer . getChartData ( ) . getNumberOfSeries ( ) ; }
2829	public void add ( String line ) { this . graph . append ( line ) ; }
2841	public VideoSaveQuery save ( UserActor actor ) { return new VideoSaveQuery ( getClient ( ) , actor ) ; }
2846	public static RealMatrix createRealIdentityMatrix ( int dimension ) { final RealMatrix m = createRealMatrix ( dimension , dimension ) ; for ( int i = _NUM ; i < dimension ; ++ i ) { m . setEntry ( i , i , _NUM . _NUM ) ; } return m ; }
2849	public Request interceptRequest ( Request request , Connection connection ) { if ( BuildConfig . DEBUG ) { Log . d ( _CHAR Request _CHAR , String . format ( _CHAR % s : % s \ n % s _CHAR , request . method ( ) , request . url ( ) , request . headers ( ) . toString ( ) ) ) ; } return request ; }
2886	@ POST @ Consumes ( _CHAR text / plain _CHAR ) @ Verify public void post ( @ HeaderParam ( DKIMSignature . DKIM_SIGNATURE ) DKIMSignature signature , String input ) { Assert . assertNotNull ( signature ) ; System . out . println ( signature ) ; Assert . assertEquals ( input , _CHAR hello world _CHAR ) ; }
2896	public boolean isApplicable ( ) { return ( getDoc ( ) . getMeganFile ( ) . isRMA2File ( ) || getDoc ( ) . getMeganFile ( ) . isRMA3File ( ) ) || ( getDoc ( ) . getSampleNames ( ) . size ( ) > _NUM && getDoc ( ) . getSampleAttributeTable ( ) . get ( getDoc ( ) . getSampleNames ( ) . get ( _NUM ) , SampleAttributeTable . DescriptionAttribute ) != _NULL ) ; }
2899	public static Aggregate < Map < String , Concept > , Map < Concept , List < Map < String , Concept >> >> group ( String varName ) { return group ( varName , Aggregates . list ( ) ) ; }
2907	public void updateSymbol ( PolygonSymbolizer polygonSymbolizer ) { for ( VendorOptionInterface extension : vendorOptionList ) { boolean displayVendorOption = VendorOptionManager . getInstance ( ) . isAllowed ( vendorOptionVersionList , extension . getVendorOption ( ) ) ; if ( displayVendorOption ) { extension . updateSymbol ( polygonSymbolizer ) ; } } }
2910	private void initializeItem ( TreeItem item ) { if ( item . getChecked ( ) && ! item . getGrayed ( ) ) { updateChildrenItems ( ( TreeItem ) item ) ; } }
2967	@ Override public boolean isDeprecated ( ) { return proto . getOptions ( ) . getDeprecated ( ) ; }
2968	private boolean resultExists ( List < CodeMatchResult > lst , int value ) { for ( CodeMatchResult s : lst ) { if ( s . getLineNumber ( ) == value ) { return _BOOL ; } } return _BOOL ; }
2994	public PhotosSaveWallPhotoQuery userId ( Integer value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
3035	public static SM_SYSTEM_MESSAGE STR_ARTIFACT_CORE_CASTING ( DescriptionId race , DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , race , descriptionId ) ; }
3041	public static boolean isAttachment ( String contentDisposition ) { return contentDisposition != _NULL && contentDisposition . regionMatches ( _BOOL , _NUM , _CHAR attachment _CHAR , _NUM , _NUM ) ; }
3068	public boolean isApplicable ( ) { if ( getViewer ( ) == _NULL || ! ( getViewer ( ) instanceof megan . remote . RemoteServiceBrowser ) ) return _BOOL ; final megan . remote . RemoteServiceBrowser remoteServiceBrowser = ( megan . remote . RemoteServiceBrowser ) getViewer ( ) ; return ! remoteServiceBrowser . isServiceSelected ( ) && remoteServiceBrowser . getURL ( ) . length ( ) > _NUM ; }
3088	public static List < String > splitPath ( File file ) { List < String > output = new ArrayList < > ( ) ; File current = file ; while ( current != _NULL ) { output . add ( current . getName ( ) ) ; current = current . getParentFile ( ) ; } Collections . reverse ( output ) ; return output ; }
3143	public PhotosGetQueryWithExtended feedType ( String value ) { return unsafeParam ( _CHAR feed_type _CHAR , value ) ; }
3187	public AudioReorderQuery before ( Integer value ) { return unsafeParam ( _CHAR before _CHAR , value ) ; }
3193	public boolean canFlip ( ) { return ( ! flipping && elapsedTime != _NUM ) ; }
3196	@ Override public boolean isDeprecated ( ) { return proto . getOptions ( ) . getDeprecated ( ) ; }
3209	public boolean isApplicable ( ) { return _BOOL ; }
3277	public static MainFragment newInstance ( ) { MainFragment fragment = new MainFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( _CHAR DEMO_PRESET _CHAR , CropDemoPreset . RECT . name ( ) ) ; fragment . setArguments ( args ) ; return fragment ; }
3311	public boolean onUpdateViewAnimation ( long time , boolean jumpToEnd ) { boolean finished = _BOOL ; if ( mViewAnimations != _NULL ) { finished = ! mViewAnimations . isRunning ( ) ; finishAnimationsIfDone ( time , jumpToEnd ) ; } return finished ; }
3330	public void dispose ( ) { m_table . getColumn ( m_field ) . removeColumnListener ( this ) ; }
3333	public void openProperties ( DataSource dataSource ) { openProperties ( dataSource , PropertiesProvider . CATEGORY_GENERAL ) ; }
3371	public boolean isApplicable ( ) { return _BOOL ; }
3375	@ Override public void undo ( Transaction tx ) { LogSeqNum lsn = tx . recoveryMgr ( ) . logLogicalAbort ( this . txNum , this . lsn ) ; VanillaDb . logMgr ( ) . flush ( lsn ) ; }
3494	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
3518	public boolean intersects ( S2CellUnion union ) { for ( S2CellId id : union ) { if ( intersects ( id ) ) { return _BOOL ; } } return _BOOL ; }
3527	@ Override public synchronized void add ( Vertex v ) throws Exception { if ( UniqueVertices . containsKey ( v . getLabel ( ) ) ) return ; else super . add ( v ) ; UniqueVertices . put ( v . getLabel ( ) , v ) ; }
3529	public void initializeTabUma ( TabCreationState creationState ) { setTabUma ( new TabUma ( this , creationState , mActivity . getTabModelSelector ( ) . getModel ( mActivity . isIncognito ( ) ) ) ) ; }
3567	public static SM_SYSTEM_MESSAGE STR_MSG_REJECT_MAIL_FROM_LOW_LEVEL ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
3632	public static StatefulHash sha384 ( ) { return Hashes . createStateful ( SimpleHashParameters . SHA384 ) ; }
3639	public void delete ( int key ) { int i = binarySearch ( mKeys , mSize , key ) ; if ( i >= _NUM ) { removeAt ( i ) ; } }
3645	public final Observable < T > read ( final Object group ) { return Observable . defer ( _NULL ) ; }
3652	public boolean isHighlightWithInvisibleEdge ( ) { return highlightWithInvisibleEdge ; }
3658	public static IngredientsFragment newInstance ( Recipe recipe , int sectionNumber ) { IngredientsFragment fragment = new IngredientsFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
3692	public boolean isFillViewport ( ) { return mFillViewport ; }
3694	protected String filterDataString ( String sStr , NamedDocumentNGramGraph cCat ) { return sStr ; }
3697	@ Override public void retry ( VolleyError error ) throws VolleyError { mCurrentRetryCount ++ ; mCurrentTimeoutMs += ( mCurrentTimeoutMs * mBackoffMultiplier ) ; if ( ! hasAttemptRemaining ( ) ) { throw error ; } }
3721	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator - do = ( char | word | all ) [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - wordMin = # ] [ - wordMax = # ] [ - wordDist = # ] [ - charMin = # ] [ - charMax = # ] [ - charDist = # ] [ - o = outFile ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] _CHAR ) ; System . err . println ( _CHAR wordMin = # \ tMin word n - gram size .\ nwordMax = # \ tMax word n - gram size .\ nwordDist = # \ tWord n - gram window \ n _CHAR + _CHAR charMin = # \ tMin char n - gram size .\ ncharMax = # \ tMax char n - gram size .\ ncharDist = # \ tChar n - gram window .\ n _CHAR + _CHAR o = outFile \ tThe file to output data . Default is stdout .\ n - t = # \ tNumber of threads . Defaults to _NUM .\ n _CHAR + _CHAR s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR use = o | d \ tUse [ o ] ccurences or average [ d ] istance to assign weights to the graph . Defaults to o .\ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
3736	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL ; }
3762	public static int readVInt ( byte [ ] bytes , int start ) throws IOException { return WritableComparator . readVInt ( bytes , start ) ; }
3770	public PhotosReportCommentQuery reportComment ( UserActor actor , int ownerId , int commentId ) { return new PhotosReportCommentQuery ( getClient ( ) , actor , ownerId , commentId ) ; }
3794	@ Override public Writer append ( char c ) { return this ; }
3799	public MarketGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
3811	public ScriptingExecutor < T > scriptingExecutor ( ) { return remotingConfigurer . proxy ( ) ; }
3813	public static byte [ ] copy ( byte [ ] src , byte [ ] target ) { if ( target . length < src . length ) { target = new byte [ src . length ] ; } System . arraycopy ( src , _NUM , target , _NUM , src . length ) ; return target ; }
3826	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_INSTANCE_ENTER_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3864	public boolean isApplicable ( ) { return getViewer ( ) instanceof GraphView && ( ( GraphView ) getViewer ( ) ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
3891	public void advance ( ) { moveToNextIndex ( ) ; }
3894	private void refreshProject ( ) { String projectPath = myProject . getBasePath ( ) ; if ( projectPath != _NULL ) { VirtualFile rootDir = LocalFileSystem . getInstance ( ) . findFileByPath ( projectPath ) ; if ( rootDir != _NULL && rootDir . isDirectory ( ) ) { rootDir . refresh ( _BOOL , _BOOL ) ; } } }
3923	public void schedule ( String serviceName , Map < String , ? extends Object > context , long startTime , int frequency , int interval , int count , long endTime ) throws JobManagerException { schedule ( _NULL , serviceName , context , startTime , frequency , interval , count , endTime ) ; }
3956	@ Override public byte [ ] asBytes ( int rowNumber ) { return ByteBuffer . allocate ( _NUM ) . putInt ( getInt ( rowNumber ) ) . array ( ) ; }
3969	boolean isSupportedIn ( int configVersion ) { return supportedVersionRange . contains ( configVersion ) ; }
3979	@ Override public boolean isDeprecated ( ) { return proto . getOptions ( ) . getDeprecated ( ) ; }
3990	public boolean isApplicable ( ) { megan . remote . RemoteServiceBrowser remoteServiceBrowser = ( megan . remote . RemoteServiceBrowser ) getViewer ( ) ; return remoteServiceBrowser != _NULL && remoteServiceBrowser . getServicePanel ( ) != _NULL && remoteServiceBrowser . getServicePanel ( ) . getSelectedFiles ( ) . size ( ) > _NUM ; }
4004	public boolean isApplicable ( ) { final ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return viewer . getActiveLabelsJList ( ) != _NULL && viewer . getActiveLabelsJList ( ) . getSelectedIndex ( ) != - _NUM ; }
4021	public int flags ( ) { return theType . flags ( ) ; }
4054	@ Override public void startDocument ( ) throws SAXException { return ; }
4058	public boolean containsCause ( Class < ? extends Throwable > exceptionClass ) { return containsCause ( exceptionClass , getCauses ( ) ) ; }
4070	public static void println ( Object x ) { out . println ( x ) ; }
4109	private void populateResultsHeader ( IVScanResult ivScanResult ) { resultsPokemonName . setText ( ivScanResult . pokemon . name ) ; resultsPokemonLevel . setText ( getString ( R . string . level_num , ivScanResult . estimatedPokemonLevel ) ) ; }
4136	public void removeFifoXtnInfoForEntry ( IEntryHolder eh ) { FifoXtnEntryInfo Xe = new FifoXtnEntryInfo ( eh . getUID ( ) , eh . getSCN ( ) , eh . getOrder ( ) ) ; _terminatingXtnsEntries . remove ( Xe ) ; }
4138	@ Override public void selectionChanged ( @ Nullable ApkEntry entry ) { if ( myCurrentEditor != _NULL ) { Disposer . dispose ( myCurrentEditor ) ; } VirtualFile file = entry == _NULL ? _NULL : entry . getFile ( ) ; myCurrentEditor = getEditor ( file ) ; mySplitter . setSecondComponent ( myCurrentEditor . getComponent ( ) ) ; }
4198	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_STATUS_UNSEALMAX ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4282	@ Override public void onWebsocketMessageFragment ( WebSocket conn , Framedata frame ) { }
4296	public void fillInitialCache ( ) { removeAll ( ) ; Map < String , T > initialCache = itemHandler . getInitialCache ( ) ; for ( Entry < String , T > entry : initialCache . entrySet ( ) ) { put ( entry . getKey ( ) , entry . getValue ( ) ) ; } }
4314	public boolean isApplicable ( ) { return _BOOL ; }
4336	public boolean isApplicable ( ) { return _BOOL ; }
4372	@ Override public int hashCode ( ) { return _NUM * ( _NUM * _NUM + numerator . hashCode ( ) ) + denominator . hashCode ( ) ; }
4397	public boolean isForceLabelsEnabled ( ) { return mForceLabels ; }
4410	public boolean isApplicable ( ) { return _BOOL ; }
4416	public void moveToId ( int id ) { currentSlot = id ; }
4468	private void openFileWithDefaultNoDefault ( OCFile ocFile ) { getFileOperationsHelper ( ) . openFile ( ocFile ) ; }
4514	public void advance ( ) { moveToNextIndex ( ) ; }
4537	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_RandomMoveLoc_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
4544	public void removeEntityClass ( Class < ? > entityClass ) { checkNotInitialized ( ) ; entityClasses . remove ( entityClass ) ; }
4576	public DescriptiveStatistics copy ( ) { return new DescriptiveStatistics ( this ) ; }
4590	public static boolean putMapNotEmptyKey ( Map < String , String > map , String key , String value ) { if ( map == _NULL || StringUtil . isEmpty ( key ) ) { return _BOOL ; } map . put ( key , value ) ; return _BOOL ; }
4593	private void incrementCounter ( Class < ? extends Joint > clazz ) { Integer n = N . get ( clazz ) ; if ( n == _NULL ) { N . put ( clazz , _NUM ) ; } else { N . put ( clazz , n . intValue ( ) + _NUM ) ; } }
4594	private void sortIfNeeded ( List listToSort ) { if ( sortLists ) { if ( listToSort . stream ( ) . anyMatch ( _NULL ) ) { try { Collections . sort ( listToSort ) ; } catch ( ClassCastException ignored ) { Collections . sort ( listToSort , variableTypedComparator ) ; } } else { Collections . sort ( listToSort , variableTypedComparator ) ; } } }
4618	public boolean isApplicable ( ) { return _BOOL ; }
4651	public static boolean isValidName ( String name ) { return NameConfig . CHAR_NAME_PATTERN . matcher ( name ) . matches ( ) ; }
4693	public static PlaceholderFragment newInstance ( int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
4757	public static SM_SYSTEM_MESSAGE STR_MSG_DELETE_CASH_CUSTOMANIMATION_BY_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4758	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
4832	public V remove ( Object key ) { return doRemove ( key , _NULL ) ; }
4857	public void addHostAndIncludeSystemHost ( String hostIdentifier ) { query . append ( _CHAR + ( conhost : SYSTEM_HOST conhost : _CHAR + hostIdentifier + _CHAR ) _CHAR ) ; }
4866	public static int binaryLogUp ( long n_ ) { int k = _NUM ; while ( ( _NUM << k ) < n_ ) k ++ ; return k ; }
4877	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
4879	protected void buildMetricMakers ( MetricDictionary metricDictionary ) { longSumMaker = new LongSumMaker ( metricDictionary ) ; sketchCountMaker = new SketchCountMaker ( metricDictionary , sketchSize ) ; productMaker = new ArithmeticMaker ( metricDictionary , ArithmeticPostAggregationFunction . MULTIPLY ) ; simpleDailyAverageMaker = new AggregationAverageMaker ( metricDictionary , DAY ) ; rowNumMaker = new RowNumMaker ( metricDictionary ) ; }
4890	public Draggable searchForAsset ( String asset ) { if ( isClosed ( ) ) { pageObjectInjector . inject ( GlobalBar . class ) . toggleSidePanel ( ) ; } verifyResultsVisible ( ) ; searchInput . sendKeys ( asset ) ; searchInput . sendKeys ( Keys . ENTER ) ; verifyResultsVisible ( ) ; return dragAndDropFactory . createDraggable ( getResult ( asset ) , FramePath . parsePath ( _CHAR / _CHAR ) ) ; }
4921	@ Override public Comment createComment ( String data ) { return new CommentImpl ( this , data ) ; }
4935	private synchronized void closeOutputStreamQuietly ( ) { if ( ! mClosed ) { try { mOutputStream . close ( ) ; reportDecodedSizeIfApplicable ( ) ; } catch ( IOException e ) { CLog . writeToConsole ( mNetworkPeerManager , Console . MessageLevel . ERROR , Console . MessageSource . NETWORK , _CHAR Could not close the output stream _CHAR + e ) ; } finally { mClosed = _BOOL ; } } }
4937	public Builder keyboardPanOffset ( Number keyboardPanOffset ) { this . keyboardPanOffset = keyboardPanOffset ; return this ; }
4987	public int equivHashCode ( ) { return name . hashCode ( ) * _NUM + type . hashCode ( ) * _NUM ; }
4999	@ Override public boolean showDialog ( ) { EnvVarDlg envVarDlg = new EnvVarDlg ( this ) ; return envVarDlg . showDialog ( ) ; }
5005	public AudioAddQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
5006	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
5009	public String localName ( ) { return theType . localName ( ) ; }
5012	public double distinctValues ( ) { return distVals ; }
5045	private void addChatMatchSpecToRewardStructure ( ChatMatchSpec c ) { Float reward = c . getReward ( ) . floatValue ( ) ; Pattern pattern = Pattern . compile ( c . getRegex ( ) , Pattern . CASE_INSENSITIVE ) ; patternMap . put ( pattern , reward ) ; }
5090	public void start ( long timeInMillisecond ) { stop ( ) ; fullTime = timeInMillisecond ; startValueAnimator ( _NUM , ( float ) timeInMillisecond / _NUM , fullTime ) ; }
5160	public MessagesGetLongPollServerQuery needPts ( Boolean value ) { return unsafeParam ( _CHAR need_pts _CHAR , value ) ; }
5186	public boolean isApplicable ( ) { ClusterViewer viewer = getViewer ( ) ; if ( viewer . getMatrixTab ( ) != _NULL ) { TableModel model = viewer . getMatrixTab ( ) . getTable ( ) . getModel ( ) ; return model . getRowCount ( ) > _NUM ; } return _BOOL ; }
5191	public void close ( ) { if ( _postponedAsyncOperationsQueue != _NULL ) _postponedAsyncOperationsQueue . close ( ) ; if ( _asyncHandlerProvider != _NULL ) _asyncHandlerProvider . close ( ) ; _router . close ( ) ; }
5209	protected boolean isMockTarget ( ) { return mockDockerHost != _NULL ; }
5216	protected void calcYValueCount ( ) { mYValCount = _NUM ; if ( mDataSets == _NULL ) return ; int count = _NUM ; for ( int i = _NUM ; i < mDataSets . size ( ) ; i ++ ) { count += mDataSets . get ( i ) . getEntryCount ( ) ; } mYValCount = count ; }
5227	public boolean isDrawValueAboveBarEnabled ( ) { return mDrawValueAboveBar ; }
5240	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; return chartViewer . getChartDrawer ( ) != _NULL && chartViewer . getChartDrawer ( ) . canShowXAxis ( ) ; }
5243	public static SM_SYSTEM_MESSAGE STR_MSG_MENTOR_CANT_ENTER ( String worldname0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 ) ; }
5246	public static String roundToString ( double value , int significantFigures ) { MathContext mc = new MathContext ( significantFigures ) ; BigDecimal num = new BigDecimal ( value ) ; return num . round ( mc ) . toPlainString ( ) ; }
5262	public static boolean bernoulli ( ) { return bernoulli ( _NUM . _NUM ) ; }
5271	public int compareTo ( Object o ) { if ( ( o == DONT_CARE ) || ( this == DONT_CARE ) ) { return _NUM ; } else { return ordinal - ( ( Gender ) o ) . ordinal ; } }
5288	public boolean isPagePresent ( String title ) { return grid . isPageOnTheList ( title ) ; }
5300	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
5321	public boolean isApplicable ( ) { return _BOOL ; }
5384	public static Intent createAddToHomeIntent ( String url , String title , Bitmap icon ) { Intent shortcutIntent = createShortcutIntent ( url ) ; return createAddToHomeIntent ( url , title , icon , shortcutIntent ) ; }
5388	public boolean isApplicable ( ) { return _BOOL ; }
5394	public static UByte valueOf ( long value ) throws NumberFormatException { return valueOfUnchecked ( rangeCheck ( value ) ) ; }
5399	private SpaceContext cacheIt ( IRemoteSpace rj , SecurityContext securityContext ) throws RemoteException { SpaceContext spaceContext = proxy . getProxyRouter ( ) . getDefaultSpaceContext ( ) . createCopy ( securityContext ) ; cache . put ( rj . getSpaceUuid ( ) , spaceContext ) ; return spaceContext ; }
5400	private void appendNewBlock ( ) { setLastRecordPosition ( _NUM ) ; currentPos = pointerSize * _NUM ; currentBlk = myPage . append ( logFile ) ; }
5462	private void lockFocus ( ) { try { mPreviewRequestBuilder . set ( CaptureRequest . CONTROL_AF_TRIGGER , CameraMetadata . CONTROL_AF_TRIGGER_START ) ; mState = STATE_WAITING_LOCK ; mCaptureSession . capture ( mPreviewRequestBuilder . build ( ) , mCaptureCallback , mBackgroundHandler ) ; } catch ( CameraAccessException e ) { e . printStackTrace ( ) ; } }
5478	public static BaseResource from ( IResource resource , LocalResourceStatus localResourceStatus ) { if ( SVNNodeKind . FILE . equals ( localResourceStatus . getNodeKind ( ) ) ) { return new BaseFile ( resource , localResourceStatus ) ; } else { return new BaseFolder ( resource , localResourceStatus ) ; } }
5482	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
5499	public boolean isApplicable ( ) { return getViewer ( ) instanceof GraphView && ( ( GraphView ) getViewer ( ) ) . getSelectedEdges ( ) . size ( ) > _NUM ; }
5522	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL ; }
5609	public boolean isApplicable ( ) { ExtractReadsViewer extractReadsViewer = ( ExtractReadsViewer ) getParent ( ) ; Document doc = ( ( Director ) getDir ( ) ) . getDocument ( ) ; return extractReadsViewer != _NULL && doc . getNumberOfReads ( ) > _NUM ; }
5637	public static Date nowMinusDuration ( String duration ) { Duration dr = DateUtils . getDuration ( duration ) ; LocalDateTime time = LocalDateTime . now ( ) . minus ( dr ) ; return DateUtils . getDate ( time ) ; }
5638	public void forEach ( StringMap . ForEachFn < T > forEachFn ) { for ( String key : internalMap . keySet ( ) ) { forEachFn . forEach ( internalMap . get ( key ) , key , this ) ; } }
5700	@ Override public int hashCode ( ) { return proxyID . hashCode ( ) ; }
5782	@ Override public Object call ( ) { cachePersistenceDAO . persistBatch ( keyList ) ; return _NULL ; }
5815	public void selectionChanged ( SelectionChangedEvent event ) { if ( event . getSelection ( ) instanceof IStructuredSelection ) { listSelectionChanged ( ( IStructuredSelection ) event . getSelection ( ) ) ; } else if ( event . getSelection ( ) instanceof ITextSelection ) { textSelectionChanged ( ( ITextSelection ) event . getSelection ( ) ) ; } }
5860	public String localName ( ) { return theType . localName ( ) ; }
5872	private static boolean isInsideActivityTag ( @ NotNull Editor editor , @ NotNull PsiFile file ) { PsiElement psiElement = file . findElementAt ( editor . getCaretModel ( ) . getOffset ( ) ) ; if ( psiElement != _NULL ) { return findXmlTagByName ( psiElement , SdkConstants . TAG_ACTIVITY ) != _NULL ; } return _BOOL ; }
5875	public boolean hasLure ( ) { try { return hasLure ( _BOOL ) ; } catch ( LoginFailedException | RemoteServerException e ) { } return _BOOL ; }
5896	@ Override public void startPrefixMapping ( String prefix , String uri ) throws SAXException { return ; }
5908	public static boolean isCarteBlanche ( String cc ) { return isDinersClub ( cc ) ; }
5933	public boolean isConnected ( ) { return mService != _NULL ; }
5952	public static FrozenNativePage freeze ( NativePage nativePage ) { FrozenNativePage fnp = new FrozenNativePage ( nativePage ) ; nativePage . destroy ( ) ; return fnp ; }
5958	public void begin ( @ SwingCoordinate int x , @ SwingCoordinate int y , @ InputEventMask int startMask ) { myStartX = x ; myStartY = y ; myStartMask = startMask ; }
5981	public boolean swapBuffers ( EGLSurface eglSurface ) { return EGL14 . eglSwapBuffers ( eGLDisplay , eglSurface ) ; }
6026	public void deepFill ( MaryNode specTree ) { tree = specTree ; numberOfLeaves = _NUM ; sortNode ( _NUM , tree ) ; }
6037	private void preOnCreate ( ) { if ( ! getClass ( ) . getSimpleName ( ) . equals ( _CHAR RubotoService _CHAR ) ) { System . out . println ( _CHAR RubotoService preOnCreate ( ) : _CHAR + getClass ( ) . getName ( ) ) ; getScriptInfo ( ) . setRubyClassName ( getClass ( ) . getSimpleName ( ) ) ; JRubyAdapter . setUpJRuby ( this ) ; } }
6091	@ Override public final void writeShort ( int v ) throws IOException { work [ _NUM ] = ( byte ) v ; work [ _NUM ] = ( byte ) ( v >> _NUM ) ; dis . write ( work , _NUM , _NUM ) ; }
6101	public static int findHighestMajorVersion ( Collection < Throwable > list ) { int result = _NUM ; for ( Throwable t : list ) { if ( t instanceof InconvertibleClassError ) { InconvertibleClassError error = ( InconvertibleClassError ) t ; result = Math . max ( result , error . getMajor ( ) ) ; } } return result ; }
6104	protected LikesGetListQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
6113	public static void toHtmlCss ( Grid grid , Writer writer ) { render ( grid , _NULL , writer , HTML_CSS_TEMPLATE ) ; }
6119	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL && inspectorWindow . getDataTree ( ) != _NULL && inspectorWindow . getDataTree ( ) . getModel ( ) . getRoot ( ) != _NULL && inspectorWindow . getDataTree ( ) . getModel ( ) . getChildCount ( inspectorWindow . getDataTree ( ) . getModel ( ) . getRoot ( ) ) > _NUM ; }
6127	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Reflector_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
6139	public int equivHashCode ( ) { final int prime = _NUM ; int result = _NUM ; result = prime * result + ( ( name == _NULL ) ? _NUM : name . hashCode ( ) ) ; result = prime * result + ( ( type == _NULL ) ? _NUM : type . hashCode ( ) ) ; return result ; }
6173	public void addDereference ( VarNode base ) { dereferences . add ( base ) ; }
6183	public int lpcOrder ( ) { return quantizedCoeffs . length ; }
6201	public int face ( ) { return ( int ) ( id >> > POS_BITS ) ; }
6214	public static void wtf ( Throwable throwable ) { log ( Log . ERROR , _NUM , _NULL , new ThrowableFormatter ( ) , _NULL , _NULL , throwable ) ; }
6245	public AemRadioGroup selectByValue ( String value ) { for ( AemRadioOption option : values ) { if ( value . equals ( option . getValue ( ) ) ) { option . setSelected ( ) ; } } return this ; }
6309	public static SM_SYSTEM_MESSAGE STR_MSG_FATIGUE_STATE_RECOVERED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6332	static boolean equal ( Object v1 , Object v2 ) { v1 = maybeConvertToString ( v1 ) ; v2 = maybeConvertToString ( v2 ) ; return Objects . equals ( v1 , v2 ) ; }
6344	public int compareTo ( ResourceUsage o ) { double required = o . limit - o . usage ; double available = limit - usage ; return Double . compare ( available , required ) ; }
6345	@ Override public void onMessage ( AWSIotMessage message ) { }
6350	protected boolean isValidUser ( String user ) { return USER_PATTERN . matcher ( user ) . matches ( ) ; }
6382	protected void drawGridLine ( Canvas c , float x , float y , Path gridLinePath ) { gridLinePath . moveTo ( x , mViewPortHandler . contentBottom ( ) ) ; gridLinePath . lineTo ( x , mViewPortHandler . contentTop ( ) ) ; c . drawPath ( gridLinePath , mGridPaint ) ; gridLinePath . reset ( ) ; }
6387	private int readSample ( ) { int sample = ( int ) inputBuffer [ pos + offsetHigh ] ; sample = ( sample << _NUM ) | ( ( int ) inputBuffer [ pos + offsetLow ] & _NUM ) ; pos += sampleSize ; return sample ; }
6389	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) == ClusterViewer . PCoA_TAB_INDEX ; }
6393	public Iterator tuples ( Predicate filter ) { if ( filter == _NULL ) { return tuples ( ) ; } else { return new CompositeIterator ( m_edgeTuples . iterator ( getEdgeTable ( ) . rows ( filter ) ) , m_nodeTuples . iterator ( getNodeTable ( ) . rows ( filter ) ) ) ; } }
6396	public static ConstraintWidget [ ] inferTableList ( WidgetsScene list ) { for ( ConstraintWidget widget : list . getWidgets ( ) ) { widget . resetAnchors ( ) ; } return inferTableList ( list . getRoot ( ) ) ; }
6404	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPATK_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
6417	public static float computeDiscardAlpha ( float amount , float range ) { if ( Math . abs ( amount ) < _NUM . _NUM ) return _NUM . _NUM ; float t = amount / range ; t = MathUtils . clamp ( t , - _NUM . _NUM , _NUM . _NUM ) ; return _NUM . f - Math . abs ( t ) ; }
6463	private SecurityContext createTrustedContext ( ) { return new SecurityContext ( _NULL , trustedToken ) ; }
6465	public static SM_SYSTEM_MESSAGE STR_UNION_REJECT_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6472	public static Table read ( String fileName , boolean header , char delimiter ) throws IOException { ColumnType [ ] columnTypes = detectColumnTypes ( fileName , header , delimiter ) ; return read ( columnTypes , _BOOL , delimiter , fileName ) ; }
6487	public boolean isApplicable ( ) { final Document doc = ( ( MainViewer ) getDir ( ) . getMainViewer ( ) ) . getDocument ( ) ; return doc . getNumberOfReads ( ) > _NUM ; }
6497	public boolean isApplicable ( ) { ExtractReadsViewer viewer = ( ExtractReadsViewer ) getParent ( ) ; return viewer != _NULL && viewer . getMode ( ) . equals ( ClassificationType . Taxonomy . toString ( ) ) ; }
6505	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getLength ( ) > _NUM ; }
6509	public static boolean isFileExist ( String filePath ) { if ( StringUtil . isEmpty ( filePath ) ) { return _BOOL ; } File file = new File ( filePath ) ; return ( file . exists ( ) && file . isFile ( ) ) ; }
6546	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
6650	protected AuthSignupQuery phone ( String value ) { return unsafeParam ( _CHAR phone _CHAR , value ) ; }
6653	@ Override public final byte [ ] read ( final int num ) { byte [ ] ret = new byte [ num ] ; for ( int x = _NUM ; x < num ; x ++ ) { ret [ x ] = readByte ( ) ; } return ret ; }
6693	public static SM_SYSTEM_MESSAGE STR_FACTION_JOIN_ERROR_MIN_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6698	public boolean isApplicable ( ) { AttributesWindow viewer = ( AttributesWindow ) getViewer ( ) ; return viewer != _NULL && viewer . selectedTaxon != _NULL ; }
6704	public void removeHeader ( String header ) { clientHeaderMap . remove ( header ) ; }
6732	public boolean optimizeScanForSingleObject ( ) { return _supportFifoPerSegment && getNumSegments ( ) == _NUM && size ( ) <= _NUM ; }
6744	public void startPlayback ( ) throws IllegalStateException { startPlayback ( _NUM ) ; }
6766	private void runExecutorAndAwaitCompletion ( ) { try { executor . awaitCompletion ( ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } Throwable exception = executor . getException ( ) ; if ( exception != _NULL ) { throw new RuntimeException ( _CHAR There were exceptions during IFDS analysis . Exiting . '' , exception ) ; } }
6767	public static SM_SYSTEM_MESSAGE STR_EXTEND_INVENTORY_CANT_EXTEND_DUE_TO_MINIMUM_EXTEND_LEVEL_BY_THIS_NPC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
6824	@ Override public boolean equals ( Object another ) { if ( another == _NULL ) return _BOOL ; if ( ! ( another instanceof GenericPrincipal ) ) return _BOOL ; if ( ! getUserName ( ) . equals ( ( ( GenericPrincipal ) another ) . getUserName ( ) ) ) return _BOOL ; return _BOOL ; }
6883	public static void toPdf ( Grid grid , OutputStream out ) { if ( isNonEmptyGrid ( grid ) ) { Document document = openDocument ( out ) ; toPdfInternal ( grid , document , _NUM ) ; addPdfTimestamp ( document , _BOOL ) ; closeDocument ( document ) ; } }
6931	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getSelectedBlock ( ) . isSelected ( ) && ( viewer . getAlignment ( ) . getSequenceType ( ) . equalsIgnoreCase ( Alignment . DNA ) || viewer . getAlignment ( ) . getSequenceType ( ) . equalsIgnoreCase ( Alignment . cDNA ) ) && ! viewer . isShowAminoAcids ( ) ; }
6934	public EquipmentConfiguration createEquipmentConfiguration ( final String equipmentUnitXml ) throws Exception { return this . createEquipmentConfiguration ( parser . parse ( equipmentUnitXml ) . getDocumentElement ( ) ) ; }
7013	public boolean isApplicable ( ) { ViewerBase viewer = ( ViewerBase ) getViewer ( ) ; return viewer . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
7034	public String namespace ( ) { return theType . namespace ( ) ; }
7042	public static void startAnimation ( View animView ) { Animation tx = new TranslateAnimation ( - _NUM , _NUM , _NUM , _NUM ) ; tx . setDuration ( _NUM ) ; tx . setRepeatCount ( Animation . INFINITE ) ; tx . setInterpolator ( new AccelerateDecelerateInterpolator ( ) ) ; tx . setRepeatMode ( Animation . REVERSE ) ; animView . startAnimation ( tx ) ; }
7060	public void addHostAndIncludeSystemHost ( String hostIdentifier ) { query . append ( _CHAR + ( conhost : SYSTEM_HOST conhost : _CHAR + hostIdentifier + _CHAR ) _CHAR ) ; }
7074	public void writeTextUnit ( ITextUnit tu ) { writeTextUnit ( tu , _NULL ) ; }
7084	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
7205	public boolean isUnitQuaternion ( double eps ) { return Precision . equals ( getNorm ( ) , _NUM , eps ) ; }
7214	public static MyServicePrx uncheckedCast ( Ice . ObjectPrx __obj ) { return uncheckedCastImpl ( __obj , MyServicePrx . class , MyServicePrxHelper . class ) ; }
7239	public static long toSeconds ( BigInteger eu , BigFraction unitsInSec ) { BigFraction editUnits = new BigFraction ( eu ) ; return editUnits . divide ( unitsInSec ) . longValue ( ) ; }
7242	boolean canSendSurroundings ( @ Nullable URL baseContentViewUrl ) { if ( isUserUndecided ( ) ) return _BOOL ; if ( isPromoAvailable ( ) ) { return isBasePageHTTP ( baseContentViewUrl ) ; } return _BOOL ; }
7247	public boolean hasCategoryOptions ( ) { return categoryOptions != _NULL && ! categoryOptions . isEmpty ( ) ; }
7285	public BoardEditTopicQuery editTopic ( UserActor actor , int groupId , int topicId , String title ) { return new BoardEditTopicQuery ( getClient ( ) , actor , groupId , topicId , title ) ; }
7296	@ Override public void onViewCreated ( View view , @ Nullable Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ) ; init ( view ) ; setInit ( ) ; setData ( ) ; }
7370	public int size ( ) { return map . size ( ) ; }
7398	public static void main ( String [ ] args ) { System . out . println ( _CHAR Solutions : \ n _CHAR + new NQueens ( _NUM ) . parallelStream ( ) . limit ( _NUM ) . map ( _NULL ) . collect ( Collectors . joining ( _CHAR \ n \ n _CHAR ) ) ) ; }
7414	@ Override public void printStackTrace ( ) { printStackTrace ( System . err ) ; }
7427	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
7430	public boolean hasPurchase ( String sku ) { return mPurchaseMap . containsKey ( sku ) ; }
7442	public void zLazyInitObjectsWithCallback ( MithraRuntimeType mithraRuntimeType , MithraConfigurationManager . PostInitializeHook hook ) { configManager . lazyInitObjectsWithCallback ( mithraRuntimeType , hook ) ; }
7481	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
7496	public boolean isApplicable ( ) { return _BOOL ; }
7581	void balanceTree ( BinarySearchTreeNode < E > node ) { while ( node != _NULL ) { node = balance ( node ) ; node = node . parent ; } }
7589	private void runExecutorAndAwaitCompletion ( ) { try { executor . awaitCompletion ( ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } Throwable exception = executor . getException ( ) ; if ( exception != _NULL ) { throw new RuntimeException ( _CHAR There were exceptions during IDE analysis . Exiting . '' , exception ) ; } }
7623	public boolean isApplicable ( ) { final LabelsJList list = ( ( ChartViewer ) getViewer ( ) ) . getActiveLabelsJList ( ) ; return list != _NULL && list . getSelectedIndex ( ) != - _NUM ; }
7626	public boolean isCompactionFlow ( ) { return isCompactionFlow ; }
7661	public < T > void send ( T message , Object token ) { sendToTargetOrType ( message , _NULL , token ) ; }
7812	public boolean isApplicable ( ) { if ( getViewer ( ) instanceof ClusterViewer ) { final ClusterViewer clusterViewer = ( ClusterViewer ) getViewer ( ) ; return clusterViewer . isPCoATab ( ) && clusterViewer . getGraphView ( ) . getSelectedNodes ( ) . size ( ) >= _NUM ; } else return _BOOL ; }
7841	private Object handleRuleWithInvalidTags ( final Map < Long , Object > pInputParams ) throws RuleEvaluationException { final Object result = tryToIgnoreInvalidTags ( pInputParams ) ; if ( isResultInvalid ( result ) ) { throw new RuleEvaluationException ( _CHAR Can not evaluate rule : Invalid tags found ! _CHAR ) ; } return result ; }
7870	public boolean isApplicable ( ) { return _BOOL ; }
7888	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
7920	public Iterator tuplesReversed ( ) { return m_tuples . iterator ( rows ( _BOOL ) ) ; }
7925	public static UnitThrowAnalysis v ( ) { return G . v ( ) . soot_toolkits_exceptions_UnitThrowAnalysis ( ) ; }
7932	public AemDropdown selectByPartialText ( String text ) { if ( text == _NULL ) { return this ; } expandDropdown ( ) ; getItemByTextContaining ( text ) . click ( ) ; return this ; }
7965	public Matrix solveTranspose ( Matrix B ) { return transpose ( ) . solve ( B . transpose ( ) ) ; }
7983	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL ; }
8041	public Bindings addOptComponent ( String property , Class < ? extends IValidatable > clazz , JToggleButton c ) { return addOptComponent ( property , clazz , c , _BOOL ) ; }
8045	public boolean isApplicable ( ) { RemoteServiceBrowser remoteServiceBrowser = ( RemoteServiceBrowser ) getViewer ( ) ; return remoteServiceBrowser != _NULL && remoteServiceBrowser . getServicePanel ( ) != _NULL && remoteServiceBrowser . getServicePanel ( ) . getSelectedFiles ( ) . size ( ) > _NUM ; }
8048	public boolean hasStatusText ( ) { return mStatusText != _NULL ; }
8134	public EntityQuery distinct ( boolean distinct ) { this . distinct = distinct ; return this ; }
8170	public Path relativizeWithTargetDirectory ( Path path ) { return targetDirectoryPath . relativize ( path . toAbsolutePath ( ) ) ; }
8175	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_PASSWORD_CHANGED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8177	public boolean equals ( Object other ) { if ( ! ( other instanceof TIntObjectHashMap ) ) { return _BOOL ; } TIntObjectHashMap that = ( TIntObjectHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
8203	public boolean isApplicable ( ) { return ClassificationManager . get ( getViewer ( ) . getClassName ( ) , _BOOL ) . getId2Rank ( ) . size ( ) > _NUM ; }
8246	public static StatefulHash md5 ( ) { return Hashes . createStateful ( SimpleHashParameters . MD5 ) ; }
8289	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sprint_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
8290	@ Override public InputSource resolveEntity ( String publicId , String systemId ) throws SAXException , IOException { return resolveEntity ( _NULL , publicId , _NULL , systemId ) ; }
8301	protected void sample ( String val ) { for ( int i = _NUM ; i < m_parsers . length ; ++ i ) { if ( m_isCandidate [ i ] ) { m_isCandidate [ i ] = m_parsers [ i ] . canParse ( val ) ; } } }
8303	public boolean isApplicable ( ) { return _BOOL ; }
8311	@ Override public void retry ( VolleyError error ) throws VolleyError { mCurrentRetryCount ++ ; mCurrentTimeoutMs += ( mCurrentTimeoutMs * mBackoffMultiplier ) ; if ( ! hasAttemptRemaining ( ) ) { throw error ; } }
8319	protected void pushRight ( BinarySearchTreeNode < E > node ) { while ( node != _NULL ) { this . stack . push ( node ) ; node = node . right ; } }
8355	public int memberOf ( ) { return theType . memberOf ( ) ; }
8410	private void resolveCaptures ( ) { Set < String > captures = new HashSet < > ( ) ; getVarSet ( ) . forEach ( _NULL ) ; captures . forEach ( _NULL ) ; }
8417	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
8433	public void rejectDocument ( NGramDocument dDoc ) { DocumentNGramGraph gGraph = dDoc . getDocumentGraph ( ) . intersectGraph ( getDocumentGraph ( ) ) ; DocumentNGramHistogram hHistogram = dDoc . getDocumentHistogram ( ) . intersectHistogram ( getDocumentHistogram ( ) ) ; getDocumentGraph ( ) . degrade ( gGraph ) ; }
8448	static CanonicalCookie createFromStream ( DataInputStream in ) throws IOException { return new CanonicalCookie ( in . readUTF ( ) , in . readUTF ( ) , in . readUTF ( ) , in . readUTF ( ) , in . readUTF ( ) , in . readLong ( ) , in . readLong ( ) , in . readLong ( ) , in . readBoolean ( ) , in . readBoolean ( ) , in . readBoolean ( ) , in . readInt ( ) ) ; }
8544	public boolean isApplicable ( ) { return getViewer ( ) != _NULL ; }
8594	public MessagesSendQuery userIds ( Integer ... value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
8600	public boolean isDirty ( ) { return dirty ; }
8601	private synchronized void trim ( ) { while ( mCurrentSize > mSizeLimit ) { byte [ ] buf = mBuffersByLastUse . remove ( _NUM ) ; mBuffersBySize . remove ( buf ) ; mCurrentSize -= buf . length ; } }
8612	public boolean accept ( File dir , String name ) { return accept ( new File ( dir , name ) ) ; }
8619	public static int readVInt ( byte [ ] bytes , int start ) throws IOException { return ( int ) readVLong ( bytes , start ) ; }
8647	private boolean isLegalContainedNode ( Node node ) { if ( node == _NULL ) return _BOOL ; switch ( node . getNodeType ( ) ) { case Node . DOCUMENT_NODE : case Node . DOCUMENT_FRAGMENT_NODE : case Node . ATTRIBUTE_NODE : case Node . ENTITY_NODE : case Node . NOTATION_NODE : return _BOOL ; } return _BOOL ; }
8667	public String diff_text1 ( List < Diff > diffs ) { StringBuilder text = new StringBuilder ( ) ; for ( Diff aDiff : diffs ) { if ( aDiff . operation != Operation . INSERT ) { text . append ( aDiff . text ) ; } } return text . toString ( ) ; }
8707	private void checkEglError ( String msg ) { int error ; if ( ( error = EGL14 . eglGetError ( ) ) != EGL14 . EGL_SUCCESS ) { throw new RuntimeException ( msg + _CHAR : EGL error : _NUM _CHAR + Integer . toHexString ( error ) ) ; } }
8712	public Builder intoClasspathEntries ( @ Nullable Collection < String > classpathEntries ) { myClasspathEntries = classpathEntries ; return this ; }
8748	public boolean equals ( Object other ) { if ( ! ( other instanceof TShortLongHashMap ) ) { return _BOOL ; } TShortLongHashMap that = ( TShortLongHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
8778	public static boolean isPhiExpr ( Value value ) { return ( value instanceof PhiExpr ) ; }
8809	@ Override public void retry ( VolleyError error ) throws VolleyError { mCurrentRetryCount ++ ; mCurrentTimeoutMs += ( mCurrentTimeoutMs * mBackoffMultiplier ) ; if ( ! hasAttemptRemaining ( ) ) { throw error ; } }
8811	protected static ActionResultInfo performAction ( GenericValue productPromoAction , ShoppingCart cart , Delegator delegator , LocalDispatcher dispatcher , Timestamp nowTimestamp ) throws GenericEntityException , CartItemModifyException { ActionResultInfo actionResultInfo = new ActionResultInfo ( ) ; performAction ( actionResultInfo , productPromoAction , cart , delegator , dispatcher , nowTimestamp ) ; return actionResultInfo ; }
8877	public static StatefulHash sha1 ( ) { return Hashes . createStateful ( SimpleHashParameters . SHA1 ) ; }
8938	public void clearLocal ( ) { super . clear ( ) ; }
8993	private boolean isArrayContains ( Object [ ] a , Object obj ) { for ( int i = _NUM ; i < a . length ; i ++ ) { if ( a [ i ] . equals ( obj ) ) return _BOOL ; } return _BOOL ; }
9006	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) == ClusterViewer . PCoA_TAB_INDEX && getViewer ( ) . getPcoaTab ( ) . isIs3dMode ( ) ; }
9044	public void enableDragItem ( @ NonNull ItemTouchHelper itemTouchHelper ) { enableDragItem ( itemTouchHelper , NO_TOGGLE_VIEW , _BOOL ) ; }
9052	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
9067	public TransformWork withConsole ( Console newConsole ) { return new TransformWork ( checkoutDir , metadata , changes , Preconditions . checkNotNull ( newConsole ) ) ; }
9107	public boolean isApplicable ( ) { return getViewer ( ) instanceof ViewerBase ; }
9108	public boolean isApplicable ( ) { return _BOOL ; }
9142	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_CRITICAL ( int num1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0 ) ; }
9195	private void init ( ) { parseActions ( ) ; parseName ( new StringTokenizer ( getName ( ) , _CHAR _CHAR , _BOOL ) , _BOOL ) ; }
9197	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_InteralSkill_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
9215	protected void skip ( ) { do { readBlock ( ) ; } while ( ( blockSize > _NUM ) && ! err ( ) ) ; }
9255	protected void performTypingAction ( PsiFile file , char typedChar ) { performTypingAction ( openFileInEditor ( file . getVirtualFile ( ) ) , typedChar ) ; }
9323	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
9336	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
9342	public void swapChildren ( int index1 , int index2 ) { Spatial c2 = children . get ( index2 ) ; Spatial c1 = children . remove ( index1 ) ; children . add ( index1 , c2 ) ; children . remove ( index2 ) ; children . add ( index2 , c1 ) ; }
9343	@ Override public EntityReference createEntityReference ( String name ) throws DOMException { if ( errorChecking && ! isXMLName ( name , xml11Version ) ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR INVALID_CHARACTER_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . INVALID_CHARACTER_ERR , msg ) ; } return new EntityReferenceImpl ( this , name ) ; }
9359	public static Predicate < EmailData > isReceivedAfter ( final DateTime dateTime ) { return _NULL ; }
9383	public static boolean isSupportedHardware ( Context context ) { FingerprintManagerCompat fingerprintManager = FingerprintManagerCompat . from ( context ) ; return fingerprintManager . isHardwareDetected ( ) ; }
9420	public boolean isApplicable ( ) { return _BOOL ; }
9421	protected Set < D > computeReturnFlowFunction ( FlowFunction < D > retFunction , D d1 , D d2 , N callSite , Collection < D > callerSideDs ) { return retFunction . computeTargets ( d2 ) ; }
9502	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
9543	void onDragDismissed ( ) { }
9569	public void revertToDefault ( int row ) { }
9590	private synchronized void trim ( ) { while ( mCurrentSize > mSizeLimit ) { byte [ ] buf = mBuffersByLastUse . remove ( _NUM ) ; mBuffersBySize . remove ( buf ) ; mCurrentSize -= buf . length ; } }
9618	void startRotate ( float startAngleDeg , float dAngleDeg , int durationMillis ) { mMode = SCROLL_MODE ; mFinished = _BOOL ; mDurationMillis = durationMillis ; mStartMillis = AnimationUtils . currentAnimationTimeMillis ( ) ; mStartAngleDeg = startAngleDeg ; mDeltaAngleDeg = dAngleDeg ; }
9629	public boolean isPureQuaternion ( double eps ) { return FastMath . abs ( getQ0 ( ) ) <= eps ; }
9639	@ JsonIgnore public boolean isTimeDeadbandEnabled ( ) { return this . timeDeadband > _NUM ; }
9647	public Builder withModule ( @ NotNull Module module ) { VirtualFile [ ] roots = ModuleRootManager . getInstance ( module ) . getContentRoots ( ) ; assert roots . length > _NUM ; myModuleRoot = VfsUtilCore . virtualToIoFile ( roots [ _NUM ] ) ; return this ; }
9650	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_EXP_GAIN_VITAL_BONUS ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
9698	public static boolean isDailyReminderSet ( Context context ) { SharedPreferences prefs = PreferenceManager . getDefaultSharedPreferences ( context ) ; return prefs . getBoolean ( context . getString ( R . string . key_daily_reminder ) , _BOOL ) ; }
9713	public int equivHashCode ( ) { return getMethod ( ) . equivHashCode ( ) ; }
9745	public void resourceSyncInfoChanged ( IResource [ ] changedResources ) { for ( int i = _NUM ; i < changedResources . length ; i ++ ) { if ( resource != _NULL && changedResources [ i ] . equals ( resource . getIResource ( ) ) ) { refresh ( ) ; } } }
9756	public synchronized BookKeeperClientBuilder dlConfig ( DistributedLogConfiguration dlConfig ) { this . dlConfig = dlConfig ; return this ; }
9764	public static void disableConsoleLogging ( ) { consoleLoggingEnabled = _BOOL ; }
9822	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Provoker_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
9830	public boolean dump_intra ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - intra _CHAR ) ; }
9855	@ Override public void retry ( VolleyError error ) throws VolleyError { mCurrentRetryCount ++ ; mCurrentTimeoutMs += ( mCurrentTimeoutMs * mBackoffMultiplier ) ; if ( ! hasAttemptRemaining ( ) ) { throw error ; } }
9866	public boolean isApplicable ( ) { return getViewer ( ) instanceof ChartViewer && ( ( ChartViewer ) getViewer ( ) ) . getChartDrawer ( ) instanceof BarChartDrawer && ! ( ( ( ChartViewer ) getViewer ( ) ) . getChartDrawer ( ) instanceof StackedLineChartDrawer ) ; }
9896	private static Collection < TrustAnchor > sortPotentialAnchors ( Set < TrustAnchor > anchors ) { if ( anchors . size ( ) <= _NUM ) { return anchors ; } List < TrustAnchor > sortedAnchors = new ArrayList < TrustAnchor > ( anchors ) ; Collections . sort ( sortedAnchors , TRUST_ANCHOR_COMPARATOR ) ; return sortedAnchors ; }
10027	public boolean isNull ( int index ) throws LazyException { LazyNode token = getValueToken ( index ) ; if ( token . type == LazyNode . VALUE_NULL ) return _BOOL ; return _BOOL ; }
10030	public void removeHeader ( String header ) { clientHeaderMap . remove ( header ) ; }
10036	public boolean supportsRemoteHeapDump ( Application application ) { if ( application . getState ( ) != Stateful . STATE_AVAILABLE ) return _BOOL ; if ( application . isLocalApplication ( ) ) return _BOOL ; JmxModel jmxModel = JmxModelFactory . getJmxModelFor ( application ) ; return jmxModel == _NULL ? _BOOL : jmxModel . isTakeHeapDumpSupported ( ) ; }
10039	public Matrix zoom ( float scaleX , float scaleY , float x , float y ) { Matrix save = new Matrix ( ) ; zoom ( scaleX , scaleY , x , y , save ) ; return save ; }
10043	@ Override public Attr createAttribute ( String name ) throws DOMException { if ( errorChecking && ! isXMLName ( name , xml11Version ) ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR INVALID_CHARACTER_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . INVALID_CHARACTER_ERR , msg ) ; } return new AttrImpl ( this , name ) ; }
10188	private static String toString ( double coeff ) { final String c = Double . toString ( coeff ) ; if ( c . endsWith ( _CHAR . _NUM _CHAR ) ) { return c . substring ( _NUM , c . length ( ) - _NUM ) ; } else { return c ; } }
10241	@ Nullable public static RuleName createIfValid ( String ruleName ) { if ( validate ( ruleName , _NULL ) ) { return new RuleName ( ruleName ) ; } return _NULL ; }
10273	public boolean isUseFifoGrouping ( ) { return useFifoGrouping ; }
10381	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
10411	public static SM_SYSTEM_MESSAGE STR_MSG_LOOT_ALREADY_DISTRIBUTING_ITEM ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
10437	public void attachTo ( ImmersiveEffect effect ) throws RuntimeException { if ( mEffect != _NULL ) { throw new RuntimeException ( _CHAR Previous effect is still attached , call detach ( ) first _CHAR ) ; } mEffect = effect ; mEffect . addParameter ( mParameter ) ; }
10448	public boolean isApplicable ( ) { final CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL && viewer . getMode ( ) == Comparer . COMPARISON_MODE . RELATIVE ; }
10457	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) == ClusterViewer . PCoA_TAB_INDEX && getViewer ( ) . getPcoaTab ( ) . isIs3dMode ( ) ; }
10497	public int equivHashCode ( ) { return getOpBox ( ) . getValue ( ) . equivHashCode ( ) ; }
10525	public VideoDeleteAlbumQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
10550	public void register ( K key , V value ) { register ( availableIds . nextClearBit ( _NUM ) , key , value ) ; }
10622	public void invalidate ( RuleTag ruleTag , TagQualityStatus status , String statusDescription , Timestamp timestamp ) { updateQuality ( ruleTag , status , statusDescription ) ; setTimestamp ( ruleTag , timestamp ) ; }
10692	public void readDataFile ( URL fileUrl ) throws DataFileException { if ( fileUrl == _NULL ) { throw new IllegalStateException ( _CHAR File URL is _NULL , can not load file _CHAR ) ; } RecordIterator recordIterator = this . makeRecordIterator ( fileUrl ) ; while ( recordIterator . hasNext ( ) ) { this . records . add ( recordIterator . next ( ) ) ; } }
10708	public static boolean isBodyCenterEnabled ( ) { return bodyCenterEnabled ; }
10748	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_EXP_GAIN_MAKEUP_BONUS ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
10751	public boolean isApplicable ( ) { return getDoc ( ) . getNumberOfReads ( ) > _NUM ; }
10805	public Iterator childEdges ( Node n ) { return super . outEdges ( n ) ; }
10808	protected String generateMetricName ( String filterString ) { return filterString . replace ( _CHAR | _CHAR , _CHAR _ _CHAR ) . replace ( _CHAR - _CHAR , _CHAR _ _CHAR ) . replace ( _CHAR , _CHAR , _CHAR _ _CHAR ) . replace ( _CHAR ] _CHAR , _CHAR _CHAR ) . replace ( _CHAR [ _CHAR , _CHAR _ _CHAR ) ; }
10816	public static byte [ ] createByteArray ( int size , String data ) { byte [ ] byteArray = new byte [ size ] ; for ( int i = _NUM ; i < size ; i ++ ) { byteArray [ i ] = Byte . parseByte ( data , _NUM ) ; } return byteArray ; }
10836	@ Override public boolean isDeprecated ( ) { return proto . getOptions ( ) . getDeprecated ( ) ; }
10891	public void onCompletion ( MediaPlayer player ) { Log . d ( LOG_TAG , _CHAR on completion is calling stopped _CHAR ) ; this . setState ( STATE . MEDIA_STOPPED ) ; }
10911	protected TreeItem < WeakRef < Node >> insertIntoMap ( Node node ) { return insertWeakRefIntoMap ( new WeakRef < Node > ( node ) ) ; }
10914	@ Override public void write ( byte [ ] b ) throws IOException { }
10938	public boolean hasChild ( String name ) { for ( Node child : children ) { if ( child . name . equals ( name ) ) { return _BOOL ; } } return _BOOL ; }
10979	public Future execute ( CompletionCallback < Object > callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . cond_ , this . task_ , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
10998	@ Override public boolean accept ( File dir , String name ) { return pattern . matcher ( name ) . matches ( ) ; }
11020	public boolean isApplicable ( ) { return getViewer ( ) . isPCoATab ( ) ; }
11059	public boolean isApplicable ( ) { return getViewer ( ) instanceof ViewerBase ; }
11075	public AemSidekick clickTab ( SidekickTab tab ) { final By locator = By . className ( AEM_SIDEKICK_TAB_ICON_PARTIAL_CLASS + tab . getTabName ( ) ) ; final WebElement element = driver . findElement ( locator ) ; bobcatWait . withTimeout ( Timeouts . SMALL ) . until ( SidekickActions . showSidekickTab ( element ) ) ; return this ; }
11102	private void writeFlowPair ( FlowPair pair , Document document , Element parentElement ) { Element flowPair = document . createElement ( _CHAR flowpair _CHAR ) ; parentElement . appendChild ( flowPair ) ; writeDomainSpec ( pair . getFirstDomain ( ) , document , flowPair ) ; writeDomainSpec ( pair . getSecondDomain ( ) , document , flowPair ) ; }
11136	public boolean isExplicit ( ) { return kind . isExplicit ( ) ; }
11142	@ Override public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { return ; }
11154	public StaticInvokeExpr newStaticInvokeExpr ( SootMethodRef method , List args ) { return new GStaticInvokeExpr ( method , args ) ; }
11208	public static String slurpFile ( String filename , String encoding ) throws IOException { Reader r = new InputStreamReader ( new FileInputStream ( filename ) , encoding ) ; return slurpReader ( r ) ; }
11249	public int flags ( ) { return theType . flags ( ) ; }
11265	public static Manager v ( ) { return G . v ( ) . soot_toolkits_exceptions_ThrowableSet_Manager ( ) ; }
11273	public boolean isInjured ( ) { return ! isFainted ( ) && getStamina ( ) < getMaxStamina ( ) ; }
11419	public static List < Protos . Offer > filterOutAcceptedOffers ( List < Protos . Offer > offers , Collection < Protos . OfferID > acceptedOfferIds ) { return offers . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; }
11420	public boolean checkCloseHitTest ( float x , float y , boolean isRTL ) { RectF closeRectangle = getCloseBounds ( isRTL ) ; return closeRectangle != _NULL ? closeRectangle . contains ( x , y ) : _BOOL ; }
11438	public boolean isApplicable ( ) { return _BOOL ; }
11442	@ RequestMapping ( value = _CHAR / account / reset_password / init _CHAR , method = RequestMethod . POST , produces = MediaType . TEXT_PLAIN_VALUE ) @ Timed public ResponseEntity < ? > requestPasswordReset ( @ RequestBody String mail , HttpServletRequest request ) { return userService . requestPasswordReset ( mail ) . map ( _NULL ) . orElse ( new ResponseEntity < > ( _CHAR e - mail address not registered _CHAR , HttpStatus . BAD_REQUEST ) ) ; }
11452	public VideoReorderVideosQuery targetId ( Integer value ) { return unsafeParam ( _CHAR target_id _CHAR , value ) ; }
11475	@ Override public byte [ ] asBytes ( int rowNumber ) { return ByteBuffer . allocate ( _NUM ) . putFloat ( get ( rowNumber ) ) . array ( ) ; }
11476	public boolean isTransient ( ) { Allophone allophone = getAllophone ( ) ; return allophone . isPlosive ( ) || allophone . isAffricate ( ) ; }
11537	public static void startTiming ( Object caller ) { startTiming ( caller . getClass ( ) . getSimpleName ( ) ) ; }
11551	public boolean isApplicable ( ) { return getViewer ( ) . isPCoATab ( ) ; }
11571	public MessagesIsMessagesFromGroupAllowedQuery isMessagesFromGroupAllowed ( Actor actor , int groupId , int userId ) { return new MessagesIsMessagesFromGroupAllowedQuery ( getClient ( ) , actor , groupId , userId ) ; }
11577	public static PhaseDumper v ( ) { return G . v ( ) . soot_util_PhaseDumper ( ) ; }
11585	protected ChangeListener createListener ( ) { return new RangeSliderChangeListener ( ) ; }
11615	public GroupsIsMemberQuery isMember ( UserActor actor , String groupId ) { return new GroupsIsMemberQuery ( getClient ( ) , actor , groupId ) ; }
11668	public < T > void send ( T message ) { sendToTargetOrType ( message , _NULL , _NULL ) ; }
11747	public boolean isApplicable ( ) { return ProjectManager . getNumberOfProjects ( ) == _NUM && ( ( Director ) ProjectManager . getProjects ( ) . get ( _NUM ) ) . getDocument ( ) . getNumberOfSamples ( ) == _NUM ; }
11748	public boolean isApplicable ( ) { return _BOOL ; }
11767	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL && inspectorWindow . getDataTree ( ) != _NULL && inspectorWindow . getDataTree ( ) . getModel ( ) . getRoot ( ) != _NULL && inspectorWindow . getDataTree ( ) . getModel ( ) . getChildCount ( inspectorWindow . getDataTree ( ) . getModel ( ) . getRoot ( ) ) > _NUM ; }
11769	public boolean optimizeScanForSingleObject ( ) { return _BOOL ; }
11787	public void reset ( ) { super . reset ( ) ; m_prevRoot = _NULL ; }
11848	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
11875	public Path relativizeWithUserDirectory ( Path path ) { return Paths . get ( System . getProperty ( _CHAR user . dir _CHAR ) ) . relativize ( path . toAbsolutePath ( ) ) ; }
11881	void listMethods ( ) { int i ; for ( i = _NUM ; i < methods_count ; i ++ ) { G . v ( ) . out . println ( methods [ i ] . prototype ( constant_pool ) ) ; } }
11958	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
11977	private static String [ ] toSuffixes ( String [ ] extensions ) { String [ ] suffixes = new String [ extensions . length ] ; for ( int i = _NUM ; i < extensions . length ; i ++ ) { suffixes [ i ] = _CHAR . _CHAR + extensions [ i ] ; } return suffixes ; }
12033	public Builder messageDigest ( String messageDigest ) { this . messageDigest = messageDigest ; return this ; }
12072	public GroupsIsMemberQueryWithExtended isMemberExtended ( String groupId ) { return new GroupsIsMemberQueryWithExtended ( getClient ( ) , groupId ) ; }
12084	public BoardCreateCommentQuery createComment ( UserActor actor , int groupId , int topicId ) { return new BoardCreateCommentQuery ( getClient ( ) , actor , groupId , topicId ) ; }
12159	public static final void removePlayer ( Player player ) { PlayerGroup group = player . getPlayerGroup2 ( ) ; if ( group != _NULL ) { group . onEvent ( new PlayerGroupLeavedEvent ( group , player ) ) ; } }
12177	public void removeColumnListener ( ColumnListener listener ) { m_listeners . remove ( listener ) ; }
12233	public boolean equivTo ( Object o ) { return this . equals ( o ) ; }
12260	private void checkServerResponseCode ( HttpURLConnection urlConnection ) throws RequestFailureException { try { if ( urlConnection . getResponseCode ( ) != _NUM ) { throw new RequestFailureException ( _CHAR Received _CHAR + urlConnection . getResponseCode ( ) + _CHAR code instead of _NUM ( OK ) from the server . Aborting . '' ) ; } } catch ( IOException e ) { throw new RequestFailureException ( _CHAR Failed to read response code from server : _CHAR , e ) ; } }
12330	public void rejectDocument ( NGramDocument dDoc ) { DocumentNGramGraph gGraph = dDoc . getDocumentGraph ( ) . intersectGraph ( getDocumentGraph ( ) ) ; DocumentNGramHistogram hHistogram = dDoc . getDocumentHistogram ( ) . intersectHistogram ( getDocumentHistogram ( ) ) ; getDocumentGraph ( ) . degrade ( gGraph ) ; }
12335	public static void loadPlugins ( final Plugins plugins ) throws RuntimeException { for ( final PluginDescription plugin : plugins . getPluginDescriptions ( ) ) { if ( plugin instanceof PhasePluginDescription ) { handlePhasePlugin ( ( PhasePluginDescription ) plugin ) ; } else { G . v ( ) . out . println ( _CHAR [ Warning ] Unhandled plugin of type _CHAR_CHAR_CHAR _CHAR ) ; } } }
12349	public void toAllInRadius ( WorldServer world , Vec3d pos , double radius ) { double maxDistance = radius * radius + radius * radius + radius * radius ; toAll ( world . getPlayers ( EntityPlayerMP . class , _NULL ) ) ; }
12366	private void trigger ( int position , float positionOffset ) { CircleIndicator . this . mCurItemPosition = position ; CircleIndicator . this . mCurItemPositionOffset = positionOffset ; requestLayout ( ) ; invalidate ( ) ; }
12378	public JToggleGroup createCheckboxGroup ( ) { return createToggleGroup ( JToggleGroup . CHECKBOX ) ; }
12388	public PhotosGetAllQuery needHidden ( Boolean value ) { return unsafeParam ( _CHAR need_hidden _CHAR , value ) ; }
12390	public static SM_SYSTEM_MESSAGE STR_CANNOT_USE_DIRECT_PORTAL_BY_SLAYER_GRADE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12432	public GroupsIsMemberQueryWithExtended isMemberExtended ( UserActor actor , String groupId ) { return new GroupsIsMemberQueryWithExtended ( getClient ( ) , actor , groupId ) ; }
12490	public void startPreview ( ) { if ( camera != _NULL && ! previewing ) { camera . startPreview ( ) ; previewing = _BOOL ; } }
12502	public static boolean isNimbus ( ) { return UIUtils . isNimbus ( ) ; }
12532	public Matrix solveTranspose ( Matrix B ) { return transpose ( ) . solve ( B . transpose ( ) ) ; }
12556	@ Override public void redo ( Transaction tx ) { }
12597	@ Override public void onLoadFinished ( Loader < Cursor > loader , Cursor cursor ) { Log . d ( TAG , _CHAR Obtained cursor . '' ) ; if ( isAdded ( ) ) { mListOfFavPokemon = PokeCursorManager . getPokemonInDb ( cursor , PokeDBContract . FavoritePokemonEntry . TABLE_NAME , PokeDBContract . FavoritePokemonEntry . COLUMN_NUMBER ) ; } }
12606	@ Override public void write ( char [ ] chr , int st , int end ) { }
12679	public MessagesSendQuery userIds ( List < Integer > value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
12681	@ Override public boolean isApplicable ( ) { return _BOOL ; }
12689	public Iterator < String > keys ( ) { return root . getStringIterator ( cbuf ) ; }
12691	private void addToQueue ( Collection < SerialMessage > msgs , ZWaveCommandClass commandClass , int endpointId ) { if ( msgs == _NULL ) { return ; } for ( SerialMessage serialMessage : msgs ) { addToQueue ( node . encapsulate ( serialMessage , commandClass , endpointId ) ) ; } }
12697	@ Override public void run ( ) { while ( ! isInterrupted ( ) ) { try { Reference ref = _queue . remove ( ) ; _entryInfos . remove ( ref ) ; } catch ( InterruptedException e ) { interrupt ( ) ; break ; } } }
12717	private void updateMouse ( @ SwingCoordinate int x , @ SwingCoordinate int y ) { if ( myCurrentInteraction != _NULL ) { myCurrentInteraction . update ( x , y , ourLastStateMask ) ; mySurface . repaint ( ) ; } }
12772	public WatchedObject addResponseWatch ( SocketChannel sock , ConnectionResource client ) { return addWatch ( new ResponseWatchedObject ( this , sock , client ) ) ; }
12836	private boolean cIsArithmetic ( Character c ) { return ( c == _CHAR || c == _CHAR || c == _CHAR || c == _CHAR ) ; }
12846	public boolean isApplicable ( ) { TaxonomicProfileDialog viewer = ( TaxonomicProfileDialog ) getParent ( ) ; return viewer != _NULL ; }
12870	public static SM_SYSTEM_MESSAGE STR_CHAT_CHANNEL_LEVEL_CHANGED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12875	public boolean isApplicable ( ) { return _BOOL ; }
12880	public static PlaceholderFragment newInstance ( int sectionNumber , String content ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; args . putString ( ARG_CONTENT , content ) ; fragment . setArguments ( args ) ; return fragment ; }
12895	public boolean isValidName ( String name ) { return LegionConfig . LEGION_NAME_PATTERN . matcher ( name ) . matches ( ) ; }
12904	@ Override public void addASModel ( ASModel abstractSchema ) { fASModels . addElement ( abstractSchema ) ; }
12906	public void schedule ( String poolName , String serviceName , String dataId , long startTime ) throws JobManagerException { schedule ( _NULL , poolName , serviceName , dataId , startTime , - _NUM , _NUM , _NUM , _NUM , - _NUM ) ; }
12959	private boolean isPermissionRequested ( String permission ) { SharedPreferences preferences = PreferenceManager . getDefaultSharedPreferences ( this ) ; return preferences . getBoolean ( permission , _BOOL ) ; }
12968	@ Override public boolean optimizeScanForSingleObject ( ) { return _BOOL ; }
12971	public boolean isApplicable ( ) { MainViewer mainViewer = ( MainViewer ) getDir ( ) . getViewerByClass ( MainViewer . class ) ; return mainViewer != _NULL && mainViewer . hasComparableData ( ) ; }
12978	@ Override public void startPrefixMapping ( String prefix , String uri ) throws SAXException { return ; }
13015	private void validateModeConditions ( Filter filter ) { expect ( filter . getFilterConditions ( ) . stream ( ) . filter ( HAS_ANY_MODE ) . findFirst ( ) . isPresent ( ) , equalTo ( _BOOL ) ) . verify ( INCORRECT_FILTER_PARAMETERS , _CHAR Filters for ' mode ' are n ' t applicable for project ' s launches . '' ) ; }
13022	public void deleteKey ( String publicKey ) { this . api . deleteApiByPublicKey ( publicKey ) ; }
13049	private void trigger ( int position , float positionOffset ) { CircleIndicator . this . mCurItemPosition = position ; CircleIndicator . this . mCurItemPositionOffset = positionOffset ; Log . e ( _CHAR CircleIndicator _CHAR , _CHAR onPageScrolled ( ) _CHAR + position + _CHAR : _CHAR + positionOffset ) ; requestLayout ( ) ; invalidate ( ) ; }
13053	@ Override public void write ( String str , int st , int end ) { }
13066	public void schedule ( String serviceName , Map < String , ? extends Object > context , long startTime , int frequency , int interval , int count ) throws JobManagerException { schedule ( serviceName , context , startTime , frequency , interval , count , _NUM ) ; }
13094	public NewMultiArrayExpr newNewMultiArrayExpr ( ArrayType type , List sizes ) { return new GNewMultiArrayExpr ( type , sizes ) ; }
13117	public void advance ( ) { moveToNextIndex ( ) ; }
13127	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_PICKUP_ITEM_HE_DENIED_MY_ASK ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
13163	public boolean isApplicable ( ) { return _BOOL ; }
13222	public ItemStack dispenseStack ( IBlockSource source , ItemStack stack ) { if ( FluidUtil . getFluidContained ( stack ) != _NULL ) { return dumpContainer ( source , stack ) ; } else { return fillContainer ( source , stack ) ; } }
13224	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Snare_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
13234	public static int broadcast ( String message , String permission ) { return server . broadcast ( message , permission ) ; }
13274	public void destroy ( ) { mBookmarksModel . removeDeleteObserver ( this ) ; mSnackbarManager . dismissSnackbars ( this ) ; }
13290	public void chooseDayNightMode ( @ AppCompatDelegate . NightMode int mode ) { checkInit ( ) ; mPreferences . edit ( ) . putInt ( PREFERENCE_DAYNIGHT_KEY , mode ) . apply ( ) ; }
13300	public static String saltString ( byte [ ] salt ) { return Base64 . encodeToString ( salt , BASE64_FLAGS ) ; }
13308	void modifiedCharacterData ( NodeImpl node , String oldvalue , String value , boolean replace ) { }
13314	@ Override public void write ( String str ) { }
13350	@ Override public CDATASection createCDATASection ( String data ) throws DOMException { return new CDATASectionImpl ( this , data ) ; }
13356	public boolean isApplicable ( ) { return _BOOL ; }
13389	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
13396	public int equivHashCode ( ) { return getBootstrapMethod ( ) . equivHashCode ( ) * getMethod ( ) . equivHashCode ( ) * _NUM ; }
13439	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
13467	private boolean isSizeAvailableToLoadColumnDictionary ( long requiredSize ) { return lruCacheMemorySize >= ( currentSize + requiredSize ) ; }
13488	public static String toSystemDependentPath ( String path ) { if ( File . separatorChar != _CHAR ) { path = path . replace ( _CHAR , File . separatorChar ) ; } return path ; }
13526	public Iterator inNeighbors ( Node n ) { return new NeighborIterator ( n , inEdges ( n ) ) ; }
13527	private boolean containsPhoneDescendants ( List < Element > tokensAndBoundaries ) { for ( Element element : tokensAndBoundaries ) { if ( element . getTagName ( ) . equals ( MaryXML . TOKEN ) && element . getElementsByTagName ( MaryXML . PHONE ) . getLength ( ) > _NUM ) { return _BOOL ; } } return _BOOL ; }
13542	public static void useSkill ( AbstractAI ai2 , int skillId ) { ai2 . getOwner ( ) . getController ( ) . useSkill ( skillId ) ; }
13543	public AemDialog openByContextMenu ( final By clickableArea ) { openByContextMenu ( currentScope . findElement ( clickableArea ) ) ; return this ; }
13546	protected String filterDataString ( String sStr , NamedDocumentNGramGraph cCat ) { return sStr ; }
13554	public void addPaintListener ( PaintListener pl ) { if ( m_painters == _NULL ) m_painters = new CopyOnWriteArrayList ( ) ; m_painters . add ( pl ) ; }
13569	public boolean isApplicable ( ) { RemoteServiceBrowser remoteServiceBrowser = ( RemoteServiceBrowser ) getViewer ( ) ; return remoteServiceBrowser != _NULL && remoteServiceBrowser . getServicePanel ( ) != _NULL && remoteServiceBrowser . getServicePanel ( ) . getFileTree ( ) . getModel ( ) . getRoot ( ) != _NULL && remoteServiceBrowser . getServicePanel ( ) . getFileTree ( ) . getModel ( ) . getChildCount ( remoteServiceBrowser . getServicePanel ( ) . getFileTree ( ) . getModel ( ) . getRoot ( ) ) > _NUM ; }
13580	void replacedCharacterData ( NodeImpl node , String oldvalue , String value ) { }
13589	public void associateExecutionById ( String executionId ) { Execution execution = processEngine . getRuntimeService ( ) . createExecutionQuery ( ) . executionId ( executionId ) . singleResult ( ) ; if ( execution == _NULL ) { throw new ActivitiCdiException ( _CHAR Can not associate execution by id : no execution with id _CHAR_CHAR_CHAR found . '' ) ; } associationManager . setExecution ( execution ) ; }
13599	@ Override public boolean isApplicable ( ) { if ( ProgramProperties . get ( _CHAR always - allow - open - fviewer _CHAR , _BOOL ) ) return _BOOL ; final Document doc = ( ( Director ) getDir ( ) ) . getDocument ( ) ; return doc . getActiveViewers ( ) . contains ( cName ) ; }
13637	public void addOperationListener ( OnRemoteOperationListener listener , Handler callbackHandler ) { synchronized ( mBoundListeners ) { mBoundListeners . put ( listener , callbackHandler ) ; } }
13647	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_PICKUP_ITEM_ASK_SUBMITTED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13650	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_CHANGE_LOOT_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13662	public boolean hasAndroidPlugin ( ) { List < String > plugins = getPlugins ( ) ; return plugins . contains ( GradleDetector . APP_PLUGIN_ID ) || plugins . contains ( GradleDetector . OLD_APP_PLUGIN_ID ) || plugins . contains ( GradleDetector . LIB_PLUGIN_ID ) || plugins . contains ( GradleDetector . OLD_LIB_PLUGIN_ID ) ; }
13723	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getReference ( ) != _NULL && viewer . getAlignment ( ) . getReference ( ) . getLength ( ) > _NUM ; }
13734	@ Override public Dfp negate ( ) { Dfp result = newInstance ( this ) ; result . sign = ( byte ) - result . sign ; return result ; }
13747	@ Override public void retry ( VolleyError error ) throws VolleyError { mCurrentRetryCount ++ ; mCurrentTimeoutMs += ( mCurrentTimeoutMs * mBackoffMultiplier ) ; if ( ! hasAttemptRemaining ( ) ) { throw error ; } }
13760	private synchronized void stopInclusionTimer ( ) { logger . debug ( _CHAR Stopping inclusion timer . '' ) ; if ( inclusion ) { requestAddNodesStop ( ) ; } else if ( exclusion ) { requestRemoveNodesStop ( ) ; } else { logger . error ( _CHAR Neither inclusion nor exclusion was active ! _CHAR ) ; } inclusion = _BOOL ; exclusion = _BOOL ; if ( timerTask != _NULL ) { timerTask . cancel ( ) ; timerTask = _NULL ; } }
13778	public void dumpBinary ( DataOutputStream os ) throws IOException { os . writeInt ( numberOfChannels ) ; os . writeInt ( sampleRate ) ; os . writeFloat ( coeffMin ) ; os . writeFloat ( coeffRange ) ; os . writeFloat ( postEmphasis ) ; os . writeInt ( residualFold ) ; }
13783	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
13787	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getNumberOfSequences ( ) > _NUM ; }
13816	public boolean isApplicable ( ) { return _BOOL ; }
13824	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Slow_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
13829	public void clearDirtyFlag ( ) { dirty = _BOOL ; }
13855	public boolean isApplicable ( ) { return getDoc ( ) . getNumberOfReads ( ) > _NUM ; }
13872	public static List < String > splitPath ( String path ) { return splitPath ( new File ( path ) ) ; }
13877	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) == ClusterViewer . PCoA_TAB_INDEX ; }
13882	public void tabSelectingEffect ( long time , int id ) { int index = TabModelUtils . getTabIndexById ( mTabModel , id ) ; startAnimation ( time , OverviewAnimationType . TAB_FOCUSED , index , - _NUM , _BOOL ) ; }
13892	private static boolean inStringArray ( String value , String [ ] stringArray ) { for ( int i = _NUM ; i < stringArray . length ; i ++ ) { if ( stringArray [ i ] . equals ( value ) ) { return _BOOL ; } } return _BOOL ; }
13980	public boolean isNeverUploadCrashDump ( ) { if ( isCellularExperimentEnabled ( ) ) return ! isUsageAndCrashReportingEnabled ( ) ; return ! isUploadCrashDumpEnabled ( ) ; }
14020	@ Override public Set < K > keySet ( ) { return keys ; }
14036	public Future execute ( CompletionCallback < Object > callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . conditional_ , this . task_ , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
14075	public static boolean isAcceptCsvGzip ( HttpServletRequest request ) { return request != _NULL && ( ( request . getPathInfo ( ) != _NULL && request . getPathInfo ( ) . endsWith ( _CHAR . gz _CHAR ) ) || ( request . getHeader ( _CHAR Accept _CHAR ) != _NULL && request . getHeader ( _CHAR Accept _CHAR ) . contains ( _CHAR application / csv + gzip _CHAR ) ) ) ; }
14082	public boolean isApplicable ( ) { return _BOOL ; }
14090	private void handleActionBaz ( String param1 , String param2 ) { throw new UnsupportedOperationException ( _CHAR Not yet implemented _CHAR ) ; }
14092	public static void assertContains ( double [ ] values , double x , double epsilon ) { assertContains ( _NULL , values , x , epsilon ) ; }
14102	public boolean containsPrimaryKey ( ) { return containsPrimaryKey ( _BOOL ) ; }
14124	public synchronized boolean isSubEquipmentAliveType ( ) { return ( getAliveType ( ) . equals ( AliveTimer . ALIVE_TYPE_SUBEQUIPMENT ) ) ; }
14139	public static Image stringToImage ( String string ) { return Toolkit . getDefaultToolkit ( ) . createImage ( Base64 . base64ToByteArray ( string ) ) ; }
14172	public static final boolean anyIsTrue ( Boolean ... conditions ) { if ( conditions != _NULL ) { for ( Boolean condition : conditions ) { if ( condition != _NULL && condition . booleanValue ( ) ) { return _BOOL ; } } } return _BOOL ; }
14183	public boolean plusFound ( ) { return plusFound ; }
14197	public GroupsIsMemberQuery isMember ( String groupId ) { return new GroupsIsMemberQuery ( getClient ( ) , groupId ) ; }
14205	public static void captureBitmap ( View view , Canvas canvas ) { recursiveInvalidate ( view ) ; view . draw ( canvas ) ; }
14260	public JToggleGroup createRadioGroup ( ) { return createToggleGroup ( JToggleGroup . RADIO ) ; }
14309	public VideoSaveQuery albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
14319	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_StatUp_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
14332	public GraphSimilarity compareMeaningsOf ( Vertex vNode1 , Vertex vNode2 ) { GraphSimilarity isRes = new GraphSimilarity ( ) ; return isRes ; }
14362	public < T > Future execute ( int retries , CompletionCallback < T > callback ) { return this . execute ( retries , _NUM , callback ) ; }
14365	public static boolean dispatchCommand ( CommandSender sender , String commandLine ) throws CommandException { return server . dispatchCommand ( sender , commandLine ) ; }
14427	private boolean hasDualWieldingSkills ( ) { return owner . getSkillList ( ) . isSkillPresent ( _NUM ) || owner . getSkillList ( ) . isSkillPresent ( _NUM ) || owner . getSkillList ( ) . isSkillPresent ( _NUM ) || owner . getSkillList ( ) . isSkillPresent ( _NUM ) || owner . getSkillList ( ) . isSkillPresent ( _NUM ) ; }
14428	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) != ClusterViewer . MATRIX_TAB_INDEX ; }
14436	public boolean isApplicable ( ) { return getViewer ( ) != _NULL ; }
14491	public boolean replaceNext ( String regularExpression , String replaceText ) { System . err . println ( _CHAR not implemented _CHAR ) ; return _BOOL ; }
14524	@ NonNull private List < String > mapObsoleteElements ( List < String > names ) { List < String > elementsToRemove = new ArrayList < > ( names . size ( ) ) ; for ( String name : names ) { if ( name . startsWith ( _CHAR android _CHAR ) ) continue ; elementsToRemove . add ( name ) ; } return elementsToRemove ; }
14576	public boolean isShortFeature ( String featureName ) { try { int index = getFeatureIndex ( featureName ) ; return isShortFeature ( index ) ; } catch ( Exception e ) { return _BOOL ; } }
14582	public boolean isApplicable ( ) { return getViewer ( ) . isPCoATab ( ) && getViewer ( ) . getDir ( ) . getDocument ( ) . getSampleAttributeTable ( ) . getNumericalAttributes ( _NULL ) . size ( ) > _NUM ; }
14607	public static SM_SYSTEM_MESSAGE STR_MSG_LIMIT_SALE_M_EPIC_SHOP_DESC01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14622	public static TypeRef of ( MessageType messageType ) { return interner . intern ( new TypeRef ( Type . TYPE_MESSAGE , Cardinality . OPTIONAL , messageType , _NULL ) ) ; }
14641	@ ObjectiveCName ( _CHAR removeEntry : index : _CHAR ) public List removeEntry ( String entry , int index ) { java . util . List entries = this . getEntries ( ) ; if ( entries . get ( index ) . equals ( entry ) ) { entries . remove ( index ) ; } this . updateList ( entries ) ; return this ; }
14676	public static float atan ( float fValue ) { return ( float ) Math . atan ( fValue ) ; }
14691	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
14714	@ JsonIgnore public boolean isValueDeadbandEnabled ( ) { return this . valueDeadbandType != DataTagDeadband . DEADBAND_NONE ; }
14735	public static ProbeItemDescriptor continuousLineFillItem ( String name , String description , ItemValueFormatter formatter ) { return continuousItem ( name , description , formatter , _NUM , _NUM , MAX_VALUE_UNDEFINED , DEFAULT_LINE_WIDTH , DEFAULT_COLOR , DEFAULT_COLOR ) ; }
14741	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( theCamera . getCamera ( ) ) ; } }
14789	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) == ClusterViewer . PCoA_TAB_INDEX ; }
14791	public boolean isApplicable ( ) { return _BOOL ; }
14793	public static IngredientsFragment newInstance ( Recipe recipe , int sectionNumber ) { IngredientsFragment fragment = new IngredientsFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
14815	public static RecipeFragment newInstance ( Recipe recipe , int sectionNumber ) { RecipeFragment fragment = new RecipeFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
14828	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; SelectedBlock selectedBlock = viewer . getSelectedBlock ( ) ; return viewer . getAlignment ( ) . getNumberOfSequences ( ) > _NUM && selectedBlock . isSelected ( ) && selectedBlock . getFirstRow ( ) > _NUM ; }
14831	public boolean isApplicable ( ) { return getViewer ( ) != _NULL && getViewer ( ) instanceof megan . remote . RemoteServiceBrowser && ( ( megan . remote . RemoteServiceBrowser ) getViewer ( ) ) . isServiceSelected ( ) ; }
14839	public void dispose ( StepMetaInterface smi , StepDataInterface sdi ) { meta = ( CarbonSliceMergerStepMeta ) smi ; data = ( CarbonSliceMergerStepData ) sdi ; super . dispose ( smi , sdi ) ; }
14873	public boolean isApplicable ( ) { return _BOOL ; }
14911	public final int computeHashCode ( long val ) { return HashFunctions . hash ( val ) ; }
14917	public boolean isNaN ( ) { return Double . isNaN ( x . getReal ( ) ) || Double . isNaN ( y . getReal ( ) ) || Double . isNaN ( z . getReal ( ) ) ; }
15038	public boolean isConcrete ( ) { return ! isInterface ( ) && ! isAbstract ( ) ; }
15042	public ConfettiManager disableFadeOut ( ) { this . fadeOutInterpolator = _NULL ; return this ; }
15111	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL && viewer . getJList ( ) . getSelectedValuesList ( ) . size ( ) >= _NUM ; }
15119	@ Override public WebDriver defaultContent ( ) { frameSwitcher . putDefaultFramePathOnStack ( ) ; return targetLocator . defaultContent ( ) ; }
15134	public boolean isApplicable ( ) { return ( ( AlignmentViewer ) getViewer ( ) ) . getSelectedBlock ( ) . isSelected ( ) ; }
15265	private synchronized void trim ( ) { while ( mCurrentSize > mSizeLimit ) { byte [ ] buf = mBuffersByLastUse . remove ( _NUM ) ; mBuffersBySize . remove ( buf ) ; mCurrentSize -= buf . length ; } }
15273	public final Point readPos ( ) { final int x = readShort ( ) ; final int y = readShort ( ) ; return new Point ( x , y ) ; }
15278	private boolean workspaceValid ( String workspaceName ) { if ( isDefaultWorkspace ( workspaceName ) ) { return _BOOL ; } return Pattern . matches ( _CHAR \\ w + _CHAR , workspaceName ) ; }
15298	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_PROC_NOT_ENOUGH_MONEY ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
15319	protected void updateOKStatus ( ) { if ( fViewer != _NULL ) { if ( ! scopeCheckingElement ) { if ( ! selectedResourcesScope . getSelection ( ) ) { selectedResourcesScope . setSelection ( _BOOL ) ; participantScope . setSelection ( _BOOL ) ; workingSetScope . setSelection ( _BOOL ) ; updateSelectedResourcesScope ( ) ; } } setPageComplete ( areAnyElementsChecked ( ) != _NULL ) ; } else { setPageComplete ( _BOOL ) ; } }
15404	public static SM_SYSTEM_MESSAGE STR_UNION_CHANGE_FORCE_NUMBER_HIM ( String value0 , int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num0 ) ; }
15455	private boolean isCacheable ( ) { SimplifiedIntervalList missingIntervals = getPartialIntervalsWithDefault ( getResponseContext ( ) ) ; SimplifiedIntervalList volatileIntervals = getVolatileIntervalsWithDefault ( getResponseContext ( ) ) ; return missingIntervals . isEmpty ( ) && volatileIntervals . isEmpty ( ) ; }
15462	private boolean closeToMaxRange ( ) { BoundedRangeModel model = getModel ( ) ; return model . getMaximum ( ) - ( model . getValue ( ) + model . getExtent ( ) ) < STREAMING_POSITION_THRESHOLD * model . getExtent ( ) ; }
15512	public void treeWillCollapse ( TreeExpansionEvent event ) throws ExpandVetoException { }
15519	int positionEnd ( ) { return positionStart + itemCount ; }
15528	public Builder globalTag ( String val ) { globalTag = val ; return this ; }
15603	public boolean isApplicable ( ) { return _BOOL ; }
15612	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL ; }
15628	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
15631	public GroupsIsMemberQueryWithUserIdsExtended isMemberExtended ( String groupId , List < Integer > userIds ) { return new GroupsIsMemberQueryWithUserIdsExtended ( getClient ( ) , groupId , userIds ) ; }
15643	public Builder attribution ( String attribution ) { this . attribution = attribution ; return this ; }
15651	@ TargetApi ( Build . VERSION_CODES . M ) public static boolean hasPermission ( Activity activity , String [ ] permissions ) { for ( String permission : permissions ) { if ( activity . checkSelfPermission ( permission ) != PackageManager . PERMISSION_GRANTED ) { return _BOOL ; } } return _BOOL ; }
15669	public TrustManagerBuilder withConfig ( @ NonNull Context ctxt , @ XmlRes int resourceId ) { return ( withConfig ( new XmlConfigSource ( ctxt , resourceId , _BOOL ) ) ) ; }
15671	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_CHARGE_FAIL_ALREADY_FULLY_CHARGED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15720	public static MyServicePrx uncheckedCast ( Ice . ObjectPrx __obj , String __facet ) { return uncheckedCastImpl ( __obj , __facet , MyServicePrx . class , MyServicePrxHelper . class ) ; }
15736	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
15762	public static final double combinationsOfNByK ( int n , int k ) { return gr . demokritos . iit . jinsect . utils . factorial ( n , k ) ; }
15767	protected Set < D > computeReturnFlowFunction ( FlowFunction < D > retFunction , D d1 , D d2 , N callSite , Set < D > callerSideDs ) { return retFunction . computeTargets ( d2 ) ; }
15769	private static void resolvePhpExpression ( PhpExpression objSubjectExpression , @ Nullable Function objScope , PhpIndex objIndex , HashSet < String > objTypesSet ) { storeAsTypeWithSignaturesImport ( objSubjectExpression . getType ( ) . toString ( ) , objScope , objIndex , objTypesSet ) ; }
15771	public void encoding ( ) { outputRes ( ) ; rdp_encoding ( ) ; }
15784	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; return chartViewer . getChartDrawer ( ) != _NULL && chartViewer . getChartDrawer ( ) . canShowXAxis ( ) ; }
15792	public boolean isApplicable ( ) { return _BOOL ; }
15796	public boolean swapBuffers ( ) { boolean result = eglCore . swapBuffers ( eGLSurface ) ; if ( ! result ) { Log . i ( TAG , _CHAR WARNING : swapBuffers ( ) failed _CHAR ) ; } return result ; }
15802	public void reset ( ) { m_root = _NULL ; }
15808	public void endFadeAnimation ( ) { if ( mFadeAnimation != _NULL ) { mFadeAnimation . end ( ) ; mFadeAnimation = _NULL ; } }
15843	public JSONArray names ( ) { JSONArray ja = new JSONArray ( ) ; Iterator keys = keys ( ) ; while ( keys . hasNext ( ) ) { ja . put ( keys . next ( ) ) ; } return ja . length ( ) == _NUM ? _NULL : ja ; }
15851	public boolean isApplicable ( ) { return ( ( Director ) getDir ( ) ) . getDocument ( ) . getSampleSelection ( ) . size ( ) > _NUM ; }
15883	@ Override public void retry ( VolleyError error ) throws VolleyError { mCurrentRetryCount ++ ; mCurrentTimeoutMs += ( mCurrentTimeoutMs * mBackoffMultiplier ) ; if ( ! hasAttemptRemaining ( ) ) { throw error ; } }
15905	private Set < AccessPath > handleStringGetChars ( InvokeExpr invokeExpr , AccessPath taintedPath ) { if ( ( ( InstanceInvokeExpr ) invokeExpr ) . getBase ( ) == taintedPath . getPlainValue ( ) ) return new TwoElementSet < AccessPath > ( taintedPath , new AccessPath ( invokeExpr . getArg ( _NUM ) , _BOOL ) ) ; return Collections . singleton ( taintedPath ) ; }
15918	public void removeFifoXtnInfoForEntry ( IEntryHolder eh ) { _terminatingXtnsInfo . removeFifoXtnInfoForEntry ( eh ) ; }
15995	protected NewsfeedSearchQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
16001	public static SM_SYSTEM_MESSAGE STR_MSG_REJECT_WHISPER_FROM_LOW_LEVEL ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
16021	public void advance ( ) { moveToNextIndex ( ) ; }
16064	public GroupsIsMemberQueryWithUserIds isMember ( String groupId , Integer ... userIds ) { return new GroupsIsMemberQueryWithUserIds ( getClient ( ) , groupId , userIds ) ; }
16092	public boolean isApplicable ( ) { return getViewer ( ) instanceof ChartViewer && ( ( ChartViewer ) getViewer ( ) ) . getChartDrawer ( ) instanceof BarChartDrawer ; }
16170	@ Override public void close ( ) { s . close ( ) ; idx . close ( ) ; ts . close ( ) ; }
16185	@ AfterClass public void afterClass ( ) { toCleanUp . add ( initialExperiment ) ; toCleanUp . add ( completeExperiment ) ; }
16203	private void resetAllStates ( ) { resetSelectionStates ( ) ; mWasLastTapValid = _BOOL ; }
16216	@ Override public void write ( DataOutput out ) throws IOException { out . writeLong ( duration ) ; out . writeInt ( getLength ( ) ) ; frame . write ( out ) ; }
16231	public boolean isApplicable ( ) { try { return getViewer ( ) . isPCoATab ( ) && getViewer ( ) . getPcoaTab ( ) . getPCoA ( ) . getEigenValues ( ) != _NULL ; } catch ( Exception ex ) { return _BOOL ; } }
16242	public IteratorBuilder iteratorScope ( IteratorScope iteratorScope ) { iteratorConfig . setIteratorScope ( iteratorScope ) ; return this ; }
16362	public boolean isApplicable ( ) { return _BOOL ; }
16368	public void oneShot ( ) { confettiManager . setNumInitialCount ( _NUM ) . setEmissionDuration ( _NUM ) . animate ( ) ; }
16388	public boolean isApplicable ( ) { return ( ( Director ) getDir ( ) ) . getDocument ( ) . getSampleSelection ( ) . size ( ) > _NUM ; }
16429	@ Override public boolean isDeprecated ( ) { return proto . getOptions ( ) . getDeprecated ( ) ; }
16431	public boolean declaresField ( String name , Type type ) { checkLevel ( SIGNATURES ) ; for ( SootField field : fields ) { if ( field . getName ( ) . equals ( name ) && field . getType ( ) . equals ( type ) ) return _BOOL ; } return _BOOL ; }
16467	public DetectorResult detect ( ) throws NotFoundException , FormatException { return detect ( _NULL ) ; }
16527	public long createAlarm ( Intent intent , long timestamp ) { PendingIntent retryPIntent = PendingIntent . getService ( mContext , _NUM , intent , _NUM ) ; AlarmManager am = ( AlarmManager ) mContext . getSystemService ( Context . ALARM_SERVICE ) ; setAlarm ( am , timestamp , retryPIntent ) ; return timestamp ; }
16529	public DistributedLogNamespaceBuilder featureProvider ( FeatureProvider featureProvider ) { this . _featureProvider = featureProvider ; return this ; }
16541	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_STATUS_UNSEALWAIT_START ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16548	public static SM_SYSTEM_MESSAGE STR_CANNOT_USE_ITEM_TOO_LOW_GUILD_LEVEL ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
16565	public boolean isApplicable ( ) { return getViewer ( ) instanceof GraphView && ( ( GraphView ) getViewer ( ) ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
16589	public boolean isApplicable ( ) { return _BOOL ; }
16592	public Matrix solveTranspose ( Matrix B ) { return transpose ( ) . solve ( B . transpose ( ) ) ; }
16602	public static void assertStages ( Collection < Key < ? >> stages , Element element ) { Collection < String > errors = validate ( stages , element ) ; if ( ! errors . isEmpty ( ) ) { Assert . fail ( String . format ( _CHAR Stage validation failed : % s _CHAR , Joiner . on ( _CHAR \ n _CHAR ) . join ( errors ) ) ) ; } }
16622	public List < DexlibAbstractInstruction > instructionsAfter ( DexlibAbstractInstruction instruction ) { int i = instructions . indexOf ( instruction ) ; if ( i == - _NUM ) throw new IllegalArgumentException ( _CHAR Instruction _CHAR + instruction + _CHAR not part of this body . '' ) ; return instructions . subList ( i + _NUM , instructions . size ( ) ) ; }
16642	public static void initialize ( final Activity activity , final String gameId , final IUnityAdsListener listener ) { initialize ( activity , gameId , listener , _BOOL ) ; }
16651	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CaseHeal_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
16774	public boolean arePreviousStepsCompleted ( int stepNumber ) { boolean previousStepsAreCompleted = _BOOL ; for ( int i = ( stepNumber - _NUM ) ; i >= _NUM && previousStepsAreCompleted ; i -- ) { previousStepsAreCompleted = completedSteps [ i ] ; } return previousStepsAreCompleted ; }
16780	public boolean has ( String key ) { LazyNode child = root . child ; while ( child != _NULL ) { if ( keyMatch ( key , child ) ) { return _BOOL ; } child = child . next ; } return _BOOL ; }
16807	public static SM_SYSTEM_MESSAGE STR_EXTEND_ACCOUNT_WAREHOUSE_CANT_EXTEND_DUE_TO_MINIMUM_EXTEND_LEVEL_BY_THIS_NPC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
16821	public boolean isApplicable ( ) { return _BOOL ; }
16832	public boolean isApplicable ( ) { return getViewer ( ) instanceof SamplesViewer ; }
16834	public boolean isPageOnTheList ( String title ) { boolean isOnTheList = getRowByTitle ( title ) != _NULL ; if ( ! isOnTheList ) { LOG . debug ( _CHAR There were no page with title { } on the list _CHAR , title ) ; } return isOnTheList ; }
16862	@ Override public Element createElement ( String tagName ) throws DOMException { if ( errorChecking && ! isXMLName ( tagName , xml11Version ) ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR INVALID_CHARACTER_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . INVALID_CHARACTER_ERR , msg ) ; } return new ElementImpl ( this , tagName ) ; }
16870	public SharedPreferences . Editor putStringNoEncrypted ( String key , String value ) { mEditor . putString ( SecurePreferences . encrypt ( key ) , value ) ; return this ; }
16951	public static void putBoolean ( String key , boolean value ) { prefs . edit ( ) . putBoolean ( key , value ) . commit ( ) ; }
17042	public boolean isApplicable ( ) { return _BOOL ; }
17046	public static TypeRef of ( Type primitiveType ) { Preconditions . checkArgument ( primitiveType != Type . TYPE_MESSAGE && primitiveType != Type . TYPE_ENUM ) ; return interner . intern ( new TypeRef ( primitiveType , Cardinality . OPTIONAL , _NULL , _NULL ) ) ; }
17050	private KeyHook create ( KeyBinding key ) { if ( key != _NULL && key instanceof KeyHook ) { return ( KeyHook ) key ; } return new KeyHook ( key . getKeyDescription ( ) , key . getKeyCode ( ) , key . getKeyCategory ( ) ) ; }
17059	public static boolean isFolderExist ( String directoryPath ) { if ( StringUtil . isEmpty ( directoryPath ) ) { return _BOOL ; } File dire = new File ( directoryPath ) ; return ( dire . exists ( ) && dire . isDirectory ( ) ) ; }
17072	public GroupsIsMemberQueryWithUserIdsExtended isMemberExtended ( UserActor actor , String groupId , List < Integer > userIds ) { return new GroupsIsMemberQueryWithUserIdsExtended ( getClient ( ) , actor , groupId , userIds ) ; }
17084	public void checkPacketAccessPrivileges ( SpaceContext sc , Privilege privilege , ITransportPacket packet ) { if ( _securityInterceptor != _NULL ) _securityInterceptor . intercept ( SpaceContextHelper . getSecurityContext ( sc ) , privilege , packet != _NULL ? packet . getTypeName ( ) : _NULL ) ; }
17129	public void removeClient ( SocketAddress address ) { ProxyClient sc = address2Services . remove ( address ) ; if ( _NULL != sc ) { logger . info ( _CHAR Removed host { } . _CHAR , address ) ; sc . close ( ) ; } }
17184	public static String relativeTimeString ( int days ) { GregorianCalendar gregCal = new GregorianCalendar ( ) ; gregCal . add ( Calendar . DAY_OF_YEAR , days ) ; return TestUtils . getTimeString ( gregCal ) ; }
17238	public Builder withDefaultRange ( Range < Integer > versionRange ) { Preconditions . checkNotNull ( versionRange ) ; defaultVersionRange = versionRange ; return this ; }
17292	public static SettingsFragment newInstance ( ) { return new SettingsFragment ( ) ; }
17307	@ Override public void close ( ) throws IOException { eof = _BOOL ; position = _NUM ; mark =- _NUM ; }
17336	public Builder statsLogger ( StatsLogger statsLogger ) { this . statsLogger = statsLogger ; return this ; }
17377	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getSelectedReference ( ) != _NULL ; }
17420	@ Override public List chunkString ( String sToChunk ) { Integer [ ] iRes = splitPointsByDelimiterList ( sToChunk , getDelimiters ( ) ) ; String [ ] sRes = splitStringByDelimiterPoints ( sToChunk , iRes ) ; return Arrays . asList ( sRes ) ; }
17427	public static String simpleHostname ( String fullHostname ) { int offset = fullHostname . indexOf ( _CHAR ) ; if ( offset != - _NUM ) { return fullHostname . substring ( _NUM , offset ) ; } return fullHostname ; }
17433	@ Override public int hashCode ( ) { return ( proxyObject . hashCode ( ) ) ; }
17440	public void addEquipmentIds ( final Collection < Long > equipmentIds ) { for ( Long equipmentId : equipmentIds ) { addEquipmentId ( equipmentId ) ; } }
17458	public NewMultiArrayExpr newNewMultiArrayExpr ( ArrayType type , List < ? extends Value > sizes ) { return new JNewMultiArrayExpr ( type , sizes ) ; }
17464	public boolean isApplicable ( ) { ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return viewer . getChartData ( ) . getNumberOfSeries ( ) > _NUM && viewer . getChartSelection ( ) . getSelectedSeries ( ) . size ( ) < viewer . getChartData ( ) . getNumberOfSeries ( ) ; }
17472	@ POST @ Consumes ( _CHAR text / plain _CHAR ) @ Verify public void post ( @ HeaderParam ( DKIMSignature . DKIM_SIGNATURE ) DKIMSignature signature , String input ) { Assert . assertNotNull ( signature ) ; Assert . assertEquals ( input , _CHAR hello world _CHAR ) ; }
17499	private Object writeReplace ( ) throws ObjectStreamException { Object impl_proxy = impl ; if ( impl instanceof ProxyAccessor ) { impl_proxy = ( ( ProxyAccessor ) impl ) . getProxy ( ) ; logger . log ( Level . FINEST , _CHAR Obtained implementation proxy : { _NUM } _CHAR , impl_proxy ) ; if ( impl_proxy == _NULL ) { throw new InvalidObjectException ( _CHAR Implementation _CHAR_CHAR ) ; } } return impl_proxy ; }
17521	public Iterator < RecordID > scan ( ) { List < BEntry > validEntries = getAllValidEntries ( ) ; List < RecordID > rids = new ArrayList < RecordID > ( ) ; for ( BEntry le : validEntries ) { rids . add ( le . getRecordID ( ) ) ; } return rids . iterator ( ) ; }
17523	public static String readFile ( final File file ) { try { return readFileWithExceptions ( file ) ; } catch ( IOException e ) { System . out . println ( ExceptionMessages . COULD_NOT_READ . with ( e ) ) ; } return _NULL ; }
17585	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL ; }
17621	public MarketGetCommentsQuery fields ( EnumParam ... value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
17625	public static SM_SYSTEM_MESSAGE STR_MSG_DONT_DROP_ITEM_BY_WRONG_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17626	public static long readVLong ( byte [ ] bytes , int start ) throws IOException { return WritableComparator . readVLong ( bytes , start ) ; }
17627	public boolean isApplicable ( ) { return ( ( AlignmentViewer ) getViewer ( ) ) . getSelectedBlock ( ) . isSelected ( ) ; }
17628	Set < FlagField < ? >> unusedFlags ( Map < String , String > nameToValue ) { return nameToValue . keySet ( ) . stream ( ) . map ( _NULL ) . filter ( _NULL ) . collect ( Collectors . toSet ( ) ) ; }
17643	private void skip ( ) { do { readBlock ( ) ; } while ( ( blockSize > _NUM ) && ! err ( ) ) ; }
17693	public E searchFor ( E o ) { return objContainer . get ( o ) ; }
17694	public static < T > T def ( T original , T def ) { return original != _NULL ? original : def ; }
17699	public void monitorStatusChanged ( MonitorStatusChangeEvent event ) { }
17709	@ Override public void clear ( ) { if ( _NULL != columnReverseDictionaryInfo ) { columnReverseDictionaryInfo . clear ( ) ; columnReverseDictionaryInfo = _NULL ; } }
17713	public boolean isExplicit ( ) { return isInstance ( ) || isStatic ( ) ; }
17716	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
17737	@ Override public void cleanup ( ) { }
17752	private void onTextPaintMeasurementChanged ( ) { metrics . invalidate ( ) ; checkForRelayout ( ) ; invalidate ( ) ; }
17769	public static double uniform ( double a , double b ) { if ( ! ( a < b ) ) throw new IllegalArgumentException ( _CHAR Invalid range _CHAR ) ; return a + uniform ( ) * ( b - a ) ; }
17787	public synchronized SlabAllocation attachAndAllocate ( SlabRef slab , int desired ) { attach ( slab ) ; return allocate ( desired ) ; }
17816	@ NotNull public ImageOverlayBuilder verify ( @ NotNull String candidateImageAsUrl , @ NotNull VerificationSet verificationSet ) { try { verify ( ImageIO . read ( new URL ( candidateImageAsUrl ) ) , verificationSet ) ; } catch ( IOException e ) { throw new ImageNotFoundException ( candidateImageAsUrl ) ; } return this ; }
17847	public void java_net_InetAddressImpl_getHostByAddr ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getStringObject ( ) ) ; }
17920	public EventHandlerGroup < T > after ( final EventProcessor ... processors ) { for ( final EventProcessor processor : processors ) { consumerRepository . add ( processor ) ; } return new EventHandlerGroup < T > ( this , consumerRepository , Util . getSequencesFor ( processors ) ) ; }
17937	protected void show ( Activity activity , String helpContext , @ Nonnull FeedbackCollector collector ) { launchFallbackSupportUri ( activity ) ; }
17940	public boolean mustAlias ( SootField field1 , SootField field2 ) { return field1 == field2 ; }
17954	public void alignToFourBytes ( ) { data . position ( ( data . position ( ) + _NUM ) & ~ _NUM ) ; }
18018	public static Schema subsetSchema ( Schema schema , List < String > fieldNames ) { return subsetSchema ( schema , fieldNames , _NULL ) ; }
18087	@ Override public void printStackTrace ( ) { printStackTrace ( System . err ) ; }
18103	public boolean optimizeScanForSingleObject ( ) { return size ( ) <= _NUM ; }
18119	public Path relativizeWithSourceDirectory ( Path path ) { return sourceDirectoryPath . relativize ( path . toAbsolutePath ( ) ) ; }
18139	@ Override public List chunkString ( String sToChunk ) { Integer [ ] iRes = splitPointsByDelimiterList ( sToChunk , getDelimiters ( ) ) ; String [ ] sRes = splitStringByDelimiterPoints ( sToChunk , iRes ) ; return Arrays . asList ( sRes ) ; }
18142	public boolean isDisplayed ( final String bySelector , int timeout ) { return isConditionMet ( visibilityOfElementLocated ( By . cssSelector ( bySelector ) ) , timeout ) ; }
18203	public static IOFileFilter ageFileFilter ( File cutoffReference , boolean acceptOlder ) { return new AgeFileFilter ( cutoffReference , acceptOlder ) ; }
18228	public static int slotSize ( Schema sch ) { int pos = _NUM ; for ( String fldname : sch . fields ( ) ) pos += Page . maxSize ( sch . type ( fldname ) ) ; return pos ; }
18281	public boolean isApplicable ( ) { return ProjectManager . getNumberOfProjects ( ) == _NUM && ( ( Director ) ProjectManager . getProjects ( ) . get ( _NUM ) ) . getDocument ( ) . getNumberOfSamples ( ) == _NUM ; }
18292	public boolean updateLayout ( long time , long dt ) { PerfTraceEvent . instant ( _CHAR StripLayoutHelper : updateLayout _CHAR ) ; final boolean doneAnimating = onUpdateAnimation ( time , _BOOL ) ; updateStrip ( time , dt ) ; return doneAnimating ; }
18295	private int pop ( ) { if ( outputStackTop > _NUM ) { return outputStack [ -- outputStackTop ] ; } else { return STACK | - ( -- owner . inputStackTop ) ; } }
18306	public static void assertContains ( String msg , double [ ] values , double x , double epsilon ) { for ( double value : values ) { if ( Precision . equals ( value , x , epsilon ) ) { return ; } } Assert . fail ( msg + _CHAR Unable to find _CHAR + x ) ; }
18323	public int memberOf ( ) { return theType . memberOf ( ) ; }
18343	public SpaceContext trustContext ( SpaceContext spaceContext ) { SecurityContext trustedContext = trustInterceptor . trust ( SpaceContextHelper . getSecurityContext ( spaceContext ) ) ; return spaceContext . createCopy ( trustedContext ) ; }
18355	public boolean isApplicable ( ) { return ProjectManager . getNumberOfProjects ( ) > _NUM || getDir ( ) . getViewers ( ) . size ( ) > _NUM ; }
18364	public void changeLevel ( Legion legion , int newLevel , boolean save ) { legion . setLegionLevel ( newLevel ) ; PacketSendUtility . broadcastPacketToLegion ( legion , new SM_LEGION_EDIT ( _NUM , legion ) ) ; PacketSendUtility . broadcastPacketToLegion ( legion , SM_SYSTEM_MESSAGE . STR_GUILD_EVENT_LEVELUP ( newLevel ) ) ; if ( save ) { storeLegion ( legion ) ; } }
18427	public static void d ( String logMsg ) { if ( isEnable ( ) ) { log ( getCurrentClassName ( ) , getCurrentMethodName ( ) + _CHAR ( ) : _CHAR + logMsg ) ; } }
18470	public boolean lessThan ( PlatformLogicalVersion otherVersion ) { Boolean specialLessThan = specialLessThan ( otherVersion ) ; if ( specialLessThan != _NULL ) return specialLessThan ; return ( _buildNumber < otherVersion . _buildNumber ) || ( _buildNumber == otherVersion . _buildNumber && _subBuildNumber < otherVersion . _subBuildNumber ) ; }
18473	public boolean isApplicable ( ) { ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return ( viewer . isSeriesTabSelected ( ) && viewer . getChartData ( ) . getChartSelection ( ) . getSelectedSeries ( ) . size ( ) > _NUM ) || ( ! viewer . isSeriesTabSelected ( ) && viewer . getChartData ( ) . getChartSelection ( ) . getSelectedClasses ( ) . size ( ) > _NUM ) ; }
18483	public MqttScriptIO more ( ) { return scriptIO ; }
18486	public boolean haveSelfRezItem ( ) { return ( getSelfRezStone ( ) != _NULL ) ; }
18488	public static Object fromXml ( String str ) { return xstream . fromXML ( str ) ; }
18539	public void advance ( ) { moveToNextIndex ( ) ; }
18549	public void proceed ( String username , String password ) { this . handler . proceed ( username , password ) ; }
18551	private static String [ ] toSuffixes ( String [ ] extensions ) { String [ ] suffixes = new String [ extensions . length ] ; for ( int i = _NUM ; i < extensions . length ; i ++ ) { suffixes [ i ] = _CHAR . _CHAR + extensions [ i ] ; } return suffixes ; }
18553	public static void addIfEmpty ( List < List < DimensionalItemObject >> list ) { if ( list != _NULL && list . size ( ) == _NUM ) { list . add ( Arrays . asList ( new DimensionalItemObject [ _NUM ] ) ) ; } }
18595	@ Override public final Point readPos ( ) { final int x = readShort ( ) ; final int y = readShort ( ) ; return new Point ( x , y ) ; }
18621	public void verifyFullscreen ( ) { conditions . verify ( _NULL ) ; }
18645	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CaseHeal_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
18650	public RabbitMqCommand writeErrorOutputTo ( OutputStream outputStream ) { this . errorOutputStream = outputStream ; return this ; }
18671	public Iterator outNeighbors ( Node n ) { return new NeighborIterator ( n , outEdges ( n ) ) ; }
18698	public static boolean isPhiNode ( Unit unit ) { return getPhiExpr ( unit ) == _NULL ? _BOOL : _BOOL ; }
18718	public boolean isApplicable ( ) { return _BOOL ; }
18762	public void spacing ( float spacing ) { this . spacing = spacing ; invalidate ( ) ; }
18782	public void reload ( ) { this . kek = _NULL ; this . mwk = _NULL ; this . mwkIndex = _NULL ; }
18790	public static boolean isOfferAccepted ( Protos . Offer offer , Collection < Protos . OfferID > acceptedOfferIds ) { return acceptedOfferIds . stream ( ) . anyMatch ( _NULL ) ; }
18791	public static SM_SYSTEM_MESSAGE STR_ABYSS_GUILD_CARRIER_KILLED ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
18796	@ Override public void onWebsocketMessageFragment ( WebSocket conn , Framedata frame ) { }
18802	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
18867	@ Override public IBinder onBind ( Intent intent ) { return sSyncAdapter . getSyncAdapterBinder ( ) ; }
18870	public int addMarker ( String cfg ) { if ( ! initedNative ) return - _NUM ; return NativeInterface . arwAddMarker ( cfg ) ; }
18894	public static RecipeFragment newInstance ( Recipe recipe , int sectionNumber ) { RecipeFragment fragment = new RecipeFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
18901	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ShapeChange_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
18921	public void updateDataSources ( Set < ? extends DataSource > added , Set < ? extends DataSource > removed ) { super . changeDataSources ( added , removed ) ; }
18975	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . isAllowAminoAcids ( ) && ! viewer . isShowAminoAcids ( ) ; }
19029	public static double distance ( VisualItem vi1 , VisualItem vi2 ) { double dx = vi1 . getX ( ) - vi2 . getX ( ) ; double dy = vi1 . getY ( ) - vi2 . getY ( ) ; return Math . sqrt ( dx * dx + dy * dy ) ; }
19042	public boolean addAll ( Collection < ? extends Dimension > dimensions ) { boolean flag = _BOOL ; for ( Dimension dimension : dimensions ) { flag = add ( dimension ) || flag ; } return flag ; }
19096	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
19097	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ExtendAuraRange_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
19122	public static SM_SYSTEM_MESSAGE STR_UNION_BAN_HIS_LEADER ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
19124	private boolean canReadFile ( File file ) { if ( ! file . exists ( ) ) { log . info ( _CHAR File _CHAR + file . getAbsolutePath ( ) + _CHAR does not exist _CHAR ) ; return _BOOL ; } if ( ! file . canRead ( ) ) { log . info ( _CHAR File _CHAR + file . getAbsolutePath ( ) + _CHAR can not be read _CHAR ) ; return _BOOL ; } return _BOOL ; }
19155	public final int computeHashCode ( short val ) { return HashFunctions . hash ( val ) ; }
19260	public static SM_SYSTEM_MESSAGE STR_MSG_CAPTCHA_RESTRICTED ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
19263	private void onPause ( ) { mSubscription . unsubscribe ( ) ; mDispatchedObservablesHistory . clear ( ) ; }
19273	public static InstructionFragment newInstance ( Recipe recipe , int sectionNumber ) { InstructionFragment fragment = new InstructionFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
19283	@ Override public void addRange ( int start , int end ) { bitmap . add ( start , end ) ; }
19312	public TextEditor detabify ( ) { return detabify ( _NUM ) ; }
19367	public static MaryModule instantiateModule ( String moduleInitInfo ) throws MaryConfigurationException { Log . i ( Mary . LOG , _CHAR Now initiating mary module _CHAR_CHAR_CHAR _CHAR ) ; MaryModule m = ( MaryModule ) MaryRuntimeUtils . instantiateObject ( moduleInitInfo ) ; return m ; }
19379	public void drawFrame ( int textureId , float [ ] texMatrix ) { mFilter . onDraw ( IDENTITY_MATRIX , mRectDrawable . getVertexArray ( ) , _NUM , mRectDrawable . getVertexCount ( ) , mRectDrawable . getCoordsPerVertex ( ) , mRectDrawable . getVertexStride ( ) , texMatrix , mRectDrawable . getTexCoordArray ( ) , textureId , mRectDrawable . getTexCoordStride ( ) ) ; }
19423	@ Override public DocumentFragment createDocumentFragment ( ) { return new DocumentFragmentImpl ( this ) ; }
19454	public static SM_SYSTEM_MESSAGE STR_SKILL_CANT_CAST_THIS_SKILL_IN_CURRENT_STANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
19456	public boolean isApplicable ( ) { return _BOOL ; }
19457	static boolean isAnalyticsElement ( Vertex vertex ) { return CommonOLAP . analyticsElements . contains ( getVertexType ( vertex ) ) ; }
19470	public boolean hasAdditionalText ( ) { return mAdditionalText != _NULL ; }
19475	public void reset ( ) throws XNIException { fNamespaceContext . reset ( ) ; fValidationManager . reset ( ) ; fEntityManager . reset ( this ) ; fErrorReporter . reset ( this ) ; fSchemaValidator . reset ( this ) ; fConfigUpdated = _BOOL ; }
19479	private boolean isValidNickname ( String name ) { return LegionConfig . NICKNAME_PATTERN . matcher ( name ) . matches ( ) ; }
19481	public GroupsIsMemberQueryWithUserIdsExtended isMemberExtended ( String groupId , Integer ... userIds ) { return new GroupsIsMemberQueryWithUserIdsExtended ( getClient ( ) , groupId , userIds ) ; }
19511	public boolean equals ( Object other ) { if ( ! ( other instanceof TShortObjectHashMap ) ) { return _BOOL ; } TShortObjectHashMap that = ( TShortObjectHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
19563	private List < CarbonDictionaryColumnMetaChunk > readDictionaryMetadataFile ( ) throws IOException { CarbonDictionaryMetadataReader columnMetadataReaderImpl = getDictionaryMetadataReader ( ) ; List < CarbonDictionaryColumnMetaChunk > dictionaryMetaChunkList = _NULL ; try { dictionaryMetaChunkList = columnMetadataReaderImpl . read ( ) ; } finally { columnMetadataReaderImpl . close ( ) ; } return dictionaryMetaChunkList ; }
19610	public boolean isSuperUser ( String role ) { Set < String > superUserRoles = conf . getSuperUserRoles ( ) ; return role != _NULL && superUserRoles . contains ( role ) ? _BOOL : _BOOL ; }
19615	public boolean isApplicable ( ) { return _BOOL ; }
19622	@ Override public Writer append ( CharSequence csq , int start , int end ) { return this ; }
19641	public boolean isApplicable ( ) { RemoteServiceBrowser remoteServiceBrowser = ( RemoteServiceBrowser ) getViewer ( ) ; return remoteServiceBrowser != _NULL && remoteServiceBrowser . getServicePanel ( ) != _NULL ; }
19647	public void sum ( String column ) throws QueryPlanException { this . sumColumnName = column ; }
19666	private void beforeMovingToPrimary ( ) throws SpaceComponentsInitializeException { switch ( _spaceMode ) { case NONE : initPrimaryOnlyComponents ( ) ; initBackupComponents ( ) ; break ; case BACKUP : initPrimaryOnlyComponents ( ) ; break ; } }
19671	public void startScroll ( int startX , int startY , int dx , int dy , int duration ) { mMode = SCROLL_MODE ; mScrollerX . startScroll ( startX , dx , duration ) ; mScrollerY . startScroll ( startY , dy , duration ) ; }
19683	public void onPause ( boolean multitasking ) { }
19742	@ Override public Collection < SerialMessage > initialize ( boolean refresh ) { ArrayList < SerialMessage > result = new ArrayList < SerialMessage > ( ) ; if ( refresh == _BOOL || initialiseDone == _BOOL ) { result . add ( this . getSupportedMessage ( ) ) ; } return result ; }
19775	public void close ( ) { }
19780	protected EventFlusher createEventFlusher ( ) { return _NULL ; }
19788	public boolean isApplicable ( ) { return _BOOL ; }
19849	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_END_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
19853	@ Override public String call ( ) { StringBuilder str = new StringBuilder ( ) ; Iterator < Long > it = keyList . iterator ( ) ; while ( it . hasNext ( ) ) { str . append ( dataTagFacade . getConfigXML ( it . next ( ) ) ) ; } return str . toString ( ) ; }
19854	public void onError ( String error , DataOutputStream dos ) { }
19878	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_StatDown_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
19911	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
19928	public static SecretKeys generateKeyFromPassword ( String password , String salt ) throws GeneralSecurityException { return generateKeyFromPassword ( password , Base64 . decode ( salt , BASE64_FLAGS ) ) ; }
19973	public boolean isApplicable ( ) { return getViewer ( ) . getTabbedIndex ( ) == ClusterViewer . PCoA_TAB_INDEX && getViewer ( ) . getPcoaTab ( ) . isIs3dMode ( ) ; }
20002	public PhotosGetQuery feedType ( String value ) { return unsafeParam ( _CHAR feed_type _CHAR , value ) ; }
20007	public MessagesSendQuery domain ( String value ) { return unsafeParam ( _CHAR domain _CHAR , value ) ; }
20045	public DistributedLogClientBuilder streamNameRegex ( String nameRegex ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setStreamNameRegex ( nameRegex ) ; return newBuilder ; }
20073	protected TreeItem < WeakRef < Node >> insertWeakRefIntoMap ( WeakRef < Node > weakRef ) { TreeItem < WeakRef < Node >> child = new TreeItem < WeakRef < Node >> ( weakRef ) ; map . put ( weakRef , child ) ; return child ; }
20094	public boolean equals ( Object other ) { if ( ! ( other instanceof TObjectLongHashMap ) ) { return _BOOL ; } TObjectLongHashMap that = ( TObjectLongHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
20099	@ Override public int hashCode ( ) { Calendar cal = TEST_POINTS [ _NUM ] . toGregorianCalendar ( ) ; this . addTo ( cal ) ; return ( int ) getCalendarTimeInMillis ( cal ) ; }
20139	public static void fitViewToBounds ( Display display , Rectangle2D bounds , long duration ) { fitViewToBounds ( display , bounds , _NULL , duration ) ; }
20144	public boolean replaceNext ( String regularExpression , String replaceText ) { System . err . println ( _CHAR not implemented _CHAR ) ; return _BOOL ; }
20148	protected void initFileLocation ( ) { PathService pathService = CarbonCommonFactory . getPathService ( ) ; CarbonTablePath carbonTablePath = pathService . getCarbonTablePath ( columnIdentifier , this . hdfsStorePath , carbonTableIdentifier ) ; this . columnDictionaryFilePath = carbonTablePath . getDictionaryFilePath ( columnIdentifier . getColumnId ( ) ) ; }
20158	public static void println ( short x ) { out . println ( x ) ; }
20178	public static PlaceholderFragment newInstance ( int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
20251	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_OTHER_IS_BANISHED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20273	public void requestIsFailedNode ( int nodeId ) { enqueue ( new IsFailedNodeMessageClass ( ) . doRequest ( nodeId ) ) ; }
20281	static Intent createPostRequestIntent ( Context context ) { Intent intent = new Intent ( context , OmahaClient . class ) ; intent . setAction ( ACTION_POST_REQUEST ) ; return intent ; }
20299	public boolean dump_intra ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - intra _CHAR ) ; }
20305	public boolean isApplicable ( ) { return getViewer ( ) instanceof GraphView && ( ( ( GraphView ) getViewer ( ) ) . getSelectedNodes ( ) . size ( ) > _NUM || ( ( GraphView ) getViewer ( ) ) . getSelectedEdges ( ) . size ( ) > _NUM ) ; }
20346	public AemSidekick clickOperation ( PageOperation optionName ) { getOperation ( optionName ) . click ( ) ; return this ; }
20389	public MarketSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
20408	public void reset ( byte b [ ] ) { bytes = b ; curindex = ( short ) _NUM ; length = ( short ) ( ( ( ( ( bytes [ _NUM ] ) ) & _NUM ) << _NUM ) + ( ( ( bytes [ _NUM ] ) ) & _NUM ) + _NUM ) ; }
20440	private void handleActionFoo ( String param1 , String param2 ) { throw new UnsupportedOperationException ( _CHAR Not yet implemented _CHAR ) ; }
20445	public static String translateJavaVersion ( int javaVersion ) { if ( javaVersion == Options . java_version_default ) { return _CHAR _NUM . _NUM _CHAR ; } else { return _CHAR _NUM . _CHAR + ( javaVersion - _NUM ) ; } }
20501	public void toAllInRadius ( int dimension , Vec3i pos , double radius ) { toAllInRadius ( dimension , new Vec3d ( pos . getX ( ) + _NUM . _NUM , pos . getY ( ) + _NUM . _NUM , pos . getZ ( ) + _NUM . _NUM ) , radius ) ; }
20517	public synchronized void begin ( Vector2 currentOffset , Vector2 mousePosition , Component component ) { this . active = _BOOL ; this . offset = currentOffset ; component . setCursor ( Cursor . getPredefinedCursor ( Cursor . MOVE_CURSOR ) ) ; this . beginPosition = mousePosition ; }
20522	public static void inferConstraints ( WidgetsScene list ) { inferConstraints ( list . getRoot ( ) ) ; }
20533	@ Override public boolean isHighlightFullBarEnabled ( ) { return mHighlightFullBarEnabled ; }
20561	public AudioEditQuery genreId ( AudioGenre value ) { return unsafeParam ( _CHAR genre_id _CHAR , value ) ; }
20569	public static MultilayerPerceptronClassificationModel load ( JavaSparkContext jsc , String classifierFileName ) { Object object = jsc . objectFile ( classifierFileName ) . first ( ) ; return ( ( MultilayerPerceptronClassificationModel ) object ) ; }
20582	public static final double combinationsOfNByK ( int n , int k ) { return gr . demokritos . iit . jinsect . utils . factorial ( n , k ) ; }
20594	private static Collector < SegmentInfo , ? , Map < String , SegmentInfo >> partitionsToMapCollector ( ) { return Collector . of ( _NULL , _NULL , _NULL ) ; }
20599	public void treeWillCollapse ( TreeExpansionEvent event ) throws ExpandVetoException { if ( inspectorWindow . isLocked ( ) ) { if ( dir . getDocument ( ) . getProgressListener ( ) != _NULL ) dir . getDocument ( ) . getProgressListener ( ) . setUserCancelled ( _BOOL ) ; throw new ExpandVetoException ( event ) ; } }
20630	public static boolean isEnter ( KeyEvent event ) { return isActionUp ( event ) && ( event . getKeyCode ( ) == KeyEvent . KEYCODE_ENTER || event . getKeyCode ( ) == KeyEvent . KEYCODE_NUMPAD_ENTER ) ; }
20647	public void replaceData ( String value ) { data = value ; }
20665	public boolean equals ( Object object ) { return object == _NULL || object == this ; }
20674	public static Set < String > splitToArray ( String value , String separator ) { if ( value == _NULL || value . isEmpty ( ) ) { return _NULL ; } String [ ] values = value . split ( separator ) ; return new HashSet < > ( Arrays . asList ( values ) ) ; }
20750	public MarketGetCommentsQuery startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
20760	public void removeDiscoveryListener ( DiscoveryListener l ) { synchronized ( registrars ) { if ( terminated ) { throw new IllegalStateException ( _CHAR discovery terminated _CHAR ) ; } listeners . remove ( l ) ; } }
20790	public String namespace ( ) { return theType . namespace ( ) ; }
20795	@ Override public void endElement ( String namespaceURI , String localName , String qName ) throws SAXException { return ; }
20811	public boolean isApplicable ( ) { return getViewer ( ) instanceof ViewerBase ; }
20826	@ Override public void onServiceDisconnected ( ComponentName name ) { mCallbackHandler . obtainMessage ( MSG_SHUTDOWN_EXECUTION ) . sendToTarget ( ) ; }
20831	public void addAll ( Schema sch ) { fields . putAll ( sch . fields ) ; if ( myFieldSet != _NULL ) myFieldSet = new TreeSet < String > ( fields . keySet ( ) ) ; }
20869	public boolean isApplicable ( ) { ParametersDialog viewer = ( ParametersDialog ) getParent ( ) ; return viewer != _NULL ; }
20872	public void delete ( int key ) { int i = binarySearch ( mKeys , _NUM , mSize , key ) ; if ( i >= _NUM ) { if ( mValues [ i ] != DELETED ) { mValues [ i ] = DELETED ; mGarbage = _BOOL ; } } }
20910	public boolean hasPurchase ( String sku ) { return mPurchaseMap . containsKey ( sku ) ; }
20947	public boolean showWarnings ( ) { return myShowErrors && myDryRun ; }
20995	public boolean isPrintable ( char ch ) { if ( ch <= this . lastPrintable ) { return _BOOL ; } return isPrintable0 ( ch ) ; }
21094	public boolean isApplicable ( ) { if ( getViewer ( ) instanceof ViewerBase ) return ( ( ViewerBase ) getViewer ( ) ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; else return getViewer ( ) instanceof ClusterViewer && ( ( ClusterViewer ) getViewer ( ) ) . getGraphView ( ) != _NULL && ( ( ClusterViewer ) getViewer ( ) ) . getGraphView ( ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
21100	public boolean isApplicable ( ) { return getParent ( ) != _NULL ; }
21143	@ Override public void write ( byte [ ] b , int off , int len ) { }
21156	public GroupsIsMemberQueryWithUserIds isMember ( UserActor actor , String groupId , List < Integer > userIds ) { return new GroupsIsMemberQueryWithUserIds ( getClient ( ) , actor , groupId , userIds ) ; }
21183	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_PICKUP_ITEM_PROCESSING_YOUR_REQUEST ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21205	private String modifyProjectName ( String originalProjectName ) { final StringBuffer buffer = new StringBuffer ( ) ; if ( getProjectNamePrefix ( ) != _NULL ) { buffer . append ( getProjectNamePrefix ( ) . trim ( ) ) ; } buffer . append ( originalProjectName ) ; if ( getProjectNameSuffix ( ) != _NULL ) { buffer . append ( getProjectNameSuffix ( ) . trim ( ) ) ; } return buffer . toString ( ) ; }
21214	public void translate ( final float [ ] transformedPts , Matrix outputMatrix ) { outputMatrix . reset ( ) ; outputMatrix . set ( mMatrixTouch ) ; final float x = transformedPts [ _NUM ] - offsetLeft ( ) ; final float y = transformedPts [ _NUM ] - offsetTop ( ) ; outputMatrix . postTranslate ( - x , - y ) ; }
21235	public boolean isUserInRole ( List < String > allowedUserRoles , ContainerRequestContext containerRequestContext ) { SecurityContext securityContext = containerRequestContext . getSecurityContext ( ) ; return allowedUserRoles . stream ( ) . anyMatch ( _NULL ) ; }
21255	public InfoflowResults analyzeAPKFile ( String apkFileName , String xmlFileName ) throws IOException , XmlPullParserException { return analyzeAPKFile ( apkFileName , xmlFileName , _BOOL , _BOOL , _BOOL ) ; }
21263	public boolean contains ( final P point , final double margin ) { return point . distance ( center ) <= radius + margin ; }
21270	public static void onReceiveUpgradePatch ( Context context , String patchLocation ) { Tinker . with ( context ) . getPatchListener ( ) . onPatchReceived ( patchLocation , _BOOL ) ; }
21293	public boolean isApplicable ( ) { return _BOOL ; }
21295	public Builder useExpiredDataWhenNoLoaderAvailable ( ) { this . useExpiredDataIfLoaderNotAvailable = _BOOL ; return this ; }
21297	public void shuffle ( Random rand ) { for ( int i = _pos ; i -- > _NUM ; ) { swap ( i , rand . nextInt ( i ) ) ; } }
21339	@ Override public void skippedEntity ( String name ) throws SAXException { return ; }
21347	public void clear ( ) { numElements = _NUM ; startIndex = _NUM ; }
21380	public boolean isDrawHighlightArrowEnabled ( ) { return mDrawHighlightArrow ; }
21383	public boolean isApplicable ( ) { return getDoc ( ) . getNumberOfReads ( ) > _NUM ; }
21395	public void attachTo ( ImmersiveEffect effect ) throws RuntimeException { if ( mEffect != _NULL ) { throw new RuntimeException ( _CHAR Previous effect is still attached , call detach ( ) first _CHAR ) ; } mEffect = effect ; mEffect . addParameter ( mParameter ) ; }
21434	public boolean isApplicable ( ) { return _BOOL ; }
21455	@ Override public void processingInstruction ( String target , String data ) throws SAXException { return ; }
21464	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
21471	public PhotosGetAllQueryWithExtended needHidden ( Boolean value ) { return unsafeParam ( _CHAR need_hidden _CHAR , value ) ; }
21497	public void startScroll ( int startX , int startY , int dx , int dy , int duration ) { mMode = SCROLL_MODE ; mScrollerX . startScroll ( startX , dx , duration ) ; mScrollerY . startScroll ( startY , dy , duration ) ; }
21531	public List < SootMethod > clinitsOf ( SootClass cl ) { List < SootMethod > ret = new ArrayList < SootMethod > ( ) ; while ( _BOOL ) { addMethod ( ret , cl , sigClinit ) ; if ( ! cl . hasSuperclass ( ) ) break ; cl = cl . getSuperclass ( ) ; } return ret ; }
21570	public JSONArray names ( ) { JSONArray ja = new JSONArray ( ) ; Iterator < String > keys = this . keys ( ) ; while ( keys . hasNext ( ) ) { ja . put ( keys . next ( ) ) ; } return ja . length ( ) == _NUM ? _NULL : ja ; }
21589	public static boolean isRsaKey ( Key key ) { return _CHAR RSA _CHAR . equals ( key . getAlgorithm ( ) ) ; }
21596	public StatelessHibernateSpaceSynchronizationEndpointConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
21650	public boolean isApplicable ( ) { final LabelsJList list = ( ( ChartViewer ) getViewer ( ) ) . getActiveLabelsJList ( ) ; return list != _NULL && list . getDisabledLabels ( ) . size ( ) > _NUM ; }
21680	public Iterator < T > valuesIterator ( ) { return freqTable . keySet ( ) . iterator ( ) ; }
21709	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_END_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
21714	protected void pushLeft ( BinarySearchTreeNode < E > node ) { while ( node != _NULL ) { this . stack . push ( node ) ; node = node . left ; } }
21725	public void saveSelectedFeatures ( PrintWriter toSopFile ) { for ( int j = _NUM ; j < coeffs . length ; j ++ ) toSopFile . print ( coeffs [ j ] + _CHAR _CHAR + factors [ j ] + _CHAR _CHAR ) ; toSopFile . println ( ) ; }
21734	public Matrix zoom ( float scaleX , float scaleY , float x , float y ) { Matrix save = new Matrix ( ) ; save . set ( mMatrixTouch ) ; save . postScale ( scaleX , scaleY , x , y ) ; return save ; }
21747	public boolean isApplicable ( ) { TaxonomicProfileDialog viewer = ( TaxonomicProfileDialog ) getParent ( ) ; return viewer != _NULL ; }
21754	@ Override public void write ( int idx ) { }
21788	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
21793	public boolean isApplicable ( ) { return getDoc ( ) . getNumberOfReads ( ) > _NUM ; }
21821	protected boolean isBatchEnabled ( ) { return ( batchSize != _NULL && batchTime != _NULL ) || ( durable != _NULL && durable ) || ( ! EventSessionConfig . USE_OLD_GUARANTEED_NOTIFICATIONS && guaranteed != _NULL && guaranteed ) ; }
21950	public boolean isApplicable ( ) { return getViewer ( ) instanceof GraphView && ( ( ( GraphView ) getViewer ( ) ) . getSelectedNodes ( ) . size ( ) > _NUM || ( ( GraphView ) getViewer ( ) ) . getSelectedEdges ( ) . size ( ) > _NUM ) ; }
21954	public static double random ( ) { return uniform ( ) ; }
21961	public void start ( long timeInMillisecond ) { stop ( ) ; fullTime = timeInMillisecond ; elapsedTime = _NUM ; playAnimationStart ( ) ; }
21970	protected void buildMetricMakers ( MetricDictionary metricDictionary ) { countMaker = new CountMaker ( metricDictionary ) ; doubleSumMaker = new DoubleSumMaker ( metricDictionary ) ; }
22000	private ProxySelector installBufferingAndFallbackBehaviour ( ProxySelector selector ) { if ( selector instanceof PacProxySelector ) { if ( this . pacCacheSize > _NUM ) { selector = new BufferedProxySelector ( this . pacCacheSize , this . pacCacheTTL , selector , pacCacheScope ) ; } selector = new ProxyListFallbackSelector ( selector ) ; } return selector ; }
22039	private static Object toTagValue ( final TagShortTermLog dtShortTerm ) { Object tagValue = _NULL ; if ( dtShortTerm . getTagValue ( ) != _NULL ) { tagValue = TypeConverter . cast ( dtShortTerm . getTagValue ( ) , dtShortTerm . getTagDataType ( ) ) ; } return tagValue ; }
22071	static void fwPrint ( String s , int size ) { s += _CHAR _CHAR ; s = s . substring ( _NUM , size ) ; System . out . print ( s ) ; }
22101	public static boolean isWatchFeatureRequired ( @ NotNull AndroidFacet facet ) { MergedManifest mergedManifest = MergedManifest . get ( facet ) ; Element feature = mergedManifest . findUsedFeature ( UsesFeature . HARDWARE_TYPE_WATCH ) ; return feature != _NULL && isRequired ( feature ) ; }
22139	@ Override public int hashCode ( ) { return JsonNull . class . hashCode ( ) ; }
22155	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_XPBoost_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
22211	public static UByte valueOf ( int value ) throws NumberFormatException { return valueOfUnchecked ( rangeCheck ( value ) ) ; }
22281	public long createAlarm ( Intent intent ) { long delay = generateRandomDelay ( ) ; long timestamp = delay + getCurrentTime ( ) ; return createAlarm ( intent , timestamp ) ; }
22286	private Entry findEntry ( Lease lease ) throws UnknownLeaseException { Entry e = findEntryDo ( lease ) ; if ( e != _NULL && ( e . renew < e . endTime || SystemTime . timeMillis ( ) < e . endTime ) ) { return e ; } throw new UnknownLeaseException ( ) ; }
22293	public final byte [ ] read ( final int num ) { byte [ ] ret = new byte [ num ] ; for ( int x = _NUM ; x < num ; x ++ ) { ret [ x ] = readByte ( ) ; } return ret ; }
22313	public boolean isFuture ( ) { return getEndDate ( ) . after ( new Date ( ) ) ; }
22345	public void addln ( String line ) { this . graph . append ( line ) . append ( _CHAR \ n _CHAR ) ; }
22357	public String diff_text2 ( List < Diff > diffs ) { StringBuilder text = new StringBuilder ( ) ; for ( Diff aDiff : diffs ) { if ( aDiff . operation != Operation . DELETE ) { text . append ( aDiff . text ) ; } } return text . toString ( ) ; }
22394	@ SuppressWarnings ( _CHAR rawtypes _CHAR ) public Expression isInstance ( Value obj , Class c ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
22410	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
22414	public Coord minus ( Coord coord ) { return new Coord ( x - coord . x , y - coord . y ) ; }
22500	public boolean isApplicable ( ) { return getViewer ( ) . isPCoATab ( ) ; }
22520	@ Override public synchronized boolean isEquipmentAliveType ( ) { return ( getAliveType ( ) . equals ( AliveTimer . ALIVE_TYPE_EQUIPMENT ) ) ; }
22543	public static void registerEntity ( Class < ? extends Entity > entityClass , String entityName , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) { EntityRegistry . registerModEntity ( entityClass , entityName , availableEntityId , BWMod . instance , trackingRange , updateFrequency , sendsVelocityUpdates ) ; availableEntityId ++ ; }
22552	public void inherit ( ) { addClassPath ( System . getProperty ( _CHAR java . class . path _CHAR ) ) ; }
22614	public void onRetry ( ) { }
22675	public void startPreview ( ) { if ( camera != _NULL && ! previewing ) { camera . startPreview ( ) ; previewing = _BOOL ; } }
22685	public static int decodeVIntSize ( byte value ) { if ( value >= - _NUM ) { return _NUM ; } else if ( value < - _NUM ) { return - _NUM - value ; } return - _NUM - value ; }
22700	@ Override public void close ( ) { if ( leaf != _NULL ) { leaf . close ( ) ; leaf = _NULL ; } ccMgr . releaseIndexLocks ( ) ; dirsMayBeUpdated = _NULL ; }
22711	@ Override public void endPrefixMapping ( String prefix ) throws SAXException { return ; }
22766	public boolean isApplicable ( ) { AttributesWindow viewer = ( AttributesWindow ) getViewer ( ) ; return viewer != _NULL ; }
22774	public BeanPropertyWriter unwrappingWriter ( NameTransformer unwrapper ) { return new UnwrappingBeanPropertyWriter ( this , unwrapper ) ; }
22792	@ SuppressFBWarnings ( _CHAR DM_EXIT _CHAR ) @ VisibleForTesting void prepareNativeLibraries ( ) { try { BrowserStartupController . get ( getApplicationContext ( ) , LibraryProcessType . PROCESS_BROWSER ) . startBrowserProcessesSync ( _BOOL ) ; } catch ( ProcessInitException e ) { Log . e ( TAG , _CHAR ProcessInitException while starting the browser process '' ) ; System . exit ( - _NUM ) ; } }
22810	public boolean isApplicable ( ) { return getViewer ( ) . isPCoATab ( ) ; }
22827	private boolean containsNaNs ( IntDoublePair [ ] ranks ) { for ( int i = _NUM ; i < ranks . length ; i ++ ) { if ( Double . isNaN ( ranks [ i ] . getValue ( ) ) ) { return _BOOL ; } } return _BOOL ; }
22833	public static InstructionFragment newInstance ( Recipe recipe , int sectionNumber ) { InstructionFragment fragment = new InstructionFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
22840	protected void onAdjustChildViews ( boolean down ) { if ( down ) correctTooHigh ( getChildCount ( ) ) ; else correctTooLow ( getChildCount ( ) ) ; }
22883	public void closeFile ( ) { try { writeDatasets ( ) ; writeGroups ( ) ; long indexPosition = bytesWritten ; writeIndex ( ) ; int nbytes = ( int ) ( bytesWritten - indexPosition ) ; fos . close ( ) ; writeIndexPosition ( indexPosition , nbytes ) ; } catch ( IOException ex ) { log . error ( _CHAR Error closing file _CHAR , ex ) ; } }
22899	protected boolean isObjectLikeType ( Type tp ) { if ( ! ( tp instanceof RefType ) ) return _BOOL ; RefType rt = ( RefType ) tp ; return rt . getSootClass ( ) . getName ( ) . equals ( _CHAR java . lang . Object _CHAR ) || rt . getSootClass ( ) . getName ( ) . equals ( _CHAR java . io . Serializable _CHAR ) || rt . getSootClass ( ) . getName ( ) . equals ( _CHAR java . lang . Cloneable _CHAR ) ; }
22902	private void addCallbackMethod ( String layoutFile , String callback ) { addToMapSet ( callbackMethods , layoutFile , callback ) ; if ( includeDependencies . containsKey ( layoutFile ) ) for ( String target : includeDependencies . get ( layoutFile ) ) addCallbackMethod ( target , callback ) ; }
22921	public void toAllInRadius ( WorldServer world , Vec3i pos , double radius ) { toAllInRadius ( world , new Vec3d ( pos . getX ( ) + _NUM . _NUM , pos . getY ( ) + _NUM . _NUM , pos . getZ ( ) + _NUM . _NUM ) , radius ) ; }
22943	@ Override public boolean isLeafNode ( ) { return _BOOL ; }
22945	public List < LinearConstraint > normalizeConstraints ( Collection < LinearConstraint > originalConstraints ) { List < LinearConstraint > normalized = new ArrayList < LinearConstraint > ( originalConstraints . size ( ) ) ; for ( LinearConstraint constraint : originalConstraints ) { normalized . add ( normalize ( constraint ) ) ; } return normalized ; }
22948	public boolean isDrawValueAboveBarEnabled ( ) { return mDrawValueAboveBar ; }
22991	public boolean isForceLabelsEnabled ( ) { return mForceLabels ; }
23099	public boolean annotate ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR annotate _CHAR ) ; }
23100	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL ; }
23116	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
23119	public boolean isApplicable ( ) { ClassificationViewer viewer = ( ClassificationViewer ) ( ( Director ) getDir ( ) ) . getViewerByClassName ( _CHAR SEED _CHAR ) ; return viewer != _NULL && viewer . hasComparableData ( ) ; }
23146	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Polymorph_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
23162	public boolean isApplicable ( ) { return _BOOL ; }
23181	private void resetPokeflyStateMachine ( ) { receivedInfo = _BOOL ; infoShownSent = _BOOL ; }
23196	public boolean isApplicable ( ) { return _BOOL ; }
23210	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; return chartViewer . getChartDrawer ( ) != _NULL && chartViewer . getChartDrawer ( ) . canShowXAxis ( ) ; }
23215	private synchronized void trim ( ) { while ( mCurrentSize > mSizeLimit ) { byte [ ] buf = mBuffersByLastUse . remove ( _NUM ) ; mBuffersBySize . remove ( buf ) ; mCurrentSize -= buf . length ; } }
23262	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
23284	public List < ModelEntity > induceModelFromDb ( Collection < String > messages ) { DatabaseUtil dbUtil = new DatabaseUtil ( this . helperInfo ) ; return dbUtil . induceModelFromDb ( messages ) ; }
23319	public static void toXml ( Object obj , Writer writer ) { xstream . toXML ( obj , writer ) ; }
23323	public void reconcileService ( Service service ) { val serviceName = service . getMetadata ( ) . getName ( ) ; log . debug ( _CHAR Reconciliation request for { } _CHAR , serviceName ) ; if ( isCertificateRequest ( service ) && ! inProgressServices . contains ( serviceName ) ) { new Thread ( _NULL ) . start ( ) ; } }
23345	public void put0 ( int i , int j , Z a ) { dirty = _BOOL ; re [ i ] [ j ] = a . re ; im [ i ] [ j ] = a . im ; }
23360	@ Override public boolean isProhibitedSubstitution ( short prohibited ) { return ( fBlock & prohibited ) != _NUM ; }
23367	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; LabelsJList list = chartViewer . getActiveLabelsJList ( ) ; return list != _NULL && ! list . isSelectionEmpty ( ) ; }
23404	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSkill_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
23420	public boolean isApplicable ( ) { return _BOOL ; }
23468	private void transitionOverlayViewFromInputToResults ( ) { resultsBox . setVisibility ( View . VISIBLE ) ; inputBox . setVisibility ( View . GONE ) ; initialButtonsLayout . setVisibility ( View . GONE ) ; onCheckButtonsLayout . setVisibility ( View . VISIBLE ) ; }
23483	public CompletableFuture < Tuple2 < UInteger [ ] , UInteger [ ] >> invoke ( UInteger subscriptionId ) { Variant [ ] inputArguments = new Variant [ ] { new Variant ( subscriptionId ) } ; return invoke ( inputArguments ) . thenCompose ( _NULL ) ; }
23505	private void writeDomainPair ( DomPair pair , Document document , Element parentElement ) { Element domPair = document . createElement ( _CHAR dompair _CHAR ) ; parentElement . appendChild ( domPair ) ; writeDomainSpec ( pair . getFirstDomain ( ) , document , domPair ) ; writeDomainSpec ( pair . getSecondDomain ( ) , document , domPair ) ; }
23517	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getLength ( ) > _NUM ; }
23526	public void drawFrame ( int textureId , float [ ] texMatrix ) { program . draw ( GlUtil . IDENTITY_MATRIX , rectDrawable . getVertexArray ( ) , _NUM , rectDrawable . getVertexCount ( ) , rectDrawable . getCoordsPerVertex ( ) , rectDrawable . getVertexStride ( ) , texMatrix , rectDrawable . getTexCoordArray ( ) , textureId , rectDrawable . getTexCoordStride ( ) ) ; }
23531	public void shuffle ( Random rand ) { for ( int i = _pos ; i -- > _NUM ; ) { swap ( i , rand . nextInt ( i ) ) ; } }
23533	public static void toHtml ( Grid grid , Writer writer ) { render ( grid , _NULL , writer , HTML_TEMPLATE ) ; }
23568	public EmailBuilder replyTo ( List < String > replyToAddresses ) { this . replyTo = replyToAddresses ; return this ; }
23584	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
23600	public synchronized boolean receive ( DHCPMessage outMessage ) { try { DatagramPacket incoming = new DatagramPacket ( new byte [ this . mtu ] , this . mtu ) ; receive ( incoming ) ; outMessage . internalize ( incoming . getData ( ) ) ; } catch ( java . io . IOException e ) { return _BOOL ; } return _BOOL ; }
23617	public void fireRequestBlockTwo ( ) throws RemoteServerException , LoginFailedException { fireRequestBlock ( new ServerRequest ( RequestTypeOuterClass . RequestType . GET_ASSET_DIGEST , CommonRequest . getGetAssetDigestMessageRequest ( ) ) ) ; }
23629	void onMenuVisibilityChanged ( boolean isVisible ) { for ( int i = _NUM ; i < mObservers . size ( ) ; ++ i ) { mObservers . get ( i ) . onMenuVisibilityChanged ( isVisible ) ; } }
23637	public VideoReportCommentQuery reportComment ( UserActor actor , int ownerId , int commentId ) { return new VideoReportCommentQuery ( getClient ( ) , actor , ownerId , commentId ) ; }
23639	@ Override public byte [ ] asBytes ( int rowNumber ) { return ByteBuffer . allocate ( _NUM ) . putShort ( get ( rowNumber ) ) . array ( ) ; }
23665	public static boolean isNumeric ( String value ) { return value != _NULL && DOUBLE_VALIDATOR . isValid ( value , LOCALE ) && NUMERIC_PATTERN . matcher ( value ) . matches ( ) && value . length ( ) < NUMBER_MAX_LENGTH ; }
23683	public boolean isApplicable ( ) { return getViewer ( ) instanceof ViewerBase ; }
23718	public boolean isSwipeable ( final int _index ) { if ( getItemViewType ( _index ) == TYPE_HEADER ) { return _BOOL ; } return _BOOL ; }
23721	@ Override public void retry ( VolleyError error ) throws VolleyError { mCurrentRetryCount ++ ; mCurrentTimeoutMs += ( mCurrentTimeoutMs * mBackoffMultiplier ) ; if ( ! hasAttemptRemaining ( ) ) { throw error ; } }
23722	public boolean isApplicable ( ) { return ( ( MainViewer ) getViewer ( ) ) . getSelectedIds ( ) . size ( ) == _NUM ; }
23746	private static boolean isWebEndpoint ( Method method ) { return Stream . of ( method . getAnnotations ( ) ) . anyMatch ( _NULL ) ; }
23749	public boolean isApplicable ( ) { return _BOOL ; }
23777	public void onPause ( boolean multitasking ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { plugin . onPause ( multitasking ) ; } } }
23783	public static void toXml ( Object obj , OutputStream output ) { xstream . toXML ( obj , output ) ; }
23793	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
23804	public Builder withPhysical ( boolean physical ) { this . physical = physical ; return this ; }
23818	@ NonNull public static State empty ( @ NonNull final Object key ) { return new State ( key ) ; }
23885	public boolean weakerProcessContents ( XSWildcardDecl superWildcard ) { return fProcessContents == XSWildcard . PC_LAX && superWildcard . fProcessContents == XSWildcard . PC_STRICT || fProcessContents == XSWildcard . PC_SKIP && superWildcard . fProcessContents != XSWildcard . PC_SKIP ; }
23897	public static boolean isBookmarkInMobileBookmarksBranch ( Context context , long nodeId ) { Boolean result = chromeBrowserProviderCall ( Boolean . class , ChromeBrowserProvider . CLIENT_API_IS_BOOKMARK_IN_MOBILE_BOOKMARKS_BRANCH , context , argsToBundle ( nodeId ) ) ; return result != _NULL ? result . booleanValue ( ) : _BOOL ; }
23909	@ Override public void write ( char [ ] chr ) { }
23958	public static FileChannel createTempFile ( Path dir , String prefix , String suffix ) throws IOException { return createNewFileImpl ( dir , prefix , suffix , new OpenOption [ ] { READ , WRITE , CREATE_NEW , DELETE_ON_CLOSE } ) . getFileChannel ( ) ; }
23972	public boolean isIgnoreUnknownTypes ( ) { return m_ignoreUnknownTypes ; }
23977	public static void toHtmlInlineCss ( Grid grid , Writer writer ) { render ( grid , _NULL , writer , HTML_INLINE_CSS_TEMPLATE ) ; }
24000	public void addField ( String fldName , Type type ) { fields . put ( fldName , type ) ; if ( myFieldSet != _NULL ) myFieldSet . add ( fldName ) ; }
24072	public static double uniform ( ) { return random . nextDouble ( ) ; }
24198	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getLength ( ) > _NUM ; }
24226	public boolean isApplicable ( ) { return _BOOL ; }
24239	public static boolean isBodyInActiveColorEnabled ( ) { return bodyInActiveColorEnabled ; }
24253	public Properties readSettings ( ) throws ProxyException { try { Properties settings = settingsParser . parseSettings ( profileScanner ) ; return settings ; } catch ( IOException e ) { throw new ProxyException ( _CHAR No Firefox installation found _CHAR ) ; } }
24307	public synchronized void begin ( Vector2 mousePosition ) { this . active = _BOOL ; this . beginPosition = mousePosition ; }
24350	public boolean isApplicable ( ) { return ProjectManager . getNumberOfProjects ( ) == _NUM && ( ( Director ) ProjectManager . getProjects ( ) . get ( _NUM ) ) . getDocument ( ) . getNumberOfSamples ( ) == _NUM ; }
24351	public List < LogicalTable > findByDimension ( Dimension dimension ) { return values ( ) . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; }
24359	private boolean allowedAsRequestResponseInCodeGen ( WellKnownType wkt ) { return wkt . allowedAsRequestResponseInCodeGen ( ) ; }
24409	protected final void applyTheme ( AppTheme theme ) { preferences . persistSelectedTheme ( theme ) ; restartActivity ( ) ; int enterAnimation = android . R . anim . fade_in ; int exitAnimation = android . R . anim . fade_out ; overridePendingTransition ( enterAnimation , exitAnimation ) ; }
24474	public boolean isApplicable ( ) { return _BOOL ; }
24513	public boolean isApplicable ( ) { final Document doc = ( ( MainViewer ) getDir ( ) . getMainViewer ( ) ) . getDocument ( ) ; return doc . getNumberOfReads ( ) > _NUM && doc . getMeganFile ( ) . hasDataConnector ( ) ; }
24517	public boolean hasSourceTimeoutChanged ( final ISourceCommandTag sourceCommandTag , final ISourceCommandTag oldSourceCommandTag ) { return sourceCommandTag . getSourceTimeout ( ) != oldSourceCommandTag . getSourceTimeout ( ) ; }
24522	public boolean isApplicable ( ) { return _BOOL ; }
24562	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryGaussNormEvaluator - do = ( char | word | all ) [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - wordMin = # ] [ - wordMax = # ] [ - wordDist = # ] [ - charMin = # ] [ - charMax = # ] [ - charDist = # ] [ - o = outFile ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] [ - lowmem ] _CHAR ) ; System . err . println ( _CHAR wordMin = # \ tMin word n - gram size .\ nwordMax = # \ tMax word n - gram size .\ nwordDist = # \ tWord n - gram window \ n _CHAR + _CHAR charMin = # \ tMin char n - gram size .\ ncharMax = # \ tMax char n - gram size .\ ncharDist = # \ tChar n - gram window .\ n _CHAR + _CHAR - o = outFile \ tThe file to output data . Default is stdout .\ n - t = # \ tNumber of threads . Defaults to _NUM .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR - use = o | d \ tUse [ o ] ccurences or average [ d ] istance to assign weights to the graph . Defaults to o .\ n _CHAR + _CHAR - lowmem \ tDo not use caching for documents . Less memory used , more time required .\ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
24568	public boolean hasSpecificGroups ( ) { return _specificGroups != _NULL ; }
24589	@ SuppressWarnings ( _CHAR SameReturnValue _CHAR ) boolean attachToConsole ( ) { return _BOOL ; }
24624	void print ( cp_info constant_pool [ ] ) { G . v ( ) . out . println ( prototype ( constant_pool ) ) ; ByteCode . showCode ( instructions , constant_pool ) ; }
24629	public static < T > Observable . Transformer < T , T > applyComputationSchedulers ( ) { return ( Observable . Transformer < T , T > ) computationTransformer ; }
24658	@ Override public void skippedEntity ( String name ) throws SAXException { return ; }
24667	public boolean isApplicable ( ) { return getViewer ( ) . isPCoATab ( ) ; }
24722	protected void synchronizeChildren ( ) { needsSyncChildren ( _BOOL ) ; }
24723	public void delete ( int key ) { int i = binarySearch ( mKeys , _NUM , mSize , key ) ; if ( i >= _NUM ) { removeAt ( i ) ; } }
24731	static void startAnimation ( View animView ) { Animation tx = new TranslateAnimation ( - _NUM , _NUM , _NUM , _NUM ) ; tx . setDuration ( _NUM ) ; tx . setRepeatCount ( Animation . INFINITE ) ; tx . setInterpolator ( new AccelerateDecelerateInterpolator ( ) ) ; tx . setRepeatMode ( Animation . REVERSE ) ; animView . startAnimation ( tx ) ; }
24764	private void resetInputActionIndices ( ) { mPinch0TabIndex =- _NUM ; mPinch1TabIndex =- _NUM ; mScrollingTab = _NULL ; mDiscardingTab = _NULL ; mLongPressSelected =- _NUM ; }
24770	@ Override public int hashCode ( ) { return proxyObject . hashCode ( ) ; }
24786	public boolean isOrderingAsAdded ( ) { return mOrderingAsAdded ; }
24809	public void startPreview ( ) { if ( camera != _NULL && ! previewing ) { camera . startPreview ( ) ; previewing = _BOOL ; } }
24812	private static String readAll ( InputStreamReader reader ) throws IOException { return readAll ( reader , _NUM * _NUM ) ; }
24838	public boolean isApplicable ( ) { return _BOOL ; }
24869	public synchronized void begin ( Vector2 mousePosition ) { this . active = _BOOL ; this . beginPosition = mousePosition ; }
24896	@ Override public ListenableFuture < LeaseRevokeResponse > revoke ( long leaseId ) { LeaseRevokeRequest leaseRevokeRequest = LeaseRevokeRequest . newBuilder ( ) . setID ( leaseId ) . build ( ) ; return this . leaseFutureStub . leaseRevoke ( leaseRevokeRequest ) ; }
24909	public boolean isApplicable ( ) { return _BOOL ; }
24910	private Object writeReplace ( ) throws ObjectStreamException { Object impl_proxy = impl ; if ( impl instanceof ProxyAccessor ) { impl_proxy = ( ( ProxyAccessor ) impl ) . getProxy ( ) ; logger . log ( Level . FINEST , _CHAR Obtained implementation proxy : { _NUM } _CHAR , impl_proxy ) ; if ( impl_proxy == _NULL ) { throw new InvalidObjectException ( _CHAR Implementation _CHAR_CHAR ) ; } } return impl_proxy ; }
24942	protected void performTypingAction ( Editor editor , char typedChar ) { EditorTestUtil . performTypingAction ( editor , typedChar ) ; getProject ( ) . getComponent ( PostprocessReformattingAspect . class ) . doPostponedFormatting ( ) ; PsiDocumentManager . getInstance ( getProject ( ) ) . commitAllDocuments ( ) ; }
24948	public static void main ( String [ ] argv ) { showDocument ( argv [ _NUM ] ) ; }
24997	public boolean isApplicable ( ) { return _BOOL ; }
24998	public boolean isApplicable ( ) { return getViewer ( ) instanceof GraphView && ( ( GraphView ) getViewer ( ) ) . getSelectedEdges ( ) . size ( ) > _NUM ; }
25002	public boolean isApplicable ( ) { return _BOOL ; }
25015	private int computeConstrainedBackoffCoefficient ( int numFailedAttempts ) { int n = Math . min ( MAX_EXPONENT , numFailedAttempts ) ; int twoToThePowerOfN = _NUM << n ; return sRandom . nextInt ( twoToThePowerOfN ) + _NUM ; }
25038	public void startPreview ( ) { if ( camera != _NULL && ! previewing ) { camera . startPreview ( ) ; previewing = _BOOL ; } }
25057	public boolean isHover ( int row ) { return getBoolean ( row , VisualItem . HOVER ) ; }
25060	public void ensureCleaningUpDyingTabs ( long time ) { finishAnimation ( time ) ; }
25109	public void changeFragmentShader ( String fragmentShader ) { if ( fragmentShader == _NULL ) { fragmentShader = FRAGMENT_SHADER ; } GLES20 . glDeleteProgram ( mProgram ) ; mProgram = createProgram ( VERTEX_SHADER , fragmentShader ) ; if ( mProgram == _NUM ) { throw new RuntimeException ( _CHAR failed creating program _CHAR ) ; } }
25115	public void close ( ) { try { os . flush ( ) ; os . close ( ) ; System . out . println ( _CHAR Wrote synthesized speech to _CHAR + path ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; } }
25127	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; return chartViewer . getChartDrawer ( ) != _NULL && chartViewer . getChartDrawer ( ) . canShowXAxis ( ) ; }
25132	public static Settings init ( ) { return init ( DEFAULT_TAG ) ; }
25136	public int equivHashCode ( ) { return getBase ( ) . equivHashCode ( ) * _NUM + getIndex ( ) . equivHashCode ( ) + _NUM ; }
25141	@ Override public boolean requiresConcurrencyProtection ( ) { return _BOOL ; }
25149	private void expandTree ( ) { for ( int i = _NUM ; i < myChangeTree . getRowCount ( ) ; ++ i ) { myChangeTree . expandRow ( i ) ; } }
25207	private void fireSubEquipmentSupervisionUpdate ( final SupervisionEvent supervisionEvent ) { Set < SupervisionListener > listeners = subEquipmentSupervisionListeners . get ( supervisionEvent . getEntityId ( ) ) ; if ( listeners != _NULL ) { for ( SupervisionListener listener : listeners ) { listener . onSupervisionUpdate ( supervisionEvent ) ; } } }
25209	public static Settings init ( ) { return init ( DEFAULT_TAG ) ; }
25223	public void dispose ( StepMetaInterface smi , StepDataInterface sdi ) { this . meta = ( ( SortKeyStepMeta ) smi ) ; this . data = ( ( SortKeyStepData ) sdi ) ; this . sortDataRows = _NULL ; super . dispose ( smi , sdi ) ; this . meta = _NULL ; this . data = _NULL ; }
25225	@ Override public void undo ( Transaction tx ) { }
25237	private void markLocalizedFileAsInvalid ( DropExporter dropExporter , DropFile file , Throwable cause ) { try { dropExporter . addCommentToFile ( file . getId ( ) , _CHAR Invalid localized file must be reviewed .\ n _CHAR + cause . getMessage ( ) ) ; } catch ( Throwable t ) { logger . debug ( _CHAR Can not add mark source file as invalid _CHAR , t ) ; } }
25256	public static PlaceholderFragment newInstance ( int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
25260	protected RealMatrix computeCovarianceMatrix ( double [ ] [ ] data , boolean biasCorrected ) throws MathIllegalArgumentException { return computeCovarianceMatrix ( new BlockRealMatrix ( data ) , biasCorrected ) ; }
25287	public void reset ( ) { fileMap = new HashMap < String , LinkedHashSet < FileAsset >> ( ) ; inlineMap = new HashMap < String , LinkedHashSet < String >> ( ) ; }
25335	public OverlayPanelContent createNewOverlayPanelContent ( ) { return new OverlayPanelContent ( new OverlayContentDelegate ( ) , new OverlayContentProgressObserver ( ) , mActivity ) ; }
25347	public static < T > ConsList < T > concat ( ConsList < T > lhs , ConsList < T > rhs ) { return lhs . concat ( rhs ) ; }
25359	void updateCountersForOpen ( ) { mPreferenceManager . setContextualSearchTapCount ( _NUM ) ; if ( isPromoAvailable ( ) ) { getPromoTapCounter ( ) . disable ( ) ; int count = mPreferenceManager . getContextualSearchPromoOpenCount ( ) ; mPreferenceManager . setContextualSearchPromoOpenCount ( ++ count ) ; ContextualSearchUma . logPromoOpenCount ( count ) ; } }
25383	public static void closeApplication ( Activity activity ) { activity . finish ( ) ; killCurrentProcess ( ) ; }
25417	public void usage ( String commandName ) { StringBuilder stringBuilder = new StringBuilder ( ) ; jCommander . usage ( commandName , stringBuilder , _CHAR _CHAR ) ; consoleWriter . a ( stringBuilder ) . println ( ) ; }
25422	void restoreLocationServicesState ( @ NonNull ContentResolver contentResolver ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . KITKAT ) { setLocationServicesStatePreKitKat ( contentResolver , originalLocationProviders ) ; } else { setLocationServicesState ( contentResolver , originalLocationMode ) ; } }
25440	public static SM_SYSTEM_MESSAGE STR_MSG_NOT_ENOUGH_KINA ( long num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
25445	public static < T > ConsList < T > cons ( T newHead , ConsList < T > list ) { return list . cons ( newHead ) ; }
25468	public MarketGetCommentsQuery fields ( List < EnumParam > value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
25552	public BoardEditCommentQuery editComment ( UserActor actor , int groupId , int topicId , int commentId ) { return new BoardEditCommentQuery ( getClient ( ) , actor , groupId , topicId , commentId ) ; }
25594	@ Override public byte [ ] asBytes ( int rowNumber ) { return ByteBuffer . allocate ( _NUM ) . putLong ( getLong ( rowNumber ) ) . array ( ) ; }
25608	public void onProgressBarStarted ( ) { }
25639	public boolean isApplicable ( ) { return _BOOL ; }
25641	public boolean isApplicable ( ) { return _BOOL ; }
25657	public void showTimes ( ) { showTimesShort ( _NUM ) ; }
25680	public boolean isValidRow ( int row ) { return m_rows . isValidRow ( row ) ; }
25699	public MarketGetAlbumsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
25702	public int addFile ( File file , Long fileSize ) { int fileId = getFileId ( file ) ; if ( fileSize != _NULL ) fileSizes . set ( fileId , fileSize ) ; return fileId ; }
25703	@ Override public void characters ( char ch [ ] , int start , int length ) throws SAXException { return ; }
25705	@ Override protected void scanStartElementName ( ) throws IOException , XNIException { fEntityScanner . scanQName ( fElementQName ) ; fSawSpace = fEntityScanner . skipSpaces ( ) ; }
25722	public static boolean isFileExists ( String fileName ) { try { FileFactory . FileType fileType = FileFactory . getFileType ( fileName ) ; if ( FileFactory . isFileExist ( fileName , fileType ) ) { return _BOOL ; } } catch ( IOException e ) { LOGGER . error ( _CHAR @ @ @ @ @ @ File not found at a given location @ @ @ @ @ @ : _CHAR + fileName ) ; } return _BOOL ; }
25738	public void translate ( Vector2 tx ) { this . translate ( tx . x , tx . y ) ; }
25747	protected boolean isValidFragment ( String fragment ) { if ( fragment == _NULL ) { return _BOOL ; } return isOff ( NO_FRAGMENTS ) ; }
25759	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Hide_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
25802	@ Override public byte [ ] asBytes ( int rowNumber ) { return ByteBuffer . allocate ( _NUM ) . putInt ( getInt ( rowNumber ) ) . array ( ) ; }
25805	public boolean isApplicable ( ) { return _BOOL ; }
25822	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Resurrect_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
25823	public IStoredListIterator < T > establishListScan ( boolean random_scan ) { if ( ! random_scan ) throw new RuntimeException ( _CHAR RwlSegmentedStoredList : : establishListScan non - random scans not supported _CHAR ) ; SegmentedListIterator < T > slh = _SLHolderPool . get ( ) ; SegmentedListIterator < T > res = establishPos ( slh ) ; if ( res == _NULL ) slh . release ( ) ; return res ; }
25824	@ Override public boolean isDeprecated ( ) { return isDeprecated ; }
25834	public TapTarget drawShadow ( boolean draw ) { this . drawShadow = draw ; return this ; }
25889	@ Override protected void onPause ( ) { super . onPause ( ) ; LOG . d ( TAG , _CHAR Paused the activity . '' ) ; if ( this . appView != _NULL ) { boolean keepRunning = this . keepRunning || this . cordovaInterface . activityResultCallback != _NULL ; this . appView . handlePause ( keepRunning ) ; } }
25932	public static TypeRef of ( EnumType enumType ) { return interner . intern ( new TypeRef ( Type . TYPE_ENUM , Cardinality . OPTIONAL , _NULL , enumType ) ) ; }
25961	public static SM_SYSTEM_MESSAGE STR_REMOVE_ITEM_OPTION_INVALID_OPTION_SLOT_NUMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25964	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL ; }
26034	public boolean isApplicable ( ) { ParametersDialog viewer = ( ParametersDialog ) getParent ( ) ; return viewer != _NULL ; }
26042	public boolean isLaunchedFromJar ( ) { return ( lstJarFile . size ( ) > _NUM ) ; }
26043	public static boolean doesTableHaveColumn ( String tableName , String columnName ) { switch ( tableName ) { case CaughtPokemonEntry . TABLE_NAME : return CaughtPokemonEntry . hasColumn ( columnName ) ; case FavoritePokemonEntry . TABLE_NAME : return FavoritePokemonEntry . hasColumn ( columnName ) ; default : return _BOOL ; } }
26068	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
26081	protected boolean isValidUser ( String user ) { return USER_PATTERN . matcher ( user ) . matches ( ) ; }
26090	public static Map < String , Object > prodFindDistinctVariants ( DispatchContext dctx , Map < String , ? extends Object > context ) { return ServiceUtil . returnFailure ( ) ; }
26124	public static void init ( Configuration conf ) { ROOT = conf . getString ( _CHAR temp . path _CHAR , _CHAR / opt / temp / _CHAR ) ; }
26125	private static int metadata_end_cmp_ ( MetaData x , MetaData y ) { return x . getEnd ( ) . compareTo ( y . getEnd ( ) ) ; }
26149	public static void writeAnalysisHTMLToFile ( String outputPath , DataAnalysis dataAnalysis , JavaSparkContext sc ) { try { String analysisAsHtml = HtmlAnalysis . createHtmlAnalysisString ( dataAnalysis ) ; writeStringToFile ( outputPath , analysisAsHtml , sc ) ; } catch ( Exception e ) { throw new RuntimeException ( _CHAR Error generating or writing HTML analysis file ( normalized data ) _CHAR , e ) ; } }
26176	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
26194	protected void skip ( ) { do { readBlock ( ) ; } while ( ( blockSize > _NUM ) && ! err ( ) ) ; }
26262	public boolean isApplicable ( ) { return getViewer ( ) . isPCoATab ( ) ; }
26296	public void reset ( ) { m_bfs = new BreadthFirstIterator ( ) ; }
26341	public boolean isScheduledForSending ( ) { return sendValue ; }
26355	public < T > T staleSafe ( WebElement element , WebElementCallable < T > elementCallable ) { return verify ( _NULL , Timeouts . MEDIUM ) ; }
26357	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
26438	public void startPreview ( ) { if ( camera != _NULL && ! previewing ) { camera . startPreview ( ) ; previewing = _BOOL ; } }
26530	public static PlaceholderFragment newInstance ( int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
26614	public boolean isApplicable ( ) { return ( ( Director ) getDir ( ) ) . getDocument ( ) . getSampleSelection ( ) . size ( ) > _NUM ; }
26639	static double checkDouble ( double d ) throws JSONException { if ( Double . isInfinite ( d ) || Double . isNaN ( d ) ) { throw new JSONException ( _CHAR Forbidden numeric value : _CHAR + d ) ; } return d ; }
26679	public static BufferedImage toBufferedImage ( Image image ) { return ImageTransform . toBufferedImage ( image , BufferedImage . TYPE_INT_ARGB_PRE ) ; }
26681	public static SM_SYSTEM_MESSAGE STR_CANNOT_USE_ITEM_TOO_LOW_LEVEL_MUST_BE_THIS_LEVEL ( int value1 , int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , new DescriptionId ( value1 ) ) ; }
26697	public static SM_SYSTEM_MESSAGE STR_MSG_LIMIT_SALE_M_EPIC_SHOP_DESC02 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26705	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . isAllowNucleotides ( ) && viewer . isShowAminoAcids ( ) ; }
26708	public boolean isApplicable ( ) { ImportBlastDialog importBlastDialog = ( ImportBlastDialog ) getParent ( ) ; return importBlastDialog . isAppliable ( ) ; }
26749	@ Override public boolean equals ( Object other ) { if ( other instanceof IntArrayWrapper ) { return Arrays . equals ( data , ( ( IntArrayWrapper ) other ) . data ) ; } return _BOOL ; }
26764	public static boolean isNotNull ( final String element ) { boolean isNotNull = _BOOL ; if ( element != _NULL && ! element . isEmpty ( ) ) { isNotNull = _BOOL ; } return isNotNull ; }
26766	public boolean hasDeviceFrame ( @ Nullable Device device ) { DeviceData deviceData = getDeviceData ( device ) ; if ( deviceData == _NULL ) { return _BOOL ; } return ! deviceData . getDescriptor ( ) . isStretchable ( ) ; }
26810	private synchronized void trim ( ) { while ( mCurrentSize > mSizeLimit ) { byte [ ] buf = mBuffersByLastUse . remove ( _NUM ) ; mBuffersBySize . remove ( buf ) ; mCurrentSize -= buf . length ; } }
26823	public boolean equalsShared ( Item otherItem ) { if ( otherItem == _NULL ) { return _BOOL ; } else { return getSharedContents ( ) . equals ( otherItem . getSharedContents ( ) ) ; } }
26881	public boolean optimizeScanForSingleObject ( ) { return size ( ) <= _NUM ; }
26885	public GroupsIsMemberQueryWithUserIds isMember ( String groupId , List < Integer > userIds ) { return new GroupsIsMemberQueryWithUserIds ( getClient ( ) , groupId , userIds ) ; }
26909	private static String [ ] toSuffixes ( String [ ] extensions ) { String [ ] suffixes = new String [ extensions . length ] ; for ( int i = _NUM ; i < extensions . length ; i ++ ) { suffixes [ i ] = _CHAR . _CHAR + extensions [ i ] ; } return suffixes ; }
26919	public boolean isApplicable ( ) { return getViewer ( ) instanceof GraphView && ( ( ( GraphView ) getViewer ( ) ) . getSelectedNodes ( ) . size ( ) > _NUM || ( ( GraphView ) getViewer ( ) ) . getSelectedEdges ( ) . size ( ) > _NUM ) ; }
26925	private EmoClientException asEmoClientException ( UniformInterfaceException e ) throws EmoClientException { throw new EmoClientException ( e . getMessage ( ) , e , toEmoResponse ( e . getResponse ( ) ) ) ; }
26949	public static SM_SYSTEM_MESSAGE STR_MSG_SLAYER_DARK_DEATH_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
26959	@ Override public byte [ ] asBytes ( int rowNumber ) { return ByteBuffer . allocate ( _NUM ) . putInt ( getInt ( rowNumber ) ) . array ( ) ; }
26960	public static SM_SYSTEM_MESSAGE STR_REMOVE_ITEM_OPTION_IT_CAN_NOT_BE_GIVEN_OPTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27018	public static Intent makeInitIntent ( Context context ) { Intent i = new Intent ( context , FileObserverService . class ) ; i . setAction ( ACTION_START_OBSERVE ) ; return i ; }
27051	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; setFocus ( ) ; } }
27089	public boolean contains ( String key ) { return myProperties . containsKey ( key ) ; }
27175	public static StatefulHash sha256 ( ) { return Hashes . createStateful ( SimpleHashParameters . SHA256 ) ; }
27188	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getNumberOfSequences ( ) > _NUM && viewer . getSelectedBlock ( ) . isSelected ( ) && viewer . getSelectedBlock ( ) . getLastRow ( ) < viewer . getAlignment ( ) . getNumberOfSequences ( ) - _NUM ; }
27197	public boolean isApplicable ( ) { return _BOOL ; }
27219	@ Override public byte [ ] asBytes ( int rowNumber ) { return ByteBuffer . allocate ( _NUM ) . putInt ( get ( rowNumber ) ) . array ( ) ; }
27235	public void addProcessIds ( final Collection < Long > processIds ) { for ( Long processId : processIds ) { addProcessId ( processId ) ; } }
27250	public boolean equals ( Object other ) { if ( ! ( other instanceof TLongObjectHashMap ) ) { return _BOOL ; } TLongObjectHashMap that = ( TLongObjectHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
27252	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
27260	private int parseLastInt ( String line ) { String lastInt = line . trim ( ) . substring ( line . lastIndexOf ( _CHAR _CHAR ) ) ; return Integer . parseInt ( lastInt . trim ( ) ) ; }
27284	public static UByte valueOf ( short value ) throws NumberFormatException { return valueOfUnchecked ( rangeCheck ( value ) ) ; }
27311	public boolean isApplicable ( ) { return _BOOL ; }
27360	@ Override public Writer append ( CharSequence csq ) { return this ; }
27392	public DefaultHibernateSpaceSynchronizationEndpointConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
27454	public void translate ( double x , double y ) { this . translation . x += x ; this . translation . y += y ; }
27503	public static PlaceholderFragment newInstance ( int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
27583	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
27617	public boolean isApplicable ( ) { return ( ( Director ) getDir ( ) ) . getDocument ( ) . getSampleSelection ( ) . size ( ) > _NUM ; }
27639	private Response requireJSON ( IHTTPSession session ) { final Map < String , String > headers = session . getHeaders ( ) ; if ( ! APPLICATION_JSON . equals ( headers . get ( CONTENT_TYPE ) ) ) { return newFixedLengthResponse ( Response . Status . NOT_ACCEPTABLE , MIME_PLAINTEXT , _CHAR Set content - type to application / json _CHAR ) ; } else { return _NULL ; } }
27685	private synchronized void trim ( ) { while ( mCurrentSize > mSizeLimit ) { byte [ ] buf = mBuffersByLastUse . remove ( _NUM ) ; mBuffersBySize . remove ( buf ) ; mCurrentSize -= buf . length ; } }
27749	public void onCompletion ( MediaPlayer player ) { Log . d ( LOG_TAG , _CHAR on completion is calling stopped _CHAR ) ; this . setState ( STATE . MEDIA_STOPPED ) ; }
27773	private synchronized void trim ( ) { while ( mCurrentSize > mSizeLimit ) { byte [ ] buf = mBuffersByLastUse . remove ( _NUM ) ; mBuffersBySize . remove ( buf ) ; mCurrentSize -= buf . length ; } }
27866	public boolean isCellEditable ( int row , int col ) { if ( ! m_rows . isValidRow ( row ) ) { return _BOOL ; } else { return getColumn ( col ) . isCellEditable ( row ) ; } }
27867	public static String diagPrefixForLint ( String aspectName , String ruleName ) { return String . format ( _CHAR ( lint ) % s - % s : _CHAR , aspectName , ruleName ) ; }
27880	public boolean isApplicable ( ) { return _BOOL ; }
27885	private static < T > String flagDefaultValue ( FlagField < T > field ) { return field . valueString ( field . defaultValue ( ) ) ; }
27950	public void resourceSyncInfoChanged ( IResource [ ] changedResources ) { for ( int i = _NUM ; i < changedResources . length ; i ++ ) { if ( resource != _NULL && changedResources [ i ] . equals ( resource . getIResource ( ) ) ) { refresh ( ) ; } } }
27954	public static void showToastWhenPossible ( Context context , String message ) { Activity activity = Restarter . getForegroundActivity ( context ) ; if ( activity != _NULL ) { Restarter . showToast ( activity , message ) ; } else { showToastWhenPossible ( context , message , _NUM ) ; } }
28032	@ PostConstruct public void init ( ) { LOGGER . info ( _CHAR Initializing SubEquipment cache ... _CHAR ) ; commonInit ( ) ; doPostConfigurationOfSubEquipmentControlTags ( ) ; LOGGER . info ( _CHAR ... SubEquipment cache initialization complete . '' ) ; }
28048	@ Override public boolean equals ( Object object ) { return object == _NULL || object == this ; }
28049	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OutofSight_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
28060	protected void onAccountCreationSuccessful ( AccountManagerFuture < Bundle > future ) { }
28066	@ Override public void write ( int b ) { }
28105	public boolean isByteFeature ( String featureName ) { try { int index = getFeatureIndex ( featureName ) ; return isByteFeature ( index ) ; } catch ( Exception e ) { return _BOOL ; } }
28177	public static SM_SYSTEM_MESSAGE STR_SKILL_NOT_ENOUGH_ITEM ( DescriptionId value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28187	public boolean isResumeSupported ( ) { synchronized ( lock ) { return restSupported ; } }
28190	private static boolean isAlphanum ( char p_char ) { return ( p_char <= _CHAR && ( fgLookupTable [ p_char ] & MASK_ALPHA_NUMERIC ) != _NUM ) ; }
28211	public boolean isApplicable ( ) { return getViewer ( ) instanceof ViewerBase ; }
28218	@ Override public void run ( ) { while ( ! isInterrupted ( ) ) { try { ValueHolder < K , V > ref = ( ValueHolder < K , V > ) _queue . remove ( ) ; _table . remove ( ref . getKey ( ) ) ; } catch ( InterruptedException e ) { interrupt ( ) ; break ; } } }
28263	final public boolean isSyncReplicationEnabled ( ) { return _isSyncReplication ; }
28292	Item delete ( Item item , Player actor ) { return delete ( item , ItemDeleteType . QUEST_REWARD , actor ) ; }
28309	public void toAllInRadius ( int dimension , Vec3d pos , double radius ) { toAllInRadius ( OpenModLoader . getSidedHandler ( ) . getServer ( ) . worldServerForDimension ( dimension ) , pos , radius ) ; }
28352	public static void waitForCompletion ( Collection < Future < ? >> futures ) { for ( Future < ? > future : futures ) { try { future . get ( ) ; } catch ( ExecutionException ex ) { throw new RuntimeException ( _CHAR Exception during execution _CHAR , ex ) ; } catch ( InterruptedException ex ) { throw new RuntimeException ( _CHAR Thread interrupted _CHAR , ex ) ; } } }
28363	boolean acceptNode ( Node node ) { if ( fNodeFilter == _NULL ) { return ( fWhatToShow & ( _NUM << node . getNodeType ( ) - _NUM ) ) != _NUM ; } else { return ( ( fWhatToShow & ( _NUM << node . getNodeType ( ) - _NUM ) ) != _NUM ) && fNodeFilter . acceptNode ( node ) == NodeFilter . FILTER_ACCEPT ; } }
28364	public TrustManagerBuilder withConfig ( @ NonNull Context ctxt , @ XmlRes int resourceId , boolean isDebugBuild ) { return ( withConfig ( new XmlConfigSource ( ctxt , resourceId , isDebugBuild ) ) ) ; }
28371	protected UtilsCheckLinkQuery url ( String value ) { return unsafeParam ( _CHAR url _CHAR , value ) ; }
28412	protected void addSecondaryActions ( ArrayObjectAdapter secondaryActionsAdapter ) { secondaryActionsAdapter . add ( mShuffleAction ) ; secondaryActionsAdapter . add ( mRepeatAction ) ; secondaryActionsAdapter . add ( mThumbsDownAction ) ; secondaryActionsAdapter . add ( mThumbsUpAction ) ; }
28460	@ Override public void clear ( ) { if ( _NULL != columnDictionaryInfo ) { columnDictionaryInfo . clear ( ) ; columnDictionaryInfo = _NULL ; } }
28471	public boolean isApplicable ( ) { return getViewer ( ) instanceof IViewerWithFindToolBar ; }
28493	public double featureCost ( Target target , Unit unit , String featureName ) { return featureCost ( target , unit , featureName , featureDefinition , weightFunction ) ; }
28565	public boolean containsSinkMethod ( String sinkSignature ) { return ! findSinkByMethodSignature ( sinkSignature ) . isEmpty ( ) ; }
28581	public void startPreview ( ) { if ( mCamera != _NULL && ! mPreviewing ) { mCamera . startPreview ( ) ; mPreviewing = _BOOL ; } }
28603	public GroupsSearchQuery cityId ( Integer value ) { return unsafeParam ( _CHAR city_id _CHAR , value ) ; }
28628	public static void reloadTime ( int time ) { ThreadPoolManager . getInstance ( ) . purge ( ) ; instance = new GameTime ( time ) ; clockStarted = _BOOL ; startClock ( ) ; log . info ( _CHAR Game time changed by admin and clock restarted ... _CHAR ) ; }
28647	public GroupsIsMemberQueryWithUserIds isMember ( UserActor actor , String groupId , Integer ... userIds ) { return new GroupsIsMemberQueryWithUserIds ( getClient ( ) , actor , groupId , userIds ) ; }
28654	public boolean isApplicable ( ) { return ( ( ViewerBase ) getViewer ( ) ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
28715	private EmoClientException asEmoClientException ( UniformInterfaceException e ) throws EmoClientException { throw new EmoClientException ( e . getMessage ( ) , e , toEmoResponse ( e . getResponse ( ) ) ) ; }
28723	public static SinkRecord spoofSinkRecord ( String topic , Schema valueSchema , Struct value ) { return new SinkRecord ( topic , _NUM , _NULL , _NULL , valueSchema , value , _NUM ) ; }
28759	@ Override public void showMessage ( String message ) { Snackbar . make ( root , message , Snackbar . LENGTH_SHORT ) . show ( ) ; }
28771	public boolean isContinuousFeature ( String featureName ) { try { int index = getFeatureIndex ( featureName ) ; return isContinuousFeature ( index ) ; } catch ( Exception e ) { return _BOOL ; } }
28772	public void updateTopControlsState ( ) { if ( mContent == _NULL ) return ; if ( isFullscreenSizePanel ( ) ) { mContent . updateTopControlsState ( _BOOL , _BOOL , _BOOL ) ; } else { mContent . updateTopControlsState ( _BOOL , _BOOL , _BOOL ) ; } }
28805	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
28812	public final int computeHashCode ( int val ) { return HashFunctions . hash ( val ) ; }
28838	public static void logBasePageProtocol ( boolean isHttpBasePage ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchBasePageProtocol _CHAR , isHttpBasePage ? PROTOCOL_IS_HTTP : PROTOCOL_NOT_HTTP , PROTOCOL_BOUNDARY ) ; }
28933	void assignNewToLocal ( Stmt stmt , Local left ) { PurityNode node = cacheNode ( new PurityStmtNode ( stmt , _BOOL ) ) ; localsRemove ( left ) ; localsPut ( left , node ) ; nodes . add ( node ) ; if ( doCheck ) sanityCheck ( ) ; }
28998	public DocsAddQuery add ( UserActor actor , int ownerId , int docId ) { return new DocsAddQuery ( getClient ( ) , actor , ownerId , docId ) ; }
29009	private static boolean inStringArray ( String value , String [ ] stringArray ) { for ( int i = _NUM ; i < stringArray . length ; i ++ ) { if ( stringArray [ i ] . equals ( value ) ) { return _BOOL ; } } return _BOOL ; }
29074	public boolean isApplicable ( ) { return _BOOL ; }
29121	public boolean isGettingFull ( ) { return slotPosition ( getNumRecords ( ) + _NUM ) >= Buffer . BUFFER_SIZE ; }
29187	public boolean isApplicable ( ) { return getViewer ( ) instanceof IViewerWithFindToolBar && ( ( IViewerWithFindToolBar ) getViewer ( ) ) . isShowFindToolBar ( ) ; }
29188	public AemSidekick clickModeIcon ( ModeIcon iconName ) { final String xpath = String . format ( ICON_BOTTOM_XPATH , iconName . getIconName ( ) ) ; final WebElement iconBottom = driver . findElement ( By . xpath ( xpath ) ) ; iconBottom . click ( ) ; return this ; }
29197	private void debugPrint ( String msg ) { if ( debug ) { System . out . println ( toString ( ) + _CHAR : _CHAR + msg ) ; } }
29249	public static boolean isValueLinkCard ( String stPassed ) { if ( isEmpty ( stPassed ) ) return defaultEmptyOK ; String st = stripCharsInBag ( stPassed , creditCardDelimiters ) ; if ( st . length ( ) == _NUM && ( st . startsWith ( _CHAR _NUM _CHAR ) || st . startsWith ( _CHAR _NUM _CHAR ) ) ) { return _BOOL ; } return _BOOL ; }
29271	public DetectorResult detect ( ) throws NotFoundException , FormatException { return detect ( _NULL ) ; }
29272	public boolean isApplicable ( ) { return _BOOL ; }
29310	public TrustManagerBuilder withManifestConfig ( @ NonNull Context ctxt ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . N ) { return ( withConfig ( new ManifestConfigSource ( ctxt ) ) ) ; } return ( this ) ; }
29378	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
29438	public boolean isApplicable ( ) { final ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return viewer . getActiveLabelsJList ( ) != _NULL && viewer . getActiveLabelsJList ( ) . getSelectedIndex ( ) != - _NUM ; }
29485	public static Double zing ( Number value ) { if ( value == _NULL ) { return _NULL ; } return Math . max ( _NUM , value . doubleValue ( ) ) ; }
29488	public int size ( ) { return names . size ( ) ; }
29542	protected boolean isCacheable ( ) { SimplifiedIntervalList missingIntervals = getPartialIntervalsWithDefault ( getResponseContext ( ) ) ; SimplifiedIntervalList volatileIntervals = getVolatileIntervalsWithDefault ( getResponseContext ( ) ) ; return missingIntervals . isEmpty ( ) && volatileIntervals . isEmpty ( ) ; }
29552	public boolean optimizeScanForSingleObject ( ) { return _BOOL ; }
29568	public void treeWillExpand ( TreeExpansionEvent event ) throws ExpandVetoException { if ( classificationViewer . isLocked ( ) ) { throw new ExpandVetoException ( event ) ; } jTree . addChildren ( ( ViewerJTree . MyJTreeNode ) event . getPath ( ) . getLastPathComponent ( ) ) ; }
29624	public boolean isApplicable ( ) { return _BOOL ; }
29676	public static void assertContains ( Complex [ ] values , Complex z , double epsilon ) { assertContains ( _NULL , values , z , epsilon ) ; }
29702	@ Override public synchronized boolean isProcessAliveType ( ) { return ( getAliveType ( ) . equals ( AliveTimer . ALIVE_TYPE_PROCESS ) ) ; }
29736	public MarketSearchQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
29752	public void restart ( ) { mInit = _BOOL ; launchInspector ( WXEnvironment . sRemoteDebugMode ) ; if ( mWXBridge == _NULL ) { mWXBridge = new WXBridge ( ) ; } }
29763	public boolean isApplicable ( ) { ImportBlastDialog importBlastDialog = ( ImportBlastDialog ) getParent ( ) ; return ! importBlastDialog . getFormatCBox ( ) . getSelectedItem ( ) . toString ( ) . equalsIgnoreCase ( _CHAR daa _CHAR ) ; }
29787	protected DocsSaveQuery file ( String value ) { return unsafeParam ( _CHAR file _CHAR , value ) ; }
29792	@ Override public void characters ( char ch [ ] , int start , int length ) throws SAXException { return ; }
29800	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
29803	public synchronized boolean hasRef ( long gen ) { Integer rc = genRefCounts . get ( gen ) ; if ( rc == _NULL ) { return _BOOL ; } else { assert rc . intValue ( ) > _NUM ; return _BOOL ; } }
29809	protected void initLinkTable ( ) { m_links = createLinkTable ( ) ; IntIterator edges = getEdgeTable ( ) . rows ( ) ; while ( edges . hasNext ( ) ) { updateDegrees ( edges . nextInt ( ) , _NUM ) ; } }
29856	public static final void removePlayer ( Player player ) { PlayerAlliance alliance = player . getPlayerAlliance2 ( ) ; if ( alliance != _NULL ) { if ( alliance . getTeamType ( ) . isDefence ( ) ) { VortexService . getInstance ( ) . removeDefenderPlayer ( player ) ; } alliance . onEvent ( new PlayerAllianceLeavedEvent ( alliance , player ) ) ; } }
29864	public void flattenHierarchy ( ConstraintWidgetContainer root ) { ArrayList < ConstraintWidgetContainer > containers = gatherContainers ( root ) ; while ( containers . size ( ) > _NUM ) { for ( ConstraintWidgetContainer container : containers ) { removeContainer ( container ) ; } containers = gatherContainers ( root ) ; } }
29912	public static long editUnitToMilliSeconds ( BigInteger eu , BigFraction unitsInSec ) { BigFraction editUnits = new BigFraction ( eu ) ; return editUnits . divide ( unitsInSec ) . multiply ( _NUM ) . longValue ( ) ; }
29914	@ Override public void endPrefixMapping ( String prefix ) throws SAXException { return ; }
29921	public synchronized BookKeeperClientBuilder channelFactory ( ClientSocketChannelFactory channelFactory ) { this . channelFactory = channelFactory ; return this ; }
29961	public static SimpleBounds unbounded ( int dim ) { final double [ ] lB = new double [ dim ] ; Arrays . fill ( lB , Double . NEGATIVE_INFINITY ) ; final double [ ] uB = new double [ dim ] ; Arrays . fill ( uB , Double . POSITIVE_INFINITY ) ; return new SimpleBounds ( lB , uB ) ; }
29981	public boolean isApplicable ( ) { if ( getViewer ( ) instanceof ViewerBase ) return ( ( ViewerBase ) getViewer ( ) ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; else return getViewer ( ) instanceof ClusterViewer && ( ( ClusterViewer ) getViewer ( ) ) . getGraphView ( ) != _NULL && ( ( ClusterViewer ) getViewer ( ) ) . getGraphView ( ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
30016	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoFly_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
30025	public static SM_SYSTEM_MESSAGE STR_CANNOT_USE_ITEM_TOO_HIGH_LEVEL ( int value0 , int value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
30070	public static boolean isBodyAsleepColorEnabled ( ) { return bodyAsleepColorEnabled ; }
30075	protected void bottomUpDispatch ( DominatorNode < N > node ) { if ( isFrontierKnown ( node ) ) return ; for ( DominatorNode < N > child : dt . getChildrenOf ( node ) ) { if ( ! isFrontierKnown ( child ) ) bottomUpDispatch ( child ) ; } processNode ( node ) ; }
30081	public void onRemoval ( K key , R resource ) { }
30092	private static boolean isAncestor ( String ancestorPath , String path ) { if ( ancestorPath . equals ( path ) ) { return _BOOL ; } return FileUtil . isAncestor ( ancestorPath , path , _BOOL ) ; }
30101	public synchronized boolean hasCustomProperties ( ) { Properties prop = getCustomProperties ( _BOOL ) ; return prop != _NULL && ! prop . isEmpty ( ) ; }
30109	public GroupsIsMemberQueryWithUserIdsExtended isMemberExtended ( UserActor actor , String groupId , Integer ... userIds ) { return new GroupsIsMemberQueryWithUserIdsExtended ( getClient ( ) , actor , groupId , userIds ) ; }
30110	public boolean isApplicable ( ) { ClassificationViewer viewer = ( ClassificationViewer ) ( ( Director ) getDir ( ) ) . getViewerByClassName ( _CHAR KEGG _CHAR ) ; return viewer != _NULL && viewer . hasComparableData ( ) ; }
30115	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostDropRate_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
30126	public boolean equals ( Object other ) { if ( ! ( other instanceof TObjectShortHashMap ) ) { return _BOOL ; } TObjectShortHashMap that = ( TObjectShortHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
30136	public Future execute ( CompletionCallback < Object > callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . cond_ , this . task_ , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
30141	protected void synchronizeChildren ( ) { needsSyncChildren ( _BOOL ) ; }
30164	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; serviceID = new ServiceID ( in ) ; }
30199	public MethodDecl lookupClose ( ResourceDeclaration resource ) { ASTNode $ State state = state ( ) ; try { TypeDecl resourceType = resource . getTypeAccess ( ) . type ( ) ; for ( MethodDecl method : ( Collection < MethodDecl > ) resourceType . memberMethods ( _CHAR close _CHAR ) ) { if ( method . getNumParameter ( ) == _NUM ) { return method ; } } return _NULL ; } finally { } }
30228	public boolean isApplicable ( ) { return ( ( AlignmentViewer ) getViewer ( ) ) . getSelectedBlock ( ) . isSelected ( ) ; }
30357	public static Sort of ( String name , SortType type ) { return new Sort ( name , type ) ; }
30387	public GraphSimilarity compareMeaningsOf ( Vertex vNode1 , Vertex vNode2 ) { GraphSimilarity isRes = new GraphSimilarity ( ) ; return isRes ; }
30401	public boolean isMassExplicit ( ) { return this . massExplicit ; }
30446	@ Override public void clear ( ) { decrementAccessCount ( ) ; }
30477	public boolean isApplicable ( ) { return _BOOL ; }
30491	protected void qualityValue ( boolean quality ) { }
30619	boolean relative ( ) { return rel ; }
30621	protected boolean isValidFragment ( String fragment ) { if ( fragment == _NULL ) { return _BOOL ; } return isOff ( NO_FRAGMENTS ) ; }
30623	public static List < String > transformToDBStyle ( CriteriaMap < ? > criteriaMap , List < String > chartFields ) { if ( chartFields == _NULL ) return new ArrayList < > ( ) ; return chartFields . stream ( ) . map ( _NULL ) . collect ( toList ( ) ) ; }
30654	public static String formatSpelledOutAmount ( double amount , Locale locale ) { com . ibm . icu . text . NumberFormat nf = new com . ibm . icu . text . RuleBasedNumberFormat ( locale , com . ibm . icu . text . RuleBasedNumberFormat . SPELLOUT ) ; return nf . format ( amount ) ; }
30668	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } finally { lockFile . delete ( ) ; } }
30702	@ CalledByNative public static boolean isAccessibilityEnabled ( Context context ) { AccessibilityManager manager = ( AccessibilityManager ) context . getSystemService ( Context . ACCESSIBILITY_SERVICE ) ; return manager != _NULL && manager . isEnabled ( ) && manager . isTouchExplorationEnabled ( ) ; }
30714	public static void attach ( @ NotNull Module module , @ NotNull OSProcessHandler processHandler , @ NotNull String processTitle ) { final ConsoleView console = getConsole ( module ) ; console . attachToProcess ( processHandler ) ; show ( module , console , processTitle ) ; }
30721	public static Properties convertXML ( InputStream is ) throws SAXException , ParserConfigurationException , IOException { return convertXML ( is , _BOOL , _NULL ) ; }
30810	public static UByte valueOf ( String value ) throws NumberFormatException { return valueOfUnchecked ( rangeCheck ( Short . parseShort ( value ) ) ) ; }
30844	public BoardDeleteCommentQuery deleteComment ( UserActor actor , int groupId , int topicId , int commentId ) { return new BoardDeleteCommentQuery ( getClient ( ) , actor , groupId , topicId , commentId ) ; }
30876	void clearWeight ( NlComponent n ) { if ( mClearWeights == _NULL ) { mClearWeights = new ArrayList < NlComponent > ( ) ; } mClearWeights . add ( n ) ; }
30881	public boolean match ( String text ) { return match ( text , _NUM , text . length ( ) ) ; }
30937	public int size ( ) { return map . size ( ) ; }
30954	public StaticInvokeExpr newStaticInvokeExpr ( SootMethodRef method , List < ? extends Value > args ) { return new JStaticInvokeExpr ( method , args ) ; }
30958	public int equivHashCode ( ) { return _NUM ; }
30991	@ Override public boolean isAcceptable ( JsonPath jsonPath , String requestType ) { return jsonPath . isCollection ( ) && jsonPath instanceof ResourcePath && HttpMethod . GET . name ( ) . equals ( requestType ) ; }
30998	public Value newFunction ( String functionName , Class < ? > resultType , Value ... args ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
31041	@ Override public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { return ; }
31066	public boolean isApplicable ( ) { try { return getViewer ( ) . isPCoATab ( ) && getViewer ( ) . getPcoaTab ( ) . getPCoA ( ) . getEigenValues ( ) != _NULL ; } catch ( Exception ex ) { return _BOOL ; } }
31072	public boolean isLocalConfiguration ( ) { return localConfiguration ; }
31170	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
31188	int distinctAdds ( ) { return ( int ) Math . min ( _adds , _distinctAdds . cardinality ( ) ) ; }
31211	public boolean isApplicable ( ) { return _BOOL ; }
31236	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
31254	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
31282	public static PedanticThrowAnalysis v ( ) { return G . v ( ) . soot_toolkits_exceptions_PedanticThrowAnalysis ( ) ; }
31301	public static < K , V > boolean putMapNotNullKeyAndValue ( Map < K , V > map , K key , V value ) { if ( map == _NULL || key == _NULL || value == _NULL ) { return _BOOL ; } map . put ( key , value ) ; return _BOOL ; }
31317	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
31341	public boolean isApplicable ( ) { return _BOOL ; }
31393	public boolean isApplicable ( ) { return getViewer ( ) . getSelectedComponent ( ) == getViewer ( ) . getPcoaTab ( ) ; }
31443	public MarketCreateCommentQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
31465	private String emailToString ( String subject , String msg , String ... to ) { return _CHAR [ _CHAR + msg + _CHAR ] to _CHAR + Arrays . asList ( to ) + _CHAR with subject [ _CHAR + subject + _CHAR ] _CHAR ; }
31487	public static void decorate ( IDecoration decoration , IDecoratorComponent [ ] [ ] format , Map bindings ) { String [ ] prefixSuffix = decorate ( format , bindings ) ; decoration . addPrefix ( prefixSuffix [ _NUM ] ) ; decoration . addSuffix ( prefixSuffix [ _NUM ] ) ; }
31508	public boolean removeNode ( Node n ) { nodeCheck ( n , _BOOL ) ; return removeNode ( n . getRow ( ) ) ; }
31514	private static String [ ] toSuffixes ( String [ ] extensions ) { String [ ] suffixes = new String [ extensions . length ] ; for ( int i = _NUM ; i < extensions . length ; i ++ ) { suffixes [ i ] = _CHAR . _CHAR + extensions [ i ] ; } return suffixes ; }
31553	private void extractProtocolFilter ( ) { int protocolIndex = this . matchTo . indexOf ( PROTOCOL_ENDING ) ; if ( protocolIndex != - _NUM ) { this . protocolFilter = this . matchTo . substring ( _NUM , protocolIndex ) ; this . matchTo = this . matchTo . substring ( protocolIndex + PROTOCOL_ENDING . length ( ) ) ; } }
31626	public boolean rotateImageBy ( int degrees ) { int newDegrees = ( getDegreesRotated ( ) + degrees ) % _NUM ; setExifRotation ( newDegrees ) ; setDegreesRotated ( newDegrees ) ; return _BOOL ; }
31704	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedFPATK_Instant_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
31705	public boolean isApplicable ( ) { return getViewer ( ) instanceof ViewerBase && ( ( ViewerBase ) getViewer ( ) ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
31753	public void updateAllSteps ( ) { Runnable batch = myBatchQueue . poll ( ) ; while ( batch != _NULL ) { batch . run ( ) ; batch = myBatchQueue . poll ( ) ; } }
31769	public boolean canSet ( T value ) { return isSettable ? internalCanSet ( value ) : matches ( value ) ; }
31789	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeBoostSkillCritical_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
31832	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
31911	public Channel intercept ( Channel channel ) { return ClientInterceptors . intercept ( channel , this ) ; }
31938	private byte [ ] SHA256hash ( byte [ ] tobeHashed ) { SHA256Digest digester = new SHA256Digest ( ) ; byte [ ] retValue = new byte [ digester . getDigestSize ( ) ] ; digester . update ( tobeHashed , _NUM , tobeHashed . length ) ; digester . doFinal ( retValue , _NUM ) ; return retValue ; }
31942	public boolean isApplicable ( ) { return ( ( Director ) getDir ( ) ) . getDocument ( ) . getSampleSelection ( ) . size ( ) > _NUM ; }
31956	public static SM_SYSTEM_MESSAGE STR_MSG_USER_KICKED_BY_TIMEOUT ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
31964	public boolean shouldBypassFilter ( SecurityContext securityContext ) { return ( isTrusted ( securityContext . getUserDetails ( ) ) || trustInterceptor . verifyTrust ( securityContext ) ) ; }
32050	public static String [ ] readStrings ( ) { return readAllStrings ( ) ; }
32071	public boolean isApplicable ( ) { return getViewer ( ) instanceof MainViewer && getDir ( ) . getDocument ( ) . getNumberOfSamples ( ) > _NUM ; }
32073	private boolean isValidAnnouncement ( String name ) { return LegionConfig . ANNOUNCEMENT_PATTERN . matcher ( name . replaceAll ( _CHAR \\ r \\ n _CHAR , _CHAR _CHAR ) ) . matches ( ) ; }
32107	@ Override public byte [ ] asBytes ( int rowNumber ) { return ByteBuffer . allocate ( _NUM ) . putLong ( get ( rowNumber ) ) . array ( ) ; }
32109	public synchronized void forceUpdate ( ) { computeRuleResult ( ) ; fireUpdateReceivedEvent ( ) ; }
32169	public void removeHeader ( String header ) { clientHeaderMap . remove ( header ) ; }
32173	public MarketGetQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
32201	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bind_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
32218	public AudioMoveToAlbumQuery albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
32250	public static void wtf ( int level , String msg , Throwable throwable ) { log ( Log . ERROR , _NUM , _NULL , new ThrowableFormatter ( ) , _NULL , msg , throwable ) ; }
32263	@ Override public void endDocument ( ) throws SAXException { return ; }
32272	public final boolean isLocalApplication ( ) { return Host . LOCALHOST . equals ( getHost ( ) ) ; }
32299	protected boolean handleEnterKeyPress ( ) { return _BOOL ; }
32360	void ack ( ) { this . ackTimeoutRegistry . clear ( Topic . RPC , Actions . REQUEST , this . uid ) ; }
32369	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
32376	public static SM_SYSTEM_MESSAGE STR_MSG_WRONG_EXCHANGE_TARGET ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
32417	public void reset ( ) { localDeque . clear ( ) ; localDeque . push ( new FramePath ( ) ) ; }
32432	@ Override public boolean isDeprecated ( ) { return proto . getOptions ( ) . getDeprecated ( ) ; }
32448	@ Override public boolean isWorkspaceRoot ( File file ) { return FileAttributeProvider . getInstance ( ) . isFile ( new File ( file , _CHAR WORKSPACE _CHAR ) ) ; }
32506	public Builder columns ( int columns ) { this . columns = columns ; return this ; }
32537	private boolean isSuccessCode ( String responseCode ) { return responseCode . equalsIgnoreCase ( _CHAR default _CHAR ) || responseCode . startsWith ( _CHAR _NUM _CHAR ) ; }
32539	public AudioReorderQuery reorder ( UserActor actor , int audioId ) { return new AudioReorderQuery ( getClient ( ) , actor , audioId ) ; }
32558	public static String shortName ( Class < ? extends Model > model ) { if ( model == _NULL || home == _NULL ) { return X . EMPTY ; } return home . _shortName ( model ) ; }
32569	public static SM_SYSTEM_MESSAGE STR_FIELDARTIFACT_CANCELED ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
32572	public boolean isApplicable ( ) { return getViewer ( ) . getParentViewer ( ) != _NULL && getViewer ( ) . getParentViewer ( ) . hasComparableData ( ) && getViewer ( ) . getParentViewer ( ) . getSelectedNodes ( ) . size ( ) > _NUM ; }
32583	public boolean isApplicable ( ) { return _BOOL ; }
32584	public void advance ( ) { moveToNextIndex ( ) ; }
32594	public static DalvikThrowAnalysis v ( ) { return G . v ( ) . soot_dexpler_DalvikThrowAnalysis ( ) ; }
32603	public PhotosReorderPhotosQuery reorderPhotos ( UserActor actor , int photoId ) { return new PhotosReorderPhotosQuery ( getClient ( ) , actor , photoId ) ; }
32671	public Builder proxyPort ( int proxyPort ) { this . _proxyPort = proxyPort ; return this ; }
32687	public String toString ( ) { return cronExpression ; }
32696	public static ContainerDescription buildCoreAgentContainerDescription ( ) { ContainerDescription cd = new ContainerDescription ( ) ; cd . documentSelfLink = AGENT_CONTAINER_DESCRIPTION_LINK ; cd . name = AGENT_CONTAINER_NAME ; cd . image = getAgentImageNameAndVersion ( ) ; cd . publishAll = _BOOL ; cd . volumes = AGENT_CONTAINER_VOLUMES ; cd . restartPolicy = _CHAR always _CHAR ; return cd ; }
32723	@ Override protected synchronized void beforeWrite ( int n ) { count += n ; }
32757	public void load ( ) throws IOException { if ( myFilename == _NULL ) { throw new IOException ( _CHAR No filename specified for PreferenceStore . '' ) ; } FileInputStream in = new FileInputStream ( myFilename ) ; try { myProperties . load ( in ) ; myChanged = _BOOL ; } finally { in . close ( ) ; } }
32767	public void encoding ( ) { outputRes ( ) ; rdp_encoding ( ) ; }
32828	void assignCoordinateFromPadding ( ) { mCoordinate = mLayoutFromEnd ? mOrientationHelper . getEndAfterPadding ( ) : mOrientationHelper . getStartAfterPadding ( ) ; }
32831	public boolean isHidden ( final String bySelector , int timeout ) { return isConditionMet ( not ( visibilityOfElementLocated ( By . cssSelector ( bySelector ) ) ) , timeout ) ; }
32834	public static < T > Iterator < T > toIterator ( Collection < T > col ) { if ( col == _NULL ) return _NULL ; else return col . iterator ( ) ; }
32838	private static final String toXml ( Vector2 v , String name ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( _CHAR < _CHAR ) . append ( name ) . append ( _CHAR x =\ _CHAR _CHAR ) . append ( v . x ) . append ( _CHAR \ _CHAR y =\ _CHAR _CHAR ) . append ( v . y ) . append ( _CHAR \ _CHAR / > _CHAR ) ; return sb . toString ( ) ; }
32860	@ Override public synchronized void add ( Vertex v ) throws Exception { if ( UniqueVertices . containsKey ( v . getLabel ( ) ) ) return ; else super . add ( v ) ; UniqueVertices . put ( v . getLabel ( ) , v ) ; }
32862	public boolean isFull ( ) { return hi ( ) - lo ( ) == _NUM * S2 . M_PI ; }
32874	@ Override public void processingInstruction ( String target , String data ) throws SAXException { return ; }
33005	public void complainIfNotSupported ( final String name ) throws MathIllegalArgumentException { if ( ! isSupported ( name ) ) { throw new MathIllegalArgumentException ( LocalizedODEFormats . UNKNOWN_PARAMETER , name ) ; } }
33020	protected boolean checkIfHeaders ( HttpServletRequest request , HttpServletResponse response , WebResource resource ) throws IOException { return checkIfMatch ( request , response , resource ) && checkIfModifiedSince ( request , response , resource ) && checkIfNoneMatch ( request , response , resource ) && checkIfUnmodifiedSince ( request , response , resource ) ; }
33025	public Cursor fetch ( long id ) { Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_ID + _CHAR = _CHAR + id , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
33063	public boolean isPercentValue ( ) { return unitType == PERCENT ; }
33099	public static NodeList selectNodeList ( Node doc , String str , Node nsNode ) throws XPathException { SimpleNamespaceContext nsctx = new SimpleNamespaceContext ( nsNode ) ; return selectNodeList ( doc , str , nsctx ) ; }
33100	public boolean canCreateClients ( ) { return ( intCapInstance . canCreateInternalClients ( ) ) ; }
33138	@ Override public boolean valueIsAcceptable ( final String valueString , final LocalizableMessageBuilder invalidReason ) { for ( final V allowedValue : allowedValues ) { if ( allowedValue . toString ( ) . equalsIgnoreCase ( valueString ) ) { return _BOOL ; } } invalidReason . append ( ERR_MCARG_VALUE_NOT_ALLOWED . get ( longIdentifier , valueString ) ) ; return _BOOL ; }
33139	public boolean isBinaryOption ( String cmdName ) { return singleOptionNames . contains ( cmdName ) ; }
33150	public void startAutoBlurUpdate ( ) { blurController . startBlurAutoUpdate ( ) ; }
33165	public static PlaceholderFragment newInstance ( View . OnClickListener listener , int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; fragment . listener = listener ; return fragment ; }
33171	void endPaint ( ) { if ( isPaintingThread ( ) ) { PaintManager paintManager = _NULL ; synchronized ( this ) { if ( -- paintDepth == _NUM ) { paintManager = getPaintManager ( ) ; } } if ( paintManager != _NULL ) { paintManager . endPaint ( ) ; synchronized ( this ) { paintThread = _NULL ; } } } }
33185	private void prefixMask ( int prefix ) { int i ; for ( i = _NUM ; prefix > _NUM ; i ++ ) { this . prefixMask [ i ] = ( byte ) _NUM ; prefix -= _NUM ; } this . prefixMask [ i ] = ( byte ) ( _NUM << _NUM - prefix ) ; }
33219	private static boolean isLoanPresent ( final Loan loan , final Collection < Investment > investments ) { return investments . stream ( ) . filter ( _NULL ) . findFirst ( ) . isPresent ( ) ; }
33357	public static void assertDefaultCipherSuites ( String [ ] cipherSuites ) { assertValidCipherSuites ( CIPHER_SUITES , cipherSuites ) ; assertEquals ( CIPHER_SUITES_DEFAULT , Arrays . asList ( cipherSuites ) ) ; }
33364	public boolean isDifferential ( ) { return differential ; }
33365	public String toString ( ) { return getStringValue ( ) ; }
33366	public final boolean is_clearance_compensation_used ( ) { return compensated_clearance_class_no > _NUM ; }
33374	private static boolean isAlphanum ( char p_char ) { return ( isAlpha ( p_char ) || isDigit ( p_char ) ) ; }
33413	@ Override public void close ( ) throws IOException { super . close ( ) ; }
33439	public boolean isLocalSite ( SessionID sid ) { return isLocalSite ( sid . getSessionServerID ( ) ) ; }
33458	public static String toUTCDateFormat ( final Date date ) { return dateToString ( date , UTC_DATE_Z_FORMAT , UTC_TIME_ZONE ) ; }
33465	public boolean equals ( Timestamp theTimestamp ) { if ( theTimestamp == _NULL ) { return _BOOL ; } return ( this . getTime ( ) == theTimestamp . getTime ( ) ) && ( this . getNanos ( ) == theTimestamp . getNanos ( ) ) ; }
33529	private static boolean isIntentSafe ( PackageManager packageManager , Intent intent ) { return ! packageManager . queryIntentActivities ( intent , _NUM ) . isEmpty ( ) ; }
33539	public void handleFlushError ( Throwable ex ) { System . err . println ( ERR_LOGGER_ERROR_FLUSHING_BUFFER . get ( publisherConfigDN , stackTraceToSingleLineString ( ex ) ) ) ; }
33542	public synchronized boolean intersectsSet ( NSSet otherSet ) { for ( NSObject o : set ) { if ( otherSet . containsObject ( o ) ) return _BOOL ; } return _BOOL ; }
33543	public String toString ( ) { return ( toXML ( ) ) ; }
33550	public static boolean isIPv6Reference ( String address ) { return address . charAt ( _NUM ) == _CHAR && address . charAt ( address . length ( ) - _NUM ) == _CHAR ; }
33584	public static int countByUuid ( java . lang . String uuid ) { return getPersistence ( ) . countByUuid ( uuid ) ; }
33632	public List < Order > queryDeep ( String where , String ... selectionArg ) { Cursor cursor = db . rawQuery ( getSelectDeep ( ) + where , selectionArg ) ; return loadDeepAllAndCloseCursor ( cursor ) ; }
33700	@ Override public boolean isAccessReplicate ( ) { long replDelta = System . currentTimeMillis ( ) - getLastTimeReplicated ( ) ; if ( maxInactiveInterval >= _NUM && replDelta > ( maxInactiveInterval * _NUM ) ) { return _BOOL ; } return _BOOL ; }
33761	static Set requiredServices ( ) { return ( requiredServices ) ; }
33772	private String prepareSecretKey ( String secretKey ) { secretKey = secretKey . replaceAll ( _CHAR \\ s + _CHAR , _CHAR _CHAR ) ; if ( ( secretKey . length ( ) % _NUM ) != _NUM ) { secretKey = _CHAR _NUM _CHAR + secretKey ; } return secretKey ; }
33773	public boolean passed ( ) { return ! failed ( ) && ! skipped ( ) ; }
33779	public ByteBufferOutputStream append ( ByteBufferOutputStream buf ) { return append ( buf . buf , _NUM , buf . count ) ; }
33802	@ Override public final boolean equals ( PlaPointRational p_ob ) { return _BOOL ; }
33810	@ Deprecated protected InputStream renderXml ( String contextPath , WebResource resource , Source xsltSource ) throws IOException , ServletException { return renderXml ( contextPath , resource , xsltSource , _NULL ) ; }
33847	public boolean isDefaultValueMutable ( Field field ) { TypeRef type = field . getType ( ) ; if ( type . getCardinality ( ) == Cardinality . REPEATED ) { return _BOOL ; } switch ( type . getKind ( ) ) { case TYPE_MESSAGE : case TYPE_ENUM : return _BOOL ; default : return _BOOL ; } }
33851	public static boolean checkFileSize ( final ResourceType type , final long fileSize ) { return ( type . getMaxSize ( ) == _NULL || type . getMaxSize ( ) > fileSize ) ; }
33927	public Request createRequest ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . REQUEST ) ; if ( obj == _NULL ) { return new RequestImpl ( ) ; } else { return ( Request ) obj ; } }
33950	public OneTimeUse createOneTimeUse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ONE_TIME_USE ) ; if ( obj == _NULL ) { return new OneTimeUseImpl ( ) ; } else { return ( OneTimeUse ) obj ; } }
33958	private boolean isHHSign ( String str ) { boolean sign = _BOOL ; try { char r = ( char ) Integer . parseInt ( str , _NUM ) ; } catch ( NumberFormatException e ) { sign = _BOOL ; } return sign ; }
33979	public static String generateTOTP512 ( String key , String time , String returnDigits ) { return generateTOTP ( key , time , returnDigits , _CHAR HmacSHA512 _CHAR ) ; }
33985	public void accept ( final MethodVisitor mv ) { AbstractInsnNode insn = first ; while ( insn != _NULL ) { insn . accept ( mv ) ; insn = insn . next ; } }
34047	boolean isUserEnabled ( ) { return userEnabled ; }
34110	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR SubentriesControl ( visibility =\ _CHAR _CHAR ) ; buffer . append ( visibility ) ; buffer . append ( _CHAR \ _CHAR ) _CHAR ) ; }
34138	@ Override public void write ( int b ) { }
34215	@ Override public boolean accept ( File dir , String name ) { return pattern . matcher ( name ) . matches ( ) ; }
34257	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized E peek ( ) { try { return ( E ) elementData [ elementCount - _NUM ] ; } catch ( IndexOutOfBoundsException e ) { throw new EmptyStackException ( ) ; } }
34294	void reuse ( ) { pos = _NUM ; }
34321	protected boolean isBlockTag ( AttributeSet attr ) { Object o = attr . getAttribute ( StyleConstants . NameAttribute ) ; if ( o instanceof HTML . Tag ) { HTML . Tag name = ( HTML . Tag ) o ; return name . isBlock ( ) ; } return _BOOL ; }
34324	static boolean createFile ( File f ) throws IOException { if ( f != _NULL ) { File parent = f . getParentFile ( ) ; if ( ! parent . exists ( ) ) { parent . mkdirs ( ) ; } return f . createNewFile ( ) ; } return _BOOL ; }
34325	@ Override public String toString ( ) { StringBuilder risul = new StringBuilder ( _NUM ) ; risul . append ( _CHAR BoardPanel _CHAR ) ; risul . append ( _CHAR available object : itera_board _CHAR ) ; return risul . toString ( ) ; }
34347	public JsonValue read ( String id ) throws CoreTokenException { Token token = cts . read ( tokenIdFactory . generateTokenId ( id ) ) ; if ( token == _NULL ) { return _NULL ; } return tokenAdapter . fromToken ( token ) ; }
34412	public void error ( SourceLocator srcLctr , String msg , Exception e ) throws TransformerException { error ( srcLctr , msg , _NULL , e ) ; }
34416	public static SecurityOptions createJCEKSCertificateOptions ( String keystorePath , String keystorePwd , boolean enableSSL , boolean enableStartTLS , int sslPort , Collection < String > aliasesToUse ) { return createOptionsForCertificatType ( CertificateType . JCEKS , keystorePath , keystorePwd , enableSSL , enableStartTLS , sslPort , aliasesToUse ) ; }
34462	public final void popExpressionState ( ) { m_currentNodes . quickPop ( _NUM ) ; m_currentExpressionNodes . quickPop ( _NUM ) ; m_prefixResolvers . pop ( ) ; }
34479	private void writeObject ( java . io . ObjectOutputStream out ) throws NotSerializableException { throw new NotSerializableException ( _CHAR Not serializable . '' ) ; }
34488	public static Note natural ( int octave , Tone tone ) { Validate . isTrue ( octave != _NUM , _CHAR Octave can not be _NUM for naturals '' ) ; return new Note ( octave , tone , _BOOL ) ; }
34516	public boolean warningEnabled ( ) { return debug . warningEnabled ( ) ; }
34553	public String toString ( ) { return ( toXML ( ) ) ; }
34661	protected TreeSelectionListener createTreeSelectionListener ( ) { return getHandler ( ) ; }
34765	private static boolean startsWithStringArray ( String sArray [ ] , String value ) { if ( value == _NULL ) { return _BOOL ; } for ( int i = _NUM ; i < sArray . length ; i ++ ) { if ( value . startsWith ( sArray [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
34775	public static QueryExp eq ( ValueExp v1 , ValueExp v2 ) { return new BinaryRelQueryExp ( EQ , v1 , v2 ) ; }
34819	@ Override public MinguoDate dateEpochDay ( long epochDay ) { return new MinguoDate ( LocalDate . ofEpochDay ( epochDay ) ) ; }
34866	public boolean isAuthnContextMatching ( List requestedACClassRefs , String acClassRef , String comparison , String realm , String hostEntityID ) { Map authRefMap = getAuthRefMap ( realm , hostEntityID ) ; return SAML2Utils . isAuthnContextMatching ( requestedACClassRefs , acClassRef , comparison , authRefMap ) ; }
34868	public void error ( SourceLocator srcLctr , String msg , Object [ ] args ) throws TransformerException { error ( srcLctr , _NULL , _NULL , msg , args ) ; }
35006	static boolean isEncoded ( final ByteSequence value ) { try { decodeAuthPassword ( value . toString ( ) ) ; return _BOOL ; } catch ( final Exception e ) { return _BOOL ; } }
35013	protected void release ( DirContext context ) { }
35025	public void removeAttribute ( String attrName ) throws SSOException , SMSException { validateServiceInstance ( ) ; SMSEntry e = instance . getSMSEntry ( ) ; SMSUtils . removeAttribute ( e , attrName ) ; e . save ( token ) ; instance . refresh ( e ) ; }
35057	private boolean isLicenseAccepted ( ) { return Boolean . parseBoolean ( getContext ( ) . getRequestParameter ( SetupConstants . ACCEPT_LICENSE_PARAM ) ) ; }
35116	public void addAttribute ( String userName , String attributeName , String attributeValue ) { ScriptedIdentity amIdentity = getIdentity ( userName ) ; if ( amIdentity != _NULL ) { amIdentity . addAttribute ( attributeName , attributeValue ) ; amIdentity . store ( ) ; } }
35156	private int performDeleteOperation ( boolean authentication ) throws Exception { return LDAPDelete . mainDelete ( deleteArgs ( authentication ) , _BOOL , _NULL , _NULL ) ; }
35189	final boolean isOwnedBy ( AbstractQueuedSynchronizer sync ) { return sync == AbstractQueuedSynchronizer . this ; }
35214	private void raiseErrorEvent ( int dialogTimeoutError ) { raiseErrorEvent ( dialogTimeoutError , _NULL ) ; }
35216	public static void clear ( ) { sigHash . clear ( ) ; encHash . clear ( ) ; }
35221	public boolean isAssigned ( ) { return this . isAssigned ; }
35235	@ Override public String toString ( ) { int len = length ( ) ; char [ ] buf = new char [ len ] ; getChars ( _NUM , len , buf , _NUM ) ; return new String ( buf ) ; }
35244	public static Builder newBuilder ( AclEntry entry ) { return new Builder ( entry . type , entry . who , entry . perms , entry . flags ) ; }
35278	public boolean isColor ( ) { return isColor ; }
35281	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
35326	public static long readUINT32 ( RandomAccessFile raf ) throws IOException { long result = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) { result <<= _NUM ; result |= ( long ) raf . read ( ) ; } return result ; }
35358	public Iterator < E > iterator ( ) { return m . navigableKeySet ( ) . iterator ( ) ; }
35383	public static HierarchyListener remove ( HierarchyListener l , HierarchyListener oldl ) { return ( HierarchyListener ) removeInternal ( l , oldl ) ; }
35444	public static IngredientsFragment newInstance ( Recipe recipe , int sectionNumber ) { IngredientsFragment fragment = new IngredientsFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
35456	private static boolean matchBaseAndScopeAndFilter ( SearchOperation searchOp , Entry entry ) throws DirectoryException { return entry . matchesBaseAndScope ( searchOp . getBaseDN ( ) , searchOp . getScope ( ) ) && searchOp . getFilter ( ) . matchesEntry ( entry ) ; }
35477	private final boolean shouldCollectText ( ) { return collectText [ stackTop ] ; }
35480	public DetectorResult detect ( ) throws NotFoundException , FormatException { return detect ( _NULL ) ; }
35483	@ NonNull public static Interpolator rasterize ( float [ ] raster ) { return new RasterizeInterpolator ( raster ) ; }
35484	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( this ) ; }
35535	public void reset ( ) { token = _NULL ; status = S_INIT ; handlerStatusStack = _NULL ; }
35652	public String toLocalizedPattern ( ) { return convertPattern ( pattern , PATTERN_CHARS , formatData . getLocalPatternChars ( ) , _BOOL ) ; }
35655	public String toPattern ( ) { return pattern ; }
35678	public AppLauncher env ( String name , String value ) { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value _CHAR ) ; } this . env . put ( name , value ) ; return this ; }
35681	private void allowAccessAndTerminateProcess ( RadiusResponse response , ContextHolder holder ) throws RadiusProcessingException { response . setResponsePacket ( new AccessAccept ( ) ) ; response . setUniversalId ( holder . getUniversalId ( ) ) ; terminateAuthnProcess ( holder ) ; }
35745	public static Attribute create ( AttributeType attributeType , ByteString value ) { return create ( attributeType , attributeType . getNameOrOID ( ) , value ) ; }
35809	private static byte [ ] readFileBytes ( File file ) throws IOException { FileInputStream fis = new FileInputStream ( file ) ; return readInputStreamBytes ( fis , _BOOL ) ; }
35851	public static void registerShortCircuit ( OperationType operation , String section , int resultCode ) { shortCircuits . put ( operation + _CHAR / _CHAR + section . toLowerCase ( ) , resultCode ) ; }
35868	public Result add ( AddRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . add ( request ) ; }
35889	public static int countByField2 ( boolean field2 ) { return getPersistence ( ) . countByField2 ( field2 ) ; }
35913	public boolean isServerTransaction ( ) { return m_isServerTransaction ; }
35919	public Principal localPrincipal ( ) { return ! localCertificates . isEmpty ( ) ? ( ( X509Certificate ) localCertificates . get ( _NUM ) ) . getSubjectX500Principal ( ) : _NULL ; }
35977	public static < T > Promise < T , ResourceException > generateBadRequestException ( ) { return generateBadRequestException ( _CHAR Bad request . '' ) ; }
36024	public void loadLocal ( final int local ) { loadInsn ( getLocalType ( local ) , local ) ; }
36029	private static void checkRange ( int fromIndex , int toIndex ) { if ( fromIndex < _NUM ) throw new IndexOutOfBoundsException ( _CHAR fromIndex < _NUM : _CHAR + fromIndex ) ; if ( toIndex < _NUM ) throw new IndexOutOfBoundsException ( _CHAR toIndex < _NUM : _CHAR + toIndex ) ; if ( fromIndex > toIndex ) throw new IndexOutOfBoundsException ( _CHAR fromIndex : _CHAR + fromIndex + _CHAR > toIndex : _CHAR + toIndex ) ; }
36166	public int size ( ) { return list . size ( ) ; }
36183	private void assertQualifierNotExisting ( String qualifierName ) throws XMPException { if ( ! XMPConst . ARRAY_ITEM_NAME . equals ( qualifierName ) && findQualifierByName ( qualifierName ) != _NULL ) { throw new XMPException ( _CHAR Duplicate _CHAR_CHAR_CHAR qualifier _CHAR , XMPError . BADXMP ) ; } }
36185	public static final ParsedQuery createTestParsedQueryBulkData ( ) { Query query = new Query ( ) ; query . setWhere ( _CHAR field1 = _CHAR _CHAR ) ; query . setDatabase ( Fixtures . DB ) ; query . setTable ( _CHAR mytable _CHAR ) ; WhereClause whereClause = new WhereClause ( query . getWhere ( ) ) ; return new ParsedQuery ( query , whereClause , createTestIndexWithBulkDataHit ( ) ) ; }
36189	public void removeSelectionPath ( TreePath path ) { this . getSelectionModel ( ) . removeSelectionPath ( path ) ; }
36221	public static Attribute empty ( AttributeType attributeType , String name ) { return AttributeBuilder . create ( attributeType , name , Collections . < ByteString > emptySet ( ) ) ; }
36272	@ Override public void sendError ( int status ) throws IOException { sendError ( status , _NULL ) ; }
36283	LogExtracts tryParse ( String message ) { for ( Extractor extractor : Extractor . values ( ) ) { Matcher matcher = extractor . newMatcher ( message ) ; if ( matcher . matches ( ) ) { return extract ( extractor , matcher ) ; } } return _NULL ; }
36289	void replace ( DocumentFilter . FilterBypass fb , int offset , int length , String text , AttributeSet attrs ) throws BadLocationException { ReplaceHolder rh = getReplaceHolder ( fb , offset , length , text , attrs ) ; replace ( rh ) ; }
36332	private void assertTokenIsValid ( AccessTokenVerifier . TokenState headerToken , AccessTokenVerifier . TokenState queryToken ) throws InvalidTokenException { if ( ! headerToken . isValid ( ) && ! queryToken . isValid ( ) ) { logger . error ( _CHAR Access Token not valid _CHAR ) ; throw new InvalidTokenException ( ) ; } }
36334	public static final ParsedQuery createTestParsedQuery ( ) { Query query = createTestQuery ( ) ; WhereClause whereClause = new WhereClause ( query . getWhere ( ) ) ; return new ParsedQuery ( query , whereClause , createTestIndexOneField ( ) ) ; }
36415	public void addChangeListener ( ChangeListener l ) { listenerList . add ( ChangeListener . class , l ) ; }
36416	private void validateResponseBody ( TesterAjpMessage message , String expectedBody ) throws Exception { String body = extractResponseBody ( message ) ; Assert . assertTrue ( body . contains ( expectedBody ) ) ; }
36419	@ Override public void write ( byte [ ] b , int off , int len ) { }
36438	public void checkIsoConformance ( Object obj , IsoKey key , PdfResources resources ) { }
36440	public static MouseMotionListener remove ( MouseMotionListener l , MouseMotionListener oldl ) { return ( MouseMotionListener ) removeInternal ( l , oldl ) ; }
36453	private < T > void addModification ( PropertyEditorModification < T > mod ) { mods . add ( mod ) ; }
36478	public boolean exists ( ) { SecurityManager security = System . getSecurityManager ( ) ; if ( security != _NULL ) { security . checkRead ( path ) ; } if ( isInvalid ( ) ) { return _BOOL ; } return ( ( fs . getBooleanAttributes ( this ) & FileSystem . BA_EXISTS ) != _NUM ) ; }
36495	@ Override public < T > List < T > dynamicQuery ( DynamicQuery dynamicQuery ) { return fooPersistence . findWithDynamicQuery ( dynamicQuery ) ; }
36540	public X509Extensions generate ( ) { return new X509Extensions ( extOrdering , extensions ) ; }
36564	private void checkServerIsRunning ( ) throws InitializationException { if ( checkIfServerIsRunning && DirectoryServer . isRunning ( ) ) { throw new InitializationException ( ERR_DIRCFG_SERVER_ALREADY_RUNNING . get ( ) ) ; } }
36648	void delete ( Attribute attr , CSN csn ) { AttributeType attrType = attr . getAttributeDescription ( ) . getAttributeType ( ) ; for ( ByteString val : attr ) { delete ( val , attrType , csn ) ; } }
36716	public String encodedUsername ( ) { if ( username . isEmpty ( ) ) return _CHAR _CHAR ; int usernameStart = scheme . length ( ) + _NUM ; int usernameEnd = delimiterOffset ( url , usernameStart , url . length ( ) , _CHAR : @ _CHAR ) ; return url . substring ( usernameStart , usernameEnd ) ; }
36719	@ Override public String [ ] findApplicationListeners ( ) { return applicationListeners ; }
36754	public static Attribute empty ( AttributeType attributeType ) { return empty ( attributeType , attributeType . getNameOrOID ( ) ) ; }
36767	public void addChangeListener ( ChangeListener l ) { listenerList . add ( ChangeListener . class , l ) ; }
36807	public void removeAttributeNS ( String namespaceURI , String localName ) { removeAttribute ( localName ) ; }
36828	public boolean isAuthenticated ( ) { return isAuthenticated ; }
36849	private boolean compareStrings ( String one , String two ) { if ( one == _NULL && two == _NULL ) { return _BOOL ; } if ( one == _NULL || two == _NULL ) { return _BOOL ; } return one . equals ( two ) ; }
36863	public void configChanged ( ConfigurationActionEvent e ) { if ( SAMLUtilsCommon . debug . messageEnabled ( ) ) { SAMLUtilsCommon . debug . message ( _CHAR SAMLServiceManager : configChanged _CHAR ) ; } setValues ( ) ; }
36893	@ Override public void publish ( final LogRecord logRecord ) { if ( ! isLoggable ( logRecord ) ) { return ; } String formatted = getFormatter ( ) . format ( logRecord ) ; synchronized ( logRecords ) { logRecords . add ( formatted ) ; if ( logRecords . size ( ) >= bufferSize ) { nonBlockingFlush ( ) ; } } }
36906	public boolean isDisableReplicationSubcommand ( ) { return isSubcommand ( DISABLE_REPLICATION_SUBCMD_NAME ) ; }
36909	public static PlaceholderFragment newInstance ( int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
36915	Clause buildNumericValueClause ( String propTable , String operand , String placeholder ) { return where ( propTable + _CHAR . proptype = _CHAR _CHAR ) . or ( propTable + _CHAR . proptype = _CHAR _CHAR ) . and ( _CHAR CAST ( _CHAR + propTable + _CHAR . propvalue AS DECIMAL ) _CHAR + operand + _CHAR $ { _CHAR + placeholder + _CHAR } _CHAR ) ; }
36926	public static String DNtoName ( String dn ) { return DNtoName ( dn , _BOOL ) ; }
36959	public boolean equals ( Object o ) { if ( o instanceof DSAMERole ) { DSAMERole role = ( DSAMERole ) o ; return ( subjectRoles . equals ( role . subjectRoles ) ) ; } return ( _BOOL ) ; }
36965	private void selectRadioButton ( ActionEvent event , boolean next ) { Object eventSrc = event . getSource ( ) ; if ( ! isValidRadioButtonObj ( eventSrc ) ) return ; ButtonGroupInfo btnGroupInfo = new ButtonGroupInfo ( ( JRadioButton ) eventSrc ) ; btnGroupInfo . selectNewButton ( next ) ; }
37005	public boolean failed ( ) { return ( failure != _NULL ) ; }
37012	private static boolean isTokenChar ( char c ) { return ( ( c > _NUM ) && ( c < _NUM ) ) && ( TSPECIALS . indexOf ( c ) < _NUM ) ; }
37046	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
37061	public String toString ( ) { return ( _CHAR WindowsDesktopSSOPrincipal : _CHAR + name ) ; }
37076	@ NonNull public final Agera take ( long limit ) { return new AgeraTake ( this , limit ) ; }
37117	public void valueChanged ( TreeSelectionEvent e ) { firePropertyChange ( AccessibleContext . ACCESSIBLE_SELECTION_PROPERTY , Boolean . valueOf ( _BOOL ) , Boolean . valueOf ( _BOOL ) ) ; }
37142	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getContext ( ) , getRequest ( ) , getResponse ( ) ) ; }
37150	private void failIfDeleted ( ) { if ( isDeleted ( ) ) { throw new IllegalStateException ( _CHAR Operation failed : element is deleted _CHAR ) ; } }
37165	@ Override public void onResume ( ) { mWebView . onResume ( ) ; super . onResume ( ) ; }
37182	private static String generateEncryptedID ( SessionServerConfig serverConfig ) { String r = Long . toHexString ( secureRandom . getInstanceForCurrentThread ( ) . nextLong ( ) ) ; return AccessController . doPrivileged ( new EncodeAction ( r + _CHAR @ _CHAR + serverConfig . getPrimaryServerID ( ) , Crypt . getHardcodedKeyEncryptor ( ) ) ) ; }
37236	public static byte [ ] createByteArray ( int size , String data ) { byte [ ] byteArray = new byte [ size ] ; for ( int i = _NUM ; i < size ; i ++ ) { byteArray [ i ] = Byte . parseByte ( data , _NUM ) ; } return byteArray ; }
37273	@ Override public void retry ( VolleyError error ) throws VolleyError { mCurrentRetryCount ++ ; mCurrentTimeoutMs += ( mCurrentTimeoutMs * mBackoffMultiplier ) ; if ( ! hasAttemptRemaining ( ) ) { throw error ; } }
37362	public void handleToken ( Segment seg , byte id , int offset , int length , TokenMarker . LineContext context ) { Token token = createToken ( id , offset , length , context ) ; if ( token != _NULL ) addToken ( token , context ) ; }
37411	public static WindowFocusListener remove ( WindowFocusListener l , WindowFocusListener oldl ) { return ( WindowFocusListener ) removeInternal ( l , oldl ) ; }
37419	public static void startupDelay ( ) { sleep ( _NUM ) ; }
37420	public boolean contains_plane ( String p_net_name ) { for ( DsnLayer curr_layer : arr ) { if ( ! curr_layer . is_signal ) { if ( curr_layer . net_names . contains ( p_net_name ) ) { return _BOOL ; } } } return _BOOL ; }
37475	public void addFocusListener ( FocusListener l ) { getTextComponent ( ) . addFocusListener ( l ) ; }
37499	public void append ( char digit ) { if ( count == digits . length ) { char [ ] data = new char [ count + _NUM ] ; System . arraycopy ( digits , _NUM , data , _NUM , count ) ; digits = data ; } digits [ count ++ ] = digit ; }
37501	@ Override public < T > List < T > dynamicQuery ( DynamicQuery dynamicQuery ) { return fooPersistence . findWithDynamicQuery ( dynamicQuery ) ; }
37520	@ Override public Dialog onCreateDialog ( Bundle savedInstanceState ) { Dialog dialog = super . onCreateDialog ( savedInstanceState ) ; dialog . requestWindowFeature ( Window . FEATURE_NO_TITLE ) ; dialog . setCanceledOnTouchOutside ( _BOOL ) ; return dialog ; }
37634	public static byte [ ] parseHexBinary ( String lexicalXSDHexBinary ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseHexBinary ( lexicalXSDHexBinary ) ; }
37680	public Object command ( ActionRequest request ) throws ResourceException { ODatabaseDocumentTx db = getConnection ( ) ; try { return commands . query ( request . getResourcePath ( ) , request , db ) ; } finally { if ( db != _NULL ) { db . close ( ) ; } } }
37732	public Dimension maximumLayoutSize ( Container target ) { return new Dimension ( Integer . MAX_VALUE , Integer . MAX_VALUE ) ; }
37765	public boolean cover ( DN baseDN , CSN csn ) { final ServerState state = list . get ( baseDN ) ; return state != _NULL && state . cover ( csn ) ; }
37822	public void run ( ) { try { verify ( ) ; } catch ( Exception e ) { Debug . error ( name + _CHAR : Error running verifier thread _CHAR , e ) ; } verificationOn = _BOOL ; }
37826	public void addChangeListener ( ChangeListener l ) { listenerList . add ( ChangeListener . class , l ) ; }
37855	public void print ( char [ ] charArray ) { print ( new String ( charArray , _NUM , charArray . length ) ) ; }
37862	public static void error ( Level level , String msgid , String [ ] data ) { if ( ( logger != _NULL ) && logger . isErrorLoggable ( level ) ) { try { logger . error ( level , msgid , data , _NULL ) ; } catch ( LogException le ) { debug . error ( _CHAR LogUtil . error : _CHAR , le ) ; } } }
37881	private void writeObject ( java . io . ObjectOutputStream out ) throws NotSerializableException { throw new NotSerializableException ( _CHAR Not serializable . '' ) ; }
37904	public static AttributeDescription parseAttrDescription ( String attrDescr ) { AttributeDescription result = AttributeDescription . valueOf ( attrDescr ) ; if ( result . getAttributeType ( ) . getSyntax ( ) . isBEREncodingRequired ( ) ) { result = result . withOption ( _CHAR binary _CHAR ) ; } return result ; }
37918	public int lower_y_value ( int p_x ) { int result = Math . max ( oct_ly , oct_llx - p_x ) ; return Math . max ( result , p_x - oct_lrx ) ; }
37946	public boolean isSelected ( ButtonModel m ) { return ( m == selection ) ; }
38002	protected static Digester createDigester ( String contextClassName ) { Digester digester = new Digester ( ) ; digester . setValidating ( _BOOL ) ; digester . addObjectCreate ( _CHAR Context _CHAR , contextClassName , _CHAR className _CHAR ) ; digester . addSetProperties ( _CHAR Context _CHAR ) ; return ( digester ) ; }
38015	public String debugDump ( int indent ) { return super . debugDump ( indent ) ; }
38091	public Iterator < E > iterator ( ) { return m . navigableKeySet ( ) . iterator ( ) ; }
38141	@ Override public < T > java . util . List < T > dynamicQuery ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQuery ( dynamicQuery ) ; }
38201	public Iterator < E > iterator ( ) { return m . navigableKeySet ( ) . iterator ( ) ; }
38239	public boolean isReadOnly ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . readOnly ; }
38265	public void monitorEnter ( ) { mv . visitInsn ( Opcodes . MONITORENTER ) ; }
38291	protected void readDataFromSocket ( SelectionKey key ) throws Exception { NioReplicationTask task = ( NioReplicationTask ) getTaskPool ( ) . getRxTask ( ) ; if ( task == _NULL ) { if ( log . isDebugEnabled ( ) ) log . debug ( _CHAR No TcpReplicationThread available _CHAR ) ; } else { task . serviceChannel ( key ) ; getExecutor ( ) . execute ( task ) ; } }
38327	public Set < String > searchReferral ( Subject adminSubject , String realm , String filter , int numOfEntries , boolean sortResults , boolean ascendingOrder ) throws EntitlementException { return search ( adminSubject , realm , filter , numOfEntries , sortResults , ascendingOrder , REFERRAL_STORE ) ; }
38373	public PermissionCollection newPermissionCollection ( ) { return new PropertyPermissionCollection ( ) ; }
38399	public static void deregisterShortCircuit ( OperationType operation , String section ) { shortCircuits . remove ( operation + _CHAR / _CHAR + section . toLowerCase ( ) ) ; }
38422	@ Override public void notifyAuthDataChanged ( ) { notifyAuthDataChanged ( _NULL ) ; }
38433	@ Override public void close ( ) throws IOException { eof = _BOOL ; position = _NUM ; mark =- _NUM ; }
38438	public BigInteger abs ( ) { return ( signum >= _NUM ? this : this . negate ( ) ) ; }
38552	public void error ( SourceLocator srcLctr , String msg ) throws TransformerException { error ( srcLctr , _NULL , _NULL , msg , _NULL ) ; }
38564	public static boolean isXMLNSDecl ( String attRawName ) { return ( attRawName . startsWith ( _CHAR xmlns _CHAR ) && ( attRawName . equals ( _CHAR xmlns _CHAR ) || attRawName . startsWith ( _CHAR xmlns : _CHAR ) ) ) ; }
38566	public String toString ( ) { return omniAreaOpenTag + latitudeOpenTag + latitude + latitudeCloseTag + longitudeOpenTag + longitude + longitudeCloseTag + userInputOpenTag + userInput + userInputCloseTag + proximityDistanceOpenTag + proximityDistance + proximityDistanceCloseTag + omniAreaCloseTag ; }
38676	protected void notifySchemaSelectionListeners ( Object schemaElement ) { for ( SchemaElementSelectionListener listener : listeners ) { listener . schemaElementSelected ( new SchemaElementSelectionEvent ( this , schemaElement ) ) ; } }
38699	public void clearGraceLoginTimes ( ) { logger . trace ( _CHAR Clearing grace login times for user % s '' , userDNString ) ; List < Long > graceTimes = getGraceLoginTimes ( ) ; if ( ! graceTimes . isEmpty ( ) ) { graceTimes . clear ( ) ; clearAttribute ( OP_ATTR_PWPOLICY_GRACE_LOGIN_TIME ) ; } }
38700	public void stop ( ) { write . lock ( ) ; try { sorted . clear ( ) ; for ( Route route : routes . values ( ) ) { route . destroy ( ) ; } routes . clear ( ) ; } finally { write . unlock ( ) ; } }
38706	public Status createStatus ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS ) ; if ( object == _NULL ) { return new StatusImpl ( ) ; } else { return ( Status ) object ; } }
38772	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , java . io . NotActiveException , ClassNotFoundException { thisX500Name = new X500Name ( ( byte [ ] ) s . readObject ( ) ) ; }
38804	public boolean cover ( CSN covered ) { final CSN csn = this . serverIdToCSN . get ( covered . getServerId ( ) ) ; return csn != _NULL && ! csn . isOlderThan ( covered ) ; }
38808	public void removeSelectionPaths ( TreePath [ ] paths ) { this . getSelectionModel ( ) . removeSelectionPaths ( paths ) ; }
38894	public void addTreeSelectionListener ( TreeSelectionListener tsl ) { listenerList . add ( TreeSelectionListener . class , tsl ) ; if ( listenerList . getListenerCount ( TreeSelectionListener . class ) != _NUM && selectionRedirector == _NULL ) { selectionRedirector = new TreeSelectionRedirector ( ) ; selectionModel . addTreeSelectionListener ( selectionRedirector ) ; } }
38954	static final int advanceProbe ( int probe ) { probe ^= probe << _NUM ; probe ^= probe >> > _NUM ; probe ^= probe << _NUM ; UNSAFE . putInt ( Thread . currentThread ( ) , PROBE , probe ) ; return probe ; }
38966	private boolean isEqual ( String str1 , String str2 ) { return MessageDigest . isEqual ( str1 . getBytes ( ) , str2 . getBytes ( ) ) ; }
38999	void ensureCapacity ( final int size ) { if ( _length + size <= _data . length ) { return ; } final int length1 = _NUM * _data . length ; final int length2 = _length + size ; _data = Arrays . copyOf ( _data , length1 > length2 ? length1 : length2 ) ; }
39016	@ Override public < T > List < T > dynamicQuery ( DynamicQuery dynamicQuery ) { return fooPersistence . findWithDynamicQuery ( dynamicQuery ) ; }
39112	public V remove ( Object key ) { Node < K , V > e ; return ( e = removeNode ( hash ( key ) , key , _NULL , _BOOL , _BOOL ) ) == _NULL ? _NULL : e . value ; }
39114	void shutdown ( ) { }
39124	public final double distance ( ) { return Math . sqrt ( distance_square ( ) ) ; }
39140	public static < T > java . util . List < T > dynamicQuery ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return getService ( ) . dynamicQuery ( dynamicQuery ) ; }
39236	protected void shiftYOriginBy ( int offset ) { yOrigin += offset ; }
39262	public E remove ( ) { return removeFirst ( ) ; }
39274	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
39308	private void reinitializeAnimationArrays ( ) { final int childCount = mWorkspace . getChildCount ( ) ; if ( mLastChildCount == childCount ) return ; mOldBackgroundAlphas = new float [ childCount ] ; mOldAlphas = new float [ childCount ] ; mNewBackgroundAlphas = new float [ childCount ] ; mNewAlphas = new float [ childCount ] ; }
39322	private ZonedDateTime resolveInstant ( LocalDateTime newDateTime ) { return ofInstant ( newDateTime , offset , zone ) ; }
39353	private boolean isSchemaFileDefined ( String schemaFile ) { try ( LDIFReader reader = new LDIFReader ( new LDIFImportConfig ( schemaFile ) ) ) { return reader . readEntry ( ) != _NULL ; } catch ( Throwable t ) { return _BOOL ; } }
39354	public static String addSlashToBeginning ( String string ) { if ( string == _NULL || string . charAt ( _NUM ) == _CHAR || Pattern . matches ( Constants . URL_REGEX , string ) ) { return string ; } return _CHAR / _CHAR . concat ( string ) ; }
39408	@ SuppressWarnings ( _CHAR deprecation _CHAR ) @ Deprecated public final void resume ( ) { synchronized ( threadRefs ) { for ( Thread thread : threads ) { thread . resume ( ) ; } } synchronized ( groups ) { for ( ThreadGroup group : groups ) { group . resume ( ) ; } } }
39428	public T eval ( ) { return eval ( bindings ( ) ) ; }
39443	public void logEvent ( String eventName , Bundle parameters ) { logEvent ( eventName , _NULL , parameters , _BOOL ) ; }
39456	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
39468	public void RemoveAllNoClear ( ) { if ( _NULL == m_map ) return ; m_firstFree = _NUM ; }
39483	public static ActionListener remove ( ActionListener l , ActionListener oldl ) { return ( ActionListener ) removeInternal ( l , oldl ) ; }
39542	public org . omg . CORBA . TypeCode _type ( ) { return ORB . init ( ) . get_primitive_tc ( TCKind . tk_float ) ; }
39568	public static String encodeBytes ( byte [ ] source , int off , int len ) { return encodeBytes ( source , off , len , NO_OPTIONS ) ; }
39576	public static Context pop ( ) { return stack . get ( ) . pop ( ) ; }
39590	public void handleToken ( Segment seg , byte id , int offset , int length , TokenMarker . LineContext context ) { }
39679	public static RecipeFragment newInstance ( Recipe recipe , int sectionNumber ) { RecipeFragment fragment = new RecipeFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
39720	protected void paintComponent ( Graphics g ) { if ( isDragging ) { danger = _BOOL ; } super . paintComponent ( g ) ; }
39753	public void doGroupAction ( Object obj ) { if ( target != _NULL ) { target . doGroupAction ( obj ) ; } }
39884	public void addActionListener ( ActionListener l ) { listenerList . add ( ActionListener . class , l ) ; }
39891	public static SchemaElement updateSchemaElementExtraPropertySingleValue ( ServerContext serverContext , SchemaElement element , String property , String value ) { List < String > values = value != _NULL ? Arrays . asList ( value ) : _NULL ; return updateSchemaElementExtraPropertyMultiplesValues ( serverContext , element , property , values ) ; }
39978	public final void init ( AlgorithmParameterSpec genParamSpec , SecureRandom random ) throws InvalidAlgorithmParameterException { paramGenSpi . engineInit ( genParamSpec , random ) ; }
39986	public Builder withMessageDispatcherConcurrency ( int concurrency ) { config . setMessageDispatcherConcurrency ( concurrency ) ; return this ; }
39990	@ Deprecated protected void removeListeners ( ) { if ( propertyChangeListener != _NULL ) { comboBox . removePropertyChangeListener ( propertyChangeListener ) ; } }
40044	static String convertRealmPathToDN ( String realmPath ) { return coreWrapper . convertRealmNameToOrgName ( realmPath ) ; }
40048	public int size ( ) { if ( arrayTable == _NULL ) { return _NUM ; } return arrayTable . size ( ) ; }
40119	public boolean accept ( File file ) { return accept ( file . getParentFile ( ) , file . getName ( ) ) ; }
40123	public boolean isServerTransaction ( ) { return m_isServerTransaction ; }
40126	public void close ( ) throws IOException { if ( ! this . closed ) { this . closed = _BOOL ; this . out . flush ( ) ; } }
40140	public Builder addAction ( String actionName , Boolean defaultValue ) { actions . put ( actionName , defaultValue ) ; return this ; }
40150	@ TargetApi ( _NUM ) public static boolean hasTranslucentNavigation ( @ Nullable final Activity activity ) { if ( _NULL == activity ) { return _BOOL ; } if ( Build . VERSION . SDK_INT >= _NUM ) { return ( ( activity . getWindow ( ) . getAttributes ( ) . flags & LayoutParams . FLAG_TRANSLUCENT_NAVIGATION ) == LayoutParams . FLAG_TRANSLUCENT_NAVIGATION ) ; } else { return _BOOL ; } }
40163	@ NonNull public final Agera observeOn ( @ NonNull Executor executor , boolean coalesce ) { return new AgeraObserveOnExecutor ( this , executor , coalesce ) ; }
40230	public CompareResult compare ( CompareRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . compare ( request ) ; }
40258	public void addPagedListResponseFactoryImports ( ModelTypeTable typeTable ) { }
40262	public void addListener ( ServiceListener listener ) { serviceConfigManager . addListener ( listener ) ; }
40285	public static Permission decode ( String accessType , String rights ) throws AciException { return new Permission ( accessType , rights ) ; }
40295	public boolean isPathSelected ( TreePath path ) { return getSelectionModel ( ) . isPathSelected ( path ) ; }
40389	private void maybeMakeButtonOpaque ( JComponent c ) { Object opaque = UIManager . get ( _CHAR SplitPane . oneTouchButtonsOpaque _CHAR ) ; if ( opaque != _NULL ) { c . setOpaque ( ( ( Boolean ) opaque ) . booleanValue ( ) ) ; } }
40404	public static void resetShutdownCalled ( ) { shutdownCalled = _BOOL ; }
40418	public synchronized StringBuffer append ( char [ ] chars , int start , int length ) { append0 ( chars , start , length ) ; return this ; }
40499	public void addConfiguredRedirector ( RedirectorElement redirectorElement ) { if ( this . redirectorElement != _NULL ) { throw new BuildException ( _CHAR Can not have > _NUM nested < redirector > s _CHAR ) ; } else { this . redirectorElement = redirectorElement ; } }
40515	public void close ( ) throws IOException { if ( ! closed ) { super . close ( ) ; closed = _BOOL ; } }
40519	public boolean isSpecified ( String uri , String localName ) { int index = getIndex ( uri , localName ) ; if ( index < _NUM ) throw new IllegalArgumentException ( _CHAR No such attribute : local = _CHAR + localName + _CHAR , namespace = _CHAR + uri ) ; return specified [ index ] ; }
40520	public boolean isDomainPattern ( ) { return _domain_pattern ; }
40534	private static void trace ( String msg ) { if ( debug ) { System . err . println ( _CHAR # # # RowSets : _CHAR + msg ) ; } }
40559	@ Override public HijrahDate dateEpochDay ( long epochDay ) { return HijrahDate . ofEpochDay ( this , epochDay ) ; }
40599	public boolean add ( BrdViaInfo p_via_info ) { if ( name_exists ( p_via_info . get_name ( ) ) ) return _BOOL ; vinfo_list . add ( p_via_info ) ; return _BOOL ; }
40604	public boolean validate ( String value , String rule ) { return validate ( value ) ; }
40713	public static int readUINT16 ( InputStream stream ) throws IOException { int result = stream . read ( ) ; result |= stream . read ( ) << _NUM ; return result ; }
40781	@ Override public Future < Integer > read ( ByteBuffer dst ) { if ( ! handshakeComplete ) { throw new IllegalStateException ( sm . getString ( _CHAR channel . nio . ssl . incompleteHandshake _CHAR ) ) ; } return new FutureRead ( dst ) ; }
40824	public static boolean isFullyAuthenticated ( ) throws IOException { FullyAuthenticatedFaceletsTag authenticatedTag = new FullyAuthenticatedFaceletsTag ( ) ; return authenticatedTag . authorize ( ) ; }
40862	public Result createResult ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESULT ) ; if ( object == _NULL ) { return new ResultImpl ( ) ; } else { return ( Result ) object ; } }
40902	public final CertPathBuilderResult build ( CertPathParameters params ) throws CertPathBuilderException , InvalidAlgorithmParameterException { return builderSpi . engineBuild ( params ) ; }
40909	public static DN create ( ManagedObjectPath < ? , ? > path , RelationDefinition < ? , ? > relation ) { DN dn = path . toDN ( ) ; LDAPProfile profile = LDAPProfile . getInstance ( ) ; DN localName = DN . valueOf ( profile . getRelationRDNSequence ( relation ) ) ; return dn . child ( localName ) ; }
40954	public static void write ( File file , NSObject root ) throws IOException { OutputStream out = new FileOutputStream ( file ) ; write ( out , root ) ; out . close ( ) ; }
40996	public void drawFrame ( int textureId , float [ ] texMatrix ) { mProgram . draw ( GlUtil . IDENTITY_MATRIX , mRectDrawable . getVertexArray ( ) , _NUM , mRectDrawable . getVertexCount ( ) , mRectDrawable . getCoordsPerVertex ( ) , mRectDrawable . getVertexStride ( ) , texMatrix , mRectDrawable . getTexCoordArray ( ) , textureId , mRectDrawable . getTexCoordStride ( ) ) ; }
41004	private ResourceIndex refreshResourceIndexFromDataStore ( ServiceType resourceType ) throws PolicyException { ResourceIndex resourceIndex = getResourceIndexFromDataStore ( resourceType ) ; resourceIndices . put ( resourceType . getName ( ) , resourceIndex ) ; return resourceIndex ; }
41070	public static double radiansToDistance ( double radians ) throws TurfException { return radiansToDistance ( radians , TurfConstants . UNIT_DEFAULT ) ; }
41092	protected void unregisterListeners ( ) { component . removeMouseListener ( this ) ; component . removeMouseMotionListener ( this ) ; }
41099	public String mapInvokeDynamicMethodName ( String name , String desc ) { return name ; }
41165	static boolean canPopupOverlapTaskBar ( ) { boolean result = _BOOL ; Toolkit tk = Toolkit . getDefaultToolkit ( ) ; if ( tk instanceof SunToolkit ) { result = ( ( SunToolkit ) tk ) . canPopupOverlapTaskBar ( ) ; } return result ; }
41181	public static boolean stackTraceContainsCause ( Throwable throwable , Class < ? extends Throwable > searchedCause ) { Throwable t = throwable ; while ( ( t = t . getCause ( ) ) != _NULL ) { if ( searchedCause . isAssignableFrom ( t . getClass ( ) ) ) { return _BOOL ; } } return _BOOL ; }
41188	public SubjectConfirmation createSubjectConfirmation ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION ) ; if ( obj == _NULL ) { return new SubjectConfirmationImpl ( ) ; } else { return ( SubjectConfirmation ) obj ; } }
41225	private void processHost ( final String rule ) { final String [ ] s = rule . split ( _CHAR ^ [ _NUM - _NUM - zA - z - . * ] + _CHAR ) ; if ( s . length > _NUM ) { throw genericDecodeError ( ) ; } hostName = rule . split ( _CHAR \\ . _CHAR , - _NUM ) ; }
41291	public Paragraph addTabStops ( TabStop ... tabStops ) { addTabStopsAsProperty ( Arrays . asList ( tabStops ) ) ; return this ; }
41310	private void handleActionFoo ( String param1 , String param2 ) { String text = _CHAR Foo : _CHAR + param1 + _CHAR , '' + param2 ; Log . v ( TAG , text ) ; }
41358	public Object clone ( ) throws CloneNotSupportedException { WalkingIterator clone = ( WalkingIterator ) super . clone ( ) ; if ( _NULL != m_firstWalker ) { clone . m_firstWalker = m_firstWalker . cloneDeep ( clone , _NULL ) ; } return clone ; }
41398	public static int broadcast ( String message , String permission ) { return server . broadcast ( message , permission ) ; }
41400	public void notifyListeners ( ) throws IdentityProviderServiceException { for ( IdentityProviderListener listener : identityProviderListeners . values ( ) ) { listener . identityProviderConfigChanged ( ) ; } }
41480	private static Exception extractException ( Exception e ) { while ( e instanceof PrivilegedActionException ) { e = ( ( PrivilegedActionException ) e ) . getException ( ) ; } return e ; }
41495	public static byte [ ] createByteArray ( int size , String data ) { byte [ ] byteArray = new byte [ size ] ; for ( int i = _NUM ; i < size ; i ++ ) { byteArray [ i ] = Byte . parseByte ( data , _NUM ) ; } return byteArray ; }
41499	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
41505	public void output ( SessionDescription sd , OutputStream out ) throws IOException { if ( out instanceof ObjectOutputStream ) { ObjectOutputStream output = ( ObjectOutputStream ) out ; if ( sd != _NULL ) output . writeObject ( sd ) ; else throw new IOException ( _CHAR The parameter is _NULL _CHAR ) ; } else throw new IOException ( _CHAR The output stream has to be an instance of ObjectOutputStream _CHAR ) ; }
41518	@ Override public boolean isStretchWidth ( ) { return _BOOL ; }
41537	public synchronized void addActionListener ( ActionListener l ) { listenerList . add ( ActionListener . class , l ) ; }
41583	public ProxyRestriction createProxyRestriction ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . PROXY_RESTRICTION ) ; if ( obj == _NULL ) { return new ProxyRestrictionImpl ( ) ; } else { return ( ProxyRestriction ) obj ; } }
41596	private final boolean shouldCollectText ( ) { return collectText [ stackTop ] ; }
41618	public void deleteUserInfo ( String userId , String key ) { }
41653	public void handleWriteError ( String record , Throwable ex ) { if ( ! writeErroroccurred ) { System . err . println ( ERR_LOGGER_ERROR_WRITING_RECORD . get ( publisherConfigDN , stackTraceToSingleLineString ( ex ) ) ) ; writeErroroccurred = _BOOL ; } }
41688	public boolean isUnaryOption ( String cmdName ) { return unaryOptionNames . contains ( cmdName ) ; }
41736	public boolean isTimedOut ( ) { return timedOut ; }
41743	public static String formPropertySheetXML ( String properties , boolean addSection ) { return ( addSection ) ? getXMLDefinitionHeader ( ) + PropertyTemplate . START_TAG + PropertyTemplate . SECTION_DUMMY_START_TAG + properties + PropertyTemplate . SECTION_END_TAG + PropertyTemplate . END_TAG : getXMLDefinitionHeader ( ) + PropertyTemplate . START_TAG + properties + PropertyTemplate . END_TAG ; }
41793	private static void skip ( GifParameters gif ) throws java . io . IOException { do { readBlock ( gif ) ; } while ( gif . blockSize > _NUM ) ; }
41902	public SearchRequest asSearchRequest ( ) { final SearchRequest request = Requests . newSearchRequest ( name , scope , filter ) ; for ( final String a : attributes ) { request . addAttribute ( a ) ; } return request ; }
41903	private void handleActionBaz ( String param1 , String param2 ) { String text = _CHAR Baz : _CHAR + param1 + _CHAR , '' + param2 ; Log . v ( TAG , text ) ; }
41913	@ Override public void write ( int idx ) { }
41928	@ Override public < T > List < T > dynamicQuery ( DynamicQuery dynamicQuery ) { return fooPersistence . findWithDynamicQuery ( dynamicQuery ) ; }
41951	public Result modify ( ModifyRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . modify ( request ) ; }
41973	public StateInteractive key_typed ( char p_key_char ) { if ( p_key_char == _CHAR ) { i_brd . generate_snapshot ( ) ; } else { return super . key_typed ( p_key_char ) ; } return this ; }
42018	public boolean equals ( Object o ) { return ( this == o ) ; }
42052	public Class < ? extends Annotation > annotationType ( ) { return annotationType ; }
42079	public static InstructionFragment newInstance ( Recipe recipe , int sectionNumber ) { InstructionFragment fragment = new InstructionFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
42104	public static String putReplyURL ( String wreply ) { String wctx = SAML2Utils . generateID ( ) ; synchronized ( wctxMap ) { wctxMap . put ( wctx , wreply ) ; } return wctx ; }
42177	public char next ( ) { if ( offset >= ( end - _NUM ) ) { offset = end ; return DONE ; } return string . charAt ( ++ offset ) ; }
42191	public int hashCode ( ) { return toString ( ) . hashCode ( ) ; }
42205	public boolean shouldReInitialize ( ) { for ( DN domainDN : eclDisabledDomains ) { if ( predicate . isECLEnabledDomain ( domainDN ) ) { eclDisabledDomains . clear ( ) ; return _BOOL ; } } return _BOOL ; }
42229	public static boolean isClassLoaderBound ( ) { ClassLoader cl = Thread . currentThread ( ) . getContextClassLoader ( ) ; do { if ( clBindings . containsKey ( cl ) ) { return _BOOL ; } } while ( ( cl = cl . getParent ( ) ) != _NULL ) ; return _BOOL ; }
42243	public static Fragment1 newInstance ( int sectionNumber ) { Fragment1 fragment = new Fragment1 ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
42252	public boolean isUnderline ( ) { return underline ; }
42254	public static void checkJavaVersion ( ) throws IncompatibleVersionException { try { com . forgerock . opendj . cli . Utils . checkJavaVersion ( ) ; } catch ( ClientException e ) { throw new IncompatibleVersionException ( e . getMessageObject ( ) , e ) ; } }
42256	public Issuer createIssuer ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ISSUER ) ; if ( obj == _NULL ) { return new IssuerImpl ( ) ; } else { return ( Issuer ) obj ; } }
42264	@ Override public boolean isStretchHeight ( ) { return _BOOL ; }
42282	private boolean isEscapingDisabled ( ) { return m_disableOutputEscapingStates . peekOrFalse ( ) ; }
42295	public SessionID addRestrictedToken ( SessionID sid , TokenRestriction restriction ) { SessionID previousValue = restrictedTokensByRestriction . putIfAbsent ( restriction , sid ) ; if ( previousValue == _NULL ) { restrictedTokensBySid . put ( sid , restriction ) ; notifyPersistenceManager ( ) ; return _NULL ; } return previousValue ; }
42307	public void addChild ( PdfLayer childLayer ) { if ( childLayer . parent != _NULL ) throw new IllegalArgumentException ( _CHAR Illegal argument : childLayer _CHAR ) ; childLayer . parent = this ; if ( children == _NULL ) children = new ArrayList < > ( ) ; children . add ( childLayer ) ; }
42327	void addRESTRemotePolicyListener ( SSOToken appToken , String serviceName , String notificationURL ) { addRESTRemotePolicyListener ( appToken , serviceName , notificationURL , _BOOL ) ; }
42356	public boolean isGetAllReturnAttributesEnabled ( ) { return getAllAttributesEnabled ; }
42360	public static synchronized void unregisterProvider ( String providerID ) throws SyncFactoryException { initMapIfNecessary ( ) ; if ( implementations . containsKey ( providerID ) ) { implementations . remove ( providerID ) ; } }
42377	private void enqueueTopoInfoToAllExcept ( DataServerHandler dsHandler ) { synchronized ( pendingStatusMessagesLock ) { pendingStatusMessages . enqueueTopoInfoToAllDSsExcept ( dsHandler ) ; pendingStatusMessages . enqueueTopoInfoToAllRSs ( ) ; } statusAnalyzer . notifyPendingStatusMessage ( ) ; }
42391	public void paintTreeCellBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
42417	public boolean messageEnabled ( ) { return this . debugLevel . compareLevel ( DebugLevel . MESSAGE ) >= _NUM ; }
42434	static public PrintWriter log ( Throwable xcpt , PrintWriter out ) { out . println ( _CHAR ----------- _CHAR ) ; out . println ( xcpt . toString ( ) ) ; out . println ( _CHAR Stack Trace : _CHAR ) ; out . print ( getStackTrace ( xcpt ) ) ; out . println ( _CHAR ----------- _CHAR ) ; out . flush ( ) ; return out ; }
42461	public static Option file ( Path value ) { return new FileOption ( value ) ; }
42496	public void pushCurrentTemplateRuleIsNull ( boolean b ) { m_currentTemplateRuleIsNull . push ( b ) ; }
42523	public boolean isLogEnabled ( ) { return logStatus ; }
42553	public boolean isDisallowUnsafeCharacters ( ) { return this . disallowUnsafeCharacters ; }
42564	public void updateTitle ( ) { if ( panel . getTitle ( ) != _NULL ) { setTitle ( INFO_CTRL_PANEL_GENERIC_TITLE . get ( DynamicConstants . PRODUCT_NAME , panel . getTitle ( ) ) . toString ( ) ) ; } }
42582	public boolean accept ( File dir , String name ) { return accept ( new File ( dir , name ) ) ; }
42624	Clause buildBooleanValueClause ( String propTable , String operand , String placeholder ) { return where ( propTable + _CHAR . proptype = _CHAR _CHAR ) . and ( where ( propTable + _CHAR . propvalue _CHAR + operand + _CHAR $ { _CHAR + placeholder + _CHAR } _CHAR ) ) ; }
42641	protected void release ( Connection conn ) { if ( dataSource != _NULL ) { close ( conn ) ; } }
42642	public static boolean serviceExists ( ServiceConfig serviceConfig ) { return serviceConfig != _NULL && serviceConfig . exists ( ) ; }
42691	public static boolean isServerInstanceExist ( SSOToken ssoToken , String instanceName ) throws SMSException , SSOException { Set servers = getServers ( ssoToken ) ; return servers . contains ( instanceName ) ; }
42761	protected Class < ? > findClass ( String name ) throws ClassNotFoundException { return findClass ( name , currentClr ) ; }
42773	public static void appendProperties ( XMPMeta source , XMPMeta dest , boolean doAllProperties , boolean replaceOldValues ) throws XMPException { appendProperties ( source , dest , doAllProperties , replaceOldValues , _BOOL ) ; }
42798	public static float calculateTextHeight ( float textSizePx ) { Paint p = new Paint ( ) ; p . setTextSize ( textSizePx ) ; Paint . FontMetrics fm = p . getFontMetrics ( ) ; return - fm . top + fm . bottom ; }
42824	public int via_padstack_count ( ) { return via_padstacks . size ( ) ; }
42832	public static HierarchyBoundsListener remove ( HierarchyBoundsListener l , HierarchyBoundsListener oldl ) { return ( HierarchyBoundsListener ) removeInternal ( l , oldl ) ; }
42847	public boolean containsAll ( Collection < ? > values ) { for ( Object v : values ) { if ( ! contains ( ByteString . valueOfObject ( v ) ) ) { return _BOOL ; } } return _BOOL ; }
42850	public static WindowListener remove ( WindowListener l , WindowListener oldl ) { return ( WindowListener ) removeInternal ( l , oldl ) ; }
42851	public boolean isWindows ( ) { if ( isLocal ( ) ) { return OperatingSystem . isWindows ( ) ; } SearchResultEntry sr = getSystemInformationMonitor ( ) ; if ( sr == _NULL ) { return _BOOL ; } String os = firstValueAsString ( sr , _CHAR operatingSystem _CHAR ) ; return os != _NULL && OperatingSystem . WINDOWS . equals ( OperatingSystem . forName ( os ) ) ; }
42862	public URLConnection openConnection ( Proxy proxy ) throws IOException { if ( proxy == _NULL ) { throw new IllegalArgumentException ( _CHAR proxy == _NULL _CHAR ) ; } return streamHandler . openConnection ( this , proxy ) ; }
42868	public void skipZeroSeparator ( ) throws DataFormatException { if ( bytes . peek ( ) != ( byte ) _NUM ) { throw new DataFormatException ( _CHAR Expected a zero separator at position _CHAR + bytes . position ( ) + _CHAR but found byte _CHAR + bytes . peek ( ) ) ; } bytes . skip ( _NUM ) ; }
42882	public boolean isBound ( ) { return isBound ; }
42884	public static int countByField2 ( boolean field2 ) { return getPersistence ( ) . countByField2 ( field2 ) ; }
42911	public FilterAttributeBuilder and ( ) { return new FilterAttributeBuilder ( tokenFilter , Type . AND ) ; }
42926	public ImmutableList < A > append ( final A x ) { return of ( x ) . prependList ( this ) ; }
43010	private static boolean unknown ( JsonValue subject , PatchOperation operation ) throws BadRequestException { throw new BadRequestException ( _CHAR Operation _CHAR + operation . getOperation ( ) + _CHAR is not supported _CHAR ) ; }
43016	private static boolean isAlphanum ( char p_char ) { return ( isAlpha ( p_char ) || isDigit ( p_char ) ) ; }
43028	public static Clause and ( Iterable < Clause > clauses ) { return new AndClause ( clauses ) ; }
43088	public final void errPrintVerboseMessage ( final LocalizableMessage msg ) { if ( isVerbose ( ) ) { getErrStream ( ) . println ( wrap ( msg ) ) ; } }
43092	public Entity defEntity ( String name , int type , int ch ) { char data [ ] = { ( char ) ch } ; return defineEntity ( name , type , data ) ; }
43105	protected TreeModelListener createTreeModelListener ( ) { return getHandler ( ) ; }
43135	private long cancelAnimatorAndGetNewDuration ( long duration , ValueAnimator previousAnimator ) { long newDuration = duration ; if ( previousAnimator != _NULL ) { newDuration = Math . max ( previousAnimator . getDuration ( ) - previousAnimator . getCurrentPlayTime ( ) , newDuration ) ; previousAnimator . cancel ( ) ; } return newDuration ; }
43155	public static String stackTraceToString ( Throwable t ) { StringBuilder buffer = new StringBuilder ( ) ; stackTraceToString ( buffer , t ) ; return buffer . toString ( ) ; }
43173	public static int encode ( byte [ ] data , OutputStream out ) throws IOException { return encoder . encode ( data , _NUM , data . length , out ) ; }
43179	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
43192	public boolean is_multiple_of_45_degree ( ) { int lmax = plaline_len ( ) ; for ( int index = _NUM ; index < lmax ; ++ index ) { if ( plaline ( index ) . is_multiple_of_45_degree ( ) ) continue ; return _BOOL ; } return _BOOL ; }
43196	public static FontProgram createRegisteredFont ( String fontName , int style ) throws java . io . IOException { return fontRegisterProvider . getFont ( fontName , style ) ; }
43213	private void verifyCommit ( LoginModule ... modules ) throws LoginException { for ( LoginModule module : modules ) { verify ( module ) . commit ( ) ; } }
43233	private void scrollBy ( int dist ) { if ( directionVertical ( ) ) { mRecyclerView . scrollBy ( _NUM , dist ) ; } else { mRecyclerView . scrollBy ( dist , _NUM ) ; } }
43270	public List < VerificationOK > verify ( List < VerificationOK > result ) throws IOException , GeneralSecurityException { if ( result == _NULL ) result = new ArrayList < > ( ) ; while ( pkcs7 != _NULL ) { result . addAll ( verifySignature ( ) ) ; } return result ; }
43298	public boolean swapBuffers ( EGLSurface eglSurface ) { return EGL14 . eglSwapBuffers ( mEGLDisplay , eglSurface ) ; }
43342	@ Override protected synchronized void beforeWrite ( int n ) { count += n ; }
43363	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
43380	private boolean isEqual ( String str1 , String str2 ) { return MessageDigest . isEqual ( str1 . getBytes ( ) , str2 . getBytes ( ) ) ; }
43392	public PdfCanvas moveText ( double x , double y ) { contentStream . getOutputStream ( ) . writeDouble ( x ) . writeSpace ( ) . writeDouble ( y ) . writeSpace ( ) . writeBytes ( Td ) ; return this ; }
43406	static String keyToDNString ( ByteString key ) { return key . toByteString ( ) . toASCIIString ( ) ; }
43422	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
43439	protected void appendConstant ( final Object cst ) { appendConstant ( buf , cst ) ; }
43448	public boolean deleteOldRDN ( ) { return deleteOldRDN ; }
43453	@ Override public < T > java . util . List < T > dynamicQuery ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQuery ( dynamicQuery ) ; }
43490	public final int size ( ) { return ( m_lastChunk << m_chunkBits ) + m_firstFree ; }
43513	private boolean delete ( WriteableTransaction txn , DN dn ) throws StorageRuntimeException { ByteString key = toKey ( dn ) ; if ( txn . delete ( getName ( ) , key ) ) { containsReferrals = containsReferrals ( txn ) ; return _BOOL ; } return _BOOL ; }
43514	public boolean isDefinitelyWritable ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return _BOOL ; }
43591	public int size ( ) { return map . size ( ) ; }
43593	private void readObject ( java . io . ObjectInputStream in ) throws NotSerializableException { throw new NotSerializableException ( _CHAR Not serializable . '' ) ; }
43618	public void addChangeListener ( ChangeListener l ) { listenerList . add ( ChangeListener . class , l ) ; }
43619	public void removeChangeListener ( ChangeListener listener ) { listenerList . remove ( ChangeListener . class , listener ) ; }
43701	public MonitorMsg createGlobalTopologyMonitorMsg ( int sender , int destination ) throws InterruptedException { return createGlobalTopologyMonitorMsg ( sender , destination , domainMonitor . recomputeMonitorData ( ) ) ; }
43705	public static String trim ( String value ) { return value != _NULL ? value . trim ( ) : _NULL ; }
43787	public static < T > PooledObjectFactory < T > synchronizedPooledFactory ( final PooledObjectFactory < T > factory ) { return new SynchronizedPooledObjectFactory < > ( factory ) ; }
43804	public int left_x_value ( int p_y ) { int result = Math . max ( oct_lx , oct_ulx + p_y ) ; return Math . max ( result , oct_llx - p_y ) ; }
43875	public void increment ( int [ ] currentOffset ) { myOffset = currentOffset [ _NUM ] ; }
43889	public Assertion createAssertion ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION ) ; if ( obj == _NULL ) { return new AssertionImpl ( ) ; } else { return ( Assertion ) obj ; } }
43892	@ Override public String toString ( ) { StringBuilder risul = new StringBuilder ( _NUM ) ; risul . append ( _CHAR IteraBoard \ n _CHAR ) ; risul . append ( _CHAR objects : itera_settings \ n _CHAR ) ; risul . append ( _CHAR methods : get_routing_board ( ) \ n _CHAR ) ; return risul . toString ( ) ; }
43899	@ Override public boolean equals ( Object o ) { if ( o instanceof MemberImpl ) { return Arrays . equals ( this . getHost ( ) , ( ( MemberImpl ) o ) . getHost ( ) ) && this . getPort ( ) == ( ( MemberImpl ) o ) . getPort ( ) && Arrays . equals ( this . getUniqueId ( ) , ( ( MemberImpl ) o ) . getUniqueId ( ) ) ; } else return _BOOL ; }
43923	protected void updateMetrics ( ) { Component host = getContainer ( ) ; Font f = host . getFont ( ) ; if ( font != f ) { calculateLongestLine ( ) ; tabSize = getTabSize ( ) * metrics . charWidth ( _CHAR ) ; } }
43928	public final void pushExpressionState ( int cn , int en , PrefixResolver nc ) { m_currentNodes . push ( cn ) ; m_currentExpressionNodes . push ( cn ) ; m_prefixResolvers . push ( nc ) ; }
43929	protected void error ( String msg , Object [ ] args ) throws javax . xml . transform . TransformerException { String fmsg = XSLMessages . createXPATHMessage ( msg , args ) ; { throw new XPathException ( fmsg , this ) ; } }
43957	public static WindowStateListener remove ( WindowStateListener l , WindowStateListener oldl ) { return ( WindowStateListener ) removeInternal ( l , oldl ) ; }
44017	public boolean isOutputMethodSet ( ) { return m_outputMethodSet ; }
44018	public static InstructionFragment newInstance ( Recipe recipe , int sectionNumber ) { InstructionFragment fragment = new InstructionFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
44050	public boolean isValid ( boolean reset ) { try { final SessionState state = session . getState ( reset ) ; return state == SessionState . VALID && ! session . isTimedOut ( ) ; } catch ( SessionException e ) { return _BOOL ; } }
44102	@ Override public void write ( String str , int st , int end ) { }
44143	public static SecurityOptions createJKSCertificateOptions ( String keystorePath , String keystorePwd , boolean enableSSL , boolean enableStartTLS , int sslPort , Collection < String > aliasesToUse ) { return createOptionsForCertificatType ( CertificateType . JKS , keystorePath , keystorePwd , enableSSL , enableStartTLS , sslPort , aliasesToUse ) ; }
44146	public PdfCanvas paintShading ( PdfShading shading ) { PdfName shadingName = resources . addShading ( shading ) ; document . checkIsoConformance ( currentGs , IsoKey . GRAPHIC_STATE_ONLY ) ; contentStream . getOutputStream ( ) . write ( ( PdfObject ) shadingName ) . writeSpace ( ) . writeBytes ( sh ) ; return this ; }
44174	static TargetAttr decode ( EnumTargetOperator operator , String expr ) throws AciException { return new TargetAttr ( operator , expr ) ; }
44179	void beforeDelete ( WriteableTransaction txn ) throws StorageRuntimeException { }
44229	public Result delete ( DeleteRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . delete ( request ) ; }
44233	private int computeWeek ( int offset , int day ) { return ( ( _NUM + offset + ( day - _NUM ) ) / _NUM ) ; }
44276	public boolean swapBuffers ( ) { boolean result = mEglCore . swapBuffers ( mEGLSurface ) ; if ( ! result ) { Log . d ( TAG , _CHAR WARNING : swapBuffers ( ) failed _CHAR ) ; } return result ; }
44292	private void incCount ( int value ) { int temp = written + value ; if ( temp < _NUM ) { temp = Integer . MAX_VALUE ; } written = temp ; }
44295	public void error ( String msg , Object [ ] args ) throws javax . xml . transform . TransformerException { java . lang . String fmsg = org . apache . xalan . res . XSLMessages . createXPATHMessage ( msg , args ) ; throw new javax . xml . transform . TransformerException ( fmsg ) ; }
44376	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
44458	public QRCallbackBuilder withUriPath ( String path ) { this . path = path ; return this ; }
44463	public boolean isFillInAllowed ( ) { return fillInAllowed ; }
44477	void pointToCellRounded ( int x , int y , int [ ] result ) { pointToCellExact ( x + ( mCellWidth / _NUM ) , y + ( mCellHeight / _NUM ) , result ) ; }
44495	public void notify_changed ( BrdItem p_item ) { }
44500	public static Clause or ( Iterable < Clause > clauses ) { return new OrClause ( clauses ) ; }
44515	public void checkNumberArgs ( int argNum ) throws WrongNumberArgsException { if ( argNum != _NUM ) reportWrongNumberArgs ( ) ; }
44520	public static ResultCode addEntryOperation ( String ... lines ) throws Exception { Entry entry = makeEntry ( lines ) ; AddOperation addOperation = getRootConnection ( ) . processAdd ( entry ) ; return addOperation . getResultCode ( ) ; }
44553	protected void installComponents ( ) { if ( ( rendererPane = createCellRendererPane ( ) ) != _NULL ) { tree . add ( rendererPane ) ; } }
44616	boolean isForwardSuccess ( ) { return forwardSuccess ; }
44633	public static int countByField2 ( boolean field2 ) { return getPersistence ( ) . countByField2 ( field2 ) ; }
44679	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
44752	@ Override public Future < Integer > write ( ByteBuffer src ) { return new FutureWrite ( src ) ; }
44758	public boolean isDeclared ( String qName ) { int index = getIndex ( qName ) ; if ( index < _NUM ) throw new IllegalArgumentException ( _CHAR No such attribute : _CHAR + qName ) ; return declared [ index ] ; }
44776	@ Override public void publish ( LogRecord record ) { super . publish ( record ) ; super . flush ( ) ; }
44784	private synchronized void closeOutputStreamQuietly ( ) { if ( ! mClosed ) { try { mOutputStream . close ( ) ; reportDecodedSizeIfApplicable ( ) ; } catch ( IOException e ) { CLog . writeToConsole ( mNetworkPeerManager , Console . MessageLevel . ERROR , Console . MessageSource . NETWORK , _CHAR Could not close the output stream _CHAR + e ) ; } finally { mClosed = _BOOL ; } } }
44870	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { fastTime = s . readLong ( ) ; }
44872	public XMLFilter newXMLFilter ( Source src ) throws TransformerConfigurationException { Templates templates = newTemplates ( src ) ; if ( templates == _NULL ) return _NULL ; return newXMLFilter ( templates ) ; }
44875	public static SOAPElementFactory newInstance ( ) throws SOAPException { try { return new SOAPElementFactory ( SOAPFactory . newInstance ( ) ) ; } catch ( Exception ex ) { throw new SOAPException ( _CHAR Unable to create SOAP Element Factory : _CHAR + ex . getMessage ( ) ) ; } }
44910	public Wrapper addServlet ( String contextPath , String servletName , Servlet servlet ) { Container ctx = getHost ( ) . findChild ( contextPath ) ; return addServlet ( ( Context ) ctx , servletName , servlet ) ; }
44919	public Node removeNamedItemNS ( String namespaceURI , String localName ) { return removeNamedItem ( localName ) ; }
44989	public static String generateTOTP ( String key , String time , String returnDigits ) { return generateTOTP ( key , time , returnDigits , _CHAR HmacSHA1 _CHAR ) ; }
45104	private String resolveDebugFileName ( ) { if ( mergeAllMode ) { return DebugConstants . CONFIG_DEBUG_MERGEALL_FILE ; } else { String nm = INSTANCE_NAMES . get ( debugName ) ; if ( nm != _NULL ) { return nm ; } else { return debugName ; } } }
45115	public static String generateTOTP256 ( byte [ ] key , String time , String returnDigits ) { return generateTOTP ( key , time , returnDigits , _CHAR HmacSHA256 _CHAR ) ; }
45127	public static String surround ( final String value , final String prefix , final String suffix ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; String _prefix = Optional . ofNullable ( prefix ) . orElse ( _CHAR _CHAR ) ; return append ( _prefix , value , Optional . ofNullable ( suffix ) . orElse ( _prefix ) ) ; }
45156	public void actionPerformed ( ActionEvent e ) { if ( tree != _NULL && lastPath != _NULL ) { tree . startEditingAtPath ( lastPath ) ; } }
45177	public boolean equals ( Object o ) { if ( o instanceof Organization ) { Organization org = ( Organization ) o ; if ( ( selectedOrgDNs != _NULL ) && ( org . selectedOrgDNs != _NULL ) && ( selectedOrgDNs . equals ( org . selectedOrgDNs ) ) ) { return _BOOL ; } } return _BOOL ; }
45205	public IdentityServicesImpl newInstance ( ) { if ( providerImpl == _NULL ) { try { providerImpl = ( IdentityServicesImpl ) provider . newInstance ( ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } } return ( providerImpl ) ; }
45224	protected void handleExpandControlClick ( TreePath path , int mouseX , int mouseY ) { toggleExpandState ( path ) ; }
45263	protected static String [ ] commaDelimitedListToStringArray ( String commaDelimitedStrings ) { return ( commaDelimitedStrings == _NULL || commaDelimitedStrings . length ( ) == _NUM ) ? new String [ _NUM ] : commaSeparatedValuesPattern . split ( commaDelimitedStrings ) ; }
45270	public Response createResponse ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESPONSE ) ; if ( object == _NULL ) { return new ResponseImpl ( ) ; } else { return ( Response ) object ; } }
45297	public String matchByFirstCommonWordSequence ( String ... names ) { if ( names . length < _NUM ) { throw new IllegalArgumentException ( _CHAR Ca n _CHAR_CHAR ) ; } return commonSequenceMatcher . matchFirstCommonSequence ( names ) ; }
45299	public boolean isReplicationServer ( ) throws IOException { return getReplicationPort ( ) != - _NUM ; }
45304	public boolean hasGetEffectiveRightsControl ( ) { return this . hasGetEffectiveRightsControl ; }
45364	public AMAuthenticationAuditEventBuilder entry ( AuthenticationAuditEntry authenticationAuditEntry ) { if ( authenticationAuditEntry != _NULL ) { super . entries ( singletonList ( authenticationAuditEntry . toMap ( ) ) ) ; } return this ; }
45385	public String toExternalForm ( ) { if ( streamHandler == _NULL ) { return _CHAR unknown protocol ( _CHAR + protocol + _CHAR ) : // '' + host + file ; } return streamHandler . toExternalForm ( this ) ; }
45406	public Builder structuralClassOID ( String strucuralClassOID ) { this . structuralClassOID = strucuralClassOID ; return this ; }
45424	public static Fragment5 newInstance ( int sectionNumber ) { Fragment5 fragment = new Fragment5 ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
45449	public boolean greaterThanOrEqual ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . lessThanOrEqual ( this ) ; return this . num ( ) >= obj2 . num ( ) ; }
45468	final boolean isOwnedBy ( AbstractQueuedLongSynchronizer sync ) { return sync == AbstractQueuedLongSynchronizer . this ; }
45490	public boolean isPolicyAssigned ( String policyDN , String serviceName ) throws AMException , SSOException { throw new UnsupportedOperationException ( ) ; }
45503	public void printIndent ( int indentLevel ) { String indent = _CHAR _CHAR ; indentLevel = indentLevel * INDENT_WIDTH ; for ( int i = _NUM ; i < indentLevel ; i ++ ) { indent = indent + _CHAR _CHAR ; } writer . print ( indent ) ; }
45512	public void reset ( Reader in ) { lexer . yyreset ( in ) ; reset ( ) ; }
45517	public Boolean isContinueStraight ( ) { return continueStraight ; }
45524	public static byte [ ] parseBase64Binary ( String lexicalXSDBase64Binary ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseBase64Binary ( lexicalXSDBase64Binary ) ; }
45528	public void addAttributeValue ( Principal principal , Guid guid , String name , String value ) throws UMSException { modifyAttributeValue ( ModificationType . ADD , principal , guid , name , value ) ; }
45559	public static FocusListener remove ( FocusListener l , FocusListener oldl ) { return ( FocusListener ) removeInternal ( l , oldl ) ; }
45595	public World . Environment environment ( ) { return environment ; }
45605	public WorldCreator generatorSettings ( String generatorSettings ) { this . generatorSettings = generatorSettings ; return this ; }
45642	public char previous ( ) { if ( offset == start ) { return DONE ; } return string . charAt ( -- offset ) ; }
45692	public boolean isValidOn ( Date date ) { return ! date . before ( x509Certificate . getStartDate ( ) . getDate ( ) ) && ! date . after ( x509Certificate . getEndDate ( ) . getDate ( ) ) ; }
45693	public static void resetStartupCalled ( ) { startupCalled = _BOOL ; }
45820	public boolean validateSchema ( ) { return validateSchema ; }
45841	public Condition createCondition ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITION ) ; if ( obj == _NULL ) { return new ConditionImpl ( ) ; } else { return ( Condition ) obj ; } }
45852	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
45860	public void checkShowTextIsoConformance ( Object gState , PdfResources resources ) { }
45867	private static void checkAciForProxyAuthControl ( Operation operation , Entry authorizationEntry ) throws DirectoryException { if ( ! AccessControlConfigManager . getInstance ( ) . getAccessControlHandler ( ) . mayProxy ( operation . getClientConnection ( ) . getAuthenticationInfo ( ) . getAuthenticationEntry ( ) , authorizationEntry , operation ) ) { throw new DirectoryException ( ResultCode . AUTHORIZATION_DENIED , ERR_PROXYAUTH_AUTHZ_NOT_PERMITTED . get ( authorizationEntry . getName ( ) ) ) ; } }
45871	public Action createAction ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ACTION ) ; if ( obj == _NULL ) { return new ActionImpl ( ) ; } else { return ( Action ) obj ; } }
45892	public final void printVerboseMessage ( final LocalizableMessage msg ) { if ( isVerbose ( ) ) { out . println ( wrap ( msg ) ) ; } }
45948	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
45993	public void returnValue ( ) { mv . visitInsn ( returnType . getOpcode ( Opcodes . IRETURN ) ) ; }
46003	protected void paint ( SynthContext context , Graphics g ) { }
46030	public boolean isSpecified ( String qName ) { int index = getIndex ( qName ) ; if ( index < _NUM ) throw new IllegalArgumentException ( _CHAR No such attribute : _CHAR + qName ) ; return specified [ index ] ; }
46033	@ RequestMapping ( value = _CHAR / account / reset_password / init _CHAR , method = RequestMethod . POST , produces = MediaType . TEXT_PLAIN_VALUE ) @ Timed public ResponseEntity < ? > requestPasswordReset ( @ RequestBody String mail , HttpServletRequest request ) { return userService . requestPasswordReset ( mail ) . map ( _NULL ) . orElse ( new ResponseEntity < > ( _CHAR e - mail address not registered _CHAR , HttpStatus . BAD_REQUEST ) ) ; }
46040	@ Override public Writer append ( CharSequence csq ) { return this ; }
46043	private static boolean isPropertyElementName ( int term ) { if ( term == RDFTERM_DESCRIPTION || isOldTerm ( term ) ) { return _BOOL ; } else { return ( ! isCoreSyntaxTerm ( term ) ) ; } }
46061	public static String readFile ( String name ) throws IOException { return readFile ( new File ( name ) ) ; }
46084	public ArrayList < ByteString > toASN1ArrayList ( ) { final ArrayList < ByteString > values = new ArrayList < > ( _NUM ) ; for ( CSN csn : serverIdToCSN . values ( ) ) { values . add ( ByteString . valueOfUtf8 ( csn . toString ( ) ) ) ; } return values ; }
46100	private synchronized void stopChangeTimeHeartBeatPublishing ( ) { if ( ctHeartbeatPublisherThread != _NULL ) { ctHeartbeatPublisherThread . shutdown ( ) ; ctHeartbeatPublisherThread = _NULL ; } }
46113	public boolean hasAttributeNS ( String namespaceURI , String localName ) { return hasAttribute ( localName ) ; }
46158	@ Override public void write ( String str ) { }
46164	@ NonNull public final Agera observeOn ( @ NonNull Executor executor ) { return new AgeraObserveOnExecutor ( this , executor , _BOOL ) ; }
46176	public static boolean hasLollipop ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ; }
46192	public static Fragment2 newInstance ( int sectionNumber ) { Fragment2 fragment = new Fragment2 ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
46283	private static void extractAndAddValueUsingIfNotEmpty ( final HttpServletRequest request , final Map < String , List < String >> paramsMap , final String parameterName ) { String parameterValue = request . getParameter ( parameterName ) ; insertValueUsingIfNotEmpty ( paramsMap , parameterValue , parameterName ) ; }
46330	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
46337	void releaseLDAPConnection ( ConnectionWithControls conn ) { if ( conn != connConfig && conn != connUserData ) { connectionPool . releaseConnection ( conn ) ; } }
46352	public void removeTreeExpansionListener ( TreeExpansionListener tel ) { listenerList . remove ( TreeExpansionListener . class , tel ) ; if ( uiTreeExpansionListener == tel ) { uiTreeExpansionListener = _NULL ; } }
46372	public synchronized boolean syncSeen ( ) { return syncSeen ; }
46379	public static FontProgram createRegisteredFont ( String fontName , int style , boolean cached ) throws java . io . IOException { return fontRegisterProvider . getFont ( fontName , style , cached ) ; }
46421	public ImmutableList < A > appendList ( final ImmutableList < A > x ) { return x . prependList ( this ) ; }
46443	public int size ( ) { return count ; }
46503	public int size ( ) { return m . size ( ) ; }
46597	ConnectionWithControls findConnectionForLocalEntry ( BasicNode node ) throws LdapException { return findConnectionForLocalEntry ( node , isConfigurationNode ( node ) ) ; }
46647	private File retrieveGenerationIdFile ( final File directory ) { File [ ] generationIds = directory . listFiles ( GENERATION_ID_FILE_FILTER ) ; return ( generationIds != _NULL && generationIds . length > _NUM ) ? generationIds [ _NUM ] : _NULL ; }
46651	public void addPattern ( String pattern ) { addPatternDecoded ( UDecoder . URLDecode ( pattern , _CHAR UTF - _NUM _CHAR ) ) ; }
46725	public Object clone ( ) { try { OutputProperties cloned = ( OutputProperties ) super . clone ( ) ; cloned . m_properties = ( Properties ) cloned . m_properties . clone ( ) ; return cloned ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
46727	public static boolean endsWith ( final String value , final String search ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return endsWith ( value , search , value . length ( ) , _BOOL ) ; }
46806	public A last ( ) { A last = _NULL ; ImmutableList < A > t = this ; while ( t . tail != _NULL ) { last = t . head ; t = t . tail ; } return last ; }
46826	public boolean isInputShutdown ( ) { return isInputShutdown ; }
46833	public NameID createNameID ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID ) ; if ( obj == _NULL ) { return new NameIDImpl ( ) ; } else { return ( NameID ) obj ; } }
46841	public boolean isFragment ( ) { return fragment ; }
46844	public boolean lessThanOrEqual ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . greaterThanOrEqual ( this ) ; return this . num ( ) <= obj2 . num ( ) ; }
46869	public static boolean isIntendedForAudience ( String audienceName , JwtClaimsSet jwtClaims ) throws AuthLoginException { List < String > jwtAudiences = jwtClaims . getAudience ( ) ; return jwtAudiences . contains ( audienceName ) ; }
46946	public void addSecurityRoleRef ( SecurityRoleRef securityRoleRef ) { securityRoleRefs . add ( securityRoleRef ) ; }
46973	public static int countByUuid ( java . lang . String uuid ) { return getPersistence ( ) . countByUuid ( uuid ) ; }
46976	public StateInteractive mouse_moved ( ) { super . mouse_moved ( ) ; PlaPointInt curr_mouse_pos = i_brd . get_current_mouse_position ( ) . round ( ) ; snapped_mouse_position = ( snap_to_restriction ( curr_mouse_pos ) ) . to_float ( ) ; i_brd . repaint ( ) ; return this ; }
46979	void unbindMaintenanceFilter ( Filter filter ) { maintenanceFilter . setDelegate ( PassthroughFilter . PASSTHROUGH_FILTER ) ; }
47011	@ Override public void run ( ) { logger . trace ( _CHAR Directory Server shutdown hook has been invoked . '' ) ; DirectoryServer . shutDown ( CLASS_NAME , ERR_SHUTDOWN_DUE_TO_SHUTDOWN_HOOK . get ( ) ) ; }
47038	public static RecipeFragment newInstance ( Recipe recipe , int sectionNumber ) { RecipeFragment fragment = new RecipeFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
47054	public boolean isServiceInstanceUpdateEnabled ( ) { return isSIUEnabled ; }
47097	public static void deleteEntry ( Entry entry ) throws Exception { deleteEntry ( entry . getName ( ) ) ; }
47199	private boolean canProcessEntry ( RDN rdn ) { return ! rdn . isMultiValued ( ) && rdn . getFirstAVA ( ) . getAttributeType ( ) . equals ( attrAlias ) ; }
47219	public static VirtualAttributesOnlyRequestControl newControl ( final boolean isCritical ) { return isCritical ? CRITICAL_INSTANCE : NONCRITICAL_INSTANCE ; }
47224	public void addDeleteOnTearDown ( File file ) { deleteOnTearDown . add ( file ) ; }
47237	public static FontProgram createType1Font ( String metricsPath , String binaryPath , boolean cached ) throws java . io . IOException { return createType1Font ( metricsPath , binaryPath , _NULL , _NULL , cached ) ; }
47251	public QueueTaskFuture < WorkflowRun > startBuilding ( ) throws Exception { QueueTaskFuture < WorkflowRun > f = p . scheduleBuild2 ( _NUM ) ; b = f . waitForStart ( ) ; e = ( CpsFlowExecution ) b . getExecutionPromise ( ) . get ( ) ; return f ; }
47253	public static boolean isECLEnabled ( ) { waitForStartup ( ) ; for ( LDAPReplicationDomain domain : domains . values ( ) ) { if ( domain . isECLEnabled ( ) ) { return _BOOL ; } } return _BOOL ; }
47263	LambdaFormBuffer replaceParameterByCopy ( int pos , int valuePos ) { assert ( pos != valuePos ) ; replaceName ( pos , names [ valuePos ] ) ; noteDuplicate ( pos , valuePos ) ; return this ; }
47296	public PermissionCollection newPermissionCollection ( ) { return new AllPermissionCollection ( ) ; }
47359	public boolean isSpecified ( int index ) { if ( index < _NUM || index >= getLength ( ) ) throw new ArrayIndexOutOfBoundsException ( _CHAR No attribute at index : _CHAR + index ) ; return specified [ index ] ; }
47365	protected void cleanConfigEntries ( ) throws Exception { logger . error ( LocalizableMessage . raw ( _CHAR ReplicationTestCase / Cleaning config entries _CHAR ) ) ; for ( DN dn : configEntriesToCleanup ) { deleteEntry ( dn ) ; } configEntriesToCleanup . clear ( ) ; synchroServerEntry = _NULL ; replServerEntry = _NULL ; }
47374	public void monitorExit ( ) { mv . visitInsn ( Opcodes . MONITOREXIT ) ; }
47414	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
47431	static double checkDouble ( double d ) throws JSONException { if ( Double . isInfinite ( d ) || Double . isNaN ( d ) ) { throw new JSONException ( _CHAR Forbidden numeric value : _CHAR + d ) ; } return d ; }
47473	boolean cancel0 ( ) { setPeriod ( - _NUM ) ; return _BOOL ; }
47488	public static byte [ ] createByteArray ( int size , String data ) { byte [ ] byteArray = new byte [ size ] ; for ( int i = _NUM ; i < size ; i ++ ) { byteArray [ i ] = Byte . parseByte ( data , _NUM ) ; } return byteArray ; }
47506	public void checkNumberArgs ( int argNum ) throws WrongNumberArgsException { }
47573	public Object clone ( ) throws CloneNotSupportedException { Object newObj = super . clone ( ) ; if ( mimeType != _NULL ) { ( ( DataFlavor ) newObj ) . mimeType = ( MimeType ) mimeType . clone ( ) ; } return newObj ; }
47711	public static < C extends ConfigurationClient , S extends Configuration > MenuResult < String > createManagedObject ( ConsoleApplication app , ManagementContext context , ManagedObject < ? > parent , InstantiableRelationDefinition < C , S > rd ) throws ClientException { return createManagedObject ( app , context , parent , rd , _NULL ) ; }
47730	private int performCompareOperation ( boolean authentication ) throws Exception { return LDAPCompare . mainCompare ( compareArgs ( authentication ) , _BOOL , _NULL , _NULL ) ; }
47735	private static boolean notNullOrEmpty ( final String s ) { return s != _NULL && ! s . isEmpty ( ) ; }
47738	public void dispatchAsComment ( org . xml . sax . ext . LexicalHandler lh ) throws org . xml . sax . SAXException { String str = str ( ) ; lh . comment ( str . toCharArray ( ) , _NUM , str . length ( ) ) ; }
47747	public static String unsetThread ( ) { ByteArrayOutputStream baos = data . get ( ) ; if ( baos == _NULL ) { return _NULL ; } streams . set ( _NULL ) ; data . set ( _NULL ) ; return baos . toString ( ) ; }
47775	public AttributeCertificate toASN1Structure ( ) { return attrCert ; }
47807	private String parseToken ( final char [ ] terminators ) { char ch ; i1 = pos ; i2 = pos ; while ( hasChar ( ) ) { ch = chars [ pos ] ; if ( isOneOf ( ch , terminators ) ) { break ; } i2 ++ ; pos ++ ; } return getToken ( _BOOL ) ; }
47842	public static String generateTOTP256 ( String key , String time , String returnDigits ) { return generateTOTP ( key , time , returnDigits , _CHAR HmacSHA256 _CHAR ) ; }
47868	public String buildId ( ) { return properties . getProperty ( _CHAR build . id _CHAR ) ; }
47893	public static IOFileFilter ageFileFilter ( File cutoffReference , boolean acceptOlder ) { return new AgeFileFilter ( cutoffReference , acceptOlder ) ; }
47939	public static int countByUuid ( java . lang . String uuid ) { return getPersistence ( ) . countByUuid ( uuid ) ; }
47950	private boolean isGenerateFullConfig ( JsonValue params ) { return ! params . get ( ConnectorUtil . OPENICF_CONNECTOR_REF ) . isNull ( ) && ! params . get ( ConnectorUtil . OPENICF_CONFIGURATION_PROPERTIES ) . isNull ( ) ; }
48041	public void startTracking ( ) { if ( isTracking ) { return ; } if ( this . session == _NULL ) { addBroadcastReceiver ( ) ; } if ( getSession ( ) != _NULL ) { getSession ( ) . addCallback ( callback ) ; } isTracking = _BOOL ; }
48047	protected GenericObject next ( ) { if ( myListIterator == _NULL ) { myListIterator = this . listIterator ( _NUM ) ; } try { return ( GenericObject ) myListIterator . next ( ) ; } catch ( NoSuchElementException ex ) { myListIterator = _NULL ; return _NULL ; } }
48055	private static boolean isTokenChar ( char c ) { return ( ( c > _NUM ) && ( c < _NUM ) ) && ( TSPECIALS . indexOf ( c ) < _NUM ) ; }
48102	void noteItem ( ) { ++ items ; notifyListener ( ) ; }
48143	public static MouseWheelListener remove ( MouseWheelListener l , MouseWheelListener oldl ) { return ( MouseWheelListener ) removeInternal ( l , oldl ) ; }
48209	private int performModifyOperation ( boolean authenticate ) throws Exception { String path = TestCaseUtils . createTempFile ( _CHAR dn : o = rejectTestCase , o = test _CHAR , _CHAR changetype : modify _CHAR , _CHAR replace : description _CHAR , _CHAR description : New Description _CHAR ) ; return LDAPModify . mainModify ( modifyArgs ( authenticate , path ) , _BOOL , _NULL , _NULL ) ; }
48218	public boolean isGroupMembershipSearchIndexEnabled ( ) { return groupMembershipSearchIndexEnabled ; }
48223	static < K extends Comparable < K > , V > BlockLogReader < K , V > newReader ( final File file , final RandomAccessFile reader , final RecordParser < K , V > parser ) { return new BlockLogReader < > ( file , reader , parser , BLOCK_SIZE ) ; }
48233	public String toString ( ) { return attrType ; }
48250	public boolean has_trace_exit_restrictions ( ) { for ( int index = first_layer ( ) ; index <= last_layer ( ) ; ++ index ) { Collection < BrdTraceExitRestriction > curr_exit_restrictions = get_trace_exit_restrictions ( index ) ; if ( curr_exit_restrictions . size ( ) > _NUM ) return _BOOL ; } return _BOOL ; }
48264	public static Socket doInteraction ( final HttpsURLConnection clientConnection , final ServerSocket serverSocket ) throws Throwable { return doInteraction ( clientConnection , serverSocket , OK_CODE , _BOOL ) ; }
48303	public int hashCode ( ) { return fImage . hashCode ( ) ; }
48310	private final boolean isInScope ( SevenBitCleanPluginCfg config , DN dn ) { Set < DN > baseDNs = config . getBaseDN ( ) ; if ( baseDNs == _NULL || baseDNs . isEmpty ( ) ) { baseDNs = DirectoryServer . getPublicNamingContexts ( ) . keySet ( ) ; } return isDescendantOfAny ( dn , baseDNs ) ; }
48366	protected void error ( String msg ) throws javax . xml . transform . TransformerException { error ( msg , _NULL ) ; }
48369	public static boolean containsCaseInsensitive ( String s1 , String s2 ) { if ( s1 == _NULL || s2 == _NULL ) { return _BOOL ; } return s1 . toLowerCase ( ) . contains ( s2 . toLowerCase ( ) ) ; }
48450	public boolean isOutputShutdown ( ) { return isOutputShutdown ; }
48471	public static SearchRequest newSingleEntrySearchRequest ( final DN dn , String ... attributeDescriptions ) { return Requests . newSingleEntrySearchRequest ( dn , SearchScope . BASE_OBJECT , Filter . objectClassPresent ( ) , attributeDescriptions ) . addControl ( TransactionIdControl . newControl ( AuditRequestContext . createSubTransactionIdValue ( ) ) ) ; }
48492	private static void updateWindowUI ( Window window ) { updateStyles ( window ) ; Window ownedWins [ ] = window . getOwnedWindows ( ) ; for ( Window w : ownedWins ) { updateWindowUI ( w ) ; } }
48542	ByteString entryToDatabase ( Entry entry , DataConfig dataConfig ) throws DirectoryException { EntryCodec codec = acquireEntryCodec ( ) ; try { return codec . encode ( entry , dataConfig ) ; } finally { codec . release ( ) ; } }
48559	public boolean equals ( Object o ) { if ( o instanceof WebServicesClients ) { WebServicesClients client = ( WebServicesClients ) o ; if ( ( selectedWebServicesClients != _NULL ) && ( client . selectedWebServicesClients != _NULL ) && ( selectedWebServicesClients . equals ( client . selectedWebServicesClients ) ) ) { return ( _BOOL ) ; } } return ( _BOOL ) ; }
48637	public static ComponentUI createUI ( JComponent c ) { return new MetalRootPaneUI ( ) ; }
48664	public static Note flat ( int octave , Tone tone ) { Validate . isTrue ( octave != _NUM , _CHAR Octave can not be _NUM for flats '' ) ; tone = tone == Tone . G ? Tone . F : Tone . values ( ) [ tone . ordinal ( ) - _NUM ] ; return new Note ( octave , tone , tone . isSharpable ( ) ) ; }
48687	public boolean useSSL ( ) { return currentConfig . isUseSSL ( ) ; }
48694	public double angle_approx ( PlaVectorInt p_other ) { double result = Math . acos ( cos_angle ( p_other ) ) ; if ( side_of ( p_other ) == PlaSide . ON_THE_LEFT ) { result =- result ; } return result ; }
48695	public boolean isDeclared ( int index ) { if ( index < _NUM || index >= getLength ( ) ) throw new ArrayIndexOutOfBoundsException ( _CHAR No attribute at index : _CHAR + index ) ; return declared [ index ] ; }
48703	void unbindAuditFilter ( Filter filter ) { auditFilter . setDelegate ( PassthroughFilter . PASSTHROUGH_FILTER ) ; }
48765	public boolean isSpecified ( String uri , String localName ) { int index = getIndex ( uri , localName ) ; if ( index < _NUM ) throw new IllegalArgumentException ( _CHAR No such attribute : local = _CHAR + localName + _CHAR , namespace = _CHAR + uri ) ; return specified [ index ] ; }
48766	public static final ParsedQuery createTestParsedQuery2 ( ) { Query query = new Query ( ) ; query . setWhere ( _CHAR myindexedfield = _CHAR _CHAR ) ; query . setDatabase ( Fixtures . DB ) ; query . setTable ( _CHAR mytable _CHAR ) ; WhereClause whereClause = new WhereClause ( query . getWhere ( ) ) ; return new ParsedQuery ( query , whereClause , createTestIndexOneField ( ) ) ; }
48829	boolean holdsSchedulerLock ( ) { return schedulerLock . isHeldByCurrentThread ( ) ; }
48844	public boolean isReleased ( ) { return released . get ( ) ; }
48934	protected void error ( String msg , Object args [ ] , Exception e ) throws org . xml . sax . SAXException { String formattedMsg = XSLMessages . createMessage ( msg , args ) ; error ( formattedMsg , e ) ; }
48993	public static DragSourceMotionListener remove ( DragSourceMotionListener l , DragSourceMotionListener ol ) { return ( DragSourceMotionListener ) removeInternal ( l , ol ) ; }
49045	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
49069	@ NonNull public final Agera observeOn ( @ NonNull Looper looper , boolean coalesce ) { return new AgeraObserveOnLooper ( this , looper , coalesce ) ; }
49085	public Decision createDecision ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . DECISION ) ; if ( object == _NULL ) { return new DecisionImpl ( ) ; } else { return ( Decision ) object ; } }
49128	@ Override public void write ( char [ ] chr , int st , int end ) { }
49151	public static WhoAmIExtendedResult unmodifiableWhoAmIExtendedResult ( final WhoAmIExtendedResult result ) { if ( result instanceof UnmodifiableSearchResultReferenceImpl ) { return result ; } return new UnmodifiableWhoAmIExtendedResultImpl ( result ) ; }
49183	private void readObject ( java . io . ObjectInputStream in ) throws NotSerializableException { throw new NotSerializableException ( _CHAR Not serializable . '' ) ; }
49205	public boolean containsAny ( Collection < ? > collection ) { for ( Object item : collection ) if ( this . contains ( item ) ) return _BOOL ; return _BOOL ; }
49210	public static < T > java . util . List < T > dynamicQuery ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return getService ( ) . dynamicQuery ( dynamicQuery ) ; }
49221	private boolean createFolder ( ) throws ConnectorException { File dir = new File ( configuration . getTypes ( ) . get ( type ) . getPath ( ) + currentFolder + newFolderName ) ; if ( dir . exists ( ) ) { throw new ConnectorException ( Constants . Errors . CKFINDER_CONNECTOR_ERROR_ALREADY_EXIST ) ; } else { return FileUtils . mkdir ( dir , configuration ) ; } }
49268	public static Attribute create ( AttributeType attributeType , String name , ByteString value ) { return AttributeBuilder . create ( attributeType , name , Collections . singleton ( value ) ) ; }
49314	public void add ( SDPField h ) { sdpFields . add ( h ) ; }
49323	public boolean isSticky ( ) { return ( getData ( ) & _NUM ) == _NUM ; }
49358	public Query hasPhoneNumber ( ) { defaultWhere = addWhere ( defaultWhere , Where . notEqualTo ( ContactsContract . Data . HAS_PHONE_NUMBER , _NUM ) ) ; return this ; }
49359	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
49391	public static int convertToUtf32 ( String text , int idx ) { return ( text . charAt ( idx ) - _NUM ) * _NUM + text . charAt ( idx + _NUM ) - _NUM + _NUM ; }
49432	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
49486	public Iterator < E > descendingIterator ( ) { return m . descendingKeySet ( ) . iterator ( ) ; }
49489	private int pop ( ) { if ( outputStackTop > _NUM ) { return outputStack [ -- outputStackTop ] ; } else { return STACK | - ( -- owner . inputStackTop ) ; } }
49493	@ Override public Restlet createInboundRoot ( ) { final Router root = new RestletRealmRouter ( ) ; root . attach ( _CHAR / webfinger _CHAR , auditWithOAuthFilter ( new GuicedRestlet ( getContext ( ) , OpenIDConnectDiscovery . class ) ) ) ; return root ; }
49587	public void addObligation ( Obligation obligation ) throws XACMLException { if ( ! mutable ) { throw new XACMLException ( XACMLSDKUtils . xacmlResourceBundle . getString ( _CHAR objectImmutable _CHAR ) ) ; } if ( obligations == _NULL ) { obligations = new ArrayList ( ) ; } obligations . add ( obligation ) ; }
49670	public boolean hasNameValue ( String name ) { return this . containsKey ( name . toLowerCase ( ) ) ; }
49734	public Subject createSubject ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT ) ; if ( obj == _NULL ) { return new SubjectImpl ( ) ; } else { return ( Subject ) obj ; } }
49762	public org . w3c . dom . Document decryptAndReplace ( org . w3c . dom . Document encryptedDoc , java . lang . String kekAlias ) throws EncryptionException { return ep . decryptAndReplace ( encryptedDoc , kekAlias ) ; }
49805	public byte [ ] decode ( byte [ ] pArray ) { return decodeBase64 ( pArray ) ; }
49810	@ Override public String toString ( ) { return buf . toString ( ) ; }
49858	public RxGalleryFinal cropHideBottomControls ( boolean hide ) { configuration . setHideBottomControls ( hide ) ; return this ; }
49886	protected void prepareForDragging ( ) { splitPaneUI . startDragging ( ) ; }
49904	@ Override public boolean isStretchWidth ( ) { return _BOOL ; }
49924	public boolean equals ( Object o ) { if ( o instanceof AMIdentitySubject ) { AMIdentitySubject subject = ( AMIdentitySubject ) o ; return ( subjectValues . equals ( subject . subjectValues ) ) ; } return ( _BOOL ) ; }
49930	< C extends ConfigurationClient , S extends Configuration > ServerManagedObject < ? extends S > decode ( ManagedObjectPath < C , S > path , Entry configEntry ) throws DefinitionDecodingException , ServerManagedObjectDecodingException { return decode ( path , configEntry , _NULL ) ; }
49939	@ Override protected void finalize ( ) { try { if ( mWindow != _NULL ) { mCloseGuard . warnIfOpen ( ) ; close ( ) ; } } finally { super . finalize ( ) ; } }
49965	public static String formatAsGeneralizedTime ( final Date date ) { return formatAsGeneralizedTime ( date . getTime ( ) ) ; }
49998	public void end ( ) { this . postState = new Hashtable < Object , Object > ( _NUM ) ; this . object . storeState ( this . postState ) ; this . removeRedundantState ( ) ; }
50003	@ Override void validateMethod ( Request request ) throws OAuth2RestletException { if ( ! ( Method . POST . equals ( request . getMethod ( ) ) || Method . GET . equals ( request . getMethod ( ) ) ) ) { throw new OAuth2RestletException ( _NUM , _CHAR method_not_allowed _CHAR , _CHAR Required Method : GET or POST found : _CHAR + request . getMethod ( ) . getName ( ) , _NULL ) ; } }
50038	private boolean startsWithStringArray ( String sArray [ ] , String value ) { if ( value == _NULL ) return _BOOL ; for ( int i = _NUM ; i < sArray . length ; i ++ ) { if ( value . startsWith ( sArray [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
50163	static public PrintWriter log ( Throwable xcpt , PrintWriter out ) { out . println ( _CHAR ----------- _CHAR ) ; out . println ( xcpt . toString ( ) ) ; out . println ( _CHAR Stack Trace : _CHAR ) ; out . print ( getStackTrace ( xcpt ) ) ; out . println ( _CHAR ----------- _CHAR ) ; out . flush ( ) ; return out ; }
50199	public synchronized boolean intersectsSet ( NSSet otherSet ) { for ( NSObject o : set ) { if ( otherSet . containsObject ( o ) ) return _BOOL ; } return _BOOL ; }
50203	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR Internal Connection Handler _CHAR ) ; }
50288	public static boolean isForwardSuccess ( AuthContextLocal authContext , HttpServletRequest req ) { boolean isForward = forwardSuccessExists ( req ) ; if ( ! isForward ) { LoginState loginState = getLoginState ( authContext ) ; if ( loginState != _NULL ) { isForward = loginState . isForwardSuccess ( ) ; } } return isForward ; }
50300	public boolean isForReporting ( Query query ) { if ( executionTimeForLogging ( query . executionTimeInMilliseconds ( ) ) && tableForLogging ( query ) && typeForLogging ( query ) ) { return _BOOL ; } return _BOOL ; }
50303	public static String mangleNativeMethod ( String owner , String name ) { return mangleNativeMethod ( owner , name , _NULL ) ; }
50335	public void addAttribute ( AttributeInfo attribute ) { attributes . put ( attribute . getName ( ) , attribute ) ; }
50358	public void addTreeWillExpandListener ( TreeWillExpandListener tel ) { listenerList . add ( TreeWillExpandListener . class , tel ) ; }
50363	public boolean isPolicyAssigned ( String policyDN , String serviceName ) throws AMException , SSOException { throw new UnsupportedOperationException ( ) ; }
50384	public boolean isGroupMembershipSearchIndexEnabled ( ) { return attrCollector . isGroupMembershipSearchIndexEnabled ( ) ; }
50404	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
50444	public static Color fromBGR ( int blue , int green , int red ) throws IllegalArgumentException { return new Color ( red , green , blue ) ; }
50451	private Object executeMethod ( final Method method , final ApplicationContext context , final Object [ ] params ) throws PrivilegedActionException , IllegalAccessException , InvocationTargetException { if ( SecurityUtil . isPackageProtectionEnabled ( ) ) { return AccessController . doPrivileged ( new PrivilegedExecuteMethod ( method , context , params ) ) ; } else { return method . invoke ( context , params ) ; } }
50483	public boolean equals ( Object o ) { if ( o instanceof AuthenticatedUsers ) { return ( _BOOL ) ; } return ( _BOOL ) ; }
50509	@ Deprecated public void write ( byte b [ ] , int off , int len ) { if ( len < _NUM ) throw new ArrayIndexOutOfBoundsException ( len ) ; for ( int i = _NUM ; i < len ; ++ i ) write ( b [ off + i ] ) ; }
50694	@ Override public int write ( ByteBuffer src ) throws IOException { checkInterruptStatus ( ) ; return sc . write ( src ) ; }
50704	public void removeSessionList ( String userID ) { FSUtils . debug . message ( _CHAR FSSessionManager . removeSessionList : Called _CHAR ) ; userIDSessionListMap . remove ( userID . toLowerCase ( ) ) ; if ( ( agent != _NULL ) && agent . isRunning ( ) && ( idffSvc != _NULL ) ) { idffSvc . setUserIDSessionList ( ( long ) userIDSessionListMap . size ( ) ) ; } }
50712	@ Override public String toString ( ) { return toString ( _CHAR , _CHAR ) ; }
50774	public Conditions createConditions ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITIONS ) ; if ( obj == _NULL ) { return new ConditionsImpl ( ) ; } else { return ( Conditions ) obj ; } }
50784	public static long readUINT32 ( InputStream stream ) throws IOException { long result = _NUM ; for ( int i = _NUM ; i <= _NUM ; i += _NUM ) { result |= ( long ) stream . read ( ) << i ; } return result ; }
50786	public void loadIfNecessary ( ) { if ( marker == _NULL ) { JEdit . loadMode ( this ) ; if ( marker == _NULL ) L . e ( _CHAR Mode not correctly loaded , token marker is still _NULL _CHAR ) ; } }
50812	public int hashCode ( ) { return fShape . hashCode ( ) ; }
50875	public void constrainDrawRect ( int left , int top , int right , int bottom ) { contentRect . set ( left , top , right , bottom ) ; }
50882	public void addField ( MappedMember mm ) { fields . add ( mm ) ; }
50938	public Obligations createObligations ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESOURCE ) ; if ( obj == _NULL ) { return new ObligationsImpl ( ) ; } else { return ( Obligations ) obj ; } }
50954	protected void onRequestHandlerNotSpecified ( RequestContext requestContext ) throws ServletException { ViewBeanManager viewBeanManager = requestContext . getViewBeanManager ( ) ; ViewBean targetView = viewBeanManager . getViewBean ( PWResetInvalidURLViewBean . class ) ; targetView . forwardTo ( requestContext ) ; throw new CompleteRequestException ( ) ; }
51018	public void addTreeExpansionListener ( TreeExpansionListener tel ) { if ( settingUI ) { uiTreeExpansionListener = tel ; } listenerList . add ( TreeExpansionListener . class , tel ) ; }
51055	public void assign_selected_to_new_net ( ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; StateInteractive new_state = ( ( StateSelectedItem ) interactive_state ) . assign_items_to_new_net ( ) ; set_interactive_state ( new_state ) ; }
51084	public static Option bufferSize ( int value ) { return new BufferSizeOption ( value ) ; }
51089	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
51134	public String encodedPassword ( ) { if ( password . isEmpty ( ) ) return _CHAR _CHAR ; int passwordStart = url . indexOf ( _CHAR , scheme . length ( ) + _NUM ) + _NUM ; int passwordEnd = url . indexOf ( _CHAR ) ; return url . substring ( passwordStart , passwordEnd ) ; }
51140	@ Override public Writer append ( char c ) { return this ; }
51144	public boolean isValid ( ) { return valid ; }
51168	public void postRotate ( float deltaAngle ) { postRotate ( deltaAngle , mCropRect . centerX ( ) , mCropRect . centerY ( ) ) ; }
51180	public boolean isPending ( ) { return data . get ( ATTR_PENDING ) . asBoolean ( ) ; }
51209	public void enableDragItem ( @ NonNull ItemTouchHelper itemTouchHelper ) { enableDragItem ( itemTouchHelper , NO_TOGGLE_VIEW , _BOOL ) ; }
51230	public SubjectConfirmationData createSubjectConfirmationData ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION_DATA ) ; if ( obj == _NULL ) { return new SubjectConfirmationDataImpl ( ) ; } else { return ( SubjectConfirmationData ) obj ; } }
51303	public boolean passed ( ) { return getSkippedTestCases ( ) . isEmpty ( ) && getFailedTestCases ( ) . isEmpty ( ) ; }
51310	@ Override public synchronized boolean isEmpty ( ) { return elementCount == _NUM ; }
51331	private FieldNode findField ( ClassNode cn , String name , String desc ) { if ( cn == _NULL ) { return _NULL ; } for ( FieldNode fn : cn . fields ) { if ( fn . desc . equals ( desc ) && fn . name . equals ( name ) ) { return fn ; } } return _NULL ; }
51371	@ Override public boolean isStretchHeight ( ) { return _BOOL ; }
51404	public boolean isConfiguredInstance ( ) { return getStateAccess ( ) . getInstanceData ( ) . isConfiguredInstance ( ) ; }
51442	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { Reject . ifTrue ( tokenFilter . getReturnFields ( ) . isEmpty ( ) ) ; handler . processResults ( adapter . partialQuery ( tokenFilter ) ) ; }
51486	final boolean isOwnedBy ( AbstractQueuedSynchronizer sync ) { return sync == AbstractQueuedSynchronizer . this ; }
51495	protected void clearAllData ( SSOTokenID tokenID ) { boolean removed = _BOOL ; String key = tokenID . toString ( ) ; synchronized ( mapTokenIDs ) { removed = ( mapTokenIDs . remove ( key ) != _NULL ) ; } }
51503	private int pop ( ) { if ( outputStackTop > _NUM ) { return outputStack [ -- outputStackTop ] ; } else { return STACK | - ( -- owner . inputStackTop ) ; } }
51534	public QRCallbackBuilder withUriHost ( String host ) { this . host = host ; return this ; }
51567	public void paintTreeCellBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
51759	@ SuppressWarnings ( _CHAR deprecation _CHAR ) @ Deprecated public final void stop ( ) { if ( stopHelper ( ) ) { Thread . currentThread ( ) . stop ( ) ; } }
51775	public void startScroll ( int startX , int startY , int dx , int dy , int duration ) { mMode = SCROLL_MODE ; mScrollerX . startScroll ( startX , dx , duration ) ; mScrollerY . startScroll ( startY , dy , duration ) ; }
51794	private void verifyLogin ( LoginModule ... modules ) throws LoginException { for ( LoginModule module : modules ) { verify ( module ) . login ( ) ; } }
51854	public static FontProgram createRegisteredFont ( String fontName ) throws java . io . IOException { return fontRegisterProvider . getFont ( fontName , FontConstants . UNDEFINED ) ; }
51900	Clause buildStringValueClause ( String propTable , String operand , String placeholder ) { return where ( propTable + _CHAR . propvalue _CHAR + operand + _CHAR $ { _CHAR + placeholder + _CHAR } _CHAR ) ; }
51907	public static Fragment6 newInstance ( int sectionNumber ) { Fragment6 fragment = new Fragment6 ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
51933	boolean isSystemTheme ( ) { return ( getClass ( ) == MetalHighContrastTheme . class ) ; }
51943	public boolean isHumanReadable ( ) { return impl . isHumanReadable ( ) ; }
51960	public static boolean isEncoded ( ByteSequence value ) { try { decodeAuthPassword ( value . toString ( ) ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
51974	public void addOperation ( OperationInfo operation ) { operations . put ( createOperationKey ( operation ) , operation ) ; }
51977	public static int countByUuid ( java . lang . String uuid ) { return getPersistence ( ) . countByUuid ( uuid ) ; }
51999	protected OSQLSynchQuery < ODocument > createQueryObject ( String queryString ) { return new OSQLSynchQuery < ODocument > ( queryString ) ; }
52003	private static void createFile ( File file ) throws IOException { if ( ! file . exists ( ) ) { createDirectory ( file . getParent ( ) ) ; if ( ! file . createNewFile ( ) ) { throw new IOException ( _CHAR Failed to create _CHAR + file . getPath ( ) ) ; } } }
52006	public boolean isSealed ( URL url ) { return sealBase != _NULL && sealBase . sameFile ( url ) ; }
52012	private String urlEncode ( String value ) { if ( _NULL == value || value . length ( ) == _NUM ) { return _NULL ; } try { return URLEncoder . encode ( value , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException e ) { return _NULL ; } }
52043	public boolean aliasInUse ( final String alias ) throws KeyStoreException { ensureValid ( alias , CERT_ALIAS_MSG ) ; KeyStore keyStore = getKeyStore ( ) ; return keyStore != _NULL && keyStore . containsAlias ( alias ) ; }
52065	@ Deprecated public boolean isSharped ( byte id ) { if ( id == getId ( _BOOL ) ) { return _BOOL ; } else if ( id == getId ( _BOOL ) ) { return _BOOL ; } else { throw new IllegalArgumentException ( _CHAR The id is n _CHAR_CHAR ) ; } }
52084	protected void detach ( ) { wrappedConnection = _NULL ; connManager = _NULL ; duration = Long . MAX_VALUE ; }
52103	public boolean isLogEnabled ( ) { return logStatus ; }
52183	public boolean isEnableReplicationSubcommand ( ) { return isSubcommand ( ENABLE_REPLICATION_SUBCMD_NAME ) ; }
52190	String handleGetRestrictedTokenIdRemotely ( SessionID masterSid , TokenRestriction restriction ) { try { return sessionOperationStrategy . getOperation ( masterSid ) . getRestrictedTokenId ( masterSid , restriction ) ; } catch ( Exception ex ) { sessionDebug . error ( _CHAR Failed to create restricted token remotely _CHAR , ex ) ; } return _NULL ; }
52235	public static IngredientsFragment newInstance ( Recipe recipe , int sectionNumber ) { IngredientsFragment fragment = new IngredientsFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
52253	public static FontProgram createType1Font ( String metricsPath , String binaryPath ) throws java . io . IOException { return createType1Font ( metricsPath , binaryPath , DEFAULT_CACHED ) ; }
52269	public static Fragment7 newInstance ( int sectionNumber ) { Fragment7 fragment = new Fragment7 ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
52298	public void loadLocal ( final int local , final Type type ) { setLocalType ( local , type ) ; loadInsn ( type , local ) ; }
52332	public void rescanCurrentDirectory ( ) { getUI ( ) . rescanCurrentDirectory ( this ) ; }
52335	public URLConnection openConnection ( ) throws IOException { return streamHandler . openConnection ( this ) ; }
52349	public boolean hasNameValue ( String name ) { return nameValueMap . containsKey ( name . toLowerCase ( ) ) ; }
52361	public V remove ( Object key ) { return doRemove ( key , _NULL ) ; }
52368	public String toString ( ) { return ( toString ( _BOOL , _BOOL ) ) ; }
52398	public void checkIsoConformance ( Object obj , IsoKey key ) { }
52432	public boolean isExpanded ( TreePath path ) { if ( path == _NULL ) return _BOOL ; Object value ; do { value = expandedState . get ( path ) ; if ( value == _NULL || ! ( ( Boolean ) value ) . booleanValue ( ) ) return _BOOL ; } while ( ( path = path . getParentPath ( ) ) != _NULL ) ; return _BOOL ; }
52434	public final int length ( ) { return ( m_lastChunk << m_chunkBits ) + m_firstFree ; }
52437	public static InputMethodManager peekInstance ( ) { return InputMethodManager . peekInstance ( ) ; }
52441	boolean cover ( CSN covered ) { return state . cover ( covered ) ; }
52442	public void loadArgs ( ) { loadArgs ( _NUM , argumentTypes . length ) ; }
52481	protected void checkIsoConformance ( ) { }
52493	public static Fragment4 newInstance ( int sectionNumber ) { Fragment4 fragment = new Fragment4 ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
52515	public void stopTracking ( ) { if ( ! isTracking ) { return ; } Session session = getSession ( ) ; if ( session != _NULL ) { session . removeCallback ( callback ) ; } broadcastManager . unregisterReceiver ( receiver ) ; isTracking = _BOOL ; }
52532	public boolean isObfuscated ( final Argument argument ) { return obfuscatedArgs . contains ( argument ) ; }
52538	public ContinuousQueryTask continuousQuery ( TokenFilter filter , ContinuousQueryListener listener ) { return new ContinuousQueryTask ( filter , listener ) ; }
52567	private void writeObject ( java . io . ObjectOutputStream out ) throws NotSerializableException { throw new NotSerializableException ( _CHAR Not serializable . '' ) ; }
52681	@ NonNull public final Agera doOnUpdate ( @ NonNull Runnable run ) { return new AgeraDoOnUpdate ( this , run ) ; }
52729	@ Override public boolean rotateFile ( RotatableLogFile writer ) { long fileSize = writer . getBytesWritten ( ) ; return fileSize >= sizeLimit ; }
52751	public boolean isInitializeReplicationSubcommand ( ) { return isSubcommand ( INITIALIZE_REPLICATION_SUBCMD_NAME ) ; }
52767	private void unregisterServerHandler ( ServerHandler sHandler ) { if ( sHandler . isReplicationServer ( ) ) { connectedRSs . remove ( sHandler . getServerId ( ) ) ; } else { connectedDSs . remove ( sHandler . getServerId ( ) ) ; } }
52792	@ Override public < T > List < T > dynamicQuery ( DynamicQuery dynamicQuery ) { return fooPersistence . findWithDynamicQuery ( dynamicQuery ) ; }
52809	public static void createBackendOnline ( String backendName , Collection < DN > baseDNs , ManagedObjectDefinition < ? extends BackendCfgClient , ? extends BackendCfg > backendType , ConnectionWrapper conn ) throws Exception { createBackend ( conn . getRootConfiguration ( ) , backendName , baseDNs , backendType ) ; }
52820	public boolean shutdownRequested ( ) { queueReadLock . lock ( ) ; try { return shutdownRequested ; } finally { queueReadLock . unlock ( ) ; } }
52853	public synchronized boolean isSubsetOfSet ( NSSet otherSet ) { for ( NSObject o : set ) { if ( ! otherSet . containsObject ( o ) ) return _BOOL ; } return _BOOL ; }
52895	public Advice createAdvice ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ADVICE ) ; if ( obj == _NULL ) { return new AdviceImpl ( ) ; } else { return ( Advice ) obj ; } }
52905	@ Override public boolean isStretchHeight ( ) { return _BOOL ; }
53009	public static PlaceholderFragment newInstance ( int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
53071	public static Color fromRGB ( int red , int green , int blue ) throws IllegalArgumentException { return new Color ( red , green , blue ) ; }
53073	public void write ( Writer out , Document doc , int pos , int len ) throws IOException , BadLocationException { throw new IOException ( _CHAR RTF is an _NUM - bit format _CHAR ) ; }
53081	public DsnNet add_net ( DsnNetId p_net_id ) { DsnNet result ; if ( nets . containsKey ( p_net_id ) ) { result = _NULL ; } else { result = new DsnNet ( p_net_id ) ; nets . put ( p_net_id , result ) ; } return result ; }
53089	private boolean containsObjectClassByName ( String objectClassName ) { for ( String ocName : objectClasses . values ( ) ) { if ( objectClassName . equalsIgnoreCase ( ocName ) ) { return _BOOL ; } } return _BOOL ; }
53098	public static < T > Promise < T , ResourceException > generateBadRequestException ( String msg ) { return new BadRequestException ( msg ) . asPromise ( ) ; }
53109	public String toString ( ) { ensureCache ( ) ; return textLine . toString ( ) ; }
53135	public void doGroupAction ( Object obj ) { if ( target != _NULL ) { target . doGroupAction ( obj ) ; } }
53195	public void paintTreeCellBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
53196	public static RealAttributesOnlyRequestControl newControl ( final boolean isCritical ) { return isCritical ? CRITICAL_INSTANCE : NONCRITICAL_INSTANCE ; }
53289	public boolean equals ( Object o ) { if ( o instanceof LDAPUsers ) { LDAPUsers g = ( LDAPUsers ) o ; if ( ( selectedUserDNs != _NULL ) && ( g . selectedUserDNs != _NULL ) && ( selectedUserDNs . equals ( g . selectedUserDNs ) ) ) { return _BOOL ; } } return _BOOL ; }
53317	private synchronized void trim ( ) { while ( mCurrentSize > mSizeLimit ) { byte [ ] buf = mBuffersByLastUse . remove ( _NUM ) ; mBuffersBySize . remove ( buf ) ; mCurrentSize -= buf . length ; } }
53328	public int size ( ) { return map . size ( ) ; }
53376	static String convertRealmDNToPath ( String realmDN ) { return coreWrapper . convertOrgNameToRealmName ( realmDN ) ; }
53377	private String formatName ( final String name ) { final char firstCharacter = Character . toUpperCase ( name . charAt ( _NUM ) ) ; final String remainingCharacters = name . substring ( _NUM ) ; return firstCharacter + remainingCharacters ; }
53382	public static boolean isWeakKey ( byte [ ] key , int offset ) { return isWeakKey ( key , offset , key . length - offset ) ; }
53393	public static String encodeBytes ( byte [ ] source ) { return encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; }
53416	@ BeforeClass public void before ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
53427	public Iterator < E > descendingIterator ( ) { return m . descendingKeySet ( ) . iterator ( ) ; }
53437	public boolean isOn ( ) { return on ; }
53455	public static VariableModification < byte [ ] > delete ( final int startPosition , final int count ) { return new ByteArrayDeleteModification ( startPosition , count ) ; }
53502	public boolean flushOutbound ( ) throws IOException { return _BOOL ; }
53506	public WorldCreator environment ( World . Environment env ) { this . environment = env ; return this ; }
53546	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
53575	@ Override public void closeInvoked ( ) { }
53621	@ Override public boolean removeAll ( Collection c ) { if ( c instanceof CaseInsensitiveHashSet ) { return super . removeAll ( c ) ; } else { Set < String > ciHashSet = new CaseInsensitiveHashSet ( c ) ; return super . removeAll ( ciHashSet ) ; } }
53641	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
53648	public void popCurrentTemplateRuleIsNull ( ) { m_currentTemplateRuleIsNull . pop ( ) ; }
53671	@ Override public < T > java . util . List < T > dynamicQuery ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQuery ( dynamicQuery ) ; }
53686	@ Override void validateContentType ( Request request ) throws InvalidRequestException { if ( request . getEntity ( ) != _NULL && request . getEntity ( ) . getSize ( ) > _NUM && ! MediaType . APPLICATION_WWW_FORM . equals ( request . getEntity ( ) . getMediaType ( ) ) ) { logger . error ( _CHAR Invalid Content Type for token endpoint '' ) ; throw new InvalidRequestException ( _CHAR Invalid Content Type _CHAR ) ; } }
53702	public synchronized boolean isSubsetOfSet ( NSSet otherSet ) { for ( NSObject o : set ) { if ( ! otherSet . containsObject ( o ) ) return _BOOL ; } return _BOOL ; }
53704	private void animateProgressToContent ( ) { AnimatorSet animatorSet = new AnimatorSet ( ) ; FrameLayout targetView = ( ( FrameLayout ) getView ( ) ) ; animatorSet . play ( createCircularReveal ( targetView ) ) . with ( createColorChange ( targetView ) ) ; animatorSet . start ( ) ; }
53706	public boolean isStatusReplicationSubcommand ( ) { return isSubcommand ( STATUS_REPLICATION_SUBCMD_NAME ) ; }
53709	@ Override public void write ( byte [ ] b ) throws IOException { }
53724	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized E pop ( ) { if ( elementCount == _NUM ) { throw new EmptyStackException ( ) ; } final int index = -- elementCount ; final E obj = ( E ) elementData [ index ] ; elementData [ index ] = _NULL ; modCount ++ ; return obj ; }
53769	public static boolean isTargetFilterApplicable ( Aci aci , AciTargetMatchContext matchCtx ) { TargetFilter targetFilter = aci . getTargets ( ) . getTargetFilter ( ) ; return targetFilter == _NULL || targetFilter . isApplicable ( matchCtx ) ; }
53802	public static void main ( final String [ ] args ) { parseArgs ( args ) ; connect ( ) ; }
53849	public void ensureFileIsVisible ( File f ) { getUI ( ) . ensureFileIsVisible ( this , f ) ; }
53859	public void restart ( ) { mInit = _BOOL ; launchInspector ( WXEnvironment . sRemoteDebugMode ) ; if ( mWXBridge == _NULL ) { mWXBridge = new WXBridge ( ) ; } }
53928	public void removeItemListener ( ItemListener l ) { listenerList . remove ( ItemListener . class , l ) ; }
53963	public static < T > Observable . Transformer < T , T > applyComputationSchedulers ( ) { return ( Observable . Transformer < T , T > ) computationTransformer ; }
53965	public static AdjustmentListener remove ( AdjustmentListener l , AdjustmentListener oldl ) { return ( AdjustmentListener ) removeInternal ( l , oldl ) ; }
53994	@ Override public boolean equals ( Object that ) { if ( this == that ) { return _BOOL ; } if ( ! ( that instanceof EntryID ) ) { return _BOOL ; } return this . id == ( ( EntryID ) that ) . id ; }
53996	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
54000	@ Override public boolean rotateFile ( RotatableLogFile writer ) { long currInterval = TimeThread . getTime ( ) - writer . getLastRotationTime ( ) . getTimeInMillis ( ) ; return currInterval > timeInterval ; }
54001	@ Deprecated public static void accessStatistic ( String name , long currentTimeMillis , long costTimeMillis , long bizProcessTime , AccessStatus accessStatus ) { Application application = new Application ( URLParamType . application . getValue ( ) , URLParamType . module . getValue ( ) ) ; accessStatistic ( name , application , currentTimeMillis , costTimeMillis , bizProcessTime , accessStatus ) ; }
54050	public boolean equal_at_end ( int line_idx , PlaPointInt p_point ) { if ( p_point == _NULL ) return _BOOL ; PlaPoint corner = corner ( line_idx ) ; return corner . equals ( p_point ) ; }
54084	@ Override public < T > java . util . List < T > dynamicQuery ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQuery ( dynamicQuery ) ; }
54093	@ NonNull public static Interpolator multiply ( Interpolator interpolator , float multiplier ) { return multiply ( interpolator , constant ( multiplier ) ) ; }
54205	private JsonValue deleteUser ( String id ) throws Exception { System . out . println ( _CHAR _NUM . Delete a user : _CHAR ) ; HttpResponse < String > response = Unirest . delete ( azureEndpoint + _CHAR / account / _CHAR + id ) . header ( _CHAR x - openidm - username _CHAR , _CHAR openidm - admin _CHAR ) . header ( _CHAR x - openidm - password _CHAR , _CHAR openidm - admin _CHAR ) . asString ( ) ; return json ( readJson ( response . getBody ( ) ) ) ; }
54218	public Set < String > searchReferralPrivilegeNames ( Set < SearchFilter > filters , boolean boolAnd , int numOfEntries , boolean sortResults , boolean ascendingOrder ) throws EntitlementException { return searchReferralPrivilegeNames ( filters , getAdminSubject ( ) , getRealm ( ) , boolAnd , numOfEntries , sortResults , ascendingOrder ) ; }
54236	public KeyInfoConfirmationData createKeyInfoConfirmationData ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . KEYINFO_CONFIRMATION_DATA ) ; if ( obj == _NULL ) { return new KeyInfoConfirmationDataImpl ( ) ; } else { return ( KeyInfoConfirmationData ) obj ; } }
54270	public static Function < JsonValue , JsonValue , JsonValueException > resolvedLocation ( ) { return new ResolveLocationJsonValueFunction ( ) ; }
54294	public void draw ( ITeslaHolder holder ) { draw ( holder . getStoredPower ( ) , holder . getCapacity ( ) ) ; }
54341	public static String buildCookieString ( String url , String cookieStr , short encodingScheme , boolean escape ) { return ( encodingScheme == SessionUtils . QUERY ) ? writeUrlInQuery ( url , cookieStr , escape ) : writeUrlInPath ( url , cookieStr , encodingScheme ) ; }
54398	public static AdvicesHandleableByAMResponse parseXML ( Node node ) { return new AdvicesHandleableByAMResponse ( ( Set ) PolicyUtils . parseAttributeValuePairs ( node ) . get ( ADVICES_HANDLEABLE_BY_AM ) ) ; }
54432	void waitIfPending ( DN parentDN ) throws InterruptedException { final CountDownLatch l = pendingMap . get ( parentDN ) ; if ( l != _NULL ) { l . await ( ) ; } }
54487	public boolean encryptData ( ) { return encryptData ; }
54495	void createPresenter ( ) { P presenter = delegateCallback . getPresenter ( ) ; if ( presenter == _NULL ) { presenter = delegateCallback . createPresenter ( ) ; } if ( presenter == _NULL ) { throw new NullPointerException ( _CHAR Presenter is _NULL ! Do you return _NULL in createPresenter ( ) ? _CHAR ) ; } delegateCallback . setPresenter ( presenter ) ; }
54668	private static Issuer createIssuer ( String entityID ) throws SAML2Exception { Issuer issuer = AssertionFactory . getInstance ( ) . createIssuer ( ) ; issuer . setValue ( entityID ) ; return issuer ; }
54682	private boolean isOneOf ( char ch , final char [ ] charray ) { boolean result = _BOOL ; for ( char element : charray ) { if ( ch == element ) { result = _BOOL ; break ; } } return result ; }
54712	public final void init ( int size , SecureRandom random ) { paramGenSpi . engineInit ( size , random ) ; }
54737	public static Fragment3 newInstance ( int sectionNumber ) { Fragment3 fragment = new Fragment3 ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
54744	private static Exception extractException ( Exception e ) { while ( e instanceof PrivilegedActionException ) { e = ( ( PrivilegedActionException ) e ) . getException ( ) ; } return e ; }
54747	public void checkNumberArgs ( int argNum ) throws WrongNumberArgsException { if ( argNum > _NUM ) reportWrongNumberArgs ( ) ; }
54794	public static boolean isCurrentVersionOlderThan ( final String latestVersion ) { return VersionCheck . isSmallerThan ( VersionCheck . retrieveCurrentVersion ( ) , latestVersion ) ; }
54854	@ Override protected void detach ( ) { super . detach ( ) ; poolEntry = _NULL ; }
54858	public PermissionCollection newPermissionCollection ( ) { return new UnresolvedPermissionCollection ( ) ; }
54875	public void startTable ( int height , int width ) { }
54880	public boolean hasPurchase ( String sku ) { return mPurchaseMap . containsKey ( sku ) ; }
54909	public Subject createSubject ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . SUBJECT ) ; if ( obj == _NULL ) { return new SubjectImpl ( ) ; } else { return ( Subject ) obj ; } }
54973	@ Override public < T > java . util . List < T > dynamicQuery ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQuery ( dynamicQuery ) ; }
54991	public static int countByField2 ( boolean field2 ) { return getPersistence ( ) . countByField2 ( field2 ) ; }
54995	public static final Signum of ( double p_value ) { if ( p_value > _NUM ) { return POSITIVE ; } else if ( p_value < _NUM ) { return NEGATIVE ; } else { return ZERO ; } }
55022	public List < Object > components ( ) { return Collections . unmodifiableList ( components ) ; }
55073	private void dropAllTables ( SQLiteDatabase db ) { db . execSQL ( _CHAR DROP TABLE IF EXISTS _CHAR + HistoryContract . HistoryEntry . TABLE_NAME ) ; }
55084	private ExpandRoomFreespaceComplete add_complete_room ( ExpandRoomFreespaceIncomplete p_room ) { ExpandRoomFreespaceComplete completed_room = ( ExpandRoomFreespaceComplete ) calculate_doors ( p_room ) ; if ( completed_room == _NULL ) return _NULL ; if ( completed_room . get_shape ( ) . dimension ( ) != PlaDimension . AREA ) return _NULL ; complete_expansion_rooms . add ( completed_room ) ; art_search_tree . insert ( completed_room ) ; return completed_room ; }
55085	@ Override public String toString ( ) { return String . valueOf ( value ) ; }
55097	public V remove ( Object key ) { return doRemove ( key , _NULL ) ; }
55115	public static PlaceholderFragment newInstance ( int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
55116	static String createUTCTimeValue ( final Date d ) { synchronized ( DATE_FORMAT_LOCK ) { return DATE_FORMAT . format ( d ) ; } }
55130	public boolean equals ( Object o ) { if ( o instanceof LDAPGroups ) { LDAPGroups g = ( LDAPGroups ) o ; if ( ( selectedGroupDNs != _NULL ) && ( g . selectedGroupDNs != _NULL ) && ( selectedGroupDNs . equals ( g . selectedGroupDNs ) ) ) { return _BOOL ; } } return _BOOL ; }
55135	public void zoomInImage ( float deltaScale ) { zoomInImage ( deltaScale , mCropRect . centerX ( ) , mCropRect . centerY ( ) ) ; }
55209	public int right_x_value ( int p_y ) { int result = Math . min ( oct_rx , oct_urx - p_y ) ; return Math . min ( result , oct_lrx + p_y ) ; }
55263	public boolean isInactive ( ) { return isInactive ; }
55268	public SIPHeader parse ( ) throws ParseException { String name = lexer . getNextToken ( _CHAR ) ; lexer . consume ( _NUM ) ; String body = lexer . getLine ( ) . trim ( ) ; ExtensionHeaderImpl retval = new ExtensionHeaderImpl ( name ) ; retval . setValue ( body ) ; return retval ; }
55302	boolean equals ( ClearanceMatrixEntry p_other ) { for ( int i = _NUM ; i < layer_structure . size ( ) ; ++ i ) { if ( layer [ i ] != p_other . layer [ i ] ) { return _BOOL ; } } return _BOOL ; }
55372	public static String formatSeconds ( Object obj ) { long time =- _NUM ; if ( obj instanceof Long ) { time = ( ( Long ) obj ) . longValue ( ) ; } else if ( obj instanceof Integer ) { time = ( ( Integer ) obj ) . intValue ( ) ; } return ( time + _CHAR s _CHAR ) ; }
55411	public void removeTreeWillExpandListener ( TreeWillExpandListener tel ) { listenerList . remove ( TreeWillExpandListener . class , tel ) ; }
55415	public static byte [ ] createByteArray ( int size , String data ) { byte [ ] byteArray = new byte [ size ] ; for ( int i = _NUM ; i < size ; i ++ ) { byteArray [ i ] = Byte . parseByte ( data , _NUM ) ; } return byteArray ; }
55423	public boolean equal_at_start ( int line_idx , PlaPointInt p_point ) { if ( p_point == _NULL ) return _BOOL ; PlaPoint corner = corner ( line_idx - _NUM ) ; return corner . equals ( p_point ) ; }
55427	public static void write ( File file , NSObject root ) throws IOException { OutputStream out = new FileOutputStream ( file ) ; write ( out , root ) ; out . close ( ) ; }
55432	protected void clearCoRoutine ( ) { clearCoRoutine ( _NULL ) ; }
55512	public static int countByField2 ( boolean field2 ) { return getPersistence ( ) . countByField2 ( field2 ) ; }
55513	public static boolean isConfigured ( ServletContext servletctx ) { return isConfiguredFlag ; }
55550	public void checkNumberArgs ( int argNum ) throws WrongNumberArgsException { }
55573	public int upper_y_value ( int p_x ) { int result = Math . min ( oct_uy , p_x - oct_ulx ) ; return Math . min ( result , oct_urx - p_x ) ; }
55636	public void updateTitle ( ) { if ( panel . getTitle ( ) != _NULL ) { setTitle ( INFO_CTRL_PANEL_GENERIC_TITLE . get ( DynamicConstants . PRODUCT_NAME , panel . getTitle ( ) ) . toString ( ) ) ; } }
55673	@ NonNull public final Agera observeOn ( @ NonNull Looper looper ) { return new AgeraObserveOnLooper ( this , looper , _BOOL ) ; }
55695	protected void paintText ( Graphics g , AbstractButton b , Rectangle textRect , String text ) { paintText ( g , ( JComponent ) b , textRect , text ) ; }
55743	public boolean isUserNegotiated ( ) { return ( addr [ _NUM ] == ( byte ) _NUM ) && ( addr [ _NUM ] == ( byte ) _NUM ) && ( addr [ _NUM ] == ( byte ) _NUM ) && ( addr [ _NUM ] == ( byte ) _NUM ) ; }
55773	public String toString ( ) { return ( toXML ( ) ) ; }
55781	public Iterator < E > descendingIterator ( ) { return m . descendingKeySet ( ) . iterator ( ) ; }
55783	public static double distanceToRadians ( double distance ) throws TurfException { return distanceToRadians ( distance , TurfConstants . UNIT_DEFAULT ) ; }
55787	protected boolean isDirectorySelected ( ) { return directorySelected ; }
55829	@ Override public Writer append ( CharSequence csq , int start , int end ) { return this ; }
55866	@ Override public String toString ( ) { StringBuilder risul = new StringBuilder ( _NUM ) ; risul . append ( _CHAR SearchTreeManager / n _CHAR ) ; risul . append ( _CHAR methods : get_default_tree ( ) \ n _CHAR ) ; return risul . toString ( ) ; }
55924	public static synchronized void clearSystemOutContents ( ) { redirectedSystemOut . reset ( ) ; }
55930	public void addBinaryAttr ( Attr attr ) { Attr attr1 = findAttribute ( attr . getName ( ) ) ; if ( attr1 == _NULL ) { _attrs . add ( attr ) ; } else { attr1 . addValues ( attr . getByteValues ( ) ) ; } }
55973	public static synchronized void clearSystemErrContents ( ) { redirectedSystemErr . reset ( ) ; }
56038	public boolean isRunning ( ) { return running ; }
56063	public void resetDebug ( String mf ) { mergeAllMode = _CHAR on _CHAR . equals ( mf ) ; setDebug ( SystemPropertiesManager . get ( DebugConstants . CONFIG_DEBUG_LEVEL ) ) ; debugFile = _NULL ; }
56125	public static StringArgument adminUid ( final LocalizableMessage description ) throws ArgumentException { return adminUidArgument ( _BOOL , description ) ; }
56141	public void updateStandardObjectClass ( ObjectClass oc , Schema schema ) { standardObjectClassPanel . update ( oc , schema ) ; schemaElementPanel = standardObjectClassPanel ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , standardObjectClassPanel . getTitle ( ) . toString ( ) ) ; }
56149	public E poll ( ) { final Node < E > f = first ; return ( f == _NULL ) ? _NULL : unlinkFirst ( f ) ; }
56190	public static SearchResultReference newSearchResultReference ( final String uri ) { Reject . ifNull ( uri ) ; return new SearchResultReferenceImpl ( uri ) ; }
56211	public void addDescription ( String description ) { this . description = description ; }
56212	public StatusCode createStatusCode ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_CODE ) ; if ( object == _NULL ) { return new StatusCodeImpl ( ) ; } else { return ( StatusCode ) object ; } }
56246	public void close ( ) throws IOException { if ( ! this . closed ) { this . closed = _BOOL ; this . out . flush ( ) ; } }
56256	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
56273	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getContext ( ) , getRequest ( ) , getResponse ( ) ) ; }
56284	public static byte [ ] ipStrToBytes ( String ip ) throws IOException { if ( ! InetAddress . isNumeric ( ip ) ) { throw new IOException ( _CHAR Not an IP address : _CHAR + ip ) ; } return InetAddress . getByName ( ip ) . getAddress ( ) ; }
56295	public static synchronized void deregisterSupportedLDAPVersion ( int supportedLDAPVersion , ConnectionHandler < ? > connectionHandler ) { List < ConnectionHandler < ? >> handlers = directoryServer . supportedLDAPVersions . get ( supportedLDAPVersion ) ; if ( handlers != _NULL ) { handlers . remove ( connectionHandler ) ; if ( handlers . isEmpty ( ) ) { directoryServer . supportedLDAPVersions . remove ( supportedLDAPVersion ) ; } } }
56313	private void onlyKeepAttributesWithAllOptions ( List < Attribute > attributes , AttributeDescription attributeDescription ) { for ( Iterator < Attribute > it = attributes . iterator ( ) ; it . hasNext ( ) ; ) { Attribute a = it . next ( ) ; if ( ! a . getAttributeDescription ( ) . isSubTypeOf ( attributeDescription ) ) { it . remove ( ) ; } } }
