63	public boolean hasAnyAuthority ( Collection < String > auths ) { Set < String > all = new HashSet < > ( getAllAuthorities ( ) ) ; return all . removeAll ( auths ) ; }
81	public static void writeln ( String fileName , List < String > lines ) { String [ ] a = lines . toArray ( new String [ lines . size ( ) ] ) ; writeln ( fileName , a ) ; }
88	@ Override public final void skip ( final int num ) { seek ( getPosition ( ) + num ) ; }
95	public static double [ ] readDoubles ( String filename ) { return new In ( filename ) . readAllDoubles ( ) ; }
111	private boolean shouldBurnFat ( ) { return this . getSaturationLevel ( ) > ( float ) ( ( this . getFoodLevel ( ) + _NUM ) / _NUM ) * _NUM . _NUM ; }
121	public void fitScreen ( ) { Matrix save = mFitScreenMatrixBuffer ; mViewPortHandler . fitScreen ( save ) ; mViewPortHandler . refresh ( save , this , _BOOL ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
184	@ Override public XSSimpleType createTypeList ( String name , String targetNamespace , short finalSet , XSSimpleType itemType , XSObjectList annotations ) { return new XSSimpleTypeDecl ( name , targetNamespace , finalSet , ( XSSimpleTypeDecl ) itemType , _BOOL , annotations ) ; }
185	public boolean isZoomOverItem ( ) { return m_zoomOverItem ; }
187	private void createIntepretation ( Interpretation interpretation , HttpServletRequest request , HttpServletResponse response ) { interpretationService . saveInterpretation ( interpretation ) ; response . addHeader ( _CHAR Location _CHAR , InterpretationSchemaDescriptor . API_ENDPOINT + _CHAR / _CHAR + interpretation . getUid ( ) ) ; webMessageService . send ( WebMessageUtils . created ( _CHAR Interpretation created _CHAR ) , response , request ) ; }
191	public boolean interiorContains ( double p ) { if ( p == - S2 . M_PI ) { p = S2 . M_PI ; } if ( isInverted ( ) ) { return p > lo ( ) || p < hi ( ) ; } else { return ( p > lo ( ) && p < hi ( ) ) || isFull ( ) ; } }
206	public void onFailure ( String responseBody , Throwable error ) { }
214	public static DLSN deserialize ( String dlsn ) { byte [ ] data = Base64 . decodeBase64 ( dlsn ) ; return deserializeBytes ( data ) ; }
262	public VideoGetAlbumsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
267	public boolean addAll ( PointsToSetInternal other , PointsToSetInternal exclude ) { if ( exclude != _NULL ) { throw new RuntimeException ( _CHAR NYI _CHAR ) ; } return newSet . addAll ( other , oldSet ) ; }
280	private void onSearchPanelFirstView ( ) { if ( mIsSearchPanelFullyPreloaded ) { logSearchPanelLoadDuration ( _BOOL , _NUM ) ; } else { mSearchViewStartTimeNs = System . nanoTime ( ) ; } }
286	@ Override public StringBuffer format ( final long value , final StringBuffer buffer , final FieldPosition position ) { return format ( Long . valueOf ( value ) , buffer , position ) ; }
310	public static < T > Type < T > valueOf ( final ParameterizedType type ) { return valueOf ( ( Class < T > ) type . getRawType ( ) , type . getActualTypeArguments ( ) ) ; }
342	public void updateCommandTag ( final CommandTagUpdate commandTagUpdate , final SourceCommandTag commandTag ) throws IllegalAccessException , NoSuchFieldException { fillNonNullFields ( commandTagUpdate , commandTag , CHANGE_ID_FIELD , COMMAND_TAG_ID_FIELD , EQUIPMENT_ID_FIELD ) ; removeListOfFields ( commandTagUpdate . getFieldsToRemove ( ) , commandTag ) ; if ( commandTagUpdate . getHardwareAddressUpdate ( ) != _NULL ) { updateHardwareAddress ( commandTagUpdate . getHardwareAddressUpdate ( ) , commandTag . getHardwareAddress ( ) ) ; } }
379	private static String convertToQuotedString ( String s ) { if ( s == _NULL || s . isEmpty ( ) ) { return _NULL ; } if ( s . charAt ( _NUM ) == _CHAR_CHAR && s . charAt ( s . length ( ) - _NUM ) == _CHAR_CHAR ) { return s ; } return _CHAR_CHAR + s + _CHAR_CHAR ; }
388	@ Override public void flush ( ) throws IOException { try { out . flush ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
435	public TextEditor outdent ( ) { return outdent ( _NUM ) ; }
490	public static void overrideSymbolSet ( SymbolInfo [ ] override ) { symbols = override ; }
496	public boolean isHighQualityRenderingEnabled ( ) { return highQualityRenderingEnabled ; }
542	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPAttack_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
592	public static String compileProgressSuccessAction ( String progressSuccessAction ) throws TemplateModelException { Environment env = CommonFtlUtil . getCurrentEnvironment ( ) ; return compileProgressSuccessAction ( progressSuccessAction , ContextFtlUtil . getRequest ( env ) , ContextFtlUtil . getResponse ( env ) ) ; }
666	public void watchForUpdates ( ) { Preconditions . checkState ( client != _NULL , _CHAR You need to call init ( ) before watchForUpdates ( ) . _CHAR ) ; running = _BOOL ; executorService . submit ( _NULL ) ; }
737	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
788	public PhotosGetQuery extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
790	public void registerProxyListener ( ProxyListener listener ) { proxyListeners . add ( listener ) ; }
803	public static SM_SYSTEM_MESSAGE STR_SKILL_SLOT_FULL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
824	public synchronized boolean isInitialized ( ) { return initialized ; }
889	public static boolean isOrSubOf ( Class < ? > objectClass , String parentName ) throws ClassNotFoundException { Class < ? > parentClass = loadClass ( parentName ) ; return isOrSubOf ( objectClass , parentClass ) ; }
963	private static boolean isLetter ( char ch ) { return ( ( _CHAR <= ch && ch <= _CHAR ) || ( _CHAR <= ch && ch <= _CHAR ) ) ; }
1008	@ Override public Change updateConfig ( Equipment equipment , Properties properties ) throws IllegalAccessException { if ( ( properties . getProperty ( _CHAR processId _CHAR ) ) != _NULL ) { throw new ConfigurationException ( ConfigurationException . INVALID_PARAMETER_VALUE , _CHAR Reconfiguration of _CHAR + _CHAR Equipment does not currently allow it to be reassigned to a different Process ! _CHAR ) ; } return super . updateConfig ( equipment , properties ) ; }
1028	public static void assertSameMembers ( ThrowableSet s , RefLikeType [ ] included , AnySubType [ ] excluded ) { assertTrue ( ExceptionTestUtility . sameMembers ( new ExceptionHashSet < RefLikeType > ( Arrays . asList ( included ) ) , new ExceptionHashSet < AnySubType > ( Arrays . asList ( excluded ) ) , s ) ) ; }
1052	@ Override public void onConfigurationChanged ( Configuration newConfig ) { super . onConfigurationChanged ( newConfig ) ; if ( this . appView == _NULL ) { return ; } PluginManager pm = this . appView . getPluginManager ( ) ; if ( pm != _NULL ) { pm . onConfigurationChanged ( newConfig ) ; } }
1059	public final boolean isFallbackFileEmpty ( ) { return ! ( ( fFileController . getNumberOfLines ( ) ) > _NUM ) ; }
1060	public FaveGetVideosQuery extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
1219	public void transformPath ( ) { Matrix matrix = new Matrix ( ) ; mPreviousChartRect . set ( getScreenX ( mXMinForPathCalcs ) , getScreenY ( mYMaxForPathCalcs ) , getScreenX ( mXMaxForPathCalcs ) , getScreenY ( mYMinForPathCalcs ) ) ; matrix . setRectToRect ( mChartRect , mPreviousChartRect , Matrix . ScaleToFit . FILL ) ; mPath . transform ( matrix ) ; updatePathCalcs ( ) ; postInvalidateOnAnimation ( ) ; }
1231	public boolean containsRange ( CodeRange r ) { return ( r . startAddress >= this . startAddress && r . endAddress <= this . endAddress ) ; }
1271	public static SM_SYSTEM_MESSAGE STR_SKILL_LEARNED_ABYSS_SKILL ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
1343	public static SM_SYSTEM_MESSAGE STR_RESURRECT_DIALOG__5MIN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1419	public void authorLogin ( ) { login ( authorUrl , authorLoginProperty , authorPassword ) ; }
1474	public static boolean isInvoke ( Value val ) { val = getEquivalentValueRoot ( val ) ; if ( val instanceof InvokeExpr ) return _BOOL ; return _BOOL ; }
1495	protected void merge ( Object in1 , Object in2 , Object out ) { FlowSet fin1 = ( FlowSet ) in1 ; FlowSet fin2 = ( FlowSet ) in2 ; FlowSet fout = ( FlowSet ) out ; fin1 . union ( fin2 , fout ) ; }
1504	public static FloatBuffer createFloatBuffer ( float [ ] coords ) { ByteBuffer bb = ByteBuffer . allocateDirect ( coords . length * SIZEOF_FLOAT ) ; bb . order ( ByteOrder . nativeOrder ( ) ) ; FloatBuffer fb = bb . asFloatBuffer ( ) ; fb . put ( coords ) ; fb . position ( _NUM ) ; return fb ; }
1602	@ Override public boolean parseParameters ( Object params ) { if ( params == _NULL || ! ( params instanceof RewardForStructureCopying ) ) return _BOOL ; this . rscparams = ( RewardForStructureCopying ) params ; this . rewardDensity = rscparams . getRewardDensity ( ) ; this . dimension = rscparams . getDimension ( ) ; return _BOOL ; }
1646	public void shuffleTrainingSet ( ) { utils . shuffleList ( TrainingFiles ) ; }
1670	protected VideoGetCatalogSectionQuery from ( String value ) { return unsafeParam ( _CHAR from _CHAR , value ) ; }
1721	public boolean isBoolean ( String key ) { Object val = get ( key ) ; return val instanceof Boolean ; }
1748	public static float convertSpToPixel ( float sp , Context context ) { if ( pxForSp . containsKey ( sp ) ) { return pxForSp . get ( sp ) ; } float px = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_SP , sp , context . getResources ( ) . getDisplayMetrics ( ) ) ; pxForSp . put ( sp , px ) ; return px ; }
1835	public Scoop bind ( Object obj , int toppingId , View view , @ Nullable ColorAdapter colorAdapter ) { return bind ( obj , toppingId , view , colorAdapter , _NULL ) ; }
1941	private static WeightedObservedPoints createDataset ( double [ ] [ ] points ) { final WeightedObservedPoints obs = new WeightedObservedPoints ( ) ; for ( int i = _NUM ; i < points . length ; i ++ ) { obs . add ( points [ i ] [ _NUM ] , points [ i ] [ _NUM ] ) ; } return obs ; }
1959	public void abandon ( ) { abandon ( new ConversationAbandonedEvent ( this , new ManuallyAbandonedConversationCanceller ( ) ) ) ; }
2015	public synchronized void addUniqueURL ( URL url ) { if ( ! classPath . contains ( url ) ) { super . addURL ( url ) ; classPath . add ( url ) ; } }
2080	public void dispose ( ) { if ( metadata != _NULL ) metadata . dispose ( ) ; if ( index != _NULL ) index . dispose ( ) ; }
2139	private static void addToParentGroup ( final ConfiguredConnectionGroupDetails groupDetails , final ConfiguredConnectionGroupDetails parent ) { groupDetails . setGroup ( new ConnectionGroupReference ( parent ) ) ; parent . getSubgroups ( ) . add ( new ConnectionGroupReference ( groupDetails ) ) ; }
2198	@ Override public void onConfirmation ( String callerTag ) { ComponentsGetter cg = ( ComponentsGetter ) getActivity ( ) ; cg . getFileOperationsHelper ( ) . removeFiles ( mTargetFiles , _BOOL ) ; }
2200	protected static void parseAndIgnoreWhitespace ( final String source , final ParsePosition pos ) { parseNextCharacter ( source , pos ) ; pos . setIndex ( pos . getIndex ( ) - _NUM ) ; }
2202	public String plus ( Object value ) { return this . theString + value ; }
2265	public RequestHandle post ( Context context , String url , HttpEntity entity , String contentType , ResponseHandlerInterface responseHandler ) { return sendRequest ( httpClient , httpContext , addEntityToRequestBase ( new HttpPost ( url ) , entity ) , contentType , responseHandler , context ) ; }
2268	public static final void show ( Window owner , Settings settings ) { SettingsDialog dialog = new SettingsDialog ( owner , settings ) ; dialog . setLocationRelativeTo ( owner ) ; dialog . setVisible ( _BOOL ) ; if ( ! dialog . canceled ) { dialog . pnlSettings . setSettings ( settings ) ; } }
2314	public StringBuffer outputKeyCreation ( boolean kekOnly , String kekTest ) { return this . outputKeyCreation ( _NUM , kekOnly , kekTest ) ; }
2356	public FieldRefNode findLocalFieldRefNode ( Object baseValue , SparkField field ) { VarNode base = findLocalVarNode ( baseValue ) ; if ( base == _NULL ) return _NULL ; return base . dot ( field ) ; }
2429	public int remove ( int offset ) { int old = get ( offset ) ; remove ( offset , _NUM ) ; return old ; }
2471	public void zoom ( float percentage ) { double zoomDelta = mViewRange . getLength ( ) * percentage ; requestZoom ( mViewRange . getMin ( ) - zoomDelta , mViewRange . getMax ( ) + zoomDelta ) ; }
2497	@ Override public WebDriver frame ( String nameOrId ) { frameSwitcher . putFramePathOnStack ( nameOrId ) ; return targetLocator . frame ( nameOrId ) ; }
2529	public static double standardDeviation ( double [ ] data , int opt ) { if ( opt == _NUM ) return Math . sqrt ( variance ( data , opt ) ) ; else return Math . sqrt ( variance ( data , opt ) ) ; }
2549	public String next ( ) { return nextLine ( ) ; }
2556	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_RandomMoveLoc_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
2635	public static SM_SYSTEM_MESSAGE STR_ARTIFACT_CANCELED ( DescriptionId race , DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , race , descriptionId ) ; }
2639	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_INSTANCE_ALREADY_REGISTERED_WITH_DIFFICULTY ( String worldname0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 , value1 ) ; }
2696	public static void write ( File file , CharSequence data , String encoding , boolean append ) throws IOException { write ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
2744	public static boolean isLaunchErrorActivityWhenInBackground ( ) { return launchErrorActivityWhenInBackground ; }
2766	@ Override public boolean containsAll ( Collection < ? > collection ) { Iterator < ? > it = collection . iterator ( ) ; while ( it . hasNext ( ) ) { if ( ! contains ( it . next ( ) ) ) { return _BOOL ; } } return _BOOL ; }
2835	@ Override public void close ( ) throws IOException { try { in . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
2949	public IntIterator edgeRows ( int node ) { return edgeRows ( node , UNDIRECTED ) ; }
2991	protected void removeAt ( int index ) { _values [ index ] = _NUM ; super . removeAt ( index ) ; }
3006	public void wipeUser ( int handle ) { try { mService . wipeUser ( handle ) ; } catch ( RemoteException re ) { Log . w ( TAG , _CHAR Could not wipe user _CHAR + handle ) ; } }
3008	public boolean deleteFilesInWhiteList ( ) { return _BOOL ; }
3049	public static void writeStringToFile ( File file , String data , String encoding , boolean append ) throws IOException { writeStringToFile ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
3064	public void writeBytes ( DataOutputStream dd ) throws IOException { int len ; len = bytes . length ; dd . writeShort ( len - _NUM ) ; dd . write ( bytes , _NUM , len - _NUM ) ; }
3110	@ SuppressWarnings ( _CHAR deprecation _CHAR ) @ Override public void onFailure ( int statusCode , Header [ ] headers , byte [ ] binaryData , Throwable error ) { onFailure ( statusCode , error , _NULL ) ; }
3142	public static StorableTimeFence inDailyInterval ( TimeZone timeZone , long startTimeOfDayMillis , long stopTimeOfDayMillis ) { return new StorableTimeFence ( DAILY , timeZone , startTimeOfDayMillis , stopTimeOfDayMillis ) ; }
3149	@ Override public void onStopTrackingTouch ( SeekBar seekBar ) { mDragging = _BOOL ; setProgress ( ) ; updatePausePlay ( ) ; mHandler . sendEmptyMessage ( SHOW_PROGRESS ) ; }
3185	public boolean implementsInterface ( String name ) { checkLevel ( HIERARCHY ) ; Iterator < SootClass > interfaceIt = getInterfaces ( ) . iterator ( ) ; while ( interfaceIt . hasNext ( ) ) { SootClass SootClass = interfaceIt . next ( ) ; if ( SootClass . getName ( ) . equals ( name ) ) return _BOOL ; } return _BOOL ; }
3190	private void addFallbackSelector ( Properties settings , ProtocolDispatchSelector ps ) { String proxy = settings . getProperty ( _CHAR default _CHAR ) ; if ( proxy != _NULL ) { ps . setFallbackSelector ( ProxyUtil . parseProxySettings ( proxy ) ) ; } }
3226	public Builder html ( String html ) { this . html = html ; return this ; }
3230	public Response < ? > response ( ) { return response ; }
3247	public MessageFormatter removeMessageFormatter ( String domain ) { return ( MessageFormatter ) fMessageFormatters . remove ( domain ) ; }
3259	public boolean expand ( int sparseFeatureSize , int denseFeatureSize , int labelSize , WeightGenerator generator ) { boolean b = _BOOL ; b |= sparse_weight_vector . expand ( labelSize , sparseFeatureSize , generator ) ; b |= dense_weight_vector . expand ( labelSize , denseFeatureSize , generator ) ; return b ; }
3261	public static boolean bookmarkNodeExists ( Context context , long nodeId ) { Boolean result = chromeBrowserProviderCall ( Boolean . class , ChromeBrowserProvider . CLIENT_API_BOOKMARK_NODE_EXISTS , context , argsToBundle ( nodeId ) ) ; return result != _NULL ? result . booleanValue ( ) : _BOOL ; }
3287	public static void write ( File file , CharSequence data , String encoding , boolean append ) throws IOException { write ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
3289	public static int extractLowUnsignedNibble ( int value ) { return value & _NUM ; }
3290	protected void removeAt ( int index ) { _values [ index ] = _NUM ; super . removeAt ( index ) ; }
3323	public static String describeElements ( @ Nullable PsiElement [ ] elements ) { if ( elements == _NULL ) { return _CHAR Empty _CHAR ; } StringBuilder sb = new StringBuilder ( ) ; for ( PsiElement target : elements ) { appendElementDescription ( sb , target ) ; } return sb . toString ( ) ; }
3326	public void clear ( ) { clear ( DEFAULT_CAPACITY ) ; }
3337	@ VisibleForTesting static boolean isPrecachingEnabled ( Context context ) { SharedPreferences prefs = PreferenceManager . getDefaultSharedPreferences ( context ) ; return prefs . getBoolean ( PREF_IS_PRECACHING_ENABLED , _BOOL ) ; }
3403	public ViewsFinder not ( ) { this . complementNextWithFilter = _BOOL ; return this ; }
3423	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SwitchHostile_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
3447	public int end ( ) { return start + rawString . length ( ) ; }
3448	@ Override public boolean addAll ( Collection < ? extends T > c ) { for ( T t : c ) add ( t ) ; return _BOOL ; }
3463	public Complex [ ] transform ( final Complex [ ] f , final TransformType type ) { final double [ ] [ ] dataRI = TransformUtils . createRealImaginaryArray ( f ) ; transformInPlace ( dataRI , normalization , type ) ; return TransformUtils . createComplexArray ( dataRI ) ; }
3537	public static int [ ] shuffle ( int [ ] intArray ) { if ( intArray == _NULL ) { return _NULL ; } return shuffle ( intArray , getRandom ( intArray . length ) ) ; }
3650	public Matrix fitScreen ( ) { Matrix save = new Matrix ( ) ; fitScreen ( save ) ; return save ; }
3728	public void print ( ) { for ( int i = _NUM ; i < components . length ; i ++ ) { System . out . println ( _CHAR Component _CHAR + i + _CHAR : _CHAR ) ; components [ i ] . print ( ) ; } }
3729	void insertedNode ( NodeImpl node , NodeImpl newInternal , boolean replace ) { }
3731	public boolean deleteFilesInWhiteList ( ) { return _BOOL ; }
3797	public RequestHandle post ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return post ( context , url , paramsToEntity ( params , responseHandler ) , _NULL , responseHandler ) ; }
3800	public static boolean isOrSubOf ( Object obj , Class < ? > parentClass ) { Class < ? > objectClass = obj . getClass ( ) ; return isOrSubOf ( objectClass , parentClass ) ; }
3810	public boolean isEmpty ( ) { return height < _NUM ; }
3822	@ RequestMapping ( value = { _CHAR / rest / v1 / user _CHAR } , method = RequestMethod . GET , produces = MediaType . APPLICATION_JSON_VALUE ) @ ResponseStatus ( value = HttpStatus . OK ) public ModelAndView returnLoggedInUser ( ) { final User loggedInUser = AppScanUtils . getLoggedInUser ( ) ; loggedInUser . setPassword ( _CHAR _CHAR ) ; return new ModelAndView ( view , AppScanConstants . JSON_RESPONSE_DATA_IDENTIFIER , loggedInUser ) ; }
3844	public static int extractHighSignedNibble ( int value ) { return ( value << _NUM ) >> _NUM ; }
3901	void register ( RTEditTextListener listener , RTMediaFactory < RTImage , RTAudio , RTVideo > mediaFactory ) { mListener = listener ; mMediaFactory = mediaFactory ; }
3928	@ Override public boolean markSupported ( ) { return in . markSupported ( ) ; }
3938	@ Override public void write ( DataOutput out ) throws IOException { }
3973	public void createAssets ( ) { if ( isStepVisible ( ) ) { File destination = myState . get ( ATTR_OUTPUT_FOLDER ) ; assert destination != _NULL ; myAssetGenerator . outputImagesIntoVariantRoot ( destination . getParentFile ( ) ) ; } }
3992	private < T extends Type , S extends Instance > S putInstance ( Optional < String > id , T type , BiFunction < String , T , S > putInstance , Function < T , S > addInstance ) { return id . map ( _NULL ) . orElseGet ( _NULL ) ; }
4003	public static TransferDevice fromJson ( final String json ) { return getGson ( ) . fromJson ( json , TransferDeviceImpl . class ) ; }
4056	public synchronized boolean isRunning ( ) { return this . running ; }
4085	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
4135	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelBuff_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
4157	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
4174	public void removeLastHistoryEntry ( String historyUrl , long urlTimeMs ) { if ( mContent == _NULL ) return ; mContent . removeLastHistoryEntry ( historyUrl , urlTimeMs ) ; }
4214	public static Observable < float [ ] > createLowPassFilter ( Observable < float [ ] > stream ) { return createLowPassFilter ( stream , _NUM . _NUM ) ; }
4224	public void assertTextPresentIgnoreCase ( String expected , String actual ) { assertTextPresent ( expected . toLowerCase ( ) , actual . toLowerCase ( ) ) ; }
4234	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
4264	public boolean profile ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR profile _CHAR ) ; }
4279	@ Override public boolean isDataSource ( ) { return _BOOL ; }
4340	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCDeBuff_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
4417	public static void writeStringToFile ( File file , String data , String encoding , boolean append ) throws IOException { writeStringToFile ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
4443	public void reset ( ) { this . terminated = _BOOL ; }
4449	private static BigDecimal sanitize ( BigInteger value , int signum ) { if ( signum == _NUM || value == _NULL ) { return ZERO ; } if ( signum > _NUM ) { return new BigDecimal ( value ) ; } return new BigDecimal ( value . negate ( ) ) ; }
4600	public static void write ( File file , CharSequence data , String encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
4642	public WordCloudDrawer createInstance ( ) { final WordCloudDrawer drawer = new WordCloudDrawer ( ) ; drawer . setViewer ( viewer ) ; drawer . setChartData ( new DefaultChartData ( ) ) ; drawer . setClass2HigherClassMapper ( class2HigherClassMapper ) ; drawer . setSeriesLabelGetter ( seriesLabelGetter ) ; drawer . setExecutorService ( executorService ) ; return drawer ; }
4649	public int next ( ) { moveToNextIndex ( ) ; return _hash . _set [ _index ] ; }
4658	public static boolean isMinute ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return isIntegerInRange ( s , _NUM , _NUM ) ; }
4696	public boolean onCommand ( String command , String ipFrom , DataOutputStream dos ) { return _BOOL ; }
4752	public static boolean isOrSubOf ( Object obj , String parentName ) throws ClassNotFoundException { Class < ? > parentClass = loadClass ( parentName ) ; return isOrSubOf ( obj , parentClass ) ; }
4759	public void loadAndRun ( final String configurationFile ) throws SpyException { loader . loadConfiguration ( configurationFile ) ; loadAndRun ( loader . getConfiguration ( ) ) ; }
4834	private void superActivate ( ) { super . activate ( ) ; }
4853	public static JFrame showForcePanel ( ForceSimulator fsim ) { JFrame frame = new JFrame ( _CHAR prefuse Force Simulator _CHAR ) ; frame . setContentPane ( new JForcePanel ( fsim ) ) ; frame . pack ( ) ; frame . setVisible ( _BOOL ) ; return frame ; }
4859	public void chooseDevice ( @ NotNull String label ) { JButton menuButton = findToolbarButton ( _CHAR The virtual device to render the layout with _CHAR ) ; myRobot . click ( menuButton ) ; clickPopupMenuItemMatching ( new DeviceNameMatcher ( label ) , myToolBar . getComponent ( ) , myRobot ) ; }
4896	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillToggleCost_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
4914	public Iterator neighbors ( Node n ) { return new NeighborIterator ( n , edges ( n ) ) ; }
4917	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stagger_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
4953	public void fitScreen ( ) { Matrix save = mViewPortHandler . fitScreen ( ) ; mViewPortHandler . refresh ( save , this , _BOOL ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
5023	public void onNotify ( File path , SVNNodeKind kind ) { this . path = path ; if ( monitor != _NULL ) { monitor . worked ( _NUM ) ; subTask ( ) ; } }
5050	void calculateAverage ( long period ) { final long count = metric . getTotal ( ) ; if ( count != _NUM ) { average = ( count - previousCount ) / ( period / _NUM . _NUM ) ; previousCount = count ; } }
5057	@ Override public long skip ( long n ) throws IOException { return super . skip ( n * inputChannels ) / inputChannels ; }
5067	public AudioInputStream synthesize ( List < Element > tokensAndBoundaries , String outputParams ) throws SynthesisException { return synthesizer . synthesize ( tokensAndBoundaries , this , outputParams ) ; }
5121	public static final void show ( Window owner , World world ) { EditWorldDialog ewd = new EditWorldDialog ( owner , world ) ; ewd . setLocationRelativeTo ( owner ) ; ewd . setVisible ( _BOOL ) ; if ( ! ewd . canceled ) { synchronized ( world ) { ewd . pnlWorld . setWorld ( world ) ; } } }
5161	public static IOFileFilter prefixFileFilter ( String prefix ) { return new PrefixFileFilter ( prefix ) ; }
5173	@ Override public boolean hasSourceDataTag ( final Long tagID ) { return sourceDataTags . get ( tagID ) != _NULL ; }
5257	public Builder keyboardZoomOffset ( Number keyboardZoomOffset ) { this . keyboardZoomOffset = keyboardZoomOffset ; return this ; }
5277	GitReference createReferenceFromCompleteSha1 ( String ref ) { return new GitReference ( this , ref ) ; }
5283	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_INTERVAL_HEAL_MP_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
5320	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnAttacked_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
5364	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sleep_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
5408	public void readDataFile ( String content ) throws DataFileException { if ( content == _NULL || content . length ( ) <= _NUM ) throw new IllegalStateException ( _CHAR Content is empty , ca n _CHAR_CHAR ) ; ByteArrayInputStream bis = new ByteArrayInputStream ( content . getBytes ( ) ) ; readDataFile ( bis , null ) ; }
5409	public static boolean equals ( double x , double y ) { return ( Double . isNaN ( x ) && Double . isNaN ( y ) ) || x == y ; }
5418	public void decreaseShield ( ) { this . shield -- ; if ( shield <= _NUM ) this . isDead = _BOOL ; }
5461	public short remove ( int offset ) { short old = get ( offset ) ; remove ( offset , _NUM ) ; return old ; }
5558	public int order ( ) { return soot . PhaseOptions . getInt ( options , _CHAR order _CHAR ) ; }
5587	public static void main ( String [ ] args ) { StdOut . println ( _CHAR Test _CHAR ) ; StdOut . println ( _NUM ) ; StdOut . println ( _BOOL ) ; StdOut . printf ( _CHAR % . _NUM \ n _CHAR , _NUM . _NUM / _NUM . _NUM ) ; }
5591	public void removeAllEffects ( ) { this . removeAllEffects ( _BOOL ) ; }
5592	public INDArray toRaveledTensor ( BufferedImage image ) { try { image = scalingIfNeed ( image , _BOOL ) ; return toINDArrayBGR ( image ) . ravel ( ) ; } catch ( Exception e ) { throw new RuntimeException ( _CHAR Unable to load image _CHAR , e ) ; } }
5663	@ Override public Schema schema ( ) { return ti . schema ( ) ; }
5694	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcDPHeal_Instant_HEAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
5702	public void appendError ( final String errorMessage ) { if ( this . errorMessage == _NULL ) { this . errorMessage = errorMessage ; } else { this . errorMessage += ( _CHAR \ n _CHAR + errorMessage ) ; } state = CHANGE_STATE . FAIL ; }
5755	public static SM_SYSTEM_MESSAGE STR_MSG_TOWER_DEFENCE_HOST_MOVED ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
5786	@ Override public void computeTargetFeatures ( Target target ) { FeatureVector fv = targetFeatureComputer . computeFeatureVector ( target ) ; target . setFeatureVector ( fv ) ; }
5803	default String primaryKey ( String type , Collection < String > values ) { return String . format ( PRIMARY_KEY , type ) + values . stream ( ) . collect ( Collectors . joining ( ) ) ; }
5805	public void close ( ) throws IOException { stream . close ( ) ; }
5837	public static boolean isConnected ( Context context ) { ConnectivityManager cm = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetwork = cm . getActiveNetworkInfo ( ) ; return activeNetwork != _NULL && activeNetwork . isConnectedOrConnecting ( ) ; }
5902	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
5905	void modifyingCharacterData ( NodeImpl node , boolean replace ) { }
5919	public void sort ( int fromIndex , int toIndex ) { Arrays . sort ( _data , fromIndex , toIndex ) ; }
5946	public boolean isStrict1 ( ) { return this . strict1 ; }
5959	private boolean isConnectivityLayoutOverridden ( ) { verifyOverrideRulesForConnectivity ( ) ; return mConnectedLayout != _NUM && mDisconnectedLayout != _NUM ; }
5960	private void solveConstraints ( ) { IWorklist ptaList = worklist ; while ( ptaList . has_job ( ) ) { IVarAbstraction pn = ptaList . next ( ) ; pn . do_before_propagation ( ) ; pn . propagate ( this , ptaList ) ; pn . do_after_propagation ( ) ; } }
6000	public static Object [ ] ordinalArray ( TupleSet tuples , String field , Comparator cmp ) { if ( tuples instanceof Table ) { ColumnMetadata md = ( ( Table ) tuples ) . getMetadata ( field ) ; return md . getOrdinalArray ( ) ; } else { return ordinalArray ( tuples . tuples ( ) , field , cmp ) ; } }
6025	public RealMatrix computeCorrelationMatrix ( final RealMatrix matrix ) { final RealMatrix matrixCopy = rankTransform ( matrix ) ; return new PearsonsCorrelation ( ) . computeCorrelationMatrix ( matrixCopy ) ; }
6069	@ Override public boolean isPhantom ( ) { return isPhantom ; }
6138	public Z Eq ( Z a ) { re = a . re ; im = a . im ; return this ; }
6180	private List < View > addView ( View view , List < View > cache ) { if ( cache == _NULL ) { cache = new LinkedList < View > ( ) ; } cache . add ( view ) ; return cache ; }
6196	public boolean forEachKey ( TShortProcedure procedure ) { return forEach ( procedure ) ; }
6205	public boolean hasScript ( ) { return script != _NULL ; }
6210	public boolean isStrict2 ( ) { return this . strict2 ; }
6234	public boolean supportsHeapDump ( Application application ) { if ( application . getState ( ) != Stateful . STATE_AVAILABLE ) return _BOOL ; return JvmFactory . getJVMFor ( application ) . isTakeHeapDumpSupported ( ) ; }
6357	protected void queryDataSourceMetadata ( PhysicalTable table ) { String resourcePath = String . format ( DATASOURCE_METADATA_QUERY_FORMAT , table . getName ( ) ) ; SuccessCallback success = buildDataSourceMetadataSuccessCallback ( table ) ; HttpErrorCallback errorCallback = getErrorCallback ( table ) ; druidWebService . getJsonObject ( success , errorCallback , failureCallback , resourcePath ) ; }
6413	@ Nullable @ WorkerThread static File writeBitmapToDirectory ( @ NonNull Bitmap bitmap , @ NonNull File directory ) { if ( ! directory . mkdirs ( ) && ! directory . exists ( ) ) { Log . e ( TAG , _CHAR Failed to create directory for bitmap . '' ) ; return _NULL ; } return writeBitmapToFile ( bitmap , new File ( directory , createUniqueFilename ( BITMAP_PREFIX ) ) ) ; }
6419	public boolean compare ( LexiconImpl other ) { return compare ( addenda , other . addenda ) && compare ( compiled , other . compiled ) ; }
6525	public int findIndexOfValue ( String value ) { if ( value != _NULL && mEntryValues != _NULL ) { for ( int i = mEntryValues . length - _NUM ; i >= _NUM ; i -- ) { if ( mEntryValues [ i ] . equals ( value ) ) { return i ; } } } return - _NUM ; }
6526	public PollsCreateQuery create ( UserActor actor ) { return new PollsCreateQuery ( getClient ( ) , actor ) ; }
6533	public boolean more ( ) throws JSONException { this . next ( ) ; if ( this . end ( ) ) { return _BOOL ; } this . back ( ) ; return _BOOL ; }
6568	@ Deprecated public void onFailure ( Throwable error , String content ) { onFailure ( error ) ; }
6712	@ Override public void flush ( ) throws IOException { try { out . flush ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
6734	public static boolean isOrSubOf ( Object obj , Object parentObject ) { Class < ? > parentClass = parentObject . getClass ( ) ; return isOrSubOf ( obj , parentClass ) ; }
6806	public int findIndexOfValue ( String value ) { if ( value != _NULL && mEntryValues != _NULL ) { for ( int i = mEntryValues . length - _NUM ; i >= _NUM ; i -- ) { if ( mEntryValues [ i ] . equals ( value ) ) { return i ; } } } return - _NUM ; }
6815	@ Nullable private static SearchScope limitScopeToFile ( SearchScope scope , PsiFile file ) { if ( scope instanceof LocalSearchScope ) { return ( ( LocalSearchScope ) scope ) . isInScope ( file . getVirtualFile ( ) ) ? new LocalSearchScope ( file ) : _NULL ; } return scope . intersectWith ( new LocalSearchScope ( file ) ) ; }
6843	private static boolean detectAmazonWebServices ( ) { val region = Regions . getCurrentRegion ( ) ; return ( region != _NULL ) ; }
6874	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCHeal_Instant_HEAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
6918	public int order ( ) { return soot . PhaseOptions . getInt ( options , _CHAR order _CHAR ) ; }
6957	public static String readString ( ) { return scanner . next ( ) ; }
6982	public Builder envVar ( String key , String value ) { this . envVars . put ( key , value ) ; return this ; }
6983	public boolean isKeepPositionOnRotation ( ) { return mKeepPositionOnRotation ; }
6988	public boolean isEmpty ( ) { return map . isEmpty ( ) ; }
7014	public static void assertSameMembers ( ThrowableSet . Pair p , Set < ? extends RefLikeType > caughtIncluded , Set < AnySubType > caughtExcluded , Set < ? extends RefLikeType > uncaughtIncluded , Set < AnySubType > uncaughtExcluded ) { assertSameMembers ( p . getCaught ( ) , caughtIncluded , caughtExcluded ) ; assertSameMembers ( p . getUncaught ( ) , uncaughtIncluded , uncaughtExcluded ) ; }
7032	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Reflector_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
7057	public boolean forEachKey ( TLongProcedure procedure ) { return forEach ( procedure ) ; }
7064	protected Dfp trap ( int type , String what , Dfp oper , Dfp def , Dfp result ) { return def ; }
7071	@ PostConstruct public void init ( ) { listenerContainer = supervisionNotifier . registerAsListener ( this ) ; }
7110	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATK_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
7160	public void stackEntered ( long time , boolean focused ) { boolean finishImmediately = ! focused ; mSpacing = computeSpacing ( mStackTabs != _NULL ? mStackTabs . length : _NUM ) ; resetAllScrollOffset ( ) ; startAnimation ( time , OverviewAnimationType . ENTER_STACK , finishImmediately ) ; }
7171	public static boolean isSecond ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return isIntegerInRange ( s , _NUM , _NUM ) ; }
7200	public boolean isCompatibleWith ( @ NotNull ResourceTypeAllowedValues other ) { for ( ResourceType type : other . types ) { if ( isTypeAllowed ( type ) ) { return _BOOL ; } } return _BOOL ; }
7236	@ Override public boolean markSupported ( ) { return in . markSupported ( ) ; }
7282	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
7321	private static boolean isLetter ( char ch ) { return ( ( _CHAR <= ch && ch <= _CHAR ) || ( _CHAR <= ch && ch <= _CHAR ) ) ; }
7323	public Response < ? > response ( ) { return response ; }
7338	@ Override public synchronized void reset ( ) throws IOException { try { in . reset ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
7347	public HectorCassandraClientConfigurer port ( Integer port ) { this . port = port ; return this ; }
7360	void addConnection ( GSConnectionImpl connection ) throws JMSException { connectionsHash . put ( connection . connFacParent . getSpaceURL ( ) . getURL ( ) , connection ) ; }
7396	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
7412	private static int hash ( Object [ ] elements ) { int h = _NUM ; for ( int i = elements . length ; -- i >= _NUM ; ) { h += elements [ i ] . hashCode ( ) ; } return h ; }
7415	public PatternN and ( Observable < ? extends Object > other ) { if ( other == _NULL ) { throw new NullPointerException ( ) ; } return new PatternN ( observables , other ) ; }
7464	@ NotNull public AnalyzeImageAction analyzeImage ( @ NotNull List < VisualFeatures > visualFeatures , @ NotNull List < DomainSpecificDetails > domainSpecificDetails , @ NotNull String imageUrl ) { return new AnalyzeImageAction ( cognitiveContext , visualFeatures , domainSpecificDetails , imageUrl ) ; }
7518	public Image createSnapshotIcon ( Image icon ) { return ImageUtilities . mergeImages ( icon , SNAPSHOT_BADGE , _NUM , _NUM ) ; }
7523	public void store ( Path path , Storable obj ) throws IOException { try ( OutputStream os = hadoopFileSystem . create ( path ) ) { serializer . write ( os , obj ) ; } }
7529	private List < View > addView ( View view , List < View > cache ) { if ( cache == _NULL ) { cache = new LinkedList < View > ( ) ; } cache . add ( view ) ; return cache ; }
7552	public static void overrideSymbolSet ( SymbolInfo [ ] override ) { symbols = override ; }
7555	@ Override public boolean isDataSource ( ) { return _BOOL ; }
7558	public static Prop use ( String fileName ) { return use ( fileName , Constant . encoding ) ; }
7605	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_Instant_HEAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
7612	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SkillATKDrain_Instant_INTERVAL_HEAL_MP_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
7633	public void cleanupTabs ( ) { mStackTabs = _NULL ; resetInputActionIndices ( ) ; }
7634	public boolean equals ( Object other ) { if ( other instanceof ITypedElement ) { String otherName = ( ( ITypedElement ) other ) . getName ( ) ; return getName ( ) . equals ( otherName ) ; } return super . equals ( other ) ; }
7758	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . of ( ) ; }
7775	public static boolean isAddToHomeIntentSupported ( Context context ) { PackageManager pm = context . getPackageManager ( ) ; Intent i = new Intent ( INSTALL_SHORTCUT ) ; List < ResolveInfo > receivers = pm . queryBroadcastReceivers ( i , PackageManager . GET_INTENT_FILTERS ) ; return ! receivers . isEmpty ( ) ; }
7796	@ Override public void onPrepared ( MediaPlayer mp ) { Log_OC . v ( TAG , _CHAR onPrepare _CHAR ) ; mVideoPlayer . seekTo ( mSavedPlaybackPosition ) ; if ( mAutoplay ) { mVideoPlayer . start ( ) ; } mMediaController . show ( _NUM ) ; }
7818	public static void write ( File file , CharSequence data , Charset encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
7913	private void scrollToCenter ( ) { View nearestToCenterView = findCurrentCenterView ( ) ; if ( nearestToCenterView != _NULL ) { shiftToCenterCardScroller . setTargetPosition ( getPosition ( nearestToCenterView ) ) ; startSmoothScroll ( shiftToCenterCardScroller ) ; } }
7921	public void removeLocation ( int terminalId , int height ) { int i , size = l_locations . size ( ) ; for ( i = _NUM ; i < size ; i ++ ) { if ( l_locations . get ( i ) . matches ( terminalId , height ) ) { l_locations . remove ( i ) ; break ; } } }
7933	private boolean batchTextToSpeech ( String text ) { boolean ok ; voice . startBatch ( ) ; ok = textToSpeech ( text ) ; voice . endBatch ( ) ; return ok ; }
7985	static void appendModeInfo ( Mode mode , BitArray bits ) { bits . appendBits ( mode . getBits ( ) , _NUM ) ; }
7995	public static IOFileFilter prefixFileFilter ( String prefix , IOCase caseSensitivity ) { return new PrefixFileFilter ( prefix , caseSensitivity ) ; }
8017	public static String escapeCharacters ( String s ) { if ( s == _NULL ) { throw new NullPointerException ( ) ; } s = s . replace ( _CHAR . _CHAR , _CHAR { SEP } _CHAR ) ; s = s . replace ( _CHAR / _CHAR , _CHAR { FSEP } _CHAR ) ; s = s . replace ( _CHAR $ _CHAR , _CHAR { DSEP } _CHAR ) ; return s ; }
8023	private static void addToParentGroup ( final ModifiableConnection connectionDetails , final ConfiguredConnectionGroupDetails parent ) { connectionDetails . setGroup ( new ConnectionGroupReference ( parent ) ) ; parent . getConnections ( ) . add ( new ConnectionReference ( connectionDetails ) ) ; }
8032	public void onBitmapRendered ( PagePart part ) { if ( part . isThumbnail ( ) ) { cacheManager . cacheThumbnail ( part ) ; } else { cacheManager . cachePart ( part ) ; } redraw ( ) ; }
8035	public static TagConfig fromJson ( final String json ) { return GsonFactory . createGson ( ) . fromJson ( json , TagConfig . class ) ; }
8087	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fall_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
8131	public String post ( Context context , String url , RequestParams params ) throws HttpException { return post ( context , url , paramsToEntity ( params ) , _NULL ) ; }
8213	public static String localizePath ( String path ) { String fileNameSeparator = ( _CHAR \\ _CHAR . equals ( File . separator ) ? _CHAR \\ _CHAR + File . separator : File . separator ) ; return path . replaceAll ( _CHAR /+|\\\\+ _CHAR , fileNameSeparator ) ; }
8218	public void store ( String pathName , Storable value ) throws IOException { store ( new Path ( pathName ) , value ) ; }
8367	public static void insertAfter ( Node newNode , Node refNode ) throws DOMException { Node parent = refNode . getParentNode ( ) ; Node next = refNode . getNextSibling ( ) ; if ( next == _NULL ) { parent . appendChild ( newNode ) ; } else { parent . insertBefore ( newNode , next ) ; } }
8449	public List < X509Certificate > checkClientTrusted ( X509Certificate [ ] chain , String authType , String hostname ) throws CertificateException { return checkTrusted ( chain , authType , hostname , _BOOL ) ; }
8496	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . of ( ) ; }
8555	public static boolean isLocal ( Value val ) { return ( getEquivalentValueRoot ( val ) instanceof Local ) ; }
8643	static void appendModeInfo ( Mode mode , BitArray bits ) { bits . appendBits ( mode . getBits ( ) , _NUM ) ; }
8644	public static Maybe < LoginResult > requestAdditionalPermission ( @ NonNull final List < PermissionHelper > permissions , @ NonNull final Activity activity ) { checkNotNull ( permissions , _CHAR permissions == _NULL _CHAR ) ; checkNotNull ( activity , _CHAR activity == _NULL _CHAR ) ; ReactiveFB . getSessionManager ( ) . setActivity ( activity ) ; return Maybe . create ( new AdditionalPermissionOnSubscribe ( permissions ) ) ; }
8653	private boolean isAnAncestor ( String className ) { for ( ClassNode parentNode : parentNodes ) { if ( parentNode . name . equals ( className ) ) { return _BOOL ; } } return _BOOL ; }
8658	private void centerOnOriginAction ( ) { TreePath path = this . tree . getSelectionPath ( ) ; if ( path != _NULL ) { DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path . getLastPathComponent ( ) ; if ( node . getUserObject ( ) instanceof SandboxBody ) { SandboxBody body = ( SandboxBody ) node . getUserObject ( ) ; synchronized ( Simulation . LOCK ) { body . translateToOrigin ( ) ; } } } }
8699	public static double percentage ( final double number , final double maximum ) { return number / maximum ; }
8741	public static List < File > find ( File base , final Pattern pattern ) { checkArgument ( base . isDirectory ( ) , _CHAR _CHAR must be a directory . '' ) ; return Files . fileTreeTraverser ( ) . preOrderTraversal ( base ) . filter ( Predicates . compose ( Predicates . contains ( pattern ) , GET_PATH ) ) . toList ( ) ; }
8789	protected void drawGuiContainerForegroundLayer ( int mouseX , int mouseY ) { this . fontRendererObj . drawString ( this . name , _NUM , _NUM , _NUM ) ; this . fontRendererObj . drawString ( this . playerInventory . getDisplayName ( ) . getUnformattedText ( ) , _NUM , this . ySize - _NUM + _NUM , _NUM ) ; }
8797	protected VideoGetCatalogSectionQuery sectionId ( String value ) { return unsafeParam ( _CHAR section_id _CHAR , value ) ; }
8896	public static String diagPrefix ( String aspectName ) { return String . format ( _CHAR % s : _CHAR , aspectName ) ; }
8914	void innerDelete ( ) { deleteNode ( ) ; }
8951	public double frequency ( ) { return freq ; }
8960	public int findIndexOfValue ( String value ) { if ( value != _NULL && mEntryValues != _NULL ) { for ( int i = mEntryValues . length - _NUM ; i >= _NUM ; i -- ) { if ( mEntryValues [ i ] . equals ( value ) ) { return i ; } } } return - _NUM ; }
8964	private void clearNotifications0 ( ) { updateNotificationsNodeLabel ( currentNode , Resources . getText ( _CHAR LBL_Notifications _CHAR ) + _CHAR [ _NUM ] _CHAR ) ; }
9026	public Response < ? > response ( ) { return response ; }
9072	public void error ( String message ) { fail ( ) ; addLogEntry ( new ErrorEntry ( message ) ) ; addLogEntry ( browserLogEntryCollector . getBrowserLogEntries ( ) ) ; }
9127	public boolean isHighlightEnabled ( ) { for ( int i = _NUM , size = mDataSets . size ( ) ; i < size ; i ++ ) { T set = mDataSets . get ( i ) ; if ( ! set . isHighlightEnabled ( ) ) { return _BOOL ; } } return _BOOL ; }
9201	private String patternTemplateToRegex ( String filePatternTemplate ) { return filePatternTemplate . replaceAll ( _CHAR \\. _CHAR , Matcher . quoteReplacement ( _CHAR \\ . _CHAR ) ) ; }
9249	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
9424	public static float [ ] pointOnLine ( float x0 , float y0 , float x1 , float y1 , float ratio ) { float [ ] result = new float [ _NUM ] ; pointOnLine ( x0 , y0 , x1 , y1 , ratio , result ) ; return result ; }
9478	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return CLIENT_APPKEY ; case _NUM : return TRACE_ID ; case _NUM : return SPAN_ID ; case _NUM : return ROOT_MESSAGE_ID ; case _NUM : return CURRENT_MESSAGE_ID ; case _NUM : return SERVER_MESSAGE_ID ; case _NUM : return DEBUG ; case _NUM : return SAMPLE ; case _NUM : return CLIENT_IP ; default : return _NULL ; } }
9587	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_INTERVAL_HEAL_MP_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
9630	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
9670	public boolean next ( ) { if ( currentBlkNum == _NUM && ! moveTo ( _NUM ) ) return _BOOL ; while ( _BOOL ) { if ( rp . next ( ) ) return _BOOL ; if ( ! moveTo ( currentBlkNum + _NUM ) ) return _BOOL ; } }
9687	public static final void show ( Window owner ) { PreferencesDialog dialog = new PreferencesDialog ( owner ) ; dialog . setLocationRelativeTo ( owner ) ; dialog . setVisible ( _BOOL ) ; if ( ! dialog . canceled ) { dialog . pnlPreferences . setPreferences ( ) ; } }
9706	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . of ( ) ; }
9735	public synchronized void checkOwnershipAndReacquire ( ) throws LockingException { if ( _NULL == lockAcquireFuture || ! lockAcquireFuture . isDefined ( ) ) { throw new LockingException ( lockPath , _CHAR check ownership before acquiring _CHAR ) ; } if ( haveLock ( ) ) { return ; } reacquireLock ( _BOOL ) ; }
9754	@ Override public final synchronized void write ( int ib ) throws IOException { dis . write ( ib ) ; }
9761	@ Deprecated public void onFailure ( int statusCode , Header [ ] headers , Throwable error , String content ) { onFailure ( statusCode , error , content ) ; }
9772	public static void kickAccountFromGameServer ( Account account ) { for ( GameServerInfo gsi : getGameServers ( ) ) { if ( gsi . isAccountOnGameServer ( account . getId ( ) ) ) { gsi . getConnection ( ) . sendPacket ( new SM_REQUEST_KICK_ACCOUNT ( account . getId ( ) ) ) ; break ; } } }
9791	@ Override public void computeTargetFeatures ( Target target ) { if ( ! ( target instanceof DiphoneTarget ) ) { tcfForHalfphones . computeTargetFeatures ( target ) ; } else { DiphoneTarget dt = ( DiphoneTarget ) target ; tcfForHalfphones . computeTargetFeatures ( dt . left ) ; tcfForHalfphones . computeTargetFeatures ( dt . right ) ; } }
9857	protected boolean isAlwaysNonNull ( Value v ) { return _BOOL ; }
9859	public boolean containsPrefix ( String prefix ) { for ( int i = fNamespaceSize ; i > _NUM ; i -= _NUM ) { if ( fNamespace [ i - _NUM ] == prefix ) { return _BOOL ; } } return _BOOL ; }
9878	private float constrain ( float amount , float low , float high ) { return amount < low ? low : ( amount > high ? high : amount ) ; }
9926	public void appendWhitespace ( Appendable writer ) throws IOException { writer . append ( whiteSpace ) ; }
9954	public boolean isEmpty ( ) { if ( entries == _NULL || entries . length == _NUM ) { return _BOOL ; } for ( LogEntries x : entries ) { if ( x != _NULL ) { return _BOOL ; } } return _BOOL ; }
9975	protected final double calcOverallSimilarity ( GraphSimilarity gsSim ) { return ( gsSim . SizeSimilarity == _NUM ) ? _NUM . _NUM : gsSim . ValueSimilarity / gsSim . SizeSimilarity ; }
10006	public void pasteComponentByContextMenu ( ) { final int componentsCount = componentsCount ( ) ; wait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; }
10021	private static int endOfTagMatch ( String string , String tag ) { return endOfTagMatch ( string , _NUM , tag ) ; }
10054	public RequestHandle post ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return post ( context , url , paramsToEntity ( params , responseHandler ) , _NULL , responseHandler ) ; }
10084	public PlacesAddQuery address ( String value ) { return unsafeParam ( _CHAR address _CHAR , value ) ; }
10139	public StandardDeviation withBiasCorrection ( boolean biasCorrection ) { return new StandardDeviation ( variance . withBiasCorrection ( biasCorrection ) ) ; }
10156	public boolean isRoot ( ) { return myPath == _NULL && mySnippets != _NULL ; }
10279	public GroupsReorderLinkQuery after ( Integer value ) { return unsafeParam ( _CHAR after _CHAR , value ) ; }
10370	protected void startSplitBrainController ( ) throws RemoteException { if ( _splitBrainController != _NULL ) return ; ElectionEntry splitBrainTemplate = _electTemplate . clone ( ) ; splitBrainTemplate . setState ( State . ACTIVE ) ; _splitBrainController = new SplitBrainController ( splitBrainTemplate , this ) ; }
10390	public static void adjustBaseIndex ( Zdiagmat A ) { BaseIndexNotChangeable = _BOOL ; A . basex = BaseIndex ; A . getProperties ( ) ; }
10408	public boolean first ( ) throws GenericEntityException { try { return resultSet . first ( ) ; } catch ( SQLException e ) { if ( ! closed ) { this . close ( ) ; Debug . logWarning ( _CHAR Warning : auto - closed EntityListIterator because of exception : _CHAR + e . toString ( ) , module ) ; } throw new GenericEntityException ( _CHAR Error setting the cursor to first _CHAR , e ) ; } }
10470	public boolean contains ( String s ) { return map . containsKey ( s ) ; }
10477	private void clearOldTraffic ( ) { List < AirMapTraffic > oldAllTraffic = new ArrayList < > ( ) ; for ( AirMapTraffic traffic : allTraffic ) { if ( trafficExpired ( traffic ) ) { oldAllTraffic . add ( traffic ) ; allTraffic . remove ( traffic ) ; } } notifyRemoved ( oldAllTraffic ) ; }
10493	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
10517	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
10537	public MessagesSendQuery lng ( Float value ) { return unsafeParam ( _CHAR long _CHAR , value ) ; }
10557	public static boolean featureIsEnabled ( ) { boolean allowedChannel = ChromeVersionInfo . isLocalBuild ( ) || ChromeVersionInfo . isDevBuild ( ) ; boolean switchEnabled = CommandLine . getInstance ( ) . hasSwitch ( ChromeSwitches . ENABLE_PHYSICAL_WEB ) ; return allowedChannel && switchEnabled ; }
10573	public boolean areAllLocationSettingsEnabled ( ) { return isChromeLocationSettingEnabled ( ) && isSystemLocationSettingEnabled ( ) ; }
10651	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSpellATK_Instant_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
10659	public PieChartDrawer createInstance ( ) { final PieChartDrawer drawer = new PieChartDrawer ( ) ; drawer . setViewer ( viewer ) ; drawer . setChartData ( new DefaultChartData ( ) ) ; drawer . setClass2HigherClassMapper ( class2HigherClassMapper ) ; drawer . setSeriesLabelGetter ( seriesLabelGetter ) ; drawer . setExecutorService ( executorService ) ; return drawer ; }
10675	public void updateFieldConfig ( BasePanel basePanel ) { if ( basePanel != _NULL ) { fieldConfigList . addAll ( basePanel . fieldConfigList ) ; } }
10730	public AllocDotField findAllocDotField ( AllocNode an , SparkField field ) { return an . dot ( field ) ; }
10762	public static String removeLast ( String string , String remove ) { string = StringUtils . stripEnd ( string , _CHAR _CHAR ) ; return StringUtils . removeEndIgnoreCase ( string , remove ) ; }
10823	public boolean supportsUserRemove ( ) { return _BOOL ; }
10830	@ Override public void printStackTrace ( PrintStream ps ) { super . printStackTrace ( ps ) ; }
10852	public Builder version ( String version ) { this . version = version ; return this ; }
10875	@ Override public StringBuffer format ( final double value , final StringBuffer buffer , final FieldPosition position ) { return format ( Double . valueOf ( value ) , buffer , position ) ; }
10912	public static void recordExplicitUserNavigation ( String destinationUrl , int rapporMetric ) { switch ( rapporMetric ) { case RAPPOR_ACTION_NAVIGATED_USING_OMNIBOX : RapporServiceBridge . sampleDomainAndRegistryFromURL ( _CHAR NTP . ExplicitUserAction . PageNavigation . OmniboxNonSearch _CHAR , destinationUrl ) ; return ; case RAPPOR_ACTION_VISITED_SUGGESTED_TILE : RapporServiceBridge . sampleDomainAndRegistryFromURL ( _CHAR NTP . ExplicitUserAction . PageNavigation . NTPTileClick _CHAR , destinationUrl ) ; return ; default : return ; } }
10915	public static boolean startsWithIgnoreCase ( String str , String prefix ) { return str != _NULL && prefix != _NULL && str . regionMatches ( _BOOL , _NUM , prefix , _NUM , prefix . length ( ) ) ; }
10956	public void endServiceRecording ( boolean notifyRecordingEnded , String runId , String experimentTitle ) { clearNotification ( getApplicationContext ( ) , NotificationIds . RECORDER_SERVICE ) ; if ( notifyRecordingEnded ) { notifyRecordingEnded ( runId , experimentTitle ) ; } stopForeground ( _BOOL ) ; stopSelf ( ) ; }
10962	@ Override public boolean isDataSource ( ) { return _BOOL ; }
10973	public static boolean hasNameChanged ( final ISourceDataTag sourceDataTag , final ISourceDataTag oldSourceDataTag ) { return ! sourceDataTag . getName ( ) . equals ( oldSourceDataTag . getName ( ) ) ; }
10974	public S2LatLngRect union ( S2LatLngRect other ) { return new S2LatLngRect ( lat . union ( other . lat ) , lng . union ( other . lng ) ) ; }
10978	public void startWatching ( String fileName ) { synchronized ( mObservedChildren ) { if ( ! mObservedChildren . containsKey ( fileName ) ) { mObservedChildren . put ( fileName , Boolean . valueOf ( _BOOL ) ) ; } } if ( new File ( mPath ) . exists ( ) ) { startWatching ( ) ; Log_OC . d ( TAG , _CHAR Started watching parent folder _CHAR + mPath + _CHAR / _CHAR ) ; } }
10990	public boolean containsValue ( String key ) { return options . get ( key ) != _NULL ; }
11033	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_INVENTORY_ITEM ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
11035	public void onConfigurationChanged ( Configuration newConfig ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { plugin . onConfigurationChanged ( newConfig ) ; } } }
11095	public static SM_SYSTEM_MESSAGE STR_COMBINE_CANT_USE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11135	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
11280	public boolean isInterceptScrollingWhileAnimationRunning ( ) { return mInterceptScrollingWhileAnimationRunning ; }
11297	public static long deserializeTransactionId ( byte [ ] data ) { String seqNoStr = new String ( data , UTF_8 ) ; return Long . parseLong ( seqNoStr ) ; }
11391	protected AdsUpdateTargetGroupQuery name ( String value ) { return unsafeParam ( _CHAR name _CHAR , value ) ; }
11409	public RemoteOperationResult execute ( OwnCloudClient client , FileDataStorageManager storageManager ) { if ( storageManager == _NULL ) throw new IllegalArgumentException ( _CHAR Trying to execute a sync operation with a _CHAR + _CHAR NULL storage manager _CHAR ) ; mStorageManager = storageManager ; return super . execute ( client ) ; }
11485	public boolean forEachKey ( TObjectProcedure < K > procedure ) { return forEach ( procedure ) ; }
11543	public boolean hasLogicalMapping ( String logicalName ) { return logicalToPhysicalColumnNames . containsKey ( logicalName ) ; }
11561	@ Override public List < Integer > readInvertedSortIndex ( ) throws IOException { if ( _NULL == columnSortInfo ) { readColumnSortInfo ( ) ; } return columnSortInfo . getSort_index_inverted ( ) ; }
11573	@ Override public String toString ( ) { return in . toString ( ) ; }
11598	public static void saveBaseUrls ( SusiBaseUrls susiBaseUrls ) { putString ( SUSI_BASE_URLS , gson . toJson ( susiBaseUrls ) ) ; }
11606	public static String trim ( String path ) { while ( path . startsWith ( _CHAR \ _CHAR _CHAR ) && path . endsWith ( _CHAR \ _CHAR _CHAR ) ) path = path . substring ( _NUM , path . length ( ) - _NUM ) ; return path ; }
11678	@ RequestMapping ( value = _CHAR / authenticate _CHAR , method = RequestMethod . GET , produces = MediaType . APPLICATION_JSON_VALUE ) @ Timed public String isAuthenticated ( HttpServletRequest request ) { log . debug ( _CHAR REST request to check if the current user is authenticated '' ) ; return request . getRemoteUser ( ) ; }
11785	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
11786	public static boolean isGeoHeaderEnabledForUrl ( Context context , String url , boolean isIncognito ) { return isGeoHeaderEnabledForUrl ( context , url , isIncognito , _BOOL ) ; }
11835	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ExtendAuraRange_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
11836	public void sort ( ) { Arrays . sort ( _data , _NUM , _pos ) ; }
11916	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
11940	public boolean isZoomOverItem ( ) { return m_zoomOverItem ; }
11980	public boolean more ( ) throws JSONException { next ( ) ; if ( end ( ) ) { return _BOOL ; } back ( ) ; return _BOOL ; }
12104	public void gatherArtifactInfo ( ArtifactInfoContext aic ) { }
12236	public boolean resultToContext ( ) { return this . resultToContext ; }
12262	private void dropTables ( ) { List < String > tableNamesToDrop = findTablesToDrop ( ) ; dropTables ( tableNamesToDrop , mDb ) ; clearCopyInTableSchema ( tableNamesToDrop ) ; }
12304	public ContextVarNode findContextVarNode ( Object baseValue , Context context ) { LocalVarNode base = findLocalVarNode ( baseValue ) ; if ( base == _NULL ) return _NULL ; return base . context ( context ) ; }
12350	@ Override public boolean onScale ( ScaleGestureDetector detector ) { return _BOOL ; }
12354	public static SpaceIndex createCompoundIndex ( String [ ] paths , SpaceIndexType indexType , String indexName , boolean unique ) { return createCompoundIndex_Impl ( paths , indexType , indexName , unique ) ; }
12494	@ Override public String marshal ( final BigDecimal v ) throws Exception { if ( v != _NULL ) { final DecimalFormatSymbols symbols = new DecimalFormatSymbols ( ) ; symbols . setDecimalSeparator ( _CHAR ) ; return new DecimalFormat ( _CHAR _NUM . _NUM _CHAR , symbols ) . format ( v ) ; } else { return _NULL ; } }
12550	@ Override public int fillChunkData ( byte [ ] data , int offset , int index , KeyStructureInfo restructuringInfo ) { return _NUM ; }
12587	public void deriveValues ( @ NotNull ScopedStateStore stateStore , @ NotNull Set < ScopedStateStore . Key > modified ) { myMinSdkCombobox . deriveValues ( stateStore , modified ) ; }
12619	public Response < ? > response ( ) { return response ; }
12631	public static double linearInterp ( double val , double min , double max ) { double denominator = ( max - min ) ; if ( denominator == _NUM ) return _NUM ; return ( val - min ) / denominator ; }
12670	public static void writeStringToFile ( File file , String data , String encoding , boolean append ) throws IOException { writeStringToFile ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
12707	public void safeTimeToSpeech ( String time ) { try { if ( time . equals ( _CHAR now _CHAR ) ) { speakNow ( ) ; } else { timeToSpeech ( time ) ; } } catch ( IllegalArgumentException iae ) { System . err . println ( _CHAR Bad time format _CHAR ) ; } }
12710	public synchronized ZooKeeperClientBuilder statsLogger ( StatsLogger statsLogger ) { this . statsLogger = statsLogger ; return this ; }
12737	public LikesIsLikedQuery isLiked ( UserActor actor , LikesType type , int itemId ) { return new LikesIsLikedQuery ( getClient ( ) , actor , type , itemId ) ; }
12774	public boolean hasPermissionByInternalId ( String internalId , Permission permission ) { return hasPermissionsByInternalId ( internalId , ImmutableList . of ( permission ) ) ; }
12830	public String nextLine ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( _CHAR No more lines _CHAR ) ; } String currentLine = cachedLine ; cachedLine = _NULL ; return currentLine ; }
12908	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
12935	@ Override public void writeSortIndex ( List < Integer > sortIndexList ) throws IOException { columnSortInfo . setSort_index ( sortIndexList ) ; }
12946	public int readUnsignedByte ( ) throws IOException , EOFException { return in . read ( ) ; }
12976	private void subscribeToSupervisionTopic ( ) throws JMSException { Session session = connection . createSession ( _BOOL , Session . AUTO_ACKNOWLEDGE ) ; MessageConsumer consumer = session . createConsumer ( supervisionTopic ) ; consumer . setMessageListener ( supervisionListenerWrapper ) ; }
12990	public RequestHandle put ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return put ( context , url , paramsToEntity ( params , responseHandler ) , _NULL , responseHandler ) ; }
13023	protected final void clean ( ) { if ( ! isAlive ( ) ) return ; synchronized ( this ) { _shouldDie = _BOOL ; notify ( ) ; } try { join ( ) ; } catch ( InterruptedException e ) { } if ( _expirationList != _NULL ) _expirationList . clear ( ) ; }
13028	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_MIN_RANK ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
13041	public Iterator edges ( Node node ) { nodeCheck ( node , _BOOL ) ; return m_edgeTuples . iterator ( edgeRows ( node . getRow ( ) , UNDIRECTED ) ) ; }
13083	private List < View > addView ( View view , List < View > cache ) { if ( cache == _NULL ) { cache = new LinkedList < View > ( ) ; } cache . add ( view ) ; return cache ; }
13136	protected final void clean ( ) { if ( ! isAlive ( ) ) return ; synchronized ( this ) { _shouldDie = _BOOL ; notify ( ) ; } try { join ( ) ; } catch ( InterruptedException e ) { } if ( _expirationList != _NULL ) _expirationList . clear ( ) ; }
13174	public static SM_SYSTEM_MESSAGE STR_SKILL_DODGED_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
13189	private boolean hasIdleInvokers ( ) { for ( AsyncEventListenerInvoker invoker : this . scheduledInvokers ) { if ( invoker . isIdle ( ) ) { return _BOOL ; } } return _BOOL ; }
13205	@ Override public void finish ( ) { for ( Entry < String , FileChannel > entry : fileNameAndStreamCache . entrySet ( ) ) { try { FileChannel channel = entry . getValue ( ) ; if ( _NULL != channel ) { channel . close ( ) ; } } catch ( IOException exception ) { LOGGER . error ( exception , exception . getMessage ( ) ) ; } } }
13243	public Builder className ( String className ) { this . className = className ; return this ; }
13294	public AemDialog clickDialogFooterButton ( final String buttonText ) { final WebElement footerButton = getFooterButtonWebElement ( buttonText ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ( ExpectedCondition < Object > ) _NULL , _NUM ) ; bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( CommonExpectedConditions . noAemAjax ( ) ) ; return this ; }
13317	public static void finishZipEntry ( ZipOutputStream out ) { try { out . finish ( ) ; } catch ( Exception ex ) { throw new RuntimeException ( _CHAR Failed to finish the content of the ZipOutputStream _CHAR , ex ) ; } }
13354	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCMPHeal_Instant_HEAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
13364	private void extractJobDefinitionsFromStageDefinitions ( List < StageDefinition > stageDefinitions , List < JobDefinition > jobDefinitions ) { for ( StageDefinition stageDefinition : stageDefinitions ) { List < JobDefinition > jobDefinitionsList = stageDefinition . getJobDefinitions ( ) ; jobDefinitions . addAll ( jobDefinitionsList ) ; } }
13385	public boolean isList ( String key ) { Object val = get ( key ) ; return val instanceof List ; }
13414	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . of ( ) ; }
13443	@ Override public long toLong ( ) { return _NUM ; }
13473	public Builder addColumnDouble ( String name , Double minAllowedValue , Double maxAllowedValue ) { return addColumnDouble ( name , minAllowedValue , maxAllowedValue , _BOOL , _BOOL ) ; }
13479	public static StorableTimeFence inInterval ( long startTimeMillis , long stopTimeMillis ) { return new StorableTimeFence ( ABSOLUTE , _NULL , startTimeMillis , stopTimeMillis ) ; }
13504	public synchronized void waitForNonActiveStatus ( ) { try { if ( _status == INITIAL_SCAN_NOTACTIVE ) return ; _needNotifyTermination = _BOOL ; this . wait ( _NUM ) ; } catch ( InterruptedException e ) { Thread . currentThread ( ) . interrupt ( ) ; } }
13522	public static ActivityOptionsCompatICS makeCustomAnimation ( Context context , int enterResId , int exitResId ) { ActivityOptionsCompatICS opts = new ActivityOptionsCompatICS ( ) ; opts . mAnimationType = ANIM_CUSTOM ; opts . mCustomEnterResId = enterResId ; opts . mCustomExitResId = exitResId ; return opts ; }
13529	public static SM_SYSTEM_MESSAGE STR_MAIL_MSG_RECIPIENT_MAILBOX_FULL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13531	public void allow ( PermissionFlag flag ) { generalPermissions . remove ( flag ) ; }
13532	public static boolean writeFile ( String filePath , List < String > contentList ) { return writeFile ( filePath , contentList , _BOOL ) ; }
13563	@ Nullable public FunctionStatement findFunctionInScope ( String name ) { FunctionStatement localFn = findDeclaredFunction ( name ) ; if ( localFn != _NULL ) { return localFn ; } return findLoadedFunction ( name ) ; }
13578	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PetOrderUnSummon_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
13698	public boolean isKeepPositionOnRotation ( ) { return mKeepPositionOnRotation ; }
13729	public static Charset toCharset ( Charset charset ) { return charset == _NULL ? Charset . defaultCharset ( ) : charset ; }
13730	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysParry_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
13878	public boolean supportsThreadDump ( Application application ) { if ( application . getState ( ) != Stateful . STATE_AVAILABLE ) return _BOOL ; return JvmFactory . getJVMFor ( application ) . isTakeThreadDumpSupported ( ) ; }
13898	@ Deprecated public void onFailure ( Throwable error ) { }
13912	private void parseHeader ( String header ) { Log . v ( _CHAR HttpHeader _CHAR , _CHAR HttpAuthHeader . parseHeader ( ) : header : _CHAR + header ) ; if ( header != _NULL ) { String parameters = parseScheme ( header ) ; if ( parameters != _NULL ) { if ( mScheme != UNKNOWN ) { parseParameters ( parameters ) ; } } } }
13963	private static byte readByte ( boolean [ ] rawbits , int startIndex ) { int n = rawbits . length - startIndex ; if ( n >= _NUM ) { return ( byte ) readCode ( rawbits , startIndex , _NUM ) ; } return ( byte ) ( readCode ( rawbits , startIndex , n ) << ( _NUM - n ) ) ; }
13971	public RequestHandle head ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return sendRequest ( httpClient , httpContext , new HttpHead ( getUrlWithQueryString ( isUrlEncodingEnabled , url , params ) ) , _NULL , responseHandler , context ) ; }
13976	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
13984	public static < T , D extends Number > D addAndGet ( GigaSpace gigaSpace , IdQuery < T > idQuery , String path , D delta ) { return addAndGet ( gigaSpace , idQuery , path , delta , ChangeModifiers . NONE , _NUM , TimeUnit . MILLISECONDS ) ; }
13989	public void fireTerminationEvent ( final IterationEvent e ) { for ( IterationListener l : listeners ) { l . terminationPerformed ( e ) ; } }
13994	void removeProgressNotificationForDownload ( int downloadId ) { mDownloadProgressMap . remove ( downloadId ) ; mDownloadNotifier . cancelNotification ( downloadId ) ; removeDownloadIdFromSharedPrefs ( downloadId ) ; }
14026	public void removeDatatransferProgressListener ( OnDatatransferProgressListener listener , OCUpload ocUpload ) { if ( ocUpload == _NULL || listener == _NULL ) return ; String targetKey = buildRemoteName ( ocUpload . getAccountName ( ) , ocUpload . getRemotePath ( ) ) ; if ( mBoundListeners . get ( targetKey ) == listener ) { mBoundListeners . remove ( targetKey ) ; } }
14045	@ Override public float toFloat ( ) { throw new UnsupportedOperationException ( ) ; }
14074	public boolean isRestartOnCrash ( ) { return restartOnCrash ; }
14079	private void removeTestData ( ) { supervisionMapper . testDelete ( ID ) ; }
14145	public static ValueCompressonHolder . UnCompressValue unCompressNonDecimalMaxMin ( DataType compDataType , DataType actualDataType ) { switch ( compDataType ) { case DATA_BYTE : return new UnCompressNonDecimalMaxMinByte ( ) ; case DATA_SHORT : return new UnCompressNonDecimalMaxMinShort ( ) ; case DATA_INT : return new UnCompressNonDecimalMaxMinInt ( ) ; case DATA_LONG : return new UnCompressNonDecimalMaxMinLong ( ) ; case DATA_FLOAT : return new UnCompressNonDecimalMaxMinFloat ( ) ; default : return new UnCompressNonDecimalMaxMinDefault ( ) ; } }
14261	private void takeScreenshot ( ) { Bitmap bmp = screen . grabScreen ( ) ; if ( bmp == _NULL ) { return ; } scanPokemon ( bmp , Optional . < String > absent ( ) ) ; bmp . recycle ( ) ; }
14269	@ Override public StringBuffer format ( final double value , final StringBuffer buffer , final FieldPosition position ) { return format ( Double . valueOf ( value ) , buffer , position ) ; }
14313	protected void init ( ) { calcMinMax ( ) ; }
14371	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
14466	private void log ( final Level level , final Object o , final Throwable t ) { if ( logger . isEnabledFor ( level ) ) { NDC . push ( ndcPush ) ; logger . log ( level , o , t ) ; NDC . pop ( ) ; } }
14536	public boolean hasArc ( int u , int v ) { if ( u < _NUM || u >= sentence . length ( ) || v < _NUM || v >= sentence . length ( ) ) { throw new IllegalArgumentException ( _CHAR Invalid index ! _CHAR ) ; } return ( heads [ v ] == u ) ; }
14636	public static TransferDevice createTransferDevice ( Device device , String className ) { TransferDeviceImpl transferDevice = new TransferDeviceImpl ( device . getId ( ) , device . getName ( ) , device . getDeviceClassId ( ) , className ) ; transferDevice . addDeviceProperties ( device . getDeviceProperties ( ) ) ; transferDevice . addDeviceCommands ( device . getDeviceCommands ( ) ) ; return transferDevice ; }
14736	public void onConfigurationChanged ( Configuration newConfig ) { }
14850	@ Override public StringBuffer format ( final long value , final StringBuffer buffer , final FieldPosition position ) { return format ( Long . valueOf ( value ) , buffer , position ) ; }
14871	public AemInsertWindow insertComponent ( Class < ? > componentClass ) { chooseComponent ( componentClass , chooseTab ( componentClass ) ) ; clickOkAndWait ( ) ; return this ; }
14878	public static boolean isWide ( TypeReference typeReference ) { String t = typeReference . getType ( ) ; return isWide ( t ) ; }
14905	@ Override public synchronized void reset ( ) throws IOException { try { in . reset ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
14923	@ Override public void onCompletion ( MediaPlayer mp ) { Log_OC . v ( TAG , _CHAR completed _CHAR ) ; if ( mp != _NULL ) { mVideoPreview . seekTo ( _NUM ) ; } mMediaController . updatePausePlay ( ) ; }
14962	public GenericValue create ( GenericValue value ) throws GenericEntityException { if ( value == _NULL ) { return _NULL ; } int retVal = genericDAO . insert ( value ) ; if ( Debug . verboseOn ( ) ) Debug . logVerbose ( _CHAR Insert Return Value : _CHAR + retVal , module ) ; return value ; }
14975	public void updateStackVisiblityValue ( float stackVisibility ) { mCacheStackVisibility = stackVisibility ; mOrderSortingValue = computeOrderSortingValue ( mCachedIndexDistance , mCacheStackVisibility ) ; mVisiblitySortingValue = computeVisibilitySortingValue ( mCachedVisibleArea , mOrderSortingValue , mCacheStackVisibility ) ; }
15048	public FriendsGetRequestsQueryWithNeedMutual out ( Boolean value ) { return unsafeParam ( _CHAR out _CHAR , value ) ; }
15108	public PhotosSaveWallPhotoQuery saveWallPhoto ( UserActor actor , String photo ) { return new PhotosSaveWallPhotoQuery ( getClient ( ) , actor , photo ) ; }
15128	public static ValueGetterSpacePredicate < ServerEntry > property ( String propertyName , ISpacePredicate predicate ) { return new ValueGetterSpacePredicate < ServerEntry > ( new SpaceEntryPropertyGetter ( propertyName ) , predicate ) ; }
15133	private void continueSet ( Channel channel , SessionStatus state , byte [ ] remainder , ChannelHandlerContext channelHandlerContext ) { state . cmd . element . setData ( remainder ) ; Channels . fireMessageReceived ( channelHandlerContext , state . cmd , channelHandlerContext . getChannel ( ) . getRemoteAddress ( ) ) ; }
15182	public boolean isLocalActive ( ) { return _localActive ; }
15215	public static PsiReference [ ] findReferencesInElementScope ( PsiElement element ) { return findReferencesInScope ( element , PsiSearchHelper . SERVICE . getInstance ( element . getProject ( ) ) . getUseScope ( element ) ) ; }
15270	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeBoostSkillCritical_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
15274	private void afterUpdate ( DataSupport baseObj ) { if ( ! ignoreAssociations ) { updateAssociatedTableWithFK ( baseObj ) ; insertIntermediateJoinTableValue ( baseObj , _BOOL ) ; clearFKValueInAssociatedTable ( baseObj ) ; } }
15276	public byte readByte ( ) throws IOException , EOFException { return ( byte ) in . read ( ) ; }
15296	public static boolean hasDataType ( DataType dataType , DataType [ ] dataTypes ) { for ( int i = _NUM ; i < dataTypes . length ; i ++ ) { if ( dataType . equals ( dataTypes [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
15307	public static void enableJMS ( boolean enable ) { ServiceDispatcher . enableJMS = enable ; }
15323	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SubTypeExtendDuration_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
15343	public static Model create ( FileDescriptorSet proto ) { return new Model ( proto , _NULL , _NULL , ExtensionPool . EMPTY , new BoundedDiagCollector ( ) ) ; }
15439	public static void write ( File file , CharSequence data , String encoding , boolean append ) throws IOException { write ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
15498	public void join ( String tableName , String leftColumnName , String rightColumnName ) { this . joinTableNames . add ( tableName ) ; this . joinLeftColumnNames . add ( leftColumnName ) ; this . joinRightColumnNames . add ( rightColumnName ) ; }
15556	static void scheduleNow ( Activity a ) { getInstance ( ) . _schedule ( a , System . currentTimeMillis ( ) ) ; }
15564	static < T > T parseJsonAndClose ( InputStream in , Class < T > cls ) throws JsonParseException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( in ) ) ; try { return GSON . fromJson ( reader , cls ) ; } finally { try { reader . close ( ) ; } catch ( IOException e ) { } } }
15582	boolean needsRollover ( ) { Calendar now = GregorianCalendar . getInstance ( ) ; if ( now . compareTo ( nextRollover ) > _NUM ) { setTimestamp ( ) ; return _BOOL ; } else { return _BOOL ; } }
15584	public void addMutualEdge ( Object from , Object to ) { if ( ! super . containsNode ( from ) ) super . addNode ( from ) ; if ( ! super . containsNode ( to ) ) super . addNode ( to ) ; super . addEdge ( from , to ) ; super . addEdge ( to , from ) ; }
15619	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_FINISHED_QUEST ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15642	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } }
15653	@ Override public void confirm ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( copyButton ) ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( copyButton ) ) ; }
15766	public static boolean valid ( String s , Type t , boolean template ) { return _valid ( s , t , template ) == - _NUM ; }
15817	public static final SupervisionEvent fromJson ( final String json ) { return getGson ( ) . fromJson ( json , SupervisionEventImpl . class ) ; }
15857	public static SM_SYSTEM_MESSAGE STR_MERCENARY_FOLLOWING_CANCELED_BY_TOO_DISTANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15866	@ Override public boolean isEmpty ( ) { return backedSet . isEmpty ( ) ; }
15886	public static IOFileFilter makeDirectoryOnly ( IOFileFilter filter ) { if ( filter == _NULL ) { return DirectoryFileFilter . DIRECTORY ; } return new AndFileFilter ( DirectoryFileFilter . DIRECTORY , filter ) ; }
15904	public double recordsOutput ( ) { String fld = dists . keySet ( ) . iterator ( ) . next ( ) ; double sum = _NUM . _NUM ; for ( Bucket bkt : buckets ( fld ) ) sum += bkt . frequency ( ) ; return sum ; }
15935	public Builder withModuleRoot ( @ NotNull File moduleRoot ) { myModuleRoot = moduleRoot ; return this ; }
15956	public AdsGetAdsTargetingQuery clientId ( Integer value ) { return unsafeParam ( _CHAR client_id _CHAR , value ) ; }
15978	public void detachAllChildren ( ) { for ( int i = children . size ( ) - _NUM ; i >= _NUM ; i -- ) { detachChildAt ( i ) ; } logger . info ( _CHAR All children removed . '' ) ; }
15986	void releaseToPool ( long timeout , TimeUnit unit ) { registerAsIdle ( ) ; offerToPool ( timeout , unit ) ; }
16025	private boolean clipPathSupported ( ) { return Utils . getSDKInt ( ) >= _NUM ; }
16034	public boolean isSourcesModified ( ) { if ( myInitialItems == _NULL ) { return _BOOL ; } if ( getItems ( ) . size ( ) != myInitialItems . size ( ) ) { return _BOOL ; } for ( Row row : getItems ( ) ) { if ( row . isModified ( ) ) { return _BOOL ; } if ( ! myInitialItems . contains ( row . mySource ) ) { return _BOOL ; } } return _BOOL ; }
16083	public static void adjustBaseIndex ( Zmat A ) { BaseIndexNotChangeable = _BOOL ; A . basex = BaseIndex ; A . getProperties ( ) ; }
16085	public void clear ( ) { clear ( DEFAULT_CAPACITY ) ; }
16106	public String nextLine ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( _CHAR No more lines _CHAR ) ; } String currentLine = cachedLine ; cachedLine = _NULL ; return currentLine ; }
16195	public RequestHandle post ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return post ( context , url , paramsToEntity ( params , responseHandler ) , _NULL , responseHandler ) ; }
16278	public Session createSession ( boolean transacted , int acknowledgeMode ) throws JMSException { if ( closed ) { throw new IllegalStateException ( _CHAR Forbidden call on a closed connection . '' ) ; } GSSessionImpl session = new GSSessionImpl ( this , transacted , acknowledgeMode ) ; if ( ! isStopped ( ) ) { session . start ( ) ; } return session ; }
16280	public static String [ ] readStrings ( ) { return new In ( ) . readAllStrings ( ) ; }
16325	public void shuffleTestSet ( ) { utils . shuffleList ( TestFiles ) ; }
16338	public void notifyDataSetChanged ( ) { calcMinMax ( _NUM , getEntryCount ( ) - _NUM ) ; }
16414	public String [ ] categoryArray ( ) { return keyToValue . values ( ) . toArray ( new String [ size ( ) ] ) ; }
16450	public boolean moreAccentuated ( String posA , String posB ) { return getPriority ( posA ) < getPriority ( posB ) ; }
16590	public static void validate ( String s , Type t ) { validate ( s , t , _BOOL ) ; }
16608	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return APPKEY ; case _NUM : return SEND_TIME ; case _NUM : return LOAD_INFO ; case _NUM : return STATUS ; default : return _NULL ; } }
16621	protected void addFieldConfig ( FieldConfigBase fieldConfig ) { fieldConfigList . add ( fieldConfig ) ; }
16641	public static SM_SYSTEM_MESSAGE STR_MSG_Recall_DONOT_ACCEPT_EFFECT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16772	public void put ( String key , Object value ) { if ( key != _NULL && value != _NULL ) { urlParamsWithObjects . put ( key , value ) ; } }
16822	@ Override public void write ( DataOutput out ) throws IOException { }
16827	public boolean isAscending ( ) { return m_asc ; }
16874	public static String encodeString ( String s ) { return new String ( encode ( s . getBytes ( ) ) ) ; }
16883	@ Override public XSSimpleType createTypeRestriction ( String name , String targetNamespace , short finalSet , XSSimpleType base , XSObjectList annotations ) { return new XSSimpleTypeDecl ( ( XSSimpleTypeDecl ) base , name , targetNamespace , finalSet , _BOOL , annotations ) ; }
16906	public boolean isString ( String key ) { Object val = get ( key ) ; return val instanceof String ; }
16912	private void updateReceivedNotifications ( DefaultMutableTreeNode emitter , long received ) { String text = Resources . getText ( _CHAR LBL_Notifications _CHAR ) + _CHAR [ _CHAR + received + _CHAR ] _CHAR ; updateNotificationsNodeLabel ( emitter , text ) ; }
16931	public boolean addAll ( PointsToSetInternal other , PointsToSetInternal exclude ) { throw new RuntimeException ( _CHAR ca n _CHAR_CHAR ) ; }
17028	protected void syncSummaryView ( PreferenceViewHolder holder ) { View view = holder . findViewById ( android . R . id . summary ) ; syncSummaryView ( view ) ; }
17052	public boolean isAdded ( ) { return this . added ; }
17060	public static String formatListToString ( List < String > list ) { String result = _CHAR _CHAR ; for ( String s : list ) result += s + _CHAR \ t \ t _CHAR ; result = result . trim ( ) ; return result . toUpperCase ( ) ; }
17103	public final synchronized void clear ( ) { fCatalog = _NULL ; }
17141	public static SM_SYSTEM_MESSAGE STR_MSG_ALARM_REMAIN_PLAYTIME_WITH_RESERVATION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17157	@ Override public boolean add ( Interval e ) { throw new IllegalAccessError ( _CHAR Do not use add in Simplified Interval List _CHAR ) ; }
17180	boolean dependsOn ( CoordinatorLayout parent , View child , View dependency ) { return dependency == mAnchorDirectChild || ( mBehavior != _NULL && mBehavior . layoutDependsOn ( parent , child , dependency ) ) ; }
17197	public boolean isResourceNotAJar ( Resource resource ) { try { return ! resource . getURI ( ) . getScheme ( ) . equals ( _CHAR jar _CHAR ) ; } catch ( IOException e ) { return _BOOL ; } }
17199	@ NotNull public AnalyzeImageAction analyzeImage ( @ NotNull List < VisualFeatures > visualFeatures , @ NotNull List < DomainSpecificDetails > domainSpecificDetails , @ NotNull InputStream image ) { return new AnalyzeImageAction ( cognitiveContext , visualFeatures , domainSpecificDetails , image ) ; }
17208	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
17232	public void notifyDataSetChanged ( ) { calcMinMax ( ) ; }
17269	public JsonArray add ( String value ) { values . add ( Json . value ( value ) ) ; return this ; }
17314	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Dispel_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
17355	public SootClass createSootClass ( ) { Walker w = new Walker ( SootResolver . v ( ) ) ; mTree . apply ( w ) ; return w . getSootClass ( ) ; }
17372	@ Override public synchronized void reset ( ) throws IOException { fbIndex = markFbIndex ; if ( markedAtStart ) { firstBytes = _NULL ; } in . reset ( ) ; }
17429	public static void writeStringToFile ( File file , String data , String encoding , boolean append ) throws IOException { writeStringToFile ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
17456	public void shuffleTrainingSet ( ) { utils . shuffleList ( TrainingFiles ) ; }
17516	public static Charset toCharset ( Charset charset ) { return charset == _NULL ? Charset . defaultCharset ( ) : charset ; }
17572	public String toString ( ) { return getName ( ) ; }
17576	public static boolean isUnboxType ( TypeName tn ) { switch ( tn . toString ( ) ) { case _CHAR boolean _CHAR : case _CHAR byte _CHAR : case _CHAR char _CHAR : case _CHAR short _CHAR : case _CHAR int _CHAR : case _CHAR long _CHAR : case _CHAR float _CHAR : case _CHAR double _CHAR : return _BOOL ; } return _BOOL ; }
17596	@ Override public boolean markSupported ( ) { return in . markSupported ( ) ; }
17647	public boolean isSatisfied ( Record rec ) { for ( Term t : terms ) if ( ! t . isSatisfied ( rec ) ) return _BOOL ; return _BOOL ; }
17671	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
17687	public RequestHandle post ( Context context , String url , HttpEntity entity , String contentType , ResponseHandlerInterface responseHandler ) { return sendRequest ( httpClient , httpContext , addEntityToRequestBase ( new HttpPost ( url ) , entity ) , contentType , responseHandler , context ) ; }
17692	public Builder inertiaDeceleration ( Number inertiaDeceleration ) { this . inertiaDeceleration = inertiaDeceleration ; return this ; }
17793	public void replaceExifTag ( String tag , String value ) { if ( mExif == _NULL ) { loadExifData ( ) ; } mExif . setAttribute ( tag , value ) ; }
17826	private boolean matches ( ProjectViewTokenType kind ) { if ( currentToken ( ) == kind ) { builder . advanceLexer ( ) ; return _BOOL ; } return _BOOL ; }
17834	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
17901	public final void addValidationState ( ValidationState vs ) { fVSs . add ( vs ) ; }
18047	public void addDatatransferProgressListener ( OnDatatransferProgressListener listener , OCUpload ocUpload ) { if ( ocUpload == _NULL || listener == _NULL ) return ; String targetKey = buildRemoteName ( ocUpload . getAccountName ( ) , ocUpload . getRemotePath ( ) ) ; mBoundListeners . put ( targetKey , listener ) ; }
18112	@ Override public boolean equals ( Object o ) { if ( ! ( o instanceof ExpandedRow ) ) { return _BOOL ; } ExpandedRow that = ( ExpandedRow ) o ; return this . pairs . equals ( that . getPairs ( ) ) && wasReversed == that . wasReversed ; }
18251	@ Override public < T > T read ( InputStream inputStream , Class < T > classType ) throws IOException { Reader reader = new InputStreamReader ( inputStream ) ; return gson . fromJson ( reader , classType ) ; }
18252	public Builder draggable ( Boolean draggable ) { this . draggable = draggable ; return this ; }
18309	private void verifyOverrideRulesForConnectivity ( ) { if ( ( mConnectedLayout != _NUM && mDisconnectedLayout == _NUM ) ) { throw new RuntimeException ( _CHAR Error inflating custom connectivity layout . '' + _CHAR Have you forgot to override the disconnected layout ? _CHAR ) ; } if ( ( mConnectedLayout == _NUM && mDisconnectedLayout != _NUM ) ) { throw new RuntimeException ( _CHAR Error inflating custom connectivity layout . '' + _CHAR Have you forgot to override the connected layout ? _CHAR ) ; } }
18327	public WallEditQuery lng ( Float value ) { return unsafeParam ( _CHAR long _CHAR , value ) ; }
18366	private void showNoAppForFileTypeToast ( Context context ) { Toast . makeText ( context , R . string . file_list_no_app_for_file_type , Toast . LENGTH_SHORT ) . show ( ) ; }
18398	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
18426	public AdsGetAdsLayoutQuery clientId ( Integer value ) { return unsafeParam ( _CHAR client_id _CHAR , value ) ; }
18511	public static byte [ ] serializeLogSegmentSequenceNumber ( long logSegmentSeqNo ) { return Long . toString ( logSegmentSeqNo ) . getBytes ( UTF_8 ) ; }
18517	@ Override public boolean isDataSource ( ) { return _BOOL ; }
18529	public void stopExecution ( ) { interrupt ( ) ; }
18605	public static boolean storageDirectoryExists ( ) { return new File ( HostsSupportImpl . getStorageDirectoryString ( ) ) . isDirectory ( ) ; }
18695	private MultipartFile findByFileName ( String filename , Map < String , MultipartFile > files ) { if ( files . containsKey ( filename ) ) { return files . get ( filename ) ; } for ( MultipartFile file : files . values ( ) ) { if ( filename . equals ( file . getOriginalFilename ( ) ) ) { return file ; } } return _NULL ; }
18701	public RequestHandle head ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return sendRequest ( httpClient , httpContext , new HttpHead ( getUrlWithQueryString ( isUrlEncodingEnabled , url , params ) ) , _NULL , responseHandler , context ) ; }
18754	private boolean containsKey ( final int key , final int index ) { return ( key != _NUM || states [ index ] == FULL ) && keys [ index ] == key ; }
18760	public static String filenameEncode ( String string ) { if ( string != _NULL ) { string = string . replaceAll ( ILLEGAL_FILENAME_CHARS_REGEX , _CHAR _CHAR ) ; if ( string . length ( ) > _NUM ) { string = string . substring ( _NUM , _NUM ) ; } } return string ; }
18771	public static IOFileFilter makeFileOnly ( IOFileFilter filter ) { if ( filter == _NULL ) { return FileFileFilter . FILE ; } return new AndFileFilter ( FileFileFilter . FILE , filter ) ; }
18818	public void addChangeListener ( ChangeListener changeListener ) { this . listenerList . add ( ChangeListener . class , changeListener ) ; }
18835	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelDeBuff_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
18856	public int findIndexOfValue ( String value ) { if ( value != _NULL && mEntryValues != _NULL ) { for ( int i = mEntryValues . length - _NUM ; i >= _NUM ; i -- ) { if ( mEntryValues [ i ] . equals ( value ) ) { return i ; } } } return - _NUM ; }
18966	public static int colorVariant ( int color , float intensity ) { float [ ] hsv = new float [ _NUM ] ; Color . colorToHSV ( color , hsv ) ; hsv [ _NUM ] *= intensity ; color = Color . HSVToColor ( hsv ) ; return color ; }
19010	public byte [ ] readBytes ( int position , int num ) { if ( Page . pageSize < position + num ) { throw new PageException ( _CHAR readBytes is out of bounds _CHAR ) ; } byte [ ] data = new byte [ num ] ; readBytes ( position , num , data ) ; return data ; }
19053	private static int computeChecksum ( byte [ ] buf , int offset , int length , String channel ) { Hasher hasher = Hashing . murmur3_32 ( ) . newHasher ( ) ; hasher . putBytes ( buf , offset , length ) ; hasher . putUnencodedChars ( channel ) ; return hasher . hash ( ) . asInt ( ) & _NUM ; }
19071	@ Override public int read ( ) throws IOException { try { beforeRead ( _NUM ) ; int b = in . read ( ) ; afterRead ( b != - _NUM ? _NUM : - _NUM ) ; return b ; } catch ( IOException e ) { handleIOException ( e ) ; return - _NUM ; } }
19094	public static boolean valid ( String s , Type t ) { return valid ( s , t , _BOOL ) ; }
19195	protected void close ( ) { try { if ( to != _NULL ) to . close ( ) ; if ( from != _NULL ) from . close ( ) ; } catch ( IOException e ) { } if ( process != _NULL ) process . destroy ( ) ; process = _NULL ; to = _NULL ; from = _NULL ; errorLogger = _NULL ; }
19220	public static int extractLowSignedNibble ( int value ) { return ( value << _NUM ) >> _NUM ; }
19228	public < T5 > Pattern5 < T1 , T2 , T3 , T4 , T5 > and ( Observable < T5 > other ) { if ( other == _NULL ) { throw new NullPointerException ( ) ; } return new Pattern5 < T1 , T2 , T3 , T4 , T5 > ( o1 , o2 , o3 , o4 , other ) ; }
19231	protected double ScalingFunction ( int iDistance ) { return Math . exp ( - Math . pow ( ( iDistance ) , _NUM . _NUM ) / ( _NUM . _NUM * Math . pow ( CorrelationWindow , _NUM . _NUM ) ) ) ; }
19245	@ Override public long recordsOutput ( ) { return ( long ) histogram ( ) . recordsOutput ( ) ; }
19295	public static void toPdf ( List < Grid > grids , OutputStream out ) { if ( hasNonEmptyGrid ( grids ) ) { Document document = openDocument ( out ) ; for ( Grid grid : grids ) { toPdfInternal ( grid , document , _NUM ) ; } addPdfTimestamp ( document , _BOOL ) ; closeDocument ( document ) ; } }
19296	public static int [ ] shuffle ( int [ ] intArray ) { if ( intArray == _NULL ) { return _NULL ; } return shuffle ( intArray , getRandom ( intArray . length ) ) ; }
19320	public boolean remove ( JobStatus jobStatus ) { boolean removed = mJobSet . remove ( jobStatus ) ; if ( ! removed ) { if ( DEBUG ) { } return _BOOL ; } if ( jobStatus . isPersisted ( ) ) { maybeWriteStatusToDiskAsync ( ) ; } return removed ; }
19328	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCBuff_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
19333	public FriendsGetRequestsQuery out ( Boolean value ) { return unsafeParam ( _CHAR out _CHAR , value ) ; }
19443	private String deEscapeLiteral ( String lit ) { return lit . replaceAll ( _CHAR \\\\\ _CHAR _CHAR , _CHAR \ _CHAR _CHAR ) ; }
19450	public Matrix3f transposeNew ( ) { Matrix3f ret = new Matrix3f ( m00 , m10 , m20 , m01 , m11 , m21 , m02 , m12 , m22 ) ; return ret ; }
19458	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPHeal_Instant_HEAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
19473	public void put ( String key , Object value ) { if ( key != _NULL && value != _NULL ) { urlParamsWithObjects . put ( key , value ) ; } }
19544	public static boolean putMapNotEmptyKeyAndValue ( Map < String , String > map , String key , String value ) { if ( map == _NULL || StringUtil . isEmpty ( key ) || StringUtil . isEmpty ( value ) ) { return _BOOL ; } map . put ( key , value ) ; return _BOOL ; }
19588	public boolean hasErrors ( ) { return errorDescription != _NULL ; }
19596	public static int rgb ( int r , int g , int b ) { return rgba ( r , g , b , _NUM ) ; }
19602	protected void querySegmentMetadata ( final PhysicalTable table ) { String resourcePath = String . format ( SEGMENT_METADATA_QUERY_FORMAT , table . getName ( ) ) ; SuccessCallback success = buildSegmentMetadataSuccessCallback ( table ) ; druidWebService . getJsonObject ( success , errorCallback , failureCallback , resourcePath ) ; }
19644	public static void assertSameMembers ( ThrowableSet s , Set < ? extends RefLikeType > included , Set < AnySubType > excluded ) { assertTrue ( ExceptionTestUtility . sameMembers ( included , excluded , s ) ) ; }
19661	private boolean lastEntry ( ) { return column . get ( column . size ( ) - _NUM ) ; }
19694	@ Override public boolean isFileModified ( long fileTimeStamp , long endOffset ) { boolean isFileModified = _BOOL ; if ( getLastModifiedTime ( ) > fileTimeStamp || getSize ( ) > endOffset ) { isFileModified = _BOOL ; } return isFileModified ; }
19723	public void addDatatransferProgressListener ( OnDatatransferProgressListener listener , Account account , OCFile file ) { if ( account == _NULL || file == _NULL || listener == _NULL ) return ; String targetKey = buildRemoteName ( account . name , file . getRemotePath ( ) ) ; mBoundListeners . put ( targetKey , listener ) ; }
19725	public void onFailure ( int statusCode , Header [ ] headers , String responseBody , Throwable error ) { onFailure ( responseBody , error ) ; }
19736	public boolean isAnyAxisInverted ( ) { if ( mAxisLeft . isInverted ( ) ) return _BOOL ; if ( mAxisRight . isInverted ( ) ) return _BOOL ; return _BOOL ; }
19754	private void createBaseNode ( ) throws KeeperException , InterruptedException { if ( _NULL == zk . exists ( zooKeeperLocation , _BOOL ) ) { zk . create ( zooKeeperLocation , new byte [ _NUM ] , Ids . OPEN_ACL_UNSAFE , CreateMode . PERSISTENT ) ; } }
19815	private static Path qualified ( Path rootPath , Path path ) { URI rootUri = rootPath . toUri ( ) ; return path . makeQualified ( rootUri , new Path ( rootUri . getPath ( ) ) ) ; }
19830	private int maxChildrenShift ( ) { return _NUM * levelMod ; }
19877	public void processPackets ( Player player , List < DataPacket > packets ) { if ( packets . isEmpty ( ) ) return ; List < Byte > filter = new ArrayList < > ( ) ; for ( DataPacket packet : packets ) { player . handleDataPacket ( packet ) ; } }
19885	public boolean removeChild ( Node n ) { nodeCheck ( n , _BOOL ) ; return removeChild ( n . getRow ( ) ) ; }
19908	public boolean isSection ( String key ) { Object value = this . get ( key ) ; return value instanceof ConfigSection ; }
19930	public RequestHandle head ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return sendRequest ( httpClient , httpContext , new HttpHead ( getUrlWithQueryString ( isUrlEncodingEnabled , url , params ) ) , _NULL , responseHandler , context ) ; }
19952	private String checkIfValueIsNotEmpty ( Host hostWithTwitterSettings , String fieldVarName ) { String tempValue = hostWithTwitterSettings . getStringProperty ( fieldVarName ) ; if ( tempValue == _NULL || tempValue . isEmpty ( ) ) { throw new NullPointerException ( _CHAR The value of field _CHAR_CHAR_CHAR is not filled in the Host _CHAR ) ; } return tempValue ; }
19990	public boolean isFull ( ) { return height >= _NUM ; }
20008	protected PhotosGetQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
20013	public int addNodeRow ( ) { return getNodeTable ( ) . addRow ( ) ; }
20041	public void removeEntrySA ( Context context , IEntryHolder entry , IServerTypeDesc typeDesc , boolean fromReplication , boolean origin , EntryRemoveReasonCodes removeReason ) throws SAException { removeEntrySA ( context , entry , typeDesc , fromReplication , origin , removeReason , _BOOL , _BOOL , _BOOL ) ; }
20077	public static ValueGetterSpacePredicate < ServerEntry > path ( String path , ISpacePredicate predicate ) { return new ValueGetterSpacePredicate < ServerEntry > ( new SpaceEntryPathGetter ( path ) , predicate ) ; }
20131	public void authorLogin ( String login , String password ) { login ( authorUrl , login , password ) ; }
20146	private ByteBuffer initBuffer ( GSByteArrayOutputStream bos ) { ByteBuffer byteBuffer = wrap ( bos ) ; _bufferCache . set ( byteBuffer ) ; return byteBuffer ; }
20152	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
20154	protected void removeAt ( int index ) { _values [ index ] = ( long ) _NUM ; super . removeAt ( index ) ; }
20168	@ Override public int toInt ( ) { throw new UnsupportedOperationException ( ) ; }
20285	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
20301	public boolean isCellularExperimentEnabled ( ) { return mSharedPreferences . getBoolean ( PREF_CELLULAR_EXPERIMENT , _BOOL ) ; }
20319	public boolean forEachKey ( TObjectProcedure < K > procedure ) { return forEach ( procedure ) ; }
20340	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
20378	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
20404	public static byte [ ] serializeTransactionId ( long transactionId ) { return Long . toString ( transactionId ) . getBytes ( UTF_8 ) ; }
20458	public static String decorate ( String name , String formatString , Map bindings ) { IDecoratorComponent [ ] [ ] format = compileFormatString ( formatString ) ; String [ ] prefixSuffix = decorate ( format , bindings ) ; return prefixSuffix [ _NUM ] + name + prefixSuffix [ _NUM ] ; }
20459	private List < View > addView ( View view , List < View > cache ) { if ( cache == _NULL ) { cache = new LinkedList < View > ( ) ; } cache . add ( view ) ; return cache ; }
20469	public AccountGetBannedQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
20541	public MessagesSearchQuery search ( Actor actor ) { return new MessagesSearchQuery ( getClient ( ) , actor ) ; }
20571	private boolean isNextInStep ( final T nextTime , final FieldODEStateInterpolator < T > interpolator ) { return forward ? nextTime . getReal ( ) <= interpolator . getCurrentState ( ) . getTime ( ) . getReal ( ) : nextTime . getReal ( ) >= interpolator . getCurrentState ( ) . getTime ( ) . getReal ( ) ; }
20580	default String classEntityTypeName ( IRI classIri ) { return _CHAR t _CHAR + fromIri ( classIri ) ; }
20593	public static void assertSameMembers ( ThrowableSet . Pair p , RefLikeType [ ] caughtIncluded , AnySubType [ ] caughtExcluded , RefLikeType [ ] uncaughtIncluded , AnySubType [ ] uncaughtExcluded ) { assertSameMembers ( p . getCaught ( ) , caughtIncluded , caughtExcluded ) ; assertSameMembers ( p . getUncaught ( ) , uncaughtIncluded , uncaughtExcluded ) ; }
20726	public void invalidateGraphicsRenderer ( ) { myAndroidPreviewPanel . invalidateGraphicsRenderer ( ) ; }
20759	protected Set < D > computeNormalFlowFunction ( FlowFunction < D > flowFunction , D d1 , D d2 ) { return flowFunction . computeTargets ( d2 ) ; }
20789	public void reset ( ) { if ( ! isSourcesModified ( ) ) { if ( myInitialItems == _NULL ) { refreshUi ( ) ; } return ; } myConfigurable . getRepoManager ( ) . getSources ( new StudioDownloader ( ) , myLogger , _BOOL ) ; myInitialItems = _NULL ; refreshUi ( ) ; }
20792	public void partitionWithPercent ( boolean withPercent ) { this . withPercent = withPercent ; if ( withPercent ) chartUtils = ChartHelper . generateArcWithPercent ( chartData ) ; else chartUtils = ChartHelper . generateArc ( chartData ) ; animateValue =- _NUM ; invalidate ( ) ; }
20801	@ Override public Schema schema ( ) { return schema ; }
20809	public final void skip ( final int num ) { seek ( getPosition ( ) + num ) ; }
20834	public boolean isActive ( ) { return this . isActive . get ( ) ; }
20899	public ConversationFactory withEscapeSequence ( String escapeSequence ) { return withConversationCanceller ( new ExactMatchConversationCanceller ( escapeSequence ) ) ; }
20952	public SnippetObject elem ( Object object ) { return new SnippetObject ( object , myPath . elem ( ) , mySnippets ) ; }
21003	private void markActivityUsed ( ) { ActivityAssigner . instance ( this ) . markActivityUsed ( mActivityIndex , getWebappInfo ( ) . id ( ) ) ; }
21033	public Response < ? > response ( ) { return response ; }
21043	public void pathValueToPixel ( Path path ) { path . transform ( mMatrixValueToPx ) ; path . transform ( mViewPortHandler . getMatrixTouch ( ) ) ; path . transform ( mMatrixOffset ) ; }
21077	public static void writeStringToFile ( String path , String toWrite , JavaSparkContext sc ) throws IOException { writeStringToFile ( path , toWrite , sc . sc ( ) ) ; }
21089	@ Override public boolean isFileModified ( long fileTimeStamp , long endOffset ) { boolean isFileModified = _BOOL ; if ( getLastModifiedTime ( ) > fileTimeStamp || getSize ( ) > endOffset ) { isFileModified = _BOOL ; } return isFileModified ; }
21095	public boolean buildFullUrl ( Appendable buffer , String url , boolean useSSL ) throws WebAppConfigurationException , IOException { boolean makeSecure = buildHostPart ( buffer , url , useSSL ) ; buildPathPart ( buffer , url ) ; return makeSecure ; }
21114	public < T > T recall ( File file , Class < T > type ) throws IOException { try ( FileInputStream fis = new FileInputStream ( file ) ) { return serializer . read ( fis , type ) ; } }
21191	protected void removeAt ( int index ) { _values [ index ] = _NULL ; super . removeAt ( index ) ; }
21252	public AsyncCatchOptions withProbability ( double probability ) { this . probability = probability ; return this ; }
21266	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return SEQUENCE_ID ; case _NUM : return STATUS ; case _NUM : return MESSAGE ; default : return _NULL ; } }
21286	public boolean hasTag ( String aName ) { return ( searchForTag ( aName ) != - _NUM ) ; }
21302	public static boolean isHour ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return isIntegerInRange ( s , _NUM , _NUM ) ; }
21313	@ Nullable public ResizeHandler createResizeHandler ( @ NotNull ViewEditor editor , @ NotNull NlComponent component , @ Nullable SegmentType horizontalEdgeType , @ Nullable SegmentType verticalEdgeType ) { return _NULL ; }
21319	void removedNode ( NodeImpl node , boolean replace ) { }
21374	public static < T , D extends Number > D addAndGet ( GigaSpace gigaSpace , IdQuery < T > idQuery , String path , D delta , long timeout , TimeUnit timeUnit ) { return addAndGet ( gigaSpace , idQuery , path , delta , ChangeModifiers . NONE , timeout , timeUnit ) ; }
21387	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Heal_Instant_HEAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
21443	private static IConfigElement categoryElement ( String category , String name , String tooltip_key ) { return new DummyConfigElement . DummyCategoryElement ( name , tooltip_key , new ConfigElement ( BWConfig . config . getCategory ( category ) ) . getChildElements ( ) ) ; }
21480	public LikesDeleteQuery delete ( UserActor actor , LikesType type , int itemId ) { return new LikesDeleteQuery ( getClient ( ) , actor , type , itemId ) ; }
21522	@ Override public void onPrepareNextItemShowInScreen ( View next ) { View descriptionLayout = next . findViewById ( R . id . description_layout ) ; if ( descriptionLayout != _NULL ) { next . findViewById ( R . id . description_layout ) . setVisibility ( View . INVISIBLE ) ; } }
21525	public Iterator < Unit > iterator ( ) { if ( mBody != _NULL ) { Chain < Unit > units = mBody . getUnits ( ) ; return units . iterator ( mHead , mTail ) ; } else { return _NULL ; } }
21542	public static SM_SYSTEM_MESSAGE STR_MSG_EXCHANGE_TIME_OVER ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
21543	static boolean checkSumm ( int a , int b ) { if ( ( a + b >= _NUM ) && ( a + b <= _NUM ) ) { return _BOOL ; } else { return _BOOL ; } }
21564	public boolean isDouble ( String key ) { Object val = get ( key ) ; return val instanceof Double ; }
21679	public static SM_SYSTEM_MESSAGE STR_MSG_DICE_RESULT_ME ( int value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
21717	public static RxJavaAssemblyException find ( Throwable ex ) { Set < Throwable > memory = new HashSet < Throwable > ( ) ; while ( ex != _NULL ) { if ( ex instanceof RxJavaAssemblyException ) { return ( RxJavaAssemblyException ) ex ; } if ( memory . add ( ex ) ) { ex = ex . getCause ( ) ; } else { return _NULL ; } } return _NULL ; }
21790	public static SM_SYSTEM_MESSAGE STR_MSG_DICE_RESULT_EX_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21834	public static String toInternalForm ( String d ) { if ( d . charAt ( _NUM ) != _CHAR ) { throw new JaninoRuntimeException ( _CHAR Attempt to convert non - class descriptor \ _CHAR _CHAR + d + _CHAR \ _CHAR into internal form _CHAR ) ; } return d . substring ( _NUM , d . length ( ) - _NUM ) ; }
21906	public final int hashCode ( ) { return ( int ) ( ( bits0 >> > _NUM ) ^ bits0 ^ ( bits1 >> > _NUM ) ^ bits1 ) ; }
22013	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_MIN_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22019	protected double ScalingFunction ( int iDistance ) { return Math . exp ( - Math . pow ( ( iDistance ) , _NUM . _NUM ) / ( _NUM . _NUM * Math . pow ( CorrelationWindow , _NUM . _NUM ) ) ) ; }
22021	public static void validateKey ( String key ) throws StateStoreException { if ( StringUtils . isBlank ( key ) ) { throw new StateStoreException ( _CHAR Key can not be blank or _NULL _CHAR ) ; } if ( key . contains ( _CHAR / _CHAR ) ) { throw new StateStoreException ( _CHAR Key can not contain _CHAR _CHAR ) ; } }
22048	public void onMessage ( RemoteMessage remoteMessage ) { if ( mFCMListener != _NULL ) mFCMListener . onMessage ( remoteMessage ) ; }
22070	void replacedNode ( NodeImpl node ) { }
22078	public static Optional < String > findPhysicalName ( Dimension value , JsonGenerator gen ) { String apiName = value . getApiName ( ) ; return mapNearestDruidQuery ( gen , _NULL ) ; }
22104	public VideoReportQuery searchQuery ( String value ) { return unsafeParam ( _CHAR search_query _CHAR , value ) ; }
22114	public boolean parseParameters ( Object params ) { return _BOOL ; }
22168	public < T3 > Pattern3 < T1 , T2 , T3 > and ( Observable < T3 > other ) { if ( other == _NULL ) { throw new NullPointerException ( ) ; } return new Pattern3 < T1 , T2 , T3 > ( o1 , o2 , other ) ; }
22171	public void average ( String column ) throws QueryPlanException { this . averageColumnName = column ; }
22232	@ Override public int toInt ( ) { return _NUM ; }
22233	public Complex [ ] transform ( final double [ ] f , final TransformType type ) { final double [ ] [ ] dataRI = new double [ ] [ ] { f . clone ( ) , new double [ f . length ] } ; transformInPlace ( dataRI , normalization , type ) ; return TransformUtils . createComplexArray ( dataRI ) ; }
22256	@ Override protected void readImpl ( ) { targetObjectId = readD ( ) ; type = readC ( ) ; }
22257	public static FloatBuffer createFloatBuffer ( float [ ] coords ) { ByteBuffer bb = ByteBuffer . allocateDirect ( coords . length * SIZEOF_FLOAT ) ; bb . order ( ByteOrder . nativeOrder ( ) ) ; FloatBuffer fb = bb . asFloatBuffer ( ) ; fb . put ( coords ) ; fb . position ( _NUM ) ; return fb ; }
22262	@ Override public boolean isEmpty ( ) { for ( ; ; ) { Node < E > node = top . get ( ) ; if ( node == _NULL ) { return _BOOL ; } E e = node . get ( ) ; if ( e == _NULL ) { top . compareAndSet ( node , node . next ) ; } else { return _BOOL ; } } }
22266	@ Override public boolean containsGrammar ( XMLGrammarDescription desc ) { return super . containsGrammar ( desc ) ; }
22285	protected boolean isAlwaysNonNull ( Value v ) { return _BOOL ; }
22351	public boolean deleteChildren ( @ NotNull NlComponent parent , @ NotNull List < NlComponent > deleted ) { return _BOOL ; }
22354	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
22358	public void validateSelfIncrementedColumnName ( UpdateQuery updateQuery ) throws SQLException { UpdateColumn selfIncrementedColumn = new UpdateColumn ( _selfIncrementedColumnName ) ; selfIncrementedColumn . createColumnData ( updateQuery ) ; if ( ! getName ( ) . equals ( selfIncrementedColumn . getName ( ) ) ) throw new SQLException ( _CHAR Operator _CHAR is only allowed for the same column . '' ) ; }
22435	public static void validateValue ( byte [ ] value ) throws StateStoreException { if ( value == _NULL ) { throw new StateStoreException ( _CHAR Property value must not be _NULL . _CHAR ) ; } if ( value . length > MAX_VALUE_LENGTH_BYTES ) { throw new StateStoreException ( String . format ( _CHAR Property value length % d exceeds limit of % d bytes . '' , value . length , MAX_VALUE_LENGTH_BYTES ) ) ; } }
22447	public Vector2f negateLocal ( ) { x =- x ; y =- y ; return this ; }
22448	public static double exp ( double lambda ) { if ( ! ( lambda > _NUM . _NUM ) ) throw new IllegalArgumentException ( _CHAR Rate lambda must be positive _CHAR ) ; return - Math . log ( _NUM - uniform ( ) ) / lambda ; }
22458	public static String encodeString ( String s ) { return new String ( encode ( s . getBytes ( ) ) ) ; }
22488	private void checkEglError ( String msg ) { int error ; if ( ( error = EGL14 . eglGetError ( ) ) != EGL14 . EGL_SUCCESS ) { throw new RuntimeException ( msg + _CHAR : EGL error : _NUM _CHAR + Integer . toHexString ( error ) ) ; } }
22493	public boolean isInt ( String key ) { Object val = get ( key ) ; return val instanceof Integer ; }
22511	@ Override public synchronized void reset ( ) throws IOException { in . reset ( ) ; pos = mark ; }
22538	private void executeBadgeByContentProvider ( Context context , ComponentName componentName , int badgeCount ) { if ( badgeCount < _NUM ) { return ; } if ( mQueryHandler == _NULL ) { mQueryHandler = new AsyncQueryHandler ( context . getApplicationContext ( ) . getContentResolver ( ) ) { } ; } insertBadgeAsync ( badgeCount , componentName . getPackageName ( ) , componentName . getClassName ( ) ) ; }
22570	void updateTabState ( int newState ) { long now = System . currentTimeMillis ( ) ; recordTabStateTransition ( mLastTabState , newState , now - mLastTabStateChangeMillis ) ; mLastTabStateChangeMillis = now ; mLastTabState = newState ; }
22659	public Period copyTransientProperties ( Period other ) { this . name = other . getName ( ) ; this . shortName = other . getShortName ( ) ; this . code = other . getCode ( ) ; return this ; }
22681	protected void parseTimeZone ( String buffer , int start , int end , DateTimeData date ) throws RuntimeException { if ( start < end ) { if ( ! isNextCharUTCSign ( buffer , start , end ) ) { throw new RuntimeException ( _CHAR Error in month parsing _CHAR ) ; } else { getTimeZone ( buffer , date , start , end ) ; } } }
22692	public static SM_SYSTEM_MESSAGE STR_STIGMA_NOT_USABLE_SKILL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22698	public static FilteringEventBus buildFilteringEventBusOnMainLoop ( EventDispatcher eventDispatcher ) { FilteringEventBus b = new FilteringEventBus ( new DelegatingEventDispatcher ( eventDispatcher , mainLoopDispatcher ) ) ; b . start ( ) ; return b ; }
22729	public static void timedRecord ( String filename , long millis , AudioFormat audioFormat ) { File outputFile = new File ( filename ) ; timedRecord ( outputFile , millis , audioFormat ) ; }
22745	public WallPostQuery lng ( Float value ) { return unsafeParam ( _CHAR long _CHAR , value ) ; }
22754	@ Override public int read ( ) throws IOException { try { beforeRead ( _NUM ) ; int c = in . read ( ) ; afterRead ( c != - _NUM ? _NUM : - _NUM ) ; return c ; } catch ( IOException e ) { handleIOException ( e ) ; return - _NUM ; } }
22917	public boolean last ( ) throws GenericEntityException { try { return resultSet . last ( ) ; } catch ( SQLException e ) { if ( ! closed ) { this . close ( ) ; Debug . logWarning ( _CHAR Warning : auto - closed EntityListIterator because of exception : _CHAR + e . toString ( ) , module ) ; } throw new GenericEntityException ( _CHAR Error setting the cursor to last _CHAR , e ) ; } }
22941	public void tabClosureCancelled ( long time , int id ) { final boolean selected = TabModelUtils . getCurrentTabId ( mModel ) == id ; tabCreated ( time , id , Tab . INVALID_TAB_ID , selected ) ; }
22992	private boolean dictionaryCacheAlreadyExists ( CacheType cacheType ) { return _NULL != cacheTypeToCacheMap . get ( cacheType ) ; }
23048	public void reset ( ) { npoints = _NUM ; bounds = _NULL ; path = new GeneralPath ( ) ; closedPath = _NULL ; }
23108	public void shuffleTestSet ( ) { utils . shuffleList ( TestFiles ) ; }
23157	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
23186	public boolean isLong ( String key ) { Object val = get ( key ) ; return val instanceof Long ; }
23200	public static boolean anyDimensionHasItems ( Collection < DimensionalObject > dimensions ) { if ( dimensions == _NULL || dimensions . isEmpty ( ) ) { return _BOOL ; } for ( DimensionalObject dim : dimensions ) { if ( dim . hasItems ( ) ) { return _BOOL ; } } return _BOOL ; }
23265	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
23283	private boolean isNextInStep ( double nextTime , ODEStateInterpolator interpolator ) { return forward ? nextTime <= interpolator . getCurrentState ( ) . getTime ( ) : nextTime >= interpolator . getCurrentState ( ) . getTime ( ) ; }
23287	public void resetFlags ( ) { mCompositorView . resetFlags ( ) ; }
23292	public ImageFixture withMaxDifference ( double percent ) { myMaxPercentDifference = percent ; return this ; }
23317	private boolean isSpatialSupport ( ) { try { jdbcTemplate . execute ( _CHAR create extension postgis ; _CHAR ) ; } catch ( Exception ex ) { } try { String version = jdbcTemplate . queryForObject ( _CHAR select postgis_full_version ( ) ; _CHAR , String . class ) ; return version != _NULL ; } catch ( Exception ex ) { return _BOOL ; } }
23395	public void check ( List < CheckResultInterface > remarks , TransMeta transMeta , StepMeta stepMeta , RowMetaInterface prev , String [ ] input , String [ ] output , RowMetaInterface info ) { CarbonDataProcessorUtil . checkResult ( remarks , stepMeta , input ) ; }
23408	public Builder cacheExpirationInterval ( long cacheExpirationInterval , TimeUnit timeUnit ) { this . cacheExpirationIntervalMs = TimeUnit . MILLISECONDS . convert ( cacheExpirationInterval , timeUnit ) ; return this ; }
23419	public boolean containsAll ( Collection < ? > collection ) { return MapCollections . containsAllHelper ( this , collection ) ; }
23549	@ Override public long skip ( long n ) throws IOException { return _NUM * super . skip ( n / _NUM * inputChannels ) ; }
23589	public EmailBuilder withAttachments ( List < EmailAttachment > attachments ) { this . attachments . addAll ( attachments ) ; return this ; }
23602	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . of ( ) ; }
23770	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
23787	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return MESSAGE_TYPE ; case _NUM : return REQUEST_INFO ; case _NUM : return RESPONSE_INFO ; case _NUM : return TRACE_INFO ; case _NUM : return GLOBAL_CONTEXT ; case _NUM : return LOCAL_CONTEXT ; case _NUM : return HEARTBEAT_INFO ; default : return _NULL ; } }
23792	protected void removeAt ( int index ) { _values [ index ] = _NUM ; super . removeAt ( index ) ; }
23794	public boolean isNormalized ( ) { return m_norm ; }
23806	protected final double calcOverallSimilarity ( GraphSimilarity gsSim ) { return ( gsSim . SizeSimilarity == _NUM ) ? _NUM . _NUM : gsSim . ValueSimilarity / gsSim . SizeSimilarity ; }
23887	public static Object evaluate ( String expression , Map < String , Object > vars ) { return evaluate ( expression , vars , _BOOL ) ; }
23919	public VideoGetAlbumsQueryWithExtended ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
24005	public static int extractHighUnsignedNibble ( int value ) { return ( value & _NUM ) >> > _NUM ; }
24029	public boolean isExpanded ( ) { return expandableSelectorAnimator . isExpanded ( ) ; }
24093	public boolean removeChild ( int node ) { while ( getChildCount ( node ) > _NUM ) { removeChild ( getLastChildRow ( node ) ) ; } return removeNode ( node ) ; }
24102	public static void write ( File file , CharSequence data , String encoding , boolean append ) throws IOException { write ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
24125	private void doPostConfigurationOfProcessControlTags ( ) { for ( Long key : getKeys ( ) ) { doPostDbLoading ( get ( key ) ) ; } }
24126	public boolean isEmpty ( ) { return values . isEmpty ( ) ; }
24170	public AemContextMenu clickOption ( final MenuOption option ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL ) ; return this ; }
24177	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
24212	public List < X509Certificate > checkServerTrusted ( X509Certificate [ ] chain , String authType , String hostname ) throws CertificateException { return checkTrusted ( chain , authType , hostname , _BOOL ) ; }
24241	public static boolean isValid ( String expression , Map < String , Object > vars ) { try { Object result = evaluate ( expression , vars , _BOOL ) ; return result != _NULL ; } catch ( JexlException ex ) { if ( ex . getMessage ( ) . contains ( _CHAR divide error _CHAR ) ) { return _BOOL ; } return _BOOL ; } }
24263	private boolean containsKey ( final int key , final int index ) { return ( key != _NUM || states [ index ] == FULL ) && keys [ index ] == key ; }
24286	private static String convertToQuotedString ( String s ) { if ( s == _NULL || s . isEmpty ( ) ) { return _NULL ; } if ( s . charAt ( _NUM ) == _CHAR_CHAR && s . charAt ( s . length ( ) - _NUM ) == _CHAR_CHAR ) { return s ; } return _CHAR_CHAR + s + _CHAR_CHAR ; }
24293	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
24412	@ Override public void clear ( ) { throw new UnsupportedOperationException ( _CHAR Clear is not defined on DelegatingMap . Add is the only allowed modification operation . '' ) ; }
24429	public String process ( String source , Location location , Element element ) { if ( Strings . isNullOrEmpty ( source ) ) { return source ; } String result = source ; for ( DocumentationProcessor processor : processors ) { result = processor . process ( result , location , element ) ; } return result ; }
24501	@ Override public long skip ( long n ) throws IOException { double [ ] data = source . getData ( ( int ) n ) ; return data . length ; }
24518	public static boolean isNegativeInteger ( String value ) { return value != _NULL && INT_VALIDATOR . isValid ( value ) && NEGATIVE_INT_PATTERN . matcher ( value ) . matches ( ) ; }
24651	public Vector2f normalize ( ) { float length = length ( ) ; if ( length != _NUM ) { return divide ( length ) ; } return divide ( _NUM ) ; }
24814	public static SM_SYSTEM_MESSAGE STR_SKILL_CONFLICT_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
24933	public static void enableSvcs ( boolean enable ) { ServiceDispatcher . enableSvcs = enable ; }
25003	public static final Vertex locateVertexInGraph ( UniqueVertexGraph gGraph , String sToFind ) { return gGraph . locateVertex ( new VertexImpl ( sToFind ) ) ; }
25030	public static boolean hasFunction ( String name ) { return s_functionTable . containsKey ( name ) ; }
25148	protected boolean matches ( TokenKind kind ) { if ( currentToken ( ) == kind ) { builder . advanceLexer ( ) ; return _BOOL ; } return _BOOL ; }
25154	public static boolean canContainValue ( Value val ) { return val instanceof Local || val instanceof InstanceFieldRef || val instanceof StaticFieldRef || val instanceof ArrayRef ; }
25156	public static List < EventQueryParams > convert ( List < DataQueryParams > params ) { List < EventQueryParams > eventParams = new ArrayList < > ( ) ; for ( DataQueryParams param : params ) { eventParams . add ( ( EventQueryParams ) param ) ; } return eventParams ; }
25204	public WallEditQuery lat ( Float value ) { return unsafeParam ( _CHAR lat _CHAR , value ) ; }
25213	public static boolean isPositiveInteger ( String value ) { return value != _NULL && INT_VALIDATOR . isValid ( value ) && POSITIVE_INT_PATTERN . matcher ( value ) . matches ( ) ; }
25222	public static IOFileFilter suffixFileFilter ( String suffix ) { return new SuffixFileFilter ( suffix ) ; }
25258	public synchronized ZooKeeperClientBuilder retryPolicy ( RetryPolicy retryPolicy ) { this . retryPolicy = retryPolicy ; return this ; }
25259	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return SERVICE_NAME ; case _NUM : return SEQUENCE_ID ; case _NUM : return CALL_TYPE ; case _NUM : return TIMEOUT ; default : return _NULL ; } }
25284	@ Override protected void onDetachedFromWindow ( ) { super . onDetachedFromWindow ( ) ; if ( mReceiver != _NULL ) { mContext . unregisterReceiver ( mReceiver ) ; } }
25325	public final boolean isEmpty ( ) { return getHotkeys ( ) . isEmpty ( ) && getMouseGestures ( ) . isEmpty ( ) ; }
25340	@ Override public void printStackTrace ( PrintStream ps ) { super . printStackTrace ( ps ) ; if ( nested != _NULL ) { nested . printStackTrace ( ps ) ; } }
25370	public int addSecondaryEquations ( final SecondaryODE secondary ) { components . add ( secondary ) ; mapper = new EquationsMapper ( mapper , secondary . getDimension ( ) ) ; return components . size ( ) ; }
25408	public boolean isCollapsed ( ) { return expandableSelectorAnimator . isCollapsed ( ) ; }
25459	public Vector3f negateLocal ( ) { x =- x ; y =- y ; z =- z ; return this ; }
25501	public void write ( byte b [ ] ) throws IOException { raf . write ( b ) ; }
25508	public static void add ( int tabId , AsyncTabCreationParams params ) { ensureInitialized ( ) ; sAsyncTabCreationParams . put ( tabId , params ) ; }
25523	public RequestHandle post ( Context context , String url , HttpEntity entity , String contentType , ResponseHandlerInterface responseHandler ) { return sendRequest ( httpClient , httpContext , addEntityToRequestBase ( new HttpPost ( url ) , entity ) , contentType , responseHandler , context ) ; }
25557	public boolean hasPermissionByInternalId ( String internalId , String permission ) { Permission resolvedPermission = getPermissionResolver ( ) . resolvePermission ( permission ) ; return hasPermissionByInternalId ( internalId , resolvedPermission ) ; }
25584	private void doPostConfigurationOfSubEquipmentControlTags ( ) { for ( Long key : getKeys ( ) ) { doPostDbLoading ( get ( key ) ) ; } }
25684	@ Override public int size ( ) { return values . size ( ) ; }
25742	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
25766	public static void clearCache ( Context context , String uniqueName ) { File cacheDir = CacheManager . getDiskCacheDir ( context , uniqueName ) ; clearCache ( cacheDir ) ; }
25779	public static double [ ] readDoubles ( ) { return new In ( ) . readAllDoubles ( ) ; }
25807	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_MAX_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25853	private void loadDictionaryData ( DictionaryInfo dictionaryInfo , DictionaryColumnUniqueIdentifier dictionaryColumnUniqueIdentifier , long dictionaryChunkStartOffset , long dictionaryChunkEndOffset , boolean loadSortIndex ) throws IOException { DictionaryCacheLoader dictionaryCacheLoader = new DictionaryCacheLoaderImpl ( dictionaryColumnUniqueIdentifier . getCarbonTableIdentifier ( ) , carbonStorePath ) ; dictionaryCacheLoader . load ( dictionaryInfo , dictionaryColumnUniqueIdentifier . getColumnIdentifier ( ) , dictionaryChunkStartOffset , dictionaryChunkEndOffset , loadSortIndex ) ; }
25863	protected boolean isKidOK ( Node parent , Node child ) { if ( allowGrammarAccess && parent . getNodeType ( ) == Node . DOCUMENT_TYPE_NODE ) { return child . getNodeType ( ) == Node . ELEMENT_NODE ; } return _NUM != ( kidOK [ parent . getNodeType ( ) ] & _NUM << child . getNodeType ( ) ) ; }
25883	public static void reportStatus ( int status ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . IcingContextReportingStatus _CHAR , status , STATUS_BOUNDARY ) ; }
25971	public String post ( Context context , String url , HttpEntity entity , String contentType ) throws HttpException { return sendRequest ( httpClient , httpContext , addEntityToRequestBase ( new HttpPost ( url ) , entity ) , contentType , context ) ; }
26014	private void disable ( ) { signin . setClickable ( _BOOL ) ; signin . setText ( _CHAR Signing in ... _CHAR ) ; signin . setBackgroundColor ( getResources ( ) . getColor ( R . color . textColorSecondary ) ) ; }
26033	public static void shutDown ( ) { isShutDown = _BOOL ; JobPoller . getInstance ( ) . stop ( ) ; }
26057	@ Override public void close ( ) throws IOException { }
26059	public static TimePreferenceDialogFragmentCompat newInstance ( String key ) { final TimePreferenceDialogFragmentCompat fragment = new TimePreferenceDialogFragmentCompat ( ) ; final Bundle b = new Bundle ( _NUM ) ; b . putString ( ARG_KEY , key ) ; fragment . setArguments ( b ) ; return fragment ; }
26094	public GroupsLeaveQuery leave ( UserActor actor , int groupId ) { return new GroupsLeaveQuery ( getClient ( ) , actor , groupId ) ; }
26097	public static void objects ( int level , Object ... params ) { log ( level , _NUM , _NULL , FMT_OBJECT , _NULL , _NULL , params ) ; }
26101	@ Override public void printStackTrace ( PrintStream ps ) { super . printStackTrace ( ps ) ; if ( nested != _NULL ) nested . printStackTrace ( ps ) ; }
26105	public GroupsEditQuery publicDate ( String value ) { return unsafeParam ( _CHAR public_date _CHAR , value ) ; }
26199	protected void loadAndRun ( final MqttSpyDaemonConfiguration configuration ) throws SpyException { final DaemonMqttConnectionDetails connectionSettings = configuration . getConnection ( ) ; configureMqtt ( connectionSettings ) ; runScripts ( connectionSettings . getBackgroundScript ( ) , connectionSettings . getTestCases ( ) , connectionSettings . getRunningMode ( ) ) ; }
26200	@ NotNull public NlConfigurationToolbarFixture requireOrientation ( @ NotNull String name ) { Wait . seconds ( _NUM ) . expecting ( _CHAR configuration to be updated _CHAR ) . until ( _NULL ) ; return this ; }
26261	public static void writeln ( String fileName , Object [ ] objects ) { if ( writer == _NULL ) { createWriter ( fileName ) ; for ( Object obj : objects ) { writeln ( obj . toString ( ) ) ; } closeWriter ( ) ; } }
26268	public boolean hasDimensionOrFilter ( String key ) { return dimensions . indexOf ( new BaseDimensionalObject ( key ) ) != - _NUM || filters . indexOf ( new BaseDimensionalObject ( key ) ) != - _NUM ; }
26337	public void java_security_AccessController_getStackAccessControlContext ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getLeastObject ( ) ) ; }
26344	public boolean isContent ( ) { return isOptionEnabled ( UrlFilterRuleOption . CONTENT ) ; }
26383	@ Override public void computeTargetFeatures ( Target target ) { FeatureVector fv = targetFeatureComputer . computeFeatureVector ( target ) ; target . setFeatureVector ( fv ) ; }
26390	public static int daysInFebruary ( int year ) { return ( ( ( year % _NUM == _NUM ) && ( ( ! ( year % _NUM == _NUM ) ) || ( year % _NUM == _NUM ) ) ) ? _NUM : _NUM ) ; }
26459	@ Override public int available ( ) throws IOException { try { return super . available ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _NUM ; } }
26479	static void trackSyncError ( @ NotNull String errorType , @ Nullable String extraInfo ) { UsageTracker . getInstance ( ) . trackEvent ( CATEGORY_GRADLE_SYNC_FAILURE , errorType , extraInfo , _NULL ) ; }
26502	public void partitionWithPercent ( boolean withPercent ) { this . withPercent = withPercent ; if ( withPercent ) chartUtils = ChartHelper . generateSimpleRadiusWithPercent ( chartData , ( int ) side ) ; else chartUtils = ChartHelper . generateSimpleRadius ( chartData , ( int ) side ) ; animateValue =- _NUM ; invalidate ( ) ; }
26510	private LinearConstraint normalize ( final LinearConstraint constraint ) { if ( constraint . getValue ( ) < _NUM ) { return new LinearConstraint ( constraint . getCoefficients ( ) . mapMultiply ( - _NUM ) , constraint . getRelationship ( ) . oppositeRelationship ( ) , - _NUM * constraint . getValue ( ) ) ; } return new LinearConstraint ( constraint . getCoefficients ( ) , constraint . getRelationship ( ) , constraint . getValue ( ) ) ; }
26591	@ Override public WebDriver frame ( int index ) { frameSwitcher . putFramePathOnStack ( index ) ; return targetLocator . frame ( index ) ; }
26596	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
26623	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
26625	public static IOFileFilter suffixFileFilter ( String suffix , IOCase caseSensitivity ) { return new SuffixFileFilter ( suffix , caseSensitivity ) ; }
26630	protected void createAccount ( ) { AccountManager am = AccountManager . get ( getApplicationContext ( ) ) ; am . addAccount ( MainApp . getAccountType ( ) , _NULL , _NULL , _NULL , this , new AccountCreationCallback ( ) , new Handler ( ) ) ; }
26635	public WallPostQuery lat ( Float value ) { return unsafeParam ( _CHAR lat _CHAR , value ) ; }
26642	public FieldRefNode findGlobalFieldRefNode ( Object baseValue , SparkField field ) { VarNode base = findGlobalVarNode ( baseValue ) ; if ( base == _NULL ) return _NULL ; return base . dot ( field ) ; }
26669	public static void write ( File file , CharSequence data , String encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
26706	public void reenterPreparedExternalXid ( Object xid , List < TransactionParticipant > parts ) throws RemoteException , CannotCommitException { getProxy ( ) . reenterPreparedExternalXid ( xid , parts ) ; }
26731	public boolean isHighlightEnabled ( ) { for ( IDataSet set : mDataSets ) { if ( ! set . isHighlightEnabled ( ) ) return _BOOL ; } return _BOOL ; }
26769	private boolean isUserLimitReachedLocked ( ) { int nUsers = mUsers . size ( ) ; return nUsers >= VUserManager . getMaxSupportedUsers ( ) ; }
26803	@ Override public boolean hasNext ( ) { if ( ! isForward ) { currentRec = currentRec - pointerSize ; isForward = _BOOL ; } return currentRec > _NUM || blk . number ( ) > _NUM ; }
26805	protected static void parseAndIgnoreWhitespace ( final String source , final ParsePosition pos ) { parseNextCharacter ( source , pos ) ; pos . setIndex ( pos . getIndex ( ) - _NUM ) ; }
26816	public static void write ( File file , CharSequence data , String encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
26825	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CaseHeal_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
26874	private void checkLegal ( ) { if ( mDataSets == _NULL ) return ; if ( this instanceof ScatterData || this instanceof CombinedData ) return ; for ( int i = _NUM ; i < mDataSets . size ( ) ; i ++ ) { if ( mDataSets . get ( i ) . getEntryCount ( ) > mXVals . size ( ) ) { throw new IllegalArgumentException ( _CHAR One or more of the DataSet Entry arrays are longer than the x - values array of this ChartData object . '' ) ; } } }
26899	private void checkCreateTemplate ( String category , String name ) throws Exception { checkCreateTemplate ( category , name , _BOOL ) ; }
26935	public static Charset toCharset ( Charset charset ) { return charset == _NULL ? Charset . defaultCharset ( ) : charset ; }
26952	public int addSecondaryEquations ( final FieldSecondaryODE < T > secondary ) { components . add ( secondary ) ; mapper = new FieldEquationsMapper < T > ( mapper , secondary . getDimension ( ) ) ; return components . size ( ) ; }
26967	@ Override public V remove ( Object o ) { throw new UnsupportedOperationException ( _CHAR Remove is not defined on DelegatingMap . Add is the only allowed modification operation . '' ) ; }
26987	protected void init ( ) { checkLegal ( ) ; calcYValueCount ( ) ; calcMinMax ( _NUM , mYValCount ) ; calcXValMaximumLength ( ) ; }
27014	public AemInsertWindow insertComponent ( String componentGroup , String componentName ) { chooseComponent ( componentGroup , componentName , chooseTab ( componentGroup ) ) ; clickOkAndWait ( ) ; return this ; }
27052	public static boolean startsWithHttpOrHttps ( String uri ) { if ( uri == _NULL ) { return _BOOL ; } String lowercaseUri = uri . toLowerCase ( Locale . US ) ; return lowercaseUri . startsWith ( _CHAR http : // '' ) || lowercaseUri . startsWith ( '' https : // '' ) ; }
27062	public void invalidate ( ) { damageReport ( ) ; super . invalidate ( ) ; }
27101	@ Override public float toFloat ( ) { return _NUM ; }
27106	private void initDictionaryChunkSize ( ) { dictionary_one_chunk_size = CarbonUtil . getDictionaryChunkSize ( ) ; }
27126	public boolean more ( ) { return this . myIndex < this . mySource . length ( ) ; }
27164	public static int count ( Iterator tuples , String field ) { int i = _NUM ; for ( ; tuples . hasNext ( ) ; ++ i , tuples . next ( ) ) ; return i ; }
27185	static int hash ( Object [ ] elements ) { int h = _NUM ; for ( int i = elements . length ; -- i >= _NUM ; ) { h += elements [ i ] . hashCode ( ) ; } return h ; }
27228	@ NonNull public static StorableFence not ( @ NonNull StorableFence fence ) { StorableFence metaFence = new StorableFence ( Type . META ) ; metaFence . mNotFence = fence ; return metaFence ; }
27274	@ Override public long toLong ( ) { throw new UnsupportedOperationException ( ) ; }
27285	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCFPHeal_Instant_HEAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
27330	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_Instant_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
27334	public boolean hasDiphone ( String diphone ) { return ! ( missingDiphones != _NULL && missingDiphones . contains ( diphone ) ) ; }
27339	public CatchOptions withProbability ( double probability ) { this . probability = probability ; return this ; }
27347	public static void write ( File file , CharSequence data , Charset encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
27356	public boolean forEachKey ( TObjectProcedure < K > procedure ) { return forEach ( procedure ) ; }
27373	public static void addTimingSplit ( String splitLabel ) { mTimingLogger . addSplit ( splitLabel ) ; }
27381	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
27417	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedFPATK_Instant_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
27463	private void updateHalfDayTogglesState ( int halfDay ) { switch ( halfDay ) { case HALF_DAY_1 : mFirstHalfDayToggle . setTextColor ( mHalfDayToggleSelectedColor ) ; mSecondHalfDayToggle . setTextColor ( mHalfDayToggleUnselectedColor ) ; break ; case HALF_DAY_2 : mSecondHalfDayToggle . setTextColor ( mHalfDayToggleSelectedColor ) ; mFirstHalfDayToggle . setTextColor ( mHalfDayToggleUnselectedColor ) ; break ; } }
27595	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
27616	public synchronized void abandon ( ConversationAbandonedEvent details ) { if ( ! abandoned ) { abandoned = _BOOL ; currentPrompt = _NULL ; context . getForWhom ( ) . abandonConversation ( this ) ; for ( ConversationAbandonedListener listener : abandonedListeners ) { listener . conversationAbandoned ( details ) ; } } }
27647	public boolean throwsException ( SootClass e ) { return exceptions != _NULL && exceptions . contains ( e ) ; }
27653	public static void parseAndIgnoreWhitespace ( final String source , final ParsePosition pos ) { parseNextCharacter ( source , pos ) ; pos . setIndex ( pos . getIndex ( ) - _NUM ) ; }
27695	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPATK_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
27704	private boolean clipPathSupported ( ) { return Utils . getSDKInt ( ) >= _NUM ; }
27739	public static void write ( File file , CharSequence data , String encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
27752	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPTransfer_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
27800	public void confirm ( ) { okButton . click ( ) ; bobcatWait . withTimeout ( Timeouts . SMALL ) . until ( elementNotPresentOrVisible ( By . cssSelector ( CSS ) ) ) ; }
27889	public static String [ ] readStrings ( String filename ) { return new In ( filename ) . readAllStrings ( ) ; }
28071	public RequestHandle put ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return put ( context , url , paramsToEntity ( params , responseHandler ) , _NULL , responseHandler ) ; }
28095	@ Override public boolean parseParameters ( Object params ) { if ( params == _NULL || ! ( params instanceof RewardForSendingMatchingChatMessage ) ) return _BOOL ; this . params = ( RewardForSendingMatchingChatMessage ) params ; for ( ChatMatchSpec cm : this . params . getChatMatch ( ) ) addChatMatchSpecToRewardStructure ( cm ) ; return _BOOL ; }
28102	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_Instant_INTERVAL_HEAL_MP_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
28109	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . of ( ) ; }
28140	public String nextLine ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( _CHAR No more lines _CHAR ) ; } String currentLine = cachedLine ; cachedLine = _NULL ; return currentLine ; }
28146	public static void drawCircledText ( Graphics2D g , String text , int x , int y ) { drawCircledText ( g , sSmallFont , text , x , y ) ; }
28168	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_PICKUP_ITEM_HE_DENIED ( String value0 , String value1 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 , value2 ) ; }
28252	public static NumberPadTimePickerDialog newInstance ( OnTimeSetListener callback ) { NumberPadTimePickerDialog ret = new NumberPadTimePickerDialog ( ) ; ret . setOnTimeSetListener ( callback ) ; ret . mThemeDark = _BOOL ; ret . mThemeSetAtRuntime = _BOOL ; return ret ; }
28274	public static SM_SYSTEM_MESSAGE STR_CANNOT_USE_ITEM_INVALID_RANK ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
28340	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . of ( ) ; }
28361	static void scheduleRetry ( Context context ) { new Handler ( context . getMainLooper ( ) ) . post ( new Scheduler ( context ) ) ; }
28391	void invalidate ( ) { m_row =- _NUM ; }
28463	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysBlock_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
28481	private static byte [ ] hash ( String text ) throws AWSIotException { try { MessageDigest md = MessageDigest . getInstance ( HASH_ALGORITHM ) ; md . update ( text . getBytes ( UTF8 ) ) ; return md . digest ( ) ; } catch ( Exception e ) { throw new AWSIotException ( _CHAR Unable to compute hash while signing request : '' + e . getMessage ( ) ) ; } }
28505	public boolean profile ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR profile _CHAR ) ; }
28535	public int hashCode ( ) { return MarshalledWrapper . class . hashCode ( ) ^ instance . hashCode ( ) ; }
28562	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
28646	public static boolean isOrSubOf ( Class < ? > objectClass , Class < ? > parentClass ) { while ( objectClass != _NULL ) { if ( objectClass == parentClass ) return _BOOL ; objectClass = objectClass . getSuperclass ( ) ; } return _BOOL ; }
28650	public static void checkDirectoryIsWriteable ( @ NotNull File directory ) throws IOException { while ( ! directory . exists ( ) || ! directory . isDirectory ( ) ) { directory = directory . getParentFile ( ) ; } if ( ! directory . canWrite ( ) ) { throw new IOException ( _CHAR Can not write to folder : _CHAR + directory . getAbsolutePath ( ) ) ; } }
28674	public void addModifier ( ItemIdOuterClass . ItemId item ) throws LoginFailedException , RemoteServerException { AsyncHelper . toBlocking ( addModifierAsync ( item ) ) ; }
28683	public static void main ( String [ ] args ) { if ( args . length != _NUM ) { System . err . println ( _CHAR Usage : VertxExample < json file > _CHAR ) ; System . exit ( _NUM ) ; } VertxExample example = new VertxExample ( ) ; example . parseFile ( args [ _NUM ] , _NULL ) ; }
28712	public void refresh ( ) { refresh ( _NULL , _BOOL ) ; }
28741	public boolean isAnyAxisInverted ( ) { return mAxisLeft . isInverted ( ) || mAxisRight . isInverted ( ) ; }
28775	public synchronized static boolean isOpenAvailable ( ) { if ( ! openAvailableInitialized ) { if ( _CHAR _BOOL _CHAR . equals ( allowDesktopOpen ) && isDesktopSupported ( ) ) openAvailable = Desktop . getDesktop ( ) . isSupported ( Desktop . Action . OPEN ) ; else openAvailable = _BOOL ; openAvailableInitialized = _BOOL ; } return openAvailable ; }
28782	public synchronized BookKeeperClientBuilder statsLogger ( StatsLogger statsLogger ) { this . statsLogger = statsLogger ; return this ; }
28864	public void invalidate ( ) { status = INVALID ; }
28892	public void checkAndHide ( ) { if ( ( hideRequested ( ) && mouseFurtherThan ( _NUM ) ) || ( mouseFurtherThan ( _NUM ) ) ) { hideTooltip ( ) ; } }
28900	public boolean containsSink ( Stmt sink ) { for ( ResultSinkInfo si : this . results . keySet ( ) ) if ( si . getSink ( ) . equals ( sink ) ) return _BOOL ; return _BOOL ; }
28913	private void subscribeToAdminMessageTopic ( ) throws JMSException { if ( adminMessageTopic != _NULL ) { Session session = connection . createSession ( _BOOL , Session . AUTO_ACKNOWLEDGE ) ; final MessageConsumer consumer = session . createConsumer ( adminMessageTopic ) ; consumer . setMessageListener ( broadcastMessageListenerWrapper ) ; } }
28945	public void prepareTransition ( View viewToShow ) { assert mViewToHide == _NULL && mViewToShow == _NULL ; assert getChildCount ( ) <= _NUM ; if ( hasChildView ( ) ) { mViewToHide = getChildAt ( CONTENT_INDEX ) ; } mViewToShow = viewToShow ; assert mViewToHide != _NULL || mViewToShow != _NULL ; assert mViewToHide != mViewToShow ; }
29028	void register ( RTEditTextListener listener , RTMediaFactory < RTImage , RTAudio , RTVideo > mediaFactory ) { mListener = listener ; mMediaFactory = mediaFactory ; }
29078	private String determineLastKnownUrl ( ) { int tabId = determineTabId ( ) ; String url = mTabModel . getCurrentUrlForDocument ( tabId ) ; if ( TextUtils . isEmpty ( url ) ) url = determineInitialUrl ( tabId ) ; return url ; }
29097	public void assertTextPresentIgnoreCase ( String expected , String actual ) { assertTextPresent ( expected . toLowerCase ( ) , actual . toLowerCase ( ) ) ; }
29127	public static int locToBlock ( double loc ) { return NumberConversions . floor ( loc ) ; }
29199	void replacingData ( NodeImpl node ) { }
29273	public boolean forEachKey ( TIntProcedure procedure ) { return forEach ( procedure ) ; }
29277	public boolean isAttributeDeprecated ( ) { final String doc = getDocValue ( _NULL ) ; return doc != _NULL && StringUtil . containsIgnoreCase ( doc , _CHAR deprecated _CHAR ) ; }
29343	public boolean isHighQualityRenderingEnabled ( ) { return highQualityRenderingEnabled ; }
29353	public boolean forEachKey ( TShortProcedure procedure ) { return forEach ( procedure ) ; }
29354	public static boolean isOrSubOf ( Class < ? > objectClass , Object parentObject ) { Class < ? > parentClass = parentObject . getClass ( ) ; return isOrSubOf ( objectClass , parentClass ) ; }
29399	public static SM_SYSTEM_MESSAGE STR_FREE_EXPERIENCE_CHARACTER_CANT_TRADE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29444	@ Override public double toDouble ( ) { throw new UnsupportedOperationException ( ) ; }
29461	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
29469	public Relation createRelation ( String name ) { Relation relation = new Relation ( name , this ) ; relations . setObject ( name , relation ) ; return relation ; }
29476	public static int [ ] shuffle ( int [ ] intArray ) { if ( intArray == _NULL ) { return _NULL ; } return shuffle ( intArray , getRandom ( intArray . length ) ) ; }
29513	@ Override public void cancel ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( cancelButton ) ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( cancelButton ) ) ; }
29553	public void put ( String key , Object value ) { if ( key != _NULL && value != _NULL ) { urlParamsWithObjects . put ( key , value ) ; } }
29603	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . of ( ) ; }
29610	@ Override public boolean ready ( ) throws IOException { try { return in . ready ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _BOOL ; } }
29706	public static void write ( File file , CharSequence data , Charset encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
29799	public boolean hasNext ( ) { return index < bits . length ; }
29805	public static final Vertex locateVertexInGraph ( UniqueVertexGraph gGraph , String sToFind ) { return gGraph . locateVertex ( new VertexImpl ( sToFind ) ) ; }
29814	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_WeaponStatUp_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
29822	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return AVERAGE_LOAD ; case _NUM : return OLD_GC ; case _NUM : return THREAD_NUM ; case _NUM : return QUEUE_SIZE ; case _NUM : return METHOD_QPS_MAP ; default : return _NULL ; } }
29838	protected void drawGuiContainerForegroundLayer ( int mouseX , int mouseY ) { this . fontRendererObj . drawString ( I18n . format ( _CHAR container . crafting _CHAR , new Object [ _NUM ] ) , _NUM , _NUM , _NUM ) ; }
29842	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
29859	private void updateButtons ( ) { myHostWizard . updateButtons ( myGuestWizard . onLastStep ( ) . get ( ) , myGuestWizard . canGoForward ( ) . get ( ) , ! myGuestWizard . canGoBack ( ) . get ( ) ) ; }
29865	private Cursor queryImgDB ( Uri contentStore ) { return this . cordova . getActivity ( ) . getContentResolver ( ) . query ( contentStore , new String [ ] { MediaStore . Images . Media . _ID } , _NULL , _NULL , _NULL ) ; }
29875	public SnippetObject key ( Map . Entry < Object , Object > e ) { return new SnippetObject ( longify ( e . getKey ( ) ) , myPath . key ( ) , mySnippets ) ; }
29936	public static String formatTimestamp ( @ Nullable Date date ) { return ( date != _NULL ) ? ISO8601Utils . format ( date , _BOOL ) : _NULL ; }
29964	public static _Fields findByName ( String name ) { return byName . get ( name ) ; }
29967	public void softRestart ( ) { if ( mediaPlayer != _NULL ) { resetPlayer ( ) ; prepare ( ) ; } }
29969	public void sort ( int fromIndex , int toIndex ) { Arrays . sort ( _data , fromIndex , toIndex ) ; }
29975	public void removeDatatransferProgressListener ( OnDatatransferProgressListener listener , Account account , OCFile file ) { if ( account == _NULL || file == _NULL || listener == _NULL ) return ; Long fileId = file . getFileId ( ) ; if ( mBoundListeners . get ( fileId ) == listener ) { mBoundListeners . remove ( fileId ) ; } }
30010	@ Override public void replaceData ( int offset , int count , String arg ) throws DOMException { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Method not supported _CHAR ) ; }
30064	public void registerListener ( Condition condition , int cPriority , EventListener listener ) { getListenerForCondition ( condition , cPriority ) . registerListener ( listener ) ; }
30169	public static SM_SYSTEM_MESSAGE STR_RESURRECTOTHER_DIALOG__5MIN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
30182	private void initIdleStateTracking ( ) { mIdleTracker = new IdlenessTracker ( ) ; mIdleTracker . startTracking ( ) ; }
30205	public static String sanitizeAppIdentifier ( String appIdentifier ) throws IllegalArgumentException { if ( appIdentifier == _NULL ) { throw new IllegalArgumentException ( _CHAR App Key must not be _NULL . _CHAR ) ; } String sAppIdentifier = appIdentifier . trim ( ) ; if ( sAppIdentifier . length ( ) != APP_IDENTIFIER_LENGTH ) { throw new IllegalArgumentException ( _CHAR App Key length must be _CHAR + APP_IDENTIFIER_LENGTH + _CHAR characters . '' ) ; } return sAppIdentifier ; }
30249	public static final SM_SYSTEM_MESSAGE STR_GUILD_LEVEL_UP_CHALLENGE_TASK ( int currentLevel ) { return new SM_SYSTEM_MESSAGE ( _NUM , currentLevel ) ; }
30264	public void execute ( final LoaderTask task ) { tasks . add ( task ) ; processQueue ( ) ; }
30281	public String next ( ) { return nextLine ( ) ; }
30303	public void createMaterialZoneTemplate ( Spatial geometry , int regionId , int worldId , int materialId ) { geometry . setName ( geometry . getName ( ) + _CHAR _ _CHAR + regionId ) ; createMaterialZoneTemplate ( geometry , worldId , materialId , _BOOL ) ; }
30322	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysDodge_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
30343	public final Observable . Transformer < T , T > replace ( final Object group ) { return _NULL ; }
30345	public void stopWatching ( String fileName ) { synchronized ( mObservedChildren ) { mObservedChildren . remove ( fileName ) ; if ( mObservedChildren . isEmpty ( ) ) { stopWatching ( ) ; Log_OC . d ( TAG , _CHAR Stopped watching parent folder _CHAR + mPath + _CHAR / _CHAR ) ; } } }
30369	protected void drawGuiContainerForegroundLayer ( int mouseX , int mouseY ) { this . fontRendererObj . drawString ( this . archive . getDisplayName ( ) . getUnformattedText ( ) , _NUM , _NUM , _NUM ) ; this . fontRendererObj . drawString ( this . playerInventory . getDisplayName ( ) . getUnformattedText ( ) , _NUM , this . ySize - _NUM + _NUM , _NUM ) ; }
30464	public static int unsignedLeb128Size ( int value ) { int remaining = value >> > _NUM ; int count = _NUM ; while ( remaining != _NUM ) { remaining >> >= _NUM ; count ++ ; } return count + _NUM ; }
30534	public StatelessHibernateSpaceDataSourceConfigurer augmentInitialLoadEntries ( boolean augmentInitialLoadEntries ) { this . augmentInitialLoadEntries = augmentInitialLoadEntries ; return this ; }
30566	public static void enableJM ( boolean enable ) { ServiceDispatcher . enableJM = enable ; }
30674	private Cursor queryImgDB ( Uri contentStore ) { return this . cordova . getActivity ( ) . getContentResolver ( ) . query ( contentStore , new String [ ] { MediaStore . Images . Media . _ID } , _NULL , _NULL , _NULL ) ; }
30691	private void failOnElapsedTimeout ( long now ) { if ( _timestamp > _NUM && ( now - _timestamp > RESOURCE_TIMEOUT ) ) { throw new ResourceTimeoutException ( _CHAR Resource of type : _CHAR + this . getClass ( ) . getName ( ) + _CHAR has exceeded its timeout of _CHAR + RESOURCE_TIMEOUT + _CHAR ms _CHAR + _CHAR by _CHAR + ( now - _timestamp ) + _CHAR ms _CHAR , _stackTrace ) ; } }
30728	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
30729	private void afterSave ( DataSupport baseObj , List < Field > supportedFields , long id ) { throwIfSaveFailed ( id ) ; assignIdValue ( baseObj , getIdField ( supportedFields ) , id ) ; if ( ! ignoreAssociations ) { updateAssociatedTableWithFK ( baseObj ) ; insertIntermediateJoinTableValue ( baseObj , _BOOL ) ; } }
30734	@ Override public boolean isFingerprintAuthSupported ( ) { return impl . isFingerprintAuthSupported ( ) ; }
30764	public boolean isEmpty ( ) { return size ( ) == _NUM ; }
30770	public void pathValueToPixel ( Path path ) { path . transform ( mMatrixValueToPx ) ; path . transform ( mViewPortHandler . getMatrixTouch ( ) ) ; path . transform ( mMatrixOffset ) ; }
30774	private boolean isDebuggable ( Level level ) { if ( level . intValue ( ) < debugLevel . intValue ( ) || debugLevel == Level . OFF ) { return _BOOL ; } return _BOOL ; }
30799	public boolean isEmpty ( ) { return lo ( ) - hi ( ) == _NUM * S2 . M_PI ; }
30886	private List < View > addView ( View view , List < View > cache ) { if ( cache == _NULL ) { cache = new LinkedList < View > ( ) ; } cache . add ( view ) ; return cache ; }
30949	public boolean textToSpeech ( String text ) { return voice . speak ( text ) ; }
31035	public RequestHandle put ( Context context , String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return put ( context , url , paramsToEntity ( params , responseHandler ) , _NULL , responseHandler ) ; }
31108	private void doPostConfigurationOfEquipmentControlTags ( ) { for ( Long key : getKeys ( ) ) { doPostDbLoading ( get ( key ) ) ; } }
31116	public static Builder builder ( ) { return new Builder ( ) ; }
31204	boolean isDefaultIn ( int configVersion ) { return defaultVersionRange . contains ( configVersion ) ; }
31303	private boolean hasNext ( ) { return this . fileCounter > _NUM ; }
31345	private void changeToFragment ( @ NonNull Fragment fragment ) { getSupportFragmentManager ( ) . beginTransaction ( ) . setTransition ( FragmentTransaction . TRANSIT_FRAGMENT_OPEN ) . replace ( R . id . shaky_fragment_container , fragment ) . addToBackStack ( _NULL ) . commit ( ) ; }
31368	@ Override public double toDouble ( ) { return _NUM ; }
31380	public void fail ( String message ) { screenshot ( ) ; this . testResult = new Fail ( message ) ; }
31383	@ Override public String next ( ) { return nextLine ( ) ; }
31387	@ Override public boolean isDataSource ( ) { return _BOOL ; }
31431	public SnippetObject elem ( Map . Entry < Object , Object > e ) { return new SnippetObject ( e . getValue ( ) , myPath . elem ( ) , mySnippets ) ; }
31495	protected void removeAt ( int index ) { _values [ index ] = _NULL ; super . removeAt ( index ) ; }
31513	public boolean isModified ( ) { return myOriginalEnabled != mySource . isEnabled ( ) || ! Objects . equal ( myOriginalName , mySource . getDisplayName ( ) ) ; }
31600	@ Override public boolean isDataSource ( ) { return _BOOL ; }
31604	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
31608	public void sort ( ) { Arrays . sort ( _data , _NUM , _pos ) ; }
31617	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
31676	@ Override public void close ( ) throws IOException { try { in . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
31685	public boolean isEmpty ( ) { return names . isEmpty ( ) ; }
31725	public MessagesSendQuery lat ( Float value ) { return unsafeParam ( _CHAR lat _CHAR , value ) ; }
31730	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPHeal_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
31736	public boolean hasMoreRecords ( ) throws IOException { row = parser . parseNext ( ) ; if ( row == _NULL && blockCounter + _NUM >= this . csvParserVo . getBlockDetailsList ( ) . size ( ) ) { close ( ) ; return _BOOL ; } if ( row == _NULL ) { initialize ( ) ; row = parser . parseNext ( ) ; } return _BOOL ; }
31747	public boolean isEmpty ( ) { return map . isEmpty ( ) ; }
31748	public Value concat ( Value str , Value args ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
31766	public void addDatatransferProgressListener ( OnDatatransferProgressListener listener , Account account , OCFile file ) { if ( account == _NULL || file == _NULL || listener == _NULL ) return ; mBoundListeners . put ( file . getFileId ( ) , listener ) ; }
31786	public Tags filter ( Set < String > tag_names ) { return Tags . valueOf ( tags_ . entrySet ( ) . stream ( ) . filter ( _NULL ) ) ; }
31852	protected boolean hasColumn ( String name ) { return getColumnNumber ( name ) != - _NUM ; }
31917	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stumble_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
31940	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
32000	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_Instant_HEAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
32007	public static SM_SYSTEM_MESSAGE STR_MSG_MENTOR_END_BANISH_PARTYMSG ( String value0 , String worldname1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , worldname1 ) ; }
32014	public boolean didTouchContent ( ) { return mHasContentBeenTouched ; }
32017	@ Deprecated public void onFailure ( int statusCode , Throwable error , String content ) { onFailure ( error , content ) ; }
32024	public static String formatTimestamp ( long millis ) { return ISO8601Utils . format ( new Date ( millis ) , _BOOL ) ; }
32034	public static ServiceConfiguration create ( String configFile ) throws IOException , IllegalArgumentException { checkNotNull ( configFile ) ; return create ( new FileInputStream ( configFile ) ) ; }
32097	public < T > T toObject ( Class < T > targetClass ) throws IOException { Assert . notNull ( _CHAR targetClass _CHAR , targetClass ) ; try { return mapper . readValue ( jsonString , targetClass ) ; } catch ( IOException e ) { throw e ; } catch ( Exception e ) { throw new IOException ( e ) ; } }
32154	public < T4 > Pattern4 < T1 , T2 , T3 , T4 > and ( Observable < T4 > other ) { if ( other == _NULL ) { throw new NullPointerException ( ) ; } return new Pattern4 < T1 , T2 , T3 , T4 > ( o1 , o2 , o3 , other ) ; }
32176	private void addExplicitLocationField ( ConfigSource . Builder builder , FieldDescriptor field , Node value ) { builder . addLocation ( field , _NULL , helper . getLocation ( value ) ) ; }
32242	private List < View > addView ( View view , List < View > cache ) { if ( cache == _NULL ) { cache = new LinkedList < View > ( ) ; } cache . add ( view ) ; return cache ; }
32260	protected void removeAt ( int index ) { _values [ index ] = _NULL ; super . removeAt ( index ) ; }
32264	@ Override @ CallSuper public void onResume ( ) { running = _BOOL ; }
32345	protected int addCascadedRow ( int prow ) { int r = m_rows . addRow ( ) ; ( ( CascadedRowManager ) m_rows ) . put ( r , prow ) ; updateRowCount ( ) ; fireTableEvent ( r , r , TableModelEvent . ALL_COLUMNS , TableModelEvent . INSERT ) ; return r ; }
32349	@ Override public boolean equals ( Object o ) { if ( ! ( o instanceof ExpandedRow ) ) { return _BOOL ; } ExpandedRow that = ( ExpandedRow ) o ; return this . pairs . equals ( that . getPairs ( ) ) && wasReversed == that . wasReversed ; }
32354	@ Override public LSInput createLSInput ( ) { return new DOMInputImpl ( ) ; }
32468	public DesiredExpirationListener desiredExpirationListener ( ) { if ( listener == _NULL ) return _NULL ; if ( listener instanceof DesiredExpirationListener ) return ( DesiredExpirationListener ) listener ; return _NULL ; }
32562	private static boolean isTrusted ( Object obj , TrustVerifier . Context ctx ) throws RemoteException { Object saved = state . get ( ) ; try { state . set ( obj ) ; return ctx . isTrustedObject ( obj ) ; } finally { state . set ( saved ) ; } }
32608	private static IConfigElement categoryElement ( String category , String name , String tooltip_key ) { return new DummyConfigElement . DummyCategoryElement ( name , tooltip_key , new ConfigElement ( ConfigManager . config . getCategory ( category ) ) . getChildElements ( ) ) ; }
32622	public static long deserializeLogSegmentSequenceNumber ( byte [ ] data ) { String seqNoStr = new String ( data , UTF_8 ) ; return Long . parseLong ( seqNoStr ) ; }
32643	public static boolean endsWithIgnoreCase ( String str , String suffix ) { return str != _NULL && suffix != _NULL && str . regionMatches ( _BOOL , str . length ( ) - suffix . length ( ) , suffix , _NUM , suffix . length ( ) ) ; }
32689	public static SM_SYSTEM_MESSAGE STR_MSG_Recall_DUPLICATE_EFFECT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32754	public void updateVisiblityValue ( int referenceIndex ) { mCachedVisibleArea = mLayoutTab . computeVisibleArea ( ) ; mCachedIndexDistance = Math . abs ( mIndex - referenceIndex ) ; mOrderSortingValue = computeOrderSortingValue ( mCachedIndexDistance , mCacheStackVisibility ) ; mVisiblitySortingValue = computeVisibilitySortingValue ( mCachedVisibleArea , mOrderSortingValue , mCacheStackVisibility ) ; }
32869	public static void write ( File file , CharSequence data , Charset encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
32905	public boolean hasNext ( ) { return this . fileCounter > _NUM ; }
32983	public FriendsGetRequestsQueryWithExtended out ( Boolean value ) { return unsafeParam ( _CHAR out _CHAR , value ) ; }
32992	private DimensionRow makeDimensionRow ( String value ) { LinkedHashMap < DimensionField , String > map = new LinkedHashMap < > ( ) ; for ( DimensionField dimensionField : dimension . getDimensionFields ( ) ) { map . put ( dimensionField , value ) ; } return new DimensionRow ( dimension . getKey ( ) , map ) ; }
33015	private static int bufferToValue ( byte [ ] buffer ) { return ( ( buffer [ _NUM ] & _NUM ) << _NUM ) + ( ( buffer [ _NUM ] & _NUM ) << _NUM ) + ( ( buffer [ _NUM ] & _NUM ) << _NUM ) + ( ( buffer [ _NUM ] ) & _NUM ) ; }
33037	protected static boolean isWhiteSpaceExceptSpace ( char ch ) { if ( ch >= _NUM ) return _BOOL ; return ch == _NUM || ch == _NUM || ch == _NUM ; }
33050	public void sendUserCreateNotification ( Map attributes ) { try { if ( createNotifyList != _NULL && ! createNotifyList . isEmpty ( ) ) { sendEmail ( createNotifyList , attributes , _CHAR _NUM _CHAR , _CHAR _NUM _CHAR , _CHAR _NUM _CHAR ) ; } } catch ( MessagingException e ) { if ( debug . warningEnabled ( ) ) { debug . warning ( _CHAR EmailNotificationHelper . '' + _CHAR sendUserCreateNotification ( ) Unable to send _CHAR + _CHAR email for user : '' + entryDN , e ) ; } } }
33068	private List < View > addView ( View view , List < View > cache ) { if ( cache == _NULL ) { cache = new LinkedList < View > ( ) ; } cache . add ( view ) ; return cache ; }
33089	public PlaPointInt round ( ) { if ( is_NaN ( ) ) return new PlaPointInt ( ) ; return new PlaPointInt ( Math . round ( v_x ) , Math . round ( v_y ) ) ; }
33124	public boolean isParameter ( ) { return ( type & PARAMETER ) != _NUM ; }
33173	private void removeUnusedWidgetsFromFields ( PdfPage page ) { if ( page . isFlushed ( ) ) { return ; } List < PdfAnnotation > annots = page . getAnnotations ( ) ; for ( PdfAnnotation annot : annots ) { if ( annot . getSubtype ( ) . equals ( PdfName . Widget ) ) { ( ( PdfWidgetAnnotation ) annot ) . releaseFormFieldFromWidgetAnnotation ( ) ; } } }
33222	public StringBuffer append ( long l ) { IntegralToString . appendLong ( this , l ) ; return this ; }
33266	public static CompareRequest copyOfCompareRequest ( final CompareRequest request ) { return new CompareRequestImpl ( request ) ; }
33287	protected boolean compareCredentials ( DirContext context , User info , String credentials ) throws NamingException { if ( containerLog . isTraceEnabled ( ) ) containerLog . trace ( _CHAR validating credentials _CHAR ) ; if ( info == _NULL || credentials == _NULL ) return _BOOL ; String password = info . getPassword ( ) ; return getCredentialHandler ( ) . matches ( credentials , password ) ; }
33378	public static Node selectSingleNode ( Node doc , String str , Node nsNode ) throws XPathException { SimpleNamespaceContext nsctx = new SimpleNamespaceContext ( nsNode ) ; return selectSingleNode ( doc , str , nsctx ) ; }
33394	private List < View > addView ( View view , List < View > cache ) { if ( cache == _NULL ) { cache = new LinkedList < View > ( ) ; } cache . add ( view ) ; return cache ; }
33427	public String toValueString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _hostEntityID ) . append ( DELIM ) . append ( _remoteEntityID ) . append ( DELIM ) . append ( _nameIDValue ) ; return sb . toString ( ) ; }
33432	public void write ( byte [ ] b , int off , int len ) throws IOException { out . write ( b , off , len ) ; cksum . update ( b , off , len ) ; }
33447	public static boolean hasServerOrSiteId ( SSOToken ssoToken , String serverId ) throws SMSException , SSOException { return getServerConfigurationId ( getRootServerConfigWithRetry ( ssoToken ) ) . contains ( serverId ) || getSiteConfigurationId ( getRootSiteConfig ( ssoToken ) ) . contains ( serverId ) ; }
33457	public boolean hasAttribute ( AttributeType attributeType ) { for ( TemplateLine l : templateLines ) { if ( l . getAttributeType ( ) . equals ( attributeType ) ) { return _BOOL ; } } return _BOOL ; }
33498	public boolean isStretchHeight ( ) { return this . stretchHeight ; }
33615	private boolean isIPv6Address ( String address ) { return ( address != _NULL && address . indexOf ( _CHAR ) != - _NUM ) ; }
33686	public void startElement ( String uri , String localName , String qName ) throws SAXException { if ( m_state != _NULL ) { m_state . resetState ( getTransformer ( ) ) ; } if ( m_tracer != _NULL ) super . fireStartElem ( qName ) ; }
33724	boolean showAllAttributes ( ) { return this . currentConfig . isShowAllAttributes ( ) ; }
33738	public static void removeByUuid ( java . lang . String uuid ) { getPersistence ( ) . removeByUuid ( uuid ) ; }
33830	public void paintTreeCellFocus ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
33834	public void abandon ( ) { abandon ( new ConversationAbandonedEvent ( this , new ManuallyAbandonedConversationCanceller ( ) ) ) ; }
33897	void writeLine ( BufferedWriter writer , String line ) throws IOException { writer . write ( line ) ; writer . newLine ( ) ; }
33920	public static void main ( final String [ ] args ) { parseArgs ( args ) ; if ( useStartTLS ) { connectStartTLS ( ) ; } else if ( useSSL ) { connectSSL ( ) ; } else { connect ( ) ; } }
33998	private void retrieveFailedOperationElements ( ModifyOperation modifyOperation ) { assertTrue ( modifyOperation . getProcessingStartTime ( ) > _NUM ) ; assertTrue ( modifyOperation . getProcessingStopTime ( ) >= modifyOperation . getProcessingStartTime ( ) ) ; assertTrue ( modifyOperation . getProcessingTime ( ) >= _NUM ) ; }
34090	public static Object convertNodeToJAXB ( Node node ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( node ) ; }
34174	void computeNextElement ( ) { while ( _BOOL ) { if ( currentBits != _NUM ) { mask = currentBits & - currentBits ; return ; } else if ( ++ index < bits . length ) { currentBits = bits [ index ] ; } else { mask = _NUM ; return ; } } }
34240	public JButton add ( Action a ) { JButton b = createActionComponent ( a ) ; b . setAction ( a ) ; add ( b ) ; return b ; }
34271	public void addNode ( int n ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; this . addElement ( n ) ; }
34330	public void updateDisconnect ( ) { connectionsClosed . getAndIncrement ( ) ; }
34396	public static void refresh ( SwipeRefreshLayout swipeRefreshLayout , Runnable refreshRunnable ) { swipeRefreshLayout . setProgressViewOffset ( _BOOL , _NUM , ( int ) TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , _NUM , swipeRefreshLayout . getResources ( ) . getDisplayMetrics ( ) ) ) ; swipeRefreshLayout . setRefreshing ( _BOOL ) ; swipeRefreshLayout . postDelayed ( refreshRunnable , REFRESH_RUNNABLE_DELAY ) ; }
34404	public void removeMember ( Guid guid ) throws UMSException { PersistentObject member = UMSObject . getObject ( getPrincipal ( ) , guid ) ; removeMember ( member ) ; }
34451	public static boolean containsModifiedMessage ( TlsContext tlsContext ) { return ( getModifiedMessagePosition ( tlsContext ) != - _NUM ) ; }
34474	public static void marshal ( Object jaxbObject , Writer xml ) { _marshal ( jaxbObject , xml ) ; }
34512	@ Override public boolean markSupported ( ) { return in . markSupported ( ) ; }
34514	protected void createHandler ( ) { if ( handler != _NULL ) return ; try { handler = new Handler ( Looper . getMainLooper ( ) ) ; } catch ( RuntimeException e ) { } }
34521	public static IOFileFilter prefixFileFilter ( String prefix , IOCase caseSensitivity ) { return new PrefixFileFilter ( prefix , caseSensitivity ) ; }
34533	public void add ( N nodeA , N nodeB ) throws NullPointerException { theNeighbors . get ( nodeA ) . add ( nodeB ) ; theNeighbors . get ( nodeB ) . add ( nodeA ) ; }
34551	public String toXMLString ( ) throws FSMsgException { return this . toXMLString ( _BOOL , _BOOL ) ; }
34582	@ Override public boolean markSupported ( ) { return in . markSupported ( ) ; }
34603	protected static final boolean isWhiteSpaceExceptSpace ( char ch ) { if ( ch >= _NUM ) return _BOOL ; return ch == _NUM || ch == _NUM || ch == _NUM ; }
34617	public boolean isAccessibleFrom ( Class < ? > lookupClass ) { return VerifyAccess . isMemberAccessible ( this . getDeclaringClass ( ) , this . getDeclaringClass ( ) , flags , lookupClass , ALL_ACCESS | MethodHandles . Lookup . PACKAGE ) ; }
34624	public boolean hasAccessType ( EnumAccessType accessType ) { return this . accessType == accessType ; }
34634	public void addLayoutComponent ( String name , Component comp ) { }
34672	public void processMouseEvent ( MouseEvent event , MenuElement path [ ] , MenuSelectionManager manager ) { }
34739	public static boolean directoryExistsAndIsNotEmpty ( String path ) { final File f = new File ( path ) ; if ( f . isDirectory ( ) ) { final String [ ] ch = f . list ( ) ; return ch != _NULL && ch . length > _NUM ; } return _BOOL ; }
34740	public boolean isContextual ( ) { return fContextual ; }
34751	@ Override public void close ( ) { closed = _BOOL ; }
34786	public static AbandonRequest copyOfAbandonRequest ( final AbandonRequest request ) { return new AbandonRequestImpl ( request ) ; }
34805	public long tryOptimisticRead ( ) { long s ; return ( ( ( s = state ) & WBIT ) == _NUM ) ? ( s & SBITS ) : _NUM ; }
34809	public boolean isExclusive ( ) { return exclusive ; }
34846	public int hashCode ( ) { return ( int ) time + ( int ) count ; }
34862	public boolean canTraverseOutsideSubtree ( ) { return super . canTraverseOutsideSubtree ( ) ? _BOOL : m_arg1 . canTraverseOutsideSubtree ( ) ; }
34863	@ Override public boolean allowedInBranch ( ) { return _BOOL ; }
34925	public void processingInstruction ( String target , String data ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . processingInstruction ( target , data ) ; } }
35035	public static void marshal ( Object jaxbObject , URI xml ) { _marshal ( jaxbObject , xml ) ; }
35155	public static void main ( String [ ] args ) throws Exception { if ( ( args . length == _NUM ) || ( args . length != _NUM ) ) { System . err . println ( bundle . getString ( _CHAR amverifyarchive - usage _CHAR ) ) ; System . exit ( _NUM ) ; } runCommand ( args ) ; }
35163	public boolean isEmpty ( ) { return ( curves . size ( ) == _NUM ) ; }
35170	public boolean containsValue ( Object value ) { Object [ ] tab = table ; for ( int i = _NUM ; i < tab . length ; i += _NUM ) if ( tab [ i ] == value && tab [ i - _NUM ] != _NULL ) return _BOOL ; return _BOOL ; }
35184	public boolean isEmpty ( ) { synchronized ( lock ) { return map . isEmpty ( ) ; } }
35211	public static SearchRequest copyOfSearchRequest ( final SearchRequest request ) { return new SearchRequestImpl ( request ) ; }
35218	private void addUsedVarNames ( Set < String > names ) { this . usedVarNames . addAll ( names ) ; }
35301	public void addApplicationLifecycleListener ( Object listener ) { int len = applicationLifecycleListenersObjects . length ; Object [ ] newListeners = Arrays . copyOf ( applicationLifecycleListenersObjects , len + _NUM ) ; newListeners [ len ] = listener ; applicationLifecycleListenersObjects = newListeners ; }
35314	@ Override public void removeByField2 ( boolean field2 ) { for ( Foo foo : findByField2 ( field2 , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ) { remove ( foo ) ; } }
35371	public boolean isGeneral ( ) { return ( type & GENERAL ) != _NUM ; }
35373	public void resetWait ( ) { spamChecker . resetSpamCheck ( getWaitPeriod ( ) ) ; }
35406	private void processPath ( ManagedObjectPath < ? , ? > path ) { AbstractManagedObjectDefinition < ? , ? > d = path . getManagedObjectDefinition ( ) ; for ( RelationDefinition < ? , ? > r : d . getRelationDefinitions ( ) ) { if ( ! r . hasOption ( RelationOption . HIDDEN ) ) { r . accept ( visitor , path ) ; } } }
35445	private static String convertToQuotedString ( String s ) { if ( s == _NULL || s . isEmpty ( ) ) { return _NULL ; } if ( s . charAt ( _NUM ) == _CHAR_CHAR && s . charAt ( s . length ( ) - _NUM ) == _CHAR_CHAR ) { return s ; } return _CHAR_CHAR + s + _CHAR_CHAR ; }
35458	public void endDocument ( ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . endDocument ( ) ; } }
35522	public static PropertyMapper constant ( final Object value ) { return new JsonConstantPropertyMapper ( value ) ; }
35551	protected JsonValue createTemplate ( ) { if ( serviceHasDefaultOrGlobalSchema ( ) ) { return converter . toJson ( schema . getAttributeDefaults ( ) , _BOOL ) ; } return json ( object ( ) ) ; }
35682	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
35710	public static AsymmetricKeyParameter createKey ( InputStream inStr ) throws IOException { return createKey ( PrivateKeyInfo . getInstance ( new ASN1InputStream ( inStr ) . readObject ( ) ) ) ; }
35732	public boolean isPowered ( ) { return getItemType ( ) == Material . REDSTONE_TORCH_ON ; }
35767	private void enqueueChangeTimeHeartbeatMsg ( ChangeTimeHeartbeatMsg msg ) { pendingHeartbeats . put ( msg . getCSN ( ) . getServerId ( ) , msg ) ; }
35797	public static void processMouseDragged ( MouseEvent e ) { sharedInstance . _processMouseDragged ( e ) ; }
35818	public void allowDetachToRelease ( boolean allowRelease ) { if ( ( _BOOL == allowRelease ) && ! hasCache ( ) ) { setShouldCacheNodes ( _BOOL ) ; } if ( _NULL != m_iter ) m_iter . allowDetachToRelease ( allowRelease ) ; super . allowDetachToRelease ( allowRelease ) ; }
36002	void removeListeners ( ) { try { serviceSchemaManager . removeListener ( schemaListenerId ) ; serviceConfigManager . removeListener ( configListenerId ) ; } catch ( Exception e ) { debug . error ( _CHAR AMAuthLevelManager : removeListeners _CHAR , e ) ; } }
36098	public ProtobufSchema parse ( String schemaAsString ) throws IOException { return parseNative ( schemaAsString ) . forFirstType ( ) ; }
36111	public int hashCode ( ) { return executable . hashCode ( ) ^ index ; }
36145	public static Object convertStringToJAXB ( String str ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( new StringReader ( str ) ) ) ) ; }
36200	public static void fill ( boolean [ ] a , boolean val ) { for ( int i = _NUM , len = a . length ; i < len ; i ++ ) a [ i ] = val ; }
36206	public short compareDocumentPosition ( Node other ) throws DOMException { return _NUM ; }
36285	@ Override public synchronized void load ( InputStream inStream ) throws IOException { check ( _CHAR putProviderProperty . '' + name ) ; if ( debug != _NULL ) { debug . println ( _CHAR Load _CHAR + name + _CHAR provider properties _CHAR ) ; } Properties tempProperties = new Properties ( ) ; tempProperties . load ( inStream ) ; implPutAll ( tempProperties ) ; }
36310	public static IOFileFilter suffixFileFilter ( String suffix , IOCase caseSensitivity ) { return new SuffixFileFilter ( suffix , caseSensitivity ) ; }
36452	@ Override public int doFinal ( byte [ ] input , int inputOffset , int inputLen , byte [ ] output , int outputOffset ) throws ShortBufferException , IllegalBlockSizeException , BadPaddingException { return cipher . doFinal ( input , inputOffset , inputLen , output , outputOffset ) ; }
36457	private void writeObject ( ObjectOutputStream s ) throws java . io . IOException { s . defaultWriteObject ( ) ; s . writeObject ( toString ( ) ) ; }
36463	public static TypeReference newTypeParameterBoundReference ( int sort , int paramIndex , int boundIndex ) { return new TypeReference ( ( sort << _NUM ) | ( paramIndex << _NUM ) | ( boundIndex << _NUM ) ) ; }
36467	public void intervalRemoved ( ListDataEvent e ) { firePropertyChange ( AccessibleContext . ACCESSIBLE_VISIBLE_DATA_PROPERTY , Boolean . valueOf ( _BOOL ) , Boolean . valueOf ( _BOOL ) ) ; }
36489	public boolean isPowered ( ) { return getData ( ) > _NUM ; }
36503	public boolean isEmpty ( ) { return count == _NUM ; }
36536	private void clear ( ) { webContainer . unregister ( contextRoot ) ; logger . debug ( _CHAR Unregistered UI servlet at { } _CHAR , contextRoot ) ; }
36655	public JMenuItem insert ( JMenuItem mi , int pos ) { if ( pos < _NUM ) { throw new IllegalArgumentException ( _CHAR index less than zero . '' ) ; } ensurePopupMenuCreated ( ) ; popupMenu . insert ( mi , pos ) ; return mi ; }
36789	boolean canRunInCurrentRunState ( boolean periodic ) { return isRunningOrShutdown ( periodic ? continueExistingPeriodicTasksAfterShutdown : executeExistingDelayedTasksAfterShutdown ) ; }
36793	public Set < ResourceSetLabel > list ( String realm , String username ) throws ResourceException { return query ( realm , username , equality ( _CHAR objectClass _CHAR , OBJECT_CLASS ) , _BOOL ) ; }
36827	public static void invalid ( ) { getInstance ( ) . invalidate ( ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR AdminTokenAction : invalid called _CHAR ) ; } }
36829	@ Override public synchronized boolean retainAll ( Collection < ? > collection ) { return super . retainAll ( collection ) ; }
36843	@ Override public boolean ready ( ) throws IOException { try { return in . ready ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _BOOL ; } }
36907	public static JTextArea createTextAreaWithBorder ( LocalizableMessage text , int rows , int cols ) { JTextArea ta = createTextArea ( text , rows , cols ) ; if ( ColorAndFontConstants . textAreaBorder != _NULL ) { setBorder ( ta , ColorAndFontConstants . textAreaBorder ) ; } return ta ; }
36991	public PlaDirection add ( PlaDirection p_other ) { long new_x = dir_x + p_other . dir_x ; long new_y = dir_y + p_other . dir_y ; return new PlaDirection ( BigInteger . valueOf ( new_x ) , BigInteger . valueOf ( new_y ) ) ; }
37021	@ Override public int read ( ) throws IOException { try { beforeRead ( _NUM ) ; int b = in . read ( ) ; afterRead ( b != - _NUM ? _NUM : - _NUM ) ; return b ; } catch ( IOException e ) { handleIOException ( e ) ; return - _NUM ; } }
37070	public static String downloadString ( URL url ) { return downloadString ( url , _NULL , DEFAULT_READ_TIMEOUT , DEFAULT_SOCKET_TIMEOUT , _CHAR utf - _NUM _CHAR ) ; }
37071	public Object clone ( ) { return new Area ( this ) ; }
37171	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
37285	public void displayProgress ( ProgressDescriptor descriptor ) { for ( WizardStep s : hmPanels . keySet ( ) ) { getPanel ( s ) . displayProgress ( descriptor ) ; } }
37311	public static boolean isFmSuspendSupport ( ) { return IS_FM_SUSPEND_SUPPORT ; }
37322	public boolean isBorderAnimation ( ) { return isBorderAnimation ; }
37356	public boolean isXfaPresent ( ) { return xfaPresent ; }
37468	public boolean canTraverseOutsideSubtree ( ) { return m_arg0 . canTraverseOutsideSubtree ( ) ; }
37489	public boolean isForceOnError ( ) { return this . forceOnError ; }
37525	public void close ( ) throws IOException { stream . close ( ) ; }
37554	public static String encode ( final String s ) { return new String ( encode ( Utils . getDefaultBytes ( s , _CHAR ISO - _NUM - _NUM _CHAR ) ) ) ; }
37568	protected LayoutManager createLayoutManager ( ) { return getHandler ( ) ; }
37636	public List < String > fieldPropertyComment ( Field field ) { String commentType = fieldTypeCardinalityComment ( field ) ; String fieldName = propertyName ( field ) ; return convertToCommentedBlock ( fieldComment ( String . format ( _CHAR @ property { % s } % s _CHAR , commentType , fieldName ) , _NULL , field ) ) ; }
37659	public Name child ( final String name ) { return new Name ( this , name ) ; }
37701	public List < String > defaultComments ( ProtoElement element ) { if ( ! element . hasAttribute ( ElementDocumentationAttribute . KEY ) ) { return ImmutableList . < String > of ( ) ; } return convertToCommentedBlock ( RDocCommentFixer . rdocify ( DocumentationUtil . getScopedDescription ( element ) ) ) ; }
37704	public ConnectionParameters adminPassword ( String password ) { adminPassword = password ; return this ; }
37715	public static String applySuccessfulBackgroundToHtml ( String html ) { return DIV_OPEN_SUCCESSFUL_BACKGROUND + html + DIV_CLOSE ; }
37749	boolean hasAttribute ( final AttributeType attributeType ) { for ( final TemplateLine line : templateLines ) { if ( line . getAttributeType ( ) . equals ( attributeType ) ) { return _BOOL ; } } return _BOOL ; }
37773	static void checkOpcode ( final int opcode , final int type ) { if ( opcode < _NUM || opcode > _NUM || TYPE [ opcode ] != type ) { throw new IllegalArgumentException ( _CHAR Invalid opcode : _CHAR + opcode ) ; } }
37784	public void add ( Permission permission ) { if ( ! ( permission instanceof FilePermission ) ) throw new IllegalArgumentException ( _CHAR invalid permission : _CHAR + permission ) ; if ( isReadOnly ( ) ) throw new SecurityException ( _CHAR attempt to add a Permission to a readonly PermissionCollection _CHAR ) ; synchronized ( this ) { perms . add ( permission ) ; } }
37813	public static String toUTCDateFormatWithMilliseconds ( final Date date ) { return dateToString ( date , UTC_DATE_MILLISECONDS_Z_FORMAT , UTC_TIME_ZONE ) ; }
37856	private String removeExtraChars ( String host ) { final int startsWith = host . indexOf ( _CHAR [ _CHAR ) ; if ( startsWith == - _NUM ) { return host ; } return host . substring ( _NUM , host . length ( ) - _NUM ) ; }
37942	private static boolean c66EncodeCookie ( ) { return Boolean . valueOf ( SystemProperties . get ( Constants . C66_ENCODE_AM_COOKIE , _CHAR _BOOL _CHAR ) ) . booleanValue ( ) ; }
37954	public boolean continueIterating ( ) { return continueIterating ; }
37968	protected Container createContainer ( ) { return new EditorContainer ( ) ; }
37987	public boolean isZoomed ( ) { return normalizedScale != _NUM ; }
37993	public String toString ( ) { return oid . toString ( ) ; }
38044	public static void removeByField2 ( boolean field2 ) { getPersistence ( ) . removeByField2 ( field2 ) ; }
38158	public boolean hasIcons ( ) { return mContent . getShortcutsAndWidgets ( ) . getChildCount ( ) > _NUM ; }
38221	public void handleDeleteError ( RetentionPolicy retentionPolicy , Throwable ex ) { LocalizableMessage msg = ERR_LOGGER_ERROR_ENFORCING_RETENTION_POLICY . get ( retentionPolicy , publisherConfigDN , stackTraceToSingleLineString ( ex ) ) ; System . err . println ( msg ) ; }
38243	public boolean is_connectable ( AwtreeObject p_obj ) { for ( int index = _NUM ; index < net_nos_arr . length ; ++ index ) { if ( ! p_obj . is_obstacle ( net_nos_arr [ index ] ) ) return _BOOL ; } return _BOOL ; }
38271	private boolean isDescendant ( ObjectClass ocParent , ObjectClass oChild ) { Set < ObjectClass > superiors = oChild . getSuperiorClasses ( ) ; if ( superiors != _NULL ) { for ( ObjectClass o : superiors ) { if ( ocParent == o || isDescendant ( ocParent , o ) ) { return _BOOL ; } } } return _BOOL ; }
38359	public boolean isSupported ( String feature , String version ) { return _BOOL ; }
38366	public Principal peerPrincipal ( ) { return ! peerCertificates . isEmpty ( ) ? ( ( X509Certificate ) peerCertificates . get ( _NUM ) ) . getSubjectX500Principal ( ) : _NULL ; }
38537	public Reference < ? extends T > remove ( ) throws InterruptedException { return remove ( _NUM ) ; }
38542	@ Override public void markActive ( Index entity ) { BoundStatement bs = new BoundStatement ( markActiveStmt ) ; bindIdentifier ( bs , entity . getId ( ) ) ; getSession ( ) . execute ( bs ) ; }
38558	public String toLocalizedPattern ( ) { return toPattern ( _BOOL ) ; }
38598	public static void fill ( double [ ] a , double val ) { for ( int i = _NUM , len = a . length ; i < len ; i ++ ) a [ i ] = val ; }
38624	public static void marshal ( Object jaxbObject , Result xml ) { _marshal ( jaxbObject , xml ) ; }
38663	public void resetLengthForReceive ( ) { this . length = userSuppliedLength ; }
38703	public void addChangeListener ( ChangeListener l ) { listenerList . add ( ChangeListener . class , l ) ; }
38807	public static void removeByField2 ( boolean field2 ) { getPersistence ( ) . removeByField2 ( field2 ) ; }
39017	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . ignorableWhitespace ( ch , start , length ) ; } }
39019	@ NonNull public static Agera range ( int count ) { return new AgeraRange ( count ) ; }
39080	public static GenericControl newControl ( final String oid , final boolean isCritical ) { return new GenericControl ( oid , isCritical , _NULL ) ; }
39107	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeSQLXML ( SQLXML x ) throws SQLException { attribs . add ( x ) ; }
39109	public boolean hasListeners ( String propertyName ) { for ( PropertyChangeListener p : listeners ) { if ( ! ( p instanceof PropertyChangeListenerProxy ) || Objects . equal ( propertyName , ( ( PropertyChangeListenerProxy ) p ) . getPropertyName ( ) ) ) { return _BOOL ; } } return _BOOL ; }
39129	public byte readByte ( ) throws IOException , EOFException { return ( byte ) in . read ( ) ; }
39217	public static Object convertNodeToJAXB ( Node node ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( node ) ; }
39270	public static void removeByField2 ( boolean field2 ) { getPersistence ( ) . removeByField2 ( field2 ) ; }
39310	private boolean isVowel ( final char c ) { switch ( c ) { case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : return _BOOL ; default : return _BOOL ; } }
39326	public void initializeTrustManagerIfRequired ( ) throws ArgumentException { if ( ! state . trustManagerInitialized ) { initializeTrustAndKeyManagers ( ) ; } }
39356	boolean canRunInCurrentRunState ( boolean periodic ) { return isRunningOrShutdown ( periodic ? continueExistingPeriodicTasksAfterShutdown : executeExistingDelayedTasksAfterShutdown ) ; }
39367	@ Override public boolean allowedInBranch ( ) { return _BOOL ; }
39432	public void wakeup ( ) { if ( this . waiter == _NULL ) { throw new IllegalStateException ( _CHAR Nobody waiting on this object . '' ) ; } this . cond . signalAll ( ) ; }
39458	public ProcessBuilder redirectErrorStream ( boolean redirectErrorStream ) { this . redirectErrorStream = redirectErrorStream ; return this ; }
39463	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
39518	public static Object convertStringToJAXB ( String str ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( new StringReader ( str ) ) ) ) ; }
39560	private void checkEglError ( String msg ) { int error ; if ( ( error = EGL14 . eglGetError ( ) ) != EGL14 . EGL_SUCCESS ) { throw new RuntimeException ( msg + _CHAR : EGL error : _NUM _CHAR + Integer . toHexString ( error ) ) ; } }
39598	public static UnbindRequest copyOfUnbindRequest ( final UnbindRequest request ) { return new UnbindRequestImpl ( request ) ; }
39615	@ Override public synchronized void reset ( ) throws IOException { try { in . reset ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
39631	public void addMember ( Guid userGuid ) throws UMSException { if ( getPrincipal ( ) == _NULL ) { throw new IllegalArgumentException ( i18n . getString ( IUMSConstants . NULL_PRINCIPAL ) ) ; } addMember ( UMSObject . getObject ( getPrincipal ( ) , userGuid ) ) ; }
39663	public boolean hasNonNullValueForProperty ( String key ) { return hasProperty ( key ) && ! getProperty ( key ) . isJsonNull ( ) ; }
39710	public boolean isPowered ( ) { return ( getData ( ) & _NUM ) != _NUM ; }
39776	public PlaPointFloat user_to_board ( PlaPointFloat p_point ) { return new PlaPointFloat ( user_to_board ( p_point . v_x ) , user_to_board ( p_point . v_y ) ) ; }
39827	public Document createDefaultDocument ( ) { return new DefaultStyledDocument ( ) ; }
39890	public static int encode ( byte [ ] data , OutputStream out ) throws IOException { return encoder . encode ( data , _NUM , data . length , out ) ; }
39940	public void print ( char c ) { writer . print ( c ) ; }
39941	public boolean isWhitespace ( ) { return ( glyphType & _NUM ) == WHITESPACE ; }
39964	public void addMember ( PersistentObject member ) throws UMSException { addMember ( member . getGuid ( ) ) ; }
39984	public String scmRevision ( ) { return properties . getProperty ( _CHAR scm . revision _CHAR ) ; }
39994	boolean isLiteral ( Map attributes ) { return ( ( attributes == _NULL ) || attributes . size ( ) == _NUM ) ; }
39999	public int readUnsignedByte ( ) throws IOException , EOFException { return in . read ( ) ; }
40102	static void updateBase64 ( JTextComponent base64 , byte [ ] bytes ) { if ( bytes . length < MAX_BASE64_TO_DISPLAY ) { BinaryValue value = BinaryValue . createBase64 ( bytes ) ; base64 . setText ( value . getBase64 ( ) ) ; } else { base64 . setText ( INFO_CTRL_PANEL_SPECIFY_CONTENTS_IN_BASE64 . get ( ) . toString ( ) ) ; } }
40146	public boolean isLogPackets ( ) { return this . logPackets ; }
40244	private boolean isValidCharacter ( int index , char aChar ) { return getMaskCharacter ( index ) . isValidCharacter ( aChar ) ; }
40251	private void validateDnsNames ( Set dnsNameSet ) throws PolicyException { Iterator dnsNames = dnsNameSet . iterator ( ) ; while ( dnsNames . hasNext ( ) ) { String dnsName = ( String ) dnsNames . next ( ) ; validateDnsName ( dnsName ) ; dnsList . add ( dnsName . toLowerCase ( ) ) ; } }
40274	public static String toString ( byte value ) { return Integer . toString ( value ) ; }
40321	public static String rdnTypeFromDn ( DN dn ) { if ( dn . size ( ) > _NUM ) { return rdnType ( dn . rdn ( ) ) ; } return _CHAR _CHAR ; }
40335	public static IOFileFilter prefixFileFilter ( String prefix ) { return new PrefixFileFilter ( prefix ) ; }
40419	public static SecurityOptions createPKCS11CertificateOptions ( String keystorePwd , boolean enableSSL , boolean enableStartTLS , int sslPort , Collection < String > aliasesToUse ) { return createOptionsForCertificatType ( CertificateType . PKCS11 , _NULL , keystorePwd , enableSSL , enableStartTLS , sslPort , aliasesToUse ) ; }
40461	@ Override protected void finalize ( ) throws Throwable { try { connection . close ( ) ; } catch ( final Exception ignored ) { } if ( logicalConnection != _NULL && ! logicalConnection . isClosed ( ) ) { throw new SQLException ( _CHAR PooledConnection was gc _CHAR_CHAR_CHAR_CHAR ) ; } }
40475	public static int checkFileExtension ( final String fileName , final ResourceType type ) { if ( type == _NULL || fileName == _NULL ) { return _NUM ; } if ( fileName . indexOf ( _CHAR ) == - _NUM ) { return _NUM ; } return checkSingleExtension ( getFileExtension ( fileName ) , type ) ? _NUM : _NUM ; }
40486	public void processKeyEvent ( KeyEvent e , MenuElement path [ ] , MenuSelectionManager manager ) { }
40568	private DN computeNewDN ( ) throws LocalizedIllegalArgumentException { if ( newSuperior != _NULL ) { return DN . valueOf ( newRDN + _CHAR , _CHAR + newSuperior ) ; } final DN parentDn = getDN ( ) . parent ( ) ; return parentDn . child ( RDN . valueOf ( newRDN ) ) ; }
40576	public static void removeByField2 ( boolean field2 ) { getPersistence ( ) . removeByField2 ( field2 ) ; }
40602	public List < String > defaultComments ( ProtoElement element ) { if ( ! element . hasAttribute ( ElementDocumentationAttribute . KEY ) ) { return ImmutableList . < String > of ( ) ; } return convertToCommentedBlock ( JSDocCommentFixer . jsdocify ( DocumentationUtil . getScopedDescription ( element ) ) ) ; }
40668	public ByteStringBuilder appendLong ( long l ) { ensureAdditionalCapacity ( _NUM ) ; for ( int i = length + _NUM ; i >= length ; i -- ) { buffer [ i ] = ( byte ) l ; l >> >= _NUM ; } length += _NUM ; return this ; }
40689	public static byte [ ] readBinary ( InputStream stream , long size ) throws IOException { byte [ ] result = new byte [ ( int ) size ] ; stream . read ( result ) ; return result ; }
40703	public void sendUserDeleteNotification ( Map attributes ) { try { if ( deleteNotifyList != _NULL && ! deleteNotifyList . isEmpty ( ) ) { sendEmail ( deleteNotifyList , attributes , _CHAR _NUM _CHAR , _CHAR _NUM _CHAR , _CHAR _NUM _CHAR ) ; } } catch ( MessagingException e ) { if ( debug . warningEnabled ( ) ) { debug . warning ( _CHAR EmailNotificationHelper . '' + _CHAR sendUserDeleteNotification ( ) Unable to send _CHAR + _CHAR email for user : '' + entryDN , e ) ; } } }
40748	public ByteStringBuilder appendInt ( int i ) { ensureAdditionalCapacity ( _NUM ) ; for ( int j = length + _NUM ; j >= length ; j -- ) { buffer [ j ] = ( byte ) i ; i >> >= _NUM ; } length += _NUM ; return this ; }
40755	private void subscribeTopics ( String token ) throws IOException { GcmPubSub pubSub = GcmPubSub . getInstance ( this ) ; for ( String topic : TOPICS ) { pubSub . subscribe ( token , _CHAR / topics / _CHAR + topic , _NULL ) ; } }
40802	@ Override public void flush ( ) { }
40893	public void pushElemAttributeSet ( ElemAttributeSet attrSet ) { m_attrSetStack . push ( attrSet ) ; }
40976	protected boolean isPersistable ( Class < ? > clazz ) { for ( int i = _NUM ; i < persistables . length ; i ++ ) { if ( persistables [ i ] == clazz || persistables [ i ] . isAssignableFrom ( clazz ) ) { return _BOOL ; } } return _BOOL ; }
41107	public void _write ( OutputStream output ) { output . write_longlong ( value ) ; }
41160	public static int locToBlock ( double loc ) { return NumberConversions . floor ( loc ) ; }
41245	public StringBuffer append ( int i ) { IntegralToString . appendInt ( this , i ) ; return this ; }
41281	public static void fill ( long [ ] a , long val ) { for ( int i = _NUM , len = a . length ; i < len ; i ++ ) a [ i ] = val ; }
41293	public void intervalAdded ( ListDataEvent e ) { firePropertyChange ( AccessibleContext . ACCESSIBLE_VISIBLE_DATA_PROPERTY , Boolean . valueOf ( _BOOL ) , Boolean . valueOf ( _BOOL ) ) ; }
41296	protected void resetLocation ( int endOffset , int g1 ) { if ( undoLocation != endOffset ) { this . rec . index = undoLocation ; } else { this . rec . index = g1 ; } }
41311	public String toXMLString ( ) { return ADVICES_HANDLEABLE_BY_AM_REQUEST_XML ; }
41326	private void initializeConnectionHandlers ( ) throws ConfigException , InitializationException { if ( connectionHandlerConfigManager == _NULL ) { connectionHandlerConfigManager = new ConnectionHandlerConfigManager ( serverContext ) ; } connectionHandlerConfigManager . initializeConnectionHandlerConfig ( ) ; }
41354	private boolean isCurrentDevice ( RouteInfo info ) { if ( mCastDevice == _NULL ) { return _BOOL ; } CastDevice device = CastDevice . getFromBundle ( info . getExtras ( ) ) ; if ( ! device . getDeviceId ( ) . equals ( mCastDevice . getDeviceId ( ) ) ) { return _BOOL ; } return _BOOL ; }
41397	public static synchronized void reInitializeAuthServices ( ) { AUTH_TYPES . clear ( ) ; GLOBAL_MODULE_NAMES . clear ( ) ; initAuthenticationService ( ) ; }
41424	public AddressImpl parseAddress ( String address ) throws ParseException { AddressParser addressParser = new AddressParser ( address ) ; return addressParser . address ( _BOOL ) ; }
41444	public void storeArg ( final int arg ) { storeInsn ( argumentTypes [ arg ] , getArgIndex ( arg ) ) ; }
41445	public short compareDocumentPosition ( Node other ) throws DOMException { return _NUM ; }
41470	@ Bean ( initMethod = _CHAR start _CHAR , destroyMethod = _CHAR stop _CHAR ) @ Profile ( Constants . SPRING_PROFILE_DEVELOPMENT ) public Server h2TCPServer ( ) throws SQLException { return Server . createTcpServer ( _CHAR - tcp _CHAR , _CHAR - tcpAllowOthers _CHAR ) ; }
41517	public static void marshal ( Object jaxbObject , File xml ) { _marshal ( jaxbObject , xml ) ; }
41535	@ Override public void onBackPressed ( ) { delegate . onBackPressed ( ) ; }
41543	static void appendModeInfo ( Mode mode , BitVector bits ) { bits . appendBits ( mode . getBits ( ) , _NUM ) ; }
41564	public int hashCode ( ) { return super . hashCode ( ) ^ jdate . hashCode ( ) ; }
41580	public static void write ( File file , CharSequence data , String encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
41602	public static boolean containsModifiableVariableModification ( ProtocolMessage object ) { for ( ModifiableVariableHolder holder : object . getAllModifiableVariableHolders ( ) ) { for ( Field f : holder . getAllModifiableVariableFields ( ) ) { if ( containsModifiableVariableModification ( holder , f ) ) { return _BOOL ; } } } return _BOOL ; }
41639	void cellToCenterPoint ( int cellX , int cellY , int [ ] result ) { regionToCenterPoint ( cellX , cellY , _NUM , _NUM , result ) ; }
41652	@ Override public boolean allowedInBranch ( ) { return _BOOL ; }
41678	public void addCompleteIndex ( String index ) { Reject . ifNull ( index ) ; completeList . add ( index ) ; }
41683	public static StartTLSExtendedRequest newStartTLSExtendedRequest ( final SSLContext sslContext ) { return new StartTLSExtendedRequestImpl ( sslContext ) ; }
41803	public boolean isObsolete ( ) { return obsolete ; }
41840	public static SecurityOptions createPKCS12CertificateOptions ( String keystorePath , String keystorePwd , boolean enableSSL , boolean enableStartTLS , int sslPort , Collection < String > aliasesToUse ) { return createOptionsForCertificatType ( CertificateType . PKCS12 , keystorePath , keystorePwd , enableSSL , enableStartTLS , sslPort , aliasesToUse ) ; }
41862	public static int mainCLI ( String [ ] args , final TempLogFile tempLogFile ) { return mainCLI ( args , System . out , System . err , tempLogFile ) ; }
41893	public void finalizeGroupManager ( ) { DirectoryServer . deregisterInternalPlugin ( this ) ; DirectoryServer . deregisterBackendInitializationListener ( this ) ; deregisterAllGroups ( ) ; for ( Group < ? > groupImplementation : groupImplementations . values ( ) ) { groupImplementation . finalizeGroupImplementation ( ) ; } groupImplementations . clear ( ) ; }
41911	public DTMAxisIterator cloneIterator ( ) { _isRestartable = _BOOL ; try { final AncestorIterator clone = ( AncestorIterator ) super . clone ( ) ; clone . _startNode = _startNode ; return clone ; } catch ( CloneNotSupportedException e ) { throw new DTMException ( XMLMessages . createXMLMessage ( XMLErrorResources . ER_ITERATOR_CLONE_NOT_SUPPORTED , _NULL ) ) ; } }
42004	@ Override public void onBackPressed ( ) { super . onBackPressed ( ) ; }
42149	protected DecodeException newUnexpectedRequestException ( final int messageID , final Request request ) { return DecodeException . fatalError ( LocalizableMessage . raw ( _CHAR Unexpected LDAP request : id = % d , message = % s _CHAR , messageID , request ) ) ; }
42193	public void flip ( int bitIndex ) { if ( bitIndex < _NUM ) throw new IndexOutOfBoundsException ( _CHAR bitIndex < _NUM : _CHAR + bitIndex ) ; int wordIndex = wordIndex ( bitIndex ) ; expandTo ( wordIndex ) ; words [ wordIndex ] ^= ( _NUM << bitIndex ) ; recalculateWordsInUse ( ) ; checkInvariants ( ) ; }
42262	boolean containsNamingContext ( DN dn ) { return privateNamingContexts . containsKey ( dn ) || publicNamingContexts . containsKey ( dn ) ; }
42392	public static void saveAsBinary ( NSObject root , File out ) throws IOException { File parent = out . getParentFile ( ) ; if ( ! parent . exists ( ) ) if ( ! parent . mkdirs ( ) ) throw new IOException ( _CHAR The output directory does not exist and could not be created . '' ) ; BinaryPropertyListWriter . write ( out , root ) ; }
42442	private void disableMaintenanceMode ( ) { synchronized ( maintenanceEnabled ) { if ( maintenanceEnabled . getAndSet ( _BOOL ) ) { maintenanceFilter . disableMaintenanceMode ( ) ; } } }
42554	@ Override public HijrahDate dateYearDay ( int prolepticYear , int dayOfYear ) { HijrahDate date = HijrahDate . of ( this , prolepticYear , _NUM , _NUM ) ; if ( dayOfYear > date . lengthOfYear ( ) ) { throw new DateTimeException ( _CHAR Invalid dayOfYear : _CHAR + dayOfYear ) ; } return date . plusDays ( dayOfYear - _NUM ) ; }
42651	private static boolean jwtHasAudienceClaim ( JwtClaimsSet jwtClaims ) throws AuthLoginException { List < String > audienceClaim = jwtClaims . getAudience ( ) ; return ( audienceClaim != _NULL && ! audienceClaim . isEmpty ( ) ) ; }
42661	private boolean matchFilterAttributeValues ( Attribute a , AttributeType attrType , SearchFilter filter ) { for ( ByteString value : a ) { if ( ! matchFilterAttributeValue ( attrType , value , filter ) ) { return _BOOL ; } } return _BOOL ; }
42668	public void appendProgressHtml ( String text ) { progressPanel . appendHtml ( text ) ; }
42676	public static BossBar createBossBar ( String title , BarColor color , BarStyle style , BarFlag ... flags ) { return server . createBossBar ( title , color , style , flags ) ; }
42705	public static void register ( String path , String alias ) { FontProgramFactory . registerFont ( path , alias ) ; }
42735	public static PdfTargetDictionary createChildTarget ( String embeddedFileName ) { return new PdfTargetDictionary ( PdfName . C ) . put ( PdfName . N , new PdfString ( embeddedFileName ) ) ; }
42783	private void assertTokenClientExists ( AccessToken accessToken , OAuth2Request request ) throws InvalidTokenException { String clientId = accessToken . getClientId ( ) ; try { clientRegistrationStore . get ( clientId , request ) ; } catch ( InvalidClientException | NotFoundException e ) { logger . error ( _CHAR The client identified by the id : _CHAR + clientId + _CHAR does not exist _CHAR ) ; throw new InvalidTokenException ( ) ; } }
42784	public ImmutableList < A > prepend ( final A x ) { return new ImmutableList < > ( x , this ) ; }
42826	public String extract ( HttpServletRequest request , String cookieName ) { if ( request . getCookies ( ) != _NULL ) { for ( final Cookie cookie : request . getCookies ( ) ) { if ( cookie . getName ( ) . equals ( cookieName ) ) { return cookie . getValue ( ) ; } } } return _NULL ; }
42828	@ Override public synchronized void reset ( ) throws IOException { try { in . reset ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
42833	@ Override public boolean equals ( Object obj ) { if ( obj == this ) { return _BOOL ; } if ( ! ( obj instanceof SecretKeySpec ) ) { return _BOOL ; } SecretKeySpec ks = ( SecretKeySpec ) obj ; return ( algorithm . equalsIgnoreCase ( ks . algorithm ) ) && ( Arrays . equals ( key , ks . key ) ) ; }
42877	public static void marshal ( Object jaxbObject , String xml ) { _marshal ( jaxbObject , xml ) ; }
42901	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
42932	@ Override protected final ShapeTile [ ] calculate_tree_shapes ( AwtreeShapeSearch p_search_tree ) { return new ShapeTile [ _NUM ] ; }
42934	private void toString ( StringBuilder buffer ) { for ( String line : encode ( ) ) { buffer . append ( line ) ; buffer . append ( EOL ) ; } }
42938	public boolean isSOAPFaultNeeded ( ) { return _BOOL ; }
42945	@ Override public void toString ( StringBuilder buffer , int indent ) { for ( int i = _NUM ; i < indent ; i ++ ) { buffer . append ( _CHAR ) ; } buffer . append ( _CHAR Unbind Request _CHAR ) ; buffer . append ( EOL ) ; }
42952	public static TransformerFactoryProvider transformerFactoryProvider ( final int maxSize ) { return new PerThreadTransformerFactoryProvider ( maxSize ) ; }
42953	private boolean hasConfigChanged ( JsonValue existingConfig , JsonValue newConfig ) { return ! existingConfig . isEqualTo ( newConfig ) ; }
42976	public boolean includeAttribute ( AttributeType attributeType ) { return ( excludeAttributes . isEmpty ( ) || ! excludeAttributes . contains ( attributeType ) ) && ( includeAttributes . isEmpty ( ) || includeAttributes . contains ( attributeType ) ) ; }
43056	public DoubleInfo addDoubleInfo ( double value ) throws JavaSpecificationViolation { DoubleInfo doubleinfo = new DoubleInfo ( this , value ) ; addItem ( doubleinfo ) ; addItem ( new ConstantPoolPadding ( this ) ) ; return doubleinfo ; }
43085	public T action ( ReconAction action ) { if ( _NULL != action ) { jsonValue . put ( ACTION , action . name ( ) ) ; } return self ( ) ; }
43109	public void removeActionListener ( ActionListener listener ) { listenerList . remove ( ActionListener . class , listener ) ; }
43191	public synchronized void stopPSearches ( ) { isShutdownCalled = _BOOL ; for ( ListenerSearch pSearch : persistentSearches . values ( ) ) { pSearch . search . removeListener ( pSearch . listener ) ; pSearch . search . stopSearch ( ) ; } }
43219	public static List < Attribute > createAsList ( AttributeType attributeType , String valueString ) { return newArrayList ( create ( attributeType , valueString ) ) ; }
43364	public static AddRequest copyOfAddRequest ( final AddRequest request ) { return new AddRequestImpl ( request ) ; }
43376	public synchronized void abandon ( ConversationAbandonedEvent details ) { if ( ! abandoned ) { abandoned = _BOOL ; currentPrompt = _NULL ; context . getForWhom ( ) . abandonConversation ( this ) ; for ( ConversationAbandonedListener listener : abandonedListeners ) { listener . conversationAbandoned ( details ) ; } } }
43403	public void componentRemoved ( ContainerEvent e ) { ( ( ContainerListener ) a ) . componentRemoved ( e ) ; ( ( ContainerListener ) b ) . componentRemoved ( e ) ; }
43424	public static void convertToBinary ( File in , File out ) throws IOException , ParserConfigurationException , ParseException , SAXException , PropertyListFormatException { NSObject root = parse ( in ) ; saveAsBinary ( root , out ) ; }
43452	public boolean isMODDNOperation ( ) { return attrTypeIsNull && isModDN ; }
43476	public static boolean contains ( final String value , final String needle ) { return contains ( value , needle , _BOOL ) ; }
43488	public T create ( String realm ) throws SMSException , SSOException { T service = serviceCache . get ( realm ) ; if ( service == _NULL ) { service = factory . create ( serviceConfigManager , realm ) ; serviceCache . putIfAbsent ( realm , service ) ; } return serviceCache . get ( realm ) ; }
43507	public String toXMLString ( ) throws FSMsgException { return this . toXMLString ( _BOOL , _BOOL ) ; }
43540	boolean hasMask ( int mask ) { return ( this . mask & mask ) != _NUM ; }
43562	public void paintTreeCellFocus ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
43667	public boolean isComponent ( ) { return ( glyphType & _NUM ) == COMPONENT ; }
43689	public void close ( ) throws IOException { closedByReader = _BOOL ; synchronized ( this ) { in =- _NUM ; } }
43697	public void identityChanged ( String universalId ) { if ( DelegationManager . debug . messageEnabled ( ) ) { DelegationManager . debug . message ( _CHAR DelegationPolicyImpl : changed universalId = _CHAR + universalId ) ; } cleanupCache ( ) ; }
43729	public static void overrideSymbolSet ( SymbolInfo [ ] override ) { symbols = override ; }
43740	public char first ( ) { pos = offset ; if ( count != _NUM ) { return array [ pos ] ; } return DONE ; }
43790	public char first ( ) { pos = offset ; if ( count != _NUM ) { return array [ pos ] ; } return DONE ; }
43837	public boolean canTraverseOutsideSubtree ( ) { if ( _NULL != m_parts ) { int n = m_parts . size ( ) ; for ( int i = _NUM ; i < n ; i ++ ) { AVTPart part = ( AVTPart ) m_parts . elementAt ( i ) ; if ( part . canTraverseOutsideSubtree ( ) ) return _BOOL ; } } return _BOOL ; }
43847	private String mapStyleName ( String style ) { if ( styleNameMapping == _NULL ) { return style ; } String retValue = styleNameMapping . get ( style ) ; return ( retValue == _NULL ) ? style : retValue ; }
43895	@ Override public int hashCode ( ) { return super . hashCode ( ) ^ ( int ) gregorianCutoverDate ; }
43917	public static String encodeString ( String s ) { return new String ( encode ( s . getBytes ( ) ) ) ; }
43919	@ Override public int hashCode ( ) { int result = version + rounds + wordSize ; if ( iv == _NULL ) { return result ; } for ( byte element : iv ) { result += element & _NUM ; } return result ; }
43943	public String nextLine ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( _CHAR No more lines _CHAR ) ; } String currentLine = cachedLine ; cachedLine = _NULL ; return currentLine ; }
43945	public boolean isLigature ( ) { return ( glyphType & _NUM ) == LIGATURE ; }
44033	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
44053	public boolean tryLock ( long timeout ) throws InterruptedException { return lock . tryLock ( timeout , TimeUnit . MILLISECONDS ) ; }
44064	public boolean is_area_obstacle ( ) { return is_obstacle ; }
44106	public boolean isSigned ( ) { return isSigned ; }
44192	public final boolean isOnKeyRelease ( ) { return onKeyRelease ; }
44211	@ Override public int hashCode ( ) { int result = effectiveKeyBits ; if ( iv == _NULL ) { return result ; } for ( byte element : iv ) { result += element ; } return result ; }
44212	XPathFactory createInstance ( String className ) throws XPathFactoryConfigurationException { return createInstance ( className , _BOOL ) ; }
44230	public static byte [ ] decodeBytes ( byte [ ] b , PdfDictionary streamDictionary ) { return decodeBytes ( b , streamDictionary , FilterHandlers . getDefaultFilterHandlers ( ) ) ; }
44271	public void addApplicationEventListener ( Object listener ) { applicationEventListenersList . add ( listener ) ; }
44297	public void scheduleAtFixedRate ( TimerTask task , Date when , long period ) { if ( period <= _NUM || when . getTime ( ) < _NUM ) { throw new IllegalArgumentException ( ) ; } long delay = when . getTime ( ) - System . currentTimeMillis ( ) ; scheduleImpl ( task , delay , period , _BOOL ) ; }
44336	public PdfCanvas ellipse ( double x1 , double y1 , double x2 , double y2 ) { return arc ( x1 , y1 , x2 , y2 , _NUM , _NUM ) ; }
44537	public boolean markSupported ( ) { return _BOOL ; }
44543	public void finish ( ) throws IOException { if ( done ) { return ; } def . finish ( ) ; while ( ! def . finished ( ) ) { int byteCount = def . deflate ( buf ) ; out . write ( buf , _NUM , byteCount ) ; } done = _BOOL ; }
44581	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
44584	public List < String > defaultComments ( ProtoElement element ) { if ( ! element . hasAttribute ( ElementDocumentationAttribute . KEY ) ) { return ImmutableList . < String > of ( _CHAR _CHAR ) ; } return pythonCommon . convertToCommentedBlock ( getSphinxifiedScopedDescription ( element ) ) ; }
44632	protected boolean scrollTop ( TextView widget , Spannable buffer ) { final Layout layout = widget . getLayout ( ) ; if ( getTopLine ( widget ) >= _NUM ) { Touch . scrollTo ( widget , layout , widget . getScrollX ( ) , layout . getLineTop ( _NUM ) ) ; return _BOOL ; } return _BOOL ; }
44680	public boolean isFixedOffset ( ) { return savingsInstantTransitions . length == _NUM ; }
44682	public void waitForStartup ( ) throws InterruptedException { latch . await ( ) ; }
44713	public boolean isFullyQualified ( ) { return fqdn ; }
44792	public byte peek ( ) { return sequence . byteAt ( pos ) ; }
44837	public static void removeByUuid ( java . lang . String uuid ) { getPersistence ( ) . removeByUuid ( uuid ) ; }
44898	private void nextStream ( ) throws IOException { if ( in != _NULL ) { in . close ( ) ; } if ( e . hasMoreElements ( ) ) { in = e . nextElement ( ) ; if ( in == _NULL ) { throw new NullPointerException ( _CHAR element is _NULL _CHAR ) ; } } else { in = _NULL ; } }
44905	public static XMPDateTime createFromISO8601 ( String strValue ) throws XMPException { return new XMPDateTimeImpl ( strValue ) ; }
44923	public void reset_compensated_trees ( ) { Iterator < AwtreeShapeSearch > iter = search_trees . iterator ( ) ; while ( iter . hasNext ( ) ) { AwtreeShapeSearch curr_tree = iter . next ( ) ; if ( curr_tree != default_tree ) iter . remove ( ) ; } }
44924	public static void write ( File file , CharSequence data , String encoding , boolean append ) throws IOException { write ( file , data , Charsets . toCharset ( encoding ) , append ) ; }
45042	private static long calcSliceFence ( long skip , long limit ) { long sliceFence = limit >= _NUM ? skip + limit : Long . MAX_VALUE ; return ( sliceFence >= _NUM ) ? sliceFence : Long . MAX_VALUE ; }
45068	boolean isVersionNewer ( ) { return VersionUtils . isVersionNewer ( ) ; }
45136	boolean isRealmSubject ( ) { return subject instanceof SharedSubject ; }
45143	public static CompareResult copyOfCompareResult ( final CompareResult result ) { return new CompareResultImpl ( result ) ; }
45154	public static LDAPUrl valueOf ( final String url , final Schema schema ) { Reject . ifNull ( url , schema ) ; return new LDAPUrl ( url , schema ) ; }
45191	public boolean isWritable ( ) { return isWritable ; }
45214	@ Override public boolean allowedInBranch ( ) { return _BOOL ; }
45222	public RESTEndpointBuilder addModuleParameters ( ) { parameters . put ( AUTH_INDEX_TYPE_NAME , AUTH_INDEX_TYPE_VALUE ) ; parameters . put ( AUTH_INDEX_VALUE_NAME , AUTH_INDEX_VALUE_VALUE ) ; return this ; }
45251	public void suppressLineNumbers ( ) { _suppressLineNumbers = _BOOL ; }
45271	private < T , S > String flattenChangeIdentifiers ( final List < ChangeSet < T , S >> changeSets ) { final StringBuilder builder = new StringBuilder ( ) ; for ( ChangeSet < T , S > change : changeSets ) { builder . append ( change . getIdentifier ( ) . toString ( ) ) . append ( INDENT ) ; } return builder . toString ( ) ; }
45287	public static ServerSideSortResponseControl newControl ( final ResultCode result , final AttributeDescription attributeDescription ) { Reject . ifNull ( result ) ; return new ServerSideSortResponseControl ( _BOOL , result , attributeDescription ) ; }
45306	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeRowId ( RowId x ) throws SQLException { attribs . add ( x ) ; }
45316	public void addGlobalArgument ( Argument argument ) throws ArgumentException { addGlobalArgument ( argument , _NULL ) ; }
45482	@ Override public int read ( ) throws IOException { try { beforeRead ( _NUM ) ; int c = in . read ( ) ; afterRead ( c != - _NUM ? _NUM : - _NUM ) ; return c ; } catch ( IOException e ) { handleIOException ( e ) ; return - _NUM ; } }
45551	public static void convertToBinary ( File in , File out ) throws IOException , ParserConfigurationException , ParseException , SAXException , PropertyListFormatException { NSObject root = parse ( in ) ; saveAsBinary ( root , out ) ; }
45573	public void compactBuffer ( ) { if ( offset != buffer . length ) { byte [ ] newBuffer = new byte [ offset ] ; System . arraycopy ( buffer , _NUM , newBuffer , _NUM , offset ) ; buffer = newBuffer ; } }
45618	public static IOFileFilter suffixFileFilter ( String suffix ) { return new SuffixFileFilter ( suffix ) ; }
45631	public synchronized void removeConsumer ( ImageConsumer ic ) { theConsumers . removeElement ( ic ) ; }
45640	public boolean implies ( Permission permission ) { for ( Enumeration elements = elements ( ) ; elements . hasMoreElements ( ) ; ) { if ( ( ( Permission ) elements . nextElement ( ) ) . implies ( permission ) ) { return _BOOL ; } } return _BOOL ; }
45724	@ Override public synchronized void reset ( ) throws IOException { fbIndex = markFbIndex ; if ( markedAtStart ) { firstBytes = _NULL ; } in . reset ( ) ; }
45730	public String join ( String separator ) { StringBuilder sb = new StringBuilder ( ) ; boolean isFirst = _BOOL ; for ( Object e : this ) { if ( isFirst ) isFirst = _BOOL ; else sb . append ( separator ) ; sb . append ( e ) ; } return sb . toString ( ) ; }
45771	public void invalidateSizes ( ) { visibleNodesChanged ( ) ; }
45800	private String invalidBaseDNValue ( final String dn , final LocalizableMessage errorMsg , final Set < LocalizableMessage > errors ) { errors . add ( errorMsg ) ; setPrimaryInvalid ( lDirectoryBaseDN ) ; return dn ; }
45827	public static ModifyRequest copyOfModifyRequest ( final ModifyRequest request ) { return new ModifyRequestImpl ( request ) ; }
45952	@ Override public void removeByField2 ( boolean field2 ) { for ( Foo foo : findByField2 ( field2 , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ) { remove ( foo ) ; } }
45969	public void assignServices ( Map serviceNamesAndAttr ) throws AMException , SSOException { assignServices ( serviceNamesAndAttr , _BOOL ) ; }
45987	public ParcelFileDescriptor simpleQueryForBlobFileDescriptor ( ) { acquireReference ( ) ; try { return getSession ( ) . executeForBlobFileDescriptor ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
45997	private void writeObject ( ObjectOutputStream s ) throws java . io . IOException { s . defaultWriteObject ( ) ; s . writeObject ( toString ( ) ) ; }
46012	private void saveSubjects ( ) throws PolicyException , SSOException { if ( realmSubjects != _NULL ) { pm . saveRealmSubjects ( realmSubjects ) ; } }
46136	public static boolean needPolicyEvalUpdate ( ) { return policyEvalUpdate ; }
46186	public void logPacketContent ( Packet pkt , String preamble ) { LOG . warning ( preamble + _CHAR \ n _CHAR + getPacketRepresentation ( pkt ) ) ; }
46221	@ Override public void removeByUuid ( String uuid ) { for ( Foo foo : findByUuid ( uuid , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ) { remove ( foo ) ; } }
46254	static void installAudioActionMap ( ActionMap map ) { LookAndFeel laf = UIManager . getLookAndFeel ( ) ; if ( laf instanceof BasicLookAndFeel ) { map . setParent ( ( ( BasicLookAndFeel ) laf ) . getAudioActionMap ( ) ) ; } }
46258	public static LDAPUrl valueOf ( final String url ) { return valueOf ( url , Schema . getDefaultSchema ( ) ) ; }
46429	public static ComponentUI createUI ( JComponent list ) { return new BasicListUI ( ) ; }
46481	public void startDocument ( ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . startDocument ( ) ; } }
46492	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
46574	public static CRAMMD5SASLBindRequest newCRAMMD5SASLBindRequest ( final String authenticationID , final byte [ ] password ) { return new CRAMMD5SASLBindRequestImpl ( authenticationID , password ) ; }
46631	public XObject execute ( XPathContext xctxt , org . w3c . dom . Node contextNode , PrefixResolver namespaceContext ) throws javax . xml . transform . TransformerException { return execute ( xctxt , xctxt . getDTMHandleFromNode ( contextNode ) , namespaceContext ) ; }
46698	public synchronized void addConsumer ( ImageConsumer ic ) { if ( ! ics . contains ( ic ) ) { ics . addElement ( ic ) ; } }
46701	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR LDAPPreReadResponseControl ( criticality = _CHAR ) ; buffer . append ( isCritical ( ) ) ; buffer . append ( _CHAR , entry = _CHAR ) ; searchEntry . toSingleLineString ( buffer ) ; buffer . append ( _CHAR ) _CHAR ) ; }
46728	public void addMessage ( LocalizableMessage message ) { messages . add ( message ) ; }
46790	public static boolean isRoleStatus ( int status ) { if ( status != NO_ROLE_WITH_NAME && status != ROLE_NOT_READABLE && status != ROLE_NOT_WRITABLE && status != LESS_THAN_MIN_ROLE_DEGREE && status != MORE_THAN_MAX_ROLE_DEGREE && status != REF_MBEAN_OF_INCORRECT_CLASS && status != REF_MBEAN_NOT_REGISTERED ) { return _BOOL ; } return _BOOL ; }
46816	public static void write ( AudioFile f ) throws CannotWriteException { getDefaultAudioFileIO ( ) . writeFile ( f ) ; }
46852	public void onFedletSLOSuccess ( HttpServletRequest request , HttpServletResponse response , LogoutRequest logoutReq , LogoutResponse logoutRes , String hostedEntityID , String idpEntityID , String binding ) throws SAML2Exception { onFedletSLOSuccessOrFailure ( request , response , logoutReq , logoutRes , hostedEntityID , idpEntityID , binding , _BOOL ) ; return ; }
46891	public boolean isRevocationEnabled ( ) { return revocationEnabled ; }
46980	protected void resetLocation ( ) { rec . offset = undoLocation ; }
46981	public static int indexOf ( String value , String substring ) { return value != _NULL && substring != _NULL ? value . indexOf ( substring ) : - _NUM ; }
47062	private void writeObject ( java . io . ObjectOutputStream out ) throws IOException { if ( guard != _NULL ) { guard . checkGuard ( object ) ; } out . defaultWriteObject ( ) ; }
47099	public FilterAttributeBuilder or ( ) { return new FilterAttributeBuilder ( tokenFilter , Type . OR ) ; }
47100	public static Charset toCharset ( Charset charset ) { return charset == _NULL ? Charset . defaultCharset ( ) : charset ; }
47193	public static void convertToXml ( File in , File out ) throws ParserConfigurationException , ParseException , SAXException , PropertyListFormatException , IOException { NSObject root = parse ( in ) ; saveAsXML ( root , out ) ; }
47280	void clear ( ) throws ChangelogException { log . clear ( ) ; replicationEnv . resetGenerationId ( baseDN ) ; csnLimits = new CSNLimits ( _NULL , _NULL ) ; }
47342	public static boolean jwtHasAuthorizedPartyClaim ( JwtClaimsSet jwtClaims ) throws AuthLoginException { String authorizedPartyClaim = ( String ) jwtClaims . getClaim ( AUTHORIZED_PARTY_CLAIM_KEY ) ; return ( authorizedPartyClaim != _NULL && ! authorizedPartyClaim . isEmpty ( ) ) ; }
47396	private void enableMaintenanceMode ( ) { synchronized ( maintenanceEnabled ) { if ( ! maintenanceEnabled . getAndSet ( _BOOL ) ) { maintenanceFilter . enableMaintenanceMode ( ) ; } } }
47409	public MaterialBarcodeScannerBuilder withOnly3DScanning ( ) { mBarcodeFormats = Barcode . QR_CODE | Barcode . DATA_MATRIX | Barcode . PDF417 | Barcode . AZTEC ; return this ; }
47413	@ Override public void removeByUuid ( String uuid ) { for ( Foo foo : findByUuid ( uuid , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ) { remove ( foo ) ; } }
47438	public static void convertToXml ( File in , File out ) throws ParserConfigurationException , ParseException , SAXException , PropertyListFormatException , IOException { NSObject root = parse ( in ) ; saveAsXML ( root , out ) ; }
47539	public static void shuffle ( List < ? > list ) { shuffle ( list , new Random ( ) ) ; }
47581	public boolean isURL ( ) { return isURL ; }
47643	public static ByteString valueOfUtf8 ( final CharSequence s ) { if ( s . length ( ) == _NUM ) { return EMPTY ; } return wrap ( StaticUtils . getBytes ( s ) ) ; }
47649	public boolean isEmpty ( ) { return map . isEmpty ( ) ; }
47687	public void addLogInfo ( String key , Object value ) { logInfoMap . put ( key , value ) ; }
47699	public static String removeReplyURL ( String wctx ) { String wreply = _NULL ; synchronized ( wctxMap ) { wreply = ( String ) wctxMap . remove ( wctx ) ; } return wreply ; }
47703	public void addSeparator ( Dimension size ) { JToolBar . Separator s = new JToolBar . Separator ( size ) ; add ( s ) ; }
47943	@ Bean ( initMethod = _CHAR start _CHAR , destroyMethod = _CHAR stop _CHAR ) @ Profile ( Constants . SPRING_PROFILE_DEVELOPMENT ) public Server h2TCPServer ( ) throws SQLException { return Server . createTcpServer ( _CHAR - tcp _CHAR , _CHAR - tcpAllowOthers _CHAR ) ; }
47982	private void removeCookiesForRedirects ( final HttpServletRequest request , final HttpServletResponse response ) { final Set < String > domains = AuthClientUtils . getCookieDomainsForRequest ( request ) ; for ( String domain : domains ) { CookieUtils . addCookieToResponse ( response , CookieUtils . newCookie ( Constants . AM_LOCATION_COOKIE , _CHAR _CHAR , _NUM , _CHAR / _CHAR , domain ) ) ; } }
48127	public boolean markSupported ( ) { return _BOOL ; }
48144	boolean searchAllBaseDNs ( ) { return baseDNs . isEmpty ( ) ; }
48242	public static < T > List < T > synchronizedList ( List < T > list ) { if ( list == _NULL ) { throw new NullPointerException ( _CHAR list == _NULL _CHAR ) ; } if ( list instanceof RandomAccess ) { return new SynchronizedRandomAccessList < T > ( list ) ; } return new SynchronizedList < T > ( list ) ; }
48262	public static < K , V > Map < K , V > synchronizedMap ( Map < K , V > map ) { if ( map == _NULL ) { throw new NullPointerException ( _CHAR map == _NULL _CHAR ) ; } return new SynchronizedMap < K , V > ( map ) ; }
48337	boolean needToCheckExclude ( ) { return _BOOL ; }
48377	public boolean putRemoteUpdate ( LDAPUpdateMsg update ) { pendingChangesWriteLock . lock ( ) ; try { CSN csn = update . getCSN ( ) ; return pendingChanges . put ( csn , new PendingChange ( csn , _NULL , update ) ) == _NULL ; } finally { pendingChangesWriteLock . unlock ( ) ; } }
48386	protected DecodeException newUnexpectedResponseException ( final int messageID , final Response response ) { return DecodeException . fatalError ( LocalizableMessage . raw ( _CHAR Unexpected LDAP response : id = % d , message = % s _CHAR , messageID , response ) ) ; }
48388	String [ ] toCommandLineArgumentsStatus ( String configurationFile , ConnectionParameters connParams ) { return new String [ ] { _CHAR status _CHAR , _CHAR -- no - prompt _CHAR , _CHAR -- configFile _CHAR , configurationFile , _CHAR -- hostname _CHAR , connParams . getHostName ( ) , _CHAR -- port _CHAR , s ( connParams . getAdminPort ( ) ) , _CHAR -- adminUID _CHAR , connParams . getAdminUid ( ) , _CHAR -- adminPassword _CHAR , connParams . getAdminPassword ( ) , _CHAR -- script - friendly _CHAR , _CHAR -- noPropertiesFile _CHAR } ; }
48404	public boolean markSupported ( ) { return _BOOL ; }
48495	void internalSetOutputStream ( OutputStream newOs ) { this . os = newOs ; }
48594	private void reportInterruptAfterWait ( int interruptMode ) throws InterruptedException { if ( interruptMode == THROW_IE ) throw new InterruptedException ( ) ; else if ( interruptMode == REINTERRUPT ) selfInterrupt ( ) ; }
48600	@ Override public void addMimeMapping ( String extension , String mimeType ) { synchronized ( mimeMappings ) { mimeMappings . put ( extension . toLowerCase ( Locale . ENGLISH ) , mimeType ) ; } fireContainerEvent ( _CHAR addMimeMapping _CHAR , extension ) ; }
48606	void saveSubjectState ( ) { if ( principalList != _NULL ) { requestMap . put ( ISAuthConstants . PRINCIPAL_LIST , principalList ) ; } }
48616	void updateSettings ( DebugLogPublisher < ? > [ ] publishers ) { publisherSettings = toPublisherSettings ( publishers ) ; }
48636	public SerializationHandler createSerializationHandler ( Result outputTarget ) throws TransformerException { SerializationHandler xoh = createSerializationHandler ( outputTarget , getOutputFormat ( ) ) ; return xoh ; }
48680	public static Border createLineBorder ( Color color , int thickness , boolean rounded ) { return new LineBorder ( color , thickness , rounded ) ; }
48689	public String toXMLString ( ) throws ParseException , FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
48798	public boolean isEmpty ( ) { return size == _NUM ; }
48850	public int doFinal ( byte [ ] output , int outputOffset ) throws ShortBufferException , IllegalBlockSizeException , BadPaddingException { checkState ( ) ; return OpenSslNative . doFinalByteArray ( context , output , outputOffset , output . length - outputOffset ) ; }
48935	public < M extends Configuration > void registerDeleteListener ( InstantiableRelationDefinition < ? , M > d , ConfigurationDeleteListener < M > listener ) throws ConfigException { registerDeleteListener ( d , new ServerManagedObjectDeleteListenerAdaptor < M > ( listener ) ) ; }
48986	public int countTokenEntries ( TokenType tokenType ) throws CoreTokenException { final TokenFilter tokenFilter = new TokenFilterBuilder ( ) . returnAttribute ( CoreTokenField . TOKEN_ID ) . and ( ) . withAttribute ( CoreTokenField . TOKEN_TYPE , tokenType ) . build ( ) ; return store . attributeQuery ( tokenFilter ) . size ( ) ; }
49007	public void addCleanIndex ( String index ) { Reject . ifNull ( index ) ; cleanList . add ( index ) ; }
49044	public ServiceSchemaManager build ( String service ) throws SSOException , SMSException { return new ServiceSchemaManager ( service , adminToken ) ; }
49140	private void toString ( StringBuilder buffer ) { buffer . append ( _CHAR LDIFImportResult ( entriesRead = _CHAR ) ; buffer . append ( entriesRead ) ; buffer . append ( _CHAR , entriesRejected = _CHAR ) ; buffer . append ( entriesRejected ) ; buffer . append ( _CHAR , entriesSkipped = _CHAR ) ; buffer . append ( entriesSkipped ) ; buffer . append ( _CHAR ) _CHAR ) ; }
49171	public void invokeShutdownPlugins ( LocalizableMessage reason ) { for ( DirectoryServerPlugin p : shutdownPlugins ) { try { p . doShutdown ( reason ) ; } catch ( Exception e ) { logger . traceException ( e ) ; logger . error ( ERR_PLUGIN_SHUTDOWN_PLUGIN_EXCEPTION , p . getPluginEntryDN ( ) , stackTraceToSingleLineString ( e ) ) ; } } }
49190	protected void onUncaughtException ( RequestContext requestContext , Exception e ) throws ServletException , IOException { PWResetModelImpl . debug . error ( _CHAR PWResetServlet . onUncaughtException _CHAR , e ) ; ViewBeanManager viewBeanManager = requestContext . getViewBeanManager ( ) ; ViewBean targetView = viewBeanManager . getViewBean ( PWResetUncaughtExceptionViewBean . class ) ; targetView . forwardTo ( requestContext ) ; throw new CompleteRequestException ( ) ; }
49281	public final void errPrintln ( final LocalizableMessage msg , final int indent ) { getErrStream ( ) . println ( wrapText ( msg , MAX_LINE_WIDTH , indent ) ) ; }
49285	public StateInteractive filter ( ) { StateInteractive result = this ; items_list = i_brd . itera_settings . item_selection_filter . filter ( items_list ) ; if ( items_list . isEmpty ( ) ) result = return_state ; i_brd . repaint ( ) ; return result ; }
49376	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
49417	boolean doesOccur ( QName refName ) { return m_refs . contains ( refName ) ; }
49458	public double min_width ( ) { if ( min_width != _NULL ) return min_width . doubleValue ( ) ; min_width = Double . valueOf ( _NUM ) ; return min_width . doubleValue ( ) ; }
49460	public long timeout ( ) { return timeoutMs ; }
49500	public void displayMessageAndUsageReference ( final PrintStream printStream , final LocalizableMessage message ) { printWrappedText ( printStream , message ) ; printStream . println ( ) ; printWrappedText ( printStream , getHelpUsageReference ( ) ) ; }
49522	static void appendModeInfo ( Mode mode , BitArray bits ) { bits . appendBits ( mode . getBits ( ) , _NUM ) ; }
49567	public boolean canTraverseOutsideSubtree ( ) { return m_xpath . getExpression ( ) . canTraverseOutsideSubtree ( ) ; }
49618	@ Override public void refreshSession ( SSOToken token ) throws SSOException { refreshSession ( token , _BOOL ) ; }
49690	public boolean cover ( ServerState covered ) { for ( CSN coveredChange : covered . serverIdToCSN . values ( ) ) { if ( ! cover ( coveredChange ) ) { return _BOOL ; } } return _BOOL ; }
49721	public RxGalleryFinal cropAllowedGestures ( @ UCropActivity . GestureTypes int tabScale , @ UCropActivity . GestureTypes int tabRotate , @ UCropActivity . GestureTypes int tabAspectRatio ) { configuration . setAllowedGestures ( new int [ ] { tabScale , tabRotate , tabAspectRatio } ) ; return this ; }
49745	public static < E > Set < E > synchronizedSet ( Set < E > set ) { if ( set == _NULL ) { throw new NullPointerException ( _CHAR set == _NULL _CHAR ) ; } return new SynchronizedSet < E > ( set ) ; }
49801	@ Override public void close ( ) throws IOException { try { in . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
49851	public static IOFileFilter makeFileOnly ( IOFileFilter filter ) { if ( filter == _NULL ) { return FileFileFilter . FILE ; } return new AndFileFilter ( FileFileFilter . FILE , filter ) ; }
49863	public static int encode ( byte [ ] data , int off , int length , OutputStream out ) throws IOException { return encoder . encode ( data , off , length , out ) ; }
49962	public void menuSelectionChanged ( boolean isIncluded ) { }
49963	public void removeMember ( Guid guid ) throws UMSException { Principal principal = getPrincipal ( ) ; if ( principal == _NULL ) { throw new IllegalArgumentException ( i18n . getString ( IUMSConstants . BAD_PRINCIPAL_HDL ) ) ; } DataLayer . getInstance ( ) . removeAttributeValue ( principal , guid , MEMBER_ATTR_NAME , this . getDN ( ) ) ; }
49968	public boolean isSiteEnabled ( ) { try { return WebtopNaming . isSiteEnabled ( getLocalServerID ( _BOOL ) ) ; } catch ( Exception e ) { sessionDebug . error ( _CHAR Failed to check if local server { _NUM } is part of site _CHAR , getLocalServerID ( ) , e ) ; throw new IllegalStateException ( e ) ; } }
49973	public void removeClassResolver ( IClassResolver resolver ) { m_resolvers . remove ( resolver ) ; }
49989	public static void removeByUuid ( java . lang . String uuid ) { getPersistence ( ) . removeByUuid ( uuid ) ; }
50009	public void mouseReleased ( MouseEvent e ) { }
50126	public final void toString ( StringBuilder builder ) { builder . append ( getName ( ) ) ; }
50145	public boolean closeInitiated ( ) { synchronized ( stateLock ) { return closeInitiated ; } }
50153	private String prependIfAbsent ( String str , String requiredPrefix ) { return ( str != _NULL && str . startsWith ( requiredPrefix ) ) ? str : requiredPrefix + str ; }
50251	public void saveNicknameFor ( String fullName ) { getAndSaveNicknameFor ( fullName ) ; }
50272	public static int mainSearch ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { return mainSearch ( args , initializeServer , _BOOL , outStream , errStream ) ; }
50327	public boolean hasSeenEntry ( ) { return this . seenEntry ; }
50360	private Template templateWithNoAttribute ( ) { Template template = mock ( Template . class ) ; when ( template . hasAttribute ( any ( AttributeType . class ) ) ) . thenReturn ( _BOOL ) ; return template ; }
50417	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR ProxiedAuthorizationV1Control ( authorizationDN =\ _CHAR _CHAR ) ; buffer . append ( rawAuthorizationDN ) ; buffer . append ( _CHAR \ _CHAR ) _CHAR ) ; }
50457	public static void fill ( char [ ] a , char val ) { for ( int i = _NUM , len = a . length ; i < len ; i ++ ) a [ i ] = val ; }
50466	public static void fill ( Object [ ] a , Object val ) { for ( int i = _NUM , len = a . length ; i < len ; i ++ ) a [ i ] = val ; }
50488	public boolean verify ( SignerInformationVerifier verifier ) throws CMSException { Time signingTime = getSigningTime ( ) ; if ( verifier . hasAssociatedCertificate ( ) ) { if ( signingTime != _NULL ) { X509CertificateHolder dcv = verifier . getAssociatedCertificate ( ) ; if ( ! dcv . isValidOn ( signingTime . getDate ( ) ) ) { throw new CMSVerifierCertificateNotValidException ( _CHAR verifier not valid at signingTime _CHAR ) ; } } } return doVerify ( verifier ) ; }
50515	public boolean allowStartTLS ( ) { return currentConfig . isAllowStartTLS ( ) && ! currentConfig . isUseSSL ( ) ; }
50520	public void extend_selection_to_whole_connected_sets ( ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; set_interactive_state ( ( ( StateSelectedItem ) interactive_state ) . extent_to_whole_connected_sets ( ) ) ; }
50581	public short compareDocumentPosition ( Node other ) throws DOMException { return _NUM ; }
50606	public Builder orderingMatchingRule ( String orderingMatchingRuleOID ) { this . orderingMatchingRuleOID = orderingMatchingRuleOID ; return this ; }
50611	public void changeStateAndNotify ( SessionEventType eventType ) { fireSessionEvent ( eventType ) ; sessionLogging . logEvent ( toSessionInfo ( ) , eventType ) ; timedOutTimeInSeconds = MILLISECONDS . toSeconds ( currentTimeMillis ( ) ) ; putProperty ( _CHAR SessionTimedOut _CHAR , String . valueOf ( timedOutTimeInSeconds ) ) ; sessionService . execSessionTimeoutHandlers ( sessionID , eventType ) ; sessionService . destroyInternalSession ( sessionID ) ; }
50631	public void visitTypeArgument ( ) { }
50640	public void close_files ( ) { if ( actlog != _NULL ) { actlog . close_output ( ) ; } }
50666	public static void encode ( ASN1Writer writer , int opType , String value ) throws IOException { writer . writeStartSequence ( ) ; writer . writeEnumerated ( opType ) ; if ( value != _NULL ) { writer . writeStartSequence ( ) ; writer . writeOctetString ( value ) ; writer . writeEndSequence ( ) ; } writer . writeEndSequence ( ) ; }
50687	public static void main ( String [ ] args ) { int retCode = listBackends ( args , _BOOL , System . out , System . err ) ; if ( retCode != _NUM ) { System . exit ( filterExitCode ( retCode ) ) ; } }
50691	@ Override public void onWZAudioPaused ( boolean paused ) { mPaused = paused ; setVisibility ( paused ? View . GONE : View . VISIBLE ) ; }
50696	public final void userPrintln ( String message ) { userArea . println ( message ) ; }
50710	public void putField ( final Type owner , final String name , final Type type ) { fieldInsn ( Opcodes . PUTFIELD , owner , name , type ) ; }
50719	public void mousePressed ( MouseEvent event ) { hideTipWindow ( ) ; enterTimer . stop ( ) ; showImmediately = _BOOL ; insideComponent = _NULL ; mouseEvent = _NULL ; }
50864	public boolean isReadOnly ( ) { return getFieldFlag ( FF_READ_ONLY ) ; }
50891	private void validateDnsNames ( Set dnsNameSet ) throws PolicyException { Iterator dnsNames = dnsNameSet . iterator ( ) ; while ( dnsNames . hasNext ( ) ) { String dnsName = ( String ) dnsNames . next ( ) ; validateDnsName ( dnsName ) ; dnsList . add ( dnsName . toLowerCase ( ) ) ; } }
50927	private static Properties parseJNDIContext ( ) throws NamingException { NamingEnumeration < ? > bindings = ic . listBindings ( _CHAR _CHAR ) ; Properties properties = new Properties ( ) ; enumerateBindings ( bindings , properties ) ; return properties ; }
50955	public synchronized < T > Observable < T > observeEvent ( Class < T > eventClass ) { RXBusEventIsNullException . checkEvent ( eventClass ) ; SerializedSubject subject = getSubject ( eventClass , _BOOL ) ; return subject ; }
50985	public String join ( String separator ) { StringBuilder sb = new StringBuilder ( ) ; boolean isFirst = _BOOL ; for ( Object e : this ) { if ( isFirst ) isFirst = _BOOL ; else sb . append ( separator ) ; sb . append ( e ) ; } return sb . toString ( ) ; }
51008	public void remove ( KeyStroke key ) { super . remove ( key ) ; if ( getComponent ( ) != _NULL ) { getComponent ( ) . componentInputMapChanged ( this ) ; } }
51060	public static < T > T deserialise ( byte [ ] bytes , boolean compressed ) throws IOException , ClassNotFoundException { return deserialise ( bytes , compressed , _NULL ) ; }
51067	public static JLabel createPrimaryLabel ( LocalizableMessage text ) { JLabel label = new JLabel ( text . toString ( ) ) ; label . setFont ( ColorAndFontConstants . primaryFont ) ; label . setForeground ( ColorAndFontConstants . foreground ) ; return label ; }
51093	private void reportInterruptAfterWait ( int interruptMode ) throws InterruptedException { if ( interruptMode == THROW_IE ) throw new InterruptedException ( ) ; else if ( interruptMode == REINTERRUPT ) selfInterrupt ( ) ; }
51135	@ Override public void close ( ) throws IOException { try { in . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
51169	public boolean is_multiple_of_45_degree ( ) { return direction ( ) . is_multiple_of_45_degree ( ) ; }
51227	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
51247	public static IOFileFilter makeDirectoryOnly ( IOFileFilter filter ) { if ( filter == _NULL ) { return DirectoryFileFilter . DIRECTORY ; } return new AndFileFilter ( DirectoryFileFilter . DIRECTORY , filter ) ; }
51260	public boolean removeCSN ( DN baseDN , CSN expectedCSN ) { final ServerState ss = list . get ( baseDN ) ; return ss != _NULL && ss . removeCSN ( expectedCSN ) ; }
51299	public String toString ( ) { return ( as . toString ( ) ) ; }
51362	public boolean before ( OmniDate compareDate ) { return value . before ( compareDate . getDate ( ) ) ; }
51390	public static void inflateData ( byte [ ] deflated , byte [ ] inflated ) { Inflater inflater = new Inflater ( ) ; inflater . setInput ( deflated ) ; try { inflater . inflate ( inflated ) ; } catch ( DataFormatException dfe ) { throw new IOException ( IOException . CannotInflateTiffImage ) ; } }
51414	public boolean acceptFile ( String filePath , String fileName ) { if ( filepathMatcher == _NULL ) return _BOOL ; return fileName != _NULL && filepathMatcher . reset ( fileName ) . matches ( ) || filePath != _NULL && filepathMatcher . reset ( filePath ) . matches ( ) ; }
51494	public void visitTypeArgument ( ) { }
51500	SchemaFactory createInstance ( String className ) { return createInstance ( className , _BOOL ) ; }
51524	private Set < String > generateSecretHolder ( ) { final byte [ ] buff = new byte [ _NUM ] ; NUMGEN . nextBytes ( buff ) ; final String secret = Base64 . encode ( buff , _BOOL ) ; final Set < String > holder = new HashSet < String > ( ) ; holder . add ( secret ) ; return holder ; }
51529	public void mouse_dragged ( Point p_point ) { if ( interactive_state != _NULL && gdi_context != _NULL ) { current_mouse_position = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; StateInteractive return_state = interactive_state . mouse_dragged ( current_mouse_position ) ; if ( return_state != interactive_state ) { set_interactive_state ( return_state ) ; repaint ( ) ; } } }
51601	public static CRAMMD5SASLBindRequest newCRAMMD5SASLBindRequest ( final String authenticationID , final char [ ] password ) { return new CRAMMD5SASLBindRequestImpl ( authenticationID , getBytes ( password ) ) ; }
51715	@ Override public void removeByField2 ( boolean field2 ) { for ( Foo foo : findByField2 ( field2 , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ) { remove ( foo ) ; } }
51735	public static void deleteDirectory ( String path ) { deleteDirectoryContents ( path , _BOOL ) ; }
51753	@ Override public void close ( ) { closed = _BOOL ; ioException = _NULL ; }
51758	static Error uncaughtException ( Throwable ex ) { if ( ex instanceof Error ) throw ( Error ) ex ; if ( ex instanceof RuntimeException ) throw ( RuntimeException ) ex ; throw newInternalError ( _CHAR uncaught exception _CHAR , ex ) ; }
51818	@ Bean ( initMethod = _CHAR start _CHAR , destroyMethod = _CHAR stop _CHAR ) @ Profile ( Constants . SPRING_PROFILE_DEVELOPMENT ) public Server h2TCPServer ( ) throws SQLException { return Server . createTcpServer ( _CHAR - tcp _CHAR , _CHAR - tcpAllowOthers _CHAR ) ; }
51852	public void addSigner ( PrivateKey key , byte [ ] subjectKeyID , String encryptionOID , String digestOID , AttributeTable signedAttr , AttributeTable unsignedAttr ) throws IllegalArgumentException { doAddSigner ( key , subjectKeyID , encryptionOID , digestOID , new DefaultSignedAttributeTableGenerator ( signedAttr ) , new SimpleAttributeTableGenerator ( unsignedAttr ) , signedAttr ) ; }
51889	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeNClob ( NClob x ) throws SQLException { attribs . add ( x ) ; }
51963	public static List < Attribute > createAsList ( AttributeType attributeType , String name , String valueString ) { return newArrayList ( create ( attributeType , name , valueString ) ) ; }
52058	public static String rdnTypeFromDn ( String dn ) { return rdnTypeFromDn ( DN . valueOf ( dn ) ) ; }
52122	@ Override public Set < TopicPartition > assignment ( ) { return assignment ; }
52151	@ Override public boolean allowedInBranch ( ) { return _BOOL ; }
52271	public ConversationFactory withEscapeSequence ( String escapeSequence ) { return withConversationCanceller ( new ExactMatchConversationCanceller ( escapeSequence ) ) ; }
52276	public ProtobufSchema forType ( String messageTypeName ) { MessageElement msg = _messageType ( messageTypeName ) ; if ( msg == _NULL ) { throw new IllegalArgumentException ( _CHAR Protobuf schema definition ( name _CHAR_CHAR_CHAR ) has no message type with name _CHAR_CHAR_CHAR : known types : _CHAR + getMessageNames ( ) ) ; } return new ProtobufSchema ( this , TypeResolver . construct ( _nativeTypes ) . resolve ( msg ) ) ; }
52294	public void cacheCookieString ( String cookieString ) { this . cookieStr = cookieString ; }
52348	public PlaLineIntAlist alist_copy ( int extra_space ) { if ( extra_space < _NUM ) extra_space = _NUM ; PlaLineIntAlist risul = new PlaLineIntAlist ( plaline_len ( ) + extra_space ) ; risul . addAll ( lines_list ) ; return risul ; }
52384	public BuilderImage < T > useInternalStorage ( ) { this . config . setUseInternalStorage ( ) ; return this ; }
52402	public synchronized StringBuffer replace ( int start , int end , String string ) { replace0 ( start , end , string ) ; return this ; }
52406	public boolean hasAllOpAttributes ( ) { return hasAttribute ( ACI_OP_ATTR_PLUS_MATCHED ) ; }
52447	public static ComponentUI createUI ( JComponent c ) { return new BasicSpinnerUI ( ) ; }
52502	public static void unbind ( String name ) throws RemoteException , NotBoundException , java . net . MalformedURLException { ParsedNamingURL parsed = parseURL ( name ) ; Registry registry = getRegistry ( parsed ) ; registry . unbind ( parsed . name ) ; }
52519	public void removeMember ( PersistentObject member ) throws UMSException { removeMember ( member . getGuid ( ) ) ; }
52528	private < C1 extends ConfigurationClient , S1 extends Configuration > void registerReverseRelationDefinition ( RelationDefinition < C1 , S1 > rd ) { rd . getChildDefinition ( ) . reverseRelationDefinitions . add ( rd ) ; }
52553	public static void write ( File file , CharSequence data , Charset encoding ) throws IOException { write ( file , data , encoding , _BOOL ) ; }
52589	private void reportInterruptAfterWait ( int interruptMode ) throws InterruptedException { if ( interruptMode == THROW_IE ) throw new InterruptedException ( ) ; else if ( interruptMode == REINTERRUPT ) selfInterrupt ( ) ; }
52595	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
52669	public boolean canTraverseOutsideSubtree ( ) { if ( _NULL != m_left && m_left . canTraverseOutsideSubtree ( ) ) return _BOOL ; if ( _NULL != m_right && m_right . canTraverseOutsideSubtree ( ) ) return _BOOL ; return _BOOL ; }
52675	public boolean hasID3v2Tag ( ) { return ( id3v2tag != _NULL ) ; }
52719	@ Override public void sendResponse ( Operation operation ) { }
52790	public boolean hasID3v1Tag ( ) { return ( id3v1tag != _NULL ) ; }
52791	public int skipWhitespaces ( ) { int skipped = _NUM ; while ( pos < length && source . charAt ( pos ) == _CHAR ) { skipped ++ ; pos ++ ; } return skipped ; }
52803	public void componentAdded ( ContainerEvent e ) { ( ( ContainerListener ) a ) . componentAdded ( e ) ; ( ( ContainerListener ) b ) . componentAdded ( e ) ; }
52807	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
52812	public void add ( Permission permission ) { if ( ! ( permission instanceof AllPermission ) ) throw new IllegalArgumentException ( _CHAR invalid permission : _CHAR + permission ) ; if ( isReadOnly ( ) ) throw new SecurityException ( _CHAR attempt to add a Permission to a readonly PermissionCollection _CHAR ) ; all_allowed = _BOOL ; }
52848	public String toDbTable ( ) { return database . getName ( ) + _CHAR _ _CHAR + name ; }
52878	public static DeleteRequest copyOfDeleteRequest ( final DeleteRequest request ) { return new DeleteRequestImpl ( request ) ; }
52883	public static void saveAsASCII ( NSArray root , File out ) throws IOException { OutputStreamWriter w = new OutputStreamWriter ( new FileOutputStream ( out ) , _CHAR ASCII _CHAR ) ; w . write ( root . toASCIIPropertyList ( ) ) ; w . close ( ) ; }
52928	public boolean hasMoreRequirements ( boolean noFilter ) { authDebug . message ( _CHAR AuthContextLocal : : hasMoreRequirements ( ) _CHAR ) ; if ( ( amlc . getStatus ( ) == LoginStatus . AUTH_SUCCESS ) || ( amlc . getStatus ( ) == LoginStatus . AUTH_FAILED ) ) { return _BOOL ; } else { informationRequired = amlc . getRequiredInfo ( ) ; return ( getCallbacks ( informationRequired , noFilter ) != _NULL ) ; } }
52969	public boolean isPowered ( ) { return ( getData ( ) & _NUM ) == _NUM ; }
53171	public static Object convertNodeToJAXB ( Node node ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( node ) ; }
53205	public boolean isEmpty ( ) { return ( exchange_keys . length == _NUM ) ; }
53226	public void _write ( OutputStream output ) { ( ( org . omg . CORBA_2_3 . portable . OutputStream ) output ) . write_value ( value ) ; }
53250	public char first ( ) { pos = offset ; if ( count != _NUM ) { return array [ pos ] ; } return DONE ; }
53269	public boolean hasResourceNames ( ) { boolean hasResources = _BOOL ; Collection actionSchemas = getActionSchemas ( ) . values ( ) ; Iterator iter = actionSchemas . iterator ( ) ; while ( iter . hasNext ( ) ) { ActionSchema actionSchema = ( ActionSchema ) iter . next ( ) ; if ( actionSchema . requiresResourceName ( ) ) { hasResources = _BOOL ; break ; } } return hasResources ; }
53273	public static Bitmap createIconBitmap ( Bitmap icon , Context context ) { final int iconBitmapSize = getIconBitmapSize ( ) ; if ( iconBitmapSize == icon . getWidth ( ) && iconBitmapSize == icon . getHeight ( ) ) { return icon ; } return createIconBitmap ( new BitmapDrawable ( context . getResources ( ) , icon ) , context ) ; }
53277	public void initialize_manual_trace_half_widths ( ) { for ( int i = _NUM ; i < itera_settings . manual_trace_half_width_arr . length ; ++ i ) { itera_settings . manual_trace_half_width_arr [ i ] = r_board . brd_rules . get_default_net_class ( ) . get_trace_half_width ( i ) ; } }
53286	private void finalizeAuthProcess ( RadiusResponse response , ContextHolder holder ) throws RadiusProcessingException { LOG . message ( _CHAR Entering OpenAMAuthHandler . finalizeAuthProcess ( ) _CHAR ) ; final AuthContext . Status status = holder . getAuthContext ( ) . getStatus ( ) ; if ( status . equals ( AuthContext . Status . SUCCESS ) ) { allowAccessAndTerminateProcess ( response , holder ) ; return ; } rejectAccessAndTerminateProcess ( response , holder ) ; }
53287	@ Override public String toString ( ) { return in . toString ( ) ; }
53331	@ Override public boolean allowedInBranch ( ) { return _BOOL ; }
53357	public PlaDirection direction ( ) { return line_dir ; }
53380	public String toString ( ) { StringBuilder sb = new StringBuilder ( _NUM ) ; sb . append ( _CHAR \ nService Instance : _CHAR ) . append ( getName ( ) ) . append ( _CHAR \ n \ tGroup : _CHAR ) . append ( getGroup ( ) ) . append ( _CHAR \ n \ tURI : _CHAR ) . append ( getURI ( ) ) . append ( _CHAR \ n \ tAttributes : _CHAR ) . append ( getAttributes ( ) ) ; return ( sb . toString ( ) ) ; }
53401	public static void saveAsASCII ( NSArray root , File out ) throws IOException { OutputStreamWriter w = new OutputStreamWriter ( new FileOutputStream ( out ) , _CHAR ASCII _CHAR ) ; w . write ( root . toASCIIPropertyList ( ) ) ; w . close ( ) ; }
53450	public void save ( ) throws IOException , TagException { save ( this . file ) ; }
53464	public void addLayoutComponent ( String name , Component c ) { }
53530	public final double angle_approx ( ) { PlaDirection a_dir = new PlaDirection ( this ) ; return a_dir . angle_approx ( ) ; }
53534	public static void saveAsBinary ( NSObject root , File out ) throws IOException { File parent = out . getParentFile ( ) ; if ( ! parent . exists ( ) ) if ( ! parent . mkdirs ( ) ) throw new IOException ( _CHAR The output directory does not exist and could not be created . '' ) ; BinaryPropertyListWriter . write ( out , root ) ; }
53557	@ Override public void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException { if ( FSUtils . debug . messageEnabled ( ) ) { FSUtils . debug . message ( DEBUG_SUCCESS_MSG + ClientUtils . getClientIPAddress ( request ) ) ; } FSUtils . checkHTTPRequestLength ( request ) ; super . doPost ( request , response ) ; }
53558	public void delete ( RandomAccessFile raf , RandomAccessFile rafTemp ) throws IOException { Mp4Tag tag = new Mp4Tag ( ) ; try { write ( tag , raf , rafTemp ) ; } catch ( CannotWriteException cwe ) { throw new IOException ( cwe . getMessage ( ) ) ; } }
53573	public final void println ( final LocalizableMessage msg , final int indent ) { if ( ! isQuiet ( ) ) { out . println ( wrapText ( msg , MAX_LINE_WIDTH , indent ) ) ; } }
53632	public static Boolean booleanValueOf ( String value ) { return new Boolean ( _CHAR _BOOL _CHAR . equalsIgnoreCase ( value ) || _CHAR _NUM _CHAR . equals ( value ) ) ; }
53726	@ Override public void removeByUuid ( String uuid ) { for ( Foo foo : findByUuid ( uuid , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ) { remove ( foo ) ; } }
53738	protected static final String find ( CharChunk name ) { int pos = findClosest ( name , ccCache , ccCache . length ) ; if ( ( pos < _NUM ) || ( compare ( name , ccCache [ pos ] . name ) != _NUM ) ) { return _NULL ; } else { return ccCache [ pos ] . value ; } }
53799	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
53808	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . ignorableWhitespace ( ch , start , length ) ; } }
53871	protected FocusListener createFocusListener ( ) { return getHandler ( ) ; }
54031	public DTMAxisIterator cloneIterator ( ) { _isRestartable = _BOOL ; try { final AncestorIterator clone = ( AncestorIterator ) super . clone ( ) ; clone . _startNode = _startNode ; return clone ; } catch ( CloneNotSupportedException e ) { throw new DTMException ( XMLMessages . createXMLMessage ( XMLErrorResources . ER_ITERATOR_CLONE_NOT_SUPPORTED , _NULL ) ) ; } }
54094	public boolean isRepresentationClassRemote ( ) { return DataTransferer . isRemote ( representationClass ) ; }
54097	private void subscribeTopics ( String token , final String [ ] topics ) throws IOException { GcmPubSub pubSub = GcmPubSub . getInstance ( this ) ; for ( String topic : topics ) { pubSub . subscribe ( token , topic , _NULL ) ; } }
54112	protected void onBeforeResetProfile ( ) { }
54114	public static String parseAnySimpleType ( String lexicalXSDAnySimpleType ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseAnySimpleType ( lexicalXSDAnySimpleType ) ; }
54118	@ Override public boolean equals ( Object o ) { if ( ! ( o instanceof ExpandedRow ) ) { return _BOOL ; } ExpandedRow that = ( ExpandedRow ) o ; return this . pairs . equals ( that . getPairs ( ) ) && wasReversed == that . wasReversed ; }
54136	public boolean hasMcid ( int mcid ) { return hasMcid ( mcid , _BOOL ) ; }
54162	public void removeMember ( PersistentObject member ) throws UMSException { member . modify ( new Attr ( MEMBER_ATTR_NAME , this . getDN ( ) ) , ModificationType . DELETE ) ; member . save ( ) ; }
54280	public boolean isAffiliationMember ( String providerID , String affID ) { try { return idffMetaManager . isAffiliateMember ( ROOT_REALM , providerID , affID ) ; } catch ( IDFFMetaException imex ) { ProviderUtil . debug . error ( _CHAR IDFFProviderManager . isAffiliationMember : _CHAR , imex ) ; } return _BOOL ; }
54286	public boolean isDetectionEnabled ( ) { return detectionEnabled ; }
54362	public Query whereEqualTo ( Contact . Field field , Object value ) { addNewConstraint ( field , Where . equalTo ( field . getColumn ( ) , value ) ) ; return this ; }
54365	public < M extends Configuration > void registerAddListener ( SetRelationDefinition < ? , M > d , ConfigurationAddListener < M > listener ) throws ConfigException { registerAddListener ( d , new ServerManagedObjectAddListenerAdaptor < M > ( listener ) ) ; }
54490	public HostnameVerifier hostnameVerifier ( ) { return hostnameVerifier ; }
54498	public boolean isPowered ( ) { return ( getData ( ) & _NUM ) == _NUM ; }
54499	private String newRequestID ( ) { String requestIDString = _NULL ; synchronized ( REQUEST_ID_LOCK ) { requestIDString = String . valueOf ( requestID ++ ) ; } return requestIDString ; }
54586	private void handleSaveException ( Subject subject , String realm , String uuid , Exception e ) throws EntitlementException { OpenSSOLogger . log ( ERROR , Level . INFO , FAILED_SAVE_RESOURCE_TYPE , new String [ ] { realm , uuid , e . getMessage ( ) } , subject ) ; throw new EntitlementException ( MODIFY_RESOURCE_TYPE_FAIL , e , uuid ) ; }
54693	public boolean hasAllUserAttributes ( ) { return hasAttribute ( ACI_USER_ATTR_STAR_MATCHED ) ; }
54743	public static void marshal ( Object jaxbObject , OutputStream xml ) { _marshal ( jaxbObject , xml ) ; }
54760	public < M extends Configuration > void registerAddListener ( InstantiableRelationDefinition < ? , M > d , ConfigurationAddListener < M > listener ) throws ConfigException { registerAddListener ( d , new ServerManagedObjectAddListenerAdaptor < M > ( listener ) ) ; }
54777	public String versionRevision ( ) { return properties . getProperty ( _CHAR scm . revision _CHAR ) ; }
54813	public void validate ( ) throws AMConsoleException { if ( isSelected ( ) ) { if ( isPersonalQuestion ( ) ) { if ( ( question . length ( ) == _NUM ) || ( answer . length ( ) == _NUM ) ) { throw new AMConsoleException ( _CHAR user . password . reset . missing . personal . question . answer . message _CHAR ) ; } } else { if ( answer . length ( ) == _NUM ) { throw new AMConsoleException ( _CHAR user . password . reset . missing . answer . message _CHAR ) ; } } } }
54882	public static BindResult copyOfBindResult ( final BindResult result ) { return new BindResultImpl ( result ) ; }
54887	public StringBuffer append ( double d ) { RealToString . getInstance ( ) . appendDouble ( this , d ) ; return this ; }
54917	@ Override public boolean markSupported ( ) { return in . markSupported ( ) ; }
54922	public boolean isUrlSafe ( ) { return this . encodeTable == URL_SAFE_ENCODE_TABLE ; }
54981	public void applyModification ( Modification mod , boolean relaxConstraints ) throws DirectoryException { AttributeType t = mod . getAttribute ( ) . getAttributeDescription ( ) . getAttributeType ( ) ; if ( t . isObjectClass ( ) ) { applyModificationToObjectclass ( mod , relaxConstraints ) ; } else { applyModificationToNonObjectclass ( mod , relaxConstraints ) ; } }
54982	private static boolean isSingleList ( Map < String , ? > args ) { if ( args . size ( ) != _NUM ) return _BOOL ; Object v = args . values ( ) . iterator ( ) . next ( ) ; return v instanceof List ; }
55020	public static Object convertStringToJAXB ( String str ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( new StringReader ( str ) ) ) ) ; }
55033	public void addAttribute ( String name ) { synchronized ( names ) { names . add ( name ) ; } }
55036	protected void deflate ( ) throws IOException { int byteCount ; while ( ( byteCount = def . deflate ( buf ) ) != _NUM ) { out . write ( buf , _NUM , byteCount ) ; } }
55057	public void clear ( ) { Entry [ ] tab = table ; for ( int index = tab . length ; -- index >= _NUM ; ) { tab [ index ] = _NULL ; } count = _NUM ; }
55089	public void valueChanged ( TreeSelectionEvent e ) { TreeSelectionEvent newE ; newE = ( TreeSelectionEvent ) e . cloneWithSource ( JTree . this ) ; fireValueChanged ( newE ) ; }
55095	public boolean isStandard ( ) { return ( glyphType & _NUM ) == STANDARD ; }
55137	public void storeLocal ( final int local ) { storeInsn ( getLocalType ( local ) , local ) ; }
55189	public void addRule ( Guid guid , String filter ) throws UMSException { DataLayer . getInstance ( ) . addAttributeValue ( _principal , _mappingGuid , guid . getDn ( ) , filter ) ; }
55205	@ Override public boolean allowedInBranch ( ) { return _BOOL ; }
55228	@ RequestMapping ( value = _CHAR / authenticate _CHAR , method = RequestMethod . GET , produces = MediaType . APPLICATION_JSON_VALUE ) @ Timed public String isAuthenticated ( HttpServletRequest request ) { log . debug ( _CHAR REST request to check if the current user is authenticated '' ) ; return request . getRemoteUser ( ) ; }
55240	public Socket createSocket ( Socket s , String hostName , int portNumber , boolean autoClose ) throws SSLConnectionException , IOException { if ( sslSocketFactory == _NULL ) { throw new SSLConnectionException ( ERR_TOOLS_SSL_CONNECTION_NOT_INITIALIZED . get ( ) ) ; } return socketWithEnabledProtocols ( sslSocketFactory . createSocket ( s , hostName , portNumber , autoClose ) ) ; }
55262	public Future < List < Job >> jobRange ( long from , long to , String order ) { Future < List < Job >> future = Future . future ( ) ; jobService . jobRange ( from , to , order , future . completer ( ) ) ; return future ; }
55271	public void notifyListeners ( ProgressStep current , Integer ratio , LocalizableMessage currentPhaseSummary , LocalizableMessage newLogDetail ) { ProgressUpdateEvent ev = new ProgressUpdateEvent ( current , ratio , currentPhaseSummary , newLogDetail ) ; for ( ProgressUpdateListener l : listeners ) { l . progressUpdate ( ev ) ; } }
55298	public JsonValue notifyDelete ( Context context , String resourceContainer , String resourceId , JsonValue oldValue ) throws SynchronizationException { if ( isSourceObject ( resourceContainer , resourceId ) ) { return doSourceSync ( context , resourceId , _NULL , _BOOL , oldValue ) ; } return json ( _NULL ) ; }
55306	@ Override public AvroGenerator useDefaultPrettyPrinter ( ) { return this ; }
55352	public boolean isPointerType ( STypeDef type ) { return type instanceof PointerType || _CHAR lt . lang . Pointer _CHAR . equals ( type . fullName ( ) ) ; }
55446	@ Override public boolean allowedInBranch ( ) { return _BOOL ; }
55478	public BuilderImages < T > useInternalStorage ( ) { this . config . setUseInternalStorage ( ) ; return this ; }
55482	public boolean contains ( BrdViaInfo p_via_info ) { for ( BrdViaInfo curr_info : this . vinfo_list ) { if ( p_via_info == curr_info ) { return _BOOL ; } } return _BOOL ; }
55517	public boolean isReplicaOffline ( DN domainDN , int serverId ) { return replicasOffline . getCSN ( domainDN , serverId ) != _NULL ; }
55622	public static void removeByUuid ( java . lang . String uuid ) { getPersistence ( ) . removeByUuid ( uuid ) ; }
55640	public void close ( ) throws IOException { if ( ! this . closed ) { this . closed = _BOOL ; finish ( ) ; this . out . flush ( ) ; } }
55676	public void removeMember ( Guid guid ) throws UMSException { String dn = guid . getDn ( ) ; super . modify ( new Attr ( MEMBER_ATTR_NAME , dn ) , ModificationType . DELETE ) ; save ( ) ; }
55677	protected boolean onBeforeSaveProfile ( Map attrValues ) { return _BOOL ; }
55735	private void corruptTestLogFile ( ByteStringBuilder corruptedRecordData ) throws Exception { try ( RandomAccessFile output = new RandomAccessFile ( TEST_LOG_FILE , _CHAR rwd _CHAR ) ) { output . seek ( output . length ( ) ) ; output . write ( corruptedRecordData . toByteArray ( ) ) ; } }
55845	public static void copy ( String dir , ServletContext servletCtx ) { for ( String schemaDir : TEMPLATES ) { copyRecursively ( servletCtx , PATH_PREFIX + schemaDir , dir ) ; } }
55893	@ Override public void customize ( ConfigurableEmbeddedServletContainer container ) { MimeMappings mappings = new MimeMappings ( MimeMappings . DEFAULT ) ; mappings . add ( _CHAR html _CHAR , _CHAR text / html ; charset = utf - _NUM _CHAR ) ; mappings . add ( _CHAR json _CHAR , _CHAR text / html ; charset = utf - _NUM _CHAR ) ; container . setMimeMappings ( mappings ) ; }
55960	public static void main ( String [ ] args ) throws Exception { Server server = buildNormalServer ( args [ _NUM ] , args [ _NUM ] , Integer . parseInt ( args [ _NUM ] ) ) ; server . start ( ) ; }
55976	public static boolean atleast ( String name , int majorVersion , int minorVersion ) { return osName . equalsIgnoreCase ( name ) && ( osMajorVersion >= majorVersion ) && ( osMinorVersion >= minorVersion ) ; }
55995	public void writeFile ( AudioFile f ) throws CannotWriteException { String ext = Utils . getExtension ( f . getFile ( ) ) ; AudioFileWriter afw = writers . get ( ext ) ; if ( afw == _NULL ) { throw new CannotWriteException ( ErrorMessage . NO_WRITER_FOR_THIS_FORMAT . getMsg ( ext ) ) ; } afw . write ( f ) ; }
56098	public boolean isReadable ( ) { return isReadable ; }
56114	public boolean isPasswordResetEnabled ( ) { return pwResetEnable ; }
56184	public boolean isADDOperation ( ) { return attrTypeIsNull && ! isModDN ; }
56193	public static void removeByUuid ( java . lang . String uuid ) { getPersistence ( ) . removeByUuid ( uuid ) ; }
56219	public boolean contains ( RxAction action ) { Pair < Integer , Subscription > old = mMap . get ( action . getType ( ) ) ; return ( old != _NULL && old . first == action . hashCode ( ) && ! old . second . isUnsubscribed ( ) ) ; }
56236	public void processingInstruction ( String target , String data ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . processingInstruction ( target , data ) ; } }
56262	@ Override public void removeByUuid ( String uuid ) { for ( Foo foo : findByUuid ( uuid , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ) { remove ( foo ) ; } }
56277	public static < T > Collection < T > synchronizedCollection ( Collection < T > collection ) { if ( collection == _NULL ) { throw new NullPointerException ( _CHAR collection == _NULL _CHAR ) ; } return new SynchronizedCollection < T > ( collection ) ; }
56312	public boolean canTraverseOutsideSubtree ( ) { if ( super . canTraverseOutsideSubtree ( ) ) return _BOOL ; else { int n = m_args . length ; for ( int i = _NUM ; i < n ; i ++ ) { if ( m_args [ i ] . canTraverseOutsideSubtree ( ) ) return _BOOL ; } return _BOOL ; } }
