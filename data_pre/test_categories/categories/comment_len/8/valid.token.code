3	public static ViewAction performDescendantAction ( Matcher < View > viewMatcher , ViewAction viewAction ) { return ViewActions . actionWithAssertions ( new DescendantViewAction ( viewMatcher , viewAction ) ) ; }
10	public static int hash ( float value ) { assert ! Float . isNaN ( value ) : _CHAR Values of NaN are not supported . '' ; return Float . floatToIntBits ( value * _NUM . _NUM ) ; }
22	private boolean playMode ( ) { switch ( this . mode ) { case NONE : this . setMode ( MODE . PLAY ) ; break ; case PLAY : break ; case RECORD : Log . d ( LOG_TAG , _CHAR AudioPlayer Error : Ca n _CHAR_CHAR ) ; sendErrorStatus ( MEDIA_ERR_ABORTED ) ; return false ; } return true ; }
33	@ NotNull public static BufferedImage trim ( @ NotNull BufferedImage image ) { BufferedImage cropped = ImageUtils . cropBlank ( image , _NULL , TYPE_INT_ARGB ) ; return cropped != _NULL ? cropped : image ; }
54	private void fillDeclaredPrefixes ( StartElement event ) { fillDeclaredPrefixes ( event . getNamespaces ( ) ) ; }
56	@ Override public Schema schema ( ) { return tp . schema ( ) ; }
71	public boolean isFinal ( ) { return queue . isEmpty ( ) ; }
101	public static boolean startsWith ( String columnPath , String tableName ) { if ( tableName == _NULL || columnPath == _NULL ) return _BOOL ; return columnPath . startsWith ( tableName + _CHAR . _CHAR ) ; }
102	public static void checkRowIndex ( final AnyMatrix m , final int row ) throws MathIllegalArgumentException { if ( row < _NUM || row >= m . getRowDimension ( ) ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . ROW_INDEX , row , _NUM , m . getRowDimension ( ) - _NUM ) ; } }
103	private float calcAngle ( float value , float yValueSum ) { return value / yValueSum * mMaxAngle ; }
114	public void hideContent ( ) { for ( int i = _NUM ; i < getChildCount ( ) ; i ++ ) { getChildAt ( i ) . setVisibility ( GONE ) ; } }
119	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
136	@ Override public void mouseClicked ( MouseEvent e ) { }
152	public void confirm ( ) { okButton . click ( ) ; verifyIsHidden ( ) ; }
164	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
168	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
199	public static boolean isSame ( Displacement defaultDisplacement , Displacement displacement ) { if ( ( defaultDisplacement != _NULL ) && ( displacement != _NULL ) ) { return areDoubleValuesSame ( defaultDisplacement . getDisplacementX ( ) , displacement . getDisplacementX ( ) ) && areDoubleValuesSame ( defaultDisplacement . getDisplacementY ( ) , displacement . getDisplacementY ( ) ) ; } return _BOOL ; }
226	public Fraction abs ( ) { Fraction ret ; if ( numerator >= _NUM ) { ret = this ; } else { ret = negate ( ) ; } return ret ; }
250	public boolean remove ( MidiEvent event ) { synchronized ( eventsList ) { if ( set . remove ( event ) ) { int i = eventsList . indexOf ( event ) ; if ( i >= _NUM ) { eventsList . remove ( i ) ; return _BOOL ; } } } return _BOOL ; }
264	public MarketReportCommentQuery reportComment ( UserActor actor , int ownerId , int commentId , ReportReason reason ) { return new MarketReportCommentQuery ( getClient ( ) , actor , ownerId , commentId , reason ) ; }
273	public void useStyle ( @ NotNull NlDrawingStyle style ) { myStyle = style ; }
298	public void markAssetReferenced ( UUID uuid ) { if ( ! assetMap . containsKey ( uuid ) ) { return ; } referencedAssets . add ( assetMap . get ( uuid ) ) ; }
299	public String process ( Item item ) throws ProcessException { String name = item . getFeatures ( ) . getString ( _CHAR name _CHAR ) ; return Integer . toString ( rail ( name . length ( ) ) ) ; }
303	public String tableName ( ) { return tblName ; }
316	public final ProgressEvent updateSubtask ( String sSubtaskName ) { SubtaskName = sSubtaskName ; return this ; }
329	public boolean hasInit ( ) { return getInitOpt ( ) . getNumChild ( ) != _NUM ; }
334	public void handleSwipeMove ( float ty ) { if ( ty > _NUM && getPanelState ( ) == PanelState . MAXIMIZED ) { mContent . resetContentViewScroll ( ) ; } setClampedPanelHeight ( mInitialPanelHeight - ty ) ; requestUpdate ( ) ; }
339	public final boolean isValid ( JobParameters job ) { return validate ( job ) == _NULL ; }
341	public static Zdiagmat o ( Zdiagmat D ) { Zdiagmat Dh = new Zdiagmat ( D ) ; for ( int i = _NUM ; i < Dh . n ; i ++ ) { Dh . im [ i ] =- Dh . im [ i ] ; } return Dh ; }
355	public static ServiceClient createServiceClient ( SSLContext sslContext ) { return createServiceClient ( sslContext , _NUM ) ; }
363	public static void quit ( Socket sock ) throws IOException { PkgHeader header ; byte [ ] bs = new byte [ FDHT_PROTO_PKG_HEADER_SIZE ] ; header = new PkgHeader ( ) ; header . cmd = FDHT_PROTO_CMD_QUIT ; packHeader ( header , bs ) ; sock . getOutputStream ( ) . write ( bs ) ; sock . close ( ) ; }
386	public void println ( ) { m_out . print ( _CHAR \ n _CHAR ) ; }
394	public ArrayList < Entry > process ( File inputFileOrDir , File outputRoot ) throws Exception { if ( ! inputFileOrDir . exists ( ) ) throw new IllegalArgumentException ( _CHAR Input file does not exist : _CHAR + inputFileOrDir . getAbsolutePath ( ) ) ; if ( inputFileOrDir . isFile ( ) ) return process ( new File [ ] { inputFileOrDir } , outputRoot ) ; else return process ( inputFileOrDir . listFiles ( ) , outputRoot ) ; }
407	protected JSONObject readInputStream ( InputStream is ) throws IOException { String jsonString = readStreamToString ( is ) ; JSONObject jsonObject ; try { return new JSONObject ( jsonString ) ; } catch ( JSONException error ) { throw new IOException ( error . toString ( ) ) ; } }
409	public Dfp newInstance ( final long x ) { return new Dfp ( getField ( ) , x ) ; }
449	private void mapDatabase ( FileInputStream is ) throws IOException { FileChannel fc = is . getChannel ( ) ; mbb = fc . map ( FileChannel . MapMode . READ_ONLY , _NUM , ( int ) fc . size ( ) ) ; mbb . load ( ) ; loadDatabaseHeader ( mbb ) ; }
458	public void begin ( int size ) { }
463	private static boolean isSeparator ( char ch ) { return ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR ; }
472	public HumanTime ms ( ) { return ms ( _NUM ) ; }
483	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
484	@ Override public boolean needFood ( ) { return this . getFoodLevel ( ) < _NUM . _NUM ; }
507	public static IOFileFilter falseFileFilter ( ) { return FalseFileFilter . FALSE ; }
518	public int max ( ) { if ( size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR can not find maximum of an empty list _CHAR ) ; } int max = Integer . MIN_VALUE ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( _data [ i ] > max ) { max = _data [ i ] ; } } return max ; }
519	public void show ( ) { show ( _BOOL , _NULL ) ; }
521	public static SM_SYSTEM_MESSAGE STR_MSG_CAN_ENTER_INSTANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
529	public MessagesGetChatUsersQueryWithFields nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
533	public void addScreenLocation ( String name ) { if ( name != _NULL ) { this . screenLocationSet . add ( name ) ; } }
554	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Utf8_info ci = ( CONSTANT_Utf8_info ) ( constant_pool [ name_index ] ) ; return ci . convert ( ) ; }
555	public static void appendValue ( final StringBuffer logMessage , final String value ) { logMessage . append ( value ) ; }
578	@ Override public double [ ] makeDensityTestValues ( ) { double d = _NUM / _NUM . _NUM ; return new double [ ] { _NUM , d , d , d , d , d , d , d , d , d , d , _NUM } ; }
580	private static void drawCustomSizeRect ( int xPos , int yPos , int texX , int texY , int width , int height ) { getGuiHandler ( ) . drawModalRectWithCustomSizedTexture ( xPos , yPos , texX , texY , width , height , width , height ) ; }
604	public void startRecordingAudio ( String id , String file ) { AudioPlayer audio = getOrCreatePlayer ( id , file ) ; audio . startRecording ( file ) ; }
609	public static ContextSet singleton ( String key , String value ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value _CHAR ) ; } MutableContextSet set = new MutableContextSet ( ) ; set . add ( key , value ) ; return set . immutableCopy ( ) ; }
615	public static void o ( Z a , int w , int d ) { System . out . print ( _CHAR \ n _CHAR ) ; System . out . print ( ZtoEstring ( a , w , d ) ) ; System . out . print ( _CHAR \ n _CHAR ) ; }
635	public boolean isReWrittenEntry ( String uid ) { return _reWrittenEntries != _NULL && _reWrittenEntries . containsKey ( uid ) ; }
638	public String toString ( cp_info constant_pool [ ] ) { return _CHAR ( _CHAR + high + _CHAR , _CHAR + low + _CHAR ) = _CHAR + Long . toString ( convert ( ) ) ; }
652	public boolean isAllowed ( List < VersionData > versionList , VendorOptionVersion vendorOptionVersion ) { if ( ( versionList != _NULL ) && ( vendorOptionVersion != _NULL ) ) { for ( VersionData versionData : versionList ) { if ( vendorOptionVersion . isAllowed ( versionData ) ) { return _BOOL ; } } } return _BOOL ; }
686	public void pageLoadingFinished ( ) { mLoadTracker . pageLoadingFinished ( ) ; }
688	public static double readDouble ( byte [ ] bytes , int start ) { return WritableComparator . readDouble ( bytes , start ) ; }
692	public static boolean isConnected ( ) { NetworkInfo info = getNetworkInfos ( ) ; if ( info == _NULL || ! info . isConnected ( ) ) { return _BOOL ; } return _BOOL ; }
715	public boolean exited ( ) { return waitResult < SIGNAL_1 || waitResult > SIGNAL_63 ; }
759	@ Override public Item remove ( Item item ) { return itemStorage . removeItem ( item . getObjectId ( ) ) ; }
775	@ Override public void start ( BundleContext bc ) throws Exception { context = bc ; logger . debug ( _CHAR Z - Wave binding started . Version { } _CHAR , ZWaveActivator . getVersion ( ) ) ; }
776	public double lengthSquared ( ) { return NumberConversions . square ( x ) + NumberConversions . square ( y ) + NumberConversions . square ( z ) ; }
786	public void addEntityName ( String name ) { if ( name != _NULL ) { this . entityNameSet . add ( name ) ; } }
819	public boolean flip ( ) { return set ( getMax ( ) , getMin ( ) ) ; }
828	public String readString ( ) throws IOException { return dis . readUTF ( ) ; }
846	private boolean isValueSupported ( Object value ) { for ( int i = _NUM ; i < values . length ; i ++ ) { if ( value . equals ( values [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
870	private static boolean checkLoaded ( ) { if ( manifest == _NULL ) { return parse ( ) ; } return _BOOL ; }
881	boolean verifyTrust ( SecurityContext securityContext ) { return ( securityContext instanceof TrustedSecurityContext ) ; }
904	public static boolean isEmpty ( CharSequence data ) { return data == _NULL || data . length ( ) == _NUM ; }
933	public static byte [ ] writeShort ( short s ) { return ByteBuffer . allocate ( _NUM ) . putShort ( s ) . array ( ) ; }
948	public static String dateToString ( Date date , SimpleDateFormat dateFormat ) { return dateFormat . format ( date ) ; }
951	public void toggle ( boolean animate ) { toggle ( animate , fadeIn , fadeOut ) ; }
952	protected DatabaseGetRegionsQuery countryId ( int value ) { return unsafeParam ( _CHAR country_id _CHAR , value ) ; }
972	public static double fro ( Zmat A ) { A . getProperties ( ) ; return Norm . fro ( A , A . bx , A . rx , A . bx , A . cx ) ; }
983	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
987	public synchronized boolean isStopped ( ) { return this . stopped ; }
1020	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
1023	public int size ( ) { return _locks . length ; }
1051	private void handleEvent ( ) { Object value = txtName . getText ( ) ; bodyFixture . setUserData ( value ) ; }
1069	public void stopLoadMore ( ) { if ( mPullLoading == _BOOL ) { mPullLoading = _BOOL ; mFooterView . setState ( XListViewFooter . STATE_NORMAL ) ; } }
1073	public static final void shuffle ( Object [ ] a , Random r ) { shuffle ( a , _NUM , a . length , r ) ; }
1099	public void disableWhenHorizontalMove ( boolean disable ) { mDisableWhenHorizontalMove = disable ; }
1104	@ Override public final void processValue ( final SourceDataTagValue sourceDataTagValue ) throws JMSException { if ( LOGGER . isTraceEnabled ( ) ) { LOGGER . trace ( _CHAR pushing SourceDataTagValue into proxy buffer _CHAR ) ; } highPriorityBuffer . push ( sourceDataTagValue ) ; }
1114	public void resetLowThreshold ( ) { this . currentLowThreshold = lowThreshold ; }
1117	public void resetCount ( ) { progress = _NUM ; setText ( _CHAR _NUM % _CHAR ) ; invalidate ( ) ; }
1138	private static boolean hasTies ( double [ ] x , double [ ] y ) throws Exception { Method method = KolmogorovSmirnovTest . class . getDeclaredMethod ( _CHAR hasTies _CHAR , double [ ] . class , double [ ] . class ) ; method . setAccessible ( _BOOL ) ; return ( boolean ) method . invoke ( KolmogorovSmirnovTest . class , x , y ) ; }
1141	public FieldVector3D < T > subtract ( final T factor , final Vector3D v ) { return new FieldVector3D < T > ( x . subtract ( factor . multiply ( v . getX ( ) ) ) , y . subtract ( factor . multiply ( v . getY ( ) ) ) , z . subtract ( factor . multiply ( v . getZ ( ) ) ) ) ; }
1147	public void editRow ( int index ) { Row r = getRowValue ( index ) ; EditSourceDialog input = showEditDialog ( r . mySource ) ; if ( input . isOK ( ) ) { removeRow ( index ) ; createSource ( input . getUrl ( ) , input . getUiName ( ) ) ; } }
1163	protected OrdersChangeStateQuery action ( OrdersChangeStateAction value ) { return unsafeParam ( _CHAR action _CHAR , value ) ; }
1171	public boolean containsGroup ( Group group ) { return containsGroup ( group . getName ( ) ) ; }
1178	public MessagesGetChatQueryWithChatIds nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
1187	public void reset ( ) { lock . lock ( ) ; value = start ; lock . unlock ( ) ; }
1189	public Value mapKey ( Value key , Value val ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
1193	public static < R > Observable < R > when ( Plan < R > ... plans ) { if ( plans == _NULL ) { throw new NullPointerException ( _CHAR plans _CHAR ) ; } return when ( Arrays . asList ( plans ) ) ; }
1197	public void delete ( final ConfigKey configKey ) { final FindResult res = findNode ( configKey . keyName , _BOOL ) ; res . getNode ( ) . remove ( res . getName ( ) ) ; }
1220	public static final void updateAlliance ( Player player , PlayerAllianceEvent allianceEvent ) { PlayerAlliance alliance = player . getPlayerAlliance2 ( ) ; if ( alliance != _NULL ) { alliance . onEvent ( new PlayerAllianceUpdateEvent ( alliance , player , allianceEvent ) ) ; } }
1221	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
1228	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
1234	public boolean hasExperienceReward ( ) { return experienceReward ; }
1236	@ NotNull public ListPersonGroupsAction listGroups ( ) { return new ListPersonGroupsAction ( cognitiveContext ) ; }
1239	@ Override public final short readShort ( ) { final int byte1 = bs . readByte ( ) ; final int byte2 = bs . readByte ( ) ; return ( short ) ( ( byte2 << _NUM ) + byte1 ) ; }
1243	public int pop ( ) { return fData [ -- fDepth ] ; }
1248	public static boolean isGTKLookAndFeel ( ) { return UIUtils . isGTKLookAndFeel ( ) ; }
1251	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
1275	public String process ( Item item ) throws ProcessException { return getPhoneFeature ( item , _CHAR vfront _CHAR ) ; }
1276	public final boolean contains ( Node n ) { if ( bits == _NULL ) { for ( Node node : nodes ) { if ( node == n ) return _BOOL ; if ( node == _NULL ) { break ; } } return _BOOL ; } else { return bits . get ( n . getNumber ( ) ) ; } }
1277	public boolean isSwipeEnable ( ) { return swipeEnable ; }
1285	public static SM_SYSTEM_MESSAGE STR_FACTION_JOIN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1291	public static boolean isValidCode ( String code ) { return code != _NULL && CODE_PATTERN . matcher ( code ) . matches ( ) ; }
1294	protected SecureAddAppEventQuery userId ( int value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
1300	public boolean hasCondition ( ) { return getConditionOpt ( ) . getNumChild ( ) != _NUM ; }
1335	public static final void shuffle ( int [ ] a , Random r ) { shuffle ( a , _NUM , a . length , r ) ; }
1378	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
1386	public < A > void publishEvent ( final EventTranslatorOneArg < T , A > eventTranslator , final A arg ) { ringBuffer . publishEvent ( eventTranslator , arg ) ; }
1394	public void notifyListeners ( final Long tagId ) { if ( LOGGER . isTraceEnabled ( ) ) { LOGGER . trace ( _CHAR notifyListeners - notify the Tag with id _CHAR + tagId + _CHAR has changed . Number of listeners : _CHAR + this . listeners . size ( ) ) ; } for ( ConfigurationUpdateListener listener : this . listeners ) { listener . notifyOnConfigurationUpdate ( tagId ) ; } }
1395	static protected boolean isVowel ( String phone ) { return VOWELS . indexOf ( phone . substring ( _NUM , _NUM ) ) != - _NUM ; }
1402	@ Override public String toString ( ) { return Vector3DFormat . getInstance ( ) . format ( toVector3D ( ) ) ; }
1417	@ Override public void startExternalSubset ( XMLResourceIdentifier identifier , Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . startExternalSubset ( identifier , augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . startExternalSubset ( identifier , augs ) ; } }
1423	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
1436	public String toString ( ) { return _CHAR _NULL _CHAR ; }
1440	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
1459	public static boolean canRemoveItem ( Player player , Item item ) { ItemTemplate it = item . getItemTemplate ( ) ; if ( it . getCategory ( ) == ItemCategory . QUEST ) { return _BOOL ; } return _BOOL ; }
1480	public void resume ( ) { engine . resume ( ) ; }
1491	public static SM_SYSTEM_MESSAGE STR_REMAIN_PLAYTIME_CENTER_DISPLAY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1492	protected String encodedByte ( int b ) { String hex = Integer . toHexString ( b ) . toUpperCase ( ) ; if ( hex . length ( ) < _NUM ) { return _CHAR % _NUM _CHAR + hex ; } else { return _CHAR % _CHAR + hex ; } }
1493	public Value any ( Value target ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
1507	public void releaseAll ( ) { for ( ListenerPairing listener : myListeners ) { listener . dispose ( ) ; } myListeners . clear ( ) ; for ( CompositeListener listener : myCompositeListeners ) { listener . dispose ( ) ; } myCompositeListeners . clear ( ) ; }
1517	public void checkYellowStatus ( ) { client . admin ( ) . cluster ( ) . prepareHealth ( ) . setWaitForYellowStatus ( ) . execute ( ) . actionGet ( ) ; }
1522	public boolean containsGroup ( String group ) { return groups . contains ( group ) ; }
1531	public String toString ( ) { return new String ( getType ( ) + _CHAR with current value : _CHAR + getValue ( ) ) ; }
1540	@ Override public void mouseExited ( MouseEvent e ) { }
1548	public boolean isAskForPassword ( ) { return askForPassword ; }
1550	@ ObjectiveCName ( _CHAR subscribe : _CHAR ) public List subscribe ( ListChangedListener listChangedListener ) { return this . subscribe ( listChangedListener , _BOOL ) ; }
1555	@ Override public void write ( String str , int st , int end ) throws IOException { out . write ( str , st , end ) ; }
1564	@ Override public Object analyse ( double [ ] frame ) { if ( frame . length != getFrameLengthSamples ( ) ) throw new IllegalArgumentException ( _CHAR Expected frame of length _CHAR + getFrameLengthSamples ( ) + _CHAR , got _CHAR + frame . length ) ; return calcLPC ( frame , lpOrder , preemphasisCoefficient ) ; }
1565	public CaughtExceptionRef newCaughtExceptionRef ( ) { return new JCaughtExceptionRef ( ) ; }
1582	private void showIconSelectDialog ( ) { new IconSelectDialog . Builder ( getContext ( ) ) . setIcons ( sampleIcons ( ) ) . setTitle ( R . string . selectiondialogs_icon_dialog_title ) . setSortIconsByName ( _BOOL ) . setOnIconSelectedListener ( this ) . build ( ) . show ( getFragmentManager ( ) , TAG_SELECT_ICON_DIALOG ) ; }
1623	public TextPartsBuilder addTextPart ( @ StringRes int textRes , @ ColorRes int bgColorRes ) { return addTextPart ( mContext . getText ( textRes ) , getColor ( mContext , bgColorRes ) ) ; }
1624	public boolean isNodePresent ( String path ) { return conditions . isConditionMet ( nodeExist ( session , path ) ) ; }
1636	public static void requestWriteExternalStoreagePermission ( Activity activity ) { ActivityCompat . requestPermissions ( activity , new String [ ] { Manifest . permission . WRITE_EXTERNAL_STORAGE } , PERMISSIONS_WRITE_EXTERNAL_STORAGE ) ; }
1639	public static String toString ( URI uri , String encoding ) throws IOException { return toString ( uri , Charsets . toCharset ( encoding ) ) ; }
1640	public void startRecordingAudio ( String id , String file ) { AudioPlayer audio = getOrCreatePlayer ( id , file ) ; audio . startRecording ( file ) ; }
1659	public static boolean verifyPermissions ( int ... grantResults ) { if ( grantResults . length == _NUM ) { return _BOOL ; } for ( int result : grantResults ) { if ( result != PackageManager . PERMISSION_GRANTED ) { return _BOOL ; } } return _BOOL ; }
1727	public boolean IsEqual ( Z z1 , Z z2 ) { return z1 . re == z2 . re && z1 . im == z2 . im ; }
1728	@ NonNull @ Override public CoreContract . Presenter initPresenter ( @ NonNull final CoreContract . Service service ) { requireNonNull ( service ) ; CoreContract . Presenter presenter = new MessagePresenter ( this , service ) ; this . changePresenter ( presenter ) ; return presenter ; }
1782	public void cleanup ( ) { if ( ! initedNative ) return ; NativeInterface . arwStopRunning ( ) ; NativeInterface . arwShutdownAR ( ) ; if ( debugBitmap != _NULL ) debugBitmap . recycle ( ) ; debugBitmap = _NULL ; initedNative = _BOOL ; }
1797	private void fillDeclaredPrefixes ( StartElement event ) { fillDeclaredPrefixes ( event . getNamespaces ( ) ) ; }
1820	public boolean hasNextOperation ( ) { return nextOperation != _NULL ; }
1836	public void remove ( String key , String value ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value _CHAR ) ; } synchronized ( contexts ) { contexts . removeIf ( _NULL ) ; } }
1844	public static void printThread ( String tag , String msg ) { if ( IS_DEBUG_OF_THREAD ) { Log . w ( tag , _CHAR # # # _CHAR + msg + _CHAR - > _CHAR + _CHAR { name : _CHAR + Thread . currentThread ( ) . getName ( ) + _CHAR , _CHAR + _CHAR id : _CHAR + Thread . currentThread ( ) . getId ( ) + _CHAR } _CHAR ) ; } }
1863	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_CANT_RETURN_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1865	@ Nullable public Interaction createInteraction ( @ NotNull ScreenView screenView , @ NotNull NlComponent layout ) { return _NULL ; }
1866	public int size ( ) { return _count ; }
1877	protected boolean isStringType ( Type tp ) { if ( ! ( tp instanceof RefType ) ) return _BOOL ; RefType refType = ( RefType ) tp ; return refType . getClassName ( ) . equals ( _CHAR java . lang . String _CHAR ) ; }
1915	public boolean isDeny ( ) { return message != _NULL ; }
1918	public int addFile ( File file ) { return getFileId ( file ) ; }
1924	public static boolean isAquaLookAndFeel ( ) { return UIUtils . isAquaLookAndFeel ( ) ; }
1927	public int elementAt ( int index ) { return data [ index ] ; }
1931	public static void logThreadEnding ( ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( String . format ( ThreadingUtils . ENDING_THREAD , Thread . currentThread ( ) . getId ( ) , Thread . currentThread ( ) . getName ( ) ) ) ; } }
1934	protected void reportFatalError ( String msgId , Object [ ] args ) throws XNIException { fErrorReporter . reportError ( XMLMessageFormatter . XML_DOMAIN , msgId , args , XMLErrorReporter . SEVERITY_FATAL_ERROR ) ; }
1949	public void deleteDevice ( @ Nullable Device info ) { if ( info != _NULL ) { if ( ! initIfNecessary ( ) ) { return ; } ourDeviceManager . removeUserDevice ( info ) ; ourDeviceManager . saveUserDevices ( ) ; } }
1972	public void doRedo ( ) { if ( undo . canRedo ( ) ) { undo . redo ( ) ; parse ( ) ; } }
1976	public void restorePosition ( ) { RecordId rid1 = savedPosition . get ( _NUM ) ; RecordId rid2 = savedPosition . get ( _NUM ) ; s1 . moveToRecordId ( rid1 ) ; if ( rid2 != _NULL ) s2 . moveToRecordId ( rid2 ) ; }
2032	public static void record ( LogInfo logPhase ) { try { RLOG . get ( ) . info . add ( logPhase ) ; } catch ( NullPointerException ignored ) { LOG . warn ( _CHAR Attempted to append log info while request log object was uninitialized : { } _CHAR , logPhase . getClass ( ) . getSimpleName ( ) ) ; } }
2037	private void prepareDataSet ( ) { dataSet1 = Arrays . asList ( new String [ ] { _CHAR a _CHAR , _CHAR b _CHAR } ) ; dataSet2 = Arrays . asList ( new String [ ] { _CHAR c _CHAR , _CHAR d _CHAR } ) ; dataSet3 = Arrays . asList ( new String [ ] { _CHAR e _CHAR , _CHAR f _CHAR } ) ; }
2060	public JSONObject put ( String key , int value ) throws JSONException { this . put ( key , new Integer ( value ) ) ; return this ; }
2064	public static void clearInitialContext ( String jndiServerName ) { contexts . remove ( jndiServerName ) ; }
2084	public void removeLimitLine ( LimitLine l ) { mLimitLines . remove ( l ) ; }
2095	@ Override public boolean isXIncludeAware ( ) { try { return domParser . getFeature ( XINCLUDE_FEATURE ) ; } catch ( SAXException exc ) { return _BOOL ; } }
2097	private void drawShadows ( Canvas canvas ) { int height = ( int ) ( _NUM * getItemHeight ( ) ) ; topShadow . setBounds ( _NUM , _NUM , getWidth ( ) , height ) ; topShadow . draw ( canvas ) ; bottomShadow . setBounds ( _NUM , getHeight ( ) - height , getWidth ( ) , getHeight ( ) ) ; bottomShadow . draw ( canvas ) ; }
2153	public BlockId currentBlk ( ) { return blk ; }
2164	public void decreaseDpi ( ) { if ( this . currentDpiPos > _NUM ) { -- this . currentDpiPos ; } }
2168	public MarketRemoveFromAlbumQuery removeFromAlbum ( UserActor actor , int ownerId , int itemId , List < Integer > albumIds ) { return new MarketRemoveFromAlbumQuery ( getClient ( ) , actor , ownerId , itemId , albumIds ) ; }
2196	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
2199	@ Override public String toString ( ) { return text . toString ( ) ; }
2219	@ Override public void notifyOnOperationComplete ( ) { scheduleBackgroundRead ( ) ; }
2223	public Expression contains ( Value fieldPath , Value value ) { return new ContainsExpression ( fieldPath , value ) ; }
2229	public static byte [ ] writeLong ( long l ) { return ByteBuffer . allocate ( _NUM ) . putLong ( l ) . array ( ) ; }
2235	public boolean contains ( ClearModifiers modifiers ) { return super . contains ( modifiers ) ; }
2255	public boolean isIgnoreInactive ( ) { return this . ignoreInactive ; }
2259	public void printParameters ( ) { for ( Entry < String , String [ ] > entry : getParameterMap ( ) . entrySet ( ) ) { System . out . println ( entry . getKey ( ) + _CHAR _CHAR + Arrays . toString ( entry . getValue ( ) ) ) ; } }
2281	public boolean selectOnMouseDown ( MouseEvent mouseEvent , ChartSelection chartSelection ) { return selectOnRubberBand ( new Rectangle ( mouseEvent . getX ( ) - _NUM , mouseEvent . getY ( ) - _NUM , _NUM , _NUM ) , mouseEvent , chartSelection ) ; }
2292	@ Override public Fraction negate ( ) { if ( numerator == Integer . MIN_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_FRACTION , numerator , denominator ) ; } return new Fraction ( - numerator , denominator ) ; }
2305	protected void initComparator ( ) { if ( Comparator == _NULL ) Comparator = new NGramCachedGraphComparator ( ) ; }
2316	public boolean isDeletedByOwnTxn ( ) { return e . isDeletedByOwnTxn ( ) ; }
2328	public Boolean isValue ( ) { return value ; }
2329	public static StateListDrawable toStateListDrawable ( int normalColor , int pressedColor ) { return toStateListDrawable ( normalColor , pressedColor , pressedColor , normalColor ) ; }
2338	@ Override public void onCanceled ( T data ) { super . onCanceled ( data ) ; onReleaseResources ( data ) ; }
2346	public static void registerFuel ( ItemStack stack , boolean checkNBT , int duration ) { Predicate < ItemStack > matcher = ItemStackDictionary . matcherOf ( stack , checkNBT ) ; OpenModLoader . getEventBus ( ) . register ( FuelEvent . class , _NULL ) ; }
2353	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
2358	public boolean isCaseSensitive ( ) { return sensitive ; }
2362	@ Override public synchronized boolean isRunning ( ) { return running ; }
2364	public double expectedWeightedValue ( ) { return this . weightedSum ; }
2366	public DatabaseGetCountriesQuery code ( String value ) { return unsafeParam ( _CHAR code _CHAR , value ) ; }
2369	public static SM_SYSTEM_MESSAGE STR_MSG_MENTOR_END_PARTYMSG ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2391	@ NotNull public static ResizePolicy none ( ) { return ourNone ; }
2435	@ Override public boolean accept ( File dir , String name ) { for ( String name2 : names ) { if ( caseSensitivity . checkEquals ( name , name2 ) ) { return _BOOL ; } } return _BOOL ; }
2459	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
2470	public static void flagDocumentAsCorrected ( Element element ) { Document doc = element . getOwnerDocument ( ) ; if ( doc != _NULL ) { doc . setUserData ( _CHAR autoCorrected _CHAR , _CHAR _BOOL _CHAR , _NULL ) ; } }
2500	protected boolean runTestsOnEdt ( ) { return _BOOL ; }
2504	public Set < Dimension > findAll ( ) { return Collections . unmodifiableSet ( new HashSet < > ( apiNameToDimension . values ( ) ) ) ; }
2518	private String printFFormat ( double x ) { return fFormatString ( x ) ; }
2520	public static void o ( double a ) { o ( a , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
2531	public static SM_SYSTEM_MESSAGE STR_MSG_WRONG_TARGET_RACE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2561	private MouseGesture processCurrentData ( ) throws IOException { int size = coordinates . size ( ) ; return mouseGestureRecognizer . classifyGesture ( coordinates , size ) ; }
2570	public boolean isLocaleSpecificLayout ( ) { return myEditedConfig . getLocaleQualifier ( ) != _NULL ; }
2578	private boolean isNumber ( String string ) { String s = string . trim ( ) ; if ( s . length ( ) < _NUM ) return _BOOL ; double value = _NUM ; try { value = Double . parseDouble ( s ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
2582	@ Override public String toString ( ) { return Vector3DFormat . getInstance ( ) . format ( this ) ; }
2586	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
2599	public static String toString ( URI uri , Charset encoding ) throws IOException { return toString ( uri . toURL ( ) , Charsets . toCharset ( encoding ) ) ; }
2615	public boolean isAllViewersUptodate ( ) { for ( IDirectableViewer viewer : viewers ) { if ( ! viewer . isUptoDate ( ) ) { return _BOOL ; } } return _BOOL ; }
2617	public boolean contains ( T obj ) { lock . lock ( ) ; try { if ( _objectsMap != _NULL ) { return _objectsMap . containsKey ( obj ) ; } return contains_impl ( obj ) ; } finally { lock . unlock ( ) ; } }
2641	private OtherText copy ( OtherText otherText ) { if ( otherText == _NULL ) return _NULL ; OtherTextImpl copy = new OtherTextImpl ( ) ; copy . setTarget ( otherText . getTarget ( ) ) ; copy . setText ( copy ( otherText . getText ( ) ) ) ; return copy ; }
2645	private String formatDate ( Date date ) { return DateFormat . getDateInstance ( DateFormat . SHORT ) . format ( date ) ; }
2674	public static Value noInvokeRhs ( Unit unit ) { return noInvoke ( rhs ( unit ) ) ; }
2677	public boolean hasBlock ( ) { return getBlockOpt ( ) . getNumChild ( ) != _NUM ; }
2682	public void markNextPacket ( ) { mBuffers [ mBufferIn ] [ _NUM ] |= _NUM ; }
2686	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
2693	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
2717	public static ColorStateList toColorStateList ( int normalColor , int pressedColor ) { return toColorStateList ( normalColor , pressedColor , pressedColor , normalColor ) ; }
2718	public static boolean isCertificatePinningEnabled ( ) { return certificatePinning ; }
2732	public static double pow ( double d , long e ) { if ( e == _NUM ) { return _NUM . _NUM ; } else if ( e > _NUM ) { return new Split ( d ) . pow ( e ) . full ; } else { return new Split ( d ) . reciprocal ( ) . pow ( - e ) . full ; } }
2738	public static int handle ( ItemStack stack ) { if ( stack == _NULL ) return _NUM ; FuelEvent event = new FuelEvent ( stack ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event . duration ; }
2753	public static void resetSingleUse ( Context context , String showcaseID ) { PrefsManager . resetShowcase ( context , showcaseID ) ; }
2757	public boolean hasRenderSymbolBeenCalled ( ) { boolean tmp = renderSymbolCalled ; renderSymbolCalled = _BOOL ; return tmp ; }
2761	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
2791	public static String hashPassword ( String password ) { byte [ ] randomBytes = new byte [ _NUM ] ; rand . setSeed ( System . currentTimeMillis ( ) ) ; rand . nextBytes ( randomBytes ) ; return myCrypt ( password , genSalt ( randomBytes ) ) ; }
2807	@ SuppressWarnings ( _CHAR WeakerAccess _CHAR ) public boolean hasFooter ( ) { return footer != _NULL ; }
2809	public MessagesGetChatUsersQueryWithChatIdsFields nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
2817	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isWindowsSystem ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
2831	public void terminateTimer ( ) { timer . cancel ( ) ; running = _BOOL ; }
2837	private static byte positionToByte ( int position ) { return ( byte ) ( position % _NUM ) ; }
2838	public static String capitalize ( String s ) { if ( s . charAt ( _NUM ) >= _CHAR ) { return ( ( char ) ( s . charAt ( _NUM ) + ( _CHAR - _CHAR ) ) + s . substring ( _NUM ) ) ; } else { return s ; } }
2855	public void hide ( ) { hide ( _BOOL , _NULL ) ; }
2857	public static boolean isWindowsLookAndFeel ( ) { return UIUtils . isWindowsLookAndFeel ( ) ; }
2866	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
2875	public void handleSwipeEnd ( ) { if ( ! mHasDetectedTouchGesture ) { mHasDetectedTouchGesture = _BOOL ; animateToNearestState ( ) ; } }
2879	public boolean write ( byte [ ] bytes , int offset , int size ) { try { os . write ( bytes , offset , size ) ; } catch ( IOException ioe ) { return _BOOL ; } return _BOOL ; }
2889	public static int addAndCheck ( int x , int y ) { long s = ( long ) x + ( long ) y ; if ( s < Integer . MIN_VALUE || s > Integer . MAX_VALUE ) { throw new ArithmeticException ( _CHAR overflow : add _CHAR ) ; } return ( int ) s ; }
2898	protected DatabaseGetChairsQuery facultyId ( int value ) { return unsafeParam ( _CHAR faculty_id _CHAR , value ) ; }
2904	public int min ( ) { if ( size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR can not find minimum of an empty list _CHAR ) ; } int min = Integer . MAX_VALUE ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( _data [ i ] < min ) { min = _data [ i ] ; } } return min ; }
2918	public static ExpectedCondition < Boolean > noAemAjax ( ) { return _NULL ; }
2934	@ Override public final void readFully ( byte ba [ ] ) throws IOException { dis . readFully ( ba , _NUM , ba . length ) ; }
2936	protected void updateData ( List < Object [ ] > listBasedResult ) { if ( tableBlockExecutionInfos . isFixedKeyUpdateRequired ( ) ) { updateKeyWithLatestBlockKeygenerator ( listBasedResult ) ; } }
2937	public static SM_SYSTEM_MESSAGE STR_SKILL_TOGGLE_SKILL_TURNED_ON ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2944	public MatchQuery resolveToQuery ( MatchQuery inputQuery , boolean materialise ) { Query query = new Query ( inputQuery , graph ) ; if ( ! query . isRuleResolvable ( ) ) return inputQuery ; QueryAnswers answers = resolveQuery ( query , materialise ) ; return new ReasonerMatchQuery ( inputQuery , graph , answers ) ; }
2945	public boolean union ( RWSet other ) { throw new RuntimeException ( _CHAR Ca n _CHAR_CHAR ) ; }
2948	public static SM_SYSTEM_MESSAGE STR_DUEL_REQUEST_TO_PARTNER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2953	public void remove ( ComponentName componentName ) { synchronized ( mCache ) { mCache . remove ( componentName ) ; } }
2960	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
2989	public Decision suggestCategory ( String sFilename ) { DocumentNGramGraph dDoc = new DocumentNGramSymWinGraph ( ) ; try { dDoc . loadDataStringFromFile ( sFilename ) ; } catch ( IOException ex ) { Logger . getLogger ( Decider . class . getName ( ) ) . log ( Level . SEVERE , _NULL , ex ) ; return _NULL ; } return suggestCategory ( dDoc ) ; }
3014	public PacketBuilder send ( String id ) { if ( ! specs . containsKey ( id ) ) throw new IllegalArgumentException ( _CHAR Invalid PacketSpec name _CHAR + id ) ; return new PacketBuilder ( this , specs . get ( id ) ) ; }
3015	public void addToOptionBox ( Box optionBox ) { this . optionBox = optionBox ; updateVendorOptionPanels ( vendorOptionVersionsList ) ; }
3025	public Expression asExpression ( Value bool ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
3026	public boolean isRecursiveImport ( ) { if ( recursiveImport == _NULL ) { return _BOOL ; } else { return recursiveImport ; } }
3030	@ Override protected void checkDuplicateValues ( ) { if ( contains ( ) ) { String code = _CHAR DuplicateUnique _CHAR ; String value = toString ( fLocalValues ) ; String eName = fIdentityConstraint . getElementName ( ) ; String cName = fIdentityConstraint . getIdentityConstraintName ( ) ; reportSchemaError ( code , new Object [ ] { value , eName , cName } ) ; } }
3034	public static void main ( String [ ] args ) throws Exception { String [ ] s = _CHAR This is a test . 1 _NUM _NUM _NUM - _NUM . _CHAR . split ( _CHAR ( \\ s |\\ p { Punct } ) + _CHAR ) ; List < String > alTest = Arrays . asList ( s ) ; shuffleList ( alTest ) ; System . out . println ( alTest . toString ( ) ) ; }
3042	public final boolean contains ( Node n ) { return bits . get ( n . getNumber ( ) ) ; }
3043	public static SM_SYSTEM_MESSAGE STR_ITEM_COLOR_CHANGE_SUCCEED ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
3047	public void sort ( ) { String [ ] str = getListAsArray ( ) ; Arrays . sort ( str ) ; bList . removeAllElements ( ) ; add ( str ) ; hasChanged = _BOOL ; }
3054	@ PostConstruct public void init ( ) throws IDBPersistenceException { waitForConnection ( ) ; }
3108	private void inflateConnectedText ( ) { if ( mConnectedText != R . string . text_connected ) { connectivityText . setText ( mConnectedText ) ; } }
3111	public static void writeNullablePbsEntryPacket ( PbsOutputStream output , PbsEntryPacket pbsEntry ) { if ( pbsEntry != _NULL ) { output . writeBoolean ( _BOOL ) ; PbsEntryFormatter . writePbsEntryPacket ( output , pbsEntry ) ; } else output . writeBoolean ( _BOOL ) ; }
3119	public void clearSubFilters ( ) { subFilters . clear ( ) ; }
3123	public void dumpASCII ( String path ) throws IOException { Writer writer = new FileWriter ( path , _BOOL ) ; getWave ( ) . dump ( writer ) ; }
3139	public boolean hasDefaultValue ( ) { return getDefaultValueOpt ( ) . getNumChild ( ) != _NUM ; }
3156	public void onContentViewDestroyed ( ) { }
3158	public boolean isExportResults ( ) { return exportResults ; }
3167	public static SM_SYSTEM_MESSAGE STR_MSG_FRIENDLY_MOVE_COMBATAREA_IDARENA ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3179	protected List < String > extractCandidates ( String str ) { return Arrays . asList ( str . split ( _CHAR [ \\ s ] * , [ \\ s ] * _CHAR ) ) ; }
3219	protected void readConfigFileNoScrollPane ( VendorOptionFactoryInterface vendorOptionFactory , UpdateSymbolInterface parent , String filename ) { internal_readConfigFile ( vendorOptionFactory , parent . getClass ( ) , parent , filename , _BOOL , _BOOL ) ; }
3238	public Response doPut ( String url ) { return doPut ( url , _NULL ) ; }
3250	public boolean removeGatingSequence ( Sequence sequence ) { return sequencer . removeGatingSequence ( sequence ) ; }
3251	@ PostConstruct private void init ( ) { jmsProxy . registerConnectionListener ( this ) ; jmsProxy . registerSupervisionListener ( this ) ; heartbeatManager . addHeartbeatListener ( this ) ; }
3285	public static int convertToColorInt ( String argb ) throws IllegalArgumentException { if ( ! argb . startsWith ( _CHAR # _CHAR ) ) { argb = _CHAR # _CHAR + argb ; } return Color . parseColor ( argb ) ; }
3288	public static int saturate ( int c , float saturation ) { float [ ] hsb = Color . RGBtoHSB ( red ( c ) , green ( c ) , blue ( c ) , _NULL ) ; return ColorLib . hsb ( hsb [ _NUM ] , saturation , hsb [ _NUM ] ) ; }
3312	public static void appendAttribute ( final StringBuffer logMessage , final String attributeName , final String attributeValue ) { logMessage . append ( _CHAR _CHAR + attributeName + _CHAR =\ _CHAR _CHAR + attributeValue + _CHAR \ _CHAR _CHAR ) ; }
3335	public static boolean isNotSet ( double value ) { return Double . isInfinite ( value ) || ( Math . abs ( value ) < _NUM . _NUM ) ; }
3338	public void destroy ( ) { super . destroy ( ) ; }
3344	void out ( Operand ... oprs ) { out = oprs ; }
3356	private void deactivateToggleSkill ( ) { PacketSendUtility . sendPacket ( ( Player ) effector , new SM_SKILL_ACTIVATION ( getSkillId ( ) , _BOOL ) ) ; }
3364	public int largestAbsComponent ( ) { S2Point temp = fabs ( this ) ; if ( temp . x > temp . y ) { if ( temp . x > temp . z ) { return _NUM ; } else { return _NUM ; } } else { if ( temp . y > temp . z ) { return _NUM ; } else { return _NUM ; } } }
3378	public ResultSet executeQuery ( ) throws GenericDataSourceException { try { _rs = _ps . executeQuery ( ) ; } catch ( SQLException sqle ) { this . checkLockWaitInfo ( sqle ) ; throw new GenericDataSourceException ( _CHAR SQL Exception while executing the following : '' + _sql , sqle ) ; } return _rs ; }
3388	public double compareDistributions ( Distribution d1 , Distribution d2 ) { return d1 . similarityTo ( d2 ) ; }
3409	@ Override public RemoteStatement createStatement ( ) throws RemoteException { return new RemoteStatementImpl ( this ) ; }
3417	private synchronized boolean isPaused ( ) { return this . paused ; }
3435	public NewsfeedGetBannedQueryWithExtended nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
3442	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
3454	public static ByteBuffer base64StringToByteBuffer ( String base64EncodedKey ) { return ByteBuffer . wrap ( base64DecodeString ( base64EncodedKey ) ) ; }
3474	public void removeSegment ( int shapeIndex , int segmentIndex ) { List < WKTSegmentList > shapeList = segmentList . get ( shapeIndex ) ; if ( ( segmentIndex >= _NUM ) && ( segmentIndex < shapeList . size ( ) ) ) { shapeList . remove ( segmentIndex ) ; } }
3485	public BoxFolder createSharedFolder ( String folderName ) throws BoxSDKServiceException { return createSharedFolder ( folderName , getBoxSDKServiceConfig ( ) . getRootFolderId ( ) ) ; }
3509	public void add ( Symbol [ ] entry ) { this . finalNodes . add ( this . root . add ( entry , _NUM ) ) ; }
3522	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_TARGET ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
3543	public GroupsEditQuery eventGroupId ( Integer value ) { return unsafeParam ( _CHAR event_group_id _CHAR , value ) ; }
3551	public Dfp newDfp ( final int x ) { return new Dfp ( this , x ) ; }
3558	@ Override public void writeByte ( final byte b ) { bb . put ( b ) ; }
3565	public static CommandResult execCommand ( String [ ] commands , boolean isRoot ) { return execCommand ( commands , isRoot , _BOOL ) ; }
3576	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Class_info cc = ( CONSTANT_Class_info ) ( constant_pool [ class_index ] ) ; CONSTANT_NameAndType_info cn = ( CONSTANT_NameAndType_info ) ( constant_pool [ name_and_type_index ] ) ; return cc . toString ( constant_pool ) + _CHAR . _CHAR + cn . toString ( constant_pool ) ; }
3588	public static CommandResult execCommand ( String [ ] commands , boolean isRoot ) { return execCommand ( commands , isRoot , _BOOL ) ; }
3602	public int readLabel ( ) throws IOException { return readUnsignedByte ( ) ; }
3615	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
3648	public CreatePageWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentWindow ) ) ; return this ; }
3667	public static GroupMapping createSpecificMapping ( String ... specificGroups ) { return new GroupMapping ( specificGroups ) ; }
3676	public void stopLoadMore ( ) { if ( mPullLoading == _BOOL ) { mPullLoading = _BOOL ; mFooterView . setState ( XListViewFooter . STATE_NORMAL ) ; } }
3685	public synchronized boolean isDragging ( ) { return isDragging ; }
3689	public boolean isOptional ( ) { return proto . getLabel ( ) == FieldDescriptorProto . Label . LABEL_OPTIONAL ; }
3698	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
3706	public int years ( ) { return this . years ; }
3714	@ Override public PolyhedronsSet wholeSpace ( ) { return new PolyhedronsSet ( tolerance ) ; }
3722	public static float calculateAspectRatio ( float left , float top , float right , float bottom ) { final float width = right - left ; final float height = bottom - top ; return width / height ; }
3735	public boolean drain ( ) { return _BOOL ; }
3748	public Builder addColumnDouble ( String name , Double minAllowedValue , Double maxAllowedValue , boolean allowNaN , boolean allowInfinite ) { return addColumn ( new DoubleMetaData ( name , minAllowedValue , maxAllowedValue , allowNaN , allowInfinite ) ) ; }
3758	public Expression containsKey ( Value map , Value arg ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
3806	@ Override public String toString ( ) { return _CHAR FileDeleteStrategy [ _CHAR + name + _CHAR ] _CHAR ; }
3807	@ Override public Scan open ( ) { return new TableScan ( ti , tx ) ; }
3815	public final boolean isOverridingNightMode ( ) { return ( myOverride & CFG_NIGHT_MODE ) != _NUM ; }
3820	public void resume ( ) { engine . resume ( ) ; }
3849	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
3855	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_PET_TAME_COMPLETE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
3857	public String toString ( ) { return val ? _CHAR ClientAuthentication . YES _CHAR : _CHAR ClientAuthentication . NO _CHAR ; }
3865	public boolean isSPD ( ) { return isspd ; }
3871	public static SM_SYSTEM_MESSAGE STR_CHAT_CHANNEL_JOIN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3892	public String toString ( cp_info constant_pool [ ] ) { cp_info target = constant_pool [ target_index ] ; return target . toString ( constant_pool ) ; }
3897	public void removeAt ( int index ) { if ( mValues [ index ] != DELETED ) { mValues [ index ] = DELETED ; mGarbage = _BOOL ; } }
3902	private static void save ( ) { if ( isSaving . compareAndSet ( _BOOL , _BOOL ) ) { Executors . newSingleThreadScheduledExecutor ( ) . schedule ( _NULL , SAVE_DELAY_SECONDS , TimeUnit . SECONDS ) ; } }
3905	public boolean exists ( ) { return scanner != _NULL ; }
3909	public byte [ ] generateNonceForEncapsulationMessage ( ) { return generateNonceBytes ( ) ; }
3910	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . main ) ; App . handleTextView ( this ) ; LibWrapper . handleTextView ( this ) ; }
3913	public synchronized static LuaState newLuaState ( ) { int i = getNextStateIndex ( ) ; LuaState L = new LuaState ( i ) ; states . add ( i , L ) ; return L ; }
3932	public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; buffer . append ( DiffMovingAverage . class . getSimpleName ( ) + _CHAR ; Current average : _CHAR + currentAverage + _CHAR ; Last Diffs : _CHAR ) ; for ( long i : diffs ) { buffer . append ( _CHAR [ _CHAR + i + _CHAR ] _CHAR ) ; } return buffer . toString ( ) ; }
3951	public String message ( ) { return rawResponse . message ( ) ; }
3961	default ZonedTimeGrain buildZonedTimeGrain ( DateTimeZone dateTimeZone ) { return new ZonedTimeGrain ( this , dateTimeZone ) ; }
3981	public DimensionRow findDimensionRowByKeyValue ( String value ) { return dimension . findDimensionRowByKeyValue ( value ) ; }
3991	private float calcAngle ( float value , float yValueSum ) { return value / yValueSum * mMaxAngle ; }
3999	public SQLSchemaMigrator graph ( MindmapsGraph graph ) { this . graph = graph ; return this ; }
4023	private void requestForDownload ( OCFile file ) { Intent i = new Intent ( mContext , FileDownloader . class ) ; i . putExtra ( FileDownloader . EXTRA_ACCOUNT , mAccount ) ; i . putExtra ( FileDownloader . EXTRA_FILE , file ) ; mContext . startService ( i ) ; mTransferWasRequested = _BOOL ; }
4055	private final void activateObjects ( ) { for ( VisibleObject visObject : objects . values ( ) ) { if ( visObject instanceof Creature ) { Creature creature = ( Creature ) visObject ; creature . getAi2 ( ) . onGeneralEvent ( AIEventType . ACTIVATE ) ; } } }
4074	public static SM_SYSTEM_MESSAGE STR_MSG_DICE_PASSED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4084	public BarEntry copy ( ) { BarEntry copied = new BarEntry ( getVal ( ) , getXIndex ( ) , getData ( ) ) ; copied . setVals ( mVals ) ; return copied ; }
4086	private void removeTask ( Runnable r ) { tCur = _NULL ; }
4096	public ColumnQuery addSort ( Sort sort ) throws NullPointerException { this . sorts . add ( Objects . requireNonNull ( sort , _CHAR Sort is required _CHAR ) ) ; return this ; }
4119	private static boolean isSeparator ( char ch ) { return ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR ; }
4120	public static void checkNotNull ( Object o , Localizable pattern , Object ... args ) throws NullArgumentException { if ( o == _NULL ) { throw new NullArgumentException ( pattern , args ) ; } }
4175	public static String toString ( final byte byteValue ) { final int tmp = byteValue << _NUM ; char [ ] retstr = new char [ ] { HEX [ ( tmp >> _NUM ) & _NUM ] , HEX [ ( tmp >> _NUM ) & _NUM ] } ; return String . valueOf ( retstr ) ; }
4185	public static int randRange ( int min , int max ) { int mod = max - min ; double val = Math . ceil ( Math . random ( ) * _NUM ) % mod ; return ( int ) val + min ; }
4192	private void removeTask ( Runnable r ) { tCur = _NULL ; }
4194	public boolean isDragging ( ) { return transferHandler . isDragging ( ) ; }
4207	public TapTarget targetCircleColor ( @ ColorRes int color ) { this . targetCircleColor = color ; return this ; }
4226	public Builder fillOpacity ( Number fillOpacity ) { this . fillOpacity = fillOpacity ; return this ; }
4230	public boolean isAllow ( ) { return message == _NULL ; }
4235	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
4237	private static byte positionToByte ( int position ) { return ( byte ) ( position % _NUM ) ; }
4242	public void begin ( int size ) { }
4287	public boolean write ( byte [ ] audioData ) { return write ( audioData , _NUM , audioData . length ) ; }
4295	public static < ARG > Matcher < ARG > match ( ARG arg ) { return new Matcher < > ( arg ) ; }
4309	public String process ( Item item ) throws ProcessException { int v = Integer . parseInt ( item . getFeatures ( ) . getString ( _CHAR name _CHAR ) ) ; if ( ( v > _NUM ) && ( v < _NUM ) ) { return _CHAR _NUM _CHAR ; } else { return _CHAR _NUM _CHAR ; } }
4316	public boolean isSilence ( ) { if ( isSilence == - _NUM ) { String silenceSymbol = _CHAR _ _CHAR ; if ( name . startsWith ( silenceSymbol ) ) { isSilence = _NUM ; } else { isSilence = _NUM ; } } return isSilence == _NUM ; }
4324	public static < T > T result ( Future < T > result ) throws IOException { return result ( result , Duration . Top ( ) ) ; }
4345	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
4365	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
4367	public String toString ( ) { return val ? _CHAR Integrity . YES _CHAR : _CHAR Integrity . NO _CHAR ; }
4375	public void addInlines ( String inlineCode , String group ) { ParamValidationUtil . validateParamNotNull ( inlineCode , _CHAR inlineCode _CHAR ) ; ParamValidationUtil . validateParamNotNull ( group , _CHAR group _CHAR ) ; if ( ! inlineMap . containsKey ( group ) ) { inlineMap . put ( group , new LinkedHashSet < String > ( ) ) ; } inlineMap . get ( group ) . add ( inlineCode ) ; }
4377	@ JsonIgnore public boolean isConfidentialBool ( ) { return confidential != _NULL && confidential ; }
4384	private boolean isLargeEnough ( ) { int x0 = leftMargin ; int x1 = getWidth ( ) - rightMargin ; int y0 = getHeight ( ) - bottomMargin ; int y1 = topMargin ; return x0 < x1 && y0 > y1 ; }
4396	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
4400	public AemFieldset expand ( ) { if ( isFolded ( ) ) { foldButton . click ( ) ; } bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , Timeouts . MINIMAL ) ; return this ; }
4403	private static boolean isDigit ( char p_char ) { return p_char >= _CHAR && p_char <= _CHAR ; }
4437	protected boolean loadPluginConfiguration ( final String file ) { return PluginLoader . load ( file ) ; }
4446	public static SM_SYSTEM_MESSAGE STR_CHAT_CHANNEL_LEAVE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4447	public void addImportDecl ( ImportDecl node ) { List < ImportDecl > list = ( parent == _NULL || state == _NULL ) ? getImportDeclListNoTransform ( ) : getImportDeclList ( ) ; list . addChild ( node ) ; }
4453	@ Override public void update ( ) { for ( UIElement element : elements ) element . update ( ) ; }
4464	@ RequestMapping ( value = _CHAR / activate _CHAR , method = RequestMethod . GET , produces = MediaType . APPLICATION_JSON_VALUE ) @ Timed public ResponseEntity < String > activateAccount ( @ RequestParam ( value = _CHAR key _CHAR ) String key ) { return userService . activateRegistration ( key ) . map ( _NULL ) . orElse ( new ResponseEntity < > ( HttpStatus . INTERNAL_SERVER_ERROR ) ) ; }
4495	public static SM_SYSTEM_MESSAGE STR_MSG_LIMIT_SALE_TEST_DESC01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4502	public void clear ( ) { stateCount ++ ; firstItem = lastItem = _NULL ; map . clear ( ) ; }
4507	public static boolean isClassSupport ( String clzName ) { try { Class . forName ( clzName ) ; return _BOOL ; } catch ( ClassNotFoundException e ) { return _BOOL ; } }
4538	public static SM_SYSTEM_MESSAGE STR_SKILL_SUMMON_ATTACK_MODE ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( value0 ) ) ; }
4553	public void onLongPress ( long time , float x , float y ) { if ( mOverviewAnimationType == OverviewAnimationType . NONE ) { mLongPressSelected = getTabIndexAtPositon ( x , y ) ; if ( mLongPressSelected >= _NUM ) { startAnimation ( time , OverviewAnimationType . VIEW_MORE , mLongPressSelected , _BOOL ) ; mEvenOutProgress = _NUM . _NUM ; } } }
4554	public static SM_SYSTEM_MESSAGE STR_EVENT_LOSE_ARTIFACT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
4555	public void run ( ) { processMessageSender . sendAlive ( ) ; LOGGER . debug ( _CHAR Alive sent . '' ) ; }
4564	private int sourceRegister ( ) { if ( instruction instanceof Instruction23x ) return ( ( Instruction23x ) instruction ) . getRegisterA ( ) ; else if ( instruction instanceof Instruction22c ) return ( ( Instruction22c ) instruction ) . getRegisterA ( ) ; else if ( instruction instanceof Instruction21c ) return ( ( Instruction21c ) instruction ) . getRegisterA ( ) ; else throw new RuntimeException ( _CHAR Instruction is not a instance , array or static op _CHAR ) ; }
4565	@ Override public void create ( final SubEquipmentCacheObject subEquipment ) throws SubEquipmentException { if ( LOGGER . isDebugEnabled ( ) ) { LOGGER . debug ( _CHAR create ( ) - Create a subEquipment with the id : _CHAR + subEquipment . getId ( ) ) ; } try { subEquipmentMapper . insertSubEquipment ( subEquipment ) ; } catch ( DataAccessException e ) { throw new SubEquipmentException ( e . getMessage ( ) ) ; } }
4573	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
4578	public boolean isElement ( String requestPrefix , String requestedElementName ) { if ( ( requestPrefix != _NULL ) && ( requestedElementName != _NULL ) ) { if ( ( requestPrefix . compareToIgnoreCase ( prefix ) == _NUM ) && ( requestedElementName . compareToIgnoreCase ( elementName ) == _NUM ) ) { return _BOOL ; } } return _BOOL ; }
4583	protected Combo createEditableCombo ( Composite parent ) { Combo combo = new Combo ( parent , SWT . NULL ) ; GridData data = new GridData ( GridData . FILL_HORIZONTAL ) ; data . widthHint = IDialogConstants . ENTRY_FIELD_WIDTH ; combo . setLayoutData ( data ) ; return combo ; }
4585	public static void registerClass ( Class < ? > clazz ) { registrations . add ( clazz ) ; }
4607	public static Style green ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_GREEN ) ; return style ; }
4626	public boolean isMultiple ( ) { return partitions != _NULL && partitions . size ( ) > _NUM ; }
4646	public boolean isPerLogicalSubjectLockObject ( boolean isEvictable ) { return ! isEvictable ; }
4653	private void registerFabListeners ( ) { registerFabUploadListeners ( ) ; registerFabMkDirListeners ( ) ; registerFabUploadFromAppListeners ( ) ; }
4680	public void disableWhenHorizontalMove ( boolean disable ) { mDisableWhenHorizontalMove = disable ; }
4682	@ Override public int read ( byte [ ] bytes ) throws IOException { return read ( bytes , _NUM , bytes . length ) ; }
4699	@ Override public Scan open ( ) { Scan s = p . open ( ) ; return new SelectScan ( s , pred ) ; }
4701	public boolean isShowLabel ( ) { if ( showLabel == _NULL ) { return _BOOL ; } else { return showLabel ; } }
4702	public Optional < Double > max ( ) { if ( isEmpty ( ) ) return Optional . empty ( ) ; return Optional . of ( buckets_ . get ( buckets_ . size ( ) - _NUM ) . getRange ( ) . getCeil ( ) ) ; }
4707	public boolean contains ( T obj ) { return contains_impl ( obj ) ; }
4717	public static SM_SYSTEM_MESSAGE STR_FORCE_HE_IS_NEW_LEADER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4728	public AudioGetQuery needUser ( Boolean value ) { return unsafeParam ( _CHAR need_user _CHAR , value ) ; }
4730	public static void writePbsEntryPacket ( PbsOutputStream output , PbsEntryPacket pbsEntry ) { byte [ ] array = pbsEntry . getStreamBytes ( ) ; output . write ( array , _NUM , array . length ) ; writeDynamicProperties ( output , pbsEntry . getDynamicProperties ( ) ) ; }
4755	SecurityContext trust ( SecurityContext securityContext ) { TrustedSecurityContext trustedContext = new TrustedSecurityContext ( securityContext ) ; return trustedContext ; }
4767	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public final S withValueSupplier ( Splittable . LongIndexed < T > valueSupplier ) { this . valueSupplier = valueSupplier ; return ( S ) this ; }
4785	@ Override public void keyReleased ( KeyEvent e ) { synchronized ( keyLock ) { keysDown . remove ( e . getKeyCode ( ) ) ; } }
4793	public void addQuery ( boolean and , ContentletQuery contentletQuery ) { if ( and ) { query . append ( _CHAR _CHAR + contentletQuery . getQuery ( ) ) ; } else { query . insert ( _NUM , _CHAR ( _CHAR ) ; query . append ( _CHAR ) ( _CHAR ) ; query . append ( contentletQuery . getQuery ( ) ) ; query . append ( _CHAR ) _CHAR ) ; } }
4797	public RoleDTO toDTO ( Role role ) { return toDTO ( role , _NUM ) ; }
4825	public static SM_SYSTEM_MESSAGE STR_INGAMESHOP_NOT_ENOUGH_CASH ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4828	public static SM_SYSTEM_MESSAGE STR_EXTRACT_GATHER_FAIL_1_BASIC ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4831	public INDArray toBgr ( BufferedImage image ) { if ( image == _NULL ) throw new IllegalStateException ( _CHAR Unable to load image _CHAR ) ; image = scalingIfNeed ( image , _BOOL ) ; return toINDArrayBGR ( image ) ; }
4852	public void addLimitLine ( LimitLine l ) { mLimitLines . add ( l ) ; if ( mLimitLines . size ( ) > _NUM ) { Log . e ( _CHAR MPAndroiChart _CHAR , _CHAR Warning ! You have more than _NUM LimitLines on your axis , do you really want _CHAR + _CHAR that ? _CHAR ) ; } }
4865	public static void expand ( Rectangle2D r , double amount ) { r . setRect ( r . getX ( ) - amount , r . getY ( ) - amount , r . getWidth ( ) + _NUM * amount , r . getHeight ( ) + _NUM * amount ) ; }
4867	@ ObjectiveCName ( _CHAR clearWithUniqueName : _CHAR ) private boolean clear ( String uniqueName ) { ScheduledFuture scheduledFuture = register . get ( uniqueName ) ; if ( scheduledFuture != _NULL ) { scheduledFuture . cancel ( _BOOL ) ; register . remove ( uniqueName ) ; return _BOOL ; } else { return _BOOL ; } }
4884	public int currentId ( ) { return currentSlot ; }
4906	public int id ( ) { return id ; }
4962	void unregister ( ) { mListener = _NULL ; mMediaFactory = _NULL ; }
4977	protected final void requestDeferred ( ) { long r = REQUESTED . getAndSet ( this , _NUM ) ; if ( r != _NUM ) { s . request ( r ) ; } }
4992	public NotesDeleteQuery delete ( UserActor actor , int noteId ) { return new NotesDeleteQuery ( getClient ( ) , actor , noteId ) ; }
4997	public void onMessage ( Message message ) { MapMessage mapMessage = _NULL ; if ( Debug . verboseOn ( ) ) Debug . logVerbose ( _CHAR JMS Message Received -- > _CHAR + message , module ) ; if ( message instanceof MapMessage ) { mapMessage = ( MapMessage ) message ; } else { Debug . logError ( _CHAR Received message is not a MapMessage ! _CHAR , module ) ; return ; } runService ( mapMessage ) ; }
5002	public static void main ( String [ ] args ) { System . out . println ( ( new AlanVoiceDirectory ( ) ) . toString ( ) ) ; }
5011	public String toString ( ) { return ( _CHAR InvocationConstraints [ reqs : _CHAR + Constraint . toString ( reqs ) + _CHAR , prefs : _CHAR + Constraint . toString ( prefs ) + _CHAR ] _CHAR ) ; }
5021	private static void copy ( InputStream inputStream , OutputStream outputStream ) throws IOException { byte [ ] b = new byte [ _NUM ] ; int len ; while ( ( len = inputStream . read ( b ) ) != - _NUM ) { outputStream . write ( b , _NUM , len ) ; } }
5029	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
5030	@ OnClick ( R . id . loadDataButton ) public void loadData ( ) { mApiInterface . sleep ( _CHAR _NUM _CHAR ) . subscribeOn ( Schedulers . io ( ) ) . compose ( getRxPhoenix ( ) . < JsonElement > surviveConfigChanges ( REQUEST_SLOW ) ) ; }
5051	public boolean contains ( Node n ) { return oldSet . contains ( n ) || newSet . contains ( n ) ; }
5112	public void reset ( byte [ ] input , int start , int length ) { buffer . reset ( input , start , length ) ; }
5131	public String process ( Item seg ) throws ProcessException { if ( segCodaCtype ( seg , _CHAR r _CHAR ) . equals ( _CHAR _NUM _CHAR ) ) { return segCodaCtype ( seg , _CHAR l _CHAR ) ; } return _CHAR _NUM _CHAR ; }
5143	public static SM_SYSTEM_MESSAGE STR_ARTIFACT_WIN_FORT_TO_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5147	@ Override public void onUpdateDataTag ( final SourceDataTag sourceDataTag , final SourceDataTag oldSourceDataTag , final ChangeReport changeReport ) { if ( ! sourceDataTag . getAddress ( ) . isStaticTimedeadband ( ) && sourceDataTag . getAddress ( ) . getPriority ( ) != oldSourceDataTag . getAddress ( ) . getPriority ( ) ) { onRemoveDataTag ( sourceDataTag , changeReport ) ; onAddDataTag ( sourceDataTag , changeReport ) ; } }
5150	protected void cleanTableView ( ) { if ( ++ fLargeCount < _NUM ) { if ( fAttributeTableViewChainState != _NULL ) { for ( int i = fTableViewBuckets - _NUM ; i >= _NUM ; -- i ) { fAttributeTableViewChainState [ i ] = _NUM ; } } fLargeCount = _NUM ; } }
5162	public BreakpointStmt newBreakpointStmt ( ) { return new JBreakpointStmt ( ) ; }
5180	@ Override public int hashCode ( ) { int code = super . hashCode ( ) ; if ( fEntityName != _NULL ) { code += fEntityName . hashCode ( ) ; } return code ; }
5183	public static long hash64 ( final String text ) { final byte [ ] bytes = text . getBytes ( ) ; return hash64 ( bytes , bytes . length ) ; }
5206	public int size ( ) { return _NUM ; }
5207	private void skipToNewlineToken ( ) { while ( ! builder . eof ( ) ) { if ( currentToken ( ) == ProjectViewTokenType . NEWLINE ) { return ; } builder . advanceLexer ( ) ; } }
5266	public void put ( String key , InputStream stream , String name , String contentType ) { if ( key != _NULL && stream != _NULL ) { streamParams . put ( key , new StreamWrapper ( stream , name , contentType ) ) ; } }
5270	public static boolean canChat ( Player player ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canChat . ordinal ( ) ] ) { if ( ! restrictions . canChat ( player ) ) { return _BOOL ; } } return _BOOL ; }
5299	public int size ( ) { return _count ; }
5307	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
5330	public FriendsGetRecentQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
5337	public static String encodePassword ( final String value ) { return ConversionUtils . stringToBase64 ( value ) ; }
5340	public String toString ( ) { return val ? _CHAR Delegation . YES _CHAR : _CHAR Delegation . NO _CHAR ; }
5363	void unregister ( ) { mListener = _NULL ; mMediaFactory = _NULL ; }
5371	public static void initAndStartProfiler ( ) { profiler = new Profiler ( ) ; profiler . startCollecting ( ) ; }
5372	public static String toString ( URI uri , String encoding ) throws IOException { return toString ( uri , Charsets . toCharset ( encoding ) ) ; }
5374	@ Override public String toString ( ) { return _CHAR Segmenter _CHAR ; }
5402	private boolean retryDelayHasPassedBy ( Long lastFailTime ) { return lastFailTime == _NULL || lastFailTime + this . retryAfterMs < System . currentTimeMillis ( ) ; }
5417	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
5425	public okhttp3 . Response raw ( ) { return rawResponse ; }
5435	public String toString ( ) { return name ; }
5464	public Boolean doOutputScc ( ) { return doOutputScc ; }
5474	public boolean hasObservers ( ) { return observers . get ( ) . length != _NUM ; }
5475	@ Override public void indent ( ) { _nextIndent += _format . getIndent ( ) ; }
5485	public R reduce ( List < AsyncResult < T >> results ) throws Exception { return reducer . reduce ( results ) ; }
5500	public static int min ( int a , int b , int c ) { int mi ; mi = a ; if ( b < mi ) { mi = b ; } if ( c < mi ) { mi = c ; } return mi ; }
5515	public void removeEdge ( Edge edge ) throws Exception { if ( EdgeDistros . containsKey ( edge ) ) EdgeDistros . remove ( edge ) ; super . removeEdge ( edge ) ; }
5545	private Relation addNewRolePlayer ( Map < RoleType , Instance > roleMap , RoleType roleType , Instance instance ) { if ( instance != _NULL ) mindmapsGraph . putCasting ( ( RoleTypeImpl ) roleType , ( InstanceImpl ) instance , this ) ; if ( mindmapsGraph . isBatchLoadingEnabled ( ) ) { setHash ( _NULL ) ; } else { setHash ( roleMap ) ; } return this ; }
5566	public Value type ( Value target ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
5586	protected GroupsIsMemberQueryWithUserIds groupId ( String value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
5606	public boolean isTopLevel ( ) { ASTNode parent = getNode ( ) . getTreeParent ( ) ; return parent == _NULL || parent . getElementType ( ) == BuildElementTypes . BUILD_FILE ; }
5628	public BarEntry copy ( ) { BarEntry copied = new BarEntry ( getX ( ) , getY ( ) , getData ( ) ) ; copied . setVals ( mYValues ) ; return copied ; }
5634	public void addElementValuePair ( ElementValuePair node ) { List < ElementValuePair > list = ( parent == _NULL || state == _NULL ) ? getElementValuePairListNoTransform ( ) : getElementValuePairList ( ) ; list . addChild ( node ) ; }
5673	public boolean isCancelable ( ) { return _BOOL ; }
5684	public boolean isElement ( List < String > requestPrefixList , String requestedElementName ) { if ( ( requestPrefixList != _NULL ) && ( requestedElementName != _NULL ) ) { for ( String requestPrefix : requestPrefixList ) { if ( isElement ( requestPrefix , requestedElementName ) ) { return _BOOL ; } } } return _BOOL ; }
5728	public Node < K , V > first ( ) { Node < K , V > node = this ; Node < K , V > child = node . left ; while ( child != _NULL ) { node = child ; child = node . left ; } return node ; }
5737	public String toString ( ) { return _CHAR ContourGenerator _CHAR ; }
5756	public DistributedLogClientBuilder checksum ( boolean enabled ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setChecksumEnabled ( enabled ) ; return newBuilder ; }
5763	@ ObjectiveCName ( _CHAR subscribeWithListEntryChangedListener : _CHAR ) public List subscribe ( ListEntryChangedListener listEntryChangedListener ) { this . listEntryChangedListeners . add ( listEntryChangedListener ) ; if ( this . listEntryChangedListeners . size ( ) == _NUM ) { this . record . subscribe ( this . recordListeners ) ; } return this ; }
5772	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
5773	public void onProgressBarFinished ( ) { }
5775	public static String operationCodeToString ( Integer code ) { return fieldsMap . get ( code ) ; }
5779	public static void register ( String name , AbstractChannel < ? > channel ) { channels . put ( name , channel ) ; }
5826	public void removeString ( String word , Tuple t ) { removeLeaf ( root , word , t , _NUM ) ; }
5835	public void onStop ( ) { if ( mFullscreenManager != _NULL ) mFullscreenManager . removeListener ( this ) ; }
5838	public FieldVector3D < T > subtract ( final double factor , final Vector3D v ) { return new FieldVector3D < T > ( x . subtract ( factor * v . getX ( ) ) , y . subtract ( factor * v . getY ( ) ) , z . subtract ( factor * v . getZ ( ) ) ) ; }
5842	public short put ( K key , short value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
5846	private void dealAssociatedModelOnOneSide ( DataSupport baseObj , DataSupport associatedModel ) { dealsAssociationsOnTheSideWithoutFK ( baseObj , associatedModel ) ; }
5852	@ Override public Iterator < E > iterator ( ) { return this . inOrderIterator ( ) ; }
5867	public byte [ ] encrypt ( String string ) { return encrypt ( string . getBytes ( ) ) ; }
5883	public static float readFloat ( byte [ ] bytes , int start ) { return WritableComparator . readFloat ( bytes , start ) ; }
5884	public GroupsGetInvitedUsersQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
5900	public boolean isEmpty ( ) { return this . root == _NULL ; }
5903	public static void log ( Object message , Exception exception ) { Gdx . app . log ( TAG , String . valueOf ( message ) , exception ) ; }
5911	public void addFormLocation ( String name ) { if ( name != _NULL ) { this . formLocationSet . add ( name ) ; } }
5932	@ Override public void mouseEntered ( MouseEvent e ) { }
5940	public static SM_SYSTEM_MESSAGE STR_ABYSS_CASTLE_TAKEN ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
5979	protected int createNode ( short nodeType ) { int chunk = fNodeCount >> CHUNK_SHIFT ; int index = fNodeCount & CHUNK_MASK ; ensureCapacity ( chunk ) ; setChunkIndex ( fNodeType , nodeType , chunk , index ) ; return fNodeCount ++ ; }
5984	public static int subAndCheck ( int x , int y ) throws MathRuntimeException { long s = ( long ) x - ( long ) y ; if ( s < Integer . MIN_VALUE || s > Integer . MAX_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_SUBTRACTION , x , y ) ; } return ( int ) s ; }
5994	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_DODGE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
5997	public Expression isEmpty ( Value target ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
5999	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_ATE_ALL_FOOD ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
6034	public String localName ( String name ) { int colon = name . indexOf ( _CHAR ) ; if ( colon == - _NUM ) { return name ; } else { return name . substring ( colon + _NUM ) . intern ( ) ; } }
6041	private static String translate ( String s , Locale locale ) { try { ResourceBundle bundle = ResourceBundle . getBundle ( _CHAR org . apache . commons . math . MessagesResources _CHAR , locale ) ; if ( bundle . getLocale ( ) . getLanguage ( ) . equals ( locale . getLanguage ( ) ) ) { return bundle . getString ( s ) ; } } catch ( MissingResourceException mre ) { } return s ; }
6051	private boolean isLargeEnough ( ) { int x0 = leftMargin ; int x1 = getWidth ( ) - rightMargin ; int y0 = getHeight ( ) - bottomMargin ; int y1 = topMargin ; return x0 < x1 && y0 > y1 ; }
6058	public boolean isZero ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( mant [ mant . length - _NUM ] == _NUM ) && ! isInfinite ( ) ; }
6094	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
6098	private void scrollToChild ( View child ) { child . getDrawingRect ( mTempRect ) ; offsetDescendantRectToMyCoords ( child , mTempRect ) ; int scrollDelta = computeScrollDeltaToGetChildRectOnScreen ( mTempRect ) ; if ( scrollDelta != _NUM ) { scrollBy ( scrollDelta , _NUM ) ; } }
6102	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM , _NUM , _NUM , _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
6131	@ Override public void runSyncIgnore ( String localName , ModelService modelService , Map < String , Object > context ) throws GenericServiceException { runSync ( localName , modelService , context ) ; }
6132	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_REMAIN_TIME_10 ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
6141	public int size ( ) { return _NUM ; }
6150	private boolean isEndingContextualSearch ( PanelState fromState , PanelState toState , boolean isStartingSearch ) { return isOngoingContextualSearch ( fromState ) && ( toState == PanelState . CLOSED || isStartingSearch ) ; }
6159	public static SM_SYSTEM_MESSAGE STR_MSG_TELEPORT_ZONECHANNEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6200	@ CheckReturnValue public AddCmd files ( String ... files ) { return files ( ImmutableList . copyOf ( files ) ) ; }
6203	public static int hash ( Object object ) { return object == _NULL ? _NUM : object . hashCode ( ) ; }
6215	private boolean isPaused ( ) { return paused ; }
6216	public Intent installIntent ( ) { return mInstallIntent ; }
6236	@ CheckReturnValue public AddCmd files ( Iterable < String > files ) { Preconditions . checkState ( ! all , _CHAR _CHAR and passing files is incompatible _CHAR ) ; return new AddCmd ( force , _BOOL , files ) ; }
6250	public static Bucket createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , Bucket . class ) ; }
6253	public static boolean isNotEmpty ( String s ) { return ( s != _NULL ) && s . length ( ) > _NUM ; }
6274	public static boolean isCraftingSkill ( int skillId ) { Iterator < Integer > it = craftingSkillIds . iterator ( ) ; while ( it . hasNext ( ) ) { if ( it . next ( ) == skillId ) { return _BOOL ; } } return _BOOL ; }
6283	public void delete ( final Txn < T > txn , final T key ) { delete ( txn , key , _NULL ) ; }
6284	public GroupsJoinQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
6289	public String process ( Item seg ) throws ProcessException { return segOnsetCtype ( seg , _CHAR n _CHAR ) ; }
6297	public static SM_SYSTEM_MESSAGE STR_SOUL_BOUND_ITEM_FAILED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6313	private boolean isFreeName ( String name ) { return ! DAOManager . getDAO ( LegionDAO . class ) . isNameUsed ( name ) ; }
6328	private static int unrandomize255State ( int randomizedBase256Codeword , int base256CodewordPosition ) { int pseudoRandomNumber = ( ( _NUM * base256CodewordPosition ) % _NUM ) + _NUM ; int tempVariable = randomizedBase256Codeword - pseudoRandomNumber ; return tempVariable >= _NUM ? tempVariable : tempVariable + _NUM ; }
6340	public List < File > showOpenMultipleDialog ( ) { return showDialog ( _NULL ) ; }
6352	public MarketSearchQueryWithExtended searchExtended ( UserActor actor , int ownerId ) { return new MarketSearchQueryWithExtended ( getClient ( ) , actor , ownerId ) ; }
6371	public static byte [ ] writeUnsignedShort ( int s ) { ByteBuffer bb = ByteBuffer . allocate ( _NUM ) ; bb . put ( ( byte ) ( ( s >> _NUM ) & _NUM ) ) ; bb . put ( ( byte ) ( s & _NUM ) ) ; return bb . array ( ) ; }
6372	public static float readFloat ( byte [ ] bytes , int start ) { return Float . intBitsToFloat ( readInt ( bytes , start ) ) ; }
6378	public synchronized void completed ( ) { completed = _BOOL ; notifyAll ( ) ; }
6379	public static SM_SYSTEM_MESSAGE STR_ENCHANT_ITEM_FAILED ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
6380	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
6426	public void cancel ( ) { pause ( ) ; mRunnable = _NULL ; }
6436	public boolean isTimer ( ) { if ( timer == _NULL ) { return _BOOL ; } else { return timer ; } }
6445	private void runAction ( MouseEvent e ) { if ( m_action != _NULL ) { Display d = ( Display ) e . getSource ( ) ; d . getVisualization ( ) . run ( m_action ) ; } }
6449	public static ServiceTypeBase toServiceTypeBase ( Class cls ) throws MarshalException { synchronized ( serviceMap ) { return toServiceTypeBase ( cls , _BOOL ) ; } }
6453	private void saveTokenChanges ( ) { GoIVSettings . getInstance ( context ) . setClipboardPreference ( tokens ) ; Log . d ( _CHAR NahojjjenClippy _CHAR , _CHAR Saved token Changes _CHAR ) ; }
6456	private void loadMappedBinary ( FileInputStream is ) throws IOException { FileChannel fc = is . getChannel ( ) ; MappedByteBuffer bb = fc . map ( FileChannel . MapMode . READ_ONLY , _NUM , ( int ) fc . size ( ) ) ; bb . load ( ) ; loadDatabase ( bb ) ; is . close ( ) ; }
6474	@ Override public void startExternalSubset ( XMLResourceIdentifier identifier , Augmentations augs ) throws XNIException { fReadingExternalDTD = _BOOL ; }
6489	protected LeadsStartQuery secret ( String value ) { return unsafeParam ( _CHAR secret _CHAR , value ) ; }
6492	@ Override public void addObservation ( final double [ ] x , final double y ) throws MathIllegalArgumentException { if ( x == _NULL || x . length == _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . INVALID_REGRESSION_OBSERVATION , x != _NULL ? x . length : _NUM , _NUM ) ; } addData ( x [ _NUM ] , y ) ; }
6501	public boolean isPotion ( ) { return getItemId ( ) == ItemId . ITEM_POTION || getItemId ( ) == ItemId . ITEM_SUPER_POTION || getItemId ( ) == ItemId . ITEM_HYPER_POTION || getItemId ( ) == ItemId . ITEM_MAX_POTION ; }
6514	public static Map < String , Object > createUserPrefMap ( GenericValue rec ) throws GeneralException { return addPrefToMap ( rec , new LinkedHashMap < String , Object > ( ) ) ; }
6522	@ Override public void endExternalSubset ( Augmentations augmentations ) throws XNIException { }
6524	public boolean isResubscribe ( ) { return resubscribe ; }
6529	public boolean isCannotShare ( ) { if ( cannotShare == _NULL ) { return _BOOL ; } else { return cannotShare ; } }
6531	protected static void showLogin ( ) { if ( loginListener != _NULL ) { loginListener . shouldAuthenticate ( ) ; } }
6532	public boolean removeEntity ( final ProxyEntity proxyEntity ) { final Session session = this . sessionFactory . openSession ( ) ; final Transaction transaction = session . beginTransaction ( ) ; session . delete ( proxyEntity ) ; transaction . commit ( ) ; session . close ( ) ; return _BOOL ; }
6554	@ Override public void seek ( final long offset ) throws IOException { pos = ( int ) offset ; }
6561	public void close ( ) throws IOException { if ( io != _NULL ) { try { io . close ( ) ; } finally { io = _NULL ; } } }
6563	public OpenSpacesQueueObject newQueueTemplate ( String queueName ) { OpenSpacesQueueObject queueObject = isFifo ( ) ? new OpenSpacesFifoQueueObject ( ) : new OpenSpacesQueueObject ( ) ; queueObject . setPersistent ( isPersistent ( ) ) ; queueObject . setEndpointURI ( queueName ) ; return queueObject ; }
6567	@ Override public int hashCode ( ) { return lowerBound . hashCode ( ) * _NUM + upperBound . hashCode ( ) ; }
6589	public static SM_SYSTEM_MESSAGE STR_TITLE_BONUS_SKILL ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
6602	private boolean canChangeAnnouncement ( LegionMember legionMember , String announcement ) { return legionMember . hasRights ( LegionPermissionsMask . EDIT ) && ( announcement . isEmpty ( ) || isValidAnnouncement ( announcement ) ) ; }
6608	public IReadBlock next ( ) { try { currentCount ++ ; countReads ++ ; return ReadBlockRMA2 . read ( rma2Formatter , classDumpReader . readLong ( ) , wantReadText , wantMatchData , wantMatchText , minScore , maxExpected , textStorageReader , dataIndexReader ) ; } catch ( IOException e ) { Basic . caught ( e ) ; error = _BOOL ; return _NULL ; } }
6611	public void addCatchClause ( CatchClause node ) { List < CatchClause > list = ( parent == _NULL || state == _NULL ) ? getCatchClauseListNoTransform ( ) : getCatchClauseList ( ) ; list . addChild ( node ) ; }
6619	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
6633	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
6641	public static void main ( String [ ] args ) throws Exception { String [ ] s = _CHAR This is a test . 1 _NUM _NUM _NUM - _NUM . _CHAR . split ( _CHAR ( \\ s |\\ p { Punct } ) + _CHAR ) ; List < String > alTest = Arrays . asList ( s ) ; shuffleList ( alTest ) ; System . out . println ( alTest . toString ( ) ) ; }
6643	public int milliseconds ( ) { return this . milliseconds ; }
6645	public A wrap ( T instance ) { return wrapper . apply ( instance ) ; }
6649	public void put ( String key , InputStream stream , String name ) { put ( key , stream , name , _NULL ) ; }
6655	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
6659	public boolean end ( ) { return _BOOL ; }
6664	public static Style teal ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_TEAL ) ; return style ; }
6665	public static < L , R > Either < L , R > left ( L left ) { return new Either < > ( left , _NULL , _BOOL ) ; }
6694	public boolean hasArrayInit ( ) { return getArrayInitOpt ( ) . getNumChild ( ) != _NUM ; }
6700	public static Object objectFromByteBuffer ( byte [ ] buffer ) throws IOException , ClassNotFoundException { if ( buffer == _NULL ) return _NULL ; OptimizedByteArrayInputStream inStream = new OptimizedByteArrayInputStream ( buffer ) ; ObjectInputStream in = new ObjectInputStream ( inStream ) ; Object retval = in . readObject ( ) ; in . close ( ) ; return retval ; }
6723	public boolean isMotorEnabled ( ) { return this . motorEnabled ; }
6725	protected void nofityChange ( ) { if ( observer != _NULL ) { observer . onChange ( ) ; } }
6726	public Shape ellipse ( double x , double y , double width , double height ) { m_ellipse . setFrame ( x , y , width , height ) ; return m_ellipse ; }
6728	public void startWrite ( ) { writerIterator = _NULL ; }
6784	private static int clampX ( int x , ConstraintWidget base ) { if ( x < base . getX ( ) ) { x = base . getX ( ) ; } else if ( x > base . getRight ( ) ) { x = base . getRight ( ) ; } return x ; }
6785	protected void handleJobResponse ( String ticket , JobsApiRequest apiRequest , AsyncResponse asyncResponse ) { apiRequest . getJobViewObservable ( ticket ) . map ( _NULL ) . map ( _NULL ) . onErrorReturn ( _NULL ) . subscribe ( _NULL ) ; }
6825	@ Override public Object [ ] next ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( ) ; } Object [ ] row = rows . get ( counter ) ; counter ++ ; return row ; }
6827	public boolean isAtSpawnLocation ( ) { return getDistanceToSpawnLocation ( ) < _NUM ; }
6832	private void checkState ( ) { if ( isCancelled ( ) ) throw new CancellationException ( _CHAR task was cancelled _CHAR ) ; }
6834	public static CharSequence downloadViaHttp ( String uri , ContentType type ) throws IOException { return downloadViaHttp ( uri , type , Integer . MAX_VALUE ) ; }
6835	public static SM_SYSTEM_MESSAGE STR_GATHER_FAIL_2_GATHER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6864	@ Override public int hashCode ( ) { return _NUM + _NUM * getFreeParameters ( ) + _NUM * getOrder ( ) + _NUM * MathUtils . hash ( data ) ; }
6881	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
6894	public double angle ( S2Point va ) { return Math . atan2 ( crossProd ( this , va ) . norm ( ) , this . dotProd ( va ) ) ; }
6898	private static void createStore ( Player activePlayer ) { if ( activePlayer . isInState ( CreatureState . RESTING ) ) { return ; } activePlayer . setStore ( new PrivateStore ( activePlayer ) ) ; activePlayer . setState ( CreatureState . PRIVATE_SHOP ) ; PacketSendUtility . broadcastPacket ( activePlayer , new SM_EMOTION ( activePlayer , EmotionType . OPEN_PRIVATESHOP , _NUM , _NUM ) , _BOOL ) ; }
6905	protected void resetFrame ( ) { mLastDispose = mDispose ; mLastImage = mCurrentImage ; mDispose = _NUM ; mDelay = _NUM ; }
6907	public static int addAndCheck ( int x , int y ) throws MathRuntimeException { long s = ( long ) x + ( long ) y ; if ( s < Integer . MIN_VALUE || s > Integer . MAX_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW_IN_ADDITION , x , y ) ; } return ( int ) s ; }
6910	protected GroupsGetMembersQueryWithFields fields ( List < UserField > value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
6911	static AnyVal < ? > anyNull ( ) { return AnyNull . instance ; }
6916	protected void handleResultsResponse ( Observable < PreResponse > preResponseObservable , AsyncResponse asyncResponse , ApiRequest apiRequest ) { HttpResponseMaker httpResponseMaker = new HttpResponseMaker ( objectMappers , dimensionDictionary ) ; preResponseObservable . flatMap ( _NULL ) . subscribe ( new HttpResponseChannel ( asyncResponse , httpResponseMaker , apiRequest . getFormat ( ) , apiRequest . getUriInfo ( ) ) ) ; }
6959	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
6962	public void inc ( KeyType [ ] container , long delta ) { for ( KeyType key : container ) { inc ( key , delta ) ; } }
6963	public synchronized void cancelled ( ) { completed = _BOOL ; cancelled = _BOOL ; notifyAll ( ) ; }
6974	public void removeObserver ( AppMenuObserver observer ) { mObservers . remove ( observer ) ; }
6986	public static SM_SYSTEM_MESSAGE STR_GUILD_DISPERSE_DONE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6993	@ Override public String toString ( ) { return this . getClass ( ) . getSimpleName ( ) + _CHAR : Excludes fields with these names : _CHAR + blacklist . toString ( ) ; }
7002	public static String toString ( URL url ) throws IOException { return toString ( url , Charset . defaultCharset ( ) ) ; }
7018	public JSONObject put ( String key , double value ) throws JSONException { put ( key , new Double ( value ) ) ; return this ; }
7026	public void resetStartTime ( ) { dStart = new Date ( ) ; }
7035	public void addRefType ( RefType type ) { nameToClass . put ( type . getClassName ( ) , type ) ; }
7040	protected void onPromoAcceptanceAnimationFinished ( ) { }
7051	public static String decodePassword ( String value ) { return new String ( Base64 . base64ToByteArray ( value ) ) ; }
7065	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; _compassView = new CompassView ( this ) ; setContentView ( _compassView ) ; mRegisteredSensor = _BOOL ; mSensorManager = ( SensorManager ) getSystemService ( SENSOR_SERVICE ) ; }
7076	public void addPermission ( String permissionName ) { AXmlNode permission = new AXmlNode ( _CHAR uses - permission _CHAR , _NULL , manifest ) ; AXmlAttribute < String > permissionNameAttr = new AXmlAttribute < String > ( _CHAR name _CHAR , permissionName , AXmlHandler . ANDROID_NAMESPACE ) ; permission . addAttribute ( permissionNameAttr ) ; }
7085	public void screenshot ( String message ) { try { addLogEntry ( new ScreenshotEntry ( webDriver , fileCreator , message ) ) ; } catch ( IOException e ) { LOG . error ( _CHAR Ca n _CHAR_CHAR , e ) ; } }
7093	public boolean contains ( final Vector3D p ) { return FastMath . abs ( getOffset ( p ) ) < tolerance ; }
7096	public void remove ( ) throws UnsupportedOperationException { if ( this . lastIndex < _NUM ) { throw new IllegalStateException ( _CHAR No header to remove . '' ) ; } this . allHeaders . remove ( this . lastIndex ) ; this . lastIndex =- _NUM ; this . currentIndex -- ; }
7099	public UsersGetSubscriptionsQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
7112	@ Override public int read ( char [ ] chars ) throws IOException { return read ( chars , _NUM , chars . length ) ; }
7117	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
7120	@ Override public String asFieldName ( ) { return fldName ; }
7174	public Website site ( ) { return mSite ; }
7183	public Type type ( String fldName ) { return fields . get ( fldName ) ; }
7188	public PhotosRestoreCommentQuery restoreComment ( UserActor actor , int commentId ) { return new PhotosRestoreCommentQuery ( getClient ( ) , actor , commentId ) ; }
7191	public Expression greaterThan ( Value v1 , Value v2 ) { return new BinaryExpression ( v1 , v2 , ExpressionType . GREATER_THAN ) ; }
7194	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
7199	@ Override public final int readByte ( ) { int temp ; try { temp = raf . read ( ) ; if ( temp == - _NUM ) { throw new RuntimeException ( _CHAR EOF _CHAR ) ; } read ++ ; return temp ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
7217	public void putGroupId ( String sampleName , String id ) { put ( sampleName , HiddenAttribute . GroupId , id ) ; }
7220	public static Style blue ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_BLUE ) ; return style ; }
7224	public TrackedEntityInstanceQueryParams addOrganisationUnit ( OrganisationUnit unit ) { this . organisationUnits . add ( unit ) ; return this ; }
7229	public void showContent ( ) { for ( int i = _NUM ; i < getChildCount ( ) ; i ++ ) { getChildAt ( i ) . setVisibility ( VISIBLE ) ; } }
7259	@ ManagedOperation ( description = _CHAR Refreshes all state tags ( new timestamp ) . _CHAR ) public void refreshStateTags ( ) { LOGGER . info ( _CHAR Recovery task : refreshing state tags . '' ) ; supervisionFacade . refreshStateTags ( ) ; LOGGER . info ( _CHAR Recovery task : finished refreshing state tags . '' ) ; }
7278	private static boolean isDoubleEqual ( double value , double valueToCompare ) { return ( Math . abs ( value - valueToCompare ) < _NUM . _NUM ) ; }
7302	public boolean isFull ( ) { return slotPosition ( getNumRecords ( ) + _NUM ) >= Buffer . BUFFER_SIZE ; }
7330	public static boolean isAttribute ( Object objValue ) { if ( objValue instanceof String ) { String stringValue = ( String ) objValue ; if ( stringValue . startsWith ( ATTRIBUTE_START ) && stringValue . endsWith ( ATTRIBUTE_END ) ) { return _BOOL ; } } return _BOOL ; }
7335	public Entry createEntry ( Remote object , long objectId , LRMIMethod [ ] lrmiMethods ) { Entry entry = new Entry ( object , objectId , lrmiMethods ) ; _objMap . put ( object , entry ) ; _objIdMap . put ( objectId , entry ) ; return entry ; }
7354	@ SuppressWarnings ( _CHAR WeakerAccess _CHAR ) public boolean hasHeader ( ) { return header != _NULL ; }
7365	@ Override public void writeNBT ( NBTTagCompound compound ) { super . writeNBT ( compound ) ; compound . setInteger ( _CHAR foodExhaustionTimer _CHAR , this . exhaustionTimer ) ; compound . setBoolean ( _CHAR bwmAdjustedFoodStats _CHAR , _BOOL ) ; }
7405	public void onReset ( ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { plugin . onReset ( ) ; } } }
7410	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
7418	public static ITextComponent handle ( ITextComponent message , Side side ) { final MessageEvent . Snackbar event = new MessageEvent . Snackbar ( message , side ) ; return OpenModLoader . getEventBus ( ) . post ( event ) ? event . getMessage ( ) : _NULL ; }
7428	public void appendChangeReport ( final ChangeReport changeReport ) { changeReports . add ( changeReport ) ; }
7431	public String toString ( ) { return _CHAR ActivatableInvocationHandler [ _CHAR + id + _CHAR , _CHAR + uproxy + _CHAR ] _CHAR ; }
7448	public void reclaim ( Spring s ) { s . item1 = _NULL ; s . item2 = _NULL ; if ( springs . size ( ) < maxSprings ) springs . add ( s ) ; }
7491	public UsersGetFollowersQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
7494	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_HOSTILE_DODGE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
7549	public boolean shouldExecute ( ) { if ( this . villager . getGrowingAge ( ) != _NUM || this . villager . getRNG ( ) . nextInt ( _NUM ) != _NUM ) { return _BOOL ; } if ( ! isWillingToMate ( villager ) ) { return _BOOL ; } else { this . mate = this . getNearbyMate ( ) ; return this . mate != _NULL && this . mate . getGrowingAge ( ) == _NUM ; } }
7561	public Schema newSchema ( ) { return schema ; }
7566	public boolean union ( RWSet other ) { if ( other == _NULL ) return _BOOL ; boolean ret = _BOOL ; if ( other . getCallsNative ( ) ) ret = setCallsNative ( ) ; if ( other . getFields ( ) . isEmpty ( ) && other . getGlobals ( ) . isEmpty ( ) ) return ret ; return sets . add ( other ) | ret ; }
7582	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_NEW_ADMIN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
7598	default boolean hasDataFromTls ( ) { return _BOOL ; }
7625	public String toStringTree ( boolean interpolate ) { ConfigurationNodeVisitor visitor = new ToStringTreeVisitor ( ) ; visit ( visitor , interpolate ) ; return visitor . toString ( ) ; }
7637	protected void garbageCollect ( VisualTable labels ) { Iterator iter = labels . tuples ( ) ; while ( iter . hasNext ( ) ) { VisualItem item = ( VisualItem ) iter . next ( ) ; if ( ! item . isStartVisible ( ) && ! item . isEndVisible ( ) ) { labels . removeTuple ( item ) ; } } }
7641	public boolean isDirect ( ) { return direct ; }
7644	public CreatePageWindow selectNthTemplate ( int i ) { templatesList . get ( i ) . click ( ) ; return this ; }
7647	public boolean contains ( Node n ) { return _BOOL ; }
7655	public boolean isEmpty ( ) { return text . length ( ) == _NUM ; }
7670	public void dumpASCII ( ) { dumpASCII ( new OutputStreamWriter ( System . out ) ) ; }
7674	public Expression isNotEmpty ( Value target ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
7675	public void createWindowSurface ( Object surface ) { if ( eGLSurface != EGL14 . EGL_NO_SURFACE ) { throw new IllegalStateException ( _CHAR surface already created _CHAR ) ; } eGLSurface = eglCore . createWindowSurface ( surface ) ; }
7708	public boolean keyReleased ( @ NotNull KeyEvent event ) { return _BOOL ; }
7728	public static SM_SYSTEM_MESSAGE STR_DUEL_YOU_LOSE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
7735	public void nextImage ( ) throws IOException { super . next ( ) ; }
7738	private Iterable < MultiTableScanResult > scanMultiTableRows ( final TableSet tables , final DeltaPlacement placement , final ByteBufferRange rowRange , final LimitCounter limit , final boolean includeDroppedTables , final boolean includeMirrorTables , final ReadConsistency consistency ) { return _NULL ; }
7742	public java . lang . Boolean isEscaped ( ) { return escaped ; }
7743	public static int handle ( Entity entity , int previousDimension , int newDimension ) { final EntityEvent . ChangeDimension event = new EntityEvent . ChangeDimension ( entity , previousDimension , newDimension ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event . isCanceled ( ) ? event . previousDimension : event . newDimension ; }
7765	private float calcAngle ( float value ) { return calcAngle ( value , mData . getYValueSum ( ) ) ; }
7801	private static boolean isSeparator ( char ch ) { return ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR ; }
7806	private void openCounterDataOutputStream ( ) throws DataFallbackException { if ( dOutput == _NULL ) { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR openDataOutputStream ( ) ; Opening the writer for the '' + counterFile . getName ( ) + _CHAR file _CHAR ) ; try { dOutput = new BufferedWriter ( new FileWriter ( counterFile ) ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } } }
7821	public void deleteTag ( String tagPath ) throws RepositoryException { deleteNode ( TAGS_ROOT + tagPath ) ; }
7844	public InfoflowResults analyzeAPKFile ( String fileName ) throws IOException , XmlPullParserException { return analyzeAPKFile ( fileName , _BOOL ) ; }
7845	public void resume ( ) { engine . resume ( ) ; }
7861	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
7877	public FieldVector3D < T > add ( final double factor , final Vector3D v ) { return new FieldVector3D < T > ( x . add ( factor * v . getX ( ) ) , y . add ( factor * v . getY ( ) ) , z . add ( factor * v . getZ ( ) ) ) ; }
7905	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
7944	public void collapsed ( boolean collapsed ) { this . collapsed = collapsed ; if ( collapsed ) { Assert . IsNull ( entryLookup ) ; entryLookup = new ConsoleEntryLookupTable ( ) ; } else { entryLookup = _NULL ; } applyFilter ( ) ; }
7945	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
7958	public int days ( ) { return this . days ; }
7971	public static List < String > propertyAsList ( Properties props , String propertyName ) { String prop = props . getProperty ( propertyName ) ; if ( prop != _NULL ) { return Arrays . asList ( prop . split ( Pattern . quote ( _CHAR , _CHAR ) ) ) ; } else { return _NULL ; } }
7975	private void resetBlockletProcessingCount ( ) { blockletProcessingCount . set ( _NUM ) ; }
7980	private int toEven ( float value ) { int i = ( int ) ( value + . _NUM ) ; if ( i % _NUM == _NUM ) { return i - _NUM ; } return i ; }
7994	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
8008	public static void registerBlock ( ResourceLocation id , Block block ) { registerBlock ( id , block , new ItemBlock ( block ) ) ; }
8030	private void drawShadows ( Canvas canvas ) { int height = ( int ) ( _NUM * getItemHeight ( ) ) ; topShadow . setBounds ( _NUM , _NUM , getWidth ( ) , height ) ; topShadow . draw ( canvas ) ; bottomShadow . setBounds ( _NUM , getHeight ( ) - height , getWidth ( ) , getHeight ( ) ) ; bottomShadow . draw ( canvas ) ; }
8054	public static SM_SYSTEM_MESSAGE STR_BUDDYLIST_BUDDY_LOGON ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8066	private void ping ( ) { try ( Jedis jedis = pool . getResource ( ) ) { String pong = jedis . ping ( ) ; redisIsHealthy = _CHAR PONG _CHAR . equals ( pong ) ; } catch ( JedisException ignored ) { redisIsHealthy = _BOOL ; } }
8077	public String toString ( ) { return _CHAR ClientMinPrincipalType _CHAR + Constraint . toString ( classes ) ; }
8081	public HumanTime s ( ) { return s ( _NUM ) ; }
8093	public int size ( ) { return _NUM ; }
8098	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
8105	public Dfp newDfp ( final long x ) { return new Dfp ( this , x ) ; }
8113	public double len ( ) { return Math . sqrt ( x * x + y * y ) ; }
8119	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_FRIENDLY_PARRY ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
8129	private void drawShadows ( Canvas canvas ) { int height = ( int ) ( _NUM * getItemHeight ( ) ) ; topShadow . setBounds ( _NUM , _NUM , getWidth ( ) , height ) ; topShadow . draw ( canvas ) ; bottomShadow . setBounds ( _NUM , getHeight ( ) - height , getWidth ( ) , getHeight ( ) ) ; bottomShadow . draw ( canvas ) ; }
8143	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
8144	private void destroyNotification ( int notificationId ) { if ( doesNotificationExist ( notificationId ) ) { mNotificationManager . cancel ( NOTIFICATION_NAMESPACE , notificationId ) ; mNotifications . delete ( notificationId ) ; updateSharedPreferencesEntry ( notificationId , _BOOL ) ; } }
8168	public String toString ( ) { return _CHAR MulticastAnnouncement [ _CHAR + sequenceNumber + _CHAR , _CHAR + host + _CHAR : _CHAR + port + _CHAR , _CHAR + Arrays . asList ( groups ) + _CHAR , _CHAR + serviceID + _CHAR ] _CHAR ; }
8180	private static boolean isEmpty ( @ Nonnull final File file , @ Nonnull final Charset charset ) { try { return FileUtil . isEmpty ( file , charset ) ; } catch ( final IOException e ) { throw new IllegalStateException ( _CHAR The given file could not be read . '' ) ; } }
8212	@ Override public void readCatalog ( Catalog catalog , String fileUrl ) throws IOException , CatalogException { URL url = new URL ( fileUrl ) ; URLConnection urlCon = url . openConnection ( ) ; readCatalog ( catalog , urlCon . getInputStream ( ) ) ; }
8239	public V put ( short key , V value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
8242	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
8304	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
8314	public static BigInteger pow ( final BigInteger k , int e ) throws IllegalArgumentException { if ( e < _NUM ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR can not raise an integral value to a negative power ( { _NUM } ^ { _NUM } ) _CHAR , k , e ) ; } return k . pow ( e ) ; }
8329	public GenericValue findByPrimaryKey ( GenericPK primaryKey ) throws GenericEntityException { if ( primaryKey == _NULL ) { return _NULL ; } GenericValue genericValue = GenericValue . create ( primaryKey ) ; genericDAO . select ( genericValue ) ; return genericValue ; }
8331	public Expression or ( Expression exp1 , Expression exp2 ) { return new LogicalExpression ( exp1 , exp2 , ExpressionType . OR ) ; }
8340	public boolean hasObservers ( ) { return observers . get ( ) . length != _NUM ; }
8342	public void showLoadingView ( ) { mLoadingView . showLoadingUI ( ) ; }
8363	protected BoardEditCommentQuery commentId ( int value ) { return unsafeParam ( _CHAR comment_id _CHAR , value ) ; }
8364	@ Override public boolean isXIncludeAware ( ) { try { return xmlReader . getFeature ( XINCLUDE_FEATURE ) ; } catch ( SAXException exc ) { return _BOOL ; } }
8375	public final boolean contains ( Node n ) { return s . contains ( n ) ; }
8385	private void checkState ( ) { if ( isCancelled ( ) ) throw new CancellationException ( _CHAR task was cancelled _CHAR ) ; }
8452	public static SM_SYSTEM_MESSAGE STR_DECOMPOSE_ITEM_SUCCEED ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
8484	@ Provides @ Singleton @ QueueZooKeeper CuratorFramework provideQueueZooKeeperConnection ( @ Global CuratorFramework curator ) { return withComponentNamespace ( curator , _CHAR queue _CHAR ) ; }
8510	public boolean isInitializationComplete ( ) { return ( currentStage == ZWaveNodeInitStage . DONE ) ; }
8515	public UsersGetQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
8521	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_ME_TO_B ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
8527	public void pushDirname ( File directory ) { if ( ! directory . isDirectory ( ) ) { throw new IllegalArgumentException ( _CHAR Only directories may be pushed ! _CHAR ) ; } mDirectories . insert ( directory . getName ( ) , _NUM ) ; mCurrentDir = directory ; }
8574	public AccessToken accessToken ( String code ) { return getClient ( _NULL ) ; }
8587	public static ExpectedCondition < Boolean > pageUrlContains ( final String url ) { return _NULL ; }
8593	protected PhotosPutTagQuery userId ( int value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
8632	public byte [ ] decrypt ( String string ) { return decrypt ( string . getBytes ( ) ) ; }
8656	private byte [ ] readPageHeader ( Page page ) { return page . readBytes ( _NUM , this . pageHeaderSize ) ; }
8675	protected VideoPutTagQuery userId ( int value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
8685	@ Override public boolean checkCondition ( ) { return ! league . hasMember ( invitedAlliance . getObjectId ( ) ) ; }
8687	protected final boolean removeInternal ( Tuple t ) { return ( m_tuples . remove ( t ) ) ; }
8696	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
8705	public static int hash ( double value ) { assert ! Double . isNaN ( value ) : _CHAR Values of NaN are not supported . '' ; long bits = Double . doubleToLongBits ( value ) ; return ( int ) ( bits ^ ( bits >> > _NUM ) ) ; }
8709	public static boolean emailIsValid ( String email ) { return EmailValidator . getInstance ( ) . isValid ( email ) ; }
8725	public String process ( Item word ) throws ProcessException { return wordBreak ( word ) ; }
8750	public String toString ( ) { return _CHAR ConstraintAlternatives _CHAR + Constraint . toString ( constraints ) ; }
8752	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
8759	public boolean isSolutionOptimal ( ) { return tableau != _NULL ? tableau . isOptimal ( ) : _BOOL ; }
8766	public boolean isRetained ( ) { return retained ; }
8767	public void add ( final BSPTree < S > node ) { for ( final BSPTree < S > existing : list ) { if ( node == existing ) { return ; } } list . add ( node ) ; }
8781	public boolean isRevive ( ) { return getItemId ( ) == ItemId . ITEM_REVIVE || getItemId ( ) == ItemId . ITEM_MAX_REVIVE ; }
8792	public void removeChangeReport ( final ChangeReport changeReport ) { changeReports . remove ( changeReport ) ; }
8822	@ Transactional public AssetExtraction createAssetExtraction ( Asset asset , PollableTask pollableTask ) { AssetExtraction assetExtraction = new AssetExtraction ( ) ; assetExtraction . setAsset ( asset ) ; assetExtraction . setContentMd5 ( asset . getContentMd5 ( ) ) ; assetExtraction . setPollableTask ( pollableTask ) ; assetExtractionRepository . save ( assetExtraction ) ; return assetExtraction ; }
8837	public BreakpointStmt newBreakpointStmt ( ) { return Jimple . v ( ) . newBreakpointStmt ( ) ; }
8857	public String toString ( ) { return _CHAR UnicastResponse [ _CHAR + host + _CHAR : _CHAR + port + _CHAR , _CHAR + Arrays . asList ( groups ) + _CHAR , _CHAR + registrar + _CHAR ] _CHAR ; }
8875	public boolean contains ( T obj ) { lock . lock ( ) ; try { return contains_impl ( obj ) ; } finally { lock . unlock ( ) ; } }
8890	@ Override public void run ( ) { LOGGER . debug ( _CHAR storing auditLogEntry : { } _CHAR , entry ) ; repository . storeEntry ( entry ) ; LOGGER . debug ( _CHAR stored auditLogEntry : { } _CHAR , entry ) ; }
8891	public void removeActionFireListener ( OnActionFiredListener listener ) { if ( listener != _NULL ) mActionFiredListeners . remove ( listener ) ; }
8907	public static boolean cancelPlayerDeletion ( PlayerAccountData accData ) { if ( accData . getDeletionDate ( ) == _NULL ) { return _BOOL ; } if ( accData . getDeletionDate ( ) . getTime ( ) > System . currentTimeMillis ( ) ) { accData . setDeletionDate ( _NULL ) ; storeDeletionTime ( accData ) ; return _BOOL ; } return _BOOL ; }
8919	private static double log2 ( double x ) { return Math . log ( x ) / Math . log ( _NUM ) ; }
8925	public void reset ( ) { isRender = _BOOL ; fractionValue =- _NUM ; radiusSize = _NUM ; originalColorValue = _NUM ; }
8927	private void AttackPath ( int kind , int num , int aKind ) { enemys [ kind ] [ num ] . begin_Attack ( aKind ) ; }
8929	public static boolean verifyPermissions ( int ... grantResults ) { if ( grantResults . length == _NUM ) { return _BOOL ; } for ( int result : grantResults ) { if ( result != PackageManager . PERMISSION_GRANTED ) { return _BOOL ; } } return _BOOL ; }
8930	public static boolean isNumber ( String string ) { String s = string . trim ( ) ; if ( s . length ( ) < _NUM ) return _BOOL ; double value = _NUM ; try { value = Double . parseDouble ( s ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
8942	public Stream < Entry < MatchedName , MetricValue >> filter ( Context t ) { return group_names_ . apply ( new HashSet < > ( t . getTSData ( ) . getCurrentCollection ( ) . getGroupPaths ( ) ) ) . stream ( ) . map ( _NULL ) . flatMap ( _NULL ) . flatMap ( _NULL ) ; }
8949	public RequestHandle post ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return post ( _NULL , url , params , responseHandler ) ; }
8950	public HumanTime m ( ) { return m ( _NUM ) ; }
8955	public void show ( ) { show ( _BOOL , _NULL ) ; }
8980	public static User createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , User . class ) ; }
8990	public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_INVITE_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
9011	public int minutes ( ) { return this . minutes ; }
9012	public AemRichText selectAll ( ) { switchToTextArea ( ) ; try { actions . sendKeys ( Keys . chord ( Keys . CONTROL , _CHAR a _CHAR ) ) . perform ( ) ; return this ; } finally { frameSwitcher . switchTo ( _CHAR / $ cq _CHAR ) ; } }
9021	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_GET_COIN_MULTI_IDARENA ( int num1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0s ) ; }
9022	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_DODGED_A_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
9032	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM , _NUM , _NUM , _NUM , _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
9042	public String toString ( ) { return getName ( ) ; }
9056	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
9060	public void initialiseSelectedSymbolizerIndex ( ) { this . selectedSymbolizerIndex = _NUM ; }
9082	public StatusCode withoutOverflow ( ) { return new StatusCode ( value & ~ _NUM ) ; }
9084	public R reduce ( List < AsyncResult < T >> results ) throws Exception { return reducer . reduce ( results ) ; }
9088	synchronized public static void toFile ( String context , String fileName , boolean append ) throws IOException { PrintStream ps = new PrintStream ( new FileOutputStream ( fileName , append ) ) ; ps . println ( context ) ; ps . flush ( ) ; ps . close ( ) ; }
9103	public void addImportDecl ( ImportDecl node ) { List < ImportDecl > list = ( parent == _NULL || state == _NULL ) ? getImportDeclListNoTransform ( ) : getImportDeclList ( ) ; list . addChild ( node ) ; }
9119	public CreatePageWindow typeTitle ( String title ) { titleField . setValue ( title ) ; return this ; }
9121	public void put ( String key , InputStream stream ) { put ( key , stream , _NULL ) ; }
9149	public void save ( String key , String value ) { prefs . edit ( ) . putString ( key , value ) . apply ( ) ; }
9152	public DirectedGraph load ( String fileName ) throws IOException , MaryConfigurationException { InputStream is = new FileInputStream ( fileName ) ; try { return load ( is ) ; } finally { is . close ( ) ; } }
9168	public String toString ( ) { return getDescriptor ( ) ; }
9175	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
9189	public void show ( Animation anim ) { show ( _BOOL , anim ) ; }
9193	@ Override protected void initComparator ( ) { if ( Comparator == _NULL ) Comparator = new NGramCachedNonSymmGraphComparator ( ) ; }
9194	public static < T extends GenericEntity > List < T > filterByDate ( List < T > datedValues , boolean allAreSame ) { return filterByDate ( datedValues , UtilDateTime . nowTimestamp ( ) , _NULL , _NULL , allAreSame ) ; }
9204	public synchronized void destroy ( ) { if ( operationsLogger . isLoggable ( Level . FINER ) ) { operationsLogger . entering ( TxnManagerImpl . class . getName ( ) , _CHAR destroy _CHAR ) ; } readyState . check ( ) ; ( new DestroyThread ( ) ) . start ( ) ; if ( operationsLogger . isLoggable ( Level . FINER ) ) { operationsLogger . exiting ( TxnManagerImpl . class . getName ( ) , _CHAR destroy _CHAR ) ; } }
9208	protected ListSelectionListener createListSelectionListener ( ) { return new ListSelectionHandler ( ) ; }
9209	boolean insert ( BinarySearchTreeNode < E > item ) { if ( this . root == _NULL ) { this . root = item ; this . size ++ ; return _BOOL ; } else { return this . insert ( item , this . root ) ; } }
9235	public static boolean isMetalLookAndFeel ( ) { return UIUtils . isMetalLookAndFeel ( ) ; }
9260	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
9261	public static EntryClassBase toEntryClassBase ( Class cls ) throws MarshalException { synchronized ( entryMap ) { return toEntryClassBase ( cls , _BOOL ) ; } }
9263	public SpaceTypeDescriptorBuilder addQueryExtensionInfo ( String path , Class < ? extends Annotation > queryExtensionAnnotation ) { if ( _queryExtensionsInfo == _NULL ) _queryExtensionsInfo = new TypeQueryExtensionsImpl ( ) ; _queryExtensionsInfo . add ( queryExtensionAnnotation , path ) ; return this ; }
9289	public PagesSaveQuery text ( String value ) { return unsafeParam ( _CHAR text _CHAR , value ) ; }
9297	public void write ( int [ ] data ) { for ( int i : data ) { writeInt ( i ) ; } }
9349	public void addVariableDecl ( VariableDecl node ) { List < VariableDecl > list = ( parent == _NULL || state == _NULL ) ? getVariableDeclListNoTransform ( ) : getVariableDeclList ( ) ; list . addChild ( node ) ; }
9362	public void prepareMatrixOffset ( boolean inverted ) { mMatrixOffset . reset ( ) ; if ( ! inverted ) { mMatrixOffset . postTranslate ( mViewPortHandler . offsetLeft ( ) , mViewPortHandler . getChartHeight ( ) - mViewPortHandler . offsetBottom ( ) ) ; } else { mMatrixOffset . setTranslate ( mViewPortHandler . offsetLeft ( ) , - mViewPortHandler . offsetTop ( ) ) ; mMatrixOffset . postScale ( _NUM . _NUM , - _NUM . _NUM ) ; } }
9364	@ Override public Scan open ( ) { return new ExplainScan ( p . open ( ) , schema ( ) , p . toString ( ) ) ; }
9365	protected void initComparator ( ) { if ( Comparator == _NULL ) Comparator = new NGramCachedGraphComparator ( ) ; }
9372	public void awaitCompletion ( ) throws InterruptedException { numRunningTasks . awaitZero ( ) ; }
9382	public String toString ( ) { return ( _CHAR ProxyTrustInvocationHandler [ main : _CHAR + main + _CHAR , boot : _CHAR + boot + _CHAR ] _CHAR ) ; }
9409	public void clear ( ) { mSize = _NUM ; }
9410	public static Future < BoxedUnit > zkAsyncCreateFullPathOptimistic ( final ZooKeeperClient zkc , final String pathToCreate , final byte [ ] data , final List < ACL > acl , final CreateMode createMode ) { Optional < String > parentPathShouldNotCreate = Optional . absent ( ) ; return zkAsyncCreateFullPathOptimistic ( zkc , pathToCreate , parentPathShouldNotCreate , data , acl , createMode ) ; }
9412	public boolean selectedFragmentPicture ( ) { Intent intent = new Intent ( Intent . ACTION_PICK , android . provider . MediaStore . Images . Media . EXTERNAL_CONTENT_URI ) ; intent . setType ( _CHAR image /* '' ) ; if ( intent . resolveActivity ( this . activity . getPackageManager ( ) ) != null ) { this . intentFragment = intent ; return true ; } else { return false ; } }
9413	public static void copyRawFile ( Context context , int resid , File file , String mode ) throws IOException , InterruptedException { final InputStream is = context . getResources ( ) . openRawResource ( resid ) ; copyFile ( file , is , mode ) ; }
9431	public void identifyNode ( int nodeId ) { enqueue ( new IdentifyNodeMessageClass ( ) . doRequest ( nodeId ) ) ; }
9432	public static Value rhs ( Unit unit ) { if ( unit instanceof AssignStmt ) return ( ( AssignStmt ) unit ) . getRightOp ( ) ; else return _NULL ; }
9437	public void tabHidden ( Tab tab ) { mRecentTabs . add ( new WeakReference < Tab > ( tab ) ) ; if ( mRecentTabs . size ( ) <= MAX_RECENT_TABS ) return ; freeze ( mRecentTabs . remove ( _NUM ) . get ( ) ) ; }
9440	public static String toString ( URI uri ) throws IOException { return toString ( uri , Charset . defaultCharset ( ) ) ; }
9453	public void addDims ( Dims node ) { List < Dims > list = ( parent == _NULL || state == _NULL ) ? getDimsListNoTransform ( ) : getDimsList ( ) ; list . addChild ( node ) ; }
9488	public static int clearListInfo ( Delegator delegator , String shoppingListId ) throws GenericEntityException { delegator . removeByAnd ( _CHAR ShoppingListItemSurvey _CHAR , UtilMisc . toMap ( _CHAR shoppingListId _CHAR , shoppingListId ) ) ; return delegator . removeByAnd ( _CHAR ShoppingListItem _CHAR , UtilMisc . toMap ( _CHAR shoppingListId _CHAR , shoppingListId ) ) ; }
9499	public static boolean isInitialized ( Context ctx ) { vitamioPackage = ctx . getPackageName ( ) ; vitamioLibraryPath = ContextUtils . getDataDir ( ctx ) + _CHAR lib / _CHAR ; return _BOOL ; }
9530	public String serialize ( ) { return toLockId ( socketAddress , shard ) ; }
9547	@ Override public Schema schema ( ) { return schema ; }
9560	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
9564	protected Object entryInitialFlow ( ) { return emptySet . clone ( ) ; }
9566	public static boolean isEmpty ( @ Nullable String s ) { return s == _NULL || s . isEmpty ( ) ; }
9575	public void addRetype ( RetypeableInstruction i ) { instructionsToRetype . add ( i ) ; }
9579	public int size ( ) { if ( this . nodes == _NULL ) { this . nodes = this . dfs ( this . root ) ; } return this . nodes . size ( ) ; }
9581	@ Override public void updateReport ( AllTablesReportDelta delta ) { checkNotNull ( delta , _CHAR delta _CHAR ) ; updateMetadata ( delta ) ; if ( delta . getTable ( ) . isPresent ( ) ) { updateTableData ( delta , delta . getTable ( ) . get ( ) ) ; } }
9597	private boolean permissionOnInAndroid ( String permission , Context context ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . M ) return _BOOL ; return PackageManager . PERMISSION_GRANTED == context . getPackageManager ( ) . checkPermission ( permission , context . getPackageName ( ) ) ; }
9604	Object decompressObject ( MarshObject objToDecompress ) throws IOException , ClassNotFoundException { CompressedMarshObjectConvertor cv = _NULL ; Object obj = _NULL ; try { cv = _compressedConvertorPool . getResource ( ) ; obj = cv . getObject ( objToDecompress ) ; } finally { if ( cv != _NULL ) _compressedConvertorPool . freeResource ( cv ) ; } return obj ; }
9609	private OverrideUrlLoadingResult clobberCurrentTabWithFallbackUrl ( String browserFallbackUrl , ExternalNavigationParams params ) { if ( ! params . isMainFrame ( ) ) { return OverrideUrlLoadingResult . NO_OVERRIDE ; } if ( params . getRedirectHandler ( ) != _NULL ) { params . getRedirectHandler ( ) . setShouldNotOverrideUrlLoadingUntilNewUrlLoading ( ) ; } return mDelegate . clobberCurrentTab ( browserFallbackUrl , params . getReferrerUrl ( ) , params . getTab ( ) ) ; }
9614	public SQLSchemaMigrator configure ( Connection connection ) { this . connection = connection ; this . metadata = new SQLModel ( connection ) ; return this ; }
9624	public static APIUser createAPIUser ( ) { return new APIUser ( _CHAR APIUser _CHAR + internalId ++ ) ; }
9627	@ Override public void onCaptureComplete ( Bitmap bitmap ) { }
9636	public Optional < Double > min ( ) { if ( isEmpty ( ) ) return Optional . empty ( ) ; return Optional . of ( buckets_ . get ( _NUM ) . getRange ( ) . getFloor ( ) ) ; }
9654	public void addFooter ( @ LayoutRes int layoutId ) { addFooter ( layoutId , _NULL ) ; }
9657	public boolean hasExpr ( ) { return getExprOpt ( ) . getNumChild ( ) != _NUM ; }
9693	@ Override protected void checkDuplicateValues ( ) { if ( contains ( ) ) { String code = _CHAR DuplicateKey _CHAR ; String value = toString ( fLocalValues ) ; String eName = fIdentityConstraint . getElementName ( ) ; String cName = fIdentityConstraint . getIdentityConstraintName ( ) ; reportSchemaError ( code , new Object [ ] { value , eName , cName } ) ; } }
9697	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
9720	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
9730	public boolean hasFilters ( ) { return filters != _NULL && ! filters . isEmpty ( ) ; }
9736	public PagesParseWikiQuery parseWiki ( UserActor actor , String text ) { return new PagesParseWikiQuery ( getClient ( ) , actor , text ) ; }
9768	public boolean add ( LogicalMetric logicalMetric ) { return this . put ( logicalMetric . getName ( ) , logicalMetric ) == _NULL ; }
9776	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_LEAVE_NOTIFY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
9782	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . main ) ; }
9784	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_NPC_DODGE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
9788	public boolean isShowLabel ( ) { if ( showLabel == _NULL ) { return _BOOL ; } else { return showLabel ; } }
9789	int generateBridgeSecret ( ) { SecureRandom randGen = new SecureRandom ( ) ; expectedBridgeSecret = randGen . nextInt ( Integer . MAX_VALUE ) ; return expectedBridgeSecret ; }
9796	@ Override public AemTextField clear ( ) { super . clear ( ) ; bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( _NULL ) ; return this ; }
9814	@ Override public void mousePressed ( MouseEvent e ) { synchronized ( mouseLock ) { mouseX = StdDraw . userX ( e . getX ( ) ) ; mouseY = StdDraw . userY ( e . getY ( ) ) ; mousePressed = _BOOL ; } }
9829	public Collection < String > targetFields ( ) { return new ArrayList < String > ( fldVals . keySet ( ) ) ; }
9842	public static MathRuntimeException createInternalError ( final Throwable cause ) { return new MathRuntimeException ( cause , LocalizedCoreFormats . INTERNAL_ERROR , REPORT_URL ) ; }
9867	public int depth ( ) { return depth ; }
9879	public static String toString ( URL url ) throws IOException { return toString ( url , Charset . defaultCharset ( ) ) ; }
9883	@ Override public int evictBatch ( int evictionQuota ) { return _evictionStrategy . evict ( evictionQuota ) ; }
9900	public boolean drain ( ) { return _BOOL ; }
9918	public HumanTime s ( int n ) { delta += SECOND * Math . abs ( n ) ; return this ; }
9938	public void removeFilter ( JpaRepositoryFilter filter ) { filters . remove ( filter ) ; }
9942	public static StatisticLevel toLevel ( int val , Level defaultLevel ) { return STATISTIC ; }
9944	protected void initComparator ( ) { if ( Comparator == _NULL ) Comparator = new NGramCachedGraphComparator ( ) ; }
9947	public Dfp newInstance ( final byte x ) { return new Dfp ( getField ( ) , x ) ; }
9952	public double readDouble ( ) throws IOException { return dis . readDouble ( ) ; }
9964	public void toggle ( ) { toggle ( _BOOL , _NULL , _NULL ) ; }
9965	public void addCatchClause ( CatchClause node ) { List < CatchClause > list = ( parent == _NULL || state == _NULL ) ? getCatchClauseListNoTransform ( ) : getCatchClauseList ( ) ; list . addChild ( node ) ; }
9972	protected boolean invalidStandaloneAttDef ( QName element , QName attribute ) { boolean state = _BOOL ; return state ; }
9981	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
9996	@ Override public void onCaptureStarted ( ) { }
10014	public static float handle ( float digSpeed , World world , IBlockState state , BlockPos pos ) { DigSpeed event = new DigSpeed ( digSpeed , world , state , pos ) ; return ! OpenModLoader . getEventBus ( ) . post ( event ) || event . getDigSpeed ( ) < _NUM . _NUM ? _NUM . _NUM : event . getDigSpeed ( ) ; }
10017	public static SM_SYSTEM_MESSAGE STR_STIGMA_RETURN ( int num0sp ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0sp ) ; }
10020	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
10024	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
10031	public String process ( Item syl ) throws ProcessException { Item ss = syl . getItemAs ( Relation . SYLLABLE_STRUCTURE ) ; if ( ss == _NULL ) { return _CHAR _NUM _CHAR ; } else if ( ss . getNext ( ) != _NULL ) { return _CHAR _NUM _CHAR ; } else if ( ss . getParent ( ) == _NULL ) { return _CHAR _NUM _CHAR ; } else { return wordBreak ( ss . getParent ( ) ) ; } }
10048	public boolean union ( RWSet other ) { throw new RuntimeException ( _CHAR Unsupported _CHAR ) ; }
10075	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
10090	public String process ( Item item ) throws ProcessException { return getPhoneFeature ( item , _CHAR ctype _CHAR ) ; }
10099	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
10100	@ Override public void accept ( TestValueVisitor visitor , FieldIdEnum fieldId ) { visitor . setTestValue ( fieldId , this . value ) ; }
10136	public void registerWith ( @ NotNull ScopedDataBinder binder ) { assert myFormFactor != _NULL : _CHAR register ( ) called on FormFactorApiComboBox before init ( ) _CHAR ; binder . register ( FormFactorUtils . getTargetComboBoxKey ( myFormFactor ) , this , TARGET_COMBO_BINDING ) ; }
10160	public Schema schema ( ) { return schema ; }
10178	public void save ( ) { PreferenceStore prefs = getPreferenceStore ( ) ; synchronized ( DdmsPreferenceStore . class ) { try { prefs . save ( ) ; } catch ( IOException ioe ) { } } }
10194	public String fieldName ( ) { return fldName ; }
10196	private static ExternalSystem resetBasicFields ( ExternalSystem input ) { input . setUsername ( _NULL ) ; input . setPassword ( _NULL ) ; return input ; }
10203	public static SM_SYSTEM_MESSAGE STR_GUILD_CREATED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10243	public static SM_SYSTEM_MESSAGE STR_ABYSS_WIN_CASTLE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
10263	public boolean write ( byte [ ] bytes , int offset , int size ) { System . arraycopy ( bytes , offset , outputData , curIndex , size ) ; curIndex += size ; return _BOOL ; }
10269	protected void finalize ( ) throws IOException { close ( ) ; }
10275	public static CharSequence downloadViaHttp ( String uri , ContentType type ) throws IOException { return downloadViaHttp ( uri , type , Integer . MAX_VALUE ) ; }
10280	public CreateSiteWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentWindow ) ) ; return this ; }
10285	public static SM_SYSTEM_MESSAGE STR_GUILD_EVENT_LOSE_FIELDARTIFACT ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
10290	public String viewDef ( ) { return qryData . toString ( ) ; }
10292	public int compareTo ( Issue otherIssue ) { return this . getKey ( ) . compareTo ( otherIssue . getKey ( ) ) ; }
10321	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
10328	public Boolean isAutoStart ( ) { return autoStart ; }
10342	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
10353	@ Deprecated public boolean staticCatalog ( ) { return getUseStaticCatalog ( ) ; }
10357	public final ProgressEvent updateSubtask ( String sSubtaskName ) { SubtaskName = sSubtaskName ; return this ; }
10358	private void sendAppEvent ( String eventName , Object params ) { ReactApplicationContext context = this . getReactApplicationContext ( ) ; if ( context == _NULL || ! context . hasActiveCatalystInstance ( ) ) { return ; } context . getJSModule ( RCTNativeAppEventEmitter . class ) . emit ( eventName , params ) ; }
10364	public float readFloat ( ) throws IOException { return dis . readFloat ( ) ; }
10374	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Utf8_info ci = ( CONSTANT_Utf8_info ) ( constant_pool [ name_index ] ) ; return ci . convert ( ) ; }
10379	public static List < Date > parseDateList ( List < String > dateList ) { List < Date > newList = new ArrayList < Date > ( ) ; if ( dateList == _NULL ) return newList ; for ( String value : dateList ) newList . add ( parseDate ( value ) ) ; return newList ; }
10383	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
10386	public boolean isEmpty ( ) { return _pos == _NUM ; }
10391	public final boolean isOverridingUiMode ( ) { return ( myOverride & CFG_UI_MODE ) != _NUM ; }
10397	protected double t ( final double m , final double mu , final double v , final double n ) { return ( m - mu ) / FastMath . sqrt ( v / n ) ; }
10423	@ Override public void keyPressed ( KeyEvent e ) { super . keyPressed ( e ) ; }
10427	public Object clone ( ) { return new NewStaticLock ( sc ) ; }
10430	public Boolean isAutoConnect ( ) { return autoConnect ; }
10439	public static IBlockState ParseBlockType ( String s ) { if ( s == _NULL ) return _NULL ; Block block = ( Block ) Block . blockRegistry . getObject ( new ResourceLocation ( s ) ) ; if ( block instanceof BlockAir && ! s . equals ( _CHAR air _CHAR ) ) return _NULL ; return block . getDefaultState ( ) ; }
10451	public void onGet ( ) { onPost ( ) ; }
10478	public long id ( ) { return id ; }
10490	public void onUpOrCancel ( long time ) { if ( mPinch0TabIndex >= _NUM ) { startAnimation ( time , OverviewAnimationType . REACH_TOP ) ; requestUpdate ( ) ; } commitDiscard ( time , _BOOL ) ; resetInputActionIndices ( ) ; springBack ( time ) ; }
10509	public SootFieldRef makeFieldRef ( SootClass declaringClass , String name , Type type , boolean isStatic ) { return new AbstractSootFieldRef ( declaringClass , name , type , isStatic ) ; }
10535	public ChangeSet addAllToCollection ( String path , Collection < ? extends Serializable > newItems ) { return add ( new AddAllToCollectionSpaceEntryMutator ( path , newItems ) ) ; }
10564	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MEMBER_RANK_DONE_GUILD_NEWBIE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10603	public boolean isCaseSensitive ( ) { return sensitive ; }
10607	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
10608	private int klattRule6 ( Element segment ) { Element syllable = getSyllable ( segment ) ; if ( isInOnset ( segment ) && ! isWordInitial ( syllable ) ) { return getPropertyAsInteger ( _CHAR rule6 . onset _CHAR ) ; } else if ( isInCoda ( segment ) ) { return getPropertyAsInteger ( _CHAR rule6 . coda _CHAR ) ; } return _NUM ; }
10625	public void restoreFp ( ) { increaseFp ( TYPE . NATURAL_FP , _NUM ) ; }
10648	public MessagesAddChatUserQuery addChatUser ( UserActor actor , int chatId , int userId ) { return new MessagesAddChatUserQuery ( getClient ( ) , actor , chatId , userId ) ; }
10661	@ Override public final void readFully ( byte ba [ ] , int off , int len ) throws IOException { dis . readFully ( ba , off , len ) ; }
10718	public String process ( Item seg ) throws ProcessException { if ( seg == _NULL ) { return _CHAR _NUM _CHAR ; } else if ( seg . getPrevious ( ) == _NULL ) { return seg . getFeatures ( ) . getObject ( _CHAR end _CHAR ) . toString ( ) ; } else { return Float . toString ( seg . getFeatures ( ) . getFloat ( _CHAR end _CHAR ) - seg . getPrevious ( ) . getFeatures ( ) . getFloat ( _CHAR end _CHAR ) ) ; } }
10736	public static void register ( String owner , GUIHandler handler ) { handlers . put ( owner , handler ) ; }
10744	public boolean contains ( final Vector3D p ) { return distance ( p ) < tolerance ; }
10750	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
10754	public TapTarget outerCircleColor ( @ ColorRes int color ) { this . outerCircleColor = color ; return this ; }
10777	public String readPassword ( ) throws CommandException { char [ ] readPassword = getSystemConsole ( ) . readPassword ( ) ; return new String ( readPassword ) ; }
10790	private boolean checkIfBatchIsProcessedCompletely ( BatchResult batch ) { if ( counter < batch . getSize ( ) ) { return _BOOL ; } else { return _BOOL ; } }
10806	public Response doGet ( String url ) { return doGet ( url , _NULL ) ; }
10810	public RequestHandle head ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return head ( _NULL , url , params , responseHandler ) ; }
10812	String completedLedgerZNode ( long firstTxId , long lastTxId , long logSegmentSeqNo ) { return String . format ( _CHAR % s / % s _CHAR , logMetadata . getLogSegmentsPath ( ) , completedLedgerZNodeName ( firstTxId , lastTxId , logSegmentSeqNo ) ) ; }
10818	public static boolean isHttp ( String scheme ) { return scheme . equalsIgnoreCase ( _CHAR http _CHAR ) || scheme . equalsIgnoreCase ( _CHAR https _CHAR ) ; }
10834	public static File [ ] sortLocalFolder ( File [ ] files ) { switch ( mSortOrder ) { case _NUM : files = FileStorageUtils . sortLocalFilesByName ( files ) ; break ; case _NUM : files = FileStorageUtils . sortLocalFilesByDate ( files ) ; break ; case _NUM : files = FileStorageUtils . sortLocalFilesBySize ( files ) ; break ; } return files ; }
10865	public static int hash32 ( final String text , int from , int length ) { return hash32 ( text . substring ( from , from + length ) ) ; }
10893	public boolean contains ( T obj ) { throw new RuntimeException ( _CHAR ConcurrentSegmentedStoredList : : contains not supported _CHAR ) ; }
10913	private FlatServoRail flatten ( ) { if ( isStatic ( ) ) { return this ; } if ( color == FzColor . NO_COLOR && component instanceof GenericPlaceholder ) { return ServoFeature . static_rail ; } return this ; }
10918	public void disconnectFromBroker ( final MqttAsyncConnection connection ) { try { connection . disconnect ( new MqttDisconnectionResultHandler ( ) ) ; } catch ( SpyException e ) { Platform . runLater ( new MqttEventHandler ( new MqttDisconnectionAttemptFailureEvent ( connection , e ) ) ) ; logger . error ( e . getMessage ( ) , e ) ; } }
10930	public static float smoothstep ( float t ) { return t * t * ( _NUM . _NUM - _NUM . _NUM * t ) ; }
10932	private void startNetLog ( ) { File outputFile ; try { outputFile = File . createTempFile ( _CHAR cronet _CHAR , _CHAR log _CHAR , Environment . getExternalStorageDirectory ( ) ) ; cronetEngine . startNetLogToFile ( outputFile . toString ( ) , _BOOL ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
10936	public Expression greaterThanEqual ( Value v1 , Value v2 ) { return new BinaryExpression ( v1 , v2 , ExpressionType . GREATER_THAN_OR_EQUAL ) ; }
10948	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
10950	private static boolean eq ( Object o1 , Object o2 ) { return ( o1 == _NULL ? o2 == _NULL : o1 . equals ( o2 ) ) ; }
10963	@ Override public boolean checkUniqueParticleAttribution ( SubstitutionGroupHandler subGroupHandler ) throws XMLSchemaException { return _BOOL ; }
10980	@ Requires ( Resolved . class ) @ Nullable public EnumValue lookupValue ( String name ) { return valueByName . get ( name ) ; }
10997	public int indexOf ( String name ) { Integer index = name2index . get ( name ) ; if ( index == _NULL ) return - _NUM ; else return index ; }
11024	private void notifyDataSourceAboutToUnloaded ( DataStore dataStore ) { List < DataSourceUpdatedInterface > copyListenerList = new ArrayList < DataSourceUpdatedInterface > ( listenerList ) ; for ( DataSourceUpdatedInterface listener : copyListenerList ) { listener . dataSourceAboutToUnloaded ( dataStore ) ; } }
11025	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
11029	public void toggleSelection ( int position ) { toggleSelection ( position , _BOOL ) ; }
11055	public static String toString ( URI uri , String encoding ) throws IOException { return toString ( uri , Charsets . toCharset ( encoding ) ) ; }
11063	public void addModifier ( Modifier node ) { List < Modifier > list = ( parent == _NULL || state == _NULL ) ? getModifierListNoTransform ( ) : getModifierList ( ) ; list . addChild ( node ) ; }
11066	public static SM_SYSTEM_MESSAGE STR_FACTION_NEUTRAL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11071	private boolean queryRelativeCatalogs ( ) { if ( resources == _NULL ) readProperties ( ) ; if ( resources == _NULL ) return defaultRelativeCatalogs ; try { String allow = resources . getString ( _CHAR relative - catalogs _CHAR ) ; return ( allow . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) || allow . equalsIgnoreCase ( _CHAR yes _CHAR ) || allow . equalsIgnoreCase ( _CHAR _NUM _CHAR ) ) ; } catch ( MissingResourceException e ) { return defaultRelativeCatalogs ; } }
11076	@ Override public final void storeData ( final IFallback object ) throws IDBPersistenceException { if ( object instanceof FallbackImpl ) { if ( ! ( ( FallbackImpl ) object ) . toString ( ) . equals ( FallbackImpl . ERROR ) ) { storage . add ( object ) ; } else { throw new IDBPersistenceException ( _CHAR Connection to the DB has been lost _CHAR ) ; } } }
11087	public static String toNumbers ( String address ) { StringBuilder buf = new StringBuilder ( ) ; for ( int i = _NUM ; i < address . length ( ) ; i ++ ) buf . append ( String . format ( _CHAR % d . '' , ( int ) address . charAt ( i ) ) ) ; return buf . toString ( ) ; }
11104	public void updateSize ( int x , int y , int w , int h ) { this . x = x ; this . y = y ; this . w = w ; this . h = h ; }
11117	public Map < String , Object > createContainer ( Map < String , Object > request ) { AssertUtil . assertNotNull ( request . get ( _CHAR Cmd _CHAR ) , _CHAR Cmd _CHAR ) ; Map < String , Object > response = new HashMap < > ( ) ; response . put ( _CHAR Id _CHAR , String . format ( _CHAR % _NUM _CHAR , idSequence . incrementAndGet ( ) ) ) ; return response ; }
11134	public NotesCreateCommentQuery createComment ( UserActor actor , int noteId , String message ) { return new NotesCreateCommentQuery ( getClient ( ) , actor , noteId , message ) ; }
11179	public void close ( ) { if ( blk != _NULL ) { tx . bufferMgr ( ) . unpin ( currentBuff ) ; blk = _NULL ; currentBuff = _NULL ; numberOfRecords =- _NUM ; } }
11221	public void onContentViewSeen ( ) { }
11223	public Builder stepNumberTextColor ( int stepNumberTextColor ) { this . stepNumberTextColor = stepNumberTextColor ; return this ; }
11245	public V put ( long key , V value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
11258	public void removeAllActionFireListeners ( ) { mActionFiredListeners . clear ( ) ; }
11266	public static String toString ( URL url , String encoding ) throws IOException { return toString ( url , Charsets . toCharset ( encoding ) ) ; }
11268	public static void checkNotNull ( Object o ) throws NullArgumentException { if ( o == _NULL ) { throw new NullArgumentException ( LocalizedCoreFormats . NULL_NOT_ALLOWED ) ; } }
11269	public StructStorageStat [ ] listStorages ( TrackerServer trackerServer , String groupName ) throws IOException { final String storageIpAddr = _NULL ; return this . listStorages ( trackerServer , groupName , storageIpAddr ) ; }
11285	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
11286	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
11304	public boolean isIgnoreCheck ( ) { if ( ignoreCheck == _NULL ) { return _BOOL ; } else { return ignoreCheck ; } }
11346	public void close ( ) { getDiskCache ( ) . close ( ) ; }
11358	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
11362	public int size ( ) { return _NUM ; }
11378	public File showOpenDialog ( ) { return showDialog ( _NULL ) ; }
11380	public boolean hasProgram ( ) { return program != _NULL ; }
11397	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_REMAIN_TIME_5 ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
11411	public void put ( String key , InputStream stream , String name , String contentType ) { if ( key != _NULL && stream != _NULL ) { streamParams . put ( key , new StreamWrapper ( stream , name , contentType ) ) ; } }
11436	public static DalvikMethodStruct of ( Method method ) { return new DalvikMethodStruct ( method ) ; }
11449	public static String toString ( URL url , String encoding ) throws IOException { return toString ( url , Charsets . toCharset ( encoding ) ) ; }
11470	public boolean include ( Column col , String name ) { return _BOOL ; }
11484	public static String decodePassword ( final String value ) { return ConversionUtils . base64ToString ( value ) ; }
11536	public Color mul ( Color color ) { this . r *= color . r ; this . g *= color . g ; this . b *= color . b ; this . a *= color . a ; clamp ( ) ; return this ; }
11538	public static int hash ( long value ) { return ( ( int ) ( value ^ ( value >> > _NUM ) ) ) * _NUM ; }
11553	public MovePageWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
11559	public static Style blueGrey ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_BLUE_GREY ) ; return style ; }
11560	public void writeToUrlConnection ( HttpURLConnection urlConnection ) throws IOException { }
11588	public short min ( ) { if ( size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR can not find minimum of an empty list _CHAR ) ; } short min = Short . MAX_VALUE ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( _data [ i ] < min ) { min = _data [ i ] ; } } return min ; }
11589	public boolean isCreateTab ( ) { if ( createTab == _NULL ) { return _BOOL ; } else { return createTab ; } }
11595	public void print ( int ch ) throws IOException { write ( ch ) ; throw new RuntimeException ( ) ; }
11601	public PictureDrawable createPictureDrawable ( ) { return new PictureDrawable ( picture ) ; }
11620	protected void afterMove ( ) { if ( ! Silent ) synchronized ( System . err ) { System . err . println ( this . getName ( ) + _CHAR : _CHAR + _CHAR Move finished ... _CHAR ) ; } super . afterMove ( ) ; addBehaviour ( new InformForCompleteMoveBehaviour ( ) ) ; }
11630	public MessagesMarkAsReadQuery messageIds ( Integer ... value ) { return unsafeParam ( _CHAR message_ids _CHAR , value ) ; }
11635	public void merge ( RegistrySearchResponse other ) { AssertUtil . assertNotNull ( other , _CHAR other _CHAR ) ; if ( other . results != _NULL ) { numResults += other . numResults ; if ( results == _NULL ) { results = new ArrayList < Result > ( ) ; } results . addAll ( other . results ) ; } }
11725	public boolean hasLdapId ( ) { return ldapId != _NULL && ! ldapId . isEmpty ( ) ; }
11745	public TypeVariableBV typeVariable ( Type type ) { return typeVariable ( hierarchy . typeNode ( type ) ) ; }
11749	private void sortDrawablesOldest ( ) { Sort . instance ( ) . sort ( drawables , _NULL ) ; refreshDrawableDisplay ( ) ; }
11752	public EnterMonitorInst newEnterMonitorInst ( ) { return new BEnterMonitorInst ( ) ; }
11766	public String toString ( cp_info constant_pool [ ] ) { return Float . toString ( bytes ) ; }
11778	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Class_info cc = ( CONSTANT_Class_info ) ( constant_pool [ class_index ] ) ; CONSTANT_NameAndType_info cn = ( CONSTANT_NameAndType_info ) ( constant_pool [ name_and_type_index ] ) ; return cc . toString ( constant_pool ) + _CHAR . _CHAR + cn . toString ( constant_pool ) ; }
11781	public int readByte ( ) { bytesRead ++ ; return ( ( int ) arr [ pos ++ ] ) & _NUM ; }
11800	protected GroupsIsMemberQuery groupId ( String value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
11806	public static SM_SYSTEM_MESSAGE STR_MSG_DISCARD_ITEM_MULTI ( String value1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0s ) ; }
11813	public AdsRemoveOfficeUsersQuery removeOfficeUsers ( UserActor actor , int accountId , String ids ) { return new AdsRemoveOfficeUsersQuery ( getClient ( ) , actor , accountId , ids ) ; }
11815	public static < T extends RealFieldElement < T >> T min ( final T e1 , final T e2 ) { return e1 . subtract ( e2 ) . getReal ( ) >= _NUM ? e2 : e1 ; }
11837	public boolean isFinished ( ) { return mFinished ; }
11843	private void init ( T referent ) { _hashCode = System . identityHashCode ( referent ) ; }
11850	public synchronized void removeFrameSavedListener ( FrameSavedListener listener ) { listenerList . remove ( FrameSavedListener . class , listener ) ; }
11863	public static void fail ( String message ) { throw new IllegalStateException ( message == _NULL ? _CHAR _CHAR : message ) ; }
11889	private void drawShadows ( Canvas canvas ) { int height = ( int ) ( _NUM * getItemHeight ( ) ) ; topShadow . setBounds ( _NUM , _NUM , getWidth ( ) , height ) ; topShadow . draw ( canvas ) ; bottomShadow . setBounds ( _NUM , getHeight ( ) - height , getWidth ( ) , getHeight ( ) ) ; bottomShadow . draw ( canvas ) ; }
11933	public int compareTo ( Issue otherIssue ) { return this . getKey ( ) . compareTo ( otherIssue . getKey ( ) ) ; }
11946	public GenericValue queryOne ( ) throws GenericEntityException { GenericValue result = EntityUtil . getOnly ( queryList ( ) ) ; return result ; }
11971	public static boolean isReady ( String placementId ) { return isSupported ( ) && isInitialized ( ) && placementId != _NULL && Placement . isReady ( placementId ) ; }
11985	public void readInputData ( Reader inputReader ) throws Exception { String inputText = FileUtils . getReaderAsString ( inputReader ) ; setInputData ( inputText ) ; }
11990	public boolean isEnable ( ) { return enable ; }
11991	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
12018	public void addSLDEditorFileUpdateListener ( SLDEditorDataUpdateInterface listener ) { sldEditorFileUpdateListenerList . add ( listener ) ; }
12019	public static void addRecentFile ( File file ) { addRecentFile ( file . getPath ( ) ) ; }
12048	public static SM_SYSTEM_MESSAGE STR_BUDDYLIST_BUDDYS_LIST_FULL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12059	public boolean contains ( ReadModifiers modifiers ) { return super . contains ( modifiers ) ; }
12065	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
12083	@ Override public Object [ ] next ( ) { return currentchunk . next ( ) ; }
12094	public static int randomNumberBetween ( double begin , double end ) { if ( begin > end ) throw new IllegalArgumentException ( _CHAR Begin must not be less than end _CHAR ) ; return ( int ) begin + ( int ) ( Math . random ( ) * ( ( end - begin ) + _NUM ) ) ; }
12095	private void sortDrawablesNewest ( ) { Sort . instance ( ) . sort ( drawables , _NULL ) ; refreshDrawableDisplay ( ) ; }
12098	public CarouselOptions maxScrollingVelocity ( int maxScrollingVelocity ) { mMaxScrollingVelocity = maxScrollingVelocity ; return this ; }
12105	public static void addResource ( Offer . Builder o , String name , String role ) { Resource . Builder b = o . addResourcesBuilder ( ) . setType ( Value . Type . RANGES ) . setName ( name ) ; if ( role != _NULL ) { b . setRole ( role ) ; } }
12154	public boolean sameObjectId ( int objectId ) { return this . getObjectId ( ) == objectId ; }
12175	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
12194	public boolean write ( byte [ ] audioData ) { return write ( audioData , _NUM , audioData . length ) ; }
12199	public boolean clearTouched ( ) { boolean result = _touched ; _touched = _BOOL ; return result ; }
12211	private void refreshStickyHeaders ( ) { if ( $ table != _NULL ) { $ table . stickyTableHeaders ( _CHAR destroy _CHAR ) ; setupStickyHeader ( ) ; } }
12226	public static Intent createShortcutIntent ( String url ) { Intent shortcutIntent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( url ) ) ; shortcutIntent . putExtra ( REUSE_URL_MATCHING_TAB_ELSE_NEW_TAB , _BOOL ) ; return shortcutIntent ; }
12246	private boolean isAttributeComboBoxPopulated ( ) { return ! populatingAttributeComboBox ; }
12257	public static String toString ( URI uri , Charset encoding ) throws IOException { return toString ( uri . toURL ( ) , Charsets . toCharset ( encoding ) ) ; }
12298	public Node addNode ( ) { int nrow = addNodeRow ( ) ; return ( Node ) m_nodeTuples . getTuple ( nrow ) ; }
12311	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_FRIENDLY_BLOCK ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
12347	public static LocalResourceStatus fromBytes ( byte [ ] bytes ) throws SVNException { return ( ( bytes != _NULL ) && ( bytes . length > _NUM ) ) ? new LocalResourceStatus ( bytes ) : _NULL ; }
12416	public boolean hasAggregationType ( ) { return this . aggregationType != _NULL ; }
12426	public static void removeMacro ( Player player , int macroOrder ) { if ( player . getMacroList ( ) . removeMacro ( macroOrder ) ) { DAOManager . getDAO ( PlayerMacrossesDAO . class ) . deleteMacro ( player . getObjectId ( ) , macroOrder ) ; } }
12442	public static < T > Collection < T > intersection ( Collection < T > c1 , Collection < T > c2 ) { Set < T > set1 = new HashSet < > ( c1 ) ; set1 . retainAll ( new HashSet < > ( c2 ) ) ; return set1 ; }
12456	public final TestSubscriber < T > assertError ( ) { assertNotComplete ( ) ; int s = errors . size ( ) ; if ( s == _NUM ) { throw new AssertionError ( _CHAR No error _CHAR , _NULL ) ; } if ( s > _NUM ) { throw new AssertionError ( _CHAR Multiple errors : _CHAR + s , _NULL ) ; } return this ; }
12458	public static SM_SYSTEM_MESSAGE STR_MSG_GET_CASH_TITLE ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
12471	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
12509	public MessagesGetChatUsersQueryWithChatIds nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
12517	public AudioSearchQuery lyrics ( Boolean value ) { return unsafeParam ( _CHAR lyrics _CHAR , value ) ; }
12523	@ Override public void onCardboardTrigger ( ) { Log . i ( TAG , _CHAR onCardboardTrigger _CHAR ) ; vibrator . vibrate ( _NUM ) ; }
12541	private boolean canRecreateLegion ( Player activePlayer , Legion legion ) { if ( ! isBrigadeGeneral ( activePlayer ) ) { PacketSendUtility . sendPacket ( activePlayer , SM_SYSTEM_MESSAGE . STR_GUILD_DISPERSE_ONLY_MASTER_CAN_DISPERSE ) ; return _BOOL ; } else if ( ! legion . isDisbanding ( ) ) { return _BOOL ; } return _BOOL ; }
12563	public V remove ( int key ) { V prev = _NULL ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
12571	public PhotosMakeCoverQuery makeCover ( UserActor actor , int photoId ) { return new PhotosMakeCoverQuery ( getClient ( ) , actor , photoId ) ; }
12576	public void removeSwipeListener ( SwipeListener listener ) { if ( mListeners == _NULL ) { return ; } mListeners . remove ( listener ) ; }
12577	public boolean isNull ( ) { return myObject == _NULL ; }
12582	public void notifyDotAttackedObservers ( Creature creature , Effect effect ) { notifyObservers ( ObserverType . DOT_ATTACKED , creature , effect ) ; }
12593	public static boolean urlIsValid ( String url ) { return new UrlValidator ( ) . isValid ( url ) ; }
12603	public static String toString ( URL url , String encoding ) throws IOException { return toString ( url , Charsets . toCharset ( encoding ) ) ; }
12609	public boolean pop ( ) { return fData [ -- fDepth ] ; }
12618	private static < T > SortedSet < T > cast ( Iterable < T > iterable ) { return ( SortedSet < T > ) iterable ; }
12630	public SQLDataMigrator graph ( MindmapsGraph graph ) { this . graph = graph ; return this ; }
12646	public void tabPageLoadStarted ( int id ) { StripLayoutTab tab = findTabById ( id ) ; if ( tab != _NULL ) tab . pageLoadingStarted ( ) ; }
12655	public static String createBgRGBString ( Color c , double opacity ) { return _CHAR - fx - control - inner - background : _CHAR + createRGBAString ( c , opacity ) ; }
12664	public void initialiseSelectedRuleIndex ( ) { this . selectedRuleIndex = _NUM ; }
12667	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
12678	public boolean hasRemote ( ) { return org . tigris . subversion . svnclientadapter . utils . SVNStatusUtils . hasRemote ( this ) ; }
12715	public static String toString ( final int intValue ) { return Integer . toHexString ( intValue ) ; }
12725	public int size ( ) { return _NUM ; }
12733	public void addArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getArgumentListNoTransform ( ) : getArgumentList ( ) ; list . addChild ( node ) ; }
12735	public static void recordAction ( int action ) { assert action >= _NUM && action < SIGNIN_PROMO_COUNT ; RecordHistogram . recordEnumeratedHistogram ( _CHAR Signin . AndroidSigninPromoAction _CHAR , action , SIGNIN_PROMO_COUNT ) ; }
12738	public boolean isProcessed ( ) { return processed ; }
12740	public Boolean doOutputSTL ( ) { return doOutputSTL ; }
12745	public static Map < String , Object > sendOrderChangeNotification ( DispatchContext ctx , Map < String , ? extends Object > context ) { return sendOrderNotificationScreen ( ctx , context , _CHAR PRDS_ODR_CHANGE _CHAR ) ; }
12748	public String loadString ( String key , String defValue ) { return prefs . getString ( key , defValue ) ; }
12751	public static final void updateGroup ( Player player , GroupEvent groupEvent ) { PlayerGroup group = player . getPlayerGroup2 ( ) ; if ( group != _NULL ) { group . onEvent ( new PlayerGroupUpdateEvent ( group , player , groupEvent ) ) ; } }
12763	private void requestForUpload ( OCFile file ) { FileUploader . UploadRequester requester = new FileUploader . UploadRequester ( ) ; requester . uploadUpdate ( mContext , mAccount , file , FileUploader . LOCAL_BEHAVIOUR_MOVE , _BOOL ) ; mTransferWasRequested = _BOOL ; }
12796	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
12807	private static float calculateAspectRatio ( float left , float top , float right , float bottom ) { return ( right - left ) / ( bottom - top ) ; }
12813	public static long readLong ( byte [ ] bytes , int start ) { return ( ( long ) ( readInt ( bytes , start ) ) << _NUM ) + ( readInt ( bytes , start + _NUM ) & _NUM ) ; }
12818	public void clear ( ) { prefix = _NULL ; localpart = _NULL ; rawname = _NULL ; uri = _NULL ; }
12821	@ Override public boolean isNonSingular ( ) { return nonSingular ; }
12839	protected final Tuple addInternal ( Tuple t ) { if ( m_tuples . add ( t ) ) { return t ; } else { return _NULL ; } }
12844	public void addTypeDecl ( TypeDecl node ) { List < TypeDecl > list = ( parent == _NULL || state == _NULL ) ? getTypeDeclListNoTransform ( ) : getTypeDeclList ( ) ; list . addChild ( node ) ; }
12898	public void addNewSpawnMap ( SpawnMap spawnMap ) { if ( templates == _NULL ) { templates = new ArrayList < SpawnMap > ( ) ; } templates . add ( spawnMap ) ; }
12905	static void zero ( float [ ] [ ] array ) { for ( float [ ] aFloat : array ) { Arrays . fill ( aFloat , - _NUM ) ; } }
12915	@ CalledByNative static void openDateAndTimeSettings ( Context context ) { Intent intent = new Intent ( android . provider . Settings . ACTION_DATE_SETTINGS ) ; try { intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; context . startActivity ( intent ) ; } catch ( android . content . ActivityNotFoundException ex ) { } }
12917	public final boolean isAlternatingNightMode ( ) { return ( myAlternate & CFG_NIGHT_MODE ) != _NUM ; }
12919	public static IOFileFilter trueFileFilter ( ) { return TrueFileFilter . TRUE ; }
12966	public int size ( ) { return _NUM ; }
12985	public static Date max ( Collection < Date > dates ) { Date latest = _NULL ; for ( Date d : dates ) { latest = max ( d , latest ) ; } return latest ; }
13017	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
13032	public static String toString ( URI uri ) throws IOException { return toString ( uri , Charset . defaultCharset ( ) ) ; }
13043	private void sendCommitError ( String errorMessage ) { sendJson ( Json . object ( ACTION , ACTION_COMMIT , ERROR , errorMessage ) ) ; }
13068	public void deleteComponent ( String componentName ) { getComponent ( componentName ) . delete ( ) ; }
13086	@ Requires ( Resolved . class ) @ Nullable public Method lookupMethod ( String name ) { return methodByName . get ( name ) ; }
13093	public long blockNumber ( ) { return blockNum ; }
13104	public int removeByPrimaryKey ( GenericPK primaryKey ) throws GenericEntityException { if ( primaryKey == _NULL ) return _NUM ; if ( Debug . verboseOn ( ) ) Debug . logVerbose ( _CHAR Removing GenericPK : _CHAR + primaryKey . toString ( ) , module ) ; return genericDAO . delete ( primaryKey ) ; }
13124	public Response doDelete ( String url ) { return doDelete ( url , _NULL ) ; }
13128	public void startAction ( MotionEvent me ) { OnChartGestureListener l = mChart . getOnChartGestureListener ( ) ; if ( l != _NULL ) { l . onChartGestureStart ( me , mLastGesture ) ; } }
13130	public void remove ( ) throws RecurrenceRuleException { try { rule . remove ( ) ; } catch ( GenericEntityException e ) { throw new RecurrenceRuleException ( e . getMessage ( ) , e ) ; } }
13137	public SelectBuilder < K , V > select ( ) { return new SelectBuilder < > ( new Pattern < > ( ) ) ; }
13157	public static int catchRandomPokemon ( ) { return new Random ( ) . nextInt ( NUM_OF_POKEMON ) + _NUM ; }
13162	private void addRegion ( final SubHyperplane < S > sub , final List < Region < T >> list ) { if ( sub != _NULL ) { @ SuppressWarnings ( _CHAR unchecked _CHAR ) final Region < T > region = ( ( AbstractSubHyperplane < S , T > ) sub ) . getRemainingRegion ( ) ; if ( region != _NULL ) { list . add ( region ) ; } } }
13165	public boolean drain ( ) { return _BOOL ; }
13172	public void update ( float ipd , float yawHeadDegrees , float pitchHeadDegrees , float rollHeadDegrees , float worldYawOffsetDegrees , float worldPitchOffsetDegrees , float worldRollOffsetDegrees ) { }
13180	private void doInitialize ( ) { initAccessibility ( ) ; if ( _NULL == content ) { content = new StartPageContent ( ) ; add ( content , BorderLayout . CENTER ) ; setFocusable ( _BOOL ) ; } }
13183	public RevealBuilder withHideFromViewAtTranslateInterpolatedTime ( final float hideFromViewAtInterpolatedTime ) { this . mHideFromViewAtInterpolatedTime = hideFromViewAtInterpolatedTime ; return this ; }
13184	public ResponsePacket sendStatement ( String statement ) throws SQLException { RequestPacket packet = new RequestPacket ( ) ; packet . setModifiers ( readModifiers ) ; packet . setType ( RequestPacket . Type . STATEMENT ) ; packet . setStatement ( statement ) ; return writeRequestPacket ( packet ) ; }
13194	@ Override public ElementLocator createLocator ( Field field ) { return field . isAnnotationPresent ( Global . class ) ? new DefaultElementLocator ( searchContext , field ) : new SelectorScopedElementLocator ( searchContext , selector , field ) ; }
13197	public boolean hasContent ( ) { return ( content != _NULL && content . size ( ) > _NUM ) ; }
13204	public void addTo ( Document document ) { document . addData ( this ) ; }
13211	@ Override public Future < DLSN > write ( final LogRecord record ) { final Stopwatch stopwatch = Stopwatch . createStarted ( ) ; return asyncWrite ( record , _BOOL ) . addEventListener ( new OpStatsListener < DLSN > ( writeOpStatsLogger , stopwatch ) ) ; }
13215	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
13244	public void openDataSource ( final DataSource dataSource ) { openDataSource ( dataSource , _BOOL ) ; }
13245	public static SM_SYSTEM_MESSAGE STR_MSG_GLORY_POINT_LOSE_PERSONAL ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
13260	public boolean hasQuery ( ) { return query != _NULL && query . isFilter ( ) ; }
13261	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_JOIN_NOTIFY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13273	private synchronized void removeChildNode ( DefaultMutableTreeNode child ) { DefaultTreeModel model = ( DefaultTreeModel ) getModel ( ) ; model . removeNodeFromParent ( child ) ; }
13275	public Index open ( Transaction tx ) { TableInfo ti = VanillaDb . catalogMgr ( ) . getTableInfo ( tblName , tx ) ; if ( ti == _NULL ) throw new TableNotFoundException ( _CHAR table _CHAR_CHAR_CHAR is not defined in catalog . '' ) ; return Index . newInstance ( this , ti . schema ( ) . type ( fldName ) , tx ) ; }
13284	public boolean isCanceled ( ) { return canceled ; }
13286	public static int dpToPx ( float dp ) { return Math . round ( dp * getDensity ( ) ) ; }
13307	public int hashCode ( ) { return lease . getReferentUuid ( ) . hashCode ( ) ; }
13323	public TimeSeriesMetricDeltaSet mapOptional ( Function < ? super MetricValue , Optional < ? extends MetricValue >> fn ) { return values_ . map ( fn , _NULL ) . mapCombine ( _NULL , _NULL ) ; }
13344	public Object nextValue ( ) throws JSONException { int c = nextCleanInternal ( ) ; switch ( c ) { case - _NUM : throw syntaxError ( _CHAR End of input _CHAR ) ; case _CHAR : return readObject ( ) ; case _CHAR : return readArray ( ) ; case _CHAR_CHAR _CHAR _CHAR : return nextString ( ( char ) c ) ; default : pos -- ; return readLiteral ( ) ; } }
13348	public String process ( Item item ) throws ProcessException { return getPhoneFeature ( item , _CHAR vlng _CHAR ) ; }
13373	public void click ( int mask , int x , int y ) throws InterruptedException { move ( x , y ) ; click ( mask ) ; }
13375	public Node < K , V > first ( ) { Node < K , V > node = this ; Node < K , V > child = node . left ; while ( child != _NULL ) { node = child ; child = node . left ; } return node ; }
13418	private int dipsToPix ( float dps ) { return ( int ) TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dps , getResources ( ) . getDisplayMetrics ( ) ) ; }
13420	public static CompoundTag read ( File file ) throws IOException { return read ( file , ByteOrder . BIG_ENDIAN ) ; }
13428	@ Override public int [ ] makeDensityTestPoints ( ) { return new int [ ] { - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
13434	public void appendInfo ( final String infoMessage ) { if ( this . infoMessage == _NULL ) { this . infoMessage = infoMessage ; } else { this . infoMessage += ( _CHAR \ n _CHAR + infoMessage ) ; } }
13444	public static SM_SYSTEM_MESSAGE STR_FIND_POS_NPC_FOUND_DEV ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
13448	public static Iterable < Map < String , Object >> scan ( DataStore dataStore , String table , ReadConsistency consistency ) { return scan ( dataStore , table , _NULL , Long . MAX_VALUE , consistency ) ; }
13452	public final boolean isFinished ( ) { return mScrollerX . mFinished && mScrollerY . mFinished ; }
13459	public void show ( ) { if ( ! isVisible ) { textView . setVisibility ( VISIBLE ) ; textView . startAnimation ( fadeIn ) ; isVisible = _BOOL ; } }
13468	public static double log2 ( double x ) { return Math . log ( x ) / LOG2 ; }
13474	public static Style orange ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_ORANGE ) ; return style ; }
13486	public void resume ( ) { engine . resume ( ) ; }
13490	@ Override public String toString ( ) { return fXPath . toString ( ) ; }
13513	private void fillDeclaredPrefixes ( EndElement event ) { fillDeclaredPrefixes ( event . getNamespaces ( ) ) ; }
13516	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
13517	public PlacesCheckinQuery friendsOnly ( Boolean value ) { return unsafeParam ( _CHAR friends_only _CHAR , value ) ; }
13528	public static Style brown ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_BROWN ) ; return style ; }
13539	public GenericValue queryFirst ( ) throws GenericEntityException { EntityFindOptions efo = makeEntityFindOptions ( ) ; if ( ! this . useCache && ! this . filterByDate ) { efo . setMaxRows ( _NUM ) ; } GenericValue result = EntityUtil . getFirst ( query ( efo ) ) ; return result ; }
13559	@ Produces @ VenueList @ Named ( value = _CHAR venueList _CHAR ) public List < Venue > produceVenues ( ) { final List < Venue > venues = new ArrayList < > ( ) ; try { venues . add ( new VenueJavaOne2016 ( ) ) ; } catch ( final MalformedURLException e ) { this . log . log ( Level . SEVERE , _CHAR Failed to produce a Venue _CHAR , e ) ; } return venues ; }
13560	public int peek ( ) { return fData [ fDepth - _NUM ] ; }
13562	public SubLine wholeLine ( ) { return new SubLine ( this , new IntervalsSet ( tolerance ) ) ; }
13573	public static SM_SYSTEM_MESSAGE STR_FIND_POS_SUBZONE_FOUND_DEV ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
13574	public static boolean isAccountExpired ( Account account ) { AccountTime accountTime = account . getAccountTime ( ) ; return accountTime != _NULL && accountTime . getExpirationTime ( ) != _NULL && accountTime . getExpirationTime ( ) . getTime ( ) < System . currentTimeMillis ( ) ; }
13577	protected GroupsLeaveQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
13585	public boolean canLoot ( ) { return canLoot ( _BOOL ) ; }
13606	public boolean isAvailable ( ) { return available ; }
13627	public GroupsGetMembersQueryWithFields groupId ( String value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
13644	public void increaseReceiveFinishEventCount ( ) { this . nReceiveFinishEventCount ++ ; }
13646	public static Style grey ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_GREY ) ; return style ; }
13685	@ Override protected void onStartLoading ( ) { if ( mData != _NULL ) { deliverResult ( mData ) ; } if ( takeContentChanged ( ) || mData == _NULL ) { forceLoad ( ) ; } }
13691	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
13693	@ Override public void onCreate ( Bundle savedInstanceState ) { requestWindowFeature ( Window . FEATURE_NO_TITLE ) ; super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_qr_code_scan ) ; hasSurface = _BOOL ; inactivityTimer = new InactivityTimer ( this ) ; }
13712	protected void processStopRequest ( boolean force ) { if ( mState != State . PREPARING || force ) { mState = State . STOPPED ; mFile = _NULL ; mAccount = _NULL ; releaseResources ( _BOOL ) ; giveUpAudioFocus ( ) ; stopSelf ( ) ; } }
13717	public void registerEvent ( Object object , Method method ) { noParamMap . put ( object , method ) ; }
13721	public void activate ( ) { getViewer ( ) . getSearchManager ( ) . setSearcher ( getSearcher ( ) ) ; getViewer ( ) . getSearchManager ( ) . getFindDialogAsToolBar ( ) . clearMessage ( ) ; if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionAttributes ( ) ; chartSelection . setSelectedAttribute ( getSelectedLabels ( ) , _BOOL ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
13726	public void putCommandRunner ( final long equipmentId , final ICommandRunner commandRunner ) { commandRunners . put ( equipmentId , commandRunner ) ; }
13732	public int createDeferredElementDefinition ( String elementName ) { int nodeIndex = createNode ( NodeImpl . ELEMENT_DEFINITION_NODE ) ; int chunk = nodeIndex >> CHUNK_SHIFT ; int index = nodeIndex & CHUNK_MASK ; setChunkValue ( fNodeName , elementName , chunk , index ) ; return nodeIndex ; }
13733	public void clearOnlyItems ( ) { List < Insertion > insertions = new ArrayList < > ( ) ; insertions . addAll ( getHeaders ( ) ) ; insertions . addAll ( getOnlyInsertions ( ) ) ; insertions . addAll ( getFooters ( ) ) ; mInserts . clear ( ) ; getItems ( ) . clear ( ) ; mOnlyItemsCount = _NUM ; reAddAllInserts ( insertions ) ; notifyIfNeed ( ) ; }
13740	public Z Plus ( Z a , Z b ) { re = a . re + b . re ; im = a . im + b . im ; return this ; }
13743	@ Override public void beforeFirst ( ) throws RemoteException { s . beforeFirst ( ) ; }
13759	public SiteAdminConfirmationWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
13792	private boolean checkDisband ( Legion legion ) { if ( legion . isDisbanding ( ) ) { if ( ( System . currentTimeMillis ( ) / _NUM ) > legion . getDisbandTime ( ) ) { disbandLegion ( legion ) ; return _BOOL ; } } return _BOOL ; }
13806	public boolean drain ( ) { return _BOOL ; }
13830	public boolean isClosed ( ) { return closed ; }
13835	public TextPartsBuilder addTextPart ( @ StringRes int textRes ) { return addTextPart ( mContext . getText ( textRes ) ) ; }
13854	public static String [ ] handle ( String [ ] args , ICommand command , ICommandSender sender ) { final CommandEvent event = new CommandEvent ( args , command , sender ) ; return OpenModLoader . getEventBus ( ) . post ( event ) ? event . getArgs ( ) : _NULL ; }
13856	public String toString ( ) { return Category + _CHAR : : _CHAR + Filename ; }
13857	public String toString ( ) { return _CHAR L _CHAR + System . identityHashCode ( this ) ; }
13862	public boolean isEnabled ( ) { if ( enabled == _NULL ) { return _BOOL ; } else { return enabled ; } }
13869	public MessagesGetChatQueryWithFields nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
13888	@ Override public CompletableFuture < Void > delete ( ) { return delete ( _BOOL ) ; }
13925	public String toString ( ) { return getName ( ) ; }
13933	public void awaitCompletion ( long timeout , TimeUnit unit ) throws InterruptedException { numRunningTasks . awaitZero ( timeout , unit ) ; }
13972	public void characters ( char [ ] ch , int start , int length ) throws SAXException { if ( elementOn && isItem || elementOn ) { elementValue . append ( new String ( ch , start , length ) ) ; } }
13991	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM . _NUM - _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM - _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
13995	public void error ( Object elementOrLocation , String message , Object ... params ) { model . getDiagCollector ( ) . addDiag ( Diag . error ( getLocation ( elementOrLocation ) , Model . diagPrefix ( aspectName ) + message , params ) ) ; }
13996	public Node < K , V > last ( ) { Node < K , V > node = this ; Node < K , V > child = node . right ; while ( child != _NULL ) { node = child ; child = node . right ; } return node ; }
14014	private void editSettingsAction ( ) { SettingsDialog . show ( ControlUtilities . getParentWindow ( this ) , this . simulation . getWorld ( ) . getSettings ( ) ) ; }
14030	public static final void removeAlliance ( PlayerAlliance alliance ) { if ( alliance != _NULL ) { League league = alliance . getLeague ( ) ; Preconditions . checkNotNull ( league , _CHAR League should not be _NULL _CHAR ) ; league . onEvent ( new LeagueLeftEvent ( league , alliance ) ) ; } }
14033	public Builder migrations ( List < MigrationCache > migrationsCache ) { this . migrationsCache = migrationsCache ; return this ; }
14046	@ Override public int [ ] makeDensityTestPoints ( ) { return new int [ ] { - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
14049	private boolean playMode ( ) { switch ( this . mode ) { case NONE : this . setMode ( MODE . PLAY ) ; break ; case PLAY : break ; case RECORD : Log . d ( LOG_TAG , _CHAR AudioPlayer Error : Ca n _CHAR_CHAR ) ; sendErrorStatus ( MEDIA_ERR_ABORTED ) ; return false ; } return true ; }
14064	public static SM_SYSTEM_MESSAGE STR_DUEL_TIMEOUT_NOTIFY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14065	public String toString ( ) { return Category + _CHAR : : _CHAR + Filename ; }
14087	public static SM_SYSTEM_MESSAGE STR_ENSLAVE_GIVE_EXP_TO_PET_GET_EXP ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
14103	@ Nullable public TypeRef lookupType ( String fullName ) { return typeByName . get ( getTypeNameInSymbolTable ( fullName ) ) ; }
14107	@ Override public ElementLocator createLocator ( Field field ) { return new SelectorScopedElementLocator ( searchContext , selector , field ) ; }
14110	@ Deprecated public boolean allowOasisXMLCatalogPI ( ) { return getAllowOasisXMLCatalogPI ( ) ; }
14162	public static RemoteResourceStatus fromBytes ( byte [ ] bytes ) throws SVNException { return ( ( bytes != _NULL ) && ( bytes . length > _NUM ) ) ? new RemoteResourceStatus ( bytes ) : _NULL ; }
14184	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_RESISTED_A_TO_B ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
14189	@ Override public boolean remove ( Object object ) { final int index = indexOf ( object ) ; if ( index >= _NUM ) { removeAt ( index ) ; return _BOOL ; } return _BOOL ; }
14208	public static ExpectedCondition < Boolean > elementHasAttributeWithValue ( final WebElement element , final String attributeName , final String attributeValue ) { return _NULL ; }
14221	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_HOSTILE_PARRY ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
14235	public void removeField ( SootField f ) { checkLevel ( SIGNATURES ) ; if ( ! f . isDeclared ( ) || f . getDeclaringClass ( ) != this ) throw new RuntimeException ( _CHAR did not declare : _CHAR + f . getName ( ) ) ; fields . remove ( f ) ; f . isDeclared = _BOOL ; }
14248	public void removeAllTableListeners ( ) { m_listeners . clear ( ) ; }
14264	public void show ( Animation anim ) { show ( _BOOL , anim ) ; }
14266	public void addArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getArgumentListNoTransform ( ) : getArgumentList ( ) ; list . addChild ( node ) ; }
14268	protected MessagesRestoreQuery messageId ( int value ) { return unsafeParam ( _CHAR message_id _CHAR , value ) ; }
14276	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
14284	public boolean isLimitEnabled ( ) { return this . limitEnabled ; }
14296	public int readLastByte ( ) { return ( ( int ) arr [ pos ] ) & _NUM ; }
14302	@ Override public void initialize ( ) { getUserList ( ) ; }
14310	public void addCandy ( PokemonFamilyId family , int amount ) { if ( candies . containsKey ( family ) ) { candies . put ( family , candies . get ( family ) + amount ) ; } else { candies . put ( family , amount ) ; } }
14324	public static SM_SYSTEM_MESSAGE STR_MSG_HOUSING_OBJECT_DELETE_EXPIRE_TIME ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( nameId ) ) ; }
14336	public boolean updateCursor ( @ NotNull ScreenView screenView , @ AndroidCoordinate int x , @ AndroidCoordinate int y ) { return _BOOL ; }
14340	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
14353	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
14356	public static BtHelperClient from ( Context context ) { if ( sBtHelperClient == _NULL ) { synchronized ( BtHelperClient . class ) { if ( sBtHelperClient == _NULL ) sBtHelperClient = new BtHelperClient ( context ) ; } } return sBtHelperClient ; }
14369	@ Override public final double readDouble ( ) { return Double . longBitsToDouble ( readLong ( ) ) ; }
14380	public void clear ( ) { m_head = new ObjectLiteral ( _NULL ) ; m_tail = _NULL ; }
14387	public static void copyProperties ( Object from , Object to ) throws Exception { copyPropertiesExclude ( from , to , _NULL ) ; }
14400	public static boolean supportsMultipleUsers ( ) { return getMaxSupportedUsers ( ) > _NUM ; }
14415	void addDep ( soot . Type s ) { deps . add ( s ) ; }
14418	@ Override public DOMImplementation item ( int index ) { final int length = getLength ( ) ; if ( index >= _NUM && index < length ) { return ( DOMImplementation ) fImplementations . get ( index ) ; } return _NULL ; }
14439	public Value newExtension ( FilterListener listener , Value target , Value args ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
14445	public static float calculateAspectRatio ( float left , float top , float right , float bottom ) { final float width = right - left ; final float height = bottom - top ; final float aspectRatio = width / height ; return aspectRatio ; }
14449	public static CommandResult execCommand ( String command , boolean isRoot ) { return execCommand ( new String [ ] { command } , isRoot , _BOOL ) ; }
14475	public static void logFallbackSearchRequestOutcome ( boolean isFailure ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchFallbackSearchRequestStatus _CHAR , isFailure ? REQUEST_FAILED : REQUEST_NOT_FAILED , REQUEST_BOUNDARY ) ; }
14505	@ Override public void notifyOnError ( ) { scheduleBackgroundRead ( ) ; }
14506	public ContextSet immutableCopy ( ) { synchronized ( contexts ) { return new ContextSet ( new HashSet < > ( contexts ) ) ; } }
14508	public static Style red ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_RED ) ; return style ; }
14512	public void addToEffectedController ( ) { if ( ( ! addedToController ) && ( effected . getLifeStats ( ) != _NULL ) && ( ! effected . getLifeStats ( ) . isAlreadyDead ( ) ) ) { effected . getEffectController ( ) . addEffect ( this ) ; addedToController = _BOOL ; } }
14522	public UserDTO toDTO ( User user ) { return toDTO ( user , _NUM ) ; }
14569	public static long hash64 ( final String text , int from , int length ) { return hash64 ( text . substring ( from , from + length ) ) ; }
14598	public String toString ( cp_info constant_pool [ ] ) { return Double . toString ( convert ( ) ) ; }
14600	@ Override public final byte readByte ( ) { return ( byte ) bs . readByte ( ) ; }
14612	public static byte [ ] writeInt ( int i ) { return ByteBuffer . allocate ( _NUM ) . putInt ( i ) . array ( ) ; }
14616	@ Override public boolean hasMoreElements ( ) { return index < array . length ; }
14619	@ Override public String toString ( ) { return this . getClass ( ) . getSimpleName ( ) + _CHAR : Includes fields with these names : _CHAR + whitelist . toString ( ) ; }
14648	public void saveToFileSystem ( final String appName , final File propertyFileLocation ) throws IOException { final OutputStream outputStream = new FileOutputStream ( propertyFileLocation ) ; properties . store ( outputStream , _CHAR === _CHAR + appName + _CHAR properties === _CHAR ) ; }
14649	public static final void shuffle ( float [ ] a , Random r ) { shuffle ( a , _NUM , a . length , r ) ; }
14670	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
14692	public void changePermissions ( Legion legion , short deputyPermission , short centurionPermission , short legionarPermission , short volunteerPermission ) { if ( legion . setLegionPermissions ( deputyPermission , centurionPermission , legionarPermission , volunteerPermission ) ) { PacketSendUtility . broadcastPacketToLegion ( legion , new SM_LEGION_EDIT ( _NUM , legion ) ) ; } }
14700	public void addTypeDecl ( TypeDecl node ) { List < TypeDecl > list = ( parent == _NULL || state == _NULL ) ? getTypeDeclListNoTransform ( ) : getTypeDeclList ( ) ; list . addChild ( node ) ; }
14701	private void addToken ( TokenKind kind , int left , int right ) { addToken ( kind , left , right , _NULL ) ; }
14710	public DateTime toJodaDateTime ( ) { return toJodaDateTime ( ISOChronology . getInstance ( ) ) ; }
14725	public static void clickButtonRewiModWebsite ( ) { RewiMod . getInstance ( ) . openUrl ( _CHAR https : // rewinside . tv / Thread / 57412 - Offiziell - RewiMod / '' ) ; }
14728	public boolean isHighlighted ( int row ) { return getBoolean ( row , VisualItem . HIGHLIGHT ) ; }
14729	public TapTarget descriptionTextColor ( @ ColorRes int color ) { this . descriptionTextColor = color ; return this ; }
14731	public static final void shuffle ( long [ ] a , Random r ) { shuffle ( a , _NUM , a . length , r ) ; }
14733	public int size ( ) { return children . size ( ) ; }
14752	public void addUpdateStmt ( Stmt node ) { List < Stmt > list = ( parent == _NULL || state == _NULL ) ? getUpdateStmtListNoTransform ( ) : getUpdateStmtList ( ) ; list . addChild ( node ) ; }
14763	public final String toString ( ) { if ( this . objectData == _NULL ) { this . setObjectData ( STR_LINE ) ; } return this . objectData ; }
14835	public RequestHandle put ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return put ( _NULL , url , params , responseHandler ) ; }
14848	public void updateLocations ( Iterator iIter ) { if ( ContainerList != _NULL ) ContainerList . clear ( ) ; ContainerList = new ArrayList ( ) ; while ( iIter . hasNext ( ) ) ContainerList . add ( ( Location ) iIter . next ( ) ) ; addBehaviour ( new MigrateBehaviour ( ) ) ; }
14858	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
14869	public boolean drain ( ) { if ( line != _NULL ) { debugPrint ( _CHAR started draining ... _CHAR ) ; if ( line . isOpen ( ) ) { line . drain ( ) ; if ( drainDelay > _NUM ) { try { Thread . sleep ( drainDelay ) ; } catch ( InterruptedException ie ) { } } } debugPrint ( _CHAR ... finished draining _CHAR ) ; } timer . stop ( _CHAR audioOut _CHAR ) ; return ! isCancelled ( ) ; }
14885	public final boolean isOverridingDeviceState ( ) { return ( myOverride & CFG_DEVICE_STATE ) != _NUM ; }
14909	public static void closeSocket ( Socket sock ) throws IOException { byte [ ] header ; header = packHeader ( FDFS_PROTO_CMD_QUIT , _NUM , ( byte ) _NUM ) ; sock . getOutputStream ( ) . write ( header ) ; sock . close ( ) ; }
14920	public void startAction ( MotionEvent me ) { OnChartGestureListener l = mChart . getOnChartGestureListener ( ) ; if ( l != _NULL ) l . onChartGestureStart ( me , mLastGesture ) ; }
14931	public boolean onUpdateAnimation ( long time , boolean jumpToEnd ) { if ( mContentAnimations == _NULL ) return _BOOL ; boolean finished = _BOOL ; if ( jumpToEnd ) { finished = mContentAnimations . finished ( ) ; } else { finished = mContentAnimations . update ( time ) ; } if ( jumpToEnd || finished ) finishAnimation ( ) ; return finished ; }
14935	private void useFilteredFromEntries ( LimitSizeEntryList entries ) { LimitSizeEntryList filteredEntries = filterEntries ( entries ) ; this . currentEntries = filteredEntries ; this . filteredEntries = filteredEntries ; }
14939	public void addArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getArgumentListNoTransform ( ) : getArgumentList ( ) ; list . addChild ( node ) ; }
14946	public Builder withKeysOnly ( boolean keysOnly ) { this . keysOnly = keysOnly ; return this ; }
14991	@ NotNull public ObjectProperty < Color > foregroundColor ( ) { return myForegroundColor ; }
14994	public static String toString ( URL url , String encoding ) throws IOException { return toString ( url , Charsets . toCharset ( encoding ) ) ; }
15003	public Boolean isLogConnection ( ) { return logConnection ; }
15030	public JSONObject put ( String key , boolean value ) throws JSONException { put ( key , value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
15041	private synchronized void reschedule ( long millis ) { currentFut = _NULL ; if ( ! closed ) { SCHEDULER . schedule ( _NULL , millis , TimeUnit . MILLISECONDS ) ; } else { try { underlying . close ( ) ; } catch ( Exception ex ) { LOG . log ( Level . WARNING , _CHAR failed to close resolver _CHAR + underlying . configString ( ) , ex ) ; } } }
15045	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
15050	@ SuppressWarnings ( { _CHAR unchecked _CHAR , _CHAR rawtypes _CHAR } ) private void initColumns ( ) { columns . clear ( ) ; final ArrayList < ColumnId > columnOrder = getColumnOrderFromConfig ( ) ; columnOrder . forEach ( _NULL ) ; }
15069	public void inc ( Collection < KeyType > container , long delta ) { for ( KeyType key : container ) { inc ( key , delta ) ; } }
15077	public static boolean isSupported ( ) { return Build . VERSION . SDK_INT >= _NUM ; }
15092	public HumanTime m ( int n ) { delta += MINUTE * Math . abs ( n ) ; return this ; }
15116	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public final S withValueSupplier ( Splittable . BigIntegerIndexed < T > valueSupplier ) { this . valueSupplier = valueSupplier ; return ( S ) this ; }
15121	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_STOP_EATING ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
15142	public static void create ( FSTree tree , DefaultTreeModel model ) { fileSystemTreeComponent = tree ; treeModel = model ; }
15156	public Fraction abs ( ) { Fraction ret ; if ( numerator >= _NUM ) { ret = this ; } else { ret = negate ( ) ; } return ret ; }
15157	public static void deletePermit ( String permitId , @ Nullable AirMapCallback < Void > callback ) { PilotService . deletePermit ( permitId , callback ) ; }
15165	public synchronized boolean isActive ( ) { return this . active ; }
15196	public IntIterator columnRows ( int col ) { return new ColumnRowIterator ( rows ( ) , col ) ; }
15198	public int size ( ) { return _NUM ; }
15199	public void addTypeBound ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeBoundListNoTransform ( ) : getTypeBoundList ( ) ; list . addChild ( node ) ; }
15207	protected Object resolve ( ) { GigaSpace gs = findGigaSpaceByName ( this . name ) ; if ( GigaSpace . class . isAssignableFrom ( getMemberType ( ) ) ) { if ( ! getMemberType ( ) . isInstance ( gs ) ) { throw new IllegalArgumentException ( _CHAR Can not inject _CHAR + this . member + _CHAR with GigaSpaces [ _CHAR + this . name + _CHAR ] : type mismatch _CHAR ) ; } return gs ; } else { throw new IllegalArgumentException ( _CHAR Failure to inject _CHAR ) ; } }
15221	private String detectScriptUrlPerDHCP ( ) { Logger . log ( getClass ( ) , LogLevel . DEBUG , _CHAR Searching per DHCP not supported yet . '' ) ; return _NULL ; }
15231	public boolean isValid ( ) { return this . symbolData . isValidSymbol ( ) ; }
15236	public MarketAddToAlbumQuery addToAlbum ( UserActor actor , int ownerId , int itemId , int ... albumIds ) { return new MarketAddToAlbumQuery ( getClient ( ) , actor , ownerId , itemId , albumIds ) ; }
15254	public void clear ( ) { mSize = _NUM ; }
15264	@ Override public void accept ( TestValueVisitor visitor , FieldIdEnum fieldId ) { visitor . setTestValue ( fieldId , this . value ) ; }
15282	public static SM_SYSTEM_MESSAGE STR_ENSLAVE_PET_LEVEL_CHANGE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
15300	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . main ) ; viewfinderView = ( ViewfinderView ) findViewById ( R . id . viewfinder_view ) ; hasSurface = _BOOL ; inactivityTimer = new InactivityTimer ( getActivity ( ) ) ; }
15315	public void registerConfigAspect ( ConfigAspect aspect ) { configAspects . add ( aspect ) ; }
15316	@ VisibleForTesting protected static List < String > extractLogcatFromReader ( BufferedReader reader , int maxLines ) throws IOException { return extractLogcatFromReaderInternal ( reader , maxLines ) ; }
15322	@ Override public Scan open ( ) { Scan s1 = p1 . open ( ) ; Scan s2 = p2 . open ( ) ; return new ProductScan ( s1 , s2 ) ; }
15359	public IntIterator columnRows ( IntIterator rows , int col ) { return new ColumnRowIterator ( rows , col ) ; }
15361	@ Override protected void onStopLoading ( ) { cancelLoad ( ) ; }
15379	public HumanTime d ( int n ) { delta += DAY * Math . abs ( n ) ; return this ; }
15420	@ NotNull public ObjectProperty < Color > backgroundColor ( ) { return myBackgroundColor ; }
15429	public UsersGetNearbyQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
15432	public static SM_SYSTEM_MESSAGE STR_GATHER_FAIL_3_MINING ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15444	@ JsonValue public String toJson ( ) { return jsonName ; }
15450	private void prefixSearch ( String query ) { m_curNode = m_trie . find ( query ) ; if ( m_curNode != _NULL ) { Iterator iter = trieIterator ( ) ; while ( iter . hasNext ( ) ) addInternal ( ( Tuple ) iter . next ( ) ) ; } }
15464	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
15493	public static void drawLine ( Point p1 , Point p2 , Canvas canvas , Paint paint ) { canvas . save ( ) ; canvas . drawLine ( p1 . x , p1 . y , p2 . x , p2 . y , paint ) ; canvas . restore ( ) ; }
15496	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
15504	public static SM_SYSTEM_MESSAGE STR_MSG_SOLDOUT_ITEM_MULTI ( String value1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0s ) ; }
15507	public static SM_SYSTEM_MESSAGE STR_UI_DISCOVERY_NEWZONE ( String subzone ) { return new SM_SYSTEM_MESSAGE ( _NUM , subzone ) ; }
15530	public void sendBroadcast ( Context context , Intent intent ) { context . sendBroadcast ( intent ) ; }
15531	public java . lang . Boolean isEscaped ( ) { return escaped ; }
15534	public AdsAddOfficeUsersQuery addOfficeUsers ( UserActor actor , int accountId , String data ) { return new AdsAddOfficeUsersQuery ( getClient ( ) , actor , accountId , data ) ; }
15545	public Record next ( ) { return _NULL ; }
15571	protected AppsSendRequestQuery userId ( int value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
15573	public static String removeNewlines ( String string ) { return string . replaceAll ( _CHAR \ r _CHAR , EMPTY ) . replaceAll ( _CHAR \ n _CHAR , EMPTY ) ; }
15574	public String toString ( ) { return _CHAR DiphonePitchmarkGenerator _CHAR ; }
15575	public LeastSquaresBuilder parameterValidator ( final ParameterValidator newValidator ) { paramValidator = newValidator ; return this ; }
15601	public static boolean isNotEmpty ( IsEmpty o ) { return o != _NULL && ! o . isEmpty ( ) ; }
15605	private boolean matchesFilter ( FunctionName functionName , List < FunctionNameFilterInterface > functionNameFilterList ) { for ( FunctionNameFilterInterface filter : functionNameFilterList ) { if ( filter . accept ( functionName ) ) { return _BOOL ; } } return _BOOL ; }
15665	private K lowestKey ( ) { FastConcurrentSkipListMap . Node < K , V > n = loNode ( ) ; if ( isBeforeEnd ( n ) ) return n . key ; else throw new NoSuchElementException ( ) ; }
15674	public boolean CanEnterLegion ( ) { return enter_guild ; }
15689	public ActivateReferencesWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
15698	public void addTag ( Map . Entry < String , TimeSeriesMetricDeltaSet > tag ) { tag . getValue ( ) . asScalar ( ) . ifPresent ( _NULL ) ; tag . getValue ( ) . asVector ( ) . ifPresent ( _NULL ) ; }
15704	public void hide ( boolean animate ) { hide ( animate , fadeOut ) ; }
15719	public static boolean isNotSet ( double value ) { return Double . isInfinite ( value ) || ( Math . abs ( value ) < _NUM . _NUM ) ; }
15725	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
15740	public static void clear ( String collection ) { try { MongoCollection < Document > c = MongoHelper . getCollection ( collection ) ; if ( c != _NULL ) { c . deleteMany ( new BasicDBObject ( ) ) ; } } catch ( Exception e ) { if ( log . isErrorEnabled ( ) ) log . error ( e . getMessage ( ) , e ) ; } }
15774	public static CanFollow fromSnippets ( KindredSnippets [ ] snippets ) { for ( KindredSnippets obj : snippets ) { if ( obj instanceof CanFollow ) { return ( CanFollow ) obj ; } } return _NULL ; }
15780	public Boolean isAutoSubscribe ( ) { return autoSubscribe ; }
15785	public TypeSpec typeSpec ( ) { return typeSpec ( emptyList ( ) ) ; }
15799	public void addElementValue ( ElementValue node ) { List < ElementValue > list = ( parent == _NULL || state == _NULL ) ? getElementValueListNoTransform ( ) : getElementValueList ( ) ; list . addChild ( node ) ; }
15804	protected void fireChangeEvent ( ) { repaint ( ) ; if ( changeEvent == _NULL ) changeEvent = new ChangeEvent ( this ) ; Iterator iter = listeners . iterator ( ) ; while ( iter . hasNext ( ) ) ( ( ChangeListener ) iter . next ( ) ) . stateChanged ( changeEvent ) ; }
15806	public Fraction reciprocal ( ) { return new Fraction ( denominator , numerator ) ; }
15816	public MessagesGetChatQueryWithChatIdsFields nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
15831	private < T > UnaryOperator < T > compose ( UnaryOperator < T > before , UnaryOperator < T > after ) { return _NULL ; }
15844	@ Override @ Deprecated public int writeBulk ( List < LogRecord > records ) throws IOException { return getLedgerWriter ( records . get ( _NUM ) . getTransactionId ( ) , _BOOL ) . writeBulk ( records ) ; }
15855	public Builder addColumnString ( String name , String regex , Integer minAllowableLength , Integer maxAllowableLength ) { return addColumn ( new StringMetaData ( name , regex , minAllowableLength , maxAllowableLength ) ) ; }
15869	public int readInt ( ) throws IOException { return dis . readInt ( ) ; }
15875	public void onStart ( ) { if ( mFullscreenManager != _NULL ) { mLastContentOffset = mFullscreenManager . getContentOffset ( ) ; mLastVisibleContentOffset = mFullscreenManager . getVisibleContentOffset ( ) ; mFullscreenManager . addListener ( this ) ; } requestRender ( ) ; }
15916	public synchronized void release ( ) { this . state = Input . State . RELEASED ; }
15921	public void assignSerializer ( JsonSerializer < Object > ser ) { if ( _serializer != _NULL && _serializer != ser ) { throw new IllegalStateException ( _CHAR Can not override serializer _CHAR ) ; } _serializer = ser ; }
15924	public static CommandResult execCommand ( String [ ] commands , boolean isRoot , String path ) { return execCommand ( commands , isRoot , _BOOL , path ) ; }
15925	protected GroupsGetMembersQueryWithFields fields ( UserField ... value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
15933	@ Override public BlockPos next ( ) { return hasNext ( ) ? diagonalMode ? centerPosition . add ( allDirections [ iterationStep ++ ] ) : centerPosition . add ( mainDirections [ iterationStep ++ ] ) : _NULL ; }
15943	public static Polygon polygon ( Collection < Point > points ) { return polygon ( points . toArray ( new Point [ points . size ( ) ] ) ) ; }
15964	public void initialiseSelectedStyleIndex ( ) { this . selectedStyleIndex = _NUM ; }
15971	public boolean hasInit ( ) { return getInitOpt ( ) . getNumChild ( ) != _NUM ; }
15983	public void pushContext ( ) { fContextStack . push ( fMatchersCount ) ; }
15990	public VideoEditAlbumQuery editAlbum ( UserActor actor , int albumId , String title ) { return new VideoEditAlbumQuery ( getClient ( ) , actor , albumId , title ) ; }
15993	public String toString ( ) { StringBuffer buf = new StringBuffer ( _CHAR MethodDesc [ _CHAR ) ; toString ( buf , _BOOL ) ; buf . append ( _CHAR ) ; return buf . toString ( ) ; }
16006	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
16007	private String createNode ( String nodeName , String nodeValue ) { return _CHAR < _CHAR + nodeName + _CHAR > _CHAR + nodeValue + _CHAR < / _CHAR + nodeName + _CHAR > _CHAR ; }
16052	public ExitMonitorStmt newExitMonitorStmt ( Value op ) { return new GExitMonitorStmt ( op ) ; }
16067	public void OMTG_ENV_005_Webview_Remote ( View view ) { Intent intent = new Intent ( this , OMTG_ENV_005_WebView_Remote . class ) ; startActivity ( intent ) ; }
16077	public static int nextNewLine ( byte [ ] text , int offset ) { while ( offset < text . length ) { if ( text [ offset ] == _CHAR ) return offset ; else offset ++ ; } return offset ; }
16097	protected Object resolve ( ) { GigaSpace gs = findGigaSpaceByName ( this . name ) ; if ( GigaSpace . class . isAssignableFrom ( getMemberType ( ) ) ) { if ( ! getMemberType ( ) . isInstance ( gs ) ) { throw new IllegalArgumentException ( _CHAR Can not inject _CHAR + this . member + _CHAR with GigaSpaces [ _CHAR + this . name + _CHAR ] : type mismatch _CHAR ) ; } return gs ; } else { throw new IllegalArgumentException ( _CHAR Failure to inject _CHAR ) ; } }
16098	public static RealMatrix createRealDiagonalMatrix ( final double [ ] diagonal ) { final RealMatrix m = createRealMatrix ( diagonal . length , diagonal . length ) ; for ( int i = _NUM ; i < diagonal . length ; ++ i ) { m . setEntry ( i , i , diagonal [ i ] ) ; } return m ; }
16110	public final void log ( ) { TAGLOGGER . info ( this . toString ( ) ) ; }
16126	public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_INVITE_FORCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16150	public void addPublication ( final Publisher publisher , final String topic ) { this . publications . put ( publisher , topic ) ; }
16154	public Builder shadowSize ( Point shadowSize ) { this . shadowSize = shadowSize ; return this ; }
16167	public static boolean isInitializer ( ) { return _threadId . get ( ) != _NULL && INITIALIZER_ID . equals ( _threadId . get ( ) ) ; }
16168	public void flush ( ) { getDiskCache ( ) . flush ( ) ; }
16183	private void updatePressPosition ( int buttonIndex , RectF rectF ) { if ( buttonIndex < _NUM ) { return ; } if ( isPointInRectF ( pressPointF , rectF ) ) { if ( ! pressInButton ) { updatePressState ( buttonIndex , _BOOL ) ; pressInButton = _BOOL ; } } else { if ( pressInButton ) { updatePressState ( buttonIndex , _BOOL ) ; pressInButton = _BOOL ; } } }
16200	public boolean hasInit ( ) { return getInitOpt ( ) . getNumChild ( ) != _NUM ; }
16202	@ Override public final int readByte ( ) { int temp ; try { temp = is . read ( ) ; if ( temp == - _NUM ) { throw new RuntimeException ( _CHAR EOF _CHAR ) ; } read ++ ; return temp ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
16223	public void loadMithraConfiguration ( String mithraConfigXml ) { MithraRuntimeType runtimeType = loadConfigXml ( mithraConfigXml ) ; this . loadMithraConfiguration ( runtimeType ) ; }
16224	public boolean isSuccessful ( ) { return isSuccessful ; }
16244	public void prevImage ( ) throws IOException { super . prev ( ) ; }
16254	private void startupPlugins ( ) { for ( PluginEntry entry : entryMap . values ( ) ) { if ( entry . onload ) { getPlugin ( entry . service ) ; } else { pluginMap . put ( entry . service , _NULL ) ; } } }
16272	public GroupsReorderLinkQuery reorderLink ( UserActor actor , int groupId , int linkId ) { return new GroupsReorderLinkQuery ( getClient ( ) , actor , groupId , linkId ) ; }
16301	public static SM_SYSTEM_MESSAGE STR_GATHER_FAIL_4_FISHING ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16312	private static boolean isVerticallyConstrained ( ConstraintWidget widget ) { if ( widget . getAnchor ( ConstraintAnchor . Type . BOTTOM ) . isConnected ( ) ) { return _BOOL ; } if ( widget . getAnchor ( ConstraintAnchor . Type . TOP ) . isConnected ( ) ) { return _BOOL ; } if ( widget . getAnchor ( ConstraintAnchor . Type . BASELINE ) . isConnected ( ) ) { return _BOOL ; } return _BOOL ; }
16328	public Enumeration listOptions ( ) { Vector newVector = new Vector ( _NUM ) ; newVector . addElement ( new Option ( _CHAR \ ttreat missing values as a seperate _CHAR + _CHAR value . '' , _CHAR M _CHAR , _NUM , _CHAR - M _CHAR ) ) ; newVector . addElement ( new Option ( _CHAR \ tjust binarize numeric attributes instead \ n _CHAR + _CHAR \ tof properly discretizing them . '' , _CHAR B _CHAR , _NUM , _CHAR - B _CHAR ) ) ; return newVector . elements ( ) ; }
16332	public static Assignment createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , Assignment . class ) ; }
16335	public void put ( String key , InputStream stream , String name ) { put ( key , stream , name , _NULL ) ; }
16340	protected void resetXML11 ( ) throws XNIException { int count = fXML11Components . size ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { XMLComponent c = ( XMLComponent ) fXML11Components . get ( i ) ; c . reset ( this ) ; } }
16341	private void visitAncestors ( NodeItem n ) { if ( n == m_root ) return ; visitFocus ( ( NodeItem ) n . getParent ( ) , n ) ; }
16358	public static void resetGameTime ( ) { gameTime = _NUM ; startGameTime = _BOOL ; }
16367	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_MAGIC_TARGET ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
16376	public SootMethodRef makeMethodRef ( SootClass declaringClass , String name , List < Type > parameterTypes , Type returnType , boolean isStatic ) { return new SootMethodRefImpl ( declaringClass , name , parameterTypes , returnType , isStatic ) ; }
16392	public Builder path ( @ NonNull File path ) { if ( path == _NULL ) throw new IllegalArgumentException ( _CHAR path == _NULL _CHAR ) ; this . path = path ; return this ; }
16407	public static String abbreviateName ( String str , FontMetrics fm , int width ) { if ( fm . stringWidth ( str ) > width ) str = abbreviateName ( str , _BOOL ) ; if ( fm . stringWidth ( str ) > width ) str = abbreviateName ( str , _BOOL ) ; return str ; }
16480	private void notifyUpdated ( List < AirMapTraffic > updated ) { if ( updated == _NULL || updated . isEmpty ( ) ) { return ; } for ( AirMapTrafficListener listener : listeners ) { listener . onUpdateTraffic ( updated ) ; } }
16492	public Object clone ( ) { Body b = Shimple . v ( ) . newBody ( getMethod ( ) ) ; b . importBodyContentsFrom ( this ) ; return b ; }
16524	public static int toIntExact ( final long n ) throws MathRuntimeException { if ( n < Integer . MIN_VALUE || n > Integer . MAX_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . OVERFLOW ) ; } return ( int ) n ; }
16564	public static void clear ( Color color ) { offscreen . setColor ( color ) ; offscreen . fillRect ( _NUM , _NUM , width , height ) ; offscreen . setColor ( penColor ) ; draw ( ) ; }
16603	public static void checkColumnIndex ( final AnyMatrix m , final int column ) throws MathIllegalArgumentException { if ( column < _NUM || column >= m . getColumnDimension ( ) ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . COLUMN_INDEX , column , _NUM , m . getColumnDimension ( ) - _NUM ) ; } }
16604	public TapTarget titleTextColor ( @ ColorRes int color ) { this . titleTextColor = color ; return this ; }
16613	public String toString ( ) { return _CHAR ConnectionAbsoluteTime [ _CHAR + time + _CHAR ] _CHAR ; }
16618	public static SM_SYSTEM_MESSAGE STR_CHAT_CHANNEL_CREATE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16635	public void inc ( KeyType [ ] container , long delta ) { for ( KeyType key : container ) { inc ( key , delta ) ; } }
16643	private void send ( Response response , AsyncResponse asyncResponse ) { if ( RequestLog . isStarted ( RESPONSE_WORKFLOW_TIMER ) ) { RequestLog . stopTiming ( RESPONSE_WORKFLOW_TIMER ) ; } asyncResponse . resume ( response ) ; }
16652	public static SM_SYSTEM_MESSAGE STR_FIND_POS_NO_NPC_IN_THIS_WORLD ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16678	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
16679	private void handleAutoOpenAfterDownload ( DownloadInfo info , long downloadId ) { if ( OMADownloadHandler . OMA_DOWNLOAD_DESCRIPTOR_MIME . equalsIgnoreCase ( info . getMimeType ( ) ) ) { mOMADownloadHandler . handleOMADownload ( info , downloadId ) ; return ; } openDownloadedContent ( downloadId ) ; }
16684	protected VideoDeleteCommentQuery commentId ( int value ) { return unsafeParam ( _CHAR comment_id _CHAR , value ) ; }
16693	public static String toString ( URI uri , Charset encoding ) throws IOException { return toString ( uri . toURL ( ) , Charsets . toCharset ( encoding ) ) ; }
16712	public int size ( ) { return count ; }
16718	public CreateSiteWindow typeName ( String name ) { textField . setValue ( name ) ; return this ; }
16720	public void java_util_jar_JarFile_getMetaInfoEntryNames ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getStringObject ( ) ) ; }
16726	public AemDialog open ( ) { open ( currentScope ) ; return this ; }
16750	public Z Minus ( Z a , Z b ) { re = a . re - b . re ; im = a . im - b . im ; return this ; }
16758	public String reportError ( XMLLocator location , String domain , String key , Object [ ] arguments , short severity ) throws XNIException { return reportError ( location , domain , key , arguments , severity , _NULL ) ; }
16762	public static void release ( Application app ) { if ( sLifecycleCallbacks != _NULL ) { app . unregisterActivityLifecycleCallbacks ( sLifecycleCallbacks ) ; } hideProgressDialogsAll ( ) ; }
16764	public String toString ( ) { return _CHAR at _CHAR + index + _CHAR [ character _CHAR + this . character + _CHAR line _CHAR + this . line + _CHAR ] _CHAR ; }
16792	public static CommandResult execCommand ( List < String > commands , boolean isRoot ) { return execCommand ( commands == _NULL ? _NULL : commands . toArray ( new String [ ] { } ) , isRoot , _BOOL ) ; }
16799	public Builder scheduler ( ScheduledExecutorService executorService ) { this . _executorService = executorService ; return this ; }
16810	public static void renderTemplate ( String templateLocation , String templateString , Map < String , Object > context , Appendable outWriter ) throws TemplateException , IOException { renderTemplate ( templateLocation , templateString , context , outWriter , _BOOL ) ; }
16816	public boolean isIgnoreSensors ( ) { return this . ignoreSensors ; }
16837	public void clearTokens ( ) { tokens . clear ( ) ; saveTokenChanges ( ) ; }
16850	public byte [ ] serialize ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( metadataFormatVersion ) . append ( LINE_SPLITTER ) ; sb . append ( dlType ) . append ( LINE_SPLITTER ) ; sb . append ( dlConfig . serialize ( ) ) ; LOG . debug ( _CHAR Serialized dl metadata { } . _CHAR , sb ) ; return sb . toString ( ) . getBytes ( UTF_8 ) ; }
16854	public boolean hasProgram ( ) { return program != _NULL ; }
16869	public static ExpectedCondition < Boolean > elementNotPresentOrVisible ( final By bySelector ) { return _NULL ; }
16922	public static < K , U > LinkedHashMap < K , U > createLinkedMap ( SimpleEntry < K , U > ... entries ) { return Stream . of ( entries ) . collect ( entryToLinkedMap ( ) ) ; }
16932	protected boolean isEmpty ( ) { return children . isEmpty ( ) || getItemCount ( children ) == _NUM ; }
16942	private void analyzeClass ( SootClass sootClass , SootClass lifecycleElement ) { if ( sootClass . getName ( ) . startsWith ( _CHAR android . '' ) || sootClass . getName ( ) . startsWith ( _CHAR java . '' ) ) return ; analyzeClassInterfaceCallbacks ( sootClass , sootClass , lifecycleElement ) ; }
16986	private boolean canUploadEmblem ( Player activePlayer ) { if ( ! isBrigadeGeneral ( activePlayer ) ) { return _BOOL ; } else if ( activePlayer . getLegion ( ) . getLegionLevel ( ) < _NUM ) { return _BOOL ; } else if ( ! activePlayer . getLegion ( ) . getLegionEmblem ( ) . isUploading ( ) ) { return _BOOL ; } return _BOOL ; }
17000	private Object parseElement ( Node element ) throws XmlParseException { try { return parseElementRaw ( element ) ; } catch ( Exception e ) { throw new XmlParseException ( _CHAR Failed to parse : _CHAR + element . getNodeName ( ) , e ) ; } }
17020	public Response doPost ( String url ) { return doPost ( url , _NULL ) ; }
17055	public boolean isPrimitive ( ) { return ! isBinaryObject ( ) && ! isCollection ( ) && ! isSymbol ( ) && ! isNull ( ) ; }
17064	@ Override public int [ ] makeDensityTestPoints ( ) { return new int [ ] { - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
17099	private static boolean isSeparator ( char ch ) { return ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR ; }
17102	public boolean isPerLogicalSubjectLockObject ( boolean isEvictable ) { if ( isEvictable ) throw new RuntimeException ( _CHAR AllInCacheLockManager : : no evictable object _CHAR ) ; return _BOOL ; }
17106	public ChangeSet addAllToCollection ( String path , Serializable ... newItems ) { return addAllToCollection ( path , Arrays . asList ( newItems ) ) ; }
17108	public static SM_SYSTEM_MESSAGE STR_MSG_PERSONAL_SHOP_SELL_ITEM_MULTI ( int num1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0s ) ; }
17109	public boolean isPresent ( String name ) { return featureMap . containsKey ( name ) ; }
17112	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_ABYSS_POINT_GAIN ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
17113	@ NotNull public File createProjectFile ( @ NotNull String path ) { File file = new File ( myRootDir , path ) ; FileUtil . createIfDoesntExist ( file ) ; return file ; }
17125	public Boolean isLogSubscription ( ) { return logSubscription ; }
17140	public static Style cyan ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_CYAN ) ; return style ; }
17146	public static void renderTemplateAtLocation ( String templateLocation , Map < String , Object > context , Appendable outWriter ) throws MalformedURLException , TemplateException , IOException { renderTemplate ( templateLocation , context , outWriter ) ; }
17163	public static long elapsedMilliseconds ( Date dateStart , Date dateEnd ) { return dateEnd . getTime ( ) - dateStart . getTime ( ) ; }
17169	@ JsonValue public String toJson ( ) { return jsonName ; }
17173	public boolean hasTypeDecl ( ) { return getTypeDeclOpt ( ) . getNumChild ( ) != _NUM ; }
17194	public boolean isFinished ( ) { return ! Executor . isProcessAlive ( getProcess ( ) ) ; }
17198	public void hide ( ) { hide ( _BOOL , _NULL ) ; }
17201	private MessageDigest cloneMessageDigest ( ) { try { return ( MessageDigest ) messageDigest . clone ( ) ; } catch ( CloneNotSupportedException e ) { return getMessageDigest ( ) ; } }
17202	@ Override public String toString ( ) { return Vector1DFormat . getInstance ( ) . format ( this ) ; }
17207	public HumanTime y ( ) { return y ( _NUM ) ; }
17220	private boolean isSelf ( Player player , int targetObjId ) { return player . sameObjectId ( targetObjId ) ; }
17224	public void removeAt ( int index ) { System . arraycopy ( mKeys , index + _NUM , mKeys , index , mSize - ( index + _NUM ) ) ; System . arraycopy ( mValues , index + _NUM , mValues , index , mSize - ( index + _NUM ) ) ; mSize -- ; }
17236	public void activate ( ) { getViewer ( ) . getSearchManager ( ) . setSearcher ( getSearcher ( ) ) ; getViewer ( ) . getSearchManager ( ) . getFindDialogAsToolBar ( ) . clearMessage ( ) ; if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionClasses ( ) ; chartSelection . setSelectedClass ( getSelectedLabels ( ) , _BOOL ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
17239	@ Override public Iterator < S2CellId > iterator ( ) { return cellIds . iterator ( ) ; }
17254	public Dfp newDfp ( final double x ) { return new Dfp ( this , x ) ; }
17263	default boolean hasDataForHttp ( ) { return _BOOL ; }
17291	public boolean isExperimentEnabled ( String experiment ) { return experiments . contains ( experiment ) ; }
17296	Collection < ? extends ClientRequestResult > handleExecuteCommandRequest ( final ClientRequest executeCommandRequest ) { final Collection < CommandReport > commandReports = new ArrayList < CommandReport > ( _NUM ) ; commandReports . add ( commandExecutionManager . execute ( ( CommandExecuteRequest < ? > ) executeCommandRequest . getObjectParameter ( ) ) ) ; if ( LOG . isDebugEnabled ( ) ) { LOG . debug ( _CHAR Finished executing command - returning report . '' ) ; } return commandReports ; }
17339	private int computeKey ( int row , int column ) { return row * columns + column ; }
17344	public String process ( Item item ) throws ProcessException { return pos . getPartOfSpeech ( item . toString ( ) ) ; }
17353	public String toString ( ) { return _CHAR ClientMaxPrincipal _CHAR + Constraint . toString ( principals ) ; }
17354	public static SM_SYSTEM_MESSAGE STR_REMAIN_PLAYTIME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17362	public static void requestClose ( final Tab tab ) { TabPaneBehavior behavior = getBehavior ( tab ) ; if ( behavior . canCloseTab ( tab ) ) { behavior . closeTab ( tab ) ; } }
17426	public void refreshZoneImpl ( ) { getOwner ( ) . revalidateZones ( ) ; }
17445	public Boolean isRecordRepeatedSteps ( ) { return recordRepeatedSteps ; }
17459	public static List < TimeZone > availableTimeZones ( ) { return TimeZoneHolder . availableTimeZoneList ; }
17463	public PhotosCreateCommentQuery createComment ( UserActor actor , int photoId ) { return new PhotosCreateCommentQuery ( getClient ( ) , actor , photoId ) ; }
17473	public SQLDataMigrator configure ( Connection connection ) { this . connection = connection ; this . metadata = new SQLModel ( connection ) ; return this ; }
17478	public void write ( long [ ] data ) { for ( long l : data ) { writeLong ( l ) ; } }
17479	public boolean splitsTaxa ( BitSet taxa ) { return A . intersects ( taxa ) && B . intersects ( taxa ) ; }
17480	public boolean isDirect ( ) { return direct ; }
17486	public void clearProcessors ( ) { processors . clear ( ) ; processors . addProcessor ( new GestureDetector ( this ) ) ; Gdx . input . setInputProcessor ( processors ) ; }
17487	public void addHeader ( @ LayoutRes int layoutId , Object data ) { int insertPosition = calcInsertPosition ( _NUM ) ; mInserts . add ( insertPosition , new Insertion ( layoutId , data , Insertion . TYPE_HEADER ) ) ; getItems ( ) . add ( insertPosition , _NULL ) ; mHeadersCount += _NUM ; notifyIfNeed ( ) ; }
17501	public AccountRegisterDeviceQuery registerDevice ( UserActor actor , String token , String deviceId ) { return new AccountRegisterDeviceQuery ( getClient ( ) , actor , token , deviceId ) ; }
17512	@ Override public ArcsSet wholeSpace ( ) { return new ArcsSet ( tolerance ) ; }
17515	public RequestHandle put ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return put ( _NULL , url , params , responseHandler ) ; }
17520	public boolean isLedgerHandleClosed ( LedgerDescriptor ledgerDesc ) throws BKException { RefCountedLedgerHandle refhandle = getLedgerHandle ( ledgerDesc ) ; if ( _NULL == refhandle ) { LOG . error ( _CHAR Accessing ledger { } without opening . '' , ledgerDesc ) ; throw BKException . create ( BKException . Code . UnexpectedConditionException ) ; } return refhandle . handle . isClosed ( ) ; }
17550	public boolean handleRequest ( ZWaveController zController , SerialMessage lastSentMessage , SerialMessage incomingMessage ) throws ZWaveSerialMessageException { logger . warn ( _CHAR TODO : { } unsupported REQUEST . '' , incomingMessage . getMessageClass ( ) . getLabel ( ) ) ; return _BOOL ; }
17554	public MyDialog contentView ( View v ) { mContentView = v ; mContainer . removeAllViews ( ) ; mContainer . addView ( v ) ; return this ; }
17555	public CreateSiteWindow selectNthTemplate ( int i ) { templatesList . get ( i ) . click ( ) ; return this ; }
17557	public final double readDouble ( ) { return Double . longBitsToDouble ( readLong ( ) ) ; }
17581	private static String translate ( final String s , final Locale locale ) { try { ResourceBundle bundle = ResourceBundle . getBundle ( _CHAR org . apache . commons . math . MessagesResources _CHAR , locale ) ; if ( bundle . getLocale ( ) . getLanguage ( ) . equals ( locale . getLanguage ( ) ) ) { return bundle . getString ( s ) ; } } catch ( MissingResourceException mre ) { } return s ; }
17595	public void endAction ( MotionEvent me ) { OnChartGestureListener l = mChart . getOnChartGestureListener ( ) ; if ( l != _NULL ) { l . onChartGestureEnd ( me , mLastGesture ) ; } }
17607	public boolean adjustValue ( short key , long amount ) { int index = index ( key ) ; if ( index < _NUM ) { return _BOOL ; } else { _values [ index ] += amount ; return _BOOL ; } }
17609	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
17650	public static UserFeedback createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , UserFeedback . class ) ; }
17661	public static String toString ( URI uri , Charset encoding ) throws IOException { return toString ( uri . toURL ( ) , Charsets . toCharset ( encoding ) ) ; }
17665	public Shape rectangle ( double x , double y , double width , double height ) { m_rect . setFrame ( x , y , width , height ) ; return m_rect ; }
17691	public String toString ( cp_info constant_pool [ ] ) { return Integer . toString ( ( int ) bytes ) ; }
17703	public void release ( ) { releaseEglSurface ( ) ; }
17729	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_WARNING_DICOMPOSITION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17748	public static void drawSnapIndicator ( ViewTransform transform , Graphics2D g , SnapCandidate candidate ) { if ( candidate . source == _NULL || candidate . target == _NULL ) { return ; } if ( candidate . source . isVerticalAnchor ( ) ) { drawSnapVerticalIndicator ( transform , g , candidate ) ; } else { drawSnapHorizontalIndicator ( transform , g , candidate ) ; } }
17767	public void resetHighThreshold ( ) { this . currentHighThreshold = highThreshold ; }
17779	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
17812	@ Override public void endExternalSubset ( Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . endExternalSubset ( augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . endExternalSubset ( augs ) ; } }
17837	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_REMAIN_TIME ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
17842	public JSONObject put ( String key , long value ) throws JSONException { put ( key , new Long ( value ) ) ; return this ; }
17883	public Value size ( Value target ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
17886	private void drawShadows ( Canvas canvas ) { topShadow . setBounds ( _NUM , _NUM , getWidth ( ) , getHeight ( ) / _NUM ) ; topShadow . draw ( canvas ) ; bottomShadow . setBounds ( _NUM , getHeight ( ) / _NUM , getWidth ( ) , getHeight ( ) ) ; bottomShadow . draw ( canvas ) ; }
17896	public static FactorialLog create ( ) { return new FactorialLog ( _NUM , _NULL ) ; }
17902	@ Override public PolygonsSet wholeSpace ( ) { return new PolygonsSet ( tolerance ) ; }
17914	public JSONObject put ( String key , int value ) throws JSONException { put ( key , new Integer ( value ) ) ; return this ; }
17924	public void refined__Program_addCompilationUnit ( CompilationUnit node ) { List < CompilationUnit > list = ( parent == _NULL || state == _NULL ) ? getCompilationUnitListNoTransform ( ) : getCompilationUnitList ( ) ; list . addChild ( node ) ; }
17928	public void addTypeDecl ( TypeDecl node ) { List < TypeDecl > list = ( parent == _NULL || state == _NULL ) ? getTypeDeclListNoTransform ( ) : getTypeDeclList ( ) ; list . addChild ( node ) ; }
17943	public AccountSaveProfileInfoQuery bdate ( String value ) { return unsafeParam ( _CHAR bdate _CHAR , value ) ; }
17945	public static final boolean isExpired ( long time ) { return time < System . currentTimeMillis ( ) ; }
17957	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
17962	private float calcAngle ( float value ) { return calcAngle ( value , mData . getYValueSum ( ) ) ; }
17969	public void remove ( T item ) { if ( items . remove ( item ) ) { notifyDataSetChanged ( ) ; } }
17980	public void toggle ( boolean animate ) { toggle ( animate , fadeIn , fadeOut ) ; }
17985	public static SM_SYSTEM_MESSAGE STR_MSG_NOT_SKIN_CHANGED_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17986	public String process ( Item seg ) throws ProcessException { if ( segOnsetCtype ( seg , _CHAR r _CHAR ) . equals ( _CHAR _NUM _CHAR ) ) { return segOnsetCtype ( seg , _CHAR l _CHAR ) ; } return _CHAR _NUM _CHAR ; }
18009	public static void skip ( DataInput in ) throws IOException { int length = WritableUtils . readVInt ( in ) ; WritableUtils . skipFully ( in , length ) ; }
18022	public int compare ( File file1 , File file2 ) { int result = _NUM ; for ( Comparator < File > delegate : delegates ) { result = delegate . compare ( file1 , file2 ) ; if ( result != _NUM ) { break ; } } return result ; }
18028	public static String toString ( URI uri ) throws IOException { return toString ( uri , Charset . defaultCharset ( ) ) ; }
18030	public Boolean isAutoOpen ( ) { return autoOpen ; }
18041	public java . lang . Boolean isEscaped ( ) { return escaped ; }
18053	private void verifyOption ( Object opt ) { if ( ! isOptionEmpty ( opt ) && ! hasOptionAllTracks ( opt ) ) { throw new ConversionException ( _CHAR Audio Option should contain all tracks or be empty _CHAR ) ; } }
18073	public boolean isAllow ( ) { return allow ; }
18078	public final int readLEInt ( byte [ ] byteArray ) { return ( byteArray [ _NUM ] ) << _NUM | ( byteArray [ _NUM ] & _NUM ) << _NUM | ( byteArray [ _NUM ] & _NUM ) << _NUM | ( byteArray [ _NUM ] & _NUM ) ; }
18083	public FriendsEditListQuery userIds ( List < Integer > value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
18115	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
18116	public HumanTime h ( ) { return h ( _NUM ) ; }
18123	public void addToken ( View v ) { if ( selectedToken != _NULL ) { cth . addToken ( selectedToken ) ; updateEditField ( ) ; updateClipPreview ( ) ; } else { Toast . makeText ( this , R . string . clipboard_no_token_selected , Toast . LENGTH_LONG ) . show ( ) ; } }
18130	public final short readShort ( ) { final int byte1 = bs . readByte ( ) ; final int byte2 = bs . readByte ( ) ; return ( short ) ( ( byte2 << _NUM ) + byte1 ) ; }
18131	public static JavaRDD < List < List < Writable >> > zeroMeanUnitVarianceSequence ( Schema schema , JavaRDD < List < List < Writable >> > sequence ) { return zeroMeanUnitVarianceSequence ( schema , sequence , _NULL ) ; }
18134	public NotesEditQuery edit ( UserActor actor , int noteId , String title , String text ) { return new NotesEditQuery ( getClient ( ) , actor , noteId , title , text ) ; }
18135	public void addTableListener ( TableListener listnr ) { if ( ! m_listeners . contains ( listnr ) ) m_listeners . add ( listnr ) ; }
18143	public PollsGetVotersQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
18144	public boolean hasBlock ( ) { return getBlockOpt ( ) . getNumChild ( ) != _NUM ; }
18156	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . lib_main ) ; Lib . handleTextView ( this ) ; }
18162	private void openPokemonGoApp ( ) { Intent i = getPackageManager ( ) . getLaunchIntentForPackage ( _CHAR com . nianticlabs . pokemongo _CHAR ) ; if ( i != _NULL ) { startActivity ( i ) ; } }
18166	public Color add ( Color color ) { this . r += color . r ; this . g += color . g ; this . b += color . b ; this . a += color . a ; clamp ( ) ; return this ; }
18168	public static < E > boolean isNotEmpty ( CharSequence c ) { return ( ( c != _NULL ) && ( c . length ( ) > _NUM ) ) ; }
18179	public boolean isSwipeable ( ) { return mSwipeable ; }
18195	public AggregationSet sum ( String path ) { return add ( new SumAggregator ( ) . setPath ( path ) ) ; }
18196	public Builder stepTitleTextColor ( int stepTitleTextColor ) { this . stepTitleTextColor = stepTitleTextColor ; return this ; }
18219	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
18220	@ Override protected void assertDependentMetricsExist ( List < String > dependentDimensions ) { for ( String dependentDimension : dependentDimensions ) { if ( dimensionDictionary . findByApiName ( dependentDimension ) == _NULL ) { String message = String . format ( _CHAR Cardinality metric dependent dimension % s is not in the dimension dictionary _CHAR , dependentDimension ) ; LOG . error ( message ) ; throw new IllegalArgumentException ( message ) ; } } }
18222	int peek ( ) throws IOException { int lookaheadChar = in . read ( ) ; in . unread ( lookaheadChar ) ; return lookaheadChar ; }
18224	public String serialize ( ) { return serialize ( CUR_VERSION ) ; }
18230	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
18237	public static void printException ( final Exception e ) { e . printStackTrace ( instance ) ; }
18242	public static ITextComponent handle ( ITextComponent message , ICommandSender sender ) { final MessageEvent . Chat event = new MessageEvent . Chat ( message , sender , sender == _NULL ? Side . CLIENT : Side . SERVER ) ; return OpenModLoader . getEventBus ( ) . post ( event ) ? event . getMessage ( ) : _NULL ; }
18261	@ Override public void onClick ( View v ) { int viewId = v . getId ( ) ; if ( viewId == R . id . img_error_layout ) { autoLoadingData ( ) ; } }
18268	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_NPC_PARRY ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
18276	public static long addItem ( Player player , Item sourceItem ) { return addItem ( player , sourceItem . getItemId ( ) , sourceItem . getItemCount ( ) , sourceItem , DEFAULT_UPDATE_PREDICATE ) ; }
18293	@ Override public void renderLimitLines ( Canvas c ) { }
18334	public void toggle ( Animation animIn , Animation animOut ) { toggle ( _BOOL , animIn , animOut ) ; }
18340	public static void closeDocument ( Document document ) { if ( document . isOpen ( ) ) { document . close ( ) ; } }
18352	public void addVariableDecl ( VariableDecl node ) { List < VariableDecl > list = ( parent == _NULL || state == _NULL ) ? getVariableDeclListNoTransform ( ) : getVariableDeclList ( ) ; list . addChild ( node ) ; }
18358	public Node < K , V > last ( ) { Node < K , V > node = this ; Node < K , V > child = node . right ; while ( child != _NULL ) { node = child ; child = node . right ; } return node ; }
18368	public String process ( Item item ) throws ProcessException { return getPhoneFeature ( item , _CHAR vheight _CHAR ) ; }
18372	@ Override protected boolean isForward ( ) { return _BOOL ; }
18384	public void clearTransaction ( ) { modifiedConcepts . clear ( ) ; modifiedCastings . clear ( ) ; modifiedResources . clear ( ) ; }
18388	private DataQueryParams removeDimension ( String dimension ) { this . dimensions . remove ( new BaseDimensionalObject ( dimension ) ) ; return this ; }
18397	private void skip ( int n ) { idx += n ; }
18406	public static StatisticLevel toLevel ( String sArg , Level defaultLevel ) { return STATISTIC ; }
18419	public boolean isAtom ( ) { return myObject instanceof Atom ; }
18429	public NewsfeedUnignoreItemQuery unignoreItem ( UserActor actor , NewsfeedItemType type , int ownerId , int itemId ) { return new NewsfeedUnignoreItemQuery ( getClient ( ) , actor , type , ownerId , itemId ) ; }
18452	public static int computeHash ( byte [ ] key , int offset , int length , int mask ) { return Math . abs ( MurmurHash3 . murmurhash3x8632 ( key , offset , length , _NUM ) & mask ) ; }
18494	public void selectItem ( final int location , final boolean value ) { if ( value ) { this . selectedItems . put ( location , _BOOL ) ; } else { this . selectedItems . delete ( location ) ; } this . notifyItemChanged ( location ) ; }
18512	public boolean isAskForPassword ( ) { return askForPassword ; }
18523	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
18534	@ Override public int [ ] makeDensityTestPoints ( ) { return new int [ ] { - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
18547	private void addEntry ( ) { filterModel . addNewEntry ( ) ; extentModel . populate ( _NULL ) ; removeFTCButton . setEnabled ( _BOOL ) ; addExtentButton . setEnabled ( _BOOL ) ; removeExtentButton . setEnabled ( _BOOL ) ; }
18559	public boolean hasMoreLine ( ) { return mHasMoreByMaxLine ; }
18565	public boolean isEmpty ( ) { synchronized ( contents ) { return ( contents . isEmpty ( ) ) ; } }
18576	public MessagesGetChatQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
18584	public void addTopLevelContents ( Collection < ContentElement > contents ) { topLevelContents . addAll ( contents ) ; }
18601	@ Override public void stop ( ) { impl . stop ( ) ; }
18617	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_WARNING_NOTSEALED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18618	public static Map < String , Object > sendOrderCompleteNotification ( DispatchContext ctx , Map < String , ? extends Object > context ) { return sendOrderNotificationScreen ( ctx , context , _CHAR PRDS_ODR_COMPLETE _CHAR ) ; }
18622	public Dfp newInstance ( final byte sig , final byte code ) { return field . newDfp ( sig , code ) ; }
18646	public int addItemToEnd ( ShoppingCartItem item ) throws CartItemModifyException { return addItem ( cartLines . size ( ) , item ) ; }
18660	public static boolean isInitialized ( Context ctx ) { vitamioPackage = ctx . getPackageName ( ) ; vitamioLibraryPath = ContextUtils . getDataDir ( ctx ) + _CHAR lib / _CHAR ; return _BOOL ; }
18665	public String tableName ( ) { return tblName ; }
18673	public String packageName ( ) { return mPackageName ; }
18681	public static String toString ( URL url , String encoding ) throws IOException { return toString ( url , Charsets . toCharset ( encoding ) ) ; }
18697	public static boolean isExternalStorageReadable ( ) { String state = Environment . getExternalStorageState ( ) ; return Environment . MEDIA_MOUNTED . equals ( state ) || Environment . MEDIA_MOUNTED_READ_ONLY . equals ( state ) ; }
18708	public void add ( int i , Action a ) { m_actions . add ( i , a ) ; }
18711	public final TestSubscriber < T > assertFusionRejected ( ) { if ( establishedFusionMode != Fuseable . NONE ) { throw new AssertionError ( _CHAR Fusion was granted _CHAR ) ; } return this ; }
18715	private void updateElapsedTimeValues ( long elapsedTimeMs ) { elapsedTimeMs = Math . abs ( elapsedTimeMs ) ; mTempHours = getHours ( elapsedTimeMs ) ; mTempMins = getMins ( elapsedTimeMs , mTempHours ) ; mTempSecs = getSecs ( elapsedTimeMs , mTempHours , mTempMins ) ; mTempTenthsOfSecs = getTenthsOfSecs ( elapsedTimeMs , mTempHours , mTempMins , mTempSecs ) ; }
18728	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_ENEMY_PARRY ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
18751	@ Override public void endExternalSubset ( Augmentations augs ) throws XNIException { fInDTDExternalSubset = _BOOL ; fBaseURIStack . pop ( ) ; }
18765	public boolean doFirstLastHaveToBeSame ( ) { return doFirstLastHaveToBeSame ; }
18768	public Expression and ( Expression exp1 , Expression exp2 ) { return new LogicalExpression ( exp1 , exp2 , ExpressionType . AND ) ; }
18777	@ Override public String toString ( ) { return fXPath . toString ( ) ; }
18781	public Object remove ( int index ) { Object o = opt ( index ) ; this . myArrayList . remove ( index ) ; return o ; }
18792	@ Override public Boolean next ( ) { byte b = iterator . next ( ) ; if ( b == ( byte ) _NUM ) { return _BOOL ; } if ( b == ( byte ) _NUM ) { return _BOOL ; } return _NULL ; }
18793	public boolean drain ( ) { timer . stop ( _CHAR speakableOut _CHAR ) ; return _BOOL ; }
18795	public RequestHandle post ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return post ( _NULL , url , params , responseHandler ) ; }
18829	public long put ( K key , long value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
18841	public boolean write ( byte [ ] audioData ) { return write ( audioData , _NUM , audioData . length ) ; }
18854	public void deleteAvd ( @ NotNull AvdInfo info ) { if ( ! initIfNecessary ( ) ) { return ; } myAvdManager . deleteAvd ( info , SDK_LOG ) ; }
18878	public static void initialize ( ) { if ( sIsInit ) { return ; } sIsInit = _BOOL ; }
18884	public IReadBlock next ( ) { try { countReads ++ ; return ReadBlockRMA2 . read ( rma2Formatter , - _NUM , wantReadText , wantMatchData , wantMatchText , minScore , maxExpected , textStorageReader , dataIndexReader ) ; } catch ( IOException e ) { Basic . caught ( e ) ; error = _BOOL ; return _NULL ; } }
18892	public static String toString ( URI uri ) throws IOException { return toString ( uri , Charset . defaultCharset ( ) ) ; }
18900	public CarouselOptions minAlpha ( int minAlpha ) { mMinAlpha = minAlpha ; return this ; }
18912	public void addRequestLocation ( String name ) { if ( name != _NULL ) { this . requestLocationSet . add ( name ) ; } }
18925	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM , _NUM , _NUM } ; }
18940	HashMap < String , Object > cloneProperties ( ) { if ( Properties == _NULL ) { return _NULL ; } HashMap < String , Object > props = new HashMap < String , Object > ( Properties . size ( ) ) ; props . putAll ( Properties ) ; return props ; }
18941	protected void animateToNearestState ( ) { final PanelState nearestState = findNearestPanelStateFromHeight ( getHeight ( ) ) ; final float displacement = getPanelHeightFromState ( nearestState ) - getHeight ( ) ; final long duration = calculateAnimationDuration ( INITIAL_ANIMATION_VELOCITY_DP_PER_SECOND , displacement ) ; animatePanelToState ( nearestState , StateChangeReason . SWIPE , duration ) ; }
18983	public String toStringMultiLine ( boolean interpolate ) { ConfigurationNodeVisitor visitor = new ToStringMultiLineVisitor ( ) ; getRootNode ( ) . visit ( visitor ) ; return visitor . toString ( ) ; }
19007	@ JsonValue public String toJson ( ) { return jsonName ; }
19021	public static void dieSilently ( AbstractAI ai2 , Creature attacker ) { ai2 . getOwner ( ) . getController ( ) . onDie ( attacker ) ; }
19036	public UsersGetFollowersQueryWithFields nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
19044	protected void ac ( Object expected , Object actual ) { ae ( expected . getClass ( ) , actual . getClass ( ) ) ; }
19046	public static void logThreadStarting ( final String threadName ) { Thread . currentThread ( ) . setName ( APP_NAME + _CHAR [ _CHAR + threadName + _CHAR ] _CHAR ) ; logThreadStarting ( ) ; }
19066	public WallDeleteQuery postId ( Integer value ) { return unsafeParam ( _CHAR post_id _CHAR , value ) ; }
19079	public double taylor ( final double ... delta ) { double y = value ; for ( int i = _NUM ; i < delta . length ; ++ i ) { y += delta [ i ] * getDerivative ( i ) ; } return y ; }
19081	public FriendsEditListQuery userIds ( Integer ... value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
19129	@ JsonIgnore public boolean isValid ( ) { if ( this . msgRateIn > _NUM . _NUM && this . msgRateOut > _NUM . _NUM && this . bandwidthIn > _NUM . _NUM && this . bandwidthOut > _NUM . _NUM && this . memory > _NUM . _NUM ) { return _BOOL ; } else { return _BOOL ; } }
19132	public Dfp newInstance ( final int x ) { return new Dfp ( getField ( ) , x ) ; }
19133	@ Override public void accept ( TestValueVisitor visitor , FieldIdEnum fieldId ) { visitor . setTestValue ( fieldId , this . value ) ; }
19137	public RequestHandle post ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return post ( _NULL , url , params , responseHandler ) ; }
19169	public void addColumn ( String name , int length ) { int idx = names . length ; ensureCapacity ( idx + _NUM ) ; names [ idx ] = name ; cols [ idx + _NUM ] = cols [ idx ] + length ; }
19188	public int put ( K key , int value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
19192	public static < T extends RealFieldElement < T >> T max ( final T e1 , final T e2 ) { return e1 . subtract ( e2 ) . getReal ( ) >= _NUM ? e1 : e2 ; }
19200	public void addTypeDecl ( TypeDecl node ) { List < TypeDecl > list = ( parent == _NULL || state == _NULL ) ? getTypeDeclListNoTransform ( ) : getTypeDeclList ( ) ; list . addChild ( node ) ; }
19264	public void addOrganisationUnit ( OrganisationUnit unit ) { this . organisationUnits . add ( unit ) ; }
19289	public static int hash ( int value ) { return value * _NUM ; }
19300	@ Override public Boolean useProxy ( ) { return Boolean . parseBoolean ( ( String ) properties . get ( _CHAR export . rest . useProxy _CHAR ) ) ; }
19322	@ AfterMethod private void runAfterMethod ( ITestResult result ) { LOGGER . info ( pfr . getResultString ( result ) + _CHAR <===============\ n \ n \ n _CHAR ) ; }
19327	public boolean isNumber ( ) { return value instanceof Number ; }
19335	private void acquireWakeLockAndStartService ( Context context ) { acquireWakeLock ( context ) ; startPrecacheService ( context ) ; }
19371	public static String slurpFile ( String filename ) throws IOException { return slurpReader ( new FileReader ( filename ) ) ; }
19386	public T proxy ( ) { executorFactoryBean . afterPropertiesSet ( ) ; return ( T ) executorFactoryBean . getObject ( ) ; }
19389	public boolean isOption ( ) { if ( option == _NULL ) { return _BOOL ; } else { return option ; } }
19405	public boolean isSPD ( ) { return isspd ; }
19411	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
19413	public static void main ( String [ ] args ) { SpringApplication . run ( Main . class , args ) ; }
19417	public void addNeighbor ( Integer nodeId ) { nodeNeighbors . add ( nodeId ) ; }
19425	private void initInjector ( ) { appComponent = DaggerAppComponent . builder ( ) . networkModule ( new NetworkModule ( this ) ) . dataModule ( new DataModule ( this ) ) . build ( ) ; }
19437	public boolean isOrientationSpecificLayout ( ) { return myEditedConfig . getScreenOrientationQualifier ( ) != _NULL ; }
19465	public void removeLast ( ) { remove ( innerChain . getLast ( ) ) ; }
19478	public RequestHandle head ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return head ( _NULL , url , params , responseHandler ) ; }
19504	public LogSeqNum checkpoint ( List < Long > txNums ) { return new CheckpointRecord ( txNums ) . writeToLog ( ) ; }
19507	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_NPC_BLOCK ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
19513	@ SuppressWarnings ( _CHAR unchecked _CHAR ) void removeBox ( ValueBox vb ) { if ( vb == _NULL ) return ; if ( boxes == vb ) { boxes = _NULL ; } else if ( boxes instanceof List ) { List < ValueBox > list = ( List < ValueBox > ) boxes ; list . remove ( vb ) ; } }
19515	public final boolean isFinished ( ) { return mFinished ; }
19517	public MarketSearchQuery search ( UserActor actor , int ownerId ) { return new MarketSearchQuery ( getClient ( ) , actor , ownerId ) ; }
19573	public static java . util . Date toDate ( Timestamp timestamp ) { if ( timestamp == _NULL ) { return _NULL ; } long milliseconds = timestamp . getTime ( ) + ( timestamp . getNanos ( ) / _NUM ) ; return new Date ( milliseconds ) ; }
19587	public boolean isShowLabel ( ) { if ( showLabel == _NULL ) { return _BOOL ; } else { return showLabel ; } }
19590	public Single < Void > writeUserInDatabase ( final String _userId , final String _name ) { User user = new User ( _name ) ; DatabaseReference targetChild = this . firebaseDatabase . getReference ( ) . child ( FIREBASE_CHILD_KEY_USERS ) . child ( _userId ) ; return observeSingleValue ( targetChild . setValue ( user ) ) ; }
19601	public Object executeScript ( Map < String , Object > context ) throws Exception { return ScriptUtil . evaluate ( language , script , _NULL , context ) ; }
19620	public void removeEquipment ( int pieceIndex ) { removeEquipment ( pieceIndex , _BOOL ) ; }
19624	@ Override public void startExternalSubset ( XMLResourceIdentifier identifier , Augmentations augmentations ) throws XNIException { }
19633	public static ExpectedCondition < Boolean > hasNodePropertyValue ( final Session session , final String nodePath , final String propertyName , final String propertyValue ) { LOG . debug ( _CHAR Checking if node ' { } ' has property ' { } ' with value ' { } ' '' , nodePath , propertyName , propertyValue ) ; return _NULL ; }
19636	public Builder iconSize ( Point iconSize ) { this . iconSize = iconSize ; return this ; }
19643	public short max ( ) { if ( size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR can not find maximum of an empty list _CHAR ) ; } short max = Short . MIN_VALUE ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( _data [ i ] > max ) { max = _data [ i ] ; } } return max ; }
19658	@ Override public boolean onTouchEvent ( MotionEvent event ) { if ( mIsEnabled ) { return mGestureDetector . onTouchEvent ( event ) ; } return _BOOL ; }
19659	public Object remove ( int index ) { return index >= _NUM && index < this . length ( ) ? this . myArrayList . remove ( index ) : _NULL ; }
19668	public int remove ( K key ) { int prev = ( int ) _NUM ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
19673	public static ChangelogDialog newInstance ( boolean cancelable ) { ChangelogDialog fragment = new ChangelogDialog ( ) ; Bundle args = new Bundle ( ) ; args . putBoolean ( ARG_CANCELABLE , cancelable ) ; fragment . setArguments ( args ) ; return fragment ; }
19685	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Utf8_info ci = ( CONSTANT_Utf8_info ) ( constant_pool [ string_index ] ) ; return _CHAR \ _CHAR _CHAR + ci . convert ( ) + _CHAR \ _CHAR _CHAR ; }
19686	@ Override public int hashCode ( ) { final int prime = _NUM ; int result = _NUM ; result = prime * result + ( ( columnSchema == _NULL ) ? _NUM : columnSchema . hashCode ( ) ) ; return result ; }
19701	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
19702	public static String maryBase ( ) { return getFilename ( _CHAR mary . base _CHAR , _CHAR . _CHAR ) ; }
19706	public static SM_SYSTEM_MESSAGE STR_DECOMPOUND_ERROR_NOT_AVAILABLE ( int i ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( i ) ) ; }
19722	public Boolean hasNodePropertyValue ( String nodePath , String propertyName , String propertyValue ) throws RepositoryException { LOG . debug ( _CHAR Checking if node ' { } ' has property ' { } ' with value ' { } ' '' , nodePath , propertyName , propertyValue ) ; return getNodeProperty ( nodePath , propertyName ) . getValue ( ) . getString ( ) . equals ( propertyValue ) ; }
19735	public NopStmt newNopStmt ( ) { return new JNopStmt ( ) ; }
19753	private void checkApplyingFilter ( UserFilter filter , String filterID , String userName ) { expect ( filter , notNull ( ) ) . verify ( USER_FILTER_NOT_FOUND , filterID , userName ) ; expect ( filter . isLink ( ) , equalTo ( _BOOL ) ) . verify ( UNABLE_TO_CREATE_WIDGET , _CHAR Can not create widget based on a link . '' ) ; }
19763	private boolean matches ( ByteOrderMark bom ) { for ( int i = _NUM ; i < bom . length ( ) ; i ++ ) { if ( bom . get ( i ) != firstBytes [ i ] ) { return _BOOL ; } } return _BOOL ; }
19785	public Expression containsValue ( Value map , Value arg ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
19786	@ Override public void endExternalSubset ( Augmentations augs ) throws XNIException { endParameterEntity ( _CHAR [ dtd ] _CHAR , augs ) ; }
19789	@ Override protected void onNewIntent ( Intent intent ) { super . onNewIntent ( intent ) ; if ( this . appView != _NULL ) this . appView . onNewIntent ( intent ) ; }
19796	@ Override public void onRemoveDataTag ( final SourceDataTag sourceDataTag , final ChangeReport changeReport ) { this . medDynamicTimeDeadbandFilterActivator . removeDataTag ( sourceDataTag ) ; this . lowDynamicTimeDeadbandFilterActivator . removeDataTag ( sourceDataTag ) ; changeReport . appendInfo ( _CHAR Data tag _CHAR + sourceDataTag . getId ( ) + _CHAR removed from any filters . '' ) ; }
19802	public void prepareMatrixOffset ( boolean inverted ) { mMatrixOffset . reset ( ) ; if ( ! inverted ) mMatrixOffset . postTranslate ( mViewPortHandler . offsetLeft ( ) , mViewPortHandler . getChartHeight ( ) - mViewPortHandler . offsetBottom ( ) ) ; else { mMatrixOffset . setTranslate ( mViewPortHandler . offsetLeft ( ) , - mViewPortHandler . offsetTop ( ) ) ; mMatrixOffset . postScale ( _NUM . _NUM , - _NUM . _NUM ) ; } }
19811	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bind_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
19836	public void transformTableToContainer ( ConstraintTableLayout table ) { ConstraintWidgetContainer container = new ConstraintWidgetContainer ( ) ; container . setDebugName ( createContainerName ( _CHAR container _CHAR ) ) ; transformContainerToContainer ( table , container ) ; }
19841	public static String toString ( URL url ) throws IOException { return toString ( url , Charset . defaultCharset ( ) ) ; }
19859	public void addActionButton ( ActionButton actionButton ) { buttonBar . addView ( actionButton ) ; }
19896	public CaughtExceptionRef newCaughtExceptionRef ( ) { return Jimple . v ( ) . newCaughtExceptionRef ( ) ; }
19909	private boolean isAttributeComboBoxPopulated ( ) { return ! populatingAttributeComboBox ; }
19920	public void started ( ) { }
19940	public static String b2hex ( byte b ) { return String . format ( _CHAR % _NUM _CHAR , b ) ; }
19948	private ListenableFuture < AuthenticateResponse > authenticate ( ManagedChannel channel , ByteString name , ByteString password ) { ListenableFuture < AuthenticateResponse > authResp = AuthGrpc . newFutureStub ( channel ) . authenticate ( AuthenticateRequest . newBuilder ( ) . setNameBytes ( name ) . setPasswordBytes ( password ) . build ( ) ) ; return authResp ; }
19950	public boolean continueExecuting ( ) { return this . mate . isEntityAlive ( ) && isWillingToMate ( mate ) && this . spawnBabyDelay < _NUM ; }
19957	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
19962	public void done ( ) { synchronized ( myTasks ) { myTasks . remove ( myTasks . size ( ) - _NUM ) ; myTasks . notifyAll ( ) ; } }
19975	public void put ( String key , InputStream stream ) { put ( key , stream , _NULL ) ; }
19988	public UsersSearchQuery company ( String value ) { return unsafeParam ( _CHAR company _CHAR , value ) ; }
19989	public String message ( ) { return rawResponse . message ( ) ; }
19999	public boolean hasBlock ( ) { return getBlockOpt ( ) . getNumChild ( ) != _NUM ; }
20047	public String process ( Item seg ) throws ProcessException { return segOnsetCtype ( seg , _CHAR s _CHAR ) ; }
20063	public Matrix4f invert ( ) { return invert ( _NULL ) ; }
20067	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
20075	private void alertFailedLogin ( final String message ) { final Alert alert = new Alert ( Alert . AlertType . ERROR ) ; alert . setTitle ( _CHAR Error Login _CHAR ) ; alert . setHeaderText ( _CHAR Unfortunately , your login has failed _CHAR ) ; alert . setContentText ( message != _NULL ? message : _CHAR _CHAR + _CHAR \ nPress OK to try again . '' ) ; alert . showAndWait ( ) ; }
20081	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
20086	public static TapTarget forBounds ( Rect bounds , CharSequence title , @ Nullable CharSequence description ) { return new TapTarget ( bounds , title , description ) ; }
20088	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_END_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
20109	public boolean write ( byte [ ] audioData ) { return write ( audioData , _NUM , audioData . length ) ; }
20129	public String toIdString ( Object id ) { if ( id == _NULL ) return _NULL ; return id . toString ( ) ; }
20135	public void remove ( final T object ) { synchronized ( mLock ) { mList . remove ( object ) ; } notifyDataSetChanged ( ) ; }
20142	public INDArray asMatrix ( File f ) throws IOException { return NDArrayUtil . toNDArray ( fromFile ( f ) ) ; }
20167	public WallCreateCommentQuery fromGroup ( Boolean value ) { return unsafeParam ( _CHAR from_group _CHAR , value ) ; }
20179	public String toString ( final NumberFormat format ) { return new Vector3DFormat ( format ) . format ( toVector3D ( ) ) ; }
20188	public void deactivate ( ) { if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionClasses ( ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
20196	@ Override public boolean markSupported ( ) { return _BOOL ; }
20202	public boolean isEmpty ( ) { return _pos == _NUM ; }
20218	private static EntryClass toEntryClass ( Class cls ) throws MarshalException { if ( cls != _NULL ) return toEntryClassBase ( cls , _BOOL ) . eclass ; return _NULL ; }
20246	public SootMethod resolveSpecialDispatch ( SpecialInvokeExpr ie , SootMethod container ) { SootMethod target = ie . getMethod ( ) ; if ( target . getName ( ) . equals ( _CHAR < init > _CHAR ) || target . isPrivate ( ) ) return target ; else if ( isSubclass ( target . getDeclaringClass ( ) , container . getDeclaringClass ( ) ) ) return resolveConcreteDispatch ( container . getDeclaringClass ( ) , target ) ; else return target ; }
20247	public boolean isRouting ( ) { return routing ; }
20249	boolean hasWildcard ( ) { boolean wildcarded = _BOOL ; for ( int i = _NUM ; i < websterRoot . length ; i ++ ) { String root = websterRoot [ i ] ; if ( ( root . indexOf ( _CHAR ) ) != - _NUM ) { wildcarded = _BOOL ; break ; } } return ( wildcarded ) ; }
20269	public static SM_SYSTEM_MESSAGE STR_MSG_GLORY_POINT_GAIN ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
20287	private void notifyRemoved ( List < AirMapTraffic > removed ) { if ( removed == _NULL || removed . isEmpty ( ) ) { return ; } for ( AirMapTrafficListener listener : listeners ) { listener . onRemoveTraffic ( removed ) ; } }
20289	private void ensureMatcherCapacity ( ) { if ( fMatchersCount == fMatchers . length ) { XPathMatcher [ ] array = new XPathMatcher [ fMatchers . length * _NUM ] ; System . arraycopy ( fMatchers , _NUM , array , _NUM , fMatchers . length ) ; fMatchers = array ; } }
20290	public RequestHandle put ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return put ( _NULL , url , params , responseHandler ) ; }
20312	@ NotNull public File createProjectDir ( @ NotNull String path ) { File dir = createDirectory ( myRootDir , path ) ; String msg = String . format ( _CHAR Directory _CHAR should exist _CHAR , path ) ; Assert . assertTrue ( msg , dir . isDirectory ( ) ) ; return dir ; }
20313	default boolean hasDataForTls ( ) { return _BOOL ; }
20324	public void addHeader ( @ LayoutRes int layoutId ) { addHeader ( layoutId , _NULL ) ; }
20326	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
20328	public void addProperty ( String propertyName , String propertyValue ) { properties . put ( propertyName , propertyValue ) ; }
20356	public boolean isSelected ( int fId ) { Node v = getANode ( fId ) ; return v != _NULL && getSelected ( v ) ; }
20383	public boolean hasAttributes ( ) { return attributes != _NULL && ! attributes . isEmpty ( ) ; }
20386	public static boolean isShowToastEnabled ( ) { InstantRunConfiguration configuration = InstantRunConfiguration . getInstance ( ) ; return configuration . SHOW_TOAST ; }
20387	@ Override public void renderLimitLines ( Canvas c ) { }
20395	public static Object objectFromByteBuffer ( byte [ ] buffer ) throws Exception { if ( buffer == _NULL ) return _NULL ; ByteArrayInputStream inStream = new ByteArrayInputStream ( buffer ) ; ObjectInputStream in = new ObjectInputStream ( inStream ) ; Object retval = in . readObject ( ) ; in . close ( ) ; return retval ; }
20403	public static boolean canCreateMP3 ( ) { return AudioSystem . isConversionSupported ( getMP3AudioFormat ( ) , Voice . AF22050 ) ; }
20413	static String leftTrim ( String str , int len ) { return str . substring ( str . length ( ) - len ) ; }
20414	public static SM_SYSTEM_MESSAGE STR_MSG_HOUSING_FLOWERPOT_GOAL ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( nameId ) ) ; }
20417	@ NotNull public static ResizePolicy horizontal ( ) { return ourHorizontal ; }
20442	public boolean contains ( CountModifiers modifiers ) { return super . contains ( modifiers ) ; }
20452	@ Override public boolean isEnabled ( ) { return _BOOL ; }
20464	private Vector appendVector ( Vector vec , Vector appvec ) { if ( appvec != _NULL ) { for ( int count = _NUM ; count < appvec . size ( ) ; count ++ ) { vec . addElement ( appvec . elementAt ( count ) ) ; } } return vec ; }
20471	public ReturnVoidStmt newReturnVoidStmt ( ) { return new JReturnVoidStmt ( ) ; }
20504	@ Override public String toString ( ) { if ( nans != FINITE ) { if ( nans == INFINITE ) { return ( sign < _NUM ) ? NEG_INFINITY_STRING : POS_INFINITY_STRING ; } else { return NAN_STRING ; } } if ( exp > mant . length || exp < - _NUM ) { return dfp2sci ( ) ; } return dfp2string ( ) ; }
20507	public static APIUser createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , APIUser . class ) ; }
20564	public Boolean isLogRetained ( ) { return logRetained ; }
20597	public AudioGetQuery audioIds ( Integer ... value ) { return unsafeParam ( _CHAR audio_ids _CHAR , value ) ; }
20598	protected final void advance ( int amount ) { cursor += amount ; }
20602	public void removeTableListener ( TableListener listnr ) { m_listeners . remove ( listnr ) ; }
20633	public static int computeHash ( byte [ ] key , int mask ) { return Math . abs ( MurmurHash3 . murmurhash3x8632 ( key , _NUM , key . length , _NUM ) & mask ) ; }
20667	public DataQueryParams removeFilter ( String filter ) { this . filters . remove ( new BaseDimensionalObject ( filter ) ) ; return this ; }
20689	private static File stream2file ( InputStream in ) throws IOException { final File tempFile = File . createTempFile ( PREFIX , SUFFIX ) ; try ( FileOutputStream out = new FileOutputStream ( tempFile ) ) { IOUtils . copy ( in , out ) ; } return tempFile ; }
20725	public boolean hasObservers ( ) { return observers . get ( ) . length != _NUM ; }
20735	public FieldVector3D < T > add ( final T factor , final Vector3D v ) { return new FieldVector3D < T > ( x . add ( factor . multiply ( v . getX ( ) ) ) , y . add ( factor . multiply ( v . getY ( ) ) ) , z . add ( factor . multiply ( v . getZ ( ) ) ) ) ; }
20744	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
20765	public static CommandResult execCommand ( String command , boolean isRoot ) { return execCommand ( new String [ ] { command } , isRoot , _BOOL ) ; }
20767	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
20772	public void addText ( String text ) { this . text += text ; }
20796	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
20805	public void unsetPeak ( ) { peak = Integer . MIN_VALUE ; repaint ( ) ; }
20838	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
20848	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
20849	boolean isUnitTypeEqual ( int unitA , int unitB ) { return units [ unitA ] . type == units [ unitB ] . type ; }
20854	public static void o ( double a , int w , int d ) { System . out . print ( _CHAR \ n _CHAR ) ; System . out . print ( DoubletoEstring ( a , w , d ) ) ; System . out . print ( _CHAR \ n _CHAR ) ; }
20878	public TimeSeriesMetricDeltaSet map ( Function < ? super MetricValue , ? extends MetricValue > fn ) { return values_ . map ( fn , _NULL ) . mapCombine ( _NULL , _NULL ) ; }
20887	private K highestKey ( ) { FastConcurrentSkipListMap . Node < K , V > n = hiNode ( ) ; if ( n != _NULL ) { K last = n . key ; if ( inBounds ( last ) ) return last ; } throw new NoSuchElementException ( ) ; }
20888	@ Override public void filter ( ClientRequestContext request ) throws IOException { appendRequestId ( request . getStringHeaders ( ) . getFirst ( X_REQUEST_ID_HEADER ) ) ; RequestLog . startTiming ( CLIENT_TOTAL_TIMER ) ; request . setProperty ( PROPERTY_NANOS , System . nanoTime ( ) ) ; }
20891	public long put ( short key , long value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
20894	public Location toLocation ( World world , float yaw , float pitch ) { return new Location ( world , x , y , z , yaw , pitch ) ; }
20911	public void write ( short [ ] data ) { for ( short unit : data ) { write ( unit ) ; } }
20928	private long wc ( String text ) { long wc = _NUM ; String [ ] lines = text . split ( _CHAR \ n _CHAR ) ; for ( String line : lines ) { wc += line . split ( _CHAR \\ s + _CHAR ) . length ; } return wc ; }
20946	public static AccessToken createFromJSONString ( String jsonString ) { return new GsonBuilder ( ) . create ( ) . fromJson ( jsonString , AccessToken . class ) ; }
20958	@ Override public boolean checkCondition ( ) { return ! group . hasMember ( enteredPlayer . getObjectId ( ) ) ; }
20964	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
20970	public void dumpBinary ( DataOutputStream os ) throws IOException { sampleInfo . dumpBinary ( os ) ; os . writeInt ( samples . length ) ; for ( int i = _NUM ; i < samples . length ; i ++ ) { samples [ i ] . dumpBinary ( os ) ; } }
20975	public void playAnimatedLogo ( BaseGifImage gifImage ) { mLoadingView . hideLoadingUI ( ) ; mAnimatedLogoDrawable = new BaseGifDrawable ( gifImage , Config . ARGB_8888 ) ; mAnimatedLogoMatrix = new Matrix ( ) ; setMatrix ( mAnimatedLogoDrawable . getIntrinsicWidth ( ) , mAnimatedLogoDrawable . getIntrinsicHeight ( ) , mAnimatedLogoMatrix , _BOOL ) ; mAnimatedLogoDrawable . setCallback ( this ) ; mAnimatedLogoDrawable . start ( ) ; }
21017	public synchronized void abort ( ) { checkNotClosedOrEditingConcurrently ( ) ; close ( ) ; mIsClosed = _BOOL ; mCache . abortEdit ( mEntry ) ; }
21025	public String toString ( ) { return _CHAR ClientMinPrincipal _CHAR + Constraint . toString ( principals ) ; }
21054	public boolean isRepeated ( ) { return card == Cardinality . REPEATED ; }
21058	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
21067	public static boolean isEnabled ( ) { return enabled ; }
21103	public final void writeShort ( final int i ) { baos . write ( ( byte ) ( i & _NUM ) ) ; baos . write ( ( byte ) ( ( i >> > _NUM ) & _NUM ) ) ; }
21105	public void addImportDecl ( ImportDecl node ) { List < ImportDecl > list = ( parent == _NULL || state == _NULL ) ? getImportDeclListNoTransform ( ) : getImportDeclList ( ) ; list . addChild ( node ) ; }
21111	public Action remove ( int i ) { return ( Action ) m_actions . remove ( i ) ; }
21122	protected LeadsCompleteQuery secret ( String value ) { return unsafeParam ( _CHAR secret _CHAR , value ) ; }
21141	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
21145	@ Override public double [ ] analyse ( double [ ] frame ) { double [ ] spectrum = super . analyse ( frame ) ; for ( int i = _NUM ; i < spectrum . length ; i ++ ) { spectrum [ i ] = MathUtils . db ( spectrum [ i ] ) ; } return spectrum ; }
21147	public byte readByte ( ) throws IOException { return dis . readByte ( ) ; }
21157	@ Override public void startExternalSubset ( XMLResourceIdentifier identifier , Augmentations augs ) throws XNIException { startParameterEntity ( _CHAR [ dtd ] _CHAR , _NULL , _NULL , augs ) ; }
21185	public Boolean isEncoded ( ) { return encoded ; }
21193	public boolean isKeepTags ( ) { return keepTags ; }
21195	public String encode ( final Cigar cigar ) { if ( cigar . isEmpty ( ) ) { return _CHAR * _CHAR ; } final StringBuilder ret = new StringBuilder ( ) ; for ( final CigarElement cigarElement : cigar . getCigarElements ( ) ) { ret . append ( cigarElement . getLength ( ) ) ; ret . append ( cigarElement . getOperator ( ) ) ; } return ret . toString ( ) ; }
21224	public void removeXValue ( int index ) { mXVals . remove ( index ) ; }
21225	public String toString ( ) { return val ? _CHAR Confidentiality . YES _CHAR : _CHAR Confidentiality . NO _CHAR ; }
21234	public boolean hasAny ( ) { return partitions != _NULL && ! partitions . isEmpty ( ) ; }
21275	public static boolean isConnected ( Context context ) { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo networkInfo = connectivityManager . getActiveNetworkInfo ( ) ; return networkInfo != _NULL && networkInfo . isConnected ( ) ; }
21278	private String detectScriptUrlPerDHCP ( ) { Logger . log ( getClass ( ) , LogLevel . DEBUG , _CHAR Searching per DHCP not supported yet . '' ) ; return _NULL ; }
21279	public PagesSaveQuery save ( UserActor actor ) { return new PagesSaveQuery ( getClient ( ) , actor ) ; }
21284	@ Override public int readByte ( ) { bytesRead ++ ; return ( ( int ) arr [ pos ++ ] ) & _NUM ; }
21285	public String toString ( ) { return Float . toString ( start ) + _CHAR _CHAR + Float . toString ( mid ) + _CHAR _CHAR + Float . toString ( end ) ; }
21288	public static SM_SYSTEM_MESSAGE STR_FACTION_FREINDSHIP ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21290	@ Provides @ Singleton @ JobZooKeeper CuratorFramework provideJobZooKeeperConnection ( @ Global CuratorFramework curator ) { return withComponentNamespace ( curator , _CHAR job _CHAR ) ; }
21291	public Spanned build ( ) { SpannableStringBuilder builder = new SpannableStringBuilder ( mText ) ; RoundedCornersBackgroundSpan span = new RoundedCornersBackgroundSpan ( this ) ; builder . setSpan ( span , _NUM , builder . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE ) ; return builder ; }
21317	public StatusCode withOverflow ( ) { return new StatusCode ( value | _NUM ) ; }
21324	public GUIHandler registerContainer ( String id , Function < GUIContext , Container > creator ) { containers . put ( id , creator ) ; return this ; }
21340	protected static int toDigit ( char ch , int index ) throws Exception { int digit = Character . digit ( ch , _NUM ) ; if ( digit == - _NUM ) { throw new Exception ( _CHAR Illegal hexadecimal charcter _CHAR + ch + _CHAR at index _CHAR + index ) ; } return digit ; }
21361	@ Override public void stop ( BundleContext bc ) throws Exception { context = _NULL ; logger . debug ( _CHAR ZWave binding stopped . '' ) ; }
21370	public static SM_SYSTEM_MESSAGE STR_MSG_WRONG_TARGET_CLASS ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21372	protected CassandraDriver newDriver ( final String propertyContext , final HealthCheckRegistry registry , final String instanceName ) throws IOException , ConnectionException { DriverConfiguration config = new DriverConfiguration ( propertyContext ) ; CassandraDriver result = new DefaultCassandraDriver ( config , registry , instanceName ) ; if ( ! result . isKeyspaceInitialized ( ) ) { result . initializeKeyspace ( ) ; } return result ; }
21385	public boolean isSkipRoot ( ) { if ( skipRoot == _NULL ) { return _BOOL ; } else { return skipRoot ; } }
21389	public final boolean isAlternatingUiMode ( ) { return ( myAlternate & CFG_UI_MODE ) != _NUM ; }
21390	private void tryToGetAudioFocus ( ) { if ( mAudioFocus != AudioFocus . FOCUS && mAudioManager != _NULL && ( AudioManager . AUDIOFOCUS_REQUEST_GRANTED == mAudioManager . requestAudioFocus ( this , AudioManager . STREAM_MUSIC , AudioManager . AUDIOFOCUS_GAIN ) ) ) { mAudioFocus = AudioFocus . FOCUS ; } }
21400	public boolean isNull ( ) { return ! sourceContent . isSuccess ( ) && extendedTrim ( sourceContent . getHtmlCode ( ) ) . equals ( _CHAR _CHAR ) && ! isImage ( sourceContent . getFinalUrl ( ) ) ; }
21407	public static boolean isCreditCard ( String stPassed ) { if ( isEmpty ( stPassed ) ) return defaultEmptyOK ; String st = stripCharsInBag ( stPassed , creditCardDelimiters ) ; if ( ! isInteger ( st ) ) return _BOOL ; if ( st . length ( ) > _NUM ) return _BOOL ; return sumIsMod10 ( getLuhnSum ( st ) ) ; }
21417	public Boolean isValue ( ) { return value ; }
21436	public static void restartBridge ( boolean debug ) { WXEnvironment . sDebugMode = debug ; WXSDKManager . getInstance ( ) . restartBridge ( ) ; }
21444	public void addTypeBound ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeBoundListNoTransform ( ) : getTypeBoundList ( ) ; list . addChild ( node ) ; }
21453	public int upperEndpoint ( ) { return upperBound . endpoint ( ) ; }
21460	private static ExternalSystem resetOAuthFields ( ExternalSystem input ) { input . setAccessKey ( _NULL ) ; return input ; }
21483	public java . lang . Boolean isEscaped ( ) { return escaped ; }
21508	public boolean hasTypeDecl ( ) { return getTypeDeclOpt ( ) . getNumChild ( ) != _NUM ; }
21529	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
21535	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
21549	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
21558	public Disk accelerate ( Vector acceleration ) { return new Disk ( position , speed . add ( acceleration ) , radius ) ; }
21578	public void seek ( final long offset ) throws IOException { pos = ( int ) offset ; }
21595	public void createIndex ( String label , String propertyName ) { Objects . requireNonNull ( label , _CHAR label can not be _NULL _CHAR ) ; Objects . requireNonNull ( propertyName , _CHAR propertyName can not be _NULL _CHAR ) ; Neo4JSession session = currentSession ( ) ; transaction . readWrite ( ) ; session . executeStatement ( new Statement ( _CHAR CREATE INDEX ON : ` _CHAR + label + _CHAR ` ( _CHAR + propertyName + _CHAR ) _CHAR ) ) ; }
21603	private static boolean isTextObscured ( JComponent c , String s ) { Graphics g = c . getGraphics ( ) ; FontMetrics fm = g . getFontMetrics ( c . getFont ( ) ) ; int sw = fm . stringWidth ( s ) ; return ( sw > c . getWidth ( ) ) ; }
21625	public PhotosGetMarketUploadServerQuery cropWidth ( Integer value ) { return unsafeParam ( _CHAR crop_width _CHAR , value ) ; }
21627	public boolean contains ( final Vector2D p ) { return FastMath . abs ( getOffset ( p ) ) < tolerance ; }
21634	public boolean hasBlock ( ) { return getBlockOpt ( ) . getNumChild ( ) != _NUM ; }
21643	public ExitMonitorStmt newExitMonitorStmt ( Value op ) { return new JExitMonitorStmt ( op ) ; }
21646	public Disk move ( ) { return new Disk ( position . add ( speed ) , speed , radius ) ; }
21663	public void updateCurrentPage ( Object page ) { scenarioContext . add ( ContextKeys . CURRENT_PAGE , page ) ; }
21671	private boolean isGeometryField ( Class < ? > fieldType ) { return geometryTypeList . contains ( fieldType ) ; }
21672	public Expression equal ( Value v1 , Value v2 ) { return new BinaryExpression ( v1 , v2 , ExpressionType . EQUAL ) ; }
21687	public static String playerIdToName ( UUID uuid ) { long leastSigBits = uuid . getLeastSignificantBits ( ) ; long mostSigBits = uuid . getMostSignificantBits ( ) ; byte [ ] bytes = toArray ( mostSigBits , leastSigBits ) ; bytes = removeZeroesAtEnd ( bytes ) ; return new String ( bytes , StandardCharsets . UTF_8 ) ; }
21699	public void tabPageLoadFinished ( int id ) { StripLayoutTab tab = findTabById ( id ) ; if ( tab != _NULL ) tab . pageLoadingFinished ( ) ; }
21712	protected UsersGetSubscriptionsQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
21713	public GroupsEditQuery marketWiki ( Integer value ) { return unsafeParam ( _CHAR market_wiki _CHAR , value ) ; }
21723	public Dfp newDfp ( final byte x ) { return new Dfp ( this , x ) ; }
21728	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
21755	public AuthorDTO toDTO ( Author author ) { return toDTO ( author , _NUM ) ; }
21787	public static SM_SYSTEM_MESSAGE STR_GATHER_LEARNED_NEW_GATHER_SKILL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21789	@ Override protected void validateConfig ( final SubEquipment subEquipment ) { SubEquipmentCacheObject subEquipmentCacheObject = ( SubEquipmentCacheObject ) subEquipment ; super . validateConfig ( subEquipmentCacheObject ) ; if ( subEquipmentCacheObject . getParentId ( ) == _NULL ) { throw new ConfigurationException ( ConfigurationException . INVALID_PARAMETER_VALUE , _CHAR Parameter \ _CHAR parentId \ _CHAR can not be _NULL . Each Subequipment MUST be attached to an Equipment . '' ) ; } }
21799	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
21815	@ Override public void close ( ) throws IOException { if ( _NULL != dictionaryThriftWriter && dictionaryThriftWriter . isOpen ( ) ) { writeDictionaryFile ( ) ; closeThriftWriter ( ) ; } }
21848	public boolean deleteTrack ( Track track ) { synchronized ( tracks ) { return tracks . removeElement ( track ) ; } }
21852	public DocumentQuery addSort ( Sort sort ) { this . sorts . add ( Objects . requireNonNull ( sort , _CHAR Sort is required _CHAR ) ) ; return this ; }
21855	public String toString ( ) { return _CHAR DiphoneUnitSelector _CHAR ; }
21908	public Boolean isCleanSession ( ) { return cleanSession ; }
21915	public Value newAggregate ( AggregateListener listener , Value args ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
21929	public boolean isEmpty ( ) { return this . map . isEmpty ( ) ; }
21941	public static void syncCollapsedFromSummaryToTaxonomyViewer ( DataTable table , MainViewer mainViewer ) { Document doc = mainViewer . getDir ( ) . getDocument ( ) ; mainViewer . getCollapsedIds ( ) . clear ( ) ; if ( table . getCollapsed ( ClassificationType . Taxonomy . toString ( ) ) != _NULL ) mainViewer . getCollapsedIds ( ) . addAll ( table . getCollapsed ( ClassificationType . Taxonomy . toString ( ) ) ) ; }
21952	public static SM_SYSTEM_MESSAGE STR_MSG_COMBINE_BROADCAST_COMBINE_SUCCESS ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
21953	public static double tf ( int count ) { return count > _NUM ? _NUM + Math . log10 ( count ) : _NUM ; }
21957	public void removeSwipeListener ( SwipeListener listener ) { if ( mListeners == _NULL ) { return ; } mListeners . remove ( listener ) ; }
21977	public FieldVector3D < T > add ( final T factor , final FieldVector3D < T > v ) { return new FieldVector3D < T > ( x . getField ( ) . getOne ( ) , this , factor , v ) ; }
21984	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
21987	public String tableName ( ) { return tblName ; }
21995	private static File stream2file ( InputStream in , String suffix ) throws IOException { final File tempFile = File . createTempFile ( PREFIX , suffix ) ; try ( FileOutputStream out = new FileOutputStream ( tempFile ) ) { IOUtils . copy ( in , out ) ; } return tempFile ; }
21997	public static long stringToMilliseconds ( String formattedDate ) { return stringToMilliseconds ( formattedDate , SIMPLE_DATE_FORMAT ) ; }
22041	public static MathRuntimeException createInternalError ( ) { return new MathRuntimeException ( LocalizedCoreFormats . INTERNAL_ERROR , REPORT_URL ) ; }
22058	public static boolean hasRole ( String roleName ) { for ( String role : getRoles ( ) ) { if ( role . equalsIgnoreCase ( roleName ) ) { return _BOOL ; } } return _BOOL ; }
22062	private void skipPastNewline ( ) { while ( ! builder . eof ( ) ) { if ( matches ( ProjectViewTokenType . NEWLINE ) ) { return ; } builder . advanceLexer ( ) ; } }
22064	public void close ( ) throws IOException { if ( io != _NULL ) { try { io . close ( ) ; } finally { io = _NULL ; } } }
22085	public void addLine ( @ NotNull RangedContinuousSeries series , @ NotNull LineConfig config ) { mLinesConfig . put ( series , config ) ; }
22092	public short readShort ( ) throws IOException { return dis . readShort ( ) ; }
22100	private ByteOrderMark find ( ) { for ( ByteOrderMark bom : boms ) { if ( matches ( bom ) ) { return bom ; } } return _NULL ; }
22102	public CreateSiteWindow typeTitle ( String title ) { textField . setValue ( title ) ; return this ; }
22138	private static boolean validateNewSize ( int level ) { return ! ( level < MIN_EXPAND || level > MAX_EXPAND ) ; }
22143	protected Object entryInitialFlow ( ) { return emptySet . clone ( ) ; }
22149	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_BLOCK ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
22174	public MessagesDeleteDialogQuery deleteDialog ( Actor actor ) { return new MessagesDeleteDialogQuery ( getClient ( ) , actor ) ; }
22176	public boolean readBool ( ) throws IOException { return dis . readByte ( ) > _NUM ; }
22179	public double expectedWeightedValue ( ) { return this . weightedVar ; }
22182	public V remove ( long key ) { V prev = _NULL ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
22192	public boolean write ( byte [ ] audioData ) { return write ( audioData , _NUM , audioData . length ) ; }
22198	public static StateListDrawable toStateListDrawable ( Drawable normal , Drawable pressed ) { return toStateListDrawable ( normal , pressed , pressed , normal ) ; }
22202	public void reset ( ) { status = EMPTY ; }
22215	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_REMAIN_TIME_60 ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
22238	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; hasSurface = _BOOL ; inactivityTimer = new InactivityTimer ( this ) ; }
22241	private void drawShadows ( Canvas canvas ) { int height = ( int ) ( _NUM * getItemHeight ( ) ) ; topShadow . setBounds ( _NUM , _NUM , getWidth ( ) , height ) ; topShadow . draw ( canvas ) ; bottomShadow . setBounds ( _NUM , getHeight ( ) - height , getWidth ( ) , getHeight ( ) ) ; bottomShadow . draw ( canvas ) ; }
22268	public String tableName ( ) { return tblName ; }
22292	private boolean isValidIp ( String s ) { return Patterns . IP_ADDRESS . matcher ( s ) . matches ( ) ; }
22333	public static String delete ( String inString , String pattern ) { return replace ( inString , pattern , _CHAR _CHAR ) ; }
22355	public static boolean isWithinWorld ( int x , int y ) { return x >= _NUM && y >= _NUM && x < ( CHUNKS_X * Chunk . CHUNK_SIZE ) && y < ( CHUNKS_Y * Chunk . CHUNK_SIZE ) ; }
22389	public void addQuery ( boolean and , ContentletQuery contentletQuery ) { if ( and ) { query . append ( _CHAR _CHAR + contentletQuery . getQuery ( ) ) ; } else { query . insert ( _NUM , _CHAR ( _CHAR ) ; query . append ( _CHAR ) ( _CHAR ) ; query . append ( contentletQuery . getQuery ( ) ) ; query . append ( _CHAR ) _CHAR ) ; } }
22409	public void addName ( String name ) { m_names . add ( name ) ; }
22417	protected void initComparator ( ) { if ( Comparator == _NULL ) Comparator = new NGramCachedGraphComparator ( ) ; }
22425	public void appendWarn ( final String warnMessage ) { if ( this . warnMessage == _NULL ) { this . warnMessage = warnMessage ; } else { this . warnMessage += ( _CHAR \ n _CHAR + warnMessage ) ; } }
22437	public void tabShown ( Tab tab ) { for ( int i = _NUM ; i < mRecentTabs . size ( ) ; i ++ ) { Tab t = mRecentTabs . get ( i ) . get ( ) ; if ( t == tab ) { mRecentTabs . remove ( i ) ; } } }
22440	public boolean isSuccess ( ) { return success ; }
22449	public Rotation toRotation ( ) { return new Rotation ( q0 . getReal ( ) , q1 . getReal ( ) , q2 . getReal ( ) , q3 . getReal ( ) , _BOOL ) ; }
22467	public void unRegisterEvent ( Object object ) { if ( noParamMap . containsKey ( object ) ) { noParamMap . remove ( object ) ; } if ( hasParamMap . containsKey ( object ) ) { hasParamMap . remove ( object ) ; } }
22489	public void initialize ( ) { enqueue ( new GetVersionMessageClass ( ) . doRequest ( ) ) ; enqueue ( new MemoryGetIdMessageClass ( ) . doRequest ( ) ) ; enqueue ( new SerialApiGetCapabilitiesMessageClass ( ) . doRequest ( ) ) ; enqueue ( new SerialApiSetTimeoutsMessageClass ( ) . doRequest ( _NUM , _NUM ) ) ; enqueue ( new GetSucNodeIdMessageClass ( ) . doRequest ( ) ) ; }
22490	public static String toString ( URI uri , String encoding ) throws IOException { return toString ( uri , Charsets . toCharset ( encoding ) ) ; }
22509	public Dfp newInstance ( final double x ) { return new Dfp ( getField ( ) , x ) ; }
22534	default boolean hasDataFromPeer ( ) { return _BOOL ; }
22537	private void addTask ( Runnable r ) { Thread tEval = new Thread ( r ) ; tCur = tEval ; tEval . start ( ) ; }
22539	private static boolean isEmpty ( @ Nonnull final File file , @ Nonnull final Charset charset ) { try { return FileUtil . isEmpty ( file , charset ) ; } catch ( final IOException e ) { throw new IllegalStateOfArgumentException ( _CHAR The given file could not be read . '' , e ) ; } }
22562	public String toString ( ) { return _CHAR ServerMinPrincipal _CHAR + Constraint . toString ( principals ) ; }
22576	public static String toString ( URI uri , String encoding ) throws IOException { return toString ( uri , Charsets . toCharset ( encoding ) ) ; }
22583	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
22607	XSWildcardDecl traverseAnyAttribute ( Element elmNode , XSDocumentInfo schemaDoc , SchemaGrammar grammar ) { Object [ ] attrValues = fAttrChecker . checkAttributes ( elmNode , _BOOL , schemaDoc ) ; XSWildcardDecl wildcard = traverseWildcardDecl ( elmNode , attrValues , schemaDoc , grammar ) ; fAttrChecker . returnAttrArray ( attrValues , schemaDoc ) ; return wildcard ; }
22630	public void replaceLocationManager ( LocationManager locationManager ) throws IOException { InfoSection infoSection = loadInfoSection ( ) ; infoSection . syncLocationManager2InfoSection ( locationManager ) ; storeInfoSection ( ) ; }
22633	public static SM_SYSTEM_MESSAGE STR_EVENT_WIN_ARTIFACT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
22637	@ Override public void accept ( TestValueVisitor visitor , FieldIdEnum fieldId ) { Expression attributeExpression = ff . property ( this . attribute ) ; visitor . setTestValue ( fieldId , attributeExpression ) ; }
22643	public ProjectDTO toDTO ( Project project ) { return toDTO ( project , _NUM ) ; }
22664	protected void resetXML11 ( ) throws XNIException { int count = fXML11Components . size ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { XMLComponent c = ( XMLComponent ) fXML11Components . get ( i ) ; c . reset ( this ) ; } }
22695	public static SM_SYSTEM_MESSAGE STR_GUILD_LEAVE_DONE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22702	public static < E > boolean isNotEmpty ( Collection < E > c ) { return ( c != _NULL ) && ! c . isEmpty ( ) ; }
22714	public void queueNow ( Job job ) throws InvalidJobException { job . queue ( ) ; try { executor . execute ( job ) ; } catch ( Exception e ) { job . deQueue ( ) ; } }
22715	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
22726	public void endAction ( MotionEvent me ) { OnChartGestureListener l = mChart . getOnChartGestureListener ( ) ; if ( l != _NULL ) l . onChartGestureEnd ( me , mLastGesture ) ; }
22728	public String toString ( ) { return val ? _CHAR ServerAuthentication . YES _CHAR : _CHAR ServerAuthentication . NO _CHAR ; }
22732	public JSONObject put ( String key , double value ) throws JSONException { this . put ( key , new Double ( value ) ) ; return this ; }
22737	public boolean hasFinally ( ) { return getFinallyOpt ( ) . getNumChild ( ) != _NUM ; }
22779	@ Override public synchronized void write ( byte [ ] b , int off , int len ) throws IOException { super . write ( b , off , len ) ; this . branch . write ( b , off , len ) ; }
22784	public static boolean isInitialized ( Context ctx ) { vitamioPackage = ctx . getPackageName ( ) ; vitamioLibraryPath = ContextUtils . getDataDir ( ctx ) + _CHAR lib / _CHAR ; return _BOOL ; }
22786	@ CheckReturnValue public AddCmd all ( ) { Preconditions . checkState ( Iterables . isEmpty ( files ) , _CHAR _CHAR and passing files is incompatible _CHAR ) ; return new AddCmd ( force , _BOOL , files ) ; }
22814	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
22816	@ NotNull public ImageOverlayBuilder titleImage ( PointLocations location , Font font , @ NotNull CognitiveJColourPalette color , @ NotNull String text ) { ApplyCaptionOutsideImageFilter applyCaptionOutsideImageFilter = new ApplyCaptionOutsideImageFilter ( location , font , color , text ) ; bufferedImage = applyCaptionOutsideImageFilter . applyFilter ( bufferedImage ) ; return this ; }
22822	public void toggle ( ) { toggle ( _BOOL , _NULL , _NULL ) ; }
22824	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
22830	public boolean remove ( Action a ) { return m_actions . remove ( a ) ; }
22837	@ Override protected void onStopLoading ( ) { cancelLoad ( ) ; }
22855	public static SM_SYSTEM_MESSAGE STR_NO_USER_NAMED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22857	private void updateMaxKeyInfo ( String tabColumnName , int maxKey ) { checkAndUpdateMap ( maxKey , tabColumnName ) ; }
22858	public boolean adjustValue ( K key , long amount ) { int index = index ( key ) ; if ( index < _NUM ) { return _BOOL ; } else { _values [ index ] += amount ; return _BOOL ; } }
22864	private static StringBuilder dump ( StringBuilder _cbuffer , byte value ) { for ( int j = _NUM ; j < _NUM ; j ++ ) { _cbuffer . append ( _hexcodes [ value >> _shifts [ j + _NUM ] & _NUM ] ) ; } return _cbuffer ; }
22867	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
22871	public String toString ( ) { return _CHAR ClusterUnitSelector _CHAR ; }
22873	public static int randomNumberBetween ( double begin , double end , RandomGenerator rng ) { if ( begin > end ) throw new IllegalArgumentException ( _CHAR Begin must not be less than end _CHAR ) ; return ( int ) begin + ( int ) ( rng . nextDouble ( ) * ( ( end - begin ) + _NUM ) ) ; }
22887	public void disableWhenHorizontalMove ( boolean disable ) { mDisableWhenHorizontalMove = disable ; }
22903	void commit ( ) { queryExecutor . submit ( _NULL ) ; }
22918	public boolean write ( byte [ ] bytes , int offset , int size ) { bytes = convert16To8Bits ( bytes ) ; size /= _NUM ; System . arraycopy ( bytes , offset , outputData , curIndex , size ) ; curIndex += size ; return _BOOL ; }
22933	public void clearAllBetweenHeadersAndFooters ( ) { List < Insertion > headersAndFooters = new ArrayList < > ( ) ; headersAndFooters . addAll ( getHeaders ( ) ) ; headersAndFooters . addAll ( getFooters ( ) ) ; mInserts . clear ( ) ; getItems ( ) . clear ( ) ; mOnlyInsertsCount = _NUM ; mOnlyItemsCount = _NUM ; reAddAllInserts ( headersAndFooters ) ; notifyIfNeed ( ) ; }
22936	@ ObjectiveCName ( _CHAR clear : action : name : _CHAR ) void clear ( Topic topic , Actions action , String name ) { String uniqueName = this . getUniqueName ( topic , action , name ) ; this . clear ( uniqueName ) ; }
22977	public static boolean isFreeName ( String name ) { return ! DAOManager . getDAO ( PlayerDAO . class ) . isNameUsed ( name ) ; }
22982	public String localName ( String name ) { int colon = name . indexOf ( _CHAR ) ; if ( colon == - _NUM ) { return name ; } else { return name . substring ( colon + _NUM ) . intern ( ) ; } }
22989	public static long readLong ( byte [ ] bytes ) { return ByteBuffer . wrap ( bytes ) . getLong ( ) ; }
23014	public boolean write ( byte [ ] audioData ) { return write ( audioData , _NUM , audioData . length ) ; }
23015	public static AuditLevel toLevel ( String sArg , Level defaultLevel ) { return AUDIT ; }
23025	public static Version version ( ) { final IntByReference major = new IntByReference ( ) ; final IntByReference minor = new IntByReference ( ) ; final IntByReference patch = new IntByReference ( ) ; LIB . mdb_version ( major , minor , patch ) ; return new Version ( major . intValue ( ) , minor . intValue ( ) , patch . intValue ( ) ) ; }
23031	public void addAnnotations ( Annotation ... annotations ) { for ( Annotation annotation : annotations ) { this . annotationToAnnotationViewMap . put ( annotation , _NULL ) ; } this . update ( ) ; }
23041	public boolean isCannotGiveup ( ) { if ( cannotGiveup == _NULL ) { return _BOOL ; } else { return cannotGiveup ; } }
23043	public static boolean isCurrent ( ) { return currentThread ( ) == thread ; }
23045	public static int subAndCheck ( int x , int y ) { long s = ( long ) x - ( long ) y ; if ( s < Integer . MIN_VALUE || s > Integer . MAX_VALUE ) { throw new ArithmeticException ( _CHAR overflow : subtract _CHAR ) ; } return ( int ) s ; }
23053	public boolean hasInit ( ) { return getInitOpt ( ) . getNumChild ( ) != _NUM ; }
23056	public static int readInt ( byte [ ] bytes ) { return ByteBuffer . wrap ( bytes ) . getInt ( ) ; }
23080	public static void o ( Z a ) { o ( a , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
23089	public void hide ( Animation anim ) { hide ( _BOOL , anim ) ; }
23114	public static ITemplateHolder createTemplateHolderForReplication ( IServerTypeDesc typeDesc , IEntryPacket template , String uid , long expirationTime ) { return new TemplateHolder ( typeDesc , template , uid , expirationTime , _NULL , SystemTime . timeMillis ( ) , SpaceOperations . READ , _NULL , _NUM ) ; }
23121	@ Override public boolean isSilence ( ) { throw new IllegalStateException ( _CHAR This method should not be called for DiphoneTargets . '' ) ; }
23136	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_ENEMY_BLOCK ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
23139	public boolean hasTypeDecl ( ) { return getTypeDeclOpt ( ) . getNumChild ( ) != _NUM ; }
23145	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
23152	public void sendContactRequest ( String greeting ) { skype . sendContactRequest ( this , greeting ) ; }
23185	public void requestRender ( boolean invalidateModel ) { ScreenView screenView = getCurrentScreenView ( ) ; if ( screenView != _NULL ) { if ( invalidateModel ) { screenView . getModel ( ) . notifyModified ( NlModel . ChangeType . REQUEST_RENDER ) ; } else { screenView . getModel ( ) . requestRender ( ) ; } } }
23192	public boolean hasValidOTP ( ) { return makeOTP ( ) . length ( ) == _NUM ; }
23195	public String process ( Item item ) throws ProcessException { return getPhoneFeature ( item , _CHAR cplace _CHAR ) ; }
23230	public void deactivate ( ) { if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionAttributes ( ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
23239	public MarketAddToAlbumQuery addToAlbum ( UserActor actor , int ownerId , int itemId , List < Integer > albumIds ) { return new MarketAddToAlbumQuery ( getClient ( ) , actor , ownerId , itemId , albumIds ) ; }
23255	public static void writeEnum ( DataOutput out , Enum < ? > enumVal ) throws IOException { Text . writeString ( out , enumVal . name ( ) ) ; }
23258	public boolean isNaN ( ) { return ( nans == QNAN ) || ( nans == SNAN ) ; }
23261	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
23272	public static Event createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , Event . class ) ; }
23281	private static long convertToLong ( int [ ] seed ) { final long prime = _NUM ; long combined = _NUM ; for ( int s : seed ) { combined = combined * prime + s ; } return combined ; }
23290	public boolean isLegionMember ( ) { return legionMember != _NULL ; }
23291	public void hide ( Animation anim ) { hide ( _BOOL , anim ) ; }
23295	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
23297	public static void writeProto ( Message content , String outputName ) throws IOException { try ( OutputStream outputStream = new FileOutputStream ( outputName ) ) { content . writeTo ( outputStream ) ; } }
23301	public Response doPatch ( String url ) { return doPatch ( url , _NULL ) ; }
23321	public IntIterator rows ( boolean reverse ) { return new RowIterator ( reverse ) ; }
23324	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
23330	@ BeforeMethod private void runBeforeMethod ( Method method ) { LOGGER . info ( _CHAR ============== > Invoking _CHAR + method ) ; }
23334	@ Override public void startExternalSubset ( XMLResourceIdentifier identifier , Augmentations augmentations ) throws XNIException { }
23349	@ Override public SubPlane wholeHyperplane ( ) { return new SubPlane ( this , new PolygonsSet ( tolerance ) ) ; }
23372	public static SM_SYSTEM_MESSAGE STR_COMBINE_FAIL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23396	public void addModifier ( Modifier node ) { List < Modifier > list = ( parent == _NULL || state == _NULL ) ? getModifierListNoTransform ( ) : getModifierList ( ) ; list . addChild ( node ) ; }
23399	protected MultivaluedHashMap < String , Serializable > buildHeaderList ( ) { return new MultivaluedHashMap < > ( ) ; }
23418	public void put ( Object pageObject , FramePath framePath ) { frameMapping . put ( pageObject , framePath ) ; }
23426	public static void startNewPage ( Document document ) { document . newPage ( ) ; }
23436	public boolean isCaseSensitive ( ) { return sensitive ; }
23447	public void configureIndicator ( int indicatorWidth , int indicatorHeight , int indicatorMargin ) { configureIndicator ( indicatorWidth , indicatorHeight , indicatorMargin , R . animator . scale_with_alpha , _NUM , R . drawable . white_radius , R . drawable . white_radius ) ; }
23457	public static int max ( int a , int b , int c ) { int ma ; ma = a ; if ( b > ma ) { ma = b ; } if ( c > ma ) { ma = c ; } return ma ; }
23458	@ Override public void write ( char [ ] chr , int st , int end ) throws IOException { out . write ( chr , st , end ) ; }
23475	private void fillDeclaredPrefixes ( Iterator namespaces ) { fDeclaredPrefixes . clear ( ) ; while ( namespaces . hasNext ( ) ) { Namespace ns = ( Namespace ) namespaces . next ( ) ; String prefix = ns . getPrefix ( ) ; fDeclaredPrefixes . add ( prefix != _NULL ? prefix : _CHAR _CHAR ) ; } }
23480	public void removeFirst ( ) { remove ( innerChain . getFirst ( ) ) ; }
23519	public static SM_SYSTEM_MESSAGE STR_EXCHANGE_ITEM_CANNOT_BE_EXCHANGED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23529	public MurmurHash3Variant variant ( ) { return variant ; }
23552	public static int hash32 ( final String text ) { final byte [ ] bytes = text . getBytes ( ) ; return hash32 ( bytes , bytes . length ) ; }
23556	@ Override public void addDate ( String word , Date date ) { addDateInternal ( new Index ( word . length ( ) ) , word , date ) ; }
23586	public String toString ( ) { if ( type == ERROR . type ) { return _CHAR StatusType . ERROR _CHAR ; } else if ( type == WARNING . type ) { return _CHAR StatusType . WARNING _CHAR ; } else if ( type == NOTICE . type ) { return _CHAR StatusType . NOTICE _CHAR ; } else if ( type == NORMAL . type ) { return _CHAR StatusType . NORMAL _CHAR ; } else { return _CHAR StatusType . '' + type ; } }
23621	public GroupsUnbanUserQuery unbanUser ( UserActor actor , int groupId , int userId ) { return new GroupsUnbanUserQuery ( getClient ( ) , actor , groupId , userId ) ; }
23635	public NewsfeedUnsubscribeQuery unsubscribe ( UserActor actor , NewsfeedItemType type , int itemId ) { return new NewsfeedUnsubscribeQuery ( getClient ( ) , actor , type , itemId ) ; }
23641	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
23646	public void clear ( ) { int n = mSize ; Object [ ] values = mValues ; for ( int i = _NUM ; i < n ; i ++ ) { values [ i ] = _NULL ; } mSize = _NUM ; mGarbage = _BOOL ; }
23647	public static SM_SYSTEM_MESSAGE STR_ENSLAVE_PET_LOSS_EXP ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
23659	public static Style indigo ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_INDIGO ) ; return style ; }
23676	public boolean isMotorEnabled ( ) { return motorEnabled ; }
23687	public static boolean isStorageExists ( ) { if ( Environment . getExternalStorageState ( ) . equals ( Environment . MEDIA_MOUNTED ) ) { return _BOOL ; } return _BOOL ; }
23695	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
23696	public InfoflowResults analyzeAPKFile ( String fileName ) throws IOException , XmlPullParserException { return analyzeAPKFile ( fileName , _BOOL , _BOOL , _BOOL ) ; }
23699	public void addServiceName ( String name ) { if ( name != _NULL ) { this . serviceNameSet . add ( name ) ; } }
23710	public void resume ( ) { engine . resume ( ) ; }
23713	public SiteAdminActionBar waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
23715	public void addQuitter ( IWantToQuit quitter ) { if ( this . quitters == _NULL ) { this . quitters = new ArrayList < IWantToQuit > ( ) ; } this . quitters . add ( quitter ) ; }
23716	@ Override public SphericalPolygonsSet wholeSpace ( ) { return new SphericalPolygonsSet ( tolerance ) ; }
23727	public void addSuccessMessage ( final String successMessage ) { successMessageList . add ( successMessage ) ; }
23740	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
23744	@ Override public void mouseDragged ( MouseEvent e ) { synchronized ( mouseLock ) { mouseX = StdDraw . userX ( e . getX ( ) ) ; mouseY = StdDraw . userY ( e . getY ( ) ) ; } }
23750	@ Override public boolean equals ( final Object other ) { if ( other instanceof Dfp ) { final Dfp x = ( Dfp ) other ; if ( isNaN ( ) || x . isNaN ( ) || field . getRadixDigits ( ) != x . field . getRadixDigits ( ) ) { return _BOOL ; } return compare ( this , x ) == _NUM ; } return _BOOL ; }
23784	public void write ( String s , int off , int len ) throws IOException { for ( int i = off ; i < off + len ; i ++ ) write ( s . charAt ( i ) ) ; }
23807	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
23811	public void put ( String key , InputStream stream ) { put ( key , stream , _NULL ) ; }
23816	public CreatePageWindow typeName ( String name ) { nameField . setValue ( name ) ; return this ; }
23820	public void dumpASCII ( Writer writer ) { Wave wave = getWave ( ) ; wave . dump ( writer ) ; }
23823	public boolean hasProgram ( ) { return program != _NULL ; }
23825	private static void logThreadStarting ( ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( String . format ( ThreadingUtils . STARTING_THREAD , Thread . currentThread ( ) . getId ( ) , Thread . currentThread ( ) . getName ( ) ) ) ; } }
23854	public void makeCurrent ( ) { eglCore . makeCurrent ( eGLSurface ) ; }
23871	public final void removeAll ( ) { clear ( ) ; }
23886	public final char readChar ( ) { return ( char ) readShort ( ) ; }
23913	@ Override public IntervalsSet wholeSpace ( ) { return new IntervalsSet ( tolerance ) ; }
23931	public static boolean isIgnoredPermission ( String permission ) { if ( permission == _NULL ) { return _BOOL ; } return getIgnoredPermissions ( ) . contains ( permission ) ; }
23943	public BlockVector toBlockVector ( ) { return new BlockVector ( x , y , z ) ; }
23959	public final boolean isValid ( JobTrigger trigger ) { return validate ( trigger ) == _NULL ; }
23961	@ JsonValue public String toJson ( ) { return jsonName ; }
23962	public Object clone ( ) { return new AbstractDataSource ( sourcename ) ; }
23968	public NopStmt newNopStmt ( ) { return Jimple . v ( ) . newNopStmt ( ) ; }
23970	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
23973	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
24019	private static boolean isSeparator ( char ch ) { return ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR ; }
24020	private MarshObject compressObject ( Object objToCompress ) throws IOException { CompressedMarshObjectConvertor cv = _NULL ; try { cv = _compressedConvertorPool . getResource ( ) ; MarshObject cmo = cv . getMarshObject ( objToCompress ) ; return cmo ; } finally { if ( cv != _NULL ) { _compressedConvertorPool . freeResource ( cv ) ; } } }
24031	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_FRIENDLY_DODGE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
24036	public boolean removeListener ( Listener listener ) { return this . listeners . remove ( listener ) ; }
24048	private List < String > pickTableNamesFromTableModels ( ) { List < String > tableNames = new ArrayList < String > ( ) ; for ( TableModel tableModel : mTableModels ) { tableNames . add ( tableModel . getTableName ( ) ) ; } return tableNames ; }
24103	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_ATE_FOOD_1 ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
24114	public DividerDecoration build ( ) { return new DividerDecoration ( mHeight , mLPadding , mRPadding , mColour ) ; }
24156	public static ExperimentDetailsFragment newInstance ( String experimentId , boolean createTaskStack ) { ExperimentDetailsFragment fragment = new ExperimentDetailsFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_EXPERIMENT_ID , experimentId ) ; args . putBoolean ( ARG_CREATE_TASK , createTaskStack ) ; fragment . setArguments ( args ) ; return fragment ; }
24167	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . lib_main ) ; Lib . handleTextView ( this ) ; }
24174	public void handleSwipeStart ( ) { if ( animationIsRunning ( ) ) { cancelHeightAnimation ( ) ; } mHasDetectedTouchGesture = _BOOL ; mInitialPanelHeight = getHeight ( ) ; }
24180	private Collection < Map < String , Object >> batchParse ( String [ ] header , Collection < String [ ] > batch ) { return batch . stream ( ) . map ( _NULL ) . collect ( toList ( ) ) ; }
24189	public Optional < Message > can ( @ NotNull PermissionFlag action ) { return Optional . ofNullable ( mark ( generalPermissions . get ( action ) , action ) ) ; }
24224	public boolean end ( ) { return _BOOL ; }
24248	public int capacity ( ) { return buffer . length ; }
24249	private static String createScope ( List < String > perms ) { if ( perms == _NULL || perms . isEmpty ( ) ) { return _CHAR _CHAR ; } return TextUtils . join ( _CHAR _CHAR , perms ) ; }
24256	public boolean isCanReport ( ) { if ( canReport == _NULL ) { return _BOOL ; } else { return canReport ; } }
24269	public HumanTime h ( int n ) { delta += HOUR * Math . abs ( n ) ; return this ; }
24299	public boolean adjustValue ( K key , int amount ) { int index = index ( key ) ; if ( index < _NUM ) { return _BOOL ; } else { _values [ index ] += amount ; return _BOOL ; } }
24300	public void publishEvent ( final EventTranslator < T > eventTranslator ) { ringBuffer . publishEvent ( eventTranslator ) ; }
24317	public String process ( Item item ) throws ProcessException { return getPhoneFeature ( item , _CHAR vc _CHAR ) ; }
24325	public PhotosSaveMarketAlbumPhotoQuery saveMarketAlbumPhoto ( UserActor actor , int groupId , String photo , int server , String hash ) { return new PhotosSaveMarketAlbumPhotoQuery ( getClient ( ) , actor , groupId , photo , server , hash ) ; }
24339	public static boolean hasRole ( String roleName ) { for ( String role : getRoles ( ) ) { if ( role . equalsIgnoreCase ( roleName ) ) { return _BOOL ; } } return _BOOL ; }
24346	public long remove ( K key ) { long prev = ( long ) _NUM ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
24348	private boolean exist ( String name ) { for ( EnvVar envVar : envVarList ) { if ( envVar . getName ( ) . compareTo ( name ) == _NUM ) { return _BOOL ; } } return _BOOL ; }
24375	public static SM_SYSTEM_MESSAGE STR_MSG_GET_CASH_SOCIALACTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24377	public void removeExternalTestDir ( ) { deleteDir ( new File ( EXT_TEST_DIR ) ) ; }
24403	public boolean isSeparateGroup ( ) { if ( separateGroup == _NULL ) { return _BOOL ; } else { return separateGroup ; } }
24437	public static char lowSurrogate ( int c ) { return ( char ) ( ( ( c - _NUM ) & _NUM ) + _NUM ) ; }
24439	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
24449	public void output ( Node input , OutputStream destination ) throws TransformerException { output ( new DOMSource ( input ) , new StreamResult ( destination ) ) ; }
24475	private static int unrandomize255State ( int randomizedBase256Codeword , int base256CodewordPosition ) { int pseudoRandomNumber = ( ( _NUM * base256CodewordPosition ) % _NUM ) + _NUM ; int tempVariable = randomizedBase256Codeword - pseudoRandomNumber ; return tempVariable >= _NUM ? tempVariable : tempVariable + _NUM ; }
24496	public byte readByte ( int position ) { if ( position < _NUM || position >= Page . pageSize ) { throw new PageException ( _CHAR readByte is out of bounds of page _CHAR ) ; } return pageData . get ( position ) ; }
24538	public String process ( Item item ) throws ProcessException { if ( isAccented ( item ) ) { return _CHAR _NUM _CHAR ; } else { return _CHAR _NUM _CHAR ; } }
24540	private boolean isNullableCoreType ( HashSet < String > resolvedTypesSet ) { if ( resolvedTypesSet . size ( ) != _NUM || ! resolvedTypesSet . contains ( Types . strNull ) ) { return _BOOL ; } return resolvedTypesSet . contains ( Types . strInteger ) || resolvedTypesSet . contains ( Types . strFloat ) || resolvedTypesSet . contains ( Types . strResource ) ; }
24544	public void addInputProcessor ( InputProcessor ip ) { processors . addProcessor ( ip ) ; Gdx . input . setInputProcessor ( processors ) ; }
24546	public V remove ( short key ) { V prev = _NULL ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
24556	@ Override public String toString ( ) { return name ; }
24559	public void recordFocusedOmnibox ( ) { setFirstAction ( FOCUSED_OMNIBOX ) ; }
24561	private static String prefixForTimestamp ( DateTime timestamp ) { return String . format ( _CHAR monsoon - % _NUM % _NUM % _NUM - % _NUM % _NUM _CHAR , timestamp . getYear ( ) , timestamp . getMonthOfYear ( ) , timestamp . getDayOfMonth ( ) , timestamp . getHourOfDay ( ) , timestamp . getMinuteOfHour ( ) ) ; }
24572	@ Override public void mouseReleased ( MouseEvent e ) { synchronized ( mouseLock ) { mousePressed = _BOOL ; } }
24587	public File showSaveDialog ( ) { return showDialog ( _NULL ) ; }
24588	public Vector3D toVector3D ( ) { return new Vector3D ( x . getReal ( ) , y . getReal ( ) , z . getReal ( ) ) ; }
24590	void build ( int bezierWidth , int bezierHeight ) { this . bezierWidth = bezierWidth ; this . bezierHeight = bezierHeight ; }
24592	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
24609	public void onVisibilityChanged ( boolean isVisible ) { }
24611	public void minimizePalette ( ) { if ( myToolWindow != _NULL ) { try { LightToolWindow . class . getDeclaredMethod ( _CHAR minimize _CHAR ) . invoke ( myToolWindow ) ; } catch ( Exception ignore ) { } } }
24612	protected void afterMove ( ) { if ( ! Silent ) synchronized ( System . err ) { System . err . println ( this . getName ( ) + _CHAR : _CHAR + _CHAR Move finished ... _CHAR ) ; } super . afterMove ( ) ; addBehaviour ( new InformForCompleteMoveBehaviour ( ) ) ; }
24642	public void updateSupplements ( ) { if ( subtractedSupplementId == _NUM || subtractedSupplementsCount == _NUM ) { return ; } this . getInventory ( ) . decreaseByItemId ( subtractedSupplementId , subtractedSupplementsCount ) ; subtractedSupplementsCount = _NUM ; subtractedSupplementId = _NUM ; }
24664	public TypeVariable typeVariable ( Type type ) { return typeVariable ( ClassHierarchy . v ( ) . typeNode ( type ) ) ; }
24693	public AudioGetQuery audioIds ( List < Integer > value ) { return unsafeParam ( _CHAR audio_ids _CHAR , value ) ; }
24696	public static double sigmoid ( double x ) { return _NUM . _NUM / ( _NUM . _NUM + Math . pow ( Math . E , - x ) ) ; }
24719	public static short readSignedShort ( byte [ ] bytes ) { return ByteBuffer . wrap ( bytes ) . getShort ( ) ; }
24736	@ Override public void onClick ( View v ) { LogUtil . e ( _CHAR position = _CHAR + position ) ; new BossZoomHelper ( ( Activity ) context , bossJumpView , _NUM ) ; }
24755	protected Path linePath ( Path p , int i , float [ ] positions ) { p . moveTo ( mViewPortHandler . offsetLeft ( ) , positions [ i + _NUM ] ) ; p . lineTo ( mViewPortHandler . contentRight ( ) , positions [ i + _NUM ] ) ; return p ; }
24763	public void onDownloadFailed ( String filename ) { if ( getSnackbarManager ( ) == _NULL ) return ; String message = mContext . getString ( R . string . download_failed_message , filename ) ; Snackbar snackbar = Snackbar . make ( message , this ) . setSingleLine ( _BOOL ) . setDuration ( SNACKBAR_DURATION_IN_MILLISECONDS ) ; getSnackbarManager ( ) . showSnackbar ( snackbar ) ; }
24769	public void addLocation ( PBLocation location ) { l_locations . add ( location ) ; }
24787	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( ( objBytes == _NULL ) && ( ( hash != _NUM ) || ( locBytes != _NULL ) ) ) throw new InvalidObjectException ( _CHAR Bad hash or annotation _CHAR ) ; }
24799	public Decision suggestCategory ( String sFilename ) { DocumentNGramGraph dDoc = new DocumentNGramSymWinGraph ( ) ; try { dDoc . loadDataStringFromFile ( sFilename ) ; } catch ( IOException ex ) { Logger . getLogger ( Decider . class . getName ( ) ) . log ( Level . SEVERE , _NULL , ex ) ; return _NULL ; } return suggestCategory ( dDoc ) ; }
24825	public boolean hasBlock ( ) { return getBlockOpt ( ) . getNumChild ( ) != _NUM ; }
24826	private static Schema schema ( Type fldType ) { Schema sch = new Schema ( ) ; sch . addField ( SCHEMA_KEY , fldType ) ; sch . addField ( SCHEMA_RID_BLOCK , BIGINT ) ; sch . addField ( SCHEMA_RID_ID , INTEGER ) ; return sch ; }
24828	public static Contexts allowAll ( ) { return new Contexts ( ContextSet . empty ( ) , _BOOL , _BOOL , _BOOL , _BOOL , _BOOL , _BOOL ) ; }
24847	private void addTask ( Runnable r ) { Thread tEval = new Thread ( r ) ; tCur = tEval ; tEval . start ( ) ; }
24853	public static void resetSpotlights ( @ NonNull Context context ) { new PreferencesManager ( context ) . resetAll ( ) ; }
24865	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
24882	private static void createWriter ( OutputStream outputStream ) { try { closeWriter ( ) ; Writer oWriter = new OutputStreamWriter ( outputStream , _CHAR UTF - _NUM _CHAR ) ; writer = new BufferedWriter ( oWriter ) ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; } }
24898	public void addTypeBound ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeBoundListNoTransform ( ) : getTypeBoundList ( ) ; list . addChild ( node ) ; }
24900	@ Override public final char readChar ( ) { return ( char ) readShort ( ) ; }
24907	public boolean itemExists ( String name ) throws JMSException { HashMap body = ( HashMap ) Body ; return body . containsKey ( name ) ; }
24943	public void writeToFile ( ) throws JAXBException { if ( mergedItt == _NULL ) { System . out . println ( _CHAR Resulting iTT is empty . No data to write . '' ) ; return ; } Marshaller jaxbMarshaller = TtmlUtils . createTtmlJaxbContext ( ) . createMarshaller ( ) ; jaxbMarshaller . setProperty ( Marshaller . JAXB_FORMATTED_OUTPUT , _BOOL ) ; jaxbMarshaller . marshal ( new ObjectFactory ( ) . createTt ( mergedItt ) , outputFile ) ; }
24951	public static Predicate < String > isNotEmpty ( ) { return _NULL ; }
24971	private ByteBuffer wrap ( GSByteArrayOutputStream bos ) { ByteBuffer byteBuffer = ByteBuffer . wrap ( bos . getBuffer ( ) ) ; byteBuffer . order ( ByteOrder . BIG_ENDIAN ) ; return byteBuffer ; }
25010	public static SM_SYSTEM_MESSAGE STR_MSG_HOUSING_OBJECT_DELETE_USE_COUNT ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( nameId ) ) ; }
25011	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25025	@ Override public void onSuccess ( IMqttToken asyncActionToken ) { ConnectionState state = ( ConnectionState ) asyncActionToken . getUserContext ( ) ; if ( state == ConnectionState . Connecting ) { AirMapLog . i ( _CHAR TrafficService _CHAR , _CHAR Successfully connected _CHAR ) ; onConnect ( ) ; } }
25031	@ Override public Scan open ( ) { TableScan ts = ( TableScan ) tp . open ( ) ; Index idx = ii . open ( tx ) ; return new IndexSelectScan ( idx , searchRange , ts ) ; }
25032	@ Deprecated public static String translateName ( String engName , Locale newLocale ) throws MissingResourceException { return PokeDictionary . translateName ( engName , newLocale ) ; }
25036	public static boolean isNumeric ( String value ) { return NUMERIC_PATTERN . matcher ( value ) . matches ( ) ; }
25043	@ Override public void onTaskLoadSuccess ( final List < Task > list ) { mTaskAdapter . setColorId ( ThemeUtils . getResourceId ( this , R . attr . colorAccent ) ) ; mTaskAdapter . setLast ( mPresenter . getComic ( ) . getLast ( ) ) ; mTaskAdapter . addAll ( list ) ; mPresenter . sortTask ( list ) ; }
25049	public GroupsBanUserQuery banUser ( UserActor actor , int groupId , int userId ) { return new GroupsBanUserQuery ( getClient ( ) , actor , groupId , userId ) ; }
25068	public static Page createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , Page . class ) ; }
25071	@ Override public int hashCode ( ) { return _NUM + _NUM * MathUtils . hash ( value ) + _NUM * derivatives . hashCode ( ) ; }
25095	protected void failed ( Throwable t ) throws InvalidJobException { if ( currentState != State . RUNNING ) { throw new InvalidJobException ( _CHAR Illegal state change _CHAR ) ; } currentState = State . FAILED ; Debug . logError ( t , _CHAR Async - Service failed . '' , module ) ; }
25096	public boolean handleResponse ( ZWaveController zController , SerialMessage lastSentMessage , SerialMessage incomingMessage ) throws ZWaveSerialMessageException { logger . warn ( _CHAR TODO : { } unsupported RESPONSE . '' , incomingMessage . getMessageClass ( ) . getLabel ( ) ) ; return _BOOL ; }
25105	public static String toString ( URL url ) throws IOException { return toString ( url , Charset . defaultCharset ( ) ) ; }
25121	private String formatDate ( Date date ) { return DateFormat . getDateInstance ( DateFormat . SHORT ) . format ( date ) ; }
25172	public AemRichText typeNewLine ( ) { return type ( _CHAR \ n _CHAR ) ; }
25183	public static void showDocument ( URL url ) { showDocument ( url . toString ( ) ) ; }
25186	public boolean isLimitEnabled ( ) { return this . limitEnabled ; }
25205	public String revParse ( String ref ) throws RepoException { return simpleCommand ( _CHAR rev - parse _CHAR , ref ) . getStdout ( ) . trim ( ) ; }
25236	public static TextBlock newLine ( ) { return new TextBlock ( ImmutableList . of ( _CHAR _CHAR ) ) ; }
25241	public static String toString ( URI uri , Charset encoding ) throws IOException { return toString ( uri . toURL ( ) , Charsets . toCharset ( encoding ) ) ; }
25242	public void addArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getArgumentListNoTransform ( ) : getArgumentList ( ) ; list . addChild ( node ) ; }
25251	public boolean hasResult ( ) { return getResultOpt ( ) . getNumChild ( ) != _NUM ; }
25254	public JSONObject put ( String key , boolean value ) throws JSONException { this . put ( key , value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
25336	public boolean hasElse ( ) { return getElseOpt ( ) . getNumChild ( ) != _NUM ; }
25357	public boolean isAskForUsername ( ) { return askForUsername ; }
25362	public static void distributeKinah ( Player player , long amount ) { PlayerAlliance alliance = player . getPlayerAlliance2 ( ) ; if ( alliance != _NULL ) { alliance . onEvent ( new TeamKinahDistributionEvent < PlayerAlliance > ( alliance , player , amount ) ) ; } }
25380	public static void loadResizedImage ( final Context _context , final ImageView _imageView , final String _imageUrl , final int _placeHolderResource , final int _width , final int _height ) { getBitmapLoader ( _context , _imageUrl , _placeHolderResource ) . override ( _width , _height ) . into ( _imageView ) ; }
25404	public GroupsGetByIdQuery groupId ( String value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
25431	public final byte readByte ( ) { return ( byte ) bs . readByte ( ) ; }
25446	public static boolean isInitialized ( Context ctx ) { vitamioPackage = ctx . getPackageName ( ) ; vitamioLibraryPath = ContextUtils . getDataDir ( ctx ) + _CHAR lib / _CHAR ; return _BOOL ; }
25449	public static MutableContextSet singleton ( String key , String value ) { MutableContextSet set = new MutableContextSet ( ) ; set . add ( key , value ) ; return set ; }
25465	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
25478	private boolean isPopulating ( ) { return isPopulating ; }
25480	private ThriftWriter openThriftWriter ( String filePath ) throws IOException { ThriftWriter thriftWriter = new ThriftWriter ( filePath , _BOOL ) ; thriftWriter . open ( ) ; return thriftWriter ; }
25490	public final void writeAsciiString ( final String s ) { write ( s . getBytes ( ASCII ) ) ; }
25540	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
25560	public void closeStream ( ) { CarbonUtil . closeStreams ( stream ) ; executorService . shutdown ( ) ; }
25597	@ Override public void mouseMoved ( MouseEvent e ) { synchronized ( mouseLock ) { mouseX = StdDraw . userX ( e . getX ( ) ) ; mouseY = StdDraw . userY ( e . getY ( ) ) ; } }
25607	public static SM_SYSTEM_MESSAGE STR_FORCE_ENTER_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25615	private boolean hasProperties ( ModelImpl modelImpl ) { return modelImpl . getProperties ( ) != _NULL ; }
25646	public void toOrigin ( ) { this . translation . zero ( ) ; }
25651	public static boolean supportsSequenceId ( int version ) { return version >= LogSegmentMetadataVersion . VERSION_V5_SEQUENCE_ID . value ; }
25659	public boolean hasExpr ( ) { return getExprOpt ( ) . getNumChild ( ) != _NUM ; }
25664	public void requestFocus ( ) { this . m_queryF . requestFocus ( ) ; }
25671	public String toString ( ) { String prettyText = this . text . replace ( _CHAR , _CHAR ) ; return _CHAR Diff ( _CHAR + this . operation + _CHAR , \ _CHAR _CHAR + prettyText + _CHAR \ _CHAR ) _CHAR ; }
25687	public static Application createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , Application . class ) ; }
25736	public Builder stepNumberBackgroundColor ( int stepNumberBackgroundColor ) { this . stepNumberBackgroundColor = stepNumberBackgroundColor ; return this ; }
25746	public ReturnVoidStmt newReturnVoidStmt ( ) { return Jimple . v ( ) . newReturnVoidStmt ( ) ; }
25751	public ShoppingCartItem findCartItem ( int index ) { if ( cartLines . size ( ) <= index ) { return _NULL ; } return cartLines . get ( index ) ; }
25780	public static String encodePassword ( String value ) { return Base64 . byteArrayToBase64 ( value . getBytes ( ) ) ; }
25789	public void registerPeekPromoSeen ( ) { final int peekPromoShowCount = mPreferenceManager . getContextualSearchPeekPromoShowCount ( ) ; mPreferenceManager . setContextualSearchPeekPromoShowCount ( peekPromoShowCount + _NUM ) ; }
25806	public final boolean isFinished ( ) { return mScrollerX . mFinished && mScrollerY . mFinished ; }
25819	@ VisibleForTesting protected static void releaseWakeLock ( ) { ThreadUtils . assertOnUiThread ( ) ; if ( sWakeLock != _NULL && sWakeLock . isHeld ( ) ) sWakeLock . release ( ) ; }
25821	public boolean contains ( WriteModifiers modifiers ) { return super . contains ( modifiers ) ; }
25838	private void activateToggleSkill ( ) { PacketSendUtility . sendPacket ( ( Player ) effector , new SM_SKILL_ACTIVATION ( getSkillId ( ) , _BOOL ) ) ; }
25854	public static boolean exists ( long id ) { try { return Helper . exists ( id , User . class ) ; } catch ( Exception e1 ) { log . error ( e1 . getMessage ( ) , e1 ) ; } return _BOOL ; }
25874	protected void handle ( Throwable e ) { SVNUIPlugin . openError ( getShell ( ) , _NULL , _NULL , e ) ; }
25876	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
25877	public static final boolean isValidType ( final short valueDeadbandType ) { return valueDeadbandType >= DEADBAND_NONE && valueDeadbandType <= DEADBAND_PROCESS_RELATIVE_VALUE_DESCR_CHANGE ; }
25885	public void updateLocations ( Iterator iIter ) { if ( ContainerList != _NULL ) ContainerList . clear ( ) ; ContainerList = new ArrayList ( ) ; while ( iIter . hasNext ( ) ) ContainerList . add ( ( Location ) iIter . next ( ) ) ; addBehaviour ( new MigrateBehaviour ( ) ) ; }
25894	public static void printThread ( Class < ? > clazz , String msg ) { if ( IS_DEBUG_OF_THREAD ) { Log . w ( clazz . getSimpleName ( ) , _CHAR # # # _CHAR + msg + _CHAR - > _CHAR + _CHAR { name : _CHAR + Thread . currentThread ( ) . getName ( ) + _CHAR , _CHAR + _CHAR id : _CHAR + Thread . currentThread ( ) . getId ( ) + _CHAR } _CHAR ) ; } }
25897	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
25903	public void resume ( ) { engine . resume ( ) ; }
25922	public IdParser createIdParser ( ) { final IdParser idParser = new IdParser ( this ) ; idParser . setAlgorithm ( algorithm ) ; return idParser ; }
25928	public TabState restoreTabState ( int tabId , boolean encrypted ) { return TabState . restoreTabState ( getTabStateFile ( tabId , encrypted ) , encrypted ) ; }
25929	@ Override public void onEnd ( boolean result , BaseSliderView target ) { if ( target . isErrorDisappear ( ) == _BOOL || result == _BOOL ) { return ; } for ( BaseSliderView slider : mImageContents ) { if ( slider . equals ( target ) ) { removeSlider ( target ) ; break ; } } }
26009	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_REMAIN_TIME_30 ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
26051	public boolean isOverride ( ) { if ( override == _NULL ) { return _BOOL ; } else { return override ; } }
26074	public static final double min ( double [ ] a ) { double min = Double . POSITIVE_INFINITY ; for ( int i = _NUM ; i < a . length ; ++ i ) { if ( a [ i ] < min ) min = a [ i ] ; } return min ; }
26118	public void enqueueLaunch ( boolean incognito , int parentId , AsyncTabCreationParams asyncParams ) { ThreadUtils . assertOnUiThread ( ) ; LaunchRunnable runnable = new LaunchRunnable ( incognito , parentId , asyncParams ) ; if ( mCurrentRunnable == _NULL ) { mCurrentRunnable = runnable ; mCurrentRunnable . launch ( ) ; } else { mQueue . add ( runnable ) ; } }
26141	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
26183	private void sendAutocomplete ( Autocomplete autocomplete ) { sendJson ( Json . object ( ACTION , ACTION_AUTOCOMPLETE , AUTOCOMPLETE_CANDIDATES , autocomplete . getCandidates ( ) , AUTOCOMPLETE_CURSOR , autocomplete . getCursorPosition ( ) ) ) ; }
26203	public static String toString ( URL url , String encoding ) throws IOException { return toString ( url , Charsets . toCharset ( encoding ) ) ; }
26207	public static SM_SYSTEM_MESSAGE STR_MSG_CAN_BUY_ONLY_ONE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26221	public static String base64ToString ( final String data ) { return ConversionUtils . arrayToString ( Base64 . decodeBase64 ( data ) ) ; }
26235	public static void showOkDialog ( final Activity activity , final String title , final String text ) { showOkDialog ( activity , title , text , _NULL ) ; }
26236	public static SM_SYSTEM_MESSAGE STR_MSG_GET_CASH_CUSTOMIZE_MOTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26239	private int klattRule0 ( Element segment ) { return getPropertyAsInteger ( _CHAR rule0 . all _CHAR ) ; }
26243	public final short readLEShort ( byte [ ] byteArray ) { return ( short ) ( ( byteArray [ _NUM ] & _NUM ) << _NUM | ( byteArray [ _NUM ] & _NUM ) ) ; }
26254	public String fieldName ( ) { return fldName ; }
26257	@ Override public void keyTyped ( KeyEvent e ) { synchronized ( keyLock ) { keysTyped . addFirst ( e . getKeyChar ( ) ) ; } }
26260	public static boolean sleep ( final long milliseconds ) { try { Thread . sleep ( milliseconds ) ; return _BOOL ; } catch ( InterruptedException e ) { logger . warn ( _CHAR Thread { } has been interrupted _CHAR , Thread . currentThread ( ) . getName ( ) , e ) ; return _BOOL ; } }
26298	public int size ( ) { return length ( ) + _NUM ; }
26299	public static void saveLogs ( String logFile ) { UTF8FileIO . writeln ( logFile , new String [ ] { getLogString ( ) } ) ; }
26316	public void put ( String key , InputStream stream , String name ) { put ( key , stream , name , _NULL ) ; }
26322	public static ViewTapTarget forView ( View view , CharSequence title ) { return forView ( view , title , _NULL ) ; }
26326	public static SM_SYSTEM_MESSAGE STR_MSG_DELETE_CASH_ITEM_BY_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26353	public void add ( Matrix x ) { sum . plusEquals ( x ) ; squaredSum . plusEquals ( x . pow ( _NUM . _NUM ) ) ; N ++ ; }
26366	public static SamlWebViewDialog newInstance ( String url , String targetUrl ) { SamlWebViewDialog fragment = new SamlWebViewDialog ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_INITIAL_URL , url ) ; args . putString ( ARG_TARGET_URL , targetUrl ) ; fragment . setArguments ( args ) ; return fragment ; }
26402	public String toString ( ) { return _CHAR ClientMaxPrincipalType _CHAR + Constraint . toString ( classes ) ; }
26403	public void warning ( Object elementOrLocation , String message , Object ... params ) { model . addDiagIfNotSuppressed ( elementOrLocation , Diag . warning ( getLocation ( elementOrLocation ) , Model . diagPrefix ( aspectName ) + message , params ) ) ; }
26410	public static boolean gr ( double a , double b ) { return ( a - b > SMALL ) ; }
26433	public void configureIndicator ( int indicatorWidth , int indicatorHeight , int indicatorMargin ) { configureIndicator ( indicatorWidth , indicatorHeight , indicatorMargin , R . animator . scale_with_alpha , _NUM , R . drawable . white_radius , R . drawable . white_radius ) ; }
26439	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bind_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
26440	public void incrementCurrentCount ( boolean store ) throws GenericEntityException { if ( store ) { info . set ( _CHAR recurrenceCount _CHAR , getCurrentCount ( ) + _NUM ) ; info . store ( ) ; } }
26442	public Boolean isLogQos ( ) { return logQos ; }
26444	public MyDialog contentView ( int layoutId ) { if ( layoutId == _NUM ) return this ; View v = LayoutInflater . from ( getContext ( ) ) . inflate ( layoutId , _NULL ) ; return contentView ( v ) ; }
26455	public void addEvent ( String e ) { if ( TextUtils . isEmpty ( e ) ) { return ; } if ( event == _NULL ) { event = new WXEvent ( ) ; } if ( containsEvent ( e ) ) { return ; } event . add ( e ) ; }
26457	public int size ( ) { return _NUM ; }
26462	public static SM_SYSTEM_MESSAGE STR_FACTION_HOSTIL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26469	public static SM_SYSTEM_MESSAGE STR_NO_SUCH_USER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26480	public void add ( UIElement element ) { elements . add ( element ) ; }
26500	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARRY_A_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
26507	public static < T extends GenericEntity > List < T > filterByDate ( List < T > datedValues ) { return filterByDate ( datedValues , UtilDateTime . nowTimestamp ( ) , _NULL , _NULL , _BOOL ) ; }
26514	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_PARRY ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
26531	public String process ( Item item ) throws ProcessException { return getPhoneFeature ( item , _CHAR cvox _CHAR ) ; }
26572	public static < T > Iterable < T > Iterable ( T object ) { return _NULL ; }
26581	public static String formatItem ( final ItemId item ) { return WordUtils . capitalize ( item . toString ( ) . toLowerCase ( ) . replaceAll ( _CHAR item_ _CHAR , _CHAR _CHAR ) . replaceAll ( StringLiterals . UNDERSCORE , StringLiterals . SPACE ) ) ; }
26598	public Header nextHeader ( ) throws NoSuchElementException { final int current = this . currentIndex ; if ( current < _NUM ) { throw new NoSuchElementException ( _CHAR Iteration already finished . '' ) ; } this . lastIndex = current ; this . currentIndex = findNext ( current ) ; return ( Header ) this . allHeaders . get ( current ) ; }
26631	public RecordID next ( ) { return _NULL ; }
26645	public static ServiceType toServiceType ( Class cls ) throws MarshalException { if ( cls != _NULL ) return toServiceTypeBase ( cls , _BOOL ) . type ; return _NULL ; }
26646	public void resetStartTime ( ) { dStart = new Date ( ) ; }
26648	public boolean write ( byte [ ] bytes , int offset , int size ) { System . arraycopy ( bytes , offset , outputData , curIndex , size ) ; curIndex += size ; return _BOOL ; }
26668	public static float calculateAspectRatio ( @ NonNull RectF rect ) { return rect . width ( ) / rect . height ( ) ; }
26676	public static void main ( String [ ] args ) { System . out . println ( ( new KevinVoiceDirectory ( ) ) . toString ( ) ) ; }
26690	public boolean isMotorEnabled ( ) { return motorEnabled ; }
26707	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case R . id . menu_refresh : SyncUtils . triggerRefresh ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
26737	public static String toString ( URL url ) throws IOException { return toString ( url , Charset . defaultCharset ( ) ) ; }
26751	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
26756	public void reset ( byte [ ] input , int length ) { buffer . reset ( input , _NUM , length ) ; }
26761	public int seconds ( ) { return this . seconds ; }
26790	public double compareDistributions ( Distribution d1 , Distribution d2 ) { return d1 . similarityTo ( d2 ) ; }
26808	public Boolean isWebSocket ( ) { return webSocket ; }
26818	public static void verifyInterval ( final double lower , final double upper ) throws MathIllegalArgumentException { if ( lower >= upper ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . ENDPOINTS_NOT_AN_INTERVAL , lower , upper , _BOOL ) ; } }
26827	public int length ( ) { if ( root . child == _NULL ) { return _NUM ; } if ( length > - _NUM ) { return length ; } length = root . getChildCount ( ) ; return length ; }
26834	public String process ( Item seg ) throws ProcessException { return segCodaCtype ( seg , _CHAR s _CHAR ) ; }
26850	public void addResource ( ResourceDeclaration node ) { List < ResourceDeclaration > list = ( parent == _NULL || state == _NULL ) ? getResourceListNoTransform ( ) : getResourceList ( ) ; list . addChild ( node ) ; }
26852	private void fillDeclaredPrefixes ( Iterator namespaces ) { fDeclaredPrefixes . clear ( ) ; while ( namespaces . hasNext ( ) ) { Namespace ns = ( Namespace ) namespaces . next ( ) ; String prefix = ns . getPrefix ( ) ; fDeclaredPrefixes . add ( prefix != _NULL ? prefix : _CHAR _CHAR ) ; } }
26864	public boolean hasInit ( ) { return getInitOpt ( ) . getNumChild ( ) != _NUM ; }
26869	@ VisibleForTesting void reset ( ) { setRawCounter ( _NUM ) ; }
26903	public static void save ( ) { if ( conf != _NULL ) { String file = home + File . separator + confName + _CHAR . properties _CHAR ; conf . setProperty ( _CHAR home _CHAR , _NULL ) ; try { conf . save ( file ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } }
26918	public void addInit ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getInitListNoTransform ( ) : getInitList ( ) ; list . addChild ( node ) ; }
26929	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
26981	@ Override public boolean checkCondition ( ) { return ! alliance . hasMember ( invited . getObjectId ( ) ) ; }
26998	public String process ( Item item ) throws ProcessException { int count =- _NUM ; for ( Item p = item . getItemAs ( Relation . SYLLABLE_STRUCTURE ) ; p != _NULL ; p = p . getPrevious ( ) ) { count ++ ; } return Integer . toString ( rail ( count ) ) ; }
27007	public void reset ( PermissionFlag flag , Identity < ? > identity ) { strictPermission . getOrDefault ( flag , emptyMap ( ) ) . remove ( identity ) ; }
27017	@ Override public int reapUnused ( ) { int res = _NUM ; for ( EvictionReplicationsMarkersSegment segment : _segments ) { if ( size ( ) == _NUM ) return res ; res += reapUnused ( segment ) ; } return res ; }
27024	public boolean isSuccess ( ) { return success ; }
27028	public GroupsGetMembersQuery groupId ( String value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
27036	public boolean isActive ( ) { return this . state != _NULL && this . state . equals ( AlarmCondition . ACTIVE ) ; }
27042	public Expression lessThan ( Value v1 , Value v2 ) { return new BinaryExpression ( v1 , v2 , ExpressionType . LESS_THAN ) ; }
27043	@ Override public String toString ( ) { return ToStringBuilder . reflectionToString ( this , ToStringStyle . SHORT_PREFIX_STYLE ) ; }
27071	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
27079	public boolean isAskForUsername ( ) { return askForUsername ; }
27090	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
27121	public void removeAllTags ( ) { mTagList = _NULL ; }
27129	public boolean hasBlock ( ) { return getBlockOpt ( ) . getNumChild ( ) != _NUM ; }
27143	@ Override protected void initComparator ( ) { if ( Comparator == _NULL ) Comparator = new NGramCachedNonSymmGraphComparator ( ) ; }
27153	public void popContext ( ) { fMatchersCount = fContextStack . pop ( ) ; }
27158	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
27169	public static boolean isInitialized ( Context ctx ) { vitamioPackage = ctx . getPackageName ( ) ; vitamioLibraryPath = ContextUtils . getDataDir ( ctx ) + _CHAR lib / _CHAR ; return _BOOL ; }
27210	public boolean removeUser ( int handle ) { try { return mService . removeUser ( handle ) ; } catch ( RemoteException re ) { Log . w ( TAG , _CHAR Could not remove user _CHAR , re ) ; return _BOOL ; } }
27224	public final TestSubscriber < T > assertFusionEnabled ( ) { if ( establishedFusionMode != Fuseable . SYNC && establishedFusionMode != Fuseable . ASYNC ) { throw new AssertionError ( _CHAR Fusion was not enabled _CHAR ) ; } return this ; }
27231	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
27233	public boolean isSuccess ( ) { return success ; }
27256	public QueryAnswers resolve ( MatchQuery inputQuery , boolean materialise ) { Query query = new ReasonerMatchQuery ( inputQuery , graph ) ; return resolveQuery ( query , materialise ) ; }
27261	public static SM_SYSTEM_MESSAGE STR_OTHER_combine_FAIL ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
27268	@ Frame ( _CHAR $ cq _CHAR ) public AemRichText click ( final RtButton button ) { if ( ! buttonSelected ( button ) ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; } return this ; }
27271	@ Override public void endMerging ( ) { }
27278	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
27281	public static SM_SYSTEM_MESSAGE STR_GUILD_INVITE_I_JOINED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27295	public void hide ( boolean animate ) { hide ( animate , fadeOut ) ; }
27302	public int size ( ) { return _NUM ; }
27306	public IntIterator columnRows ( int col , boolean reverse ) { return new ColumnRowIterator ( rows ( reverse ) , col ) ; }
27307	@ Override public void onError ( String error ) { }
27331	public String process ( Item seg ) throws ProcessException { return segOnsetCtype ( seg , _CHAR f _CHAR ) ; }
27335	@ Override public int hashCode ( ) { return mask != _NULL ? mask . hashCode ( ) : _NUM ; }
27337	@ Override public final void writeAsciiString ( final String s ) { write ( s . getBytes ( ASCII ) ) ; }
27355	public static String stringifyException ( Throwable e ) { StringWriter stm = new StringWriter ( ) ; PrintWriter wrt = new PrintWriter ( stm ) ; e . printStackTrace ( wrt ) ; wrt . close ( ) ; return stm . toString ( ) ; }
27371	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
27378	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
27416	public HumanTime ms ( int n ) { delta += Math . abs ( n ) ; return this ; }
27433	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
27442	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
27455	public static SM_SYSTEM_MESSAGE STR_GUILD_INVITE_HE_REJECTED_INVITATION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27459	public void addStmt ( Stmt node ) { List < Stmt > list = ( parent == _NULL || state == _NULL ) ? getStmtListNoTransform ( ) : getStmtList ( ) ; list . addChild ( node ) ; }
27464	public static SM_SYSTEM_MESSAGE STR_GATHER_FAIL_5_FORESTRY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27472	public int size ( ) { if ( mListeners != _NULL ) { return mListeners . size ( ) ; } else { return _NUM ; } }
27515	public static void logError ( Throwable e , boolean invalidRowsPresent ) { if ( ! invalidRowsPresent ) { invalidRowsPresent = _BOOL ; LOGGER . error ( e , CarbonCommonConstants . FILTER_INVALID_MEMBER + e . getMessage ( ) ) ; } }
27569	public AemSidekick expandFieldsetIfCollapsed ( String fieldsetName ) { final WebElement fieldset = getFieldsetByName ( fieldsetName ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( SidekickActions . expandFieldset ( fieldset ) , Timeouts . SMALL ) ; return this ; }
27586	private ChannelType createXmlChannel ( Pair < SequenceUUID , Integer > pair ) { ChannelType channel = new ChannelType ( ) ; channel . setCPLVirtualTrackId ( pair . getLeft ( ) . getUuid ( ) ) ; channel . setCPLVirtualTrackChannel ( pair . getRight ( ) ) ; return channel ; }
27587	public boolean isValueOnly ( ) { if ( valueOnly == _NULL ) { return _BOOL ; } else { return valueOnly ; } }
27599	public static DexlibAbstractInstruction fromInstruction ( Instruction instruction , int codeAddress ) { return fromOpcode ( instruction . getOpcode ( ) , instruction , codeAddress ) ; }
27619	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
27632	@ Override public void dispose ( ) { if ( receiveThread != _NULL ) { receiveThread . interrupt ( ) ; try { receiveThread . join ( ) ; } catch ( InterruptedException e ) { } receiveThread = _NULL ; } if ( serialPort != _NULL ) { serialPort . close ( ) ; serialPort = _NULL ; } logger . info ( _CHAR Stopped ZWave serial handler _CHAR ) ; super . dispose ( ) ; }
27649	public VideoCreateCommentQuery createComment ( UserActor actor , int videoId ) { return new VideoCreateCommentQuery ( getClient ( ) , actor , videoId ) ; }
27662	public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_TRADE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27664	public void initialize ( int [ ] data ) { if ( data == _NULL ) { throw new IllegalArgumentException ( _CHAR Data Array is NUll _CHAR ) ; } this . data = data ; }
27668	public void disableWhenHorizontalMove ( boolean disable ) { mDisableWhenHorizontalMove = disable ; }
27679	String inprogressZNodeName ( long ledgerId , long firstTxId , long logSegmentSeqNo ) { if ( DistributedLogConstants . LOGSEGMENT_NAME_VERSION == conf . getLogSegmentNameVersion ( ) ) { return String . format ( _CHAR % s_ % _NUM _CHAR , DistributedLogConstants . INPROGRESS_LOGSEGMENT_PREFIX , logSegmentSeqNo ) ; } else { return DistributedLogConstants . INPROGRESS_LOGSEGMENT_PREFIX + _CHAR _ _CHAR + Long . toString ( firstTxId , _NUM ) ; } }
27683	private static StringBuilder dump ( StringBuilder _lbuffer , long value ) { for ( int j = _NUM ; j < _NUM ; j ++ ) { _lbuffer . append ( _hexcodes [ ( int ) ( value >> _shifts [ j ] ) & _NUM ] ) ; } return _lbuffer ; }
27686	public static SM_SYSTEM_MESSAGE STR_CURRENT_INCLUDES ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
27703	public static int readShort ( byte [ ] bytes ) { return ( ( bytes [ _NUM ] << _NUM ) & _NUM ) | ( bytes [ _NUM ] & _NUM ) ; }
27722	public void clearPayment ( int index ) { paymentInfo . remove ( index ) ; }
27758	private static boolean isSeparator ( char ch ) { return ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR ; }
27759	public final void unload ( T t ) { if ( t != _NULL ) { objects . invalidate ( t . getId ( ) ) ; } }
27765	public void resetUploadSettings ( ) { this . isUploading = _BOOL ; this . uploadedSize = _NUM ; this . uploadData = _NULL ; }
27767	public static boolean isInitialized ( Context ctx ) { vitamioPackage = ctx . getPackageName ( ) ; vitamioLibraryPath = ContextUtils . getDataDir ( ctx ) + _CHAR lib / _CHAR ; return _BOOL ; }
27782	public static Style amber ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_AMBER ) ; return style ; }
27784	public void writeFileContent ( String content , Path path ) throws CommandException { try { Files . write ( content , path . toFile ( ) , StandardCharsets . UTF_8 ) ; } catch ( IOException e ) { throw new CommandException ( _CHAR Can not write file content in path : _CHAR + path . toString ( ) , e ) ; } }
27826	public void invalidate ( int row ) { if ( m_tuples == _NULL || row < _NUM || row >= m_tuples . length ) { return ; } else if ( m_tuples [ row ] != _NULL ) { m_tuples [ row ] . invalidate ( ) ; m_tuples [ row ] = _NULL ; } }
27830	public Activity put ( String key , Activity activity ) { return ( Activity ) m_map . put ( key , activity ) ; }
27832	@ Override public void updateUserLayers ( ) { createUserLayerDataSources ( ) ; notifyDataSourceLoaded ( ) ; }
27848	public boolean selectServiceTab ( String url ) { url = url . replaceAll ( _CHAR . * : // '' , '' '' ) ; for ( int i = 0 ; i < tabbedPane . getTabCount ( ) ; i ++ ) { if ( tabbedPane . getTitleAt ( i ) . equalsIgnoreCase ( url ) ) { tabbedPane . setSelectedIndex ( i ) ; return true ; } } return false ; }
27852	public static void verifyWhichActivityToSwitch ( Context mContext , String source , String dest ) { UserInfoActivity . start ( mContext , dest ) ; }
27855	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
27856	public static boolean sm ( double a , double b ) { return ( b - a > SMALL ) ; }
27864	public static SM_SYSTEM_MESSAGE STR_MSG_BUY_ITEM_MULTI ( String value1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0s ) ; }
27865	public static SM_SYSTEM_MESSAGE STR_DECOMPOUND_ERROR_NOT_DECOMPOUNDABLE_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27868	public void onAccessibilityStatusChanged ( boolean enabled ) { if ( enabled && ( mNodeProvider == _NULL ) ) { mAccessibilityView = new View ( getContext ( ) ) ; addView ( mAccessibilityView ) ; mNodeProvider = new CompositorAccessibilityProvider ( mAccessibilityView ) ; ViewCompat . setAccessibilityDelegate ( mAccessibilityView , mNodeProvider ) ; } }
27883	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Class_info cc = ( CONSTANT_Class_info ) ( constant_pool [ class_index ] ) ; CONSTANT_NameAndType_info cn = ( CONSTANT_NameAndType_info ) ( constant_pool [ name_and_type_index ] ) ; return cc . toString ( constant_pool ) + _CHAR . _CHAR + cn . toString ( constant_pool ) ; }
27909	public static int mulAndCheck ( int x , int y ) { long m = ( ( long ) x ) * ( ( long ) y ) ; if ( m < Integer . MIN_VALUE || m > Integer . MAX_VALUE ) { throw new ArithmeticException ( _CHAR overflow : mul _CHAR ) ; } return ( int ) m ; }
27910	public void configureIndicator ( int indicatorWidth , int indicatorHeight , int indicatorMargin ) { configureIndicator ( indicatorWidth , indicatorHeight , indicatorMargin , R . animator . scale_with_alpha , _NUM , R . drawable . white_radius , R . drawable . white_radius ) ; }
27913	public boolean hasRelativePeriods ( ) { return relatives != _NULL && ! relatives . isEmpty ( ) ; }
27942	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
27944	public HumanTime y ( int n ) { delta += YEAR * Math . abs ( n ) ; return this ; }
27969	public NotesRestoreCommentQuery restoreComment ( UserActor actor , int commentId ) { return new NotesRestoreCommentQuery ( getClient ( ) , actor , commentId ) ; }
27983	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MEMBER_RANK_DONE_GUILD_SUBMASTER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27991	public AuthSignupQuery signup ( UserActor actor , String firstName , String lastName , int clientId , String clientSecret , String phone ) { return new AuthSignupQuery ( getClient ( ) , actor , firstName , lastName , clientId , clientSecret , phone ) ; }
28021	public static < L , R > Either < L , R > right ( R right ) { return new Either < > ( _NULL , right , _BOOL ) ; }
28024	public AuthSignupQuery signup ( String firstName , String lastName , int clientId , String clientSecret , String phone ) { return new AuthSignupQuery ( getClient ( ) , firstName , lastName , clientId , clientSecret , phone ) ; }
28027	public int compareTo ( Issue otherIssue ) { return this . getKey ( ) . compareTo ( otherIssue . getKey ( ) ) ; }
28029	public boolean hasBlock ( ) { return getBlockOpt ( ) . getNumChild ( ) != _NUM ; }
28033	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
28034	public static void startActivity ( Context context ) { if ( context == _NULL ) return ; Intent intent = new Intent ( context , ExpandedControllerActivity . class ) ; intent . setFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; context . startActivity ( intent ) ; }
28036	@ NotNull public static BufferedImage trim ( @ NotNull BufferedImage image ) { BufferedImage cropped = ImageUtils . cropBlank ( image , _NULL , TYPE_INT_ARGB ) ; return cropped != _NULL ? cropped : image ; }
28043	@ Override public Scan open ( ) { Scan s = p . open ( ) ; return new ProjectScan ( s , schema . fields ( ) ) ; }
28044	public MessagesMarkAsImportantQuery messageIds ( Integer ... value ) { return unsafeParam ( _CHAR message_ids _CHAR , value ) ; }
28046	public void addEntityName ( String name ) { if ( name != _NULL ) { this . entityNameSet . add ( name ) ; } }
28135	public void acceptVisit ( ExpressionVisitor visitor ) { visitor . enter ( this ) ; }
28151	public static ViewTapTarget forView ( View view , CharSequence title , @ Nullable CharSequence description ) { return new ViewTapTarget ( view , title , description ) ; }
28161	public String createAuthorityName ( Role role ) { String roleName = role . getRoleName ( ) . toUpperCase ( ) ; return rolePrefix + roleName ; }
28167	@ Override public void keyPressed ( KeyEvent e ) { synchronized ( keyLock ) { keysDown . add ( e . getKeyCode ( ) ) ; } }
28180	public void addDeferredJimplification ( DeferableInstruction i ) { deferredInstructions . add ( i ) ; }
28183	@ Override public void onClick ( View v ) { LogUtil . e ( _CHAR position = _CHAR + position ) ; new BossZoomHelper ( ( Activity ) context , bossJumpView , _NUM ) ; }
28194	private synchronized final void fallAsleep ( long duration ) throws InterruptedException { wait ( duration ) ; }
28197	public static void buildUnpaidOrderTable ( Connection conn ) { try { Statement stmt = conn . createStatement ( ) ; stmt . execute ( _CHAR CREATE TABLE UnpaidOrder _CHAR + _CHAR ( CustomerNumber CHAR ( _NUM ) NOT NULL REFERENCES Customer ( CustomerNumber ) , _CHAR + _CHAR ProdNum CHAR ( _NUM ) NOT NULL REFERENCES Coffee ( ProdNum ) , _CHAR + _CHAR OrderDate CHAR ( _NUM ) , _CHAR + _CHAR Quantity DOUBLE , _CHAR + _CHAR Cost DOUBLE ) _CHAR ) ; } catch ( SQLException ex ) { System . out . println ( _CHAR ERROR : _CHAR + ex . getMessage ( ) ) ; } }
28204	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
28219	@ Override public void onLoadPackageCheckFail ( File patchFile , int errorCode ) { TinkerLog . i ( TAG , _CHAR load patch package check fail file path : % s , errorCode : % d '' , patchFile . getAbsolutePath ( ) , errorCode ) ; Tinker . with ( context ) . cleanPatch ( ) ; }
28224	public static Object bytesToObject ( byte [ ] bytes ) throws IOException , ClassNotFoundException { ByteArrayInputStream inStream = new ByteArrayInputStream ( bytes ) ; ObjectInputStream in = new ContextClassLoaderObjectInputStream ( inStream ) ; Object data = in . readObject ( ) ; in . close ( ) ; return data ; }
28235	void save ( PermissionHolder holder ) { if ( holder instanceof User ) { plugin . getDatastore ( ) . saveUser ( ( ( User ) holder ) , _NULL ) ; } if ( holder instanceof Group ) { plugin . getDatastore ( ) . saveGroup ( ( ( Group ) holder ) , _NULL ) ; } }
28248	public static Date min ( Collection < Date > dates ) { Date earliest = _NULL ; for ( Date d : dates ) { earliest = min ( d , earliest ) ; } return earliest ; }
28257	public UsersGetSubscriptionsQueryWithExtended count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
28264	public void clearGroups ( ) { groups . clear ( ) ; }
28276	public Iterator < T > asIterator ( ) { return new BlockingIterator ( ) ; }
28300	public void addViewProvider ( DataSourceViewProvider provider , Class < ? extends DataSource > scope ) { providers . put ( provider , scope ) ; }
28318	private Boolean addColumn ( Column columnToAdd , Set < Interval > intervals ) { return workingIntervals . put ( columnToAdd , intervals ) == _NULL ; }
28321	public static String toString ( URI uri ) throws IOException { return toString ( uri , Charset . defaultCharset ( ) ) ; }
28339	public Object findFeature ( Item item ) { return path . findFeature ( item ) ; }
28372	public static SM_SYSTEM_MESSAGE STR_SOUL_BOUND_ITEM_CANCELED ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
28400	synchronized void dropObservable ( UUID host , int id ) { mCache . remove ( new CacheKey ( host , id ) ) ; }
28417	public boolean equals ( Object obj ) { if ( ! ( obj instanceof LocatorReg ) ) return _BOOL ; return l . equals ( ( ( LocatorReg ) obj ) . l ) ; }
28429	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
28499	public String process ( Item item ) throws ProcessException { int count = _NUM ; Item daughter = item . getItemAs ( Relation . SYLLABLE_STRUCTURE ) . getDaughter ( ) ; while ( daughter != _NULL ) { count ++ ; daughter = daughter . getNext ( ) ; } return Integer . toString ( rail ( count ) ) ; }
28509	public void activate ( ) { getViewer ( ) . getSearchManager ( ) . setSearcher ( getSearcher ( ) ) ; getViewer ( ) . getSearchManager ( ) . getFindDialogAsToolBar ( ) . clearMessage ( ) ; if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionSeries ( ) ; chartSelection . setSelectedSeries ( getSelectedLabels ( ) , _BOOL ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
28517	public boolean isSPD ( ) { return isspd ; }
28519	private boolean hasPermissionsGranted ( String permission ) { return ActivityCompat . checkSelfPermission ( this . getActivity ( ) , permission ) == PackageManager . PERMISSION_GRANTED ; }
28523	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
28531	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
28553	public static double combination ( double n , double r ) { double nFac = MathUtils . factorial ( n ) ; double rFac = MathUtils . factorial ( r ) ; double nMinusRFac = MathUtils . factorial ( ( n - r ) ) ; return nFac / ( rFac * nMinusRFac ) ; }
28558	public boolean contains ( TakeModifiers modifiers ) { return super . contains ( modifiers ) ; }
28585	@ Override protected void onStopLoading ( ) { cancelLoad ( ) ; }
28589	protected void resetXML11 ( ) throws XNIException { int count = fXML11Components . size ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { XMLComponent c = ( XMLComponent ) fXML11Components . get ( i ) ; c . reset ( this ) ; } }
28590	public IntIterator rows ( ) { return new RowIterator ( _BOOL ) ; }
28593	Process openProcess ( String [ ] cmdAttribs ) throws IOException { return Runtime . getRuntime ( ) . exec ( cmdAttribs ) ; }
28600	public TypeSpec typeSpec ( List < AnnotationSpec > generatedAnnotations ) { return classBuilder ( generatedType ) . addFields ( fields ) . addMethod ( constructor ( ) ) . addMethods ( transform ( methods ( ) , getMethod ) ) . addAnnotations ( generatedAnnotations ) . addModifiers ( PUBLIC , FINAL ) . addTypes ( nestedTypes ) . build ( ) ; }
28601	public AemInsertWindow waitToBeDisplayed ( ) { wait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
28620	public boolean isZero ( ) { return dataElement != _NULL && dataElement . getValueType ( ) . isNumeric ( ) && value != _NULL && ZERO_PATTERN . matcher ( value ) . find ( ) ; }
28624	public static SM_SYSTEM_MESSAGE STR_MSG_COMBINE_ITEM_MULTI ( String value1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0s ) ; }
28706	private void updateSymbols ( ) { if ( rendererList != _NULL ) { for ( RenderSymbolInterface renderer : rendererList ) { renderer . renderSymbol ( ) ; } } }
28718	public boolean drain ( ) { timer . stop ( _CHAR AudioOutput _CHAR ) ; return _BOOL ; }
28764	public static AuditLevel toLevel ( int val , Level defaultLevel ) { return AUDIT ; }
28781	public void addTargetLocation ( String name ) { if ( name != _NULL ) { this . targetLocationSet . add ( name ) ; } }
28793	@ Override public int hashCode ( ) { IJSpace thisProxy = getProxy ( ) ; if ( thisProxy == _NULL ) return - _NUM ; return thisProxy . hashCode ( ) ; }
28806	public void clear ( ) { pointList . clear ( ) ; this . fireTableDataChanged ( ) ; }
28821	public final boolean isAlternatingDeviceState ( ) { return ( myAlternate & CFG_DEVICE_STATE ) != _NUM ; }
28822	public void removeEdge ( Edge edge ) throws Exception { if ( EdgeDistros . containsKey ( edge ) ) EdgeDistros . remove ( edge ) ; super . removeEdge ( edge ) ; }
28828	public boolean hasInit ( ) { return getInitOpt ( ) . getNumChild ( ) != _NUM ; }
28850	public Builder stepSubtitleTextColor ( int stepSubtitleTextColor ) { this . stepSubtitleTextColor = stepSubtitleTextColor ; return this ; }
28872	public AudioEditAlbumQuery editAlbum ( UserActor actor , int albumId , String title ) { return new AudioEditAlbumQuery ( getClient ( ) , actor , albumId , title ) ; }
28885	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_CASTLE_TAKEN ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
28888	public String toString ( ) { return _CHAR at _CHAR + this . index + _CHAR [ character _CHAR + this . character + _CHAR line _CHAR + this . line + _CHAR ] _CHAR ; }
28907	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
28917	public FramePath addFrame ( Frame frame ) { return addFrame ( frame . value ( ) ) ; }
28922	public static QueryParser create ( QueryBuilder queryBuilder ) { return new QueryParser ( queryBuilder ) ; }
28931	public boolean isRepeatable ( ) { return _BOOL ; }
28935	private SoftReference < DoubleRef < Key , Value >> reference ( Key key , Value value ) { return new SoftReference < DoubleRef < Key , Value >> ( new DoubleRef < Key , Value > ( key , value ) ) ; }
28943	public java . lang . Boolean isEscaped ( ) { return escaped ; }
28944	public boolean hasProcessingHint ( ProcessingHint hint ) { return this . processingHints . contains ( hint ) ; }
28953	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28956	public synchronized void saveCustomPropertiesTo ( File file ) { if ( file == _NULL ) throw new NullPointerException ( _CHAR File can not be _NULL _CHAR ) ; if ( file . isDirectory ( ) ) throw new IllegalArgumentException ( _CHAR Not a valid file : _CHAR + file ) ; Properties prop = getCustomProperties ( _BOOL ) ; if ( prop != _NULL && ! prop . isEmpty ( ) ) storeProperties ( prop , file ) ; }
28971	public String toString ( ) { return _CHAR _NULL _CHAR ; }
28983	public void stop ( ) { for ( final StoppableTask task : backgroundTasks ) { task . stop ( ) ; } }
28989	public void nofityChange ( ) { if ( observer != _NULL ) { observer . onChange ( ) ; } }
29023	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_main ) ; if ( savedInstanceState == _NULL ) { Fragment fragment = new MainFragment ( ) ; getFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . fragmentContainer , fragment ) . commit ( ) ; } }
29032	public static LineString lineString ( Collection < Point > points ) { return lineString ( points . toArray ( new Point [ points . size ( ) ] ) ) ; }
29037	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_ENEMY_DODGE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
29039	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_BLOCK_A_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
29058	public static boolean isInitialized ( Context ctx ) { vitamioPackage = ctx . getPackageName ( ) ; vitamioLibraryPath = ContextUtils . getDataDir ( ctx ) + _CHAR lib / _CHAR ; return _BOOL ; }
29061	public FriendsSearchQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
29064	private static boolean validateNewSize ( int level ) { return ! ( level < MIN_EXPAND || level > MAX_EXPAND ) ; }
29069	@ SuppressWarnings ( _CHAR rawtypes _CHAR ) public Value cast ( Value obj , Class cls ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
29090	public void damageEntity ( float x , float y , float damage ) { for ( TexturedEntity entity : entities ) { if ( entity instanceof LivingEntity && entity . getBounds ( ) . overlaps ( new Rectangle ( x , y , _NUM , _NUM ) ) ) { ( ( LivingEntity ) entity ) . damage ( damage ) ; break ; } } }
29104	public Fraction negate ( ) { if ( numerator == Integer . MIN_VALUE ) { throw MathRuntimeException . createArithmeticException ( OVERFLOW_MESSAGE , numerator , denominator ) ; } return new Fraction ( - numerator , denominator ) ; }
29122	public void configureForSyncPromo ( boolean isExpanded ) { mDeviceIcon . setVisibility ( View . VISIBLE ) ; mDeviceIcon . setImageResource ( R . drawable . recent_laptop ) ; mDeviceLabel . setText ( R . string . ntp_recent_tabs_sync_promo_title ) ; setTimeLabelVisibility ( View . GONE ) ; configureExpandedCollapsed ( isExpanded ) ; }
29126	public double expectedWeightedValue ( ) { return this . weightedProduct ; }
29132	public void show ( ) { if ( mNextView == _NULL ) { throw new RuntimeException ( _CHAR setView must have been called _CHAR ) ; } TN tn = mTN ; tn . mNextView = mNextView ; Message . obtain ( mHandler , MSG_ENQUEUE_TOAST , this ) . sendToTarget ( ) ; }
29134	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
29160	@ Override public void write ( String str , int st , int end ) throws IOException { out . write ( str , st , end ) ; }
29168	public static void addResource ( Offer . Builder o , String name ) { addResource ( o , name , _NULL ) ; }
29198	public static Experiment createFromJSONString ( String json ) { return new GsonBuilder ( ) . create ( ) . fromJson ( json , Experiment . class ) ; }
29213	public void removeItemRelation ( String relationName ) { relations . remove ( relationName ) ; }
29227	public static SM_SYSTEM_MESSAGE STR_FACTION_OPPOSITE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29238	private Vector2 toWorldCoordinates ( Point point ) { double x = ( point . getX ( ) - this . canvas . getWidth ( ) / _NUM . _NUM ) / this . scale ; double y =- ( point . getY ( ) - this . canvas . getHeight ( ) / _NUM . _NUM ) / this . scale ; return new Vector2 ( x , y ) ; }
29311	public static double log10 ( double x ) { return Math . log ( x ) / LOG10 ; }
29319	private void notifyAdded ( List < AirMapTraffic > added ) { if ( added == _NULL || added . isEmpty ( ) ) { return ; } for ( AirMapTrafficListener listener : listeners ) { listener . onAddTraffic ( added ) ; } }
29337	public static boolean verifyPermissions ( int ... grantResults ) { if ( grantResults . length == _NUM ) { return _BOOL ; } for ( int result : grantResults ) { if ( result != PackageManager . PERMISSION_GRANTED ) { return _BOOL ; } } return _BOOL ; }
29339	public int createDeferredDocument ( ) { int nodeIndex = createNode ( Node . DOCUMENT_NODE ) ; return nodeIndex ; }
29368	public Builder quality ( int quality ) { if ( quality < _NUM || quality > _NUM ) throw new IllegalArgumentException ( _CHAR quality must be between _NUM and _NUM _CHAR ) ; this . quality = quality ; return this ; }
29369	public String toString ( ) { return ( id + _CHAR @ _CHAR + when + _CHAR = _CHAR + getValue ( ) ) ; }
29404	public static ValueAnimator animateDummy ( int duration ) { ValueAnimator a = ValueAnimator . ofFloat ( _NUM , _NUM ) ; a . setDuration ( duration ) ; a . start ( ) ; return a ; }
29405	@ Requires ( Resolved . class ) @ Nullable public Field lookupField ( String name ) { return fieldByName . get ( name ) ; }
29417	public BookDTO toDTO ( Book book ) { return toDTO ( book , _NUM ) ; }
29425	public void resetClearedState ( ) { this . _cleared = _BOOL ; }
29454	public boolean isRepeated ( ) { return proto . getLabel ( ) == FieldDescriptorProto . Label . LABEL_REPEATED ; }
29466	public static void dialNumber ( Context context , String phoneNumber ) { openDialerActivityWithAction ( context , phoneNumber , Intent . ACTION_DIAL ) ; }
29484	public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_INVITE_GUILD ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29496	public double [ ] toSplitDouble ( ) { double split [ ] = new double [ _NUM ] ; long mask = _NUM ; split [ _NUM ] = Double . longBitsToDouble ( Double . doubleToLongBits ( toDouble ( ) ) & mask ) ; split [ _NUM ] = subtract ( newInstance ( split [ _NUM ] ) ) . toDouble ( ) ; return split ; }
29501	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
29520	public void addInitStmt ( Stmt node ) { List < Stmt > list = ( parent == _NULL || state == _NULL ) ? getInitStmtListNoTransform ( ) : getInitStmtList ( ) ; list . addChild ( node ) ; }
29534	public static ObjectName buildObjectName ( String domain , String type , String name ) throws MalformedObjectNameException , NullPointerException { return new ObjectName ( domain + _CHAR + TYPE_KEY + _CHAR+ type + _CHAR+ NAME_KEY + _CHAR+ name ) ; }
29539	public CarouselOptions maxScrollingDistance ( int maxScrollingDistance ) { mMaxScrollingDistance = maxScrollingDistance ; return this ; }
29540	static void checkParameterIsNotNull ( final String parameterName , final Object parameterValue ) { if ( parameterValue == _NULL ) { throw new IllegalArgumentException ( parameterName + _CHAR can not be _NULL . _CHAR ) ; } }
29543	public Expression lessThanEqual ( Value v1 , Value v2 ) { return new BinaryExpression ( v1 , v2 , ExpressionType . LESS_THAN_OR_EQUAL ) ; }
29544	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
29571	@ Override public void endExternalSubset ( Augmentations augs ) throws XNIException { fReadingExternalDTD = _BOOL ; }
29572	public void put ( String key , InputStream stream , String name , String contentType ) { if ( key != _NULL && stream != _NULL ) { streamParams . put ( key , new StreamWrapper ( stream , name , contentType ) ) ; } }
29595	public int end ( ) { return start + length ; }
29616	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoFly_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29646	private static String makeGeoString ( List < Coordinate > coordinates ) { return TextUtils . join ( _CHAR , _CHAR , coordinates ) ; }
29649	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
29680	public static TapTarget forBounds ( Rect bounds , CharSequence title ) { return forBounds ( bounds , title , _NULL ) ; }
29700	public static Label createLabel ( String name , String value ) { return new Label ( ) . withName ( name ) . withValue ( value ) ; }
29726	public static String toString ( URI uri ) throws IOException { return toString ( uri , Charset . defaultCharset ( ) ) ; }
29749	public void addServiceName ( String name ) { if ( name != _NULL ) { this . serviceNameSet . add ( name ) ; } }
29755	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
29757	@ Strippable ( side = Side . CLIENT ) public GUIHandler registerGUI ( String id , Function < GUIContext , GuiScreen > creator ) { guis . put ( id , creator ) ; return this ; }
29758	@ Override public < T extends ClientRequestResult > Collection < T > sendRequest ( final JsonRequest < T > jsonRequest , final String queueName , final int timeout ) throws JMSException { ClientRequestReportListener reportListener = _NULL ; return sendRequest ( jsonRequest , queueName , timeout , reportListener ) ; }
29767	public String aggregatedName ( ) { return _CHAR SideEffectAttribute _CHAR ; }
29786	@ Override public void installUpdates ( @ NotNull Collection < UpdatableExternalComponent > request ) { final List < RemotePackage > packages = Lists . newArrayList ( ) ; for ( UpdatableExternalComponent p : request ) { packages . add ( ( RemotePackage ) p . getKey ( ) ) ; } new UpdateInfoDialog ( _BOOL , packages ) . show ( ) ; }
29796	public Expression notEqual ( Value v1 , Value v2 ) { return new BinaryExpression ( v1 , v2 , ExpressionType . NOT_EQUAL ) ; }
29797	public TypeVariable typeVariable ( Type type ) { return typeVariable ( hierarchy . typeNode ( type ) ) ; }
29801	public MessagesMarkAsImportantQuery messageIds ( List < Integer > value ) { return unsafeParam ( _CHAR message_ids _CHAR , value ) ; }
29818	public static BigInteger pow ( final BigInteger k , int e ) throws MathIllegalArgumentException { if ( e < _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . EXPONENT , e ) ; } return k . pow ( e ) ; }
29843	public V put ( int key , V value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
29854	@ Nullable public Interface lookupInterface ( String fullName ) { return interfaceByName . get ( fullName ) ; }
29858	public String toString ( ) { return _CHAR Segmenter _CHAR ; }
29869	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String name2 : this . names ) { if ( caseSensitivity . checkEquals ( name , name2 ) ) { return _BOOL ; } } return _BOOL ; }
29884	public static < T > JoinObservable < T > from ( Observable < T > o ) { return new JoinObservable < T > ( RxJavaPlugins . onAssembly ( o ) ) ; }
29894	public FriendsDeleteAllRequestsQuery deleteAllRequests ( UserActor actor ) { return new FriendsDeleteAllRequestsQuery ( getClient ( ) , actor ) ; }
29904	protected void processPauseRequest ( ) { if ( mState == State . PLAYING ) { mState = State . PAUSED ; mPlayer . pause ( ) ; releaseResources ( _BOOL ) ; } }
29917	public void show ( boolean animate ) { show ( animate , fadeIn ) ; }
29943	public void configureIndicator ( int indicatorWidth , int indicatorHeight , int indicatorMargin ) { configureIndicator ( indicatorWidth , indicatorHeight , indicatorMargin , R . animator . scale_with_alpha , _NUM , R . drawable . indicator_white_radius , R . drawable . indicator_white_radius ) ; }
29955	public static SM_SYSTEM_MESSAGE STR_DECOMPOSE_ITEM_IT_CAN_NOT_BE_DECOMPOSED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29959	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
29962	@ Override public final void writeShort ( final short i ) { bos . writeByte ( ( byte ) ( i & _NUM ) ) ; bos . writeByte ( ( byte ) ( ( i >> > _NUM ) & _NUM ) ) ; }
29993	public void onTargetDismissed ( TapTargetView view , boolean userInitiated ) { }
29995	@ Deprecated public int createDeferredElement ( String elementName ) { return createDeferredElement ( _NULL , elementName ) ; }
30013	public static ZooKeeperClientBuilder newBuilder ( ) { return ZooKeeperClientBuilder . newBuilder ( ) . retryPolicy ( RetryPolicyUtils . DEFAULT_INFINITE_RETRY_POLICY ) . connectionTimeoutMs ( _NUM ) . sessionTimeoutMs ( _NUM ) . zkAclId ( _NULL ) . statsLogger ( NullStatsLogger . INSTANCE ) ; }
30017	public JSONObject put ( String key , long value ) throws JSONException { this . put ( key , new Long ( value ) ) ; return this ; }
30021	public int size ( ) { return _NUM ; }
30022	public Value all ( Value target ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
30023	@ Override public int hashCode ( ) { return ( Integer . valueOf ( ( int ) x ) . hashCode ( ) >> _NUM ) ^ ( Integer . valueOf ( ( int ) y ) . hashCode ( ) >> _NUM ) ^ Integer . valueOf ( ( int ) z ) . hashCode ( ) ; }
30039	public Object clone ( ) { JimpleLocal local = new JimpleLocal ( _NULL , type ) ; local . name = name ; return local ; }
30042	@ NotNull public ImageOverlayBuilder toDisk ( @ NotNull File file ) { try { ImageIO . write ( copy ( bufferedImage , BufferedImage . TYPE_INT_ARGB ) , _CHAR png _CHAR , file ) ; } catch ( IOException e ) { throw new CognitiveException ( _CHAR Could not write to disk _CHAR , e ) ; } return this ; }
30056	public double percentile ( double percentile ) { return get ( percentile * getEventCount ( ) / _NUM ) ; }
30073	public static void outString ( DataOutputStream dos , String s ) throws IOException { dos . writeShort ( ( short ) s . length ( ) ) ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { dos . writeChar ( s . charAt ( i ) ) ; } }
30097	public String process ( Item seg ) throws ProcessException { return segCodaCtype ( seg , _CHAR f _CHAR ) ; }
30106	@ Deprecated public Vector catalogFiles ( ) { return getCatalogFiles ( ) ; }
30118	public void onUpdate ( ) { }
30122	public static String toString ( URI uri , String encoding ) throws IOException { return toString ( uri , Charsets . toCharset ( encoding ) ) ; }
30125	public boolean isEntryMethod ( SootMethod method ) { return ! tgtToEdge . containsKey ( method ) ; }
30127	public void resetInternalTimer ( ) { this . frameStart =- _NUM ; this . nextFrameStart = _NUM ; this . totalRead = _NUM ; }
30140	private int calculateDepth ( TemplateDruidQuery candidate ) { int theDepth = _NUM ; TemplateDruidQuery iterator = candidate . nestedQuery ; while ( iterator != _NULL ) { theDepth ++ ; iterator = iterator . getInnerQuery ( ) ; } return theDepth ; }
30143	public Object clone ( ) { return new FakeJimpleLocal ( getName ( ) , getType ( ) , realLocal , info ) ; }
30144	public boolean contains ( T obj ) { throw new RuntimeException ( _CHAR RwlSegmentedStoredList : : contains not supported _CHAR ) ; }
30151	public static SM_SYSTEM_MESSAGE STR_WAIT_TO_QUIT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
30157	public void save ( @ NotNull ProgressIndicator progress ) { if ( isSourcesModified ( ) ) { RepositorySourceProvider userSourceProvider = getUserSourceProvider ( ) ; assert userSourceProvider != _NULL ; userSourceProvider . save ( new RepoProgressIndicatorAdapter ( progress ) ) ; reset ( ) ; } }
30158	public static Color hex2Rgb ( String colourStr ) { return new Color ( Integer . valueOf ( colourStr . substring ( _NUM , _NUM ) , _NUM ) , Integer . valueOf ( colourStr . substring ( _NUM , _NUM ) , _NUM ) , Integer . valueOf ( colourStr . substring ( _NUM , _NUM ) , _NUM ) ) ; }
30161	public boolean canAccessProgram ( Program program ) { for ( UserAuthorityGroup group : userAuthorityGroups ) { if ( group . getPrograms ( ) . contains ( program ) ) { return _BOOL ; } } return _BOOL ; }
30168	public synchronized static AccessToken buildAccessToken ( String accessToken ) { if ( accessToken == _NULL || _CHAR _CHAR . equals ( accessToken ) ) { return _NULL ; } try { JSONObject jsonObject = new JSONObject ( accessToken ) ; return new AccessToken ( jsonObject ) ; } catch ( JSONException e ) { Log . d ( TAG , e . getMessage ( ) ) ; return _NULL ; } }
30176	@ Override public String toString ( ) { return _CHAR at character _CHAR + this . myIndex + _CHAR of _CHAR + this . mySource ; }
30183	public Builder fillOpacity ( Number fillOpacity ) { this . fillOpacity = fillOpacity ; return this ; }
30221	public int lowerEndpoint ( ) { return lowerBound . endpoint ( ) ; }
30227	public void init ( ) throws ServletException { }
30229	public static final void shuffle ( double [ ] a , Random r ) { shuffle ( a , _NUM , a . length , r ) ; }
30230	public boolean isOption ( ) { if ( option == _NULL ) { return _BOOL ; } else { return option ; } }
30231	public static Point size ( URL url ) { if ( url == _NULL ) return _NULL ; try { return size ( url . openStream ( ) ) ; } catch ( Exception e ) { log . error ( e . getMessage ( ) , e ) ; } return _NULL ; }
30239	public java . lang . Boolean isEscaped ( ) { return escaped ; }
30269	private static boolean wasSuccessful ( Future < AndroidDebugBridge > future ) { if ( ! future . isDone ( ) ) { return _BOOL ; } try { AndroidDebugBridge bridge = future . get ( ) ; return bridge != _NULL && bridge . isConnected ( ) ; } catch ( Exception e ) { return _BOOL ; } }
30274	public String process ( Item item ) throws ProcessException { return getPhoneFeature ( item , _CHAR vrnd _CHAR ) ; }
30280	public void putValue ( @ NotNull String key , @ NotNull ObservableValue value ) { myValues . put ( key , value ) ; }
30314	private void removeEntry ( ) { filterModel . removeEntries ( filterTable . getSelectionModel ( ) . getMinSelectionIndex ( ) , filterTable . getSelectionModel ( ) . getMaxSelectionIndex ( ) ) ; extentModel . populate ( _NULL ) ; removeFTCButton . setEnabled ( _BOOL ) ; addExtentButton . setEnabled ( _BOOL ) ; removeExtentButton . setEnabled ( _BOOL ) ; }
30326	public MessagesGetChatUsersQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
30347	public static SM_SYSTEM_MESSAGE STR_GATHER_FAIL_1_BASIC ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
30350	public static char highSurrogate ( int c ) { return ( char ) ( ( ( c - _NUM ) >> _NUM ) + _NUM ) ; }
30368	public String post ( String url , RequestParams params ) throws HttpException { return post ( _NULL , url , params ) ; }
30371	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_HOSTILE_BLOCK ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
30393	private Complex cdiv ( final double xr , final double xi , final double yr , final double yi ) { return new Complex ( xr , xi ) . divide ( new Complex ( yr , yi ) ) ; }
30413	@ Override public boolean onTouchEvent ( MotionEvent event ) { if ( mIsEnabled ) { return mGestureDetector . onTouchEvent ( event ) ; } return _BOOL ; }
30414	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
30429	@ Override protected void sendRequest ( final SuccessCallback success , final HttpErrorCallback error , final FailureCallback failure , final BoundRequestBuilder requestBuilder , final String timerName , final AtomicLong outstanding ) { this . request = requestBuilder . build ( ) ; }
30430	public String process ( Item word ) throws ProcessException { return wordPunc ( word ) ; }
30449	public static Map < String , Object > sendOrderBackorderNotification ( DispatchContext ctx , Map < String , ? extends Object > context ) { return sendOrderNotificationScreen ( ctx , context , _CHAR PRDS_ODR_BACKORDER _CHAR ) ; }
30457	public RequestHandle head ( String url , RequestParams params , ResponseHandlerInterface responseHandler ) { return head ( _NULL , url , params , responseHandler ) ; }
30459	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
30469	@ Override public boolean equals ( Object obj ) { return getClass ( ) . equals ( obj . getClass ( ) ) ; }
30503	public static Style purple ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_PURPLE ) ; return style ; }
30508	public UsersSearchQuery university ( Integer value ) { return unsafeParam ( _CHAR university _CHAR , value ) ; }
30517	public DateTimeUnit toUtc ( ) { return DateTimeUnit . fromJodaDateTime ( toJodaDateTime ( ) . toDateTime ( DateTimeZone . UTC ) , _BOOL ) ; }
30526	public boolean hasFinally ( ) { return getFinallyOpt ( ) . getNumChild ( ) != _NUM ; }
30529	public Single < Void > writeTaskInDatabase ( final Task _task ) { final String key = this . getChildReference ( ) . push ( ) . getKey ( ) ; _task . setId ( key ) ; return observeSingleValue ( getChildReference ( ) . child ( key ) . setValue ( _task ) ) ; }
30542	public static void addFailure ( SoftAssertionError softAssertionError ) { getFailures ( ) . add ( softAssertionError ) ; }
30559	public boolean isDurableWriteEnabled ( ) { return getBoolean ( BKDL_IS_DURABLE_WRITE_ENABLED , defaultConfig . getBoolean ( BKDL_IS_DURABLE_WRITE_ENABLED , BKDL_IS_DURABLE_WRITE_ENABLED_DEFAULT ) ) ; }
30570	private static int clampY ( int y , ConstraintWidget base ) { if ( y < base . getY ( ) ) { y = base . getY ( ) ; } else if ( y > base . getBottom ( ) ) { y = base . getBottom ( ) ; } return y ; }
30595	public static boolean hasBuiltinBinding ( NewBindingKey key ) { return hasBuiltinBinding ( key . getTypeName ( ) ) ; }
30599	public String name ( ) { return theName ; }
30607	@ Override public Fraction reciprocal ( ) { return new Fraction ( denominator , numerator ) ; }
30618	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_WIN_CASTLE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
30642	public boolean isEnabled ( ) { return _BOOL ; }
30647	public int hours ( ) { return this . hours ; }
30655	public boolean hideRequested ( ) { return hideRequested ; }
30670	public void onBrowserEvent ( Widget widget , Event event ) { }
30671	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
30687	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
30706	public void removeSwipeListener ( SwipeListener listener ) { if ( mListeners == _NULL ) { return ; } mListeners . remove ( listener ) ; }
30708	@ Override public boolean isEnemyFrom ( Creature creature ) { if ( creature instanceof SiegeNpc && this . getSiegeRace ( ) != ( ( SiegeNpc ) creature ) . getSiegeRace ( ) ) { return _BOOL ; } else { return super . isEnemyFrom ( creature ) ; } }
30731	private boolean removeLeaseInRenew ( Entry e ) { int index = leaseInRenew . indexOf ( e ) ; if ( index < _NUM ) return _BOOL ; leaseInRenew . remove ( index ) ; return _BOOL ; }
30736	private static void copyColumn ( final RealMatrix m1 , int col1 , RealMatrix m2 , int col2 ) { for ( int i = _NUM ; i < m1 . getRowDimension ( ) ; i ++ ) { m2 . setEntry ( i , col2 , m1 . getEntry ( i , col1 ) ) ; } }
30744	protected GroupsIsMemberQueryWithUserIdsExtended groupId ( String value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
30752	public long remainingCapacity ( ) { return sequencer . remainingCapacity ( ) ; }
30755	public boolean isUnderFear ( ) { return isAbnormalSet ( AbnormalState . FEAR ) ; }
30761	@ Override public Dfp multiply ( final int x ) { if ( x >= _NUM && x < RADIX ) { return multiplyFast ( x ) ; } else { return multiply ( newInstance ( x ) ) ; } }
30767	public int months ( ) { return this . months ; }
30771	protected GroupsIsMemberQueryWithExtended groupId ( String value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
30775	public static boolean exists ( W q ) { try { return Helper . exists ( q , User . class ) ; } catch ( Exception e1 ) { log . error ( e1 . getMessage ( ) , e1 ) ; } return _BOOL ; }
30780	public static < T > List < T > toList ( T ... items ) { if ( items == _NULL ) return _NULL ; List < T > list = new ArrayList < T > ( items . length ) ; for ( T item : items ) list . add ( item ) ; return list ; }
30783	private boolean isLeafEdge ( Edge f , PhyloGraph graph ) { return graph . getDegree ( graph . getSource ( f ) ) == _NUM || graph . getDegree ( graph . getTarget ( f ) ) == _NUM ; }
30790	public static CommandResult execCommand ( List < String > commands , boolean isRoot , String path ) { return execCommand ( commands == _NULL ? _NULL : commands . toArray ( new String [ ] { } ) , isRoot , _BOOL , path ) ; }
30793	public static final SM_SYSTEM_MESSAGE STR_MSG_HOUSING_BID_SUCCESS ( int address ) { return new SM_SYSTEM_MESSAGE ( _NUM , address ) ; }
30794	public String toString ( ) { return _CHAR ConstrainableLookupLocator [ [ _CHAR + super . toString ( ) + _CHAR ] , [ _CHAR + constraints + _CHAR ] ] _CHAR ; }
30798	public void dropCache ( ) { FileUtil . delete ( getPreviewCacheDir ( ) ) ; }
30805	public boolean isEnabled ( ) { return enabled ; }
30825	public void type ( int ... keys ) throws InterruptedException { for ( int key : keys ) { type ( key ) ; } }
30829	public void clear ( ) { int n = mSize ; Object [ ] values = mValues ; for ( int i = _NUM ; i < n ; i ++ ) { values [ i ] = _NULL ; } mSize = _NUM ; mGarbage = _BOOL ; }
30845	public static CommandResult execCommand ( List < String > commands , boolean isRoot ) { return execCommand ( commands == _NULL ? _NULL : commands . toArray ( new String [ ] { } ) , isRoot , _BOOL ) ; }
30860	public String toString ( cp_info constant_pool [ ] ) { cp_info bsm = constant_pool [ bootstrap_method_index ] ; cp_info nat = constant_pool [ name_and_type_index ] ; return nat . toString ( constant_pool ) + _CHAR - _CHAR + bsm . toString ( constant_pool ) ; }
30863	public double expectedWeightedValue ( ) { return this . weightedMean ; }
30875	private void openThriftWriter ( String dictionaryFile ) throws IOException { dictionaryThriftWriter = new ThriftWriter ( dictionaryFile , _BOOL ) ; dictionaryThriftWriter . open ( ) ; }
30877	public String toJson ( Message message ) { if ( message == _NULL ) throw new IllegalArgumentException ( _CHAR Message can not be _NULL _CHAR ) ; return gson . toJson ( message ) ; }
30898	public void onMenuDismissed ( ) { mReloadMenuItem = _NULL ; }
30978	public Boolean isLogBeforeScripts ( ) { return logBeforeScripts ; }
31011	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
31023	private final float mapF0 ( float val , float mean , float stddev ) { return ( ( ( ( val - modelMean ) / modelStddev ) * stddev ) + mean ) ; }
31030	public ResourceId parseResourceId ( int resourceId ) { return new ResourceId ( ( resourceId & _NUM ) >> _NUM , ( resourceId & _NUM ) >> _NUM , resourceId & _NUM ) ; }
31049	public void inc ( Collection < KeyType > container , long delta ) { for ( KeyType key : container ) { inc ( key , delta ) ; } }
31055	public void selectToken ( ClipboardToken token ) { selectedToken = token ; updateClipboardDescription ( ) ; }
31061	public static int myUserId ( ) { return getUserId ( VClientImpl . getClient ( ) . getVUid ( ) ) ; }
31062	public FieldVector3D < T > subtract ( final double factor , final FieldVector3D < T > v ) { return new FieldVector3D < T > ( _NUM . _NUM , this , - factor , v ) ; }
31065	public HumanTime d ( ) { return d ( _NUM ) ; }
31079	public static void main ( String [ ] args ) { Distribution dDist = new Distribution ( ) ; dDist . setValue ( _NUM , _NUM . _NUM ) ; dDist . setValue ( _NUM , _NUM . _NUM ) ; System . out . println ( _CHAR Entropy : _CHAR + entropy ( dDist ) ) ; }
31081	public MarketRemoveFromAlbumQuery removeFromAlbum ( UserActor actor , int ownerId , int itemId , int ... albumIds ) { return new MarketRemoveFromAlbumQuery ( getClient ( ) , actor , ownerId , itemId , albumIds ) ; }
31111	public float computeAlignmentBitScore ( int rawScore ) { return ( float ) ( ( lambda * rawScore - lnK ) / LN_2 ) ; }
31127	private boolean sendNotification ( OMAInfo omaInfo , DownloadInfo downloadInfo , String statusMessage ) { if ( omaInfo == _NULL ) return _BOOL ; if ( omaInfo . isValueEmpty ( OMA_INSTALL_NOTIFY_URI ) ) return _BOOL ; PostStatusTask task = new PostStatusTask ( omaInfo , downloadInfo , statusMessage ) ; task . execute ( ) ; return _BOOL ; }
31129	public MessagesMarkAsReadQuery messageIds ( List < Integer > value ) { return unsafeParam ( _CHAR message_ids _CHAR , value ) ; }
31135	public String name ( ) { return theName ; }
31136	@ Override public void populateField ( String value ) { StyleBuilder styleBuilder = new StyleBuilder ( ) ; Font font = styleBuilder . createFont ( defaultValue , DEFAULT_FONT_SIZE ) ; populateField ( font ) ; }
31157	private Response buildJSONResponse ( Object o ) throws JsonProcessingException { return newFixedLengthResponse ( MAPPER . writeValueAsString ( o ) ) ; }
31215	@ Override public void accept ( TestValueVisitor visitor , FieldIdEnum fieldId ) { visitor . setTestValue ( fieldId , this . value ) ; }
31233	public static Style pink ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_PINK ) ; return style ; }
31249	private Transaction createTransaction ( ) throws LeaseDeniedException , RemoteException , TransactionException { ITransactionManagerProvider transactionManagerProvider = getTransactionManagerProvider ( ) ; return ( TransactionFactory . create ( transactionManagerProvider . getTransactionManager ( ) , _config . getTransactionTimeout ( ) ) ) . transaction ; }
31260	public synchronized void createTable ( Schema s , String tableName ) throws DatabaseException { if ( this . tableLookup . containsKey ( tableName ) ) { throw new DatabaseException ( _CHAR Table name already exists _CHAR ) ; } this . tableLookup . put ( tableName , new Table ( s , tableName , this . fileDir ) ) ; }
31266	private static QueryTask buildAllRegistriesQuery ( ) { return buildRegistryQuery ( _NULL ) ; }
31277	public void flushNew ( ) { oldSet . addAll ( newSet , _NULL ) ; newSet = G . v ( ) . newSetFactory . newSet ( type , pag ) ; }
31305	public boolean write ( byte [ ] audioData ) { return write ( audioData , _NUM , audioData . length ) ; }
31310	public boolean hasBlock ( ) { return getBlockOpt ( ) . getNumChild ( ) != _NUM ; }
31320	@ Override public void connect ( ) { }
31337	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bind_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
31343	public long remove ( short key ) { long prev = ( long ) _NUM ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
31344	@ Override public String toString ( ) { return Vector2DFormat . getInstance ( ) . format ( this ) ; }
31361	protected void destroyOverlayPanelContent ( ) { if ( mContent != _NULL ) { mContent . destroy ( ) ; mContent = _NULL ; } }
31363	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
31364	public void pageLoadingStarted ( ) { mLoadTracker . pageLoadingStarted ( ) ; }
31373	public static String toString ( URI uri , Charset encoding ) throws IOException { return toString ( uri . toURL ( ) , Charsets . toCharset ( encoding ) ) ; }
31450	public boolean add ( E o ) { return innerChain . add ( o ) ; }
31473	public String tableName ( ) { return tblName ; }
31478	public String tableName ( ) { return tblName ; }
31484	protected FriendsDeleteListQuery listId ( int value ) { return unsafeParam ( _CHAR list_id _CHAR , value ) ; }
31509	public void removeAt ( int index ) { System . arraycopy ( mKeys , index + _NUM , mKeys , index , mSize - ( index + _NUM ) ) ; System . arraycopy ( mValues , index + _NUM , mValues , index , mSize - ( index + _NUM ) ) ; -- mSize ; }
31517	public boolean isDeletedByOwnTxn ( ) { return m_DeletedByOwnTxn ; }
31528	public static Field createAsExtension ( MessageType parent , Extension extension , String path , String name ) { Field field = new Field ( parent , extension . getProto ( ) , path , _NULL , name ) ; field . getFile ( ) . addExtension ( extension , field ) ; return field ; }
31549	public Stream < T > asStream ( ) { final Spliterator < T > spliter = Spliterators . spliteratorUnknownSize ( asIterator ( ) , NONNULL | IMMUTABLE | ORDERED ) ; return StreamSupport . stream ( spliter , _BOOL ) ; }
31557	@ NotNull public static ResizePolicy vertical ( ) { return ourVertical ; }
31569	public static double pow ( double d , int e ) { return pow ( d , ( long ) e ) ; }
31582	@ Override public void unindent ( ) { _nextIndent -= _format . getIndent ( ) ; if ( _nextIndent < _NUM ) _nextIndent = _NUM ; if ( ( _line . length ( ) + _spaces + _text . length ( ) ) == _NUM ) _thisIndent = _nextIndent ; }
31586	@ Override public void populateField ( String value ) { StyleBuilder styleBuilder = new StyleBuilder ( ) ; Font font = styleBuilder . createFont ( defaultValue , DEFAULT_FONT_SIZE ) ; populateField ( font ) ; }
31616	public GroupsInviteQuery invite ( UserActor actor , int groupId , int userId ) { return new GroupsInviteQuery ( getClient ( ) , actor , groupId , userId ) ; }
31651	public static void main ( String [ ] args ) { Distribution dDist = new Distribution ( ) ; dDist . setValue ( _NUM , _NUM . _NUM ) ; dDist . setValue ( _NUM , _NUM . _NUM ) ; System . out . println ( _CHAR Entropy : _CHAR + entropy ( dDist ) ) ; }
31654	public static String toString ( URL url ) throws IOException { return toString ( url , Charset . defaultCharset ( ) ) ; }
31658	private String next ( ) { String current = matcher . group ( EXPR_TOKEN_GROUP ) ; matched = matcher . find ( ) ; return current ; }
31660	public GroupsGetMembersQueryWithFilter groupId ( String value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
31674	public static Object objectFromByteBuffer ( byte [ ] buffer ) throws Exception { if ( buffer == _NULL ) return _NULL ; ByteArrayInputStream inStream = new ByteArrayInputStream ( buffer ) ; ObjectInputStream in = new ObjectInputStreamExt ( inStream ) ; Object retval = in . readObject ( ) ; in . close ( ) ; return retval ; }
31703	@ Override public Object nextElement ( ) { if ( index < array . length ) { return array [ index ++ ] ; } throw new NoSuchElementException ( ) ; }
31719	public static SM_SYSTEM_MESSAGE STR_DUEL_YOU_WIN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31722	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
31731	public static SM_SYSTEM_MESSAGE STR_MSG_DICE_GIVEUP_OTHER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31742	public void disposeAll ( ) { for ( Iterator it = cache . values ( ) . iterator ( ) ; it . hasNext ( ) ; ) { Image image = ( Image ) it . next ( ) ; image . dispose ( ) ; } cache . clear ( ) ; }
31765	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
31774	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
31776	private boolean isFieldPackagePrivate ( Element attribute ) { Set < Modifier > modifiers = attribute . getModifiers ( ) ; return ! modifiers . contains ( PUBLIC ) && ! modifiers . contains ( PROTECTED ) && ! modifiers . contains ( PRIVATE ) ; }
31804	public void clear ( ) { for ( int i = _NUM ; i < this . counters . length ; i ++ ) { this . cachedCounters [ i ] = this . counters [ i ] ; this . counters [ i ] = _NUM ; } this . cachedContacts . clear ( ) ; this . cachedContacts . addAll ( this . contacts ) ; this . contacts . clear ( ) ; }
31810	public AemFieldset fold ( ) { if ( ! isFolded ( ) ) { foldButton . click ( ) ; } bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , Timeouts . MINIMAL ) ; return this ; }
31814	public void dismissImmediately ( ) { super . dismiss ( ) ; if ( mAnimation != _NULL ) mAnimation . cancel ( ) ; if ( mHandler != _NULL ) mHandler . removeCallbacks ( mDismissAction ) ; }
31818	public void saveEntity ( final ProxyEntity proxyEntity ) { final Session session = this . sessionFactory . openSession ( ) ; final Transaction transaction = session . beginTransaction ( ) ; session . saveOrUpdate ( proxyEntity ) ; transaction . commit ( ) ; session . close ( ) ; }
31829	public NewsfeedGetSuggestedSourcesQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
31833	public static double readDouble ( byte [ ] bytes , int start ) { return Double . longBitsToDouble ( readLong ( bytes , start ) ) ; }
31846	public static void log ( Object message ) { Gdx . app . log ( TAG , String . valueOf ( message ) ) ; }
31850	public FieldVector3D < T > subtract ( final T factor , final FieldVector3D < T > v ) { return new FieldVector3D < T > ( x . getField ( ) . getOne ( ) , this , factor . negate ( ) , v ) ; }
31869	protected List < ResultSetMapper > buildResultSetMapperList ( DataApiRequest apiRequest ) { return apiRequest . getLogicalMetrics ( ) . stream ( ) . map ( _NULL ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; }
31891	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
31895	public boolean hasLastUpdated ( ) { return lastUpdated != _NULL ; }
31898	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
31915	public static SM_SYSTEM_MESSAGE STR_CMD_WHISHPER_INPUT ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
31916	public boolean contains ( ChangeModifiers modifiers ) { return super . contains ( modifiers ) ; }
31927	void finishStartElement ( ) { fInStartElement = _BOOL ; fElementAugs = _NULL ; fAttributes = _NULL ; }
31934	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
31952	public void clear ( ) { IntIterator rows = rows ( _BOOL ) ; while ( rows . hasNext ( ) ) { removeRow ( rows . nextInt ( ) ) ; } }
31980	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
31987	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
31989	private static String dayToString ( int day , int dayOfWeekLength ) { return DateUtils . getDayOfWeekString ( dayToUtilDay ( day ) , dayOfWeekLength ) ; }
31997	public void displaySearchContext ( String selection , String end ) { cancelSearchTermResolutionAnimation ( ) ; getSearchBarControl ( ) . setSearchContext ( selection , end ) ; resetSearchBarContextOpacity ( ) ; }
32003	public boolean isTargetSpecificLayout ( ) { return myEditedConfig . getVersionQualifier ( ) != _NULL ; }
32011	private FlatServoRail expand ( ) { if ( isDynamic ( ) ) return this ; FlatServoRail ret = new FlatServoRail ( ) ; ret . component = this . component ; ret . color = this . color ; return ret ; }
32013	public boolean isVisible ( ) { return ! isDismissed && visible ; }
32061	public static SM_SYSTEM_MESSAGE STR_MSG_POLISH_SUCCEED ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( nameId ) ) ; }
32075	public Boolean isRetained ( ) { return retained ; }
32079	public void clear ( ) { currentAverage =- _NUM ; usedFields = _NUM ; }
32083	public long readLong ( ) throws IOException { return dis . readLong ( ) ; }
32090	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
32121	public void addTypeAccess ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeAccessListNoTransform ( ) : getTypeAccessList ( ) ; list . addChild ( node ) ; }
32126	public WallRestoreQuery postId ( Integer value ) { return unsafeParam ( _CHAR post_id _CHAR , value ) ; }
32147	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
32159	@ Override public String toString ( ) { return length > _NUM ? new String ( ch , offset , length ) : _CHAR _CHAR ; }
32160	public String toString ( ) { return _CHAR QueueBrowser for the session : '' + m_session . toString ( ) ; }
32166	public static void distributeKinah ( Player player , long kinah ) { PlayerGroup group = player . getPlayerGroup2 ( ) ; if ( group != _NULL ) { group . onEvent ( new TeamKinahDistributionEvent < PlayerGroup > ( group , player , kinah ) ) ; } }
32180	public static void validateUTF8 ( byte [ ] utf8 ) throws MalformedInputException { validateUTF8 ( utf8 , _NUM , utf8 . length ) ; }
32193	public static SM_SYSTEM_MESSAGE STR_DUEL_PARTNER_INVALID ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32195	public TapTarget id ( int id ) { this . id = id ; return this ; }
32196	public void acceptVisit ( ExpressionVisitor visitor ) { visitor . enter ( this ) ; _expressions . filter . acceptVisit ( visitor ) ; visitor . exit ( this ) ; }
32203	public boolean hasMoved ( ) { return this . moved ; }
32208	public static SM_SYSTEM_MESSAGE STR_MSG_SELL_ITEM_MULTI ( String value1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0s ) ; }
32226	default boolean hasDataFromHttp ( ) { return _BOOL ; }
32256	public FieldVector3D < T > add ( final double factor , final FieldVector3D < T > v ) { return new FieldVector3D < T > ( _NUM . _NUM , this , factor , v ) ; }
32259	private Collection < Map < String , Object >> batchParse ( Collection < Json > batch ) { return batch . stream ( ) . map ( _NULL ) . collect ( toList ( ) ) ; }
32268	public void increaseDpi ( ) { if ( this . currentDpiPos < ( this . dpiSizes . length - _NUM ) ) { ++ this . currentDpiPos ; } }
32269	public static Pair < Schema , JavaRDD < List < Writable >> > toRecords ( DataFrame dataFrame ) { Schema schema = fromStructType ( dataFrame . schema ( ) ) ; return new Pair < > ( schema , dataFrame . javaRDD ( ) . map ( new ToRecord ( schema ) ) ) ; }
32282	public static String trimEnd ( String value , int length ) { if ( value == _NULL || length > value . length ( ) ) { return EMPTY ; } return value . substring ( _NUM , value . length ( ) - length ) ; }
32295	public boolean hasSuperClassAccess ( ) { return getSuperClassAccessOpt ( ) . getNumChild ( ) != _NUM ; }
32305	public String process ( Item seg ) throws ProcessException { return segCodaCtype ( seg , _CHAR n _CHAR ) ; }
32326	public boolean isPacked ( ) { return proto . getOptions ( ) . getPacked ( ) ; }
32348	public Iterator visibleItems ( ) { return items ( VisiblePredicate . TRUE ) ; }
32351	@ Override public void write ( char [ ] chr , int st , int end ) throws IOException { out . write ( chr , st , end ) ; }
32359	public String toString ( cp_info constant_pool [ ] ) { return convert ( ) ; }
32365	public okhttp3 . Response raw ( ) { return rawResponse ; }
32366	public void removeArguments ( String label ) { List < PBArgument > remove = new ArrayList < > ( ) ; for ( PBArgument arg : l_arguments ) { if ( arg . isLabel ( label ) ) remove . add ( arg ) ; } l_arguments . removeAll ( remove ) ; }
32370	public static synchronized boolean isAntiAliasingEnabled ( ) { return antiAliasingEnabled ; }
32393	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_END_ME_TO_B ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
32427	public void toggle ( Animation animIn , Animation animOut ) { toggle ( _BOOL , animIn , animOut ) ; }
32434	private String pitchLabels2RelativeValues ( String pitchAttribute ) { if ( pitchAttribute . equals ( _CHAR x - low _CHAR ) ) { return _CHAR - _NUM % _CHAR ; } else if ( pitchAttribute . equals ( _CHAR low _CHAR ) ) { return _CHAR - _NUM % _CHAR ; } else if ( pitchAttribute . equals ( _CHAR medium _CHAR ) ) { return _CHAR + _NUM % _CHAR ; } else if ( pitchAttribute . equals ( _CHAR high _CHAR ) ) { return _CHAR + _NUM % _CHAR ; } else if ( pitchAttribute . equals ( _CHAR x - high _CHAR ) ) { return _CHAR + _NUM % _CHAR ; } return _CHAR + _NUM % _CHAR ; }
32462	public static CommandResult execCommand ( String command , boolean isRoot , String path ) { return execCommand ( new String [ ] { command } , isRoot , _BOOL , path ) ; }
32467	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MEMBER_RANK_DONE_2_GUILD_OFFICER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32470	@ Override public void endExternalSubset ( Augmentations augmentations ) throws XNIException { }
32490	public String expandString ( String original ) { return FlexibleStringExpander . expandString ( original , getBindings ( ) ) ; }
32493	public String viewName ( ) { return viewName ; }
32507	@ Override public void write ( int b ) throws IOException { write ( new byte [ ] { ( byte ) b } , _NUM , _NUM ) ; }
32508	protected void prepareDataSet ( ) { dataSet1 = Arrays . asList ( new String [ ] { _CHAR a _CHAR , _CHAR b _CHAR , _CHAR c _CHAR } ) ; dataSet2 = Arrays . asList ( new String [ ] { _CHAR d _CHAR , _CHAR e _CHAR , _CHAR f _CHAR } ) ; dataSet3 = Arrays . asList ( new String [ ] { _CHAR b _CHAR , _CHAR c _CHAR , _CHAR a _CHAR , _CHAR d _CHAR } ) ; }
32513	public static float calculateAspectRatio ( Rect rect ) { final float aspectRatio = ( float ) rect . width ( ) / ( float ) rect . height ( ) ; return aspectRatio ; }
32522	public CatchOptions useRazzberry ( boolean useRazzBerry ) { this . useRazzBerry = useRazzBerry ; return this ; }
32523	public final void fallback ( final IFallback fallbackObj ) throws DataFallbackException { try { if ( isFallbackFileEmpty ( ) ) fFileController . closeFallbackInputStream ( ) ; fFileController . openFallbackOutputStream ( ) ; fFileController . writeLine ( fallbackObj ) ; fFileController . setNumberOfLines ( fFileController . getNumberOfLines ( ) + _NUM ) ; } catch ( DataFallbackException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } }
32526	public boolean adjustValue ( K key , short amount ) { int index = index ( key ) ; if ( index < _NUM ) { return _BOOL ; } else { _values [ index ] += amount ; return _BOOL ; } }
32535	public boolean parseBoolean ( String text ) throws DataParseException { if ( TRUE . equalsIgnoreCase ( text ) ) { return _BOOL ; } else if ( FALSE . equalsIgnoreCase ( text ) ) { return _BOOL ; } else { throw new DataParseException ( _CHAR Input does not represent a boolean value : _CHAR + text ) ; } }
32538	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
32548	public static final double max ( double [ ] a ) { double max = Double . NEGATIVE_INFINITY ; for ( int i = _NUM ; i < a . length ; ++ i ) { if ( a [ i ] > max ) max = a [ i ] ; } return max ; }
32552	public static MqttMessage copyMqttMessage ( final MqttMessage message ) { final MqttMessage copy = new MqttMessage ( ) ; copy . setPayload ( message . getPayload ( ) ) ; copy . setQos ( message . getQos ( ) ) ; copy . setRetained ( message . isRetained ( ) ) ; return copy ; }
32554	public void stop ( String name ) { getTimer ( name ) . stop ( verbose ) ; }
32559	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
32578	public void deactivate ( ) { if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionSeries ( ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
32580	public void uploadUpdate ( Context context , Account account , OCFile existingFile , Integer behaviour , Boolean forceOverwrite ) { uploadUpdate ( context , account , new OCFile [ ] { existingFile } , behaviour , forceOverwrite ) ; }
32581	public Boolean isClientKeyPEM ( ) { return clientKeyPEM ; }
32586	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_PET_CANT_EAT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32590	public static SM_SYSTEM_MESSAGE STR_MSG_LIMIT_SALE_TEST_DESC02 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32600	public static boolean isTinkerEnableWithSharedPreferences ( Context context ) { SharedPreferences sp = context . getSharedPreferences ( ShareConstants . TINKER_SHARE_PREFERENCE_CONFIG , Context . MODE_MULTI_PROCESS ) ; return sp . getBoolean ( ShareConstants . TINKER_ENABLE_CONFIG , _BOOL ) ; }
32628	public static void o ( int ia [ ] ) { o ( ia , Parameters . OutputFieldWidth ) ; }
32647	public VideoReorderVideosQuery reorderVideos ( UserActor actor , int ownerId , int videoId ) { return new VideoReorderVideosQuery ( getClient ( ) , actor , ownerId , videoId ) ; }
32650	public static float sqr ( float fValue ) { return fValue * fValue ; }
32662	public void addImportDecl ( ImportDecl node ) { List < ImportDecl > list = ( parent == _NULL || state == _NULL ) ? getImportDeclListNoTransform ( ) : getImportDeclList ( ) ; list . addChild ( node ) ; }
32679	public static boolean isExternalStorageWritable ( ) { return Environment . MEDIA_MOUNTED . equals ( Environment . getExternalStorageState ( ) ) ; }
32680	void bind ( String name , Object value ) { Preconditions . checkNotNull ( value ) ; locals . peek ( ) . put ( name , value ) ; }
32691	public void addLine ( final String line ) { if ( textArea != _NULL ) { textArea . append ( line ) ; trimExcessLines ( ) ; textArea . setCaretPosition ( textArea . getDocument ( ) . getLength ( ) ) ; } }
32694	private void invalidSurrogate ( int uuuuu ) throws MalformedByteSequenceException { throw new MalformedByteSequenceException ( fFormatter , fLocale , XMLMessageFormatter . XML_DOMAIN , _CHAR InvalidHighSurrogate _CHAR , new Object [ ] { Integer . toHexString ( uuuuu ) } ) ; }
32709	public Matrix3f invert ( ) { return invert ( _NULL ) ; }
32729	@ Override public void accept ( TestValueVisitor visitor , FieldIdEnum fieldId ) { Expression expression = ff . property ( this . expression ) ; visitor . setTestValue ( fieldId , expression ) ; }
32736	public static boolean hasFCMToken ( Context context ) { SharedPreferences pref = PreferenceManager . getDefaultSharedPreferences ( context . getApplicationContext ( ) ) ; return pref . getBoolean ( SENT_TOKEN_TO_SERVER , _BOOL ) ; }
32738	private Stream < String > generateDimensionColumnHeaders ( Map . Entry < Dimension , LinkedHashSet < DimensionField >> entry ) { if ( entry . getValue ( ) . isEmpty ( ) ) { return Stream . of ( entry . getKey ( ) . getApiName ( ) ) ; } else { return entry . getValue ( ) . stream ( ) . map ( _NULL ) ; } }
32748	public Boolean isRepeat ( ) { return repeat ; }
32752	public void showOnAnchor ( @ NonNull View anchor , @ VerticalPosition int vertPos , @ HorizontalPosition int horizPos ) { showOnAnchor ( anchor , vertPos , horizPos , _NUM , _NUM ) ; }
32753	public final boolean isFinished ( ) { return mScrollerX . mFinished && mScrollerY . mFinished ; }
32758	private String generateReportTableHtml ( ReportTable reportTable , User user ) { StringWriter stringWriter = new StringWriter ( ) ; GridUtils . toHtmlInlineCss ( reportTableService . getReportTableGridByUser ( reportTable . getUid ( ) , new Date ( ) , user . getOrganisationUnit ( ) . getUid ( ) , user ) , stringWriter ) ; return stringWriter . toString ( ) . replaceAll ( _CHAR \\ R _CHAR , _CHAR _CHAR ) ; }
32761	public static boolean isNimbusLookAndFeel ( ) { return UIUtils . isNimbusLookAndFeel ( ) ; }
32770	public Collection < Var > migrate ( ) { Collection < Var > collection = new HashSet < > ( ) ; for ( Collection < Var > vars : this ) { collection . addAll ( vars ) ; } return collection ; }
32787	private void explain ( String systemId ) { if ( ! suppressExplanation ) { System . out . println ( _CHAR XMLReader probably encountered bad URI in _CHAR + systemId ) ; System . out . println ( _CHAR For example , replace _CHAR with _CHAR . _CHAR ) ; } suppressExplanation = _BOOL ; }
32796	public short remove ( K key ) { short prev = ( short ) _NUM ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
32797	public boolean add ( E item ) { addLast ( item ) ; return _BOOL ; }
32801	public static Map < String , Object > findOrdersFull ( DispatchContext dctx , Map < String , ? extends Object > context ) { return findOrders ( dctx , context , _BOOL ) ; }
32812	public String toString ( ) { return _CHAR ConnectionRelativeTime [ _CHAR + time + _CHAR ] _CHAR ; }
32822	public GroupsGetInvitedUsersQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
32839	public final boolean isValid ( RetryStrategy retryStrategy ) { return validate ( retryStrategy ) == _NULL ; }
32841	public static void closePrivateStore ( Player activePlayer ) { activePlayer . setStore ( _NULL ) ; activePlayer . unsetState ( CreatureState . PRIVATE_SHOP ) ; PacketSendUtility . broadcastPacket ( activePlayer , new SM_EMOTION ( activePlayer , EmotionType . CLOSE_PRIVATESHOP , _NUM , _NUM ) , _BOOL ) ; }
32845	public java . lang . Boolean isEscaped ( ) { return escaped ; }
32849	void finishEndElement ( ) { fInEndElement = _BOOL ; fElementAugs = _NULL ; }
32895	public static int mulAndCheck ( int x , int y ) throws MathRuntimeException { long m = ( ( long ) x ) * ( ( long ) y ) ; if ( m < Integer . MIN_VALUE || m > Integer . MAX_VALUE ) { throw new MathRuntimeException ( LocalizedCoreFormats . ARITHMETIC_EXCEPTION ) ; } return ( int ) m ; }
32903	private void populateDefaults ( ) { MqttConfigurationUtils . populateMessageLogDefaults ( configuration . getConnection ( ) . getMessageLog ( ) ) ; populateDaemonDefaults ( configuration . getConnection ( ) . getBackgroundScript ( ) ) ; generateClientIdIfMissing ( configuration . getConnection ( ) ) ; }
32920	private void finish ( ) { mmLastY = _NUM ; mRunning = _BOOL ; removeCallbacks ( this ) ; if ( ! mAbort ) { autoScrollFinished ( ) ; } }
32931	public void onPut ( ) { if ( this . isAjax ( ) ) { JSON jo = new JSON ( ) ; jo . put ( X . STATE , HttpServletResponse . SC_FORBIDDEN ) ; response ( jo ) ; } else { this . print ( _CHAR not support _CHAR ) ; } }
32939	private void explain ( String systemId ) { if ( ! suppressExplanation ) { System . out . println ( _CHAR Parser probably encountered bad URI in _CHAR + systemId ) ; System . out . println ( _CHAR For example , replace _CHAR with _CHAR . _CHAR ) ; } }
32947	public static SM_SYSTEM_MESSAGE STR_MSG_NOT_ENOUGH_TRADE_MONEY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32954	@ Override protected void onStopLoading ( ) { cancelLoad ( ) ; }
32955	public boolean isAvailable ( ) { return available ; }
32981	public void show ( boolean animate ) { show ( animate , fadeIn ) ; }
32993	public int createDeferredComment ( String data ) { int nodeIndex = createNode ( Node . COMMENT_NODE ) ; int chunk = nodeIndex >> CHUNK_SHIFT ; int index = nodeIndex & CHUNK_MASK ; setChunkValue ( fNodeValue , data , chunk , index ) ; return nodeIndex ; }
33001	private static int toEven ( float value ) { int i = Math . round ( value ) ; return ( i % _NUM == _NUM ) ? i - _NUM : i ; }
33006	private void fillDeclaredPrefixes ( EndElement event ) { fillDeclaredPrefixes ( event . getNamespaces ( ) ) ; }
33009	public void clearPaymentMethodsById ( List < String > paymentMethodIdsToRemove ) { if ( UtilValidate . isEmpty ( paymentMethodIdsToRemove ) ) return ; for ( Iterator < CartPaymentInfo > iter = paymentInfo . iterator ( ) ; iter . hasNext ( ) ; ) { CartPaymentInfo info = iter . next ( ) ; if ( paymentMethodIdsToRemove . contains ( info . paymentMethodId ) ) { iter . remove ( ) ; } } }
33016	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodelistindexnotzero . class , args ) ; }
33022	public void removeLanguage ( final int index ) { this . languages . remove ( index ) ; }
33044	public Builder withFlicker ( ) { flicker = _BOOL ; return this ; }
33045	public boolean inStylusButtonPressed ( ) { return mIsButtonPressed ; }
33072	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ source = _CHAR + source + _CHAR ] _CHAR ; }
33075	public static String removeNewLineChars ( final String string ) { if ( StringUtils . isBlank ( string ) ) { return string ; } String newLineRegularExpression = _CHAR ( \\ n ) _CHAR ; return string . replaceAll ( newLineRegularExpression , _CHAR _CHAR ) ; }
33078	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationfeaturexmlversion2 . class , args ) ; }
33084	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttribute03 . class , args ) ; }
33116	public boolean bool ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return ( m_left . bool ( xctxt ) || m_right . bool ( xctxt ) ) ; }
33135	private void initializeDsApplIfOpsTable ( ) { Set connectionHandlers = this . monitor . getConnectionHandlers ( ) ; for ( Iterator iter = connectionHandlers . iterator ( ) ; iter . hasNext ( ) ; ) { ObjectName name = ( ObjectName ) iter . next ( ) ; addRowInDsApplIfOpsTable ( name ) ; } }
33154	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( prefix10 . class , args ) ; }
33169	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementchangeattributevalue . class , args ) ; }
33179	@ RequestMapping ( value = _CHAR / activate _CHAR , method = RequestMethod . GET , produces = MediaType . APPLICATION_JSON_VALUE ) @ Timed public ResponseEntity < String > activateAccount ( @ RequestParam ( value = _CHAR key _CHAR ) String key ) { return userService . activateRegistration ( key ) . map ( _NULL ) . orElse ( new ResponseEntity < > ( HttpStatus . INTERNAL_SERVER_ERROR ) ) ; }
33184	boolean verifyDeveloperPayload ( Purchase p ) { String payload = p . getDeveloperPayload ( ) ; return _BOOL ; }
33186	public BuilderImages < T > crop ( ) { this . config . setCrop ( ) ; return this ; }
33196	public boolean isStreaming ( ) { return _BOOL ; }
33197	private FHTreeStateNode createNodeForValue ( Object value , int childIndex ) { return new FHTreeStateNode ( value , childIndex , - _NUM ) ; }
33198	public void retrieveStore ( String sellerId , Handler < AsyncResult < Store >> resultHandler ) { delegate . retrieveStore ( sellerId , resultHandler ) ; }
33206	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrinsertdataoffsetnegative . class , args ) ; }
33215	OperationMonitor createOperationRate ( ) { return new OperationMonitor ( ) ; }
33217	public EMail createEMail ( String value ) { EmailField emailImpl = new EmailField ( ) ; try { emailImpl . setValue ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return emailImpl ; }
33231	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodedocumentfragmentnodename . class , args ) ; }
33245	@ Override public void doTag ( ) throws JspException , IOException { }
33258	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateelementdefaultattr . class , args ) ; }
33267	void dispatchOnLauncherTransitionEnd ( View v , boolean animated , boolean toWorkspace ) { if ( v instanceof LauncherTransitionable ) { ( ( LauncherTransitionable ) v ) . onLauncherTransitionEnd ( mLauncher , animated , toWorkspace ) ; } dispatchOnLauncherTransitionStep ( v , _NUM ) ; }
33276	public PdfCollectionItem addItem ( String key , String value ) { PdfCollectionField field = schema . getField ( key ) ; getPdfObject ( ) . put ( new PdfName ( key ) , field . getValue ( value ) ) ; return this ; }
33285	private EntryIDSet evaluateFilter ( SearchFilter filter ) { EntryIDSet candidates = evaluateFilter0 ( filter ) ; if ( buffer != _NULL ) { candidates . toString ( buffer ) ; } return candidates ; }
33299	public RESTEndpointBuilder apiVersion ( String apiVersion ) { headers . put ( _CHAR Accept - API - Version _CHAR , _CHAR protocol = _NUM . _NUM , resource = _CHAR + apiVersion ) ; return this ; }
33302	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrdeletedataoffsetgreater . class , args ) ; }
33318	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodecdatasectionnodetype . class , args ) ; }
33323	public void dynamicServletCreated ( Servlet servlet ) { createdServlets . add ( servlet ) ; }
33327	public static void removeAll ( ) { getPersistence ( ) . removeAll ( ) ; }
33330	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodevalue05 . class , args ) ; }
33336	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementretrieveattrvalue . class , args ) ; }
33344	private void resetStatusValues ( ) { dupToken = _BOOL ; oldToken = _BOOL ; unseqToken = _BOOL ; gapToken = _BOOL ; minorStatus = _NUM ; minorString = _NULL ; }
33358	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrentityreplacement . class , args ) ; }
33363	Process openProcess ( String [ ] cmdAttribs ) throws IOException { return Runtime . getRuntime ( ) . exec ( cmdAttribs ) ; }
33377	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrappendchild4 . class , args ) ; }
33390	public boolean encryptNameID ( ) { return encryptNameID ; }
33391	public void clear ( ) { dict . clear ( ) ; }
33395	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
33399	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementremoveattributenode . class , args ) ; }
33405	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ value = _CHAR + value + _CHAR ] _CHAR ; }
33459	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatareplacedatanomodificationallowederrEE . class , args ) ; }
33482	protected void handleStartTag ( TagElement tag ) { }
33486	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfBoolean makeIndirect ( PdfDocument document ) { return ( PdfBoolean ) super . makeIndirect ( document ) ; }
33492	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; TestCaseUtils . clearBackend ( _CHAR userRoot _CHAR , _CHAR dc = example , dc = com _CHAR ) ; }
33502	public boolean containsAnnotation ( PdfAnnotation annotation ) { for ( PdfAnnotation a : getAnnotations ( ) ) { if ( a . getPdfObject ( ) . equals ( annotation . getPdfObject ( ) ) ) { return _BOOL ; } } return _BOOL ; }
33504	public int next ( ) { if ( _currentNode != NULL ) { int node = _currentNode ; _currentNode = _nextsib ( node ) ; return returnNode ( makeNodeHandle ( node ) ) ; } return END ; }
33525	public final boolean isFinished ( ) { return mFinished ; }
33534	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationfeaturexml . class , args ) ; }
33581	AuditLogFilterBuilder remove ( String configPath ) { auditLogFilterBuilder . remove ( configPath ) ; return this ; }
33588	@ Override public StringBuffer format ( long number , StringBuffer result , FieldPosition fieldPosition ) { fieldPosition . setBeginIndex ( _NUM ) ; fieldPosition . setEndIndex ( _NUM ) ; return format ( number , result , fieldPosition . getFieldDelegate ( ) ) ; }
33596	void dispatchOnLauncherTransitionStart ( View v , boolean animated , boolean toWorkspace ) { if ( v instanceof LauncherTransitionable ) { ( ( LauncherTransitionable ) v ) . onLauncherTransitionStart ( mLauncher , animated , toWorkspace ) ; } dispatchOnLauncherTransitionStep ( v , _NUM ) ; }
33598	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeattributenodeattribute . class , args ) ; }
33602	@ Override protected void encryptFinal ( ) throws IOException { encrypt ( ) ; }
33611	public static void removeNotificationHandler ( String service ) { notificationHandlers . remove ( service ) ; }
33616	void writeToUsageOutputStream ( CharSequence message ) { try { usageOutputStream . write ( getBytes ( message . toString ( ) ) ) ; } catch ( final Exception e ) { logger . traceException ( e ) ; } }
33634	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
33635	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrreplacedataoffsetgreater . class , args ) ; }
33644	public static VorbisCommentTag createNewTag ( ) { VorbisCommentTag tag = new VorbisCommentTag ( ) ; tag . setVendor ( DEFAULT_VENDOR ) ; return tag ; }
33662	void fullyUnlock ( ) { takeLock . unlock ( ) ; putLock . unlock ( ) ; }
33666	public void endCDATA ( ) throws SAXException { if ( _NULL != m_resultLexicalHandler ) m_resultLexicalHandler . endCDATA ( ) ; }
33671	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode01 . class , args ) ; }
33701	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatagetdata . class , args ) ; }
33714	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
33716	static Entry makeEntryFrom ( List < String > base , List < String > attrs ) { List < String > ldif = new ArrayList < > ( base ) ; ldif . addAll ( attrs ) ; return makeEntry ( ldif . toArray ( new String [ _NUM ] ) ) ; }
33727	void unlink ( Node < E > p , Node < E > trail ) { p . item = _NULL ; trail . next = p . next ; if ( last == p ) last = trail ; if ( count . getAndDecrement ( ) == capacity ) notFull . signal ( ) ; }
33731	public void clearAccountExpirationTime ( ) { logger . trace ( _CHAR Clearing account expiration time for user % s '' , userDNString ) ; accountExpirationTime =- _NUM ; clearAttribute ( OP_ATTR_ACCOUNT_EXPIRATION_TIME ) ; }
33754	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgettagname . class , args ) ; }
33756	public static PropertyException propertyIsReadOnlyException ( final PropertyDefinition < ? > pd ) { return new PropertyException ( pd , ERR_PROPERTY_IS_READ_ONLY_EXCEPTION . get ( pd . getName ( ) ) ) ; }
33762	@ DataProvider ( name = _CHAR simpleGet _CHAR ) Object [ ] [ ] createNames ( ) { return new Object [ ] [ ] { { _CHAR cn = JMX Connection Handler , cn = Connection Handlers , cn = config _CHAR , _CHAR ds - cfg - listen - port _CHAR , TestCaseUtils . getServerJmxPort ( ) } , { _CHAR cn = JMX Connection Handler , cn = Connection Handlers , cn = config _CHAR , _CHAR objectclass _CHAR , _NULL } , { _CHAR cn = JMX Connection Handler , cn = Connection Handlers , cn = config _CHAR , _CHAR ds - cfg - ssl - cert - nickname _CHAR , _CHAR server - cert _CHAR } } ; }
33771	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
33780	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetfirstchild . class , args ) ; }
33801	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementreplaceattributewithself . class , args ) ; }
33812	public Position asPosition ( ) { return Position . fromCoordinates ( center [ _NUM ] , center [ _NUM ] ) ; }
33813	public String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _CHAR [ \ n _CHAR ) ; sb . append ( super . toString ( ) ) ; sb . append ( _CHAR Maximum Path Length : _CHAR + maxPathLength + _CHAR \ n _CHAR ) ; sb . append ( _CHAR ] \ n _CHAR ) ; return sb . toString ( ) ; }
33815	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatadeletedataend . class , args ) ; }
33821	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrinsertbefore2 . class , args ) ; }
33827	public void deleteField ( String id ) { super . doDeleteTagField ( new FrameAndSubId ( id , _NULL ) ) ; }
33832	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfBoolean makeIndirect ( PdfDocument document , PdfIndirectReference reference ) { return ( PdfBoolean ) super . makeIndirect ( document , reference ) ; }
33836	@ Override public String toString ( ) { return _CHAR FileDeleteStrategy [ _CHAR + name + _CHAR ] _CHAR ; }
33840	public boolean verifyXMLSignature ( org . w3c . dom . Document document ) throws XMLSignatureException { return sp . verifyXMLSignature ( document ) ; }
33842	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemns02 . class , args ) ; }
33846	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodetextnodevalue . class , args ) ; }
33861	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementreplaceexistingattributegevalue . class , args ) ; }
33881	public Event35Log . Builder clearEvents ( ) { events = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
33903	private void assertOpen ( ) throws SQLException { if ( isClosed ) { throw new SQLException ( CLOSED ) ; } }
33912	public synchronized boolean isEmpty ( ) { return elementCount == _NUM ; }
33917	@ Override public final String toString ( ) { return name ; }
33925	protected void finalize ( ) { synchronized ( statsMap ) { statsMap . remove ( statsName ) ; } synchronized ( this ) { if ( statsFile == _NULL ) { return ; } statsState = Stats . OFF ; statsFile . flush ( ) ; statsFile . close ( ) ; statsFile = _NULL ; } }
33937	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; configDN = DN . valueOf ( _CHAR cn = Referential Integrity , cn = Plugins , cn = config _CHAR ) ; }
33939	public final int incrementAndGet ( ) { return unsafe . getAndAddInt ( this , valueOffset , _NUM ) + _NUM ; }
33953	public String toString ( ) { return operation ; }
33977	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfString makeIndirect ( PdfDocument document ) { return ( PdfString ) super . makeIndirect ( document ) ; }
33993	public BuilderImage < T > crop ( ) { this . config . setCrop ( ) ; return this ; }
34021	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrdeletedatacountnegative . class , args ) ; }
34026	public SAML2ConfigBuilder nameIdFormat ( String nameIdFormat ) { this . nameIdFormat = nameIdFormat ; return this ; }
34036	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocumentType01 . class , args ) ; }
34038	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementinvalidcharacterexception . class , args ) ; }
34045	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodenotationnodevalue . class , args ) ; }
34050	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
34053	public void process ( final Query query ) { logger . trace ( _CHAR Processing query { } _CHAR , query ) ; for ( Module module : modules ) { module . process ( query ) ; } }
34057	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementgettagname . class , args ) ; }
34058	public boolean isSyncEnabled ( ) { return data . get ( _CHAR enabled _CHAR ) . defaultTo ( Boolean . TRUE ) . asBoolean ( ) ; }
34084	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNodeNS03 . class , args ) ; }
34098	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
34111	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeentityreferencenodename . class , args ) ; }
34119	public void handleButton3Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToRealmView ( event ) ; }
34122	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementgetelementsbytagnamenomatch . class , args ) ; }
34130	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeappendchild . class , args ) ; }
34131	private boolean shouldLog ( TraceSettings settings , boolean hasException ) { return settings != _NULL && ( settings . getLevel ( ) == ALL || ( hasException && settings . getLevel ( ) == EXCEPTIONS_ONLY ) ) ; }
34137	public void paintRootPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
34139	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
34150	protected void hasProperty ( Properties properties , String name ) { if ( properties . getProperty ( name ) == _NULL ) throw new IllegalArgumentException ( sm . getString ( _CHAR mcastService . missing . property _CHAR , name ) ) ; }
34178	public String encode ( ) { String encoded_string ; if ( displayName != _NULL ) { encoded_string = displayName + Separators . LESS_THAN ; } else { encoded_string = _CHAR _CHAR ; } encoded_string += email . encode ( ) ; if ( displayName != _NULL ) { encoded_string += Separators . GREATER_THAN ; } return encoded_string ; }
34185	@ Override public boolean isExpired ( ) { return ! isNeverExpires ( ) && super . isExpired ( ) ; }
34204	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
34207	public double num ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return ( m_left . num ( xctxt ) % m_right . num ( xctxt ) ) ; }
34208	public boolean beginStaticTextMessageDisplay ( ChildDisplayEvent event ) { return _BOOL ; }
34221	public URI normalize ( ) { if ( opaque ) { return this ; } String normalizedPath = normalize ( path , _BOOL ) ; if ( path . equals ( normalizedPath ) ) { return this ; } URI result = duplicate ( ) ; result . path = normalizedPath ; result . setSchemeSpecificPart ( ) ; return result ; }
34253	public void init ( Instrumentation inst , QueryReporter queryReporter , ConnectorConfiguration configuration ) { queryProcessorWrapper = new QueryProcessorWrapper ( queryReporter , configuration ) ; setQueryProcessorIntercepter ( inst ) ; setCassandraDaemonIntercepter ( inst ) ; }
34277	public void paintRadioButtonBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
34293	private void disconnectDServer ( ) { if ( ld != _NULL ) { ld . close ( ) ; ld = _NULL ; dsConfigInstance = _NULL ; } }
34295	public StateInteractive left_button_clicked ( PlaPointFloat p_location ) { super . left_button_clicked ( p_location ) ; remove_concave_corners ( ) ; i_brd . repaint ( ) ; return this ; }
34302	public synchronized int capacity ( ) { return elementData . length ; }
34308	final boolean tokenIs ( String s ) { return ( m_token != _NULL ) ? ( m_token . equals ( s ) ) : ( s == _NULL ) ; }
34329	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode09 . class , args ) ; }
34350	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreatecdatasection . class , args ) ; }
34352	protected String start ( String name , StringManager smClient ) { StringWriter stringWriter = new StringWriter ( ) ; PrintWriter printWriter = new PrintWriter ( stringWriter ) ; super . start ( printWriter , name , smClient ) ; return stringWriter . toString ( ) ; }
34356	private void stopMonitoringPublisher ( ) { final MonitoringPublisher thread = monitoringPublisher . get ( ) ; if ( thread != _NULL && monitoringPublisher . compareAndSet ( thread , _NULL ) ) { thread . shutdown ( ) ; thread . waitForShutdown ( ) ; } }
34365	public boolean isAnnotationPresent ( Class < ? extends Annotation > annotationType ) { return getAnnotation ( annotationType ) != _NULL ; }
34372	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeparentnode . class , args ) ; }
34380	private static AttributeValue createAttributeValue ( AttributeDescription attributeDescription , ByteString attributeValue ) { return new AttributeValue ( attributeDescription , attributeValue ) ; }
34386	public boolean isClosed ( ) { synchronized ( closeLock ) { return closed ; } }
34409	public Attribute createAttribute ( String name , String value ) { AttributeField attributeImpl = new AttributeField ( ) ; try { attributeImpl . setName ( name ) ; attributeImpl . setValueAllowNull ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return attributeImpl ; }
34418	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfName makeIndirect ( PdfDocument document , PdfIndirectReference reference ) { return ( PdfName ) super . makeIndirect ( document , reference ) ; }
34425	public boolean isLayoutValid ( ) { return ( minorValid && majorValid && childSizeValid ) ; }
34534	public String encode ( ) { return userName + Separators . AT + hostName ; }
34542	public Builder syntax ( String syntaxOID ) { this . syntaxOID = syntaxOID ; return this ; }
34546	public static boolean isStorageExists ( ) { if ( Environment . getExternalStorageState ( ) . equals ( Environment . MEDIA_MOUNTED ) ) { return _BOOL ; } return _BOOL ; }
34548	public static boolean isArray ( String desc ) { return desc . startsWith ( _CHAR [ _CHAR ) ; }
34554	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
34555	public BigInteger nextBigInteger ( ) throws DecodeException { if ( ! hasNext ( GSER_INTEGER ) ) { final LocalizableMessage msg = WARN_GSER_NO_VALID_INTEGER . get ( gserValue . substring ( pos , length ) ) ; throw DecodeException . error ( msg ) ; } return new BigInteger ( next ( GSER_INTEGER ) ) ; }
34559	public SAML2ConfigBuilder customSubjectProviderClassName ( String customSubjectProviderClassName ) { this . customSubjectProviderClassName = customSubjectProviderClassName ; return this ; }
34564	public static Class < ? > load ( ClassNode cn ) { ClassWriter cw = new ClassWriter ( _NUM ) ; cn . accept ( new VisitorImpl ( cw ) ) ; return new ClassDefiner ( ClassLoader . getSystemClassLoader ( ) ) . get ( cn . name . replace ( _CHAR / _CHAR , _CHAR . _CHAR ) , cw . toByteArray ( ) ) ; }
34566	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
34579	boolean isUpgradeCompleted ( ) { return AMSetupServlet . isUpgradeCompleted ( ) ; }
34584	public Paragraph add ( String text ) { return add ( new Text ( text ) ) ; }
34609	public SignatureVisitor visitExceptionType ( ) { return this ; }
34618	private String buildBrowseUrl ( final String type ) { return PathUtils . escape ( basePath . concat ( CKFINDER_PAGE ) . concat ( type == _NULL ? _CHAR _CHAR : _CHAR ? type = _CHAR . concat ( type ) ) ) ; }
34633	public void paintPasswordFieldBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
34642	public boolean connectDSwithDN ( boolean ssl ) { try ( Connection conn = getLDAPConnection ( ssl ) ) { ConnectionEntryReader results = conn . search ( LDAPRequests . newSearchRequest ( suffix , SearchScope . BASE_OBJECT , Filter . objectClassPresent ( ) . toString ( ) ) ) ; return results . hasNext ( ) ; } catch ( LdapException e ) { disconnectDServer ( ) ; return _BOOL ; } }
34658	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodelistindexgetlength . class , args ) ; }
34664	public static boolean isUnderline ( AttributeSet a ) { Boolean underline = ( Boolean ) a . getAttribute ( Underline ) ; if ( underline != _NULL ) { return underline . booleanValue ( ) ; } return _BOOL ; }
34698	public int hashCode ( ) { return ( field << _NUM ) | ( beginIndex << _NUM ) | endIndex ; }
34702	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodens01 . class , args ) ; }
34707	public QueryResponseWrapper query ( Query toQuery , int limit , long offset ) throws IndexParseException , FieldNotIndexedException { ParsedQuery parsedQuery = ParsedQueryFactory . getParsedQuery ( toQuery . getDatabase ( ) , toQuery , queries . getSession ( ) ) ; return queries . query ( parsedQuery , limit , offset ) ; }
34723	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateentityreferenceknown . class , args ) ; }
34726	public SAML2ConfigBuilder customAttributeStatementsProviderClassName ( String customAttributeStatementsProviderClassName ) { this . customAttributeStatementsProviderClassName = customAttributeStatementsProviderClassName ; return this ; }
34733	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
34742	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
34750	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( ownerElement01 . class , args ) ; }
34754	public static Point fromJson ( String json ) { GsonBuilder gson = new GsonBuilder ( ) ; gson . registerTypeAdapter ( Position . class , new PositionDeserializer ( ) ) ; return gson . create ( ) . fromJson ( json , Point . class ) ; }
34756	public Node appendChild ( Node newChild ) throws DOMException { error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; return _NULL ; }
34758	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documenttypepublicid01 . class , args ) ; }
34767	private Route nextPostponed ( ) { return postponedRoutes . remove ( _NUM ) ; }
34769	public Event35Id . Builder clearFirst ( ) { first = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
34772	public URL toURL ( ) throws MalformedURLException { if ( ! absolute ) { throw new IllegalArgumentException ( _CHAR URI is not absolute : _CHAR + toString ( ) ) ; } return new URL ( toString ( ) ) ; }
34776	private int extensibleHashCode ( ) { int hashCode = _NUM ; if ( getAttributeType ( ) != _NULL ) { hashCode += getAttributeType ( ) . hashCode ( ) ; } if ( dnAttributes ) { hashCode ++ ; } if ( matchingRuleID != _NULL ) { hashCode += matchingRuleID . hashCode ( ) ; } if ( assertionValue != _NULL ) { hashCode += assertionValue . hashCode ( ) ; } return hashCode ; }
34777	public void disableWhenHorizontalMove ( boolean disable ) { mDisableWhenHorizontalMove = disable ; }
34791	protected void fireEntityReference ( String name ) throws org . xml . sax . SAXException { if ( m_tracer != _NULL ) { flushMyWriter ( ) ; m_tracer . fireGenerateEvent ( SerializerTrace . EVENTTYPE_ENTITYREF , name , ( Attributes ) _NULL ) ; } }
34796	public static PropertyException unknownPropertyDefinitionException ( final PropertyDefinition < ? > pd ) { return new PropertyException ( pd , ERR_UNKNOWN_PROPERTY_DEFINITION_EXCEPTION . get ( pd . getName ( ) , pd . getClass ( ) . getName ( ) ) ) ; }
34797	public int validateGlobalOptions ( PrintStream err ) { LocalizableMessageBuilder buf = new LocalizableMessageBuilder ( ) ; int returnValue = validateGlobalOptions ( buf ) ; printWrappedText ( err , buf . toString ( ) ) ; return returnValue ; }
34800	public boolean isTrustAll ( ) { return state . trustAll ; }
34802	public Observable < List < Order >> retrieveOrdersForAccountObservable ( String accountId ) { io . vertx . rx . java . ObservableFuture < List < Order >> resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrieveOrdersForAccount ( accountId , resultHandler . toHandler ( ) ) ; return resultHandler ; }
34823	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported09 . class , args ) ; }
34844	public String convert ( String line ) { return line ; }
34888	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetelementsbytagnamens02 . class , args ) ; }
34906	private boolean isBleEnabled ( ) { final BluetoothManager bm = ( BluetoothManager ) getActivity ( ) . getSystemService ( Context . BLUETOOTH_SERVICE ) ; final BluetoothAdapter ba = bm . getAdapter ( ) ; return ba != _NULL && ba . isEnabled ( ) ; }
34911	public R visitACI ( ACIPropertyDefinition pd , P p ) { return visitUnknown ( pd , p ) ; }
34920	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeappendchilddocfragment . class , args ) ; }
34946	public javax . sdp . URI createURI ( URL value ) throws SdpException { URIField uriImpl = new URIField ( ) ; uriImpl . set ( value ) ; return uriImpl ; }
34950	private E dequeue ( ) { Node < E > h = head ; Node < E > first = h . next ; h . next = h ; head = first ; E x = first . item ; first . item = _NULL ; return x ; }
34951	public static void writeAny ( OutputStream out , Object obj ) { if ( utilDelegate != _NULL ) { utilDelegate . writeAny ( out , obj ) ; } }
34963	public static String removeSpaces ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . replaceAll ( _CHAR \\ s _CHAR , _CHAR _CHAR ) ; }
34973	public boolean isFinished ( ) { return mScroller . isFinished ( ) ; }
34995	public void paintTextPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
35015	private int yearToEpochMonth ( int year ) { return ( year * _NUM ) - hijrahStartEpochMonth ; }
35034	private boolean hasAttributes ( ) { ModelEvent event = RuleBuilder . instance ( ) . getChosenEvent ( ) ; List < ModelAttribute > attributes = UIDbHelperStore . instance ( ) . db ( ) . getAttributesForEvent ( event ) ; return ! attributes . isEmpty ( ) ; }
35053	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
35058	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemwithnewvalue . class , args ) ; }
35060	public static String colorToHex ( int color ) { return String . format ( _CHAR # % _NUM _CHAR , ( _NUM & color ) ) ; }
35068	public void paintColorChooserBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
35086	@ Override public String toString ( ) { return String . format ( _CHAR name = % s , StoreLocation = % s , size = % s bytes , isFormField = % s , FieldName = % s _CHAR , getName ( ) , getStoreLocation ( ) , Long . valueOf ( getSize ( ) ) , Boolean . valueOf ( isFormField ( ) ) , getFieldName ( ) ) ; }
35095	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
35107	@ AfterClass public void afterClass ( ) throws Exception { TestCaseUtils . deleteEntry ( DN . valueOf ( _CHAR cn = samba password , cn = Plugins , cn = config _CHAR ) ) ; }
35110	@ Override public String toString ( ) { return getName ( ) ; }
35115	public boolean hasValueOptionList ( ) { return valueOptionList != _NULL && valueOptionList . size ( ) > _NUM ; }
35125	@ Override public int hashCode ( ) { return toString ( ) . hashCode ( ) ; }
35142	public void paintSplitPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
35146	public void paintInternalFrameBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
35152	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeappendchilddocfragment . class , args ) ; }
35157	public int next ( ) { final int result = _currentNode ; _currentNode = END ; return returnNode ( result ) ; }
35186	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatareplacedataexceedslengthofarg . class , args ) ; }
35196	public boolean is_orthogonal ( ) { return direction ( ) . is_orthogonal ( ) ; }
35199	public final boolean isEnabled ( AvroParser . Feature f ) { return ( _avroParserFeatures & f . getMask ( ) ) != _NUM ; }
35223	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns03 . class , args ) ; }
35224	LambdaFormBuffer renameParameter ( int pos , Name newParam ) { assert ( newParam . isParam ( ) ) ; replaceName ( pos , newParam ) ; return this ; }
35225	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemns09 . class , args ) ; }
35261	public String toString ( ) { return getName ( ) + _CHAR = _CHAR + getValue ( ) ; }
35263	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; switch ( type ) { case Constants . ELEMNAME_WHEN : case Constants . ELEMNAME_OTHERWISE : break ; default : error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; } return super . appendChild ( newChild ) ; }
35264	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
35271	public static BooleanArgument skipPortCheckArgument ( ) throws ArgumentException { return BooleanArgument . builder ( _CHAR skipPortCheck _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_SKIPPORT . get ( ) ) . buildArgument ( ) ; }
35274	public boolean isActivated ( ) throws AMException , SSOException { return getStringAttribute ( statusAN ) . equalsIgnoreCase ( _CHAR active _CHAR ) ; }
35288	public String toXMLString ( ) throws FSMsgException { String xml = this . toXMLString ( _BOOL , _BOOL ) ; return xml ; }
35289	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementaddnewattribute . class , args ) ; }
35297	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
35308	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
35317	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementreplaceattributewithself . class , args ) ; }
35334	public static boolean isPublic ( int mod ) { return ( mod & ACC_PUBLIC ) != _NUM ; }
35338	private boolean isValidChar ( String value ) { if ( inValidChars . contains ( value ) ) { return _BOOL ; } else { return _BOOL ; } }
35366	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode04 . class , args ) ; }
35367	public void requestSecondsUntilPasswordResetLockout ( ) { operations . add ( PasswordPolicyStateOperationType . GET_SECONDS_UNTIL_PASSWORD_RESET_LOCKOUT ) ; }
35401	public int hashCode ( ) { int hashCode = _NUM ; for ( int i = _NUM ; i < mag . length ; i ++ ) hashCode = ( int ) ( _NUM * hashCode + ( mag [ i ] & LONG_MASK ) ) ; return hashCode * signum ; }
35428	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
35431	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( prefix07 . class , args ) ; }
35437	public void addAttribute ( Attribute attr ) { attrs . addElement ( attr ) ; }
35442	public final String toString ( ) { StringBuffer builder = new StringBuffer ( property ) ; builder . append ( _CHAR ) ; builder . append ( String . valueOf ( value ) ) ; return builder . toString ( ) ; }
35452	public void comment ( char [ ] ch , int start , int length ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . comment ( ch , start , length ) ; }
35492	private static boolean isNullOrEmpty ( final String string ) { return ( string == _NULL || _CHAR _CHAR . equals ( string ) ) ; }
35506	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatainsertdatamiddle . class , args ) ; }
35525	public boolean isRenamed ( ) { return isTruelyRenamed ( ) || isRenamedOverride ; }
35526	public java . lang . String signXML ( java . lang . String XML , java . lang . String certAlias , java . lang . String algorithm ) throws XMLSignatureException { return sp . signXML ( XML , certAlias , algorithm ) ; }
35537	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapgetnameditemns04 . class , args ) ; }
35545	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetdoctype . class , args ) ; }
35546	public ShapeTileBox bounding_box ( ) { PlaPointInt lower_left = new PlaPointInt ( Math . floor ( v_x ) , Math . floor ( v_y ) ) ; PlaPointInt upper_right = new PlaPointInt ( Math . ceil ( v_x ) , Math . ceil ( v_y ) ) ; return new ShapeTileBox ( lower_left , upper_right ) ; }
35550	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNS04 . class , args ) ; }
35563	public ByteString generatePassword ( ) throws DirectoryException { PasswordGenerator < ? > generator = passwordPolicy . getPasswordGenerator ( ) ; if ( generator == _NULL ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( _CHAR Unable to generate a new password for user % s because no password generator has been defined '' + '' in the associated password policy . '' , userDNString ) ; } return _NULL ; } return generator . generatePassword ( userEntry ) ; }
35567	public void paintRadioButtonBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
35571	protected boolean applyFilter ( Node node , int nodeType ) { if ( fFilter != _NULL && ( fWhatToShowFilter & nodeType ) != _NUM ) { short code = fFilter . acceptNode ( node ) ; switch ( code ) { case NodeFilter . FILTER_REJECT : case NodeFilter . FILTER_SKIP : return _BOOL ; default : } } return _BOOL ; }
35574	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS12 . class , args ) ; }
35578	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatadeletedatanomodificationallowederrEE . class , args ) ; }
35586	public void fireGenerateEvent ( int eventType , String data ) { }
35591	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
35596	public void paintProgressBarBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
35599	@ Override public void onLowMemory ( ) { super . onLowMemory ( ) ; }
35607	public PdfObject remove ( PdfName key ) { return map . remove ( key ) ; }
35610	public int pin_count ( ) { return pin_arr . length ; }
35613	public void startPrefixMapping ( String prefix , String uri ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . startPrefixMapping ( prefix , uri ) ; } }
35614	public int next ( ) { _currentNode = ( _currentNode == DTM . NULL ) ? DTM . NULL : _nextsib ( _currentNode ) ; return returnNode ( makeNodeHandle ( _currentNode ) ) ; }
35627	private static void assertQualName ( String qualName ) throws XMPException { if ( qualName == _NULL || qualName . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty qualifier name _CHAR , XMPError . BADXPATH ) ; } }
35666	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetelementsbytagnamespecialvalue . class , args ) ; }
35680	boolean isLiveSync ( ) { return liveSyncActions . contains ( this ) ; }
35705	public int next ( ) { int next = _currentNode ; int pos = -- m_ancestorsPos ; _currentNode = ( pos >= _NUM ) ? m_ancestors [ m_ancestorsPos ] : DTM . NULL ; return returnNode ( next ) ; }
35722	public void reset ( ) { ns . removeAllElements ( ) ; ks . setLength ( _NUM ) ; cur = tt . root ; run ( ) ; }
35724	public void addLanguage ( final String language ) { if ( language . length ( ) < MetadataDescriptor . MAX_LANG_INDEX ) { if ( ! this . languages . contains ( language ) ) { this . languages . add ( language ) ; } } else { throw new IllegalArgumentException ( ErrorMessage . WMA_LENGTH_OF_LANGUAGE_IS_TOO_LARGE . getMsg ( language . length ( ) * _NUM + _NUM ) ) ; } }
35737	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapreturnnull . class , args ) ; }
35760	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNodeNS05 . class , args ) ; }
35765	public void modifyDN ( ModifyDNRequest request ) throws LdapException { addControls ( request ) ; conn . getConnection ( ) . modifyDN ( request ) ; }
35766	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( ownerElement02 . class , args ) ; }
35771	protected void updateLeadSelectionRow ( ) { leadRow = getRowForPath ( tree , getLeadSelectionPath ( ) ) ; }
35787	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeelementnodeattributes . class , args ) ; }
35793	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatasetnodevalue . class , args ) ; }
35798	@ Override public String toString ( ) { return super . toString ( ) + _CHAR [ type = _CHAR + type + _CHAR ] [ message = _CHAR + message + _CHAR ] _CHAR ; }
35813	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( textsplittexttwo . class , args ) ; }
35820	public void createWindowSurface ( Object surface ) { if ( mEGLSurface != EGL14 . EGL_NO_SURFACE ) { throw new IllegalStateException ( _CHAR surface already created _CHAR ) ; } mEGLSurface = mEglCore . createWindowSurface ( surface ) ; }
35822	public final String [ ] keys ( ) { String [ ] keysArr = new String [ m_firstFree ] ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { keysArr [ i ] = m_map [ i ] ; } return keysArr ; }
35860	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
35873	public boolean isDestroyed ( ) { return destroyed ; }
35878	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributens08 . class , args ) ; }
35884	public synchronized NSObject [ ] allObjects ( ) { return set . toArray ( new NSObject [ count ( ) ] ) ; }
35888	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetimplementation . class , args ) ; }
35891	@ Override public String toString ( ) { return _CHAR ErrorMessage = [ _CHAR + _CHAR sender = _CHAR + this . senderID + _CHAR destination = _CHAR + this . destination + _CHAR msgID = _CHAR + this . msgID + _CHAR details = _CHAR + this . details + _CHAR creationTime = _CHAR + this . creationTime + _CHAR ] _CHAR ; }
35898	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementsbytagnametotallength . class , args ) ; }
35909	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataappenddata . class , args ) ; }
35916	public void delete ( InternalSession session ) throws CoreTokenException { String tokenId = tokenIdFactory . toSessionTokenId ( session . getID ( ) ) ; coreTokenService . delete ( tokenId ) ; }
35948	protected void installDefaults ( ) { super . installDefaults ( ) ; String prefix = getPropertyPrefix ( ) ; Character echoChar = ( Character ) UIManager . getDefaults ( ) . get ( prefix + _CHAR . echoChar _CHAR ) ; if ( echoChar != _NULL ) { LookAndFeel . installProperty ( getComponent ( ) , _CHAR echoChar _CHAR , echoChar ) ; } }
35953	public void paintDesktopIconBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
35961	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodesetprefix05 . class , args ) ; }
35964	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
35965	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrdeletedataoffsetnegative . class , args ) ; }
35970	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
35974	int registerFontDirectory ( String dir ) { return registerFontDirectory ( dir , _BOOL ) ; }
35985	public PlaLineInt plaline_last ( ) { return plaline ( plaline_len ( - _NUM ) ) ; }
35989	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatareplacedatanomodificationallowederr . class , args ) ; }
35998	public void addObjectClass ( ObjectClass oc ) throws DirectoryException { attachment = _NULL ; if ( objectClasses . containsKey ( oc ) ) { LocalizableMessage message = ERR_ENTRY_ADD_DUPLICATE_OC . get ( oc . getNameOrOID ( ) , dn ) ; throw new DirectoryException ( OBJECTCLASS_VIOLATION , message ) ; } objectClasses . put ( oc , oc . getNameOrOID ( ) ) ; }
36019	public void addAudioFileModificationListener ( AudioFileModificationListener listener ) { this . modificationHandler . addAudioFileModificationListener ( listener ) ; }
36032	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
36047	public SignatureVisitor visitParameterType ( ) { return this ; }
36073	public String toXMLString ( ) throws SAML2Exception { return xmlString ; }
36093	public synchronized void removeServiced ( String name ) { serviced . remove ( name ) ; }
36096	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( prefix06 . class , args ) ; }
36108	public void handleServerNameHrefRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
36119	public void paintPasswordFieldBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
36124	public synchronized boolean isAccessToUnderlyingConnectionAllowed ( ) { return this . accessToUnderlyingConnectionAllowed ; }
36130	public void paintComboBoxBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
36132	public void paintTabbedPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
36154	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNS03 . class , args ) ; }
36164	public boolean offer ( E o ) { if ( o == _NULL ) { throw new NullPointerException ( _CHAR o == _NULL _CHAR ) ; } growToSize ( size + _NUM ) ; elements [ size ] = o ; siftUp ( size ++ ) ; return _BOOL ; }
36197	public void startCDATA ( ) throws SAXException { m_handler . startCDATA ( ) ; }
36207	public void paintToolBarBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
36212	public static void error ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . error ( level , msgid , data , session ) ; } catch ( LogException le ) { COTUtils . debug . error ( _CHAR LogUtil . error : Could n _CHAR_CHAR , le ) ; } } }
36218	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodelistreturnlastitem . class , args ) ; }
36228	public SAML2ConfigBuilder keystoreFile ( String keystoreFileName ) { this . keystoreFileName = keystoreFileName ; return this ; }
36243	public static void error ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . error ( level , msgid , data , session ) ; } catch ( LogException le ) { debug . error ( _CHAR LogUtil . error : Could n _CHAR_CHAR , le ) ; } } }
36244	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateattributeNS06 . class , args ) ; }
36253	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns08 . class , args ) ; }
36254	public void paintToggleButtonBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
36256	public final void popIteratorRoot ( ) { m_iteratorRoots . popQuick ( ) ; }
36268	private void removeTestParent ( ManagementContext context , String name ) throws Exception { ManagedObject < RootCfgClient > root = context . getRootConfigurationManagedObject ( ) ; root . removeChild ( TestCfg . getTestOneToManyParentRelationDefinition ( ) , name ) ; }
36303	public static Object readAny ( InputStream in ) { if ( utilDelegate != _NULL ) { return utilDelegate . readAny ( in ) ; } return _NULL ; }
36311	public java . lang . String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
36316	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementgetelementsbytagnamespecialvalue . class , args ) ; }
36333	public boolean isClosed ( ) { return state == STATE_CLOSED ; }
36340	public boolean addIfAbsent ( E e ) { Object [ ] snapshot = getArray ( ) ; return indexOf ( e , snapshot , _NUM , snapshot . length ) >= _NUM ? _BOOL : addIfAbsent ( e , snapshot ) ; }
36344	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditem . class , args ) ; }
36351	public void initializeConfigurationFramework ( ) throws org . opends . server . config . ConfigException { if ( ! ConfigurationFramework . getInstance ( ) . isInitialized ( ) ) { try { ConfigurationFramework . getInstance ( ) . initialize ( ) ; } catch ( ConfigException ce ) { throw new org . opends . server . config . ConfigException ( ce . getMessageObject ( ) , ce ) ; } } }
36356	protected void childAllocation ( int index , Rectangle alloc ) { alloc . x += getOffset ( X_AXIS , index ) ; alloc . y += getOffset ( Y_AXIS , index ) ; alloc . width = getSpan ( X_AXIS , index ) ; alloc . height = getSpan ( Y_AXIS , index ) ; }
36361	public static boolean addRecipe ( Recipe recipe ) { return server . addRecipe ( recipe ) ; }
36366	boolean deleteRecord ( WriteableTransaction txn , TreeName indexTreeName ) throws StorageRuntimeException { checkNotNull ( txn , _CHAR txn must not be _NULL _CHAR ) ; checkNotNull ( indexTreeName , _CHAR indexTreeName must not be _NULL _CHAR ) ; return txn . delete ( getName ( ) , keyForIndex ( indexTreeName ) ) ; }
36369	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documenttypegetentitieslength . class , args ) ; }
36372	public boolean isNoArgs ( ) { return noArgs ; }
36377	void encodeHeader ( byte msgType , ByteArrayBuilder builder , short protocolVersion ) { builder . appendByte ( msgType ) ; builder . appendByte ( protocolVersion ) ; builder . appendLongUTF8 ( generationId ) ; builder . appendByte ( groupId ) ; }
36386	public static NSObject parse ( String filePath ) throws ParserConfigurationException , ParseException , SAXException , PropertyListFormatException , IOException { return parse ( new File ( filePath ) ) ; }
36404	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
36405	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetfirstchild . class , args ) ; }
36427	@ Override public void removeAll ( ) { for ( Foo foo : findAll ( ) ) { remove ( foo ) ; } }
36437	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateelementNS05 . class , args ) ; }
36447	public static void sleep ( int ms ) { try { Thread . sleep ( ms ) ; } catch ( InterruptedException ie ) { System . err . println ( _CHAR sleep was interrupted _CHAR ) ; } }
36475	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrdeletedataoffsetgreater . class , args ) ; }
36484	public boolean isAccessToUnderlyingConnectionAllowed ( ) { return this . accessToUnderlyingConnectionAllowed ; }
36490	public int readShort ( ) throws IOException { int k = readWord ( ) ; if ( k > _NUM ) k -= _NUM ; return k ; }
36494	public void persistInternalSession ( InternalSession session ) { session . setStored ( _BOOL ) ; putInternalSessionIntoInternalSessionCache ( session ) ; update ( session ) ; if ( ! session . willExpire ( ) ) { nonExpiringSessionManager . addNonExpiringSession ( session ) ; } }
36517	public void scrollToTop ( ) { mAppsRecyclerView . scrollToTop ( ) ; }
36521	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createAttributeNS05 . class , args ) ; }
36529	public static boolean isAlreadyApproved ( ) { return new File ( getInstanceLegalDirectory ( ) , ACCEPTED_LICENSE_FILE_NAME ) . exists ( ) ; }
36539	public void handleButton3Request ( RequestInvocationEvent event ) { backTrail ( ) ; DelegationViewBean vb = ( DelegationViewBean ) getViewBean ( DelegationViewBean . class ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
36551	public final String toString ( ) { if ( this . initialized == _BOOL ) { return _NULL ; } return paramSpi . engineToString ( ) ; }
36555	protected boolean validateNodeName ( String nodeName ) { if ( _NULL == nodeName ) return _BOOL ; if ( nodeName . equals ( _CHAR xmlns _CHAR ) ) return _BOOL ; return XML11Char . isXML11ValidQName ( nodeName ) ; }
36563	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeappendchildinvalidnodetype . class , args ) ; }
36567	public void addRequiredAttribute ( Attr attr ) { if ( m_required == _NULL ) { m_required = new AttrSet ( ) ; } m_required . add ( attr ) ; }
36580	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SetPropertiesRule [ _CHAR ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
36589	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatareplacedatamiddle . class , args ) ; }
36618	@ Override public double distance ( PlaPointFloat p_from_point ) { return p_from_point . distance ( nearest_point ( p_from_point ) ) ; }
36624	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementchangeattributevalue . class , args ) ; }
36625	@ Override public void write ( char [ ] chr , int st , int end ) throws IOException { out . write ( chr , st , end ) ; }
36633	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfArray makeIndirect ( PdfDocument document , PdfIndirectReference reference ) { return ( PdfArray ) super . makeIndirect ( document , reference ) ; }
36649	public E first ( ) { return backingMap . firstKey ( ) ; }
36669	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
36671	void printHeader ( final LocalizableMessage header ) { println ( ) ; println ( ) ; println ( header ) ; println ( ) ; }
36683	public String elementName ( ) { return elementName ; }
36688	private static void checkTypeSafe ( Collection < ? > c ) { try { Role r ; for ( Object o : c ) r = ( Role ) o ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( e ) ; } }
36694	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementnormalize . class , args ) ; }
36703	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( localName01 . class , args ) ; }
36709	public Referral removeReferral ( String referralName ) { return referrals . removeReferral ( referralName ) ; }
36715	public int next ( ) { int next = _currentNode ; int pos = -- m_ancestorsPos ; _currentNode = ( pos >= _NUM ) ? m_ancestors . elementAt ( m_ancestorsPos ) : DTM . NULL ; return returnNode ( next ) ; }
36738	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodecommentnodeattributes . class , args ) ; }
36752	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeentityreferencenodeattributes . class , args ) ; }
36763	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported14 . class , args ) ; }
36764	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementremoveattributenode . class , args ) ; }
36769	public void paintRootPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
36776	public static JsonValue jsonFromFile ( String resourceFilePath ) throws IOException { final InputStream configStream = JsonUtils . class . getResourceAsStream ( resourceFilePath ) ; return new JsonValue ( MAPPER . readValue ( configStream , Map . class ) ) ; }
36777	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
36784	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeentitynodetype . class , args ) ; }
36791	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatainsertdataend . class , args ) ; }
36803	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized E lastElement ( ) { try { return ( E ) elementData [ elementCount - _NUM ] ; } catch ( IndexOutOfBoundsException e ) { throw new NoSuchElementException ( ) ; } }
36804	public final int decrementAndGet ( ) { return unsafe . getAndAddInt ( this , valueOffset , - _NUM ) - _NUM ; }
36813	public void addEvent ( String e ) { if ( TextUtils . isEmpty ( e ) ) { return ; } if ( event == _NULL ) { event = new WXEvent ( ) ; } if ( containsEvent ( e ) ) { return ; } event . add ( e ) ; }
36847	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
36891	public String toString ( ) { try { return XMLUtils . print ( toDocument ( _BOOL ) . getDocumentElement ( ) ) ; } catch ( Exception ex ) { Utils . debug . error ( _CHAR Message . toString _CHAR , ex ) ; return _CHAR _CHAR ; } }
36905	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getNamedItemNS02 . class , args ) ; }
36923	private Object readResolve ( ) { if ( loadedScripts == _NULL ) loadedScripts = new HashMap < String , String > ( ) ; return this ; }
36925	public static void restartBridge ( boolean debug ) { WXEnvironment . sDebugMode = debug ; WXSDKManager . getInstance ( ) . restartBridge ( ) ; }
36947	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( noderemovechildnode . class , args ) ; }
36953	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodesetprefix03 . class , args ) ; }
36977	public void mark ( int readAheadLimit ) throws IOException { in . mark ( readAheadLimit ) ; }
36979	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( notationgetsystemid . class , args ) ; }
37010	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetfirstchildnull . class , args ) ; }
37040	public void clearAuthContext ( ) { this . authContext = _NULL ; }
37066	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; }
37077	public void start_polygonshape_item ( Point2D p_point ) { if ( board_is_read_only ) return ; PlaPointFloat location = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; set_interactive_state ( StateConstructPolygon . get_instance ( location , interactive_state , this , actlog ) ) ; }
37089	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatadeletedataexceedslength . class , args ) ; }
37095	public int hashCode ( ) { return toString ( ) . hashCode ( ) ; }
37100	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
37108	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeattributenodetype . class , args ) ; }
37112	public Builder withAccessKey ( String accessKey ) { config . setAccessKey ( accessKey ) ; return this ; }
37123	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; for ( IRenderer renderer : childRenderers ) { sb . append ( renderer . toString ( ) ) ; } return sb . toString ( ) ; }
37147	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeprocessinginstructionnodetype . class , args ) ; }
37186	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatadeletedatanomodificationallowederr . class , args ) ; }
37190	public void startDiskSpaceMonitor ( ) { DirectoryServer . registerMonitorProvider ( this ) ; DirectoryServer . registerShutdownListener ( this ) ; scheduleUpdate ( this , _NUM , _NUM , TimeUnit . SECONDS ) ; }
37199	private void sendNewFakeUpdate ( ) throws TimeoutException { DeleteMsg delMsg = new DeleteMsg ( getBaseDN ( ) , gen . newCSN ( ) , UUID . randomUUID ( ) . toString ( ) ) ; prepareWaitForAckIfAssuredEnabled ( delMsg ) ; publish ( delMsg ) ; waitForAckIfAssuredEnabled ( delMsg ) ; }
37206	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodenormalize01 . class , args ) ; }
37207	public String createServiceFuncName ( String apiTypeName ) { return publicMethodName ( Name . upperCamel ( _CHAR Create _CHAR , apiTypeName , _CHAR Service _CHAR ) ) ; }
37221	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrinsertdataoffsetgreater . class , args ) ; }
37222	public static void validateProperty ( Set < String > properties ) throws UnknownPropertyNameException , ConfigurationException { try { Map propertiesAsMap = ServerConfiguration . getProperties ( properties ) ; validate ( propertiesAsMap ) ; } catch ( IOException ex ) { throw new ConfigurationException ( ex . getMessage ( ) ) ; } }
37223	private static boolean eq ( Object o1 , Object o2 ) { return ( o1 == _NULL ) ? o2 == _NULL : o1 . equals ( o2 ) ; }
37230	public R visitIPAddressMask ( IPAddressMaskPropertyDefinition pd , P p ) { return visitUnknown ( pd , p ) ; }
37232	private static StringBuilder dump ( StringBuilder _cbuffer , byte value ) { for ( int j = _NUM ; j < _NUM ; j ++ ) { _cbuffer . append ( _hexcodes [ value >> _shifts [ j + _NUM ] & _NUM ] ) ; } return _cbuffer ; }
37233	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { super . beginDisplay ( event ) ; String serverName = ( String ) getPageSessionAttribute ( ServerEditViewBeanBase . PG_ATTR_SERVER_NAME ) ; ServerSiteModel model = ( ServerSiteModel ) getModel ( ) ; ptModel . setPageTitleText ( model . getEditServerPageTitle ( serverName ) ) ; getProperties ( ) ; }
37240	public int width ( ) { return box_ur . v_x - box_ll . v_x ; }
37260	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS13 . class , args ) ; }
37300	static KeyPair newKeyPair ( ) throws NoSuchAlgorithmException { KeyPairGenerator keyPairGenerator = KeyPairGenerator . getInstance ( _CHAR RSA _CHAR ) ; keyPairGenerator . initialize ( _NUM ) ; return keyPairGenerator . generateKeyPair ( ) ; }
37306	public static String htmlDecode ( final String encodedHtml ) { validate ( encodedHtml , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; String [ ] entities = encodedHtml . split ( _CHAR & \\ W + ; _CHAR ) ; return Arrays . stream ( entities ) . map ( _NULL ) . collect ( joining ( ) ) ; }
37310	public boolean isFromBonemeal ( ) { return bonemeal ; }
37330	public boolean delete ( final String alias ) { try { this . keyStore . deleteEntry ( alias ) ; this . dirty . set ( _BOOL ) ; return _BOOL ; } catch ( final KeyStoreException ex ) { KeyStoreHandler . LOGGER . debug ( _CHAR Entry _CHAR not deleted . '' , alias , ex ) ; return _BOOL ; } }
37378	public static PropertyException propertyIsMandatoryException ( final PropertyDefinition < ? > pd ) { return new PropertyException ( pd , ERR_PROPERTY_IS_MANDATORY_EXCEPTION . get ( pd . getName ( ) ) ) ; }
37379	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodelisttraverselist . class , args ) ; }
37416	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_textsplittexttwo . class , args ) ; }
37418	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNodeNS02 . class , args ) ; }
37423	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . dsconfig ( _CHAR set - sasl - mechanism - handler - prop _CHAR , _CHAR -- handler - name _CHAR , _CHAR DIGEST - MD5 _CHAR , _CHAR -- set _CHAR , _CHAR server - fqdn : _CHAR + _CHAR _NUM . _NUM . _NUM . _NUM _CHAR ) ; }
37430	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodenomodificationallowederrEE . class , args ) ; }
37441	public void mouseEntered ( MouseEvent e ) { if ( e . getSource ( ) == BasicSplitPaneDivider . this ) { setMouseOver ( _BOOL ) ; } }
37448	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
37451	private int nextTlsMode ( ) { if ( nextTlsMode == TLS_MODE_MODERN ) { nextTlsMode = TLS_MODE_COMPATIBLE ; return TLS_MODE_MODERN ; } else if ( nextTlsMode == TLS_MODE_COMPATIBLE ) { nextTlsMode = TLS_MODE_NULL ; return TLS_MODE_COMPATIBLE ; } else { throw new AssertionError ( ) ; } }
37497	public int capacity ( ) { return delegate . capacity ( ) ; }
37503	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetattributenodens03 . class , args ) ; }
37505	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( systemId01 . class , args ) ; }
37506	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns10 . class , args ) ; }
37507	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodevalue01 . class , args ) ; }
37521	boolean isTrusted ( ) { for ( Index index : indexIdToIndexes . values ( ) ) { if ( ! index . isTrusted ( ) ) { return _BOOL ; } } return _BOOL ; }
37526	@ DataProvider private Object [ ] [ ] algorithms ( ) { return new Object [ ] [ ] { { _CHAR AES / CBC / NoPadding _CHAR } , { _CHAR AES / CBC / PKCS5Padding _CHAR } , { _CHAR AES / ECB / NoPadding _CHAR } , { _CHAR AES / ECB / PKCS5Padding _CHAR } , { _CHAR DES / CBC / NoPadding _CHAR } , { _CHAR DES / CBC / PKCS5Padding _CHAR } , { _CHAR DES / ECB / NoPadding _CHAR } , { _CHAR DES / ECB / PKCS5Padding _CHAR } , { _CHAR DESede / CBC / NoPadding _CHAR } , { _CHAR DESede / CBC / PKCS5Padding _CHAR } , { _CHAR DESede / ECB / NoPadding _CHAR } , { _CHAR DESede / ECB / PKCS5Padding _CHAR } , { _CHAR RSA / ECB / PKCS1Padding _CHAR } , { _CHAR RSA / ECB / OAEPWithSHA - _NUM _CHAR } , { _CHAR RSA / ECB / OAEPWithSHA - _NUM _CHAR } } ; }
37541	public boolean hasAdvices ( ) { return advicesAreSet ; }
37545	public static boolean isValidMaskPattern ( int maskPattern ) { return maskPattern >= _NUM && maskPattern < NUM_MASK_PATTERNS ; }
37546	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetattributenodens01 . class , args ) ; }
37558	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodesetprefix07 . class , args ) ; }
37562	@ Override public void heartbeat ( ) { if ( getTransport ( ) != _NULL ) getTransport ( ) . keepalive ( ) ; }
37579	@ Override public int hashCode ( ) { return ( ( int ) ( seconds ^ ( seconds >> > _NUM ) ) ) + _NUM * nanos ; }
37587	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementretrieveallattributes . class , args ) ; }
37599	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_textsplittextthree . class , args ) ; }
37623	@ Override public long contentLength ( ) { long size ; try { size = Long . parseLong ( request . getHeader ( FileUploadBase . CONTENT_LENGTH ) ) ; } catch ( NumberFormatException e ) { size = request . getContentLength ( ) ; } return size ; }
37635	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
37638	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
37648	@ AfterClass public void shutdown ( ) { TestPasswordValidator . clearInstanceAfterTests ( ) ; }
37649	public final int _firstch2 ( int identity ) { if ( identity < m_blocksize ) return m_firstch_map0 [ identity ] ; else return m_firstch_map [ identity >> > m_SHIFT ] [ identity & m_MASK ] ; }
37656	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrhaschildnodes . class , args ) ; }
37666	@ DataProvider ( name = _CHAR stateMachineStatusAnalyzerTestProvider _CHAR ) public Object [ ] [ ] stateMachineStatusAnalyzerTestProvider ( ) throws Exception { return new Object [ ] [ ] { { _NUM } , { _NUM } , { _NUM } , { _NUM } } ; }
37672	public boolean encryptAssertion ( ) { return encryptAssertion ; }
37674	private void cancelClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
37690	public SAML2ConfigBuilder customAuthenticationStatementsProviderClassName ( String customAuthenticationStatementsProviderClassName ) { this . customAuthenticationStatementsProviderClassName = customAuthenticationStatementsProviderClassName ; return this ; }
37692	public synchronized String toString ( ) { String params = _CHAR autoDelay = _CHAR + getAutoDelay ( ) + _CHAR , '' + '' autoWaitForIdle = _CHAR + isAutoWaitForIdle ( ) ; return getClass ( ) . getName ( ) + _CHAR [ _CHAR + params + _CHAR ] _CHAR ; }
37699	public static FileBasedArgument trustStorePasswordFileArgument ( ) throws ArgumentException { return FileBasedArgument . builder ( OPTION_LONG_TRUSTSTORE_PWD_FILE ) . shortIdentifier ( OPTION_SHORT_TRUSTSTORE_PWD_FILE ) . description ( INFO_DESCRIPTION_TRUSTSTOREPASSWORD_FILE . get ( ) ) . valuePlaceholder ( INFO_TRUSTSTORE_PWD_FILE_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
37723	public static boolean isProtected ( int mod ) { return ( mod & ACC_PROTECTED ) != _NUM ; }
37727	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documenttypesystemid01 . class , args ) ; }
37730	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatasubstringexceedsvalue . class , args ) ; }
37753	private void writeInternal ( byte [ ] b , int off , int len ) throws IOException { if ( listener == _NULL ) { socketWrapper . write ( _BOOL , b , off , len ) ; } else { socketWrapper . write ( _BOOL , b , off , len ) ; } }
37754	@ Override public void removeAll ( ) { for ( Foo foo : findAll ( ) ) { remove ( foo ) ; } }
37767	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateattributeNS01 . class , args ) ; }
37776	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
37777	public boolean isEmpty ( ) { return startPoint == _NULL ; }
37779	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapreturnattrnode . class , args ) ; }
37782	public void addAttribute ( String rawName , String value ) { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . addAttribute ( rawName , value ) ; }
37783	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
37789	public void elementDecl ( String arg0 , String arg1 ) throws SAXException { if ( m_firstTagNotEmitted ) { emitFirstTag ( ) ; } m_handler . elementDecl ( arg0 , arg1 ) ; }
37806	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeappendchildchildexists . class , args ) ; }
37829	public void startDTD ( String name , String publicId , String systemId ) throws SAXException { m_handler . startDTD ( name , publicId , systemId ) ; }
37842	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
37871	public static void assertArrayName ( String arrayName ) throws XMPException { if ( arrayName == _NULL || arrayName . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty array name _CHAR , XMPError . BADPARAM ) ; } }
37878	public static void assertNotNull ( Object param ) throws XMPException { if ( param == _NULL ) { throw new XMPException ( _CHAR Parameter must not be _NULL _CHAR , XMPError . BADPARAM ) ; } else if ( ( param instanceof String ) && ( ( String ) param ) . length ( ) == _NUM ) { throw new XMPException ( _CHAR Parameter must not be _NULL or empty _CHAR , XMPError . BADPARAM ) ; } }
37885	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
37888	public byte [ ] bytes ( ) { return bytes ; }
37923	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforerefchildnonexistent . class , args ) ; }
37931	public String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _CHAR CollectionCertStoreParameters : [ \ n _CHAR ) ; sb . append ( _CHAR collection : _CHAR + coll + _CHAR \ n _CHAR ) ; sb . append ( _CHAR ] _CHAR ) ; return sb . toString ( ) ; }
37935	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodehaschildnodesfalse . class , args ) ; }
37937	public final boolean equals ( Node node ) { try { DTMNodeProxy dtmp = ( DTMNodeProxy ) node ; return ( dtmp . node == this . node ) && ( dtmp . dtm == this . dtm ) ; } catch ( ClassCastException cce ) { return _BOOL ; } }
37939	public void disable_layer_item ( int p_no ) { if ( change_layer_menu != _NULL ) { change_layer_menu . disable_item ( p_no ) ; } }
37943	public URI toURI ( ) throws URISyntaxException { return new URI ( toExternalForm ( ) ) ; }
37972	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodevalue09 . class , args ) ; }
37980	public void writeLog ( String msgId , String msg , String userDN ) { String [ ] obj = { userDN } ; logger . doLog ( MessageFormat . format ( getLocalizedString ( msgId ) , ( Object [ ] ) obj ) + _CHAR _CHAR + msg ) ; }
37983	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapgetnameditemns06 . class , args ) ; }
37984	public void removeRestrictedDomains ( Collection < String > domainNames ) { Lists . removeAll ( restrictedDomains , domainNames ) ; }
37992	public void paintTextPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
38000	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforeinvalidnodetype . class , args ) ; }
38004	public static AsymmetricKeyParameter createKey ( byte [ ] keyInfoData ) throws IOException { return createKey ( SubjectPublicKeyInfo . getInstance ( ASN1Primitive . fromByteArray ( keyInfoData ) ) ) ; }
38022	private boolean hasChar ( ) { return this . pos < this . len ; }
38026	public static CharSequence downloadViaHttp ( String uri , ContentType type ) throws IOException { return downloadViaHttp ( uri , type , Integer . MAX_VALUE ) ; }
38029	public static MultiLineString fromJson ( String json ) { GsonBuilder gson = new GsonBuilder ( ) ; gson . registerTypeAdapter ( Position . class , new PositionDeserializer ( ) ) ; return gson . create ( ) . fromJson ( json , MultiLineString . class ) ; }
38035	@ Override protected URLConnection openConnection ( URL u ) throws IOException { return new FtpURLConnection ( u ) ; }
38039	public boolean isVerbose ( ) { return verboseArg . isPresent ( ) ; }
38042	public void clearStack ( ) { top = _NUM ; }
38047	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodenotationnodeattributes . class , args ) ; }
38050	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodereplacechildnomodificationallowederrEE . class , args ) ; }
38053	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrprevioussiblingnull . class , args ) ; }
38058	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttributeNS05 . class , args ) ; }
38072	public void accessed ( ) { lastHeardFrom = System . currentTimeMillis ( ) ; }
38078	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementinvalidcharacterexception1 . class , args ) ; }
38100	public final void errPrint ( final LocalizableMessage msg ) { getErrStream ( ) . print ( wrap ( msg ) ) ; }
38145	public void endPrefixMapping ( String prefix ) { }
38152	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
38156	public boolean isWriteable ( ) { return ( this . writeable ) ; }
38162	@ Override public String toString ( ) { return ( _CHAR ContainerEvent [ _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR ] _CHAR ) ; }
38179	public boolean containsValue ( Object value ) { return map . containsValue ( value ) ; }
38205	public Object clone ( ) { GenericObjectList retval = ( GenericObjectList ) super . clone ( ) ; for ( ListIterator < GenericObject > iter = retval . listIterator ( ) ; iter . hasNext ( ) ; ) { GenericObject obj = ( GenericObject ) ( ( GenericObject ) iter . next ( ) ) . clone ( ) ; iter . set ( obj ) ; } return retval ; }
38218	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createElementNS01 . class , args ) ; }
38219	public Observable < Boolean > existsJobObservable ( long id ) { io . vertx . rx . java . ObservableFuture < Boolean > handler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; existsJob ( id , handler . toHandler ( ) ) ; return handler ; }
38225	@ DataProvider ( name = _CHAR dataForAttributeRename _CHAR ) public Object [ ] [ ] dataForAttributeRename ( ) { return new Object [ ] [ ] { { _CHAR cn _CHAR , _CHAR cn _CHAR , _BOOL } , { _CHAR CN _CHAR , _CHAR cn _CHAR , _BOOL } , { _CHAR objectClass _CHAR , _CHAR cn _CHAR , _BOOL } , { _CHAR cn ; foo _CHAR , _CHAR cn _CHAR , _BOOL } } ; }
38269	public final boolean isEnabled ( SmileParser . Feature f ) { return ( _smileParserFeatures & f . getMask ( ) ) != _NUM ; }
38270	public double num ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return ( m_left . num ( xctxt ) * m_right . num ( xctxt ) ) ; }
38277	public Object newTransport ( HttpEngine httpEngine ) throws IOException { return ( spdyConnection != _NULL ) ? new SpdyTransport ( httpEngine , spdyConnection ) : new HttpTransport ( httpEngine , out , in ) ; }
38289	static BigInteger multiplyByPositiveInt ( BigInteger val , int factor ) { BigInt bi = val . getBigInt ( ) . copy ( ) ; bi . multiplyByPositiveInt ( factor ) ; return new BigInteger ( bi ) ; }
38296	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; if ( getParent ( ) != _NULL ) { sb . append ( getParent ( ) . toString ( ) ) ; sb . append ( _CHAR . _CHAR ) ; } sb . append ( _CHAR StandardContext [ _CHAR ) ; sb . append ( getName ( ) ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
38299	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode12 . class , args ) ; }
38323	public boolean equals ( Object o ) { if ( o instanceof ServiceConfigManager ) { ServiceConfigManagerImpl oscm = ( ServiceConfigManagerImpl ) o ; if ( serviceName . equals ( oscm . serviceName ) && version . equals ( oscm . version ) ) { return ( _BOOL ) ; } } return ( _BOOL ) ; }
38328	public boolean equalArrayTypes ( PropertyOptions options ) { return isArray ( ) == options . isArray ( ) && isArrayOrdered ( ) == options . isArrayOrdered ( ) && isArrayAlternate ( ) == options . isArrayAlternate ( ) && isArrayAltText ( ) == options . isArrayAltText ( ) ; }
38354	public static boolean containsAll ( final String value , final String [ ] needles , final boolean caseSensitive ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return Arrays . stream ( needles ) . allMatch ( _NULL ) ; }
38357	public void paintInternalFrameBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
38365	@ SuppressWarnings ( { _CHAR rawtypes _CHAR , _CHAR unchecked _CHAR } ) private static List toSimpleModel ( Set setToClean ) { List replacementList = new ArrayList ( ) ; for ( Object setEntry : setToClean ) { replacementList . add ( asSimpleBinding ( setEntry ) ) ; } return replacementList ; }
38370	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeclonefalsenocopytext . class , args ) ; }
38371	public String encode ( ) { if ( urlString != _NULL ) { return URI_FIELD + urlString + Separators . NEWLINE ; } else if ( url != _NULL ) { return URI_FIELD + url . toString ( ) + Separators . NEWLINE ; } else return _CHAR _CHAR ; }
38379	public void removeSwipeListener ( SwipeListener listener ) { if ( mListeners == _NULL ) { return ; } mListeners . remove ( listener ) ; }
38382	public void start_route ( Point2D p_point ) { if ( board_is_read_only ) return ; PlaPointFloat location = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; StateInteractive new_state = StateRoute . get_instance ( location , interactive_state , this , actlog ) ; set_interactive_state ( new_state ) ; }
38390	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeclonenodefalse . class , args ) ; }
38409	@ Override public Animation onCreateAnimation ( final int transit , final boolean enter , final int nextAnim ) { return delegate . onCreateAnimation ( transit , enter , nextAnim ) ; }
38411	private ViewAction scroll ( ) { return new GeneralSwipeAction ( Swipe . SLOW , GeneralLocation . BOTTOM_CENTER , GeneralLocation . TOP_CENTER , Press . FINGER ) ; }
38413	public boolean isRepeatable ( ) { return _BOOL ; }
38428	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( textsplittextone . class , args ) ; }
38448	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeappendchildgetnodename . class , args ) ; }
38459	private static void assertEcho ( String result , String expected ) { Assert . assertTrue ( result , result . indexOf ( _CHAR < p > _CHAR + expected + _CHAR < / p > _CHAR ) > _NUM ) ; }
38462	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementhasattributens03 . class , args ) ; }
38463	public void cleanup ( SQLiteDatabase db ) { Log . w ( TAG , _CHAR Resetting database _CHAR ) ; dropTables ( db ) ; onCreate ( db ) ; }
38485	protected boolean isAccessToUnderlyingConnectionAllowed ( ) { return accessToUnderlyingConnectionAllowed ; }
38488	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( cdatasectiongetdata . class , args ) ; }
38499	private boolean isBleEnabled ( ) { final BluetoothManager bm = ( BluetoothManager ) getActivity ( ) . getSystemService ( Context . BLUETOOTH_SERVICE ) ; final BluetoothAdapter ba = bm . getAdapter ( ) ; return ba != _NULL && ba . isEnabled ( ) ; }
38506	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeattributenodevalue . class , args ) ; }
38510	public void generate_snapshot ( ) { undo_list . generate_snapshot ( ) ; }
38516	public void addAll ( ResourceSaveIndexes other ) { this . hostIndexes . addAll ( other . hostIndexes ) ; this . pathIndexes . addAll ( other . pathIndexes ) ; this . parentPath . addAll ( other . parentPath ) ; }
38521	public void clearParameters ( ) { synchronized ( m_reentryGuard ) { VariableStack varstack = new VariableStack ( ) ; m_xcontext . setVarStack ( varstack ) ; m_userParams = _NULL ; } }
38531	protected boolean isLocalServerId ( String serverId ) { return ( serverId != _NULL && serverId . equalsIgnoreCase ( localServerId ) ) ; }
38555	public boolean isImageFile ( JecFile file ) { return ! file . isDirectory ( ) && isImageFile ( file . getName ( ) ) ; }
38559	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
38563	public static LDAPURL makeLDAPUrl ( HostPort hostPort , String dn , boolean isLdaps ) { return new LDAPURL ( isLdaps ? _CHAR ldaps _CHAR : LDAPURL . DEFAULT_SCHEME , hostPort . getHost ( ) , hostPort . getPort ( ) , dn , _NULL , SearchScope . BASE_OBJECT , _NULL , _NULL ) ; }
38572	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setNamedItemNS02 . class , args ) ; }
38581	public void paintRootPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
38607	@ Override public final int hashCode ( ) { return holder . hashCode ( ) ; }
38612	private void clearDbs ( ) { try { domainDB . removeDomain ( baseDN ) ; } catch ( ChangelogException e ) { logger . error ( ERR_ERROR_CLEARING_DB , baseDN , e . getMessage ( ) , e ) ; } }
38616	public boolean isExpired ( ) { return currentTimeMillis ( ) > getExpiryTime ( ) ; }
38621	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns01 . class , args ) ; }
38656	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetlastchildnull . class , args ) ; }
38668	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementremoveattributeaftercreate . class , args ) ; }
38714	@ Override public String toString ( ) { return _CHAR L _CHAR + System . identityHashCode ( this ) ; }
38725	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeelementnodename . class , args ) ; }
38729	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( processinginstructiongetdata . class , args ) ; }
38739	@ Override public boolean contains ( Object object ) { return indexOf ( object , _NUM ) != - _NUM ; }
38741	public static Polygon fromJson ( String json ) { GsonBuilder gson = new GsonBuilder ( ) ; gson . registerTypeAdapter ( Position . class , new PositionDeserializer ( ) ) ; return gson . create ( ) . fromJson ( json , Polygon . class ) ; }
38746	public static BooleanArgument acceptLicenseArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_ACCEPT_LICENSE ) . description ( INFO_OPTION_ACCEPT_LICENSE . get ( ) ) . buildArgument ( ) ; }
38773	public boolean isInherited ( ) { return type == Type . INHERITED ; }
38775	public void paintTextAreaBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
38793	public void paintMenuBarBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
38797	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documenttypegetentities . class , args ) ; }
38802	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . fragment_news_code_scan ) ; mContext = this ; CameraManager . init ( getApplication ( ) ) ; initControl ( ) ; hasSurface = _BOOL ; inactivityTimer = new InactivityTimer ( this ) ; }
38814	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( textindexsizeerrnegativeoffset . class , args ) ; }
38825	@ Override public String [ ] findMappings ( ) { mappingsLock . readLock ( ) . lock ( ) ; try { return mappings . toArray ( new String [ mappings . size ( ) ] ) ; } finally { mappingsLock . readLock ( ) . unlock ( ) ; } }
38836	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNS01 . class , args ) ; }
38853	public static ThreadFactory privilegedThreadFactory ( ) { return new PrivilegedThreadFactory ( ) ; }
38858	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetprevioussiblingnull . class , args ) ; }
38860	public static StringArgument baseDNArgument ( ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_BASEDN ) . shortIdentifier ( OPTION_SHORT_BASEDN ) . description ( INFO_ARGUMENT_DESCRIPTION_BASEDN . get ( ) ) . multiValued ( ) . valuePlaceholder ( INFO_BASEDN_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
38864	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementhasattributens02 . class , args ) ; }
38926	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocument04 . class , args ) ; }
38928	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
38937	public RequestedAuthnContext createRequestedAuthnContext ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTED_AUTHN_CONTEXT , value ) ; if ( obj == _NULL ) { return new RequestedAuthnContextImpl ( value ) ; } else { return ( RequestedAuthnContext ) obj ; } }
38940	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeentitynodeattributes . class , args ) ; }
38951	@ Override public synchronized boolean isAccessToUnderlyingConnectionAllowed ( ) { return this . accessToUnderlyingConnectionAllowed ; }
38955	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodereplacechildnewchilddiffdocument . class , args ) ; }
38957	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
38965	public void removePrivilege ( String privilegeName ) throws DelegationException { if ( pluginInstance != _NULL ) { try { pluginInstance . removePrivilege ( token , orgName , privilegeName ) ; } catch ( SSOException se ) { throw new DelegationException ( se ) ; } } else { throw new DelegationException ( ResBundleUtils . rbName , _CHAR no_plugin_specified _CHAR , _NULL , _NULL ) ; } }
38968	private Dimension insetSize ( Container parent ) { Insets insets = parent . getInsets ( ) ; int w = insets . left + insets . right ; int h = insets . top + insets . bottom ; return new Dimension ( w , h ) ; }
38975	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateelementNS06 . class , args ) ; }
39018	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemns07 . class , args ) ; }
39023	public static StringArgument bindPasswordArgument ( ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_BINDPWD ) . shortIdentifier ( OPTION_SHORT_BINDPWD ) . description ( INFO_DESCRIPTION_BINDPASSWORD . get ( ) ) . valuePlaceholder ( INFO_BINDPWD_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
39049	public boolean isMarked ( ) { return pair . mark ; }
39055	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapnotfounderr . class , args ) ; }
39058	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetownerdocument . class , args ) ; }
39081	public static boolean isRegistered ( String fontName ) { return FontProgramFactory . isRegisteredFont ( fontName ) ; }
39088	public boolean isSaved ( ) { return saved ; }
39102	public boolean isEnabled ( ) { return enabled ; }
39113	public void addNotification ( Notification notification ) { notificationVector . addElement ( notification ) ; }
39116	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNS10 . class , args ) ; }
39119	public void handleButton1Request ( RequestInvocationEvent event ) { removePageSessionAttribute ( getTrackingTabIDName ( ) ) ; setPageSessionAttribute ( getTrackingTabIDName ( ) , Integer . toString ( TAB_PROFILE ) ) ; forwardToEntitiesViewBean ( ) ; }
39126	@ Override public int intValue ( ) { return value ; }
39133	public JsonValue toJsonValue ( ) { JsonValue invalidJson = json ( object ( field ( _CHAR archive _CHAR , archiveFileName ) , field ( _CHAR reason _CHAR , getMessage ( ) ) ) ) ; if ( _NULL != getCause ( ) ) { invalidJson . put ( _CHAR errorMessage _CHAR , getCause ( ) . getMessage ( ) ) ; } return invalidJson ; }
39141	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createElementNS06 . class , args ) ; }
39149	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodevalue02 . class , args ) ; }
39153	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeissupported02 . class , args ) ; }
39159	public void add ( T value ) { data . add ( value ) ; }
39163	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatagetlength . class , args ) ; }
39175	public static void closeAndDeleteLogFile ( ) { if ( logFile != _NULL ) { fileHandler . close ( ) ; logFile . delete ( ) ; } }
39180	public boolean hasMembers ( ) { return members . length > _NUM ; }
39183	public boolean isValid ( ) { return messenger . isRegistrationValid ( this ) ; }
39184	public Event35Log . Builder clearEventCount ( ) { eventCount = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
39196	static float min ( float red , float green , float blue ) { float min = ( red < green ) ? red : green ; return ( min < blue ) ? min : blue ; }
39201	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( removeNamedItemNS01 . class , args ) ; }
39202	public int next ( ) { final int node = _currentNode ; _currentNode = NULL ; return returnNode ( node ) ; }
39209	public static boolean isModifyAnnotationsAllowed ( int permissions ) { return ( EncryptionConstants . ALLOW_MODIFY_ANNOTATIONS & permissions ) == EncryptionConstants . ALLOW_MODIFY_ANNOTATIONS ; }
39213	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
39221	private MemberName loadMethod ( byte [ ] classFile ) { Class < ? > invokerClass = loadAndInitializeInvokerClass ( classFile , cpPatches ( classFile ) ) ; return resolveInvokerMember ( invokerClass , invokerName , invokerType ) ; }
39226	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrreplacechild1 . class , args ) ; }
39231	LambdaFormBuffer replaceParameterByNewExpression ( int pos , Name binding ) { assert ( ! binding . isParam ( ) ) ; assert ( lastIndexOf ( binding ) < _NUM ) ; replaceName ( pos , binding ) ; return this ; }
39251	public void endMethod ( ) { if ( ( access & Opcodes . ACC_ABSTRACT ) == _NUM ) { mv . visitMaxs ( _NUM , _NUM ) ; } mv . visitEnd ( ) ; }
39253	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementgetelementsbytagname . class , args ) ; }
39255	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapchildnoderange . class , args ) ; }
39267	private SAXParseException makeException ( String message ) { if ( locator != _NULL ) { return new SAXParseException ( message , locator ) ; } else { return new SAXParseException ( message , _NULL , _NULL , - _NUM , - _NUM ) ; } }
39275	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeprocessinginstructionnodename . class , args ) ; }
39306	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodecloneattributescopied . class , args ) ; }
39311	void invoke ( @ NonNull EventBus bus , @ NonNull Object event ) { try { Object subscriber = mSubscriber . get ( ) ; if ( subscriber != _NULL ) { mMethod . invoke ( subscriber , event ) ; } } catch ( InvocationTargetException e ) { } catch ( Throwable e ) { e . printStackTrace ( ) ; } }
39320	public final boolean isEnabled ( CBORParser . Feature f ) { return ( _formatParserFeatures & f . getMask ( ) ) != _NUM ; }
39323	public static boolean isInt ( String desc ) { return desc . endsWith ( _CHAR I _CHAR ) ; }
39345	public boolean equals ( Object o ) { if ( ! ( o instanceof FormatInformation ) ) { return _BOOL ; } FormatInformation other = ( FormatInformation ) o ; return this . errorCorrectionLevel == other . errorCorrectionLevel && this . dataMask == other . dataMask ; }
39372	public void trigger ( Date time ) { taskList . remove ( time ) ; }
39374	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
39382	void addReplica ( ReplicaDescriptor replica ) { replicas . add ( replica ) ; }
39388	static float max ( float red , float green , float blue ) { float max = ( red > green ) ? red : green ; return ( max > blue ) ? max : blue ; }
39412	public void disable_layer_item ( int p_no ) { if ( change_layer_menu != _NULL ) { change_layer_menu . disable_item ( p_no ) ; } }
39415	public void loadPatterns ( InputStream stream , String name ) throws HyphenationException { PatternParser pp = new PatternParser ( this ) ; ivalues = new TernaryTree ( ) ; pp . parse ( stream , name ) ; trimToSize ( ) ; vspace . trimToSize ( ) ; classmap . trimToSize ( ) ; ivalues = _NULL ; }
39418	public PlaSegmentFloat opposite ( ) { return new PlaSegmentFloat ( point_b , point_a ) ; }
39420	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodesetnodevaluenomodificationallowederr . class , args ) ; }
39434	public int checkCount ( ) { return filesPerKeystoreCounter ; }
39435	public void paintToolTipBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
39447	public java . lang . String toXMLString ( ) throws com . sun . identity . saml2 . common . SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
39448	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatainsertdataend . class , args ) ; }
39450	public void internalFrameActivated ( InternalFrameEvent e ) { }
39476	public void endCDATA ( ) throws SAXException { m_handler . endCDATA ( ) ; }
39485	public Origin createOrigin ( String userName , String address ) throws SdpException { OriginField originImpl = new OriginField ( ) ; originImpl . setUsername ( userName ) ; originImpl . setAddress ( address ) ; originImpl . setNetworkType ( SDPKeywords . IN ) ; originImpl . setAddressType ( SDPKeywords . IPV4 ) ; return originImpl ; }
39513	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeclonegetparentnull . class , args ) ; }
39514	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataappenddatanomodificationallowederr . class , args ) ; }
39516	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodetextnodeattribute . class , args ) ; }
39538	public BandWidth createBandwidth ( String modifier , int value ) { BandwidthField bandWidthImpl = new BandwidthField ( ) ; try { bandWidthImpl . setType ( modifier ) ; bandWidthImpl . setValue ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return bandWidthImpl ; }
39553	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
39569	private final void addToTokenQueue ( String s ) { m_compiler . getTokenQueue ( ) . addElement ( s ) ; }
39592	public void paintDesktopPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
39594	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
39614	public void zoom_region ( ) { interactive_state = new StateSelectRegionZoom ( interactive_state , this , actlog , _NULL ) ; }
39644	public static StringArgument controlArgument ( ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_CONTROL ) . shortIdentifier ( OPTION_SHORT_CONTROL ) . description ( INFO_DESCRIPTION_CONTROLS . get ( ) ) . docDescriptionSupplement ( SUPPLEMENT_DESCRIPTION_CONTROLS . get ( ) ) . multiValued ( ) . valuePlaceholder ( INFO_LDAP_CONTROL_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
39652	public static void bindContext ( Object obj , Context context ) { bindContext ( obj , context , _NULL ) ; }
39654	private static boolean isSeparator ( char ch ) { return ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR ; }
39681	public static String toString ( URL url , String encoding ) throws IOException { return toString ( url , Charsets . toCharset ( encoding ) ) ; }
39695	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforenodename . class , args ) ; }
39703	@ Override public int read ( char [ ] chars ) throws IOException { return read ( chars , _NUM , chars . length ) ; }
39708	@ Deprecated protected PdfFormXObject drawPushButtonAppearance ( float width , float height , String text , PdfFont font , int fontSize ) { return drawPushButtonAppearance ( width , height , text , font , ( float ) fontSize ) ; }
39726	public boolean hasIsdnSubaddress ( ) { return hasParm ( ISUB ) ; }
39727	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeentitysetnodevalue . class , args ) ; }
39735	public static void addExtensionHeader ( String headerName , String className ) { nameMap . put ( headerName . toLowerCase ( ) , className ) ; }
39781	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
39789	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrgetownerelement02 . class , args ) ; }
39797	public boolean isVisible ( ) { return visible ; }
39802	private static String translateArchNameToFolderName ( String archName ) { return archName . replaceAll ( _CHAR \\ W _CHAR , _CHAR _CHAR ) ; }
39834	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
39880	public void removeLast ( ) { if ( hlist . size ( ) != _NUM ) hlist . remove ( hlist . size ( ) - _NUM ) ; }
39899	public void addItem ( String key , PdfNumber n ) { PdfCollectionField field = schema . getField ( key ) ; if ( field . subType == PdfCollectionField . NUMBER ) { getPdfObject ( ) . put ( new PdfName ( key ) , n ) ; } }
39905	public TimeDescription createTimeDescription ( Time t ) throws SdpException { TimeDescriptionImpl timeDescriptionImpl = new TimeDescriptionImpl ( ) ; timeDescriptionImpl . setTime ( t ) ; return timeDescriptionImpl ; }
39906	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
39911	public Event35 . Builder clearEventID ( ) { eventID = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
39918	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
39924	public void endCDATA ( ) throws org . xml . sax . SAXException { if ( m_cdataTagOpen ) closeCDATA ( ) ; m_cdataStartCalled = _BOOL ; }
39932	public void error ( Level level , String messageId , String data [ ] , Object session ) throws LogException { error ( level , messageId , data , session , _NULL ) ; }
39936	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetattributenode . class , args ) ; }
39942	public static ReplicaId of ( DN baseDN , int serverId ) { return new ReplicaId ( baseDN , serverId ) ; }
39944	protected PStmtKey createKey ( final String sql , final int resultSetType , final int resultSetConcurrency , final StatementType stmtType ) { String catalog = _NULL ; try { catalog = getCatalog ( ) ; } catch ( final SQLException e ) { } return new PStmtKey ( normalizeSQL ( sql ) , catalog , resultSetType , resultSetConcurrency , stmtType ) ; }
39957	protected void registerListeners ( ) { component . addMouseListener ( this ) ; component . addMouseMotionListener ( this ) ; }
39970	private static void guessLetter ( int offset , char [ ] solution ) throws IOException { for ( char c = _NUM ; c < _NUM ; c ++ ) { if ( validChars [ c ] ) { solution [ offset ] = c ; checkAndSolve ( solution , _BOOL ) ; } } solution [ offset ] = _NUM ; }
39974	public boolean isTokenValid ( SSOToken token ) { return manager . isValidToken ( token ) ; }
39981	private void readObject ( java . io . ObjectInputStream stream ) throws IOException , ClassNotFoundException { if ( stubDelegate == _NULL ) { setDefaultDelegate ( ) ; } if ( stubDelegate != _NULL ) { stubDelegate . readObject ( this , stream ) ; } }
40002	public SipStatusLine createStatusLine ( String statusLine ) throws ParseException { StatusLineParser statusLineParser = new StatusLineParser ( statusLine ) ; return ( SipStatusLine ) statusLineParser . parse ( ) ; }
40007	public boolean encryptAttributes ( ) { return encryptAttributes ; }
40014	protected void close ( ) throws IOException { shutdownEntry ( ) ; if ( connection . isOpen ( ) ) connection . close ( ) ; }
40020	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationcreatedocument05 . class , args ) ; }
40027	public static boolean isFinal ( int mod ) { return ( mod & ACC_FINAL ) != _NUM ; }
40042	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttribute04 . class , args ) ; }
40045	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
40046	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentgetrootnode . class , args ) ; }
40051	public void remove ( int index ) { list . remove ( index ) ; }
40060	private ServiceTracker < ? , ? > initServiceTracker ( BundleContext context ) { ServiceTracker < ? , ? > tracker = new ServiceTrackerNotifier < > ( context , ClusterManagementService . class . getName ( ) , _NULL , this ) ; tracker . open ( ) ; return tracker ; }
40067	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; TestCaseUtils . clearBackend ( _CHAR userRoot _CHAR , _CHAR dc = example , dc = com _CHAR ) ; }
40070	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrparentnodenull . class , args ) ; }
40088	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforerefchildnull . class , args ) ; }
40103	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNS05 . class , args ) ; }
40117	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SecurityRoleRef [ _CHAR ) ; sb . append ( _CHAR name = _CHAR ) ; sb . append ( name ) ; if ( link != _NULL ) { sb . append ( _CHAR , link = _CHAR ) ; sb . append ( link ) ; } sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
40130	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributens05 . class , args ) ; }
40152	public boolean signAssertion ( ) { return signAssertion ; }
40154	public void resetAura ( ) { sMario . getRoot ( ) . getChildren ( ) . remove ( aura . getSpriteFrame ( ) ) ; enableAura = _BOOL ; aura . enableSuperAura ( ) ; removeStates ( _NUM ) ; godMode = _BOOL ; }
40160	public synchronized void addServiced ( String name ) { serviced . add ( name ) ; }
40169	private void buildInfo ( ) { Object lock = lock ( ) ; try { Document doc = getDocument ( ) ; Element root = doc . getDefaultRootElement ( ) ; rootElementInfo = new ElementInfo ( root ) ; rootElementInfo . validate ( ) ; } finally { unlock ( lock ) ; } }
40187	public Object defaultInstance ( Object bean ) throws InstantiationException , IllegalAccessException { return bean . getClass ( ) . newInstance ( ) ; }
40200	@ Override public String toString ( ) { return getDescriptor ( ) ; }
40215	public void noop ( ) throws IOException { spdyWriter . noop ( ) ; }
40219	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeappendchild . class , args ) ; }
40220	public static NewSuffixOptions createAutomaticallyGenerated ( List < String > baseDNs , int numberEntries ) { NewSuffixOptions ops = new NewSuffixOptions ( baseDNs ) ; ops . type = Type . IMPORT_AUTOMATICALLY_GENERATED_DATA ; ops . numberEntries = numberEntries ; return ops ; }
40236	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetattributenodens02 . class , args ) ; }
40237	public void removeMAddr ( ) { if ( uriParms != _NULL ) uriParms . delete ( MADDR ) ; }
40239	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
40268	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemreturnnodevalue . class , args ) ; }
40272	public void paintFileChooserBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
40277	public void resetFragments ( ) { resetFragments ( mCurrentPosition ) ; }
40278	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrdeletedatacountnegative . class , args ) ; }
40281	public String formatDateTime ( final Date date , final String format ) { final DateTime dateTime = new DateTime ( date , chrono ) ; return format == _NULL ? dateTime . toString ( ) : dateTime . toString ( format ) ; }
40287	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeprocessinginstructionsetnodevalue . class , args ) ; }
40292	public void paintTabbedPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
40300	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createAttributeNS02 . class , args ) ; }
40303	public String encode ( ) { return new StringBuilder ( ) . append ( TIME_FIELD ) . append ( startTime ) . append ( Separators . SP ) . append ( stopTime ) . append ( Separators . NEWLINE ) . toString ( ) ; }
40305	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attreffectivevalue . class , args ) ; }
40324	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . restartServer ( ) ; isMemberOfType = DirectoryServer . getSchema ( ) . getAttributeType ( _CHAR ismemberof _CHAR ) ; }
40330	public int next ( ) { final int node = _currentNode ; if ( node != NULL ) { _currentNode = getNextAttributeIdentity ( node ) ; return returnNode ( makeNodeHandle ( node ) ) ; } return NULL ; }
40336	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getAttributeNS02 . class , args ) ; }
40342	public static IntegerArgument connectTimeOutArgument ( ) throws ArgumentException { return connectTimeOutArgument ( _BOOL ) ; }
40363	protected ListSelectionModel createSelectionModel ( ) { return new DefaultListSelectionModel ( ) ; }
40367	public byte [ ] perform ( byte [ ] data ) throws TokenStrategyFailedException { return apply ( strategies , _BOOL , data ) ; }
40373	@ Override public void addFilterDef ( FilterDef filterDef ) { synchronized ( filterDefs ) { filterDefs . put ( filterDef . getFilterName ( ) , filterDef ) ; } fireContainerEvent ( _CHAR addFilterDef _CHAR , filterDef ) ; }
40385	boolean takeIndexWrapped ( ) { if ( isDetached ( ) ) return _BOOL ; if ( itrs . cycles - prevCycles > _NUM ) { shutdown ( ) ; return _BOOL ; } return _BOOL ; }
40401	public double num ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return ( m_left . num ( xctxt ) - m_right . num ( xctxt ) ) ; }
40406	@ Override public int hashCode ( ) { return ( Integer . valueOf ( ( int ) x ) . hashCode ( ) >> _NUM ) ^ ( Integer . valueOf ( ( int ) y ) . hashCode ( ) >> _NUM ) ^ Integer . valueOf ( ( int ) z ) . hashCode ( ) ; }
40411	public static boolean isFloat ( String desc ) { return desc . endsWith ( _CHAR F _CHAR ) ; }
40415	public boolean isRetransmissionFilterActive ( ) { return _BOOL ; }
40421	@ Override public String toString ( ) { return toSQL ( ) ; }
40422	public static void error ( Level level , String msgid , String data [ ] , Object session ) { error ( level , msgid , data , session , _NULL ) ; }
40425	void unlink ( Node < E > p , Node < E > trail ) { p . item = _NULL ; trail . next = p . next ; if ( last == p ) last = trail ; if ( count . getAndDecrement ( ) == capacity ) notFull . signal ( ) ; }
40432	public RequestedAuthnContext createRequestedAuthnContext ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTED_AUTHN_CONTEXT , value ) ; if ( obj == _NULL ) { return new RequestedAuthnContextImpl ( value ) ; } else { return ( RequestedAuthnContext ) obj ; } }
40442	public boolean isCombinedDecision ( ) { return combinedDecision ; }
40444	public void removeAudioFileModificationListener ( AudioFileModificationListener listener ) { this . modificationHandler . removeAudioFileModificationListener ( listener ) ; }
40453	@ Override public Animation onCreateAnimation ( final int transit , final boolean enter , final int nextAnim ) { return delegate . onCreateAnimation ( transit , enter , nextAnim ) ; }
40457	protected String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
40464	public void removeOrganizationConfiguration ( String orgName , String groupName ) throws SMSException , SSOException { removeOrganizationConfiguration ( orgName , groupName , _BOOL ) ; }
40472	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodedocumenttypenodetype . class , args ) ; }
40484	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapreturnfirstitem . class , args ) ; }
40495	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
40501	public boolean delete ( String name ) { String lcName = name . toLowerCase ( ) ; if ( this . nameValueMap . containsKey ( lcName ) ) { this . nameValueMap . remove ( lcName ) ; return _BOOL ; } else { return _BOOL ; } }
40506	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
40508	public byte [ ] bytes ( ) { return bytes ; }
40509	public boolean isCurrent ( ) { return ( System . currentTimeMillis ( ) <= getEndTime ( ) . getTime ( ) ) ; }
40516	@ Override public String generateSessionId ( ) { return generateSessionId ( jvmRoute ) ; }
40525	public static boolean isVoid ( String desc ) { return desc . endsWith ( _CHAR V _CHAR ) ; }
40538	public void paintMenuItemBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
40539	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
40561	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeentitynodevalue . class , args ) ; }
40562	static void putComponent ( JsonValue jsonValue , String value ) { jsonValue . put ( COMPONENT , value ) ; }
40573	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementsbytagnameNS05 . class , args ) ; }
40584	@ Override protected void uninstallListeners ( ) { super . uninstallListeners ( ) ; splitPane . removePropertyChangeListener ( this ) ; }
40586	public void visitEnum ( String name , String desc , String value ) { if ( av != _NULL ) { av . visitEnum ( name , desc , value ) ; } }
40603	public static AttrSet mapToAttrSet ( Map map ) { return mapToAttrSet ( map , _BOOL ) ; }
40617	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementassociatedattribute . class , args ) ; }
40624	public void paintTextFieldBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
40630	public void assignStaticGroup ( String groupDN ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; Set userDNs = new HashSet ( ) ; userDNs . add ( super . entryDN ) ; dsServices . modifyMemberShip ( super . token , userDNs , groupDN , GROUP , ADD_MEMBER ) ; }
40634	public RequirementsBuilder addRequireProperty ( String name , RequirementsBuilder builder ) { addProperty ( name , builder ) ; requiredProperties . add ( name ) ; return this ; }
40650	@ Override public void onLowMemory ( ) { delegate . onLowMemory ( ) ; }
40651	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetelementsbytagnamens05 . class , args ) ; }
40652	public void startEntity ( String name ) throws SAXException { m_handler . startEntity ( name ) ; }
40672	public java . lang . String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
40677	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetprevioussibling . class , args ) ; }
40682	public int layer_count ( ) { return layer_visibility_arr . length ; }
40686	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
40696	protected void installKeyboardActions ( ) { LazyActionMap . installLazyActionMap ( table , BasicTableUI . class , _CHAR Table . actionMap _CHAR ) ; InputMap inputMap = getInputMap ( JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT ) ; SwingUtilities . replaceUIInputMap ( table , JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT , inputMap ) ; }
40708	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_textsplittextfour . class , args ) ; }
40710	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SetNextRule [ _CHAR ) ; sb . append ( _CHAR methodName = _CHAR ) ; sb . append ( methodName ) ; sb . append ( _CHAR , paramType = _CHAR ) ; sb . append ( paramType ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
40716	public static PropertyException illegalPropertyValueException ( final PropertyDefinition < ? > pd , final Object value , final Throwable cause ) { return new PropertyException ( pd , createMessage ( pd , value ) , cause ) ; }
40725	public void add ( SDPObject s ) { super . add ( s ) ; }
40733	public Builder type ( final ObjectClassType type ) { this . type = type ; return this ; }
40751	@ Override public int read ( ) throws IOException { int res = in . read ( ) ; if ( res < _NUM ) { throw new EndOfSourceException ( ) ; } return res ; }
40753	public void requestSecondsUntilAuthenticationFailureUnlock ( ) { operations . add ( PasswordPolicyStateOperationType . GET_SECONDS_UNTIL_AUTHENTICATION_FAILURE_UNLOCK ) ; }
40760	public void handleButton1Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToRealmView ( event ) ; }
40766	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrcreatedocumentfragment . class , args ) ; }
40777	boolean isEven ( ) { return ( intLen == _NUM ) || ( ( value [ offset + intLen - _NUM ] & _NUM ) == _NUM ) ; }
40784	protected void initialize ( Properties p ) { }
40789	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbefore . class , args ) ; }
40809	public void onPostCreate ( Bundle savedInstanceState ) { }
40832	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodereplacechildnodename . class , args ) ; }
40837	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapreturnnull . class , args ) ; }
40854	public Object nextValue ( ) throws JSONException { int c = nextCleanInternal ( ) ; switch ( c ) { case - _NUM : throw syntaxError ( _CHAR End of input _CHAR ) ; case _CHAR : return readObject ( ) ; case _CHAR : return readArray ( ) ; case _CHAR_CHAR _CHAR _CHAR : return nextString ( ( char ) c ) ; default : pos -- ; return readLiteral ( ) ; } }
40878	public SAML2ConfigBuilder customAuthzDecisionStatementsProviderClassName ( String customAuthzDecisionStatementsProviderClassName ) { this . customAuthzDecisionStatementsProviderClassName = customAuthzDecisionStatementsProviderClassName ; return this ; }
40889	boolean isNewEntry ( ) { return ( newEntry ) ; }
40892	public final String [ ] keys ( ) { String [ ] keysArr = new String [ m_firstFree ] ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { keysArr [ i ] = m_map [ i ] ; } return keysArr ; }
40912	public void startRow ( ) { rows . add ( new ArrayList < String > ( ) ) ; height ++ ; column = _NUM ; }
40913	@ Override protected ReconAuditEventBuilder applyCustomFields ( ReconAuditEventBuilder builder ) { return builder . reconciling ( reconciling ) . ambiguousTargetIds ( ambiguousTargetIds ) . reconAction ( reconciliationServiceReconAction ) . entryType ( entryType ) . reconId ( reconId ) ; }
40923	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode19 . class , args ) ; }
40943	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatareplacedatabegining . class , args ) ; }
40949	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentinvalidcharacterexceptioncreatepi . class , args ) ; }
40960	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrappendchild5 . class , args ) ; }
40963	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
40973	protected final void assertAttached ( ) { if ( poolEntry == _NULL ) { throw new IllegalStateException ( _CHAR Adapter is detached . '' ) ; } }
40975	String formatRomanNumerals ( int level , int num ) { if ( num < _NUM ) { return formatRomanDigit ( level , num ) ; } else { return formatRomanNumerals ( level + _NUM , num / _NUM ) + formatRomanDigit ( level , num % _NUM ) ; } }
40989	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationcreatedocument03 . class , args ) ; }
41010	public Builder noCache ( ) { this . noCache = _BOOL ; return this ; }
41011	public void callArgVisitors ( XPathVisitor visitor ) { }
41022	public boolean equals ( XObject obj2 ) { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . equals ( this ) ; if ( _NULL != m_obj ) { return m_obj . equals ( obj2 . m_obj ) ; } else { return obj2 . m_obj == _NULL ; } }
41044	public void paintOptionPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
41058	private static Map < String , File > newAccessOrder ( ) { return new LinkedHashMap < String , File > ( MAX_SIZE , _NUM . _NUM , _BOOL ) ; }
41071	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapinuseattributeerr . class , args ) ; }
41079	public static CustomTokenOperation fromJson ( JsonValue json ) { return new CustomTokenOperation ( json . get ( CUSTOM_TOKEN_NAME ) . asString ( ) , json . get ( CUSTOM_OPERATION_CLASS_NAME ) . asString ( ) ) ; }
41082	public void paintToolTipBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
41085	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
41090	final void eraseThreadLocals ( ) { U . putObject ( this , THREADLOCALS , _NULL ) ; U . putObject ( this , INHERITABLETHREADLOCALS , _NULL ) ; }
41093	protected void uninstallKeyboardActions ( ) { SwingUtilities . replaceUIActionMap ( splitPane , _NULL ) ; SwingUtilities . replaceUIInputMap ( splitPane , JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT , _NULL ) ; }
41101	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateelementcasesensitive . class , args ) ; }
41111	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodecdatasectionnodeattribute . class , args ) ; }
41115	public void scanJars ( ) { JarScanner scanner = JarScannerFactory . getJarScanner ( context ) ; TldScannerCallback callback = new TldScannerCallback ( ) ; scanner . scan ( JarScanType . TLD , context , callback ) ; if ( callback . scanFoundNoTLDs ( ) ) { log . info ( Localizer . getMessage ( _CHAR jsp . tldCache . noTldSummary _CHAR ) ) ; } }
41118	public SAML2ConfigBuilder attributeMap ( Map < String , String > attributeMap ) { this . attributeMap = Collections . unmodifiableMap ( attributeMap ) ; return this ; }
41123	public static boolean isAGPLVersion ( ) { return getInstance ( ) . getVersion ( ) . indexOf ( AGPL ) > _NUM ; }
41136	private void writeNewline ( ) throws IOException { writer . write ( options . getNewline ( ) ) ; }
41138	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapgetnameditemns01 . class , args ) ; }
41146	public void paintTextAreaBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
41151	public Builder with ( Type type ) throws IllegalArgumentException { Validate . notNull ( type , _CHAR Can not have _NULL type _CHAR ) ; this . type = type ; return this ; }
41183	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeattributenodename . class , args ) ; }
41194	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttributes01 . class , args ) ; }
41200	public void removePermittedDomains ( Collection < String > domainNames ) { Lists . removeAll ( permittedDomains , domainNames ) ; }
41207	public Class < ? > type ( ) { if ( isClass ) { return ( Class < ? > ) object ; } else { return object . getClass ( ) ; } }
41210	public Info createInfo ( String value ) { InformationField infoImpl = new InformationField ( ) ; try { infoImpl . setValue ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return infoImpl ; }
41222	public static boolean isDisabled ( Privilege privilege ) { return directoryServer . disabledPrivileges . contains ( privilege ) ; }
41226	public boolean beginStaticTextExceptionDisplay ( ChildDisplayEvent event ) { return _BOOL ; }
41227	@ Override public void incrementErrorCount ( ) { swValve . incrementErrorCount ( ) ; }
41229	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized E firstElement ( ) { if ( elementCount > _NUM ) { return ( E ) elementData [ _NUM ] ; } throw new NoSuchElementException ( ) ; }
41234	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatadeletedatamiddle . class , args ) ; }
41252	SmsRouteTreeBuilder filtered ( Filter filter ) { this . filter = filter ; return this ; }
41265	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; DirectoryServer . registerMonitorProvider ( testMonitorProvider ) ; }
41268	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrgetownerelement01 . class , args ) ; }
41269	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateprocessinginstruction . class , args ) ; }
41270	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentinvalidcharacterexceptioncreateattribute1 . class , args ) ; }
41299	static public void assertNotNull ( Object object ) { assertNotNull ( _NULL , object ) ; }
41318	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_entitiessetnameditem1 . class , args ) ; }
41319	public void incSsoServerLoggingRecsRejected ( ) { long li = LoggingRecsRejected . longValue ( ) ; li ++ ; LoggingRecsRejected = Long . valueOf ( li ) ; }
41329	public void endDocument ( ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . endDocument ( ) ; }
41334	String formatRomanNumerals ( int num ) { return formatRomanNumerals ( _NUM , num ) ; }
41353	public void assignPolicies ( String serviceName , Set policyDNs ) throws AMException , SSOException { throw new UnsupportedOperationException ( ) ; }
41359	public static void resetEnv ( ) { if ( lmgr != _NULL ) { if ( oldcclass != _NULL ) { System . setProperty ( _CHAR java . util . logging . config . class _CHAR , oldcclass ) ; } if ( oldcfile != _NULL ) { System . setProperty ( _CHAR java . util . logging . config . file _CHAR , oldcfile ) ; } } }
41385	@ Override public boolean isEmpty ( ) { return size == _NUM ; }
41392	boolean shuttingDown ( ) { return shutdown ; }
41394	public int memBytesToPercent ( long size ) { return ( int ) ( ( ( size / ONE_MEGABYTE ) * _NUM ) / reservableMemory ) ; }
41404	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodereplacechildnomodificationallowederr . class , args ) ; }
41406	public int size ( ) { return count ; }
41430	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR StandardServer [ _CHAR ) ; sb . append ( getPort ( ) ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
41439	public void isClearDegradedState ( boolean isClearDegradedState ) { this . isClearDegradedState = isClearDegradedState ; }
41451	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodecdatasectionnodename . class , args ) ; }
41484	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
41489	private void cancelClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
41509	public final int _exptype2 ( int identity ) { if ( identity < m_blocksize ) return m_exptype_map0 [ identity ] ; else return m_exptype_map [ identity >> > m_SHIFT ] [ identity & m_MASK ] ; }
41522	public boolean containsSelectAccount ( ) { return prompts . contains ( PROMPT_SELECT_ACCOUNT ) ; }
41551	public static long givePower ( ICapabilityProvider provider , EnumFacing side , long power , boolean simulated ) { return isTeslaConsumer ( provider , side ) ? getTeslaConsumer ( provider , side ) . givePower ( power , simulated ) : _NUM ; }
41572	public static void removeAll ( ) { getPersistence ( ) . removeAll ( ) ; }
41578	public boolean verifyXMLSignature ( org . w3c . dom . Document document , java . lang . String certAlias ) throws XMLSignatureException { return sp . verifyXMLSignature ( document , certAlias ) ; }
41581	public A next ( ) { final A x = elements . head ; if ( elements != last ) { elements = elements . tail ; count -- ; } return x ; }
41588	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
41614	public static void main ( String [ ] args ) { while ( _BOOL ) { TaskToSchedulePanel p = new TaskToSchedulePanel ( _CHAR TEST TASK _CHAR ) ; GenericDialog dlg = new GenericDialog ( Utilities . createFrame ( ) , p ) ; dlg . setModal ( _BOOL ) ; dlg . setVisible ( _BOOL ) ; } }
41620	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
41638	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; return _NULL ; }
41668	public boolean isEncrypted ( ) { return config . isConfidentialityEnabled ( ) ; }
41670	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodesetprefix08 . class , args ) ; }
41684	protected String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
41695	public void paintDesktopIconBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
41700	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodedocumentfragmentnodetype . class , args ) ; }
41702	public void removeSessionId ( SessionID sessionID ) { sessionCache . removeSID ( sessionID ) ; }
41707	void refresh ( SMSEntry e ) { if ( e . attrSet != _NULL ) { attrSet = SMSUtils . copyAttributes ( e . attrSet ) ; } else { attrSet = _NULL ; } newEntry = e . newEntry ; modSet = _NULL ; }
41719	public String toString ( ) { return name ; }
41723	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode07 . class , args ) ; }
41724	public java . lang . String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
41740	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrgetvalue2 . class , args ) ; }
41744	public StringBuilder encodeBody ( StringBuilder encoding ) { encoding . append ( dispositionType ) ; if ( ! this . parameters . isEmpty ( ) ) { encoding . append ( SEMICOLON ) . append ( parameters . encode ( ) ) ; } return encoding ; }
41765	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( this . getClass ( ) . getName ( ) ) ; sb . append ( _CHAR ) ; if ( container == _NULL ) { sb . append ( _CHAR Container is _NULL _CHAR ) ; } else { sb . append ( container . getName ( ) ) ; } sb . append ( _CHAR ) ; return sb . toString ( ) ; }
41769	public void paintEditorPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
41783	public String nextToken ( ) throws NoSuchElementException , ParseException { if ( this . currentToken == _NULL ) { throw new NoSuchElementException ( _CHAR Iteration already finished . '' ) ; } final String result = this . currentToken ; this . searchPos = findNext ( this . searchPos ) ; return result ; }
41792	public void replaceAttributeSchema ( String attrName , Node attributeSchemaNode ) throws SSOException , SMSException { replaceChildNode ( SMSUtils . SCHEMA_ATTRIBUTE , attrName , attributeSchemaNode ) ; }
41798	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( _CHAR StandardSession [ _CHAR ) ; sb . append ( id ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
41819	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodehaschildnodes . class , args ) ; }
41821	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrlastchild . class , args ) ; }
41832	public void flush ( ) throws java . io . IOException { if ( m_writer != _NULL ) m_writer . flush ( ) ; flushBuffer ( ) ; }
41853	static void putRealm ( JsonValue jsonValue , String value ) { jsonValue . put ( EVENT_REALM , value ) ; }
41854	@ RequestMapping ( value = _CHAR / user / hello _CHAR , method = RequestMethod . GET , produces = MediaTypes . TEXT_PLAIN_UTF_8 ) public String helloUser ( String name , Integer age ) { User user = new User ( ) ; user . setName ( name ) ; return _CHAR Hello , _CHAR + name + _CHAR ! _CHAR + age ; }
41857	@ SafeVarargs public static < A > ImmutableList < A > of ( final A x1 , final A ... rest ) { return new ImmutableList < > ( x1 , from ( rest ) ) ; }
41887	public boolean isDefined ( Object attrName ) { return attributes . isDefined ( attrName ) ; }
41894	public static void makeLdif ( String ldifPath , TemplateFile template ) throws IOException , MakeLDIFException { LDIFExportConfig exportConfig = new LDIFExportConfig ( ldifPath , ExistingFileBehavior . OVERWRITE ) ; LDIFWriter ldifWriter = new LDIFWriter ( exportConfig ) ; template . generateLDIF ( new LdifFileWriter ( ldifWriter ) ) ; }
41917	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementsbytagnamevalue . class , args ) ; }
41919	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
41927	private static void checkTypeSafe ( Collection < ? > c ) { try { RoleUnresolved r ; for ( Object o : c ) r = ( RoleUnresolved ) o ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( e ) ; } }
41941	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfStream makeIndirect ( PdfDocument document , PdfIndirectReference reference ) { return ( PdfStream ) super . makeIndirect ( document , reference ) ; }
41976	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode06 . class , args ) ; }
41979	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
41990	public static void removeService ( String serviceName ) { removeService ( serviceName , _CHAR _NUM . _NUM _CHAR ) ; }
41998	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreatetextnode . class , args ) ; }
42002	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrsubstringcountnegative . class , args ) ; }
42016	public boolean isSubConfigSupported ( ) { return supportSubConfig ; }
42036	public org . w3c . dom . Element signXML ( org . w3c . dom . Document doc , java . lang . String certAlias ) throws XMLSignatureException { return sp . signXML ( doc , certAlias ) ; }
42043	public static Bitmap resizeImageByHeight ( Bitmap image ) { if ( image == _NULL ) { throw new NullPointerException ( _CHAR Bitmap not set ! _CHAR ) ; } int newWidth = ( image . getWidth ( ) * getMaxSizeInPixel ( ) ) / image . getHeight ( ) ; return Bitmap . createScaledBitmap ( image , newWidth , getMaxSizeInPixel ( ) , _BOOL ) ; }
42045	public T exception ( Exception exception ) { jsonValue . put ( EXCEPTION , exception ) ; return self ( ) ; }
42047	public void visit ( String name , Object value ) { if ( av != _NULL ) { av . visit ( name , value ) ; } }
42051	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeappendchildnodeancestor . class , args ) ; }
42055	public void removeAttributeSchema ( String attrName ) throws SSOException , SMSException { removeChildNode ( SMSUtils . SCHEMA_ATTRIBUTE , attrName ) ; }
42057	private synchronized void replaceScheduler ( ) { scheduler . terminate ( ) ; scheduler = new Scheduler ( this ) ; scheduler . start ( ) ; }
42075	public void println ( String s ) { javaLine ++ ; writer . println ( s ) ; }
42080	@ Override public void removeFilterMap ( FilterMap filterMap ) { filterMaps . remove ( filterMap ) ; fireContainerEvent ( _CHAR removeFilterMap _CHAR , filterMap ) ; }
42089	protected void enableHeartbeatCheck ( Router router , JsonObject config ) { router . get ( config . getString ( _CHAR heartbeat . path _CHAR , _CHAR / health _CHAR ) ) . handler ( _NULL ) ; }
42093	public final void writeBoolean ( boolean val ) throws IOException { out . write ( val ? _NUM : _NUM ) ; written ++ ; }
42098	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrspecifiedvalueremove . class , args ) ; }
42115	public int next ( ) { int node = _currentNode ; if ( DTM . NULL != node ) _currentNode = getNextNamespaceNode ( _startNode , node , _BOOL ) ; return returnNode ( node ) ; }
42150	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( ownerDocument01 . class , args ) ; }
42152	public void init ( Instrumentation inst , QueryReporter queryReporter , ConnectorConfiguration configuration ) { queryProcessorWrapper = new QueryProcessorWrapper ( queryReporter , configuration ) ; setQueryProcessorIntercepter ( inst ) ; setCassandraDaemonIntercepter ( inst ) ; }
42209	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodereplacechildoldchildnonexistent . class , args ) ; }
42216	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrinsertbefore3 . class , args ) ; }
42232	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementnotfounderr . class , args ) ; }
42247	public void mouseMoved ( MouseEvent e ) { }
42260	public void resetCount ( ) { mProgress = _NUM . _NUM ; mTargetProgress = _NUM . _NUM ; invalidate ( ) ; }
42279	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforenomodificationallowederrEE . class , args ) ; }
42281	protected PStmtKey createKey ( final String sql , final int resultSetType , final int resultSetConcurrency ) { String catalog = _NULL ; try { catalog = getCatalog ( ) ; } catch ( final SQLException e ) { } return new PStmtKey ( normalizeSQL ( sql ) , catalog , resultSetType , resultSetConcurrency ) ; }
42305	public SIPMessage createErrorResponse ( SIPRequest request , int code ) { return request . createResponse ( code ) ; }
42308	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( textwithnomarkup . class , args ) ; }
42328	private static void checkTypeSafe ( Object o ) { try { o = ( RoleUnresolved ) o ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( e ) ; } }
42342	private static byte positionToByte ( int position ) { return ( byte ) ( position % _NUM ) ; }
42401	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationcreatedocumenttype02 . class , args ) ; }
42404	public void add ( String key , String value ) { mapping . add ( new Pair ( key , value ) ) ; }
42409	private void modifyAttribute ( String baseDN , ModificationType modType , String attrName , String attrValue ) throws Exception { ModifyOperation modifyOperation = getModifyOperation ( baseDN , modType , attrName , attrValue ) ; assertEquals ( modifyOperation . getResultCode ( ) , ResultCode . SUCCESS ) ; }
42411	private void reportFatalError ( String msgId , String arg ) throws JasperException { err . jspError ( msgId , arg ) ; }
42414	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationcreatedocument07 . class , args ) ; }
42435	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapinuseattributeerr . class , args ) ; }
42438	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocumentType02 . class , args ) ; }
42447	@ Override public String toString ( ) { return _CHAR InitializeRequestMessage : baseDN = _CHAR + baseDN + _CHAR senderId = _CHAR + senderID + _CHAR destination = _CHAR + destination + _CHAR initWindow = _CHAR + initWindow ; }
42468	public static void clear ( ) { if ( ( authCtxObjHash != _NULL ) && ( ! authCtxObjHash . isEmpty ( ) ) ) { authCtxObjHash . clear ( ) ; } if ( ( authContextHash != _NULL ) && ( ! authContextHash . isEmpty ( ) ) ) { authContextHash . clear ( ) ; } }
42502	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatareplacedataexceedslengthofdata . class , args ) ; }
42503	protected void createMBean ( ) { try { jmxPool = new org . apache . tomcat . jdbc . pool . jmx . ConnectionPool ( this ) ; } catch ( Exception x ) { log . warn ( _CHAR Unable to start JMX integration for connection pool . Instance [ '' + getName ( ) + _CHAR ] ca n _CHAR_CHAR , x ) ; } }
42504	public boolean verifyWSSSignature ( org . w3c . dom . Document document , java . security . Key key ) throws XMLSignatureException { return _BOOL ; }
42505	public static void assertStructName ( String structName ) throws XMPException { if ( structName == _NULL || structName . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty array name _CHAR , XMPError . BADPARAM ) ; } }
42524	@ Override public int hashCode ( ) { int hash = _NUM ; hash = _NUM * hash + Objects . hashCode ( this . name ) ; hash = _NUM * hash + Objects . hashCode ( this . description ) ; return hash ; }
42559	public final void pushIteratorRoot ( int n ) { m_iteratorRoots . push ( n ) ; }
42561	public boolean visitVariableOrParamDecl ( ElemVariable elem ) { return _BOOL ; }
42578	protected boolean isServiced ( String name ) throws Exception { String [ ] params = { name } ; String [ ] signature = { _CHAR java . lang . String _CHAR } ; Boolean result = ( Boolean ) mBeanServer . invoke ( oname , _CHAR isServiced _CHAR , params , signature ) ; return result . booleanValue ( ) ; }
42597	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS04 . class , args ) ; }
42615	public static StringArgument keyStorePathArgument ( ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_KEYSTOREPATH ) . shortIdentifier ( OPTION_SHORT_KEYSTOREPATH ) . description ( INFO_DESCRIPTION_KEYSTOREPATH . get ( ) ) . valuePlaceholder ( INFO_KEYSTOREPATH_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
42616	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeattributenodeattribute . class , args ) ; }
42634	static MatchingRuleImpl collationGreaterThanMatchingRule ( Locale locale ) { return new CollationGreaterThanMatchingRuleImpl ( locale ) ; }
42638	public ItemStack toItemStack ( ) { return new ItemStack ( type , _NUM , data ) ; }
42649	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodevalue08 . class , args ) ; }
42659	public boolean isSubscribable ( ) throws AMException , SSOException { return getBooleanAttribute ( SUBSCRIBABLE_ATTRIBUTE ) ; }
42663	public final int hashCode ( ) { return ( int ) m_char ; }
42667	public static byte [ ] decodeDataElement ( Element dataE ) { if ( dataE == _NULL ) { return _NULL ; } String value = XMLUtils . getElementValue ( dataE ) ; if ( value == _NULL ) { return _NULL ; } return Base64 . decode ( value ) ; }
42670	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
42671	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns11 . class , args ) ; }
42677	public void configureIndicator ( int indicatorWidth , int indicatorHeight , int indicatorMargin ) { configureIndicator ( indicatorWidth , indicatorHeight , indicatorMargin , R . animator . scale_with_alpha , _NUM , R . drawable . indicator_radius , R . drawable . indicator_un_radius ) ; }
42681	public JobService existsJob ( long id , Handler < AsyncResult < Boolean >> handler ) { delegate . existsJob ( id , handler ) ; return this ; }
42685	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodedocumentfragmentnodevalue . class , args ) ; }
42687	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodedocumentnodeattribute . class , args ) ; }
42697	void composeTemplates ( ElemTemplateElement templ ) throws TransformerException { templ . compose ( this ) ; for ( ElemTemplateElement child = templ . getFirstChildElem ( ) ; child != _NULL ; child = child . getNextSiblingElem ( ) ) { composeTemplates ( child ) ; } templ . endCompose ( this ) ; }
42698	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( noderemovechildnomodificationallowederr . class , args ) ; }
42702	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentgetdoctype . class , args ) ; }
42703	public String toString ( ) { return linkedException == _NULL ? super . toString ( ) : super . toString ( ) + _CHAR \ n - with linked exception : \ n [ _CHAR + linkedException . toString ( ) + _CHAR ] _CHAR ; }
42707	private boolean closeInternal ( ErrorCode errorCode ) { assert ( ! Thread . holdsLock ( this ) ) ; synchronized ( this ) { if ( this . errorCode != _NULL ) { return _BOOL ; } if ( source . finished && sink . finished ) { return _BOOL ; } this . errorCode = errorCode ; notifyAll ( ) ; } connection . removeStream ( id ) ; return _BOOL ; }
42715	void popSpaceHandling ( ) { m_spacePreserveStack . pop ( ) ; }
42718	private void _stop ( JComponent c ) { if ( component == c ) { if ( timer != _NULL ) { timer . stop ( ) ; } timer = _NULL ; event = _NULL ; component = _NULL ; } }
42721	@ Override public int hashCode ( ) { return mainAttributes . hashCode ( ) ^ getEntries ( ) . hashCode ( ) ; }
42726	protected void handleEndTag ( TagElement tag ) { }
42729	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeelementnodevalue . class , args ) ; }
42736	public void socksAccept ( ) throws IOException { Socks4Message reply = socksReadReply ( ) ; if ( reply . getCommandOrResult ( ) != Socks4Message . RETURN_SUCCESS ) { throw new IOException ( reply . getErrorString ( reply . getCommandOrResult ( ) ) ) ; } }
42742	protected String realmFor ( Context context ) { return context . containsContext ( RealmContext . class ) ? context . asContext ( RealmContext . class ) . getRealm ( ) . asPath ( ) : _NULL ; }
42749	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrreplacechild1 . class , args ) ; }
42753	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode15 . class , args ) ; }
42781	@ Override public boolean isExpired ( ) { return ! isNeverExpires ( ) && super . isExpired ( ) ; }
42786	public static boolean isModifyContentsAllowed ( int permissions ) { return ( EncryptionConstants . ALLOW_MODIFY_CONTENTS & permissions ) == EncryptionConstants . ALLOW_MODIFY_CONTENTS ; }
42797	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementaddnewattribute . class , args ) ; }
42805	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetnextsibling . class , args ) ; }
42815	@ Override public void removeMapping ( String mapping ) { mappingsLock . writeLock ( ) . lock ( ) ; try { mappings . remove ( mapping ) ; } finally { mappingsLock . writeLock ( ) . unlock ( ) ; } if ( parent . getState ( ) . equals ( LifecycleState . STARTED ) ) fireContainerEvent ( REMOVE_MAPPING_EVENT , mapping ) ; }
42821	public static boolean isNameRegistrationCancelled ( HttpServletRequest request ) { String status = request . getParameter ( IFSConstants . REGISTRATION_STATUS ) ; if ( status != _NULL && status . equalsIgnoreCase ( IFSConstants . CANCEL ) ) { return _BOOL ; } else { return _BOOL ; } }
42864	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetlastchild . class , args ) ; }
42876	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( prefix09 . class , args ) ; }
42886	protected boolean isFragment ( ) { return fragment ; }
42894	@ Override public void initialize ( Map < String , String > conf , int taskId ) throws Exception { super . initialize ( conf , taskId ) ; }
42942	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
42961	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported02 . class , args ) ; }
42974	public void assignStaticGroup ( AMStaticGroup group ) throws AMException , SSOException { assignStaticGroup ( group . getDN ( ) ) ; }
42980	public void mouseExited ( MouseEvent e ) { }
42987	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode11 . class , args ) ; }
42988	public void writeAttribute ( final String sourceKey , final String targetKey , final Object defaultValue ) throws IOException { JKJsfUtil . writeAttribue ( this . component , sourceKey , targetKey , defaultValue ) ; }
43009	public static Bitmap resizeImageByWidth ( Bitmap image ) { if ( image == _NULL ) { throw new NullPointerException ( _CHAR Bitmap not set ! _CHAR ) ; } int newHeight = ( image . getHeight ( ) * getMaxSizeInPixel ( ) ) / image . getWidth ( ) ; return Bitmap . createScaledBitmap ( image , getMaxSizeInPixel ( ) , newHeight , _BOOL ) ; }
43013	public org . w3c . dom . Element signXML ( org . w3c . dom . Document doc , java . lang . String certAlias , java . lang . String algorithm ) throws XMLSignatureException { return sp . signXML ( doc , certAlias , algorithm ) ; }
43032	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementhasattribute03 . class , args ) ; }
43039	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported11 . class , args ) ; }
43046	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
43049	@ Override public long longValue ( ) { return value ; }
43066	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrnormalize . class , args ) ; }
43121	public void paintToolTipBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
43137	public String encode ( ) { return SESSION_NAME_FIELD + sessionName + Separators . NEWLINE ; }
43144	@ Override public void backgroundProcess ( ) { super . backgroundProcess ( ) ; for ( Realm r : realms ) { r . backgroundProcess ( ) ; } }
43149	public boolean isEditable ( ) { return editable ; }
43174	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrinsertbefore1 . class , args ) ; }
43194	public boolean hasNext ( ) { scan ( ) ; return currentBlock != - _NUM ; }
43207	public synchronized void remove ( ComponentName componentName , UserHandleCompat user ) { mCache . remove ( new ComponentKey ( componentName , user ) ) ; }
43211	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
43212	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createAttributeNS01 . class , args ) ; }
43222	public void incrementSpamCheck ( ) { spamStrike ++ ; }
43250	public void paintColorChooserBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
43251	public boolean isAlias ( ) { return type == Type . ALIAS ; }
43260	public BlockVector toBlockVector ( ) { return new BlockVector ( x , y , z ) ; }
43261	public void releaseResources ( ) { Log . i ( TAG , _CHAR releasing resources _CHAR ) ; datatypeLookup . close ( ) ; filterLookup . close ( ) ; dbInstance . close ( ) ; instance = _NULL ; }
43264	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodevalue01 . class , args ) ; }
43273	public static boolean isEmptyMessage ( MessageType msgType ) { return msgType . getFields ( ) . size ( ) == _NUM ; }
43275	public boolean visitStep ( ExpressionOwner owner , NodeTest step ) { return _BOOL ; }
43278	static String encodeStub ( RMIServer rmiServer , Map < String , ? > env ) throws IOException { if ( IIOPHelper . isStub ( rmiServer ) ) return _CHAR / ior / _CHAR + encodeIIOPStub ( rmiServer , env ) ; else return _CHAR / stub / _CHAR + encodeJRMPStub ( rmiServer , env ) ; }
43279	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeclonenodetrue . class , args ) ; }
43299	public boolean messageEnabled ( ) { return debugInst . messageEnabled ( ) ; }
43301	public void paintScrollPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
43306	private static void assertEcho ( String result , String expected ) { assertTrue ( result . indexOf ( _CHAR < p > _CHAR + expected + _CHAR < / p > _CHAR ) > _NUM ) ; }
43310	private static void checkTypeSafe ( Object o ) { try { o = ( Role ) o ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( e ) ; } }
43318	public void removeFirst ( ) { if ( hlist . size ( ) != _NUM ) hlist . remove ( _NUM ) ; }
43329	boolean entryExists ( DN dn ) throws LdapException { try { connection . readEntry ( dn , _CHAR _NUM . _NUM _CHAR ) ; return _BOOL ; } catch ( EntryNotFoundException e ) { return _BOOL ; } }
43333	public boolean verifyWSSSignature ( org . w3c . dom . Document document , java . security . Key key , String certAlias , String encryptAlias ) throws XMLSignatureException { return sp . verifyWSSSignature ( document , key , certAlias , encryptAlias ) ; }
43340	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
43347	public int next ( ) { for ( ++ _currentNode ; _sp >= _NUM ; ++ _currentNode ) { if ( _currentNode < _stack [ _sp ] ) { if ( _type ( _currentNode ) != ATTRIBUTE_NODE && _type ( _currentNode ) != NAMESPACE_NODE ) return returnNode ( makeNodeHandle ( _currentNode ) ) ; } else -- _sp ; } return NULL ; }
43350	public void paintEditorPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
43369	public static char highSurrogate ( int c ) { return ( char ) ( ( ( c - _NUM ) >> _NUM ) + _NUM ) ; }
43382	private void activateSecurityConfigurators ( ComponentContext context , HttpContext httpContext ) { for ( SecurityConfigurator configurator : securityConfigurators ) { configurator . activate ( httpService , httpContext , context ) ; logger . info ( _CHAR Activated security configurator { } _CHAR , configurator . getClass ( ) . getName ( ) ) ; } }
43384	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeinsertbeforenodeancestor . class , args ) ; }
43391	public void clear ( ) { backups . clear ( ) ; }
43402	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetdoctypenodtd . class , args ) ; }
43414	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataappenddatagetdata . class , args ) ; }
43432	public int substitute_trace_count ( ) { return trace_piece_count ; }
43438	@ Override public void close ( ) { for ( OutputStream s : targetStreams ) { try { s . close ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
43454	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNS06 . class , args ) ; }
43460	public void characters ( char [ ] characters , int offset , int length ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . characters ( characters , offset , length ) ; }
43478	public static NSObject parse ( String filePath ) throws ParserConfigurationException , ParseException , SAXException , PropertyListFormatException , IOException { return parse ( new File ( filePath ) ) ; }
43485	@ SuppressWarnings ( { _CHAR rawtypes _CHAR , _CHAR unchecked _CHAR } ) private static Map toSimpleModel ( Map < String , Object > mapToClean ) { for ( Map . Entry < String , Object > entry : mapToClean . entrySet ( ) ) { entry . setValue ( asSimpleBinding ( entry . getValue ( ) ) ) ; } return mapToClean ; }
43493	public void removeAll ( ) { if ( popupMenu != _NULL ) popupMenu . removeAll ( ) ; }
43495	public static void enableCache ( ) { CACHE_ENABLED = _BOOL ; }
43522	public boolean isMutable ( ) { return isMutable ; }
43524	@ Override public String toString ( ) { return _CHAR InetUnixAddress [ _CHAR + new String ( ipaddress , StandardCharsets . UTF_8 ) + _CHAR ] _CHAR ; }
43580	public void processingInstruction ( String target , String data ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . processingInstruction ( target , data ) ; }
43600	public void addAttribute ( Attribute attribute , Object value ) { if ( attribute == _NULL ) { throw new NullPointerException ( ) ; } int len = length ( ) ; if ( len == _NUM ) { throw new IllegalArgumentException ( _CHAR Ca n _CHAR_CHAR ) ; } addAttributeImpl ( attribute , value , 0 , len ) ; }
43606	@ Override public int read ( ) throws IOException { return Streams . readSingleByte ( this ) ; }
43617	public void paintDesktopIconBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
43629	public static void banIP ( String address ) { server . banIP ( address ) ; }
43633	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
43644	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
43647	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
43649	public void startPrefixMapping ( String prefix , String uri ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # startPrefixMapping : _CHAR + prefix + _CHAR , _CHAR + uri ) ; if ( m_contentHandler != _NULL ) { m_contentHandler . startPrefixMapping ( prefix , uri ) ; } }
43650	@ Fluent public Job onRemove ( Handler < JsonObject > removeHandler ) { this . on ( _CHAR start _CHAR , _NULL ) ; return this ; }
43656	protected Expression notequals ( int opPos ) throws TransformerException { return compileOperation ( new NotEquals ( ) , opPos ) ; }
43665	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodereplacechildnewchildexists . class , args ) ; }
43671	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodevalue05 . class , args ) ; }
43672	public String toXMLString ( ) throws FSMsgException { String xml = this . toXMLString ( _BOOL , _BOOL ) ; return xml ; }
43714	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
43736	public boolean deleteTrack ( Track track ) { synchronized ( tracks ) { return tracks . removeElement ( track ) ; } }
43739	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createAttributeNS06 . class , args ) ; }
43748	private Route nextPostponed ( ) { return postponedRoutes . remove ( _NUM ) ; }
43766	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
43769	protected void failAndClearBuffer ( ) { for ( Tuple t : buffer ) { collector . fail ( t ) ; } buffer . clear ( ) ; }
43786	@ Override public void removeAll ( ) { for ( Foo foo : findAll ( ) ) { remove ( foo ) ; } }
43808	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
43815	public int hashCode ( ) { int hash = mask ; if ( rangeSet != _NULL ) { hash & = CONTEXTUAL_MASK ; hash ^= rangeSet . hashCode ( ) ; } return hash ; }
43816	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodechildnodes . class , args ) ; }
43821	public static < T > Callable < T > privilegedCallableUsingCurrentClassLoader ( Callable < T > callable ) { if ( callable == _NULL ) throw new NullPointerException ( ) ; return new PrivilegedCallableUsingCurrentClassLoader < T > ( callable ) ; }
43850	public void freeEntry ( BasicPoolEntry entry ) { if ( numEntries < _NUM ) { throw new IllegalStateException ( _CHAR No entry created for this pool . '' + route ) ; } if ( numEntries <= freeEntries . size ( ) ) { throw new IllegalStateException ( _CHAR No entry allocated from this pool . '' + route ) ; } freeEntries . add ( entry ) ; }
43851	@ SideOnly ( Side . CLIENT ) public static void addHolderInfo ( ITeslaHolder holder , List < String > tooltip ) { addHolderInfo ( holder . getStoredPower ( ) , holder . getCapacity ( ) , tooltip ) ; }
43853	public boolean isFollowReferrals ( ) { return followReferralsControl != _NULL ; }
43858	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeelementnodetype . class , args ) ; }
43860	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementgetelementsbytagnameaccessnodelist . class , args ) ; }
43863	public String toString ( ) { return _CHAR InstanceOf _CHAR + classNameValue . toString ( ) ; }
43871	public void paintTextPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
43873	public void deleteReferral ( String privilegeName ) throws EntitlementException { deleteReferral ( privilegeName , _BOOL ) ; }
43877	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodedocumentfragmentnormalize2 . class , args ) ; }
43881	private ByteOrderMark find ( ) { for ( ByteOrderMark bom : boms ) { if ( matches ( bom ) ) { return bom ; } } return _NULL ; }
43884	@ Override public Animation onCreateAnimation ( final int transit , final boolean enter , final int nextAnim ) { return super . onCreateAnimation ( transit , enter , nextAnim ) ; }
43886	public boolean isStreaming ( ) { return _BOOL ; }
43897	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( prefix11 . class , args ) ; }
43906	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodecommentnodename . class , args ) ; }
43907	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodetextnodetype . class , args ) ; }
43916	@ Override public void destroyModuleState ( ) { userId = _NULL ; userName = _NULL ; }
43925	public void forwardTo ( RequestContext rc ) { super . bypassForwardTo ( rc ) ; }
43934	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementgetattributenodenull . class , args ) ; }
43939	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementById02 . class , args ) ; }
43953	protected void reset ( int linksSize , int varArraySize ) { _frameTop = _NUM ; _linksTop = _NUM ; if ( _links == _NULL ) { _links = new int [ linksSize ] ; } _links [ _linksTop ++ ] = _NUM ; _stackFrames = new XObject [ varArraySize ] ; }
43974	protected String add ( HttpServletRequest request , String name , StringManager smClient ) { StringWriter stringWriter = new StringWriter ( ) ; PrintWriter printWriter = new PrintWriter ( stringWriter ) ; super . add ( request , printWriter , name , _BOOL , smClient ) ; return stringWriter . toString ( ) ; }
43975	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
43976	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatadeletedatagetlengthanddata . class , args ) ; }
43989	public static NSObject parse ( InputStream is ) throws IOException , PropertyListFormatException , ParseException , ParserConfigurationException , SAXException { return parse ( readAll ( is ) ) ; }
43997	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
43998	public static boolean isNotEmpty ( final String s ) { return ( s != _NULL && s . length ( ) > _NUM ) ; }
44007	public void addStringProperty ( String key , String value ) { getProperties ( ) . addProperty ( key , value ) ; }
44014	public boolean isMustBePresent ( ) { return mustBePresent ; }
44019	protected final boolean isSessionOpen ( ) { if ( sessionTracker != _NULL ) { return sessionTracker . getOpenSession ( ) != _NULL ; } return _BOOL ; }
44044	public NSObject remove ( String key ) { return dict . remove ( key ) ; }
44056	public void draw ( java . awt . Graphics p_graphics ) { PlaPointFloat current_mouse_position = i_brd . get_current_mouse_position ( ) ; if ( current_mouse_position == _NULL ) { return ; } circle_radius = circle_center . distance ( current_mouse_position ) ; i_brd . gdi_context . draw_circle ( circle_center , circle_radius , _NUM , java . awt . Color . white , p_graphics , _NUM ) ; }
44068	@ Override public String toString ( ) { String pattern = printerParser . toString ( ) ; pattern = pattern . startsWith ( _CHAR [ _CHAR ) ? pattern : pattern . substring ( _NUM , pattern . length ( ) - _NUM ) ; return pattern ; }
44074	public void release ( ) { releaseEglSurface ( ) ; }
44080	public MaterialBarcodeScannerBuilder withEnableAutoFocus ( boolean enabled ) { mAutoFocusEnabled = enabled ; return this ; }
44087	void releaseContext ( Context context ) { Context . exit ( ) ; }
44117	public void updateBlur ( ) { invalidate ( ) ; }
44134	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodelistindexgetlengthofemptylist . class , args ) ; }
44137	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
44151	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
44154	public static boolean isEnum ( int mod ) { return ( mod & ACC_ENUM ) != _NUM ; }
44155	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodevalue04 . class , args ) ; }
44161	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeclonetruecopytext . class , args ) ; }
44214	public static Artwork createArtworkFromMetadataBlockDataPicture ( MetadataBlockDataPicture coverArt ) { return AndroidArtwork . createArtworkFromMetadataBlockDataPicture ( coverArt ) ; }
44220	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateattributeNS04 . class , args ) ; }
44234	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns09 . class , args ) ; }
44252	public void paintTabbedPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
44253	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_noderemovechildoldchildnonexistent . class , args ) ; }
44266	public int nextInteger ( ) throws GSERException { if ( ! hasNext ( GSER_INTEGER ) ) { LocalizableMessage msg = ERR_GSER_NO_VALID_INTEGER . get ( gserValue . substring ( pos , length ) ) ; throw new GSERException ( msg ) ; } return Integer . valueOf ( next ( GSER_INTEGER ) ) . intValue ( ) ; }
44278	protected MouseInputListener createMouseInputListener ( ) { return getHandler ( ) ; }
44301	@ Override public void add ( String key , String value ) { delegate . add ( key , value ) ; }
44303	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemns05 . class , args ) ; }
44306	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported13 . class , args ) ; }
44308	public boolean bool ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return m_right . bool ( xctxt ) ; }
44318	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocument01 . class , args ) ; }
44320	@ Override public String toString ( ) { return ( toXML ( ) ) ; }
44337	public void skippedEntity ( String name ) throws SAXException { m_handler . skippedEntity ( name ) ; }
44341	boolean verifyDeveloperPayload ( Purchase p ) { String payload = p . getDeveloperPayload ( ) ; return _BOOL ; }
44345	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeinsertbeforenewchildexists . class , args ) ; }
44348	public Object clone ( ) { StyledEditorKit o = ( StyledEditorKit ) super . clone ( ) ; o . currentRun = o . currentParagraph = _NULL ; o . createInputAttributeUpdated ( ) ; o . createInputAttributes ( ) ; return o ; }
44353	public void paintToggleButtonBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
44357	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatadeletedatabegining . class , args ) ; }
44375	public void writeAttribute ( final String key , final Object defaultValue ) throws IOException { if ( key . equals ( _CHAR id _CHAR ) ) { FacesContext . getCurrentInstance ( ) . getResponseWriter ( ) . writeAttribute ( _CHAR id _CHAR , this . component . getClientId ( ) , _NULL ) ; } else { JKJsfUtil . writeAttribue ( getComponent ( ) , key , defaultValue ) ; } }
44379	public void addSigner ( PrivateKey key , X509Certificate cert , String digestOID , AttributeTable signedAttr , AttributeTable unsignedAttr ) throws IllegalArgumentException { addSigner ( key , cert , getEncOID ( key , digestOID ) , digestOID , signedAttr , unsignedAttr ) ; }
44400	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode01 . class , args ) ; }
44401	public static String removeProperty ( String key ) { return get ( ) . properties . remove ( key ) ; }
44410	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
44412	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns06 . class , args ) ; }
44418	public void load ( URL url ) throws IOException , ClassNotFoundException { addURL ( url ) ; }
44423	public boolean isSelectionVisible ( ) { return selectionVisible ; }
44431	protected boolean isDeployed ( String name ) throws Exception { String [ ] params = { name } ; String [ ] signature = { _CHAR java . lang . String _CHAR } ; Boolean result = ( Boolean ) mBeanServer . invoke ( oname , _CHAR isDeployed _CHAR , params , signature ) ; return result . booleanValue ( ) ; }
44445	public void componentMoved ( ComponentEvent e ) { }
44449	public void deleteDynamicGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMDynamicGroup group = new AMDynamicGroupImpl ( token , groupDN ) ; group . delete ( ) ; } }
44470	final ElemContext pop ( ) { return this . m_prev ; }
44472	public String encode ( ) { return new StringBuffer ( this . headerName ) . append ( COLON ) . append ( SP ) . append ( this . value ) . append ( NEWLINE ) . toString ( ) ; }
44474	public boolean isLockedDown ( ) { return code == Code . LOCKED_DOWN ; }
44484	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
44496	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR Pipeline [ _CHAR ) ; sb . append ( container ) ; sb . append ( _CHAR ) ; return sb . toString ( ) ; }
44499	public static void cleanEmbeddedCassandra ( ) { dropKeyspaces ( ) ; }
44510	public BigInteger nextBigInteger ( ) throws GSERException { if ( ! hasNext ( GSER_INTEGER ) ) { LocalizableMessage msg = ERR_GSER_NO_VALID_INTEGER . get ( gserValue . substring ( pos , length ) ) ; throw new GSERException ( msg ) ; } return new BigInteger ( next ( GSER_INTEGER ) ) ; }
44517	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenomodificationallowederr . class , args ) ; }
44540	private Map readCurrentState ( String dn ) { try { return read ( AccessController . doPrivileged ( AdminTokenAction . getInstance ( ) ) , dn ) ; } catch ( SMSException | SSOException e ) { return _NULL ; } }
44557	public boolean isSharpable ( ) { return sharpable ; }
44561	public void remove ( String jwt ) { sessionInfoCache . remove ( jwt ) ; }
44567	public void init ( Instrumentation inst , QueryReporter queryReporter , ConnectorConfiguration configuration ) { executeStatementWrapper = new ExecuteStatementWrapper ( queryReporter , configuration ) ; setIntercepters ( inst ) ; }
44602	public boolean validate ( Set < String > values ) { for ( String value : values ) { if ( ! validate ( value ) ) { return _BOOL ; } } return _BOOL ; }
44614	public boolean isAllowUnlimited ( ) { return allowUnlimited ; }
44615	public boolean isValid ( ) { return ! ( containsNone ( ) && ( containsConsent ( ) || containsLogin ( ) ) ) && ! containsSelectAccount ( ) ; }
44620	public void windowOpened ( WindowEvent e ) { }
44626	public ListIterator < HDR > listIterator ( ) { return hlist . listIterator ( _NUM ) ; }
44649	public static NSObject parse ( InputStream is ) throws IOException , PropertyListFormatException , ParseException , ParserConfigurationException , SAXException { return parse ( readAll ( is ) ) ; }
44660	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
44666	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrprevioussiblingnull . class , args ) ; }
44667	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
44686	static void checkStreamCipher ( CryptoCipher cipher ) throws IOException { if ( ! cipher . getAlgorithm ( ) . equals ( _CHAR AES / CTR / NoPadding _CHAR ) ) { throw new IOException ( _CHAR AES / CTR / NoPadding is required _CHAR ) ; } }
44698	public double num ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return m_right . num ( xctxt ) ; }
44719	private boolean matches ( ByteOrderMark bom ) { for ( int i = _NUM ; i < bom . length ( ) ; i ++ ) { if ( bom . get ( i ) != firstBytes [ i ] ) { return _BOOL ; } } return _BOOL ; }
44720	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementsbytagnameNS02 . class , args ) ; }
44741	@ Override public void body ( String namespace , String name , String bodyText ) throws Exception { if ( attributeName == _NULL && ! fromStack ) { if ( bodyTextStack == _NULL ) { bodyTextStack = new ArrayStack < > ( ) ; } bodyTextStack . push ( bodyText . trim ( ) ) ; } }
44746	private Insets parseInsets ( String insets , String errorMsg ) throws SAXException { StringTokenizer tokenizer = new StringTokenizer ( insets ) ; return new Insets ( nextInt ( tokenizer , errorMsg ) , nextInt ( tokenizer , errorMsg ) , nextInt ( tokenizer , errorMsg ) , nextInt ( tokenizer , errorMsg ) ) ; }
44750	@ Override public boolean isSupportedLookAndFeel ( ) { return _BOOL ; }
44759	@ Deprecated public String encode ( String path ) { return encode ( path , _CHAR UTF - _NUM _CHAR ) ; }
44766	@ Override public void write ( char [ ] chr , int st , int end ) throws IOException { out . write ( chr , st , end ) ; }
44800	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrsubstringnegativeoffset . class , args ) ; }
44803	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode13 . class , args ) ; }
44813	public boolean removeArgument ( final Argument argument ) { obfuscatedArgs . remove ( argument ) ; return args . remove ( argument ) ; }
44814	Parsed toUnresolved ( ) { return currentParsed ( ) ; }
44827	public int hashCode ( ) { return uri . hashCode ( ) ; }
44847	public boolean isMutable ( ) { return isMutable ; }
44852	public boolean isRedirectPermanently ( ) { return this . redirectPermanently ; }
44864	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributensurinull . class , args ) ; }
44871	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrinsertbefore6 . class , args ) ; }
44881	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetelementsbytagnamenomatch . class , args ) ; }
44887	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
44913	public void select_items ( Set < BrdItem > p_items ) { if ( board_is_read_only ) return ; display_layer_messsage ( ) ; if ( interactive_state instanceof StateMenu ) { set_interactive_state ( StateSelectedItem . get_instance ( p_items , interactive_state , this , actlog ) ) ; } else if ( interactive_state instanceof StateSelectedItem ) { ( ( StateSelectedItem ) interactive_state ) . get_item_list ( ) . addAll ( p_items ) ; repaint ( ) ; } }
44954	public void removeValue ( String k ) { if ( values != _NULL ) { values . remove ( k ) ; } }
44957	public int hashCode ( ) { return ( lSchemaType . hashCode ( ) ) ; }
44961	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
44976	public void addFileset ( FileSet fs ) { filesets . add ( fs ) ; }
45019	public static String toString ( URI uri ) throws IOException { return toString ( uri , Charset . defaultCharset ( ) ) ; }
45022	public String toString ( ) { return nameSpace + _CHAR | _CHAR + name ; }
45035	public void deleteStaticGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMStaticGroup group = new AMStaticGroupImpl ( token , groupDN ) ; group . delete ( ) ; } }
45040	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( notationgetsystemidnull . class , args ) ; }
45044	public NewEncryptedID createNewEncryptedID ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NEW_ENCRYPTEDID , value ) ; if ( obj == _NULL ) { return new NewEncryptedIDImpl ( value ) ; } else { return ( NewEncryptedID ) obj ; } }
45052	@ Override public void body ( String namespace , String name , String bodyText ) throws Exception { if ( paramCount == _NUM ) { this . bodyText = bodyText . trim ( ) ; } }
45062	public boolean hasMoreElements ( ) { return i < attr . length ; }
45098	public String encode ( ) { return PROTO_VERSION_FIELD + protoVersion + Separators . NEWLINE ; }
45105	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( prefix03 . class , args ) ; }
45120	public static boolean isAscii ( String s ) { if ( s == _NULL ) { return _BOOL ; } try { if ( ! s . equals ( new String ( s . getBytes ( ASCII_CHARSET ) , ASCII_CHARSET ) ) ) { return _BOOL ; } } catch ( java . io . UnsupportedEncodingException uee ) { return _BOOL ; } return _BOOL ; }
45130	public static View showTips ( View targetView , TipsType tipsType ) { Tips tips = tipsType . createTips ( targetView . getContext ( ) ) ; return tips . applyTo ( targetView , tipsType . ordinal ( ) ) ; }
45167	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
45174	public void addOptionalAttribute ( Attr attr ) { if ( m_optional == _NULL ) { m_optional = new AttrSet ( ) ; } m_optional . add ( attr ) ; }
45186	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementhasattribute01 . class , args ) ; }
45187	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_notationsremovenameditemns1 . class , args ) ; }
45188	public StringBuilder encodeBody ( StringBuilder buffer ) { return encodeProduct ( buffer ) ; }
45227	void clear ( ) { for ( int i = _NUM ; i <= size ; i ++ ) queue [ i ] = _NULL ; size = _NUM ; }
45241	public int readByte ( ) throws IOException { ++ length ; return in . read ( ) & _NUM ; }
45250	@ Override public String toString ( ) { return getDescriptor ( ) ; }
45265	public boolean bool ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return ( m_left . bool ( xctxt ) && m_right . bool ( xctxt ) ) ; }
45298	public static List < VerificationException > verifyCertificates ( Certificate [ ] certs , KeyStore keystore , Calendar calendar ) { return verifyCertificates ( certs , keystore , _NULL , calendar ) ; }
45305	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentinvalidcharacterexceptioncreateattribute . class , args ) ; }
45307	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttribute02 . class , args ) ; }
45310	public void select_items ( Point2D p_point ) { if ( board_is_read_only ) return ; if ( ! ( interactive_state instanceof StateMenu ) ) return ; PlaPointFloat location = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; StateInteractive return_state = ( ( StateMenu ) interactive_state ) . select_items ( location ) ; set_interactive_state ( return_state ) ; }
45325	protected void showToast ( String text ) { Toast . makeText ( this , text , Toast . LENGTH_SHORT ) . show ( ) ; }
45334	public void paintFileChooserBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
45345	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( removeNamedItemNS03 . class , args ) ; }
45365	String popBaseIndentifier ( ) { return ( String ) m_baseIdentifiers . pop ( ) ; }
45383	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
45386	public static boolean isBoolean ( String str ) { return str . equals ( _CHAR _BOOL _CHAR ) || str . equals ( _CHAR _BOOL _CHAR ) || str . equals ( _CHAR yes _CHAR ) || str . equals ( _CHAR no _CHAR ) ; }
45401	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_entitiesremovenameditem1 . class , args ) ; }
45425	private static String property ( String string ) { int length = string . length ( ) ; if ( length == _NUM ) { return _CHAR _CHAR ; } else if ( length == _NUM ) { return string . toLowerCase ( ) ; } else { return string . substring ( _NUM , _NUM ) . toLowerCase ( ) + string . substring ( _NUM ) ; } }
45474	static void createDirectory ( final String directory ) throws IOException { File dir = new File ( directory ) ; if ( ! dir . exists ( ) ) { if ( ! dir . mkdirs ( ) ) { throw new IOException ( _CHAR Failed to create directory : _CHAR + directory ) ; } } }
45477	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeissupported01 . class , args ) ; }
45478	public void addResponse ( Response response ) { responseVector . addElement ( response ) ; }
45483	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createElementNS04 . class , args ) ; }
45514	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementremoveattributenomodificationallowederrEE . class , args ) ; }
45522	public boolean beginContentStaticWarningDisplay ( ChildDisplayEvent event ) { lockWarning = ac . getLockoutMsg ( ) ; accountLocked = ac . isLockedOut ( ) ; if ( loginDebug . messageEnabled ( ) ) { loginDebug . message ( _CHAR lock warning message is : _CHAR + lockWarning ) ; } return ( ( lockWarning != _NULL ) && ( lockWarning . length ( ) > _NUM ) ) ; }
45534	@ Override public int read ( byte [ ] bytes ) throws IOException { return read ( bytes , _NUM , bytes . length ) ; }
45541	@ Override public int hashCode ( ) { int result = _NUM ; for ( int i = _NUM ; i < vals . length ; i ++ ) result = _NUM * result + Float . floatToIntBits ( vals [ i ] ) ; return result ; }
45552	public Version createVersion ( int value ) { ProtoVersionField protoVersionField = new ProtoVersionField ( ) ; try { protoVersionField . setVersion ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; return _NULL ; } return protoVersionField ; }
45589	final TreeNode < K , V > root ( ) { for ( TreeNode < K , V > r = this , p ; ; ) { if ( ( p = r . parent ) == _NULL ) return r ; r = p ; } }
45599	public static char lowSurrogate ( int c ) { return ( char ) ( ( ( c - _NUM ) & _NUM ) + _NUM ) ; }
45612	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
45653	public void logTrace ( String message ) { if ( needsLogging ) { String newMessage = this . enhanceMessage ( message ) ; if ( this . lineCount == _NUM ) { getLogger ( ) . debug ( _CHAR BUILD TIMESTAMP = _CHAR + this . buildTimeStamp ) ; getLogger ( ) . debug ( _CHAR Config Propeties = _CHAR + this . configurationProperties ) ; } countLines ( newMessage ) ; getLogger ( ) . trace ( newMessage ) ; } }
45658	public void requestPasswordChangedByRequiredTime ( ) { operations . add ( PasswordPolicyStateOperationType . GET_PASSWORD_CHANGED_BY_REQUIRED_TIME ) ; }
45677	public void keyReleased ( KeyEvent e ) { }
45694	public static boolean contains ( String s1 , String s2 ) { if ( s1 == _NULL || s2 == _NULL ) { return _BOOL ; } return s1 . contains ( s2 ) ; }
45703	private ASN1Primitive toASN1Object ( X509Certificate cert ) throws CertificateEncodingException { try { return new ASN1InputStream ( cert . getEncoded ( ) ) . readObject ( ) ; } catch ( Exception e ) { throw new CertificateEncodingException ( _CHAR Exception while encoding certificate : '' + e . toString ( ) ) ; } }
45708	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode07 . class , args ) ; }
45720	public void paintTextFieldBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
45729	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { super . beginDisplay ( event ) ; setInlineAlertMessage ( CCAlert . TYPE_ERROR , _CHAR message . error _CHAR , _CHAR invalid . url . message _CHAR ) ; }
45732	public final boolean isExpired ( ) { return currentTimeMillis ( ) > getExpiryTime ( ) ; }
45743	public static void write ( OutputStream out , int c ) { if ( out == _NULL ) { throw new IllegalArgumentException ( _CHAR output stream _NULL . _CHAR ) ; } try { out . write ( c ) ; } catch ( IOException e ) { throw new RuntimeException ( e . getMessage ( ) , e ) ; } }
45746	protected boolean isFatalAlert ( ) { return ( alert [ _NUM ] == _NUM ) ; }
45754	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { Expression expr = ( ( ElemVariable ) m_obj ) . getSelect ( ) . getExpression ( ) ; XObject xobj = expr . execute ( xctxt ) ; xobj . allowDetachToRelease ( _BOOL ) ; return xobj ; }
45755	@ Override public boolean accept ( File dir , String name ) { for ( String name2 : names ) { if ( caseSensitivity . checkEquals ( name , name2 ) ) { return _BOOL ; } } return _BOOL ; }
45759	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrappendchild1 . class , args ) ; }
45764	public PdfImageXObject copyTo ( PdfDocument document ) { PdfImageXObject image = new PdfImageXObject ( getPdfObject ( ) . copyTo ( document ) ) ; image . width = width ; image . height = height ; image . mask = mask ; image . softMask = softMask ; return image ; }
45773	@ Override public String toString ( ) { final StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
45780	protected PStmtKey createKey ( final String sql , final StatementType stmtType ) { String catalog = _NULL ; try { catalog = getCatalog ( ) ; } catch ( final SQLException e ) { } return new PStmtKey ( normalizeSQL ( sql ) , catalog , stmtType , _NULL ) ; }
45789	public void paintSplitPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
45795	public boolean isExpanded ( ) { return isExpanded ; }
45798	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemgetvalue . class , args ) ; }
45805	@ Override public void accept ( double value ) { ++ count ; simpleSum += value ; sumWithCompensation ( value ) ; min = Math . min ( min , value ) ; max = Math . max ( max , value ) ; }
45806	public void dispose ( ) { if ( saved != _NULL ) { putCachedRaster ( model , saved ) ; saved = _NULL ; } }
45829	public void logDebug ( String message ) { if ( needsLogging ) { String newMessage = this . enhanceMessage ( message ) ; if ( this . lineCount == _NUM ) { getLogger ( ) . debug ( _CHAR BUILD TIMESTAMP = _CHAR + this . buildTimeStamp ) ; getLogger ( ) . debug ( _CHAR Config Propeties = _CHAR + this . configurationProperties ) ; } countLines ( newMessage ) ; getLogger ( ) . debug ( newMessage ) ; } }
45831	public boolean isNull ( ) { return isNull ( encryptedString ) ; }
45839	public boolean isExpandEntityReferences ( ) { return _BOOL ; }
45840	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfString makeIndirect ( PdfDocument document , PdfIndirectReference reference ) { return ( PdfString ) super . makeIndirect ( document , reference ) ; }
45855	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported07 . class , args ) ; }
45856	public String constantName ( ) { return constantName ; }
45885	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode10 . class , args ) ; }
45889	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrfirstchild . class , args ) ; }
45900	public static void encrypt ( PdfReader reader , OutputStream os , EncryptionProperties properties ) { encrypt ( reader , os , properties , _NULL ) ; }
45903	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
45918	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodechildnodesappendchild . class , args ) ; }
45943	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createElementNS03 . class , args ) ; }
45945	public ItemStack toItemStack ( int amount ) { return new ItemStack ( type , amount , data ) ; }
45946	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrinsertdataoffsetnegative . class , args ) ; }
45953	public void paintCheckBoxBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
45954	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeappendchildgetnodename . class , args ) ; }
45970	public Paragraph add ( ILeafElement element ) { childElements . add ( element ) ; return this ; }
45972	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetelementsbytagnamens04 . class , args ) ; }
45977	boolean isPrivileged ( ) { return isPrivileged ; }
45998	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeinsertbeforerefchildnull . class , args ) ; }
46004	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
46009	public static boolean isUserExists ( String userDN ) { try { return userProvider . isUserExists ( userDN ) ; } catch ( DataStoreProviderException dspe ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR IDPPUtils . isUserExists : Userentry is _NULL _CHAR , dspe ) ; } return _BOOL ; } }
46018	public boolean isMustBePresent ( ) { return mustBePresent ; }
46020	public boolean containsConsent ( ) { return prompts . contains ( PROMPT_CONSENT ) ; }
46025	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( prefix04 . class , args ) ; }
46050	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR FactoryCreateRule [ _CHAR ) ; if ( creationFactory != _NULL ) { sb . append ( _CHAR creationFactory = _CHAR ) ; sb . append ( creationFactory ) ; } sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
46054	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodevalue07 . class , args ) ; }
46059	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementremoveattribute . class , args ) ; }
46071	public void addPattern ( String pattern ) throws ParseException { if ( pattern == _NULL ) return ; PatternEntry . Parser parser = new PatternEntry . Parser ( pattern ) ; PatternEntry entry = parser . next ( ) ; while ( entry != _NULL ) { fixEntry ( entry ) ; entry = parser . next ( ) ; } }
46076	public Event35Id . Builder clearSecond ( ) { second = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
46079	public static MultiPolygon fromJson ( String json ) { GsonBuilder gson = new GsonBuilder ( ) ; gson . registerTypeAdapter ( Position . class , new PositionDeserializer ( ) ) ; return gson . create ( ) . fromJson ( json , MultiPolygon . class ) ; }
46087	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNS09 . class , args ) ; }
46090	public Object remove ( Object key ) { synchronized ( map ) { if ( removeElement ( key ) ) { return map . remove ( key ) ; } } return _NULL ; }
46095	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementremoveattributenodenomodificationallowederr . class , args ) ; }
46110	public boolean isDefined ( Object key ) { if ( key instanceof StyleConstants ) { Object cssKey = css . styleConstantsKeyToCSSKey ( ( StyleConstants ) key ) ; if ( cssKey != _NULL ) { return super . isDefined ( cssKey ) ; } } return super . isDefined ( key ) ; }
46122	public static void remove ( String key ) { if ( mSharedPreferences == _NULL ) { return ; } mSharedPreferences . edit ( ) . remove ( key ) . apply ( ) ; }
46132	public java . util . Iterator < HDR > iterator ( ) { return this . hlist . listIterator ( ) ; }
46162	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
46171	public Observable < Store > retrieveStoreObservable ( String sellerId ) { io . vertx . rx . java . ObservableFuture < Store > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrieveStore ( sellerId , resultHandler . toHandler ( ) ) ; return resultHandler ; }
46182	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ index = _CHAR + index + _CHAR , errorIndex = _CHAR + errorIndex + _CHAR ; }
46185	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapgetnameditemns02 . class , args ) ; }
46199	protected PropertyChangeListener createPropertyChangeListener ( ) { return getHandler ( ) ; }
46201	public void startPrefixMapping ( String prefix , String uri ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . startPrefixMapping ( prefix , uri ) ; } }
46208	public void repaint ( ) { if ( paint_immediately ) { final Rectangle MAX_RECTAMGLE = new Rectangle ( _NUM , _NUM , Integer . MAX_VALUE , Integer . MAX_VALUE ) ; board_panel . paintImmediately ( MAX_RECTAMGLE ) ; } else { board_panel . repaint ( ) ; } }
46226	public final boolean hasValue ( ) { return value != _NULL ; }
46249	private void cancelClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
46279	public synchronized int size ( ) { return count ; }
46295	public synchronized boolean isIdle ( ) { return idleStartTimeNs != _NUM ; }
46324	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { if ( xctxt . getIteratorRoot ( ) == xctxt . getCurrentNode ( ) ) return getStaticScore ( ) ; else return this . SCORE_NONE ; }
46342	public final void add ( final String problem , final Severity severity ) { this . problems . add ( new Problem ( problem , severity ) ) ; this . hasFatal |= severity == Severity . FATAL ; }
46348	boolean isOrdered ( ) { return m_isOrdered ; }
46351	private String createLicenseKey ( final String licenseKey ) { if ( validateLicenseKey ( licenseKey ) ) { StringBuilder sb = new StringBuilder ( ) ; for ( int i : LICENSE_CHARS ) { sb . append ( licenseKey . charAt ( i ) ) ; } return sb . toString ( ) ; } return _CHAR _CHAR ; }
46354	public static void unbindContext ( Object obj , Object token ) { if ( ContextAccessController . checkSecurityToken ( obj , token ) ) { objectBindings . remove ( obj ) ; } }
46362	public static long takePower ( ICapabilityProvider provider , EnumFacing side , long power , boolean simulated ) { return isTeslaProducer ( provider , side ) ? getTeslaProducer ( provider , side ) . takePower ( power , simulated ) : _NUM ; }
46366	public Builder add ( String name , String value ) { checkNameAndValue ( name , value ) ; return addLenient ( name , value ) ; }
46369	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
46373	public Event35Log . Builder clearMAXEVENTS ( ) { MAX_EVENTS = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
46374	public void remove ( int position ) throws IndexOutOfBoundsException { synchronized ( lock ) { items . remove ( position ) ; } itemPositionChangeChecked = new SparseBooleanArray ( items . size ( ) ) ; notifyDataSetChanged ( ) ; }
46377	public static ComponentUI createUI ( JComponent ta ) { return new SynthTextAreaUI ( ) ; }
46405	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodecommentnodeattributes . class , args ) ; }
46409	protected void uninstallListeners ( ) { progressBar . removeChangeListener ( changeListener ) ; progressBar . removePropertyChangeListener ( getHandler ( ) ) ; handler = _NULL ; }
46414	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementwrongdocumenterr . class , args ) ; }
46420	public boolean isFedStatusActive ( ) { return this . isActive ; }
46423	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrsetvaluenomodificationallowederrEE . class , args ) ; }
46425	public void scrollToTop ( ) { if ( mScrollbar . isThumbDetached ( ) ) { mScrollbar . reattachThumbToScroll ( ) ; } scrollToPosition ( _NUM ) ; }
46430	public double num ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return ( m_left . num ( xctxt ) / m_right . num ( xctxt ) ) ; }
46434	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( localName03 . class , args ) ; }
46444	private PluggablePublisher createPublisher ( ) { if ( PublisherType . DISRUPTOR . equals ( publisherType ) ) { logger . debug ( _CHAR Event type : _CHAR + stringifiedName + _CHAR publisher : DISRUPTOR _CHAR ) ; return DisruptorReferringPublisher . getInstance ( ) ; } else { logger . debug ( _CHAR Event type : _CHAR + stringifiedName + _CHAR publisher : BLOCKING _CHAR ) ; return BlockingPublisher . getInstance ( ) ; } }
46454	public String toString ( ) { return name ; }
46462	public void monitor ( FileChangeListener listener ) { if ( lock . tryLock ( ) ) { try { FileChangeSet fileChangeSet = createFileChangeSet ( ) ; if ( fileChangeSet . isEmpty ( ) ) { return ; } listener . onChanges ( fileChangeSet ) ; } finally { lock . unlock ( ) ; } } }
46464	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
46471	protected boolean isLevelEnabled ( int logLevel ) { return ( logLevel >= currentLogLevel ) ; }
46479	public void paintDesktopPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
46494	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( this . getClass ( ) . getName ( ) ) ; sb . append ( _CHAR ) ; if ( container == _NULL ) { sb . append ( _CHAR Container is _NULL _CHAR ) ; } else { sb . append ( container . getName ( ) ) ; } sb . append ( _CHAR ) ; return sb . toString ( ) ; }
46516	public void put ( WriteableTransaction txn , EntryID entryID , Entry entry ) throws StorageRuntimeException , DirectoryException { put ( txn , entryID , encode ( entry ) ) ; }
46537	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrreplacedatacountnegative . class , args ) ; }
46545	public ExpressionNode exprGetParent ( ) { return getParentElem ( ) ; }
46549	public GenericObject first ( ) { return ( SIPObject ) super . first ( ) ; }
46579	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodedocumentfragmentnodename . class , args ) ; }
46585	@ Override public void accept ( int value ) { ++ count ; sum += value ; min = Math . min ( min , value ) ; max = Math . max ( max , value ) ; }
46586	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatagetdata . class , args ) ; }
46601	private void addMessage ( LocalizableMessageBuilder buf , LocalizableMessage message ) { if ( buf . length ( ) > _NUM ) { buf . append ( LINE_SEPARATOR ) ; } buf . append ( message ) ; }
46602	public boolean verifyXMLSignature ( Document doc , String certAlias ) throws XMLSignatureException { return verifyXMLSignature ( SOAPBindingConstants . WSF_10_VERSION , certAlias , doc ) ; }
46604	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeelementnodename . class , args ) ; }
46613	public ConnectionParameters adminPort ( int port ) { adminPort = port ; return this ; }
46614	public static String canonicalize ( String dn ) { String canonicalizedDN = DN . valueOf ( dn ) . toString ( ) ; if ( isCaseInsensitiveDN ) { canonicalizedDN = canonicalizedDN . toLowerCase ( ) ; } return canonicalizedDN ; }
46627	private StringBuffer format ( BigInteger number , StringBuffer result , FieldPosition fieldPosition ) { fieldPosition . setBeginIndex ( _NUM ) ; fieldPosition . setEndIndex ( _NUM ) ; return format ( number , result , fieldPosition . getFieldDelegate ( ) , _BOOL ) ; }
46633	public boolean verifyXMLSignature ( org . w3c . dom . Element element ) throws XMLSignatureException { if ( element == _NULL ) { SAMLUtilsCommon . debug . error ( _CHAR signXML : element is _NULL . _CHAR ) ; throw new XMLSignatureException ( SAMLUtilsCommon . bundle . getString ( _CHAR nullInput _CHAR ) ) ; } return verifyXMLSignature ( XMLUtils . print ( element ) ) ; }
46636	public TagField createField ( Artwork artwork ) throws FieldDataInvalidException { throw new FieldDataInvalidException ( _CHAR Not supported _CHAR ) ; }
46637	@ Override public String toString ( ) { return _CHAR RADIUS server : _CHAR + host + _CHAR : _CHAR + port ; }
46648	public void handleButton1Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToRealmView ( event ) ; }
46649	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributens02 . class , args ) ; }
46675	public static BigInteger [ ] convertListToArray ( List < BigInteger > list ) { BigInteger [ ] result = new BigInteger [ list . size ( ) ] ; for ( int i = _NUM ; i < list . size ( ) ; i ++ ) { result [ i ] = list . get ( i ) ; } return result ; }
46676	public static LDAPURL makeLDAPUrl ( LDAPURL url , String dn ) { return new LDAPURL ( url . getScheme ( ) , url . getHost ( ) , url . getPort ( ) , dn , _NULL , SearchScope . BASE_OBJECT , _NULL , _NULL ) ; }
46683	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrspecifiedvalue . class , args ) ; }
46700	public PageRange addSinglePage ( int pageNumber ) { sequenceStarts . add ( pageNumber ) ; sequenceEnds . add ( pageNumber ) ; return this ; }
46708	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodecommentnodetype . class , args ) ; }
46712	public boolean isClosed ( ) { synchronized ( closeLock ) { return closed ; } }
46715	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { ObjectInputStream . GetField fields = s . readFields ( ) ; String actions = ( String ) fields . get ( _CHAR actions _CHAR , _NULL ) ; init ( actions ) ; }
46732	@ DataProvider ( name = _CHAR longLimitData _CHAR ) Object [ ] [ ] createLongLimitData ( ) { return new Object [ ] [ ] { { _NUM , _NUM } } ; }
46757	public static boolean isBoolean ( String desc ) { return desc . endsWith ( _CHAR Z _CHAR ) ; }
46758	void addClientConnection ( ClientConnection clientConnection ) { clientConnections . put ( clientConnection , clientConnection ) ; }
46769	public E last ( ) { return backingMap . lastKey ( ) ; }
46773	public boolean verify ( ) throws NoSuchAlgorithmException , NoSuchProviderException , InvalidKeyException , SignatureException { return verify ( BouncyCastleProvider . PROVIDER_NAME ) ; }
46785	public String toXMLString ( ) throws PAOSException { return toXMLString ( _BOOL , _BOOL ) ; }
46803	public void start_batch_autorouter ( ) { if ( board_is_read_only ) { stat . userPrintln ( classname + _CHAR start_batch_autorouter : FAIL board is read only _CHAR ) ; return ; } r_board . generate_snapshot ( ) ; interactive_action_thread = new BatchAutorouteThread ( this ) ; interactive_action_thread . start ( ) ; }
46810	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( noderemovechildgetnodename . class , args ) ; }
46814	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS06 . class , args ) ; }
46821	public void paintTabbedPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
46828	public void deleteField ( String id ) { super . doDeleteTagField ( new FrameAndSubId ( id , _NULL ) ) ; }
46831	@ Override public String toString ( ) { final Statement statement = getDelegate ( ) ; return statement == _NULL ? _CHAR NULL _CHAR : statement . toString ( ) ; }
46859	public void parseNumbers ( ) { for ( int i = _CHAR ; i <= _CHAR ; i ++ ) { tokenTypes [ i ] |= TOKEN_DIGIT ; } tokenTypes [ _CHAR ] |= TOKEN_DIGIT ; tokenTypes [ _CHAR ] |= TOKEN_DIGIT ; }
46860	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocumentType04 . class , args ) ; }
46866	public static void assertSchemaNS ( String schemaNS ) throws XMPException { if ( schemaNS == _NULL || schemaNS . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty schema namespace URI _CHAR , XMPError . BADPARAM ) ; } }
46868	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_noderemovechildgetnodename . class , args ) ; }
46873	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeelementnodeattributes . class , args ) ; }
46883	private void updateTodaysDate ( ) { DateFormat dtFmt = new SimpleDateFormat ( _CHAR yyyy - MM - dd _CHAR ) ; dtFmt . setTimeZone ( timeZone ) ; todaysDate = dtFmt . format ( Calendar . getInstance ( timeZone ) . getTime ( ) ) ; }
46895	public StringBuilder encodeBody ( StringBuilder buffer ) { return buffer . append ( contentEncoding ) ; }
46911	public void loadPatterns ( String filename ) throws HyphenationException , FileNotFoundException { loadPatterns ( new FileInputStream ( filename ) , filename ) ; }
46915	public String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _CHAR ( _CHAR ) ; sb . append ( _CHAR Signer : _CHAR + signerCertPath . getCertificates ( ) . get ( _NUM ) ) ; if ( timestamp != _NULL ) { sb . append ( _CHAR timestamp : _CHAR + timestamp ) ; } sb . append ( _CHAR ) _CHAR ) ; return sb . toString ( ) ; }
46931	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( cdatasectionnormalize . class , args ) ; }
46933	public int hashCode ( ) { return value . hashCode ( ) ^ locale . hashCode ( ) ; }
46935	public void paintSplitPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
46940	public String toString ( ) { return _CHAR [ id = _CHAR + id + _CHAR , offset = _CHAR + offset + _CHAR , length = _CHAR + length + _CHAR ] _CHAR ; }
46942	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR FilterDef [ _CHAR ) ; sb . append ( _CHAR filterName = _CHAR ) ; sb . append ( this . filterName ) ; sb . append ( _CHAR , filterClass = _CHAR ) ; sb . append ( this . filterClass ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
46949	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeparentnode . class , args ) ; }
46950	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
46956	protected String generateSessionId ( ) { String result = _NULL ; do { if ( result != _NULL ) { duplicates ++ ; } result = sessionIdGenerator . generateSessionId ( ) ; } while ( sessions . containsKey ( result ) ) ; return result ; }
46958	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
46974	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodens04 . class , args ) ; }
46985	protected void installKeyboardActions ( ) { InputMap iMap = getInputMap ( JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT ) ; SwingUtilities . replaceUIInputMap ( spinner , JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT , iMap ) ; LazyActionMap . installLazyActionMap ( spinner , BasicSpinnerUI . class , _CHAR Spinner . actionMap _CHAR ) ; }
46987	public void useHttps ( SSLSocketFactory sslSocketFactory , boolean tunnelProxy ) { this . sslSocketFactory = sslSocketFactory ; this . tunnelProxy = tunnelProxy ; }
46991	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
47001	public String toXMLString ( boolean includeNS , boolean declareNS ) throws SAML2Exception { return xmlString ; }
47003	public void endPaint ( ) { }
47010	public int next ( ) { if ( _currentNode != NULL ) { int node = _currentNode ; _currentNode = _nextsib2 ( node ) ; return returnNode ( makeNodeHandle ( node ) ) ; } return END ; }
47041	public boolean isActivated ( ) throws AMException , SSOException { return getStringAttribute ( statusAN ) . equalsIgnoreCase ( _CHAR active _CHAR ) ; }
47048	public void paintMenuBarBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
47057	public SAML2ConfigBuilder encryptAttributes ( boolean encryptAttributes ) { this . encryptAttributes = encryptAttributes ; return this ; }
47075	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationcreatedocumenttype01 . class , args ) ; }
47084	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapsetnameditem . class , args ) ; }
47086	private void insertTimeStamp ( Intent intent ) { Date date = new Date ( System . currentTimeMillis ( ) ) ; OmniDate omniDate = new OmniDate ( date ) ; intent . putExtra ( Event . ATTRIBUTE_TIME , omniDate . toString ( ) ) ; }
47115	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementsbytagnameNS04 . class , args ) ; }
47121	public void postNewNameIDSuccess ( String hostedEntityID , String realm , HttpServletRequest request , HttpServletResponse response , String userID , ManageNameIDRequest idRequest , ManageNameIDResponse idResponse , String binding ) { return ; }
47124	public void toggleExpanded ( ) { if ( isExpanded ( ) ) { collapse ( ) ; } else { expand ( ) ; } }
47133	public final void removeAllElements ( ) { for ( int i = _NUM ; i < m_firstFree ; i ++ ) { m_map [ i ] = _NULL ; } m_firstFree = _NUM ; }
47147	private void checkInvariants ( ) { assert ( wordsInUse == _NUM || words [ wordsInUse - _NUM ] != _NUM ) ; assert ( wordsInUse >= _NUM && wordsInUse <= words . length ) ; assert ( wordsInUse == words . length || words [ wordsInUse ] == _NUM ) ; }
47172	public Document read ( String database , String table , Identifier id ) { verifyTable ( database , table ) ; return docRepo . read ( id ) ; }
47177	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrinsertbefore7 . class , args ) ; }
47178	public boolean enableMixins ( ) { return _BOOL ; }
47185	private boolean checkHasCameraOrNot ( Context context ) { return context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA ) ; }
47198	private static void assertEcho ( String result , String expected ) { assertTrue ( result . indexOf ( _CHAR < p > _CHAR + expected + _CHAR < / p > _CHAR ) > _NUM ) ; }
47203	private static boolean isDigit ( char p_char ) { return p_char >= _CHAR && p_char <= _CHAR ; }
47212	public void keyPressed ( KeyEvent e ) { }
47214	public static StringArgument trustStorePathArgument ( ) throws ArgumentException { return trustStorePathArgument ( _NULL ) ; }
47226	public void postNewNameIDSuccess ( String hostedEntityID , String realm , HttpServletRequest request , HttpServletResponse response , String userID , ManageNameIDRequest idRequest , ManageNameIDResponse idResponse , String binding ) { return ; }
47231	public void reset ( ) { int linksSize = ( _links == _NULL ) ? XPathContext . RECURSIONLIMIT : _links . length ; int varArraySize = ( _stackFrames == _NULL ) ? XPathContext . RECURSIONLIMIT * _NUM : _stackFrames . length ; reset ( linksSize , varArraySize ) ; }
47241	public void start_tile ( Point2D p_point ) { if ( board_is_read_only ) return ; PlaPointFloat location = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; set_interactive_state ( new StateConstuctTile ( location , interactive_state , this , actlog ) ) ; }
47259	public String encode ( String pString ) { return metaphone ( pString ) ; }
47262	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_domimplementationfeaturenull . class , args ) ; }
47273	public void twoPath ( Object obj1 , Object obj2 , int x ) { Object localObj ; synchronized ( obj1 ) { synchronized ( obj2 ) { if ( x == _NUM ) { localObj = obj2 ; } else { localObj = obj1 ; } } } doNothing ( localObj ) ; }
47274	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataappenddatanomodificationallowederrEE . class , args ) ; }
47289	public void addCharacterProperty ( String key , Character value ) { getProperties ( ) . addProperty ( key , value ) ; }
47300	private void unloadClient ( String clientType ) { loadedInternalClients . remove ( clientType ) ; loadedExternalClients . remove ( clientType ) ; loadedClientsMap . remove ( clientType ) ; }
47303	public int next ( ) { _currentNode = ( _currentNode == DTM . NULL ) ? DTM . NULL : _nextsib2 ( _currentNode ) ; return returnNode ( makeNodeHandle ( _currentNode ) ) ; }
47305	@ Override public boolean isClosed ( ) { return closed ; }
47326	public SignatureVisitor visitExceptionType ( ) { return this ; }
47355	public static StringArgument ldifFileArgument ( final LocalizableMessage description ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_LDIF_FILE ) . shortIdentifier ( OPTION_SHORT_LDIF_FILE ) . description ( description ) . multiValued ( ) . valuePlaceholder ( INFO_LDIFFILE_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
47377	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( entitygetentityname . class , args ) ; }
47380	public void paintToggleButtonBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
47387	public void refresh ( ) { this . padstack_combo_box . removeAllItems ( ) ; this . cl_class_combo_box . removeAllItems ( ) ; this . add_combobox_items ( ) ; this . table_model . set_values ( ) ; }
47392	public String toString ( ) { return new String ( getType ( ) + _CHAR with current value : _CHAR + getValue ( ) ) ; }
47410	@ SuppressWarnings ( { _CHAR varargs _CHAR , _CHAR unchecked _CHAR } ) public static < A > ImmutableList < A > of ( final A x1 , final A x2 , final A x3 , final A ... rest ) { return new ImmutableList < > ( x1 , new ImmutableList < > ( x2 , new ImmutableList < > ( x3 , from ( rest ) ) ) ) ; }
47423	public boolean isDirty ( ) { return this . dirty . get ( ) ; }
47462	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapreturnlastitem . class , args ) ; }
47469	public static boolean isDouble ( String desc ) { return desc . endsWith ( _CHAR D _CHAR ) ; }
47480	@ Override public Binding next ( ) throws NamingException { return nextElementInternal ( ) ; }
47491	public static ApplicationType fromString ( String type ) { if ( type != _NULL ) { for ( ApplicationType applicationType : ApplicationType . values ( ) ) { if ( type . equalsIgnoreCase ( applicationType . type ) ) { return applicationType ; } } } return _NULL ; }
47505	public Comparator < ? super E > comparator ( ) { return comparator ; }
47517	public void paintColorChooserBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
47519	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( publicId01 . class , args ) ; }
47531	public void endPrefixMapping ( String prefix ) { }
47550	public int next ( ) { int node = _currentNode ; _currentNode = m_traverser . next ( _startNode , _currentNode ) ; return returnNode ( node ) ; }
47563	@ Override public String toString ( ) { return _stmt == _NULL ? _CHAR NULL _CHAR : _stmt . toString ( ) ; }
47577	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodereplacechildnewchilddiffdocument . class , args ) ; }
47601	public static AccessTokenResolver newCtsAccessTokenResolver ( final ConnectionFactory connectionFactory , final String ctsBaseDNTemplate ) { return new CtsAccessTokenResolver ( connectionFactory , ctsBaseDNTemplate ) ; }
47637	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodesetprefix02 . class , args ) ; }
47641	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatadeletedatabegining . class , args ) ; }
47651	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeissupported05 . class , args ) ; }
47657	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeappendchildinvalidnodetype . class , args ) ; }
47660	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementremoveattributenodenomodificationallowederrEE . class , args ) ; }
47668	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createAttributeNS03 . class , args ) ; }
47669	protected void indent ( ) throws IOException { indent ( m_elemContext . m_currentElemDepth ) ; }
47681	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
47685	protected boolean isServiced ( String name ) throws Exception { String [ ] params = { name } ; String [ ] signature = { _CHAR java . lang . String _CHAR } ; Boolean result = ( Boolean ) mBeanServer . invoke ( oname , _CHAR isServiced _CHAR , params , signature ) ; return result . booleanValue ( ) ; }
47693	private void unsubscribeTopics ( String token , final String [ ] topics ) throws IOException { GcmPubSub pubSub = GcmPubSub . getInstance ( this ) ; for ( String topic : topics ) { pubSub . unsubscribe ( token , topic ) ; } }
47698	public String formatDateTime ( Date date ) { return formatDateTime ( date , _NULL ) ; }
47719	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createElementNS02 . class , args ) ; }
47737	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationhasfeature02 . class , args ) ; }
47744	public void configureIndicator ( int indicatorWidth , int indicatorHeight , int indicatorMargin ) { configureIndicator ( indicatorWidth , indicatorHeight , indicatorMargin , R . animator . scale_with_alpha , _NUM , R . drawable . white_radius , R . drawable . white_radius ) ; }
47746	public static boolean isInterface ( int mod ) { return ( mod & ACC_INTERFACE ) != _NUM ; }
47749	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_entitiesremovenameditemns1 . class , args ) ; }
47763	public int hashCode ( ) { return ( errorIndex << _NUM ) | index ; }
47788	boolean isInteractiveMode ( ) { return isInteractiveMode ; }
47802	public WaitingThread nextThread ( ) { return this . waitingThreads . peek ( ) ; }
47803	public Subject removeSubject ( String subjectName ) { return users . removeSubject ( subjectName ) ; }
47808	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documenttypegetdoctype . class , args ) ; }
47814	static String parseCDATA ( Element elem ) { if ( elem == _NULL ) { return _NULL ; } Node text = elem . getFirstChild ( ) ; if ( text != _NULL ) { return text . getNodeValue ( ) ; } return _NULL ; }
47825	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; return _NULL ; }
47869	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodecdatasectionnodevalue . class , args ) ; }
47873	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodecommentnodevalue . class , args ) ; }
47887	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( localName04 . class , args ) ; }
47891	public static boolean dnEquals ( String dn1 , String dn2 ) { DN dnObj1 = DN . valueOf ( dn1 ) ; DN dnObj2 = DN . valueOf ( dn2 ) ; return dnObj1 . equals ( dnObj2 ) ; }
47899	public void paintOptionPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
47910	public void attributeDecl ( String arg0 , String arg1 , String arg2 , String arg3 , String arg4 ) throws SAXException { m_handler . attributeDecl ( arg0 , arg1 , arg2 , arg3 , arg4 ) ; }
47918	public void validateAttributeQuery ( HttpServletRequest request , HttpServletResponse response , AttributeQuery attrQuery , String attrAuthorityEntityID , String realm ) throws SAML2Exception { AttributeQueryUtil . verifyAttrQuerySignature ( attrQuery , attrAuthorityEntityID , realm ) ; ; }
47924	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrchildnodes1 . class , args ) ; }
47933	public void removeOperation ( Operation operation ) { if ( isRunning ) { if ( operationHandlerThreadHandler == _NULL ) return ; operationHandlerThreadHandler . removeCallbacks ( new AndroidOperation ( this , operation ) ) ; } else { operationQueue . remove ( new AndroidOperation ( this , operation ) ) ; } }
47934	public void configure ( MetricReference ref , MetricAnalysisConfiguration config ) { metricStatisticsMap . get ( ref ) . config = config ; if ( ! isAnalysisStarted ( ref ) ) { startAnalysis ( ref ) ; } }
47940	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrcreatetextnode2 . class , args ) ; }
47954	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocumentType03 . class , args ) ; }
47961	public void update ( byte input ) { engineUpdate ( input ) ; state = IN_PROGRESS ; }
47967	public static long hash64 ( final String text ) { final byte [ ] bytes = text . getBytes ( ) ; return hash64 ( bytes , bytes . length ) ; }
47983	protected HttpURLConnection createGet ( String uri ) throws IOException { return createConnection ( uri , METHOD_GET ) ; }
47986	public int nextInteger ( ) throws DecodeException { if ( ! hasNext ( GSER_INTEGER ) ) { final LocalizableMessage msg = WARN_GSER_NO_VALID_INTEGER . get ( gserValue . substring ( pos , length ) ) ; throw DecodeException . error ( msg ) ; } return Integer . valueOf ( next ( GSER_INTEGER ) ) . intValue ( ) ; }
47994	@ DataProvider ( name = _CHAR writeModifyDNDataProvider _CHAR ) public Object [ ] [ ] createTestWriteModifyDNData ( ) throws Exception { return MODIFY_DN_ENTRY_DATA_LDIF ; }
48002	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported05 . class , args ) ; }
48005	public static boolean isChar ( String desc ) { return desc . endsWith ( _CHAR C _CHAR ) ; }
48006	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS02 . class , args ) ; }
48040	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrnotspecifiedvalue . class , args ) ; }
48067	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeinsertbeforenewchilddiffdocument . class , args ) ; }
48069	public void paintCheckBoxBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
48071	public String encode ( String pString ) { return soundex ( pString ) ; }
48079	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentgetelementsbytagnamevalue . class , args ) ; }
48096	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( name ) ; if ( hasDescription ( ) ) { sb . append ( _CHAR ( _CHAR ) ; sb . append ( description ) ; sb . append ( _CHAR ) _CHAR ) ; } return sb . toString ( ) ; }
48098	public boolean equals ( XObject obj2 ) { return obj2 . getType ( ) == CLASS_NULL ; }
48099	public static Clause not ( Clause clause ) { return new NotClause ( clause ) ; }
48105	@ Override public List < GapicProvider < ? extends Object >> create ( Model model , ApiConfig apiConfig , GapicGeneratorConfig generatorConfig ) { return defaultCreate ( model , apiConfig , generatorConfig ) ; }
48113	BigInteger toBigInteger ( int sign ) { if ( intLen == _NUM || sign == _NUM ) return BigInteger . ZERO ; return new BigInteger ( getMagnitudeArray ( ) , sign ) ; }
48116	@ Override public boolean markSupported ( ) { return _BOOL ; }
48128	static MemberName generateCustomizedCode ( LambdaForm form , MethodType invokerType ) { InvokerBytecodeGenerator g = new InvokerBytecodeGenerator ( _CHAR MH _CHAR , form , invokerType ) ; return g . loadMethod ( g . generateCustomizedCodeBytes ( ) ) ; }
48130	private static void assertQualNS ( String qualNS ) throws XMPException { if ( qualNS == _NULL || qualNS . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty qualifier namespace URI _CHAR , XMPError . BADSCHEMA ) ; } }
48131	public static void sendNormalizedSAXcharacters ( char ch [ ] , int start , int length , org . xml . sax . ContentHandler handler ) throws org . xml . sax . SAXException { sendNormalizedSAXcharacters ( ch , start , length , handler , SUPPRESS_BOTH ) ; }
48136	public void handleButton3Request ( RequestInvocationEvent event ) { removePageSessionAttribute ( getTrackingTabIDName ( ) ) ; setPageSessionAttribute ( getTrackingTabIDName ( ) , Integer . toString ( TAB_PROFILE ) ) ; forwardToEntitiesViewBean ( ) ; }
48173	public BuilderImage < T > size ( Size size ) { this . config . setSize ( size ) ; return this ; }
48174	@ Override public void accept ( final MethodVisitor mv ) { mv . visitInsn ( opcode ) ; acceptAnnotations ( mv ) ; }
48185	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrname . class , args ) ; }
48207	public void clear ( ) { attrMap . clear ( ) ; }
48210	@ Override public void createITable ( Index index ) { logger . info ( _CHAR Creating iTable for index : '' + index . toString ( ) ) ; PreparedStatement createStmt = PreparedStatementFactory . getPreparedStatement ( generateTableCreationSyntax ( index ) , session ) ; BoundStatement bs = new BoundStatement ( createStmt ) ; session . execute ( bs ) ; }
48221	@ Override public void write ( String str , int st , int end ) throws IOException { out . write ( str , st , end ) ; }
48225	private Order wrapRawOrder ( JsonObject rawOrder ) { return new Order ( rawOrder ) . setCreateTime ( System . currentTimeMillis ( ) ) ; }
48236	public int at ( int index ) { return bytes [ index ] & _NUM ; }
48239	@ Deactivate public void deactivate ( @ SuppressWarnings ( _CHAR unused _CHAR ) ComponentContext context ) { logger . debug ( _CHAR Deactivating key store service _CHAR ) ; store = _NULL ; }
48241	public static ApplicationException createFileSystemException ( LocalizableMessage msg , Exception e ) { return new ApplicationException ( ReturnCode . FILE_SYSTEM_ACCESS_ERROR , msg , e ) ; }
48273	public void paintProgressBarBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
48275	public void endDTD ( ) throws SAXException { m_handler . endDTD ( ) ; }
48281	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeelementnodevalue . class , args ) ; }
48282	public void postRegisterNameIdentifierSuccess ( String hostedProviderID , HttpServletRequest request , HttpServletResponse response , String userDN , FSNameRegistrationRequest regRequest , FSNameRegistrationResponse regResponse , String regProfile ) { FSUtils . debug . message ( _CHAR In FSDefaultSPAdapter . postRegistrationNameIdentifierSuccess _CHAR ) ; }
48287	private static StringBuilder dump ( StringBuilder _lbuffer , long value ) { for ( int j = _NUM ; j < _NUM ; j ++ ) { _lbuffer . append ( _hexcodes [ ( int ) ( value >> _shifts [ j ] ) & _NUM ] ) ; } return _lbuffer ; }
48288	public void paintColorChooserBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
48295	public @ Nonnull Map < String , String > loadScripts ( @ Nonnull CpsFlowExecution execution ) { return Collections . emptyMap ( ) ; }
48302	public static BooleanArgument reportAuthzIdArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_REPORT_AUTHZ_ID ) . shortIdentifier ( _CHAR ) . description ( INFO_DESCRIPTION_REPORT_AUTHZID . get ( ) ) . buildArgument ( ) ; }
48338	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementbyid01 . class , args ) ; }
48351	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
48357	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_entitiessetnameditemns1 . class , args ) ; }
48360	private void writeObject ( ObjectOutputStream oos ) throws IOException { if ( ! equals ( beanContextChildPeer ) && ! ( beanContextChildPeer instanceof Serializable ) ) throw new IOException ( _CHAR BeanContextChildSupport beanContextChildPeer not Serializable _CHAR ) ; else oos . defaultWriteObject ( ) ; }
48393	public NewEncryptedID createNewEncryptedID ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NEW_ENCRYPTEDID , value ) ; if ( obj == _NULL ) { return new NewEncryptedIDImpl ( value ) ; } else { return ( NewEncryptedID ) obj ; } }
48395	public int next ( ) { if ( _currentNode == _startNodeID || _currentNode == DTM . NULL ) { return NULL ; } else { final int node = _currentNode ; _currentNode = _nextsib ( node ) ; return returnNode ( makeNodeHandle ( node ) ) ; } }
48399	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attreffectivevalue . class , args ) ; }
48406	void fullyLock ( ) { putLock . lock ( ) ; takeLock . lock ( ) ; }
48409	protected void checkOuputStreams ( ByteStringBuilder out , ByteStringBuilder err , Object expectedOutput , Object expectedError ) throws Exception { checkOutputStream ( out , expectedOutput ) ; checkOutputStream ( err , expectedError ) ; }
48411	public void Logi ( String msg ) { if ( mDebug ) { if ( TextUtils . isEmpty ( msg ) ) { throw new NullPointerException ( _CHAR The message is _NULL ! _CHAR ) ; } Log . i ( Constants . DEBUG_TAG , msg ) ; } }
48415	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodereplacechildnodename . class , args ) ; }
48418	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementremoveattributens01 . class , args ) ; }
48458	public boolean beginContentButtonLoginDisplay ( ChildDisplayEvent event ) { return ( ! LoginSuccess && ! LoginFail ) ; }
48464	public static void main ( final String [ ] args ) { try { Utils . checkJavaVersion ( ) ; System . exit ( _NUM ) ; } catch ( final IncompatibleVersionException ive ) { System . out . println ( ive . getMessageObject ( ) ) ; System . exit ( JAVA_VERSION_INCOMPATIBLE ) ; } }
48467	@ Override public int read ( ) throws IOException { if ( closed ) { throw new FileItemStream . ItemSkippedException ( ) ; } if ( available ( ) == _NUM && makeAvailable ( ) == _NUM ) { return - _NUM ; } ++ total ; int b = buffer [ head ++ ] ; if ( b >= _NUM ) { return b ; } return b + BYTE_POSITIVE_OFFSET ; }
48468	float metrics ( FontMetricsInt fmi ) { return measure ( mLen , _BOOL , fmi ) ; }
48479	public void removeCompressedThumbnail ( ) { mData . setCompressedThumbnail ( _NULL ) ; }
48508	private int normalizePort ( int port , String host ) { if ( ( _NUM <= port && port <= _NUM ) || ( port == _NUM && host == _NULL ) ) { return port ; } throw new IllegalArgumentException ( _CHAR Invalid network port provided : _CHAR + port + _CHAR is not included in the [ _NUM , _NUM ] range . '' ) ; }
48517	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . restartServer ( ) ; }
48520	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( notationgetnotationname . class , args ) ; }
48529	public static boolean isLong ( String desc ) { return desc . endsWith ( _CHAR J _CHAR ) ; }
48531	private boolean promptToProvideAuthenticationAgain ( ) throws ClientException { return askConfirmation ( INFO_UNINSTALL_CONFIRM_PROVIDE_AUTHENTICATION_AGAIN . get ( ) , _BOOL , logger ) ; }
48550	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
48555	public boolean innermostDelegateEquals ( final Connection c ) { final Connection innerCon = getInnermostDelegateInternal ( ) ; if ( innerCon == _NULL ) { return c == _NULL ; } return innerCon . equals ( c ) ; }
48557	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode18 . class , args ) ; }
48560	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namespaceURI03 . class , args ) ; }
48567	public static JMenu createMenu ( LocalizableMessage msg , LocalizableMessage description ) { JMenu menu = new JMenu ( msg . toString ( ) ) ; menu . getAccessibleContext ( ) . setAccessibleDescription ( description . toString ( ) ) ; return menu ; }
48574	private static boolean eq ( Object o1 , Object o2 ) { return ( o1 == _NULL ) ? o2 == _NULL : o1 . equals ( o2 ) ; }
48576	public void addInnerClass ( MappedClass child ) { inners . put ( child . getOriginalName ( ) , child ) ; }
48586	public void paintTextPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
48607	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrdefaultvalue . class , args ) ; }
48608	public final boolean isFinished ( ) { return mFinished ; }
48615	public void endCDATA ( ) throws SAXException { m_textType = DTM . TEXT_NODE ; }
48627	static public void fail ( String message ) { throw new AssertionFailedError ( message ) ; }
48632	public static int calculateShadowColorRightBottom ( int baseColor ) { return Color . rgb ( ( int ) ( Color . red ( baseColor ) * _NUM / _NUM ) , ( int ) ( Color . green ( baseColor ) * _NUM / _NUM ) , ( int ) ( Color . blue ( baseColor ) * _NUM / _NUM ) ) ; }
48634	RSInfo toRSInfo ( ) { return rsInfo ; }
48638	@ Override public void reset ( ) { if ( included ) { return ; } getCoyoteResponse ( ) . reset ( ) ; outputBuffer . reset ( ) ; usingOutputStream = _BOOL ; usingWriter = _BOOL ; isCharacterEncodingSet = _BOOL ; }
48681	public boolean isLockoutEnabled ( ) { return isAccountLockout . isLockoutEnabled ( ) ; }
48719	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
48721	public void paintDesktopPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
48746	public void removeCOSAttribute ( String attrName ) { modify ( new Attr ( ICOSDefinition . COSATTRIBUTE , attrName ) , ModificationType . DELETE ) ; }
48752	public boolean isHeartbeatBackgroundEnabled ( ) { return heartbeatBackgroundEnabled ; }
48754	public boolean isAssured ( ) { return assuredFlag ; }
48781	public boolean is_active ( ) { return active ; }
48792	private void showNotification ( Intent intent ) { String title = intent . getStringExtra ( ShowNotificationAction . PARAM_TITLE ) ; String message = intent . getStringExtra ( ShowNotificationAction . PARAM_ALERT_MESSAGE ) ; UtilUI . showNotification ( this , UtilUI . NOTIFICATION_ACTION , title , message ) ; ResultProcessor . process ( this , intent , ResultProcessor . RESULT_SUCCESS , _NULL ) ; }
48800	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttributeNS04 . class , args ) ; }
48804	protected final void deserialize ( ObjectInputStream ois , Collection coll ) throws IOException , ClassNotFoundException { int count = _NUM ; count = ois . readInt ( ) ; while ( count -- > _NUM ) { coll . add ( ois . readObject ( ) ) ; } }
48807	public PdfCollectionSchema addField ( String name , PdfCollectionField field ) { getPdfObject ( ) . put ( new PdfName ( name ) , field . getPdfObject ( ) ) ; return this ; }
48822	public void paintPopupMenuBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
48832	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrinsertbefore5 . class , args ) ; }
48833	public Key createKey ( String method , String key ) { KeyField keyImpl = new KeyField ( ) ; try { keyImpl . setMethod ( method ) ; keyImpl . setKey ( key ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; return _NULL ; } return keyImpl ; }
48835	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatainsertdatamiddle . class , args ) ; }
48853	private static String translateOSNameToFolderName ( String osName ) { if ( osName . contains ( _CHAR Windows _CHAR ) ) { return _CHAR Windows _CHAR ; } else if ( osName . contains ( _CHAR Mac _CHAR ) ) { return _CHAR Mac _CHAR ; } else if ( osName . contains ( _CHAR Linux _CHAR ) ) { return _CHAR Linux _CHAR ; } else if ( osName . contains ( _CHAR AIX _CHAR ) ) { return _CHAR AIX _CHAR ; } else { return osName . replaceAll ( _CHAR \\ W _CHAR , _CHAR _CHAR ) ; } }
48862	@ Override public String toString ( ) { return _CHAR [ SSLServerSocketImpl ] _CHAR ; }
48866	public JsonArray add ( Object value ) { list . add ( value ) ; return this ; }
48881	public static void error ( Level level , String msgid , String data [ ] ) { error ( level , msgid , data , _NULL ) ; }
48895	private void updateWithOneByte ( byte b ) { if ( b != _NUM && b != _NUM ) { checksum += b ; } }
48978	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( removeNamedItemNS02 . class , args ) ; }
48985	public String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
48989	public void insertNode ( Node n , int pos ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESET_NOT_MUTABLE , _NULL ) ) ; insertElementAt ( n , pos ) ; }
48999	protected void finalize ( ) { synchronized ( debugMap ) { debugMap . remove ( debugName ) ; } synchronized ( this ) { if ( debugFile == _NULL ) { return ; } debugLevel = Debug . OFF ; debugFile . flush ( ) ; debugFile . close ( ) ; debugFile = _NULL ; } }
49002	public long scheduledExecutionTime ( ) { synchronized ( this ) { if ( headTask != _NULL ) { return headTask . scheduledExecutionTime ( ) ; } } return - _NUM ; }
49010	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateattributeNS07 . class , args ) ; }
49029	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatadeletedatagetlengthanddata . class , args ) ; }
49030	public boolean beginContentHrefExceptionDisplay ( ChildDisplayEvent event ) { setDisplayFieldValue ( TXT_GOTO_LOGIN_AFTER_FAIL , rb . getString ( _CHAR gotoLoginAfterFail _CHAR ) ) ; return _BOOL ; }
49041	private boolean isValueSupported ( Object value ) { for ( int i = _NUM ; i < values . length ; i ++ ) { if ( value . equals ( values [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
49053	public boolean isType ( ) { return testAllFlags ( IS_TYPE ) ; }
49056	public static StringArgument proxyAuthIdArgument ( ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_PROXYAUTHID ) . shortIdentifier ( OPTION_SHORT_PROXYAUTHID ) . description ( INFO_DESCRIPTION_PROXYAUTHZID . get ( ) ) . valuePlaceholder ( INFO_PROXYAUTHID_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
49061	protected void flushCache ( ) throws IOException { if ( this . cachePosition > _NUM ) { this . out . writeLine ( Integer . toHexString ( this . cachePosition ) ) ; this . out . write ( this . cache , _NUM , this . cachePosition ) ; this . out . writeLine ( _CHAR _CHAR ) ; this . cachePosition = _NUM ; } }
49063	public SocketFactory socketFactory ( ) { return socketFactory ; }
49080	public void addUsers ( Set users ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; dsServices . modifyMemberShip ( super . token , users , super . entryDN , ASSIGNABLE_DYNAMIC_GROUP , ADD_MEMBER ) ; }
49089	public void comment ( String comment ) throws SAXException { if ( m_firstTagNotEmitted && m_firstElementName != _NULL ) { emitFirstTag ( ) ; } else if ( m_needToCallStartDocument ) { m_handler . startDocument ( ) ; m_needToCallStartDocument = _BOOL ; } m_handler . comment ( comment ) ; }
49095	@ Override protected void shutdownInput ( ) throws IOException { shutdownInput = _BOOL ; try { Libcore . os . shutdown ( fd , SHUT_RD ) ; } catch ( ErrnoException errnoException ) { throw errnoException . rethrowAsSocketException ( ) ; } }
49107	public synchronized NSObject [ ] allObjects ( ) { return set . toArray ( new NSObject [ count ( ) ] ) ; }
49118	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentinvalidcharacterexceptioncreateelement . class , args ) ; }
49122	protected WinListener createWinListener ( JPopupMenu p ) { return new WinListener ( p ) ; }
49125	public void error ( Level level , String messageId , String data [ ] , Object session ) throws LogException { error ( level , messageId , data , session , _NULL ) ; }
49127	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrappendchild6 . class , args ) ; }
49153	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatasubstringexceedsvalue . class , args ) ; }
49158	public static IntegerArgument ldapVersionArgument ( ) throws ArgumentException { return IntegerArgument . builder ( OPTION_LONG_PROTOCOL_VERSION ) . shortIdentifier ( OPTION_SHORT_PROTOCOL_VERSION ) . description ( INFO_DESCRIPTION_VERSION . get ( ) ) . defaultValue ( _NUM ) . valuePlaceholder ( INFO_PROTOCOL_VERSION_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
49180	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetelementempty . class , args ) ; }
49189	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getAttributeNS05 . class , args ) ; }
49191	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_domimplementationfeaturenoversion . class , args ) ; }
49194	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeappendchildnomodificationallowederr . class , args ) ; }
49208	public void updateTaskCompletionState ( DirectoryException de ) { initState = TaskState . STOPPED_BY_ERROR ; try { if ( de == _NULL ) { initState = TaskState . COMPLETED_SUCCESSFULLY ; } else { taskCompletionError = de . getMessageObject ( ) ; } } finally { synchronized ( initState ) { initState . notify ( ) ; } } }
49212	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode06 . class , args ) ; }
49213	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodevalue06 . class , args ) ; }
49230	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setNamedItemNS03 . class , args ) ; }
49233	public final boolean isProxy ( ) { return flags [ PROXY_TICKET_FLAG ] ; }
49237	public static CommandResult execCommand ( String [ ] commands , boolean isRoot ) { return execCommand ( commands , isRoot , _BOOL ) ; }
49241	public void mouseExited ( MouseEvent e ) { if ( ! isDragging ) { setThumbRollover ( _BOOL ) ; } }
49247	public void removeAll ( ) { this . connectionToTimes . clear ( ) ; }
49253	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetnextsibling . class , args ) ; }
49261	SOAPMessage toSOAPMessage ( ) throws SOAPBindingException { return Utils . DocumentToSOAPMessage ( toDocument ( _BOOL ) ) ; }
49265	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
49270	public KeyStoreJwtTokenConfig withTokenLifeTimeInSeconds ( long tokenLifeTimeInSeconds ) { this . tokenLifeTimeInSeconds = tokenLifeTimeInSeconds ; return this ; }
49272	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatasubstringvalue . class , args ) ; }
49274	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( normalize01 . class , args ) ; }
49299	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateattributeNS03 . class , args ) ; }
49300	public Builder url ( URL url ) { if ( url == _NULL ) throw new IllegalArgumentException ( _CHAR url == _NULL _CHAR ) ; HttpUrl parsed = HttpUrl . get ( url ) ; if ( parsed == _NULL ) throw new IllegalArgumentException ( _CHAR unexpected url : _CHAR + url ) ; return url ( parsed ) ; }
49309	String formatAlphaNumerals ( int itemNum ) { String result ; if ( itemNum > _NUM ) { result = formatAlphaNumerals ( itemNum / _NUM ) + formatAlphaNumerals ( itemNum % _NUM ) ; } else { result = String . valueOf ( ( char ) ( _CHAR + itemNum - _NUM ) ) ; } return result ; }
49338	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodehasattributes03 . class , args ) ; }
49347	public static boolean isGenericHTMLClient ( String clientType ) { String type = getProperty ( clientType , _CHAR genericHTML _CHAR ) ; return type == _NULL || _CHAR _BOOL _CHAR . equals ( type ) ; }
49367	public boolean isBuiltIn ( ) { return builtIn ; }
49375	public static final Index createTestIndexOneField ( ) { Index index = new Index ( _CHAR myindexwithonefield _CHAR ) ; index . setTable ( DB , _CHAR mytable _CHAR ) ; ArrayList < IndexField > fields = new ArrayList < > ( ) ; fields . add ( new IndexField ( _CHAR myindexedfield _CHAR ) ) ; index . setFields ( fields ) ; index . isUnique ( _BOOL ) ; return index ; }
49402	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatainsertdatanomodificationallowederrEE . class , args ) ; }
49423	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
49436	public String toString ( ) { return _type ; }
49438	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
49477	public void endPrefixMapping ( String prefix ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . endPrefixMapping ( prefix ) ; } }
49494	public void makeCurrent ( ) { mEglCore . makeCurrent ( mEGLSurface ) ; }
49501	private static void assertEcho ( String result , String expected ) { assertTrue ( result . indexOf ( _CHAR < p > _CHAR + expected + _CHAR < / p > _CHAR ) > _NUM ) ; }
49526	protected Expression lte ( int opPos ) throws TransformerException { return compileOperation ( new Lte ( ) , opPos ) ; }
49550	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodelistindexequalzero . class , args ) ; }
49552	public DispatchHandler addUnconditionalBinding ( Handler handler , URI baseURI ) { bindings . add ( new Binding ( _NULL , handler , baseURI ) ) ; return this ; }
49555	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; }
49559	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setNamedItemNS01 . class , args ) ; }
49563	public void callArgVisitors ( XPathVisitor visitor ) { for ( int i = _NUM ; i < m_argVec . size ( ) ; i ++ ) { Expression exp = ( Expression ) m_argVec . elementAt ( i ) ; exp . callVisitors ( new ArgExtOwner ( exp ) , visitor ) ; } }
49569	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentcreatedocumentfragment . class , args ) ; }
49580	protected HttpURLConnection createDelete ( String uri ) throws IOException { return createConnection ( uri , METHOD_DELETE ) ; }
49584	private Set searchResultsToSet ( SearchResults results ) throws UMSException { Set set = new OrderedSet ( ) ; if ( results != _NULL ) { while ( results . hasMoreElements ( ) ) { PersistentObject one = results . next ( ) ; set . add ( one . getGuid ( ) . toString ( ) ) ; } } return set ; }
49586	public static String format ( String pattern , Integer i , String l ) { MessageFormat mf = new MessageFormat ( _CHAR _CHAR ) ; mf . setLocale ( getLocale ( l ) ) ; mf . applyPattern ( pattern ) ; String msg = format ( mf , i ) ; return msg ; }
49588	public Iterator < IPrivilege > search ( String realm , ResourceSearchIndexes indexes , Set < String > subjectIndexes , boolean bSubTree ) throws EntitlementException { return search ( realm , indexes , subjectIndexes , bSubTree , _BOOL ) ; }
49591	public Event35Id . Builder clearDescription ( ) { description = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
49594	public String toString ( ) { if ( description != _NULL ) { return description ; } return super . toString ( ) ; }
49598	public final boolean equals ( Object obj ) { return ( ( CharKey ) obj ) . m_char == m_char ; }
49620	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return this ; }
49632	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodedocumentfragmentnodevalue . class , args ) ; }
49638	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS09 . class , args ) ; }
49642	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapsetnameditemwithnewvalue . class , args ) ; }
49643	public double num ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return ( m_right . num ( xctxt ) + m_left . num ( xctxt ) ) ; }
49667	public int hashCode ( ) { return ( schemaType . hashCode ( ) ) ; }
49675	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementremoveattribute . class , args ) ; }
49687	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodereplacechild . class , args ) ; }
49699	public boolean beginStaticTextHeaderDisplay ( ChildDisplayEvent event ) { return _BOOL ; }
49708	public int validateGlobalOptions ( final LocalizableMessageBuilder buf ) { final int ret = secureArgsList . validateGlobalOptions ( buf ) ; if ( appendErrorMessageIfArgumentsConflict ( buf , noPropertiesFileArg , propertiesFileArg ) ) { return CONFLICTING_ARGS . get ( ) ; } return ret ; }
49714	public static void cleanEmbeddedCassandra ( ) { dropKeyspaces ( ) ; }
49730	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentinvalidcharacterexceptioncreateentref . class , args ) ; }
49735	@ Override public String toString ( ) { return String . format ( _CHAR ContentLength = % s , ContentType = % s _CHAR , Long . valueOf ( this . contentLength ( ) ) , this . getContentType ( ) ) ; }
49742	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; switch ( type ) { case Constants . ELEMNAME_TEXTLITERALRESULT : break ; default : error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; } return super . appendChild ( newChild ) ; }
49750	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
49754	public void postTerminateNameIDSuccess ( String hostedEntityID , String realm , HttpServletRequest request , HttpServletResponse response , String userID , ManageNameIDRequest idRequest , ManageNameIDResponse idResponse , String binding ) { return ; }
49764	public boolean delete ( String name ) { String lcName = name . toLowerCase ( ) ; if ( this . containsKey ( lcName ) ) { this . remove ( lcName ) ; return _BOOL ; } else { return _BOOL ; } }
49771	protected void local ( TokenIterator tokens ) throws ParseException { tokens . jumpPastNext ( SEMICOLON ) ; }
49776	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemns08 . class , args ) ; }
49777	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetprevioussibling . class , args ) ; }
49778	public void publish ( ReplicationMsg msg ) { publish ( msg , _BOOL , _BOOL ) ; }
49781	public void addRecipient ( String recipient ) { recipients . add ( recipient ) ; }
49783	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationfeaturecore . class , args ) ; }
49788	public Event35Log . Builder clearVersion ( ) { version = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
49799	public void rearrangeChildren ( ) { rearrangeChildren ( - _NUM ) ; }
49803	public void removeXfaForm ( ) { if ( hasXfaForm ( ) ) { PdfDictionary root = document . getCatalog ( ) . getPdfObject ( ) ; PdfDictionary acroform = root . getAsDictionary ( PdfName . AcroForm ) ; acroform . remove ( PdfName . XFA ) ; xfaForm = _NULL ; } }
49816	public void loadConfig ( String configUrl ) { this . configUrl = configUrl ; downloadConfig ( configUrl ) ; }
49817	private int epochMonthToMonth ( int epochMonth ) { return ( epochMonth + hijrahStartEpochMonth ) % _NUM ; }
49829	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateentityreference . class , args ) ; }
49839	Entry entryFromDatabase ( ByteString bytes , CompressedSchema compressedSchema ) throws DirectoryException , DecodeException , LDAPException , DataFormatException , IOException { EntryCodec codec = acquireEntryCodec ( ) ; try { return codec . decode ( bytes , compressedSchema ) ; } finally { codec . release ( ) ; } }
49843	public static StringArgument hostNameArgument ( final String defaultHostName ) throws ArgumentException { return hostNameArgument ( defaultHostName , _NULL ) ; }
49845	public boolean isIncludeInResult ( ) { return includeInResult ; }
49860	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodelisttraverselist . class , args ) ; }
49877	public void endPrefixMapping ( String prefix ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . endPrefixMapping ( prefix ) ; } }
49902	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementremoveattributerestoredefaultvalue . class , args ) ; }
49911	public boolean undo ( ObserverItem p_observers ) { if ( ! undo_list . undo ( _NULL , _NULL ) ) return _BOOL ; restore_component_arr_from_undo_list ( p_observers ) ; return _BOOL ; }
49913	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodereplacechildnodeancestor . class , args ) ; }
49919	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodevalue06 . class , args ) ; }
49920	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeissupported03 . class , args ) ; }
49938	public boolean isInMemoryDb ( ) { return path . equalsIgnoreCase ( MEMORY_DB_PATH ) ; }
49945	@ Fluent public Job onFailure ( Handler < JsonObject > failureHandler ) { this . on ( _CHAR failed _CHAR , _NULL ) ; return this ; }
49948	private void writeObject ( java . io . ObjectOutputStream s ) throws IOException { s . writeObject ( thisX500Name . getEncodedInternal ( ) ) ; }
49951	protected void engineUpdate ( byte b ) throws SignatureException { msgDigest . update ( b ) ; }
49957	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
49967	public int count ( ) { return dict . size ( ) ; }
49970	public boolean isDefined ( ) { return type == Type . DEFINED ; }
49978	public void paintPopupMenuBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
49991	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatasubstringvalue . class , args ) ; }
50005	public static FileBasedArgument bindPasswordFileArgument ( ) throws ArgumentException { return FileBasedArgument . builder ( OPTION_LONG_BINDPWD_FILE ) . shortIdentifier ( OPTION_SHORT_BINDPWD_FILE ) . description ( INFO_DESCRIPTION_BINDPASSWORDFILE . get ( ) ) . valuePlaceholder ( INFO_BINDPWD_FILE_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
50007	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodevalue03 . class , args ) ; }
50016	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrremovechild1 . class , args ) ; }
50034	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeinsertbeforedocfragment . class , args ) ; }
50035	public void paintProgressBarBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
50037	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS07 . class , args ) ; }
50047	private static byte positionToByte ( int position ) { return ( byte ) ( position % _NUM ) ; }
50050	public void clearPasswordChangedByRequiredTime ( ) { operations . add ( PasswordPolicyStateOperationType . CLEAR_PASSWORD_CHANGED_BY_REQUIRED_TIME ) ; }
50054	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocument08 . class , args ) ; }
50075	public boolean isNamespaceAware ( ) { return _BOOL ; }
50078	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodevalue07 . class , args ) ; }
50083	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodecommentnodetype . class , args ) ; }
50090	public void resetTagDefinitions ( ) { mTagInfo = _NULL ; }
50107	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
50112	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetnextsiblingnull . class , args ) ; }
50123	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfArray makeIndirect ( PdfDocument document ) { return ( PdfArray ) super . makeIndirect ( document ) ; }
50125	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
50128	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementhasattributens01 . class , args ) ; }
50161	public void rearrangeChildren ( int itemCount ) { ArrayList < View > views = getItemsInReadingOrder ( ) ; mContent . arrangeChildren ( views , Math . max ( itemCount , views . size ( ) ) ) ; mItemsInvalidated = _BOOL ; }
50171	EntryIDSet evaluate ( ) { appendToDebugBuffer ( _CHAR filter = _CHAR ) ; return evaluateFilter ( searchOp . getFilter ( ) ) ; }
50190	public boolean isReturnPolicyIdList ( ) { return returnPolicyIdList ; }
50197	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_domimplementationfeaturexml . class , args ) ; }
50204	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetprevioussiblingnull . class , args ) ; }
50212	public static TemplateFactory newInstance ( Context context ) { return new TemplateFactory ( context ) ; }
50219	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrinsertdataoffsetgreater . class , args ) ; }
50232	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode11 . class , args ) ; }
50240	private void remove_incomplete_expansion_room ( ExpandRoomFreespaceIncomplete p_room ) { if ( p_room == _NULL ) return ; remove_all_doors ( p_room ) ; incomplete_expansion_rooms . remove ( p_room ) ; }
50242	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodetextnodetype . class , args ) ; }
50246	public InputStream openStream ( ) throws IOException { if ( entryName == _NULL ) { return url . openStream ( ) ; } else { URL entryUrl = JarFactory . getJarEntryURL ( url , entryName ) ; return entryUrl . openStream ( ) ; } }
50250	public void paintDesktopIconBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
50284	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrreplacedataoffsetgreater . class , args ) ; }
50285	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapremovenameditem . class , args ) ; }
50290	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementnotfounderr . class , args ) ; }
50317	public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR CollectionCertStoreParameters : [ \ ncollection : _CHAR ) ; sb . append ( getCollection ( ) . toString ( ) ) ; sb . append ( _CHAR \ n ] _CHAR ) ; return sb . toString ( ) ; }
50318	public void paintMenuBarBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
50333	public void removeListSelectionListener ( ListSelectionListener listener ) { listenerList . remove ( ListSelectionListener . class , listener ) ; }
50343	public static boolean isObject ( String desc ) { return desc . endsWith ( _CHAR ; _CHAR ) ; }
50383	public void startContent ( ) { }
50398	private InetSocketAddress nextInetSocketAddress ( ) throws IOException { if ( ! hasNextInetSocketAddress ( ) ) { throw new SocketException ( _CHAR No route to _CHAR + address . url ( ) . host ( ) + _CHAR ; exhausted inet socket addresses : _CHAR + inetSocketAddresses ) ; } return inetSocketAddresses . get ( nextInetSocketAddressIndex ++ ) ; }
50399	private void onTaskFinished ( String queueName ) { synchronized ( syncRoot ) { currentTasksMap . remove ( queueName ) ; DispatcherTask nextTask = dequeueNextTask ( queueName ) ; if ( nextTask != _NULL ) { submit ( nextTask ) ; } } }
50400	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
50407	public static boolean unloadWorld ( String name , boolean save ) { return server . unloadWorld ( name , save ) ; }
50419	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_textindexsizeerroffsetoutofbounds . class , args ) ; }
50421	@ Override public final String toString ( ) { if ( stringRep == _NULL ) { StringBuilder buffer = new StringBuilder ( ) ; buffer . append ( this . name ) ; buffer . append ( _CHAR ) ; buffer . append ( Integer . toString ( this . defaultPort ) ) ; stringRep = buffer . toString ( ) ; } return stringRep ; }
50422	public void componentResized ( ComponentEvent e ) { }
50428	public void paintMenuItemBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
50439	public void startCDATA ( ) throws org . xml . sax . SAXException { m_inCData = _BOOL ; append ( m_doc . createCDATASection ( _CHAR _CHAR ) ) ; }
50442	public void removeEventListener ( SIPDialogEventListener oldListener ) { eventListeners . remove ( oldListener ) ; }
50448	public static StringArgument configClassArgument ( final String configFileHandlerName ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_CONFIG_CLASS ) . shortIdentifier ( OPTION_SHORT_CONFIG_CLASS ) . description ( INFO_DESCRIPTION_CONFIG_CLASS . get ( ) ) . hidden ( ) . required ( ) . defaultValue ( configFileHandlerName ) . valuePlaceholder ( INFO_CONFIGCLASS_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
50456	private boolean flagPoleHit ( ) { Shape intersection = SVGPath . intersect ( spriteBoundsArray [ _NUM ] , SpriteHandler . getCurrentCast ( ) . get ( _NUM ) . getSpriteBounds ( ) ) ; return intersection . getBoundsInParent ( ) . getWidth ( ) != - _NUM ; }
50463	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementreplaceexistingattribute . class , args ) ; }
50465	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforenomodificationallowederr . class , args ) ; }
50467	protected void writeFile ( OutputStream output , PrintWriter writer , String name , Object value ) { if ( value instanceof byte [ ] ) { writeFile ( output , writer , name , ( byte [ ] ) value ) ; return ; } writeFile ( output , writer , name , ( File ) value ) ; }
50469	public void updatePEPDescriptor ( String realm , String entityName , Map attrValues ) throws AMConsoleException { }
50472	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_textindexsizeerrnegativeoffset . class , args ) ; }
50476	public int next ( ) { final int node = _currentNode ; _currentNode = NULL ; return returnNode ( node ) ; }
50491	public static void assertPropName ( String propName ) throws XMPException { if ( propName == _NULL || propName . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty property name _CHAR , XMPError . BADPARAM ) ; } }
50492	private void saveWorkFolderShortcuts ( long workFolderId , int startingRank ) { for ( ItemInfo info : mWorkFolderApps ) { info . rank = startingRank ++ ; LauncherModel . addItemToDatabase ( mContext , info , workFolderId , _NUM , _NUM , _NUM ) ; } }
50496	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateelementNS02 . class , args ) ; }
50499	public boolean isInvisible ( ) { return rect == _NULL || rect . getWidth ( ) == _NUM || rect . getHeight ( ) == _NUM ; }
50504	public static String toString ( URI uri , Charset encoding ) throws IOException { return toString ( uri . toURL ( ) , Charsets . toCharset ( encoding ) ) ; }
50508	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementsbytagnameNS01 . class , args ) ; }
50516	public boolean isDestroyed ( ) { return destroyed ; }
50535	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodetextnodeattribute . class , args ) ; }
50543	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfStream makeIndirect ( PdfDocument document ) { return ( PdfStream ) super . makeIndirect ( document ) ; }
50554	public void ignorableWhitespace ( char [ ] ch , int start , int length ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . ignorableWhitespace ( ch , start , length ) ; }
50575	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementwrongdocumenterr . class , args ) ; }
50589	final static boolean isIgnorable ( int order ) { return ( ( primaryOrder ( order ) == _NUM ) ? _BOOL : _BOOL ) ; }
50593	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
50607	private static void assertEcho ( String result , String expected ) { assertTrue ( result , result . indexOf ( _CHAR < p > _CHAR + expected + _CHAR < / p > _CHAR ) > _NUM ) ; }
50623	public static Object deserializeToObject ( String encObj ) throws IOException , ClassNotFoundException { Object obj = _NULL ; if ( encObj != _NULL && encObj . length ( ) > _NUM ) { obj = IOUtils . deserialise ( Base64 . decode ( encObj ) , _BOOL ) ; } return obj ; }
50634	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
50662	public boolean beginStaticTextResultDisplay ( ChildDisplayEvent event ) { return _BOOL ; }
50664	private Entry makeEntry ( String dn ) throws Exception { return TestCaseUtils . makeEntry ( _CHAR dn : _CHAR + dn , _CHAR objectClass : top _CHAR , _CHAR objectClass : person _CHAR , _CHAR objectClass : organizationalPerson _CHAR , _CHAR objectClass : inetOrgPerson _CHAR , _CHAR uid : _NUM _CHAR , _CHAR givenName : _NUM _CHAR , _CHAR sn : _NUM _CHAR , _CHAR cn : _NUM _NUM _CHAR ) ; }
50685	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodens02 . class , args ) ; }
50686	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationfeaturenoversion . class , args ) ; }
50715	public Future < Job > active ( ) { return this . state ( JobState . ACTIVE ) ; }
50739	public void mouseExited ( MouseEvent e ) { if ( e . getSource ( ) == BasicSplitPaneDivider . this ) { setMouseOver ( _BOOL ) ; } }
50740	public static TokenRestriction unmarshal ( String data ) throws Exception { return IOUtils . deserialise ( Base64 . decode ( data ) , _BOOL ) ; }
50742	protected void printAttribute ( PrintWriter writer , int indent , Object bean , StoreDescription desc , String attributeName , Object bean2 , Object value ) { if ( isPrintValue ( bean , bean2 , attributeName , desc ) ) printValue ( writer , indent , attributeName , value ) ; }
50762	protected static void checkInitialization ( ) throws SSOException { if ( tokenManager == _NULL ) { synchronized ( lock ) { if ( tokenManager == _NULL ) { try { tokenManager = SSOTokenManager . getInstance ( ) ; oCache = new Cache ( _NUM ) ; } catch ( SSOException ssoe ) { EntityUtils . debug . error ( _CHAR EntityObjectImpl : checkInitialization ( ) _CHAR + _CHAR : Unable to get SSOTokenManager _CHAR , ssoe ) ; throw ( ssoe ) ; } } } } }
50772	public static SecurityConfig newInstance ( ) { if ( singleton == _NULL ) { singleton = new SecurityConfig ( ) ; } return singleton ; }
50779	private static boolean isSeparator ( char ch ) { return ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR ; }
50782	private ResourceResponse readResource ( Context context , String resourceId ) throws ResourceException { ReadRequest readRequest = Requests . newReadRequest ( resourceId ) ; return connectionFactory . getConnection ( ) . read ( context , readRequest ) ; }
50787	public static Authenticator withCredentials ( final String username , final char [ ] password , final boolean isDryRun ) { return new Authenticator ( _NULL , _BOOL , isDryRun ) ; }
50799	public static boolean verifyTimestampCertificates ( TimeStampToken ts , KeyStore keystore , String provider ) { try { for ( X509Certificate certStoreX509 : SignUtils . getCertificates ( keystore ) ) { try { SignUtils . isSignatureValid ( ts , certStoreX509 , provider ) ; return _BOOL ; } catch ( Exception ex ) { } } } catch ( Exception e ) { } return _BOOL ; }
50831	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
50835	public void postTerminateNameIDSuccess ( String hostedEntityID , String realm , HttpServletRequest request , HttpServletResponse response , String userID , ManageNameIDRequest idRequest , ManageNameIDResponse idResponse , String binding ) { return ; }
50843	public void stopAutoBlurUpdate ( ) { blurController . stopAutoBlurUpdate ( ) ; }
50847	public boolean containsLogin ( ) { return prompts . contains ( PROMPT_LOGIN ) ; }
50863	public static String toRoman ( int number , boolean upperCase ) { return upperCase ? toRomanUpperCase ( number ) : toRomanLowerCase ( number ) ; }
50869	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodelistindexnotzero . class , args ) ; }
50880	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementassociatedattribute . class , args ) ; }
50897	public void paintDesktopPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
50905	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapreturnfirstitem . class , args ) ; }
50917	public static void clear ( ) { if ( mSharedPreferences == _NULL ) { return ; } mSharedPreferences . edit ( ) . clear ( ) . apply ( ) ; }
50932	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatareplacedatamiddle . class , args ) ; }
50943	public static void clear ( ) { currentContext . remove ( ) ; }
50970	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported10 . class , args ) ; }
50978	public boolean isIssued ( ) { Set < String > issued = getParameter ( ISSUED ) ; return issued != _NULL && Boolean . parseBoolean ( issued . iterator ( ) . next ( ) ) ; }
50980	public String toString ( ) { return linkedException == _NULL ? super . toString ( ) : super . toString ( ) + _CHAR \ n - with linked exception : \ n [ _CHAR + linkedException . toString ( ) + _CHAR ] _CHAR ; }
50991	@ Override protected void onActivityResult ( final int requestCode , final int resultCode , final Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; }
51005	ChangelogState readOnDiskChangelogState ( ) throws ChangelogException { final ChangelogState state = new ChangelogState ( ) ; final File changelogPath = new File ( replicationRootPath ) ; synchronized ( domainsLock ) { readDomainsStateFile ( ) ; checkDomainDirectories ( changelogPath ) ; for ( final Entry < DN , String > domainEntry : domains . entrySet ( ) ) { readStateForDomain ( domainEntry , state ) ; } } return state ; }
51017	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforenodeancestor . class , args ) ; }
51042	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( processinginstructionsetdatanomodificationallowederrEE . class , args ) ; }
51076	private boolean closeInternal ( int rstStatusCode ) { assert ( ! Thread . holdsLock ( this ) ) ; synchronized ( this ) { if ( this . rstStatusCode != - _NUM ) { return _BOOL ; } if ( in . finished && out . finished ) { return _BOOL ; } this . rstStatusCode = rstStatusCode ; notifyAll ( ) ; } connection . removeStream ( id ) ; return _BOOL ; }
51106	private void doNotAccept ( ) { returnValue = ReturnType . NOT_ACCEPTED ; dispose ( ) ; }
51146	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeprocessinginstructionnodevalue . class , args ) ; }
51159	@ Override protected void handleErrorOutput ( String output ) { if ( redirectOutput ) { if ( redirectErrPrintStream == _NULL ) { openRedirector ( ) ; } redirectErrPrintStream . println ( output ) ; if ( alwaysLog ) { log ( output , Project . MSG_ERR ) ; } } else { log ( output , Project . MSG_ERR ) ; } }
51161	public void paintRadioButtonBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
51163	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrsetvaluenomodificationallowederr . class , args ) ; }
51167	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; getFQDN ( ) ; }
51185	public void saveState ( PdfCanvas cb ) { cb . saveState ( ) ; MetaState state = new MetaState ( this ) ; savedStates . push ( state ) ; }
51191	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namespaceURI04 . class , args ) ; }
51221	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodereplacechildinvalidnodetype . class , args ) ; }
51225	public void disable_layer_item ( int p_no ) { if ( change_layer_menu != _NULL ) { change_layer_menu . disable_item ( p_no ) ; } }
51232	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodelistindexequalzero . class , args ) ; }
51236	public static JsonValue toJsonValue ( byte [ ] json ) throws JsonException { try { return new JsonValue ( MAPPER . readValue ( json , Map . class ) ) ; } catch ( IOException e ) { throw new JsonException ( _CHAR Failed to parse json _CHAR , e ) ; } }
51241	public Builder withTrail ( ) { trail = _BOOL ; return this ; }
51245	@ Override protected void installListeners ( ) { super . installListeners ( ) ; splitPane . addPropertyChangeListener ( this ) ; }
51253	public void clear ( ) { map . clear ( ) ; }
51271	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( processinginstructiongettarget . class , args ) ; }
51277	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( textsplittextthree . class , args ) ; }
51323	public SAML2ConfigBuilder customAuthNContextMapperClassName ( String customAuthNContextMapperClassName ) { this . customAuthNContextMapperClassName = customAuthNContextMapperClassName ; return this ; }
51324	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodesetprefix09 . class , args ) ; }
51326	public java . lang . String signXML ( java . lang . String xmlString , java . lang . String certAlias , java . lang . String algorithm , java . lang . String id ) throws XMLSignatureException { return sp . signXML ( xmlString , certAlias , algorithm , id ) ; }
51342	@ Override public void afterTokenHandling ( OAuth2Request o2request , Request request , Response response ) { removeCookie ( request , response ) ; }
51351	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodenomodificationallowederr . class , args ) ; }
51359	@ Fluent public Job onStart ( Handler < Job > handler ) { this . on ( _CHAR start _CHAR , _NULL ) ; return this ; }
51366	@ Override public void write ( String str , int st , int end ) throws IOException { out . write ( str , st , end ) ; }
51374	public static void clear ( String realmName ) { if ( classRefSchemesHash != _NULL && ! classRefSchemesHash . isEmpty ( ) ) { classRefSchemesHash . clear ( ) ; } if ( classRefLevelHash != _NULL && ! classRefLevelHash . isEmpty ( ) ) { classRefLevelHash . clear ( ) ; } if ( defaultClassRefHash != _NULL && ! defaultClassRefHash . isEmpty ( ) ) { defaultClassRefHash . clear ( ) ; } formatAttributeHash . clear ( ) ; }
51394	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatareplacedatabegining . class , args ) ; }
51400	private static int unrandomize255State ( int randomizedBase256Codeword , int base256CodewordPosition ) { int pseudoRandomNumber = ( ( _NUM * base256CodewordPosition ) % _NUM ) + _NUM ; int tempVariable = randomizedBase256Codeword - pseudoRandomNumber ; return tempVariable >= _NUM ? tempVariable : tempVariable + _NUM ; }
51401	@ SuppressWarnings ( _CHAR rawtypes _CHAR ) public static String unqualifiedClassName ( Class type ) { if ( type . isArray ( ) ) { return unqualifiedClassName ( type . getComponentType ( ) ) + _CHAR Array _CHAR ; } String name = type . getName ( ) ; return name . substring ( name . lastIndexOf ( _CHAR ) + _NUM ) ; }
51403	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrappendchild3 . class , args ) ; }
51417	public boolean isEnabled ( ) { return enabled ; }
51423	private void logReconEndFailure ( ReconciliationContext reconContext , Context context ) throws SynchronizationException { logReconEnd ( reconContext , context , Status . FAILURE , _CHAR Reconciliation failed . '' ) ; }
51435	public boolean isAllowUnlimited ( ) { return allowUnlimited ; }
51443	public void change_user_unit_factor ( double p_new_factor ) { PlaCoordTransform old_transform = coordinate_transform ; coordinate_transform = new PlaCoordTransform ( p_new_factor , old_transform . user_unit , old_transform . board_unit_factor , old_transform . board_unit ) ; }
51466	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createElementNS05 . class , args ) ; }
51467	public int compare ( File file1 , File file2 ) { int result = _NUM ; for ( Comparator < File > delegate : delegates ) { result = delegate . compare ( file1 , file2 ) ; if ( result != _NUM ) { break ; } } return result ; }
51485	public static BooleanArgument displayEquivalentCommandArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_DISPLAY_EQUIVALENT ) . description ( INFO_DESCRIPTION_DISPLAY_EQUIVALENT . get ( ) ) . buildArgument ( ) ; }
51491	public static IOFileFilter falseFileFilter ( ) { return FalseFileFilter . FALSE ; }
51501	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNS02 . class , args ) ; }
51508	public static < T > Callable < T > privilegedCallable ( Callable < T > callable ) { if ( callable == _NULL ) throw new NullPointerException ( ) ; return new PrivilegedCallable < T > ( callable ) ; }
51520	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodereplacechildnewchildexists . class , args ) ; }
51521	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementnormalize . class , args ) ; }
51533	public boolean validate ( Set < String > properties ) { try { validateProperty ( properties ) ; return _BOOL ; } catch ( UnknownPropertyNameException | ConfigurationException ex ) { return _BOOL ; } }
51537	public void mouseEntered ( MouseEvent e ) { }
51538	protected Future < Void > createHttpServer ( Router router , String host , int port ) { Future < HttpServer > httpServerFuture = Future . future ( ) ; vertx . createHttpServer ( ) . requestHandler ( _NULL ) . listen ( port , host , httpServerFuture . completer ( ) ) ; return httpServerFuture . map ( _NULL ) ; }
51542	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrname . class , args ) ; }
51552	public static String removeProcessDefinitionIdFromRequest ( CreateRequest request ) { return ( String ) ( request . getContent ( ) . isNull ( ) ? _NULL : request . getContent ( ) . expect ( Map . class ) . asMap ( ) . remove ( _CHAR _processDefinitionId _CHAR ) ) ; }
51558	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
51563	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrremovechild2 . class , args ) ; }
51571	boolean isOdd ( ) { return isZero ( ) ? _BOOL : ( ( value [ offset + intLen - _NUM ] & _NUM ) == _NUM ) ; }
51585	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatasetnodevalue . class , args ) ; }
51586	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode05 . class , args ) ; }
51622	public synchronized void mouseWheel ( int wheelAmt ) { peer . mouseWheel ( wheelAmt ) ; afterEvent ( ) ; }
51623	public void startPrefixMapping ( String prefix , String uri ) { }
51628	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrappendchild2 . class , args ) ; }
51635	public static void error ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . error ( level , msgid , data , session ) ; } catch ( LogException le ) { FSUtils . debug . error ( _CHAR LogUtil . error : Could n _CHAR_CHAR , le ) ; } } }
51641	static void printStats ( Stats policyStats ) { policyStats . record ( _CHAR PolicyCache : Number of policies in cache : _CHAR + policyCache . policies . size ( ) ) ; policyStats . record ( _CHAR PolicyCache : Number of policyManagers in cache : _CHAR + policyCache . policyManagers . size ( ) ) ; policyStats . record ( _CHAR PolicyCache : Number of service names in _CHAR + _CHAR policyListeners cache : _CHAR + policyCache . policyListenersMap . size ( ) ) ; }
51656	public void stop ( ) { if ( mShrinkingController != _NULL && mShrinkingController . isRunning ( ) ) { mShrinkingController . end ( ) ; mShrinkingController . cancel ( ) ; } if ( mProgressingController != _NULL && mProgressingController . isRunning ( ) ) { mProgressingController . end ( ) ; mProgressingController . cancel ( ) ; } }
51662	public int next ( ) { int node = _currentNode ; if ( DTM . NULL != node ) _currentNode = getNextNamespaceNode ( _startNode , node , _BOOL ) ; return returnNode ( node ) ; }
51663	public int count ( ) { return dict . size ( ) ; }
51680	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns07 . class , args ) ; }
51682	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodedocumentfragmentnormalize1 . class , args ) ; }
51691	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodedocumentnodetype . class , args ) ; }
51692	void createMap ( Thread t , T firstValue ) { t . inheritableThreadLocals = new ThreadLocalMap ( this , firstValue ) ; }
51733	private void cancelClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
51790	public static long bytesUsed ( ) { failIfNotInitialized ( ) ; try { return mCache . bytesUsed ( ) ; } catch ( Exception e ) { return - _NUM ; } }
51793	public String toString ( ) { return ( toXML ( ) ) ; }
51808	public boolean isEnabled ( ) { return enabled ; }
51813	public void startHeader ( ) { }
51829	public void paintFileChooserBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
51836	public final String toString ( ) { StringBuffer builder = new StringBuffer ( property ) ; builder . append ( _CHAR ) ; builder . append ( String . valueOf ( value ) ) ; return builder . toString ( ) ; }
51840	public static void unregisterAll ( ) { synchronized ( allLists ) { for ( HandlerList h : allLists ) { synchronized ( h ) { for ( List < RegisteredListener > list : h . handlerslots . values ( ) ) { list . clear ( ) ; } h . handlers = _NULL ; } } } }
51845	public ID3v24Frame createFrame ( String id ) { return new ID3v24Frame ( id ) ; }
51869	void postRemove ( HashMapEntry < K , V > e ) { }
51872	public void addAttribute ( String uri , String localName , String rawName , String type , String value , boolean XSLAttribute ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . addAttribute ( uri , localName , rawName , type , value , XSLAttribute ) ; }
51874	public boolean isVisible ( ) { return m_isVisible ; }
51880	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
51902	public void add ( String value ) { valueList . add ( value ) ; }
51905	public byte returnByte ( byte in ) { oneByte [ _NUM ] = in ; cipher . processBlock ( oneByte , _NUM , oneByte , _NUM ) ; return oneByte [ _NUM ] ; }
51909	public void paintPopupMenuBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
51911	public static void error ( Level level , String msgid , String data [ ] ) { error ( level , msgid , data , _NULL , _NULL ) ; }
51916	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode02 . class , args ) ; }
51924	public void paintInternalFrameBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
51931	@ Override public String toString ( ) { return filename + _CHAR : _CHAR + text ; }
51948	boolean takeIndexWrapped ( ) { if ( isDetached ( ) ) return _BOOL ; if ( itrs . cycles - prevCycles > _NUM ) { shutdown ( ) ; return _BOOL ; } return _BOOL ; }
51953	protected void failAndClearBuffer ( ) { for ( Tuple t : buffer ) { collector . fail ( t ) ; } buffer . clear ( ) ; }
51962	private static void handleForwardException ( Exception exception ) throws SAML2Exception { debug . error ( _CHAR Failed to forward to auto submitting JSP _CHAR , exception ) ; throw new SAML2Exception ( bundle . getString ( _CHAR postToTargetFailed _CHAR ) ) ; }
51964	public void addBooleanProperty ( String key , Boolean value ) { getProperties ( ) . addProperty ( key , value ) ; }
51968	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodens05 . class , args ) ; }
51970	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode17 . class , args ) ; }
51978	protected void installKeyboardActions ( ) { InputMap keyMap = ( InputMap ) DefaultLookup . get ( header , this , _CHAR TableHeader . ancestorInputMap _CHAR ) ; SwingUtilities . replaceUIInputMap ( header , JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT , keyMap ) ; LazyActionMap . installLazyActionMap ( header , BasicTableHeaderUI . class , _CHAR TableHeader . actionMap _CHAR ) ; }
51987	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
51997	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS14 . class , args ) ; }
52000	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrspecifiedvaluechanged . class , args ) ; }
52017	public Class < ? > type ( ) { if ( isClass ) { return ( Class < ? > ) object ; } else { return object . getClass ( ) ; } }
52021	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( textsplittextfour . class , args ) ; }
52066	public void propertyResolved ( ELContext context , Object base , Object property ) { }
52079	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrchildnodes2 . class , args ) ; }
52090	private void okClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
52093	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrsubstringcountnegative . class , args ) ; }
52096	private Future < Void > saveCheckoutEvent ( String userId ) { Future < ShoppingCartService > future = Future . future ( ) ; EventBusService . getProxy ( discovery , new JsonObject ( ) . put ( _CHAR name _CHAR , ShoppingCartService . SERVICE_NAME ) , future . completer ( ) ) ; return future . compose ( _NULL ) ; }
52113	public static boolean isSuperscript ( AttributeSet a ) { Boolean superscript = ( Boolean ) a . getAttribute ( Superscript ) ; if ( superscript != _NULL ) { return superscript . booleanValue ( ) ; } return _BOOL ; }
52130	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapchildnoderange . class , args ) ; }
52147	public static JsonValue jsonFromFile ( String resourceFilePath ) throws IOException { final InputStream configStream = JsonUtils . class . getResourceAsStream ( resourceFilePath ) ; return new JsonValue ( MAPPER . readValue ( configStream , Map . class ) ) ; }
52173	@ Override public void flushBuffer ( ) throws IOException { if ( debug > _NUM ) { System . out . println ( _CHAR flush buffer @ GZipServletResponseWrapper _CHAR ) ; } ( ( CompressionResponseStream ) stream ) . flush ( ) ; }
52179	public MaterialBarcodeScannerBuilder withFrontfacingCamera ( ) { mFacing = CameraSource . CAMERA_FACING_FRONT ; return this ; }
52185	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( setAttributeNodeNS04 . class , args ) ; }
52207	public static BooleanArgument trustAllArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_TRUSTALL ) . shortIdentifier ( OPTION_SHORT_TRUSTALL ) . description ( INFO_DESCRIPTION_TRUSTALL . get ( ) ) . buildArgument ( ) ; }
52222	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatareplacedataend . class , args ) ; }
52233	public int pos ( ) { return pos ; }
52238	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documenttypeinternalSubset01 . class , args ) ; }
52240	public boolean isSubscribable ( ) throws AMException , SSOException { return getBooleanAttribute ( SUBSCRIBABLE_ATTRIBUTE ) ; }
52248	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode22 . class , args ) ; }
52254	public synchronized void register ( RegisteredListener listener ) { if ( handlerslots . get ( listener . getPriority ( ) ) . contains ( listener ) ) throw new IllegalStateException ( _CHAR This listener is already registered to priority _CHAR + listener . getPriority ( ) . toString ( ) ) ; handlers = _NULL ; handlerslots . get ( listener . getPriority ( ) ) . add ( listener ) ; }
52260	private void readObject ( ObjectInputStream stream ) throws IOException , TransformerException { try { stream . defaultReadObject ( ) ; } catch ( ClassNotFoundException cnfe ) { throw new TransformerException ( cnfe ) ; } }
52272	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocument05 . class , args ) ; }
52279	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocument03 . class , args ) ; }
52280	public boolean removeAll ( ) { lock . lock ( ) ; try { if ( cookieJar . isEmpty ( ) ) { return _BOOL ; } cookieJar . clear ( ) ; domainIndex . clear ( ) ; uriIndex . clear ( ) ; } finally { lock . unlock ( ) ; } return _BOOL ; }
52286	public Object nextElement ( ) { if ( i < attr . length ) { Object o = attr [ i ] ; i += _NUM ; return o ; } throw new NoSuchElementException ( ) ; }
52291	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfNumber makeIndirect ( PdfDocument document ) { return ( PdfNumber ) super . makeIndirect ( document ) ; }
52306	public Header nextHeader ( ) throws NoSuchElementException { final int current = this . currentIndex ; if ( current < _NUM ) { throw new NoSuchElementException ( _CHAR Iteration already finished . '' ) ; } this . currentIndex = findNext ( current ) ; return this . allHeaders [ current ] ; }
52307	public static short reverseBytes ( short s ) { return ( short ) ( ( s << _NUM ) | ( ( s >> > _NUM ) & _NUM ) ) ; }
52310	public static BooleanArgument advancedModeArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_ADVANCED ) . description ( INFO_DESCRIPTION_ADVANCED . get ( ) ) . buildArgument ( ) ; }
52359	public static void removeAll ( ) { getPersistence ( ) . removeAll ( ) ; }
52390	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getAttributeNS04 . class , args ) ; }
52399	public final byte [ ] wrap ( Key key ) throws IllegalBlockSizeException , InvalidKeyException { if ( mode != WRAP_MODE ) { throw new IllegalStateException ( ) ; } return spiImpl . engineWrap ( key ) ; }
52408	public void connect ( ) { mClient . connect ( ) ; }
52410	@ Override public String toString ( ) { return _CHAR ReplServerInfo Url : _CHAR + getServerURL ( ) + _CHAR ServerId : _CHAR + getServerId ( ) + _CHAR GroupId : _CHAR + getGroupId ( ) + _CHAR connectedDSs : _CHAR + connectedDSs ; }
52423	protected void addServiced ( String name ) throws Exception { String [ ] params = { name } ; String [ ] signature = { _CHAR java . lang . String _CHAR } ; mBeanServer . invoke ( oname , _CHAR addServiced _CHAR , params , signature ) ; }
52439	public static String toString ( URI uri , String encoding ) throws IOException { return toString ( uri , Charsets . toCharset ( encoding ) ) ; }
52477	public String toString ( ) { return _CHAR [ Certificate Exception : _CHAR + getMessage ( ) + _CHAR ] _CHAR ; }
52479	public boolean warningEnabled ( ) { return debugInst . warningEnabled ( ) ; }
52480	private void checkActionSupport ( Action actionType ) { if ( ! isSupported ( actionType ) ) { throw new UnsupportedOperationException ( _CHAR The _CHAR + actionType . name ( ) + _CHAR action is not supported on the current platform ! _CHAR ) ; } }
52482	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementcreatenewattribute . class , args ) ; }
52484	protected static AttrSet mapToAttrSet ( Map map ) { return mapToAttrSet ( map , _BOOL ) ; }
52486	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeappendchildnomodificationallowederrEE . class , args ) ; }
52488	public boolean hasParm ( String pname ) { return parameters . hasNameValue ( pname ) ; }
52494	public boolean isNew ( ) { return ( bytesWritten == _NUM ) && ( charsWritten == _NUM ) ; }
52499	TemporalAccessor toResolved ( ResolverStyle resolverStyle , Set < TemporalField > resolverFields ) { Parsed parsed = currentParsed ( ) ; parsed . chrono = getEffectiveChronology ( ) ; parsed . zone = ( parsed . zone != _NULL ? parsed . zone : formatter . getZone ( ) ) ; return parsed . resolve ( resolverStyle , resolverFields ) ; }
52505	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported01 . class , args ) ; }
52507	@ Override public ShapeTileSimplex intersection ( ShapeTileBox p_box ) { return intersection ( p_box . to_Simplex ( ) ) ; }
52537	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( domimplementationcreatedocument04 . class , args ) ; }
52550	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
52556	protected void appendAndPush ( StylesheetHandler handler , ElemTemplateElement elem ) throws SAXException { super . appendAndPush ( handler , elem ) ; elem . setDOMBackPointer ( handler . getOriginatingNode ( ) ) ; handler . getStylesheet ( ) . setTemplate ( ( ElemTemplate ) elem ) ; }
52557	public static boolean isAlreadyApproved ( ) { return new File ( getInstanceLegalDirectory ( ) , ACCEPTED_LICENSE_FILE_NAME ) . exists ( ) ; }
52558	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
52563	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeprocessinginstructionnodeattributes . class , args ) ; }
52564	private TestParentCfgClient createTestParent ( ManagementContext context , String name ) throws Exception { ManagedObject < RootCfgClient > root = context . getRootConfigurationManagedObject ( ) ; return root . createChild ( TestCfg . getTestOneToManyParentRelationDefinition ( ) , TestParentCfgDefn . getInstance ( ) , name , _NULL ) . getConfiguration ( ) ; }
52566	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrgetownerelement05 . class , args ) ; }
52571	public boolean verifyWSSSignature ( org . w3c . dom . Document document , java . security . Key key , String certAlias , String encryptAlias ) throws XMLSignatureException { return _BOOL ; }
52578	public static int registerFontDirectory ( String dir ) { return fontRegisterProvider . registerFontDirectory ( dir ) ; }
52608	public HDR remove ( int index ) { return this . hlist . remove ( index ) ; }
52624	private List < String > parseProp ( String prop ) { String [ ] items = new String [ _NUM ] ; if ( prop != _NULL ) { items = prop . split ( _CHAR , \\ s * _CHAR ) ; } return Arrays . asList ( items ) ; }
52633	public String encode ( ) { String encoded_string ; encoded_string = KEY_FIELD + type ; if ( keyData != _NULL ) { encoded_string += Separators . COLON ; encoded_string += keyData ; } encoded_string += Separators . NEWLINE ; return encoded_string ; }
52640	public String toXMLString ( ) throws FSMsgException { return ( toXMLString ( _BOOL , _BOOL ) ) ; }
52643	public void addField ( String vorbisCommentKey , String value ) throws KeyNotFoundException , FieldDataInvalidException { TagField tagfield = createField ( vorbisCommentKey , value ) ; addField ( tagfield ) ; }
52646	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
52653	public String toXMLString ( boolean includeNS , boolean declareNS ) throws SAML2Exception { return xmlString ; }
52659	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodetextnodevalue . class , args ) ; }
52663	public SignatureVisitor visitReturnType ( ) { return this ; }
52679	public final boolean isEnabled ( CBORGenerator . Feature f ) { return ( _formatGeneratorFeatures & f . getMask ( ) ) != _NUM ; }
52695	public void reload ( ) { isRunning . set ( _BOOL ) ; logger . info ( _CHAR Reloading diagnostics configuation . '' ) ; diagnosticsProcessor . shutdown ( ) ; unregisterMXBean ( ) ; config = loadConfiguration ( ) ; diagnosticsProcessor = new DiagnosticsProcessor ( config ) ; initMXBean ( ) ; logger . info ( _CHAR Configuration realoaded _CHAR ) ; isRunning . set ( _BOOL ) ; }
52705	public int hashCode ( ) { return ( _NUM * colorModel . hashCode ( ) ) + ( _NUM * sampleModel . hashCode ( ) ) ; }
52706	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodechildnodesempty . class , args ) ; }
52717	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttributeNS02 . class , args ) ; }
52728	public java . lang . String _get_codebase ( ) { org . omg . CORBA . portable . Delegate delegate = _get_delegate ( ) ; if ( delegate instanceof Delegate ) return ( ( Delegate ) delegate ) . get_codebase ( this ) ; return _NULL ; }
52745	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementretrieveallattributes . class , args ) ; }
52756	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
52762	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfName makeIndirect ( PdfDocument document ) { return ( PdfName ) super . makeIndirect ( document ) ; }
52764	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( processinginstructionsetdatanomodificationallowederr . class , args ) ; }
52766	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeappendchildnewchilddiffdocument . class , args ) ; }
52770	public boolean remove ( Object key ) { try { Object obj = hash . removeObject ( key ) ; if ( obj != _NULL ) { notifyObservers ( ) ; return _BOOL ; } return _BOOL ; } catch ( KeyNotFoundException k ) { k . printStackTrace ( ) ; return _BOOL ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _BOOL ; } }
52773	public boolean hasColumn ( ResultSetMetaData rsMetaData , String columnName ) throws SQLException { for ( int colPos = _NUM ; colPos <= rsMetaData . getColumnCount ( ) ; colPos ++ ) { if ( columnName . equalsIgnoreCase ( rsMetaData . getColumnName ( colPos ) ) ) { return _BOOL ; } } return _BOOL ; }
52774	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemns06 . class , args ) ; }
52779	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentinvalidcharacterexceptioncreatepi1 . class , args ) ; }
52781	@ Override public int hashCode ( ) { return _NUM + components . hashCode ( ) ; }
52797	@ Override public synchronized void write ( byte [ ] b , int off , int len ) throws IOException { super . write ( b , off , len ) ; this . branch . write ( b , off , len ) ; }
52798	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
52816	public boolean verifyXMLSignature ( String wsfVersion , String certAlias , org . w3c . dom . Document document ) throws XMLSignatureException { return sp . verifyXMLSignature ( wsfVersion , certAlias , document ) ; }
52818	static MatchingRuleImpl collationLessThanMatchingRule ( Locale locale ) { return new CollationLessThanMatchingRuleImpl ( locale ) ; }
52825	private boolean addPending ( DN dn ) { return pendingMap . putIfAbsent ( dn , new CountDownLatch ( _NUM ) ) == _NULL ; }
52829	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( _CHAR DeltaSession [ _CHAR ) ; sb . append ( id ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
52845	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getNamedItemNS03 . class , args ) ; }
52859	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodens06 . class , args ) ; }
52866	public void requestSecondsUntilRequiredChangeTime ( ) { operations . add ( PasswordPolicyStateOperationType . GET_SECONDS_UNTIL_REQUIRED_CHANGE_TIME ) ; }
52873	boolean isPersisted ( int id ) { int bit = _NUM << id ; return ( persisted & bit ) != _NUM ; }
52913	public void paintEditorPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
52930	@ Override public void removeManager ( Manager manager ) { if ( manager instanceof ClusterManager ) { ClusterManager cmgr = ( ClusterManager ) manager ; fireLifecycleEvent ( BEFORE_MANAGERUNREGISTER_EVENT , manager ) ; managers . remove ( getManagerName ( cmgr . getName ( ) , manager ) ) ; cmgr . setCluster ( _NULL ) ; fireLifecycleEvent ( AFTER_MANAGERUNREGISTER_EVENT , manager ) ; } }
52931	protected void handleComment ( char text [ ] ) { }
52933	protected void removeServiced ( String name ) throws Exception { String [ ] params = { name } ; String [ ] signature = { _CHAR java . lang . String _CHAR } ; mBeanServer . invoke ( oname , _CHAR removeServiced _CHAR , params , signature ) ; }
52937	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( entitygetpublicid . class , args ) ; }
52942	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documenttypegetentitiestype . class , args ) ; }
52954	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( entitygetpublicidnull . class , args ) ; }
52977	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( textsplittextnomodificationallowederr . class , args ) ; }
52981	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentcreateelement . class , args ) ; }
52995	public boolean verifySignature ( java . lang . String data , byte [ ] signature , java . lang . String algorithm , java . security . cert . X509Certificate cert ) throws FSSignatureException { return sp . verifySignature ( data , signature , algorithm , cert ) ; }
53012	public static Subject createSubject ( String tokenId ) { try { SSOToken ssoToken = SSOTokenManager . getInstance ( ) . createSSOToken ( tokenId ) ; return createSubject ( ssoToken ) ; } catch ( SSOException e ) { return _NULL ; } }
53016	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataappenddatagetdata . class , args ) ; }
53017	public void releaseMemory ( long size ) { if ( allowOvercommit ) { return ; } reservedMemory . release ( ( int ) ( size / ONE_MEGABYTE ) ) ; }
53045	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
53047	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapreturnattrnode . class , args ) ; }
53060	public void sendMessage ( byte message [ ] , InetAddress receiverAddress , int receiverPort , boolean retry ) throws IOException { sendTCPMessage ( message , receiverAddress , receiverPort , retry ) ; }
53086	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeinsertbefore . class , args ) ; }
53087	public void handleTblSiteButtonAddRequest ( RequestInvocationEvent event ) { SiteAddViewBean vb = ( SiteAddViewBean ) getViewBean ( SiteAddViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
53136	public static boolean isDynamicProfile ( String realm ) { String profileAttribute = getProfileAttribute ( realm ) ; return DYNAMIC_PROFILE . equalsIgnoreCase ( profileAttribute ) || CREATE_ALIAS_PROFILE . equalsIgnoreCase ( profileAttribute ) ; }
53139	public void handleProperty ( String property ) { propertyName = property ; }
53148	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementinuseattributeerr . class , args ) ; }
53149	public static void deleteFileWithRetry ( Path path ) throws IOException { try { deleteFileWithRetry0 ( path ) ; } catch ( InterruptedException x ) { throw new IOException ( _CHAR Interrupted while deleting . '' , x ) ; } }
53151	private static < A , B > Entry < A , B > createEntry ( A text , B field ) { return new SimpleImmutableEntry < > ( text , field ) ; }
53154	public static String removeSlashFromBeginning ( String string ) { if ( string != _NULL && ! string . equals ( _CHAR _CHAR ) && string . charAt ( _NUM ) == _CHAR ) { return string . substring ( _NUM , string . length ( ) ) ; } return string ; }
53199	public void beforeEvaluation ( ELContext context , String expression ) { }
53206	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodehaschildnodes . class , args ) ; }
53214	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrsubstringnegativeoffset . class , args ) ; }
53220	public boolean isTimeValid ( ) { boolean isTimeValid = _BOOL ; Conditions conditions = getConditions ( ) ; if ( conditions != _NULL ) { isTimeValid = conditions . checkDateValidity ( currentTimeMillis ( ) ) ; } return isTimeValid ; }
53221	public static void unsetSecurityToken ( Object name , Object token ) { if ( checkSecurityToken ( name , token ) ) { securityTokens . remove ( name ) ; } }
53239	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodevalue03 . class , args ) ; }
53251	protected void addChild ( ElementInfo child ) { if ( children == _NULL ) { children = new ArrayList < ElementInfo > ( ) ; } children . add ( child ) ; }
53257	public Expression locationPathPattern ( int opPos ) throws TransformerException { opPos = getFirstChildPos ( opPos ) ; return stepPattern ( opPos , _NUM , _NULL ) ; }
53272	public String toString ( ) { return getBaseType ( ) + parameters . toString ( ) ; }
53278	public void deleteField ( String id ) { super . doDeleteTagField ( new FrameAndSubId ( id , _NULL ) ) ; }
53293	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
53341	public static String cropWww ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return _NULL ; } if ( domainName . startsWith ( _CHAR www . '' ) ) { return domainName . substring ( _NUM ) ; } return domainName ; }
53346	public void emit ( byte [ ] buffer ) { }
53350	public int hashCode ( ) { return hashCode ; }
53381	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttribute01 . class , args ) ; }
53394	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementsbytagnamelength . class , args ) ; }
53405	public boolean isSubtractionMode ( ) { return ( getData ( ) & _NUM ) != _NUM ; }
53407	public boolean isMarked ( ) { return pair . mark ; }
53424	public boolean isBorderPainted ( ) { return paintBorder ; }
53436	public void startPrefixMapping ( String prefix , String uri ) { }
53453	public void endPrefixMapping ( String prefix ) throws SAXException { m_handler . endPrefixMapping ( prefix ) ; }
53463	public void paintTextAreaBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
53466	public RequirementsBuilder addDefinition ( String name , RequirementsBuilder builder ) { Reject . ifNull ( name , builder ) ; definitions . put ( name , prepareChildJsonValue ( builder ) ) ; return this ; }
53490	public boolean isSorted ( ) { return sortControl != _NULL ; }
53497	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdatagetlength . class , args ) ; }
53503	public static void disableCache ( ) { typeVariableCache . clear ( ) ; CACHE_ENABLED = _BOOL ; }
53511	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetownerdocument01 . class , args ) ; }
53512	public synchronized void cancelAll ( ) { waitingQueue . clear ( ) ; for ( BasicNode node : workingList . keySet ( ) ) { AbstractNodeTask task = workingList . get ( node ) ; cancelList . put ( node , node ) ; task . cancel ( ) ; } }
53516	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapgetnameditem . class , args ) ; }
53533	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeclonenodetrue . class , args ) ; }
53548	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SetNextRule [ _CHAR ) ; sb . append ( _CHAR methodName = _CHAR ) ; sb . append ( methodName ) ; sb . append ( _CHAR , paramType = _CHAR ) ; sb . append ( paramType ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
53549	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53550	public boolean verifyWSSSignature ( org . w3c . dom . Document document , java . security . Key key ) throws XMLSignatureException { return sp . verifyWSSSignature ( document , key ) ; }
53553	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataappenddata . class , args ) ; }
53560	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
53568	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrreplacedatacountnegative . class , args ) ; }
53571	public boolean isDefined ( Object attrName ) { return table . containsKey ( attrName ) ; }
53589	@ Override public void onActivityResult ( final int requestCode , final int resultCode , final Intent data ) { delegate . onActivityResult ( requestCode , resultCode , data ) ; }
53597	public boolean isActivated ( ) throws AMException , SSOException { return getStringAttribute ( statusAN ) . equalsIgnoreCase ( _CHAR active _CHAR ) ; }
53600	public String toXMLString ( ) { return _CHAR < _CHAR + REMOVE_LISTENER + _CHAR _CHAR + SERVICE_NAME + _CHAR =\ _CHAR _CHAR + serviceName + _CHAR \ _CHAR _CHAR + NOTIFICATION_URL + _CHAR =\ _CHAR _CHAR + notificationURL + _CHAR \ _CHAR / > _CHAR + CRLF ; }
53602	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( isSupported12 . class , args ) ; }
53603	public void addBitrateRecord ( final int streamNum , final long averageBitrate ) { this . streamNumbers . add ( streamNum ) ; this . bitRates . add ( averageBitrate ) ; }
53619	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode08 . class , args ) ; }
53630	protected PStmtKey createKey ( final String sql ) { String catalog = _NULL ; try { catalog = getCatalog ( ) ; } catch ( final SQLException e ) { } return new PStmtKey ( normalizeSQL ( sql ) , catalog ) ; }
53633	public String formatDateTime ( DateTime date ) { return date . withChronology ( chrono ) . toString ( ) ; }
53649	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetownerdocument02 . class , args ) ; }
53650	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfDictionary makeIndirect ( PdfDocument document ) { return ( PdfDictionary ) super . makeIndirect ( document ) ; }
53654	@ Override public String toString ( ) { if ( components . isEmpty ( ) ) { return _CHAR _CHAR ; } return _CHAR ( _CHAR + DomainUtils . join ( SEPARATOR , components ) + _CHAR ) _CHAR ; }
53664	public void logTrace ( String message ) { logger . debug ( message ) ; }
53668	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentinvalidcharacterexceptioncreateattribute . class , args ) ; }
53697	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetfirstchildnull . class , args ) ; }
53698	private InetSocketAddress nextInetSocketAddress ( ) throws UnknownHostException { InetSocketAddress result = new InetSocketAddress ( socketAddresses [ nextSocketAddressIndex ++ ] , socketPort ) ; if ( nextSocketAddressIndex == socketAddresses . length ) { socketAddresses = _NULL ; nextSocketAddressIndex = _NUM ; } return result ; }
53712	public void disableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glDisableVertexAttribArray ( location ) ; }
53756	public boolean equals ( Object obj ) { if ( obj instanceof CommandEnvironment ) { CommandEnvironment env = ( CommandEnvironment ) obj ; return ( ( command == _NULL ? env . command == _NULL : command . equals ( env . command ) ) && Arrays . equals ( options , env . options ) ) ; } else { return _BOOL ; } }
53763	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapnotfounderr . class , args ) ; }
53770	public boolean writeTemplateEntry ( TemplateEntry templateEntry ) throws IOException , LDIFException { ifNull ( templateEntry ) ; return templateEntry . toLDIF ( exportConfig ) ; }
53779	public void paintToolTipBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
53795	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodedocumentnodename . class , args ) ; }
53796	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
53801	public TimeDescription createTimeDescription ( Date start , Date stop ) throws SdpException { TimeDescriptionImpl timeDescriptionImpl = new TimeDescriptionImpl ( ) ; TimeField timeImpl = new TimeField ( ) ; timeImpl . setStart ( start ) ; timeImpl . setStop ( stop ) ; timeDescriptionImpl . setTime ( timeImpl ) ; return timeDescriptionImpl ; }
53823	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodehasattributes01 . class , args ) ; }
53879	@ Override public EnumEvalResult evaluate ( AciEvalContext evalCtx ) { switch ( userAttrType ) { case ROLEDN : case GROUPDN : case USERDN : return evalDNKeywords ( evalCtx ) ; case URL : return evalURL ( evalCtx ) ; default : return evalVAL ( evalCtx ) ; } }
53882	public Builder flicker ( boolean flicker ) { this . flicker = flicker ; return this ; }
53893	private static void legacyMergeSort ( Object [ ] a , int fromIndex , int toIndex ) { Object [ ] aux = copyOfRange ( a , fromIndex , toIndex ) ; mergeSort ( aux , a , fromIndex , toIndex , - fromIndex ) ; }
53894	public void paintScrollPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
53895	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementgetelementsbytagname . class , args ) ; }
53903	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( prefix01 . class , args ) ; }
53909	@ Override public void enqueueRequest ( Operation operation ) throws DirectoryException { DirectoryServer . enqueueRequest ( operation ) ; }
53910	public ServerStatus changeStatus ( StatusMachineEvent event ) throws IOException { return changeStatus ( event , _CHAR from status analyzer _CHAR ) ; }
53915	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforenewchildexists . class , args ) ; }
53923	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR Transaction [ _CHAR ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
53931	public boolean isFullCompression ( ) { return properties . isFullCompression != _NULL ? ( boolean ) properties . isFullCompression : _BOOL ; }
53952	protected ContentModel defContentModel ( int type , Object obj , ContentModel next ) { return new ContentModel ( type , obj , next ) ; }
53955	public Reference < String > newLiteralReference ( String s ) { return new WeakReference < String > ( s ) ; }
53967	protected void handleEmptyTag ( TagElement tag ) throws ChangedCharSetException { }
53969	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodechildnodes . class , args ) ; }
53987	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_noderemovechildnode . class , args ) ; }
54002	public boolean hasAdvices ( ) { return advicesAreSet ; }
54005	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodesetprefix04 . class , args ) ; }
54014	public String encode ( ) { String encoded_string = CONNECTION_FIELD ; if ( nettype != _NULL ) encoded_string += nettype ; if ( addrtype != _NULL ) encoded_string += Separators . SP + addrtype ; if ( address != _NULL ) encoded_string += Separators . SP + address . encode ( ) ; return encoded_string += Separators . NEWLINE ; }
54023	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR WebappLoader [ _CHAR ) ; if ( context != _NULL ) sb . append ( context . getName ( ) ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
54054	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_elementinuseattributeerr . class , args ) ; }
54065	public void update ( byte input ) { digest . update ( input ) ; }
54069	public final int incrementAndGet ( ) { for ( ; ; ) { int current = get ( ) ; int next = current + _NUM ; if ( compareAndSet ( current , next ) ) return next ; } }
54091	public boolean isEnabled ( ) { return enabled ; }
54109	public OrderService retrieveOrdersForAccount ( String accountId , Handler < AsyncResult < List < Order >> > resultHandler ) { delegate . retrieveOrdersForAccount ( accountId , resultHandler ) ; return this ; }
54124	public void sort ( ) throws Exception { sort ( m_map , _NUM , m_firstFree - _NUM ) ; }
54126	private List < Record < Integer , Integer >> records ( int ... keys ) { List < Record < Integer , Integer >> records = new ArrayList < > ( ) ; for ( int key : keys ) { records . add ( Record . from ( key , key ) ) ; } return records ; }
54135	public void paintScrollPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
54138	public static long hash64 ( final String text , int from , int length ) { return hash64 ( text . substring ( from , from + length ) ) ; }
54146	public static String toString ( URL url ) throws IOException { return toString ( url , Charset . defaultCharset ( ) ) ; }
54163	private void removeGroups ( ) throws Exception { InternalClientConnection conn = InternalClientConnection . getRootConnection ( ) ; conn . processDelete ( DN . valueOf ( _CHAR cn = Test Group , o = Test _CHAR ) ) ; conn . processDelete ( DN . valueOf ( _CHAR cn = Example Group , o = Test _CHAR ) ) ; }
54200	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode09 . class , args ) ; }
54201	@ Override public boolean representsSameNode ( BrowserNodeInfo node ) { return node != _NULL && node . getNode ( ) == node ; }
54234	public boolean isPaused ( ) { return paused . get ( ) ; }
54235	public boolean isReadable ( ) { return ( this . readable ) ; }
54248	@ Override public synchronized boolean isPoolPreparedStatements ( ) { return this . poolPreparedStatements ; }
54250	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
54272	public float [ ] convertMapXYToScreenXY ( float x , float y ) { Matrix invertMatrix = new Matrix ( ) ; float [ ] value = { x , y } ; currentMatrix . invert ( invertMatrix ) ; invertMatrix . mapPoints ( value ) ; return value ; }
54275	public boolean isIdle ( ) { return spdyConnection == _NULL || spdyConnection . isIdle ( ) ; }
54276	public void commitTransaction ( ) throws SQLException { try { this . currentConection . commit ( ) ; } catch ( SQLException e ) { if ( this . currentConection != _NULL ) { this . currentConection . rollback ( ) ; } } finally { this . currentConection . setAutoCommit ( _BOOL ) ; } }
54292	protected MouseInputListener createMouseInputListener ( ) { return new MouseInputHandler ( ) ; }
54303	@ Override public byte byteValue ( ) { return value ; }
54310	public void paintPopupMenuBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
54313	protected void validate ( ) { super . validate ( ) ; updateGrid ( ) ; }
54319	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapsetnameditemthatexists . class , args ) ; }
54323	public void internalFrameDeactivated ( InternalFrameEvent e ) { }
54338	void dispatchOnLauncherTransitionStep ( View v , float t ) { if ( v instanceof LauncherTransitionable ) { ( ( LauncherTransitionable ) v ) . onLauncherTransitionStep ( mLauncher , t ) ; } }
54349	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeappendchildnodeancestor . class , args ) ; }
54378	public String toXMLString ( ) throws SAML2Exception { return xmlString ; }
54393	public static void openGallery ( Activity activity ) { if ( activity == _NULL ) { throw new RuntimeException ( _CHAR Activity not set ! _CHAR ) ; } Intent galleryIntent = new Intent ( Intent . ACTION_PICK ) ; galleryIntent . setType ( _CHAR image /* '' ) ; activity . startActivityForResult ( galleryIntent , getGalleryRequestCode ( ) ) ; }
54409	public void stop ( ) { throttlingStrategy . stop ( ) ; }
54416	public static MultiPoint fromJson ( String json ) { GsonBuilder gson = new GsonBuilder ( ) ; gson . registerTypeAdapter ( Position . class , new PositionDeserializer ( ) ) ; return gson . create ( ) . fromJson ( json , MultiPoint . class ) ; }
54431	String fullName ( ) { String parsable = name ; if ( scope != _NULL ) { parsable += _CHAR . _CHAR + scope . getName ( ) ; } return parsable ; }
54439	public void windowClosed ( WindowEvent e ) { }
54445	public static boolean isStrikeThrough ( AttributeSet a ) { Boolean strike = ( Boolean ) a . getAttribute ( StrikeThrough ) ; if ( strike != _NULL ) { return strike . booleanValue ( ) ; } return _BOOL ; }
54447	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodegetprefix03 . class , args ) ; }
54452	public void refresh ( ) { freert . graphics . GdiContext graphics_context = get_board_handling ( ) . gdi_context ; for ( int i = _NUM ; i < graphics_context . layer_count ( ) ; ++ i ) { set_slider_value ( i , graphics_context . get_raw_layer_visibility ( i ) ) ; } }
54459	public static LineString fromJson ( String json ) { GsonBuilder gson = new GsonBuilder ( ) ; gson . registerTypeAdapter ( Position . class , new PositionDeserializer ( ) ) ; return gson . create ( ) . fromJson ( json , LineString . class ) ; }
54481	public static boolean toBoolean ( byte [ ] b , int offset ) { return b [ offset ] != _NUM ; }
54505	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdatainsertdatabeginning . class , args ) ; }
54517	public void shutdown ( ) { synchronized ( shutdownLock ) { shutdown = _BOOL ; shutdownLock . notifyAll ( ) ; } }
54520	public PdfPage addPage ( PdfPage page ) { checkClosingStatus ( ) ; checkAndAddPage ( page ) ; dispatchEvent ( new PdfDocumentEvent ( PdfDocumentEvent . INSERT_PAGE , page ) ) ; return page ; }
54523	public static void unbanIP ( String address ) { server . unbanIP ( address ) ; }
54533	public void paintScrollPaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
54535	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeappendchildnewchilddiffdocument . class , args ) ; }
54539	public void close ( ) throws java . io . IOException { if ( m_writer != _NULL ) m_writer . close ( ) ; flushBuffer ( ) ; }
54554	private void logReconEndSuccess ( ReconciliationContext reconContext , Context context ) throws SynchronizationException { logReconEnd ( reconContext , context , Status . SUCCESS , _CHAR Reconciliation completed . '' ) ; }
54583	public void endCDATA ( ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # endCDATA _CHAR ) ; if ( _NULL != m_lexicalHandler ) { m_lexicalHandler . endCDATA ( ) ; } }
54585	public static CommandResult execCommand ( List < String > commands , boolean isRoot ) { return execCommand ( commands == _NULL ? _NULL : commands . toArray ( new String [ ] { } ) , isRoot , _BOOL ) ; }
54591	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getNamedItemNS04 . class , args ) ; }
54597	@ AfterClass public void cleanup ( ) throws Exception { int resultCode = TestCaseUtils . applyModifications ( _BOOL , _CHAR dn : cn = schema _CHAR , _CHAR changetype : modify _CHAR , _CHAR delete : ditStructureRules _CHAR , _CHAR dITStructureRules : ( _NUM NAME _CHAR FORM organizationalNameForm SUP _NUM ) _CHAR , _CHAR dITStructureRules : ( _NUM NAME _CHAR FORM domainNameForm ) _CHAR , _CHAR - _CHAR , _CHAR delete : nameForms _CHAR , _CHAR nameForms : ( domainNameForm - oid NAME _CHAR OC domain MUST ( dc ) ) _CHAR , _CHAR nameForms : ( organizationalNameForm - oid NAME _CHAR OC organization MUST ( o ) ) _CHAR ) ; assertEquals ( resultCode , _NUM ) ; }
54600	public void paintRadioButtonBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
54633	public static int hash32 ( final String text , int from , int length ) { return hash32 ( text . substring ( from , from + length ) ) ; }
54642	protected void updateXmpMetadata ( ) { try { if ( writer . properties . addXmpMetadata ) { setXmpMetadata ( updateDefaultXmpMetadata ( ) ) ; } } catch ( XMPException e ) { Logger logger = LoggerFactory . getLogger ( PdfDocument . class ) ; logger . error ( LogMessageConstant . EXCEPTION_WHILE_UPDATING_XMPMETADATA , e ) ; } }
54647	public double lengthSquared ( ) { return NumberConversions . square ( x ) + NumberConversions . square ( y ) + NumberConversions . square ( z ) ; }
54649	public synchronized void stop ( ) { if ( isRunning == _BOOL ) return ; isRunning = _BOOL ; removeAllOperations ( ) ; operationHandlerThread . quit ( ) ; operationHandlerThread = _NULL ; operationHandlerThreadHandler = _NULL ; bundle . clear ( ) ; }
54650	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodenotationnodetype . class , args ) ; }
54681	public void paintMenuItemBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
54692	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapreturnlastitem . class , args ) ; }
54694	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetlastchildnull . class , args ) ; }
54696	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { XObject m_selected ; m_selected = ( ( Expression ) m_obj ) . execute ( xctxt ) ; m_selected . allowDetachToRelease ( m_allowRelease ) ; if ( m_selected . getType ( ) == CLASS_STRING ) return m_selected ; else return new XString ( m_selected . str ( ) ) ; }
54707	public static boolean isDeprecated ( int mod ) { return ( mod & ACC_DEPRECATED ) != _NUM ; }
54708	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( notationgetpublicidnull . class , args ) ; }
54710	public static boolean isItalic ( AttributeSet a ) { Boolean italic = ( Boolean ) a . getAttribute ( Italic ) ; if ( italic != _NULL ) { return italic . booleanValue ( ) ; } return _BOOL ; }
54716	public static void cleanSearchedStations ( Context context ) { Log . d ( TAG , _CHAR FmRadioStation . cleanSearchedStations start _CHAR ) ; context . getContentResolver ( ) . delete ( Station . CONTENT_URI , Station . COLUMN_STATION_TYPE + _CHAR = _CHAR + String . valueOf ( STATION_TYPE_SEARCHED ) , _NULL ) ; Log . d ( TAG , _CHAR FmRadioStation . cleanSearchedStations end _CHAR ) ; }
54720	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementretrieveattrvalue . class , args ) ; }
54722	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS08 . class , args ) ; }
54736	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode13 . class , args ) ; }
54740	void enableFilterUseStats ( boolean enabled ) { if ( enabled && ! filterUseEnabled ) { startTimeStamp = TimeThread . getGMTTime ( ) ; indexedSearchCount . set ( _NUM ) ; unindexedSearchCount . set ( _NUM ) ; } else if ( ! enabled ) { filterToStats . clear ( ) ; } filterUseEnabled = enabled ; }
54746	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode20 . class , args ) ; }
54748	private static boolean eq ( Object o1 , Object o2 ) { return ( o1 == _NULL ) ? o2 == _NULL : o1 . equals ( o2 ) ; }
54758	public void paintInternalFrameBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
54775	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodechildnodesappendchild . class , args ) ; }
54788	public void paintPasswordFieldBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
54805	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
54834	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentcreateattribute . class , args ) ; }
54842	@ DataProvider ( name = _CHAR listCommunities _CHAR ) Object [ ] [ ] listCommunities ( ) { return new Object [ ] [ ] { { _CHAR public _CHAR , _BOOL } , { _CHAR private _CHAR , _BOOL } , { _CHAR OpenDS @ OpenDS _CHAR , _BOOL } , { _CHAR dummy _CHAR , _BOOL } , { _CHAR _CHAR , _BOOL } } ; }
54866	@ Override public void nullifyUsedVars ( ) { sharedState = _NULL ; challengeID = _NULL ; primaryServers = _NULL ; secondaryServers = _NULL ; sharedSecret = _NULL ; }
54888	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodedocumentnodetype . class , args ) ; }
54894	private SAXParseException makeException ( String message ) { if ( locator != _NULL ) { return new SAXParseException ( message , locator ) ; } else { return new SAXParseException ( message , _NULL , _NULL , - _NUM , - _NUM ) ; } }
54901	@ Override public void addMapping ( String mapping ) { mappingsLock . writeLock ( ) . lock ( ) ; try { mappings . add ( mapping ) ; } finally { mappingsLock . writeLock ( ) . unlock ( ) ; } if ( parent . getState ( ) . equals ( LifecycleState . STARTED ) ) fireContainerEvent ( ADD_MAPPING_EVENT , mapping ) ; }
54904	private byte [ ] performUpdate ( byte [ ] data , BidiMap map ) throws TokenStrategyFailedException { try { return blobUtils . fromUTF8 ( applyReplacement ( map , blobUtils . toUTF8 ( data ) ) ) ; } catch ( UnsupportedEncodingException e ) { throw new TokenStrategyFailedException ( e ) ; } }
54919	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodedocumentnodevalue . class , args ) ; }
54924	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS11 . class , args ) ; }
54928	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodenull . class , args ) ; }
54946	protected String stop ( String name , StringManager smClient ) { StringWriter stringWriter = new StringWriter ( ) ; PrintWriter printWriter = new PrintWriter ( stringWriter ) ; super . stop ( printWriter , name , smClient ) ; return stringWriter . toString ( ) ; }
54954	@ Override public void onCreate ( SQLiteDatabase db ) { addHistoryTable ( db ) ; }
54955	private < T extends MessageNano > T unpackProto ( T proto , byte [ ] buffer , int dataSize ) throws InvalidProtocolBufferNanoException { MessageNano . mergeFrom ( proto , readCheckedBytes ( buffer , dataSize ) ) ; if ( DEBUG ) Log . d ( TAG , _CHAR unpacked proto _CHAR + proto ) ; return proto ; }
54958	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeattributenodevalue . class , args ) ; }
54959	public boolean hasXfaForm ( ) { return xfaForm != _NULL && xfaForm . isXfaPresent ( ) ; }
54965	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_textparseintolistofelements . class , args ) ; }
54967	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_noderemovechild . class , args ) ; }
54987	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hasAttributeNS03 . class , args ) ; }
55004	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
55010	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documenttypegetnotations . class , args ) ; }
55014	@ Override public String toString ( ) { return date . toString ( ) ; }
55019	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
55043	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemns02 . class , args ) ; }
55069	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode17 . class , args ) ; }
55096	public static ReplicationParameters replicationParams ( ) { return new ReplicationParameters ( ) ; }
55100	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentimportnode03 . class , args ) ; }
55101	public static boolean isCookieDomainValid ( String cookieDomain ) { return StringUtils . isEmpty ( cookieDomain ) || ! cookieDomain . contains ( _CHAR : _CHAR ) ; }
55107	public boolean equals ( XObject obj2 ) { try { return m_val == obj2 . bool ( ) ; } catch ( javax . xml . transform . TransformerException te ) { throw new org . apache . xml . utils . WrappedRuntimeException ( te ) ; } }
55110	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeinsertbeforedocfragment . class , args ) ; }
55111	public void endElement ( String elementName ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . endElement ( elementName ) ; }
55119	public int hashCode ( ) { return oid . hashCode ( ) ; }
55123	public static boolean isVolatile ( int mod ) { return ( mod & ACC_VOLATILE ) != _NUM ; }
55132	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getAttributeNS01 . class , args ) ; }
55144	public void enableVertexAttribute ( String name ) { int location = fetchAttributeLocation ( name ) ; if ( location == - _NUM ) return ; GLES20 . glEnableVertexAttribArray ( location ) ; }
55160	public final void println ( final LocalizableMessage msg ) { if ( ! isQuiet ( ) ) { out . println ( wrap ( msg ) ) ; } }
55170	public String encode ( ) { String encoded_string ; encoded_string = PHONE_FIELD ; if ( name != _NULL ) { encoded_string += name + Separators . LESS_THAN ; } encoded_string += phoneNumber ; if ( name != _NULL ) { encoded_string += Separators . GREATER_THAN ; } encoded_string += Separators . NEWLINE ; return encoded_string ; }
55177	public StringBuilder encodeBody ( StringBuilder retval ) { return encodeProduct ( retval ) ; }
55197	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( noderemovechildoldchildnonexistent . class , args ) ; }
55198	public void paintSplitPaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
55200	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( createDocument02 . class , args ) ; }
55202	public String toString ( ) { StringBuilder sb = new StringBuilder ( _NUM ) ; sb . append ( _CHAR ResourceName : _CHAR ) . append ( resourceName ) . append ( _CHAR ; _CHAR ) ; sb . append ( _CHAR PolicyNames : _CHAR ) . append ( policyNames . toString ( ) ) ; return sb . toString ( ) ; }
55226	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementretrievetagname . class , args ) ; }
55229	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateelementNS01 . class , args ) ; }
55231	public static boolean isTeslaCapability ( Capability < ? > capability ) { return isHolderCapability ( capability ) || isConsumerCapability ( capability ) || isProducerCapability ( capability ) ; }
55234	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_characterdataindexsizeerrsubstringoffsetgreater . class , args ) ; }
55239	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentcreateelement . class , args ) ; }
55243	public java . lang . String toString ( ) { return this . toString ( _BOOL , _BOOL ) ; }
55252	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributenodens03 . class , args ) ; }
55261	@ Override public AvroGenerator createGenerator ( OutputStream out , JsonEncoding enc ) throws IOException { return createGenerator ( out ) ; }
55332	public void checkForLocal ( ) { isLocal = _BOOL ; }
55337	@ Override public void flush ( ) { for ( OutputStream s : targetStreams ) { try { s . flush ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
55341	private void searchEntry ( String baseDN , ResultCode expectedRC ) throws Exception { SearchRequest request = newSearchRequest ( DN . valueOf ( baseDN ) , SearchScope . BASE_OBJECT ) ; SearchOperation search = getRootConnection ( ) . processSearch ( request ) ; assertEquals ( search . getResultCode ( ) , expectedRC ) ; }
55343	@ Override public void removeAll ( ) { for ( Foo foo : findAll ( ) ) { remove ( foo ) ; } }
55347	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
55357	public static String removeSlashFromEnd ( String string ) { if ( string != _NULL && ! string . equals ( _CHAR _CHAR ) && string . charAt ( string . length ( ) - _NUM ) == _CHAR ) { return string . substring ( _NUM , string . length ( ) - _NUM ) ; } return string ; }
55362	public KeyStoreBuilder withPassword ( final String password ) { return withPassword ( password . toCharArray ( ) ) ; }
55363	protected void uninstallComboBoxModelListeners ( ComboBoxModel model ) { if ( model != _NULL && listDataListener != _NULL ) { model . removeListDataListener ( listDataListener ) ; } }
55364	public SignatureVisitor visitParameterType ( ) { return this ; }
55365	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS10 . class , args ) ; }
55374	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrcreatetextnode . class , args ) ; }
55379	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( textparseintolistofelements . class , args ) ; }
55402	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentinvalidcharacterexceptioncreateelement . class , args ) ; }
55407	public static List < SearchResultEntry > findStringsSimiliar ( String text ) { List < SearchResultEntry > results = findStringsContaining ( text ) ; return results ; }
55408	public boolean checkAuthentication ( final HttpServletRequest request ) { return DEFAULT_CHECKAUTHENTICATION ; }
55416	@ Fluent public Job onComplete ( Handler < Job > completeHandler ) { this . on ( _CHAR complete _CHAR , _NULL ) ; return this ; }
55419	public String encode ( ) { return EMAIL_FIELD + emailAddress . encode ( ) + Separators . NEWLINE ; }
55422	public static boolean isNotBlank ( final String s ) { return ( s != _NULL && s . trim ( ) . length ( ) > _NUM ) ; }
55434	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
55442	final boolean isAlive ( ) { return thread . isAlive ( ) ; }
55460	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodecommentnodevalue . class , args ) ; }
55475	public static boolean doesHandleProperties ( final Argument argument ) { final String id = argument . getLongIdentifier ( ) ; return ( _CHAR add _CHAR . equals ( id ) || _CHAR remove _CHAR . equals ( id ) || _CHAR reset _CHAR . equals ( id ) || _CHAR set _CHAR . equals ( id ) ) ; }
55476	@ Override public int realReadBytes ( ) throws IOException { if ( closed ) { return - _NUM ; } if ( coyoteRequest == _NULL ) { return - _NUM ; } if ( state == INITIAL_STATE ) { state = BYTE_STATE ; } int result = coyoteRequest . doRead ( bb ) ; return result ; }
55479	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
55496	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_namednodemapinvalidtype1 . class , args ) ; }
55508	public void writeLog ( String msgId , String userDN ) { writeLog ( msgId , _CHAR _CHAR , userDN ) ; }
55518	@ Override public NameClassPair next ( ) throws NamingException { return nextElement ( ) ; }
55519	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeattributenodename . class , args ) ; }
55543	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapsetnameditemthatexists . class , args ) ; }
55549	public final int decrementAndGet ( ) { for ( ; ; ) { int current = get ( ) ; int next = current - _NUM ; if ( compareAndSet ( current , next ) ) return next ; } }
55559	private void acceptForSession ( ) { returnValue = ReturnType . ACCEPTED_FOR_SESSION ; dispose ( ) ; }
55577	public void paintCheckBoxBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
55579	public boolean isUndefined ( ) { return type == Type . UNDEFINED ; }
55580	private E dequeue ( ) { Node < E > h = head ; Node < E > first = h . next ; h . next = h ; head = first ; E x = first . item ; first . item = _NULL ; return x ; }
55592	public void addSessionForGivenUUID ( String sid , Long expTime ) { allSessionsforGivenUUID . put ( sid , expTime ) ; }
55594	public void paintCheckBoxBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
55606	protected HttpURLConnection createPut ( String uri ) throws IOException { return createConnection ( uri , METHOD_PUT ) ; }
55609	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfNumber makeIndirect ( PdfDocument document , PdfIndirectReference reference ) { return ( PdfNumber ) super . makeIndirect ( document , reference ) ; }
55612	@ Override public void destroyModuleState ( ) { UUID = _NULL ; userName = _NULL ; }
55639	@ Override public String toString ( ) { return Long . toString ( id ) ; }
55670	@ Override public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
55672	private Entry addEntry ( String dn ) throws Exception { return TestCaseUtils . addEntry ( _CHAR dn : _CHAR + dn , _CHAR objectClass : top _CHAR , _CHAR objectClass : person _CHAR , _CHAR objectClass : organizationalPerson _CHAR , _CHAR objectClass : inetOrgPerson _CHAR , _CHAR uid : _NUM _CHAR , _CHAR givenName : test _CHAR , _CHAR sn : _NUM _CHAR , _CHAR cn : test _CHAR ) ; }
55674	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS01 . class , args ) ; }
55678	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentgetelementsbytagnamelength . class , args ) ; }
55680	public boolean isEmpty ( ) { return delegate . isEmpty ( ) ; }
55685	public boolean managedObjectExists ( ManagedObjectPath < ? , ? > path ) { DN targetDN = DNBuilder . create ( path ) ; try { return configRepository . getEntry ( targetDN ) != _NULL ; } catch ( ConfigException e ) { return _BOOL ; } }
55687	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributens04 . class , args ) ; }
55694	public void unparsedEntityDecl ( StylesheetHandler handler , String name , String publicId , String systemId , String notationName ) { }
55701	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( getElementsByTagNameNS05 . class , args ) ; }
55702	public static void clear ( String realmName ) { if ( ( authCtxObjHash != _NULL ) && ( ! authCtxObjHash . isEmpty ( ) ) ) { authCtxObjHash . clear ( ) ; } if ( ( authContextHash != _NULL ) && ( ! authContextHash . isEmpty ( ) ) ) { authContextHash . clear ( ) ; } }
55705	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
55717	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeclonegetparentnull . class , args ) ; }
55719	protected void check ( String name ) throws Exception { String [ ] params = { name } ; String [ ] signature = { _CHAR java . lang . String _CHAR } ; mBeanServer . invoke ( oname , _CHAR check _CHAR , params , signature ) ; }
55720	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( characterdataindexsizeerrsubstringoffsetgreater . class , args ) ; }
55736	public static boolean isAbstract ( int mod ) { return ( mod & ACC_ABSTRACT ) != _NUM ; }
55739	public boolean isWatchMode ( ) throws MojoExecutionException { return runningWithGoal ( _CHAR fabric8 : watch - spring - boot _CHAR , _CHAR fabric8 : watch _CHAR ) ; }
55752	public void handleTblDataActionHrefRequest ( RequestInvocationEvent event ) { String name = hexToString ( ( String ) getDisplayFieldValue ( TBL_DATA_ACTION_HREF ) ) ; setPageSessionAttribute ( DelegationPropertiesViewBean . CURRENT_IDENTITY , name ) ; DelegationPropertiesViewBean vb = ( DelegationPropertiesViewBean ) getViewBean ( DelegationPropertiesViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
55753	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
55756	public synchronized void mouseMove ( int x , int y ) { peer . mouseMove ( x , y ) ; afterEvent ( ) ; }
55757	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
55759	public void save ( java . io . ObjectOutputStream p_object_stream ) { try { p_object_stream . writeObject ( filter_string . getText ( ) ) ; } catch ( java . io . IOException e ) { System . out . println ( _CHAR WindowObjectListWithFilter . save : save failed _CHAR ) ; } super . save ( p_object_stream ) ; }
55763	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( removeAttributeNS01 . class , args ) ; }
55771	public void onScroll ( float distanceX , float distanceY ) { float viewportXOffset = distanceX / contentRect . width ( ) * viewportRect . width ( ) ; computeScrollSurfaceSize ( ) ; computeXAxis ( ) ; move ( viewportRect . left + viewportXOffset ) ; }
55772	public void remove ( ) throws UnsupportedOperationException { if ( this . lastIndex < _NUM ) { throw new IllegalStateException ( _CHAR No header to remove . '' ) ; } this . allHeaders . remove ( this . lastIndex ) ; this . lastIndex =- _NUM ; this . currentIndex -- ; }
55780	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrcreatetextnode . class , args ) ; }
55797	synchronized void enqueue ( Reference < ? extends T > reference ) { if ( head == _NULL ) { reference . queueNext = reference ; } else { reference . queueNext = head ; } head = reference ; notify ( ) ; }
55808	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeinsertbeforerefchildnonexistent . class , args ) ; }
55823	public PageRange addPageSequence ( int startPageNumber , int endPageNumber ) { sequenceStarts . add ( startPageNumber ) ; sequenceEnds . add ( endPageNumber ) ; return this ; }
55827	public void externalEntityDecl ( String name , String publicId , String systemId ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . externalEntityDecl ( name , publicId , systemId ) ; }
55833	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementsetattributens01 . class , args ) ; }
55838	@ Override public String toString ( ) { return id ; }
55862	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapgetnameditem . class , args ) ; }
55863	public boolean is_diagonal ( ) { return direction ( ) . is_diagonal ( ) ; }
55876	public InvestingZonkyApi authenticated ( final CommonFilter filter ) { return this . obtain ( InvestingZonkyApi . class , ApiProvider . ZONKY_URL , filter ) ; }
55889	public boolean remove ( MidiEvent event ) { synchronized ( eventsList ) { if ( set . remove ( event ) ) { int i = eventsList . indexOf ( event ) ; if ( i >= _NUM ) { eventsList . remove ( i ) ; return _BOOL ; } } } return _BOOL ; }
55900	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeissupported04 . class , args ) ; }
55907	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodegetownerdocumentnull . class , args ) ; }
55912	protected void engineUpdate ( byte [ ] b , int off , int len ) throws SignatureException { msgDigest . update ( b , off , len ) ; }
55949	public static String htmlEncode ( final String html ) { validate ( html , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return html . chars ( ) . mapToObj ( _NULL ) . map ( _NULL ) . collect ( joining ( ) ) ; }
55975	public String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _CHAR LDAPCertStoreParameters : [ \ n _CHAR ) ; sb . append ( _CHAR serverName : _CHAR + serverName + _CHAR \ n _CHAR ) ; sb . append ( _CHAR port : _CHAR + port + _CHAR \ n _CHAR ) ; sb . append ( _CHAR ] _CHAR ) ; return sb . toString ( ) ; }
55987	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodereplacechild . class , args ) ; }
55990	protected static int toDigit ( char ch , int index ) throws DecoderException { int digit = Character . digit ( ch , _NUM ) ; if ( digit == - _NUM ) { throw new DecoderException ( _CHAR Illegal hexadecimal charcter _CHAR + ch + _CHAR at index _CHAR + index ) ; } return digit ; }
56012	public void reset ( ) { addCount . set ( _NUM ) ; deleteCount . set ( _NUM ) ; modifyCount . set ( _NUM ) ; modifyDNCount . set ( _NUM ) ; }
56025	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_attrsetvalue1 . class , args ) ; }
56028	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
56033	public Phone createPhone ( String value ) { PhoneField phoneImpl = new PhoneField ( ) ; try { phoneImpl . setValue ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return phoneImpl ; }
56044	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( namednodemapremovenameditemns03 . class , args ) ; }
56048	public StringBuilder encodeBody ( StringBuilder buffer ) { return buffer . append ( organization ) ; }
56052	public SAML2ConfigBuilder encryptAssertion ( boolean encryptAssertion ) { this . encryptAssertion = encryptAssertion ; return this ; }
56054	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . restartServer ( ) ; }
56057	public void paintToolBarBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
56060	public boolean isMutable ( ) { return isMutable ; }
56069	public void paintComboBoxBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
56078	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( elementremoveattributeaftercreate . class , args ) ; }
56085	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentgetelementsbytagnametotallength . class , args ) ; }
56086	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
56104	public SignatureVisitor visitSuperclass ( ) { return this ; }
56110	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( attrgetownerelement03 . class , args ) ; }
56112	public void addPropertyChangeListener ( PropertyChangeListener listener ) { super . addPropertyChangeListener ( listener ) ; }
56121	private static void verifySimpleXMLName ( String name ) throws XMPException { if ( ! Utils . isXMLName ( name ) ) { throw new XMPException ( _CHAR Bad XML name _CHAR , XMPError . BADXPATH ) ; } }
56122	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
56130	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_textsplittextone . class , args ) ; }
56139	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
56150	public String toXMLString ( ) throws PAOSException { return toXMLString ( _BOOL , _BOOL ) ; }
56151	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodehasattributes04 . class , args ) ; }
56152	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( nodeclonenodefalse . class , args ) ; }
56153	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
56161	public java . lang . String signXML ( java . lang . String xmlString , java . lang . String certAlias ) throws XMLSignatureException { return signXML ( xmlString , certAlias , _NULL ) ; }
56163	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( importNode04 . class , args ) ; }
56173	public Location toLocation ( World world , float yaw , float pitch ) { return new Location ( world , x , y , z , yaw , pitch ) ; }
56176	public void logDebug ( String message ) { logger . debug ( message ) ; }
56179	public final void print ( final LocalizableMessage msg ) { if ( ! isQuiet ( ) ) { out . print ( wrap ( msg ) ) ; } }
56181	public void addItem ( String key , PdfDate d ) { PdfCollectionField field = schema . getField ( key ) ; if ( field . subType == PdfCollectionField . DATE ) { getPdfObject ( ) . put ( new PdfName ( key ) , d . getPdfObject ( ) ) ; } }
56195	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_nodeelementnodetype . class , args ) ; }
56197	public boolean hasXrefStm ( ) { return xrefStm ; }
56228	public static void cleanEmbeddedCassandra ( ) { dropKeyspaces ( ) ; }
56255	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public PdfNull makeIndirect ( PdfDocument document ) { return ( PdfNull ) super . makeIndirect ( document ) ; }
56269	public static void error ( Level level , String msgid , String data [ ] ) { error ( level , msgid , data , _NULL ) ; }
56280	public Header nextHeader ( ) throws NoSuchElementException { final int current = this . currentIndex ; if ( current < _NUM ) { throw new NoSuchElementException ( _CHAR Iteration already finished . '' ) ; } this . lastIndex = current ; this . currentIndex = findNext ( current ) ; return ( Header ) this . allHeaders . get ( current ) ; }
56287	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( documentgetelementsbytagnameNS03 . class , args ) ; }
56288	public String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _CHAR X509CollectionStoreParameters : [ \ n _CHAR ) ; sb . append ( _CHAR collection : _CHAR + collection + _CHAR \ n _CHAR ) ; sb . append ( _CHAR ] _CHAR ) ; return sb . toString ( ) ; }
56305	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
56316	@ Override public boolean isXpoweredBy ( ) { return xpoweredBy ; }
56319	public static void main ( final String [ ] args ) { DOMTestCase . doMain ( hc_documentgetimplementation . class , args ) ; }
