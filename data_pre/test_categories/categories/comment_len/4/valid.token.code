4	public AdsDeleteCampaignsQuery deleteCampaigns ( UserActor actor , int accountId , String ids ) { return new AdsDeleteCampaignsQuery ( getClient ( ) , actor , accountId , ids ) ; }
27	public static void createMenus ( SLDEditorInterface application , List < ExtensionInterface > extensionList ) { if ( instance == _NULL ) { instance = new SLDEditorMenus ( application ) ; } instance . populate ( extensionList ) ; }
45	protected AdsCreateClientsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
72	public void createRemoteFolder ( ISVNRemoteFolder parent , String folderName , String message , IProgressMonitor monitor ) throws SVNException { parent . createRemoteFolder ( folderName , message , monitor ) ; }
80	public ImageOverlayOptions build ( ) { ImageOverlayOptions options = new ImageOverlayOptions ( ) ; options . opacity = this . opacity ; options . attribution = this . attribution ; return options ; }
85	@ Override public void characters ( char [ ] chars , int start , int length ) throws SAXException { elementText . append ( chars , start , length ) ; }
92	public static WxMaterialCountResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxMaterialCountResult . class ) ; }
117	@ Override public boolean accept ( File directory , String fileName ) { if ( fileName . startsWith ( _CHAR ! ! ! _CHAR ) ) return _BOOL ; if ( ! super . accept ( directory , fileName ) ) return _BOOL ; String firstLine = Basic . getFirstLineFromFile ( new File ( fileName ) ) ; return firstLine != _NULL && firstLine . startsWith ( _CHAR BLASTX _CHAR ) ; }
123	public static Map < String , Object > deleteParty ( DispatchContext ctx , Map < String , ? extends Object > context ) { Locale locale = ( Locale ) context . get ( _CHAR locale _CHAR ) ; return ServiceUtil . returnError ( UtilProperties . getMessage ( resourceError , _CHAR partyservices . cannot_delete_party_not_implemented _CHAR , locale ) ) ; }
129	public static HttpResponse execute ( HttpMethod method , String targetUrl , String body ) throws IOException , KeyStoreException , NoSuchAlgorithmException , CertificateException , KeyManagementException { return execute ( method , targetUrl , body , _NULL ) ; }
137	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
140	public void updateMatrixSearcher ( ) { updateCurrent ( ) ; }
155	@ Override public void onUIRefreshComplete ( PtrFrameLayout frame ) { mDrawable . stop ( ) ; }
156	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR close what = current ; _CHAR ) ; }
158	@ Override public void removeStroke ( Symbolizer symbolizer ) { if ( symbolizer instanceof LineSymbolizer ) { LineSymbolizer line = ( LineSymbolizer ) symbolizer ; if ( line != _NULL ) { line . setStroke ( _NULL ) ; } } }
172	public void unregisterProvider ( EnvironmentProvider provider ) { JmxConnectionSupportImpl . unregisterProviderImpl ( provider ) ; }
173	public void updateUnreadLabel ( ) { int count = getUnreadMsgCountTotal ( ) ; if ( count > _NUM ) { unreadLabel . setText ( String . valueOf ( count ) ) ; unreadLabel . setVisibility ( View . VISIBLE ) ; } else { unreadLabel . setVisibility ( View . INVISIBLE ) ; } }
175	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
178	public int code ( ) { return code ; }
201	public String message ( ) { return message ; }
221	public static void stopMentoring ( Player player ) { PlayerGroup group = player . getPlayerGroup2 ( ) ; if ( group != _NULL ) { group . onEvent ( new PlayerGroupStopMentoringEvent ( group , player ) ) ; } }
243	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set layout = _CHAR + AlignmentViewer . AlignmentLayout . Unsorted . toString ( ) + _CHAR ; zoom axis = both what = fit ; _CHAR ) ; }
260	public PagesGetQuery title ( String value ) { return unsafeParam ( _CHAR title _CHAR , value ) ; }
272	@ Override public Filter createFilter ( List < Expression > parameterList ) { return _NULL ; }
275	@ Override public void actionPerformed ( ActionEvent ev ) { String result = JOptionPane . showInputDialog ( getViewer ( ) . getFrame ( ) , _CHAR Enter name _CHAR , _CHAR Select Node _CHAR , JOptionPane . QUESTION_MESSAGE ) ; if ( result != _NULL ) execute ( _CHAR select name = _CHAR + result + _CHAR ; _CHAR ) ; }
309	public static void e ( String tag , String s , Throwable e ) { if ( LOG . ERROR >= LOGLEVEL ) Log . e ( tag , s , e ) ; }
328	public void nextGroup ( ) throws SAException { releaseScan ( ) ; return ; }
352	public void onFailure ( int statusCode , Header [ ] headers , Throwable throwable , JSONArray errorResponse ) { }
356	@ Override public boolean hasRaster ( Symbolizer symbolizer ) { return _BOOL ; }
392	public TransformProcess build ( ) { return new TransformProcess ( this ) ; }
395	public void error ( String message , Object ... params ) { diagCollector . addDiag ( Diag . error ( sourceLocation , message , params ) ) ; }
404	@ Bean public Auth0Client auth0Client ( ) { return new Auth0Client ( clientId , issuer ) ; }
441	public void addGlobalTypeDecl ( XSTypeDefinition decl ) { fGlobalTypeDecls . put ( decl . getName ( ) , decl ) ; if ( decl instanceof XSComplexTypeDecl ) { ( ( XSComplexTypeDecl ) decl ) . setNamespaceItem ( this ) ; } else if ( decl instanceof XSSimpleTypeDecl ) { ( ( XSSimpleTypeDecl ) decl ) . setNamespaceItem ( this ) ; } }
453	public Future execute ( CompletionCallback < Map < String , Object >> callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . tasks_ , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
470	public boolean gotoLast ( ) { current . set1 ( table . getGrid ( ) . getRowCount ( ) - _NUM ) ; current . set2 ( table . getGrid ( ) . getColumnCount ( ) - _NUM ) ; return isCurrentSet ( ) ; }
474	private static byte charToByte ( char c ) { return ( byte ) _CHAR _NUM _CHAR . indexOf ( c ) ; }
500	public void removeScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . remove ( listener ) ; }
537	public void onDirectoryDelete ( final File directory ) { }
550	private Point2D . Double create ( ) { final double abscissa = randomDataGenerator . nextUniform ( lo , hi ) ; final double yModel = slope * abscissa + intercept ; final double ordinate = yModel + randomDataGenerator . nextNormal ( _NUM , sigma ) ; return new Point2D . Double ( abscissa , ordinate ) ; }
583	public void resetLegionMember ( ) { setLegionMember ( _NULL ) ; }
586	protected PhotosCopyQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
602	public boolean isNOWriteLeaseMode ( ) { return m_NOWriteLeaseMode ; }
614	public < REG extends SRC > InterfaceAdapter < SRC , DST > register ( Adapter < REG , DST > adapter ) { adapters . add ( adapter ) ; adapterCache . clear ( ) ; return this ; }
632	private String prepareSlowConsumerCloseMsg ( SocketAddress address , int slowConsumerLatency ) { return _CHAR Closed slow consumer : _CHAR + address + _CHAR SlowConsumerRetries = _CHAR + _slowConsumerRetries + _CHAR SlowConsumerLatency = _CHAR + slowConsumerLatency ; }
662	@ Override public void close ( ) { try { if ( connection != _NULL ) { connection . close ( ) ; } } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
681	public void destroy ( ) { tokenizer = _NULL ; }
701	@ Override public void extendWithOperation ( JPAEdmSchemaView view ) { view . registerOperations ( CustomerProcessor . class , _NULL ) ; view . registerOperations ( SalesOrderProcessor . class , _NULL ) ; view . registerOperations ( CustomerReviewProcessor . class , _NULL ) ; }
708	public Iterator < T > iterator ( ) { return iterator ; }
713	private void createUI ( ) { setLayout ( new BorderLayout ( ) ) ; add ( createApplyRevertPanel ( ) , BorderLayout . CENTER ) ; }
719	@ Override public void flush ( ) throws IOException { super . flush ( ) ; this . branch . flush ( ) ; }
755	protected void initErrorReporter ( ) { if ( fErrorReporter == _NULL ) { fErrorReporter = new XMLErrorReporter ( ) ; } if ( fErrorHandler == _NULL ) { fErrorHandler = new XPointerErrorHandler ( ) ; } fErrorReporter . putMessageFormatter ( XPointerMessageFormatter . XPOINTER_DOMAIN , new XPointerMessageFormatter ( ) ) ; }
795	private void updatePropertyFile ( ) { GeoServerConnectionManager . getInstance ( ) . updateList ( connectionMap . keySet ( ) ) ; }
802	private static int compareInt ( final int a , final int b ) { int result = _NUM ; if ( a > b ) { result = _NUM ; } else if ( a < b ) { result =- _NUM ; } return result ; }
814	@ Override public void configure ( Map < String , ? > configs , boolean isKey ) { }
821	public int code ( ) { return code ; }
823	@ Override public void actionPerformed ( ActionEvent ev ) { }
837	public static boolean hasJellyBeanMr2 ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR2 ; }
906	public Builder withRationaleDialogMsg ( String rationaleMsg ) { buildObj . rationaleDialogMsg = rationaleMsg ; buildObj . showRationaleDialog = _BOOL ; return this ; }
907	public int code ( ) { return code ; }
911	@ Override public boolean accept ( File directory , String fileName ) { if ( ! super . accept ( directory , fileName ) ) return _BOOL ; String firstLine = Basic . getFirstLineFromFile ( new File ( fileName ) ) ; return firstLine != _NULL && firstLine . contains ( _CHAR Naive Bayesian rRNA Classifier _CHAR ) ; }
928	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set drawer = _CHAR + ViewerBase . DiagramType . RectangularPhylogram + _CHAR ; _CHAR ) ; }
930	@ Override public void applyDimensionBehaviour ( ) { wrapContent ( ) ; }
932	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( getSyntax ( ) ) ; }
966	@ Override public void createRaster ( Symbolizer symbolizer ) { }
990	private void captureImageWithPermission ( ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M ) { int rc = ActivityCompat . checkSelfPermission ( this , Manifest . permission . CAMERA ) ; if ( rc == PackageManager . PERMISSION_GRANTED ) { captureImage ( ) ; } else { Log . w ( TAG , _CHAR Camera permission is not granted . Requesting permission _CHAR ) ; requestCameraPermission ( ) ; } } else { captureImage ( ) ; } }
997	public void clear ( ) { fDepth = _NUM ; }
998	private void invalidShellCommand ( ) { Platform . runLater ( _NULL ) ; }
1010	public boolean castNeverFails ( Type src , Type dst ) { return typeManager . castNeverFails ( src , dst ) ; }
1011	public static String makeTag ( Class < ? > cls , @ IdRes int viewId ) { return cls . getName ( ) + _CHAR : _CHAR + viewId ; }
1053	private static void deleteRecursive ( CarbonFile f ) throws CarbonUtilException { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursive ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { throw new CarbonUtilException ( _CHAR Error while deleting the folders and files '' ) ; } }
1063	void disable ( ) { if ( isEnabled ( ) ) setRawCounter ( getToggledCounter ( mCounter ) ) ; }
1071	@ Override public void actionPerformed ( ActionEvent ev ) { }
1081	@ Override public void addMessage ( String message ) { textPane . setForeground ( Color . BLACK ) ; textPane . append ( message ) ; textPane . append ( _CHAR \ n _CHAR ) ; }
1092	public void removeChangingListener ( OnWheelChangedListener listener ) { changingListeners . remove ( listener ) ; }
1105	@ Override public boolean accept ( File directory , String fileName ) { if ( ! super . accept ( directory , fileName ) ) return _BOOL ; String firstLine = Basic . getFirstLineFromFile ( new File ( fileName ) ) ; return firstLine != _NULL && firstLine . startsWith ( _CHAR @ HD _CHAR ) ; }
1129	private String makeSAM ( String queryName , String refName , float bitScore , String line ) throws IOException { return String . format ( _CHAR % s \ t0 \ t % s \ t0 \ t255 \ t *\ t *\ t0 \ t0 \ t *\ t *\ tAS : i : % d \ t _CHAR , queryName , refName , Math . round ( bitScore ) ) + String . format ( _CHAR AL : Z : % s \ t _CHAR , Basic . replaceSpaces ( line , _CHAR ) ) ; }
1131	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set mode = _CHAR + ( Comparer . COMPARISON_MODE . RELATIVE ) + _CHAR ; _CHAR ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . getCommandManager ( ) . updateEnableState ( ) ; }
1137	private boolean isTestAnnotated ( SpringFixture fixture ) { return fixture != _NULL ; }
1143	@ Override public void actionPerformed ( ActionEvent ev ) { getViewer ( ) . selectComponent ( getViewer ( ) . getPcoaTab ( ) ) ; }
1170	@ Provides @ Singleton @ Global CuratorFramework provideCuratorFramework ( ZooKeeperConfiguration configuration , Environment environment ) { CuratorFramework curator = configuration . newManagedCurator ( environment . lifecycle ( ) ) ; curator . start ( ) ; return curator ; }
1190	protected Builder owningType ( final Type < ? > owningType ) { this . owningType = owningType ; return this ; }
1209	public boolean update ( long elapsedTime ) { this . frames ++ ; this . time += elapsedTime ; if ( this . time >= Fps . ONE_SECOND_IN_NANOSECONDS ) { synchronized ( this ) { this . fps = this . frames * Fps . ONE_SECOND_IN_NANOSECONDS / this . time ; } this . frames = _NUM ; this . time = _NUM ; return _BOOL ; } return _BOOL ; }
1235	public void write ( int a ) throws IOException { outs . write ( a ) ; position ++ ; }
1252	public static void e ( String tag , String s ) { if ( LOG . ERROR >= LOGLEVEL ) Log . e ( tag , s ) ; }
1269	public MessagesSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
1290	@ Override public void write ( int idx ) throws IOException { out . write ( idx ) ; }
1298	public static final void addAlliance ( League league , PlayerAlliance alliance ) { Preconditions . checkNotNull ( league , _CHAR League should not be _NULL _CHAR ) ; league . onEvent ( new LeagueEnteredEvent ( league , alliance ) ) ; }
1302	public void removeDragComponent ( ) { if ( myDragDropWidget != _NULL ) { myWidgetsScene . removeWidget ( myDragDropWidget ) ; myDragDropWidget = _NULL ; } }
1317	public int compareTo ( Object o ) { float thisValue = this . value ; float thatValue = ( ( FloatWritable ) o ) . value ; return ( thisValue < thatValue ? - _NUM : ( thisValue == thatValue ? _NUM : _NUM ) ) ; }
1322	public NewsfeedGetListsQuery listIds ( Integer ... value ) { return unsafeParam ( _CHAR list_ids _CHAR , value ) ; }
1357	public void actionPerformed ( ActionEvent ev ) { String fontName = ProgramProperties . get ( _CHAR Font _CHAR , _CHAR Arial - PLAIN - _NUM _CHAR ) ; fontName = JOptionPane . showInputDialog ( _CHAR Enter font _CHAR , fontName ) ; if ( fontName != _NULL ) { execute ( _CHAR set font = _CHAR_CHAR_CHAR ; _CHAR ) ; ProgramProperties . put ( _CHAR Font _CHAR , fontName ) ; } }
1368	@ Override public void processPacket ( INetHandler netHandler ) { channel . handle ( packet ) ; }
1371	public boolean isExtraCmd ( ) { return isExtraCmd ; }
1385	@ Override public void dataSourceLoaded ( GeometryTypeEnum geometryType , boolean isConnectedToDataSourceFlag ) { }
1392	public static String decryptString ( CipherTextIvMac civ , SecretKeys secretKeys ) throws UnsupportedEncodingException , GeneralSecurityException { return decryptString ( civ , secretKeys , _CHAR UTF - _NUM _CHAR ) ; }
1393	public static WxCurMenuInfoResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxCurMenuInfoResult . class ) ; }
1397	public static Bitmap drawableToBitmap ( Drawable drawable ) { return drawable == _NULL ? _NULL : ( ( BitmapDrawable ) drawable ) . getBitmap ( ) ; }
1398	public DistributedLogClientBuilder thriftmux ( boolean enabled ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setThriftMux ( enabled ) ; return newBuilder ; }
1463	private boolean okButtonPressed ( ) { return ok ; }
1532	@ Override public void actionPerformed ( ActionEvent ev ) { int taxId = ( ( MainViewer ) getViewer ( ) ) . getSelectedIds ( ) . iterator ( ) . next ( ) ; String command = _CHAR show histogram taxonId = _CHAR + taxId + _CHAR ; _CHAR ; execute ( command ) ; }
1568	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR zoom axis = horizontal what = in ; _CHAR ) ; }
1594	public void open ( ) { ScreenManager . setScreen ( this . inventoryScreen ) ; this . open = _BOOL ; }
1628	public static void i ( String tag , String s , Throwable e ) { if ( LOG . INFO >= LOGLEVEL ) Log . i ( tag , s , e ) ; }
1648	@ RequiresPermission ( Manifest . permission . WRITE_EXTERNAL_STORAGE ) public static boolean makeDirs ( String path ) { return makeDirs ( new File ( path ) ) ; }
1669	public static double sign ( double dNum ) { return dNum == _NUM . _NUM ? dNum : dNum / Math . abs ( dNum ) ; }
1719	public void actionPerformed ( ActionEvent ev ) { final SamplesViewer samplesViewer = ( ( SamplesViewer ) getViewer ( ) ) ; final Collection < String > samples = samplesViewer . getSamplesTable ( ) . getSelectedSamples ( ) ; if ( samples . size ( ) > _NUM ) execute ( _CHAR set nodeShape = diamond sample = _CHAR_CHAR_CHAR _CHAR_CHAR_CHAR ; _CHAR ) ; }
1759	public RevealBuilder withTranslateDuration ( final int translateDuration ) { this . mTranslateDuration = translateDuration ; return this ; }
1766	private void populateAllowedTypes ( Class < ? > key , Class < ? > [ ] allowedTypeArray ) { allowedTypeMap . put ( key , Arrays . asList ( allowedTypeArray ) ) ; }
1840	public static boolean refreshAccountsLastMac ( int accountId , String address ) { return getAccountDAO ( ) . updateLastMac ( accountId , address ) ; }
1843	final public void addCookie ( Cookie c ) { if ( c != _NULL ) { resp . addCookie ( c ) ; } }
1892	public void addClickingListener ( OnWheelClickedListener listener ) { clickingListeners . add ( listener ) ; }
2008	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR select series = all ; _CHAR ) ; }
2018	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR show findToolbar = _BOOL ; _CHAR ) ; }
2028	private String prepareSlowConsumerCloseMsg ( SocketAddress address ) { return _CHAR Closed slow consumer : _CHAR + address + _CHAR SlowConsumerThroughput = _CHAR + _slowConsumerThroughput + _CHAR SlowConsumerRetries = _CHAR + _slowConsumerRetries + _CHAR SlowConsumerLatency = _CHAR + _slowConsumerLatency ; }
2062	public PermissionCallOptions build ( ) { return buildObj ; }
2146	private Movie startMovieRequest ( String id ) throws InternetConnectionException { if ( isThereInternetConnection ( mContext ) ) { try { return mWebServicesApiCallsImpl . getMovieDetail ( id ) ; } catch ( RetrofitError e ) { throw new InternetConnectionException ( e . getMessage ( ) ) ; } } else { throw new InternetConnectionException ( mContext . getString ( R . string . internet_connection_error ) ) ; } }
2151	public void deactivate ( ) { mSpectaculumView . setOnTouchListener ( _NULL ) ; mSpectaculumView . setTouchEnabled ( mSpectaculumViewTouchEnabled ) ; mActive = _BOOL ; }
2163	@ Override protected void initData ( ) { }
2179	protected boolean isToolbarEnable ( ) { return _BOOL ; }
2180	public void enableLabels ( Collection < String > labels ) { disabledLabels . removeAll ( labels ) ; }
2187	public static int toShort ( byte first , byte second ) { return ( first << _NUM ) + ( second & _NUM ) ; }
2197	public static byte [ ] compressForZlib ( String stringToCompress ) { byte [ ] returnValues = _NULL ; try { returnValues = compressForZlib ( stringToCompress . getBytes ( _CHAR UTF - _NUM _CHAR ) ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return returnValues ; }
2249	public MarketAddQuery photoIds ( Integer ... value ) { return unsafeParam ( _CHAR photo_ids _CHAR , value ) ; }
2252	@ Override public void populateField ( String value ) { if ( externalGraphicPanel != _NULL ) { externalGraphicPanel . setValue ( value ) ; } }
2263	protected Object invokeRemote ( Object proxy , final IMethod method , Object [ ] args ) throws Throwable { ProxyInvocationHandler remoteInvocationHandler = getInvocationHandler ( ) ; return remoteInvocationHandler . invoke ( proxy , method , args ) ; }
2264	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set pc1 = _NUM pc2 = _NUM ; _CHAR ) ; }
2282	public static void close ( URLConnection conn ) { if ( conn instanceof HttpURLConnection ) { ( ( HttpURLConnection ) conn ) . disconnect ( ) ; } }
2297	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR FeatureTypeStyles . xml _CHAR ) ; }
2311	public synchronized void resetTime ( ) { timeOffset = line . getMicrosecondPosition ( ) ; }
2315	public NotesEditCommentQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
2320	public int start_production ( ) { return _NUM ; }
2323	public InterpolatingMicrosphere copy ( ) { return new InterpolatingMicrosphere ( this ) ; }
2354	public NewsfeedUnsubscribeQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
2361	public void submitJob ( SelfCancalableJob SelfCancalableJob ) { taskScheduler . schedule ( SelfCancalableJob , SelfCancalableJob ) ; }
2372	@ Override public String toString ( ) { return getMessage ( ) ; }
2380	@ PickTriggerResult public int fromGallery ( ) { return this . triggerPick ( this . prepareGalleryIntent ( ) , QiPick . REQ_GALLERY ) ; }
2440	public EntryInfo __getEntryInfo ( ) { return entryInfo ; }
2446	public static Role loadById ( long id ) { return Helper . load ( id , Role . class ) ; }
2466	public void removePanel ( BasePanel panel ) { if ( ( panel != _NULL ) && ( padding != _NULL ) ) { padding . removePadding ( ) ; box . remove ( panel . box ) ; padding . addPadding ( ) ; } }
2507	public void callHandler ( String handlerName , String data , CallBackFunction callBack ) { doSend ( handlerName , data , callBack ) ; }
2551	public NotesCreateCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
2579	public Clock startClock ( ) { this . start ( ) ; return this ; }
2590	public MarketSearchQuery tags ( List < Integer > value ) { return unsafeParam ( _CHAR tags _CHAR , value ) ; }
2591	private static byte charToByte ( char c ) { return ( byte ) _CHAR _NUM _CHAR . indexOf ( c ) ; }
2604	private void unknownPacket ( State state , int id , ByteBuffer data ) { if ( NetworkConfig . DISPLAY_UNKNOWNPACKETS ) { log . warn ( String . format ( _CHAR Unknown packet received from Aion client : _NUM % _NUM , state = % s % n % s _CHAR , id , state . toString ( ) , Util . toHex ( data ) ) ) ; } }
2605	public static void showLogin ( android . support . v4 . app . Fragment fragment , int requestCode ) { Intent intent = new Intent ( fragment . getContext ( ) , LoginActivity . class ) ; fragment . startActivityForResult ( intent , requestCode ) ; }
2618	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set networkdata = _CHAR + ClassificationType . SEED + _CHAR ; _CHAR ) ; }
2627	public static boolean isSdcardExist ( ) { if ( android . os . Environment . getExternalStorageState ( ) . equals ( android . os . Environment . MEDIA_MOUNTED ) ) return _BOOL ; else return _BOOL ; }
2638	public void parse ( XMLInputSource inputSource ) throws IOException { config . parse ( inputSource ) ; }
2667	public Future execute ( Object seed , CompletionCallback callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . tasks_ , seed , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
2685	public void onNetConnected ( NetUtils . NetType type ) { }
2704	public NotesDeleteCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
2716	@ Override public boolean accept ( File directory , String fileName ) { if ( fileName . startsWith ( _CHAR ! ! ! _CHAR ) ) return _BOOL ; if ( ! super . accept ( directory , fileName ) ) return _BOOL ; String firstLine = Basic . getFirstLineFromFile ( new File ( fileName ) ) ; return firstLine != _NULL && firstLine . startsWith ( _CHAR BLASTP _CHAR ) ; }
2725	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set pc1 = _NUM pc2 = _NUM ; _CHAR ) ; }
2776	static void debug ( String s ) { if ( DEBUG ) { System . out . println ( _CHAR cludebug : _CHAR + s ) ; } }
2779	public static String toString ( Object [ ] objects , String tag ) { StringBuilder sb = new StringBuilder ( ) ; for ( Object object : objects ) { sb . append ( object ) ; sb . append ( tag ) ; } return sb . toString ( ) ; }
2859	public UsersSearchQuery birthDay ( Integer value ) { return unsafeParam ( _CHAR birth_day _CHAR , value ) ; }
2861	public UrlSpaceConfigurer leaderSelector ( LeaderSelectorConfig leaderSelectorConfig ) { validate ( ) ; urlSpaceFactoryBean . leaderSelector ( leaderSelectorConfig ) ; return this ; }
2890	@ Override public void dataSourceLoaded ( GeometryTypeEnum geometryType , boolean isConnectedToDataSourceFlag ) { this . geometryType = geometryType ; if ( dataLoaded ) { dataLoaded = _BOOL ; } renderSymbol ( ) ; }
2903	public static void main ( String [ ] args ) { WKTDialog dlg = new WKTDialog ( ) ; dlg . setDefaultCloseOperation ( DISPOSE_ON_CLOSE ) ; String wktString = _CHAR _CHAR ; dlg . showDialog ( wktString ) ; }
2921	public ObjectName preRegister ( MBeanServer mbs , ObjectName objName ) throws Exception { m_mbeanServer = mbs ; return objName ; }
2952	public SimpleBooleanProperty repeatProperty ( ) { return this . repeat ; }
2996	private void drawMovieFrame ( Canvas canvas ) { mMovie . setTime ( mCurrentAnimationTime ) ; canvas . save ( Canvas . MATRIX_SAVE_FLAG ) ; canvas . scale ( mScale , mScale ) ; mMovie . draw ( canvas , mLeft / mScale , mTop / mScale ) ; canvas . restore ( ) ; }
3029	@ Override public void removeRaster ( Symbolizer symbolizer ) { }
3039	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
3046	public WallSearchQueryWithExtended query ( String value ) { return unsafeParam ( _CHAR query _CHAR , value ) ; }
3055	private int findOptionPanel ( Box box , FieldPanel panel ) { int index ; for ( index = _NUM ; index < box . getComponentCount ( ) ; index ++ ) { if ( box . getComponent ( index ) == panel ) { return index ; } } return - _NUM ; }
3060	public synchronized ZooKeeperClientBuilder uri ( URI uri ) { this . zkServers = DLUtils . getZKServersFromDLUri ( uri ) ; return this ; }
3065	public static void main ( String [ ] args ) { CharMap4 charMap4 = new CharMap4 ( ) ; charMap4 . loadConfig ( ) ; charMap4 . setTTFString ( _CHAR ttf : // Symbol # 221 '' ) ; charMap4 . showDialog ( ) ; }
3075	public void expand ( DefaultMutableTreeNode v ) { if ( v == _NULL ) v = this . root ; for ( Enumeration descendants = v . breadthFirstEnumeration ( ) ; descendants . hasMoreElements ( ) ; ) { v = ( DefaultMutableTreeNode ) descendants . nextElement ( ) ; this . tree . expandPath ( new TreePath ( v . getPath ( ) ) ) ; } }
3083	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set showGroups = _CHAR + ( ! isSelected ( ) ) + _CHAR style = ellipses ; _CHAR ) ; }
3086	public WallSearchQuery query ( String value ) { return unsafeParam ( _CHAR query _CHAR , value ) ; }
3136	public void saveLegendImage ( BufferedImage image , String extension , File fileToSave ) { try { saveGridImage ( image , extension , fileToSave , legendOptionData . getDpi ( ) ) ; } catch ( IOException e ) { ConsoleManager . getInstance ( ) . exception ( this , e ) ; } }
3178	@ Override public void actionPerformed ( ActionEvent ev ) { getViewer ( ) . selectComponent ( getViewer ( ) . getMatrixTab ( ) ) ; }
3184	public WidgetsGetCommentsQuery widgetApiId ( Integer value ) { return unsafeParam ( _CHAR widget_api_id _CHAR , value ) ; }
3188	public void add ( long value ) { metric . add ( value ) ; }
3194	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
3208	private void createUI ( ) { readConfigFileNoScrollPane ( _NULL , this , _CHAR symboltype / TTFSymbol . xml _CHAR ) ; registerForTextFieldButton ( FieldIdEnum . TTF_SYMBOL , this ) ; }
3223	public synchronized void addRoute ( String to , String via ) { if ( routeExists ( to , via ) ) { return ; } addForwardEntry ( to , via ) ; inverseTable . add ( via , to ) ; }
3225	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set showAminoAcids = _BOOL ; _CHAR ) ; }
3249	public void removeChangingListener ( OnWheelChangedListener listener ) { changingListeners . remove ( listener ) ; }
3253	public boolean gotoFirst ( ) { current . set1 ( _NUM ) ; current . set2 ( _NUM ) ; return isCurrentSet ( ) ; }
3301	public WallGetCommentsQueryWithExtended startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
3302	private T fraction ( final Field < T > field , final double p , final double q ) { return field . getZero ( ) . add ( p ) . divide ( q ) ; }
3305	private void registerRenderers ( ) { logger . info ( _CHAR Renderers supported : _CHAR ) ; addRenderer ( new SimpleRenderer ( ) ) ; addRenderer ( new UniqueValueRenderer ( ) ) ; }
3322	@ Override protected void synchronizeData ( ) { needsSyncData ( _BOOL ) ; DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) this . ownerDocument ( ) ; target = ownerDocument . getNodeName ( fNodeIndex ) ; data = ownerDocument . getNodeValueString ( fNodeIndex ) ; }
3339	public static WxBatchGetMaterialResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxBatchGetMaterialResult . class ) ; }
3367	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR deselect series = all ; _CHAR ) ; }
3383	private void createUI ( ) { panel = new JPanel ( ) ; panel . setLayout ( _NULL ) ; createField ( FIELD_DATABASE , Localisation . getField ( DataSourceConnectorFileGDB . class , _CHAR DataSourceConnectorFileGDB . database _CHAR ) ) ; panel . setPreferredSize ( new Dimension ( FIELD_X + FIELD_WIDTH , textFieldMap . size ( ) * ROW_HEIGHT ) ) ; }
3405	public boolean hasFill ( Symbolizer symbolizer ) { boolean result = _BOOL ; if ( symbolizer != _NULL ) { SLDTreeLeafInterface obj = map . get ( symbolizer . getClass ( ) ) ; if ( obj != _NULL ) { result = obj . hasFill ( symbolizer ) ; } } return result ; }
3413	public static void sendEvent ( final ReactContext context , final String eventName , final WritableMap params ) { if ( context . hasActiveCatalystInstance ( ) ) { context . getJSModule ( DeviceEventManagerModule . RCTDeviceEventEmitter . class ) . emit ( eventName , params ) ; } else { Log . d ( TAG , _CHAR Waiting for CatalystInstance before sending event '' ) ; } }
3428	private float dp2px ( float dp ) { return TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dp , getResources ( ) . getDisplayMetrics ( ) ) ; }
3434	public static double randomStep ( ) { Random random = new Random ( ) ; return random . nextDouble ( ) / _NUM . _NUM ; }
3452	public static int toInt ( Object obj ) { try { return Integer . parseInt ( obj . toString ( ) ) ; } catch ( Exception e ) { return - _NUM ; } }
3458	private void init ( ) { LOGGER . debug ( _CHAR Initializing TestBase _CHAR ) ; TestBase . pingSuccess = _BOOL ; }
3466	@ Override public void flush ( ) throws IOException { out . flush ( ) ; }
3477	@ Override public void createMenus ( JMenu mnTools ) { }
3481	private void removeTestData ( ) { dataTagLogMapper . deleteDataTagLog ( ID ) ; }
3492	public VideoEditQuery desc ( String value ) { return unsafeParam ( _CHAR desc _CHAR , value ) ; }
3495	public static void close ( ) { out . close ( ) ; }
3500	@ Override public boolean equals ( Object o ) { return o instanceof AirMapAircraft && getAircraftId ( ) . equals ( ( ( AirMapAircraft ) o ) . getAircraftId ( ) ) ; }
3546	public String toString ( ) { return format ; }
3554	public static void onPlayerLogout ( Player player ) { ChatServer . getInstance ( ) . sendPlayerLogout ( player ) ; }
3577	public int start_state ( ) { return _NUM ; }
3612	@ Override public int hashCode ( ) { int code = fName . hashCode ( ) ; if ( fTargetNamespace != _NULL ) code = ( code << _NUM ) + fTargetNamespace . hashCode ( ) ; return code ; }
3626	public boolean isSomeSampleColored ( ) { for ( String sample : getSampleOrder ( ) ) { if ( get ( sample , HiddenAttribute . Color ) != _NULL ) return _BOOL ; } return _BOOL ; }
3628	public void register ( String key , ItemStack ... values ) { for ( ItemStack value : values ) { register ( key , value ) ; } }
3663	public boolean gotoNext ( ) { if ( currentIterator == _NULL ) { gotoFirst ( ) ; } else if ( currentIterator . hasNext ( ) ) currentId = currentIterator . next ( ) ; else { currentIterator = _NULL ; currentId = _NULL ; } return isCurrentSet ( ) ; }
3673	public void dump ( ) { }
3688	@ SuppressWarnings ( _CHAR unused _CHAR ) public void addSlide ( SlideFragment slideFragment ) { adapter . addItem ( slideFragment ) ; }
3690	public static void addSetting ( String id , Object o ) { settings . put ( id , o ) ; }
3691	public boolean hasData ( ) { return ( dataStore != _NULL ) || ( gridCoverageReader != _NULL ) ; }
3695	@ Override public void elementDecl ( String name , String contentModel , Augmentations augs ) throws XNIException { try { if ( fDeclHandler != _NULL ) { fDeclHandler . elementDecl ( name , contentModel ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
3743	public void expand ( DefaultMutableTreeNode v ) { if ( v == _NULL ) v = ( DefaultMutableTreeNode ) fileTree . getModel ( ) . getRoot ( ) ; for ( Enumeration descendants = v . breadthFirstEnumeration ( ) ; descendants . hasMoreElements ( ) ; ) { v = ( DefaultMutableTreeNode ) descendants . nextElement ( ) ; fileTree . expandPath ( new TreePath ( v . getPath ( ) ) ) ; } }
3754	protected void startRecoarding ( ) { coordinates . clear ( ) ; enabled = _BOOL ; }
3759	void clearSelection ( ) { ContentViewCore baseContentView = getBaseContentView ( ) ; if ( baseContentView != _NULL ) { baseContentView . clearSelection ( ) ; } resetAllStates ( ) ; }
3781	public void removeRole ( long rid ) { Helper . delete ( W . create ( _CHAR uid _CHAR , this . getId ( ) ) . and ( _CHAR rid _CHAR , rid ) , UserRole . class ) ; }
3817	public MarketAddAlbumQuery photoId ( Integer value ) { return unsafeParam ( _CHAR photo_id _CHAR , value ) ; }
3828	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
3834	private void cancelDuelRequest ( Player owner , Player target ) { log . debug ( _CHAR [ Duel ] Player _CHAR + owner . getName ( ) + _CHAR cancelled his duel request with _CHAR + target . getName ( ) ) ; PacketSendUtility . sendPacket ( target , new SM_DUEL_REQUEST_CANCEL ( _NUM , owner . getName ( ) ) ) ; PacketSendUtility . sendPacket ( owner , SM_SYSTEM_MESSAGE . STR_DUEL_WITHDRAW_REQUEST ( target . getName ( ) ) ) ; }
3862	public boolean add ( Node n ) { int num = n . getNumber ( ) ; if ( ! get ( num ) ) { set ( num ) ; return _BOOL ; } else return _BOOL ; }
3877	public static Circle circle ( Point center , double radius ) { return new CircleImpl ( center . getX ( ) , center . getY ( ) , radius ) ; }
3889	@ Override public Filter createFilter ( ) { return new IsBetweenExtended ( ) ; }
3911	@ Override protected void synchronizeChildren ( ) { needsSyncChildren ( _BOOL ) ; isReadOnly ( _BOOL ) ; DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) ownerDocument ( ) ; ownerDocument . synchronizeChildren ( this , fNodeIndex ) ; setReadOnly ( _BOOL , _BOOL ) ; }
3915	public boolean isUptoDate ( ) { return uptodate ; }
3927	public void clear ( ) { this . bodies . clear ( ) ; this . joints . clear ( ) ; this . contactConstraints . clear ( ) ; }
3975	public static int sp2px ( Context context , float spValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( spValue * scale + _NUM . _NUM ) ; }
3980	public void pause ( ) { }
3987	private Var addProperty ( VarProperty property ) { if ( property . isUnique ( ) ) { testUniqueProperty ( ( UniqueVarProperty ) property ) ; } properties . add ( property ) ; return this ; }
4014	protected void dispose ( Object obj ) { if ( obj instanceof PoolableThread ) { PoolableThread thread = ( PoolableThread ) obj ; thread . cleanStop ( ) ; } }
4033	public WyporiumTradeCursor queryWyporiumTrades ( ) { return mHelper . queryWyporiumTrades ( ) ; }
4077	public Value nullIfExpression ( Value val1 , Value val2 ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
4081	public int next ( ) { if ( hasNext ( ) ) { currentMatches = nextMatches ; nextMatches = _NULL ; return currentMatches . getNumberOfMatches ( ) ; } return - _NUM ; }
4091	protected AdsGetAdsTargetingQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
4130	public @ Nullable ImageCursor fetch ( ) { return fetch ( SortOrder . UNSPECIFIED ) ; }
4150	public void addChangingListener ( OnWheelChangedListener listener ) { changingListeners . add ( listener ) ; }
4187	public static void removeAllTrafficListeners ( ) { getAirMapTrafficService ( ) . removeAllListeners ( ) ; }
4238	public void clearAllBits ( ) { for ( int i = _NUM ; i < types . size ( ) * locals . size ( ) ; i ++ ) { clear ( i ) ; } }
4240	public void update ( GeoServerConnection existingItem ) { this . connectionName = existingItem . connectionName ; this . url = existingItem . url ; this . userName = existingItem . userName ; this . password = existingItem . password ; }
4292	@ Override public void accept ( IQueryExecutor executor , ISpaceProxy space , Transaction txn , int readModifier , int max ) throws SQLException { executor . execute ( this , space , txn , readModifier , max ) ; }
4313	@ Override public void clear ( ) { synchronized ( fGrammarPool ) { fGrammarPool . clear ( ) ; } }
4315	public Matrix solve ( Matrix B ) { return ( m == n ? ( new LUDecomposition ( this ) ) . solve ( B ) : ( new QRDecomposition ( this ) ) . solve ( B ) ) ; }
4318	public void jGoogleAnalyticsTracker ( final String eventType , final String version , final String trackerId ) { final JGoogleAnalyticsTracker tracker = new JGoogleAnalyticsTracker ( _CHAR vdi_calculator _CHAR , version , trackerId ) ; final FocusPoint focusPoint = new FocusPoint ( eventType . toLowerCase ( ) ) ; tracker . trackAsynchronously ( focusPoint ) ; }
4321	public void reload ( ) { if ( delays != _NULL && delays . size ( ) > _NUM ) { for ( Future < ? > delay : delays ) { delay . cancel ( _BOOL ) ; } } announcements . clear ( ) ; load ( ) ; }
4328	@ Override public void onPreferenceSettingsChanged ( SharedPreferences sharedPreferences , String name ) { Toast . makeText ( this , _CHAR preference with key _CHAR + name + _CHAR changed _CHAR , Toast . LENGTH_LONG ) . show ( ) ; }
4354	public void actionPerformed ( ActionEvent ev ) { final Object choice = JOptionPane . showInputDialog ( getViewer ( ) . getFrame ( ) , _CHAR Choose node shape _CHAR , _CHAR MEGAN - Choose _CHAR , JOptionPane . QUESTION_MESSAGE , ProgramProperties . getProgramIcon ( ) , SHAPES , SHAPES [ _NUM ] ) ; if ( choice != _NULL ) execute ( _CHAR set nodeShape = _CHAR + choice . toString ( ) + _CHAR ; _CHAR ) ; }
4368	private void checkDimension ( final int expected , final Object array ) throws MathIllegalArgumentException { int arrayDimension = ( array == _NULL ) ? _NUM : Array . getLength ( array ) ; if ( arrayDimension != expected ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH , arrayDimension , expected ) ; } }
4369	public void addChangingListener ( OnWheelChangedListener listener ) { changingListeners . add ( listener ) ; }
4378	public void showOverlapGraph ( Director dir , ProgressListener progress ) throws CanceledException { final OverlapGraphViewer overlapGraphViewer = new OverlapGraphViewer ( dir , overlapGraph , node2ReadNameMap , paths ) ; overlapGraphViewer . apply ( progress ) ; }
4383	public static void init ( ) { Locale _locale = locale ; if ( _locale == _NULL ) { _locale = Locale . getDefault ( ) ; } domResourceBundle = ResourceBundle . getBundle ( _CHAR mf . org . apache . xerces . impl . msg . DOMMessages _CHAR , _locale ) ; serResourceBundle = ResourceBundle . getBundle ( _CHAR mf . org . apache . xerces . impl . msg . XMLSerializerMessages _CHAR , _locale ) ; xmlResourceBundle = ResourceBundle . getBundle ( _CHAR mf . org . apache . xerces . impl . msg . XMLMessages _CHAR , _locale ) ; }
4404	public void resetTracking ( ) { totalTime = _NUM ; drawCycles = _NUM ; }
4419	private Bitmap addThumbnailToCache ( String imageKey , Bitmap bitmap , String path , int px ) { Bitmap thumbnail = ThumbnailUtils . extractThumbnail ( bitmap , px , px ) ; thumbnail = BitmapUtils . rotateImage ( thumbnail , path ) ; addBitmapToCache ( imageKey , thumbnail ) ; return thumbnail ; }
4427	@ Override public void chooseNewSLD ( ) { NewSLDPanel panel = new NewSLDPanel ( ) ; List < SLDDataInterface > newSLDList = panel . showDialog ( Controller . getInstance ( ) . getFrame ( ) ) ; if ( newSLDList != _NULL ) { if ( this . loadSLDString ( _BOOL , _BOOL , newSLDList ) ) { uiMgr . populateUI ( _NUM ) ; } } }
4466	private void photoGalleryIntent ( ) { Intent intent = new Intent ( ) ; intent . setType ( _CHAR image /* '' ) ; intent . setAction ( Intent . ACTION_GET_CONTENT ) ; startActivityForResult ( Intent . createChooser ( intent , getString ( R . string . select_picture_title ) ) , IMAGE_GALLERY_REQUEST ) ; }
4486	public void close ( ) throws IOException { randomAccessFile . close ( ) ; }
4499	public static WxUserGroupResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxUserGroupResult . class ) ; }
4500	@ Override public void actionPerformed ( ActionEvent ev ) { getViewer ( ) . selectComponent ( getViewer ( ) . getNnetTab ( ) ) ; }
4522	private String makeSAM ( String queryName , String refName , float bitScore , String line ) throws IOException { return String . format ( _CHAR % s \ t0 \ t % s \ t0 \ t255 \ t *\ t *\ t0 \ t0 \ t *\ t *\ tAS : i : % d \ t _CHAR , queryName , refName , Math . round ( bitScore ) ) + String . format ( _CHAR AL : Z : % s \ t _CHAR , Basic . replaceSpaces ( line , _CHAR ) ) ; }
4546	public MarketEditQuery photoIds ( List < Integer > value ) { return unsafeParam ( _CHAR photo_ids _CHAR , value ) ; }
4547	@ Override public long addLoginHistory ( LoginHistory loginHistory ) { return sessionTemplate . insert ( NAMESPACE + _CHAR . addLoginHistory _CHAR , loginHistory ) ; }
4548	public boolean isGuideline ( ) { return mConstraintWidget instanceof Guideline ; }
4595	public void addNearbyPokemons ( Collection < NearbyPokemon > nearbyPokemons ) { if ( nearbyPokemons == _NULL || nearbyPokemons . isEmpty ( ) ) { return ; } complete = _BOOL ; this . nearbyPokemons . addAll ( nearbyPokemons ) ; }
4628	public boolean isEmpty ( ) { return dataMap . isEmpty ( ) ; }
4632	public static void stopWavFile ( ) { m_clip . stop ( ) ; m_clip . flush ( ) ; m_clip . close ( ) ; }
4644	@ Override public boolean shouldSkipClass ( Class < ? > aClass ) { return _BOOL ; }
4725	public String toString ( ) { return image ; }
4734	private void lockIds ( int ... ids ) { try { lock . lock ( ) ; for ( int id : ids ) { boolean status = idList . get ( id ) ; if ( status ) { throw new IDFactoryError ( _CHAR ID _CHAR + id + _CHAR is already taken , fatal error ! ! ! _CHAR ) ; } idList . set ( id ) ; } } finally { lock . unlock ( ) ; } }
4743	public void despawnObjects ( boolean remove ) { for ( HouseObject < ? > obj : getSpawnedObjects ( ) ) { if ( obj . isInWorld ( ) ) { obj . getController ( ) . onDelete ( ) ; obj . clearKnownlist ( ) ; } if ( remove ) { obj . removeFromHouse ( ) ; } } if ( remove ) { setPersistentState ( PersistentState . UPDATE_REQUIRED ) ; save ( ) ; } }
4769	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set flipV = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
4788	public void stopAnimate ( ) { isPlaying = _BOOL ; mLoopAnimateY = _NUM ; invalidate ( ) ; }
4801	protected AdsCreateCampaignsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
4818	public String toString ( ) { return format ; }
4822	private void unknownPacket ( State state , int id ) { log . warn ( String . format ( _CHAR Unknown packet recived from Login Server : _NUM % _NUM state = % s _CHAR , id , state . toString ( ) ) ) ; }
4870	@ Override public void attributeDecl ( String elementName , String attributeName , String type , String [ ] enumeration , String defaultType , XMLString defaultValue , XMLString nonNormalizedDefaultValue , Augmentations augs ) throws XNIException { }
4899	public boolean isTrivial ( ) { return getA ( ) . size ( ) == _NUM || getB ( ) . size ( ) == _NUM ; }
4908	public static void i ( String tag , String s ) { if ( LOG . INFO >= LOGLEVEL ) Log . i ( tag , s ) ; }
4915	@ Override public Filter createFilter ( ) { return new OrExtended ( ) ; }
4922	public GroupsEditQuery marketCurrency ( GroupsEditMarketCurrency value ) { return unsafeParam ( _CHAR market_currency _CHAR , value ) ; }
4944	public Builder controller ( LogController val ) { controller = val ; return this ; }
4996	public static int expForDefence ( Creature attacker , Creature defenced ) { float attackerCost = getTotalCost ( attacker ) ; float defencedCost = getTotalCost ( defenced ) ; return result ( ln ( attackerCost / _NUM . _NUM - defencedCost * _NUM . _NUM ) ) ; }
5016	public Matrix solve ( Matrix B ) { return ( m == n ? ( new LUDecomposition ( this ) ) . solve ( B ) : ( new QRDecomposition ( this ) ) . solve ( B ) ) ; }
5032	private void updateButtonState ( ) { btnRemoveField . setEnabled ( table . getSelectedRowCount ( ) > _NUM ) ; btnApply . setEnabled ( dataChanged ) ; btnCancel . setEnabled ( dataChanged ) ; }
5040	public void unregisterCategory ( SnapshotCategory category ) { categories . remove ( category ) ; fireCategoryUnregistered ( category ) ; }
5073	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( getSyntax ( ) ) ; }
5074	public static void close ( @ Nullable Closeable closeable ) { if ( _NULL == closeable ) { return ; } try { Closeables . close ( closeable , _BOOL ) ; } catch ( IOException e ) { } }
5089	public void run ( IRunnableWithProgress runnable , IProgressMonitor monitor ) throws InvocationTargetException , InterruptedException { runnable . run ( monitor ) ; }
5122	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set useLCA = _CHAR + ( ! isSelected ( ) ) + _CHAR cName = _CHAR + cName + _CHAR ; _CHAR ) ; }
5124	public static int toPx ( float dpValue ) { Resources resources = Resources . getSystem ( ) ; float px = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dpValue , resources . getDisplayMetrics ( ) ) ; return ( int ) px ; }
5148	public int compareTo ( Object o ) { int thisValue = this . value ; int thatValue = ( ( IntWritable ) o ) . value ; return ( thisValue < thatValue ? - _NUM : ( thisValue == thatValue ? _NUM : _NUM ) ) ; }
5156	public boolean isUptoDate ( ) { return uptodate ; }
5165	protected void populateStandardData ( Rule rule ) { StandardData standardData = new StandardData ( ) ; if ( rule != _NULL ) { standardData . name = rule . getName ( ) ; standardData . description = ( Description ) rule . getDescription ( ) ; } populateStandardData ( standardData ) ; }
5172	@ Override public void warning ( SAXParseException e ) throws SAXException { }
5184	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
5187	public void addListener ( LegendOptionDataUpdateInterface listener ) { if ( listener != _NULL ) { listenerList . add ( listener ) ; } }
5188	@ Override public boolean accept ( File dir , String name ) { if ( filenameFilter != _NULL ) { return filenameFilter . accept ( dir , name ) ; } else { return super . accept ( dir , name ) ; } }
5224	public void doWork ( ) throws InterruptedException { Thread . sleep ( _NUM ) ; }
5249	public Future execute ( CompletionCallback callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . tasks_ , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
5251	private void destroyPeekPromoControl ( ) { if ( mPeekPromoControl != _NULL ) { mPeekPromoControl . destroy ( ) ; mPeekPromoControl = _NULL ; } }
5274	@ Override public void removeFill ( Symbolizer symbolizer ) { }
5294	private boolean storeNewAnnouncement ( int legionId , Timestamp currentTime , String message ) { return DAOManager . getDAO ( LegionDAO . class ) . saveNewAnnouncement ( legionId , currentTime , message ) ; }
5305	public void shutdown ( ) { super . dispose ( ) ; if ( commandColor != _NULL ) commandColor . dispose ( ) ; if ( messageColor != _NULL ) messageColor . dispose ( ) ; if ( errorColor != _NULL ) errorColor . dispose ( ) ; SVNUIPlugin . getPlugin ( ) . getPreferenceStore ( ) . removePropertyChangeListener ( this ) ; }
5317	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR Polygon . xml _CHAR ) ; }
5366	private void pack ( ) { for ( int i = _NUM ; i < ptm . getColumnCount ( ) ; i ++ ) { JTableColumnPacker . packColumn ( this , i , COLUMN_MARGIN ) ; } }
5413	public void saveMappingToFile ( String fileName ) throws IOException { System . err . println ( _CHAR Writing name2id map to file : _CHAR + fileName ) ; try ( Writer w = new FileWriter ( fileName ) ) { writeMapping ( w ) ; } System . err . println ( _CHAR Done ( _CHAR + id2name . size ( ) + _CHAR entries ) _CHAR ) ; }
5436	protected String encode ( Object obj ) throws EncodeException { try { return mapper . writeValueAsString ( obj ) ; } catch ( Exception e ) { throw new EncodeException ( _CHAR Failed to encode as JSON : _CHAR + e . getMessage ( ) ) ; } }
5453	Stream < Concept > insertAll ( ) { return insertAll ( new HashMap < > ( ) ) ; }
5472	public void addMatcher ( XPathMatcher matcher ) { ensureMatcherCapacity ( ) ; fMatchers [ fMatchersCount ++ ] = matcher ; }
5533	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set showTriPlot = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
5548	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCacheManager . newFile ( key ) ) ; }
5550	public synchronized ZooKeeperClientBuilder name ( String name ) { this . name = name ; return this ; }
5575	public void activate ( ) { mSpectaculumView . setOnTouchListener ( mOnTouchListener ) ; mSpectaculumViewTouchEnabled = mSpectaculumView . isTouchEnabled ( ) ; mSpectaculumView . setTouchEnabled ( _BOOL ) ; mActive = _BOOL ; }
5585	public static WxNewsMediaResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxNewsMediaResult . class ) ; }
5607	@ Override public Filter createFilter ( ) { return new TOverlapsExtended ( ) ; }
5621	public void addInstance ( int instanceId , WorldMapInstance instance ) { if ( instanceId == _NUM ) { instanceId = _NUM ; } instances . put ( instanceId , instance ) ; }
5627	public Future execute ( Collection < T > coll , CompletionCallback callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . task_ , coll , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
5633	public void removeClickingListener ( OnWheelClickedListener listener ) { clickingListeners . remove ( listener ) ; }
5646	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR Point . xml _CHAR ) ; }
5655	public static void showInternalError ( Object parentIgnored , String message ) { showNotification ( title , _CHAR Internal error : _CHAR + message , Mode . error , Pos . BOTTOM_LEFT , _NUM ) ; }
5672	public MarketReorderAlbumsQuery reorderAlbums ( UserActor actor , int ownerId , int albumId ) { return new MarketReorderAlbumsQuery ( getClient ( ) , actor , ownerId , albumId ) ; }
5719	protected void drawXAxis ( Graphics2D gc ) { }
5733	@ Override public int hashCode ( ) { return _hashCode ; }
5738	@ Override public SparseGradient log10 ( ) { return new SparseGradient ( FastMath . log10 ( value ) , _NUM . _NUM / ( FastMath . log ( _NUM . _NUM ) * value ) , derivatives ) ; }
5762	public static Router create ( Uri uri ) { return new Router ( uri ) ; }
5768	public IDataProcessStatus makeCopy ( ) { IDataProcessStatus copy = new DataProcessTaskStatus ( ) ; copy . setTableName ( this . tableName ) ; copy . setDataloadstatusid ( this . dataloadstatusid ) ; copy . setDesc ( this . desc ) ; copy . setKey ( this . key ) ; copy . setDatabaseName ( databaseName ) ; copy . setStatus ( status ) ; return copy ; }
5788	protected AdsGetAdsLayoutQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
5799	private void readPropertyFile ( ) { List < GeoServerConnection > connectionList = GeoServerConnectionManager . getInstance ( ) . getConnectionList ( ) ; for ( GeoServerConnection connection : connectionList ) { connectionMap . put ( connection , createGeoServerClient ( connection ) ) ; } }
5810	private void addRenderer ( EsriRendererInterface rendererObj ) { logger . info ( _CHAR \ t _CHAR + rendererObj . getName ( ) ) ; rendererMap . put ( rendererObj . getName ( ) , rendererObj ) ; }
5821	public AccountSaveProfileInfoQuery relation ( AccountSaveProfileInfoRelation value ) { return unsafeParam ( _CHAR relation _CHAR , value ) ; }
5832	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
5854	@ Override public Expression createExpression ( FunctionName functionName ) { if ( functionName == _NULL ) { return _NULL ; } List < Expression > parameters = _NULL ; Literal fallback = _NULL ; Function function = functionFactory . function ( functionName . getFunctionName ( ) , parameters , fallback ) ; return function ; }
5886	public static double sign ( double dNum ) { return dNum == _NUM . _NUM ? dNum : dNum / Math . abs ( dNum ) ; }
5910	private void createUI ( ) { setLayout ( new BorderLayout ( ) ) ; box = Box . createVerticalBox ( ) ; add ( box , BorderLayout . CENTER ) ; setUpLiteralPanel ( ) ; setUpPropertyPanel ( ) ; setUpEnvVarPanel ( ) ; setUpFunctionPanel ( ) ; box . add ( createApplyRevertPanel ( ) ) ; }
5921	public static boolean hasJellyBeanMr1 ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ; }
5956	public TypeVariableBV typeVariable ( ) { int id = typeVariableList . size ( ) ; typeVariableList . add ( _NULL ) ; TypeVariableBV result = new TypeVariableBV ( id , this ) ; typeVariableList . set ( id , result ) ; return result ; }
5963	public static void enableLogs ( ) { verbose = _BOOL ; }
5969	public static Drawable toDrawable ( Bitmap bitmap ) { return bitmap == _NULL ? _NULL : new BitmapDrawable ( _NULL , bitmap ) ; }
6011	private void collectError ( Location location , int lineNum , String message ) { diagCollector . addDiag ( Diag . error ( new SimpleLocation ( String . format ( _CHAR % s ( at document line % d ) _CHAR , location . getDisplayString ( ) , lineNum ) ) , message ) ) ; }
6023	@ Override public void close ( ) { try { if ( connection != _NULL ) { connection . close ( ) ; } } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
6028	protected void onHostViewInitialized ( T host ) { }
6066	public void cancel ( ) { this . taskManager_ . cancel ( ) ; }
6078	public int size ( ) { return playerTemplates . size ( ) ; }
6080	public void removeCallback ( @ NonNull Callback callback ) { mCallbacks . remove ( callback ) ; }
6111	@ Override public List < User > searchUser ( User user ) { return sessionTemplate . selectList ( NAMESPACE + _CHAR . searchUser _CHAR , user ) ; }
6137	protected FriendsEditListQuery listId ( int value ) { return unsafeParam ( _CHAR list_id _CHAR , value ) ; }
6156	public static Column min ( DataFrame dataFrame , String columnName ) { return dataFrame . groupBy ( columnName ) . agg ( functions . min ( columnName ) ) . col ( columnName ) ; }
6188	protected void notifyClickListenersAboutClick ( int item ) { for ( OnWheelClickedListener listener : clickingListeners ) { listener . onItemClicked ( this , item ) ; } }
6212	public void populateColourField ( FieldIdEnum fieldId , Expression colour ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( fieldConfig != _NULL ) { fieldConfig . populateExpression ( colour ) ; } }
6222	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR zoom what = fit ; _CHAR ) ; }
6265	public static void w ( String tag , String s ) { if ( LOG . WARN >= LOGLEVEL ) Log . w ( tag , s ) ; }
6300	public void removeAllListeners ( ) { listeners . clear ( ) ; }
6317	public ScheduledFuture < ? > createTimerTask ( ScheduledExecutorService ses ) { return ses . scheduleAtFixedRate ( this , INITIAL_RUN_DELAY , getIntervalSeconds ( ) , TimeUnit . SECONDS ) ; }
6320	public static Item registerItem ( Item item ) { item . setUnlocalizedName ( _CHAR bwm _CHAR + item . getRegistryName ( ) . toString ( ) . substring ( BWMod . MODID . length ( ) ) ) ; return GameRegistry . register ( item ) ; }
6329	public static int px2sp ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
6343	public final int hashCode ( ) { if ( toString ( ) == _NULL ) { return _NUM ; } return toString ( ) . hashCode ( ) ; }
6359	public void updateColourRamp ( ColourRampData data ) { if ( data != _NULL ) { for ( ColourMapData row : colourMapList ) { Expression colour = data . getColourRamp ( ) . getColour ( data , row . getQuantity ( ) , data . reverseColours ( ) ) ; row . setColour ( colour ) ; } this . fireTableDataChanged ( ) ; } }
6376	public WallReportPostQuery reason ( ReportReason value ) { return unsafeParam ( _CHAR reason _CHAR , value ) ; }
6384	public void skipNullTerminatedBytes ( ) throws IOException { int letter = _NUM ; while ( letter != _NUM ) { letter = ins . read ( ) ; if ( letter == - _NUM ) throw new IOException ( _CHAR skipNullTerminatedBytes ( ) : failed ( EOF ) _CHAR ) ; } }
6429	@ Override public void onUIRefreshComplete ( PtrFrameLayout frame ) { mDrawable . stop ( ) ; }
6437	public void clearCache ( ) { cachedCatchable . clear ( ) ; cachedMapObjects . getNearbyPokemons ( ) . clear ( ) ; cachedMapObjects . getCatchablePokemons ( ) . clear ( ) ; cachedMapObjects . getWildPokemons ( ) . clear ( ) ; cachedMapObjects . getDecimatedSpawnPoints ( ) . clear ( ) ; cachedMapObjects . getSpawnPoints ( ) . clear ( ) ; }
6443	public void showSymbolizerButtons ( ) { overallEnableSymbolizersOverride = _BOOL ; }
6511	public void actionPerformed ( ActionEvent ev ) { final SamplesViewer samplesViewer = ( ( SamplesViewer ) getViewer ( ) ) ; final Collection < String > samples = samplesViewer . getSamplesTable ( ) . getSelectedSamples ( ) ; if ( samples . size ( ) > _NUM ) execute ( _CHAR set nodeShape = circle sample = _CHAR_CHAR_CHAR _CHAR_CHAR_CHAR ; _CHAR ) ; }
6512	private void monitorReplicationStateForModifyingOperation ( Transaction transaction ) { if ( transaction != _NULL ) return ; monitorReplicationState ( ) ; }
6543	public SimpleStringProperty descriptionProperty ( ) { return this . descriptionProperty ; }
6574	public static void removeAccess ( long rid , String name ) { Helper . delete ( W . create ( _CHAR rid _CHAR , rid ) . and ( _CHAR name _CHAR , name ) , RoleAccess . class ) ; Helper . update ( W . create ( X . ID , rid ) , V . create ( _CHAR updated _CHAR , System . currentTimeMillis ( ) ) , Role . class ) ; }
6578	@ Override public void emptyElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { startElement ( element , attributes , augs ) ; endElement ( element , augs ) ; }
6604	public static Observable < GoogleApiClient > observable ( Context context , Api api , Api . ApiOptions . HasOptions options ) { return GoogleApiClientObservable . create ( context . getApplicationContext ( ) , new ApiWithOptions ( api , options ) ) ; }
6668	public void SLDLoaded ( LegendOptionData data ) { if ( data != _NULL ) { updateLegendOptionData ( data ) ; if ( legendOptionPanel != _NULL ) { legendOptionPanel . updateData ( data ) ; } } }
6733	public void cancelAll ( ) { synchronized ( contents ) { if ( dead ) return ; contents . clear ( ) ; checkHead ( ) ; } }
6747	public BoardGetCommentsQuery startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
6752	@ Override public void dataSourceLoaded ( GeometryTypeEnum geometryType , boolean isConnectedToDataSourceFlag ) { DataSourceInterface dataSource = DataSourceFactory . getDataSource ( ) ; propertyPanel . dataSourceLoaded ( dataSource ) ; expressionPanel . dataSourceLoaded ( dataSource ) ; }
6770	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set show - unaligned = _CHAR + ! isSelected ( ) + _CHAR ; _CHAR ) ; }
6772	@ Override public void close ( ) throws SAException { if ( _entries != _NULL ) _entries . freeSLHolder ( _pos ) ; super . close ( ) ; }
6791	public TypeVariable typeVariable ( ) { int id = typeVariableList . size ( ) ; typeVariableList . add ( _NULL ) ; TypeVariable result = new TypeVariable ( id , this ) ; typeVariableList . set ( id , result ) ; return result ; }
6801	@ Override public Filter createFilter ( ) { return new DWithinExtended ( ) ; }
6802	@ Override protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { super . onSizeChanged ( w , h , oldw , oldh ) ; width = w ; height = h ; }
6812	public Builder add ( String property ) { properties . add ( property ) ; return this ; }
6828	public static String copyFromClipboard ( ) { try { String data = ( String ) Toolkit . getDefaultToolkit ( ) . getSystemClipboard ( ) . getData ( DataFlavor . stringFlavor ) ; return data ; } catch ( HeadlessException | UnsupportedFlavorException | IOException e ) { LOGGER . log ( Level . WARNING , _CHAR Error retrieving text from clipboard . '' , e ) ; return _CHAR _CHAR ; } }
6839	public NotesGetCommentsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
6848	public void removeScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . remove ( listener ) ; }
6850	private void populateAllowedTypes ( Class < ? > key , Class < ? > [ ] allowedTypeArray ) { allowedTypeMap . put ( key , Arrays . asList ( allowedTypeArray ) ) ; }
6859	public int code ( ) { return rawResponse . code ( ) ; }
6871	@ Override public void removeRaster ( Symbolizer symbolizer ) { }
6900	public void __setEntryInfo ( EntryInfo entryInfo ) { this . entryInfo = entryInfo ; }
6976	public void unloadDataStore ( ) { if ( dataStore != _NULL ) { dataStore . dispose ( ) ; } }
6987	public static void sortByOriginalOrder ( final Alignment alignment ) { alignment . resetOrder ( ) ; }
6989	public static void resetContext ( ) { invocationContexts . get ( ) . getContext ( ) . reset ( ) ; }
6991	@ NotNull @ Override public ExitCode build ( CompileContext context , ModuleChunk chunk , DirtyFilesHolder < JavaSourceRootDescriptor , ModuleBuildTarget > dirtyFilesHolder , OutputConsumer outputConsumer ) { JpsAndroidGradleModuleExtension extension = AndroidGradleJps . getFirstExtension ( chunk ) ; if ( extension == _NULL ) { return ExitCode . NOTHING_DONE ; } return ExitCode . OK ; }
7008	public void addScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . add ( listener ) ; }
7017	protected AdsGetStatisticsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
7025	protected void shareByWeixinCircle ( ) { ShareUtil . startShare ( this , ShareConstant . SHARE_CHANNEL_WEIXIN_CIRCLE , getShareData ( ShareConstant . SHARE_CHANNEL_WEIXIN_CIRCLE ) , ShareConstant . REQUEST_CODE ) ; }
7056	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR copyImage ; _CHAR ) ; }
7092	@ Override public void removeRaster ( Symbolizer symbolizer ) { }
7142	public MonsterToArenaCursor queryMonsterToArenaMonster ( long id ) { return mHelper . queryMonsterToArenaMonster ( id ) ; }
7158	public int size ( ) { return size ; }
7182	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR show what = selected ; _CHAR ) ; }
7201	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + CalculateEcologicalIndices . EUCLIDEAN_NORMALIZED + _CHAR ; _CHAR ) ; }
7202	public static String generatePassword ( ) { return RandomStringUtils . randomAlphanumeric ( DEF_COUNT ) ; }
7219	public static String nowAsString ( ) { return Long . toString ( System . currentTimeMillis ( ) ) ; }
7222	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
7223	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
7240	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
7244	public Future execute ( Collection < T > coll , CompletionCallback < Boolean > callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . task_ , coll , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
7250	public void onNetDisConnect ( ) { }
7260	@ PickTriggerResult public int fromDocuments ( ) { return this . fromDocuments ( _BOOL ) ; }
7304	public void reset ( ) { super . clear ( ) ; fContextType = CONTEXT_INITIALIZE ; fLocationHints = _NULL ; fTriggeringComponent = _NULL ; fEnclosedElementName = _NULL ; fAttributes = _NULL ; }
7308	protected AdsUpdateCampaignsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
7369	public void onFailure ( int statusCode , Header [ ] headers , Throwable throwable , JSONArray errorResponse ) { }
7388	@ Override public StyledLayerDescriptor create ( ) { StyledLayerDescriptor sld = DefaultSymbols . createNewPolygon ( ) ; return sld ; }
7395	public void addParam ( Param param ) { if ( params . containsKey ( param . name ) ) { throw new IllegalArgumentException ( _CHAR param name \ _CHAR _CHAR + param . name + _CHAR \ _CHAR already exists _CHAR ) ; } params . put ( param . name , param ) ; }
7406	@ Override public List < Writable > next ( ) { List < String > next = dataIter . next ( ) ; invokeListeners ( next ) ; List < Writable > ret = new ArrayList < > ( ) ; for ( String s : next ) ret . add ( new Text ( s ) ) ; return ret ; }
7407	public boolean isSrcPrec ( ) { return isSrcPrec ; }
7416	@ PickTriggerResult @ RequiresApi ( Build . VERSION_CODES . JELLY_BEAN_MR2 ) public int fromDocuments ( final boolean pAllowMultiple ) { return this . triggerPick ( this . prepareDocumentsIntent ( pAllowMultiple ) , QiPick . REQ_DOCUMENTS ) ; }
7429	public boolean retainAll ( Collection c ) { throw new UnsupportedOperationException ( ) ; }
7450	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR close what = others ; _CHAR ) ; }
7463	public void load ( Config config , String args [ ] ) throws StartupException { this . config = config ; Thread t = new Thread ( this ) ; t . setName ( this . toString ( ) ) ; t . setDaemon ( _BOOL ) ; t . run ( ) ; }
7477	public AppsGetQuery appIds ( String ... value ) { return unsafeParam ( _CHAR app_ids _CHAR , value ) ; }
7484	public void clearParams ( ) { params . clear ( ) ; }
7512	public void actionPerformed ( ActionEvent ev ) { String result = JOptionPane . showInputDialog ( getViewer ( ) . getFrame ( ) , _CHAR Enter Id _CHAR , _CHAR Select Node by Id _CHAR , JOptionPane . QUESTION_MESSAGE ) ; if ( result != _NULL ) execute ( _CHAR select id = _CHAR + result + _CHAR ; _CHAR ) ; }
7540	public boolean contains ( R rowKey , C columnKey ) { if ( rowKey == _NULL || columnKey == _NULL ) return _BOOL ; Map < C , V > row = dataMap . get ( rowKey ) ; return row != _NULL && row . containsKey ( columnKey ) ; }
7559	public static void addPropertiesListListener ( PropertiesListListener listener ) { if ( ! propertieslistListeners . contains ( listener ) ) { synchronized ( propertieslistListeners ) { propertieslistListeners . add ( listener ) ; } } }
7576	private void showSticky ( ) { WXCell headComponent = headComponentStack . pop ( ) ; headComponentStack . push ( headComponent ) ; View headerView = headComponent . getRealView ( ) ; if ( headerView == _NULL ) return ; headerViewStack . push ( headerView ) ; headComponent . removeSticky ( ) ; ( ( ViewGroup ) getParent ( ) ) . addView ( headerView ) ; }
7604	public GroupsSetCallbackSettingsQuery videoNew ( Boolean value ) { return unsafeParam ( _CHAR video_new _CHAR , value ) ; }
7609	public Builder elementType ( final Type < ? > elementType ) { this . elementType = elementType ; return this ; }
7618	public static boolean isNetWorkConnected ( Context context ) { if ( context != _NULL ) { ConnectivityManager mConnectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo mNetworkInfo = mConnectivityManager . getActiveNetworkInfo ( ) ; if ( mNetworkInfo != _NULL ) { return mNetworkInfo . isAvailable ( ) && mNetworkInfo . isConnected ( ) ; } } return _BOOL ; }
7628	private Bitmap addThumbnailToCache ( String imageKey , Bitmap bitmap , String path , int px ) { Bitmap thumbnail = ThumbnailUtils . extractThumbnail ( bitmap , px , px ) ; thumbnail = BitmapUtils . rotateImage ( thumbnail , path ) ; addBitmapToCache ( imageKey , thumbnail ) ; return thumbnail ; }
7636	public static void showLong ( Context context , String text ) { if ( mToast == _NULL ) { mToast = Toast . makeText ( context , text , Toast . LENGTH_LONG ) ; } mToast . setDuration ( Toast . LENGTH_LONG ) ; mToast . setText ( text ) ; mToast . show ( ) ; }
7639	public void handleEntryExpiredSA ( EntryExpiredBusPacket packet ) throws Exception { handleEntryExpiredCoreSA ( packet . getEntryHolder ( ) , packet . getTransaction ( ) , packet . isFromReplication ( ) ) ; }
7651	public synchronized void progressStop ( ) { if ( this . progressDialog != _NULL ) { this . progressDialog . dismiss ( ) ; this . progressDialog = _NULL ; } }
7653	private static String keyForPayload ( String name ) { return _CHAR service_payload_ _CHAR + name ; }
7668	public void removeDetailsView ( DetailsView detailsView ) { DisplayArea displayArea = getDisplayArea ( detailsView . getTab ( ) ) ; if ( displayArea != _NULL ) displayArea . removeTab ( detailsView . getTab ( ) ) ; }
7682	protected AudioRestoreQuery audioId ( int value ) { return unsafeParam ( _CHAR audio_id _CHAR , value ) ; }
7686	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR show gapBetweenBars = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
7698	public static void toggleFullScreen ( Activity activity ) { Window window = activity . getWindow ( ) ; int flagFullscreen = WindowManager . LayoutParams . FLAG_FULLSCREEN ; if ( isFullScreen ) { window . clearFlags ( flagFullscreen ) ; isFullScreen = _BOOL ; } else { window . setFlags ( flagFullscreen , flagFullscreen ) ; isFullScreen = _BOOL ; } }
7721	public int skip ( int len ) { pos += len ; return pos ; }
7731	public static AuthToken load ( String id ) { return Helper . load ( id , AuthToken . class ) ; }
7737	@ Override public void write ( int b ) throws IOException { out . write ( b ) ; md5 . Update ( ( byte ) b ) ; }
7747	public synchronized void close ( ) { for ( Table t : this . tableLookup . values ( ) ) { t . close ( ) ; } this . tableLookup . clear ( ) ; }
7776	public synchronized void cancel ( ) { }
7808	@ Bean public Auth0Client auth0Client ( ) { return new Auth0Client ( clientId , issuer ) ; }
7810	@ Override public void actionPerformed ( ActionEvent event ) { final ImportBlastDialog importBlastDialog = ( ImportBlastDialog ) getParent ( ) ; importBlastDialog . apply ( ) ; try { importBlastDialog . destroyView ( ) ; } catch ( CanceledException e ) { Basic . caught ( e ) ; } }
7813	@ Override public void close ( ) throws IOException { for ( Reader delegate : this . delegates ) delegate . close ( ) ; }
7817	public boolean isIgnore ( ) { return ignore ; }
7820	public static Bitmap blurJava ( Bitmap original , int radius , boolean canReuseInBitmap ) { if ( radius < _NUM ) { return ( _NULL ) ; } Bitmap bitmap = buildBitmap ( original , canReuseInBitmap ) ; if ( radius == _NUM ) { return bitmap ; } StackJava . blur ( bitmap , radius ) ; return ( bitmap ) ; }
7890	public static void log ( int priority , String tag , String message , Throwable tr ) { Log . println ( priority , tag , message + _CHAR + Log . getStackTraceString ( tr ) ) ; }
7912	public String taggerModelFileName ( ) { switch ( language ) { case ENGLISH : return _CHAR / export / dat / tag / en / cmm _CHAR ; case VIETNAMESE : return _CHAR / export / dat / tag / vi / cmm _CHAR ; } return _NULL ; }
7949	public static Director newProject ( boolean visible ) { return newProject ( visible , _BOOL ) ; }
8021	Uuid cookie ( ) { return cookie ; }
8065	public static UnrevealBuilder unreveal ( @ NonNull final View viewToUnreveal ) { return new UnrevealBuilder ( viewToUnreveal ) ; }
8107	public static void fill ( Matrix a , double value ) { for ( int i = _NUM ; i < a . rows ; i ++ ) { for ( int j = _NUM ; j < a . cols ; j ++ ) { a . set ( i , j , value ) ; } } }
8127	public int start_production ( ) { return _NUM ; }
8128	protected void populateStandardData ( Style style ) { StandardData standardData = new StandardData ( ) ; if ( style != _NULL ) { standardData . name = style . getName ( ) ; standardData . description = style . getDescription ( ) ; } populateStandardData ( standardData ) ; }
8165	public static Bitmap drawableToBitmap ( Drawable drawable ) { return drawable == _NULL ? _NULL : ( ( BitmapDrawable ) drawable ) . getBitmap ( ) ; }
8169	public void addVendorOptionListener ( PrefUpdateVendorOptionInterface listener ) { if ( ! vendorOptionListenerList . contains ( listener ) ) { vendorOptionListenerList . add ( listener ) ; listener . vendorOptionsUpdated ( this . prefData . getVendorOptionVersionList ( ) ) ; } }
8206	public GroupsEditQuery obsceneWords ( String ... value ) { return unsafeParam ( _CHAR obscene_words _CHAR , value ) ; }
8233	public void unblock ( ) { skype . unblock ( this ) ; }
8253	public boolean gotoPrevious ( ) { currentIterator = _NULL ; currentId = _NULL ; return isCurrentSet ( ) ; }
8282	public void onSuccess ( int statusCode , Header [ ] headers , JSONArray response ) { }
8310	private void onTimeChanged ( ) { sendAccessibilityEvent ( AccessibilityEvent . TYPE_VIEW_SELECTED ) ; if ( mOnTimeChangedListener != _NULL ) { mOnTimeChangedListener . onTimeChanged ( this , getCurrentHour ( ) , getCurrentMinute ( ) ) ; } }
8330	float readBoost ( Element el ) { NodeList list = el . getElementsByTagName ( _CHAR boost _CHAR ) ; if ( list == _NULL || list . getLength ( ) == _NUM ) return DomainSuffix . DEFAULT_BOOST ; return Float . parseFloat ( list . item ( _NUM ) . getFirstChild ( ) . getNodeValue ( ) ) ; }
8360	public void closeQQClient ( ) { if ( _NULL == xiaoV ) { return ; } try { xiaoV . close ( ) ; } catch ( final Exception e ) { LOGGER . log ( Level . ERROR , _CHAR Closes QQ client failed _CHAR , e ) ; } }
8399	@ Override public void actionPerformed ( ActionEvent ev ) { }
8402	@ Override public void vendorOptionsUpdated ( List < VersionData > vendorOptionVersionsList ) { this . vendorOptionVersionList = vendorOptionVersionsList ; updateVendorOptionPanels ( ) ; }
8422	public void choose ( Flavor item ) { checkInit ( ) ; int index = mFlavors . indexOf ( item ) ; mPreferences . edit ( ) . putInt ( PREFERENCE_FLAVOR_KEY , index ) . apply ( ) ; }
8429	private void selectColumn ( int col ) { for ( int row = _NUM ; row < dataGrid . getRowCount ( ) ; row ++ ) spreadsheetView . getSelectionModel ( ) . select ( row , spreadsheetView . getColumns ( ) . get ( col ) ) ; }
8432	public boolean add ( Object o ) { throw new UnsupportedOperationException ( ) ; }
8434	public void addOnPageChangeListener ( ViewPager . OnPageChangeListener onPageChangeListener ) { this . onPageChangeListener = onPageChangeListener ; }
8483	protected VideoEditAlbumQuery title ( String value ) { return unsafeParam ( _CHAR title _CHAR , value ) ; }
8485	public boolean addAll ( Collection c ) { throw new UnsupportedOperationException ( ) ; }
8546	public void close ( ) throws SAException { }
8573	@ Override public void applyDimensionBehaviour ( ) { wrapContent ( ) ; }
8580	public static SpaceURL parseURL ( String spaceURL ) throws MalformedURLException { return parseURL ( spaceURL , _NULL ) ; }
8611	@ Override public void elementDecl ( String name , String contentModel , Augmentations augmentations ) throws XNIException { }
8628	public List < File > glob ( ) throws IOException , InterruptedException { return globInternal ( base , patterns , excludes , excludeDirectories , pathFilter , threadPool ) ; }
8634	public void revertSelf ( ) { unlinkReverse ( ) ; if ( angle < FastMath . PI ) { angle += FastMath . PI ; } else { angle -= FastMath . PI ; } cos =- cos ; sin =- sin ; originOffset =- originOffset ; }
8649	public static void showError ( String message , long milliseconds ) { showNotification ( title , message , Mode . error , Pos . BOTTOM_LEFT , milliseconds ) ; }
8651	public void removeClickingListener ( OnWheelClickedListener listener ) { clickingListeners . remove ( listener ) ; }
8654	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + CalculateEcologicalIndices . BRAYCURTIS + _CHAR ; _CHAR ) ; }
8671	public void notifyAttackObservers ( Creature creature ) { notifyObservers ( ObserverType . ATTACK , creature ) ; }
8681	public static void resetTimingLogger ( ) { if ( mTimingLogger == _NULL ) { mTimingLogger = createDefaultTimingLogger ( ) ; } mTimingLogger . reset ( ) ; }
8688	public void clearDiskCache ( ) { checkConfiguration ( ) ; configuration . diskCache . clear ( ) ; }
8746	public NewsfeedGetListsQuery listIds ( List < Integer > value ) { return unsafeParam ( _CHAR list_ids _CHAR , value ) ; }
8786	public boolean gotoNext ( ) { if ( isCurrentSet ( ) ) { current . set1 ( current . get1 ( ) + _NUM ) ; if ( current . get1 ( ) >= table . getGrid ( ) . getRowCount ( ) ) { current . set1 ( _NUM ) ; current . set2 ( current . get2 ( ) + _NUM ) ; } } else gotoFirst ( ) ; return isCurrentSet ( ) ; }
8795	public static String decompressToStringForZlib ( byte [ ] bytesToDecompress ) { byte [ ] bytesDecompressed = decompressForZlib ( bytesToDecompress ) ; String returnValue = _NULL ; try { returnValue = new String ( bytesDecompressed , _NUM , bytesDecompressed . length , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return returnValue ; }
8824	private void cancelTimeoutTask ( ) { if ( timeoutTask != _NULL && ! timeoutTask . isCancelled ( ) ) { timeoutTask . cancel ( _BOOL ) ; } }
8827	public void squaresColor ( @ ColorInt int color ) { squaresPaint . setColor ( color ) ; invalidate ( ) ; }
8828	public static PhasedBackoffWaitStrategy withLiteLock ( long spinTimeout , long yieldTimeout , TimeUnit units ) { return new PhasedBackoffWaitStrategy ( spinTimeout , yieldTimeout , units , new LiteBlockingWaitStrategy ( ) ) ; }
8841	public static final void addPlayer ( PlayerAlliance alliance , Player player ) { Preconditions . checkNotNull ( alliance , _CHAR Alliance should not be _NULL _CHAR ) ; alliance . onEvent ( new PlayerEnteredEvent ( alliance , player ) ) ; }
8856	public VideoReportQuery reason ( ReportReason value ) { return unsafeParam ( _CHAR reason _CHAR , value ) ; }
8862	public void addCategory ( String category ) { if ( TextUtils . isEmpty ( category ) ) return ; mIntent . addCategory ( category ) ; }
8892	public void addRenderer ( RenderSymbolInterface renderer ) { if ( ! rendererList . contains ( renderer ) ) { rendererList . add ( renderer ) ; } }
8898	@ Override public void dataSourceLoaded ( GeometryTypeEnum geometryType , boolean isConnectedToDataSourceFlag ) { updateButtonState ( geometryType ) ; }
8903	public void add ( PokedexEntry entry ) { PokemonId id = PokemonId . forNumber ( entry . getPokemonId ( ) . getNumber ( ) ) ; pokedexMap . put ( id , entry ) ; }
8912	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set groupNodes = none ; _CHAR ) ; }
8968	public AccountSaveProfileInfoQuery firstName ( String value ) { return unsafeParam ( _CHAR first_name _CHAR , value ) ; }
8974	private void requestRemoveNodesStop ( ) { enqueue ( new RemoveNodeMessageClass ( ) . doRequestStop ( ) ) ; logger . debug ( _CHAR ZWave controller end exclusion _CHAR ) ; }
9003	@ Override public void handle ( ) { spec . handler . accept ( new PacketContext ( ) , this ) ; }
9009	public boolean gotoNext ( ) { if ( currentTaxonIterator == _NULL ) { gotoFirst ( ) ; } else if ( currentTaxonIterator . hasNext ( ) ) currentTaxonId = currentTaxonIterator . next ( ) ; else { currentTaxonIterator = _NULL ; currentTaxonId = _NULL ; } return isCurrentSet ( ) ; }
9034	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR StyleDetails . xml _CHAR ) ; }
9058	@ Override public int compareTo ( PlayerHouseBid o ) { return ( int ) ( time . getTime ( ) - o . getTime ( ) . getTime ( ) ) ; }
9102	public VideoReportCommentQuery reason ( ReportReason value ) { return unsafeParam ( _CHAR reason _CHAR , value ) ; }
9128	private static void deleteRecursive ( File f ) throws CarbonUtilException { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( File c : f . listFiles ( ) ) { deleteRecursive ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { throw new CarbonUtilException ( _CHAR Error while deleting the folders and files '' ) ; } }
9166	void initialize ( Flyway flyway , String mutagenRootResourcePath ) { flyway . setLocations ( mutagenRootResourcePath ) ; flyway . setDataSource ( transactionFactory . getDataSource ( ) ) ; flyway . migrate ( ) ; }
9179	@ Override public void startElement ( String name , AttributeList atts ) throws SAXException { allowXMLCatalogPI = _BOOL ; if ( documentHandler != _NULL ) { documentHandler . startElement ( name , atts ) ; } }
9180	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set colorMatchesVsConsensus = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
9220	public BoardGetCommentsQueryWithExtended startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
9225	public synchronized void close ( ) { }
9227	public static Router create ( String url ) { return new Router ( Uri . parse ( url ) ) ; }
9281	public synchronized void close ( ) { done = _BOOL ; if ( line != _NULL && line . isOpen ( ) ) { line . close ( ) ; line = _NULL ; notify ( ) ; } }
9283	public void addColumn ( String name , String expr ) { throw new UnsupportedOperationException ( ) ; }
9286	public static byte [ ] compressForZlib ( String stringToCompress ) { byte [ ] returnValues = _NULL ; try { returnValues = compressForZlib ( stringToCompress . getBytes ( _CHAR UTF - _NUM _CHAR ) ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return returnValues ; }
9291	public void addScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . add ( listener ) ; }
9303	public void clear ( ) { sharedPreferences . edit ( ) . clear ( ) . apply ( ) ; }
9306	protected AdsAddOfficeUsersQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
9321	public static Role loadByName ( String name ) { return Helper . load ( W . create ( _CHAR name _CHAR , name ) , Role . class ) ; }
9348	public void removeShape ( int shapeIndex ) { if ( ( shapeIndex >= _NUM ) && ( shapeIndex < segmentList . size ( ) ) ) { segmentList . remove ( shapeIndex ) ; } }
9357	public synchronized void resetTime ( ) { }
9366	public static void checkBinomial ( final int n , final int k ) throws MathIllegalArgumentException { if ( n < k ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . BINOMIAL_INVALID_PARAMETERS_ORDER , k , n , _BOOL ) ; } if ( n < _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . BINOMIAL_NEGATIVE_PARAMETER , n ) ; } }
9396	@ Override public void delete ( ) throws ConceptException { ConceptImpl properType = getMindmapsGraph ( ) . getElementFactory ( ) . buildUnknownConcept ( vertex ) ; properType . innerDelete ( ) ; }
9402	public void dataSourceLoaded ( DataSourceInterface dataSource ) { dataSourceAttributePanel . dataSourceLoaded ( dataSource ) ; }
9415	private void onException ( Exception e ) { if ( e instanceof IllegalArgumentException ) { } else { } finishedTasks ++ ; }
9426	public static void showWarning ( String message ) { showNotification ( title , message , Mode . warning , Pos . BOTTOM_LEFT , _NUM ) ; }
9448	private String separeMetaTagsContent ( String content ) { String result = Regex . pregMatch ( content , Regex . METATAG_CONTENT_PATTERN , _NUM ) ; return htmlDecode ( result ) ; }
9454	public VideoEditCommentQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
9469	public boolean isRequiredEncode ( ) { return requiredEncode ; }
9484	public void add ( String uid ) { cleanIfNeeded ( ) ; if ( currentSet ) { _idSet0 . add ( uid ) ; } else { _idSet1 . add ( uid ) ; } }
9562	public static void stopTiming ( Object caller ) { stopTiming ( caller . getClass ( ) . getSimpleName ( ) ) ; }
9565	@ Override public void updateLayerStyle ( List < GeoServerLayer > layerList ) { if ( layerList != _NULL ) { for ( GeoServerLayer layer : layerList ) { GeoServerClientInterface client = connectionMap . get ( layer . getConnection ( ) ) ; if ( client != _NULL ) { client . updateLayerStyles ( layer ) ; } } } }
9580	@ Override public void close ( ) throws SAException { if ( _templates != _NULL ) _templates . freeSLHolder ( _pos ) ; super . close ( ) ; }
9582	public static Document openDocument ( OutputStream outputStream ) { return openDocument ( outputStream , PageSize . A4 ) ; }
9595	public void removeValue ( int row ) { valueList . remove ( row ) ; this . fireTableDataChanged ( ) ; }
9599	public static void showInformation ( String message , long milliseconds ) { showNotification ( title , message , Mode . information , Pos . BOTTOM_LEFT , milliseconds ) ; }
9600	public static final void addPlayer ( PlayerGroup group , Player player ) { Preconditions . checkNotNull ( group , _CHAR Group should not be _NULL _CHAR ) ; group . onEvent ( new PlayerEnteredEvent ( group , player ) ) ; }
9610	@ Override public Filter createFilter ( ) { return new IsLikeExtended ( ) ; }
9615	public void onFileCreate ( final File file ) { }
9634	private void writeObject ( ObjectOutputStream oos ) throws IOException { oos . defaultWriteObject ( ) ; MatrixUtils . serializeRealVector ( coefficients , oos ) ; }
9679	@ Override public Filter createFilter ( ) { return new CrossesExtended ( ) ; }
9732	public Call delete ( String url , Callback callback ) { Request request = new Builder ( ) . url ( url ) . delete ( ) . build ( ) ; Call call = client . newCall ( request ) ; call . enqueue ( callback ) ; return call ; }
9734	public void dismissProgressDialog ( ) { if ( isProgressDialogShowing ( ) ) { mProgressDialog . dismiss ( ) ; mProgressDialog = _NULL ; } }
9750	public void removeField ( FieldConfigBase fieldConfig ) { if ( fieldConfig != _NULL ) { Map < FieldIdEnum , FieldConfigBase > panelMap = fieldConfigMap . get ( panelId ) ; if ( panelMap != _NULL ) { panelMap . remove ( fieldConfig . getFieldId ( ) ) ; } } }
9795	@ Override public boolean equals ( Object o ) { return o instanceof AirMapPermitAnswer && getId ( ) . equals ( ( ( AirMapPermitAnswer ) o ) . getId ( ) ) ; }
9832	protected AuthSignupQuery clientId ( int value ) { return unsafeParam ( _CHAR client_id _CHAR , value ) ; }
9864	public static boolean isDoLog ( ) { return doLog ; }
9922	public boolean onKeyUp ( int keyCode , KeyEvent event ) { if ( keyCode == KeyEvent . KEYCODE_BACK && mSlidingMenu . isMenuShowing ( ) ) { showContent ( ) ; return _BOOL ; } return _BOOL ; }
9929	@ NotNull public ImageOverlayBuilder identify ( @ NotNull IdentificationSet identificationSet ) { return identify ( identificationSet , RectangleTextPosition . TOP_OF ) ; }
9941	protected static ObjectReader init ( CsvSchema filterCsvSchema ) { return new CsvMapper ( ) . disable ( CsvParser . Feature . WRAP_AS_ARRAY ) . readerFor ( String [ ] . class ) . with ( filterCsvSchema ) ; }
9948	public GroupsSetCallbackSettingsQuery messageAllow ( Boolean value ) { return unsafeParam ( _CHAR message_allow _CHAR , value ) ; }
9957	@ Override public void vendorOptionsUpdated ( List < VersionData > vendorOptionVersionsList ) { }
9969	public static RemoteServer delicatedDeserialize ( RemoteServer server , Map < String , Object > map ) { server . remoteAddr = ( String ) map . get ( _CHAR remote_addr _CHAR ) ; server . remotePort = ( ( Number ) map . get ( _CHAR remote_port _CHAR ) ) . intValue ( ) ; return server ; }
10008	public void removeInputProcessor ( InputProcessor ip ) { processors . removeProcessor ( ip ) ; Gdx . input . setInputProcessor ( processors ) ; }
10016	public void clear ( ) { fLength = _NUM ; }
10034	public static String dateToString ( Date date ) { return dateToString ( date , SIMPLE_DATE_FORMAT ) ; }
10046	public Matrix inverse ( ) { return solve ( identity ( m , m ) ) ; }
10101	public static void print ( ) { out . flush ( ) ; }
10118	@ Override public void flush ( ) throws IOException { out . flush ( ) ; }
10120	public Builder withRationaleDialogMsg ( @ StringRes int rationaleMsgRes ) { buildObj . rationaleDialogMsgRes = rationaleMsgRes ; buildObj . showRationaleDialog = _BOOL ; return this ; }
10134	@ Deprecated public void clearDiscCache ( ) { clearDiskCache ( ) ; }
10180	public void logout ( ) { setAuthToken ( _NULL ) ; userId = _NULL ; getClient ( ) . clearAndResetHeaders ( ) ; }
10182	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set drawer = _CHAR + ViewerBase . DiagramType . RoundedPhylogram + _CHAR ; _CHAR ) ; }
10195	@ Override public void confirm ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; }
10197	public SimpleStringProperty topicProperty ( ) { return this . topic ; }
10206	public int code ( ) { return code ; }
10214	@ Override public void createRaster ( Symbolizer symbolizer ) { }
10215	protected AdsDeleteCampaignsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
10261	protected void writeLSD ( ) throws IOException { writeShort ( width ) ; writeShort ( height ) ; out . write ( ( _NUM | _NUM | _NUM | palSize ) ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; }
10265	private void close ( ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) this . supportFinishAfterTransition ( ) ; else finish ( ) ; }
10266	public static float defaultColourOpacity ( ) { return DEFAULT_COLOUR_OPACITY ; }
10277	@ Override public void emptyElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { if ( DEBUG_EVENTS ) { System . out . println ( _CHAR == > emptyElement : _CHAR + element ) ; } startElement ( element , attributes , augs ) ; endElement ( element , augs ) ; }
10298	private float dp2px ( float dp ) { return TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dp , getResources ( ) . getDisplayMetrics ( ) ) ; }
10299	@ Override public List < Module > searchModule ( Module module ) { return sessionTemplate . selectList ( NAMESPACE + _CHAR . searchModule _CHAR , module ) ; }
10318	public boolean isGameStartSet ( ) { return gameStartSet ; }
10338	public Bindings add ( String property , JToggleButton c , boolean defaultValue ) { registerPropertyChangeListener ( c ) ; return add ( new JToggleButtonBinding ( property , c , defaultValue ) ) ; }
10371	public void clearDiskCache ( ) { checkConfiguration ( ) ; configuration . diskCache . clear ( ) ; }
10382	public Pet save ( Pet pet ) { log . debug ( _CHAR Request to save Pet : { } _CHAR , pet ) ; Pet result = petRepository . save ( pet ) ; return result ; }
10388	public void populateIntegerField ( FieldIdEnum fieldId , Integer value ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( value != _NULL ) { ( ( FieldConfigValuePopulateInterface ) fieldConfig ) . populateField ( value ) ; } else { fieldConfig . revertToDefaultValue ( ) ; } }
10418	@ Override public boolean hasFill ( Symbolizer symbolizer ) { return _BOOL ; }
10426	@ Override public void disconnect ( ) { ProcessConfiguration processConfiguration = configurationController . getProcessConfiguration ( ) ; log . debug ( _CHAR Disconnecting ActiveMessageReceiver listener with destination to { } _CHAR , processConfiguration . getJmsDaqCommandQueue ( ) ) ; listenerContainer . shutdown ( ) ; }
10455	public void requestSaveToXML ( ) { updateXml ( ) ; mySaveXmlTimer . reset ( ) ; }
10459	static String format ( double d ) { if ( d != d ) { return _CHAR Double . NaN , _CHAR ; } else { return ( ( d >= _NUM ) ? _CHAR + _CHAR : _CHAR _CHAR ) + Double . toString ( d ) + _CHAR d , _CHAR ; } }
10500	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set fontSize = increase ; _CHAR ) ; }
10508	public void dismissAutoSigninSnackbar ( ) { if ( mSnackbarManager . isShowing ( ) ) { mSnackbarManager . dismissSnackbars ( this ) ; } }
10542	@ Override public String toString ( ) { return getMessage ( ) ; }
10566	@ Override public Filter createFilter ( ) { return new BBoxExtended ( ) ; }
10570	@ Override public void onUIRefreshComplete ( PtrFrameLayout frame ) { mDrawable . stop ( ) ; }
10624	@ Override public void createUI ( ) { createFieldPanel ( _NUM , _CHAR _CHAR ) ; }
10641	public void startSequence ( ) { if ( queue . isEmpty ( ) ) { Log . d ( TAG , _CHAR EMPTY SEQUENCE _CHAR ) ; } else { queue . poll ( ) . show ( ) ; } }
10642	private void sendCrashToServer ( Throwable ex ) { LogUtil . d ( _CHAR sendCrashToServer _CHAR ) ; if ( config . isReportToServer ( ) ) { if ( _NULL != config ) { config . getReporter ( ) . report ( ex ) ; } } }
10643	public WallEditCommentQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
10656	@ Override public void rightMouseButton ( Object selectedItem , MouseEvent e ) { }
10657	public void removeChangingListener ( OnWheelChangedListener listener ) { changingListeners . remove ( listener ) ; }
10682	public boolean isAddColumnSupported ( ) { return _BOOL ; }
10690	@ Override public int hashCode ( ) { int result = name != _NULL ? name . hashCode ( ) : _NUM ; result = _NUM * result + ( passwordHash != _NULL ? passwordHash . hashCode ( ) : _NUM ) ; return result ; }
10714	public static void removePropertiesListListener ( PropertiesListListener listener ) { synchronized ( propertieslistListeners ) { propertieslistListeners . remove ( listener ) ; } }
10717	private void reverseColourRamp ( boolean isSelected ) { int selectedIndex = rampComboBox . getSelectedIndex ( ) ; setPopulating ( _BOOL ) ; List < ValueComboBoxData > dataList = populateColourRamps ( isSelected ) ; rampComboBox . initialiseSingle ( dataList ) ; rampComboBox . setSelectedIndex ( selectedIndex ) ; setPopulating ( _BOOL ) ; }
10737	private String makeSAM ( String queryName , String referenceLine ) { return queryName + _CHAR \ t0 \ t _CHAR + referenceLine + _CHAR \ t0 \ t255 \ t *\ t *\ t0 \ t0 \ t *\ t *\ tAS : i : _NUM \ t \ n _CHAR ; }
10779	public AccountSaveProfileInfoQuery homeTown ( String value ) { return unsafeParam ( _CHAR home_town _CHAR , value ) ; }
10785	@ Override public void startStreamingConsumption ( long timeout ) { jssc . start ( ) ; if ( timeout < _NUM ) jssc . awaitTermination ( ) ; else jssc . awaitTermination ( timeout ) ; }
10786	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set nodeShape = circle ; _CHAR ) ; }
10787	public UseItemEggIncubatorResponse . Result incubate ( EggIncubator incubator ) throws LoginFailedException , RemoteServerException { if ( incubator . isInUse ( ) ) { throw new IllegalArgumentException ( _CHAR Incubator already used _CHAR ) ; } return incubator . hatchEgg ( this ) ; }
10797	protected AudioEditAlbumQuery title ( String value ) { return unsafeParam ( _CHAR title _CHAR , value ) ; }
10822	@ Override public void vendorOptionsUpdated ( List < VersionData > vendorOptionVersionsList ) { this . vendorOptionOptionsList = vendorOptionVersionsList ; updateVendorOptionPanels ( ) ; }
10872	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set show - consensus = _CHAR + ! isSelected ( ) + _CHAR ; _CHAR ) ; }
10873	public static Configuration createEquipmentDataTag ( Long parentId ) { Configuration configuration = new Configuration ( ) ; DataTag dataTag = DataTag . create ( _CHAR DATA_INI_TEST _CHAR , Integer . class , new DataTagAddress ( ) ) . equipmentId ( parentId ) . id ( _NUM ) . build ( ) ; configuration . addEntity ( dataTag ) ; return configuration ; }
10885	public static void showInternalError ( String message ) { showNotification ( title , _CHAR Internal error : _CHAR + message , Mode . error , Pos . BOTTOM_LEFT , _NUM ) ; }
10896	@ Override public void applyDimensionBehaviour ( ) { wrapContent ( ) ; }
10907	public static int discretize ( double value , double min , double max , int binCount ) { int discreteValue = ( int ) ( binCount * normalize ( value , min , max ) ) ; return clamp ( discreteValue , _NUM , binCount - _NUM ) ; }
10908	@ Override public boolean accept ( File file ) { if ( fileFilter != _NULL ) { return fileFilter . accept ( file ) ; } else { return super . accept ( file ) ; } }
11006	public static ByteBuf deflate ( ByteBuf buffer ) throws DataFormatException { ByteBuf dest = PooledByteBufAllocator . DEFAULT . directBuffer ( ) ; try { deflate ( buffer , dest ) ; } catch ( DataFormatException e ) { dest . release ( ) ; throw e ; } return dest ; }
11010	public static int dip2px ( Context context , float dpValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpValue * scale + _NUM . _NUM ) ; }
11015	@ Override public void endDocument ( ) throws SAXException { if ( documentHandler != _NULL ) { documentHandler . endDocument ( ) ; } }
11016	public void addScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . add ( listener ) ; }
11026	public void start ( ) { mTargetWrapperView . prepareTransition ( mToShow ) ; mContainer . prepareTransition ( mToShow ) ; if ( mToShow == _NULL ) { continueAnimation ( ) ; } else { mTargetWrapperView . getViewTreeObserver ( ) . addOnGlobalLayoutListener ( this ) ; } }
11061	private static int decodeIntElement ( Document document , Node child ) { return Integer . valueOf ( child . getTextContent ( ) ) . intValue ( ) ; }
11068	private static void checkBinomial ( final int n , final int k ) throws IllegalArgumentException { if ( n < k ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR must have n >= k for binomial coefficient ( n , k ) , got n = { _NUM } , k = { _NUM } _CHAR , n , k ) ; } if ( n < _NUM ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR must have n >= _NUM for binomial coefficient ( n , k ) , got n = { _NUM } _CHAR , n ) ; } }
11084	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + PearsonDistance . PEARSON_DISTANCE + _CHAR ; _CHAR ) ; }
11090	public static GeometryTypeEnum combineGeometryType ( List < GeometryTypeEnum > geometryFeatures ) { if ( geometryFeatures != _NULL ) { if ( geometryFeatures . size ( ) == _NUM ) { return geometryFeatures . get ( _NUM ) ; } else { return geometryFeatures . get ( _NUM ) ; } } return GeometryTypeEnum . UNKNOWN ; }
11108	public static AttackStatus calculatePhysicalStatus ( Creature attacker , Creature attacked , boolean isMainHand ) { return calculatePhysicalStatus ( attacker , attacked , isMainHand , _NUM , _NUM , _BOOL , _BOOL ) ; }
11132	public static void close ( URLConnection conn ) { if ( conn instanceof HttpURLConnection ) { ( ( HttpURLConnection ) conn ) . disconnect ( ) ; } }
11148	@ Override public int compareTo ( @ SuppressWarnings ( _CHAR NullableProblems _CHAR ) Fragment other ) { if ( this == other ) return _NUM ; return priority . compareTo ( other . getPriority ( ) ) ; }
11167	public AccountSetNameInMenuQuery name ( String value ) { return unsafeParam ( _CHAR name _CHAR , value ) ; }
11207	public static boolean isAValuesDirectory ( String directoryName ) { if ( directoryName == _NULL ) { throw new NullPointerException ( _CHAR directoryName can not be _NULL _CHAR ) ; } return directoryName . equals ( _CHAR values _CHAR ) || directoryName . startsWith ( _CHAR values - _CHAR ) ; }
11214	@ Override public void updateSLDContents ( String sldContents ) { this . sldContents = sldContents ; }
11216	@ Override public boolean accept ( File directory , String fileName ) { if ( ! super . accept ( directory , fileName ) ) return _BOOL ; try { return DAAParser . isMeganizedDAAFile ( ( new File ( directory , fileName ) ) . getPath ( ) , _BOOL ) ; } catch ( IOException e ) { return _BOOL ; } }
11235	@ Override public ASEntityDeclaration createASEntityDeclaration ( String name ) throws DOMException { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
11274	protected void writeLSD ( ) throws IOException { writeShort ( width ) ; writeShort ( height ) ; out . write ( ( _NUM | _NUM | _NUM | palSize ) ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; }
11306	public void addAssociation ( int node ) { addAssociation ( node , _NUM ) ; }
11315	public void commit ( ) { checkReady ( ) ; state = DONE ; checkRc ( LIB . mdb_txn_commit ( ptr ) ) ; }
11348	protected void drawXAxis ( Graphics2D gc ) { }
11377	@ Override public boolean equals ( Object o ) { return o instanceof AirMapStatusAdvisory && getId ( ) . equals ( ( ( AirMapStatusAdvisory ) o ) . getId ( ) ) ; }
11381	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set sortreads = _CHAR + ( isSelected ( ) ? _CHAR no _CHAR : _CHAR alphabetically _CHAR ) + _CHAR ; _CHAR ) ; }
11431	@ Override public InterpolatingMicrosphere2D copy ( ) { return new InterpolatingMicrosphere2D ( this ) ; }
11433	private void registerHealthChecks ( DimensionConfig dimension ) { healthCheckRegistry . register ( dimension . getApiName ( ) + _CHAR keyValueStore check _CHAR , new KeyValueStoreHealthCheck ( dimension . getKeyValueStore ( ) ) ) ; healthCheckRegistry . register ( dimension . getApiName ( ) + _CHAR searchProvider check _CHAR , new SearchProviderHealthCheck ( dimension . getSearchProvider ( ) ) ) ; }
11459	public static void showPrefPanel ( ) { PrefPanel panel = new PrefPanel ( ) ; if ( panel . showDialog ( PrefManager . getInstance ( ) . getPrefData ( ) ) ) { PrefData prefData = panel . getPrefData ( ) ; PrefManager . getInstance ( ) . setPrefData ( prefData ) ; } }
11469	private void beginEnterTransition ( ) { Views . from ( mDetailsContent ) . animateWith ( this , R . anim . translaterightandfadein ) . withDelayBetweenEachChild ( _NUM ) . start ( ) ; }
11493	public static int px2dip ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
11516	public void drawUndirectedEdge ( String label1 , String label2 ) { }
11524	public static Drawable bitmapToDrawable ( Bitmap bitmap ) { return bitmap == _NULL ? _NULL : new BitmapDrawable ( bitmap ) ; }
11556	public void pause ( ) { }
11618	private Value dereference ( SoftReference < DoubleRef < Key , Value >> ref ) { if ( ref == _NULL ) return _NULL ; DoubleRef < Key , Value > doubleRef = ref . get ( ) ; return doubleRef == _NULL ? _NULL : doubleRef . getValue ( ) ; }
11641	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR select what = previous ; _CHAR ) ; }
11642	@ Deprecated public void clearDiscCache ( ) { clearDiskCache ( ) ; }
11645	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set networkData = _CHAR + ClassificationType . KEGG + _CHAR ; _CHAR ) ; }
11655	public static Observable < GoogleApiClient > observable ( Context context , Api api ) { return GoogleApiClientObservable . create ( context . getApplicationContext ( ) , new ApiDefinition ( api ) ) ; }
11657	public PagesGetQuery pageId ( Integer value ) { return unsafeParam ( _CHAR page_id _CHAR , value ) ; }
11662	public void hideTooltip ( ) { logger . trace ( _CHAR Hiding tooltip ... _CHAR ) ; hideRequested = _BOOL ; super . hide ( ) ; }
11673	public void selectFirstSymbol ( ) { if ( SelectedSymbol . getInstance ( ) . getSld ( ) != _NULL ) { symbolTree . setSelectionRow ( _NUM ) ; } else { if ( displayPanel != _NULL ) { displayPanel . show ( _NULL , _NULL ) ; } if ( renderList != _NULL ) { for ( RenderSymbolInterface render : renderList ) { render . renderSymbol ( ) ; } } } }
11686	Status readStatus ( Element el ) { NodeList list = el . getElementsByTagName ( _CHAR status _CHAR ) ; if ( list == _NULL || list . getLength ( ) == _NUM ) return DomainSuffix . DEFAULT_STATUS ; return Status . valueOf ( list . item ( _NUM ) . getFirstChild ( ) . getNodeValue ( ) ) ; }
11717	public double magnitude ( ) { return Math . sqrt ( w * w + x * x + y * y + z * z ) ; }
11741	@ NonNull public static < E > Optional < E > empty ( ) { return new None < > ( ) ; }
11743	public Interceptor [ ] buildResourceInterceptors ( Class < ? extends Resource > resourceClass ) { Interceptors before = resourceClass . getAnnotation ( Interceptors . class ) ; return before != _NULL ? createInterceptors ( before ) : NULL_INTERCEPTOR_ARRAY ; }
11770	public NotesGetByIdQuery needWiki ( Boolean value ) { return unsafeParam ( _CHAR need_wiki _CHAR , value ) ; }
11855	private void createUI ( ) { setLayout ( new BorderLayout ( ) ) ; colourRampMap = ColourRampFactory . getColourRampMap ( ) ; createTopPanel ( ) ; createEditPanel ( ) ; }
11869	@ Override public void notationDecl ( String name , String publicId , String systemId ) throws SAXException { allowXMLCatalogPI = _BOOL ; if ( dtdHandler != _NULL ) { dtdHandler . notationDecl ( name , publicId , systemId ) ; } }
11876	public static void resetContext ( ) { contexts . set ( _NULL ) ; }
11879	private void checkDimensionsEquality ( final int d1 , final int d2 ) throws MathIllegalArgumentException { if ( d1 != d2 ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH , d2 , d1 ) ; } }
11904	void clearBridgeSecret ( ) { expectedBridgeSecret =- _NUM ; }
11920	public String toJson ( ) throws JsonGenerationException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . writeValueAsString ( this ) ; }
11929	public AccountChangePasswordQuery oldPassword ( String value ) { return unsafeParam ( _CHAR old_password _CHAR , value ) ; }
11942	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR Stroke . xml _CHAR ) ; fillFactory . populate ( this , fieldConfigManager ) ; }
11979	private void signOut ( ) { mFirebaseAuth . signOut ( ) ; Auth . GoogleSignInApi . signOut ( mGoogleApiClient ) ; startActivity ( new Intent ( this , LoginActivity . class ) ) ; finish ( ) ; }
12002	public void registerOnSharedPreferenceChangeListener ( SharedPreferences . OnSharedPreferenceChangeListener listener ) { preferences . registerOnSharedPreferenceChangeListener ( listener ) ; }
12008	@ Override public void backgroundColourUpdate ( Color backgroundColour ) { mapPane . setBackground ( backgroundColour ) ; }
12021	public static DistributedLogClientBuilder newBuilder ( ) { return new DistributedLogClientBuilder ( ) ; }
12023	public void dataSourceLoaded ( DataSourceInterface dataSource ) { dataSourceAttributePanel . dataSourceLoaded ( dataSource ) ; }
12043	protected AudioAddQuery audioId ( int value ) { return unsafeParam ( _CHAR audio_id _CHAR , value ) ; }
12045	private void unloadDataStore ( ) { if ( dataSourceInfo != _NULL ) { notifyDataSourceAboutToUnloaded ( dataSourceInfo . getDataStore ( ) ) ; dataSourceInfo . unloadDataStore ( ) ; } if ( exampleDataSourceInfo != _NULL ) { notifyDataSourceAboutToUnloaded ( exampleDataSourceInfo . getDataStore ( ) ) ; exampleDataSourceInfo . unloadDataStore ( ) ; } }
12057	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + UniFrac . TOPOLOGICAL_UNIFRAC + _CHAR ; _CHAR ) ; }
12069	private static void populate ( ) { if ( descriptionMap . isEmpty ( ) ) { descriptionMap . put ( jpg , _CHAR JPEG ( *. png ) _CHAR ) ; descriptionMap . put ( gif , _CHAR GIF ( *. gif ) _CHAR ) ; descriptionMap . put ( tif , _CHAR TIFF ( *. tif ) _CHAR ) ; descriptionMap . put ( png , _CHAR PNG ( *. png ) _CHAR ) ; } }
12085	public void actionPerformed ( ActionEvent ev ) { Color color = ChooseColorDialog . showChooseColorDialog ( getViewer ( ) . getFrame ( ) , _CHAR Choose label fill color _CHAR , _NULL ) ; if ( color != _NULL ) execute ( _CHAR set labelFillColor = _CHAR + color . getRed ( ) + _CHAR _CHAR + color . getGreen ( ) + _CHAR _CHAR + color . getBlue ( ) + _CHAR ; _CHAR ) ; }
12096	public static void main ( String [ ] args ) { PrefPanel panel = new PrefPanel ( ) ; panel . pack ( ) ; panel . setVisible ( _BOOL ) ; }
12103	@ Deprecated public void clearDiscCache ( ) { clearDiskCache ( ) ; }
12106	public void disconnectAll ( ) { for ( final MqttAsyncConnection connection : getMqttConnections ( ) ) { disconnectFromBroker ( connection ) ; } }
12134	@ Override public void backgroundColourUpdate ( Color backgroundColour ) { }
12136	@ Override public void stop ( ) throws ConnectException { fLog . trace ( _CHAR Stopping _CHAR ) ; try { iWriter . close ( ) ; } catch ( IOException exception ) { throw new ConnectException ( exception ) ; } }
12140	@ Override public boolean equals ( Object o ) { return o instanceof AirMapPilot && getPilotId ( ) . equals ( ( ( AirMapPilot ) o ) . getPilotId ( ) ) ; }
12200	public void addListener ( UndoStateInterface listener ) { listenerList . add ( listener ) ; }
12219	@ Override public void accept ( IQueryExecutor executor , ISpaceProxy space , Transaction txn , int readModifier , int max ) throws SQLException { executor . execute ( this , space , txn , readModifier , max ) ; }
12242	@ Override public Filter createFilter ( ) { return new DuringExtended ( ) ; }
12250	@ Override public Class < ? extends Task > taskClass ( ) { return PostgreSQLSinkTask . class ; }
12293	@ Override public void saveSLDData ( SLDDataInterface sldData ) { boolean saved = _BOOL ; for ( ExtensionInterface extension : extensionList ) { if ( saved == _BOOL ) { saved = extension . save ( sldData ) ; } } }
12353	public GroupsEditQuery wiki ( GroupsEditWall value ) { return unsafeParam ( _CHAR wiki _CHAR , value ) ; }
12369	public MarketGetQuery albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
12440	protected void cancelButtonPressed ( ) { setVisible ( _BOOL ) ; }
12454	private double sigmoid ( double x ) { x = _NUM . _NUM * x - _NUM . _NUM ; return ( _NUM . _NUM / ( _NUM . _NUM + Math . exp ( - _NUM . _NUM * x ) ) ) ; }
12492	@ Override public void cancel ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( cancelButton ) ) ; }
12544	@ Override public boolean equals ( Object o ) { return o instanceof AirMapAirportProperties && getIcao ( ) . equals ( ( ( AirMapAirportProperties ) o ) . getIcao ( ) ) ; }
12578	public void addGlobalNotationDecl ( XSNotationDecl decl ) { fGlobalNotationDecls . put ( decl . fName , decl ) ; decl . setNamespaceItem ( this ) ; }
12590	public static void close ( URLConnection conn ) { if ( conn instanceof HttpURLConnection ) { ( ( HttpURLConnection ) conn ) . disconnect ( ) ; } }
12600	public void actionPerformed ( ActionEvent ev ) { final SamplesViewer samplesViewer = ( ( SamplesViewer ) getViewer ( ) ) ; final Collection < String > samples = samplesViewer . getSamplesTable ( ) . getSelectedSamples ( ) ; if ( samples . size ( ) > _NUM ) execute ( _CHAR set nodeShape = none sample = _CHAR_CHAR_CHAR _CHAR_CHAR_CHAR ; _CHAR ) ; }
12616	@ Override public void actionPerformed ( ActionEvent ev ) { AttributesWindow viewer = ( AttributesWindow ) getViewer ( ) ; if ( viewer != _NULL ) { if ( TaxonomyData . getName2IdMap ( ) . get ( viewer . selectedTaxon ) != _NUM ) { execute ( _CHAR show webpage taxon = _CHAR_CHAR_CHAR ; _CHAR ) ; } } }
12656	public void resetTracking ( ) { totalTime = _NUM ; drawCycles = _NUM ; }
12665	@ Override public void characters ( char [ ] ch , int start , int length ) throws SAXException { if ( documentHandler != _NULL ) { documentHandler . characters ( ch , start , length ) ; } }
12671	@ Override public boolean equals ( Object o ) { return o instanceof AirMapTraffic && ( ( AirMapTraffic ) o ) . getId ( ) . equals ( getId ( ) ) ; }
12673	public MarketSearchQueryWithExtended tags ( Integer ... value ) { return unsafeParam ( _CHAR tags _CHAR , value ) ; }
12687	public static Quaternion subtract ( final Quaternion q1 , final Quaternion q2 ) { return new Quaternion ( q1 . getQ0 ( ) - q2 . getQ0 ( ) , q1 . getQ1 ( ) - q2 . getQ1 ( ) , q1 . getQ2 ( ) - q2 . getQ2 ( ) , q1 . getQ3 ( ) - q2 . getQ3 ( ) ) ; }
12690	public int code ( ) { return code ; }
12696	public void populateBooleanField ( FieldIdEnum fieldId , Boolean value ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( value != _NULL ) { ( ( FieldConfigValuePopulateInterface ) fieldConfig ) . populateField ( value ) ; } else { fieldConfig . revertToDefaultValue ( ) ; } }
12700	public WallPostQuery markAsAds ( Boolean value ) { return unsafeParam ( _CHAR mark_as_ads _CHAR , value ) ; }
12705	private void determineGeometryType ( GeometryType type ) { Class < ? > bindingType = type . getBinding ( ) ; dsInfo . setGeometryType ( GeometryTypeMapping . getGeometryType ( bindingType ) ) ; }
12729	public Speaker persist ( final Speaker speaker ) { final String id = UUID . randomUUID ( ) . toString ( ) ; speaker . setId ( id ) ; this . speakers . put ( id , speaker ) ; return speaker ; }
12742	protected AdsGetCampaignsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
12752	public void addGlobalGroupDecl ( XSGroupDecl decl ) { fGlobalGroupDecls . put ( decl . fName , decl ) ; decl . setNamespaceItem ( this ) ; }
12777	public void drawChart ( Graphics2D gc ) { colorByClasses = _BOOL ; colorBySeries = _BOOL ; doDraw ( gc ) ; }
12780	public void clearDiscCache ( ) { checkConfiguration ( ) ; configuration . discCache . clear ( ) ; }
12783	public static JsonElement createRenderer ( IFeatureRenderer renderer ) { if ( instance != _NULL ) { return instance . internal_createRenderer ( renderer ) ; } return _NULL ; }
12795	public void removeActivity ( Activity activity ) { if ( activityStack == _NULL ) { activityStack = new Stack < Activity > ( ) ; } activityStack . remove ( activity ) ; }
12801	public UsersSearchQuery birthMonth ( Integer value ) { return unsafeParam ( _CHAR birth_month _CHAR , value ) ; }
12816	protected soot . Local generateLocal ( polyglot . types . Type polyglotType ) { soot . Type type = Util . getSootType ( polyglotType ) ; return lg . generateLocal ( type ) ; }
12861	public void abort ( ) { checkReady ( ) ; state = DONE ; LIB . mdb_txn_abort ( ptr ) ; }
12884	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
12897	public void downloadFile ( TRSHttpRequest request , TRSFileDownloadHttpCallback callback ) { mProvider . downloadFile ( request , callback ) ; }
12927	@ Override protected void onPause ( ) { super . onPause ( ) ; Log . i ( TAG , _CHAR onPause _CHAR ) ; if ( mCamera != _NULL ) { mCamera . stopPreview ( ) ; } }
12932	public Builder withDenyDialogMsg ( @ StringRes int denyDialogMsgRes ) { buildObj . denyDialogMsgRes = denyDialogMsgRes ; buildObj . showDenyDialog = _BOOL ; return this ; }
12973	public static boolean hasJellyBeanMr2 ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR2 ; }
12975	public synchronized void clear ( ) { this . nonEmptyReverseLookup = new MyConcurrentHashMap < PathEdge < N , D > , D > ( ) ; }
12988	public void add ( String intercept , AndServerRequestHandler requestHandler ) { this . mRequestHandlerMap . put ( intercept , requestHandler ) ; }
13001	private void start ( ) { if ( start != _NUM ) { LOG . warn ( _CHAR Tried to start timer that is already running : { } _CHAR , name ) ; return ; } start = System . nanoTime ( ) ; }
13003	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
13020	public final boolean hasIDConstraints ( ) { return fGlobalIDConstraintDecls . getLength ( ) > _NUM ; }
13034	public void addParameter ( FilterNameParameter parameter ) { parameterList . add ( parameter ) ; }
13048	public String toJson ( ) throws JsonGenerationException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . writeValueAsString ( this ) ; }
13054	@ Override public void vendorOptionsUpdated ( List < VersionData > vendorOptionVersionsList ) { this . vendorOptionVersionList = vendorOptionVersionsList ; updateVendorOptionPanels ( ) ; }
13070	public boolean removeAll ( Collection c ) { throw new UnsupportedOperationException ( ) ; }
13092	@ Override public void confirm ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( activateButton ) ) ; }
13106	public void goToPreviousBackStack ( ) throws NavigatorException { FragmentManager fragmentManager = ( ( FragmentActivity ) mContextReference . getContext ( ) ) . getSupportFragmentManager ( ) ; if ( canGoBack ( fragmentManager ) ) { fragmentManager . popBackStack ( ) ; } else { throw new NavigatorException ( _CHAR You do n _CHAR_CHAR ) ; } }
13147	public static void init ( PresenterStorage storage ) { mInstance = new PresenterFactory ( storage ) ; }
13199	public static Histogram subtract ( Histogram x , Histogram y ) { return new Histogram ( Stream . concat ( x . stream ( ) , y . stream ( ) . map ( _NULL ) ) ) ; }
13213	public void addJVMArg ( String args ) { if ( args == _NULL ) return ; List < String > listJvmArgs = ExecutorUtils . tokenize ( args , _NULL ) ; for ( String sp : listJvmArgs ) addJVMArg ( new Argument ( sp ) ) ; }
13220	public static Bitmap drawableToBitmap ( Drawable drawable ) { return drawable == _NULL ? _NULL : ( ( BitmapDrawable ) drawable ) . getBitmap ( ) ; }
13233	public static Bitmap toBitmap ( byte [ ] bytes ) { return toBitmap ( bytes , - _NUM , - _NUM ) ; }
13236	public RevealBuilder withRevealDuration ( final int revealDuration ) { this . mRevealDuration = revealDuration ; return this ; }
13237	protected PollsEditQuery pollId ( int value ) { return unsafeParam ( _CHAR poll_id _CHAR , value ) ; }
13254	public void revertSelf ( ) { direct = ! direct ; }
13349	public static boolean hasJellyBean ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ; }
13352	Landlord landlord ( ) { return landlord ; }
13392	public static void w ( String tag , String s , Throwable e ) { if ( LOG . WARN >= LOGLEVEL ) Log . w ( tag , s , e ) ; }
13400	public static Drawable bitmapToDrawable ( Bitmap bitmap ) { return bitmap == _NULL ? _NULL : new BitmapDrawable ( bitmap ) ; }
13415	public void deleteShard ( ) throws IOException { if ( rootDir != _NULL ) { deleteAllFiles ( rootDir ) ; } }
13426	@ Override public Filter createFilter ( ) { return new EqualsExtended ( ) ; }
13431	public MarketGetQueryWithExtended albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
13432	public void openDatabase ( ) { String path = DB_PATH + DB_NAME ; mDatabase = SQLiteDatabase . openDatabase ( path , _NULL , SQLiteDatabase . OPEN_READONLY ) ; }
13435	public DistributedLogClient build ( ) { return buildClient ( ) ; }
13447	public VideoCreateCommentQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
13471	public PhotosGetCommentsQuery startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
13506	public static int decodeUnicodeNotation ( String unicodeString ) { String string = unicodeString . substring ( UNICODE_PREFIX . length ( ) ) ; int result = ( int ) Long . parseLong ( string , _NUM ) ; return ( result ) ; }
13535	public static String formatPercent ( int downloadSize , int fileSize ) { float num = ( float ) downloadSize / fileSize ; float percent = ( ( float ) ( int ) ( num * _NUM ) ) / _NUM ; return String . valueOf ( percent + _CHAR % _CHAR ) ; }
13548	public void addWildPokemons ( Collection < WildPokemon > wildPokemons ) { if ( wildPokemons == _NULL || wildPokemons . isEmpty ( ) ) { return ; } complete = _BOOL ; this . wildPokemons . addAll ( wildPokemons ) ; }
13549	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR geoserver / GeoServerLabel . xml _CHAR ) ; }
13550	public static BuildSystem defaultBuildSystem ( ) { return BuildSystemProvider . defaultBuildSystem ( ) . buildSystem ( ) ; }
13551	@ Override public void createUI ( ) { createFieldPanel ( _NUM , _CHAR _CHAR ) ; initialised = _BOOL ; }
13564	private void enableSubGroups ( boolean enabled ) { for ( FieldConfigBase field : getFieldConfigList ( ) ) { FieldPanel panel = field . getPanel ( ) ; if ( panel != _NULL ) { panel . enablePanel ( enabled ) ; } } for ( GroupConfigInterface subGroup : subGroupList ) { subGroup . enable ( enabled ) ; } }
13565	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
13588	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set nodeShape = none ; _CHAR ) ; }
13608	public static Bitmap blurNatively ( Bitmap original , int radius , boolean canReuseInBitmap ) { if ( radius < _NUM ) { return _NULL ; } Bitmap bitmap = buildBitmap ( original , canReuseInBitmap ) ; if ( radius == _NUM ) { return bitmap ; } blurBitmap ( bitmap , radius ) ; return ( bitmap ) ; }
13609	public GroupsSetCallbackSettingsQuery messageDeny ( Boolean value ) { return unsafeParam ( _CHAR message_deny _CHAR , value ) ; }
13652	public void flip ( int i ) { bits [ i / _NUM ] ^= _NUM << ( i & _NUM ) ; }
13655	private void addSymbol ( EsriSymbolInterface symbolObj ) { logger . debug ( _CHAR \ t _CHAR + symbolObj . getName ( ) ) ; symbolMap . put ( symbolObj . getName ( ) , symbolObj ) ; }
13657	public static void stopMethodTracing ( ) { if ( isDebug ) { Debug . stopMethodTracing ( ) ; } }
13687	public static SM_SYSTEM_MESSAGE STR_CMD_WHISHPER_OUTPUT_NPC ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13695	public DocsEditQuery edit ( UserActor actor , int ownerId , int docId ) { return new DocsEditQuery ( getClient ( ) , actor , ownerId , docId ) ; }
13708	private void refreshAttributes ( ) { mbeanAttributes . refreshAttributes ( ) ; }
13735	public static void close ( ) { out . close ( ) ; }
13752	public boolean supportsSeek ( ) { return _BOOL ; }
13763	public static Drawable bitmapToDrawable ( Bitmap bitmap ) { return bitmap == _NULL ? _NULL : new BitmapDrawable ( bitmap ) ; }
13771	public static Document openDocument ( OutputStream outputStream , Rectangle pageSize ) { try { Document document = new Document ( pageSize ) ; PdfWriter . getInstance ( document , outputStream ) ; document . open ( ) ; return document ; } catch ( DocumentException ex ) { throw new RuntimeException ( _CHAR Failed to open PDF document _CHAR , ex ) ; } }
13780	public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_TIME_10 ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
13800	public void openThriftReader ( String filePath ) throws IOException { thriftReader = new ThriftReader ( filePath ) ; thriftReader . open ( ) ; }
13807	public void onFileChange ( final File file ) { }
13820	public boolean isDirectory ( ) { return isDirectory ; }
13826	private int findMax ( int [ ] lastPositions ) { int max = lastPositions [ _NUM ] ; for ( int value : lastPositions ) { if ( value > max ) { max = value ; } } return max ; }
13832	public static void stopTiming ( String timePhaseName ) { TimedPhase timePhase = RLOG . get ( ) . times . get ( timePhaseName ) ; if ( timePhase == _NULL ) { LOG . warn ( _CHAR Tried to stop non - existent phase : { } _CHAR , timePhaseName ) ; return ; } timePhase . stop ( ) ; }
13897	@ Override public IAssignmentAlgorithm createAssignmentAlgorithm ( ) { return new AssignmentUsingLCAForTaxonomy ( cName , usePercentIdentityFilter ) ; }
13914	public static void toggleKeyboradState ( Context context , EditText edit ) { edit . setFocusable ( _BOOL ) ; edit . setFocusableInTouchMode ( _BOOL ) ; edit . requestFocus ( ) ; InputMethodManager inputManager = ( InputMethodManager ) context . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; inputManager . toggleSoftInput ( InputMethodManager . SHOW_FORCED , _NUM ) ; }
13937	@ Override public void emptyElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { }
13946	public final boolean equals ( Object obj ) { if ( toString ( ) == _NULL ) { return ( obj != _NULL ) && ( obj . toString ( ) == _NULL ) ; } if ( obj instanceof Encoding ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
13957	public DeriveColumnsFromTimeTransform build ( ) { return new DeriveColumnsFromTimeTransform ( this ) ; }
14002	private static boolean parse ( ) { URLClassLoader cLoader = ( URLClassLoader ) ManifestParser . class . getClassLoader ( ) ; try { URL url = cLoader . findResource ( _CHAR META - INF / MANIFEST . MF _CHAR ) ; manifest = new Manifest ( url . openStream ( ) ) ; return _BOOL ; } catch ( IOException ex ) { ex . printStackTrace ( ) ; return _BOOL ; } }
14006	public void actionPerformed ( ActionEvent ev ) { execute ( getSyntax ( ) ) ; }
14018	private void rejectDuelRequest ( Player requester , Player responder ) { log . debug ( _CHAR [ Duel ] Player _CHAR + responder . getName ( ) + _CHAR rejected duel request from _CHAR + requester . getName ( ) ) ; PacketSendUtility . sendPacket ( requester , new SM_DUEL_REQUEST_CANCEL ( _NUM , responder . getName ( ) ) ) ; PacketSendUtility . sendPacket ( responder , SM_SYSTEM_MESSAGE . STR_DUEL_REJECT_DUEL ( requester . getName ( ) ) ) ; }
14044	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( getSyntax ( ) ) ; }
14073	public void clearDiskCache ( ) { checkConfiguration ( ) ; configuration . diskCache . clear ( ) ; }
14076	@ Override public Filter createFilter ( List < Expression > parameterList ) { IsNullImpl filter = _NULL ; if ( ( parameterList == _NULL ) || parameterList . isEmpty ( ) ) { filter = new IsNullExtended ( ) ; } else { filter = new IsNullExtended ( parameterList . get ( _NUM ) ) ; } return filter ; }
14097	public final boolean equals ( Object obj ) { return super . equals ( obj ) ; }
14104	@ Override public Filter createFilter ( ) { return new TEqualsExtended ( ) ; }
14143	public static void onAttack ( NpcAI2 npcAI , Creature creature ) { handleNumericEvent ( npcAI , creature , ShoutEventType . ATTACK_K ) ; }
14163	private String encodePanelKey ( String key , PopulateDetailsInterface panel ) { return key + _CHAR / _CHAR + panel . getClass ( ) . getName ( ) ; }
14186	@ Override public void applyDimensionBehaviour ( ) { wrapContent ( ) ; }
14188	protected void reconcileDefaultAttributes ( ) { if ( attributes != _NULL ) { NamedNodeMapImpl defaults = getDefaultAttributes ( ) ; attributes . reconcileDefaults ( defaults ) ; } }
14215	public AuthCheckPhoneQuery authByPhone ( Boolean value ) { return unsafeParam ( _CHAR auth_by_phone _CHAR , value ) ; }
14238	public synchronized void cancel ( ) { }
14253	public void remove ( ) { throw new UnsupportedOperationException ( ) ; }
14262	public Matrix inverse ( ) { return solve ( identity ( m , m ) ) ; }
14305	public boolean isIgnore ( ) { return _BOOL ; }
14328	public void actionPerformed ( ActionEvent ev ) { Color color = ChooseColorDialog . showChooseColorDialog ( getViewer ( ) . getFrame ( ) , _CHAR Choose label color _CHAR , _NULL ) ; if ( color != _NULL ) execute ( _CHAR set labelColor = _CHAR + color . getRed ( ) + _CHAR _CHAR + color . getGreen ( ) + _CHAR _CHAR + color . getBlue ( ) + _CHAR ; _CHAR ) ; }
14384	private static int computeBlastFrame ( int frame ) { return frame <= _NUM ? frame + _NUM : _NUM - frame ; }
14425	private void storeLegion ( Legion legion ) { storeLegion ( legion , _BOOL ) ; }
14434	public GroupsSetCallbackSettingsQuery photoNew ( Boolean value ) { return unsafeParam ( _CHAR photo_new _CHAR , value ) ; }
14453	@ Nullable public Variant findVariantByName ( @ NotNull String variantName ) { return myVariantsByName . get ( variantName ) ; }
14478	public void revertToOriginal ( ) { this . minScale = this . originalMinScale ; this . maxScale = this . originalMaxScale ; this . minimumScaleUpdated = _BOOL ; this . maximumScaleUpdated = _BOOL ; }
14507	public OrdersChangeStateQuery changeState ( UserActor actor , int orderId , OrdersChangeStateAction action ) { return new OrdersChangeStateQuery ( getClient ( ) , actor , orderId , action ) ; }
14573	@ Override public Filter createFilter ( ) { return new AndExtended ( ) ; }
14586	public static WxMenu fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxMenu . class ) ; }
14599	public static WxUserListResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxUserListResult . class ) ; }
14608	public void show ( ) { mDialog . show ( ) ; mUsernameView . requestFocus ( ) ; }
14632	public void removeScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . remove ( listener ) ; }
14638	public synchronized void close ( ) { }
14642	public void actionPerformed ( ActionEvent ev ) { final SamplesViewer samplesViewer = ( ( SamplesViewer ) getViewer ( ) ) ; final Collection < String > samples = samplesViewer . getSamplesTable ( ) . getSelectedSamples ( ) ; if ( samples . size ( ) > _NUM ) execute ( _CHAR set nodeShape = square sample = _CHAR_CHAR_CHAR _CHAR_CHAR_CHAR ; _CHAR ) ; }
14683	@ Override public void rightMouseButton ( Object selectedItem , MouseEvent e ) { }
14684	private void checkSignificanceLevel ( final double alpha ) throws MathIllegalArgumentException { if ( alpha <= _NUM || alpha > _NUM . _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . SIGNIFICANCE_LEVEL , alpha , _NUM . _NUM , _NUM . _NUM ) ; } }
14742	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( getSyntax ( ) ) ; }
14754	public GroupsEditQuery topics ( GroupsEditTopics value ) { return unsafeParam ( _CHAR topics _CHAR , value ) ; }
14758	private void showMultiPanel ( WKTType wktType ) { boolean enabled = _BOOL ; if ( wktType != _NULL ) { wktType . canHaveMultipleShapes ( ) ; } multiList . setVisible ( enabled ) ; addMultiButton . setEnabled ( enabled ) ; removeMultiButton . setEnabled ( enabled ) ; }
14776	@ Override public int read ( ) throws IOException { if ( eof ) { throw new IOException ( _CHAR Read after end of file _CHAR ) ; } if ( position == size ) { return doEndOfFile ( ) ; } position ++ ; return processChar ( ) ; }
14783	public static final void fillPolygon ( GL2 gl , Polygon p ) { RenderUtilities . fillPolygon ( gl , p . getVertices ( ) ) ; }
14794	public static boolean hasJellyBean ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ; }
14846	public DistributedLogClientBuilder handshakeTracing ( boolean enabled ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setHandshakeTracingEnabled ( enabled ) ; return newBuilder ; }
14864	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR select = none ; _CHAR ) ; }
14876	private void checkDimensionsEquality ( final int d1 , final int d2 ) throws MathIllegalArgumentException { if ( d1 != d2 ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH , d2 , d1 ) ; } }
14896	private void createUI ( ) { readConfigFileNoScrollPane ( _NULL , this , _CHAR symboltype / WKT . xml _CHAR ) ; registerForTextFieldButton ( FieldIdEnum . WKT , this ) ; }
14900	private void readObject ( ObjectInputStream ois ) throws ClassNotFoundException , IOException { ois . defaultReadObject ( ) ; MatrixUtils . deserializeRealVector ( this , _CHAR coefficients _CHAR , ois ) ; }
14932	public synchronized void close ( ) { closed = _BOOL ; list . add ( _NULL ) ; notify ( ) ; }
14944	public static PhasedBackoffWaitStrategy withLock ( long spinTimeout , long yieldTimeout , TimeUnit units ) { return new PhasedBackoffWaitStrategy ( spinTimeout , yieldTimeout , units , new BlockingWaitStrategy ( ) ) ; }
14958	protected AdsGetDemographicsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
14965	private void populateScaleRange ( boolean enabled ) { GroupConfigInterface group = getGroup ( GroupIdEnum . SCALE ) ; group . enable ( enabled ) ; }
14968	@ Override public long length ( ) { return data . size ( ) ; }
14984	@ PickTriggerResult public int fromMultipleSources ( @ StringRes final int pTitleRes , @ NonNull final PickSource ... pPickSources ) { return this . fromMultipleSources ( this . mContext . getString ( pTitleRes ) , pPickSources ) ; }
14992	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR select what = all ; _CHAR ) ; }
15011	public void addGroup ( OptionGroup group ) { if ( group != _NULL ) { this . optionMap . put ( group . getId ( ) . toString ( ) , group ) ; this . optionList . add ( group ) ; } }
15014	@ Override public void applyDimensionBehaviour ( ) { wrapContent ( ) ; }
15040	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
15057	@ Override public List < Role > searchRole ( Role role ) { return sessionTemplate . selectList ( NAMESPACE + _CHAR . searchRole _CHAR , role ) ; }
15062	public void onShutdown ( ) { log . info ( _CHAR Starting data save on shutdown . '' ) ; legionWhUpdateTask . cancel ( _BOOL ) ; new LegionWhUpdateTask ( ) . run ( ) ; log . info ( _CHAR Data successfully saved . '' ) ; }
15068	public synchronized void clear ( ) { this . nonEmptyForwardLookup . clear ( ) ; this . nonEmptyLookupByTargetNode . clear ( ) ; this . nonEmptyReverseLookup . clear ( ) ; }
15074	public int start_state ( ) { return _NUM ; }
15078	public static String advertisedAddress ( ServiceConfiguration config ) { return ServiceConfigurationUtils . getDefaultOrConfiguredAddress ( config . getAdvertisedAddress ( ) ) ; }
15082	public void restMode ( ) { SummonsService . restMode ( getOwner ( ) ) ; }
15094	@ RequiresPermission ( Manifest . permission . WRITE_EXTERNAL_STORAGE ) public static boolean writeText ( String filepath , String content ) { return writeText ( filepath , content , _CHAR utf - _NUM _CHAR ) ; }
15104	@ Deprecated @ Override public final String readLine ( ) throws IOException { return dis . readLine ( ) ; }
15120	public void stopAutoCycle ( ) { if ( mCycleTask != _NULL ) { mCycleTask . cancel ( ) ; } if ( mCycleTimer != _NULL ) { mCycleTimer . cancel ( ) ; } if ( mResumingTimer != _NULL ) { mResumingTimer . cancel ( ) ; } if ( mResumingTask != _NULL ) { mResumingTask . cancel ( ) ; } mAutoCycle = _BOOL ; mCycling = _BOOL ; }
15143	public void onSuccess ( int statusCode , Header [ ] headers , JSONObject response ) { }
15172	public TypeVariable typeVariable ( ) { int id = typeVariableList . size ( ) ; typeVariableList . add ( _NULL ) ; TypeVariable result = new TypeVariable ( id , this ) ; typeVariableList . set ( id , result ) ; return result ; }
15190	private void handleOpTimeoutH ( ) { switch ( mVerb ) { case VERB_BINDING : closeAndCleanupJobH ( _BOOL ) ; break ; case VERB_STARTING : closeAndCleanupJobH ( _BOOL ) ; break ; case VERB_STOPPING : closeAndCleanupJobH ( _BOOL ) ; break ; case VERB_EXECUTING : sendStopMessageH ( ) ; break ; default : closeAndCleanupJobH ( _BOOL ) ; } }
15218	public Future execute ( CompletionCallback callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . task_ , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
15237	@ Override public void elementDecl ( String name , String contentModel , Augmentations augs ) throws XNIException { }
15241	public int read ( ) { return bytes [ pos ++ ] & _NUM ; }
15248	public void addData ( TreePath treePath , Object userObject , DataFlavor dataFlavour ) { InternalTransferredData data = new InternalTransferredData ( ) ; data . treePath = treePath ; data . userObject = userObject ; data . dataFlavour = dataFlavour ; dataList . add ( data ) ; }
15252	private void createUserLayerDataSources ( ) { if ( inlineDataSource == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR No inline data source creation object set _CHAR ) ; } else { userLayerDataSourceInfo = inlineDataSource . connect ( this . editorFileInterface ) ; if ( userLayerDataSourceInfo != _NULL ) { for ( DataSourceInfo dsInfo : userLayerDataSourceInfo ) { if ( dsInfo . hasData ( ) ) { dsInfo . populateFieldMap ( ) ; } } } } }
15302	@ Override public boolean hasRaster ( Symbolizer symbolizer ) { return ( symbolizer instanceof RasterSymbolizer ) ; }
15351	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR show replaceToolbar = _CHAR + ! isSelected ( ) + _CHAR ; _CHAR ) ; }
15377	public WallReportCommentQuery reason ( ReportReason value ) { return unsafeParam ( _CHAR reason _CHAR , value ) ; }
15395	public UsersSearchQuery schoolYear ( Integer value ) { return unsafeParam ( _CHAR school_year _CHAR , value ) ; }
15488	public void stop ( ) { stop ( _BOOL ) ; }
15535	public ItemToMaterialCursor queryItemsForMaterial ( long mat_item_id ) { return mHelper . queryItemsForMaterial ( mat_item_id ) ; }
15540	public int size ( ) { return mails . size ( ) ; }
15547	public static boolean hasJellyBeanMr1 ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ; }
15579	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set mode = _CHAR + ( Comparer . COMPARISON_MODE . ABSOLUTE ) + _CHAR ; _CHAR ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . getCommandManager ( ) . updateEnableState ( ) ; }
15587	@ Override public void actionPerformed ( ActionEvent ev ) { getViewer ( ) . selectComponent ( getViewer ( ) . getNJTab ( ) ) ; }
15595	private void dismissProgressDialog ( ) { if ( isProgressDialogShowing ( ) ) { mProgressDialog . dismiss ( ) ; mProgressDialog = _NULL ; } }
15598	public NotesGetQuery userId ( Integer value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
15609	private void addValue ( String key , String value ) { if ( ( key == _NULL ) || key . isEmpty ( ) ) { keyList . add ( _CHAR _CHAR ) ; valueMap . put ( _CHAR _CHAR , value ) ; } else { keyList . add ( key ) ; valueMap . put ( key , value ) ; } }
15610	public void removePadding ( ) { if ( padding != _NULL ) { box . remove ( padding ) ; } }
15624	@ Override public Object clone ( ) { return new RowNumNode ( startIndex , endIndex ) ; }
15655	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR copy what = clusterViewer ; _CHAR ) ; }
15678	@ NotNull public ImageDescription describeImage ( @ NotNull String imageUrl ) { return computerVisionBuilder . describeImage ( _NUM , imageUrl ) . withResult ( ) ; }
15680	private static synchronized void populateNamespaceMap ( ) { if ( namespaceMap == _NULL ) { namespaceMap = new HashMap < String , String > ( ) ; namespaceMap . put ( OGC_NAMESPACE_URL , OGC_NAMESPACE ) ; namespaceMap . put ( SLD_NAMESPACE_URL , SLD_NAMESPACE ) ; } }
15733	public AppsGetCatalogQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
15739	@ Override public Filter createFilter ( ) { return new DisjointExtended ( ) ; }
15741	protected void reportError ( String key , Object [ ] arguments ) throws XNIException { throw new XNIException ( ( fErrorReporter . getMessageFormatter ( XPointerMessageFormatter . XPOINTER_DOMAIN ) ) . formatMessage ( fErrorReporter . getLocale ( ) , key , arguments ) ) ; }
15750	public static void main ( String [ ] args ) { File f = new File ( _CHAR / Users / wujun / d / workspace / giiwa / README . md _CHAR ) ; System . out . println ( md5 ( f ) ) ; }
15863	protected void onDeleteSuccess ( DragFlowLayout dfl , View child , Object data ) { }
15877	private void closeThriftWriter ( ) { if ( _NULL != dictionaryThriftWriter ) { dictionaryThriftWriter . close ( ) ; } }
15897	public Bindings add ( String property , String stateProperty , JToggleButton button , JTextArea textArea ) { registerPropertyChangeListener ( button ) ; registerPropertyChangeListener ( textArea ) ; return add ( new OptJTextAreaBinding ( property , stateProperty , button , textArea ) ) ; }
15906	public SimpleBooleanProperty autoStartProperty ( ) { return this . autoStart ; }
15928	public static void useDarkTheme ( boolean flag ) { isDarkThemeEnable = flag ; }
15987	public void register ( String key , Item value ) { register ( key , matcherOf ( value ) ) ; }
15989	public String generate ( String appName , String clientIp , Integer clientPid ) { return MD5 . generate ( appName + clientIp + clientPid , _BOOL ) ; }
16033	public void populateDoubleField ( FieldIdEnum fieldId , Double value ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( value != _NULL ) { ( ( FieldConfigValuePopulateInterface ) fieldConfig ) . populateField ( value ) ; } else { fieldConfig . revertToDefaultValue ( ) ; } }
16037	public Builder withDenyDialogMsg ( String denyDialogMsg ) { buildObj . denyDialogMsg = denyDialogMsg ; buildObj . showDenyDialog = _BOOL ; return this ; }
16086	private void fail ( String format , DruidAggregationQuery < ? > druidQuery , Interval interval ) { String message = String . format ( format , interval ) ; Exception e = new IllegalStateException ( message ) ; LOG . error ( message , e ) ; getFailureCallback ( druidQuery ) . invoke ( e ) ; }
16088	public void onFailure ( int statusCode , Header [ ] headers , Throwable throwable , JSONObject errorResponse ) { }
16124	public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_TIME_5 ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
16127	public static String printCpuInfo ( ) { String info = FileUtil . getFileOutputString ( CPU_INFO_PATH ) ; LogUtils . i ( _CHAR _______ CPU : \ n _CHAR + info ) ; return info ; }
16137	@ Override protected void onResume ( ) { super . onResume ( ) ; Log . i ( TAG , _CHAR onResume _CHAR ) ; startPreview ( ) ; }
16146	public synchronized void cancel ( ) { }
16160	void increment ( ) { assert isEnabled ( ) ; setRawCounter ( getCount ( ) + _NUM ) ; }
16191	public boolean lessThan ( DMatch it ) { return distance < it . distance ; }
16192	public GroupsCreateQuery create ( UserActor actor , String title ) { return new GroupsCreateQuery ( getClient ( ) , actor , title ) ; }
16201	private static Configuration configure ( Configuration config , String hibernateFile ) { if ( hibernateFile == _NULL ) return config . configure ( ) ; else return config . configure ( hibernateFile ) ; }
16207	public void addChangingListener ( OnWheelChangedListener listener ) { changingListeners . add ( listener ) ; }
16212	public boolean isDefaultVal ( ) { return defaultVal ; }
16252	public MarketEditQuery photoIds ( Integer ... value ) { return unsafeParam ( _CHAR photo_ids _CHAR , value ) ; }
16324	public static boolean hasJellyBeanMr1 ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ; }
16346	@ TargetApi ( Build . VERSION_CODES . CUPCAKE ) public static void image ( BitmapListener listener , String type ) { BitmapTask task = new BitmapTask ( ) ; task . setListener ( listener ) ; task . execute ( imageUrl ( type ) ) ; }
16355	private void resetLayout ( ) { mLayoutTabs = _NULL ; mBaseTab = _NULL ; }
16398	public void removeChangingListener ( OnWheelChangedListener listener ) { changingListeners . remove ( listener ) ; }
16404	private void removeTestData ( ) { alarmLogMapper . deleteAlarmLog ( ALARM_ID ) ; }
16409	protected AdsDeleteTargetGroupQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
16410	@ Override public void parse ( String systemId ) throws IOException , SAXException { allowXMLCatalogPI = _BOOL ; setupBaseURI ( systemId ) ; try { super . parse ( systemId ) ; } catch ( InternalError ie ) { explain ( systemId ) ; throw ie ; } }
16446	public boolean duplicateSample ( String sample , String newName , boolean allowReplaceSample ) { if ( allowReplaceSample || ! table . rowKeySet ( ) . contains ( newName ) ) { Map < String , Object > row = table . row ( sample ) ; return addSample ( newName , row , _BOOL , _BOOL ) ; } return _BOOL ; }
16495	public void pushBackLine ( String line ) { if ( pushedBackLine != _NULL ) System . err . println ( _CHAR Error : Push back line , but buffer not empty _CHAR ) ; pushedBackLine = line ; }
16523	public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_TIME_30 ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
16530	public static String capitalizeFirstLetter ( String original ) { if ( original == _NULL || original . length ( ) == _NUM ) { return original ; } return original . substring ( _NUM , _NUM ) . toUpperCase ( ) + original . substring ( _NUM ) . toLowerCase ( ) ; }
16533	public static int heightPixels ( Context context ) { return displayMetrics ( context ) . heightPixels ; }
16536	private void updateCities ( WheelView city , List < VChartPeriod . PeriodsBean > list ) { periodAdapter = new PeriodAdapter ( getActivity ( ) , list ) ; city . setViewAdapter ( periodAdapter ) ; city . setCurrentItem ( _NUM ) ; }
16572	public void addScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . add ( listener ) ; }
16575	public Partitions add ( String partition ) { partitions . add ( partition ) ; return this ; }
16607	public void clear ( ) { thinPath . reset ( ) ; thickPath . reset ( ) ; pathEvents . clear ( ) ; invalidate ( ) ; }
16630	private static void unknownPacket ( State state , int id ) { log . warn ( String . format ( _CHAR Unknown packet recived from Game Server : _NUM % _NUM state = % s _CHAR , id , state . toString ( ) ) ) ; }
16646	public static int pxToDp ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
16649	public Future execute ( CompletionCallback < Map < String , Object >> callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . tasks_ , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
16669	public void removeAllElements ( ) { size = _NUM ; }
16674	public void removeOrderItemAttribute ( String name ) { if ( orderItemAttributes != _NULL ) { orderItemAttributes . remove ( name ) ; } }
16675	protected void startJobAcquisitionThread ( ) { if ( asyncJobAcquisitionThread == _NULL ) { asyncJobAcquisitionThread = new Thread ( asyncJobsDueRunnable ) ; } asyncJobAcquisitionThread . start ( ) ; }
16685	public boolean isUptoDate ( ) { return isUptoDate ; }
16738	public static String collapseNewlines ( String str ) { return collapseCharacter ( str , _CHAR ) ; }
16741	public Matrix solve ( Matrix B ) { return ( m == n ? ( new LUDecomposition ( this ) ) . solve ( B ) : ( new QRDecomposition ( this ) ) . solve ( B ) ) ; }
16743	public MarketSearchQueryWithExtended albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
16798	public void cancelAnimation ( ) { if ( ps != _NULL ) { ps . cancel ( ) ; isPlaying = _BOOL ; } }
16828	private void internal_addVendorOption ( VendorOptionTypeInterface vendorOption ) { vendorOptionClassMap . put ( vendorOption . getClass ( ) , vendorOption ) ; vendorOptionMap . put ( vendorOption . getName ( ) , vendorOption ) ; }
16829	public void unregisterOnSharedPreferenceChangeListener ( SharedPreferences . OnSharedPreferenceChangeListener listener ) { preferences . unregisterOnSharedPreferenceChangeListener ( listener ) ; }
16841	@ Override public Decimal64 log10 ( ) { return new Decimal64 ( FastMath . log10 ( value ) ) ; }
16848	final public void addHeader ( String tag , String v ) { try { resp . addHeader ( tag , v ) ; } catch ( Exception e ) { } }
16885	public static void showInformation ( Object parentIgnored , String message ) { showNotification ( title , message , Mode . information , Pos . BOTTOM_LEFT , _NUM ) ; }
16890	protected < T > T decodeValue ( String str , Class < T > clazz ) throws DecodeException { try { return mapper . readValue ( str , clazz ) ; } catch ( Exception e ) { throw new DecodeException ( _CHAR Failed to decode : _CHAR + e . getMessage ( ) ) ; } }
16896	public SecureCheckTokenQuery token ( String value ) { return unsafeParam ( _CHAR token _CHAR , value ) ; }
16917	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set colorMismatchesVsConsensus = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
16939	@ DataProvider public Object [ ] [ ] assignmentDataProvider ( ) { return new Object [ ] [ ] { new Object [ ] { user , _CHAR NoMatchForThisAgentValue _CHAR , Constants . ASSIGNMENT_NO_PROFILE_MATCH } , new Object [ ] { user , _CHAR Agent001 _CHAR , Constants . ASSIGNMENT_NEW_ASSIGNMENT } , new Object [ ] { user , _CHAR Agent001 _CHAR , Constants . ASSIGNMENT_EXISTING_ASSIGNMENT } } ; }
16984	private void checkDimension ( final int expected , final Object array ) throws MathIllegalArgumentException { int arrayDimension = ( array == _NULL ) ? _NUM : Array . getLength ( array ) ; if ( arrayDimension != expected ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH , arrayDimension , expected ) ; } }
16999	public static void showLogin ( Activity activity , int requestCode ) { Intent intent = new Intent ( activity , LoginActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; }
17004	@ Override public boolean accept ( File directory , String fileName ) { if ( fileName . startsWith ( _CHAR ! ! ! _CHAR ) ) return _BOOL ; if ( ! super . accept ( directory , fileName ) ) return _BOOL ; String firstLine = Basic . getFirstLineFromFile ( new File ( fileName ) ) ; return firstLine != _NULL && firstLine . startsWith ( _CHAR BLASTN _CHAR ) ; }
17073	public void addFlag ( int flag ) { mIntent . addFlags ( flag ) ; }
17077	@ Override protected void synchronizeChildren ( ) { needsSyncChildren ( _BOOL ) ; isReadOnly ( _BOOL ) ; DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) ownerDocument ( ) ; ownerDocument . synchronizeChildren ( this , fNodeIndex ) ; setReadOnly ( _BOOL , _BOOL ) ; }
17082	protected void populateStandardData ( FeatureTypeStyle featureTypeStyle ) { StandardData standardData = new StandardData ( ) ; if ( featureTypeStyle != _NULL ) { standardData . name = featureTypeStyle . getName ( ) ; standardData . description = featureTypeStyle . getDescription ( ) ; } populateStandardData ( standardData ) ; }
17092	protected GroupsSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
17107	public static Permission with ( Activity activity ) { return new ImplPermission ( activity ) ; }
17120	private void displayLegionMessage ( Player targetPlayer , Entry < Timestamp , String > currentAnnouncement ) { if ( currentAnnouncement != _NULL ) { PacketSendUtility . sendPacket ( targetPlayer , SM_SYSTEM_MESSAGE . STR_GUILD_NOTICE ( currentAnnouncement . getValue ( ) , ( int ) ( currentAnnouncement . getKey ( ) . getTime ( ) / _NUM ) ) ) ; } }
17147	@ Override public void actionPerformed ( ActionEvent ev ) { final megan . remote . RemoteServiceBrowser remoteServiceBrowser = ( megan . remote . RemoteServiceBrowser ) getViewer ( ) ; if ( remoteServiceBrowser != _NULL ) { String url = remoteServiceBrowser . getURL ( ) ; if ( url . length ( ) > _NUM ) { execute ( _CHAR detach remoteServer = _CHAR + url + _CHAR ; _CHAR ) ; } } }
17158	private BooleanQuery containsFilterQuery ( String luceneFieldName , ApiFilter filter ) { return filter . getValues ( ) . stream ( ) . map ( _NULL ) . map ( _NULL ) . collect ( getBooleanQueryCollector ( BooleanClause . Occur . SHOULD ) ) . build ( ) ; }
17175	public String message ( ) { return message ; }
17223	protected AuthSignupQuery lastName ( String value ) { return unsafeParam ( _CHAR last_name _CHAR , value ) ; }
17274	public static void error ( @ Nullable Class < ? > caller , String message , Object ... args ) { android . util . Log . e ( tag ( caller ) , String . format ( Locale . ENGLISH , message , args ) ) ; }
17290	@ Override public Filter createFilter ( List < Expression > parameterList ) { return _NULL ; }
17299	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set layout = _CHAR + AlignmentViewer . AlignmentLayout . ByContigs . toString ( ) + _CHAR ; zoom axis = both what = fit ; _CHAR ) ; }
17303	@ Override public void removeRaster ( Symbolizer symbolizer ) { }
17305	private void initFilter ( ReplicationFilterWrapper filterHolder , String url ) throws SpaceComponentsInitializeException { try { filterHolder . init ( _space , url , _replicationPolicy ) ; } catch ( RuntimeException re ) { if ( _shutdownSpaceOnInitFailure ) { throw new SpaceComponentsInitializeException ( _CHAR Failed to initialize replication filter - _CHAR + filterHolder . getClassName ( ) , re ) ; } } }
17345	private void initSpringSecurity ( ServletContext servletContext , EnumSet < DispatcherType > disps ) { log . debug ( _CHAR Registering Spring Security Filter _CHAR ) ; FilterRegistration . Dynamic springSecurityFilter = servletContext . addFilter ( _CHAR springSecurityFilterChain _CHAR , new DelegatingFilterProxy ( ) ) ; springSecurityFilter . addMappingForUrlPatterns ( disps , _BOOL , _CHAR /* '' ) ; springSecurityFilter . setAsyncSupported ( true ) ; }
17348	@ Override public boolean equals ( Object o ) { return o instanceof AirMapAvailablePermit && getId ( ) . equals ( ( ( AirMapAvailablePermit ) o ) . getId ( ) ) ; }
17363	public void removeScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . remove ( listener ) ; }
17378	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
17386	@ Override public String toString ( ) { return getTime ( _CHAR h : mm : ss . cs _CHAR ) ; }
17394	public AdsCreateCampaignsQuery createCampaigns ( UserActor actor , int accountId , String data ) { return new AdsCreateCampaignsQuery ( getClient ( ) , actor , accountId , data ) ; }
17414	public boolean mouseMoved ( @ AndroidCoordinate int x , @ AndroidCoordinate int y ) { if ( myMouseInteraction != _NULL ) { myMouseInteraction . mouseMoved ( pxToDp ( x ) , pxToDp ( y ) ) ; } if ( mySceneDraw . getCurrentUnderneathAnchor ( ) != _NULL ) { return _BOOL ; } return _BOOL ; }
17444	@ Override public void dataSourceLoaded ( GeometryTypeEnum geometryType , boolean isConnectedToDataSourceFlag ) { DataSourceInterface dataSource = DataSourceFactory . getDataSource ( ) ; dataSourceAttributePanel . dataSourceLoaded ( dataSource ) ; }
17465	public void addScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . add ( listener ) ; }
17536	public void actionPerformed ( ActionEvent ev ) { }
17559	public static Column mean ( DataFrame dataFrame , String columnName ) { return dataFrame . groupBy ( columnName ) . agg ( avg ( columnName ) ) . col ( columnName ) ; }
17567	private static void unknownPacket ( State state , int id ) { log . warn ( String . format ( _CHAR Unknown packet recived from Aion client : _NUM % _NUM state = % s _CHAR , id , state . toString ( ) ) ) ; }
17571	@ Override public void createRaster ( Symbolizer symbolizer ) { }
17610	public void hideBudgeAtIndex ( final int index ) { if ( badgeList . get ( index ) . getVisibility ( ) == GONE ) { Log . d ( TAG , _CHAR Budge at index : _CHAR + index + _CHAR already hidden _CHAR ) ; } else { BadgeHelper . hideBadge ( badgeList . get ( index ) ) ; badgeSaveInstanceHashMap . remove ( index ) ; } }
17611	public Future execute ( Collection < T > coll , CompletionCallback < Boolean > callback ) { if ( callback == _NULL ) throw new IllegalArgumentException ( _CHAR Callback can not be _NULL _CHAR ) ; TaskManagerImpl taskManager = new TaskManagerImpl ( this . executor_ , this . task_ , coll , callback ) ; this . executor_ . execute ( taskManager ) ; return new Future ( taskManager ) ; }
17641	@ Override public JavaDStream < INDArray > createStream ( ) { JavaPairInputDStream < String , String > messages = KafkaUtils . createStream ( jssc , zkHost , _CHAR canova _CHAR , Collections . singletonMap ( kafkaTopic , kafkaPartitions ) ) ; JavaDStream < INDArray > dataset = messages . flatMap ( new NDArrayFlatMap ( recordToDataSetFunction ) ) . cache ( ) ; return dataset ; }
17646	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
17666	protected AdsUpdateClientsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
17669	private void moveItemDown ( ) { moveItem ( _BOOL ) ; }
17679	public synchronized void start ( ) throws IllegalStateException , IOException { if ( ! mStreaming ) { configure ( ) ; super . start ( ) ; } }
17701	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR show what = all ; _CHAR ) ; }
17723	public WallEditQuery markAsAds ( Boolean value ) { return unsafeParam ( _CHAR mark_as_ads _CHAR , value ) ; }
17751	public GroupsEditQuery obsceneWords ( List < String > value ) { return unsafeParam ( _CHAR obscene_words _CHAR , value ) ; }
17760	private int dip2px ( float dip ) { float v = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dip , getResources ( ) . getDisplayMetrics ( ) ) ; return ( int ) ( v + _NUM . _NUM ) ; }
17766	public PolynomialFunction negate ( ) { double [ ] newCoefficients = new double [ coefficients . length ] ; for ( int i = _NUM ; i < coefficients . length ; ++ i ) { newCoefficients [ i ] =- coefficients [ i ] ; } return new PolynomialFunction ( newCoefficients ) ; }
17782	@ Override public boolean hasRaster ( Symbolizer symbolizer ) { return _BOOL ; }
17797	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
17810	public boolean isUptoDate ( ) { return this . uptodate ; }
17814	public void disableDragItem ( ) { itemDragEnabled = _BOOL ; mItemTouchHelper = _NULL ; }
17838	public void addGlobalAttributeDecl ( XSAttributeDecl decl ) { fGlobalAttrDecls . put ( decl . fName , decl ) ; decl . setNamespaceItem ( this ) ; }
17858	public MarketSearchQuery tags ( Integer ... value ) { return unsafeParam ( _CHAR tags _CHAR , value ) ; }
17909	@ Override public Filter createFilter ( ) { return new AfterExtended ( ) ; }
17921	public static Column of ( String name , Object value ) { return Column . of ( name , Value . of ( value ) ) ; }
17931	@ Override public void updateSLDContents ( String sldContents ) { this . sldContents = sldContents ; }
17934	public boolean is ( String k , String value ) { String v = get ( k ) ; return v == _NULL && value == _NULL || v != _NULL && v . equals ( value ) ; }
17951	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
17960	private void createUI ( Class < ? > panelDetails , String configFile ) { PrefManager . getInstance ( ) . addVendorOptionListener ( this ) ; createVendorOptionPanel ( ) ; readConfigFile ( vendorOptionFillFactory , this , configFile ) ; symbolTypeFactory . populate ( this , panelDetails , fieldConfigManager ) ; }
17966	public void sendRequest ( String url , final ISimpleRequestCallback uiUpdater ) { Request request = new Request . Builder ( ) . url ( url ) . build ( ) ; sendRequest ( request , uiUpdater ) ; }
17991	public void check ( ) { check ( ANIMATION_DURATION_MS ) ; }
17996	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR select what = previous ; _CHAR ) ; }
18007	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
18008	public static String unescape ( String s ) { try { return URLDecoder . decode ( s , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { return s ; } }
18010	public static RevealBuilder reveal ( @ NonNull final View viewToReveal ) { return new RevealBuilder ( viewToReveal ) ; }
18034	public void selectionChanged ( ISelection selection ) { if ( selection == _NULL ) { selection = StructuredSelection . EMPTY ; } if ( delegate != _NULL ) { delegate . selectionChanged ( this , selection ) ; } }
18043	protected void drawXAxis ( Graphics2D gc ) { }
18056	protected AdsImportTargetContactsQuery targetGroupId ( int value ) { return unsafeParam ( _CHAR target_group_id _CHAR , value ) ; }
18063	public void encoding ( ) { if ( stripe_unit_size % block_nbr != _NUM ) { throw new RuntimeException ( _CHAR Can not striping . wrong DATA_LENGTH ! _CHAR ) ; } STAR_encoding_row ( ) ; STAR_encoding_diag1 ( ) ; STAR_encoding_diag2 ( ) ; }
18066	protected void init ( ) { mStatus = STATUS_OK ; mFrameCount = _NUM ; mGifFrames = new ArrayList < GifFrame > ( ) ; }
18068	private synchronized void invokeReadAheadCallback ( ) { if ( _NULL != readAheadCallback ) { if ( LOG . isTraceEnabled ( ) ) { LOG . trace ( _CHAR Cache has space , schedule the read ahead _CHAR ) ; } readAheadCallback . resumeReadAhead ( ) ; readAheadCallback = _NULL ; } }
18092	public MarketSearchQuery albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
18113	public void moveToTargetObject ( ) { if ( started . compareAndSet ( _BOOL , _BOOL ) ) { if ( owner . getAi2 ( ) . isLogging ( ) ) { AI2Logger . moveinfo ( owner , _CHAR MC : moveToTarget started _CHAR ) ; } destination = Destination . TARGET_OBJECT ; updateLastMove ( ) ; MoveTaskManager . getInstance ( ) . addCreature ( owner ) ; } }
18129	private void createUI ( ) { readConfigFileNoScrollPane ( _NULL , this , _CHAR geoserver / GeoServerWindBarbSymbol . xml _CHAR ) ; }
18178	private void sendPuncture ( Peer peer ) throws IOException { Puncture puncture = new Puncture ( hashId , peer . getAddress ( ) , internalSourceAddress ) ; sendMesssage ( puncture , peer ) ; }
18188	synchronized public boolean update ( String expected ) { if ( ! cookie . equals ( expected ) ) return _BOOL ; String newCookie ; do { newCookie = Long . toHexString ( RANDOM . nextLong ( ) ) ; } while ( cookie . equals ( newCookie ) ) ; cookie = newCookie ; return _BOOL ; }
18234	public boolean hasStroke ( ) { return SLDTreeLeafFactory . getInstance ( ) . hasStroke ( getSymbolizer ( ) ) ; }
18235	protected AudioDeleteQuery audioId ( int value ) { return unsafeParam ( _CHAR audio_id _CHAR , value ) ; }
18246	public void stopAutoScroll ( ) { isAutoScroll = _BOOL ; mCircleHandler . removeCallbacksAndMessages ( _NULL ) ; }
18253	@ Override public Filter createFilter ( ) { return new IntersectsExtended ( ) ; }
18287	void returnLocal ( Local right ) { ret . clear ( ) ; ret . addAll ( locals . get ( right ) ) ; if ( doCheck ) sanityCheck ( ) ; }
18305	public void hideToolbar ( boolean clearSelection ) { if ( mFindToolbar == _NULL ) return ; mFindToolbar . deactivate ( clearSelection ) ; }
18326	public static String decryptString ( CipherTextIvMac civ , SecretKeys secretKeys , String encoding ) throws UnsupportedEncodingException , GeneralSecurityException { return new String ( decrypt ( civ , secretKeys ) , encoding ) ; }
18387	public static int spToPx ( Context context , float spValue ) { final float fontScale = context . getResources ( ) . getDisplayMetrics ( ) . scaledDensity ; return ( int ) ( spValue * fontScale + _NUM . _NUM ) ; }
18391	protected void fireUpdateSymbol ( ) { if ( ! Controller . getInstance ( ) . isPopulating ( ) ) { for ( RenderSymbolInterface renderer : rendererList ) { renderer . renderSymbol ( ) ; } if ( fieldConfigVisitor . isTreeDataUpdated ( ) ) { for ( SLDTreeUpdatedInterface sldTree : treeUpdateList ) { sldTree . textUpdated ( ) ; } fieldConfigVisitor . resetTreeDataUpdated ( ) ; } } }
18394	private void guestLogin ( ) { Intent intent = new Intent ( this , MainActivity . class ) ; intent . putExtra ( _CHAR status _CHAR , Status . GUEST_USER ) ; startActivity ( intent ) ; finish ( ) ; }
18399	public Matrix inverse ( ) { return solve ( identity ( m , m ) ) ; }
18415	public boolean commit ( ) { if ( mIsSuccess ) { mDatabase . setTransactionSuccessful ( ) ; mDatabase . endTransaction ( ) ; } boolean isRealSuccess = mIsSuccess ; mIsSuccess = _BOOL ; return isRealSuccess ; }
18453	public void removeTable ( String tableUniquName ) { tableInfoMap . remove ( convertToLowerCase ( tableUniquName ) ) ; }
18489	@ Override public boolean hasRaster ( Symbolizer symbolizer ) { return _BOOL ; }
18587	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
18593	public int remove ( long playlistId ) { return resolver . delete ( MediaStore . Audio . Playlists . EXTERNAL_CONTENT_URI , MediaStore . Audio . Playlists . _ID + _CHAR = ? _CHAR , new String [ ] { String . valueOf ( playlistId ) } ) ; }
18606	private void reset ( ) { rootNode . removeAllChildren ( ) ; treeModel . reload ( ) ; }
18625	public void addField ( FieldIdEnum fieldId , boolean enabled ) { logger . debug ( String . format ( _CHAR AddField % s % s _CHAR , fieldId . toString ( ) , enabled ) ) ; fieldMap . put ( fieldId , enabled ) ; }
18627	public static final void emoteStartSinging ( Npc owner ) { owner . unsetState ( CreatureState . NPC_IDLE ) ; owner . setState ( CreatureState . ACTIVE ) ; PacketSendUtility . broadcastPacket ( owner , new SM_EMOTION ( owner , EmotionType . EMOTE , _NUM , _NUM ) ) ; }
18672	public static void main ( String [ ] args ) { ScaleToolPanel dlg = new ScaleToolPanel ( _NULL ) ; dlg . setVisible ( _BOOL ) ; }
18674	public void addColumn ( String name , Class type , Object defaultValue ) { throw new UnsupportedOperationException ( ) ; }
18682	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
18702	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR UserLayer . xml _CHAR ) ; }
18719	@ Before public void beforeTest ( ) { pokemon = mock ( PokemonModel . class ) ; operation = spy ( EvolveOperation . class ) ; operation . pokemon = pokemon ; }
18764	public static void updateOnlineResources ( URL resourceLocator , StyledLayerDescriptor sld ) { List < String > externalImageList = new ArrayList < String > ( ) ; internal_updateOnlineResources ( resourceLocator , sld , externalImageList ) ; }
18774	public static Permission with ( Fragment fragment ) { return new ImplPermission ( fragment ) ; }
18838	private void initRealmConfiguration ( ) { RealmConfiguration realmConfiguration = new RealmConfiguration . Builder ( this ) . build ( ) ; Realm . setDefaultConfiguration ( realmConfiguration ) ; }
18840	public static void infoNotification ( final String message ) { showNotification ( message , NotificationType . INFORMATION ) ; }
18846	public PagesGetQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
18893	public void load ( String fileName , String mode ) throws IOException { this . fileName = fileName ; this . readerWriter = new InputOutputReaderWriter ( fileName , mode ) ; headerSectionRMA6 . read ( readerWriter ) ; readerWriter . seek ( FooterSectionRMA6 . readStartFooterSection ( readerWriter ) ) ; footerSectionRMA6 . read ( readerWriter ) ; }
18920	public int compareTo ( Object o ) { int thisValue = this . value ; int thatValue = ( ( ByteWritable ) o ) . value ; return ( thisValue < thatValue ? - _NUM : ( thisValue == thatValue ? _NUM : _NUM ) ) ; }
18936	public BooleanProperty showProperty ( ) { return show ; }
18955	public int findColumn ( String name ) { for ( int col = _NUM ; col < getColumnCount ( ) ; col ++ ) if ( getColumnName ( col ) . equals ( name ) ) return col ; return - _NUM ; }
18962	@ Override public void startDocument ( ) throws SAXException { if ( documentHandler != _NULL ) { documentHandler . startDocument ( ) ; } }
18986	public void resetTime ( ) { }
18998	public boolean removeAssociation ( int node ) { return removeAssociation ( node , _NUM ) ; }
19006	public void createNode ( String parentNodePath , String nodeName , String nodeType ) throws RepositoryException { createNode ( parentNodePath , nodeName , nodeType , _NULL ) ; }
19015	public void dispose ( ) { if ( delegate instanceof IActionDelegate2 ) { ( ( IActionDelegate2 ) delegate ) . dispose ( ) ; delegate = _NULL ; } }
19040	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR select what = none ; _CHAR ) ; }
19043	public void registerCustomizer ( JmxConnectionCustomizer customizer ) { JmxConnectionSupportImpl . registerCustomizer ( customizer ) ; }
19050	public boolean isRunning ( ) { return running ; }
19052	public void cleanProgressInterfaces ( ) { for ( DownloadTask task : allTasks ) { task . progressUpdater = _NULL ; } }
19058	@ RequestMapping ( value = _CHAR / train _CHAR , method = RequestMethod . GET ) public String trainAndSave ( ) { String model = ClusteringService . train ( ) ; redis . opsForValue ( ) . set ( key , model ) ; return model ; }
19074	private static byte charToByte ( char c ) { return ( byte ) _CHAR _NUM _CHAR . indexOf ( c ) ; }
19075	private static Bitmap drawableToBitmap ( Drawable d ) { return d == _NULL ? _NULL : ( ( BitmapDrawable ) d ) . getBitmap ( ) ; }
19102	@ Override public boolean hasObservers ( ) { return hasObservers ; }
19110	public static void applyForPermit ( AirMapAvailablePermit permit , AirMapCallback < AirMapPilotPermit > listener ) { String url = String . format ( permitApplyUrl , permit . getId ( ) ) ; AirMap . getClient ( ) . postWithJsonBody ( url , permit . getAsParams ( ) , new GenericOkHttpCallback ( listener , AirMapPilotPermit . class ) ) ; }
19116	public static float toFloat ( Object obj ) { try { return Float . parseFloat ( obj . toString ( ) ) ; } catch ( Exception e ) { return - _NUM ; } }
19131	private void readObject ( ObjectInputStream ois ) throws ClassNotFoundException , IOException { ois . defaultReadObject ( ) ; MatrixUtils . deserializeRealVector ( this , _CHAR coefficients _CHAR , ois ) ; }
19143	@ Override public Filter createFilter ( ) { return new NotExtended ( ) ; }
19156	public static void deleteOwner ( AbstractAI ai2 ) { ai2 . getOwner ( ) . getController ( ) . onDelete ( ) ; }
19172	private void clearCurrentNotifications ( ) { mbeanNotifications . clearCurrentNotifications ( ) ; if ( mbeanNotifications . isListenerRegistered ( mbean ) ) { clearNotifications0 ( ) ; } else { clearNotifications ( ) ; } }
19183	public PhotosReportQuery reason ( ReportReason value ) { return unsafeParam ( _CHAR reason _CHAR , value ) ; }
19221	public static < T > Single < T > single ( GoogleApiClientSingle < T > single ) { return Single . create ( single ) ; }
19235	private void createUI ( ) { PrefManager . getInstance ( ) . addVendorOptionListener ( this ) ; createVendorOptionPanel ( ) ; readConfigFile ( vendorOptionTextFactory , this , _CHAR Text . xml _CHAR ) ; }
19251	public Future execute ( CompletionCallback < Object > callback ) { return this . execute ( _NULL , callback ) ; }
19277	@ Override public boolean equals ( Object o ) { return o instanceof AirMapStatusAdvisoryRule && getId ( ) . equals ( ( ( AirMapStatusAdvisoryRule ) o ) . getId ( ) ) ; }
19313	public int compareTo ( Object o ) { long thisValue = this . value ; long thatValue = ( ( LongWritable ) o ) . value ; return ( thisValue < thatValue ? - _NUM : ( thisValue == thatValue ? _NUM : _NUM ) ) ; }
19324	public void removeClickingListener ( OnWheelClickedListener listener ) { clickingListeners . remove ( listener ) ; }
19359	public void addClickingListener ( OnWheelClickedListener listener ) { clickingListeners . add ( listener ) ; }
19404	@ Override public Object clone ( ) throws CloneNotSupportedException { return super . clone ( ) ; }
19415	public static Rectangle rectangle ( double minX , double maxX , double minY , double maxY ) { return new RectangleImpl ( minX , maxX , minY , maxY ) ; }
19431	public UrlSpaceConfigurer attributeStore ( AttributeStore attributeStore ) { validate ( ) ; urlSpaceFactoryBean . attributeStore ( attributeStore ) ; return this ; }
19440	@ Override public final void writeByte ( int v ) throws IOException { dis . writeByte ( v ) ; }
19444	public static Completable completable ( GoogleApiClientCompletable completable ) { return Completable . create ( completable ) ; }
19516	@ Override public void dataSourceLoaded ( GeometryTypeEnum geometryType , boolean isConnectedToDataSourceFlag ) { DataSourceInterface dataSource = DataSourceFactory . getDataSource ( ) ; propertyPanel . dataSourceLoaded ( dataSource ) ; expressionPanel . dataSourceLoaded ( dataSource ) ; }
19529	public static int pixelToDp ( Context c , int px ) { return ( int ) ( px / c . getResources ( ) . getDisplayMetrics ( ) . density ) ; }
19538	public final static String formatHeader ( final Header header , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = SaveLineFormatter . DEFAULT ; return formatter . formatHeader ( _NULL , header ) . toString ( ) ; }
19567	@ Before public void beforeTest ( ) { textArea = new JTextArea ( ) ; final LogController logController = new LogController ( ) ; logController . setTextArea ( textArea ) ; logController . setMaxLines ( numOfLines ) ; ConsolePrintStream . setup ( logController ) ; }
19594	public static void warn ( @ NonNull String tag , String message , Object ... args ) { android . util . Log . w ( tag , String . format ( Locale . ENGLISH , message , args ) ) ; }
19613	public static int dpToPx ( Context context , float dpValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpValue * scale + _NUM . _NUM ) ; }
19614	@ Override public void actionPerformed ( ActionEvent ev ) { }
19660	protected boolean isToolbarOverlay ( ) { return _BOOL ; }
19691	private void writeObject ( ObjectOutputStream oos ) throws IOException { oos . defaultWriteObject ( ) ; MatrixUtils . serializeRealMatrix ( tableau , oos ) ; }
19692	private static byte charToByte ( char c ) { return ( byte ) _CHAR _NUM _CHAR . indexOf ( c ) ; }
19699	public void register ( K key , Predicate < V > value ) { getOrCreate ( key ) . add ( value ) ; }
19731	public static JsonObject createBackground ( ITextBackground background ) { if ( instance != _NULL ) { return instance . internal_createBackground ( background ) ; } return _NULL ; }
19748	public void clear ( ) { freqTable . clear ( ) ; }
19762	public void java_lang_reflect_Array_multiNewArray ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { throw new NativeMethodNotSupportedException ( method ) ; }
19777	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR select = all ; _CHAR ) ; }
19801	protected AdsCreateAdsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
19820	private static SingleCDockable create ( String title , JPanel panel ) { return new DefaultSingleCDockable ( title , title , panel ) ; }
19824	public static void main ( String [ ] args ) { Host h = Host . local ( ) ; System . out . println ( h ) ; }
19827	private static int changeIndexSign ( final int index ) { return - index - _NUM ; }
19828	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR show gridLines = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
19869	protected PagesGetHistoryQuery pageId ( int value ) { return unsafeParam ( _CHAR page_id _CHAR , value ) ; }
19935	private void createUI ( ) { panel = new JPanel ( ) ; panel . setLayout ( _NULL ) ; createField ( FIELD_DATABASE , Localisation . getField ( DataSourceConnectorFileGDB . class , _CHAR DataSourceConnectorFileGDB . database _CHAR ) ) ; panel . setPreferredSize ( new Dimension ( FIELD_X + FIELD_WIDTH , textFieldMap . size ( ) * ROW_HEIGHT ) ) ; }
19941	public String toString ( ) { return name ; }
20020	public UsersSearchQuery birthYear ( Integer value ) { return unsafeParam ( _CHAR birth_year _CHAR , value ) ; }
20022	public static Configuration createSubEquipmentDataTag ( Long parentId ) { Configuration configuration = new Configuration ( ) ; DataTag dataTag = DataTag . create ( _CHAR DATA_INI_TEST _CHAR , Integer . class , new DataTagAddress ( ) ) . subEquipmentId ( parentId ) . id ( _NUM ) . build ( ) ; configuration . addEntity ( dataTag ) ; return configuration ; }
20028	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set drawer = _CHAR + ViewerBase . DiagramType . RectangularCladogram + _CHAR ; _CHAR ) ; }
20029	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR hide what = unSelected ; _CHAR ) ; }
20055	private MarkerOptions searchForId ( String id ) { for ( MarkerOptions options : markers ) { if ( options . getTitle ( ) . equals ( id ) ) { return options ; } } return _NULL ; }
20084	public void send ( String msg ) { this . send ( msg , _NULL ) ; }
20095	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + CalculateEcologicalIndices . KULCZYNSKI + _CHAR ; _CHAR ) ; }
20112	public void removeClickingListener ( OnWheelClickedListener listener ) { clickingListeners . remove ( listener ) ; }
20115	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
20120	public void removeChangingListener ( OnWheelChangedListener listener ) { changingListeners . remove ( listener ) ; }
20137	public static void debug ( @ NonNull String tag , String message , Object ... args ) { android . util . Log . d ( tag , String . format ( Locale . ENGLISH , message , args ) ) ; }
20163	public void clearDiskCache ( ) { checkConfiguration ( ) ; configuration . diskCache . clear ( ) ; }
20165	public static boolean isConfigured ( ) { return DB . isConfigured ( ) ; }
20175	public void clearCurrentItem ( ) { currentItem = _NULL ; }
20177	protected void tearDownTest ( ) throws Exception { }
20204	public void sendConfirmationEmail ( final String subject , final String [ ] recipients , final String url ) { MimeMessagePreparator preparator = _NULL ; this . send ( preparator ) ; }
20215	public MarketAddQuery photoIds ( List < Integer > value ) { return unsafeParam ( _CHAR photo_ids _CHAR , value ) ; }
20220	@ Override public boolean hasStroke ( Symbolizer symbolizer ) { return _BOOL ; }
20230	public void stopSpinning ( ) { spinHandler . sendEmptyMessageDelayed ( _NUM , _NUM ) ; }
20235	public static int v ( String tag , Object ... msg ) { return isPrint ? android . util . Log . v ( tag , getLogMessage ( msg ) ) : - _NUM ; }
20238	public boolean hasData ( ) { return ( dataStore != _NULL ) || ( gridCoverageReader != _NULL ) ; }
20267	public static void main ( String [ ] args ) { System . out . println ( merge ( _CHAR http : // www . haodf . com / wenda / adele_g_4491037166 . htm '' , '' http : // www . haodf . com / wenda / aiai6905_g_4377802805 . htm '' ) ) ; System . out . println ( merge ( '' http : // www . haodf . com / wenda / y .* _g_44959 .* 9 .* 9 .*. htm '' , '' http : // www . haodf . com / wenda / doc .* _g_4 .* 4 .* 5 .* 7 . *. htm '' ) ) ; }
20322	public File [ ] filterHiddenFiles ( File [ ] files ) { List < File > ret = new ArrayList < > ( ) ; for ( File file : files ) { if ( ! file . isHidden ( ) ) { ret . add ( file ) ; } } return ret . toArray ( new File [ ret . size ( ) ] ) ; }
20336	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + CalculateEcologicalIndices . CHISSQUARE + _CHAR ; _CHAR ) ; }
20345	public void removePoint ( int rowIndex ) { if ( ( rowIndex < _NUM ) || ( rowIndex >= pointList . size ( ) ) ) { return ; } pointList . remove ( rowIndex ) ; this . fireTableDataChanged ( ) ; }
20362	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR compute diversityRatio kmer = _NUM step = _NUM mindepth = _NUM ; _CHAR ) ; }
20399	private void createUI ( ) { createVendorOptionPanel ( ) ; readRasterConfigFile ( vendorOptionRasterFactory , this , _CHAR Raster . xml _CHAR ) ; }
20427	private static byte charToByte ( char c ) { return ( byte ) _CHAR _NUM _CHAR . indexOf ( c ) ; }
20433	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR load taxonomyFile = ncbi . tre mapfile = ncbi . map ; collapse level = _NUM ; _CHAR ) ; }
20467	@ Override public boolean equals ( Object o ) { return o instanceof AirMapFlight && getFlightId ( ) . equals ( ( ( AirMapFlight ) o ) . getFlightId ( ) ) ; }
20468	public void unsubscribe ( String subscriptionName ) throws JMSException { ensureOpen ( ) ; throw new JMSException ( _CHAR This version of JMS does not support durable subscribers . '' ) ; }
20505	@ Before public void beforeTest ( ) { pokemon = mock ( PokemonModel . class ) ; operation = spy ( TransferOperation . class ) ; operation . pokemon = pokemon ; }
20513	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
20538	public EmbeddedSpaceConfigurer attributeStore ( AttributeStore attributeStore ) { validate ( ) ; factoryBean . attributeStore ( attributeStore ) ; return this ; }
20603	public void logout ( String username ) throws AuthenticatorException { Debug . logInfo ( this . getClass ( ) . getName ( ) + _CHAR Authenticator logout ( ) _CHAR , module ) ; }
20629	private void debug ( String s ) { if ( DEBUG ) { System . out . println ( _CHAR Clunit debug : _CHAR + s ) ; } }
20638	@ Override public void warning ( SAXParseException e ) throws SAXException { }
20646	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set pc1 = _NUM pc2 = _NUM ; _CHAR ) ; }
20655	protected AdsUpdateTargetGroupQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
20668	public void content ( String content ) { escapeString ( content ) ; }
20670	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( getSyntax ( ) ) ; }
20681	public void registerCategory ( SnapshotCategory category ) { categories . add ( category ) ; fireCategoryRegistered ( category ) ; }
20682	@ Override public void removeListener ( DataSourceUpdatedInterface listener ) { }
20701	public String toString ( ) { return image ; }
20722	private void createFeature ( ) { if ( geometryType == GeometryTypeEnum . UNKNOWN ) { dataLoaded = _BOOL ; } else { DataSourceInterface dataSource = DataSourceFactory . getDataSource ( ) ; if ( geometryType == GeometryTypeEnum . RASTER ) { dataLoaded = ( dataSource . getGridCoverageReader ( ) != _NULL ) ; } else { featureList = dataSource . getExampleFeatureSource ( ) ; dataLoaded = _BOOL ; } } }
20723	@ Override public Filter createFilter ( ) { return new OverlapsExtended ( ) ; }
20724	public InfoSection loadInfoSection ( ) throws IOException { try ( InputReader reader = new InputReader ( getFile ( ) , _NULL , _NULL , _BOOL ) ) { readHeader ( reader ) ; infoSection . read ( reader ) ; } return infoSection ; }
20786	public void initComponents ( ) throws SpaceComponentsInitializeException { try { SpaceInitializationIndicator . setInitializer ( ) ; initPrimaryOnlyComponents ( ) ; initBackupComponents ( ) ; } finally { SpaceInitializationIndicator . unsetInitializer ( ) ; } }
20818	private ProcessFunction showTransformationDialog ( ProcessFunction existingProcessFunction ) { ProcessFunction processFunction = _NULL ; RenderTransformationDialog dlg = new RenderTransformationDialog ( GeoServerConnectionManager . getInstance ( ) ) ; if ( dlg . showDialog ( existingProcessFunction ) ) { processFunction = dlg . getTransformationProcessFunction ( ) ; } return processFunction ; }
20825	public static void showError ( Object parentIgnored , String message , long milliseconds ) { showNotification ( title , message , Mode . error , Pos . BOTTOM_LEFT , milliseconds ) ; }
20842	@ Override public Filter createFilter ( ) { return new IsLessThanExtended ( ) ; }
20866	public void clear ( ) { super . clear ( ) ; int [ ] set = _set ; byte [ ] states = _states ; for ( int i = set . length ; i -- > _NUM ; ) { set [ i ] = ( int ) _NUM ; states [ i ] = FREE ; } }
20905	private void writeRequestBody ( IBasicRequest request , OutputStream outputStream ) throws IOException { Logger . i ( _CHAR ------- Send request data start ------- _CHAR ) ; OutputStream realOutputStream = IOUtils . toBufferedOutputStream ( outputStream ) ; request . onWriteRequestBody ( realOutputStream ) ; IOUtils . closeQuietly ( realOutputStream ) ; Logger . i ( _CHAR ------- Send request data end ------- _CHAR ) ; }
20915	@ DataProvider public Object [ ] [ ] experimentStates ( ) { return new Object [ ] [ ] { new Object [ ] { Constants . EXPERIMENT_STATE_RUNNING } , new Object [ ] { Constants . EXPERIMENT_STATE_PAUSED } , new Object [ ] { Constants . EXPERIMENT_STATE_TERMINATED } } ; }
20918	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set showBiPlot = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
20929	public int findRow ( String name ) { for ( int row = _NUM ; row < getRowCount ( ) ; row ++ ) if ( getRowName ( row ) . equals ( name ) ) return row ; return - _NUM ; }
20961	protected static ObjectReader initDefault ( ) { return init ( CsvSchema . emptySchema ( ) ) ; }
20980	public void endDocument ( ) { int count = fValueStores . size ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { ValueStoreBase valueStore = ( ValueStoreBase ) fValueStores . get ( i ) ; valueStore . endDocument ( ) ; } }
20982	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR select what = previous ; _CHAR ) ; }
20985	@ Override public void addField ( DataSourceFieldInterface dataSourceField ) { }
20988	public void addChangingListener ( OnWheelChangedListener listener ) { changingListeners . add ( listener ) ; }
21064	public void clear ( ) { entries . clear ( ) ; }
21142	public WidgetsGetPagesQuery widgetApiId ( Integer value ) { return unsafeParam ( _CHAR widget_api_id _CHAR , value ) ; }
21149	public synchronized void clearCustomProperties ( String [ ] keys ) { Properties prop = getCustomProperties ( _BOOL ) ; if ( prop != _NULL ) for ( int i = _NUM ; i < keys . length ; i ++ ) prop . remove ( keys [ i ] ) ; storeCustomProperties ( ) ; }
21173	@ Override public void actionPerformed ( ActionEvent ev ) { action . actionPerformed ( ev ) ; }
21180	@ Override public Filter createFilter ( ) { return new IsGreaterThanExtended ( ) ; }
21187	public void addClickingListener ( OnWheelClickedListener listener ) { clickingListeners . add ( listener ) ; }
21210	@ Override public void destroy ( ) { this . posTagger = _NULL ; }
21218	public void sendRequest ( String url , final IRequestCallback uiUpdater ) { Request request = new Request . Builder ( ) . url ( url ) . build ( ) ; sendRequest ( request , uiUpdater ) ; }
21219	public static int Integer ( int min , int max ) { return random . nextInt ( max - min + _NUM ) + min ; }
21244	@ NotNull public ImageDescription describeImage ( @ NotNull InputStream image ) { return computerVisionBuilder . describeImage ( _NUM , image ) . withResult ( ) ; }
21246	@ Override public void actionPerformed ( ActionEvent ev ) { }
21258	public static int dpToPx ( float dp , Resources resources ) { float px = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dp , resources . getDisplayMetrics ( ) ) ; return ( int ) px ; }
21280	public void cancelAlarm ( Context context ) { if ( alarmMgr != _NULL ) { alarmMgr . cancel ( alarmIntent ) ; } ComponentName receiver = new ComponentName ( context , BootReceiver . class ) ; PackageManager pm = context . getPackageManager ( ) ; pm . setComponentEnabledSetting ( receiver , PackageManager . COMPONENT_ENABLED_STATE_DISABLED , PackageManager . DONT_KILL_APP ) ; }
21299	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set layout = _CHAR + AlignmentViewer . AlignmentLayout . ByName . toString ( ) + _CHAR ; zoom axis = both what = fit ; _CHAR ) ; }
21323	public MessagesSendQuery send ( Actor actor ) { return new MessagesSendQuery ( getClient ( ) , actor ) ; }
21353	private static BigDecimal parseBigDecimal ( String whole , String part , int index ) throws IllegalArgumentException { if ( part == _NULL ) { return _NULL ; } part = part . substring ( _NUM , part . length ( ) - _NUM ) ; return new BigDecimal ( part ) ; }
21366	@ Override public Filter createFilter ( ) { return new WithinExtended ( ) ; }
21371	@ Override public void createFill ( Symbolizer symbolizer ) { }
21404	protected AdsImportTargetContactsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
21437	public static EventBuilder on ( String event ) { return new EventBuilder ( event , instance ) ; }
21447	public void paint ( @ NotNull Graphics2D gc ) { assert _BOOL ; }
21473	@ Override public void wktValueUpdated ( ) { setCachedExpression ( generateExpression ( ) ) ; checkSymbolIsValid ( ) ; FieldConfigBase parent = getParent ( ) ; if ( parent != _NULL ) { parent . valueUpdated ( ) ; } }
21490	public void clear ( ) { this . root = _NULL ; this . size = _NUM ; }
21492	@ Override public void actionPerformed ( ActionEvent ev ) { getViewer ( ) . selectComponent ( getViewer ( ) . getUpgmaTab ( ) ) ; }
21494	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
21501	void reset ( ) { mNewWeightSum =- _NUM ; useWeight = _BOOL ; mClearWeights = _NULL ; }
21507	@ Override public URI [ ] locations ( ) { return new URI [ _NUM ] ; }
21510	@ Override public List < GenericValue > findAll ( String entityName , boolean useCache ) throws GenericEntityException { return this . findList ( entityName , _NULL , _NULL , _NULL , _NULL , useCache ) ; }
21513	@ Override public Filter createFilter ( ) { return new IsNullExtended ( ) ; }
21518	private void removeSpotlightView ( ) { if ( listener != _NULL ) listener . onUserClicked ( usageId ) ; if ( getParent ( ) != _NULL ) ( ( ViewGroup ) getParent ( ) ) . removeView ( this ) ; }
21524	private static int changeIndexSign ( final int index ) { return - index - _NUM ; }
21569	@ Override public void removeRaster ( Symbolizer symbolizer ) { }
21582	public void generateReport ( ) { if ( asynchronousThread != _NULL ) { requestScheduled = _BOOL ; } else { report ( ) ; } }
21590	public void clear ( ) { fPublicId = _NULL ; fLiteralSystemId = _NULL ; fBaseSystemId = _NULL ; fExpandedSystemId = _NULL ; fNamespace = _NULL ; }
21592	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR show window = groups ; set groupNodes = selected ; _CHAR ) ; }
21617	public static SM_SYSTEM_MESSAGE STR_CMD_WHISHPER_OUTPUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21644	public void merge ( Histogram other ) { int i ; for ( i = _NUM ; i <= limits . length ; ++ i ) results [ i ] += other . results [ i ] ; count += other . count ; }
21648	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set networkdata = _CHAR + ClassificationType . Taxonomy + _CHAR ; _CHAR ) ; }
21676	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + CalculateEcologicalIndices . GOODALL_NORMALIZED + _CHAR ; _CHAR ) ; }
21706	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set showGroups = _CHAR + ( ! isSelected ( ) ) + _CHAR style = convexHulls ; _CHAR ) ; }
21708	public static boolean hasJellyBeanMr2 ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR2 ; }
21744	@ Override public final boolean isEmpty ( ) { return getAll ( ) . isEmpty ( ) ; }
21796	public static int widthPixels ( Context context ) { return displayMetrics ( context ) . widthPixels ; }
21809	public static void init ( ) { Logger . init ( TAG ) ; }
21813	public void clear ( ) { throw new UnsupportedOperationException ( ) ; }
21841	public boolean isInitializationComplete ( ) { return nodeInitStageAdvancer . isInitializationComplete ( ) ; }
21866	public String message ( ) { return message ; }
21873	public Object clone ( ) { return new DeadlockAvoidanceEdge ( sc ) ; }
21878	@ Override public void close ( ) throws IOException { out . close ( ) ; }
21880	public void removeClickingListener ( OnWheelClickedListener listener ) { clickingListeners . remove ( listener ) ; }
21891	protected AuthRestoreQuery phone ( String value ) { return unsafeParam ( _CHAR phone _CHAR , value ) ; }
21892	protected AudioReorderQuery audioId ( int value ) { return unsafeParam ( _CHAR audio_id _CHAR , value ) ; }
21920	public void selectDetailsView ( DetailsView detailsView ) { DisplayArea displayArea = getDisplayArea ( detailsView . getTab ( ) ) ; if ( displayArea != _NULL ) displayArea . setSelectedTab ( detailsView . getTab ( ) ) ; }
21942	public void addSpawnPoints ( Collection < SpawnPoint > spawnPoints ) { if ( spawnPoints == _NULL || spawnPoints . isEmpty ( ) ) { return ; } complete = _BOOL ; this . spawnPoints . addAll ( spawnPoints ) ; }
21945	public void configureUI ( ) { if ( myDesignSurface == _NULL ) { return ; } computeScale ( myDesignSurface . getCurrentScreenView ( ) , myDesignSurface . getSize ( ) , myDesignSurface . getContentSize ( _NULL ) ) ; computeOffsets ( myDesignSurface . getCurrentScreenView ( ) ) ; }
21980	public void revertSelf ( ) { y = y . negate ( ) ; pole = pole . negate ( ) ; }
22005	public void disableLabels ( Collection < String > labels ) { disabledLabels . addAll ( labels ) ; }
22016	public static ResourcesPoet create ( ) { init ( ) ; Document document = sDocumentBuilder . newDocument ( ) ; Element resources = document . createElement ( ELEMENT_RESOURCES ) ; document . appendChild ( resources ) ; return create ( document , resources ) ; }
22028	public SearchGetHintsQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
22031	@ Override public boolean equals ( Object o ) { return o instanceof AirMapPilotPermitCustomProperty && getId ( ) . equals ( ( ( AirMapPilotPermitCustomProperty ) o ) . getId ( ) ) ; }
22045	public String message ( ) { return message ; }
22063	public void requestRequestNetworkUpdate ( ) { enqueue ( new RequestNetworkUpdateMessageClass ( ) . doRequest ( ) ) ; logger . debug ( _CHAR ZWave controller request network update _CHAR ) ; }
22066	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set nodeShape = diamond ; _CHAR ) ; }
22096	protected AdsGetRejectionReasonQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
22098	public String tokenizeOneLine ( String line ) { List < String > list = new ArrayList < String > ( ) ; list . add ( line ) ; JavaRDD < String > input = jsc . parallelize ( list ) ; JavaRDD < String > output = tokenize ( input ) ; return output . first ( ) ; }
22115	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
22172	public static boolean hasJellyBeanMr1 ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR1 ; }
22183	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
22225	@ Override public JavaDStream < DataSet > createStream ( ) { JavaPairInputDStream < String , String > messages = KafkaUtils . createStream ( jssc , zkHost , _CHAR canova _CHAR , Collections . singletonMap ( kafkaTopic , kafkaPartitions ) ) ; JavaDStream < DataSet > dataset = messages . flatMap ( new DataSetFlatmap ( numLabels , recordToDataSetFunction ) ) . cache ( ) ; return dataset ; }
22249	public static void main ( String [ ] args ) { SpringApplication app = new SpringApplication ( App . class ) ; app . setShowBanner ( _BOOL ) ; app . setWebEnvironment ( _BOOL ) ; app . run ( args ) ; }
22255	@ Override public final void writeBytes ( String s ) throws IOException { dis . writeBytes ( s ) ; }
22280	public static void errorNotification ( final String message ) { showNotification ( message , NotificationType . ERROR ) ; }
22316	private void unknownPacket ( State state , int id ) { log . warn ( String . format ( _CHAR Unknown packet recived from Chat Server : _NUM % _NUM state = % s _CHAR , id , state . toString ( ) ) ) ; }
22330	@ Override public Filter createFilter ( ) { return new IsEqualToExtended ( ) ; }
22340	public static void startMentoring ( Player player ) { PlayerGroup group = player . getPlayerGroup2 ( ) ; if ( group != _NULL ) { group . onEvent ( new PlayerStartMentoringEvent ( group , player ) ) ; } }
22344	public void clear ( ) { super . clear ( ) ; Object [ ] keys = _set ; long [ ] vals = _values ; Arrays . fill ( _set , _NUM , _set . length , FREE ) ; Arrays . fill ( _values , _NUM , _values . length , ( long ) _NUM ) ; }
22349	protected DocsSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
22388	public PagesSaveQuery title ( String value ) { return unsafeParam ( _CHAR title _CHAR , value ) ; }
22412	public void unloadDataStore ( ) { if ( dataStore != _NULL ) { dataStore . dispose ( ) ; } }
22420	@ Override public StyledLayerDescriptor create ( ) { return DefaultSymbols . createNewLine ( ) ; }
22453	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR select = invert ; _CHAR ) ; }
22456	@ RequiresPermission ( Manifest . permission . WRITE_EXTERNAL_STORAGE ) public static boolean makeDirs ( File file ) { return file . mkdirs ( ) ; }
22461	private void compareOriginalData ( FieldConfigValuePopulateInterface field ) { if ( field != _NULL ) { String nextText = field . getStringValue ( ) ; String originalText = valueMap . get ( field ) ; if ( originalText != _NULL ) { if ( originalText . compareTo ( nextText ) != _NUM ) { treeDataUpdated = _BOOL ; } } } }
22466	public void leftClick ( ) throws InterruptedException { click ( InputEvent . BUTTON1_MASK ) ; }
22478	public byte [ ] deflateString2ByteArray ( String inputString ) { int length = deflateString2ByteArray ( inputString , buffer ) ; byte [ ] result = new byte [ Math . abs ( length ) ] ; System . arraycopy ( buffer , _NUM , result , _NUM , Math . abs ( length ) ) ; return result ; }
22508	@ Override public boolean hasPassword ( ) { return propertyMap . containsKey ( PASSWORD_KEY ) ; }
22521	public static < T > String toXml ( Class < T > clazz , T object ) { return CLASS_2_XSTREAM_INSTANCE . get ( clazz ) . toXML ( object ) ; }
22557	public static void print ( ) { out . flush ( ) ; }
22558	@ Override public Node cloneNode ( boolean deep ) { ElementDefinitionImpl newnode = ( ElementDefinitionImpl ) super . cloneNode ( deep ) ; newnode . attributes = attributes . cloneMap ( newnode ) ; return newnode ; }
22568	public void addJar ( String name ) { try { if ( name . endsWith ( _CHAR . jar _CHAR ) ) { JarFile f = new JarFile ( name ) ; jarFiles . add ( f ) ; } } catch ( IOException e ) { e . printStackTrace ( ) ; } }
22586	public void user_init ( ) throws java . lang . Exception { action_obj . scanner = scanner ; action_obj . classFile = classFile ; }
22600	public static String toString ( Object [ ] objects ) { return Arrays . deepToString ( objects ) ; }
22626	@ Override public IAssignmentAlgorithm createAssignmentAlgorithm ( ) { return new AssignmentUsingLCA ( cName ) ; }
22680	@ Override public void endElement ( String name ) throws SAXException { if ( documentHandler != _NULL ) { documentHandler . endElement ( name ) ; } }
22739	public static void showMessageWindow ( ) { if ( ProgramProperties . isUseGUI ( ) && MessageWindow . getInstance ( ) != _NULL ) { MessageWindow . getInstance ( ) . getFrame ( ) . setVisible ( _BOOL ) ; MessageWindow . getInstance ( ) . getFrame ( ) . setState ( JFrame . NORMAL ) ; MessageWindow . getInstance ( ) . getFrame ( ) . toFront ( ) ; MessageWindow . getInstance ( ) . startCapturingOutput ( ) ; } }
22740	private void checkIndex ( final int index ) throws MathIllegalArgumentException { MathUtils . checkRangeInclusive ( index , _NUM , start . length - _NUM ) ; }
22741	public static void apply ( ) { applyOpenSSLFix ( ) ; installLinuxPRNGSecureRandom ( ) ; }
22744	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR hide what = selected ; _CHAR ) ; }
22772	private void createUI ( ) { readConfigFileNoScrollPane ( _NULL , this , _CHAR symboltype / ExternalGraphicSymbol . xml _CHAR ) ; registerForTextFieldButton ( FieldIdEnum . EXTERNAL_GRAPHIC , this ) ; }
22781	public static String encode ( String namespacePrefix , String element ) { if ( ( namespacePrefix != _NULL ) && ! namespacePrefix . isEmpty ( ) ) { return String . format ( _CHAR % s : % s _CHAR , namespacePrefix , element ) ; } else { return element ; } }
22790	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set layout = _CHAR + AlignmentViewer . AlignmentLayout . Mapping . toString ( ) + _CHAR ; zoom axis = both what = fit ; _CHAR ) ; }
22794	public void addClickingListener ( OnWheelClickedListener listener ) { clickingListeners . add ( listener ) ; }
22804	public boolean isUptoDate ( ) { return isUpToDate ; }
22829	public Call put ( String url , Callback callback ) { return put ( url , _NULL , callback ) ; }
22839	public boolean isFifo ( ) { return isFifo ; }
22842	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set keep1 = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
22845	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set layout = _CHAR + AlignmentViewer . AlignmentLayout . ByStart . toString ( ) + _CHAR ; zoom axis = both what = fit ; _CHAR ) ; }
22876	public void clear ( ) { super . clear ( ) ; Object [ ] keys = _set ; short [ ] vals = _values ; Arrays . fill ( _set , _NUM , _set . length , FREE ) ; Arrays . fill ( _values , _NUM , _values . length , ( short ) _NUM ) ; }
22907	public static void v ( String tag , String s , Throwable e ) { if ( LOG . VERBOSE >= LOGLEVEL ) Log . v ( tag , s , e ) ; }
22915	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
22932	public void addRenderer ( EsriRendererInterface rendererObj ) { rendererMap . put ( rendererObj . getRendererClass ( ) , rendererObj ) ; }
23051	public void disconnect ( String reason ) { if ( ! connecting ) { proxy . getNetwork ( ) . closeSession ( raknetID , reason ) ; } }
23067	@ Override public boolean equals ( Object o ) { GameTime other = ( GameTime ) o ; return this . getTime ( ) == other . getTime ( ) ; }
23075	public void flip ( int i ) { bits [ i / _NUM ] ^= _NUM << ( i & _NUM ) ; }
23083	public static HttpResponse execute ( HttpMethod method , String targetUrl , String body ) throws IOException , KeyStoreException , NoSuchAlgorithmException , CertificateException , KeyManagementException { return execute ( method , targetUrl , body , _NULL ) ; }
23132	public void addChangingListener ( OnWheelChangedListener listener ) { changingListeners . add ( listener ) ; }
23149	public AppsGetQuery appIds ( List < String > value ) { return unsafeParam ( _CHAR app_ids _CHAR , value ) ; }
23184	public void addMainArgs ( String ... args ) { for ( String a : args ) _mainArgs . add ( a ) ; }
23187	private void checkSampleData ( final double [ ] data ) throws MathIllegalArgumentException , NullArgumentException { MathUtils . checkNotNull ( data , LocalizedCoreFormats . INPUT_ARRAY ) ; if ( data . length < _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . INSUFFICIENT_DATA_FOR_T_STATISTIC , data . length , _NUM , _BOOL ) ; } }
23191	protected AdsGetTargetGroupsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
23212	public static void drawResizeHandleSelection ( ViewTransform transform , Graphics2D g , ResizeHandle selectedResizeHandle ) { Rectangle bounds = selectedResizeHandle . getSwingBounds ( transform ) ; g . drawRect ( bounds . x , bounds . y , bounds . width , bounds . height ) ; }
23216	private void writeObject ( ObjectOutputStream oos ) throws IOException { oos . defaultWriteObject ( ) ; MatrixUtils . serializeRealVector ( coefficients , oos ) ; }
23235	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR compute wordCount kmer = _NUM step = _NUM mindepth = _NUM ; _CHAR ) ; }
23240	public void handle ( Exception ex ) { }
23267	public void cancel ( ) { ProgressIndicator indicator = myCurrentProgressIndicator . get ( ) ; if ( indicator == _NULL ) { myWizard . doCancelAction ( ) ; } else { indicator . cancel ( ) ; JButton button = myActionToButtonMap . get ( myCancelAction ) ; if ( button != _NULL ) { button . setEnabled ( _BOOL ) ; } } }
23278	public static String normalize ( String token ) { if ( isNumber ( token ) ) return _CHAR _NUM _CHAR ; if ( isPunctuation ( token ) ) return _CHAR PUNCT _CHAR ; if ( isEmail ( token ) ) return _CHAR EMAIL _CHAR ; if ( isDate ( token ) ) return _CHAR DATE _CHAR ; if ( isCode ( token ) ) return _CHAR CODE _CHAR ; if ( isWebsite ( token ) ) return _CHAR WEBSITE _CHAR ; if ( isTag ( token ) ) return _CHAR XMLTAG _CHAR ; return token ; }
23280	public synchronized void reset ( ) { this . state = Input . State . RELEASED ; this . value = _NUM ; }
23293	@ Override public Filter createFilter ( List < Expression > parameterList ) { return _NULL ; }
23300	public int readNullTerminatedBytes ( byte [ ] bytes ) throws IOException { int i = _NUM ; while ( _BOOL ) { byte letter = ( byte ) ins . read ( ) ; if ( letter == _NUM ) return i ; else bytes [ i ++ ] = letter ; } }
23302	public synchronized void start ( ) throws IllegalStateException , IOException { if ( ! mStreaming ) { configure ( ) ; super . start ( ) ; } }
23359	public void addGroup ( GroupConfig group ) { this . groupList . add ( group ) ; }
23363	public static String toGbk ( String str ) { try { return new String ( str . getBytes ( _CHAR utf - _NUM _CHAR ) , _CHAR gbk _CHAR ) ; } catch ( UnsupportedEncodingException e ) { LogUtils . warn ( e . getMessage ( ) ) ; return str ; } }
23401	public @ Nullable VideoCursor fetch ( ) { return fetch ( SortOrder . UNSPECIFIED ) ; }
23402	public static Drawable bitmapToDrawable ( Bitmap bitmap ) { return bitmap == _NULL ? _NULL : new BitmapDrawable ( bitmap ) ; }
23412	public void startModification ( ) throws IOException { io = new InputOutputReaderWriter ( new File ( getFileName ( ) ) , READ_WRITE ) ; getClassificationsFooter ( ) . clear ( ) ; io . seek ( getFileFooter ( ) . getClassificationsStart ( ) ) ; io . setLength ( io . getPosition ( ) ) ; }
23425	@ NotNull public ImageDescription describeImage ( @ NotNull File image ) { try { return computerVisionBuilder . describeImage ( _NUM , new FileInputStream ( image ) ) . withResult ( ) ; } catch ( FileNotFoundException e ) { throw new ImageNotFoundException ( image ) ; } }
23431	public void registerCache ( ICache cache ) { if ( _NULL != cache ) { mCaches . add ( cache ) ; } }
23433	public synchronized void stop ( ) { this . stopped = _BOOL ; }
23440	public boolean isPlayToken ( ) { return playToken ; }
23477	public void notifyAttackedObservers ( Creature creature ) { notifyObservers ( ObserverType . ATTACKED , creature ) ; }
23478	public synchronized void stop ( ) { if ( mAnimatorSet == _NULL || ! mIsStarted ) { return ; } mAnimatorSet . end ( ) ; }
23532	@ Override public boolean equals ( Object o ) { return o instanceof AirMapFlightStatus && getId ( ) . equals ( ( ( AirMapFlightStatus ) o ) . getId ( ) ) ; }
23539	@ Override public void createStroke ( Symbolizer symbolizer ) { if ( symbolizer instanceof LineSymbolizer ) { LineSymbolizer line = ( LineSymbolizer ) symbolizer ; if ( line != _NULL ) { line . setStroke ( styleFactory . getDefaultStroke ( ) ) ; } } }
23573	public static int v ( Object tag , String msg ) { return isPrint ? android . util . Log . v ( tag . getClass ( ) . getSimpleName ( ) , msg ) : - _NUM ; }
23597	public void initAndRecoverFromDataStorage ( boolean isWarm ) throws RemoteException , CreateException , SpaceComponentsInitializeException { _engine . init ( isWarm , _BOOL ) ; _statistics = ( JSpaceStatistics ) getFilterObject ( Constants . Statistics . STATISTICS_FILTER_NAME ) ; _workerManager = createWorkerManager ( ) ; _componentManager = new SpaceComponentManager ( this ) ; }
23622	public void updateConfig ( String serviceURL , ClientConfiguration newConfig ) { this . serviceURL = serviceURL ; this . clientConfig = newConfig ; }
23660	private void updateButtonState ( boolean enabled ) { btnConnect . setEnabled ( enabled ) ; connectionComboBox . setEnabled ( enabled ) ; btnEditConnection . setEnabled ( enabled ) ; }
23674	public MarketSearchQueryWithExtended tags ( List < Integer > value ) { return unsafeParam ( _CHAR tags _CHAR , value ) ; }
23745	protected boolean hasToolbarNavigation ( ) { return _BOOL ; }
23765	public static int pxToSp ( Context context , float pxValue ) { final float fontScale = context . getResources ( ) . getDisplayMetrics ( ) . scaledDensity ; return ( int ) ( pxValue / fontScale + _NUM . _NUM ) ; }
23771	@ Override public void backgroundColourUpdate ( Color backgroundColour ) { this . backgroundColour = backgroundColour ; }
23773	protected void drawGridBackground ( Canvas c ) { if ( mDrawGridBackground ) { c . drawRect ( mViewPortHandler . getContentRect ( ) , mGridBackgroundPaint ) ; } if ( mDrawBorders ) { c . drawRect ( mViewPortHandler . getContentRect ( ) , mBorderPaint ) ; } }
23848	public void startComponents ( ) { startComponents ( _BOOL ) ; startComponents ( _BOOL ) ; _spaceMode = SpaceMode . PRIMARY ; }
23851	private SocketChannel createSocket ( String host , int port ) throws IOException { SocketChannel sockChannel = SocketChannel . open ( ) ; sockChannel . configureBlocking ( _BOOL ) ; m_Address = new InetSocketAddress ( host , port ) ; LRMIUtilities . initNewSocketProperties ( sockChannel ) ; return sockChannel ; }
23863	public boolean isIgnore ( ) { return _BOOL ; }
23881	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
23942	@ Override public void createTitle ( Box textPanel , UpdateSymbolInterface parent ) { }
23945	@ Override public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { super . onCreateOptionsMenu ( menu , inflater ) ; mOptionsMenu = menu ; inflater . inflate ( R . menu . list , menu ) ; }
23947	private void invalidShellParameter ( ) { Platform . runLater ( _NULL ) ; }
23950	final public static long updateCollection ( String collection , Object id , V v , boolean adding ) { BasicDBObject q = new BasicDBObject ( ) . append ( X . ID , id ) ; return updateCollection ( collection , q , v ) ; }
23955	public static void d ( String tag , String s , Throwable e ) { if ( LOG . DEBUG >= LOGLEVEL ) Log . d ( tag , s , e ) ; }
23982	public void encoding ( ) { if ( stripe_unit_size % block_nbr != _NUM ) { throw new RuntimeException ( _CHAR Can not striping . wrong DATA_LENGTH ! _CHAR ) ; } STAR_encoding_row ( ) ; STAR_encoding_diag1 ( ) ; STAR_encoding_diag2 ( ) ; }
23986	@ RequestMapping ( value = ClientUris . UN_REGISTER , method = RequestMethod . GET ) public void unRegister ( ) { ClientSession clientSession = ClientContext . get ( ) ; assert clientSession != _NULL ; clientService . unRegisterClient ( clientSession . getId ( ) ) ; }
24003	public void populate ( PolygonSymbolizer polygonSymbolizer ) { for ( VendorOptionInterface extension : vendorOptionList ) { extension . populate ( polygonSymbolizer ) ; } }
24016	public PlacesSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
24033	protected AdsGetTargetingStatsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
24037	public void start ( ) throws StartupException { }
24040	public Iterable < KeyVal < T >> iterable ( ) { return _NULL ; }
24055	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
24056	public SimpleObjectProperty < TestCaseStatus > statusProperty ( ) { return this . statusProperty ; }
24090	private void bindArticleDatas ( ) { final Article article = ( Article ) getIntent ( ) . getExtras ( ) . get ( EXTRA_ARTICLE ) ; mHeader . setImageResource ( article . getHeader ( ) ) ; mTitle . setText ( article . getTitle ( ) ) ; mDate . setText ( article . getDate ( ) ) ; mTitleContent . setBackgroundResource ( article . getBackgroundColor ( ) ) ; }
24112	public AggregationSet count ( ) { return add ( new CountAggregator ( ) ) ; }
24120	public NotesGetByIdQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
24145	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set ignoreUnassigned = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
24164	private void clearMessages ( ) { animationHandler . removeMessages ( MESSAGE_SCROLL ) ; animationHandler . removeMessages ( MESSAGE_JUSTIFY ) ; }
24165	@ Override public void elementDecl ( String name , String contentModel , Augmentations augmentations ) throws XNIException { }
24171	protected boolean emptyDatabaseAfterTest ( ) { return _BOOL ; }
24203	public void reset ( ) { mGestureDetector . reset ( ) ; mPreviousTransform . reset ( ) ; mActiveTransform . reset ( ) ; }
24219	public void identity ( ) { for ( int j = _NUM ; j < size ( ) ; j ++ ) for ( int i = _NUM ; i < size ( ) ; i ++ ) set ( i , j , ( i == j ? _NUM : _NUM ) ) ; }
24227	public void actionPerformed ( ActionEvent ev ) { final SamplesViewer samplesViewer = ( ( SamplesViewer ) getViewer ( ) ) ; final Collection < String > samples = samplesViewer . getSamplesTable ( ) . getSelectedSamples ( ) ; if ( samples . size ( ) > _NUM ) execute ( _CHAR set nodeShape = triangle sample = _CHAR_CHAR_CHAR _CHAR_CHAR_CHAR ; _CHAR ) ; }
24230	public void delete ( ) { DataSourceWindowManager . sharedInstance ( ) . closeDataSource ( this ) ; getOwner ( ) . getRepository ( ) . removeDataSource ( this ) ; }
24231	public void resetCache ( ) { Cache . clear ( ) ; ElementAccessTime . clear ( ) ; CacheAccess . clear ( ) ; TimeCnt = Long . MIN_VALUE ; }
24282	public void addField ( Field field ) { if ( fFields == _NULL ) fFields = new Field [ _NUM ] ; else if ( fFieldCount == fFields . length ) fFields = resize ( fFields , fFieldCount * _NUM ) ; fFields [ fFieldCount ++ ] = field ; }
24326	@ Override public void confirm ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( yesButton ) ) ; }
24331	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + JensenShannonDivergence . SqrtJensenShannonDivergence + _CHAR ; _CHAR ) ; }
24363	public Builder duplicateColumn ( String column , String newName ) { return transform ( new DuplicateColumnsTransform ( Collections . singletonList ( column ) , Collections . singletonList ( newName ) ) ) ; }
24371	@ Override protected void onPause ( ) { super . onPause ( ) ; Log . i ( TAG , _CHAR onPause _CHAR ) ; if ( mCamera != _NULL ) { mCamera . stopPreview ( ) ; } }
24380	private ProcessFunctionParameterValue findParameterValue ( List < ProcessFunctionParameterValue > valueList , String parameterName ) { for ( ProcessFunctionParameterValue paramValue : valueList ) { if ( paramValue . name . compareTo ( parameterName ) == _NUM ) { return paramValue ; } } return _NULL ; }
24381	public NotesEditCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
24408	public void unregisterCustomizer ( JmxConnectionCustomizer customizer ) { JmxConnectionSupportImpl . unregisterCustomizer ( customizer ) ; }
24486	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set contract - gaps = _CHAR + ! isSelected ( ) + _CHAR ; _CHAR ) ; }
24500	public void navigateToMain ( ) { activity . startActivity ( new Intent ( activity , MainActivity . class ) ) ; activity . finish ( ) ; }
24534	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set colorMismatchesVsReference = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
24555	public void register ( String key , Block value ) { register ( key , matcherOf ( value ) ) ; }
24631	private void showProgress ( boolean isVisible ) { this . progressBar . clearAnimation ( ) ; this . progressBar . setVisibility ( isVisible ? View . VISIBLE : View . GONE ) ; this . getActivity ( ) . setProgressBarIndeterminateVisibility ( isVisible ) ; }
24632	protected void clearCategories ( ) { for ( CategoryComponent category : categories ) { TableSubHeader subheader = category . getElement ( ) ; if ( subheader != _NULL ) { subheader . removeFromParent ( ) ; } } categories . clear ( ) ; }
24645	private void disconnectFromGeoServer ( GeoServerClientInterface client ) { if ( client != _NULL ) { client . disconnect ( ) ; GeoServerConnection connection = client . getConnection ( ) ; if ( connection != _NULL ) { geoServerStyleMap . remove ( connection ) ; geoServerLayerMap . remove ( connection ) ; progress . disconnect ( connection ) ; } } }
24646	public synchronized long commit ( ) throws IOException { long gen ; if ( writer != _NULL ) { if ( taxoWriter != _NULL ) { taxoWriter . commit ( ) ; } gen = writer . commit ( ) ; } else { gen =- _NUM ; } return gen ; }
24659	private void initSkinLoader ( ) { setUpSkinFile ( ) ; SkinManager . getInstance ( ) . init ( this ) ; SkinManager . getInstance ( ) . loadSkin ( ) ; }
24661	@ Override public void addListener ( DataSourceUpdatedInterface listener ) { listenerList . add ( listener ) ; }
24687	public void disableDragItem ( ) { itemDragEnabled = _BOOL ; mItemTouchHelper = _NULL ; }
24695	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR Line . xml _CHAR ) ; }
24707	protected void okButtonPressed ( ) { String selectedItem = ( String ) comboBoxNewSLD . getSelectedItem ( ) ; if ( selectedItem != _NULL ) { if ( newSLDObjectMap != _NULL ) { selected = newSLDObjectMap . get ( selectedItem ) ; } } setVisible ( _BOOL ) ; }
24710	public void clear ( ) { fromDir = _NULL ; fromExt = _NULL ; bList . removeAllElements ( ) ; hasChanged = _BOOL ; }
24711	@ Override public Expression createExpression ( EnvVar envVar ) { if ( envVar == _NULL ) { return _NULL ; } Function function = ff . function ( _CHAR env _CHAR , ff . literal ( envVar . getName ( ) ) ) ; return function ; }
24712	public void addClickingListener ( OnWheelClickedListener listener ) { clickingListeners . add ( listener ) ; }
24737	@ Bean public Auth0Client auth0Client ( ) { return new Auth0Client ( clientId , issuer ) ; }
24738	protected void destroySearchBarControl ( ) { if ( mContextualSearchBarControl != _NULL ) { mContextualSearchBarControl . destroy ( ) ; mContextualSearchBarControl = _NULL ; } }
24739	@ Override public boolean accept ( File directory , String fileName ) { if ( ! super . accept ( directory , fileName ) ) return _BOOL ; String firstLine = Basic . getFirstLineFromFile ( new File ( fileName ) ) ; return firstLine != _NULL && firstLine . startsWith ( _CHAR Reading from fasta file _CHAR ) ; }
24740	protected void notifyClickListenersAboutClick ( int item ) { for ( OnWheelClickedListener listener : clickingListeners ) { listener . onItemClicked ( this , item ) ; } }
24768	protected PagesSaveAccessQuery pageId ( int value ) { return unsafeParam ( _CHAR page_id _CHAR , value ) ; }
24777	public void fireEvent ( final String instanceId , String ref , String type , Map < String , Object > params ) { fireEvent ( instanceId , ref , type , params , _NULL ) ; }
24789	@ Override public Filter createFilter ( ) { return new IsGreaterThanOrEqualToExtended ( ) ; }
24798	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set flipH = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
24805	@ Override public void write ( int idx ) throws IOException { out . write ( idx ) ; }
24831	@ Override public ElementLocator createLocator ( Field field ) { return new DefaultElementLocator ( resolveContext ( field ) , field ) ; }
24844	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR geoserver / GeoServerRandomFill . xml _CHAR ) ; }
24885	Stream < Concept > insertAll ( Map < String , Concept > results ) { concepts . clear ( ) ; concepts . putAll ( new HashMap < > ( results ) ) ; return vars . stream ( ) . map ( _NULL ) ; }
24921	private SearchJSONResults startMovieFromListRequest ( String query ) throws InternetConnectionException { if ( isThereInternetConnection ( mContext ) ) { try { return mWebServicesApiCallsImpl . getMoviesList ( query ) ; } catch ( RetrofitError e ) { throw new InternetConnectionException ( e . getMessage ( ) ) ; } } else { throw new InternetConnectionException ( mContext . getString ( R . string . internet_connection_error ) ) ; } }
24931	public final int hashCode ( ) { if ( toString ( ) == _NULL ) { return _NUM ; } return toString ( ) . hashCode ( ) ; }
24935	public PetCategory save ( PetCategory petCategory ) { log . debug ( _CHAR Request to save PetCategory : { } _CHAR , petCategory ) ; PetCategory result = petCategoryRepository . save ( petCategory ) ; return result ; }
24940	void addCodebaseComponents ( URL [ ] jars ) { if ( jars == _NULL ) return ; for ( int i = _NUM ; i < jars . length ; i ++ ) { if ( ! codebaseComponents . contains ( jars [ i ] ) ) codebaseComponents . add ( jars [ i ] ) ; } addCommonJARs ( jars ) ; }
24945	@ Override public boolean hasNext ( ) { return lengthOfFirstOfNext > _NUM || samIterator . hasNext ( ) ; }
24954	private void flushOutput ( ) throws IOException { if ( decoderOut . position ( ) > _NUM ) { writer . write ( decoderOut . array ( ) , _NUM , decoderOut . position ( ) ) ; decoderOut . rewind ( ) ; } }
24960	public PhotosReportCommentQuery reason ( ReportReason value ) { return unsafeParam ( _CHAR reason _CHAR , value ) ; }
24962	public void render ( OutputStream out , int indent ) throws IOException { DotGraphUtility . renderLine ( out , command , indent ) ; }
24975	public PhotosSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
24992	public MonsterToQuestCursor queryMonsterToQuestMonster ( long id ) { return mHelper . queryMonsterToQuestMonster ( id ) ; }
25053	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set useColors = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
25065	public final int hashCode ( ) { return super . hashCode ( ) ; }
25108	private static boolean decodeBooleanElement ( Document document , Node child ) { return Boolean . valueOf ( child . getTextContent ( ) ) . booleanValue ( ) ; }
25130	public void resetTime ( ) { }
25131	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
25134	public static void showError ( Object parentIgnored , String message ) { showNotification ( title , message , Mode . error , Pos . BOTTOM_LEFT , _NUM ) ; }
25135	private void locationPlacesIntent ( ) { try { PlacePicker . IntentBuilder builder = new PlacePicker . IntentBuilder ( ) ; startActivityForResult ( builder . build ( this ) , PLACE_PICKER_REQUEST ) ; } catch ( GooglePlayServicesRepairableException | GooglePlayServicesNotAvailableException e ) { e . printStackTrace ( ) ; } }
25145	public static SM_SYSTEM_MESSAGE STR_CMD_SHOUT_OUTPUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25157	private void checkSampleData ( final StatisticalSummary stat ) throws MathIllegalArgumentException , NullArgumentException { MathUtils . checkNotNull ( stat ) ; if ( stat . getN ( ) < _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . INSUFFICIENT_DATA_FOR_T_STATISTIC , stat . getN ( ) , _NUM , _BOOL ) ; } }
25160	public String readNullTerminatedBytes ( ) throws IOException { StringBuilder buf = new StringBuilder ( ) ; while ( _BOOL ) { byte letter = ( byte ) ins . read ( ) ; if ( letter == - _NUM ) throw new IOException ( _CHAR readNullTerminatedBytes ( ) : failed ( EOF ) _CHAR ) ; if ( letter == _NUM ) break ; else buf . append ( ( char ) letter ) ; } return buf . toString ( ) ; }
25170	public void clear ( ) { super . clear ( ) ; Object [ ] keys = _set ; int [ ] vals = _values ; Arrays . fill ( _set , _NUM , _set . length , FREE ) ; Arrays . fill ( _values , _NUM , _values . length , ( int ) _NUM ) ; }
25171	public TopicSubscriber createDurableSubscriber ( Topic topic , String name , String messageSelector , boolean noLocal ) throws JMSException { ensureOpen ( ) ; throw new JMSException ( _CHAR This version of JMS does not support durable subscribers . '' ) ; }
25253	public GroupsSetCallbackSettingsQuery groupJoin ( Boolean value ) { return unsafeParam ( _CHAR group_join _CHAR , value ) ; }
25255	public static int readByte ( byte b , boolean signed ) { if ( signed ) { return b ; } else { return b & _NUM ; } }
25308	void register ( Event event ) { instance . events . put ( event . getEvent ( ) , event ) ; log ( event . getEvent ( ) + _CHAR registered _CHAR ) ; }
25378	public void clear ( ) { _entryInfos . clear ( ) ; }
25390	public void markFooterViewHeight ( View view ) { this . mFooterView = view ; mFooterViewHeight = mFooterView . getHeight ( ) ; if ( mFooterViewHeight <= _NUM ) { mFooterViewHeight = mFooterView . getLayoutParams ( ) . height ; } else { this . mFooterView . getLayoutParams ( ) . height = mFooterViewHeight ; } }
25392	public static void splitFilePath ( String sourcePath , List < String > partitionsFiles , String separator ) { if ( StringUtils . isNotEmpty ( sourcePath ) ) { String [ ] files = sourcePath . split ( separator ) ; for ( String file : files ) { partitionsFiles . add ( file ) ; } } }
25409	private void error ( String s ) { System . out . println ( _CHAR ClusterUnitDatabase Error : _CHAR + s ) ; }
25436	public boolean isShowing ( ) { return dialog . isShowing ( ) ; }
25438	public boolean saveHtmlCache ( String url , byte [ ] bytes ) { if ( TextUtils . isEmpty ( url ) || _NULL == bytes || bytes . length == _NUM ) { return _BOOL ; } if ( ! checkUrl ( url ) ) { return _BOOL ; } return mInternalHtmlCache . saveCache ( url , bytes ) ; }
25453	private void parse ( BufferedReader reader ) { this . messages . clear ( ) ; reader . lines ( ) . map ( _NULL ) . filter ( _NULL ) . forEach ( _NULL ) ; }
25455	public String toString ( ) { return name ; }
25457	public void expand ( NodeBase v ) { if ( v != _NULL ) { for ( Enumeration descendants = v . breadthFirstEnumeration ( ) ; descendants . hasMoreElements ( ) ; ) { v = ( NodeBase ) descendants . nextElement ( ) ; dataTree . expandPath ( new TreePath ( v . getPath ( ) ) ) ; } } }
25485	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set nodeShape = square ; _CHAR ) ; }
25511	private void readObject ( ObjectInputStream ois ) throws ClassNotFoundException , IOException { ois . defaultReadObject ( ) ; MatrixUtils . deserializeRealMatrix ( this , _CHAR tableau _CHAR , ois ) ; }
25516	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
25541	@ Override public boolean hasRaster ( Symbolizer symbolizer ) { return _BOOL ; }
25549	protected void mangleClass ( StringBuilder sb , Class cl ) { String name = cl . getName ( ) ; if ( cl . isArray ( ) ) { sb . append ( _CHAR array_ _CHAR ) ; this . mangleClass ( sb , cl . getComponentType ( ) ) ; } else { sb . append ( name ) ; } }
25559	private void initTemplates ( ) { m_jmsMessageTemplate = new GSMessageImpl ( ) ; m_jmsMessageTemplate . setDestinationName ( m_destName ) ; m_jmsMessageTemplate . setProperties ( _NULL ) ; }
25591	public void syncLocationManager2InfoSection ( LocationManager locationManager ) throws IOException { if ( textStoragePolicy != locationManager . getTextStoragePolicy ( ) ) throw new IOException ( _CHAR setLocationManager ( ) : attempting to change textStoragePolicy from _CHAR + textStoragePolicy + _CHAR to _CHAR + locationManager . getTextStoragePolicy ( ) ) ; textStoragePolicy = locationManager . getTextStoragePolicy ( ) ; textFileNames = locationManager . getFileNames ( ) ; textFileSizes = locationManager . getFileSizes ( ) ; }
25621	public void apply ( Switch sw ) { ( ( RefSwitch ) sw ) . caseParameterRef ( this ) ; }
25625	public void close ( ) { if ( this . zip != _NULL ) { try { this . zip . close ( ) ; } catch ( IOException e ) { System . err . println ( _CHAR Could not close apk file : _CHAR + e . getMessage ( ) ) ; e . printStackTrace ( ) ; } this . zip = _NULL ; } }
25649	public final int hashCode ( ) { return super . hashCode ( ) ; }
25674	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
25688	protected AdsGetAdsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
25690	public void removeAllEmails ( ) { try { removeLastEmails ( folder . getMessageCount ( ) ) ; } catch ( MessagingException e ) { LOGGER . error ( _CHAR error when removing all emails _CHAR , e ) ; } }
25719	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set show - insertions = _CHAR + ! isSelected ( ) + _CHAR ; apply ; _CHAR ) ; }
25726	static void initField ( ) { for ( int y = _NUM ; y < field_size ; y ++ ) { for ( int x = _NUM ; x < field_size ; x ++ ) { field [ x ] [ y ] = dotEmpty ; } } }
25737	@ Override public void addField ( DataSourceFieldInterface dataSourceField ) { }
25760	protected void init ( AbstractTextEditor editor ) { IJavaElement jElem = getJavaElement ( editor ) ; setProj ( jElem . getResource ( ) . getProject ( ) ) ; setRec ( jElem . getResource ( ) ) ; }
25771	public static WxMenuResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxMenuResult . class ) ; }
25787	protected String nextLine ( ) { if ( pushedBackLine != _NULL ) { String result = pushedBackLine ; pushedBackLine = _NULL ; return result ; } else return iterator . next ( ) ; }
25795	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
25811	synchronized public void terminate ( ) { if ( _isTerminated ) return ; _isTerminated = _BOOL ; if ( Thread . currentThread ( ) != this ) interrupt ( ) ; if ( _logger . isLoggable ( Level . FINE ) ) _logger . log ( Level . FINE , toString ( ) + _CHAR active failure detector has terminated _CHAR ) ; }
25813	public static Object invokeMethod ( Class < ? > clazz , Object obj , String name ) throws NoSuchMethodException , InvocationTargetException , IllegalAccessException { return invokeMethod ( clazz , obj , name , _NULL , _NULL ) ; }
25836	public static QrCodeResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , QrCodeResult . class ) ; }
25852	@ Override public Filter createFilter ( ) { return new TouchesExtended ( ) ; }
25856	public boolean isFooter ( int position ) { return position < getItemCount ( ) && position >= getItemCount ( ) - mFootViews . size ( ) ; }
25861	public void dataSourceLoaded ( DataSourceInterface dataSource ) { this . dataSource = dataSource ; if ( this . dataSource != _NULL ) { attributeNameList = this . dataSource . getAttributes ( expectedDataType ) ; } populateAttributeComboBox ( ) ; }
25878	private void storeLegionMember ( LegionMember legionMember ) { storeLegionMember ( legionMember , _BOOL ) ; }
25935	private String number2Full ( int time ) { if ( time < _NUM ) { return _CHAR _NUM _CHAR + time ; } else { return _CHAR _CHAR + time ; } }
25936	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set showLabels = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
25952	protected void populateStandardData ( Symbolizer symbolizer ) { StandardData standardData = new StandardData ( ) ; if ( symbolizer != _NULL ) { standardData . name = symbolizer . getName ( ) ; standardData . description = symbolizer . getDescription ( ) ; standardData . unit = symbolizer . getUnitOfMeasure ( ) ; } populateStandardData ( standardData ) ; }
25969	private static Color decodeColourElement ( Document document , Node child ) { return ColourUtils . toColour ( child . getTextContent ( ) ) ; }
26024	@ Override public Filter createFilter ( ) { return new TContainsExtended ( ) ; }
26026	private static int compareInt ( final int a , final int b ) { int result = _NUM ; if ( a > b ) { result = _NUM ; } else if ( a < b ) { result =- _NUM ; } return result ; }
26031	public void stopTasks ( ) { if ( task != _NULL ) { task . cancel ( _BOOL ) ; task = _NULL ; } if ( periodicTasks != _NULL ) { for ( Future < ? > periodicTask : this . periodicTasks ) { if ( periodicTask != _NULL ) { periodicTask . cancel ( _BOOL ) ; periodicTask = _NULL ; } } } stopPeriodicActions ( ) ; }
26058	public final boolean equals ( Object obj ) { if ( toString ( ) == _NULL ) { return ( obj != _NULL ) && ( obj . toString ( ) == _NULL ) ; } if ( obj instanceof Type ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
26104	@ Override protected IJSpace doCreateSpace ( ) throws DataAccessException { return factory . create ( this , url ) ; }
26107	public EmbeddedSpaceConfigurer leaderSelector ( LeaderSelectorConfig leaderSelectorConfig ) { validate ( ) ; factoryBean . leaderSelectorConfig ( leaderSelectorConfig ) ; return this ; }
26115	private String prepareSlowConsumerSleepMsg ( SocketAddress address , int retriesLeft ) { return _CHAR Sleeping - waiting for slow consumer : '' + address + '' Retry = '' + ( _slowConsumerRetries - retriesLeft ) + _CHAR SlowConsumerThroughput = _CHAR + _slowConsumerThroughput + _CHAR SlowConsumerRetries = _CHAR + _slowConsumerRetries + _CHAR SlowConsumerLatency = _CHAR + _slowConsumerLatency ; }
26116	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
26117	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set nodeShape = triangle ; _CHAR ) ; }
26136	public Interceptor [ ] buildMethodInterceptors ( Method method ) { Interceptors before = method . getAnnotation ( Interceptors . class ) ; return before != _NULL ? createInterceptors ( before ) : NULL_INTERCEPTOR_ARRAY ; }
26138	public void callHandler ( String handlerName , String data , CallBackFunction callBack ) { doSend ( handlerName , data , callBack ) ; }
26139	@ Override public void updateValue ( String key , boolean value ) { updateValue ( key , value ? TRUE : FALSE ) ; }
26146	protected AdsGetClientsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
26166	public static ConversationListFragment newInstance ( String anchorId , boolean isNormalStyle ) { ConversationListFragment fragment = new ConversationListFragment ( ) ; Bundle bundle = new Bundle ( ) ; bundle . putString ( ARG_ANCHOOR , anchorId ) ; bundle . putBoolean ( ARG_IS_NORMAL , isNormalStyle ) ; fragment . setArguments ( bundle ) ; return fragment ; }
26180	public static HystrixCommand . Setter buildSetter ( ) { return buildSetter ( new HystrixSetter ( ) ) ; }
26232	protected void clearRows ( boolean clearData ) { if ( clearData ) { rows . clear ( ) ; } }
26240	@ Override public final void writeDouble ( double v ) throws IOException { writeLong ( Double . doubleToLongBits ( v ) ) ; }
26247	public void java_lang_reflect_Array_newArray ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { throw new NativeMethodNotSupportedException ( method ) ; }
26282	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set colorMatchesVsReference = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
26283	public void removeChangingListener ( OnWheelChangedListener listener ) { changingListeners . remove ( listener ) ; }
26285	public void copy ( DataTable megan4Table ) { clear ( ) ; StringWriter sw = new StringWriter ( ) ; try { megan4Table . write ( sw , _BOOL ) ; read ( new BufferedReader ( new StringReader ( sw . toString ( ) ) ) , _BOOL ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
26288	@ Override public void addMessage ( String message ) { textPane . setForeground ( Color . BLACK ) ; textPane . append ( message ) ; textPane . append ( _CHAR \ n _CHAR ) ; }
26289	public static void warn ( @ Nullable Class < ? > caller , String message , Object ... args ) { android . util . Log . w ( tag ( caller ) , String . format ( Locale . ENGLISH , message , args ) ) ; }
26294	@ Override public void rightMouseButton ( Object selectedItem , MouseEvent e ) { }
26306	private void deleteFile ( String name ) throws LogException { if ( ! new File ( name ) . delete ( ) ) { throw new LogException ( _CHAR could n _CHAR_CHAR + name ) ; } }
26314	public static String guessBlastType ( String blastText ) { if ( blastText == _NULL || ! blastText . contains ( _CHAR Query _CHAR ) ) return UNKNOWN ; if ( blastText . contains ( _CHAR Frame = _CHAR ) || ( blastText . contains ( _CHAR Frame = _CHAR ) ) ) return BLASTX ; if ( blastText . contains ( _CHAR Strand = _CHAR ) || blastText . contains ( _CHAR Strand = _CHAR ) ) return BLASTN ; return BLASTP ; }
26317	public static SM_SYSTEM_MESSAGE STR_CMD_SHOUT_OUTPUT_NPC ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26359	public boolean hasManaStones ( ) { return manaStones != _NULL && manaStones . size ( ) > _NUM ; }
26364	@ Override public boolean accept ( File directory , String fileName ) { if ( ! super . accept ( directory , fileName ) ) return _BOOL ; try { return DAAParser . isMeganizedDAAFile ( ( new File ( directory , fileName ) ) . getPath ( ) , _BOOL ) ; } catch ( IOException e ) { return _BOOL ; } }
26367	public static void close ( URLConnection conn ) { if ( conn instanceof HttpURLConnection ) { ( ( HttpURLConnection ) conn ) . disconnect ( ) ; } }
26372	public DotGraphNode drawNode ( String name ) { DotGraphNode node = getNode ( name ) ; if ( node == _NULL ) throw new RuntimeException ( _CHAR Assertion failed . '' ) ; if ( ! this . drawElements . contains ( node ) ) this . drawElements . add ( node ) ; return node ; }
26374	public GroupsSetCallbackSettingsQuery groupLeave ( Boolean value ) { return unsafeParam ( _CHAR group_leave _CHAR , value ) ; }
26409	private void stop ( ) { if ( start == _NUM ) { LOG . warn ( _CHAR Tried to stop timer that has not been started : { } _CHAR , name ) ; return ; } duration += System . nanoTime ( ) - start ; REGISTRY . timer ( name ) . update ( duration , TimeUnit . NANOSECONDS ) ; start = _NUM ; }
26414	public void removeScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . remove ( listener ) ; }
26513	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR show window = message ; _CHAR ) ; execute ( _CHAR list assignmentsToLevels ; _CHAR ) ; }
26533	public SimpleBooleanProperty showProperty ( ) { return this . show ; }
26536	public void connectionLost ( final Throwable cause ) { logger . error ( _CHAR Connection lost _CHAR , cause ) ; connection . connectionLost ( cause ) ; }
26552	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR Rule . xml _CHAR ) ; createFilter ( ) ; }
26563	public void clear ( ) { removeChildListeners ( ) ; m_clauses . clear ( ) ; fireExpressionChange ( ) ; }
26607	public synchronized void resetTime ( ) { }
26609	public void onDirectoryChange ( final File directory ) { }
26610	public < X extends DataSource > void unregisterPropertiesProvider ( PropertiesProvider < X > provider ) { providers . remove ( provider ) ; }
26632	public final void updateZone ( ) { ZoneUpdateService . getInstance ( ) . add ( getOwner ( ) ) ; }
26683	public static void showError ( String message ) { showNotification ( title , message , Mode . error , Pos . BOTTOM_LEFT , _NUM ) ; }
26728	public double cond ( ) { return s [ _NUM ] / s [ Math . min ( m , n ) - _NUM ] ; }
26735	public void dismissLoFiBar ( ) { if ( mSnackbarManager . isShowing ( ) ) mSnackbarManager . dismissSnackbars ( this ) ; }
26739	public static LikesAttributesImpl empty ( ) { return new LikesAttributesImpl ( ) ; }
26760	public void addChangingListener ( OnWheelChangedListener listener ) { changingListeners . add ( listener ) ; }
26778	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set drawer = _CHAR + ViewerBase . DiagramType . RoundedCladogram + _CHAR ; _CHAR ) ; }
26844	public boolean isAppliable ( ) { return getBlastFileName ( ) . trim ( ) . length ( ) > _NUM && ( new File ( Basic . getFirstLine ( getBlastFileName ( ) ) . trim ( ) ) ) . exists ( ) ; }
26863	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + CalculateEcologicalIndices . GOODALL + _CHAR ; _CHAR ) ; }
26906	public Builder renameColumn ( String oldName , String newName ) { return transform ( new RenameColumnsTransform ( oldName , newName ) ) ; }
26923	public boolean isFollowPeak ( ) { return followPeak ; }
26934	public static long calculateDifference ( long startTimeMillis , long endTimeMillis , DifferenceMode mode ) { return calculateDifference ( new Date ( startTimeMillis ) , new Date ( endTimeMillis ) , mode ) ; }
26940	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
26964	public static void apply ( Taxa taxa , Distances distances , PhyloTreeView treeView ) { if ( instance == _NULL ) instance = new UPGMA ( ) ; instance . computeUPMATree ( taxa , distances , treeView . getPhyloTree ( ) ) ; instance . embedTree ( treeView ) ; }
27055	public static void main ( String [ ] args ) { runShell ( args , Version . VERSION , HISTORY_FILENAME , new GraqlClientImpl ( ) ) ; }
27059	public void onDirectoryCreate ( final File directory ) { }
27064	public void doUpdate ( ) { lock . lock ( ) ; try { forgetObjects ( ) ; findVisibleObjects ( ) ; } finally { lock . unlock ( ) ; } }
27076	public String name ( ) { return this . record . name ( ) ; }
27130	public WallGetCommentsQueryWithExtended allowGroupComments ( Boolean value ) { return unsafeParam ( _CHAR allow_group_comments _CHAR , value ) ; }
27140	public void guardMode ( ) { SummonsService . guardMode ( getOwner ( ) ) ; }
27155	public boolean hasFusionStones ( ) { return fusionStones != _NULL && fusionStones . size ( ) > _NUM ; }
27157	public long length ( ) throws IOException { return position ; }
27161	public static double tfidf ( double td , double idf ) { return td * idf ; }
27167	public void activate ( ) { mSensorManager . registerListener ( this , mSensor , SensorManager . SENSOR_DELAY_UI ) ; mActive = _BOOL ; }
27187	@ Override public void updateValue ( String key , boolean value ) { updateValue ( key , value ? TRUE : FALSE ) ; }
27212	private void dump ( final Thread thread , final Throwable exception ) { if ( isWriting ) { return ; } isWriting = _BOOL ; SharePref . saveLastCrashLog ( mContext , mWriter . write ( thread , exception ) ) ; isWriting = _BOOL ; }
27223	public UsersGetNearbyQuery radius ( UsersGetNearbyRadius value ) { return unsafeParam ( _CHAR radius _CHAR , value ) ; }
27240	protected AdsRemoveOfficeUsersQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
27253	public boolean isEmpty ( ) { return priorityQueue . isEmpty ( ) ; }
27270	public void addScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . add ( listener ) ; }
27279	public SimpleStringProperty stepNumberProperty ( ) { return this . stepNumberProperty ; }
27313	public Bindings add ( String property , JToggleButton c ) { registerPropertyChangeListener ( c ) ; return add ( new JToggleButtonBinding ( property , c , _BOOL ) ) ; }
27317	@ Override public Filter createFilter ( ) { return new IsLessThanOrEqualToExtended ( ) ; }
27324	public void collapseSelectedNodes ( ) { for ( Node v = getSelectedNodes ( ) . getFirstElement ( ) ; v != _NULL ; v = getSelectedNodes ( ) . getNextElement ( v ) ) { getCollapsedIds ( ) . add ( ( Integer ) v . getInfo ( ) ) ; } updateTree ( ) ; }
27349	public boolean fire ( Context context ) { return Utils . openIntentSafely ( context , action ) ; }
27376	public String message ( ) { return message ; }
27407	public void addColumn ( String name , Class type ) { throw new UnsupportedOperationException ( ) ; }
27408	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + CalculateEcologicalIndices . EUCLIDEAN + _CHAR ; _CHAR ) ; }
27439	public SimpleStringProperty keyProperty ( ) { return this . key ; }
27444	public void addFilter ( ) { if ( filterConfig != _NULL ) { FilterName filterName = filterConfig . getFilterConfiguration ( ) ; setFilterParameter ( _NULL , filterName . getParameter ( _NUM ) ) ; } }
27448	@ SuppressWarnings ( _CHAR unused _CHAR ) public void hideBackButton ( ) { backButton . setVisibility ( View . INVISIBLE ) ; skipButton . setVisibility ( View . GONE ) ; }
27488	public boolean isUptoDate ( ) { return uptodate ; }
27520	public static void cleanup ( ) { Helper . delete ( W . create ( ) . and ( _CHAR expired _CHAR , System . currentTimeMillis ( ) , W . OP_LT ) , AuthToken . class ) ; }
27539	@ Override public synchronized void stop ( ) { LOG . debug ( _CHAR Stopping server heartbeat . '' ) ; this . timer . cancel ( ) ; running = _BOOL ; }
27556	public PhotosEditAlbumQuery title ( String value ) { return unsafeParam ( _CHAR title _CHAR , value ) ; }
27571	public void registerProvider ( EnvironmentProvider provider ) { JmxConnectionSupportImpl . registerProviderImpl ( provider ) ; }
27613	protected void modify ( ) { ++ m_modCount ; m_cur =- _NUM ; }
27621	public UsersSearchQuery hasPhoto ( Boolean value ) { return unsafeParam ( _CHAR has_photo _CHAR , value ) ; }
27628	@ Override public void reset ( ) { dataIter = delimitedData . iterator ( ) ; }
27643	public void destroy ( ) { BackgroundExecutor . cancelAll ( _CHAR _CHAR , _BOOL ) ; UiThreadExecutor . cancelAll ( _CHAR _CHAR ) ; }
27645	private static LinkedHashMap < String , ChannelType > createTrack ( Channel ... channels ) { return StreamUtil . createLinkedMap ( channels ) ; }
27646	private void runPCoA ( final PCoA pcoa ) throws CanceledException { ProgressListener progressListener = clusterViewer . getDir ( ) . getDocument ( ) . getProgressListener ( ) ; if ( progressListener == _NULL ) progressListener = new ProgressSilent ( ) ; pcoa . calculateClassicMDS ( progressListener ) ; }
27671	@ Override public void ignorableWhitespace ( char [ ] ch , int start , int length ) throws SAXException { if ( documentHandler != _NULL ) { documentHandler . ignorableWhitespace ( ch , start , length ) ; } }
27675	public boolean gotoPrevious ( ) { currentTaxonIterator = _NULL ; currentTaxonId = _NULL ; return isCurrentSet ( ) ; }
27681	public void onNameClear ( View view ) { setName ( _NULL ) ; }
27729	private static double computeJSD ( double [ ] px , double [ ] py ) { double [ ] m = computeMean ( px , py ) ; return _NUM . _NUM * ( computeKLD ( px , m ) + computeKLD ( py , m ) ) ; }
27779	public AdsUpdateCampaignsQuery updateCampaigns ( UserActor actor , int accountId , String data ) { return new AdsUpdateCampaignsQuery ( getClient ( ) , actor , accountId , data ) ; }
27805	public static S2LatLngRect empty ( ) { return new S2LatLngRect ( R1Interval . empty ( ) , S1Interval . empty ( ) ) ; }
27810	public int code ( ) { return rawResponse . code ( ) ; }
27890	protected AdsGetOfficeUsersQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
27911	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set summarized = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
27912	public PhotosGetCommentsQueryWithExtended startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
27940	protected AdsCreateTargetGroupQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
27943	public void flush ( ) throws IOException { outs . flush ( ) ; }
27946	protected void notifyClickListenersAboutClick ( int item ) { for ( OnWheelClickedListener listener : clickingListeners ) { listener . onItemClicked ( this , item ) ; } }
28016	public static String generateSummary ( Resources resources ) { if ( DataReductionProxySettings . getInstance ( ) . isDataReductionProxyEnabled ( ) ) { String percent = DataReductionProxySettings . getInstance ( ) . getContentLengthPercentSavings ( ) ; return resources . getString ( R . string . data_reduction_menu_item_summary , percent ) ; } else { return ( String ) resources . getText ( R . string . text_off ) ; } }
28040	public void onFileDelete ( final File file ) { }
28058	private static String separeMetaTagsContent ( String content ) { String result = Regex . pregMatch ( content , Regex . METATAG_CONTENT_PATTERN , _NUM ) ; return htmlDecode ( result ) ; }
28068	@ Override public void lockPool ( ) { synchronized ( fGrammarPool ) { fGrammarPool . lockPool ( ) ; } }
28092	public void addCatchablePokemons ( Collection < MapPokemon > catchablePokemons ) { if ( catchablePokemons == _NULL || catchablePokemons . isEmpty ( ) ) { return ; } complete = _BOOL ; this . catchablePokemons . addAll ( catchablePokemons ) ; }
28099	private void updateFieldStates ( ) { backgroundColourButton . setEnabled ( ! chckboxTransparent . isSelected ( ) ) ; borderColourButton . setEnabled ( chckboxShowBorder . isSelected ( ) ) ; }
28129	public boolean isHeader ( int position ) { return position >= _NUM && position < mHeaderViews . size ( ) ; }
28222	public static String delimiterConverter ( String delimiter ) { switch ( delimiter ) { case _CHAR | _CHAR : case _CHAR * _CHAR : case _CHAR . _CHAR : case _CHAR : _CHAR : case _CHAR ^ _CHAR : case _CHAR \\ _CHAR : case _CHAR $ _CHAR : case _CHAR + _CHAR : case _CHAR ? _CHAR : case _CHAR ( _CHAR : case _CHAR ) '' : case '' { _CHAR : case _CHAR } '' : case '' [ '' : case '' ] '' : return '' \\ '' + delimiter ; default : return delimiter ; } }
28237	private static String keyForSet ( String name ) { return _CHAR service_set_ _CHAR + name ; }
28305	public static void error ( @ NonNull String tag , String message , Object ... args ) { android . util . Log . e ( tag , String . format ( Locale . ENGLISH , message , args ) ) ; }
28324	@ Override public void cancel ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( noButton ) ) ; }
28336	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set index = _CHAR + CalculateEcologicalIndices . HELLINGER + _CHAR ; _CHAR ) ; }
28346	public void stop ( ) { running = _BOOL ; }
28388	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set magnifier = _CHAR + ! isSelected ( ) + _CHAR ; _CHAR ) ; }
28418	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( getSyntax ( ) ) ; }
28441	public boolean isTrunkServer ( ) { return this . ifTrunkServer ; }
28489	public static void close ( URLConnection conn ) { if ( conn instanceof HttpURLConnection ) { ( ( HttpURLConnection ) conn ) . disconnect ( ) ; } }
28494	@ Override protected void onResume ( ) { super . onResume ( ) ; Log . i ( TAG , _CHAR onResume _CHAR ) ; startPreview ( ) ; }
28532	@ Override public void onResume ( ) { super . onResume ( ) ; startCameraSource ( ) ; }
28538	public RetrofitClient createBaseApi ( ) { apiService = create ( BaseApiService . class ) ; return this ; }
28568	@ Override public void populateField ( ProcessFunction value ) { processFunction = value ; if ( textField != _NULL ) { textField . setText ( ParameterFunctionUtils . getString ( processFunction ) ) ; UndoManager . getInstance ( ) . addUndoEvent ( new UndoEvent ( this , getFieldId ( ) , oldValueObj , value ) ) ; oldValueObj = value ; valueUpdated ( ) ; } }
28569	public double cond ( ) { return s [ _NUM ] / s [ Math . min ( m , n ) - _NUM ] ; }
28599	@ Override public void applyDimensionBehaviour ( ) { wrapContent ( ) ; }
28604	public static Bitmap drawableToBitmap ( Drawable drawable ) { return drawable == _NULL ? _NULL : ( ( BitmapDrawable ) drawable ) . getBitmap ( ) ; }
28652	public VideoEditQuery name ( String value ) { return unsafeParam ( _CHAR name _CHAR , value ) ; }
28657	private void internalSetValue ( Double value ) { if ( spinner != _NULL ) { if ( value . doubleValue ( ) < minValue ) { spinner . setValue ( minValue ) ; } else if ( value . doubleValue ( ) > maxValue ) { spinner . setValue ( maxValue ) ; } else { spinner . setValue ( value ) ; } } }
28667	public static Drawable bitmapToDrawable ( Bitmap bitmap ) { return bitmap == _NULL ? _NULL : new BitmapDrawable ( bitmap ) ; }
28677	public void toString ( StringBuffer sb ) { sb . append ( getID ( ) ) ; }
28684	public void zoomTo ( float zoom ) { this . zoom = zoom ; }
28719	public int find ( String sub ) { int s1 = s != _NULL ? s . indexOf ( sub , pos ) : - _NUM ; if ( s1 > - _NUM ) { pos = s1 ; } return s1 ; }
28737	public AirCycleConfig build ( ) { return new AirCycleConfig ( passIntentBundleOnCreate , ignoredLifecycleCallbacks ) ; }
28738	private void createUI ( ) { panel = new JPanel ( ) ; panel . setLayout ( new BorderLayout ( ) ) ; createTopPanel ( ) ; createFieldPanel ( ) ; }
28755	public JsonObject toJson ( ) { JsonObject json = new JsonObject ( ) ; json . put ( _CHAR request _CHAR , request . toJson ( ) ) ; if ( template != _NULL ) { json . put ( _CHAR template _CHAR , template ) ; } return json ; }
28758	public PhotosEditAlbumQuery description ( String value ) { return unsafeParam ( _CHAR description _CHAR , value ) ; }
28761	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR hide what = all ; _CHAR ) ; }
28762	public static int densityDpi ( Context context ) { return displayMetrics ( context ) . densityDpi ; }
28777	private void internalSetValue ( Integer value ) { if ( spinner != _NULL ) { if ( value . intValue ( ) < minValue ) { spinner . setValue ( minValue ) ; } else if ( value . intValue ( ) > maxValue ) { spinner . setValue ( maxValue ) ; } else { spinner . setValue ( value ) ; } } }
28800	public void scroll ( @ SwingCoordinate int x , @ SwingCoordinate int y , int scrollAmount ) { }
28815	public void clearMatchRects ( ) { setMatchRects ( - _NUM , new RectF [ _NUM ] , _NULL ) ; }
28820	public void actionPerformed ( ActionEvent ev ) { }
28846	public void saveConfig ( ) { urlComboBox . getCurrentText ( _BOOL ) ; ProgramProperties . put ( _CHAR RemoteServers _CHAR , urlComboBox . getItemsAsString ( _NUM , _CHAR % % % _CHAR ) ) ; }
28847	protected void drawGridBackground ( Canvas c ) { if ( mDrawGridBackground ) { c . drawRect ( mViewPortHandler . getContentRect ( ) , mGridBackgroundPaint ) ; } if ( mDrawBorders ) { c . drawRect ( mViewPortHandler . getContentRect ( ) , mBorderPaint ) ; } }
28849	private void close ( ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) supportFinishAfterTransition ( ) ; else finish ( ) ; }
28889	public static void showWarning ( Object parentIgnored , String message ) { showNotification ( title , message , Mode . warning , Pos . BOTTOM_LEFT , _NUM ) ; }
28977	protected void notifyClickListenersAboutClick ( int item ) { for ( OnWheelClickedListener listener : clickingListeners ) { listener . onItemClicked ( this , item ) ; } }
28997	@ Override public Expression createExpression ( FunctionName functionName ) { if ( functionName == _NULL ) { return _NULL ; } List < Expression > parameters = _NULL ; Literal fallback = _NULL ; Function function = functionFactory . function ( functionName . getFunctionName ( ) , parameters , fallback ) ; return function ; }
29001	public static boolean hasJellyBeanMr2 ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN_MR2 ; }
29002	public SimpleStringProperty executionInfoProperty ( ) { return this . executionInfoProperty ; }
29012	public void nextGroup ( ) throws SAException { if ( _curGroupValue != _NULL ) { if ( _alreadyUsedGroupValues == _NULL ) _alreadyUsedGroupValues = new HashSet < Object > ( ) ; _alreadyUsedGroupValues . add ( _curGroupValue ) ; _curGroupValue = _NULL ; } }
29042	public void saveCache ( String url , byte [ ] bytes ) { if ( TextUtils . isEmpty ( url ) || _NULL == bytes || bytes . length == _NUM ) { return ; } if ( ! checkUrl ( url ) ) { return ; } mInternalCache . putCache ( url , bytes ) ; }
29046	public static boolean isInited ( ) { return inited ; }
29065	@ Override public void sldDataUpdated ( SLDDataInterface sldData , boolean dataEditedFlag ) { sldDataUpdated_methodReached = _BOOL ; sldDataUpdated_sldData = sldData ; sldDataUpdated_dataEditedFlag = dataEditedFlag ; }
29070	public void addListener ( PrefUpdateInterface listener ) { if ( ! listenerList . contains ( listener ) ) { listenerList . add ( listener ) ; listener . useAntiAliasUpdated ( this . prefData . isUseAntiAlias ( ) ) ; } }
29088	@ Override protected void initData ( ) { videoFilePresenter = new VideoFilePresenter ( ) ; videoFilePresenter . attachView ( this ) ; if ( path != _NULL && ! TextUtils . isEmpty ( path ) ) { tvFilePath . setText ( path ) ; rootFile = new File ( path ) ; videoFilePresenter . getVideoData ( rootFile ) ; } }
29101	private void initPrimaryOnlyComponents ( ) throws SpaceComponentsInitializeException { for ( Iterator < ISpaceComponentsHandler > iterator = _componentsHandlers . iterator ( ) ; iterator . hasNext ( ) ; ) { ISpaceComponentsHandler handler = iterator . next ( ) ; handler . initComponents ( _BOOL ) ; } }
29107	public void hideAllBudges ( ) { for ( RelativeLayout badge : badgeList ) { if ( badge . getVisibility ( ) == VISIBLE ) BadgeHelper . hideBadge ( badge ) ; } badgeSaveInstanceHashMap . clear ( ) ; }
29137	public TopicSubscriber createDurableSubscriber ( Topic topic , String name ) throws JMSException { ensureOpen ( ) ; throw new JMSException ( _CHAR This version of JMS does not support durable subscribers . '' ) ; }
29174	public void clear ( ) { fDepth = _NUM ; }
29178	@ Override public void cancel ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( cancelButton ) ) ; }
29194	public AccountSaveProfileInfoQuery lastName ( String value ) { return unsafeParam ( _CHAR last_name _CHAR , value ) ; }
29217	public void onFailure ( int statusCode , Header [ ] headers , Throwable throwable , JSONObject errorResponse ) { }
29224	private void navigateToDetails ( final Article article , final View articleView ) { final ActivityOptions options = ActivityOptions . makeSceneTransitionAnimation ( this , articleView , articleView . getTransitionName ( ) ) ; final Intent intent = new Intent ( this , DetailsActivity . class ) ; intent . putExtra ( DetailsActivity . EXTRA_ARTICLE , article ) ; startActivity ( intent , options . toBundle ( ) ) ; }
29250	public static void main ( String [ ] args ) { EnvVarDlg dlg = new EnvVarDlg ( EnvironmentVariableManager . getInstance ( ) ) ; dlg . showDialog ( ) ; }
29285	public void onSuccess ( int statusCode , Header [ ] headers , JSONArray response ) { }
29290	public AudioGetRecommendationsQuery shuffle ( Boolean value ) { return unsafeParam ( _CHAR shuffle _CHAR , value ) ; }
29295	public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_TIME_60 ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
29300	@ Override public void vendorOptionsUpdated ( List < VersionData > vendorOptionVersionsList ) { this . vendorOptionVersionsList = vendorOptionVersionsList ; }
29302	private void checkIndex ( final int index ) throws MathIllegalArgumentException { if ( index < _NUM || index > start . length - _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . OUT_OF_RANGE_SIMPLE , index , _NUM , start . length - _NUM ) ; } }
29314	public void onSuccess ( int statusCode , Header [ ] headers , JSONObject response ) { }
29315	private String makeSAM ( String queryName , String refName , float bitScore , String line ) throws IOException { return String . format ( _CHAR % s \ t0 \ t % s \ t0 \ t255 \ t *\ t *\ t0 \ t0 \ t *\ t *\ tAS : i : % d \ t _CHAR , queryName , refName , Math . round ( bitScore ) ) + String . format ( _CHAR AL : Z : % s \ t _CHAR , Basic . replaceSpaces ( line , _CHAR ) ) ; }
29320	private void onRequest ( HttpServerRequest request ) { AtomicInteger level = new AtomicInteger ( _NUM ) ; request . toObservable ( ) . map ( _NULL ) . lift ( new JsonParserOperator ( ) ) . map ( _NULL ) . flatMap ( _NULL ) . count ( ) . subscribe ( _NULL , _NULL ) ; }
29356	public SourceEditor toggleMarkdown ( ) { return setMarkdown ( ! markdown ) ; }
29396	public boolean hasFill ( ) { return SLDTreeLeafFactory . getInstance ( ) . hasFill ( getSymbolizer ( ) ) ; }
29409	public void clearCustomProperty ( String key ) { clearCustomProperties ( new String [ ] { key } ) ; }
29441	public synchronized void progressStop ( ) { if ( this . progressDialog != _NULL ) { this . progressDialog . dismiss ( ) ; this . progressDialog = _NULL ; } }
29447	@ Override public void onPause ( ) { super . onPause ( ) ; if ( mPreview != _NULL ) { mPreview . stop ( ) ; } }
29500	public ApplicationType createModelFor ( Application appl ) { Jvm jvm = JvmFactory . getJVMFor ( appl ) ; if ( jvm . isBasicInfoSupported ( ) ) { String mainClass = jvm . getMainClass ( ) ; if ( mainClass != _NULL ) { return createApplicationTypeFor ( appl , jvm , mainClass ) ; } } return _NULL ; }
29532	@ Override public Filter createFilter ( ) { return new BeforeExtended ( ) ; }
29557	private String makeSAM ( String queryName , String refName , float bitScore , String line ) throws IOException { return String . format ( _CHAR % s \ t0 \ t % s \ t0 \ t255 \ t *\ t *\ t0 \ t0 \ t *\ t *\ tAS : i : % d \ t _CHAR , queryName , refName , Math . round ( bitScore ) ) + String . format ( _CHAR AL : Z : % s \ t _CHAR , Basic . replaceSpaces ( line , _CHAR ) ) ; }
29619	@ Override public final Object createInstance ( Reader reader ) { throw new UnsupportedOperationException ( _CHAR createInstance _CHAR ) ; }
29633	public static void d ( String tag , String s ) { if ( LOG . DEBUG >= LOGLEVEL ) Log . d ( tag , s ) ; }
29642	@ Override public boolean equals ( Object o ) { return o instanceof AirMapAircraftModel && ( ( AirMapAircraftModel ) o ) . getModelId ( ) . equals ( getModelId ( ) ) ; }
29648	public boolean isUptoDate ( ) { return _BOOL ; }
29651	private void addFields ( SimpleFeatureTypeBuilder b , List < DataSourceFieldInterface > fieldList ) { for ( DataSourceFieldInterface field : fieldList ) { if ( isGeometryField ( field . getFieldType ( ) ) ) { geometryField . setGeometryFieldName ( field . getName ( ) ) ; } else { b . add ( field . getName ( ) , field . getFieldType ( ) ) ; } } }
29658	protected void stopJobAcquisitionThread ( ) { if ( asyncJobAcquisitionThread != _NULL ) { try { asyncJobAcquisitionThread . join ( ) ; } catch ( InterruptedException e ) { log . warn ( _CHAR Interrupted while waiting for the async job acquisition thread to terminate '' , e ) ; } asyncJobAcquisitionThread = _NULL ; } }
29662	private void connectToGeoServer ( GeoServerConnection connection ) { GeoServerClientInterface client = connectionMap . get ( connection ) ; if ( client != _NULL ) { client . connect ( ) ; if ( client . isConnected ( ) ) { client . retrieveData ( ) ; } } }
29670	public void shutdown ( ) { drivers . stream ( ) . filter ( _NULL ) . forEach ( _NULL ) ; }
29679	private static String joinPath ( String path1 , String path2 ) { File file1 = new File ( path1 ) ; File file2 = new File ( file1 , path2 ) ; return file2 . getPath ( ) ; }
29697	@ Override public boolean isElementContentWhitespace ( ) { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Method not supported _CHAR ) ; }
29703	public void resetInitialIfExistSearchActive ( ) { _initialIfExistSearchActive = _BOOL ; }
29716	public AemList clear ( ) { for ( AemListItem item : this ) { removeItem ( item ) ; } return this ; }
29721	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR show window = pagesetup ; _CHAR ) ; }
29732	private void changeStatusBarColor ( ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { Window window = getWindow ( ) ; window . addFlags ( WindowManager . LayoutParams . FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( Color . TRANSPARENT ) ; } }
29771	public static void v ( String tag , String s ) { if ( LOG . VERBOSE >= LOGLEVEL ) Log . v ( tag , s ) ; }
29806	public static TemplateParser create ( ) { return new TemplateParser ( ) ; }
29828	@ Override protected boolean requiresAuthentication ( HttpServletRequest request , HttpServletResponse response ) { return _BOOL ; }
29836	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( getSyntax ( ) ) ; }
29846	public void removeScrollingListener ( OnWheelScrollListener listener ) { scrollingListeners . remove ( listener ) ; }
29857	public synchronized void deleteCustomPropertiesStorage ( ) { if ( propertiesFile != _NULL && propertiesFile . exists ( ) ) if ( ! propertiesFile . delete ( ) ) propertiesFile . deleteOnExit ( ) ; }
29868	public void addSymbol ( EsriSymbolInterface symbolObj ) { symbolMap . put ( symbolObj . getSymbolClass ( ) , symbolObj ) ; }
29871	public void parse ( ) { if ( singleShot ) { metricImpl = metric . constructMetric ( confidenceLevel , _NUM . _NUM ) ; } else { metricImpl = metric . constructMetric ( confidenceLevel ) ; } }
29891	public void addAll ( Taxa taxa ) { for ( Iterator it = taxa . iterator ( ) ; it . hasNext ( ) ; ) { String name = ( String ) it . next ( ) ; add ( name ) ; } }
29960	private void addFolder ( boolean descend , String name ) throws FileNotFoundException { Path pathPath = Paths . get ( path ) ; FileTreeNode node = new FileTreeNode ( pathPath , name ) ; this . add ( node ) ; if ( descend ) { node . populateDirectories ( _BOOL ) ; } }
29965	@ Override public void actionPerformed ( ActionEvent ev ) { String input = JOptionPane . showInputDialog ( getViewer ( ) . getFrame ( ) , _CHAR Enter label of node to scroll to _CHAR , _CHAR None _CHAR ) ; if ( input != _NULL ) { input = input . trim ( ) ; if ( input . length ( ) > _NUM ) execute ( _CHAR scrollTo node = _CHAR_CHAR_CHAR ; _CHAR ) ; } }
29983	private void stopPulling ( ) { eventDispatcher . unRegister ( this ) ; asyncContext . complete ( ) ; if ( pullingTimeoutFuture != _NULL ) { pullingTimeoutFuture . cancel ( _BOOL ) ; } }
29994	@ Override public StyledLayerDescriptor create ( ) { return DefaultSymbols . createNewPoint ( ) ; }
29997	public static void runOnUiThread ( Runnable runnable ) { HANDLER . post ( runnable ) ; }
30040	public AccountSaveProfileInfoQuery bdateVisibility ( AccountSaveProfileInfoBdateVisibility value ) { return unsafeParam ( _CHAR bdate_visibility _CHAR , value ) ; }
30053	public MarketRestoreQuery restore ( UserActor actor , int ownerId , int itemId ) { return new MarketRestoreQuery ( getClient ( ) , actor , ownerId , itemId ) ; }
30078	public double cond ( ) { return s [ _NUM ] / s [ Math . min ( m , n ) - _NUM ] ; }
30082	public String toJson ( ) throws JsonGenerationException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . writeValueAsString ( this ) ; }
30088	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set showAminoAcids = _BOOL ; _CHAR ) ; }
30095	@ Override public void createRaster ( Symbolizer symbolizer ) { }
30096	@ Override public int read ( ) throws IOException { if ( eof ) { throw new IOException ( _CHAR Read after end of file _CHAR ) ; } if ( position == size ) { return doEndOfFile ( ) ; } position ++ ; return processByte ( ) ; }
30113	private void unloadDataStore ( ) { if ( dataSourceInfo != _NULL ) { dataSourceInfo . unloadDataStore ( ) ; } if ( exampleDataSourceInfo != _NULL ) { exampleDataSourceInfo . unloadDataStore ( ) ; } }
30142	@ Override public Filter createFilter ( ) { return new ContainsExtended ( ) ; }
30145	private void pauseAutoCycle ( ) { if ( mCycling ) { mCycleTimer . cancel ( ) ; mCycleTask . cancel ( ) ; mCycling = _BOOL ; } else { if ( mResumingTimer != _NULL && mResumingTask != _NULL ) { recoverCycle ( ) ; } } }
30155	public static void applyForPermit ( AirMapAvailablePermit permit , @ Nullable AirMapCallback < AirMapPilotPermit > callback ) { PermitService . applyForPermit ( permit , callback ) ; }
30208	public GroupsSetCallbackSettingsQuery messageNew ( Boolean value ) { return unsafeParam ( _CHAR message_new _CHAR , value ) ; }
30294	public boolean hasStroke ( Symbolizer symbolizer ) { boolean result = _BOOL ; if ( symbolizer != _NULL ) { SLDTreeLeafInterface obj = map . get ( symbolizer . getClass ( ) ) ; if ( obj != _NULL ) { result = obj . hasStroke ( symbolizer ) ; } } return result ; }
30297	public Value coalesceExpression ( Value [ ] val ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
30316	private static void populate ( ) { String className = FileSystemExtension . class . getName ( ) ; try { ExtensionInterface extension = ( ExtensionInterface ) Class . forName ( className ) . newInstance ( ) ; extensionList . add ( extension ) ; } catch ( InstantiationException | IllegalAccessException | ClassNotFoundException e ) { ConsoleManager . getInstance ( ) . exception ( ExtensionFactory . class , e ) ; } }
30320	public synchronized BookKeeperClientBuilder name ( String name ) { this . name = name ; return this ; }
30325	protected AdsGetBudgetQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
30344	public void resetCache ( ) { Cache . clear ( ) ; ElementAccessTime . clear ( ) ; CacheAccess . clear ( ) ; TimeCnt = Long . MIN_VALUE ; }
30353	public void close ( ) { this . open = _BOOL ; }
30380	@ BeforeClass public static void init ( ) throws Exception { testBrokerService . createAndStartBroker ( ) ; }
30381	protected AudioEditQuery audioId ( int value ) { return unsafeParam ( _CHAR audio_id _CHAR , value ) ; }
30408	public void populateFontField ( FieldIdEnum fieldId , Font font ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( fieldConfig != _NULL ) { fieldConfig . populateField ( font ) ; } }
30412	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
30425	public void indicatorColor ( @ ColorInt int color ) { indicatorPaint . setColor ( color ) ; invalidate ( ) ; }
30450	List < ConfigItem > fetchConfigs ( Set < String > names ) { Map < String , Object > params = Maps . newHashMapWithExpectedSize ( _NUM ) ; params . put ( _CHAR names _CHAR , Joiners . COMMA . join ( names ) ) ; return doGet ( ClientUris . CONFIG_FETCHES , headers , params , JsonUtil . LIST_CONFIG_ITEM_TYPE ) ; }
30460	public static void showInformation ( String message ) { showNotification ( title , message , Mode . information , Pos . BOTTOM_LEFT , _NUM ) ; }
30476	@ Override public boolean hasPassword ( ) { return propertyMap . containsKey ( PASSWORD_KEY ) ; }
30480	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T > T fromXml ( Class < T > clazz , String xml ) { T object = ( T ) CLASS_2_XSTREAM_INSTANCE . get ( clazz ) . fromXML ( xml ) ; return object ; }
30483	public boolean remove ( Object o ) { throw new UnsupportedOperationException ( ) ; }
30490	private AudioOption createOption6 ( ChannelType ... channels ) { AudioOption option = new AudioOption ( ) ; option . add ( createTrack ( new Channel ( FL . name ( ) , channels [ _NUM ] ) , new Channel ( FR . name ( ) , channels [ _NUM ] ) ) ) ; return option ; }
30521	public void clearDiscCache ( ) { checkConfiguration ( ) ; configuration . discCache . clear ( ) ; }
30552	@ Override public void accept ( IQueryExecutor executor , ISpaceProxy space , Transaction txn , int readModifier , int max ) throws SQLException { executor . execute ( this , space , txn , readModifier , max ) ; }
30555	@ Override public void createRaster ( Symbolizer symbolizer ) { }
30569	public static void debug ( @ Nullable Class < ? > caller , String message , Object ... args ) { android . util . Log . d ( tag ( caller ) , String . format ( Locale . ENGLISH , message , args ) ) ; }
30577	public void uploadFile ( TRSHttpRequest request , TRSFileUploadHttpCallback callback ) { mProvider . uploadFile ( request , callback ) ; }
30579	public GroupsSetCallbackSettingsQuery audioNew ( Boolean value ) { return unsafeParam ( _CHAR audio_new _CHAR , value ) ; }
30582	public void showOverlapGraph ( Director dir , ProgressListener progress ) throws CanceledException { final OverlapGraphViewer overlapGraphViewer = new OverlapGraphViewer ( dir , overlapGraph , node2readName , paths ) ; overlapGraphViewer . apply ( progress ) ; }
30589	private void syntaxError ( String message ) { hasSynErrors = _BOOL ; int at = matched ? matcher . start ( EXPR_TOKEN_GROUP ) : expr . length ( ) ; error ( _CHAR % s % n % s % n % s _CHAR , message . trim ( ) , expr , Strings . padStart ( _CHAR ^ _CHAR , at + _NUM , _CHAR ) ) ; }
30605	@ Override public void parse ( String systemId ) throws IOException , SAXException { setupParse ( systemId ) ; try { parser . parse ( systemId ) ; } catch ( InternalError ie ) { explain ( systemId ) ; throw ie ; } }
30679	@ Override public void attributeDecl ( String elementName , String attributeName , String type , String [ ] enumeration , String defaultType , XMLString defaultValue , XMLString nonNormalizedDefaultValue , Augmentations augmentations ) throws XNIException { }
30682	public Builder compressionCodec ( CompressionCodec . Type codec ) { this . _codec = codec ; return this ; }
30723	private static void unknownPacket ( State state , int id ) { log . warn ( String . format ( _CHAR Unknown packet recived from Game Server : _NUM % _NUM state = % s _CHAR , id , state . toString ( ) ) ) ; }
30745	public double illumination ( ) { return illumination ; }
30753	public void actionPerformed ( ActionEvent ev ) { Color color = ChooseColorDialog . showChooseColorDialog ( getViewer ( ) . getFrame ( ) , _CHAR Choose color _CHAR , _NULL ) ; if ( color != _NULL ) execute ( _CHAR set color = _CHAR + color . getRed ( ) + _CHAR _CHAR + color . getGreen ( ) + _CHAR _CHAR + color . getBlue ( ) + _CHAR ; _CHAR ) ; }
30768	private void abortLoading ( ) { if ( thread == _NULL ) return ; if ( thread . isAlive ( ) ) { thread . interrupt ( ) ; try { thread . join ( ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } } }
30791	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set pc1 = _NUM pc2 = _NUM pc3 = _NUM ; _CHAR ) ; }
30796	public NotesRestoreCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
30811	public final void addIDConstraintDecl ( XSElementDecl elmDecl , IdentityConstraint decl ) { elmDecl . addIDConstraint ( decl ) ; fGlobalIDConstraintDecls . put ( decl . getIdentityConstraintName ( ) , decl ) ; }
30812	public void callHandler ( String handlerName , String data , CallBackFunction callBack ) { doSend ( handlerName , data , callBack ) ; }
30828	protected AdsDeleteAdsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
30830	public PhotosDeleteQuery delete ( UserActor actor , int photoId ) { return new PhotosDeleteQuery ( getClient ( ) , actor , photoId ) ; }
30854	public VideoGetCommentsQueryWithExtended startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
30901	@ Override public int next ( ) { next = daa2QuerySAMIterator . next ( ) ; return countNewLines ( next . get2 ( ) ) ; }
30902	@ Override public StyledLayerDescriptor readSLDFile ( File file ) { return SLDUtils . readSLDFile ( file ) ; }
30919	public String toString ( ) { return image ; }
30922	public void connect ( ) { connection . connect ( ) ; this . folder = connection . getFolder ( ) ; }
30993	public VideoGetCommentsQuery startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
31020	public static < T > PollableFutureTask < T > create ( final PollableTask pollableTask , final ProceedingJoinPoint pjp ) { PollableCallable pollableCallable = new PollableCallable ( pollableTask , pjp ) ; PollableFutureTask pollableFutureTask = new PollableFutureTask ( pollableCallable , pollableTask ) ; pollableCallable . setPollableFutureTask ( pollableFutureTask ) ; return pollableFutureTask ; }
31032	public boolean isEncrypted ( ) { return _isEncrypted ; }
31033	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set show - reference = _CHAR + ! isSelected ( ) + _CHAR ; _CHAR ) ; }
31039	public MessagesMarkAsReadQuery startMessageId ( Integer value ) { return unsafeParam ( _CHAR start_message_id _CHAR , value ) ; }
31040	public static Bitmap drawableToBitmap ( Drawable drawable ) { return drawable == _NULL ? _NULL : ( ( BitmapDrawable ) drawable ) . getBitmap ( ) ; }
31106	@ Deprecated public void clearDiscCache ( ) { clearDiskCache ( ) ; }
31139	private void moveItemUp ( ) { moveItem ( _BOOL ) ; }
31145	public void seek ( long pos ) { }
31150	public final boolean equals ( Object obj ) { return super . equals ( obj ) ; }
31166	@ Override public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { allowXMLCatalogPI = _BOOL ; if ( dtdHandler != _NULL ) { dtdHandler . unparsedEntityDecl ( name , publicId , systemId , notationName ) ; } }
31175	@ Override public boolean equals ( Object o ) { return o instanceof AirMapAvailablePermitQuestion && ( ( AirMapAvailablePermitQuestion ) o ) . getId ( ) . equals ( getId ( ) ) ; }
31217	public boolean isRefreshing ( ) { return STATUS . isRefreshing ( mStatus ) ; }
31243	public boolean isUniqueContentOnly ( ) { return uniqueContentOnly ; }
31273	public void cleanPatch ( ) { if ( patchDirectory == _NULL ) { return ; } if ( isTinkerLoaded ( ) ) { TinkerLog . e ( TAG , _CHAR it is not safety to clean patch when tinker is loaded , you should kill all your process after clean ! _CHAR ) ; } SharePatchFileUtil . deleteDir ( patchDirectory ) ; }
31289	public MessagesSearchDialogsQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
31291	public static void addRequest ( AbstractAI ai2 , Player player , int requestId , int senderId , final AI2Request request , Object ... requestParams ) { addRequest ( ai2 , player , requestId , senderId , _NUM , request , requestParams ) ; }
31304	@ Override public void updateList ( Set < GeoServerConnection > keySet ) { int count = _NUM ; for ( GeoServerConnection connection : keySet ) { PropertyManagerFactory . getInstance ( ) . updateValue ( GEOSERVER_CONNECTION_FIELD , count , connection . encodeAsString ( ) ) ; } }
31331	public ASBSetCursor queryASBSets ( ) { return mHelper . queryASBSets ( ) ; }
31333	private void initSpringSecurity ( ServletContext servletContext , EnumSet < DispatcherType > disps ) { log . debug ( _CHAR Registering Spring Security Filter _CHAR ) ; FilterRegistration . Dynamic springSecurityFilter = servletContext . addFilter ( _CHAR springSecurityFilterChain _CHAR , new DelegatingFilterProxy ( ) ) ; springSecurityFilter . addMappingForUrlPatterns ( disps , _BOOL , _CHAR /* '' ) ; }
31349	public static void showLogin ( Fragment fragment , int requestCode ) { Intent intent = new Intent ( fragment . getActivity ( ) , LoginActivity . class ) ; fragment . startActivityForResult ( intent , requestCode ) ; }
31360	public void init ( ) { this . sEnteredRoom = _CHAR _CHAR ; this . gameStartSet = _BOOL ; this . playToken = _BOOL ; }
31371	public void close ( ) { try { connection . close ( ) ; } catch ( Exception e ) { ; } }
31406	@ Override public IAssignmentAlgorithm createAssignmentAlgorithm ( ) { return assignmentUsingBestHit ; }
31410	private void storeOriginalData ( FieldConfigValuePopulateInterface field ) { valueMap . put ( field , field . getStringValue ( ) ) ; }
31427	public void addListener ( AttributeButtonSelectionInterface listener ) { if ( ! selectedListeners . contains ( listener ) ) { selectedListeners . add ( listener ) ; } }
31434	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
31448	private void createRGBFormat ( ) { videoFormat = new RGBFormat ( new Dimension ( mip . getMWidth ( ) , mip . getMHeight ( ) ) , width * height , int [ ] . class , mip . getFPS ( ) , _NUM , _NUM , _NUM , _NUM , _NUM , width , Format . FALSE , RGBFormat . BIG_ENDIAN ) ; }
31477	public int size ( ) { return summonTemplates . size ( ) ; }
31491	@ Override public void emptyElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { if ( fNamespaces ) { handleStartElement ( element , attributes , augs , _BOOL ) ; handleEndElement ( element , augs , _BOOL ) ; } else if ( fDocumentHandler != _NULL ) { fDocumentHandler . emptyElement ( element , attributes , augs ) ; } }
31512	public synchronized void stop ( ) { if ( mStreaming ) { if ( mMode == MODE_MEDIACODEC_API ) { Log . d ( TAG , _CHAR Interrupting threads ... _CHAR ) ; mThread . interrupt ( ) ; mAudioRecord . stop ( ) ; mAudioRecord . release ( ) ; mAudioRecord = _NULL ; } super . stop ( ) ; } }
31527	public static void close ( URLConnection conn ) { if ( conn instanceof HttpURLConnection ) { ( ( HttpURLConnection ) conn ) . disconnect ( ) ; } }
31555	@ Override public DerivativeStructure log10 ( ) { final DerivativeStructure result = new DerivativeStructure ( compiler ) ; compiler . log10 ( data , _NUM , result . data , _NUM ) ; return result ; }
31562	Landlord landlord ( ) { return landlord ; }
31574	public boolean isUptoDate ( ) { return this . uptodate ; }
31595	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR NamedLayer . xml _CHAR ) ; }
31631	public int hashCode ( ) { if ( A . nextSetBit ( _NUM ) < B . nextSetBit ( _NUM ) ) return A . hashCode ( ) + _NUM * B . hashCode ( ) ; else return B . hashCode ( ) + _NUM * A . hashCode ( ) ; }
31632	protected AdsDeleteClientsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
31641	public void addColour ( Color colour ) { colourList . add ( colour ) ; }
31648	public synchronized void resetTime ( ) { }
31675	public static void destroyInstance ( ) { instance = _NULL ; }
31681	public static JsonObject createSymbol ( ISymbol symbol ) { if ( instance != _NULL ) { return instance . internal_createSymbol ( symbol ) ; } return _NULL ; }
31682	@ Override public void actionPerformed ( ActionEvent ev ) { }
31702	public static Column max ( DataFrame dataFrame , String columnName ) { return dataFrame . groupBy ( columnName ) . agg ( functions . max ( columnName ) ) . col ( columnName ) ; }
31717	public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR set showAxes = _CHAR + ( ! isSelected ( ) ) + _CHAR ; _CHAR ) ; }
31727	@ Override public void actionPerformed ( ActionEvent ev ) { }
31739	public Object jjtAccept ( MithraQLVisitor visitor , Object data ) { return visitor . visit ( this , data ) ; }
31806	public void reset ( ) { mGestureDetector . reset ( ) ; mPreviousTransform . reset ( ) ; mActiveTransform . reset ( ) ; }
31808	protected AdsGetFloodStatsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
31851	protected AdsUpdateAdsQuery accountId ( int value ) { return unsafeParam ( _CHAR account_id _CHAR , value ) ; }
31853	@ Override public void startStreamingConsumption ( long timeout ) { jssc . start ( ) ; if ( timeout < _NUM ) jssc . awaitTermination ( ) ; else jssc . awaitTermination ( timeout ) ; }
31854	public void dataSourceLoaded ( DataSourceInterface dataSource ) { dataSourceAttributePanel . dataSourceLoaded ( dataSource ) ; }
31910	@ Override public Filter createFilter ( ) { return new BeyondExtended ( ) ; }
31921	public void startClassificationSection ( String name ) throws IOException { currentName = name ; dumpStart = io . getPosition ( ) ; classificationIndexTmpFileWriter = new OutputWriter ( rma2File . getClassificationIndexTmpFile ( ) ) ; numberOfClasses = _NUM ; }
31926	public Crop withMaxSize ( int width , int height ) { cropIntent . putExtra ( Extra . MAX_X , width ) ; cropIntent . putExtra ( Extra . MAX_Y , height ) ; return this ; }
31947	public AudioGetQuery albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
31969	private void consoleSetup ( ) { logController = new LogController ( ) ; ConsolePrintStream . setup ( logController ) ; }
31983	private AudioOption createOption5 ( ChannelType ... channels ) { AudioOption option = new AudioOption ( ) ; Stream . of ( createTrack ( new Channel ( FL . name ( ) , channels [ _NUM ] ) ) , createTrack ( new Channel ( FR . name ( ) , channels [ _NUM ] ) ) ) . forEach ( _NULL ) ; return option ; }
32020	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR move dir = down ; _CHAR ) ; }
32029	public static void storeEvent ( ) { if ( event == _NULL ) { return ; } StaticsAgent . storeObject ( event ) ; }
32047	public boolean canLoot ( boolean ignoreDistance ) { boolean active = cooldownCompleteTimestampMs < api . currentTimeMillis ( ) ; if ( ! ignoreDistance ) { return active && inRange ( ) ; } return active ; }
32051	@ Override public final Object createInstance ( Reader reader ) { throw new UnsupportedOperationException ( _CHAR createInstance _CHAR ) ; }
32052	@ Override public void attributeDecl ( String elementName , String attributeName , String type , String [ ] enumeration , String defaultType , XMLString defaultValue , XMLString nonNormalizedDefaultValue , Augmentations augmentations ) throws XNIException { }
32064	@ Override public boolean accept ( File directory , String fileName ) { if ( ! super . accept ( directory , fileName ) ) return _BOOL ; final String firstLine = Basic . getFirstLineFromFile ( new File ( fileName ) ) ; return firstLine != _NULL && ( firstLine . contains ( _CHAR vs _CHAR ) || firstLine . contains ( _CHAR NO HIT _CHAR ) ) ; }
32070	public boolean isLastExpanded ( ) { return lastExpanded ; }
32089	public WallGetCommentsQuery startCommentId ( Integer value ) { return unsafeParam ( _CHAR start_comment_id _CHAR , value ) ; }
32114	public void dump ( ) { diphone . dump ( ) ; }
32125	public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_TIME ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
32130	public static < T > List < T > toList ( T [ ] array ) { return Arrays . asList ( array ) ; }
32134	public void addActivity ( Activity activity ) { if ( activityStack == _NULL ) { activityStack = new Stack < Activity > ( ) ; } activityStack . add ( activity ) ; }
32145	@ Override public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR move dir = up ; _CHAR ) ; }
32164	public UsersSearchQuery interests ( String value ) { return unsafeParam ( _CHAR interests _CHAR , value ) ; }
32165	public void uncollapseAll ( ) { getCollapsedIds ( ) . clear ( ) ; updateTree ( ) ; }
32186	private void requestAddNodesStop ( ) { enqueue ( new AddNodeMessageClass ( ) . doRequestStop ( ) ) ; logger . debug ( _CHAR ZWave controller end inclusion _CHAR ) ; }
32215	@ Override public void actionPerformed ( ActionEvent ev ) { SearchManager searchManager = ( ( IViewerWithFindToolBar ) getViewer ( ) ) . getSearchManager ( ) ; if ( searchManager != _NULL ) searchManager . applyFindNext ( ) ; }
32231	public void clearResources ( ) { objectCache . clear ( ) ; }
32238	public void addColumn ( String name , Expression expr ) { throw new UnsupportedOperationException ( ) ; }
32247	@ Override public void emptyElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { startElement ( element , attributes , augs ) ; endElement ( element , augs ) ; }
32254	private void internalCreateLabel ( int xPos , String label ) { JLabel lblLabel = new JLabel ( label ) ; lblLabel . setBounds ( xPos + _NUM , _NUM , BasePanel . LABEL_WIDTH , BasePanel . WIDGET_HEIGHT ) ; lblLabel . setHorizontalAlignment ( SwingConstants . TRAILING ) ; add ( lblLabel ) ; }
32267	protected void notifyClickListenersAboutClick ( int item ) { for ( OnWheelClickedListener listener : clickingListeners ) { listener . onItemClicked ( this , item ) ; } }
32286	public void clearNeighbors ( ) { nodeNeighbors . clear ( ) ; }
32292	@ Override public boolean equals ( Object o ) { return o instanceof AirMapAircraftManufacturer && ( ( AirMapAircraftManufacturer ) o ) . getId ( ) . equals ( getId ( ) ) ; }
32294	public static boolean hasJellyBean ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ; }
32334	public void addSource ( final DOMImplementationSource s ) { if ( s == _NULL ) { throw new NullPointerException ( ) ; } if ( ! sources . contains ( s ) ) { sources . addElement ( s ) ; } }
32367	public static String decompressToStringForZlib ( byte [ ] bytesToDecompress ) { byte [ ] bytesDecompressed = decompressForZlib ( bytesToDecompress ) ; String returnValue = _NULL ; try { returnValue = new String ( bytesDecompressed , _NUM , bytesDecompressed . length , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return returnValue ; }
32374	protected void writeLSD ( ) throws IOException { writeShort ( width ) ; writeShort ( height ) ; out . write ( ( _NUM | _NUM | _NUM | palSize ) ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; }
32386	static public void add ( float [ ] array1 , float [ ] array2 ) { int i , size = array1 . length ; for ( i = _NUM ; i < size ; i ++ ) array1 [ i ] += array2 [ i ] ; }
32413	public void writeMapping ( Writer w ) throws IOException { w . write ( _CHAR # Mapping file , generated _CHAR + ( new Date ( ) ) + _CHAR \ n _CHAR ) ; for ( Integer key : id2name . keySet ( ) ) { w . write ( key + _CHAR \ t _CHAR + id2name . get ( key ) + _CHAR \ n _CHAR ) ; } }
32433	private void populatePrefixMap ( SelectedTreeItemEnum item , SelectedTreeItemEnum parentItem , Map < SelectedTreeItemEnum , String > initialPrefixMap ) { prefixMap . put ( item , prefixMap . get ( parentItem ) + initialPrefixMap . get ( item ) ) ; }
32437	public void accept ( IQueryExecutor executor , ISpaceProxy space , Transaction txn , int readModifier , int max ) throws SQLException { executor . execute ( this , space , txn , readModifier , max ) ; }
32450	public WallRepostQuery markAsAds ( Boolean value ) { return unsafeParam ( _CHAR mark_as_ads _CHAR , value ) ; }
32461	private void initLoadMoreData ( ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { List < String > url = new ArrayList < > ( ) ; url . add ( _CHAR http : // qq1234 . org / uploads / allimg / 140404 / 3_140404114555_5 . jpg '' ) ; url . add ( '' http : // qq1234 . org / uploads / allimg / 140404 / 3_140404114555_4 . jpg '' ) ; mLists . add ( url ) ; } }
32473	private static byte charToByte ( char c ) { return ( byte ) _CHAR _NUM _CHAR . indexOf ( c ) ; }
32494	public void nextGroup ( ) throws SAException { _curValueListHolder = _NULL ; if ( _curValueList != _NULL ) { _curValueList . releaseScan ( ) ; _curValueList = _NULL ; } }
32529	@ SuppressWarnings ( _CHAR unused _CHAR ) public void addSlide ( SlideFragment slideFragment , MessageButtonBehaviour messageButtonBehaviour ) { adapter . addItem ( slideFragment ) ; messageButtonBehaviours . put ( adapter . getLastItemPosition ( ) , messageButtonBehaviour ) ; }
32556	public void notifyMoveObservers ( ) { notifyObservers ( ObserverType . MOVE ) ; }
32598	public SimpleStringProperty valueProperty ( ) { return this . value ; }
32604	public void abortAnimation ( ) { mFinished = _BOOL ; }
32615	@ Override public void unlockPool ( ) { synchronized ( fGrammarPool ) { fGrammarPool . unlockPool ( ) ; } }
32632	private void onActivePointerUp ( ) { if ( STATUS . isSwipingToRefresh ( mStatus ) ) { scrollSwipingToRefreshToDefault ( ) ; } else if ( STATUS . isSwipingToLoadMore ( mStatus ) ) { scrollSwipingToLoadMoreToDefault ( ) ; } else if ( STATUS . isReleaseToRefresh ( mStatus ) ) { mRefreshCallback . onRelease ( ) ; scrollReleaseToRefreshToRefreshing ( ) ; } else if ( STATUS . isReleaseToLoadMore ( mStatus ) ) { mLoadMoreCallback . onRelease ( ) ; scrollReleaseToLoadMoreToLoadingMore ( ) ; } }
32718	private void openAppSettings ( ) { Intent intent = new Intent ( Settings . ACTION_APPLICATION_DETAILS_SETTINGS , Uri . fromParts ( _CHAR package '' , getPackageName ( ) , _NULL ) ) ; intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( intent ) ; }
32722	@ Override public void onUIRefreshComplete ( PtrFrameLayout frame ) { mDrawable . stop ( ) ; }
32725	public static long toLong ( Object obj ) { try { return Long . parseLong ( obj . toString ( ) ) ; } catch ( Exception e ) { return - _NUM ; } }
32731	private void selectRow ( int row ) { spreadsheetView . getSelectionModel ( ) . select ( row , spreadsheetView . getColumns ( ) . get ( _NUM ) ) ; }
32751	public void actionPerformed ( ActionEvent ev ) { execute ( _CHAR set fontSize = decrease ; _CHAR ) ; }
32764	public static boolean hasJellyBean ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ; }
32772	public Builder clockTicker ( Ticker ticker ) { this . _ticker = ticker ; return this ; }
32852	@ Override public Filter createFilter ( ) { return new IsNotEqualToExtended ( ) ; }
32915	public void addOption ( String key , String title ) { keyOrderList . add ( key ) ; optionMap . put ( key , title ) ; }
32933	public void removeNodeProperty ( String nodePath , String propertyName ) throws RepositoryException { LOG . debug ( _CHAR Removing property _CHAR from node _CHAR _CHAR , propertyName , nodePath ) ; session . refresh ( _BOOL ) ; session . getNode ( nodePath ) . getProperty ( propertyName ) . setValue ( ( String ) _NULL ) ; session . save ( ) ; }
32945	public static void disableTrafficAlerts ( ) { getAirMapTrafficService ( ) . disconnect ( ) ; getAirMapTrafficService ( ) . removeAllListeners ( ) ; }
32959	@ Override public void onUserCancel ( ) { if ( checkCB != _NULL ) { checkCB . onUserCancel ( ) ; } Recycler . release ( this ) ; }
32977	public void callEvent ( final Event event ) throws EventException { if ( event instanceof Cancellable ) { if ( ( ( Cancellable ) event ) . isCancelled ( ) && isIgnoringCancelled ( ) ) { return ; } } executor . execute ( listener , event ) ; }
32985	public static String makeWebServiceCall ( String url , int requestmethod ) { return makeWebServiceCall ( url , requestmethod , _NULL , _BOOL ) ; }
33018	public void removePort ( ) { if ( hostPort != _NULL ) hostPort . removePort ( ) ; }
33058	public void putByteArray ( final String key , final byte [ ] value ) { try { systemRoot . putByteArray ( fixKey ( key ) , value ) ; } catch ( final Exception e ) { System . err . print ( e ) ; } }
33101	public static int dip2px ( Context context , float dpValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpValue * scale + _NUM . _NUM ) ; }
33108	public boolean isClosed ( ) { return outputBuffer . isClosed ( ) ; }
33109	public final boolean equals ( Object obj ) { return super . equals ( obj ) ; }
33117	public void makeImmutable ( ) { mutable = _BOOL ; }
33153	protected void Expr ( ) throws javax . xml . transform . TransformerException { OrExpr ( ) ; }
33175	public SIPHeader parse ( ) throws ParseException { if ( debug ) dbg_enter ( _CHAR OrganizationParser . parse _CHAR ) ; Organization organization = new Organization ( ) ; try { headerName ( TokenTypes . ORGANIZATION ) ; String value = this . lexer . getRest ( ) ; organization . setOrganization ( value . trim ( ) ) ; return organization ; } finally { if ( debug ) dbg_leave ( _CHAR OrganizationParser . parse _CHAR ) ; } }
33180	public void deleteGroupContainers ( Set groupContainerDNs ) throws AMException , SSOException { Iterator iter = groupContainerDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupContainerDN = ( String ) iter . next ( ) ; AMGroupContainer groupContainer = new AMGroupContainerImpl ( token , groupContainerDN ) ; groupContainer . delete ( ) ; } }
33226	public static void message ( String msg , Throwable t ) { debugInst . debug ( IDebug . MESSAGE , msg , t ) ; }
33252	public String canonicalize ( String str ) throws EntitlementException { return str . toLowerCase ( ) ; }
33319	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
33320	public void deleteSubConfigurations ( Set names ) throws AMConsoleException { subConfigMeta . setParentId ( _CHAR / _CHAR ) ; subConfigMeta . deleteSubConfigurations ( names ) ; }
33354	public static String map2AlgName ( String oid ) { checkCacheVersion ( ) ; String algUC = oid2AlgMap . get ( oid ) ; if ( algUC != _NULL ) { return algAliasesMap . get ( algUC ) ; } AlgNameMapperSource s = source ; if ( s != _NULL ) { return s . mapOidToName ( oid ) ; } return _NULL ; }
33368	private static Period create ( int years , int months , int days ) { if ( ( years | months | days ) == _NUM ) { return ZERO ; } return new Period ( years , months , days ) ; }
33388	@ Override public void postDelayed ( Runnable runnable , long delayMillis ) { if ( runnable == _NULL ) return ; TaskProxy . sHandler . postDelayed ( runnable , delayMillis ) ; }
33481	private void initH2Console ( ServletContext servletContext ) { log . debug ( _CHAR Initialize H2 console _CHAR ) ; ServletRegistration . Dynamic h2ConsoleServlet = servletContext . addServlet ( _CHAR H2Console _CHAR , new org . h2 . server . web . WebServlet ( ) ) ; h2ConsoleServlet . addMapping ( _CHAR / h2 - console /* '' ) ; h2ConsoleServlet . setInitParameter ( '' - properties '' , '' src / main / resources / '' ) ; h2ConsoleServlet . setLoadOnStartup ( 1 ) ; }
33490	public void init ( SecureRandom random ) throws IllegalArgumentException { }
33494	public void writeXMLHeader ( ) { buffer . append ( _CHAR < ? xml version =\ _CHAR _NUM . _NUM \ _CHAR encoding =\ _CHAR utf - _NUM \ _CHAR ? > \ n _CHAR ) ; }
33516	public void makeImmutable ( ) { if ( isMutable ) { if ( subjectConfirmationData != _NULL ) { subjectConfirmationData . makeImmutable ( ) ; } if ( baseId != _NULL ) { baseId . makeImmutable ( ) ; } if ( nameId != _NULL ) { nameId . makeImmutable ( ) ; } isMutable = _BOOL ; } }
33570	public PdfCanvas saveState ( ) { document . checkIsoConformance ( _CHAR , IsoKey . CANVAS_STACK ) ; gsStack . push ( currentGs ) ; currentGs = new CanvasGraphicsState ( currentGs ) ; contentStream . getOutputStream ( ) . writeBytes ( q ) ; return this ; }
33572	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
33591	public void handleButton3Request ( RequestInvocationEvent event ) { forwardToEntityServiceViewBean ( ) ; }
33699	public static void put ( final Map < ? extends String , ? extends Object > map ) { JKThreadLocal . get ( ) . putAll ( map ) ; }
33735	public PdfCanvas eoFill ( ) { document . checkIsoConformance ( currentGs , IsoKey . DRAWMODE_FILL , resources ) ; contentStream . getOutputStream ( ) . writeBytes ( fStar ) ; return this ; }
33744	private void webServerStop ( ) { mAppManager . startService ( WebServerService . class , WEB_SERVER_SERVICE_STOP ) ; }
33766	public void makeImmutable ( ) { if ( mutable ) { if ( decision != _NULL ) { decision . makeImmutable ( ) ; } if ( status != _NULL ) { status . makeImmutable ( ) ; } mutable = _BOOL ; } }
33787	public PageSize rotate ( ) { return new PageSize ( height , width ) ; }
33817	public void makeImmutable ( ) { if ( ! mutable ) { return ; } super . makeImmutable ( ) ; if ( ( keyInfo != _NULL ) && ( ! keyInfo . isEmpty ( ) ) ) { keyInfo = Collections . unmodifiableList ( keyInfo ) ; } }
33831	public void handleButton2Request ( RequestInvocationEvent event ) { forwardToClientManagerView ( ) ; }
33838	private File paramClassResource ( String className ) throws URISyntaxException { URL url = getClass ( ) . getClassLoader ( ) . getResource ( className + _CHAR . class _CHAR ) ; assertNotNull ( url ) ; File file = new File ( url . toURI ( ) ) ; return file ; }
33878	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
33879	public void free ( ) { bufHandler . free ( ) ; }
33887	public PdfCanvas rectangle ( Rectangle rectangle ) { return rectangle ( rectangle . getX ( ) , rectangle . getY ( ) , rectangle . getWidth ( ) , rectangle . getHeight ( ) ) ; }
33907	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton1Request ( event ) ; }
33956	@ Override public String toString ( ) { return buffer . toString ( ) ; }
34033	public void await ( ) { getServer ( ) . await ( ) ; }
34079	public static void main ( String [ ] args ) { JKLogger logger = JKLoggerFactory . getLogger ( Integer . class ) ; logger . info ( _CHAR asdfads _CHAR ) ; }
34105	public void decode ( InputStream stream ) throws KeyException , IOException { }
34108	public static void deleteFile ( String path ) { File file = new File ( path ) ; if ( file . exists ( ) ) { file . delete ( ) ; } }
34123	public void removeNode ( Node n ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESET_NOT_MUTABLE , _NULL ) ) ; this . removeElement ( n ) ; }
34190	final int inc ( int i ) { return ( ++ i == items . length ) ? _NUM : i ; }
34235	public StoreDescription unregisterDescription ( StoreDescription desc ) { String key = desc . getId ( ) ; if ( key == _NULL || _CHAR _CHAR . equals ( key ) ) key = desc . getTagClass ( ) ; return descriptors . remove ( key ) ; }
34265	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
34292	public void onFileChange ( final File file ) { }
34382	public void makeImmutable ( ) { mutable = _BOOL ; }
34385	boolean deleteConfig ( File f ) throws Exception { String pid [ ] = parsePid ( f . getName ( ) ) ; Configuration config = getConfiguration ( toConfigKey ( f ) , pid [ _NUM ] , pid [ _NUM ] , _BOOL ) ; config . delete ( ) ; return _BOOL ; }
34453	public void reset ( ) { start = _NUM ; end = _NUM ; }
34461	void shutdown ( ) { if ( shutdown . compareAndSet ( _BOOL , _BOOL ) ) { log . close ( ) ; DirectoryServer . deregisterMonitorProvider ( dbMonitor ) ; } }
34530	public void endDocument ( ) throws SAXException { if ( documentHandler != _NULL ) documentHandler . endDocument ( ) ; }
34577	public void close ( ) throws java . io . IOException { raf . close ( ) ; }
34587	public static JFrame createFrame ( ) { JFrame frame = new JFrame ( ) ; frame . setResizable ( _BOOL ) ; org . opends . quicksetup . ui . Utilities . setFrameIcon ( frame ) ; return frame ; }
34660	public void deletePeopleContainers ( Set peopleContainerDNs ) throws AMException , SSOException { Iterator iter = peopleContainerDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String peopleContainerDN = ( String ) iter . next ( ) ; AMPeopleContainer peopleContainer = new AMPeopleContainerImpl ( super . token , peopleContainerDN ) ; peopleContainer . delete ( ) ; } }
34690	public void invoke ( Context context , Map < String , Object > syncFailure , Exception failureCause ) throws SyncHandlerException { logger . warn ( _CHAR { } liveSync failure on sync - token { } for { } , { } - { } _CHAR , syncFailure . get ( _CHAR systemIdentifier _CHAR ) , syncFailure . get ( _CHAR token _CHAR ) . toString ( ) , syncFailure . get ( _CHAR objectType _CHAR ) , syncFailure . get ( _CHAR uid _CHAR ) , failureCause . toString ( ) ) ; }
34694	public void endDocument ( ) throws SAXException { if ( documentHandler != _NULL ) documentHandler . endDocument ( ) ; }
34749	public void clear ( ) { options = _NULL ; name = _NULL ; value = _NULL ; children = _NULL ; qualifier = _NULL ; }
34762	public void handleButton2Request ( RequestInvocationEvent event ) { removePageSessionAttribute ( PROPERTY_ATTRIBUTE ) ; populateValues = _BOOL ; forwardTo ( ) ; }
34818	protected void NumberExpr ( ) throws javax . xml . transform . TransformerException { int opPos = m_ops . getOp ( OpMap . MAPINDEX_LENGTH ) ; appendOp ( _NUM , OpCodes . OP_NUMBER ) ; Expr ( ) ; m_ops . setOp ( opPos + OpMap . MAPINDEX_LENGTH , m_ops . getOp ( OpMap . MAPINDEX_LENGTH ) - opPos ) ; }
34830	public void makeImmutable ( ) { mutable = _BOOL ; if ( authnContextClassRef != _NULL ) { authnContextClassRef = Collections . unmodifiableList ( authnContextClassRef ) ; } if ( authnContextDeclRef != _NULL ) { authnContextDeclRef = Collections . unmodifiableList ( authnContextDeclRef ) ; } return ; }
34894	public void refreshInstance ( Map < String , Object > data ) { if ( data == _NULL ) { return ; } refreshInstance ( WXJsonUtils . fromObjectToJSONString ( data ) ) ; }
34937	public boolean isEmpty ( ) { return _BOOL ; }
34962	public static void close ( URLConnection conn ) { if ( conn instanceof HttpURLConnection ) { ( ( HttpURLConnection ) conn ) . disconnect ( ) ; } }
34984	public String toString ( ) { return _CHAR SearchTemplate : _CHAR + getName ( ) + _CHAR { _CHAR + m_attrSet + _CHAR } _CHAR ; }
35030	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR Entered FSRegistrationRequestServlet Init _CHAR ) ; metaManager = FSUtils . getIDFFMetaManager ( ) ; }
35036	public void clear ( ResourceSaveIndexes indexes , String dn ) { if ( indexes != _NULL ) { clear ( dn , indexes . getHostIndexes ( ) , hostIndexCache ) ; clear ( dn , indexes . getPathIndexes ( ) , pathIndexCache ) ; clear ( dn , indexes . getParentPathIndexes ( ) , parentPathIndexCache ) ; } }
35044	public void send ( boolean checkexpired ) throws IOException { send ( checkexpired , _NULL ) ; }
35045	@ Override public void sendAck ( ) { }
35073	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
35083	public static < K , V > Map < K , V > map ( K key1 , V value1 ) { return getInstance ( ) . mapInstance ( key1 , value1 ) ; }
35135	@ Override public void removeNotificationListener ( NotificationListener listener , NotificationFilter filter , Object object ) throws ListenerNotFoundException { broadcaster . removeNotificationListener ( listener , filter , object ) ; }
35165	@ Override public synchronized void stop ( int svc ) throws ChannelException { if ( hbthread != _NULL ) { hbthread . stopHeartbeat ( ) ; hbthread = _NULL ; } super . stop ( svc ) ; }
35197	@ Override public void audit ( JsonValue jsonValue ) { }
35209	@ Override protected void onResume ( ) { super . onResume ( ) ; syncUIControlState ( ) ; }
35228	protected void flushObject ( PdfObject pdfObject , boolean canBeInObjStm ) throws IOException { writer . flushObject ( pdfObject , canBeInObjStm ) ; }
35234	public synchronized final Scheme unregister ( String name ) { if ( name == _NULL ) throw new IllegalArgumentException ( _CHAR Name must not be _NULL . _CHAR ) ; Scheme gone = registeredSchemes . remove ( name ) ; return gone ; }
35270	public Observable < List < Product >> retrieveAllProductsObservable ( ) { io . vertx . rx . java . ObservableFuture < List < Product >> resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrieveAllProducts ( resultHandler . toHandler ( ) ) ; return resultHandler ; }
35275	public void handleButton2Request ( RequestInvocationEvent event ) { removePageSessionAttribute ( PROPERTY_ATTRIBUTE ) ; populateValues = _BOOL ; forwardTo ( ) ; }
35294	public void flush ( ) { try { synchronized ( lock ) { ensureOpen ( ) ; out . flush ( ) ; } } catch ( IOException x ) { trouble = _BOOL ; } }
35316	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
35336	public PAccessNetworkInfoHeader createPAccessNetworkInfoHeader ( ) { PAccessNetworkInfo accessNetworkInfo = new PAccessNetworkInfo ( ) ; return accessNetworkInfo ; }
35421	public void reset ( ) throws IOException { in . reset ( ) ; }
35448	public void readOctetString ( ) throws IOException { if ( tag == ASN1Constants . TAG_OCTETSTRING ) { readContent ( ) ; } else if ( tag == ASN1Constants . TAG_C_OCTETSTRING ) { throw new ASN1Exception ( _CHAR Decoding constructed ASN . 1 octet string type is not supported _CHAR ) ; } else { throw expected ( _CHAR octetstring _CHAR ) ; } }
35461	public static String generateAssertionHandle ( ) { String result = _NULL ; String encodedID = generateID ( ) ; if ( encodedID != _NULL ) { try { result = encodedID . substring ( _NUM , _NUM ) ; } catch ( Exception e ) { FSUtils . debug . error ( _CHAR FSUtil . generateAssertionHandle : _CHAR , e ) ; } } return result ; }
35554	protected void checkLogFileStatus ( boolean isCreated , String logName ) { String fullPath = debugDirectory + File . separator + logName ; if ( isCreated != isFileExist ( logName ) ) { failAndPrintFolderStatusReport ( _CHAR Log _CHAR_CHAR_CHAR exist != _CHAR + isCreated + _CHAR ! \ n _CHAR ) ; } }
35569	public void startDocument ( ) throws SAXException { if ( documentHandler != _NULL ) documentHandler . startDocument ( ) ; }
35654	public static boolean clear ( ) { failIfNotInitialized ( ) ; try { mCache . clear ( ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
35662	public static String formatTime ( Date date ) { return mSimpleTimeFormat . format ( date ) ; }
35692	public void readString ( String s ) { }
35777	public void init ( Subject subject , Map sharedState , Map options ) { System . out . println ( _CHAR LoginModuleSample initialization _CHAR ) ; }
35783	public void delete ( RandomAccessFile raf , RandomAccessFile tempRaf ) throws IOException , CannotWriteException { FlacTag emptyTag = new FlacTag ( _NULL , new ArrayList < MetadataBlockDataPicture > ( ) ) ; raf . seek ( _NUM ) ; tempRaf . seek ( _NUM ) ; write ( emptyTag , raf , tempRaf ) ; }
35892	public void stop ( String className , LocalizableMessage reason ) { DirectoryServer . shutDown ( className , reason ) ; }
35910	public void reset ( ) { super . reset ( ) ; if ( _NULL != m_iterator ) m_iterator . reset ( ) ; }
35932	public void init ( SecureRandom random ) throws IllegalArgumentException { this . random = random ; }
35939	public StringBuilder encodeBody ( StringBuilder retval ) { return retval . append ( Integer . toString ( expires ) ) ; }
35943	public boolean isEmpty ( ) { return _BOOL ; }
35952	@ Override public void shutdown ( ) { super . shutdown ( ) ; clearRemoteLSHandlers ( ) ; }
36040	public void SyntaxException ( String msg , LineCol lineCol ) throws SyntaxException { if ( fastFail ) throw new SyntaxException ( buildErrInfo ( lineCol ) , msg , lineCol ) ; error ( msg + _CHAR at _CHAR + lineCol ) ; errorList . add ( new CompilingError ( msg , lineCol , CompilingError . Syntax ) ) ; }
36051	public Tag buildTag ( ) { logger . info ( _CHAR old Tag : _CHAR + JKObjectUtil . toString ( this . tag ) ) ; final Tag tag = new Tag ( getLocation ( ) , getNamespace ( ) , getLocalName ( ) , getqName ( ) , buildAttribues ( ) ) ; logger . info ( _CHAR New Tag : _CHAR + JKObjectUtil . toString ( tag ) ) ; return tag ; }
36064	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { forwardToProperties ( event ) ; }
36070	public void eval ( String script ) { mClientProxy . transact ( script ) ; }
36078	public void readSetOf ( ASN1SetOf setOf ) throws IOException { if ( tag != ASN1Constants . TAG_C_SETOF ) { throw expected ( _CHAR setOf _CHAR ) ; } decodeValueCollection ( setOf ) ; }
36082	private void cleanUpIndeterminateValues ( ) { if ( progressBar . isDisplayable ( ) ) { stopAnimationTimer ( ) ; } cycleTime = repaintInterval = _NUM ; numFrames = animationIndex = _NUM ; maxPosition = _NUM ; delta = _NUM . _NUM ; boxRect = nextPaintRect = _NULL ; componentInnards = oldComponentInnards = _NULL ; progressBar . removeHierarchyListener ( getHandler ( ) ) ; }
36085	public void disableLogging ( ) { }
36097	public static JButton createButton ( LocalizableMessage text ) { JButton button = new JButton ( text . toString ( ) ) ; button . setOpaque ( _BOOL ) ; button . setForeground ( ColorAndFontConstants . buttonForeground ) ; button . getAccessibleContext ( ) . setAccessibleName ( text . toString ( ) ) ; return button ; }
36148	public void printIndent ( PrintWriter aWriter , int indent ) { for ( int i = _NUM ; i < indent ; i ++ ) { aWriter . print ( _CHAR ) ; } pos = indent ; }
36155	public static Object call ( Object object ) { if ( object instanceof Closure < ? > ) { try { return ( ( Closure < ? > ) object ) . call ( ) ; } catch ( Exception e ) { return _NULL ; } } if ( object instanceof CharSequence && object . toString ( ) . isEmpty ( ) ) { return _NULL ; } return object ; }
36208	public void addNotificationListener ( NotificationListener listener , NotificationFilter filter , Object handback ) { if ( listener == _NULL ) { throw new IllegalArgumentException ( _CHAR Listener ca n _CHAR_CHAR ) ; } listenerList . add ( new ListenerInfo ( listener , filter , handback ) ) ; }
36236	public void removePostDial ( ) { parameters . delete ( POSTDIAL ) ; }
36279	public void addAttribute ( Object name , Object value ) { StyleContext context = StyleContext . this ; attributes = context . addAttribute ( attributes , name , value ) ; fireStateChanged ( ) ; }
36282	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
36288	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton1Request ( event ) ; }
36294	protected void writeHeader ( ) { writeByte ( _CHAR ) . writeString ( document . getPdfVersion ( ) . toString ( ) ) . writeString ( _CHAR \ n % \ u00e2 \ u00e3 \ u00cf \ u00d3 \ n _CHAR ) ; }
36327	private static LocalizableMessage createLocalizableMessage ( AbstractManagedObjectDefinition < ? , ? > d , Reason reason ) { LocalizableMessage ufn = d . getUserFriendlyName ( ) ; switch ( reason ) { case NO_TYPE_INFORMATION : return ERR_DECODING_EXCEPTION_NO_TYPE_INFO . get ( ufn ) ; case WRONG_TYPE_INFORMATION : return ERR_DECODING_EXCEPTION_WRONG_TYPE_INFO . get ( ufn ) ; default : return ERR_DECODING_EXCEPTION_ABSTRACT_TYPE_INFO . get ( ufn ) ; } }
36374	protected synchronized void buildLostApiClient ( ) { lostApiClient = new LostApiClient . Builder ( this ) . build ( ) ; }
36456	@ Override public void close ( ) throws IOException { getIOChannel ( ) . socket ( ) . close ( ) ; getIOChannel ( ) . close ( ) ; }
36597	private static LocalizableMessage createMessage ( final PropertyDefinition < ? > pd , final Object value ) { final PropertyDefinitionUsageBuilder builder = new PropertyDefinitionUsageBuilder ( _BOOL ) ; return ERR_ILLEGAL_PROPERTY_VALUE_EXCEPTION . get ( value , pd . getName ( ) , builder . getUsage ( pd ) ) ; }
36613	public char popChar ( ) { BaseTypeWrapper wrapper = ( BaseTypeWrapper ) this . pop ( ) ; Character value = ( Character ) wrapper . getValue ( ) ; return value . charValue ( ) ; }
36658	@ Override public void add ( Privilege privilege ) throws EntitlementException { super . add ( privilege ) ; PolicyDataStore pdb = PolicyDataStore . getInstance ( ) ; String currentRealm = getRealm ( ) ; pdb . addPolicy ( getAdminSubject ( ) , currentRealm , privilege ) ; notifyPrivilegeChanged ( currentRealm , _NULL , privilege , PolicyEventType . CREATE ) ; }
36687	public void parse ( InputSource input ) throws SAXException , IOException { setupParse ( ) ; parent . parse ( input ) ; }
36746	public void callEvent ( final Event event ) throws EventException { if ( event instanceof Cancellable ) { if ( ( ( Cancellable ) event ) . isCancelled ( ) && isIgnoringCancelled ( ) ) { return ; } } executor . execute ( listener , event ) ; }
36761	private void startExpandingAnimation ( ) { if ( ! isWindowFocused ) return ; if ( mExpandingController == _NULL ) { initExpandingAnimationController ( ) ; } if ( mExpandingController . isRunning ( ) || mExpandingController . isStarted ( ) ) { mExpandingController . end ( ) ; mExpandingController . cancel ( ) ; } mExpandingController . start ( ) ; }
36815	@ DataProvider ( name = _CHAR invalidStatements _CHAR ) public Object [ ] [ ] invalids ( ) { return new Object [ ] [ ] { { _CHAR add = st : ( st =* ) , deeeel = st : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) , foo = st : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) , , , del = st : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) , dellll = st : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) del = st : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) , add = st : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) , del = st : ( st =* ) , add = st : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) , del = cn : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) && cn : ( cn = c * ) , del = st : ( st =* ) && l : ( cn = c * ) _CHAR } } ; }
36854	public void deleteStaticGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMStaticGroup group = new AMStaticGroupImpl ( super . token , groupDN ) ; group . delete ( ) ; } }
36861	@ AfterClass public void cleanup ( ) throws Exception { String userRootDN = _CHAR ds - cfg - backend - id = userRoot , cn = Backends , cn = config _CHAR ; ModifyRequest modifyRequest = Requests . newModifyRequest ( userRootDN ) . addModification ( DELETE , _CHAR ds - cfg - base - dn _CHAR , _CHAR o = airius . com _CHAR ) ; ModifyOperation modifyOperation = getRootConnection ( ) . processModify ( modifyRequest ) ; assertEquals ( modifyOperation . getResultCode ( ) , ResultCode . SUCCESS ) ; }
36896	protected SSLEngineResult handshakeWrap ( ) throws IOException { netOutBuffer . clear ( ) ; getBufHandler ( ) . configureWriteBufferForRead ( ) ; SSLEngineResult result = sslEngine . wrap ( getBufHandler ( ) . getWriteBuffer ( ) , netOutBuffer ) ; netOutBuffer . flip ( ) ; handshakeStatus = result . getHandshakeStatus ( ) ; return result ; }
36976	private void iconify ( ) { Frame frame = getFrame ( ) ; if ( frame != _NULL ) { frame . setExtendedState ( state | Frame . ICONIFIED ) ; } }
37078	public void write ( byte b ) { check ( _NUM ) ; buffer [ write_pos ++ ] = b ; }
37096	public static String decToHex ( int dec ) { String hex = Integer . toHexString ( dec ) ; return hex . length ( ) == _NUM ? _CHAR _NUM _CHAR + hex : hex ; }
37098	public static void println ( ) { System . out . println ( ) ; }
37101	public PdfCanvas fill ( ) { document . checkIsoConformance ( currentGs , IsoKey . DRAWMODE_FILL , resources ) ; contentStream . getOutputStream ( ) . writeBytes ( f ) ; return this ; }
37111	public < V > V post ( final String uri , final Object params , final Type type ) throws IOException { HttpURLConnection request = createPost ( uri ) ; return sendJson ( request , params , type ) ; }
37143	public static List < Entry > sortHashTable ( final Hashtable < ? , ? > hash , final boolean asc ) { final ArrayList < Entry > myArrayList = new ArrayList ( hash . entrySet ( ) ) ; Collections . sort ( myArrayList , new HashComparator ( asc ) ) ; return myArrayList ; }
37162	private void buildIndentation ( StringBuilder sb , int indentation ) { for ( int i = _NUM ; i < indentation ; ++ i ) { sb . append ( _CHAR _CHAR ) ; } }
37219	@ Override public int hashCode ( ) { return ( univIdWithoutDN . toLowerCase ( ) . hashCode ( ) ) ; }
37270	public void signXML ( ) throws SAMLException { String certAlias = SystemConfigurationUtil . getProperty ( _CHAR com . sun . identity . saml . xmlsig . certalias _CHAR ) ; signXML ( certAlias ) ; }
37292	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
37293	public boolean isEmpty ( ) { return count == _NUM ; }
37304	public void startDocument ( ) throws SAXException { if ( documentHandler != _NULL ) documentHandler . startDocument ( ) ; }
37318	@ DataProvider ( name = _CHAR invalid6Rules _CHAR ) public Object [ ] [ ] inValid6Data ( ) { return new Object [ ] [ ] { { _CHAR _NUM : feca : ba23 : cd1f : dcb1 : _NUM : _NUM : _NUM /// 124 '' } , { '' 2001 : feca : ba23 : cd1f : dcb1 : 1010 : 9234 : 4088 ? 124 '' } , { '' 2001 : fecz : ba23 : cd1f : dcb1 : 1010 : 9234 : 4088 / 124 '' } , { '' 2001 : fecd : ba23 : cd1ff : dcb1 : 1010 : 9234 : 4088 / 46 '' } , { '' 0 : 0 : 0 : 0 : 0 : ffff : 101 .. 45 . 75 . 219 '' } , { '' 0 : 0 : 0 : 0 : 0 : 0 : 101 . 45 . 75 . 700 '' } , { '' 1080 : : 8 : 800 : 200C : 417A / 500 '' } , { '' 1080 : : 8 : 800 : *: 417A / 66 '' } , { '' 2001 : fecd : ba23 : cd1ff : dcb1 : 1010 : 202 . 45 . 66 . 20 '' } } ; }
37324	public AssertionArtifact createAssertionArtifact ( String id , String destID ) throws SAMLException { return createAssertionArtifact ( id , destID , _NULL , _NULL ) ; }
37333	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
37434	public String toXMLString ( ) throws SAML2Exception { return toXMLString ( _BOOL , _BOOL ) ; }
37436	public String toString ( ) { return this . encode ( ) ; }
37438	public byte [ ] generateSignature ( @ NonNull byte [ ] content ) { try { Mac mac = Mac . getInstance ( HASH_ALGORITHM ) ; mac . init ( secretKeySpec ) ; return mac . doFinal ( content ) ; } catch ( NoSuchAlgorithmException | InvalidKeyException e ) { throw new IllegalStateException ( e ) ; } }
37461	public static ConnectionParameters connectionParams ( ) { return new ConnectionParameters ( ) ; }
37502	public void start ( ) throws LifecycleException { getServer ( ) ; getConnector ( ) ; server . start ( ) ; }
37514	public void handleButton2Request ( RequestInvocationEvent event ) { forwardToCallingViewBean ( ) ; }
37555	public static < K , V > Map < K , V > map ( K key1 , V value1 , K key2 , V value2 ) { return getInstance ( ) . mapInstance ( key1 , value1 , key2 , value2 ) ; }
37585	public void parse ( String systemId ) throws SAXException , IOException { parse ( new InputSource ( systemId ) ) ; }
37593	void init ( TransformerFactoryImpl processor ) { m_stylesheetProcessor = processor ; m_processors . push ( m_schema . getElementProcessor ( ) ) ; this . pushNewNamespaceSupport ( ) ; }
37611	private void readObject ( final ObjectInputStream in ) throws IOException , ClassNotFoundException { try { in . defaultReadObject ( ) ; final PerUserPoolDataSource oldDS = ( PerUserPoolDataSource ) new PerUserPoolDataSourceFactory ( ) . getObjectInstance ( getReference ( ) , _NULL , _NULL , _NULL ) ; this . managers = oldDS . managers ; } catch ( final NamingException e ) { throw new IOException ( _CHAR NamingException : _CHAR + e ) ; } }
37646	@ DataProvider ( name = _CHAR invalid6Rules _CHAR ) public Object [ ] [ ] inValid6Data ( ) { return new Object [ ] [ ] { { _CHAR _NUM : feca : ba23 : cd1f : dcb1 : _NUM : _NUM : _NUM /// 124 '' } , { '' 2001 : feca : ba23 : cd1f : dcb1 : 1010 : 9234 : 4088 ? 124 '' } , { '' 2001 : fecz : ba23 : cd1f : dcb1 : 1010 : 9234 : 4088 / 124 '' } , { '' 2001 : fecd : ba23 : cd1ff : dcb1 : 1010 : 9234 : 4088 / 46 '' } , { '' 0 : 0 : 0 : 0 : 0 : ffff : 101 .. 45 . 75 . 219 '' } , { '' 0 : 0 : 0 : 0 : 0 : 0 : 101 . 45 . 75 . 700 '' } , { '' 1080 : : 8 : 800 : 200C : 417A / 500 '' } , { '' 1080 : : 8 : 800 : *: 417A / 66 '' } } ; }
37697	public String registerCallbackHandler ( SSOToken token , SMSObjectListener changeListener ) throws SMSException , SSOException { return eventManager . addObjectChangeListener ( changeListener ) ; }
37756	public void onEnterAnimationComplete ( ) { }
37763	public static void register ( AbstractMatcher < String > matcher ) { matchers . add ( matcher ) ; }
37786	@ DataProvider ( name = _CHAR valid6Rules _CHAR ) public Object [ ] [ ] valid6Data ( ) { return new Object [ ] [ ] { { _CHAR _NUM : fecd : ba23 : cd1f : dcb1 : _NUM : _NUM : _NUM / _NUM _CHAR } , { _CHAR _NUM : fecd : ba23 : cd1f : dcb1 : _NUM : _NUM : _NUM _CHAR } , { _CHAR [ _NUM : fecd : ba23 : cd1f : dcb1 : _NUM : _NUM : _NUM ] / _NUM _CHAR } , { _CHAR : :/ _NUM _CHAR } , { _CHAR : : _NUM / _NUM _CHAR } , { _CHAR [ : : _NUM ] _CHAR } , { _CHAR : : _CHAR } , { _CHAR _NUM : _NUM : _NUM : _NUM : _NUM : ffff : _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM : : _NUM : _NUM : _NUM : _NUM _CHAR } , { _CHAR _NUM : _NUM : _NUM : _NUM : _NUM : _NUM : _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR : : _NUM . _NUM . _NUM . _NUM _CHAR } } ; }
37864	public short popShort ( ) { BaseTypeWrapper wrapper = ( BaseTypeWrapper ) this . pop ( ) ; Short value = ( Short ) wrapper . getValue ( ) ; return value . shortValue ( ) ; }
37875	@ Override public ServiceCall < NotUsed , Cargo , Done > register ( ) { return _NULL ; }
38013	public void stop ( ) { if ( logger . isTraceEnabled ( ) && ! shutdown ) { debugInfo ( _CHAR is stopping and will close the connection to RS ( _CHAR + getRsServerId ( ) + _CHAR ) _CHAR ) ; } synchronized ( startStopLock ) { if ( shutdown ) { return ; } domain . publishReplicaOfflineMsg ( ) ; shutdown = _BOOL ; setConnectedRS ( ConnectedRS . stopped ( ) ) ; stopRSHeartBeatMonitoring ( ) ; stopChangeTimeHeartBeatPublishing ( ) ; deregisterReplicationMonitor ( ) ; } }
38122	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
38131	public void deactivate ( ) throws AMException , SSOException { setStringAttribute ( statusAN , _CHAR inactive _CHAR ) ; store ( ) ; }
38226	@ Override public void destroy ( ) { }
38250	public void start ( ) { synchronized ( startStopLock ) { if ( ! shutdown ) { return ; } shutdown = _BOOL ; this . rcvWindow = getMaxRcvWindow ( ) ; connectAsDataServer ( ) ; } }
38264	@ DataProvider ( name = _CHAR passwordPolicyWarningTypeData _CHAR ) public Object [ ] [ ] createPasswordPolicyWarningTypeData ( ) { HashMap < Byte , String > values = new HashMap < > ( ) ; values . put ( ( byte ) _NUM , _CHAR timeBeforeExpiration _CHAR ) ; values . put ( ( byte ) _NUM , _CHAR graceAuthNsRemaining _CHAR ) ; return new Object [ ] [ ] { { values } } ; }
38281	public JKTagMapping findTagMapping ( final String tagName ) { for ( final JKTagMapping mapping : this . tagMapping ) { if ( mapping . getSourceQName ( ) . equals ( tagName ) ) { return mapping ; } } return _NULL ; }
38307	public static int v ( String tag , String msg , Throwable tr ) { return isPrint && msg != _NULL ? android . util . Log . v ( tag , msg , tr ) : - _NUM ; }
38309	public OrderService initializePersistence ( Handler < AsyncResult < Void >> resultHandler ) { delegate . initializePersistence ( resultHandler ) ; return this ; }
38348	final void onAttach ( ) { DraweeSpan [ ] images = getImages ( ) ; for ( DraweeSpan image : images ) { image . onAttach ( this ) ; } }
38393	public static void main ( final String [ ] args ) { System . out . println ( divide ( _NUM . _NUM , _NUM ) ) ; }
38421	protected void StringExpr ( ) throws javax . xml . transform . TransformerException { int opPos = m_ops . getOp ( OpMap . MAPINDEX_LENGTH ) ; appendOp ( _NUM , OpCodes . OP_STRING ) ; Expr ( ) ; m_ops . setOp ( opPos + OpMap . MAPINDEX_LENGTH , m_ops . getOp ( OpMap . MAPINDEX_LENGTH ) - opPos ) ; }
38457	public static UIFacesVisitor visitCurrentView ( ) { return JKJsfUtil . visitComponent ( FacesContext . getCurrentInstance ( ) . getViewRoot ( ) ) ; }
38484	public Observable < CheckoutResult > checkoutObservable ( String userId ) { io . vertx . rx . java . ObservableFuture < CheckoutResult > handler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; checkout ( userId , handler . toHandler ( ) ) ; return handler ; }
38509	private static void mkdir ( String dir ) throws IOException { FileUtils . createDirectory ( dir ) ; }
38514	public static void main ( final String [ ] args ) throws Exception { System . out . println ( HardWare . MAC ) ; System . out . println ( getMacAddress ( ) ) ; }
38528	private TypeSpec . Builder generateTypeBuilder ( ) { String clzName = parser . getClzName ( ) ; clzName = clzName + SUFFIX ; return TypeSpec . classBuilder ( clzName ) . addModifiers ( Modifier . PUBLIC ) ; }
38580	public static final String toJson ( final Object object ) { return toJson ( object , _BOOL ) ; }
38591	@ DataProvider ( name = _CHAR csnData _CHAR ) public Object [ ] [ ] createCSNData ( ) { return new Object [ ] [ ] { { new CSN ( _NUM , _NUM , _NUM ) } , { new CSN ( TimeThread . getTime ( ) , _NUM , _NUM ) } } ; }
38634	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
38649	public void flush ( ) { }
38660	public int length ( ) { return count ; }
38697	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
38734	private boolean handleOverwrite ( final File sourceFile , final File destFile ) throws IOException { return FileUtils . delete ( destFile ) && FileUtils . copyFromSourceToDestFile ( sourceFile , destFile , _BOOL , configuration ) ; }
38747	public void makeImmutable ( ) { if ( isMutable ) { if ( audiences != _NULL ) { audiences = Collections . unmodifiableList ( audiences ) ; } isMutable = _BOOL ; } }
38805	public void paint ( Graphics g ) { super . paint ( g ) ; Border border = getBorder ( ) ; if ( border != _NULL ) { Dimension size = getSize ( ) ; border . paintBorder ( this , g , _NUM , _NUM , size . width , size . height ) ; } }
38914	public Observable < Void > initializePersistenceObservable ( ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; initializePersistence ( resultHandler . toHandler ( ) ) ; return resultHandler ; }
38930	public void stop ( ) throws LifecycleException { getServer ( ) ; server . stop ( ) ; }
38934	int refCount ( ) { return lock . refCount . get ( ) ; }
38939	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR FSTerminationReturnServlet Initializing ... _CHAR ) ; this . config = config ; metaManager = FSUtils . getIDFFMetaManager ( ) ; }
39008	public Object clone ( ) { try { return new RoleUnresolved ( roleName , roleValue , problemType ) ; } catch ( IllegalArgumentException exc ) { return _NULL ; } }
39012	private void fillReservoir ( int min ) { if ( pos >= reservoir . length - min ) { try { IoUtils . readFully ( stream , reservoir , _NUM , reservoir . length ) ; } catch ( IOException e ) { throw new RuntimeException ( _CHAR failed to fill reservoir _CHAR , e ) ; } pos = _NUM ; } }
39020	public void makeImmutable ( ) { mutable = _BOOL ; }
39033	public static String decode ( String encoded ) { return decode ( encoded , encryptor ) ; }
39076	public void destroy ( ) { }
39085	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; repopulateMechID ( ) ; forwardTo ( ) ; }
39090	private void webServerStart ( ) { mAppManager . startService ( WebServerService . class , WEB_SERVER_SERVICE_START ) ; }
39099	public boolean isReset ( ) { return reset ; }
39132	public static byte [ ] dbKey ( byte [ ] password , Class requester , String key ) { return encryptKey ( password , rawKey ( requester , key ) ) ; }
39210	public void clearQueue ( String queueName ) { synchronized ( syncRoot ) { taskQueuesMap . remove ( queueName ) ; } }
39265	protected View createChild ( String name ) { if ( name . equals ( VALUE_TEXTFIELD ) ) { if ( model . getValueOptionList ( ) == _NULL ) { return new TextField ( this , name , _NULL ) ; } else { return new CCSelect ( this , name , ( Object ) _NULL , model . getValueOptionList ( ) ) ; } } else { return super . createChild ( name ) ; } }
39268	public final boolean checkTag ( int identifier ) { return this . id == identifier ; }
39329	public void showNoAntennaDialog ( ) { NoAntennaDialog newFragment = NoAntennaDialog . newInstance ( ) ; newFragment . show ( mFragmentManager , TAG_NO_ANTENNA ) ; mFragmentManager . executePendingTransactions ( ) ; }
39335	@ Override public void close ( ) throws IOException { if ( response == _NULL || closed ) return ; flush ( ) ; if ( out != _NULL ) out . close ( ) ; out = _NULL ; closed = _BOOL ; }
39414	public void pause ( ) { try { protocolHandler . pause ( ) ; } catch ( Exception e ) { log . error ( sm . getString ( _CHAR coyoteConnector . protocolHandlerPauseFailed _CHAR ) , e ) ; } }
39474	public AssertionArtifact createAssertionArtifact ( String id , String destID , String targetUrl , String version ) throws SAMLException { return createAssertionArtifact ( id , destID , _NULL , _NULL , targetUrl , version ) ; }
39556	public void handleButton3Request ( RequestInvocationEvent event ) { MAPClientManagerViewBean vb = ( MAPClientManagerViewBean ) getViewBean ( MAPClientManagerViewBean . class ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
39570	public void handleButton2Request ( RequestInvocationEvent event ) { EntityResourceOfferingViewBeanBase vb = ( EntityResourceOfferingViewBeanBase ) getReturnToViewBean ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
39584	public void message ( String message , Throwable th ) { if ( messageEnabled ( ) ) { record ( message , th ) ; } }
39596	protected HttpURLConnection createConnection ( String uri , String method ) throws IOException { HttpURLConnection connection = createConnection ( uri ) ; connection . setRequestMethod ( method ) ; return configureRequest ( connection ) ; }
39601	public int period ( ) { return values . period ; }
39605	public static void forceClearCache ( ServletResponse resp ) { HttpServletResponse response = ( HttpServletResponse ) resp ; response . setHeader ( _CHAR Cache - Control _CHAR , _CHAR no - cache , no - store , must - revalidate _CHAR ) ; response . setHeader ( _CHAR Pragma _CHAR , _CHAR no - cache _CHAR ) ; response . setDateHeader ( _CHAR Expires _CHAR , _NUM ) ; }
39606	public void handleButtonLoginRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
39622	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton1Request ( event ) ; }
39639	public boolean visitFunction ( ExpressionOwner owner , Function func ) { return _BOOL ; }
39647	public void disableLogging ( ) { this . needsLogging = _BOOL ; }
39669	public String createAjpConnector ( String parent , String address , int port ) throws Exception { return createConnector ( parent , address , port , _BOOL , _BOOL ) ; }
39673	public void handleButton3Request ( RequestInvocationEvent event ) throws ModelControlException , AMConsoleException { FederationViewBean vb = ( FederationViewBean ) getViewBean ( FederationViewBean . class ) ; backTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
39715	public synchronized void clear ( ) { if ( mMap . isEmpty ( ) ) return ; for ( Pair < Integer , Subscription > pair : mMap . values ( ) ) { if ( ! pair . second . isUnsubscribed ( ) ) pair . second . unsubscribe ( ) ; } }
39721	public static int dp2px ( float dp ) { DisplayMetrics metrics = Resources . getSystem ( ) . getDisplayMetrics ( ) ; float px = dp * ( metrics . densityDpi / _NUM ) ; return Math . round ( px ) ; }
39730	public void unregister ( ) { router . removeRoute ( matcher ) ; }
39819	public synchronized static String formatTimeStamp ( final Timestamp date , String pattern ) { if ( pattern == _NULL || pattern . equals ( _CHAR _CHAR ) ) { pattern = JKFormatUtil . DEFAULT_TIMESTAMP_PATTERN ; } return JKFormatUtil . getDateFormatter ( pattern ) . format ( date ) ; }
39846	public void fatalError ( SAXParseException spe ) throws SAXParseException { PolicyManager . debug . error ( spe . getMessage ( ) + _CHAR \ nLine Number in XML file : _CHAR + spe . getLineNumber ( ) + _CHAR \ nColumn Number in XML file : _CHAR + spe . getColumnNumber ( ) ) ; }
39862	private void initialize ( ) { debug . message ( _CHAR inside AMConfiguration . initialize ( ) _CHAR ) ; jaasConfig . clear ( ) ; listenersMap . clear ( ) ; }
39863	public boolean delete ( Long attributeID ) { if ( attributeID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } return database . delete ( DATABASE_TABLE , KEY_EVENTATTRIBUTEID + _CHAR = _CHAR + attributeID , _NULL ) > _NUM ; }
39866	public void removeDisplayName ( ) { displayName = _NULL ; }
39965	@ DataProvider ( name = _CHAR validRules _CHAR ) public Object [ ] [ ] validData ( ) { return new Object [ ] [ ] { { _CHAR _NUM . _NUM . _NUM . _NUM / _NUM _CHAR } , { _CHAR _NUM .*. _NUM . _NUM + _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM .*.*.* _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM / _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM .*/ _NUM _CHAR } , { _CHAR *.*.* . * _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM / _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM + _NUM . _NUM . _NUM . _NUM _CHAR } } ; }
39980	public R visitString ( StringPropertyDefinition pd , String v , P p ) { return visitUnknown ( pd , v , p ) ; }
39989	public void init ( SecureRandom random ) throws IllegalArgumentException { }
40078	public void handleButton3Request ( RequestInvocationEvent event ) { forwardToAuthDomainView ( event ) ; }
40095	public void handleButton3Request ( RequestInvocationEvent event ) { forwardToCallingViewBean ( ) ; }
40133	public static Bitmap drawableToBitmap ( Drawable drawable ) { return drawable == _NULL ? _NULL : ( ( BitmapDrawable ) drawable ) . getBitmap ( ) ; }
40178	@ Override public synchronized void close ( ) throws IOException { if ( keyDeserializer != _NULL ) { keyDeserializer . close ( ) ; } if ( valDeserializer != _NULL ) { valDeserializer . close ( ) ; } in . close ( ) ; }
40245	public void startBundle ( Bundle bundle ) throws UpdateException { try { bundle . start ( ) ; } catch ( BundleException e ) { throw new UpdateException ( _CHAR Can not start bundle _CHAR + bundle . toString ( ) , e ) ; } }
40276	public static Object unifyReferences ( final Hashtable hash , Object object ) { final Object itemAtHash = hash . get ( object . hashCode ( ) ) ; if ( itemAtHash == _NULL ) { hash . put ( object . hashCode ( ) , object ) ; } else { object = itemAtHash ; } return object ; }
40308	public void addAttribue ( final String name , final String value ) { final JKTagAttributeWrapper attr = findAttribute ( name ) ; if ( attr == _NULL ) { logger . fine ( String . format ( _CHAR add attribute % s with value % s _CHAR , name , value ) ) ; this . attributesList . add ( new JKTagAttributeWrapper ( this . tag , name , value ) ) ; } }
40327	public R visitInteger ( IntegerPropertyDefinition pd , Integer v , P p ) { return visitUnknown ( pd , v , p ) ; }
40341	public JKTableRecord addRecord ( ) { final JKTableRecord record = createEmptyRecord ( ) ; addRecord ( record ) ; return record ; }
40343	public void handleButton3Request ( RequestInvocationEvent event ) { super . handleButton2Request ( event ) ; }
40362	public long popLong ( ) { BaseTypeWrapper wrapper = ( BaseTypeWrapper ) this . pop ( ) ; Long value = ( Long ) wrapper . getValue ( ) ; return value . longValue ( ) ; }
40394	@ Override public void init ( ) throws ServletException { registry = Registry . getRegistry ( _NULL , _NULL ) ; mBeanServer = Registry . getRegistry ( _NULL , _NULL ) . getMBeanServer ( ) ; }
40398	public void onPause ( ) { mHandler . removeMessages ( MSGID_TICK_EVENT ) ; stopTickEventThread ( ) ; super . onPause ( ) ; }
40405	public static Status generateStatus ( String code , String message ) { return generateStatus ( code , _NULL , message ) ; }
40414	public void handleButton3Request ( RequestInvocationEvent event ) { returnToAuthProperties ( _NULL ) ; }
40423	public Action mapToXACMLAction ( String nativeActionName , String serviceName ) throws XACMLException { return _NULL ; }
40428	@ Override public void destroy ( ) { }
40441	private Map < String , Object > convertToken ( Token token ) { if ( token == _NULL ) { return _NULL ; } return tokenAdapter . fromToken ( token ) . asMap ( ) ; }
40483	public void changePassword ( String entryDN , String attrName , String oldPassword , String newPassword ) throws UMSException { DataLayer . getInstance ( ) . changePassword ( getGuid ( ) , attrName , oldPassword , newPassword ) ; }
40548	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
40550	public static String buildView ( final String viewId ) throws IOException { return JKJsfUtil . buildView ( FacesContext . getCurrentInstance ( ) , viewId ) ; }
40565	public static String append ( final String value , final String ... appends ) { return appendArray ( value , appends ) ; }
40579	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR FSRegistrationReturnServlet Initializing ... _CHAR ) ; this . config = config ; metaManager = FSUtils . getIDFFMetaManager ( ) ; }
40596	public SIPHeader parse ( ) throws ParseException { dbg_enter ( _CHAR parse _CHAR ) ; try { headerName ( TokenTypes . AUTHORIZATION ) ; Authorization auth = new Authorization ( ) ; super . parse ( auth ) ; return auth ; } finally { dbg_leave ( _CHAR parse _CHAR ) ; } }
40685	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; try { msgFactory = MessageFactory . newInstance ( ) ; } catch ( SOAPException ex ) { FSUtils . debug . error ( _CHAR FSSSOAndFedService . init : create message factory failed . '' , ex ) ; throw new ServletException ( ex . getMessage ( ) ) ; } metaManager = FSUtils . getIDFFMetaManager ( ) ; }
40764	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
40810	public SIPHeader parse ( ) throws ParseException { Subject subject = new Subject ( ) ; if ( debug ) dbg_enter ( _CHAR SubjectParser . parse _CHAR ) ; try { headerName ( TokenTypes . SUBJECT ) ; String s = this . lexer . getRest ( ) ; subject . setSubject ( s . trim ( ) ) ; } finally { if ( debug ) dbg_leave ( _CHAR SubjectParser . parse _CHAR ) ; } return subject ; }
40859	public void handleButton3Request ( RequestInvocationEvent event ) { returnToMainPage ( ) ; }
40876	public static String normalizeDN ( String dn ) { return newDN ( dn ) . toString ( ) . toLowerCase ( ) ; }
40959	public void addUniqueAttribute ( String qName , String value , int flags ) throws SAXException { }
40962	@ Override public int read ( ) throws IOException { if ( eof ) { throw new IOException ( _CHAR Read after end of file _CHAR ) ; } if ( position == size ) { return doEndOfFile ( ) ; } position ++ ; return processByte ( ) ; }
41003	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { if ( item . getItemId ( ) == android . R . id . home ) { super . onBackPressed ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
41124	public void addIdentity ( Identity identity ) throws KeyManagementException { }
41129	public PdfCanvas stroke ( ) { document . checkIsoConformance ( currentGs , IsoKey . DRAWMODE_STROKE , resources ) ; contentStream . getOutputStream ( ) . writeBytes ( S ) ; return this ; }
41141	@ Fluent public Job priority ( Priority level ) { if ( level != _NULL ) this . priority = level ; return this ; }
41196	public void deleteFilteredRoles ( Set roleDNs ) throws AMException , SSOException { Iterator iter = roleDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String roleDN = ( String ) iter . next ( ) ; AMFilteredRole role = new AMFilteredRoleImpl ( token , roleDN ) ; role . delete ( ) ; } }
41239	public R visitBoolean ( BooleanPropertyDefinition pd , Boolean v , P p ) { return visitUnknown ( pd , v , p ) ; }
41244	public long incrementTime ( long deltaTime ) { return clock . addAndGet ( deltaTime ) ; }
41266	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
41301	public void write ( byte [ ] data ) { this . audioConsumer . consume ( data ) ; }
41352	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { SMProfileModel model = ( SMProfileModel ) getModel ( ) ; String serverName = ( String ) getPageSessionAttribute ( SERVER_NAME ) ; model . setProfileServerName ( serverName ) ; forwardTo ( ) ; }
41377	public void close ( ) throws IOException { randomAccessFile . close ( ) ; }
41457	public void removeProgressUpdateListener ( ProgressUpdateListener l ) { listeners . remove ( l ) ; }
41482	public static Object gatRandomItem ( final List items ) { if ( items == _NULL || items . size ( ) == _NUM ) { return _NULL ; } final int itemIndex = ( int ) ( Math . random ( ) * items . size ( ) ) ; return items . get ( itemIndex ) ; }
41511	public void makeImmutable ( ) { mutable = _BOOL ; }
41520	public void onDirectoryDelete ( final File directory ) { }
41541	public static Properties readPropertiesFile ( String fileName ) { InputStream in = getInputStream ( fileName ) ; if ( in != _NULL ) { return readPropertiesStream ( in ) ; } return new Properties ( ) ; }
41567	public void rejectedExecution ( Runnable r , ThreadPoolExecutor e ) { throw new RejectedExecutionException ( _CHAR Task _CHAR + r . toString ( ) + _CHAR rejected from _CHAR + e . toString ( ) ) ; }
41570	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
41603	@ Override public void initialize ( MessagePolicy requestPolicy , MessagePolicy responsePolicy , CallbackHandler handler , Map < String , Object > options ) throws AuthenticationException { JsonValue properties = json ( options ) ; authenticationIdAttribute = properties . get ( AUTHENTICATION_ID ) . required ( ) . asString ( ) ; }
41624	public synchronized void clear ( ) { cookies . clear ( ) ; }
41644	public static Drawable bitmapToDrawable ( Bitmap bitmap ) { return bitmap == _NULL ? _NULL : new BitmapDrawable ( bitmap ) ; }
41658	protected boolean StepPattern ( boolean isLeadingSlashPermitted ) throws javax . xml . transform . TransformerException { return AbbreviatedNodeTestStep ( isLeadingSlashPermitted ) ; }
41680	public void delete ( AbstractTag mp3tag ) throws FileNotFoundException , IOException { RandomAccessFile raf = new RandomAccessFile ( this . file , _CHAR rw _CHAR ) ; mp3tag . delete ( raf ) ; raf . close ( ) ; if ( mp3tag instanceof ID3v1Tag ) { id3v1tag = _NULL ; } if ( mp3tag instanceof AbstractID3v2Tag ) { id3v2tag = _NULL ; } }
41704	public boolean isError ( ) { return errorState . get ( ) > _NUM ; }
41790	public boolean visitUnionPath ( ExpressionOwner owner , UnionPathIterator path ) { return _BOOL ; }
41812	public SIPHeader parse ( ) throws ParseException { if ( debug ) dbg_enter ( _CHAR parse _CHAR ) ; try { headerName ( TokenTypes . WWW_AUTHENTICATE ) ; WWWAuthenticate wwwAuthenticate = new WWWAuthenticate ( ) ; super . parse ( wwwAuthenticate ) ; return wwwAuthenticate ; } finally { if ( debug ) dbg_leave ( _CHAR parse _CHAR ) ; } }
41820	public void onResume ( ) { super . onResume ( ) ; readTickEvent ( ) ; }
41845	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR FSSingleLogoutServlet Initializing ... _CHAR ) ; }
41849	@ Override public boolean onCreateOptionsMenu ( Menu menu ) { menu . add ( Menu . NONE , MENU_HELP , Menu . NONE , getString ( R . string . help ) ) . setIcon ( android . R . drawable . ic_menu_help ) . setAlphabeticShortcut ( _CHAR ) ; return super . onCreateOptionsMenu ( menu ) ; }
41936	public void clearSelection ( ) { getSelectionModel ( ) . clearSelection ( ) ; }
41972	public R visitDN ( DNPropertyDefinition pd , DN v , P p ) { return visitUnknown ( pd , v , p ) ; }
41980	@ Override public void close ( ) throws NamingException { }
41982	public void removeChangingListener ( OnWheelChangedListener listener ) { changingListeners . remove ( listener ) ; }
42015	public void clear ( ) { methods . clear ( ) ; argLists . clear ( ) ; }
42127	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
42166	public void update ( Document entity ) { ValidationEngine . validateAndThrow ( entity ) ; docRepo . update ( entity ) ; notifyAllPlugins ( NotifierPlugin . MutateType . UPDATE , entity ) ; }
42226	public Collection engineGenerateCertificates ( InputStream inStream ) throws CertificateException { throw new UnsupportedOperationException ( _CHAR not yet . '' ) ; }
42239	private Target < GlideDrawable > loadNormal ( Context ctx , ImageLoader img ) { return Glide . with ( ctx ) . load ( img . getUrl ( ) ) . placeholder ( img . getPlaceHolder ( ) ) . diskCacheStrategy ( img . getDiskCacheStrategy ( ) ) . into ( img . getImgView ( ) ) ; }
42271	public final boolean equals ( Object obj ) { return super . equals ( obj ) ; }
42274	public void handleButton2Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToPolicyViewBean ( ) ; }
42287	public void stopThread ( ) { running = _BOOL ; }
42291	public static void clearViewStates ( ) { JKJsfUtil . getViewMap ( ) . clear ( ) ; }
42298	public Resource mapToXACMLResoure ( String resourceName , String serviceName ) throws XACMLException { return _NULL ; }
42301	public void handleButton2Request ( RequestInvocationEvent event ) { backTrail ( ) ; ServerSiteViewBean vb = ( ServerSiteViewBean ) getViewBean ( ServerSiteViewBean . class ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
42330	public boolean isOperational ( File file ) { this . addFile ( file ) ; this . initSnmpClasses ( ) ; return this . isOperational ; }
42358	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
42390	@ Override public String toString ( ) { return name + _CHAR : _CHAR + cipherSuiteCode [ _NUM ] + _CHAR _CHAR + cipherSuiteCode [ _NUM ] ; }
42427	public void readBoolean ( ) throws IOException { if ( tag != ASN1Constants . TAG_BOOLEAN ) { throw expected ( _CHAR boolean _CHAR ) ; } if ( length != _NUM ) { throw new ASN1Exception ( _CHAR Wrong length for ASN . 1 boolean at [ '' + tagOffset + '' ] '' ) ; } readContent ( ) ; }
42448	public static int println ( int priority , String tag , String msg ) { return Log . println ( priority , tag , msg ) ; }
42476	public synchronized void terminate ( ) { shouldTerminate = _BOOL ; needReturn = _BOOL ; this . notify ( ) ; }
42488	private void writeDataToFile ( File file ) throws FileNotFoundException , IOException { FileOutputStream fos = new FileOutputStream ( file ) ; try { fos . write ( CONTENT_AS_BYTES ) ; } finally { fos . close ( ) ; } }
42514	public Boolean isThreadDumpEnabled ( ) { return threadDumpEnable ; }
42547	@ Override protected void doPost ( final HttpServletRequest request , final HttpServletResponse response ) throws ServletException , IOException { request . setCharacterEncoding ( _CHAR UTF - _NUM _CHAR ) ; response . setCharacterEncoding ( _CHAR UTF - _NUM _CHAR ) ; getResponse ( request , response , _BOOL ) ; }
42566	public boolean delete ( Long eventID ) { if ( eventID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } return database . delete ( DATABASE_TABLE , KEY_EVENTID + _CHAR = _CHAR + eventID , _NULL ) > _NUM ; }
42602	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
42617	public synchronized void initialize ( ) { if ( cacheDir == _NULL ) { throw new RuntimeException ( _CHAR No cache directory has been specified . '' ) ; } if ( gson == _NULL ) { gson = createGson ( ) ; } Storo . initialize ( this ) ; }
42631	private StringBuilder encodeProduct ( StringBuilder tokens ) { ListIterator it = productTokens . listIterator ( ) ; while ( it . hasNext ( ) ) { tokens . append ( ( String ) it . next ( ) ) ; if ( it . hasNext ( ) ) tokens . append ( _CHAR ) ; else break ; } return tokens ; }
42686	public void destroySession ( Session session ) throws SessionException { try { SessionOperations operation = sessionOperationStrategy . getOperation ( this . getID ( ) ) ; operation . destroy ( this , session ) ; } catch ( Exception e ) { throw new SessionException ( e ) ; } finally { sessionCache . removeSID ( session . getID ( ) ) ; } }
42720	public void start ( ) throws IOException { thread . start ( ) ; }
42730	public Observable < Void > initializePersistenceObservable ( ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; initializePersistence ( resultHandler . toHandler ( ) ) ; return resultHandler ; }
42731	protected void onConnected ( ) { }
42782	protected HttpURLConnection createConnection ( String uri ) throws IOException { URL url = new URL ( createUri ( uri ) ) ; return ( HttpURLConnection ) url . openConnection ( ) ; }
42796	public void makeImmutable ( ) { if ( ! mutable ) { return ; } mutable = _BOOL ; if ( ( content != _NULL ) && ( ! content . isEmpty ( ) ) ) { content = Collections . unmodifiableList ( content ) ; } }
42822	public void handleButton3Request ( RequestInvocationEvent event ) { super . handleButton2Request ( event ) ; }
42841	public void init ( String componentName ) throws DataStoreProviderException { }
42895	public void handleButton2Request ( RequestInvocationEvent event ) { RealmResourceOfferingViewBeanBase vb = ( RealmResourceOfferingViewBeanBase ) getReturnToViewBean ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
42944	public void write ( byte [ ] data , int offset , int count ) { byte [ ] tmp = new byte [ count ] ; System . arraycopy ( data , offset , tmp , _NUM , count ) ; this . audioConsumer . consume ( tmp ) ; }
42949	protected void defaultExceptionHandling ( Object exchange , Throwable ex ) throws Throwable { if ( ex instanceof IPublicException ) { defaultPublicExceptionHandling ( exchange , ( IPublicException ) ex ) ; } else { defaultPrivateExceptionHandling ( exchange , ex ) ; } }
42959	public void addReply ( String topicId , String body , String access_token , Callback < ResponseBody > callback ) { topicApi = getRetrofitForSimpleJson ( ) . create ( TopicApi . class ) ; topicApi . addReply ( topicId , body , access_token ) . enqueue ( callback ) ; }
42971	public static void verify ( final ClassReader cr , final boolean dump , final PrintWriter pw ) { verify ( cr , _NULL , dump , pw ) ; }
42981	public boolean addElement ( Object obj ) { return _BOOL ; }
42996	public void flush ( ) { }
43002	public ProductService initializePersistence ( Handler < AsyncResult < Void >> resultHandler ) { delegate . initializePersistence ( resultHandler ) ; return this ; }
43029	public void handleButton2Request ( RequestInvocationEvent event ) { FSSAMLTargetURLsEditViewBean vb = ( FSSAMLTargetURLsEditViewBean ) getViewBean ( FSSAMLTargetURLsEditViewBean . class ) ; backTrail ( ) ; unlockPageTrailForSwapping ( ) ; passPgSessionMap ( vb ) ; populateValues = _BOOL ; vb . forwardTo ( getRequestContext ( ) ) ; }
43031	public void addListener ( Subject adminSubject , EntitlementListener listener ) throws EntitlementException { if ( registry != _NULL ) { registry . addListener ( adminSubject , listener ) ; } }
43060	@ Override public void destroy ( ) { String onStr = _CHAR JMImplementation : type = MBeanServerDelegate _CHAR ; ObjectName objectName ; try { objectName = new ObjectName ( onStr ) ; mBeanServer . removeNotificationListener ( objectName , this , _NULL , _NULL ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
43096	public static void checkAllowedPrivilige ( final JKPrivilige privilige ) { logger . debug ( _CHAR checkAllowedPrivilige ( ) : _CHAR , privilige ) ; final JKAuthorizer auth = getAuthorizer ( ) ; auth . checkAllowed ( privilige ) ; }
43108	@ Override public void close ( ) throws IOException { for ( RandomAccessFile file : openedRandomAccessFileList . values ( ) ) { file . close ( ) ; } }
43158	public void verifyAA ( ) { int challengeLength = _NUM ; byte [ ] challenge = new byte [ challengeLength ] ; random . nextBytes ( challenge ) ; ActiveAuthenticationResult aaResult = executeAA ( challenge ) ; verifyAA ( aaResult ) ; }
43171	public PdfCanvas endVariableText ( ) { return endMarkedContent ( ) ; }
43225	@ Override public int hashCode ( ) { return this . value ; }
43243	private boolean handleOverwrite ( final File sourceFile , final File destFile ) throws IOException { return FileUtils . delete ( destFile ) && FileUtils . copyFromSourceToDestFile ( sourceFile , destFile , _BOOL , configuration ) ; }
43245	@ SuppressWarnings ( _CHAR unused _CHAR ) public void handleButton2Request ( RequestInvocationEvent event ) { backToProfileViewBean ( ) ; }
43266	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { AuthPropertiesViewBean vb = ( AuthPropertiesViewBean ) getViewBean ( AuthPropertiesViewBean . class ) ; backTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
43269	public static int dpToPx ( float dp , Resources resources ) { float px = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dp , resources . getDisplayMetrics ( ) ) ; return ( int ) px ; }
43321	public int popInt ( ) { BaseTypeWrapper wrapper = ( BaseTypeWrapper ) this . pop ( ) ; Integer value = ( Integer ) wrapper . getValue ( ) ; return value . intValue ( ) ; }
43334	public static java . util . Date parseDate ( String strDate , String pattern ) { try { SimpleDateFormat parser = new SimpleDateFormat ( pattern , Locale . US ) ; return parser . parse ( strDate ) ; } catch ( ParseException e ) { throw new JKException ( e ) ; } }
43415	public Crop withMaxSize ( int width , int height ) { cropIntent . putExtra ( Extra . MAX_X , width ) ; cropIntent . putExtra ( Extra . MAX_Y , height ) ; return this ; }
43427	public Compiler shiftRight ( String fileDir ) { return shiftRight ( new File ( fileDir ) ) ; }
43450	public void close ( ) throws IOException { guard . close ( ) ; synchronized ( this ) { if ( channel != _NULL && channel . isOpen ( ) ) { channel . close ( ) ; channel = _NULL ; } IoUtils . close ( fd ) ; } }
43500	public StatementType statementType ( ) { return statementType ; }
43506	private LdapException interrupted ( InterruptedException e ) { return newLdapException ( ResultCode . CLIENT_SIDE_USER_CANCELLED , e ) ; }
43553	public static Date parseDate ( String dateStr ) { try { return mSimpleDateFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( _CHAR date formatDateTime error _CHAR ) ; } }
43588	private void flushBuffer ( ) throws IOException { if ( count > _NUM ) { out . write ( buf , _NUM , count ) ; count = _NUM ; } }
43609	public synchronized void start ( ) throws Exception { if ( isRunning ) { return ; } sslContext = new SSLContextBuilder ( ) . getSSLContext ( ) ; listener = new LDAPListener ( findFreeSocketAddress ( ) , getInstance ( ) , Options . defaultOptions ( ) . set ( CONNECT_MAX_BACKLOG , _NUM ) ) ; isRunning = _BOOL ; }
43610	public void error ( String msg ) { System . out . println ( _CHAR DOM ERROR ! class : _CHAR + this . getClass ( ) . getName ( ) ) ; throw new RuntimeException ( XMLMessages . createXMLMessage ( msg , _NULL ) ) ; }
43652	public void println ( ) { newline ( ) ; }
43659	public PdfCanvas beginVariableText ( ) { return beginMarkedContent ( PdfName . Tx ) ; }
43728	public boolean equals ( Object other ) { if ( ! this . getClass ( ) . equals ( other . getClass ( ) ) ) return _BOOL ; SIPRequest that = ( SIPRequest ) other ; return requestLine . equals ( that . requestLine ) && super . equals ( other ) ; }
43751	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
43757	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
43765	public int size ( ) { return _NUM ; }
43771	protected void expand ( ) { if ( ! isExpanded && ! isLeaf ( ) ) { boolean visible = isVisible ( ) ; isExpanded = _BOOL ; childCount = treeModel . getChildCount ( getUserObject ( ) ) ; if ( visible ) { didExpand ( ) ; } if ( visible && treeSelectionModel != _NULL ) { treeSelectionModel . resetRowSelection ( ) ; } } }
43802	public static int computeIncreaseStation ( int station ) { int result = station + STEP ; if ( result > HIGHEST_STATION ) { result = LOWEST_STATION ; } return result ; }
43811	public void write ( String s ) throws IOException { int n = s . length ( ) ; for ( int i = _NUM ; i < n ; i ++ ) { m_os . write ( s . charAt ( i ) ) ; } }
43849	public boolean popBoolean ( ) { BaseTypeWrapper wrapper = ( BaseTypeWrapper ) this . pop ( ) ; Boolean value = ( Boolean ) wrapper . getValue ( ) ; return value . booleanValue ( ) ; }
43868	public void zoom_in ( Point2D p_position ) { zoom ( ZOOM_FACTOR , p_position ) ; }
43960	private void loadNormal ( Context ctx , ImageLoader img ) { Glide . with ( ctx ) . load ( img . getUrl ( ) ) . placeholder ( img . getPlaceHolder ( ) ) . into ( img . getImgView ( ) ) ; }
43978	@ Override public Value generate ( ) throws SyntaxException { StringBuilder sb = new StringBuilder ( ) ; buildStatements ( sb , ast , _NUM ) ; StringConstantValue s = new StringConstantValue ( sb . toString ( ) . trim ( ) ) ; s . setType ( ( SClassDef ) processor . getTypeWithName ( _CHAR java . lang . String _CHAR , LineCol . SYNTHETIC ) ) ; return s ; }
43987	public static StringBuilder removeLast ( final StringBuilder builder , final String string ) { final int lastIndexOf = builder . lastIndexOf ( string ) ; if ( lastIndexOf == - _NUM ) { return builder ; } return new StringBuilder ( builder . substring ( _NUM , lastIndexOf ) ) ; }
44048	void delete ( ) { shutdown ( ) ; removeECLDomainCfg ( ) ; }
44101	protected TagElement makeTag ( Element elem , boolean fictional ) { return new TagElement ( elem , fictional ) ; }
44203	public final int hashCode ( ) { return super . hashCode ( ) ; }
44249	public void removeEntryReadListener ( EntryReadListener listener ) { listeners . remove ( listener ) ; }
44260	public void error ( String msg , Object [ ] args ) { System . out . println ( _CHAR DOM ERROR ! class : _CHAR + this . getClass ( ) . getName ( ) ) ; throw new RuntimeException ( XMLMessages . createXMLMessage ( msg , args ) ) ; }
44265	public void delete ( String database , String table , Identifier id ) { verifyTable ( database , table ) ; docRepo . delete ( id ) ; notifyAllPlugins ( NotifierPlugin . MutateType . DELETE , _NULL ) ; }
44290	@ Override public void post ( Runnable runnable ) { if ( runnable == _NULL ) return ; TaskProxy . sHandler . post ( runnable ) ; }
44304	public void onNetDisConnect ( ) { }
44307	public Observable < Void > initializePersistenceObservable ( ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; initializePersistence ( resultHandler . toHandler ( ) ) ; return resultHandler ; }
44388	public void init ( String hostedProviderId ) throws FSAccountMgmtException { this . hostedProviderId = hostedProviderId ; try { datastoreProvider = DataStoreProviderManager . getInstance ( ) . getDataStoreProvider ( IFSConstants . IDFF ) ; } catch ( Exception de ) { FSUtils . debug . error ( _CHAR DefaultFSUserProvider . init : could n _CHAR_CHAR_CHAR_CHAR , de ) ; throw new FSAccountMgmtException ( de . getMessage ( ) ) ; } }
44397	public void flush ( ) throws IOException { for ( Entry < String , Aggregator > entry : getFlushMap ( ) . entrySet ( ) ) { if ( store != _NULL ) { store . persist ( taskId , entry . getKey ( ) , entry . getValue ( ) ) ; } entry . getValue ( ) . reset ( ) ; } }
44414	public void shutdown ( ) { DirectoryServer . deregisterMonitorProvider ( this ) ; assuredTimeoutTimer . cancel ( ) ; stopAllServers ( _BOOL ) ; statusAnalyzer . shutdown ( ) ; }
44424	public void addRecord ( final JKTableRecord record ) { geteRecords ( ) . add ( record ) ; fireTableRowsInserted ( getRowCount ( ) - _NUM , getRowCount ( ) - _NUM ) ; }
44492	private static void mkdir ( String dir ) throws IOException { FileUtils . createDirectory ( dir ) ; }
44535	@ Override public void flush ( ) throws IOException { super . flush ( ) ; this . branch . flush ( ) ; }
44643	public static JKPrivilige createPrivilige ( String name , JKPrivilige parent , int number ) { logger . debug ( _CHAR createPriviligeObject ( ) : Id : _CHAR , _CHAR . name _CHAR , name , _CHAR , Parent : [ _CHAR , parent , _CHAR ] , _CHAR , number ) ; JKPrivilige p = new JKPrivilige ( name , parent , number ) ; p . setDesc ( p . getFullName ( ) ) ; return p ; }
44654	public void onStart ( ) { writer . writeHeader ( _CHAR encoder = Lavc56 . 20 . _NUM libopus _CHAR ) ; }
44684	private void initFunctionTable ( ) { m_funcTable = new FunctionTable ( ) ; }
44703	public static JKPrivilige createPrivilige ( String name , JKPrivilige parent ) { return createPrivilige ( name , parent , _NUM ) ; }
44755	@ Override public boolean onCreateOptionsMenu ( Menu menu ) { menu . add ( Menu . NONE , MENU_HELP , Menu . NONE , getString ( R . string . help ) ) . setIcon ( android . R . drawable . ic_menu_help ) . setAlphabeticShortcut ( _CHAR ) ; return super . onCreateOptionsMenu ( menu ) ; }
44775	public void registerIdentityProviderListener ( IdentityProviderListener listener ) { identityProviderListeners . put ( listener . getListenerName ( ) , listener ) ; }
44793	public void removeIdentity ( Identity identity ) throws KeyManagementException { }
44840	public void flush ( ) throws IOException { out . flush ( ) ; }
44882	void shutdown ( ) { if ( shutdown . compareAndSet ( _BOOL , _BOOL ) ) { log . close ( ) ; DirectoryServer . deregisterMonitorProvider ( dbMonitor ) ; } }
44891	public void handleButton3Request ( RequestInvocationEvent event ) { forwardToServicesViewBean ( ) ; }
44902	@ Override public void modify ( Privilege privilege ) throws EntitlementException { modify ( privilege . getName ( ) , privilege ) ; }
44936	public void stop ( BundleContext bundleContext ) throws Exception { shellCommandsTracker . close ( ) ; shellCommandsTracker = _NULL ; bc = _NULL ; }
44956	public void initialize ( KeyProvider keyProvider ) { if ( keyProvider == _NULL ) { FSUtils . debug . error ( _CHAR FSSignatureProvider . initialize : Key Provider _CHAR + _CHAR is _NULL _CHAR ) ; } else { keystore = keyProvider ; } }
44965	public final boolean checkTag ( int identifier ) { return _BOOL ; }
45016	public static void main ( String [ ] args ) throws TestFailed , ClassNotFoundException { testFailLoadAndGc ( ) ; }
45043	public Boolean put ( Object key , Object value ) { try { hash . updateObject ( key , value ) ; notifyObservers ( ) ; return _BOOL ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _BOOL ; } }
45065	public static String removeJSessionId ( String str ) { if ( ! StringUtils . isEmpty ( str ) && StringUtils . contains ( str . toLowerCase ( ) , _CHAR ; jsessionid _CHAR ) ) { return str . substring ( _NUM , StringUtils . indexOf ( str , _CHAR ; jsessionid _CHAR ) ) ; } return str ; }
45067	public synchronized void clear ( ) { this . credMap . clear ( ) ; }
45072	public boolean isOperational ( ) { return this . isOperational ; }
45092	@ Override public void disconnect ( ) { boolean connect = isConnected ( ) ; closeSocket ( ) ; if ( connect ) { if ( log . isDebugEnabled ( ) ) log . debug ( sm . getString ( _CHAR bioSender . disconnect _CHAR , getAddress ( ) . getHostAddress ( ) , Integer . valueOf ( getPort ( ) ) , Long . valueOf ( _NUM ) ) ) ; } }
45134	private void readObject ( ObjectInputStream stream ) throws IOException , ClassNotFoundException { stream . defaultReadObject ( ) ; if ( gdate == _NULL ) { gdate = ( BaseCalendar . Date ) gcal . newCalendarDate ( getZone ( ) ) ; cachedFixedDate = Long . MIN_VALUE ; } setGregorianChange ( gregorianCutover ) ; }
45150	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; repopulateMechID ( ) ; forwardTo ( ) ; }
45161	public static final String toJson ( final Object object , final boolean includeNulls ) { return includeNulls ? GSON . toJson ( object ) : GSON_NO_NULLS . toJson ( object ) ; }
45220	public static String postRequest ( URL url , String postData , String encoding , String contentType ) { return postRequest ( url , postData , encoding , contentType , DEFAULT_READ_TIMEOUT , DEFAULT_SOCKET_TIMEOUT ) ; }
45238	private boolean dismissNoAntennaDialog ( ) { NoAntennaDialog newFragment = ( NoAntennaDialog ) mFragmentManager . findFragmentByTag ( TAG_NO_ANTENNA ) ; if ( _NULL != newFragment ) { newFragment . dismissAllowingStateLoss ( ) ; return _BOOL ; } return _BOOL ; }
45295	public void handleButton3Request ( RequestInvocationEvent event ) { backTrail ( ) ; SCConfigSystemViewBean vb = ( SCConfigSystemViewBean ) getViewBean ( SCConfigSystemViewBean . class ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
45329	public static Builder newBuilder ( boolean satisfied ) { return new Builder ( satisfied ) ; }
45379	public Boolean isConfigExportSharePasswordEnabled ( ) { return configExportSharePassword ; }
45404	public static void saveApplicationType ( Subject adminSubject , ApplicationType appType ) throws EntitlementException { EntitlementConfiguration ec = getEntitlementConfiguration ( adminSubject , _CHAR / _CHAR ) ; ec . storeApplicationType ( appType ) ; }
45420	public void init ( boolean forEncryption , CipherParameters params ) throws IllegalArgumentException { this . forEncryption = forEncryption ; reset ( ) ; cipher . init ( forEncryption , params ) ; }
45429	private void maximize ( ) { Frame frame = getFrame ( ) ; if ( frame != _NULL ) { frame . setExtendedState ( state | Frame . MAXIMIZED_BOTH ) ; } }
45431	private static String asString ( ByteBuffer buffer ) { final ByteBuffer copy = buffer . duplicate ( ) ; final byte [ ] bytes = new byte [ Math . min ( copy . remaining ( ) , _NUM ) ] ; copy . get ( bytes ) ; return new String ( bytes , StandardCharsets . UTF_8 ) ; }
45473	public void rejectDrop ( ) { getDropTargetContext ( ) . rejectDrop ( ) ; }
45479	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
45486	public RequirementsBuilder addProperty ( String name , String type , String description ) { Reject . ifNull ( name , description ) ; addProperty ( name , type , description , _NULL ) ; return this ; }
45488	public static boolean isSupported ( ) { return new File ( CONTROL_PATH ) . exists ( ) ; }
45504	private void addChildView ( View view , int newWidth ) { mRow . addView ( view ) ; resizeRow ( newWidth , view ) ; }
45518	public void handleButton2Request ( RequestInvocationEvent event ) { removePageSessionAttribute ( PROPERTY_ATTRIBUTE ) ; populateValues = _BOOL ; tablePopulated = _BOOL ; forwardTo ( ) ; }
45571	public static void main ( final String [ ] args ) { System . err . println ( JKPasswordUtil . generateMixPassword ( _NUM ) ) ; }
45598	public static String generatePassword ( ) { return RandomStringUtils . randomAlphanumeric ( DEF_COUNT ) ; }
45657	public static void initialize ( Context context ) { Contacts . context = context . getApplicationContext ( ) ; }
45727	public void handleButton2Request ( RequestInvocationEvent event ) { removePageSessionAttribute ( PROPERTY_ATTRIBUTE ) ; populateValues = _BOOL ; forwardTo ( ) ; }
45765	@ Deactivate protected void deactivate ( ComponentContext context ) { mappings = new ArrayList < > ( ) ; }
45787	@ Descriptor ( _CHAR Display help messages _CHAR ) public String help ( ) { return _CHAR mockservice \ t Start new service _CHAR ; }
45844	public void onFileCreate ( final File file ) { }
45849	public static void main ( final String [ ] args ) throws FileNotFoundException , IOException { }
45857	public void autoroute_clear ( ) { for ( ExpandRoomFreespaceComplete curr_room : complete_expansion_rooms ) curr_room . remove_from_tree ( art_search_tree ) ; complete_expansion_rooms . clear ( ) ; incomplete_expansion_rooms . clear ( ) ; expansion_room_instance_count . clear ( ) ; autoroute_clear_items ( ) ; }
45897	public void deleteStaticGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMStaticGroup group = new AMStaticGroupImpl ( super . token , groupDN ) ; group . delete ( ) ; } }
45902	public void refreshInstance ( String jsonData ) { if ( jsonData == _NULL ) { return ; } mRefreshStartTime = System . currentTimeMillis ( ) ; if ( mLastRefreshData != _NULL ) { mLastRefreshData . isDirty = _BOOL ; } mLastRefreshData = new WXRefreshData ( jsonData , _BOOL ) ; WXSDKManager . getInstance ( ) . refreshInstance ( mInstanceId , mLastRefreshData ) ; }
45922	public static AlertDialog create ( Context context , int resId ) { return create ( context , context . getResources ( ) . getString ( resId ) ) ; }
45967	private void VisitLineNumber ( MethodVisitor methodVisitor , LineCol lineCol , Label label ) { if ( lineCol == _NULL || lineCol . line <= _NUM ) return ; methodVisitor . visitLineNumber ( lineCol . line , label ) ; }
45994	private void tuneToStation ( final int station ) { refreshImageButton ( _BOOL ) ; refreshActionMenuItem ( _BOOL ) ; refreshPopupMenuItem ( _BOOL ) ; refreshActionMenuPower ( _BOOL ) ; mService . tuneStationAsync ( FmRadioUtils . computeFrequency ( station ) ) ; if ( ! mIsPlaying ) { startAnimation ( ) ; } }
46007	public static void printBlock ( Object ... params ) { line ( ) ; print ( params ) ; line ( ) ; }
46034	public void encode ( OutputStream stream ) throws KeyException , IOException { }
46036	private void close ( ) { Window window = getWindow ( ) ; if ( window != _NULL ) { window . dispatchEvent ( new WindowEvent ( window , WindowEvent . WINDOW_CLOSING ) ) ; } }
46092	@ Override public void flush ( ) throws IOException { flushBuffer ( ) ; if ( out != _NULL ) { out . flush ( ) ; } }
46094	@ Override public void flush ( ) { writerLock . readLock ( ) . lock ( ) ; try { if ( writer == _NULL ) return ; writer . flush ( ) ; } catch ( Exception e ) { reportError ( _NULL , e , ErrorManager . FLUSH_FAILURE ) ; } finally { writerLock . readLock ( ) . unlock ( ) ; } }
46191	@ Override protected void onPause ( ) { super . onPause ( ) ; if ( mCameraSourcePreview != _NULL ) { mCameraSourcePreview . stop ( ) ; } }
46219	private void initSkinLoader ( ) { SkinManager . getInstance ( ) . init ( mContext ) ; SkinManager . getInstance ( ) . load ( ) ; }
46241	@ Activate public void activate ( ComponentContext context ) { bundleContext = context . getBundleContext ( ) ; }
46281	@ Override public void write ( int idx ) throws IOException { out . write ( idx ) ; }
46325	public void markStale ( ) { stale = _BOOL ; }
46346	public void resume ( ) { try { protocolHandler . resume ( ) ; } catch ( Exception e ) { log . error ( sm . getString ( _CHAR coyoteConnector . protocolHandlerResumeFailed _CHAR ) , e ) ; } }
46378	private void close ( ) { IOUtils . closeIfNotNull ( debugWriter ) ; this . debugWriter = _NULL ; this . currentFile = _NULL ; }
46404	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR Entered FSTerminationRequestServlet Init _CHAR ) ; metaManager = FSUtils . getIDFFMetaManager ( ) ; }
46466	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { forwardToAuthConfigViewBean ( ) ; }
46529	public boolean addFaultyMember ( FaultyMember mbr ) { if ( this . faultyMembers == _NULL ) this . faultyMembers = new ArrayList < > ( ) ; if ( ! faultyMembers . contains ( mbr ) ) return faultyMembers . add ( mbr ) ; else return _BOOL ; }
46530	public boolean visitFunction ( ExpressionOwner owner , Function func ) { if ( ( func instanceof FuncPosition ) || ( func instanceof FuncLast ) ) m_hasPositionalPred = _BOOL ; return _BOOL ; }
46559	protected void decrement ( ) { indentation -- ; }
46568	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
46731	public boolean equals ( Object other ) { if ( other == _NULL ) return _BOOL ; if ( ! this . getClass ( ) . equals ( other . getClass ( ) ) ) return _BOOL ; SDPFieldList that = ( SDPFieldList ) other ; if ( sdpFields == _NULL ) return that . sdpFields == _NULL ; return this . sdpFields . equals ( that . sdpFields ) ; }
46733	public void showSaveRecordingDialog ( ) { String sdcard = FmRadioService . getRecordingSdcard ( ) ; String defaultName = mService . getRecordingName ( ) ; String recordingName = mService . getModifiedRecordingName ( ) ; FmRecordDialogFragment newFragment = new FmRecordDialogFragment ( sdcard , defaultName , recordingName ) ; newFragment . show ( mFragmentManager , TAG_SAVE_RECORDINGD ) ; mFragmentManager . executePendingTransactions ( ) ; }
46734	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
46739	public void deleteSubConfigurations ( Set names ) throws AMConsoleException { subConfigMeta . deleteSubConfigurations ( names ) ; }
46804	@ Override public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
46893	public static boolean mayUseCertificateManager ( ) { return _BOOL ; }
46932	public void registerCallbackHandler ( SMSObjectListener changeListener ) throws SMSException { LDAPEventManager . addObjectChangeListener ( changeListener ) ; }
46966	@ Override public void flush ( ) throws IOException { out . flush ( ) ; }
47006	private void updateSchema ( ) throws OpenDsException { if ( isServerRunning ( ) ) { updateSchemaOnline ( ) ; } else { updateSchemaOffline ( ) ; } }
47017	private String separeMetaTagsContent ( String content ) { String result = Utils . pregMatch ( content , Constants . METATAG_CONTENT_PATTERN , _NUM ) ; return htmlDecode ( result ) ; }
47035	public static void clean ( String suffix ) { }
47096	public Tasker addTask ( Task task ) { tasks . add ( task ) ; lastAddedTask = task ; return this ; }
47146	public int hashCode ( ) { return id . hashCode ( ) ; }
47156	void clearCachedDecisionsForService ( String serviceName ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ResourceResultCache . '' + _CHAR clearCachedDecisionsForService ( ) : _CHAR + _CHAR serviceName = _CHAR + serviceName ) ; } synchronized ( resultCache ) { resultCache . remove ( serviceName ) ; } }
47208	public void deleteFilteredRoles ( Set roleDNs ) throws AMException , SSOException { Iterator iter = roleDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String roleDN = ( String ) iter . next ( ) ; AMFilteredRole role = new AMFilteredRoleImpl ( token , roleDN ) ; role . delete ( ) ; } }
47233	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
47304	public void onNetConnected ( NetUtils . NetType type ) { }
47331	public void addClickingListener ( OnWheelClickedListener listener ) { clickingListeners . add ( listener ) ; }
47340	public void zoom_out ( Point2D p_position ) { double zoom_factor = _NUM / ZOOM_FACTOR ; zoom ( zoom_factor , p_position ) ; }
47343	public void removeUser ( ) { this . authority . removeUserInfo ( ) ; }
47424	public void configure ( ) throws SMSException , SSOException , IOException , PolicyException { modifyClientDataService ( ) ; createRealmAndPolicies ( ) ; setRealmAttributes ( ) ; }
47426	public void shutdown ( ) { initiateShutdown ( ) ; synchronized ( shutdownLock ) { shutdownLock . notifyAll ( ) ; } if ( logger . isTraceEnabled ( ) ) { logger . trace ( getMessage ( _CHAR Shutting down monitoring publisher . '' ) ) ; } }
47428	protected void commit ( ) throws IOException { response . setCommitted ( _BOOL ) ; if ( pos > _NUM ) { socketWrapper . write ( isBlocking ( ) , headerBuffer , _NUM , pos ) ; } }
47430	@ Override public boolean onCreateOptionsMenu ( Menu menu ) { menu . add ( Menu . NONE , MENU_HELP , Menu . NONE , getString ( R . string . help ) ) . setIcon ( android . R . drawable . ic_menu_help ) . setAlphabeticShortcut ( _CHAR ) ; return super . onCreateOptionsMenu ( menu ) ; }
47442	public void handleButton2Request ( RequestInvocationEvent event ) { backTrail ( ) ; ServerConfigXMLViewBean vb = ( ServerConfigXMLViewBean ) getViewBean ( ServerConfigXMLViewBean . class ) ; removePageSessionAttribute ( PG_ATTR_SERVER_GROUP_TYPE ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
47444	public void handleButton2Request ( RequestInvocationEvent event ) { FederationViewBean vb = ( FederationViewBean ) getViewBean ( FederationViewBean . class ) ; backTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
47446	public void flip ( int i ) { bits [ i / _NUM ] ^= _NUM << ( i & _NUM ) ; }
47450	public void logException ( Throwable ex ) { logger . error ( _CHAR Error _CHAR , ex ) ; }
47584	public String jmxSslPassword ( ) { return values . jmxSslPassword ; }
47595	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
47614	public String jmxHost ( ) { return values . jmxHost ; }
47626	public static int px2sp ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
47638	public < R > Kue on ( String eventType , Handler < Message < R >> handler ) { vertx . eventBus ( ) . consumer ( Kue . workerAddress ( eventType ) , handler ) ; return this ; }
47650	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; this . config = config ; init ( config . getServletContext ( ) ) ; }
47653	private void init ( String publicId , String systemId , int lineNumber , int columnNumber ) { this . publicId = publicId ; this . systemId = systemId ; this . lineNumber = lineNumber ; this . columnNumber = columnNumber ; }
47688	public boolean removeElement ( Object obj ) { return _BOOL ; }
47704	public void removeAllElements ( ) { if ( objects . size ( ) > _NUM ) { int firstIndex = _NUM ; int lastIndex = objects . size ( ) - _NUM ; objects . removeAllElements ( ) ; selectedObject = _NULL ; fireIntervalRemoved ( this , firstIndex , lastIndex ) ; } else { selectedObject = _NULL ; } }
47707	public final boolean isWifiEnabled ( ) { boolean wifiState = _BOOL ; WifiManager wifiManager = ( WifiManager ) context . getSystemService ( Context . WIFI_SERVICE ) ; if ( wifiManager != _NULL ) { wifiState = wifiManager . isWifiEnabled ( ) ; } return wifiState ; }
47710	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
47713	public void removeMethod ( ) { if ( uriParms != _NULL ) uriParms . delete ( METHOD ) ; }
47745	public static void deleteDomain ( DN dn ) { LDAPReplicationDomain domain = domains . remove ( dn ) ; if ( domain != _NULL ) { domain . delete ( ) ; } if ( domains . isEmpty ( ) ) { stopReplayThreads ( ) ; } }
47776	public void makeImmutable ( ) { isMutable = _BOOL ; }
47790	public void removeNode ( int n ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; this . removeElement ( n ) ; }
47799	public static StorageStatus working ( ) { return WORKING ; }
47800	public boolean visitLocationPath ( ExpressionOwner owner , LocPathIterator path ) { return _BOOL ; }
47852	public @ CheckForNull QueueTaskFuture run ( @ Nonnull String replacementMainScript , @ Nonnull Map < String , String > replacementLoadedScripts ) { Queue . Item item = run2 ( replacementMainScript , replacementLoadedScripts ) ; return item == _NULL ? _NULL : item . getFuture ( ) ; }
47856	public void handleButton2Request ( RequestInvocationEvent event ) { backToProfileViewBean ( ) ; }
47974	public void clear ( ) { column = new String [ _NUM ] ; types = _NULL ; rows = new Vector ( ) ; ncolumns = nrows = _NUM ; atmaxrows = _BOOL ; }
47976	public void removeWrapper ( String jspUri ) { jsps . remove ( jspUri ) ; }
48008	public void activate ( ) throws AMException , SSOException { setStringAttribute ( statusAN , _CHAR active _CHAR ) ; store ( ) ; }
48011	public void initialize ( KeyProvider keyprovider ) throws EncryptionException { if ( keyprovider == _NULL ) { EncryptionUtils . debug . error ( _CHAR AMSignatureProvider . initialize : _CHAR + _CHAR keyprovider is _NULL _CHAR ) ; throw new EncryptionException ( EncryptionUtils . bundle . getString ( _CHAR nullValues _CHAR ) ) ; } this . keyProvider = keyprovider ; }
48044	public String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
48064	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; this . config = config ; }
48081	public static String formatCurrentDate ( ) { return JKFormatUtil . formatDate ( new Date ( ) , _CHAR yyyy - MM - dd _CHAR ) ; }
48172	@ Override boolean requiresConnectorConfigurationHelper ( JsonValue requestContent ) { return _BOOL ; }
48298	public void makeImmutable ( ) { if ( isMutable ) { if ( audiences != _NULL ) { audiences = Collections . unmodifiableList ( audiences ) ; } isMutable = _BOOL ; } }
48317	public void destroy ( ) { }
48333	public void deleteDynamicGroups ( Set dynamicGroupDNs ) throws AMException , SSOException { Iterator iter = dynamicGroupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String dynamicGroupDN = ( String ) iter . next ( ) ; AMDynamicGroup dynamicGroup = new AMDynamicGroupImpl ( super . token , dynamicGroupDN ) ; dynamicGroup . delete ( ) ; } }
48342	public void onDirectoryChange ( final File directory ) { }
48343	public static String postRequest ( URL url , String postData , String encoding , String contentType , int readTimeout , int socketTimeout ) { return postRequest ( url , postData , encoding , contentType , _BOOL , readTimeout , socketTimeout ) ; }
48346	public void addProductToken ( String pt ) { productTokens . add ( pt ) ; }
48347	public void deletePeopleContainers ( Set peopleContainerDNs ) throws AMException , SSOException { Iterator iter = peopleContainerDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String peopleContainerDN = ( String ) iter . next ( ) ; AMPeopleContainer peopleContainer = new AMPeopleContainerImpl ( super . token , peopleContainerDN ) ; peopleContainer . delete ( ) ; } }
48350	@ Override public boolean accept ( File dir , String name ) { if ( filenameFilter != _NULL ) { return filenameFilter . accept ( dir , name ) ; } else { return super . accept ( dir , name ) ; } }
48436	public void free ( ) { bufHandler . free ( ) ; }
48440	protected void registerChildren ( ) { super . registerChildren ( ) ; registerChild ( ADD_BUTTON , CCButton . class ) ; registerChild ( DELETE_BUTTON , CCButton . class ) ; registerChild ( TEXTFIELD , TextField . class ) ; }
48488	public Object clone ( ) throws CloneNotSupportedException { return super . clone ( ) ; }
48497	public synchronized void terminate ( ) { this . shouldTerminate = _BOOL ; this . notify ( ) ; }
48516	public static AndroidArtwork createArtworkFromFile ( File file ) throws IOException { AndroidArtwork artwork = new AndroidArtwork ( ) ; artwork . setFromFile ( file ) ; return artwork ; }
48525	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
48530	private void measureLeftDistance ( ) { mLeftDistanceCameraBtn = mCameraButton . getLeft ( ) + mCameraButton . getWidth ( ) / _NUM ; mLeftDistanceHangUpBtn = mHangUpButton . getLeft ( ) + mHangUpButton . getWidth ( ) / _NUM ; mLeftDistanceVoiceBtn = mVoiceButton . getLeft ( ) + mVoiceButton . getWidth ( ) / _NUM ; }
48549	public void handleButton3Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToPolicyViewBean ( ) ; }
48596	void shutdown ( ) { initiateShutdown ( ) ; if ( logger . isTraceEnabled ( ) ) { logger . trace ( getMessage ( _CHAR Shutting down status analyzer . '' ) ) ; } synchronized ( eventMonitor ) { eventMonitor . notifyAll ( ) ; } try { join ( _NUM ) ; } catch ( InterruptedException e ) { } if ( isAlive ( ) ) { interrupt ( ) ; } }
48604	public static void warning ( String msg ) { debugInst . debug ( IDebug . WARNING , msg ) ; }
48649	@ Override public void close ( ) { }
48709	private static void mkdir ( String dir ) throws IOException { FileUtils . createDirectory ( dir ) ; }
48745	public int jmxPort ( ) { return values . jmxPort ; }
48774	public void handleButton3Request ( RequestInvocationEvent event ) { backTrail ( ) ; AuthPropertiesViewBean vb = ( AuthPropertiesViewBean ) getViewBean ( AuthPropertiesViewBean . class ) ; removePageSessionAttribute ( ENTRY_LIST ) ; removePageSessionAttribute ( ReorderAuthChainsViewBean . PG_SESSION_TRACKING ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
48778	public void showCorner ( boolean leftTop , boolean rightTop , boolean leftBottom , boolean rightBottom ) { if ( SDK_LOLLIPOP ) { ( ( OptRoundRectDrawable ) getBackground ( ) ) . showCorner ( leftTop , rightTop , leftBottom , rightBottom ) ; } else { ( ( OptRoundRectDrawableWithShadow ) getBackground ( ) ) . showCorner ( leftTop , rightTop , leftBottom , rightBottom ) ; } }
48786	public static Activity . Marketplace from ( final Api api ) { return new Activity . Marketplace ( api . getLoans ( ) ) ; }
48790	public void makeImmutable ( ) { }
48830	public void initializePersistence ( Handler < AsyncResult < Void >> resultHandler ) { delegate . initializePersistence ( resultHandler ) ; }
48858	private static byte charToByte ( char c ) { return ( byte ) _CHAR _NUM _CHAR . indexOf ( c ) ; }
48877	public final int hashCode ( ) { if ( toString ( ) == _NULL ) { return _NUM ; } return toString ( ) . hashCode ( ) ; }
48901	@ Override public boolean onCreateOptionsMenu ( Menu menu ) { menu . add ( Menu . NONE , MENU_HELP , Menu . NONE , getString ( R . string . help ) ) . setIcon ( android . R . drawable . ic_menu_help ) . setAlphabeticShortcut ( _CHAR ) ; return super . onCreateOptionsMenu ( menu ) ; }
48902	public void readSet ( ASN1Set set ) throws IOException { if ( tag != ASN1Constants . TAG_C_SET ) { throw expected ( _CHAR set _CHAR ) ; } throw new ASN1Exception ( _CHAR Decoding ASN . 1 Set type is not supported _CHAR ) ; }
48913	@ Override public void storeConfig ( ) { store ( server ) ; }
48937	public void cancelAll ( ) { for ( Future future : runableMap . values ( ) ) { future . cancel ( _BOOL ) ; } runableMap . clear ( ) ; shutdown ( ) ; }
48938	public static int px2dip ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
49009	public void addBandwidthField ( BandwidthField b ) { bandwidthFields . add ( b ) ; }
49055	public void write ( String str ) { buf . append ( str ) ; }
49068	public boolean equals ( Object other ) { if ( ! this . getClass ( ) . equals ( other . getClass ( ) ) ) return _BOOL ; SIPResponse that = ( SIPResponse ) other ; return statusLine . equals ( that . statusLine ) && super . equals ( other ) ; }
49091	public void process ( Vector notifications ) { for ( int i = _NUM ; i < notifications . size ( ) ; i ++ ) { processRemoteNotification ( ( Notification ) notifications . elementAt ( i ) ) ; } }
49124	public void onFileDelete ( final File file ) { }
49144	protected void stop ( ) { timer . stop ( ) ; }
49185	public void loginAnonymous ( ) throws XmlRpcFault { login ( _CHAR _CHAR , _CHAR _CHAR , _CHAR en _CHAR ) ; }
49224	private TypeSpec . Builder generateTypeBuilder ( ) { String clzName = parser . getClzName ( ) ; clzName = clzName + SUFFIX ; return TypeSpec . classBuilder ( clzName ) . addJavadoc ( _CHAR This class is generated by annotation { @ link com . lzh . courier . annoapi . Params } _CHAR ) . addModifiers ( Modifier . PUBLIC ) ; }
49289	public boolean beginInfoBlockDisplay ( ChildDisplayEvent event ) { String msg = model . getInformationMessage ( ) ; if ( msg != _NULL && msg . length ( ) > _NUM ) { setDisplayFieldValue ( INFO_MSG , msg ) ; return _BOOL ; } return _BOOL ; }
49366	public boolean isMapLoadFinish ( ) { return isMapLoadFinish ; }
49398	public static String formatDateTime ( Date date ) { return mSimpleDateTimeFormat . format ( date ) ; }
49441	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
49456	@ Deprecated public int _time ( ) { return _time ; }
49468	public ProductService retrieveAllProducts ( Handler < AsyncResult < List < Product >> > resultHandler ) { delegate . retrieveAllProducts ( resultHandler ) ; return this ; }
49473	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
49491	@ Override public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; try { msgFactory = MessageFactory . newInstance ( ) ; } catch ( SOAPException ex ) { Utils . debug . error ( _CHAR SOAPReceiver . init : create message _CHAR + _CHAR factory failed . '' ) ; throw new ServletException ( ex . getMessage ( ) ) ; } }
49517	public static void copyToClipboard ( String text ) { final StringSelection stringSelection = new StringSelection ( text ) ; final Clipboard clipboard = Toolkit . getDefaultToolkit ( ) . getSystemClipboard ( ) ; clipboard . setContents ( stringSelection , stringSelection ) ; }
49576	public void reset ( ) { super . reset ( ) ; H1 = _NUM ; H2 = _NUM ; H3 = _NUM ; H4 = _NUM ; H5 = _NUM ; H6 = _NUM ; H7 = _NUM ; H8 = _NUM ; }
49645	public void deactivate ( ) { active = _BOOL ; }
49648	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
49651	private void initSkinLoader ( ) { SkinManager . getInstance ( ) . init ( this ) ; SkinManager . getInstance ( ) . load ( ) ; }
49658	@ Override public void close ( ) throws IOException { sc . close ( ) ; }
49706	static void toString ( ProtocolOp op ) throws Exception { StringBuilder sb = new StringBuilder ( ) ; op . toString ( sb ) ; op . toString ( sb , _NUM ) ; }
49727	@ Override public void run ( Runnable runnable ) { if ( ! TaskProxy . sDefaultExecutor . isBusy ( ) ) { TaskProxy . sDefaultExecutor . execute ( runnable ) ; } else { new Thread ( runnable ) . start ( ) ; } }
49732	private void flushOutput ( ) throws IOException { if ( decoderOut . position ( ) > _NUM ) { writer . write ( decoderOut . array ( ) , _NUM , decoderOut . position ( ) ) ; decoderOut . rewind ( ) ; } }
49774	public void add ( XMPPathSegment segment ) { segments . add ( segment ) ; }
49821	public final static String formatHeader ( final Header header , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicLineFormatter . DEFAULT ; return formatter . formatHeader ( _NULL , header ) . toString ( ) ; }
49834	protected void handleButton1Request ( Map values ) throws AMConsoleException { editEntry ( values ) ; }
49874	public boolean findAuthRole ( String role ) { if ( role == _NULL ) return _BOOL ; for ( int i = _NUM ; i < authRoles . length ; i ++ ) { if ( role . equals ( authRoles [ i ] ) ) return _BOOL ; } return _BOOL ; }
49905	public R visitClass ( ClassPropertyDefinition pd , String v , P p ) { return visitUnknown ( pd , v , p ) ; }
49990	public R visitDuration ( DurationPropertyDefinition pd , Long v , P p ) { return visitUnknown ( pd , v , p ) ; }
50001	public static void main ( String [ ] args ) { System . out . println ( toMap ( _CHAR key1 _CHAR , _CHAR value1 _CHAR , _CHAR key2 _CHAR , _CHAR value2 _CHAR ) ) ; }
50033	public void handleButton3Request ( RequestInvocationEvent event ) { ServicesViewBean vb = ( ServicesViewBean ) getViewBean ( ServicesViewBean . class ) ; backTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
50053	public static < T > JList < T > makeJList ( TextStyle textStyle ) { final JList < T > list = new JList < > ( ) ; list . setCellRenderer ( makeCellRenderer ( textStyle ) ) ; return list ; }
50082	public void logout ( final Session session ) throws SessionException { sessionOperationStrategy . getOperation ( session . getSessionID ( ) ) . logout ( session ) ; }
50189	private void initH2Console ( ServletContext servletContext ) { log . debug ( _CHAR Initialize H2 console _CHAR ) ; ServletRegistration . Dynamic h2ConsoleServlet = servletContext . addServlet ( _CHAR H2Console _CHAR , new org . h2 . server . web . WebServlet ( ) ) ; h2ConsoleServlet . addMapping ( _CHAR / h2 - console /* '' ) ; h2ConsoleServlet . setInitParameter ( '' - properties '' , '' src / main / resources / '' ) ; h2ConsoleServlet . setLoadOnStartup ( 1 ) ; }
50191	public void close ( ) { if ( jmxc != _NULL ) { try { jmxc . close ( ) ; } catch ( IOException e ) { logger . error ( _CHAR Error while trying to close jmx connection '' , e ) ; } jmxc = _NULL ; } }
50211	public static void reset ( ) { getInstance ( ) . resetInstance ( ) ; }
50218	public Hyphenation hyphenate ( String word ) { return hyphenate ( lang , country , hyphPathNames , word , leftMin , rightMin ) ; }
50244	void addAlias ( String alias ) { if ( ( aliases == _NULL ) || ( aliases . size ( ) == _NUM ) ) { aliases = new ArrayList < String > ( ) ; } aliases . add ( alias ) ; }
50269	public void installUI ( JComponent c ) { splitPane = ( JSplitPane ) c ; dividerLocationIsSet = _BOOL ; dividerKeyboardResize = _BOOL ; keepHidden = _BOOL ; installDefaults ( ) ; installListeners ( ) ; installKeyboardActions ( ) ; setLastDragLocation ( - _NUM ) ; }
50315	public boolean onKeyUp ( int keyCode , KeyEvent event ) { if ( keyCode == KeyEvent . KEYCODE_BACK && mSlidingMenu . isMenuShowing ( ) ) { showContent ( ) ; return _BOOL ; } return _BOOL ; }
50368	public void handleButton2Request ( RequestInvocationEvent event ) { propertySheetModel . clear ( ) ; forwardTo ( ) ; }
50372	public OutputStream put ( String key ) throws FileNotFoundException { return new xFileOutputStream ( mCache . newFile ( key ) ) ; }
50423	public void addUniqueAttribute ( String qName , String value , int flags ) throws SAXException { addAttribute ( qName , value ) ; }
50426	public void handleButton3Request ( RequestInvocationEvent event ) { super . handleButton2Request ( event ) ; }
50431	public Index read ( Identifier identifier ) { return indexesRepo . read ( identifier ) ; }
50443	private void process ( ) { long curTime = System . currentTimeMillis ( ) ; this . job . setStarted_at ( curTime ) . set ( _CHAR started_at _CHAR , String . valueOf ( curTime ) ) . compose ( _NULL ) . setHandler ( _NULL ) ; }
50514	public String createHttpsConnector ( String parent , String address , int port ) throws Exception { return createConnector ( parent , address , port , _BOOL , _BOOL ) ; }
50519	public void handleButton2Request ( RequestInvocationEvent event ) { UMUserResourceOfferingViewBeanBase vb = ( UMUserResourceOfferingViewBeanBase ) getReturnToViewBean ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
50540	public String toString ( ) { StringBuffer sb = new StringBuffer ( _NUM ) ; sb . append ( _CHAR < RemoveEntry xmlns =\ _CHAR _CHAR ) . append ( DiscoConstants . DISCO_NS ) . append ( _CHAR \ _CHAR _CHAR ) ; if ( entryID != _NULL ) { sb . append ( _CHAR entryID =\ _CHAR _CHAR ) . append ( entryID ) . append ( _CHAR \ _CHAR _CHAR ) ; } sb . append ( _CHAR > < / RemoveEntry > _CHAR ) ; return sb . toString ( ) ; }
50552	public Collection engineGenerateCRLs ( InputStream inStream ) throws CRLException { throw new UnsupportedOperationException ( _CHAR not yet . '' ) ; }
50587	public void expand ( ) { expand ( _BOOL ) ; }
50608	public float popFloat ( ) { BaseTypeWrapper wrapper = ( BaseTypeWrapper ) this . pop ( ) ; Float value = ( Float ) wrapper . getValue ( ) ; return value . floatValue ( ) ; }
50656	public void processRemoteNotification ( Notification notification ) { SessionNotification snot = SessionNotification . parseXML ( notification . getContent ( ) ) ; if ( snot != _NULL ) { processNotification ( snot , _BOOL ) ; } }
50695	public void UnexpectedEndException ( LineCol lineCol ) throws UnexpectedEndException { if ( fastFail ) throw new UnexpectedEndException ( buildErrInfo ( lineCol ) , lineCol ) ; final String msg = _CHAR unexpected end _CHAR ; error ( msg + _CHAR at _CHAR + lineCol ) ; errorList . add ( new CompilingError ( msg , lineCol , CompilingError . UnexpectedEnd ) ) ; }
50705	static public void addListHeader ( Class < ? extends SIPHeader > sipHeaderClass , Class < ? extends SIPHeaderList < ? extends SIPHeader >> sipHeaderListClass ) { headerListTable . put ( sipHeaderClass , sipHeaderListClass ) ; }
50730	public void writeElement ( String namespace , String name , int type ) { writeElement ( namespace , _NULL , name , type ) ; }
50811	public String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
50860	public void removeHeaders ( ) { qheaders = new NameValueList ( ) ; }
50878	public void removePort ( ) { sentBy . removePort ( ) ; }
50989	public MaterialBarcodeScannerBuilder withCameraFacing ( int cameraFacing ) { mFacing = cameraFacing ; return this ; }
51016	public static String map2OID ( String algName ) { checkCacheVersion ( ) ; String result = alg2OidMap . get ( algName . toUpperCase ( Locale . US ) ) ; if ( result != _NULL ) { return result ; } AlgNameMapperSource s = source ; if ( s != _NULL ) { return s . mapNameToOid ( algName ) ; } return _NULL ; }
51062	@ DataProvider ( name = _CHAR valid6Rules _CHAR ) public Object [ ] [ ] valid6Data ( ) { return new Object [ ] [ ] { { _CHAR _NUM : fecd : ba23 : cd1f : dcb1 : _NUM : _NUM : _NUM / _NUM _CHAR } , { _CHAR _NUM : fecd : ba23 : cd1f : dcb1 : _NUM : _NUM : _NUM _CHAR } , { _CHAR [ _NUM : fecd : ba23 : cd1f : dcb1 : _NUM : _NUM : _NUM ] / _NUM _CHAR } , { _CHAR : :/ _NUM _CHAR } , { _CHAR : : _NUM / _NUM _CHAR } , { _CHAR : : _CHAR } , { _CHAR _NUM : _NUM : _NUM : _NUM : _NUM : ffff : _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM : : _NUM : _NUM : _NUM : _NUM _CHAR } , { _CHAR _NUM : _NUM : _NUM : _NUM : _NUM : _NUM : _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR : : _NUM . _NUM . _NUM . _NUM _CHAR } } ; }
51070	public boolean isSaveConsentEnabled ( ) { return saveConsentEnabled ; }
51111	private void readObject ( final ObjectInputStream in ) throws IOException , ClassNotFoundException { try { in . defaultReadObject ( ) ; final SharedPoolDataSource oldDS = ( SharedPoolDataSource ) new SharedPoolDataSourceFactory ( ) . getObjectInstance ( getReference ( ) , _NULL , _NULL , _NULL ) ; this . pool = oldDS . pool ; } catch ( final NamingException e ) { throw new IOException ( _CHAR NamingException : _CHAR + e ) ; } }
51118	protected void rejectDrag ( ) { DropTargetContextPeer peer = getDropTargetContextPeer ( ) ; if ( peer != _NULL ) { peer . rejectDrag ( ) ; } }
51127	public static void logAccessMessage ( String msgIdName , String data [ ] , SSOToken token ) throws SSOException { logAccessMessage ( msgIdName , data , token , _NULL ) ; }
51177	public void shutdown ( ) { shutdown = _BOOL ; try { join ( ) ; } catch ( InterruptedException ex ) { } }
51219	@ Override public void endAccess ( ) { isNew = _BOOL ; if ( LAST_ACCESS_AT_START ) { this . lastAccessedTime = this . thisAccessedTime ; this . thisAccessedTime = System . currentTimeMillis ( ) ; } else { this . thisAccessedTime = System . currentTimeMillis ( ) ; this . lastAccessedTime = this . thisAccessedTime ; } if ( ACTIVITY_CHECK ) { accessCount . decrementAndGet ( ) ; } }
51234	public synchronized void shutdown ( ) { if ( ! destroyed ) { destroyed = _BOOL ; SSL . freeBIO ( networkBIO ) ; SSL . freeSSL ( ssl ) ; ssl = networkBIO = _NUM ; isInboundDone = isOutboundDone = engineClosed = _BOOL ; } }
51282	public java . lang . String toString ( ) { return toString ( namespaceURI ) ; }
51402	public void collapse ( ) { collapse ( _BOOL ) ; }
51437	public static void main ( String [ ] args ) throws TestFailed , ClassNotFoundException { testFailLoadAndGc ( ) ; }
51452	private void initSkinLoader ( ) { SkinManager . getInstance ( ) . init ( this ) ; SkinManager . getInstance ( ) . load ( ) ; }
51454	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
51455	@ Override public void destroyModuleState ( ) { validatedUserID = _NULL ; }
51506	@ Override public void onTouchLetterSection ( int sectionIndex , EasySection letterSection ) { this . imageFloatingTv . setVisibility ( View . VISIBLE ) ; this . imageFloatingIv . setVisibility ( View . INVISIBLE ) ; this . imageFloatingTv . setText ( letterSection . letter ) ; this . scrollToPosition ( this . adapter . getPositionForSection ( sectionIndex ) ) ; }
51560	public final int hashCode ( ) { return super . hashCode ( ) ; }
51590	public boolean jmxSslEnabled ( ) { return values . jmxSslEnabled ; }
51648	@ Override public Future < Boolean > flush ( ) { return new FutureFlush ( ) ; }
51699	boolean isFractionalExclusive ( ) { return fractionalExclusive ; }
51734	public void handleHrefRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
51812	private void renameThumb ( ) { File thumbDir = new File ( configuration . getThumbsPath ( ) + File . separator + type + this . currentFolder ) ; File newThumbDir = new File ( configuration . getThumbsPath ( ) + File . separator + type + this . newFolderPath ) ; thumbDir . renameTo ( newThumbDir ) ; }
51825	Parsed copy ( ) { Parsed cloned = new Parsed ( ) ; cloned . fieldValues . putAll ( this . fieldValues ) ; cloned . zone = this . zone ; cloned . chrono = this . chrono ; cloned . leapSecond = this . leapSecond ; return cloned ; }
51879	public void refresh ( ) { RoutingBoard routing_board = board_frame . board_panel . itera_board . get_routing_board ( ) ; if ( clearance_table_model . getRowCount ( ) != routing_board . brd_rules . clearance_matrix . get_class_count ( ) ) { adjust_clearance_table ( ) ; } clearance_table_model . set_values ( layer_combo_box . get_selected_layer ( ) . index ) ; repaint ( ) ; }
51890	public void onDirectoryCreate ( final File directory ) { }
52081	public void addProductToken ( String pt ) { productTokens . add ( pt ) ; }
52141	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
52154	private void initH2Console ( ServletContext servletContext ) { log . debug ( _CHAR Initialize H2 console _CHAR ) ; ServletRegistration . Dynamic h2ConsoleServlet = servletContext . addServlet ( _CHAR H2Console _CHAR , new org . h2 . server . web . WebServlet ( ) ) ; h2ConsoleServlet . addMapping ( _CHAR / h2 - console /* '' ) ; h2ConsoleServlet . setInitParameter ( '' - properties '' , '' src / main / resources / '' ) ; h2ConsoleServlet . setLoadOnStartup ( 1 ) ; }
52205	protected void notifyClickListenersAboutClick ( int item ) { for ( OnWheelClickedListener listener : clickingListeners ) { listener . onItemClicked ( this , item ) ; } }
52206	public synchronized void stop ( ) { if ( ! isRunning ) { return ; } listener . close ( ) ; isRunning = _BOOL ; }
52287	public void printin ( ) { writer . print ( SPACES . substring ( _NUM , indent ) ) ; }
52304	@ Override public void close ( ) throws NamingException { }
52352	public JKTableRecord removeRecord ( final int row ) { return this . records . remove ( row ) ; }
52357	public void unregisterIdentityProviderListener ( IdentityProviderListener listener ) { identityProviderListeners . remove ( listener . getListenerName ( ) ) ; }
52400	public void recon ( ReconciliationContext reconContext ) throws SynchronizationException { EventEntry measure = Publisher . start ( EVENT_RECON , reconContext . getReconId ( ) , _NULL ) ; doRecon ( reconContext ) ; measure . end ( ) ; }
52420	@ Deprecated public int _inc ( ) { return _inc ; }
52438	public void deleteDynamicGroups ( Set dynamicGroupDNs ) throws AMException , SSOException { Iterator iter = dynamicGroupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String dynamicGroupDN = ( String ) iter . next ( ) ; AMDynamicGroup dynamicGroup = new AMDynamicGroupImpl ( super . token , dynamicGroupDN ) ; dynamicGroup . delete ( ) ; } }
52465	public void makeImmutable ( ) { if ( mutable ) { if ( statusCode != _NULL ) { statusCode . makeImmutable ( ) ; } if ( statusMessage != _NULL ) { statusMessage . makeImmutable ( ) ; } if ( statusDetail != _NULL ) { statusDetail . makeImmutable ( ) ; } mutable = _BOOL ; } }
52569	public void handleButton2Request ( RequestInvocationEvent event ) { backTrail ( ) ; ServerSiteViewBean vb = ( ServerSiteViewBean ) getViewBean ( ServerSiteViewBean . class ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
52611	public void handleButton2Request ( RequestInvocationEvent event ) { backTrail ( ) ; ServerSiteViewBean vb = ( ServerSiteViewBean ) getViewBean ( ServerSiteViewBean . class ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
52616	public static void main ( final String [ ] args ) { System . err . println ( NumbersToWords . convert ( _NUM ) ) ; }
52626	public double popDouble ( ) { BaseTypeWrapper wrapper = ( BaseTypeWrapper ) this . pop ( ) ; Double value = ( Double ) wrapper . getValue ( ) ; return value . doubleValue ( ) ; }
52627	public static Date parse ( String dateStr ) { try { return mSimpleDateTimeFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( _CHAR date formatDateTime error _CHAR ) ; } }
52630	@ Fluent public Job done ( Throwable ex ) { eventBus . send ( Kue . workerAddress ( _CHAR done_fail _CHAR , this ) , ex . getMessage ( ) ) ; return this ; }
52656	public void handleButton2Request ( RequestInvocationEvent event ) { acModel = ( AuthConfigurationModel ) getModel ( ) ; acModel . reset ( getRealmName ( ) , getConfigName ( ) ) ; tablePopulated = _BOOL ; removePageSessionAttribute ( ENTRY_LIST ) ; removePageSessionAttribute ( ReorderAuthChainsViewBean . PG_SESSION_TRACKING ) ; forwardTo ( ) ; }
52686	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
52702	public static Date parseText ( String dateStr ) { try { return mSimpleTextFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( _CHAR date formatDateTime error _CHAR ) ; } }
52736	@ DataProvider ( name = _CHAR invalidRules _CHAR ) public Object [ ] [ ] inValidData ( ) { return new Object [ ] [ ] { { _CHAR _NUM . _NUM . _NUM . xx _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM ++ _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM + _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM + _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM + _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM + _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM /- _NUM _CHAR } , { _CHAR _NUM .. _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM / _NUM _CHAR } , { _CHAR . _CHAR } , { _CHAR foo _CHAR } } ; }
52775	void constantLock ( ) { Class thing = Thread . class ; synchronized ( Thread . class ) { } }
52795	public void dismiss ( ) { unregisterObserver ( ) ; if ( mPopupWindow != _NULL ) { mPopupWindow . dismiss ( ) ; } }
52808	public void finishResponse ( ) { try { if ( writer != _NULL ) { writer . close ( ) ; } else { if ( stream != _NULL ) stream . close ( ) ; } } catch ( IOException e ) { } }
52827	public static int computeDecreaseStation ( int station ) { int result = station - STEP ; if ( result < LOWEST_STATION ) { result = HIGHEST_STATION ; } return result ; }
52837	public static String slice ( final String value , int begin , int end ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . substring ( begin , end ) ; }
52860	public void concatenate ( NetObjectList net_obj_list ) { super . concatenate ( net_obj_list ) ; }
52952	public void clear ( TrayPreference ... modules ) { mProviderHelper . clear ( modules ) ; }
53005	public final int hashCode ( ) { if ( toString ( ) == _NULL ) { return _NUM ; } return toString ( ) . hashCode ( ) ; }
53067	public void readSequenceOf ( ASN1SequenceOf sequenceOf ) throws IOException { if ( tag != ASN1Constants . TAG_C_SEQUENCEOF ) { throw expected ( _CHAR sequenceOf _CHAR ) ; } decodeValueCollection ( sequenceOf ) ; }
53075	public void makeImmutable ( ) { }
53084	public boolean delete ( Long attributeID ) { if ( attributeID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } return database . delete ( DATABASE_TABLE , KEY_EXTERNALATTRIBUTEID + _CHAR = _CHAR + attributeID , _NULL ) > _NUM ; }
53119	public void handleButton3Request ( RequestInvocationEvent event ) { super . handleButton2Request ( event ) ; }
53161	public static void warning ( String msg , Throwable t ) { debugInst . debug ( IDebug . WARNING , msg , t ) ; }
53172	public R visitSize ( SizePropertyDefinition pd , Long v , P p ) { return visitUnknown ( pd , v , p ) ; }
53207	public static void error ( String msg , Throwable t ) { debugInst . debug ( IDebug . ERROR , msg , t ) ; }
53208	public String toString ( ) { return _CHAR CreationTemplate : _CHAR + getName ( ) + _CHAR { Required _CHAR + m_required + _CHAR Optional _CHAR + m_optional + _CHAR Validation _CHAR + m_validated + _CHAR Naming Attribute _CHAR + m_namingAttribute + _CHAR } _CHAR ; }
53212	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
53234	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
53323	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
53337	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR FSReturnLogoutServlet Initializing ... _CHAR ) ; metaManager = FSUtils . getIDFFMetaManager ( ) ; }
53402	public void parse ( String systemId ) throws SAXException , IOException { parse ( new InputSource ( systemId ) ) ; }
53403	public void handleHrefExceptionRequest ( RequestInvocationEvent event ) throws ServletException , IOException { ViewBean targetView = getViewBean ( LoginViewBean . class ) ; targetView . forwardTo ( getRequestContext ( ) ) ; }
53456	public < V > V put ( final String uri , final Object params , final Type type ) throws IOException { HttpURLConnection request = createPut ( uri ) ; return sendJson ( request , params , type ) ; }
53473	protected void destroy ( ) { close = _BOOL ; selector . wakeup ( ) ; }
53474	private TypeSpec . Builder generateTypeBuilder ( ) { String clzName = parser . getClzName ( ) ; clzName = clzName + SUFFIX ; return TypeSpec . classBuilder ( clzName ) . addModifiers ( Modifier . PUBLIC ) ; }
53486	public ConditionDecision build ( ) { return new ConditionDecision ( this ) ; }
53498	public boolean visitLiteralResultElement ( ElemLiteralResult elem ) { return _BOOL ; }
53507	@ Activate public void activate ( final ComponentContext context ) throws AuthenticationException , IdentityProviderServiceException { logger . info ( _CHAR Activating Authentication Service with configuration { } _CHAR , context . getProperties ( ) ) ; config = enhancedConfig . getConfigurationAsJson ( context ) ; identityProviderConfigChanged ( ) ; logger . debug ( _CHAR OpenIDM Config for Authentication { } is activated . '' , config . get ( Constants . SERVICE_PID ) ) ; }
53517	public static AMIdentity createAgent ( SSOToken ssoToken , String realm , String agentName , String agentType , Map attrValues ) throws IdRepoException , SSOException , SMSException , ConfigurationException { return createAgentEx ( ssoToken , realm , agentName , agentType , attrValues , _NULL , _NULL ) ; }
53523	public CRL engineGenerateCRL ( InputStream inStream ) throws CRLException { throw new UnsupportedOperationException ( _CHAR not yet . '' ) ; }
53574	public SIPHeader parse ( ) throws ParseException { headerName ( TokenTypes . PROXY_AUTHORIZATION ) ; ProxyAuthorization proxyAuth = new ProxyAuthorization ( ) ; super . parse ( proxyAuth ) ; return proxyAuth ; }
53631	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
53680	public void processLocalNotification ( SessionNotification sessionNotification ) { processNotification ( sessionNotification , _BOOL ) ; }
53739	private void release ( ByteArray byteArray ) { synchronized ( syncRoot ) { if ( availableByteArrays . size ( ) >= maxAvailableArraysCount ) { return ; } if ( ! availableByteArrays . contains ( byteArray ) ) { availableByteArrays . add ( byteArray ) ; } } }
53759	public void makeImmutable ( ) { mutable = _BOOL ; }
53767	public void handleButton3Request ( RequestInvocationEvent event ) { IDRepoViewBean vb = ( IDRepoViewBean ) getViewBean ( IDRepoViewBean . class ) ; backTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
53775	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { onBeforeResetProfile ( ) ; propertySheetModel . clear ( ) ; forwardTo ( ) ; }
53788	public String encode ( ) { return uriString ; }
53789	@ Fluent public Job done ( ) { eventBus . send ( Kue . workerAddress ( _CHAR done _CHAR , this ) , this . toJson ( ) ) ; return this ; }
53809	@ Override public void addNotificationListener ( NotificationListener listener , NotificationFilter filter , Object object ) throws IllegalArgumentException { broadcaster . addNotificationListener ( listener , filter , object ) ; }
53848	public void invoke ( Context context , Map < String , Object > syncFailure , Exception failureCause ) throws SyncHandlerException { }
53887	public static void main ( final String [ ] args ) { getAmountAsString ( _NUM ) ; }
53904	static void clear ( ) { federationCache . clear ( ) ; configCache . clear ( ) ; }
53933	public JsonValue exportJson ( ) { JsonValue properties = RecordProperties . toJson ( this . getRecordProperties ( ) ) ; properties . put ( STATUS_LABEL , getRecordStatus ( ) . toString ( ) ) ; properties . put ( FOLDER_LABEL , getFolderPath ( ) + File . separator ) ; return properties ; }
53978	@ Override boolean requiresConnectorConfigurationHelper ( JsonValue requestContent ) { return _BOOL ; }
53988	public static void main ( final String [ ] args ) { System . out . println ( getCurrentDateFormatted ( ) ) ; }
54018	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
54111	public void handleButton3Request ( RequestInvocationEvent event ) { backToProfileViewBean ( ) ; }
54157	public final boolean equals ( Object obj ) { if ( toString ( ) == _NULL ) { return ( obj != _NULL ) && ( obj . toString ( ) == _NULL ) ; } if ( obj instanceof Encoding ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
54174	public void reset ( ) { super . reset ( ) ; H1 = _NUM ; H2 = _NUM ; H3 = _NUM ; H4 = _NUM ; H5 = _NUM ; H6 = _NUM ; H7 = _NUM ; H8 = _NUM ; }
54307	public static Properties readPropertiesStream ( InputStream inputStream ) { try { final Properties prop = new Properties ( ) ; prop . load ( inputStream ) ; return prop ; } catch ( IOException e ) { JKExceptionUtil . handle ( e ) ; return _NULL ; } finally { close ( inputStream ) ; } }
54325	public void handle ( Exception ex ) { }
54326	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
54353	public static Bitmap drawableToBitmap ( Drawable drawable ) { return drawable == _NULL ? _NULL : ( ( BitmapDrawable ) drawable ) . getBitmap ( ) ; }
54381	@ Override public IBinder onBind ( Intent intent ) { return new FloatMenuServiceBinder ( ) ; }
54383	public static void main ( String [ ] args ) throws Exception { String encrypt = encrypt ( _CHAR _NUM _CHAR ) ; System . out . println ( encrypt ) ; System . out . println ( decrypt ( _CHAR _NUM , - _NUM , _NUM , _NUM , - _NUM , - _NUM , - _NUM , _NUM , - _NUM , - _NUM , _NUM , - _NUM , - _NUM , _NUM , - _NUM , _NUM _CHAR ) ) ; System . out . println ( encode ( _CHAR _NUM _CHAR ) ) ; }
54402	public static Image createDisabledImage ( Image i ) { GrayFilter filter = new GrayFilter ( _BOOL , _NUM ) ; ImageProducer prod = new FilteredImageSource ( i . getSource ( ) , filter ) ; Image grayImage = Toolkit . getDefaultToolkit ( ) . createImage ( prod ) ; return grayImage ; }
54441	public void resetStatistics ( ) { totalRequestTime = _NUM ; totalSendTime = _NUM ; lastSendTime = _NUM ; nrOfFilterRequests = _NUM ; nrOfRequests = _NUM ; nrOfSendRequests = _NUM ; nrOfCrossContextSendRequests = _NUM ; }
54442	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
54458	public static File checkFolderPath ( final String path , final boolean create ) { final File file = new File ( path ) ; if ( ! file . exists ( ) ) { if ( create ) { file . mkdir ( ) ; } return _NULL ; } return file ; }
54460	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
54486	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR Entered FSRegistrationInitiationServlet Init _CHAR ) ; metaManager = FSUtils . getIDFFMetaManager ( ) ; }
54510	boolean isFractional ( ) { return fractional ; }
54522	public void uninstallUI ( JComponent c ) { uninstallKeyboardActions ( ) ; uninstallListeners ( ) ; uninstallDefaults ( ) ; dividerLocationIsSet = _BOOL ; dividerKeyboardResize = _BOOL ; splitPane = _NULL ; }
54538	public final void clear ( ) { m_index =- _NUM ; }
54557	public void initializeProvider ( String debugConfigPath ) throws InvalidDebugConfigurationException { DebugConfigurationFromProperties debugConfig = new DebugConfigurationFromProperties ( debugConfigPath ) ; debugFileProvider = new DebugFileProviderForTest ( debugConfig , TimeService . SYSTEM ) ; provider = new DebugProviderImpl ( debugFileProvider ) ; }
54725	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
54762	public void handleButton3Request ( RequestInvocationEvent event ) { forwardToFederationView ( ) ; }
54764	public void init ( SecureRandom random ) throws IllegalArgumentException { if ( random != _NULL ) { this . random = random ; } else { this . random = new SecureRandom ( ) ; } }
54772	private boolean isValidCommandMethod ( Object service , String commandName ) { try { service . getClass ( ) . getMethod ( commandName , InputStream . class , PrintStream . class , String [ ] . class ) ; return _BOOL ; } catch ( NoSuchMethodException e ) { return _BOOL ; } }
54824	final int dec ( int i ) { return ( ( i == _NUM ) ? items . length : i ) - _NUM ; }
54848	public static String encrypt ( String password ) { return ( Crypt . encode ( password ) ) ; }
54855	static void clear ( ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR SAML2MetaCache . clear ( ) called _CHAR ) ; } descriptorCache . clear ( ) ; configCache . clear ( ) ; }
54860	public SIPHeader parse ( ) throws ParseException { headerName ( TokenTypes . PROXY_AUTHENTICATE ) ; ProxyAuthenticate proxyAuthenticate = new ProxyAuthenticate ( ) ; super . parse ( proxyAuthenticate ) ; return proxyAuthenticate ; }
54865	@ Override public void clearUserRules ( ) { SharedPreferences . Editor editor = sharedPreferences . edit ( ) ; editor . remove ( KEY_USER_RULES ) ; editor . commit ( ) ; }
54886	public boolean is_push_enabled ( ) { return push_enabled ; }
54892	public static String generateNumricPassword ( final int numberOfChar ) { final Random randomGenerator = new Random ( ) ; String password = _CHAR _CHAR ; for ( int i = _NUM ; i <= numberOfChar ; ++ i ) { password += randomGenerator . nextInt ( _NUM ) ; } return password ; }
54918	public void reinitConfiguratioFile ( String baseDir ) { }
54956	public void handleButton3Request ( RequestInvocationEvent event ) { AMViewBeanBase vb = ( AMViewBeanBase ) getReturnToViewBean ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
54972	private static int checkIdentifier ( final String signature , int pos ) { if ( ! Character . isJavaIdentifierStart ( getChar ( signature , pos ) ) ) { throw new IllegalArgumentException ( signature + _CHAR : identifier expected at index _CHAR + pos ) ; } ++ pos ; while ( Character . isJavaIdentifierPart ( getChar ( signature , pos ) ) ) { ++ pos ; } return pos ; }
54990	public static VariableModification < byte [ ] > duplicate ( ) { return new ByteArrayDuplicateModification ( ) ; }
55029	@ Override public void write ( int idx ) throws IOException { out . write ( idx ) ; }
55034	private void initH2Console ( ServletContext servletContext ) { log . debug ( _CHAR Initialize H2 console _CHAR ) ; ServletRegistration . Dynamic h2ConsoleServlet = servletContext . addServlet ( _CHAR H2Console _CHAR , new org . h2 . server . web . WebServlet ( ) ) ; h2ConsoleServlet . addMapping ( _CHAR / h2 - console /* '' ) ; h2ConsoleServlet . setInitParameter ( '' - properties '' , '' src / main / resources / '' ) ; h2ConsoleServlet . setLoadOnStartup ( 1 ) ; }
55047	public String toString ( ) { return image ; }
55065	public void deleteGroupContainers ( Set groupContainerDNs ) throws AMException , SSOException { Iterator iter = groupContainerDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupContainerDN = ( String ) iter . next ( ) ; AMGroupContainer groupContainer = new AMGroupContainerImpl ( token , groupContainerDN ) ; groupContainer . delete ( ) ; } }
55070	public int read ( ) throws java . io . IOException { if ( isBack ) { isBack = _BOOL ; return back & _NUM ; } return byteSource . get ( byteSourcePosition ++ ) ; }
55083	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
55094	public void init ( SecureRandom random ) throws IllegalArgumentException { }
55104	public static String DNToName ( AMModel model , String dn ) { if ( LDAPUtils . isDN ( dn ) ) { if ( DN . valueOf ( dn ) . equals ( DN . valueOf ( SMSEntry . getRootSuffix ( ) ) ) ) { return model . getLocalizedString ( _CHAR top . level . realm _CHAR ) ; } else { return LDAPUtils . rdnValueFromDn ( dn ) ; } } return dn ; }
55108	@ Override public synchronized void start ( int svc ) throws ChannelException { setupDefaultStack ( ) ; if ( optionCheck ) checkOptionFlags ( ) ; super . start ( svc ) ; if ( hbthread == _NULL && heartbeat ) { hbthread = new HeartbeatThread ( this , heartbeatSleeptime ) ; hbthread . start ( ) ; } }
55113	public final boolean equals ( Object obj ) { if ( toString ( ) == _NULL ) { return ( obj != _NULL ) && ( obj . toString ( ) == _NULL ) ; } if ( obj instanceof Type ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
55127	public void reStart ( boolean infiniteTry ) { reStart ( connectedRS . get ( ) . session , infiniteTry ) ; }
55153	public void paint ( Graphics g , Shape allocation ) { Rectangle alloc = allocation . getBounds ( ) ; view . setSize ( alloc . width , alloc . height ) ; view . paint ( g , allocation ) ; }
55195	public void init ( ) throws LifecycleException { getServer ( ) ; getConnector ( ) ; server . init ( ) ; }
55250	@ Descriptor ( _CHAR Exit from the console . '' ) public void exit ( ) { System . exit ( _NUM ) ; }
55251	public void handleButton2Request ( RequestInvocationEvent event ) { PolicyViewBean vb = ( PolicyViewBean ) getViewBean ( PolicyViewBean . class ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
55258	public void initializeProvider ( String debugConfigPath ) throws InvalidDebugConfigurationException { DebugConfigurationFromProperties debugConfig = new DebugConfigurationFromProperties ( debugConfigPath ) ; debugFileProvider = new DebugFileProviderForTest ( debugConfig , TimeService . SYSTEM ) ; provider = new DebugProviderImpl ( debugFileProvider ) ; }
55300	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
55354	public static void error ( String msg ) { debugInst . debug ( IDebug . ERROR , msg ) ; }
55395	@ Override public void removeMembershipListener ( ) { listener = _NULL ; }
55400	public static Date parseTime ( String dateStr ) { try { return mSimpleTimeFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( _CHAR date formatDateTime error _CHAR ) ; } }
55453	public PdfCanvas rectangle ( double x , double y , double width , double height ) { contentStream . getOutputStream ( ) . writeDouble ( x ) . writeSpace ( ) . writeDouble ( y ) . writeSpace ( ) . writeDouble ( width ) . writeSpace ( ) . writeDouble ( height ) . writeSpace ( ) . writeBytes ( re ) ; return this ; }
55505	public void checkout ( String userId , Handler < AsyncResult < CheckoutResult >> handler ) { delegate . checkout ( userId , handler ) ; }
55544	public void addEntryReadListener ( EntryReadListener listener ) { listeners . add ( listener ) ; }
55546	protected void onDisconnected ( ) { }
55620	@ Override public void run ( ) { running = _BOOL ; try { listen ( ) ; } catch ( Exception x ) { log . error ( sm . getString ( _CHAR nioReceiver . run . fail _CHAR ) , x ) ; } finally { running = _BOOL ; } }
55633	public Observable < Void > initializePersistenceObservable ( ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; initializePersistence ( resultHandler . toHandler ( ) ) ; return resultHandler ; }
55653	private void fireEvent ( BrowserEvent . Type type ) { BrowserEvent event = new BrowserEvent ( this , type ) ; for ( BrowserEventListener listener : listeners ) { listener . processBrowserEvent ( event ) ; } }
55683	public void makeImmutable ( ) { }
55706	public AttrSet read ( java . security . Principal principal , Guid guid ) throws UMSException { return read ( principal , guid , _NULL ) ; }
55722	public static int sp2px ( Context context , float spValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( spValue * scale + _NUM . _NUM ) ; }
55762	public static < K , V > Map < K , V > map ( K key1 , V value1 , K key2 , V value2 , K key3 , V value3 ) { return getInstance ( ) . mapInstance ( key1 , value1 , key2 , value2 , key3 , value3 ) ; }
55819	public boolean isSuspended ( ) { return outputBuffer . isSuspended ( ) ; }
55852	public static Drawable bitmapToDrawable ( Bitmap bitmap ) { return bitmap == _NULL ? _NULL : new BitmapDrawable ( bitmap ) ; }
55868	public static String formatDate ( Date date ) { return mSimpleDateFormat . format ( date ) ; }
55880	public static void copyFile ( File src , File dst ) throws IOException { copyOrAppend ( src , dst , _BOOL ) ; }
55939	public boolean isSessionUpgrade ( ) { return sessionUpgrade ; }
55962	public String toXMLString ( ) throws SAML2Exception { return this . toXMLString ( _BOOL , _BOOL ) ; }
55963	public TimeUnit timeUnit ( ) { return timeUnit ; }
56011	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR Entered FSTerminationInitiationServlet Init _CHAR ) ; metaManager = FSUtils . getIDFFMetaManager ( ) ; }
56019	public String toXMLString ( ) throws XACMLException { return toXMLString ( _BOOL , _BOOL ) ; }
56035	private void initSessionServiceDynamicSettings ( ) throws SMSException , SSOException { ServiceSchemaManager scm = new ServiceSchemaManager ( ISAuthConstants . SESSION_SERVICE_NAME , ssoAuthSession ) ; updateSessionServiceDynamics ( scm ) ; new AuthConfigMonitor ( scm ) ; }
56040	public static void removeApplicationType ( Subject adminSubject , String name ) throws EntitlementException { EntitlementConfiguration ec = getEntitlementConfiguration ( adminSubject , _CHAR / _CHAR ) ; ec . removeApplicationType ( name ) ; }
56045	public void goBack ( ) { webView . goBack ( ) ; }
56083	public void init ( FilterConfig filterConfig ) throws ServletException { setFilterConfig ( filterConfig ) ; servletCtx = filterConfig . getServletContext ( ) ; File file = new File ( configFile ) ; if ( file . exists ( ) ) { setIDPDiscoveryConfig ( configFile ) ; } }
56089	public void handleButton2Request ( RequestInvocationEvent event ) { forwardTo ( ) ; }
56126	@ Override public boolean accept ( File file ) { if ( fileFilter != _NULL ) { return fileFilter . accept ( file ) ; } else { return super . accept ( file ) ; } }
56279	public synchronized void log ( String message ) { if ( DO_LOG && ( out != _NULL ) ) { out . println ( _CHAR [ _CHAR + this + _CHAR ] : _CHAR + message ) ; } }
56309	public final boolean checkTag ( int identifier ) { return this . constrId == identifier ; }
56330	private void readObject ( ObjectInputStream stream ) throws IOException , ClassNotFoundException { stream . defaultReadObject ( ) ; if ( jdate == _NULL ) { jdate = jcal . newCalendarDate ( getZone ( ) ) ; cachedFixedDate = Long . MIN_VALUE ; } }
