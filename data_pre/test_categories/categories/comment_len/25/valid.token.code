149	void updateItem ( Barcode barcode ) { mBarcode = barcode ; postInvalidate ( ) ; }
287	private static boolean containsOnlyTransientAndStaticFields ( List < Field > fields ) { boolean containsNormalField = _BOOL ; for ( Field field : fields ) { if ( ! Modifier . isTransient ( field . getModifiers ( ) ) && ! Modifier . isStatic ( field . getModifiers ( ) ) ) { containsNormalField = _BOOL ; } } return ! containsNormalField ; }
319	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
423	public void java_lang_System_mapLibraryName ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getStringObject ( ) ) ; }
461	public Builder fill ( Boolean fill ) { this . fill = fill ; return this ; }
488	protected void checkProperty ( String propertyId ) throws XMLConfigurationException { if ( ! fRecognizedProperties . contains ( propertyId ) ) { if ( fParentSettings != _NULL ) { fParentSettings . getProperty ( propertyId ) ; } else { short type = XMLConfigurationException . NOT_RECOGNIZED ; throw new XMLConfigurationException ( type , propertyId ) ; } } }
582	protected static LazyNode cNumberValue ( int index ) { return new LazyNode ( VALUE_INTEGER , index ) ; }
822	public void onCreate ( K key , R resource ) { }
838	public boolean interiorIntersects ( S2LatLngRect other ) { return ( lat . interiorIntersects ( other . lat ) && lng . interiorIntersects ( other . lng ) ) ; }
900	public static final void sort ( float [ ] a , int [ ] b , int begin , int end ) { mergesort ( a , b , begin , end - _NUM ) ; }
961	public void push ( BasicBlock b ) { if ( b . inq != _BOOL ) { b . inq = _BOOL ; q . add ( b ) ; } }
1019	public static final String [ ] splitToWords ( String sStr ) { return splitToWords ( sStr , _BOOL ) ; }
1191	public JobRowFilter withValues ( Set < String > values ) { return new JobRowFilter ( jobField , operation , values ) ; }
1304	public void java_lang_Object_getClass ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassObject ( ) ) ; }
1424	private void scrollFinished ( ) { if ( mEdgeSwipeHandler != _NULL && mEdgeSwipeStarted ) { mEdgeSwipeHandler . swipeFinished ( ) ; } mEdgeSwipeStarted = _BOOL ; }
1572	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
1673	public static final String toString ( Hashtable table ) { if ( table == _NULL ) return _CHAR _NULL _CHAR ; StringBuffer output = new StringBuffer ( ) ; toString ( output , table ) ; return output . toString ( ) ; }
1895	public Builder bufferSize ( int bufferSize ) { this . _bufferSize = bufferSize ; return this ; }
2013	public static final void sort ( float [ ] a , int [ ] b , int length ) { mergesort ( a , b , _NUM , length - _NUM ) ; }
2086	@ JsonAnyGetter public Map < String , LogInfo > any ( ) { return body ; }
2220	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; registrarID . writeBytes ( out ) ; }
2445	public PolyhedronsSet translate ( final Vector3D translation ) { return ( PolyhedronsSet ) applyTransform ( new TranslationTransform ( translation ) ) ; }
2558	public Path createClasspath ( ) { if ( classpath == _NULL ) { classpath = new Path ( getProject ( ) ) ; } return classpath . createPath ( ) ; }
2702	public Builder stroke ( Boolean stroke ) { this . stroke = stroke ; return this ; }
2707	public String stringValue ( ) { if ( actualValue == _NULL ) { return normalizedValue ; } else { return actualValue . toString ( ) ; } }
2825	public static final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , String sHead , String sTail ) { VertexImpl vHead = new VertexImpl ( ) ; vHead . setLabel ( sHead ) ; VertexImpl vTail = new VertexImpl ( ) ; vTail . setLabel ( sTail ) ; return locateEdgeInGraph ( gGraph , vHead , vTail ) ; }
2950	protected final Object readResolve ( ) { return this ; }
2970	public MessagesDeleteDialogQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
3084	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
3299	public static void runRenderAction ( @ NotNull final Runnable runnable ) throws Exception { runRenderAction ( Executors . callable ( runnable ) ) ; }
3475	public void showErrorNotification ( final int errorCode , final Context context ) { GoogleApiAvailability . getInstance ( ) . showErrorNotification ( context , errorCode ) ; }
3559	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
3562	public static boolean isXML11NCName ( int c ) { return ( c < _NUM && ( XML11CHARS [ c ] & MASK_XML11_NCNAME ) != _NUM ) || ( _NUM <= c && c < _NUM ) ; }
3879	private boolean useIsSameNode ( Node node ) { if ( node instanceof NodeImpl ) { return _BOOL ; } Document doc = node . getNodeType ( ) == Node . DOCUMENT_NODE ? ( Document ) node : node . getOwnerDocument ( ) ; return ( doc != _NULL && doc . getImplementation ( ) . hasFeature ( _CHAR Core _CHAR , _CHAR _NUM . _NUM _CHAR ) ) ; }
3898	@ Override public CompletableFuture < Void > delete ( ) { CompletableFuture < Void > deleteFuture = new CompletableFuture < > ( ) ; this . close ( ) . thenCompose ( _NULL ) . thenAccept ( _NULL ) . exceptionally ( _NULL ) ; return deleteFuture ; }
4165	public static JSONObject rowToJSONObject ( JSONArray names , JSONTokener x ) throws JSONException { JSONArray ja = rowToJSONArray ( x ) ; return ja != _NULL ? ja . toJSONObject ( names ) : _NULL ; }
4415	public static final void sort ( int [ ] a , double [ ] b , int length ) { mergesort ( a , b , _NUM , length - _NUM ) ; }
4609	@ MainThread public static void onPause ( @ NonNull final String componentId ) { checkMainThread ( ) ; activeComponentIdsToTargets . remove ( componentId ) ; }
4837	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; servID . writeBytes ( out ) ; }
4969	public void loadMithraCache ( List < MithraObjectPortal > portals , int threads ) throws MithraBusinessException { this . configManager . loadMithraCache ( portals , threads ) ; }
4990	boolean remove ( BinarySearchTreeNode < E > node ) { if ( node == _NULL ) return _BOOL ; if ( this . root == _NULL ) return _BOOL ; if ( this . contains ( node ) ) { this . removeNode ( node ) ; return _BOOL ; } return _BOOL ; }
5036	public static String decode ( byte [ ] utf8 ) throws CharacterCodingException { return decode ( ByteBuffer . wrap ( utf8 ) , _BOOL ) ; }
5049	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
5056	private Map < String , Object > parse ( String [ ] header , String [ ] data ) { if ( header . length != data . length ) { throw new RuntimeException ( _CHAR Invalid CSV _CHAR ) ; } return IntStream . range ( _NUM , header . length ) . mapToObj ( _NULL ) . filter ( _NULL ) . collect ( toMap ( _NULL , _NULL ) ) ; }
5071	public static SparseMatrix loadSparseMatrix ( String filename ) throws IOException , IllegalFormatException { return loadSparseMatrix ( new File ( filename ) ) ; }
5113	public UpdateTMWithXLIFFResult updateTMWithTranslationKitXLIFF ( String xliffContent , TMTextUnitVariant . Status importStatus ) throws OkapiBadFilterInputException { return updateTMWithXliff ( xliffContent , importStatus , new ImportTranslationsWithTranslationKitStep ( ) ) ; }
5126	public void zoom ( float scaleX , float scaleY , float x , float y ) { Matrix save = mZoomMatrixBuffer ; mViewPortHandler . zoom ( scaleX , scaleY , x , - y , save ) ; mViewPortHandler . refresh ( save , this , _BOOL ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
5403	@ Override public boolean needParticipantsJoin ( ) throws RemoteException { return mgr . needParticipantsJoin ( ) ; }
5416	public void endNumber ( String string ) { }
5420	public static void initAllResources ( ) { if ( ! isLoaded ) { databaseManager = new SQLdatabaseManager ( applicationContext ) ; SettingsManager . getInstace ( ) . init ( ) ; Category . initPodcastsCatrgories ( ) ; SimpleCacheManager . getInstance ( ) . removeExpiredCache ( ) ; runMainService ( ) ; setAlarmManagerTasks ( ) ; isLoaded = _BOOL ; } }
5477	public < U > Domino < T , U > merge ( Domino < ? super R , ? extends U > domino1 , Domino < ? super R , ? extends U > domino2 ) { return merge ( ( Domino < R , U > [ ] ) new Domino [ ] { domino1 , domino2 } ) ; }
5556	public void populateAll ( ) throws GeneralException { this . populateUsedEntities ( ) ; this . populateCalledServices ( ) ; this . populateTriggeredServiceEcas ( ) ; }
5642	public static < T , U , V > ImmutablePair < T , V > withRight ( ImmutablePair < T , U > pair , V right ) { return new ImmutablePair < > ( pair . getLeft ( ) , right ) ; }
5682	public AemDialog ok ( ) { return clickDialogFooterButton ( OK_BUTTON_TEXT ) ; }
5948	public boolean matches ( String url ) { if ( ! enabled ) { return _BOOL ; } for ( Pattern pattern : getPatterns ( ) ) { Matcher matcher = pattern . matcher ( url ) ; if ( matcher . matches ( ) ) { return _BOOL ; } } return _BOOL ; }
5989	private List < String > buildIntervalStringList ( Collection < Interval > intervals ) { return intervals . stream ( ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; }
6043	public static void main ( String [ ] args ) { final DeploymentEventDTO build = createTestDeploymentEvent ( ) ; send ( build , ElasticsearchClient . DEPLOYMENT ) ; }
6184	private boolean hasXGeoLocationPermission ( Context context ) { String searchUrl = TemplateUrlService . getInstance ( ) . getUrlForSearchQuery ( _CHAR foo _CHAR ) ; return mSite . getAddress ( ) . matches ( searchUrl ) && GeolocationHeader . isGeoHeaderEnabledForUrl ( context , searchUrl , _BOOL ) ; }
6190	public void train ( Map CategoryValues , String sSuggestedCategory , String sFinalCategory ) { if ( CategoryValues == _NULL ) CategoryValues = new HashMap ( ) ; if ( CategoryValues . size ( ) > _NUM ) vPreviousDecisions . add ( new DecisionSupport ( CategoryValues , sSuggestedCategory , sFinalCategory ) ) ; }
6685	public ResizableDoubleArray copy ( ) { return new ResizableDoubleArray ( this ) ; }
6768	public void endHeader ( ) throws IOException { write ( _CHAR \ r \ n _CHAR ) ; }
6893	public static String quote ( String sentence ) { if ( ! sentence . contains ( _CHAR _CHAR_CHAR_CHAR _CHAR ) && ! sentence . contains ( _CHAR \ _CHAR _CHAR ) ) { return addDoubleQuotation ( sentence ) ; } else { return changeToConcat ( sentence ) ; } }
6958	public void cascadeParamChanges ( boolean cascade ) { this . cascadeChanges = cascade ; requestLayout ( ) ; }
7024	public boolean periodTypeIsValid ( ) { PeriodType periodType = _NULL ; for ( DataSet dataSet : getDataSets ( ) ) { if ( periodType != _NULL && ! periodType . equals ( dataSet . getPeriodType ( ) ) ) { return _BOOL ; } periodType = dataSet . getPeriodType ( ) ; } return _BOOL ; }
7104	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
7210	public boolean needToShowDecorations ( ) { return mShowDecorations ; }
7445	protected int processByte ( ) { return _NUM ; }
7583	public final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , Vertex vHead , Vertex vTail ) { Edge eRes = locateDirectedEdgeInGraph ( gGraph , vHead , vTail ) ; return eRes == _NULL ? locateDirectedEdgeInGraph ( gGraph , vTail , vHead ) : eRes ; }
7595	public Vector2f negate ( ) { return new Vector2f ( - x , - y ) ; }
7638	public static final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , Vertex vHead , Vertex vTail ) { Edge eRes = locateDirectedEdgeInGraph ( gGraph , vHead , vTail ) ; return eRes == _NULL ? locateDirectedEdgeInGraph ( gGraph , vTail , vHead ) : eRes ; }
7649	public Builder diskCacheSize ( Integer megabytes ) { this . diskCacheSize = megabytes ; return this ; }
7940	public void addCoreDataTagChanger ( final Long equipmentId , final ICoreDataTagChanger dataTagChanger ) { List < ICoreDataTagChanger > changers = coreDataTagChangers . get ( equipmentId ) ; if ( changers == _NULL ) { changers = new ArrayList < > ( ) ; coreDataTagChangers . put ( equipmentId , changers ) ; } changers . add ( dataTagChanger ) ; }
8436	void updateItem ( Barcode barcode ) { mBarcode = barcode ; postInvalidate ( ) ; }
8816	public static < T > Stream < T > opt2stream ( Optional < T > opt ) { return opt . map ( _NULL ) . orElseGet ( _NULL ) ; }
8843	public static int hsb ( float h , float s , float b ) { return Color . HSBtoRGB ( h , s , b ) ; }
8861	public boolean isEdgeUnit ( ) { return duration == - _NUM ; }
8869	public static Uri createDocumentDataString ( int id , String initialUrl ) { return new Uri . Builder ( ) . scheme ( UrlConstants . DOCUMENT_SCHEME ) . authority ( String . valueOf ( id ) ) . query ( initialUrl ) . build ( ) ; }
8926	public void requestHardReset ( ) { sendQueue . clear ( ) ; recvQueue . clear ( ) ; SerialMessage msg = new ControllerSetDefaultMessageClass ( ) . doRequest ( ) ; msg . attempts = _NUM ; enqueue ( msg ) ; zwaveNodes . clear ( ) ; enqueue ( new SerialApiGetInitDataMessageClass ( ) . doRequest ( ) ) ; logger . debug ( _CHAR ZWave controller hard reset _CHAR ) ; }
9039	private int unFilledSpacesInHeaderGroup ( int header ) { if ( mNumColumns == _NUM ) { return _NUM ; } int remainder = mDelegate . getCountForHeader ( header ) % mNumColumns ; return remainder == _NUM ? _NUM : mNumColumns - remainder ; }
9150	public static RetryPolicy infiniteRetry ( long baseBackoffTimeMs , long maxBackoffTimeMs ) { return new BoundExponentialBackoffRetryPolicy ( baseBackoffTimeMs , maxBackoffTimeMs , Integer . MAX_VALUE ) ; }
9238	private void resetSearchBarContextOpacity ( ) { mSearchBarContextOpacity = _NUM . f ; mSearchBarTermOpacity = _NUM . f ; }
9318	public void train ( Map CategoryValues , String sSuggestedCategory , String sFinalCategory ) { if ( CategoryValues == _NULL ) CategoryValues = new HashMap ( ) ; if ( CategoryValues . size ( ) > _NUM ) vPreviousDecisions . add ( new DecisionSupport ( CategoryValues , sSuggestedCategory , sFinalCategory ) ) ; }
9584	public static < T > IStoredList < T > createConcurrentList ( boolean segmented , boolean supportFifoPerSegment , Object StoredIndexValueInHashmap ) { return new ConcurrentSegmentedStoredListHashmapEntry < T > ( segmented , supportFifoPerSegment , StoredIndexValueInHashmap ) ; }
9797	public double dot ( Vector other ) { return x * other . x + y * other . y + z * other . z ; }
9848	public synchronized void rotate ( final Point2D p , double theta ) { m_itransform . transform ( p , m_tmpPoint ) ; rotateAbs ( m_tmpPoint , theta ) ; }
10113	public boolean equals ( Object o ) { if ( this == o ) return _BOOL ; if ( ! ( o instanceof EntryClass ) ) return _BOOL ; EntryClass t = ( EntryClass ) o ; return hash == t . hash ; }
10295	public JobRowFilter withJobField ( JobField jobField ) { return new JobRowFilter ( jobField , operation , values ) ; }
10304	public static int hsba ( float h , float s , float b , float a ) { return setAlpha ( Color . HSBtoRGB ( h , s , b ) , ( int ) ( a * _NUM + _NUM . _NUM ) & _NUM ) ; }
10384	public static Value noInvoke ( Value val ) { if ( val == _NULL || isInvoke ( val ) ) return _NULL ; else return val ; }
10556	protected MarketSearchQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
10582	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; registrarID . writeBytes ( out ) ; }
10662	private Permission createReadPermission ( String table ) { return _permissionResolver . resolvePermission ( Permissions . readSorTable ( new NamedResource ( table ) ) ) ; }
10664	public static final Optional < File > findSteamVRSettings ( final ArrayList < File > indexedSteamFolders ) { for ( final File f : indexedSteamFolders ) { final File currentFile = new File ( f . getAbsolutePath ( ) + SteamConstants . STEAM_VR_SETTINGS_LOCATION ) ; if ( currentFile . exists ( ) ) return Optional . ofNullable ( currentFile ) ; } return Optional . empty ( ) ; }
10712	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedFPATK_Instant_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
10742	public AemContentFinder clickTab ( String tabName ) { WebElement findElement = iconBar . findElement ( By . xpath ( String . format ( _CHAR ./ li [ contains ( @ id , _CHAR ) ] _CHAR , tabName ) ) ) ; bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ContentFinderActions . showContentFinderTab ( findElement ) ) ; return this ; }
11120	public static JSONObject rowToJSONObject ( JSONArray names , JSONTokener x ) throws JSONException { JSONArray ja = rowToJSONArray ( x ) ; return ja != _NULL ? ja . toJSONObject ( names ) : _NULL ; }
11254	public static boolean isCategoryChildOf ( ServletRequest request , String parentProductCategoryId , String productCategoryId ) { return isCategoryChildOf ( ( Delegator ) request . getAttribute ( _CHAR delegator _CHAR ) , ( LocalDispatcher ) request . getAttribute ( _CHAR dispatcher _CHAR ) , parentProductCategoryId , productCategoryId ) ; }
11324	public MessagesGetQuery timeOffset ( Integer value ) { return unsafeParam ( _CHAR time_offset _CHAR , value ) ; }
11415	public boolean contains ( Rectangle2D r ) { return contains ( r . getX ( ) , r . getY ( ) , r . getWidth ( ) , r . getHeight ( ) ) ; }
11823	public static SM_SYSTEM_MESSAGE STR_MSG_ALARM_COLD_GAME_IDAB1_DREADGION ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
11849	@ Override public String toString ( ) { return this . years + _CHAR : _CHAR + this . months + _CHAR : _CHAR + this . days + _CHAR : _CHAR + this . hours + _CHAR : _CHAR + this . minutes + _CHAR : _CHAR + this . seconds + _CHAR : _CHAR + this . milliseconds ; }
11877	public static final void sort ( Object [ ] a , int [ ] b , Comparator cmp ) { mergesort ( a , b , _NUM , a . length - _NUM , cmp ) ; }
11902	public void zoom ( float scaleX , float scaleY , float x , float y ) { Matrix save = mViewPortHandler . zoom ( scaleX , scaleY , x , y ) ; mViewPortHandler . refresh ( save , this , _BOOL ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
11964	public int detachChild ( Spatial child ) { if ( child == _NULL ) { throw new NullPointerException ( ) ; } if ( child . getParent ( ) == this ) { int index = children . indexOf ( child ) ; if ( index != - _NUM ) { detachChildAt ( index ) ; } return index ; } return - _NUM ; }
12039	private void deleteResult ( String name , Concept result ) { VarAdmin deleter = deleters . get ( name ) ; if ( deleter == _NULL ) return ; String id = result . getId ( ) ; if ( deleter . hasNoProperties ( ) ) { deleteConcept ( id ) ; } else { deleter . getProperties ( ) . forEach ( _NULL ) ; } }
12087	private static String convertToHTMLContent ( String content ) { content = replace ( content , _CHAR , _CHAR & amp ; _CHAR ) ; content = replace ( content , _CHAR_CHAR , _CHAR & quot ; _CHAR ) ; content = replace ( content , _CHAR , _CHAR & lt ; _CHAR ) ; return replace ( content , _CHAR , _CHAR & gt ; _CHAR ) ; }
12091	public int add ( E o ) { objectToInts . put ( o , counter ) ; intToObjects . add ( o ) ; return counter ++ ; }
12273	private boolean isPercentageDelta ( String string ) { String s = string . trim ( ) ; if ( s . length ( ) < _NUM ) return _BOOL ; return s . substring ( s . length ( ) - _NUM ) . equals ( _CHAR % _CHAR ) && isNumberDelta ( s . substring ( _NUM , s . length ( ) - _NUM ) ) ; }
12371	@ Override public void resolve ( AbsoluteTableIdentifier absoluteTableIdentifier ) { }
12473	public static final String [ ] splitToWords ( String sStr ) { return splitToWords ( sStr , _BOOL ) ; }
12542	private Map mapRegToGroups ( ServiceRegistrar reg , String [ ] curGroups ) { HashMap groupsMap = new HashMap ( _NUM ) ; groupsMap . put ( reg , curGroups ) ; return groupsMap ; }
12627	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPATK_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
12704	public Plane translate ( final Vector3D translation ) { final Plane plane = new Plane ( origin . add ( translation ) , w , tolerance ) ; plane . u = u ; plane . v = v ; return plane ; }
12803	public void onBorrow ( K key , R resource ) { }
12934	public static byte [ ] itoa ( int i ) { int size = ( i < _NUM ) ? stringSize ( - i ) + _NUM : stringSize ( i ) ; byte [ ] buf = new byte [ size ] ; getChars ( i , size , buf ) ; return buf ; }
13052	public AuthSignupQuery voice ( Boolean value ) { return unsafeParam ( _CHAR voice _CHAR , value ) ; }
13067	public Builder integerToCategorical ( String columnName , List < String > categoryStateNames ) { return transform ( new IntegerToCategoricalTransform ( columnName , categoryStateNames ) ) ; }
13112	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
13267	public static String collectionToDelimitedString ( Collection < String > coll , String delim ) { return collectionToDelimitedString ( coll , delim , _CHAR _CHAR , _CHAR _CHAR ) ; }
13336	public static boolean isPercentageDelta ( String string ) { String s = string . trim ( ) ; if ( s . length ( ) < _NUM ) return _BOOL ; return s . substring ( s . length ( ) - _NUM ) . equals ( _CHAR % _CHAR ) && isNumberDelta ( s . substring ( _NUM , s . length ( ) - _NUM ) ) ; }
13358	@ Override public boolean next ( ) { return leaf == _NULL ? _BOOL : leaf . next ( ) ; }
13402	private void resetSearchBarTermOpacity ( ) { mSearchBarContextOpacity = _NUM . f ; mSearchBarTermOpacity = _NUM . f ; }
13593	public void init ( int shadowColor , int position ) { mFadingShadow = new FadingShadow ( shadowColor ) ; mPosition = position ; postInvalidateOnAnimation ( ) ; }
13638	private void initialize ( ) throws BindException { String root = System . getProperty ( _CHAR org . jini . rio . tools . webster . root _CHAR ) ; if ( root == _NULL ) root = System . getProperty ( _CHAR user . dir _CHAR ) ; initialize ( root ) ; }
13675	private boolean useIsSameNode ( Node node ) { if ( node instanceof NodeImpl ) { return _BOOL ; } Document doc = node . getNodeType ( ) == Node . DOCUMENT_NODE ? ( Document ) node : node . getOwnerDocument ( ) ; return ( doc != _NULL && doc . getImplementation ( ) . hasFeature ( _CHAR Core _CHAR , _CHAR _NUM . _NUM _CHAR ) ) ; }
13684	public void endDocument ( ) { }
13746	public void start ( String tag , String name , String value ) { tag ( tag , name , value , _BOOL ) ; }
14229	public static SessionId generateIdentifier ( ) { SessionId sessionId = new SessionId ( ) ; sessionId . identifier = String . valueOf ( System . currentTimeMillis ( ) ) . concat ( _CHAR - _CHAR ) . concat ( UUID . randomUUID ( ) . toString ( ) ) ; return sessionId ; }
14321	public NodeReactor findNodeReactor ( IapMessageFields messageFields ) { for ( int i = _NUM ; i < nodeReactors . length ; i ++ ) { if ( messageFields . equalsReceiverNodeId ( this . nodeReactors [ i ] . nodeId ) ) { return nodeReactors [ i ] ; } } return _NULL ; }
14465	public void didStopRefreshing ( ) { if ( ! mSwipeRefreshLayout . isRefreshing ( ) ) return ; cancelStopRefreshingRunnable ( ) ; mSwipeRefreshLayout . postDelayed ( getStopRefreshingRunnable ( ) , STOP_REFRESH_ANIMATION_DELAY_MS ) ; }
14580	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
14841	protected IPreferenceStore doGetPreferenceStore ( ) { return SVNUIPlugin . getPlugin ( ) . getPreferenceStore ( ) ; }
15183	public static final void sort ( int [ ] a , int [ ] b ) { mergesort ( a , b , _NUM , a . length - _NUM ) ; }
15250	@ Override public final int readUnsignedShort ( ) throws IOException { dis . readFully ( work , _NUM , _NUM ) ; return ( ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) ) ; }
15313	public void unsetPermission ( String name ) { permissions . remove ( name . toLowerCase ( java . util . Locale . ENGLISH ) ) ; permissible . recalculatePermissions ( ) ; }
15340	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; registrarID . writeBytes ( out ) ; }
15362	public final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , Vertex vHead , Vertex vTail ) { Edge eRes = locateDirectedEdgeInGraph ( gGraph , vHead , vTail ) ; return eRes == _NULL ? locateDirectedEdgeInGraph ( gGraph , vTail , vHead ) : eRes ; }
15483	@ NonNull public Context createContext ( @ NonNull Object key , @ NonNull Context baseContext ) { return new FlowContextWrapper ( key , baseContext ) ; }
15745	@ Override public void endDocument ( ) throws SAXException { writeText4Links ( ) ; write ( _CHAR ) ; super . endDocument ( ) ; try { flush ( ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
15747	public void clearRoutingTasksList ( ) { this . productionRunRoutingTasks = _NULL ; }
15789	void pairWithSelf ( ) { if ( pair != _NULL ) { throw new IllegalStateException ( _CHAR Already paired . '' ) ; } pair = new ModelState ( ) ; pair . lastMoveOp = _NUM ; pair . id = id ; pair . position = position ; pair . hashCode = hashCode ; pair . pair = this ; }
15853	@ Override public boolean shouldOverrideUrlLoading ( WebView view , String url ) { return parentEngine . client . onNavigationAttempt ( url ) ; }
15963	public TSDataScanDir filterUpgradable ( ) { return new TSDataScanDir ( getDir ( ) , getFiles ( ) . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ) ; }
16004	public static boolean isDangerous ( double d ) { return Double . isInfinite ( d ) || Double . isNaN ( d ) || d == _NUM . _NUM ; }
16102	public JobRowFilter withOperation ( FilterOperation operation ) { return new JobRowFilter ( jobField , operation , values ) ; }
16182	private < T > Iterator < T > touch ( Iterator < T > iter ) { iter . hasNext ( ) ; return iter ; }
16184	protected static LazyNode cStringValue ( int index ) { return new LazyNode ( VALUE_STRING , index ) ; }
16263	private void applyRetrievedLengthLimit ( ) { Long friendly_msg_length = mFirebaseRemoteConfig . getLong ( _CHAR friendly_msg_length _CHAR ) ; mMessageEditText . setFilters ( new InputFilter [ ] { new InputFilter . LengthFilter ( friendly_msg_length . intValue ( ) ) } ) ; Log . d ( TAG , _CHAR FML is : _CHAR + friendly_msg_length ) ; }
16307	public Vector3f negate ( ) { return new Vector3f ( - x , - y , - z ) ; }
16491	public void splashscreenVisible ( ) { assert mSplashScreenVisibleTime == _NUM ; mSplashScreenVisibleTime = SystemClock . elapsedRealtime ( ) ; }
16545	public Path createClasspath ( ) { if ( classpath == _NULL ) { classpath = new Path ( getProject ( ) ) ; } return classpath . createPath ( ) ; }
16562	public static final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , Vertex vHead , Vertex vTail ) { Edge eRes = locateDirectedEdgeInGraph ( gGraph , vHead , vTail ) ; return eRes == _NULL ? locateDirectedEdgeInGraph ( gGraph , vTail , vHead ) : eRes ; }
16638	public Vector3f mult ( Vector3f vec ) { return mult ( vec , _NULL ) ; }
17014	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelBuffCounterATK_A_TO_ME ( int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillcaster , skillname ) ; }
17027	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ResurrectBase_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
17115	public static void writeRepetitiveString ( ObjectOutput out , String s ) throws IOException { if ( out instanceof MarshalOutputStream ) ( ( MarshalOutputStream ) out ) . writeRepetitiveObject ( s ) ; else writeString ( out , s ) ; }
17301	public static boolean isNameStart ( int c ) { return c < _NUM && ( CHARS [ c ] & MASK_NAME_START ) != _NUM ; }
17323	public static final void sort ( int [ ] a , int [ ] b , int length ) { mergesort ( a , b , _NUM , length - _NUM ) ; }
17329	public static final void sort ( int [ ] a , int [ ] b , int begin , int end ) { mergesort ( a , b , begin , end - _NUM ) ; }
17423	public final boolean canSet ( String field , Class type ) { return m_table . canSet ( field , type ) ; }
17560	public void populateAll ( ) throws GeneralException { for ( ServiceEcaAction ecaAction : serviceEcaRule . getEcaActionList ( ) ) { servicesCalledByThisServiceEca . add ( aif . getServiceArtifactInfo ( ecaAction . getServiceName ( ) ) ) ; UtilMisc . addToSortedSetInMap ( this , aif . allServiceEcaInfosReferringToServiceName , ecaAction . getServiceName ( ) ) ; } }
17811	private void recordNonLocalChange ( ) { synchronized ( myLock ) { mySeenNonSourceChanges = _BOOL ; stopFileListener ( ) ; } }
18060	protected String renderHighlight ( JSONArray hit ) { StringBuilder sb = new StringBuilder ( ) ; for ( Object o : hit ) { if ( sb . length ( ) != _NUM ) { sb . append ( _CHAR ... _CHAR ) ; } sb . append ( renderSingleHighlight ( getArray ( o , _CHAR parts _CHAR ) ) ) ; } return sb . toString ( ) ; }
18158	public static Color fromBGR ( int bgr ) throws IllegalArgumentException { Validate . isTrue ( ( bgr >> _NUM ) == _NUM , _CHAR Extrenuous data in : _CHAR , bgr ) ; return fromBGR ( bgr >> _NUM & BIT_MASK , bgr >> _NUM & BIT_MASK , bgr >> _NUM & BIT_MASK ) ; }
18227	public static double levelIdxToLevel ( int levelIdx ) { return levelIdx * _NUM . _NUM + _NUM ; }
18361	public PhotosGetAllQueryWithExtended skipHidden ( Boolean value ) { return unsafeParam ( _CHAR skip_hidden _CHAR , value ) ; }
18447	protected AdsGetDemographicsQuery ids ( String value ) { return unsafeParam ( _CHAR ids _CHAR , value ) ; }
18464	@ Override public String toString ( ) { return toString ( _BOOL ) ; }
18520	public LinkedHashMap < K , V > flatView ( ) { return entryStream ( ) . collect ( StreamUtils . toLinkedMap ( _NULL , _NULL ) ) ; }
18544	@ Override protected boolean doDelete ( File fileToDelete ) throws IOException { FileUtils . forceDelete ( fileToDelete ) ; return _BOOL ; }
18741	public boolean markSupported ( ) { return stream . markSupported ( ) ; }
18759	private Map mapRegToGroups ( ServiceRegistrar reg , String [ ] curGroups ) { HashMap groupsMap = new HashMap ( _NUM ) ; groupsMap . put ( reg , curGroups ) ; return groupsMap ; }
18864	public void startNumber ( ) { }
18994	public EditorFixture open ( @ NotNull final String relativePath , @ NotNull Tab tab ) { assertFalse ( _CHAR Should use _CHAR in test relative paths , not File . separator _CHAR , relativePath . contains ( _CHAR \\ _CHAR ) ) ; VirtualFile file = myFrame . findFileByRelativePath ( relativePath , _BOOL ) ; return open ( file , tab ) ; }
19041	@ Override public Node insertBefore ( Node newChild , Node refChild ) throws DOMException { return internalInsertBefore ( newChild , refChild , _BOOL ) ; }
19048	public void copyText ( ) { int end , start ; end = selectedCharField . getSelectionEnd ( ) ; start = selectedCharField . getSelectionStart ( ) ; selectedCharField . selectAll ( ) ; selectedCharField . copy ( ) ; selectedCharField . select ( start , end ) ; }
19108	public int generateValidTabId ( ) { return TabIdManager . getInstance ( ) . generateValidId ( Tab . INVALID_TAB_ID ) ; }
19822	public static final void sort ( int [ ] a , double [ ] b , int begin , int end ) { mergesort ( a , b , begin , end - _NUM ) ; }
19971	public static final void sort ( Object [ ] a , int [ ] b , int begin , int end , Comparator cmp ) { mergesort ( a , b , begin , end - _NUM , cmp ) ; }
20019	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
20102	@ Override public Node insertBefore ( Node newChild , Node refChild ) throws DOMException { return internalInsertBefore ( newChild , refChild , _BOOL ) ; }
20314	public ProtocolReactor findProtocolReactor ( IapMessageFields messageFields ) { for ( int i = _NUM ; i < protocolReactors . length ; i ++ ) { if ( messageFields . equalsSemanticProtocolId ( protocolReactors [ i ] . protocolId ) && messageFields . equalsSemanticProtocolVersion ( protocolReactors [ i ] . protocolVersion ) ) { return protocolReactors [ i ] ; } } return _NULL ; }
20321	public NewsfeedGetQuery startFrom ( String value ) { return unsafeParam ( _CHAR start_from _CHAR , value ) ; }
20562	public Iterator tuples ( ) { return new CompositeIterator ( edges ( ) , nodes ( ) ) ; }
20568	public void checkLevel ( int level ) { if ( ! Scene . v ( ) . doneResolving ( ) ) return ; checkLevelIgnoreResolving ( level ) ; }
20604	@ Override public IntComparator rowComparator ( ) { return comparator ; }
20840	public static final void sort ( float [ ] a , int [ ] b ) { mergesort ( a , b , _NUM , a . length - _NUM ) ; }
21200	public Builder stroke ( Boolean stroke ) { this . stroke = stroke ; return this ; }
21213	@ Override public void characters ( char [ ] ch , int start , int length ) throws SAXException { }
21298	@ Override protected void checkProperty ( String propertyId ) throws XMLConfigurationException { super . checkProperty ( propertyId ) ; }
21303	public boolean interiorContains ( S2LatLngRect other ) { return ( lat . interiorContains ( other . lat ) && lng . interiorContains ( other . lng ) ) ; }
21517	public static UUID maximumUuid ( ) { return new UUID ( getMostSignificantBits ( Long . MAX_VALUE ) , getLeastSignificantBits ( Integer . MAX_VALUE , Long . MAX_VALUE ) ) ; }
21555	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
21567	public List < SerialMessage > executeRefresh ( ZWaveThingChannel channel , ZWaveNode node ) { return new ArrayList < SerialMessage > ( ) ; }
21606	public PhotosGetAllQuery skipHidden ( Boolean value ) { return unsafeParam ( _CHAR skip_hidden _CHAR , value ) ; }
21727	public static String collectionToDelimitedString ( Collection < String > coll , String delim ) { return collectionToDelimitedString ( coll , delim , _CHAR _CHAR , _CHAR _CHAR ) ; }
21872	public static final void sort ( double [ ] a , int [ ] b ) { mergesort ( a , b , _NUM , a . length - _NUM ) ; }
22531	public static final void sort ( int [ ] a , double [ ] b ) { mergesort ( a , b , _NUM , a . length - _NUM ) ; }
22592	private < T > Iterator < T > touch ( Iterator < T > iter ) { iter . hasNext ( ) ; return iter ; }
23338	public int compareTo ( Object o ) { if ( ( o == DONT_CARE ) || ( this == DONT_CARE ) ) { return _NUM ; } else { return ordinal - ( ( Age ) o ) . ordinal ; } }
23339	public Builder fadeAnimation ( Boolean fadeAnimation ) { this . fadeAnimation = fadeAnimation ; return this ; }
23397	public void unregisterForUpdates ( ) { SigninManager manager = SigninManager . get ( getContext ( ) ) ; manager . removeSignInAllowedObserver ( this ) ; ProfileDownloader . removeObserver ( this ) ; }
23415	@ Override public byte [ ] readByteArray ( String filePath , long offset , int length ) { FileChannel fileChannel = updateCache ( filePath ) ; ByteBuffer byteBffer = read ( fileChannel , length , offset ) ; return byteBffer . array ( ) ; }
23502	private boolean supportsGooglePlayServices ( ) { return GooglePlayServicesUtil . isGooglePlayServicesAvailable ( this ) == ConnectionResult . SUCCESS ; }
23537	public void addCoreCommandTagChanger ( final Long equipmentId , final ICoreCommandTagChanger commandTagChanger ) { List < ICoreCommandTagChanger > changers = coreCommandTagChangers . get ( equipmentId ) ; if ( changers == _NULL ) { changers = new ArrayList < > ( ) ; coreCommandTagChangers . put ( equipmentId , changers ) ; } changers . add ( commandTagChanger ) ; }
23540	public static < S , K , V > Collector < S , ? , LinkedHashMap < K , V >> toLinkedMap ( Function < ? super S , ? extends K > keyMapper , Function < ? super S , ? extends V > valueMapper ) { return Collectors . toMap ( keyMapper , valueMapper , StreamUtils . throwingMerger ( ) , _NULL ) ; }
23565	public static SpawnTemplate addNewSpawn ( int worldId , int npcId , float x , float y , float z , byte heading , int respawnTime ) { SpawnTemplate spawnTemplate = createSpawnTemplate ( worldId , npcId , x , y , z , heading ) ; spawnTemplate . setRespawnTime ( respawnTime ) ; return spawnTemplate ; }
23666	public static boolean isNCNameStart ( int c ) { return c < _NUM && ( CHARS [ c ] & MASK_NCNAME_START ) != _NUM ; }
23668	public void assertTrue ( String errorMessage , boolean condition ) { if ( condition ) { return ; } fail ( errorMessage ) ; }
23729	public static SM_SYSTEM_MESSAGE STR_QUEST_GIVEUP_WHEN_DELETE_QUEST_ITEM_IMPOSSIBLE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23915	public static final void sort ( Object [ ] a , int [ ] b , int length , Comparator cmp ) { mergesort ( a , b , _NUM , length - _NUM , cmp ) ; }
23971	public < T > T load ( Class < T > service ) { synchronized ( providers ) { List < RegisteredServiceProvider < ? >> registered = providers . get ( service ) ; if ( registered == _NULL ) { return _NULL ; } return service . cast ( registered . get ( _NUM ) . getProvider ( ) ) ; } }
23999	@ Override public Set < String > vertexMatchPatternLabels ( ) { return Collections . emptySet ( ) ; }
24078	public void loadState ( final Graph graph , final Configuration configuration ) { configuration . subset ( PREFIX_SELECTED_TYPE_KEY ) . getKeys ( ) . forEachRemaining ( _NULL ) ; configuration . subset ( PREFIX_PERSISTENT_PROPERTIES ) . getKeys ( ) . forEachRemaining ( _NULL ) ; }
24213	public static < U > AtomicIntegerFieldUpdater < U > newUpdater ( Class < U > tclass , String fieldName ) { if ( UnsafeHolder . isAvailable ( ) ) { return new AtomicIntegerFieldUpdaterImpl < U > ( tclass , fieldName ) ; } return AtomicIntegerFieldUpdater . newUpdater ( tclass , fieldName ) ; }
24425	public int read ( ) throws IOException { if ( count <= pos ) { fill ( ) ; if ( count <= pos ) { return - _NUM ; } } return buf [ pos ++ ] & _NUM ; }
24483	public static Entity loadByUri ( String uri ) { return load ( uri ) ; }
24688	private static void rethrow ( RuntimeException e ) throws InvalidObjectException { if ( e instanceof NullPointerException || e instanceof IllegalArgumentException ) { InvalidObjectException ee = new InvalidObjectException ( e . getMessage ( ) ) ; ee . initCause ( e ) ; throw ee ; } throw e ; }
24873	public boolean isApproveData ( ) { return workflow != _NULL ; }
25067	@ DataProvider ( name = _CHAR circuits _CHAR ) public String [ ] [ ] createCircuitData ( ) { return new String [ ] [ ] { { _CHAR monza _CHAR , _CHAR Italy _CHAR } , { _CHAR spa _CHAR , _CHAR Belgium _CHAR } , { _CHAR sepang _CHAR , _CHAR Malaysia _CHAR } } ; }
25365	public static boolean isURI ( String tagName , String attrName ) { return ( attrName . equalsIgnoreCase ( _CHAR href _CHAR ) || attrName . equalsIgnoreCase ( _CHAR src _CHAR ) ) ; }
25496	public boolean isAggregation ( ) { return ! ( AggregationType . NONE . equals ( aggregationType ) || DataType . TEXT . equals ( dataType ) ) ; }
25518	public String eatId ( ) { if ( ! matchId ( ) ) throw new BadSyntaxException ( ) ; String s = tok . sval ; nextToken ( ) ; return s ; }
25546	@ Override public void beforeFirst ( ) { idx . beforeFirst ( searchRange ) ; }
25592	@ Override public boolean isEndOfStreamMarked ( ) throws IOException { checkClosedOrInError ( _CHAR isEndOfStreamMarked _CHAR ) ; long lastTxId = FutureUtils . result ( getLastLogRecordAsyncInternal ( _BOOL , _BOOL ) ) . getTransactionId ( ) ; return lastTxId == DistributedLogConstants . MAX_TXID ; }
25654	public Builder zoomAnimation ( Boolean zoomAnimation ) { this . zoomAnimation = zoomAnimation ; return this ; }
25895	public static void assertSame ( Complex expected , Complex actual ) { assertSame ( expected . getReal ( ) , actual . getReal ( ) ) ; assertSame ( expected . getImaginary ( ) , actual . getImaginary ( ) ) ; }
25915	public void run ( ) { try { while ( _BOOL ) { Reference ref = queue . remove ( ) ; ref . clear ( ) ; synchronized ( refs ) { refs . remove ( ref ) ; if ( refs . isEmpty ( ) ) { reaper = _NULL ; return ; } } } } catch ( InterruptedException e ) { } }
25960	public static UUID minimumUuid ( ) { return new UUID ( getMostSignificantBits ( _NUM ) , getLeastSignificantBits ( _NUM , _NUM ) ) ; }
26188	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
26213	public static String noSuchMethodException ( String className , String methodName ) { return _CHAR The _CHAR + methodName + _CHAR method in _CHAR + className + _CHAR class is necessary which does not exist . '' ; }
26293	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
26445	public Set < Map . Entry < String , JsonElement >> entrySet ( ) { return members . entrySet ( ) ; }
26511	public Fraction subtract ( Fraction fraction ) { return addSub ( fraction , _BOOL ) ; }
26597	public Value distinct ( Value obj ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
26613	public Vector2f subtract ( float valX , float valY ) { return new Vector2f ( x - valX , y - valY ) ; }
26782	@ NonNull @ Override protected ViewHolder createViewHolder ( @ LayoutRes int layout , @ NonNull ViewGroup parent ) { return new ViewHolder ( layout , parent ) ; }
26833	public PolyhedronsSet rotate ( final Vector3D center , final Rotation rotation ) { return ( PolyhedronsSet ) applyTransform ( new RotationTransform ( center , rotation ) ) ; }
27246	public static void angleToDefaultAngle ( double [ ] angle ) { for ( int i = _NUM ; i < angle . length ; i ++ ) { angle [ i ] = angleToDefaultAngle ( angle [ i ] ) ; } }
27402	public void parse ( ) { method_info mi ; int i ; for ( i = _NUM ; i < methods_count ; i ++ ) { mi = methods [ i ] ; mi . instructions = parseMethod ( mi ) ; } }
27732	public static void assertSame ( double expected , double actual ) { Assert . assertEquals ( expected , actual , _NUM ) ; }
27778	public static SM_SYSTEM_MESSAGE STR_SUBMIT_PETITION_FAILED_OUT_OF_QUOTA ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
27806	public static final void sort ( double [ ] a , int [ ] b , int begin , int end ) { mergesort ( a , b , begin , end - _NUM ) ; }
27825	public DefaultHibernateSpaceDataSourceConfigurer augmentInitialLoadEntries ( boolean augmentInitialLoadEntries ) { this . augmentInitialLoadEntries = augmentInitialLoadEntries ; return this ; }
28247	public static TimeZone toTimeZone ( String tzId ) { if ( UtilValidate . isEmpty ( tzId ) ) { return TimeZone . getDefault ( ) ; } else { return TimeZone . getTimeZone ( tzId ) ; } }
28399	public Builder bounceAtZoomLimits ( Boolean bounceAtZoomLimits ) { this . bounceAtZoomLimits = bounceAtZoomLimits ; return this ; }
28524	public void applyOnMembers ( Predicate < M > predicate ) { lock ( ) ; try { for ( TM member : members . values ( ) ) { if ( ! predicate . apply ( member . getObject ( ) ) ) { return ; } } } finally { unlock ( ) ; } }
28826	protected static JSONObject send ( String command ) throws Exception { return server . send ( command ) ; }
28869	public void unsetPermission ( Permission perm ) { unsetPermission ( perm . getName ( ) ) ; }
28937	@ Override public boolean contains ( short item ) { for ( int i = _NUM ; i < fLength ; i ++ ) { if ( fArray [ i ] == item ) { return _BOOL ; } } return _BOOL ; }
28940	protected final Object writeReplace ( ) { return this ; }
28992	public static final void sort ( double [ ] a , int [ ] b , int length ) { mergesort ( a , b , _NUM , length - _NUM ) ; }
29186	@ Override public void clear ( ) { nodes . clear ( ) ; dates = _NULL ; }
29202	protected boolean isIdColumn ( String columnName ) { return _CHAR _id _CHAR . equalsIgnoreCase ( columnName ) || _CHAR id _CHAR . equalsIgnoreCase ( columnName ) ; }
29281	public static Value local ( Value val ) { if ( val != _NULL && isLocal ( val ) ) return val ; else return _NULL ; }
29342	protected List < Match > findClosest ( Segment draggedEdge , List < Segment > edges ) { List < Match > closest = new ArrayList < Match > ( ) ; addClosest ( draggedEdge , edges , closest ) ; return closest ; }
29359	@ Override public boolean markSupported ( ) { return _BOOL ; }
29504	public boolean isUrlBlock ( ) { return isOptionEnabled ( UrlFilterRuleOption . URL_BLOCK ) ; }
29712	public static FifoSupport fromOld ( boolean isFifo ) { return isFifo ? FifoSupport . ALL : FifoSupport . OFF ; }
29731	@ Override public synchronized boolean isActive ( ) { return this . active ; }
29733	public GroupsBanUserQuery commentVisible ( Boolean value ) { return unsafeParam ( _CHAR comment_visible _CHAR , value ) ; }
29737	private boolean checkTombStones ( int level ) { switch ( level ) { case _NUM : if ( getNpcs ( _NUM ) . isEmpty ( ) && getNpcs ( _NUM ) . isEmpty ( ) && getNpcs ( _NUM ) . isEmpty ( ) ) { return _BOOL ; } break ; case _NUM : break ; } return _BOOL ; }
29825	public FileEntry newChildInstance ( File file ) { return new FileEntry ( this , file ) ; }
29862	public void endDocument ( ) throws SAXException { writeText4Links ( ) ; write ( _CHAR ) ; super . endDocument ( ) ; try { flush ( ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
29942	public Object jndiLookup ( String name ) throws NamingException { return getInitialContext ( ) . lookup ( name ) ; }
29992	public void justSelected ( ) { setCachedExpression ( generateExpression ( ) ) ; setValueFieldState ( ) ; }
30043	public static void main ( String [ ] args ) { final BuildDTO buildEvent = createTestBuildEvent ( ) ; send ( buildEvent , _CHAR build _CHAR ) ; }
30052	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
30153	public void close ( ) throws BrokerServiceException { subscription . removeConsumer ( this ) ; cnx . removedConsumer ( this ) ; }
30544	public static boolean isXML11NameStart ( int c ) { return ( c < _NUM && ( XML11CHARS [ c ] & MASK_XML11_NAME_START ) != _NUM ) || ( _NUM <= c && c < _NUM ) ; }
30588	@ Override public String toString ( ) { if ( val . getType ( ) . isNumeric ( ) ) return val . toString ( ) ; else return _CHAR _CHAR_CHAR_CHAR _CHAR ; }
30715	public GitRepository withWorkTree ( Path newWorkTree ) { return new GitRepository ( this . gitDir , newWorkTree , this . verbose , this . environment ) ; }
30777	public static SM_SYSTEM_MESSAGE STR_CAHT_ROOM_JOIN_SUCCESS ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
30986	public static TableMetadata readTableMetadata ( String fileName ) throws IOException { byte [ ] encoded = Files . readAllBytes ( Paths . get ( fileName ) ) ; return TableMetadata . fromJson ( new String ( encoded , StandardCharsets . UTF_8 ) ) ; }
31190	public boolean canSet ( String field , Class type ) { Column c = getColumn ( field ) ; return ( c == _NULL ? _BOOL : c . canSet ( type ) ) ; }
31237	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_JOIN_NOTIFY_SELF ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
31268	public static void main ( String [ ] args ) { final ApprovalEventDTO approval = createTestApprovalEvent ( ) ; send ( approval , ElasticsearchClient . APPROVE ) ; }
31435	public static final SandboxRay show ( Window owner , SandboxRay ray ) { EditRayDialog ard = new EditRayDialog ( owner , ray ) ; ard . setLocationRelativeTo ( owner ) ; ard . setVisible ( _BOOL ) ; if ( ! ard . canceled ) { return ard . rayPanel . getRay ( ) ; } return ray ; }
31437	private boolean hasPermission ( String permission ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M ) { return ( checkSelfPermission ( permission ) == PackageManager . PERMISSION_GRANTED ) ; } return _BOOL ; }
31439	public void applyUpdate ( Object update ) throws Exception { throw new UnsupportedOperationException ( _CHAR JoinStateManager : Updating log _CHAR + _CHAR , this should not happen _CHAR ) ; }
31467	protected int processChar ( ) { return _NUM ; }
31623	@ Override public boolean equals ( Object o ) { if ( o instanceof RepoResult == _BOOL ) { return _BOOL ; } RepoResult rr = ( RepoResult ) o ; if ( this . getName ( ) . equals ( rr . getName ( ) ) ) { return _BOOL ; } return _BOOL ; }
31965	protected FriendsDeleteQuery userId ( int value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
31998	public void addGatingSequences ( Sequence ... gatingSequences ) { sequencer . addGatingSequences ( gatingSequences ) ; }
32214	private boolean checkImplicit ( DAbruptStmt ab ) { SETNodeLabel label = ab . getLabel ( ) ; if ( label == _NULL ) return _BOOL ; if ( label . toString ( ) == _NULL ) return _BOOL ; return _BOOL ; }
32293	private static boolean relative ( InvocationConstraint c ) { return ( c instanceof RelativeTimeConstraint && ( ! ( c instanceof ConstraintAlternatives ) || ( ( ConstraintAlternatives ) c ) . relative ( ) ) ) ; }
32318	public void registerExtraGeneratedSourceFolder ( @ NotNull File folderPath ) { myExtraGeneratedSourceFolders . add ( folderPath ) ; }
32431	public void leave ( DelegateExecution execution ) { bpmnActivityBehavior . performDefaultOutgoingBehavior ( ( ExecutionEntity ) execution ) ; }
32435	public Builder fill ( Boolean fill ) { this . fill = fill ; return this ; }
32459	public < T > T inject ( Class < T > clazz , FramePath framePath ) { final ElementLocatorFactory elementLocatorFactory = new DefaultElementLocatorFactory ( webDriver ) ; stack . push ( new PageObjectContext ( elementLocatorFactory , framePath ) ) ; try { return injector . getInstance ( clazz ) ; } finally { stack . pop ( ) ; } }
32717	private static String escapeTagValue ( String tag_value ) { return tag_value . replace ( _CHAR \ _CHAR _CHAR , _CHAR \\\ _CHAR _CHAR ) ; }
32935	@ Override public String toString ( ) { return toString ( _BOOL ) ; }
32986	public static final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , String sHead , String sTail ) { VertexImpl vHead = new VertexImpl ( ) ; vHead . setLabel ( sHead ) ; VertexImpl vTail = new VertexImpl ( ) ; vTail . setLabel ( sTail ) ; return locateEdgeInGraph ( gGraph , vHead , vTail ) ; }
33056	public static boolean isXML11NameStart ( int c ) { return ( c < _NUM && ( XML11CHARS [ c ] & MASK_XML11_NAME_START ) != _NUM ) || ( _NUM <= c && c < _NUM ) ; }
33192	@ Override public int hashCode ( ) { return attribute . hashCode ( ) ; }
33420	private YearMonth with ( int newYear , int newMonth ) { if ( year == newYear && month == newMonth ) { return this ; } return new YearMonth ( newYear , newMonth ) ; }
33460	private boolean hasImageSyntax ( String attrName ) { Schema schema = getInfo ( ) . getServerDescriptor ( ) . getSchema ( ) ; return Utilities . hasImageSyntax ( attrName , schema ) ; }
33649	public boolean isActive ( ) { return active ; }
33684	public void addButtonActionListener ( ButtonActionListener l ) { for ( WizardStep s : hmPanels . keySet ( ) ) { getPanel ( s ) . addButtonActionListener ( l ) ; } }
33693	public final int indexOf ( Object elem ) { for ( int i = _NUM ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] == elem ) return i ; } return java . lang . Integer . MIN_VALUE ; }
33823	public KeyStoreBuilder withPassword ( final char [ ] password ) { this . password = password ; return this ; }
33915	private boolean isSimilarSignature ( Method possiblyMatchingMethod , String desiredMethodName , Class < ? > [ ] desiredParamTypes ) { return possiblyMatchingMethod . getName ( ) . equals ( desiredMethodName ) && match ( possiblyMatchingMethod . getParameterTypes ( ) , desiredParamTypes ) ; }
33965	public void updateIsSmallScreen ( int panelHeight ) { mIsSmallScreen = panelHeight < mCollapsedSize + mBottomStackSlowDownLength + mBottomStackPeekSize + mMaxNotificationHeight ; }
34064	public static final void addLoggingBehavior ( LoggingBehavior behavior ) { synchronized ( loggingBehaviors ) { loggingBehaviors . add ( behavior ) ; } }
34104	@ Override public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } if ( obj instanceof Year ) { return year == ( ( Year ) obj ) . year ; } return _BOOL ; }
34115	public int indexOf ( int elem ) { if ( _NULL == m_map ) return - _NUM ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { int node = m_map [ i ] ; if ( node == elem ) return i ; } return - _NUM ; }
34134	public boolean isCachedMemory ( ) { return _BOOL ; }
34172	public DiffOptions attributes ( final AttributeFilter attributeFilter ) { Reject . ifNull ( attributeFilter ) ; this . attributeFilter = attributeFilter ; return this ; }
34206	public static void serialize ( XMPMeta xmp , OutputStream out ) throws XMPException { serialize ( xmp , out , _NULL ) ; }
34247	public void addExtension ( ASN1ObjectIdentifier oid , boolean critical , byte [ ] value ) { if ( extensions . containsKey ( oid ) ) { throw new IllegalArgumentException ( _CHAR extension _CHAR + oid + _CHAR already added _CHAR ) ; } extOrdering . addElement ( oid ) ; extensions . put ( oid , new Extension ( oid , critical , new DEROctetString ( value ) ) ) ; }
34286	public NSObject put ( String key , Object obj ) { return put ( key , NSObject . wrap ( obj ) ) ; }
34311	public void nodeStructureChanged ( TreeNode node ) { if ( node != _NULL ) { fireTreeStructureChanged ( this , getPathToRoot ( node ) , _NULL , _NULL ) ; } }
34319	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
34406	public boolean isCompatibleSampleModel ( SampleModel sm ) { if ( ! ( sm instanceof ComponentSampleModel ) ) { return _BOOL ; } if ( numComponents != sm . getNumBands ( ) ) { return _BOOL ; } if ( sm . getTransferType ( ) != transferType ) { return _BOOL ; } return _BOOL ; }
34410	public void addButtonActionListener ( ButtonActionListener l ) { buttonListeners . add ( l ) ; }
34535	public static String removeLast ( String original , String string ) { int lastIndexOf = original . lastIndexOf ( string ) ; if ( lastIndexOf == - _NUM ) { return original ; } return original . substring ( _NUM , lastIndexOf ) ; }
34606	@ Override public boolean hasEntitlementDITs ( ) { try { new ServiceSchemaManager ( SERVICE_NAME , EntitlementUtils . getAdminToken ( ) ) ; return _BOOL ; } catch ( SMSException ex ) { return _BOOL ; } catch ( SSOException ex ) { return _BOOL ; } }
34640	public void debugError ( String message , Exception e ) { debug . error ( message , e ) ; }
34991	public XMLString toUpperCase ( Locale locale ) { return new XString ( str ( ) . toUpperCase ( locale ) ) ; }
35014	void compWriteObjectNotify ( ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , ( byte ) ( count + _NUM ) ) ; if ( count != _NUM ) { return ; } uninstallUIAndProperties ( ) ; if ( getToolTipText ( ) != _NULL || this instanceof javax . swing . table . JTableHeader ) { ToolTipManager . sharedInstance ( ) . unregisterComponent ( JComponent . this ) ; } }
35029	public void processAttributes ( java . io . Writer writer , int nAttrs ) throws IOException , SAXException { for ( int i = _NUM ; i < nAttrs ; i ++ ) { processAttribute ( writer , m_attributes . getQName ( i ) , m_attributes . getValue ( i ) , m_elemContext . m_elementDesc ) ; } }
35119	public String encodeURL ( String url , boolean escape , String cookieName , Session session ) { return encodeSessionURL ( url , SessionUtils . QUERY , escape , cookieName , session ) ; }
35167	public static Position [ ] simplify ( Position [ ] points ) { return simplify ( points , SIMPLIFY_DEFAULT_TOLERANCE , SIMPLIFY_DEFAULT_HIGHEST_QUALITY ) ; }
35176	@ Override public final int read ( ) throws IOException { return Util . readSingleByte ( this ) ; }
35180	public final int indexOf ( int elem ) { for ( int i = _NUM ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] == elem ) return i ; } return java . lang . Integer . MIN_VALUE ; }
35361	public synchronized < T > Observable < T > observeEvent ( RXQueueKey key ) { if ( key == _NULL ) throw new RuntimeException ( _CHAR You ca n _CHAR_CHAR ) ; SerializedSubject subject = getSubject ( key , true ) ; return subject ; }
35408	public CipherParameters generateDerivedMacParameters ( int keySize ) { keySize = keySize / _NUM ; byte [ ] dKey = generateDerivedKey ( MAC_MATERIAL , keySize ) ; return new KeyParameter ( dKey , _NUM , keySize ) ; }
35416	public Duration multipliedBy ( long multiplicand ) { if ( multiplicand == _NUM ) { return ZERO ; } if ( multiplicand == _NUM ) { return this ; } return create ( toSeconds ( ) . multiply ( BigDecimal . valueOf ( multiplicand ) ) ) ; }
35439	public int availablePermits ( ) { return sync . getPermits ( ) ; }
35467	public Executor inheritEnv ( boolean b ) { this . inheritEnv = b ; return this ; }
35582	int [ ] findNearestVacantArea ( int pixelX , int pixelY , int minSpanX , int minSpanY , int spanX , int spanY , int [ ] result , int [ ] resultSpan ) { return findNearestArea ( pixelX , pixelY , minSpanX , minSpanY , spanX , spanY , _BOOL , result , resultSpan ) ; }
35639	@ Override public ErrorPage findErrorPage ( int errorCode ) { return statusPages . get ( Integer . valueOf ( errorCode ) ) ; }
35768	public boolean isServiceIdentifier ( ) { return ( isServiceIdentifier ) ; }
35806	void updateItem ( Barcode barcode ) { mBarcode = barcode ; postInvalidate ( ) ; }
35848	public void internalEntityDecl ( String name , String value ) throws SAXException { }
36057	private static synchronized String makeDateStringGnuStep ( Date date ) { return sdfGnuStep . format ( date ) ; }
36125	public boolean isMXBean ( ) { return isMXBean ; }
36408	@ Override public void close ( ) throws IOException { PipedInputStream stream = target ; if ( stream != _NULL ) { stream . done ( ) ; target = _NULL ; } }
36498	public static void logSearchResultEntry ( SearchOperation searchOperation , SearchResultEntry searchEntry ) { for ( AccessLogPublisher < ? > publisher : getAccessLogPublishers ( ) ) { publisher . logSearchResultEntry ( searchOperation , searchEntry ) ; } }
36508	public static int dpToPixel ( Context context , int dp ) { DisplayMetrics displayMetrics = context . getResources ( ) . getDisplayMetrics ( ) ; return dp < _NUM ? dp : Math . round ( dp * displayMetrics . density ) ; }
36626	public void addExtension ( ASN1ObjectIdentifier oid , boolean critical , byte [ ] value ) { if ( extensions . containsKey ( oid ) ) { throw new IllegalArgumentException ( _CHAR extension _CHAR + oid + _CHAR already added _CHAR ) ; } extOrdering . addElement ( oid ) ; extensions . put ( oid , new X509Extension ( critical , new DEROctetString ( value ) ) ) ; }
36958	@ Override public synchronized void flush ( ) throws IOException { checkNotClosed ( ) ; flushInternal ( ) ; out . flush ( ) ; }
37015	private static String convertJava2MimeEncoding ( String encoding ) { EncodingInfo enc = ( EncodingInfo ) _encodingTableKeyJava . get ( toUpperCaseFast ( encoding ) ) ; if ( _NULL != enc ) return enc . name ; return encoding ; }
37056	public boolean show ( Container c , int x , int y , int w , int h ) { return _BOOL ; }
37087	public double dot ( Vector other ) { return x * other . x + y * other . y + z * other . z ; }
37271	public static Cookie newCookie ( String name , String value , String path ) { return newCookie ( name , value , defAge , path , _NULL ) ; }
37326	@ AfterClass public void freeDictionaryMemory ( ) throws Exception { TestCaseUtils . restartServer ( ) ; }
37350	boolean isSecureReplicationEnabled ( ) { return secureReplicationEnabled ; }
37351	public static Cookie newCookie ( String name , String value , String path ) { return newCookie ( name , value , defAge , path , _NULL ) ; }
37388	protected ReadRequest newValidateRequest ( JsonValue relationshipField ) { return Requests . newReadRequest ( relationshipField . get ( REFERENCE_ID ) . asString ( ) ) . addField ( getRelationshipProvider ( ) . getSchemaField ( ) . getReversePropertyName ( ) ) ; }
37563	public final void signal ( ) { if ( ! isHeldExclusively ( ) ) throw new IllegalMonitorStateException ( ) ; Node first = firstWaiter ; if ( first != _NULL ) doSignal ( first ) ; }
37604	public final void initSign ( PrivateKey privateKey , SecureRandom random ) throws InvalidKeyException { engineInitSign ( privateKey , random ) ; state = SIGN ; if ( ! skipDebug && pdebug != _NULL ) { pdebug . println ( _CHAR Signature . '' + algorithm + _CHAR signing algorithm from : _CHAR + this . provider . getName ( ) ) ; } }
37640	public final void initSign ( PrivateKey privateKey ) throws InvalidKeyException { engineInitSign ( privateKey ) ; state = SIGN ; if ( ! skipDebug && pdebug != _NULL ) { pdebug . println ( _CHAR Signature . '' + algorithm + _CHAR signing algorithm from : _CHAR + this . provider . getName ( ) ) ; } }
37757	public void paintToolBarContentBorder ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintBorder ( context , g , x , y , w , h , orientation ) ; }
37913	public DateTimeFormatter withDecimalStyle ( DecimalStyle decimalStyle ) { if ( this . decimalStyle . equals ( decimalStyle ) ) { return this ; } return new DateTimeFormatter ( printerParser , locale , decimalStyle , resolverStyle , resolverFields , chrono , zone ) ; }
38195	int [ ] findNearestVacantArea ( int pixelX , int pixelY , int spanX , int spanY , int [ ] result ) { return findNearestVacantArea ( pixelX , pixelY , spanX , spanY , spanX , spanY , result , _NULL ) ; }
38235	protected void updateNextObject ( ) { if ( ! updateNextIndex ( ) ) { findNextValidParent ( ) ; } }
38321	public boolean currentTemplateRuleIsNull ( ) { return ( ( ! m_currentTemplateRuleIsNull . isEmpty ( ) ) && ( m_currentTemplateRuleIsNull . peek ( ) == _BOOL ) ) ; }
38527	public AMSearchResults searchPeopleContainers ( String wildcard , AMSearchControl searchControl ) throws AMException , SSOException { return searchPeopleContainers ( wildcard , _NULL , searchControl ) ; }
38764	public static boolean isXML11NCName ( int c ) { return ( c < _NUM && ( XML11CHARS [ c ] & MASK_XML11_NCNAME ) != _NUM ) || ( _NUM <= c && c < _NUM ) ; }
38832	public boolean isTopDown ( ) { return topDown ; }
38902	public boolean canWriteProgressive ( ) { return canWriteProgressive ; }
39150	@ SuppressWarnings ( _CHAR UnusedDeclaration _CHAR ) public static String downloadString ( URL url , Proxy proxy ) { return downloadString ( url , proxy , DEFAULT_READ_TIMEOUT , DEFAULT_SOCKET_TIMEOUT , _CHAR utf - _NUM _CHAR ) ; }
39204	public synchronized void reset ( ) { count = _NUM ; }
39283	public void interrupt ( ) { interrupt = _BOOL ; while ( ! done ) { try { readerThread . interrupt ( ) ; } catch ( Throwable t ) { } } }
39338	public static QueryExp finalSubString ( AttributeValueExp a , StringValueExp s ) { return new MatchQueryExp ( a , new StringValueExp ( _CHAR * _CHAR + escapeString ( s . getValue ( ) ) ) ) ; }
39358	protected void paintBorder ( Graphics g ) { if ( isBorderPainted ( ) ) { super . paintBorder ( g ) ; } }
39369	private boolean isSimilarSignature ( Method possiblyMatchingMethod , String desiredMethodName , Class < ? > [ ] desiredParamTypes ) { return possiblyMatchingMethod . getName ( ) . equals ( desiredMethodName ) && match ( possiblyMatchingMethod . getParameterTypes ( ) , desiredParamTypes ) ; }
39492	public AMSearchResults searchUsers ( String wildcard , AMSearchControl searchControl ) throws AMException , SSOException { return searchUsers ( wildcard , _NULL , searchControl ) ; }
39525	public static void showLoading ( @ NonNull View loadingView , @ NonNull View contentView , @ NonNull View errorView ) { contentView . setVisibility ( View . GONE ) ; errorView . setVisibility ( View . GONE ) ; loadingView . setVisibility ( View . VISIBLE ) ; }
39629	private void adjust_corners ( ) { int check_len = plaline_len ( - _NUM ) ; for ( int index = _NUM ; index < check_len ; index ++ ) { adjust_corner ( index ) ; } }
39732	public boolean supportsAuthentication ( ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR AMSDKRepo : supportsAuthentication . '' + _CHAR authenticationEnabled = _CHAR + _BOOL ) ; } return ( _BOOL ) ; }
39765	public boolean isLDAPSubentry ( ) { return hasObjectClass ( OC_LDAP_SUBENTRY_LC ) ; }
39985	public String filter ( final String template , final Object ... assertionValues ) { return Filter . format ( template , assertionValues ) . toString ( ) ; }
40052	public Object parse ( InputStream input ) throws IOException , SAXException { configure ( ) ; InputSource is = new InputSource ( input ) ; getXMLReader ( ) . parse ( is ) ; return ( root ) ; }
40267	public void insert ( String str , int pos ) { Document doc = getDocument ( ) ; if ( doc != _NULL ) { try { doc . insertString ( pos , str , _NULL ) ; } catch ( BadLocationException e ) { throw new IllegalArgumentException ( e . getMessage ( ) ) ; } } }
40280	public int indexOf ( int elem , int index ) { if ( _NULL == m_map ) return - _NUM ; for ( int i = index ; i < m_firstFree ; i ++ ) { int node = m_map [ i ] ; if ( node == elem ) return i ; } return - _NUM ; }
40638	@ Override public void flush ( ) throws IOException { super . flush ( ) ; }
40979	public void fireTableCellUpdated ( int row , int column ) { fireTableChanged ( new TableModelEvent ( this , row , row , column ) ) ; }
41040	public static boolean isXML11NCName ( int c ) { return ( c < _NUM && ( XML11CHARS [ c ] & MASK_XML11_NCNAME ) != _NUM ) || ( _NUM <= c && c < _NUM ) ; }
41249	private void assertBounded ( SortedSet < String > deserialized , boolean bounded ) { if ( bounded ) { try { deserialized . add ( _CHAR e _CHAR ) ; fail ( ) ; } catch ( IllegalArgumentException expected ) { } } else { assertTrue ( deserialized . add ( _CHAR e _CHAR ) ) ; assertTrue ( deserialized . remove ( _CHAR e _CHAR ) ) ; } }
41336	public static Color fromBGR ( int bgr ) throws IllegalArgumentException { Validate . isTrue ( ( bgr >> _NUM ) == _NUM , _CHAR Extrenuous data in : _CHAR , bgr ) ; return fromBGR ( bgr >> _NUM & BIT_MASK , bgr >> _NUM & BIT_MASK , bgr >> _NUM & BIT_MASK ) ; }
41384	public CipherParameters generateDerivedMacParameters ( int keySize ) { return generateDerivedParameters ( keySize ) ; }
41427	private static String removeSpace ( String s ) { return s . trim ( ) . replace ( _CHAR _CHAR , _CHAR _CHAR ) ; }
41477	public void preSSOFederationProcess ( String hostedProviderID , HttpServletRequest request , HttpServletResponse response , FSAuthnRequest authnRequest , FSAuthnResponse authnResponse , FSResponse samlResponse ) throws FederationException { FSUtils . debug . message ( _CHAR In FSDefaultSPAdapter . preSSOFederationProcess . '' ) ; }
41573	public static boolean isNCNameStart ( int c ) { return c < _NUM && ( CHARS [ c ] & MASK_NCNAME_START ) != _NUM ; }
41657	protected void removeDescendantToggledPaths ( Enumeration < TreePath > toRemove ) { if ( toRemove != _NULL ) { while ( toRemove . hasMoreElements ( ) ) { Enumeration < ? > descendants = getDescendantToggledPaths ( toRemove . nextElement ( ) ) ; if ( descendants != _NULL ) { while ( descendants . hasMoreElements ( ) ) { expandedState . remove ( descendants . nextElement ( ) ) ; } } } } }
41685	private boolean isPopupMenu ( ) { return ( ( invoker != _NULL ) && ! ( invoker instanceof JMenu ) ) ; }
41807	public boolean isStatic ( ) { if ( innerClasses == _NULL ) { return _BOOL ; } else { int flags = innerClasses . getFlagsFor ( getInternalName ( ) ) ; if ( flags >= _NUM ) return java . lang . reflect . Modifier . isStatic ( flags ) ; else return _BOOL ; } }
41956	public void markCompletelyDirty ( JComponent aComponent ) { RepaintManager delegate = getDelegate ( aComponent ) ; if ( delegate != _NULL ) { delegate . markCompletelyDirty ( aComponent ) ; return ; } addDirtyRegion ( aComponent , _NUM , _NUM , Integer . MAX_VALUE , Integer . MAX_VALUE ) ; }
42062	public void show ( ) { show ( _NULL ) ; }
42074	public TagField createField ( String vorbisCommentFieldKey , String value ) { if ( value == _NULL ) { throw new IllegalArgumentException ( ErrorMessage . GENERAL_INVALID_NULL_ARGUMENT . getMsg ( ) ) ; } return new VorbisCommentTagField ( vorbisCommentFieldKey , value ) ; }
42087	public boolean isBefore ( Instant otherInstant ) { return compareTo ( otherInstant ) < _NUM ; }
42110	public FileEntry newChildInstance ( File file ) { return new FileEntry ( this , file ) ; }
42187	public static boolean isNCNameStart ( int c ) { return c < _NUM && ( CHARS [ c ] & MASK_NCNAME_START ) != _NUM ; }
42266	public boolean removeParameter ( final String name ) { return this . local . removeParameter ( name ) ; }
42785	byte [ ] wrap ( final byte [ ] clearBytes , final int offset , final int len ) throws SaslException { return saslServer . wrap ( clearBytes , offset , len ) ; }
42918	public Object object ( ) { return str ( ) ; }
43024	public String decode ( String pString ) throws DecoderException { if ( pString == _NULL ) { return _NULL ; } try { return decode ( pString , getDefaultCharset ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
43134	private static String KD ( String secret , String data ) { return H ( secret + _CHAR : _CHAR + data ) ; }
43141	public void installChooserPanel ( JColorChooser enclosingChooser ) { super . installChooserPanel ( enclosingChooser ) ; }
43168	public static Condition isPresent ( String propertyName ) { return new IsPresentCondition ( propertyName ) ; }
43216	public boolean isAfter ( Instant otherInstant ) { return compareTo ( otherInstant ) > _NUM ; }
43235	protected int processByte ( ) { return _NUM ; }
43282	public static int remainderUnsigned ( int dividend , int divisor ) { return ( int ) ( toUnsignedLong ( dividend ) % toUnsignedLong ( divisor ) ) ; }
43325	public static String convertMime2JavaEncoding ( String encoding ) { for ( int i = _NUM ; i < _encodings . length ; ++ i ) { if ( _encodings [ i ] . name . equalsIgnoreCase ( encoding ) ) { return _encodings [ i ] . javaName ; } } return encoding ; }
43327	public void registerEngineName ( String name , ScriptEngineFactory factory ) { if ( name == _NULL || factory == _NULL ) throw new NullPointerException ( ) ; nameAssociations . put ( name , factory ) ; }
43431	public TokenFilterBuilder withSizeLimit ( int sizeLimit ) { tokenFilter . setSizeLimit ( sizeLimit ) ; return this ; }
43457	public void internalEntityDecl ( String name , String value ) throws SAXException { if ( m_inExternalDTD ) return ; try { DTDprolog ( ) ; outputEntityDecl ( name , value ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
43502	protected void paintBorder ( Graphics g ) { if ( isBorderPainted ( ) ) { super . paintBorder ( g ) ; } }
43572	public java . sql . Timestamp readTimestamp ( ) throws SQLException { return ( java . sql . Timestamp ) getNextAttribute ( ) ; }
43576	@ Override public int hashCode ( ) { return structuralClassOID . hashCode ( ) ; }
43654	public Object clone ( ) { return this ; }
43735	public final Node peepOrNull ( ) { return ( ( _NULL != m_map ) && ( m_firstFree > _NUM ) ) ? m_map [ m_firstFree - _NUM ] : _NULL ; }
43800	private synchronized void removeLock ( FileLock lock ) { locks . remove ( lock ) ; }
44012	public CipherParameters generateDerivedMacParameters ( int keySize ) { return generateDerivedParameters ( keySize ) ; }
44081	public synchronized < T > Observable < T > observeEvent ( Class < T > eventClass , String key ) { return observeEvent ( new RXQueueKey ( eventClass , key ) ) ; }
44243	void calculate_new_incomplete_rooms ( ArtEngine p_autoroute_engine ) { SortedRoom prev_neighbour = sorted_neighbours . last ( ) ; ShapeTileSimplex room_simplex = from_room . get_shape ( ) . to_Simplex ( ) ; for ( SortedRoom next_neighbour : sorted_neighbours ) { prev_neighbour = calculate_new_incomplete_rooms ( p_autoroute_engine , room_simplex , prev_neighbour , next_neighbour ) ; } }
44325	public final void signal ( ) { if ( ! isHeldExclusively ( ) ) throw new IllegalMonitorStateException ( ) ; Node first = firstWaiter ; if ( first != _NULL ) doSignal ( first ) ; }
44346	public void paintToolBarContentBorder ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintToolBarContentBorder ( context , g , x , y , w , h ) ; }
44408	public TagField createField ( String vorbisCommentFieldKey , String value ) { if ( vorbisCommentFieldKey . equals ( VorbisCommentFieldKey . COVERART . getFieldName ( ) ) ) { throw new UnsupportedOperationException ( ErrorMessage . ARTWORK_CANNOT_BE_CREATED_WITH_THIS_METHOD . getMsg ( ) ) ; } return tag . createField ( vorbisCommentFieldKey , value ) ; }
44452	public void valueChanged ( ListSelectionEvent e ) { fireColumnSelectionChanged ( e ) ; }
44541	@ Override public void checkClientTrusted ( X509Certificate [ ] chain , String authType ) { }
44596	public Set searchUsers ( String wildcard , int level ) throws AMException , SSOException { return searchUsers ( wildcard , _NULL , level ) ; }
44700	public boolean before ( Timestamp ts ) { return compareTo ( ts ) < _NUM ; }
44757	public CipherParameters generateDerivedMacParameters ( int keySize ) { return generateDerivedParameters ( keySize ) ; }
44769	public static boolean isBase64 ( final String base64 ) { return isBase64 ( StringUtils . getBytesUtf8 ( base64 ) ) ; }
44865	public Set searchPeopleContainers ( String wildcard , int level ) throws AMException , SSOException { return searchPeopleContainers ( wildcard , _NULL , level ) ; }
44886	@ Override public String toString ( ) { return name ; }
45163	protected ComponentListener createComponentListener ( ) { return new ComponentHandler ( ) ; }
45173	public static void deregisterRetentionPolicy ( DN configEntryDN ) { Reject . ifNull ( configEntryDN ) ; directoryServer . retentionPolicies . remove ( configEntryDN ) ; }
45182	public static Objectify ofy ( ) { return ObjectifyService . ofy ( ) ; }
45185	protected void paintBorder ( Graphics g ) { if ( isBorderPainted ( ) ) { super . paintBorder ( g ) ; } }
45215	private int constrainOffset ( JTextComponent text , int offset ) { Document doc = text . getDocument ( ) ; if ( ( offset != _NUM ) && ( offset > doc . getLength ( ) ) ) { offset = doc . getLength ( ) ; } if ( offset < _NUM ) { offset = _NUM ; } return offset ; }
45286	public void hide ( ) { hide ( _NULL ) ; }
45398	public Object remove ( Object name ) { return map . remove ( name ) ; }
45572	private boolean supportedType ( Class < ? > ret ) { for ( int i = _NUM ; i < supportedTypes . length ; i ++ ) { if ( ret == supportedTypes [ i ] ) { return _BOOL ; } } if ( isBeanCompatible ( ret ) ) { return _BOOL ; } return _BOOL ; }
45607	public static String colon ( String self , String ratio , String colon ) { return COLON . matcher ( RATIO . matcher ( self ) . replaceAll ( ratio ) ) . replaceAll ( colon ) ; }
45622	static boolean eq ( Object o1 , Object o2 ) { return o1 == _NULL ? o2 == _NULL : o1 . equals ( o2 ) ; }
45634	public final Collection < AwtreeFindEntry > find_overlap_tree_entries ( ShapeConvex p_shape , int p_layer ) { return find_overlap_tree_entries ( p_shape , p_layer , NetNosList . EMPTY ) ; }
45850	public Socket accept ( ) throws IOException { checkOpen ( ) ; if ( ! isBound ( ) ) { throw new SocketException ( _CHAR Socket is not bound _CHAR ) ; } Socket aSocket = new Socket ( ) ; try { implAccept ( aSocket ) ; } catch ( IOException e ) { aSocket . close ( ) ; throw e ; } return aSocket ; }
46023	public boolean isValidToken ( SSOToken token ) { return isValidToken ( token , _BOOL ) ; }
46101	public static ArgumentException unableToSetNamingProperty ( AbstractManagedObjectDefinition < ? , ? > d , PropertyDefinition < ? > pd ) { LocalizableMessage message = ERR_DSCFG_ERROR_UNABLE_TO_SET_NAMING_PROPERTY . get ( pd . getName ( ) , d . getUserFriendlyName ( ) ) ; return new ArgumentException ( message ) ; }
46156	public int indexOf ( int elem , int index ) { runTo ( - _NUM ) ; return super . indexOf ( elem , index ) ; }
46175	public void registerEngineMimeType ( String type , ScriptEngineFactory factory ) { if ( type == _NULL || factory == _NULL ) throw new NullPointerException ( ) ; mimeTypeAssociations . put ( type , factory ) ; }
46202	public static DN makeChildDN ( DN parentDN , AttributeType rdnAttrType , String rdnStringValue ) { ByteString attrValue = ByteString . valueOfUtf8 ( rdnStringValue ) ; return parentDN . child ( new RDN ( rdnAttrType , attrValue ) ) ; }
46498	public synchronized < T > Observable < T > observeEvent ( Class < T > eventClass , Integer key ) { return observeEvent ( new RXQueueKey ( eventClass , key ) ) ; }
46513	public static JEditorPane makeHtmlPane ( LocalizableMessage text , Font font ) { return makeHtmlPane ( text , _NULL , font ) ; }
46707	public final int indexOf ( int elem , int index ) { for ( int i = index ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] == elem ) return i ; } return java . lang . Integer . MIN_VALUE ; }
46723	public final int lastIndexOf ( Object elem ) { for ( int i = ( m_firstFree - _NUM ) ; i >= _NUM ; i -- ) { if ( m_map [ i ] == elem ) return i ; } return java . lang . Integer . MIN_VALUE ; }
46930	@ Deprecated public static boolean isUnique ( ) { return _BOOL ; }
47004	public static final short secondaryOrder ( int order ) { return ( short ) CollationElementIteratorICU . secondaryOrder ( order ) ; }
47030	protected void installComponents ( ) { arrowButton = createArrowButton ( ) ; if ( arrowButton != _NULL ) { comboBox . add ( arrowButton ) ; configureArrowButton ( ) ; } if ( comboBox . isEditable ( ) ) { addEditor ( ) ; } comboBox . add ( currentValuePane ) ; }
47090	protected void uninstallComponents ( ) { if ( arrowButton != _NULL ) { unconfigureArrowButton ( ) ; } if ( editor != _NULL ) { unconfigureEditor ( ) ; } comboBox . removeAll ( ) ; arrowButton = _NULL ; }
47284	public final int lastIndexOf ( int elem ) { for ( int i = ( m_firstFree - _NUM ) ; i >= _NUM ; i -- ) { if ( m_map [ i ] == elem ) return i ; } return java . lang . Integer . MIN_VALUE ; }
47327	public static boolean isNameStart ( int c ) { return c < _NUM && ( CHARS [ c ] & MASK_NAME_START ) != _NUM ; }
47362	public static boolean entryExists ( DN entryDN ) throws DirectoryException { if ( entryDN . isRootDN ( ) ) { return _BOOL ; } Backend < ? > backend = getBackend ( entryDN ) ; return backend != _NULL && backend . entryExists ( entryDN ) ; }
47436	@ Override public void onInflate ( final Activity activity , final AttributeSet attrs , final Bundle savedInstanceState ) { super . onInflate ( activity , attrs , savedInstanceState ) ; }
47445	public int lengthOfYear ( ) { return ( isLeapYear ( ) ? _NUM : _NUM ) ; }
47458	public static List < DereferenceAliasesPolicy > values ( ) { return IMMUTABLE_ELEMENTS ; }
47533	public static boolean isNameStart ( int c ) { return c < _NUM && ( CHARS [ c ] & MASK_NAME_START ) != _NUM ; }
47594	@ Override public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } if ( obj instanceof AbstractChronology ) { return compareTo ( ( AbstractChronology ) obj ) == _NUM ; } return _BOOL ; }
47670	public void addButtonActionListener ( ButtonActionListener l ) { getButtonsPanel ( ) . addButtonActionListener ( l ) ; getInstalledPanel ( ) . addButtonActionListener ( l ) ; getCurrentStepPanel ( ) . addButtonActionListener ( l ) ; buttonListeners . add ( l ) ; }
47709	public void stepInto ( ) { if ( ! isRunning ( ) ) return ; Line previousLine = currentLine ; do { setCurrentEventID ( trace . getNextEventIDInThread ( currentEventID ) ) ; } while ( isRunning ( ) && currentLine != _NULL && currentLine == previousLine && trace . getKind ( currentEventID ) != EventKind . START_METHOD ) ; }
47878	public void preDeregister ( ) throws java . lang . Exception { TIMER_LOGGER . logp ( Level . FINER , Timer . class . getName ( ) , _CHAR preDeregister _CHAR , _CHAR stop the timer _CHAR ) ; stop ( ) ; }
48200	public final void signal ( ) { if ( ! isHeldExclusively ( ) ) throw new IllegalMonitorStateException ( ) ; Node first = firstWaiter ; if ( first != _NULL ) doSignal ( first ) ; }
48391	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
48764	public void allIdentitiesChanged ( ) { if ( DelegationManager . debug . messageEnabled ( ) ) { DelegationManager . debug . message ( _CHAR DelegationPolicyImpl : all identities changed . '' ) ; } cleanupCache ( ) ; }
48860	private String readAttributeName ( boolean returnLowerCase ) { skipWhitespace ( ) ; int c = find ( ATTRIBUTE_NAME_TERMINATORS ) ; String forSubstring = returnLowerCase ? inputLowerCase : input ; String result = pos < c ? forSubstring . substring ( pos , c ) : _NULL ; pos = c ; return result ; }
49033	public void remove ( int childIndex ) { TreeStateNode node = ( TreeStateNode ) getChildAt ( childIndex ) ; node . removeFromMapping ( ) ; super . remove ( childIndex ) ; }
49103	public String encodeURL ( String url , boolean escape , Session session ) { return encodeURL ( url , escape , sessionCookies . getCookieName ( ) , session ) ; }
49242	@ Override public int hashCode ( ) { return hashCode ( buffer , offset , length ) ; }
49252	private int epochMonthLength ( int epochMonth ) { return hijrahEpochMonthStartDays [ epochMonth + _NUM ] - hijrahEpochMonthStartDays [ epochMonth ] ; }
49469	public boolean startedIdFound ( ) { return startedIdFound ; }
49488	public final void signal ( ) { if ( ! isHeldExclusively ( ) ) throw new IllegalMonitorStateException ( ) ; Node first = firstWaiter ; if ( first != _NULL ) doSignal ( first ) ; }
49666	public static boolean entryExists ( DN entryDN ) throws DirectoryException { return DirectoryServer . entryExists ( entryDN ) ; }
49837	public final int indexOf ( Object elem , int index ) { for ( int i = index ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] == elem ) return i ; } return java . lang . Integer . MIN_VALUE ; }
49840	@ Override public void removeErrorPage ( ErrorPage errorPage ) { String exceptionType = errorPage . getExceptionType ( ) ; if ( exceptionType != _NULL ) { synchronized ( exceptionPages ) { exceptionPages . remove ( exceptionType ) ; } } else { synchronized ( statusPages ) { statusPages . remove ( Integer . valueOf ( errorPage . getErrorCode ( ) ) ) ; } } fireContainerEvent ( _CHAR removeErrorPage _CHAR , errorPage ) ; }
50100	private void enqueueTopoInfoToAllDSsExcept ( DataServerHandler excludedDS ) { int excludedServerId = excludedDS != _NULL ? excludedDS . getServerId ( ) : - _NUM ; if ( sendDSTopologyMsg ) { if ( excludedServerId != excludedDSForTopologyMsg ) { excludedDSForTopologyMsg =- _NUM ; } } else { sendDSTopologyMsg = _BOOL ; excludedDSForTopologyMsg = excludedServerId ; } }
50226	public Object parse ( InputSource input ) throws IOException , SAXException { configure ( ) ; getXMLReader ( ) . parse ( input ) ; return ( root ) ; }
50273	private boolean isVLVIndex ( AbstractIndexDescriptor index ) { return index instanceof VLVIndexDescriptor ; }
50537	void loadData ( ) throws java . io . IOException { RandomAccessFileOrArray raf = new RandomAccessFileOrArray ( new RandomAccessSourceFactory ( ) . createSource ( url ) ) ; ByteArrayOutputStream stream = new ByteArrayOutputStream ( ) ; StreamUtil . transferBytes ( raf , stream ) ; raf . close ( ) ; data = stream . toByteArray ( ) ; }
50580	public XMLString toUpperCase ( Locale locale ) { return new XMLStringDefault ( m_str . toUpperCase ( locale ) ) ; }
50642	public static boolean mailServerConfigured ( ) { return directoryServer . mailServerPropertySets != _NULL && ! directoryServer . mailServerPropertySets . isEmpty ( ) ; }
50790	@ Override public ErrorPage findErrorPage ( String exceptionType ) { synchronized ( exceptionPages ) { return ( exceptionPages . get ( exceptionType ) ) ; } }
50865	@ Override public void forceLoad ( ) { createObjectFromFactory ( ) ; clearDataAfterCreation ( ) ; deliverResult ( objectToRetain ) ; }
50924	public Jwt validateJwtSessionCookie ( MessageInfo messageInfo ) { return getServerAuthModule ( ) . validateJwtSessionCookie ( messageInfo ) ; }
50979	public int indexOfTab ( String title ) { for ( int i = _NUM ; i < getTabCount ( ) ; i ++ ) { if ( getTitleAt ( i ) . equals ( title == _NULL ? _CHAR _CHAR : title ) ) { return i ; } } return - _NUM ; }
51033	@ Override public void onInflate ( final Activity activity , final AttributeSet attrs , final Bundle savedInstanceState ) { delegate . onInflate ( activity , attrs , savedInstanceState ) ; }
51156	public static Finder wrap ( final Class < ? extends ServerResource > resource ) { return wrap ( Key . get ( resource ) ) ; }
51292	public AMSearchResults searchUsers ( String wildcard , AMSearchControl searchControl ) throws AMException , SSOException { return searchUsers ( wildcard , _NULL , searchControl ) ; }
51465	private void assertEntryHistoricalEncodingDecoding ( Entry entry , EntryHistorical hist ) { entry . removeAttribute ( getSchema ( ) . getAttributeType ( HISTORICAL_ATTRIBUTE_NAME ) ) ; entry . addAttribute ( hist . encodeAndPurge ( ) , _NULL ) ; EntryHistorical hist2 = EntryHistorical . newInstanceFromEntry ( entry ) ; assertEquals ( hist2 . encodeAndPurge ( ) , hist . encodeAndPurge ( ) ) ; }
51658	@ Override public void onInflate ( final Activity activity , final AttributeSet attrs , final Bundle savedInstanceState ) { delegate . onInflate ( activity , attrs , savedInstanceState ) ; }
51693	@ Override public boolean accept ( Serializable msg , Member source ) { table . dataModel . getValueAt ( - _NUM , - _NUM ) ; return _BOOL ; }
51888	private boolean isDatabaseIndex ( final String indexName ) { for ( final String dbIndex : DATABASE_INDEXES ) { if ( indexName . equalsIgnoreCase ( dbIndex ) ) { return _BOOL ; } } return _BOOL ; }
51892	public int indexOf ( int elem ) { runTo ( - _NUM ) ; return super . indexOf ( elem ) ; }
51946	@ Override public String toString ( ) { return MessageFormat . format ( _CHAR Query : \ n _CHAR + _CHAR Filter : { _NUM } \ n _CHAR + _CHAR Attributes : { _NUM } _CHAR , getLDAPFilter ( ) , StringUtils . join ( requestedAttributes , _CHAR , _CHAR ) ) ; }
52047	public boolean isMidnightEndOfDay ( ) { return timeEndOfDay ; }
52064	public static void deregisterRotationPolicy ( DN configEntryDN ) { Reject . ifNull ( configEntryDN ) ; directoryServer . rotationPolicies . remove ( configEntryDN ) ; }
52201	public boolean handleExpare ( ) throws InterruptedException { try { log . info ( _CHAR handling expare stat _CHAR ) ; this . LoadingConfig ( ) ; for ( String key : Sailing . threadMap . keySet ( ) ) { if ( ! this . register ( key ) ) { return _BOOL ; } } return _BOOL ; } catch ( KeeperException e ) { e . printStackTrace ( ) ; return _BOOL ; } }
52380	@ Override public void addFilterMapBefore ( FilterMap filterMap ) { validateFilterMap ( filterMap ) ; filterMaps . addBefore ( filterMap ) ; fireContainerEvent ( _CHAR addFilterMap _CHAR , filterMap ) ; }
52404	public static boolean isNameStart ( int c ) { return c < _NUM && ( CHARS [ c ] & MASK_NAME_START ) != _NUM ; }
52489	public StreamAllocation close ( ) { if ( bufferedRequestBody != _NULL ) { closeQuietly ( bufferedRequestBody ) ; } else if ( requestBodyOut != _NULL ) { closeQuietly ( requestBodyOut ) ; } if ( userResponse != _NULL ) { closeQuietly ( userResponse . body ( ) ) ; } else { streamAllocation . connectionFailed ( ) ; } return streamAllocation ; }
52811	public int indexOf ( int elem ) { return indexOf ( elem , _NUM ) ; }
52846	public void rejectedExecution ( Runnable r , ThreadPoolExecutor e ) { if ( ! e . isShutdown ( ) ) { r . run ( ) ; } }
53233	public boolean isDoubleMetaphoneEqual ( String value1 , String value2 , boolean alternate ) { return doubleMetaphone ( value1 , alternate ) . equals ( doubleMetaphone ( value2 , alternate ) ) ; }
53271	public Set searchUsers ( String wildcard , int level ) throws AMException , SSOException { return searchUsers ( wildcard , _NULL , level ) ; }
53282	static URL which ( Class clazz , ClassLoader loader ) { String classnameAsResource = clazz . getName ( ) . replace ( _CHAR , _CHAR ) + _CHAR . class _CHAR ; if ( loader == _NULL ) { loader = getSystemClassLoader ( ) ; } return loader . getResource ( classnameAsResource ) ; }
53283	public void debugError ( String message ) { debug . error ( message ) ; }
53338	public < T > T load ( Class < T > service ) { synchronized ( providers ) { List < RegisteredServiceProvider < ? >> registered = providers . get ( service ) ; if ( registered == _NULL ) { return _NULL ; } return service . cast ( registered . get ( _NUM ) . getProvider ( ) ) ; } }
53396	public static QueryExp initialSubString ( AttributeValueExp a , StringValueExp s ) { return new MatchQueryExp ( a , new StringValueExp ( escapeString ( s . getValue ( ) ) + _CHAR * _CHAR ) ) ; }
53481	public static String pad ( String self , int length , String padding ) { while ( self . length ( ) < length ) { self = padding + self ; } return self ; }
53700	public boolean wasNull ( ) throws SQLException { return lastValueWasNull ; }
53757	public synchronized Object clone ( ) { AMPassword dolly = new AMPassword ( ) ; dolly . password = ( char [ ] ) password . clone ( ) ; dolly . cleared = cleared ; return dolly ; }
53782	public void focusGained ( FocusEvent e ) { if ( component . isEnabled ( ) ) { if ( component . isEditable ( ) ) { setVisible ( _BOOL ) ; } setSelectionVisible ( _BOOL ) ; } }
53814	public boolean isDirectory ( ) { return name . endsWith ( _CHAR / _CHAR ) ; }
53972	synchronized void removeResourceBundle ( AbstractManagedObjectDefinition < ? , ? > d , Locale locale ) { Map < Locale , ResourceBundle > map = resources . get ( d ) ; if ( map != _NULL ) { map . remove ( locale ) ; } }
54035	private ChronoLocalDateTimeImpl < D > with ( Temporal newDate , LocalTime newTime ) { if ( date == newDate && time == newTime ) { return this ; } D cd = ChronoLocalDateImpl . ensureValid ( date . getChronology ( ) , newDate ) ; return new ChronoLocalDateTimeImpl < > ( cd , newTime ) ; }
54328	public final int peepOrNull ( ) { return ( ( _NULL != m_map ) && ( m_firstFree > _NUM ) ) ? m_map [ m_firstFree - _NUM ] : DTM . NULL ; }
54527	public boolean after ( Timestamp ts ) { return compareTo ( ts ) > _NUM ; }
54766	@ Override public int hashCode ( ) { return className . hashCode ( ) + methodName . hashCode ( ) ; }
54827	public static String slash ( String self , String replacement ) { return SLASH . matcher ( self ) . replaceAll ( replacement ) ; }
54916	public boolean isRequiredOrOptional ( final AttributeType attributeType ) { return isRequired ( attributeType ) || isOptional ( attributeType ) ; }
55088	public void internalEntityDecl ( String name , String value ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # internalEntityDecl : _CHAR + name + _CHAR , _CHAR + value ) ; if ( _NULL != m_declHandler ) { m_declHandler . internalEntityDecl ( name , value ) ; } }
55091	public String format ( TemporalAccessor temporal ) { StringBuilder buf = new StringBuilder ( _NUM ) ; formatTo ( temporal , buf ) ; return buf . toString ( ) ; }
55118	public void unsetPermission ( Permission perm ) { unsetPermission ( perm . getName ( ) ) ; }
55139	public boolean isReset ( ) { return isReset ; }
55254	public CTSDJLDAPv3PersistentSearchBuilder returnAttributes ( String ... attributeNames ) { this . attributeNames = attributeNames ; return this ; }
55328	public boolean grabPixels ( ) throws InterruptedException { return grabPixels ( _NUM ) ; }
55468	public void rejectedExecution ( Runnable r , ThreadPoolExecutor e ) { if ( ! e . isShutdown ( ) ) { r . run ( ) ; } }
55524	boolean update ( CSN csn ) { return state . update ( csn ) ; }
55553	protected void entryEvicted ( K key , V value ) { }
55578	public boolean drill_allowed ( ) { return ( first_layer ( ) == last_layer ( ) ) ; }
55779	public static boolean isXML11NameStart ( int c ) { return ( c < _NUM && ( XML11CHARS [ c ] & MASK_XML11_NAME_START ) != _NUM ) || ( _NUM <= c && c < _NUM ) ; }
55798	@ Override public void prepareAccessibilityDrop ( ) { if ( mReorderAlarm . alarmPending ( ) ) { mReorderAlarm . cancelAlarm ( ) ; mReorderAlarmListener . onAlarm ( mReorderAlarm ) ; } }
55850	public String toXMLString ( ) throws FSMsgException { return this . toXMLString ( _BOOL , _BOOL ) ; }
55871	@ Override public void sendNotification ( String message ) throws MBeanException , RuntimeOperationsException { if ( message == _NULL ) throw new RuntimeOperationsException ( new IllegalArgumentException ( _CHAR Message is _NULL _CHAR ) , _CHAR Message is _NULL _CHAR ) ; Notification notification = new Notification ( _CHAR jmx . modelmbean . generic _CHAR , this , _NUM , message ) ; sendNotification ( notification ) ; }
55895	public void increment ( ) { count . incrementAndGet ( ) ; rateWindow . incrementForTimestamp ( timerGetter . now ( ) ) ; }
55944	@ Override public int read ( ) throws IOException { return Streams . readSingleByte ( this ) ; }
55996	public void addAttribute ( final String key , final Object value ) { final Object object = getComponent ( ) . getAttributes ( ) . get ( key ) ; if ( object != _NULL ) { getComponent ( ) . getAttributes ( ) . put ( key , value ) ; } }
56076	protected void updateNextObject ( ) { if ( ! updateNextIndex ( ) ) { findNextValidParent ( ) ; } }
56105	Script reparse ( String className , String text ) throws CompilationFailedException { return super . parse ( new GroovyCodeSource ( text , className , DEFAULT_CODE_BASE ) ) ; }
56186	public int indexOf ( String string ) { return indexOf ( string , _NUM ) ; }
56214	public void addSortKey ( int column ) { addSortKey ( column , String . CASE_INSENSITIVE_ORDER ) ; }
56296	public RecurringTask entryToRecurringTask ( Entry entry ) throws DirectoryException { return new RecurringTask ( serverContext , this , entry ) ; }
56308	public boolean isSkipLastFooter ( ) { return skipLastFooter ; }
