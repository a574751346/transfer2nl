51	public static SM_SYSTEM_MESSAGE STR_COMBINE_DO_NOT_HAVE_TOOL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
52	public void put ( int childRow , int parentRow ) { if ( childRow >= m_childToParent . getRowCount ( ) ) m_childToParent . setMaximumRow ( childRow + _NUM ) ; m_childToParent . setInt ( parentRow , childRow ) ; m_parentToChild . put ( parentRow , childRow ) ; }
86	public static ValueGetterSpacePredicate < ServerEntry > propertyAny ( String propertyName , ISpacePredicate ... predicates ) { return property ( propertyName , any ( predicates ) ) ; }
110	public void onDrawerOpened ( View drawerView ) { super . onDrawerOpened ( drawerView ) ; try { if ( pokemonGo != _NULL && pokemonGo . getPlayerProfile ( ) != _NULL ) { renderProfile ( pokemonGo . getPlayerProfile ( ) ) ; } } catch ( Exception e ) { } getSupportActionBar ( ) . setTitle ( R . string . profile ) ; }
138	public ActionButton create ( ) { ActionButton actionButton = new ActionButton ( context ) ; actionButton . setText ( text ) ; actionButton . setOnClickListener ( onClickListener ) ; actionButton . setTextColor ( getTextColor ( ) ) ; return actionButton ; }
176	@ Override public EndpointStatus join ( InetSocketAddress endpoint , Map < String , InetSocketAddress > additionalEndpoints , Status status ) throws Group . JoinException , InterruptedException { throw new UnsupportedOperationException ( _CHAR NameServerSet does not support join _CHAR ) ; }
219	public SiteAdminGridRow selectPageByTitle ( String title ) { final SiteAdminGridRow row = getRowByTitle ( title ) ; if ( row != _NULL ) { selectRow ( row ) ; } else { String msg = String . format ( _CHAR Could not find a page titled % s _CHAR , title ) ; throw new IllegalArgumentException ( msg ) ; } return row ; }
289	public SpaceTypeDescriptorBuilder addCompoundIndex ( String [ ] paths , boolean unique ) { return addIndex ( SpaceIndexFactory . createCompoundIndex ( paths , SpaceIndexType . BASIC , _NULL , unique ) ) ; }
300	public static SM_SYSTEM_MESSAGE STR_GUILD_EVENT_WIN_ARTIFACT ( String value1 , String value0 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 , value2 ) ; }
305	public void loadBcpFile ( String bcpFilename , String delimiter , List < Attribute > attributes , String dateFormatString , SourcelessConnectionManager connectionManager ) { loadBcpFile ( bcpFilename , delimiter , attributes , connectionManager , dateFormatString != _NULL ? new SimpleDateFormat ( dateFormatString ) : _NULL ) ; }
376	public boolean emptiable ( ) { return minEffectiveTotalRange ( ) == _NUM ; }
382	public void clear ( String className ) throws RemoteException , TransactionException , UnusableEntryException { _remoteSpaceProxy . clear ( createTemplate ( className ) , _NULL ) ; }
387	public int createTextureObject ( ) { return program . createTextureObject ( ) ; }
389	public Builder shouldStartProxy ( boolean startProxy ) { this . _shouldStartProxy = startProxy ; return this ; }
413	public String typeName ( ) { return _CHAR methodref _CHAR ; }
416	public int size ( ) { return mSize ; }
427	public Builder clearName ( ) { name_ = getDefaultInstance ( ) . getName ( ) ; onChanged ( ) ; return this ; }
429	@ Override public void redo ( Transaction tx ) { }
432	public boolean matchDelim ( char delimiter ) { return delimiter == ( char ) tok . ttype ; }
503	public Builder corePoolSize ( int corePoolSize ) { this . corePoolSize = corePoolSize ; return this ; }
534	public ScriptingExecutor < T > scriptingExecutor ( ) { return remotingConfigurer . proxy ( ) ; }
564	public void addGraphModelListener ( GraphListener listnr ) { if ( ! m_listeners . contains ( listnr ) ) m_listeners . add ( listnr ) ; }
601	@ Deprecated public static < E > List < E > toList ( Chain < E > c ) { return new ArrayList < E > ( c ) ; }
626	public static Beans < AuthToken > load ( long uid ) { return Helper . load ( W . create ( _CHAR uid _CHAR , uid ) . and ( _CHAR expired _CHAR , System . currentTimeMillis ( ) , W . OP_GT ) , _NUM , _NUM , AuthToken . class ) ; }
653	public synchronized void acquireLock ( String tableName , long transNum , LockType lockType ) { while ( this . databaseLocked ) { if ( this . databaseTransactionOwner == transNum ) { break ; } try { wait ( ) ; } catch ( InterruptedException e ) { } } this . databaseTransactionOwner = transNum ; this . databaseLocked = _BOOL ; }
657	public int equivHashCode ( ) { return returnType . hashCode ( ) * _NUM + modifiers * _NUM + name . hashCode ( ) ; }
697	public static String [ ] flattenQueryParams ( Map < String , String > queryParams ) { return queryParams . entrySet ( ) . stream ( ) . flatMap ( _NULL ) . toArray ( _NULL ) ; }
739	@ Override public boolean hasErrors ( ) { return getErrorCount ( ) > _NUM ; }
745	public SketchSetOperationPostAggregation withSize ( int size ) { return new SketchSetOperationPostAggregation ( getName ( ) , getFunc ( ) , getFields ( ) , size ) ; }
749	private void execute ( ) { for ( AbstractAnnotationManager manager : managers ) manager . execute ( target , context ) ; }
798	public static Fall handle ( EntityLivingBase living , float distance , float damageMultiplier ) { Fall event = new Fall ( living , distance , damageMultiplier ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
808	public void sample ( int column , String value ) { rangeCheck ( column , _BOOL ) ; ( ( ParserFactory ) m_factories . get ( column ) ) . sample ( value ) ; }
833	public static boolean checkDeniedPermissionsNeverAskAgain ( Object object , String deniedPerms ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M ) { boolean shouldShowRationale ; shouldShowRationale = shouldShowRequestPermissionRationale ( object , deniedPerms ) ; return ! shouldShowRationale ; } return _BOOL ; }
877	private Uri whichContentStore ( ) { if ( Environment . getExternalStorageState ( ) . equals ( Environment . MEDIA_MOUNTED ) ) { return android . provider . MediaStore . Images . Media . EXTERNAL_CONTENT_URI ; } else { return android . provider . MediaStore . Images . Media . INTERNAL_CONTENT_URI ; } }
913	protected PhotosMoveQuery targetAlbumId ( int value ) { return unsafeParam ( _CHAR target_album_id _CHAR , value ) ; }
922	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_BATTLE_TIME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
940	public void showLoadingUI ( ) { removeCallbacks ( mDelayedShow ) ; removeCallbacks ( mDelayedHide ) ; setVisibility ( GONE ) ; postDelayed ( mDelayedShow , LOADING_ANIMATION_DELAY_MS ) ; }
957	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HostileUp_ME_TO_SELF ( String value0d , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0d , skillname ) ; }
974	public int size ( ) { if ( mGarbage ) { gc ( ) ; } return mSize ; }
980	public static void addEmojis ( Context context , Spannable text , int emojiSize ) { addEmojis ( context , text , emojiSize , _NUM , - _NUM , _BOOL ) ; }
1006	public void stream ( long durationInMillis ) { confettiManager . setNumInitialCount ( _NUM ) . setEmissionDuration ( durationInMillis ) . setEmissionRate ( _NUM ) . animate ( ) ; }
1024	public void incrementAll ( Collection < ? extends E > collection , double count ) { for ( E key : collection ) { incrementCount ( key , count ) ; } dirty = _BOOL ; }
1072	protected void initConfig ( KadminConsumerConfig config ) { }
1075	public String loadDocumentTextToString ( String sDocID ) { return loadDocumentElement ( sDocID , TEXT_TAG ) ; }
1083	public static void log ( int severity , String message , Throwable e ) { log ( new Status ( severity , PLUGIN_ID , _NUM , message , e ) ) ; }
1102	GSMessageImpl duplicate ( ) throws JMSException { GSSimpleMessageImpl dup = new GSSimpleMessageImpl ( ) ; copyTo ( dup ) ; return dup ; }
1121	public GlobalVarNode findGlobalVarNode ( Object value ) { if ( opts . rta ( ) ) { value = _NULL ; } return valToGlobalVarNode . get ( value ) ; }
1124	public static SM_SYSTEM_MESSAGE STR_MSG_CASH_ITEM_TIME_LEFT ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
1140	public static URI toLocation ( URI sourceUri , String table ) { getLocationType ( sourceUri ) ; return UriBuilder . fromUri ( sourceUri ) . path ( table ) . build ( ) ; }
1153	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRetainInstance ( _BOOL ) ; }
1159	public MPPointF createFromParcel ( Parcel in ) { MPPointF r = new MPPointF ( _NUM , _NUM ) ; r . my_readFromParcel ( in ) ; return r ; }
1174	protected boolean hasAttemptRemaining ( ) { return mCurrentRetryCount <= mMaxNumRetries ; }
1224	@ Nullable public RestMethod addMethod ( RestMethod method ) { return methods . put ( method . getRestMethodName ( ) , method ) ; }
1225	public final boolean forall ( P2SetVisitor v ) { for ( Iterator < Node > it = new ArrayList < Node > ( s ) . iterator ( ) ; it . hasNext ( ) ; ) { v . visit ( it . next ( ) ) ; } return v . getReturnValue ( ) ; }
1303	public void flushTermination ( ) { for ( int i = _NUM ; i < numberOfQueues ; i ++ ) { if ( ! terminateLists [ i ] . isEmpty ( ) ) { this . submitTaskToQueue ( this . createTerminateTask ( terminateLists [ i ] ) , i , processedTerminates ) ; this . terminateLists [ i ] = new ArrayList ( batchSize ) ; this . terminatesQueued ++ ; } } }
1323	public void watchMonitoredDataPoll ( PreferenceChangeListener pcl ) { addListener ( INT_KEY_MONDATA_POLL , pcl ) ; }
1372	public static byte [ ] loadImageAs32bitRGB ( File imageLoc ) throws IOException { BufferedImage img = ImageIO . read ( imageLoc ) ; return int32RGBBufferedImageToByteArray ( img ) ; }
1375	public int numberOfTotalNGrams ( ) { if ( iTotalNGrams != - _NUM ) return iTotalNGrams ; createHistogram ( ) ; return iTotalNGrams ; }
1421	private long calculateAnimationDuration ( float initialVelocity , float displacement ) { return MathUtils . clamp ( Math . round ( Math . abs ( _NUM * displacement / initialVelocity ) ) , MINIMUM_ANIMATION_DURATION_MS , MAXIMUM_ANIMATION_DURATION_MS ) ; }
1451	public static double times ( double [ ] nums ) { if ( nums == _NULL || nums . length == _NUM ) return _NUM ; double ret = _NUM ; for ( double num : nums ) ret *= num ; return ret ; }
1462	public boolean isTrue ( String key ) { return options . containsKey ( key ) && Boolean . parseBoolean ( options . get ( key ) ) ; }
1494	public int typeIndexFromClassDefIndex ( int classDefIndex ) { checkBounds ( classDefIndex , tableOfContents . classDefs . size ) ; int position = tableOfContents . classDefs . off + ( SizeOf . CLASS_DEF_ITEM * classDefIndex ) ; return data . getInt ( position ) ; }
1500	public static int readVInt ( DataInput stream ) throws IOException { return ( int ) readVLong ( stream ) ; }
1560	@ NotNull public ImageOverlayBuilder mergeImage ( @ NotNull BufferedImage mergeImage ) { return mergeImage ( mergeImage , MergeImagesFilter . Position . RIGHT ) ; }
1567	public static RemoveFilesDialogFragment newInstance ( OCFile file ) { ArrayList < OCFile > list = new ArrayList < > ( ) ; list . add ( file ) ; return newInstance ( list ) ; }
1581	public boolean removeEntryFromCache ( IEntryHolder entryHolder ) { return removeEntryFromCache ( entryHolder , _BOOL , _BOOL , _NULL , RecentDeleteCodes . NONE ) ; }
1611	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
1613	private static boolean trusted ( Set set , TrustVerifier . Context ctx ) throws RemoteException { return trusted ( set . iterator ( ) , ctx ) ; }
1619	@ Override public int compare ( final PhysicalTable table1 , final PhysicalTable table2 ) { int compare = table1 . getTimeGrain ( ) . getEstimatedDuration ( ) . compareTo ( table2 . getTimeGrain ( ) . getEstimatedDuration ( ) ) ; LOG . trace ( _CHAR { } { } { } _CHAR , table1 , compare < _NUM ? _CHAR < _CHAR : _CHAR > _CHAR , table2 ) ; return - _NUM * compare ; }
1629	public boolean hasAttributeWithValue ( final WebElement element , final String attribute , final String value ) { boolean result = _BOOL ; try { bobcatWait . withTimeout ( Timeouts . SMALL ) . until ( _NULL ) ; } catch ( TimeoutException e ) { result = _BOOL ; } return result ; }
1647	public static SM_SYSTEM_MESSAGE STR_PETITION_CHAT_STARTED_TO_USER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1652	public boolean equals ( Object object ) { return object instanceof Split && equals ( ( Split ) object ) ; }
1710	public MessagesDeleteDialogQuery userId ( String value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
1714	public static CreateRevisionCmpTarget createRevision ( long revision ) { return new CreateRevisionCmpTarget ( revision ) ; }
1717	public String typeName ( ) { return _CHAR methodhandle _CHAR ; }
1741	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SkillATK_Instant_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
1777	public static SM_SYSTEM_MESSAGE STR_IDSHULACKSHIP_OPEN_DOOR ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
1790	public StatsGetQuery dateTo ( String value ) { return unsafeParam ( _CHAR date_to _CHAR , value ) ; }
1802	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stumble_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
1834	public void showErrorView ( ) { if ( _NULL != mBaseLayout ) { mBaseLayout . showErrorView ( ) ; } }
1841	public static String returnError ( HttpServletRequest request , HttpServletResponse response ) { return _CHAR error _CHAR ; }
1878	public NumericHaving withAggregation ( String aggregation ) { return new NumericHaving ( getType ( ) , aggregation , getValue ( ) ) ; }
1886	public void updateForTabCount ( int tabCount , boolean incognito ) { if ( tabCount == mTabCount && incognito == mIncognito ) return ; mTabCount = tabCount ; mIncognito = incognito ; float textSizePx = mTabCount > _NUM ? mDoubleDigitTextSize : mSingleDigitTextSize ; mTextPaint . setTextSize ( textSizePx ) ; invalidateSelf ( ) ; }
1891	public static ToolbarTapTarget forToolbarMenuItem ( Toolbar toolbar , @ IdRes int menuItemId , CharSequence title , @ Nullable CharSequence description ) { return new ToolbarTapTarget ( toolbar , menuItemId , title , description ) ; }
1923	public boolean init ( StepMetaInterface smi , StepDataInterface sdi ) { meta = ( MDKeyGenStepMeta ) smi ; data = ( MDKeyGenStepData ) sdi ; return super . init ( smi , sdi ) ; }
1957	public boolean isOrganisationUnitMode ( OrganisationUnitSelectionMode mode ) { return organisationUnitMode != _NULL && organisationUnitMode . equals ( mode ) ; }
1963	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_PROPERTYCHANGE_MAXMEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1984	public int length ( ) { return this . myArrayList . size ( ) ; }
1990	public static Unit findFirstNonIdentityUnit ( Body b , Stmt s ) { Unit u1 = s ; while ( u1 instanceof IdentityStmt ) u1 = b . getUnits ( ) . getSuccOf ( u1 ) ; return u1 ; }
2039	public void removeCookie ( String url ) { cookieJar . remove ( url ) ; }
2077	public ExtractionFilter withExtractionFunction ( ExtractionFunction extractionFunction ) { return new ExtractionFilter ( getDimension ( ) , value , extractionFunction ) ; }
2078	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CaseHeal_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
2115	public Set < D > ifdsResultsAt ( N statement ) { return resultsAt ( statement ) . keySet ( ) ; }
2137	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelDeBuffMental_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
2236	private boolean isTempBlock ( BlockId blk ) { return blk . fileName ( ) . startsWith ( _CHAR _temp _CHAR ) ; }
2245	private Response fetchConfig ( UUID id ) throws Exception { return Response . ok ( configStore . fetch ( id , configFactory ) . toJsonString ( ) , MediaType . APPLICATION_JSON ) . build ( ) ; }
2256	private ProxySelector installSimpleHostFilter ( Dict proxySettings , ProxySelector result ) { if ( isActive ( proxySettings . get ( _CHAR ExcludeSimpleHostnames _CHAR ) ) ) { List < UriFilter > localBypassFilter = new ArrayList < UriFilter > ( ) ; localBypassFilter . add ( new IELocalByPassFilter ( ) ) ; result = new ProxyBypassListSelector ( localBypassFilter , result ) ; } return result ; }
2271	public void hideKeyboard ( Runnable postHideTask ) { if ( mUrlBar != _NULL ) mUrlBar . clearFocus ( ) ; boolean wasVisible = _BOOL ; if ( hasFocus ( ) ) { wasVisible = UiUtils . hideKeyboard ( this ) ; } if ( wasVisible ) { mPostHideKeyboardTask = postHideTask ; } else { postHideTask . run ( ) ; } }
2296	@ Override public void onFailure ( ) { }
2312	public static synchronized boolean isOriginLabeled ( ) { return originLabeled ; }
2401	private static void fatalError ( String msg , Throwable e ) throws RemoteException { System . err . println ( msg ) ; if ( e != _NULL ) e . printStackTrace ( System . err ) ; throw new RemoteException ( msg , e ) ; }
2413	public boolean isNumericType ( ) { return getValueType ( ) . isNumeric ( ) ; }
2419	public static SM_SYSTEM_MESSAGE STR_STIGMA_TO_EQUIP_STONE_LEARN_PRESKILL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2436	public boolean isUploadCrashDumpEnabled ( ) { if ( isMobileNetworkCapable ( ) ) { return ! mSharedPreferences . getString ( PREF_CRASH_DUMP_UPLOAD , mCrashDumpNeverUpload ) . equals ( mCrashDumpNeverUpload ) ; } return mSharedPreferences . getBoolean ( PREF_CRASH_DUMP_UPLOAD_NO_CELLULAR , _BOOL ) ; }
2448	public String typeName ( ) { return _CHAR interfacemethodref _CHAR ; }
2506	public static double regularizedGammaP ( double a , double x ) { return regularizedGammaP ( a , x , DEFAULT_EPSILON , Integer . MAX_VALUE ) ; }
2515	public UrlSpaceConfigurer credentials ( String userName , String password ) { return securityConfig ( new SecurityConfig ( userName , password ) ) ; }
2601	public void stopObservingFontPrefs ( ) { mFontSizePrefs . removeObserver ( mFontSizeObserver ) ; }
2603	public int calculateLocalSwapSize ( int vmswapsize , int videoswapsize , int hostvmcount ) { int i = ( ( vmswapsize + videoswapsize ) * hostvmcount ) / _NUM ; i += ( Host . getThirdpartylocalstorage ( ) / _NUM ) ; return i ; }
2610	protected boolean isVertical ( @ NotNull NlComponent component ) { String orientation = component . getAttribute ( ANDROID_URI , ATTR_ORIENTATION ) ; return VALUE_VERTICAL . equals ( orientation ) ; }
2612	public int createTexture ( ) { if ( mFullScreen == _NULL ) throw new IllegalStateException ( _CHAR FullScreen is _NULL , please invoke initialize _CHAR ) ; return mFullScreen . createTexture ( ) ; }
2681	@ NotNull public ImageOverlayBuilder mergeImage ( @ NotNull BufferedImage mergeImage , @ NotNull MergeImagesFilter . Position position ) { MergeImagesFilter mergeImagesFilter = new MergeImagesFilter ( mergeImage , SMALL_PADDING , position ) ; bufferedImage = mergeImagesFilter . applyFilter ( bufferedImage ) ; return this ; }
2692	public boolean isOrganisationUnitMode ( OrganisationUnitSelectionMode mode ) { return organisationUnitMode != _NULL && organisationUnitMode . equals ( mode ) ; }
2711	@ Override public UniformRealDistribution makeDistribution ( ) { return new UniformRealDistribution ( - _NUM . _NUM , _NUM . _NUM ) ; }
2767	public boolean isPhantomClass ( ) { return Scene . v ( ) . getPhantomClasses ( ) . contains ( this ) ; }
2853	public void commit ( ServerTransaction xtn , boolean anyUpdates ) throws SAException { }
2888	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( name , wildcard , caseSensitivity ) ) { return _BOOL ; } } return _BOOL ; }
2979	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_OTHER_FRIENDLY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
2999	public void halt ( ) { for ( WorkProcessor < ? > processor : workProcessors ) { processor . halt ( ) ; } started . set ( _BOOL ) ; }
3000	public static void createWriter ( String fileName ) { try { createWriter ( new FileOutputStream ( fileName ) ) ; } catch ( FileNotFoundException e ) { e . printStackTrace ( ) ; } }
3012	public JRangeSlider createVerticalRangeSlider ( ) { return createRangeSlider ( JRangeSlider . VERTICAL , JRangeSlider . RIGHTLEFT_BOTTOMTOP ) ; }
3074	public final boolean forall ( P2SetVisitor v ) { for ( BitSetIterator it = bits . iterator ( ) ; it . hasNext ( ) ; ) { v . visit ( ( Node ) pag . getAllocNodeNumberer ( ) . get ( it . next ( ) ) ) ; } return v . getReturnValue ( ) ; }
3097	public boolean isCellEditable ( int row ) { return ! m_readOnly ; }
3100	@ NotNull public StringProperty text ( ) { return myText ; }
3137	public static void main ( String [ ] args ) throws Exception { new Configuration ( ) . writeXml ( System . out ) ; }
3175	public static void init ( Context context ) { if ( sCameraManager == _NULL ) { sCameraManager = new CameraManager ( context ) ; } }
3211	public static Hurt handle ( EntityLivingBase entity , DamageSource source , float damage ) { Hurt event = new Hurt ( entity , source , damage ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
3228	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
3256	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
3303	default String resourceName ( String tableName , String type ) { return String . format ( RESOURCE_NAME , tableName , type ) ; }
3334	protected AudioDeleteQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
3399	@ SuppressWarnings ( _CHAR unused _CHAR ) public void enableLastSlideAlphaExitTransition ( boolean enableAlphaExitTransition ) { adapter . addEmptySlide ( new LastEmptySlideFragment ( ) ) ; }
3402	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnAttacked_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
3408	public void createGroupFromWidgets ( ArrayList < ConstraintWidget > widgets ) { ConstraintWidgetContainer container = new ConstraintWidgetContainer ( ) ; container . setCompanionWidget ( WidgetCompanion . create ( container ) ) ; createContainerFromWidgets ( widgets , container , createContainerName ( _CHAR group _CHAR ) ) ; }
3419	private static int skipWhiteSpace ( BitArray row ) throws NotFoundException { int width = row . getSize ( ) ; int endStart = row . getNextSet ( _NUM ) ; if ( endStart == width ) { throw NotFoundException . getNotFoundInstance ( ) ; } return endStart ; }
3441	@ Override public String toString ( ) { return new String ( toByteArray ( ) ) ; }
3468	public static String upperFirstChar ( String string ) { if ( string == _NULL ) return _NULL ; if ( string . length ( ) <= _NUM ) return string . toLowerCase ( ) ; StringBuilder sb = new StringBuilder ( string ) ; sb . setCharAt ( _NUM , Character . toUpperCase ( sb . charAt ( _NUM ) ) ) ; return sb . toString ( ) ; }
3496	@ Override public double nextNormalizedDouble ( ) { return generator . nextGaussian ( ) ; }
3505	public boolean isSideHandle ( ) { switch ( mType ) { case LEFT_SIDE : case RIGHT_SIDE : case TOP_SIDE : case BOTTOM_SIDE : return _BOOL ; } return _BOOL ; }
3511	protected boolean hasAttemptRemaining ( ) { return mCurrentRetryCount <= mMaxNumRetries ; }
3536	public void cancelJobs ( ISVNRepositoryLocation location ) { if ( manager != _NULL ) { manager . cancel ( location ) ; } }
3568	public static SM_SYSTEM_MESSAGE STR_MSG_WHO_DIALOG_RESULT ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
3572	public boolean isCancelled ( ) { return this . request != _NULL && request . isCancelled ( ) ; }
3583	public static SM_SYSTEM_MESSAGE STR_DUEL_TIMEOUT_BROADCAST ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
3585	public void zoomOut ( ) { PointF center = mViewPortHandler . getContentCenter ( ) ; Matrix save = mViewPortHandler . zoomOut ( center . x , - center . y ) ; mViewPortHandler . refresh ( save , this , _BOOL ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
3646	public static void init ( String dirName ) { init ( dirName , BufferMgrType . DefaultBufferMgr ) ; }
3657	@ Override public void doctypeDecl ( String rootElement , String publicId , String systemId , Augmentations augs ) throws XNIException { }
3683	@ Override public void doctypeDecl ( String rootElement , String publicId , String systemId , Augmentations augs ) throws XNIException { }
3740	protected void shiftRight ( ) { for ( int i = _NUM ; i < mant . length - _NUM ; i ++ ) { mant [ i ] = mant [ i + _NUM ] ; } mant [ mant . length - _NUM ] = _NUM ; exp ++ ; }
3771	boolean canOptimizeTopN ( DataApiRequest apiRequest , TemplateDruidQuery templateDruidQuery ) { return apiRequest . getDimensions ( ) . size ( ) == _NUM && apiRequest . getSorts ( ) . size ( ) == _NUM && ! templateDruidQuery . isNested ( ) && BardFeatureFlag . TOP_N . isOn ( ) && apiRequest . getHaving ( ) == _NULL ; }
3775	public void refreshComplate ( ) { mOnRefreshCompleteListenter . refreshComplete ( ) ; isLoadingData = _BOOL ; isLoadingMoreData = _BOOL ; mHeaderView . getLayoutParams ( ) . height = _NUM ; getAdapter ( ) . notifyDataSetChanged ( ) ; }
3788	public void saveSpeakers ( RealmList < Speakers > speakers ) { if ( speakers != _NULL ) { mRealm . beginTransaction ( ) ; mRealm . copyToRealm ( speakers ) ; mRealm . commitTransaction ( ) ; } }
3801	private static Integer fetchDruidResponseTimeOut ( String timeOutSysProp ) { try { return SYSTEM_CONFIG . getIntProperty ( timeOutSysProp , DRUID_REQUEST_TIMEOUT_DEFAULT ) ; } catch ( SystemConfigException e ) { LOG . error ( e . getMessage ( ) , e ) ; throw new RuntimeException ( e . getMessage ( ) , e ) ; } }
3819	public boolean isOwnerOnly ( ) { return owner ; }
3821	public static void clearAll ( ) { if ( sManagers == _NULL ) return ; for ( int i = _NUM ; i < sManagers . size ( ) ; ++ i ) { MediaNotificationManager manager = sManagers . valueAt ( i ) ; manager . clearNotification ( ) ; } sManagers . clear ( ) ; }
3823	public SpaceTypeDescriptorBuilder addCompoundIndex ( String [ ] paths ) { return addCompoundIndex ( paths , SpaceIndexType . BASIC , _BOOL ) ; }
3836	public IteratorBuilder eventSessionConfig ( EventSessionConfig eventSessionConfig ) { this . iteratorConfig . setEventSessionConfig ( eventSessionConfig ) ; return this ; }
3900	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ChangeHateOnAttacked_ME_TO_SELF ( String value0d , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0d , skillname ) ; }
3914	private boolean mouseFurtherThan ( final double delta ) { if ( getMousePositionOnShown ( ) == _NULL ) { return _BOOL ; } return ( Math . abs ( getMousePositionOnShown ( ) . getSceneX ( ) - getCurrentMousePosition ( ) . getSceneX ( ) ) > delta || Math . abs ( getMousePositionOnShown ( ) . getSceneY ( ) - getCurrentMousePosition ( ) . getSceneY ( ) ) > delta ) ; }
3917	private static List < LoadMetadataDetails > checkPreserveSegmentsPropertyReturnRemaining ( List < LoadMetadataDetails > segments ) { int numberOfSegmentsToBePreserved = _NUM ; numberOfSegmentsToBePreserved = CarbonProperties . getInstance ( ) . getNumberOfSegmentsToBePreserved ( ) ; return CarbonDataMergerUtil . getValidLoadDetailsWithRetaining ( segments , numberOfSegmentsToBePreserved ) ; }
3941	public void removeUnlocked ( IObjectInfo < T > oi ) { remove_impl ( ( ObjectInfo < T > ) oi ) ; }
3957	public PhotosSaveWallPhotoQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
3966	public static void prepareKeysFromSurrogates ( DimColumnFilterInfo filterValues , SegmentProperties segmentProperties , CarbonDimension dimension , DimColumnExecuterFilterInfo dimColumnExecuterInfo ) { byte [ ] [ ] keysBasedOnFilter = getKeyArray ( filterValues , dimension , segmentProperties ) ; dimColumnExecuterInfo . setFilterKeys ( keysBasedOnFilter ) ; }
4015	public static < E > RingBuffer < E > createMultiProducer ( EventFactory < E > factory , int bufferSize , WaitStrategy waitStrategy ) { MultiProducerSequencer sequencer = new MultiProducerSequencer ( bufferSize , waitStrategy ) ; return new RingBuffer < E > ( factory , sequencer ) ; }
4024	public static long readVLong ( DataInput in ) throws IOException { return WritableUtils . readVLong ( in ) ; }
4035	public int numberOfTotalNGrams ( ) { if ( iTotalNGrams != - _NUM ) return iTotalNGrams ; createHistogram ( ) ; return iTotalNGrams ; }
4062	public static boolean hasExtension ( String extension ) { if ( extension == _NULL || extension . isEmpty ( ) ) { return _BOOL ; } return extensionToMimeTypeMap . containsKey ( extension ) ; }
4112	public final boolean forall ( P2SetVisitor v ) { for ( int i = _NUM ; i < size ; i ++ ) { v . visit ( nodes [ i ] ) ; } return v . getReturnValue ( ) ; }
4133	public static < T > void update ( Map < String , String > properties , T obj ) throws IllegalArgumentException { Field [ ] fields = obj . getClass ( ) . getDeclaredFields ( ) ; Arrays . stream ( fields ) . forEach ( _NULL ) ; }
4137	public static void verifyPhoneToken ( String token , @ Nullable AirMapCallback < Void > callback ) { PilotService . verifyToken ( token , callback ) ; }
4142	public boolean hasError ( ) { return error ; }
4177	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Heal_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
4215	public void updateSyncStateFromAndroid ( ) { if ( AndroidSyncSettings . isSyncEnabled ( mContext ) ) { start ( ) ; } else { stop ( ) ; } }
4306	public static ValueGetterSpacePredicate < ServerEntry > pathGreater ( String path , Comparable < ? > value ) { return path ( path , greater ( value ) ) ; }
4386	private synchronized Object addAndGetSegmentLock ( String segmentId ) { Object segmentLoderLockObject = segmentLockMap . get ( segmentId ) ; if ( _NULL == segmentLoderLockObject ) { segmentLoderLockObject = new Object ( ) ; segmentLockMap . put ( segmentId , segmentLoderLockObject ) ; } return segmentLoderLockObject ; }
4407	public AudioGetBroadcastListQuery active ( Boolean value ) { return unsafeParam ( _CHAR active _CHAR , value ) ; }
4424	@ Override public void onTimeout ( ) { }
4433	public DerivativeStructure toRadians ( ) { final DerivativeStructure ds = new DerivativeStructure ( compiler ) ; for ( int i = _NUM ; i < ds . data . length ; ++ i ) { ds . data [ i ] = FastMath . toRadians ( data [ i ] ) ; } return ds ; }
4473	@ Override protected void clearCachedAuthorizationInfo ( PrincipalCollection principals ) { if ( _clearCaches ) { super . clearCachedAuthorizationInfo ( principals ) ; } }
4510	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fall_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
4532	public static boolean isSimpleName ( String name ) { return reSimpleName . matcher ( name ) . matches ( ) ; }
4535	public Type < ? > findAncestor ( final Class < ? > ancestor ) { if ( ancestor . isInterface ( ) ) { return findInterface ( ancestor ) ; } else { if ( this . getRawType ( ) . equals ( ancestor ) ) { return this ; } else if ( ! TypeFactory . TYPE_OF_OBJECT . equals ( this ) ) { return getSuperType ( ) . findAncestor ( ancestor ) ; } else { return _NULL ; } } }
4540	public static SM_SYSTEM_MESSAGE STR_FORCE_LEAVE_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4549	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcATK_Instant_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
4568	public boolean hasFeature ( String name ) { return featureNames . contains ( name ) ; }
4579	public static Long streamOpCRC32 ( String stream ) { CRC32 crc = requestCRC . get ( ) ; try { crc . update ( stream . getBytes ( UTF_8 ) ) ; return crc . getValue ( ) ; } finally { crc . reset ( ) ; } }
4604	public void commitBuffer ( ) throws IOException { if ( mThread == _NULL ) { mThread = new Thread ( this ) ; mThread . start ( ) ; } if ( ++ mBufferIn >= mBufferCount ) mBufferIn = _NUM ; mBufferCommitted . release ( ) ; }
4606	public static ValueGetterSpacePredicate < ServerEntry > pathAll ( String path , ISpacePredicate ... predicates ) { return path ( path , all ( predicates ) ) ; }
4611	private void requestMoveOperation ( Intent data ) { OCFile folderToMoveAt = data . getParcelableExtra ( FolderPickerActivity . EXTRA_FOLDER ) ; ArrayList < OCFile > files = data . getParcelableArrayListExtra ( FolderPickerActivity . EXTRA_FILES ) ; getFileOperationsHelper ( ) . moveFiles ( files , folderToMoveAt ) ; }
4619	public VideoEditQuery edit ( UserActor actor , int videoId ) { return new VideoEditQuery ( getClient ( ) , actor , videoId ) ; }
4625	public void signalRewrittenEntry ( String uid ) { if ( _reWrittenEntries == _NULL ) _reWrittenEntries = new ConcurrentHashMap < String , String > ( ) ; _reWrittenEntries . put ( uid , uid ) ; }
4671	@ Before public void beforeTest ( ) { removeTestData ( ) ; }
4761	protected void clearEdges ( ) { getEdgeTable ( ) . clear ( ) ; }
4782	public static void ensureTreeIsLoaded ( String name ) { get ( name , _BOOL ) ; }
4808	public static < T extends Serializable > Task < T > privilegedTask ( Task < T > task ) { return new PrivilegedTask < T > ( task ) ; }
4823	@ AfterClass public void afterClass ( ) { toCleanUp . add ( experiment ) ; }
4860	public void updateDatabaseUploadStart ( UploadFileOperation upload ) { String localPath = ( FileUploader . LOCAL_BEHAVIOUR_MOVE == upload . getLocalBehaviour ( ) ) ? upload . getStoragePath ( ) : _NULL ; updateUploadStatus ( upload . getOCUploadId ( ) , UploadStatus . UPLOAD_IN_PROGRESS , UploadResult . UNKNOWN , upload . getRemotePath ( ) , localPath ) ; }
4861	public static User createUser ( String name ) { return new User ( name ) ; }
4898	public int replaceAll ( String regularExpression , String replaceText , boolean selectionOnly ) { System . err . println ( _CHAR not implemented _CHAR ) ; return _NUM ; }
4991	public void resetColors ( ) { mColors = new ArrayList < > ( ) ; }
5019	protected SingleDirectionSolver createSingleDirectionSolver ( IDETabulationProblem < N , AbstractionWithSourceStmt , M , V , I > problem , String debugName ) { return new SingleDirectionSolver ( problem , debugName ) ; }
5027	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelDeBuffPhysical_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
5096	public boolean isTerminated ( ) { return state == ABORTED ; }
5120	private void finalizeFailed ( final TestItem testItem ) { FailReferenceResource resource = failReferenceResourceBuilder . get ( ) . addLaunchRef ( testItem . getLaunchRef ( ) ) . addTestItemRef ( testItem . getId ( ) ) . build ( ) ; issuesRepository . save ( resource ) ; }
5158	public String toString ( ) { String sRes = _CHAR [ _CHAR ; Iterator iIter = iterator ( ) ; while ( iIter . hasNext ( ) ) { Object oNext = iIter . next ( ) ; sRes += oNext . toString ( ) ; if ( iIter . hasNext ( ) ) sRes += _CHAR , _CHAR ; } sRes += _CHAR ] _CHAR ; return sRes ; }
5178	public static SM_SYSTEM_MESSAGE STR_MERCENARY_CANT_ORDER_BY_TOO_DISTANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5189	public void fileNotFound ( ) { }
5211	public NumericHaving withType ( HavingType type ) { return new NumericHaving ( type , getAggregation ( ) , getValue ( ) ) ; }
5212	public void normalize ( ) { normalizeTo ( _NUM . _NUM ) ; }
5213	private static boolean isVerticalScreenConfig ( int availableWidth , int availableHeight , @ NotNull Dimension preferredSize ) { boolean stackVertically = preferredSize . width > preferredSize . height ; if ( availableWidth > _NUM && availableHeight > _NUM * availableWidth / _NUM ) { stackVertically = _BOOL ; } return stackVertically ; }
5221	public static boolean isNonnegativeInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { int temp = Integer . parseInt ( s ) ; if ( temp >= _NUM ) return _BOOL ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
5222	public void onDrawerClosed ( View view ) { super . onDrawerClosed ( view ) ; getSupportActionBar ( ) . setTitle ( getString ( R . string . app_name ) ) ; }
5229	public static Date parseTimestamp ( @ Nullable String string ) { Date date = _NULL ; try { if ( string != _NULL ) { date = ISO8601Utils . parse ( string , new ParsePosition ( _NUM ) ) ; } } catch ( ParseException e ) { throw Throwables . propagate ( e ) ; } return date ; }
5309	boolean inSubroutine ( final long id ) { if ( ( status & Label . VISITED ) != _NUM ) { return ( srcAndRefPositions [ ( int ) ( id >> > _NUM ) ] & ( int ) id ) != _NUM ; } return _BOOL ; }
5313	public boolean isThisParameter ( ) { return ( o1 instanceof SootMethod && o2 . equals ( PointsToAnalysis . THIS_NODE ) ) ? _BOOL : _BOOL ; }
5322	public boolean isExists ( ) { return exists ; }
5324	private void pop ( final int elements ) { if ( outputStackTop >= elements ) { outputStackTop -= elements ; } else { owner . inputStackTop -= elements - outputStackTop ; outputStackTop = _NUM ; } }
5342	public Builder addColumnsLong ( String ... names ) { for ( String s : names ) addColumnLong ( s ) ; return this ; }
5351	public void addEquipmentId ( final ProcessCacheObject processCacheObject , final Long pEquipmentId ) { if ( ! processCacheObject . getEquipmentIds ( ) . contains ( pEquipmentId ) ) { processCacheObject . getEquipmentIds ( ) . add ( pEquipmentId ) ; } }
5361	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostHate_ME_TO_SELF ( String value0d , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0d , skillname ) ; }
5362	public static Class resolvePrimitiveClassName ( String name ) { Class result = _NULL ; if ( name != _NULL && name . length ( ) <= _NUM ) { result = primitiveTypeNameMap . get ( name ) ; } return result ; }
5395	public boolean isManagedBy ( UserGroup userGroup ) { return userGroup != _NULL && CollectionUtils . containsAny ( groups , userGroup . getManagedGroups ( ) ) ; }
5501	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
5519	public String toString ( ) { String sRes = _CHAR [ _CHAR ; Iterator iIter = iterator ( ) ; while ( iIter . hasNext ( ) ) { Object oNext = iIter . next ( ) ; sRes += oNext . toString ( ) ; if ( iIter . hasNext ( ) ) sRes += _CHAR | _CHAR ; } sRes += _CHAR ] _CHAR ; return sRes ; }
5525	@ Deprecated public boolean isAssignableFrom ( TypeToken < ? > token ) { return isAssignableFrom ( token . getType ( ) ) ; }
5563	public void zoomIn ( ) { MPPointF center = mViewPortHandler . getContentCenter ( ) ; mViewPortHandler . zoomIn ( center . x , - center . y , mZoomInMatrixBuffer ) ; mViewPortHandler . refresh ( mZoomInMatrixBuffer , this , _BOOL ) ; MPPointF . recycleInstance ( center ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
5601	public boolean hasPermission ( Security security , GenericValue userLogin ) { return OrderReadHelper . hasPermission ( security , userLogin , orderHeader ) ; }
5647	public static ToolbarTapTarget forToolbarMenuItem ( android . widget . Toolbar toolbar , @ IdRes int menuItemId , CharSequence title , @ Nullable CharSequence description ) { return new ToolbarTapTarget ( toolbar , menuItemId , title , description ) ; }
5650	public SketchSetOperationPostAggregation withFunc ( SketchSetOperationPostAggFunction func ) { return new SketchSetOperationPostAggregation ( getName ( ) , func , getFields ( ) , getSize ( ) ) ; }
5657	public void update ( @ SwingCoordinate int x , @ SwingCoordinate int y , @ InputEventMask int modifiers ) { }
5710	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_Instant_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
5746	public boolean hasThrowable ( ) { return observers . get ( ) == TERMINATED && error != _NULL ; }
5757	public static SM_SYSTEM_MESSAGE STR_MSG_ENCHANT_ITEM_SUCCEEDED_15 ( String playerName , int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , playerName , new DescriptionId ( nameId ) ) ; }
5758	public float [ ] toFloatArray ( ) { float [ ] faRes = new float [ _NUM ] ; faRes [ _NUM ] = ( float ) ValueSimilarity ; faRes [ _NUM ] = ( float ) ContainmentSimilarity ; faRes [ _NUM ] = ( float ) SizeSimilarity ; return faRes ; }
5778	public static void clear ( int notificationId ) { MediaNotificationManager manager = getManager ( notificationId ) ; if ( manager == _NULL ) return ; manager . clearNotification ( ) ; sManagers . remove ( notificationId ) ; }
5783	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
5798	@ SkylarkCallable ( name = _CHAR first_line_message _CHAR , doc = _CHAR The message of the change _CHAR , structField = _BOOL ) public String firstLineMessage ( ) { int idx = message . indexOf ( _CHAR ) ; return idx == - _NUM ? message : message . substring ( _NUM , idx ) ; }
5839	private void readSortIndexFile ( DictionaryInfo dictionaryInfo , ColumnIdentifier columnIdentifier ) throws IOException { CarbonDictionarySortIndexReader sortIndexReader = getSortIndexReader ( columnIdentifier ) ; try { dictionaryInfo . setSortOrderIndex ( sortIndexReader . readSortIndex ( ) ) ; dictionaryInfo . setSortReverseOrderIndex ( sortIndexReader . readInvertedSortIndex ( ) ) ; } finally { sortIndexReader . close ( ) ; } }
5845	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
5855	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
5861	public static Aggregate < Map < String , Concept > , Optional < Double >> average ( String varName ) { return new AverageAggregate ( varName ) ; }
5864	public void initializeWithNative ( ) { initialize ( this ) ; }
5878	public void onDrawerClosed ( View view ) { super . onDrawerClosed ( view ) ; getSupportActionBar ( ) . setTitle ( getString ( R . string . app_name ) ) ; }
5920	protected void customPaint ( Graphics2D g , int width , int height ) { }
5967	public OrdersGetByIdQuery orderIds ( Integer ... value ) { return unsafeParam ( _CHAR order_ids _CHAR , value ) ; }
5968	private int findMaxY ( WeightedObservedPoint [ ] points ) { int maxYIdx = _NUM ; for ( int i = _NUM ; i < points . length ; i ++ ) { if ( points [ i ] . getY ( ) > points [ maxYIdx ] . getY ( ) ) { maxYIdx = i ; } } return maxYIdx ; }
5972	@ Nullable public Bitmap generateIconForUrl ( String url , boolean includePrivateRegistries ) { if ( TextUtils . isEmpty ( url ) ) return _NULL ; String text = getIconTextForUrl ( url , includePrivateRegistries ) ; if ( TextUtils . isEmpty ( text ) ) return _NULL ; return generateIconForText ( text ) ; }
5974	private void resetNextDiscSpaceCheck ( ) { nextCheckFallbackData = _NUM ; }
5976	public static String makeSafe ( String s ) { return ( s == _NULL ) ? _CHAR _CHAR : s ; }
5982	public boolean hasNext ( ) { for ( int i = no - _NUM ; i >= _NUM ; i -- ) { if ( indexes [ i ] < objects [ i ] . length - _NUM ) { return _BOOL ; } } return _BOOL ; }
6003	@ Override protected LocalTypeSet newInitialFlow ( ) { LocalTypeSet ret = ( LocalTypeSet ) emptySet . clone ( ) ; ret . setAllBits ( ) ; return ret ; }
6005	public boolean isIncludeLatencyHistograms ( ) { return isIncludeLatencyHistograms ; }
6017	private static String fixOcrLettersToNums ( String src ) { return src . replace ( _CHAR S _CHAR , _CHAR _NUM _CHAR ) . replace ( _CHAR s _CHAR , _CHAR _NUM _CHAR ) . replace ( _CHAR O _CHAR , _CHAR _NUM _CHAR ) . replace ( _CHAR o _CHAR , _CHAR _NUM _CHAR ) . replace ( _CHAR l _CHAR , _CHAR _NUM _CHAR ) . replace ( _CHAR I _CHAR , _CHAR _NUM _CHAR ) . replace ( _CHAR i _CHAR , _CHAR _NUM _CHAR ) . replace ( _CHAR Z _CHAR , _CHAR _NUM _CHAR ) . replaceAll ( _CHAR [ ^ _NUM - _NUM ] _CHAR , _CHAR _CHAR ) ; }
6021	public static SM_SYSTEM_MESSAGE STR_DUEL_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6049	public void addEntityClass ( Class < ? > entityClass ) { checkNotInitialized ( ) ; entityClasses . add ( entityClass ) ; }
6072	public ThetaSketchSetOperationPostAggregation withSize ( int size ) { return new ThetaSketchSetOperationPostAggregation ( getName ( ) , getFunc ( ) , getFields ( ) , size ) ; }
6084	private void computeTaintPaths ( final Set < AbstractionAtSink > res ) { IAbstractionPathBuilder builder = this . pathBuilderFactory . createPathBuilder ( maxThreadNum , iCfg ) ; builder . computeTaintPaths ( res ) ; this . results = builder . getResults ( ) ; builder . shutdown ( ) ; }
6134	public Value subtract ( Value num1 , Value num2 ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
6271	private void removeReadData ( final int size ) { if ( ! persistenceManager . getFallbackManager ( ) . removeReadData ( size ) ) { persistenceManager . getAlarmSender ( ) . fileNotReachable ( ACTIVATED , persistenceManager . getFallbackManager ( ) . getFallbackFileController ( ) . getDataFile ( ) ) ; FALLBACK_LOG . error ( _CHAR commitFallbackCommandLogs ( ) - CommandTags can not be removed from the fallback log file _CHAR ) ; } else { persistenceManager . getAlarmSender ( ) . fileNotReachable ( DOWN , persistenceManager . getFallbackManager ( ) . getFallbackFileController ( ) . getDataFile ( ) ) ; } }
6303	public static CertChainKeyPair generateSignedForClient ( String fqdn , X509Certificate issuerCertificate , PrivateKey issuerPrivateKey ) { try { return generateCertificateAndSign ( fqdn , issuerCertificate , issuerPrivateKey , getClientExtensions ( ) ) ; } catch ( CertIOException | CertificateException | OperatorCreationException e ) { throw new RuntimeException ( String . format ( _CHAR Failed to generate client certificate , reason : % s _CHAR , e . getMessage ( ) ) , e ) ; } }
6318	public static synchronized boolean isBodyColorRandom ( ) { return bodyColorRandom ; }
6381	public static < T > List < T > sort ( List < T > list , Comparator < ? super T > comparator ) { Collections . sort ( list , comparator ) ; return list ; }
6394	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCDeBuffPhysical_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
6415	public static ValueGetterSpacePredicate < ServerEntry > pathGreaterEqual ( String path , Comparable < ? > value ) { return path ( path , greaterEqual ( value ) ) ; }
6425	private Color createColor ( Display display , String preference ) { RGB rgb = PreferenceConverter . getColor ( SVNUIPlugin . getPlugin ( ) . getPreferenceStore ( ) , preference ) ; return new Color ( display , rgb ) ; }
6435	public boolean contains ( S2CellId other ) { return other . greaterOrEquals ( rangeMin ( ) ) && other . lessOrEquals ( rangeMax ( ) ) ; }
6462	@ Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
6484	public XtnEntry createTransactionEntry ( ServerTransaction txn ) { if ( isTransactionWithLease ( txn ) ) addTransactionWithLease ( txn ) ; XtnEntry xtnEntry = new XtnEntry ( txn ) ; addTransaction ( xtnEntry ) ; return xtnEntry ; }
6536	@ Override public ConstantRealDistribution makeDistribution ( ) { return new ConstantRealDistribution ( _NUM ) ; }
6586	void modifiedAttrValue ( AttrImpl attr , String oldvalue ) { }
6614	public BoardEditCommentQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
6644	public void addColor ( int color ) { if ( mColors == _NULL ) mColors = new ArrayList < Integer > ( ) ; mColors . add ( color ) ; }
6646	private void callShortcutManager ( BooleanSupplier r ) { try { if ( ! r . getAsBoolean ( ) ) { Utils . showToast ( mContext , _CHAR Call to ShortcutManager is rate - limited _CHAR ) ; } } catch ( Exception e ) { Log . e ( TAG , _CHAR Caught Exception _CHAR , e ) ; Utils . showToast ( mContext , _CHAR Error while calling ShortcutManager : '' + e . toString ( ) ) ; } }
6663	public boolean equals ( Object obj ) { return ReferentUuids . compare ( this , obj ) ; }
6676	static private double norm ( double [ ] x ) { int n = x . length ; double ss = _NUM . _NUM ; double xk ; for ( double aX : x ) { xk = aX ; ss += xk * xk ; } return ss ; }
6716	public PointsToSet reachingObjects ( SootField f ) { Type t = f . getType ( ) ; if ( t instanceof RefType ) return FullObjectSet . v ( ( RefType ) t ) ; return FullObjectSet . v ( ) ; }
6739	public void gameServerDisconnected ( ) { synchronized ( this ) { serverShutdown = _BOOL ; for ( AionConnection client : loginRequests . values ( ) ) { client . close ( _BOOL ) ; } loginRequests . clear ( ) ; if ( loginServer != _NULL ) { loginServer . close ( _BOOL ) ; } } log . info ( _CHAR GameServer disconnected from the Login Server ... _CHAR ) ; }
6742	public void stopRecordingAudio ( String id ) { AudioPlayer audio = this . players . get ( id ) ; if ( audio != _NULL ) { audio . stopRecording ( ) ; } }
6748	public void rollback ( ServerTransaction xtn , boolean anyUpdates ) throws SAException { }
6776	public String loadFile ( String sID ) { return getDocumentText ( sID , _BOOL ) ; }
6782	public static SM_SYSTEM_MESSAGE STR_FIELDARTIFACT_CASTING ( String value1 , String value0 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 , value2 ) ; }
6786	public static SM_SYSTEM_MESSAGE STR_DUEL_WITHDRAW_REQUEST ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6787	public static void addAcceptableFilterID ( EntryArrivedRemoteEvent theEvent , String filterID ) { theEvent . addAcceptableFilterID ( filterID ) ; }
6795	public String typeName ( ) { return _CHAR int _CHAR ; }
6798	public static void println ( boolean x ) { out . println ( x ) ; }
6817	@ Override public void close ( ) { if ( reusable ) { cleanDriver ( ) ; sendEvent ( _BOOL ) ; } else { super . close ( ) ; alive = _BOOL ; sendEvent ( _BOOL ) ; } }
6823	public static void println ( float x ) { out . println ( x ) ; }
6844	public static SM_SYSTEM_MESSAGE STR_MSG_FRIENDLY_LEAVE_IDARENA ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6904	public void commitHistogram ( ) { RecordHistogram . recordBooleanHistogram ( mHistogramName , mIsHit ) ; mIsHit = _BOOL ; }
6949	@ Override public boolean hasField ( String fldName ) { return fieldList . contains ( fldName ) ; }
6951	private static boolean resolveBoolean ( Context context , @ AttrRes int attr , boolean fallback ) { TypedArray a = context . getTheme ( ) . obtainStyledAttributes ( new int [ ] { attr } ) ; try { return a . getBoolean ( _NUM , fallback ) ; } finally { a . recycle ( ) ; } }
6978	public boolean equals ( Object obj ) { return ReferentUuids . compare ( this , obj ) ; }
7062	public void addToTimeDeadband ( final SourceDataTag currentTag , final ValueUpdate update ) { addToTimeDeadband ( currentTag , update , new SourceDataTagQuality ( ) ) ; }
7077	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
7094	@ Override public boolean hasField ( String fldName ) { return currentScan . hasField ( fldName ) ; }
7115	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
7139	public AudioSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
7152	public void startObservingFontPrefs ( ) { mFontSizePrefs . addObserver ( mFontSizeObserver ) ; updatePreview ( ) ; }
7165	public static ProtoFile create ( Model model , FileDescriptorProto proto , boolean isSource , ExtensionPool extensionPool ) { return new ProtoFile ( model , proto , isSource , extensionPool ) ; }
7221	public int size ( ) { throw new RuntimeException ( _CHAR IntegerNumberer does not implement the size ( ) method . '' ) ; }
7261	public SpaceTypeDescriptorBuilder addPathIndex ( String path , SpaceIndexType indexType ) { return addPathIndex ( path , indexType , _BOOL ) ; }
7272	public boolean isModuleDependency ( @ NotNull String artifact ) { AndroidGradleModel gradleModel = AndroidGradleModel . get ( myFacet ) ; return gradleModel != _NULL && GradleUtil . dependsOn ( gradleModel , artifact ) ; }
7334	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Snare_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
7352	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ReturnHome_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
7358	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_DARKBOSS_KILLED ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
7375	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
7426	public void writeEndGroup ( ) { writer . writeEndElementLineBreak ( ) ; }
7434	protected PagesClearCacheQuery url ( String value ) { return unsafeParam ( _CHAR url _CHAR , value ) ; }
7437	private void updateFields ( ) { updateClipboardDescription ( ) ; updateClipPreview ( ) ; updateEditField ( ) ; }
7446	@ Override public synchronized void powerOnSelfTest ( ) throws Error { for ( Iterator < WaveformSynthesizer > it = waveformSynthesizers . iterator ( ) ; it . hasNext ( ) ; ) { WaveformSynthesizer ws = it . next ( ) ; ws . powerOnSelfTest ( ) ; } }
7488	private void do_pts_interval_merge ( ) { for ( PtInsIntervalManager im : pt_objs . values ( ) ) { im . mergeFigures ( Parameters . max_pts_budget ) ; } }
7495	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_PARTY_ENEMY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
7534	public void verifyIsDisplayed ( ) { conditions . verifyPostAjax ( visibilityOf ( currentScope ) ) ; }
7586	public Filter withField ( Filter field ) { return new NotFilter ( field ) ; }
7610	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T extends Comparable > T limit ( final T min , final T value , final T max ) { if ( value . compareTo ( min ) < _NUM ) { return min ; } if ( value . compareTo ( max ) > _NUM ) { return max ; } return value ; }
7611	public boolean isPerStreamStatEnabled ( ) { return getBoolean ( SERVER_ENABLE_PERSTREAM_STAT , SERVER_ENABLE_PERSTREAM_STAT_DEFAULT ) ; }
7622	public static SM_SYSTEM_MESSAGE STR_SUBMIT_GM_PETITION_OK_TO_USER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
7672	public OrdersGetByIdQuery orderIds ( List < Integer > value ) { return unsafeParam ( _CHAR order_ids _CHAR , value ) ; }
7688	public static final SM_SYSTEM_MESSAGE STR_MSG_UNEQUIP_RANKITEM_TIMER_1M ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
7722	@ Override public String toString ( ) { return new String ( toByteArray ( ) ) ; }
7723	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ResurrectPositional_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
7773	public static ValueGetterSpacePredicate < ServerEntry > pathLess ( String path , Comparable < ? > value ) { return path ( path , less ( value ) ) ; }
7800	public static cn . nukkit . inventory . Inventory toNukkit ( Inventory inventory ) { if ( inventory == _NULL ) { return _NULL ; } if ( inventory instanceof PokkitLiveInventory ) { return ( ( PokkitLiveInventory ) inventory ) . nukkit ; } throw new IllegalArgumentException ( _CHAR Can not convert inventory _CHAR + inventory . getClass ( ) + _CHAR to a Nukkit inventory _CHAR ) ; }
7807	public BoardOpenTopicQuery openTopic ( UserActor actor , int groupId , int topicId ) { return new BoardOpenTopicQuery ( getClient ( ) , actor , groupId , topicId ) ; }
7823	public static Bucket createCompleteBucket ( Experiment experiment , boolean isControl ) { return createCompleteBucket ( experiment ) . setControl ( isControl ) ; }
7846	public boolean contains ( T listener ) { if ( mListeners != _NULL ) { return mListeners . contains ( listener ) ; } else { return _BOOL ; } }
7853	private void Hunter_SniperSkills ( ) { if ( getOwner ( ) . isCasting ( ) || isAlreadyDead ( ) ) { return ; } int rand = Rnd . get ( _NUM , _NUM ) ; switch ( rand ) { case _NUM : useSkill ( _NUM ) ; break ; case _NUM : useSkill ( _NUM ) ; break ; } }
7872	public AttribsExpression putAll ( AttribsExpression otherExpr ) { String origStr = otherExpr . attribsExpr . getOriginal ( ) ; if ( UtilValidate . isNotEmpty ( origStr ) ) { return new AttribsExpression ( FlexibleStringExpander . getInstance ( concatMapExpr ( attribsExpr . getOriginal ( ) , origStr ) ) ) ; } else { return new AttribsExpression ( attribsExpr ) ; } }
7914	public static Heal handle ( EntityLivingBase entity , float damage ) { Heal event = new Heal ( entity , damage ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
7989	public static final boolean allNonNull ( Object ... objects ) { if ( objects == _NULL ) { return _BOOL ; } for ( Object object : objects ) { if ( object == _NULL ) { return _BOOL ; } } return _BOOL ; }
7992	public void append ( byte [ ] utf8 , int start , int len ) { setCapacity ( length + len , _BOOL ) ; System . arraycopy ( utf8 , start , bytes , length , len ) ; length += len ; }
8002	protected Token token ( TokenType type , int tStart , int tLength , int newStart , int newLength ) { tokenStart = newStart ; tokenLength = newLength ; return new Token ( type , tStart , tLength ) ; }
8003	public static boolean hasColumn ( String tableName ) { switch ( tableName ) { case COLUMN_NUMBER : return _BOOL ; default : return _BOOL ; } }
8084	private void upgradeMapViewsToColumns ( ) { String sql = _CHAR insert into mapview_columns _CHAR + _CHAR select mapviewid , ' dx ' , 0 '' + '' from mapview mv '' + '' where not exists ( _CHAR + _CHAR select mc . mapviewid _CHAR + _CHAR from mapview_columns mc _CHAR + _CHAR where mv . mapviewid = mc . mapviewid ) '' ; executeSql ( sql ) ; }
8091	public void importXLIFF ( Long assetId , String xliffContent , boolean updateTM ) { Asset asset = assetRepository . findOne ( assetId ) ; ImportExportedXliffStep importExportedXliffStep = new ImportExportedXliffStep ( asset , xliffContent , updateTM ) ; importXLIFF ( importExportedXliffStep , xliffContent ) ; }
8106	public static PrettyPrint indentWithTabs ( ) { return new PrettyPrint ( new char [ ] { _CHAR } ) ; }
8109	public Stream < Entry < Tags , MetricValue >> streamAsMap ( Tags dfl ) { return values_ . map ( _NULL , _NULL ) . mapCombine ( _NULL , _NULL ) ; }
8136	public static String timestamp ( DateTime ts ) { return Long . toString ( ts . getMillis ( ) / _NUM ) ; }
8157	public final boolean isLenient ( ) { return lenient ; }
8197	private static boolean trusted ( Iterator iter , TrustVerifier . Context ctx ) throws RemoteException { while ( iter . hasNext ( ) ) { if ( ! ctx . isTrustedObject ( iter . next ( ) ) ) { return _BOOL ; } } return _BOOL ; }
8209	public static final SM_SYSTEM_MESSAGE STR_MSG_UNEQUIP_RANKITEM_TIMER_10M ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
8224	public static void applyEffect ( AbstractAI ai2 , SkillTemplate template , Creature target ) { Effect effect = new Effect ( ai2 . getOwner ( ) , target , template , template . getLvl ( ) , _NUM ) ; effect . setIsForcedEffect ( _BOOL ) ; effect . initialize ( ) ; effect . applyEffect ( ) ; }
8234	protected boolean hasAttemptRemaining ( ) { return mCurrentRetryCount <= mMaxNumRetries ; }
8291	protected void skipped ( AssumptionViolatedException e , Description description ) { }
8326	public static SM_SYSTEM_MESSAGE STR_MSG_EDIT_NAME_ERROR_DEFAULT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8350	public Iterator children ( Node n ) { return super . outNeighbors ( n ) ; }
8394	public AudioRestoreQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
8469	@ NotNull public static ValidationResult validateAndroidSdk ( @ Nullable File sdkPath , boolean includePathInMessage ) { return validatedSdkPath ( sdkPath , _CHAR SDK _CHAR , _BOOL , includePathInMessage ) ; }
8475	public boolean contains ( byte entryCode ) { return this . optionsTable . containsKey ( new Byte ( entryCode ) ) ; }
8512	private void addToMetricDictionary ( MetricDictionary metricDictionary , List < MetricInstance > metrics ) { metrics . stream ( ) . map ( _NULL ) . forEach ( _NULL ) ; }
8531	public NewsfeedSearchQueryWithExtended q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
8583	private static String buildMessage ( final Locale locale , final Localizable specifier , final Object ... parts ) { return ( specifier == _NULL ) ? _CHAR _CHAR : new MessageFormat ( specifier . getLocalizedString ( locale ) , locale ) . format ( parts ) ; }
8609	@ Override public Set < Type > possibleTypes ( ) { return types ; }
8624	void register ( String [ ] patterns ) { for ( String pattern : patterns ) { register ( pattern , TRUE ) ; } }
8655	public static Despawn handle ( EntityLiving living ) { Despawn event = new Despawn ( living ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
8659	@ Override protected void onStop ( ) { super . onStop ( ) ; LOG . d ( TAG , _CHAR Stopped the activity . '' ) ; if ( this . appView == _NULL ) { return ; } this . appView . handleStop ( ) ; }
8672	@ Override public String toString ( ) { return new String ( toByteArray ( ) ) ; }
8698	public static String fixEndLine ( String logMessage ) { if ( getLogLevel ( ) == Level . DEBUG ) { return logMessage ; } return logMessage . replaceAll ( _CHAR \ n _CHAR , _CHAR _CHAR ) ; }
8713	public static Spawn handle ( EntityLivingBase living ) { Spawn event = new Spawn ( living ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
8720	public RegularExpressionExtractionFunction withPattern ( Pattern pattern ) { return new RegularExpressionExtractionFunction ( pattern ) ; }
8829	@ Override public void redo ( Transaction tx ) { }
8834	protected void shiftLeft ( ) { for ( int i = mant . length - _NUM ; i > _NUM ; i -- ) { mant [ i ] = mant [ i - _NUM ] ; } mant [ _NUM ] = _NUM ; exp -- ; }
8851	public static SM_SYSTEM_MESSAGE STR_SKILL_INSUFFICIENT_COST_FOR_TOGGLE_SKILLL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8888	@ Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
8945	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
8987	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
8991	public static ValueGetterSpacePredicate < ServerEntry > propertyGreater ( String propertyName , Comparable < ? > value ) { return property ( propertyName , greater ( value ) ) ; }
8996	@ Override public EndpointStatus join ( InetSocketAddress endpoint , Map < String , InetSocketAddress > additionalEndpoints , int shardId ) throws Group . JoinException , InterruptedException { throw new UnsupportedOperationException ( _CHAR NameServerSet does not support join _CHAR ) ; }
9054	public static double standardDeviation ( final double [ ] values ) { return FastMath . sqrt ( variance ( values ) ) ; }
9092	public static int daysSince1900 ( Date date ) { final Calendar calendar = Calendar . getInstance ( ) ; calendar . clear ( ) ; calendar . set ( _NUM , _NUM , _NUM ) ; return daysBetween ( calendar . getTime ( ) , date ) ; }
9094	public static SM_SYSTEM_MESSAGE STR_FIELDARTIFACT_CORE_CASTING ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
9095	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_MAX_REPEAT_COUNT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
9135	public void addObserver ( Observer observer ) { Assert . notNull ( _CHAR observer _CHAR , observer ) ; observers . addIfAbsent ( observer ) ; }
9160	public static int sumFromTo ( int iStart , int iEnd ) { int iRes = _NUM ; for ( int iCnt = iStart ; iCnt <= iEnd ; iRes += iCnt ++ ) ; return iRes ; }
9173	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_PARTY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
9185	public boolean isSpring ( ) { return this . frequency > _NUM . _NUM ; }
9216	public String typeName ( ) { return _CHAR long _CHAR ; }
9228	public void start ( Context applicationContext ) { assert applicationContext != _NULL ; if ( mState != STATE_IDLE ) throwInvalidState ( ) ; mApiClient = createApiClient ( mCastListener , applicationContext ) ; mApiClient . connect ( ) ; mState = STATE_CONNECTING_TO_API ; }
9230	public static Object executeScript ( String filePath , String functionName , Map < String , Object > context ) { return executeScript ( filePath , functionName , context , new Object [ ] { context } ) ; }
9269	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_ENTER_INSTANCE_MAX_COUNT ( int num0 , String worldname1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , worldname1 ) ; }
9315	public boolean isNavigationImageEnabled ( ) { return navigationImageEnabled ; }
9411	public JComponent createComponent ( ) { return createHorizontalRangeSlider ( ) ; }
9461	public Builder addColumnLong ( String name ) { return addColumn ( new LongMetaData ( name ) ) ; }
9489	public boolean isPrimary ( ) { return spaceMode == SpaceMode . PRIMARY ; }
9504	public boolean shift ( double delta ) { return set ( getMin ( ) + delta , getMax ( ) + delta ) ; }
9515	public boolean isTextSms ( ) { return text != _NULL ; }
9517	public boolean hasNameChanged ( final ISourceCommandTag sourceCommandTag , final ISourceCommandTag oldSourceCommandTag ) { return ! sourceCommandTag . getName ( ) . equals ( oldSourceCommandTag . getName ( ) ) ; }
9526	public PhotosCopyQuery copy ( UserActor actor , int ownerId , int photoId ) { return new PhotosCopyQuery ( getClient ( ) , actor , ownerId , photoId ) ; }
9527	public boolean isHead ( ) { return parent == _NULL ; }
9545	public static SM_SYSTEM_MESSAGE STR_ABYSS_REPAIR_BROKEN ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
9586	private static boolean canResolveDownloadItem ( Context context , long downloadId ) { assert ! ThreadUtils . runningOnUiThread ( ) ; Intent intent = getLaunchIntentFromDownloadId ( context , downloadId ) ; return ( intent == _NULL ) ? _BOOL : ExternalNavigationDelegateImpl . resolveIntent ( context , intent , _BOOL ) ; }
9596	public final void unschedule ( final ScheduledTask task ) { if ( task == _NULL ) return ; task . suspend ( ) ; }
9608	private static boolean isInCenterTargetZone ( float x , float y , float left , float top , float right , float bottom ) { if ( x > left && x < right && y > top && y < bottom ) { return _BOOL ; } return _BOOL ; }
9643	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
9645	private int findActivityElement ( int activityIndex ) { for ( int elementIndex = _NUM ; elementIndex < mActivityList . size ( ) ; elementIndex ++ ) { if ( mActivityList . get ( elementIndex ) . mActivityIndex == activityIndex ) { return elementIndex ; } } return - _NUM ; }
9660	protected float calculateAnimationDisplacement ( float initialVelocity , float duration ) { return initialVelocity * duration / _NUM ; }
9667	boolean isContextualSearchUrl ( String url ) { return url . equals ( getSearchUrl ( ) ) ; }
9668	public List < ShoppingCartItem > findAllCartItems ( String productId ) { return this . findAllCartItems ( productId , _NULL ) ; }
9699	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
9759	public static < T > Promise < Void > ignore ( Future < T > future ) { return ignore ( future , _NULL ) ; }
9778	private void onConnect ( ) { connectionState = ConnectionState . Connected ; checkForUpdatedFlight = _BOOL ; subscribe ( String . format ( trafficAlertChannel , flightId ) ) ; subscribe ( String . format ( situationalAwarenessChannel , flightId ) ) ; }
9801	public boolean containsCondition ( FallbackCondition condition ) { return this . fallbackConditions . contains ( condition ) ; }
9819	protected boolean hasAttemptRemaining ( ) { return mCurrentRetryCount <= mMaxNumRetries ; }
9913	final public void forward ( String model ) { Controller . dispatch ( model , req , resp , method ) ; }
9915	public void addItemFromInflater ( Preference preference ) { addPreference ( preference ) ; }
9978	NewProjectDescriptor withCompanyDomain ( @ NotNull String domain ) { myDomain = domain ; return this ; }
9988	@ Override public boolean equals ( Object that ) { if ( ! ( that instanceof S2LatLngRect ) ) { return _BOOL ; } S2LatLngRect otherRect = ( S2LatLngRect ) that ; return lat ( ) . equals ( otherRect . lat ( ) ) && lng ( ) . equals ( otherRect . lng ( ) ) ; }
10009	public static SM_SYSTEM_MESSAGE STR_SKILL_DODGED_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
10052	public static double fact ( double n_ ) { n_ += _NUM - _NUM ; double result = _NUM . _NUM ; for ( double i = _NUM ; i <= n_ ; i += _NUM . _NUM ) result *= i ; return result ; }
10080	public static String appendVersionSuffix ( String apiVersion , String versionSuffix ) { return Strings . isNullOrEmpty ( versionSuffix ) ? apiVersion : apiVersion + versionSuffix ; }
10096	private int peekButOne ( ) throws CompileException , IOException { if ( this . nextButOneChar != - _NUM ) return this . nextButOneChar ; this . peek ( ) ; try { return ( this . nextButOneChar = this . internalRead ( ) ) ; } catch ( UnicodeUnescapeException ex ) { throw new CompileException ( ex . getMessage ( ) , this . location ( ) , ex ) ; } }
10117	protected void updateRowCount ( ) { int maxrow = m_rows . getMaximumRow ( ) + _NUM ; Iterator cols = getColumns ( ) ; while ( cols . hasNext ( ) ) { Column c = ( Column ) cols . next ( ) ; c . setMaximumRow ( maxrow ) ; } }
10149	protected AudioAddQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
10179	public void removeUnlocked ( IObjectInfo < T > oi ) { remove_impl ( ( ObjectInfo < T > ) oi ) ; }
10227	public int compare ( File file1 , File file2 ) { return caseSensitivity . checkCompareTo ( file1 . getName ( ) , file2 . getName ( ) ) ; }
10231	public final ProgressEvent increaseProgress ( ) { Progress ++ ; return this ; }
10245	public boolean willDisconnect ( ) { return disconnectReason != _NULL ; }
10246	NewProjectDescriptor withMinSdk ( @ NotNull String minSdk ) { myMinSdk = minSdk ; return this ; }
10248	public static SM_SYSTEM_MESSAGE STR_MSG_PAY_ACCOUNT_ME ( long highestValue ) { return new SM_SYSTEM_MESSAGE ( _NUM , highestValue ) ; }
10256	public boolean isSpring ( ) { return this . frequency > _NUM . _NUM ; }
10302	public boolean isUsernameIndex ( String [ ] args , int index ) { return index == _NUM ; }
10308	public static void init ( Context context ) { if ( cameraManager == _NULL ) { cameraManager = new CameraManager ( context ) ; } }
10309	public int hashCode ( ) { return l . hashCode ( ) ; }
10334	public static ValueGetterSpacePredicate < ServerEntry > propertyEqual ( String propertyName , Object value ) { return property ( propertyName , equal ( value ) ) ; }
10336	public boolean hasRelation ( String name ) { return relations . isPresent ( name ) ; }
10339	public void addToIncluded ( Document document ) { document . addInclude ( this ) ; }
10387	public void resetIterator ( ) { iterator = head ; }
10400	@ Before public void beforeTest ( ) { removeTestData ( ) ; }
10410	@ GET public String reset ( ) { this . map . clear ( ) ; return _CHAR Reset endpoints _CHAR ; }
10442	public boolean hasDimension ( String key ) { return dimensions . indexOf ( new BaseDimensionalObject ( key ) ) != - _NUM ; }
10447	public MetricInstance withName ( String metricName ) { return new MetricInstance ( metricName , maker , dependencyMetricNames . toArray ( new String [ dependencyMetricNames . size ( ) ] ) ) ; }
10522	public boolean checkError ( ) { flush ( ) ; synchronized ( lock ) { return mIoError ; } }
10568	public void addActionListener ( ActionListener actionListener ) { this . listenerList . add ( ActionListener . class , actionListener ) ; }
10652	public static SM_SYSTEM_MESSAGE STR_ABYSS_SHIELD_BROKEN ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
10699	protected void removeStmts ( List < IfStmt > deadStmts ) { Chain units = sb . getUnits ( ) ; Iterator < IfStmt > deadIt = deadStmts . iterator ( ) ; while ( deadIt . hasNext ( ) ) { Unit dead = deadIt . next ( ) ; units . remove ( dead ) ; dead . clearUnitBoxes ( ) ; } }
10700	public boolean dump_cg ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - cg _CHAR ) ; }
10723	public int order ( ) { return coeffs . length ; }
10771	public boolean isCacheExternalDB ( ) { return _isCacheExternalDB ; }
10781	protected void initConfig ( KadminProducerConfig config ) { }
10803	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_BAN_SELF_BANNED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10815	public static SM_SYSTEM_MESSAGE STR_UNION_BAN_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10853	protected List < byte [ ] > convertStringListToByteArray ( List < String > valueList ) { List < byte [ ] > byteArrayList = new ArrayList < > ( valueList . size ( ) ) ; for ( String value : valueList ) { byteArrayList . add ( value . getBytes ( Charset . defaultCharset ( ) ) ) ; } return byteArrayList ; }
10890	public void validate ( ) throws ConfigurationException { if ( hardwareAddress == _NULL ) { throw new ConfigurationException ( ConfigurationException . INVALID_PARAMETER_VALUE , _CHAR Hardware address _NULL . Command Tag not valid . '' ) ; } hardwareAddress . validate ( ) ; }
10909	public synchronized void write ( BlockId blk ) { fileMgr . write ( blk , contents ) ; }
10919	public void removeRelated ( String relationName ) throws GenericEntityException { this . getDelegator ( ) . removeRelated ( relationName , this ) ; }
10937	public void insert ( final T object , final int index ) { synchronized ( mLock ) { mList . add ( index , object ) ; } notifyDataSetChanged ( ) ; }
10955	public AudioReorderQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
11013	public boolean hasThrowable ( ) { return observers . get ( ) == TERMINATED && error != _NULL ; }
11018	public void restoreItemContext ( Map < String , Object > context , Object prevItemContext ) { restoreItemContext ( context , prevItemContext , MenuRenderState . retrieve ( context ) ) ; }
11045	public static ValueGetterSpacePredicate < ServerEntry > propertyAll ( String propertyName , ISpacePredicate ... predicates ) { return property ( propertyName , all ( predicates ) ) ; }
11056	private void fireUpdateReceivedEvent ( ) { try { listenersLock . readLock ( ) . lock ( ) ; for ( BaseTagListener listener : listeners ) { listener . onUpdate ( this ) ; } } finally { listenersLock . readLock ( ) . unlock ( ) ; } }
11118	@ Override public boolean markSupported ( ) { return markSupported ; }
11121	public void validate ( List < ValidationException > exceptionList ) { super . validate ( exceptionList ) ; final boolean runAllValidators = Options . v ( ) . debug ( ) || Options . v ( ) . validate ( ) ; for ( BodyValidator validator : getValidators ( ) ) { if ( ! validator . isBasicValidator ( ) && ! runAllValidators ) continue ; validator . validate ( this , exceptionList ) ; } }
11122	private AudioMapType generateDefaultAudioMap ( String locale ) { AudioMapType audioMap = new AudioMapType ( ) ; audioMap . setMainAudio ( new MainAudioType ( ) ) ; audioMap . getMainAudio ( ) . setLocale ( locale ) ; audioMap . getMainAudio ( ) . setName ( _CHAR main - audio . mov _CHAR ) ; if ( ! fillDefaultAudioMapFromDescriptor ( audioMap ) ) { setAudioMapDefaultOptions ( audioMap ) ; } return audioMap ; }
11128	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
11157	public boolean hasForm ( ) { return htmlCode != _NULL && ! htmlCode . trim ( ) . isEmpty ( ) ; }
11171	public Iterator aggregatedTuples ( int row ) { return new AggregatedIterator ( row ) ; }
11177	public PagesSaveAccessQuery saveAccess ( UserActor actor , int pageId ) { return new PagesSaveAccessQuery ( getClient ( ) , actor , pageId ) ; }
11203	public UsersGetNearbyQuery timeout ( Integer value ) { return unsafeParam ( _CHAR timeout _CHAR , value ) ; }
11204	public static void addStrut ( JComponent b , int layout , int size ) { if ( size < _NUM ) return ; b . add ( getAxis ( b , layout ) == BoxLayout . X_AXIS ? Box . createHorizontalStrut ( size ) : Box . createVerticalStrut ( size ) ) ; }
11218	public CriteriaHibernateSpaceDataSourceConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
11267	public static boolean hasDependency ( Expression expr ) { ColumnCollector cc = new ColumnCollector ( _BOOL ) ; expr . visit ( cc ) ; return cc . getColumnCount ( ) > _NUM ; }
11284	@ Override public void onBackPressed ( ) { if ( folderMode && ! isDisplayingFolderView ( ) ) { setFolderAdapter ( ) ; return ; } setResult ( RESULT_CANCELED ) ; super . onBackPressed ( ) ; }
11326	public TextEditor indent ( int spaces ) { StringBuilder sb = new StringBuilder ( spaces ) ; for ( int i = _NUM ; i < spaces ; i ++ ) { sb . append ( _CHAR ) ; } return replaceAll ( _CHAR ^ _CHAR , sb . toString ( ) ) ; }
11338	static boolean isTextXml ( String mime ) { return mime != _NULL && ( mime . equals ( _CHAR text / xml _CHAR ) || mime . equals ( _CHAR text / xml - external - parsed - entity _CHAR ) || mime . startsWith ( _CHAR text / _CHAR ) && mime . endsWith ( _CHAR + xml _CHAR ) ) ; }
11344	public static ToolbarTapTarget forToolbarMenuItem ( android . widget . Toolbar toolbar , @ IdRes int menuItemId , CharSequence title ) { return forToolbarMenuItem ( toolbar , menuItemId , title , _NULL ) ; }
11353	public boolean hasValue ( ) { return observers . get ( ) == TERMINATED && value != _NULL ; }
11354	public String typeName ( ) { return _CHAR string _CHAR ; }
11384	@ Override public Change updateConfig ( T abstractEquipment , Properties properties ) throws IllegalAccessException { Change change = super . updateConfig ( abstractEquipment , properties ) ; return change ; }
11434	private boolean filterUser ( ILogEntry logEntry , String user ) { if ( user == _NULL ) return _BOOL ; if ( regExp ) { return matchesExpression ( logEntry . getAuthor ( ) , user + CHAR_MATCH_MANY ) ; } else { return containsExpression ( logEntry . getAuthor ( ) , user ) ; } }
11454	public static synchronized boolean isBodyStenciled ( ) { return bodyStenciled ; }
11534	public boolean zip ( File [ ] src , File dest ) { return _BOOL ; }
11549	public SemiVariance withVarianceDirection ( Direction direction ) { return new SemiVariance ( this . biasCorrected , direction ) ; }
11622	public boolean isInterface ( ) { checkLevel ( HIERARCHY ) ; return Modifier . isInterface ( this . getModifiers ( ) ) ; }
11636	protected void addChild ( LazyNode token ) { if ( lastChild == _NULL ) { child = token ; lastChild = token ; return ; } lastChild . next = token ; lastChild = token ; }
11660	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public < T > T read ( InputStream inputStream , Class < T > classType ) throws IOException { try ( ObjectInputStream oin = new ObjectInputStream ( inputStream ) ) { return ( T ) oin . readObject ( ) ; } catch ( ClassNotFoundException e ) { throw new RuntimeException ( e ) ; } }
11737	@ Override public void endGroup ( Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . endGroup ( augs ) ; if ( fDTDContentModelHandler != _NULL ) { fDTDContentModelHandler . endGroup ( augs ) ; } }
11760	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SkillATKDrain_Instant_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
11774	private List < Integer > convertToList ( int [ ] data ) { Integer [ ] wrapperType = ArrayUtils . toObject ( data ) ; return Arrays . asList ( wrapperType ) ; }
11784	public static Array < String > splitAndTrim ( String str ) { return splitAndTrim ( str , _CHAR \ n _CHAR ) ; }
11808	public static boolean isIdCardNumber ( String str ) { return isRegexMatch ( str , REGEX_ID_CARD ) ; }
11826	public QueryPlan query ( String tableName ) throws DatabaseException { assert ( this . active ) ; checkAndGrabSharedLock ( tableName ) ; return new QueryPlan ( this , tableName ) ; }
11831	private static boolean resolveBoolean ( Context context , @ AttrRes int attr , boolean fallback ) { TypedArray a = context . getTheme ( ) . obtainStyledAttributes ( new int [ ] { attr } ) ; try { return a . getBoolean ( _NUM , fallback ) ; } finally { a . recycle ( ) ; } }
11838	public static int ushortToInt ( short s ) { return s & MAX_USHORT ; }
11860	public boolean remove ( final int location , final T object ) { final boolean removed = this . data . remove ( object ) ; this . notifyItemRangeRemoved ( location , this . data . size ( ) ) ; return removed ; }
11918	public static ValueGetterSpacePredicate < ServerEntry > propertyIn ( String propertyName , Object ... values ) { return property ( propertyName , in ( values ) ) ; }
11928	@ Override public void endGroup ( Augmentations augs ) throws XNIException { }
11935	protected InputStream from ( ) { return from ; }
11955	@ Nonnull public < T > WorkUnit with ( @ Nonnull Class < T > type , @ Nullable T val ) { return this ; }
11983	@ Override public boolean add ( T e ) { int index = getInsertIndex ( e ) ; super . add ( index , e ) ; return _BOOL ; }
11997	private void clearNotifications ( ) { updateNotificationsNodeLabel ( currentNode , Resources . getText ( _CHAR LBL_Notifications _CHAR ) ) ; }
12015	protected void reset ( ) { Arrays . fill ( m_isCandidate , _BOOL ) ; }
12026	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_INSTANCE_TOO_MANY_MEMBERS ( int num0 , String worldname1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , worldname1 ) ; }
12051	public static int uniform ( int n ) { if ( n <= _NUM ) throw new IllegalArgumentException ( _CHAR Parameter N must be positive _CHAR ) ; return random . nextInt ( n ) ; }
12064	@ Override public int hashCode ( ) { return ( matcher == _NULL ? _NUM : matcher . hashCode ( ) ) ^ ( action == _NULL ? _NUM : action . hashCode ( ) ) ; }
12137	public Lexicon removeLowCoverageWords ( double coverage ) { int minDf = ( int ) ( numDocs * coverage ) ; return removeLowDfWords ( minDf ) ; }
12141	public NewsfeedSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
12150	public static ServiceClient createServiceClient ( TrustManager trustManager , KeyManager keyManager , int requestPayloadSizeLimit ) { return createServiceClient ( CertificateUtil . createSSLContext ( trustManager , keyManager ) , requestPayloadSizeLimit ) ; }
12152	public void removeGroups ( String [ ] oldGroups ) { testArrayForNullElement ( oldGroups ) ; boolean maybeDiscard ; synchronized ( registrars ) { if ( terminated ) throw new IllegalStateException ( _CHAR discovery terminated _CHAR ) ; if ( groups == _NULL ) throw new UnsupportedOperationException ( _CHAR ca n _CHAR_CHAR_CHAR_CHAR ) ; maybeDiscard = removeGroupsInt ( oldGroups ) ; } if ( maybeDiscard ) maybeDiscardRegistrars ( ) ; }
12157	protected boolean hasAttemptRemaining ( ) { return mCurrentRetryCount <= mMaxNumRetries ; }
12161	@ Override public Collection < SerialMessage > initialize ( boolean refresh ) { ArrayList < SerialMessage > result = new ArrayList < SerialMessage > ( ) ; if ( isSupportRequestSupported == _BOOL && ( refresh == _BOOL || initialiseDone == _BOOL ) && getVersion ( ) > _NUM ) { result . add ( getSupportedMessage ( ) ) ; } return result ; }
12166	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Heal_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
12170	public double distanceSquared ( Vector2 point ) { double dx = this . x - point . x ; double dy = this . y - point . y ; return dx * dx + dy * dy ; }
12182	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_PROC_NOT_PROC_GIVE_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12198	public void addModule ( Module module ) { module . setupModule ( new ModuleContextImpl ( ) ) ; modules . add ( module ) ; }
12221	private boolean canReadMessageConversation ( User user , org . hisp . dhis . message . MessageConversation messageConversation ) { return messageConversation . getUsers ( ) . contains ( user ) || user . isSuper ( ) ; }
12244	public boolean contains ( final P point ) { return point . distance ( center ) <= radius ; }
12319	public Location subtract ( double x , double y , double z ) { this . x -= x ; this . y -= y ; this . z -= z ; return this ; }
12398	public static IOFileFilter ageFileFilter ( Date cutoffDate , boolean acceptOlder ) { return new AgeFileFilter ( cutoffDate , acceptOlder ) ; }
12415	public static java . sql . Date toSqlDate ( int month , int day , int year ) { java . util . Date newDate = toDate ( month , day , year , _NUM , _NUM , _NUM ) ; if ( newDate != _NULL ) { return new java . sql . Date ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
12435	public void loadMoreComplate ( ) { isLoadingMoreData = _BOOL ; if ( mFooterView != _NULL ) { if ( isManualLoadMoreData ) { mFooterView . getLayoutParams ( ) . height = _NUM ; } else { mFooterView . setVisibility ( GONE ) ; } } getAdapter ( ) . notifyDataSetChanged ( ) ; }
12437	public PartialExtractionFunction withPattern ( Pattern pattern ) { return new PartialExtractionFunction ( pattern ) ; }
12446	public static boolean hasTimeDeadbandChanged ( final ISourceDataTag sourceDataTag , final ISourceDataTag oldSourceDataTag ) { return sourceDataTag . getTimeDeadband ( ) != oldSourceDataTag . getTimeDeadband ( ) ; }
12493	public int size ( ) { if ( mGarbage ) { gc ( ) ; } return mSize ; }
12558	private void subscribeToHeartbeatTopic ( ) throws JMSException { Session session = connection . createSession ( _BOOL , Session . AUTO_ACKNOWLEDGE ) ; MessageConsumer consumer = session . createConsumer ( heartbeatTopic ) ; consumer . setMessageListener ( heartbeatListenerWrapper ) ; }
12567	@ Override protected FlowSet < N > entryInitialFlow ( ) { FlowSet < N > initSet = ( FlowSet < N > ) emptySet . clone ( ) ; for ( N h : graph . getHeads ( ) ) { initSet . add ( h ) ; } return initSet ; }
12569	public boolean hasDetails ( String sku ) { return mSkuMap . containsKey ( sku ) ; }
12583	private Cacheable fetchFromDB ( final Object id ) { return cacheLoaderDAO . getItem ( id ) ; }
12604	protected OutputStream to ( ) { return to ; }
12611	public boolean isAspectPreserving ( ) { return ( myFlags & PRESERVE_RATIO ) != _NUM ; }
12622	public void requestPermissions ( int requestCode ) { }
12636	public void put ( int ii , int jj , Z a ) { dirty = _BOOL ; re [ ii - basex ] [ jj - basex ] = a . re ; im [ ii - basex ] [ jj - basex ] = a . im ; }
12661	public boolean isPropDirty ( ) { SVNStatusKind thePropStatus = getPropStatus ( ) ; return thePropStatus . equals ( SVNStatusKind . CONFLICTED ) || thePropStatus . equals ( SVNStatusKind . MODIFIED ) ; }
12668	public final int establishedFusionMode ( ) { return establishedFusionMode ; }
12719	public static boolean hasAliveTagIntervalChanged ( final IEquipmentConfiguration equipmentConfiguration , final IEquipmentConfiguration oldEquipmentConfiguration ) { return equipmentConfiguration . getAliveTagInterval ( ) != oldEquipmentConfiguration . getAliveTagInterval ( ) ; }
12727	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
12767	public static Predicate < EmailData > toAddress ( final String address ) { return _NULL ; }
12782	public static Box createHorizontalBox ( int gap , @ NotNull Component ... components ) { return createHorizontalBox ( gap , Lists . newArrayList ( components ) ) ; }
12819	protected UsersReportQuery userId ( int value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
12825	@ SuppressWarnings ( _CHAR unused _CHAR ) public SelectionBuilder reset ( ) { mTable = _NULL ; if ( mProjectionMap != _NULL ) { mProjectionMap . clear ( ) ; } if ( mSelection != _NULL ) { mSelection . setLength ( _NUM ) ; } if ( mSelectionArgs != _NULL ) { mSelectionArgs . clear ( ) ; } return this ; }
12854	public WallRestoreQuery restore ( UserActor actor ) { return new WallRestoreQuery ( getClient ( ) , actor ) ; }
12878	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillCost_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
12901	public static IOFileFilter ageFileFilter ( long cutoff , boolean acceptOlder ) { return new AgeFileFilter ( cutoff , acceptOlder ) ; }
12921	public boolean equals ( Object obj ) { if ( ! ( obj instanceof ServiceID ) ) return _BOOL ; ServiceID sid = ( ServiceID ) obj ; return ( mostSig == sid . mostSig && leastSig == sid . leastSig ) ; }
12949	private boolean useCache ( ) { return ( api . currentTimeMillis ( ) - lastMapUpdate ) < api . getSettings ( ) . getMapSettings ( ) . getMinRefresh ( ) ; }
12961	public void start ( Activity activity , int requestCode ) { activity . startActivityForResult ( getIntent ( activity ) , requestCode ) ; }
12969	@ Deprecated public UrlSpaceConfigurer userDetails ( String userName , String password ) { return securityConfig ( new SecurityConfig ( userName , password ) ) ; }
12980	public static SM_SYSTEM_MESSAGE STR_MSG_PET_ABANDON_EXPIRE_TIME_COMPLETE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13019	static protected boolean hasVowel ( List phones ) { for ( int i = _NUM ; i < phones . size ( ) ; i ++ ) { if ( isVowel ( ( String ) phones . get ( i ) ) ) { return _BOOL ; } } return _BOOL ; }
13036	public int size ( ) { return mSize ; }
13064	public void onContentViewCreated ( ContentViewCore contentViewCore ) { }
13100	public UsersSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
13141	private void afterMovingToPrimary ( ) { switch ( _spaceMode ) { case NONE : startComponents ( _BOOL ) ; startComponents ( _BOOL ) ; break ; case BACKUP : startComponents ( _BOOL ) ; break ; } }
13158	@ Override public void subscribeByName ( String regex , BaseTagListener listener ) throws CacheSynchronizationException { subscribeByName ( new HashSet < > ( Arrays . asList ( new String [ ] { regex } ) ) , listener ) ; }
13203	@ Override public void onSuccess ( ) { }
13210	public static long stringToMilliseconds ( String formattedDate , SimpleDateFormat dateFormat ) { try { return dateFormat . parse ( formattedDate ) . getTime ( ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; } return - _NUM ; }
13223	public void addTag ( Tag t ) { if ( mTagList == _NULL ) mTagList = new ArrayList < Tag > ( _NUM ) ; mTagList . add ( t ) ; }
13239	public boolean areTransmitOptionsSet ( ) { return transmitOptions != TRANSMIT_OPTIONS_NOT_SET ; }
13355	public static void print ( long x ) { out . print ( x ) ; out . flush ( ) ; }
13374	public void unindex ( Tuple t , String attrName ) { throw new UnsupportedOperationException ( ) ; }
13379	public void increaseCounts ( Map < String , Integer > eventCount , Predicate < String > predicate ) { increaseEventCount ( eventCount , predicate ) ; increaseActionCount ( eventCount , predicate ) ; }
13381	public Type < ? > findAncestor ( final Type < ? > ancestor ) { return findAncestor ( ancestor . getRawType ( ) ) ; }
13429	public RabbitMqCommand writeOutputTo ( OutputStream outputStream ) { this . outputStream = outputStream ; return this ; }
13438	public FriendsEditQuery listIds ( Integer ... value ) { return unsafeParam ( _CHAR list_ids _CHAR , value ) ; }
13455	public boolean isReversed ( ) { return reversed ; }
13478	private void unbindSession ( ) { SessionFactory sessionFactory = ( SessionFactory ) getBean ( _CHAR sessionFactory _CHAR ) ; SessionHolder sessionHolder = ( SessionHolder ) TransactionSynchronizationManager . unbindResource ( sessionFactory ) ; SessionFactoryUtils . closeSession ( sessionHolder . getSession ( ) ) ; }
13489	public static SM_SYSTEM_MESSAGE STR_ARTIFACT_WIN_FORT ( String value1 , String value0 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 , value2 ) ; }
13503	public static void println ( double x ) { out . println ( x ) ; }
13520	private String formatString ( final String s ) { if ( s . equals ( newLine ) ) { return s ; } return String . format ( _CHAR [ % s ] : % s _CHAR , timestamp ( ) , s ) ; }
13556	public boolean remove ( String str ) { hasChanged = _BOOL ; return ( bList . remove ( str ) ) ; }
13590	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_LIGHTBOSS_KILLED ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
13663	@ Override public void flush ( ) throws IOException { writer . write ( buffer , _NUM , fill ) ; fill = _NUM ; }
13713	public PhotosCreateAlbumQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
13744	protected StatsGetPostReachQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
13781	public DexlibAbstractInstruction instructionAtAddress ( int address ) { DexlibAbstractInstruction i = _NULL ; while ( i == _NULL && address >= _NUM ) { i = instructionAtAddress . get ( address ) ; address -- ; } return i ; }
13802	public boolean isDrawLabelsEnabled ( ) { return mDrawLabels ; }
13837	@ Override public double value ( final double [ ] point ) { return value ( new ArrayRealVector ( point , _BOOL ) ) ; }
13858	public SelectorFilter withValue ( String value ) { return new SelectorFilter ( getDimension ( ) , value ) ; }
13907	public Builder withParams ( @ NotNull Map < String , Object > params ) { myParams = params ; return this ; }
13927	boolean isBaseHeader ( ) { return value == BASE_HEADER ; }
13954	public static Bucket createCompleteBucket ( Experiment experiment ) { String description = _CHAR A sample bucket . '' ; String payload = _CHAR < p > Some < span style =\ _CHAR font - weight : bold ; \ _CHAR > heavy < span > payload . < / p > _CHAR ; String state = Constants . BUCKET_STATE_OPEN ; return createBucket ( experiment ) . setDescription ( description ) . setPayload ( payload ) . setState ( state ) ; }
13959	@ Override protected void synchronizeData ( ) { needsSyncData ( _BOOL ) ; boolean orig = ownerDocument . getMutationEvents ( ) ; ownerDocument . setMutationEvents ( _BOOL ) ; setupDefaultAttributes ( ) ; ownerDocument . setMutationEvents ( orig ) ; }
13960	@ Deprecated public boolean isAssignableFrom ( Class < ? > cls ) { return isAssignableFrom ( ( Type ) cls ) ; }
13992	public static void returnSelector ( Selector s ) { synchronized ( selectors ) { selectors . push ( s ) ; if ( selectors . size ( ) == _NUM ) selectors . notify ( ) ; } }
14019	public final Observable . Transformer < T , T > replace ( ) { return _NULL ; }
14038	public boolean isCacheLoaded ( ) { return cacheLoadCount > _NUM ; }
14039	public Iterator visibleItems ( String group ) { return items ( group , VisiblePredicate . TRUE ) ; }
14042	private boolean isIssueOnSource ( Issue issue ) { return ! ( issue . getSourceStart ( ) == _NUM && issue . getSourceEnd ( ) == - _NUM ) ; }
14072	public String loadFile ( String sID ) { return getDocumentText ( sID , _BOOL ) ; }
14129	protected final void pressButton ( final String action ) { CommandProcessor . getInstance ( ) . executeCommand ( getProject ( ) , _NULL , _CHAR _CHAR , _NULL ) ; }
14130	public int equivHashCode ( ) { if ( sourcename instanceof Value ) return ( ( Value ) sourcename ) . equivHashCode ( ) ; return sourcename . hashCode ( ) ; }
14200	public void moveToRecordId ( RecordId rid ) { moveTo ( rid . block ( ) . number ( ) ) ; rp . moveToId ( rid . id ( ) ) ; }
14250	@ NotNull public ObjectProperty < ActionBarIconGenerator . Theme > theme ( ) { return myTheme ; }
14259	public int signum ( ) { return signum ; }
14265	public static ComponentMeta metaByDescriptionLink ( String descriptionLink ) { if ( _NULL == descriptionLink ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . componentMeta ; }
14306	public void shutdown ( ) { audioPlayer . close ( ) ; voice . deallocate ( ) ; }
14318	private static boolean visible ( SootMethod mPrime ) { SootClass cPrime = mPrime . getDeclaringClass ( ) ; return ( cPrime . isPublic ( ) || cPrime . isProtected ( ) || ( ! cPrime . isPrivate ( ) && ! ASSUME_PACKAGES_SEALED ) ) && ( mPrime . isPublic ( ) || mPrime . isProtected ( ) || ( ! mPrime . isPrivate ( ) && ! ASSUME_PACKAGES_SEALED ) ) ; }
14337	public static void addGlue ( JComponent b , int layout ) { b . add ( getAxis ( b , layout ) == BoxLayout . X_AXIS ? Box . createHorizontalGlue ( ) : Box . createVerticalGlue ( ) ) ; }
14342	public String typeName ( ) { return _CHAR fieldref _CHAR ; }
14349	public Builder addColumnsInteger ( String ... names ) { for ( String s : names ) addColumnInteger ( s ) ; return this ; }
14354	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MagicCounterATK_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
14370	public static synchronized void shutdown ( ) { _shutdown = _BOOL ; Watchdog watchdog = _watchdog ; if ( watchdog != _NULL ) watchdog . interrupt ( ) ; }
14386	public static String apiToMagic ( int targetApiLevel ) { String version ; if ( targetApiLevel >= API_CURRENT ) { version = VERSION_CURRENT ; } else { version = VERSION_FOR_API_13 ; } return MAGIC_PREFIX + version + MAGIC_SUFFIX ; }
14411	public static long countSlicedIntervals ( Collection < Interval > rawIntervals , Granularity grain ) { Iterable < Interval > requestIterable = grain . intervalsIterable ( rawIntervals ) ; return StreamSupport . stream ( requestIterable . spliterator ( ) , _BOOL ) . count ( ) ; }
14448	public static File join ( File dir , String ... paths ) { if ( paths . length == _NUM ) { return dir ; } return new File ( dir , PATH_JOINER . join ( paths ) ) ; }
14451	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_GATHERING_B_LEVEL_CHECK ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14492	public void onStop ( ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { plugin . onStop ( ) ; } } }
14543	@ Override public boolean containsSymbol ( String symbol ) { synchronized ( fSymbolTable ) { return fSymbolTable . containsSymbol ( symbol ) ; } }
14589	public static float clamp ( float input , float min , float max ) { return ( input < min ) ? min : ( input > max ) ? max : input ; }
14654	@ Override public int run ( ) { this . model = setupModel ( ) ; return super . run ( ) ; }
14706	public boolean useRecentUpdatesForPinning ( ) { return isEvictableCachePolicy ( ) && ! _isMemorySA && ( ! _readOnlySA || _engine . hasMirror ( ) ) ; }
14721	@ Override public void onRequestInitiated ( int code ) { if ( code == ConnectAPI . TIMELINE_CODE ) { progressDialog . setMessage ( _CHAR Loading timeline ... _CHAR ) ; progressDialog . show ( ) ; } }
14723	public static < T > IStoredList < T > createConcurrentList ( int numOfSegments ) { return new ConcurrentSegmentedStoredList < T > ( numOfSegments ) ; }
14777	public LocalVarNode findLocalVarNode ( Object value ) { if ( opts . rta ( ) ) { value = _NULL ; } else if ( value instanceof Local ) { return localToNodeMap . get ( ( Local ) value ) ; } return valToLocalVarNode . get ( value ) ; }
14795	public String typeName ( ) { return _CHAR double _CHAR ; }
14821	private void addAnnotationOnTarget ( ITextUnit textUnit , Issue issue ) { TextContainer targetContainer = textUnit . getTarget ( targetLocale ) ; addAnnotation ( targetContainer , issue ) ; }
14823	@ Override public boolean equals ( Object that ) { if ( that instanceof S1Interval ) { S1Interval thatInterval = ( S1Interval ) that ; return lo ( ) == thatInterval . lo ( ) && hi ( ) == thatInterval . hi ( ) ; } return _BOOL ; }
14829	public static ResolveInfo resolveActivity ( Intent intent ) { try { Context context = ApplicationStatus . getApplicationContext ( ) ; PackageManager pm = context . getPackageManager ( ) ; return pm . resolveActivity ( intent , _NUM ) ; } catch ( RuntimeException e ) { logTransactionTooLargeOrRethrow ( e , intent ) ; } return _NULL ; }
14830	public PageObjectContext pop ( ) { return deque . pop ( ) ; }
14877	public synchronized void attach ( SlabRef slab ) { checkState ( ! isAttached ( ) ) ; _slab = slab ; _slabConsumed = _NUM ; _slabExpiresAt = System . currentTimeMillis ( ) + Constants . SLAB_ROTATE_TTL . getMillis ( ) ; }
14893	public Builder layers ( ILayer [ ] layers ) { this . layers = layers ; return this ; }
14918	public static SM_SYSTEM_MESSAGE STR_MSG_STIGMA_ENCHANT_HIDDEN_SKILL ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
14925	public static String returnSuccess ( HttpServletRequest request , HttpServletResponse response ) { return _CHAR success _CHAR ; }
14942	private void removeDataTagReference ( final Alarm alarm ) { tagConfigGateway . removeAlarmFromTag ( alarm . getTagId ( ) , alarm . getId ( ) ) ; }
14967	public static SM_SYSTEM_MESSAGE STR_MSG_MENTOR_END_BANISH ( String worldname0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 ) ; }
15010	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATK_Instant_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
15023	public static boolean isWhitespace ( String s ) { if ( isEmpty ( s ) ) return _BOOL ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { char c = s . charAt ( i ) ; if ( whitespace . indexOf ( c ) == - _NUM ) return _BOOL ; } return _BOOL ; }
15031	public static Predicate < EmailData > fromAddress ( final String address ) { return _NULL ; }
15034	public void clear ( ) { m_openrows = _NULL ; m_firstid = _NUM ; m_curid =- _NUM ; }
15039	public String showAndGetCommand ( ) { setVisible ( _BOOL ) ; return result ; }
15047	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCMPHeal_Instant_HEAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
15064	public int reduceFp ( int value ) { fpLock . lock ( ) ; try { int newFp = this . currentFp - value ; if ( newFp < _NUM ) { newFp = _NUM ; } this . currentFp = newFp ; } finally { fpLock . unlock ( ) ; } onReduceFp ( ) ; return currentFp ; }
15090	public static List < NameableObject > asList ( Collection < ? extends NameableObject > collection ) { List < NameableObject > list = new ArrayList < > ( ) ; list . addAll ( collection ) ; return list ; }
15091	public String typeName ( ) { return _CHAR nameandtype _CHAR ; }
15098	private void requestCopyOperation ( Intent data ) { OCFile folderToMoveAt = data . getParcelableExtra ( FolderPickerActivity . EXTRA_FOLDER ) ; ArrayList < OCFile > files = data . getParcelableArrayListExtra ( FolderPickerActivity . EXTRA_FILES ) ; getFileOperationsHelper ( ) . copyFiles ( files , folderToMoveAt ) ; }
15107	public String loadDocumentTextToString ( String sDocID ) { return loadDocumentElement ( sDocID , TEXT_TAG ) ; }
15124	private final boolean isResolvable ( Object base ) { return base instanceof JsonNode ; }
15151	public IEntryHolder cancel ( String entryUid , String classname , int objectType , boolean fromReplication , boolean origin , boolean isFromGateway ) throws UnknownLeaseException { return cancel ( entryUid , classname , objectType , fromReplication , origin , _BOOL , _NULL , isFromGateway ) ; }
15158	@ Override public void cancel ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( cancelButton ) ) ; }
15280	public int length ( ) { return NGramHistogram . size ( ) ; }
15291	public static int floor_double ( double value ) { int i = ( int ) value ; return value < ( double ) i ? i - _NUM : i ; }
15336	public static int uniform ( int a , int b ) { if ( b <= a ) throw new IllegalArgumentException ( _CHAR Invalid range _CHAR ) ; if ( ( long ) b - a >= Integer . MAX_VALUE ) throw new IllegalArgumentException ( _CHAR Invalid range _CHAR ) ; return a + uniform ( b - a ) ; }
15350	public static SM_SYSTEM_MESSAGE STR_CANT_WHO_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15380	protected static ImageIcon createImageIcon ( String path ) { java . net . URL imgURL = ImageFileExtensionUtils . class . getResource ( path ) ; if ( imgURL != _NULL ) { return new ImageIcon ( imgURL ) ; } else { ConsoleManager . getInstance ( ) . error ( ImageFileExtensionUtils . class , _CHAR Could n _CHAR_CHAR + path ) ; return null ; } }
15418	public static Jump handle ( EntityLivingBase entity , float motion ) { Jump event = new Jump ( entity , motion ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event ; }
15419	@ Override public final void disconnect ( ) { }
15436	private static Map < String , SimplifiedIntervalList > toSimplifiedIntervalMap ( Map < String , Set < Interval >> unsortedIntervals ) { return unsortedIntervals . entrySet ( ) . stream ( ) . collect ( Collectors . toMap ( _NULL , _NULL ) ) ; }
15461	private ApiKeyAuthenticationInfo createAuthenticationInfo ( ApiKey apiKey ) { return new ApiKeyAuthenticationInfo ( apiKey , getName ( ) ) ; }
15466	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
15474	public void updateOneStep ( ) { Runnable batch = myBatchQueue . poll ( ) ; if ( batch != _NULL ) { batch . run ( ) ; } }
15480	public AudioDeleteQuery delete ( UserActor actor , int audioId , int ownerId ) { return new AudioDeleteQuery ( getClient ( ) , actor , audioId , ownerId ) ; }
15560	public static final int [ ] resize ( int [ ] a , int size ) { if ( a . length >= size ) return a ; int [ ] b = new int [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , a . length ) ; return b ; }
15562	private boolean isThisPrefix ( char [ ] string ) { if ( string == _NULL || string . length < _NUM ) return _BOOL ; return string [ _NUM ] == _CHAR && string [ _NUM ] == _CHAR && string [ _NUM ] == _CHAR && string [ _NUM ] == _CHAR && string [ _NUM ] == _CHAR ; }
15580	public void zoomIn ( ) { PointF center = mViewPortHandler . getContentCenter ( ) ; Matrix save = mViewPortHandler . zoomIn ( center . x , - center . y ) ; mViewPortHandler . refresh ( save , this , _BOOL ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
15615	public static WeightEvaluationQuery makeWeightEvaluationQuery ( DruidAggregationQuery < ? > query ) { DruidAggregationQuery < ? > innerQuery = query . getInnermostQuery ( ) ; int weight = Utils . getSubsetByType ( innerQuery . getAggregations ( ) , SketchAggregation . class ) . size ( ) ; return new WeightEvaluationQuery ( innerQuery , weight ) ; }
15621	public void addResultsAvailableHandler ( ResultsAvailableHandler handler ) { this . onResultsAvailable . add ( handler ) ; }
15638	public boolean isLibraryClass ( ) { return Scene . v ( ) . getLibraryClasses ( ) . contains ( this ) ; }
15647	public short valueAt ( int position ) { return fData [ position ] ; }
15686	private Uri whichContentStore ( ) { if ( Environment . getExternalStorageState ( ) . equals ( Environment . MEDIA_MOUNTED ) ) { return android . provider . MediaStore . Images . Media . EXTERNAL_CONTENT_URI ; } else { return android . provider . MediaStore . Images . Media . INTERNAL_CONTENT_URI ; } }
15688	public Iterator < RecordID > lookupKey ( DataType key ) { BPlusNode root = BPlusNode . getBPlusNode ( this , rootPageNum ) ; LeafNode leaf = root . locateLeaf ( key , _BOOL ) ; return new BPlusIterator ( leaf , key , _BOOL ) ; }
15690	public void save ( EpoxyViewHolder holder ) { if ( ! holder . getModel ( ) . shouldSaveViewState ( ) ) { return ; } ViewState state = get ( holder . getItemId ( ) ) ; if ( state == _NULL ) { state = new ViewState ( ) ; } state . save ( holder . itemView ) ; put ( holder . getItemId ( ) , state ) ; }
15705	public static ValueGetterSpacePredicate < ServerEntry > propertyLess ( String propertyName , Comparable < ? > value ) { return property ( propertyName , less ( value ) ) ; }
15751	public static String makeSafe ( String s ) { return ( s == _NULL ) ? _CHAR _CHAR : s ; }
15841	int positionOfBookmarkId ( BookmarkId id ) { return positionOfItem ( new Item ( id ) ) ; }
15940	public Set < Type > possibleTypes ( ) { return Collections . emptySet ( ) ; }
16059	public Configurator fromUri ( Uri uri ) { return new Configurator ( uri . toString ( ) , _BOOL ) ; }
16079	public double value ( final RealVector point ) { return coefficients . dotProduct ( point ) + constantTerm ; }
16081	public static Aggregate < Object , Long > count ( ) { return Aggregates . count ( ) ; }
16091	private boolean readyToShow ( ) { return ( getFile ( ) != _NULL && mAccount != _NULL && mLayout == R . layout . file_details_fragment ) ; }
16093	public Builder stdevColumns ( String ... columns ) { return add ( ReduceOp . Stdev , columns ) ; }
16101	void resetTouchBehaviorTracking ( ) { mDidBlockInteraction = _BOOL ; }
16148	public int equivHashCode ( ) { return hashCode ( ) ; }
16219	private Token token ( TokenType type ) { return new Token ( type , yychar , yylength ( ) ) ; }
16226	public SpaceTypeDescriptorBuilder addPropertyIndex ( String propertyName , SpaceIndexType indexType ) { return addPropertyIndex ( propertyName , indexType , _BOOL ) ; }
16250	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
16274	private void fireEquipmentSupervisionUpdate ( final SupervisionEvent supervisionEvent ) { Set < SupervisionListener > listeners = equipmentSupervisionListeners . get ( supervisionEvent . getEntityId ( ) ) ; if ( listeners != _NULL ) { for ( SupervisionListener listener : listeners ) { listener . onSupervisionUpdate ( supervisionEvent ) ; } } }
16287	public static < T > T createPojoFromString ( String response , Class < T > pojo ) { GsonBuilder gsonBuilder = new GsonBuilder ( ) ; gsonBuilder . serializeNulls ( ) ; return gsonBuilder . create ( ) . fromJson ( response , pojo ) ; }
16298	public void startProgress ( ) { mBasoStatus = BasoStatus . PROGRESSING ; toggleLayout ( ) ; }
16308	public static ValueGetterSpacePredicate < ServerEntry > pathIn ( String path , Object ... values ) { return path ( path , in ( values ) ) ; }
16327	public void waitToFinish ( ) { flush ( ) ; if ( future != _NULL ) { try { future . get ( ) ; } catch ( InterruptedException | ExecutionException e ) { LOG . error ( e . getMessage ( ) ) ; } } LOG . info ( _CHAR All tasks done ! _CHAR ) ; }
16377	public static boolean isVisa ( String cc ) { if ( ( ( cc . length ( ) == _NUM ) || ( cc . length ( ) == _NUM ) ) && ( cc . substring ( _NUM , _NUM ) . equals ( _CHAR _NUM _CHAR ) ) ) return isCreditCard ( cc ) ; return _BOOL ; }
16400	public static void println ( char x ) { out . println ( x ) ; }
16411	public static SM_SYSTEM_MESSAGE STR_GATHER_SKILL_POINT_UP ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
16417	protected SaveablePartDialog createCompareDialog ( Shell shell , SVNCompareRevisionsInput input ) { return new SaveablePartDialog ( shell , input ) ; }
16423	public String lookupText ( String inputtype , String outputtype , String locale , String voice , String inputtext ) throws SQLException { return lookupText ( inputtype , outputtype , locale , voice , _NULL , _NULL , _NULL , inputtext ) ; }
16425	public static SM_SYSTEM_MESSAGE STR_MSG_FORCE_MATCH_ALREADY_SENT_DECLINE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16430	@ Override public final void endGroup ( Augmentations augs ) throws XNIException { final int length = fGroupIndexStackSizes [ fDepth ] ; final int group = length > _NUM ? addContentSpecNodes ( _NUM , length - _NUM ) : addUniqueLeafNode ( _NULL ) ; -- fDepth ; addToCurrentGroup ( group ) ; }
16445	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
16451	public IEntryCacheInfo safeInsertEntryToCache ( Context context , IEntryHolder entryHolder , boolean newEntry , TypeData pType , boolean pin ) { _engine . getMemoryManager ( ) . monitorMemoryUsage ( _BOOL ) ; return insertEntryToCache ( context , entryHolder , newEntry , pType , pin ) ; }
16454	public FriendsAreFriendsQuery areFriends ( UserActor actor , List < Integer > userIds ) { return new FriendsAreFriendsQuery ( getClient ( ) , actor , userIds ) ; }
16469	@ Override public double cost ( Target target , Unit unit ) { return cost ( target , unit , featureDefinition , weightFunction ) ; }
16515	public static < T > void removeService ( ProviderConfig < T > providerConfig ) throws RpcException { removeService ( providerConfig . getUrl ( ) ) ; }
16566	public static < T > IStoredList < T > createSegmentedList ( ) { return new RwlSegmentedStoredList < T > ( _NULL ) ; }
16593	@ Override public boolean equals ( Object obj ) { if ( ! ( obj instanceof GenericEntity ) ) return _BOOL ; try { return this . compareTo ( ( GenericEntity ) obj ) == _NUM ; } catch ( ClassCastException e ) { return _BOOL ; } }
16596	public boolean isFolder ( ) { return mMimeType != _NULL && mMimeType . equals ( MimeType . DIRECTORY ) ; }
16610	public boolean isSpring ( ) { return this . frequency > _NUM . _NUM ; }
16615	public boolean isResolvable ( String host ) { try { InetAddress . getByName ( host ) . getHostAddress ( ) ; return _BOOL ; } catch ( UnknownHostException ex ) { Logger . log ( JavaxPacScriptParser . class , LogLevel . DEBUG , _CHAR Hostname not resolveable { _NUM } . _CHAR , host ) ; } return _BOOL ; }
16617	final Segment < K , V > segmentFor ( int hash ) { return segments [ ( hash >> > segmentShift ) & segmentMask ] ; }
16631	public boolean isCancelled ( ) { return this . request != _NULL && request . isCancelled ( ) ; }
16650	private static boolean approximately ( float x , float y , float affordance ) { float difference = Math . abs ( x - y ) ; return difference <= affordance ; }
16691	public static float lerp ( float start , float end , float progress ) { return start - progress * ( start - end ) ; }
16705	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_Instant_HEAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
16715	public static ValueGetterSpacePredicate < ServerEntry > pathNot ( String path , ISpacePredicate predicate ) { return path ( path , not ( predicate ) ) ; }
16730	public static Uri PathToUri ( String path ) { return Uri . fromFile ( new File ( path ) ) ; }
16777	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_MAGIC_OTHER_FRIENDLY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
16820	public SemiVariance withBiasCorrected ( boolean isBiasCorrected ) { return new SemiVariance ( isBiasCorrected , this . varianceDirection ) ; }
16825	public String typeName ( ) { return _CHAR float _CHAR ; }
16891	public AemImage insert ( Draggable element ) { Droppable dropabble = factory . createDroppable ( dropArea , framePath ) ; element . dropTo ( dropabble ) ; bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . invisibilityOfElementLocated ( By . xpath ( DROP_AN_IMAGE_XPATH ) ) ) ; return this ; }
16915	public Builder inertiaMaxSpeed ( Number inertiaMaxSpeed ) { this . inertiaMaxSpeed = inertiaMaxSpeed ; return this ; }
16926	private boolean isPassedModule ( TypeElement module ) { return nonNullaryCtorModules . values ( ) . contains ( module ) || nonNullaryCtorUnscopedModules . contains ( module ) ; }
16949	public boolean isNavigationImageEnabled ( ) { return navigationImageEnabled ; }
16969	private static String [ ] makeColumnNames ( ColumnType types [ ] ) { String [ ] header = new String [ types . length ] ; for ( int i = _NUM ; i < types . length ; i ++ ) { header [ i ] = _CHAR C _CHAR + i ; } return header ; }
16983	public AemList removeItem ( final AemListItem item ) { item . remove ( ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return this ; }
16990	public Builder clearMessage ( ) { message_ = getDefaultInstance ( ) . getMessage ( ) ; onChanged ( ) ; return this ; }
17006	public static SM_SYSTEM_MESSAGE STR_MSG_TOWER_DEFENCE_CANT_INVITE_WHEN_HE_IS_ASKED_QUESTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17033	public Builder withPrevKV ( ) { this . prevKV = _BOOL ; return this ; }
17044	public static int clip ( int v , int min , int max ) { if ( v < min ) return min ; if ( v > max ) return max ; return v ; }
17065	private static ArrayList < ConstraintWidgetContainer > gatherContainers ( ConstraintWidgetContainer container ) { ArrayList < ConstraintWidgetContainer > containers = new ArrayList < > ( ) ; for ( ConstraintWidget widget : container . getChildren ( ) ) { if ( widget instanceof ConstraintWidgetContainer ) { containers . add ( ( ConstraintWidgetContainer ) widget ) ; } } return containers ; }
17083	public static SM_SYSTEM_MESSAGE STR_MSG_DONT_LEVELLOW_RANK_UP ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17086	public void loadBcpFile ( String bcpFilename , String delimiter , List < Attribute > attributes , String dateFormatString , ObjectSourceConnectionManager connectionManager , String sourceAttribute ) { loadBcpFile ( bcpFilename , delimiter , attributes , connectionManager , dateFormatString != _NULL ? new SimpleDateFormat ( dateFormatString ) : _NULL , sourceAttribute ) ; }
17097	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysNoResist_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
17156	public void buildPostDestContext ( ) { strategy . buildPostDest ( ) ; }
17165	public static Var map ( Resource resource ) { if ( isHasResourceResource ( resource ) ) { return var ( ) ; } Var var = base ( resource ) ; var = var . value ( resource . getValue ( ) ) ; return var ; }
17200	private void handleEntryByIdAndOperateSA ( Context context , ITemplateHolder template ) throws TransactionException , TemplateDeletedException , SAException { IEntryHolder eh = getEntryByIdAndOperateSA ( context , template , _BOOL , _BOOL ) ; performReplIfChunkReached ( context ) ; }
17242	void registerTap ( ) { if ( isPromoAvailable ( ) ) { DisableablePromoTapCounter promoTapCounter = getPromoTapCounter ( ) ; if ( promoTapCounter . isEnabled ( ) ) { promoTapCounter . increment ( ) ; } } int tapsSinceOpen = mPreferenceManager . getContextualSearchTapCount ( ) ; mPreferenceManager . setContextualSearchTapCount ( ++ tapsSinceOpen ) ; if ( isUserUndecided ( ) ) { ContextualSearchUma . logTapsSinceOpenForUndecided ( tapsSinceOpen ) ; } else { ContextualSearchUma . logTapsSinceOpenForDecided ( tapsSinceOpen ) ; } }
17270	public static void removeService ( String url ) throws RpcException { try { ServicePublisher . removeService ( url ) ; } catch ( RegistryException e ) { throw new RpcException ( _CHAR error while removing service : '' + url , e ) ; } }
17273	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
17349	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SkillATKDrain_Instant_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
17373	protected void validateSuperUserAccess ( ) { if ( config ( ) . isAuthenticationEnabled ( ) ) { String appId = clientAppId ( ) ; log . debug ( _CHAR [ { } ] Check super user access : Authenticated : { } -- Role : { } _CHAR , uri . getRequestUri ( ) , isClientAuthenticated ( ) , appId ) ; if ( ! config ( ) . getSuperUserRoles ( ) . contains ( appId ) ) { throw new RestException ( Status . UNAUTHORIZED , _CHAR This operation requires super - user access _CHAR ) ; } } }
17380	public void initializeChildDimensionsList ( int childDimension ) { listOfChildDimensions = new ArrayList < CarbonDimension > ( childDimension ) ; }
17382	public boolean remove ( Object o ) { if ( o == _NULL ) return _BOOL ; return map . remove ( o ) == PRESENT ; }
17409	private void openChooseRootDialog ( ) { ChooseRootUrlDialog dialog = new ChooseRootUrlDialog ( getShell ( ) , location . getUrl ( ) ) ; if ( dialog . open ( ) == Window . OK ) { SVNUrl url = dialog . getRootUrl ( ) ; if ( url == _NULL ) { repositoryRootText . setText ( _CHAR _CHAR ) ; } else { repositoryRootText . setText ( dialog . getRootUrl ( ) . toString ( ) ) ; } } }
17470	@ Override public String toString ( ) { return new String ( toByteArray ( ) ) ; }
17471	public Builder hideKeyboard ( boolean hideKeyboard ) { this . hideKeyboard = hideKeyboard ; return this ; }
17547	public boolean isUsePercentValuesEnabled ( ) { return mUsePercentValues ; }
17549	public static void addGlue ( JComponent b , boolean horiz ) { b . add ( horiz ? Box . createHorizontalGlue ( ) : Box . createVerticalGlue ( ) ) ; }
17608	public static ModRevisionCmpTarget modRevision ( long revision ) { return new ModRevisionCmpTarget ( revision ) ; }
17620	public boolean hasDetails ( String sku ) { return mSkuMap . containsKey ( sku ) ; }
17676	public Builder intoDependencies ( @ Nullable SetMultimap < String , String > dependencies ) { myDependencies = dependencies ; return this ; }
17695	public Iterator inEdges ( Node node ) { nodeCheck ( node , _BOOL ) ; return m_edgeTuples . iterator ( inEdgeRows ( node . getRow ( ) ) ) ; }
17712	public int length ( ) { return NGramHistogram . size ( ) ; }
17774	public AudioGetAlbumsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
17823	public boolean isDoubleTapToZoomEnabled ( ) { return mDoubleTapToZoomEnabled ; }
17830	public boolean isApplicationClass ( ) { return Scene . v ( ) . getApplicationClasses ( ) . contains ( this ) ; }
17876	public static ValueGetterSpacePredicate < ServerEntry > pathNotEqual ( String path , Object value ) { return path ( path , notEqual ( value ) ) ; }
17881	public boolean hasDetails ( String sku ) { return mSkuMap . containsKey ( sku ) ; }
17908	public static void saveBookmarkIdToBundle ( Bundle bundle , BookmarkId bookmark ) { bundle . putString ( BOOKMARK_SAVE_NAME , bookmark . toString ( ) ) ; }
17968	public static SM_SYSTEM_MESSAGE STR_MSG_DICE_UNAUTHORIZED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17976	public String toString ( ) { String sRes = _CHAR [ _CHAR ; Iterator iIter = iterator ( ) ; while ( iIter . hasNext ( ) ) { Object oNext = iIter . next ( ) ; sRes += oNext . toString ( ) ; if ( iIter . hasNext ( ) ) sRes += _CHAR , _CHAR ; } sRes += _CHAR ] _CHAR ; return sRes ; }
17977	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_VOICE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18003	public static String lowerFirstChar ( String string ) { if ( string == _NULL ) return _NULL ; if ( string . length ( ) <= _NUM ) return string . toLowerCase ( ) ; StringBuilder sb = new StringBuilder ( string ) ; sb . setCharAt ( _NUM , Character . toLowerCase ( sb . charAt ( _NUM ) ) ) ; return sb . toString ( ) ; }
18017	@ Override protected void synchronizeData ( ) { needsSyncData ( _BOOL ) ; DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) this . ownerDocument ( ) ; data = ownerDocument . getNodeValueString ( fNodeIndex ) ; }
18024	public void initialize ( ) { mTabModelSelector . getModel ( _BOOL ) . addObserver ( mTabModelObserver ) ; }
18057	public boolean hasNext ( ) throws IOException { int p = peeked ; if ( p == PEEKED_NONE ) { p = doPeek ( ) ; } return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY ; }
18105	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_PROC_NOT_PROC_GIVABLE_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18176	public static IOFileFilter directoryFileFilter ( ) { return DirectoryFileFilter . DIRECTORY ; }
18250	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Provoker_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
18373	public final void close ( ) throws IOException { }
18375	public void click ( ) { new ComponentDriver ( myRobot ) . click ( mySurface , getMidPoint ( ) ) ; myRobot . waitForIdle ( ) ; }
18439	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Slow_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
18496	public boolean isTail ( ) { return children . isEmpty ( ) ; }
18500	private static boolean isWidgetInsideConstraintLayout ( @ NotNull ConstraintWidget widget ) { ConstraintWidget parent = widget . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } return parent instanceof ConstraintWidgetContainer ; }
18518	void moveData ( ) { inBuffer . reset ( outBuffer . getData ( ) , outBuffer . getLength ( ) ) ; }
18521	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
18535	@ Override public void clear ( ) { datastore = new byte [ this . totalNumberOfElements * this . sizeOfEachElement ] ; }
18548	protected void performDefaults ( ) { super . performDefaults ( ) ; initializeValues ( ) ; }
18570	public boolean isFullyGrown ( ) { return level == _NUM ; }
18578	public void execute ( DelegateExecution execution ) { leave ( execution ) ; }
18591	public String makeLinkFull ( HttpServletRequest request , HttpServletResponse response , String url ) { return makeLink ( request , response , url , _BOOL , _NULL , _NULL ) ; }
18599	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPHeal_Instant_HEAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
18661	public ThetaSketchSetOperationPostAggregation withFunc ( SketchSetOperationPostAggFunction func ) { return new ThetaSketchSetOperationPostAggregation ( getName ( ) , func , getFields ( ) , getSize ( ) ) ; }
18670	public void uploadBuild ( ) { binary . initPath ( apkAbsolutePath ) ; uploadService . sendBuild ( _NULL , apkAbsolutePath , apiToken , binary , changeLogTa ) ; }
18685	private void resetInfoDialogue ( ) { inputBox . setVisibility ( View . VISIBLE ) ; extendedEvolutionSpinner . setSelection ( - _NUM ) ; resultsBox . setVisibility ( View . GONE ) ; allPossibilitiesBox . setVisibility ( View . GONE ) ; }
18686	@ Override public boolean markSupported ( ) { return markSupported ; }
18705	public void finishAnimation ( ) { if ( mContentAnimations == _NULL ) return ; mContentAnimations . updateAndFinish ( ) ; mContentAnimations = _NULL ; }
18707	public static SM_SYSTEM_MESSAGE STR_CHANGE_ITEM_SKIN_INVALID_STANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18734	public static boolean isSequence ( final double start , final double mid , final double end ) { return ( start < mid ) && ( mid < end ) ; }
18736	public Iterator < E > reverseOrderIterator ( ) { return new BinarySearchTreeIterator < E > ( this . root , _BOOL ) ; }
18748	private boolean filterComment ( ILogEntry logEntry , String comment ) { if ( comment == _NULL ) return _BOOL ; if ( regExp ) { return matchesExpression ( logEntry . getComment ( ) , comment + CHAR_MATCH_MANY ) ; } else { return containsExpression ( logEntry . getComment ( ) , comment ) ; } }
18756	public SecureSendSMSNotificationQuery sendSMSNotification ( ServiceActor actor , int userId , String message ) { return new SecureSendSMSNotificationQuery ( getClient ( ) , actor , userId , message ) ; }
18820	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ReturnHome_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
18834	public void abort ( ) { Log . i ( Mary . LOG , _CHAR Requesting abort . '' ) ; abortRequested = _BOOL ; }
18847	public String toString ( ) { String sRes = _CHAR [ _CHAR ; Iterator iIter = iterator ( ) ; while ( iIter . hasNext ( ) ) { Object oNext = iIter . next ( ) ; sRes += oNext . toString ( ) ; if ( iIter . hasNext ( ) ) sRes += _CHAR | _CHAR ; } sRes += _CHAR ] _CHAR ; return sRes ; }
18861	@ Deprecated public SpaceTypeDescriptorBuilder addCompoundIndex ( String [ ] paths , SpaceIndexType indexType ) { if ( indexType != SpaceIndexType . BASIC ) throw new UnsupportedOperationException ( _CHAR only BASIC index type is supported for compoundindex '' ) ; return addCompoundIndex ( paths , indexType , _BOOL ) ; }
18881	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSpellAttackEffect_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
18889	public boolean isFlipped ( ) { return this . flipped ; }
18953	public boolean isComponentPresent ( String componentName , String groupName ) { if ( isComponentGroupPresent ( groupName ) ) { if ( ! SidekickActions . isSectionExpanded ( getSectionByName ( groupName ) ) ) { clickComponentGroupToggle ( groupName ) ; } return getComponentNames ( groupName ) . contains ( componentName ) ; } throw new IllegalArgumentException ( _CHAR Group name _CHAR + groupName + _CHAR does not exist _CHAR ) ; }
18958	private String generateAddColumnSQL ( ColumnModel columnModel ) { return generateAddColumnSQL ( mTableModel . getTableName ( ) , columnModel ) ; }
18959	private static void checkAllFiniteReal ( final double [ ] values ) { for ( int i = _NUM ; i < values . length ; i ++ ) { MathUtils . checkFinite ( values [ i ] ) ; } }
18976	protected boolean isViewAvailable ( ) { Tab currentTab = mTabModelSelector . getCurrentTab ( ) ; return currentTab != _NULL && currentTab . getContentViewCore ( ) != _NULL ; }
18989	@ PostConstruct public void automaticBrokerStart ( ) throws Exception { createAndStartBroker ( ) ; }
19000	public static String sanitizeText ( String text ) { if ( text == _NULL ) return _NULL ; return text . replace ( OBJ_CHARACTER , _CHAR _CHAR ) . trim ( ) ; }
19067	public void removeListener ( @ NotNull ConfigurationListener listener ) { if ( myListeners != _NULL ) { myListeners . remove ( listener ) ; if ( myListeners . isEmpty ( ) ) { myListeners = _NULL ; } } }
19107	public ExtractionFilter withValue ( String value ) { return new ExtractionFilter ( getDimension ( ) , value , extractionFunction ) ; }
19109	public boolean allowedAsPathParameter ( ) { return allowedAsPathParameter ; }
19136	public static void removeEmptys ( List < String > list ) { if ( list != _NULL && ! list . isEmpty ( ) ) { Iterator < String > iterator = list . iterator ( ) ; while ( iterator . hasNext ( ) ) { if ( StringUtils . isEmpty ( iterator . next ( ) ) ) { iterator . remove ( ) ; } } } }
19150	@ CheckReturnValue public AddCmd add ( ) { return new AddCmd ( _BOOL , _BOOL , ImmutableSet . of ( ) ) ; }
19153	public String typeName ( ) { return _CHAR invokedynamic _CHAR ; }
19161	public Iterator outEdges ( Node node ) { nodeCheck ( node , _BOOL ) ; return m_edgeTuples . iterator ( outEdgeRows ( node . getRow ( ) ) ) ; }
19163	public StatsGetQuery dateFrom ( String value ) { return unsafeParam ( _CHAR date_from _CHAR , value ) ; }
19184	public JComponent createComponent ( ) { return createSearchPanel ( ) ; }
19186	public PhotosGetWallUploadServerQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
19213	public void zoomOut ( ) { MPPointF center = mViewPortHandler . getContentCenter ( ) ; mViewPortHandler . zoomOut ( center . x , - center . y , mZoomOutMatrixBuffer ) ; mViewPortHandler . refresh ( mZoomOutMatrixBuffer , this , _BOOL ) ; MPPointF . recycleInstance ( center ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
19230	private void addChildView ( View viewToAdd ) { addView ( viewToAdd , CONTENT_INDEX , new FrameLayout . LayoutParams ( LayoutParams . MATCH_PARENT , LayoutParams . WRAP_CONTENT , mGravity ) ) ; }
19281	@ AfterClass protected void afterClassTestWrapper ( ) { LOGGER . debug ( this . getClass ( ) . getName ( ) + _CHAR @ AfterClass _CHAR ) ; }
19329	public void connectNamePanel2AlignmentPane ( boolean connect ) { if ( connect ) namesScrollPane . getVerticalScrollBar ( ) . setModel ( alignmentScrollPane . getVerticalScrollBar ( ) . getModel ( ) ) ; else namesScrollPane . getVerticalScrollBar ( ) . setModel ( new DefaultBoundedRangeModel ( ) ) ; }
19396	@ Override public void rollback ( ) throws RemoteException { tx . rollback ( ) ; try { tx = VanillaDb . txMgr ( ) . newTransaction ( isolationLevel , readOnly ) ; } catch ( Exception e ) { throw new RemoteException ( _CHAR error creating transaction _CHAR , e ) ; } }
19403	@ Override public boolean accept ( File dir , String name ) { if ( dir != _NULL && new File ( dir , name ) . isDirectory ( ) ) { return _BOOL ; } for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( name , wildcard ) ) { return _BOOL ; } } return _BOOL ; }
19414	public void saveRootCertificateAsPemFile ( File file ) { String pemEncodedCertificate = securityProviderTool . encodeCertificateAsPem ( generatedCertificateAndKey . get ( ) . getCertificate ( ) ) ; EncryptionUtil . writePemStringToFile ( file , pemEncodedCertificate ) ; }
19435	public boolean isShowOnlyMinMaxEnabled ( ) { return mShowOnlyMinMax ; }
19452	@ Override public void undo ( Transaction tx ) { }
19477	public void write ( String filename ) throws DataIOException { try { write ( new FileOutputStream ( filename ) ) ; } catch ( FileNotFoundException e ) { throw new DataIOException ( e ) ; } }
19526	private void rewind ( ) { fCurrentTokenIndex = _NUM ; }
19591	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSpellATK_Instant_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
19637	protected AudioEditQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
19649	public void removeEquipmentId ( final ProcessCacheObject processCacheObject , final Long pEquipmentId ) { if ( processCacheObject . getEquipmentIds ( ) . contains ( pEquipmentId ) ) { processCacheObject . getEquipmentIds ( ) . remove ( pEquipmentId ) ; } }
19653	public static SM_SYSTEM_MESSAGE STR_DUEL_PARTNER_TOO_FAR_FOR_START ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
19680	public WallRestoreCommentQuery restoreComment ( UserActor actor , int commentId ) { return new WallRestoreCommentQuery ( getClient ( ) , actor , commentId ) ; }
19688	public static ExisitingJiniTransactionHolder unbindExistingTransaction ( ) { return ( ( ExisitingJiniTransactionHolder ) TransactionSynchronizationManager . unbindResource ( CONTEXT ) ) ; }
19703	public boolean hasWarning ( ) { return warning ; }
19734	public void watchMonitoredHostPoll ( PreferenceChangeListener pcl ) { addListener ( INT_KEY_MONHOST_POLL , pcl ) ; }
19747	public static void finishActivityOnPhone ( Context context ) { if ( context instanceof EnhancedBookmarkActivity ) { ( ( Activity ) context ) . finish ( ) ; } }
19861	@ NotNull public static byte [ ] rewriteClass ( @ NotNull byte [ ] classData , int layoutlibApi ) { int current = getCurrentClassVersion ( ) ; return rewriteClass ( classData , current , _NUM , layoutlibApi ) ; }
19895	public ShimpleBody newBody ( Body b , Map < String , String > options ) { return new ShimpleBody ( b , options ) ; }
19900	public static String factoryLinkByDescriptionLink ( String descriptionLink ) { if ( _NULL == descriptionLink ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . descriptionFactoryLink ; }
19982	public int frequencyOrder ( ) { return periodType != _NULL ? periodType . getFrequencyOrder ( ) : YearlyPeriodType . FREQUENCY_ORDER ; }
19984	public Boolean isDirected ( ) { return m_directed ; }
20003	public static final float [ ] resize ( float [ ] a , int size ) { if ( a . length >= size ) return a ; float [ ] b = new float [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , a . length ) ; return b ; }
20012	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Slow_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
20023	public void openPageByTitle ( String title ) { SiteAdminGridRow row = getRowByTitle ( title ) ; if ( row != _NULL ) { row . open ( ) ; } else { String msg = String . format ( _CHAR Could not find a page titled % s _CHAR , title ) ; throw new IllegalArgumentException ( msg ) ; } }
20039	public static String makeSafe ( String s ) { return ( s == _NULL ) ? _CHAR _CHAR : s ; }
20092	public static File join ( File dir , Iterable < String > paths ) { return new File ( dir , PATH_JOINER . join ( paths ) ) ; }
20096	public double [ ] toArray ( ) { double [ ] daRes = new double [ _NUM ] ; daRes [ _NUM ] = ValueSimilarity ; daRes [ _NUM ] = ContainmentSimilarity ; daRes [ _NUM ] = SizeSimilarity ; return daRes ; }
20105	public boolean hasValue ( ) { return observers . get ( ) == TERMINATED && value != _NULL ; }
20126	public boolean hasCategoryOptionGroupSet ( ) { return categoryOptionGroupSet != _NULL ; }
20127	private boolean matchValue ( Collection < ? > collection , int tokenIndex ) { if ( tokenIndex == _tokens . length ) return match ( collection , getExpectedValue ( ) ) ; return matchCollectionItemNestedProperty ( collection , tokenIndex ) ; }
20156	@ Override public void process ( SpaceContext context , ISpaceFilterEntry [ ] subject , int operationCode ) throws RuntimeException { }
20198	public JsonArray add ( JsonValue value ) { if ( value == _NULL ) { throw new NullPointerException ( _CHAR value is _NULL _CHAR ) ; } values . add ( value ) ; return this ; }
20283	public static boolean isShowErrorDetails ( ) { return showErrorDetails ; }
20284	public void cancelAllTasks ( ) { for ( int i : tasks . keySet ( ) ) { Future < ? > task = tasks . get ( i ) ; if ( task != _NULL && i != TaskId . RESPAWN . ordinal ( ) ) { task . cancel ( _BOOL ) ; } } tasks . clear ( ) ; }
20327	public boolean isUsePercentValuesEnabled ( ) { return mUsePercentValues ; }
20331	private List < EmailData > createEmailDataList ( List < Message > messageList ) { List < EmailData > emailDataList = new ArrayList < > ( ) ; for ( Message message : messageList ) { EmailData emailData = emailDataFactory . create ( message ) ; emailDataList . add ( emailData ) ; } return emailDataList ; }
20376	public static boolean areEqual ( ItemStack stack1 , ItemStack stack2 ) { if ( stack1 == _NULL || stack2 == _NULL ) { return _BOOL ; } else { return stack1 . isItemEqual ( stack2 ) ; } }
20392	public Object clone ( ) { Body b = new JimpleBody ( getMethod ( ) ) ; b . importBodyContentsFrom ( this ) ; return b ; }
20411	ImportNoteBuilder addMessage ( ImportNoteMessage . Type type , String message ) { if ( ! Strings . isNullOrEmpty ( message ) ) { messages . add ( new ImportNoteMessage ( type , message ) ) ; } return this ; }
20457	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_ENEMY_CRITICAL ( int num1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0 ) ; }
20477	private boolean isCurrentValueAvailable ( final SourceDataTag tag ) { boolean isAvailable = ( tag . getCurrentValue ( ) != _NULL ) && ( tag . getCurrentValue ( ) . getValue ( ) != _NULL ) ; if ( this . equipmentLogger . isTraceEnabled ( ) ) this . equipmentLogger . trace ( format ( _CHAR isCurrentValueAvailable - Tag % d : % b _CHAR , tag . getId ( ) , isAvailable ) ) ; return isAvailable ; }
20480	private static int skipWhiteSpace ( BitArray row ) throws NotFoundException { int width = row . getSize ( ) ; int endStart = row . getNextSet ( _NUM ) ; if ( endStart == width ) { throw NotFoundException . getNotFoundInstance ( ) ; } return endStart ; }
20494	public static String factoryLinkByType ( String type ) { if ( _NULL == type ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . descriptionFactoryLink ; }
20523	public boolean isResizable ( ) { return ( myFlags & ANY ) != _NUM ; }
20536	private List < byte [ ] > convertStringListToByteArray ( List < String > valueList ) { List < byte [ ] > byteArrayList = new ArrayList < > ( valueList . size ( ) ) ; for ( String value : valueList ) { byteArrayList . add ( value . getBytes ( Charset . forName ( CarbonCommonConstants . DEFAULT_CHARSET ) ) ) ; } return byteArrayList ; }
20566	public boolean hasASTForSootName ( String name ) { if ( sootNameToAST == _NULL ) return _BOOL ; if ( sootNameToAST . containsKey ( name ) ) return _BOOL ; return _BOOL ; }
20607	public void addEntry ( Label l , int line ) { pc . addElement ( l ) ; this . line . addElement ( new Integer ( line ) ) ; }
20611	public String toString ( ) { return new String ( getType ( ) + _CHAR Control _CHAR ) ; }
20661	public double area ( ) { if ( isEmpty ( ) ) { return _NUM ; } return lng ( ) . getLength ( ) * Math . abs ( Math . sin ( latHi ( ) . radians ( ) ) - Math . sin ( latLo ( ) . radians ( ) ) ) ; }
20662	private void moveOverlayUpOrDownToMatchAppraisalBox ( ) { if ( windowManager == _NULL ) { return ; } if ( infoLayout . getLayoutParams ( ) == _NULL ) { return ; } moveOverlay ( inputBox . getVisibility ( ) == View . VISIBLE && appraisalBox . getVisibility ( ) == View . VISIBLE ) ; }
20669	public static boolean hasColumn ( String tableName ) { switch ( tableName ) { case COLUMN_NUMBER : return _BOOL ; default : return _BOOL ; } }
20710	public static ValueGetterSpacePredicate < ServerEntry > propertyLessEqual ( String propertyName , Comparable < ? > value ) { return property ( propertyName , lessEqual ( value ) ) ; }
20755	public void stopRecordingAudio ( String id ) { AudioPlayer audio = this . players . get ( id ) ; if ( audio != _NULL ) { audio . stopRecording ( ) ; } }
20758	@ Nullable @ Override public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { rootView = ( ViewGroup ) inflater . inflate ( R . layout . fragement , container , _BOOL ) ; initCurrentMonthInGridview ( ) ; if ( Singleton . getInstance ( ) . getIsSwipeViewPager ( ) == _NUM ) refreshDays ( ) ; return rootView ; }
20794	public static long tick ( ) { long start = System . currentTimeMillis ( ) ; long end ; do { try { Thread . sleep ( _NUM ) ; } catch ( InterruptedException e ) { throw Throwables . propagate ( e ) ; } end = System . currentTimeMillis ( ) ; } while ( start == end ) ; return end ; }
20903	public int replaceAll ( String regularExpression , String replaceText , boolean selectionOnly ) { System . err . println ( _CHAR not implemented _CHAR ) ; return _NUM ; }
20942	public EmailBuilder withBody ( EmailBody body ) { this . body = body ; return this ; }
20957	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MagicCounterATK_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
20981	public TextEditor outdent ( int spaces ) { return deleteAll ( _CHAR ^ ( \\ t | [ ] { _NUM , _CHAR + spaces + _CHAR } ) _CHAR ) ; }
21046	public void requestQueryFocus ( ) { mFindQuery . requestFocus ( ) ; showKeyboard ( ) ; }
21074	public boolean isPassive ( ) { synchronized ( lock ) { return passive ; } }
21087	public static boolean isNonpositiveInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { int temp = Integer . parseInt ( s ) ; if ( temp <= _NUM ) return _BOOL ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
21097	public boolean equals ( Split split ) { return ( A . equals ( split . A ) && B . equals ( split . B ) ) || ( A . equals ( split . B ) && B . equals ( split . A ) ) ; }
21107	public static double vectorLength ( double [ ] vector ) { double ret = _NUM ; if ( vector == _NULL ) return ret ; else { for ( double aVector : vector ) { ret += Math . pow ( aVector , _NUM ) ; } } return ret ; }
21109	public static String capitalize ( String string ) { if ( ! TextUtils . isEmpty ( string ) ) { return string . substring ( _NUM , _NUM ) . toUpperCase ( Locale . US ) + string . substring ( _NUM ) ; } return string == _NULL ? _NULL : _CHAR _CHAR ; }
21138	public static < T > IStoredList < T > createConcurrentList ( boolean segmented ) { return createConcurrentList ( segmented , _BOOL ) ; }
21159	public static < T > IStoredList < T > createConcurrentList ( boolean segmented , boolean supportFifoPerSegment ) { return new ConcurrentSegmentedStoredList < T > ( segmented , supportFifoPerSegment ) ; }
21188	public static ValueGetterSpacePredicate < ServerEntry > propertyGreaterEqual ( String propertyName , Comparable < ? > value ) { return property ( propertyName , greaterEqual ( value ) ) ; }
21192	public synchronized BookKeeperClientBuilder ledgersPath ( String ledgersPath ) { this . ledgersPath = ledgersPath ; return this ; }
21209	public static FloatBuffer createFloatBuffer ( float ... data ) { if ( data == _NULL ) { return _NULL ; } FloatBuffer buff = createFloatBuffer ( data . length ) ; buff . clear ( ) ; buff . put ( data ) ; buff . flip ( ) ; return buff ; }
21216	public void onMediaMessage ( String message , int sequenceNumber ) { if ( mMediaPlayer != _NULL ) { mMediaPlayer . onMessageReceived ( mCastDevice , MEDIA_NAMESPACE , message ) ; } sendMessageToClients ( _CHAR v2_message _CHAR , message , sequenceNumber ) ; }
21236	public void onDrawerOpened ( View drawerView ) { super . onDrawerOpened ( drawerView ) ; activity . invalidateOptionsMenu ( ) ; }
21250	protected void saveBaseURI ( ) { fBaseURIScope . push ( fDepth ) ; fBaseURI . push ( fCurrentBaseURI . getBaseSystemId ( ) ) ; fLiteralSystemID . push ( fCurrentBaseURI . getLiteralSystemId ( ) ) ; fExpandedSystemID . push ( fCurrentBaseURI . getExpandedSystemId ( ) ) ; }
21277	public void fail ( String errorMessage ) { currentTest . get ( ) . fail ( errorMessage ) ; }
21332	public static ValueGetterSpacePredicate < ServerEntry > pathLessEqual ( String path , Comparable < ? > value ) { return path ( path , lessEqual ( value ) ) ; }
21333	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
21368	public void print ( char ch ) { synchronized ( lock ) { try { appendLocked ( ch ) ; } catch ( IOException e ) { } } }
21416	public void cancel ( ) { }
21519	public void close ( ) { length = _NUM ; }
21669	public void train ( Set < String > sFileNames ) { Iterator < String > iFile = sFileNames . iterator ( ) ; while ( iFile . hasNext ( ) ) { String sText = utils . loadFileToString ( iFile . next ( ) ) ; train ( sText ) ; } }
21682	public LogBlock withUuid ( String uuid ) { LogBlock newLogBlock = new LogBlock ( uuid ) ; body . entrySet ( ) . forEach ( _NULL ) ; return newLogBlock ; }
21689	public static String joinDash ( String input ) { String [ ] temp = input . split ( _CHAR - _CHAR ) ; for ( int i = _NUM ; i < temp . length ; i ++ ) { temp [ i ] = upperCaseFirstChar ( temp [ i ] ) ; } return join ( temp , _CHAR _CHAR ) ; }
21700	private Set < String > toAccountNameSet ( Account [ ] accountList ) { Set < String > actualAccounts = new HashSet < String > ( accountList . length ) ; for ( Account account : accountList ) { actualAccounts . add ( account . name ) ; } return actualAccounts ; }
21724	private boolean spaceOnPage ( Page p ) { byte [ ] header = this . readPageHeader ( p ) ; for ( byte b : header ) { if ( b != ( byte ) _NUM ) { return _BOOL ; } } return _BOOL ; }
21752	public static boolean isCompositeDimensionalObject ( String expression ) { return expression != _NULL && COMPOSITE_DIM_OBJECT_PATTERN . matcher ( expression ) . matches ( ) ; }
21775	public static PsiElement lastElementInSubtree ( PsiElement element ) { PsiElement lastChild ; while ( ( lastChild = element . getLastChild ( ) ) != _NULL ) { element = lastChild ; } return element ; }
21825	public static final float [ ] convertColor ( Color color ) { return color . getRGBComponents ( _NULL ) ; }
21831	public Object remove ( String name ) { return nameValuePairs . remove ( name ) ; }
21882	private void unscheduleInvalidTapNotification ( ) { mRunnableHandler . removeCallbacks ( mHandleInvalidTapRunnable ) ; mIsWaitingForInvalidTapDetection = _BOOL ; }
21884	public static Node replaceLeafByCart ( CART cart , LeafNode leaf ) { DecisionNode mother = ( DecisionNode ) leaf . getMother ( ) ; Node newNode = cart . getRootNode ( ) ; mother . replaceDaughter ( newNode , leaf . getNodeIndex ( ) ) ; newNode . setIsRoot ( _BOOL ) ; return newNode ; }
21889	public boolean isOpaqueCube ( IBlockState state ) { return _BOOL ; }
21894	protected final boolean handleAllocNode ( AllocNode src ) { boolean ret = _BOOL ; Node [ ] targets = pag . allocLookup ( src ) ; for ( Node element : targets ) { if ( element . makeP2Set ( ) . add ( src ) ) { varNodeWorkList . add ( element ) ; ret = _BOOL ; } } return ret ; }
21899	private void updateLimitedRanks ( ) { updateAllRanksForRace ( Race . ASMODIANS , AbyssRankEnum . GRADE9_SOLDIER . getRequiredAp ( ) , RankingConfig . TOP_RANKING_MAX_OFFLINE_DAYS ) ; updateAllRanksForRace ( Race . ELYOS , AbyssRankEnum . GRADE9_SOLDIER . getRequiredAp ( ) , RankingConfig . TOP_RANKING_MAX_OFFLINE_DAYS ) ; }
21928	protected void removeAt ( int index ) { _states [ index ] = REMOVED ; super . removeAt ( index ) ; }
21956	public void write ( String id , String bundle ) { SQLiteDatabase db = this . getWritableDatabase ( ) ; ContentValues values = new ContentValues ( ) ; values . put ( KEY_ID , id ) ; values . put ( KEY_BUNDLE , bundle ) ; db . replace ( TABLE_BUNDLES , _NULL , values ) ; db . close ( ) ; }
21971	@ VisibleForTesting public Optional < Zone > findMatchingZone ( String recordName ) { val matchingZone = fetchMatchingZones ( recordName ) . stream ( ) . reduce ( ( _NULL ) ) ; return matchingZone ; }
21972	public static < T extends Component > void waitUntilGone ( @ NotNull Robot robot , @ NotNull Container root , @ NotNull GenericTypeMatcher < T > matcher ) { String typeName = matcher . supportedType ( ) . getSimpleName ( ) ; Wait . minutes ( _NUM ) . expecting ( _CHAR absence of matching _CHAR + typeName ) . until ( _NULL ) ; }
21978	public RegularExpressionFilter withPattern ( Pattern pattern ) { return new RegularExpressionFilter ( getDimension ( ) , pattern ) ; }
22006	@ Override public void preventDefault ( ) { preventDefault = _BOOL ; }
22012	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Dispel_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
22017	public CompilationUnit addSourceFile ( String name ) { return sourceFiles . addSourceFile ( name ) ; }
22040	@ Override public String toString ( ) { return toString ( keySet ( ) . size ( ) ) ; }
22054	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
22086	public boolean queryMarkerVisible ( int markerUID ) { if ( ! initedNative ) return _BOOL ; return NativeInterface . arwQueryMarkerVisibility ( markerUID ) ; }
22088	@ Override public boolean isSpecified ( int attrIndex ) { return fAttributes [ attrIndex ] . specified ; }
22132	@ Override public void printStackTrace ( PrintStream out ) { synchronized ( out ) { PrintWriter pw = new PrintWriter ( out , _BOOL ) ; printStackTrace ( pw ) ; pw . flush ( ) ; } }
22133	public SpaceTypeDescriptorBuilder addPathIndex ( String path , SpaceIndexType indexType , boolean unique ) { return addIndex ( SpaceIndexFactory . createPathIndex ( path , indexType , unique ) ) ; }
22159	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_OTHER_HOSTILE ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
22187	public ByteString toByteString ( ) { return ByteString . copyOf ( buffer , _NUM , length ) ; }
22227	public double distanceSquared ( double x , double y ) { double dx = this . x - x ; double dy = this . y - y ; return dx * dx + dy * dy ; }
22250	public SpaceTypeDescriptorBuilder addPropertyIndex ( String propertyName , SpaceIndexType indexType , boolean unique ) { return addIndex ( SpaceIndexFactory . createPropertyIndex ( propertyName , indexType , unique ) ) ; }
22311	public static void addRequest ( AbstractAI ai2 , Player player , int requestId , AI2Request request , Object ... requestParams ) { addRequest ( ai2 , player , requestId , ai2 . getObjectId ( ) , request , requestParams ) ; }
22336	private static boolean isCertificateRequest ( Service service ) { val annotations = service . getMetadata ( ) . getAnnotations ( ) ; return ( annotations != _NULL && annotations . containsKey ( REQUEST_ANNOTATION ) ) ; }
22338	public JRangeSlider createHorizontalRangeSlider ( ) { return createRangeSlider ( JRangeSlider . HORIZONTAL , JRangeSlider . LEFTRIGHT_TOPBOTTOM ) ; }
22399	public void incrementCurrentCount ( ) throws GenericEntityException { incrementCurrentCount ( _BOOL ) ; }
22418	public SourceAsset sendSourceAsset ( SourceAsset sourceAsset ) { return authenticatedRestTemplate . postForObject ( getBasePathForEntity ( ) , sourceAsset , SourceAsset . class ) ; }
22439	public void showProgressView ( ) { if ( _NULL != mBaseLayout ) { mBaseLayout . showProgressView ( ) ; } }
22473	public void onMainFrameLoadStarted ( String url ) { }
22474	public void accept ( ) { if ( processed ) { return ; } skype . acceptContactRequest ( this ) ; processed = _BOOL ; }
22481	public static SM_SYSTEM_MESSAGE STR_COMBINE_NO_COMPONENT_ITEM_SINGLE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22526	public void expandToIntegerLimits ( ) { clip [ _NUM ] = Math . floor ( clip [ _NUM ] ) ; clip [ _NUM ] = Math . floor ( clip [ _NUM ] ) ; clip [ _NUM ] = Math . ceil ( clip [ _NUM ] ) ; clip [ _NUM ] = Math . ceil ( clip [ _NUM ] ) ; }
22555	private void registerDeviceStateReceiver ( ) { IntentFilter filter = new IntentFilter ( ) ; filter . addAction ( Intent . ACTION_POWER_DISCONNECTED ) ; filter . addAction ( ConnectivityManager . CONNECTIVITY_ACTION ) ; registerReceiver ( mDeviceStateReceiver , filter ) ; }
22556	public void init ( IWorkbench workbench , IStructuredSelection selection ) { }
22584	public static int readVInt ( DataInput in ) throws IOException { return WritableUtils . readVInt ( in ) ; }
22602	public static final double [ ] resize ( double [ ] a , int size ) { if ( a . length >= size ) return a ; double [ ] b = new double [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , a . length ) ; return b ; }
22674	@ Override public Object generate ( Object target , Method method , Object ... params ) { return generateKey ( method , params ) ; }
22683	public boolean isCurrent ( EGLSurface eglSurface ) { return eGLContext . equals ( EGL14 . eglGetCurrentContext ( ) ) && eglSurface . equals ( EGL14 . eglGetCurrentSurface ( EGL14 . EGL_DRAW ) ) ; }
22688	public boolean hasThrowable ( ) { return observers . get ( ) == TERMINATED && error != _NULL ; }
22734	public void assertContains ( Predicate < HarEntry > predicate ) { assertThat ( trafficLogProvider . get ( ) , new TrafficLogContains ( Collections . singletonList ( predicate ) ) ) ; }
22738	void restoreRotationState ( @ NonNull ContentResolver contentResolver ) { Settings . System . putInt ( contentResolver , Settings . System . ACCELEROMETER_ROTATION , originalAccelerometer ) ; Settings . System . putInt ( contentResolver , Settings . System . USER_ROTATION , originalUserRotation ) ; }
22760	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillCastingTime_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
22820	public SparseGradient toRadians ( ) { return new SparseGradient ( FastMath . toRadians ( value ) , FastMath . toRadians ( _NUM . _NUM ) , derivatives ) ; }
22843	public void resetColors ( ) { if ( mColors == _NULL ) { mColors = new ArrayList < > ( ) ; } mColors . clear ( ) ; }
22849	@ Override public ASModel parseASURI ( String uri ) throws Exception { XMLInputSource source = new XMLInputSource ( _NULL , uri , _NULL ) ; return parseASInputSource ( source ) ; }
22850	public static void addStrut ( JComponent b , boolean horiz , int size ) { if ( size < _NUM ) return ; b . add ( horiz ? Box . createHorizontalStrut ( size ) : Box . createVerticalStrut ( size ) ) ; }
22854	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysResist_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
22856	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPTransfer_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
22886	public static void init ( Context context , boolean is_top ) { cameraManager = new CameraManager ( context , is_top ) ; }
22938	public static Optional < File > find ( File base , final String name ) { checkArgument ( base . isDirectory ( ) , _CHAR _CHAR must be a directory . '' ) ; return Files . fileTreeTraverser ( ) . preOrderTraversal ( base ) . filter ( Predicates . compose ( Predicates . equalTo ( name ) , GET_NAME ) ) . last ( ) ; }
22953	static public void addAll ( List < String > list , String [ ] array ) { for ( String item : array ) list . add ( item ) ; }
22964	public boolean equals ( Object obj ) { return ReferentUuids . compare ( this , obj ) ; }
22972	static int calcExpr ( int a , int b , int c , int d ) { if ( d == _NUM ) { System . out . println ( _CHAR Error : Division by zero _CHAR ) ; return - _NUM ; } else { return a * ( b + ( c / d ) ) ; } }
22985	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcATK_Instant_Ratio_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
23003	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_MAGIC_OTHER_HOSTILE ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
23006	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnAttacked_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
23011	public static Uri PathToUri ( String path ) { return Uri . fromFile ( new File ( path ) ) ; }
23024	private void internal_readConfigFile ( VendorOptionFactoryInterface vendorOptionFactory , Class < ? > panelId , UpdateSymbolInterface parent , String filename , boolean useScrollFrame , boolean isRasterSymbol ) { ReadPanelConfig readConfig = new ReadPanelConfig ( vendorOptionFactory , isRasterSymbol ) ; readConfig . read ( panelId , filename ) ; configureUI ( parent , useScrollFrame , readConfig ) ; }
23064	public JSearchPanel createSearchPanel ( ) { return createSearchPanel ( m_set instanceof PrefixSearchTupleSet ) ; }
23091	public static SM_SYSTEM_MESSAGE STR_MSG_ENCHANT_ITEM_SUCCEEDED_20 ( String playerName , int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , playerName , new DescriptionId ( nameId ) ) ; }
23101	public boolean isOutputFormat ( OutputFormat format ) { return this . outputFormat != _NULL && this . outputFormat == format ; }
23126	@ Override public void redo ( Transaction tx ) { }
23135	public static void init ( Context context ) { if ( cameraManager == _NULL ) { cameraManager = new CameraManager ( context ) ; } }
23148	private void upOneLevel ( ) { if ( this . currentDirectory . getParent ( ) != _NULL ) this . browseTo ( this . currentDirectory . getParentFile ( ) ) ; }
23178	public boolean isCancelled ( ) { return this . request != _NULL && request . isCancelled ( ) ; }
23193	public boolean isReversed ( ) { return reversed ; }
23208	public static int sumFromTo ( int iStart , int iEnd ) { int iRes = _NUM ; for ( int iCnt = iStart ; iCnt <= iEnd ; iRes += iCnt ++ ) ; return iRes ; }
23274	@ Override public EndpointStatus join ( InetSocketAddress endpoint , Map < String , InetSocketAddress > additionalEndpoints ) throws Group . JoinException , InterruptedException { throw new UnsupportedOperationException ( _CHAR NameServerSet does not support join _CHAR ) ; }
23289	public static boolean isValidClassFile ( @ NotNull byte [ ] classData ) { return classData . length >= _NUM && getMagic ( classData ) == _NUM ; }
23322	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CaseHeal_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
23325	public void onStop ( ) { }
23326	protected void skipped ( AssumptionViolatedException e , Description description ) { }
23353	public boolean isDoubleTapToZoomEnabled ( ) { return mDoubleTapToZoomEnabled ; }
23354	public static SM_SYSTEM_MESSAGE STR_ARTIFACT_CASTING ( DescriptionId race , String value1 , DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , race , value1 , descriptionId ) ; }
23366	public MessagesGetHistoryQuery userId ( String value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
23382	protected final boolean handleAllocNode ( AllocNode src ) { boolean ret = _BOOL ; Node [ ] targets = pag . allocLookup ( src ) ; for ( Node element : targets ) { ret = element . makeP2Set ( ) . add ( src ) | ret ; } return ret ; }
23444	private Number parseInt ( String value ) { Long l = Long . valueOf ( value ) ; if ( l . intValue ( ) == l ) { return l . intValue ( ) ; } return l ; }
23486	public boolean isBackbuttonOverridden ( ) { return webView . isButtonPlumbedToJs ( KeyEvent . KEYCODE_BACK ) ; }
23545	public boolean contains ( S2Point p ) { return contains ( new S2LatLng ( p ) ) ; }
23571	String imageUrl ( ) { return mImageUrl ; }
23572	public static byte [ ] readInputStreamToByteArray ( InputStream is ) throws IOException { ByteArrayOutputStream bos = _NULL ; try { bos = new ByteArrayOutputStream ( ) ; readInputStream ( bos , is ) ; } finally { if ( _NULL != bos ) { bos . close ( ) ; } } if ( _NULL != bos ) { return bos . toByteArray ( ) ; } return _NULL ; }
23574	public void clickOption ( ToolbarOptions option ) { By locator = By . xpath ( String . format ( BUTTON_XPATH_TEMPLATE , option . getTitle ( ) ) ) ; toolbar . findElement ( locator ) . click ( ) ; }
23575	public int available ( ) { return length ; }
23592	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Snare_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
23673	private static String toSp ( int n ) { return String . format ( _CHAR % d _CHAR + UNIT_SP , n ) ; }
23681	public static void pickImage ( Context context , android . support . v4 . app . Fragment fragment , int requestCode ) { try { fragment . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( context ) ; } }
23691	public void verifyIsHidden ( ) { conditions . verifyPostAjax ( _NULL ) ; }
23719	public static String [ ] [ ] APOS_ESCAPE ( ) { return APOS_ESCAPE . clone ( ) ; }
23732	private void increaseActionCount ( Map < String , Integer > eventCounts , Predicate < String > predicate ) { eventCounts . forEach ( _NULL ) ; }
23759	public InsertComponentWindow openInsertDialog ( ) { tryToSelect ( ) ; tryToOpenInsertWindow ( ) ; return insertComponentWindow ; }
23760	public static < T extends Serializable , R > DistributedTask < T , R > privilegedTask ( DistributedTask < T , R > task ) { return new PrivilegedDistributedTask < T , R > ( task ) ; }
23764	@ Override public boolean accept ( File dir , String name ) { for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( name , wildcard , caseSensitivity ) ) { return _BOOL ; } } return _BOOL ; }
23768	private static String buildMessage ( final Locale locale , final String pattern , final Object ... arguments ) { return ( pattern == _NULL ) ? _CHAR _CHAR : new MessageFormat ( translate ( pattern , locale ) , locale ) . format ( arguments ) ; }
23778	String fieldName ( int i ) { return fields [ i ] . toName ( constant_pool ) ; }
23782	public static void startComm ( AirMapFlight flight , @ Nullable AirMapCallback < AirMapComm > callback ) { FlightService . getCommKey ( flight , callback ) ; }
23822	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_Instant_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
23864	public Stream < Entry < Tags , MetricValue >> streamAsMap ( Set < Tags > dfl ) { return values_ . mapCombine ( _NULL , _NULL ) ; }
23867	@ Override public void doctypeDecl ( String rootElement , String publicId , String systemId , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL && ! fOnlyPassPrefixMappingEvents ) { fDocumentHandler . doctypeDecl ( rootElement , publicId , systemId , augs ) ; } }
23872	public void cleanStop ( ) { keepAlive = _BOOL ; interrupt ( ) ; }
23901	public Builder withDebug ( boolean enabled ) { this . mDebugEnabled = enabled ; return this ; }
23981	public LikesAddQuery accessKey ( String value ) { return unsafeParam ( _CHAR access_key _CHAR , value ) ; }
23985	public void write ( OutputStream outputStream , Storable obj ) throws IOException { ObjectOutputStream oos = new ObjectOutputStream ( outputStream ) ; oos . writeObject ( obj ) ; }
23995	public static boolean isRemoteFile ( String localFileName ) { return localFileName . contains ( _CHAR : : _CHAR ) ; }
24053	public double [ ] toArray ( ) { double [ ] daRes = new double [ _NUM ] ; daRes [ _NUM ] = ValueSimilarity ; daRes [ _NUM ] = ContainmentSimilarity ; daRes [ _NUM ] = SizeSimilarity ; return daRes ; }
24059	public void defineRuleExpression ( final RuleExpression ruleExpression ) { this . ruleExpressionStr = ruleExpression . getExpression ( ) ; }
24077	private static String toDp ( int n ) { return String . format ( _CHAR % d _CHAR + UNIT_DP , n ) ; }
24115	public EmailBuilder withHeader ( String key , String val ) { this . headers . put ( key , val ) ; return this ; }
24131	public boolean isBackup ( ) { return spaceMode == SpaceMode . BACKUP ; }
24148	public void assertContains ( TrafficLogPredicate query ) { assertThat ( trafficLogProvider . get ( ) , new TrafficLogContains ( query . getPredicates ( ) ) ) ; }
24166	public DerivativeStructure toDegrees ( ) { final DerivativeStructure ds = new DerivativeStructure ( compiler ) ; for ( int i = _NUM ; i < ds . data . length ; ++ i ) { ds . data [ i ] = FastMath . toDegrees ( data [ i ] ) ; } return ds ; }
24176	public static boolean classExists ( String className ) { try { return Class . forName ( className ) != _NULL ; } catch ( ClassNotFoundException e ) { return _BOOL ; } }
24195	public static boolean incrementIfLessThan ( AtomicInteger counter , int max ) { while ( _BOOL ) { int current = counter . intValue ( ) ; if ( current < max ) { if ( counter . compareAndSet ( current , current + _NUM ) ) { return _BOOL ; } } else { return _BOOL ; } } }
24217	public void followRedirects ( boolean followRedirects ) { this . followRedirects = followRedirects ; }
24245	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
24258	public Object clone ( ) { return new ParameterRef ( paramType , n ) ; }
24271	protected void onMeasureChild ( View child , int position , int widthMeasureSpec , int heightMeasureSpec ) { child . measure ( widthMeasureSpec , heightMeasureSpec ) ; }
24306	public static boolean isGiftCard ( String stPassed ) { if ( isOFBGiftCard ( stPassed ) ) { return _BOOL ; } else if ( isValueLinkCard ( stPassed ) ) { return _BOOL ; } return _BOOL ; }
24309	public void softAssertion ( String message ) { fail ( ) ; logEntries . add ( new SoftAssertionFailedEntry ( message ) ) ; }
24310	public String loadFile ( String sID ) { return getDocumentText ( sID , _BOOL ) ; }
24315	public void stopRecording ( ) { if ( this . recorder != _NULL ) { try { if ( this . state == STATE . MEDIA_RUNNING ) { this . recorder . stop ( ) ; this . setState ( STATE . MEDIA_STOPPED ) ; } this . recorder . reset ( ) ; this . moveFile ( this . audioFile ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } }
24321	@ Override protected void assertDependentMetricsExist ( List < String > dependentMetrics ) { }
24337	private boolean pop ( byte mode ) { if ( top < _NUM || stack [ top ] != mode ) { return _BOOL ; } -- top ; return _BOOL ; }
24361	@ Override public void endGroup ( Augmentations augmentations ) throws XNIException { }
24376	public static boolean areInSamePackage ( String d1 , String d2 ) { String packageName1 = Descriptor . getPackageName ( d1 ) ; String packageName2 = Descriptor . getPackageName ( d2 ) ; return packageName1 == _NULL ? packageName2 == _NULL : packageName1 . equals ( packageName2 ) ; }
24399	public @ NonNull ChargeRequest . Builder customerId ( @ Nullable String customerId ) { this . customerId = customerId ; return this ; }
24405	@ Override protected void synchronizeData ( ) { needsSyncData ( _BOOL ) ; DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) this . ownerDocument ( ) ; data = ownerDocument . getNodeValueString ( fNodeIndex ) ; }
24435	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_MAGIC_OTHER_NPC ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
24436	private void initializePokemonAutoCompleteTextView ( ) { String [ ] pokeList = getResources ( ) . getStringArray ( R . array . pokemon ) ; ArrayAdapter < String > adapter = new ArrayAdapter < > ( this , R . layout . autocomplete_pokemon_list_item , pokeList ) ; autoCompleteTextView1 . setAdapter ( adapter ) ; autoCompleteTextView1 . setThreshold ( _NUM ) ; }
24448	public static double clip ( double v , double min , double max ) { if ( v < min ) return min ; if ( v > max ) return max ; return v ; }
24463	public FriendsSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
24514	public void activateAccount ( ) throws LoginFailedException , RemoteServerException { markTutorial ( TutorialStateOuterClass . TutorialState . LEGAL_SCREEN ) ; }
24539	public final void stopAliveTimer ( ) { aliveTimer . terminateTimer ( ) ; }
24547	public AuthRestoreQuery restore ( UserActor actor , String phone ) { return new AuthRestoreQuery ( getClient ( ) , actor , phone ) ; }
24610	public Lexicon removeLowCoverageWords ( double coverage ) { int minDf = ( int ) ( numDocs * coverage ) ; return removeLowDfWords ( minDf ) ; }
24647	public static List < String > formatDateList ( List < Date > dateList ) { List < String > newList = new ArrayList < String > ( ) ; for ( Date date : dateList ) newList . add ( formatDate ( date ) ) ; return newList ; }
24715	static boolean isAppXml ( String mime ) { return mime != _NULL && ( mime . equals ( _CHAR application / xml _CHAR ) || mime . equals ( _CHAR application / xml - dtd _CHAR ) || mime . equals ( _CHAR application / xml - external - parsed - entity _CHAR ) || mime . startsWith ( _CHAR application / _CHAR ) && mime . endsWith ( _CHAR + xml _CHAR ) ) ; }
24730	public AuthSignupQuery sid ( String value ) { return unsafeParam ( _CHAR sid _CHAR , value ) ; }
24732	public void addContactMech ( String contactMechPurposeTypeId , String contactMechId ) { if ( contactMechPurposeTypeId == _NULL ) throw new IllegalArgumentException ( _CHAR You must specify a contactMechPurposeTypeId to add a ContactMech _CHAR ) ; contactMechIdsMap . put ( contactMechPurposeTypeId , contactMechId ) ; }
24765	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCHeal_Instant_HEAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
24773	public void train ( Set < String > sFileNames ) { Iterator < String > iFile = sFileNames . iterator ( ) ; while ( iFile . hasNext ( ) ) { String sText = utils . loadFileToString ( iFile . next ( ) ) ; train ( sText ) ; } }
24800	public void revertToDefault ( int row ) { set ( m_defaultValue , row ) ; }
24823	public boolean init ( StepMetaInterface smi , StepDataInterface sdi ) { this . meta = ( ( SortKeyStepMeta ) smi ) ; this . data = ( ( SortKeyStepData ) sdi ) ; return super . init ( smi , sdi ) ; }
24836	public static void println ( long x ) { out . println ( x ) ; }
24840	public boolean isFromReplication ( ) { return _fromReplication ; }
24861	public static ValueGetterSpacePredicate < ServerEntry > propertyNot ( String propertyName , ISpacePredicate predicate ) { return property ( propertyName , not ( predicate ) ) ; }
24864	@ Override public void clear ( ) { datastore = new byte [ this . totalNumberOfElements * this . sizeOfEachElement ] ; }
24878	public boolean isApplyGlobalWorldGroups ( ) { return this . applyGlobalWorldGroups ; }
24888	protected FriendsEditQuery userId ( int value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
24897	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPAttack_Instant_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
24920	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Heal_Instant_HEAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
24946	public static void log ( int severity , String message , Throwable e ) { log ( new Status ( severity , ID , _NUM , message , e ) ) ; }
25024	public static void println ( int x ) { out . println ( x ) ; }
25077	public boolean remove ( Object o ) { if ( o == _NULL ) return _BOOL ; return map . remove ( o ) == PRESENT ; }
25107	public Peek with ( PeekViewOptions options ) { this . options = options ; return this ; }
25158	public static void onActivityCreateSetTheme ( Activity activity ) { switch ( sTheme ) { default : case THEME_DEFAULT : activity . setTheme ( R . style . PizzaTheme ) ; break ; case THEME_WHITE : activity . setTheme ( R . style . DonutTheme ) ; break ; case THEME_BLUE : activity . setTheme ( R . style . IceCreamTheme ) ; break ; } }
25191	@ Override public void undo ( Transaction tx ) { }
25200	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Search_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
25220	public SQLQuery < ? > build ( ITemplateHolder template , String typeName , ITypeDesc typeDesc ) { if ( typeDesc == _NULL ) return new SQLQuery < Object > ( typeName , _CHAR _CHAR ) ; return template . toSQLQuery ( typeDesc ) ; }
25233	private void clear ( ) { logId = _NULL ; info = _NULL ; mostRecentTimer = _NULL ; times . clear ( ) ; threadIds . clear ( ) ; MDC . remove ( ID_KEY ) ; }
25234	public NewsfeedGetSuggestedSourcesQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
25238	public static void init ( Context context ) { if ( cameraManager == _NULL ) { cameraManager = new CameraManager ( context ) ; } }
25280	public boolean isSupportedBcp47Tag ( String bcp47Tag ) { boolean supported = _BOOL ; try { getDetectorLanguageForBcp47Tag ( bcp47Tag ) ; } catch ( UnsupportedLanguageException ule ) { supported = _BOOL ; } return supported ; }
25309	public double convert ( ) { return Double . longBitsToDouble ( ints2long ( high , low ) ) ; }
25333	public static final Object [ ] resize ( Object [ ] a , int size ) { if ( a . length >= size ) return a ; Object [ ] b = new Object [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , a . length ) ; return b ; }
25356	@ Override protected void clearCachedAuthenticationInfo ( PrincipalCollection principals ) { if ( _clearCaches ) { super . clearCachedAuthenticationInfo ( principals ) ; } }
25360	public static SM_SYSTEM_MESSAGE STR_COMBINE_SKILL_POINT_UP ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
25372	public DocsGetQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
25373	public boolean isReadOnly ( ) { return ! ( isDataPersister ( ) || isBulkDataPersister ( ) ) ; }
25377	public boolean ContainsFunction ( PetFunctionType type ) { if ( type . getId ( ) < _NUM ) { return _BOOL ; } for ( PetFunction t : getPetFunctions ( ) ) { if ( t . getPetFunctionType ( ) == type ) { return _BOOL ; } } return _BOOL ; }
25469	public static String buildTestPageUrl ( final Class < ? > type ) { return FILE_PROTOCOL + findResourcePath ( type ) ; }
25474	public boolean zip ( File [ ] src , File dest ) { return _BOOL ; }
25479	public boolean isAdjacent ( MonotoneVertex < E > vertex ) { return vertex == this . previous || vertex == this . next ; }
25481	public Builder addColumnString ( String name ) { return addColumn ( new StringMetaData ( name ) ) ; }
25486	public static double lerp ( double start , double end , double progress ) { return start - progress * ( start - end ) ; }
25507	public FriendsEditQuery listIds ( List < Integer > value ) { return unsafeParam ( _CHAR list_ids _CHAR , value ) ; }
25521	public void addExpansionListener ( ExplorerExpansionListener listener ) { expansionListeners . add ( listener ) ; }
25529	@ Override protected void afterRead ( int n ) throws IOException { if ( n == - _NUM ) { close ( ) ; } }
25606	public static String makeUrlFull ( HttpServletRequest request , HttpServletResponse response , String url ) { return makeUrl ( request , response , url , _BOOL , _NULL , _NULL ) ; }
25627	public boolean isApplyGlobalGroups ( ) { return this . applyGlobalGroups ; }
25692	public boolean forall ( P2SetVisitor v ) { oldSet . forall ( v ) ; newSet . forall ( v ) ; return v . getReturnValue ( ) ; }
25701	public boolean isOrganisationUnitMode ( OrganisationUnitSelectionMode mode ) { return organisationUnitMode != _NULL && organisationUnitMode == mode ; }
25715	public void addItemFromInflater ( Preference preference ) { addPreference ( preference ) ; }
25731	public boolean hasUpdateListeners ( ) { boolean isEmpty = ! listeners . isEmpty ( ) ; return isEmpty ; }
25735	@ Override public void doctypeDecl ( String rootElement , String publicId , String systemId , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL ) { fDocumentHandler . doctypeDecl ( rootElement , publicId , systemId , augs ) ; } }
25743	public boolean dump_cg ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - cg _CHAR ) ; }
25773	@ Override public void undo ( Transaction tx ) { }
25776	public void shouldAddCurrentTimeZoneOffsetToDate ( ) { addCurrentTimeZoneOffsetToDate = _BOOL ; }
25790	private String readText ( XmlPullParser parser ) throws IOException , XmlPullParserException { String result = _NULL ; if ( parser . next ( ) == XmlPullParser . TEXT ) { result = parser . getText ( ) ; parser . nextTag ( ) ; } return result ; }
25843	void renamedAttrNode ( Attr oldAt , Attr newAt ) { }
25847	void neverEverAskForThatPermissionAgain ( String permission ) { sharedPreferences . edit ( ) . putBoolean ( permission , _BOOL ) . apply ( ) ; }
25866	public void showEmptyView ( ) { if ( _NULL != mBaseLayout ) { mBaseLayout . showEmptyView ( ) ; } }
25888	protected List < Target > createTargets ( List < Element > segmentsAndBoundaries ) { List < Target > targets = new ArrayList < Target > ( ) ; for ( Element sOrB : segmentsAndBoundaries ) { String phone = getPhoneSymbol ( sOrB ) ; targets . add ( new Target ( phone , sOrB ) ) ; } return targets ; }
25900	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_TO_MAGIC_PARTY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
25996	@ Override public final int readInt ( ) throws IOException { dis . readFully ( work , _NUM , _NUM ) ; return ( work [ _NUM ] ) << _NUM | ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) ; }
26007	public void normalize ( ) { normalizeTo ( _NUM . _NUM ) ; }
26021	public boolean hasOption ( String option ) { return commandLine . hasOption ( option ) ; }
26055	public static double determineAveragePower ( AudioInputStream ais ) { if ( ais == _NULL ) throw new NullPointerException ( _CHAR Received _NULL argument _CHAR ) ; DoubleDataSource signal = new AudioDoubleDataSource ( ais ) ; return determineAveragePower ( signal ) ; }
26067	private void tryLogin ( final LoginData loginData ) { final BpmResult loginResult = accountManager . login ( loginData ) ; if ( loginResult . isSuccess ( ) ) { openMainWindow ( ) ; } else { alertFailedLogin ( loginResult . getErrorMessage ( ) ) ; } }
26083	public void removeResultsAvailableHandler ( ResultsAvailableHandler handler ) { onResultsAvailable . remove ( handler ) ; }
26091	public boolean isChromeGoogleSigned ( Context context ) { return isGoogleSigned ( context . getApplicationContext ( ) . getPackageManager ( ) , context . getPackageName ( ) ) ; }
26126	public SparseGradient toDegrees ( ) { return new SparseGradient ( FastMath . toDegrees ( value ) , FastMath . toDegrees ( _NUM . _NUM ) , derivatives ) ; }
26147	public static long hash64 ( final byte [ ] data , int length ) { return hash64 ( data , length , _NUM ) ; }
26173	protected void validateConfig ( Equipment equipment ) { EquipmentCacheObject equipmentCacheObject = ( EquipmentCacheObject ) equipment ; super . validateConfig ( equipmentCacheObject ) ; if ( equipmentCacheObject . getHandlerClassName ( ) == _NULL ) { throw new ConfigurationException ( ConfigurationException . INVALID_PARAMETER_VALUE , _CHAR Parameter \ _CHAR handlerClassName \ _CHAR can not be _NULL _CHAR ) ; } if ( equipmentCacheObject . getProcessId ( ) == _NULL ) { throw new ConfigurationException ( ConfigurationException . INVALID_PARAMETER_VALUE , _CHAR Parameter \ _CHAR processId \ _CHAR can not be _NULL . An equipment MUST be attached to a process . '' ) ; } }
26242	public PointsToSet reachingObjects ( SootField f ) { if ( ! f . isStatic ( ) ) throw new RuntimeException ( _CHAR The parameter f must be a * static * field . '' ) ; VarNode n = findGlobalVarNode ( f ) ; if ( n == _NULL ) { return EmptyPointsToSet . v ( ) ; } return n . getP2Set ( ) ; }
26246	public void addSelectionListener ( ExplorerSelectionListener listener ) { selectionListeners . add ( listener ) ; }
26264	@ Nullable public static WorkspacePath createIfValid ( String relativePath ) { if ( validate ( relativePath ) ) { return new WorkspacePath ( relativePath ) ; } return _NULL ; }
26324	public void resetShipBeforeDateIfAfter ( Timestamp newShipBeforeDate ) { if ( newShipBeforeDate != _NULL ) { if ( ( this . shipBeforeDate == _NULL ) || ( ! this . shipBeforeDate . before ( newShipBeforeDate ) ) ) { this . shipBeforeDate = newShipBeforeDate ; } } }
26325	private void logExpiration ( Entry e ) { if ( e . renewalsDone ( ) ) { logger . log ( Level . FINE , _CHAR Reached desired expiration for lease { _NUM } _CHAR , e . lease ) ; } else { logger . log ( Levels . FAILED , _CHAR Lease { _NUM } expired before reaching desired expiration _CHAR , e . lease ) ; } }
26348	public AuthRestoreQuery restore ( String phone ) { return new AuthRestoreQuery ( getClient ( ) , phone ) ; }
26369	synchronized double acquire ( double minTokens , double maxTokens ) { refill ( ) ; double avail = Math . floor ( Math . min ( maxTokens , tokens ) ) ; if ( avail >= minTokens ) { tokens -= avail ; return avail ; } return _NUM . _NUM ; }
26391	static boolean lessEqual ( Object v1 , Object v2 ) { v1 = maybeConvertToString ( v1 ) ; v2 = maybeConvertToString ( v2 ) ; if ( Objects . equals ( v1 , v2 ) ) { return _BOOL ; } return less ( v1 , v2 ) ; }
26418	private void notifyNewTabCreated ( Tab tab ) { for ( TabModelSelectorObserver listener : mObservers ) { listener . onNewTabCreated ( tab ) ; } }
26463	public Single < AuthResult > createUserWithEmailAndPassword ( final String _email , final String _password ) { return observeSingleValue ( firebaseAuth . createUserWithEmailAndPassword ( _email , _password ) ) ; }
26485	public static ExpectedCondition < Boolean > listSizeIsConstant ( final WebElement element , final By byElement ) { return _NULL ; }
26487	public static ValueGetterSpacePredicate < ServerEntry > pathEqual ( String path , Object value ) { return path ( path , equal ( value ) ) ; }
26526	@ Override public boolean sameOrientationAs ( final Hyperplane < Euclidean3D > other ) { return ( ( ( Plane ) other ) . w ) . dotProduct ( w ) > _NUM . _NUM ; }
26565	public static RoutingService . Builder buildRoutingService ( ServerSet serverSet ) { return buildRoutingService ( serverSet , _BOOL ) ; }
26573	public boolean blocksForInput ( ConversationContext context ) { return _BOOL ; }
26589	public static void fireCellChanged ( final JTable table , final int rowIndex , final int columnIndex ) { ( ( AbstractTableModel ) table . getModel ( ) ) . fireTableCellUpdated ( rowIndex , columnIndex ) ; }
26674	private static boolean isInCenterTargetZone ( float x , float y , float left , float top , float right , float bottom ) { return x > left && x < right && y > top && y < bottom ; }
26682	public static SM_SYSTEM_MESSAGE STR_FIELDARTIFACT_FIRE ( String value1 , String value0 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 , value2 ) ; }
26703	public double reduce ( String numericColumnName , NumericReduceFunction function ) { Column column = column ( numericColumnName ) ; return function . reduce ( column . subset ( rowMap ) . toDoubleArray ( ) ) ; }
26717	public boolean isCleared ( ) { return _cleared ; }
26742	public Object [ ] copyAll ( ) { return Arrays . copyOf ( args , args . length ) ; }
26787	@ Deprecated public SpaceTypeDescriptorBuilder addCompoundIndex ( String [ ] paths , SpaceIndexType indexType , boolean unique ) { if ( indexType != SpaceIndexType . BASIC ) throw new UnsupportedOperationException ( _CHAR only BASIC index type is supported for compoundindex '' ) ; return addIndex ( SpaceIndexFactory . createCompoundIndex ( paths , indexType , _NULL , unique ) ) ; }
26795	public static void init ( Context context ) { if ( cameraManager == _NULL ) { cameraManager = new CameraManager ( context ) ; } }
26813	public static void createTask ( Context context , Task task ) { Intent intent = new Intent ( context , NagboxService . class ) ; intent . setAction ( ACTION_CREATE_TASK ) ; intent . putExtra ( EXTRA_TASK , task ) ; context . startService ( intent ) ; }
26835	public Builder dragging ( Boolean dragging ) { this . dragging = dragging ; return this ; }
26843	public boolean isRestrictedToNonNegative ( ) { return isRestricted ; }
26865	public < T > T recall ( String pathName , Class < T > type ) throws IOException { return recall ( new Path ( pathName ) , type ) ; }
26908	public boolean isView ( ) { return SqlViewType . QUERY . equals ( type ) || isMaterializedView ( ) ; }
26951	@ Override public void confirm ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( createButton ) ) ; }
26957	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SignetBurst_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
26989	public int failed ( String ip , String sid , String useragent ) { set ( _CHAR failtimes _CHAR , getInt ( _CHAR failtimes _CHAR ) + _NUM ) ; return Lock . locked ( getId ( ) , sid , ip , useragent ) ; }
27003	public static RuleKey forDependency ( RuleIdeInfo rule , Label dep ) { return new RuleKey ( dep ) ; }
27033	public void releaseAll ( ) { controller . mouseRelease ( InputEvent . BUTTON1_MASK ) ; controller . mouseRelease ( InputEvent . BUTTON2_MASK ) ; controller . mouseRelease ( InputEvent . BUTTON3_MASK ) ; }
27053	public void start ( ) { this . prestartAllCoreThreads ( ) ; }
27057	public static SM_SYSTEM_MESSAGE STR_FORCE_REJECT_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27075	protected void doIteration ( final SimplexTableau tableau ) throws MathIllegalStateException { incrementIterationCount ( ) ; Integer pivotCol = getPivotColumn ( tableau ) ; Integer pivotRow = getPivotRow ( tableau , pivotCol ) ; if ( pivotRow == _NULL ) { throw new MathIllegalStateException ( LocalizedOptimFormats . UNBOUNDED_SOLUTION ) ; } tableau . performRowOperations ( pivotCol , pivotRow ) ; }
27096	public static void print ( short x ) { out . print ( x ) ; out . flush ( ) ; }
27099	public void close ( ) throws IOException { infoSection . updateModificationDate ( ) ; infoSection . write ( io ) ; }
27174	public static SM_SYSTEM_MESSAGE STR_DUEL_TIMEOUT_WITHOUT_PARTNER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27178	@ Override public void clear ( ) { rowMap . clear ( ) ; }
27198	default String relationName ( String type ) { return String . format ( RELATION , type ) ; }
27248	public static void createReader ( String fileName ) { try { createReader ( new FileInputStream ( fileName ) ) ; } catch ( FileNotFoundException e ) { e . printStackTrace ( ) ; } }
27293	public boolean canCreate ( ) { return count < capacity ; }
27300	@ PostConstruct protected void init ( ) { cacheReadLock = controller . getReadLock ( ) ; }
27327	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_DUNGEON_OPENED_INFO ( String worldname1 , int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname1 , num0 ) ; }
27372	int available ( ) { return numAvailable . get ( ) ; }
27435	private boolean isPrivateAndNonPrimitive ( Field field ) { return Modifier . isPrivate ( field . getModifiers ( ) ) && ! field . getType ( ) . isPrimitive ( ) ; }
27468	private void error ( Element element , String message , Object ... args ) { if ( args . length > _NUM ) { message = String . format ( message , args ) ; } processingEnv . getMessager ( ) . printMessage ( Diagnostic . Kind . ERROR , message , element ) ; }
27495	void onException ( JMSException jE ) { if ( errorHandler != _NULL ) { if ( _logger . isLoggable ( Level . FINE ) ) { _logger . fine ( _CHAR calling ExceptionListener . onException ( ) : _CHAR + cnxKey ) ; } errorHandler . onException ( jE ) ; } else { if ( _logger . isLoggable ( Level . FINE ) ) { _logger . fine ( _CHAR ExceptionListener is not set for connection : '' + cnxKey ) ; } } }
27522	public Builder stringRemoveWhitespaceTransform ( String columnName ) { return transform ( new RemoveWhiteSpaceTransform ( columnName ) ) ; }
27549	protected static ImageIcon createImageIcon ( String path ) { java . net . URL imgURL = MenuLookDemo . class . getResource ( path ) ; if ( imgURL != _NULL ) { return new ImageIcon ( imgURL ) ; } else { System . err . println ( _CHAR Could n _CHAR_CHAR + path ) ; return null ; } }
27572	protected AccountLookupContactsQuery service ( AccountLookupContactsService value ) { return unsafeParam ( _CHAR service _CHAR , value ) ; }
27588	public static byte [ ] extractReadableBytes ( ByteBuf content ) { byte [ ] binaryContent = new byte [ content . readableBytes ( ) ] ; content . markReaderIndex ( ) ; content . readBytes ( binaryContent ) ; content . resetReaderIndex ( ) ; return binaryContent ; }
27592	public JSearchPanel createSearchPanel ( boolean monitorKeystrokes ) { JSearchPanel jsp = new JSearchPanel ( m_set , m_field , monitorKeystrokes ) ; if ( m_lock != _NULL ) { jsp . setLock ( m_lock ) ; } return jsp ; }
27594	public void addColor ( int color ) { if ( mColors == _NULL ) mColors = new ArrayList < > ( ) ; mColors . add ( color ) ; }
27657	@ Override public String toString ( ) { return new String ( toByteArray ( ) ) ; }
27667	public Set possibleTypes ( ) { Set ret = new HashSet ( ) ; ret . addAll ( oldSet . possibleTypes ( ) ) ; ret . addAll ( newSet . possibleTypes ( ) ) ; return ret ; }
27689	public void decline ( ) { if ( processed ) { return ; } skype . declineContactRequest ( this ) ; processed = _BOOL ; }
27696	public String loadFile ( String sID ) { return getDocumentText ( sID , _BOOL ) ; }
27699	public FriendsAreFriendsQuery areFriends ( UserActor actor , int ... userIds ) { return new FriendsAreFriendsQuery ( getClient ( ) , actor , userIds ) ; }
27709	public DefaultHibernateSpaceDataSourceConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
27838	public static void deleteFile ( final File file ) { deleteFile ( file , _BOOL ) ; }
27908	public WallPostQuery postId ( Integer value ) { return unsafeParam ( _CHAR post_id _CHAR , value ) ; }
27948	public static int hash32 ( final byte [ ] data , int length ) { return hash32 ( data , length , _NUM ) ; }
27971	public int size ( ) { return counter . get ( ) ; }
27986	public void cancel ( ) { }
28007	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
28037	public final ProgressEvent increaseProgress ( ) { Progress ++ ; return this ; }
28042	public boolean init ( StepMetaInterface smi , StepDataInterface sdi ) { meta = ( CarbonSliceMergerStepMeta ) smi ; data = ( CarbonSliceMergerStepData ) sdi ; return super . init ( smi , sdi ) ; }
28045	public void bind ( List < Confetto > confetti ) { this . confetti = confetti ; }
28077	public boolean remove ( Unit item ) { Chain < Unit > methodBody = mBody . getUnits ( ) ; if ( item == mHead ) mHead = methodBody . getSuccOf ( item ) ; else if ( item == mTail ) mTail = methodBody . getPredOf ( item ) ; return methodBody . remove ( item ) ; }
28111	public static MatD makeScaleTranslation ( double scale , VecD t ) { return new MatD ( new double [ ] { scale , _NUM , _NUM , _NUM , _NUM , scale , _NUM , _NUM , _NUM , _NUM , scale , _NUM , scale * t . x , scale * t . y , scale * t . z , _NUM } ) ; }
28127	public static boolean isNullEmptyOrWhitespace ( String test ) { if ( test == _NULL ) { return _BOOL ; } if ( test . trim ( ) . length ( ) == _NUM ) { return _BOOL ; } return _BOOL ; }
28164	public static VersionCmpTarget version ( long version ) { return new VersionCmpTarget ( version ) ; }
28170	private long timeSinceLastPrecacheMs ( Context context ) { SharedPreferences prefs = PreferenceManager . getDefaultSharedPreferences ( context ) ; long lastPrecacheTimeMs = prefs . getLong ( PREF_PRECACHE_LAST_TIME , - WAIT_UNTIL_NEXT_PRECACHE_MS ) ; return getElapsedRealtimeOnSystem ( ) - lastPrecacheTimeMs ; }
28184	public boolean hasAggregationLevels ( ) { return aggregationLevels != _NULL && aggregationLevels . size ( ) > _NUM ; }
28191	@ Override public void onStop ( ) { if ( status . get ( ) != STATUS_STOPPING ) { onException ( new IllegalStateException ( _CHAR Binlog Receiver is stopped ungracefully . '' ) ) ; } }
28212	public static SM_SYSTEM_MESSAGE STR_BINDSTONE_WARNING_REMAIN_TIME ( String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 ) ; }
28227	public static ValueGetterSpacePredicate < ServerEntry > propertyNotEqual ( String propertyName , Object value ) { return property ( propertyName , notEqual ( value ) ) ; }
28234	public static boolean dateIsValid ( String date , Locale locale ) { return DateValidator . getInstance ( ) . isValid ( date , locale ) ; }
28258	public AdsUpdateTargetGroupQuery domain ( String value ) { return unsafeParam ( _CHAR domain _CHAR , value ) ; }
28261	@ Override public boolean onPaint ( ViewTransform transform , Graphics2D g ) { boolean needsRepaint = super . onPaint ( transform , g ) ; if ( isSelected ( ) ) { ConstraintTableLayout table = ( ConstraintTableLayout ) mWidget ; WidgetDraw . drawTableControls ( transform , g , table ) ; } return needsRepaint ; }
28267	public static boolean isAndroidProjectWithoutGradleFacet ( @ NotNull ModuleChunk chunk ) { return isAndroidProjectWithoutGradleFacet ( chunk . getModules ( ) ) ; }
28275	private void error ( Element element , String message , Object ... args ) { if ( args . length > _NUM ) { message = String . format ( message , args ) ; } processingEnv . getMessager ( ) . printMessage ( Diagnostic . Kind . ERROR , message , element ) ; }
28327	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public final boolean hasNext ( ) { if ( q [ index ] == _NULL ) return _BOOL ; if ( index == q . length - _NUM ) { q = ( E [ ] ) q [ index ] ; index = _NUM ; if ( q [ index ] == _NULL ) return _BOOL ; } return _BOOL ; }
28337	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
28355	@ Override public void printStackTrace ( final PrintStream out ) { synchronized ( out ) { PrintWriter pw = new PrintWriter ( out , _BOOL ) ; printStackTrace ( pw ) ; pw . flush ( ) ; } }
28365	@ Override public String toString ( ) { return new String ( toByteArray ( ) ) ; }
28380	public static boolean matches ( IIngredient ingredient , IItemStack itemStack ) { if ( ingredient == _NULL ) { return _BOOL ; } if ( ! ingredient . matches ( itemStack ) ) { return _BOOL ; } return _BOOL ; }
28401	@ Override public void onProgressChanged ( WebView view , int newProgress ) { i ( _NULL , _CHAR -- > onProgressChanged ( ) newProgress = _CHAR + newProgress ) ; super . onProgressChanged ( view , newProgress ) ; onLoadWebProgressChanged ( view , newProgress ) ; }
28444	public static boolean dateIsValid ( String date ) { return dateIsValid ( date , _NULL ) ; }
28449	public void sendMail ( MailDetailsBean mDetails ) throws MailSenderException { createConnection ( mDetails . getServer ( ) ) ; createMessage ( mDetails ) ; setTransportForm ( ) ; }
28468	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_REPAIR_BROKEN ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
28475	public static void createSchemaFiles ( String filter ) throws Exception { createSchemaFiles ( _NULL , _BOOL , filter ) ; }
28479	public FilterSpec addExpression ( FilterSpec expr ) { if ( expressions == _NULL ) { expressions = new ArrayList < > ( ) ; } expressions . add ( ( FilterSpec ) expr ) ; return this ; }
28488	public boolean remove ( final T object ) { final int location = this . getLocation ( object ) ; final boolean removed = this . data . remove ( object ) ; this . notifyItemRemoved ( location ) ; return removed ; }
28514	@ Override public String toString ( ) { return x + _CHAR , _CHAR + y + _CHAR , _CHAR + z ; }
28515	private FilterOperation extractOperation ( Matcher tokenizedQuery ) throws BadFilterException { String operationName = tokenizedQuery . group ( _NUM ) ; try { return FilterOperation . valueOf ( operationName ) ; } catch ( IllegalArgumentException ignored ) { LOG . debug ( FILTER_OPERATOR_INVALID . logFormat ( operationName ) ) ; throw new BadFilterException ( FILTER_OPERATOR_INVALID . format ( operationName ) ) ; } }
28573	public boolean forall ( P2SetVisitor v ) { return _BOOL ; }
28595	public boolean isDrawGridLinesEnabled ( ) { return mDrawGridLines ; }
28651	protected BoardGetTopicsQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
28750	public boolean isLocked ( int key ) { return toolkit . getLockingKeyState ( key ) ; }
28760	public static boolean isDiscover ( String cc ) { String first4digs = cc . substring ( _NUM , _NUM ) ; if ( ( cc . length ( ) == _NUM ) && ( first4digs . equals ( _CHAR _NUM _CHAR ) ) ) return isCreditCard ( cc ) ; return _BOOL ; }
28766	public static TimeZone toTimeZone ( int gmtOffset ) { if ( gmtOffset > _NUM || gmtOffset < - _NUM ) { throw new IllegalArgumentException ( _CHAR Invalid GMT offset _CHAR ) ; } String tzId = gmtOffset > _NUM ? _CHAR Etc / GMT + _CHAR : _CHAR Etc / GMT _CHAR ; return TimeZone . getTimeZone ( tzId + gmtOffset ) ; }
28768	public AdsCreateTargetGroupQuery domain ( String value ) { return unsafeParam ( _CHAR domain _CHAR , value ) ; }
28858	public String loadFile ( String sID ) { return getDocumentText ( sID , _BOOL ) ; }
28871	public final static < T extends Bean > List < T > load ( String table , String [ ] cols , String where , Object [ ] args , Class < T > clazz ) { return load ( table , cols , where , args , _NULL , - _NUM , - _NUM , clazz ) ; }
28901	public Object interpret ( Target target , int minNumberOfData ) { Object result = this . interpretToNode ( target , minNumberOfData ) . getAllData ( ) ; return result ; }
28905	public boolean tryUse ( ) { return used . compareAndSet ( _BOOL , _BOOL ) ; }
28941	private List < String > convertByteArrayListToStringValueList ( List < byte [ ] > dictionaryByteArrayList ) { List < String > valueList = new ArrayList < > ( dictionaryByteArrayList . size ( ) ) ; for ( byte [ ] value : dictionaryByteArrayList ) { valueList . add ( new String ( value , Charset . forName ( CarbonCommonConstants . DEFAULT_CHARSET ) ) ) ; } return valueList ; }
28970	public void assertion ( AssertionError e ) { fail ( ) ; logEntries . add ( new AssertionFailedEntry ( e ) ) ; }
28982	@ Override public void redo ( Transaction tx ) { }
29013	public static SM_SYSTEM_MESSAGE STR_MSG_TOWER_DEFENCE_REJECT_INVITATION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29022	@ VisibleForTesting public boolean isAnimating ( ) { return _BOOL ; }
29035	@ VisibleForTesting public void clearPendingInvalidations ( Context context ) { SharedPreferences . Editor editor = PreferenceManager . getDefaultSharedPreferences ( context ) . edit ( ) ; editor . putString ( DELAYED_ACCOUNT_NAME , _NULL ) ; editor . putStringSet ( DELAYED_INVALIDATIONS , _NULL ) ; editor . apply ( ) ; }
29075	public AudioAddQuery add ( UserActor actor , int audioId , int ownerId ) { return new AudioAddQuery ( getClient ( ) , actor , audioId , ownerId ) ; }
29135	public void defaultCase ( Object object ) { throw new RuntimeException ( _CHAR Internal error : _CHAR + object + _CHAR unhandled case . _CHAR ) ; }
29140	private static boolean checkLearnIsPossible ( Player player , PlayerSkillList playerSkillList , SkillLearnTemplate template ) { if ( playerSkillList . isSkillPresent ( template . getSkillId ( ) ) ) return _BOOL ; if ( player . havePermission ( MembershipConfig . STIGMA_AUTOLEARN ) && template . isStigma ( ) ) return _BOOL ; if ( template . isAutolearn ( ) ) return _BOOL ; return _BOOL ; }
29154	public static SM_SYSTEM_MESSAGE STR_MSG_SKIN_CHANGE_TIME_LEFT ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
29179	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Heal_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
29181	public StorageGetKeysQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
29203	private String redisKey ( @ NotNull String storeName , @ NotNull String key ) { return redisNamespace + _CHAR - _CHAR + storeName + _CHAR - _CHAR + key ; }
29204	public String typeName ( ) { return _CHAR class _CHAR ; }
29210	public StatelessHibernateSpaceDataSourceConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
29274	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
29291	public Observable < String > streamGetGithubInfoForEachMember ( List < String > listOfUserName ) { return Observable . just ( listOfUserName ) . flatMap ( githubMemberFunctions . observeEachItem ( ) ) . flatMap ( githubMemberFunctions . getGithubMember ( ) ) . map ( githubMemberFunctions . getNumberOfFollowers ( ) ) . reduce ( githubMemberFunctions . aggregateString ( ) ) . subscribeOn ( schedulerSubscribeOn ) . observeOn ( schedulerObserveOn ) ; }
29363	public String typeName ( ) { return _CHAR utf8 _CHAR ; }
29373	public static void init ( Context context ) { if ( cameraManager == _NULL ) { cameraManager = new CameraManager ( context ) ; } }
29376	public String title ( ) { return mTitle ; }
29391	public boolean hasNonUidOutputIdScheme ( ) { return outputIdScheme != _NULL && ! IdentifiableProperty . UID . equals ( outputIdScheme ) ; }
29393	private void deleteLegionMemberFromDB ( LegionMemberEx legionMember ) { this . allCachedLegionMembers . remove ( legionMember ) ; DAOManager . getDAO ( LegionMemberDAO . class ) . deleteLegionMember ( legionMember . getObjectId ( ) ) ; Legion legion = legionMember . getLegion ( ) ; legion . deleteLegionMember ( legionMember . getObjectId ( ) ) ; addHistory ( legion , legionMember . getName ( ) , LegionHistoryType . KICK ) ; }
29415	@ Override public void doctypeDecl ( String rootElement , String publicId , String systemId , Augmentations augs ) throws XNIException { }
29433	@ Override public void quit ( ) { if ( reusable ) { cleanDriver ( ) ; sendEvent ( _BOOL ) ; } else { super . quit ( ) ; alive = _BOOL ; sendEvent ( _BOOL ) ; } }
29434	@ Before public void beforeTest ( ) { removeTestData ( ) ; }
29440	public Vector midpoint ( Vector other ) { x = ( x + other . x ) / _NUM ; y = ( y + other . y ) / _NUM ; z = ( z + other . z ) / _NUM ; return this ; }
29465	@ Override protected LocalTypeSet entryInitialFlow ( ) { LocalTypeSet ret = ( LocalTypeSet ) emptySet . clone ( ) ; return ret ; }
29495	public static NamedFileChannel createNewFile ( Path dir , String prefix , String suffix ) throws IOException { return createNewFileImpl ( dir , prefix , suffix , new OpenOption [ ] { READ , WRITE , CREATE_NEW } ) ; }
29529	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnAttacked_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
29536	private static boolean isAlpha ( char p_char ) { return ( ( p_char >= _CHAR && p_char <= _CHAR ) || ( p_char >= _CHAR && p_char <= _CHAR ) ) ; }
29607	public static String returnNull ( HttpServletRequest request , HttpServletResponse response ) { return _NULL ; }
29629	@ NonNull public Builder popTo ( @ NonNull Object state ) { while ( ! isEmpty ( ) && ! peek ( ) . equals ( state ) ) { pop ( ) ; } checkArgument ( ! isEmpty ( ) , String . format ( _CHAR % s not found in history _CHAR , state ) ) ; return this ; }
29636	public Single < AuthResult > signInWithEmailAndPassword ( final String _email , final String _password ) { return observeSingleValue ( firebaseAuth . signInWithEmailAndPassword ( _email , _password ) ) ; }
29667	public static MultiwayPoolBuilder < Object , Object > newBuilder ( ) { return new MultiwayPoolBuilder < Object , Object > ( ) ; }
29724	void removedAttrNode ( AttrImpl attr , NodeImpl oldOwner , String name ) { }
29725	public int indexOf ( Split split ) { Integer index = ( Integer ) split2index . get ( split ) ; if ( index == _NULL ) return - _NUM ; else return index ; }
29751	public static boolean isEnRoute ( String cc ) { String first4digs = cc . substring ( _NUM , _NUM ) ; if ( ( cc . length ( ) == _NUM ) && ( first4digs . equals ( _CHAR _NUM _CHAR ) || first4digs . equals ( _CHAR _NUM _CHAR ) ) ) return isCreditCard ( cc ) ; return _BOOL ; }
29813	public synchronized boolean hasTimedOut ( ) { return timedOut ; }
29834	protected void updateProgress ( IProgressMonitor progressMonitor , Object node ) { if ( node instanceof ITypedElement ) { ITypedElement element = ( ITypedElement ) node ; progressMonitor . subTask ( Policy . bind ( _CHAR CompareEditorInput . fileProgress _CHAR , new String [ ] { element . getName ( ) } ) ) ; progressMonitor . worked ( _NUM ) ; } }
29876	public void loadBcpFile ( String bcpFilename , String delimiter , List < Attribute > attributes , String dateFormatString , IntSourceConnectionManager connectionManager , int sourceAttribute ) { loadBcpFile ( bcpFilename , delimiter , attributes , connectionManager , dateFormatString != _NULL ? new SimpleDateFormat ( dateFormatString ) : _NULL , sourceAttribute ) ; }
29902	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcATK_Instant_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
29903	public PhotosGetUserPhotosQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
29910	private static String fixOcrNumsToLetters ( String src ) { return src . replace ( _CHAR _NUM _CHAR , _CHAR l _CHAR ) . replace ( _CHAR _NUM _CHAR , _CHAR o _CHAR ) . replace ( _CHAR _NUM _CHAR , _CHAR s _CHAR ) . replace ( _CHAR _NUM _CHAR , _CHAR z _CHAR ) ; }
29916	protected boolean hasAttemptRemaining ( ) { return mCurrentRetryCount <= mMaxNumRetries ; }
29999	public static void addEmojis ( Context context , Spannable text , int emojiSize , int index , int length ) { addEmojis ( context , text , emojiSize , index , length , _BOOL ) ; }
30014	private boolean isOwner ( NamespaceBundle nsBundle ) { if ( pulsar != _NULL ) { return pulsar . getNamespaceService ( ) . getOwnershipCache ( ) . getOwnedServiceUnit ( nsBundle ) != _NULL ; } return _BOOL ; }
30046	public void validate ( ) { if ( isEmpty ( ) ) { setError ( mAlertMessage ) ; } else { if ( getError ( ) != _NULL ) setError ( _NULL ) ; } }
30117	public boolean endOfStream ( ) { return finished ; }
30171	private void fireProcessSupervisionUpdate ( final SupervisionEvent supervisionEvent ) { Set < SupervisionListener > listeners = processSupervisionListeners . get ( supervisionEvent . getEntityId ( ) ) ; if ( listeners != _NULL ) { for ( SupervisionListener listener : listeners ) { listener . onSupervisionUpdate ( supervisionEvent ) ; } } }
30258	public static void log ( int severity , String message , Throwable e ) { log ( new Status ( severity , SVNUIPlugin . ID , _NUM , message , e ) ) ; }
30268	private int calcNumberOfLines ( ) throws DataFallbackException { int lines = _NUM ; openFallbackInputStream ( ) ; try { while ( getInput ( ) . readLine ( ) != _NULL ) { lines ++ ; } } catch ( IOException e ) { throw new DataFallbackException ( ) ; } finally { closeFallbackInputStream ( ) ; } return lines ; }
30289	public Value abs ( Value num ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
30341	public final Observable < T > readNullable ( ) { return Observable . defer ( _NULL ) . onErrorResumeNext ( _NULL ) ; }
30397	private void cleanupCache ( ) { Iterator < Entry < SocketAddress , Long >> it = this . failedDelayCache . entrySet ( ) . iterator ( ) ; while ( it . hasNext ( ) ) { Entry < SocketAddress , Long > e = it . next ( ) ; Long lastFailTime = e . getValue ( ) ; if ( retryDelayHasPassedBy ( lastFailTime ) ) { it . remove ( ) ; } } }
30422	protected boolean hasAttemptRemaining ( ) { return mCurrentRetryCount <= mMaxNumRetries ; }
30463	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_MAGIC_PARTY_ENEMY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
30472	public long timeSinceLast ( ) { long currentTime = System . currentTimeMillis ( ) ; return currentTime - lastMessageTime ; }
30553	public boolean containsKey ( Object key ) { int hash = hash ( key . hashCode ( ) ) ; return segmentFor ( hash ) . containsKey ( key , hash ) ; }
30576	public void appendTier ( PraatTier tier ) { this . tiers . add ( tier ) ; }
30593	public NumericHaving withValue ( Number value ) { return new NumericHaving ( getType ( ) , getAggregation ( ) , value ) ; }
30610	public static MLReader < CMMModel > read ( ) { return new CMMModelReader ( ) ; }
30617	public boolean isDirty ( ) { return isTextDirty ( ) || isPropDirty ( ) ; }
30628	public void onDrawerOpened ( View drawerView ) { super . onDrawerOpened ( drawerView ) ; try { if ( pokemonGo != _NULL && pokemonGo . getPlayerProfile ( ) != _NULL ) { renderProfile ( pokemonGo . getPlayerProfile ( ) ) ; } } catch ( Exception e ) { } getSupportActionBar ( ) . setTitle ( R . string . profile ) ; }
30665	public void logout ( ) { if ( mSessionManager != _NULL ) mSessionManager . clearSession ( ) ; }
30683	public void verifyIsHidden ( ) { conditions . verifyPostAjax ( invisibilityOfElementLocated ( By . cssSelector ( CSS ) ) ) ; }
30696	public JComboBox createComboBox ( ) { return new JComboBox ( m_model ) ; }
30732	public boolean contains ( String voiceName ) { return ( getVoice ( voiceName ) != _NULL ) ; }
30739	public static SectionSeparator createSectionSeparator ( String caption ) { return new SectionSeparator ( caption ) ; }
30765	public int insertFromScan ( Scan s ) { if ( ! super . insertIntoNextEmptySlot ( ) ) { return _NUM ; } for ( String fldName : sch . fields ( ) ) { Constant val = s . getVal ( fldName ) ; this . setVal ( fldName , val ) ; } if ( s . next ( ) ) return _NUM ; else return - _NUM ; }
30806	private void do_pts_interval_merge ( ) { for ( HeapInsIntervalManager him : new_pts . values ( ) ) { him . mergeFigures ( Parameters . max_pts_budget ) ; } }
30874	public int createTexture ( ) { return GlUtil . createTexture ( mFilter . getTextureTarget ( ) ) ; }
30880	@ NotNull public ObjectProperty < GraphicGenerator . Shape > shape ( ) { return myShape ; }
30888	@ Override public void onReceivedTitle ( WebView view , String title ) { i ( _NULL , _CHAR -- > onReceivedTitle ( ) title = _CHAR + title ) ; super . onReceivedTitle ( view , title ) ; configReceivedTitle ( view , title ) ; }
30968	public Bitmap onTakePhotoResult ( ) { Uri takenPhotoUri = getPhotoFileUri ( this . thePhotoName , this . anotherPhotoName , this . activity ) ; if ( takenPhotoUri != _NULL ) { Bitmap takenImage = BitmapFactory . decodeFile ( takenPhotoUri . getPath ( ) ) ; takenImage = resizePhoto ( takenImage , this . resizePhoto , _BOOL ) ; return takenImage ; } else { return _NULL ; } }
30969	@ Override public void close ( ) throws CannotCloseContainerException { if ( applicationContext instanceof DisposableBean ) { try { ( ( DisposableBean ) applicationContext ) . destroy ( ) ; } catch ( Exception e ) { throw new CannotCloseContainerException ( _CHAR Failed to close container with application context [ _CHAR + applicationContext + _CHAR ] _CHAR , e ) ; } } super . close ( ) ; }
30979	public static boolean supportsEnvelopedEntries ( int version ) { return version >= LogSegmentMetadataVersion . VERSION_V4_ENVELOPED_ENTRIES . value ; }
30994	public String name ( ) { return theType . name ( ) ; }
31016	@ Override public void undo ( Transaction tx ) { }
31045	@ Override public SketchSetOperationPostAggregation withFields ( List < PostAggregation > fields ) { return new SketchSetOperationPostAggregation ( getName ( ) , getFunc ( ) , fields , getSize ( ) ) ; }
31050	public static List < DimensionalItemObject > asList ( Collection < ? extends DimensionalItemObject > collection ) { List < DimensionalItemObject > list = new ArrayList < > ( ) ; list . addAll ( collection ) ; return list ; }
31051	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MoveBehindATK_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
31091	@ Override public boolean accept ( File file ) { if ( file . isDirectory ( ) ) { return _BOOL ; } for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( file . getName ( ) , wildcard ) ) { return _BOOL ; } } return _BOOL ; }
31101	@ Override public int increaseFp ( TYPE type , int value ) { return this . increaseFp ( type , value , _NUM , LOG . REGULAR ) ; }
31109	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
31169	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATK_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
31212	public String name ( ) { return theType . name ( ) ; }
31224	public boolean hasOption ( String option ) { return commandLine . hasOption ( option ) ; }
31276	public static Aggregate < Map < String , Concept > , Number > sum ( String varName ) { return Aggregates . sum ( varName ) ; }
31309	public void java_lang_Class_getName ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getStringObject ( ) ) ; }
31329	public AemParsys removeNthComponentOfType ( Class < ? > componentClass , int n ) { WebElement webElement = getComponentScope ( componentClass , n ) ; clickDeleteInContextMenu ( webElement ) ; wait . withTimeout ( Timeouts . SMALL ) . until ( ExpectedConditions . stalenessOf ( webElement ) ) ; return this ; }
31365	public String loadFile ( String sID ) { return getDocumentText ( sID , _BOOL ) ; }
31381	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCDeBuffMental_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
31385	public void write ( String fileName ) throws IOException { write ( new File ( fileName ) ) ; }
31389	private void addAnnotationOnSource ( ITextUnit textUnit , Issue issue ) { TextContainer sourceContainer = textUnit . getSource ( ) ; addAnnotation ( sourceContainer , issue ) ; }
31441	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcDPHeal_Instant_HEAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
31485	@ Before public void beforeTest ( ) { removeTestData ( ) ; }
31538	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_OTHER_NPC ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
31585	public boolean remove ( int val ) { int index = index ( val ) ; if ( index >= _NUM ) { removeAt ( index ) ; return _BOOL ; } return _BOOL ; }
31593	public void stopRecording ( ) { if ( this . recorder != _NULL ) { try { if ( this . state == STATE . MEDIA_RUNNING ) { this . recorder . stop ( ) ; this . setState ( STATE . MEDIA_STOPPED ) ; } this . recorder . reset ( ) ; this . moveFile ( this . audioFile ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } }
31613	public void checkWarnings ( ) { }
31653	public boolean useRecentDeletes ( ) { return isEvictableCachePolicy ( ) && ! _isMemorySA && ( ! _readOnlySA || _engine . hasMirror ( ) ) ; }
31697	public boolean hasSet ( String name ) { return m_map . containsKey ( name ) ; }
31699	public float [ ] toFloatArray ( ) { float [ ] faRes = new float [ _NUM ] ; faRes [ _NUM ] = ( float ) ValueSimilarity ; faRes [ _NUM ] = ( float ) ContainmentSimilarity ; faRes [ _NUM ] = ( float ) SizeSimilarity ; return faRes ; }
31740	private boolean matchValue ( Collection < ? > collection , int tokenIndex , ServerEntry entry ) { if ( tokenIndex == _tokens . length ) return matchOnRoot ( collection , entry ) ; else throw new RuntimeException ( _CHAR invalid root path : _CHAR + _rootPath + _CHAR - should end with a collection _CHAR ) ; }
31743	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
31770	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OpenAerial_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
31773	public ShimpleBody newBody ( Body b ) { Map < String , String > options = PhaseOptions . v ( ) . getPhaseOptions ( PHASE ) ; return new ShimpleBody ( b , options ) ; }
31790	public double logProb ( String a ) { Tuple2 < Double , Double > t = ugrams . get ( a ) ; if ( t == _NULL ) return ugrams . get ( _CHAR < unk > _CHAR ) . _1 ( ) . doubleValue ( ) ; else return t . _1 ( ) . doubleValue ( ) ; }
31828	public View detachCurrentView ( ) { assert getChildCount ( ) > _NUM ; View view = getChildAt ( CONTENT_INDEX ) ; removeView ( view ) ; return view ; }
31842	boolean canOptimizeTimeSeries ( DataApiRequest apiRequest , TemplateDruidQuery templateDruidQuery ) { return apiRequest . getDimensions ( ) . isEmpty ( ) && ! templateDruidQuery . isNested ( ) && apiRequest . getSorts ( ) . isEmpty ( ) && ! apiRequest . getCount ( ) . isPresent ( ) && apiRequest . getHaving ( ) == _NULL ; }
31864	public boolean hasOption ( String option ) { return commandLine . hasOption ( option ) ; }
31872	public boolean isAsynchronous ( ) { return m_asynch ; }
31882	@ Override public boolean containsSymbol ( char [ ] buffer , int offset , int length ) { synchronized ( fSymbolTable ) { return fSymbolTable . containsSymbol ( buffer , offset , length ) ; } }
31995	public Builder maxZoom ( Number maxZoom ) { this . maxZoom = maxZoom ; return this ; }
32039	public static ValueGetterSpacePredicate < ServerEntry > pathAny ( String path , ISpacePredicate ... predicates ) { return path ( path , any ( predicates ) ) ; }
32094	public static void addEmojis ( Context context , Spannable text , int emojiSize , boolean useSystemDefault ) { addEmojis ( context , text , emojiSize , _NUM , - _NUM , useSystemDefault ) ; }
32135	public boolean isDrawAxisLineEnabled ( ) { return mDrawAxisLine ; }
32143	public Region < S > xor ( final Region < S > region1 , final Region < S > region2 ) { final BSPTree < S > tree = region1 . getTree ( _BOOL ) . merge ( region2 . getTree ( _BOOL ) , new XorMerger ( ) ) ; tree . visit ( nodeCleaner ) ; return region1 . buildNew ( tree ) ; }
32257	public static boolean isBeforeToday ( Calendar _calendar ) { return _calendar . before ( Calendar . getInstance ( ) ) ; }
32287	public static void assertEquals ( double expected [ ] , double observed [ ] , double tolerance ) { assertEquals ( _CHAR Array comparison failure _CHAR , expected , observed , tolerance ) ; }
32298	@ Override public int compareTo ( Storage o ) { return ComparisonChain . start ( ) . compareTrueFirst ( isConsistent ( ) , o . isConsistent ( ) ) . compareTrueFirst ( _masterPrimary , o . _masterPrimary ) . compare ( o . getPromotionId ( ) , getPromotionId ( ) , TimeUUIDs . ordering ( ) . nullsLast ( ) ) . compare ( _uuid , o . _uuid ) . result ( ) ; }
32321	public static < E > RingBuffer < E > createSingleProducer ( EventFactory < E > factory , int bufferSize , WaitStrategy waitStrategy ) { SingleProducerSequencer sequencer = new SingleProducerSequencer ( bufferSize , waitStrategy ) ; return new RingBuffer < E > ( factory , sequencer ) ; }
32338	private static String buildMessage ( final Locale locale , final Localizable specifier , final Object ... parts ) { return ( specifier == _NULL ) ? _CHAR _CHAR : new MessageFormat ( specifier . getLocalizedString ( locale ) , locale ) . format ( parts ) ; }
32361	public synchronized void read ( BlockId blk ) { fileMgr . read ( blk , contents ) ; }
32447	public void addContactMech ( String contactMechPurposeTypeId , String contactMechId ) { if ( contactMechPurposeTypeId == _NULL ) throw new IllegalArgumentException ( _CHAR You must specify a contactMechPurposeTypeId to add a ContactMech _CHAR ) ; contactMechIdsMap . put ( contactMechPurposeTypeId , contactMechId ) ; }
32617	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
32625	public double calcAngle ( Entry p1 , Entry p2 ) { float dx = p2 . getXIndex ( ) - p1 . getXIndex ( ) ; float dy = p2 . getVal ( ) - p1 . getVal ( ) ; return Math . atan2 ( dy , dx ) * _NUM . _NUM / Math . PI ; }
32629	public static Quantum seconds ( int interval ) { return new Quantum ( TimeUnit . SECONDS , interval ) ; }
32655	public int toIntBits ( ) { int color = ( ( int ) ( _NUM * a ) << _NUM ) | ( ( int ) ( _NUM * b ) << _NUM ) | ( ( int ) ( _NUM * g ) << _NUM ) | ( ( int ) ( _NUM * r ) ) ; return color ; }
32668	public int length ( ) { return this . myArrayList . size ( ) ; }
32670	public boolean isAliasCI ( Local l1 , Local l2 ) { PointsToSet pts1 = geomPts . reachingObjects ( l1 ) ; PointsToSet pts2 = geomPts . reachingObjects ( l2 ) ; return pts1 . hasNonEmptyIntersection ( pts2 ) ; }
32711	public static RoutingService . Builder buildRoutingService ( SocketAddress address ) { return SingleHostRoutingService . newBuilder ( ) . address ( address ) ; }
32733	public void resetShipAfterDateIfBefore ( Timestamp newShipAfterDate ) { if ( newShipAfterDate != _NULL ) { if ( ( this . shipAfterDate == _NULL ) || ( ! this . shipAfterDate . after ( newShipAfterDate ) ) ) { this . shipAfterDate = newShipAfterDate ; } } }
32750	@ Override protected void synchronizeData ( ) { needsSyncData ( _BOOL ) ; DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) this . ownerDocument ; name = ownerDocument . getNodeName ( fNodeIndex ) ; }
32779	protected void incrementDictionaryAccessCount ( DictionaryInfo dictionaryInfo ) { dictionaryInfo . incrementAccessCount ( ) ; }
32795	private static void raise ( Object value , Class type ) throws MessageFormatException { throw new MessageFormatException ( _CHAR Can not convert values of type _CHAR + value . getClass ( ) . getName ( ) + _CHAR to _CHAR + type . getName ( ) ) ; }
32827	private boolean isActive ( Object value ) { return Integer . valueOf ( _NUM ) . equals ( value ) ; }
32830	public S2LatLng toLatLng ( ) { return new S2LatLng ( toPointRaw ( ) ) ; }
32886	@ Override public ThetaSketchSetOperationPostAggregation withFields ( List < PostAggregation > fields ) { return new ThetaSketchSetOperationPostAggregation ( getName ( ) , getFunc ( ) , fields , getSize ( ) ) ; }
32944	public void generateEvent ( Long repositoryId ) { processor . onNext ( repositoryId ) ; }
32948	public static ToolbarTapTarget forToolbarMenuItem ( Toolbar toolbar , @ IdRes int menuItemId , CharSequence title ) { return forToolbarMenuItem ( toolbar , menuItemId , title , _NULL ) ; }
32957	public double secondsSinceLast ( ) { return ( timeSinceLast ( ) ) / _NUM . _NUM ; }
33030	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
33040	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s13_gitflow ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
33070	public static void cacheResult ( List < Foo > foos ) { getPersistence ( ) . cacheResult ( foos ) ; }
33085	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
33160	private static JScrollPane init_color_table ( JTable p_color_table , java . util . Locale p_locale ) { JScrollPane scroll_pane = new JScrollPane ( p_color_table ) ; p_color_table . setDefaultRenderer ( Color . class , new TableColorRenderer ( _BOOL ) ) ; setUpColorEditor ( p_color_table , p_locale ) ; return scroll_pane ; }
33176	public void logRequestInfo ( HTTPRequestInfo requestInfo ) { }
33177	public final void toString ( StringBuilder buffer ) { if ( this . keywordRuleMap != _NULL ) { for ( KeywordBindRule rule : this . keywordRuleMap . values ( ) ) { rule . toString ( buffer ) ; buffer . append ( _CHAR ; _CHAR ) ; } } }
33195	public boolean isValid ( File file ) { try { validateRootDirectory ( file ) ; return _BOOL ; } catch ( IllegalArgumentException e ) { return _BOOL ; } }
33233	public synchronized String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; if ( dirtyComponents != _NULL ) sb . append ( _CHAR _CHAR + dirtyComponents ) ; return sb . toString ( ) ; }
33242	public void unload ( ) { setEstimatedMajorSpan ( _BOOL ) ; removeAll ( ) ; }
33247	private final void toString ( StringBuilder buffer ) { buffer . append ( _CHAR ( version _CHAR ) . append ( this . version ) ; buffer . append ( _CHAR ; acl \ _CHAR _CHAR ) . append ( this . name ) . append ( _CHAR \ _CHAR ; _CHAR ) ; for ( PermBindRulePair pair : this . permBindRulePairs ) { pair . toString ( buffer ) ; } }
33253	public void increment ( ) { counter . getAndIncrement ( ) ; }
33254	public boolean isGetAllReturnAttributesEnabled ( ) { return getAllAttributesEnabled ; }
33256	public static String printBase64Binary ( byte [ ] val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printBase64Binary ( val ) ; }
33269	public static String capitalize ( String name ) { if ( name == _NULL || name . length ( ) == _NUM ) { return name ; } return name . substring ( _NUM , _NUM ) . toUpperCase ( ENGLISH ) + name . substring ( _NUM ) ; }
33286	void addRemotePolicyListener ( SSOToken appToken , String serviceName , String notificationURL ) { addRemotePolicyListener ( appToken , serviceName , notificationURL , _BOOL ) ; }
33288	public int hashCode ( ) { if ( ! isHashValueSet ) { hashValue = super . hashCode ( ) ; isHashValueSet = _BOOL ; } return hashValue ; }
33293	public boolean isSignatureValid ( ) { if ( signed & ! validationDone ) { valid = SAMLUtils . checkSignatureValid ( xmlString , ASSERTION_ID_ATTRIBUTE , _issuer ) ; validationDone = _BOOL ; } return valid ; }
33305	public static String appendXMLProperty ( String xml , String propertyXML ) { int idx = xml . lastIndexOf ( PropertyTemplate . SECTION_END_TAG ) ; if ( idx != - _NUM ) { xml = xml . substring ( _NUM , idx ) + propertyXML + xml . substring ( idx ) ; } return xml ; }
33306	public String peekNextId ( ) { int oldPtr = ptr ; String retval = ttoken ( ) ; savedPtr = ptr ; ptr = oldPtr ; return retval ; }
33310	@ Override public void add ( Permission permission ) { perms . add ( permission ) ; }
33342	public Task delete ( String tokenId , ResultHandler < String , ? > handler ) { return delete ( tokenId , _NULL , handler ) ; }
33345	void commitEdit ( ) throws ParseException { JFormattedTextField ftf = getFormattedTextField ( ) ; if ( ftf != _NULL ) { ftf . commitEdit ( ) ; } }
33352	public static int indexIgnoringWhitespace ( String str , int index ) { int j = _NUM ; for ( int i = _NUM ; i < index ; i ++ ) if ( ! Character . isWhitespace ( str . charAt ( i ) ) ) j ++ ; return j ; }
33376	public boolean useSSL ( ) { return state . useSSL ; }
33404	public byte [ ] reverse ( byte [ ] blob ) throws TokenStrategyFailedException { Reject . ifTrue ( blob == _NULL ) ; if ( ! isTokenValidForCompression ( blob ) ) { return blob ; } return performUpdate ( blob , replacement . inverseBidiMap ( ) ) ; }
33435	public boolean visitAVT ( AVT elem ) { return _BOOL ; }
33440	final boolean isRunningOrShutdown ( boolean shutdownOK ) { int rs = runStateOf ( ctl . get ( ) ) ; return rs == RUNNING || ( rs == SHUTDOWN && shutdownOK ) ; }
33454	public boolean isSite ( String serverOrSiteId ) { return WebtopNaming . isSite ( serverOrSiteId ) ; }
33471	public static byte [ ] encodePassword ( final String password ) { return ( _CHAR \ _CHAR _CHAR + password + _CHAR \ _CHAR _CHAR ) . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ; }
33517	public void remove ( int pos ) { if ( pos < _NUM ) { throw new IllegalArgumentException ( _CHAR index less than zero . '' ) ; } if ( pos > getItemCount ( ) ) { throw new IllegalArgumentException ( _CHAR index greater than the number of items . '' ) ; } if ( popupMenu != _NULL ) popupMenu . remove ( pos ) ; }
33523	protected void uninstallComponents ( ) { uninstallTabContainer ( ) ; if ( scrollableTabLayoutEnabled ( ) ) { tabPane . remove ( tabScroller . viewport ) ; tabPane . remove ( tabScroller . scrollForwardButton ) ; tabPane . remove ( tabScroller . scrollBackwardButton ) ; tabScroller = _NULL ; } }
33528	public String debugDump ( int indent ) { int save = indentation ; indentation = indent ; String retval = this . debugDump ( ) ; indentation = save ; return retval ; }
33547	public String message ( ) { return message ; }
33578	public RequireHeader createRequireHeader ( String optionTag ) throws ParseException { if ( optionTag == _NULL ) throw new NullPointerException ( _CHAR _NULL optionTag _CHAR ) ; Require require = new Require ( ) ; require . setOptionTag ( optionTag ) ; return require ; }
33626	public final void add ( final String problem ) { add ( problem , Severity . FATAL ) ; }
33643	void moveDot ( NavigationFilter . FilterBypass fb , int dot , Position . Bias bias ) { fb . moveDot ( dot , bias ) ; }
33651	public boolean isContinuousLayout ( ) { return continuousLayout ; }
33659	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s2_linear_with_both_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
33661	@ Override public String toString ( ) { return _CHAR Position [ longitude = _CHAR + longitude + _CHAR , latitude = _CHAR + latitude + _CHAR , altitude = _CHAR + altitude + _CHAR ] _CHAR ; }
33696	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s3_linear_with_snapshots_light_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
33725	public static String guessDisplayUserFromSession ( Session in_session ) { Object user = SessionUtils . guessUserFromSession ( in_session ) ; return escapeXml ( user ) ; }
33737	public NodeIterator nodeset ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_NODELIST , new Object [ ] { getTypeString ( ) } ) ; return _NULL ; }
33753	public static PrintJobAttributeSet synchronizedView ( PrintJobAttributeSet attributeSet ) { if ( attributeSet == _NULL ) { throw new NullPointerException ( ) ; } return new SynchronizedPrintJobAttributeSet ( attributeSet ) ; }
33755	private boolean matchesFilter ( Entry e ) { try { return filter . matchesEntry ( e ) ; } catch ( DirectoryException ex ) { return _BOOL ; } }
33769	static int debugComponentCount ( ) { DebugGraphicsInfo debugGraphicsInfo = info ( ) ; if ( debugGraphicsInfo != _NULL && debugGraphicsInfo . componentToDebug != _NULL ) { return debugGraphicsInfo . componentToDebug . size ( ) ; } else { return _NUM ; } }
33795	private boolean isOriginAllowed ( final String origin ) { if ( anyOriginAllowed ) { return _BOOL ; } return allowedOrigins . contains ( origin ) ; }
33809	public ContentLengthHeader createContentLengthHeader ( int contentLength ) throws InvalidArgumentException { if ( contentLength < _NUM ) throw new InvalidArgumentException ( _CHAR bad contentLength _CHAR ) ; ContentLength c = new ContentLength ( ) ; c . setContentLength ( contentLength ) ; return c ; }
33835	protected int _dataOrQName ( int identity ) { if ( identity < m_size ) return m_dataOrQName . elementAt ( identity ) ; while ( _BOOL ) { boolean isMore = nextNode ( ) ; if ( ! isMore ) return NULL ; else if ( identity < m_size ) return m_dataOrQName . elementAt ( identity ) ; } }
33843	public PdfCanvas endMarkedContent ( ) { if ( -- mcDepth < _NUM ) throw new PdfException ( PdfException . UnbalancedBeginEndMarkedContentOperators ) ; contentStream . getOutputStream ( ) . writeBytes ( EMC ) ; return this ; }
33852	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , java . io . IOException { processRequest ( request , response ) ; }
33854	public static byte parseByte ( String lexicalXSDByte ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseByte ( lexicalXSDByte ) ; }
33908	public boolean removeChild ( Tree < E > child ) { return children . remove ( child ) ; }
33922	public boolean change_layer_action ( int p_new_layer ) { int r_layer = i_brd . set_layer ( p_new_layer ) ; return r_layer == p_new_layer ; }
33931	void appendStartDocument ( ) { m_docElement = NULL ; initDocument ( _NUM ) ; }
34003	public static Option length ( long value ) { return new LengthOption ( value ) ; }
34024	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return new XNumber ( left . num ( ) + right . num ( ) ) ; }
34049	public XObject operate ( XObject right ) throws javax . xml . transform . TransformerException { if ( XObject . CLASS_BOOLEAN == right . getType ( ) ) return right ; else return right . bool ( ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
34067	public void disable_item ( int p_no ) { for ( int i = _NUM ; i < item_arr . length ; ++ i ) { if ( i == p_no ) { item_arr [ i ] . setEnabled ( _BOOL ) ; } else { item_arr [ i ] . setEnabled ( _BOOL ) ; } } }
34151	@ Override public void close ( ) throws IOException { writer . flush ( ) ; writer . close ( ) ; }
34161	public PdfCanvas beginMarkedContent ( PdfName tag ) { return beginMarkedContent ( tag , _NULL ) ; }
34170	private static void createWorkflow ( DN baseDN , Backend < ? > backend ) throws DirectoryException { LocalBackendWorkflowElement . createAndRegister ( baseDN , backend ) ; }
34187	public void destroy ( ) { Iterator < JspServletWrapper > servlets = jsps . values ( ) . iterator ( ) ; while ( servlets . hasNext ( ) ) { servlets . next ( ) . destroy ( ) ; } }
34237	public void warn ( Object message , Throwable exception ) { log ( Level . WARNING , String . valueOf ( message ) , exception ) ; }
34249	public void writeObject ( Object o ) { if ( internal ) { super . writeObject ( o ) ; } else { writeStatement ( new Statement ( this , _CHAR writeObject _CHAR , new Object [ ] { o } ) ) ; } }
34251	private static int [ ] intArrayFromCollection ( Collection < Integer > v ) { int [ ] result = new int [ v . size ( ) ] ; int i = _NUM ; for ( Integer value : v ) { result [ i ] = value ; i ++ ; } return result ; }
34270	public ResultHandler < String , CoreTokenException > delete ( String tokenId ) throws CoreTokenException { debug ( _CHAR Delete : queued delete { _NUM } _CHAR , tokenId ) ; final ResultHandler < String , CoreTokenException > deleteHandler = handlerFactory . getDeleteHandler ( ) ; dispatcher . delete ( tokenId , deleteHandler ) ; return deleteHandler ; }
34332	private static int arrayIndex ( int i ) { return ( i >> SHIFT_PER_WORD ) ; }
34349	static void make72Safe ( StringBuffer line ) { int length = line . length ( ) ; if ( length > _NUM ) { int index = _NUM ; while ( index < length - _NUM ) { line . insert ( index , _CHAR \ r \ n _CHAR ) ; index += _NUM ; length += _NUM ; } } return ; }
34351	public void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
34379	@ Override public void init ( Subject subject , Map sharedState , Map options ) { debug . message ( _CHAR SampleAuth : : init _CHAR ) ; this . options = options ; this . sharedState = sharedState ; this . bundle = amCache . getResBundle ( amAuthSampleAuth , getLoginLocale ( ) ) ; }
34381	public LoginConfiguration indexType ( AuthIndexType indexType ) { this . indexType = indexType ; return this ; }
34387	boolean isBaseHeader ( ) { return value == BASE_HEADER ; }
34394	public static void fill ( int [ ] array , int start , int end , int value ) { Arrays . checkStartAndEnd ( array . length , start , end ) ; for ( int i = start ; i < end ; i ++ ) { array [ i ] = value ; } }
34400	public boolean hasAccessToken ( ) { final String token = getAccessToken ( ) ; return token != _NULL && ! token . isEmpty ( ) ; }
34423	public ContentEncodingHeader createContentEncodingHeader ( String encoding ) throws ParseException { if ( encoding == _NULL ) throw new NullPointerException ( _CHAR _NULL encoding _CHAR ) ; ContentEncoding c = new ContentEncoding ( ) ; c . setEncoding ( encoding ) ; return c ; }
34429	public static short parseShort ( String lexicalXSDShort ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseShort ( lexicalXSDShort ) ; }
34434	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return ( left . notEquals ( right ) ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
34440	@ Override public final boolean isEnabled ( ) { return isEnabled ; }
34454	public void debug ( Object message , Throwable exception ) { log ( Level . FINE , String . valueOf ( message ) , exception ) ; }
34471	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; user1 = DN . valueOf ( _CHAR cn = user1 , dc = example , dc = com _CHAR ) ; user2 = DN . valueOf ( _CHAR cn = user2 , dc = example , dc = com _CHAR ) ; user3 = DN . valueOf ( _CHAR cn = user3 , dc = example , dc = com _CHAR ) ; user4 = DN . valueOf ( _CHAR cn = user4 , dc = example , dc = com _CHAR ) ; }
34491	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
34498	public boolean isSelected ( ) { return selectionModel . isSelected ( ) ; }
34522	private void populateMap ( Map < String , StateInfo > map , StateInfo stateInfo ) { String serverId = stateInfo . id ; map . put ( serverId , stateInfo ) ; if ( ! stateInfo . isUp ) { down . add ( serverId ) ; } serverSelectionList [ getNextSelected ( ) ] = stateInfo ; }
34550	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ _CHAR + getName ( ) + _CHAR _CHAR + getClassName ( ) + _CHAR ] _CHAR ; }
34589	public TaskRunnable tail ( ) { return tailTask ; }
34619	public Boolean isForceAuthn ( ) { return forceAuthn ; }
34620	public boolean isRolloverBorders ( ) { return rolloverBorders ; }
34630	protected void paintEnabledText ( JLabel l , Graphics g , String s , int textX , int textY ) { int mnemIndex = l . getDisplayedMnemonicIndex ( ) ; g . setColor ( l . getForeground ( ) ) ; SwingUtilities2 . drawStringUnderlineCharAt ( l , g , s , mnemIndex , textX , textY ) ; }
34680	public boolean isNasSelected ( ) { return ( addr [ _NUM ] == ( byte ) _NUM ) && ( addr [ _NUM ] == ( byte ) _NUM ) && ( addr [ _NUM ] == ( byte ) _NUM ) && ( addr [ _NUM ] == ( byte ) _NUM ) ; }
34692	public void show ( @ IdRes final int itemId ) { map . add ( itemId ) ; navigation . invalidateBadge ( itemId ) ; }
34699	private int useCount ( ) { return m_useCount2 ; }
34709	public boolean shouldSelectCell ( EventObject anEvent ) { return _BOOL ; }
34732	public static void stop ( ) { if ( INSTANCE != _NULL ) { INSTANCE . scheduler . shutdown ( ) ; INSTANCE = _NULL ; } }
34743	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
34820	public static RootContext ctx ( ) { return new RootContext ( ) ; }
34833	public boolean hasLock ( ) { return lock . getHoldCount ( ) > _NUM ; }
34856	void addAvailableElement ( QName elemName ) { m_availElems . put ( elemName , elemName ) ; }
34917	@ Override public void cacheResult ( List < Foo > foos ) { for ( Foo foo : foos ) { if ( entityCache . getResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) ) == _NULL ) { cacheResult ( foo ) ; } else { foo . resetOriginalValues ( ) ; } } }
34964	public boolean isUserLockout ( String userDN , String orgDN ) { populateLockoutValues ( orgDN ) ; PWResetAccountLockout pwResetLockout = new PWResetAccountLockout ( this ) ; return pwResetLockout . isLockout ( userDN ) ; }
34967	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { XMLString s1 = getArg0AsString ( xctxt ) ; return ( XString ) s1 . fixWhiteSpace ( _BOOL , _BOOL , _BOOL ) ; }
34972	public final boolean containsIgnoreCase ( String s ) { if ( _NULL == s ) return _BOOL ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] . equalsIgnoreCase ( s ) ) return _BOOL ; } return _BOOL ; }
34992	public boolean isReverseRelationship ( ) { return isReverseRelationship ; }
35010	public boolean isEmpty ( ) { return map . size ( ) == _NUM ; }
35028	public Element first ( ) { return ( state != _NULL ) ? state . first ( ) : _NULL ; }
35046	public void display_selected_item_info ( ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; ( ( StateSelectedItem ) interactive_state ) . info_display ( ) ; }
35050	@ Override public boolean isTimeValid ( ) { if ( conditions == _NULL ) { return _BOOL ; } else { return conditions . checkDateValidity ( currentTimeMillis ( ) ) ; } }
35055	public JMenu add ( JMenu c ) { super . add ( c ) ; return c ; }
35062	public EventHeader createEventHeader ( String eventType ) throws ParseException { if ( eventType == _NULL ) throw new NullPointerException ( _CHAR _NULL eventType _CHAR ) ; Event event = new Event ( ) ; event . setEventType ( eventType ) ; return event ; }
35082	public boolean isReal ( ) { return type == REAL ; }
35120	private boolean mustAdd ( MatchingRule matchingRule ) { String f = filter . getText ( ) . trim ( ) ; return f . length ( ) == _NUM || ( FILTER_NAME . equals ( filterAttribute . getSelectedItem ( ) ) && mustAdd ( f , matchingRule . getOID ( ) , matchingRule . getNameOrOID ( ) ) ) ; }
35128	public void initialize ( Map configParams ) { }
35149	@ Override public void close ( ) { if ( importConfig . invokeImportPlugins ( ) ) { pluginConfigManager . invokeLDIFImportEndPlugins ( importConfig ) ; } importConfig . close ( ) ; }
35159	public static List < JsonPointer > filter ( final String ... fields ) { final List < JsonPointer > result = new ArrayList < > ( fields . length ) ; for ( final String field : fields ) { result . add ( new JsonPointer ( field ) ) ; } return result ; }
35161	private static boolean checkFileParentExists ( final String file ) { String fileName = PathUtils . removeSlashFromEnd ( file ) ; File dir = new File ( fileName . substring ( _NUM , fileName . lastIndexOf ( _CHAR / _CHAR ) + _NUM ) ) ; return dir . exists ( ) && dir . isDirectory ( ) ; }
35174	public boolean isEmpty ( ) { return _BOOL ; }
35182	public final IConfiguration cloneConfiguration ( ) { Configuration configuration = createConfigurationInstance ( ) ; copyConfFields ( configuration ) ; return configuration ; }
35200	public void recycle ( ) { type = T_NULL ; byteC . recycle ( ) ; charC . recycle ( ) ; strValue = _NULL ; hasStrValue = _BOOL ; hasHashCode = _BOOL ; hasLongValue = _BOOL ; }
35201	public void mouseWheelMoved ( MouseWheelEvent e ) { getHandler ( ) . mouseWheelMoved ( e ) ; }
35203	public Tree < E > addChild ( E item ) { Tree < E > it = new Tree < E > ( this , item ) ; children . add ( it ) ; return it ; }
35220	public static void registerPasswordValidator ( DN configEntryDN , PasswordValidator < ? extends PasswordValidatorCfg > validator ) { directoryServer . passwordValidators . put ( configEntryDN , validator ) ; }
35232	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
35237	public static List < ImageData > createGifFrames ( byte [ ] bytes ) { byte [ ] imageType = readImageType ( bytes ) ; if ( imageTypeIs ( imageType , gif ) ) { GifImageData image = new GifImageData ( bytes ) ; GifImageHelper . processImage ( image ) ; return image . getFrames ( ) ; } throw new IllegalArgumentException ( _CHAR GIF image expected . '' ) ; }
35304	protected void dragDividerTo ( int location ) { splitPaneUI . dragDividerTo ( location ) ; }
35309	private boolean isSubcommand ( String name ) { SubCommand subCommand = getSubCommand ( ) ; return subCommand != _NULL && subCommand . getName ( ) . equalsIgnoreCase ( name ) ; }
35337	public static PasswordPolicyResponseControl newControl ( final PasswordPolicyWarningType warningType , final int warningValue ) { Reject . ifNull ( warningType ) ; Reject . ifFalse ( warningValue >= _NUM , _CHAR warningValue is negative _CHAR ) ; return new PasswordPolicyResponseControl ( _BOOL , warningType , warningValue , _NULL ) ; }
35384	public boolean hasExtensions ( ) { return extensions != _NULL ; }
35404	public void fileNotFound ( ) { }
35414	@ Override public V remove ( Object key ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR parameterMap . locked _CHAR ) ) ; return ( super . remove ( key ) ) ; }
35449	public BufferIterator bigEndianIterator ( ) { return new NioBufferIterator ( address , ( int ) size , ByteOrder . nativeOrder ( ) != ByteOrder . BIG_ENDIAN ) ; }
35454	public boolean hasQueryId ( ) { return queryFilter == _NULL ; }
35501	public void addCallParam ( String pattern , int paramIndex ) { addRule ( pattern , new CallParamRule ( paramIndex ) ) ; }
35543	public boolean hasNameOrOID ( final String value ) { return hasName ( value ) || getOID ( ) . equals ( value ) ; }
35549	public boolean findDefaultApp ( ) { if ( mResId == _NUM ) { return _BOOL ; } parsedIntent = _NULL ; parsedValues = _NULL ; new MyLayoutParser ( ) . parseValues ( ) ; return ( parsedValues != _NULL ) && ( parsedIntent != _NULL ) ; }
35577	private int compareBackendIDs ( BaseDNDescriptor desc1 , BaseDNDescriptor desc2 ) { return desc1 . getBackend ( ) . getBackendID ( ) . compareTo ( desc2 . getBackend ( ) . getBackendID ( ) ) ; }
35583	@ Override public boolean isSmapDumped ( ) { return isSmapDumped ; }
35603	public JMenuItem add ( JMenuItem menuItem ) { super . add ( menuItem ) ; return menuItem ; }
35609	public boolean isSslEncryption ( ) { return sslEncryption ; }
35612	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s8_main_and_branch_with_intermediate_light_tag ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
35616	public void start ( Activity activity , int requestCode ) { activity . startActivityForResult ( getIntent ( activity ) , requestCode ) ; }
35621	protected KeyListener createKeyListener ( ) { return getHandler ( ) ; }
35632	public Task partialQuery ( TokenFilter filter , ResultHandler < Collection < PartialToken > , ? > handler ) { return new PartialQueryTask ( filter , handler ) ; }
35638	public static List < Foo > findByUuid ( java . lang . String uuid ) { return getPersistence ( ) . findByUuid ( uuid ) ; }
35644	void elementDequeued ( ) { if ( count == _NUM ) queueIsEmpty ( ) ; else if ( takeIndex == _NUM ) takeIndexWrapped ( ) ; }
35656	protected PaperOnboardingPage toggleToNextElement ( ) { if ( mActiveElementIndex + _NUM < mElements . size ( ) ) { mActiveElementIndex ++ ; return mElements . size ( ) > mActiveElementIndex ? mElements . get ( mActiveElementIndex ) : _NULL ; } else return _NULL ; }
35663	@ Override protected void afterRead ( int n ) throws IOException { if ( n == - _NUM ) { close ( ) ; } }
35708	public Enumeration < Permission > elements ( ) { List < Permission > results = new ArrayList < > ( ) ; synchronized ( this ) { for ( List < UnresolvedPermission > l : perms . values ( ) ) { synchronized ( l ) { results . addAll ( l ) ; } } } return Collections . enumeration ( results ) ; }
35763	public boolean isCurrent ( EGLSurface eglSurface ) { return mEGLContext . equals ( EGL14 . eglGetCurrentContext ( ) ) && eglSurface . equals ( EGL14 . eglGetCurrentSurface ( EGL14 . EGL_DRAW ) ) ; }
35802	public DTM createDocumentFragment ( ) { return m_dtmManager . createDocumentFragment ( ) ; }
35811	public static PdfAction createLaunch ( PdfFileSpec fileSpec ) { PdfAction action = new PdfAction ( ) . put ( PdfName . S , PdfName . Launch ) ; if ( fileSpec != _NULL ) { action . put ( PdfName . F , fileSpec . getPdfObject ( ) ) ; } return action ; }
35815	public void info ( Object message ) { log ( Level . INFO , String . valueOf ( message ) , _NULL ) ; }
35847	public Enumeration < Permission > elements ( ) { synchronized ( this ) { return Collections . enumeration ( perms ) ; } }
35863	public GSERParser skipSP ( ) throws DecodeException { skip ( GSER_SP ) ; return this ; }
35899	public boolean isLargeModel ( ) { return largeModel ; }
35933	public void increment ( ) { counter . getAndIncrement ( ) ; }
35944	public static boolean callsSuper ( MethodNode mn ) { for ( AbstractInsnNode ain : mn . instructions . toArray ( ) ) { if ( ain . getOpcode ( ) == Opcodes . INVOKESPECIAL ) { MethodInsnNode min = ( MethodInsnNode ) ain ; if ( min . name . equals ( mn . name ) ) { return _BOOL ; } } } return _BOOL ; }
35982	public void print ( boolean bool ) { print ( String . valueOf ( bool ) ) ; }
36030	public static final Query createTestQuery2 ( ) { Query query = new Query ( ) ; query . setWhere ( _CHAR myindexedfield1 = _CHAR AND myindexedfield2 = _CHAR _CHAR ) ; query . setDatabase ( Fixtures . DB ) ; query . setTable ( _CHAR mytable _CHAR ) ; return query ; }
36033	public boolean hasEvents ( ) { return ! events . isEmpty ( ) ; }
36042	@ Override public void close ( ) { manager . checkAccess ( ) ; target . close ( ) ; setLevel ( Level . OFF ) ; }
36046	public void increment ( ) { counter . getAndIncrement ( ) ; }
36052	public final void error ( Object message ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_ERROR ) ) { log ( SimpleLog . LOG_LEVEL_ERROR , message , _NULL ) ; } }
36127	public boolean isCli ( ) { return cliArg . isPresent ( ) ; }
36157	private static boolean isAlpha ( char p_char ) { return ( ( p_char >= _CHAR && p_char <= _CHAR ) || ( p_char >= _CHAR && p_char <= _CHAR ) ) ; }
36194	public void schedule ( TimerTask task , long delay , long period ) { if ( delay < _NUM || period <= _NUM ) { throw new IllegalArgumentException ( ) ; } scheduleImpl ( task , delay , period , _BOOL ) ; }
36223	@ Override public boolean ready ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; return ( ( end - pos ) > _NUM ) || in . ready ( ) ; } }
36258	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
36260	@ Override public boolean iTableExists ( IndexIdentifier indexId ) { String iTableName = Utils . calculateITableName ( indexId ) ; logger . info ( _CHAR Checking for existance of iTable : '' + iTableName ) ; return iTableExists ( iTableName ) ; }
36265	public String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
36295	@ Override public void close ( ) throws IOException { closed = _BOOL ; def . end ( ) ; in . close ( ) ; }
36338	public static PortfolioOverview calculate ( final BigDecimal balance , final Statistics stats , final Collection < Investment > investments ) { final Map < Rating , Integer > amounts = stats . getRiskPortfolio ( ) . stream ( ) . collect ( Collectors . toMap ( _NULL , _NULL ) ) ; investments . forEach ( _NULL ) ; return new PortfolioOverview ( balance , amounts ) ; }
36370	@ Override public List < Foo > findByField2 ( boolean field2 ) { return findByField2 ( field2 , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
36380	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return left . equals ( right ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
36406	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
36428	public AlertInfoHeader createAlertInfoHeader ( URI alertInfo ) { if ( alertInfo == _NULL ) throw new NullPointerException ( _CHAR _NULL arg alertInfo _CHAR ) ; AlertInfo a = new AlertInfo ( ) ; a . setAlertInfo ( alertInfo ) ; return a ; }
36511	void register ( Itr itr ) { head = new Node ( itr , head ) ; }
36514	public void initialize ( Map configParams ) { }
36516	public static boolean isBomByte ( byte byteToCheck ) { return ( byteToCheck == ( byte ) _NUM || byteToCheck == ( byte ) _NUM || byteToCheck == ( byte ) _NUM ) || ( byteToCheck == ( byte ) _NUM || byteToCheck == ( byte ) _NUM ) ; }
36520	public int compare ( File file1 , File file2 ) { return caseSensitivity . checkCompareTo ( file1 . getName ( ) , file2 . getName ( ) ) ; }
36549	private boolean isDeleted ( ) { return isDeleted ; }
36560	public static Object put ( Object object , Object element , Object value ) { for ( Resolver resolver : resolvers ( object ) ) { Object resolved = resolver . put ( object , element , value ) ; if ( resolved != Resolver . UNRESOLVED ) { return resolved ; } } return Resolver . UNRESOLVED ; }
36607	public InitializationBuilder requireErrorAndDebugLogPublisher ( final PrintStream loggingOut , final PrintStream errConfiguringLogging ) { subSystemsToInitialize . add ( SubSystem . ERROR_DEBUG_LOGGERS ) ; this . loggingOut = loggingOut ; this . errConfiguringLogging = errConfiguringLogging ; return this ; }
36661	@ Deprecated public static void showAlert ( Context context , String title , String text ) { Builder alertBuilder = new Builder ( context ) ; alertBuilder . setTitle ( title ) ; alertBuilder . setMessage ( text ) ; alertBuilder . create ( ) . show ( ) ; }
36666	public void unassignAllPolicies ( String serviceName , Set policyDNs ) throws AMException , SSOException { throw new UnsupportedOperationException ( ) ; }
36672	public void updateConfigurationAttribute ( AttributeType attr , Schema schema ) { configurationAttributePanel . update ( attr , schema ) ; schemaElementPanel = configurationAttributePanel ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , configurationAttributePanel . getTitle ( ) . toString ( ) ) ; }
36678	public void connectionFailed ( ) { deallocate ( _BOOL , _BOOL , _BOOL ) ; }
36682	@ Override public List < Foo > findByUuid ( String uuid ) { return findByUuid ( uuid , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
36685	public static boolean isLeftMouseButton ( MouseEvent anEvent ) { return ( ( anEvent . getModifiersEx ( ) & InputEvent . BUTTON1_DOWN_MASK ) != _NUM || anEvent . getButton ( ) == MouseEvent . BUTTON1 ) ; }
36706	public static boolean isNetworkAvailable ( Context context ) { try { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getApplicationContext ( ) . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetworkInfo = connectivityManager . getActiveNetworkInfo ( ) ; return activeNetworkInfo != _NULL && activeNetworkInfo . isConnected ( ) ; } catch ( Exception e ) { return _BOOL ; } }
36708	public boolean isAllowed ( final String input ) { final String lowerCaseInput = input . toLowerCase ( ) ; return ! disallowedStrings . parallelStream ( ) . anyMatch ( _NULL ) ; }
36714	public String encodeURL ( String url ) { checkTokenType ( _CHAR encodeURL _CHAR ) ; return sessionURL . encodeURL ( url , session ) ; }
36717	public static SecurityOptions createSelfSignedCertificateOptions ( boolean enableSSL , boolean enableStartTLS , int sslPort ) { return createSelfSignedCertificateOptions ( enableSSL , enableStartTLS , sslPort , Arrays . asList ( SELF_SIGNED_CERT_ALIAS ) ) ; }
36792	public void stopContinuousQuery ( TokenFilter filter ) { dispatcher . stopContinuousQuery ( filter ) ; }
36820	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public Class < ? extends Enum > enumType ( ) { return enumType ; }
36885	private static Runnable asUncheckedRunnable ( Closeable c ) { return _NULL ; }
36917	public void handleBtnRealmRequest ( RequestInvocationEvent event ) { bRealmSelect = _BOOL ; forwardTo ( ) ; }
36942	public static void writeToFile ( String fileName , String content ) throws IOException { FileWriter fileWriter = _NULL ; try { fileWriter = new FileWriter ( fileName ) ; fileWriter . write ( content ) ; } finally { closeIfNotNull ( fileWriter ) ; } }
37001	private static String filterForBugID4988885 ( String msg ) { return msg . replaceAll ( _CHAR < br > _CHAR , _CHAR & # _NUM ; < br > _CHAR ) ; }
37102	public Name add ( String comp ) throws InvalidNameException { impl . add ( comp ) ; return this ; }
37103	public AcceptLanguageHeader createAcceptLanguageHeader ( Locale language ) { if ( language == _NULL ) throw new NullPointerException ( _CHAR _NULL arg _CHAR ) ; AcceptLanguage acceptLanguage = new AcceptLanguage ( ) ; acceptLanguage . setAcceptLanguage ( language ) ; return acceptLanguage ; }
37106	private void startMonitoringPublisher ( ) { long period = localReplicationServer . getMonitoringPublisherPeriod ( ) ; if ( period > _NUM ) { final MonitoringPublisher thread = new MonitoringPublisher ( this , period ) ; if ( monitoringPublisher . compareAndSet ( _NULL , thread ) ) { thread . start ( ) ; } } }
37187	@ Override public void onStateNotSaved ( ) { delegate . onStateNotSaved ( ) ; }
37209	private static ModificationType register ( final int intValue , final String name , final Enum modificationTypeEnum ) { final ModificationType t = new ModificationType ( intValue , name , modificationTypeEnum ) ; ELEMENTS [ intValue ] = t ; return t ; }
37286	private void closeConnectionPool ( ) { final GenericObjectPool < ? > oldpool = connectionPool ; connectionPool = _NULL ; try { if ( oldpool != _NULL ) { oldpool . close ( ) ; } } catch ( final Exception e ) { } }
37291	@ Override public void cacheResult ( Foo foo ) { entityCache . putResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) , foo ) ; finderCache . putResult ( FINDER_PATH_FETCH_BY_UUID_G , new Object [ ] { foo . getUuid ( ) , foo . getGroupId ( ) } , foo ) ; foo . resetOriginalValues ( ) ; }
37297	@ Override public void cacheResult ( Foo foo ) { entityCache . putResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) , foo ) ; finderCache . putResult ( FINDER_PATH_FETCH_BY_UUID_G , new Object [ ] { foo . getUuid ( ) , foo . getGroupId ( ) } , foo ) ; foo . resetOriginalValues ( ) ; }
37334	public static double lineDistance ( Feature line , String units ) throws TurfException { return lineDistance ( line . getGeometry ( ) , units ) ; }
37338	public UserAgentHeader createUserAgentHeader ( List product ) throws ParseException { if ( product == _NULL ) throw new NullPointerException ( _CHAR _NULL user agent _CHAR ) ; UserAgent userAgent = new UserAgent ( ) ; userAgent . setProduct ( product ) ; return userAgent ; }
37383	protected Frame < V > newFrame ( final Frame < ? extends V > src ) { return new Frame < V > ( src ) ; }
37385	private static boolean isNotImplemented ( MonitoringAttributes attr , SearchResultEntry monitoringEntry ) { Attribute monitoringValue = monitoringEntry . getAttribute ( attr . getAttributeName ( ) ) ; if ( attr . isNumeric ( ) && monitoringValue != _NULL ) { try { monitoringValue . parse ( ) . asLong ( ) ; return _BOOL ; } catch ( Throwable t ) { return _BOOL ; } } return _BOOL ; }
37404	public RouteHeader createRouteHeader ( Address address ) { if ( address == _NULL ) throw new NullPointerException ( _CHAR _NULL address arg _CHAR ) ; Route route = new Route ( ) ; route . setAddress ( address ) ; return route ; }
37425	public void postProcessCreate ( SSOToken token , String entryDN , Map attributes , int objectType ) throws AMPostCallBackException { }
37426	public static int parseUnsignedShort ( String lexicalXSDUnsignedShort ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseUnsignedShort ( lexicalXSDUnsignedShort ) ; }
37427	public static void deregisterExportTaskListener ( ExportTaskListener listener ) { directoryServer . exportTaskListeners . remove ( listener ) ; }
37446	public SignatureVisitor visitClassBound ( ) { return this ; }
37447	public ServletRegistration . Dynamic dynamicServletAdded ( Wrapper wrapper ) { Servlet s = wrapper . getServlet ( ) ; if ( s != _NULL && createdServlets . contains ( s ) ) { wrapper . setServletSecurityAnnotationScanRequired ( _BOOL ) ; } return new ApplicationServletRegistration ( wrapper , this ) ; }
37454	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s11_linear_no_tag_repository ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
37535	public ReplyToHeader createReplyToHeader ( Address address ) { if ( address == _NULL ) throw new NullPointerException ( _CHAR _NULL address _CHAR ) ; ReplyTo replyTo = new ReplyTo ( ) ; replyTo . setAddress ( address ) ; return replyTo ; }
37551	protected boolean accept ( XSLTVisitor visitor ) { return visitor . visitInstruction ( this ) ; }
37556	public static String read ( final String filename ) { try { return asString ( new FileInputStream ( new File ( filename ) ) , Charset . defaultCharset ( ) ) ; } catch ( IOException e ) { logger . warn ( _CHAR An error occurred while reading the file { } _CHAR , filename , e ) ; return _NULL ; } }
37561	public String toString ( ) { String s = ( ( getValueIsAdjusting ( ) ) ? _CHAR ~ _CHAR : _CHAR = _CHAR ) + value . toString ( ) ; return getClass ( ) . getName ( ) + _CHAR _CHAR + Integer . toString ( hashCode ( ) ) + _CHAR _CHAR + s ; }
37571	private void ensureOpen ( ) throws IOException { if ( in == _NULL ) { throw new IOException ( _CHAR Stream closed _CHAR ) ; } }
37576	public static boolean isTargetControlApplicable ( Aci aci , AciTargetMatchContext matchCtx ) { TargetControl targetControl = aci . getTargets ( ) . getTargetControl ( ) ; return targetControl != _NULL && targetControl . isApplicable ( matchCtx ) ; }
37584	@ Override public void write ( byte [ ] buffer ) throws IOException { write ( buffer , _NUM , buffer . length ) ; }
37643	private String generateCNonce ( ) { if ( secureRandom == _NULL ) { secureRandom = new SecureRandom ( ) ; } byte [ ] cnonceBytes = new byte [ _NUM ] ; secureRandom . nextBytes ( cnonceBytes ) ; return Base64 . encode ( cnonceBytes ) ; }
37681	public boolean isIndexSelected ( int index ) { return isSelected ( index ) ; }
37705	public TimeDescription createTimeDescription ( ) throws SdpException { TimeDescriptionImpl timeDescriptionImpl = new TimeDescriptionImpl ( ) ; TimeField timeImpl = new TimeField ( ) ; timeImpl . setZero ( ) ; timeDescriptionImpl . setTime ( timeImpl ) ; return timeDescriptionImpl ; }
37712	void elementDequeued ( ) { if ( count == _NUM ) queueIsEmpty ( ) ; else if ( takeIndex == _NUM ) takeIndexWrapped ( ) ; }
37755	private static DereferenceAliasesPolicy register ( final int intValue , final String name ) { final DereferenceAliasesPolicy t = new DereferenceAliasesPolicy ( intValue , name ) ; ELEMENTS [ intValue ] = t ; return t ; }
37792	public static boolean isLocationGranted ( Activity activity ) { int permissionCheck = ContextCompat . checkSelfPermission ( activity , permission ) ; return ( permissionCheck == PackageManager . PERMISSION_GRANTED ) ; }
37794	@ Override public void clear ( ) { if ( size != _NUM ) { Arrays . fill ( table , _NULL ) ; entryForNullKey = _NULL ; modCount ++ ; size = _NUM ; } }
37803	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
37865	@ Deprecated protected void drawMultiLineTextAppearance ( Rectangle rect , PdfFont font , int fontSize , String value , PdfFormXObject appearance ) { drawMultiLineTextAppearance ( rect , font , ( float ) fontSize , value , appearance ) ; }
37872	public static PdfAction createURI ( String uri ) { return createURI ( uri , _BOOL ) ; }
37880	@ Override protected void handleErrorFlush ( String output ) { handleErrorOutput ( output ) ; redirectErrPrintStream . flush ( ) ; }
37896	public static boolean isMiddleMouseButton ( MouseEvent anEvent ) { return ( ( anEvent . getModifiersEx ( ) & InputEvent . BUTTON2_DOWN_MASK ) != _NUM || anEvent . getButton ( ) == MouseEvent . BUTTON2 ) ; }
37908	public void repaint_all ( ) { work_frame . repaint ( ) ; for ( GuiSubWindowSavable cur_subwindow : permanent_subwindows ) cur_subwindow . repaint ( ) ; }
37928	public void onSaveInstanceState ( Bundle outState ) { Session . saveSession ( Session . getActiveSession ( ) , outState ) ; if ( pendingFacebookDialogCallId != _NULL ) { outState . putString ( DIALOG_CALL_ID_SAVE_KEY , pendingFacebookDialogCallId . toString ( ) ) ; } pendingFacebookDialogCallStore . saveInstanceState ( outState ) ; }
37933	protected PooledConnection create ( boolean incrementCounter ) { if ( incrementCounter ) size . incrementAndGet ( ) ; PooledConnection con = new PooledConnection ( getPoolProperties ( ) , this ) ; return con ; }
37961	public boolean isLocalServer ( String serverID ) { return localServerID . equals ( serverID ) ; }
37962	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s5_several_branches ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
37978	void reinitialize ( ) { table = _NULL ; entrySet = _NULL ; keySet = _NULL ; values = _NULL ; modCount = _NUM ; threshold = _NUM ; size = _NUM ; }
38008	public void mouseDragged ( MouseEvent event ) { }
38054	public String toPhrase ( ) { return toLowerUnderscore ( ) . replace ( _CHAR , _CHAR ) ; }
38077	private void assertThatCursorCanBeFullyReadFromStart ( DBCursor < Record < String , String >> cursor , int fromIndex , int endIndex ) throws Exception { assertThat ( cursor . getRecord ( ) ) . isNull ( ) ; assertThatCursorCanBeFullyRead ( cursor , fromIndex , endIndex ) ; }
38111	public boolean maintainHistory ( ) { return passwordPolicy . getPasswordHistoryCount ( ) > _NUM || passwordPolicy . getPasswordHistoryDuration ( ) > _NUM ; }
38112	protected boolean isGlobal ( ) { return _BOOL ; }
38130	boolean validate ( Set attrVals , String i18nFileName , boolean encodePassword ) throws SMSException { return validate ( attrVals , i18nFileName , encodePassword , Collections . EMPTY_MAP ) ; }
38159	public final PlaVectorInt negate ( ) { return new PlaVectorInt ( - v_x , - v_y ) ; }
38200	public void removeCellEditorListener ( CellEditorListener l ) { realEditor . removeCellEditorListener ( l ) ; }
38253	private void endArguments ( ) { if ( argumentStack % _NUM != _NUM ) { buf . append ( _CHAR ) ; } argumentStack /= _NUM ; }
38285	public void stateChanged ( ChangeEvent e ) { if ( e == _NULL ) { throw new NullPointerException ( ) ; } Object newModelValue = model . getValue ( ) ; firePropertyChange ( ACCESSIBLE_VALUE_PROPERTY , oldModelValue , newModelValue ) ; firePropertyChange ( ACCESSIBLE_TEXT_PROPERTY , _NULL , _NUM ) ; oldModelValue = newModelValue ; }
38286	public double board_to_user ( double p_value ) { return UnitMeasure . scale ( p_value * scale_factor , board_unit , user_unit ) ; }
38298	public static void sleep ( long ms ) { try { Thread . sleep ( ms ) ; } catch ( InterruptedException e ) { } }
38301	public boolean hasBeenExpanded ( ) { return hasBeenExpanded ; }
38326	private void forceTrustManagerInitialization ( ) { forceNonInteractive = _BOOL ; try { ci . initializeTrustManagerIfRequired ( ) ; } catch ( ArgumentException ae ) { logger . warn ( LocalizableMessage . raw ( _CHAR Error initializing trust store : _CHAR + ae , ae ) ) ; } forceNonInteractive = _BOOL ; }
38334	protected Digester createStopDigester ( ) { Digester digester = new Digester ( ) ; digester . setUseContextClassLoader ( _BOOL ) ; digester . addObjectCreate ( _CHAR Server _CHAR , _CHAR org . apache . catalina . core . StandardServer _CHAR , _CHAR className _CHAR ) ; digester . addSetProperties ( _CHAR Server _CHAR ) ; digester . addSetNext ( _CHAR Server _CHAR , _CHAR setServer _CHAR , _CHAR org . apache . catalina . Server _CHAR ) ; return ( digester ) ; }
38338	private boolean isCharStrong ( int chr ) { return ( STRONG_TEXT_FLAGS [ chr >> _NUM ] & ( _NUM << ( chr % _NUM ) ) ) != _NUM ; }
38406	public boolean checkError ( ) { OutputStream delegate = out ; if ( delegate == _NULL ) { return ioError ; } flush ( ) ; return ioError || delegate . checkError ( ) ; }
38412	public String toString ( ) { return ( toString ( MM , _CHAR mm _CHAR ) ) ; }
38429	public boolean isSuccessful ( ) { return AuthContext . Status . SUCCESS . equals ( authContext . getStatus ( ) ) ; }
38437	@ Override public void nextBytes ( byte [ ] bytes ) { if ( ! OpenSslCryptoRandomNative . nextRandBytes ( bytes ) ) { throw new IllegalArgumentException ( _CHAR The nextRandBytes method failed _CHAR ) ; } }
38450	@ Override public boolean iTableExists ( Index index ) { logger . info ( _CHAR Checking for existance of iTable for index : '' + index . toString ( ) ) ; return iTableExists ( Utils . calculateITableName ( index ) ) ; }
38451	boolean notificationEnabled ( ) { return notificationEnabledFlag ; }
38479	private static int unsignedToSigned ( int unsigned , int size ) { if ( ( unsigned & ( _NUM << size - _NUM ) ) != _NUM ) { unsigned =- _NUM * ( ( _NUM << size - _NUM ) - ( unsigned & ( ( _NUM << size - _NUM ) - _NUM ) ) ) ; } return unsigned ; }
38482	public static java . util . Calendar parseDate ( String lexicalXSDDate ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseDate ( lexicalXSDDate ) ; }
38529	private void initializeExtendedOperations ( ) throws ConfigException , InitializationException { extendedOperationConfigManager = new ExtendedOperationConfigManager ( serverContext ) ; extendedOperationConfigManager . initializeExtendedOperationHandlers ( ) ; }
38551	protected void configureWeld ( Weld weld ) { }
38599	public String toString ( ) { return super . toString ( ) + _CHAR hasBeenDone : _CHAR + hasBeenDone + _CHAR alive : _CHAR + alive ; }
38651	public final boolean hasFatal ( ) { return this . hasFatal ; }
38674	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public Enumeration < Permission > elements ( ) { synchronized ( this ) { return Collections . enumeration ( ( List < Permission > ) ( List ) perms ) ; } }
38677	final void nextStream ( ) throws IOException { if ( in != _NULL ) { in . close ( ) ; } if ( e . hasMoreElements ( ) ) { in = ( InputStream ) e . nextElement ( ) ; if ( in == _NULL ) throw new NullPointerException ( ) ; } else in = _NULL ; }
38684	private CSN generateCSN ( PluginOperation operation ) { return pendingChanges . putLocalOperation ( operation ) ; }
38685	public UnsupportedHeader createUnsupportedHeader ( String optionTag ) throws ParseException { if ( optionTag == _NULL ) throw new NullPointerException ( optionTag ) ; Unsupported unsupported = new Unsupported ( ) ; unsupported . setOptionTag ( optionTag ) ; return unsupported ; }
38698	public boolean isAccessibleColumnSelected ( int c ) { return _BOOL ; }
38709	void createMap ( Thread t , T firstValue ) { t . threadLocals = new ThreadLocalMap ( this , firstValue ) ; }
38711	public static void registerExportTaskListener ( ExportTaskListener listener ) { directoryServer . exportTaskListeners . addIfAbsent ( listener ) ; }
38717	public long nextLongUTF8 ( ) throws DataFormatException { return Long . valueOf ( nextString ( ) ) ; }
38720	public NodeList nodelist ( ) throws javax . xml . transform . TransformerException { return ( m_origObj instanceof NodeList ) ? ( NodeList ) m_origObj : super . nodelist ( ) ; }
38757	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ hgap = _CHAR + hgap + _CHAR , vgap = _CHAR + vgap + _CHAR ] _CHAR ; }
38800	public static void fill ( long [ ] array , int start , int end , long value ) { Arrays . checkStartAndEnd ( array . length , start , end ) ; for ( int i = start ; i < end ; i ++ ) { array [ i ] = value ; } }
38828	public boolean containsObject ( NSObject obj ) { return set . contains ( obj ) ; }
38876	boolean isSubjectResultCached ( SSOToken token ) throws SSOException { return ( resultCache . get ( token . getTokenID ( ) . toString ( ) ) != _NULL ) ; }
38896	private void broadcastUnlockRequest ( ) { final Intent intent = new Intent ( ACTION_DISSMISS_UNLOCK ) ; LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
38973	public static void writeWord ( OutputStream os , int v ) throws IOException { os . write ( v & _NUM ) ; os . write ( v >> > _NUM & _NUM ) ; }
39000	public final boolean owns ( ConditionObject condition ) { return condition . isOwnedBy ( this ) ; }
39007	public static CancelExtendedRequest newCancelExtendedRequest ( final int requestID ) { return new CancelExtendedRequestImpl ( requestID ) ; }
39013	public static ByteBuffer toBuffer ( String spacedHex ) { return ByteBuffer . wrap ( toByteArray ( spacedHex ) ) ; }
39041	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return m_arg0 . execute ( xctxt ) . bool ( ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
39047	public void startElement ( String qName ) throws SAXException { if ( m_state != _NULL ) { m_state . resetState ( getTransformer ( ) ) ; } if ( m_tracer != _NULL ) super . fireStartElem ( qName ) ; }
39066	public final void fatal ( Object message , Throwable t ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_FATAL ) ) { log ( SimpleLog . LOG_LEVEL_FATAL , message , t ) ; } }
39089	public static long parseUnsignedInt ( String lexicalXSDUnsignedInt ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseUnsignedInt ( lexicalXSDUnsignedInt ) ; }
39106	@ NeovimHandler ( _CHAR IntellijOnWrite _CHAR ) public void intellijOnWrite ( String path ) { ApplicationManager . getApplication ( ) . invokeAndWait ( _NULL , ModalityState . any ( ) ) ; }
39193	public boolean hasAccessType ( EnumAccessType accessType ) { return perm . hasAccessType ( accessType ) ; }
39212	public String toString ( ) { return attrType ; }
39220	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s5_several_branches ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
39259	public SubjectHeader createSubjectHeader ( String subject ) throws ParseException { if ( subject == _NULL ) throw new NullPointerException ( _CHAR _NULL subject arg _CHAR ) ; Subject s = new Subject ( ) ; s . setSubject ( subject ) ; return s ; }
39291	public ProxyRequireHeader createProxyRequireHeader ( String optionTag ) throws ParseException { if ( optionTag == _NULL ) throw new NullPointerException ( _CHAR bad optionTag arg _CHAR ) ; ProxyRequire p = new ProxyRequire ( ) ; p . setOptionTag ( optionTag ) ; return p ; }
39333	private String formatMessage ( String message , Object ... args ) { if ( args == _NULL || args . length == _NUM ) { return message ; } return MessageFormatter . arrayFormat ( message , args ) . getMessage ( ) ; }
39376	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return left . lessThan ( right ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
39390	private void ensureOpen ( ) throws IOException { if ( buf == _NULL ) throw new IOException ( _CHAR Stream closed _CHAR ) ; }
39421	public static List < Foo > findByUuid ( java . lang . String uuid ) { return getPersistence ( ) . findByUuid ( uuid ) ; }
39497	private void toString ( StringBuilder buffer ) { buffer . append ( _CHAR Modification ( _CHAR ) . append ( modificationType ) . append ( _CHAR , _CHAR ) . append ( attribute ) ; }
39506	public static List < VerificationException > verifyCertificates ( Certificate [ ] certs , KeyStore keystore , Collection < CRL > crls ) { return verifyCertificates ( certs , keystore , crls , DateTimeUtil . getCurrentTimeCalendar ( ) ) ; }
39524	public final boolean owns ( ConditionObject condition ) { return condition . isOwnedBy ( this ) ; }
39534	public int handshake ( boolean read , boolean write ) throws IOException { return _NUM ; }
39545	private static int skipWhiteSpace ( BitArray row ) throws NotFoundException { int width = row . getSize ( ) ; int endStart = row . getNextSet ( _NUM ) ; if ( endStart == width ) { throw NotFoundException . getNotFoundInstance ( ) ; } return endStart ; }
39547	public ServerHeader createServerHeader ( List product ) throws ParseException { if ( product == _NULL ) throw new NullPointerException ( _CHAR _NULL productList arg _CHAR ) ; Server server = new Server ( ) ; server . setProduct ( product ) ; return server ; }
39549	public static boolean isFieldReadOnly ( CoreTokenField field ) { return field . equals ( CoreTokenField . TOKEN_TYPE ) || field . equals ( CoreTokenField . TOKEN_ID ) ; }
39575	public boolean hasNestedTransaction ( ) { return mTransactionStack != _NULL && mTransactionStack . mParent != _NULL ; }
39624	private void sumWithCompensation ( double value ) { double tmp = value - sumCompensation ; double velvel = sum + tmp ; sumCompensation = ( velvel - sum ) - tmp ; sum = velvel ; }
39626	public static void deregisterPasswordGenerator ( DN configEntryDN ) { directoryServer . passwordGenerators . remove ( configEntryDN ) ; }
39628	public void undo ( ) { super . undo ( ) ; this . object . restoreState ( preState ) ; }
39648	public void reset ( ) { m_next = _NUM ; }
39655	public String toBASE64EncodedString ( ) throws FSMsgException { return Base64 . encode ( this . toXMLString ( ) . getBytes ( ) ) ; }
39661	public static void start ( ) { if ( INSTANCE == _NULL ) { INSTANCE = new TimeThread ( ) ; } }
39665	public TimeStampHeader createTimeStampHeader ( float timeStamp ) throws InvalidArgumentException { if ( timeStamp < _NUM ) throw new IllegalArgumentException ( _CHAR illegal timeStamp _CHAR ) ; TimeStamp t = new TimeStamp ( ) ; t . setTimeStamp ( timeStamp ) ; return t ; }
39746	@ AfterClass public void afterClass ( ) throws Exception { DeleteOperation deleteOperation = getRootConnection ( ) . processDelete ( DN . valueOf ( _CHAR cn = Privileged User , o = test _CHAR ) ) ; assertEquals ( deleteOperation . getResultCode ( ) , ResultCode . SUCCESS ) ; deleteOperation = getRootConnection ( ) . processDelete ( DN . valueOf ( _CHAR cn = Unprivileged JMX User , o = test _CHAR ) ) ; assertEquals ( deleteOperation . getResultCode ( ) , ResultCode . SUCCESS ) ; }
39760	public static void registerFamily ( String familyName , String fullName , String path ) { FontProgramFactory . registerFontFamily ( familyName , fullName , path ) ; }
39786	public boolean isDescendantOf ( final ObjectClass objectClass ) { for ( final ObjectClass sup : superiorClasses ) { if ( sup . equals ( objectClass ) || sup . isDescendantOf ( objectClass ) ) { return _BOOL ; } } return _BOOL ; }
39806	private static StatelessSession extractStatelessSession ( SSOToken token ) throws SSOException { if ( token instanceof StatelessSSOToken ) { return ( ( StatelessSSOToken ) token ) . getSession ( ) ; } else { throw new SSOException ( _CHAR Not a stateless SSOToken _CHAR ) ; } }
39828	@ Override public void onStateNotSaved ( ) { super . onStateNotSaved ( ) ; }
39847	public boolean is_hilight_routing_obstacle ( ) { return hilight_routing_obstacle ; }
39851	public boolean stopCellEditing ( ) { fireEditingStopped ( ) ; return _BOOL ; }
39853	public boolean hasQueryFilter ( ) { return queryFilter != _NULL ; }
39878	public static int parseInt ( String lexicalXSDInt ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseInt ( lexicalXSDInt ) ; }
39913	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s9_empty_repository ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
39917	final boolean tryMatchData ( ) { Object x = item ; if ( x != _NULL && x != this && casItem ( x , _NULL ) ) { LockSupport . unpark ( waiter ) ; return _BOOL ; } return _BOOL ; }
39956	public static List < Foo > findByUuid ( java . lang . String uuid ) { return getPersistence ( ) . findByUuid ( uuid ) ; }
39969	public void deleteField ( final AsfFieldKey fieldKey ) { super . deleteField ( fieldKey . getFieldName ( ) ) ; }
39973	public static float parseFloat ( String lexicalXSDFloat ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseFloat ( lexicalXSDFloat ) ; }
39976	public void trace ( Object message ) { log ( Level . FINEST , String . valueOf ( message ) , _NULL ) ; }
40010	public void printStackTrace ( PrintWriter printWriter ) { super . printStackTrace ( printWriter ) ; }
40021	public boolean hasMember ( Guid guid ) throws UMSException { Principal principal = getPrincipal ( ) ; if ( principal == _NULL ) { throw new IllegalArgumentException ( i18n . getString ( IUMSConstants . BAD_PRINCIPAL_HDL ) ) ; } PersistentObject member = UMSObject . getObject ( principal , guid ) ; return hasMember ( member ) ; }
40032	public void reset ( ) { currentPosition = _NUM ; }
40049	@ Deprecated public boolean removeAttribute ( Attribute attribute , List < ByteString > missingValues ) { return removeAttribute ( attribute , ( Collection < ByteString > ) missingValues ) ; }
40055	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
40077	FormatToken parseFormatToken ( int offset ) { this . startIndex = offset ; this . i = offset ; return parseArgumentIndexAndFlags ( new FormatToken ( ) ) ; }
40118	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s6_matching_and_non_matching_versions_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
40147	private int finishLoginModule ( int state ) throws AuthLoginException { if ( authenticationContext . getStatus ( ) . equals ( AuthContext . Status . IN_PROGRESS ) ) { return processError ( bundle . getString ( _CHAR invalidLoginState _CHAR ) , _CHAR SAML2 : : injectCallbacks ( ) : Authentication Module - invalid login state _CHAR ) ; } return stepLogin ( _NULL , state ) ; }
40182	public String errorsToString ( ) { final String idList = ! failedServers . isEmpty ( ) ? failedServers . toString ( ) : _CHAR none _CHAR ; return _CHAR hasTimeout : _CHAR + ( hasTimeout ? _CHAR yes _CHAR : _CHAR no _CHAR ) + _CHAR , _CHAR + _CHAR hasWrongStatus : _CHAR + ( hasWrongStatus ? _CHAR yes _CHAR : _CHAR no _CHAR ) + _CHAR , _CHAR + _CHAR hasReplayError : _CHAR + ( hasReplayError ? _CHAR yes _CHAR : _CHAR no _CHAR ) + _CHAR , _CHAR + _CHAR concerned server ids : _CHAR + idList ; }
40183	public static void explainFallback ( Activity activity , String message ) { Toast . makeText ( activity , message , Toast . LENGTH_LONG ) . show ( ) ; }
40185	boolean inSubroutine ( final long id ) { if ( ( status & Label . VISITED ) != _NUM ) { return ( srcAndRefPositions [ ( int ) ( id >> > _NUM ) ] & ( int ) id ) != _NUM ; } return _BOOL ; }
40212	public JsonValue build ( ) { return new JsonValue ( content ) ; }
40252	protected static Vector convertToVector ( Object [ ] anArray ) { if ( anArray == _NULL ) { return _NULL ; } Vector < Object > v = new Vector < Object > ( anArray . length ) ; for ( Object o : anArray ) { v . addElement ( o ) ; } return v ; }
40273	protected static Vector convertToVector ( final Object [ ] anArray ) { if ( anArray == _NULL ) { return _NULL ; } final Vector v = new Vector ( anArray . length ) ; for ( final Object element : anArray ) { v . addElement ( element ) ; } return v ; }
40283	public int nearest_target_layer ( ) { if ( nearest_target_item == _NULL ) return layer_active_no ; int first_layer = nearest_target_item . first_layer ( ) ; int last_layer = nearest_target_item . last_layer ( ) ; if ( layer_active_no < first_layer ) { return first_layer ; } else if ( layer_active_no > last_layer ) { return last_layer ; } else { return layer_active_no ; } }
40301	public Boolean isMustUnderstand ( ) { return mustUnderstand ; }
40304	public void start ( int scenario ) { this . scenario = scenario ; if ( scenario == SENDER_RS_SCENARIO ) { return ; } start ( ) ; }
40306	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , java . io . IOException { processRequest ( request , response ) ; }
40403	private void uninstallPasswordStorageScheme ( DN configEntryDN ) { PasswordStorageScheme scheme = storageSchemes . remove ( configEntryDN ) ; if ( scheme != _NULL ) { DirectoryServer . deregisterPasswordStorageScheme ( configEntryDN ) ; scheme . finalizePasswordStorageScheme ( ) ; } }
40409	public static IssuingDistributionPoint decode ( byte [ ] encoding ) throws IOException { IssuingDistributionPoint idp = ( IssuingDistributionPoint ) ASN1 . decode ( encoding ) ; idp . encoding = encoding ; return idp ; }
40433	public RuleNet new_net ( ) { int net_idx = net_list . size ( ) + _NUM ; String net_name = _CHAR net # _CHAR + net_idx ; return add ( net_name , _NUM , _BOOL ) ; }
40497	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , java . io . IOException { processRequest ( request , response ) ; }
40498	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s5_several_branches ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
40500	public static int countDots ( final String s ) { int count = _NUM ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) == _CHAR ) { count ++ ; } } return count ; }
40522	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return new XNumber ( getArg0AsString ( xctxt ) . length ( ) ) ; }
40530	public String toString ( ) { String classname = Util . getUnqualifiedName ( getClass ( ) ) ; return ( ref == _NULL ) ? classname : classname + _CHAR [ _CHAR + ref . remoteToString ( ) + _CHAR ] _CHAR ; }
40546	public String boxedTypeName ( String typeName ) { return LanguageUtil . getRename ( typeName , BOXED_TYPE_MAP ) ; }
40552	void reRegisterRemotePolicyListener ( SSOToken appToken ) throws PolicyException { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR PolicyEvaluator . reRegisterRemotePolicyListener ( ) : _CHAR + _CHAR entering _CHAR ) ; } resourceResultCache . addRemotePolicyListener ( appSSOToken , serviceName , policyProperties . getNotificationURL ( ) , _BOOL ) ; resourceResultCache . clearCachedDecisionsForService ( serviceName ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR PolicyEvaluator . reRegisterRemotePolicyListener ( ) : _CHAR + _CHAR returning _CHAR ) ; } }
40558	protected boolean isLog4JAvailable ( ) { return isLogLibraryAvailable ( _CHAR Log4J _CHAR , LOGGING_IMPL_LOG4J_LOGGER ) ; }
40560	public void mousePressed ( MouseEvent e ) { getHandler ( ) . mousePressed ( e ) ; }
40609	public E peek ( ) throws EmptyStackException { int n = size ( ) ; if ( n <= _NUM ) { throw new EmptyStackException ( ) ; } else { return get ( n - _NUM ) ; } }
40661	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s1_linear_with_only_annotated_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
40702	public static byte [ ] decode ( String data ) { ByteArrayOutputStream bOut = new ByteArrayOutputStream ( ) ; try { encoder . decode ( data , bOut ) ; } catch ( Exception e ) { throw new DecoderException ( _CHAR exception decoding Hex string : _CHAR + e . getMessage ( ) , e ) ; } return bOut . toByteArray ( ) ; }
40776	public static void close ( Closeable closeable ) { if ( closeable == _NULL ) { return ; } try { closeable . close ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e . getMessage ( ) , e ) ; } }
40805	public void addPagedListResponseImports ( ModelTypeTable typeTable ) { }
40817	public String encodeURL ( String url , short encodingScheme , boolean escape , Session session ) { return encodeSessionURL ( url , encodingScheme , escape , sessionCookies . getCookieName ( ) , session ) ; }
40818	public InReplyToHeader createInReplyToHeader ( String callId ) throws ParseException { if ( callId == _NULL ) throw new NullPointerException ( _CHAR _NULL callId arg _CHAR ) ; InReplyTo inReplyTo = new InReplyTo ( ) ; inReplyTo . setCallId ( callId ) ; return inReplyTo ; }
40826	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { submitCycle = _BOOL ; bSearchForRealm = _BOOL ; forwardTo ( ) ; }
40839	public static void deregisterPasswordValidator ( DN configEntryDN ) { directoryServer . passwordValidators . remove ( configEntryDN ) ; }
40846	public static AffinityControl newControl ( final boolean isCritical ) { byte [ ] randomValue = new byte [ _NUM ] ; ThreadLocalRandom . current ( ) . nextBytes ( randomValue ) ; return new AffinityControl ( ByteString . valueOfBytes ( randomValue ) , isCritical ) ; }
40866	public String toString ( ) { return delegate . toString ( ) ; }
40916	public MinExpiresHeader createMinExpiresHeader ( int minExpires ) throws InvalidArgumentException { if ( minExpires < _NUM ) throw new InvalidArgumentException ( _CHAR bad minExpires _CHAR + minExpires ) ; MinExpires min = new MinExpires ( ) ; min . setExpires ( minExpires ) ; return min ; }
40936	public NodeList convertToNodeset ( ) { if ( m_obj instanceof NodeList ) return ( NodeList ) m_obj ; else return new org . apache . xml . dtm . ref . DTMNodeList ( asNodeIterator ( ) ) ; }
40958	@ Override public List < Foo > findByUuid ( String uuid ) { return findByUuid ( uuid , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
40974	public boolean includesSystemIndex ( ) { for ( String index : rebuildList ) { if ( _CHAR dn2id _CHAR . equalsIgnoreCase ( index ) || _CHAR dn2uri _CHAR . equalsIgnoreCase ( index ) ) { return _BOOL ; } } return _BOOL ; }
40988	public void fatal ( Object message ) { log ( Level . SEVERE , String . valueOf ( message ) , _NULL ) ; }
40991	public AttributeFilter includeAttribute ( final AttributeDescription attributeDescription ) { allocatedRequestedAttributes ( ) ; requestedAttributes . put ( attributeDescription , attributeDescription ) ; return this ; }
41024	static boolean isAppXml ( String mime ) { return mime != _NULL && ( mime . equals ( _CHAR application / xml _CHAR ) || mime . equals ( _CHAR application / xml - dtd _CHAR ) || mime . equals ( _CHAR application / xml - external - parsed - entity _CHAR ) || mime . startsWith ( _CHAR application / _CHAR ) && mime . endsWith ( _CHAR + xml _CHAR ) ) ; }
41056	public final boolean owns ( ConditionObject condition ) { return condition . isOwnedBy ( this ) ; }
41063	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
41066	public void addPageStreamingDescriptorImports ( ModelTypeTable typeTable ) { }
41068	public final void trace ( Object message , Throwable t ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_TRACE ) ) { log ( SimpleLog . LOG_LEVEL_TRACE , message , t ) ; } }
41108	public NodeSetDTM mutableNodeset ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_MUTABLENODELIST , new Object [ ] { getTypeString ( ) } ) ; return ( NodeSetDTM ) m_obj ; }
41159	public static String formatToRFC ( String dn ) { return DN . valueOf ( dn ) . toString ( ) . toLowerCase ( ) ; }
41205	public static int hash32 ( final byte [ ] data , int length ) { return hash32 ( data , length , _NUM ) ; }
41236	public static boolean isSiteExist ( SSOToken ssoToken , String siteName ) throws SMSException , SSOException { Set sites = getSites ( ssoToken ) ; return sites . contains ( siteName ) ; }
41237	public void loadState ( ) { SearchResultEntry stateEntry = searchBaseEntry ( ) ; if ( stateEntry == _NULL ) { stateEntry = searchConfigEntry ( ) ; } if ( stateEntry != _NULL ) { updateStateFromEntry ( stateEntry ) ; } checkAndUpdateServerState ( ) ; }
41241	public byte [ ] encodePassword ( String password ) { return password == _NULL ? _NULL : password . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ; }
41273	public int capacity ( ) { return value . length ; }
41282	public static Polynomial25519 square ( Polynomial25519 a ) { Polynomial25519 output = new Polynomial25519 ( ) ; output . c = Polynomial25519 . innerSquare ( a . c ) ; output . reduceDegree ( ) ; output . reduceCoefficients ( ) ; return output ; }
41292	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
41312	public static PdfAction createJavaScript ( String javaScript ) { return new PdfAction ( ) . put ( PdfName . S , PdfName . JavaScript ) . put ( PdfName . JS , new PdfString ( javaScript ) ) ; }
41375	public void printStackTrace ( PrintStream printStream ) { super . printStackTrace ( printStream ) ; }
41378	public static ValueExp minus ( ValueExp value1 , ValueExp value2 ) { return new BinaryOpValueExp ( MINUS , value1 , value2 ) ; }
41382	public void push ( Object object ) { if ( stack . size ( ) == _NUM ) { root = object ; } stack . push ( object ) ; }
41387	private void pop ( final int elements ) { if ( outputStackTop >= elements ) { outputStackTop -= elements ; } else { owner . inputStackTop -= elements - outputStackTop ; outputStackTop = _NUM ; } }
41403	public static boolean isAuthorized ( Object credential ) { return authorizer . isAuthorized ( credential ) ; }
41416	public void push ( final double value ) { long bits = Double . doubleToLongBits ( value ) ; if ( bits == _NUM || bits == _NUM ) { mv . visitInsn ( Opcodes . DCONST_0 + ( int ) value ) ; } else { mv . visitLdcInsn ( value ) ; } }
41462	public boolean hasDetails ( String sku ) { return mSkuMap . containsKey ( sku ) ; }
41465	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
41496	public static void deregisterIdentityMapper ( DN configEntryDN ) { directoryServer . identityMappers . remove ( configEntryDN ) ; }
41545	private String fetchCharsetFromCache ( Client client , Locale loc ) { Map cCache = ( Map ) charsetCache . get ( client . getClientType ( ) ) ; String val = _NULL ; if ( cCache != _NULL ) { val = ( String ) cCache . get ( loc ) ; } return val ; }
41553	public ByteArrayBuilder appendByteArray ( byte [ ] bytes ) { builder . appendBytes ( bytes ) ; return this ; }
41565	private final void releaseDTMXRTreeFrags ( ) { if ( m_DTMXRTreeFrags == _NULL ) { return ; } final Iterator iter = ( m_DTMXRTreeFrags . values ( ) ) . iterator ( ) ; while ( iter . hasNext ( ) ) { DTMXRTreeFrag frag = ( DTMXRTreeFrag ) iter . next ( ) ; frag . destruct ( ) ; iter . remove ( ) ; } m_DTMXRTreeFrags = _NULL ; }
41576	public final void debug ( Object message ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_DEBUG ) ) { log ( SimpleLog . LOG_LEVEL_DEBUG , message , _NULL ) ; } }
41605	public void appendInt ( int val ) { buf [ pos ++ ] = ( byte ) ( ( val >> > _NUM ) & _NUM ) ; buf [ pos ++ ] = ( byte ) ( val & _NUM ) ; }
41626	public String map ( String typeName ) { return typeName ; }
41635	public static IOFileFilter ageFileFilter ( Date cutoffDate , boolean acceptOlder ) { return new AgeFileFilter ( cutoffDate , acceptOlder ) ; }
41654	public int handshake ( ) throws IOException { return _NUM ; }
41689	public boolean equals ( Object obj ) { if ( this == obj ) return _BOOL ; if ( obj instanceof ECFieldFp ) { return ( p . equals ( ( ( ECFieldFp ) obj ) . p ) ) ; } return _BOOL ; }
41752	public boolean acceptFirstLine ( String firstLine ) { if ( firstlineMatcher == _NULL ) return _BOOL ; return firstLine != _NULL && firstlineMatcher . reset ( firstLine ) . matches ( ) ; }
41813	public SupportedHeader createSupportedHeader ( String optionTag ) throws ParseException { if ( optionTag == _NULL ) throw new NullPointerException ( _CHAR _NULL optionTag arg _CHAR ) ; Supported supported = new Supported ( ) ; supported . setOptionTag ( optionTag ) ; return supported ; }
41830	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return left . greaterThan ( right ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
41868	public boolean isScriptFriendly ( ) { return scriptFriendly ; }
41933	public boolean isIs ( ) { return ( this . is ) ; }
41965	public boolean isNasAssigned ( ) { return networkNumber == UN_NUMBERED ; }
41968	@ Override public List < Foo > findByField2 ( boolean field2 ) { return findByField2 ( field2 , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
41978	public static ToolTipManager sharedInstance ( ) { Object value = SwingUtilities . appContextGet ( TOOL_TIP_MANAGER_KEY ) ; if ( value instanceof ToolTipManager ) { return ( ToolTipManager ) value ; } ToolTipManager manager = new ToolTipManager ( ) ; SwingUtilities . appContextPut ( TOOL_TIP_MANAGER_KEY , manager ) ; return manager ; }
41989	public boolean isShootingFireball ( ) { if ( shootFireball ) { shootFireball = _BOOL ; return _BOOL ; } return _BOOL ; }
42000	public ProxyAuthenticateHeader createProxyAuthenticateHeader ( String scheme ) throws ParseException { if ( scheme == _NULL ) throw new NullPointerException ( _CHAR bad scheme arg _CHAR ) ; ProxyAuthenticate p = new ProxyAuthenticate ( ) ; p . setScheme ( scheme ) ; return p ; }
42009	public boolean isStrikeout ( ) { return strikeout ; }
42065	public void changedUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { super . changedUpdate ( e , a , f ) ; synchronized ( this ) { state |= RELOAD_FLAG | RELOAD_IMAGE_FLAG ; } preferenceChanged ( _NULL , _BOOL , _BOOL ) ; }
42118	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s5_several_branches ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
42156	private Entry createTestEntry ( AttributeType type , String value ) { String [ ] values = new String [ ] { value } ; return createTestEntry ( type , values ) ; }
42217	@ Override public Enumeration < Permission > elements ( ) { return perms . elements ( ) ; }
42221	private boolean hasPort ( List < ServicePort > ports , ServicePort port ) { for ( ServicePort aPort : ports ) { if ( Objects . equals ( port . getPort ( ) , aPort . getPort ( ) ) ) { return _BOOL ; } } return _BOOL ; }
42284	public static PasswordPolicyRequestControl newControl ( final boolean isCritical ) { return isCritical ? CRITICAL_INSTANCE : NONCRITICAL_INSTANCE ; }
42320	@ NonNull public static UpdateDispatcher toAgeraUpdateDispatcher ( @ NonNull Subject < Object , ? > rxSubject ) { return new RxSubjectAsUpdateDispatcher ( rxSubject ) ; }
42323	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
42324	public boolean checkError ( ) { Writer delegate = out ; if ( delegate == _NULL ) { return ioError ; } flush ( ) ; return ioError || delegate . checkError ( ) ; }
42332	protected final boolean isListState ( ) { return stateTextTypes . charAt ( state ) == _CHAR ; }
42341	public String mapFieldName ( String owner , String name , String desc ) { return name ; }
42355	public void javacError ( JavacErrorDetail [ ] javacErrors ) throws JasperException { errHandler . javacError ( javacErrors ) ; }
42365	public boolean isSelected ( ) { return getModel ( ) . isSelected ( ) ; }
42386	public static ObjectPropertyMapper object ( ) { return new ObjectPropertyMapper ( ) ; }
42402	public final boolean equals ( Object anObject ) { if ( anObject instanceof AWTKeyStroke ) { AWTKeyStroke ks = ( AWTKeyStroke ) anObject ; return ( ks . keyChar == keyChar && ks . keyCode == keyCode && ks . onKeyRelease == onKeyRelease && ks . modifiers == modifiers ) ; } return _BOOL ; }
42419	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s5_several_branches ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
42445	public void dumpResourceConfigs ( Writer writer , boolean showKeys ) throws IOException { try ( AutoCloseableCsvWriter csvWriter = new AutoCloseableCsvWriter ( writer ) ) { csvWriter . writeNext ( CONFIGS_COLUMNS ) ; for ( TypeChunk typeChunk : getTypeChunksBySparsity ( ) ) { csvWriter . writeNext ( dumpResourceConfig ( typeChunk , showKeys ) ) ; } } }
42450	public ListSelectionListener createListSelectionListener ( JFileChooser fc ) { return super . createListSelectionListener ( fc ) ; }
42452	public void reset ( ) { m_next = _NUM ; }
42462	private void registerHandlerWithPLLClient ( PolicyNotificationHandler handler ) { try { PLLClient . addNotificationHandler ( POLICY_SERVICE_ID_FOR_NAMING , handler ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ResourceResultCache . '' + _CHAR registerHandlerWithPLLClient ( ) : _CHAR + _CHAR registered notification handler _CHAR ) ; } } catch ( AlreadyRegisteredException ae ) { if ( debug . warningEnabled ( ) ) { debug . message ( _CHAR ResourceResultCache . '' + _CHAR registerHandlerWithPLLClient ( ) : _CHAR + _CHAR AlreadyRegisteredException _CHAR , ae ) ; } } }
42485	public boolean isReturnedByDefault ( ) { return returnByDefault ; }
42495	@ NonNull public static Subject < Object , Object > toRxSubject ( @ NonNull UpdateDispatcher ageraUpdateDispatcher ) { return new UpdateDispatcherAsSubject ( ageraUpdateDispatcher ) ; }
42515	public static void handleException ( String emsg ) { new Exception ( ) . printStackTrace ( ) ; System . err . println ( _CHAR Unexepcted INTERNAL ERROR ! ! _CHAR ) ; System . err . println ( emsg ) ; throw new RuntimeException ( emsg ) ; }
42535	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { bSearchForRealm = _BOOL ; forwardTo ( ) ; }
42537	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
42606	public final boolean hasConflict ( DocumentBuilderSetting other ) { if ( other == _NULL ) { throw new NullPointerException ( _CHAR other _CHAR ) ; } if ( other == this ) { return _BOOL ; } return strategy . hasConflict ( other . strategy ) ; }
42630	public String endTblDataActionDefaultHrefDisplay ( ChildContentDisplayEvent event ) { String lbl = ( String ) tblModel . getValue ( TBL_DATA_ACTION_DEFAULT_LABEL ) ; return ( ( lbl != _NULL ) && ( lbl . length ( ) > _NUM ) ) ? event . getContent ( ) : _CHAR _CHAR ; }
42635	public SAML2ConfigBuilder tokenLifetimeInSeconds ( long lifetimeInSeconds ) { this . tokenLifetimeInSeconds = lifetimeInSeconds ; return this ; }
42645	public static String formatMessage ( String formatStr , Object obj1 ) { Object arr [ ] = new Object [ _NUM ] ; arr [ _NUM ] = obj1 ; return MessageFormat . format ( formatStr , arr ) ; }
42653	public synchronized BukkitTask runTaskLater ( Plugin plugin , long delay ) throws IllegalArgumentException , IllegalStateException { checkState ( ) ; return setupId ( Bukkit . getScheduler ( ) . runTaskLater ( plugin , ( Runnable ) this , delay ) ) ; }
42787	protected void threadStart ( ) { if ( thread != _NULL ) return ; if ( backgroundProcessorDelay <= _NUM ) return ; threadDone = _BOOL ; String threadName = _CHAR ContainerBackgroundProcessor [ _CHAR + toString ( ) + _CHAR ] _CHAR ; thread = new Thread ( new ContainerBackgroundProcessor ( ) , threadName ) ; thread . setDaemon ( _BOOL ) ; thread . start ( ) ; }
42861	public static String [ ] chars ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . split ( _CHAR _CHAR ) ; }
42906	private boolean is_legal ( String p_string ) { if ( p_string == _NULL ) { System . out . println ( _CHAR IdentifierType . is_legal : p_string is _NULL _CHAR ) ; return _BOOL ; } for ( int i = _NUM ; i < reserved_chars . length ; ++ i ) { if ( p_string . contains ( reserved_chars [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
42912	public void deleteFavorite ( ) { FmRadioStation . updateStationToDb ( mContext , mDlgStationName , FmRadioStation . STATION_TYPE_SEARCHED , mDlgStationFreq ) ; mAdapter . notifyDataSetChanged ( ) ; }
42920	public WorldCreator type ( WorldType type ) { this . type = type ; return this ; }
42930	public boolean isInheritedFromRDNCollective ( ) { return this . isInheritedFromRDNCollective ; }
42951	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s3_linear_with_snapshots_light_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
42958	public boolean isExists ( ) { return exists ; }
43006	private String retrieveFullID ( String resourceID , JsonValue value ) { String id = value . get ( _CHAR _id _CHAR ) . required ( ) . asString ( ) ; return retrieveFullID ( resourceID , id ) ; }
43017	protected PublicKey engineGeneratePublic ( KeySpec keySpec ) throws InvalidKeySpecException { if ( keySpec != _NULL ) { if ( keySpec instanceof DSAPublicKeySpec ) { return new DSAPublicKeyImpl ( ( DSAPublicKeySpec ) keySpec ) ; } if ( keySpec instanceof X509EncodedKeySpec ) { return new DSAPublicKeyImpl ( ( X509EncodedKeySpec ) keySpec ) ; } } throw new InvalidKeySpecException ( _CHAR _CHAR is neither DSAPublicKeySpec nor X509EncodedKeySpec _CHAR ) ; }
43025	public static void sort ( byte [ ] array , int start , int end ) { DualPivotQuicksort . sort ( array , start , end ) ; }
43063	public static String toUpperCase ( String value ) { return value != _NULL ? value . toUpperCase ( ) : _NULL ; }
43077	protected boolean isFile ( Object value ) { return value != _NULL && ( value instanceof File || value instanceof byte [ ] ) ; }
43089	public static String removeBinaryAttributeFlag ( String attributeName ) { if ( isBinaryAttribute ( attributeName ) ) { return attributeName . substring ( _NUM , attributeName . lastIndexOf ( BINARY_FLAG ) ) ; } else { return attributeName ; } }
43118	public synchronized void clearMemoryBackend ( ) { entryMap . clear ( ) ; childDNs . clear ( ) ; }
43185	public void append ( final CommandBuilder builder ) { for ( final Argument arg : builder . args ) { if ( builder . isObfuscated ( arg ) ) { addObfuscatedArgument ( arg ) ; } else { addArgument ( arg ) ; } } }
43201	public void addLayoutComponent ( String name , Component comp ) { }
43203	public static PasswordPolicyResponseControl newControl ( final PasswordPolicyErrorType errorType ) { Reject . ifNull ( errorType ) ; return new PasswordPolicyResponseControl ( _BOOL , _NULL , - _NUM , errorType ) ; }
43228	public static long findNumber ( String str ) throws TagException { return findNumber ( str , _NUM ) ; }
43238	public boolean isLocalServerSecure ( ) { return localServerSecure ; }
43239	public boolean hasDetails ( String sku ) { return mSkuMap . containsKey ( sku ) ; }
43247	public void start ( int scenario ) { gen = new CSNGenerator ( _NUM , _NUM ) ; this . scenario = scenario ; start ( ) ; }
43316	public final void pull_tight_accuracy_set ( int p_value ) { if ( settings_read_only ) return ; trace_pullt_min_move = p_value ; act_log . start_scope ( LogfileScope . SET_PULL_TIGHT_ACCURACY , p_value ) ; }
43319	@ Override public String toString ( ) { return new String ( toByteArray ( ) ) ; }
43345	@ Activate protected void activate ( ComponentContext context ) { reset ( ) ; }
43356	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return m_arg0 . execute ( xctxt ) . xstr ( ) . startsWith ( m_arg1 . execute ( xctxt ) . xstr ( ) ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
43371	public RetryAfterHeader createRetryAfterHeader ( int retryAfter ) throws InvalidArgumentException { if ( retryAfter < _NUM ) throw new InvalidArgumentException ( _CHAR bad retryAfter arg _CHAR ) ; RetryAfter r = new RetryAfter ( ) ; r . setRetryAfter ( retryAfter ) ; return r ; }
43385	public String wrapIfKeywordOrBuiltIn ( String name ) { if ( KEYWORD_BUILT_IN_SET . contains ( name ) ) { return name + _CHAR _ _CHAR ; } return name ; }
43411	private void destroyInternalSession ( SessionID sessionID ) { InternalSession sess = sessionAccessManager . removeInternalSession ( sessionID ) ; if ( sess != _NULL && sess . getState ( ) != INVALID ) { signalRemove ( sess , SessionEventType . DESTROY ) ; sessionAuditor . auditActivity ( sess . toSessionInfo ( ) , AM_SESSION_DESTROYED ) ; } sessionAccessManager . removeSessionId ( sessionID ) ; }
43434	private boolean willExpire ( long minutes ) { return minutes < Long . MAX_VALUE / _NUM ; }
43440	public String toPattern ( ) { return ndf . toPattern ( ) ; }
43441	public static long distributePowerToAllFaces ( World world , BlockPos pos , long amount , boolean simulated ) { long consumedPower = _NUM ; for ( final ITeslaConsumer consumer : getConnectedCapabilities ( TeslaCapabilities . CAPABILITY_CONSUMER , world , pos ) ) consumedPower += consumer . givePower ( amount , simulated ) ; return consumedPower ; }
43462	public static void deregisterAccountStatusNotificationHandler ( DN handlerDN ) { directoryServer . accountStatusNotificationHandlers . remove ( handlerDN ) ; }
43465	protected void threadStop ( ) { if ( thread == _NULL ) return ; threadDone = _BOOL ; thread . interrupt ( ) ; try { thread . join ( ) ; } catch ( InterruptedException e ) { } thread = _NULL ; }
43511	public boolean isAccessibleChildSelected ( int i ) { return isSelectedIndex ( i ) ; }
43531	boolean isSystemTheme ( ) { return _BOOL ; }
43538	public static Option stream ( FSDataInputStream value ) { return new InputStreamOption ( value ) ; }
43541	public static void fill ( char [ ] array , int start , int end , char value ) { Arrays . checkStartAndEnd ( array . length , start , end ) ; for ( int i = start ; i < end ; i ++ ) { array [ i ] = value ; } }
43544	public final boolean owns ( ConditionObject condition ) { return condition . isOwnedBy ( this ) ; }
43545	private static void logOptionValues ( final CommandLine cli ) { final List < String > optionsString = Arrays . stream ( cli . getOptions ( ) ) . filter ( _NULL ) . filter ( _NULL ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; CommandLineInterface . LOGGER . debug ( _CHAR Processing command line : { } . _CHAR , optionsString ) ; }
43547	public static java . util . Calendar parseTime ( String lexicalXSDTime ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseTime ( lexicalXSDTime ) ; }
43549	public void installUI ( JComponent c ) { super . installUI ( c ) ; MetalToolBarUI . register ( c ) ; }
43628	public void addCallMethod ( String pattern , String methodName , int paramCount ) { addRule ( pattern , new CallMethodRule ( methodName , paramCount ) ) ; }
43648	public Result mapToXACMLResult ( Object nativeResult , String nativeServiceName , ResourceMapper resourceMapper , ActionMapper actionMapper ) throws XACMLException { return _NULL ; }
43670	@ Override public String toString ( ) { return new String ( toByteArray ( ) ) ; }
43702	public boolean isSatisfied ( ) { return satisfied ; }
43717	public AppLauncher env ( Map < String , String > env ) { if ( env == _NULL ) { throw new NullPointerException ( _CHAR env _CHAR ) ; } this . env . putAll ( env ) ; return this ; }
43732	public boolean hasMember ( Guid guid ) throws UMSException { Principal principal = getPrincipal ( ) ; if ( principal == _NULL ) { throw new IllegalArgumentException ( i18n . getString ( IUMSConstants . BAD_PRINCIPAL_HDL ) ) ; } PersistentObject member = UMSObject . getObject ( principal , guid ) ; return hasMember ( member ) ; }
43758	protected boolean isGlobal ( ) { return _BOOL ; }
43782	public boolean is_obstacle ( AwtreeObject p_obj ) { for ( int index = _NUM ; index < net_nos_arr . length ; ++ index ) { if ( p_obj . is_obstacle ( net_nos_arr [ index ] ) ) return _BOOL ; } return _BOOL ; }
43844	public void addServiceRoutes ( ServiceRouter rootRouter , ServiceRouter realmRouter ) { }
43891	public void reset ( String realm , String config ) { configData = _NULL ; xmlValue = _NULL ; initialize ( realm , config ) ; }
43991	final boolean casCellsBusy ( ) { return UNSAFE . compareAndSwapInt ( this , CELLSBUSY , _NUM , _NUM ) ; }
44024	public PriorityHeader createPriorityHeader ( String priority ) throws ParseException { if ( priority == _NULL ) throw new NullPointerException ( _CHAR bad priority arg _CHAR ) ; Priority p = new Priority ( ) ; p . setPriority ( priority ) ; return p ; }
44043	public void sync ( ) throws SyncFailedException { writer . sync ( ) ; }
44238	private void verifyAttribute ( ReadableTransaction txn , EntryID entryID , Entry entry , AttributeIndex attrIndex ) { for ( MatchingRuleIndex index : attrIndex . getNameToIndexes ( ) . values ( ) ) { for ( ByteString key : index . indexEntry ( entry ) ) { verifyAttributeInIndex ( index , txn , key , entryID ) ; } } }
44259	@ SuppressWarnings ( _CHAR unused _CHAR ) private static Object callFunctionalObject ( Object functionalObject , Class < ? > callerClass , Object [ ] args ) throws Throwable { return callFunctionalObject ( new InvocationState ( ) , functionalObject , callerClass , args ) ; }
44293	public boolean checkDatabase ( Identifier id ) { boolean dbExists ; dbExists = databases . exists ( id ) ; return dbExists ; }
44356	public static ExternalSASLBindRequest newExternalSASLBindRequest ( ) { return new ExternalSASLBindRequestImpl ( ) ; }
44358	public final Key translateKey ( Key key ) throws InvalidKeyException { return spiImpl . engineTranslateKey ( key ) ; }
44365	public boolean hasNameOrOID ( final String value ) { return hasName ( value ) || getOID ( ) . equals ( value ) ; }
44419	@ Override public void cacheResult ( Foo foo ) { entityCache . putResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) , foo ) ; finderCache . putResult ( FINDER_PATH_FETCH_BY_UUID_G , new Object [ ] { foo . getUuid ( ) , foo . getGroupId ( ) } , foo ) ; foo . resetOriginalValues ( ) ; }
44428	public String [ ] listChildren ( SetRelationDefinition < ? , ? > d ) { validateRelationDefinition ( d ) ; return serverContext . listManagedObjects ( path , d ) ; }
44435	public int toInt ( ) { if ( places . length > _NUM ) throw new NumberFormatException ( _CHAR BigInt . toInt , too big _CHAR ) ; int retval = _NUM , i = _NUM ; for ( ; i < places . length ; i ++ ) retval = ( retval << _NUM ) + ( places [ i ] & _NUM ) ; return retval ; }
44455	@ Override public synchronized Object clone ( ) throws RuntimeOperationsException { if ( MODELMBEAN_LOGGER . isLoggable ( Level . FINEST ) ) { MODELMBEAN_LOGGER . logp ( Level . FINEST , DescriptorSupport . class . getName ( ) , _CHAR clone ( ) _CHAR , _CHAR Entry _CHAR ) ; } return ( new DescriptorSupport ( this ) ) ; }
44471	private void uninstallLayout ( JRootPane root ) { if ( savedOldLayout != _NULL ) { root . setLayout ( savedOldLayout ) ; savedOldLayout = _NULL ; } }
44533	public void updateCustomAttribute ( AttributeType attr , Schema schema ) { customAttributePanel . update ( attr , schema ) ; schemaElementPanel = customAttributePanel ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , customAttributePanel . getTitle ( ) . toString ( ) ) ; }
44539	public SignatureVisitor visitClassBound ( ) { return this ; }
44574	public void inserts ( String extFile , String origFileName ) throws IOException { String content = getMatched ( extFile ) ; if ( ( content != _NULL ) && ( content . length ( ) > _NUM ) ) { String orig = getFileContentInserted ( origFileName , content ) ; writeToFile ( origFileName , orig ) ; } }
44594	public boolean isSatisfied ( ) { return satisfied ; }
44622	public List < Certificate > peerCertificates ( ) { return peerCertificates ; }
44641	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { XNumber xnum = new XNumber ( ( double ) getCountOfContextNodeList ( xctxt ) ) ; return xnum ; }
44646	public void execute ( TransformerImpl transformer ) throws TransformerException { int sourceNode = transformer . getXPathContext ( ) . getCurrentNode ( ) ; XObject var = getValue ( transformer , sourceNode ) ; transformer . getXPathContext ( ) . getVarStack ( ) . setLocalVariable ( m_index , var ) ; }
44648	public boolean isAccessibleRowSelected ( int r ) { return _BOOL ; }
44653	public void push ( final String value ) { if ( value == _NULL ) { mv . visitInsn ( Opcodes . ACONST_NULL ) ; } else { mv . visitLdcInsn ( value ) ; } }
44664	private boolean isOpen ( ) { return str != _NULL ; }
44670	public WWWAuthenticateHeader createWWWAuthenticateHeader ( String scheme ) throws ParseException { if ( scheme == _NULL ) throw new NullPointerException ( _CHAR _NULL scheme _CHAR ) ; WWWAuthenticate www = new WWWAuthenticate ( ) ; www . setScheme ( scheme ) ; return www ; }
44708	public static void error ( CommandManager mgr , String msg ) { dumpToOutput ( mgr , msg , _NULL ) ; mgr . getDebugger ( ) . error ( msg ) ; }
44725	public boolean removeNameIdentifier ( ) { if ( _subjectConfirmation == _NULL ) { if ( SAMLUtilsCommon . debug . messageEnabled ( ) ) { SAMLUtilsCommon . debug . message ( _CHAR Subject : At least one of _CHAR + _CHAR NameIdentifier and SubjectConfirmation is mandatory _CHAR ) ; } return _BOOL ; } _nameIdentifier = _NULL ; return _BOOL ; }
44832	public boolean all_doors_calculated ( ) { return doors_calculated ; }
44862	public void postProcessAddUser ( SSOToken token , String entryDN , Set members , int objectType ) throws AMPostCallBackException { }
44866	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s2_linear_with_both_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
44968	public void add ( int index , T item ) { synchronized ( lock ) { items . add ( index , identifiedItemFactory . create ( item ) ) ; } itemPositionChangeChecked = new SparseBooleanArray ( this . items . size ( ) ) ; notifyDataSetChanged ( ) ; }
44969	public Enumeration < Permission > elements ( ) { synchronized ( this ) { return Collections . enumeration ( perms ) ; } }
45013	final boolean isRunningOrShutdown ( boolean shutdownOK ) { int rs = runStateOf ( ctl . get ( ) ) ; return rs == RUNNING || ( rs == SHUTDOWN && shutdownOK ) ; }
45046	@ Override public void resetBuffer ( ) { resetBuffer ( _BOOL ) ; }
45051	public static void deregisterImportTaskListener ( ImportTaskListener listener ) { directoryServer . importTaskListeners . remove ( listener ) ; }
45059	@ Override public List < Foo > findByField2 ( boolean field2 ) { return findByField2 ( field2 , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
45066	public void recycle ( ) { for ( int i = _NUM ; i < numberOfSpans ; i ++ ) { spans [ i ] = _NULL ; } }
45084	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
45093	static MonitoringAttributesViewPanel < String > createStringInstance ( LinkedHashSet < String > attributes ) { return new MonitoringAttributesViewPanel < > ( attributes ) ; }
45106	protected final boolean isListState ( ) { return stateTextTypes . charAt ( state ) == _CHAR ; }
45123	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
45152	protected void fieldUpdated ( ) { }
45153	public void print ( float fnum ) { print ( String . valueOf ( fnum ) ) ; }
45169	public static < E extends Exception > void throwFirstFrom ( List < ? extends E > exceptions ) throws E { if ( ! exceptions . isEmpty ( ) ) { throw exceptions . get ( _NUM ) ; } }
45172	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , java . io . IOException { processRequest ( request , response ) ; }
45198	private static SecurityOptions createSelfSignedCertificateOptions ( boolean enableSSL , boolean enableStartTLS , int sslPort , Collection < String > aliasesToUse ) { return createOptionsForCertificatType ( CertificateType . SELF_SIGNED_CERTIFICATE , _NULL , _NULL , enableSSL , enableStartTLS , sslPort , aliasesToUse ) ; }
45218	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { forwardTo ( ) ; }
45221	public boolean hasAuthenticationType ( AuthenticationType authenticationType ) { return this . authenticationType == authenticationType ; }
45228	public AuthorizationHeader createAuthorizationHeader ( String scheme ) throws ParseException { if ( scheme == _NULL ) throw new NullPointerException ( _CHAR _NULL arg scheme _CHAR ) ; Authorization auth = new Authorization ( ) ; auth . setScheme ( scheme ) ; return auth ; }
45260	public boolean equals ( Object obj ) { if ( this == obj ) return _BOOL ; if ( this == POINT_INFINITY ) return _BOOL ; if ( obj instanceof ECPoint ) { return ( ( x . equals ( ( ( ECPoint ) obj ) . x ) ) && ( y . equals ( ( ( ECPoint ) obj ) . y ) ) ) ; } return _BOOL ; }
45300	private static boolean hasAttrMask ( int mask , int rightsAttr ) { return ( mask & rightsAttr ) != _NUM ; }
45311	public String toOIDString ( ) { if ( sOID == _NULL ) { sOID = _CHAR OID . '' + toString ( ) ; } return sOID ; }
45315	@ Override public void rebind ( String name , Object obj ) throws NamingException { getBoundContext ( ) . rebind ( parseName ( name ) , obj ) ; }
45337	public GSERParser skipSP ( ) throws GSERException { skip ( GSER_SP ) ; return this ; }
45374	private KeyListener createKeyListener ( ) { if ( keyListener == _NULL ) { keyListener = new KeyHandler ( ) ; } return keyListener ; }
45381	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { int which = getArg0AsNode ( xctxt ) ; if ( DTM . NULL != which ) { return new XString ( _CHAR N _CHAR + Integer . toHexString ( which ) . toUpperCase ( ) ) ; } else return XString . EMPTYSTRING ; }
45388	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
45400	boolean isAutomaticDialogSupportEnabled ( ) { return super . isAutomaticDialogSupportEnabled ; }
45428	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
45432	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR TransactionIdControl ( id = _CHAR ) ; buffer . append ( transactionId ) ; buffer . append ( _CHAR ) _CHAR ) ; }
45472	private synchronized ConnectionPool pCreatePool ( ) throws SQLException { if ( pool != _NULL ) { return pool ; } else { pool = new ConnectionPool ( poolProperties ) ; return pool ; } }
45489	public Object remove ( Object oldInstance ) { Expression exp = bindings . remove ( oldInstance ) ; return getValue ( exp ) ; }
45506	public static void cacheResult ( Foo foo ) { getPersistence ( ) . cacheResult ( foo ) ; }
45650	public Set preProcessAddUser ( SSOToken token , String entryDN , Set members , int objectType ) throws AMPreCallBackException { return members ; }
45665	public Boolean isMustUnderstand ( ) { return mustUnderstand ; }
45678	public boolean is_via_snap_to_smd_center ( ) { return via_snap_to_smd_center ; }
45698	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return XBoolean . S_TRUE ; }
45735	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return _NULL ; }
45818	public static XMPDateTime create ( ) { return new XMPDateTimeImpl ( ) ; }
45822	public static List < Foo > findByField2 ( boolean field2 ) { return getPersistence ( ) . findByField2 ( field2 ) ; }
45828	public void addDefaultValue ( String value ) throws SMSException , SSOException { Set defaultValues = getDefaultValues ( ) ; if ( defaultValues != Collections . EMPTY_SET ) { defaultValues . add ( value ) ; } else { defaultValues = new HashSet ( ) ; defaultValues . add ( value ) ; } updateDefaultValues ( defaultValues ) ; }
45868	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
45881	public void stateChanged ( ChangeEvent e ) { if ( e == _NULL ) { throw new NullPointerException ( ) ; } firePropertyChange ( ACCESSIBLE_VISIBLE_DATA_PROPERTY , Boolean . valueOf ( _BOOL ) , Boolean . valueOf ( _BOOL ) ) ; }
45907	private boolean isShuttingDown ( ) { return stopRequested ; }
45934	public void cache ( SessionInfo info , String jwtToken ) { Reject . ifNull ( info , jwtToken , _CHAR Arguments can not be _NULL . _CHAR ) ; sessionInfoCache . put ( jwtToken , info ) ; }
45955	public final void info ( Object message ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_INFO ) ) { log ( SimpleLog . LOG_LEVEL_INFO , message , _NULL ) ; } }
45971	public boolean isEnabled ( ) { return enabled ; }
46011	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
46069	private static Class < ? > loadAndInitializeInvokerClass ( byte [ ] classBytes , Object [ ] patches ) { Class < ? > invokerClass = UNSAFE . defineAnonymousClass ( HOST_CLASS , classBytes , patches ) ; UNSAFE . ensureClassInitialized ( invokerClass ) ; return invokerClass ; }
46086	public void addSetProperties ( String pattern ) { addRule ( pattern , new SetPropertiesRule ( ) ) ; }
46117	public boolean isAccessibleChildSelected ( int i ) { return List . this . isIndexSelected ( i ) ; }
46118	public Time createTime ( Date start , Date stop ) throws SdpException { TimeField timeImpl = new TimeField ( ) ; timeImpl . setStart ( start ) ; timeImpl . setStop ( stop ) ; return timeImpl ; }
46130	private void initConnection ( ) throws CoreTokenException { if ( connection == _NULL || ! factory . isValid ( connection ) ) { try { connection = factory . create ( ) ; query . setConnection ( connection ) ; } catch ( DataLayerException e ) { throw new CoreTokenException ( _CHAR Failed to init connection to data layer _CHAR , e ) ; } } }
46134	public OrganizationHeader createOrganizationHeader ( String organization ) throws ParseException { if ( organization == _NULL ) throw new NullPointerException ( _CHAR bad organization arg _CHAR ) ; Organization o = new Organization ( ) ; o . setOrganization ( organization ) ; return o ; }
46151	public BufferIterator littleEndianIterator ( ) { return new NioBufferIterator ( address , ( int ) size , ByteOrder . nativeOrder ( ) != ByteOrder . LITTLE_ENDIAN ) ; }
46169	public String toString ( ) { return ( attrSyntax ) ; }
46181	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { double pos = ( double ) getPositionInContextNodeList ( xctxt ) ; return new XNumber ( pos ) ; }
46184	public static int readUInt8 ( ByteBuffer b ) { return read ( b ) ; }
46196	@ OnClose public void close ( ) { subscription . close ( ) ; }
46206	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s6_matching_and_non_matching_versions_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
46239	public static net . aimeizi . person . QueryParameter . Builder newBuilder ( net . aimeizi . person . QueryParameter other ) { return new net . aimeizi . person . QueryParameter . Builder ( other ) ; }
46240	public boolean equals ( ExtendedType other ) { try { return other . nodetype == this . nodetype && other . localName . equals ( this . localName ) && other . namespace . equals ( this . namespace ) ; } catch ( NullPointerException e ) { return _BOOL ; } }
46271	public static ValueExp times ( ValueExp value1 , ValueExp value2 ) { return new BinaryOpValueExp ( TIMES , value1 , value2 ) ; }
46350	public boolean accept ( File path ) { if ( path . exists ( ) ) { if ( path . isDirectory ( ) ) { return _BOOL ; } else { String fileName = path . getName ( ) ; return Utils . isMatch ( fileName , fileNamePattern , wildCard ) ; } } return _BOOL ; }
46375	public void addComment ( String c ) { comments . add ( c ) ; }
46392	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , java . io . IOException { processRequest ( request , response ) ; }
46437	protected boolean processSocket ( long socket , SocketEvent event ) { SocketWrapperBase < Long > socketWrapper = connections . get ( Long . valueOf ( socket ) ) ; return processSocket ( socketWrapper , event , _BOOL ) ; }
46491	public final void info ( Object message , Throwable t ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_INFO ) ) { log ( SimpleLog . LOG_LEVEL_INFO , message , t ) ; } }
46514	final void toString ( StringBuilder buffer ) { if ( this . perm != _NULL ) { this . perm . toString ( buffer ) ; } buffer . append ( _CHAR _CHAR ) ; if ( this . bindRule != _NULL ) { this . bindRule . toString ( buffer ) ; } buffer . append ( _CHAR ) _CHAR ) ; }
46515	public static OAuth2BearerWWWAuthenticateHeader valueOf ( final String string ) { if ( string != _NULL ) { try { return new OAuth2BearerWWWAuthenticateHeader ( OAuth2Error . valueOfWWWAuthenticateHeader ( string ) ) ; } catch ( final IllegalArgumentException e ) { } } return new OAuth2BearerWWWAuthenticateHeader ( ) ; }
46552	private static ResultCode registerSuccessResultCode ( final int intValue , final LocalizableMessage name , final Enum resultCodeEnum ) { final ResultCode t = new ResultCode ( intValue , name , _BOOL , resultCodeEnum ) ; ELEMENTS . put ( intValue , t ) ; return t ; }
46576	public boolean isEmptyArea ( ) { return emptyArea ; }
46643	public void push ( final boolean value ) { push ( value ? _NUM : _NUM ) ; }
46697	private Cookie findJwtSessionCookie ( Request request ) { List < Cookie > cookies = request . getCookies ( ) . get ( cookieName ) ; if ( cookies != _NULL ) { return cookies . get ( _NUM ) ; } return _NULL ; }
46747	@ Bean public JwtTokenStore tokenStore ( ) { return new JwtTokenStore ( jwtAccessTokenConverter ( ) ) ; }
46753	public ConnectionParameters bindDn ( String dn ) { bindDn = dn ; return this ; }
46766	public static boolean isFroyo ( ) { return getSdkVersion ( ) >= Build . VERSION_CODES . FROYO ; }
46778	@ Override public String [ ] findInitParameters ( ) { parametersLock . readLock ( ) . lock ( ) ; try { String results [ ] = new String [ parameters . size ( ) ] ; return parameters . keySet ( ) . toArray ( results ) ; } finally { parametersLock . readLock ( ) . unlock ( ) ; } }
46799	public static ArrayList < String > arrayToList ( String ... stringArray ) { if ( stringArray == _NULL ) { return _NULL ; } ArrayList < String > stringList = new ArrayList < > ( stringArray . length ) ; Collections . addAll ( stringList , stringArray ) ; return stringList ; }
46811	public static void writeDWord ( OutputStream os , int v ) throws IOException { writeWord ( os , v & _NUM ) ; writeWord ( os , v >> > _NUM & _NUM ) ; }
46920	public boolean equals ( Object other ) { if ( other == _NULL ) return _BOOL ; if ( getClass ( ) != other . getClass ( ) ) { return _BOOL ; } HostPort that = ( HostPort ) other ; return port == that . port && host . equals ( that . host ) ; }
46926	public boolean contains ( Object elem ) { return delegate . contains ( elem ) ; }
46952	private static int intToSignedBits ( int i , int size ) { if ( i < _NUM ) { i = ( _NUM << size - _NUM ) + ( i & ( ( _NUM << size - _NUM ) - _NUM ) ) ; } return i ; }
46994	public void deleteTag ( int tagId , int ifdId ) { mData . removeTag ( getTrueTagKey ( tagId ) , ifdId ) ; }
46999	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s5_several_branches ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
47022	static void updateTracerSettings ( ) { DebugLogPublisher < DebugLogPublisherCfg > [ ] publishers = loggerStorage . getLogPublishers ( ) . toArray ( new DebugLogPublisher [ _NUM ] ) ; for ( DebugTracer tracer : classTracers . values ( ) ) { tracer . updateSettings ( publishers ) ; } }
47044	private void addTriggerGroupName ( String groupName ) throws JobPersistenceException , ResourceException { addRepoListName ( groupName , TRIGGER_GROUP_NAMES_RESOURCE_PATH , _CHAR names _CHAR ) ; }
47049	public static void validate ( DefaultJAXBContextImpl jaxbCtx , ValidationContext context , ValidatableObject vo ) throws SAXException { try { new MSVValidator ( jaxbCtx , context , vo ) . _validate ( ) ; } catch ( RuntimeException e ) { context . reportEvent ( vo , e ) ; } }
47056	public void reset ( ) { this . count . set ( _NUM ) ; released = _BOOL ; }
47058	public CallIdHeader createCallIdHeader ( String callId ) throws ParseException { if ( callId == _NULL ) throw new NullPointerException ( _CHAR _NULL arg callId _CHAR ) ; CallID c = new CallID ( ) ; c . setCallId ( callId ) ; return c ; }
47077	public void onActivityResult ( int requestCode , int resultCode , Intent data ) { onActivityResult ( requestCode , resultCode , data , _NULL ) ; }
47093	public String entryTypeName ( Field field ) { Type items = getApiaryConfig ( ) . getType ( field . getTypeUrl ( ) ) ; return String . format ( _CHAR % s . Entry < % s , % s > _CHAR , getTypeName ( _CHAR java . util . Map _CHAR ) , typeName ( items , getField ( items , _CHAR key _CHAR ) ) , typeName ( items , getField ( items , _CHAR value _CHAR ) ) ) ; }
47107	public boolean isSandbox ( ) { return sandbox ; }
47117	public static PdfAction createNamed ( PdfName namedAction ) { return new PdfAction ( ) . put ( PdfName . S , PdfName . Named ) . put ( PdfName . N , namedAction ) ; }
47122	public void fatal ( Object message , Throwable exception ) { log ( Level . SEVERE , String . valueOf ( message ) , exception ) ; }
47139	public static void explainFallback ( Activity activity ) { explainFallback ( activity , MESSAGE_FALLBACK ) ; }
47151	private boolean matchPattern ( final String remoteHostName ) { final int len = remoteHostName . length ( ) - hostPattern . length ( ) ; return len > _NUM && remoteHostName . regionMatches ( _BOOL , len , hostPattern , _NUM , hostPattern . length ( ) ) ; }
47181	public boolean bool ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_NUMBER , new Object [ ] { getTypeString ( ) } ) ; return _BOOL ; }
47201	private Attribute createAttribute ( String name , Collection < ? extends Object > values ) { AttributeBuilder builder = new AttributeBuilder ( name ) ; builder . addAllStrings ( values ) ; return builder . toAttribute ( ) ; }
47209	public void removeTempGruuParam ( ) { if ( parameters != _NULL ) parameters . delete ( ParameterNames . TEMP_GRUU ) ; }
47215	public void update ( MultiDomainServerState state ) { for ( Entry < DN , ServerState > entry : state . list . entrySet ( ) ) { update ( entry . getKey ( ) , entry . getValue ( ) ) ; } }
47221	public boolean connectUsingStartTLS ( ) { return startTlsHostPort != _NULL && startTlsHostPort . equals ( getHostPortToConnect ( ) ) ; }
47228	public Builder ruleID ( final int ruleID ) { this . ruleID = ruleID ; return this ; }
47235	public boolean equal_at_start ( PlaPointInt p_point ) { if ( p_point == _NULL ) return _BOOL ; PlaPoint first = corner_first ( ) ; return first . equals ( p_point ) ; }
47245	public boolean isTrustAll ( ) { return trustAllArg . isPresent ( ) ; }
47260	public final void add_target_door ( ExpandDoorItem p_door ) { if ( p_door == _NULL ) return ; target_doors . add ( p_door ) ; }
47266	@ Override public void rebind ( String name , Object obj ) throws NamingException { rebind ( new CompositeName ( name ) , obj ) ; }
47290	public void on ( boolean on ) { isOn = on ; }
47293	private void loadInsn ( final Type type , final int index ) { mv . visitVarInsn ( type . getOpcode ( Opcodes . ILOAD ) , index ) ; }
47299	public void updateStandardAttribute ( AttributeType attr , Schema schema ) { standardAttributePanel . update ( attr , schema ) ; schemaElementPanel = standardAttributePanel ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , standardAttributePanel . getTitle ( ) . toString ( ) ) ; }
47379	protected void BuildNewCharString ( int FontIndex ) throws java . io . IOException { NewCharStringsIndex = BuildNewIndex ( fonts [ FontIndex ] . charstringsOffsets , GlyphsUsed , ENDCHAR_OP ) ; }
47384	public boolean hasSubSchema ( ) { if ( subSchemas != _NULL ) { return ( subSchemas . isEmpty ( ) ) ? _BOOL : _BOOL ; } return _BOOL ; }
47416	public static void cacheResult ( Foo foo ) { getPersistence ( ) . cacheResult ( foo ) ; }
47422	public Name add ( Rdn comp ) { return add ( size ( ) , comp ) ; }
47425	private void writeLogRef ( final File file , final String template , final Map < String , Object > map ) throws IOException , TemplateException { configuration = getConfiguration ( ) ; try ( Writer writer = new PrintWriter ( file ) ) { configuration . getTemplate ( template ) . process ( map , writer ) ; } }
47427	public int calculatePaddingLength ( int dataLength ) { return encryptCipher . getBlockSize ( ) - ( dataLength % encryptCipher . getBlockSize ( ) ) ; }
47448	public XObject operate ( XObject right ) throws javax . xml . transform . TransformerException { if ( XObject . CLASS_NUMBER == right . getType ( ) ) return right ; else return new XNumber ( right . num ( ) ) ; }
47466	public byte readByte ( ) { final byte b = sequence . byteAt ( pos ) ; pos ++ ; return b ; }
47470	private boolean tokenStartsWithPrefix ( String token , String ... prefixes ) { String [ ] tokenParts = token . split ( _CHAR : _CHAR , _NUM ) ; if ( tokenParts . length == _NUM ) { for ( String prefix : prefixes ) { if ( prefix . equals ( tokenParts [ _NUM ] ) ) { return _BOOL ; } } } return _BOOL ; }
47487	public static CallSite metafactory ( MethodHandles . Lookup caller , String invokedName , MethodType invokedType , MethodType samMethodType , MethodHandle implMethod , MethodType instantiatedMethodType ) { throw new UnsupportedOperationException ( ) ; }
47499	public AuthenticationInfoHeader createAuthenticationInfoHeader ( String response ) throws ParseException { if ( response == _NULL ) throw new NullPointerException ( _CHAR _NULL arg response _CHAR ) ; AuthenticationInfo auth = new AuthenticationInfo ( ) ; auth . setResponse ( response ) ; return auth ; }
47502	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return new XNumber ( left . num ( ) % right . num ( ) ) ; }
47503	public static void fill ( Object [ ] array , int start , int end , Object value ) { Arrays . checkStartAndEnd ( array . length , start , end ) ; for ( int i = start ; i < end ; i ++ ) { array [ i ] = value ; } }
47535	public boolean equals ( Guid guid ) { return _dn . equals ( DN . valueOf ( guid . getDn ( ) ) ) ; }
47542	public char current ( ) { if ( offset == end ) { return DONE ; } return string . charAt ( offset ) ; }
47548	public int size ( ) { return size ; }
47554	public void addObjectCreate ( String pattern , String className ) { addRule ( pattern , new ObjectCreateRule ( className ) ) ; }
47555	public String toLocalizedPattern ( ) { return ndf . toLocalizedPattern ( ) ; }
47556	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s3_linear_with_snapshots_light_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
47580	public int nextIntUTF8 ( ) throws DataFormatException { return Integer . valueOf ( nextString ( ) ) ; }
47621	protected final void invokePostResponseCallbacks ( ) { if ( postResponseCallbacks != _NULL ) { for ( Runnable callback : postResponseCallbacks ) { try { callback . run ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } } }
47676	public void add ( RefAddr addr ) { addrs . addElement ( addr ) ; }
47724	public ContentLanguageHeader createContentLanguageHeader ( Locale contentLanguage ) { if ( contentLanguage == _NULL ) throw new NullPointerException ( _CHAR _NULL arg contentLanguage _CHAR ) ; ContentLanguage c = new ContentLanguage ( ) ; c . setContentLanguage ( contentLanguage ) ; return c ; }
47741	private boolean matchModes ( QName m1 , QName m2 ) { return ( ( ( _NULL == m1 ) && ( _NULL == m2 ) ) || ( ( _NULL != m1 ) && ( _NULL != m2 ) && m1 . equals ( m2 ) ) ) ; }
47754	public static PdfAction createHide ( String [ ] text , boolean hidden ) { return new PdfAction ( ) . put ( PdfName . S , PdfName . Hide ) . put ( PdfName . T , getArrayFromStringList ( text ) ) . put ( PdfName . H , new PdfBoolean ( hidden ) ) ; }
47767	public void start_logfile ( File p_filename ) { if ( board_is_read_only ) { return ; } actlog . start_write ( p_filename ) ; }
47797	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ hgap = _CHAR + hgap + _CHAR , vgap = _CHAR + vgap + _CHAR ] _CHAR ; }
47810	private static boolean isHexDigit ( char c ) { return ( c >= _CHAR && c <= _CHAR || c >= _CHAR && c <= _CHAR || c >= _CHAR && c <= _CHAR ) ; }
47813	public Boolean isMustUnderstand ( ) { return mustUnderstand ; }
47822	public static Date parseDateTime ( String dt ) { try { return new SimpleDateFormat ( DATETIME_FORMAT ) . parse ( dt ) ; } catch ( Exception e ) { } return _NULL ; }
47862	public boolean isInheritedFromDNCollective ( ) { return this . isInheritedFromDNCollective ; }
47877	public void referralSolveError ( DN dn , String [ ] referrals , BasicNodeError error ) { searchResult = _NULL ; errorSearchingPanel . setReferralError ( dn , referrals , error ) ; delete . setVisible ( _BOOL ) ; saveChanges . setVisible ( _BOOL ) ; cardLayout . show ( mainPanel , ERROR_SEARCHING ) ; displayedEntryPanel = _NULL ; }
47906	public static void validate ( DefaultJAXBContextImpl jaxbCtx , ValidationContext context , ValidatableObject vo ) throws SAXException { try { new MSVValidator ( jaxbCtx , context , vo ) . _validate ( ) ; } catch ( RuntimeException e ) { context . reportEvent ( vo , e ) ; } }
47916	@ NonNull public static Interpolator constant ( float value ) { return new ConstantInterpolator ( value ) ; }
47919	public void add ( RoleUnresolved role ) throws IllegalArgumentException { if ( role == _NULL ) { String excMsg = _CHAR Invalid parameter _CHAR ; throw new IllegalArgumentException ( excMsg ) ; } super . add ( role ) ; }
47960	public boolean hasByteMappings ( ) { return byteMappings . size ( ) != _NUM ; }
48023	void release ( ) { for ( int i = _NUM ; i < n ; i ++ ) { filters [ i ] = _NULL ; } n = _NUM ; pos = _NUM ; servlet = _NULL ; servletSupportsAsync = _BOOL ; }
48031	protected boolean accept ( XSLTVisitor visitor ) { return visitor . visitExtensionElement ( this ) ; }
48033	public boolean containsAttribute ( Object name , Object value ) { return value . equals ( getAttribute ( name ) ) ; }
48056	public ConfigParameters configurationFile ( String file ) { configurationFile = file ; return this ; }
48059	public static void main ( String [ ] args ) { System . exit ( filterExitCode ( stopWindowsService ( System . out , System . err ) ) ) ; }
48062	public static String removeStaticAttributeFlag ( String attributeName ) { if ( isStaticAttribute ( attributeName ) ) { return attributeName . substring ( STATIC_QUOTE . length ( ) , attributeName . length ( ) - STATIC_QUOTE . length ( ) ) ; } else { return attributeName ; } }
48074	public void resetStats ( MetricReference metricReference ) { TImeMetricInfo info = metricStatisticsMap . get ( metricReference ) ; info . totalTime = new Long ( _NUM ) ; info . numberOfEvents = new Long ( _NUM ) ; info . averageTime = new Long ( _NUM ) ; info . lastLoggedEventTime = new Long ( _NUM ) ; }
48101	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s1_linear_with_only_annotated_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
48108	public void validateUserID ( String userID ) throws AMException { }
48162	public RSeqHeader createRSeqHeader ( long sequenceNumber ) throws InvalidArgumentException { if ( sequenceNumber < _NUM ) throw new InvalidArgumentException ( _CHAR invalid sequenceNumber arg _CHAR + sequenceNumber ) ; RSeq rseq = new RSeq ( ) ; rseq . setSeqNumber ( sequenceNumber ) ; return rseq ; }
48168	public static boolean isValidAttributeName ( String s ) { return isValidObjectclassName ( s ) ; }
48176	public static void replaceAttributeSchema ( String serviceName , String subSchemaName , String schemaType , String attributeName , SSOToken adminToken , Node attributeSchemaNode ) throws UpgradeException { ServiceSchema ss = getServiceSchema ( serviceName , subSchemaName , schemaType , adminToken ) ; replaceAttributeSchema ( ss , attributeName , attributeSchemaNode ) ; }
48187	public void math ( final int op , final Type type ) { mv . visitInsn ( type . getOpcode ( op ) ) ; }
48202	public Name add ( String comp ) throws InvalidNameException { impl . add ( comp ) ; return this ; }
48206	private Border createNonRolloverToggleBorder ( ) { UIDefaults table = UIManager . getLookAndFeelDefaults ( ) ; return new CompoundBorder ( new BasicBorders . RadioButtonBorder ( table . getColor ( _CHAR ToggleButton . shadow _CHAR ) , table . getColor ( _CHAR ToggleButton . darkShadow _CHAR ) , table . getColor ( _CHAR ToggleButton . light _CHAR ) , table . getColor ( _CHAR ToggleButton . highlight _CHAR ) ) , new BasicBorders . RolloverMarginBorder ( ) ) ; }
48318	public static void main ( String [ ] args ) { new SetupLauncher ( args ) . launch ( ) ; }
48329	private static String javaCharset ( String charset ) { if ( charset == _NULL ) { return _NULL ; } String mappedCharset = MIME2JAVA . get ( charset . toLowerCase ( Locale . ENGLISH ) ) ; if ( mappedCharset == _NULL ) { return charset ; } return mappedCharset ; }
48353	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
48380	public void removeAssignableDynamicGroup ( String assignableDynamicGroupDN ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; Set userDNs = new HashSet ( ) ; userDNs . add ( super . entryDN ) ; dsServices . modifyMemberShip ( super . token , userDNs , assignableDynamicGroupDN , ASSIGNABLE_DYNAMIC_GROUP , REMOVE_MEMBER ) ; }
48421	public void run ( ) { try { TimerAlarmClockNotification notif = new TimerAlarmClockNotification ( this ) ; listener . notifyAlarmClock ( notif ) ; } catch ( Exception e ) { TIMER_LOGGER . logp ( Level . FINEST , Timer . class . getName ( ) , _CHAR run _CHAR , _CHAR Got unexpected exception when sending a notification _CHAR , e ) ; } }
48427	protected boolean accept ( XSLTVisitor visitor ) { return visitor . visitStylesheet ( this ) ; }
48434	static ModifyMsg createV1 ( byte [ ] in ) throws DataFormatException { ModifyMsg msg = new ModifyMsg ( in ) ; msg . bytes = _NULL ; return msg ; }
48435	public static void cacheResult ( Foo foo ) { getPersistence ( ) . cacheResult ( foo ) ; }
48446	protected void cleanUpReplicationServersDB ( ) throws Exception { for ( ReplicationServer rs : ReplicationServer . getAllInstances ( ) ) { clearChangelogDB ( rs ) ; } }
48465	public static void registerIdentityMapper ( DN configEntryDN , IdentityMapper < ? > identityMapper ) { directoryServer . identityMappers . put ( configEntryDN , identityMapper ) ; }
48472	@ Override public void cacheResult ( Foo foo ) { entityCache . putResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) , foo ) ; finderCache . putResult ( FINDER_PATH_FETCH_BY_UUID_G , new Object [ ] { foo . getUuid ( ) , foo . getGroupId ( ) } , foo ) ; foo . resetOriginalValues ( ) ; }
48494	public void close ( ) { queueDatabase . sync ( ) ; queueDatabase . close ( ) ; dbEnv . close ( ) ; }
48502	public void print ( int inum ) { print ( String . valueOf ( inum ) ) ; }
48510	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { adapter . delete ( tokenId , etag ) ; handler . processResults ( tokenId ) ; }
48535	@ Override public void fireballHit ( ) { runDeathSeq = fireballHit = _BOOL ; parent . getChildren ( ) . remove ( spriteBoundsArray [ _NUM ] ) ; spriteBoundsArray [ _NUM ] = _NULL ; spriteFrame . setImage ( playerStates . get ( _NUM ) ) ; main . Main . enemyCount ++ ; }
48558	protected void removeReplicationServerDB ( ) throws Exception { remove ( new ArrayList < ReplicationServer > ( ReplicationServer . getAllInstances ( ) ) ) ; }
48614	@ Override public int compareTo ( ArtComponent p_other ) { int me_more = smd_pin_count - p_other . smd_pin_count ; if ( me_more > _NUM ) return _NUM ; else if ( me_more < _NUM ) return - _NUM ; else return brd_component . id_no - p_other . brd_component . id_no ; }
48645	public boolean hasRights ( int rights ) { return body . hasRights ( rights ) ; }
48647	public void onStop ( ) { AppEventsLogger . onContextStop ( ) ; }
48653	public void dispatchGalleryIntent ( ) { Intent galleryIntent = new Intent ( Intent . ACTION_PICK , MediaStore . Images . Media . EXTERNAL_CONTENT_URI ) ; if ( galleryIntent . resolveActivity ( activity . getPackageManager ( ) ) != _NULL ) { activity . startActivityForResult ( galleryIntent , PICK_IMAGE_REQUEST ) ; } }
48722	@ Override public boolean is_IntBox ( ) { if ( oct_llx != oct_lx + oct_ly ) return _BOOL ; if ( oct_lrx != oct_rx - oct_ly ) return _BOOL ; if ( oct_urx != oct_rx + oct_uy ) return _BOOL ; if ( oct_ulx != oct_lx - oct_uy ) return _BOOL ; return _BOOL ; }
48725	public static final int previousMonthLength ( int year , int month ) { return ( month > _NUM ) ? monthLength ( year , month - _NUM ) : _NUM ; }
48742	public boolean hasExtensions ( ) { return entry . hasExtensions ( ) ; }
48809	private void initializeSASLMechanisms ( ) throws ConfigException , InitializationException { saslConfigManager = new SASLConfigManager ( serverContext ) ; saslConfigManager . initializeSASLMechanismHandlers ( ) ; }
48820	public Enumeration < Permission > elements ( ) { synchronized ( this ) { return Collections . enumeration ( permsMap . values ( ) ) ; } }
48868	private Object readResolve ( ) { synchronized ( levels ) { for ( Level level : levels ) { if ( value != level . value ) { continue ; } if ( ! name . equals ( level . name ) ) { continue ; } if ( Objects . equal ( resourceBundleName , level . resourceBundleName ) ) { return level ; } } levels . add ( this ) ; return this ; } }
48873	public XObject operate ( XObject right ) throws javax . xml . transform . TransformerException { return new XNumber ( - right . num ( ) ) ; }
48885	public boolean isAccessControlEnabled ( ) { return currentConfiguration . isEnabled ( ) ; }
48911	public final void trace ( Object message ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_TRACE ) ) { log ( SimpleLog . LOG_LEVEL_TRACE , message , _NULL ) ; } }
48917	public boolean isRemote ( ) { int index = combo . getSelectedIndex ( ) ; return index == _NUM ; }
48921	public void info ( Object message , Throwable exception ) { log ( Level . INFO , String . valueOf ( message ) , exception ) ; }
48958	public void increment ( ) { counter . getAndIncrement ( ) ; }
48981	public static void loadAgentToCurrent ( String agentPath ) { String vmName = ManagementFactory . getRuntimeMXBean ( ) . getName ( ) ; String pid = vmName . substring ( _NUM , vmName . indexOf ( _CHAR ) ) ; loadAgent ( agentPath , pid ) ; }
48997	public static final Index createTestBankIndexCountryName ( ) { Index lastname = new Index ( _CHAR countryname _CHAR ) ; lastname . isUnique ( _BOOL ) ; ArrayList < IndexField > fields = new ArrayList < > ( _NUM ) ; fields . add ( new IndexField ( _CHAR countryshortname _CHAR ) ) ; lastname . setFields ( fields ) ; lastname . setTable ( Fixtures . createTestWorldBankTable ( ) ) ; return lastname ; }
49012	public void debug ( Object message ) { log ( Level . FINE , String . valueOf ( message ) , _NULL ) ; }
49022	private int yearMonthToDayOfYear ( int prolepticYear , int month ) { int epochMonthFirst = yearToEpochMonth ( prolepticYear ) ; return epochMonthToEpochDay ( epochMonthFirst + month ) - epochMonthToEpochDay ( epochMonthFirst ) ; }
49036	public static List < Entry > makeEntries ( List < String > ldifLines ) { return makeEntries ( ldifLines . toArray ( new String [ ldifLines . size ( ) ] ) ) ; }
49042	protected KeyListener createKeyListener ( ) { return _NULL ; }
49050	public void reset ( ) throws IOException { throw new IOException ( _CHAR mark / reset not supported _CHAR ) ; }
49078	public RecordRouteHeader createRecordRouteHeader ( Address address ) { if ( address == _NULL ) throw new NullPointerException ( _CHAR Null argument ! _CHAR ) ; RecordRoute recordRoute = new RecordRoute ( ) ; recordRoute . setAddress ( address ) ; return recordRoute ; }
49079	public void paintToolBarContentBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
49086	public double num ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_NUMBER , new Object [ ] { getTypeString ( ) } ) ; return _NUM . _NUM ; }
49096	private JsonValue doSourceSync ( Context context , String resourceId , JsonValue value ) throws SynchronizationException { return doSourceSync ( context , resourceId , value , _BOOL , _NULL ) ; }
49133	public String toString ( ) { return new String ( getType ( ) + _CHAR Control _CHAR ) ; }
49148	public static String convertFromDate ( XMPDateTime value ) { return ISO8601Converter . render ( value ) ; }
49154	private boolean QNameEquals ( String uri , String localName ) { return ( equalsMayBeNullOrZeroLen ( m_namespace , uri ) && ( equalsMayBeNullOrZeroLen ( m_name , localName ) || equalsMayBeNullOrZeroLen ( m_nameAlias , localName ) ) ) ; }
49178	public boolean isAnnotationsAllowed ( ) { return annotationsAllowed ; }
49195	public static Collection < Tag > values ( ) { RootCfgDefn . getInstance ( ) ; return Collections . unmodifiableCollection ( TAGS . values ( ) ) ; }
49196	public String metricsSeparator ( ) { return values . metricsSeparator ; }
49200	public void removeContinuousQueryListener ( ContinuousQueryListener listener , TokenFilter filter ) throws CoreTokenException { dispatcher . removeContinuousQueryListener ( listener , filter ) ; }
49246	public View create ( Element elem ) { Document doc = elem . getDocument ( ) ; Object i18nFlag = doc . getProperty ( _CHAR i18n _CHAR ) ; if ( ( i18nFlag != _NULL ) && i18nFlag . equals ( Boolean . TRUE ) ) { return createI18N ( elem ) ; } else { return new WrappedPlainView ( elem ) ; } }
49250	public boolean isSignatureValid ( ) { if ( signed & ! validationDone ) { valid = SAMLUtils . checkSignatureValid ( xmlString , RESPONSE_ID_ATTRIBUTE , issuer ) ; validationDone = _BOOL ; } return valid ; }
49251	public static long parseLong ( String lexicalXSDLong ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseLong ( lexicalXSDLong ) ; }
49256	public String convertToInetUserStatus ( String value , String activeValue ) { return isActive ( value , activeValue ) ? STATUS_ACTIVE : STATUS_INACTIVE ; }
49262	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { }
49282	public void indent ( int n ) throws SAXException { }
49286	public static IOFileFilter ageFileFilter ( long cutoff , boolean acceptOlder ) { return new AgeFileFilter ( cutoff , acceptOlder ) ; }
49297	public boolean generateStructures ( ) { return generateStructures ; }
49334	public PushNotificationServiceConfig build ( ) throws PushNotificationException { if ( ! config . isValid ( ) ) { throw new PushNotificationException ( _CHAR Attempted to construct a _CHAR + _CHAR PushNotificationServiceConfig in an invalid state . '' ) ; } return config ; }
49396	public void edit ( File file ) throws IOException { checkAWTPermission ( ) ; checkExec ( ) ; checkActionSupport ( Action . EDIT ) ; file . canWrite ( ) ; checkFileValidation ( file ) ; peer . edit ( file ) ; }
49397	public boolean nextIsSep ( ) { if ( Character . isLetterOrDigit ( str . charAt ( currentPosition ) ) ) return _BOOL ; else return _BOOL ; }
49418	@ Override public boolean markSupported ( ) { return markSupported ; }
49433	public void removeTTL ( ) { if ( uriParms != _NULL ) uriParms . delete ( TTL ) ; }
49503	public void print ( Object obj ) { print ( String . valueOf ( obj ) ) ; }
49528	protected FocusListener createFocusListener ( ) { return getHandler ( ) ; }
49542	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s8_main_and_branch_with_intermediate_light_tag ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
49543	public final boolean isAppInstalled ( String packageName ) { return context . getPackageManager ( ) . getLaunchIntentForPackage ( packageName ) != _NULL ; }
49548	public static PdfAction createHide ( String text , boolean hidden ) { return new PdfAction ( ) . put ( PdfName . S , PdfName . Hide ) . put ( PdfName . T , new PdfString ( text ) ) . put ( PdfName . H , new PdfBoolean ( hidden ) ) ; }
49557	public void addObjectCreate ( String pattern , String className , String attributeName ) { addRule ( pattern , new ObjectCreateRule ( className , attributeName ) ) ; }
49604	public boolean hasSuffix ( DN suffixDn ) throws IllegalArgumentException { return findSuffixNode ( suffixDn , rootNode ) != _NULL ; }
49654	protected void initialize ( ) throws Exception { }
49663	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
49680	public void addAttribute ( String attrName , Set values ) throws SSOException , SMSException { validateServiceInstance ( ) ; SMSEntry e = instance . getSMSEntry ( ) ; SMSUtils . addAttribute ( e , attrName , values , Collections . EMPTY_SET ) ; e . save ( token ) ; instance . refresh ( e ) ; }
49682	public void error ( String msg ) { if ( debugLevel > Debug . OFF ) { formatAndWrite ( _CHAR ERROR : _CHAR , msg , _NULL ) ; } }
49722	public static < T > Promise < T , ResourceException > generateNotFoundException ( Request request ) { return new NotFoundException ( _CHAR Resource _CHAR_CHAR_CHAR not found _CHAR ) . asPromise ( ) ; }
49731	public void removeQualifiers ( ) { PropertyOptions opts = getOptions ( ) ; opts . setHasQualifiers ( _BOOL ) ; opts . setHasLanguage ( _BOOL ) ; opts . setHasType ( _BOOL ) ; qualifier = _NULL ; }
49756	public static void cacheResult ( List < Foo > foos ) { getPersistence ( ) . cacheResult ( foos ) ; }
49758	public void onPause ( ) { broadcastManager . unregisterReceiver ( receiver ) ; if ( callback != _NULL ) { Session session = Session . getActiveSession ( ) ; if ( session != _NULL ) { session . removeCallback ( callback ) ; } } }
49823	public static void registerImportTaskListener ( ImportTaskListener listener ) { directoryServer . importTaskListeners . addIfAbsent ( listener ) ; }
49864	public boolean isEncrypted ( ) { return isEncrypted ; }
49876	final boolean tryMatchData ( ) { Object x = item ; if ( x != _NULL && x != this && casItem ( x , _NULL ) ) { LockSupport . unpark ( waiter ) ; return _BOOL ; } return _BOOL ; }
49894	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return ( XString ) getArg0AsString ( xctxt ) ; }
49895	public static void registerAccountStatusNotificationHandler ( DN handlerDN , AccountStatusNotificationHandler < ? > handler ) { directoryServer . accountStatusNotificationHandlers . put ( handlerDN , handler ) ; }
49925	static MonitoringAttributesViewPanel < LocalizableMessage > createMessageInstance ( LinkedHashSet < LocalizableMessage > attributes ) { return new MonitoringAttributesViewPanel < > ( attributes ) ; }
49926	public boolean hasExceededMaxSessions ( ) { return monitoringOperations . getActiveSessions ( ) >= serviceConfig . getMaxSessions ( ) ; }
49972	public ConnectionPool createPool ( ) throws SQLException { if ( pool != _NULL ) { return pool ; } else { return pCreatePool ( ) ; } }
49977	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
49984	public static PdfAction createSetOcgState ( List < PdfActionOcgState > states ) { return createSetOcgState ( states , _BOOL ) ; }
50002	private static int checkFormalTypeParameters ( final String signature , int pos ) { pos = checkChar ( _CHAR , signature , pos ) ; pos = checkFormalTypeParameter ( signature , pos ) ; while ( getChar ( signature , pos ) != _CHAR ) { pos = checkFormalTypeParameter ( signature , pos ) ; } return pos + _NUM ; }
50021	static Object unmaskNull ( Object key ) { return ( key == NULL_KEY ) ? _NULL : key ; }
50027	public SetupParameters baseDn ( String baseDn ) { this . baseDn = baseDn ; return this ; }
50041	public static < T extends Fragment > BuilderImages < T > takeImages ( T fragment ) { return new BuilderImages < T > ( fragment ) ; }
50066	public static void cacheResult ( List < Foo > foos ) { getPersistence ( ) . cacheResult ( foos ) ; }
50067	private final static boolean isOwnerAppContextDisposed ( SequencedEvent se ) { if ( se != _NULL ) { Object target = se . nested . getSource ( ) ; if ( target instanceof Component ) { return ( ( Component ) target ) . appContext . isDisposed ( ) ; } } return _BOOL ; }
50120	public SignatureVisitor visitInterfaceBound ( ) { return this ; }
50124	public static void fill ( boolean [ ] array , int start , int end , boolean value ) { Arrays . checkStartAndEnd ( array . length , start , end ) ; for ( int i = start ; i < end ; i ++ ) { array [ i ] = value ; } }
50146	@ NonNull public static Interpolator constant ( ) { return constant ( _NUM ) ; }
50165	private boolean needsSizeRotation ( ) { fileLock . readLock ( ) . lock ( ) ; try { if ( currentFile != _NULL ) { return configuration . getRotationFileSizeInByte ( ) != - _NUM && currentFile . length ( ) >= configuration . getRotationFileSizeInByte ( ) ; } } finally { fileLock . readLock ( ) . unlock ( ) ; } return _BOOL ; }
50177	public boolean isMember ( User user ) throws UMSException { DN userdn = DN . valueOf ( user . getDN ( ) ) ; DN pcdn = DN . valueOf ( this . getDN ( ) ) ; if ( userdn . parent ( ) . equals ( pcdn ) ) { return _BOOL ; } else { return _BOOL ; } }
50181	public static EmbeddedDirectoryServer manageEmbeddedDirectoryServer ( ConfigParameters configParams , ConnectionParameters connParams , OutputStream out , OutputStream err ) { return new EmbeddedDirectoryServer ( configParams , connParams , out , err ) ; }
50194	protected PrivateKey engineGeneratePrivate ( KeySpec keySpec ) throws InvalidKeySpecException { if ( keySpec != _NULL ) { if ( keySpec instanceof DSAPrivateKeySpec ) { return new DSAPrivateKeyImpl ( ( DSAPrivateKeySpec ) keySpec ) ; } if ( keySpec instanceof PKCS8EncodedKeySpec ) { return new DSAPrivateKeyImpl ( ( PKCS8EncodedKeySpec ) keySpec ) ; } } throw new InvalidKeySpecException ( _CHAR _CHAR is neither DSAPrivateKeySpec nor PKCS8EncodedKeySpec _CHAR ) ; }
50216	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , java . io . IOException { processRequest ( request , response ) ; }
50238	public static PdfAction createHide ( PdfAnnotation annotation , boolean hidden ) { return new PdfAction ( ) . put ( PdfName . S , PdfName . Hide ) . put ( PdfName . T , annotation . getPdfObject ( ) ) . put ( PdfName . H , new PdfBoolean ( hidden ) ) ; }
50256	public final void fatal ( Object message ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_FATAL ) ) { log ( SimpleLog . LOG_LEVEL_FATAL , message , _NULL ) ; } }
50277	public Builder addPattern ( String pattern ) { patterns . add ( pattern ) ; return this ; }
50302	private void nextClicked ( ) { final WizardStep cStep = getCurrentStep ( ) ; application . nextClicked ( cStep , this ) ; BackgroundTask < ? > worker = new NextClickedBackgroundTask ( cStep ) ; getDialog ( ) . workerStarted ( ) ; worker . startBackgroundTask ( ) ; }
50305	public boolean isReturnAppSessionEnabled ( ) { return returnAppSession ; }
50314	public static boolean checkFileName ( final String fileName ) { return ! ( fileName == _NULL || fileName . equals ( _CHAR _CHAR ) || fileName . charAt ( fileName . length ( ) - _NUM ) == _CHAR || fileName . contains ( _CHAR .. _CHAR ) || checkFolderNamePattern ( fileName ) ) ; }
50336	public void addAllResourceTypeUuids ( final Set < String > resourceTypeUuids ) { this . resourceTypeUuids . addAll ( resourceTypeUuids ) ; }
50339	public boolean canCreateBean ( String beanName ) { return _BOOL ; }
50353	public int createTextureObject ( ) { return mProgram . createTextureObject ( ) ; }
50425	public byte [ ] perform ( byte [ ] blob ) throws TokenStrategyFailedException { Reject . ifTrue ( blob == _NULL ) ; if ( ! isTokenValidForCompression ( blob ) ) { return blob ; } return performUpdate ( blob , replacement ) ; }
50464	@ Override public void write ( int b ) { for ( OutputStream s : targetStreams ) { try { s . write ( b ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
50525	public void addResult ( Result result ) throws XACMLException { if ( ! mutable ) { throw new XACMLException ( XACMLSDKUtils . xacmlResourceBundle . getString ( _CHAR objectImmutable _CHAR ) ) ; } if ( results == _NULL ) { results = new ArrayList ( ) ; } results . add ( result ) ; }
50533	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
50538	public NamePath append ( String head ) { pathPieces . add ( head ) ; return this ; }
50558	public boolean runningWithGoal ( String ... goals ) throws MojoExecutionException { for ( String goal : goals ) { if ( goalFinder . runningWithGoal ( project , session , goal ) ) { return _BOOL ; } } return _BOOL ; }
50590	public MaxForwardsHeader createMaxForwardsHeader ( int maxForwards ) throws InvalidArgumentException { if ( maxForwards < _NUM || maxForwards > _NUM ) throw new InvalidArgumentException ( _CHAR bad maxForwards arg _CHAR + maxForwards ) ; MaxForwards m = new MaxForwards ( ) ; m . setMaxForwards ( maxForwards ) ; return m ; }
50595	public static List < Foo > findByField2 ( boolean field2 ) { return getPersistence ( ) . findByField2 ( field2 ) ; }
50617	public SOAPMessage sendSOAPMessage ( final String xmlMessage , final String soapUrl , final boolean isClientMessage ) throws SOAPException , SAML2Exception { SOAPConnection con = soapConnectionFactory . createConnection ( ) ; SOAPMessage msg = createSOAPMessage ( xmlMessage , isClientMessage ) ; return con . call ( msg , soapUrl ) ; }
50667	public final void warn ( Object message ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_WARN ) ) { log ( SimpleLog . LOG_LEVEL_WARN , message , _NULL ) ; } }
50692	public static PdfTargetDictionary createChildTarget ( int pageNumber , int annotationIndex ) { return new PdfTargetDictionary ( PdfName . C ) . put ( PdfName . P , new PdfNumber ( pageNumber - _NUM ) ) . put ( PdfName . A , new PdfNumber ( annotationIndex ) ) ; }
50703	public void trace ( Object message , Throwable exception ) { log ( Level . FINEST , String . valueOf ( message ) , exception ) ; }
50743	public static long fromLinuxKernelHexEncodedAddressAndPort ( final long decodedAddress , final long port ) { return port << _NUM | Long . reverseBytes ( decodedAddress ) >> > _NUM ; }
50806	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
50830	public int hashCode ( ) { int value = m << _NUM ; value += ( rp == _NULL ? _NUM : rp . hashCode ( ) ) ; return value ; }
50858	private static void loadDeviceIdentifier ( Context context ) { ContentResolver resolver = context . getContentResolver ( ) ; String deviceIdentifier = Settings . Secure . getString ( resolver , Settings . Secure . ANDROID_ID ) ; if ( deviceIdentifier != _NULL ) { CrashConstants . DEVICE_IDENTIFIER = tryHashStringSha256 ( context , deviceIdentifier ) ; } }
50883	@ Deprecated public static < A > ImmutableList < A > fill ( final int len , final A init ) { ImmutableList < A > l = empty ( ) ; for ( int i = _NUM ; i < len ; i ++ ) { l = new ImmutableList < > ( init , l ) ; } return l ; }
50934	public void handleBtnRealmRequest ( RequestInvocationEvent event ) { submitCycle = _BOOL ; bRealmSelect = _BOOL ; forwardTo ( ) ; }
50942	public boolean shouldStripWhiteSpace ( org . apache . xpath . XPathContext support , org . w3c . dom . Element targetElement ) throws TransformerException { StylesheetRoot sroot = this . getStylesheetRoot ( ) ; return ( _NULL != sroot ) ? sroot . shouldStripWhiteSpace ( support , targetElement ) : _BOOL ; }
51090	public Set preProcessRemoveUser ( SSOToken token , String entryDN , Set members , int objectType ) throws AMPreCallBackException { return members ; }
51104	public void initialize ( Map configParams ) { }
51121	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
51183	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return left . greaterThanOrEqual ( right ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
51184	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return new XNumber ( left . num ( ) - right . num ( ) ) ; }
51198	public boolean isCompressed ( ) { return isCompressed ; }
51205	public void on ( boolean on ) { isOn = on ; }
51231	public static void validate ( DefaultJAXBContextImpl jaxbCtx , ValidationContext context , ValidatableObject vo ) throws SAXException { try { new MSVValidator ( jaxbCtx , context , vo ) . _validate ( ) ; } catch ( RuntimeException e ) { context . reportEvent ( vo , e ) ; } }
51233	public static void fill ( double [ ] array , int start , int end , double value ) { Arrays . checkStartAndEnd ( array . length , start , end ) ; for ( int i = start ; i < end ; i ++ ) { array [ i ] = value ; } }
51287	@ BeforeClass public static void init ( ) { nonGitDirectory = Files . createTempDir ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR directory created under : _CHAR + nonGitDirectory ) ; } }
51297	public boolean isExpired ( ) { return expired ; }
51318	public static < T > T unmarshal ( File xml , Class < T > type ) { try { JAXBElement < T > item = getContext ( type ) . createUnmarshaller ( ) . unmarshal ( new StreamSource ( xml ) , type ) ; return item . getValue ( ) ; } catch ( JAXBException e ) { throw new DataBindingException ( e ) ; } }
51330	public static void access ( Level level , String msgid , String [ ] data ) { if ( ( logger != _NULL ) && logger . isAccessLoggable ( level ) ) { try { logger . access ( level , msgid , data , _NULL ) ; } catch ( LogException le ) { debug . error ( _CHAR LogUtil . access : _CHAR , le ) ; } } }
51380	public static net . aimeizi . person . Person . Builder newBuilder ( net . aimeizi . person . Person other ) { return new net . aimeizi . person . Person . Builder ( other ) ; }
51391	public static PasswordModifyExtendedResult unmodifiablePasswordModifyExtendedResult ( final PasswordModifyExtendedResult result ) { if ( result instanceof UnmodifiablePasswordModifyExtendedResultImpl ) { return result ; } return new UnmodifiablePasswordModifyExtendedResultImpl ( result ) ; }
51397	@ Deprecated public void addAttribute ( Attribute attribute , List < ByteString > duplicateValues ) { addAttribute ( attribute , ( Collection < ByteString > ) duplicateValues ) ; }
51407	@ Override public void onItemRangeChanged ( T sender , int positionStart , int itemCount ) { this . adapter . notifyItemRangeChanged ( positionStart , itemCount ) ; }
51411	private static long bit ( int bitIndex ) { return _NUM << ( bitIndex & ( ( _NUM << _NUM ) - _NUM ) ) ; }
51464	public static Date previous ( int days ) { return new Date ( System . currentTimeMillis ( ) - days * _NUM * _NUM ) ; }
51519	public void onDestroy ( ) { }
51551	public static String printHexBinary ( byte [ ] val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printHexBinary ( val ) ; }
51566	public static boolean isPortInUse ( String hostname , int port ) { try { InetSocketAddress socketAddress = new InetSocketAddress ( hostname , port ) ; return ! isPortBound ( socketAddress ) && ! isPortBeingListenedOn ( socketAddress ) ; } catch ( NullPointerException e ) { return _BOOL ; } }
51576	@ Override public void cacheResult ( List < Foo > foos ) { for ( Foo foo : foos ) { if ( entityCache . getResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) ) == _NULL ) { cacheResult ( foo ) ; } else { foo . resetOriginalValues ( ) ; } } }
51652	public static void init ( Context context ) { if ( cameraManager == _NULL ) { cameraManager = new CameraManager ( context ) ; } }
51653	public boolean is_board_read_only ( ) { return board_is_read_only ; }
51664	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
51689	public static void clearAllCaches ( ) { Enumeration e = cacheMap . elements ( ) ; while ( e . hasMoreElements ( ) ) { Cache c = ( Cache ) e . nextElement ( ) ; c . removeAll ( ) ; } }
51690	private static < K , V > boolean mapsDiffer ( Map < K , V > last , Map < K , V > attrs ) { if ( last == _NULL ) { return ( attrs != _NULL && attrs . size ( ) > _NUM ) ; } return ( ! last . equals ( attrs ) ) ; }
51722	public boolean containsExtensionElementURI ( String uri ) { if ( _NULL == m_ExtensionElementURIs ) return _BOOL ; return m_ExtensionElementURIs . contains ( uri ) ; }
51731	private JsonValue execScript ( String type , Script script , Map < String , Object > scope , Context context ) throws ScriptException { Object results = script . exec ( scope , context ) ; return json ( results ) ; }
51746	private static boolean isAlpha ( char p_char ) { return ( ( p_char >= _CHAR && p_char <= _CHAR ) || ( p_char >= _CHAR && p_char <= _CHAR ) ) ; }
51748	public CallInfoHeader createCallInfoHeader ( URI callInfo ) { if ( callInfo == _NULL ) throw new NullPointerException ( _CHAR _NULL arg callInfo _CHAR ) ; CallInfo c = new CallInfo ( ) ; c . setInfo ( callInfo ) ; return c ; }
51768	public void initialize ( Map configParams ) { }
51843	private NSObject parseDateString ( ) { String numericalString = parseString ( ) ; if ( numericalString . length ( ) > _NUM && numericalString . charAt ( _NUM ) == DATE_DATE_FIELD_DELIMITER ) { try { return new NSDate ( numericalString ) ; } catch ( Exception ex ) { } } return new NSString ( numericalString ) ; }
51853	public void increment ( ) { counter . getAndIncrement ( ) ; }
51865	protected void onRequestHandlerNotSpecified ( RequestContext requestContext ) throws ServletException { ViewBeanManager viewBeanManager = requestContext . getViewBeanManager ( ) ; AuthExceptionViewBean vb = ( AuthExceptionViewBean ) viewBeanManager . getViewBean ( com . sun . identity . authentication . UI . AuthExceptionViewBean . class ) ; vb . forwardTo ( requestContext ) ; throw new CompleteRequestException ( ) ; }
51906	public void flush ( ) throws IOException { writer . flush ( ) ; }
52010	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
52037	public String buildJvmVendor ( ) { return properties . getProperty ( _CHAR build . jvm . vendor _CHAR ) ; }
52053	public boolean hasNameOrOID ( final String value ) { return hasName ( value ) || getOID ( ) . equals ( value ) ; }
52094	public String toString ( ) { return super . toString ( ) + _CHAR inProgress : _CHAR + inProgress + _CHAR edits : _CHAR + edits ; }
52097	@ Override public int hashCode ( ) { return printer . hashCode ( ) ; }
52149	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s5_several_branches ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
52164	private Border createNonRolloverToggleBorder ( ) { return createNonRolloverBorder ( ) ; }
52166	public boolean allowLDAPv2 ( ) { return currentConfig . isAllowLDAPV2 ( ) ; }
52191	public static ExternalSASLBindRequest unmodifiableExternalSASLBindRequest ( final ExternalSASLBindRequest request ) { if ( request instanceof UnmodifiableExternalSASLBindRequestImpl ) { return request ; } return new UnmodifiableExternalSASLBindRequestImpl ( request ) ; }
52221	public static Intent buildStartInBackgroundIntent ( File script ) { final ComponentName componentName = Constants . SL4A_SERVICE_LAUNCHER_COMPONENT_NAME ; Intent intent = new Intent ( ) ; intent . setComponent ( componentName ) ; intent . setAction ( Constants . ACTION_LAUNCH_BACKGROUND_SCRIPT ) ; intent . putExtra ( Constants . EXTRA_SCRIPT_PATH , script . getAbsolutePath ( ) ) ; return intent ; }
52259	public static AsymmetricKeyParameter createKey ( InputStream inStr ) throws IOException { return createKey ( SubjectPublicKeyInfo . getInstance ( new ASN1InputStream ( inStr ) . readObject ( ) ) ) ; }
52312	public boolean verify ( PublicKey verificationKey , Signature verificationEngine ) throws InvalidKeyException , SignatureException { verificationEngine . initVerify ( verificationKey ) ; verificationEngine . update ( content ) ; return verificationEngine . verify ( signature ) ; }
52325	public void stateChanged ( ChangeEvent e ) { if ( e == _NULL ) { return ; } if ( myBar != _NULL ) { Object newModelValue = myBar . getValue ( ) ; firePropertyChange ( ACCESSIBLE_VALUE_PROPERTY , oldModelValue , newModelValue ) ; oldModelValue = newModelValue ; } }
52364	public void print ( double dnum ) { print ( String . valueOf ( dnum ) ) ; }
52392	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; Attribute [ ] attrs = toArray ( ) ; s . writeInt ( attrs . length ) ; for ( int i = _NUM ; i < attrs . length ; i ++ ) { s . writeObject ( attrs [ i ] ) ; } }
52425	public AcceptEncodingHeader createAcceptEncodingHeader ( String encoding ) throws ParseException { if ( encoding == _NULL ) throw new NullPointerException ( _CHAR the encoding parameter is _NULL _CHAR ) ; AcceptEncoding acceptEncoding = new AcceptEncoding ( ) ; acceptEncoding . setEncoding ( encoding ) ; return acceptEncoding ; }
52429	public boolean isStatusAttribute ( ) { return ( as . isStatusAttribute ( ) ) ; }
52446	protected final boolean isListState ( ) { return stateTextTypes . charAt ( state ) == _CHAR ; }
52460	public static long decodeResponseValue ( ByteString responseValue ) throws DecodeException { ASN1Reader reader = ASN1 . getReader ( responseValue ) ; try { return reader . readInteger ( ) ; } catch ( Exception e ) { return _NUM ; } }
52462	public void push ( final float value ) { int bits = Float . floatToIntBits ( value ) ; if ( bits == _NUM || bits == _NUM || bits == _NUM ) { mv . visitInsn ( Opcodes . FCONST_0 + ( int ) value ) ; } else { mv . visitLdcInsn ( value ) ; } }
52478	public static Entry addObjectClass ( Entry entry ) { Attribute attribute = entry . getAttribute ( CoreTokenConstants . OBJECT_CLASS ) ; if ( attribute == _NULL ) { entry . addAttribute ( CoreTokenConstants . OBJECT_CLASS , CoreTokenConstants . FR_CORE_TOKEN ) ; } return entry ; }
52485	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s6_matching_and_non_matching_versions_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
52491	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s4_linear_with_only_annotated_tags_and_branch ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
52501	public boolean isLocalLogin ( ) { return isLocalLogin ; }
52518	public static void main ( String [ ] args ) { System . exit ( filterExitCode ( startWindowsService ( System . out , System . err ) ) ) ; }
52531	boolean popNamespace ( String prefix ) { if ( prefix . startsWith ( XML_PREFIX ) ) { return _BOOL ; } Stack stack ; if ( ( stack = getPrefixStack ( prefix ) ) != _NULL ) { stack . pop ( ) ; return _BOOL ; } return _BOOL ; }
52543	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; }
52562	public void focusNextComponent ( Component aComponent ) { if ( aComponent != _NULL ) { aComponent . transferFocus ( ) ; } }
52574	protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , java . io . IOException { processRequest ( request , response ) ; }
52579	public static double lineDistance ( FeatureCollection line , String units ) throws TurfException { double d = _NUM ; for ( int i = _NUM ; i < line . getFeatures ( ) . size ( ) ; i ++ ) { d += lineDistance ( line . getFeatures ( ) . get ( i ) , units ) ; } return d ; }
52586	public Iterator < Integer > rsIterator ( ) { return data . rsStates . keySet ( ) . iterator ( ) ; }
52593	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s2_linear_with_both_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
52594	@ NonNull public Parcelable onSaveInstanceState ( ) { Bundle bundle = new Bundle ( ) ; bundle . putInt ( SAVEDINSTANCESTATE_FIRSTANIMATEDPOSITION , mFirstAnimatedPosition ) ; bundle . putInt ( SAVEDINSTANCESTATE_LASTANIMATEDPOSITION , mLastAnimatedPosition ) ; bundle . putBoolean ( SAVEDINSTANCESTATE_SHOULDANIMATE , mShouldAnimate ) ; return bundle ; }
52618	public String toFilter ( String operator ) { return ldapAttribute + operator + attributeName ; }
52651	private < T > Handler < AsyncResult < T >> resultHandler ( RoutingContext context , Handler < T > handler ) { return _NULL ; }
52655	static final Object unmaskNull ( Object key ) { return ( key == NULL_KEY ? _NULL : key ) ; }
52658	private void updateEnabling ( ) { base64 . setEnabled ( useBase64 . isSelected ( ) ) ; file . setEnabled ( useFile . isSelected ( ) ) ; browse . setEnabled ( useFile . isSelected ( ) ) ; refreshButton . setEnabled ( useFile . isSelected ( ) ) ; }
52664	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
52668	public void registerChangeListener ( ConfigurationChangeListener < ? super S > listener ) { registerChangeListener ( new ServerManagedObjectChangeListenerAdaptor < S > ( listener ) ) ; }
52672	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
52691	public DateHeader createDateHeader ( Calendar date ) { SIPDateHeader d = new SIPDateHeader ( ) ; if ( date == _NULL ) throw new NullPointerException ( _CHAR _NULL date _CHAR ) ; d . setDate ( date ) ; return d ; }
52716	public static ValueExp div ( ValueExp value1 , ValueExp value2 ) { return new BinaryOpValueExp ( DIV , value1 , value2 ) ; }
52721	public void rescheduling ( ) { rescheduled = _BOOL ; }
52733	public boolean isEmpty ( ) { return extOrdering . isEmpty ( ) ; }
52739	public static PrintRequestAttributeSet synchronizedView ( PrintRequestAttributeSet attributeSet ) { if ( attributeSet == _NULL ) { throw new NullPointerException ( ) ; } return new SynchronizedPrintRequestAttributeSet ( attributeSet ) ; }
52776	@ Override public boolean ready ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; return ( ( end - pos ) > _NUM ) || in . ready ( ) ; } }
52784	private BackupProtos . Resource packIcon ( int dpi , Bitmap icon ) { BackupProtos . Resource res = new BackupProtos . Resource ( ) ; res . dpi = dpi ; res . data = Utilities . flattenBitmap ( icon ) ; return res ; }
52806	public final boolean hasConflict ( DocumentBuilderSetting other ) { if ( other == _NULL ) { throw new NullPointerException ( _CHAR other _CHAR ) ; } if ( other == this ) { return _BOOL ; } return strategy . hasConflict ( other . strategy ) ; }
52821	@ Override public void cacheResult ( List < Foo > foos ) { for ( Foo foo : foos ) { if ( entityCache . getResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) ) == _NULL ) { cacheResult ( foo ) ; } else { foo . resetOriginalValues ( ) ; } } }
52855	public void updateCalendar ( int year , int month ) { mDisplayMonth = month ; mDisplayYear = year ; Calendar calendar = new GregorianCalendar ( year , month , _NUM ) ; mItemList = getItemList ( calendar ) ; notifyDataSetChanged ( ) ; }
52858	public final boolean isAnyModifiers ( ) { return _anyModifiers ; }
52871	protected PaperOnboardingPage toggleToPreviousElement ( ) { if ( mActiveElementIndex - _NUM >= _NUM ) { mActiveElementIndex -- ; return mElements . size ( ) > mActiveElementIndex ? mElements . get ( mActiveElementIndex ) : _NULL ; } else return _NULL ; }
52875	@ Override public synchronized void remove ( Member member ) { getTransport ( ) . remove ( member ) ; }
52879	public static PdfAction createLaunch ( PdfFileSpec fileSpec , boolean newWindow ) { return createLaunch ( fileSpec , _NULL , newWindow ) ; }
52909	public static final boolean isWhiteSpace ( char ch ) { if ( ch > _NUM ) return _BOOL ; return ch == _NUM || ch == _NUM || ch == _NUM || ch == _NUM ; }
52938	@ Override protected void onReceiveResult ( int resultCode , Bundle resultData ) { addressOutput = resultData . getString ( Constants . RESULT_DATA_KEY ) ; displayAddressOutput ( ) ; if ( resultCode == Constants . SUCCESS_RESULT ) { showToast ( getString ( R . string . address_found ) ) ; } addressRequested = _BOOL ; updateUiWidgets ( ) ; }
52939	protected final void closeSessionAndClearTokenInformation ( ) { if ( sessionTracker != _NULL ) { Session currentSession = sessionTracker . getOpenSession ( ) ; if ( currentSession != _NULL ) { currentSession . closeAndClearTokenInformation ( ) ; } } }
52940	public String toString ( ) { return _CHAR Keymap [ _CHAR + nm + _CHAR ] _CHAR + bindings ; }
52956	public static void sort ( long [ ] array , int start , int end ) { DualPivotQuicksort . sort ( array , start , end ) ; }
52978	public void dumpEntries ( Writer writer ) throws IOException { dumpEntries ( writer , blamer . getResourceEntries ( ) ) ; }
53015	public NodeList nodelist ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_NODELIST , new Object [ ] { getTypeString ( ) } ) ; return _NULL ; }
53043	public boolean isStale ( ) { return this . getParameterAsBoolean ( ParameterNames . STALE ) ; }
53056	public boolean toWeatherState ( ) { return to ; }
53057	public static List < String > split ( String content , Pattern pattern ) { List < String > result = Collections . emptyList ( ) ; if ( content != _NULL ) { result = Arrays . asList ( pattern . split ( content ) ) ; } return result ; }
53127	public Certificate toASN1Structure ( ) { return x509Certificate ; }
53146	static boolean isTextXml ( String mime ) { return mime != _NULL && ( mime . equals ( _CHAR text / xml _CHAR ) || mime . equals ( _CHAR text / xml - external - parsed - entity _CHAR ) || mime . startsWith ( _CHAR text / _CHAR ) && mime . endsWith ( _CHAR + xml _CHAR ) ) ; }
53155	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s10_one_commit_no_tag_repository ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
53156	public void addAttachment ( String attachmentText ) throws MessagingException { MimeBodyPart attachment = new MimeBodyPart ( ) ; attachment . setText ( attachmentText ) ; attachments . add ( attachment ) ; }
53167	protected String generatePeerId ( R context , String endpointId ) { return endpointId + _CHAR _ _CHAR + UUID . randomUUID ( ) . toString ( ) ; }
53169	ApiDescription subResourcesApi ( ApiProducer < ApiDescription > producer ) { return subResourceRouter . api ( producer ) ; }
53187	@ Override public List < Foo > findByUuid ( String uuid ) { return findByUuid ( uuid , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
53219	public SubResourceCollection isReadOnly ( final boolean readOnly ) { isReadOnly = readOnly ; return this ; }
53241	public static PrintJobAttributeSet unmodifiableView ( PrintJobAttributeSet attributeSet ) { if ( attributeSet == _NULL ) { throw new NullPointerException ( ) ; } return new UnmodifiablePrintJobAttributeSet ( attributeSet ) ; }
53248	public String mapMethodName ( String owner , String name , String desc ) { return name ; }
53279	public PersistentObject assertOneEntry ( ) throws EntryNotFoundException , UMSException { PersistentObject entry = _NULL ; while ( hasMoreElements ( ) ) { entry = next ( ) ; break ; } if ( entry == _NULL ) { throw new EntryNotFoundException ( ) ; } if ( hasMoreElements ( ) ) { abandon ( ) ; throw new UMSException ( i18n . getString ( IUMSConstants . MULTIPLE_ENTRY ) ) ; } return entry ; }
53302	void addFill ( int row , int col ) { RowView rv = getRow ( row ) ; if ( rv != _NULL ) { rv . fillColumn ( col ) ; } }
53307	public boolean read ( ) { if ( mBluetoothGatt == _NULL ) return _BOOL ; if ( mBroadcastCapabilitesCharacterisitc != _NULL ) { mBluetoothGatt . readCharacteristic ( mBroadcastCapabilitesCharacterisitc ) ; return _BOOL ; } else if ( mActiveSlotCharacteristic != _NULL ) { mBluetoothGatt . readCharacteristic ( mActiveSlotCharacteristic ) ; return _BOOL ; } else if ( mAdvertisingIntervalCharacteristic != _NULL ) { mBluetoothGatt . readCharacteristic ( mAdvertisingIntervalCharacteristic ) ; return _BOOL ; } return _BOOL ; }
53310	public boolean name_is_equal ( String p_name ) { if ( p_name == _NULL ) return _BOOL ; return p_name . equalsIgnoreCase ( pkg_name ) ; }
53318	public boolean hasMember ( Guid guid ) throws UMSException { return isMemberAtLevel ( guid . getDn ( ) , LEVEL_DIRECT ) ; }
53354	protected Entity defEntity ( String name , int type , String str ) { int len = str . length ( ) ; char data [ ] = new char [ len ] ; str . getChars ( _NUM , len , data , _NUM ) ; return defineEntity ( name , type , data ) ; }
53356	protected void storeLinkAnnotation ( PdfPage page , PdfLinkAnnotation annotation ) { List < PdfLinkAnnotation > pageAnnotations = linkAnnotations . get ( page ) ; if ( pageAnnotations == _NULL ) { pageAnnotations = new ArrayList < > ( ) ; linkAnnotations . put ( page , pageAnnotations ) ; } pageAnnotations . add ( annotation ) ; }
53389	@ Override public boolean isNativeLookAndFeel ( ) { return _BOOL ; }
53421	public boolean isEmpty ( ) { return extOrdering . isEmpty ( ) ; }
53480	private void ensureOpen ( ) throws IOException { if ( closed ) { throw new IOException ( _CHAR Stream closed _CHAR ) ; } }
53591	public void addTreeModelListener ( TreeModelListener l ) { listenerList . add ( TreeModelListener . class , l ) ; }
53594	public Boolean isMustUnderstand ( ) { return mustUnderstand ; }
53635	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s11_linear_no_tag_repository ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
53657	public String wrapIfKeywordOrBuiltIn ( String name ) { if ( KEYWORD_BUILT_IN_SET . contains ( name ) ) { return name + _CHAR _ _CHAR ; } return name ; }
53665	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return new XNumber ( left . num ( ) * right . num ( ) ) ; }
53666	@ Override public boolean isAbandonedConfig ( ) { return abandonedConfig != _NULL ; }
53674	public static PdfAction createSound ( PdfStream sound ) { return new PdfAction ( ) . put ( PdfName . S , PdfName . Sound ) . put ( PdfName . Sound , sound ) ; }
53692	public ContentDispositionHeader createContentDispositionHeader ( String contentDisposition ) throws ParseException { if ( contentDisposition == _NULL ) throw new NullPointerException ( _CHAR _NULL arg contentDisposition _CHAR ) ; ContentDisposition c = new ContentDisposition ( ) ; c . setDispositionType ( contentDisposition ) ; return c ; }
53752	public static PrintServiceAttributeSet unmodifiableView ( PrintServiceAttributeSet attributeSet ) { if ( attributeSet == _NULL ) { throw new NullPointerException ( ) ; } return new UnmodifiablePrintServiceAttributeSet ( attributeSet ) ; }
53766	public void updateAttributeSyntax ( Syntax syntax , Schema schema ) { attributeSyntaxPanel . update ( syntax , schema ) ; schemaElementPanel = attributeSyntaxPanel ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , attributeSyntaxPanel . getTitle ( ) . toString ( ) ) ; }
53768	public static InvalidScopeException create ( final String message , final OAuth2Request request ) { final Set < String > responseTypes = Utils . splitResponseType ( request . < String > getParameter ( RESPONSE_TYPE ) ) ; return new InvalidScopeException ( message , Utils . isOAuth2FragmentErrorType ( responseTypes ) ? FRAGMENT : QUERY ) ; }
53811	public void register ( ReplicationServerHandler rsHandler ) { startMonitoringPublisher ( ) ; connectedRSs . put ( rsHandler . getServerId ( ) , rsHandler ) ; }
53816	private float measureRun ( int start , int offset , int limit , boolean runIsRtl , FontMetricsInt fmi ) { return handleRun ( start , offset , limit , runIsRtl , _NULL , _NUM , _NUM , _NUM , _NUM , fmi , _BOOL ) ; }
53868	public static Attribute create ( AttributeType attributeType , String valueString ) { return create ( attributeType , attributeType . getNameOrOID ( ) , valueString ) ; }
53878	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s12_linear_with_RC_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
53883	public boolean isLocked ( ) { return isLocked ; }
53916	public String toString ( ) { return super . toString ( ) + _CHAR limit : _CHAR + limit + _CHAR indexOfNextAdd : _CHAR + indexOfNextAdd ; }
53939	public void addSetNext ( String pattern , String methodName , String paramType ) { addRule ( pattern , new SetNextRule ( methodName , paramType ) ) ; }
53951	public boolean containsObject ( NSObject obj ) { return set . contains ( obj ) ; }
53959	public ConnectionParameters bindPassword ( String password ) { bindPassword = password ; return this ; }
53998	public XObject operate ( XObject left , XObject right ) throws javax . xml . transform . TransformerException { return new XNumber ( left . num ( ) / right . num ( ) ) ; }
54009	public final void warn ( Object message , Throwable t ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_WARN ) ) { log ( SimpleLog . LOG_LEVEL_WARN , message , t ) ; } }
54021	public static byte [ ] encode ( byte [ ] data ) { return encode ( data , _NUM , data . length ) ; }
54041	public static Object fromIntValue ( int value ) { return BigInteger . valueOf ( value ) . toByteArray ( ) ; }
54043	private void addJobGroupName ( String groupName ) throws JobPersistenceException , ResourceException { addRepoListName ( groupName , JOB_GROUP_NAMES_RESOURCE_PATH , _CHAR names _CHAR ) ; }
54086	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { submitCycle = _BOOL ; forwardTo ( ) ; }
54120	public WorldType type ( ) { return type ; }
54129	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s12_linear_with_RC_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
54132	public CertificateList toASN1Structure ( ) { return x509CRL ; }
54142	public static < T extends Activity > BuilderImages < T > takeImages ( T activity ) { return new BuilderImages < T > ( activity ) ; }
54143	private void quitClicked ( ) { application . quitClicked ( getCurrentStep ( ) , this ) ; }
54160	public static java . math . BigDecimal parseDecimal ( String lexicalXSDDecimal ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseDecimal ( lexicalXSDDecimal ) ; }
54168	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return new XNumber ( java . lang . Math . floor ( m_arg0 . execute ( xctxt ) . num ( ) ) ) ; }
54169	public boolean isCli ( ) { return cliArg . isPresent ( ) ; }
54203	public void error ( Object message , Throwable exception ) { log ( Level . SEVERE , String . valueOf ( message ) , exception ) ; }
54229	private boolean loadSectionOrder ( ) { return loadSectionOrder ( serviceName + FILENAME_SUFFIX ) ; }
54230	public void remove ( int pos ) { if ( pos < _NUM ) { throw new IllegalArgumentException ( _CHAR index less than zero . '' ) ; } if ( pos > getComponentCount ( ) - _NUM ) { throw new IllegalArgumentException ( _CHAR index greater than the number of items . '' ) ; } super . remove ( pos ) ; }
54238	private Stack createPrefixStack ( String prefix ) { Stack fs = new Stack ( ) ; m_namespaces . put ( prefix , fs ) ; return fs ; }
54239	@ DataProvider ( name = _CHAR suffix _CHAR ) public Object [ ] [ ] suffixData ( ) { return new Object [ ] [ ] { { TEST_ROOT_DN_STRING } , { _CHAR cn = schema _CHAR } } ; }
54241	private void finishClicked ( ) { final WizardStep cStep = getCurrentStep ( ) ; if ( application . finishClicked ( cStep , this ) ) { updateUserData ( cStep ) ; } }
54271	public XObject elementAt ( final int i ) { return _stackFrames [ i ] ; }
54273	public static GenericIntermediateResponse newGenericIntermediateResponse ( ) { return new GenericIntermediateResponseImpl ( ) ; }
54293	public boolean isSupported ( ) { try { return KeyPairGenerator . getInstance ( keyAlgorithm . toUpperCase ( ) ) != _NULL ; } catch ( NoSuchAlgorithmException e ) { return _BOOL ; } }
54320	public void deleteLogFileAfterSuccess ( ) { if ( isEnabled ( ) ) { fileHandler . close ( ) ; logFile . delete ( ) ; } }
54332	public static void cacheResult ( Foo foo ) { getPersistence ( ) . cacheResult ( foo ) ; }
54389	public boolean equals ( Object schemaAttrType ) { if ( schemaAttrType instanceof UIType ) { UIType s = ( UIType ) schemaAttrType ; return ( s . attrType . equals ( attrType ) ) ; } return ( _BOOL ) ; }
54425	public static void cacheResult ( List < Foo > foos ) { getPersistence ( ) . cacheResult ( foos ) ; }
54444	public SessionExpiresHeader createSessionExpiresHeader ( int expires ) throws InvalidArgumentException { if ( expires < _NUM ) throw new InvalidArgumentException ( _CHAR bad value _CHAR + expires ) ; SessionExpires s = new SessionExpires ( ) ; s . setExpires ( expires ) ; return s ; }
54454	public void removeAssignableDynamicGroup ( AMAssignableDynamicGroup assignableDynamicGroup ) throws AMException , SSOException { removeAssignableDynamicGroup ( assignableDynamicGroup . getDN ( ) ) ; }
54467	public final void error ( Object message , Throwable t ) { if ( isLevelEnabled ( SimpleLog . LOG_LEVEL_ERROR ) ) { log ( SimpleLog . LOG_LEVEL_ERROR , message , t ) ; } }
54470	private boolean inNestedFrameSet ( ) { FrameSetView parent = ( FrameSetView ) getParent ( ) ; return ( parent . getParent ( ) instanceof FrameSetView ) ; }
54573	public void updateMatchingRule ( MatchingRule matchingRule , Schema schema ) { matchingRulePanel . update ( matchingRule , schema ) ; schemaElementPanel = matchingRulePanel ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , matchingRulePanel . getTitle ( ) . toString ( ) ) ; }
54582	@ Override public void cacheResult ( List < Foo > foos ) { for ( Foo foo : foos ) { if ( entityCache . getResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) ) == _NULL ) { cacheResult ( foo ) ; } else { foo . resetOriginalValues ( ) ; } } }
54589	public void addResourceRoutes ( ResourceRouter rootRouter , ResourceRouter realmRouter ) { }
54628	public XObject operate ( XObject right ) throws javax . xml . transform . TransformerException { return ( XString ) right . xstr ( ) ; }
54638	private final void appendContents ( StringBuffer buf , CharacterIterator iterator ) { int index = iterator . getBeginIndex ( ) ; int end = iterator . getEndIndex ( ) ; while ( index < end ) { iterator . setIndex ( index ++ ) ; buf . append ( iterator . current ( ) ) ; } }
54687	private FSLogoutStatus doHttpGet ( String providerId ) { FSUtils . debug . message ( _CHAR doHttpGet - Entered _CHAR ) ; if ( isWMLAgent ) { return doWMLGet ( providerId ) ; } else { return doHTMLGet ( providerId ) ; } }
54702	public boolean isIndeterminate ( ) { return isIndeterminate ; }
54711	public boolean runningWithGoal ( String ... goals ) throws MojoExecutionException { for ( String goal : goals ) { if ( goalFinder . runningWithGoal ( project , session , goal ) ) { return _BOOL ; } } return _BOOL ; }
54767	private String retrieveFullID ( String resourceID , String objectID ) { return resourceID + _CHAR + objectID ; }
54778	public static void sort ( short [ ] array , int start , int end ) { DualPivotQuicksort . sort ( array , start , end ) ; }
54796	boolean changeNumberIsInRange ( long changeNumber ) { return highestChangeNumber == - _NUM || changeNumber <= highestChangeNumber ; }
54814	public static void sort ( char [ ] array , int start , int end ) { DualPivotQuicksort . sort ( array , start , end ) ; }
54823	public static void sort ( int [ ] array , int start , int end ) { DualPivotQuicksort . sort ( array , start , end ) ; }
54832	void rescheduleForPurge ( long purgeAt ) { this . purgeAt = purgeAt ; cancel ( ) ; if ( ! isScheduled ( ) ) { SystemTimerPool . getTimerPool ( ) . schedule ( this , new Date ( purgeAt ) ) ; } else { sessionDebug . error ( _CHAR Unable to schedule destroyed session for purging '' ) ; } }
54893	public ContactHeader createContactHeader ( Address address ) { if ( address == _NULL ) throw new NullPointerException ( _CHAR _NULL arg address _CHAR ) ; Contact contact = new Contact ( ) ; contact . setAddress ( address ) ; return contact ; }
54898	public synchronized void dontUseGui ( ) { if ( okToUseGui ) { okToUseGui = _BOOL ; synchronized ( children ) { for ( Iterator i = children . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { Visibility v = getChildVisibility ( i . next ( ) ) ; if ( v != _NULL ) v . dontUseGui ( ) ; } } } }
54907	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
54925	@ Override public synchronized Object [ ] toArray ( ) { Object [ ] result = new Object [ elementCount ] ; System . arraycopy ( elementData , _NUM , result , _NUM , elementCount ) ; return result ; }
54934	public Set < String > search ( Subject adminSubject , String realm , String filter , int numOfEntries , boolean sortResults , boolean ascendingOrder ) throws EntitlementException { return search ( adminSubject , realm , filter , numOfEntries , sortResults , ascendingOrder , _NULL ) ; }
54971	private boolean isElementIndex ( int index ) { return index >= _NUM && index < size ; }
54986	public void addChangeListener ( ChangeListener l ) { styles . addChangeListener ( l ) ; }
54996	public boolean isCaseSensitive ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . caseSensitive ; }
55007	public void rectangle ( Rectangle rect ) { rectangle ( rect . getX ( ) , rect . getY ( ) , rect . getWidth ( ) , rect . getHeight ( ) ) ; }
55012	public boolean hasDetails ( String sku ) { return mSkuMap . containsKey ( sku ) ; }
55081	public static PdfTargetDictionary createChildTarget ( String namedDestination , String annotationIdentifier ) { return new PdfTargetDictionary ( PdfName . C ) . put ( PdfName . P , new PdfString ( namedDestination ) ) . put ( PdfName . A , new PdfString ( annotationIdentifier ) ) ; }
55082	public boolean isLetterOrDigitAhead ( ) { int pos = currentPosition ; while ( pos < maxPosition ) { if ( Character . isLetterOrDigit ( str . charAt ( pos ) ) ) return _BOOL ; pos ++ ; } return _BOOL ; }
55165	public boolean isTimedOut ( ) { return timeout ; }
55190	public static void sort ( Object [ ] array , int start , int end ) { ComparableTimSort . sort ( array , start , end ) ; }
55246	private static void disableConsoleLogging ( final Logger logger ) { if ( ! _CHAR _BOOL _CHAR . equalsIgnoreCase ( System . getenv ( _CHAR OPENDJ_LOG_TO_STDOUT _CHAR ) ) ) { logger . setUseParentHandlers ( _BOOL ) ; } }
55257	private void closeClicked ( ) { application . closeClicked ( getCurrentStep ( ) , this ) ; }
55278	public boolean doesPackageExist ( ) { return ( countPackages ( _BOOL ) > _NUM ) ; }
55296	public void initialize ( Map configParams ) { }
55299	@ Deprecated public boolean acceptFilename ( String fileName ) { return acceptFile ( _NULL , fileName ) ; }
55331	private boolean canBeFetched ( int i ) { AbstractNodeTask task = waitingQueue . get ( i ) ; return workingList . get ( task . getNode ( ) ) == _NULL ; }
55346	@ Override public void entryReadError ( EntryReadErrorEvent ev ) { searchResult = _NULL ; errorSearchingPanel . setError ( ev . getDN ( ) , ev . getError ( ) ) ; delete . setVisible ( _BOOL ) ; saveChanges . setVisible ( _BOOL ) ; cardLayout . show ( mainPanel , ERROR_SEARCHING ) ; displayedEntryPanel = _NULL ; }
55391	void register ( Itr itr ) { head = new Node ( itr , head ) ; }
55399	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s1_linear_with_only_annotated_tags ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
55439	private boolean tokenClientExists ( String clientId , String relam , Context context ) { try { clientRegistrationStore . get ( clientId , relam , context ) ; } catch ( InvalidClientException | NotFoundException e ) { return _BOOL ; } return _BOOL ; }
55461	protected boolean accept ( XSLTVisitor visitor ) { return visitor . visitLiteralResultElement ( this ) ; }
55520	@ BeforeClass public static void initClass ( ) { scenario = Scenarios . s4_linear_with_only_annotated_tags_and_branch ( ) ; if ( Misc . isDebugMode ( ) ) { System . out . println ( _CHAR git repository created under : _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
55523	public static List < Foo > findByField2 ( boolean field2 ) { return getPersistence ( ) . findByField2 ( field2 ) ; }
55540	private void previousClicked ( ) { WizardStep cStep = getCurrentStep ( ) ; application . previousClicked ( cStep , this ) ; setCurrentStep ( application . getPreviousWizardStep ( cStep ) ) ; }
55557	public static ComponentUI createUI ( JComponent c ) { return new SynthLabelUI ( ) ; }
55600	public static GenericExtendedResult newGenericExtendedResult ( final ResultCode resultCode ) { Reject . ifNull ( resultCode ) ; return new GenericExtendedResultImpl ( resultCode ) ; }
55608	public static SearchResultEntry newSearchResultEntry ( final DN name ) { final Entry entry = new LinkedHashMapEntry ( ) . setName ( name ) ; return new SearchResultEntryImpl ( entry ) ; }
55630	@ Override public Promise < ResourceResponse , ResourceException > handleRead ( Context context , ReadRequest request ) { try { return connectionFactory . getConnection ( ) . readAsync ( new UpdateContext ( context ) , copyOfReadRequest ( request ) . setResourcePath ( updateStore . concat ( request . getResourcePathObject ( ) ) ) ) ; } catch ( ResourceException e ) { return e . asPromise ( ) ; } }
55631	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public Enumeration < Permission > elements ( ) { synchronized ( this ) { return ( Enumeration ) Collections . enumeration ( perms . values ( ) ) ; } }
55661	public static SubtreeDeleteRequestControl newControl ( final boolean isCritical ) { return isCritical ? CRITICAL_INSTANCE : NONCRITICAL_INSTANCE ; }
55671	private void addEntries ( String ... dns ) throws Exception { for ( String dn : dns ) { addEntry ( dn ) ; } }
55679	@ Override public void onWZAudioSampleListenerRelease ( ) { mUpdateThread . shutdown ( ) ; mUpdateThread = _NULL ; }
55692	public static boolean parseBoolean ( String lexicalXSDBoolean ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseBoolean ( lexicalXSDBoolean ) ; }
55703	public static boolean isHoneycomb ( ) { return getSdkVersion ( ) >= Build . VERSION_CODES . HONEYCOMB ; }
55812	private static boolean canUseMetaStep ( UninstantiatedDescribable ud ) { return canUseSymbol ( ud ) && StepDescriptor . metaStepsOf ( ud . getSymbol ( ) ) . size ( ) == _NUM ; }
55854	boolean isBaseHeader ( ) { return value == BASE_HEADER ; }
55887	public static ManagementContext newManagementContext ( Connection connection , LDAPProfile profile ) { Reject . ifNull ( connection , profile ) ; LDAPDriver driver = new LDAPDriver ( connection , profile ) ; LDAPManagementContext context = new LDAPManagementContext ( driver ) ; driver . setManagementContext ( context ) ; return context ; }
55909	public StringBuilder replace ( int start , int end , String string ) { replace0 ( start , end , string ) ; return this ; }
55919	public static boolean isTrustedSource ( InetAddress source ) throws SessionException { if ( trustedSources == _NULL ) { trustedSources = getTrustedSourceList ( ) ; } return trustedSources . contains ( source ) ; }
55926	public void resetProgressLogs ( ) { progressPanel . resetLogs ( ) ; }
55934	public boolean allowsAllContentTypes ( ) { if ( mediaRange == _NULL ) return _BOOL ; else return mediaRange . type . compareTo ( STAR ) == _NUM ; }
55958	public static long consumePowerFromAllFaces ( World world , BlockPos pos , long amount , boolean simulated ) { long recievedPower = _NUM ; for ( final ITeslaProducer producer : getConnectedCapabilities ( TeslaCapabilities . CAPABILITY_PRODUCER , world , pos ) ) recievedPower += producer . takePower ( amount , simulated ) ; return recievedPower ; }
55977	public Builder signer ( PrivateKeyEntry signer ) { this . signer = signer ; return this ; }
55981	public boolean exists ( ) { return ( ! sc . isNewEntry ( ) ) ; }
56013	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return new XNumber ( getArg0AsNumber ( xctxt ) ) ; }
56037	public void acceptDrop ( int dropAction ) { getDropTargetContext ( ) . acceptDrop ( dropAction ) ; }
56041	public ListeningPoint createListeningPoint ( int port , String transport ) throws TransportNotSupportedException , InvalidArgumentException { if ( super . stackAddress == _NULL ) throw new NullPointerException ( _CHAR Stack does not have a default IP Address ! _CHAR ) ; return this . createListeningPoint ( super . stackAddress , port , transport ) ; }
56155	protected void logToSkipWriter ( List < StringBuilder > lines , LocalizableMessage message ) { entriesIgnored . incrementAndGet ( ) ; BufferedWriter skipWriter = importConfig . getSkipWriter ( ) ; if ( skipWriter != _NULL ) { logToWriter ( skipWriter , lines , message ) ; } }
56233	@ Override public boolean accept ( File dir , String name ) { for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( name , wildcard , caseSensitivity ) ) { return _BOOL ; } } return _BOOL ; }
56235	public final void putAll ( final Problems problems ) { if ( problems == this ) { throw new IllegalArgumentException ( _CHAR putAll to self _CHAR ) ; } this . problems . addAll ( problems . problems ) ; }
56265	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR LDAPModification ( type = _CHAR ) . append ( modificationType ) ; buffer . append ( _CHAR , attr = _CHAR ) ; attribute . toString ( buffer ) ; buffer . append ( _CHAR } ) _CHAR ) ; }
56321	public static PrintServiceAttributeSet synchronizedView ( PrintServiceAttributeSet attributeSet ) { if ( attributeSet == _NULL ) { throw new NullPointerException ( ) ; } return new SynchronizedPrintServiceAttributeSet ( attributeSet ) ; }
