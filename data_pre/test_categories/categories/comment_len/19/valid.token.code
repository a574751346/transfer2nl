18	protected boolean rightOn ( Vector2 a , Vector2 b , Vector2 p ) { return Segment . getLocation ( p , a , b ) <= _NUM ; }
19	@ Override public XSModel load ( LSInput is ) { try { fGrammarPool . clear ( ) ; return ( ( XSGrammar ) fSchemaLoader . loadGrammar ( fSchemaLoader . dom2xmlInputSource ( is ) ) ) . toXSModel ( ) ; } catch ( Exception e ) { fSchemaLoader . reportDOMFatalError ( e ) ; return _NULL ; } }
35	@ NotNull public static List < Color > resolveMultipleColors ( @ NotNull RenderResources resources , @ Nullable ResourceValue value , @ NotNull Project project ) { return resolveMultipleColors ( resources , value , project , _NUM ) ; }
76	static String makePrivateSnippetName ( Location location , String name ) { return name + _CHAR # _CHAR + location . baseInputName ( ) ; }
232	@ Override protected boolean isValid ( int ch ) { return XML11Char . isXML11Valid ( ch ) ; }
301	public int size ( ) { return m_map . size ( ) ; }
359	protected SecureSendNotificationQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
372	public static SM_SYSTEM_MESSAGE STR_GUILD_DISPERSE_REQUESTED ( String datetime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , datetime0 ) ; }
467	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCDeBuffPhysical_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
492	public void goToNextColor ( ) { mColorIndex = ( mColorIndex + _NUM ) % ( mColors . length ) ; }
545	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPAttack_Instant_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
648	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Rebirth_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
736	public int hashCode ( ) { return bytes . hashCode ( ) ; }
740	public boolean unitCanReadFrom ( Unit u , Value v ) { return valueTouchesRWSet ( readSet ( u ) , v , u . getUseBoxes ( ) ) ; }
810	public AccountLookupContactsQuery lookupContacts ( UserActor actor , AccountLookupContactsService service ) { return new AccountLookupContactsQuery ( getClient ( ) , actor , service ) ; }
853	public static Charset toCharset ( String charset ) { return charset == _NULL ? Charset . defaultCharset ( ) : Charset . forName ( charset ) ; }
861	public static boolean modelSupportsInstantRun ( @ NotNull AndroidGradleModel model ) { GradleVersion modelVersion = model . getModelVersion ( ) ; return modelVersion == _NULL || modelVersion . compareTo ( InstantRunManager . MINIMUM_GRADLE_PLUGIN_VERSION ) >= _NUM ; }
896	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoFly_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
1025	private static Optional < Map . Entry < String , String >> createTagEntry ( Map . Entry < String , MetricValue > tag_entry ) { final Optional < String > opt_tag_value = tag_entry . getValue ( ) . asString ( ) ; return opt_tag_value . map ( _NULL ) ; }
1039	private boolean groupsOverlap ( String [ ] possibilities ) { if ( groups == _NULL ) return _BOOL ; for ( int i = _NUM ; i < possibilities . length ; i ++ ) { if ( groups . contains ( possibilities [ i ] ) ) return _BOOL ; } return _BOOL ; }
1093	public static void deleteCachedLocations ( ) { FileHelper . deleteFile ( LOCATION_FILE ) ; SAVED_LOCATIONS . clear ( ) ; System . out . println ( _CHAR Deleted cached locations . '' ) ; }
1146	public static double sinh ( double x ) { return ( Math . exp ( x ) - Math . exp ( - x ) ) / _NUM . _NUM ; }
1152	public String stripContentExtras ( String contentType ) { int index = contentType . indexOf ( _CHAR ) ; return ( index >= _NUM ) ? contentType . substring ( _NUM , index ) : contentType ; }
1330	public Builder cacheConcurrencyLevel ( int cacheConcurrencyLevel ) { this . cacheConcurrencyLevel = cacheConcurrencyLevel ; return this ; }
1361	public V resultAt ( N stmt , D value ) { return val . get ( stmt , value ) ; }
1406	private void cancelAlarm ( Context context ) { cancelAlarmOnSystem ( context , getPendingAlarmIntent ( context ) ) ; }
1408	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCMPHeal_Instant_HEAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
1412	public void reset ( Matrix newCenter ) { this . center = newCenter ; this . N = _NUM ; this . sum = new Matrix ( center . getRowDimension ( ) , center . getColumnDimension ( ) ) ; this . squaredSum = new Matrix ( center . getRowDimension ( ) , center . getColumnDimension ( ) ) ; }
1481	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeBoostSkillAttack_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
1586	public void translateVect ( Vector3f data ) { data . x += m03 ; data . y += m13 ; data . z += m23 ; }
1675	public < R > Plan < R > then ( Function7 < T1 , T2 , T3 , T4 , T5 , T6 , T7 , R > selector ) { if ( selector == _NULL ) { throw new NullPointerException ( ) ; } return new Plan7 < T1 , T2 , T3 , T4 , T5 , T6 , T7 , R > ( this , selector ) ; }
1795	public static float calculateLeft ( float top , float right , float bottom , float targetAspectRatio ) { final float height = bottom - top ; return right - ( targetAspectRatio * height ) ; }
1796	static protected boolean hasVowel ( String [ ] phones , int index ) { for ( int i = index ; i < phones . length ; i ++ ) { if ( isVowel ( phones [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
1829	private byte [ ] read ( FSDataInputStream channel , int size ) { byte [ ] byteBffer = new byte [ size ] ; try { channel . readFully ( byteBffer ) ; } catch ( Exception e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return byteBffer ; }
1839	public boolean containsKey ( int key ) { return contains ( key ) ; }
1939	@ Nullable ( _CHAR when haystack does n _CHAR_CHAR ) @ Contract ( pure = true ) public static String trimEndOrNullize ( @ NotNull String haystack , @ NotNull String needle ) { if ( haystack . endsWith ( needle ) ) { return haystack . substring ( 0 , haystack . length ( ) - needle . length ( ) ) ; } return null ; }
1944	public static char [ ] encode ( byte [ ] in , int iLen ) { return encode ( in , _NUM , iLen ) ; }
1956	public static String joinStringFrom ( final String arr [ ] , final int start ) { return joinStringFrom ( arr , start , _CHAR _CHAR ) ; }
1975	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
2150	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCDeBuffMental_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
2178	public boolean geom_pta ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR geom - pta _CHAR ) ; }
2341	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPATK_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
2534	public MessagesGetQuery out ( Boolean value ) { return unsafeParam ( _CHAR out _CHAR , value ) ; }
2588	public static void sendExceptionCount ( ) { sMoveToFrontExceptionHistogram . commitHistogram ( ) ; }
2596	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysBlock_ME_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
2621	public void Notify ( Object oSender , Object oParams ) { double dProgress = ( ( Double ) oParams ) . doubleValue ( ) ; System . err . print ( _CHAR Comparison _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , dProgress ) + _CHAR \ r _CHAR ) ; }
2622	public static double cosh ( double x ) { return ( Math . exp ( x ) + Math . exp ( - x ) ) / _NUM . _NUM ; }
2646	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
2678	public static SM_SYSTEM_MESSAGE STR_SUBMIT_GM_PETITION_OK_TO_GM ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
2684	protected void hideModels ( Iterable < EpoxyModel < ? >> models ) { showModels ( models , _BOOL ) ; }
2701	public synchronized boolean canThreadDecoding ( Thread t ) { ThreadStatus status = mThreadStatus . get ( t ) ; if ( status == _NULL ) { return _BOOL ; } boolean result = ( status . mState != State . CANCEL ) ; return result ; }
2729	protected boolean leftOn ( Vector2 a , Vector2 b , Vector2 p ) { return Segment . getLocation ( p , a , b ) >= _NUM ; }
2731	public void writeContentType ( String type ) throws IOException { writeHeader ( HttpWriter . CONTENT_TYPE , type ) ; }
2805	public void addProperty ( String property , Boolean value ) { add ( property , createJsonElement ( value ) ) ; }
2813	@ Override public String toString ( ) { StringBuilder builder = new StringBuilder ( super . toString ( ) ) ; builder . append ( _CHAR ( _CHAR ) ; builder . append ( new String ( magicNumbers ) ) ; builder . append ( _CHAR , _CHAR ) ; builder . append ( this . byteOffset ) ; builder . append ( _CHAR ) _CHAR ) ; return builder . toString ( ) ; }
2863	public static boolean isArrowKey ( KeyEvent e ) { int code = e . getKeyCode ( ) ; return code >= KeyEvent . VK_LEFT && code <= KeyEvent . VK_DOWN ; }
2891	public Builder addColumnsDouble ( String ... columnNames ) { for ( String s : columnNames ) addColumnDouble ( s ) ; return this ; }
2924	public PollsEditQuery addAnswers ( String value ) { return unsafeParam ( _CHAR add_answers _CHAR , value ) ; }
2959	public static SM_SYSTEM_MESSAGE STR_MSG_CHANGE_CHANNEL5 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2961	@ Override public void shutdown ( ) { ExecutorServices . shutdown ( executorService ) ; }
2977	public boolean isSet ( _Fields field ) { if ( field == _NULL ) { throw new IllegalArgumentException ( ) ; } switch ( field ) { case SEQUENCE_ID : return isSetSequenceId ( ) ; case STATUS : return isSetStatus ( ) ; case MESSAGE : return isSetMessage ( ) ; } throw new IllegalStateException ( ) ; }
2995	private void showAtCalculatedPosition ( ) { if ( mAnchorBelow ) { showAtLocation ( mAnchorView . getRootView ( ) , Gravity . TOP | Gravity . START , mXPosition , mYPosition ) ; } else { showAtLocation ( mAnchorView . getRootView ( ) , Gravity . BOTTOM | Gravity . START , mXPosition , mYPosition ) ; } }
3002	public boolean isDrawSlicesUnderHoleEnabled ( ) { return mDrawSlicesUnderHole ; }
3017	private void closeWriterExecutionService ( ExecutorService service ) throws CarbonDataWriterException { try { service . shutdown ( ) ; service . awaitTermination ( _NUM , TimeUnit . DAYS ) ; } catch ( InterruptedException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; throw new CarbonDataWriterException ( e . getMessage ( ) ) ; } }
3087	static KeyPair createSecp256k1KeyPair ( ) throws NoSuchProviderException , NoSuchAlgorithmException , InvalidAlgorithmParameterException { KeyPairGenerator keyPairGenerator = KeyPairGenerator . getInstance ( _CHAR ECDSA _CHAR , _CHAR BC _CHAR ) ; ECGenParameterSpec ecGenParameterSpec = new ECGenParameterSpec ( _CHAR secp256k1 _CHAR ) ; keyPairGenerator . initialize ( ecGenParameterSpec , new SecureRandom ( ) ) ; return keyPairGenerator . generateKeyPair ( ) ; }
3122	public boolean containsKey ( K key ) { return contains ( key ) ; }
3189	private void updateButtonState ( ) { Button clearButton = mDialog . getButton ( AlertDialog . BUTTON_POSITIVE ) ; if ( clearButton != _NULL ) clearButton . setEnabled ( ! mSelectedOptions . isEmpty ( ) ) ; }
3206	@ Override public void ignorableWhitespace ( char [ ] ch , int start , int length ) throws SAXException { writeText4Links ( ) ; writeEscUTF16 ( new String ( ch ) , start , length , _BOOL ) ; super . ignorableWhitespace ( ch , start , length ) ; }
3215	@ Override public boolean isFragmentResolved ( ) throws XNIException { return fIsFragmentResolved ; }
3237	public boolean matchesCurrentAvailableDevices ( @ NotNull Collection < IDevice > devices ) { if ( myDevicesAvailableAtLaunch . size ( ) != devices . size ( ) ) { return _BOOL ; } for ( IDevice d : devices ) { if ( ! myDevicesAvailableAtLaunch . contains ( d . getSerialNumber ( ) ) ) { return _BOOL ; } } return _BOOL ; }
3241	public void beforeFirst ( ) { close ( ) ; currentBlkNum = _NUM ; }
3387	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_Instant_HEAL_A_TO_ME ( int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillcaster , skillname ) ; }
3432	public static float calculateTop ( float left , float right , float bottom , float targetAspectRatio ) { final float width = right - left ; return bottom - ( width / targetAspectRatio ) ; }
3560	public boolean contains ( int x , int y ) { return contains ( ( double ) x , ( double ) y ) ; }
3637	public < R > Plan < R > then ( BiFunction < T1 , T2 , R > selector ) { if ( selector == _NULL ) { throw new NullPointerException ( ) ; } return new Plan2 < T1 , T2 , R > ( this , selector ) ; }
3651	public static boolean isPercentage ( String value ) { if ( ! isInteger ( value ) ) { return _BOOL ; } Integer integer = Integer . valueOf ( value ) ; return integer >= _NUM && integer <= _NUM ; }
3732	private void createRecordHolderQueue ( File [ ] listFiles ) { this . recordHolderHeap = new PriorityQueue < SortTempFileChunkHolder > ( listFiles . length ) ; }
3739	protected void hideModels ( EpoxyModel < ? > ... models ) { hideModels ( Arrays . asList ( models ) ) ; }
3883	public void init ( Tailer tailer ) { }
3885	public static ToolbarTapTarget forToolbarNavigationIcon ( Toolbar toolbar , CharSequence title ) { return forToolbarNavigationIcon ( toolbar , title , _NULL ) ; }
3888	public PointsToSet reachingObjects ( PointsToSet s , SootField f ) { return reachingObjects ( f ) ; }
3896	public boolean isSet ( _Fields field ) { if ( field == _NULL ) { throw new IllegalArgumentException ( ) ; } switch ( field ) { case AVERAGE_LOAD : return isSetAverageLoad ( ) ; case OLD_GC : return isSetOldGC ( ) ; case THREAD_NUM : return isSetThreadNum ( ) ; case QUEUE_SIZE : return isSetQueueSize ( ) ; case METHOD_QPS_MAP : return isSetMethodQpsMap ( ) ; } throw new IllegalStateException ( ) ; }
3924	public FriendsGetOnlineQuery listId ( Integer value ) { return unsafeParam ( _CHAR list_id _CHAR , value ) ; }
3972	public static void finalizeFirstRunFlowState ( Context context , Bundle data ) { FirstRunStatus . setFirstRunFlowComplete ( context , _BOOL ) ; setFirstRunFlowSignInAccountName ( context , data . getString ( FirstRunActivity . RESULT_SIGNIN_ACCOUNT_NAME ) ) ; setFirstRunFlowSignInSetupSync ( context , data . getBoolean ( FirstRunActivity . RESULT_SHOW_SYNC_SETTINGS ) ) ; }
3984	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysHit_ME_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
3986	public static boolean isFileOlder ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) < timeMillis ; }
4000	@ Override public final void writeChar ( int v ) throws IOException { work [ _NUM ] = ( byte ) v ; work [ _NUM ] = ( byte ) ( v >> _NUM ) ; dis . write ( work , _NUM , _NUM ) ; }
4125	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
4140	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DeboostHealAmount_A_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
4167	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HostileUp_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
4247	public static StorableActivityFence during ( @ ActivityType int ... activityTypes ) { return new StorableActivityFence ( activityTypes , DURING_TYPE ) ; }
4311	private void checkHeaderEmpty ( String command , String header ) { if ( ! Strings . isNullOrEmpty ( header ) ) { error ( _CHAR command _CHAR has unexpected arguments _CHAR , command ) ; } }
4381	public void Notify ( Object oSender , Object oParams ) { double dProgress = ( ( Double ) oParams ) . doubleValue ( ) ; System . err . print ( _CHAR Comparison _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , dProgress ) + _CHAR \ r _CHAR ) ; }
4462	public static boolean isSuccess ( Map < String , ? extends Object > results ) { if ( ServiceUtil . isError ( results ) || ServiceUtil . isFailure ( results ) ) { return _BOOL ; } return _BOOL ; }
4543	public static short convert ( String stringValue ) { if ( Strings . isNullOrEmpty ( stringValue ) || TypeUtils . MISSING_INDICATORS . contains ( stringValue ) ) { return ( short ) ColumnType . SHORT_INT . getMissingValue ( ) ; } Matcher matcher = COMMA_PATTERN . matcher ( stringValue ) ; return Short . parseShort ( matcher . replaceAll ( _CHAR _CHAR ) ) ; }
4621	public boolean do_mhp ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR do - mhp _CHAR ) ; }
4637	public void cleanup ( ) { this . jumpFn . clear ( ) ; this . incoming . clear ( ) ; this . endSummary . clear ( ) ; this . val . clear ( ) ; this . cache . clear ( ) ; }
4659	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_GUILD_EXP ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
4662	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSpellATK_Instant_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
4685	public static float sin2 ( float fValue ) { fValue = reduceSinAngle ( fValue ) ; if ( Math . abs ( fValue ) <= Math . PI / _NUM ) { return ( float ) Math . sin ( fValue ) ; } return ( float ) Math . cos ( Math . PI / _NUM - fValue ) ; }
4712	public boolean containsValue ( Object value ) { return indexOfValue ( value ) >= _NUM ; }
4779	public void disable ( ) { LOGGER . debug ( _CHAR disable listener _CHAR ) ; setEnabled ( _BOOL ) ; }
4806	public boolean isDashedHighlightLineEnabled ( ) { return mHighlightDashPathEffect == _NULL ? _BOOL : _BOOL ; }
4830	private void clustering ( ) { clustering ( CLUSTER_DEFAULT_SIZE , _CHAR Average _CHAR ) ; }
4848	public static ToolbarTapTarget forToolbarNavigationIcon ( android . widget . Toolbar toolbar , CharSequence title , @ Nullable CharSequence description ) { return new ToolbarTapTarget ( toolbar , _BOOL , title , description ) ; }
4855	@ Override public String object2Relation ( String fieldType ) { if ( fieldType != _NULL ) { if ( fieldType . equals ( _CHAR boolean _CHAR ) || fieldType . equals ( _CHAR java . lang . Boolean _CHAR ) ) { return _CHAR integer _CHAR ; } } return _NULL ; }
4856	public static float px2dp ( float px ) { if ( mMetrics == _NULL ) { Log . e ( _CHAR MPChartLib - Utils _CHAR , _CHAR Utils NOT INITIALIZED . You need to call Utils . init ( ... ) at least once before _CHAR + _CHAR calling Utils . px2dp ( ... ) . Otherwise conversion does not _CHAR + _CHAR take place . '' ) ; return px ; } DisplayMetrics metrics = mMetrics ; float dp = px / ( metrics . densityDpi / _NUM ) ; return dp ; }
4933	public V putIfAbsent ( long key , V value ) { int index = insertionIndex ( key ) ; if ( index < _NUM ) return _values [ - index - _NUM ] ; return doPut ( key , value , index ) ; }
4936	private String pluginVersion ( ) { return ( ( PluginDescriptor ) getPluginContext ( ) . get ( _CHAR pluginDescriptor _CHAR ) ) . getVersion ( ) ; }
4941	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OpenAerial_ME_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
5028	@ Override public List < Period > generateRollingPeriods ( Date date ) { date = createPeriod ( date ) . getStartDate ( ) ; return generateRollingPeriods ( createLocalDateUnitInstance ( date ) ) ; }
5087	public static boolean isUSPhoneNumber ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; String normalizedPhone = stripCharsInBag ( s , phoneNumberDelimiters ) ; return ( isInteger ( normalizedPhone ) && normalizedPhone . length ( ) == digitsInUSPhoneNumber ) ; }
5199	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Heal_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
5237	public boolean addDataSetElement ( DataElement dataElement ) { DataSetElement element = new DataSetElement ( this , dataElement , _NULL ) ; dataElement . getDataSetElements ( ) . add ( element ) ; return dataSetElements . add ( element ) ; }
5441	public static SM_SYSTEM_MESSAGE STR_MSG_DAY_CANNOT_SELL_NPC ( long value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5446	public static boolean isTrue ( String expression , Map < String , Object > vars ) { Object result = evaluate ( expression , vars ) ; return ( result != _NULL && result instanceof Boolean ) ? ( Boolean ) result : _BOOL ; }
5509	public static ToolbarTapTarget forToolbarNavigationIcon ( android . widget . Toolbar toolbar , CharSequence title ) { return forToolbarNavigationIcon ( toolbar , title , _NULL ) ; }
5530	public boolean containsKey ( Object key ) { return doGet ( key ) != _NULL ; }
5597	@ NonNull public Optional < T > or ( @ NonNull Optional < T > alternative ) { return isDefined ( ) ? this : alternative ; }
5643	public ApplicationType createApplicationTypeFor ( Application app , Jvm jvm , String mainClass ) { String [ ] appDesc = map . get ( mainClass ) ; if ( appDesc != _NULL ) { return new MainClassApplicationType ( app , appDesc [ NAME ] , appDesc [ DESCRIPTION ] , appDesc [ ICON_PATH ] ) ; } return _NULL ; }
5645	@ Override public boolean hasFeature ( String feature , String version ) { return super . hasFeature ( feature , version ) || feature . equalsIgnoreCase ( _CHAR psvi _CHAR ) ; }
5748	public static boolean hasCapability ( @ Nullable Entity targetEntity ) { if ( targetEntity == _NULL ) return _BOOL ; return targetEntity . hasCapability ( CYBERWARE_CAPABILITY , EnumFacing . EAST ) ; }
5770	@ Override public void occurrence ( short occurrence , Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . occurrence ( occurrence , augs ) ; if ( fDTDContentModelHandler != _NULL ) { fDTDContentModelHandler . occurrence ( occurrence , augs ) ; } }
5843	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM . _NUM - _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM , _NUM } ; }
6089	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPATK_Instant_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
6110	static TxnMgrAdminProxy create ( TxnManager txnMgr , Uuid id ) { if ( txnMgr instanceof RemoteMethodControl ) { return new ConstrainableTxnMgrAdminProxy ( txnMgr , id , _NULL ) ; } else { return new TxnMgrAdminProxy ( txnMgr , id ) ; } }
6140	@ Override public void onAdsLoaded ( ) { WritableMap adsManagersState = Arguments . createMap ( ) ; for ( String key : mAdsManagers . keySet ( ) ) { NativeAdsManager adsManager = mAdsManagers . get ( key ) ; adsManagersState . putBoolean ( key , adsManager . isLoaded ( ) ) ; } sendAppEvent ( _CHAR CTKNativeAdsManagersChanged _CHAR , adsManagersState ) ; }
6146	public static boolean isAccountOnAnyGameServer ( Account acc ) { for ( GameServerInfo gsi : getGameServers ( ) ) { if ( gsi . isAccountOnGameServer ( acc . getId ( ) ) ) { return _BOOL ; } } return _BOOL ; }
6202	public PlacesCheckinQuery latitude ( Float value ) { return unsafeParam ( _CHAR latitude _CHAR , value ) ; }
6217	private void populatePrevScanNarrowing ( ) { if ( ScanContainer . scanContainer . isScanRefinable ( ) ) { refine_by_last_scan . setVisibility ( View . VISIBLE ) ; exResPrevScan . setText ( String . format ( getString ( R . string . last_scan ) , ScanContainer . scanContainer . getPrevScanName ( ) ) ) ; } else { refine_by_last_scan . setVisibility ( View . GONE ) ; } }
6243	public static Charset toCharset ( String charset ) { return charset == _NULL ? Charset . defaultCharset ( ) : Charset . forName ( charset ) ; }
6314	@ Deprecated public static void init ( Resources res ) { mMetrics = res . getDisplayMetrics ( ) ; mMinimumFlingVelocity = ViewConfiguration . getMinimumFlingVelocity ( ) ; mMaximumFlingVelocity = ViewConfiguration . getMaximumFlingVelocity ( ) ; }
6475	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
6499	public synchronized static void ensureSecurityManager ( @ SuppressWarnings ( _CHAR UnusedParameters _CHAR ) String [ ] args ) { SecurityPolicyLoader . load ( SystemBoot . class , _CHAR policy . all _CHAR ) ; System . setSecurityManager ( new RMISecurityManager ( ) ) ; }
6503	private void writeObject ( java . io . ObjectOutputStream out ) throws IOException { }
6590	public static boolean bernoulli ( double p ) { if ( ! ( p >= _NUM . _NUM && p <= _NUM . _NUM ) ) throw new IllegalArgumentException ( _CHAR Probability must be between _NUM . _NUM and _NUM . _NUM _CHAR ) ; return uniform ( ) < p ; }
6605	public TableSwitchStmt newTableSwitchStmt ( Value key , int lowIndex , int highIndex , List < ? extends Unit > targets , Unit defaultTarget ) { return new JTableSwitchStmt ( key , lowIndex , highIndex , targets , defaultTarget ) ; }
6623	private boolean isRemovedFromClass ( String columnName ) { return ! mTableModel . containsColumn ( columnName ) ; }
6677	public static Bundle createFragmentArgsForSite ( String url ) { Bundle fragmentArgs = new Bundle ( ) ; String origin = UrlUtilities . formatUrlForSecurityDisplay ( URI . create ( url ) , _BOOL ) ; fragmentArgs . putString ( SingleWebsitePreferences . EXTRA_ORIGIN , origin ) ; return fragmentArgs ; }
6714	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPTransfer_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
6755	public void addProperty ( String property , String value ) { add ( property , createJsonElement ( value ) ) ; }
6887	public boolean isSet ( _Fields field ) { if ( field == _NULL ) { throw new IllegalArgumentException ( ) ; } switch ( field ) { case SERVICE_NAME : return isSetServiceName ( ) ; case SEQUENCE_ID : return isSetSequenceId ( ) ; case CALL_TYPE : return isSetCallType ( ) ; case TIMEOUT : return isSetTimeout ( ) ; } throw new IllegalStateException ( ) ; }
7012	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ExtendAuraRange_A_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
7129	public void goToNextColor ( ) { mColorIndex = ( mColorIndex + _NUM ) % ( mColors . length ) ; }
7235	private LRMIInvocationContext snapshot ( ) { LRMIInvocationContext newContext = _nextContext == _NULL ? new LRMIInvocationContext ( ) : _nextContext ; newContext . _previousContext = this ; return newContext ; }
7336	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
7364	public String verifyTestItemDefinedIssueType ( final String type , final Project . Configuration settings ) { StatisticSubType defined = settings . getByLocator ( type ) ; expect ( settings . getByLocator ( type ) , notNull ( ) ) . verify ( ISSUE_TYPE_NOT_FOUND , type ) ; return defined . getLocator ( ) ; }
7376	@ Override public Schema schema ( ) { return schema ; }
7390	@ Override public int indexOf ( Object object ) { return mItems . indexOf ( object ) ; }
7400	public static double [ ] computeLogPowerSpectrum_FD ( final double [ ] fft ) { double [ ] spectrum = computePowerSpectrum_FD ( fft ) ; for ( int i = _NUM ; i < spectrum . length ; i ++ ) { spectrum [ i ] = MathUtils . db ( spectrum [ i ] ) ; } return spectrum ; }
7440	public synchronized boolean hasBeenInterrupted ( ) { return interrupted ; }
7473	public boolean avoid_deadlock ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR avoid - deadlock _CHAR ) ; }
7485	public EmailBuilder cc ( String cc ) { this . cc . add ( cc ) ; return this ; }
7531	public List < String > concernPackages ( ) { return _NULL ; }
7575	public boolean equals ( String productId , Map < String , GenericValue > additionalProductFeatureAndAppls , Map < String , Object > attributes , String prodCatalogId , BigDecimal selectedAmount ) { return equals ( productId , additionalProductFeatureAndAppls , attributes , prodCatalogId , selectedAmount , _NULL , _NULL , _BOOL ) ; }
7591	< T > T onMax ( String tableName , String column , String [ ] conditions , Class < T > type ) { return mathQuery ( tableName , new String [ ] { _CHAR max ( _CHAR + column + _CHAR ) _CHAR } , conditions , type ) ; }
7643	@ Override @ Transactional public void run ( ) { try { runInternal ( ) ; } catch ( RuntimeException ex ) { log . error ( DebugUtils . getStackTrace ( ex ) ) ; throw ex ; } }
7703	public EntityListIterator findListIteratorByCondition ( Delegator delegator , ModelEntity modelEntity , EntityCondition whereEntityCondition , EntityCondition havingEntityCondition , Collection < String > fieldsToSelect , List < String > orderBy , EntityFindOptions findOptions ) throws GenericEntityException { return genericDAO . selectListIteratorByCondition ( delegator , modelEntity , whereEntityCondition , havingEntityCondition , fieldsToSelect , orderBy , findOptions ) ; }
7710	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeBoostHealEffect_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
7770	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
7804	@ Override public void postInvalidateOnAnimation ( ) { if ( mPendingInvalidation ) return ; long nextDrawTime = mLastDrawTimeMs + MIN_MS_PER_FRAME ; long delay = Math . max ( _NUM , nextDrawTime - System . currentTimeMillis ( ) ) ; mPendingInvalidation = _BOOL ; postOnAnimationDelayed ( mInvalidationRunnable , delay ) ; }
7819	public Z Div ( Z a , double b ) throws JampackException { if ( b == _NUM ) { throw new JampackException ( _CHAR Divide by zero . '' ) ; } re = a . re / b ; im = a . im / b ; return this ; }
7884	public String exampleText ( Locale locale ) { return MaryDataType . getExampleText ( this , locale ) ; }
7886	public PagesClearCacheQuery clearCache ( String url ) { return new PagesClearCacheQuery ( getClient ( ) , url ) ; }
7897	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCFPHeal_Instant_HEAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
7900	public static float convertPixelsToDp ( float px ) { if ( mMetrics == _NULL ) { Log . e ( _CHAR MPChartLib - Utils _CHAR , _CHAR Utils NOT INITIALIZED . You need to call Utils . init ( ... ) at least once before _CHAR + _CHAR calling Utils . convertPixelsToDp ( ... ) . Otherwise conversion does not _CHAR + _CHAR take place . '' ) ; return px ; } DisplayMetrics metrics = mMetrics ; return px / ( metrics . densityDpi / _NUM ) ; }
7987	public static float calculateRight ( float left , float top , float bottom , float targetAspectRatio ) { final float height = bottom - top ; final float right = ( targetAspectRatio * height ) + left ; return right ; }
7988	public double distinctValues ( String fldName ) { double sum = _NUM ; for ( Bucket bkt : dists . get ( fldName ) ) sum += bkt . distinctValues ( ) ; return sum ; }
8122	public static Boolean hasInnerQuery ( JsonGenerator gen ) { return mapNearestDruidQuery ( gen , _NULL ) . orElse ( _BOOL ) ; }
8185	public static boolean isSSN ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; String normalizedSSN = stripCharsInBag ( s , SSNDelimiters ) ; return ( isInteger ( normalizedSSN ) && normalizedSSN . length ( ) == digitsInSocialSecurityNumber ) ; }
8217	protected MessagesSetChatPhotoQuery file ( String value ) { return unsafeParam ( _CHAR file _CHAR , value ) ; }
8250	public void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( mInitializationComplete ) { mActivityDelegate . onActivityResultWithNative ( requestCode , resultCode , data ) ; } else { if ( mPendingActivityResults == _NULL ) { mPendingActivityResults = new ArrayList < ActivityResult > ( _NUM ) ; } mPendingActivityResults . add ( new ActivityResult ( requestCode , resultCode , data ) ) ; } }
8271	private static double tricube ( final double x ) { final double absX = FastMath . abs ( x ) ; if ( absX >= _NUM . _NUM ) { return _NUM . _NUM ; } final double tmp = _NUM - absX * absX * absX ; return tmp * tmp * tmp ; }
8276	@ Override public double [ ] makeLogDensityTestValues ( ) { return new double [ ] { Double . NEGATIVE_INFINITY , Double . NEGATIVE_INFINITY , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , Double . NEGATIVE_INFINITY } ; }
8309	private void delayedHide ( int delayMillis ) { mHideHandler . removeCallbacks ( mHideRunnable ) ; mHideHandler . postDelayed ( mHideRunnable , delayMillis ) ; }
8374	public static File createUniqueFile ( File targetFolder , String originalFile , boolean keepOriginal ) { String mimeType = MimeTypeMap . getSingleton ( ) . getMimeTypeFromExtension ( originalFile ) ; return createUniqueFile ( targetFolder , originalFile , mimeType , keepOriginal ) ; }
8474	public Builder zoomOffset ( Number zoomOffset ) { this . zoomOffset = zoomOffset ; return this ; }
8492	public AemContextMenu openContextMenu ( int n ) { contextMenu . open ( currentScope . findElements ( By . cssSelector ( SELECTOR_FOR_COMPONENT_IN_PARSYS ) ) . get ( n ) ) ; return contextMenu ; }
8552	@ Before public void customizeTextUnitSearcher ( ) throws IllegalAccessException { FieldUtils . writeField ( textUnitSearcher , _CHAR ordered _CHAR , _BOOL , _BOOL ) ; }
8560	protected final void notifyInvalidated ( ) { if ( ! myNotificationsEnabled ) { return ; } for ( InvalidationListener listener : myListeners ) { listener . onInvalidated ( this ) ; } for ( InvalidationListener listener : myWeakListeners ) { listener . onInvalidated ( this ) ; } }
8620	public boolean avoid_deadlock ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR avoid - deadlock _CHAR ) ; }
8637	public void performSignIn ( ) { mAuthClient . authorize ( mActivity , mCallback ) ; }
8680	public final TestSubscriber < T > await ( Duration timeout ) { if ( cdl . getCount ( ) == _NUM ) { return this ; } try { if ( ! cdl . await ( timeout . toMillis ( ) , TimeUnit . MILLISECONDS ) ) { throw new AssertionError ( _CHAR No complete or error signal before timeout _CHAR ) ; } return this ; } catch ( InterruptedException ex ) { throw new AssertionError ( _CHAR Wait interrupted _CHAR , ex ) ; } }
8682	public void inverseTranslateVect ( Vector3f data ) { data . x -= m03 ; data . y -= m13 ; data . z -= m23 ; }
8715	@ Override public int compareTo ( IdentifiableObject object ) { if ( this . getDisplayName ( ) == _NULL ) { return object . getDisplayName ( ) == _NULL ? _NUM : _NUM ; } return object . getDisplayName ( ) == _NULL ? - _NUM : this . getDisplayName ( ) . compareToIgnoreCase ( object . getDisplayName ( ) ) ; }
8953	public GroupsEditQuery rss ( String value ) { return unsafeParam ( _CHAR rss _CHAR , value ) ; }
9025	public void writeByte ( byte value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeByte ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
9061	private void readObject ( java . io . ObjectInputStream in ) throws IOException , ClassNotFoundException { }
9307	public boolean indexExists ( String tableName , String columnName ) { try { resolveIndexFromName ( tableName , columnName ) ; } catch ( DatabaseException e ) { return _BOOL ; } return _BOOL ; }
9328	@ Override public BigDecimal unmarshal ( final String v ) throws Exception { if ( v != _NULL && v . trim ( ) . length ( ) > _NUM ) { return new BigDecimal ( v ) ; } { return _NULL ; } }
9351	protected void showModels ( EpoxyModel < ? > ... models ) { showModels ( Arrays . asList ( models ) ) ; }
9490	public void finishGathering ( Player player ) { if ( currentGatherer == player . getObjectId ( ) ) { if ( state == GatherState . GATHERING ) { task . abort ( ) ; } currentGatherer = _NUM ; state = GatherState . IDLE ; } }
9561	< T > T onMin ( String tableName , String column , String [ ] conditions , Class < T > type ) { return mathQuery ( tableName , new String [ ] { _CHAR min ( _CHAR + column + _CHAR ) _CHAR } , conditions , type ) ; }
9752	public < R > Plan < R > then ( Function < ? super T1 , ? extends R > selector ) { if ( selector == _NULL ) { throw new NullPointerException ( ) ; } return new Plan1 < T1 , R > ( this , selector ) ; }
9824	public void add ( short val ) { ensureCapacity ( _pos + _NUM ) ; _data [ _pos ++ ] = val ; }
9881	@ Override public String toString ( ) { String string = _CHAR _CHAR ; if ( leftTarget != _NULL ) { string += _CHAR _CHAR + leftTarget . getName ( ) ; } if ( rightTarget != _NULL ) { string += _CHAR _CHAR + rightTarget . getName ( ) ; } return string ; }
9928	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnAttacked_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
9950	public boolean hasBeanProperties ( String beanName ) { return getBeanProperties ( beanName ) . size ( ) != _NUM ; }
9955	@ Override public int hashCode ( ) { return this . name . hashCode ( ) ; }
9982	public void repaintImmediate ( ) { Graphics g = this . getGraphics ( ) ; if ( g != _NULL && m_offscreen != _NULL ) { paintBufferToScreen ( g ) ; } }
10086	public final String join ( Object first , Object second , Object ... rest ) { return join ( iterable ( first , second , rest ) ) ; }
10119	public static float calculateBottom ( float left , float top , float right , float targetAspectRatio ) { final float width = right - left ; return ( width / targetAspectRatio ) + top ; }
10123	private void delayedHide ( int delayMillis ) { mHideHandler . removeCallbacks ( mHideRunnable ) ; mHideHandler . postDelayed ( mHideRunnable , delayMillis ) ; }
10126	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
10141	@ Override public String object2Relation ( String fieldType ) { if ( fieldType != _NULL ) { if ( fieldType . equals ( _CHAR java . util . Date _CHAR ) ) { return _CHAR integer _CHAR ; } } return _NULL ; }
10147	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stumble_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
10159	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SubTypeBoostResist_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
10317	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
10385	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPHeal_Instant_HEAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
10403	private void validateIsPrimitiveType ( String typeName ) throws PIRException { if ( ! allowedPrimitiveJavaTypes . contains ( typeName . toLowerCase ( ) ) ) { throw new PIRException ( _CHAR javaType = _CHAR + typeName + _CHAR is not one of the allowed javaTypes : _CHAR + _CHAR byte , short , int , long , float , double , char , string _CHAR ) ; } }
10412	public V putIfAbsent ( int key , V value ) { int index = insertionIndex ( key ) ; if ( index < _NUM ) return _values [ - index - _NUM ] ; return doPut ( key , value , index ) ; }
10435	public synchronized AggregateTable addAggregates ( String group , Schema schema ) { AggregateTable vat = new AggregateTable ( this , group , schema ) ; addDataGroup ( group , vat , _NULL ) ; return vat ; }
10441	public static double idf ( double totalDocs , double numTimesWordAppearedInADocument ) { return totalDocs > _NUM ? Math . log10 ( totalDocs / numTimesWordAppearedInADocument ) : _NUM ; }
10444	private void stopRequestingSensorEventData ( ) { if ( ! isRequestingSensorEventData ( ) ) { return ; } try { Log . v ( TAG , _CHAR Stopping to request sensor event data _CHAR ) ; for ( Map . Entry < String , SensorDataRequest > sensorDataRequestEntry : sensorDataRequests . entrySet ( ) ) { sensorDataRequestEntry . getValue ( ) . setEndTimestamp ( System . currentTimeMillis ( ) ) ; } sendSensorEventDataRequests ( ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
10511	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SwitchHostile_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
10547	public void writeContentLength ( long length ) throws IOException { writeHeader ( HttpWriter . CONTENT_LENGTH , length ) ; }
10549	public < R > Plan < R > then ( Function6 < T1 , T2 , T3 , T4 , T5 , T6 , R > selector ) { if ( selector == _NULL ) { throw new NullPointerException ( ) ; } return new Plan6 < T1 , T2 , T3 , T4 , T5 , T6 , R > ( this , selector ) ; }
10560	public synchronized AggregateTable addAggregates ( String group ) { return addAggregates ( group , VisualItem . SCHEMA ) ; }
10604	public void sendToFilterModuleByDynamicTimedeadbandFilterer ( final SourceDataTag currentSourceDataTag , final ValueUpdate update , final int filterType ) { doSendToFilterModule ( currentSourceDataTag , update , new SourceDataTagQuality ( ) , _BOOL , filterType ) ; }
10710	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
10729	private void putError ( String text ) { JOptionPane . showMessageDialog ( this , text ) ; }
10734	private static String fmt ( double doubleValue ) { if ( doubleValue == ( long ) doubleValue ) { return String . format ( _CHAR % d _CHAR , ( long ) doubleValue ) ; } else { return String . format ( _CHAR % s _CHAR , doubleValue ) ; } }
10957	public static File createUniqueFile ( File targetFolder , String originalFile , boolean keepOriginal ) { String mimeType = MimeTypeMap . getSingleton ( ) . getMimeTypeFromExtension ( originalFile ) ; return createUniqueFile ( targetFolder , originalFile , mimeType , keepOriginal ) ; }
11050	public boolean equals ( Object other ) { if ( other instanceof LocalUnitPair && ( ( LocalUnitPair ) other ) . local == this . local && ( ( LocalUnitPair ) other ) . unit == this . unit ) { return _BOOL ; } else return _BOOL ; }
11073	@ Override protected void finalize ( ) { if ( catfile != _NULL ) { try { catfile . close ( ) ; } catch ( IOException e ) { } } catfile = _NULL ; }
11080	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_NAME_CHANGE_DELAY ( String durationtime1 , String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime1 , durationtime0 ) ; }
11107	public boolean canContain ( Element other ) { return theType . canContain ( other . theType ) ; }
11111	private void writeObject ( java . io . ObjectOutputStream out ) throws IOException { }
11215	public boolean addAll ( PointsToSet s ) { return _BOOL ; }
11241	public static boolean isValidDouble ( Double d ) { return d != _NULL && ! Double . isInfinite ( d ) && ! Double . isNaN ( d ) ; }
11394	public static SM_SYSTEM_MESSAGE STR_SKILL_CONFLICT_A_TO_B ( String skillcaster , String skillname , String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname , skilltarget ) ; }
11429	public void startAddingQueries ( ) throws IOException { totalNumberOfReads = _NUM ; totalNumberOfMatches = _NUM ; getFooterSectionRMA6 ( ) . setStartReadsSection ( readerWriter . getPosition ( ) ) ; }
11557	public void drag ( int sourceX , int sourceY , int destX , int destY ) { move ( sourceX , sourceY ) ; press ( InputEvent . BUTTON1_MASK ) ; move ( destX , destY ) ; release ( InputEvent . BUTTON1_MASK ) ; }
11671	public void removeFreeShippingProductPromoAction ( GenericPK productPromoActionPK ) { if ( productPromoActionPK == _NULL ) return ; Iterator < GenericValue > fsppas = this . freeShippingProductPromoActions . iterator ( ) ; while ( fsppas . hasNext ( ) ) { if ( productPromoActionPK . equals ( ( fsppas . next ( ) ) . getPrimaryKey ( ) ) ) { fsppas . remove ( ) ; } } }
11716	public boolean isDashedHighlightLineEnabled ( ) { return mHighlightDashPathEffect == _NULL ? _BOOL : _BOOL ; }
11753	public static boolean isFileOlder ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) < timeMillis ; }
11801	public static byte [ ] giveBuff ( MapleStatEffect effect , int amount ) { EnumMap < MapleBuffStat , Integer > statups = new EnumMap < MapleBuffStat , Integer > ( MapleBuffStat . class ) ; statups . put ( MapleBuffStat . SmashStack , amount ) ; return giveBuff ( _NUM , _NUM , statups , effect , _NULL ) ; }
11885	@ Override public boolean isFixedFacet ( short facetName ) { if ( ( fFixedFacet & facetName ) != _NUM ) return _BOOL ; if ( fValidationDV == DV_INTEGER ) return facetName == FACET_FRACTIONDIGITS ; return _BOOL ; }
11961	public static float convert ( String stringValue ) { if ( Strings . isNullOrEmpty ( stringValue ) || TypeUtils . MISSING_INDICATORS . contains ( stringValue ) ) { return MISSING_VALUE ; } Matcher matcher = COMMA_PATTERN . matcher ( stringValue ) ; return Float . parseFloat ( matcher . replaceAll ( _CHAR _CHAR ) ) ; }
12052	public void addComment ( XmlElement xmlElement ) { }
12071	public static char [ ] encode ( byte [ ] in ) { return encode ( in , _NUM , in . length ) ; }
12186	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_XPBoost_A_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
12212	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Reflector_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
12238	public void fireIterationPerformedEvent ( final IterationEvent e ) { for ( IterationListener l : listeners ) { l . iterationPerformed ( e ) ; } }
12320	public LookupSwitchStmt newLookupSwitchStmt ( Value key , List lookupValues , List targets , Unit defaultTarget ) { return new GLookupSwitchStmt ( key , lookupValues , targets , defaultTarget ) ; }
12329	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
12334	public void fail ( String errorMessage ) { testEventCollector . fail ( errorMessage ) ; throw new AssertionError ( errorMessage ) ; }
12445	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedFPATK_Instant_INTERVAL_A_TO_ME ( int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillcaster , skillname ) ; }
12538	public GeneralOptions init ( Map < String , String > environment , FileSystem fileSystem , Console console ) throws IOException { Path root = configRoot != _NULL ? fileSystem . getPath ( configRoot ) : _NULL ; return new GeneralOptions ( environment , fileSystem , verbose , console , root , disableReversibleCheck ) ; }
12570	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_INTERVAL_A_TO_ME ( int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillcaster , skillname ) ; }
12594	private static int calcNumAdditionalMillerRabinRounds ( int bitLength ) { int roundsLeft = _NUM ; if ( bitLength >= _NUM ) { roundsLeft = _NUM ; } else if ( bitLength >= _NUM ) { roundsLeft = _NUM ; } return roundsLeft ; }
12645	public static int geometric ( double p ) { if ( ! ( p >= _NUM . _NUM && p <= _NUM . _NUM ) ) throw new IllegalArgumentException ( _CHAR Probability must be between _NUM . _NUM and _NUM . _NUM _CHAR ) ; return ( int ) Math . ceil ( Math . log ( uniform ( ) ) / Math . log ( _NUM . _NUM - p ) ) ; }
12658	private void logSearchPanelLoadDuration ( boolean wasPrefetch , long durationMs ) { ContextualSearchUma . logSearchPanelLoadDuration ( wasPrefetch , durationMs ) ; }
12721	public DynamicInvokeExpr newDynamicInvokeExpr ( SootMethodRef bootstrapMethodRef , List < ? extends Value > bootstrapArgs , SootMethodRef methodRef , List < ? extends Value > args ) { return new JDynamicInvokeExpr ( bootstrapMethodRef , bootstrapArgs , methodRef , args ) ; }
12764	public Collection < IDevice > filterByUsed ( @ NotNull Collection < IDevice > devices ) { Set < IDevice > used = Sets . newHashSetWithExpectedSize ( myDevicesUsedInLaunch . size ( ) ) ; for ( IDevice d : devices ) { if ( myDevicesUsedInLaunch . contains ( d . getSerialNumber ( ) ) ) { used . add ( d ) ; } } return used ; }
12770	public Builder autoPanPaddingTopLeft ( Point autoPanPaddingTopLeft ) { this . autoPanPaddingTopLeft = autoPanPaddingTopLeft ; return this ; }
12828	public Iterator < Node > iterator ( ) { if ( this . nodes == _NULL ) { this . nodes = this . dfs ( this . root ) ; } Iterator < Node > i = this . nodes . iterator ( ) ; return i ; }
12860	public Preference inflate ( int resource , PreferenceGroup root ) { XmlResourceParser parser = getContext ( ) . getResources ( ) . getXml ( resource ) ; try { return inflate ( parser , root ) ; } finally { parser . close ( ) ; } }
12869	void hideSecurityButton ( ) { if ( mSecurityButton . getVisibility ( ) == View . GONE ) return ; if ( mSecurityButtonHideAnimator . isRunning ( ) ) return ; mSecurityButtonHideAnimator . start ( ) ; }
12877	public < R > Plan < R > then ( Function5 < T1 , T2 , T3 , T4 , T5 , R > selector ) { if ( selector == _NULL ) { throw new NullPointerException ( ) ; } return new Plan5 < T1 , T2 , T3 , T4 , T5 , R > ( this , selector ) ; }
12982	public void writeServer ( String server ) throws IOException { writeHeader ( HttpWriter . SERVER , server ) ; }
12987	public void delete ( ) { select ( ) . clickOption ( ToolbarOptions . DELETE ) ; deleteDialog . confirmDelete ( ) ; verifyIsHidden ( ) ; }
13056	public static boolean isEmbedded ( ) { return Boolean . valueOf ( ConfigurationUtil . getProperty ( EMBEDDED_MODE_PROPERTY ) ) ; }
13235	public boolean hasLeaseRenewalManager ( ) { return leaseRenewalManager != _NULL ; }
13255	public Iterator < Interval > periodIterator ( ReadablePeriod readablePeriod ) { List < Iterator < ? extends Interval >> periodIterators = this . stream ( ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; return IteratorUtils . chainedIterator ( periodIterators ) ; }
13285	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_FAVOR ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
13322	public static StatefulHash murmur3_128 ( ) { return Hashes . createStateful ( new MurmurHash3Parameters ( MurmurHash3Variant . X64_128 ) ) ; }
13498	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostHealEffect_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
13514	public void monitorMemoryUsage ( boolean isWriteTypeOperation ) throws MemoryShortageException { MemoryEvictionDecision res ; if ( _enabled && ( ( res = monitorMemoryUsageWithNoEviction_Impl ( isWriteTypeOperation ) ) != MemoryEvictionDecision . NO_EVICTION ) ) { _evictor . evict ( isWriteTypeOperation , res == MemoryEvictionDecision . SYNC_EVICTION ) ; } }
13677	public static int isValidGradlePath ( @ NotNull String gradlePath ) { return ILLEGAL_GRADLE_PATH_CHARS_MATCHER . indexIn ( gradlePath ) ; }
13725	public Vector3f scaleAdd ( float scalar , Vector3f add ) { x = x * scalar + add . x ; y = y * scalar + add . y ; z = z * scalar + add . z ; return this ; }
13865	public static void addSubscriber ( Workflow workflow , Consumer < Object > onNext ) { addSubscriber ( workflow , onNext , _NULL ) ; }
13982	public void kickAccount ( int accountId ) { synchronized ( this ) { AionConnection client = loggedInAccounts . get ( accountId ) ; if ( client != _NULL ) { closeClientWithCheck ( client , accountId ) ; } else { sendAccountDisconnected ( accountId ) ; } } }
14023	public static char [ ] encode ( byte [ ] in ) { return encode ( in , _NUM , in . length ) ; }
14096	public DocsAddQuery accessKey ( String value ) { return unsafeParam ( _CHAR access_key _CHAR , value ) ; }
14099	public Builder serverMessageDigest ( String serverMessageDigest ) { this . serverMessageDigest = serverMessageDigest ; return this ; }
14174	public void denyAll ( Map < PermissionFlag , Message > flags ) { generalPermissions . putAll ( flags ) ; }
14255	public boolean isSuccessCode ( ) { int aux = code - _NUM ; return aux >= _NUM && aux < _NUM ; }
14283	@ Override public synchronized void removeAll ( ) { DefaultTreeModel model = ( DefaultTreeModel ) getModel ( ) ; DefaultMutableTreeNode root = ( DefaultMutableTreeNode ) model . getRoot ( ) ; root . removeAllChildren ( ) ; model . nodeStructureChanged ( root ) ; nodes . clear ( ) ; }
14304	private static RetainFragment findOrCreateRetainFragment ( FragmentManager fm ) { RetainFragment mRetainFragment = ( RetainFragment ) fm . findFragmentByTag ( TAG ) ; if ( mRetainFragment == _NULL ) { mRetainFragment = new RetainFragment ( ) ; fm . beginTransaction ( ) . add ( mRetainFragment , TAG ) . commitAllowingStateLoss ( ) ; } return mRetainFragment ; }
14331	public < X extends DataSource > boolean hasProperties ( Class < X > type ) { return hasProperties ( _NULL , type ) ; }
14398	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Heal_Instant_HEAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
14408	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sprint_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
14414	private FeatureEntryPoint createFeatureEntryPoint ( FeatureData feature ) { return new FeatureEntryPoint ( feature , myListener ) ; }
14481	protected boolean isEnabledForInaccessibleResources ( ) { return _BOOL ; }
14498	public void where ( String column , PredicateOperator comparison , DataType value ) throws QueryPlanException { this . whereColumnNames . add ( column ) ; this . whereOperators . add ( comparison ) ; this . whereDataTypes . add ( value ) ; }
14617	public static String stripWhitespace ( String s ) { return stripCharsInBag ( s , whitespace ) ; }
14658	public void addedEdge ( Edge e ) { TreeMap hOutVertices = ( TreeMap ) Cache . get ( e . getVertexA ( ) . getLabel ( ) ) ; if ( hOutVertices == _NULL ) return ; else hOutVertices . put ( e . getVertexB ( ) . getLabel ( ) , e ) ; }
14716	public static int positiveModulo ( int a , int b ) { int mod = a % b ; return mod >= _NUM ? mod : mod + b ; }
14851	public void convertToBaf ( JimpleToBafContext context , List < Unit > out ) { Unit u = Baf . v ( ) . newPushInst ( this ) ; u . addAllTagsOf ( context . getCurrentUnit ( ) ) ; out . add ( u ) ; }
14875	public void addProperty ( String property , Character value ) { add ( property , createJsonElement ( value ) ) ; }
14987	public boolean canContain ( Element other ) { return theType . canContain ( other . theType ) ; }
15095	public Iterator < E > iterator ( ) { return map . keySet ( ) . iterator ( ) ; }
15115	private String removeIllegalFileCharacters ( String string ) { return string . replaceAll ( _CHAR /|\\\\| : |\\*|\\ ? |\ _CHAR | < | > |\\||\\ s _CHAR , _CHAR _CHAR ) ; }
15177	public static void json ( String msg ) { log ( Log . DEBUG , _NUM , _NULL , FMT_JSON , _NULL , msg ) ; }
15400	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
15445	public static float readFloat ( ) { return scanner . nextFloat ( ) ; }
15449	public V putIfAbsent ( short key , V value ) { int index = insertionIndex ( key ) ; if ( index < _NUM ) return _values [ - index - _NUM ] ; return doPut ( key , value , index ) ; }
15463	public MarketEditCommentQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
15491	public static RequestQueue newRequestQueue ( ) { return newRequestQueue ( _NUM ) ; }
15553	public static AsyncCommandResult executeAsync ( String command , File dir ) { return executeAsync ( new SimpleCommand ( command ) , dir ) ; }
15570	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_WARNING_MAXWAIT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15687	public static byte readByte ( ) { return scanner . nextByte ( ) ; }
15748	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonHoming_ME_TO_B ( String value0 , String skillname , String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname , skilltarget ) ; }
15775	@ Override public Schema schema ( ) { return schema ; }
15778	double onAverage ( String tableName , String column , String [ ] conditions ) { return mathQuery ( tableName , new String [ ] { _CHAR avg ( _CHAR + column + _CHAR ) _CHAR } , conditions , double . class ) ; }
15807	public static int [ ] readInts ( ) { return readAllInts ( ) ; }
15854	public Builder insertAfter ( String columnName ) { this . insertAfter = columnName ; return this ; }
15926	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
16026	public static boolean isUnitLength ( S2Point p ) { return Math . abs ( p . norm2 ( ) - _NUM ) <= _NUM - _NUM ; }
16144	public static StatelessIntHash murmur3_32 ( ) { return Hashes . getStatelessInt ( new MurmurHash3Parameters ( MurmurHash3Variant . X86_32 ) ) ; }
16196	private static String massageURI ( String uri ) { uri = uri . trim ( ) ; int protocolEnd = uri . indexOf ( _CHAR ) ; if ( protocolEnd < _NUM || isColonFollowedByPortNumber ( uri , protocolEnd ) ) { uri = _CHAR http : // '' + uri ; } return uri ; }
16228	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
16246	private ByteBuffer read ( FileChannel channel , int size ) { ByteBuffer byteBffer = ByteBuffer . allocate ( size ) ; try { channel . read ( byteBffer ) ; } catch ( Exception e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } byteBffer . rewind ( ) ; return byteBffer ; }
16261	@ Override public boolean hasFeature ( String feature , String version ) { return ( feature . equalsIgnoreCase ( _CHAR XS - Loader _CHAR ) && ( version == _NULL || version . equals ( _CHAR _NUM . _NUM _CHAR ) ) || super . hasFeature ( feature , version ) ) ; }
16293	private void toMagnitude ( double [ ] re ) { for ( int i = _NUM ; i < re . length ; i ++ ) re [ i ] = Math . sqrt ( re [ i ] ) ; }
16317	public static long convert ( String stringValue ) { if ( Strings . isNullOrEmpty ( stringValue ) || TypeUtils . MISSING_INDICATORS . contains ( stringValue ) ) { return ( long ) ColumnType . LONG_INT . getMissingValue ( ) ; } Matcher matcher = COMMA_PATTERN . matcher ( stringValue ) ; return Long . parseLong ( matcher . replaceAll ( _CHAR _CHAR ) ) ; }
16387	public IAssignmentAlgorithm createAssignmentAlgorithm ( ) { return new AssignmentUsingWeightedLCA ( cName , refId2weight , ref2weight , taxId2SpeciesId , percentToCover , useIdentityFilter ) ; }
16403	void showSecurityButton ( ) { if ( mSecurityButton . getVisibility ( ) == View . VISIBLE ) return ; if ( mSecurityButtonShowAnimator . isRunning ( ) ) mSecurityButtonShowAnimator . cancel ( ) ; mSecurityButtonShowAnimator . start ( ) ; }
16535	@ Override public double [ ] makeLogDensityTestValues ( ) { return new double [ ] { Double . NEGATIVE_INFINITY , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM } ; }
16574	public static void dump ( PrintWriter pw , int padding , String string ) { pw . print ( pad ( padding ) ) ; pw . println ( string ) ; }
16634	public static String stripSignatureToFQN ( String signature ) throws IllegalArgumentException { signature = Signature . getTypeErasure ( signature ) ; signature = Signature . getElementType ( signature ) ; return Signature . toString ( signature ) ; }
16681	public boolean isPropertySet ( Object property ) { return _BOOL ; }
16767	boolean isVariableFieldWidth ( ) { return variableFieldWidth ; }
16785	private LinkedHashSet < DimensionField > calculateDefaultDimensionFields ( @ NotNull LinkedHashSet < DimensionField > dimensionFields , @ NotNull LinkedHashSet < DimensionField > defaultDimensionFields ) { if ( defaultDimensionFields . isEmpty ( ) ) { return dimensionFields . stream ( ) . limit ( _NUM ) . collect ( Collectors . toCollection ( _NULL ) ) ; } else { return defaultDimensionFields ; } }
16817	public void registerListener ( Condition condition , int cPriority , EventListener listener , int lPriority ) { getListenerForCondition ( condition , cPriority ) . registerListener ( listener , lPriority ) ; }
16835	public static String parseValue ( String value , CarbonDimension dimension ) { try { switch ( dimension . getDataType ( ) ) { case DECIMAL : return parseStringToBigDecimal ( value , dimension ) ; default : return value ; } } catch ( Exception e ) { return _NULL ; } }
16838	public int putIfAbsent ( K key , int value ) { int index = insertionIndex ( key ) ; if ( index < _NUM ) return _values [ - index - _NUM ] ; return doPut ( key , value , index ) ; }
16908	public static ProbeItemDescriptor continuousLineFillItem ( String name , String description , ItemValueFormatter formatter , double dataFactor , long minValue , long maxValue ) { return continuousItem ( name , description , formatter , dataFactor , minValue , maxValue , DEFAULT_LINE_WIDTH , DEFAULT_COLOR , DEFAULT_COLOR ) ; }
16914	public boolean equals ( BasicBlock b ) { return ( this == b ) ; }
16927	@ Override protected void createOrUpgradeTable ( SQLiteDatabase db , boolean force ) { for ( TableModel tableModel : getAllTableModels ( ) ) { createOrUpgradeTable ( tableModel , db , force ) ; } }
16980	@ Override public void deleteMetadata ( ) throws IOException { checkClosedOrInError ( _CHAR createOrUpdateMetadata _CHAR ) ; createOrUpdateMetadata ( _NULL ) ; }
16995	public EntityQuery filterByDate ( Date moment ) { this . filterByDate ( new java . sql . Timestamp ( moment . getTime ( ) ) ) ; return this ; }
17047	public static String keyString ( SecretKeys keys ) { return keys . toString ( ) ; }
17058	public Builder format ( String format ) { this . format = format ; return this ; }
17126	public void scale ( double scaleFactor ) { for ( K key : keySet ( ) ) { Counter < V > counts = getCounter ( key ) ; counts . scale ( scaleFactor ) ; } }
17192	public void insertComponent ( String title ) { WebElement component = getComponent ( title ) ; conditions . elementReady ( component ) . click ( ) ; conditions . verify ( not ( visibilityOf ( window ) ) ) ; }
17214	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
17217	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
17229	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_WeaponStatUp_A_TO_B ( String skillcaster , String skilltarget , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , value0 , skillname ) ; }
17235	public void screenshot ( String message ) { currentTest . get ( ) . screenshot ( message ) ; }
17298	private boolean hasAccountListChanged ( ) { Account [ ] accountList = AccountManager . get ( this ) . getAccountsByType ( MainApp . getAccountType ( ) ) ; Set < String > actualAccounts = toAccountNameSet ( accountList ) ; return ! mOriginalAccounts . equals ( actualAccounts ) ; }
17334	static public double KL_symmetric ( Distribution p , Distribution q ) { if ( p . asTreeMap ( ) . size ( ) == q . asTreeMap ( ) . size ( ) ) { return ( _NUM . _NUM * ( KL_asymmetric ( p , q ) + KL_asymmetric ( q , p ) ) ) ; } else { return _NUM ; } }
17399	private void createStep ( ) { this . token = Translations . create ( getString ( R . string . light_and_dark_gate_open ) ) ; insertNewIn ( token . current ) ; loop ( token ) ; this . translateMode = _BOOL ; }
17518	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
17556	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonServant_ME_TO_B ( String value0 , String skillname , String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname , skilltarget ) ; }
17573	public void updateUI ( ) { super . updateUI ( ) ; TreeCellRenderer tcr = getCellRenderer ( ) ; if ( tcr instanceof DefaultTreeCellRenderer ) { DefaultTreeCellRenderer dtcr = ( ( DefaultTreeCellRenderer ) tcr ) ; dtcr . setTextSelectionColor ( UIManager . getColor ( _CHAR Table . selectionForeground _CHAR ) ) ; dtcr . setBackgroundSelectionColor ( UIManager . getColor ( _CHAR Table . selectionBackground _CHAR ) ) ; } }
17680	public DataTagCacheObject createEmptyDataTag ( Long id ) { DataTagCacheObject dataTagCacheObject = new DataTagCacheObject ( ) ; dataTagCacheObject . setId ( id ) ; dataTagCacheObject . setName ( _CHAR UNKNOWN _CHAR ) ; dataTagCacheObject . setMode ( DataTagConstants . MODE_TEST ) ; dataTagCacheObject . setLogged ( _BOOL ) ; dataTagCacheObject . setSimulated ( _BOOL ) ; return dataTagCacheObject ; }
17707	@ Override public int compareTo ( IntDoublePair other ) { return Double . compare ( value , other . value ) ; }
17790	public void recordLatency ( double latencySec ) { if ( ! completedLatencySeconds . isPresent ( ) ) { return ; } addLabels ( completedLatencySeconds . get ( ) ) . observe ( latencySec ) ; }
17794	public static double signedArea ( S2Point a , S2Point b , S2Point c ) { return area ( a , b , c ) * robustCCW ( a , b , c ) ; }
17875	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
18014	public void clearSavedState ( ) { baseObjId = _NUM ; }
18023	protected AudioGetCountQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
18036	public ContextSet makeImmutable ( ) { return this ; }
18241	protected void cancelling ( Conversation conversation ) { }
18243	public boolean isAutoRelation ( ) { return isAutoRelation ; }
18262	private Stream < TermQuery > filterToTermQueries ( String luceneFieldName , ApiFilter filter ) { return filter . getValues ( ) . stream ( ) . map ( _NULL ) . map ( _NULL ) ; }
18283	@ Override public double [ ] makeLogDensityTestValues ( ) { return new double [ ] { - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM } ; }
18370	private void readObjectNoData ( ) throws InvalidObjectException { throw new InvalidObjectException ( _CHAR LandlordLease should always have data _CHAR ) ; }
18412	public void initialise ( ) throws CarbonDataWriterException { fileManager = new FileManager ( ) ; fileManager . setName ( new File ( this . storeLocation ) . getName ( ) ) ; setWritingConfiguration ( ) ; }
18417	public short putIfAbsent ( K key , short value ) { int index = insertionIndex ( key ) ; if ( index < _NUM ) return _values [ - index - _NUM ] ; return doPut ( key , value , index ) ; }
18542	public int lastIndexOf ( int value ) { return lastIndexOf ( _pos , value ) ; }
18598	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CaseHeal_A_TO_ME ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
18654	@ Override public WriteFuture write ( Object message ) { return _NULL ; }
18726	public static SM_SYSTEM_MESSAGE STR_MSG_CAPTCHA_UNRESTRICT_FAILED_RETRY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18778	protected void startBKCluster ( ) throws Exception { baseClientConf . setZkServers ( zkUtil . getZooKeeperConnectString ( ) ) ; baseClientConf . setUseV2WireProtocol ( _BOOL ) ; if ( numBookies > _NUM ) { bkc = new BookKeeperTestClient ( baseClientConf ) ; } for ( int i = _NUM ; i < numBookies ; i ++ ) { startNewBookie ( ) ; } }
18788	public boolean isThirdParty ( ) { if ( isOptionEnabled ( UrlFilterRuleOption . THIRD_PARTY ) ) { return _BOOL ; } if ( isOptionDisabled ( UrlFilterRuleOption . THIRD_PARTY ) ) { return _BOOL ; } return _BOOL ; }
18809	private void reduce ( ) { if ( reqs == _NULL ) { reqs = empty ; } if ( prefs == _NULL ) { prefs = empty ; } reduce ( _NUM , _NUM ) ; setRelative ( reqs , REL_REQS ) ; setRelative ( prefs , REL_PREFS ) ; }
18865	public boolean supportsSaveAs ( ) { return _BOOL ; }
18919	public PagesClearCacheQuery clearCache ( UserActor actor , String url ) { return new PagesClearCacheQuery ( getClient ( ) , actor , url ) ; }
18956	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCFPHeal_Instant_HEAL_A_TO_ME ( int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillcaster , skillname ) ; }
19005	private FastConcurrentSkipListMap . Node < K , V > loNode ( ) { if ( lo == _NULL ) return m . findFirst ( ) ; else if ( loInclusive ) return m . findNear ( lo , m . GT | m . EQ ) ; else return m . findNear ( lo , m . GT ) ; }
19139	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCHeal_Instant_HEAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
19193	public boolean unitCanWriteTo ( Unit u , Value v ) { return valueTouchesRWSet ( writeSet ( u ) , v , u . getDefBoxes ( ) ) ; }
19288	public Builder paddingBottomRight ( Point paddingBottomRight ) { this . paddingBottomRight = paddingBottomRight ; return this ; }
19426	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
19466	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( instance == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL instance _CHAR ) ; } integrity = integrityEnforced ( in ) ; }
19469	public boolean isDashedHighlightLineEnabled ( ) { return mHighlightDashPathEffect == _NULL ? _BOOL : _BOOL ; }
19491	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelDeBuffPhysical_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
19532	static public double KL_symmetric ( Distribution p , Distribution q ) { if ( p . asTreeMap ( ) . size ( ) == q . asTreeMap ( ) . size ( ) ) { return ( _NUM . _NUM * ( KL_asymmetric ( p , q ) + KL_asymmetric ( q , p ) ) ) ; } else { return _NUM ; } }
19547	public static float calculateTop ( float left , float right , float bottom , float targetAspectRatio ) { final float width = right - left ; final float top = bottom - ( width / targetAspectRatio ) ; return top ; }
19568	public static MultivaluedMap < String , String > headersToLowerCase ( MultivaluedMap < String , String > headers ) { return headers . entrySet ( ) . stream ( ) . collect ( StreamUtils . toMap ( _NULL , _NULL , _NULL ) ) ; }
19741	public boolean containsKey ( K key ) { return contains ( key ) ; }
19758	protected void showModel ( EpoxyModel < ? > model ) { showModel ( model , _BOOL ) ; }
20141	public static ToolbarTapTarget forToolbarNavigationIcon ( Toolbar toolbar , CharSequence title , @ Nullable CharSequence description ) { return new ToolbarTapTarget ( toolbar , _BOOL , title , description ) ; }
20155	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillToggleCost_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
20159	public static double chiSquareTest ( final double [ ] expected , final long [ ] observed ) { final org . hipparchus . distribution . continuous . ChiSquaredDistribution distribution = new ChiSquaredDistribution ( expected . length - _NUM . _NUM ) ; return _NUM . _NUM - distribution . cumulativeProbability ( chiSquare ( expected , observed ) ) ; }
20332	private void readObject ( java . io . ObjectInputStream in ) throws IOException , ClassNotFoundException { }
20365	private IOException syntaxError ( String message ) throws IOException { throw new MalformedJsonException ( message + locationString ( ) ) ; }
20473	public void unsetQuota ( ServiceUnitId suName ) throws Exception { String suNameStr = ( suName == _NULL ) ? _NULL : suName . toString ( ) ; this . unsetQuota ( suNameStr ) ; }
20520	public static boolean isInjectionMethod ( Method method ) { return method . getReturnType ( ) . equals ( Void . TYPE ) && method . getParameterTypes ( ) . length == _NUM ; }
20528	public void unsetQuota ( String suName ) throws Exception { this . setQuota ( suName , new ResourceQuota ( ) ) ; }
20560	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CarveSignet_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
20658	@ Override public LoginToken logIn ( final String authHeader ) { LOGGER . debug ( _CHAR Authentication header received as : { } _CHAR , authHeader ) ; UserCredential credential = parseUsernamePassword ( fromNullable ( authHeader ) ) ; if ( isBasicAuthenicationValid ( credential ) ) { return withAccessToken ( credential . toBase64Encode ( ) ) . withTokenType ( BASIC ) . build ( ) ; } else { throw new AuthenticationException ( _CHAR Authentication login failed . Invalid Login Credential _CHAR ) ; } }
20660	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Pulled_A_TO_ME ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
20694	public ConversationFactory withFirstPrompt ( Prompt firstPrompt ) { this . firstPrompt = firstPrompt ; return this ; }
20704	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_PROTECT_SKILL_A_to_ME ( String skillname , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname , skillcaster ) ; }
20733	public < R > Plan < R > then ( Function < ? super Object [ ] , R > selector ) { if ( selector == _NULL ) { throw new NullPointerException ( ) ; } return new PlanN < R > ( this , selector ) ; }
20802	private void refreshCurrentEventTitles ( ) { title . setText ( currentPhase . getTitle ( ) ) ; timer . setText ( TimelineAlgos . getTime ( currentPhase . getStartTime ( ) ) + _CHAR - _CHAR + TimelineAlgos . getTime ( currentPhase . getEndTime ( ) ) ) ; }
20913	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysDodge_ME_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
20954	@ Override public void onRequestInitiated ( int code ) { if ( code == ConnectAPI . LOGIN_CODE ) { email . setClickable ( _BOOL ) ; password . setClickable ( _BOOL ) ; } }
21030	public static Charset toCharset ( String charset ) { return charset == _NULL ? Charset . defaultCharset ( ) : Charset . forName ( charset ) ; }
21079	public boolean containsKey ( short key ) { return contains ( key ) ; }
21184	public static String mapFullWidthLetterToHalfWidth ( String text ) { }
21321	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ChangeHateOnAttacked_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
21349	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysNoResist_ME_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
21354	@ Override public final void writeChars ( String s ) throws IOException { int len = s . length ( ) ; for ( int i = _NUM ; i < len ; i ++ ) { writeChar ( s . charAt ( i ) ) ; } }
21375	public static SM_SYSTEM_MESSAGE STR_SKILL_NO_AVAILABLE_SLOT_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
21482	private static RetainFragment findOrCreateRetainFragment ( FragmentManager fm ) { RetainFragment mRetainFragment = ( RetainFragment ) fm . findFragmentByTag ( TAG ) ; if ( mRetainFragment == _NULL ) { mRetainFragment = new RetainFragment ( ) ; fm . beginTransaction ( ) . add ( mRetainFragment , TAG ) . commitAllowingStateLoss ( ) ; } return mRetainFragment ; }
21532	public ItemStack craft ( Inventory inventory ) { for ( ItemStack itemStack : requiredItems ) { inventory . removeItemStack ( ItemStack . getItemStack ( itemStack ) ) ; } return getCraftedItemStack ( ) ; }
21623	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_EXP_GAIN_VITAL_MAKEUP_BONUS ( String value0 , int num1 , int num2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 , num2 ) ; }
21818	public boolean containsKey ( K key ) { return contains ( key ) ; }
22046	public < R > Plan < R > then ( Function4 < T1 , T2 , T3 , T4 , R > selector ) { if ( selector == _NULL ) { throw new NullPointerException ( ) ; } return new Plan4 < T1 , T2 , T3 , T4 , R > ( this , selector ) ; }
22404	public ByteVector putByteArray ( final byte [ ] b , final int off , final int len ) { if ( length + len > data . length ) { enlarge ( len ) ; } if ( b != _NULL ) { System . arraycopy ( b , off , data , length , len ) ; } length += len ; return this ; }
22424	public LookupSwitchStmt newLookupSwitchStmt ( Value key , List < IntConstant > lookupValues , List < ? extends Unit > targets , Unit defaultTarget ) { return new JLookupSwitchStmt ( key , lookupValues , targets , defaultTarget ) ; }
22429	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
22445	public boolean containsKey ( long key ) { return contains ( key ) ; }
22484	TaskManager . Task [ ] createTasks ( ) { TaskManager . Task [ ] tmp = new TaskManager . Task [ _NUM ] ; tmp [ _NUM ] = new ParticipantTask ( getPool ( ) , getMgr ( ) , this , handle ) ; return tmp ; }
22523	protected AdsCreateClientsQuery data ( String value ) { return unsafeParam ( _CHAR data _CHAR , value ) ; }
22530	public static StatefulHash murmur3_128 ( int seed ) { return Hashes . createStateful ( new MurmurHash3Parameters ( MurmurHash3Variant . X64_128 , seed ) ) ; }
22572	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysParry_ME_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
22589	public AemImage clear ( ) { waitForToolbarEnabled ( ) ; clearButton . click ( ) ; bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . visibilityOfElementLocated ( By . xpath ( DROP_AN_IMAGE_XPATH ) ) ) ; return this ; }
22595	public final boolean addRuleId ( final Long pId ) { if ( ! this . ruleIds . contains ( pId ) ) { this . ruleIds . add ( pId ) ; this . tagChange = CHANGE_CONFIGURATION ; return _BOOL ; } else { return _BOOL ; } }
22631	public long putIfAbsent ( K key , long value ) { int index = insertionIndex ( key ) ; if ( index < _NUM ) return _values [ - index - _NUM ] ; return doPut ( key , value , index ) ; }
22677	public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_PLAYTIME_WITH_RESERVATION ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
22777	@ Override public List < Period > generateRollingPeriods ( Date date ) { return generateLast5Years ( date ) ; }
22791	public void goToNextColor ( ) { mColorIndex = ( mColorIndex + _NUM ) % ( mColors . length ) ; }
23044	public boolean generate ( Set < ClassData > fileData ) { for ( ClassData classData : fileData ) { if ( ! generateFile ( classData , fileData ) ) { return _BOOL ; } } return _BOOL ; }
23072	private FastConcurrentSkipListMap . Node < K , V > hiNode ( ) { if ( hi == _NULL ) return m . findLast ( ) ; else if ( hiInclusive ) return m . findNear ( hi , m . LT | m . EQ ) ; else return m . findNear ( hi , m . LT ) ; }
23123	public synchronized void clear ( ) { setArray ( new Object [ _NUM ] ) ; }
23203	private void updateDeviceConfiguration ( Configuration configuration ) { final Device device = configuration . getDevice ( ) ; final State deviceState = configuration . getDeviceState ( ) ; if ( device != _NULL && deviceState != _NULL ) { myDeviceSize = device . getScreenSize ( deviceState . getOrientation ( ) ) ; } }
23365	protected boolean requireRecentSdk ( ) { return _BOOL ; }
23376	public AemDialog closeIfVisible ( ) { if ( isVisible ( ) ) { cancel ( ) ; } return this ; }
23435	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysHit_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
23461	public void removeMarkers ( ) { Markers . removeMarkers ( pane , marker ) ; }
23615	@ Override public V put ( K key , V value ) { V oldValue = super . put ( key , value ) ; return ( oldValue == _NULL ) ? delegate . get ( key ) : oldValue ; }
23670	protected boolean isValid ( int ch ) { return XMLChar . isValid ( ch ) ; }
23711	protected boolean atAnyOfTokens ( Set < TokenKind > kinds ) { return kinds . contains ( currentToken ( ) ) ; }
23779	public void denyAll ( PermissionFlag flag , Message message ) { generalPermissions . put ( flag , message ) ; strictPermission . getOrDefault ( flag , emptyMap ( ) ) . values ( ) . removeIf ( _NULL ) ; }
23781	public Trap newTrap ( SootClass exception , Unit beginUnit , Unit endUnit , Unit handlerUnit ) { return new BTrap ( exception , beginUnit , endUnit , handlerUnit ) ; }
23846	public static float calculateBottom ( float left , float top , float right , float targetAspectRatio ) { final float width = right - left ; final float bottom = ( width / targetAspectRatio ) + top ; return bottom ; }
23874	public boolean contains ( T dataSet ) { for ( T set : mDataSets ) { if ( set . equals ( dataSet ) ) return _BOOL ; } return _BOOL ; }
23883	public static void logPromoSeen ( boolean wasPanelSeen , boolean wasTap ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchFirstRunPanelSeen _CHAR , wasPanelSeen ? RESULTS_SEEN : RESULTS_NOT_SEEN , RESULTS_SEEN_BOUNDARY ) ; logHistogramByGesture ( wasPanelSeen , wasTap , _CHAR Search . ContextualSearchPromoSeenByGesture _CHAR ) ; }
23934	public boolean isDashedHighlightLineEnabled ( ) { return mHighlightDashPathEffect != _NULL ; }
24042	public static boolean isEditableType ( String type ) { return editableTypes . contains ( type ) ; }
24057	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
24066	@ Override public void printStackTrace ( java . io . PrintStream s ) { if ( getCause ( ) != _NULL ) { getCause ( ) . printStackTrace ( s ) ; s . println ( _CHAR --------------- linked to ------------------ _CHAR ) ; } super . printStackTrace ( s ) ; }
24070	public boolean only_stack_locals ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR only - stack - locals _CHAR ) ; }
24232	public boolean geom_pta ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR geom - pta _CHAR ) ; }
24345	public TableSwitchStmt newTableSwitchStmt ( Value key , int lowIndex , int highIndex , List targets , Unit defaultTarget ) { return new GTableSwitchStmt ( key , lowIndex , highIndex , targets , defaultTarget ) ; }
24393	public static double [ ] readDoubles ( ) { return readAllDoubles ( ) ; }
24424	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelDeBuffMental_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
24528	public static String mapFullWidthLetterToHalfWidth ( String text ) { }
24550	public DynamicInvokeExpr newDynamicInvokeExpr ( SootMethodRef bootstrapMethodRef , List < ? extends Value > bootstrapArgs , SootMethodRef methodRef , int tag , List < ? extends Value > args ) { return new JDynamicInvokeExpr ( bootstrapMethodRef , bootstrapArgs , methodRef , tag , args ) ; }
24573	public boolean print_table ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR print - table _CHAR ) ; }
24577	public Trap newTrap ( SootClass exception , Unit beginStmt , Unit endStmt , Unit handlerStmt ) { return new JTrap ( exception , beginStmt , endStmt , handlerStmt ) ; }
24620	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillCastingTime_A_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
24742	public boolean only_stack_locals ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR only - stack - locals _CHAR ) ; }
24749	public Item createDaughter ( ) { return addDaughter ( _NULL ) ; }
24761	public void add ( int val ) { ensureCapacity ( _pos + _NUM ) ; _data [ _pos ++ ] = val ; }
24782	public void registerReceiver ( Context context ) { assert Looper . getMainLooper ( ) == Looper . myLooper ( ) ; if ( ! mIsRegistered . getAndSet ( _BOOL ) ) { context . registerReceiver ( this , new IntentFilter ( Intent . ACTION_SCREEN_ON ) ) ; mNeedToRunActions . set ( _BOOL ) ; } }
24829	public EntityQuery filterByDate ( Timestamp moment ) { if ( moment != _NULL ) { this . filterByDate = _BOOL ; this . filterByDateMoment = moment ; this . filterByFieldNames = _NULL ; } else { this . filterByDate = _BOOL ; this . filterByDateMoment = _NULL ; this . filterByFieldNames = _NULL ; } return this ; }
24919	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelBuffCounterATK_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
24981	private void createRecordHolderQueue ( File [ ] listFiles ) { this . recordHolderHeapLocal = new PriorityQueue < SortTempFileChunkHolder > ( listFiles . length ) ; }
24982	@ Override protected void createOrUpgradeTable ( SQLiteDatabase db , boolean force ) { mTableModels = getAllTableModels ( ) ; mDb = db ; dropTables ( ) ; }
25161	@ Override public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { writeText4Links ( ) ; writeEscUTF16 ( new String ( ch ) , start , length , _BOOL ) ; super . ignorableWhitespace ( ch , start , length ) ; }
25163	public static char [ ] encode ( byte [ ] in , int iLen ) { return encode ( in , _NUM , iLen ) ; }
25175	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSpellAttackEffect_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
25198	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CaseHeal_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
25224	public NotificationsMarkAsViewedQuery markAsViewed ( UserActor actor ) { return new NotificationsMarkAsViewedQuery ( getClient ( ) , actor ) ; }
25264	protected String formatTitle ( String title ) { if ( this . isNoFormat ( ) ) { return title ; } else { int colourCode = Utils . ansiColorCodes ( ) . get ( this . titleColour ) ; return _CHAR \ _NUM [ _NUM ; _CHAR + colourCode + _CHAR m _CHAR + title + _CHAR \ _NUM [ _NUM _CHAR ; } }
25389	public PointsToSet reachingObjects ( Local l , SootField f ) { return reachingObjects ( reachingObjects ( l ) , f ) ; }
25397	public synchronized boolean canThreadDecoding ( Thread t ) { ThreadStatus status = mThreadStatus . get ( t ) ; if ( status == _NULL ) { return _BOOL ; } return ( status . mState != State . CANCEL ) ; }
25415	public static String unicodeNotation ( int value ) { String result ; result = Integer . toHexString ( value ) . toUpperCase ( ) ; if ( result . length ( ) < _NUM ) { result = _CHAR _NUM _CHAR . substring ( result . length ( ) ) + result ; } result = UNICODE_PREFIX + result ; return ( result ) ; }
25419	public static boolean isDocumentAutoCorrected ( Document document ) { return _CHAR _BOOL _CHAR . equals ( document . getUserData ( _CHAR autoCorrected _CHAR ) ) ; }
25451	private static String massageURI ( String uri ) { uri = uri . trim ( ) ; int protocolEnd = uri . indexOf ( _CHAR ) ; if ( protocolEnd < _NUM || isColonFollowedByPortNumber ( uri , protocolEnd ) ) { uri = _CHAR http : // '' + uri ; } return uri ; }
25461	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
25467	public boolean isSet ( _Fields field ) { if ( field == _NULL ) { throw new IllegalArgumentException ( ) ; } switch ( field ) { case APPKEY : return isSetAppkey ( ) ; case SEND_TIME : return isSetSendTime ( ) ; case LOAD_INFO : return isSetLoadInfo ( ) ; case STATUS : return isSetStatus ( ) ; } throw new IllegalStateException ( ) ; }
25575	@ Override public void addView ( View child , int index , ViewGroup . LayoutParams params ) { if ( child . getId ( ) == R . id . card_root ) { super . addView ( child , index , params ) ; } else if ( child instanceof ActionButton ) { addActionButton ( ( ActionButton ) child ) ; } }
25658	protected void hideModel ( EpoxyModel < ? > model ) { showModel ( model , _BOOL ) ; }
25669	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
25748	private static void printStartMessage ( String host , String port , String logFilePath ) { LOG . info ( ConfigProperties . MINDMAPS_ASCII ) ; LOG . info ( _CHAR Mindmaps Engine is ready . Listening on [ http : // '' + host + '' : '' + port + '' ] '' ) ; LOG . info ( '' Mindmaps LOG file located at [ '' + logFilePath + '' ] '' ) ; }
25791	@ Override public SAXParser newSAXParser ( ) throws ParserConfigurationException { SAXParser saxParserImpl ; try { saxParserImpl = new SAXParserImpl ( this , features , fSecureProcess ) ; } catch ( SAXException se ) { throw new ParserConfigurationException ( se . getMessage ( ) ) ; } return saxParserImpl ; }
25849	public static int convert ( String stringValue ) { if ( Strings . isNullOrEmpty ( stringValue ) || TypeUtils . MISSING_INDICATORS . contains ( stringValue ) ) { return MISSING_VALUE ; } Matcher matcher = COMMA_PATTERN . matcher ( stringValue ) ; return Integer . parseInt ( matcher . replaceAll ( _CHAR _CHAR ) ) ; }
25958	@ Override public Schema schema ( ) { return schema ; }
26017	public void addedEdge ( Edge e ) { TreeMap hOutVertices = ( TreeMap ) Cache . get ( e . getVertexA ( ) . getLabel ( ) ) ; if ( hOutVertices == _NULL ) return ; else hOutVertices . put ( e . getVertexB ( ) . getLabel ( ) , e ) ; }
26073	private Intent createSettingsIntent ( ) { return PreferencesLauncher . createIntentForSettingsPage ( mApplicationContext , mAccountManagementFragment . getCanonicalName ( ) ) ; }
26113	public String makeLinkWithQueryString ( HttpServletRequest request , HttpServletResponse response , String url , ConfigXMLReader . RequestResponse requestResponse ) { return makeLinkWithQueryString ( request , response , url , _NULL , _NULL , _NULL , requestResponse ) ; }
26178	@ Override public void occurrence ( short occurrence , Augmentations augs ) throws XNIException { }
26318	public static int log2 ( int i ) { int r = _NUM ; while ( ( i >>= _NUM ) != _NUM ) { ++ r ; } return r ; }
26327	public PointsToSet reachingObjects ( PointsToSet s , final SootField f ) { if ( f . isStatic ( ) ) throw new RuntimeException ( _CHAR The parameter f must be an * instance * field . '' ) ; return reachingObjectsInternal ( s , f ) ; }
26354	private void newDrawableDialog ( ) { if ( Utils . isWindows ( ) ) { newDrawableDialogWindows ( ) ; } else { newDrawableDialogVisUI ( ) ; } }
26371	public boolean checkPresenceWithNoTimeout ( By locator ) { WebDriver webDriver = webDriverProvider . get ( ) ; webDriver . manage ( ) . timeouts ( ) . implicitlyWait ( IMPLICITLY_WAIT_TIME , TimeUnit . MILLISECONDS ) ; try { return ! webDriver . findElements ( locator ) . isEmpty ( ) ; } finally { webDriver . manage ( ) . timeouts ( ) . implicitlyWait ( defaultTimeout , TimeUnit . SECONDS ) ; } }
26381	@ Override public Schema schema ( ) { return schema ; }
26447	public boolean containsKey ( short key ) { return contains ( key ) ; }
26452	public Builder autoPanPaddingBottomRight ( Point autoPanPaddingBottomRight ) { this . autoPanPaddingBottomRight = autoPanPaddingBottomRight ; return this ; }
26465	public String toString ( ) { StringBuilder classPathBuilder = new StringBuilder ( _CHAR _CHAR ) ; for ( String cpEntry : _classpathList ) { classPathBuilder . append ( cpEntry ) ; classPathBuilder . append ( File . pathSeparatorChar ) ; } return classPathBuilder . toString ( ) ; }
26529	protected boolean searchForRecursiveIncludes ( String includedSysId ) { if ( includedSysId . equals ( fCurrentBaseURI . getExpandedSystemId ( ) ) ) { return _BOOL ; } else if ( fParentXIncludeHandler == _NULL ) { return _BOOL ; } else { return fParentXIncludeHandler . searchForRecursiveIncludes ( includedSysId ) ; } }
26553	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Recall_Instant_A_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
26626	private void authorizeDomain ( Registration registration , String domain ) { try { val authorization = getAuthorization ( registration , domain ) ; val challenge = prepareDnsChallenge ( authorization ) ; completeChallenge ( challenge ) ; } catch ( AcmeException e ) { e . printStackTrace ( ) ; throw new LetsencryptException ( e . getMessage ( ) ) ; } }
26691	private boolean isPrimitiveTypeWrapper ( ModelImpl modelImpl ) { return ( modelImpl . getProperties ( ) == _NULL && modelImpl . getAdditionalProperties ( ) == _NULL ) && ! Strings . isNullOrEmpty ( modelImpl . getType ( ) ) && ! _CHAR object _CHAR . equalsIgnoreCase ( modelImpl . getType ( ) ) && WellKnownTypeUtils . isPrimitiveType ( modelImpl . getType ( ) ) ; }
26753	private void clone ( final Properties properties ) { if ( properties . isEmpty ( ) ) return ; synchronized ( properties ) { for ( final String key : properties . stringPropertyNames ( ) ) { final String value = properties . getProperty ( key ) ; if ( ! Strings . isNullOrEmpty ( value ) ) { data . put ( key , value ) ; } } } }
26806	protected synchronized void addType ( String index , String typeName ) { if ( cacheIndicesTypes . containsKey ( index ) ) { cacheIndicesTypes . get ( index ) . add ( typeName ) ; log . debug ( _CHAR addType ( ) - Added type { } in memory list _CHAR , typeName ) ; } else { throw new IllegalArgumentException ( _CHAR Types must follow the format \ _CHAR tag_dataType \ _CHAR _CHAR ) ; } }
26891	public List < String > concernPackages ( ) { return _NULL ; }
26977	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPHeal_HEAL_A_TO_ME ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
27069	public synchronized void remove ( Lease lease ) throws UnknownLeaseException { Entry e = findEntry ( lease ) ; if ( ! removeLeaseInRenew ( e ) ) leases . remove ( e ) ; calcActualRenews ( ) ; logger . log ( Level . FINE , _CHAR Removed lease { _NUM } _CHAR , lease ) ; }
27092	public synchronized boolean canThreadDecoding ( Thread t ) { ThreadStatus status = mThreadStatus . get ( t ) ; if ( status == _NULL ) { return _BOOL ; } return ( status . mState != State . CANCEL ) ; }
27177	public Builder popUpAnchor ( Point popUpAnchor ) { this . popUpAnchor = popUpAnchor ; return this ; }
27288	private static RetainFragment findOrCreateRetainFragment ( FragmentManager fm ) { RetainFragment mRetainFragment = ( RetainFragment ) fm . findFragmentByTag ( TAG ) ; if ( mRetainFragment == _NULL ) { mRetainFragment = new RetainFragment ( ) ; fm . beginTransaction ( ) . add ( mRetainFragment , TAG ) . commitAllowingStateLoss ( ) ; } return mRetainFragment ; }
27351	public boolean do_mhp ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR do - mhp _CHAR ) ; }
27362	protected void makeDecisionTablesConsistentWithPersistedVersions ( ParsedDeployment parsedDeployment ) { for ( DecisionTableEntity decisionTable : parsedDeployment . getAllDecisionTables ( ) ) { DecisionTableEntity persistedDecisionTable = dmnDeploymentHelper . getPersistedInstanceOfDecisionTable ( decisionTable ) ; if ( persistedDecisionTable != _NULL ) { decisionTable . setId ( persistedDecisionTable . getId ( ) ) ; decisionTable . setVersion ( persistedDecisionTable . getVersion ( ) ) ; } } }
27382	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
27473	public static float calculateLeft ( float top , float right , float bottom , float targetAspectRatio ) { final float height = bottom - top ; final float left = right - ( targetAspectRatio * height ) ; return left ; }
27489	@ ManagedOperation ( description = _CHAR Runs task performed on every server restart ( does nothing so far ) _CHAR ) public void refreshAfterStandardRestart ( ) { }
27534	protected boolean lockJobIfNeeded ( ) { try { if ( job . isExclusive ( ) ) { processEngineConfiguration . getCommandExecutor ( ) . execute ( new LockExclusiveJobCmd ( job ) ) ; } } catch ( Throwable lockException ) { if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR Could not lock exclusive job . Unlocking job so it can be acquired again . Catched exception : _CHAR + lockException . getMessage ( ) ) ; } unacquireJob ( ) ; return _BOOL ; } return _BOOL ; }
27541	@ NotNull public static String attrOrDefault ( @ NotNull Attributes attributes , @ NotNull String name , @ NotNull String defaultValue ) { String value = attributes . getValue ( name ) ; return ( value != _NULL ) ? value : defaultValue ; }
27607	public static boolean isFileOlder ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) < timeMillis ; }
27625	@ Override public String object2Relation ( String fieldType ) { if ( fieldType != _NULL ) { if ( fieldType . equals ( _CHAR byte _CHAR ) || fieldType . equals ( _CHAR java . lang . Byte _CHAR ) ) { return _CHAR blob _CHAR ; } } return _NULL ; }
27743	public static boolean canDeconstruct ( ItemStack stack ) { return stack != _NULL && ( stack . getItem ( ) instanceof IDeconstructable ) && ( ( IDeconstructable ) stack . getItem ( ) ) . canDestroy ( stack ) ; }
27786	@ Deprecated public static String percentageWithTwoCharacters ( final double decimalNumber ) { final int percentage = ( int ) Math . round ( decimalNumber * PERCENTAGE_FACTOR ) ; return ( percentage < PERCENTAGE_FACTOR ) ? StringUtils . leftPad ( String . valueOf ( percentage ) , _NUM , _CHAR ) : _CHAR XX _CHAR ; }
27844	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SubTypeBoostResist_ME_TO_B ( String skilltarget , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , value0 , skillname ) ; }
27935	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnAttacked_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
27941	public PlacesCheckinQuery longitude ( Float value ) { return unsafeParam ( _CHAR longitude _CHAR , value ) ; }
27970	public static float calculateRight ( float left , float top , float bottom , float targetAspectRatio ) { final float height = bottom - top ; return ( targetAspectRatio * height ) + left ; }
28078	public void goToNextColor ( ) { mColorIndex = ( mColorIndex + _NUM ) % ( mColors . length ) ; }
28090	public boolean print_table ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR print - table _CHAR ) ; }
28117	protected AdsAddOfficeUsersQuery data ( String value ) { return unsafeParam ( _CHAR data _CHAR , value ) ; }
28138	public static double readDouble ( ) { return scanner . nextDouble ( ) ; }
28156	public < R > Plan < R > then ( Function3 < T1 , T2 , T3 , R > selector ) { if ( selector == _NULL ) { throw new NullPointerException ( ) ; } return new Plan3 < T1 , T2 , T3 , R > ( this , selector ) ; }
28179	public static < T > Aggregate < Map < String , Concept > , Map < Concept , T >> group ( String varName , Aggregate < ? super Map < String , Concept > , T > innerAggregate ) { return new GroupAggregate < > ( varName , innerAggregate ) ; }
28202	public static int readInt ( ) { return scanner . nextInt ( ) ; }
28203	private boolean has ( Object spec ) { if ( ! matched ) { return _BOOL ; } String match = matcher . group ( EXPR_TOKEN_GROUP ) ; if ( spec instanceof Pattern ) { return ( ( Pattern ) spec ) . matcher ( match ) . matches ( ) ; } return spec . equals ( match ) ; }
28236	private void delayedHide ( int delayMillis ) { mHideHandler . removeCallbacks ( mHideRunnable ) ; mHideHandler . postDelayed ( mHideRunnable , delayMillis ) ; }
28506	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_CHANGE_SKIN_OPPOSITE_REQUIREMENT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
28546	private void assertResult ( String expected , String result ) { if ( diagCollector . getErrorCount ( ) > _NUM ) { Truth . assertWithMessage ( _CHAR Errors detected while filtering comment '' ) . fail ( NEWLINE_JOINER . join ( diagCollector . getErrors ( ) ) ) ; } else { Truth . assertThat ( result ) . isEqualTo ( expected ) ; } }
28588	public void goToNextColor ( ) { mColorIndex = ( mColorIndex + _NUM ) % ( mColors . length ) ; }
28605	public boolean isExpanded ( int row ) { return getBoolean ( row , VisualItem . EXPANDED ) ; }
28637	@ Override public int lastIndexOf ( Object object ) { return mItems . lastIndexOf ( object ) ; }
28726	public FriendsGetOnlineQueryWithMobile listId ( Integer value ) { return unsafeParam ( _CHAR list_id _CHAR , value ) ; }
28732	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillCost_A_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
28733	public void goToNextColor ( ) { mColorIndex = ( mColorIndex + _NUM ) % ( mColors . length ) ; }
28779	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OpenAerial_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
28790	private void checkDigest ( ) throws WrongMessageDigestException { if ( ! checked ) { byte [ ] result = messageDigest . digest ( ) ; checked = _BOOL ; if ( ! MessageDigest . isEqual ( result , expectedDigest ) ) { failed = _CHAR Incorrect message digest for '' + url + '' : '' + HttpmdUtil . digestString ( result ) ; checkFailed ( ) ; } } }
28852	public Trap newTrap ( SootClass exception , Unit beginStmt , Unit endStmt , Unit handlerStmt ) { return new GTrap ( exception , beginStmt , endStmt , handlerStmt ) ; }
28906	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_Instant_HEAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
28932	@ Override public void subscribeTags ( Set < Long > tagIds ) { ExecutorService executorService = Executors . newSingleThreadExecutor ( ) ; executorService . execute ( new AsyncTagSubscriptionTask ( tagIds ) ) ; }
28963	private static String convertRelevance ( int relevance ) { StringBuilder sb = new StringBuilder ( ) ; while ( relevance > _NUM ) { sb . insert ( _NUM , REVERSE_CHAR_MAP [ relevance % _NUM ] ) ; relevance = relevance / _NUM ; } return sb . toString ( ) ; }
29019	public Builder withLeaseId ( long leaseId ) { checkArgument ( leaseId >= _NUM , _CHAR leaseId should greater than or equal to zero : leaseId = % s _CHAR , leaseId ) ; this . leaseId = leaseId ; return this ; }
29077	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedFPATK_Instant_INTERVAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
29079	public PointsToSet reachingObjects ( Local l , SootField f ) { return reachingObjects ( f ) ; }
29120	public void fireIterationStartedEvent ( final IterationEvent e ) { for ( IterationListener l : listeners ) { l . iterationStarted ( e ) ; } }
29184	public static String toREditRate ( BigFraction editRate ) { return String . format ( _CHAR % s / % s _CHAR , String . valueOf ( editRate . getNumeratorAsLong ( ) ) , String . valueOf ( editRate . getDenominatorAsLong ( ) ) ) ; }
29212	public static StateContext newDefaultInstance ( ) { return newInstance ( DefaultTable . factory ( ) , new DefaultMetatableAccessor ( ) ) ; }
29348	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM , _NUM . _NUM - _NUM } ; }
29432	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_Instant_HEAL_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
29446	public void downloadImage ( String location , int index ) { new DownloadImage ( context , location , ContextCompat . getColor ( context , R . color . transparent1 ) ) . execute ( urls [ index ] ) ; }
29471	@ Override public Grammar retrieveGrammar ( XMLGrammarDescription gDesc ) { Grammar g = super . retrieveGrammar ( gDesc ) ; if ( g != _NULL ) return g ; return fGrammarPool . retrieveGrammar ( gDesc ) ; }
29545	protected boolean atAnyOfTokens ( TokenKind ... kinds ) { TokenKind current = currentToken ( ) ; for ( TokenKind kind : kinds ) { if ( current == kind ) { return _BOOL ; } } return _BOOL ; }
29615	public Locale findById ( Long localeId ) { return getLocalesIdMap ( ) . get ( localeId ) ; }
29673	boolean checkAnchorChanged ( ) { return mAnchorView == _NULL && mAnchorId != View . NO_ID ; }
29698	public void savePosition ( ) { RecordId rid1 = s1 . getRecordId ( ) ; RecordId rid2 = ( s2 == _NULL ) ? _NULL : s2 . getRecordId ( ) ; savedPosition = Arrays . asList ( rid1 , rid2 ) ; }
29866	public void sendToFilterModuleByDynamicTimedeadbandFilterer ( final SourceDataTag currentSourceDataTag , final ValueUpdate update , final SourceDataTagQuality quality , final int filterType ) { doSendToFilterModule ( currentSourceDataTag , update , quality , _BOOL , filterType ) ; }
29881	public static boolean isPossibleToReadResource ( Acl acl , String userModifier , String projectName ) { if ( ! acl . getOwnerUserId ( ) . equalsIgnoreCase ( userModifier ) ) if ( ! acl . getEntries ( ) . stream ( ) . filter ( Preconditions . hasACLPermission ( projectName , AclPermissions . READ ) ) . findFirst ( ) . isPresent ( ) ) return _BOOL ; return _BOOL ; }
29900	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeTypeBoostSkillLevel_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
30032	public void addHeader ( Header header ) { if ( header == _NULL ) { return ; } headers . add ( header ) ; }
30167	public long putIfAbsent ( short key , long value ) { int index = insertionIndex ( key ) ; if ( index < _NUM ) return _values [ - index - _NUM ] ; return doPut ( key , value , index ) ; }
30201	public void addProperty ( String property , Number value ) { add ( property , createJsonElement ( value ) ) ; }
30284	public boolean removeCondition ( FallbackCondition condition ) { return this . fallbackConditions . remove ( condition ) ; }
30305	private boolean isZeroToThree ( final char ch ) { return ch >= _CHAR && ch <= _CHAR ; }
30339	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PROCMPHeal_Instant_HEAL_ME_TO_B ( String skilltarget , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillname ) ; }
30427	public boolean contains ( T dataSet ) { for ( int i = _NUM ; i < mDataSets . size ( ) ; i ++ ) { T set = mDataSets . get ( i ) ; if ( set . equals ( dataSet ) ) { return _BOOL ; } } return _BOOL ; }
30438	public final TestSubscriber < T > configureValuesTimeout ( Duration timeout ) { this . valuesTimeout = timeout ; return this ; }
30622	public static SM_SYSTEM_MESSAGE STR_MSG_GET_ITEM_PARTYNOTICE_DICE ( String value0 , String value3 , String value1 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value3 , value1 , value2 ) ; }
30633	@ Override protected FlowSet < N > newInitialFlow ( ) { return ( FlowSet < N > ) fullSet . clone ( ) ; }
30659	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_ME_TO_B ( String skillcaster , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skilltarget , skillname ) ; }
30669	private boolean initIfNecessary ( ) { if ( ourDeviceManager == _NULL ) { if ( mySdkPath == _NULL ) { IJ_LOG . error ( _CHAR No installed SDK found ! _CHAR ) ; return _BOOL ; } ourDeviceManager = DeviceManager . createInstance ( mySdkPath , SDK_LOG ) ; } return _BOOL ; }
30698	public static boolean readBoolean ( ) { String s = readString ( ) ; if ( s . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( s . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( s . equals ( _CHAR _NUM _CHAR ) ) return _BOOL ; if ( s . equals ( _CHAR _NUM _CHAR ) ) return _BOOL ; throw new InputMismatchException ( ) ; }
30763	public void store ( File file , Storable obj ) throws IOException { try ( FileOutputStream fos = new FileOutputStream ( file ) ) { serializer . write ( fos , obj ) ; } }
30772	public SiteAdminPage createNewPage ( String title , String name , String templateName ) { openCreatePageWindow ( ) ; createPageWindow . createPage ( title , name , templateName ) ; grid . waitForLoaderNotPresent ( ) ; return this ; }
30797	protected void updateCache ( ) { int needed = argPairs . size ( ) ; predToPair = new HashMap < Unit , ValueUnitPair > ( needed << _NUM , _NUM . _NUM ) ; for ( ValueUnitPair vup : argPairs ) { predToPair . put ( vup . getUnit ( ) , vup ) ; } }
30868	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
30900	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_CAN_NOT_INVITE_HIM_HE_IS_NOT_PARTY_LEADER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
30912	public void put0 ( int i , Z val ) { re [ i ] = val . re ; im [ i ] = val . im ; }
30932	private static ExternalSystem resetNTLMFields ( ExternalSystem input ) { input . setUsername ( _NULL ) ; input . setPassword ( _NULL ) ; input . setDomain ( _NULL ) ; return input ; }
31089	public Builder maxZoom ( Number maxZoom ) { this . maxZoom = maxZoom ; return this ; }
31164	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostHate_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
31174	public static void logResultsSeen ( boolean wasPanelSeen , boolean wasTap ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchResultsSeen _CHAR , wasPanelSeen ? RESULTS_SEEN : RESULTS_NOT_SEEN , RESULTS_SEEN_BOUNDARY ) ; logHistogramByGesture ( wasPanelSeen , wasTap , _CHAR Search . ContextualSearchResultsSeenByGesture _CHAR ) ; }
31226	public static boolean isValidApiVersion ( String apiVersion ) { return SEMANTIC_VERSION_REGEX_PATTERN . matcher ( apiVersion ) . matches ( ) ; }
31248	public void removeOperationListener ( OnRemoteOperationListener listener ) { synchronized ( mBoundListeners ) { mBoundListeners . remove ( listener ) ; } }
31313	protected AdsCreateAdsQuery data ( String value ) { return unsafeParam ( _CHAR data _CHAR , value ) ; }
31396	public void recordLatency ( double latencySec ) { if ( ! this . serverHandledLatencySeconds . isPresent ( ) ) { return ; } addLabels ( this . serverHandledLatencySeconds . get ( ) ) . observe ( latencySec ) ; }
31442	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PetOrderUnSummon_A_TO_ME ( String skillname , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname , skillcaster ) ; }
31446	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
31475	private void checkDifferState ( ) { differObserver . operationCount = _NUM ; testAdapter . registerAdapterDataObserver ( differObserver ) ; testAdapter . notifyModelsChanged ( ) ; testAdapter . unregisterAdapterDataObserver ( differObserver ) ; Assert . assertEquals ( _CHAR Should not have any operations _CHAR , _NUM , differObserver . operationCount ) ; }
31515	protected void handleFile ( File file , int depth , Collection < T > results ) throws IOException { }
31571	public static boolean canRun ( ) { if ( ourInitialCheck == _NULL ) { ourInitialCheck = checkHaxmInstallation ( ) ; } switch ( ourInitialCheck ) { case NO_EMULATOR_INSTALLED : case UNKNOWN_ERROR : return SystemInfo . isMac || SystemInfo . isWindows ; case NOT_ENOUGH_MEMORY : case ALREADY_INSTALLED : return _BOOL ; default : switch ( ourInitialCheck . getSolution ( ) ) { case INSTALL_HAXM : case REINSTALL_HAXM : return _BOOL ; default : return _BOOL ; } } }
31587	public Builder popupAnchor ( Point popupAnchor ) { this . popupAnchor = popupAnchor ; return this ; }
31605	private void processXMLForClass ( SootClass c ) { final int format = Options . v ( ) . output_format ( ) ; String fileName = SourceLocator . v ( ) . getFileNameFor ( c , format ) ; XMLAttributesPrinter xap = new XMLAttributesPrinter ( fileName , SourceLocator . v ( ) . getOutputDir ( ) ) ; xap . printAttrs ( c ) ; }
31606	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcDPHeal_Instant_HEAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
31677	static < T > AnyVal < Object > headTail ( T head , ConsList < T > tail ) { return new AnyConsImpl ( head , _NULL , tail , _NULL ) ; }
31759	public void inverseTranslateVect ( float [ ] vec ) { if ( vec . length != _NUM ) { throw new IllegalArgumentException ( _CHAR vec must be of size _NUM . _CHAR ) ; } vec [ _NUM ] = vec [ _NUM ] - m03 ; vec [ _NUM ] = vec [ _NUM ] - m13 ; vec [ _NUM ] = vec [ _NUM ] - m23 ; }
31844	protected AdsCreateCampaignsQuery data ( String value ) { return unsafeParam ( _CHAR data _CHAR , value ) ; }
31867	public boolean isDrawSlicesUnderHoleEnabled ( ) { return mDrawSlicesUnderHole ; }
31958	public void resetPropertyValue ( Object property ) { }
31968	public void start ( ) { this . documentUpdateTimeMicros = _NUM ; verifySubscriptionTargetExists ( _NULL ) ; }
32092	public static boolean isFileOlder ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) < timeMillis ; }
32167	public boolean addChild ( DominatorNode < N > child ) { if ( children . contains ( child ) ) { return _BOOL ; } else { children . add ( child ) ; return _BOOL ; } }
32217	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Rebirth_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
32375	@ Override public IBinder onBind ( Intent arg ) { return mBinder ; }
32440	@ Override public void occurrence ( short occurrence , Augmentations augmentations ) throws XNIException { }
32442	public boolean isEmptyTemplate ( ) { return getServerTypeDesc ( ) . isRootType ( ) ; }
32486	private static boolean isNullValue ( String value , String valueMeaning ) { if ( value == _NULL ) { LOGGER . warning ( _CHAR Setting _NULL _CHAR + valueMeaning + _CHAR ! _CHAR ) ; return _BOOL ; } return _BOOL ; }
32564	public void serviceIDNotify ( ServiceID serviceID ) { if ( _logger . isLoggable ( Level . INFO ) ) { _logger . info ( _CHAR < _CHAR + m_ContainerName + _CHAR > container registered with _CHAR + serviceID . toString ( ) + _CHAR serviceID successfully . '' ) ; } }
32624	public static < T > CompletionStage < T > withRetries ( Supplier < CompletionStage < T >> tFactory , int maxRetries ) { return tFactory . get ( ) . handle ( _NULL ) . thenCompose ( _NULL ) ; }
32631	public Builder shadowUrl ( String shadowUrl ) { this . shadowUrl = shadowUrl ; return this ; }
32641	@ Override public void printStackTrace ( PrintWriter s ) { if ( getCause ( ) != _NULL ) { getCause ( ) . printStackTrace ( s ) ; s . println ( _CHAR --------------- linked to ------------------ _CHAR ) ; } super . printStackTrace ( s ) ; }
32656	public Object optionalWait ( ExpectedCondition < WebElement > condition ) { try { return bobcatWait . withTimeout ( Timeouts . SMALL ) . until ( condition ) ; } catch ( TimeoutException ignored ) { return _NULL ; } }
32658	public EmailBuilder bcc ( String bcc ) { this . bcc . add ( bcc ) ; return this ; }
32720	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_INTERVAL_A_TO_B ( String skilltarget , int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillcaster , skillname ) ; }
32759	@ Override protected boolean requireRecentSdk ( ) { return _BOOL ; }
32808	private static ColumnType selectType ( List < ColumnType > typeCandidates ) { if ( typeCandidates . isEmpty ( ) ) { return CATEGORY ; } else { return typeCandidates . get ( _NUM ) ; } }
32823	public Iterator < E > iterator ( ) { return map . keySet ( ) . iterator ( ) ; }
32868	protected void showModels ( Iterable < EpoxyModel < ? >> models ) { showModels ( models , _BOOL ) ; }
32896	public boolean isInteractive ( int row ) { return getBoolean ( row , VisualItem . INTERACTIVE ) ; }
32942	@ Override public ASContentModel createASContentModel ( int minOccurs , int maxOccurs , short operator ) throws DOMASException { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
33004	public int lastIndexOf ( short value ) { return lastIndexOf ( _pos , value ) ; }
33008	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnAttacked_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
33161	@ Override public Lookup createGlobalContext ( ) { if ( proxyLookup == _NULL ) { logger . config ( _CHAR Creating a proxy for Utilities . actionsGlobalContext ( ) _CHAR ) ; projectLookup = new AbstractLookup ( content ) ; proxyLookup = new ProxyLookup ( globalContextLookup , projectLookup ) ; } return proxyLookup ; }
33190	public Iterator < Object > iterator ( ) { return components ( ) . iterator ( ) ; }
33240	public static ArgumentException unknownValueForMultiValuedProperty ( String value , String propertyName ) { LocalizableMessage msg = ERR_DSCFG_ERROR_VALUE_DOES_NOT_EXIST . get ( value , propertyName ) ; return new ArgumentException ( msg ) ; }
33292	public KeyInfoConfirmationData createKeyInfoConfirmationData ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . KEYINFO_CONFIRMATION_DATA , elem ) ; if ( obj == _NULL ) { return new KeyInfoConfirmationDataImpl ( elem ) ; } else { return ( KeyInfoConfirmationData ) obj ; } }
33338	public boolean removeAll ( Attribute attribute ) { boolean wasModified = _BOOL ; for ( ByteString v : attribute ) { wasModified |= remove ( v ) ; } return wasModified ; }
33372	public StatusMessage createStatusMessage ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_MESSAGE , elem ) ; if ( object == _NULL ) { return new StatusMessageImpl ( elem ) ; } else { return ( StatusMessage ) object ; } }
33436	public boolean isAssured ( ) { return assuredFlag ; }
33524	public void removeTableModelListener ( TableModelListener l ) { listenerList . remove ( TableModelListener . class , l ) ; }
33554	public TagStructureContext removeElementConnectionToTag ( IAccessibleElement element ) { PdfStructElem structElem = connectedModelToStruct . remove ( element ) ; removeStructToModelConnection ( structElem ) ; return this ; }
33629	public static TypeReference newExceptionReference ( int exceptionIndex ) { return new TypeReference ( ( THROWS << _NUM ) | ( exceptionIndex << _NUM ) ) ; }
33702	public PrintWriter log ( PrintWriter out ) { return log ( this , out ) ; }
33704	boolean persistValue ( int id ) { int bit = _NUM << id ; return ( persistValue & bit ) != _NUM ; }
33806	private static int convertFromDphi ( int dphi , int units ) { if ( units < _NUM ) { throw new IllegalArgumentException ( _CHAR : units is < _NUM _CHAR ) ; } int round = units / _NUM ; return ( dphi + round ) / units ; }
33874	protected boolean reportNode ( ) { state = ITERATE_CHILDREN ; if ( visitedNode . getParent ( ) != _NULL && ( ! getOptions ( ) . isJustLeafnodes ( ) || ! visitedNode . hasChildren ( ) ) ) { returnProperty = createPropertyInfo ( visitedNode , getBaseNS ( ) , path ) ; return _BOOL ; } else { return hasNext ( ) ; } }
33929	public void eventError ( String errorStr ) { debug . error ( _CHAR ACIEventListener . eventError ( ) : _CHAR + errorStr ) ; }
34000	public Node selectSingleNode ( Node contextNode , String str , Node namespaceNode ) throws TransformerException { NodeIterator nl = selectNodeIterator ( contextNode , str , namespaceNode ) ; return nl . nextNode ( ) ; }
34025	public Resource supportedAction ( final Action action ) { this . supportedActions . add ( action ) ; return this ; }
34099	public boolean isNamespaceDeclUris ( ) { return namespaceDeclUris ; }
34109	public boolean validate ( ResponseHeaders networkResponse ) { if ( networkResponse . headers . getResponseCode ( ) == HttpURLConnection . HTTP_NOT_MODIFIED ) { return _BOOL ; } if ( lastModified != _NULL && networkResponse . lastModified != _NULL && networkResponse . lastModified . getTime ( ) < lastModified . getTime ( ) ) { return _BOOL ; } return _BOOL ; }
34252	private void examineCompletedOperation ( SearchOperation searchOperation ) { assertTrue ( searchOperation . getProcessingStartTime ( ) > _NUM ) ; assertTrue ( searchOperation . getProcessingStopTime ( ) > _NUM ) ; assertTrue ( searchOperation . getProcessingTime ( ) >= _NUM ) ; ensurePostReponseHasRun ( ) ; }
34323	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
34357	public Assertion createAssertion ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION , xml ) ; if ( obj == _NULL ) { return new AssertionImpl ( xml ) ; } else { return ( Assertion ) obj ; } }
34448	public static ProxiedAuthV1RequestControl newControl ( final String authorizationName ) { Reject . ifNull ( authorizationName ) ; return new ProxiedAuthV1RequestControl ( DN . valueOf ( authorizationName ) ) ; }
34450	public static ProtobufWriteContext createNullContext ( ) { return _NULL ; }
34478	public void flush ( ) { rootRenderer . flush ( ) ; }
34523	private boolean isPropertyTrue ( String propertyName ) { return _CHAR _BOOL _CHAR . equalsIgnoreCase ( getProperty ( propertyName ) ) ; }
34560	public static char [ ] encode ( byte [ ] in , int iLen ) { return encode ( in , _NUM , iLen ) ; }
34575	public java . lang . String toString ( ) { return toString ( _BOOL , _BOOL ) ; }
34704	public Status createStatus ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS , elem ) ; if ( object == _NULL ) { return new StatusImpl ( elem ) ; } else { return ( Status ) object ; } }
34730	public void clear ( ) { modCount ++ ; Object [ ] tab = table ; for ( int i = _NUM ; i < tab . length ; i ++ ) tab [ i ] = _NULL ; size = _NUM ; }
34744	private void examineCompletedOperation ( AbandonOperation abandonOperation ) { assertTrue ( abandonOperation . getIDToAbandon ( ) > _NUM ) ; assertTrue ( abandonOperation . getProcessingStartTime ( ) > _NUM ) ; assertTrue ( abandonOperation . getProcessingStopTime ( ) > _NUM ) ; assertTrue ( abandonOperation . getProcessingTime ( ) >= _NUM ) ; }
34755	public org . omg . CORBA . TypeCode _type ( ) { return ORB . init ( ) . get_primitive_tc ( TCKind . tk_octet ) ; }
34798	public AuthnStatement createAuthnStatement ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_STATEMENT , elem ) ; if ( obj == _NULL ) { return new AuthnStatementImpl ( elem ) ; } else { return ( AuthnStatement ) obj ; } }
34813	public boolean hasBeenModified ( ) { if ( ! hasSubSchema ( ) ) { return isAttributesModified ( ) ; } else { boolean modified = isAttributesModified ( ) ; for ( Map . Entry < String , ServiceSchemaModificationWrapper > subSchema : subSchemas . entrySet ( ) ) { modified |= subSchema . getValue ( ) . hasBeenModified ( ) ; } return modified ; } }
34841	@ Override public boolean isFormField ( ) { return isFormField ; }
34900	public SignerInformationStore generateCounterSigners ( SignerInformation signer , String sigProvider ) throws NoSuchAlgorithmException , NoSuchProviderException , CMSException { return this . generate ( _NULL , new CMSProcessableByteArray ( signer . getSignature ( ) ) , _BOOL , CMSUtils . getProvider ( sigProvider ) ) . getSignerInfos ( ) ; }
34907	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new RuntimeException ( e ) ; } }
34936	@ SuppressWarnings ( _CHAR unused _CHAR ) public float percentageToAngle ( float percentage ) { return ( this . mAngleSweep * ( percentage / _NUM ) ) + this . mAngleStart ; }
34966	public StatusCode createStatusCode ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_CODE , elem ) ; if ( object == _NULL ) { return new StatusCodeImpl ( elem ) ; } else { return ( StatusCode ) object ; } }
35033	private void safeDamageRange ( int a0 , int a1 ) throws BadLocationException { Document doc = component . getDocument ( ) ; safeDamageRange ( doc . createPosition ( a0 ) , doc . createPosition ( a1 ) ) ; }
35171	public void updateBackgroundPadding ( Rect padding ) { mBackgroundPadding . set ( padding ) ; }
35260	public void close ( ) throws IOException { isClosed = _BOOL ; impl . close ( ) ; }
35296	public Share removeShare ( String shareId ) { return shares . remove ( shareId ) ; }
35362	public ApiParameterAssert hasI18nDescriptions ( ) { for ( Parameter parameter : actual ) { assertI18nDescription ( parameter . description ( ) , annotatedClass ) ; } return this ; }
35426	public void changedUpdate ( FlowView fv , DocumentEvent e , Rectangle alloc ) { sync ( fv ) ; super . changedUpdate ( fv , e , alloc ) ; }
35460	public ShapeTileSimplex remove_border_line ( int p_no ) { if ( p_no < _NUM || p_no >= lines_size ( ) ) { return this ; } ArrayList < PlaLineInt > new_arr = new ArrayList < PlaLineInt > ( lines_size ( ) ) ; new_arr . addAll ( lines_list ) ; new_arr . remove ( p_no ) ; return new ShapeTileSimplex ( new_arr ) ; }
35462	public void swap_pin ( Point2D p_location ) { if ( board_is_read_only ) return ; if ( ! is_StateMenu ( ) ) return ; PlaPointFloat location = gdi_context . coordinate_transform . screen_to_board ( p_location ) ; StateInteractive return_state = ( ( StateMenu ) interactive_state ) . swap_pin ( location ) ; set_interactive_state ( return_state ) ; }
35601	public void addCertStore ( CertStore store ) { if ( store == _NULL ) { return ; } if ( certStores == _NULL ) { certStores = new ArrayList < CertStore > ( ) ; } certStores . add ( store ) ; }
35741	public Action createAction ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ACTION , xml ) ; if ( obj == _NULL ) { return new ActionImpl ( xml ) ; } else { return ( Action ) obj ; } }
35742	@ Parameters ( { _CHAR logtest - realm _CHAR } ) @ AfterSuite ( groups = { _CHAR api - adminwrite _CHAR , _CHAR api - adminread _CHAR } ) public void suiteTearDown ( String realm ) { }
35832	public void clear ( ) { map . clear ( ) ; }
35853	public static Map < String , File > filesInDirectory ( String dir , Pattern regex ) { return filesInDirectory ( dir , regex , _BOOL ) ; }
35875	@ Override protected void shutdown ( ) { Arrays . fill ( mac_write_secret , ( byte ) _NUM ) ; Arrays . fill ( mac_read_secret , ( byte ) _NUM ) ; super . shutdown ( ) ; }
35931	protected void uninstallDefaults ( ) { LookAndFeel . installColorsAndFont ( comboBox , _CHAR ComboBox . background _CHAR , _CHAR ComboBox . foreground _CHAR , _CHAR ComboBox . font _CHAR ) ; LookAndFeel . uninstallBorder ( comboBox ) ; }
35935	public void changedUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { super . changedUpdate ( e , a , f ) ; StyleSheet sheet = getStyleSheet ( ) ; attr = sheet . getViewAttributes ( this ) ; preferenceChanged ( _NULL , _BOOL , _BOOL ) ; }
35941	public ConversationFactory withFirstPrompt ( Prompt firstPrompt ) { this . firstPrompt = firstPrompt ; return this ; }
35955	public void paintTabbedPaneContentBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
36171	public void addLayoutComponent ( String name , Component comp ) { invalidateLayout ( comp . getParent ( ) ) ; }
36178	public XACMLAuthzDecisionQuery createXACMLAuthzDecisionQuery ( Element elem ) throws XACMLException , SAML2Exception { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_QUERY , elem ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionQueryImpl ( elem ) ; } else { return ( XACMLAuthzDecisionQuery ) obj ; } }
36203	@ Override public String toString ( ) { StringBuilder builder = new StringBuilder ( super . toString ( ) ) ; builder . append ( _CHAR ( _CHAR ) ; builder . append ( new String ( magicNumbers ) ) ; builder . append ( _CHAR , _CHAR ) ; builder . append ( this . byteOffset ) ; builder . append ( _CHAR ) _CHAR ) ; return builder . toString ( ) ; }
36290	private static void swingInvoke ( Runnable r ) throws InterruptedException { try { SwingUtilities . invokeAndWait ( r ) ; } catch ( InterruptedException x ) { throw x ; } catch ( InvocationTargetException x ) { x . printStackTrace ( ) ; } }
36383	public static boolean isLoggable ( String tag , int level ) { return Log . isLoggable ( tag , level ) ; }
36394	boolean alwaysOnTop ( ) { return _BOOL ; }
36407	public static byte [ ] serializeECPoint ( ECPointFormat [ ] ecPointFormats , ECPoint point ) throws IOException { short [ ] pf = convertPointFormats ( ecPointFormats ) ; return TlsECCUtils . serializeECPoint ( pf , point ) ; }
36433	public void removeLayoutComponent ( Component comp ) { invalidateLayout ( comp . getParent ( ) ) ; }
36441	protected int insertIndexForLayer ( int layer , int position ) { return insertIndexForLayer ( _NULL , layer , position ) ; }
36485	@ Override public AsyncContext startAsync ( ServletRequest servletRequest , ServletResponse servletResponse ) throws IllegalStateException { return request . startAsync ( servletRequest , servletResponse ) ; }
36509	private void safeDamageRange ( final Position p0 , final Position p1 ) { safeDamager . damageRange ( p0 , p1 ) ; }
36609	public void _write ( OutputStream output ) { output . write_fixed ( value ) ; }
36623	public ArtifactResolve createArtifactResolve ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESOLVE , xml ) ; if ( obj == _NULL ) { return new ArtifactResolveImpl ( xml ) ; } else { return ( ArtifactResolve ) obj ; } }
36644	@ Override public final void normalize ( ) { Node next ; for ( Node node = getFirstChild ( ) ; node != _NULL ; node = next ) { next = node . getNextSibling ( ) ; node . normalize ( ) ; if ( node . getNodeType ( ) == Node . TEXT_NODE ) { ( ( TextImpl ) node ) . minimize ( ) ; } } }
36679	public void removeChargingCollectionFunctionAddress ( String ccfAddress ) throws ParseException { if ( ccfAddress == _NULL ) throw new NullPointerException ( _CHAR JAIN - SIP Exception , _CHAR + _CHAR P - Charging - Function - Addresses , setChargingCollectionFunctionAddress ( ) , the ccfAddress parameter is _NULL . _CHAR ) ; if ( ! this . delete ( ccfAddress , ParameterNamesIms . CCF ) ) { throw new ParseException ( _CHAR CCF Address Not Removed _CHAR , _NUM ) ; } }
36765	private static DN makeDNFromHostnameAndPath ( String hostname , String ipath ) throws ADSContextException { return DN . valueOf ( _CHAR cn = _CHAR + Rdn . escapeValue ( hostname + _CHAR @ _CHAR + ipath ) + _CHAR , _CHAR + getServerContainerDN ( ) ) ; }
36782	@ Override protected void writeValue ( ASN1Writer writer ) throws IOException { writer . writeStartSequence ( ASN1 . UNIVERSAL_OCTET_STRING_TYPE ) ; writer . writeBoolean ( visibility ) ; writer . writeEndSequence ( ) ; }
36834	public EncryptedID createEncryptedID ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTEDID , xml ) ; if ( obj == _NULL ) { return new EncryptedIDImpl ( xml ) ; } else { return ( EncryptedID ) obj ; } }
36938	private boolean isAReferenceTag ( String str ) { if ( str == _NULL ) { return _BOOL ; } return str . indexOf ( _CHAR < _CHAR ) == _NUM && str . lastIndexOf ( _CHAR > _CHAR ) == ( str . length ( ) - _NUM ) ; }
36981	public boolean removeConfigurationFiles ( ) { return removeConfigurationFilesArg . isPresent ( ) ; }
36998	protected Object allocateArray ( int len ) { return new MarkData [ len ] ; }
37018	public static SimplePropertyMapper simple ( final String attribute ) { return simple ( AttributeDescription . valueOf ( attribute ) ) ; }
37034	public void changeStateWithoutNotify ( SessionState state ) { this . sessionState = state ; }
37060	private void fillLateQueue ( ) throws ChangelogException { try ( DBCursor < UpdateMsg > cursor = replicationServerDomain . getCursorFrom ( serverState ) ) { while ( cursor . next ( ) && isLateQueueBelowThreshold ( ) ) { lateQueue . add ( cursor . getRecord ( ) ) ; } } }
37072	public Subject createSubject ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT , xml ) ; if ( obj == _NULL ) { return new SubjectImpl ( xml ) ; } else { return ( Subject ) obj ; } }
37079	protected NameValue qheader ( ) throws ParseException { String name = lexer . getNextToken ( _CHAR ) ; lexer . consume ( _NUM ) ; String value = hvalue ( ) ; return new NameValue ( name , value , _BOOL ) ; }
37177	private static boolean portMatch ( int port , int [ ] ports ) { boolean portInList = _BOOL ; for ( int i = _NUM , len = ports . length ; i < len ; i ++ ) { if ( port == ports [ i ] ) { portInList = _BOOL ; break ; } } return portInList ; }
37179	public Artifact createArtifact ( String encodedArtifactValue ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT , encodedArtifactValue ) ; if ( obj == _NULL ) { return new ArtifactImpl ( encodedArtifactValue ) ; } else { return ( Artifact ) obj ; } }
37198	public static List < String > parseExpression ( String expression ) { return convertForJSSE ( parse ( expression ) ) ; }
37255	public String charAsString ( int nchars ) { return String . valueOf ( buffer , ptr , nchars - _NUM ) ; }
37264	public void removeTreeSelectionListener ( TreeSelectionListener x ) { listenerList . remove ( TreeSelectionListener . class , x ) ; }
37372	public void incrementChainModuleIndex ( ) { ++ chainModuleIndex ; }
37474	@ Override public synchronized boolean isClosed ( ) { return closed ; }
37620	public void removeUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { super . removeUpdate ( changes , adjustAllocation ( a ) , f ) ; updateVisibilityModel ( ) ; }
37650	public boolean overlaps ( PlaLineInt p_other ) { return side_of ( p_other . point_a ) == PlaSide . COLLINEAR && side_of ( p_other . point_b ) == PlaSide . COLLINEAR ; }
37726	public void display_layer_messsage ( ) { screen_messages . clear_add_field ( ) ; BrdLayer curr_layer = itera_settings . get_layer ( ) ; screen_messages . show_layer_name ( curr_layer ) ; }
37815	public static List < Foo > findByUuid_C ( java . lang . String uuid , long companyId ) { return getPersistence ( ) . findByUuid_C ( uuid , companyId ) ; }
37816	public void eventError ( String errorStr ) { debug . error ( _CHAR EntryEventListener . eventError ( ) : _CHAR + errorStr ) ; }
37981	public BaseID createBaseID ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . BASEID , elem ) ; if ( obj == _NULL ) { return new BaseIDImpl ( elem ) ; } else { return ( BaseID ) obj ; } }
38094	private TextImpl nextTextNode ( ) { Node nextSibling = getNextSibling ( ) ; if ( nextSibling == _NULL ) { return _NULL ; } short nodeType = nextSibling . getNodeType ( ) ; return nodeType == Node . TEXT_NODE || nodeType == Node . CDATA_SECTION_NODE ? ( TextImpl ) nextSibling : _NULL ; }
38178	public final boolean isForwarded ( ) { return flags [ FORWARDED_TICKET_FLAG ] ; }
38189	protected String paramString ( ) { return super . paramString ( ) + _CHAR , selected = _CHAR + getSelectedItem ( ) ; }
38272	public ProtobufSchema forFirstType ( ) { MessageElement msg = _firstMessageType ( ) ; if ( msg == _NULL ) { throw new IllegalArgumentException ( _CHAR Protobuf schema definition ( name _CHAR_CHAR_CHAR ) contains no message type definitions _CHAR ) ; } return new ProtobufSchema ( this , TypeResolver . construct ( _nativeTypes ) . resolve ( msg ) ) ; }
38316	public boolean removeBackupFiles ( ) { return removeBackupFilesArg . isPresent ( ) ; }
38340	public String decode ( String pString ) throws DecoderException { if ( pString == _NULL ) { return _NULL ; } try { return decodeText ( pString ) ; } catch ( UnsupportedEncodingException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
38386	@ Override public void write ( byte b [ ] ) throws IOException { write ( b , _NUM , b . length ) ; }
38491	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
38517	public boolean containsValue ( Object value ) { return map . containsValue ( value ) ; }
38553	public static Node selectSingleNode ( Node contextNode , String str , Node namespaceNode ) throws TransformerException { NodeIterator nl = selectNodeIterator ( contextNode , str , namespaceNode ) ; return nl . nextNode ( ) ; }
38687	protected boolean shouldIndent ( ) { return m_doIndent && ( ! m_ispreserve && ! m_isprevtext ) && m_elemContext . m_currentElemDepth > _NUM ; }
38839	public void flush ( ) { rootRenderer . flush ( ) ; }
38887	@ Override public void rename ( String oldName , String newName ) throws NamingException { getBoundContext ( ) . rename ( parseName ( oldName ) , parseName ( newName ) ) ; }
38888	public static Map < String , File > filesInDirectory ( String dir , Pattern regex , boolean recursively ) { return filesInDirectory ( new File ( dir ) , regex , recursively ) ; }
38931	public XACMLAuthzDecisionStatement createXACMLAuthzDecisionStatement ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_STATEMENT , xml ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionStatementImpl ( xml ) ; } else { return ( XACMLAuthzDecisionStatement ) obj ; } }
39115	public EncryptedAttribute createEncryptedAttribute ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTED_ATTRIBUTE , xml ) ; if ( obj == _NULL ) { return new EncryptedAttributeImpl ( xml ) ; } else { return ( EncryptedAttribute ) obj ; } }
39164	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
39190	public static GeneralizedTime currentTime ( ) { return valueOf ( Calendar . getInstance ( ) ) ; }
39238	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
39258	public void addAttributeCertificates ( Store attrStore ) throws CMSException { certs . addAll ( CMSUtils . getAttributeCertificatesFromStore ( attrStore ) ) ; }
39362	public EncryptedID createEncryptedID ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTEDID , elem ) ; if ( obj == _NULL ) { return new EncryptedIDImpl ( elem ) ; } else { return ( EncryptedID ) obj ; } }
39381	public ApiOperationsAssert hasI18nDescriptions ( ) { for ( Operation operation : actual ) { assertI18nDescription ( operation . description ( ) , annotatedClass ) ; } return this ; }
39461	public String toString ( ) { return _CHAR [ _CHAR + minimum + _CHAR , _CHAR + preferred + _CHAR , _CHAR + maximum + _CHAR ] @ _CHAR + alignment ; }
39473	public static int main ( final String [ ] args , final OutputStream outStream , final OutputStream errStream ) { return new MakeLDIF ( ) . makeLDIFMain ( args , _BOOL , _BOOL , outStream , errStream ) ; }
39484	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
39486	@ Override public void cancelAllOperationsExcept ( CancelRequest cancelRequest , int messageID ) { }
39511	public PrintWriter log ( PrintWriter out ) { return log ( this , out ) ; }
39701	public void releaseConnection ( Connection ldapConnection , Exception lastLDAPException ) { releaseConnection ( ldapConnection ) ; }
39706	@ Override public void onPause ( ) { super . onPause ( ) ; mDelegate . detachView ( ) ; if ( getActivity ( ) . isFinishing ( ) ) { mDelegate . destroyPresenter ( ) ; } }
39722	public boolean isFlavorJavaFileListType ( ) { if ( mimeType == _NULL || representationClass == _NULL ) return _BOOL ; return java . util . List . class . isAssignableFrom ( representationClass ) && mimeType . match ( javaFileListFlavor . mimeType ) ; }
39724	public boolean removeAll ( ) { return removeAllArg . isPresent ( ) ; }
39755	public void resetNextEntryID ( ) { nextEntryID . set ( _NUM ) ; }
39779	@ Override public List < Foo > findByUuid_C ( String uuid , long companyId ) { return findByUuid_C ( uuid , companyId , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
39799	public JobService jobRangeByType ( String type , String state , long from , long to , String order , Handler < AsyncResult < List < Job >> > handler ) { delegate . jobRangeByType ( type , state , from , to , order , handler ) ; return this ; }
39915	public boolean ready ( ) throws IOException { synchronized ( lock ) { ensureOpen ( ) ; return ( count - pos ) > _NUM ; } }
39963	public CodeStream putByteArray ( final byte [ ] b , final int offset , final int length ) { ensureCapacity ( length ) ; if ( b != _NULL ) { System . arraycopy ( b , offset , _data , _length , length ) ; } _length += length ; return this ; }
39967	public void deleteOrganizationConfig ( String orgName ) throws SMSException , SSOException { removeOrganizationConfiguration ( orgName , SMSUtils . DEFAULT ) ; }
40089	public java . lang . String toString ( ) { return toString ( _BOOL , _BOOL ) ; }
40099	public Result createResult ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESULT , elem ) ; if ( object == _NULL ) { return new ResultImpl ( elem ) ; } else { return ( Result ) object ; } }
40145	@ Override public List < Foo > findByUuid_C ( String uuid , long companyId ) { return findByUuid_C ( uuid , companyId , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
40289	public double toDouble ( ) { return mNumerator / ( double ) mDenominator ; }
40338	public static List < Foo > findByUuid_C ( java . lang . String uuid , long companyId ) { return getPersistence ( ) . findByUuid_C ( uuid , companyId ) ; }
40352	public boolean isDoubleMetaphoneEqual ( String value1 , String value2 ) { return isDoubleMetaphoneEqual ( value1 , value2 , _BOOL ) ; }
40364	public String versionCompact ( ) { return properties . getProperty ( _CHAR version . compact _CHAR ) ; }
40412	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { if ( _NUM == length ) return ; characters ( ch , start , length ) ; }
40413	public boolean isLoggedInUser ( String userId ) { return userId . equals ( getUserName ( ) ) ; }
40438	public void mouseReleased ( MouseEvent e ) { getHandler ( ) . mouseReleased ( e ) ; }
40598	public ArtifactResponse createArtifactResponse ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESPONSE , elem ) ; if ( obj == _NULL ) { return new ArtifactResponseImpl ( elem ) ; } else { return ( ArtifactResponse ) obj ; } }
40635	public CTSDJLDAPv3PersistentSearchBuilder withRetry ( int retry ) { Reject . ifTrue ( retry <= _NUM ) ; this . retry = retry ; return this ; }
40767	public void addTreeSelectionListener ( TreeSelectionListener x ) { listenerList . add ( TreeSelectionListener . class , x ) ; }
40786	public Builder attributes ( Collection < String > attributeOIDs ) { this . attributeOIDs . addAll ( attributeOIDs ) ; return this ; }
40803	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
40848	public Iterator < E > iterator ( ) { return map . keySet ( ) . iterator ( ) ; }
40855	public static int main ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { final UpgradeCli app = new UpgradeCli ( System . in , outStream , errStream ) ; return app . run ( args , initializeServer ) ; }
40950	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
41015	public static QueryExp leq ( ValueExp v1 , ValueExp v2 ) { return new BinaryRelQueryExp ( LE , v1 , v2 ) ; }
41045	public String decode ( String value ) throws DecoderException { if ( value == _NULL ) { return _NULL ; } try { return decodeText ( value ) ; } catch ( UnsupportedEncodingException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
41125	private static RetainFragment findOrCreateRetainFragment ( android . support . v4 . app . FragmentManager fm ) { RetainFragment mRetainFragment = ( RetainFragment ) fm . findFragmentByTag ( TAG ) ; if ( mRetainFragment == _NULL ) { mRetainFragment = new RetainFragment ( ) ; fm . beginTransaction ( ) . add ( mRetainFragment , TAG ) . commitAllowingStateLoss ( ) ; } return mRetainFragment ; }
41203	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
41224	@ Override public void collide ( ) { wasHit = _BOOL ; }
41235	public void changedUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { updateDamage ( changes , a , f ) ; }
41279	@ Override public void rename ( String oldName , String newName ) throws NamingException { rename ( new CompositeName ( oldName ) , new CompositeName ( newName ) ) ; }
41356	public static Map < String , File > filesInDirectory ( String dir , String regex ) { return filesInDirectory ( dir , regex , _BOOL ) ; }
41390	private static float convertFromMicrometers ( int x , int units ) { if ( units < _NUM ) { throw new IllegalArgumentException ( _CHAR units is < _NUM _CHAR ) ; } return ( ( float ) x ) / ( ( float ) units ) ; }
41458	public synchronized void reset ( ) { pos = _NUM ; }
41487	public void init ( Tailer tailer ) { }
41506	public boolean hasRights ( int right ) { return perm . hasRights ( right ) ; }
41540	void addChronoChangedListener ( Consumer < Chronology > listener ) { if ( chronoListeners == _NULL ) { chronoListeners = new ArrayList < Consumer < Chronology >> ( ) ; } chronoListeners . add ( listener ) ; }
41562	public Image scaleToFit ( float fitWidth , float fitHeight ) { float horizontalScaling = fitWidth / xObject . getWidth ( ) ; float verticalScaling = fitHeight / xObject . getHeight ( ) ; return scale ( Math . min ( horizontalScaling , verticalScaling ) , Math . min ( horizontalScaling , verticalScaling ) ) ; }
41660	public Response createResponse ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESPONSE , elem ) ; if ( object == _NULL ) { return new ResponseImpl ( elem ) ; } else { return ( Response ) object ; } }
41741	public Attribute createAttribute ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE , xml ) ; if ( obj == _NULL ) { return new AttributeImpl ( xml ) ; } else { return ( Attribute ) obj ; } }
41831	public void pushCurrentFuncResult ( Object val ) { m_currentFuncResult . push ( val ) ; }
42054	public void mouseMoved ( MouseEvent e ) { }
42081	public void clear ( ) { al . clear ( ) ; }
42086	EntitlementCondition migrateEnvironmentCondition ( String conditionClassName , PolicyCondition condition , MigrationReport migrationReport ) { return environmentConditionsUpgradeMap . get ( conditionClassName ) . migrate ( condition , migrationReport ) ; }
42101	public boolean smoothen_end_corners_fork ( boolean p_own_net_only , int p_pullt_min_move , ThreadStoppable p_stoppable_thread ) { NetNosList opt_net_no_arr = p_own_net_only ? net_nos : NetNosList . EMPTY ; AlgoPullTight pull_tight_algo = AlgoPullTight . get_instance ( r_board , opt_net_no_arr , p_pullt_min_move , p_stoppable_thread , _NULL ) ; return pull_tight_algo . smoothen_end_corners_at_trace ( this ) ; }
42158	public Dimension minimumLayoutSize ( Container parent ) { Dimension minimumSize = insetSize ( parent ) ; if ( parent . getComponentCount ( ) > _NUM ) { Dimension childSize = getComponent ( _NUM ) . getMinimumSize ( ) ; minimumSize . width += childSize . width ; minimumSize . height += childSize . height ; } return minimumSize ; }
42204	public final void signalAll ( ) { if ( ! isHeldExclusively ( ) ) throw new IllegalMonitorStateException ( ) ; Node first = firstWaiter ; if ( first != _NULL ) doSignalAll ( first ) ; }
42277	public Modification elementAt ( int index ) { return modifications . get ( index ) ; }
42313	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
42372	@ Override public Object clone ( ) { RuleBasedCollator clone = ( RuleBasedCollator ) super . clone ( ) ; return clone ; }
42423	@ NonNull public final Agera takeUntil ( @ NonNull Condition condition ) { return new AgeraTakeUntilCondition ( this , condition ) ; }
42460	public org . omg . CORBA . TypeCode _type ( ) { return ORB . init ( ) . get_primitive_tc ( TCKind . tk_longlong ) ; }
42471	private static void vecswap ( double x [ ] , int a , int b , int n ) { for ( int i = _NUM ; i < n ; i ++ , a ++ , b ++ ) swap ( x , a , b ) ; }
42601	public boolean clearBackend ( ) { return clearBackend ; }
42621	public JMenuItem add ( String s ) { return add ( new JMenuItem ( s ) ) ; }
42658	synchronized boolean switchToAsyncMode ( ) { if ( ! syncMode ) throw new AssertionError ( ) ; syncMode = _BOOL ; return ! isCompleted ( ) ; }
42693	public Artifact createArtifact ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT , elem ) ; if ( obj == _NULL ) { return new ArtifactImpl ( elem ) ; } else { return ( Artifact ) obj ; } }
42694	public XACMLAuthzDecisionStatement createXACMLAuthzDecisionStatement ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_STATEMENT , elem ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionStatementImpl ( elem ) ; } else { return ( XACMLAuthzDecisionStatement ) obj ; } }
42745	private void examineCompletedOperation ( UnbindOperation unbindOperation ) { assertTrue ( unbindOperation . getProcessingStartTime ( ) > _NUM ) ; assertTrue ( unbindOperation . getProcessingStopTime ( ) > _NUM ) ; assertTrue ( unbindOperation . getProcessingTime ( ) >= _NUM ) ; }
42748	public void selectInitialValue ( JOptionPane op ) { if ( inputComponent != _NULL ) inputComponent . requestFocus ( ) ; else { if ( initialFocusComponent != _NULL ) initialFocusComponent . requestFocus ( ) ; if ( initialFocusComponent instanceof JButton ) { JRootPane root = SwingUtilities . getRootPane ( initialFocusComponent ) ; if ( root != _NULL ) { root . setDefaultButton ( ( JButton ) initialFocusComponent ) ; } } } }
42770	public String paramString ( ) { String typeStr ; switch ( id ) { case TEXT_VALUE_CHANGED : typeStr = _CHAR TEXT_VALUE_CHANGED _CHAR ; break ; default : typeStr = _CHAR unknown type _CHAR ; } return typeStr ; }
42810	public void removeListDataListener ( ListDataListener l ) { listenerList . remove ( ListDataListener . class , l ) ; }
42814	public static List < Foo > findByUuid_C ( java . lang . String uuid , long companyId ) { return getPersistence ( ) . findByUuid_C ( uuid , companyId ) ; }
42881	public ProxyRestriction createProxyRestriction ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . PROXY_RESTRICTION , xml ) ; if ( obj == _NULL ) { return new ProxyRestrictionImpl ( xml ) ; } else { return ( ProxyRestriction ) obj ; } }
43019	public void dumpBaselessKeys ( Writer writer ) throws IOException { dumpEntries ( writer , blamer . getBaselessKeys ( ) ) ; }
43094	public Attribute createAttribute ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ATTRIBUTE , elem ) ; if ( obj == _NULL ) { return new AttributeImpl ( elem ) ; } else { return ( Attribute ) obj ; } }
43104	public SecurityToken issueToken ( EndpointSpecification endpointSpecification , TokenSpecification tokenSpecification ) throws SoapSTSConsumerException { return issueTokenInternal ( endpointSpecification , tokenSpecification , ALLOW_TOKEN_RENEWAL ) ; }
43133	private static RMIServer objectToBind ( RMIServerImpl rmiServer , Map < String , ? > env ) throws IOException { return RMIConnector . connectStub ( ( RMIServer ) rmiServer . toStub ( ) , env ) ; }
43181	public static String URLDecode ( String str , String enc ) { return URLDecode ( str , enc , _BOOL ) ; }
43285	public static void saveSAML2Token ( String primaryKey , String secondaryKey , Object samlObj , long expirationTime ) throws SAML2TokenRepositoryException { SAML2TokenRepositoryHolder . getRepo ( ) . saveSAML2Token ( primaryKey , secondaryKey , samlObj , expirationTime ) ; }
43289	public void insertUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { super . insertUpdate ( changes , adjustAllocation ( a ) , f ) ; updateVisibilityModel ( ) ; }
43293	public Cell add ( String content ) { return add ( new Paragraph ( content ) ) ; }
43375	protected void deployApps ( ) { File appBase = host . getAppBaseFile ( ) ; File configBase = host . getConfigBaseFile ( ) ; String [ ] filteredAppPaths = filterAppPaths ( appBase . list ( ) ) ; deployDescriptors ( configBase , configBase . list ( ) ) ; deployWARs ( appBase , filteredAppPaths ) ; deployDirectories ( appBase , filteredAppPaths ) ; }
43377	public ArtifactResolve createArtifactResolve ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESOLVE , elem ) ; if ( obj == _NULL ) { return new ArtifactResolveImpl ( elem ) ; } else { return ( ArtifactResolve ) obj ; } }
43389	public final void signalAll ( ) { if ( ! isHeldExclusively ( ) ) throw new IllegalMonitorStateException ( ) ; Node first = firstWaiter ; if ( first != _NULL ) doSignalAll ( first ) ; }
43473	public AuthnContext createAuthnContext ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_CONTEXT , xml ) ; if ( obj == _NULL ) { return new AuthnContextImpl ( xml ) ; } else { return ( AuthnContext ) obj ; } }
43568	public void clear ( ) { modCount ++ ; for ( int i = _NUM ; i < size ; i ++ ) elementData [ i ] = _NULL ; size = _NUM ; }
43598	public void addNotify ( ) { super . addNotify ( ) ; KeyboardManager . getCurrentManager ( ) . registerMenuBar ( this ) ; }
43611	public Subject createSubject ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . SUBJECT , xml ) ; if ( obj == _NULL ) { return new SubjectImpl ( xml ) ; } else { return ( Subject ) obj ; } }
43639	protected void disconnectEvent ( PooledConnection con , boolean finalizing ) { JdbcInterceptor handler = con . getHandler ( ) ; while ( handler != _NULL ) { handler . disconnected ( this , con , finalizing ) ; handler = handler . getNext ( ) ; } }
43662	private int monthLength ( int month , int year ) { return isLeapYear ( year ) ? LEAP_MONTH_LENGTH [ month ] : MONTH_LENGTH [ month ] ; }
43675	public static HashMap < String , List < String >> extractHeadersFromRequest ( Request request ) { HashMap < String , List < String >> headers = new HashMap < > ( ) ; for ( String headerName : request . getHeaderNames ( ) ) { headers . put ( headerName , request . getHeaders ( headerName ) ) ; } return headers ; }
43709	protected < T > Handler < AsyncResult < T >> rawResultHandler ( RoutingContext context ) { return _NULL ; }
43718	public void printStats ( ) { PolicyCache . printStats ( policyStats ) ; PolicyEvaluator . printStats ( policyStats ) ; SubjectEvaluationCache . printStats ( policyStats ) ; PolicyRequestHandler . printStats ( policyStats ) ; }
43776	public boolean isActive ( ) { return active ; }
43780	public static void deleteSAML2Token ( String primaryKey ) throws SAML2TokenRepositoryException { SAML2TokenRepositoryHolder . getRepo ( ) . deleteSAML2Token ( primaryKey ) ; }
43798	public void removeElementAt ( int index ) { modifications . remove ( index ) ; }
43841	public AppLauncher launchOnLockedRetries ( int launchOnLockedRetries ) { this . launchOnLockedRetries = launchOnLockedRetries ; return this ; }
43872	public boolean add ( Object o ) { if ( nodes . contains ( o ) ) { return _BOOL ; } DigraphNode node = new DigraphNode ( o ) ; poNodes . put ( o , node ) ; return _BOOL ; }
43887	public boolean isRepresentationClassInputStream ( ) { return ioInputStreamClass . isAssignableFrom ( representationClass ) ; }
43927	public Object clone ( ) { try { IdentityHashMap < ? , ? > m = ( IdentityHashMap < ? , ? > ) super . clone ( ) ; m . entrySet = _NULL ; m . table = table . clone ( ) ; return m ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
44003	private static boolean isSchemeChar ( char c ) { return Character . isLetterOrDigit ( c ) || c == _CHAR || c == _CHAR || c == _CHAR ; }
44037	public SignerInformationStore generateCounterSigners ( SignerInformation signer ) throws CMSException { return this . generate ( new CMSProcessableByteArray ( _NULL , signer . getSignature ( ) ) , _BOOL ) . getSignerInfos ( ) ; }
44051	public void finalizeSubentryManager ( ) { DirectoryServer . deregisterInternalPlugin ( this ) ; DirectoryServer . deregisterBackendInitializationListener ( this ) ; }
44076	private static String writeAsString ( JsonValue json ) throws JsonProcessingException { return writePrettyValueAsString ( json ) . replaceAll ( _CHAR \\ n _CHAR , _CHAR \\\\\ n _CHAR ) ; }
44098	protected void onRequestHandlerNotFound ( RequestContext requestContext , String handlerName ) throws ServletException { ViewBeanManager viewBeanManager = requestContext . getViewBeanManager ( ) ; ViewBean targetView = viewBeanManager . getViewBean ( PWResetInvalidURLViewBean . class ) ; targetView . forwardTo ( requestContext ) ; throw new CompleteRequestException ( ) ; }
44182	protected void addSubComponents ( ) { add ( iconButton ) ; add ( maxButton ) ; add ( closeButton ) ; }
44221	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
44362	public static int nextMessageID ( ) { int nextID = nextMessageID . getAndIncrement ( ) ; if ( nextID == Integer . MAX_VALUE ) { nextMessageID . set ( _NUM ) ; } return nextID ; }
44406	public Dimension preferredLayoutSize ( Container parent ) { Dimension preferredSize = insetSize ( parent ) ; if ( parent . getComponentCount ( ) > _NUM ) { Dimension childSize = getComponent ( _NUM ) . getPreferredSize ( ) ; preferredSize . width += childSize . width ; preferredSize . height += childSize . height ; } return preferredSize ; }
44417	public void incSAML1Cache ( String assertOrArtifact , String rWHM ) { }
44502	@ JsonIgnore public Boolean hasNativeType ( ) { return nativeType != _NULL ; }
44509	public boolean isValidating ( ) { return getFeature ( XmlPullParser . FEATURE_VALIDATION ) ; }
44519	public boolean removeLDIFFiles ( ) { return removeLDIFFilesArg . isPresent ( ) ; }
44562	public Evidence createEvidence ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EVIDENCE , xml ) ; if ( obj == _NULL ) { return _NULL ; } else { return ( Evidence ) obj ; } }
44710	public Environment createEnvironment ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ENVIRONMENT , elem ) ; if ( obj == _NULL ) { return new EnvironmentImpl ( elem ) ; } else { return ( Environment ) obj ; } }
44717	public EncryptedAttribute createEncryptedAttribute ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTED_ATTRIBUTE , elem ) ; if ( obj == _NULL ) { return new EncryptedAttributeImpl ( elem ) ; } else { return ( EncryptedAttribute ) obj ; } }
44801	public ApiHandlerAssert hasI18nTitle ( ) { assertI18nTitle ( actual . title ( ) , annotatedClass ) ; return this ; }
44804	public XACMLAuthzDecisionQuery createXACMLAuthzDecisionQuery ( String xml ) throws XACMLException , SAML2Exception { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_QUERY , xml ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionQueryImpl ( xml ) ; } else { return ( XACMLAuthzDecisionQuery ) obj ; } }
44835	public void removeEventChargingFunctionAddress ( String ecfAddress ) throws ParseException { if ( ecfAddress == _NULL ) throw new NullPointerException ( _CHAR JAIN - SIP Exception , _CHAR + _CHAR P - Charging - Function - Addresses , setEventChargingFunctionAddress ( ) , the ecfAddress parameter is _NULL . _CHAR ) ; if ( ! this . delete ( ecfAddress , ParameterNamesIms . ECF ) ) { throw new java . text . ParseException ( _CHAR ECF Address Not Removed _CHAR , _NUM ) ; } }
44894	public synchronized void reset ( ) throws IOException { in . reset ( ) ; nread = size - in . available ( ) ; monitor . setProgress ( nread ) ; }
44906	public void close ( ) { synchronized ( this ) { if ( ! closing ) { closing = _BOOL ; try { textOut . close ( ) ; out . close ( ) ; } catch ( IOException x ) { trouble = _BOOL ; } textOut = _NULL ; charOut = _NULL ; out = _NULL ; } } }
44940	public boolean isHeaderList ( ) { return _BOOL ; }
44952	public SubjectConfirmationData createSubjectConfirmationData ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION_DATA , elem ) ; if ( obj == _NULL ) { return new SubjectConfirmationDataImpl ( elem ) ; } else { return ( SubjectConfirmationData ) obj ; } }
44998	public ByteVector putByteArray ( final byte [ ] b , final int off , final int len ) { if ( length + len > data . length ) { enlarge ( len ) ; } if ( b != _NULL ) { System . arraycopy ( b , off , data , length , len ) ; } length += len ; return this ; }
45095	public String encode ( String pString , String charset ) throws UnsupportedEncodingException { if ( pString == _NULL ) { return _NULL ; } return new String ( encode ( pString . getBytes ( charset ) ) , StringEncodings . US_ASCII ) ; }
45100	public boolean isPreferred ( ) { return preferred ; }
45212	public static String space ( String self , String replacement ) { return Normalization . normalizeSpace ( self , replacement ) ; }
45239	boolean alwaysOnTop ( ) { return _BOOL ; }
45419	@ Override public void onPause ( ) { super . onPause ( ) ; mDelegate . detachView ( ) ; if ( getActivity ( ) . isFinishing ( ) ) { mDelegate . destroyPresenter ( ) ; } }
45461	public boolean addOperationAtFirst ( Operation operation ) { if ( isRunning ) { if ( operationHandlerThreadHandler == _NULL ) return _BOOL ; return operationHandlerThreadHandler . postAtFrontOfQueue ( new AndroidOperation ( this , operation ) ) ; } else { return operationQueue . add ( new AndroidOperation ( this , operation , AndroidOperation . Type . ATFIRST , _NULL , _NUM ) ) ; } }
45510	public RxGalleryFinal cropWithAspectRatio ( float x , float y ) { configuration . setAspectRatioX ( x ) ; configuration . setAspectRatioY ( y ) ; return this ; }
45525	public void printStackTrace ( PrintWriter s ) { if ( getCause ( ) != _NULL ) { getCause ( ) . printStackTrace ( s ) ; s . println ( _CHAR --------------- linked to ------------------ _CHAR ) ; } super . printStackTrace ( s ) ; }
45606	public boolean containsKey ( Object key ) { return getNode ( hash ( key ) , key ) != _NULL ; }
45613	final boolean isMatched ( ) { Object x = item ; return ( x == this ) || ( ( x == _NULL ) == isData ) ; }
45648	public Tasker withCondition ( Condition condition ) { lastAddedTask . setCondition ( condition ) ; return this ; }
45682	public ByteVector putByteArray ( final byte [ ] b , final int off , final int len ) { if ( length + len > data . length ) { enlarge ( len ) ; } if ( b != _NULL ) { System . arraycopy ( b , off , data , length , len ) ; } length += len ; return this ; }
45777	private void examineCompletedOperation ( CompareOperation compareOperation ) { assertTrue ( compareOperation . getProcessingStartTime ( ) > _NUM ) ; assertTrue ( compareOperation . getProcessingStopTime ( ) > _NUM ) ; assertTrue ( compareOperation . getProcessingTime ( ) >= _NUM ) ; ensurePostReponseHasRun ( ) ; }
45791	public void removeLayoutComponent ( Component child ) { }
45851	public Request createRequest ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . REQUEST , elem ) ; if ( obj == _NULL ) { return new RequestImpl ( elem ) ; } else { return ( Request ) obj ; } }
45870	public void incSAML1Cache ( String assertOrArtifact , String rWHM ) { if ( sSAML1Svc != _NULL ) { sSAML1Svc . incSAML1Cache ( assertOrArtifact , rWHM ) ; } }
45891	private File preInitialization ( ) throws InitializationException { final DirectoryEnvironmentConfig environment = serverContext . getEnvironment ( ) ; useLastKnownGoodConfig = environment . useLastKnownGoodConfiguration ( ) ; configFile = environment . getConfigFile ( ) ; File configFileToUse = findConfigFileToUse ( configFile ) ; ensureArchiveExistsAndIsUpToDate ( environment , configFileToUse ) ; applyConfigChangesIfNeeded ( configFileToUse ) ; return configFileToUse ; }
45898	private void signalNotEmpty ( ) { final ReentrantLock takeLock = this . takeLock ; takeLock . lock ( ) ; try { notEmpty . signal ( ) ; } finally { takeLock . unlock ( ) ; } }
45904	public void goToNextColor ( ) { mColorIndex = ( mColorIndex + _NUM ) % ( mColors . length ) ; }
46060	public static Charset toCharset ( String charset ) { return charset == _NULL ? Charset . defaultCharset ( ) : Charset . forName ( charset ) ; }
46082	public ValueExp apply ( ObjectName name ) throws BadStringOperationException , BadBinaryOpValueExpException , BadAttributeValueExpException , InvalidApplicationException { Object result = getValue ( name ) ; if ( result instanceof String ) { return new StringValueExp ( ( String ) result ) ; } else { throw new BadAttributeValueExpException ( result ) ; } }
46230	public void changedUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { updateChildren ( e , a ) ; }
46237	public StatusDetail createStatusDetail ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_DETAIL , elem ) ; if ( object == _NULL ) { return new StatusDetailImpl ( elem ) ; } else { return ( StatusDetail ) object ; } }
46267	public Action createAction ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ACTION , xml ) ; if ( obj == _NULL ) { return new ActionImpl ( xml ) ; } else { return ( Action ) obj ; } }
46273	@ Override public List < Foo > findByUuid_C ( String uuid , long companyId ) { return findByUuid_C ( uuid , companyId , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
46572	public void cutout_traces ( Collection < BrdItem > p_item_list ) { for ( BrdItem curr_item : p_item_list ) { if ( ! ( curr_item instanceof BrdTracep ) ) continue ; BrdTracep a_trace = ( BrdTracep ) curr_item ; if ( a_trace . shares_net_no ( own_net_nos ) ) continue ; cutout_trace ( a_trace , shape , cl_class ) ; } }
46599	public void clear ( ) { while ( queue . poll ( ) != _NULL ) ; modCount ++ ; Arrays . fill ( table , _NULL ) ; size = _NUM ; while ( queue . poll ( ) != _NULL ) ; }
46620	public void remove ( ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( _CHAR RS _CHAR + getMonitorInstanceName ( ) + _CHAR starts removing _CHAR ) ; } shutdown ( ) ; }
46640	public static void assertSupportedProtocols ( Set < String > expected , String [ ] protocols ) { Set < String > remainingProtocols = assertValidProtocols ( expected , protocols ) ; assertEquals ( _CHAR Missing protocols _CHAR , Collections . EMPTY_SET , remainingProtocols ) ; assertEquals ( expected . size ( ) , protocols . length ) ; }
46667	private String constitutePrincipalFromSessionUrl ( ) { return urlConstituentCatenator . catenateUrlConstituents ( amDeploymentUrl , amJsonRestBase , realm , amRestIdFromSessionUriElement ) ; }
46744	public ProxyRestriction createProxyRestriction ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . PROXY_RESTRICTION , elem ) ; if ( obj == _NULL ) { return new ProxyRestrictionImpl ( elem ) ; } else { return ( ProxyRestriction ) obj ; } }
46825	public boolean isOptional ( final AttributeType attributeType ) { return optionalAttributes . contains ( attributeType ) ; }
46848	public SignerInformationStore generateCounterSigners ( SignerInformation signer , Provider sigProvider ) throws NoSuchAlgorithmException , CMSException { return this . generate ( _NULL , new CMSProcessableByteArray ( signer . getSignature ( ) ) , _BOOL , sigProvider ) . getSignerInfos ( ) ; }
46864	public static boolean isRelayStateURLValid ( HttpServletRequest request , String relayState , String role ) { String metaAlias = SAML2MetaUtils . getMetaAliasByUri ( request . getRequestURI ( ) ) ; if ( metaAlias == _NULL ) { metaAlias = request . getParameter ( SAML2MetaManager . NAME_META_ALIAS_IN_URI ) ; } return isRelayStateURLValid ( metaAlias , relayState , role ) ; }
46967	public void insertUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { updateDamage ( changes , a , f ) ; }
47083	public Attribute createAttribute ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE , elem ) ; if ( obj == _NULL ) { return new AttributeImpl ( elem ) ; } else { return ( Attribute ) obj ; } }
47126	private void installLayout ( JRootPane root ) { if ( layoutManager == _NULL ) { layoutManager = createLayoutManager ( ) ; } savedOldLayout = root . getLayout ( ) ; root . setLayout ( layoutManager ) ; }
47189	protected void cancelling ( Conversation conversation ) { }
47200	public static Object retrieveSAML2Token ( String primaryKey ) throws SAML2TokenRepositoryException { return SAML2TokenRepositoryHolder . getRepo ( ) . retrieveSAML2Token ( primaryKey ) ; }
47234	public boolean containsKey ( Object key ) { return getEntry ( key ) != _NULL ; }
47283	public void requestTopDownLeftRightResend ( ImageConsumer ic ) { }
47348	public Issuer createIssuer ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ISSUER , xml ) ; if ( obj == _NULL ) { return new IssuerImpl ( xml ) ; } else { return ( Issuer ) obj ; } }
47421	public NameID createNameID ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID , elem ) ; if ( obj == _NULL ) { return new NameIDImpl ( elem ) ; } else { return ( NameID ) obj ; } }
47447	public java . lang . String toString ( ) { return toString ( _BOOL , _BOOL ) ; }
47518	public void visitCode ( ) { if ( mv != _NULL ) { mv . visitCode ( ) ; } }
47523	public EncryptedAssertion createEncryptedAssertion ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTED_ASSERTION , elem ) ; if ( obj == _NULL ) { return new EncryptedAssertionImpl ( elem ) ; } else { return ( EncryptedAssertion ) obj ; } }
47526	public Response createResponse ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . RESPONSE , xml ) ; if ( obj == _NULL ) { return new ResponseImpl ( xml ) ; } else { return ( Response ) obj ; } }
47537	public int previousNode ( ) { if ( ! m_cacheNodes ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_CANNOT_ITERATE , _NULL ) ) ; if ( ( m_next - _NUM ) > _NUM ) { m_next -- ; return this . elementAt ( m_next ) ; } else return DTM . NULL ; }
47700	public Evidence createEvidence ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EVIDENCE , elem ) ; if ( obj == _NULL ) { return _NULL ; } else { return ( Evidence ) obj ; } }
47722	@ Override public void run ( ) { return ; }
47733	public void translate_by ( PlaVectorInt p_vector ) { if ( p_vector == _NULL ) return ; if ( location != _NULL ) { location = location . translate_by ( p_vector ) ; } }
47785	public void delaunayPlace ( Pnt site ) { Triangle triangle = locate ( site ) ; if ( triangle == _NULL ) throw new IllegalArgumentException ( _CHAR No containing triangle _CHAR ) ; if ( triangle . contains ( site ) ) return ; Set < Triangle > cavity = getCavity ( site , triangle ) ; mostRecent = update ( site , cavity ) ; }
47827	public static void rebind ( String name , Remote obj ) throws RemoteException , java . net . MalformedURLException { ParsedNamingURL parsed = parseURL ( name ) ; Registry registry = getRegistry ( parsed ) ; if ( obj == _NULL ) throw new NullPointerException ( _CHAR can not bind to _NULL _CHAR ) ; registry . rebind ( parsed . name , obj ) ; }
47900	public static SmsRouteTreeBuilder branch ( String uriTemplate , Predicate < String > handlesFunction , SmsRouteTreeBuilder ... subTreeBuilders ) { return new SmsRouteTreeBuilder ( uriTemplate ) . handles ( handlesFunction ) . subTrees ( subTreeBuilders ) ; }
47946	public void goToNextColor ( ) { setColorIndex ( getNextColorIndex ( ) ) ; }
48001	public static boolean isBase64 ( final byte octet ) { return octet == PAD_DEFAULT || ( octet >= _NUM && octet < DECODE_TABLE . length && DECODE_TABLE [ octet ] != - _NUM ) ; }
48027	public OneTimeUse createOneTimeUse ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ONE_TIME_USE , xml ) ; if ( obj == _NULL ) { return new OneTimeUseImpl ( xml ) ; } else { return ( OneTimeUse ) obj ; } }
48060	void rescheduleMin ( long newTime ) { queue [ _NUM ] . nextExecutionTime = newTime ; fixDown ( _NUM ) ; }
48097	public void invokeLDIFImportEndPlugins ( LDIFImportConfig importConfig ) { for ( DirectoryServerPlugin p : ldifImportEndPlugins ) { p . doLDIFImportEnd ( importConfig ) ; } }
48110	private void enableComponents ( ) { for ( JComponent comp : comps ) { comp . setEnabled ( _BOOL ) ; } lInitContents . setVisible ( _BOOL ) ; argumentsScroll . setVisible ( _BOOL ) ; setEnabledOK ( _BOOL ) ; }
48213	public void addSession ( SingleSignOn sso , String ssoId , Session session ) { SingleSignOnSessionKey key = new SingleSignOnSessionKey ( session ) ; SingleSignOnSessionKey currentKey = sessionKeys . putIfAbsent ( key , key ) ; if ( currentKey == _NULL ) { session . addSessionListener ( sso . getSessionListener ( ssoId ) ) ; } }
48372	public void addParentObjectClassesChangedListener ( SuperiorObjectClassesChangedListener listener ) { listeners . add ( listener ) ; }
48419	public String toXMLString ( ) throws FSMsgException { return this . toXMLString ( _BOOL , _BOOL ) ; }
48457	public static List < Foo > findByUuid_C ( java . lang . String uuid , long companyId ) { return getPersistence ( ) . findByUuid_C ( uuid , companyId ) ; }
48524	public static int unsafeArrayOffset ( ByteBuffer b ) { return ( ( ByteArrayBuffer ) b ) . arrayOffset ; }
48562	public boolean isEmpty ( ) { return ( impl . isEmpty ( ) ) ; }
48563	public static List < Foo > findByUuid_C ( java . lang . String uuid , long companyId ) { return getPersistence ( ) . findByUuid_C ( uuid , companyId ) ; }
48603	public void clear ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { setArray ( new Object [ _NUM ] ) ; } finally { lock . unlock ( ) ; } }
48641	public void clear ( ) { map . clear ( ) ; }
48692	@ Override public void collide ( ) { if ( hitStats == _NUM ) { hitStats = _NUM ; Main . powerup_appear . play ( ) ; } }
48777	public SubjectLocality createSubjectLocality ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_LOCALITY , elem ) ; if ( obj == _NULL ) { return new SubjectLocalityImpl ( elem ) ; } else { return ( SubjectLocality ) obj ; } }
48812	public static SimplePropertyMapper simple ( final AttributeDescription attribute ) { return new SimplePropertyMapper ( attribute ) ; }
48814	@ Override public MinguoDate date ( Era era , int yearOfEra , int month , int dayOfMonth ) { return date ( prolepticYear ( era , yearOfEra ) , month , dayOfMonth ) ; }
48888	public boolean isNamespaceDeclUris ( ) { return namespaceDeclUris ; }
48980	public static boolean isIA5String ( String str ) { for ( int i = str . length ( ) - _NUM ; i >= _NUM ; i -- ) { char ch = str . charAt ( i ) ; if ( ch > _NUM ) { return _BOOL ; } } return _BOOL ; }
49102	public AudienceRestriction createAudienceRestriction ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUDIENCE_RESTRICTION , xml ) ; if ( obj == _NULL ) { return new AudienceRestrictionImpl ( xml ) ; } else { return ( AudienceRestriction ) obj ; } }
49134	public ArtifactResponse createArtifactResponse ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESPONSE , xml ) ; if ( obj == _NULL ) { return new ArtifactResponseImpl ( xml ) ; } else { return ( ArtifactResponse ) obj ; } }
49188	public static String dateToString ( final Date date ) { return dateToString ( date , UTC_DATE_FORMAT , UTC_TIME_ZONE ) ; }
49292	public NameID createNameID ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID , xml ) ; if ( obj == _NULL ) { return new NameIDImpl ( xml ) ; } else { return ( NameID ) obj ; } }
49321	public static KeyStore loadCacertsKeyStore ( ) { return loadCacertsKeyStore ( _NULL ) ; }
49326	@ Override public void onMessageReceived ( Context context , String from , Bundle data ) { String notificationMesg = data . getString ( _CHAR mp_message _CHAR ) ; Log . d ( _CHAR MP _CHAR , notificationMesg ) ; }
49353	public boolean isVisible ( ) { if ( relativePosition == _NUM ) { return _BOOL ; } else { return _BOOL ; } }
49355	public void changedUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { font = _NULL ; super . changedUpdate ( e , a , f ) ; }
49374	@ Override public int read ( ) throws IOException { int x = in . read ( ) ; if ( x != - _NUM ) { check . update ( x ) ; } return x ; }
49461	public String stripContentExtras ( String contentType ) { int index = contentType . indexOf ( _CHAR ) ; return ( index >= _NUM ) ? contentType . substring ( _NUM , index ) : contentType ; }
49530	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
49640	public PrintWriter log ( PrintWriter out ) { return log ( this , out ) ; }
49649	@ Override public final boolean cancellationRequested ( ) { cancellationWasRequested = _BOOL ; return _BOOL ; }
49751	public Conditions createConditions ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITIONS , elem ) ; if ( obj == _NULL ) { return new ConditionsImpl ( elem ) ; } else { return ( Conditions ) obj ; } }
49752	protected void finalize ( PooledConnection con ) { JdbcInterceptor handler = con . getHandler ( ) ; while ( handler != _NULL ) { handler . reset ( _NULL , _NULL ) ; handler = handler . getNext ( ) ; } }
49822	public boolean equals ( Object o ) { if ( o instanceof Manifest ) { Manifest m = ( Manifest ) o ; return attr . equals ( m . getMainAttributes ( ) ) && entries . equals ( m . getEntries ( ) ) ; } else { return _BOOL ; } }
49856	public void close ( ) throws IOException { in . close ( ) ; monitor . close ( ) ; }
50036	public AuthnContext createAuthnContext ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_CONTEXT , elem ) ; if ( obj == _NULL ) { return new AuthnContextImpl ( elem ) ; } else { return ( AuthnContext ) obj ; } }
50069	public synchronized void removeListeningPoints ( ) { for ( Iterator it = this . listeningPoints . values ( ) . iterator ( ) ; it . hasNext ( ) ; ) { ListeningPointImpl lp = ( ListeningPointImpl ) it . next ( ) ; lp . messageProcessor . stop ( ) ; it . remove ( ) ; } }
50106	public static GenericBindRequest newGenericBindRequest ( final byte authenticationType , final byte [ ] authenticationValue ) { Reject . ifNull ( authenticationValue ) ; return new GenericBindRequestImpl ( _CHAR _CHAR , authenticationType , authenticationValue ) ; }
50116	@ Override @ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized Object clone ( ) { try { Vector < E > vector = ( Vector < E > ) super . clone ( ) ; vector . elementData = elementData . clone ( ) ; return vector ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( e ) ; } }
50147	public void updateLineNumberCount ( int lineNumber , long numOccurrences ) { Long existingCount = lineNumbers . get ( lineNumber ) ; if ( existingCount == _NULL ) { lineNumbers . put ( lineNumber , numOccurrences ) ; } else { lineNumbers . put ( lineNumber , existingCount + numOccurrences ) ; } }
50213	public boolean isEmpty ( ) { return ( impl . isEmpty ( ) ) ; }
50296	public AuthnStatement createAuthnStatement ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_STATEMENT , xml ) ; if ( obj == _NULL ) { return new AuthnStatementImpl ( xml ) ; } else { return ( AuthnStatement ) obj ; } }
50330	public Action createAction ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ACTION , elem ) ; if ( obj == _NULL ) { return new ActionImpl ( elem ) ; } else { return ( Action ) obj ; } }
50369	public String resolveRelativeUri ( String uri ) { if ( uri . startsWith ( _CHAR / _CHAR ) || uri . startsWith ( File . separator ) ) { return uri ; } else { return baseURI + uri ; } }
50408	public void fastForward ( final long value , final TimeUnit units ) { this . offset += units . toMillis ( value ) ; }
50416	public static ScrollPaneBorderListener createBottomBorderListener ( JScrollPane scroll ) { ScrollPaneBorderListener listener = new ScrollPaneBorderListener ( ) ; listener . scroll = scroll ; scroll . getHorizontalScrollBar ( ) . addComponentListener ( listener ) ; scroll . getVerticalScrollBar ( ) . addComponentListener ( listener ) ; return listener ; }
50441	public AuthzDecisionStatement createAuthzDecisionStatement ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHZ_DECISION_STATEMENT , xml ) ; if ( obj == _NULL ) { return _NULL ; } else { return ( AuthzDecisionStatement ) obj ; } }
50474	public static List retrieveSAML2TokensWithSecondaryKey ( String secondaryKey ) throws SAML2TokenRepositoryException { return SAML2TokenRepositoryHolder . getRepo ( ) . retrieveSAML2TokensWithSecondaryKey ( secondaryKey ) ; }
50489	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
50566	public void invokeLDIFImportBeginPlugins ( LDIFImportConfig importConfig ) { for ( DirectoryServerPlugin p : ldifImportBeginPlugins ) { p . doLDIFImportBegin ( importConfig ) ; } }
50578	public java . lang . String toString ( ) { return toString ( _BOOL , _BOOL ) ; }
50644	protected void http2Connect ( ) throws Exception { enableHttp2 ( ) ; configureAndStartWebApplication ( ) ; openClientConnection ( ) ; doHttpUpgrade ( ) ; sendClientPreface ( ) ; validateHttp2InitialResponse ( ) ; }
50677	public Advice createAdvice ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ADVICE , elem ) ; if ( obj == _NULL ) { return new AdviceImpl ( elem ) ; } else { return ( Advice ) obj ; } }
50693	public void loadArgArray ( ) { push ( argumentTypes . length ) ; newArray ( OBJECT_TYPE ) ; for ( int i = _NUM ; i < argumentTypes . length ; i ++ ) { dup ( ) ; push ( i ) ; loadArg ( i ) ; box ( argumentTypes [ i ] ) ; arrayStore ( OBJECT_TYPE ) ; } }
50736	public Object decode ( Object pObject ) throws DecoderException { if ( pObject == _NULL ) { return _NULL ; } else if ( pObject instanceof String ) { return decode ( ( String ) pObject ) ; } else { throw new DecoderException ( _CHAR Objects of type _CHAR + pObject . getClass ( ) . getName ( ) + _CHAR can not be decoded using Q codec _CHAR ) ; } }
50737	private boolean not ( String cipher1 , String cipher2 , String match1 , String match2 ) { return ( ! cipher1 . equals ( match1 ) || ! cipher2 . equals ( match2 ) ) && ( ! cipher2 . equals ( match1 ) || ! cipher1 . equals ( match2 ) ) ; }
50760	public org . omg . CORBA . TypeCode _type ( ) { return ORB . init ( ) . get_primitive_tc ( TCKind . tk_short ) ; }
50842	public StateInteractive process_logfile_point ( PlaPointFloat p_point ) { return this ; }
50852	public BaseID createBaseID ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . BASEID , xml ) ; if ( obj == _NULL ) { return new BaseIDImpl ( xml ) ; } else { return ( BaseID ) obj ; } }
50893	@ Override public HijrahDate date ( Era era , int yearOfEra , int month , int dayOfMonth ) { return date ( prolepticYear ( era , yearOfEra ) , month , dayOfMonth ) ; }
51007	public void requestTopDownLeftRightResend ( ImageConsumer ic ) { }
51038	public ByteBufferOutputStream append ( float i ) { return append ( ( double ) i ) ; }
51046	public static QueryExp geq ( ValueExp v1 , ValueExp v2 ) { return new BinaryRelQueryExp ( GE , v1 , v2 ) ; }
51087	public void cancel ( ) { this . cancelled = _BOOL ; }
51153	public AssertionIDRef createAssertionIDRef ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION_ID_REF , elem ) ; if ( obj == _NULL ) { return new AssertionIDRefImpl ( elem ) ; } else { return ( AssertionIDRef ) obj ; } }
51160	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
51194	@ Override public void memberDisappeared ( Member member ) { for ( int i = _NUM ; i < membershipListeners . size ( ) ; i ++ ) { MembershipListener membershipListener = membershipListeners . get ( i ) ; if ( membershipListener != _NULL ) membershipListener . memberDisappeared ( member ) ; } }
51195	public Assertion createAssertion ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION , elem ) ; if ( obj == _NULL ) { return new AssertionImpl ( elem ) ; } else { return ( Assertion ) obj ; } }
51261	public void clear ( ) { m . clear ( ) ; }
51314	public java . lang . String toString ( ) { return toString ( _BOOL , _BOOL ) ; }
51344	public Condition createCondition ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITION , elem ) ; if ( obj == _NULL ) { return new ConditionImpl ( elem ) ; } else { return ( Condition ) obj ; } }
51354	public java . lang . String toString ( ) { return toString ( _BOOL , _BOOL ) ; }
51364	public Subject createSubject ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT , elem ) ; if ( obj == _NULL ) { return new SubjectImpl ( elem ) ; } else { return ( Subject ) obj ; } }
51368	public void addAttributeCertificate ( X509AttributeCertificateHolder attrCert ) throws CMSException { certs . add ( new DERTaggedObject ( _BOOL , _NUM , attrCert . toASN1Structure ( ) ) ) ; }
51377	protected ChildState createChildState ( View v ) { return new ChildState ( v ) ; }
51449	private void eventOccurred ( IEventData data , EventType type ) { if ( supportedEvents == _NULL || supportedEvents . contains ( type ) ) { eventListener . eventOccurred ( data , type ) ; } }
51469	@ Override public void onPause ( ) { super . onPause ( ) ; mDelegate . detachView ( ) ; if ( getActivity ( ) . isFinishing ( ) ) { mDelegate . destroyPresenter ( ) ; } }
51482	public static Node selectSingleNode ( Node doc , String str ) throws XPathException { return selectSingleNode ( doc , str , doc ) ; }
51660	public void paintTabbedPaneContentBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
51678	public Resource createResource ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESOURCE , elem ) ; if ( obj == _NULL ) { return new ResourceImpl ( elem ) ; } else { return ( Resource ) obj ; } }
51727	@ Override public List < Foo > findByUuid_C ( String uuid , long companyId ) { return findByUuid_C ( uuid , companyId , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
51780	@ Override public Object runScriptOnResource ( ScriptContext request , OperationOptions options ) { if ( _CHAR SHELL _CHAR . equals ( request . getScriptLanguage ( ) ) ) { return _CHAR OK _CHAR ; } else if ( _CHAR Groovy _CHAR . equals ( request . getScriptLanguage ( ) ) ) { return executeGroovyScript ( request ) ; } throw new ConnectorException ( request . getScriptLanguage ( ) + _CHAR script language is not supported _CHAR ) ; }
51837	public void removeNotify ( ) { super . removeNotify ( ) ; KeyboardManager . getCurrentManager ( ) . unregisterMenuBar ( this ) ; }
52007	public org . omg . CORBA . TypeCode _type ( ) { return ORB . init ( ) . get_primitive_tc ( TCKind . tk_TypeCode ) ; }
52019	public OneTimeUse createOneTimeUse ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ONE_TIME_USE , elem ) ; if ( obj == _NULL ) { return new OneTimeUseImpl ( elem ) ; } else { return ( OneTimeUse ) obj ; } }
52127	public boolean isRequired ( final AttributeType attributeType ) { return requiredAttributes . contains ( attributeType ) ; }
52155	private void checkLengthBeforeWrite ( int length ) { if ( pos + length + _NUM > headerBuffer . length ) { throw new HeadersTooLargeException ( sm . getString ( _CHAR iob . responseheadertoolarge . error _CHAR ) ) ; } }
52219	public String encode ( String pString ) throws EncoderException { if ( pString == _NULL ) { return _NULL ; } try { return encode ( pString , getDefaultCharset ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
52244	public synchronized boolean isPropagated ( ) { return propagatedFrom != _NULL ; }
52264	protected void handleFile ( File file , int depth , Collection < T > results ) throws IOException { }
52326	public static TypeReference newTryCatchReference ( int tryCatchBlockIndex ) { return new TypeReference ( ( EXCEPTION_PARAMETER << _NUM ) | ( tryCatchBlockIndex << _NUM ) ) ; }
52370	public JMenuItem add ( String s ) { return add ( new JMenuItem ( s ) ) ; }
52372	public void debug ( int level , String msg ) { switch ( level ) { case _NUM : debugInst . error ( msg ) ; break ; case _NUM : debugInst . warning ( msg ) ; break ; default : debugInst . message ( msg ) ; } }
52379	public boolean avoidingGui ( ) { return ! okToUseGui && needsGui ( ) ; }
52383	protected void sendDataIfMyLastMessage ( List < ProtocolMessage > protocolMessages ) throws IOException { if ( handlingMyLastProtocolMessage ( protocolMessages , workflowContext . getProtocolMessagePointer ( ) ) && messageBytesCollector . getRecordBytes ( ) . length != _NUM ) { LOGGER . debug ( _CHAR Records going to be sent : { } _CHAR , ArrayConverter . bytesToHexString ( messageBytesCollector . getRecordBytes ( ) ) ) ; transportHandler . sendData ( messageBytesCollector . getRecordBytes ( ) ) ; messageBytesCollector . flushRecordBytes ( ) ; } }
52498	public static String readPackageName ( ByteBuffer buffer , int offset ) { Charset utf16 = Charset . forName ( _CHAR UTF - _NUM _CHAR ) ; String str = new String ( buffer . array ( ) , offset , PACKAGE_NAME_SIZE , utf16 ) ; buffer . position ( offset + PACKAGE_NAME_SIZE ) ; return str ; }
52615	public static void saveSAML2TokenWithoutSecondaryKey ( String primaryKey , Object samlObj , long expirationTime ) throws SAML2TokenRepositoryException { saveSAML2Token ( primaryKey , _NULL , samlObj , expirationTime ) ; }
52632	boolean persistValue ( int id ) { int bit = _NUM << id ; return ( persistValue & bit ) != _NUM ; }
52652	public static double nextDouble ( double value , boolean increment ) { return increment ? nextDouble ( value ) : previousDouble ( value ) ; }
52700	public void insertUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { super . insertUpdate ( changes , adjustAllocation ( a ) , f ) ; updateVisibilityModel ( ) ; }
52738	public boolean addAll ( Attribute attribute ) { boolean wasModified = _BOOL ; for ( ByteString v : attribute ) { wasModified |= add ( v ) ; } return wasModified ; }
52989	public BigInteger calculateAgreement ( CipherParameters pubKey ) { DHPublicKeyParameters pub = ( DHPublicKeyParameters ) pubKey ; if ( ! pub . getParameters ( ) . equals ( dhParams ) ) { throw new IllegalArgumentException ( _CHAR Diffie - Hellman public key has wrong parameters . '' ) ; } return pub . getY ( ) . modPow ( key . getX ( ) , dhParams . getP ( ) ) ; }
52994	protected Client addToIndexes ( String ct , Map cMap ) { return addToIndexes ( ct , cMap , _BOOL ) ; }
53157	public PdfCanvas fillStroke ( ) { document . checkIsoConformance ( currentGs , IsoKey . DRAWMODE_FILL_STROKE , resources ) ; contentStream . getOutputStream ( ) . writeBytes ( B ) ; return this ; }
53165	public static String dateToString ( Date date ) { return dateToString ( date , UTC_DATE_FORMAT ) ; }
53305	public void logMessage ( SIPMessage message , String from , String to , String status , boolean sender ) { logMessage ( message , from , to , status , sender , System . currentTimeMillis ( ) ) ; }
53320	public Object decode ( Object value ) throws DecoderException { if ( value == _NULL ) { return _NULL ; } else if ( value instanceof String ) { return decode ( ( String ) value ) ; } else { throw new DecoderException ( _CHAR Objects of type _CHAR + value . getClass ( ) . getName ( ) + _CHAR can not be decoded using BCodec _CHAR ) ; } }
53425	public void propertyChange ( PropertyChangeEvent evt ) { String name = evt . getPropertyName ( ) ; if ( name == _CHAR width _CHAR || name == _CHAR preferredWidth _CHAR ) { invalidateWidthCache ( ) ; fireColumnMarginChanged ( ) ; } }
53488	public boolean removeDatabases ( ) { return removeDatabasesArg . isPresent ( ) ; }
53525	public Object object ( ) { return m_origObj ; }
53676	public void clear ( ) { al . clear ( ) ; }
53711	public Builder attributes ( String ... attributeOIDs ) { this . attributeOIDs . addAll ( asList ( attributeOIDs ) ) ; return this ; }
53785	public static SecurityOptions createNoCertificateOptions ( ) { SecurityOptions ops = new SecurityOptions ( ) ; ops . setCertificateType ( CertificateType . NO_CERTIFICATE ) ; ops . setEnableSSL ( _BOOL ) ; ops . setEnableStartTLS ( _BOOL ) ; return ops ; }
53819	protected void updatePreferredSize ( ) { updatePreferredSize ( getRow ( ) ) ; }
53842	public Name addAll ( Name suffix ) throws InvalidNameException { if ( suffix instanceof CompositeName ) { impl . addAll ( suffix . getAll ( ) ) ; return this ; } else { throw new InvalidNameException ( _CHAR Not a composite name : _CHAR + suffix . toString ( ) ) ; } }
53844	protected static boolean isBufferEmpty ( byte [ ] buffer ) { for ( byte aBuffer : buffer ) { if ( aBuffer != _NUM ) { return _BOOL ; } } return _BOOL ; }
53946	public Decision createDecision ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . DECISION , elem ) ; if ( object == _NULL ) { return new DecisionImpl ( elem ) ; } else { return ( Decision ) object ; } }
53949	public SubjectConfirmation createSubjectConfirmation ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION , xml ) ; if ( obj == _NULL ) { return new SubjectConfirmationImpl ( xml ) ; } else { return ( SubjectConfirmation ) obj ; } }
54024	final int fullyRelease ( Node node ) { boolean failed = _BOOL ; try { int savedState = getState ( ) ; if ( release ( savedState ) ) { failed = _BOOL ; return savedState ; } else { throw new IllegalMonitorStateException ( ) ; } } finally { if ( failed ) node . waitStatus = Node . CANCELLED ; } }
54127	@ Override public void onPause ( ) { super . onPause ( ) ; mDelegate . detachView ( ) ; if ( getActivity ( ) . isFinishing ( ) ) { mDelegate . destroyPresenter ( ) ; } }
54300	public void removeUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { super . removeUpdate ( changes , adjustAllocation ( a ) , f ) ; updateVisibilityModel ( ) ; }
54339	private static void checkPrivilegeForProxyAuthControl ( Operation operation ) throws DirectoryException { if ( ! operation . getClientConnection ( ) . hasPrivilege ( Privilege . PROXIED_AUTH , operation ) ) { throw new DirectoryException ( ResultCode . AUTHORIZATION_DENIED , ERR_PROXYAUTH_INSUFFICIENT_PRIVILEGES . get ( ) ) ; } }
54367	public final void signalAll ( ) { if ( ! isHeldExclusively ( ) ) throw new IllegalMonitorStateException ( ) ; Node first = firstWaiter ; if ( first != _NULL ) doSignalAll ( first ) ; }
54377	public void gotoMark ( ) { _currentNode = _markedNode ; }
54391	boolean partialIsVariable ( MultistepExprHolder testee , int lengthToTest ) { if ( _NUM == lengthToTest ) { WalkingIterator wi = ( WalkingIterator ) testee . m_exprOwner . getExpression ( ) ; if ( wi . getFirstWalker ( ) instanceof FilterExprWalker ) return _BOOL ; } return _BOOL ; }
54417	final int fullyRelease ( Node node ) { boolean failed = _BOOL ; try { int savedState = getState ( ) ; if ( release ( savedState ) ) { failed = _BOOL ; return savedState ; } else { throw new IllegalMonitorStateException ( ) ; } } finally { if ( failed ) node . waitStatus = Node . CANCELLED ; } }
54473	public AttributeStatement createAttributeStatement ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE_STATEMENT , xml ) ; if ( obj == _NULL ) { return new AttributeStatementImpl ( xml ) ; } else { return ( AttributeStatement ) obj ; } }
54506	@ Override public List < Foo > findByUuid_C ( String uuid , long companyId ) { return findByUuid_C ( uuid , companyId , QueryUtil . ALL_POS , QueryUtil . ALL_POS , _NULL ) ; }
54540	public void paintTabbedPaneContentBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
54542	public static boolean bindWithDNRequiresPassword ( ) { return directoryServer . bindWithDNRequiresPassword ; }
54603	private static String massageURI ( String uri ) { uri = uri . trim ( ) ; int protocolEnd = uri . indexOf ( _CHAR ) ; if ( protocolEnd < _NUM || isColonFollowedByPortNumber ( uri , protocolEnd ) ) { uri = _CHAR http : // '' + uri ; } return uri ; }
54719	protected long outputOffset ( ) { return _bytesWritten + _outputTail ; }
54784	public void printJobFailed ( PrintJobEvent pje ) { }
54873	public boolean containsKey ( Object key ) { return getEntry ( key ) != _NULL ; }
54921	private JMenu createMenu ( ) { JMenu menu = new JMenu ( _CHAR _CHAR ) ; if ( getWindowDecorationStyle ( ) == JRootPane . FRAME ) { addMenuItems ( menu ) ; } return menu ; }
54923	private boolean isPositionIndex ( int index ) { return index >= _NUM && index <= size ; }
54949	@ Override public void forceResort ( ) { Set < String > selectedIds = getSelectedIds ( ) ; super . forceResort ( ) ; setSelectedIds ( selectedIds ) ; }
55039	public boolean isSkipRepoUpdatePreview ( ) { return skipRepoUpdatePreview ; }
55125	public boolean signHash ( ) { return signHash ; }
55131	public NamePath withHead ( String newHead ) { List < String > newPathPieces = new ArrayList < > ( ) ; newPathPieces . addAll ( pathPieces ) ; newPathPieces . set ( pathPieces . size ( ) - _NUM , newHead ) ; return new NamePath ( newPathPieces ) ; }
55282	public PdfPage addAnnotation ( PdfAnnotation annotation ) { return addAnnotation ( - _NUM , annotation , _BOOL ) ; }
55358	public final void signalAll ( ) { if ( ! isHeldExclusively ( ) ) throw new IllegalMonitorStateException ( ) ; Node first = firstWaiter ; if ( first != _NULL ) doSignalAll ( first ) ; }
55370	public boolean containsCustomComponents ( JOptionPane op ) { return hasCustomComponents ; }
55373	public EncryptedAssertion createEncryptedAssertion ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTED_ASSERTION , xml ) ; if ( obj == _NULL ) { return new EncryptedAssertionImpl ( xml ) ; } else { return ( EncryptedAssertion ) obj ; } }
55474	public SubjectConfirmationData createSubjectConfirmationData ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION_DATA , xml ) ; if ( obj == _NULL ) { return new SubjectConfirmationDataImpl ( xml ) ; } else { return ( SubjectConfirmationData ) obj ; } }
55542	private void disableComponents ( ) { setEnabledOK ( _BOOL ) ; lInitContents . setVisible ( _BOOL ) ; argumentsScroll . setVisible ( _BOOL ) ; for ( JComponent comp : comps ) { comp . setEnabled ( _BOOL ) ; } }
55667	protected void postClosingEvent ( JInternalFrame frame ) { InternalFrameEvent e = new InternalFrameEvent ( frame , InternalFrameEvent . INTERNAL_FRAME_CLOSING ) ; try { Toolkit . getDefaultToolkit ( ) . getSystemEventQueue ( ) . postEvent ( e ) ; } catch ( SecurityException se ) { frame . dispatchEvent ( e ) ; } }
55689	public final boolean parentOf ( ThreadGroup g ) { for ( ; g != _NULL ; g = g . parent ) { if ( g == this ) { return _BOOL ; } } return _BOOL ; }
55698	public Task delete ( String tokenId , String etag , ResultHandler < String , ? > handler ) { return new DeleteTask ( tokenId , etag , handler ) ; }
55715	synchronized void insertExtendedStyleAt ( Style attr , int index ) { insertAttributeSetAt ( attr , extendedIndex + index ) ; }
55765	public boolean equals ( Object object ) { if ( this == object ) { return _BOOL ; } else if ( object == _NULL || getClass ( ) != object . getClass ( ) ) { return _BOOL ; } return principal . equals ( object . toString ( ) ) ; }
55800	protected void onRequestHandlerNotFound ( RequestContext requestContext , String handlerName ) throws ServletException { ViewBeanManager viewBeanManager = requestContext . getViewBeanManager ( ) ; ViewBean targetView = viewBeanManager . getViewBean ( AMInvalidURLViewBean . class ) ; targetView . forwardTo ( requestContext ) ; throw new CompleteRequestException ( ) ; }
55839	protected Object allocateArray ( int len ) { return new char [ len ] ; }
55865	final long fullyRelease ( Node node ) { boolean failed = _BOOL ; try { long savedState = getState ( ) ; if ( release ( savedState ) ) { failed = _BOOL ; return savedState ; } else { throw new IllegalMonitorStateException ( ) ; } } finally { if ( failed ) node . waitStatus = Node . CANCELLED ; } }
55947	public byte [ ] encode ( byte [ ] bytes ) { return encodeUrl ( WWW_FORM_URL , bytes ) ; }
56018	public void shape ( char [ ] text , int start , int count ) { if ( isContextual ( ) ) { contextualShape ( text , start , count , fDefaultContextIndex ) ; } else { nonContextualShape ( text , start , count ) ; } }
56023	public ApiErrorAssert hasI18nDescriptions ( ) { for ( ApiError error : actual ) { assertI18nDescription ( error . description ( ) , annotatedClass ) ; } return this ; }
56093	public static void addObjectClassToRemove ( ObjectClass objectClass ) { instance . removeObjectClasses . add ( objectClass ) ; }
56129	public void dropComplete ( boolean success ) throws InvalidDnDOperationException { DropTargetContextPeer peer = getDropTargetContextPeer ( ) ; if ( peer != _NULL ) { peer . dropComplete ( success ) ; } }
56131	public Conditions createConditions ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITIONS , xml ) ; if ( obj == _NULL ) { return new ConditionsImpl ( xml ) ; } else { return ( Conditions ) obj ; } }
56170	static < T > void any ( Promise < T > parent , Promise < T > [ ] childPromises ) { final AtomicBoolean done = new AtomicBoolean ( ) ; final Consumer < Promise < T >> runnable = _NULL ; for ( Promise < T > childPromise : childPromises ) { childPromise . whenComplete ( runnable ) ; } }
56221	public Subject createSubject ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . SUBJECT , elem ) ; if ( obj == _NULL ) { return new SubjectImpl ( elem ) ; } else { return ( Subject ) obj ; } }
56223	public void invalidateLayout ( Container target ) { checkContainer ( target ) ; xChildren = _NULL ; yChildren = _NULL ; xTotal = _NULL ; yTotal = _NULL ; }
56260	public boolean remove_via_padstack ( LibPadstack p_padstack ) { if ( p_padstack == _NULL ) return _BOOL ; return via_padstacks . remove ( p_padstack ) ; }
56327	public static final String makeJavaIdentifierForAttribute ( String identifier ) { return makeJavaIdentifier ( identifier , _BOOL ) ; }
56333	public void mouseMoved ( MouseEvent e ) { }
