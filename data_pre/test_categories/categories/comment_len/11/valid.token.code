84	public void onException ( JMSException je ) { this . setConnected ( _BOOL ) ; Debug . logError ( je , _CHAR JMS connection exception _CHAR , module ) ; while ( ! isConnected ( ) ) { try { this . refresh ( ) ; } catch ( GenericServiceException e ) { try { Thread . sleep ( _NUM ) ; } catch ( InterruptedException ie ) { } continue ; } } }
91	public PhotosDeleteCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
124	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_CHANNELCHAT_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
133	public boolean hasURLsForSelection ( ) { return _BOOL ; }
159	public final static < T extends Bean > List < T > load ( String [ ] cols , String where , Object [ ] args , Class < T > clazz ) { return load ( cols , where , args , _NULL , - _NUM , - _NUM , clazz ) ; }
183	public EqExpr newEqExpr ( Value op1 , Value op2 ) { return new JEqExpr ( op1 , op2 ) ; }
213	@ Override public void configure ( ) { from ( inputUri ) . unmarshal ( dataTypeUnMarshal ) . to ( String . format ( _CHAR canova : // % s ? inputMarshaller = % s & writableConverter = % s '' , inputFormat , canovaMarshaller , writableConverter ) ) . process ( processor ) . to ( String . format ( '' kafka : % s ? topic = % s & zookeeperHost = % szookeeperPort = % d & serializerClass = % s & keySerializerClass = % s '' , kafkaBrokerList , topicName , zooKeeperHost , zooKeeperPort , StringEncoder . class . getName ( ) , StringEncoder . class . getName ( ) ) ) ; }
228	public void clear ( ) { this . point = _NULL ; this . normal = _NULL ; this . distance = _NUM . _NUM ; }
253	public boolean declaresField ( String subsignature ) { checkLevel ( SIGNATURES ) ; for ( SootField field : fields ) if ( field . getSubSignature ( ) . equals ( subsignature ) ) return _BOOL ; return _BOOL ; }
281	@ Override public synchronized void remove ( String key ) { boolean deleted = getFileForKey ( key ) . delete ( ) ; removeEntry ( key ) ; if ( ! deleted ) { VolleyLog . d ( _CHAR Could not delete cache entry for key = % s , filename = % s _CHAR , key , getFilenameForKey ( key ) ) ; } }
295	public S1Angle lng ( ) { return S1Angle . radians ( lngRadians ) ; }
296	private void preProcess ( ProgramNotificationTemplate template ) { if ( template . getNotificationTrigger ( ) . isImmediate ( ) ) { template . setRelativeScheduledDays ( _NULL ) ; } if ( NotificationRecipient . USER_GROUP != template . getNotificationRecipient ( ) ) { template . setRecipientUserGroup ( _NULL ) ; } if ( ! ( template . getNotificationRecipient ( ) . isExternalRecipient ( ) ) ) { template . setDeliveryChannels ( Sets . newHashSet ( ) ) ; } }
322	public LogicalMetric make ( ) { return maker . make ( metricName , dependencyMetricNames ) ; }
323	public boolean isManagedBy ( User user ) { if ( user == _NULL || user . getGroups ( ) == _NULL ) { return _BOOL ; } for ( UserGroup group : user . getGroups ( ) ) { if ( isManagedBy ( group ) ) { return _BOOL ; } } return _BOOL ; }
330	public static SM_SYSTEM_MESSAGE STR_UNION_ALREADY_OTHER_UNION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
370	public Vector2 left ( ) { double temp = this . x ; this . x = this . y ; this . y =- temp ; return this ; }
391	public static < T > String createJSONStringFromPojo ( Context context , T data ) { Gson gson = new Gson ( ) ; return gson . toJson ( data ) ; }
513	public void removeRenderStatement ( String instanceId ) { if ( ! WXUtils . isUiThread ( ) ) { throw new WXRuntimeException ( _CHAR [ WXRenderManager ] removeRenderStatement can only be called in main thread _CHAR ) ; } WXRenderStatement statement = mRegistries . remove ( instanceId ) ; if ( statement != _NULL ) { statement . destroy ( ) ; } }
528	public static Paint newGuidelinePaint ( ) { final Paint paint = new Paint ( ) ; paint . setColor ( Color . parseColor ( SEMI_TRANSPARENT ) ) ; paint . setStrokeWidth ( DEFAULT_GUIDELINE_THICKNESS_PX ) ; return paint ; }
530	public void undoAll ( ) { undo ( ) ; setGroup ( lastSavedValues . getGroup ( ) ) ; getConnections ( ) . clear ( ) ; getConnections ( ) . addAll ( lastSavedValues . getConnections ( ) ) ; getSubgroups ( ) . clear ( ) ; getSubgroups ( ) . addAll ( lastSavedValues . getSubgroups ( ) ) ; groupingModified = _BOOL ; }
541	protected long unScaleTime ( int reqSampleRate , long timelineTimeInSamples ) { if ( reqSampleRate == sampleRate ) return ( timelineTimeInSamples ) ; return ( Math . round ( ( double ) ( sampleRate ) * ( double ) ( timelineTimeInSamples ) / ( reqSampleRate ) ) ) ; }
596	public Vector2 right ( ) { double temp = this . x ; this . x =- this . y ; this . y = temp ; return this ; }
661	public static SM_SYSTEM_MESSAGE STR_EXTEND_ACCOUNT_WAREHOUSE_CANT_EXTEND_MORE_DUE_TO_MAXIMUM_EXTEND_LEVEL_BY_THIS_NPC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
663	public ImageSize scale ( float scale ) { return new ImageSize ( ( int ) ( width * scale ) , ( int ) ( height * scale ) ) ; }
714	public Future < Boolean > analyzeTraffic ( final RequestPredicate requestPredicate , final int timeout ) { Future < Boolean > future = Executors . newSingleThreadExecutor ( ) . submit ( new AnalyzerCallable ( requestPredicate , timeout , proxyEnabled , proxyListeners , controller , registry ) ) ; return new DispatchingFuture ( future , proxyListeners ) ; }
717	public static SM_SYSTEM_MESSAGE STR_FIND_POS_NPC_FOUND_IN_OTHER_WORLD_DEV ( String value0 , String value2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value2 , value1 ) ; }
723	public boolean isAggregationType ( AggregationType aggregationType ) { return this . aggregationType != _NULL && this . aggregationType . equals ( aggregationType ) ; }
812	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoReduceSpellATK_Instant_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
815	public boolean containsDetailsView ( DetailsView detailsView ) { return getDisplayArea ( detailsView . getTab ( ) ) != _NULL ; }
817	public boolean streamToSpeech ( InputStream is ) { boolean ok ; voice . startBatch ( ) ; ok = voice . speak ( is ) ; voice . endBatch ( ) ; return ok ; }
829	public static Cursor query ( ContentResolver cr ) { return cr . query ( CONTENT_URI , PROJECTION , WHERE , WHERE_ARGS , SORT_ORDER ) ; }
864	protected void checkVectorDimensions ( int n ) throws MathIllegalArgumentException { if ( getDimension ( ) != n ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH , getDimension ( ) , n ) ; } }
868	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysDodge_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
903	public void addTaintPropagationHandler ( TaintPropagationHandler handler ) { this . taintPropagationHandlers . add ( handler ) ; }
927	private void startCheckingStatus ( ) { future = executor . submit ( _NULL ) ; }
941	public GtExpr newGtExpr ( Value op1 , Value op2 ) { return new GGtExpr ( op1 , op2 ) ; }
944	public static int dayNumber ( Timestamp stamp ) { Calendar tempCal = toCalendar ( stamp , TimeZone . getDefault ( ) , Locale . getDefault ( ) ) ; return tempCal . get ( Calendar . DAY_OF_WEEK ) ; }
955	private String generateHash ( ) { return UUID . randomUUID ( ) . toString ( ) . substring ( _NUM , _NUM ) ; }
999	private static boolean isDataBindingLayout ( @ NotNull NlComponent component ) { return component . getTagName ( ) . equals ( TAG_LAYOUT ) ; }
1001	public static SM_SYSTEM_MESSAGE STR_FIND_POS_NPC_FOUND ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1042	public boolean isValid ( Date startDate , Date date ) { return isValid ( startDate . getTime ( ) , date . getTime ( ) ) ; }
1049	public static final Object [ ] trim ( Object [ ] a , int size ) { if ( a . length == size ) { return a ; } else { Object [ ] b = new Object [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , size ) ; return b ; } }
1050	public AudioGetPopularQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
1065	public static < T > void addService ( String url , Class < T > serviceInterface , T service ) throws RpcException { addService ( url , serviceInterface , service , ServerConfig . DEFAULT_PORT ) ; }
1068	public boolean containsKey ( DataType key ) { return lookupKey ( key ) . hasNext ( ) ; }
1089	public boolean contains ( int val ) { return index ( val ) >= _NUM ; }
1136	public void reset ( ) { startTime = _NUM ; count = _NUM ; sum = _NUM ; minTime = Long . MAX_VALUE ; maxTime = _NUM ; notReliable = _BOOL ; }
1173	private boolean isValidComponentName ( String name ) { if ( name . isEmpty ( ) ) return _BOOL ; if ( name . equals ( _CHAR _BOOL _CHAR ) || name . equals ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( Character . isDigit ( name . charAt ( _NUM ) ) ) return _BOOL ; if ( name . startsWith ( _CHAR . _CHAR ) ) return _BOOL ; return _BOOL ; }
1184	public Instruction locateInst ( int index ) { return locateInstr ( index , _NUM , icount ) ; }
1325	public void applyMirroredCorrection ( ResultPoint [ ] points ) { if ( ! mirrored || points == _NULL || points . length < _NUM ) { return ; } ResultPoint bottomLeft = points [ _NUM ] ; points [ _NUM ] = points [ _NUM ] ; points [ _NUM ] = bottomLeft ; }
1351	private List < String > arrayToList ( String [ ] array ) { return Arrays . asList ( array ) ; }
1457	public static DataFrame dataFrameForRecords ( JavaRDD < GenericRecord > records , Schema schema , SQLContext sqlc ) { JavaRDD < Row > rows = rowsForRecords ( records ) ; StructType structType = structTypeForSchema ( schema ) ; DataFrame dataFrame = sqlc . createDataFrame ( rows , structType ) ; return dataFrame ; }
1464	public void disableAllOperations ( ) { setPermissions ( _CHAR _CHAR ) ; }
1471	public boolean isCauseOf ( Throwable exception ) { return TaggedIOException . isTaggedWith ( exception , tag ) ; }
1479	public static String computeDigest ( URL url , String algorithm ) throws IOException , NoSuchAlgorithmException { return computeDigest ( url . openStream ( ) , algorithm ) ; }
1501	@ Override protected void onResume ( ) { super . onResume ( ) ; LOG . d ( TAG , _CHAR Resumed the activity . '' ) ; if ( this . appView == _NULL ) { return ; } this . getWindow ( ) . getDecorView ( ) . requestFocus ( ) ; this . appView . handleResume ( this . keepRunning ) ; }
1503	public void addEntryForMigration ( Entry entry ) { addTabId ( getCount ( ) , entry . tabId ) ; if ( mEntryMap . indexOfKey ( entry . tabId ) >= _NUM ) return ; mEntryMap . put ( entry . tabId , entry ) ; }
1506	public static JobTrigger . ExecutionWindowTrigger executionWindow ( int windowStart , int windowEnd ) { if ( windowStart < _NUM ) { throw new IllegalArgumentException ( _CHAR Window start ca n _CHAR_CHAR_CHAR t be less than window start _CHAR ) ; } return new JobTrigger . ExecutionWindowTrigger ( windowStart , windowEnd ) ; }
1508	public boolean hasNonEmptyIntersection ( PointsToSet other ) { return _BOOL ; }
1520	public void addElement ( final double value ) { if ( internalArray . length <= startIndex + numElements ) { expand ( ) ; } internalArray [ startIndex + numElements ++ ] = value ; }
1577	public synchronized void removeListener ( final Long tagId ) { listeners . remove ( tagId ) ; eventTimes . remove ( tagId ) ; }
1580	protected void onAnimationStarted ( ) { }
1591	public static ProbeItemDescriptor continuousFillItem ( String name , String description , ItemValueFormatter formatter ) { return continuousItem ( name , description , formatter , _NUM , _NUM , MAX_VALUE_UNDEFINED , DEFAULT_LINE_WIDTH , _NULL , DEFAULT_COLOR ) ; }
1592	public int addRow ( int parentRow ) { int r = super . addRow ( ) ; put ( r , parentRow ) ; return r ; }
1637	void addToSubroutine ( final long id , final int nbSubroutines ) { if ( ( status & VISITED ) == _NUM ) { status |= VISITED ; srcAndRefPositions = new int [ ( nbSubroutines - _NUM ) / _NUM + _NUM ] ; } srcAndRefPositions [ ( int ) ( id >> > _NUM ) ] |= ( int ) id ; }
1641	public boolean positiveOrNull ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( sign > _NUM ) || ( ( mant [ mant . length - _NUM ] == _NUM ) && ! isInfinite ( ) ) ; }
1666	public Quaternion multiply ( final Quaternion q ) { return multiply ( this , q ) ; }
1681	private String toUrl ( String testFile ) throws MalformedURLException { return new File ( TestUtil . TEST_DATA_FOLDER + _CHAR pac _CHAR , testFile ) . toURI ( ) . toURL ( ) . toString ( ) ; }
1732	public VideoGetAlbumsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
1808	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MASTER_SENT_OFFER_MSG_TO_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1842	public long snapshotSize ( ) { return snapshotBytes ; }
1867	protected void verifyContainerProperty ( String propertyPath , Object expectedValue ) throws Throwable { CommandInput commandInput = new CommandInput ( ) . withDockerUri ( getDockerVersionedUri ( ) ) . withCredentials ( getDockerCredentials ( ) ) . withProperty ( DockerAdapterCommandExecutor . DOCKER_CONTAINER_ID_PROP_NAME , containerId ) ; host . testStart ( _NUM ) ; getTestCommandExecutor ( ) . inspectContainer ( commandInput , _NULL ) ; host . testWait ( ) ; }
1913	public boolean hasItemMeta ( ) { return ! Bukkit . getItemFactory ( ) . equals ( meta , _NULL ) ; }
1920	public String [ ] upload_appender_file ( String group_name , byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { return this . do_upload_file ( ProtoCommon . STORAGE_PROTO_CMD_UPLOAD_APPENDER_FILE , group_name , _NULL , _NULL , file_ext_name , file_buff . length , new UploadBuff ( file_buff , _NUM , file_buff . length ) , meta_list ) ; }
1960	public void error ( String message ) { sendPluginResult ( new PluginResult ( PluginResult . Status . ERROR , message ) ) ; }
1967	public void insertBefore ( Unit toInsert , Unit point ) { if ( point == mHead ) mHead = toInsert ; Chain < Unit > methodBody = mBody . getUnits ( ) ; methodBody . insertBefore ( toInsert , point ) ; }
1971	@ Override public void onSensorSelectionClosed ( DialogFragment dialog ) { Log . d ( TAG , _CHAR Sensor selection closed _CHAR ) ; sensorSelectionDialog = _NULL ; }
1977	public boolean contains ( Object u ) { return innerChain . contains ( u ) ; }
1978	public E valueAt ( int index ) { return ( E ) mArray [ index ] ; }
1989	public Iterator items ( ) { return items ( ( Predicate ) _NULL ) ; }
1996	public FTPReply sendSiteCommand ( String command ) throws IllegalStateException , IOException , FTPIllegalReplyException { synchronized ( lock ) { if ( ! connected ) { throw new IllegalStateException ( _CHAR Client not connected _CHAR ) ; } communication . sendFTPCommand ( _CHAR SITE _CHAR + command ) ; touchAutoNoopTimer ( ) ; return communication . readFTPReply ( ) ; } }
1997	public void squareSize ( float squareSize ) { this . squareSize = squareSize ; invalidate ( ) ; }
2010	public Vector multiply ( int m ) { x *= m ; y *= m ; z *= m ; return this ; }
2038	public static SM_SYSTEM_MESSAGE STR_UNION_CHANGE_LEADER_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2054	@ Override public TemplateDruidQuery withGranularity ( Granularity granularity ) { if ( granularity instanceof ZonelessTimeGrain ) { return withGranularity ( ( ZonelessTimeGrain ) granularity ) ; } throw new UnsupportedOperationException ( _CHAR Template Druid Query only supports Zoneless Time Grains _CHAR ) ; }
2102	public static SM_SYSTEM_MESSAGE STR_EXTEND_INVENTORY_CANT_EXTEND_MORE_DUE_TO_MAXIMUM_EXTEND_LEVEL_BY_THIS_NPC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
2110	@ Override public Constant asConstant ( ) { throw new ClassCastException ( ) ; }
2143	public static URI toLocation ( String source , String table ) { URI sourceUri = URI . create ( source ) ; return toLocation ( sourceUri , table ) ; }
2144	public S1Angle lat ( ) { return S1Angle . radians ( latRadians ) ; }
2145	public static int hash ( double [ ] value ) { return Arrays . hashCode ( value ) ; }
2147	public VideoGetCommentsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
2160	public AssignStmt newAssignStmt ( Value variable , Value rvalue ) { return new GAssignStmt ( variable , rvalue ) ; }
2161	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_DOOR_BROKEN ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
2170	public static RequestQueue newRequestQueue ( int threadPoolSize ) { return NoHttp . newRequestQueue ( DiskCacheStore . INSTANCE , OkHttpRestConnection . getInstance ( ) , threadPoolSize ) ; }
2171	public void sendStatus ( ServiceStatus serverStatus , String status ) { NotificationMessage < StatusReport > message = new NotificationMessage < > ( ) ; message . setMethod ( LSPMethods . LANGUAGE_STATUS . getMethod ( ) ) ; message . setParams ( new StatusReport ( ) . withMessage ( status ) . withType ( serverStatus . name ( ) ) ) ; send ( message ) ; }
2177	public void updateWithItemHandler ( K key ) { remove ( key ) ; put ( key , itemHandler . get ( key ) ) ; }
2190	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonHoming_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
2238	public static Flowable < Integer > characters ( CharSequence string ) { return RxJavaPlugins . onAssembly ( new FlowableCharSequence ( string ) ) ; }
2242	protected void onStop ( ) { setActiveForm ( _NULL ) ; }
2357	public static SM_SYSTEM_MESSAGE STR_PARTY_CANT_INVITE_WHEN_HE_IS_ASKED_QUESTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2367	public static Point createPointFromJson ( JsonNode json ) { return FACTORY . createPoint ( createCoordinateFromJson ( json ) ) ; }
2417	@ Override public TriangularDistribution makeDistribution ( ) { return new TriangularDistribution ( - _NUM , _NUM , _NUM ) ; }
2442	public boolean fileToSpeech ( String filePath ) { boolean ok = _BOOL ; try { InputStream is = new FileInputStream ( filePath ) ; ok = streamToSpeech ( is ) ; } catch ( IOException ioe ) { System . err . println ( _CHAR Ca n _CHAR_CHAR + filePath ) ; } return ok ; }
2473	@ Override public void write ( char [ ] cbuf , int off , int len ) throws IOException { if ( xmlPrologWriter != _NULL ) { detectEncoding ( cbuf , off , len ) ; } else { writer . write ( cbuf , off , len ) ; } }
2546	public K keyAt ( int index ) { return ( K ) mArray [ index << _NUM ] ; }
2587	public Expression notMatches ( Value str , Value regexp , String single , String multi , String escape ) { if ( escape != _NULL ) throw new IllegalArgumentException ( _CHAR JPQL ESCAPE keyword is not supported . '' ) ; return new NotMatchesExpression ( str , regexp ) ; }
2595	public SecureGetSMSHistoryQuery dateTo ( Integer value ) { return unsafeParam ( _CHAR date_to _CHAR , value ) ; }
2642	@ Override public void element ( String elementName , Augmentations augmentations ) throws XNIException { }
2648	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCDeBuff_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
2661	public static double determinationCoefficient ( double [ ] y1 , double [ ] y2 , int n ) { return Math . pow ( correlation ( y1 , y2 ) , _NUM ) ; }
2687	public void terminate ( ) throws RemoteException { Hashtable < String , IJSpace > tmpDepot = ( Hashtable < String , IJSpace > ) _registeredSpaces . clone ( ) ; for ( String spaceName : tmpDepot . keySet ( ) ) unregister ( spaceName ) ; if ( _logger . isLoggable ( Level . FINE ) ) _logger . fine ( _CHAR All spaces unregistered successfully _CHAR ) ; }
2690	@ Override public boolean hasFixedPropertiesArray ( ) { return _BOOL ; }
2698	public T remove ( ServletRequest request , Map < String , Object > expandContext ) { AttributeAccessor < T > aa = new AttributeAccessor < T > ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; return aa . remove ( request ) ; }
2699	public static boolean isSuperClass ( Class child , String sup ) { return child != _NULL && ( child . getCanonicalName ( ) . equals ( sup ) || isSuperClass ( child . getSuperclass ( ) , sup ) ) ; }
2749	public void toggleSelection ( final int position ) { if ( mSelectedItems . get ( position , _BOOL ) ) { mSelectedItems . delete ( position ) ; } else { mSelectedItems . put ( position , _BOOL ) ; } notifyItemChanged ( position ) ; }
2759	public static void print ( byte x ) { out . print ( x ) ; out . flush ( ) ; }
2811	public static boolean hasComplexDataType ( DataType dataType ) { switch ( dataType ) { case ARRAY : case STRUCT : case MAP : return _BOOL ; default : return _BOOL ; } }
2816	private static float calcSum ( float [ ] vals ) { if ( vals == _NULL ) return _NUM ; float sum = _NUM ; for ( float f : vals ) sum += f ; return sum ; }
2824	public boolean importAsSource ( Label label ) { return containsLabel ( label ) ; }
2839	private static String trimRight ( @ Nonnull final String text ) { return text . replaceAll ( _CHAR \\ s + $ _CHAR , _CHAR _CHAR ) ; }
2848	public void addFieldToRemove ( final String javaFieldName ) { fieldsToRemove . add ( javaFieldName ) ; }
2864	public boolean isTextPresentInWebElement ( WebElement element , String text , int timeout ) { return isConditionMet ( textToBePresentInElement ( element , text ) , timeout ) ; }
2885	private static void debugPrintln ( String msg ) { if ( DEBUG ) { System . err . println ( _CHAR XERCES : _CHAR + msg ) ; } }
2926	public void registerListener ( Condition condition , EventListener listener ) { getListenerForCondition ( condition , - _NUM ) . registerListener ( listener ) ; }
2935	@ Override public String uid ( ) { String ruid = UUID . randomUUID ( ) . toString ( ) ; int n = ruid . length ( ) ; return _CHAR cmmModel _CHAR + _CHAR _ _CHAR + ruid . substring ( n - _NUM , n ) ; }
2984	public static BufferedReader createBufferedReaderFromResource ( final String name ) throws IOException { final InputStream resourceAsStream ; resourceAsStream = StatisticalReferenceDatasetFactory . class . getResourceAsStream ( name ) ; if ( resourceAsStream == _NULL ) { throw new IOException ( _CHAR could not find resource _CHAR + name ) ; } return new BufferedReader ( new InputStreamReader ( resourceAsStream ) ) ; }
2993	public PhotosPutTagQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
2998	public LookbackQuery withLookbackQueryPostAggregations ( Collection < PostAggregation > postAggregations ) { return new LookbackQuery ( dataSource , granularity , filter , aggregations , postAggregations , intervals , context , _BOOL , lookbackOffsets , lookbackPrefixes , having , limitSpec ) ; }
3019	private Experiment createExperiment ( String startTime , String endTime , String expSuffix ) { return ExperimentFactory . createExperiment ( ) . setStartTime ( startTime ) . setEndTime ( endTime ) . setLabel ( PREFIX_EXPERIMENT + TIMESTAMP_STR + expSuffix ) . setSamplingPercent ( SAMPLING_PERCENT ) . setApplication ( ApplicationFactory . createApplication ( ) . setName ( PREFIX_APPLICATION + TIMESTAMP_STR ) ) ; }
3022	public boolean hasNext ( ) { return next >= _NUM ; }
3036	public void initWithSaveInstanceState ( Bundle savedInstanceState ) { this . savedInstanceState = savedInstanceState ; }
3040	@ Override public void clear ( ) { super . clear ( ) ; mIconUrlToIconMap . clear ( ) ; }
3044	@ Override public void write ( OutputStream outputStream , Storable obj ) throws IOException { Writer writer = new OutputStreamWriter ( outputStream ) ; gson . toJson ( obj , obj . getClass ( ) , writer ) ; writer . close ( ) ; }
3082	public boolean hasField ( String fldName ) { return fields ( ) . contains ( fldName ) ; }
3104	@ Override public boolean isOverriding ( ) { return ( this . keyHook != _NULL ) ? this . keyHook . isOverridingPresses : _BOOL ; }
3115	@ Override public Object oneTransition ( QName elementName , int [ ] currentState , SubstitutionGroupHandler subGroupHandler ) { if ( currentState [ _NUM ] < _NUM ) { currentState [ _NUM ] = XSCMValidator . SUBSEQUENT_ERROR ; return _NULL ; } currentState [ _NUM ] = XSCMValidator . FIRST_ERROR ; return _NULL ; }
3171	public static boolean isDUCDoc ( String sDocName ) { return ( new File ( sDocName ) . getName ( ) . split ( _CHAR [ . ] _CHAR ) . length == _NUM ) ; }
3172	public void removeAllFromAggregate ( int row ) { clearAggregateMappings ( row , _BOOL ) ; }
3200	public static String toString ( Object object ) throws JSONException { return toString ( object , _NULL ) ; }
3248	public String formatText ( String text ) { text = StringEscapeUtils . escapeHtml ( text ) ; return text . replaceAll ( url , _CHAR $ _NUM < a rel =_CHAR href = _CHAR target =_CHAR > $ _NUM < / a > _CHAR ) . replaceAll ( tweep , _CHAR < a rel =_CHAR href =_CHAR target =_CHAR > $ _NUM < / a > _CHAR ) . replaceAll ( hashtag , _CHAR < a rel =_CHAR href =_CHAR target =_CHAR > $ _NUM < / a > _CHAR ) ; }
3266	public void loadDataStringFromFile ( String sFilename ) throws java . io . IOException , java . io . FileNotFoundException { String sDataString = utils . loadFileToStringWithNewlines ( sFilename ) ; setDataString ( sDataString ) ; }
3283	public void forEach ( BiConsumer < K , V > action ) { registryObjects . forEach ( action ) ; }
3286	public static SM_SYSTEM_MESSAGE STR_MSG_ALARM_REMAIN_ONE_MINUTE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3306	private < C > void putAll ( ColumnListMutation < C > mutation , Iterable < Column < C >> columns ) { for ( Column < C > column : columns ) { mutation . setTimestamp ( column . getTimestamp ( ) ) . putColumn ( column . getName ( ) , column . getByteBufferValue ( ) , column . getTtl ( ) ) ; } }
3310	public static WordRelation createWordRelation ( Utterance utterance , TokenToWords tokenToWords ) { Relation relation = utterance . createRelation ( Relation . WORD ) ; return new WordRelation ( relation , tokenToWords ) ; }
3340	public void enableDragItem ( @ NonNull ItemTouchHelper itemTouchHelper , int toggleViewId , boolean dragOnLongPress ) { itemDragEnabled = _BOOL ; mItemTouchHelper = itemTouchHelper ; setToggleViewId ( toggleViewId ) ; setToggleDragOnLongPress ( dragOnLongPress ) ; }
3372	public void addTaintPropagationHandler ( TaintPropagationHandler handler ) { if ( this . taintPropagationHandlers == _NULL ) this . taintPropagationHandlers = new HashSet < > ( ) ; this . taintPropagationHandlers . add ( handler ) ; }
3407	protected long scaleTime ( int reqSampleRate , long targetTimeInSamples ) { if ( reqSampleRate == sampleRate ) return ( targetTimeInSamples ) ; return ( Math . round ( ( double ) ( reqSampleRate ) * ( double ) ( targetTimeInSamples ) / ( sampleRate ) ) ) ; }
3424	public static Builder waffleCone ( ) { return new Builder ( ) ; }
3426	public static void o ( double [ ] [ ] A ) { o ( A , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
3516	public IfStmt newIfStmt ( Value condition , Unit target ) { return new GIfStmt ( condition , target ) ; }
3524	public GroupsEditQuery marketCity ( List < Integer > value ) { return unsafeParam ( _CHAR market_city _CHAR , value ) ; }
3561	private View fillFromTop ( int nextTop ) { mFirstPosition = Math . min ( mFirstPosition , - _NUM ) ; mFirstPosition = Math . min ( mFirstPosition , mItemCount - _NUM ) ; if ( mFirstPosition < _NUM ) { mFirstPosition = _NUM ; } return fillDown ( mFirstPosition , nextTop ) ; }
3604	private Object writeReplace ( ) { return new DataTransferObject ( v . getX ( ) , v . getY ( ) , v . getZ ( ) ) ; }
3611	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , FormatException { return decode ( image , _NULL ) ; }
3641	public AndExpr newAndExpr ( Value op1 , Value op2 ) { return new JAndExpr ( op1 , op2 ) ; }
3659	public FriendsGetQueryWithFields listId ( Integer value ) { return unsafeParam ( _CHAR list_id _CHAR , value ) ; }
3699	private static void debugPrintln ( String msg ) { if ( DEBUG ) { System . err . println ( _CHAR XERCES : _CHAR + msg ) ; } }
3778	public AemDialog open ( final By clickableArea ) { open ( currentScope . findElement ( clickableArea ) ) ; return this ; }
3784	private static int calculateTotalBytes ( ByteBuffer [ ] byteBufferArr ) { int total = _NUM ; for ( int index = _NUM ; index < byteBufferArr . length ; index ++ ) { total += byteBufferArr [ index ] . capacity ( ) ; } return total ; }
3785	public Vector multiply ( double m ) { x *= m ; y *= m ; z *= m ; return this ; }
3796	public void requestUpdate ( ) { mRecomputePosition = _BOOL ; mLayout . requestUpdate ( ) ; }
3860	public int compareTo ( Entry e ) { if ( this == e ) return _NUM ; if ( renew < e . renew || ( renew == e . renew && id < e . id ) ) return _NUM ; return - _NUM ; }
3866	@ NotNull public DesignSurfaceFixture requireSelection ( @ NotNull List < NlComponentFixture > components ) { assertEquals ( components , getSelection ( ) ) ; return this ; }
3875	public void clear ( ) { changeReports . clear ( ) ; }
3916	@ Override public void onDestroy ( ) { LOG . d ( TAG , _CHAR CordovaActivity . onDestroy ( ) _CHAR ) ; super . onDestroy ( ) ; if ( this . appView != _NULL ) { appView . handleDestroy ( ) ; } }
3944	public double slopeStdErr ( ) { return Math . sqrt ( svar1 ) ; }
3948	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
3960	public static void clear ( ) { clear ( DEFAULT_CLEAR_COLOR ) ; }
3977	public static List < ByteBuffer > base64StringToByteBuffer ( String ... base64EncodedKeys ) { List < ByteBuffer > byteBuffers = new ArrayList < > ( base64EncodedKeys . length ) ; for ( String base64EncodedKey : base64EncodedKeys ) { byteBuffers . add ( base64StringToByteBuffer ( base64EncodedKey ) ) ; } return byteBuffers ; }
4031	public short [ ] [ ] reduce_table ( ) { return _reduce_table ; }
4036	public static String millisecondsToString ( long milliseconds , SimpleDateFormat dateFormat ) { return dateFormat . format ( new Date ( milliseconds ) ) ; }
4040	public static void print ( Object x ) { out . print ( x ) ; out . flush ( ) ; }
4051	public void addHeaderView ( @ NonNull View view ) { mNavigationView . addHeaderView ( view ) ; }
4088	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
4122	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonTotem_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
4123	public GroupsGetMembersQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
4126	public UnrevealBuilder to ( final View toView ) { this . mToView = toView ; return this ; }
4152	public boolean isComponentGroupPresent ( String groupName ) { return getComponentGroupNames ( ) . contains ( groupName ) ; }
4163	public void notSee ( VisibleObject object , boolean isOutOfRange ) { }
4217	public Builder meanColumns ( String ... columns ) { return add ( ReduceOp . Mean , columns ) ; }
4219	public int compare ( File file1 , File file2 ) { return caseSensitivity . checkCompareTo ( file1 . getPath ( ) , file2 . getPath ( ) ) ; }
4236	public boolean viable ( ) { return ( mWidgetArea + mGapArea ) / ( float ) mGroupArea > . _NUM ; }
4243	@ Override public IntegerDistribution makeDistribution ( ) { return new BinomialDistribution ( _NUM , _NUM . _NUM ) ; }
4246	public static String returnDateInPredefinedFormat ( ) { return new SimpleDateFormat ( AppScanConstants . DATE_FORMAT ) . format ( new Date ( ) ) ; }
4251	public static boolean swordSimilar ( ItemStack a , ItemStack b ) { if ( a == _NULL || b == _NULL ) { return a == b ; } if ( a . getItem ( ) != b . getItem ( ) ) return _BOOL ; if ( a . getItem ( ) . isDamageable ( ) ) return _BOOL ; return a . getItemDamage ( ) == b . getItemDamage ( ) ; }
4255	@ Override protected void checkVectorDimensions ( int n ) throws MathIllegalArgumentException { if ( data . length != n ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH , data . length , n ) ; } }
4260	private static String timeApprox ( int hour , int min ) { int mm ; mm = min % _NUM ; if ( ( mm == _NUM ) || ( mm == _NUM ) ) { return _CHAR exactly _CHAR ; } else if ( mm == _NUM ) { return _CHAR just after _CHAR ; } else if ( mm == _NUM ) { return _CHAR a little after _CHAR ; } else { return _CHAR almost _CHAR ; } }
4317	public ShrExpr newShrExpr ( Value op1 , Value op2 ) { return new GShrExpr ( op1 , op2 ) ; }
4325	public double compute ( MathArrays . Function f ) { return f . evaluate ( internalArray , startIndex , numElements ) ; }
4359	public AssignStmt newAssignStmt ( Value variable , Value rvalue ) { return new JAssignStmt ( variable , rvalue ) ; }
4360	public FriendsAddListQuery userIds ( List < Integer > value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
4361	public Predicate pred ( ) { return pred ; }
4388	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
4389	public boolean isSelected ( @ NotNull NlComponent component ) { return mySelection . contains ( component ) ; }
4405	private javax . ws . rs . core . Response buildErrorResponse ( ResponseException responseException ) { return RequestHandlerUtils . makeErrorResponse ( responseException . getStatusCode ( ) , responseException . getReason ( ) , responseException . getDescription ( ) , responseException . getDruidQuery ( ) , writer ) ; }
4409	public void cancel ( Account account , OCFile file ) { cancel ( account . name , file . getRemotePath ( ) ) ; }
4414	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_MAGIC_MY ( String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster ) ; }
4431	private boolean isInterfaceAllowed ( NetworkInterface ni ) throws SocketException { return ! ni . isLoopback ( ) && ! ni . isPointToPoint ( ) && ! ni . isVirtual ( ) && ni . isUp ( ) ; }
4439	public GroupsEditQuery marketContact ( Integer value ) { return unsafeParam ( _CHAR market_contact _CHAR , value ) ; }
4442	public RemExpr newRemExpr ( Value op1 , Value op2 ) { return new JRemExpr ( op1 , op2 ) ; }
4456	@ BeforeClass public void init ( ) { userName = appProperties . getProperty ( _CHAR user - name _CHAR ) ; initialExperiment = ExperimentFactory . createCompleteExperiment ( ) ; completeExperiment = ExperimentFactory . createCompleteExperiment ( ) ; personalizationExperiment = ExperimentFactory . createCompleteExperiment ( ) ; }
4465	public void forEach ( TriConsumer < Integer , K , V > action ) { Objects . requireNonNull ( action ) ; forEach ( _NULL ) ; }
4480	public void addItemToSell ( int itemObjId , TradePSItem tradeItem ) { items . put ( itemObjId , tradeItem ) ; }
4484	public boolean contains ( long val ) { return index ( val ) >= _NUM ; }
4497	public static boolean isSupplemental ( int c ) { return ( c >= _NUM && c <= _NUM ) ; }
4523	public static double distance ( S2Point p1 , S2Point p2 ) { return Vector3D . angle ( p1 . vector , p2 . vector ) ; }
4530	public void enableDragItem ( @ NonNull ItemTouchHelper itemTouchHelper , int toggleViewId , boolean dragOnLongPress ) { itemDragEnabled = _BOOL ; mItemTouchHelper = itemTouchHelper ; setToggleViewId ( toggleViewId ) ; setToggleDragOnLongPress ( dragOnLongPress ) ; }
4560	public boolean start ( String file ) { boolean ok = _BOOL ; try { out = new BufferedOutputStream ( new FileOutputStream ( file ) ) ; ok = start ( out ) ; closeStream = _BOOL ; } catch ( IOException e ) { ok = _BOOL ; } return started = ok ; }
4571	public UshrExpr newUshrExpr ( Value op1 , Value op2 ) { return new JUshrExpr ( op1 , op2 ) ; }
4589	public void entity ( String name , int value ) { theEntities . put ( name , value ) ; }
4634	public void rectValueToPixelHorizontal ( RectF r ) { mMatrixValueToPx . mapRect ( r ) ; mViewPortHandler . getMatrixTouch ( ) . mapRect ( r ) ; mMatrixOffset . mapRect ( r ) ; }
4650	void renamedElement ( Element oldEl , Element newEl ) { }
4661	public boolean isVerbose ( ) { return verbose ; }
4677	private void findMatchesInContexts ( List < NumberContext > contexts , boolean isValid , boolean isPossible ) { String region = RegionCode . US ; String number = _CHAR _NUM - _NUM - _NUM _CHAR ; findMatchesInContexts ( contexts , isValid , isPossible , region , number ) ; }
4688	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
4698	public static LSOutput createLSOutput ( DOMImplementationLS impl , OutputStream os , String encoding ) { LSOutput out = impl . createLSOutput ( ) ; if ( os != _NULL ) { out . setByteStream ( os ) ; } if ( encoding != _NULL ) { out . setEncoding ( encoding ) ; } return out ; }
4704	public void reset ( ) { this . fBuffer . setLength ( _NUM ) ; }
4745	@ Override public FDistribution makeDistribution ( ) { return new FDistribution ( _NUM . _NUM , _NUM . _NUM ) ; }
4747	static void updateFileListener ( @ NotNull Project project ) { InstantRunManager manager = get ( project ) ; manager . myFileChangeListener . setEnabled ( InstantRunSettings . isInstantRunEnabled ( ) ) ; }
4762	public boolean isTotal ( ) { return operandType != _NULL && operandType . equals ( TYPE_TOTAL ) ; }
4780	@ Override public V remove ( Object obj ) { throw new UnsupportedOperationException ( ) ; }
4868	public static void o ( Z [ ] a ) { o ( a , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
4888	@ Override protected void onSetInitialValue ( boolean restorePersistedValue , Object defaultValue ) { setTime ( restorePersistedValue ? getPersistedInt ( mTime ) : ( int ) defaultValue ) ; }
4920	public static void rollback ( ) throws GenericTransactionException { rollback ( _NULL ) ; }
4947	public static SM_SYSTEM_MESSAGE STR_FORCE_BAN_HIM ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
4949	public boolean isMapEntry ( ) { return getProto ( ) . getOptions ( ) . getMapEntry ( ) ; }
4963	public Zmat bq ( Zmat B ) throws JampackException { if ( B . nrow != ncol ) { throw new JampackException ( _CHAR Inconsistent dimensions . '' ) ; } return ( H . o ( qhb ( H . o ( B ) ) ) ) ; }
4964	private String toUrl ( String testFile ) throws MalformedURLException { return new File ( TestUtil . TEST_DATA_FOLDER + _CHAR pac _CHAR , testFile ) . toURI ( ) . toURL ( ) . toString ( ) ; }
4998	public static int dip2px ( Context context , float dpValue ) { return ( int ) ( dpValue * getDensity ( context ) + _NUM . _NUM ) ; }
5078	@ Override public ChiSquaredDistribution makeDistribution ( ) { return new ChiSquaredDistribution ( _NUM . _NUM ) ; }
5079	public final boolean isExternal ( ) { return fCurrentEntity . isExternal ( ) ; }
5085	private static int nextPowerOfTwo ( final int i ) { return Integer . highestOneBit ( i ) << _NUM ; }
5102	@ Deprecated public static Map < String , Object > filterServiceContext ( DispatchContext dctx , String serviceName , Map < String , ? extends Object > context ) throws GenericServiceException { return dctx . makeValidContext ( serviceName , _CHAR IN _CHAR , context ) ; }
5108	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
5141	public Builder color ( String color ) { this . color = color ; return this ; }
5149	protected PhotosReportQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
5175	private Properties readSettings ( ) throws ProxyException { try { return this . settingsParser . parseSettings ( ) ; } catch ( IOException e ) { Logger . log ( getClass ( ) , LogLevel . ERROR , _CHAR Ca n _CHAR_CHAR , e ) ; throw new ProxyException ( e ) ; } }
5177	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
5192	public Properties readSettings ( ) { try { String pacScriptUrl = detectScriptUrlPerDHCP ( ) ; if ( pacScriptUrl == _NULL ) { pacScriptUrl = detectScriptUrlPerDNS ( ) ; } if ( pacScriptUrl == _NULL ) { return _NULL ; } Properties result = new Properties ( ) ; result . setProperty ( _CHAR url _CHAR , pacScriptUrl ) ; return result ; } catch ( IOException e ) { return new Properties ( ) ; } }
5208	public void onScrollToClose ( ) { }
5286	public static Class < ? > loadClass ( String className ) throws ClassNotFoundException { return loadClass ( className , _NULL ) ; }
5292	public AndExpr newAndExpr ( Value op1 , Value op2 ) { return new GAndExpr ( op1 , op2 ) ; }
5323	boolean isSterile ( ) { if ( ( access_flags & ACC_PUBLIC ) != _NUM && ( access_flags & ACC_FINAL ) == _NUM ) return _BOOL ; return _BOOL ; }
5348	public String end_subgraph ( ) { return _CHAR } _CHAR ; }
5378	void beginStartElement ( Augmentations elementAugs , XMLAttributes attributes ) { fInStartElement = _BOOL ; fElementAugs = elementAugs ; fAttributes = attributes ; }
5386	public static boolean isFifoGroupingPoll ( int mod ) { return Modifiers . contains ( mod , FIFO_GROUPING_POLL ) ; }
5390	public boolean isImmutable ( ) { return _BOOL ; }
5414	public RemExpr newRemExpr ( Value op1 , Value op2 ) { return new GRemExpr ( op1 , op2 ) ; }
5451	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeBoostSkillAttack_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
5460	private static short rangeCheck ( long value ) throws NumberFormatException { if ( value < MIN_VALUE || value > MAX_VALUE ) { throw new NumberFormatException ( _CHAR Value is out of range : _CHAR + value ) ; } return ( short ) value ; }
5466	public final void addValue ( final FilteredDataTagValue pValue ) { this . values . add ( pValue ) ; }
5469	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_OPTION_ALL_OPTION_REMOVED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5473	@ Override public void addDataTag ( final SourceDataTag sourceDataTag ) { sourceDataTags . put ( sourceDataTag . getId ( ) , sourceDataTag ) ; }
5513	public VideoPutTagQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
5514	static int compact ( @ JobConstraint int [ ] constraints ) { int result = _NUM ; for ( int c : constraints ) { result |= c ; } return result ; }
5599	@ Override public boolean hasNext ( ) { return hasNext ; }
5614	private void calculateSun ( int x ) { LightUtils . calculateChunkLightDown ( chunkManager , x + ( startX * CHUNK_SIZE ) , highestBlocks [ x ] + ( startY * CHUNK_SIZE ) , _NUM + BlockManager . getBlock ( blocks [ x ] [ highestBlocks [ x ] ] ) . getLightBlockingAmount ( ) ) ; }
5636	public void execute ( Runnable runnable ) throws IllegalStateException { if ( runObj != _NULL ) throw new IllegalStateException ( _CHAR Can not execute PoolableThread that _CHAR + _CHAR is busy _CHAR ) ; synchronized ( working ) { if ( runObj != _NULL ) throw new IllegalStateException ( _CHAR Can not execute PoolableThread _CHAR + _CHAR that is busy _CHAR ) ; runObj = runnable ; working . notifyAll ( ) ; } }
5654	public boolean routeExists ( String to ) { RoutesMap routesMap = forwardTable . get ( to ) ; if ( routesMap == _NULL ) { return _BOOL ; } return ( routesMap . size ( ) > _NUM ) ; }
5659	@ Override public void start ( ) { started = _BOOL ; }
5667	protected WallReportPostQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
5676	public ConsoleWriter print ( ) { return println ( _NUM ) ; }
5712	public void notifyPanelTouched ( ) { getOverlayPanelContent ( ) . notifyPanelTouched ( ) ; }
5716	public IfStmt newIfStmt ( Value condition , Unit target ) { return new JIfStmt ( condition , target ) ; }
5722	public void resetColor ( ) { if ( token . maxEv ) { setBackgroundColor ( maxEvColor ) ; } else { setBackgroundColor ( normalBackgroundColor ) ; } setTextColor ( textColor ) ; }
5814	@ Override public IntegerDistribution makeDistribution ( ) { return new ZipfDistribution ( _NUM , _NUM ) ; }
5841	public static Complex valueOf ( double realPart , double imaginaryPart ) { if ( Double . isNaN ( realPart ) || Double . isNaN ( imaginaryPart ) ) { return NaN ; } return new Complex ( realPart , imaginaryPart ) ; }
5850	private void copyIn ( final T [ ] [ ] in ) throws MathIllegalArgumentException , NullArgumentException { setSubMatrix ( in , _NUM , _NUM ) ; }
5873	@ Override public void onConnectionFailed ( @ NonNull ConnectionResult connectionResult ) { Log . i ( TAG , _CHAR onConnectionFailed : _CHAR + connectionResult . getErrorMessage ( ) ) ; if ( connectionResult . getResolution ( ) != _NULL ) { } }
5907	@ Override public Constant evaluate ( Record rec ) { return rec . getVal ( fldName ) ; }
5915	@ Override public synchronized CompletableFuture < Void > disconnect ( ) { CompletableFuture < Void > disconnectFuture = new CompletableFuture < > ( ) ; isFenced . set ( _BOOL ) ; ( dispatcher != _NULL ? dispatcher . disconnect ( ) : CompletableFuture . completedFuture ( _NULL ) ) . thenCompose ( _NULL ) . thenRun ( _NULL ) . exceptionally ( _NULL ) ; return disconnectFuture ; }
5934	private < T > T send ( String method , @ Nullable Object entity ) { try { if ( entity == _NULL ) { builder ( ) . method ( method ) ; } else { builder ( ) . method ( method , entity ) ; } return _NULL ; } catch ( UniformInterfaceException e ) { throw asEmoClientException ( e ) ; } }
5987	public void write ( int b ) { ensureCapacity ( _NUM ) ; _buffer [ _count ++ ] = ( byte ) b ; }
6008	public AudioGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
6022	public void removeFooter ( ) { setFooter ( _NULL ) ; }
6038	public PhotosReorderAlbumsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
6044	public static boolean isIgnorePartialFailure ( int mod ) { return Modifiers . contains ( mod , IGNORE_PARTIAL_FAILURE ) ; }
6065	public void rectValueToPixel ( RectF r , float phaseY ) { r . top *= phaseY ; r . bottom *= phaseY ; mMatrixValueToPx . mapRect ( r ) ; mViewPortHandler . getMatrixTouch ( ) . mapRect ( r ) ; mMatrixOffset . mapRect ( r ) ; }
6068	public void addLast ( E u ) { innerChain . addLast ( u ) ; }
6077	Type toInt ( Type type ) { type . apply ( this ) ; return result ; }
6118	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonServant_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
6165	private void replicateAndfreeCacheContextTxn ( Context context , ServerTransaction transaction ) { try { replicateAndfreeCache ( context ) ; } catch ( RuntimeException ex ) { if ( _logger . isLoggable ( Level . SEVERE ) ) { _logger . log ( Level . SEVERE , _CHAR Failed to perform sync - replication on transactionId : _CHAR + transaction , ex ) ; } } }
6179	public boolean hasImageSet ( ) { return ! StringUtils . contains ( currentScope . getAttribute ( HtmlTags . Attributes . CLASS ) , _CHAR cq - upload - hint _CHAR ) ; }
6194	public boolean declaresMethodByName ( String name ) { checkLevel ( SIGNATURES ) ; for ( SootMethod method : methodList ) { if ( method . getName ( ) . equals ( name ) ) return _BOOL ; } return _BOOL ; }
6315	public Properties readSettings ( ) { Properties result = new Properties ( ) ; result . setProperty ( this . httpEnv , this . httpProxy ) ; result . setProperty ( this . httpsEnv , this . httpsProxy ) ; result . setProperty ( this . ftpEnv , this . ftpProxy ) ; result . setProperty ( this . noProxyEnv , this . noProxy ) ; return result ; }
6342	public Plugin [ ] loadPlugins ( ) { return this . pluginManager . loadPlugins ( pluginFolder ) ; }
6348	public static boolean isEvictOnly ( int mod ) { return Modifiers . contains ( mod , EVICT_ONLY ) ; }
6401	public void resetTemplates ( int instanceId ) { HashMap < SpawnTemplate , Boolean > states = poolUsedTemplates . get ( instanceId ) ; if ( states == _NULL ) { return ; } super . writeLock ( ) ; try { for ( SpawnTemplate template : states . keySet ( ) ) { states . put ( template , _BOOL ) ; } } finally { super . writeUnlock ( ) ; } }
6406	public boolean equivTo ( Object o ) { if ( o instanceof DNotExpr ) { return getOpBox ( ) . getValue ( ) . equivTo ( ( ( DNotExpr ) o ) . getOpBox ( ) . getValue ( ) ) ; } return _BOOL ; }
6408	public boolean isGoogleSigned ( PackageManager pm , String packageName ) { return _BOOL ; }
6420	private boolean isProxyShared ( Properties settings ) { return Boolean . TRUE . toString ( ) . equals ( settings . getProperty ( _CHAR network . proxy . share_proxy_settings _CHAR , _CHAR _BOOL _CHAR ) . toLowerCase ( ) ) ; }
6446	public static boolean isNativePageUrl ( String url , boolean isIncognito ) { return nativePageType ( url , _NULL , isIncognito ) != NativePageType . NONE ; }
6448	public static double averageArea ( int level ) { return S2Projections . AVG_AREA . getValue ( level ) ; }
6466	public int [ ] toNativeArray ( ) { return toNativeArray ( _NUM , _pos ) ; }
6482	public static short readShort ( DataInputStream dis , boolean isBigEndian ) throws IOException { if ( ! isBigEndian ) { return readLittleEndianShort ( dis ) ; } else { return dis . readShort ( ) ; } }
6500	@ Override protected XMLDTDValidator createDTDValidator ( ) { return new XMLNSDTDValidator ( ) ; }
6504	public void addHandler ( String columnName , SQLDataHandler handler ) { if ( m_overrides == _NULL ) m_overrides = new HashMap ( _NUM ) ; m_overrides . put ( columnName , handler ) ; }
6506	protected VideoReportCommentQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
6542	public void logStatisticsAsTableExecutor ( ) { String tableInfo = collectExecutorStatistics ( ) ; if ( _NULL != tableInfo ) { LOGGER . statistic ( tableInfo ) ; } }
6565	public String upload_appender_file1 ( String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { String parts [ ] = this . upload_appender_file ( local_filename , file_ext_name , meta_list ) ; if ( parts != _NULL ) { return parts [ _NUM ] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts [ _NUM ] ; } else { return _NULL ; } }
6566	public D addFunction ( PathEdge < N , D > edge ) { return nonEmptyReverseLookup . putIfAbsent ( edge , edge . factAtTarget ( ) ) ; }
6569	public boolean isIncludeGlobalWorld ( ) { return this . includeGlobalWorld ; }
6595	@ Override public final String toString ( ) { return HexTool . toString ( baos . toByteArray ( ) ) ; }
6597	public void treeCollapsed ( TreeExpansionEvent event ) { }
6627	public static FramePath parsePath ( String path ) { return new FramePath ( ) . addFrame ( path ) ; }
6657	public static boolean createAndLaunchWorld ( WorldSettings worldsettings , boolean isTemporary ) { String s = getNewSaveFileLocation ( isTemporary ) ; Minecraft . getMinecraft ( ) . launchIntegratedServer ( s , s , worldsettings ) ; cleanupTemporaryWorlds ( s ) ; return _BOOL ; }
6666	public boolean separates ( BitSet H ) { return A . intersects ( H ) && B . intersects ( H ) ; }
6669	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
6675	public boolean isDynamic ( ) { return this . mass . getType ( ) != MassType . INFINITE ; }
6680	public boolean hasResourceParameter ( ResourceContextParameters resourceParameter , ContextInfo contextInfo ) { return hasTemplateParameter ( new TemplateParameter ( TemplateParameterContext . RESOURCE , resourceParameter . getName ( ) ) , contextInfo ) ; }
6706	public void addCondition ( FallbackCondition condition ) { this . fallbackConditions . add ( condition ) ; Collections . sort ( this . fallbackConditions ) ; }
6737	private static UByte valueOfUnchecked ( short value ) throws NumberFormatException { return VALUES [ value & MAX_VALUE ] ; }
6738	private static String digits ( long val , int digits ) { long hi = _NUM << ( digits * _NUM ) ; return Long . toHexString ( hi | ( val & ( hi - _NUM ) ) ) . substring ( _NUM ) ; }
6759	private String nextHost ( ) { currentHost ++ ; if ( currentHost == hostsArray . length ) { currentHost = _NUM ; } return hostsArray [ currentHost ] ; }
6764	public boolean isQuiet ( ) { return quiet ; }
6794	public static SM_SYSTEM_MESSAGE STR_EXTEND_CHAR_WAREHOUSE_CANT_EXTEND_MORE_DUE_TO_MAXIMUM_EXTEND_LEVEL_BY_THIS_NPC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
6808	private boolean isDirect ( final BSPTree < Euclidean1D > node ) { return ( ( OrientedPoint ) node . getCut ( ) . getHyperplane ( ) ) . isDirect ( ) ; }
6855	@ Override public ExponentialDistribution makeDistribution ( ) { return new ExponentialDistribution ( _NUM . _NUM ) ; }
6858	private boolean isAndroidNamespace ( String ns ) { if ( ns == _NULL ) return _BOOL ; ns = ns . trim ( ) ; if ( ns . startsWith ( _CHAR * _CHAR ) ) ns = ns . substring ( _NUM ) ; if ( ! ns . equals ( _CHAR http : // schemas . android . com / apk / res / android '' ) ) return false ; return true ; }
6861	public void acquireThreadReadLock ( ) { _readLocks [ getSegmentIdByCurrentThreadId ( ) ] . lock ( ) ; }
6867	public ASBSessionCursor queryASBSessions ( ) { return mHelper . queryASBSessions ( ) ; }
6872	public static SM_SYSTEM_MESSAGE STR_MSG_PAY_ACCOUNT_OTHER ( String value0 , long highestValue ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , highestValue ) ; }
6875	public void shouldShowFullBadgeText ( boolean shouldShowBadgeWithNinePlus ) { this . shouldShowBadgeWithNinePlus = shouldShowBadgeWithNinePlus ; }
6885	public VideoCreateCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
6920	public void selectAll ( ) { selectAll ( - _NUM ) ; }
6937	public Value max ( Value num ) { return new AggregationFunction ( num , AggregationType . MAXIMUM ) ; }
6938	public static int countOccurrencesOf ( String s , char c ) { if ( s == _NULL || s . length ( ) == _NUM ) return _NUM ; char [ ] chars = s . toCharArray ( ) ; int count = _NUM ; for ( char aChar : chars ) if ( aChar == c ) count ++ ; return count ; }
6940	public void onResume ( boolean multitasking ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { plugin . onResume ( multitasking ) ; } } }
6960	public void killLocal ( Local l ) { int base = types . size ( ) * locals . indexOf ( l ) ; for ( int i = _NUM ; i < types . size ( ) ; i ++ ) { clear ( i + base ) ; } }
6969	private static void push ( double [ ] vals , double val ) { for ( int i = vals . length - _NUM ; i > _NUM ; i -- ) { vals [ i ] = vals [ i - _NUM ] ; } vals [ _NUM ] = val ; }
7016	@ Override public void startExecuting ( ) { if ( entity . getGrowingAge ( ) < _NUM && ! entity . isInLove ( ) ) { if ( entity instanceof EntityWolf ) { if ( ( ( EntityWolf ) entity ) . isSitting ( ) ) return ; } this . entity . getNavigator ( ) . tryMoveToXYZ ( targetItem . posX , targetItem . posY , targetItem . posZ , _NUM . _NUM ) ; } }
7021	public boolean isEmpty ( ) { return getRelativePeriods ( ) . isEmpty ( ) ; }
7022	public Builder fillColor ( String fillColor ) { this . fillColor = fillColor ; return this ; }
7086	public PhotosGetCommentsQueryWithExtended ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
7095	public static S1Interval fromPoint ( double p ) { if ( p == - S2 . M_PI ) { p = S2 . M_PI ; } return new S1Interval ( p , p , _BOOL ) ; }
7114	public static < T > Function < String , T > jsonMapper ( Class < T > clazz ) { return _NULL ; }
7126	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_OPTION_SUCCEED ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
7136	private void notifyListeners ( final Tag tag , final List < Alarm > alarmList ) { for ( AlarmAggregatorListener listener : listeners ) { try { listener . notifyOnUpdate ( ( Tag ) tag . clone ( ) , alarmList ) ; } catch ( CloneNotSupportedException e ) { LOGGER . error ( _CHAR Unexpected exception caught : clone should be implemented for this class ! '' + '' Alarm & tag listener was not notified : '' + listener . getClass ( ) . getSimpleName ( ) ) ; } } }
7148	private void onInvalidTapDetectionTimeout ( ) { mHandler . handleInvalidTap ( ) ; mIsWaitingForInvalidTapDetection = _BOOL ; }
7154	public PhotosRemoveTagQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
7164	public static boolean isDUCDoc ( String sDocName ) { return ( new File ( sDocName ) . getName ( ) . split ( _CHAR [ . ] _CHAR ) . length == _NUM ) ; }
7172	protected void saveLanguage ( String language ) { fLanguageScope . push ( fDepth ) ; fLanguageStack . push ( language ) ; }
7181	public int modify_file ( String group_name , String appender_filename , long file_offset , byte [ ] file_buff , int buffer_offset , int buffer_length ) throws IOException , MyException { return this . do_modify_file ( group_name , appender_filename , file_offset , buffer_length , new UploadBuff ( file_buff , buffer_offset , buffer_length ) ) ; }
7195	public boolean isPublic ( ) { return Modifier . isPublic ( this . getModifiers ( ) ) ; }
7237	@ Override public double [ ] makeInverseCumulativeTestValues ( ) { double [ ] points = makeCumulativeTestPoints ( ) ; double [ ] points2 = new double [ points . length - _NUM ] ; System . arraycopy ( points , _NUM , points2 , _NUM , points2 . length ) ; return points2 ; }
7241	@ Override public int nodeSize ( ) { return listOfKeys . size ( ) ; }
7264	@ Override public void write ( byte [ ] b ) throws IOException { write ( b , _NUM , b . length ) ; }
7269	public static float convertPixelToDp ( Context context , float px ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; return px / ( metrics . densityDpi / _NUM ) ; }
7271	public Properties readSettings ( ) { try { String pacScriptUrl = detectScriptUrlPerDHCP ( ) ; if ( pacScriptUrl == _NULL ) { pacScriptUrl = detectScriptUrlPerDNS ( ) ; } if ( pacScriptUrl == _NULL ) { return _NULL ; } Properties result = new Properties ( ) ; result . setProperty ( _CHAR url _CHAR , pacScriptUrl ) ; return result ; } catch ( IOException e ) { return new Properties ( ) ; } }
7326	public static final int [ ] trim ( int [ ] a , int size ) { if ( a . length == size ) { return a ; } else { int [ ] b = new int [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , size ) ; return b ; } }
7327	public static boolean inbetween ( int x1 , int y1 , int x2 , int y2 , int width , int height ) { return x2 >= x1 && y2 >= y1 && x2 < x1 + width && y2 < y1 + height ; }
7366	public static ExpectedCondition < Boolean > expandSection ( final WebElement section ) { return _NULL ; }
7371	public static boolean isUiThread ( ) { return Thread . currentThread ( ) . getId ( ) == Looper . getMainLooper ( ) . getThread ( ) . getId ( ) ; }
7393	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_INSTANCE_COOL_TIME_REMAIN ( String worldname1 , String durationtime0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname1 , durationtime0 ) ; }
7394	public double slopeStdErr ( ) { return Math . sqrt ( svar1 ) ; }
7470	@ Override protected void doRescheduleTask ( Object task ) { this . taskExecutor . execute ( ( Runnable ) task ) ; }
7472	public static SM_SYSTEM_MESSAGE STR_ARTIFACT_LOSE_FORT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
7487	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
7502	public String toString ( ) { String s = _CHAR _CHAR ; s += String . format ( _CHAR % . _NUM N + % . _NUM _CHAR , slope ( ) , intercept ( ) ) ; return s + _CHAR ( R ^ _NUM = _CHAR + String . format ( _CHAR % . _NUM _CHAR , R2 ( ) ) + _CHAR ) _CHAR ; }
7521	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
7556	public V valueAt ( int index ) { return ( V ) mArray [ ( index << _NUM ) + _NUM ] ; }
7560	public < T > T recall ( Path path , Class < T > type ) throws IOException { try ( InputStream is = hadoopFileSystem . open ( path ) ) { return serializer . read ( is , type ) ; } }
7573	public EmailBuilder withHeaders ( Map < String , String > headers ) { this . headers . putAll ( headers ) ; return this ; }
7590	private boolean hasProxySettings ( Properties settings ) { String proxyHost = settings . getProperty ( _CHAR org . gnome . system . proxy . http host _CHAR , _NULL ) ; return proxyHost != _NULL && proxyHost . length ( ) > _NUM ; }
7657	@ Override public FieldAccessorPostAggregation withName ( String name ) { throw new IllegalStateException ( _CHAR Field Access does n _CHAR_CHAR ) ; }
7667	private Map < Any2 < Integer , String > , String > resolve_template_args_ ( Matcher matcher ) { return template_ . getArguments ( ) . stream ( ) . collect ( Collectors . toMap ( _NULL , _NULL ) ) ; }
7744	private void commitForcedTransaction ( Query query , QuerySession session ) throws UnknownTransactionException , CannotCommitException , RemoteException { if ( session . isAutoCommit ( ) && query . isForceUnderTransaction ( ) ) { session . getTransaction ( ) . commit ( ) ; session . setSelectedForUpdate ( _NULL ) ; session . setTransaction ( _NULL ) ; } }
7767	public double distance ( double x , double y ) { double dx = this . x - x ; double dy = this . y - y ; return Math . sqrt ( dx * dx + dy * dy ) ; }
7784	private void fillBuffer ( ) throws CharacterCodingException { this . bbuf . compact ( ) ; CoderResult result = this . encoder . encode ( this . cbuf , this . bbuf , _BOOL ) ; if ( result . isError ( ) ) { result . throwException ( ) ; } this . bbuf . flip ( ) ; }
7785	protected void addPageLink ( PaginationLink link , int pageNumber ) { UriBuilder uriBuilder = uriInfo . getRequestUriBuilder ( ) . replaceQueryParam ( _CHAR page _CHAR , pageNumber ) ; builder . header ( HttpHeaders . LINK , Link . fromUriBuilder ( uriBuilder ) . rel ( link . getHeaderName ( ) ) . build ( ) ) ; }
7786	public static boolean isNegativeVInt ( byte value ) { return value < - _NUM || ( value >= - _NUM && value < _NUM ) ; }
7835	public void reset ( ) { fNoNSGrammar = _NULL ; fGrammarRegistry . clear ( ) ; }
7852	private boolean isSubsumed ( String selector , Iterable < String > others ) { for ( String other : others ) { if ( subsumes ( other , selector ) ) { return _BOOL ; } } return _BOOL ; }
7854	public Builder displayBottomNavigation ( boolean displayBottomNavigationBar ) { this . displayBottomNavigation = displayBottomNavigationBar ; return this ; }
7865	public void startTrackingOrientation ( ) { sensorManager . registerListener ( phoneOrientationListener , orientationSensor , SensorManager . SENSOR_DELAY_GAME ) ; }
7868	static Matrix createMatrix ( Border border , Bitmap bitmap , float extraSize ) { return createMatrix ( border , bitmap . getWidth ( ) , bitmap . getHeight ( ) , extraSize ) ; }
7899	public ArrayRealVector append ( ArrayRealVector v ) { return new ArrayRealVector ( this , v ) ; }
7941	public void readBookiesBlocking ( ) throws InterruptedException , KeeperException { bookieWatcher . readBookiesBlocking ( ) ; }
7969	public short [ ] toNativeArray ( int offset , int len ) { short [ ] rv = new short [ len ] ; toNativeArray ( rv , offset , len ) ; return rv ; }
7978	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String prefix : this . prefixes ) { if ( caseSensitivity . checkStartsWith ( name , prefix ) ) { return _BOOL ; } } return _BOOL ; }
7982	public static IQueryProcessor newLocalInstance ( IJSpace clusterProxy , IJSpace spaceProxy , Properties connectionProperties , SecurityInterceptor securityInterceptor ) throws Exception { Properties embeddedProperties = loadEmbeddedPropertiesFile ( ) ; Properties mergedProps = mergeProperties ( connectionProperties , embeddedProperties ) ; return new QueryProcessor ( clusterProxy , spaceProxy , mergedProps , securityInterceptor ) ; }
8001	private void checkMatrixDimensions ( Matrix B ) { if ( B . m != m || B . n != n ) { throw new IllegalArgumentException ( _CHAR Matrix dimensions must agree . '' ) ; } }
8012	public PhotosReorderPhotosQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
8051	@ VisibleForTesting static boolean shouldOpenAfterDownload ( DownloadInfo downloadInfo ) { String type = downloadInfo . getMimeType ( ) ; return downloadInfo . hasUserGesture ( ) && ! isAttachment ( downloadInfo . getContentDisposition ( ) ) && MIME_TYPES_TO_OPEN . contains ( type ) ; }
8067	public void rectValueToPixelHorizontal ( RectF r ) { mMatrixValueToPx . mapRect ( r ) ; mViewPortHandler . getMatrixTouch ( ) . mapRect ( r ) ; mMatrixOffset . mapRect ( r ) ; }
8068	public static SM_SYSTEM_MESSAGE STR_CHAT_DISABLED_FOR ( String value0m ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0m ) ; }
8078	public void success ( ) { sendPluginResult ( new PluginResult ( PluginResult . Status . OK ) ) ; }
8104	public boolean contains ( short val ) { return index ( val ) >= _NUM ; }
8124	public boolean contains ( T obj ) { if ( ! map . contains ( obj ) ) return _BOOL ; return bits . get ( map . getInt ( obj ) ) ; }
8146	public PointsToSet reachingObjects ( Local l ) { Type t = l . getType ( ) ; if ( t instanceof RefType ) return FullObjectSet . v ( ( RefType ) t ) ; return FullObjectSet . v ( ) ; }
8162	public static boolean isAndroidProjectWithoutGradleFacet ( @ NotNull JpsProject project ) { return isAndroidProjectWithoutGradleFacet ( project . getModules ( ) ) ; }
8163	public String [ ] upload_appender_file ( byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_appender_file ( group_name , file_buff , _NUM , file_buff . length , file_ext_name , meta_list ) ; }
8173	@ ColorInt public int extractPrimaryDarkColorFrom ( Context context ) { return extractIntAttribute ( context , PRIMARY_DARK ) ; }
8183	public T remove ( int position ) { T removed = items . remove ( position ) ; notifyItemRemoved ( position ) ; return removed ; }
8194	public void clear ( ) { if ( mTimer != _NULL ) { mTimer . cancel ( ) ; mTimer = _NULL ; } mHandler . removeMessages ( MARKER_EXPIRED ) ; }
8214	public void rectValueToPixelHorizontal ( RectF r , float phaseY ) { r . left *= phaseY ; r . right *= phaseY ; mMatrixValueToPx . mapRect ( r ) ; mViewPortHandler . getMatrixTouch ( ) . mapRect ( r ) ; mMatrixOffset . mapRect ( r ) ; }
8220	public static String toDateString ( java . util . Date date ) { return toDateString ( date , _CHAR MM / dd / yyyy _CHAR ) ; }
8229	public CardinalityAggregation withDimensions ( Set < Dimension > dimensions ) { return new CardinalityAggregation ( getName ( ) , dimensions , byRow ) ; }
8248	public static < T > MaybeConsumer < T > noop ( ) { return ( MaybeConsumer < T > ) NOOP ; }
8255	@ Override public ASModel createAS ( boolean isNamespaceAware ) { return new ASModelImpl ( isNamespaceAware ) ; }
8281	private boolean isNotUnresponsive ( Proxy proxy ) { Long lastFailTime = this . failedDelayCache . get ( proxy . address ( ) ) ; return retryDelayHasPassedBy ( lastFailTime ) ; }
8295	@ Override public IntegerDistribution makeDistribution ( ) { return new GeometricDistribution ( _NUM . _NUM ) ; }
8307	public static boolean isLabeledAsFailed ( Protos . TaskInfo taskInfo ) { for ( Protos . Label label : taskInfo . getLabels ( ) . getLabelsList ( ) ) { if ( label . getKey ( ) . equals ( PERMANENTLY_FAILED_KEY ) && Boolean . valueOf ( label . getValue ( ) ) ) { return _BOOL ; } } return _BOOL ; }
8339	@ Override public void onCheckedChanged ( CompoundButton switchView , boolean isChecked ) { if ( ! isResumed ( ) ) { return ; } ( ( FileActivity ) getActivity ( ) ) . getFileOperationsHelper ( ) . setUploadPermissionsToShare ( mFile , isChecked ) ; switchView . setOnCheckedChangeListener ( _NULL ) ; switchView . toggle ( ) ; switchView . setOnCheckedChangeListener ( mOnEditPermissionInteractionListener ) ; }
8379	void executeOp ( StreamOp op , boolean success ) { closeLock . readLock ( ) . lock ( ) ; try { if ( StreamStatus . isUnavailable ( status ) ) { op . fail ( new StreamUnavailableException ( _CHAR Stream _CHAR + name + _CHAR is closed . '' ) ) ; return ; } doExecuteOp ( op , success ) ; } finally { closeLock . readLock ( ) . unlock ( ) ; } }
8381	public boolean isNone ( String selectedItem ) { return ( selectedItem . compareTo ( NO_FILL_VALUE ) == _NUM ) ; }
8428	protected void addPageLink ( PaginationLink link , Pagination < ? > pages ) { link . getPage ( pages ) . ifPresent ( _NULL ) ; }
8430	public PhotosGetChatUploadServerQuery cropWidth ( Integer value ) { return unsafeParam ( _CHAR crop_width _CHAR , value ) ; }
8524	public void removeCommunicationListener ( FTPCommunicationListener listener ) { synchronized ( lock ) { communicationListeners . remove ( listener ) ; if ( communication != _NULL ) { communication . removeCommunicationListener ( listener ) ; } } }
8529	protected void initializeStorage ( ISVNRemoteFile file , IProgressMonitor monitor ) throws TeamException { storage = ( ( IResourceVariant ) file ) . getStorage ( monitor ) ; }
8537	public static < T > Aggregate < T , List < T >> list ( ) { return new ListAggregate < > ( ) ; }
8547	public Matrix3f transposeLocal ( ) { float tmp = m01 ; m01 = m10 ; m10 = tmp ; tmp = m02 ; m02 = m20 ; m20 = tmp ; tmp = m12 ; m12 = m21 ; m21 = tmp ; return this ; }
8549	private void distributeValues ( final DataTagValueUpdate dataTagValueUpdate ) throws JMSException { for ( JmsSender jmsSender : jmsSenders ) { try { jmsSender . processValues ( dataTagValueUpdate ) ; } catch ( Exception e ) { LOGGER . error ( _CHAR Unhandled exception caught while sending a collection of source values - the updates will be lost . '' , e ) ; } } dataTagValueUpdate . log ( ) ; }
8556	public int [ ] toNativeArray ( int offset , int len ) { int [ ] rv = new int [ len ] ; toNativeArray ( rv , offset , len ) ; return rv ; }
8566	Node matchNodeOrParent ( Node node ) { if ( fCurrentNode == _NULL ) return _NULL ; for ( Node n = fCurrentNode ; n != fRoot ; n = n . getParentNode ( ) ) { if ( node == n ) return n ; } return _NULL ; }
8595	public void remove ( ) { if ( m_table . removeRow ( m_cur ) ) modify ( ) ; }
8610	public static String formatRateString ( float rate ) { return String . format ( Locale . US , _CHAR % . _NUM _CHAR , rate ) ; }
8613	public static void checkGlError ( String op ) { int error = GLES20 . glGetError ( ) ; if ( error != GLES20 . GL_NO_ERROR ) { String msg = op + _CHAR : glError _NUM _CHAR + Integer . toHexString ( error ) ; Log . e ( TAG , msg ) ; throw new RuntimeException ( msg ) ; } }
8633	public void addAll ( ContextSet contextSet ) { if ( contextSet == _NULL ) { throw new NullPointerException ( _CHAR contextSet _CHAR ) ; } synchronized ( this . contexts ) { this . contexts . addAll ( contextSet . toSet ( ) ) ; } }
8646	public SiteAdminPage open ( ) { return open ( _CHAR _CHAR ) ; }
8683	public String name ( ) { return name ; }
8724	@ NonNull private static String tag ( @ Nullable Class < ? > caller ) { return caller == _NULL ? _CHAR _CHAR : caller . getSimpleName ( ) . replaceAll ( _CHAR \\ $ _CHAR , _CHAR _CHAR ) ; }
8739	@ Override public void monitor ( Object proxy , ServiceID serviceID ) throws Exception { spaceProxy = proxy ; super . monitor ( proxy , serviceID ) ; }
8755	public void close ( ) { closed = _BOOL ; }
8757	public int compare ( File file1 , File file2 ) { return delegate . compare ( file2 , file1 ) ; }
8840	NewProjectDescriptor withName ( @ NotNull String name ) { myName = name ; return this ; }
8860	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelBuff_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
8872	public static WordRelation createWordRelation ( Utterance utterance , TokenToWords tokenToWords ) { Relation relation = utterance . createRelation ( Relation . WORD ) ; return new WordRelation ( relation , tokenToWords ) ; }
8897	public void sort ( final Comparator < ? super T > comparator ) { synchronized ( mLock ) { Collections . sort ( mList , comparator ) ; } notifyDataSetChanged ( ) ; }
8932	public boolean hasProblems ( ) { return hasErrors ( ) || myFidelityWarnings != _NULL ; }
8940	private static void debugPrintln ( String msg ) { if ( DEBUG ) { System . err . println ( _CHAR XERCES : _CHAR + msg ) ; } }
8982	public static ExpressionFactory newExpressionFactory ( ) { return new ExpressionFactoryImpl ( new TreeStore ( new ExtendedBuilder ( ) , new Cache ( _NUM ) ) ) ; }
9001	public static int hash ( double [ ] value ) { return Arrays . hashCode ( value ) ; }
9035	public ShlExpr newShlExpr ( Value op1 , Value op2 ) { return new GShlExpr ( op1 , op2 ) ; }
9062	private static HelpNode fromXml ( InputSource source ) throws ParserConfigurationException , SAXException , IOException { SAXParserFactory factory = SAXParserFactory . newInstance ( ) ; SAXParser parser = factory . newSAXParser ( ) ; HelpReader reader = new HelpReader ( ) ; parser . parse ( source , reader ) ; return reader . root ; }
9070	@ Override public boolean hasFixedPropertiesArray ( ) { return _BOOL ; }
9073	public float [ ] toArray ( float [ ] floats ) { if ( floats == _NULL ) { floats = new float [ _NUM ] ; } floats [ _NUM ] = x ; floats [ _NUM ] = y ; return floats ; }
9074	public static void writeNullablePbsEntryPacketObjectArray ( PbsOutputStream output , Object [ ] objects ) { if ( objects != _NULL ) { output . writeInt ( objects . length ) ; for ( Object entry : objects ) writeNullablePbsEntryPacket ( output , ( PbsEntryPacket ) entry ) ; } else output . writeInt ( - _NUM ) ; }
9078	public String start_graph ( ) { return _CHAR digraph G { _CHAR ; }
9079	public boolean isRmiProtocol ( ) { return StringUtils . equalsIgnoreCase ( getProtocol ( ) , RMI_PROTOCOL ) ; }
9106	public static ValueGetterSpacePredicate < ServerEntry > propertyNotNull ( String propertyName ) { return property ( propertyName , isNotNull ( ) ) ; }
9120	private void writeInt ( String key , int value ) { SharedPreferences . Editor ed = mSharedPreferences . edit ( ) ; ed . putInt ( key , value ) ; ed . apply ( ) ; }
9141	public static Predicate < Integer > greaterThan ( Integer than ) { return _NULL ; }
9182	private void start ( ) { mStarted = _BOOL ; mEnableSessionInvalidationsTimer . resume ( ) ; Intent intent = new Intent ( mContext , InvalidationClientService . class ) ; mContext . startService ( intent ) ; }
9226	public static boolean isSDCardMounted ( ) { return android . os . Environment . getExternalStorageState ( ) . equals ( android . os . Environment . MEDIA_MOUNTED ) ; }
9254	@ Override public String toString ( ) { return _CHAR Reading { _CHAR + _CHAR mDatabaseTag = _CHAR_CHAR\ _CHAR + _CHAR , mTimestampMillis = _CHAR + mTimestampMillis + _CHAR , mValue = _CHAR + mValue + _CHAR ; }
9295	public void parseFileInput ( ) { builder . setDebugMode ( ApplicationManager . getApplication ( ) . isUnitTestMode ( ) ) ; while ( ! builder . eof ( ) ) { if ( matches ( TokenKind . NEWLINE ) ) { continue ; } parseTopLevelStatement ( ) ; } }
9305	public boolean isFinal ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
9317	public Value avg ( Value num ) { return new AggregationFunction ( num , AggregationType . AVERAGE ) ; }
9374	public JsonArray remove ( int index ) { values . remove ( index ) ; return this ; }
9375	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_ATE_FOOD_3 ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
9422	public IntIterator rows ( ) { return m_rows . rows ( ) ; }
9427	public Builder removeAllColumnsExceptFor ( String ... columnNames ) { return transform ( new RemoveAllColumnsExceptForTransform ( columnNames ) ) ; }
9442	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
9450	@ Override public NormalDistribution makeDistribution ( ) { return new NormalDistribution ( _NUM . _NUM , _NUM . _NUM ) ; }
9456	public void train ( String sTrainingText ) { sgOverallGraph . setDataString ( sTrainingText + ( new StringBuffer ( ) . append ( ( char ) StreamTokenizer . TT_EOF ) ) . toString ( ) ) ; clLocator . resetCache ( ) ; getDelimiters ( ) ; }
9465	public WallDeleteQuery delete ( UserActor actor ) { return new WallDeleteQuery ( getClient ( ) , actor ) ; }
9494	public static SM_SYSTEM_MESSAGE STR_FORCE_HE_REJECT_INVITATION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
9507	public static double max ( final double [ ] values ) { double max = values [ _NUM ] ; for ( int i = _NUM ; i < values . length ; i ++ ) { if ( values [ i ] > max ) { max = values [ i ] ; } } return max ; }
9539	public static Cursor query ( ContentResolver cr ) { return cr . query ( CONTENT_URI , PROJECTION , WHERE , WHERE_ARGS , SORT_ORDER ) ; }
9572	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static Object evaluate ( Map < String , ? extends Object > context , String expression , Class expectedType ) { ELContext elContext = new ReadOnlyContext ( context ) ; ValueExpression ve = exprFactory . createValueExpression ( elContext , expression , expectedType ) ; return ve . getValue ( elContext ) ; }
9574	public static void increment ( Calendar c , int field , int val ) { if ( isMultiYear ( field ) ) { c . add ( Calendar . YEAR , - field * val ) ; } else { c . add ( field , val ) ; } }
9616	public static R1Interval fromPoint ( double p ) { return new R1Interval ( p , p ) ; }
9625	public LikesAddQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
9626	public void rootAdded ( ISVNRepositoryLocation root ) { Iterator it = listeners . iterator ( ) ; while ( it . hasNext ( ) ) { IRepositoryListener listener = ( IRepositoryListener ) it . next ( ) ; listener . repositoryAdded ( root ) ; } }
9635	public MetricInstance withDependencyMetricNames ( List < String > dependencyMetricNames ) { return new MetricInstance ( metricName , maker , dependencyMetricNames . toArray ( new String [ dependencyMetricNames . size ( ) ] ) ) ; }
9692	public boolean wantTag ( Tag t ) { return ( t instanceof FieldReadTag ) ; }
9695	public static SM_SYSTEM_MESSAGE STR_SKILL_CANT_CAST ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
9703	private static < T > T makeImmutable ( T nonCollection ) { return nonCollection ; }
9711	public Matrix3f adjoint ( ) { return adjoint ( _NULL ) ; }
9728	public String [ ] parseConfiguration ( URL xmlURL ) throws IOException , SAXException { InputStream is = xmlURL . openStream ( ) ; Document document = _NULL ; try { document = builder . parse ( is ) ; } finally { is . close ( ) ; } return ( parseConfiguration ( document ) ) ; }
9760	public void onStart ( ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { plugin . onStart ( ) ; } } }
9769	public void onMainFrameNavigation ( String url , boolean isFailure ) { }
9773	public SubExpr newSubExpr ( Value op1 , Value op2 ) { return new GSubExpr ( op1 , op2 ) ; }
9774	public static double roundDouble ( double value , int afterDecimalPoint ) { double mask = Math . pow ( _NUM . _NUM , ( double ) afterDecimalPoint ) ; return ( double ) ( Math . round ( value * mask ) ) / mask ; }
9779	public static int dip2px ( Context context , float dpValue ) { return ( int ) ( dpValue * getDensity ( context ) + _NUM . _NUM ) ; }
9809	private String generateChartHtml ( Chart chart , User user ) throws IOException { JFreeChart jFreechart = chartService . getJFreeChart ( chart , new Date ( ) , _NULL , i18nManager . getI18nFormat ( ) , user ) ; return uploadImage ( chart . getUid ( ) , ChartUtils . getChartAsPngByteArray ( jFreechart , _NUM , _NUM ) ) ; }
9825	protected boolean removeCascadedRow ( int row ) { boolean rv = super . removeRow ( row ) ; if ( rv ) ( ( CascadedRowManager ) m_rows ) . remove ( row ) ; return rv ; }
9827	public FriendsAddListQuery userIds ( Integer ... value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
9841	public Builder addColumnInteger ( String name ) { return addColumn ( new IntegerMetaData ( name ) ) ; }
9862	private Object writeReplace ( ) { return new DataTransferObject ( getKey ( ) , getValue ( ) ) ; }
9907	public PlacesSearchQuery search ( UserActor actor , float latitude , float longitude ) { return new PlacesSearchQuery ( getClient ( ) , actor , latitude , longitude ) ; }
9962	private void createInitialTab ( ) { String url = HomepageManager . getHomepageUri ( getApplicationContext ( ) ) ; if ( TextUtils . isEmpty ( url ) ) url = UrlConstants . NTP_URL ; getTabCreator ( _BOOL ) . launchUrl ( url , TabLaunchType . FROM_MENU_OR_OVERVIEW ) ; }
9998	@ Nullable public byte [ ] loadWindowData ( long timeout , TimeUnit unit ) { CaptureByteArrayHandler handler = new CaptureByteArrayHandler ( HandleViewDebug . CHUNK_VURT ) ; try { HandleViewDebug . dumpViewHierarchy ( client , title , _BOOL , _BOOL , handler ) ; } catch ( IOException e ) { return _NULL ; } return handler . getData ( timeout , unit ) ; }
10007	public Collection values ( ) { processQueue ( ) ; return map . values ( ) ; }
10041	public static Snackbar make ( CharSequence text , SnackbarController controller ) { Snackbar s = new Snackbar ( ) ; s . mText = text ; s . mController = controller ; return s ; }
10076	public void error ( JSONObject message ) { sendPluginResult ( new PluginResult ( PluginResult . Status . ERROR , message ) ) ; }
10088	public char nextClean ( ) { for ( ; ; ) { char c = next ( ) ; if ( c == _NUM || c > _CHAR ) { return c ; } } }
10098	@ Override public void showMessage ( String message ) { Snackbar . make ( bgSplash , message , Snackbar . LENGTH_SHORT ) . show ( ) ; }
10153	private BattlePokemonInfo createBattlePokemon ( Pokemon pokemon ) { return BattlePokemonInfo . newBuilder ( ) . setCurrentEnergy ( _NUM ) . setCurrentHealth ( _NUM ) . setPokemonData ( pokemon . getDefaultInstanceForType ( ) ) . build ( ) ; }
10193	public static EnumValue create ( EnumType parent , EnumValueDescriptorProto proto , String path ) { return new EnumValue ( parent , proto , path ) ; }
10208	public void onError ( int taskId , String reason ) { this . transfers . remove ( taskId ) ; textLog . info ( _CHAR taskId : _CHAR + taskId + _CHAR ; [ Error . Transfer failed ] _CHAR + reason ) ; }
10220	public void load ( String featureFileName , String weightsFile , FeatureProcessorManager featProc ) throws IOException , MaryConfigurationException { HalfPhoneFeatureFileReader ffr = new HalfPhoneFeatureFileReader ( featureFileName ) ; load ( ffr , weightsFile , featProc ) ; }
10287	static Object ensureNotNull ( Location location , Object value ) { if ( value == _NULL ) { throw new EvalException ( location , _CHAR Snippet runtime does not support _NULL values . '' ) ; } return value ; }
10301	@ Override public boolean markSupported ( ) { return fInputStream . markSupported ( ) ; }
10314	public boolean matchNumericConstant ( ) { return tok . ttype == StreamTokenizer . TT_NUMBER ; }
10320	public boolean isDrawTopYLabelEntryEnabled ( ) { return mDrawTopYLabelEntry ; }
10340	@ Override public void sldDataUpdated ( SLDDataInterface sldData , boolean dataEditedFlag ) { if ( sldData != _NULL ) { outputFormat = sldData . getOriginalFormat ( ) ; comboBox . setSelectValueKey ( outputFormat . name ( ) ) ; } }
10352	public void registerListener ( Condition condition , EventListener listener , int priority ) { getListenerForCondition ( condition , - _NUM ) . registerListener ( listener , priority ) ; }
10396	@ Override public String toString ( ) { return _CHAR Entry , xIndex : _CHAR + mXIndex + _CHAR val ( sum ) : _CHAR + getVal ( ) ; }
10414	public static boolean isNimbusGTKTheme ( ) { return UIUtils . isNimbusGTKTheme ( ) ; }
10443	private void fixRotateOffset ( ) { if ( offsetRotate < _NUM ) { offsetRotate = _NUM ; } if ( offsetRotate > getMaxOffsetDegree ( ) ) { offsetRotate = getMaxOffsetDegree ( ) ; } }
10468	private Stream < String > resolve ( String template , CSVReader reader ) throws IOException { String [ ] header = reader . readNext ( ) ; return partitionedStream ( reader . iterator ( ) ) . map ( _NULL ) . map ( _NULL ) ; }
10539	public ArrayRef newArrayRef ( Value base , Value index ) { return new JArrayRef ( base , index ) ; }
10583	public VideoGetAlbumsQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
10602	protected boolean resetOccurred ( ) { return resetOccurred ; }
10618	public Observable < Object > toMainThreadObserverable ( LifecycleTransformer lifecycleTransformer ) { return _bus . observeOn ( AndroidSchedulers . mainThread ( ) ) . compose ( lifecycleTransformer ) ; }
10688	public boolean hasSegmentParameter ( SegmentContextParameters segmParameter , ContextInfo contextInfo ) { return hasTemplateParameter ( new TemplateParameter ( TemplateParameterContext . SEGMENT , segmParameter . getName ( ) ) , contextInfo ) ; }
10788	public void addControlListener ( Control cl ) { m_controls . add ( cl ) ; }
10802	private void postBufferAccess ( ) { _lock . lock ( ) ; try { if ( -- _bufferUseCount == _NUM ) { _flushReady . signalAll ( ) ; } } finally { _lock . unlock ( ) ; } }
10835	@ Override public ParetoDistribution makeDistribution ( ) { return new ParetoDistribution ( _NUM . _NUM , _NUM . _NUM ) ; }
10850	private static void writeSpaces ( Writer out , int amt ) throws IOException { while ( amt > _NUM ) { out . write ( _CHAR ) ; amt -- ; } }
10867	public static SM_SYSTEM_MESSAGE STR_PARTY_DISTRIBUTE_GOLD ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
10879	public VideoSearchQuery search ( UserActor actor , String q ) { return new VideoSearchQuery ( getClient ( ) , actor , q ) ; }
10882	public void addAll ( JsonArray array ) { elements . addAll ( array . elements ) ; }
10924	private int readSkipWs ( ) throws IOException { for ( ; ; ) { int c = _in . read ( ) ; if ( c == - _NUM || c > _CHAR ) { return c ; } } }
10943	public EmailBuilder withSubject ( String subject ) { this . subject = subject ; return this ; }
10951	public void onResume ( boolean multitasking ) { }
10969	public boolean isIncludeGlobal ( ) { return this . includeGlobal ; }
10970	NewProjectDescriptor withActivity ( @ NotNull String activity ) { myActivity = activity ; return this ; }
10986	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCBuff_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
10987	public void success ( int message ) { sendPluginResult ( new PluginResult ( PluginResult . Status . OK , message ) ) ; }
10988	public static void startLocalZkServer ( final int port ) { startLocalZkServer ( port , org . apache . commons . io . FileUtils . getTempDirectoryPath ( ) + File . separator + _CHAR test - _CHAR + System . currentTimeMillis ( ) ) ; }
10993	public void unregister ( String key ) throws RegistryException { try { registry . unbind ( key ) ; } catch ( Exception e ) { throw new RegistryException ( _CHAR Failed to unregister with key [ _CHAR + key + _CHAR ] _CHAR , e ) ; } }
10995	private static boolean containsOnlyInheritDoc ( Reader reader , int length ) { char [ ] content = new char [ length ] ; try { reader . read ( content , _NUM , length ) ; } catch ( IOException e ) { return _BOOL ; } return new String ( content ) . trim ( ) . equals ( _CHAR { @ inheritDoc } _CHAR ) ; }
11034	private static BigInteger toBigInteger ( BigDecimal value , boolean canBeNull ) { if ( canBeNull && value . signum ( ) == _NUM ) { return _NULL ; } else { return value . unscaledValue ( ) ; } }
11051	public IntIterator rows ( boolean reverse ) { return m_rows . rows ( reverse ) ; }
11054	private void readObjectNoData ( ) throws InvalidObjectException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
11065	public static SM_SYSTEM_MESSAGE STR_MSG_LIMIT_SALE_TEST_DESC04 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11098	public void releaseThreadReadLock ( ) { _readLocks [ getSegmentIdByCurrentThreadId ( ) ] . unlock ( ) ; }
11123	private boolean isMaintainAspectRatio ( ) { return preferences . getBoolean ( _CHAR SplashMaintainAspectRatio _CHAR , _BOOL ) ; }
11124	private void removeEntry ( String key ) { CacheHeader entry = mEntries . get ( key ) ; if ( entry != _NULL ) { mTotalSize -= entry . size ; mEntries . remove ( key ) ; } }
11138	void addField ( FieldRefNode frn , SparkField field ) { if ( fields == _NULL ) fields = new HashMap < SparkField , FieldRefNode > ( ) ; fields . put ( field , frn ) ; }
11145	@ Override public synchronized void remove ( String key ) { boolean deleted = getFileForKey ( key ) . delete ( ) ; removeEntry ( key ) ; if ( ! deleted ) { VolleyLog . d ( _CHAR Could not delete cache entry for key = % s , filename = % s _CHAR , key , getFilenameForKey ( key ) ) ; } }
11153	private static boolean nsEquals ( String nsURI_1 , String nsURI_2 ) { if ( nsURI_1 == _NULL ) { return ( nsURI_2 == _NULL ) ; } else { return nsURI_1 . equals ( nsURI_2 ) ; } }
11183	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_main ) ; toolbar = ( Toolbar ) findViewById ( R . id . toolbar ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar ( ) . setDisplayShowHomeEnabled ( _BOOL ) ; setupNavigationDrawer ( ) ; setFragmentContent ( currentFragment ) ; showIntro ( ) ; }
11220	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonTrap_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
11237	public boolean hasProgramEnrollmentEndDate ( ) { return programEnrollmentEndDate != _NULL ; }
11271	public ArrayRef newArrayRef ( Value base , Value index ) { return new GArrayRef ( base , index ) ; }
11288	public static String formatRateString ( float rate ) { return String . format ( Locale . US , _CHAR % . _NUM _CHAR , rate ) ; }
11300	@ SuppressLint ( _CHAR NewApi _CHAR ) private boolean checkIfMaximumBitmapExceed ( Canvas canvas ) { return mBitmapWidth > canvas . getMaximumBitmapWidth ( ) || mBitmapHeight > canvas . getMaximumBitmapHeight ( ) ; }
11301	public Builder withSupportedRange ( Range < Integer > versionRange ) { Preconditions . checkNotNull ( versionRange ) ; supportedVersionRange = versionRange ; return this ; }
11345	public boolean isDataType ( DataType dataType ) { return this . dataType != _NULL && this . dataType . equals ( dataType ) ; }
11351	public VideoEditQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
11366	@ ColorInt public int extractPrimaryColorFrom ( Context context ) { return extractIntAttribute ( context , PRIMARY ) ; }
11375	public double interceptStdErr ( ) { return Math . sqrt ( svar0 ) ; }
11382	public Path copyTestDataAndGetPath ( String name ) { copyTestData ( name ) ; return Paths . get ( tempDir , name ) ; }
11383	public void error ( int message ) { sendPluginResult ( new PluginResult ( PluginResult . Status . ERROR , message ) ) ; }
11417	public StaticScript parameter ( String name , Object value ) { if ( parameters == _NULL ) { parameters = new HashMap < String , Object > ( ) ; } parameters . put ( name , value ) ; return this ; }
11432	public void onStart ( ) { }
11444	@ Override public void write ( String str ) { synchronized ( lock ) { try { appendLocked ( str , _NUM , str . length ( ) ) ; } catch ( IOException e ) { } } }
11445	public static boolean isMetaEndOfTrack ( MidiMessage midiMsg ) { if ( midiMsg . getLength ( ) != _NUM || midiMsg . getStatus ( ) != MetaMessage . META ) { return _BOOL ; } byte [ ] msg = midiMsg . getMessage ( ) ; return ( ( msg [ _NUM ] & _NUM ) == META_END_OF_TRACK_TYPE ) && ( msg [ _NUM ] == _NUM ) ; }
11468	public static boolean isClassInSystemPackage ( String className ) { return className . startsWith ( _CHAR android . '' ) || className . startsWith ( _CHAR java . '' ) || className . startsWith ( _CHAR sun . '' ) ; }
11492	@ NotNull public static String listAllEmotions ( @ NotNull Emotion emotion ) { return emotion . scores . scores ( ) . entrySet ( ) . stream ( ) . map ( _NULL ) . collect ( Collectors . joining ( ) ) ; }
11502	public CmplExpr newCmplExpr ( Value op1 , Value op2 ) { return new JCmplExpr ( op1 , op2 ) ; }
11503	@ SafeVarargs public static final < T > List < T > union ( final List < T > ... lists ) { final List < T > union = new ArrayList < > ( ) ; for ( List < T > list : lists ) { union . addAll ( list ) ; } return union ; }
11545	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
11552	public String patch_toText ( List < Patch > patches ) { StringBuilder text = new StringBuilder ( ) ; for ( Patch aPatch : patches ) { text . append ( aPatch ) ; } return text . toString ( ) ; }
11579	public String toString ( ) { return _CHAR BB : _CHAR + id ; }
11648	@ Override public IntegerDistribution makeDistribution ( ) { return new PascalDistribution ( _NUM , _NUM . _NUM ) ; }
11652	public static long unbox ( Long longNum ) { return longNum != _NULL ? longNum : - _NUM ; }
11656	public void increaseDefeat ( ) { defeat ++ ; }
11672	public static void writeFloat ( DataOutputStream dos , boolean isBigEndian , float val ) throws IOException { if ( ! isBigEndian ) { writeLittleEndianFloat ( dos , val ) ; } else { dos . writeFloat ( val ) ; } }
11688	public boolean equivalent ( Object a , Object b ) { return nodeToComponent . get ( a ) == nodeToComponent . get ( b ) ; }
11689	public PhotosRestoreCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
11698	private void formatPeriods ( Collection < ValidationResult > results , I18nFormat format ) { if ( format != _NULL ) { for ( ValidationResult result : results ) { if ( result != _NULL && result . getPeriod ( ) != _NULL ) { result . getPeriod ( ) . setName ( format . formatPeriod ( result . getPeriod ( ) ) ) ; } } } }
11705	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OpenAerial_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
11715	public ImageSize scale ( float scale ) { return new ImageSize ( ( int ) ( width * scale ) , ( int ) ( height * scale ) ) ; }
11820	public boolean isDrawInsideEnabled ( ) { return mDrawInside ; }
11845	public void writeToFileInDirectory ( File directory , String fileName , String content ) { try { Files . write ( content , new File ( directory , fileName ) , StandardCharsets . UTF_8 ) ; } catch ( IOException ioe ) { throw new RuntimeException ( ioe ) ; } }
11859	private static void debugPrintln ( String msg ) { if ( DEBUG ) { System . err . println ( _CHAR XERCES : _CHAR + msg ) ; } }
11872	public static final void printDefaults ( ) { UIDefaults defaults = UIManager . getDefaults ( ) ; Enumeration < Object > keys = defaults . keys ( ) ; while ( keys . hasMoreElements ( ) ) { Object key = keys . nextElement ( ) ; System . out . println ( key + _CHAR : _CHAR + defaults . get ( key ) ) ; } }
11883	public NeExpr newNeExpr ( Value op1 , Value op2 ) { return new GNeExpr ( op1 , op2 ) ; }
11890	public boolean matchId ( ) { return tok . ttype == StreamTokenizer . TT_WORD && ! keywords . contains ( tok . sval ) ; }
11898	public ImageSize scale ( float scale ) { return new ImageSize ( ( int ) ( width * scale ) , ( int ) ( height * scale ) ) ; }
11921	public WatchedObject addRequestWatch ( SocketChannel sock , ConnectionResource client ) { return addWatch ( new WatchedObject ( this , sock , client ) ) ; }
11931	private void writeRawCounter ( ) { mPrefsManager . setContextualSearchTapTriggeredPromoCount ( mCounter ) ; }
11957	public boolean classContains ( WebElement element , String value ) { return hasAttributeWithValue ( element , HtmlTags . Attributes . CLASS , value ) ; }
11968	public VideoGetTagsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
11972	private static short rangeCheck ( short value ) throws NumberFormatException { if ( value < MIN_VALUE || value > MAX_VALUE ) { throw new NumberFormatException ( _CHAR Value is out of range : _CHAR + value ) ; } return value ; }
11996	public void addDiagIfNotSuppressed ( Object elementOrLocation , Diag diag ) { if ( elementOrLocation instanceof Element && isSuppressedDiag ( diag , ( Element ) elementOrLocation ) ) { return ; } else if ( elementOrLocation instanceof Location && isSuppressedDiag ( diag , getModel ( ) ) ) { return ; } diagCollector . addDiag ( diag ) ; }
12003	public VideoGetQuery albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
12027	public void addAnnotation ( Annotation annotation ) { this . addAnnotations ( new Annotation [ ] { annotation } ) ; }
12041	public static SM_SYSTEM_MESSAGE STR_MSG_GET_POLL_REWARD_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12088	public String inputDigit ( char nextChar ) { currentOutput = inputDigitWithOptionToRememberPosition ( nextChar , _BOOL ) ; return currentOutput ; }
12143	public int compare ( File file1 , File file2 ) { String suffix1 = FilenameUtils . getExtension ( file1 . getName ( ) ) ; String suffix2 = FilenameUtils . getExtension ( file2 . getName ( ) ) ; return caseSensitivity . checkCompareTo ( suffix1 , suffix2 ) ; }
12160	private HavingOperation extractOperation ( Matcher query ) throws BadHavingException { String operationName = query . group ( _NUM ) ; try { return HavingOperation . fromString ( operationName ) ; } catch ( IllegalArgumentException ignored ) { LOG . debug ( HAVING_OPERATOR_INVALID . logFormat ( operationName ) ) ; throw new BadHavingException ( HAVING_OPERATOR_INVALID . format ( operationName ) ) ; } }
12207	public Matrix refresh ( Matrix newMatrix , View chart , boolean invalidate ) { mMatrixTouch . set ( newMatrix ) ; limitTransAndScale ( mMatrixTouch , mContentRect ) ; if ( invalidate ) { chart . invalidate ( ) ; } newMatrix . set ( mMatrixTouch ) ; return newMatrix ; }
12213	public static void print ( float x ) { out . print ( x ) ; out . flush ( ) ; }
12218	@ Override public void onClick ( View passwordView ) { if ( mPublicShare != _NULL && mPublicShare . isPasswordProtected ( ) ) { requestPasswordForShareViaLink ( _BOOL ) ; } }
12239	@ Override public void onCancel ( String callerTag ) { ComponentsGetter cg = ( ComponentsGetter ) getActivity ( ) ; cg . getFileOperationsHelper ( ) . removeFiles ( mTargetFiles , _BOOL ) ; }
12251	public static void clickPopupMenuItem ( @ NotNull String labelPrefix , @ NotNull Component component , @ NotNull Robot robot ) { clickPopupMenuItemMatching ( new PrefixMatcher ( labelPrefix ) , component , robot ) ; }
12268	@ Override protected StateManagerImpl newStateManagerImpl ( Object oid , ClassMetaData meta ) { return new StateManager ( oid , meta , this ) ; }
12280	private void copyIn ( final double [ ] [ ] in ) throws MathIllegalArgumentException , NullArgumentException { setSubMatrix ( in , _NUM , _NUM ) ; }
12286	private Dimension resolveDimensionName ( String dimensionName ) { Dimension dimension = dimensionDictionary . findByApiName ( dimensionName ) ; if ( dimension == _NULL ) { String msg = ErrorMessageFormat . UNABLE_TO_FIND_DIMENSION_FROM_DICTIONARY . format ( dimensionName ) ; LOG . error ( msg ) ; throw new DeserializationException ( msg ) ; } return dimension ; }
12303	private int [ ] hashes ( InputStream input ) throws IOException { try { return ByteStreams . readBytes ( input , new HashingByteProcessor ( ) ) ; } finally { input . close ( ) ; } }
12318	public XorExpr newXorExpr ( Value op1 , Value op2 ) { return new JXorExpr ( op1 , op2 ) ; }
12351	public int memberOf ( ) { return theMemberOf ; }
12360	private String deployTestProcessWithTestTenant ( ) { return deployTestProcessWithTestTenant ( TEST_TENANT_ID ) ; }
12362	private void readObjectNoData ( ) throws InvalidObjectException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
12382	public static String toString ( Object o ) throws JSONException { return toString ( o , _NULL ) ; }
12385	public void assertTextPresent ( String expected , String actual ) { if ( ( actual == _NULL ) || ( ! actual . contains ( expected ) ) ) { throw new AssertionFailedError ( _CHAR expected presence of [ _CHAR + expected + _CHAR ] , but was [ _CHAR + actual + _CHAR ] _CHAR ) ; } }
12396	public boolean hasFixedPropertiesArray ( ) { return _BOOL ; }
12400	protected AdsGetStatisticsQuery idsType ( AdsGetStatisticsIdsType value ) { return unsafeParam ( _CHAR ids_type _CHAR , value ) ; }
12417	public static SM_SYSTEM_MESSAGE STR_EXTEND_CHAR_WAREHOUSE_SIZE_EXTENDED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12420	public static String callContentPermissionCheck ( Delegator delegator , LocalDispatcher dispatcher , Map < String , Object > context ) { Map < String , Object > permResults = callContentPermissionCheckResult ( delegator , dispatcher , context ) ; String permissionStatus = ( String ) permResults . get ( _CHAR permissionStatus _CHAR ) ; return permissionStatus ; }
12424	public boolean isCauseOf ( Exception exception ) { return TaggedIOException . isTaggedWith ( exception , tag ) ; }
12429	public static int weekNumber ( Timestamp input ) { return weekNumber ( input , TimeZone . getDefault ( ) , Locale . getDefault ( ) ) ; }
12455	public static double sumOfSquares ( double [ ] vector ) { double ret = _NUM ; for ( double d : vector ) ret += Math . pow ( d , _NUM ) ; return ret ; }
12475	public void changeMember ( String sourceMember , String targetMember , String targetMemberURL ) throws ClusterException { addMember ( sourceMember , targetMember , targetMemberURL ) ; removeMember ( sourceMember ) ; }
12481	public static IProgressMonitor monitorFor ( IProgressMonitor monitor ) { if ( monitor == _NULL ) return new NullProgressMonitor ( ) ; return monitor ; }
12519	public FriendsGetQuery userId ( Integer value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
12528	public boolean isValid ( String inetAddress ) { return isValidInet4Address ( inetAddress ) || isValidInet6Address ( inetAddress ) ; }
12549	private Iterator < Map < String , Object >> resolveScanResults ( final Iterator < Record > records , final ReadConsistency consistency ) { return resolveScanResults ( records , consistency , _BOOL ) ; }
12551	public void transformValues ( TIntFunction function ) { for ( int i = _pos ; i -- > _NUM ; ) { _data [ i ] = function . execute ( _data [ i ] ) ; } }
12581	public static final double [ ] trim ( double [ ] a , int size ) { if ( a . length == size ) { return a ; } else { double [ ] b = new double [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , size ) ; return b ; } }
12602	public static String formatRateString ( float rate ) { return String . format ( Locale . US , _CHAR % . _NUM _CHAR , rate ) ; }
12612	public boolean equals ( Object o ) { return ReferentUuids . compare ( this , o ) ; }
12626	public static SM_SYSTEM_MESSAGE STR_MSG_DICE_ROLLED ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
12652	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
12654	int cardinality ( ) { return Math . max ( distinctAdds ( ) - _deletes , _NUM ) ; }
12692	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
12694	@ Override public int [ ] makeInverseCumulativeTestValues ( ) { return new int [ ] { _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
12709	public PageObjectContext peek ( ) { return deque . peek ( ) ; }
12718	private boolean hasProxySettings ( Properties settings ) { String proxyHost = settings . getProperty ( _CHAR / system / http_proxy / host _CHAR , _NULL ) ; return proxyHost != _NULL && proxyHost . length ( ) > _NUM ; }
12744	public V remove ( Object key ) { return this . removeInternal ( key , _BOOL ) ; }
12750	protected void updateEnablements ( ) { int type = getSaveType ( ) ; browseButton . setEnabled ( type == FILESYSTEM ) ; filenameCombo . setEnabled ( type == FILESYSTEM ) ; wsPathText . setEnabled ( type == WORKSPACE ) ; wsBrowseButton . setEnabled ( type == WORKSPACE ) ; if ( type == WORKSPACE ) wsBrowsed = _BOOL ; }
12753	synchronized void dropObservables ( UUID host ) { Map < CacheKey , Observable > map = mCache . snapshot ( ) ; for ( CacheKey cacheKey : map . keySet ( ) ) { if ( cacheKey . uuid == host ) { mCache . remove ( cacheKey ) ; } } }
12785	public static int readInt ( DataInputStream dis , boolean isBigEndian ) throws IOException { if ( ! isBigEndian ) { return readLittleEndianInt ( dis ) ; } else { return dis . readInt ( ) ; } }
12792	public static < RuleType extends Message > ConfigRuleSet < RuleType > of ( Descriptor ruleDescriptor , List < RuleType > rules , Model model ) { return new ConfigRuleSet < RuleType > ( ruleDescriptor , rules , model ) ; }
12793	public PaginationParameters withPerPage ( String perPage ) throws BadPaginationException { return new PaginationParameters ( parseParameter ( perPage , _CHAR perPage _CHAR ) , page ) ; }
12831	public ImageSize scale ( float scale ) { return new ImageSize ( ( int ) ( width * scale ) , ( int ) ( height * scale ) ) ; }
12862	@ Override public void clear ( ) { mItems . clear ( ) ; notifyIfNeed ( ) ; }
12865	@ Override public boolean isEnemyFrom ( Player player ) { int worldId = getPosition ( ) . getMapId ( ) ; return player . getRace ( ) != this . ownerRace ; }
12882	T toResponse ( ResponseBody body ) throws IOException { return responseConverter . convert ( body ) ; }
12893	public static SM_SYSTEM_MESSAGE STR_DUEL_CANT_REQUEST_WHEN_HE_IS_ASKED_QUESTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12956	boolean isAccepted ( ) { return accepted ; }
12998	public GroupsGetMembersQueryWithFields offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
13037	public static java . sql . Timestamp toTimestamp ( String date , String time ) { java . util . Date newDate = toDate ( date , time ) ; if ( newDate != _NULL ) { return new java . sql . Timestamp ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
13111	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
13120	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
13126	@ SafeVarargs public final void addAll ( final T ... items ) { synchronized ( mLock ) { Collections . addAll ( mList , items ) ; } notifyDataSetChanged ( ) ; }
13133	public Matrix4f adjoint ( ) { return adjoint ( _NULL ) ; }
13138	public static SM_SYSTEM_MESSAGE STR_MSG_GET_ITEM_MULTI ( int num1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0s ) ; }
13181	public static SM_SYSTEM_MESSAGE STR_FACTION_LEAVE_BY_LEVEL_LIMIT ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
13193	public void addGetLatch ( String ticket , CountDownLatch latch ) { getLatches . put ( ticket , latch ) ; }
13212	@ Override public boolean accept ( File file , String name ) { for ( String prefix : prefixes ) { if ( caseSensitivity . checkStartsWith ( name , prefix ) ) { return _BOOL ; } } return _BOOL ; }
13263	public void onFindToolbarHidden ( ) { }
13288	public void increaseValue ( TKeyType oXValue , double dYValue ) { hDistro . put ( oXValue , getValue ( oXValue ) + dYValue ) ; }
13324	public InstanceFieldRef newInstanceFieldRef ( Value base , SootFieldRef f ) { return new JInstanceFieldRef ( base , f ) ; }
13371	public void updatePositions ( ViewTransform viewTransform ) { for ( ConstraintWidget widget : mWidgets . values ( ) ) { widget . updateDrawPosition ( ) ; WidgetCompanion companion = ( WidgetCompanion ) widget . getCompanionWidget ( ) ; WidgetInteractionTargets widgetInteraction = companion . getWidgetInteractionTargets ( ) ; widgetInteraction . updatePosition ( viewTransform ) ; } }
13378	private Object writeReplace ( ) { return new DataTransferObject ( compiler . getFreeParameters ( ) , compiler . getOrder ( ) , data ) ; }
13388	public static boolean isCollection ( Object value ) { if ( value != _NULL ) { if ( value . getClass ( ) . isArray ( ) || value instanceof Collection < ? > ) { return _BOOL ; } } return _BOOL ; }
13413	public boolean hasAttributeWithValue ( final WebElement element , final String attribute , final String value , int timeout ) { return isConditionMet ( _NULL , timeout ) ; }
13424	public VideoGetQueryWithExtended albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
13440	public T remove ( final int location ) { final T removedObject = this . data . remove ( location ) ; this . notifyItemRemoved ( location ) ; this . notifyItemRangeChanged ( location , this . data . size ( ) ) ; return removedObject ; }
13451	public Builder customReduction ( String column , ColumnReduction columnReduction ) { customReductions . put ( column , columnReduction ) ; return this ; }
13461	protected void onAttachView ( @ NonNull V view ) { if ( mCalled ) { throw new IllegalAccessError ( _CHAR do n _CHAR_CHAR ) ; } mCalled = true ; }
13494	public boolean isHiddenAttribute ( String attribute ) { return attribute . endsWith ( _CHAR [ hidden ] _CHAR ) ; }
13518	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_DUNGEON_OPENED ( String worldname1 , int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname1 , num0 ) ; }
13523	@ Override public boolean hasFixedPropertiesArray ( ) { return _BOOL ; }
13525	void beginEndElement ( Augmentations elementAugs ) { fInEndElement = _BOOL ; fElementAugs = elementAugs ; }
13591	public NewsfeedGetSuggestedSourcesQuery fields ( List < EnumParam > value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
13601	public void install ( boolean synchronous ) throws Exception { status = Status . INSTALLING ; stateChanged ( ) ; Installer inst = new Installer ( ) ; if ( synchronous ) { inst . run ( ) ; } else { new Thread ( inst ) . start ( ) ; } }
13621	public static SM_SYSTEM_MESSAGE STR_GUILD_EVENT_WIN_FIELDARTIFACT ( String value1 , String value0 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 , value2 ) ; }
13624	public static String currentTimeString ( ) { return TestUtils . relativeTimeString ( _NUM ) ; }
13683	void clearAssociatedData ( ) { clearIdOfModelWithFK ( ) ; clearIdOfModelWithoutFK ( ) ; clearIdOfModelForJoinTable ( ) ; clearFKNameList ( ) ; }
13689	@ TargetApi ( Build . VERSION_CODES . M ) public static boolean hasPermission ( Activity activity , String permission ) { return activity . checkSelfPermission ( permission ) == PackageManager . PERMISSION_GRANTED ; }
13707	public Future < Boolean > analyzeTraffic ( String uriPrefix , Map < String , String > expectedParams , final int timeout ) { return analyzeTraffic ( new RequestPredicateImpl ( uriPrefix , expectedParams ) , timeout ) ; }
13724	public static String createFullSpaceName ( String containerName , String spaceName ) { return containerName + _CHAR : _CHAR + spaceName ; }
13728	public boolean canAddSingleRecord ( ) { return singleRecordSupported ; }
13772	@ Override public double cost ( double a , double b ) { return ( a > b ? ( a - b ) : ( b - a ) ) ; }
13805	public SlickForm withProcessingLabel ( String label ) { this . endTag = label ; return this ; }
13815	public Element next ( ) { return theNext ; }
13817	public static void changeViceCaptain ( Player player , AssignType assignType ) { PlayerAlliance alliance = player . getPlayerAlliance2 ( ) ; if ( alliance != _NULL ) { alliance . onEvent ( new AssignViceCaptainEvent ( alliance , player , assignType ) ) ; } }
13818	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysBlock_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
13836	public static RoutingService . Builder buildRoutingService ( String finagleNameStr ) { if ( ! finagleNameStr . startsWith ( _CHAR serverset ! _CHAR ) && ! finagleNameStr . startsWith ( _CHAR inet ! _CHAR ) && ! finagleNameStr . startsWith ( _CHAR zk ! _CHAR ) ) { throw new UnsupportedOperationException ( _CHAR Finagle Name format not supported for name : '' + finagleNameStr ) ; } return buildRoutingService ( new NameServerSet ( finagleNameStr ) , _BOOL ) ; }
13841	public static SM_SYSTEM_MESSAGE STR_PARTY_ITEM_DICE ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
13909	public GroupsEditManagerQuery editManager ( UserActor actor , int groupId , int userId ) { return new GroupsEditManagerQuery ( getClient ( ) , actor , groupId , userId ) ; }
13931	protected void addFilter ( DimensionalObject filter ) { filters . add ( filter ) ; }
13942	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { double [ ] points = makeCumulativeTestValues ( ) ; double [ ] points2 = new double [ points . length - _NUM ] ; System . arraycopy ( points , _NUM , points2 , _NUM , points . length - _NUM ) ; return points2 ; }
13947	public static boolean nullEquals ( String s1 , String s2 ) { return ( s1 == _NULL ? s2 == _NULL : s1 . equals ( s2 ) ) ; }
13966	@ Override public IntegerDistribution makeDistribution ( ) { return new UniformIntegerDistribution ( - _NUM , _NUM ) ; }
13985	public MulExpr newMulExpr ( Value op1 , Value op2 ) { return new GMulExpr ( op1 , op2 ) ; }
14004	public static double factorial ( double n ) { if ( n == _NUM || n == _NUM ) return _NUM ; for ( double i = n ; i > _NUM ; i -- , n *= ( i > _NUM ? i : _NUM ) ) { } return n ; }
14009	@ Override public void clear ( ) { if ( mSize != _NUM ) { freeArrays ( mHashes , mArray , mSize ) ; mHashes = ContainerHelpers . EMPTY_INTS ; mArray = ContainerHelpers . EMPTY_OBJECTS ; mSize = _NUM ; } }
14034	public int hashCode ( XMLGrammarDescription desc ) { return desc . hashCode ( ) ; }
14062	@ Override protected boolean runTestsOnEdt ( ) { return _BOOL ; }
14078	public AddExpr newAddExpr ( Value op1 , Value op2 ) { return new GAddExpr ( op1 , op2 ) ; }
14131	public void logMessage ( final FormattedMqttMessage receivedMessage ) { if ( ! MessageLogEnum . DISABLED . equals ( connectionSettings . getMessageLog ( ) . getValue ( ) ) ) { messageQueue . add ( receivedMessage ) ; } }
14136	public boolean hasHiddenValue ( ) { for ( EnumValue value : values ) { if ( ! value . isReachable ( ) ) { return _BOOL ; } } return _BOOL ; }
14167	public String toString ( String charsetName ) throws UnsupportedEncodingException { return new String ( this . get ( ) , _NUM , this . getCount ( ) , charsetName ) ; }
14168	public boolean contains ( Object obj ) { return index ( ( T ) obj ) >= _NUM ; }
14185	public ParameterRef newParameterRef ( Type paramType , int number ) { return new ParameterRef ( paramType , number ) ; }
14203	public ResourceNameValidator unique ( ) { myUnique = _BOOL ; myExist = _BOOL ; return this ; }
14244	protected String [ ] upload_appender_file ( String group_name , String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final byte cmd = ProtoCommon . STORAGE_PROTO_CMD_UPLOAD_APPENDER_FILE ; return this . upload_file ( cmd , group_name , local_filename , file_ext_name , meta_list ) ; }
14312	public PointsToSet reachingObjects ( Local l ) { VarNode n = findLocalVarNode ( l ) ; if ( n == _NULL ) { return EmptyPointsToSet . v ( ) ; } return n . getP2Set ( ) ; }
14314	public NegExpr newNegExpr ( Value op ) { return new GNegExpr ( op ) ; }
14378	private synchronized final void fallAsleep ( ) throws InterruptedException { wait ( _period ) ; }
14382	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_BAN_MEMBER_BANNED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14441	public void treeExpanded ( TreeExpansionEvent event ) { inspectorWindow . updateView ( Director . ALL ) ; }
14455	public double distance ( Vector2 point ) { double dx = this . x - point . x ; double dy = this . y - point . y ; return Math . sqrt ( dx * dx + dy * dy ) ; }
14520	private synchronized static void compareConfiguration ( final ProcessConfigurationResponse processConfigurationResponse ) { if ( ActiveRequestSenderTest . testType == TestType . CONFIG ) { assertNotNull ( processConfigurationResponse ) ; assertEquals ( PROCESS_NAME , processConfigurationResponse . getProcessName ( ) ) ; } }
14674	public void recordSplashscreenBackgroundColor ( int type ) { assert ! mCommitted ; assert type >= _NUM && type < SPLASHSCREEN_COLOR_STATUS_MAX ; mSplashScreenBackgroundColor = type ; }
14697	public int readInt ( int startPos ) { return ByteBuffer . wrap ( this . readBytes ( startPos , _NUM ) ) . getInt ( ) ; }
14730	public boolean isFinalState ( int state ) { return ( state < _NUM ) ? _BOOL : fFinalStateFlags [ state ] ; }
14786	public final TestSubscriber < T > assertNotTerminated ( ) { if ( cdl . getCount ( ) == _NUM ) { throw new AssertionError ( _CHAR Terminated _CHAR , _NULL ) ; } return this ; }
14787	public static String byteToHexString ( byte bytes [ ] ) { return byteToHexString ( bytes , _NUM , bytes . length ) ; }
14801	public static boolean isExclusiveReadLock ( int mod ) { return Modifiers . contains ( mod , EXCLUSIVE_READ_LOCK ) ; }
14811	public Map < String , File > dexClassIndex ( ) { return dexClassIndex ; }
14822	public boolean verify ( byte [ ] hash , byte [ ] signature ) { return crypto . verify ( hash , signature , pub ) ; }
14844	public void layoutAfter ( ) { }
14872	@ Override public String toString ( ) { return store . toString ( ) ; }
14880	public static ArrayList < String > matches ( String text ) { return matches ( text , ALL ) ; }
14884	public boolean isInterfaceDirectSubinterfaceOf ( SootClass child , SootClass possibleParent ) { child . checkLevel ( SootClass . HIERARCHY ) ; possibleParent . checkLevel ( SootClass . HIERARCHY ) ; return getDirectSubinterfacesOf ( possibleParent ) . contains ( child ) ; }
14887	@ JsonIgnore public boolean isProcessValueDeadbandEnabled ( ) { if ( valueDeadbandType == DataTagDeadband . DEADBAND_PROCESS_ABSOLUTE || valueDeadbandType == DataTagDeadband . DEADBAND_PROCESS_RELATIVE || valueDeadbandType == DataTagDeadband . DEADBAND_PROCESS_ABSOLUTE_VALUE_DESCR_CHANGE || valueDeadbandType == DataTagDeadband . DEADBAND_PROCESS_RELATIVE_VALUE_DESCR_CHANGE ) { return _BOOL ; } else { return _BOOL ; } }
14907	public String end_graph ( ) { return _CHAR } _CHAR ; }
14940	private boolean isIP6SubnetFilter ( String token ) { return IPWithSubnetChecker . isValidIP6Range ( token ) ; }
14995	public static int unbox ( Integer integer ) { return integer != _NULL ? integer : - _NUM ; }
14998	@ SuppressWarnings ( _CHAR unchecked _CHAR ) static < T extends Type > T decodeStaticArray ( String input , int offset , TypeReference < T > typeReference , int length ) { BiFunction < List < T > , String , T > function = _NULL ; return decodeArrayElements ( input , offset , typeReference , length , function ) ; }
15043	public PhotosEditCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
15044	public static float roundFloat ( float value , int afterDecimalPoint ) { float mask = ( float ) Math . pow ( _NUM , ( float ) afterDecimalPoint ) ; return ( float ) ( Math . round ( value * mask ) ) / mask ; }
15083	public void remove ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; }
15089	@ Override public void onRequestError ( int code , String message ) { if ( code == ConnectAPI . LOGIN_CODE ) { emailLayout . setError ( _CHAR Enter valid Email _CHAR ) ; requestFocus ( email ) ; passwordLayout . setError ( _CHAR Enter valid Password _CHAR ) ; requestFocus ( password ) ; signin . setText ( _CHAR Sign in _CHAR ) ; signin . setClickable ( _BOOL ) ; } }
15162	public static String readStringFromFile ( String path , JavaSparkContext sc ) throws IOException { return readStringFromFile ( path , sc . sc ( ) ) ; }
15193	@ Override public boolean isAlreadySorted ( ) { return _BOOL ; }
15194	private boolean isBrigadeGeneral ( Player player ) { return player . getLegionMember ( ) . isBrigadeGeneral ( ) ; }
15227	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
15233	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
15295	public void clear ( ) { if ( mSize != _NUM ) { freeArrays ( mHashes , mArray , mSize ) ; mHashes = ContainerHelpers . EMPTY_INTS ; mArray = ContainerHelpers . EMPTY_OBJECTS ; mSize = _NUM ; } }
15318	public static SM_SYSTEM_MESSAGE STR_FORCE_INVITE_PARTY_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15370	@ RequestMapping ( value = { _CHAR / error _CHAR , _CHAR / accessdenied _CHAR } , method = RequestMethod . GET ) public String returnErrorView ( HttpSession session ) { Exception ex = ( Exception ) session . getAttribute ( _CHAR SPRING_SECURITY_LAST_EXCEPTION _CHAR ) ; ex . printStackTrace ( ) ; return _CHAR error _CHAR ; }
15388	@ Override public String toString ( ) { return toString ( size ( ) , _BOOL ) ; }
15396	@ Override public void close ( ) { idx . close ( ) ; ts . close ( ) ; }
15416	public static final double logX ( double dNumber , double dBase ) { return Math . log ( dNumber ) / Math . log ( dBase ) ; }
15473	public PhotosGetAlbumsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
15479	public static void sendBroadcast ( Context context , String action ) { sendBroadcast ( context , action , _NULL ) ; }
15489	public static final float [ ] trim ( float [ ] a , int size ) { if ( a . length == size ) { return a ; } else { float [ ] b = new float [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , size ) ; return b ; } }
15516	public AemRadioGroup selectByLabel ( String label ) { for ( AemRadioOption option : values ) { if ( label . equals ( option . getLabel ( ) ) ) { option . setSelected ( ) ; break ; } } return this ; }
15566	public void success ( String message ) { sendPluginResult ( new PluginResult ( PluginResult . Status . OK , message ) ) ; }
15569	public static String identityToString ( Object obj ) { if ( obj == _NULL ) { return EMPTY_STRING ; } return obj . getClass ( ) . getName ( ) + _CHAR @ _CHAR + getIdentityHexString ( obj ) ; }
15607	public synchronized void damageReport ( Rectangle2D region ) { if ( m_damageRedraw ) m_clip . union ( region ) ; }
15667	public static boolean isBodyRotationDiscEnabled ( ) { return bodyRotationDiscEnabled ; }
15673	public static SM_SYSTEM_MESSAGE STR_GATHER_LEARN_SKILL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15681	private void bol ( ) { column = _NUM ; collectingIndent = ( maxIndent != _NUM ) ; indent = _NUM ; }
15703	public void java_io_ObjectInputStream_allocateNewArray ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { throw new NativeMethodNotSupportedException ( method ) ; }
15735	public boolean isInvalid ( ) { return status == INVALID ; }
15743	public VideoSearchQueryWithExtended searchExtended ( UserActor actor , String q ) { return new VideoSearchQueryWithExtended ( getClient ( ) , actor , q ) ; }
15752	public boolean needsHighlight ( int index ) { if ( ! valuesToHighlight ( ) ) return _BOOL ; for ( int i = _NUM ; i < mIndicesToHighlight . length ; i ++ ) if ( ( int ) mIndicesToHighlight [ i ] . getX ( ) == index ) return _BOOL ; return _BOOL ; }
15763	public void addSymbolizerToRule ( Symbolizer newSymbolizer ) { if ( this . symbolData . getRule ( ) == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR rule == _NULL _CHAR ) ; } else { List < Symbolizer > symbolizerList = ( List < Symbolizer > ) this . symbolData . getRule ( ) . symbolizers ( ) ; symbolizerList . add ( newSymbolizer ) ; } }
15779	@ Override public boolean isApplicableTo ( Schema sch ) { return _BOOL ; }
15798	public AdsGetTargetingStatsQuery adId ( Integer value ) { return unsafeParam ( _CHAR ad_id _CHAR , value ) ; }
15823	public static int uniqueCount ( Iterator tuples , String field ) { HashSet set = new HashSet ( ) ; while ( tuples . hasNext ( ) ) set . add ( ( ( Tuple ) tuples . next ( ) ) . get ( field ) ) ; return set . size ( ) ; }
15839	public void onDestroy ( ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { plugin . onDestroy ( ) ; } } }
15867	public static boolean isByteCodeClassName ( String className ) { return ( ( className . startsWith ( _CHAR L _CHAR ) || className . startsWith ( _CHAR [ _CHAR ) ) && className . endsWith ( _CHAR ; _CHAR ) && ( ( className . indexOf ( _CHAR ) != - _NUM || className . indexOf ( _CHAR ) == - _NUM ) ) ) ; }
15891	public void stop ( ) { ActivityManager . stopThread ( ) ; }
15938	protected MessagesCreateChatQuery userIds ( List < Integer > value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
15954	public LeExpr newLeExpr ( Value op1 , Value op2 ) { return new GLeExpr ( op1 , op2 ) ; }
15973	public boolean isValid ( long startTime , long dateTime ) { long testTime = startTime ; if ( testTime == dateTime ) return _BOOL ; while ( testTime < dateTime ) { testTime = next ( startTime , testTime , _NUM ) ; if ( testTime == dateTime ) return _BOOL ; } return _BOOL ; }
15977	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
15984	public static ValueCmpTarget value ( ByteString value ) { return new ValueCmpTarget ( value ) ; }
16056	public static String padOrTrim ( Object obj , int totalChars ) { return padOrTrim ( obj . toString ( ) , totalChars ) ; }
16104	public DivExpr newDivExpr ( Value op1 , Value op2 ) { return new JDivExpr ( op1 , op2 ) ; }
16166	@ Override public void onDraw ( Canvas c , RecyclerView parent ) { switch ( orientation ) { case VERTICAL_LIST : drawVertical ( c , parent ) ; break ; case HORIZONTAL_LIST : drawHorizontal ( c , parent ) ; break ; default : break ; } }
16211	public static boolean isTryCatch ( ) { return Boolean . getBoolean ( LOG_ERROR_PROPERTY ) ; }
16238	protected void fail ( ) { Assert . fail ( ) ; }
16275	static String parseMethodDesc_return ( String s ) { int j ; j = s . lastIndexOf ( _CHAR ) ; if ( j >= _NUM ) { return parseDesc ( s . substring ( j + _NUM ) , _CHAR , _CHAR ) ; } return parseDesc ( s , _CHAR , _CHAR ) ; }
16361	@ Override public void removeDataTag ( final SourceDataTag sourceDataTag ) { sourceDataTags . remove ( sourceDataTag . getId ( ) ) ; sourceDataTag . getAddress ( ) . setTimeDeadband ( _NUM ) ; movingAverages . remove ( sourceDataTag . getId ( ) ) ; }
16363	public static void write ( String fileName , Table table ) throws IOException { write ( fileName , table , _NULL ) ; }
16369	public boolean inRangeForLuredPokemon ( ) { return getDistance ( ) <= api . getSettings ( ) . getMapSettings ( ) . getPokemonVisibilityRange ( ) ; }
16379	private Iterator < Record > decodeRows ( Iterator < Iterable < Row >> rowGroups , final AstyanaxTable table ) { return Iterators . transform ( rowGroups , _NULL ) ; }
16396	public void removeHeader ( ) { setHeader ( _NULL ) ; }
16401	public AudioGetRecommendationsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
16406	public T nearest ( final double [ ] key ) throws KeySizeException { final List < T > nbrs = nearest ( key , _NUM , _NULL ) ; return nbrs . get ( _NUM ) ; }
16470	private void listenAndTimer ( final BleCallback bleCallback , int what , String uuid , BluetoothGattCallback callback ) { bleCallback . setBluetoothGattCallback ( callback ) ; liteBluetooth . addGattCallback ( uuid , callback ) ; Message msg = handler . obtainMessage ( what , bleCallback ) ; handler . sendMessageDelayed ( msg , timeOutMillis ) ; }
16534	public TupleSet removeSet ( String name ) { TupleSet ts = ( TupleSet ) m_map . remove ( name ) ; if ( ts != _NULL ) { m_sets . remove ( ts ) ; if ( m_lstnr != _NULL ) ts . removeTupleSetListener ( m_lstnr ) ; } return ts ; }
16540	@ Override public boolean markSupported ( ) { return fInputStream . markSupported ( ) ; }
16547	public String upload_appender_file1 ( byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { String parts [ ] = this . upload_appender_file ( file_buff , file_ext_name , meta_list ) ; if ( parts != _NULL ) { return parts [ _NUM ] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts [ _NUM ] ; } else { return _NULL ; } }
16570	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
16581	public static String callDataResourcePermissionCheck ( Delegator delegator , LocalDispatcher dispatcher , Map < String , Object > context ) { Map < String , Object > permResults = callDataResourcePermissionCheckResult ( delegator , dispatcher , context ) ; String permissionStatus = ( String ) permResults . get ( _CHAR permissionStatus _CHAR ) ; return permissionStatus ; }
16586	public static SM_SYSTEM_MESSAGE STR_SKILL_TURN_OFF_ABNORMAL_STATUS ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16587	public static int hash ( double value ) { return new Double ( value ) . hashCode ( ) ; }
16611	public CmpgExpr newCmpgExpr ( Value op1 , Value op2 ) { return new GCmpgExpr ( op1 , op2 ) ; }
16619	@ VisibleForTesting protected boolean isChromeBeingUsed ( ) { boolean isChromeVisible = ApplicationStatus . hasVisibleActivities ( ) ; boolean isScreenOn = ApiCompatibilityUtils . isInteractive ( this ) ; return isChromeVisible && isScreenOn ; }
16654	public CmpExpr newCmpExpr ( Value op1 , Value op2 ) { return new JCmpExpr ( op1 , op2 ) ; }
16656	public void hideToolbar ( ) { hideToolbar ( _BOOL ) ; }
16662	public void toNativeArray ( short [ ] dest , int offset , int len ) { if ( len == _NUM ) { return ; } if ( offset < _NUM || offset >= _pos ) { throw new ArrayIndexOutOfBoundsException ( offset ) ; } System . arraycopy ( _data , offset , dest , _NUM , len ) ; }
16680	private Map < String , List < ChartObject >> assembleWidgetData ( List < ChartObject > input ) { if ( input . isEmpty ( ) ) return new HashMap < > ( ) ; input . stream ( ) . forEach ( _NULL ) ; Map < String , List < ChartObject >> result = new HashMap < > ( ) ; result . put ( RESULT , input ) ; return result ; }
16706	@ Override public boolean next ( ) { while ( rf . next ( ) ) if ( rf . getVal ( SCHEMA_KEY ) . compareTo ( searchKey ) == _NUM ) return _BOOL ; return _BOOL ; }
16708	public Predicate pred ( ) { return pred ; }
16755	public SimplePollingContainerConfigurer eventListenerMethod ( Object eventListener , String methodName ) { MethodEventListenerAdapter methodEventListenerAdapter = new MethodEventListenerAdapter ( ) ; methodEventListenerAdapter . setDelegate ( eventListener ) ; methodEventListenerAdapter . setMethodName ( methodName ) ; methodEventListenerAdapter . afterPropertiesSet ( ) ; pollingEventListenerContainer . setEventListener ( methodEventListenerAdapter ) ; return this ; }
16818	public ImageSize scale ( float scale ) { return new ImageSize ( ( int ) ( width * scale ) , ( int ) ( height * scale ) ) ; }
16833	private boolean checkPacket ( byte [ ] packet ) { return ( ( ( ( packet [ _NUM ] ^ iv [ _NUM ] ) & _NUM ) == ( ( mapleVersion >> _NUM ) & _NUM ) ) && ( ( ( packet [ _NUM ] ^ iv [ _NUM ] ) & _NUM ) == ( mapleVersion & _NUM ) ) ) ; }
16839	public boolean hasProgramEnrollmentStartDate ( ) { return programEnrollmentStartDate != _NULL ; }
16844	public LeExpr newLeExpr ( Value op1 , Value op2 ) { return new JLeExpr ( op1 , op2 ) ; }
16847	@ Override public void startExecuting ( ) { this . theEntityCreature . getNavigator ( ) . tryMoveToXYZ ( this . randPosX , this . randPosY , this . randPosZ , this . speed ) ; }
16892	@ Deprecated public static int offset ( Schema sch , String fldName ) { int pos = _NUM ; for ( String fldname : sch . fields ( ) ) { if ( fldName . equals ( fldname ) ) break ; pos += Page . maxSize ( sch . type ( fldname ) ) ; } return pos ; }
16905	public static Crop of ( Uri source , Uri destination ) { return new Crop ( source , destination ) ; }
16934	private void apply ( Activity activity , @ StyleRes int theme ) { activity . setTheme ( theme ) ; int color = AttrUtils . getColorAttr ( activity , android . R . attr . colorBackground ) ; activity . getWindow ( ) . setBackgroundDrawable ( new ColorDrawable ( color ) ) ; }
16976	public boolean isStable ( ) { return myFeatures . contains ( FEATURE_STABLE ) ; }
16979	public void seekToPlaying ( int milliseconds ) { if ( this . readyPlayer ( this . audioFile ) ) { this . player . seekTo ( milliseconds ) ; Log . d ( LOG_TAG , _CHAR Send a onStatus update for the new seek '' ) ; sendStatusChange ( MEDIA_POSITION , _NULL , ( milliseconds / _NUM . _NUM ) ) ; } else { this . seekOnPrepared = milliseconds ; } }
17008	private static int calculateTotalBytes ( byte [ ] [ ] byteBufferArr ) { int total = _NUM ; for ( int index = _NUM ; index < byteBufferArr . length ; index ++ ) { total += byteBufferArr [ index ] . length ; } return total ; }
17024	public void success ( JSONArray message ) { sendPluginResult ( new PluginResult ( PluginResult . Status . OK , message ) ) ; }
17030	public ComponentDefinition addAlias ( @ NotNull String text ) { if ( aliases == _NULL ) { aliases = new ArrayList < String > ( ) ; } aliases . add ( text ) ; return this ; }
17054	private void addBlockBasedOnMinMaxValue ( FilterExecuter filterExecuter , List < DataRefNode > listOfDataBlocksToScan , DataRefNode dataRefNode , SegmentProperties segmentProperties ) { BitSet bitSet = filterExecuter . isScanRequired ( dataRefNode . getColumnsMaxValue ( ) , dataRefNode . getColumnsMinValue ( ) ) ; if ( ! bitSet . isEmpty ( ) ) { listOfDataBlocksToScan . add ( dataRefNode ) ; } }
17078	public boolean isClassDirectSubclassOf ( SootClass c , SootClass c2 ) { throw new RuntimeException ( _CHAR Not implemented yet ! _CHAR ) ; }
17088	private void displayEmptyScreenMessage ( ) { if ( mEmptyView != _NULL ) { mEmptyView . setVisibility ( View . VISIBLE ) ; } }
17118	public static void writeVInt ( DataOutput stream , int i ) throws IOException { WritableUtils . writeVInt ( stream , i ) ; }
17131	public void onSaveInstanceState ( Bundle outState ) { outState . putIntegerArrayList ( TAG , selectedItems ) ; }
17133	AnnotationView viewForAnnotation ( Annotation annotation ) { return this . annotationToAnnotationViewMap . get ( annotation ) ; }
17142	private Long createProcessPIK ( ) { Random r = new Random ( ) ; int pik = r . nextInt ( PIK_MAX + _NUM ) ; if ( pik < PIK_MIN ) { pik += PIK_MIN ; } return Long . valueOf ( pik ) ; }
17150	private List < Expression > createDashArrayList ( float [ ] dashes ) { List < Expression > dashExpressionList = _NULL ; if ( dashes != _NULL ) { dashExpressionList = new ArrayList < Expression > ( ) ; for ( float dashValue : dashes ) { dashExpressionList . add ( getFilterFactory ( ) . literal ( dashValue ) ) ; } } return dashExpressionList ; }
17167	public static SM_SYSTEM_MESSAGE STR_DUEL_START_BROADCAST ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
17212	public static float convertPixelsToDp ( float px , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float dp = px / ( ( float ) metrics . densityDpi / DisplayMetrics . DENSITY_DEFAULT ) ; return dp ; }
17230	private final void createChunk ( int data [ ] [ ] , int chunk ) { data [ chunk ] = new int [ CHUNK_SIZE + _NUM ] ; System . arraycopy ( INIT_ARRAY , _NUM , data [ chunk ] , _NUM , CHUNK_SIZE ) ; }
17281	public DockerPortMapping withHostPort ( int hostPort ) { DockerPortMapping newMapping = new DockerPortMapping ( ) ; newMapping . protocol = protocol ; newMapping . containerPort = containerPort ; newMapping . hostIp = hostIp ; newMapping . hostPort = String . valueOf ( hostPort ) ; return newMapping ; }
17304	public void seekToPlaying ( int milliseconds ) { if ( this . readyPlayer ( this . audioFile ) ) { this . player . seekTo ( milliseconds ) ; Log . d ( LOG_TAG , _CHAR Send a onStatus update for the new seek '' ) ; sendStatusChange ( MEDIA_POSITION , _NULL , ( milliseconds / _NUM . _NUM ) ) ; } else { this . seekOnPrepared = milliseconds ; } }
17311	public float angle ( Vector other ) { double dot = dot ( other ) / ( length ( ) * other . length ( ) ) ; return ( float ) Math . acos ( dot ) ; }
17327	public boolean isRename ( ) { return isRename ; }
17383	public static boolean isMemoryOnlySearch ( int mod ) { return Modifiers . contains ( mod , MEMORY_ONLY_SEARCH ) ; }
17415	public List < Entry > filter ( List < Entry > points ) { return filter ( points , mTolerance ) ; }
17425	public void removeCommunicationListener ( FTPCommunicationListener listener ) { communicationListeners . remove ( listener ) ; }
17439	public static void fireNotification ( Context context , Task [ ] tasks ) { if ( tasks . length == _NUM ) { fireForSingleTask ( context , tasks [ _NUM ] ) ; } else { fireForMultipleTasks ( context , tasks ) ; } }
17492	public Job build ( ) { mValidator . ensureValid ( this ) ; return new Job ( this ) ; }
17524	boolean isEmpty ( ) { return mDescription . isEmpty ( ) && mTypes . isEmpty ( ) ; }
17541	public void logCompleted ( String message ) { this . clear ( ) ; if ( monitor != _NULL ) { monitor . subTask ( _CHAR _CHAR ) ; } }
17587	public void notifyFailed ( Throwable exception ) throws RuntimeException { exec . shutdownNow ( ) ; LOGGER . error ( exception ) ; throw new RuntimeException ( exception ) ; }
17630	private static boolean fromIniString ( @ Nullable String s ) { return _CHAR yes _CHAR . equals ( s ) ; }
17726	public void removeAndCreateNewLog ( ) { logMgrLock . lock ( ) ; try { VanillaDb . fileMgr ( ) . rebuildLogFile ( ) ; appendNewBlock ( ) ; } finally { logMgrLock . unlock ( ) ; } }
17740	public void treeExpanded ( TreeExpansionEvent event ) { }
17741	public void toggleSelection ( int position ) { if ( selectedItems . get ( position , _BOOL ) ) { selectedItems . delete ( position ) ; } else { selectedItems . put ( position , _BOOL ) ; } notifyItemChanged ( position ) ; }
17755	private static int nonEmptyLists ( List < ? > ... lists ) { int nonEmpty = _NUM ; for ( List < ? > list : lists ) { if ( list != _NULL && list . size ( ) > _NUM ) { ++ nonEmpty ; } } return nonEmpty ; }
17778	public void transformValues ( TShortFunction function ) { for ( int i = _pos ; i -- > _NUM ; ) { _data [ i ] = function . execute ( _data [ i ] ) ; } }
17784	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Provoker_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
17829	public static Builder register ( Application application , String encryptionKey ) { if ( encryptionKey == _NULL ) throw new RuntimeException ( ERROR_ENCRYPTION_KEY_IS_NULL ) ; RxActivityResult . register ( application ) ; return new Builder ( application , encryptionKey ) ; }
17843	public float connectedDistanceToRoot ( ScoutWidget [ ] list , Direction direction ) { float value = recursiveConnectedDistanceToRoot ( list , direction ) ; cacheRootDistance ( direction , value ) ; return value ; }
17874	public int memberOf ( ) { return theMemberOf ; }
17892	@ Override public synchronized void remove ( String key ) { boolean deleted = getFileForKey ( key ) . delete ( ) ; removeEntry ( key ) ; if ( ! deleted ) { VolleyLog . d ( _CHAR Could not delete cache entry for key = % s , filename = % s _CHAR , key , getFilenameForKey ( key ) ) ; } }
17910	private void put122 ( final int b , final int s1 , final int s2 ) { pool . put12 ( b , s1 ) . putShort ( s2 ) ; }
17911	public void insertAfter ( Unit toInsert , Unit point ) { if ( point == mTail ) mTail = toInsert ; Chain < Unit > methodBody = mBody . getUnits ( ) ; methodBody . insertAfter ( toInsert , point ) ; }
17913	public PhotosGetCommentsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
17938	public static LSSerializer createLSSerializer ( DOMImplementationLS impl , boolean includeXmlDeclaration , boolean enablePrettyPrint ) { LSSerializer writer = impl . createLSSerializer ( ) ; DOMConfiguration domConfig = writer . getDomConfig ( ) ; domConfig . setParameter ( _CHAR xml - declaration _CHAR , includeXmlDeclaration ) ; domConfig . setParameter ( _CHAR format - pretty - print _CHAR , enablePrettyPrint ) ; return writer ; }
17942	public List < String > tokenize ( String fileName ) { JavaRDD < String > input = readTextFile ( fileName ) ; JavaRDD < String > output = tokenize ( input ) ; return output . collect ( ) ; }
17956	public char nextClean ( ) throws JSONException { for ( ; ; ) { char c = next ( ) ; if ( c == _NUM || c > _CHAR ) { return c ; } } }
17974	public void addLine ( @ NotNull RangedContinuousSeries series ) { mLinesConfig . put ( series , new LineConfig ( LineConfig . COLORS [ mNextLineColorIndex ++ ] ) ) ; mNextLineColorIndex % = LineConfig . COLORS . length ; }
17992	public static ValueGetterSpacePredicate < ServerEntry > pathNotNull ( String path ) { return path ( path , isNotNull ( ) ) ; }
18005	protected MessagesCreateChatQuery userIds ( int ... value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
18011	public final void seek ( final long offset ) { try { bs . seek ( offset ) ; } catch ( IOException e ) { System . err . println ( _CHAR Seek failed _CHAR + e ) ; } }
18012	public MyDialog heightParam ( int height ) { if ( mLayoutHeight != height ) { mLayoutHeight = height ; if ( isShowing ( ) && mContentView != _NULL ) { mRunShowAnimation = _BOOL ; mContainer . forceLayout ( ) ; mContainer . requestLayout ( ) ; } } return this ; }
18080	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_TOO_LOW_LEVEL_TO_INVITE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18086	public static int divideToFloor ( int numerator , int denominator ) { Double result = Math . floor ( ( double ) numerator / denominator ) ; return result . intValue ( ) ; }
18095	@ Override public synchronized void remove ( String key ) { boolean deleted = getFileForKey ( key ) . delete ( ) ; removeEntry ( key ) ; if ( ! deleted ) { VolleyLog . d ( _CHAR Could not delete cache entry for key = % s , filename = % s _CHAR , key , getFilenameForKey ( key ) ) ; } }
18109	private void addCachedLegionMember ( LegionMember legionMember ) { this . allCachedLegionMembers . addMember ( legionMember ) ; }
18140	public Value count ( Value obj ) { return new AggregationFunction ( obj , AggregationType . COUNT ) ; }
18150	public static void copyInternal ( FloatBuffer buf , int fromPos , int toPos , int length ) { float [ ] data = new float [ length ] ; buf . position ( fromPos ) ; buf . get ( data ) ; buf . position ( toPos ) ; buf . put ( data ) ; }
18161	private void removeEntry ( String key ) { CacheHeader entry = mEntries . get ( key ) ; if ( entry != _NULL ) { mTotalSize -= entry . size ; mEntries . remove ( key ) ; } }
18191	public FriendsGetRequestsQueryWithExtended needMutual ( Boolean value ) { return unsafeParam ( _CHAR need_mutual _CHAR , value ) ; }
18197	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Nullable ResourceHandle tryToGetPooledResourceHandle ( ResourceKey < K > resourceKey ) { R resource = cache . get ( resourceKey ) ; if ( resource == _NULL ) { return _NULL ; } return ( resourceKey . getStatus ( ) == Status . IDLE ) && resourceKey . goFromIdleToInFlight ( ) ? ( ResourceHandle ) resourceKey . handle : _NULL ; }
18210	private void startFeedbackActivity ( @ NonNull Result result ) { Intent intent = FeedbackActivity . newIntent ( activity , result . getScreenshotUri ( ) , result . getData ( ) ) ; activity . startActivity ( intent ) ; }
18218	protected AdsGetDemographicsQuery idsType ( AdsGetDemographicsIdsType value ) { return unsafeParam ( _CHAR ids_type _CHAR , value ) ; }
18285	public static int px2dip ( Context context , float pxValue ) { return ( int ) ( pxValue / getDensity ( context ) + _NUM . _NUM ) ; }
18312	public final boolean allowsInsecureConnection ( ) { return noSSLCheckbox . isSelected ( ) ; }
18362	public void stop ( ) { this . run = _BOOL ; }
18363	public static void error ( @ Nullable Class < ? > caller , Throwable throwable , String message , Object ... args ) { android . util . Log . e ( tag ( caller ) , String . format ( Locale . ENGLISH , message , args ) , throwable ) ; }
18441	private void storeLegionMember ( LegionMember legionMember , boolean newMember ) { if ( newMember ) { addCachedLegionMember ( legionMember ) ; DAOManager . getDAO ( LegionMemberDAO . class ) . saveNewLegionMember ( legionMember ) ; } else { DAOManager . getDAO ( LegionMemberDAO . class ) . storeLegionMember ( legionMember . getObjectId ( ) , legionMember ) ; } }
18460	public GeExpr newGeExpr ( Value op1 , Value op2 ) { return new GGeExpr ( op1 , op2 ) ; }
18467	public boolean isValid ( ) { return face ( ) < NUM_FACES && ( ( lowestOnBit ( ) & ( _NUM ) ) != _NUM ) ; }
18475	private void insertEntry ( Entry e , long now ) { e . calcRenew ( now ) ; leases . put ( e , e ) ; }
18478	public PhotosEditAlbumQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
18527	private void removeOrphanedStates ( Context context ) { AppWidgetManager wm = AppWidgetManager . getInstance ( context ) ; int [ ] ids = wm . getAppWidgetIds ( getComponentName ( context ) ) ; for ( int id : ids ) { BookmarkThumbnailWidgetService . deleteWidgetState ( context , id ) ; } }
18552	@ Override public boolean hasIntercept ( ) { return this . hasIntercept ; }
18566	public static Predicate < EmailData > containsText ( final String text ) { return _NULL ; }
18585	public void watchThreadsPoll ( PreferenceChangeListener pcl ) { addListener ( INT_KEY_THREADS_POLL , pcl ) ; }
18639	public void onRestoreInstanceState ( Bundle savedInstanceState ) { selectedItems = savedInstanceState . getIntegerArrayList ( TAG ) ; }
18713	public PhotosCreateCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
18717	public IfStmt newIfStmt ( Value condition , UnitBox target ) { return new JIfStmt ( condition , target ) ; }
18742	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_STATUS_DURATION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18753	private void removeEntry ( String key ) { CacheHeader entry = mEntries . get ( key ) ; if ( entry != _NULL ) { mTotalSize -= entry . size ; mEntries . remove ( key ) ; } }
18755	public Iterator items ( String group ) { return items ( group , ( Predicate ) _NULL ) ; }
18775	public void add ( int val ) { IntListNode node = new IntListNode ( val ) ; if ( head == _NULL ) { head = node ; tail = node ; } else { tail . next = node ; tail = node ; } }
18787	public ShlExpr newShlExpr ( Value op1 , Value op2 ) { return new JShlExpr ( op1 , op2 ) ; }
18836	public void success ( JSONObject message ) { sendPluginResult ( new PluginResult ( PluginResult . Status . OK , message ) ) ; }
18837	public static String tokenText ( Element t ) { if ( ! t . getNodeName ( ) . equals ( MaryXML . TOKEN ) ) throw new DOMException ( DOMException . INVALID_ACCESS_ERR , _CHAR Only t elements allowed , received _CHAR + t . getNodeName ( ) + _CHAR . _CHAR ) ; return getPlainTextBelow ( t ) . trim ( ) ; }
18877	public ArithmeticPostAggregation withFn ( ArithmeticPostAggregationFunction fn ) { return new ArithmeticPostAggregation ( getName ( ) , fn , getFields ( ) ) ; }
18891	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonBindingGroupGate_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
18897	public boolean isCDATAAttribute ( QName elName , QName atName ) { int elDeclIdx = getElementDeclIndex ( elName ) ; return ! ( getAttributeDecl ( elDeclIdx , fAttributeDecl ) && fAttributeDecl . simpleType . type != XMLSimpleType . TYPE_CDATA ) ; }
18911	public void onOk ( int taskId ) { TransferablePlayer tplayer = this . transfers . remove ( taskId ) ; textLog . info ( _CHAR taskId : _CHAR + taskId + _CHAR ; [ TransferComplete ] _CHAR ) ; PlayerService . deletePlayerFromDB ( tplayer . playerId ) ; }
18913	public static boolean isContent ( int c ) { return ( c < _NUM && ( CHARS [ c ] & MASK_CONTENT ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
18914	public void addWord ( Item tokenItem , String word ) { assert ( tokenItem != _NULL ) ; Item wordItem = tokenItem . createDaughter ( ) ; FeatureSet featureSet = wordItem . getFeatures ( ) ; featureSet . setString ( _CHAR name _CHAR , word ) ; relation . appendItem ( wordItem ) ; }
18922	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelDeBuff_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
18929	public void clear ( ) { actions . clear ( ) ; errorCodeMap . clear ( ) ; otherwiseActions . clear ( ) ; alwaysActions . clear ( ) ; if ( localContext != _NULL ) { localContext . get ( ) . clear ( ) ; } }
18987	private void closeConnectionQuietly ( ) { response . body ( ) . close ( ) ; response = _NULL ; responseByteStream = _NULL ; }
18993	public static AttributeSelection createAttributes ( Class < ? > expectedDataType , FieldConfigBase field , boolean rasterSymbol ) { AttributeSelection obj = new AttributeSelection ( expectedDataType , field ) ; obj . updateAttributeSelection ( rasterSymbol ) ; return obj ; }
18996	public PhotosRestoreQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
19003	public void expand ( double b ) { clip [ _NUM ] -= b ; clip [ _NUM ] -= b ; clip [ _NUM ] += b ; clip [ _NUM ] += b ; }
19023	public SegmentMetadataQuery withIntervals ( Collection < Interval > intervals ) { return new SegmentMetadataQuery ( getDataSource ( ) , intervals ) ; }
19030	private DataQueryParams retainDataDimension ( DataDimensionItemType itemType ) { DimensionalObject dimension = getDimensionOrFilter ( DATA_X_DIM_ID ) ; List < DimensionalItemObject > items = AnalyticsUtils . getByDataDimensionItemType ( itemType , dimension . getItems ( ) ) ; dimension . getItems ( ) . clear ( ) ; dimension . getItems ( ) . addAll ( items ) ; return this ; }
19091	public static boolean persistentStorageDirectoryExists ( ) { return new File ( getPersistentStorageDirectoryString ( ) ) . isDirectory ( ) ; }
19106	public static boolean checkIfAutoLoadMergingRequired ( ) { String isLoadMergeEnabled = CarbonProperties . getInstance ( ) . getProperty ( CarbonCommonConstants . ENABLE_AUTO_LOAD_MERGE , CarbonCommonConstants . DEFAULT_ENABLE_AUTO_LOAD_MERGE ) ; if ( isLoadMergeEnabled . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) { return _BOOL ; } return _BOOL ; }
19134	public boolean isRestoredFromConfigfile ( ) { return restoredFromConfigfile ; }
19167	public static String store ( String name , InputStream in ) throws IOException { String id = id ( ) ; store ( X . EMPTY , id , name , X . EMPTY , _NUM , in . available ( ) , in , - _NUM , _BOOL , - _NUM ) ; return id ; }
19199	public LtExpr newLtExpr ( Value op1 , Value op2 ) { return new GLtExpr ( op1 , op2 ) ; }
19216	public void toJSON ( JSON jo ) { jo . putAll ( getAll ( ) ) ; }
19226	public static boolean isFifo ( int mod ) { return Modifiers . contains ( mod , FIFO ) ; }
19243	public static String slashify ( String s ) { if ( s == _NULL ) { return _NULL ; } return s . replace ( _CHAR , _CHAR ) ; }
19247	public void close ( ) { connectionPool . freeConnection ( cpeer ) ; }
19254	public boolean isUnindexSupported ( ) { return _BOOL ; }
19259	@ Deprecated public static boolean isMatchByID ( int mod ) { return Modifiers . contains ( mod , MATCH_BY_ID ) ; }
19286	public static SM_SYSTEM_MESSAGE STR_VENDOR_REGISTER_SOLD_OUT ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( nameId ) ) ; }
19336	private boolean isMaintainAspectRatio ( ) { return preferences . getBoolean ( _CHAR SplashMaintainAspectRatio _CHAR , _BOOL ) ; }
19344	static < T > void buildError ( Subscriber < T > subscriber , Exception exception ) { subscriber . onError ( exception ) ; }
19346	@ Override public final short readShort ( ) throws IOException { dis . readFully ( work , _NUM , _NUM ) ; return ( short ) ( ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) ) ; }
19351	protected PhotosReportCommentQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
19356	public PhotosDeleteQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
19387	@ Override protected void checkVectorDimensions ( RealVector v ) throws MathIllegalArgumentException { checkVectorDimensions ( v . getDimension ( ) ) ; }
19388	private static int calculateTotalBytes ( ByteBuffer [ ] byteBufferArr ) { int total = _NUM ; for ( int index = _NUM ; index < byteBufferArr . length ; index ++ ) { total += byteBufferArr [ index ] . capacity ( ) ; } return total ; }
19401	public void addHandlerSideQuestDrop ( int questId , int npcId , int itemId , int amount , int chance ) { HandlerSideDrop hsd = new HandlerSideDrop ( questId , npcId , itemId , amount , chance ) ; QuestService . addQuestDrop ( hsd . getNpcId ( ) , hsd ) ; }
19422	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
19424	public static SM_SYSTEM_MESSAGE STR_DUEL_PARTNER_IN_DUEL_ALREADY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
19430	public boolean wantTag ( Tag t ) { return ( t instanceof FieldWriteTag ) ; }
19461	public boolean isUnindexSupported ( ) { return _BOOL ; }
19464	public static float convertPixelsToDp ( float px , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float dp = px / ( ( float ) metrics . densityDpi / DisplayMetrics . DENSITY_DEFAULT ) ; return dp ; }
19482	public boolean isSecretAttribute ( String attribute ) { return attribute . startsWith ( _CHAR @ _CHAR ) ; }
19486	private void updateScreenNumber ( @ Nullable DesignSurface surface ) { if ( surface != _NULL ) { myXScreenNumber = ! surface . isStackVertically ( ) && surface . getScreenMode ( ) == BOTH ? _NUM : _NUM ; myYScreenNumber = surface . isStackVertically ( ) && surface . getScreenMode ( ) == BOTH ? _NUM : _NUM ; } }
19495	public String readLine ( ) { String line ; try { line = scanner . nextLine ( ) ; } catch ( NoSuchElementException e ) { line = _NULL ; } return line ; }
19505	public void onTargetLongClick ( TapTargetView view ) { onTargetClick ( view ) ; }
19508	public void toAll ( List < EntityPlayerMP > players ) { PacketWrapper packet = new PacketWrapper ( channel , new Packet ( this ) ) ; players . stream ( ) . map ( _NULL ) . forEach ( _NULL ) ; }
19531	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_ATE_FOOD_2 ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
19565	static short readShort ( final byte [ ] b , final int index ) { return ( short ) ( ( ( b [ index ] & _NUM ) << _NUM ) | ( b [ index + _NUM ] & _NUM ) ) ; }
19609	public static SM_SYSTEM_MESSAGE STR_BUY_SELL_ITEM_CAN_NOT_BE_SELLED_TO_NPC ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
19640	public void discard ( ) { hars . clear ( ) ; }
19652	public LeadsGetStatsQuery dateStart ( String value ) { return unsafeParam ( _CHAR date_start _CHAR , value ) ; }
19664	public boolean contains ( E comparable ) { if ( comparable == _NULL ) return _BOOL ; if ( this . root == _NULL ) return _BOOL ; return this . contains ( this . root , comparable ) != _NULL ; }
19687	public void disableGridDashedLine ( ) { mGridDashPathEffect = _NULL ; }
19690	public boolean hasProgramIncidentStartDate ( ) { return programIncidentStartDate != _NULL ; }
19714	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OpenAerial_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
19745	public Schema schema ( ) { return theSchema ; }
19778	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Summon_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
19790	public boolean hasNonEmptyIntersection ( PointsToSet other ) { return oldSet . hasNonEmptyIntersection ( other ) || newSet . hasNonEmptyIntersection ( other ) ; }
19809	private void removeEntry ( String key ) { CacheHeader entry = mEntries . get ( key ) ; if ( entry != _NULL ) { mTotalSize -= entry . size ; mEntries . remove ( key ) ; } }
19832	@ Override public boolean validateLabel ( String label ) { Objects . requireNonNull ( label , _CHAR label can not be _NULL _CHAR ) ; return ! labels . contains ( label ) ; }
19858	protected NewsfeedGetBannedQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
19860	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , FormatException { return decode ( image , _NULL ) ; }
19865	void addContext ( ContextVarNode cvn , Object context ) { if ( cvns == _NULL ) cvns = new HashMap < Object , ContextVarNode > ( ) ; cvns . put ( context , cvn ) ; }
19870	public static SM_SYSTEM_MESSAGE STR_GUILD_BANISHIED_FROM_GUILD_BY_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
19932	public void restoreRemovedStateManagers ( Collection < OpenJPAStateManager > stateManagersToRestore ) { for ( OpenJPAStateManager sm : stateManagersToRestore ) { sm . getPersistenceCapable ( ) . pcReplaceStateManager ( sm ) ; } }
19937	public static NotEqualsSpacePredicate notEqual ( Object value ) { return new NotEqualsSpacePredicate ( value ) ; }
19944	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_OPTION_FAILED ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
19954	public static void init ( Configuration conf ) { ROOT = conf . getString ( _CHAR repo . path _CHAR , _CHAR / opt / repo _CHAR ) ; }
19966	public boolean isUnindexSupported ( ) { return _BOOL ; }
19968	public void toggleEvolvedVariant ( View v ) { fillTokenList ( clipboardMaxEvolutionVariant . isChecked ( ) ) ; }
19978	public void deleteComponent ( String parsys , String componentName ) { globalBar . switchToEditMode ( ) ; getParsys ( parsys ) . deleteComponent ( componentName ) ; verifyParsysRerendered ( parsys ) ; }
19985	@ Override public void commit ( ) throws RemoteException { tx . commit ( ) ; try { tx = VanillaDb . txMgr ( ) . newTransaction ( isolationLevel , readOnly ) ; } catch ( Exception e ) { throw new RemoteException ( _CHAR error creating transaction _CHAR , e ) ; } }
19987	public VideoDeleteCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
19996	public void onSearchResultsLoaded ( boolean wasPrefetch ) { if ( mHasExpanded || mHasMaximized ) { assert mSearchViewStartTimeNs != _NUM ; long durationMs = ( System . nanoTime ( ) - mSearchViewStartTimeNs ) / _NUM ; logSearchPanelLoadDuration ( wasPrefetch , durationMs ) ; } mIsSearchPanelFullyPreloaded = _BOOL ; }
20036	public String fileName ( ) { return fileName ; }
20042	public void addFirst ( E u ) { innerChain . addFirst ( u ) ; }
20062	public void add ( Action a ) { m_actions . add ( a ) ; }
20065	public boolean contains ( short value ) { return lastIndexOf ( value ) >= _NUM ; }
20118	public void add ( final T object ) { synchronized ( mLock ) { mList . add ( object ) ; } notifyDataSetChanged ( ) ; }
20219	public void success ( byte [ ] message ) { sendPluginResult ( new PluginResult ( PluginResult . Status . OK , message ) ) ; }
20279	public boolean wantTag ( Tag t ) { return ( t instanceof DependenceTag ) ; }
20341	public String [ ] upload_appender_file ( byte [ ] file_buff , int offset , int length , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_appender_file ( group_name , file_buff , offset , length , file_ext_name , meta_list ) ; }
20349	public int read ( ) throws IOException { throw new IllegalArgumentException ( _CHAR this method is not yet supported _CHAR ) ; }
20368	protected Object newInitialFlow ( ) { return emptySet . emptySet ( ) ; }
20382	public boolean hasUserGroupsToAlert ( ) { for ( ValidationRuleGroup group : groups ) { if ( group . hasUserGroupsToAlert ( ) ) { return _BOOL ; } } return _BOOL ; }
20406	public static SM_SYSTEM_MESSAGE STR_MSG_PARTY_MATCH_ALREADY_SENT_DECLINE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20421	public static SM_SYSTEM_MESSAGE STR_MSG_TOWER_DEFENCE_INVITED_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20435	protected void okPressed ( ) { if ( createNewConfig ( ) ) super . okPressed ( ) ; else { Shell defaultShell = SootPlugin . getDefault ( ) . getWorkbench ( ) . getActiveWorkbenchWindow ( ) . getShell ( ) ; String projectName = getSootMainProjectWidget ( ) . getText ( ) . getText ( ) ; MessageDialog . openError ( defaultShell , _CHAR Unable to find Soot Main Project _CHAR , _CHAR Project _CHAR + projectName + _CHAR does not exist , _CHAR + _CHAR is no Java project or is closed . '' ) ; } }
20446	public boolean negativeOrNull ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( sign < _NUM ) || ( ( mant [ mant . length - _NUM ] == _NUM ) && ! isInfinite ( ) ) ; }
20451	public boolean hasChanged ( ) { return System . identityHashCode ( config ) != initialHash ; }
20461	public static float convertPixelsToDp ( float px , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float dp = px / ( metrics . densityDpi / _NUM ) ; return dp ; }
20462	public void writeToFile ( String fileName ) throws IOException { FileWriter fw = new FileWriter ( fileName ) ; fw . append ( this . toString ( ) ) ; fw . close ( ) ; }
20463	public boolean isTrackingTouch ( ) { return mTrackingTouch ; }
20474	public static int px2sp ( Context context , float pxValue ) { return ( int ) ( pxValue / getFontDensity ( context ) + _NUM . _NUM ) ; }
20478	private static DataValue dv ( Object o ) { return new DataValue ( new Variant ( o ) , StatusCode . GOOD , _NULL , DateTime . now ( ) ) ; }
20492	public static < T > void addService ( Class < T > serviceInterface , T service ) throws RpcException { addService ( _NULL , serviceInterface , service , ServerConfig . DEFAULT_PORT ) ; }
20493	public static SM_SYSTEM_MESSAGE STR_MSG_DELETE_CASH_ITEM_BY_TIMEOUT_IN_WAREHOUSE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20516	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeTypeBoostSkillLevel_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
20552	public boolean isDateType ( ) { return valueType . isDate ( ) ; }
20556	public boolean isRequired ( ) { return proto . getLabel ( ) == FieldDescriptorProto . Label . LABEL_REQUIRED ; }
20577	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { double [ ] points = makeCumulativeTestValues ( ) ; double [ ] points2 = new double [ points . length - _NUM ] ; System . arraycopy ( points , _NUM , points2 , _NUM , points2 . length - _NUM ) ; return points2 ; }
20579	public void firstTimeExperienceComplete ( ) throws LoginFailedException , RemoteServerException { markTutorial ( TutorialStateOuterClass . TutorialState . FIRST_TIME_EXPERIENCE_COMPLETE ) ; }
20586	public void toNativeArray ( int [ ] dest , int offset , int len ) { if ( len == _NUM ) { return ; } if ( offset < _NUM || offset >= _pos ) { throw new ArrayIndexOutOfBoundsException ( offset ) ; } System . arraycopy ( _data , offset , dest , _NUM , len ) ; }
20612	public short [ ] toNativeArray ( ) { return toNativeArray ( _NUM , _pos ) ; }
20642	public void changeContrast ( float value ) { this . contrast += value ; }
20650	public boolean add ( Object e ) { synchronized ( this ) { Object [ ] elements = getArray ( ) ; int len = elements . length ; Object [ ] newElements = copyOf ( elements , len + _NUM ) ; newElements [ len ] = e ; setArray ( newElements ) ; } return _BOOL ; }
20673	@ Override public long blocksAccessed ( ) { return p . blocksAccessed ( ) ; }
20699	private < E > E castConcept ( Class < E > type ) { try { return type . cast ( this ) ; } catch ( ClassCastException e ) { throw new InvalidConceptTypeException ( ErrorMessage . INVALID_OBJECT_TYPE . getMessage ( this , type ) ) ; } }
20719	public Value index ( Value target ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
20737	public boolean acceptsURL ( String url ) throws SQLException { return ( url . startsWith ( GConnection . JDBC_GIGASPACES ) ) ; }
20781	public boolean isDrawSliceTextEnabled ( ) { return mDrawXLabels ; }
20782	public static boolean isFilterClass ( String clzName ) { if ( clzName == _NULL || clzName . length ( ) == _NUM ) return _BOOL ; for ( String prefix : Constants . FILTER_PREFIX ) { if ( clzName . startsWith ( prefix ) ) { return _BOOL ; } } return _BOOL ; }
20785	private void addPeriodsToContext ( Collection < Period > periods ) { for ( Period period : periods ) { PeriodTypeExtended periodTypeX = getOrCreatePeriodTypeExtended ( period . getPeriodType ( ) ) ; periodTypeX . getPeriods ( ) . add ( period ) ; } }
20808	public Properties readSettings ( ) throws ProxyException { Properties settings = new Properties ( ) ; try { parseSettings ( _CHAR / system / proxy / _CHAR , settings ) ; parseSettings ( _CHAR / system / http_proxy / _CHAR , settings ) ; } catch ( IOException e ) { Logger . log ( getClass ( ) , LogLevel . ERROR , _CHAR Gnome settings file error . '' , e ) ; throw new ProxyException ( e ) ; } return settings ; }
20814	public boolean isDecaying ( ) { return ( getData ( ) & _NUM ) != _NUM ; }
20824	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_START_FAIL2 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20836	public boolean contains ( BasicBlock b ) { return b . inq ; }
20852	public boolean isTitleEnabled ( ) { return mCollapsingTitleEnabled ; }
20984	@ Override public void onNewItem ( int id , Barcode item ) { mGraphic . setId ( id ) ; }
21006	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
21014	public void msgNotFound ( ) { JOptionPane . showMessageDialog ( _NULL , _CHAR Search String _CHAR + pattern + _CHAR not found _CHAR , _CHAR Find _CHAR , JOptionPane . INFORMATION_MESSAGE ) ; }
21036	public static double determineAveragePower ( DoubleDataSource signal ) { if ( signal == _NULL ) throw new NullPointerException ( _CHAR Received _NULL argument _CHAR ) ; double [ ] signalData = signal . getAllData ( ) ; return determineAveragePower ( signalData ) ; }
21042	public void enable ( ) { LOGGER . debug ( _CHAR enable listener _CHAR ) ; setEnabled ( _BOOL ) ; }
21051	public FriendsGetRequestsQueryWithNeedMutual offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
21088	public Set < String > groupFields ( ) { return groupFields ; }
21099	public NewArrayExpr newNewArrayExpr ( Type type , Value size ) { return new JNewArrayExpr ( type , size ) ; }
21130	public void notifyFailed ( Throwable exception ) throws CarbonSortKeyAndGroupByException { dataSorterAndWriterExecutorService . shutdownNow ( ) ; intermediateFileMerger . close ( ) ; parameters . getObserver ( ) . setFailed ( _BOOL ) ; LOGGER . error ( exception ) ; throw new CarbonSortKeyAndGroupByException ( exception ) ; }
21158	private Iterator < RecordEntryRawMetadata > rawMetadataFromCql ( final Iterator < Row > iter ) { return Iterators . transform ( iter , _NULL ) ; }
21162	@ Override public void toggleSelection ( T photo ) { if ( selectedPhotos . contains ( photo ) ) { selectedPhotos . remove ( photo ) ; } else { selectedPhotos . add ( photo ) ; } }
21181	private void requestFocus ( View view ) { if ( view . requestFocus ( ) ) { getWindow ( ) . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_STATE_ALWAYS_VISIBLE ) ; } }
21204	public static List < DependencyGraph > read ( String fileName , char format ) { if ( format == _CHAR ) return readCoNLLX ( fileName ) ; else if ( format == _CHAR ) return readCoNLLU ( fileName ) ; return _NULL ; }
21228	public boolean canManage ( UserGroup userGroup ) { return userGroup != _NULL && CollectionUtils . containsAny ( groups , userGroup . getManagedByGroups ( ) ) ; }
21229	@ VisibleForTesting public boolean doesContainAWord ( String selection ) { return mContainsWordPattern . matcher ( selection ) . find ( ) ; }
21265	public void removeIdentifier ( String idName ) { if ( needsSyncData ( ) ) { synchronizeData ( ) ; } if ( identifiers == _NULL ) { return ; } identifiers . remove ( idName ) ; }
21267	public static ExpectedCondition < Boolean > elementNotPresent ( final By bySelector ) { return _NULL ; }
21283	public int timePassed ( ) { final long time = AnimationUtils . currentAnimationTimeMillis ( ) ; final long startTime = Math . min ( mScrollerX . mStartTime , mScrollerY . mStartTime ) ; return ( int ) ( time - startTime ) ; }
21309	private static UInteger valueOfUnchecked ( long value ) { UInteger cached ; if ( ( cached = getCached ( value ) ) != _NULL ) return cached ; return new UInteger ( value , _BOOL ) ; }
21310	public static SM_SYSTEM_MESSAGE STR_FORCE_DEMOTE_MANAGER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21344	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
21358	public static SM_SYSTEM_MESSAGE STR_FORCE_INVITE_PARTY_HIM ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
21359	public static boolean isDirtyRead ( int mod ) { return Modifiers . contains ( mod , DIRTY_READ ) ; }
21365	public void loadUrl ( String url , Map < String , String > additionalHttpHeaders ) { loadUrl ( url , additionalHttpHeaders , _NULL ) ; }
21377	@ Override public IntegerDistribution makeDistribution ( ) { return new HypergeometricDistribution ( _NUM , _NUM , _NUM ) ; }
21378	private void doNormalizedStep ( boolean isLast ) { if ( ! bounds . firstIncluded ( ) && first . getTime ( ) == last . getTime ( ) ) { return ; } handler . handleStep ( last , isLast ) ; }
21388	@ Override public boolean validateLabel ( String label ) { return _BOOL ; }
21426	public char readChar ( ) { scanner . useDelimiter ( EMPTY_PATTERN ) ; String ch = scanner . next ( ) ; assert ch . length ( ) == _NUM : _CHAR Internal ( Std ) In . readChar ( ) error ! _CHAR + _CHAR Please contact the authors . '' ; scanner . useDelimiter ( WHITESPACE_PATTERN ) ; return ch . charAt ( _NUM ) ; }
21431	public boolean isPaused ( ) { return mPaused ; }
21435	public boolean isBinary ( ) { return isBinary ; }
21445	public boolean hasAttribute ( final WebElement element , final String attribute , int timeout ) { return isConditionMet ( _NULL , timeout ) ; }
21454	protected void onSlideAnimationEnd ( ) { }
21472	public VideoEditCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
21475	public void destroy ( ) { ActivityManager . stopThread ( ) ; }
21538	private void doNormalizedStep ( final boolean isLast ) { if ( ! bounds . firstIncluded ( ) && first . getTime ( ) . getReal ( ) == last . getTime ( ) . getReal ( ) ) { return ; } handler . handleStep ( last , isLast ) ; }
21576	private String fName ( String name ) { return dir . getPath ( ) + File . separator + name ; }
21583	private void makeCacheDirectory ( ) { File cacheDir = new File ( CACHE_DIRECTORY ) ; if ( ! cacheDir . exists ( ) ) { cacheDir . mkdir ( ) ; } }
21637	protected int sinkEvent ( Widget widget , String typeName ) { return Event . getTypeInt ( typeName ) ; }
21645	public boolean isStrict ( ) { return this . strict ; }
21652	public synchronized void checkAndWaitForSyslogSynchronized ( Object sourceAttribute , String schema , MithraDatabaseObject databaseObject ) { long now = System . currentTimeMillis ( ) ; if ( now > nextTimeToCheck ) { this . checkAndWaitForSyslog ( sourceAttribute , schema , databaseObject ) ; } }
21668	public static long calculateDuration ( int dayCount ) { if ( dayCount == _NUM ) { return Integer . MAX_VALUE ; } Calendar cal = Calendar . getInstance ( ) ; cal . add ( Calendar . DATE , + dayCount ) ; return ( ( cal . getTimeInMillis ( ) - System . currentTimeMillis ( ) ) / _NUM ) ; }
21678	public static Coordinate createCoordinateFromJson ( JsonNode json ) { return new Coordinate ( json . get ( _NUM ) . asDouble ( ) , json . get ( _NUM ) . asDouble ( ) ) ; }
21695	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_END_A_TO_B ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
21786	protected void execWithInput ( CommandInput commandInput , String command , CompletionHandler completionHandler ) { execWithInput ( commandInput , command , completionHandler , _NULL , SSH_OPERATION_TIMEOUT_SHORT , TimeUnit . SECONDS ) ; }
21814	protected void clearResults ( ) { setStatus ( _CHAR _CHAR , _BOOL ) ; if ( mResultBar != _NULL ) { mResultBar . clearMatchRects ( ) ; } }
21824	private void maybePrefetchDnsInBackground ( ) { if ( getIntent ( ) != _NULL && Intent . ACTION_VIEW . equals ( getIntent ( ) . getAction ( ) ) ) { String maybeUrl = IntentHandler . getUrlFromIntent ( getIntent ( ) ) ; if ( maybeUrl != _NULL ) { WarmupManager . getInstance ( ) . maybePrefetchDnsForUrlInBackground ( this , maybeUrl ) ; } } }
21837	public final Observable < T > read ( ) { return Observable . defer ( _NULL ) ; }
21838	public SubExpr newSubExpr ( Value op1 , Value op2 ) { return new JSubExpr ( op1 , op2 ) ; }
21847	public boolean isDescendant ( Integer idAbove , Integer idBelow ) { return id2Address . get ( idBelow ) . startsWith ( id2Address . get ( idAbove ) ) ; }
21860	public boolean ifUserExists ( ) { return this . firebaseAuth . getCurrentUser ( ) != _NULL ; }
21877	protected VideoGetAlbumsQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
21902	public static void moveToNewPage ( Document document ) { document . newPage ( ) ; }
21903	public FriendsAddQuery follow ( Boolean value ) { return unsafeParam ( _CHAR follow _CHAR , value ) ; }
21918	protected String skipEmptyLines ( ) { while ( _BOOL ) { if ( hasNextLine ( ) ) { String next = nextLine ( ) . trim ( ) ; if ( next . length ( ) > _NUM ) return next ; } else return _NULL ; } }
21932	public SecureGetSMSHistoryQuery limit ( Integer value ) { return unsafeParam ( _CHAR limit _CHAR , value ) ; }
21979	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String suffix : this . suffixes ) { if ( caseSensitivity . checkEndsWith ( name , suffix ) ) { return _BOOL ; } } return _BOOL ; }
21989	public EmailBuilder withAttachment ( EmailAttachment attachment ) { this . attachments . add ( attachment ) ; return this ; }
22073	private int [ ] pickLocalAddress ( ) throws IOException { int [ ] ret = pickForcedLocalAddress ( ) ; if ( ret == _NULL ) { ret = pickAutoDetectedLocalAddress ( ) ; } return ret ; }
22105	public void writeInt ( int startPos , int value ) { this . writeBytes ( startPos , _NUM , ByteBuffer . allocate ( _NUM ) . putInt ( value ) . array ( ) ) ; }
22123	public GroupsSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
22134	void addAssociatedTableNameToClearFK ( String associatedTableName ) { List < String > list = getListToClearAssociatedFK ( ) ; if ( ! list . contains ( associatedTableName ) ) { list . add ( associatedTableName ) ; } }
22151	public Vector3D intersection ( final Line line ) { final Vector3D closest = closestPoint ( line ) ; return line . contains ( closest ) ? closest : _NULL ; }
22184	@ Override public final void seek ( final long offset ) { try { bs . seek ( offset ) ; } catch ( IOException e ) { System . err . println ( _CHAR Seek failed _CHAR + e ) ; } }
22259	private boolean isPointerNumChanged ( MotionEvent event ) { return event . getActionMasked ( ) == MotionEvent . ACTION_DOWN || event . getActionMasked ( ) == MotionEvent . ACTION_POINTER_DOWN || event . getActionMasked ( ) == MotionEvent . ACTION_UP || event . getActionMasked ( ) == MotionEvent . ACTION_POINTER_UP || event . getActionMasked ( ) == MotionEvent . ACTION_CANCEL ; }
22289	public synchronized void begin ( E selectedObject ) { this . active = _BOOL ; this . selectedObject = selectedObject ; }
22310	@ Override public synchronized void remove ( String key ) { boolean deleted = getFileForKey ( key ) . delete ( ) ; removeEntry ( key ) ; if ( ! deleted ) { VolleyLog . d ( _CHAR Could not delete cache entry for key = % s , filename = % s _CHAR , key , getFilenameForKey ( key ) ) ; } }
22329	public static int extractNoDictionaryCount ( String noDictionaryDim ) { return extractNoDictionaryDimsArr ( noDictionaryDim ) . length ; }
22352	public static boolean checkAllValuesForNull ( Object [ ] row ) { if ( checkNullForDims ( row [ _NUM ] ) && checkNullForMeasures ( row [ _NUM ] ) && _NULL == row [ _NUM ] ) { return _BOOL ; } return _BOOL ; }
22382	public void insertASObject ( ASObject asobject ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
22415	public WallEditQuery edit ( UserActor actor , int postId ) { return new WallEditQuery ( getClient ( ) , actor , postId ) ; }
22438	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_A_TO_B ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
22442	public boolean isDrawInsideEnabled ( ) { return mDrawInside ; }
22460	public SimpleNotifyContainerConfigurer eventListenerMethod ( Object eventListener , String methodName ) { MethodEventListenerAdapter methodEventListenerAdapter = new MethodEventListenerAdapter ( ) ; methodEventListenerAdapter . setDelegate ( eventListener ) ; methodEventListenerAdapter . setMethodName ( methodName ) ; methodEventListenerAdapter . afterPropertiesSet ( ) ; notifyEventListenerContainer . setEventListener ( methodEventListenerAdapter ) ; return this ; }
22485	public boolean contains ( String str ) { return ( bList . contains ( str ) ) ; }
22492	private boolean showAppMenu ( View view , boolean startDragging ) { if ( ! mMenuHandler . isAppMenuShowing ( ) && mMenuHandler . showAppMenu ( view , startDragging ) ) { if ( ! startDragging ) RecordUserAction . record ( _CHAR MobileUsingMenuBySwButtonTap _CHAR ) ; if ( mOnAppMenuShownListener != _NULL ) { mOnAppMenuShownListener . run ( ) ; } return _BOOL ; } return _BOOL ; }
22502	public void increaseWin ( ) { this . win ++ ; }
22505	public boolean hasStartEndDate ( ) { return startDate != _NULL && endDate != _NULL ; }
22528	public static void writeInt ( DataOutputStream dis , boolean isBigEndian , int val ) throws IOException { if ( ! isBigEndian ) { writeLittleEndianInt ( dis , val ) ; } else { dis . writeInt ( val ) ; } }
22536	public static SM_SYSTEM_MESSAGE STR_GUILD_EVENT_LOSE_ARTIFACT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
22547	public static void print ( boolean x ) { out . print ( x ) ; out . flush ( ) ; }
22566	public boolean isValid ( String inetAddress ) { return isValidInet4Address ( inetAddress ) || isValidInet6Address ( inetAddress ) ; }
22567	public FriendsGetQuery listId ( Integer value ) { return unsafeParam ( _CHAR list_id _CHAR , value ) ; }
22569	public void fill ( short val ) { Arrays . fill ( _data , _NUM , _pos , val ) ; }
22575	@ Deprecated private boolean isDefinedAccent ( String accentAttribute ) { if ( _CHAR H * _CHAR . equals ( accentAttribute ) ) return _BOOL ; if ( _CHAR L * _CHAR . equals ( accentAttribute ) ) return _BOOL ; if ( _CHAR L *+ H _CHAR . equals ( accentAttribute ) ) return _BOOL ; if ( _CHAR L *+ ! H _CHAR . equals ( accentAttribute ) ) return _BOOL ; if ( _CHAR L + H * _CHAR . equals ( accentAttribute ) ) return _BOOL ; return _CHAR ! H * _CHAR . equals ( accentAttribute ) ; }
22580	public javax . ws . rs . core . Response buildErrorResponse ( int statusCode , String reason , String description , DruidQuery < ? > druidQuery ) { return RequestHandlerUtils . makeErrorResponse ( statusCode , reason , description , druidQuery , objectMappers . getMapper ( ) . writer ( ) ) ; }
22615	public static boolean checkGeoJsonPointValid ( double longitude , double latitude ) { try { return getGeoJsonPoint ( longitude , latitude ) . isValid ( ) ; } catch ( Exception ex ) { return _BOOL ; } }
22623	public boolean wantTag ( Tag t ) { throw new RuntimeException ( ) ; }
22647	public void rectToPixelPhase ( RectF r , float phaseY ) { r . top *= phaseY ; r . bottom *= phaseY ; mMatrixValueToPx . mapRect ( r ) ; mViewPortHandler . getMatrixTouch ( ) . mapRect ( r ) ; mMatrixOffset . mapRect ( r ) ; }
22663	public void notifyOnActionFired ( View view , String actionType , Object model ) { for ( OnActionFiredListener listener : mActionFiredListeners ) { listener . onActionFired ( view , actionType , model ) ; } }
22689	private static boolean showFlagsForLanguages ( ) { if ( ourFlagSettingAvailable ) { try { if ( ourLanguageFlagField == _NULL ) { ourLanguageFlagField = UISettings . class . getDeclaredField ( _CHAR LANGUAGE_FLAGS _CHAR ) ; } return ourLanguageFlagField . getBoolean ( UISettings . getInstance ( ) ) ; } catch ( Throwable t ) { ourFlagSettingAvailable = _BOOL ; return _BOOL ; } } return _BOOL ; }
22696	public void fill ( int val ) { Arrays . fill ( _data , _NUM , _pos , val ) ; }
22699	public String addSection ( Section section ) { String tag = UUID . randomUUID ( ) . toString ( ) ; addSection ( tag , section ) ; return tag ; }
22706	public boolean allowedAsHttpParameter ( ) { return allowedAsHttpParameter ; }
22724	public Set < Integer > intKeySet ( ) { return data . keySet ( ) . stream ( ) . map ( _NULL ) . flatMap ( _NULL ) . collect ( Collectors . toSet ( ) ) ; }
22847	public CmpgExpr newCmpgExpr ( Value op1 , Value op2 ) { return new JCmpgExpr ( op1 , op2 ) ; }
22862	public FriendsGetRequestsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
22880	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
22894	protected void notifyShowContextualSearch ( GSAContextDisplaySelection selectionContext , @ Nullable URL baseContentViewUrl ) { if ( ! mPolicy . canSendSurroundings ( baseContentViewUrl ) ) selectionContext = _NULL ; for ( ContextualSearchObserver observer : mObservers ) { observer . onShowContextualSearch ( selectionContext ) ; } }
22895	public void addAll ( final Collection < ? extends T > collection ) { synchronized ( mLock ) { mList . addAll ( collection ) ; } notifyDataSetChanged ( ) ; }
22913	public double interceptStdErr ( ) { return Math . sqrt ( svar0 ) ; }
22969	public void rootModified ( ISVNRepositoryLocation root ) { Iterator it = listeners . iterator ( ) ; while ( it . hasNext ( ) ) { IRepositoryListener listener = ( IRepositoryListener ) it . next ( ) ; listener . repositoryModified ( root ) ; } }
23029	public boolean hasNonEmptyIntersection ( PointsToSet other ) { return other != _NULL ; }
23038	public void recover ( ) throws LogException { }
23050	private boolean checkIfNameExists ( String name ) { boolean returnValue = _BOOL ; for ( DrawableData drawable : drawables ) { if ( drawable . name . equals ( name ) ) { returnValue = _BOOL ; break ; } } return returnValue ; }
23054	public static void checkGlError ( String op ) { int error = GLES20 . glGetError ( ) ; if ( error != GLES20 . GL_NO_ERROR ) { String msg = op + _CHAR : glError _NUM _CHAR + Integer . toHexString ( error ) ; Log . e ( TAG , msg ) ; throw new RuntimeException ( msg ) ; } }
23055	@ Override public LogNormalDistribution makeDistribution ( ) { return new LogNormalDistribution ( _NUM . _NUM , _NUM . _NUM ) ; }
23088	public boolean hasOrganisationUnits ( ) { List < DimensionalItemObject > dimOpts = getDimensionOptions ( ORGUNIT_DIM_ID ) ; List < DimensionalItemObject > filterOpts = getFilterOptions ( ORGUNIT_DIM_ID ) ; return ! dimOpts . isEmpty ( ) || ! filterOpts . isEmpty ( ) ; }
23094	public Set < String > stringKeySet ( ) { return data . keySet ( ) . stream ( ) . map ( _NULL ) . flatMap ( _NULL ) . collect ( Collectors . toSet ( ) ) ; }
23096	@ Override public CauchyDistribution makeDistribution ( ) { return new CauchyDistribution ( _NUM . _NUM , _NUM . _NUM ) ; }
23105	private static short rangeCheck ( int value ) throws NumberFormatException { if ( value < MIN_VALUE || value > MAX_VALUE ) { throw new NumberFormatException ( _CHAR Value is out of range : _CHAR + value ) ; } return ( short ) value ; }
23117	private void removeEntry ( String key ) { CacheHeader entry = mEntries . get ( key ) ; if ( entry != _NULL ) { mTotalSize -= entry . size ; mEntries . remove ( key ) ; } }
23125	@ Override public final void element ( String elementName , Augmentations augs ) throws XNIException { addToCurrentGroup ( addUniqueLeafNode ( elementName ) ) ; }
23154	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATK_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
23156	private static void debugPrintln ( String msg ) { if ( DEBUG ) { System . err . println ( _CHAR XERCES : _CHAR + msg ) ; } }
23171	public boolean isTitleEnabled ( ) { return mCollapsingTitleEnabled ; }
23188	public AccountGetBannedQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
23189	public TableIterator iterator ( IntIterator rows ) { return new TableIterator ( this , rows ) ; }
23206	public void loadUrl ( String url , Map < String , String > additionalHttpHeaders , CallBackFunction returnCallback ) { mWebView . loadUrl ( url , additionalHttpHeaders , returnCallback ) ; }
23238	private Typeface cacheFont ( String fontPath ) { Typeface cached = mTypefaceMap . get ( fontPath ) ; if ( cached == _NULL ) { cached = Typeface . createFromAsset ( mAssetManager , fontPath ) ; mTypefaceMap . put ( fontPath , cached ) ; } return cached ; }
23241	public static int divideToCeil ( int numerator , int denominator ) { Double result = Math . ceil ( ( double ) numerator / denominator ) ; return result . intValue ( ) ; }
23244	public UshrExpr newUshrExpr ( Value op1 , Value op2 ) { return new GUshrExpr ( op1 , op2 ) ; }
23270	public void prune ( double dMinCoexistenceImportance ) { Graph . prune ( dMinCoexistenceImportance ) ; }
23306	public static float convertPixelsToDp ( float px , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float dp = px / ( ( float ) metrics . densityDpi / DisplayMetrics . DENSITY_DEFAULT ) ; return dp ; }
23314	public String toString ( ) { String s = _CHAR _CHAR ; s += String . format ( _CHAR % . _NUM N + % . _NUM _CHAR , slope ( ) , intercept ( ) ) ; return s + _CHAR ( R ^ _NUM = _CHAR + String . format ( _CHAR % . _NUM _CHAR , R2 ( ) ) + _CHAR ) _CHAR ; }
23347	public boolean hasBOM ( ) throws IOException { return getBOM ( ) != _NULL ; }
23374	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MASTER_HE_DECLINE_YOUR_OFFER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23380	public static void load ( Context context , Object source , ImageView view ) { Glide . with ( context ) . load ( source ) . centerCrop ( ) . into ( view ) ; }
23423	public LikesIsLikedQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
23441	public < R > R executeTransactionalCommand ( final TransactionalCommand < R > command , final int retryCount ) throws MithraBusinessException { return this . executeTransactionalCommand ( command , new TransactionStyle ( this . transactionTimeout , retryCount ) ) ; }
23456	public static SM_SYSTEM_MESSAGE STR_BUDDY_CANT_ADD_WHEN_HE_IS_ASKED_QUESTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23462	public static SM_SYSTEM_MESSAGE STR_MSG_GET_POLL_REWARD_MONEY ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
23466	public VideoRestoreQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
23476	@ Override public void write ( int b ) { ensureCapacity ( _NUM ) ; _buffer [ _count ++ ] = ( byte ) b ; }
23489	public boolean isHidden ( final List < WebElement > elements , int timeout ) { return isConditionMet ( not ( visibilityOfAllElements ( elements ) ) , timeout ) ; }
23499	public void fill ( int fromIndex , int toIndex , short val ) { if ( toIndex > _pos ) { ensureCapacity ( toIndex ) ; _pos = toIndex ; } Arrays . fill ( _data , fromIndex , toIndex , val ) ; }
23524	private static boolean isSuccessful ( int responseCode ) { return responseCode == _NUM || responseCode == _NUM || responseCode == _NUM ; }
23561	public PhotosMakeCoverQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
23613	public PhotosMoveQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
23616	public static int px2sp ( Context context , float pxValue ) { return ( int ) ( pxValue / getFontDensity ( context ) + _NUM . _NUM ) ; }
23663	public boolean isMp4 ( ) { return isOptionEnabled ( UrlFilterRuleOption . MP4 ) ; }
23679	private void sendResponse ( final Collection < ? extends ClientRequestResult > response ) { sendJsonResponse ( GSON . toJson ( response ) ) ; }
23688	public Builder color ( String color ) { this . color = color ; return this ; }
23690	private static void filterOutCached ( Map < VirtualFile , AndroidFacet > resDirectories ) { resDirectories . keySet ( ) . removeAll ( ourDirMap . keySet ( ) ) ; }
23726	public final TestSubscriber < T > assertTerminated ( ) { if ( cdl . getCount ( ) != _NUM ) { throw new AssertionError ( _CHAR Not terminated _CHAR , _NULL ) ; } return this ; }
23758	public boolean declaresMethod ( String subsignature ) { checkLevel ( SIGNATURES ) ; return declaresMethod ( Scene . v ( ) . getSubSigNumberer ( ) . findOrAdd ( subsignature ) ) ; }
23776	public AemListItem addItem ( ) { addItemButton . click ( ) ; return getLastItem ( ) ; }
23786	public static int sp2px ( Context context , float spValue ) { return ( int ) ( spValue * getFontDensity ( context ) + _NUM . _NUM ) ; }
23809	@ Override public void cycleState ( ) { if ( isEditable ( indexOf ( this ) ) ) { mySource . setEnabled ( ! mySource . isEnabled ( ) ) ; } }
23817	private static String readKeyValue ( Integer keyHandle , String keyPath , String valueName ) { Integer actualKeyHandle = _NULL ; try { actualKeyHandle = openKey ( keyHandle , keyPath ) ; if ( actualKeyHandle == _NULL ) return _NULL ; return queryKeyValue ( actualKeyHandle , valueName ) ; } finally { closeKey ( actualKeyHandle ) ; } }
23870	public String compile ( Map < String , Object > context ) { return _CHAR { _CHAR + attribsExpr . expandString ( context ) + _CHAR } _CHAR ; }
23876	protected void onFaviconReceived ( Bitmap image ) { }
23880	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysHit_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
23902	public void initialise ( ) throws XMLException { loader = new MqttSpyDaemonConfigLoader ( ) ; showInfo ( ) ; }
23912	private boolean hasBacklog ( ) { final long cursor = ringBuffer . getCursor ( ) ; for ( final Sequence consumer : consumerRepository . getLastSequenceInChain ( _BOOL ) ) { if ( cursor > consumer . get ( ) ) { return _BOOL ; } } return _BOOL ; }
23929	public AudioEditQuery edit ( UserActor actor , int ownerId , int audioId ) { return new AudioEditQuery ( getClient ( ) , actor , ownerId , audioId ) ; }
23951	protected PhotosSaveWallPhotoQuery photo ( String value ) { return unsafeParam ( _CHAR photo _CHAR , value ) ; }
23953	public void undoAll ( ) { setConnectionDetails ( lastSavedValues ) ; modified = newConnection ; groupingModified = _BOOL ; }
24100	@ NotNull private static GeneralCommandLine addInstallParameters ( @ NotNull GeneralCommandLine cl , int memorySize ) { cl . addParameters ( _CHAR - m _CHAR , String . valueOf ( memorySize ) ) ; return cl ; }
24118	public ParameterRef newParameterRef ( Type paramType , int number ) { return new ParameterRef ( paramType , number ) ; }
24133	public static void addRows ( Grid grid , SqlRowSet rs ) { int cols = rs . getMetaData ( ) . getColumnCount ( ) ; while ( rs . next ( ) ) { grid . addRow ( ) ; for ( int i = _NUM ; i <= cols ; i ++ ) { grid . addValue ( rs . getObject ( i ) ) ; } } }
24147	public InstanceFieldRef newInstanceFieldRef ( Value base , SootFieldRef f ) { return new GInstanceFieldRef ( base , f ) ; }
24184	private static float calcSum ( float [ ] vals ) { if ( vals == _NULL ) return _NUM ; float sum = _NUM ; for ( float f : vals ) { sum += f ; } return sum ; }
24186	public StyleImageView disableAnimation ( ) { styler . disableAnimation ( ) ; return this ; }
24277	public static Observable < Integer > characters ( CharSequence string ) { return RxJavaPlugins . onAssembly ( new ObservableCharSequence ( string ) ) ; }
24279	public boolean contains ( int value ) { return lastIndexOf ( value ) >= _NUM ; }
24312	public void increaseValue ( TKeyType oXValue , double dYValue ) { hDistro . put ( oXValue , getValue ( oXValue ) + dYValue ) ; }
24336	public static final double logX ( double dNumber , double dBase ) { return Math . log ( dNumber ) / Math . log ( dBase ) ; }
24352	@ Override public int read ( ) throws IOException { if ( this . remaining == _NUM ) { return - _NUM ; } else { int var1 = this . in . read ( ) ; if ( var1 >= _NUM ) { -- this . remaining ; } return var1 ; } }
24388	private void addFilters ( List < DimensionalObject > filters ) { for ( DimensionalObject filter : filters ) { addFilter ( filter ) ; } }
24396	public void draw ( GL10 gl ) { GLES10 . glClear ( GLES10 . GL_COLOR_BUFFER_BIT | GLES10 . GL_DEPTH_BUFFER_BIT ) ; }
24398	public static String formatDate ( Date date ) { return formatDate ( date , PATTERN_RFC1123 ) ; }
24415	protected void updateNodeData ( int r , boolean added ) { if ( added ) { m_links . addRow ( ) ; } else { m_nodeTuples . invalidate ( r ) ; m_links . removeRow ( r ) ; } }
24421	public boolean isAttr ( ) { ResourceUrl url = ResourceUrl . parse ( getSelectedValue ( ) . getRawXmlValue ( ) , getSelectedValue ( ) . isFramework ( ) ) ; return url != _NULL && url . type == ResourceType . ATTR ; }
24466	@ Override public GammaDistribution makeDistribution ( ) { return new GammaDistribution ( _NUM , _NUM ) ; }
24471	public void applyMirroredCorrection ( ResultPoint [ ] points ) { if ( ! mirrored || points == _NULL || points . length < _NUM ) { return ; } ResultPoint bottomLeft = points [ _NUM ] ; points [ _NUM ] = points [ _NUM ] ; points [ _NUM ] = bottomLeft ; }
24476	protected VideoReportQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
24494	private void createImageDescriptor ( String id ) { imageDescriptors . put ( id , imageDescriptorFromPlugin ( PLUGIN_ID , _CHAR icons / _CHAR + id ) ) ; }
24497	public void changeButtonTextColor ( int resId ) { this . slickButtonBackgroundColor = resId ; slickFormSubmitButton . setTextColor ( slickButtonBackgroundColor ) ; slickFormSubmitButton . invalidate ( ) ; }
24554	public static boolean isReadCommitted ( int mod ) { return Modifiers . contains ( mod , READ_COMMITTED ) ; }
24576	public void removeTag ( String aName ) { int tagIndex ; if ( ( tagIndex = searchForTag ( aName ) ) != - _NUM ) { mTagList . remove ( tagIndex ) ; } }
24635	public static ArrayList < String > matches ( String text ) { return matches ( text , ALL ) ; }
24644	public void onFindToolbarShown ( ) { }
24648	public static boolean isFifo ( int mod ) { return Modifiers . contains ( mod , FIFO ) ; }
24675	public JList createList ( ) { JList list = new JList ( m_model ) ; list . setSelectionModel ( m_model ) ; return list ; }
24689	public SecureGetSMSHistoryQuery dateFrom ( Integer value ) { return unsafeParam ( _CHAR date_from _CHAR , value ) ; }
24699	public void addParameter ( Expression e ) { if ( m_group == _NULL ) m_group = e ; else throw new IllegalStateException ( _CHAR This function takes only _NUM parameter . '' ) ; }
24700	private String toUrl ( String testFile ) throws MalformedURLException { return new File ( TestUtil . TEST_DATA_FOLDER + _CHAR pac _CHAR , testFile ) . toURI ( ) . toURL ( ) . toString ( ) ; }
24756	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_BOSS_KILLED ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
24808	public void logStatisticsAsTableDriver ( ) { }
24817	private static long rangeCheck ( long value ) throws NumberFormatException { if ( value < MIN_VALUE || value > MAX_VALUE ) { throw new NumberFormatException ( _CHAR Value is out of range : _CHAR + value ) ; } return value ; }
24827	public static SM_SYSTEM_MESSAGE STR_MSG_QUEST_ERROR_UNEQUIP_QUEST_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24832	void discardFromIdle ( ResourceKey < K > resourceKey , R resource ) { resourceKey . removeFromTransferStack ( ) ; if ( timeToIdlePolicy . isPresent ( ) ) { timeToIdlePolicy . get ( ) . invalidate ( resourceKey ) ; } lifecycle . onRemoval ( resourceKey . getKey ( ) , resource ) ; }
24877	public Element next ( ) { return theNext ; }
24880	public FriendsGetRequestsQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
24916	public static boolean isPowerOfTwo ( long n ) { return ( n > _NUM ) && ( ( n & ( n - _NUM ) ) == _NUM ) ; }
24922	public InstanceOfExpr newInstanceOfExpr ( Value op1 , Type t ) { return new GInstanceOfExpr ( op1 , t ) ; }
24937	public Builder withDefaultDenyDialog ( boolean useDefault ) { buildObj . showDenyDialog = useDefault ; return this ; }
24941	public boolean allowedAsRequestResponseInCodeGen ( ) { return allowedAsRequestResponseInCodeGen ; }
24955	static boolean isLaunchNameMatched ( Launch launch , EmailSenderCase oneCase ) { List < String > configuredNames = oneCase . getLaunchNames ( ) ; return ( _NULL == configuredNames ) || ( configuredNames . isEmpty ( ) ) || configuredNames . contains ( launch . getName ( ) ) ; }
24963	public void update ( ColourMapData newData ) { this . label = newData . label ; setColour ( newData . getColourExpression ( ) ) ; setOpacity ( newData . getOpacity ( ) ) ; setQuantity ( newData . getQuantity ( ) ) ; }
24979	public < T > boolean isProvidedFor ( Class < T > service ) { synchronized ( providers ) { return providers . containsKey ( service ) ; } }
25001	public void addMethodForWrapping ( String className , String subSignature ) { Set < String > methods = this . classList . get ( className ) ; if ( methods == _NULL ) { methods = new HashSet < String > ( ) ; this . classList . put ( className , methods ) ; } methods . add ( subSignature ) ; }
25026	@ Override public boolean markSupported ( ) { return _BOOL ; }
25044	public static SM_SYSTEM_MESSAGE STR_REMOVE_ITEM_OPTION_INVALID_STANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25048	boolean isZero ( ) { return _index <= _NUM ; }
25079	public void removeEntry ( Context context , IEntryHolder entryHolder , boolean origin , boolean fromLeaseExpiration , boolean shouldReplicate ) throws SAException { }
25080	@ Override public boolean accept ( File file ) { return file . canWrite ( ) ; }
25089	public void translateToPoint ( final Vector2D p ) { originOffset = MathArrays . linearCombination ( cos , p . getY ( ) , - sin , p . getX ( ) ) ; }
25119	public static double ssError ( double [ ] predictedValues , double [ ] targetAttribute ) { double ret = _NUM ; for ( int i = _NUM ; i < predictedValues . length ; i ++ ) { ret += Math . pow ( targetAttribute [ i ] - predictedValues [ i ] , _NUM ) ; } return ret ; }
25155	public static boolean nullEquals ( String s1 , String s2 ) { return ( s1 == _NULL ? s2 == _NULL : s1 . equals ( s2 ) ) ; }
25281	public synchronized BlockId append ( String fileName ) { return fileMgr . append ( fileName , contents ) ; }
25283	public static String toQualifiedName ( String internal ) { return internal . replace ( _CHAR , _CHAR ) ; }
25317	public WallEditCommentQuery editComment ( UserActor actor , int commentId ) { return new WallEditCommentQuery ( getClient ( ) , actor , commentId ) ; }
25395	public boolean isJiniProtocol ( ) { return StringUtils . equalsIgnoreCase ( getProtocol ( ) , JINI_PROTOCOL ) ; }
25414	private void emitError ( LengthOfOutputStream stream , Throwable t ) { Subject < Long , Long > lengthBroadcaster = stream . getLengthBroadcaster ( ) ; lengthBroadcaster . onNext ( stream . getResponseLength ( ) ) ; lengthBroadcaster . onError ( t ) ; }
25420	public static Block registerBlock ( Block block ) { return registerBlock ( block , new ItemBlock ( block ) ) ; }
25424	public static boolean isNullOrEmpty ( String string ) { return TextUtils . isEmpty ( string ) ; }
25460	public JavaRDD < String > readTextFile ( String fileName ) { JavaRDD < String > input = jsc . textFile ( fileName ) ; return input . map ( normalizationFunction ) ; }
25502	@ Override public boolean hasFixedPropertiesArray ( ) { return _BOOL ; }
25522	@ Override public String toString ( ) { return _CHAR Entry , x : _CHAR + x + _CHAR y ( sum ) : _CHAR + getY ( ) ; }
25524	public CmplExpr newCmplExpr ( Value op1 , Value op2 ) { return new GCmplExpr ( op1 , op2 ) ; }
25525	public boolean isEmpty ( ) { return status == EMPTY ; }
25527	public void logStatisticsAsTableExecutor ( ) { }
25530	protected boolean resetOccurred ( ) { return resetOccurred ; }
25536	public GeExpr newGeExpr ( Value op1 , Value op2 ) { return new JGeExpr ( op1 , op2 ) ; }
25554	public Schema schema ( ) { return theSchema ; }
25566	public static float convertPixelsToDp ( float px , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float dp = px / ( metrics . densityDpi / _NUM ) ; return dp ; }
25583	@ ColorInt public int extractAccentColorFrom ( Context context ) { return extractIntAttribute ( context , ACCENT ) ; }
25609	public CmpExpr newCmpExpr ( Value op1 , Value op2 ) { return new GCmpExpr ( op1 , op2 ) ; }
25613	public static int hash ( double value ) { return Double . hashCode ( value ) ; }
25635	public void fireJavascriptEvent ( String action ) { sendEventMessage ( action ) ; }
25638	public void put ( int i , Z z ) { re [ i ] = z . re ; im [ i ] = z . im ; }
25642	public static InstantRunVerifierStatus verifyMethod ( MethodNode method ) { VerifierMethodVisitor mv = new VerifierMethodVisitor ( method ) ; method . accept ( mv ) ; return mv . incompatibleChange . or ( InstantRunVerifierStatus . COMPATIBLE ) ; }
25660	public void addWord ( String word ) { Item tokenItem = tokenToWords . getTokenItem ( ) ; assert ( tokenItem != _NULL ) ; Item wordItem = tokenItem . createDaughter ( ) ; FeatureSet featureSet = wordItem . getFeatures ( ) ; featureSet . setString ( _CHAR name _CHAR , word ) ; relation . appendItem ( wordItem ) ; }
25665	public boolean isEmbeddedProtocol ( ) { return StringUtils . equalsIgnoreCase ( getProtocol ( ) , EMBEDDED_SPACE_PROTOCOL ) ; }
25668	public static boolean isHexDigit ( char c ) { return hexDigits . indexOf ( c ) >= _NUM ; }
25695	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
25698	public boolean start ( String file ) { boolean ok = _BOOL ; try { out = new BufferedOutputStream ( new FileOutputStream ( file ) ) ; ok = start ( out ) ; closeStream = _BOOL ; } catch ( IOException e ) { ok = _BOOL ; } return started = ok ; }
25711	protected void checkVectorDimensions ( int n ) throws MathIllegalArgumentException { if ( data . length != n ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . DIMENSIONS_MISMATCH , data . length , n ) ; } }
25724	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_INVITED_HIS_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25733	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_PET_FULL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
25756	public static boolean checkValidInterval ( String interval ) { return Arrays . asList ( TIME_INTERVALS ) . contains ( interval ) ; }
25767	public boolean hasURLsForSelection ( ) { return getSelectedNodes ( ) . size ( ) > _NUM ; }
25772	private boolean isSuppressWarningsTest ( String baseName ) { return baseName . equals ( _CHAR suppress_warnings _CHAR ) ; }
25778	private int peek ( ) throws CompileException , IOException { if ( this . nextChar != - _NUM ) return this . nextChar ; try { return ( this . nextChar = this . internalRead ( ) ) ; } catch ( UnicodeUnescapeException ex ) { throw new CompileException ( ex . getMessage ( ) , this . location ( ) , ex ) ; } }
25781	public ArrayFieldVector < T > append ( ArrayFieldVector < T > v ) { return new ArrayFieldVector < T > ( this , v ) ; }
25796	private boolean isSourceXliff ( ) { return xliffFilter . getCurrentTargetLocale ( ) == _NULL || xliffFilter . getCurrentTargetLocale ( ) . equals ( LocaleId . EMPTY ) || xliffFilter . getCurrentTargetLocale ( ) . equals ( sourceLocaleId ) ; }
25820	public void add ( LogInfo phase ) { body . put ( phase . getName ( ) , phase ) ; }
25905	public Properties readSettings ( ) throws ProxyException { Properties settings = new Properties ( ) ; try { parseSettings ( settings ) ; } catch ( IOException e ) { Logger . log ( getClass ( ) , LogLevel . ERROR , _CHAR Gnome settings read error . '' , e ) ; throw new ProxyException ( e ) ; } return settings ; }
25911	public synchronized void notifyChange ( ) { if ( mCallbacks != _NULL ) { mCallbacks . notifyCallbacks ( this , _NUM , _NULL ) ; } }
25912	public ConstantPostAggregation withValue ( double value ) { return new ConstantPostAggregation ( getName ( ) , value ) ; }
25949	public Iterator < E > inOrderIterator ( ) { return new BinarySearchTreeIterator < E > ( this . root , _BOOL ) ; }
25972	void mutateStaticField ( String field ) { PurityNode node = PurityGlobalNode . node ; mutated . put ( node , field ) ; nodes . add ( node ) ; if ( doCheck ) sanityCheck ( ) ; }
26036	public static S2LatLngRect fromPoint ( S2LatLng p ) { return new S2LatLngRect ( p , p ) ; }
26077	public static ValueGetterSpacePredicate < ServerEntry > pathNull ( String path ) { return path ( path , isNull ( ) ) ; }
26089	public void layoutBefore ( ) { }
26093	public boolean isPrevKV ( ) { return prevKV ; }
26100	public void writeDataFile ( OutputStream outStream ) throws DataFileException { writeRecords ( outStream , this . records ) ; }
26174	public void add ( Iterator < IEntryPacket > iterator ) { if ( iterator == _NULL ) return ; if ( _iterator == _NULL ) _iterator = iterator ; _listOfIterators . add ( iterator ) ; }
26192	public DistributedLogClientBuilder redirectBackoffMaxMs ( int ms ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setRedirectBackoffMaxMs ( ms ) ; return newBuilder ; }
26195	public void clear ( ) { for ( int i = _NUM ; i < lastNumber ; ++ i ) numberToObj [ i ] = _NULL ; lastNumber = _NUM ; filledCells = _NUM ; objContainer . clear ( ) ; }
26241	public AdsGetAdsTargetingQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
26259	public NegExpr newNegExpr ( Value op ) { return new JNegExpr ( op ) ; }
26311	public void entity ( String name , int value ) { theEntities . put ( name , value ) ; }
26347	public VideoGetCommentsQueryWithExtended ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
26349	protected void verifyContainerIsRunning ( final boolean expectedState ) throws Throwable { verifyContainerProperty ( _CHAR State . Running _CHAR , expectedState ) ; }
26377	public static boolean isFifoGroupingPoll ( int mod ) { return Modifiers . contains ( mod , FIFO_GROUPING_POLL ) ; }
26416	public Color mul ( float value ) { this . r *= value ; this . g *= value ; this . b *= value ; this . a *= value ; clamp ( ) ; return this ; }
26425	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
26460	@ Override public WeibullDistribution makeDistribution ( ) { return new WeibullDistribution ( _NUM . _NUM , _NUM . _NUM ) ; }
26467	public VideoReorderAlbumsQuery reorderAlbums ( UserActor actor , int albumId ) { return new VideoReorderAlbumsQuery ( getClient ( ) , actor , albumId ) ; }
26468	private void removeEntry ( String key ) { CacheHeader entry = mEntries . get ( key ) ; if ( entry != _NULL ) { mTotalSize -= entry . size ; mEntries . remove ( key ) ; } }
26472	private static FormatterFunction createBasicFormatterFunction ( final ConversionMethod conversionMethod ) { final FormatterFunction function = new FormatterFunction ( ) ; final ConversionFormatterDetails conversionFormatterDetails = new ConversionFormatterDetails ( ) ; conversionFormatterDetails . setFormat ( conversionMethod ) ; function . setConversion ( conversionFormatterDetails ) ; return function ; }
26486	@ Override protected void onStart ( ) { super . onStart ( ) ; LOG . d ( TAG , _CHAR Started the activity . '' ) ; if ( this . appView == _NULL ) { return ; } this . appView . handleStart ( ) ; }
26489	public static void pickImage ( Activity activity , String chooserTitle ) { Intent chooseImageIntent = getPickImageIntent ( activity , chooserTitle ) ; activity . startActivityForResult ( chooseImageIntent , PICK_IMAGE_ID ) ; }
26515	public void loaded ( int startIndex , List < T > data , boolean cacheData ) { loaded ( startIndex , data , getTotalRows ( ) , cacheData ) ; }
26546	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_FOOD_NOT_LOVEFLAVOR ( String petName , int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , petName , new DescriptionId ( nameId ) ) ; }
26558	public int timePassed ( ) { final long time = AnimationUtils . currentAnimationTimeMillis ( ) ; final long startTime = Math . min ( mScrollerX . mStartTime , mScrollerY . mStartTime ) ; return ( int ) ( time - startTime ) ; }
26568	public boolean matchKeyword ( String keyword ) { return tok . ttype == StreamTokenizer . TT_WORD && tok . sval . equals ( keyword ) && keywords . contains ( tok . sval ) ; }
26570	public boolean hasScrolled ( ) { return this . scroll != _NUM ; }
26587	public ResourcesPoet indent ( boolean indent ) { this . indent = indent ; return this ; }
26612	@ Override public boolean equals ( Object o ) { return ReferentUuids . compare ( proxyObject , o ) ; }
26615	public static SM_SYSTEM_MESSAGE STR_QUEST_GET_REWARD_TITLE ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
26654	void addClassName ( String className ) { getClassNames ( ) . add ( className ) ; }
26658	public boolean hasSequenceParameter ( SequenceContextParameters seqParameter , ContextInfo contextInfo ) { return hasTemplateParameter ( new TemplateParameter ( TemplateParameterContext . SEQUENCE , seqParameter . getName ( ) ) , contextInfo ) ; }
26729	public static int px2dip ( Context context , float pxValue ) { return ( int ) ( pxValue / getDensity ( context ) + _NUM . _NUM ) ; }
26750	public GroupsGetMembersQueryWithFilter offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
26757	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OpenAerial_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
26770	public static String createRGBAString ( Color c , double opacity ) { return _CHAR rgba ( _CHAR + ( c . getRed ( ) * _NUM ) + _CHAR , _CHAR + ( c . getGreen ( ) * _NUM ) + _CHAR , _CHAR + ( c . getBlue ( ) * _NUM ) + _CHAR , _CHAR + opacity + _CHAR ) ; _CHAR ; }
26774	public static String toInternalName ( String qual ) { return qual . replace ( _CHAR , _CHAR ) ; }
26828	public void clear ( ) { consumed = _NUM ; next = _NUM ; computeBlockSize ( ) ; }
26887	public static DataFileFooter readMetadatFile ( String filePath , long blockOffset , long blockLength ) throws CarbonUtilException { DataFileFooterConverter fileFooterConverter = new DataFileFooterConverter ( ) ; try { return fileFooterConverter . readDataFileFooter ( filePath , blockOffset , blockLength ) ; } catch ( IOException e ) { throw new CarbonUtilException ( _CHAR Problem while reading the file metadata '' , e ) ; } }
26953	public MulExpr newMulExpr ( Value op1 , Value op2 ) { return new JMulExpr ( op1 , op2 ) ; }
26956	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
26975	@ Override public void stop ( Runnable arg0 ) { stop ( ) ; arg0 . run ( ) ; }
26979	public boolean hasProgramIncidentEndDate ( ) { return programIncidentEndDate != _NULL ; }
26985	public Bundler putAll ( Bundle bundle ) { this . bundle . putAll ( bundle ) ; return this ; }
26991	public GtExpr newGtExpr ( Value op1 , Value op2 ) { return new JGtExpr ( op1 , op2 ) ; }
26994	public static boolean isEnabled ( ) { return enabledFlag . get ( ) ; }
27002	public static double information ( double [ ] probabilities ) { double total = _NUM . _NUM ; for ( double d : probabilities ) { total += ( - _NUM . _NUM * log2 ( d ) * d ) ; } return total ; }
27004	@ VisibleForTesting static boolean isTagsMatched ( Launch launch , EmailSenderCase oneCase ) { return ! ( _NULL != oneCase . getTags ( ) && ! oneCase . getTags ( ) . isEmpty ( ) ) || _NULL != launch . getTags ( ) && oneCase . getTags ( ) . containsAll ( launch . getTags ( ) ) ; }
27006	public Builder removeAllColumnsExceptFor ( Collection < String > columnNames ) { return removeAllColumnsExceptFor ( columnNames . toArray ( new String [ columnNames . size ( ) ] ) ) ; }
27011	public SimpleAsyncPollingContainerConfigurer eventListenerMethod ( Object eventListener , String methodName ) { MethodEventListenerAdapter methodEventListenerAdapter = new MethodEventListenerAdapter ( ) ; methodEventListenerAdapter . setDelegate ( eventListener ) ; methodEventListenerAdapter . setMethodName ( methodName ) ; methodEventListenerAdapter . afterPropertiesSet ( ) ; pollingEventListenerContainer . setEventListener ( methodEventListenerAdapter ) ; return this ; }
27047	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , ChecksumException , FormatException { return decode ( image , _NULL ) ; }
27049	public void detectAdBlockers ( Constants . AdBlockerCallback callback ) { new DetectTask ( callback ) . execute ( ) ; }
27093	public static SM_SYSTEM_MESSAGE STR_MSG_HOUSING_OBJECT_REWARD_ITEM ( int objectNameId , int rewardItemNameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( objectNameId ) , new DescriptionId ( rewardItemNameId ) ) ; }
27110	public LikesDeleteQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
27116	private boolean isIP4SubnetFilter ( String token ) { return IPWithSubnetChecker . isValidIP4Range ( token ) ; }
27124	public static boolean isValidMajorVersion ( String apiVersion ) { return MAJOR_VERSION_REGEX_PATTERN . matcher ( apiVersion ) . matches ( ) ; }
27127	public AemContextMenu openContextMenuFirstComponent ( Class < ? > componentClass ) { return openContextMenuNthComponent ( componentClass , _NUM ) ; }
27138	public T remove ( HttpSession session , Map < String , Object > expandContext ) { AttributeAccessor < T > aa = new AttributeAccessor < T > ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; return aa . remove ( session ) ; }
27152	public NewsfeedGetSuggestedSourcesQuery fields ( EnumParam ... value ) { return unsafeParam ( _CHAR fields _CHAR , value ) ; }
27179	public boolean isPrefixOf ( FieldSelector sel ) { for ( int i = _NUM ; i < fields . size ( ) ; i ++ ) { if ( i >= sel . fields . size ( ) || fields . get ( i ) != sel . fields . get ( i ) ) { return _BOOL ; } } return _BOOL ; }
27183	void receiveMessages ( ClientCnx cnx , int numMessages ) { if ( cnx != _NULL ) { if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR [ { } ] [ { } ] Adding { } additional permits _CHAR , topic , subscription , numMessages ) ; } cnx . ctx ( ) . writeAndFlush ( Commands . newFlow ( consumerId , numMessages ) , cnx . ctx ( ) . voidPromise ( ) ) ; } }
27204	protected MessagesAddChatUserQuery userId ( int value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
27206	public boolean declaresMethod ( NumberedString subsignature ) { checkLevel ( SIGNATURES ) ; SootMethod ret = subSigToMethods . get ( subsignature ) ; return ret != _NULL ; }
27229	public static double pareto ( ) { return pareto ( _NUM . _NUM ) ; }
27263	public CastExpr newCastExpr ( Value op1 , Type t ) { return new JCastExpr ( op1 , t ) ; }
27266	private synchronized boolean incRef ( ) { if ( _closed ) { return _BOOL ; } _referenceCount += _NUM ; _log . info ( _CHAR Data store reference count updated : [ id = { } , reference count = { } ] _CHAR , _id , _referenceCount ) ; return _BOOL ; }
27272	private static void createReader ( InputStream inputStream ) { try { closeReader ( ) ; Reader iReader = new InputStreamReader ( inputStream , _CHAR UTF - _NUM _CHAR ) ; reader = new BufferedReader ( iReader ) ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; } }
27391	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
27450	public int compare ( File file1 , File file2 ) { long result = file1 . lastModified ( ) - file2 . lastModified ( ) ; if ( result < _NUM ) { return - _NUM ; } else if ( result > _NUM ) { return _NUM ; } else { return _NUM ; } }
27452	public void putObject ( String key , Object obj , Gson gson ) { checkForNullKey ( key ) ; putString ( key , gson . toJson ( obj ) ) ; }
27479	public boolean isGuestEnabled ( ) { try { return mService . isGuestEnabled ( ) ; } catch ( RemoteException re ) { Log . w ( TAG , _CHAR Could not retrieve guest enabled state _CHAR ) ; return _BOOL ; } }
27531	public void rectValueToPixelHorizontal ( RectF r , float phaseY ) { r . left *= phaseY ; r . right *= phaseY ; mMatrixValueToPx . mapRect ( r ) ; mViewPortHandler . getMatrixTouch ( ) . mapRect ( r ) ; mMatrixOffset . mapRect ( r ) ; }
27543	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeBoostHealEffect_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
27554	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
27559	public boolean isXMLDoc ( ) { if ( isXMLDoc == UNKNOWN_TYPE ) isXMLDoc = getDocumentType ( ) ; return isXMLDoc == VALID_XML ; }
27567	public boolean isAckPending ( ) { return this . ackPending ; }
27601	private boolean resolveEverything ( ) { if ( Options . v ( ) . on_the_fly ( ) ) return _BOOL ; return ( Options . v ( ) . whole_program ( ) || Options . v ( ) . whole_shimple ( ) || Options . v ( ) . full_resolver ( ) || Options . v ( ) . output_format ( ) == Options . output_format_dava ) ; }
27611	public Builder fillColor ( String fillColor ) { this . fillColor = fillColor ; return this ; }
27624	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonGroupGate_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
27670	public void put ( final Long key ) { keyList . add ( key ) ; }
27692	public static boolean isLetterOrDigit ( char c ) { return Character . isLetterOrDigit ( c ) ; }
27770	public void loadDataStringFromFile ( String sFilename ) throws java . io . IOException , java . io . FileNotFoundException { String sDataString = utils . loadFileToStringWithNewlines ( sFilename ) ; setDataString ( sDataString ) ; }
27853	public boolean add ( final T object ) { final boolean added = this . data . add ( object ) ; this . notifyItemInserted ( this . data . size ( ) + _NUM ) ; return added ; }
27921	public FriendsGetMutualQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
27922	private void checkMatrixDimensions ( Matrix B ) { if ( B . m != m || B . n != n ) { throw new IllegalArgumentException ( _CHAR Matrix dimensions must agree . '' ) ; } }
27928	public float [ ] toArray ( float [ ] floats ) { if ( floats == _NULL ) { floats = new float [ _NUM ] ; } floats [ _NUM ] = x ; floats [ _NUM ] = y ; floats [ _NUM ] = z ; return floats ; }
27929	private Object writeReplace ( ) { return new DataTransferObject ( interpolator , interpolated . getTime ( ) ) ; }
27930	protected void merge ( Object in1 , Object in2 , Object out ) { FlowSet inSet1 = ( ( FlowSet ) in1 ) . clone ( ) , inSet2 = ( ( FlowSet ) in2 ) . clone ( ) , outSet = ( FlowSet ) out ; inSet1 . union ( inSet2 , outSet ) ; }
27933	@ Override public int compare ( PhysicalTable table1 , PhysicalTable table2 ) { return table1 . getDimensions ( ) . size ( ) - table2 . getDimensions ( ) . size ( ) ; }
27947	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
27964	public void train ( String sTrainingText ) { sgOverallGraph . setDataString ( sTrainingText + ( new StringBuffer ( ) . append ( ( char ) StreamTokenizer . TT_EOF ) ) . toString ( ) ) ; clLocator . resetCache ( ) ; getDelimiters ( ) ; }
27974	public static void print ( double x ) { out . print ( x ) ; out . flush ( ) ; }
27990	public static boolean isMemoryOnlySearch ( int mod ) { return Modifiers . contains ( mod , MEMORY_ONLY_SEARCH ) ; }
28015	public static SM_SYSTEM_MESSAGE STR_UNCHANGE_ITEM_SKIN_SUCCEED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28093	private static int nextPowerOfTwo ( final int i ) { return Integer . highestOneBit ( i ) << _NUM ; }
28108	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
28118	public synchronized boolean hasPendingTasks ( ) { Iterator < Future < ? >> futIter = pendingTasks . iterator ( ) ; while ( futIter . hasNext ( ) ) { Future < ? > fut = futIter . next ( ) ; if ( fut . isDone ( ) ) futIter . remove ( ) ; } return ! pendingTasks . isEmpty ( ) ; }
28126	public short [ ] [ ] reduce_table ( ) { return _reduce_table ; }
28132	public void run ( ) { ThreadingUtils . logThreadStarting ( _CHAR Reconnection Manager _CHAR ) ; running = _BOOL ; while ( running ) { synchronized ( connections ) { oneCycle ( ) ; } if ( ThreadingUtils . sleep ( SLEEP ) ) { break ; } } ThreadingUtils . logThreadEnding ( ) ; }
28238	public IdentityStmt newIdentityStmt ( Value local , Value identityRef ) { return new GIdentityStmt ( local , identityRef ) ; }
28246	public int modify_file ( String group_name , String appender_filename , long file_offset , byte [ ] file_buff ) throws IOException , MyException { return this . do_modify_file ( group_name , appender_filename , file_offset , file_buff . length , new UploadBuff ( file_buff , _NUM , file_buff . length ) ) ; }
28260	protected VideoReorderVideosQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
28262	public static double distance ( S1Point p1 , S1Point p2 ) { return Vector2D . angle ( p1 . vector , p2 . vector ) ; }
28269	public boolean isNumericType ( ) { return valueType . isNumeric ( ) ; }
28287	public TextUnit createTextUnit ( Long id , String name , String source , String note ) { return createTextUnit ( id , name , source , note , _NULL , _NULL , _NULL ) ; }
28301	public NeExpr newNeExpr ( Value op1 , Value op2 ) { return new JNeExpr ( op1 , op2 ) ; }
28307	public static byte [ ] generateIv ( ) throws GeneralSecurityException { return randomBytes ( IV_LENGTH_BYTES ) ; }
28310	public PathSubject containsFiles ( String ... filenames ) { for ( String filename : filenames ) { checkFile ( filename ) ; } return this ; }
28329	public boolean isLeft ( ) { return isLeft ; }
28343	@ Override public boolean isApplicableTo ( Schema sch ) { return sch . hasField ( fldName ) ; }
28420	public VideoRestoreCommentQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
28422	public MetricInstance withMaker ( MetricMaker maker ) { return new MetricInstance ( metricName , maker , dependencyMetricNames . toArray ( new String [ dependencyMetricNames . size ( ) ] ) ) ; }
28436	public boolean acceptsChild ( @ NotNull NlComponent layout , @ NotNull NlComponent newChild ) { return _BOOL ; }
28443	protected void checkVectorDimensions ( FieldVector < T > v ) throws MathIllegalArgumentException { checkVectorDimensions ( v . getDimension ( ) ) ; }
28451	@ Override public boolean equals ( Object o ) { return toString ( ) . equals ( o . toString ( ) ) ; }
28465	public static boolean isFieldsetExpanded ( WebElement fieldset ) { boolean isExpanded = _BOOL ; if ( ! fieldset . getAttribute ( HtmlTags . Attributes . CLASS ) . contains ( COLLAPSED_CLASS ) ) { isExpanded = _BOOL ; } return isExpanded ; }
28508	static int readUnsignedShort ( final byte [ ] b , final int index ) { return ( ( b [ index ] & _NUM ) << _NUM ) | ( b [ index + _NUM ] & _NUM ) ; }
28527	public boolean isInterfaceDirectSuperinterfaceOf ( SootClass parent , SootClass possibleChild ) { parent . checkLevel ( SootClass . HIERARCHY ) ; possibleChild . checkLevel ( SootClass . HIERARCHY ) ; return getDirectSuperinterfacesOf ( possibleChild ) . contains ( parent ) ; }
28529	void forgetAllOpeners ( ) { TabModel currentModel = mTabModelSelector . getCurrentModel ( ) ; int count = currentModel . getCount ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { currentModel . getTabAt ( i ) . setGroupedWithParent ( _BOOL ) ; } }
28547	@ RequestMapping ( value = _CHAR / gotoauthpage _CHAR ) public String goToAuthPage ( HttpSession httpSession ) { final String state = CommonUtils . getToken ( ) ; httpSession . setAttribute ( LINE_WEB_LOGIN_STATE , state ) ; final String url = lineConfig . getLineWebLoginUrl ( state ) ; return _CHAR redirect : _CHAR + url ; }
28557	public void recordSplashscreenThemeColor ( int type ) { assert ! mCommitted ; assert type >= _NUM && type < SPLASHSCREEN_COLOR_STATUS_MAX ; mSplashScreenThemeColor = type ; }
28597	public Vector multiply ( float m ) { x *= m ; y *= m ; z *= m ; return this ; }
28649	public IdentityStmt newIdentityStmt ( Value local , Value identityRef ) { return new JIdentityStmt ( local , identityRef ) ; }
28658	public static SM_SYSTEM_MESSAGE STR_MSG_LIMIT_SALE_GATHERING_DESC01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28668	public JSONStringer key ( String name ) throws JSONException { if ( name == _NULL ) { throw new JSONException ( _CHAR Names must be non - _NULL _CHAR ) ; } beforeKey ( ) ; string ( name ) ; return this ; }
28681	public static SM_SYSTEM_MESSAGE STR_ABYSS_BOSS_KILLED ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
28690	void discardFromRetired ( ResourceKey < K > resourceKey , R resource ) { resourceKey . removeFromTransferStack ( ) ; lifecycle . onRemoval ( resourceKey . getKey ( ) , resource ) ; }
28699	public void logMessage ( MessageType type , String msg ) { NotificationMessage < LogMessageParams > message = new NotificationMessage < > ( ) ; message . setMethod ( LSPMethods . WINDOW_LOGMESSAGE . getMethod ( ) ) ; message . setParams ( new LogMessageParams ( ) . withMessage ( msg ) . withType ( type . getType ( ) ) ) ; send ( message ) ; }
28716	private void processDataTag ( final SourceDataTagValue sourceDataTagValue ) { try { if ( LOGGER . isTraceEnabled ( ) ) { LOGGER . trace ( _CHAR Processing incoming update for datatag # '' + sourceDataTagValue . getId ( ) ) ; } dataTagFacade . updateFromSource ( sourceDataTagValue . getId ( ) , sourceDataTagValue ) ; } catch ( CacheElementNotFoundException cacheEx ) { LOGGER . warn ( _CHAR Received unrecognized data tag # _CHAR + sourceDataTagValue . getId ( ) + _CHAR : ignoring the update _CHAR ) ; } }
28720	public char nextClean ( ) throws JSONException { for ( ; ; ) { char c = this . next ( ) ; if ( c == _NUM || c > _CHAR ) { return c ; } } }
28731	@ VisibleForTesting static boolean hasAppInstalled ( Context context , String packageName ) { try { context . getPackageManager ( ) . getPackageInfo ( packageName , _NUM ) ; return _BOOL ; } catch ( PackageManager . NameNotFoundException e ) { return _BOOL ; } }
28769	public static SM_SYSTEM_MESSAGE STR_MSG_BINDSTONE_CANNOT_FOR_INVALID_RIGHT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28818	private void addInitialPeer ( ) { try { addPeer ( _NULL , new InetSocketAddress ( InetAddress . getByName ( CONNECTABLE_ADDRESS ) , DEFAULT_PORT ) , Peer . OUTGOING ) ; } catch ( UnknownHostException e ) { e . printStackTrace ( ) ; } }
28832	public boolean hasNext ( ) { return _BOOL ; }
28857	public void stopServer ( ) { keepRunning = _BOOL ; if ( this . serverSocket != _NULL ) { try { this . serverSocket . close ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } this . serverSocket = _NULL ; } }
28877	public void tabMoved ( long time , int id , int oldIndex , int newIndex ) { reorderTab ( id , oldIndex , newIndex , _BOOL ) ; updateVisualTabOrdering ( ) ; mUpdateHost . requestUpdate ( ) ; }
28924	public void fill ( int fromIndex , int toIndex , int val ) { if ( toIndex > _pos ) { ensureCapacity ( toIndex ) ; _pos = toIndex ; } Arrays . fill ( _data , fromIndex , toIndex , val ) ; }
28926	public Z Exch ( Z a ) { double t ; t = re ; re = a . re ; a . re = t ; t = im ; im = a . im ; a . im = t ; return this ; }
28934	private boolean maintainSelectorMinimizationBugExperimentEnabled ( ) { return ( model != _NULL && model . isExperimentEnabled ( MAINTAIN_SELECTOR_MINIMIZATION_BUG ) ) ; }
28942	@ Override public String asFieldName ( ) { throw new ClassCastException ( ) ; }
28951	protected MessagesRemoveChatUserQuery userId ( String value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
28952	public boolean wantTag ( Tag t ) { return ( t instanceof LineNumberTag ) || ( t instanceof SourceLnPosTag ) ; }
28978	@ Override public boolean markSupported ( ) { return _BOOL ; }
29052	public Type merge ( Type other , Scene cm ) { if ( other instanceof RefType ) return other ; throw new RuntimeException ( _CHAR illegal type merge : _CHAR + this + _CHAR and _CHAR + other ) ; }
29073	public static int sp2px ( Context context , float spValue ) { return ( int ) ( spValue * getFontDensity ( context ) + _NUM . _NUM ) ; }
29086	public void addSaveLatch ( String ticket , CountDownLatch latch ) { saveLatches . put ( ticket , latch ) ; }
29109	public ResourceLoader add ( Class < ? extends Resource > resourceClass ) { resources . add ( resourceClass ) ; return this ; }
29117	public int timePassed ( ) { return ( int ) ( AnimationUtils . currentAnimationTimeMillis ( ) - mStartTime ) ; }
29123	public boolean isDisplayed ( final List < WebElement > elements , int timeout ) { return isConditionMet ( visibilityOfAllElements ( elements ) , timeout ) ; }
29142	public Builder closeButton ( Boolean closeButton ) { this . closeButton = closeButton ; return this ; }
29145	public static void error ( @ NonNull String tag , Throwable throwable , String message , Object ... args ) { android . util . Log . e ( tag , String . format ( Locale . ENGLISH , message , args ) , throwable ) ; }
29164	public Builder numBookies ( int numBookies ) { this . _numBookies = numBookies ; return this ; }
29172	public PhotosGetTagsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
29229	public Matrix3f zero ( ) { m00 = m01 = m02 = m10 = m11 = m12 = m20 = m21 = m22 = _NUM . _NUM ; return this ; }
29231	private static void debugPrintln ( String msg ) { if ( DEBUG ) { System . err . println ( _CHAR XERCES : _CHAR + msg ) ; } }
29260	@ Override public void element ( String elementName , Augmentations augs ) throws XNIException { }
29296	public ArrayFieldVector < T > projection ( ArrayFieldVector < T > v ) throws MathIllegalArgumentException , MathRuntimeException { return ( ArrayFieldVector < T > ) v . mapMultiply ( dotProduct ( v ) . divide ( v . dotProduct ( v ) ) ) ; }
29309	public void destroy ( ) { destroyOverlayPanelContent ( ) ; }
29361	public static ISpaceQuery create ( Class < ? > entryClass , ISpacePredicate predicate ) { return new CustomSpaceQuery ( entryClass , predicate ) ; }
29371	private void removeEntry ( String key ) { CacheHeader entry = mEntries . get ( key ) ; if ( entry != _NULL ) { mTotalSize -= entry . size ; mEntries . remove ( key ) ; } }
29375	public static List < JsonNode > listToJson ( Collection < ? extends IJsonable > collection ) { List < JsonNode > jsonList = new LinkedList < > ( ) ; for ( IJsonable item : collection ) { jsonList . add ( item . jsonize ( ) ) ; } return jsonList ; }
29382	protected void writeImpl ( AionConnection con ) { }
29383	public void updateDuration ( ) { if ( ! Double . isNaN ( getXmin ( ) ) && ! Double . isNaN ( getXmax ( ) ) ) { setDuration ( getXmax ( ) - getXmin ( ) ) ; } }
29406	public RevealBuilder from ( @ NonNull final View fromView ) { this . mFromView = fromView ; return this ; }
29426	void removeAnnotations ( Annotation [ ] annotations ) { for ( Annotation annotation : annotations ) { this . annotationToAnnotationViewMap . remove ( annotation ) ; } this . update ( ) ; }
29428	public static SM_SYSTEM_MESSAGE STR_FIND_POS_SUBZONE_FOUND ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29445	public void importASObject ( ASObject asobject ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
29487	public static ProbeItemDescriptor discreteFillItem ( String name , String description , ItemValueFormatter formatter ) { return discreteOutlineItem ( name , description , formatter , _NUM , _NUM , MAX_VALUE_UNDEFINED , DEFAULT_LINE_WIDTH , _NULL , DEFAULT_COLOR ) ; }
29508	public Observable < Object > observable ( ) { return mBusSubject ; }
29516	public AddExpr newAddExpr ( Value op1 , Value op2 ) { return new JAddExpr ( op1 , op2 ) ; }
29537	public boolean isDrawTopYLabelEntryEnabled ( ) { return mDrawTopYLabelEntry ; }
29562	public void requestAssignReturnRoute ( int nodeId , int destinationId ) { enqueue ( new AssignReturnRouteMessageClass ( ) . doRequest ( nodeId , destinationId , getCallbackId ( ) ) ) ; }
29573	FieldSpec bean ( ) { return bean . get ( ) ; }
29590	public static boolean isSectionExpanded ( WebElement section ) { boolean isExpanded = _BOOL ; if ( ! section . getAttribute ( HtmlTags . Attributes . CLASS ) . contains ( COLLAPSED_CLASS ) ) { isExpanded = _BOOL ; } return isExpanded ; }
29592	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HE_REJECT_INVITATION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29596	static public void check ( long got , long expected ) throws IOException { if ( expected != got ) throw new IOException ( _CHAR RMA2 file corrupt ? Expected : _CHAR + expected + _CHAR , got : _CHAR + got ) ; }
29598	public AudioSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
29599	private void registerDefaultMacros ( ) { macros = new HashMap < > ( ) ; registerMacro ( _CHAR noescp _CHAR , new NoescpMacro ( ) ) ; registerMacro ( _CHAR int _CHAR , new IntMacro ( ) ) ; registerMacro ( _CHAR double _CHAR , new DoubleMacro ( ) ) ; registerMacro ( _CHAR equals _CHAR , new EqualsMacro ( ) ) ; }
29621	@ Override public synchronized void remove ( String key ) { boolean deleted = getFileForKey ( key ) . delete ( ) ; removeEntry ( key ) ; if ( ! deleted ) { VolleyLog . d ( _CHAR Could not delete cache entry for key = % s , filename = % s _CHAR , key , getFilenameForKey ( key ) ) ; } }
29623	@ Override public void addDataTag ( final SourceDataTag sourceDataTag ) { dataTagTable . put ( sourceDataTag . getId ( ) , sourceDataTag ) ; }
29635	public static boolean isNegativeInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { int temp = Integer . parseInt ( s ) ; if ( temp < _NUM ) return _BOOL ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
29705	public ResourceLazyLoadingScript parameter ( String name , Object value ) { if ( parameters == _NULL ) { parameters = new HashMap < String , Object > ( ) ; } parameters . put ( name , value ) ; return this ; }
29745	private void initBackupComponents ( ) throws SpaceComponentsInitializeException { for ( Iterator < ISpaceComponentsHandler > iterator = _componentsHandlers . iterator ( ) ; iterator . hasNext ( ) ; ) { ISpaceComponentsHandler handler = iterator . next ( ) ; if ( ! handler . isRecoverySupported ( ) ) handler . initComponents ( _BOOL ) ; } }
29778	@ Override public boolean validateLabel ( String label ) { Objects . requireNonNull ( label , _CHAR label can not be _NULL _CHAR ) ; return ! labels . contains ( label ) ; }
29785	public void onScrollToClose ( ) { }
29815	@ Override public void onCaptureFailed ( Throwable e ) { }
29844	public static SM_SYSTEM_MESSAGE STR_MSG_GET_PCBANG_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29874	public void useTimings ( boolean use ) { useTimings = use ; }
29906	public PaginationParameters withPage ( String page ) throws BadPaginationException { return new PaginationParameters ( perPage , parseParameter ( page , _CHAR page _CHAR ) ) ; }
29941	public boolean isSpawnedByPlayer ( ) { return x != _NUM || y != _NUM || z != _NUM ; }
30065	public static ValueGetterSpacePredicate < ServerEntry > propertyNull ( String propertyName ) { return property ( propertyName , isNull ( ) ) ; }
30094	public OrExpr newOrExpr ( Value op1 , Value op2 ) { return new JOrExpr ( op1 , op2 ) ; }
30123	public boolean canContainKey ( Object key ) { return ( key instanceof RegistrarLease && registrarID . equals ( ( ( RegistrarLease ) key ) . getRegistrarID ( ) ) ) ; }
30138	public static Navigator with ( Context context ) throws NavigatorException { return getInstance ( context ) ; }
30166	private < T > T send ( String method , @ Nullable Object entity ) { try { if ( entity == _NULL ) { builder ( ) . method ( method ) ; } else { builder ( ) . method ( method , shadingSafeEntity ( entity ) ) ; } return _NULL ; } catch ( UniformInterfaceException e ) { throw asEmoClientException ( e ) ; } }
30170	public VideoDeleteQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
30203	public static SM_SYSTEM_MESSAGE STR_ARTIFACT_INITIAL_TIME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
30207	public static SM_SYSTEM_MESSAGE STR_ABYSS_DOOR_BROKEN ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
30219	@ Override public synchronized void remove ( String key ) { boolean deleted = getFileForKey ( key ) . delete ( ) ; removeEntry ( key ) ; if ( ! deleted ) { VolleyLog . d ( _CHAR Could not delete cache entry for key = % s , filename = % s _CHAR , key , getFilenameForKey ( key ) ) ; } }
30233	public void close ( BaseServerPacket packet ) { channel . write ( packet ) . addListener ( ChannelFutureListener . CLOSE ) ; }
30235	public AggregationSet maxEntry ( String path ) { return add ( new MaxEntryAggregator ( ) . setPath ( path ) ) ; }
30242	protected void asyncSetValue ( final String textValue , final JTable table , final int rowIndex , final int columnIndex ) { setText ( textValue ) ; setToolTipText ( textValue ) ; WindowStuffHelper . fireCellChanged ( table , rowIndex , columnIndex ) ; }
30260	public Builder countUniqueColumns ( String ... columns ) { return add ( ReduceOp . CountUnique , columns ) ; }
30265	public static void print ( char x ) { out . print ( x ) ; out . flush ( ) ; }
30267	private ItemApplication findApplicationInfoLocked ( String packageName , String className ) { for ( ItemApplication info : data ) { final ComponentName component = info . mIntent . getComponent ( ) ; if ( packageName . equals ( component . getPackageName ( ) ) && className . equals ( component . getClassName ( ) ) ) { return info ; } } return _NULL ; }
30291	public OrExpr newOrExpr ( Value op1 , Value op2 ) { return new GOrExpr ( op1 , op2 ) ; }
30292	public LtExpr newLtExpr ( Value op1 , Value op2 ) { return new JLtExpr ( op1 , op2 ) ; }
30377	public boolean equals ( Object obj ) { return ( this == obj || ( obj instanceof DiscoveryPermission && getName ( ) . equals ( ( ( DiscoveryPermission ) obj ) . getName ( ) ) ) ) ; }
30426	public static ProbeItemDescriptor continuousLineItem ( String name , String description , ItemValueFormatter formatter ) { return continuousItem ( name , description , formatter , _NUM , _NUM , MAX_VALUE_UNDEFINED , DEFAULT_LINE_WIDTH , DEFAULT_COLOR , _NULL ) ; }
30434	public DivExpr newDivExpr ( Value op1 , Value op2 ) { return new GDivExpr ( op1 , op2 ) ; }
30441	public boolean isRight ( ) { return ! isLeft ; }
30454	public static boolean nullEquals ( String s1 , String s2 ) { return ( s1 == _NULL ? s2 == _NULL : s1 . equals ( s2 ) ) ; }
30468	public static void pickImage ( Activity activity ) { String chooserTitle = activity . getString ( R . string . pick_image_intent_text ) ; pickImage ( activity , chooserTitle ) ; }
30470	@ Override public void write ( int b ) { int newcount = ensureCapacity ( _NUM ) ; buf [ count ] = ( byte ) b ; count = newcount ; }
30475	private Object writeReplace ( ) { return new DataTransferObject ( getKey ( ) , getValue ( ) ) ; }
30479	public static boolean isInstantRunCapableDeviceVersion ( @ NotNull AndroidVersion version ) { return version . getApiLevel ( ) >= _NUM ; }
30511	public static boolean exists ( String name ) { return channels . containsKey ( name ) ; }
30545	public static boolean isControl ( long flags ) { return ( ( flags & LOGRECORD_FLAGS_CONTROL_MESSAGE ) != _NUM ) ; }
30554	@ NotNull public static ResizePolicy scaled ( ) { return ourScaled ; }
30557	final boolean indexesDeletedNode ( ) { return node . value == _NULL ; }
30606	private boolean isDirect ( Proxy proxy ) { return Proxy . NO_PROXY . equals ( proxy ) ; }
30653	public void putObject ( String key , Object obj ) { putObject ( key , obj , new Gson ( ) ) ; }
30656	public static void removeAllServices ( ) throws RpcException { try { ServicePublisher . removeAllServices ( ) ; } catch ( RegistryException e ) { throw new RpcException ( _CHAR error while removing all services '' , e ) ; } }
30664	private boolean cancelDiscardScrollingAnimation ( ) { if ( mOverviewAnimationType == OverviewAnimationType . DISCARD || mOverviewAnimationType == OverviewAnimationType . UNDISCARD || mOverviewAnimationType == OverviewAnimationType . DISCARD_ALL ) { mTabAnimations . cancel ( _NULL , StackTab . Property . SCROLL_OFFSET ) ; return _BOOL ; } return _BOOL ; }
30689	public GroupsEditQuery marketCity ( Integer ... value ) { return unsafeParam ( _CHAR market_city _CHAR , value ) ; }
30758	public CastExpr newCastExpr ( Value op1 , Type t ) { return new GCastExpr ( op1 , t ) ; }
30759	public void prune ( double dMinCoexistenceImportance ) { Graph . prune ( dMinCoexistenceImportance ) ; }
30795	private static void drainStream ( InputStream is ) throws IOException { BufferedInputStream reader = new BufferedInputStream ( is ) ; while ( reader . read ( ) != - _NUM ) { } }
30807	private static boolean isLessThanOneWeek ( Date date ) { Calendar calendar = Calendar . getInstance ( ) ; calendar . add ( Calendar . DAY_OF_MONTH , - _NUM ) ; return date . after ( calendar . getTime ( ) ) ; }
30815	public static < T > T createService ( final Class < T > clazz , final String baseUrl ) { Retrofit retrofit = new Retrofit . Builder ( ) . baseUrl ( baseUrl ) . addConverterFactory ( GsonConverterFactory . create ( ) ) . build ( ) ; return retrofit . create ( clazz ) ; }
30820	protected int [ ] createPalette ( int size ) { switch ( m_type ) { case Constants . NOMINAL : return ColorLib . getCategoryPalette ( size ) ; case Constants . NUMERICAL : case Constants . ORDINAL : default : return ColorLib . getGrayscalePalette ( size ) ; } }
30837	public InstanceOfExpr newInstanceOfExpr ( Value op1 , Type t ) { return new JInstanceOfExpr ( op1 , t ) ; }
30905	private boolean isDirect ( final BSPTree < Sphere1D > node ) { return ( ( LimitAngle ) node . getCut ( ) . getHyperplane ( ) ) . isDirect ( ) ; }
30910	public String read ( ) { switchToTextArea ( ) ; try { return webDriver . findElement ( By . xpath ( _CHAR .// body '' ) ) . getText ( ) ; } finally { frameSwitcher . switchTo ( '' / $ cq '' ) ; } }
30930	public void remove ( Predicate filter ) { for ( IntIterator ii = rows ( filter ) ; ii . hasNext ( ) ; ) removeRow ( ii . nextInt ( ) ) ; }
31013	public static float readFloat ( DataInputStream dis , boolean isBigEndian ) throws IOException { float val ; if ( ! isBigEndian ) { val = readLittleEndianFloat ( dis ) ; } else { val = dis . readFloat ( ) ; } return val ; }
31017	public void removeOption ( int inOptNum ) { if ( this . optionsList == _NULL ) { initialize ( ) ; } this . optionsList . removeOption ( ( byte ) inOptNum ) ; }
31022	public boolean toggleAlwaysTranslateLanguageState ( boolean value ) { if ( mOptions [ NEVER_LANGUAGE ] && value ) { return _BOOL ; } return toggleState ( ALWAYS_LANGUAGE , value ) ; }
31024	@ Override public ResultSet map ( ResultSet resultSet ) { Pagination < Result > pages = new AllPagesPagination < > ( resultSet , paginationParameters ) ; AbstractResponse . addLinks ( pages , uriBuilder , responseProcessor ) ; return new ResultSet ( pages . getPageOfData ( ) , map ( resultSet . getSchema ( ) ) ) ; }
31026	public static Map < String , Object > findOrdersInternal ( DispatchContext dctx , Map < String , ? extends Object > context ) { return findOrders ( dctx , context , _BOOL ) ; }
31029	public FriendsGetQueryWithFields userId ( Integer value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
31046	public void exception ( Throwable t ) { fail ( ) ; addLogEntry ( new ExceptionEntry ( t ) ) ; addLogEntry ( browserLogEntryCollector . getBrowserLogEntries ( ) ) ; }
31058	public String delVar ( String variable ) { return delVar ( namespace , variable ) ; }
31098	public Matrix refresh ( Matrix newMatrix , View chart , boolean invalidate ) { mMatrixTouch . set ( newMatrix ) ; limitTransAndScale ( mMatrixTouch , mContentRect ) ; if ( invalidate ) chart . invalidate ( ) ; newMatrix . set ( mMatrixTouch ) ; return newMatrix ; }
31100	public AggregationSet minEntry ( String path ) { return add ( new MinEntryAggregator ( ) . setPath ( path ) ) ; }
31113	public boolean isRunning ( ) { return running ; }
31126	public boolean hasColumn ( String columnName ) { Integer idx = columnNamesIndex . get ( columnName ) ; return idx != _NULL ; }
31189	private static int calculateTotalBytes ( ByteBuffer [ ] byteBufferArr ) { int total = _NUM ; for ( int index = _NUM ; index < byteBufferArr . length ; index ++ ) { total += byteBufferArr [ index ] . capacity ( ) ; } return total ; }
31199	public ParameterRef newParameterRef ( Type paramType , int number ) { return Jimple . v ( ) . newParameterRef ( paramType , number ) ; }
31201	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DeboostHealAmount_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
31245	private void addCachedLegionMemberEx ( LegionMemberEx legionMemberEx ) { this . allCachedLegionMembers . addMemberEx ( legionMemberEx ) ; }
31287	public PhotosEditQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
31328	public final boolean isVisible ( ) { return visible ; }
31334	public SiteAdminPage waitForPageNotExists ( String title ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( not ( pageExists ( title ) ) , Timeouts . SMALL ) ; return this ; }
31348	public ImageSize scale ( float scale ) { return new ImageSize ( ( int ) ( width * scale ) , ( int ) ( height * scale ) ) ; }
31362	private void checkMatrixDimensions ( Matrix B ) { if ( B . m != m || B . n != n ) { throw new IllegalArgumentException ( _CHAR Matrix dimensions must agree . '' ) ; } }
31391	public void init ( ) { try { this . parser = new SimpleXMLParser ( ) ; } catch ( ParserConfigurationException e ) { throw new RuntimeException ( _CHAR Error creating instance of SimpleXMLParser : _CHAR , e ) ; } }
31414	@ Override public void drop_duplicates ( ) { for ( Iterator < AllocNode > it = pt_objs . keySet ( ) . iterator ( ) ; it . hasNext ( ) ; ) { PtInsIntervalManager im = pt_objs . get ( it . next ( ) ) ; im . removeUselessSegments ( ) ; } }
31436	@ Override public boolean markSupported ( ) { return fInputStream . markSupported ( ) ; }
31459	public ShrExpr newShrExpr ( Value op1 , Value op2 ) { return new JShrExpr ( op1 , op2 ) ; }
31499	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostHealEffect_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
31502	@ Override public void onRequestInitiated ( int code ) { if ( code == ConnectAPI . COUPON_CODE ) { progressDialog . setMessage ( _CHAR Loading coupons ... _CHAR ) ; progressDialog . show ( ) ; } }
31503	public BoardAddTopicQuery addTopic ( UserActor actor , int groupId , String title ) { return new BoardAddTopicQuery ( getClient ( ) , actor , groupId , title ) ; }
31505	public int elementAt ( int depth ) { return fData [ depth ] ; }
31506	void clear ( ) { mTopSection . clear ( ) ; mMiddleSection . clear ( ) ; mBottomSection . clear ( ) ; }
31522	public boolean isReady ( ) { return this . record . isReady ( ) ; }
31524	@ Override public int read ( ) throws IOException { if ( this . remaining == _NUM ) { return - _NUM ; } else { int var1 = this . in . read ( ) ; if ( var1 >= _NUM ) { -- this . remaining ; } return var1 ; } }
31561	public void listAlphabeticWords ( ) { for ( Node n : root . children ) n . listAlphabeticWords ( new LinkedList < Character > ( ) ) ; }
31570	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
31578	private void openDownloadsPage ( Context context ) { Intent pageView = new Intent ( DownloadManager . ACTION_VIEW_DOWNLOADS ) ; pageView . setFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; try { context . startActivity ( pageView ) ; } catch ( ActivityNotFoundException e ) { Log . e ( TAG , _CHAR Can not find Downloads app _CHAR , e ) ; } }
31579	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { double [ ] points = makeCumulativeTestValues ( ) ; double [ ] points2 = new double [ points . length - _NUM ] ; System . arraycopy ( points , _NUM , points2 , _NUM , points2 . length ) ; return points2 ; }
31656	private static void resync ( ) { setScanner ( new Scanner ( new java . io . BufferedInputStream ( System . in ) , CHARSET_NAME ) ) ; }
31684	public NewArrayExpr newNewArrayExpr ( Type type , Value size ) { return new GNewArrayExpr ( type , size ) ; }
31691	public static boolean addOrUpdateBan ( BannedIP ipBan ) { if ( ipBan . getId ( ) == _NULL ) { if ( getDAO ( ) . insert ( ipBan ) ) { banList . add ( ipBan ) ; return _BOOL ; } return _BOOL ; } return getDAO ( ) . update ( ipBan ) ; }
31698	public void onDestroy ( ) { }
31723	@ Override public boolean accept ( File file , String name ) { for ( String suffix : this . suffixes ) { if ( caseSensitivity . checkEndsWith ( name , suffix ) ) { return _BOOL ; } } return _BOOL ; }
31733	public static SM_SYSTEM_MESSAGE STR_EXTEND_ACCOUNT_WAREHOUSE_SIZE_EXTENDED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31760	public static SM_SYSTEM_MESSAGE STR_UNION_BAN_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31799	public Builder withCountOnly ( boolean countOnly ) { this . countOnly = countOnly ; return this ; }
31803	protected WallReportCommentQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
31825	public void removeAllUpdateListeners ( ) { listeners . clear ( ) ; }
31834	public void updateScreen ( ) { if ( this . mc . playerController . isInCreativeMode ( ) ) { this . mc . displayGuiScreen ( new GuiContainerCreative ( this . mc . thePlayer ) ) ; } }
31871	@ Override public IntegerDistribution makeDistribution ( ) { return new PoissonDistribution ( DEFAULT_TEST_POISSON_PARAMETER ) ; }
31887	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , ChecksumException , FormatException { return decode ( image , _NULL ) ; }
31890	public PhotosConfirmTagQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
31913	T toResponse ( ResponseBody body ) throws IOException { return responseConverter . convert ( body ) ; }
31959	public EqExpr newEqExpr ( Value op1 , Value op2 ) { return new GEqExpr ( op1 , op2 ) ; }
31999	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
32005	public void disconnect ( ) { if ( mService == _NULL ) return ; mContext . unbindService ( mConnection ) ; mContext = _NULL ; mService = _NULL ; }
32027	private Optional < Data < Input , Output >> match_ ( Input input ) { return Optional . ofNullable ( recent_ . get ( ) ) . filter ( _NULL ) ; }
32123	@ Override public void onCompletion ( MediaPlayer mp ) { mVideoPlayer . seekTo ( _NUM ) ; }
32156	public void startSubreport ( String subreport ) { currentTest . get ( ) . startSubreport ( subreport ) ; }
32175	public void updateScreen ( ) { super . updateScreen ( ) ; ++ this . field_146444_f ; }
32204	public Set < K > keySet ( ) { return counterMap . keySet ( ) ; }
32206	public boolean wasDoubleClicked ( int code ) { MouseButton mb = this . buttons . get ( code ) ; if ( mb == _NULL ) { return _BOOL ; } return mb . wasDoubleClicked ( ) ; }
32209	public String toString ( final int decimals ) { final DecimalFormat decimalFormat = new DecimalFormat ( _CHAR # . _CHAR + StringUtils . repeat ( _CHAR # _CHAR , decimals ) ) ; return decimalFormat . format ( latitude ) . replace ( _CHAR , _CHAR ) + StringLiterals . CONCAT_SEPARATOR + decimalFormat . format ( longitude ) . replace ( _CHAR , _CHAR ) ; }
32219	public static boolean isGenericTypeAnnotedWithPageObject ( Field field ) { Class < ? > genericType = PageObjectProviderHelper . getGenericType ( field ) ; return genericType != _NULL && genericType . isAnnotationPresent ( PageObject . class ) ; }
32248	@ Override public boolean hasFixedPropertiesArray ( ) { return _BOOL ; }
32249	@ Override public void stop ( boolean force ) { try { if ( force ) { getProcessAdmin ( ) . killVM ( ) ; } } catch ( RemoteException ex ) { ProcessLogger . log ( _CHAR Exception caught while killing VM '' , ex ) ; } super . stop ( force ) ; }
32266	public static final int find ( int [ ] a , int key , int begin , int end ) { for ( int i = begin ; i < end ; i ++ ) { if ( a [ i ] == key ) { return i ; } } return - _NUM ; }
32278	public XorExpr newXorExpr ( Value op1 , Value op2 ) { return new GXorExpr ( op1 , op2 ) ; }
32291	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPHeal_HEAL_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
32303	protected void onMouseClick ( ) { if ( onMouseClick != _NULL ) { onMouseClick . run ( ) ; } }
32310	public Bundler putAll ( Bundle bundle ) { this . bundle . putAll ( bundle ) ; return this ; }
32313	public void post ( Object event ) { mBusSubject . onNext ( event ) ; }
32320	public Value sum ( Value num ) { return new AggregationFunction ( num , AggregationType . SUM ) ; }
32362	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_AlwaysParry_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
32371	public boolean hasNext ( ) { return next >= _NUM ; }
32377	public String [ ] upload_appender_file ( String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_appender_file ( group_name , local_filename , file_ext_name , meta_list ) ; }
32398	public static SM_SYSTEM_MESSAGE STR_FORCE_REJECT_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32419	public void put ( final T key , final T val ) { try ( Txn < T > txn = env . txnWrite ( ) ) { put ( txn , key , val ) ; txn . commit ( ) ; } }
32458	public VideoRemoveTagQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
32485	public void assertTextPresent ( String expected , String actual ) { if ( ( actual == _NULL ) || ( ! actual . contains ( expected ) ) ) { throw new AssertionFailedError ( _CHAR expected presence of [ _CHAR + expected + _CHAR ] , but was [ _CHAR + actual + _CHAR ] _CHAR ) ; } }
32495	protected void prepareTableView ( ) { if ( fAttributeTableView == _NULL ) { fAttributeTableView = new Attribute [ fTableViewBuckets ] ; fAttributeTableViewChainState = new int [ fTableViewBuckets ] ; } else { cleanTableView ( ) ; } }
32501	public Value min ( Value num ) { return new AggregationFunction ( num , AggregationType . MINIMUM ) ; }
32524	public static void print ( int x ) { out . print ( x ) ; out . flush ( ) ; }
32574	public void stop ( ) { mVibrator = _NULL ; mContext . getContentResolver ( ) . unregisterContentObserver ( mContentObserver ) ; }
32684	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
32712	@ Override public TDistribution makeDistribution ( ) { return new TDistribution ( _NUM . _NUM ) ; }
32721	private static void skipSection ( ParseContext parseContext ) { while ( ! parseContext . atEnd ( ) && parseContext . current ( ) . indent != _NUM ) { parseContext . consume ( ) ; } }
32724	void addField ( AllocDotField adf , SparkField field ) { if ( fields == _NULL ) fields = new HashMap < SparkField , AllocDotField > ( ) ; fields . put ( field , adf ) ; }
32744	@ Deprecated public static boolean isThrowPartialFailure ( int mod ) { return ! Modifiers . contains ( mod , IGNORE_PARTIAL_FAILURE ) ; }
32766	public boolean declaresFieldByName ( String name ) { checkLevel ( SIGNATURES ) ; for ( SootField field : fields ) { if ( field . getName ( ) . equals ( name ) ) return _BOOL ; } return _BOOL ; }
32771	public static SM_SYSTEM_MESSAGE STR_FORCE_ITEM_DICE ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
32776	public static float saturate ( float input ) { return clamp ( input , _NUM , _NUM ) ; }
32788	public int available ( ) { return bufferPool . available ( ) ; }
32810	protected Complex createComplex ( double realPart , double imaginaryPart ) { return new Complex ( realPart , imaginaryPart ) ; }
32813	public void writeByte ( int position , byte b ) { if ( position < _NUM || position >= Page . pageSize ) { throw new PageException ( _CHAR readByte is out of bounds of page _CHAR ) ; } pageData . put ( position , b ) ; }
32824	private TemplateDruidQuery buildTimeGrainCounterQuery ( ) { Set < Aggregation > timedAggs = Collections . emptySet ( ) ; Set < PostAggregation > timedPostAggs = Collections . singleton ( COUNT_INNER ) ; return new TemplateDruidQuery ( timedAggs , timedPostAggs , innerGrain ) ; }
32870	public boolean containsColumn ( String columnName ) { for ( int i = _NUM ; i < columnModels . size ( ) ; i ++ ) { ColumnModel columnModel = columnModels . get ( i ) ; if ( columnName . equalsIgnoreCase ( columnModel . getColumnName ( ) ) ) { return _BOOL ; } } return _BOOL ; }
32878	public static SM_SYSTEM_MESSAGE STR_CHAT_CHANNEL_FLOODING_BLOCKED_1 ( String value0m ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0m ) ; }
32885	public ChangeSet putInMap ( String path , Serializable key , Serializable value ) { return add ( new PutInMapSpaceEntryMutator ( path , key , value ) ) ; }
32890	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data _CHAR ) ; }
32952	public boolean requiresReboot ( ) { return this . status != _NULL && this . status . equals ( ConfigConstants . Status . RESTART ) ; }
32966	public static int supplemental ( char h , char l ) { return ( h - _NUM ) * _NUM + ( l - _NUM ) + _NUM ; }
32980	public static Object evaluate ( Map < String , ? extends Object > context , String expression ) { return evaluate ( context , expression , Object . class ) ; }
33041	public static String toDebugString ( final long socketIdentifier ) { final int ipBits = ( int ) socketIdentifier ; final int port = extractPortNumber ( socketIdentifier ) ; final int inode = ( int ) ( socketIdentifier >> _NUM ) ; return Integer . toHexString ( ipBits ) + _CHAR : _CHAR + port + _CHAR / _CHAR + inode ; }
33103	public Iterator < NameValue > iterator ( ) { return this . getMap ( ) . values ( ) . iterator ( ) ; }
33118	public AuthnQuery createAuthnQuery ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_QUERY , value ) ; if ( obj == _NULL ) { return new AuthnQueryImpl ( value ) ; } else { return ( AuthnQuery ) obj ; } }
33137	private void grow ( ) { int oldCapacity = queue . length ; int newCapacity = oldCapacity + ( oldCapacity >> _NUM ) ; if ( newCapacity < _NUM ) newCapacity = Integer . MAX_VALUE ; queue = Arrays . copyOf ( queue , newCapacity ) ; }
33172	public boolean isBorderPainted ( ) { return paintBorder ; }
33200	public static void resetJAASConfig ( ) { try { Configuration . setConfiguration ( defaultConfig ) ; } catch ( java . lang . SecurityException e ) { System . err . println ( _CHAR AMLoginContext : resetJAASConfig to default : _CHAR + e . getMessage ( ) ) ; } }
33232	public Builder noStore ( ) { this . noStore = _BOOL ; return this ; }
33248	static boolean containsHtml ( String text ) { return text != _NULL && text . indexOf ( _CHAR ) != - _NUM && text . indexOf ( _CHAR ) != - _NUM ; }
33283	private boolean isValidField ( final TagField field ) { if ( field == _NULL ) { return _BOOL ; } if ( ! ( field instanceof AsfTagField ) ) { return _BOOL ; } return ! field . isEmpty ( ) ; }
33295	public static File createTemporaryDirectory ( String prefix ) { while ( _BOOL ) { String candidateName = prefix + TEMPORARY_DIRECTORY_PRNG . nextInt ( ) ; File result = new File ( System . getProperty ( _CHAR java . io . tmpdir _CHAR ) , candidateName ) ; if ( result . mkdir ( ) ) { return result ; } } }
33297	@ Override public void removeAttributeChangeNotificationListener ( NotificationListener listener , String name ) throws ListenerNotFoundException { if ( listener == _NULL ) throw new IllegalArgumentException ( _CHAR Listener is _NULL _CHAR ) ; if ( attributeBroadcaster != _NULL ) { attributeBroadcaster . removeNotificationListener ( listener ) ; } }
33300	public static MethodType methodType ( Class < ? > rtype , Class < ? > [ ] ptypes ) { return makeImpl ( rtype , ptypes , _BOOL ) ; }
33314	protected void initializeGlobalArguments ( Collection < Argument > args ) throws ArgumentException { initializeGlobalArguments ( args , _NULL ) ; }
33322	static ReplayPromise < Double > replayPromiseDouble ( final Duration timeout , final long time ) { return new ReplayPromiseImpl < > ( timeout , time ) ; }
33326	public PdfXObject addImage ( ImageData image , Rectangle rect , boolean asInline ) { return addImage ( image , rect . getWidth ( ) , _NUM , _NUM , rect . getHeight ( ) , rect . getX ( ) , rect . getY ( ) , asInline ) ; }
33333	public static boolean isNormalized ( CharSequence src , Form form ) { return NormalizerBase . isNormalized ( src . toString ( ) , form ) ; }
33396	public Cursor fetch ( Long attributeID ) { if ( attributeID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_EXTERNALATTRIBUTEID + _CHAR = _CHAR + attributeID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
33443	public static String catenateArrayItems ( XMPMeta xmp , String schemaNS , String arrayName , String separator , String quotes , boolean allowCommas ) throws XMPException { return XMPUtilsImpl . catenateArrayItems ( xmp , schemaNS , arrayName , separator , quotes , allowCommas ) ; }
33451	public boolean containsValue ( NSObject val ) { return val != _NULL && dict . containsValue ( val ) ; }
33463	private boolean acceptSequence ( char ... sequence ) { for ( int i = _NUM ; i < sequence . length ; i ++ ) { if ( data [ index + i ] != sequence [ i ] ) return _BOOL ; } return _BOOL ; }
33480	public String [ ] allKeys ( ) { return dict . keySet ( ) . toArray ( new String [ count ( ) ] ) ; }
33499	private static boolean isManageDsaITOperation ( Operation operation ) { for ( Control control : operation . getRequestControls ( ) ) { if ( ServerConstants . OID_MANAGE_DSAIT_CONTROL . equals ( control . getOID ( ) ) ) { return _BOOL ; } } return _BOOL ; }
33530	public int size ( ) { return values . size ( ) ; }
33536	public boolean hasSpansIntersecting ( int start , int end ) { for ( int i = _NUM ; i < numberOfSpans ; i ++ ) { if ( spanStarts [ i ] >= end || spanEnds [ i ] <= start ) continue ; return _BOOL ; } return _BOOL ; }
33544	public static boolean isThreadBound ( ) { return ( threadBindings . containsKey ( Thread . currentThread ( ) ) ) ; }
33548	public boolean isUpdate ( ) { return valueUpdateTime != _NULL ; }
33558	static short readShort ( final byte [ ] b , final int index ) { return ( short ) ( ( ( b [ index ] & _NUM ) << _NUM ) | ( b [ index + _NUM ] & _NUM ) ) ; }
33573	public void addPopupMenuListener ( PopupMenuListener l ) { listenerList . add ( PopupMenuListener . class , l ) ; }
33577	public void addAll ( List < T > items ) { synchronized ( lock ) { this . items . addAll ( identifiedItemFactory . createList ( items ) ) ; } itemPositionChangeChecked = new SparseBooleanArray ( this . items . size ( ) ) ; notifyDataSetChanged ( ) ; }
33622	@ Override public void focusGained ( FocusEvent e ) { spinner . repaint ( ) ; }
33664	public boolean containsValue ( String val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSString . class ) ) { NSString str = ( NSString ) o ; if ( str . getContent ( ) . equals ( val ) ) return _BOOL ; } } return _BOOL ; }
33678	public boolean hasPredicates ( ) { return ! CollectionUtils . isEmpty ( predicates ) ; }
33691	public void clearCoRoutine ( ) { clearCoRoutine ( _BOOL ) ; }
33715	public static void checkGlError ( String op ) { int error = GLES20 . glGetError ( ) ; if ( error != GLES20 . GL_NO_ERROR ) { String msg = op + _CHAR : glError _NUM _CHAR + Integer . toHexString ( error ) ; Log . e ( TAG , msg ) ; throw new RuntimeException ( msg ) ; } }
33721	protected void openRedirector ( ) { if ( ! redirectorConfigured ) { configureRedirector ( ) ; } if ( redirectOutput ) { redirector . createStreams ( ) ; redirectOutStream = redirector . getOutputStream ( ) ; redirectOutPrintStream = new PrintStream ( redirectOutStream ) ; redirectErrStream = redirector . getErrorStream ( ) ; redirectErrPrintStream = new PrintStream ( redirectErrStream ) ; } }
33746	public static void deregisterRestoreTaskListener ( RestoreTaskListener listener ) { directoryServer . restoreTaskListeners . remove ( listener ) ; }
33759	public int padCount ( byte [ ] in ) throws InvalidCipherTextException { int count = in [ in . length - _NUM ] & _NUM ; if ( count > in . length ) { throw new InvalidCipherTextException ( _CHAR pad block corrupted _CHAR ) ; } return count ; }
33767	@ Override public void sendError ( int status , String message ) throws IOException { if ( isCommitted ( ) ) { throw new IllegalStateException ( sm . getString ( _CHAR coyoteResponse . sendError . ise _CHAR ) ) ; } if ( included ) { return ; } setError ( ) ; getCoyoteResponse ( ) . setStatus ( status ) ; getCoyoteResponse ( ) . setMessage ( message ) ; resetBuffer ( ) ; setSuspended ( _BOOL ) ; }
33777	public boolean nextTile ( ) throws ModelControlException { boolean movedToRow = super . nextTile ( ) ; if ( movedToRow ) { curTile = getTileIndex ( ) ; setDisplayFieldValue ( TXT_INDEX , Integer . toString ( curTile ) ) ; setDisplayFieldValue ( TXT_BUTTON , buttons [ curTile ] ) ; setDisplayFieldValue ( TXT_CLASS , curTile == _NUM ? _CHAR button primary _CHAR : _CHAR button _CHAR ) ; } return movedToRow ; }
33829	public static boolean hasDescriptor ( LocalizableMessage msg , LocalizableMessageDescriptor . Arg1 < ? > desc ) { return msg . ordinal ( ) == desc . ordinal ( ) && msg . resourceName ( ) . equals ( desc . resourceName ( ) ) ; }
33839	public boolean hasAccessType ( EnumAccessType accessType ) { return body . hasAccessType ( accessType ) ; }
33845	public synchronized StringBuffer append ( char ch ) { append0 ( ch ) ; return this ; }
33853	public boolean isOutputShutdown ( ) { return shutOut ; }
33859	protected boolean deploymentExists ( String contextName ) { return ( deployed . containsKey ( contextName ) || ( host . findChild ( contextName ) != _NULL ) ) ; }
33864	@ Override public void write ( char [ ] cbuf , int off , int len ) throws IOException { if ( xmlPrologWriter != _NULL ) { detectEncoding ( cbuf , off , len ) ; } else { writer . write ( cbuf , off , len ) ; } }
33869	public static int length ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . length ( ) ; }
33890	public static AsymmetricKeyParameter createKey ( byte [ ] privateKeyInfoData ) throws IOException { return createKey ( PrivateKeyInfo . getInstance ( ASN1Primitive . fromByteArray ( privateKeyInfoData ) ) ) ; }
33895	protected void handleGenericException ( Exception e ) throws SAXException { reportError ( e . getMessage ( ) , e , _BOOL ) ; }
33900	public static boolean isValidNameChar ( char c ) { return isValidNameStartChar ( c ) || ( c >= _CHAR && c <= _CHAR ) ; }
33910	@ Override public boolean markSupported ( ) { return fInputStream . markSupported ( ) ; }
33963	final boolean indexesDeletedNode ( ) { return node . value == _NULL ; }
33988	private void cleanSession ( final Session session ) { logger . debug ( _CHAR End of SLO - Processing to session cleanup _CHAR ) ; session . remove ( subjectMapping ) ; session . remove ( sessionIndexMapping ) ; session . remove ( authnContext ) ; if ( attributeMapping != _NULL ) { for ( final String key : attributeMapping . keySet ( ) ) { session . remove ( key ) ; } } }
34027	public boolean isFloatable ( ) { return floatable ; }
34052	@ Override public void contextDestroyed ( ServletContextEvent event ) { log ( _CHAR contextDestroyed ( ) _CHAR ) ; this . context = _NULL ; }
34066	private static boolean cannotDisplayAdvancedOrCustomTypes ( ConsoleApplication app , ManagedObjectDefinition < ? , ? > defn ) { return ! app . isAdvancedMode ( ) && ( defn . hasOption ( ManagedObjectOption . ADVANCED ) || CLIProfile . getInstance ( ) . isForCustomization ( defn ) ) ; }
34088	Future < Job > updateNow ( ) { this . updated_at = System . currentTimeMillis ( ) ; return this . set ( _CHAR updated_at _CHAR , String . valueOf ( updated_at ) ) ; }
34102	public static int findWordEnd ( String line , int pos , String noWordSep , boolean joinNonWordChars , boolean eatWhitespace ) { return findWordEnd ( line , pos , noWordSep , joinNonWordChars , _BOOL , eatWhitespace ) ; }
34121	@ Override public void cancelAllOperations ( CancelRequest cancelRequest ) { }
34154	public static int findWordEnd ( String line , int pos , String noWordSep , boolean joinNonWordChars , boolean camelCasedWords , boolean eatWhitespace ) { return findWordEnd ( ( CharSequence ) line , pos , noWordSep , joinNonWordChars , camelCasedWords , eatWhitespace ) ; }
34162	public static String printDouble ( double val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printDouble ( val ) ; }
34173	public int size ( ) { synchronized ( children ) { return children . size ( ) ; } }
34175	private static LDAPFilter createLessOrEqualFilter ( AttributeValueAssertion ava ) throws IOException { return LDAPFilter . createLessOrEqualFilter ( ava . getName ( ) , ByteStringUtility . convertValue ( ava . getValue ( ) ) ) ; }
34176	public static int supplemental ( char h , char l ) { return ( h - _NUM ) * _NUM + ( l - _NUM ) + _NUM ; }
34184	public boolean isSticky ( ) { return block . getType ( ) == Material . PISTON_STICKY_BASE || block . getType ( ) == Material . PISTON_MOVING_PIECE ; }
34198	protected void executeNoResult ( JsonArray params , String sql , Handler < AsyncResult < Void >> resultHandler ) { client . getConnection ( connHandler ( resultHandler , _NULL ) ) ; }
34248	@ Override public void flush ( ) throws IOException { out . flush ( ) ; }
34306	public boolean containsValue ( String val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSString . class ) ) { NSString str = ( NSString ) o ; if ( str . getContent ( ) . equals ( val ) ) return _BOOL ; } } return _BOOL ; }
34318	static String format ( String property , Object [ ] args ) { String text = ResourceBundle . getBundle ( Messages . class . getName ( ) ) . getString ( property ) ; return MessageFormat . format ( text , args ) ; }
34328	static ReplayPromise < Integer > replayPromiseInt ( final Duration timeout , final long time ) { return new ReplayPromiseImpl < > ( timeout , time ) ; }
34334	public void shutdown ( ) { threadGroup . interrupt ( ) ; }
34392	public void append ( byte [ ] bytes , int offset , int len ) { ensureCapacity ( length + len ) ; System . arraycopy ( bytes , offset , buffer , length , len ) ; length += len ; }
34442	private void ensureOpen ( ) throws IOException { if ( closed ) { throw new IOException ( _CHAR Stream closed _CHAR ) ; } }
34463	@ Override public int read ( ) throws IOException { if ( closed ) { return - _NUM ; } else if ( ioException != _NULL ) { throw ioException ; } if ( ( entryBytes == _NULL || ! entryBytes . hasRemaining ( ) ) && ! getNextEntry ( ) ) { closed = _BOOL ; return - _NUM ; } return _NUM & entryBytes . get ( ) ; }
34510	public boolean isCommitted ( ) { return committed ; }
34518	public byte [ ] signBuffer ( java . lang . String data , java . lang . String certAlias ) throws FSSignatureException { return sp . signBuffer ( data , certAlias ) ; }
34583	public boolean isGotoUrlValid ( String url , String orgDN ) { return REDIRECT_URL_VALIDATOR . isRedirectUrlValid ( url , orgDN ) ; }
34588	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String suffix : this . suffixes ) { if ( caseSensitivity . checkEndsWith ( name , suffix ) ) { return _BOOL ; } } return _BOOL ; }
34594	public int compare ( File file1 , File file2 ) { return delegate . compare ( file2 , file1 ) ; }
34637	static Promise < Float > promiseFloat ( ) { return new BasePromise < > ( ) ; }
34677	public static Filter newOAuth2ResourceServerFilter ( final String realm , final Set < String > scopes , final AccessTokenResolver resolver , final String authzIdTemplate ) { return createResourceServerFilter ( realm , scopes , resolver , authzIdTemplate ) ; }
34691	public boolean findPattern ( String pattern ) { for ( int i = _NUM ; i < patterns . length ; i ++ ) { if ( patterns [ i ] . equals ( pattern ) ) return _BOOL ; } return _BOOL ; }
34703	private boolean acceptSequence ( char ... sequence ) { for ( int i = _NUM ; i < sequence . length ; i ++ ) { if ( data [ index + i ] != sequence [ i ] ) return _BOOL ; } return _BOOL ; }
34768	public static void deregisterSASLMechanismHandler ( String name ) { DirectoryServer . deregisterSASLMechanismHandler ( name ) ; }
34771	public boolean isDisplayDelete ( ) { return displayDelete ; }
34784	public static int findWordStart ( CharSequence line , int pos , String noWordSep ) { return findWordStart ( line , pos , noWordSep , _BOOL , _BOOL , _BOOL ) ; }
34875	public Object clone ( ) { SIPResponse retval = ( SIPResponse ) super . clone ( ) ; if ( this . statusLine != _NULL ) retval . statusLine = ( StatusLine ) this . statusLine . clone ( ) ; return retval ; }
34882	public static boolean isValidIfd ( int ifdId ) { return ifdId == IfdId . TYPE_IFD_0 || ifdId == IfdId . TYPE_IFD_1 || ifdId == IfdId . TYPE_IFD_EXIF || ifdId == IfdId . TYPE_IFD_INTEROPERABILITY || ifdId == IfdId . TYPE_IFD_GPS ; }
34919	public int compare ( File file1 , File file2 ) { String suffix1 = FilenameUtils . getExtension ( file1 . getName ( ) ) ; String suffix2 = FilenameUtils . getExtension ( file2 . getName ( ) ) ; return caseSensitivity . checkCompareTo ( suffix1 , suffix2 ) ; }
34947	public String [ ] allKeys ( ) { return dict . keySet ( ) . toArray ( new String [ count ( ) ] ) ; }
34977	void initialize ( ) { UIManager . addPropertyChangeListener ( defaultsListener ) ; UIManager . getDefaults ( ) . addPropertyChangeListener ( colorTree ) ; }
35012	XSLTElementProcessor popProcessor ( ) { return ( XSLTElementProcessor ) m_processors . pop ( ) ; }
35040	private static void recycleLightWeightPopup ( LightWeightPopup popup ) { synchronized ( LightWeightPopup . class ) { List < LightWeightPopup > lightPopupCache = getLightWeightPopupCache ( ) ; if ( lightPopupCache . size ( ) < MAX_CACHE_SIZE ) { lightPopupCache . add ( popup ) ; } } }
35063	private void assertEqualAdviceExpressionValues ( final AdviceExpression ae1 , final AdviceExpression ae2 ) { assertThat ( checkEqualAdviceExpressionValues ( ae1 , ae2 ) ) . isTrue ( ) ; }
35070	public StateInteractive mouse_wheel_moved ( int p_rotation ) { Point2D screen_mouse_pos = i_brd . gdi_context . coordinate_transform . board_to_screen ( i_brd . get_current_mouse_position ( ) ) ; i_brd . get_panel ( ) . zoom_with_mouse_wheel ( screen_mouse_pos , p_rotation ) ; return this ; }
35072	public void authenticateRequesterURI ( HttpServletRequest request , HttpServletResponse response , String samlAuthorityEntityID , String role , String realm ) throws SAML2Exception { throw new SAML2Exception ( SAML2Utils . bundle . getString ( _CHAR invalidAssertionRequester _CHAR ) ) ; }
35074	public boolean isObsolete ( ) { return isObsolete ; }
35076	public boolean isExclusive ( ) { return exclusive ; }
35078	public static SearchFilter createANDFilter ( Collection < SearchFilter > filterComponents ) { return new SearchFilter ( FilterType . AND , filterComponents , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
35138	public static void shutdownFakeServer ( ) throws DirectoryException { DirectoryServer . getInstance ( ) . getServerContext ( ) . getSchemaHandler ( ) . updateSchema ( schemaBeforeStartingFakeServer ) ; }
35143	boolean is_layer_dependent ( ) { int compare_value = layer [ _NUM ] ; for ( int index = _NUM ; index < layer_structure . size ( ) ; ++ index ) { if ( layer [ index ] != compare_value ) { return _BOOL ; } } return _BOOL ; }
35172	void uninitialize ( ) { UIManager . removePropertyChangeListener ( defaultsListener ) ; UIManager . getDefaults ( ) . removePropertyChangeListener ( colorTree ) ; }
35178	public static StringArgument usePKCS12KeyStoreArgument ( ) throws ArgumentException { return StringArgument . builder ( _CHAR usePkcs12keyStore _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_USE_PKCS12 . get ( ) ) . valuePlaceholder ( INFO_KEYSTOREPATH_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
35179	public int findHeader ( String name , int starting ) { for ( int i = starting ; i < count ; i ++ ) { if ( headers [ i ] . getName ( ) . equalsIgnoreCase ( name ) ) { return i ; } } return - _NUM ; }
35230	public boolean has_net_no ( int p_net_no ) { if ( p_net_no < _NUM ) return _BOOL ; int array_len = net_nos_arr . length ; for ( int index = _NUM ; index < array_len ; ++ index ) { if ( net_nos_arr [ index ] == p_net_no ) return _BOOL ; } return _BOOL ; }
35238	private void reInitiateOnWSOpenFailure ( ) { if ( clientEndPoint != _NULL ) { System . out . println ( _CHAR WebsocketThread . reInitiateOnWSOpenFailure ( ) : Force closing previous WS session _CHAR ) ; clientEndPoint . forceClose ( _BOOL ) ; } else { System . out . println ( _CHAR WebsocketThread . reInitiateOnWSOpenFailure ( ) : ERROR : clientEndPoint is _NULL _CHAR ) ; } }
35250	void endOptional ( ) { this . optional -- ; }
35267	public boolean equals ( Object other ) { if ( other instanceof BigInt ) return equals ( ( BigInt ) other ) ; return _BOOL ; }
35269	public AuthenticationEnforcer exceptRead ( ) { exceptRead = _BOOL ; return this ; }
35292	public void abort ( ) { aborted = _BOOL ; if ( waitingThread != _NULL ) waitingThread . interrupt ( ) ; }
35295	private String cleanupPathElement ( String path ) { return path . endsWith ( File . separator ) ? path : ( path + File . separator ) ; }
35298	public boolean isReplicationRunning ( ) { Reject . checkNotNull ( connectionParams ) ; int returnCode = ReplicationCliMain . mainCLI ( ReplicationParameters . replicationParams ( ) . toCommandLineArgumentsStatus ( configParams . getConfigurationFile ( ) , connectionParams ) , ! isRunning ( ) , outStream , errStream ) ; return returnCode == _NUM ; }
35341	@ Override public synchronized void remove ( String key ) { boolean deleted = getFileForKey ( key ) . delete ( ) ; removeEntry ( key ) ; if ( ! deleted ) { VolleyLog . d ( _CHAR Could not delete cache entry for key = % s , filename = % s _CHAR , key , getFilenameForKey ( key ) ) ; } }
35349	public static SAMLEntityInfo from ( final String realm , final String entityID , final String role ) { return new SAMLEntityInfo ( realm , entityID , role ) ; }
35375	public Builder addActions ( Map < String , Boolean > actions ) { this . actions . putAll ( actions ) ; return this ; }
35392	public boolean isDecaying ( ) { return ( getData ( ) & _NUM ) != _NUM ; }
35475	@ Override public void close ( ) throws IOException { }
35479	@ Override public synchronized void stop ( ) { getTransport ( ) . disconnect ( ) ; channel = _NULL ; }
35490	private Object readResolve ( ) { return getInstance ( currencyCode ) ; }
35516	@ SuppressWarnings ( _CHAR unused _CHAR ) static < T > ReplayPromise < Set < T >> replayPromiseSet ( Class < T > componentType , final Duration timeout , final long time ) { return new ReplayPromiseImpl < > ( timeout , time ) ; }
35528	public boolean isPrivate ( ) { return this . backend != _NULL && this . backend . isPrivateBackend ( ) ; }
35531	public StateInteractive cutout_items ( ) { return StateSelecRegionCutout . get_instance ( items_list , return_state , i_brd , actlog ) ; }
35532	public static String printInt ( int val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printInt ( val ) ; }
35564	boolean isHiddenInConfigUI ( ) { return _CHAR yes _CHAR . equalsIgnoreCase ( hideConfigUI ) ; }
35634	public void paintTabbedPaneTabBackground ( SynthContext context , Graphics g , int x , int y , int w , int h , int tabIndex ) { }
35646	public static Border createBlackLineBorder ( ) { if ( blackLine == _NULL ) { blackLine = new LineBorder ( Color . black , _NUM ) ; } return blackLine ; }
35669	public static ManagementContext newLDIFManagementContext ( final File ldifFile ) throws IOException { final List < IOException > exceptions = new ArrayList < > ( ) ; return new ManagementContextWrapper ( newLDIFManagementContext ( ldifFile , exceptions ) , exceptions ) ; }
35670	public void updateStats ( RemoteViews views , WidgetSetting settings , AbstractTracker tracker , int pos , int colorId ) { }
35698	public String toPolyline ( int precision ) { return PolylineUtils . encode ( getCoordinates ( ) , precision ) ; }
35706	public void end ( ) { inProgress = _BOOL ; }
35711	@ Override public boolean isSmapSuppressed ( ) { return isSmapSuppressed ; }
35735	public AnnotationVisitor visitTypeAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { return mv . visitTypeAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
35743	public static String xmlClose ( String xmlName ) { return xmlCloseStart + xmlName + xmlCloseEnd ; }
35750	public boolean equals ( Object obj ) { if ( this == obj ) return _BOOL ; if ( obj instanceof ECFieldF2m ) { return ( ( m == ( ( ECFieldF2m ) obj ) . m ) && ( Arrays . equals ( ks , ( ( ECFieldF2m ) obj ) . ks ) ) ) ; } return _BOOL ; }
35755	@ Override public void removeSecurityReference ( String name ) { referencesLock . writeLock ( ) . lock ( ) ; try { references . remove ( name ) ; } finally { referencesLock . writeLock ( ) . unlock ( ) ; } fireContainerEvent ( _CHAR removeSecurityReference _CHAR , name ) ; }
35778	public Cursor fetch ( Long appID ) { if ( appID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_APPID + _CHAR = _CHAR + appID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
35789	public int parameterCount ( ) { return ptypes . length ; }
35817	public void push ( final Handle handle ) { mv . visitLdcInsn ( handle ) ; }
35901	public boolean isLabelInUse ( String realm , String username , String labelId ) throws ResourceException { return ! query ( realm , username , and ( equality ( _CHAR objectClass _CHAR , OBJECT_CLASS ) , equality ( ID_ATTR , labelId ) , present ( RESOURCE_SET_ATTR ) ) , _BOOL ) . isEmpty ( ) ; }
35921	public static SearchFilter createSubstringFilter ( AttributeType attributeType , ByteString subInitialElement , List < ByteString > subAnyElements , ByteString subFinalElement ) { return new SearchFilter ( FilterType . SUBSTRING , _NULL , _NULL , attributeType , _NULL , _NULL , subInitialElement , subAnyElements , subFinalElement , _NULL , _BOOL ) ; }
35957	static int bitLengthForInt ( int n ) { return _NUM - Integer . numberOfLeadingZeros ( n ) ; }
35962	public static int combine ( int hashCode , int value ) { return _NUM * hashCode + value ; }
35967	public static byte [ ] encode ( byte [ ] data ) { return encode ( data , _NUM , data . length ) ; }
35969	public TextLayout nextLayout ( float wrappingWidth ) { return nextLayout ( wrappingWidth , limit , _BOOL ) ; }
35995	public void addFirst ( E e ) { linkFirst ( e ) ; }
36012	private void executeNotAssuredScenario ( ) throws Exception { checkAssuredParametersOnReceivedUpdateMsg ( ) ; scenarioExecuted = _BOOL ; }
36013	private void resetLogs ( ) { logs . setText ( INIT_TEXT ) ; }
36063	public Enumeration oids ( ) { return ordering . elements ( ) ; }
36067	public MaterialBarcodeScannerBuilder withFlashLightEnabledByDefault ( ) { mFlashEnabledByDefault = _BOOL ; return this ; }
36090	public String displayStructureAsPlainText ( ) { return _CHAR _CHAR ; }
36099	public boolean isSessionEncrypted ( ) { final Session session = connectedRS . get ( ) . session ; return session != _NULL ? session . isEncrypted ( ) : _BOOL ; }
36102	@ Override public void focusLost ( FocusEvent e ) { spinner . repaint ( ) ; }
36123	public static int rebuildIndex ( String baseDir , String baseDN ) throws Exception { Map < String , String > rebuildIndexData = new HashMap < String , String > ( _NUM ) ; rebuildIndexData . put ( SetupConstants . CONFIG_VAR_BASE_DIR , baseDir ) ; rebuildIndexData . put ( SetupConstants . CONFIG_VAR_ROOT_SUFFIX , baseDN ) ; return rebuildIndex ( rebuildIndexData ) ; }
36128	public IDPEntry createIDPEntry ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . IDPENTRY , value ) ; if ( obj == _NULL ) { return new IDPEntryImpl ( value ) ; } else { return ( IDPEntry ) obj ; } }
36205	public void removeChoiceValue ( String value ) throws SMSException , SSOException { Map choiceValues = as . getChoiceValuesMap ( ) ; if ( choiceValues . remove ( value ) != _NULL ) { updateChoiceValues ( choiceValues ) ; } }
36261	public boolean reset ( ) { return m_handler . reset ( ) ; }
36269	@ DataProvider public Object [ ] [ ] relativeTimeValues ( ) { return new Object [ ] [ ] { { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR - _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR + _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR xyz _CHAR , _BOOL } , { _CHAR _NUM - _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } } ; }
36301	public byte [ ] toByteArray ( ) { return builder . toByteArray ( ) ; }
36324	public void cut ( int startIndex , int endIndex ) { selectText ( startIndex , endIndex ) ; JTextComponent . this . cut ( ) ; }
36398	public ScriptEngineConfiguration build ( ) { if ( maxSize < coreSize ) { throw new IllegalStateException ( _CHAR Maximum thread pool size is less than core size _CHAR ) ; } return new ScriptEngineConfiguration ( timeout , whiteList , blackList , securityManager , coreSize , maxSize , queueSize , idleTimeout ) ; }
36431	public DOMTestDocumentBuilderFactory newInstance ( DocumentBuilderSetting [ ] newSettings ) throws DOMTestIncompatibleException { if ( newSettings == _NULL ) { return this ; } DocumentBuilderSetting [ ] mergedSettings = mergeSettings ( newSettings ) ; return new BatikTestDocumentBuilderFactory ( mergedSettings ) ; }
36444	public void stop ( ) { stopStreamingQuote ( ) ; }
36455	public boolean containsKey ( String key ) { return dict . containsKey ( key ) ; }
36476	public int hashCode ( ) { return p . hashCode ( ) ; }
36481	public static String hexDecode ( final String value ) { return decode ( value , _NUM , _NUM ) ; }
36482	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
36532	public int size ( ) { return entries . size ( ) ; }
36534	private void exportBackend ( ) throws Exception { if ( ldif == _NULL ) { ldif = File . createTempFile ( _CHAR LDAPBinaryOptionTestCase _CHAR , _CHAR . ldif _CHAR ) ; } exportConfig = new LDIFExportConfig ( ldif . getAbsolutePath ( ) , ExistingFileBehavior . OVERWRITE ) ; backend = DirectoryServer . getBackend ( _CHAR test _CHAR ) ; backend . exportLDIF ( exportConfig ) ; }
36547	public boolean removeSubtree ( DN key , Collection < ? super T > values ) { final Node < T > node = ditCacheMap . remove ( key ) ; if ( node != _NULL ) { fixNodeReferences ( node ) ; adjustSizeAndCollectElements ( node , values ) ; return _BOOL ; } return _BOOL ; }
36548	private void checkforRowSetInterface ( ) throws SQLException { if ( ( this instanceof javax . sql . RowSet ) == _BOOL ) { throw new SQLException ( _CHAR The class extending abstract class BaseRowSet _CHAR + _CHAR must implement javax . sql . RowSet or one of it _CHAR_CHAR ) ; } }
36571	public ByteString hash48 ( ByteSequence data ) throws DecodeException { try { byte [ ] hash = cryptoManager . digest ( _CHAR SHA - _NUM _CHAR , data . toByteArray ( ) ) ; return ByteString . valueOfBytes ( hash , _NUM , _NUM ) ; } catch ( NoSuchAlgorithmException e ) { throw DecodeException . error ( ERR_CANNOT_HASH_DATA . get ( ) ) ; } }
36631	@ Override public void onFocusChange ( View v , boolean hasFocus ) { mRecyclerViewBridge . setFocusView ( v , oldView , _NUM . _NUM ) ; oldView = v ; }
36634	public int timePassed ( ) { return ( int ) ( AnimationUtils . currentAnimationTimeMillis ( ) - mStartTime ) ; }
36651	public static void deregisterInitializationCompletedListener ( InitializationCompletedListener listener ) { directoryServer . initializationCompletedListeners . remove ( listener ) ; }
36653	private static synchronized void stopReplayThreads ( ) { for ( ReplayThread replayThread : replayThreads ) { replayThread . shutdown ( ) ; } for ( ReplayThread replayThread : replayThreads ) { try { replayThread . join ( ) ; } catch ( InterruptedException e ) { Thread . currentThread ( ) . interrupt ( ) ; } } replayThreads . clear ( ) ; }
36727	private String readLine ( ) throws IOException { StringBuilder sb = new StringBuilder ( ) ; int c ; while ( ( c = ctrlInput . read ( ) ) != _CHAR ) { sb . append ( ( char ) c ) ; } return sb . toString ( ) ; }
36730	public static int combine ( int hashCode , Object value ) { return combine ( hashCode , value . hashCode ( ) ) ; }
36731	private void put112 ( final int b1 , final int b2 , final int s ) { pool . put11 ( b1 , b2 ) . putShort ( s ) ; }
36744	protected void writeLocation ( String loc ) throws IOException { hadAnnotations |= ( loc != _NULL ) ; locOut . writeObject ( loc ) ; }
36768	public void addSessionInfo ( SessionInfo info ) { sessionInfoSet . add ( info ) ; }
36821	public ModifyDNOperation processModifyDN ( ModifyDNChangeRecordEntry modifyDNRecord ) { return processModifyDN ( modifyDNRecord . getDN ( ) , modifyDNRecord . getNewRDN ( ) , modifyDNRecord . deleteOldRDN ( ) , modifyDNRecord . getNewSuperiorDN ( ) ) ; }
36852	public boolean isPrimitive ( ) { Class < ? > t = getTypeInternal ( ) ; return t != _NULL && t . isPrimitive ( ) ; }
36870	public boolean isOwnerWritable ( ) { return is ( encodedPermission , OWNER_WRITABLE ) ; }
36898	public static < T > Promise < T , ResourceException > generateUnsupportedOperation ( ) { return new NotSupportedException ( _CHAR Operation is not supported . '' ) . asPromise ( ) ; }
36913	static int readUnsignedShort ( final byte [ ] b , final int index ) { return ( ( b [ index ] & _NUM ) << _NUM ) | ( b [ index + _NUM ] & _NUM ) ; }
36935	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public void cancelAllOperations ( CancelRequest cancelRequest ) { }
36936	private void ensureSingleTokenInRequest ( AccessTokenVerifier . TokenState headerToken , AccessTokenVerifier . TokenState queryToken ) throws InvalidRequestException { if ( headerToken . isValid ( ) && queryToken . isValid ( ) ) { logger . error ( _CHAR Access Token provided in both query and header in request _CHAR ) ; throw new InvalidRequestException ( _CHAR Access Token can not be provided in both query and header _CHAR ) ; } }
36944	public boolean inDaylightTime ( Date date ) { return ( getOffset ( date . getTime ( ) ) != rawOffset ) ; }
36946	public void paintSplitPaneDividerForeground ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintForeground ( context , g , x , y , w , h , _NULL ) ; }
36948	public void init ( ) throws ServletException { super . init ( ) ; try { String def = PROVIDER_DEFAULT . toString ( ) ; String provider = getInitParameter ( PARAM_PROVIDER , def ) ; this . factory = IdentityServicesFactory . getInstance ( provider ) ; } catch ( Exception e ) { throw new ServletException ( e ) ; } }
36962	public static SubjectKeyIdentifier decode ( byte [ ] encoding ) throws IOException { SubjectKeyIdentifier res = new SubjectKeyIdentifier ( ( byte [ ] ) ASN1OctetString . getInstance ( ) . decode ( encoding ) ) ; res . encoding = encoding ; return res ; }
36993	public boolean isInputShutdown ( ) { return shutIn ; }
37000	public boolean is_hidden ( ) { return hidden ; }
37004	public static boolean isContent ( int c ) { return ( c < _NUM && ( CHARS [ c ] & MASK_CONTENT ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
37016	private void enableSASL ( ) { saslActiveProvider = saslPendingProvider ; saslChannel . redirect ( saslPendingProvider ) ; saslPendingProvider = _NULL ; }
37023	public boolean compressAttributeDescriptions ( ) { return compressAttrDescriptions ; }
37059	private boolean hasObjectClass ( String objectClassLowerCase ) { ObjectClass oc = DirectoryServer . getSchema ( ) . getObjectClass ( objectClassLowerCase ) ; if ( oc . isPlaceHolder ( ) ) { logger . trace ( _CHAR No % s objectclass is defined in the server schema . '' , objectClassLowerCase ) ; return containsObjectClassByName ( objectClassLowerCase ) ; } return objectClasses . containsKey ( oc ) ; }
37063	public String endTblDataActionDeleteHrefDisplay ( ChildContentDisplayEvent event ) { String lbl = ( String ) tblModel . getValue ( TBL_DATA_ACTION_DELETE_LABEL ) ; return ( ( lbl != _NULL ) && ( lbl . length ( ) > _NUM ) ) ? event . getContent ( ) : _CHAR _CHAR ; }
37067	protected SecretKey generateSecretKey ( String algorithm , int keyStrength ) throws EncryptionException { try { KeyGenerator keygen = KeyGenerator . getInstance ( algorithm ) ; if ( keyStrength != _NUM ) { keygen . init ( keyStrength ) ; } return keygen . generateKey ( ) ; } catch ( NoSuchAlgorithmException ne ) { throw new EncryptionException ( ne ) ; } }
37088	public static String jsseToOpenSSL ( String jsseCipherName ) { if ( ! initialized ) { init ( ) ; } return jsseToOpenSSL . get ( jsseCipherName ) ; }
37116	private static void writeFully ( WritableByteChannel ch , ByteBuffer bb ) throws IOException { if ( ch instanceof SelectableChannel ) { SelectableChannel sc = ( SelectableChannel ) ch ; synchronized ( sc . blockingLock ( ) ) { if ( ! sc . isBlocking ( ) ) throw new IllegalBlockingModeException ( ) ; writeFullyImpl ( ch , bb ) ; } } else { writeFullyImpl ( ch , bb ) ; } }
37131	public void validateToken ( SSOToken token ) throws SSOException { getProvider ( token ) . validateToken ( token ) ; }
37193	public void propertyChange ( PropertyChangeEvent evt ) { getHandler ( ) . propertyChange ( evt ) ; }
37201	public static int findWordStart ( String line , int pos , String noWordSep , boolean joinNonWordChars , boolean eatWhitespace ) { return findWordStart ( line , pos , noWordSep , joinNonWordChars , _BOOL , eatWhitespace ) ; }
37224	static String format ( String property , Object [ ] args ) { String text = ResourceBundle . getBundle ( Messages . class . getName ( ) ) . getString ( property ) ; return MessageFormat . format ( text , args ) ; }
37235	@ Override public void connect ( SocketAddress endpoint , int timeout ) throws IOException { super . connect ( endpoint , timeout ) ; init ( ) ; }
37251	public boolean hasWrongStatus ( ) { return hasWrongStatus ; }
37314	@ Override public void invalidate ( ) { if ( ! isValidInternal ( ) ) throw new IllegalStateException ( sm . getString ( _CHAR standardSession . invalidate . ise _CHAR ) ) ; expire ( ) ; }
37336	public Set < Share > listShares ( ) { return new HashSet < > ( shares . values ( ) ) ; }
37353	public boolean isCauseOf ( Throwable exception ) { return TaggedIOException . isTaggedWith ( exception , tag ) ; }
37364	public static void cloneServerInstance ( SSOToken token , String serverName , String cloneName ) throws SSOException , SMSException , ConfigurationException { cloneServerInstance ( token , serverName , cloneName , getNextId ( token ) ) ; }
37365	public ArrayList < PlaLineInt > to_alist ( ) { return a_list ; }
37369	public static int size ( final Iterable < ? > iterable ) { if ( iterable instanceof Collection ) { return ( ( Collection < ? > ) iterable ) . size ( ) ; } else { final Iterator < ? > i = iterable . iterator ( ) ; int sz = _NUM ; while ( i . hasNext ( ) ) { i . next ( ) ; sz ++ ; } return sz ; } }
37370	public static SearchResultReference unmodifiableSearchResultReference ( final SearchResultReference reference ) { if ( reference instanceof UnmodifiableSearchResultReferenceImpl ) { return reference ; } return new UnmodifiableSearchResultReferenceImpl ( reference ) ; }
37409	public boolean isBurning ( ) { return this . burning ; }
37417	public static void registerSASLMechanismHandler ( String name , SASLMechanismHandler < ? > handler ) { directoryServer . saslMechanismHandlers . put ( name , handler ) ; }
37449	@ Deprecated public void disallow ( final PlayerPreLoginEvent . Result result , final String message ) { this . result = result == _NULL ? _NULL : Result . valueOf ( result . name ( ) ) ; this . message = message ; }
37542	@ Override public boolean hasMore ( ) throws NamingException { return iterator . hasNext ( ) ; }
37547	public Cursor fetch ( Long ruleActionID ) { if ( ruleActionID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_RULEACTIONID + _CHAR = _CHAR + ruleActionID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
37572	public EncryptedAttribute encrypt ( Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID ) throws SAML2Exception { Element el = EncManager . getEncInstance ( ) . encrypt ( toXMLString ( _BOOL , _BOOL ) , recipientPublicKey , dataEncAlgorithm , dataEncStrength , recipientEntityID , _CHAR EncryptedAttribute _CHAR ) ; return AssertionFactory . getInstance ( ) . createEncryptedAttribute ( el ) ; }
37613	static boolean ensureParentsExist ( File f ) { final File parent = f . getParentFile ( ) ; return parent . exists ( ) || parent . mkdirs ( ) ; }
37622	@ Override public void addHandshakeCompletedListener ( HandshakeCompletedListener listener ) { if ( listener == _NULL ) { throw new IllegalArgumentException ( _CHAR Provided listener is _NULL _CHAR ) ; } if ( listeners == _NULL ) { listeners = new ArrayList < HandshakeCompletedListener > ( ) ; } listeners . add ( listener ) ; }
37652	public void checkNumberArgs ( int argNum ) throws WrongNumberArgsException { if ( ( argNum > _NUM ) || ( argNum < _NUM ) ) reportWrongNumberArgs ( ) ; }
37673	private void ensureOpen ( ) throws IOException { if ( closed ) { throw new IOException ( _CHAR Stream closed _CHAR ) ; } }
37703	public static String printQName ( javax . xml . namespace . QName val , NamespaceContext nsc ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printQName ( val , nsc ) ; }
37718	public int board_layer_count ( ) { return shapes . length ; }
37721	public static < T > void removeAll ( Collection < T > collection , Collection < T > elements ) { if ( CollectionUtils . isEmpty ( collection ) || CollectionUtils . isEmpty ( elements ) ) { return ; } for ( T element : elements ) { collection . remove ( element ) ; } }
37722	public int timePassed ( ) { final long time = AnimationUtils . currentAnimationTimeMillis ( ) ; final long startTime = Math . min ( mScrollerX . mStartTime , mScrollerY . mStartTime ) ; return ( int ) ( time - startTime ) ; }
37758	public void removeAllRotationPolicies ( ) { for ( RotationPolicy < ? > policy : rotationPolicies ) { if ( policy instanceof SizeBasedRotationPolicy ) { sizeLimit = _NUM ; SizeBasedRotationPolicy sizePolicy = ( SizeBasedRotationPolicy ) policy ; sizePolicy . currentConfig . removeSizeLimitChangeListener ( this ) ; } } this . rotationPolicies . clear ( ) ; }
37770	private static InetAddress toIpAddress ( String hostName ) { try { if ( InetAddressValidator . isValid ( hostName ) ) { return InetAddress . getByName ( hostName ) ; } } catch ( UnknownHostException e ) { } return _NULL ; }
37807	public void objectChanged ( String name , int type , Map cMap ) { objectChanged ( name , _NULL , type , cMap ) ; }
37818	protected void childDeserializedHook ( Object child , BCSChild bcsc ) { synchronized ( children ) { children . put ( child , bcsc ) ; } }
37824	static < T > LongStream makeLong ( AbstractPipeline < ? , Long , ? > upstream ) { return new OfLong ( upstream ) ; }
37830	public static String printByte ( byte val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printByte ( val ) ; }
37859	boolean isHostNameArgument ( final Argument a ) { return HOST_LONG_IDENTIFIERS . contains ( a . getLongIdentifier ( ) ) ; }
37930	public long stdDev ( ) { final long m = deltaCount . get ( ) - _NUM ; return m > _NUM ? ( long ) Math . sqrt ( deltaStdDev . get ( ) / ( double ) m ) : _NUM ; }
37941	public < T extends IElement > Table addCell ( BlockElement < T > blockElement ) { return addCell ( new Cell ( ) . add ( blockElement ) ) ; }
37966	public String delete ( String url , Map < String , String > headers , final int expectedStatusCode ) { HttpDelete method = new HttpDelete ( url ) ; setHeaders ( method , headers ) ; return method ( method , expectedStatusCode ) ; }
37986	static float powerOfTwoF ( int n ) { assert ( n >= FloatConsts . MIN_EXPONENT && n <= FloatConsts . MAX_EXPONENT ) ; return Float . intBitsToFloat ( ( ( n + FloatConsts . EXP_BIAS ) << ( FloatConsts . SIGNIFICAND_WIDTH - _NUM ) ) & FloatConsts . EXP_BIT_MASK ) ; }
38037	public AuthenticationEnforcer exceptDelete ( ) { exceptDelete = _BOOL ; return this ; }
38045	private static boolean isNull ( String s ) { return s == _NULL || s . length ( ) == _NUM ; }
38074	public void close ( ) { if ( acceptT != _NULL ) { log ( _CHAR Closing AcceptThread _CHAR + acceptT ) ; acceptT . close ( ) ; acceptT = _NULL ; } }
38082	public void loadThis ( ) { if ( ( access & Opcodes . ACC_STATIC ) != _NUM ) { throw new IllegalStateException ( _CHAR no _CHAR pointer within static method _CHAR ) ; } mv . visitVarInsn ( Opcodes . ALOAD , _NUM ) ; }
38115	private String generateProfileName ( Date lastSelectedDate ) { return _CHAR Profile : _CHAR + new SimpleDateFormat ( _CHAR dd / MM / yyyy HH : mm _CHAR ) . format ( lastSelectedDate ) ; }
38134	protected void continueDrag ( MouseEvent e ) { dragDividerTo ( positionForMouseEvent ( e ) ) ; }
38135	public static Option start ( long value ) { return new StartOption ( value ) ; }
38150	public Cursor fetch ( Long dataFilterID ) { if ( dataFilterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_DATAFILTERID + _CHAR = _CHAR + dataFilterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
38168	public boolean equals ( Object resourceMatch ) { if ( resourceMatch instanceof ResourceMatch ) { ResourceMatch rm = ( ResourceMatch ) resourceMatch ; return ( rm . resourceMatch . equals ( this . resourceMatch ) ) ; } return ( _BOOL ) ; }
38170	public MaterialBarcodeScannerBuilder withText ( String text ) { mText = text ; return this ; }
38173	public boolean isSpellCheck ( ) { return ! getFieldFlag ( FF_DO_NOT_SPELL_CHECK ) ; }
38214	public static int reverseBytes ( int i ) { i = ( ( i >> > _NUM ) & _NUM ) | ( ( i & _NUM ) << _NUM ) ; return ( i >> > _NUM ) | ( i << _NUM ) ; }
38242	public void stopLogVerifier ( ) { if ( verifier != _NULL ) { verifier . cancel ( ) ; verifier = _NULL ; } }
38248	void storeInitialText ( ) { try { initialText = getText ( _NUM , getLength ( ) ) ; } catch ( BadLocationException e ) { } }
38256	static public PrintWriter log ( Throwable xcpt , PrintWriter out ) { out . println ( _CHAR ----------- _CHAR ) ; out . println ( xcpt . toString ( ) ) ; out . println ( _CHAR Stack Trace : _CHAR ) ; out . print ( getStackTrace ( xcpt ) ) ; out . println ( _CHAR ----------- _CHAR ) ; out . flush ( ) ; return out ; }
38276	public Task read ( String tokenId , ResultHandler < Token , ? > handler ) { return new ReadTask ( tokenId , handler ) ; }
38279	public boolean isObsolete ( ) { return isObsolete ; }
38314	public boolean isRootRealm ( ) { return realm . equals ( Realm . root ( ) ) ; }
38324	public boolean offerFirst ( E e ) { addFirst ( e ) ; return _BOOL ; }
38335	String pidToId ( String pid ) { if ( pid . indexOf ( _CHAR | _CHAR ) > - _NUM ) { return CONFIG_CONTEXT_PREFIX + pid . substring ( _NUM , pid . indexOf ( _CHAR | _CHAR ) ) ; } return CONFIG_CONTEXT_PREFIX + pid ; }
38337	public boolean indent ( ) { return append ( _CHAR _CHAR ) ; }
38339	public boolean isPrivate ( ) { return Modifier . isPrivate ( flags ) ; }
38347	@ Override public void close ( ) { cipher . clean ( ) ; }
38419	public void generate_snapshot ( ) { disable_redo ( ) ; Collection < UndoObjectNode > curr_deleted_objects_list = new LinkedList < UndoObjectNode > ( ) ; deleted_objects_stack . add ( curr_deleted_objects_list ) ; ++ stack_level ; }
38464	public static void registerBackendInitializationListener ( BackendInitializationListener listener ) { directoryServer . backendInitializationListeners . add ( listener ) ; }
38481	public boolean isRecursiveAttrSet ( ElemAttributeSet attrSet ) { if ( _NULL == m_attrSetStack ) { m_attrSetStack = new Stack ( ) ; } if ( ! m_attrSetStack . empty ( ) ) { int loc = m_attrSetStack . search ( attrSet ) ; if ( loc > - _NUM ) { return _BOOL ; } } return _BOOL ; }
38494	synchronized void remove ( CSN csn ) { pendingChanges . remove ( csn ) ; }
38507	public static String tagSwap ( Map < String , String > tags , String content ) { for ( Map . Entry < String , String > contents : tags . entrySet ( ) ) { content = content . replace ( contents . getKey ( ) , contents . getValue ( ) . toString ( ) ) ; } return content ; }
38571	public IDPList createIDPList ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . IDPLIST , value ) ; if ( obj == _NULL ) { return new IDPListImpl ( value ) ; } else { return ( IDPList ) obj ; } }
38578	protected void selectPreviousIndex ( ) { int s = list . getSelectedIndex ( ) ; if ( s > _NUM ) { s -= _NUM ; list . setSelectedIndex ( s ) ; list . ensureIndexIsVisible ( s ) ; } }
38632	public static List < String > doc ( ProtoElement element ) { if ( ! element . hasAttribute ( ElementDocumentationAttribute . KEY ) ) { return ImmutableList . < String > of ( ) ; } return new GoContextCommon ( ) . getCommentLines ( DocumentationUtil . getScopedDescription ( element ) ) ; }
38638	public static FileBasedArgument keyStorePasswordFileArgument ( ) throws ArgumentException { return FileBasedArgument . builder ( OPTION_LONG_KEYSTORE_PWD_FILE ) . shortIdentifier ( OPTION_SHORT_KEYSTORE_PWD_FILE ) . description ( INFO_ARGUMENT_DESCRIPTION_KEYSTOREPASSWORD_FILE . get ( ) ) . valuePlaceholder ( INFO_KEYSTORE_PWD_FILE_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
38640	public static void shutdownCacheManger ( ) { if ( manager != _NULL ) { logger . info ( _CHAR Shutting down cache manager . '' ) ; manager . shutdown ( ) ; cacheMap = new ConcurrentHashMap < > ( ) ; cacheManagerEstablished = _BOOL ; } }
38655	private void removeEntry ( String key ) { CacheHeader entry = mEntries . get ( key ) ; if ( entry != _NULL ) { mTotalSize -= entry . size ; mEntries . remove ( key ) ; } }
38665	public boolean isComponentPartOfCurrentMenu ( Component c ) { if ( selection . size ( ) > _NUM ) { MenuElement me = selection . elementAt ( _NUM ) ; return isComponentPartOfCurrentMenu ( me , c ) ; } else return _BOOL ; }
38667	boolean shouldUpdateSelectedStateFromAction ( ) { return _BOOL ; }
38689	public boolean isBuffered ( ) { return buffered ; }
38716	public static int findWordStart ( CharSequence line , int pos , String noWordSep , boolean joinNonWordChars , boolean camelCasedWords , boolean eatWhitespace ) { return findWordStart ( line , pos , noWordSep , joinNonWordChars , camelCasedWords , eatWhitespace , _BOOL ) ; }
38740	public PlaPoint start_point ( ) { return start_point ; }
38767	public NameIDPolicy createNameIDPolicy ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID_POLICY , value ) ; if ( obj == _NULL ) { return new NameIDPolicyImpl ( value ) ; } else { return ( NameIDPolicy ) obj ; } }
38771	@ Override public Object removeFromEnvironment ( String propName ) { return env . remove ( propName ) ; }
38792	public Task update ( Token token , ResultHandler < Token , ? > handler ) { return new UpdateTask ( token , handler ) ; }
38820	public int size ( ) { return entries . size ( ) ; }
38859	public static String toString ( final ChangeRecord change ) { final StringWriter writer = new StringWriter ( _NUM ) ; try ( LDIFChangeRecordWriter ldifWriter = new LDIFChangeRecordWriter ( writer ) ) { ldifWriter . setAddUserFriendlyComments ( _BOOL ) . writeChangeRecord ( change ) ; } catch ( final IOException e ) { throw new IllegalStateException ( e ) ; } return writer . toString ( ) ; }
38885	public int timePassed ( ) { return ( int ) ( AnimationUtils . currentAnimationTimeMillis ( ) - mStartTime ) ; }
38892	protected void fireValueChanged ( boolean isAdjusting ) { if ( lastChangedIndex == MIN ) { return ; } int oldFirstChangedIndex = firstChangedIndex ; int oldLastChangedIndex = lastChangedIndex ; firstChangedIndex = MAX ; lastChangedIndex = MIN ; fireValueChanged ( oldFirstChangedIndex , oldLastChangedIndex , isAdjusting ) ; }
38899	@ Override public int read ( ) throws IOException { if ( closed ) { return - _NUM ; } byte [ ] b = new byte [ _NUM ] ; if ( read ( b , _NUM , _NUM ) == _NUM ) { throw new IOException ( ) ; } return b [ _NUM ] ; }
38906	public ECPRelayState createECPRelayState ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_RELAY_STATE ) ; if ( obj == _NULL ) { return new ECPRelayStateImpl ( ) ; } else { return ( ECPRelayState ) obj ; } }
38948	@ Override public void addClusterListener ( ClusterListener listener ) { if ( listener != _NULL && ! clusterListeners . contains ( listener ) ) { clusterListeners . add ( listener ) ; listener . setCluster ( this ) ; } }
38949	public void flush ( ) { try { File currentDir = new File ( path ) ; for ( File f : currentDir . listFiles ( ) ) { if ( f . isDirectory ( ) ) FileUtils . deleteDirectory ( f ) ; else FileUtils . deleteQuietly ( f ) ; } notifyObservers ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
38993	static String format ( String property , Object [ ] args ) { String text = ResourceBundle . getBundle ( Messages . class . getName ( ) ) . getString ( property ) ; return MessageFormat . format ( text , args ) ; }
38995	public static int combine ( int hashCode , double value ) { long v = Double . doubleToLongBits ( value ) ; return combine ( hashCode , v ) ; }
39010	@ Override public void sendRedirect ( String location ) throws IOException { sendRedirect ( location , SC_FOUND ) ; }
39011	public void persist ( @ NonNull final String module , @ NonNull final String key , @ Nullable final String previousKey , @ Nullable final String value ) { persist ( module , key , previousKey , value , _BOOL ) ; }
39024	void delete ( ByteString val , AttributeType attrType , CSN csn ) { update ( csn , new AttrValueHistorical ( val , attrType , _NULL , csn ) ) ; }
39044	public boolean isBedSpawn ( ) { return this . isBedSpawn ; }
39056	public MaterialBarcodeScannerBuilder withBleepEnabled ( boolean enabled ) { mBleepEnabled = enabled ; return this ; }
39108	public static BuildVersion binaryVersion ( ) { return BINARY_VERSION ; }
39118	public boolean isOneTouchExpandable ( ) { return oneTouchExpandable ; }
39128	public void clear ( ) { n = _NUM ; }
39134	private boolean hasTriggerMisfired ( Trigger trigger ) { long now = System . currentTimeMillis ( ) ; Date nextFireTime = trigger . getNextFireTime ( ) ; if ( nextFireTime . getTime ( ) <= ( now - misfireThreshold ) ) { return _BOOL ; } return _BOOL ; }
39139	public static boolean isAbsolutePath ( String systemId ) { if ( systemId == _NULL ) return _BOOL ; final File file = new File ( systemId ) ; return file . isAbsolute ( ) ; }
39189	public boolean isBoolean ( ) { return type == BOOLEAN ; }
39207	public boolean contains ( AccessibleState state ) { if ( states == _NULL ) { return _BOOL ; } else { return states . contains ( state ) ; } }
39225	public boolean isOtherWritable ( ) { return is ( encodedPermission , OTHER_WRITABLE ) ; }
39363	public long readLock ( ) { long s = state , next ; return ( ( whead == wtail && ( s & ABITS ) < RFULL && U . compareAndSwapLong ( this , STATE , s , next = s + RUNIT ) ) ? next : acquireRead ( _BOOL , _NUM ) ) ; }
39391	public boolean isRoot ( ) { return _BOOL ; }
39424	@ Override public String toString ( ) { return buf . toString ( ) ; }
39431	public static void deregisterTrustManagerProvider ( DN providerDN ) { directoryServer . trustManagerProviders . remove ( providerDN ) ; }
39475	Cursor sqlQuery ( SQLiteQueryBuilder queryBuilder ) { queryBuilder . setTables ( DATABASE_TABLE ) ; return queryBuilder . query ( database , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL ) ; }
39509	@ Override public void destroySubcontext ( String name ) throws NamingException { getBoundContext ( ) . destroySubcontext ( parseName ( name ) ) ; }
39581	private String fieldTypeCardinalityComment ( Field field , PythonImportHandler importHandler ) { return typeCardinalityComment ( field . getType ( ) , importHandler ) ; }
39603	public RequesterID createRequesterID ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTERID , value ) ; if ( obj == _NULL ) { return new RequesterIDImpl ( value ) ; } else { return ( RequesterID ) obj ; } }
39616	@ Override public void destroySubcontext ( String name ) throws NamingException { destroySubcontext ( new CompositeName ( name ) ) ; }
39660	public void cut ( int startIndex , int endIndex ) { AccessibleEditableText at = getEditorAccessibleEditableText ( ) ; if ( at != _NULL ) { at . cut ( startIndex , endIndex ) ; } }
39672	private void checkTypeParameter ( Method method ) { TypeVariable < Method > typeParameter = getTypeParameter ( method ) ; assertEquals ( _CHAR T _CHAR , typeParameter . getName ( ) ) ; assertEquals ( method , typeParameter . getGenericDeclaration ( ) ) ; }
39693	public boolean containsJwt ( SessionID sid ) { return getJWTFromSessionID ( sid , _BOOL ) != _NULL ; }
39698	private static SearchScope register ( final int intValue , final String name , Enum searchScopeEnum ) { final SearchScope t = new SearchScope ( intValue , name , searchScopeEnum ) ; ELEMENTS [ intValue ] = t ; return t ; }
39700	public boolean isRoot ( ) { return isRoot ; }
39705	public boolean isBoolean ( ) { return type == BOOLEAN ; }
39737	public static int findWordEnd ( CharSequence line , int pos , String noWordSep ) { return findWordEnd ( line , pos , noWordSep , _BOOL , _BOOL , _BOOL ) ; }
39738	protected void deflate ( ) throws IOException { int len = def . deflate ( buf , _NUM , buf . length ) ; if ( len > _NUM ) { out . write ( buf , _NUM , len ) ; } }
39756	public boolean isLocal ( ) { return isLocal ; }
39764	public void enableDragItem ( @ NonNull ItemTouchHelper itemTouchHelper , int toggleViewId , boolean dragOnLongPress ) { itemDragEnabled = _BOOL ; mItemTouchHelper = itemTouchHelper ; setToggleViewId ( toggleViewId ) ; setToggleDragOnLongPress ( dragOnLongPress ) ; }
39787	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String prefix : this . prefixes ) { if ( caseSensitivity . checkStartsWith ( name , prefix ) ) { return _BOOL ; } } return _BOOL ; }
39804	public ModifyDNOperation processModifyDN ( String rawEntryDN , String rawNewRDN , boolean deleteOldRDN , String rawNewSuperior ) { return processModifyDN ( ByteString . valueOfUtf8 ( rawEntryDN ) , ByteString . valueOfUtf8 ( rawNewRDN ) , deleteOldRDN , ByteString . valueOfUtf8 ( rawNewSuperior ) , _NULL ) ; }
39818	@ Override public void endAccess ( ) { super . endAccess ( ) ; if ( manager instanceof ClusterManagerBase ) { ( ( ClusterManagerBase ) manager ) . registerSessionAtReplicationValve ( this ) ; } }
39825	public boolean isObsolete ( ) { return isObsolete ; }
39872	public static Byte valueOf ( String string ) throws NumberFormatException { return valueOf ( parseByte ( string ) ) ; }
39885	public boolean containsValue ( byte [ ] val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSData . class ) ) { NSData dat = ( NSData ) o ; if ( Arrays . equals ( dat . bytes ( ) , val ) ) return _BOOL ; } } return _BOOL ; }
39912	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
39929	public boolean isLoggingEnabled ( int logLevel ) { return logger . isEnabledFor ( intToLevel ( logLevel ) ) ; }
39931	private static Handler < AsyncResult < Void >> completer ( Future < SQLConnection > future , SQLConnection connection ) { return _NULL ; }
39950	public Builder nameForm ( final String nameFormOID ) { this . nameFormOID = nameFormOID ; return this ; }
40000	public synchronized void add ( String name , long threadId ) { if ( mFinished ) { throw new IllegalStateException ( _CHAR Marker added to finished log _CHAR ) ; } mMarkers . add ( new Marker ( name , threadId , SystemClock . elapsedRealtime ( ) ) ) ; }
40015	public void removeDeleteActionListener ( ActionListener listener ) { deleteButton . removeActionListener ( listener ) ; }
40066	public Cursor fetch ( long id ) { Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_ID + _CHAR = _CHAR + id , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
40072	public boolean containsValue ( byte [ ] val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSData . class ) ) { NSData dat = ( NSData ) o ; if ( Arrays . equals ( dat . bytes ( ) , val ) ) return _BOOL ; } } return _BOOL ; }
40079	public void add ( String item ) { addItem ( item ) ; }
40124	private static String unCapitalize ( String name ) { if ( name == _NULL || name . length ( ) == _NUM ) { return name ; } char chars [ ] = name . toCharArray ( ) ; chars [ _NUM ] = Character . toLowerCase ( chars [ _NUM ] ) ; return new String ( chars ) ; }
40190	public void treeExpanded ( TreeExpansionEvent event ) { getHandler ( ) . treeExpanded ( event ) ; }
40198	private void validateName ( String name ) throws InvalidNameException { if ( ( name == _NULL ) || ( name . length ( ) == _NUM ) ) { DEBUG . message ( _CHAR Invalid policy name : _CHAR + name ) ; throw ( new InvalidNameException ( ResBundleUtils . rbName , _CHAR null_name _CHAR , _NULL , _CHAR _CHAR , PolicyException . POLICY ) ) ; } }
40240	public static boolean matchSecret ( String secret ) { return secretSet . remove ( secret ) ; }
40248	public static ObjectifyFactory factory ( ) { return ObjectifyService . factory ( ) ; }
40250	public void reset ( ) { m_sourceTree = new Vector ( ) ; }
40271	boolean isUp ( String serverId ) { return isUp ( servers , serverId ) ; }
40313	protected CellEditorListener createCellEditorListener ( ) { return getHandler ( ) ; }
40326	public boolean containsValue ( double val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSNumber . class ) ) { NSNumber num = ( NSNumber ) o ; if ( num . isReal ( ) && num . doubleValue ( ) == val ) return _BOOL ; } } return _BOOL ; }
40360	public static Event35 . Builder newBuilder ( Event35 other ) { return new Event35 . Builder ( other ) ; }
40372	public SignerInfo toSignerInfo ( ) { return info ; }
40393	public boolean isFinal ( ) { return Modifier . isFinal ( flags ) ; }
40395	public boolean isLightWeightPopupEnabled ( ) { return lightWeightPopup ; }
40447	public boolean containsKey ( String key ) { return dict . containsKey ( key ) ; }
40460	static void copyFile ( File original , File copy ) throws IOException { copyInputStreamToFile ( new FileInputStream ( original ) , copy ) ; }
40462	public < E extends IEventListener > E processContent ( int pageNumber , E renderListener ) { return processContent ( pageNumber , renderListener , new HashMap < String , IContentOperator > ( ) ) ; }
40465	public void start_notify_observers ( ) { observers . activate ( ) ; }
40479	public boolean isLocal ( ) { return isLocal ; }
40492	boolean isCurrentConfigurationValid ( ) { return AMSetupServlet . isCurrentConfigurationValid ( ) ; }
40493	public void toggle_selected_item_violations ( ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; ( ( StateSelectedItem ) interactive_state ) . toggle_clearance_violations ( ) ; }
40521	public void save ( ) throws Exception { String xml = strXMLDeclarationHdr + SMSSchema . nodeToString ( root ) ; ServerConfiguration . setServerConfigXML ( ssoToken , SystemProperties . getServerInstanceName ( ) , xml ) ; }
40535	public boolean hasTransaction ( ) { return mTransactionStack != _NULL ; }
40570	public boolean hasWindow ( ) { return mWindow != _NULL ; }
40574	protected void send ( SessionMessage msg ) { if ( cluster != _NULL ) { cluster . send ( msg ) ; } }
40575	private boolean throwsException ( Method method , Class < ? > exception ) { Class exs [ ] = method . getExceptionTypes ( ) ; for ( int i = _NUM ; i < exs . length ; i ++ ) { if ( exs [ i ] == exception ) { return _BOOL ; } } return _BOOL ; }
40607	public void newParameters ( String cipherTransformation , int cipherKeyLength , boolean enabled ) { cipherInfo = new CipherInfo ( cipherTransformation , cipherKeyLength , enabled ) ; }
40608	@ Override public void close ( ) { if ( context != _NULL ) { OpenSslNativeJna . EVP_CIPHER_CTX_cleanup ( context ) ; } }
40647	public NameIDPolicy createNameIDPolicy ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID_POLICY ) ; if ( obj == _NULL ) { return new NameIDPolicyImpl ( ) ; } else { return ( NameIDPolicy ) obj ; } }
40671	public static Service create ( QName serviceName ) { return new Service ( _NULL , serviceName ) ; }
40724	public void makeVisible ( TreePath path ) { if ( path != _NULL ) { TreePath parentPath = path . getParentPath ( ) ; if ( parentPath != _NULL ) { expandPath ( parentPath ) ; } } }
40736	private void showDlgAttributes ( ) { RuleBuilder . instance ( ) . resetFilterPath ( ) ; Intent intent = new Intent ( ) ; intent . setClass ( getApplicationContext ( ) , ActivityDlgAttributes . class ) ; startActivityForResult ( intent , REQUEST_ADD_FILTER ) ; }
40747	public static SearchFilter createEqualityFilter ( AttributeType attributeType , Set < String > attributeOptions , ByteString assertionValue ) { return new SearchFilter ( FilterType . EQUALITY , _NULL , _NULL , attributeType , attributeOptions , assertionValue , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
40768	public long count ( String database , String table ) { return indexesRepo . countAll ( new Identifier ( database , table ) ) ; }
40796	static < T > Stream < T > makeRef ( AbstractPipeline < ? , T , ? > upstream ) { return new OfRef < > ( upstream ) ; }
40914	private static LDAPFilter createEqualityFilter ( AttributeValueAssertion ava ) throws IOException { return LDAPFilter . createEqualityFilter ( ava . getName ( ) , ByteStringUtility . convertValue ( ava . getValue ( ) ) ) ; }
40931	void sync ( ) throws SyncFailedException { fileDescriptor . sync ( ) ; }
40933	private static LDAPFilter createApproximateFilter ( AttributeValueAssertion ava ) throws IOException { return LDAPFilter . createApproximateFilter ( ava . getName ( ) , ByteStringUtility . convertValue ( ava . getValue ( ) ) ) ; }
40935	public static void addDefaultProfile ( SpringApplication app ) { Map < String , Object > defProperties = new HashMap < > ( ) ; defProperties . put ( SPRING_PROFILE_DEFAULT , Constants . SPRING_PROFILE_DEVELOPMENT ) ; app . setDefaultProperties ( defProperties ) ; }
40942	static SecurityContextMapper fromMessageInfo ( MessageInfoContext messageInfo ) { return new SecurityContextMapper ( messageInfo ) ; }
41000	public static boolean isValidNameStartChar ( char c ) { return ( c >= _CHAR && c <= _CHAR ) || ( c >= _CHAR && c <= _CHAR ) || c == _CHAR || c == _CHAR ; }
41007	@ Override public void write ( String str ) { write ( str . toCharArray ( ) ) ; }
41021	static < T > DoubleStream makeDouble ( AbstractPipeline < ? , Double , ? > upstream ) { return new OfDouble ( upstream ) ; }
41029	public double distance_square ( PlaPointInt p_to_point ) { double dx = p_to_point . v_x - v_x ; double dy = p_to_point . v_y - v_y ; return dx * dx + dy * dy ; }
41038	public int hashCode ( ) { int result = _NUM * declaringClass . hashCode ( ) + methodName . hashCode ( ) ; result = _NUM * result + Objects . hashCode ( fileName ) ; result = _NUM * result + lineNumber ; return result ; }
41054	@ Override public Promise < QueryResponse , ResourceException > handleQuery ( Context context , QueryRequest request , final QueryResourceHandler handler ) { try { return connectionFactory . getConnection ( ) . queryAsync ( new UpdateContext ( context ) , copyOfQueryRequest ( request ) . setResourcePath ( updateStore ) , handler ) ; } catch ( ResourceException e ) { return e . asPromise ( ) ; } }
41080	public void removeEditActionListener ( ActionListener listener ) { editButton . removeActionListener ( listener ) ; }
41105	public static SearchResultEntry unmodifiableSearchResultEntry ( final SearchResultEntry entry ) { if ( entry instanceof UnmodifiableSearchResultEntryImpl ) { return entry ; } return new UnmodifiableSearchResultEntryImpl ( entry ) ; }
41110	@ Override public int available ( ) throws IOException { return end - pos ; }
41131	public static String printDecimal ( java . math . BigDecimal val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printDecimal ( val ) ; }
41184	@ Override public void uninitialize ( ) { KeyboardFocusManager . getCurrentKeyboardFocusManager ( ) . removePropertyChangeListener ( _handler ) ; super . uninitialize ( ) ; }
41213	public Set < PdfName > keySet ( ) { return map . keySet ( ) ; }
41215	public int countRedos ( UndoOwner [ ] owners ) { if ( owners == _NULL ) { return mRedos . size ( ) ; } int count = _NUM ; int i = _NUM ; while ( ( i = findNextState ( mRedos , owners , i ) ) >= _NUM ) { count ++ ; i ++ ; } return count ; }
41228	private boolean shouldDrawItemDivider ( ViewHolder holder , List < AlphabeticalAppsList . AdapterItem > items ) { int pos = holder . getPosition ( ) ; return items . get ( pos ) . viewType == AllAppsGridAdapter . PREDICTION_ICON_VIEW_TYPE ; }
41243	public static long fromInet4Address ( final InetAddress inetAddress ) { ensureIsInet4Address ( inetAddress ) ; return Integer . toUnsignedLong ( inetAddress . hashCode ( ) ) ; }
41308	@ Deprecated protected void drawButton ( PdfCanvas canvas , float x , float y , float width , float height , String text , PdfFont font , int fontSize ) { drawButton ( canvas , x , y , width , height , text , font , ( float ) fontSize ) ; }
41320	public void updateRequestMonitoringData ( String httpMethod , long time ) throws NullPointerException { AtomicLong nb = this . requestMethodsTotalTime . get ( httpMethod . toLowerCase ( ) ) ; if ( nb != _NULL ) { nb . addAndGet ( time ) ; } }
41348	public static StartTLSExtendedRequest unmodifiableStartTLSExtendedRequest ( final StartTLSExtendedRequest request ) { if ( request instanceof UnmodifiableStartTLSExtendedRequestImpl ) { return request ; } return new UnmodifiableStartTLSExtendedRequestImpl ( request ) ; }
41371	private void playBlastSeq ( ) { if ( frameControl % _NUM == _NUM ) { spriteFrame . setImage ( playerStates . get ( ( frameControl / _NUM ) + _NUM ) ) ; if ( frameControl == _NUM ) { dispose ( ) ; isReadyForRemoval = _BOOL ; return ; } } frameControl ++ ; }
41381	public void unsetEncodeTables ( ) { this . qTables = _NULL ; this . DCHuffmanTables = _NULL ; this . ACHuffmanTables = _NULL ; }
41419	public boolean isObsolete ( ) { return isObsolete ; }
41454	private void ensureOpen ( ) throws IOException { if ( response == _NULL || closed ) throw new IOException ( _CHAR Stream closed _CHAR ) ; }
41478	public static GenericExtendedRequest unmodifiableGenericExtendedRequest ( final GenericExtendedRequest request ) { if ( request instanceof UnmodifiableGenericExtendedRequestImpl ) { return request ; } return new UnmodifiableGenericExtendedRequestImpl ( request ) ; }
41498	public static int supplemental ( char h , char l ) { return ( h - _NUM ) * _NUM + ( l - _NUM ) + _NUM ; }
41507	@ SuppressWarnings ( _CHAR unused _CHAR ) public static long parseLong ( byte [ ] bytes ) { return parseLong ( bytes , _NUM , bytes . length ) ; }
41513	public void addPair ( String text ) { StringTokenizer stz = new StringTokenizer ( text , _CHAR \ _NUM _CHAR ) ; if ( stz . countTokens ( ) == _NUM ) { addPair ( stz . nextToken ( ) , stz . nextToken ( ) ) ; } }
41531	private void ping ( ) { }
41560	public void addChildPeopleContainer ( PeopleContainer pc ) throws AccessRightsException , EntryAlreadyExistsException , UMSException { super . addChild ( pc ) ; }
41575	public IDPList createIDPList ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . IDPLIST ) ; if ( obj == _NULL ) { return new IDPListImpl ( ) ; } else { return ( IDPList ) obj ; } }
41582	public void addBackup ( BackupInfo backupInfo ) throws ConfigException { String backupID = backupInfo . getBackupID ( ) ; if ( backups . containsKey ( backupID ) ) { throw new ConfigException ( ERR_BACKUPDIRECTORY_ADD_DUPLICATE_ID . get ( backupID , path ) ) ; } backups . put ( backupID , backupInfo ) ; }
41586	@ Override public boolean hasMore ( ) throws NamingException { return iterator . hasNext ( ) ; }
41593	public BrdItem shove_fail_obstacle_get ( ) { return shove_obstacle . brd_item ; }
41598	public Vector multiply ( int m ) { x *= m ; y *= m ; z *= m ; return this ; }
41615	public void componentAdded ( ContainerEvent e ) { }
41625	public boolean isBorderPainted ( ) { return paintBorder ; }
41629	public static void onHideSoftInput ( Context context , View view ) { if ( view != _NULL && view . getWindowToken ( ) != _NULL ) { InputMethodManager mInputMethodManager = ( InputMethodManager ) context . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; mInputMethodManager . hideSoftInputFromWindow ( view . getWindowToken ( ) , InputMethodManager . HIDE_NOT_ALWAYS ) ; } }
41633	private static void swap ( double x [ ] , int a , int b ) { double t = x [ a ] ; x [ a ] = x [ b ] ; x [ b ] = t ; }
41661	@ Override public void clear ( ) { size = _NUM ; for ( int i = _NUM ; i < elementData . length ; i ++ ) { elementData [ i ] = _NULL ; } modCount ++ ; }
41666	public void removeStaticGroup ( AMStaticGroup group ) throws AMException , SSOException { removeStaticGroup ( group . getDN ( ) ) ; }
41687	public static int findWordStart ( String line , int pos , String noWordSep ) { return findWordStart ( line , pos , noWordSep , _BOOL , _BOOL ) ; }
41699	public void unsetDecodeTables ( ) { this . qTables = _NULL ; this . DCHuffmanTables = _NULL ; this . ACHuffmanTables = _NULL ; }
41726	public static StringArgument useJavaKeyStoreArgument ( ) throws ArgumentException { return StringArgument . builder ( _CHAR useJavaKeystore _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_USE_JAVAKEYSTORE . get ( ) ) . valuePlaceholder ( INFO_KEYSTOREPATH_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
41753	public static MouseListener add ( MouseListener a , MouseListener b ) { return ( MouseListener ) addInternal ( a , b ) ; }
41757	public static boolean isPrintableString ( String s ) { if ( s == _NULL ) { return _BOOL ; } int length = s . length ( ) ; for ( int i = _NUM ; i < length ; i ++ ) { if ( ! isPrintableCharacter ( s . charAt ( i ) ) ) { return _BOOL ; } } return _BOOL ; }
41822	private void ensureOpen ( ) throws IOException { if ( closed ) { throw new IOException ( _CHAR Stream closed _CHAR ) ; } }
41867	public double cos_angle ( PlaLineInt p_other ) { PlaVectorInt v1 = point_b . difference_by ( point_a ) ; PlaVectorInt v2 = p_other . point_b . difference_by ( p_other . point_a ) ; return v1 . cos_angle ( v2 ) ; }
41871	public static boolean appendLinesToFile ( String filePath , String [ ] linesToAppend ) { return appendLinesToFile ( filePath , linesToAppend , _BOOL ) ; }
41883	public void finalizePlugins ( ) { pluginLock . lock ( ) ; try { for ( DirectoryServerPlugin < ? extends PluginCfg > plugin : registeredPlugins . values ( ) ) { try { plugin . finalizePlugin ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } registeredPlugins . clear ( ) ; } finally { pluginLock . unlock ( ) ; } }
41895	public void decIDPCounter ( String realm , String idpName , String counter ) { }
41904	public Frame < V > init ( final Frame < ? extends V > src ) { returnValue = src . returnValue ; System . arraycopy ( src . values , _NUM , values , _NUM , values . length ) ; top = src . top ; return this ; }
41907	void push ( int from ) { int len = sortedArray . length ; -- len ; if ( len == _NUM ) { return ; } while ( from < len ) { sortedArray [ len ] = sortedArray [ len - _NUM ] ; -- len ; } }
41922	@ DataProvider ( name = _CHAR certificateExactMatchValidAssertionValues _CHAR ) public Object [ ] [ ] createCertificateExactMatchingRuleValidAssertionValues ( ) { return new Object [ ] [ ] { { _CHAR { serialNumber _NUM , issuer rdnSequence : \ _CHAR c = DE \ _CHAR } _CHAR } , { _CHAR { serialNumber _NUM , issuer rdnSequence : \ _CHAR \ _CHAR } _CHAR } , { _CHAR { serialNumber _NUM , issuer rdnSequence : \ _CHAR cn = issuer \ _CHAR } _CHAR } , { _CHAR { serialNumber _NUM , issuer rdnSequence : \ _CHAR c = DE \ _CHAR } _CHAR } , { _CHAR { serialNumber _NUM , issuer rdnSequence : \ _CHAR cn = escaped \ _CHAR \ _CHAR dquotes \ _CHAR } _CHAR } , { _CHAR { serialNumber _NUM , issuer rdnSequence : \ _CHAR cn =\ u00D6 \ u00C4 \ _CHAR } _CHAR } } ; }
41943	static ReplayPromise < Long > replayPromiseLong ( final Duration timeout , final long time ) { return new ReplayPromiseImpl < > ( timeout , time ) ; }
41959	public Scoping createScoping ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SCOPING , value ) ; if ( obj == _NULL ) { return new ScopingImpl ( value ) ; } else { return ( Scoping ) obj ; } }
41960	public void addCopyright ( final String copyRight ) { addField ( createCopyrightField ( copyRight ) ) ; }
41993	@ Override public void attributeRemoved ( HttpSessionBindingEvent event ) { log ( _CHAR attributeRemoved ( _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR ) _CHAR ) ; }
41996	public void applyLocalizedPattern ( String pattern ) { String p = translatePattern ( pattern , formatData . getLocalPatternChars ( ) , DateFormatSymbols . patternChars ) ; compiledPattern = compile ( p ) ; this . pattern = p ; }
42022	protected < T > Handler < AsyncResult < T >> resultHandler ( RoutingContext context , Handler < T > handler ) { return _NULL ; }
42025	public LogoutRequest createLogoutRequest ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_REQUEST ) ; if ( obj == _NULL ) { return new LogoutRequestImpl ( ) ; } else { return ( LogoutRequest ) obj ; } }
42096	public boolean hasRights ( int rights ) { return ( this . rights & rights ) != _NUM ; }
42103	private static void recycleMediumWeightPopup ( MediumWeightPopup popup ) { synchronized ( MediumWeightPopup . class ) { List < MediumWeightPopup > mediumPopupCache = getMediumWeightPopupCache ( ) ; if ( mediumPopupCache . size ( ) < MAX_CACHE_SIZE ) { mediumPopupCache . add ( popup ) ; } } }
42111	private void writeIndent ( int times ) throws IOException { for ( int i = options . getBaseIndent ( ) + times ; i > _NUM ; i -- ) { writer . write ( options . getIndent ( ) ) ; } }
42148	private boolean hasNext ( Pattern pattern ) { if ( ! hasNext ( ) ) { return _BOOL ; } Matcher matcher = pattern . matcher ( gserValue . substring ( pos , length ) ) ; return matcher . find ( ) ; }
42165	public void postTerminationNotificationSuccess ( String hostedProviderID , HttpServletRequest request , HttpServletResponse response , String userDN , FSFederationTerminationNotification notification , String termProfile ) { FSUtils . debug . message ( _CHAR In FSDefaultSPAdapter . postTerminationNotificationSuccess . '' ) ; }
42185	public void addFirst ( E e ) { if ( e == _NULL ) throw new NullPointerException ( _CHAR e == _NULL _CHAR ) ; elements [ head = ( head - _NUM ) & ( elements . length - _NUM ) ] = e ; if ( head == tail ) doubleCapacity ( ) ; }
42186	public static ContainerListener add ( ContainerListener a , ContainerListener b ) { return ( ContainerListener ) addInternal ( a , b ) ; }
42241	boolean isOne ( ) { return ( intLen == _NUM ) && ( value [ offset ] == _NUM ) ; }
42242	public static void registerRestoreTaskListener ( RestoreTaskListener listener ) { directoryServer . restoreTaskListeners . addIfAbsent ( listener ) ; }
42250	public boolean hasItemMeta ( ) { return ! Bukkit . getItemFactory ( ) . equals ( meta , _NULL ) ; }
42309	void notify ( final LocalizableMessage message ) throws ClientException { try { handler . handle ( new Callback [ ] { new TextOutputCallback ( TextOutputCallback . INFORMATION , message . toString ( ) ) } ) ; } catch ( final Exception e ) { throw new ClientException ( ReturnCode . ERROR_UNEXPECTED , ERR_UPGRADE_DISPLAY_NOTIFICATION_ERROR . get ( e . getMessage ( ) ) ) ; } }
42318	public static String printFloat ( float val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printFloat ( val ) ; }
42331	public void cancelAllAnimations ( ) { removeCallbacks ( mWrapCropBoundsRunnable ) ; removeCallbacks ( mZoomImageToPositionRunnable ) ; }
42336	public static final boolean isMultipartContent ( HttpServletRequest request ) { if ( ! POST_METHOD . equalsIgnoreCase ( request . getMethod ( ) ) ) { return _BOOL ; } return FileUploadBase . isMultipartContent ( new ServletRequestContext ( request ) ) ; }
42348	public static void writePackageName ( ByteBuffer buffer , String packageName ) { buffer . put ( packageName . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) , _NUM , PACKAGE_NAME_SIZE ) ; }
42361	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
42368	public void close ( ) { if ( parsingComplete ( ) ) { close ( this . input . getCharacterStream ( ) ) ; close ( this . input . getByteStream ( ) ) ; } }
42393	private boolean shouldSynthensizeKeyEvents ( ) { if ( ! checkedInputOverride ) { needToSendKeyTypedEvent = ! METHOD_OVERRIDDEN . get ( getClass ( ) ) ; checkedInputOverride = _BOOL ; } return needToSendKeyTypedEvent ; }
42410	public boolean offerFirst ( E e ) { addFirst ( e ) ; return _BOOL ; }
42432	public boolean isNoUserModification ( ) { return isNoUserModification ; }
42458	public void paintToolBarContentBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
42490	public static String printShort ( short val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printShort ( val ) ; }
42501	private void ensureOpen ( ) throws IOException { if ( in == _NULL ) throw new IOException ( _CHAR Stream closed _CHAR ) ; }
42512	public String toDisplayString ( ) { return toDisplayString ( Locale . getDefault ( ) ) ; }
42521	public static AddRequest newAddRequest ( final DN name ) { final Entry entry = new LinkedHashMapEntry ( ) . setName ( name ) ; return new AddRequestImpl ( entry ) ; }
42527	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
42530	private void userCredentialsAdd ( DirContext context , String dn , String credentials ) throws NamingException { context . addToEnvironment ( Context . SECURITY_PRINCIPAL , dn ) ; context . addToEnvironment ( Context . SECURITY_CREDENTIALS , credentials ) ; }
42548	public String addSection ( Section section ) { String tag = UUID . randomUUID ( ) . toString ( ) ; addSection ( tag , section ) ; return tag ; }
42572	public IDPEntry createIDPEntry ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . IDPENTRY , value ) ; if ( obj == _NULL ) { return new IDPEntryImpl ( value ) ; } else { return ( IDPEntry ) obj ; } }
42588	private static int hashWrapperName ( String xn ) { if ( xn . length ( ) < _NUM ) { return _NUM ; } return ( _NUM * xn . charAt ( _NUM ) + xn . charAt ( _NUM ) ) % _NUM ; }
42594	protected boolean isOpenShiftMode ( ) { MavenProject project = getProject ( ) ; if ( project != _NULL ) { Properties properties = project . getProperties ( ) ; if ( properties != _NULL ) { return PlatformMode . isOpenShiftMode ( properties ) ; } } return _BOOL ; }
42644	@ Deprecated protected void drawCheckBox ( PdfCanvas canvas , float width , float height , int fontSize , boolean on ) { drawCheckBox ( canvas , width , height , ( float ) fontSize , on ) ; }
42648	public static void deregisterKeyManagerProvider ( DN providerDN ) { directoryServer . keyManagerProviders . remove ( providerDN ) ; }
42652	public double dsn_to_board ( double p_val ) { return p_val * scale_factor ; }
42682	public ECPRequest createECPRequest ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_REQUEST ) ; if ( obj == _NULL ) { return new ECPRequestImpl ( ) ; } else { return ( ECPRequest ) obj ; } }
42683	public static SearchFilter createORFilter ( Collection < SearchFilter > filterComponents ) { return new SearchFilter ( FilterType . OR , filterComponents , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
42696	private void sendSubscribeMessage ( ) { currWSstateLock . lock ( ) ; currWSstate = WSstate . WS_SUBSCRIBED ; currWSstateLock . unlock ( ) ; String instrumentString = getInstrumentString ( instrumentList ) ; String msg = _CHAR { \ _CHAR a \ _CHAR : \ _CHAR subscribe \ _CHAR , \ _CHAR v \ _CHAR : [ _CHAR + instrumentString + _CHAR ] } _CHAR ; System . out . println ( _CHAR WebsocketThread . sendSubscribeMessage ( ) : WS Subscribe msg : _CHAR + msg ) ; clientEndPoint . sendMessage ( msg ) ; }
42709	public static String encodeBase64 ( byte [ ] buffer ) { return new String ( Base64 . encode ( buffer ) ) ; }
42722	protected DeltaRequest deserializeDeltaRequest ( DeltaSession session , byte [ ] data ) throws ClassNotFoundException , IOException { session . lock ( ) ; try { ReplicationStream ois = getReplicationStream ( data ) ; session . getDeltaRequest ( ) . readExternal ( ois ) ; ois . close ( ) ; return session . getDeltaRequest ( ) ; } finally { session . unlock ( ) ; } }
42743	public static String printTime ( java . util . Calendar val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printTime ( val ) ; }
42751	public boolean isIs ( ) { return is ; }
42765	public NewEncryptedID encrypt ( Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID ) throws SAML2Exception { Element el = EncManager . getEncInstance ( ) . encrypt ( toXMLString ( _BOOL , _BOOL ) , recipientPublicKey , dataEncAlgorithm , dataEncStrength , recipientEntityID , _CHAR NewEncryptedID _CHAR ) ; return ProtocolFactory . getInstance ( ) . createNewEncryptedID ( el ) ; }
42767	public static String byteToHex ( final byte b ) { return com . forgerock . opendj . util . StaticUtils . byteToHex ( b ) ; }
42771	public JsonValue query ( QueryFilter < CoreTokenField > query ) throws CoreTokenException { Collection < Token > tokens = cts . query ( new TokenFilterBuilder ( ) . withQuery ( query ) . build ( ) ) ; return convertResults ( tokens ) ; }
42778	public NameIDPolicy createNameIDPolicy ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID_POLICY , value ) ; if ( obj == _NULL ) { return new NameIDPolicyImpl ( value ) ; } else { return ( NameIDPolicy ) obj ; } }
42839	public String post ( String url , String json , Map < String , String > headers , final int expectedStatusCode ) { return post ( url , json , headers , Collections . < String , String > emptyMap ( ) , expectedStatusCode ) ; }
42849	public SessionDescription createSessionDescription ( SessionDescription otherSessionDescription ) throws SdpException { return new SessionDescriptionImpl ( otherSessionDescription ) ; }
42855	private File doesLineMatchId ( Map < Pattern , File > contents , String line ) { for ( Pattern pattern : contents . keySet ( ) ) { if ( pattern . matcher ( line ) . matches ( ) ) { return contents . get ( pattern ) ; } } return _NULL ; }
42900	private BackupProtos . Screen packScreen ( Cursor c ) { BackupProtos . Screen screen = new BackupProtos . Screen ( ) ; screen . id = c . getLong ( ID_INDEX ) ; screen . rank = c . getInt ( SCREEN_RANK_INDEX ) ; return screen ; }
42910	@ Override public Object removeFromEnvironment ( String propName ) throws NamingException { return getBoundContext ( ) . removeFromEnvironment ( propName ) ; }
42915	public StatusCode createStatusCode ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_CODE ) ; if ( obj == _NULL ) { return new StatusCodeImpl ( ) ; } else { return ( StatusCode ) obj ; } }
42937	void endOptional ( boolean successful ) { if ( successful ) { parsed . remove ( parsed . size ( ) - _NUM ) ; } else { parsed . remove ( parsed . size ( ) - _NUM ) ; } }
42978	@ SuppressWarnings ( _CHAR unused _CHAR ) static < T > ReplayPromise < List < T >> replayPromiseList ( Class < T > componentType , final Duration timeout , final long time ) { return new ReplayPromiseImpl < > ( timeout , time ) ; }
42982	public void changedUpdate ( DocumentEvent e ) { if ( getUpdatePolicy ( ) == NEVER_UPDATE || ( getUpdatePolicy ( ) == UPDATE_WHEN_ON_EDT && ! SwingUtilities . isEventDispatchThread ( ) ) ) { return ; } if ( e instanceof AbstractDocument . UndoRedoDocumentEvent ) { setDot ( e . getOffset ( ) + e . getLength ( ) ) ; } }
42983	public static WSFederationEntityInfo from ( final String realm , final String entityID , final String role ) { return new WSFederationEntityInfo ( realm , entityID , role ) ; }
43004	public void mouse_pressed ( Point2D p_point ) { if ( interactive_state != _NULL && gdi_context != _NULL ) { current_mouse_position = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; set_interactive_state ( interactive_state . mouse_pressed ( current_mouse_position ) ) ; } }
43040	public UpdateLogEntry addFile ( JsonValue file ) { files . add ( file ) ; return this ; }
43087	public boolean isExclusive ( ) { return exclusive ; }
43139	public boolean isAbstract ( ) { return Modifier . isAbstract ( flags ) ; }
43154	public boolean isContinuousLayout ( ) { return continuousLayout ; }
43157	public ECPRelayState createECPRelayState ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_RELAY_STATE , value ) ; if ( obj == _NULL ) { return new ECPRelayStateImpl ( value ) ; } else { return ( ECPRelayState ) obj ; } }
43169	public void initializeConfiguration ( String configFile ) throws InitializationException { environmentConfig . setConfigFile ( new File ( configFile ) ) ; initializeConfiguration ( ) ; }
43202	public static boolean isSupplemental ( int c ) { return ( c >= _NUM && c <= _NUM ) ; }
43205	private void sendUnSubscribeMessage ( ) { currWSstateLock . lock ( ) ; currWSstate = WSstate . WS_UNSUBSCRIBED ; currWSstateLock . unlock ( ) ; String instrumentString = getInstrumentString ( instrumentList ) ; String msg = _CHAR { \ _CHAR a \ _CHAR : \ _CHAR unsubscribe \ _CHAR , \ _CHAR v \ _CHAR : [ _CHAR + instrumentString + _CHAR ] } _CHAR ; System . out . println ( _CHAR WebsocketThread . sendUnSubscribeMessage ( ) : WS UnSubscribe msg : _CHAR + msg ) ; clientEndPoint . sendMessage ( msg ) ; }
43253	@ Override public void attributeReplaced ( HttpSessionBindingEvent event ) { log ( _CHAR attributeReplaced ( _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR ) _CHAR ) ; }
43287	public void addAll ( T ... items ) { synchronized ( lock ) { this . items . addAll ( identifiedItemFactory . createList ( items ) ) ; } itemPositionChangeChecked = new SparseBooleanArray ( this . items . size ( ) ) ; notifyDataSetChanged ( ) ; }
43324	public static < T > boolean exists ( Collection < T > collection , Predicate < T > predicate ) { if ( CollectionUtils . isEmpty ( collection ) ) { return _BOOL ; } if ( predicate == _NULL ) { return _BOOL ; } for ( T element : collection ) { if ( predicate . evaluate ( element ) ) { return _BOOL ; } } return _BOOL ; }
43337	public static ServerDescriptor createStandalone ( Map < ADSContext . ServerProperty , Object > adsProperties ) { ServerDescriptor desc = new ServerDescriptor ( ) ; desc . setAdsProperties ( adsProperties ) ; return desc ; }
43341	@ Override public void attributeAdded ( HttpSessionBindingEvent event ) { log ( _CHAR attributeAdded ( _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR ) _CHAR ) ; }
43396	public void removeDefaultValue ( String value ) throws SMSException , SSOException { Set defaultValues = getDefaultValues ( ) ; if ( defaultValues != Collections . EMPTY_SET ) { defaultValues . remove ( value ) ; updateDefaultValues ( defaultValues ) ; } }
43404	static DN create ( ManagedObjectPath < ? , ? > path , LDAPProfile profile ) { DNBuilder builder = new DNBuilder ( profile ) ; path . serialize ( builder ) ; return builder . build ( ) ; }
43433	public boolean equals ( Object resourceMatch ) { if ( resourceMatch instanceof ResourceMatch ) { ResourceMatch rm = ( ResourceMatch ) resourceMatch ; return ( rm . resourceMatch . equals ( this . resourceMatch ) ) ; } return ( _BOOL ) ; }
43437	public final boolean hasOption ( ManagedObjectOption option ) { return options . contains ( option ) ; }
43503	public void addRating ( final String rating ) { addField ( createRatingField ( rating ) ) ; }
43504	static public boolean principalNameEqualsUuid ( SSOToken token ) throws SSOException { String principalName = token . getPrincipal ( ) . getName ( ) ; String uuid = token . getProperty ( com . sun . identity . shared . Constants . UNIVERSAL_IDENTIFIER ) ; return principalName . equals ( uuid ) ; }
43566	public boolean hasMask ( int mask ) { return ( this . operationMask & mask ) != _NUM ; }
43569	@ Override public boolean isOutboundDone ( ) { return isOutboundDone ; }
43608	public void disallow ( final Result result , final String message ) { this . result = result ; this . message = message ; }
43635	private static String digits ( long val , int digits ) { long hi = _NUM << ( digits * _NUM ) ; return Long . toHexString ( hi | ( val & ( hi - _NUM ) ) ) . substring ( _NUM ) ; }
43690	public static String byteToLowerHex ( final byte b ) { return com . forgerock . opendj . util . StaticUtils . byteToLowerHex ( b ) ; }
43695	public ModifyDNOperation processModifyDN ( DN entryDN , RDN newRDN , boolean deleteOldRDN , DN newSuperior ) { return processModifyDN ( entryDN , newRDN , deleteOldRDN , newSuperior , _NULL ) ; }
43759	public boolean hasConnection ( ) { return mConnection != _NULL ; }
43762	public ConfigException createDecodingExceptionAdaptor ( ConstraintViolationException e ) { DN dn = e . getManagedObject ( ) . getDN ( ) ; LocalizableMessage message = ERR_ADMIN_MANAGED_OBJECT_DECODING_PROBLEM . get ( dn , stackTraceToSingleLineString ( e , _BOOL ) ) ; return new ConfigException ( message , e ) ; }
43862	public static boolean isValid ( String inetAddress ) { return isValidInet4Address ( inetAddress ) || isValidInet6Address ( inetAddress ) ; }
43870	public boolean isOtherReadable ( ) { return is ( encodedPermission , OTHER_READABLE ) ; }
43882	public void useTimings ( boolean use ) { useTimings = use ; }
43967	@ Override public void memberDisappeared ( Member member ) { MembershipListener listener = this . listener ; if ( listener != _NULL ) { listener . memberDisappeared ( member ) ; } }
43969	public void delete ( Index index ) { logger . debug ( _CHAR Deleting index : _CHAR + index . toString ( ) ) ; indexesRepo . delete ( index ) ; }
44016	public static long parseLong ( byte [ ] bytes , int startIndex , int endIndex ) { long l = _NUM ; for ( int i = startIndex ; i < endIndex ; i ++ ) { l <<= _NUM ; l |= bytes [ i ] & _NUM ; } return l ; }
44058	public static boolean hasDescriptor ( LocalizableMessage msg , LocalizableMessageDescriptor . Arg7 < ? , ? , ? , ? , ? , ? , ? > desc ) { return msg . ordinal ( ) == desc . ordinal ( ) && msg . resourceName ( ) . equals ( desc . resourceName ( ) ) ; }
44071	public void release ( ) { initParameters = _NULL ; }
44094	public void disallow ( final Result result , final String message ) { this . result = result ; this . message = message ; }
44096	public static String xmlOpen ( String xmlName ) { return xmlOpenStart + xmlName + xmlOpenEnd ; }
44097	public void appendToBody ( String text ) { body . append ( text ) ; }
44114	public void enableAutoTagging ( PdfPage page ) { this . page = page ; }
44129	public boolean isTagCountDefined ( int tagId ) { int info = getTagInfo ( ) . get ( tagId ) ; if ( info == _NUM ) { return _BOOL ; } return getComponentCountFromInfo ( info ) != ExifTag . SIZE_UNDEFINED ; }
44158	static ReplicationServerInfo newInstance ( ReplicationMsg msg ) throws IllegalArgumentException { if ( msg instanceof ReplServerStartMsg ) { return new ReplicationServerInfo ( ( ReplServerStartMsg ) msg ) ; } else if ( msg instanceof ReplServerStartDSMsg ) { return new ReplicationServerInfo ( ( ReplServerStartDSMsg ) msg ) ; } throw new IllegalArgumentException ( _CHAR Unexpected PDU type : _CHAR + msg . getClass ( ) . getName ( ) + _CHAR : \ n _CHAR + msg ) ; }
44165	void pushProcessor ( XSLTElementProcessor processor ) { m_processors . push ( processor ) ; }
44206	public static boolean hasDescriptor ( LocalizableMessage msg , LocalizableMessageDescriptor . Arg0 desc ) { return msg . ordinal ( ) == desc . ordinal ( ) && msg . resourceName ( ) . equals ( desc . resourceName ( ) ) ; }
44210	public void display_default_message ( ) { }
44217	public static DeleteRequest newDeleteRequest ( final DN name ) { Reject . ifNull ( name ) ; return new DeleteRequestImpl ( name ) ; }
44267	static < T > Stream < T > makeRef ( AbstractPipeline < ? , T , ? > upstream , Comparator < ? super T > comparator ) { return new OfRef < > ( upstream , comparator ) ; }
44279	public boolean canCreateRule ( Policy policy , String realmName ) { getSvcTypeNameToActionsMap ( policy , realmName ) ; return ! requiredResourceNameService . isEmpty ( ) || ! notRequiredResourceNameService . isEmpty ( ) ; }
44283	public GetComplete createGetComplete ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . GET_COMPLETE , value ) ; if ( obj == _NULL ) { return new GetCompleteImpl ( value ) ; } else { return ( GetComplete ) obj ; } }
44319	@ Override public MatchStrength hasFormat ( InputAccessor acc ) throws IOException { return SmileParserBootstrapper . hasSmileFormat ( acc ) ; }
44333	public boolean isRealm ( String candidate ) { return SMSEntry . checkIfEntryExists ( DNMapper . orgNameToDN ( candidate ) , getSSOToken ( ) ) ; }
44344	public boolean isOwnerExecutable ( ) { return is ( encodedPermission , OWNER_EXECUTABLE ) ; }
44347	public void removePopupMenuListener ( PopupMenuListener l ) { listenerList . remove ( PopupMenuListener . class , l ) ; }
44349	protected void CopyHeader ( ) { seek ( _NUM ) ; int major = getCard8 ( ) ; int minor = getCard8 ( ) ; int hdrSize = getCard8 ( ) ; int offSize = getCard8 ( ) ; nextIndexOffset = hdrSize ; OutputList . addLast ( new RangeItem ( buf , _NUM , hdrSize ) ) ; }
44368	public static int combine ( int hashCode , long value ) { int v = ( int ) ( value ^ ( value >> > _NUM ) ) ; return combine ( hashCode , v ) ; }
44383	private void configureRedirector ( ) { if ( redirectorElement != _NULL ) { redirectorElement . configure ( redirector ) ; redirectOutput = _BOOL ; } redirectorConfigured = _BOOL ; }
44390	public static String byteToLowerHex ( final byte b ) { return BYTE_HEX_STRINGS [ LOWER_CASE ] [ b & _NUM ] ; }
44427	@ Override public synchronized void reset ( ) { pos = _NUM ; }
44433	protected void handleGenericException ( Exception e ) throws SAXException { reportError ( e . getMessage ( ) , e , _BOOL ) ; }
44460	public int padCount ( byte [ ] in ) throws InvalidCipherTextException { int count = in [ in . length - _NUM ] & _NUM ; if ( count > in . length ) { throw new InvalidCipherTextException ( _CHAR pad block corrupted _CHAR ) ; } return count ; }
44466	public NameIDMappingRequest createNameIDMappingRequest ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_REQ , elem ) ; if ( obj == _NULL ) { return new NameIDMappingRequestImpl ( elem ) ; } else { return ( NameIDMappingRequest ) obj ; } }
44486	public static void assertJsonValue ( JsonValue jsonValue , String resourceFilePath ) throws IOException { assertThat ( jsonValue . toString ( ) ) . isEqualTo ( jsonFromFile ( resourceFilePath ) . toString ( ) ) ; }
44493	private static ReplicationServerInfo newInstance ( ReplicationMsg msg , String newServerURL ) throws IllegalArgumentException { final ReplicationServerInfo rsInfo = newInstance ( msg ) ; rsInfo . setServerURL ( newServerURL ) ; return rsInfo ; }
44497	public boolean is_valid ( ) { return plaline_len ( ) >= _NUM ; }
44501	public boolean isReplicationEnabled ( ) { return server . isReplicationEnabled ( ) ; }
44513	public String toString ( ) { BigInteger b = toBigInteger ( _NUM ) ; return b . toString ( ) ; }
44527	public boolean matchesPattern ( DN dn ) { return patternDN . matchesDN ( dn ) ; }
44529	private static int hexToBinary ( final byte b ) throws IOException { final int i = Character . digit ( ( char ) b , _NUM ) ; if ( i == - _NUM ) { throw new IOException ( _CHAR Invalid quoted printable encoding : not a valid hex digit : _CHAR + b ) ; } return i ; }
44545	public TaskRunnable next ( ) { return nextTask ; }
44555	public boolean isDuplicateToken ( ) { return dupToken ; }
44564	@ Override public EncryptedAssertion encrypt ( Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID ) throws SAML2Exception { Element el = EncManager . getEncInstance ( ) . encrypt ( toXMLString ( _BOOL , _BOOL ) , recipientPublicKey , dataEncAlgorithm , dataEncStrength , recipientEntityID , _CHAR EncryptedAssertion _CHAR ) ; return AssertionFactory . getInstance ( ) . createEncryptedAssertion ( el ) ; }
44566	public final boolean isWild ( ) { return m_wild ; }
44591	private static void swap ( Object [ ] x , int a , int b ) { Object t = x [ a ] ; x [ a ] = x [ b ] ; x [ b ] = t ; }
44683	public boolean isIntendedForAudience ( String audience ) { return jwt . getClaimsSet ( ) . getAudience ( ) . contains ( audience ) ; }
44690	public boolean isChunked ( ) { return ( buffer == _NULL ) && wrappedEntity . isChunked ( ) ; }
44694	private HttpServletResponse _getHttpServletResponse ( ) { return ( HttpServletResponse ) super . getResponse ( ) ; }
44702	public static DecodeException error ( final LocalizableMessage message ) { return new DecodeException ( message , _BOOL , _NULL ) ; }
44721	public boolean isLocalSet ( int index ) throws TransformerException { return ( _stackFrames [ index + _currentFrameBottom ] != _NULL ) ; }
44731	public synchronized void write ( int b ) { ensureCapacity ( count + _NUM ) ; buf [ count ] = ( byte ) b ; count += _NUM ; }
44795	protected boolean isReInvite ( ) { return this . reInviteFlag ; }
44825	public Table addCell ( String content ) { return addCell ( new Cell ( ) . add ( new Paragraph ( content ) ) ) ; }
44831	public void addSigner ( PrivateKey key , byte [ ] subjectKeyID , String digestOID , CMSAttributeTableGenerator signedAttrGen , CMSAttributeTableGenerator unsignedAttrGen ) throws IllegalArgumentException { addSigner ( key , subjectKeyID , getEncOID ( key , digestOID ) , digestOID , signedAttrGen , unsignedAttrGen ) ; }
44843	@ JsonIgnore public Privilege asPrivilege ( ) { return privilege ; }
44855	public boolean nextTile ( ) throws ModelControlException { boolean movedToRow = super . nextTile ( ) ; if ( movedToRow ) { curTile = getTileIndex ( ) ; setDisplayFieldValue ( TXT_PARENT_INDEX , parentIdx ) ; setDisplayFieldValue ( TXT_CHOICE , choices [ curTile ] ) ; setDisplayFieldValue ( TXT_INDEX , Integer . toString ( curTile ) ) ; } return movedToRow ; }
44867	public GetComplete createGetComplete ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . GET_COMPLETE , value ) ; if ( obj == _NULL ) { return new GetCompleteImpl ( value ) ; } else { return ( GetComplete ) obj ; } }
44892	static < K extends Comparable < K > , V > BlockLogWriter < K , V > newWriter ( final LogWriter writer , final RecordParser < K , V > parser ) { return new BlockLogWriter < > ( writer , parser , BLOCK_SIZE ) ; }
44895	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( nonGitDirectory ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + nonGitDirectory ) ; } }
44912	public void paintTabbedPaneTabBorder ( SynthContext context , Graphics g , int x , int y , int w , int h , int tabIndex ) { }
44916	public Cursor fetch ( Long eventID ) { if ( eventID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_EVENTID + _CHAR = _CHAR + eventID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
44920	public void add ( T item ) { synchronized ( lock ) { items . add ( identifiedItemFactory . create ( item ) ) ; } notifyDataSetChanged ( ) ; }
44926	public static void addErrorMessage ( ConfigChangeResult ccr , LocalizableMessage message ) { ccr . setResultCode ( DirectoryServer . getServerErrorResultCode ( ) ) ; ccr . addMessage ( message ) ; }
44938	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , ChecksumException , FormatException { return decode ( image , _NULL ) ; }
44977	public static Border createGrayLineBorder ( ) { if ( grayLine == _NULL ) { grayLine = new LineBorder ( Color . gray , _NUM ) ; } return grayLine ; }
44979	public void replaceText ( int startIndex , int endIndex , String s ) { AccessibleEditableText at = getEditorAccessibleEditableText ( ) ; if ( at != _NULL ) { at . replaceText ( startIndex , endIndex , s ) ; } }
44982	public static void registerBackupTaskListener ( BackupTaskListener listener ) { directoryServer . backupTaskListeners . addIfAbsent ( listener ) ; }
44994	public boolean isInteger ( ) { return type == INTEGER ; }
45055	@ SuppressWarnings ( _CHAR unused _CHAR ) public static long parseLong ( byte [ ] bytes ) { return parseLong ( bytes , _NUM , bytes . length ) ; }
45058	void replace ( DocumentFilter . FilterBypass fb , int offset , int length , String text , AttributeSet attrs ) throws BadLocationException { if ( ignoreDocumentMutate ) { fb . replace ( offset , length , text , attrs ) ; return ; } super . replace ( fb , offset , length , text , attrs ) ; }
45088	private static LDAPFilter createNOTFilter ( Filter filter ) throws LDAPException , IOException { return LDAPFilter . createNOTFilter ( createFilter ( filter ) ) ; }
45099	public boolean debug ( int mask , int level ) { return ( ( debug_mask & mask ) != _NUM ) && ( ( debug_level & level ) != _NUM ) ; }
45111	public void paintSplitPaneDividerBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
45113	public E push ( E object ) { addElement ( object ) ; return object ; }
45146	private TemplateValue templateValue ( String value ) { TemplateValue templateVal = new TemplateFile . TemplateValue ( _NULL ) ; templateVal . append ( value ) ; return templateVal ; }
45217	void startOptional ( ) { parsed . add ( currentParsed ( ) . copy ( ) ) ; }
45255	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public Set < String > delimStringToSet ( String str , String delimiter ) { return PolicyUtils . delimStringToSet ( str , delimiter ) ; }
45274	public static String printInteger ( java . math . BigInteger val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printInteger ( val ) ; }
45294	public boolean equals ( Object resourceMatch ) { if ( resourceMatch instanceof ResourceMatch ) { ResourceMatch rm = ( ResourceMatch ) resourceMatch ; return ( rm . resourceMatch . equals ( this . resourceMatch ) ) ; } return ( _BOOL ) ; }
45331	protected final void assertValid ( final OperatedClientConnection wrappedConn ) { if ( wrappedConn == _NULL ) { throw new IllegalStateException ( _CHAR No wrapped connection . '' ) ; } }
45332	@ Override public boolean is_contained_in ( ShapeTileBox p_box ) { return ( oct_lx >= p_box . box_ll . v_x && oct_ly >= p_box . box_ll . v_y && oct_rx <= p_box . box_ur . v_x && oct_uy <= p_box . box_ur . v_y ) ; }
45351	void addRootOutline ( PdfOutline outline ) { if ( ! outlineMode ) return ; if ( pagesWithOutlines . size ( ) == _NUM ) { put ( PdfName . Outlines , outline . getContent ( ) ) ; } }
45390	protected boolean isDynamicalOrIgnoredProfile ( String realm ) { return _BOOL ; }
45402	private void initializeBackGroundProcessing ( ) { if ( backgroundThread == _NULL ) { DirectoryServer . registerShutdownListener ( this ) ; stopRequested = _BOOL ; backgroundThread = new BackGroundThread ( ) ; backgroundThread . start ( ) ; } }
45403	public static RepaintManager currentManager ( Component c ) { return currentManager ( AppContext . getAppContext ( ) ) ; }
45414	public boolean isObsolete ( ) { return isObsolete ; }
45436	public static DataProviderID newUserID ( final String name ) { return new DataProviderID ( name , _BOOL ) ; }
45459	private boolean isAdministratorAlreadyRegistered ( String uid ) throws ADSContextException { return isExistingEntry ( getAdministratorDN ( uid ) ) ; }
45508	public void lostOwnership ( Clipboard clipboard , Transferable contents ) { if ( ownsSelection ) { ownsSelection = _BOOL ; if ( component != _NULL && ! component . hasFocus ( ) ) { setSelectionVisible ( _BOOL ) ; } } }
45553	@ SuppressWarnings ( _CHAR unused _CHAR ) static < T > Promise < Collection < T >> promiseCollection ( Class < T > componentType ) { return new BasePromise < > ( ) ; }
45586	public Collection < PdfObject > values ( boolean asDirects ) { if ( asDirects ) { return values ( ) ; } else { return map . values ( ) ; } }
45608	public void propertyChange ( PropertyChangeEvent e ) { String propertyName = e . getPropertyName ( ) ; if ( propertyName == _CHAR horizontalScrollBar _CHAR || propertyName == _CHAR verticalScrollBar _CHAR ) { if ( e . getNewValue ( ) instanceof JScrollBar ) { setScrollBarRelations ( ( JScrollBar ) e . getNewValue ( ) ) ; } } }
45616	@ NonNull public static Agera merge ( @ NonNull Observable ... sources ) { if ( sources . length == _NUM ) { return empty ( ) ; } else if ( sources . length == _NUM ) { return wrap ( sources [ _NUM ] ) ; } return new AgeraMerge ( sources ) ; }
45685	public NameIDMappingResponse createNameIDMappingResponse ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_RES , elem ) ; if ( obj == _NULL ) { return new NameIDMappingResponseImpl ( elem ) ; } else { return ( NameIDMappingResponse ) obj ; } }
45691	static String stringFromPacket ( DatagramPacket packet ) { return new String ( packet . getData ( ) , _NUM , packet . getLength ( ) ) ; }
45722	@ Override public void close ( ) { closeWriter ( ) ; }
45763	private JPanel createBrowseButtonPanel ( FieldName fieldName , JButton browseButton ) { return Utilities . createBrowseButtonPanel ( getLabel ( fieldName ) , getField ( fieldName ) , browseButton ) ; }
45779	public static boolean containsModifiedHandshake ( TlsContext tlsContext ) { int unexpected = getUnexpectedMessagePosition ( tlsContext ) ; int finished = getServerFinishedMessagePosition ( tlsContext ) ; if ( unexpected != - _NUM ) { if ( finished == - _NUM ) { return _BOOL ; } else { return unexpected < finished ; } } return _BOOL ; }
45784	public void schemaChanged ( String serviceName , String version ) { }
45788	public boolean isFocusPainted ( ) { return paintFocus ; }
45812	private void ensureOpen ( ) throws IOException { if ( out == _NULL ) throw new IOException ( _CHAR Stream closed _CHAR ) ; }
45873	private boolean isServerAlreadyRegistered ( Map < ServerProperty , Object > serverProperties ) throws ADSContextException { return isExistingEntry ( makeDNFromServerProperties ( serverProperties ) ) ; }
45888	public boolean isByteValues ( ) { return byteValues ; }
45893	public static boolean isClassAvailable ( final String className ) { try { Class . forName ( className ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
45910	public static Event35Id . Builder newBuilder ( Event35Id other ) { return new Event35Id . Builder ( other ) ; }
45931	public void updateVLVIndex ( VLVIndexDescriptor index ) { vlvIndexPanel . update ( index ) ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , vlvIndexPanel . getTitle ( ) . toString ( ) ) ; }
45935	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; out . writeInt ( length ( ) ) ; out . writeObject ( getValue ( ) ) ; }
45937	public void applyMirroredCorrection ( ResultPoint [ ] points ) { if ( ! mirrored || points == _NULL || points . length < _NUM ) { return ; } ResultPoint bottomLeft = points [ _NUM ] ; points [ _NUM ] = points [ _NUM ] ; points [ _NUM ] = bottomLeft ; }
45963	public void run ( ) { TaskRunnable taskToRun = next ( ) ; do { taskToRun . run ( ) ; } while ( ( taskToRun = taskToRun . next ( ) ) != _NULL ) ; }
45965	@ NonNull public static Agera just ( ) { return new AgeraJust ( ) ; }
45975	public InitCodeView generateInitCode ( MethodTransformerContext methodContext , InitCodeContext initCodeContext ) { InitCodeNode rootNode = InitCodeNode . createTree ( initCodeContext ) ; if ( initCodeContext . outputType ( ) == InitCodeOutputType . FieldList ) { return buildInitCodeViewFlattened ( methodContext , rootNode ) ; } else { return buildInitCodeViewRequestObject ( methodContext , rootNode ) ; } }
45991	public ModifyDNOperation processModifyDN ( DN entryDN , RDN newRDN , boolean deleteOldRDN ) { return processModifyDN ( entryDN , newRDN , deleteOldRDN , _NULL , _NULL ) ; }
46029	DNLock readLockEntry ( DN entryDN ) throws DirectoryException { final DNLock lock = DirectoryServer . getLockManager ( ) . tryReadLockEntry ( entryDN ) ; if ( lock != _NULL ) { return lock ; } throw new DirectoryException ( ResultCode . BUSY , ERR_BACKEND_CANNOT_LOCK_ENTRY . get ( entryDN ) ) ; }
46042	public boolean isPopupMenuVisible ( ) { ensurePopupMenuCreated ( ) ; return popupMenu . isVisible ( ) ; }
46070	private void writeToFile ( final String input , final File output ) throws IOException { InputStream is = new ByteArrayInputStream ( input . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ) ; writeToFile ( is , output ) ; }
46072	public static long parseLong ( byte [ ] bytes , int startIndex , int endIndex ) { long l = _NUM ; for ( int i = startIndex ; i < endIndex ; i ++ ) { l <<= _NUM ; l |= bytes [ i ] & _NUM ; } return l ; }
46104	protected boolean isIgnoredProfile ( String realm ) { return _BOOL ; }
46140	public static EnumEvalResult evaluate ( AciEvalContext evalCtx , Aci aci ) { return aci . evaluate ( evalCtx ) ; }
46154	public static void separateArrayItems ( XMPMeta xmp , String schemaNS , String arrayName , String catedStr , PropertyOptions arrayOptions , boolean preserveCommas ) throws XMPException { XMPUtilsImpl . separateArrayItems ( xmp , schemaNS , arrayName , catedStr , arrayOptions , preserveCommas ) ; }
46155	public Vector multiply ( double m ) { x *= m ; y *= m ; z *= m ; return this ; }
46190	public String post ( String url , String json , final int expectedStatusCode ) { return post ( url , json , Collections . < String , String > emptyMap ( ) , expectedStatusCode ) ; }
46204	@ Override public void destroyObject ( final PooledObject < PooledConnectionAndInfo > p ) throws Exception { doDestroyObject ( p . getObject ( ) ) ; }
46214	static ReplayPromise < String > replayPromiseString ( final Duration timeout , final long time ) { return new ReplayPromiseImpl < > ( timeout , time ) ; }
46274	public static HierarchyBoundsListener add ( HierarchyBoundsListener a , HierarchyBoundsListener b ) { return ( HierarchyBoundsListener ) addInternal ( a , b ) ; }
46311	public static void deregisterSupportedExtension ( String oid ) { DirectoryServer . deregisterSupportedExtension ( oid ) ; }
46326	public boolean is_active_routing_layer ( int p_layer_no ) { if ( p_layer_no < _NUM || p_layer_no >= active_routing_layer_arr . length ) { return _BOOL ; } return active_routing_layer_arr [ p_layer_no ] ; }
46360	public static CompareResult newCompareResult ( final ResultCode resultCode ) { Reject . ifNull ( resultCode ) ; return new CompareResultImpl ( resultCode ) ; }
46363	public static String formatDate ( Date date ) { return formatDate ( date , PATTERN_RFC1123 ) ; }
46368	public static < T > boolean isEmpty ( T [ ] array ) { return array == _NULL || array . length == _NUM ; }
46395	public boolean isMouseOver ( ) { return mouseOver ; }
46396	public double trace_length ( ) { double result = _NUM ; for ( BrdItem curr_item : item_list ) { if ( curr_item instanceof BrdTracep ) { result += ( ( BrdTracep ) curr_item ) . get_length ( ) ; } } return result ; }
46410	public void join ( PlaPointFloat p_point , int p_layer ) { if ( p_layer < _NUM || p_layer >= octa_arr . length ) return ; OctagonMutable curr = octa_arr [ p_layer ] ; curr . join ( p_point ) ; area_cleared = _BOOL ; }
46432	private void refreshButtonClicked ( ) { refresh ( _BOOL , _BOOL ) ; }
46442	public void unassignAllPolicies ( String serviceName , Set policyDNs ) throws AMException , SSOException { throw new UnsupportedOperationException ( ) ; }
46459	private static boolean isSchemaBackend ( String backendId ) { return _CHAR schema _CHAR . equalsIgnoreCase ( backendId ) ; }
46501	public void disallow ( final Result result , final String message ) { this . result = result ; this . message = message ; }
46521	public PlaPointFloat rotate_90_deg ( int p_factor , PlaPointFloat p_pole ) { PlaPointFloat v = substract ( p_pole ) ; v = v . rotate_90_deg ( p_factor ) ; return p_pole . add ( v ) ; }
46561	public static GenericIntermediateResponse unmodifiableGenericIntermediateResponse ( final GenericIntermediateResponse response ) { if ( response instanceof UnmodifiableGenericIntermediateResponseImpl ) { return response ; } return new UnmodifiableGenericIntermediateResponseImpl ( response ) ; }
46565	public void layoutAfter ( ) { }
46567	public boolean isSpellCheck ( ) { return ! getFieldFlag ( FF_DO_NOT_SPELL_CHECK ) ; }
46590	public static String printLong ( long val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printLong ( val ) ; }
46606	public synchronized void addElement ( E object ) { if ( elementCount == elementData . length ) { growByOne ( ) ; } elementData [ elementCount ++ ] = object ; modCount ++ ; }
46660	public static String createCnonce ( ) { String cnonce ; MessageDigest md5Helper = createMessageDigest ( _CHAR MD5 _CHAR ) ; cnonce = Long . toString ( System . currentTimeMillis ( ) ) ; cnonce = encode ( md5Helper . digest ( EncodingUtils . getAsciiBytes ( cnonce ) ) ) ; return cnonce ; }
46663	static Promise < Double > promiseDouble ( ) { return new BasePromise < > ( ) ; }
46689	public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( _CHAR ServiceConfigManagerImpl : _CHAR ) . append ( serviceName ) . append ( _CHAR Version : _CHAR ) . append ( version ) ; return ( sb . toString ( ) ) ; }
46710	public static boolean isLyrics3v2FieldIdentifier ( String identifier ) { return identifier . length ( ) >= _NUM && getInstanceOf ( ) . getIdToValueMap ( ) . containsKey ( identifier . substring ( _NUM , _NUM ) ) ; }
46748	public boolean hasDescription ( ) { return ( description != _NULL ) ; }
46779	public String displayStructureAsXML ( ) { return _CHAR _CHAR ; }
46787	public boolean containsValue ( NSObject val ) { return val != _NULL && dict . containsValue ( val ) ; }
46788	public static int flashCount ( ) { return info ( ) . flashCount ; }
46889	public Cursor fetch ( Long attributeID ) { if ( attributeID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_EVENTATTRIBUTEID + _CHAR = _CHAR + attributeID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
46890	private boolean hasNextInetSocketAddress ( ) { return socketAddresses != _NULL ; }
46923	public void reset_graphics_update_box ( ) { update_box = ShapeTileBox . EMPTY ; }
46929	public static SocketAddress findFreeSocketAddress ( ) { try ( ServerSocket serverLdapSocket = bindFreePort ( ) ) { return serverLdapSocket . getLocalSocketAddress ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
46963	public static void deregisterSupportedExtension ( String oid ) { directoryServer . extendedOperationHandlers . remove ( toLowerCase ( oid ) ) ; }
46995	public static boolean hasDescriptor ( LocalizableMessage msg , LocalizableMessageDescriptor . Arg3 < ? , ? , ? > desc ) { return msg . ordinal ( ) == desc . ordinal ( ) && msg . resourceName ( ) . equals ( desc . resourceName ( ) ) ; }
47032	protected void layoutColumns ( int targetSpan , int [ ] offsets , int [ ] spans , SizeRequirements [ ] reqs ) { Arrays . fill ( offsets , _NUM ) ; Arrays . fill ( spans , _NUM ) ; colIterator . setLayoutArrays ( offsets , spans , targetSpan ) ; CSS . calculateTiledLayout ( colIterator , targetSpan ) ; }
47042	public PdfPage addNewPage ( PageSize pageSize ) { checkClosingStatus ( ) ; PdfPage page = new PdfPage ( this , pageSize ) ; checkAndAddPage ( page ) ; dispatchEvent ( new PdfDocumentEvent ( PdfDocumentEvent . START_PAGE , page ) ) ; dispatchEvent ( new PdfDocumentEvent ( PdfDocumentEvent . INSERT_PAGE , page ) ) ; return page ; }
47074	private void initializeTable ( int capacity ) { this . table = new Object [ capacity * _NUM ] ; this . mask = table . length - _NUM ; this . clean = _NUM ; this . maximumLoad = capacity * _NUM / _NUM ; }
47112	private void initializeRootDNConfigManager ( ) throws ConfigException , InitializationException { rootDNConfigManager = new RootDNConfigManager ( serverContext ) ; rootDNConfigManager . initializeRootDNs ( ) ; }
47119	public AuthStatus secureResponse ( MessageInfo messageInfo ) throws AuthException { return serverAuthModule . secureResponse ( messageInfo , _NULL ) ; }
47145	public < T > boolean isProvidedFor ( Class < T > service ) { synchronized ( providers ) { return providers . containsKey ( service ) ; } }
47153	public static boolean isID3v24FrameIdentifier ( String identifier ) { return identifier . length ( ) >= _NUM && ID3v24Frames . getInstanceOf ( ) . getIdToValueMap ( ) . containsKey ( identifier . substring ( _NUM , _NUM ) ) ; }
47170	public String toString ( ) { return ( _CHAR SchemaType : _CHAR + schemaType ) ; }
47171	private Expression compileOperation ( Operation operation , int opPos ) throws TransformerException { int leftPos = getFirstChildPos ( opPos ) ; int rightPos = getNextOpPos ( leftPos ) ; operation . setLeftRight ( compile ( leftPos ) , compile ( rightPos ) ) ; return operation ; }
47188	public void replaceText ( int startIndex , int endIndex , String s ) { selectText ( startIndex , endIndex ) ; JTextComponent . this . replaceSelection ( s ) ; }
47204	public void backup ( ) { Log . w ( TAG , _CHAR Backing up _CHAR + DATABASE_NAME ) ; IOUtil . copy ( databaseDir ( ) + DATABASE_NAME , databaseDir ( ) + DATABASE_NAME_BACKUP ) ; }
47213	public boolean isDoubleBuffered ( ) { return getFlag ( IS_DOUBLE_BUFFERED ) ; }
47243	public boolean containsValue ( Date val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSDate . class ) ) { NSDate dat = ( NSDate ) o ; if ( dat . getDate ( ) . equals ( val ) ) return _BOOL ; } } return _BOOL ; }
47246	public boolean isGroupReadable ( ) { return is ( encodedPermission , GROUP_READABLE ) ; }
47270	public void remove ( BrdItem p_item ) { if ( ! p_item . is_on_the_board ( ) ) return ; for ( AwtreeShapeSearch curr_tree : search_trees ) { AwtreeNodeLeaf [ ] curr_tree_entries = p_item . get_search_tree_entries ( curr_tree ) ; if ( curr_tree_entries == _NULL ) continue ; curr_tree . remove ( curr_tree_entries ) ; } p_item . clear_search_tree_entries ( ) ; p_item . set_on_the_board ( _BOOL ) ; }
47378	public static long fromInet4AddressAndInode ( final InetAddress inetAddress , final int inode ) { return overlayInode ( fromInet4Address ( inetAddress ) , inode ) ; }
47389	public String toString ( ) { return schemaType . toString ( ) ; }
47401	public static boolean isNodeTheSame ( Node node1 , Node node2 ) { if ( node1 instanceof DTMNodeProxy && node2 instanceof DTMNodeProxy ) return ( ( DTMNodeProxy ) node1 ) . equals ( ( DTMNodeProxy ) node2 ) ; else return ( node1 == node2 ) ; }
47419	public static DragSourceListener add ( DragSourceListener a , DragSourceListener b ) { return ( DragSourceListener ) addInternal ( a , b ) ; }
47472	boolean shouldUpdateSelectedStateFromAction ( ) { return _BOOL ; }
47513	public boolean isRolloverEnabled ( ) { return rolloverEnabled ; }
47536	public void stop ( ) { this . run = _BOOL ; }
47541	PreparedStatement resolveInlineQuery ( Connection con , String queryExpression , Map < String , Object > params ) throws SQLException , ResourceException { List < String > tokenNames = new ArrayList < String > ( ) ; QueryInfo info = new QueryInfo ( queryExpression , tokenNames ) ; return resolveQuery ( info , con , params ) ; }
47574	@ Override public void onLoginFailure ( Map requestParamsMap , HttpServletRequest request , HttpServletResponse response ) { }
47578	public static void addDefaultProfile ( SpringApplication app ) { Map < String , Object > defProperties = new HashMap < > ( ) ; defProperties . put ( SPRING_PROFILE_DEFAULT , Constants . SPRING_PROFILE_DEVELOPMENT ) ; app . setDefaultProperties ( defProperties ) ; }
47592	public String toString ( ) { return instanceName ( value ) + _CHAR = _CHAR + super . toString ( ) ; }
47598	public String toString ( ) { return toDisplayString ( ) ; }
47609	public void addFirst ( E e ) { if ( e == _NULL ) throw new NullPointerException ( ) ; elements [ head = ( head - _NUM ) & ( elements . length - _NUM ) ] = e ; if ( head == tail ) doubleCapacity ( ) ; }
47628	public void putAll ( Map m ) { Set keys = m . keySet ( ) ; for ( Iterator iter = keys . iterator ( ) ; iter . hasNext ( ) ; ) { Object key = iter . next ( ) ; put ( key , m . get ( key ) ) ; } }
47629	public boolean canStripWhiteSpace ( ) { StylesheetRoot sroot = this . getStylesheetRoot ( ) ; return ( _NULL != sroot ) ? sroot . canStripWhiteSpace ( ) : _BOOL ; }
47634	public boolean isAuthenticated ( ) { return isAuthenticated ; }
47652	public static boolean isValidLifecycleCallback ( Method method ) { if ( method . getParameterTypes ( ) . length != _NUM || Modifier . isStatic ( method . getModifiers ( ) ) || method . getExceptionTypes ( ) . length > _NUM || ! method . getReturnType ( ) . getName ( ) . equals ( _CHAR void _CHAR ) ) { return _BOOL ; } return _BOOL ; }
47665	void startOptional ( ) { this . optional ++ ; }
47673	public Builder singleValue ( boolean isSingleValue ) { this . isSingleValue = isSingleValue ; return this ; }
47708	public ECPRelayState createECPRelayState ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_RELAY_STATE , value ) ; if ( obj == _NULL ) { return new ECPRelayStateImpl ( value ) ; } else { return ( ECPRelayState ) obj ; } }
47717	public void addServiceListener ( ConfigurationListener l , Predicate < String > servicePredicate ) { serviceListeners . add ( Pair . of ( l , servicePredicate ) ) ; }
47728	private void endProcessing ( Collection < PartialToken > results ) { if ( results == _NULL ) { close ( ) ; } }
47772	private void verifyEntry ( ReadableTransaction txn , EntryID entryID , Entry entry ) { if ( verifyDN2ID ) { verifyDN2ID ( txn , entryID , entry ) ; } verifyIndex ( txn , entryID , entry ) ; }
47819	public static Crop of ( Uri source , Uri destination ) { return new Crop ( source , destination ) ; }
47843	public AmazonSNSClient produce ( PushNotificationServiceConfig config ) { AmazonSNSClient service = new AmazonSNSClient ( new BasicAWSCredentials ( config . getAccessKey ( ) , config . getSecret ( ) ) ) ; service . setRegion ( Region . getRegion ( Regions . fromName ( config . getRegion ( ) ) ) ) ; return service ; }
47866	public static java . io . PrintStream logStream ( ) { return info ( ) . stream ; }
47935	public void execute ( String command ) throws BuildException { execute ( command , _NULL , _NULL , - _NUM ) ; }
47990	public static String convertToHex ( byte [ ] bytes ) { ByteBuffer buf = new ByteBuffer ( ) ; for ( byte b : bytes ) { buf . appendHex ( b ) ; } return PdfEncodings . convertToString ( buf . toByteArray ( ) , _NULL ) . toUpperCase ( ) ; }
47998	public static boolean isContent ( int c ) { return ( c < _NUM && ( CHARS [ c ] & MASK_CONTENT ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
48024	public void appendHeading ( ) { appendHeading ( LocalizableMessage . EMPTY ) ; }
48029	public ResourceType build ( ) { Reject . ifNull ( name , _CHAR ResourceType name may not be _NULL . _CHAR ) ; Reject . ifNull ( uuid , _CHAR ResourceType UUID may not be _NULL . _CHAR ) ; return new ResourceType ( this ) ; }
48042	public Builder addPatterns ( Set < String > patterns ) { this . patterns . addAll ( patterns ) ; return this ; }
48043	public boolean isInsert ( ) { return isInsert ; }
48049	void replacePolicyInResourceTree ( ServiceTypeManager svtm , SSOToken token , Policy oldPolicy , Policy newPolicy ) throws PolicyException , SSOException { removePolicyFromResourceTree ( svtm , token , oldPolicy ) ; addPolicyToResourceTree ( svtm , token , newPolicy ) ; }
48115	public Cursor fetch ( Long ruleFilterID ) { if ( ruleFilterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_RULEFILTERID + _CHAR = _CHAR + ruleFilterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
48120	public boolean offerFirst ( E e ) { addFirst ( e ) ; return _BOOL ; }
48133	public static boolean isStarted ( ) { return isRunning && ! isShutdownCalled ; }
48142	private void purge ( ) { synchronized ( queue ) { WeakKey key ; while ( ( key = ( WeakKey ) queue . poll ( ) ) != _NULL ) { super . remove ( key . getReferenced ( ) ) ; } } }
48155	public static boolean isID3v22FrameIdentifier ( String identifier ) { if ( identifier . length ( ) < _NUM ) { return _BOOL ; } else return identifier . length ( ) == _NUM && ID3v22Frames . getInstanceOf ( ) . getIdToValueMap ( ) . containsKey ( identifier ) ; }
48198	public static int findWordStart ( String line , int pos , String noWordSep , boolean joinNonWordChars ) { return findWordStart ( line , pos , noWordSep , joinNonWordChars , _BOOL ) ; }
48243	public boolean isBorderPainted ( ) { return paintBorder ; }
48245	public static SearchFilter createEqualityFilter ( AttributeType attributeType , ByteString assertionValue ) { return new SearchFilter ( FilterType . EQUALITY , _NULL , _NULL , attributeType , _NULL , assertionValue , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
48257	public boolean isGroupExecutable ( ) { return is ( encodedPermission , GROUP_EXECUTABLE ) ; }
48309	public boolean offerLast ( E e ) { addLast ( e ) ; return _BOOL ; }
48311	public long seed ( ) { return seed ; }
48313	void add ( JScrollPane scroll , Point p ) { scrolls . add ( scroll ) ; points . add ( p ) ; }
48326	public String [ ] split ( String res ) { if ( resourceNameUtil == _NULL ) { PolicyManager . debug . error ( _CHAR split : Do n _CHAR_CHAR ) ; String [ ] list = new String [ 1 ] ; list [ 0 ] = res ; return ( list ) ; } return ( resourceNameUtil . split ( res ) ) ; }
48363	private boolean isVowel ( char ch ) { return VOWELS . indexOf ( ch ) != - _NUM ; }
48368	public void paintTabbedPaneTabBorder ( SynthContext context , Graphics g , int x , int y , int w , int h , int tabIndex ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
48383	public static void unregisterAll ( Plugin plugin ) { synchronized ( allLists ) { for ( HandlerList h : allLists ) { h . unregister ( plugin ) ; } } }
48416	public void addElement ( E element ) { int index = delegate . size ( ) ; delegate . addElement ( element ) ; fireIntervalAdded ( this , index , index ) ; }
48429	public static BindResult newBindResult ( final ResultCode resultCode ) { Reject . ifNull ( resultCode ) ; return new BindResultImpl ( resultCode ) ; }
48455	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized E elementAt ( int location ) { if ( location < elementCount ) { return ( E ) elementData [ location ] ; } throw arrayIndexOutOfBoundsException ( location , elementCount ) ; }
48499	public static InputMethodListener add ( InputMethodListener a , InputMethodListener b ) { return ( InputMethodListener ) addInternal ( a , b ) ; }
48509	public static net . aimeizi . person . Person . Builder newBuilder ( net . aimeizi . person . Person . Builder other ) { return new net . aimeizi . person . Person . Builder ( other ) ; }
48551	public void updateStandardIndex ( IndexDescriptor index ) { standardIndexPanel . update ( index ) ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , standardIndexPanel . getTitle ( ) . toString ( ) ) ; }
48582	public static Intent buildStartInTerminalIntent ( File script ) { final ComponentName componentName = Constants . SL4A_SERVICE_LAUNCHER_COMPONENT_NAME ; Intent intent = new Intent ( ) ; intent . setComponent ( componentName ) ; intent . setAction ( Constants . ACTION_LAUNCH_FOREGROUND_SCRIPT ) ; intent . putExtra ( Constants . EXTRA_SCRIPT_PATH , script . getAbsolutePath ( ) ) ; return intent ; }
48587	@ Override protected boolean isDynamicalOrIgnoredProfile ( String realm ) { return SAML2PluginsUtils . isDynamicalOrIgnoredProfile ( realm ) ; }
48597	@ Override public void uninitialize ( ) { super . uninitialize ( ) ; defaults . uninitialize ( ) ; ImageCache . getInstance ( ) . flush ( ) ; UIManager . getDefaults ( ) . removePropertyChangeListener ( defaultsListener ) ; }
48613	public boolean isPaused ( ) { return state == Trigger . STATE_PAUSED ; }
48624	public void processLECPAuthnRequest ( FSAuthnRequest authnRequest ) { processAuthnRequest ( authnRequest , _BOOL ) ; return ; }
48672	@ Override public void initialize ( ) { super . initialize ( ) ; DefaultLookup . setDefaultLookup ( new SynthDefaultLookup ( ) ) ; setStyleFactory ( factory ) ; KeyboardFocusManager . getCurrentKeyboardFocusManager ( ) . addPropertyChangeListener ( _handler ) ; }
48706	public static Long valueOf ( String string ) throws NumberFormatException { return valueOf ( parseLong ( string ) ) ; }
48731	public AnnotationVisitor visitTypeAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { return mv . visitTypeAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
48734	public boolean hasExtensions ( ) { return extensions != _NULL ; }
48759	@ Override public boolean accept ( File file , String name ) { for ( String suffix : this . suffixes ) { if ( caseSensitivity . checkEndsWith ( name , suffix ) ) { return _BOOL ; } } return _BOOL ; }
48775	public boolean containsValue ( double val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSNumber . class ) ) { NSNumber num = ( NSNumber ) o ; if ( num . isReal ( ) && num . doubleValue ( ) == val ) return _BOOL ; } } return _BOOL ; }
48784	public ECPResponse createECPResponse ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_RESPONSE , value ) ; if ( obj == _NULL ) { return new ECPResponseImpl ( value ) ; } else { return ( ECPResponse ) obj ; } }
48817	@ Override public void startDocument ( ) throws SAXException { if ( saxLog . isDebugEnabled ( ) ) { saxLog . debug ( _CHAR startDocument ( ) _CHAR ) ; } if ( locator instanceof Locator2 && root instanceof DocumentProperties . Encoding ) { ( ( DocumentProperties . Encoding ) root ) . setEncoding ( ( ( Locator2 ) locator ) . getEncoding ( ) ) ; } configure ( ) ; }
48827	public static boolean checkIfEntryExists ( String dn , SSOToken token ) { try { return ( smsObject . entryExists ( token , dn ) ) ; } catch ( Exception e ) { debug . error ( _CHAR SMSEntry : Error in checking if entry exists : '' + dn , e ) ; } return ( _BOOL ) ; }
48848	void addToSubroutine ( final long id , final int nbSubroutines ) { if ( ( status & VISITED ) == _NUM ) { status |= VISITED ; srcAndRefPositions = new int [ nbSubroutines / _NUM + _NUM ] ; } srcAndRefPositions [ ( int ) ( id >> > _NUM ) ] |= ( int ) id ; }
48887	public XMLString concat ( String str ) { return new XString ( str ( ) . concat ( str ) ) ; }
48893	public boolean isEncrypted ( ) { return cipherInfo . encrypt ; }
48916	public void layoutBefore ( ) { }
48926	public void createVisibleAdminUidArgument ( final LocalizableMessage description ) { try { this . adminUidArg = adminUid ( description ) ; } catch ( final ArgumentException unexpected ) { throw new RuntimeException ( _CHAR Unexpected _CHAR ) ; } }
48931	public void stop ( ) { if ( running ) { mSensorManager . unregisterListener ( this ) ; mSensorThread . quit ( ) ; running = _BOOL ; } }
48933	public AttributeQuery createAttributeQuery ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE_QUERY ) ; if ( obj == _NULL ) { return new AttributeQueryImpl ( ) ; } else { return ( AttributeQuery ) obj ; } }
48939	public SignedJwt reconstructAuthId ( String authId ) throws RestAuthException { try { return jwtBuilderFactory . reconstruct ( authId , SignedJwt . class ) ; } catch ( JwtRuntimeException e ) { throw new RestAuthException ( ResourceException . BAD_REQUEST , _CHAR Failed to parse JWT , _CHAR + e . getLocalizedMessage ( ) , e ) ; } }
48944	private void addDependency ( PendingChange dependentChange ) { dependentChangesLock . lock ( ) ; try { dependentChanges . add ( dependentChange ) ; } finally { dependentChangesLock . unlock ( ) ; } }
48963	public Cursor fetch ( Long ruleID ) { if ( ruleID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_RULEID + _CHAR = _CHAR + ruleID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
48969	public void start_scope ( LogfileScope p_logfile_scope ) { if ( ! write_enabled ) return ; try { file_writer . write ( p_logfile_scope . name ) ; file_writer . write ( _CHAR \ n _CHAR ) ; } catch ( IOException e2 ) { System . out . println ( _CHAR Logfile . start_scope : write failed _CHAR ) ; } }
48977	private void checkConflicts ( TemplateSubPatternAssociation head , XPathContext xctxt , int targetNode , QName mode ) { }
48983	public void paintTabbedPaneTabBackground ( SynthContext context , Graphics g , int x , int y , int w , int h , int tabIndex ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
48987	public V pop ( ) throws IndexOutOfBoundsException { if ( top == _NUM ) { throw new IndexOutOfBoundsException ( _CHAR Can not pop operand off an empty stack . '' ) ; } return values [ -- top + locals ] ; }
48991	public Extensions createExtensions ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EXTENSIONS ) ; if ( obj == _NULL ) { return new ExtensionsImpl ( ) ; } else { return ( Extensions ) obj ; } }
49025	public void redo ( ) { super . redo ( ) ; this . object . restoreState ( postState ) ; }
49035	static Promise < Integer > promiseInt ( ) { return new BasePromise < > ( ) ; }
49037	public static void registerSupportedExtension ( String oid , ExtendedOperationHandler < ? > handler ) { DirectoryServer . registerSupportedExtension ( oid , handler ) ; }
49048	public AllAppsSearchBarController newDefaultAppSearchController ( ) { return new DefaultAppSearchController ( getContext ( ) , this , mAppsRecyclerView ) ; }
49064	public static int resetSubordinateModifyDNCount ( ) { return subordinateModifyDNCounter . getAndSet ( _NUM ) ; }
49098	public void paintToolBarContentBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
49100	public AuthnRequest createAuthnRequest ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_REQUEST , value ) ; if ( obj == _NULL ) { return new AuthnRequestImpl ( value ) ; } else { return ( AuthnRequest ) obj ; } }
49105	public AuthnRequest createAuthnRequest ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_REQUEST ) ; if ( obj == _NULL ) { return new AuthnRequestImpl ( ) ; } else { return ( AuthnRequest ) obj ; } }
49172	@ Override public void close ( ) throws IOException { out . close ( ) ; }
49173	public void appendByte ( int val ) { buf [ pos ++ ] = ( byte ) val ; }
49184	private static void debugPrintln ( String msg ) { if ( DEBUG ) { System . err . println ( _CHAR JAXP : _CHAR + msg ) ; } }
49199	public static StringArgument certNickNameArgument ( ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_CERT_NICKNAME ) . shortIdentifier ( OPTION_SHORT_CERT_NICKNAME ) . description ( INFO_ARGUMENT_DESCRIPTION_CERT_NICKNAME . get ( ) ) . multiValued ( ) . valuePlaceholder ( INFO_NICKNAME_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
49203	@ Override public void close ( ) { for ( final PooledConnectionManager manager : managers . values ( ) ) { try { ( ( CPDSConnectionFactory ) manager ) . getPool ( ) . close ( ) ; } catch ( final Exception closePoolException ) { } } InstanceKeyDataSourceFactory . removeInstance ( getInstanceKey ( ) ) ; }
49244	void replacePolicyInResourceTree ( Policy oldPolicy , Policy newPolicy ) throws PolicyException , SSOException { removePolicyFromResourceTree ( oldPolicy ) ; addPolicyToResourceTree ( newPolicy ) ; }
49273	private boolean isOutsideDocElem ( ) { return ( _NULL == m_docFrag ) && m_elemStack . size ( ) == _NUM && ( _NULL == m_currentNode || m_currentNode . getNodeType ( ) == Node . DOCUMENT_NODE ) ; }
49277	public static void main ( String [ ] args ) { int exitCode = main ( args , System . out , System . err ) ; if ( exitCode != ReturnCode . SUCCESS . get ( ) ) { System . exit ( filterExitCode ( exitCode ) ) ; } }
49290	private boolean hasNextPostponed ( ) { return ! postponedRoutes . isEmpty ( ) ; }
49291	public PlaPoint end_point ( ) { return end_point ; }
49295	public SignatureVisitor visitInterface ( ) { return this ; }
49308	public Cursor fetch ( Long failedActionID ) { if ( failedActionID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_FAILEDACTIONID + _CHAR = _CHAR + failedActionID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
49318	public boolean isSSOTokenValid ( ) { try { SMSEntry . validateToken ( token ) ; return _BOOL ; } catch ( SMSException smse ) { debug . warning ( _CHAR ServiceSchemaManager : token is not valid . '' , smse ) ; } return _BOOL ; }
49329	protected void completeDrag ( MouseEvent e ) { finishDraggingTo ( positionForMouseEvent ( e ) ) ; }
49337	public double board_to_screen ( double p_val ) { return p_val * scale_factor ; }
49345	public boolean isInstanceOfInaccessibleObjectException ( Exception e ) { return _BOOL ; }
49350	public boolean isStatusAttribute ( ) { return ( isStatusAttribute ) ; }
49362	@ Override public void removeHandshakeCompletedListener ( HandshakeCompletedListener listener ) { if ( listener == _NULL ) { throw new IllegalArgumentException ( _CHAR Provided listener is _NULL _CHAR ) ; } if ( listeners == _NULL ) { throw new IllegalArgumentException ( _CHAR Provided listener is not registered _CHAR ) ; } if ( ! listeners . remove ( listener ) ) { throw new IllegalArgumentException ( _CHAR Provided listener is not registered _CHAR ) ; } }
49371	public static void assertJsonValue ( JsonValue jsonValue , String resourceFilePath ) throws IOException { assertThat ( jsonValue . toString ( ) ) . isEqualTo ( jsonFromFile ( resourceFilePath ) . toString ( ) ) ; }
49388	public static String decDecode ( final String value ) { return decode ( value , _NUM , _NUM ) ; }
49429	public int hashCode ( ) { return this . address . getHostPort ( ) . encode ( ) . toLowerCase ( ) . hashCode ( ) ; }
49478	public void paintSplitPaneDividerBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
49505	private void ensureOpen ( ) throws IOException { if ( in == _NULL ) throw new IOException ( _CHAR Stream closed _CHAR ) ; }
49537	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
49551	private void requestPermissions ( ) { if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . WRITE_EXTERNAL_STORAGE ) != PackageManager . PERMISSION_GRANTED ) { ActivityCompat . requestPermissions ( this , new String [ ] { Manifest . permission . WRITE_EXTERNAL_STORAGE } , MY_PERMISSIONS_REQUEST_WRITE_STORAGE ) ; } else { dispatchTakePictureIntent ( ) ; } }
49558	public int padCount ( byte [ ] in ) throws InvalidCipherTextException { int count = in . length ; while ( count > _NUM ) { if ( in [ count - _NUM ] != _NUM ) { break ; } count -- ; } return in . length - count ; }
49610	private void put122 ( final int b , final int s1 , final int s2 ) { pool . put12 ( b , s1 ) . putShort ( s2 ) ; }
49611	public static < S > ServiceLoader < S > loadInstalled ( Class < S > service ) { ClassLoader cl = ClassLoader . getSystemClassLoader ( ) ; if ( cl != _NULL ) { while ( cl . getParent ( ) != _NULL ) { cl = cl . getParent ( ) ; } } return ServiceLoader . load ( service , cl ) ; }
49625	private static boolean isConfigBackend ( String backendId ) { return _CHAR tasks _CHAR . equalsIgnoreCase ( backendId ) || _CHAR schema _CHAR . equalsIgnoreCase ( backendId ) || _CHAR config _CHAR . equalsIgnoreCase ( backendId ) || _CHAR monitor _CHAR . equalsIgnoreCase ( backendId ) || _CHAR backup _CHAR . equalsIgnoreCase ( backendId ) || _CHAR ads - truststore _CHAR . equalsIgnoreCase ( backendId ) ; }
49634	public HttpParams copy ( ) { HttpParams clone = this . local . copy ( ) ; return new DefaultedHttpParams ( clone , this . defaults ) ; }
49676	public int compare ( File file1 , File file2 ) { return caseSensitivity . checkCompareTo ( file1 . getPath ( ) , file2 . getPath ( ) ) ; }
49688	public static Short valueOf ( String string ) throws NumberFormatException { return valueOf ( parseShort ( string ) ) ; }
49704	static private String zeros ( int n ) { if ( n < _NUM ) return _CHAR _CHAR ; char [ ] buf = new char [ n ] ; for ( int i = _NUM ; i < n ; i ++ ) { buf [ i ] = _CHAR ; } return new String ( buf ) ; }
49712	public boolean hasResources ( ) { return ( discoData != _NULL ) && ! discoData . isEmpty ( ) ; }
49719	@ Override public void contextInitialized ( ServletContextEvent event ) { this . context = event . getServletContext ( ) ; log ( _CHAR contextInitialized ( ) _CHAR ) ; }
49723	public AttributeQuery createAttributeQuery ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE_QUERY , value ) ; if ( obj == _NULL ) { return new AttributeQueryImpl ( value ) ; } else { return ( AttributeQuery ) obj ; } }
49733	public static boolean isID3v23FrameIdentifier ( String identifier ) { return identifier . length ( ) >= _NUM && ID3v23Frames . getInstanceOf ( ) . getIdToValueMap ( ) . containsKey ( identifier . substring ( _NUM , _NUM ) ) ; }
49737	public boolean isIncremental ( ) { return isIncremental ; }
49784	public static SearchFilter createSubstringFilter ( AttributeType attributeType , Set < String > attributeOptions , ByteString subInitialElement , List < ByteString > subAnyElements , ByteString subFinalElement ) { return new SearchFilter ( FilterType . SUBSTRING , _NULL , _NULL , attributeType , attributeOptions , _NULL , subInitialElement , subAnyElements , subFinalElement , _NULL , _BOOL ) ; }
49818	public GetComplete createGetComplete ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . GET_COMPLETE ) ; if ( obj == _NULL ) { return new GetCompleteImpl ( ) ; } else { return ( GetComplete ) obj ; } }
49836	public static Integer valueOf ( String string ) throws NumberFormatException { return valueOf ( parseInt ( string ) ) ; }
49897	public boolean isAttributeNameShown ( ) { return showAttributeName ; }
49916	public static String binDecode ( final String value ) { return decode ( value , _NUM , _NUM ) ; }
49944	public static boolean isHardcore ( ) { return server . isHardcore ( ) ; }
49980	public static Paint newRotateBottomImagePaint ( ) { final Paint paint = new Paint ( ) ; paint . setColor ( Color . WHITE ) ; paint . setStrokeWidth ( _NUM ) ; return paint ; }
50004	public boolean isNative ( ) { return Modifier . isNative ( flags ) ; }
50013	protected void completeUIInstall ( ) { this . setShowsRootHandles ( tree . getShowsRootHandles ( ) ) ; updateRenderer ( ) ; updateDepthOffset ( ) ; setSelectionModel ( tree . getSelectionModel ( ) ) ; treeState = createLayoutCache ( ) ; configureLayoutCache ( ) ; updateSize ( ) ; }
50017	public void itemStateChanged ( ItemEvent e ) { DefaultCellEditor . this . stopCellEditing ( ) ; }
50023	public void decIDPCounter ( String realm , String idpName , String counter ) { if ( sSAML2Svc != _NULL ) { sSAML2Svc . decIDPCounter ( realm , idpName , counter ) ; } }
50081	public void restore ( ) { Log . w ( TAG , _CHAR Restoring _CHAR + DATABASE_NAME ) ; remove ( ) ; IOUtil . move ( databaseDir ( ) + DATABASE_NAME_BACKUP , databaseDir ( ) + DATABASE_NAME ) ; }
50109	@ AfterClass public void cleanUp ( ) throws Exception { TestCaseUtils . dsconfig ( _CHAR set - global - configuration - prop _CHAR , _CHAR -- remove _CHAR , _CHAR allowed - task : org . opends . server . tasks . DummyTask _CHAR ) ; }
50119	private static synchronized void createReplayThreads ( ) { replayThreads . clear ( ) ; ReentrantLock switchQueueLock = new ReentrantLock ( ) ; for ( int i = _NUM ; i < replayThreadNumber ; i ++ ) { ReplayThread replayThread = new ReplayThread ( updateToReplayQueue , switchQueueLock ) ; replayThread . start ( ) ; replayThreads . add ( replayThread ) ; } }
50130	boolean shouldUpdateSelectedStateFromAction ( ) { return _BOOL ; }
50133	private char map ( char ch ) { int index = ch - _CHAR ; if ( index < _NUM || index >= this . getSoundexMapping ( ) . length ) { throw new IllegalArgumentException ( _CHAR The character is not mapped : _CHAR + ch ) ; } return this . getSoundexMapping ( ) [ index ] ; }
50141	@ Override public synchronized boolean add ( E object ) { if ( elementCount == elementData . length ) { growByOne ( ) ; } elementData [ elementCount ++ ] = object ; modCount ++ ; return _BOOL ; }
50150	public static LDAPURL valueOf ( String host , int port , Boolean isSSL ) { return new LDAPURL ( host , port , isSSL ) ; }
50179	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
50186	final boolean indexesDeletedNode ( ) { return node . value == _NULL ; }
50215	public static void dismissProgressDialog ( final ProgressDialog progressDialog ) { try { if ( progressDialog != _NULL && progressDialog . isShowing ( ) && ! progressDialog . getOwnerActivity ( ) . isChangingConfigurations ( ) && ! progressDialog . getOwnerActivity ( ) . isFinishing ( ) ) { progressDialog . dismiss ( ) ; ActivityUtils . unlockOrientation ( progressDialog . getOwnerActivity ( ) ) ; } } catch ( Exception e ) { } }
50263	public void startRow ( ) { }
50304	private static void executeWithLog ( Session session , String statement ) { logger . info ( _CHAR Executing CQL statement : _CHAR + statement ) ; session . execute ( statement ) ; }
50308	protected boolean isIgnoredProfile ( String realm ) { return SAML2PluginsUtils . isIgnoredProfile ( realm ) ; }
50341	public NameIDMappingResponse createNameIDMappingResponse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_RES ) ; if ( obj == _NULL ) { return new NameIDMappingResponseImpl ( ) ; } else { return ( NameIDMappingResponse ) obj ; } }
50345	public void treeCollapsed ( TreeExpansionEvent event ) { getHandler ( ) . treeCollapsed ( event ) ; }
50352	public Cursor fetch ( Long parameterID ) { if ( parameterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_ACTIONPARAMETERID + _CHAR = _CHAR + parameterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
50381	public static String printDate ( java . util . Calendar val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printDate ( val ) ; }
50382	MethodType methodType ( ) { return signatureType ( basicTypeSignature ( ) ) ; }
50385	private void checkArgumentsConsistency ( ) throws ConfigureDSException { if ( ! baseDNString . isPresent ( ) && ! ldapPort . isPresent ( ) && ! jmxPort . isPresent ( ) && ! rootDNString . isPresent ( ) ) { throw new ConfigureDSException ( ERR_CONFIGDS_NO_CONFIG_CHANGES . get ( ) , WRONG_USAGE ) ; } }
50386	public boolean activate ( String userDN ) { return activate ( userDN , _BOOL ) ; }
50402	public NameIDMappingRequest createNameIDMappingRequest ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_REQ ) ; if ( obj == _NULL ) { return new NameIDMappingRequestImpl ( ) ; } else { return ( NameIDMappingRequest ) obj ; } }
50454	public AuthnQuery createAuthnQuery ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_QUERY , value ) ; if ( obj == _NULL ) { return new AuthnQueryImpl ( value ) ; } else { return ( AuthnQuery ) obj ; } }
50559	public float angle ( Vector other ) { double dot = dot ( other ) / ( length ( ) * other . length ( ) ) ; return ( float ) Math . acos ( dot ) ; }
50572	@ Override public boolean accept ( File file ) { return file . canWrite ( ) ; }
50577	public RequesterID createRequesterID ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTERID ) ; if ( obj == _NULL ) { return new RequesterIDImpl ( ) ; } else { return ( RequesterID ) obj ; } }
50591	public static String separatorsToUnix ( String path ) { if ( path == _NULL || path . indexOf ( WINDOWS_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( WINDOWS_SEPARATOR , UNIX_SEPARATOR ) ; }
50629	public boolean equalsWithEpsilon ( Rectangle that ) { return equalsWithEpsilon ( that , EPS ) ; }
50638	public boolean equals ( Object schemaAttrSyntax ) { if ( schemaAttrSyntax instanceof Syntax ) { Syntax s = ( Syntax ) schemaAttrSyntax ; return ( s . attrSyntax . equals ( attrSyntax ) ) ; } return ( _BOOL ) ; }
50646	static boolean isProxyAuthzControl ( String oid ) { return OID_PROXIED_AUTH_V1 . equals ( oid ) || OID_PROXIED_AUTH_V2 . equals ( oid ) ; }
50716	public void arrayLoad ( final Type type ) { mv . visitInsn ( type . getOpcode ( Opcodes . IALOAD ) ) ; }
50717	@ Override protected void destroyInternal ( ) throws LifecycleException { for ( Realm realm : realms ) { if ( realm instanceof Lifecycle ) { ( ( Lifecycle ) realm ) . destroy ( ) ; } } super . destroyInternal ( ) ; }
50722	public void add_door ( ExpandDoor p_door ) { if ( p_door == _NULL ) return ; doors_list . add ( p_door ) ; }
50745	public static byte [ ] readFileAsByteArray ( String absolutePath ) throws IOException { return new FileReader ( absolutePath ) . readFully ( ) . toByteArray ( ) ; }
50756	public boolean isLoggingEnabled ( int logLevel ) { return this . needsLogging && logLevel <= traceLevel ; }
50766	public EncryptedID encrypt ( Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID ) throws SAML2Exception { Element el = EncManager . getEncInstance ( ) . encrypt ( toXMLString ( _BOOL , _BOOL ) , recipientPublicKey , dataEncAlgorithm , dataEncStrength , recipientEntityID , _CHAR EncryptedID _CHAR ) ; return AssertionFactory . getInstance ( ) . createEncryptedID ( el ) ; }
50767	public static DN create ( ManagedObjectPath < ? , ? > path ) { return path . toDN ( ) ; }
50791	public ReplicationParameters baseDn ( String baseDn ) { this . baseDn = baseDn ; return this ; }
50792	public boolean isActive ( ) { return active ; }
50797	@ SuppressWarnings ( _CHAR unused _CHAR ) static < K , V > Promise < Map < K , V >> promiseMap ( Class < K > keyType , Class < V > valueType ) { return new BasePromise < > ( ) ; }
50809	public void removeLocalEjb ( String name ) { entries . remove ( name ) ; ContextLocalEjb localEjb = _NULL ; synchronized ( localEjbs ) { localEjb = localEjbs . remove ( name ) ; } if ( localEjb != _NULL ) { support . firePropertyChange ( _CHAR localEjb _CHAR , localEjb , _NULL ) ; localEjb . setNamingResources ( _NULL ) ; } }
50821	public String generateShortUpgradeReport ( SSOToken adminToken , boolean html ) { String delimiter = html ? HTML_BR : TXT_LF ; StringBuilder report = new StringBuilder ( ) ; for ( UpgradeStep upgradeStep : upgradeSteps ) { report . append ( upgradeStep . getShortReport ( delimiter ) ) ; } return report . toString ( ) ; }
50826	public static ModifyRequest newModifyRequest ( final DN name ) { Reject . ifNull ( name ) ; return new ModifyRequestImpl ( name ) ; }
50859	public static void remove ( DN baseDN ) { deregisterLocalBackend ( baseDN ) ; }
50873	public String buildUser ( ) { return properties . getProperty ( _CHAR build . user _CHAR ) ; }
50879	private boolean toRetransmitFinalResponse ( int T2 ) { if ( -- retransmissionTicksLeft == _NUM ) { if ( _NUM * prevRetransmissionTicks <= T2 ) this . retransmissionTicksLeft = _NUM * prevRetransmissionTicks ; else this . retransmissionTicksLeft = prevRetransmissionTicks ; this . prevRetransmissionTicks = retransmissionTicksLeft ; return _BOOL ; } else return _BOOL ; }
50887	public AnnotationVisitor visitTypeAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( cv != _NULL ) { return cv . visitTypeAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
50906	public String generateName ( final Random random , final int length , final char startingSymbol ) { return generateName ( _NULL , length , startingSymbol ) ; }
50968	@ Override public void write ( byte [ ] b ) throws IOException { write ( b , _NUM , b . length ) ; }
50996	public Iterator < NameValue > iterator ( ) { return this . nameValueMap . values ( ) . iterator ( ) ; }
51030	public static String toString ( int resultCode ) { return toLocalizableMessage ( resultCode ) . toString ( ) ; }
51088	public int compare ( File file1 , File file2 ) { long result = file1 . lastModified ( ) - file2 . lastModified ( ) ; if ( result < _NUM ) { return - _NUM ; } else if ( result > _NUM ) { return _NUM ; } else { return _NUM ; } }
51132	public boolean isCollective ( ) { return isCollective ; }
51136	public String timeoutBackoffMethodName ( String key ) { return privateMethodName ( Name . from ( _CHAR get _CHAR ) . join ( key ) . join ( _CHAR timeout _CHAR ) . join ( _CHAR backoff _CHAR ) ) ; }
51186	public synchronized boolean add ( E e ) { modCount ++ ; ensureCapacityHelper ( elementCount + _NUM ) ; elementData [ elementCount ++ ] = e ; return _BOOL ; }
51192	public boolean isEncodeBlanks ( ) { return this . encodeBlanks ; }
51202	public NameIDMappingResponse createNameIDMappingResponse ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_RES , value ) ; if ( obj == _NULL ) { return new NameIDMappingResponseImpl ( value ) ; } else { return ( NameIDMappingResponse ) obj ; } }
51222	@ Override public boolean markSupported ( ) { return _BOOL ; }
51285	public boolean isPasswordResetFailureLockoutEnabled ( ) { return pwResetFailureLockoutMode ; }
51334	public void clearPassword ( ) { if ( this . authority != _NULL ) { UserInfo userInfo = authority . getUserInfo ( ) ; if ( userInfo != _NULL ) userInfo . clearPassword ( ) ; } }
51341	@ Override protected void handleFlush ( String output ) { handleOutput ( output ) ; redirectOutPrintStream . flush ( ) ; }
51376	public static BooleanArgument showUsageArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_HELP ) . shortIdentifier ( OPTION_SHORT_HELP ) . description ( INFO_DESCRIPTION_SHOWUSAGE . get ( ) ) . buildArgument ( ) ; }
51385	@ Override public boolean equals ( final Object obj ) { if ( ! ( obj instanceof FastDateFormat ) ) { return _BOOL ; } final FastDateFormat other = ( FastDateFormat ) obj ; return printer . equals ( other . printer ) ; }
51398	public DispatchHandler addBinding ( Expression < Boolean > condition , Handler handler , URI baseURI ) { bindings . add ( new Binding ( condition , handler , baseURI ) ) ; return this ; }
51448	public static boolean matchArch ( String name ) { return osArchitecture . equalsIgnoreCase ( name ) ; }
51456	private void clampYTranslation ( StackScrollState . ViewState childViewState , int childHeight ) { clampPositionToBottomStackStart ( childViewState , childHeight ) ; clampPositionToTopStackEnd ( childViewState , childHeight ) ; }
51468	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
51510	private void validateRelationDefinition ( RelationDefinition < ? , ? > rd ) { RelationDefinition < ? , ? > tmp = definition . getRelationDefinition ( rd . getName ( ) ) ; if ( tmp != rd ) { throw new IllegalArgumentException ( _CHAR The relation _CHAR + rd . getName ( ) + _CHAR is not associated with a _CHAR + definition . getName ( ) ) ; } }
51539	public static void deregisterVirtualAttribute ( VirtualAttributeRule rule ) { getInstance ( ) . virtualAttributeConfigManager . deregister ( rule ) ; }
51540	public byte [ ] signBuffer ( String data , String certAlias ) throws FSSignatureException { return signBuffer ( data , certAlias , IFSConstants . DEF_SIG_ALGO_JCA ) ; }
51589	public boolean containsValue ( boolean val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSNumber . class ) ) { NSNumber num = ( NSNumber ) o ; if ( num . isBoolean ( ) && num . boolValue ( ) == val ) return _BOOL ; } } return _BOOL ; }
51598	public static int findWordStart ( String line , int pos , String noWordSep , boolean joinNonWordChars , boolean camelCasedWords , boolean eatWhitespace ) { return findWordStart ( ( CharSequence ) line , pos , noWordSep , joinNonWordChars , camelCasedWords , eatWhitespace ) ; }
51633	public static void deregisterBackupTaskListener ( BackupTaskListener listener ) { directoryServer . backupTaskListeners . remove ( listener ) ; }
51670	public boolean isSIPAddress ( ) { return address instanceof SipUri ; }
51672	public void addSSOTokenListener ( SSOTokenListener listener ) throws SSOException { if ( ! ldapConnect ) { try { SessionListener ssoListener = new SSOSessionListener ( listener ) ; session . addSessionListener ( ssoListener ) ; } catch ( Exception e ) { SSOProviderImpl . debug . error ( _CHAR Could n _CHAR_CHAR + getTokenID ( ) . toString ( ) ) ; throw new SSOException ( e ) ; } } }
51686	public Cursor fetch ( Long failedActionParameterID ) { if ( failedActionParameterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_FAILEDACTIONPARAMETERID + _CHAR = _CHAR + failedActionParameterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
51728	private void put112 ( final int b1 , final int b2 , final int s ) { pool . put11 ( b1 , b2 ) . putShort ( s ) ; }
51729	public RequesterID createRequesterID ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTERID , value ) ; if ( obj == _NULL ) { return new RequesterIDImpl ( value ) ; } else { return ( RequesterID ) obj ; } }
51782	public void cutout_selected_items ( ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; StateInteractive new_state = ( ( StateSelectedItem ) interactive_state ) . cutout_items ( ) ; set_interactive_state ( new_state ) ; }
51798	public static boolean isAuthorized ( String logName , String operation , Object credential ) { return authorizer . isAuthorized ( logName , operation , credential ) ; }
51839	public boolean isFieldResult ( ) { return field != _NULL ; }
51887	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
51932	public static void failWasExpected ( Class < ? extends Throwable > exceptionClass ) { fail ( _CHAR should throw an exception _CHAR + exceptionClass . getSimpleName ( ) ) ; }
51945	public Cursor fetch ( Long ruleActionParameterID ) { if ( ruleActionParameterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_RULEACTIONPARAMETERID + _CHAR = _CHAR + ruleActionParameterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
51947	private void ensureOpen ( ) throws IOException { if ( out == _NULL ) throw new IOException ( _CHAR Stream closed _CHAR ) ; }
51979	public boolean notRequiredResourceName ( Policy policy , String realmName , String name ) { getSvcTypeNameToActionsMap ( policy , realmName ) ; return notRequiredResourceNameService . contains ( name ) ; }
51982	public static int findWordEnd ( String line , int pos , String noWordSep ) { return findWordEnd ( line , pos , noWordSep , _BOOL ) ; }
51986	public boolean isReliable ( ) { return _BOOL ; }
52024	public StateInteractive add_corner ( PlaPointFloat p_location ) { PlaPointInt location = snap_to_restriction ( p_location . round ( ) ) ; corner_list . add ( location ) ; i_brd . repaint ( ) ; actlog_add_corner ( p_location ) ; return this ; }
52049	boolean isZero ( ) { return ( intLen == _NUM ) ; }
52072	public Extensions createExtensions ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EXTENSIONS , value ) ; if ( obj == _NULL ) { return new ExtensionsImpl ( value ) ; } else { return ( Extensions ) obj ; } }
52092	private JsonValue correlateTarget ( ) throws SynchronizationException { return correlateTarget ( _NULL ) ; }
52142	@ Override public void onFocusChange ( View v , boolean hasFocus ) { mRecyclerViewBridge . setFocusView ( v , oldView , _NUM . _NUM ) ; oldView = v ; }
52180	private static String cleanUpLanguageCode ( String language ) { String languageCode = StringUtils . substringBefore ( language , _CHAR _ _CHAR ) ; return StringUtils . lowerCase ( languageCode ) ; }
52217	public void dragMouseMoved ( DragSourceDragEvent dsde ) { }
52242	public void gdi_update_join ( ShapeTileBox p_box ) { if ( p_box == _NULL ) return ; update_box = update_box . union ( p_box ) ; }
52245	public boolean isLocallyInitiated ( ) { boolean streamIsClient = ( ( id & _NUM ) == _NUM ) ; return connection . client == streamIsClient ; }
52343	public byte [ ] encrypt ( byte [ ] data ) throws GeneralSecurityException , CryptoManagerException { CipherInfo currentCipher = cipherInfo ; return cryptoManager . encrypt ( currentCipher . cipherTransformation , currentCipher . cipherKeyLength , data ) ; }
52394	protected CellRendererPane createCellRendererPane ( ) { return new CellRendererPane ( ) ; }
52397	public void ellipsized ( int start , int end ) { mEllipsizedStart = start ; mEllipsizedCount = end - start ; }
52509	public Extensions createExtensions ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EXTENSIONS , value ) ; if ( obj == _NULL ) { return new ExtensionsImpl ( value ) ; } else { return ( Extensions ) obj ; } }
52524	public void Logi ( String tag , String msg ) { if ( mDebug ) { if ( TextUtils . isEmpty ( msg ) ) { throw new NullPointerException ( _CHAR The message is _NULL ! _CHAR ) ; } Log . i ( tag == _NULL ? Constants . DEBUG_TAG : tag , msg ) ; } }
52554	public Cursor fetch ( long id ) { Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_ID + _CHAR = _CHAR + id , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
52581	public void init ( Context context , String [ ] fontAssetPaths ) { Context applicationContext = context . getApplicationContext ( ) ; AssetManager assetManager = applicationContext . getAssets ( ) ; for ( String path : fontAssetPaths ) { add ( assetManager , path ) ; } }
52600	public static void deregisterSASLMechanismHandler ( String name ) { directoryServer . saslMechanismHandlers . remove ( name ) ; }
52621	public static boolean hasInitialContextFactoryBuilder ( ) { return ( getInitialContextFactoryBuilder ( ) != _NULL ) ; }
52673	public String transform ( String input ) throws AuthLoginException { if ( input == _NULL ) { throw new AuthLoginException ( _CHAR No input to the Clear Text Transform ! _CHAR ) ; } return input ; }
52685	private boolean isPointerNumChanged ( MotionEvent event ) { return event . getActionMasked ( ) == MotionEvent . ACTION_DOWN || event . getActionMasked ( ) == MotionEvent . ACTION_POINTER_DOWN || event . getActionMasked ( ) == MotionEvent . ACTION_UP || event . getActionMasked ( ) == MotionEvent . ACTION_POINTER_UP || event . getActionMasked ( ) == MotionEvent . ACTION_CANCEL ; }
52744	public AssertionIDRequest createAssertionIDRequest ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION_ID_REQUEST , value ) ; if ( obj == _NULL ) { return new AssertionIDRequestImpl ( value ) ; } else { return ( AssertionIDRequest ) obj ; } }
52747	void addReasons ( ReasonsMask mask ) { _reasons = _reasons | mask . getReasons ( ) ; }
52800	private void stopRefresh ( ) { stopRefreshNode ( rootNode ) ; }
52876	public int hashCode ( ) { if ( this == POINT_INFINITY ) return _NUM ; return x . hashCode ( ) << _NUM + y . hashCode ( ) ; }
52881	@ Override public void contextInitialized ( ServletContextEvent event ) { this . context = event . getServletContext ( ) ; log ( _CHAR contextInitialized ( ) _CHAR ) ; }
52887	@ Override public void attributeRemoved ( ServletContextAttributeEvent event ) { log ( _CHAR attributeRemoved ( _CHAR_CHAR_CHAR , _CHAR_CHAR_CHAR ) _CHAR ) ; }
52912	public AuthenticationEnforcer exceptQuery ( ) { exceptQuery = _BOOL ; return this ; }
52947	public static void addDefaultProfile ( SpringApplication app ) { Map < String , Object > defProperties = new HashMap < > ( ) ; defProperties . put ( SPRING_PROFILE_DEFAULT , Constants . SPRING_PROFILE_DEVELOPMENT ) ; app . setDefaultProperties ( defProperties ) ; }
52957	public LogoutResponse createLogoutResponse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_RESPONSE ) ; if ( obj == _NULL ) { return new LogoutResponseImpl ( ) ; } else { return ( LogoutResponse ) obj ; } }
52965	public static void registerVirtualAttribute ( final VirtualAttributeRule rule ) { getInstance ( ) . virtualAttributeConfigManager . register ( rule ) ; }
52982	public static MouseWheelListener add ( MouseWheelListener a , MouseWheelListener b ) { return ( MouseWheelListener ) addInternal ( a , b ) ; }
52985	private void notify_writers ( ) { if ( writerLocks . size ( ) > _NUM ) { Object oldest = writerLocks . removeFirst ( ) ; ++ currentWriters ; synchronized ( oldest ) { oldest . notify ( ) ; } } }
53035	public boolean isBorderPainted ( ) { return paintBorder ; }
53090	public static String rtrimWildcardTokens ( String input ) { return rtrimWildcardTokens ( input , DEFAULT_PATH_SEPARATOR ) ; }
53102	@ SuppressWarnings ( _CHAR unused _CHAR ) public static double parseDouble ( byte [ ] bytes ) { return parseDouble ( bytes , _NUM , bytes . length ) ; }
53160	static boolean isToolBarButton ( JComponent c ) { return ( c . getParent ( ) instanceof JToolBar ) ; }
53200	@ Override public void connect ( SocketAddress endpoint ) throws IOException { super . connect ( endpoint ) ; init ( ) ; }
53236	public static boolean isTextFile ( File f ) { return ! f . isDirectory ( ) && isMimeText ( f . getPath ( ) ) ; }
53240	public static StringArgument rootDNPwdArgument ( ) throws ArgumentException { return StringArgument . builder ( _CHAR rootUserPassword _CHAR ) . shortIdentifier ( OPTION_SHORT_BINDPWD ) . description ( INFO_ROOT_USER_PWD_PLACEHOLDER . get ( ) ) . valuePlaceholder ( INFO_ROOT_USER_PWD_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
53244	@ Override public void close ( ) throws IOException { in . close ( ) ; }
53245	public String buildOs ( ) { return properties . getProperty ( _CHAR build . os _CHAR ) ; }
53252	public PlaLineInt rotate_90_deg ( int p_factor , PlaPointInt p_pole ) { PlaPointInt new_a = point_a . rotate_90_deg ( p_factor , p_pole ) ; PlaPointInt new_b = point_b . rotate_90_deg ( p_factor , p_pole ) ; return new PlaLineInt ( new_a , new_b ) ; }
53260	public static ASN1Primitive convertValueToObject ( X509Extension ext ) throws IllegalArgumentException { try { return ASN1Primitive . fromByteArray ( ext . getValue ( ) . getOctets ( ) ) ; } catch ( IOException e ) { throw new IllegalArgumentException ( _CHAR ca n _CHAR_CHAR + e ) ; } }
53290	public void printJobCompleted ( PrintJobEvent pje ) { }
53295	private static LDAPFilter createGreaterOrEqualFilter ( AttributeValueAssertion ava ) throws IOException { return LDAPFilter . createGreaterOrEqualFilter ( ava . getName ( ) , ByteStringUtility . convertValue ( ava . getValue ( ) ) ) ; }
53296	public String fullTableName ( ) { return keyspace + _CHAR . _CHAR + tableName ; }
53299	public static int combine ( int hashCode , float value ) { int v = Float . floatToIntBits ( value ) ; return combine ( hashCode , v ) ; }
53314	public boolean isLockoutEnabled ( ) { return ( failureLockoutMode && failureLockoutCount > _NUM && failureLockoutTime > _NUM ) ; }
53316	private static int lengthOfMimeNames ( String val ) { int len = val . indexOf ( _CHAR ) ; if ( len < _NUM ) len = val . length ( ) ; return len ; }
53329	public static void uncheckListViewSingleChoice ( ListView listView ) { if ( listView . getChoiceMode ( ) == ListView . CHOICE_MODE_SINGLE ) { int checkedPosition = listView . getCheckedItemPosition ( ) ; if ( checkedPosition > - _NUM ) { listView . setItemChecked ( checkedPosition , _BOOL ) ; } } else { throw new IllegalArgumentException ( _CHAR UtilUI . uncheckListView ( ) only works on lists using choice mode : CHOICE_MODE_SINGLE . '' ) ; } }
53330	public boolean offerLast ( E e ) { addLast ( e ) ; return _BOOL ; }
53336	public static int findWordEnd ( String line , int pos , String noWordSep , boolean joinNonWordChars ) { return findWordEnd ( line , pos , noWordSep , joinNonWordChars , _BOOL ) ; }
53342	public void appendRemainingComponent ( String name ) { if ( name != _NULL ) { CompositeName rname = new CompositeName ( ) ; try { rname . add ( name ) ; } catch ( InvalidNameException e ) { } appendRemainingName ( rname ) ; } }
53361	protected boolean isLayoutValid ( int axis ) { if ( axis == majorAxis ) { return majorAllocValid ; } else { return minorAllocValid ; } }
53365	public boolean is_lt_point ( ) { return value <= PLAD_POINT ; }
53368	public static String printUnsignedShort ( int val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printUnsignedShort ( val ) ; }
53409	public boolean hasThread ( ) { return ! this . waitingThreads . isEmpty ( ) ; }
53434	public static DocAttributeSet synchronizedView ( DocAttributeSet attributeSet ) { if ( attributeSet == _NULL ) { throw new NullPointerException ( ) ; } return new SynchronizedDocAttributeSet ( attributeSet ) ; }
53449	private void purgeOne ( ) { synchronized ( queue ) { WeakKey key = ( WeakKey ) queue . poll ( ) ; if ( key != _NULL ) { super . remove ( key . getReferenced ( ) ) ; } } }
53460	private void ensureOpen ( ) throws IOException { if ( out == _NULL ) throw new IOException ( _CHAR Stream closed _CHAR ) ; }
53469	public void readMessage ( final LDAPMessageHandler handler ) throws DecodeException , IOException { reader . readStartSequence ( ) ; try { final int messageID = ( int ) reader . readInteger ( ) ; readProtocolOp ( messageID , handler ) ; } finally { reader . readEndSequence ( ) ; } }
53476	public static ItemListener add ( ItemListener a , ItemListener b ) { return ( ItemListener ) addInternal ( a , b ) ; }
53483	public static String printString ( String val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printString ( val ) ; }
53489	public int size ( ) { return size ; }
53491	public static boolean isAbsolutePath ( String systemId ) { if ( systemId == _NULL ) return _BOOL ; final File file = new File ( systemId ) ; return file . isAbsolute ( ) ; }
53493	static Object internalMemberNameEnsureInit ( Object mh ) { DirectMethodHandle dmh = ( DirectMethodHandle ) mh ; dmh . ensureInitialized ( ) ; return dmh . member ; }
53526	private static LDAPFilter createPresentFilter ( AttributeDescription ad ) throws LDAPException { return LDAPFilter . decode ( ad . getName ( ) + _CHAR =* _CHAR ) ; }
53535	public PdfPage addNewPage ( ) { return addNewPage ( getDefaultPageSize ( ) ) ; }
53580	public BindResult bind ( BindRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . bind ( request ) ; }
53590	public static int resetSearchReferenceCount ( ) { return searchReferenceCounter . getAndSet ( _NUM ) ; }
53639	static int readUnsignedShort ( final byte [ ] b , final int index ) { return ( ( b [ index ] & _NUM ) << _NUM ) | ( b [ index + _NUM ] & _NUM ) ; }
53659	private static LDAPFilter createExtensibleFilter ( MatchingRuleAssertion mra ) throws IOException { return LDAPFilter . createExtensibleFilter ( mra . getMatchingRule ( ) , mra . getName ( ) , ByteStringUtility . convertValue ( mra . getValue ( ) ) , mra . isDnAttributes ( ) ) ; }
53670	public void schedule ( TimerTask task , long delay ) { if ( delay < _NUM ) { throw new IllegalArgumentException ( _CHAR delay < _NUM : _CHAR + delay ) ; } scheduleImpl ( task , delay , - _NUM , _BOOL ) ; }
53684	protected void handleUnexpectedTextException ( String text , RuntimeException e ) throws SAXException { reportError ( Messages . format ( Messages . UNEXPECTED_TEXT , text ) , e , _BOOL ) ; }
53685	public boolean isHiddenInConfigUI ( ) { return ss . isHiddenInConfigUI ( ) ; }
53751	public Table addCell ( Image image ) { return addCell ( new Cell ( ) . add ( image ) ) ; }
53877	public void removeStaticGroup ( String groupDN ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; Set userDNs = new HashSet ( ) ; userDNs . add ( super . entryDN ) ; dsServices . modifyMemberShip ( super . token , userDNs , groupDN , GROUP , REMOVE_MEMBER ) ; }
53881	public int line_count ( ) { int result = _NUM ; for ( ShapeSegments curr_shape : shapes ) { result += curr_shape . border_line_count ( ) ; } return result ; }
53919	@ Override public Promise < Void , AuthenticationException > cleanSubject ( MessageInfoContext messageInfo , Subject subject ) { return newResultPromise ( _NULL ) ; }
53973	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { updateUI ( ) ; } }
53977	public void paintDirtyRegions ( ) { synchronized ( this ) { Map < Component , Rectangle > tmp = tmpDirtyComponents ; tmpDirtyComponents = dirtyComponents ; dirtyComponents = tmp ; dirtyComponents . clear ( ) ; } paintDirtyRegions ( tmpDirtyComponents ) ; }
53983	public boolean isCauseOf ( Exception exception ) { return TaggedIOException . isTaggedWith ( exception , tag ) ; }
54027	public SignatureVisitor visitInterface ( ) { return this ; }
54033	public boolean isStatic ( ) { return Modifier . isStatic ( flags ) ; }
54096	private void tagWithArguments ( TemplateTag tag , Template template , String ... arguments ) throws DecodeException { tag . initializeForTemplate ( Schema . getDefaultSchema ( ) , NULL_TEMPLATE_FILE , template , arguments , LINE_NUMBER , NULL_WARNINGS ) ; }
54172	public static void registerTrustManagerProvider ( DN providerDN , TrustManagerProvider < ? > provider ) { directoryServer . trustManagerProviders . put ( providerDN , provider ) ; }
54175	public static WindowStateListener add ( WindowStateListener a , WindowStateListener b ) { return ( WindowStateListener ) addInternal ( a , b ) ; }
54186	public void propertyChange ( PropertyChangeEvent e ) { if ( e . getSource ( ) == noteLabel && e . getPropertyName ( ) == _CHAR text _CHAR ) { firePropertyChange ( ACCESSIBLE_TEXT_PROPERTY , _NULL , _NUM ) ; } }
54188	private void assertEqualResourceAttributeValues ( final ResourceAttribute ra1 , final ResourceAttribute ra2 ) { assertThat ( checkEqualResourceAttributes ( ra1 , ra2 ) ) . isTrue ( ) ; }
54204	public XMLString concat ( String str ) { return new XMLStringDefault ( m_str . concat ( str ) ) ; }
54262	public int readOggVorbisRawSize ( RandomAccessFile raf ) throws CannotReadException , IOException { byte [ ] rawVorbisCommentData = readRawPacketData ( raf ) ; return rawVorbisCommentData . length + VorbisHeader . FIELD_PACKET_TYPE_LENGTH + VorbisHeader . FIELD_CAPTURE_PATTERN_LENGTH ; }
54298	boolean searchMonitoringInformation ( ) { return searchMonitoringInformation ; }
54356	public void arrayLength ( ) { mv . visitInsn ( Opcodes . ARRAYLENGTH ) ; }
54368	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
54394	public AuthenticationEnforcer exceptPatch ( ) { exceptPatch = _BOOL ; return this ; }
54440	public static WindowListener add ( WindowListener a , WindowListener b ) { return ( WindowListener ) addInternal ( a , b ) ; }
54443	@ Override public void clear ( ) { removeAllElements ( ) ; }
54446	public boolean is_null ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR is_null _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . is_null ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
54455	private static void debugPrintln ( String msg ) { if ( DEBUG ) { System . err . println ( _CHAR JAXP : _CHAR + msg ) ; } }
54468	@ Override public void printOpenTag ( PrintWriter aWriter , int indent , Object bean , StoreDescription aDesc ) throws Exception { aWriter . print ( _CHAR < _CHAR ) ; aWriter . print ( aDesc . getTag ( ) ) ; storeConnectorAttribtues ( aWriter , indent , bean , aDesc ) ; aWriter . println ( _CHAR > _CHAR ) ; }
54526	private String readInputUntil ( char ... symbols ) { String s = _CHAR _CHAR ; while ( ! accept ( symbols ) ) { s += ( char ) data [ index ] ; skip ( ) ; } return s ; }
54552	public static void fadeOutView ( View view ) { fadeOutView ( view , ANIMATION_DURATION_SHORTEST ) ; }
54555	public boolean isUserResourceOffering ( ) { return type == USER_RESOURCE_OFFERING_ENTRY ; }
54584	public boolean isMethodResult ( ) { return method != _NULL ; }
54611	public int hashCode ( ) { return ( ( ( x & _NUM ) ) | ( ( y & _NUM ) << _NUM ) ) ; }
54612	public StatusMessage createStatusMessage ( String value ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_MESSAGE , value ) ; if ( obj == _NULL ) { return new StatusMessageImpl ( value ) ; } else { return ( StatusMessage ) obj ; } }
54620	public Enumeration oids ( ) { return ordering . elements ( ) ; }
54640	public void addSeparator ( ) { add ( new JPopupMenu . Separator ( ) ) ; }
54653	public boolean offerLast ( E e ) { addLast ( e ) ; return _BOOL ; }
54658	public boolean connectUsingLDAPS ( ) { return ldapsHostPort != _NULL && ldapsHostPort . equals ( getHostPortToConnect ( ) ) ; }
54671	public void mouseEntered ( MouseEvent e ) { }
54684	public int offsetRequested ( ) { return offs ; }
54730	public boolean isC66Encoded ( ) { return encryptedString != _NULL && encryptedString . contains ( _CHAR * _CHAR ) ; }
54756	@ Override public void close ( ) { StaticUtils . close ( writer ) ; }
54770	public float dot ( Vector with ) { return vals [ I1 ] * with . vals [ I1 ] + vals [ I2 ] * with . vals [ I2 ] + vals [ I3 ] * with . vals [ I3 ] ; }
54774	public static String printBoolean ( boolean val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printBoolean ( val ) ; }
54816	static void stop ( final HttpServer httpServer ) { httpServer . shutdownNow ( ) ; }
54825	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , FormatException { return decode ( image , _NULL ) ; }
54836	public Map preProcessCreate ( SSOToken token , String entryDN , Map attributes , int objectType ) throws AMPreCallBackException { return attributes ; }
54862	public static SearchFilter createNOTFilter ( SearchFilter notComponent ) { return new SearchFilter ( FilterType . NOT , _NULL , notComponent , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
54876	public Scanner useDelimiter ( Pattern pattern ) { delimPattern = pattern ; return this ; }
54910	public final void init ( KeyStore ks , char [ ] password ) throws KeyStoreException , NoSuchAlgorithmException , UnrecoverableKeyException { spiImpl . engineInit ( ks , password ) ; }
54933	public boolean isTextFile ( JecFile file ) { return ! file . isDirectory ( ) && isMimeText ( getMimeType ( file . getPath ( ) ) ) ; }
54941	public static String printUnsignedInt ( long val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printUnsignedInt ( val ) ; }
54944	protected boolean RelativeLocationPath ( ) throws javax . xml . transform . TransformerException { if ( ! Step ( ) ) { return _BOOL ; } while ( tokenIs ( _CHAR ) ) { nextToken ( ) ; if ( ! Step ( ) ) { error ( XPATHErrorResources . ER_EXPECTED_LOC_STEP , _NULL ) ; } } return _BOOL ; }
54960	private static void checkFileValidation ( File file ) { if ( file == _NULL ) throw new NullPointerException ( _CHAR File must not be _NULL _CHAR ) ; if ( ! file . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The file : _CHAR + file . getPath ( ) + _CHAR does n _CHAR_CHAR ) ; } file . canRead ( ) ; }
54974	static short readShort ( final byte [ ] b , final int index ) { return ( short ) ( ( ( b [ index ] & _NUM ) << _NUM ) | ( b [ index + _NUM ] & _NUM ) ) ; }
55030	public AuthnRequest createAuthnRequest ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_REQUEST , value ) ; if ( obj == _NULL ) { return new AuthnRequestImpl ( value ) ; } else { return ( AuthnRequest ) obj ; } }
55054	private static ASN1Primitive convertValueToObject ( Extension ext ) throws IllegalArgumentException { try { return ASN1Primitive . fromByteArray ( ext . getExtnValue ( ) . getOctets ( ) ) ; } catch ( IOException e ) { throw new IllegalArgumentException ( _CHAR ca n _CHAR_CHAR + e ) ; } }
55138	public boolean isAnyOriginAllowed ( ) { return anyOriginAllowed ; }
55167	private static boolean isBinary ( Map map ) { if ( map instanceof AMHashMap ) { return ( ( AMHashMap ) map ) . isByteValues ( ) ; } else if ( map != _NULL && ! map . isEmpty ( ) ) { return map . values ( ) . iterator ( ) . next ( ) instanceof byte [ ] [ ] ; } return _BOOL ; }
55171	public boolean equals ( Object schemaAttrType ) { if ( schemaAttrType instanceof Type ) { Type s = ( Type ) schemaAttrType ; return ( s . attrType . equals ( attrType ) ) ; } return ( _BOOL ) ; }
55179	public static boolean isAlpha ( final char c ) { return com . forgerock . opendj . util . StaticUtils . isAlpha ( c ) ; }
55188	void addToSubroutine ( final long id , final int nbSubroutines ) { if ( ( status & VISITED ) == _NUM ) { status |= VISITED ; srcAndRefPositions = new int [ nbSubroutines / _NUM + _NUM ] ; } srcAndRefPositions [ ( int ) ( id >> > _NUM ) ] |= ( int ) id ; }
55232	@ Issue ( _CHAR JENKINS - _NUM _CHAR ) @ Test public void sandboxRejection ( ) throws Exception { assertRejected ( _CHAR Jenkins . getInstance ( ) _CHAR ) ; assertRejected ( _CHAR parallel ( main : { Jenkins . getInstance ( ) } ) _CHAR ) ; assertRejected ( _CHAR parallel ( main : { parallel ( main2 : { Jenkins . getInstance ( ) } ) } ) _CHAR ) ; assertRejected ( _CHAR node { parallel ( main : { ws { parallel ( main2 : { ws { Jenkins . getInstance ( ) } } ) } } ) } _CHAR ) ; }
55255	private void changeStateTo ( State newState ) throws SearchAbandonException { State oldState = state ; state = newState ; try { controller . invokeRefreshTaskDidProgress ( this , oldState , newState ) ; } catch ( InterruptedException x ) { throwAbandonIfNeeded ( x ) ; } }
55312	public Scoping createScoping ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SCOPING , value ) ; if ( obj == _NULL ) { return new ScopingImpl ( value ) ; } else { return ( Scoping ) obj ; } }
55321	public void removeEditActionListener ( ActionListener listener ) { editButton . removeActionListener ( listener ) ; iconButton . removeActionListener ( listener ) ; }
55351	public void resetSyntax ( ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { tokenTypes [ i ] = _NUM ; } }
55413	public Cursor fetch ( Long actionID ) { if ( actionID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_ACTIONID + _CHAR = _CHAR + actionID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
55489	@ Deprecated protected void drawTextAppearance ( Rectangle rect , PdfFont font , int fontSize , String value , PdfFormXObject appearance ) { drawTextAppearance ( rect , font , ( float ) fontSize , value , appearance ) ; }
55498	public QRCallbackBuilder withUriScheme ( String scheme ) { this . scheme = scheme ; return this ; }
55500	public static InetSocketAddress findFreeSocketAddress ( ) { try ( ServerSocket serverLdapSocket = new ServerSocket ( ) ) { serverLdapSocket . setReuseAddress ( _BOOL ) ; serverLdapSocket . bind ( new InetSocketAddress ( _CHAR _NUM . _NUM . _NUM . _NUM _CHAR , _NUM ) ) ; return ( InetSocketAddress ) serverLdapSocket . getLocalSocketAddress ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
55502	private static ServerSocket bindPort ( int port ) throws IOException { ServerSocket serverLdapSocket = new ServerSocket ( ) ; serverLdapSocket . setReuseAddress ( _BOOL ) ; serverLdapSocket . bind ( new InetSocketAddress ( port ) ) ; return serverLdapSocket ; }
55514	public static int toLower ( int c ) { return toLower [ c & _NUM ] & _NUM ; }
55525	void installListeners ( ) { Window [ ] windows = getOwnedWindows ( ) ; for ( Window window : windows ) { if ( window != _NULL ) { window . removeWindowListener ( this ) ; window . addWindowListener ( this ) ; } } }
55625	static < T > IntStream makeInt ( AbstractPipeline < ? , Integer , ? > upstream ) { return new OfInt ( upstream ) ; }
55629	public String grpcClientName ( Interface service ) { return _CHAR grpc - _CHAR + service . getFile ( ) . getFullName ( ) . replace ( _CHAR , _CHAR ) ; }
55644	public String retryFilterMethodName ( String key ) { return privateMethodName ( Name . from ( key ) . join ( _CHAR retry _CHAR ) . join ( _CHAR filter _CHAR ) ) ; }
55649	public String put ( String url , String json , final int expectedStatusCode ) { return put ( url , json , Collections . < String , String > emptyMap ( ) , expectedStatusCode ) ; }
55650	public static boolean isAnyBlank ( final Set < String > xs ) { if ( xs == _NULL || xs . isEmpty ( ) ) { return _BOOL ; } for ( String x : xs ) { if ( isBlank ( x ) ) { return _BOOL ; } } return _BOOL ; }
55654	public static byte stringToToken ( String value ) { try { Field f = Token . class . getField ( value ) ; return f . getByte ( _NULL ) ; } catch ( Exception e ) { return - _NUM ; } }
55660	public void update_ratsnest ( ) { if ( ratsnest != _NULL ) { ratsnest = new RatsNest ( r_board , stat ) ; } }
55690	public boolean containsValue ( long val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSNumber . class ) ) { NSNumber num = ( NSNumber ) o ; if ( num . isInteger ( ) && num . intValue ( ) == val ) return _BOOL ; } } return _BOOL ; }
55714	private boolean is_legal_class_name ( String p_string ) { if ( p_string . equals ( _CHAR _CHAR ) ) return _BOOL ; for ( int i = _NUM ; i < reserved_name_chars . length ; ++ i ) { if ( p_string . contains ( reserved_name_chars [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
55723	public void checkNumberArgs ( int argNum ) throws WrongNumberArgsException { if ( ( argNum < _NUM ) || ( argNum > _NUM ) ) reportWrongNumberArgs ( ) ; }
55725	public static ComponentListener add ( ComponentListener a , ComponentListener b ) { return ( ComponentListener ) addInternal ( a , b ) ; }
55746	public void initialize ( ) { try { startCommonRegistry ( ) ; startConnectorNoClientCertificate ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; throw new RuntimeException ( _CHAR Error while starting the RMI module : '' + e . getMessage ( ) ) ; } if ( logger . isTraceEnabled ( ) ) { logger . trace ( _CHAR RMI module started _CHAR ) ; } }
55806	public int timePassed ( ) { return ( int ) ( AnimationUtils . currentAnimationTimeMillis ( ) - mStartTime ) ; }
55879	@ Override public Socket accept ( ) throws IOException { if ( logger != _NULL ) { logger . println ( _CHAR SSLServerSocketImpl . accept .. _CHAR ) ; } SSLSocketImpl s = new SSLSocketImpl ( ( SSLParametersImpl ) sslParameters . clone ( ) ) ; implAccept ( s ) ; s . init ( ) ; if ( logger != _NULL ) { logger . println ( _CHAR SSLServerSocketImpl : accepted , initialized _CHAR ) ; } return s ; }
55896	@ Override public void contextDestroyed ( ServletContextEvent event ) { log ( _CHAR contextDestroyed ( ) _CHAR ) ; this . context = _NULL ; }
55938	public boolean isResetChangeNumber ( ) { return isSubcommand ( RESET_CHANGE_NUMBER_SUBCMD_NAME ) ; }
55950	private void checkPackageInfoFileExistsInternal ( File sourceDirectory ) { assertTrue ( sourceDirectory . exists ( ) ) ; assertTrue ( sourceDirectory . isDirectory ( ) ) ; File packageInfoFile = new File ( sourceDirectory , _CHAR package - info . java '' ) ; assertTrue ( packageInfoFile . exists ( ) , _CHAR Source directory _CHAR + sourceDirectory . getAbsolutePath ( ) + _CHAR does not contain a package - info . java file . '' ) ; }
55967	public int length ( ) { return text == _NULL ? _NUM : text . end - text . start ; }
55971	public boolean isSingleValue ( ) { return isSingleValue ; }
55979	public static DragSourceMotionListener add ( DragSourceMotionListener a , DragSourceMotionListener b ) { return ( DragSourceMotionListener ) addInternal ( a , b ) ; }
55992	public static Boolean StringToBoolean ( String str ) throws Exception { if ( str == _NULL ) { return _NULL ; } if ( str . equals ( _CHAR _BOOL _CHAR ) || str . equals ( _CHAR _NUM _CHAR ) ) { return Boolean . TRUE ; } if ( str . equals ( _CHAR _BOOL _CHAR ) || str . equals ( _CHAR _NUM _CHAR ) ) { return Boolean . FALSE ; } throw new Exception ( ) ; }
55993	protected void disableOpenShiftFeatures ( Controller controller ) { this . processTemplatesLocally = _BOOL ; controller . setSupportOAuthClients ( _BOOL ) ; controller . setProcessTemplatesLocally ( _BOOL ) ; }
55997	public static BooleanArgument usePKCS11KeystoreArgument ( ) throws ArgumentException { return BooleanArgument . builder ( _CHAR usePkcs11Keystore _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_USE_PKCS11 . get ( ) ) . buildArgument ( ) ; }
56046	public void jspError ( Exception e ) throws JasperException { dispatch ( _NULL , _NULL , _NULL , e ) ; }
56066	public List < Certificate > localCertificates ( ) { return localCertificates ; }
56136	public static KeyListener add ( KeyListener a , KeyListener b ) { return ( KeyListener ) addInternal ( a , b ) ; }
56172	public static void invokeListeners ( SessionEvent sessionEvent ) { Reject . ifNull ( sessionEvent , sessionEvent . getSession ( ) ) ; final Session session = sessionEvent . getSession ( ) ; for ( SessionListener listener : session . getLocalSessionEventListeners ( ) ) { listener . sessionChanged ( sessionEvent ) ; } }
56185	public static boolean isSupplemental ( int c ) { return ( c >= _NUM && c <= _NUM ) ; }
56217	public ImportParameters ldifFile ( String ldifFile ) { this . ldifFile = ldifFile ; return this ; }
56227	public void componentRemoved ( ContainerEvent e ) { }
56241	@ Override public void close ( ) throws IOException { synchronized ( lock ) { in . close ( ) ; } }
56324	public void install ( JEditorPane c ) { c . addCaretListener ( inputAttributeUpdater ) ; c . addPropertyChangeListener ( inputAttributeUpdater ) ; Caret caret = c . getCaret ( ) ; if ( caret != _NULL ) { inputAttributeUpdater . updateInputAttributes ( caret . getDot ( ) , caret . getMark ( ) , c ) ; } }
56328	public void stopEncryption ( ) { if ( _BOOL ) { StaticUtils . close ( secureSocket ) ; } input = new BufferedInputStream ( plainInput ) ; output = new BufferedOutputStream ( plainOutput ) ; isEncrypted = _BOOL ; }
