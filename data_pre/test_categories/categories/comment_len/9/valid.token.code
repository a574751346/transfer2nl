12	public static int blue ( int color ) { return color & _NUM ; }
30	public void repositoryRemoved ( ISVNRepositoryLocation repository ) { for ( ISVNListener listener : repositoryListeners ) { listener . repositoryRemoved ( repository ) ; } }
36	public void addToTemplateContext ( String name , Object value ) { if ( templateContext == _NULL ) { templateContext = FastMap . newInstance ( ) ; } templateContext . put ( name , value ) ; }
43	private static boolean treeHasConflicts ( Node root ) { if ( root . isConflicted ) { return _BOOL ; } for ( Node n : root . children ) { if ( treeHasConflicts ( n ) ) { return _BOOL ; } } return _BOOL ; }
67	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
94	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
97	public void resetCircleColors ( ) { mCircleColors = new ArrayList < > ( ) ; }
113	public static void deleteFlight ( AirMapFlight flight , @ Nullable AirMapCallback < Void > callback ) { FlightService . deleteFlight ( flight , callback ) ; }
130	public void updateFile ( OCFile file ) { setFile ( file ) ; }
135	void draw ( Canvas canvas , Thumb leftThumb , Thumb rightThumb ) { canvas . drawLine ( leftThumb . getX ( ) , mY , rightThumb . getX ( ) , mY , mPaint ) ; }
154	public static SM_SYSTEM_MESSAGE STR_FORCE_ENTER_WITH_HIS_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
194	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
240	public int createDeferredCDATASection ( String data ) { int nodeIndex = createNode ( Node . CDATA_SECTION_NODE ) ; int chunk = nodeIndex >> CHUNK_SHIFT ; int index = nodeIndex & CHUNK_MASK ; setChunkValue ( fNodeValue , data , chunk , index ) ; return nodeIndex ; }
241	public static void enableLogging ( boolean enable ) { AirMapLog . ENABLED = enable ; }
247	public boolean isSameItem ( Item i ) { return this . getObjectId ( ) . equals ( i . getObjectId ( ) ) && this . getItemId ( ) == i . getItemId ( ) ; }
248	public String toString ( ) { return name ; }
249	public AppsSendRequestQuery key ( String value ) { return unsafeParam ( _CHAR key _CHAR , value ) ; }
270	public static boolean haveCache ( ) { return maryCache != _NULL ; }
294	public boolean want ( Edge e ) { String tgtSubSignature = e . tgt ( ) . getSubSignature ( ) ; if ( tgtSubSignature . equals ( _CHAR void run ( ) _CHAR ) ) return _BOOL ; return _BOOL ; }
297	public DistributedLogNamespaceBuilder perLogStatsLogger ( StatsLogger statsLogger ) { this . _perLogStatsLogger = statsLogger ; return this ; }
327	@ Override public String toString ( ) { return super . toString ( ) + _CHAR ( _CHAR + filter . toString ( ) + _CHAR ) _CHAR ; }
343	public static void main ( String [ ] args ) throws IOException , InterruptedException { final JRServiceServer server = new JRServiceServer ( ) ; server . start ( ) ; server . blockUntilShutdown ( ) ; }
354	public static void launchActivity ( Activity context , Class < ? extends Activity > activity , boolean closeCurrentActivity ) { ActivityUtils . launchActivity ( context , activity , closeCurrentActivity , _NULL , _NULL ) ; }
378	public static boolean shouldShowRequestPermissionRationale ( Activity activity , String ... permissions ) { for ( String permission : permissions ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( activity , permission ) ) { return _BOOL ; } } return _BOOL ; }
450	protected LeadsGetUsersQuery secret ( String value ) { return unsafeParam ( _CHAR secret _CHAR , value ) ; }
475	public int size ( ) { return m_actions . size ( ) ; }
487	@ GlobalCallback ( PlayerAllianceDisbandCallback . class ) public static void disband ( PlayerAlliance alliance ) { Preconditions . checkState ( alliance . onlineMembers ( ) <= _NUM , _CHAR Ca n _CHAR_CHAR ) ; alliances . remove ( alliance . getTeamId ( ) ) ; alliance . onEvent ( new AllianceDisbandEvent ( alliance ) ) ; }
489	private void addAnnotation ( TextContainer textContainer , Issue issue ) { TMTextUnitVariantCommentAnnotation tmTextUnitVariantCommentAnnotation = new TMTextUnitVariantCommentAnnotation ( ) ; tmTextUnitVariantCommentAnnotation . setCommentType ( TMTextUnitVariantComment . Type . QUALITY_CHECK ) ; tmTextUnitVariantCommentAnnotation . setMessage ( issue . getMessage ( ) ) ; tmTextUnitVariantCommentAnnotation . setSeverity ( TMTextUnitVariantComment . Severity . WARNING ) ; new TMTextUnitVariantCommentAnnotations ( textContainer ) . addAnnotation ( tmTextUnitVariantCommentAnnotation ) ; }
491	public synchronized int size ( ) { return count ; }
527	public HarmonicCurveFitter withStartPoint ( double [ ] newStart ) { return new HarmonicCurveFitter ( newStart . clone ( ) , maxIter ) ; }
552	public int model ( ) { return theModel ; }
572	public void addDataPoint ( double value ) { if ( this . data . size ( ) == dataPointLimit ) { this . data . poll ( ) ; } this . data . add ( new DataPoint ( value ) ) ; if ( value > this . max ) this . max = value ; }
579	public static boolean isDark ( @ ColorInt int color ) { float [ ] hsl = new float [ _NUM ] ; android . support . v4 . graphics . ColorUtils . colorToHSL ( color , hsl ) ; return isDark ( hsl ) ; }
594	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
600	public static Shape parse ( String s , ShapeFormat shapeFormat ) { try { return fromSpatial4JShape ( getReader ( shapeFormat ) . read ( s ) ) ; } catch ( IOException e ) { throw new IllegalStateException ( _CHAR Failed to parse shape using _CHAR + shapeFormat , e ) ; } catch ( ParseException e ) { throw new IllegalArgumentException ( _CHAR Failed to parse shape using _CHAR + shapeFormat , e ) ; } }
605	void deleteNode ( ) { vertex . edges ( Direction . BOTH ) . forEachRemaining ( _NULL ) ; mindmapsGraph . getConceptLog ( ) . removeConcept ( this ) ; vertex . remove ( ) ; vertex = _NULL ; }
628	public Set < String > projectFields ( ) { return projFields ; }
644	public void clear ( ) { int max = bits . length ; for ( int i = _NUM ; i < max ; i ++ ) { bits [ i ] = _NUM ; } }
668	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stagger_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
671	public int hashCode ( ) { return Constraint . hash ( constraints ) ; }
684	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
725	private void resetTour ( ) { instance = _NULL ; queue . clear ( ) ; this . activity = _NULL ; config = _NULL ; }
743	@ Override public void dropTo ( Droppable droppable ) { Offset offset = new Offset ( getCurrentLocation ( ) , droppable . getCurrentLocation ( ) ) ; dropByOffset ( offset . getX ( ) , offset . getY ( ) ) ; }
756	private void createElement ( Document doc , Element parentElement , String elementName , boolean value ) { Element element = doc . createElement ( elementName ) ; element . appendChild ( doc . createTextNode ( Boolean . toString ( value ) ) ) ; parentElement . appendChild ( element ) ; }
765	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
800	private static FingerLock createInstance ( @ NonNull String keyName ) { FingerLock fragment = new FingerLock ( ) ; Bundle arguments = new Bundle ( ) ; arguments . putString ( ARG_KEY_NAME , keyName ) ; fragment . setArguments ( arguments ) ; return fragment ; }
813	public boolean isClosed ( ) { return journalWriter == _NULL ; }
827	public static boolean fileExists ( File file ) { return file . exists ( ) && ! file . isDirectory ( ) ; }
848	protected PhotosSaveMarketPhotoQuery hash ( String value ) { return unsafeParam ( _CHAR hash _CHAR , value ) ; }
894	@ Override public void clearDataTags ( ) { sourceDataTags . clear ( ) ; movingAverages . clear ( ) ; }
920	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( get ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
953	private static void addStonesStats ( Item item , Set < ? extends ManaStone > itemStones , CreatureGameStats < ? > cgs ) { if ( itemStones == _NULL || itemStones . size ( ) == _NUM ) { return ; } for ( ManaStone stone : itemStones ) { addStoneStats ( item , stone , cgs ) ; } }
958	public static < V , V1 extends V > Map < String , V > toMap ( String name1 , V1 value1 ) { return populateMap ( new HashMap < String , V > ( ) , name1 , value1 ) ; }
981	public void delete ( ) throws JMSException { }
989	public String toString ( ) { return super . toString ( ) + _CHAR [ \ _CHAR _CHAR + exportAnnotation + _CHAR \ _CHAR ] _CHAR ; }
1004	public boolean contains ( String uid ) { cleanIfNeeded ( ) ; return _idSet0 . contains ( uid ) || _idSet1 . contains ( uid ) ; }
1033	public StatisticalReferenceDataset [ ] createAll ( ) throws IOException { return new StatisticalReferenceDataset [ ] { createKirby2 ( ) , createMGH17 ( ) } ; }
1094	public boolean showCameraSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_MEDIASTREAM_CAMERA ; }
1120	public EnterMonitorStmt newEnterMonitorStmt ( Value op ) { return new JEnterMonitorStmt ( op ) ; }
1128	public void addField ( FieldConfigBase fieldConfig ) { if ( fieldConfig != _NULL ) { add ( fieldConfig . getFieldId ( ) , fieldConfig ) ; } }
1134	private void createConnection ( String server ) { Properties props = System . getProperties ( ) ; props . put ( _CHAR mail . smtp . host _CHAR , server ) ; LOG . debug ( _CHAR createConnection ( ) - The connection with the mail server has been created _CHAR ) ; this . session = Session . getInstance ( props , _NULL ) ; }
1142	public Observable < FirebaseChildEvent > observeChildChanged ( final Query firebaseRef ) { return observeChildEvent ( firebaseRef ) . filter ( filterChildEvent ( EventType . CHANGED ) ) ; }
1155	private boolean isTransactionWithLease ( ServerTransaction txn ) { return txn . getLease ( ) != Long . MAX_VALUE && txn . getLease ( ) != _NUM ; }
1157	public void addExtension ( String ext ) { exts . add ( ext . toLowerCase ( ) ) ; }
1181	public void release ( MesosResource mesosResource ) { if ( mesosResource . isAtomic ( ) ) { releaseAtomicResource ( mesosResource ) ; return ; } else { releaseMergedResource ( mesosResource ) ; return ; } }
1186	public boolean isSet ( final OPTION option ) { return options == _NULL ? _BOOL : options . contains ( option ) ; }
1196	protected boolean retainPresenter ( ) { return _BOOL ; }
1202	@ Override public void endElement ( String uri , String localName , String qName ) throws SAXException { }
1204	private static int read ( InputStream input ) throws IOException { int value = input . read ( ) ; if ( - _NUM == value ) { throw new EOFException ( _CHAR Unexpected EOF reached _CHAR ) ; } return value ; }
1268	public void populate ( MultiOptionSelectedInterface symbolSelectedListener , List < ValueComboBoxDataGroup > dataSelectionList ) { this . symbolSelectedListener = symbolSelectedListener ; if ( comboBox != _NULL ) { comboBox . initialiseMenu ( dataSelectionList ) ; } }
1272	public static CredentialsDialogFragment newInstanceForCredentials ( WebView webView , HttpAuthHandler handler ) { if ( handler == _NULL ) { throw new IllegalArgumentException ( _CHAR Trying to create instance with parameter handler _CHAR + _CHAR == _NULL _CHAR ) ; } CredentialsDialogFragment frag = new CredentialsDialogFragment ( ) ; frag . mHandler = handler ; frag . mWebView = webView ; return frag ; }
1280	public static String node ( ) { if ( node == _NULL ) { node = Module . _conf == _NULL ? X . EMPTY : Module . _conf . getString ( _CHAR node _CHAR , _NULL ) ; } return node ; }
1311	public int hashCode ( ) { return ( int ) ( value ^ ( value >> > _NUM ) ) ; }
1336	public static float log ( float fValue ) { return ( float ) Math . log ( fValue ) ; }
1338	public boolean showPopupSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_POPUPS ; }
1356	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
1376	public void parseChangeText ( String changeLogText ) { if ( changeLogText != _NULL ) { changeLogText = changeLogText . replaceAll ( _CHAR \\ [ _CHAR , _CHAR < _CHAR ) . replaceAll ( _CHAR \\ ] _CHAR , _CHAR > _CHAR ) ; } setChangeText ( changeLogText ) ; }
1381	public boolean hasEventStatus ( ) { return eventStatus != _NULL ; }
1411	public void end ( ) { while ( ! subreports . isEmpty ( ) ) { String subreport = subreports . pop ( ) ; addLogEntry ( new SubreportEndEntry ( subreport ) ) ; } this . endDate = new Date ( ) ; }
1413	protected final void fireColumnEvent ( int idx , long prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
1428	public static String formatQuantity ( Float quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return formatQuantity ( quantity . doubleValue ( ) ) ; }
1439	private void outString ( DataOutputStream dos , String s ) throws IOException { dos . writeByte ( ( byte ) s . length ( ) ) ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { dos . writeChar ( s . charAt ( i ) ) ; } }
1452	public void waitUntilCompletion ( ) throws InterruptedException { Iterator iIter = qThreads . iterator ( ) ; while ( iIter . hasNext ( ) ) { Thread tCur = ( Thread ) iIter . next ( ) ; if ( tCur . isAlive ( ) ) tCur . join ( ) ; } }
1482	private NotificationCompat . Builder createNotificationBuilder ( ) { NotificationCompat . Builder notificationBuilder = new NotificationCompat . Builder ( getContext ( ) ) ; notificationBuilder . setSmallIcon ( R . drawable . notification_icon ) . setAutoCancel ( _BOOL ) ; notificationBuilder . setColor ( getContext ( ) . getResources ( ) . getColor ( R . color . primary ) ) ; return notificationBuilder ; }
1486	public SelectBuilder < K , V > select ( String name ) { return new SelectBuilder < > ( new Pattern < > ( name ) ) ; }
1499	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
1502	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
1512	public void addXValue ( String xVal ) { if ( xVal != _NULL && xVal . length ( ) > mXValMaximumLength ) mXValMaximumLength = xVal . length ( ) ; mXVals . add ( xVal ) ; }
1523	public void unexport ( long remoteObjID ) { List < ChannelEntry > channelEntries = getChannels ( remoteObjID ) ; for ( ChannelEntry chEntry : channelEntries ) closeConnection ( chEntry ) ; }
1533	@ Override public boolean isEnabled ( ) { return mIsEnabled ; }
1535	public double slope ( double x1 , double x2 , double y1 , double y2 ) { return ( y2 - y1 ) / ( x2 - x1 ) ; }
1541	public static int levelIdToIndex ( UUID levelId ) { return ( int ) levelId . getLeastSignificantBits ( ) ; }
1542	public ChangeSet removeFromCollection ( String path , Serializable itemToRemove ) { return add ( new RemoveFromCollectionSpaceEntryMutator ( path , itemToRemove ) ) ; }
1562	public FriendsGetQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
1598	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
1622	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
1631	public int id ( ) { return id ; }
1676	public static final HalfEllipse scale ( HalfEllipse halfEllipse , double scale ) { if ( halfEllipse == _NULL ) throw new NullPointerException ( Messages . getString ( _CHAR geometry . nullShape _CHAR ) ) ; if ( scale <= _NUM ) throw new IllegalArgumentException ( Messages . getString ( _CHAR geometry . invalidScale _CHAR ) ) ; return new HalfEllipse ( halfEllipse . getWidth ( ) * scale , halfEllipse . getHeight ( ) * scale ) ; }
1740	public static double ceil ( double x ) { double y ; if ( Double . isNaN ( x ) ) { return x ; } y = floor ( x ) ; if ( y == x ) { return y ; } y += _NUM . _NUM ; if ( y == _NUM ) { return x * y ; } return y ; }
1751	public static SM_SYSTEM_MESSAGE STR_REMOVE_ITEM_OPTION_NO_OPTION_TO_REMOVE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1763	protected final void fireColumnEvent ( int type , int start , int end ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , type , start , end ) ; }
1803	public void onNavigationEvent ( int navigationEvent , Bundle extras ) { }
1819	public GrimpBody newBody ( SootMethod m ) { return new GrimpBody ( m ) ; }
1869	public TapTarget descriptionTextSize ( int sp ) { if ( sp < _NUM ) throw new IllegalArgumentException ( _CHAR Given negative text size _CHAR ) ; this . descriptionTextSize = sp ; return this ; }
1888	public void reinitialiseNode ( int nodeId ) { this . zwaveNodes . remove ( nodeId ) ; addNode ( nodeId ) ; }
1910	public static final void emoteStartWalking ( Npc owner ) { owner . setState ( CreatureState . WALKING ) ; PacketSendUtility . broadcastPacket ( owner , new SM_EMOTION ( owner , EmotionType . WALK ) ) ; }
1914	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
1937	public void recordOpenedRecents ( ) { setFirstAction ( OPENED_RECENTS ) ; }
1947	public boolean isPluginEnabled ( Plugin plugin ) { if ( ( plugin != _NULL ) && ( plugins . contains ( plugin ) ) ) { return plugin . isEnabled ( ) ; } else { return _BOOL ; } }
1970	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_OPTION_IT_CAN_NOT_BE_GIVEN_OPTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1981	public static boolean isDarkTheme ( Context context , boolean current ) { return resolveBoolean ( context , R . attr . themeDark , current ) ; }
2005	protected PhotosSaveMarketPhotoQuery server ( int value ) { return unsafeParam ( _CHAR server _CHAR , value ) ; }
2017	@ Deprecated public void showDoneButton ( boolean showDone ) { setProgressButtonEnabled ( showDone ) ; }
2023	public void decode ( String stringValue ) { String [ ] components = stringValue . replace ( _CHAR _CHAR , _CHAR _CHAR ) . split ( separator ) ; if ( components . length == _NUM ) { start = new Duration ( components [ _NUM ] ) ; end = new Duration ( components [ _NUM ] ) ; } }
2025	public static void syncImmediately ( Context context ) { Bundle bundle = new Bundle ( ) ; bundle . putBoolean ( ContentResolver . SYNC_EXTRAS_MANUAL , _BOOL ) ; bundle . putBoolean ( ContentResolver . SYNC_EXTRAS_EXPEDITED , _BOOL ) ; ContentResolver . requestSync ( getSyncAccount ( context ) , context . getString ( R . string . data_provider_authority ) , bundle ) ; }
2065	protected LeadsCompleteQuery vkSid ( String value ) { return unsafeParam ( _CHAR vk_sid _CHAR , value ) ; }
2081	public void removeLoadedServiceUnit ( String suName , ResourceQuota quota ) { if ( this . loadedBundles . remove ( suName ) ) { this . allocatedQuota . substract ( quota ) ; estimateLoadPercentage ( ) ; } }
2085	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_JOIN_ROUND_IDARENA ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
2087	@ NotNull public ImageOverlayBuilder toClipboard ( ) { new CopyImagetoClipBoard ( ) . copyImage ( bufferedImage ) ; return this ; }
2098	public boolean deleteStorage ( String groupName , String storageIpAddr ) throws IOException { return this . deleteStorage ( ClientGlobal . g_tracker_group , groupName , storageIpAddr ) ; }
2099	@ Override void resetList ( ) { clearRecycledState ( mHeaderViewInfos ) ; clearRecycledState ( mFooterViewInfos ) ; super . resetList ( ) ; mLayoutMode = LAYOUT_NORMAL ; }
2111	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
2113	public final List readDataBack ( final int numberOfLines ) throws DataFallbackException { fFileController . closeFallbackOutputStream ( ) ; fFileController . openFallbackInputStream ( ) ; final List data = fFileController . readLines ( numberOfLines , fallbackObj ) ; return data ; }
2129	public static SM_SYSTEM_MESSAGE STR_MSG_CHECK_INSTANCE_COOL_TIME ( ) { return new SM_SYSTEM_MESSAGE ( _NUM ) ; }
2136	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException ex ) { throw new InternalError ( ) ; } }
2138	public static Map createAddressMap ( InetSocketAddress address ) { Map map = new HashMap ( ) ; map . put ( PORT , ( long ) address . getPort ( ) ) ; map . put ( ADDRESS , address . getAddress ( ) . getHostAddress ( ) ) ; return map ; }
2152	public static final void drawLineSegment ( GL2 gl , Vector2 p1 , Vector2 p2 , boolean points ) { RenderUtilities . drawLineSegment ( gl , p1 . x , p1 . y , p2 . x , p2 . y , points ) ; }
2157	public static < ParentActivity extends AppCompatActivity & OnNavigationItemSelectedListener > DrawerDelegate attach ( @ Nullable ParentActivity parent ) { return attach ( parent . getSupportFragmentManager ( ) ) ; }
2188	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
2260	synchronized void checkStateAndTransmit ( ) throws BKTransmitException , WriteException , InvalidEnvelopedEntryException , LockingException { checkStateBeforeTransmit ( ) ; transmit ( ) ; }
2272	static int rootDistanceX ( ConstraintWidget widget ) { int rootWidth = widget . getParent ( ) . getWidth ( ) ; int aX = widget . getX ( ) ; int aWidth = widget . getWidth ( ) ; return Math . min ( aX , rootWidth - ( aX + aWidth ) ) ; }
2283	public void toServer ( ) { OpenModLoader . getSidedHandler ( ) . getClientPlayer ( ) . connection . sendPacket ( new PacketWrapper ( channel , new Packet ( this ) ) ) ; }
2299	static boolean isSameColumn ( ConstraintWidget a , ConstraintWidget b ) { return Math . max ( a . getX ( ) , b . getX ( ) ) < Math . min ( a . getX ( ) + a . getWidth ( ) , b . getX ( ) + b . getWidth ( ) ) ; }
2304	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; camera . autoFocus ( autoFocusCallback ) ; } }
2317	public void leftClick ( int x , int y , int delay ) throws InterruptedException { move ( x , y ) ; click ( InputEvent . BUTTON1_MASK , delay ) ; }
2319	public boolean contains ( int legionId ) { return legionsById . containsKey ( legionId ) ; }
2331	private void sendOnTextChanged ( CharSequence s , int start , int before , int count ) { if ( mListeners != _NULL ) { for ( int i = _NUM ; i < mListeners . size ( ) ; i ++ ) { mListeners . get ( i ) . onTextChanged ( s , start , before , count ) ; } } }
2333	@ Deprecated public Builder cacheOnDisc ( boolean cacheOnDisk ) { return cacheOnDisk ( cacheOnDisk ) ; }
2349	public int append_file ( String group_name , String appender_filename , long file_size , UploadCallback callback ) throws IOException , MyException { return this . do_append_file ( group_name , appender_filename , file_size , callback ) ; }
2352	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - nMin = # ] [ - nMax = # ] [ - dist = # ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] [ - docClass = ... ] [ - compClass = ... ] _CHAR ) ; System . err . println ( _CHAR nMin = # \ tMin n - gram size .\ nnMax = # \ tMax n - gram size .\ n _CHAR + _CHAR dist = # \ tN - gram window .\ n _CHAR + _CHAR - o = outFile \ tThe file to output data . Default is stdout .\ n _CHAR + _CHAR - t = # \ tNumber of threads . Defaults to number of available processors declared by system .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR - docClass = ... \ tA java class identifier to use as Document class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramDocument \ n _CHAR + _CHAR - compClass = ... \ tA java class identifier to use as Comparator class . _CHAR + _CHAR Defaults to jinsect . documentModel . StandardDocumentComparator \ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
2355	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_CHARGE_INVALID_STANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2392	public void addExtension ( String ext ) { synchronized ( exts ) { ext = ext . toLowerCase ( ) ; exts . add ( ext ) ; } }
2450	protected void writeNetscapeExt ( ) throws IOException { out . write ( _NUM ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeString ( _CHAR NETSCAPE _CHAR + _CHAR _NUM . _NUM _CHAR ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeShort ( repeat ) ; out . write ( _NUM ) ; }
2454	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
2472	public PolynomialCurveFitter withStartPoint ( double [ ] newStart ) { return new PolynomialCurveFitter ( newStart . clone ( ) , maxIter ) ; }
2479	public void load ( ) { dimensionLoader . loadDimensionDictionary ( dictionaries . getDimensionDictionary ( ) ) ; metricLoader . loadMetricDictionary ( dictionaries . getMetricDictionary ( ) ) ; tableLoader . loadTableDictionary ( dictionaries ) ; LOG . info ( _CHAR Initialized ConfigurationLoader _CHAR ) ; LOG . info ( dictionaries . toString ( ) ) ; }
2505	public void animate ( ) { cleanupExistingAnimation ( ) ; attachConfettiViewToParent ( ) ; addNewConfetti ( numInitialCount , _NUM ) ; startNewAnimation ( ) ; }
2510	public Builder styles ( String styles ) { this . styles = styles ; return this ; }
2542	public SiteAdminPage clickYesOnConfirmationWindow ( ) { siteAdminConfirmationWindow . confirm ( ) ; return this ; }
2563	public static CompilerSettings defaultNoAccountingSettings ( ) { return defaultSettings ( ) . withCPUAccountingMode ( CPUAccountingMode . NO_CPU_ACCOUNTING ) ; }
2566	protected HashMap < Value , Object > newInitialFlow ( ) { HashMap < Value , Object > m = new HashMap < Value , Object > ( ) ; for ( Value l : ( Collection < Value > ) localsAndFieldRefs ) { m . put ( l , NOTHING ) ; } return m ; }
2577	public static double mean ( double [ ] vector ) { double sum = _NUM ; if ( vector . length == _NUM ) { return _NUM ; } for ( double aVector : vector ) { sum += aVector ; } return sum / ( double ) vector . length ; }
2594	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
2602	public boolean isDataBindingEnabled ( ) { return myDataBindingEnabled ; }
2614	public static void clickButtonTwitter ( ) { RewiMod . getInstance ( ) . openUrl ( _CHAR https : // twitter . com / RewiMod '' ) ; }
2619	private boolean hasLogTypeFilters ( ) { return logDisabledTypesMask != _NUM ; }
2643	private void populateResultsBox ( IVScanResult ivScanResult ) { ivScanResult . sortCombinations ( ) ; populateResultsHeader ( ivScanResult ) ; if ( ivScanResult . getCount ( ) == _NUM ) { populateSingleIVMatch ( ivScanResult ) ; } else { populateMultipleIVMatch ( ivScanResult ) ; } setResultScreenPercentageRange ( ivScanResult ) ; adjustSeekbarsThumbs ( ) ; hideSeeAllLinkIfFlagSet ( ivScanResult ) ; populateAdvancedInformation ( ivScanResult ) ; populatePrevScanNarrowing ( ) ; }
2708	public boolean hasImage ( ) { return mImage != _NULL ; }
2723	public static void printUsage ( ) { System . out . println ( _CHAR Usage : _CHAR + grammarAndContentAnalysis . class . getName ( ) + _CHAR [ - corpusDir = dir _CHAR + System . getProperty ( _CHAR file . separator _CHAR ) + _CHAR ] The base directory _CHAR + _CHAR of the corpus including the directory separator character .\ n _CHAR + _CHAR [ - categoriesForGrammar = # ] \ t The number of categories to use for grammar extraction . Default is 2 .\ n '' + '' - trainPercent = # . # # \ t The training percent to use for the grammar . Default is 0 . 66 .\ n '' + '' - minNGram = # \ t The min n - gram rank . Default is 3 .\ n '' + '' - maxNGram = # \ t The max n - gram rank . Default is 8 .\ n '' + '' - partOfCorpus = # . # # \ t The percent of corpus to use for all '' + '' experiments .\ n '' + '' - windowSize = # \ t The neighbourhood window . Default is max ( _NUM * minNGram , maxNGram + _NUM ) .\ n _CHAR + _CHAR - cache \ t If selected will cache category graphs in memory . NOTE : Very memory consuming . '' ) ; }
2755	public boolean isExclusiveReadLockOperation ( ) { return ( ( _templateOperation == SpaceOperations . READ || _templateOperation == SpaceOperations . READ_IE ) && ReadModifiers . isExclusiveReadLock ( _operationModifiers ) && getXidOriginatedTransaction ( ) != _NULL ) ; }
2762	public void updateFile ( OCFile file ) { setFile ( file ) ; }
2763	public boolean isServiceUnitPreAllocated ( String suName ) { return this . preAllocatedBundles . contains ( suName ) ; }
2786	public PhotosSaveQuery caption ( String value ) { return unsafeParam ( _CHAR caption _CHAR , value ) ; }
2789	public CatchOptions noMasterBall ( boolean skipMasterBall ) { this . skipMasterBall = skipMasterBall ; return this ; }
2793	public boolean isNamespaceAware ( ) { return _BOOL ; }
2806	public boolean hasApprovalLevel ( ) { return approvalLevel != _NULL ; }
2815	public void unColorallButtons ( ) { for ( ClipboardTokenButton tokenButton : tokenButtons ) { tokenButton . resetColor ( ) ; } }
2819	public static SM_SYSTEM_MESSAGE STR_ITEM_CANNOT_BE_GIVEN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2830	public boolean isClosed ( ) { return journalWriter == _NULL ; }
2833	public boolean touchOutside ( ) { return outsideTouching != _NULL && ! outsideTouching . isEmpty ( ) ; }
2874	@ ObjectiveCName ( _CHAR addEntry : _CHAR ) public List addEntry ( String entry ) { java . util . List < String > entries = this . getEntries ( ) ; entries . add ( entry ) ; this . updateList ( entries ) ; return this ; }
2895	public int size ( ) { return this . results == _NULL ? _NUM : this . results . size ( ) ; }
2957	public void endSubreport ( String subreport ) { currentTest . get ( ) . endSubreport ( subreport ) ; }
2982	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
2988	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
2992	public static double sum ( double [ ] nums ) { double ret = _NUM ; for ( double d : nums ) ret += d ; return ret ; }
3009	public FriendsGetQueryWithFields nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
3023	public void add ( String [ ] str ) { for ( int i = _NUM ; i < str . length ; i ++ ) add ( str [ i ] ) ; hasChanged = _BOOL ; }
3028	private void ensureDataConformance ( final double [ ] x , final double [ ] y ) throws MathIllegalArgumentException , NullArgumentException { if ( x == _NULL || y == _NULL ) { throw new NullArgumentException ( ) ; } if ( x . length == _NUM || y . length == _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . NO_DATA ) ; } }
3032	private boolean canChangeNickname ( Legion legion , int targetObjectId , String newNickname ) { if ( ! isValidNickname ( newNickname ) ) { return _BOOL ; } else if ( ! legion . isMember ( targetObjectId ) ) { return _BOOL ; } return _BOOL ; }
3057	public OutputStream bindStream ( OutputStream output ) { OutputStream stream = m_streams . get ( ) ; m_streams . set ( output ) ; return stream ; }
3090	public static Aggregate < Map < String , Concept > , Optional < ? >> min ( String varName ) { return new MinAggregate ( varName ) ; }
3113	public boolean isActive ( ) { Date now = new Date ( ) ; return startsAt != _NULL && endsAt != _NULL && now . after ( startsAt ) && now . before ( endsAt ) ; }
3170	public StaticFieldRef newStaticFieldRef ( SootFieldRef f ) { return Jimple . v ( ) . newStaticFieldRef ( f ) ; }
3216	public static String toSystemIndependentPath ( String path ) { if ( File . separatorChar != _CHAR ) { path = path . replace ( File . separatorChar , _CHAR ) ; } return path ; }
3239	public boolean increment ( K key ) { return adjustValue ( key , ( int ) _NUM ) ; }
3243	public int hashCode ( ) { return ( id != _NULL ) ? id . hashCode ( ) : _NUM ; }
3264	public AudioEditQuery text ( String value ) { return unsafeParam ( _CHAR text _CHAR , value ) ; }
3268	public float fractionFilled ( ) { return mWidgetArea / ( float ) mGroupArea ; }
3282	private void deleteFinal ( TableJson json , Storage storage ) { Delta delta = json . newDeleteStorage ( storage ) ; Audit audit = new AuditBuilder ( ) . set ( _CHAR _op _CHAR , _CHAR doDeleteFinal _CHAR ) . set ( _CHAR _uuid _CHAR , storage . getUuidString ( ) ) . build ( ) ; updateTableMetadata ( json . getTable ( ) , delta , audit , InvalidationScope . LOCAL ) ; }
3300	@ Override public void undo ( Transaction tx ) { }
3307	public final String toJson ( ) { return getGson ( ) . toJson ( this ) ; }
3316	@ Override public int [ ] makeCumulativeTestPoints ( ) { return makeDensityTestPoints ( ) ; }
3318	@ Override public int hashCode ( ) { return getName ( ) . hashCode ( ) ; }
3320	public void init ( String contextPath ) { this . baseUrl = contextPath + _CHAR / api / apps _CHAR ; if ( contextPath != _NULL && folderName != _NULL && launchPath != _NULL ) { launchUrl = baseUrl + _CHAR / _CHAR + folderName + _CHAR / _CHAR + launchPath ; } }
3350	public void restartSpaceComponents ( ) throws SpaceComponentsInitializeException { init ( ) ; SpaceMode newMode = _spaceMode ; _spaceMode = SpaceMode . NONE ; beforeSpaceModeChange ( newMode ) ; afterSpaceModeChange ( newMode ) ; }
3363	public void removeSubFilterWithTag ( String tag ) { Iterator < SubFilter > iterator = subFilters . iterator ( ) ; while ( iterator . hasNext ( ) ) { SubFilter subFilter = iterator . next ( ) ; if ( subFilter . getTag ( ) . equals ( tag ) ) { iterator . remove ( ) ; } } }
3366	public void addUserDefPts ( Set < Node > initVars ) { for ( Node vn : initVars ) { IVarAbstraction pn = geomPTA . findInternalNode ( vn ) ; if ( pn == _NULL ) { continue ; } pn = pn . getRepresentative ( ) ; if ( pn . reachable ( ) ) { pn . willUpdate = _BOOL ; } } }
3392	public TypeRef makeRequired ( ) { return interner . intern ( new TypeRef ( kind , Cardinality . REQUIRED , messageType , enumType ) ) ; }
3411	public static void endFlight ( AirMapFlight flight , @ Nullable AirMapCallback < AirMapFlight > callback ) { FlightService . endFlight ( flight , callback ) ; }
3427	public static void browse ( URI uri ) throws IOException { Desktop . getDesktop ( ) . browse ( uri ) ; }
3433	private int findCurrentCenterViewPos ( ) { return getPosition ( findCurrentCenterView ( ) ) ; }
3472	public static String intervalToString ( Interval interval , DateTimeFormatter formatter , String separator ) { return interval . getStart ( ) . toString ( formatter ) + separator + interval . getEnd ( ) . toString ( formatter ) ; }
3489	public static boolean isBookmarked ( String id ) { return Inquiry . get ( ) . selectFrom ( Constants . DATABASE_NAME , BookmarksDB . class ) . where ( _CHAR _id = ? _CHAR , id ) . one ( ) != _NULL ; }
3493	public static void syncImmediately ( Context context ) { Bundle bundle = new Bundle ( ) ; bundle . putBoolean ( ContentResolver . SYNC_EXTRAS_EXPEDITED , _BOOL ) ; bundle . putBoolean ( ContentResolver . SYNC_EXTRAS_MANUAL , _BOOL ) ; ContentResolver . requestSync ( getSyncAccount ( context ) , context . getString ( R . string . content_authority ) , bundle ) ; }
3504	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; camera . autoFocus ( autoFocusCallback ) ; } }
3525	public void removeChangeListener ( ChangeListener cl ) { m_listeners . remove ( cl ) ; }
3531	private IReadBlock fetchNext ( ) { while ( ! canceled . get ( ) && allReadsIterator . hasNext ( ) ) { IReadBlock readBlock = allReadsIterator . next ( ) ; if ( FindSelection . doesMatch ( findSelector , readBlock , pattern ) ) return readBlock ; } return _NULL ; }
3545	private static final String [ ] collectionToStrings ( Collection c ) { return c == _NULL ? _NULL : ( String [ ] ) c . toArray ( new String [ c . size ( ) ] ) ; }
3580	public static boolean isPrimitive ( Type type ) { return PRIMITIVE_TO_WRAPPER_TYPE . containsKey ( type ) ; }
3586	private void writeDomains ( Document document , Element rootElement ) { Element domains = document . createElement ( _CHAR domains _CHAR ) ; rootElement . appendChild ( domains ) ; for ( DomainSpec spec : this . document . getDomains ( ) ) writeDomainSpec ( spec , document , domains ) ; }
3610	public final Vertex locateVertexInGraph ( UniqueVertexGraph gGraph , Vertex vToFind ) { return gGraph . locateVertex ( vToFind ) ; }
3635	private static Stream < QueryParam > extractQueryParameters ( Method method ) { return Stream . of ( method . getParameterAnnotations ( ) ) . flatMap ( _NULL ) . filter ( _NULL ) . map ( _NULL ) ; }
3656	public void recordThrowable ( @ NotNull Throwable throwable ) { if ( myTraces == _NULL ) { myTraces = new ArrayList < Throwable > ( ) ; } myTraces . add ( throwable ) ; }
3660	public void notifyChange ( ) { executeEvent ( ) ; }
3703	void addSession ( GSSessionImpl childSession ) { synchronized ( this ) { sessions . addElement ( childSession ) ; } }
3747	public static final double metersPerSecondToFeetPerSecond ( double metersPerSecond ) { return metersPerSecond * FOOT_TO_METER ; }
3829	private void sendOnTextChanged ( CharSequence s , int start , int before , int count ) { if ( mListeners != _NULL ) { for ( int i = _NUM ; i < mListeners . size ( ) ; i ++ ) { mListeners . get ( i ) . onTextChanged ( s , start , before , count ) ; } } }
3835	public int hashCode ( ) { return ( int ) ( value ^ ( value >> > _NUM ) ) ; }
3843	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( MISSING_VALUE . equals ( get ( i ) ) ) { count ++ ; } } return count ; }
3858	public static void main ( String [ ] args ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { System . out . println ( _CHAR _CHAR + i + _CHAR = _CHAR + ulawToShort ( ( short ) i ) ) ; } }
3878	@ Override public AbstractScannedResult scanBlocklet ( BlocksChunkHolder blocksChunkHolder ) throws QueryExecutionException { try { fillScannedResult ( blocksChunkHolder ) ; } catch ( FilterUnsupportedException e ) { throw new QueryExecutionException ( e . getMessage ( ) ) ; } return scannedResult ; }
3881	public boolean strictlyNegative ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( sign < _NUM ) && ( ( mant [ mant . length - _NUM ] != _NUM ) || isInfinite ( ) ) ; }
3882	public int size ( ) { return this . get ( ) . length ; }
3907	public static Style deepOrange ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_DEEP_ORANGE ) ; return style ; }
3937	public ChangeSet increment ( String path , float delta ) { return add ( new IncrementSpaceEntryMutator ( path , delta ) ) ; }
3946	public int hashCode ( ) { return ( ClientMaxPrincipal . class . hashCode ( ) + Constraint . hash ( principals ) ) ; }
3971	public static String formatQuantity ( Double quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return formatQuantity ( quantity . doubleValue ( ) ) ; }
4032	public Map < String , Object > runSync ( String localName , ModelService service , Map < String , ? extends Object > context ) throws ServiceAuthException , ServiceValidationException , GenericServiceException { return runSync ( localName , service , context , _BOOL ) ; }
4041	public BigDecimal bigDecimalValue ( ) { return d ; }
4072	@ Override protected int changes ( ) { return changes ; }
4089	public boolean languageCostIgnore ( String languagename ) { boolean ignore ; switch ( languagename ) { case _CHAR Unknown _CHAR : case _CHAR Text _CHAR : case _CHAR JSON _CHAR : case _CHAR Markdown _CHAR : case _CHAR INI File _CHAR : case _CHAR ReStructuredText _CHAR : case _CHAR Configuration _CHAR : ignore = _BOOL ; break ; default : ignore = _BOOL ; break ; } return ignore ; }
4097	private void notifyStart ( ) { if ( eventHandler instanceof LifecycleAware ) { try { ( ( LifecycleAware ) eventHandler ) . onStart ( ) ; } catch ( final Throwable ex ) { exceptionHandler . handleOnStartException ( ex ) ; } } }
4101	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
4169	public char next ( ) { char c = more ( ) ? this . mySource . charAt ( this . myIndex ) : _NUM ; this . myIndex += _NUM ; return c ; }
4171	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
4172	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
4176	@ VisibleForTesting void subscribeForTesting ( ) { mObservable . subscribe ( mObserver ) ; }
4184	public V put ( K key , V value , long expireTimeMillis ) { return putInternal ( key , value , TimeUnit . NANOSECONDS . convert ( expireTimeMillis , TimeUnit . MILLISECONDS ) ) ; }
4203	public Edge addChildEdge ( Node parent , Node child ) { nodeCheck ( parent , _BOOL ) ; nodeCheck ( child , _BOOL ) ; return getEdge ( addChildEdge ( parent . getRow ( ) , child . getRow ( ) ) ) ; }
4294	public static java . sql . Timestamp toTimestamp ( String dateTime ) { java . util . Date newDate = toDate ( dateTime ) ; if ( newDate != _NULL ) { return new java . sql . Timestamp ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
4300	public static < T extends TextView > InputValidator validate ( T input ) { return new DefaultInputValidator < > ( input ) ; }
4308	public boolean containsSet ( TupleSet set ) { return m_sets . contains ( set ) ; }
4326	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
4329	private void configureSigning ( final Client clientProxy , final CommunicationMode mode ) { final WSS4JOutInterceptor wssOut = createSigningInterceptor ( ) ; clientProxy . getOutInterceptors ( ) . add ( wssOut ) ; final WSS4JInInterceptor wssIn = createValidatingInterceptor ( mode ) ; clientProxy . getInInterceptors ( ) . add ( wssIn ) ; }
4337	public static void logNormalPrioritySearchRequestOutcome ( boolean isFailure ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchNormalPrioritySearchRequestStatus _CHAR , isFailure ? REQUEST_FAILED : REQUEST_NOT_FAILED , REQUEST_BOUNDARY ) ; }
4346	protected FlowSet < SynchronizedRegionFlowPair > newInitialFlow ( ) { FlowSet < SynchronizedRegionFlowPair > ret = emptySet . clone ( ) ; if ( method . isSynchronized ( ) && methodTn != _NULL ) { ret . add ( new SynchronizedRegionFlowPair ( methodTn , _BOOL ) ) ; } return ret ; }
4350	public void destroy ( ) { if ( mTabModelSelector != _NULL ) { mTabModelSelector . removeObserver ( mSelectorObserver ) ; mTabModelSelector = _NULL ; } }
4373	public VideoRestoreCommentQuery restoreComment ( UserActor actor , int commentId ) { return new VideoRestoreCommentQuery ( getClient ( ) , actor , commentId ) ; }
4393	public void createData ( ) { if ( shouldCreateData ( ) ) { createSystemUser ( ) ; createDefaultUser ( ) ; } else { logger . debug ( _CHAR Data already present in the database , do n _CHAR_CHAR ) ; } }
4413	public LeadsGetStatsQuery secret ( String value ) { return unsafeParam ( _CHAR secret _CHAR , value ) ; }
4418	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
4477	private void endAllActions ( ) { this . selectBodyAction . end ( ) ; this . editBodyAction . end ( ) ; this . selectFixtureAction . end ( ) ; this . moveBodyAction . end ( ) ; this . rotateBodyAction . end ( ) ; this . moveFixtureAction . end ( ) ; this . rotateFixtureAction . end ( ) ; }
4485	private void sendQueryResult ( String result ) { Iterable < String > splitResult = Splitter . fixedLength ( QUERY_CHUNK_SIZE ) . split ( result + _CHAR \ n _CHAR ) ; for ( String resultChunk : splitResult ) { sendJson ( Json . object ( ACTION , ACTION_QUERY , QUERY_RESULT , resultChunk ) ) ; } }
4488	public void loadingStateChanged ( boolean isLoading ) { if ( mReloadMenuItem != _NULL ) { mReloadMenuItem . getIcon ( ) . setLevel ( isLoading ? RELOAD_BUTTON_LEVEL_STOP_LOADING : RELOAD_BUTTON_LEVEL_RELOAD ) ; mReloadMenuItem . setTitle ( isLoading ? R . string . accessibility_btn_stop_loading : R . string . accessibility_btn_refresh ) ; } }
4489	protected void init ( ) throws InvalidJobException { if ( Debug . verboseOn ( ) ) Debug . logVerbose ( _CHAR Async - Service initializing . '' , module ) ; }
4508	public void addCategoryLimitations ( boolean include , String ... categoryVelocityVarNames ) { query . append ( _CHAR _CHAR + ( include ? _CHAR + _CHAR : _CHAR - _CHAR ) + _CHAR ( _CHAR ) ; for ( String categoryVelocityVarName : categoryVelocityVarNames ) { query . append ( _CHAR categories : _CHAR + escapeValue ( categoryVelocityVarName ) + _CHAR _CHAR ) ; } query . append ( _CHAR ) _CHAR ) ; }
4526	public ChangeSet increment ( String path , byte delta ) { return add ( new IncrementSpaceEntryMutator ( path , delta ) ) ; }
4539	private void printGrantedAuthorities ( final Auth0JWTToken principal ) { for ( final GrantedAuthority grantedAuthority : principal . getAuthorities ( ) ) { final String authority = grantedAuthority . getAuthority ( ) ; logger . info ( authority ) ; } }
4556	static boolean isSystemWindows ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
4557	public static boolean lastGradleSyncFailed ( @ NotNull Project project ) { return ! GradleSyncState . getInstance ( project ) . isSyncInProgress ( ) && isBuildWithGradle ( project ) && requiredAndroidModelMissing ( project ) ; }
4572	public FriendsDeleteListQuery deleteList ( UserActor actor , int listId ) { return new FriendsDeleteListQuery ( getClient ( ) , actor , listId ) ; }
4574	public void updateAnchor ( ) { if ( mOwner != _NULL ) { ConstraintWidget widget = mOwner . getConstraintWidget ( ) ; if ( widget instanceof Guideline ) { mAnchor = ( ( Guideline ) widget ) . getAnchor ( ) ; } else { mAnchor = widget . getAnchor ( mType ) ; } } else { mAnchor = _NULL ; } }
4575	public static SM_SYSTEM_MESSAGE STR_CHAT_CHANNEL_JOIN_ZONE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4622	public S2CellId cellId ( int i ) { return cellIds . get ( i ) ; }
4631	private void subCheckTheTicTacTocWin ( int tag , int i , int j ) { if ( _isGameContinueCheck ) if ( getTictactocBoardStatues ( ) [ j ] [ i ] == tag ) { _counter ++ ; if ( _counter >= Settings . nWinTheTicTacTocCountNumber ) { setTheClientScoreAboutTicTacTok ( tag ) ; } } else { _counter = _NUM ; } }
4640	private void writeEscUTF16 ( String s , int start , int length , boolean isAttVal ) throws SAXException { String subString = s . substring ( start , start + length ) ; write ( StringEscapeUtils . escapeHtml4 ( subString ) ) ; }
4665	@ Deprecated public Builder cacheOnDisc ( boolean cacheOnDisk ) { return cacheOnDisk ( cacheOnDisk ) ; }
4668	protected PhotosSaveMarketPhotoQuery photo ( String value ) { return unsafeParam ( _CHAR photo _CHAR , value ) ; }
4690	public synchronized boolean isClosed ( ) { return journalWriter == _NULL ; }
4691	public static boolean isUrl ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; if ( s . indexOf ( _CHAR : // '' ) != - 1 ) return true ; return false ; }
4694	public void repositoryAdded ( ISVNRepositoryLocation repository ) { for ( ISVNListener listener : repositoryListeners ) { listener . repositoryAdded ( repository ) ; } }
4709	@ Deprecated public T [ ] mapState ( final FieldODEState < T > state ) { return state . getCompleteState ( ) ; }
4723	public static String makeLinkAuto ( ServletContext servletContext , HttpServletRequest request , HttpServletResponse response , String uri ) { RequestHandler rh = RequestHandler . getRequestHandler ( servletContext ) ; return rh . makeLinkAuto ( request , response , uri , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL ) ; }
4733	public static String slurpGBURLNoExceptions ( URL u ) { try { return slurpGBURL ( u ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
4765	private CountingThreadPoolExecutor createExecutor ( int numThreads ) { return new CountingThreadPoolExecutor ( numThreads , Integer . MAX_VALUE , _NUM , TimeUnit . SECONDS , new LinkedBlockingQueue < Runnable > ( ) ) ; }
4775	public AuthCheckPhoneQuery checkPhone ( String phone , String clientSecret ) { return new AuthCheckPhoneQuery ( getClient ( ) , phone , clientSecret ) ; }
4796	public ChangeSet increment ( String path , short delta ) { return add ( new IncrementSpaceEntryMutator ( path , delta ) ) ; }
4805	protected void populateVendorOptionFieldMap ( Map < Class < ? > , List < SymbolTypeConfig >> fieldEnableMap ) { vendorOptionMarkerSymbolFactory . getFieldMap ( fieldEnableMap ) ; }
4807	public int size ( ) { return this . get ( ) . length ; }
4809	public boolean isClosed ( ) { return journalWriter == _NULL ; }
4811	private void removeKey ( String key ) { Cacheable cacheable = lruCacheMap . get ( key ) ; if ( _NULL != cacheable ) { currentSize = currentSize - cacheable . getMemorySize ( ) ; } lruCacheMap . remove ( key ) ; LOGGER . info ( _CHAR Removed level entry from InMemory level lru cache : : _CHAR + key ) ; }
4816	public void logStatistics ( ) { for ( QueryStatistic statistic : queryStatistics ) { LOGGER . statistic ( statistic . getStatistics ( queryIWthTask ) ) ; } }
4817	public boolean has ( String key ) { return this . map . containsKey ( key ) ; }
4824	public static SM_SYSTEM_MESSAGE STR_MSG_DONT_USE_ITEM_BY_NOT_MENTEE ( String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 ) ; }
4833	public Boolean doOuputTTML ( ) { return doOuputTTML ; }
4849	private void saveExperiment ( ) { saveExperiment ( _BOOL ) ; }
4864	public byte [ ] compress ( int [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
4876	protected static ObjectReader initRaw ( ) { return init ( CsvSchema . emptySchema ( ) . withoutQuoteChar ( ) ) ; }
4895	@ Override public void close ( ) { ss . close ( ) ; }
4916	private void init ( ) { addTextChangedListener ( mEditTextWatcher ) ; }
4926	public Object clone ( ) { throw new RuntimeException ( ) ; }
4927	public void cancel ( ) { this . handler . cancel ( ) ; }
4930	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
4938	public void childrenElement ( String elementName ) throws XNIException { }
4974	public ChangeSet increment ( String path , Number delta ) { return add ( new IncrementSpaceEntryMutator ( path , delta ) ) ; }
4975	public void addStatistics ( String message , long currentTime ) { this . timeTaken = currentTime - startTime ; this . message = message ; }
5024	public void onUpdateFromPeekToExpand ( float percentage ) { if ( ! isVisible ( ) ) return ; mHeightPx = Math . round ( MathUtils . interpolate ( mDefaultHeightPx , _NUM . f , percentage ) ) ; mTextOpacity = MathUtils . interpolate ( _NUM . f , _NUM . f , percentage ) ; }
5048	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
5063	public int size ( ) { return this . size ; }
5077	private void bindSession ( ) { SessionFactory sessionFactory = ( SessionFactory ) getBean ( _CHAR sessionFactory _CHAR ) ; Session session = sessionFactory . openSession ( ) ; TransactionSynchronizationManager . bindResource ( sessionFactory , new SessionHolder ( session ) ) ; }
5099	private void openFile ( ) { stopPreview ( _BOOL ) ; mContainerActivity . getFileOperationsHelper ( ) . openFile ( getFile ( ) ) ; finish ( ) ; }
5101	public static void updateAircraft ( AirMapAircraft aircraft , @ Nullable AirMapCallback < AirMapAircraft > callback ) { PilotService . updateAircraft ( aircraft , callback ) ; }
5103	public AggregationSet minValue ( String path ) { return add ( new MinValueAggregator ( ) . setPath ( path ) ) ; }
5116	public Builder cacheOnDisk ( boolean cacheOnDisk ) { this . cacheOnDisk = cacheOnDisk ; return this ; }
5123	private void sendBeforeTextChanged ( CharSequence s , int start , int count , int after ) { if ( mListeners != _NULL ) { for ( int i = _NUM ; i < mListeners . size ( ) ; i ++ ) { mListeners . get ( i ) . beforeTextChanged ( s , start , count , after ) ; } } }
5127	static void registerLintRuleNames ( HttpConfigAspect aspect ) { aspect . registerLintRuleName ( REST_STYLE_RULE_NAME , METHOD_SHADOWED_RULE_NAME ) ; }
5142	public static Aggregate < Map < String , Concept > , Optional < Number >> median ( String varName ) { return new MedianAggregate ( varName ) ; }
5169	public void onRequestPermissionResult ( int requestCode , String [ ] permissions , int [ ] grantResults ) throws JSONException { if ( permissionResultCallback != _NULL ) { permissionResultCallback . onRequestPermissionResult ( requestCode , permissions , grantResults ) ; permissionResultCallback = _NULL ; } }
5198	private static boolean isUnreservedCharacter ( char p_char ) { return ( p_char <= _CHAR && ( fgLookupTable [ p_char ] & MASK_UNRESERVED_MASK ) != _NUM ) ; }
5202	private static Object newInstanceNoServiceLoader ( Class < ? > providerClass ) { if ( System . getSecurityManager ( ) == _NULL ) { return _NULL ; } try { Method creationMethod = providerClass . getDeclaredMethod ( _CHAR newTransformerFactoryNoServiceLoader _CHAR ) ; return creationMethod . invoke ( _NULL , ( Object [ ] ) _NULL ) ; } catch ( NoSuchMethodException exc ) { return _NULL ; } catch ( Exception exc ) { return _NULL ; } }
5260	@ Override public void close ( ) { getConceptLog ( ) . clearTransaction ( ) ; try { graph . close ( ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
5269	public static String millisecondsToHours ( long millis ) { return String . format ( Locale . getDefault ( ) , _CHAR % _NUM : % _NUM _CHAR , TimeUnit . MILLISECONDS . toHours ( millis ) , TimeUnit . MILLISECONDS . toMinutes ( millis ) % TimeUnit . HOURS . toMinutes ( _NUM ) ) ; }
5296	public boolean isBoolean ( ) { return value instanceof Boolean ; }
5301	public int hashCode ( ) { return value . hashCode ( ) ; }
5302	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
5303	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
5318	private boolean references ( QueryTableData dest ) { QueryTableData source = this ; while ( source != _NULL ) { if ( source . equals ( dest ) ) return _BOOL ; source = source . getJoinTable ( ) ; } return _BOOL ; }
5370	public T proxy ( ) { eventDrivenFactoryBean . afterPropertiesSet ( ) ; return ( T ) eventDrivenFactoryBean . getObject ( ) ; }
5432	public void addParent ( Permission perm , boolean value ) { perm . getChildren ( ) . put ( getName ( ) , value ) ; perm . recalculatePermissibles ( ) ; }
5440	public static final Vertex locateVertexInGraph ( UniqueVertexGraph gGraph , Vertex vToFind ) { return gGraph . locateVertex ( vToFind ) ; }
5497	@ Override public int [ ] makeDensityTestPoints ( ) { return new int [ ] { - _NUM , - _NUM , - _NUM , - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
5516	public void addDeviceProperties ( List < DeviceProperty > deviceProperties ) { this . deviceProperties . addAll ( deviceProperties ) ; }
5521	public boolean showCookiesSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_COOKIES ; }
5534	public AemSidekick expandSectionIfCollapsed ( SidekickSection sidekickSections ) { final WebElement section = getSectionByName ( sidekickSections . getSectionName ( ) ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( SidekickActions . expandSection ( section ) , Timeouts . SMALL ) ; return this ; }
5549	public static void addListener ( InputListener listener ) { listeners . add ( listener ) ; }
5552	public boolean isExtensible ( ) { return proto . getExtensionRangeCount ( ) != _NUM ; }
5568	public static boolean isContactPointEnabled ( ) { return contactPointEnabled ; }
5582	public static XorSpacePredicate xor ( ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return new XorSpacePredicate ( leftPredicate , rightPredicate ) ; }
5584	public void put ( String key , String value ) { if ( key != _NULL && value != _NULL ) { urlParams . put ( key , value ) ; } }
5653	@ Override public final void write ( final byte [ ] b ) { for ( int x = _NUM ; x < b . length ; x ++ ) { bos . writeByte ( b [ x ] ) ; } }
5664	public boolean hasOrganisationUnits ( ) { return organisationUnits != _NULL && ! organisationUnits . isEmpty ( ) ; }
5708	public double [ ] unCompress ( byte [ ] compInput ) { try { return Snappy . uncompressDoubleArray ( compInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return _NULL ; }
5732	public GameTime plus ( GameTime gt ) { return new GameTime ( this . getTime ( ) + gt . getTime ( ) ) ; }
5736	public String toString ( ) { return Graph . toString ( ) ; }
5740	private final boolean isPostBreak ( Item syllable ) { return ( ( syllable . getPrevious ( ) == _NULL ) || _CHAR pau _CHAR . equals ( postBreakPath . findFeature ( syllable ) ) ) ; }
5764	public static String slurpFileNoExceptions ( String filename ) { try { return slurpFile ( filename ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
5769	public GameTime minus ( GameTime gt ) { return new GameTime ( this . getTime ( ) - gt . getTime ( ) ) ; }
5780	public static IOFileFilter and ( IOFileFilter ... filters ) { return new AndFileFilter ( toList ( filters ) ) ; }
5790	private static void check ( double [ ] x , double [ ] y ) { if ( x . length == y . length ) { for ( int i = _NUM ; i < x . length ; i ++ ) { check ( x [ i ] , y [ i ] ) ; } } else { throw new RuntimeException ( _CHAR Attempt to compare vectors of different lengths _CHAR ) ; } }
5791	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
5801	@ ManagedOperation ( description = _CHAR Stop this JMS container _CHAR ) public void stopContainer ( String processName ) { LOGGER . info ( _CHAR Stopping JMS container for Process '' + processName ) ; jmsContainers . get ( processCache . getProcessId ( processName ) ) . stop ( ) ; }
5817	public Vector3D toSpace ( Vector < Euclidean2D > vector ) { return toSpace ( ( Point < Euclidean2D > ) vector ) ; }
5822	private String expect ( Object spec ) { if ( ! has ( spec ) ) { syntaxError ( String . format ( _CHAR expected _CHAR looking at : _CHAR , spec ) ) ; return _NULL ; } return next ( ) ; }
5830	@ Override public void onRequestInitiated ( int code ) { if ( code == ConnectAPI . SPEAKERS_CODE ) { progressDialog . show ( ) ; } }
5840	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
5848	@ VisibleForTesting public void subscribeForTesting ( ) { mObservable . subscribe ( mObserver ) ; }
5869	public static int dipToPX ( final Context ctx , float dip ) { return ( int ) TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dip , ctx . getResources ( ) . getDisplayMetrics ( ) ) ; }
5888	public void assertMatches ( Matcher < TrafficLog > matcher ) { assertThat ( trafficLogProvider . get ( ) , matcher ) ; }
5891	public static void regenerateClientID ( long seed ) { clientID = new Random ( seed ) . nextLong ( ) ; }
5897	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
5917	public NewExpr newNewExpr ( RefType type ) { return new JNewExpr ( type ) ; }
5926	public Input remove ( int code ) { synchronized ( this . keys ) { return this . keys . remove ( code ) ; } }
5938	public boolean hasComplete ( ) { return observers . get ( ) == TERMINATED && error == _NULL ; }
5961	@ Override public void onAddIndex ( AddIndexData addIndexData ) { SpaceSynchronizationEndpoint endpointInterceptor = getEndpoint ( addIndexData . getTypeName ( ) ) ; if ( endpointInterceptor != _NULL ) endpointInterceptor . onAddIndex ( addIndexData ) ; }
5966	public void verifyIsHidden ( ) { conditions . verify ( invisibilityOfElementLocated ( LOADER_LOCATOR ) , Timeouts . MEDIUM ) ; }
5973	public void clear ( ) { isClear = _BOOL ; }
5978	public Cal now ( ) { dateTimeUnit = getCalendar ( ) . today ( ) ; return this ; }
5993	public void dispose ( ) { FileUtil . delete ( myRootDir ) ; }
5996	public static SM_SYSTEM_MESSAGE STR_EXCHANGE_ASKED_EXCHANGE_TO_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6015	private final boolean isPreBreak ( Item syllable ) { return ( ( syllable . getNext ( ) == _NULL ) || _CHAR pau _CHAR . equals ( preBreakPath . findFeature ( syllable ) ) ) ; }
6019	public void addCategoryLimitations ( boolean include , String ... categoryVelocityVarNames ) { query . append ( _CHAR _CHAR + ( include ? _CHAR + _CHAR : _CHAR - _CHAR ) + _CHAR ( _CHAR ) ; for ( String categoryVelocityVarName : categoryVelocityVarNames ) { query . append ( _CHAR categories : _CHAR + escapeValue ( categoryVelocityVarName ) + _CHAR _CHAR ) ; } query . append ( _CHAR ) _CHAR ) ; }
6073	private boolean isMultipart ( Object content ) { return content instanceof Multipart ; }
6093	private void mapSharedElement ( List < String > names , Map < String , View > sharedElements , View view ) { String transitionName = view . getTransitionName ( ) ; names . add ( transitionName ) ; sharedElements . put ( transitionName , view ) ; }
6099	public static double permutation ( double n , double r ) { double nFac = MathUtils . factorial ( n ) ; double nMinusRFac = MathUtils . factorial ( ( n - r ) ) ; return nFac / nMinusRFac ; }
6123	public static SM_SYSTEM_MESSAGE STR_FORCE_CHANGE_LEADER_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6128	public AuthCheckPhoneQuery checkPhone ( UserActor actor , String phone , String clientSecret ) { return new AuthCheckPhoneQuery ( getClient ( ) , actor , phone , clientSecret ) ; }
6145	public void addMapObject ( InternalMapObject mapObject ) { mapObjects . add ( mapObject ) ; }
6168	private String bufferSlice ( int start , int end ) { return new String ( this . buffer , start , end - start ) ; }
6225	@ Override public void onRequestPermissionsResult ( int requestCode , String permissions [ ] , int [ ] grantResults ) { try { cordovaInterface . onRequestPermissionResult ( requestCode , permissions , grantResults ) ; } catch ( JSONException e ) { LOG . d ( TAG , _CHAR JSONException : Parameters fed into the method are not valid _CHAR ) ; e . printStackTrace ( ) ; } }
6257	protected void createNetwork ( ) throws Throwable { sendContainerNetworkRequest ( NetworkOperationType . CREATE ) ; verifyNetworkStateExists ( networkStateReference ) ; sendGetNetworkStateRequest ( ) ; }
6263	public void dropAllCache ( ) { cacheTypeToLRUCacheMap . clear ( ) ; cacheTypeToCacheMap . clear ( ) ; }
6268	public void mouseReleased ( ) { mShowDecorations = _BOOL ; mSnapCandidates . clear ( ) ; mSimilarMargins . clear ( ) ; }
6299	public void update ( POGOProtos . Settings . FortSettingsOuterClass . FortSettings fortSettings ) { interactionRangeInMeters = fortSettings . getInteractionRangeMeters ( ) ; maxTotalDeployedPokemon = fortSettings . getMaxTotalDeployedPokemon ( ) ; maxPlayerDeployedPokemon = fortSettings . getMaxPlayerDeployedPokemon ( ) ; deployStaminaMultiplier = fortSettings . getDeployStaminaMultiplier ( ) ; deployAttackMultiplier = fortSettings . getDeployAttackMultiplier ( ) ; farInteractionRangeMeters = fortSettings . getFarInteractionRangeMeters ( ) ; }
6305	@ Override public boolean equals ( Object obj ) { if ( obj instanceof SpaceProxyImpl ) return super . equals ( obj ) ; return _BOOL ; }
6322	public boolean hasRegion ( ) { return qualifier . getRegion ( ) != _NULL && ! FAKE_VALUE . equals ( qualifier . getRegion ( ) ) ; }
6364	public PhotosSaveQuery albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
6366	public ProxySelector removeSelector ( String protocol ) { return this . selectors . remove ( protocol ) ; }
6397	@ PostConstruct public void init ( ) { LOGGER . debug ( _CHAR Registering short - term - log module for supervision updates '' ) ; listenerContainer = supervisionNotifier . registerAsListener ( this ) ; }
6409	public static SM_SYSTEM_MESSAGE STR_GUILD_INVITE_HE_IS_OTHER_GUILD_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6439	public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_FRIEND ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6520	private void inflateConnectedBackground ( ) { if ( mConnectedBackground != R . color . connected_color ) { connectivityView . setBackgroundColor ( ColorUtil . getColorWrapper ( mContext , mConnectedBackground ) ) ; } }
6545	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
6550	public static void drawCenteredString ( Graphics2D g , Rectangle rect , String str ) { UIUtil . drawCenteredString ( g , rect , str ) ; }
6555	public static boolean canRender ( @ Nullable PsiFile file ) { return file != _NULL && LayoutPullParserFactory . isSupported ( file ) ; }
6558	public int size ( ) { return elementVector . size ( ) ; }
6593	public void addSecurityRequirementExtensionForEntireService ( Swagger swagger ) { AuthenticationRule . Builder builder = AuthenticationRule . newBuilder ( ) ; if ( convertSecurityRequirementExtension ( swagger . getVendorExtensions ( ) , builder , new SimpleLocation ( _CHAR Swagger Spec _CHAR ) ) ) { builder . setSelector ( _CHAR * _CHAR ) ; authRules . add ( builder . build ( ) ) ; } }
6596	public boolean isEnabled ( ) { return _BOOL ; }
6617	public String toUuidString ( ) { String result = String . join ( _CHAR - _CHAR , contentAsHex ( _NUM , _NUM ) , contentAsHex ( _NUM , _NUM ) , contentAsHex ( _NUM , _NUM ) , contentAsHex ( _NUM , _NUM ) , contentAsHex ( _NUM , _NUM ) ) ; return result . toLowerCase ( ) ; }
6634	protected void initSentenceRepresentationFilter ( ) { if ( SentenceRepresentationFilter == _NULL ) SentenceRepresentationFilter = new IdentityObjectFilter < DocumentNGramGraph > ( ) ; }
6660	public void closeDriver ( ) { if ( camera != _NULL ) { FlashlightManager . disableFlashlight ( ) ; camera . release ( ) ; camera = _NULL ; } }
6687	private static boolean areDoubleValuesSame ( Expression expression1 , Expression expression2 ) { double value1 = getValue ( expression1 ) ; double value2 = getValue ( expression2 ) ; return ( Math . abs ( value1 - value2 ) < _NUM . _NUM ) ; }
6711	@ NonNull public static Observable < LoginResult > loginWithButton ( @ NonNull final LoginButton loginButton , @ NonNull final android . app . Fragment fragment ) { checkNotNull ( fragment , _CHAR fragment == _NULL _CHAR ) ; checkNotNull ( loginButton , _CHAR loginButton == _NULL _CHAR ) ; ReactiveFB . checkInit ( ) ; return Observable . create ( new LoginWithButtonOnSubscribe ( loginButton ) ) ; }
6722	public static void addSubscriber ( Workflow workflow , Observer workflowSubscriber ) { SUBSCRIBERS . put ( workflow , workflowSubscriber ) ; }
6775	private void createElement ( Document doc , Element parentElement , String elementName , int value ) { Element element = doc . createElement ( elementName ) ; element . appendChild ( doc . createTextNode ( Integer . toString ( value ) ) ) ; parentElement . appendChild ( element ) ; }
6777	public void createModule ( boolean performGradleSync ) { WizardPath path = myWizardState . getActiveWizardPath ( ) ; path . createModule ( ) ; if ( performGradleSync && myProject != _NULL ) { GradleProjectImporter . getInstance ( ) . requestProjectSync ( myProject , _NULL ) ; } }
6821	private Iterator < Map . Entry < UUID , Change >> decodeChangesFromCql ( final Iterator < Row > iter ) { return Iterators . transform ( iter , _NULL ) ; }
6830	protected void stopWatchTextUnit ( ) { if ( ! textUnitStopWatch . isRunning ( ) ) { textUnitStopWatch . start ( _CHAR start creating text unit _CHAR ) ; } if ( ++ numOfTextUnitProcess % _NUM == _NUM ) { logger . info ( _CHAR num of text unit added : { } _CHAR , numOfTextUnitProcess ) ; textUnitStopWatch . stop ( ) ; textUnitStopWatch . start ( _CHAR batch _CHAR + numOfTextUnitProcess ) ; } }
6868	private void finishNode ( Node node ) { if ( node . getNodeType ( ) == Node . ELEMENT_NODE ) { fCurrentElement = node ; fillQName ( fElementQName , node ) ; fSchemaValidator . endElement ( fElementQName , _NULL ) ; fNamespaceContext . popContext ( ) ; } }
6873	public static void resetPrintStream ( ) { setPrintStream ( stdOut , stdErr ) ; }
6899	private boolean belongToTheSamePackage ( TypeElement class1 , TypeElement class2 ) { Name package1 = elementUtils . getPackageOf ( class1 ) . getQualifiedName ( ) ; Name package2 = elementUtils . getPackageOf ( class2 ) . getQualifiedName ( ) ; return package1 . equals ( package2 ) ; }
6917	public void connect ( final MqttCallback callback , final Runnable connectionRunnable ) throws SpyException { createClient ( callback ) ; final ReconnectionSettings reconnectionSettings = getMqttConnectionDetails ( ) . getReconnectionSettings ( ) ; if ( reconnectionSettings == _NULL ) { new Thread ( connectionRunnable ) . start ( ) ; } else { reconnectionManager . addConnection ( this , connectionRunnable ) ; } }
6946	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
6964	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_INSTANCE_ALREADY_REGISTERED ( String worldname0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 ) ; }
6971	private BEntry readEntry ( int slot ) { if ( isLeaf ( ) ) { return new LeafEntry ( this . keySchema , getPage ( ) . readBytes ( getOffset ( slot ) , entrySize ) ) ; } else { return new InnerEntry ( this . keySchema , getPage ( ) . readBytes ( getOffset ( slot ) , entrySize ) ) ; } }
6977	public Point2D convertWindowToReference ( Point2D apt ) { if ( scrollBackReferenceRect == _NULL ) return _NULL ; else return new Point2D . Double ( ( apt . getX ( ) - scrollBackReferenceRect . getX ( ) ) / scrollBackReferenceRect . getWidth ( ) , ( apt . getY ( ) - scrollBackReferenceRect . getY ( ) ) / scrollBackReferenceRect . getHeight ( ) ) ; }
6979	public int size ( ) { return values . size ( ) ; }
7003	public void loadingStarted ( ) { mLoadTracker . loadingStarted ( ) ; }
7162	public void clearDocumentGraph ( ) { Graph = new DistributionGraph ( ) ; }
7175	private void gatherDrawables ( ) { drawables = new Array < > ( AtlasData . getInstance ( ) . getDrawables ( ) ) ; Iterator < DrawableData > iter = drawables . iterator ( ) ; while ( iter . hasNext ( ) ) { DrawableData drawable = iter . next ( ) ; if ( ! drawable . visible ) iter . remove ( ) ; } }
7179	public Boolean doOuputTTML ( ) { return doOuputTtml ; }
7189	public VideoEditQuery privacyComment ( List < String > value ) { return unsafeParam ( _CHAR privacy_comment _CHAR , value ) ; }
7190	public PollsCreateQuery isAnonymous ( Boolean value ) { return unsafeParam ( _CHAR is_anonymous _CHAR , value ) ; }
7232	private boolean isMinimal ( SimulationEvent event ) { return minIndex == NULL || eventComparator . compare ( event , eventList . get ( minIndex ) ) < _NUM ; }
7245	private static boolean isJsonString ( final Object json ) { boolean valid = _BOOL ; try { if ( json instanceof String ) { final JsonParser parser = mapper . getFactory ( ) . createParser ( ( String ) json ) ; while ( parser . nextToken ( ) != _NULL ) { } valid = _BOOL ; } } catch ( IOException ignored ) { } return valid ; }
7246	public void clear ( ) { map . clear ( ) ; }
7248	public void nextTable ( ) throws SQLException { if ( tables . hasNext ( ) ) { currentTable = tables . next ( ) ; openRows ( ) ; } }
7267	private void releasePrecachingWakeLock ( ) { if ( mPrecachingWakeLock != _NULL && mPrecachingWakeLock . isHeld ( ) ) { mPrecachingWakeLock . release ( ) ; } }
7281	public static void printUsage ( ) { System . out . println ( _CHAR Usage : _CHAR + grammarAndContentAnalysis . class . getName ( ) + _CHAR [ - corpusDir = dir _CHAR + System . getProperty ( _CHAR file . separator _CHAR ) + _CHAR ] The base directory _CHAR + _CHAR of the corpus including the directory separator character .\ n _CHAR + _CHAR [ - categoriesForGrammar = # ] \ t The number of categories to use for grammar extraction . Default is 2 .\ n '' + '' - trainPercent = # . # # \ t The training percent to use for the grammar . Default is 0 . 66 .\ n '' + '' - minNGram = # \ t The min n - gram rank . Default is 3 .\ n '' + '' - maxNGram = # \ t The max n - gram rank . Default is 8 .\ n '' + '' - partOfCorpus = # . # # \ t The percent of corpus to use for all '' + '' experiments .\ n '' + '' - windowSize = # \ t The neighbourhood window . Default is max ( _NUM * minNGram , maxNGram + _NUM ) .\ n _CHAR + _CHAR - cache \ t If selected will cache category graphs in memory . NOTE : Very memory consuming . '' ) ; }
7295	String internalsprintf ( Object s ) { String s2 = _CHAR _CHAR ; if ( conversionCharacter == _CHAR || conversionCharacter == _CHAR ) s2 = printSFormat ( s . toString ( ) ) ; else throw new IllegalArgumentException ( _CHAR Can not format a String with a format using _CHAR + _CHAR a _CHAR + conversionCharacter + _CHAR conversion character . '' ) ; return s2 ; }
7303	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
7312	public int hashCode ( ) { return value . hashCode ( ) ; }
7318	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; } }
7344	@ Override public void addLifecycleListener ( LifecycleListener listener ) { lifecycle . addLifecycleListener ( listener ) ; }
7346	public static OrSpacePredicate or ( ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return new OrSpacePredicate ( leftPredicate , rightPredicate ) ; }
7355	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException ex ) { throw new InternalError ( ) ; } }
7377	@ Override public boolean isRunning ( ) { return running ; }
7378	public SpaceTypeDescriptorBuilder addFixedProperty ( String propertyName , Class < ? > propertyType , SpaceDocumentSupport documentSupport ) { return addFixedProperty ( propertyName , propertyType , documentSupport , StorageType . DEFAULT ) ; }
7383	@ Override public boolean equals ( Object that ) { if ( ! ( that instanceof S2CellUnion ) ) { return _BOOL ; } S2CellUnion union = ( S2CellUnion ) that ; return this . cellIds . equals ( union . cellIds ) ; }
7399	public void registerHandler ( String handlerName , BridgeHandler handler ) { if ( handler != _NULL ) { messageHandlers . put ( handlerName , handler ) ; } }
7441	public void addln ( ) { this . graph . append ( _CHAR ) ; }
7483	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
7516	public final TestSubscriber < T > assertComplete ( ) { assertNoError ( ) ; int c = completionCount ; if ( c == _NUM ) { throw new AssertionError ( _CHAR Not completed _CHAR , _NULL ) ; } if ( c > _NUM ) { throw new AssertionError ( _CHAR Multiple completions : _CHAR + c , _NULL ) ; } return this ; }
7530	public int hashCode ( ) { return Constraint . hash ( reqs ) + Constraint . hash ( prefs ) ; }
7550	public static int [ ] copy ( int [ ] arr ) { int [ ] res = new int [ arr . length ] ; for ( int i = _NUM ; i < arr . length ; i ++ ) { res [ i ] = arr [ i ] ; } return res ; }
7553	public PhotosSaveQuery server ( Integer value ) { return unsafeParam ( _CHAR server _CHAR , value ) ; }
7564	protected void handleBarClick ( long time , float x , float y ) { if ( isPeeking ( ) ) { if ( supportsExpandedState ( ) ) { expandPanel ( StateChangeReason . SEARCH_BAR_TAP ) ; } else { maximizePanel ( StateChangeReason . SEARCH_BAR_TAP ) ; } } }
7607	public PhotosSaveMarketPhotoQuery cropData ( String value ) { return unsafeParam ( _CHAR crop_data _CHAR , value ) ; }
7608	public JSONException syntaxError ( String message ) { return new JSONException ( message + this . toString ( ) ) ; }
7616	private String validated ( String permissionString ) throws InvalidPermissionStringException { _permissionResolver . resolvePermission ( permissionString ) ; return permissionString ; }
7624	public boolean isSplash ( ) { return splash ; }
7652	public ResultSet executeQuery ( String sql ) throws GenericDataSourceException , GenericEntityException { prepareStatement ( sql ) ; return executeQuery ( ) ; }
7665	public void addColumnModel ( ColumnModel columnModel ) { columnModels . add ( columnModel ) ; }
7673	@ Override public Fraction divide ( Fraction fraction ) { MathUtils . checkNotNull ( fraction , LocalizedCoreFormats . FRACTION ) ; if ( fraction . numerator == _NUM ) { throw new MathRuntimeException ( LocalizedCoreFormats . ZERO_FRACTION_TO_DIVIDE_BY , fraction . numerator , fraction . denominator ) ; } return multiply ( fraction . reciprocal ( ) ) ; }
7677	public void bindWith ( final Line line ) { lines . add ( line ) ; }
7690	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
7711	public static boolean isSeqTransactionGT ( long xtn1 , long xtn2 ) { if ( xtn1 != UNKNOWN_FIFO_XTN && xtn2 != UNKNOWN_FIFO_XTN && ( xtn1 > xtn2 || ( xtn1 < xtn2 && xtn2 - xtn1 > _NUM ) ) ) return _BOOL ; else return _BOOL ; }
7714	public Builder streams ( List < String > streams ) { this . _streams = streams ; return this ; }
7716	public boolean unequal ( final Dfp x ) { if ( isNaN ( ) || x . isNaN ( ) || field . getRadixDigits ( ) != x . field . getRadixDigits ( ) ) { return _BOOL ; } return greaterThan ( x ) || lessThan ( x ) ; }
7729	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
7734	public static SM_SYSTEM_MESSAGE STR_PARTY_HE_IS_NEW_LEADER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
7778	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
7779	public int size ( ) { return bits . length << _NUM ; }
7793	public int hashCode ( ) { return ( ClientMinPrincipalType . class . hashCode ( ) + Constraint . hash ( classes ) ) ; }
7815	public boolean isStoredProcedure ( ) { if ( _expression == _NULL ) return _BOOL ; String trimmed = _expression . trim ( ) ; return CALL . matcher ( trimmed ) . matches ( ) ; }
7833	public synchronized Vertex locateVertex ( Vertex v ) { return ( Vertex ) UniqueVertices . get ( v . getLabel ( ) ) ; }
7860	@ Override public int [ ] makeCumulativeTestPoints ( ) { return makeDensityTestPoints ( ) ; }
7889	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
7891	public boolean contains ( int memberObjId ) { return legionMemberById . containsKey ( memberObjId ) ; }
7898	public Table instantiate ( int nrows ) { Table t = new Table ( nrows , m_size ) ; for ( int i = _NUM ; i < m_size ; ++ i ) { t . addColumn ( m_names [ i ] , m_types [ i ] , m_dflts [ i ] ) ; } return t ; }
7907	private static void popTransactionStartStamp ( ) { ListOrderedMap map = ( ListOrderedMap ) suspendedTxStartStamps . get ( ) ; if ( map . size ( ) > _NUM ) { transactionStartStamp . set ( ( Timestamp ) map . remove ( map . lastKey ( ) ) ) ; } else { Debug . logError ( _CHAR Error in transaction handling - no saved start stamp found - using NOW . '' , module ) ; transactionStartStamp . set ( UtilDateTime . nowTimestamp ( ) ) ; } }
7911	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HE_BECOME_PARTY_LEADER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
7916	@ Override public boolean contains ( Object key ) { return indexOf ( key ) >= _NUM ; }
7918	@ Deprecated public Builder cacheOnDisc ( boolean cacheOnDisk ) { return cacheOnDisk ( cacheOnDisk ) ; }
7946	public static SM_SYSTEM_MESSAGE STR_QUEST_QIMSG_ACQUIRE ( ) { return new SM_SYSTEM_MESSAGE ( _NUM ) ; }
7957	public boolean isSingleResult ( ) { return _results . getFieldNames ( ) . length == _NUM && _results . getFieldValues ( ) . length == _NUM ; }
7963	public static Aggregate < Map < String , Concept > , Number > sum ( String varName ) { return new SumAggregate ( varName ) ; }
7972	private boolean validValue ( Object value ) { return value != _NULL && ! value . toString ( ) . isEmpty ( ) ; }
7996	private synchronized void _setRunning ( boolean b ) { m_run = b ; }
7997	public static ClassHierarchy classHierarchy ( Scene scene ) { if ( scene == _NULL ) { throw new InternalTypingException ( ) ; } ClassHierarchy classHierarchy = G . v ( ) . ClassHierarchy_classHierarchyMap . get ( scene ) ; if ( classHierarchy == _NULL ) { classHierarchy = new ClassHierarchy ( scene ) ; } return classHierarchy ; }
7998	public int size ( ) { return _pos ; }
8015	private void init ( ) { addTextChangedListener ( mEditTextWatcher ) ; }
8025	public ThisRef newThisRef ( RefType t ) { return new ThisRef ( t ) ; }
8039	public static CreateFolderDialogFragment newInstance ( OCFile parentFolder ) { CreateFolderDialogFragment frag = new CreateFolderDialogFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_PARENT_FOLDER , parentFolder ) ; frag . setArguments ( args ) ; return frag ; }
8052	public double doubleValue ( ) { return d . doubleValue ( ) ; }
8089	public boolean isComponentPresent ( String componentName ) { String dataPath = components . getDataPath ( componentName ) ; String componentDataPath = DataPathUtil . normalize ( dataPath . toLowerCase ( ) ) ; return componentList . stream ( ) . anyMatch ( containsDataPath ( componentDataPath ) ) ; }
8110	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
8121	public static final void onPlayerLogout ( Player player ) { PlayerGroup group = player . getPlayerGroup2 ( ) ; if ( group != _NULL ) { PlayerGroupMember member = group . getMember ( player . getObjectId ( ) ) ; member . updateLastOnlineTime ( ) ; group . onEvent ( new PlayerDisconnectedEvent ( group , player ) ) ; } }
8135	public static MBeanServerConnection createMBeanServerConnection ( String jndiURL ) throws Exception { JMXServiceURL url = new JMXServiceURL ( JMXUtilities . createJMXUrl ( jndiURL ) ) ; JMXConnector jmxc = JMXConnectorFactory . connect ( url , _NULL ) ; return jmxc . getMBeanServerConnection ( ) ; }
8145	public static SM_SYSTEM_MESSAGE STR_QUEST_QIMSG_GIVEUP ( ) { return new SM_SYSTEM_MESSAGE ( _NUM ) ; }
8167	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
8172	@ Override public boolean isRunning ( ) { return _BOOL ; }
8176	boolean canDragView ( V view ) { return _BOOL ; }
8190	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; } }
8192	@ Override public void start ( ) { running = _BOOL ; }
8222	public Vector1D toSubSpace ( Vector < Euclidean3D > vector ) { return toSubSpace ( ( Point < Euclidean3D > ) vector ) ; }
8230	public static void debug ( Object message ) { Gdx . app . debug ( TAG , String . valueOf ( message ) ) ; }
8237	private void debugPrint ( String msg ) { if ( debug ) { System . out . println ( toString ( ) + _CHAR : _CHAR + msg ) ; } }
8258	public void ignoreRelationship ( RelatedFinder relatedFinder ) { this . ignored . add ( relatedFinder ) ; }
8261	public static String formatPercentage ( Double percentage ) { if ( percentage == _NULL ) return _CHAR _CHAR ; return formatPercentage ( percentage . doubleValue ( ) ) ; }
8266	public static boolean saveConfig ( FunktionConfig config , File file ) throws IOException { createObjectMapper ( ) . writeValue ( file , config ) ; return _BOOL ; }
8286	public void addListener ( AirMapTrafficListener listener ) { if ( listeners . isEmpty ( ) ) { listeners . add ( listener ) ; connect ( ) ; } else { listeners . add ( listener ) ; } }
8316	public void orderBy ( IQueryResultSet < IEntryPacket > entries , List < OrderColumn > orderColumns ) throws SQLException { Collections . sort ( ( List < IEntryPacket > ) entries , getOrderByComparator ( entries , orderColumns ) ) ; }
8333	public PlacesAddQuery add ( UserActor actor , String title , float latitude , float longitude ) { return new PlacesAddQuery ( getClient ( ) , actor , title , latitude , longitude ) ; }
8337	public Value mapEntry ( Value key , Value val ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
8341	public synchronized void recordStatistics ( QueryStatistic statistic ) { queryStatistics . add ( statistic ) ; }
8368	public boolean isValid ( ) { if ( startDate == _NULL || endDate == _NULL || periodType == _NULL ) { return _BOOL ; } if ( ! DailyPeriodType . NAME . equals ( periodType . getName ( ) ) && getDaysInPeriod ( ) < _NUM ) { return _BOOL ; } return _BOOL ; }
8391	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , ChecksumException , FormatException { return decode ( image , _NULL ) ; }
8392	@ Override @ SuppressWarnings ( _CHAR ThrowsUncheckedException _CHAR ) public final void writeExternal ( Element element ) throws WriteExternalException { for ( RunConfigurationState state : states ) { state . writeExternal ( element ) ; } }
8395	public JSONException syntaxError ( String message ) { return new JSONException ( message + toString ( ) ) ; }
8424	public Builder minZoom ( Number minZoom ) { this . minZoom = minZoom ; return this ; }
8425	public static boolean shouldShowRequestPermissionRationale ( Activity activity , String ... permissions ) { for ( String permission : permissions ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( activity , permission ) ) { return _BOOL ; } } return _BOOL ; }
8450	public int hashCode ( ) { return ( int ) ( DelegationRelativeTime . class . hashCode ( ) + minStart + maxStart + minStop + maxStop ) ; }
8458	public static SM_SYSTEM_MESSAGE STR_USER_KICKED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8463	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
8467	public WebDriver modifyWebDriver ( WebDriver webDriver ) { return driverModifiers . stream ( ) . collect ( modifyDrivers ( webDriver ) ) ; }
8486	public boolean hasSimilarityMatrix ( int featureIndex ) { if ( featureIndex >= this . getNumberOfByteFeatures ( ) ) { return _BOOL ; } return this . similarityMatrices != _NULL && this . similarityMatrices [ featureIndex ] != _NULL ; }
8504	public static SM_SYSTEM_MESSAGE STR_CHANGE_ITEM_SKIN_NOT_SKIN_EXTRACTABLE_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8541	public static TextBlock parseTextBlock ( ParseContext parseContext ) { return TextBlockSectionParser . parseTextBlock ( parseContext ) ; }
8543	public static final boolean isValidQueryValue ( String value ) { return value != _NULL && value . matches ( QUERY_VALUE_REGEX ) ; }
8558	public static String formatPrice ( BigDecimal price ) { if ( price == _NULL ) return _CHAR _CHAR ; return priceDecimalFormat . format ( price ) ; }
8565	@ Override public void onBindViewHolder ( ) { if ( unbinder == _NULL ) unbinder = ButterKnife . bind ( this , itemView ) ; }
8586	private ProxySelector installPacProxyIfAvailable ( Dict proxySettings , ProxySelector result ) { if ( isActive ( proxySettings . get ( _CHAR ProxyAutoConfigEnable _CHAR ) ) ) { String url = ( String ) proxySettings . get ( _CHAR ProxyAutoConfigURLString _CHAR ) ; result = ProxyUtil . buildPacSelectorForUrl ( url ) ; } return result ; }
8599	private DataApprovalPermissionsEvaluator makePermissionsEvaluator ( ) { return DataApprovalPermissionsEvaluator . makePermissionsEvaluator ( currentUserService , organisationUnitService , systemSettingManager , dataApprovalLevelService ) ; }
8606	public boolean isUpperLimitEnabled ( ) { return this . upperLimitEnabled ; }
8638	public void put ( long key , int value ) { maps [ ( int ) ( key & MASK ) ] . put ( ( int ) ( key >> > BITS ) , value ) ; }
8640	public void onUpdateFromExpandToMaximize ( float percentage ) { if ( ! isVisible ( ) ) return ; mHeightPx = _NUM . f ; mTextOpacity = _NUM . f ; }
8641	@ Override public long limit ( ) { return fileLength >> > _NUM ; }
8677	public boolean hasAggregationLevels ( ) { return aggregationLevels . size ( ) > _NUM ; }
8689	public CatchOptions useSmartSelect ( boolean smartSelect ) { this . smartSelect = smartSelect ; return this ; }
8734	public static void main ( String [ ] argv ) { print ( _CHAR SAX features : _CHAR , SAX_FEATURE_PREFIX , fgSAXFeatures ) ; print ( _CHAR SAX properties : _CHAR , SAX_PROPERTY_PREFIX , fgSAXProperties ) ; print ( _CHAR Xerces features : _CHAR , XERCES_FEATURE_PREFIX , fgXercesFeatures ) ; print ( _CHAR Xerces properties : _CHAR , XERCES_PROPERTY_PREFIX , fgXercesProperties ) ; }
8738	public void removeFile ( File file ) { removeEntry ( file . getPath ( ) ) ; }
8747	public static AllSpacePredicate all ( ISpacePredicate ... predicates ) { return new AllSpacePredicate ( predicates ) ; }
8749	public int hashCode ( ) { return main . hashCode ( ) + boot . hashCode ( ) ; }
8775	public static boolean isSame ( AnchorPoint defaultAnchorPoint , AnchorPoint anchorPoint ) { if ( ( defaultAnchorPoint != _NULL ) && ( anchorPoint != _NULL ) ) { return areDoubleValuesSame ( defaultAnchorPoint . getAnchorPointX ( ) , anchorPoint . getAnchorPointX ( ) ) && areDoubleValuesSame ( defaultAnchorPoint . getAnchorPointY ( ) , anchorPoint . getAnchorPointY ( ) ) ; } return _BOOL ; }
8804	public static int findNextIndexNonZero ( double [ ] contour , int current ) { for ( int i = current + _NUM ; i < contour . length ; i ++ ) { if ( contour [ i ] != _NUM ) { return i ; } } return - _NUM ; }
8849	public boolean isNested ( ) { return ( depth ( ) > _NUM ) ; }
8894	private boolean containsExpression ( String toSearch , String expression ) { if ( toSearch == _NULL ) { return _BOOL ; } return toSearch . equals ( expression ) || toSearch . indexOf ( expression ) >= _NUM ; }
8911	protected void initSentenceRepresentationFilter ( ) { if ( SentenceRepresentationFilter == _NULL ) SentenceRepresentationFilter = new IdentityObjectFilter < DocumentNGramGraph > ( ) ; }
8918	protected void onOptionSelected ( final EnumSet < DialogOption > selectedOptions ) { showProgressDialog ( ) ; clearBrowsingData ( selectedOptions ) ; }
8947	@ Override public final synchronized void write ( byte ba [ ] , int off , int len ) throws IOException { dis . write ( ba , off , len ) ; }
8966	public static boolean checkContentCanBePulledDown ( PtrFrameLayout frame , View content , View header ) { return ! canChildScrollUp ( content ) ; }
8970	@ PostConstruct public void init ( ) { listenerContainer = supervisionNotifier . registerAsListener ( this ) ; }
8975	@ Override public void startNormalization ( Service . Builder builder ) { }
8994	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM } ; }
8995	public SpaceTypeDescriptorBuilder addFixedProperty ( String propertyName , Class < ? > propertyType , StorageType storageType ) { return addFixedProperty ( propertyName , propertyType , SpaceDocumentSupport . DEFAULT , storageType ) ; }
9018	public int hashCode ( ) { return hash ( descs ) ; }
9043	@ Override public void exception ( Throwable t ) { currentTest . get ( ) . exception ( t ) ; }
9048	public String resolveSystemReverse ( String systemId ) throws IOException { Vector resolved = resolveAllSystemReverse ( systemId ) ; if ( resolved != _NULL && resolved . size ( ) > _NUM ) { return ( String ) resolved . elementAt ( _NUM ) ; } else { return _NULL ; } }
9071	@ Override public void addExhaustion ( float exhaustion ) { super . addExhaustion ( exhaustion * EntityPlayerExt . getArmorExhaustionModifier ( player ) ) ; }
9123	public boolean isControl ( ) { return isControl ( metadata ) ; }
9134	public static void hide ( int tabId , int notificationId ) { MediaNotificationManager manager = getManager ( notificationId ) ; if ( manager == _NULL ) return ; manager . hideNotification ( tabId ) ; }
9145	public boolean hasSelectedSubTree ( ) { boolean foundASelectedRoot = _BOOL ; if ( treeView . getNumberSelectedNodes ( ) > _NUM ) { for ( Node v : treeView . getSelectedNodes ( ) ) { if ( v . getInDegree ( ) == _NUM || ! treeView . getSelected ( v . getFirstInEdge ( ) . getSource ( ) ) ) { if ( foundASelectedRoot ) return _BOOL ; else foundASelectedRoot = _BOOL ; } } } return foundASelectedRoot ; }
9154	public void addValue ( int v ) { incrementValue ( Long . valueOf ( v ) , _NUM ) ; }
9172	public static synchronized boolean isFixtureLabeled ( ) { return fixtureLabeled ; }
9192	public final float readFloat ( ) { return Float . intBitsToFloat ( readInt ( ) ) ; }
9200	public FriendsEditListQuery editList ( UserActor actor , int listId ) { return new FriendsEditListQuery ( getClient ( ) , actor , listId ) ; }
9202	public Builder takeLastColumns ( String ... columns ) { return add ( ReduceOp . TakeLast , columns ) ; }
9245	public DatabaseGetChairsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
9265	public static SM_SYSTEM_MESSAGE STR_QUEST_QIMSG_COMPLETE ( ) { return new SM_SYSTEM_MESSAGE ( _NUM ) ; }
9310	public byte [ ] serializeBytes ( ) { return serializeBytes ( CUR_VERSION ) ; }
9329	public static SM_SYSTEM_MESSAGE STR_CHANGE_ITEM_SKIN_SUCCEED ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
9353	public String encrypt ( String raw ) { try { MessageDigest localMessageDigest = cloneMessageDigest ( ) ; byte [ ] digest = localMessageDigest . digest ( raw . getBytes ( _CHAR UTF - _NUM _CHAR ) ) ; return new String ( Hex . encodeHex ( digest ) ) ; } catch ( UnsupportedEncodingException e ) { throw new EncodingException ( _CHAR UTF - _NUM not supported ! _CHAR , e ) ; } }
9356	private boolean canUploadEmblemInfo ( Player activePlayer ) { if ( ! isBrigadeGeneral ( activePlayer ) ) { return _BOOL ; } else if ( activePlayer . getLegion ( ) . getLegionLevel ( ) < _NUM ) { return _BOOL ; } else if ( activePlayer . getLegion ( ) . getLegionEmblem ( ) . isUploading ( ) ) { activePlayer . getLegion ( ) . getLegionEmblem ( ) . setUploading ( _BOOL ) ; return _BOOL ; } return _BOOL ; }
9369	public boolean isImageOutlineLineVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { if ( obj instanceof RasterSymbolizer ) { RasterSymbolizer raster = ( RasterSymbolizer ) obj ; enabled = ( raster . getImageOutline ( ) == _NULL ) && ( geometryType == GeometryTypeEnum . RASTER ) ; } } return enabled ; }
9373	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( getLong ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
9404	protected void onInitialized ( ActivitiEvent event ) { }
9416	public String namespace ( ) { return theNamespace ; }
9423	private void sendBeforeTextChanged ( CharSequence s , int start , int count , int after ) { if ( mListeners != _NULL ) { for ( int i = _NUM ; i < mListeners . size ( ) ; i ++ ) { mListeners . get ( i ) . beforeTextChanged ( s , start , count , after ) ; } } }
9428	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
9441	public int hashCode ( ) { return ( ClientMinPrincipal . class . hashCode ( ) + Constraint . hash ( principals ) ) ; }
9443	public static float sqrt ( float fValue ) { return ( float ) Math . sqrt ( fValue ) ; }
9445	public FriendsEditQuery edit ( UserActor actor , int userId ) { return new FriendsEditQuery ( getClient ( ) , actor , userId ) ; }
9486	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_LEFT ( int num1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0s ) ; }
9549	@ Override public void startLinting ( ) { }
9606	public Location zero ( ) { x = _NUM ; y = _NUM ; z = _NUM ; return this ; }
9620	public NotesAddQuery add ( UserActor actor , String title , String text ) { return new NotesAddQuery ( getClient ( ) , actor , title , text ) ; }
9644	public boolean isCompatible ( Split split ) { return ! ( getA ( ) . intersects ( split . getA ( ) ) && getA ( ) . intersects ( split . getB ( ) ) && getB ( ) . intersects ( split . getA ( ) ) && getB ( ) . intersects ( split . getB ( ) ) ) ; }
9678	public CardinalityAggregation withByRow ( boolean byRow ) { return new CardinalityAggregation ( getName ( ) , dimensions , byRow ) ; }
9700	@ VisibleForTesting public static void configure ( ServiceControlConfigBounds bounds ) { ServiceControlConfigValidator . bounds = bounds ; }
9702	@ Override public boolean isShown ( ) { return isShown ; }
9742	public boolean isRtlSupported ( ) { sync ( ) ; return myApplicationSupportsRtl ; }
9747	private boolean taskInProgress ( ) { return tCur != _NULL ; }
9748	static boolean isSameRow ( ConstraintWidget a , ConstraintWidget b ) { return Math . max ( a . getY ( ) , b . getY ( ) ) < Math . min ( a . getY ( ) + a . getHeight ( ) , b . getY ( ) + b . getHeight ( ) ) ; }
9785	public void removeDataSources ( Set < ? extends DataSource > removed ) { super . unregisterDataSources ( removed ) ; }
9786	public V put ( K key , V value ) { return putInternal ( key , value , expireTimeNanos ) ; }
9793	public final Observable < Void > evict ( ) { return Observable . defer ( _NULL ) ; }
9799	public OrdersChangeStateQuery appOrderId ( Integer value ) { return unsafeParam ( _CHAR app_order_id _CHAR , value ) ; }
9818	public static SM_SYSTEM_MESSAGE STR_MSG_DONT_USE_ITEM_BY_NOT_MENTOR ( String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 ) ; }
9843	public static Constructor < ? > findInjectedCtor ( Class < ? > clazz ) { Constructor < ? > [ ] ctors = clazz . getDeclaredConstructors ( ) ; for ( Constructor < ? > ctor : ctors ) { if ( isInjected ( ctor ) ) { return ctor ; } } return _NULL ; }
9872	public boolean hasProgramStage ( ) { return programStage != _NULL ; }
9889	protected void writeShort ( int value ) throws IOException { out . write ( value & _NUM ) ; out . write ( ( value >> _NUM ) & _NUM ) ; }
9895	@ Override public void resetDocumentLocator ( String publicid , String systemid ) { thePublicid = publicid ; theSystemid = systemid ; theLastLine = theLastColumn = theCurrentLine = theCurrentColumn = _NUM ; }
9897	public static void clickButtonYoutube ( ) { RewiMod . getInstance ( ) . openUrl ( _CHAR https : // www . youtube . com / user / rewinside / '' ) ; }
9937	public boolean hasInitialSeeds ( ) { return ! this . initialSeeds . isEmpty ( ) ; }
9958	public void registerHandler ( String handlerName , BridgeHandler handler ) { if ( handler != _NULL ) { messageHandlers . put ( handlerName , handler ) ; } }
9968	public static boolean isBodyAABBEnabled ( ) { return bodyAABBEnabled ; }
9974	@ Override public void endMerging ( ) { ServiceControlConfigValidator . validate ( this , getModel ( ) . getServiceConfig ( ) ) ; }
9976	public boolean hasNewerVersion ( ) { return latestStable . compareTo ( currentVersion ) > _NUM ; }
9987	public static void parametersToAttributes ( HttpServletRequest request ) { java . util . Enumeration < String > e = UtilGenerics . cast ( request . getParameterNames ( ) ) ; while ( e . hasMoreElements ( ) ) { String name = e . nextElement ( ) ; request . setAttribute ( name , request . getParameter ( name ) ) ; } }
9999	public boolean equals ( Object obj ) { return ( obj instanceof Table ) && dataMap . equals ( obj ) ; }
10002	public void updateEnableState ( ) { applyAction . setEnabled ( _BOOL ) ; }
10004	public int hashCode ( ) { return ( int ) ( value ^ ( value >> > _NUM ) ) ; }
10012	public static JpaModule newClientModule ( String resourceSearchPackage ) { return new JpaModule ( resourceSearchPackage ) ; }
10015	public void write ( OutputStream os ) throws IOException { if ( responseFormatType == ResponseFormatType . CSV ) { writeCsvResponse ( os ) ; } else if ( responseFormatType == ResponseFormatType . JSONAPI ) { writeJsonApiResponse ( os , missingIntervals , volatileIntervals , pagination ) ; } else { writeJsonResponse ( os , missingIntervals , volatileIntervals , pagination ) ; } }
10032	public T onCreateLvl1SectionViewHolder ( ViewGroup parent ) { return _NULL ; }
10051	public boolean match ( String name ) { return getMatch ( name ) != _NULL ; }
10064	public static boolean isBinFile ( String fileName ) { try ( DataInputStream dis = new DataInputStream ( new FileInputStream ( fileName ) ) ) { int firstInt = dis . readInt ( ) ; return firstInt == _NUM || firstInt == MAGIC_NUMBER ; } catch ( Exception e ) { return _BOOL ; } }
10083	protected void writeNetscapeExt ( ) throws IOException { out . write ( _NUM ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeString ( _CHAR NETSCAPE _CHAR + _CHAR _NUM . _NUM _CHAR ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeShort ( repeat ) ; out . write ( _NUM ) ; }
10143	@ Override public void close ( ) throws RemoteException { s . close ( ) ; if ( rconn . getAutoCommit ( ) ) rconn . commit ( ) ; else rconn . endStatement ( ) ; }
10154	public ReturnStmt newReturnStmt ( Value op ) { return new GReturnStmt ( op ) ; }
10162	public static boolean isDarkTheme ( Context context , boolean current ) { return resolveBoolean ( context , R . attr . themeDark , current ) ; }
10172	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM / _NUM . _NUM , _NUM . _NUM / _NUM . _NUM , _NUM . _NUM / _NUM . _NUM , _NUM . _NUM / _NUM . _NUM , _NUM . _NUM / _NUM . _NUM , _NUM . _NUM / _NUM . _NUM , _NUM . _NUM / _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
10183	@ RequestMapping ( value = { _CHAR / metrics _CHAR } , method = RequestMethod . GET ) public String returnMetricsView ( ) { return _CHAR metrics _CHAR ; }
10191	public static boolean isContactImpulseEnabled ( ) { return contactImpulseEnabled ; }
10209	public void readFromFileSystem ( final File propertyFileLocation ) throws ConfigurationException { properties = readPropertyFileFromFileSystem ( propertyFileLocation ) ; }
10213	private boolean isStartingNewContextualSearch ( PanelState toState , StateChangeReason reason ) { return toState == PanelState . PEEKED && ( reason == StateChangeReason . TEXT_SELECT_TAP || reason == StateChangeReason . TEXT_SELECT_LONG_PRESS ) ; }
10221	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; for ( int counter : counters ) { buffer . append ( _CHAR [ _CHAR + counter + _CHAR ] _CHAR ) ; } return buffer . toString ( ) ; }
10224	public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_DUEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10229	public void clearDocumentGraph ( ) { Graph = new DistributionGraph ( ) ; }
10234	public GroupsEditQuery contacts ( Boolean value ) { return unsafeParam ( _CHAR contacts _CHAR , value ) ; }
10235	public Set < String > keySet ( ) { return this . map . keySet ( ) ; }
10238	public Builder maxZoom ( Number maxZoom ) { this . maxZoom = maxZoom ; return this ; }
10249	@ Override public void clear ( ) { super . clear ( ) ; fEntityName = _NULL ; }
10250	public static SM_SYSTEM_MESSAGE STR_MSG_REFUND_MONEY_SYSTEM ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
10257	public void onNewIntent ( Intent intent ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { plugin . onNewIntent ( intent ) ; } } }
10260	public boolean isTone ( ) { return _CHAR + _CHAR . equals ( features . get ( _CHAR isTone _CHAR ) ) ; }
10276	public boolean deleteKey ( DataType key , RecordID rid ) { throw new BPlusTreeException ( _CHAR BPlusTree # DeleteKey Not Implemented ! _CHAR ) ; }
10282	protected final void fireColumnEvent ( int idx , float prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
10307	void discardResource ( ) { R old = resource ; lifecycle . onRemoval ( resourceKey . getKey ( ) , old ) ; }
10348	@ Override public String toString ( ) { String condition = acceptLarger ? _CHAR >= _CHAR : _CHAR < _CHAR ; return super . toString ( ) + _CHAR ( _CHAR + condition + size + _CHAR ) _CHAR ; }
10349	private void writeDictionaryFile ( CarbonDictionaryWriterImpl writer , List < String > list ) throws IOException { try { for ( String value : list ) { writer . write ( value ) ; } } finally { writer . close ( ) ; writer . commit ( ) ; } }
10369	public boolean next ( ) { return searchFor ( INUSE ) ; }
10394	public void clear ( ) { mAnimations . clear ( ) ; }
10406	public static CalendarFragment newInstance ( CustomCalendar calendar ) { CalendarFragment fragment = new CalendarFragment ( ) ; fragment . setCalendar ( calendar ) ; return fragment ; }
10473	public void removeMostRecentValue ( ) throws MathIllegalStateException { try { eDA . discardMostRecentElements ( _NUM ) ; } catch ( MathIllegalArgumentException ex ) { throw new MathIllegalStateException ( LocalizedCoreFormats . NO_DATA ) ; } }
10480	private CountingThreadPoolExecutor createExecutor ( int numThreads ) { return new CountingThreadPoolExecutor ( numThreads , Integer . MAX_VALUE , _NUM , TimeUnit . SECONDS , new LinkedBlockingQueue < Runnable > ( ) ) ; }
10481	public void recordOpenedBookmarks ( ) { setFirstAction ( OPENED_BOOKMARKS ) ; }
10561	private static SubjectKeyIdentifier createSubjectKeyIdentifier ( Key key ) { SubjectPublicKeyInfo publicKeyInfo = SubjectPublicKeyInfo . getInstance ( key . getEncoded ( ) ) ; return new BcX509ExtensionUtils ( ) . createSubjectKeyIdentifier ( publicKeyInfo ) ; }
10576	public boolean isPreclosed ( ) { return preclosed ; }
10591	@ Override public Object clone ( ) { try { TinkerZipEntry result = ( TinkerZipEntry ) super . clone ( ) ; result . extra = extra != _NULL ? extra . clone ( ) : _NULL ; return result ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( e ) ; } }
10597	public void initPathArray ( int size ) { if ( DEBUG ) { debug ( _CHAR init_path_array : _CHAR + size ) ; } numStates = size ; statePaths = new ViterbiPath [ size ] ; }
10610	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
10613	public void onItemClick ( View view ) { }
10633	public LengthExpr newLengthExpr ( Value op ) { return new JLengthExpr ( op ) ; }
10665	public AemRichText clear ( ) { switchToTextArea ( ) ; try { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return this ; } finally { frameSwitcher . switchTo ( _CHAR / $ cq _CHAR ) ; } }
10689	public Builder minColumns ( String ... columns ) { return add ( ReduceOp . Min , columns ) ; }
10707	public void infoLogResponse ( Response response ) { String prettyResponse = prettyResponse ( response ) ; if ( responseLogLengthLimit > _NUM && prettyResponse . length ( ) > responseLogLengthLimit ) { prettyResponse = prettyResponse . substring ( _NUM , responseLogLengthLimit ) + _CHAR ... ( cut off for the log ) '' ; } logger . info ( _CHAR Response as string : _CHAR + prettyResponse ) ; }
10711	public static void deleteAircraft ( AirMapAircraft aircraft , @ Nullable AirMapCallback < Void > callback ) { PilotService . deleteAircraft ( aircraft , callback ) ; }
10738	protected void noteUpdate ( K key , V newValue , V oldValue ) { for ( CacheListener < K , V > listener : listeners ) { listener . noteKeyUpdate ( this , key , newValue , oldValue ) ; } }
10743	public synchronized void stopPreview ( ) { if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewing = _BOOL ; } }
10745	public static void sampleInstallTinker ( ApplicationLike appLike ) { if ( isInstalled ) { TinkerLog . w ( TAG , _CHAR install tinker , but has installed , ignore _CHAR ) ; return ; } TinkerInstaller . install ( appLike ) ; isInstalled = _BOOL ; }
10758	public void closeDriver ( ) { if ( camera != _NULL ) { FlashlightManager . disableFlashlight ( ) ; camera . release ( ) ; camera = _NULL ; } }
10775	protected PhotosEditAlbumQuery albumId ( int value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
10778	public void clearTriggered ( OperationID operationId ) { if ( operationId != _NULL && _alreadyTriggeredEvents . contains ( operationId ) ) { _outgoingEvents . remove ( operationId ) ; _alreadyTriggeredEvents . remove ( operationId ) ; } }
10791	public ThisRef newThisRef ( RefType t ) { return Jimple . v ( ) . newThisRef ( t ) ; }
10814	public static float pxToDp ( float px ) { float densityDpi = Resources . getSystem ( ) . getDisplayMetrics ( ) . densityDpi ; return pxToDp ( px , densityDpi ) ; }
10819	private void sendAfterTextChanged ( Editable s ) { if ( mListeners != _NULL ) { for ( int i = _NUM ; i < mListeners . size ( ) ; i ++ ) { mListeners . get ( i ) . afterTextChanged ( s ) ; } } }
10820	public static Style lightGreen ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_LIGHT_GREEN ) ; return style ; }
10832	public boolean showJavaScriptSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_JAVASCRIPT ; }
10838	long recordSize ( ) { return Math . max ( LongMath . divide ( _bytesAdded , Math . max ( _adds , _NUM ) , RoundingMode . CEILING ) , _NUM ) ; }
10847	public static Date max ( Date date1 , Date date2 ) { if ( date1 == _NULL ) { return date2 ; } return date2 != _NULL ? ( date1 . after ( date2 ) ? date1 : date2 ) : date1 ; }
10856	protected AdsDeleteCampaignsQuery ids ( String value ) { return unsafeParam ( _CHAR ids _CHAR , value ) ; }
10858	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
10884	protected final void fireColumnEvent ( int idx , double prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
10886	public void queryAddASBSet ( String name , int rank , int hunterType ) { mHelper . queryAddASBSet ( name , rank , hunterType ) ; }
10888	public static Properties readPropertyFileFromFileSystem ( final File propertyFileLocation ) throws ConfigurationException { final Properties fileProperties = new Properties ( ) ; try { final InputStream inputStream = new FileInputStream ( propertyFileLocation ) ; fileProperties . load ( inputStream ) ; inputStream . close ( ) ; } catch ( IOException e ) { throw new ConfigurationException ( _CHAR Can not load the properties file _CHAR , e ) ; } return fileProperties ; }
10889	public static SM_SYSTEM_MESSAGE STR_CANCEL_PETITION_OK1 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10922	public void addDeviceCommands ( List < DeviceCommand > deviceCommands ) { this . deviceCommands . addAll ( deviceCommands ) ; }
10944	public static float nextRandomFloat ( ) { return rand . nextFloat ( ) ; }
10972	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_LEAVE_SUCCESS ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10989	private static int makeHash ( int npcId , int level ) { return npcId << _NUM | level ; }
10991	public UsersSearchQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
11007	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM , _NUM } ; }
11023	void displayText ( String text ) { sdf = new SimpleDateFormat ( _CHAR yyyy - MM - dd_HH - mm - ss _CHAR ) ; dt = new Date ( ) ; textArea . appendText ( sdf . format ( dt ) + _CHAR >> _CHAR + text + _CHAR \ n _CHAR ) ; }
11058	public AppsDeleteAppRequestsQuery deleteAppRequests ( UserActor actor ) { return new AppsDeleteAppRequestsQuery ( getClient ( ) , actor ) ; }
11074	@ Override public void close ( ) throws IOException { }
11077	public static boolean containsInLineFeatures ( StyledLayerDescriptor sld ) { if ( sld != _NULL ) { for ( StyledLayer layer : sld . layers ( ) ) { if ( layer instanceof UserLayer ) { UserLayer userLayer = ( UserLayer ) layer ; if ( userLayer . getInlineFeatureDatastore ( ) != _NULL ) { return _BOOL ; } } } } return _BOOL ; }
11099	public static ShortBuffer createShortBuffer ( int size ) { ShortBuffer buf = ByteBuffer . allocateDirect ( _NUM * size ) . order ( ByteOrder . nativeOrder ( ) ) . asShortBuffer ( ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
11106	public static String slurpGBURL ( URL u ) throws IOException { return slurpURL ( u , _CHAR GB18030 _CHAR ) ; }
11115	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
11126	public static Map < String , String > strToMap ( String str , boolean trim ) { return strToMap ( str , _CHAR | _CHAR , trim ) ; }
11151	public void save ( ) throws IOException { setPathIfApplicable ( myAndroidSdkPathModified , SDK_DIR_PROPERTY , getAndroidSdkPathFromFile ( ) , myNewAndroidSdkPath ) ; setPathIfApplicable ( myAndroidNdkPathModified , NDK_DIR_PROPERTY , getAndroidNdkPathFromFile ( ) , myNewAndroidNdkPath ) ; if ( myAndroidSdkPathModified || myAndroidNdkPathModified ) { savePropertiesToFile ( myProperties , myPropertiesFilePath , getHeaderComment ( ) ) ; } myNewAndroidSdkPath = myNewAndroidNdkPath = _NULL ; myAndroidSdkPathModified = myAndroidNdkPathModified = _BOOL ; }
11165	public void bumpSongCount ( final long songId ) { if ( songId < _NUM ) { return ; } final SQLiteDatabase database = mMusicDatabase . getWritableDatabase ( ) ; updateExistingRow ( database , songId , _BOOL ) ; }
11166	private void saveTo ( File file ) throws IOException { FileOutputStream fos = _NULL ; try { fos = new FileOutputStream ( file ) ; ObjectOutputStream oos = new ObjectOutputStream ( fos ) ; try { oos . writeObject ( this ) ; } finally { close ( oos , _BOOL ) ; } } finally { close ( fos , _BOOL ) ; } }
11178	public static boolean isJavaScriptEnabled ( HttpServletRequest request ) { HttpSession session = request . getSession ( ) ; Boolean javaScriptEnabled = ( Boolean ) session . getAttribute ( _CHAR javaScriptEnabled _CHAR ) ; if ( javaScriptEnabled != _NULL ) { return javaScriptEnabled . booleanValue ( ) ; } return _BOOL ; }
11191	public static boolean isBodyVelocityEnabled ( ) { return bodyVelocityEnabled ; }
11197	public int size ( ) { return cursors . size ( ) ; }
11205	public static void loadContent ( Activity context ) { FragmentPlaces . loadPlacesList ( context ) ; FragmentDisasters . loadDisastersList ( context ) ; FragmentGoodActs . loadGoodActsList ( context ) ; }
11209	public AsyncCatchOptions noMasterBall ( boolean skipMasterBall ) { this . skipMasterBall = skipMasterBall ; return this ; }
11236	public void detach ( AppCompatActivity activity ) { attrViewMaps . remove ( activity . hashCode ( ) ) ; }
11253	@ TargetApi ( VERSION_CODES . GINGERBREAD ) public static boolean isExternalStorageRemovable ( ) { if ( Utils . hasGingerbread ( ) ) { return Environment . isExternalStorageRemovable ( ) ; } return _BOOL ; }
11264	protected Object create ( ) throws ResourceUnavailableException { PoolableThread thread = new PoolableThread ( this ) ; thread . setDaemon ( _BOOL ) ; thread . start ( ) ; try { Thread . sleep ( _NUM ) ; } catch ( InterruptedException e ) { logger . log ( Level . WARNING , _CHAR Creating a resource interrupted _CHAR , e ) ; } return ( thread ) ; }
11330	public ChangeSet lease ( long lease ) { _lease = lease ; return this ; }
11335	public IObjectInfo < T > addUnlocked ( T subject ) { return store_impl ( subject ) ; }
11337	public static int toRealPosition ( int position , int count ) { position = position - _NUM ; if ( position < _NUM ) { position += count ; } else { position = position % count ; } return position ; }
11352	public AsyncCatchOptions useSmartSelect ( boolean smartSelect ) { this . smartSelect = smartSelect ; return this ; }
11372	protected void noteRemoval ( K key , V oldValue ) { for ( CacheListener < K , V > listener : listeners ) { listener . noteKeyRemoval ( this , key , oldValue ) ; } }
11373	public Object opt ( String key ) { return key == _NULL ? _NULL : this . map . get ( key ) ; }
11389	public boolean isVariable ( ) { return _BOOL ; }
11393	public static synchronized Scope build ( LIPermission ... permissions ) { return new Scope ( permissions ) ; }
11401	public static BaseRecordReader createRecordReader ( Configuration config , Path path ) throws IOException { EmoInputSplittable emoFs = ( EmoInputSplittable ) path . getFileSystem ( config ) ; return emoFs . getBaseRecordReader ( config , path , getSplitSize ( config ) ) ; }
11407	public ChangeSet increment ( String path , double delta ) { return add ( new IncrementSpaceEntryMutator ( path , delta ) ) ; }
11453	private Socket ssl ( Socket socket , String host , int port ) throws IOException { return sslSocketFactory . createSocket ( socket , host , port , _BOOL ) ; }
11467	static Schema schema ( Type fldType ) { Schema sch = new Schema ( ) ; sch . addField ( SCH_KEY , fldType ) ; sch . addField ( SCH_RID_BLOCK , BIGINT ) ; sch . addField ( SCH_RID_ID , INTEGER ) ; return sch ; }
11489	public void logStatistics ( ) { }
11499	protected void initSentenceRepresentationFilter ( ) { if ( SentenceRepresentationFilter == _NULL ) SentenceRepresentationFilter = new IdentityObjectFilter < DocumentNGramGraph > ( ) ; }
11504	public boolean isIncluded ( int value ) { for ( Range r : ranges ) { if ( r . start <= value && value <= r . end ) { return _BOOL ; } } return _BOOL ; }
11514	public byte [ ] unCompress ( byte [ ] compInput ) { try { return Snappy . uncompress ( compInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return compInput ; }
11530	public Type type ( ) { return type ; }
11548	protected AdsDeleteClientsQuery ids ( String value ) { return unsafeParam ( _CHAR ids _CHAR , value ) ; }
11602	public static String slurpURL ( String path ) throws Exception { return slurpURL ( new URL ( path ) ) ; }
11633	public ViewsFinder andFrom ( final ViewGroup ... rootViews ) { FunctionUtils . checkParameterIsNotNull ( _CHAR rootViews _CHAR , rootViews ) ; return new ViewsFinder ( this , rootViews ) ; }
11696	protected void drawLabel ( Canvas c , float x , float y , String label ) { c . drawText ( label , x , y , mLegendLabelPaint ) ; }
11699	@ Override public double [ ] makeDensityTestValues ( ) { double d = _NUM . _NUM / ( _NUM -- _NUM + _NUM ) ; return new double [ ] { _NUM , d , d , d , d , d , d , d , d , d , _NUM } ; }
11706	public int hashCode ( ) { return ( ClientMaxPrincipalType . class . hashCode ( ) + Constraint . hash ( classes ) ) ; }
11724	public FriendsGetAvailableForCallQueryWithFields nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
11734	public static LpCoeffs calcLPC ( double [ ] x , int p ) { return calcLPC ( x , p , _NUM . _NUM ) ; }
11742	public static boolean checkContentCanBePulledDown ( PtrFrameLayout frame , View content , View header ) { return ! canChildScrollUp ( content ) ; }
11757	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
11777	public static final void onPlayerLogin ( Player player ) { for ( PlayerAlliance alliance : alliances . values ( ) ) { PlayerAllianceMember member = alliance . getMember ( player . getObjectId ( ) ) ; if ( member != _NULL ) { alliance . onEvent ( new PlayerConnectedEvent ( alliance , player ) ) ; } } }
11788	@ Override public void removeLifecycleListener ( LifecycleListener listener ) { lifecycle . removeLifecycleListener ( listener ) ; }
11789	public PhoneNumber number ( ) { return number ; }
11794	public ReturnStmt newReturnStmt ( Value op ) { return new JReturnStmt ( op ) ; }
11822	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
11844	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; try { camera . autoFocus ( autoFocusCallback ) ; } catch ( Exception e ) { } } }
11853	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSTATUS_SKILL_TURNED_OFF ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11914	public Vector1D toSubSpace ( Vector < Euclidean2D > vector ) { return toSubSpace ( ( Point < Euclidean2D > ) vector ) ; }
11930	public TypeVariableBV typeVariable ( SootClass sootClass ) { return typeVariable ( hierarchy . typeNode ( sootClass . getType ( ) ) ) ; }
11934	public int length ( ) { return values . size ( ) ; }
11970	public Matrix translate ( final float [ ] transformedPts ) { Matrix save = new Matrix ( ) ; translate ( transformedPts , save ) ; return save ; }
12005	public boolean isValidCurrent ( ) { return isValidCurrent ( RecurrenceUtil . now ( ) ) ; }
12050	private void sourceIteratorExhaushted ( ) { if ( _logger . isLoggable ( Level . FINEST ) ) _logger . finest ( _CHAR shared iterator source wrapped iterator is exhausted [ _CHAR + _identifier + _CHAR ] _CHAR ) ; _sourceIteratorExhausted = _BOOL ; }
12081	public void removeFromHouse ( ) { this . setX ( _NUM ) ; this . setY ( _NUM ) ; this . setZ ( _NUM ) ; this . setHeading ( ( byte ) _NUM ) ; }
12122	public void update ( String url , int securityLevel ) { URI uri = createURI ( url ) ; updateSecurityIcon ( securityLevel ) ; updateDisplayedUrl ( url , uri ) ; }
12139	@ Override public void undo ( Transaction tx ) { }
12179	public int size ( ) { synchronized ( eventsList ) { return eventsList . size ( ) ; } }
12202	public void onUpdateFromCloseToPeek ( float percentage ) { if ( ! isVisible ( ) ) return ; mHeightPx = Math . round ( mDefaultHeightPx ) ; }
12209	private void doMatch ( FileEntry entry , File file ) { if ( entry . refresh ( file ) ) { for ( FileAlterationListener listener : listeners ) { if ( entry . isDirectory ( ) ) { listener . onDirectoryChange ( file ) ; } else { listener . onFileChange ( file ) ; } } } }
12228	public void calculateCenter ( ) { if ( center == _NULL ) { center = new Vector3f ( pointa ) ; } else { center . set ( pointa ) ; } center . addLocal ( pointb ) . addLocal ( pointc ) . multLocal ( FastMath . ONE_THIRD ) ; }
12249	public void addObserver ( final FileAlterationObserver observer ) { if ( observer != _NULL ) { observers . add ( observer ) ; } }
12259	public char charOf ( int offset ) { return charAt ( pos + offset ) ; }
12271	public boolean toggleNeverTranslateDomainState ( boolean value ) { return toggleState ( NEVER_DOMAIN , value ) ; }
12281	final public void response ( List < JSON > arr ) { if ( arr == _NULL ) { responseJson ( _CHAR [ ] _CHAR ) ; } else { responseJson ( arr . toString ( ) ) ; } }
12302	public final void forceFinished ( boolean finished ) { mFinished = finished ; }
12317	public static SM_SYSTEM_MESSAGE STR_DECOMPOSE_ITEM_FAILED ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
12322	public static boolean checkContentCanBePulledDown ( PtrFrameLayout frame , View content , View header ) { return ! canChildScrollUp ( content ) ; }
12323	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OpenAerial_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12342	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
12367	public void addDeviceProperty ( DeviceProperty deviceProperty ) { this . deviceProperties . add ( deviceProperty ) ; }
12375	@ Override public boolean include ( String identifier ) { return whitelist . contains ( identifier ) ; }
12391	public static Object catcher ( Object input ) { try { NORELEASE . just ( input ) ; } catch ( Throwable t ) { t . printStackTrace ( ) ; NORELEASE . breakpoint ( ) ; } return _NULL ; }
12404	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
12408	public String localName ( ) { return theLocalName ; }
12411	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
12480	public static long addAndCheck ( long a , long b ) throws MathRuntimeException { return addAndCheck ( a , b , LocalizedCoreFormats . OVERFLOW_IN_ADDITION ) ; }
12485	private Reader createASCIIReader ( InputStream stream ) { return new ASCIIReader ( stream , fTempString . ch . length , fErrorReporter . getMessageFormatter ( XMLMessageFormatter . XML_DOMAIN ) , fErrorReporter . getLocale ( ) ) ; }
12511	public void login ( String username , String password ) throws IllegalStateException , IOException , FTPIllegalReplyException , FTPException { login ( username , password , _NULL ) ; }
12513	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM , _NUM , _NUM , _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
12520	public static SM_SYSTEM_MESSAGE STR_DECOMPOSE_ITEM_CANCELED ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( nameId ) ) ; }
12522	public static SM_SYSTEM_MESSAGE STR_MSG_FPHeal_TO_ME ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
12524	public long seedHigh ( ) { return seedHigh ; }
12533	public int flags ( ) { return theFlags ; }
12543	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM , _NUM , _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
12547	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
12591	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HIS_PARTY_LEAVE_ALLIANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12615	public static final Slice scale ( Slice slice , double scale ) { if ( slice == _NULL ) throw new NullPointerException ( Messages . getString ( _CHAR geometry . nullShape _CHAR ) ) ; if ( scale <= _NUM ) throw new IllegalArgumentException ( Messages . getString ( _CHAR geometry . invalidScale _CHAR ) ) ; return new Slice ( slice . getSliceRadius ( ) * scale , slice . getTheta ( ) ) ; }
12620	@ Override public int [ ] makeDensityTestPoints ( ) { return new int [ ] { - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
12637	public void requiresReboot ( boolean reboot ) { requiresReboot = reboot ; }
12644	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void updateTableData ( final List < Pokemon > pokes ) { ClearTable ( ) ; final MutableInt i = new MutableInt ( ) ; pokes . forEach ( _NULL ) ; fireTableDataChanged ( ) ; }
12648	@ Override public void onViewSwipedToRight ( int position ) { adapter . add ( couponsList . get ( position ) , couponsList . size ( ) ) ; adapter . notifyDataSetChanged ( ) ; updateQrCode ( position == couponsList . size ( ) - _NUM ? _NUM : position + _NUM ) ; }
12669	public void addOverlappingView ( View view ) { mFrameLayoutOverlappingViewContainer . addView ( view , COMMON_LAYOUT_PARAMS ) ; mOverlappingViewsMap . put ( view . getId ( ) , view ) ; }
12683	@ Override public boolean onUnbind ( Intent intent ) { ( ( FileUploaderBinder ) mBinder ) . clearListeners ( ) ; return _BOOL ; }
12685	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
12699	public static boolean searchInArray ( int [ ] data , int key ) { for ( int i = _NUM ; i < data . length ; i ++ ) { if ( key == data [ i ] ) { return _BOOL ; } } return _BOOL ; }
12708	public static String pad ( Object obj , int totalChars ) { return pad ( obj . toString ( ) , totalChars ) ; }
12711	public PlacesCheckinQuery checkin ( UserActor actor ) { return new PlacesCheckinQuery ( getClient ( ) , actor ) ; }
12713	public static boolean isDWord ( Type type ) { return type instanceof LongType || type instanceof DoubleType ; }
12724	private void log ( final Level level , final Object o ) { if ( logger . isEnabledFor ( level ) ) { NDC . push ( ndcPush ) ; logger . log ( level , o ) ; NDC . pop ( ) ; } }
12789	public boolean isSingleColumnResult ( ) { return _results . getFieldNames ( ) . length == _NUM ; }
12791	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_LIMIT_LOVE_COUNT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12798	private void debugPrint ( String msg ) { if ( debug ) { System . out . println ( toString ( ) + _CHAR : _CHAR + msg ) ; } }
12799	private StringBuffer formatImaginary ( double absIm , StringBuffer toAppendTo , FieldPosition pos ) { pos . setBeginIndex ( _NUM ) ; pos . setEndIndex ( _NUM ) ; CompositeFormat . formatDouble ( absIm , getImaginaryFormat ( ) , toAppendTo , pos ) ; if ( toAppendTo . toString ( ) . equals ( _CHAR _NUM _CHAR ) ) { toAppendTo . setLength ( _NUM ) ; } return toAppendTo ; }
12815	public JSONArray optJSONArray ( int index ) { Object o = this . opt ( index ) ; return o instanceof JSONArray ? ( JSONArray ) o : _NULL ; }
12856	public boolean isEnabled ( ) { return mEnabled ; }
12866	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
12891	public void loadWeather ( Player player ) { onWeatherChange ( player . getWorldId ( ) , player ) ; }
12894	public void updateDataPath ( String dataPath ) { scenarioContext . add ( ContextKeys . CURRENT_DATAPATH , dataPath ) ; }
12914	public SequenceTemplateParameterContext addSequenceParameter ( SequenceType seqType , SequenceUUID uuid , SequenceContextParameters paramName , String paramValue ) { initSequence ( seqType , uuid ) ; doAddParameter ( seqType , uuid , paramName , paramValue ) ; return this ; }
12923	public void closeDriver ( ) { if ( camera != _NULL ) { FlashlightManager . disableFlashlight ( ) ; camera . release ( ) ; camera = _NULL ; } }
12928	@ Override public int [ ] makeCumulativeTestPoints ( ) { return makeDensityTestPoints ( ) ; }
12936	public void updateNifClasses ( List < CommandClass > nif ) { nodeInformationFrame = nif ; }
12954	public PhotosSaveQuery hash ( String value ) { return unsafeParam ( _CHAR hash _CHAR , value ) ; }
12989	public double estimateEffort ( double sloc ) { double eaf = _NUM ; double effortApplied = _NUM . _NUM * Math . pow ( sloc / _NUM , _NUM . _NUM ) * eaf ; return effortApplied ; }
13012	public static FieldSelector of ( ImmutableList < Field > fields ) { return new FieldSelector ( fields ) ; }
13016	public void close ( ) { if ( blk != _NULL ) { tx . bufferMgr ( ) . unpin ( currentBuff ) ; blk = _NULL ; currentBuff = _NULL ; } }
13018	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
13035	public boolean hasOrganisationUnits ( ) { return organisationUnits != _NULL && ! organisationUnits . isEmpty ( ) ; }
13046	private static int parseNotificationId ( String id ) { try { return Integer . parseInt ( id ) ; } catch ( NumberFormatException nfe ) { Log . w ( TAG , _CHAR Exception while parsing download id : '' + id ) ; return - _NUM ; } }
13047	public static boolean isAccountPenaltyActive ( Account account ) { AccountTime accountTime = account . getAccountTime ( ) ; return accountTime != _NULL && accountTime . getPenaltyEnd ( ) != _NULL && ( accountTime . getPenaltyEnd ( ) . getTime ( ) == _NUM || accountTime . getPenaltyEnd ( ) . getTime ( ) >= System . currentTimeMillis ( ) ) ; }
13057	public boolean hasSelectedMatchLevelNode ( ) { TreePath [ ] paths = dataTree . getSelectionPaths ( ) ; if ( paths != _NULL ) { for ( TreePath path : paths ) { if ( getMatchLevelNodeFromPath ( path ) != _NULL ) return _BOOL ; } } return _BOOL ; }
13062	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( getInt ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
13080	private void openFile ( ) { mContainerActivity . getFileOperationsHelper ( ) . openFile ( getFile ( ) ) ; finish ( ) ; }
13089	public static Map < String , String > strToMap ( String str , String delim ) { return strToMap ( str , delim , _BOOL ) ; }
13098	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
13108	public static SM_SYSTEM_MESSAGE STR_UNCOMPRESS_COMPRESSED_ITEM_CANCELED ( int nameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( nameId ) ) ; }
13113	public boolean has ( String key ) { return this . map . containsKey ( key ) ; }
13132	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; camera . autoFocus ( autoFocusCallback ) ; } }
13134	public static SM_SYSTEM_MESSAGE STR_DUEL_REQUESTED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13145	public synchronized void recordStatisticsForDriver ( QueryStatistic statistic , String queryId ) { }
13173	public boolean isDrawCenterTextEnabled ( ) { return mDrawCenterText ; }
13209	public void registerHandler ( String handlerName , BridgeHandler handler ) { if ( handler != _NULL ) { messageHandlers . put ( handlerName , handler ) ; } }
13253	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
13266	public static ShareFileFragment newInstance ( OCFile fileToShare , Account account ) { ShareFileFragment fragment = new ShareFileFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_FILE , fileToShare ) ; args . putParcelable ( ARG_ACCOUNT , account ) ; fragment . setArguments ( args ) ; return fragment ; }
13292	public static boolean isDeepLinkAvailable ( @ Nullable Editor editor , @ Nullable PsiFile file ) { return file != _NULL && editor != _NULL && isAndroidManifestXmlFile ( file ) && isInsideActivityTag ( editor , file ) ; }
13303	public static UUID levelIndexToId ( int levelIndex ) { return new UUID ( _NUM , levelIndex ) ; }
13313	@ Override public int [ ] makeCumulativeTestPoints ( ) { return makeDensityTestPoints ( ) ; }
13315	public double latRadians ( ) { return latRadians ; }
13337	public static boolean isReady ( ) { return isSupported ( ) && isInitialized ( ) && Placement . isReady ( ) ; }
13370	public void execute ( final Runnable runnable ) { new Thread ( runnable ) . start ( ) ; }
13372	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MASTER_DONE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13382	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
13405	public byte [ ] toByteArray ( ) { return Arrays . copyOf ( bytes , bytes . length ) ; }
13412	public void addRepositoryListener ( ISVNListener listener ) { repositoryListeners . add ( listener ) ; }
13430	@ Override public void onLoad ( boolean viewRecreated ) { super . onLoad ( viewRecreated ) ; }
13436	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM , _NUM } ; }
13450	protected void removeContainer ( ) throws Throwable { if ( containerId == _NULL ) { return ; } sendDeleteContainerRequest ( ) ; waitForPropertyValue ( provisioningTaskLink , MockTaskState . class , _CHAR taskInfo . stage _CHAR , TaskState . TaskStage . FINISHED ) ; if ( ! isMockTarget ( ) ) { Thread . sleep ( _NUM ) ; } verifyContainerDoesNotExist ( containerId ) ; }
13463	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
13491	public final TestSubscriber < T > assertFuseableSource ( ) { if ( qs == _NULL ) { throw new AssertionError ( _CHAR Upstream was not Fuseable _CHAR ) ; } return this ; }
13510	public static ByteBuffer createByteBuffer ( int size ) { ByteBuffer buf = ByteBuffer . allocateDirect ( size ) . order ( ByteOrder . nativeOrder ( ) ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
13557	public static double db ( double energy ) { if ( energy <= _NUM - _NUM ) return - _NUM . _NUM ; else return _NUM * log10 ( energy ) ; }
13586	public Object toObject ( SpaceDocument document ) { FromDocumentConvertionContext conversionContext = new FromDocumentConvertionContext ( ) ; return toObjectInternal ( document , conversionContext ) ; }
13602	public void removeExtension ( String ext ) { synchronized ( exts ) { ext = ext . toLowerCase ( ) ; exts . remove ( ext ) ; } }
13613	public static void writeLittleEndianInt ( DataOutputStream dataStream , int val ) throws IOException { int mask = _NUM ; for ( int shift = _NUM ; shift < _NUM ; shift += _NUM ) { dataStream . writeByte ( mask & ( val >> shift ) ) ; } }
13630	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
13660	private void selectEngine ( PacScriptSource pacSource ) { try { Logger . log ( getClass ( ) , LogLevel . INFO , _CHAR Using javax . script JavaScript engine . '' ) ; this . pacScriptParser = new JavaxPacScriptParser ( pacSource ) ; } catch ( Exception e ) { Logger . log ( getClass ( ) , LogLevel . ERROR , _CHAR PAC parser error . '' , e ) ; } }
13673	public synchronized boolean waitCompleted ( ) { while ( ! completed ) { try { wait ( ) ; } catch ( InterruptedException ie ) { System . err . println ( _CHAR FreeTTSSpeakableImpl : Wait interrupted _CHAR ) ; return _BOOL ; } } return ! cancelled ; }
13701	public static Set < Interval > mergeIntervalToSet ( Set < Interval > intervals , Interval intervalToMerge ) { LinkedHashSet < Interval > copyOfOriginalSet = new LinkedHashSet < > ( intervals ) ; copyOfOriginalSet . add ( intervalToMerge ) ; return mergeIntervalSet ( copyOfOriginalSet ) ; }
13705	private boolean checkCurrentAnimationPart ( AnimationPart part ) { switch ( part ) { case FIRST : { return mLoadingAnimationTime < getAnimationTimePart ( AnimationPart . FOURTH ) ; } case SECOND : case THIRD : { return mLoadingAnimationTime < getAnimationTimePart ( part ) ; } case FOURTH : { return mLoadingAnimationTime > getAnimationTimePart ( AnimationPart . THIRD ) ; } default : return _BOOL ; } }
13751	public boolean isClosed ( ) { return journalWriter == _NULL ; }
13769	static Schema schema ( Type fldType ) { Schema sch = new Schema ( ) ; sch . addField ( SCH_KEY , fldType ) ; sch . addField ( SCH_CHILD , BIGINT ) ; return sch ; }
13791	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
13795	@ Override public void write ( double value ) { double [ ] buffer = new double [ _NUM ] ; buffer [ _NUM ] = value ; write ( buffer , _NUM , _NUM ) ; }
13801	public void alwaysFails ( ) throws BrokenServiceException { LOG . info ( _CHAR { } called _CHAR , this . getClass ( ) . getSimpleName ( ) ) ; throw new BrokenServiceException ( _CHAR Provoked failure _CHAR ) ; }
13821	static int rootDistanceY ( ConstraintWidget widget ) { int rootHeight = widget . getParent ( ) . getHeight ( ) ; int aY = widget . getY ( ) ; int aHeight = widget . getHeight ( ) ; return Math . min ( aY , rootHeight - ( aY + aHeight ) ) ; }
13846	public static SM_SYSTEM_MESSAGE STR_ONE_IS_INCLUDED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13848	public Capabilities modifyCapabilities ( Capabilities capabilities ) { Capabilities modifiedCapabilities = capabilities ; for ( CapabilitiesModifier modifier : capabilitiesModifiers ) { modifiedCapabilities = modifier . modify ( capabilities ) ; } return modifiedCapabilities ; }
13883	public static < T > T lockResult ( Future < T > result , String lockPath ) throws LockingException { try { return Await . result ( result ) ; } catch ( LockingException le ) { throw le ; } catch ( Exception e ) { throw new LockingException ( lockPath , _CHAR Encountered exception on locking _CHAR , e ) ; } }
13890	public boolean hasDataConnector ( ) { return fileName != _NULL && fileName . length ( ) > _NUM && ( fileType . toString ( ) . startsWith ( _CHAR RMA _CHAR ) || fileType . toString ( ) . startsWith ( _CHAR DAA _CHAR ) || fileType == Type . MEGAN_SERVER_FILE ) ; }
13908	public int seed ( ) { return seed ; }
13945	@ Override public int read ( ) throws IOException { InputStream input = m_streams . get ( ) ; if ( _NULL != input ) { return input . read ( ) ; } else { return - _NUM ; } }
13955	public int id ( ) { return id ; }
13967	public final void writeMapleAsciiString ( final String s ) { writeShort ( ( short ) s . length ( ) ) ; writeAsciiString ( s ) ; }
13970	public static ItemStatus convertVersionStatus ( final ReleaseStatus release ) { switch ( release . getUpdateStatus ( ) ) { case CRITICAL : return ItemStatus . ERROR ; case UPDATE_RECOMMENDED : return ItemStatus . WARN ; case NEW_AVAILABLE : return ItemStatus . INFO ; case ON_LATEST : return ItemStatus . OK ; default : return ItemStatus . ERROR ; } }
13975	public void clear ( ) { int max = bits . length ; for ( int i = _NUM ; i < max ; i ++ ) { bits [ i ] = _NUM ; } }
13990	public static String formatQuantity ( float quantity ) { return formatQuantity ( ( double ) quantity ) ; }
14003	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
14011	private void handleInitializerBlocks ( soot . SootMethod sootMethod ) { ArrayList < Block > initializerBlocks = ( ( soot . javaToJimple . PolyglotMethodSource ) sootMethod . getSource ( ) ) . getInitializerBlocks ( ) ; if ( initializerBlocks != _NULL ) { handleStaticBlocks ( initializerBlocks ) ; } }
14051	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stumble_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
14067	private void checkColumnBounds ( int col ) { if ( col < _NUM || col >= getColumnCount ( ) ) { throw new IndexOutOfBoundsException ( _CHAR Column index is out of bounds : _CHAR + col ) ; } }
14069	public void postPaint ( Display d , Graphics2D g ) { g . setFont ( d . getFont ( ) ) ; g . setColor ( d . getForeground ( ) ) ; g . drawString ( PrefuseLib . getDisplayStats ( d ) , _NUM , _NUM ) ; }
14070	public SiteAdminActionBar expandDropDown ( SiteAdminButtons button ) { actions . moveToElement ( getButton ( button ) ) . perform ( ) ; actions . moveByOffset ( _NUM , _NUM ) . perform ( ) ; actions . click ( ) . perform ( ) ; return this ; }
14077	@ Override public void onException ( final JMSException exception ) { LOGGER . error ( _CHAR JMSException caught by JMS connection exception listener . Attempting to reconnect . '' , exception ) ; startReconnectThread ( ) ; }
14088	public static String utf8Encode ( String str , String defultReturn ) { if ( ! isEmpty ( str ) && str . getBytes ( ) . length != str . length ( ) ) { try { return URLEncoder . encode ( str , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException e ) { return defultReturn ; } } return str ; }
14109	protected final void fireColumnEvent ( int idx , int prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
14119	public static String utf8Encode ( String str , String defultReturn ) { if ( ! isEmpty ( str ) && str . getBytes ( ) . length != str . length ( ) ) { try { return URLEncoder . encode ( str , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException e ) { return defultReturn ; } } return str ; }
14126	protected void createVolume ( ) throws Throwable { sendContainerVolumeRequest ( VolumeOperationType . CREATE ) ; verifyVolumeStateExists ( volumeStateReference ) ; sendGetVolumeStateRequest ( ) ; }
14158	public BigInteger decrypt ( BigInteger c ) { BigInteger x = ModPowAbstraction . modPow ( c , lambdaN , NSquared ) ; BigInteger y = ( x . subtract ( BigInteger . ONE ) ) . divide ( N ) ; return ( y . multiply ( w ) ) . mod ( N ) ; }
14171	@ Override public void run ( ) { Context context = ApplicationStatus . getApplicationContext ( ) ; if ( ChromeVersionInfo . isOfficialBuild ( ) ) { Intent omahaIntent = OmahaClient . createInitializeIntent ( context ) ; context . startService ( omahaIntent ) ; } DelayedInvalidationsController . getInstance ( ) . notifyPendingInvalidations ( context ) ; }
14173	public boolean isThisPtr ( ) { if ( variable instanceof Pair ) { Pair o = ( Pair ) variable ; return o . isThisParameter ( ) ; } return _BOOL ; }
14222	public static boolean isContactPairEnabled ( ) { return contactPairEnabled ; }
14273	public static javax . ws . rs . core . Response makeErrorResponse ( StatusType status , Throwable cause , ObjectWriter writer ) { return makeErrorResponse ( status , _NULL , cause , writer ) ; }
14275	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
14278	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_PROC_ENCHANTED_TARGET_ITEM ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
14294	public static BigInteger publicKeyFromPrivate ( BigInteger privKey ) { ECPoint point = publicPointFromPrivate ( privKey ) ; byte [ ] encoded = point . getEncoded ( _BOOL ) ; return new BigInteger ( _NUM , Arrays . copyOfRange ( encoded , _NUM , encoded . length ) ) ; }
14297	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
14329	@ Override public String toString ( ) { String condition = acceptOlder ? _CHAR <= _CHAR : _CHAR > _CHAR ; return super . toString ( ) + _CHAR ( _CHAR + condition + cutoff + _CHAR ) _CHAR ; }
14345	public void extractSamplesTo ( Collection < String > samples , DataTable target ) { Set < String > toDelete = new HashSet < > ( ) ; toDelete . addAll ( sampleNames ) ; toDelete . removeAll ( samples ) ; target . copy ( this ) ; target . removeSamples ( toDelete ) ; }
14389	public String toString ( ) { return name ; }
14396	public void onClick ( int id ) { switch ( id ) { case _NUM : startLocationUpdates ( ) ; break ; case _NUM : stopLocationUpdates ( ) ; break ; } }
14397	private void saveMembershipMatrix ( final double [ ] [ ] matrix ) { for ( int i = _NUM ; i < points . size ( ) ; i ++ ) { System . arraycopy ( membershipMatrix [ i ] , _NUM , matrix [ i ] , _NUM , clusters . size ( ) ) ; } }
14429	public void assignNullSerializer ( JsonSerializer < Object > nullSer ) { if ( _nullSerializer != _NULL && _nullSerializer != nullSer ) { throw new IllegalStateException ( _CHAR Can not override _NULL serializer _CHAR ) ; } _nullSerializer = nullSer ; }
14440	@ Override public void endDocument ( ) throws SAXException { }
14459	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
14460	private void resetList ( ) { getPreferenceScreen ( ) . removeAll ( ) ; addPreferencesFromResource ( R . xml . website_preferences ) ; configureGlobalToggles ( ) ; if ( ( mCategory . showJavaScriptSites ( ) && ! PrefServiceBridge . getInstance ( ) . javaScriptEnabled ( ) ) ) { getPreferenceScreen ( ) . addPreference ( new AddExceptionPreference ( getActivity ( ) , ADD_EXCEPTION_KEY , getAddExceptionDialogMessage ( ) , this ) ) ; } }
14464	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_MAGIC_MY ( String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster ) ; }
14474	public void enableSwipeItem ( ) { itemSwipeEnabled = _BOOL ; }
14476	public void recordOpenedHistory ( ) { setFirstAction ( OPENED_HISTORY ) ; }
14479	@ Override public String checkIDRefID ( ) { return ( fIdIdrefChecking ) ? super . checkIDRefID ( ) : _NULL ; }
14489	public DatabaseGetRegionsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
14532	public PhotosSaveQuery photosList ( String value ) { return unsafeParam ( _CHAR photos_list _CHAR , value ) ; }
14539	public Value sqrt ( Value num ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
14562	public static SM_SYSTEM_MESSAGE STR_MSG_CONNECTION_STATUS ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14572	public static void log ( IStatus status ) { SVNUIPlugin . getPlugin ( ) . getLog ( ) . log ( status ) ; }
14577	public static Map < String , Object > returnErrorService ( DispatchContext dctx , Map < String , ? > context ) { Locale locale = ( Locale ) context . get ( _CHAR locale _CHAR ) ; return ServiceUtil . returnError ( UtilProperties . getMessage ( resource , _CHAR CommonServiceReturnError _CHAR , locale ) ) ; }
14583	public static SM_SYSTEM_MESSAGE STR_ENCHANT_ITEM_CANCELED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14593	public HeaderIterator iterator ( ) { return new SaveListHeaderIterator ( this . headers , _NULL ) ; }
14626	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
14643	public ChangeSet decrement ( String path , short delta ) { return increment ( path , - delta ) ; }
14693	@ Override public PolynomialFunctionLagrangeForm interpolate ( double x [ ] , double y [ ] ) throws MathIllegalArgumentException { return new PolynomialFunctionLagrangeForm ( x , y ) ; }
14709	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
14726	protected boolean isLastStep ( ) { return isLastStep ; }
14727	private void closeCounterDataInputStream ( ) throws DataFallbackException { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR Closing the counter file reader for the file '' + counterFile . getName ( ) ) ; if ( dInput != _NULL ) { try { dInput . close ( ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } finally { dInput = _NULL ; } } }
14740	@ Override public void finish ( ) throws QueryExecutionException { if ( _NULL != queryProperties . executorService ) { queryProperties . executorService . shutdownNow ( ) ; } }
14745	public ChangeSet decrement ( String path , double delta ) { return increment ( path , - delta ) ; }
14825	protected PhotosSaveMarketAlbumPhotoQuery server ( int value ) { return unsafeParam ( _CHAR server _CHAR , value ) ; }
14836	public static synchronized boolean isVerticalSyncEnabled ( ) { return verticalSyncEnabled ; }
14838	public boolean hasReportParams ( ) { return reportParams != _NULL && reportParams . isSet ( ) ; }
14843	public void onCreateApplication ( Application app ) { MainLoop . getInstance ( ) . onCreate ( ) ; }
14870	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
14889	public static boolean isBlazeProject ( Project project ) { return BlazeImportSettingsManager . getInstance ( project ) . getImportSettings ( ) != _NULL ; }
14891	public boolean isPrimitive ( ) { return ! isMessage ( ) && ! isEnum ( ) ; }
14897	public static int dpToPx ( int dp ) { float density = Resources . getSystem ( ) . getDisplayMetrics ( ) . density ; return Math . round ( dp * density ) ; }
14901	public static String formatQuantity ( Integer quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return formatQuantity ( quantity . doubleValue ( ) ) ; }
14933	public < E extends ProtoElement > Iterable < E > reachable ( Iterable < E > elems ) { return scoper . filter ( elems ) ; }
14947	int size ( BinarySearchTreeNode < E > node ) { if ( node == _NULL ) return _NUM ; if ( node . left == _NULL && node . right == _NULL ) return _NUM ; return _NUM + this . size ( node . left ) + this . size ( node . right ) ; }
14955	public static Map < String , String > strToMap ( String str , String delim , boolean trim ) { return strToMap ( str , delim , trim , _NULL ) ; }
14959	public boolean isParameter ( ) { if ( o1 instanceof SootMethod && o2 instanceof Integer ) return _BOOL ; return _BOOL ; }
14983	public static boolean isCarbonDataFile ( String fileNameWithPath ) { int pos = fileNameWithPath . lastIndexOf ( _CHAR ) ; if ( pos != - _NUM ) { return fileNameWithPath . substring ( pos ) . startsWith ( CARBON_DATA_EXT ) ; } return _BOOL ; }
15017	public Expression matches ( Value str , Value regexp , String single , String multi , String escape ) { if ( escape != _NULL ) throw new IllegalArgumentException ( _CHAR JPQL ESCAPE keyword is not supported . '' ) ; return new MatchesExpression ( str , regexp ) ; }
15024	public String parse ( String str , Model m ) { try { str = VEngine . parse ( str , m . context ) ; } catch ( Exception e ) { log . error ( str , e ) ; } return str ; }
15051	public void registerForUpdates ( ) { SigninManager manager = SigninManager . get ( getContext ( ) ) ; manager . addSignInAllowedObserver ( this ) ; ProfileDownloader . addObserver ( this ) ; FirstRunSignInProcessor . updateSigninManagerFirstRunCheckDone ( getContext ( ) ) ; }
15052	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
15055	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; try { camera . autoFocus ( autoFocusCallback ) ; } catch ( RuntimeException re ) { Log . w ( TAG , _CHAR Unexpected exception while focusing '' , re ) ; } } }
15059	private void addTabId ( int index , int tabId ) { assert tabId != Tab . INVALID_TAB_ID ; if ( mTabIdList . contains ( tabId ) ) return ; mTabIdList . add ( index , tabId ) ; }
15137	public static DoubleBuffer createDoubleBuffer ( int size ) { DoubleBuffer buf = ByteBuffer . allocateDirect ( _NUM * size ) . order ( ByteOrder . nativeOrder ( ) ) . asDoubleBuffer ( ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
15155	public void newSampleData ( double [ ] y , double [ ] [ ] x , double [ ] [ ] covariance ) { validateSampleData ( x , y ) ; newYSampleData ( y ) ; newXSampleData ( x ) ; validateCovarianceData ( x , covariance ) ; newCovarianceData ( covariance ) ; }
15164	private CountingThreadPoolExecutor createExecutor ( int numThreads ) { return new CountingThreadPoolExecutor ( maxThreadNum == - _NUM ? numThreads : Math . min ( maxThreadNum , numThreads ) , Integer . MAX_VALUE , _NUM , TimeUnit . SECONDS , new LinkedBlockingQueue < Runnable > ( ) ) ; }
15171	@ Override public void stop ( Runnable callback ) { stop ( ) ; callback . run ( ) ; }
15224	public PokestopLootResult loot ( ) throws LoginFailedException , RemoteServerException { return AsyncHelper . toBlocking ( lootAsync ( ) ) ; }
15234	public boolean isIgnoreInactive ( ) { return this . ignoreInactive ; }
15245	public void removeAtRange ( int index , int size ) { final int end = Math . min ( mSize , index + size ) ; for ( int i = index ; i < end ; i ++ ) { removeAt ( i ) ; } }
15253	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; } }
15258	@ GlobalCallback ( PlayerGroupDisbandCallback . class ) public static void disband ( PlayerGroup group ) { Preconditions . checkState ( group . onlineMembers ( ) <= _NUM , _CHAR Ca n _CHAR_CHAR ) ; groups . remove ( group . getTeamId ( ) ) ; group . onEvent ( new GroupDisbandEvent ( group ) ) ; }
15285	public GaussianCurveFitter withStartPoint ( double [ ] newStart ) { return new GaussianCurveFitter ( newStart . clone ( ) , maxIter ) ; }
15288	private boolean isRegisterUsed ( int register ) { Instruction35c i = ( Instruction35c ) instruction ; return register == i . getRegisterD ( ) || register == i . getRegisterE ( ) || register == i . getRegisterF ( ) || register == i . getRegisterG ( ) || register == i . getRegisterC ( ) ; }
15304	public synchronized void recordStatistics ( QueryStatistic statistic ) { }
15314	public static byte [ ] extractBinaryHttpEntityBody ( HttpContent httpContent ) { return BrowserMobHttpUtil . extractReadableBytes ( httpContent . content ( ) ) ; }
15345	public boolean isIgnoreSensors ( ) { return sensors ; }
15352	public < X extends DataSource > void registerPropertiesProvider ( PropertiesProvider < X > provider , Class < X > scope ) { providers . put ( provider , scope ) ; }
15365	public void putAuxiliaryData ( Map < String , byte [ ] > label2data ) throws IOException { ( new RMA2File ( file ) ) . replaceAuxiliaryData ( label2data ) ; }
15367	public void inc ( Counter < KeyType > another ) { for ( Entry < KeyType , Long > e : another . hash . entrySet ( ) ) { inc ( e . getKey ( ) , e . getValue ( ) ) ; } }
15372	public Tuple [ ] clearInternal ( ) { Tuple [ ] t = new Tuple [ getTupleCount ( ) ] ; Iterator iter = tuples ( ) ; for ( int i = _NUM ; iter . hasNext ( ) ; ++ i ) { t [ i ] = ( Tuple ) iter . next ( ) ; } m_tuples . clear ( ) ; return t ; }
15376	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
15383	@ Override public void onReset ( ) { onDestroy ( ) ; }
15385	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
15398	@ Override public void write ( int ch ) throws IOException { OutputStream output = m_streams . get ( ) ; if ( _NULL != output ) { output . write ( ch ) ; } }
15405	@ Override public void clear ( ) { Node < E > node ; while ( ( node = top . get ( ) ) != _NULL ) { top . compareAndSet ( node , node . next ) ; } }
15431	public boolean hasReportParams ( ) { return reportParams != _NULL ; }
15437	public void unRegisterListener ( ) { mFCMListener = _NULL ; }
15447	public boolean isGridRowCheckboxSelected ( ) { return gridRow . getAttribute ( HtmlTags . Attributes . CLASS ) . contains ( ROW_SELECTED_CLASS ) ; }
15457	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_POLISH_ITEM ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
15467	public MarketSearchQueryWithExtended q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
15506	@ Path ( ) public void onGet ( ) { try { if ( Helper . isConfigured ( ) ) { this . redirect ( _CHAR / _CHAR ) ; return ; } this . show ( _CHAR / admin / setup . html _CHAR ) ; } catch ( Exception e1 ) { log . debug ( e1 . getMessage ( ) , e1 ) ; this . error ( e1 ) ; } }
15511	public final String toJson ( ) { return getGson ( ) . toJson ( this ) ; }
15523	public int hashCode ( ) { int hash = _NUM ; for ( int i = permissions . length ; -- i >= _NUM ; ) { hash += permissions [ i ] . hashCode ( ) ; } return hash ; }
15524	public static void override ( List < FileSystemInterface > overrideExtensionList ) { if ( overrideExtensionList != _NULL ) { extensionList = overrideExtensionList ; } else { extensionList . clear ( ) ; } }
15557	public synchronized int size ( ) { return count ; }
15558	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
15588	public void addOverlappingView ( View view , int width , int height ) { mFrameLayoutOverlappingViewContainer . addView ( view , width , height ) ; mOverlappingViewsMap . put ( view . getId ( ) , view ) ; }
15611	private boolean canAddTask ( ) { return tCur == _NULL ; }
15636	public synchronized boolean isClosed ( ) { return journalWriter == _NULL ; }
15641	public static void resetAll ( Context context ) { PrefsManager . resetAll ( context ) ; }
15652	public WallRepostQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
15682	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; } }
15685	public boolean increment ( short key ) { return adjustValue ( key , ( long ) _NUM ) ; }
15724	public static SM_SYSTEM_MESSAGE STR_ENCHANT_ITEM_IT_CAN_NOT_BE_ENCHANTED_MORE_TIME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15727	public boolean isParallelTo ( final Line line ) { return FastMath . abs ( MathArrays . linearCombination ( sin , line . cos , - cos , line . sin ) ) < tolerance ; }
15731	public AccountLookupContactsQuery mycontact ( String value ) { return unsafeParam ( _CHAR mycontact _CHAR , value ) ; }
15786	public ThrowStmt newThrowStmt ( Value op ) { return new GThrowStmt ( op ) ; }
15787	public UsersSearchQuery schoolCity ( Integer value ) { return unsafeParam ( _CHAR school_city _CHAR , value ) ; }
15795	public static boolean isCarbonIndexFile ( String fileNameWithPath ) { int pos = fileNameWithPath . lastIndexOf ( _CHAR ) ; if ( pos != - _NUM ) { return fileNameWithPath . substring ( pos ) . startsWith ( INDEX_FILE_EXT ) ; } return _BOOL ; }
15803	public int hashCode ( ) { return id . hashCode ( ) ; }
15842	public boolean isString ( String name ) { Param p = type . params . get ( name ) ; assert p != _NULL : _CHAR name \ _CHAR _CHAR + name + _CHAR \ _CHAR is not a known parameter _CHAR ; Object v = params . get ( name ) ; return v instanceof String ; }
15856	private void printErrorMessage ( String errorMsg ) { consoleWriter . newLine ( ) . fg ( Ansi . Color . RED ) . a ( errorMsg ) . println ( _NUM ) ; }
15872	public InvokeStmt newInvokeStmt ( Value op ) { return new JInvokeStmt ( op ) ; }
15873	public static void writeFileRaw ( String fileName , byte [ ] [ ] contents ) throws IOException { try ( OutputStream output = new BufferedOutputStream ( new FileOutputStream ( fileName ) ) ) { for ( byte [ ] content : contents ) { output . write ( content ) ; } output . flush ( ) ; } }
15882	public static boolean isBoundsEnabled ( ) { return boundsEnabled ; }
15884	public void stop ( ) { synchronized ( this ) { mStopped = _BOOL ; if ( mListenerThread == _NULL ) { return ; } } mListenerThread . interrupt ( ) ; try { if ( mServerSocket != _NULL ) { mServerSocket . close ( ) ; } } catch ( IOException e ) { } }
15887	public PhotosGetMarketUploadServerQuery mainPhoto ( Boolean value ) { return unsafeParam ( _CHAR main_photo _CHAR , value ) ; }
15892	protected void onCreate ( ActivitiEvent event ) { }
15896	public static double acosh ( final double a ) { return FastMath . log ( a + FastMath . sqrt ( a * a - _NUM ) ) ; }
15914	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
15915	public Builder withVerbosity ( ) { this . verbose = _BOOL ; return this ; }
15936	public static RenameFileDialogFragment newInstance ( OCFile file ) { RenameFileDialogFragment frag = new RenameFileDialogFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_TARGET_FILE , file ) ; frag . setArguments ( args ) ; return frag ; }
15953	private Builder noClip ( Boolean noClip ) { this . noClip = noClip ; return this ; }
15957	public Constant nextVal ( Type type ) { Constant val = pg . getVal ( currentPos , type ) ; currentPos += Page . size ( val ) ; return val ; }
15982	public void clear ( ) { int max = bits . length ; for ( int i = _NUM ; i < max ; i ++ ) { bits [ i ] = _NUM ; } }
15985	public boolean inheritedParameters ( ) { return this . inheritedParameters ; }
16000	public void mouseReleased ( ) { mSnapCandidates . clear ( ) ; }
16014	@ ObjectiveCName ( _CHAR unlisten : _CHAR ) public void unlisten ( String pattern ) { UtilListener listener = listeners . get ( pattern ) ; if ( listener != _NULL ) { listener . destroy ( ) ; listeners . remove ( pattern ) ; } else { client . onError ( Topic . RECORD , Event . NOT_LISTENING , pattern ) ; } }
16043	public void sort ( ) { for ( VarNode v : pag . getVarNodeNumberer ( ) ) { dfsVisit ( v ) ; } visited = _NULL ; }
16050	private AudioInputStream synthesizeVocalization ( AudioFileFormat aft , Element domElement ) throws SynthesisException { int numberOfBackChannels = unitFileReader . getNumberOfUnits ( ) ; int backchannelNumber = vSelector . getBestMatchingCandidate ( domElement ) ; assert backchannelNumber < numberOfBackChannels : _CHAR This voice has _CHAR + numberOfBackChannels + _CHAR backchannels only . so it does n _CHAR_CHAR + backchannelNumber ; return synthesizeSelectedVocalization ( backchannelNumber , aft , domElement ) ; }
16060	private void playBoosterSound ( World world , BlockPos pos , double planarMotion ) { if ( ! world . isRemote && planarMotion > _NUM . _NUM && world . rand . nextDouble ( ) < planarMotion ) world . playSound ( _NULL , pos , SoundEvents . BLOCK_WOOD_BUTTON_CLICK_ON , SoundCategory . BLOCKS , _NUM . _NUM , _NUM . _NUM ) ; }
16061	public int length ( ) { return bytes . length ; }
16062	public final void write ( final byte [ ] b ) { for ( int x = _NUM ; x < b . length ; x ++ ) { baos . write ( b [ x ] ) ; } }
16072	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
16122	public String localName ( ) { return theLocalName ; }
16140	@ Override public void endEffect ( Effect effect ) { Creature effected = effect . getEffected ( ) ; effected . getGameStats ( ) . endEffect ( effect ) ; }
16161	static public String bb2hex ( byte [ ] bb ) { StringBuilder result = new StringBuilder ( ) ; for ( int i = _NUM ; i < bb . length ; i ++ ) { result . append ( String . format ( _CHAR % _NUM _CHAR , bb [ i ] ) ) ; } return result . toString ( ) ; }
16175	public static String replaceString ( String mainString , String oldString , String newString ) { return StringUtil . replaceString ( mainString , oldString , newString ) ; }
16186	public static final SM_SYSTEM_MESSAGE STR_MSG_UNEQUIP_RANKITEM ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
16189	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
16198	@ Override public boolean accept ( File file ) { return file . isHidden ( ) ; }
16204	public boolean isActiveStepCompleted ( ) { return isStepCompleted ( activeStep ) ; }
16206	public static SM_SYSTEM_MESSAGE STR_MSG_TOWER_DEFENCE_ENTERED_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16221	private static boolean snapHorizontalGrid ( Point candidatePoint ) { int x = candidatePoint . x ; x = ( x / SceneDraw . GRID_SPACING ) * SceneDraw . GRID_SPACING ; candidatePoint . x = x ; return _BOOL ; }
16232	public void init ( Context context ) { boolean isNightModel = PersistenceUtils . isNightModel ( context ) ; AppCompatDelegate . setDefaultNightMode ( isNightModel ? AppCompatDelegate . MODE_NIGHT_YES : AppCompatDelegate . MODE_NIGHT_NO ) ; }
16236	private void handleResponse ( int response , ResponseData rawData ) { mPolicy . processServerResponse ( response , rawData ) ; if ( mPolicy . allowAccess ( ) ) { mCallback . allow ( response ) ; } else { mCallback . dontAllow ( response ) ; } }
16240	public boolean touchInside ( ) { return insideTouching != _NULL && ! insideTouching . isEmpty ( ) ; }
16243	protected AdsRemoveOfficeUsersQuery ids ( String value ) { return unsafeParam ( _CHAR ids _CHAR , value ) ; }
16259	public void stopPreview ( ) { if ( mCamera != _NULL && mPreviewing ) { mCamera . stopPreview ( ) ; mPreviewCallback . setHandler ( _NULL , _NUM ) ; mAutoFocusCallback . setHandler ( _NULL , _NUM ) ; mPreviewing = _BOOL ; } }
16297	public static float parseFloat ( String text ) throws DataParseException { try { return Float . parseFloat ( text ) ; } catch ( NumberFormatException e ) { throw new DataParseException ( e ) ; } }
16304	public static final void changeGroupRules ( PlayerGroup group , LootGroupRules lootRules ) { group . onEvent ( new ChangeGroupLootRulesEvent ( group , lootRules ) ) ; }
16319	public boolean containsEx ( int memberObjId ) { return legionMemberExById . containsKey ( memberObjId ) ; }
16326	private void openCounterDataInputStream ( ) throws DataFallbackException { if ( dInput == _NULL ) { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR openDataInputStream ( ) ; Opening the reader for the '' + counterFile . getName ( ) + _CHAR file _CHAR ) ; try { dInput = new BufferedReader ( new FileReader ( counterFile ) ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } } }
16331	public boolean showMicrophoneSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_MEDIASTREAM_MIC ; }
16348	public boolean isFullSplitSystem ( Taxa taxa ) { BitSet bits = taxa . getBits ( ) ; for ( Iterator it = iterator ( ) ; it . hasNext ( ) ; ) { Split split = ( Split ) it . next ( ) ; if ( ! split . getTaxa ( ) . equals ( bits ) ) return _BOOL ; } return _BOOL ; }
16350	public void check ( long animationDurationMS ) { if ( state == FLAG_STATE_CHECK ) { return ; } toggle ( animationDurationMS ) ; }
16372	private void initActionBarDrawerToggle ( ) { mActionBarDrawerToggle = new ActionBarDrawerToggle ( ( Activity ) getContext ( ) , mDelegate . getDrawerLayout ( ) , this , R . string . accessibility_enhanced_bookmark_drawer_toggle_btn_open , R . string . accessibility_enhanced_bookmark_drawer_toggle_btn_close ) ; mDelegate . getDrawerLayout ( ) . setDrawerListener ( mActionBarDrawerToggle ) ; mActionBarDrawerToggle . syncState ( ) ; }
16395	public void updateCurrentTag ( String tagPath ) { scenarioContext . add ( ContextKeys . CURRENT_TAG , tagPath ) ; }
16397	public void put ( String key , String value ) { if ( key != _NULL && value != _NULL ) { urlParams . put ( key , value ) ; } }
16408	public boolean hasBOM ( ByteOrderMark bom ) throws IOException { if ( ! boms . contains ( bom ) ) { throw new IllegalArgumentException ( _CHAR Stream not configure to detect _CHAR + bom ) ; } return byteOrderMark != _NULL && getBOM ( ) . equals ( bom ) ; }
16415	public static void launchActivityFromFragment ( FragmentActivity context , Class < ? extends Activity > activity , boolean closeCurrentActivity ) { ActivityUtils . launchActivity ( context , activity , closeCurrentActivity , _NULL , _NULL ) ; }
16418	public void waitUntilCompletion ( ) throws InterruptedException { Iterator iIter = qThreads . iterator ( ) ; while ( iIter . hasNext ( ) ) { Thread tCur = ( Thread ) iIter . next ( ) ; if ( tCur . isAlive ( ) ) tCur . join ( ) ; } }
16456	@ Override public Constant evaluate ( Record rec ) { return val ; }
16461	public void initializeWith ( IntArrayList list , DictionaryMap map ) { for ( int key : list ) { add ( map . get ( key ) ) ; } }
16478	public void showMenu ( ) { mSlidingMenu . showMenu ( ) ; }
16494	public static IntBuffer createIntBuffer ( int size ) { IntBuffer buf = ByteBuffer . allocateDirect ( _NUM * size ) . order ( ByteOrder . nativeOrder ( ) ) . asIntBuffer ( ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
16505	public static String formatPercentage ( double percentage ) { return percentageDecimalFormat . format ( percentage ) ; }
16538	public static double db2linear ( double dbEnergy ) { if ( Double . isNaN ( dbEnergy ) ) return _NUM . ; else return exp10 ( dbEnergy / _NUM ) ; }
16559	public JimpleBody newBody ( ) { return new JimpleBody ( ) ; }
16583	public void add ( String key , String value ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value _CHAR ) ; } synchronized ( contexts ) { contexts . add ( Maps . immutableEntry ( key , value ) ) ; } }
16595	public void discardP2Set ( ) { p2set = _NULL ; }
16600	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
16609	public void put ( String key , String value ) { if ( key != _NULL && value != _NULL ) { urlParams . put ( key , value ) ; } }
16616	public boolean hasProgramStatus ( ) { return programStatus != _NULL ; }
16632	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
16664	public boolean isDomainSuffix ( String extension ) { return domains . containsKey ( extension ) ; }
16689	@ Override public boolean isEnableVersioning ( ) { return super . isEnableVersioning ( ) ; }
16707	public byte [ ] compress ( long [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
16725	@ RequestMapping ( value = { _CHAR / logout _CHAR } , method = RequestMethod . GET ) public String returnLogoutView ( ) { return _CHAR newLogout _CHAR ; }
16728	private Object readResolve ( ) throws ObjectStreamException { UInteger cached ; rangeCheck ( value ) ; if ( ( cached = getCached ( value ) ) != _NULL ) return cached ; return this ; }
16732	public static boolean isInvalid ( int c ) { return ! isValid ( c ) ; }
16787	public void build ( RealmResults < T > results ) { int xIndex = _NUM ; for ( T object : results ) { mValues . add ( buildEntryFromResultObject ( object , xIndex ++ ) ) ; } }
16791	void dumpBinary ( DataOutputStream os ) throws IOException { os . writeInt ( type ) ; os . writeInt ( phone ) ; os . writeInt ( start ) ; os . writeInt ( end ) ; os . writeInt ( prev ) ; os . writeInt ( next ) ; }
16800	public static synchronized boolean isBodyLabeled ( ) { return bodyLabeled ; }
16824	protected void drawEntryLabel ( Canvas c , String label , float x , float y ) { }
16836	@ Override public void onIntroduceType ( IntroduceTypeData introduceTypeData ) { SpaceSynchronizationEndpoint endpointInterceptor = getEndpoint ( introduceTypeData . getTypeDescriptor ( ) . getTypeName ( ) ) ; if ( endpointInterceptor != _NULL ) endpointInterceptor . onIntroduceType ( introduceTypeData ) ; }
16846	public int truncate_file1 ( String appender_file_id ) throws IOException , MyException { String [ ] parts = new String [ _NUM ] ; this . errno = this . split_file_id ( appender_file_id , parts ) ; if ( this . errno != _NUM ) { return this . errno ; } return this . truncate_file ( parts [ _NUM ] , parts [ _NUM ] ) ; }
16924	public int hashCode ( ) { return ( int ) ( ConnectionAbsoluteTime . class . hashCode ( ) + time ) ; }
16936	public void closeThriftReader ( ) { thriftReader . close ( ) ; }
16938	private static boolean isSchemeCharacter ( char p_char ) { return ( p_char <= _CHAR && ( fgLookupTable [ p_char ] & MASK_SCHEME_CHARACTER ) != _NUM ) ; }
16945	public boolean onOverrideUrlLoading ( String url ) { for ( PluginEntry entry : this . entryMap . values ( ) ) { CordovaPlugin plugin = pluginMap . get ( entry . service ) ; if ( plugin != _NULL && plugin . onOverrideUrlLoading ( url ) ) { return _BOOL ; } } return _BOOL ; }
16961	public void addActionClickListener ( int id , OnClickListener clickListener ) { ActionButton button = ( ActionButton ) buttonBar . findViewById ( id ) ; if ( button != _NULL ) { button . setOnClickListener ( clickListener ) ; } }
16981	public Builder takeFirstColumns ( String ... columns ) { return add ( ReduceOp . TakeFirst , columns ) ; }
16994	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stagger_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
17021	public double latDegrees ( ) { return _NUM . _NUM / Math . PI * latRadians ; }
17022	public static void applyDrawableToImageView ( Drawable drawable , ImageView view , int color ) { drawable . mutate ( ) . setColorFilter ( color , PorterDuff . Mode . MULTIPLY ) ; view . setImageDrawable ( drawable ) ; }
17036	public boolean more ( ) { return pos < in . length ( ) ; }
17037	public static int alpha ( int color ) { return ( color >> _NUM ) & _NUM ; }
17048	public static final SM_SYSTEM_MESSAGE STR_MAIL_CASHITEM_GIFT ( int itemId ) { return new SM_SYSTEM_MESSAGE ( _NUM , _CHAR [ item : _CHAR + itemId + _CHAR ] _CHAR ) ; }
17062	public void stop ( ) { running = _BOOL ; }
17117	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_ATTACK ( int num1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0 ) ; }
17119	public void initialiseSelectedStyledLayerIndex ( ) { this . selectedStyledLayerIndex = _NUM ; }
17128	public static SM_SYSTEM_MESSAGE STR_MSG_LOOT_GET_ITEM_ME ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
17155	public boolean isAggregate ( ) { return _BOOL ; }
17161	public synchronized boolean isClosed ( ) { return journalWriter == _NULL ; }
17171	public static int dipToPX ( final Context ctx , float dip ) { return ( int ) TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dip , ctx . getResources ( ) . getDisplayMetrics ( ) ) ; }
17172	private boolean isMultipleSelection ( ) { return getMaxSelectionIndex ( ) - getMinSelectionIndex ( ) > _NUM ; }
17203	public boolean isSet ( final OPTION option ) { return options == _NULL ? _BOOL : options . contains ( option ) ; }
17222	public void handleLegionRequest ( int exOpcode , Player activePlayer , String text ) { switch ( exOpcode ) { case _NUM : changeAnnouncement ( activePlayer , text ) ; break ; case _NUM : changeSelfIntro ( activePlayer , text ) ; break ; } }
17241	public List < GenericValue > queryList ( ) throws GenericEntityException { return query ( _NULL ) ; }
17252	private Reader createUTF8Reader ( InputStream stream ) { return new UTF8Reader ( stream , fTempString . ch . length , fErrorReporter . getMessageFormatter ( XMLMessageFormatter . XML_DOMAIN ) , fErrorReporter . getLocale ( ) ) ; }
17256	@ Override public boolean satisfiedBy ( Granularity that ) { return _BOOL ; }
17257	public void requestAutoFocus ( Handler handler , int message ) { if ( mCamera != _NULL && mPreviewing ) { mAutoFocusCallback . setHandler ( handler , message ) ; mCamera . autoFocus ( mAutoFocusCallback ) ; } }
17265	private void widgetModified ( ) { if ( mWidget == _NULL ) { return ; } if ( ! mWidgetModified ) { mConstraintModel . getSelection ( ) . addModifiedWidget ( mWidget ) ; } mWidgetModified = _BOOL ; mConstraintModel . getDrawConstraintModels ( ) . forEach ( _NULL ) ; saveWidget ( ) ; }
17280	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM } ; }
17285	public boolean addProcessId ( final Long processId ) { if ( processId != _NULL && processId > _NUM ) { return processIds . add ( processId ) ; } return _BOOL ; }
17293	public void upload ( File zippedFile ) { throw new UnsupportedOperationException ( ) ; }
17316	public static void abort ( @ Nullable AsyncAbortable abortable , boolean swallowIOException ) throws IOException { if ( _NULL == abortable ) { return ; } try { FutureUtils . result ( abortable . asyncAbort ( ) ) ; } catch ( IOException ioe ) { if ( swallowIOException ) { logger . warn ( _CHAR IOException thrown while aborting Abortable { } : _CHAR , abortable , ioe ) ; } else { throw ioe ; } } }
17322	public static char [ ] readChars ( DataInputStream dis , int num ) throws IOException { char [ ] carray = new char [ num ] ; for ( int i = _NUM ; i < num ; i ++ ) { carray [ i ] = readChar ( dis ) ; } return carray ; }
17338	private void openFile ( ) { mContainerActivity . getFileOperationsHelper ( ) . openFile ( getFile ( ) ) ; finish ( ) ; }
17343	private boolean isGCMBaseIntentService ( SootClass currentClass ) { while ( currentClass . hasSuperclass ( ) ) { if ( currentClass . getSuperclass ( ) . getName ( ) . equals ( AndroidEntryPointConstants . GCMBASEINTENTSERVICECLASS ) ) return _BOOL ; currentClass = currentClass . getSuperclass ( ) ; } return _BOOL ; }
17367	public void update ( GpsSettingsOuterClass . GpsSettings gpsSettings ) { drivingWarningSpeedMetersPerSecond = gpsSettings . getDrivingWarningSpeedMetersPerSecond ( ) ; drivingWarningCooldownMinutes = gpsSettings . getDrivingWarningCooldownMinutes ( ) ; drivingSpeedSampleIntervalSeconds = gpsSettings . getDrivingSpeedSampleIntervalSeconds ( ) ; drivingSpeedSampleCount = gpsSettings . getDrivingSpeedSampleCount ( ) ; }
17381	public UnrevealBuilder withShowFromViewInterpolatedDuration ( final float showFromViewInterpolatedDuration ) { this . mShowFromViewInterpolatedDuration = showFromViewInterpolatedDuration ; return this ; }
17391	@ TargetApi ( VERSION_CODES . GINGERBREAD ) public static boolean isExternalStorageRemovable ( ) { if ( Utils . hasGingerbread ( ) ) { return Environment . isExternalStorageRemovable ( ) ; } return _BOOL ; }
17417	public Object removeInternalSetting ( Object key ) { Object removed = _NULL ; if ( _internalSettings != _NULL ) { removed = _internalSettings . remove ( key ) ; if ( _internalSettings . size ( ) == _NUM ) { _internalSettings = _NULL ; } } return removed ; }
17418	public FriendsGetSuggestionsQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
17485	public PolynomialSplineFunction polynomialSplineDerivative ( ) { PolynomialFunction derivativePolynomials [ ] = new PolynomialFunction [ n ] ; for ( int i = _NUM ; i < n ; i ++ ) { derivativePolynomials [ i ] = polynomials [ i ] . polynomialDerivative ( ) ; } return new PolynomialSplineFunction ( knots , derivativePolynomials ) ; }
17497	public AggregationSet count ( String path ) { return add ( new CountAggregator ( ) . setPath ( path ) ) ; }
17543	@ Override public void shutdown ( ) throws RemoteException { shutdown ( _BOOL , _BOOL ) ; }
17544	public void addDocument ( Document d ) { if ( ! m_readMode ) { try { writer . addDocument ( d ) ; m_hitCountCache . clear ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } else { throw new IllegalStateException ( _CHAR Documents can not be added to the index unless _CHAR + _CHAR the LuceneSearcher is not in read mode _CHAR ) ; } }
17546	public boolean isFile ( ) { return _BOOL ; }
17553	@ Override public void clearDataTags ( ) { dataTagTable . clear ( ) ; }
17579	public static SM_SYSTEM_MESSAGE STR_SKILL_NOT_LEARNED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17580	public static String formatQuantity ( double quantity ) { return quantityDecimalFormat . format ( quantity ) ; }
17599	public static ExecutableElement findInjectedCtor ( TypeElement cls , ProcessingEnvironment env ) { for ( Element element : cls . getEnclosedElements ( ) ) { if ( element . getKind ( ) . equals ( ElementKind . CONSTRUCTOR ) && isInjected ( element , env ) ) { return ( ExecutableElement ) element ; } } return _NULL ; }
17659	public boolean contains ( String name ) { return legionsByName . containsKey ( name . toLowerCase ( ) ) ; }
17719	protected void initSentenceRepresentationFilter ( ) { if ( SentenceRepresentationFilter == _NULL ) SentenceRepresentationFilter = new IdentityObjectFilter < DocumentNGramGraph > ( ) ; }
17745	private String toCommaSeparatedString ( List < ? > proxyExceptions ) { StringBuilder result = new StringBuilder ( ) ; for ( Object object : proxyExceptions ) { if ( result . length ( ) > _NUM ) { result . append ( _CHAR , _CHAR ) ; } result . append ( object ) ; } return result . toString ( ) ; }
17750	public boolean isAnimating ( ) { return mAnimation . step ( ) ; }
17764	public boolean isQuery ( ) { return SqlViewType . QUERY . equals ( type ) ; }
17777	public synchronized void resetTime ( ) { }
17791	public Set < AggregationFn > aggregationFn ( ) { return aggFn ; }
17809	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
17827	@ Override public boolean accept ( File file ) { if ( file . isDirectory ( ) ) { File [ ] files = file . listFiles ( ) ; return files == _NULL || files . length == _NUM ; } else { return file . length ( ) == _NUM ; } }
17832	protected void onDelete ( ActivitiEvent event ) { }
17853	public boolean containsKey ( Object key ) { return indexOfKey ( key ) >= _NUM ; }
17860	public static String formatQuantity ( Long quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return formatQuantity ( quantity . doubleValue ( ) ) ; }
17882	public void remove ( IAdaptable a ) { children . remove ( a ) ; }
17919	public boolean hasTrackedEntity ( ) { return trackedEntity != _NULL ; }
17926	public boolean isAbsoluteURI ( ) { return ( m_scheme != _NULL ) ; }
17952	@ Override public boolean equals ( Object object ) { if ( object instanceof QName ) { QName qname = ( QName ) object ; return uri == qname . uri && localpart == qname . localpart ; } return _BOOL ; }
17972	public void onContentLoadFinished ( ) { }
17997	default boolean hasDataFromCommand ( ) { return _BOOL ; }
18002	public < T > void addEntry ( Class < T > resource , RegistryEntry < ? extends T > registryEntry ) { resources . put ( resource , registryEntry ) ; registryEntry . initialize ( this ) ; logger . debug ( _CHAR Added resource { } to ResourceRegistry _CHAR , resource . getName ( ) ) ; }
18033	@ Override public boolean include ( String identifier ) { return ! blacklist . contains ( identifier ) ; }
18037	public static SM_SYSTEM_MESSAGE STR_GUILD_EVENT_LEVELUP ( int newLevel ) { return new SM_SYSTEM_MESSAGE ( _NUM , newLevel ) ; }
18054	private synchronized void addTracker ( String path , Object marker , FileDeleteStrategy deleteStrategy ) { if ( exitWhenFinished ) { throw new IllegalStateException ( _CHAR No new trackers can be added once exitWhenFinished ( ) is called _CHAR ) ; } if ( reaper == _NULL ) { reaper = new Reaper ( ) ; reaper . start ( ) ; } trackers . add ( new Tracker ( path , deleteStrategy , marker , q ) ) ; }
18082	public void showContent ( ) { mSlidingMenu . showContent ( ) ; }
18088	public boolean isMap ( ) { return card == Cardinality . REPEATED && kind == Type . TYPE_MESSAGE && messageType . getProto ( ) . getOptions ( ) . getMapEntry ( ) ; }
18106	public boolean hasTrackedEntity ( ) { return trackedEntity != _NULL ; }
18111	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( getInt ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
18137	public AggregationSet average ( String path ) { return add ( new AverageAggregator ( ) . setPath ( path ) ) ; }
18153	public void tabLoadFinished ( int id ) { StripLayoutTab tab = findTabById ( id ) ; if ( tab != _NULL ) tab . loadingFinished ( ) ; }
18155	public static < T > List < T > asList ( T ... a ) { ArrayList < T > list = new ArrayList < T > ( ) ; for ( T elem : a ) list . add ( elem ) ; return list ; }
18157	private void signInWithGPlus ( ) { Intent signInIntent = Auth . GoogleSignInApi . getSignInIntent ( mGoogleApiClient ) ; startActivityForResult ( signInIntent , RC_SIGN_IN ) ; }
18167	private boolean shouldHideOverlayPanelLayout ( ) { final PanelState state = getPanelState ( ) ; return ( state == PanelState . PEEKED || state == PanelState . CLOSED ) && getHeight ( ) == getPanelHeightFromState ( state ) ; }
18184	public AemContentFinder collapse ( ) { if ( isExpanded ( ) ) { bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ContentFinderActions . collapse ( ) ) ; bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . visibilityOf ( expandButton ) ) ; } return this ; }
18186	public boolean showFullscreenSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_FULLSCREEN ; }
18193	private void skipToNextBlock ( ) { while ( ! builder . eof ( ) ) { if ( atTokenSequence ( ProjectViewTokenType . NEWLINE , ProjectViewTokenType . IDENTIFIER ) ) { builder . advanceLexer ( ) ; return ; } builder . advanceLexer ( ) ; } }
18207	public Builder buttonPressedTextColor ( int buttonPressedTextColor ) { this . buttonPressedTextColor = buttonPressedTextColor ; return this ; }
18236	public static SM_SYSTEM_MESSAGE STR_PRINT_SCREEN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18240	static public void fixFunctionTags ( CTTree tree ) { fixFunctionTagsAux ( tree . getRoot ( ) ) ; }
18278	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
18300	@ SuppressLint ( _CHAR DefaultLocale _CHAR ) public static String doublePrecision ( int time ) { return String . format ( _CHAR % _NUM _CHAR , time ) ; }
18302	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM , _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM , _NUM } ; }
18303	public static boolean isDarkThemeEnable ( ) { return isDarkThemeEnable ; }
18304	public static boolean canChangeEquip ( Player player ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canChangeEquip . ordinal ( ) ] ) { if ( ! restrictions . canChangeEquip ( player ) ) { return _BOOL ; } } return _BOOL ; }
18310	public void build ( RealmResults < T > results ) { int xIndex = _NUM ; for ( T object : results ) { mValues . add ( buildEntryFromResultObject ( object , xIndex ++ ) ) ; } }
18337	protected WallGetByIdQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
18338	public void clear ( ) { int max = bits . length ; for ( int i = _NUM ; i < max ; i ++ ) { bits [ i ] = _NUM ; } }
18346	static boolean isSystemWindows ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
18360	public boolean isValid ( ) { return getFlightId ( ) != _NULL ; }
18390	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stagger_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
18395	private String convertToFileName ( String string ) { return string . replace ( _CHAR / _CHAR , _CHAR _ _CHAR ) . replace ( _CHAR \\ _CHAR , _CHAR _ _CHAR ) ; }
18402	public static double [ ] ndary ( int n ) { double d [ ] = new double [ n ] ; for ( int i = _NUM ; i < n ; i ++ ) { d [ i ] = R . nextGaussian ( ) ; } return d ; }
18420	private boolean release ( String id ) { AudioPlayer audio = players . remove ( id ) ; if ( audio == _NULL ) { return _BOOL ; } if ( players . isEmpty ( ) ) { onLastPlayerReleased ( ) ; } audio . destroy ( ) ; return _BOOL ; }
18421	@ Override protected void onReset ( ) { super . onReset ( ) ; onStopLoading ( ) ; if ( mData != _NULL ) { onReleaseResources ( mData ) ; mData = _NULL ; } }
18431	public static String makeLinkAuto ( HttpServletRequest request , HttpServletResponse response , String uri ) { RequestHandler rh = RequestHandler . getRequestHandler ( request . getServletContext ( ) ) ; return rh . makeLinkAuto ( request , response , uri , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL ) ; }
18434	@ Override public long limit ( ) { return fileLength >> > _NUM ; }
18448	SegmentationProfile mergePersonalizationResponseWithSegmentation ( SegmentationProfile segmentationProfile , PersonalizationEngineResponse personalizationEngineResponse ) { if ( personalizationEngineResponse != _NULL ) { segmentationProfile . addAttribute ( _CHAR tid _CHAR , personalizationEngineResponse . getTid ( ) ) ; segmentationProfile . addAttribute ( _CHAR data _CHAR , personalizationEngineResponse . getData ( ) ) ; segmentationProfile . addAttribute ( _CHAR model _CHAR , personalizationEngineResponse . getModel ( ) ) ; } return segmentationProfile ; }
18466	public UtilsCheckLinkQuery checkLink ( UserActor actor , String url ) { return new UtilsCheckLinkQuery ( getClient ( ) , actor , url ) ; }
18505	private Reader createLatin1Reader ( InputStream stream ) { return new Latin1Reader ( stream , fTempString . ch . length ) ; }
18513	private void tryScrollBackToTop ( ) { if ( ! mPtrIndicator . isUnderTouch ( ) ) { mScrollChecker . tryToScrollTo ( PtrIndicator . POS_START , mDurationToCloseHeader ) ; } }
18550	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
18554	public boolean showGeolocationSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_GEOLOCATION ; }
18558	Hashtable removeUserDataTable ( Node n ) { if ( userData == _NULL ) { return _NULL ; } return ( Hashtable ) userData . get ( n ) ; }
18561	public synchronized int size ( ) { return count ; }
18562	public static String formatQuantity ( long quantity ) { return formatQuantity ( ( double ) quantity ) ; }
18589	public long seedLow ( ) { return seedLow ; }
18608	public Builder withVerbosity ( ) { this . verbose = _BOOL ; return this ; }
18611	@ Override public boolean isSelected ( T photo ) { return selectedPhotos . contains ( photo ) ; }
18612	public void runAsync ( String localName , ModelService service , Map < String , ? extends Object > context , boolean persist ) throws ServiceAuthException , ServiceValidationException , GenericServiceException { this . runAsync ( localName , service , context , _NULL , persist ) ; }
18613	public static SM_SYSTEM_MESSAGE STR_MSG_EXCEED_MAX_ITEM_COUNT ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
18634	public double lngRadians ( ) { return lngRadians ; }
18640	@ Override public void listVolumes ( CommandInput input , CompletionHandler completionHandler ) { createOrUpdateTargetSsl ( input ) ; URI uri = UriUtils . extendUri ( input . getDockerUri ( ) , _CHAR / volumes _CHAR ) ; sendGet ( uri , _NULL , completionHandler ) ; }
18658	private boolean isHoneycombOrHigher ( ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . HONEYCOMB ) { return _BOOL ; } return _BOOL ; }
18668	public boolean isReleased ( ) { return ( mInternalUseOnItemTouchListener == _NULL ) ; }
18709	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
18732	public void rightClick ( ) { myRobot . click ( mySurface , getMidPoint ( ) , MouseButton . RIGHT_BUTTON , _NUM ) ; myRobot . waitForIdle ( ) ; }
18801	public void releaseActiveBody ( ) { activeBody = _NULL ; }
18805	protected void assertClose ( String msg , RealMatrix m , RealMatrix n , double tolerance ) { Assert . assertTrue ( msg , m . subtract ( n ) . getNorm ( ) < tolerance ) ; }
18815	public void cleanPatchByVersion ( String versionName ) { if ( patchDirectory == _NULL || versionName == _NULL ) { return ; } String path = patchDirectory . getAbsolutePath ( ) + _CHAR / _CHAR + versionName ; SharePatchFileUtil . deleteDir ( path ) ; }
18830	public boolean isTiltEnabled ( ) { return mTiltEnabled ; }
18831	private void loadProcHeader ( RandomAccessFile rafIn ) throws IOException { assert rafIn != _NULL : _CHAR _NULL argument _CHAR ; procHeader = rafIn . readUTF ( ) ; assert procHeader != _NULL ; }
18833	public static int nextRandomInt ( int min , int max ) { return ( int ) ( nextRandomFloat ( ) * ( max - min + _NUM ) ) + min ; }
18874	public static int javaNew ( int luaState , Class clazz ) throws LuaException { LuaState L = LuaStateFactory . getExistingState ( luaState ) ; synchronized ( L ) { Object ret = getObjInstance ( L , clazz ) ; L . pushJavaObject ( ret ) ; return _NUM ; } }
18890	public void onDialogRequest ( Player player ) { }
18908	public static AnchorPane loadAnchorPane ( final FXMLLoader loader ) { try { return ( AnchorPane ) loader . load ( ) ; } catch ( IOException e ) { throw new CriticalException ( _CHAR Can not load FXML _CHAR , e ) ; } }
18918	public Activity cancel ( String key ) { Activity a = get ( key ) ; if ( a != _NULL ) a . cancel ( ) ; return a ; }
18950	public static void checkFinite ( final double x ) throws MathIllegalArgumentException { if ( Double . isInfinite ( x ) || Double . isNaN ( x ) ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . NOT_FINITE_NUMBER , x ) ; } }
18988	public boolean hasComplete ( ) { return observers . get ( ) == TERMINATED && value == _NULL && error == _NULL ; }
19012	public Type toSoot ( ) { return toSoot ( type . getType ( ) , _NUM ) ; }
19014	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Reflector_INTERVAL_TO_B ( String skilltarget , int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 ) ; }
19026	public int addChildEdge ( int parent , int child ) { return super . addEdge ( parent , child ) ; }
19099	public void incrementProgress ( ) { isSpinning = _BOOL ; progress ++ ; setText ( Math . round ( ( ( float ) progress / _NUM ) * _NUM ) + _CHAR % _CHAR ) ; spinHandler . sendEmptyMessage ( _NUM ) ; }
19115	public void addDeviceCommand ( DeviceCommand deviceCommand ) { this . deviceCommands . add ( deviceCommand ) ; }
19120	public PipelineModel load ( String pipelineModelFileName ) { model = PipelineModel . load ( pipelineModelFileName ) ; return model ; }
19130	public static String formatQuantity ( BigDecimal quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return quantityDecimalFormat . format ( quantity ) ; }
19146	private static int computeCapacity ( final int expectedSize ) { if ( expectedSize == _NUM ) { return _NUM ; } final int capacity = ( int ) FastMath . ceil ( expectedSize / LOAD_FACTOR ) ; final int powerOfTwo = Integer . highestOneBit ( capacity ) ; if ( powerOfTwo == capacity ) { return capacity ; } return nextPowerOfTwo ( capacity ) ; }
19151	public static boolean isScaleEnabled ( ) { return scaleEnabled ; }
19159	public void addContext ( String str ) { if ( str == _NULL ) { throw new NullPointerException ( _CHAR str == _NULL _CHAR ) ; } context . append ( str ) ; if ( ! str . endsWith ( _CHAR \ n _CHAR ) ) { context . append ( _CHAR ) ; } }
19176	public UtilsCheckLinkQuery checkLink ( String url ) { return new UtilsCheckLinkQuery ( getClient ( ) , url ) ; }
19182	public static String checkAndFormatText ( final FormatterDetails format , final byte [ ] text ) { if ( format != _NULL ) { return FormattingUtils . formatText ( format , ConversionUtils . arrayToString ( text ) , text ) ; } return ConversionUtils . arrayToString ( text ) ; }
19208	@ SafeVarargs public static < T > ConsList < T > List ( T ... a ) { if ( ( a == _NULL ) || ( a . length == _NUM ) ) { return new ConsListImpl < > ( ) ; } return new ConsListImpl < > ( Arrays . asList ( a ) , _BOOL ) ; }
19240	@ Override public int [ ] makeDensityTestPoints ( ) { return new int [ ] { - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
19246	public int size ( ) { return getArray ( ) . length ; }
19256	public Object opt ( String key ) { return key == _NULL ? _NULL : this . map . get ( key ) ; }
19307	public void rightClick ( int x , int y , int delay ) throws InterruptedException { move ( x , y ) ; click ( InputEvent . BUTTON3_MASK , delay ) ; }
19308	@ Override public int compareTo ( Fraction object ) { long nOd = ( ( long ) numerator ) * object . denominator ; long dOn = ( ( long ) denominator ) * object . numerator ; return ( nOd < dOn ) ? - _NUM : ( ( nOd > dOn ) ? + _NUM : _NUM ) ; }
19332	public void info ( String message ) { currentTest . get ( ) . info ( message ) ; }
19337	private static boolean snapVerticalGrid ( Point candidatePoint ) { int y = candidatePoint . y ; y = ( y / SceneDraw . GRID_SPACING ) * SceneDraw . GRID_SPACING ; candidatePoint . y = y ; return _BOOL ; }
19362	public ChangeSet addToCollection ( String path , Serializable newItem ) { return add ( new AddToCollectionSpaceEntryMutator ( path , newItem ) ) ; }
19363	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_USE_HOUSE_OBJECT_ITEM_EQUIP ( DescriptionId id ) { return new SM_SYSTEM_MESSAGE ( _NUM , id ) ; }
19384	public static String printLine ( String a , int num ) { StringBuilder builder = new StringBuilder ( ) ; for ( int i = _NUM ; i < num ; i ++ ) { builder . append ( a ) ; } return builder . toString ( ) ; }
19391	public static Aggregate < Map < String , Concept > , Optional < ? >> max ( String varName ) { return new MaxAggregate ( varName ) ; }
19398	public AggregationSet maxValue ( String path ) { return add ( new MaxValueAggregator ( ) . setPath ( path ) ) ; }
19399	public Builder cacheOnDisc ( boolean cacheOnDisc ) { this . cacheOnDisc = cacheOnDisc ; return this ; }
19528	public void loadingFinished ( ) { mLoadTracker . loadingFinished ( ) ; }
19550	protected void assertClose ( RealMatrix m , RealMatrix n , double tolerance ) { Assert . assertTrue ( m . subtract ( n ) . getNorm ( ) < tolerance ) ; }
19555	public void initializeGeo ( ) { switch ( getConfiguredGeoType ( ) ) { case GEO_MESHES : geoData = new RealGeoData ( ) ; break ; case NO_GEO : geoData = new DummyGeoData ( ) ; break ; } log . info ( _CHAR Configured Geo type : _CHAR + getConfiguredGeoType ( ) ) ; geoData . loadGeoMaps ( ) ; }
19569	private void badIndex ( int index ) throws ArrayIndexOutOfBoundsException { String msg = _CHAR Attempt to modify attribute at illegal index : _CHAR + index ; throw new ArrayIndexOutOfBoundsException ( msg ) ; }
19606	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
19617	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
19619	public PhotosMoveQuery move ( UserActor actor , int targetAlbumId , int photoId ) { return new PhotosMoveQuery ( getClient ( ) , actor , targetAlbumId , photoId ) ; }
19627	public boolean isLogSegmentSequenceNumberValidationEnabled ( ) { return this . getBoolean ( BKDL_LOGSEGMENT_SEQUENCE_NUMBER_VALIDATION_ENABLED , BKDL_LOGSEGMENT_SEQUENCE_NUMBER_VALIDATION_ENABLED_DEFAULT ) ; }
19657	public boolean strictlyPositive ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( sign > _NUM ) && ( ( mant [ mant . length - _NUM ] != _NUM ) || isInfinite ( ) ) ; }
19676	public static X509Certificate loadX509Certificate ( final String certificateFile ) throws IOException , CertificateException { final CertificateFactory cf = CertificateFactory . getInstance ( _CHAR X . 509 _CHAR ) ; final InputStream inputStream = FileUtils . loadFileByName ( certificateFile ) ; final X509Certificate certificate = ( X509Certificate ) cf . generateCertificate ( inputStream ) ; inputStream . close ( ) ; return certificate ; }
19679	public ChangeSet increment ( String path , int delta ) { return add ( new IncrementSpaceEntryMutator ( path , delta ) ) ; }
19732	public boolean isFilterColumn ( int [ ] selectedColumns ) { if ( selectedColumns != _NULL ) { for ( int column : selectedColumns ) { if ( column == COL_FILTER ) { return _BOOL ; } } } return _BOOL ; }
19737	public static AztecCode encode ( byte [ ] data ) { return encode ( data , DEFAULT_EC_PERCENT , DEFAULT_AZTEC_LAYERS ) ; }
19739	public static final Capsule scale ( Capsule capsule , double scale ) { if ( capsule == _NULL ) throw new NullPointerException ( Messages . getString ( _CHAR geometry . nullShape _CHAR ) ) ; if ( scale <= _NUM ) throw new IllegalArgumentException ( Messages . getString ( _CHAR geometry . invalidScale _CHAR ) ) ; return new Capsule ( capsule . getLength ( ) * scale , capsule . getCapRadius ( ) * _NUM . _NUM * scale ) ; }
19759	public SourceContextAndPath extendPath ( Abstraction abs ) { return extendPath ( abs , _BOOL ) ; }
19781	public RepositoryChanged updateExistingRepository ( String repoName , String repoRemoteLocation , String repoUserName , String repoPassword , String repoLocations , String repoBranch , boolean useCredentials ) { return _NULL ; }
19847	public void see ( VisibleObject object ) { }
19855	@ Override public final void writeUTF ( String s ) throws IOException { dis . writeUTF ( s ) ; }
19857	public boolean hasOptionSet ( ) { return optionSet != _NULL ; }
19862	@ Override public boolean onUnbind ( Intent intent ) { mOperationsBinder . clearListeners ( ) ; return _BOOL ; }
19872	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM } ; }
19879	public static boolean isGlEs2Supported ( Context context ) { ActivityManager activityManager = ( ActivityManager ) context . getSystemService ( Context . ACTIVITY_SERVICE ) ; ConfigurationInfo configurationInfo = activityManager . getDeviceConfigurationInfo ( ) ; return configurationInfo != _NULL && configurationInfo . reqGlEsVersion >= _NUM ; }
19899	public PhotosSaveQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
19905	public static SM_SYSTEM_MESSAGE STR_FACTION_ALLY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
19910	public boolean addEquipmentId ( final Long equipmentId ) { if ( equipmentId != _NULL && equipmentId > _NUM ) { return equipmentIds . add ( equipmentId ) ; } return _BOOL ; }
19918	private String readAllContent ( BufferedReader r ) throws IOException { StringBuilder result = new StringBuilder ( ) ; String line ; while ( ( line = r . readLine ( ) ) != _NULL ) { result . append ( line ) . append ( _CHAR \ n _CHAR ) ; } return result . toString ( ) ; }
19925	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
19942	@ Override public String toString ( ) { return String . format ( _CHAR % d : % d _CHAR , ledgerId , entryId ) ; }
19956	@ NonNull public static Observable < LoginResult > loginWithButton ( @ NonNull final LoginButton loginButton , @ NonNull final Fragment fragment ) { checkNotNull ( fragment , _CHAR fragment == _NULL _CHAR ) ; checkNotNull ( loginButton , _CHAR loginButton == _NULL _CHAR ) ; ReactiveFB . checkInit ( ) ; return Observable . create ( new LoginWithButtonOnSubscribe ( loginButton ) ) ; }
19977	public boolean increment ( K key ) { return adjustValue ( key , ( short ) _NUM ) ; }
19994	public void tabLoadStarted ( int id ) { StripLayoutTab tab = findTabById ( id ) ; if ( tab != _NULL ) tab . loadingStarted ( ) ; }
20058	public void clickDropDownOption ( SiteAdminButtons button ) { webDriver . findElement ( button . getLocator ( ) ) . click ( ) ; }
20064	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_LEVEL_DONE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20069	protected static String concatMapExpr ( String first , String second ) { first = stripTrimMapExprDelims ( first ) ; second = stripTrimMapExprDelims ( second ) ; if ( first . isEmpty ( ) ) { return second ; } else if ( second . isEmpty ( ) ) { return first ; } else { return first + _CHAR , _CHAR + second ; } }
20100	public boolean addListener ( IClassLoaderCacheStateListener listener ) { _specificListeners . add ( new WeakReference < IClassLoaderCacheStateListener > ( listener ) ) ; return ! _dispatchingRemoved ; }
20119	public boolean hasSimilarityMatrix ( String featureName ) { return hasSimilarityMatrix ( this . getFeatureIndex ( featureName ) ) ; }
20145	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
20153	private void showDescriptionLine ( Spannable str , int textColor ) { if ( mContentsView . mTextLine2 . getVisibility ( ) != VISIBLE ) { mContentsView . mTextLine2 . setVisibility ( VISIBLE ) ; } mContentsView . mTextLine2 . setTextColor ( textColor ) ; mContentsView . mTextLine2 . setText ( str , BufferType . SPANNABLE ) ; }
20189	private void saveInstantUploadPathOnPreferences ( ) { SharedPreferences appPrefs = PreferenceManager . getDefaultSharedPreferences ( getApplicationContext ( ) ) ; SharedPreferences . Editor editor = appPrefs . edit ( ) ; editor . putString ( _CHAR instant_upload_path _CHAR , mUploadPath ) ; editor . commit ( ) ; }
20190	public static boolean isDark ( @ ColorInt int color ) { float [ ] hsl = new float [ _NUM ] ; android . support . v4 . graphics . ColorUtils . colorToHSL ( color , hsl ) ; return isDark ( hsl ) ; }
20200	public static void clearCache ( Module module ) { if ( ourCache . containsKey ( module ) ) { ourCache . remove ( module ) ; } }
20203	public byte [ ] compress ( double [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
20205	public static void removePreferenceKey ( Context context , String key ) { getSharedPreferences ( context ) . edit ( ) . remove ( key ) . commit ( ) ; }
20206	private static boolean isUserinfoCharacter ( char p_char ) { return ( p_char <= _CHAR && ( fgLookupTable [ p_char ] & MASK_USERINFO_CHARACTER ) != _NUM ) ; }
20223	public boolean isStepCompleted ( int stepNumber ) { return completedSteps [ stepNumber ] ; }
20224	public Iterator < RecordID > sortedScanFrom ( DataType keyStart ) { BPlusNode root = BPlusNode . getBPlusNode ( this , rootPageNum ) ; LeafNode leaf = root . locateLeaf ( keyStart , _BOOL ) ; return new BPlusIterator ( leaf , keyStart , _BOOL ) ; }
20225	boolean hasUUID ( long uuid ) { if ( _readStorage . hasUUID ( uuid ) ) { return _BOOL ; } for ( AstyanaxStorage storage : _writeStorage ) { if ( storage . hasUUID ( uuid ) ) { return _BOOL ; } } return _BOOL ; }
20259	protected void writeShort ( int value ) throws IOException { out . write ( value & _NUM ) ; out . write ( ( value >> _NUM ) & _NUM ) ; }
20295	@ Override public String toString ( ) { StringBuilder str = new StringBuilder ( ) ; str . append ( _CHAR xmin = _CHAR + getXmin ( ) + _CHAR \ n _CHAR ) ; str . append ( _CHAR xmax = _CHAR + getXmax ( ) + _CHAR \ n _CHAR ) ; str . append ( _CHAR text = \ _CHAR _CHAR + getText ( ) + _CHAR \ _CHAR \ n _CHAR ) ; return str . toString ( ) ; }
20302	public PhotosSaveWallPhotoQuery caption ( String value ) { return unsafeParam ( _CHAR caption _CHAR , value ) ; }
20335	public boolean isItemSet ( ) { return getItemSet ( ) != _NULL ; }
20358	public InternalEventTracker postEvent ( Event event ) { return eventBus . postEvent ( event ) ; }
20369	public int size ( ) { return _pos ; }
20385	public String removeContactMech ( String contactMechPurposeTypeId ) { return contactMechIdsMap . remove ( contactMechPurposeTypeId ) ; }
20400	public static String checkAndFormatText ( final FormatterDetails format , final String text ) { if ( format != _NULL ) { return FormattingUtils . formatText ( format , text , _NULL ) ; } return text ; }
20401	private boolean canAddTask ( ) { return tCur == _NULL ; }
20416	public void updateView ( ) { if ( classificationViewer == _NULL ) classificationViewer = ( ClassificationViewer ) dir . getViewerByClass ( ClassificationViewer . class ) ; if ( classificationViewer == _NULL ) return ; classificationViewer . updateView ( Director . ALL ) ; }
20475	public static Tags mismatchingKeys ( Tags in , Set < String > keys ) { return Tags . valueOf ( in . asMap ( ) . entrySet ( ) . stream ( ) . filter ( _NULL ) ) ; }
20481	public static TemporalExpression toTemporalExpression ( RecurrenceInfo info ) { if ( info == _NULL ) { throw new IllegalArgumentException ( _CHAR info argument can not be _NULL _CHAR ) ; } return new RecurrenceWrapper ( info ) ; }
20484	public static Aggregate < Object , Long > count ( ) { return new CountAggregate ( ) ; }
20506	@ Override public boolean isDynamicTimeDeadband ( final SourceDataTag tag ) { DataTagAddress address = tag . getAddress ( ) ; return ( ! address . isStaticTimedeadband ( ) && this . equipmentConfiguration . isDynamicTimeDeadbandEnabled ( ) ) ; }
20544	private void notifyListeners ( Heartbeat heartbeat ) { synchronized ( listeners ) { for ( HeartbeatListener listener : listeners ) { listener . notifyHeartbeat ( heartbeat ) ; } } }
20563	private Map < DimensionColumn , DimensionRow > extractDimensionValues ( JsonNode dimensionRowsNode , Set < DimensionColumn > dimensionColumns ) { return dimensionColumns . stream ( ) . collect ( Collectors . toMap ( Function . identity ( ) , _NULL ) ) ; }
20589	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
20620	public GroupsEditLinkQuery editLink ( UserActor actor , int groupId , int linkId ) { return new GroupsEditLinkQuery ( getClient ( ) , actor , groupId , linkId ) ; }
20652	public void initialize ( MediaRouteController controller ) { setRouteSelector ( controller . buildMediaRouteSelector ( ) ) ; setDialogFactory ( new ChromeMediaRouteDialogFactory ( ) ) ; }
20675	@ Deprecated public static JsonObject readFrom ( String string ) { return JsonValue . readFrom ( string ) . asObject ( ) ; }
20691	public boolean isLowerLimitEnabled ( ) { return this . lowerLimitEnabled ; }
20695	public VideoEditQuery privacyComment ( String ... value ) { return unsafeParam ( _CHAR privacy_comment _CHAR , value ) ; }
20709	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
20712	public void addCommunicationListener ( FTPCommunicationListener listener ) { synchronized ( lock ) { communicationListeners . add ( listener ) ; if ( communication != _NULL ) { communication . addCommunicationListener ( listener ) ; } } }
20743	public void moveBy ( int offset ) { cursor += offset ; }
20779	protected boolean isLastStep ( ) { return isLastStep ; }
20780	public boolean isDataLayer ( ) { return MapView . DATA_LAYERS . contains ( layer ) ; }
20784	public void moveCartItem ( int fromIndex , int toIndex ) { if ( toIndex < fromIndex ) { cartLines . add ( toIndex , cartLines . remove ( fromIndex ) ) ; } else if ( toIndex > fromIndex ) { cartLines . add ( toIndex - _NUM , cartLines . remove ( fromIndex ) ) ; } }
20810	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM } ; }
20817	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
20820	public static SM_SYSTEM_MESSAGE STR_CANNOT_OPEN_DOOR_NEED_NAMED_KEY_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20821	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Snare_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
20829	public synchronized int size ( ) { return count ; }
20843	public String namespace ( ) { return theNamespace ; }
20845	private static byte [ ] sign ( String stringData , final byte [ ] key ) throws AWSIotException { try { byte [ ] data = stringData . getBytes ( UTF8 ) ; return sign ( data , key ) ; } catch ( Exception e ) { throw new AWSIotException ( _CHAR Unable to calculate a request signature : _CHAR + e . getMessage ( ) ) ; } }
20850	private void createElement ( Document doc , Element parentElement , String elementName , Color value ) { Element element = doc . createElement ( elementName ) ; element . appendChild ( doc . createTextNode ( ColourUtils . fromColour ( value ) ) ) ; parentElement . appendChild ( element ) ; }
20855	private boolean hasAdditionalProperties ( ModelImpl modelImpl ) { return modelImpl . getAdditionalProperties ( ) != _NULL ; }
20867	protected void checkKey ( Object key ) { if ( ! canContainKey ( key ) ) throw new IllegalArgumentException ( _CHAR key is not valid for this LeaseMap '' ) ; }
20873	public static boolean validKey ( String cacheName , Object key ) { UtilCache < ? , ? > cache = findCache ( cacheName ) ; if ( cache != _NULL ) { if ( cache . containsKey ( key ) ) return _BOOL ; } return _BOOL ; }
20877	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
20896	public AdsGetSuggestionsQueryWithSchools country ( Integer value ) { return unsafeParam ( _CHAR country _CHAR , value ) ; }
20907	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_DEATH_TO_B ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20955	public static final void changeGroupRules ( PlayerAlliance alliance , LootGroupRules lootRules ) { alliance . onEvent ( new ChangeAllianceLootRulesEvent ( alliance , lootRules ) ) ; }
20956	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
20967	public static int readUnsignedShort ( byte [ ] bytes , int start ) { return ( ( ( bytes [ start ] & _NUM ) << _NUM ) + ( ( bytes [ start + _NUM ] & _NUM ) ) ) ; }
21024	public int size ( ) { return elements . size ( ) ; }
21031	static boolean isCellBusy ( int _x , int _y , char _ch ) { if ( _x < _NUM || _y < _NUM || _x > ( field_size - _NUM ) || _y > ( field_size - _NUM ) ) return _BOOL ; if ( field [ _x ] [ _y ] == _ch ) return _BOOL ; return _BOOL ; }
21052	public Type type ( ) { return type ; }
21060	public ChangeSet decrement ( String path , float delta ) { return increment ( path , - delta ) ; }
21063	public ConstantValue_attribute findConstantValue_attribute ( ) { int i ; for ( i = _NUM ; i < attributes_count ; i ++ ) { if ( ( attributes [ i ] ) instanceof ConstantValue_attribute ) return ( ConstantValue_attribute ) ( attributes [ i ] ) ; } return _NULL ; }
21093	public final TestSubscriber < T > assertNotComplete ( ) { int c = completionCount ; if ( c == _NUM ) { throw new AssertionError ( _CHAR Completed _CHAR , _NULL ) ; } if ( c > _NUM ) { throw new AssertionError ( _CHAR Multiple completions : _CHAR + c , _NULL ) ; } return this ; }
21117	public int hashCode ( ) { return ( int ) ( ConnectionRelativeTime . class . hashCode ( ) + time ) ; }
21127	public Observable < FirebaseChildEvent > observeChildRemoved ( final Query firebaseRef ) { return observeChildEvent ( firebaseRef ) . filter ( filterChildEvent ( EventType . REMOVED ) ) ; }
21151	private int generateNonce ( ) { return RANDOM . nextInt ( ) ; }
21161	@ Nonnull @ Override public String toString ( ) { return _CHAR VersionNumber [ groups = _CHAR + groups + _CHAR , extension = _CHAR + extension + _CHAR ] _CHAR ; }
21164	public RevealBuilder withChildsAnimation ( ) { this . mChildsAnimation = mViewToReveal instanceof ViewGroup ; return this ; }
21176	public Vector2D toSubSpace ( Vector < Euclidean3D > vector ) { return toSubSpace ( ( Point < Euclidean3D > ) vector ) ; }
21197	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stumble_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
21251	protected boolean retainPresenter ( ) { return _BOOL ; }
21257	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
21273	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HIS_PARTY_ENTERED_ALLIANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21294	public PhotosSaveMarketPhotoQuery cropHash ( String value ) { return unsafeParam ( _CHAR crop_hash _CHAR , value ) ; }
21328	public boolean isAuthenticated ( ) { synchronized ( lock ) { return authenticated ; } }
21336	public void addCachedValue ( @ NotNull String value , @ NotNull TextRange range ) { addCachedValue ( new Value ( value , new Location ( myCurrentFile , range ) ) ) ; }
21345	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
21348	protected BoardCreateCommentQuery topicId ( int value ) { return unsafeParam ( _CHAR topic_id _CHAR , value ) ; }
21399	public boolean isIgnoreSensors ( ) { return this . ignoreSensors ; }
21412	public void clear ( ) { initialize ( ) ; }
21418	public TypeRef makeOptional ( ) { return interner . intern ( new TypeRef ( kind , Cardinality . OPTIONAL , messageType , enumType ) ) ; }
21423	public static void openBrowser ( URI url ) throws IOException { if ( Desktop . isDesktopSupported ( ) ) { Desktop . getDesktop ( ) . browse ( url ) ; } else { LOGGER . error ( _CHAR Can not open browser because this capability is not supported on _CHAR + _CHAR your platform . You can use the link below to open the report manually . '' ) ; } }
21430	public TapTarget cancelable ( boolean status ) { this . cancelable = status ; return this ; }
21442	public AdsGetSuggestionsQuery country ( Integer value ) { return unsafeParam ( _CHAR country _CHAR , value ) ; }
21477	public static String ice_staticId ( ) { return __ids [ _NUM ] ; }
21491	public int hashCode ( ) { int h = _NUM ; if ( name != _NULL ) { h += name . hashCode ( ) ; } if ( types != _NULL ) { h += hash ( types ) ; } if ( constraints != _NULL ) { h += constraints . hashCode ( ) ; } return h ; }
21500	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator [ - summary = summary . txt ] [ - modelDir = models / ] _CHAR + _CHAR [ - nMin = # ] [ - nMax = # ] [ - dist = # ] _CHAR + _CHAR [ - s ] [ - docClass = ... ] [ - compClass = ... ] [ - merge ] _CHAR ) ; System . err . println ( _CHAR nMin = # \ tMin n - gram size .\ nnMax = # \ tMax n - gram size .\ n _CHAR + _CHAR dist = # \ tN - gram window .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - docClass = ... \ tA java class identifier to use as Document class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramDocument \ n _CHAR + _CHAR - compClass = ... \ tA java class identifier to use as Comparator class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramCachedGraphComparator \ n _CHAR + _CHAR - merge \ tIf indicated then the model files _CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR ) ; }
21516	public RetStmt newRetStmt ( Value stmtAddress ) { return new JRetStmt ( stmtAddress ) ; }
21548	public static boolean isFluttering ( ) { return Arrays . stream ( ProjectManager . getInstance ( ) . getOpenProjects ( ) ) . anyMatch ( _NULL ) ; }
21579	public static void debug ( Object message , Throwable exception ) { Gdx . app . debug ( TAG , String . valueOf ( message ) , exception ) ; }
21594	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - nMin = # ] [ - nMax = # ] [ - dist = # ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] [ - docClass = ... ] [ - compClass = ... ] _CHAR ) ; System . err . println ( _CHAR nMin = # \ tMin n - gram size .\ nnMax = # \ tMax n - gram size .\ n _CHAR + _CHAR dist = # \ tN - gram window .\ n _CHAR + _CHAR - o = outFile \ tThe file to output data . Default is stdout .\ n _CHAR + _CHAR - t = # \ tNumber of threads . Defaults to number of available processors declared by system .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR - docClass = ... \ tA java class identifier to use as Document class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramDocument \ n _CHAR + _CHAR - compClass = ... \ tA java class identifier to use as Comparator class . _CHAR + _CHAR Defaults to jinsect . documentModel . StandardDocumentComparator \ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
21611	public static String upperCaseFirst ( String input ) { if ( input . charAt ( _NUM ) >= _CHAR && input . charAt ( _NUM ) <= _CHAR ) { return ( _CHAR _CHAR + input . charAt ( _NUM ) ) . toUpperCase ( ) + input . substring ( _NUM ) ; } else { return input ; } }
21614	public boolean isClosed ( ) { return journalWriter == _NULL ; }
21628	static boolean isSystemWindows ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
21639	protected void writeNetscapeExt ( ) throws IOException { out . write ( _NUM ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeString ( _CHAR NETSCAPE _CHAR + _CHAR _NUM . _NUM _CHAR ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeShort ( repeat ) ; out . write ( _NUM ) ; }
21685	@ Override public String toString ( ) { String delegate = fileFilter != _NULL ? fileFilter . toString ( ) : filenameFilter . toString ( ) ; return super . toString ( ) + _CHAR ( _CHAR + delegate + _CHAR ) _CHAR ; }
21696	public int size ( ) { return numberElements ; }
21704	protected void createContainer ( ) throws Throwable { sendCreateContainerRequest ( ) ; waitForPropertyValue ( provisioningTaskLink , MockTaskState . class , _CHAR taskInfo . stage _CHAR , TaskState . TaskStage . FINISHED ) ; verifyContainerStateExists ( containerStateReference ) ; sendGetContainerStateRequest ( ) ; containerId = containerState . id ; assertNotNull ( _CHAR Container ID is _NULL _CHAR , containerId ) ; assertEquals ( _CHAR container id should be _NUM characters long : _CHAR + containerId , _NUM , containerId . length ( ) ) ; }
21720	public int size ( ) { return getProps ( ) . size ( ) ; }
21737	public Vector3D toSpace ( Vector < Euclidean1D > vector ) { return toSpace ( ( Point < Euclidean1D > ) vector ) ; }
21758	@ Override public long limit ( ) { return fileLength >> > _NUM ; }
21767	public static float spToPx ( float sp ) { float scaledDensity = Resources . getSystem ( ) . getDisplayMetrics ( ) . scaledDensity ; return Math . round ( sp * scaledDensity ) ; }
21771	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
21773	public static boolean hasCache ( ) { return HASH_CACHE != _NULL ; }
21780	public void onTaskStop ( int taskId , String reason ) { PlayerTransferTask task = this . tasks . remove ( taskId ) ; task . status = PlayerTransferTask . STATUS_ERROR ; task . comment = reason ; this . dao . update ( task ) ; }
21785	public void start ( Context context , android . support . v4 . app . Fragment fragment ) { start ( context , fragment , REQUEST_CROP ) ; }
21791	public void add ( Map . Entry < String , String > entry ) { if ( entry == _NULL ) { throw new NullPointerException ( _CHAR context _CHAR ) ; } synchronized ( contexts ) { contexts . add ( Maps . immutableEntry ( entry . getKey ( ) , entry . getValue ( ) ) ) ; } }
21800	public static double [ ] udary ( int n ) { double d [ ] = new double [ n ] ; for ( int i = _NUM ; i < n ; i ++ ) { d [ i ] = R . nextDouble ( ) ; } return d ; }
21803	public boolean isSelected ( final int position ) { return getSelectedItems ( ) . contains ( position ) ; }
21842	private static String lowerCaseFirstCharacter ( String str ) { if ( str . length ( ) == _NUM ) { return str ; } return Character . toLowerCase ( str . charAt ( _NUM ) ) + str . substring ( _NUM ) ; }
21844	public INDArray toBgr ( InputStream inputStream ) { try { BufferedImage image = ImageIO . read ( inputStream ) ; return toBgr ( image ) ; } catch ( IOException e ) { throw new RuntimeException ( _CHAR Unable to load image _CHAR , e ) ; } }
21865	public void writeBody ( DataOutput dataOut ) throws IOException { SerializationHelper . writeObject ( ( OutputStream ) dataOut , Body ) ; }
21875	public static boolean audit ( ) { return audit . get ( ) == _NULL ? _BOOL : audit . get ( ) ; }
21927	public String htmlEncode ( Object object ) { return object != _NULL ? StringEscapeUtils . escapeHtml4 ( String . valueOf ( object ) ) : _NULL ; }
21939	@ Deprecated public static JsonArray readFrom ( String string ) { return JsonValue . readFrom ( string ) . asArray ( ) ; }
21949	public void info ( String message , Object ... args ) { currentTest . get ( ) . info ( String . format ( message , args ) ) ; }
21964	public static SM_SYSTEM_MESSAGE STR_CANT_SHOUT_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21967	private boolean taskInProgress ( ) { return tCur != _NULL ; }
21994	private void tryScrollBackToTop ( ) { if ( ! mPtrIndicator . isUnderTouch ( ) && mPtrIndicator . hasLeftStartPosition ( ) ) { mScrollChecker . tryToScrollTo ( PtrIndicator . POS_START , mDurationToCloseHeader ) ; } }
22023	public static void registerFuel ( ItemStack stack , int duration ) { registerFuel ( stack , _BOOL , duration ) ; }
22034	public boolean isDrawCenterTextEnabled ( ) { return mDrawCenterText ; }
22076	public static boolean expressionIsTrue ( double leftSide , Operator operator , double rightSide ) { final String expression = leftSide + operator . getMathematicalOperator ( ) + rightSide ; return expressionIsTrue ( expression ) ; }
22103	public AemBubbleMessage waitForAemBubbleMessage ( ) { bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . presenceOfElementLocated ( BUBBLE_MSG_BY_SELECTOR ) ) ; return this ; }
22118	public SpaceTypeDescriptorBuilder addFixedProperty ( String propertyName , String propertyTypeName ) { return addFixedProperty ( propertyName , propertyTypeName , SpaceDocumentSupport . DEFAULT , StorageType . DEFAULT ) ; }
22127	public void recordOpenedTabSwitcher ( ) { setFirstAction ( OPENED_TAB_SWITCHER ) ; }
22145	@ Deprecated public boolean hasLurePokemon ( ) { return fortData . hasLureInfo ( ) && fortData . getLureInfo ( ) . getLureExpiresTimestampMs ( ) > api . currentTimeMillis ( ) ; }
22152	default boolean hasDataFromCommand ( ) { return _BOOL ; }
22157	public static boolean isHighSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
22162	public void onRequestPermissionResult ( int requestCode , String [ ] permissions , int [ ] grantResults ) throws JSONException { }
22163	public boolean isImageOutlinePolygonVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { if ( obj instanceof RasterSymbolizer ) { RasterSymbolizer raster = ( RasterSymbolizer ) obj ; enabled = ( raster . getImageOutline ( ) == _NULL ) && ( geometryType == GeometryTypeEnum . RASTER ) ; } } return enabled ; }
22185	public void saveViewsFor ( DataSource dataSource , Snapshot snapshot ) { Set < DataSourceViewProvider > compatibleProviders = getCompatibleProviders ( dataSource ) ; for ( DataSourceViewProvider compatibleProvider : compatibleProviders ) if ( compatibleProvider . supportsViewFor ( dataSource ) && compatibleProvider . supportsSaveViewFor ( dataSource , snapshot . getClass ( ) ) ) compatibleProvider . viewSaveView ( dataSource , snapshot ) ; }
22195	public static boolean checkContentCanBePulledUp ( PtrFrameLayout frame , View content , View header ) { return ! canChildScrollDown ( content ) ; }
22216	static List < String > decodeAll ( Collection < String > eventKeys ) { List < String > eventIds = Lists . newArrayList ( ) ; for ( String eventKey : eventKeys ) { decodeTo ( eventKey , eventIds ) ; } return eventIds ; }
22218	public Observable < FirebaseChildEvent > observeChildAdded ( final Query firebaseRef ) { return observeChildEvent ( firebaseRef ) . filter ( filterChildEvent ( EventType . ADDED ) ) ; }
22231	private void sleep ( ) { state = STATE . SLEEPING ; this . nextActTime += ( SLEEP_TIME_MS + ( int ) ( SLEEP_FUZZ * rnd . nextDouble ( ) ) ) * MockTimeSource . NANOSECONDS_IN_MILLISECOND ; }
22235	public FriendsGetAvailableForCallQuery nameCase ( UsersNameCase value ) { return unsafeParam ( _CHAR name_case _CHAR , value ) ; }
22237	public static SM_SYSTEM_MESSAGE STR_ITEM_COLOR_REMOVE_SUCCEED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22245	public String encode2XML ( ) { return _NULL ; }
22272	public static int cleanSuspendedTransactions ( ) throws GenericTransactionException { Transaction trans = _NULL ; int num = _NUM ; while ( ( trans = popSuspendedTransaction ( ) ) != _NULL ) { resume ( trans ) ; rollback ( ) ; num ++ ; } clearTransactionStartStampStack ( ) ; return num ; }
22274	public void changeBrightness ( int value ) { this . brightness += value ; }
22277	public static long addAndCheck ( long a , long b ) { return addAndCheck ( a , b , _CHAR overflow : add _CHAR ) ; }
22287	public void clear ( ) { this . ch = _NULL ; this . offset = _NUM ; this . length =- _NUM ; }
22291	@ Override protected void handleIOException ( IOException e ) throws IOException { throw new TaggedIOException ( e , tag ) ; }
22294	public OpenSpacesQueueObject newQueueEntry ( String queueName ) { OpenSpacesQueueObject queueObject = isFifo ( ) ? new OpenSpacesFifoQueueObject ( ) : new OpenSpacesQueueObject ( ) ; queueObject . setPersistent ( isPersistent ( ) ) ; queueObject . setEndpointURI ( queueName ) ; return queueObject ; }
22348	public void put ( int ii , Z val ) { re [ ii - bx ] = val . re ; im [ ii - bx ] = val . im ; }
22363	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
22365	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
22367	public int hashCode ( ) { return Float . floatToIntBits ( value ) ; }
22369	void removeSession ( GSSessionImpl childSession ) { synchronized ( this ) { sessions . remove ( childSession ) ; childSession = _NULL ; } }
22381	private String resolveSystemId ( String systemId , String baseURI ) { try { return XMLEntityManager . expandSystemId ( systemId , baseURI , _BOOL ) ; } catch ( URI . MalformedURIException ex ) { return systemId ; } }
22387	public INDArray toBgr ( File file ) { try { BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( file ) ) ; INDArray ret = toBgr ( bis ) ; bis . close ( ) ; return ret ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
22390	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
22408	protected PhotosSaveMarketAlbumPhotoQuery hash ( String value ) { return unsafeParam ( _CHAR hash _CHAR , value ) ; }
22416	@ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) public void start ( Context context , Fragment fragment , int requestCode ) { fragment . startActivityForResult ( getIntent ( context ) , requestCode ) ; }
22423	public static String formatPercentage ( BigDecimal percentage ) { if ( percentage == _NULL ) return _CHAR _CHAR ; return percentageDecimalFormat . format ( percentage ) ; }
22450	public static SM_SYSTEM_MESSAGE STR_REMOVE_ITEM_OPTION_SUCCEED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22463	public boolean isAggregate ( ) { return _BOOL ; }
22469	public long timeSinceStart ( ) { long currentTime = System . currentTimeMillis ( ) ; return currentTime - startTime ; }
22472	public static void sampleInstallTinker ( ApplicationLike appLike ) { if ( isInstalled ) { TinkerLog . w ( TAG , _CHAR install tinker , but has installed , ignore _CHAR ) ; return ; } TinkerInstaller . install ( appLike ) ; isInstalled = _BOOL ; }
22477	private void removeObsoleteElements ( List < String > names , Map < String , View > sharedElements , List < String > elementsToRemove ) { if ( elementsToRemove . size ( ) > _NUM ) { names . removeAll ( elementsToRemove ) ; for ( String elementToRemove : elementsToRemove ) { sharedElements . remove ( elementToRemove ) ; } } }
22480	void addNeighbourRegion ( MapRegion neighbour ) { neighbours = ( MapRegion [ ] ) ArrayUtils . add ( neighbours , neighbour ) ; }
22486	public static SM_SYSTEM_MESSAGE STR_MSG_PET_CONDITION_SEARCH_01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22496	public static PrivateKey loadPrivateKeyFromBinaryFile ( final String keyFile ) throws IOException , InvalidKeySpecException , NoSuchAlgorithmException { final PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec ( loadBinaryFileAsBytes ( keyFile ) ) ; final PrivateKey privateKey = KeyFactory . getInstance ( ALGORITHM ) . generatePrivate ( privateKeySpec ) ; return privateKey ; }
22517	@ Deprecated public Builder cacheOnDisc ( boolean cacheOnDisk ) { return cacheOnDisk ( cacheOnDisk ) ; }
22527	@ Override public String toString ( ) { if ( exception != _NULL ) { return exception . toString ( ) ; } else { return super . toString ( ) ; } }
22529	public boolean hasNavigationBar ( ) { return mHasNavigationBar ; }
22559	public boolean isHttps ( ) { return isHttps ; }
22565	public static final Circle scale ( Circle circle , double scale ) { if ( circle == _NULL ) throw new NullPointerException ( Messages . getString ( _CHAR geometry . nullShape _CHAR ) ) ; if ( scale <= _NUM ) throw new IllegalArgumentException ( Messages . getString ( _CHAR geometry . invalidScale _CHAR ) ) ; return new Circle ( circle . radius * scale ) ; }
22590	@ Override public RemoteConnection connect ( ) throws RemoteException { return new RemoteConnectionImpl ( ) ; }
22608	void bindWith ( final Circle circle ) { circles . add ( circle ) ; }
22622	private float sweep ( float tan1X , float tan1Y , float tan2X , float tan2Y ) { final float minorSweep = ( float ) Math . toDegrees ( _NUM * ( Math . asin ( . _NUM * Geometry . distance ( tan1X , tan1Y , tan2X , tan2Y ) / mScaledTouchSlop ) ) ) ; return _NUM - minorSweep ; }
22624	public static SM_SYSTEM_MESSAGE STR_FORCE_ENTER_WITH_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22628	@ ManagedOperation ( description = _CHAR Start this JMS container . '' ) public void startContainer ( String processName ) { LOGGER . info ( _CHAR Starting JMS container for Process '' + processName ) ; jmsContainers . get ( processCache . getProcessId ( processName ) ) . start ( ) ; }
22646	public int compareTo ( Fraction object ) { long nOd = ( ( long ) numerator ) * object . denominator ; long dOn = ( ( long ) denominator ) * object . numerator ; return ( nOd < dOn ) ? - _NUM : ( ( nOd > dOn ) ? + _NUM : _NUM ) ; }
22653	public static final boolean isValidQueryParam ( String param ) { return StringUtils . isAlphanumeric ( param ) ; }
22669	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
22733	@ Override public void modelChanged ( @ NotNull NlModel model ) { SwingUtilities . invokeLater ( _NULL ) ; }
22780	public static SM_SYSTEM_MESSAGE STR_QUEST_QIMSG_UPDATE ( ) { return new SM_SYSTEM_MESSAGE ( _NUM ) ; }
22793	public void next ( ) { goToPage ( getRowCount ( ) , getCurrentPage ( ) + _NUM ) ; }
22807	public long size ( ) { return mSizeInBytes . get ( ) ; }
22812	public boolean want ( Edge e ) { return e . isInstance ( ) ; }
22813	private void expandAllNodes ( JTree tree ) { TreeNode root = ( TreeNode ) tree . getModel ( ) . getRoot ( ) ; expandAllNodes ( tree , new TreePath ( root ) ) ; }
22825	public static String addChild ( String parent , String child ) { if ( parent . endsWith ( String . valueOf ( FILE_SEPARATOR ) ) ) { return parent + child ; } else { return parent + FILE_SEPARATOR + child ; } }
22848	public static int toRealPosition ( int position , int count ) { position = position - _NUM ; if ( position < _NUM ) { position += count ; } else { position = position % count ; } return position ; }
22870	@ Override public String whoAmI ( ) { return ( _CHAR linear _CHAR ) ; }
22878	@ Override public void startMerging ( ) { }
22882	@ Override public void connectionLost ( Throwable cause ) { onDisconnect ( _BOOL ) ; }
22901	public QueryData viewDefData ( ) { return qryData ; }
22927	@ Override public void onBindViewHolder ( T holder , int position ) { ItemIndex index = getItemIndex ( position ) ; onBindViewHolderItemType ( holder , index , index . getType ( ) ) ; }
22939	@ Provides @ Singleton Client provideJerseyClient ( JerseyClientConfiguration configuration , Environment environment ) { return new JerseyClientBuilder ( environment ) . using ( configuration ) . using ( environment ) . build ( _CHAR emodb _CHAR ) ; }
22940	public UpdateScan open ( ) { return new TableScan ( ti , tx ) ; }
22951	public static SM_SYSTEM_MESSAGE STR_MSGBOX_TOYPET_FEED_CANT_FEED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22988	public static SM_SYSTEM_MESSAGE STR_CANT_CHAT_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22997	private void badIndex ( int index ) { String msg = _CHAR Attempt to modify attribute at illegal index : _CHAR + index ; throw new ArrayIndexOutOfBoundsException ( msg ) ; }
23008	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
23013	public static SM_SYSTEM_MESSAGE STR_MSG_Recall_CANNOT_ACCEPT_EFFECT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23035	public void deleteLastComponent ( String componentName ) { getLastComponent ( componentName ) . delete ( ) ; }
23042	protected ByteVector write ( final ClassWriter cw , final byte [ ] code , final int len , final int maxStack , final int maxLocals ) { ByteVector v = new ByteVector ( ) ; v . data = value ; v . length = value . length ; return v ; }
23047	public Builder removeColumns ( String ... columnNames ) { return transform ( new RemoveColumnsTransform ( columnNames ) ) ; }
23090	public void onFinish ( ) { }
23098	public JsonElement parse ( String json ) throws JsonSyntaxException { return parse ( new StringReader ( json ) ) ; }
23107	public void registerSupportNewProtocol ( String serviceAddress , String serviceName , boolean support ) throws RegistryException { if ( registry != _NULL ) { registry . setSupportNewProtocol ( serviceAddress , serviceName , support ) ; } monitor . logEvent ( _CHAR PigeonService . protocol _CHAR , serviceName , _CHAR support = _CHAR + support ) ; }
23128	public ThrowStmt newThrowStmt ( Value op ) { return new JThrowStmt ( op ) ; }
23129	private Date parseDate ( String date ) { try { return DateFormat . getDateInstance ( DateFormat . SHORT ) . parse ( date ) ; } catch ( ParseException e ) { MessageDialog . openError ( getShell ( ) , Policy . bind ( _CHAR HistorySearchDialog . dateParseErrorTitle _CHAR ) , Policy . bind ( _CHAR HistorySearchDialog . dateParseErrorMessage _CHAR ) ) ; return _NULL ; } }
23134	@ NotNull public static ResizePolicy full ( ) { return ourAny ; }
23163	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
23174	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; camera . autoFocus ( autoFocusCallback ) ; } }
23264	private void ExitBtnActionPerformed ( java . awt . event . ActionEvent evt ) { if ( JOptionPane . showConfirmDialog ( this , _CHAR Do you wish to end the application ? _CHAR , _CHAR Confirm _CHAR , JOptionPane . YES_NO_OPTION ) == JOptionPane . YES_OPTION ) { if ( taskInProgress ( ) ) removeTask ( getActiveTask ( ) ) ; this . setVisible ( _BOOL ) ; this . dispose ( ) ; } }
23268	public static FieldSelector of ( Field field ) { return new FieldSelector ( ImmutableList . of ( field ) ) ; }
23308	public LogSeqNum logLogicalAbort ( long txNum , LogSeqNum undoNextLSN ) { if ( enableLogging ) { return new LogicalAbortRecord ( txNum , undoNextLSN ) . writeToLog ( ) ; } else return _NULL ; }
23310	public static int parseInt ( String text ) throws DataParseException { try { return Integer . parseInt ( text ) ; } catch ( NumberFormatException e ) { throw new DataParseException ( e ) ; } }
23328	@ Override public final long available ( ) { try { return raf . length ( ) - raf . getFilePointer ( ) ; } catch ( IOException e ) { System . err . println ( _CHAR ERROR _CHAR + e ) ; return _NUM ; } }
23333	@ Override public String toString ( ) { return getClass ( ) . getSimpleName ( ) ; }
23344	public static SM_SYSTEM_MESSAGE STR_MSG_GET_HCOIN_02 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23373	public boolean isHorizontalGuideline ( ) { if ( mConstraintWidget instanceof Guideline ) { Guideline g = ( Guideline ) mConstraintWidget ; return g . getOrientation ( ) == Guideline . HORIZONTAL ; } return _BOOL ; }
23392	public String post ( String stream ) throws HttpClientException { this . rawStream = stream ; return sendHttpRequest ( _CHAR post _CHAR ) ; }
23411	public static int [ ] convertToIntArray ( long [ ] longArray ) { int [ ] intArray = new int [ longArray . length ] ; for ( int i = _NUM ; i < longArray . length ; i ++ ) { intArray [ i ] = ( int ) longArray [ i ] ; } return intArray ; }
23427	public int length ( ) { return length ; }
23472	public InputStream bindStream ( InputStream input ) { InputStream oldValue = m_streams . get ( ) ; m_streams . set ( input ) ; return oldValue ; }
23474	@ Override public int [ ] makeCumulativeTestPoints ( ) { return makeDensityTestPoints ( ) ; }
23482	public static boolean isWindowsSystem ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
23498	public void nextRow ( ) throws SQLException { currentRow . next ( ) ; }
23508	public static AnySpacePredicate any ( ISpacePredicate ... predicates ) { return new AnySpacePredicate ( predicates ) ; }
23515	public ChangeSet decrement ( String path , int delta ) { return increment ( path , - delta ) ; }
23528	private static boolean isAccessibilityManagerEnabled ( Context context ) { AccessibilityManager accessibilityManager = ( ( AccessibilityManager ) context . getSystemService ( Context . ACCESSIBILITY_SERVICE ) ) ; return accessibilityManager != _NULL && accessibilityManager . isEnabled ( ) ; }
23558	public static AztecCode encode ( byte [ ] data ) { return encode ( data , DEFAULT_EC_PERCENT , DEFAULT_AZTEC_LAYERS ) ; }
23583	public void removeEntry ( Remote object ) { Entry entry = _objMap . remove ( object ) ; _objIdMap . remove ( entry . m_ObjectId ) ; }
23605	public int id ( ) { return id ; }
23626	public static void zipDir ( File zipDirectory , File output ) { zipDir ( zipDirectory . getAbsolutePath ( ) , output . getAbsolutePath ( ) ) ; }
23656	public void closeDriver ( ) { if ( camera != _NULL ) { FlashlightManager . disableFlashlight ( ) ; camera . release ( ) ; camera = _NULL ; } }
23658	public void runOptimizations ( ) { buildDependenceGraph ( ) ; distillConstraints ( ) ; buildImpactGraph ( ) ; computeWeightsForPts ( ) ; }
23671	public static Map < String , String > parseKeyAndValueToMap ( String source , boolean ignoreSpace ) { return parseKeyAndValueToMap ( source , DEFAULT_KEY_AND_VALUE_SEPARATOR , DEFAULT_KEY_AND_VALUE_PAIR_SEPARATOR , ignoreSpace ) ; }
23677	private boolean canShowUpdaterView ( int deltaY ) { final int firstVisibleItem = getFirstVisiblePosition ( ) ; final int fistViewTop = getChildAt ( _NUM ) . getTop ( ) ; final int topPadding = getListPaddingTop ( ) ; return ( firstVisibleItem == _NUM && fistViewTop >= topPadding && deltaY > _NUM ) ; }
23680	@ Deprecated public void showDoneButton ( boolean showDone ) { setProgressButtonEnabled ( showDone ) ; }
23698	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
23734	public byte [ ] encrypt ( byte [ ] bytes ) { byte [ ] resp = _NULL ; try { resp = crypt ( bytes , Cipher . ENCRYPT_MODE ) ; } catch ( Exception e ) { return _NULL ; } return resp ; }
23735	public static JAXBContext createTtmlJaxbContext ( ) throws JAXBException { return JAXBContext . newInstance ( TTML_PACKAGES ) ; }
23736	public Value toUpperCase ( Value str ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
23752	public void inc ( Counter < KeyType > another ) { for ( Entry < KeyType , Long > e : another . hash . entrySet ( ) ) { inc ( e . getKey ( ) , e . getValue ( ) ) ; } }
23754	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
23772	@ VisibleForTesting void overrideDecidedStateForTesting ( boolean decidedState ) { mDidOverrideDecidedStateForTesting = _BOOL ; mDecidedStateForTesting = decidedState ; }
23799	@ Override public void removeRow ( int idx ) { RepositorySourceProvider userSourceProvider = getUserSourceProvider ( ) ; assert userSourceProvider != _NULL ; userSourceProvider . removeSource ( getRowValue ( idx ) . mySource ) ; refreshUi ( ) ; }
23805	public int truncate_file ( String group_name , String appender_filename ) throws IOException , MyException { final long truncated_file_size = _NUM ; return this . truncate_file ( group_name , appender_filename , truncated_file_size ) ; }
23810	public static SM_SYSTEM_MESSAGE STR_WHISPER_REFUSE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23828	public void addTask ( TaskId taskId , Future < ? > task ) { cancelTask ( taskId ) ; tasks . put ( taskId . ordinal ( ) , task ) ; }
23842	public boolean containsEx ( String memberName ) { return legionMemberExByName . containsKey ( memberName ) ; }
23855	public static void logLowPrioritySearchRequestOutcome ( boolean isFailure ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchLowPrioritySearchRequestStatus _CHAR , isFailure ? REQUEST_FAILED : REQUEST_NOT_FAILED , REQUEST_BOUNDARY ) ; }
23869	public List < ConfigurationEntry > build ( ) { return config ; }
23895	public static void log ( TeamException e ) { log ( e . getStatus ( ) ) ; }
23933	public Builder cacheOnDisk ( boolean cacheOnDisk ) { this . cacheOnDisk = cacheOnDisk ; return this ; }
23974	public static String stringToHex ( final String data ) { return new String ( Hex . encodeHex ( ConversionUtils . stringToArray ( data ) ) ) ; }
23976	void adjustSelection ( int selectionStartAdjust , int selectionEndAdjust ) { if ( selectionStartAdjust == _NUM && selectionEndAdjust == _NUM ) return ; ContentViewCore basePageContentView = getBaseContentView ( ) ; if ( basePageContentView != _NULL && basePageContentView . getWebContents ( ) != _NULL ) { mDidExpandSelection = _BOOL ; basePageContentView . getWebContents ( ) . adjustSelectionByCharacterOffset ( selectionStartAdjust , selectionEndAdjust ) ; } }
23978	public IVarAbstraction findInstanceField ( AllocNode obj , SparkField field ) { AllocDotField af = findAllocDotField ( obj , field ) ; return consG . get ( af ) ; }
23979	public void groupBy ( String column ) throws QueryPlanException { this . groupByColumn = column ; }
23997	@ Override public void onReset ( ) { onDestroy ( ) ; }
24011	public ThisRef newThisRef ( RefType t ) { return new ThisRef ( t ) ; }
24018	@ Override public void endNormalization ( Service . Builder builder ) { }
24021	public synchronized int size ( ) { return count ; }
24028	public MarketSearchQuery q ( String value ) { return unsafeParam ( _CHAR q _CHAR , value ) ; }
24045	public static final double feetPerSecondToMetersPerSecond ( double feetPerSecond ) { return feetPerSecond * METER_TO_FOOT ; }
24111	public byte [ ] compress ( float [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
24139	protected void addRow ( Object [ ] carbonTuple ) throws SliceMergerException { Object [ ] rowInWritableFormat ; rowInWritableFormat = tupleConvertor . getObjectArray ( carbonTuple ) ; try { this . dataHandler . addDataToStore ( rowInWritableFormat ) ; } catch ( CarbonDataWriterException e ) { throw new SliceMergerException ( _CHAR Problem in merging the slice _CHAR , e ) ; } }
24142	public void outputComplete ( ) { final int bufferIndex = ( int ) ( outputCnt % bufferSize ) ; inputs . set ( bufferIndex , _NULL ) ; outputs . set ( bufferIndex , _NULL ) ; outputCnt ++ ; outputThreadLock . unlock ( ) ; }
24152	public boolean isTranformInProgress ( ) { return m_transact . isRunning ( ) ; }
24153	public static SM_SYSTEM_MESSAGE STR_DECOMPOSE_ITEM_INVALID_STANCE ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
24160	String internalsprintf ( String s ) throws IllegalArgumentException { String s2 = _CHAR _CHAR ; if ( conversionCharacter == _CHAR || conversionCharacter == _CHAR ) s2 = printSFormat ( s ) ; else throw new IllegalArgumentException ( _CHAR Can not _CHAR + _CHAR format a String with a format using a _CHAR + conversionCharacter + _CHAR conversion character . '' ) ; return s2 ; }
24181	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
24215	public boolean hasExtendedDuration ( ) { return extended ; }
24216	public ViewsFinder excludingChildsFromFilteredGroupViews ( ) { this . addChildsFromFilteredGroupViews = _BOOL ; return this ; }
24247	@ Override public int hashCode ( ) { return ( int ) ( delta ^ ( delta >> _NUM ) ) ; }
24298	public static final void onPlayerLogin ( Player player ) { for ( PlayerGroup group : groups . values ( ) ) { PlayerGroupMember member = group . getMember ( player . getObjectId ( ) ) ; if ( member != _NULL ) { group . onEvent ( new PlayerConnectedEvent ( group , player ) ) ; } } }
24347	public void elevateHeaders ( int dp ) { this . headerElevation = dp ; if ( positioner != _NULL ) { positioner . setElevateHeaders ( dp ) ; } }
24349	private static void recordHistogram ( int result ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Geolocation . HeaderSentOrNot _CHAR , result , UMA_MAX ) ; }
24353	public boolean isServiceSelected ( ) { return tabbedPane != _NULL && tabbedPane . getSelectedComponent ( ) != _NULL && tabbedPane . getSelectedComponent ( ) instanceof ServicePanel ; }
24372	private void localRedisConnect ( ) { if ( this . localJedis == _NULL ) { logger . info ( _CHAR Connecting to Redis . '' ) ; this . localJedis = JedisUtils . connect ( REDIS_ADDRESS , REDIS_PORT ) ; } }
24383	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
24390	public VideoHideCatalogSectionQuery hideCatalogSection ( UserActor actor , int sectionId ) { return new VideoHideCatalogSectionQuery ( getClient ( ) , actor , sectionId ) ; }
24406	public void addMenuItem ( String name , ActionListener listener ) { int row = m_items . addRow ( ) ; m_items . set ( row , LABEL , name ) ; m_items . set ( row , ACTION , listener ) ; }
24411	public float [ ] queryMarkerTransformation ( int markerUID ) { if ( ! initedNative ) return _NULL ; return NativeInterface . arwQueryMarkerTransformation ( markerUID ) ; }
24433	public JSONArray optJSONArray ( int index ) { Object o = opt ( index ) ; return o instanceof JSONArray ? ( JSONArray ) o : _NULL ; }
24452	public static final void onPlayerLogout ( Player player ) { PlayerAlliance alliance = player . getPlayerAlliance2 ( ) ; if ( alliance != _NULL ) { PlayerAllianceMember member = alliance . getMember ( player . getObjectId ( ) ) ; member . updateLastOnlineTime ( ) ; alliance . onEvent ( new PlayerDisconnectedEvent ( alliance , player ) ) ; } }
24455	public void addSupportedType ( @ NotNull AnnotatedClass object ) { mSupportedTypesMap . put ( TypeUtils . getOuterClassType ( object . getType ( ) ) , object ) ; mSupportedTypes . add ( object . getElement ( ) ) ; }
24464	public void appendGroup ( Group group ) throws ObjectAlreadyHasException { assertNotContains ( group ) ; groups . add ( group . getName ( ) ) ; }
24485	public static String toString ( InetSocketAddress address ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( address . getHostName ( ) ) . append ( COLON ) . append ( address . getPort ( ) ) ; return sb . toString ( ) ; }
24490	public static byte [ ] loadImageFile ( File imageLoc ) throws IOException { FileInputStream fis = new FileInputStream ( imageLoc ) ; byte [ ] read = new byte [ fis . available ( ) ] ; fis . read ( read ) ; fis . close ( ) ; return read ; }
24525	public boolean shouldInterceptNavigation ( ExternalNavigationHandler externalNavHandler , NavigationParams navigationParams ) { return _BOOL ; }
24526	private static final UByte [ ] mkValues ( ) { UByte [ ] ret = new UByte [ _NUM ] ; for ( int i = Byte . MIN_VALUE ; i <= Byte . MAX_VALUE ; i ++ ) ret [ i & MAX_VALUE ] = new UByte ( ( byte ) i ) ; return ret ; }
24527	private boolean isText ( Object content ) { return content instanceof String ; }
24531	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
24553	public static AndSpacePredicate and ( ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return new AndSpacePredicate ( leftPredicate , rightPredicate ) ; }
24579	public byte [ ] compress ( short [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
24586	public static SM_SYSTEM_MESSAGE STR_ENCHANT_ITEM_INVALID_STANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24602	@ Override public void close ( ) { socket . close ( ) ; }
24606	public static SM_SYSTEM_MESSAGE STR_MSG_SLAYER_DEATH_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
24607	public static SM_SYSTEM_MESSAGE STR_IS_NOT_WILLING_TO_RECEIVE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24621	public Builder piecesSpacing ( float piecesSpacing ) { this . piecesSpacing = piecesSpacing ; return this ; }
24636	void dumpBinary ( DataOutputStream os ) throws IOException { Utilities . outString ( os , name ) ; os . writeInt ( start ) ; os . writeInt ( count ) ; }
24637	private void closeCounterDataOutputStream ( ) throws DataFallbackException { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR Closing the counter file writer for the file '' + counterFile . getName ( ) ) ; if ( dOutput != _NULL ) { try { dOutput . close ( ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } finally { dOutput = _NULL ; } } }
24640	private static byte [ ] copyOfRange ( byte [ ] from , int start , int end ) { int length = end - start ; byte [ ] result = new byte [ length ] ; System . arraycopy ( from , start , result , _NUM , length ) ; return result ; }
24654	public UsersSearchQuery universityCountry ( Integer value ) { return unsafeParam ( _CHAR university_country _CHAR , value ) ; }
24690	public RecordId currentRecordId ( ) { int id = rp . currentId ( ) ; return new RecordId ( new BlockId ( fileName , currentBlkNum ) , id ) ; }
24691	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
24705	protected PhotosSaveMarketAlbumPhotoQuery photo ( String value ) { return unsafeParam ( _CHAR photo _CHAR , value ) ; }
24714	@ Override public boolean checkCondition ( ) { return team . hasMember ( leavedPlayer . getObjectId ( ) ) ; }
24726	private void hidePublicShare ( ) { getShareViaLinkSwitch ( ) . setVisibility ( View . GONE ) ; getExpirationDateSection ( ) . setVisibility ( View . GONE ) ; getPasswordSection ( ) . setVisibility ( View . GONE ) ; getEditPermissionSection ( ) . setVisibility ( View . GONE ) ; getGetLinkButton ( ) . setVisibility ( View . GONE ) ; getHideFileListingPermissionSection ( ) . setVisibility ( View . GONE ) ; }
24776	static void recordStartedBy ( int source ) { RecordHistogram . recordSparseSlowlyHistogram ( _CHAR DocumentActivity . StartedBy _CHAR , source ) ; }
24779	public Object onMessage ( String id , Object data ) { return _NULL ; }
24788	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
24858	public Point2D convertReferenceToWindow ( Point2D refPoint ) { if ( scrollBackReferenceRect == _NULL ) return _NULL ; else return new Point2D . Double ( Math . round ( refPoint . getX ( ) * scrollBackReferenceRect . getWidth ( ) + scrollBackReferenceRect . getX ( ) ) , Math . round ( refPoint . getY ( ) * scrollBackReferenceRect . getHeight ( ) + scrollBackReferenceRect . getY ( ) ) ) ; }
24875	public void upload ( File zippedFile ) { throw new UnsupportedOperationException ( ) ; }
24908	public int pageCount ( ) { int count = size ( ) ; int pages = count / pageSize ; int mod = count % pageSize ; return mod == _NUM ? pages : ( pages + _NUM ) ; }
24917	public ArrayList < S2CellId > cellIds ( ) { return cellIds ; }
24923	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
24938	protected AccountChangePasswordQuery newPassword ( String value ) { return unsafeParam ( _CHAR new_password _CHAR , value ) ; }
24961	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
24976	@ Override public void close ( Client transportClient ) { if ( transportClient != _NULL ) { transportClient . close ( ) ; log . info ( _CHAR close ( ) - Closed client : _CHAR + transportClient . settings ( ) . get ( _CHAR node . name _CHAR ) ) ; } }
24988	private void debugPrint ( String msg ) { if ( debug ) { System . out . println ( toString ( ) + _CHAR : _CHAR + msg ) ; } }
24990	public void changeTitle ( String path , String newTitle ) throws RepositoryException { jcrHelper . addNodeProperty ( path , JCR_TITLE , newTitle , _NUM ) ; }
25014	private void flush ( ) { myPage . write ( currentBlk ) ; lastFlushedLsn = lastLsn ; }
25020	public boolean enterTheRoom ( Client client ) { if ( roomClients . size ( ) < nMaxmumClients ) if ( ! roomClients . contains ( client ) ) { client . setClientGameTag ( clientGameTag ++ ) ; client . setsEnteredRoom ( getsRoomName ( ) ) ; return roomClients . add ( client ) ; } else return _BOOL ; else return _BOOL ; }
25021	public static void disband ( League league ) { Preconditions . checkState ( league . onlineMembers ( ) <= _NUM , _CHAR Ca n _CHAR_CHAR ) ; leagues . remove ( league . getTeamId ( ) ) ; league . onEvent ( new LeagueDisbandEvent ( league ) ) ; }
25029	public static void broadcastPacketToLegion ( Legion legion , AionServerPacket packet ) { for ( Player onlineLegionMember : legion . getOnlineLegionMembers ( ) ) { sendPacket ( onlineLegionMember , packet ) ; } }
25040	public boolean isPreclosed ( ) { return preclosed ; }
25055	public ChangeSet removeFromMap ( String path , Serializable key ) { return add ( new RemoveFromMapSpaceEntryMutator ( path , key ) ) ; }
25063	public boolean want ( Edge e ) { return e . isExplicit ( ) ; }
25090	public boolean checkSessionKey ( SessionKey key ) { return ( playOk1 == key . playOk1 && accountId == key . accountId && playOk2 == key . playOk2 && loginOk == key . loginOk ) ; }
25123	public LengthExpr newLengthExpr ( Value op ) { return new GLengthExpr ( op ) ; }
25124	@ Override public void addRow ( ) { EditSourceDialog input = showEditDialog ( _NULL ) ; if ( input . isOK ( ) ) { createSource ( input . getUrl ( ) , input . getUiName ( ) ) ; } }
25174	public boolean isDataApproval ( ) { return dataApprovalLevels != _NULL && ! dataApprovalLevels . isEmpty ( ) ; }
25182	public static int kroneckerDelta ( double i , double j ) { return ( i == j ) ? _NUM : _NUM ; }
25244	public static IOFileFilter notFileFilter ( IOFileFilter filter ) { return new NotFileFilter ( filter ) ; }
25261	public static boolean checkContentCanBePulledDown ( PtrFrameLayout frame , View content , View header ) { return ! canChildScrollUp ( content ) ; }
25306	private boolean release ( String id ) { AudioPlayer audio = players . remove ( id ) ; if ( audio == _NULL ) { return _BOOL ; } if ( players . isEmpty ( ) ) { onLastPlayerReleased ( ) ; } audio . destroy ( ) ; return _BOOL ; }
25324	public synchronized Vertex locateVertex ( Vertex v ) { return ( Vertex ) UniqueVertices . get ( v . getLabel ( ) ) ; }
25353	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_PROC_NOT_ADD_PROC ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
25403	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
25427	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( get ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
25484	public PhotosGetMarketUploadServerQuery cropY ( Integer value ) { return unsafeParam ( _CHAR crop_y _CHAR , value ) ; }
25495	private void flushAndRelease ( ) { final int flushResult = SimpleLame . flush ( mp3Buffer ) ; if ( flushResult > _NUM ) { try { os . write ( mp3Buffer , _NUM , flushResult ) ; } catch ( final IOException e ) { Log . e ( TAG , _CHAR Lame flush error _CHAR ) ; } } }
25505	public static AuthToken load ( String sid , String token ) { return Helper . load ( W . create ( _CHAR sid _CHAR , sid ) . and ( _CHAR token _CHAR , token ) . and ( _CHAR expired _CHAR , System . currentTimeMillis ( ) , W . OP_GT ) , AuthToken . class ) ; }
25517	public ResponsePacket visit ( SetUseSingleSpace request , QuerySession session ) { ResponsePacket response = new ResponsePacket ( ) ; session . setUseRegularSpace ( request . isUseSingleSpace ( ) ) ; return response ; }
25519	public static void storeKey ( SecretKey key , File file ) { try { ObjectOutputStream out = new ObjectOutputStream ( new FileOutputStream ( file ) ) ; out . writeObject ( key ) ; out . flush ( ) ; out . close ( ) ; } catch ( Exception e ) { throw new EncodingException ( e ) ; } }
25539	private List < Experiment . ID > expectedResult ( List < Map < String , byte [ ] >> queryResult ) { List < Experiment . ID > resultList = new ArrayList < > ( queryResult . size ( ) ) ; queryResult . forEach ( _NULL ) ; return resultList ; }
25556	public static String slurpFileNoExceptions ( File file ) { try { return slurpReader ( new FileReader ( file ) ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
25568	public ParseException syntaxError ( String message ) { return new ParseException ( message + toString ( ) ) ; }
25581	private static boolean throwsException ( IMethod method , Class < ? > exceptionClass ) { Class < ? > [ ] exceptionClasses = method . getExceptionTypes ( ) ; for ( Class < ? > c : exceptionClasses ) { if ( exceptionClass . isAssignableFrom ( c ) ) { return _BOOL ; } } return _BOOL ; }
25585	public boolean isButtonEnabled ( SiteAdminButtons button ) { return ! getButton ( button ) . findElement ( By . xpath ( BUTTON_TABLE_PARENT_XPATH ) ) . getAttribute ( HtmlTags . Attributes . CLASS ) . contains ( DISABLED_BUTTON_CLASS ) ; }
25599	public void runSyncIgnore ( String localName , ModelService service , Map < String , ? extends Object > context ) throws ServiceAuthException , ServiceValidationException , GenericServiceException { runSync ( localName , service , context , _BOOL ) ; }
25632	public static Range of ( int lowerBound , int upperBound ) { return new Range ( lowerBound , upperBound ) ; }
25644	public static byte [ ] loadBinaryFileAsBytes ( final String file ) throws IOException { final FileInputStream inputStream = new FileInputStream ( file ) ; final byte [ ] data = new byte [ inputStream . available ( ) ] ; inputStream . read ( data ) ; inputStream . close ( ) ; return data ; }
25645	public static int sizeOfType ( Type t ) { if ( t instanceof DoubleWordType || t instanceof LongType || t instanceof DoubleType ) return _NUM ; else if ( t instanceof VoidType ) return _NUM ; else return _NUM ; }
25656	@ Override public void finish ( ) { CarbonUtil . closeStreams ( stream ) ; }
25663	private Date parseDate ( String date ) { try { return DateFormat . getDateInstance ( DateFormat . SHORT ) . parse ( date ) ; } catch ( ParseException e ) { MessageDialog . openError ( getShell ( ) , Messages . FilterRevisionsDialog_dateParseErrorTitle , Messages . FilterRevisionsDialog_dateParseErrorMessage ) ; return _NULL ; } }
25686	protected boolean filterCheck ( VisualItem item ) { if ( filter == _NULL ) return _BOOL ; try { return filter . getBoolean ( item ) ; } catch ( Exception e ) { Logger . getLogger ( getClass ( ) . getName ( ) ) . warning ( e . getMessage ( ) + _CHAR \ n _CHAR + StringLib . getStackTrace ( e ) ) ; return _BOOL ; } }
25721	public Table instantiate ( ) { return instantiate ( _NUM ) ; }
25753	@ Override public void run ( ) { try { listener . notifySupervisionEvent ( event ) ; } catch ( RuntimeException e ) { LOGGER . error ( _CHAR Exception caught while notifying supervision event : the supervision status will no longer be correct and needs refreshing ! '' , e ) ; } }
25757	public static S2CellId fromLatLng ( S2LatLng ll ) { return fromPoint ( ll . toPoint ( ) ) ; }
25801	public FieldVector3D < T > normalize ( ) throws MathRuntimeException { final T s = getNorm ( ) ; if ( s . getReal ( ) == _NUM ) { throw new MathRuntimeException ( LocalizedGeometryFormats . CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR ) ; } return scalarMultiply ( s . reciprocal ( ) ) ; }
25804	public static NotSpacePredicate not ( ISpacePredicate predicate ) { return new NotSpacePredicate ( predicate ) ; }
25832	public void pokePocketCrafting ( ) { }
25840	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
25846	private void writeEscUTF16 ( String s , int start , int length , boolean isAttVal ) throws SAXException { String subString = s . substring ( start , start + length ) ; write ( StringEscapeUtils . escapeHtml4 ( subString ) ) ; }
25850	public int writeGraphToFile ( byte [ ] img , File to ) { try { FileOutputStream fos = new FileOutputStream ( to ) ; fos . write ( img ) ; fos . close ( ) ; } catch ( java . io . IOException ioe ) { return - _NUM ; } return _NUM ; }
25860	public GotoStmt newGotoStmt ( Unit target ) { return new JGotoStmt ( target ) ; }
25906	private Table readTable ( int index ) { TableBlock block = _blocks . get ( getBlock ( index ) ) ; return block . getTable ( getBlockOffset ( index ) ) ; }
25908	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
25910	public static SM_SYSTEM_MESSAGE STR_MSG_BC_NOT_ENOUGH_PARAMETER ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
25930	public static boolean bookmark ( String id ) { init ( context ) ; if ( ! isBookmarked ( id ) ) { Inquiry . get ( ) . insertInto ( Constants . DATABASE_NAME , BookmarksDB . class ) . values ( new BookmarksDB ( id ) ) . run ( ) ; return _BOOL ; } else unbookmark ( id ) ; return _BOOL ; }
25940	public SimpleCurveFitter withStartPoint ( double [ ] newStart ) { return new SimpleCurveFitter ( function , newStart . clone ( ) , maxIter ) ; }
25953	private RbacAuthorizationDetails createAuthDetails ( ) { RbacAuthorizationDetails authDetails = new RbacAuthorizationDetails ( ) ; authDetails . setRbacClass ( _CHAR Manos _CHAR ) ; authDetails . setRbacDevice ( _CHAR Mark _CHAR ) ; authDetails . setRbacProperty ( _CHAR Matias _CHAR ) ; return authDetails ; }
25962	private boolean canChangeSelfIntro ( Player activePlayer , String newSelfIntro ) { return isValidSelfIntro ( newSelfIntro ) ; }
25968	public boolean isParam ( ) { return _BOOL ; }
25973	public void clear ( ) { parameters . clear ( ) ; }
25978	public void toAll ( ) { toAll ( OpenModLoader . getSidedHandler ( ) . getServer ( ) . getPlayerList ( ) . getPlayerList ( ) ) ; }
25986	public static SM_SYSTEM_MESSAGE STR_DUEL_STOP_BROADCAST ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
25998	public DistributedLogClientBuilder streamStatsReceiver ( StatsReceiver streamStatsReceiver ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _streamStatsReceiver = streamStatsReceiver ; return newBuilder ; }
26049	public boolean isMessage ( ) { return kind == Type . TYPE_MESSAGE ; }
26062	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public ValueStore branch ( long run ) { V o = get ( ) ; if ( o != _NULL ) backedStore . put ( new SequenceStateKey ( key . topic , key . partition , run ) , o ) ; return new ValueStore ( this . key . topic , this . key . partition , run , this . backedStore ) ; }
26069	private void doDelete ( FileEntry entry ) { for ( FileAlterationListener listener : listeners ) { if ( entry . isDirectory ( ) ) { listener . onDirectoryDelete ( entry . getFile ( ) ) ; } else { listener . onFileDelete ( entry . getFile ( ) ) ; } } }
26078	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
26079	private static Principal [ ] checkPrincipals ( Principal [ ] principals ) { if ( principals == _NULL ) { return _NULL ; } principals = principals . clone ( ) ; for ( int i = principals . length ; -- i >= _NUM ; ) { if ( principals [ i ] == _NULL ) { throw new NullPointerException ( _CHAR principal can not be _NULL _CHAR ) ; } } return principals ; }
26114	public Builder maxColumn ( String ... columns ) { return add ( ReduceOp . Max , columns ) ; }
26123	public boolean addTagId ( final Long tagId ) { if ( tagId != _NULL && tagId > _NUM ) { return tagIds . add ( tagId ) ; } return _BOOL ; }
26132	public Vec2d scale ( double scalar ) { this . x *= scalar ; this . y *= scalar ; return this ; }
26134	public static SecretKey generateKey ( String key , String algorithm ) throws EncodingException { try { SecretKey skey = new SecretKeySpec ( key . getBytes ( _CHAR UTF - _NUM _CHAR ) , algorithm ) ; return skey ; } catch ( Exception e ) { throw new EncodingException ( e ) ; } }
26143	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stumble_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
26151	public static String slurpFile ( File file ) throws IOException { Reader r = new FileReader ( file ) ; return slurpReader ( r ) ; }
26160	public static SM_SYSTEM_MESSAGE STR_COMPOUND_SUCCESS ( int i , int j ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( i ) , new DescriptionId ( j ) ) ; }
26186	public Observable < FirebaseChildEvent > observeChildMoved ( final Query firebaseRef ) { return observeChildEvent ( firebaseRef ) . filter ( filterChildEvent ( EventType . MOVED ) ) ; }
26187	protected void processPlayRequest ( ) { tryToGetAudioFocus ( ) ; if ( mState == State . STOPPED ) { playMedia ( ) ; } else if ( mState == State . PAUSED ) { mState = State . PLAYING ; setUpAsForeground ( String . format ( getString ( R . string . media_state_playing ) , mFile . getFileName ( ) ) ) ; configAndStartMediaPlayer ( ) ; } }
26228	protected void noteAddition ( K key , V newValue ) { for ( CacheListener < K , V > listener : listeners ) { listener . noteKeyAddition ( this , key , newValue ) ; } }
26266	public static boolean isBodyNormalEnabled ( ) { return bodyNormalEnabled ; }
26271	final public void response ( JSON jo ) { if ( jo == _NULL ) { responseJson ( _CHAR { } _CHAR ) ; } else { responseJson ( jo . toString ( ) ) ; } }
26276	@ Override public void undo ( Transaction tx ) { }
26279	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
26309	protected final void fireColumnEvent ( int idx , boolean prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
26380	public int size ( ) { return data . length ; }
26385	public void clear ( ) { for ( int i = _NUM ; i < segments . length ; ++ i ) segments [ i ] . clear ( ) ; }
26386	private AbstractIndex loadBlocks ( String taskId , List < TableBlockInfo > tableBlockInfoList , AbsoluteTableIdentifier tableIdentifier ) throws CarbonUtilException { List < DataFileFooter > footerList = CarbonUtil . readCarbonIndexFile ( taskId , tableBlockInfoList , tableIdentifier ) ; AbstractIndex segment = new SegmentTaskIndex ( ) ; segment . buildIndex ( footerList ) ; return segment ; }
26417	public void closeDriver ( ) { if ( camera != _NULL ) { FlashlightManager . disableFlashlight ( ) ; camera . release ( ) ; camera = _NULL ; } }
26430	private synchronized void refreshPermissions ( ) { if ( userData == _NULL ) { return ; } UserData ud = userData ; ud . recalculatePermissions ( ) ; ud . recalculateMeta ( ) ; getPlugin ( ) . getApiProvider ( ) . fireEventAsync ( new UserPermissionRefreshEvent ( new UserLink ( this ) ) ) ; }
26443	public BlockId block ( ) { return blk ; }
26450	private void tryScrollBackToTop ( ) { if ( ! mPtrIndicator . isUnderTouch ( ) ) { mScrollChecker . tryToScrollTo ( PtrIndicator . POS_START , mDurationToCloseHeader ) ; } }
26477	public void add ( final SAMRecord read , final int position ) { recordAndOffsets . add ( new RecordAndOffset ( read , position ) ) ; }
26478	@ Override protected void handleIOException ( IOException e ) throws IOException { throw new TaggedIOException ( e , tag ) ; }
26483	public DataFrame toDataFrame ( JavaSparkContext jsc , DependencyGraph graph , FeatureFrame featureFrame ) { List < ParsingContext > list = TransitionDecoder . decode ( graph , featureFrame ) ; JavaRDD < ParsingContext > javaRDD = jsc . parallelize ( list ) ; return sqlContext . createDataFrame ( javaRDD , ParsingContext . class ) ; }
26494	public SpaceTypeDescriptorBuilder addFixedProperty ( String propertyName , Class < ? > propertyType ) { return addFixedProperty ( propertyName , propertyType , SpaceDocumentSupport . DEFAULT , StorageType . DEFAULT ) ; }
26503	public static float unQuantize ( short s , float fMin , float fRange ) { return ( ( float ) ( ( ( s ) + _NUM . _NUM ) * fRange / _NUM . _NUM - fMin ) ) ; }
26506	public AdsGetSuggestionsQueryWithCities country ( Integer value ) { return unsafeParam ( _CHAR country _CHAR , value ) ; }
26519	public boolean isTransactionComplete ( ) { return transactionComplete ; }
26527	public static String makeLogTag ( Class cls ) { return makeLogTag ( cls . getSimpleName ( ) ) ; }
26542	protected final void fireColumnEvent ( int idx , Object prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
26557	@ Override public final void writeMapleAsciiString ( final String s ) { writeShort ( ( short ) s . length ( ) ) ; writeAsciiString ( s ) ; }
26574	public void onLoad ( boolean viewRecreated ) { }
26629	public Vector2D toSpace ( Vector < Euclidean1D > vector ) { return toSpace ( ( Point < Euclidean1D > ) vector ) ; }
26651	public TrafficLogPredicate add ( Predicate < HarEntry > entry ) { predicates . add ( entry ) ; return this ; }
26653	public static final SM_SYSTEM_MESSAGE STR_MAIL_CASHITEM_BUY ( int itemId ) { return new SM_SYSTEM_MESSAGE ( _NUM , _CHAR [ item : _CHAR + itemId + _CHAR ] _CHAR ) ; }
26688	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
26715	public boolean contains ( String name ) { return indexOf ( name ) != - _NUM ; }
26726	private static String wrapWithMergeConflict ( String original , String added ) { String sep = _CHAR \ n _CHAR ; return _CHAR << << << < Original _CHAR + sep + original + sep + _CHAR ======= _CHAR + sep + added + _CHAR >> >> >> > Added _CHAR + sep ; }
26758	@ Override protected void finalize ( ) throws Throwable { super . finalize ( ) ; _map . remove ( _key , _value ) ; }
26759	public boolean hasProgramStatus ( ) { return programStatus != _NULL ; }
26765	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( get ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
26784	@ Override public boolean onUnbind ( Intent intent ) { ( ( FileDownloaderBinder ) mBinder ) . clearListeners ( ) ; return _BOOL ; }
26792	public boolean contains ( BasenameList bnl ) { if ( bnl . getLength ( ) > this . getLength ( ) ) return ( _BOOL ) ; for ( int i = _NUM ; i < bnl . getLength ( ) ; i ++ ) { if ( ! this . contains ( bnl . getName ( i ) ) ) return ( _BOOL ) ; } return ( _BOOL ) ; }
26794	public static void addLooperPrinter ( Printer printer ) { addLooperPrinter ( Looper . myLooper ( ) , printer ) ; }
26796	public GotoStmt newGotoStmt ( Unit target ) { return Jimple . v ( ) . newGotoStmt ( target ) ; }
26798	public BafBody newBody ( SootMethod m ) { return new BafBody ( m ) ; }
26799	public boolean isVariable ( ) { return _BOOL ; }
26817	protected Object newInitialFlow ( ) { return emptySet . clone ( ) ; }
26875	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
26897	@ Deprecated public static void putJava2IANAMapping ( String javaEncoding , String ianaEncoding ) { fJava2IANAMap . put ( javaEncoding , ianaEncoding ) ; }
26902	public ChangeSet decrement ( String path , byte delta ) { return increment ( path , - delta ) ; }
26910	private boolean dynomiteRedisPing ( Jedis dynomiteJedis ) { if ( dynomiteJedis . ping ( ) . equals ( _CHAR PONG _CHAR ) == _BOOL ) { logger . warn ( _CHAR Pinging Dynomite failed _CHAR ) ; return _BOOL ; } logger . info ( _CHAR Dynomite is up and running _CHAR ) ; return _BOOL ; }
26927	@ NotNull public NlConfigurationToolbarFixture requireDevice ( @ NotNull String id ) { Wait . seconds ( _NUM ) . expecting ( _CHAR configuration to be updated _CHAR ) . until ( _NULL ) ; return this ; }
26978	@ Override public void startDocument ( ) throws SAXException { baseURIStack . push ( catalog . getCurrentBase ( ) ) ; overrideStack . push ( catalog . getDefaultOverride ( ) ) ; return ; }
26995	public static boolean isXML11Invalid ( int c ) { return ! isXML11Valid ( c ) ; }
27000	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
27030	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
27037	public boolean isIconGenerated ( ) { return mIsIconGenerated ; }
27048	public Builder withPrevKV ( boolean prevKV ) { this . prevKV = prevKV ; return this ; }
27066	public static Pair < ZooKeeperServerShim , Integer > runZookeeperOnAnyPort ( File zkDir ) throws Exception { return runZookeeperOnAnyPort ( ( int ) ( Math . random ( ) * _NUM + _NUM ) , zkDir ) ; }
27067	public static SM_SYSTEM_MESSAGE STR_COMBINE_USAGE_OVER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27100	public SQLSchemaMigrator migrate ( Loader loader ) { loader . addToQueue ( migrate ( ) ) ; loader . flush ( ) ; loader . waitToFinish ( ) ; return this ; }
27146	@ Override public boolean isEnabled ( ) { return mIsEnabled ; }
27189	public static void resetCount ( ) { count = _NUM ; }
27216	public void reset ( ) { for ( int i = _NUM ; i < measureDataChunk . length ; i ++ ) { this . measureDataChunk [ i ] = _NULL ; } for ( int i = _NUM ; i < dimensionDataChunk . length ; i ++ ) { this . dimensionDataChunk [ i ] = _NULL ; } }
27221	public static boolean expressionIsTrue ( String expression ) { final JEP parser = getJep ( ) ; parser . parseExpression ( expression ) ; return isEqual ( parser . getValue ( ) , _NUM . _NUM ) ; }
27226	public void putCorrection ( String ocredPokemonName , String correctedPokemonName ) { userCorrections . put ( ocredPokemonName , correctedPokemonName ) ; }
27227	public String toString ( ) { return Graph . toString ( ) ; }
27237	public static String formatPrice ( Double price ) { if ( price == _NULL ) return _CHAR _CHAR ; return formatPrice ( price . doubleValue ( ) ) ; }
27291	private void writeDictionaryFile ( ) throws IOException { ColumnDictionaryChunk columnDictionaryChunk = new ColumnDictionaryChunk ( ) ; columnDictionaryChunk . setValues ( oneDictionaryChunkList ) ; writeThriftObject ( columnDictionaryChunk ) ; }
27292	NewExpr newNewExpr ( RefType type ) { return Jimple . v ( ) . newNewExpr ( type ) ; }
27297	public int pageCount ( ) { int r = values / pageSize ; int m = values % pageSize ; return m == _NUM ? r : ( r + _NUM ) ; }
27301	public double lngDegrees ( ) { return _NUM . _NUM / Math . PI * lngRadians ; }
27312	@ PreDestroy public void automaticsBrokerStop ( ) throws Exception { stopBroker ( ) ; }
27320	public static boolean isLowSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
27346	public UsersIsAppUserQuery isAppUser ( UserActor actor ) { return new UsersIsAppUserQuery ( getClient ( ) , actor ) ; }
27374	@ Override protected void onMeasure ( int widthMeasureSpec , int heightMeasureSpec ) { super . onMeasure ( heightMeasureSpec , heightMeasureSpec ) ; }
27385	public Dimension findByApiName ( String dimensionName ) { return apiNameToDimension . get ( dimensionName ) ; }
27404	public Boolean isTriggerNotifyTemplate ( ) { return triggerNotifyTemplate ; }
27425	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
27446	@ ColorInt private int extractIntAttribute ( Context context , int [ ] attribute ) { TypedValue typedValue = new TypedValue ( ) ; TypedArray a = context . obtainStyledAttributes ( typedValue . data , attribute ) ; int color = a . getColor ( _NUM , _NUM ) ; a . recycle ( ) ; return color ; }
27462	public void convertInputsToItt ( ) throws TransformerConfigurationException { Transformer transformer = TtmlUtils . createTtmlTransformer ( TTML_TO_ITT_TRANSFORMATION ) ; convertedItts = ttmlTts . stream ( ) . map ( _NULL ) . collect ( Collectors . toCollection ( _NULL ) ) ; mergedItt = convertedItts . get ( _NUM ) ; }
27469	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_INTERVAL_TO_B ( String skilltarget , int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 ) ; }
27471	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_MY ( String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster ) ; }
27481	public void removeObserver ( final FileAlterationObserver observer ) { if ( observer != _NULL ) { while ( observers . remove ( observer ) ) { } } }
27483	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MEMBER_RANK_DONE_1_GUILD_MASTER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27492	public AemTags addTag ( String namespace , String pathAndTagName ) throws DeniedTagException { final String textToSend ; if ( StringUtils . isNotBlank ( namespace ) ) { textToSend = namespace + NAMESPACE_SEPARATOR + pathAndTagName ; } else { textToSend = pathAndTagName ; } return addTag ( textToSend ) ; }
27500	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_ENEMY_ATTACK ( int num1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0 ) ; }
27525	public Value toLowerCase ( Value str ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
27553	public byte [ ] compress ( byte [ ] unCompInput ) { try { return Snappy . rawCompress ( unCompInput , unCompInput . length ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
27566	private boolean supportsControllableClass ( ZWaveNode node ) { for ( CommandClass commandClass : controllableClasses ) { if ( node . supportsCommandClass ( commandClass ) == _BOOL ) { return _BOOL ; } } return _BOOL ; }
27574	public void addCommunicationListener ( FTPCommunicationListener listener ) { communicationListeners . add ( listener ) ; }
27578	public ChangeSet increment ( String path , long delta ) { return add ( new IncrementSpaceEntryMutator ( path , delta ) ) ; }
27596	public LogSeqNum logSetVal ( Buffer buff , int offset , Constant newVal ) { if ( enableLogging ) { BlockId blk = buff . block ( ) ; if ( isTempBlock ( blk ) ) return _NULL ; return new SetValueRecord ( txNum , blk , offset , buff . getVal ( offset , newVal . getType ( ) ) , newVal ) . writeToLog ( ) ; } else return _NULL ; }
27602	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_PAINT_SUCCEED ( int objectNameId , int colorItemNameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( objectNameId ) , new DescriptionId ( colorItemNameId ) ) ; }
27606	public Object [ ] fetchConverted ( ) throws KeyGenException { if ( _NULL != currentConveretedRawRow ) { return currentConveretedRawRow ; } if ( hasNext ( ) ) { Object [ ] rawRow = batch . getRawRow ( counter ) ; currentConveretedRawRow = convertRow ( rawRow ) ; ; return currentConveretedRawRow ; } else { return _NULL ; } }
27673	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
27705	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
27724	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_OPTION_INVALID_STANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27725	public byte [ ] decrypt ( byte [ ] bytes ) { byte [ ] resp = _NULL ; try { resp = crypt ( bytes , Cipher . DECRYPT_MODE ) ; } catch ( Exception e ) { return _NULL ; } return resp ; }
27750	public void closeDriver ( ) { if ( mCamera != _NULL ) { mCamera . release ( ) ; mInitialized = _BOOL ; mPreviewing = _BOOL ; mCamera = _NULL ; } }
27753	public VideoSaveQuery wallpost ( Boolean value ) { return unsafeParam ( _CHAR wallpost _CHAR , value ) ; }
27763	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; } }
27769	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
27774	public static TestLookupDimensionConfig buildStandardLookupDimensionConfig ( TestApiDimensionName dimensionName , List < String > namespaces ) { return new TestLookupDimensionConfig ( buildStandardDimensionConfig ( dimensionName ) , namespaces ) ; }
27794	public static JsonRootNode readJSON ( File file ) { StringBuffer strings = FileUtility . readFromFile ( file ) ; return jsonFromString ( strings . toString ( ) ) ; }
27795	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; camera . autoFocus ( autoFocusCallback ) ; } }
27797	public void onNewIntent ( Intent intent ) { }
27816	@ Override public Object illegal ( Metadata < DTO > metadata ) { return _NULL ; }
27822	private void tryScrollBackToTop ( ) { if ( ! mPtrIndicator . isUnderTouch ( ) ) { mScrollChecker . tryToScrollTo ( PtrIndicator . POS_START , mDurationToCloseHeader ) ; } }
27843	public synchronized int size ( ) { return count ; }
27857	public static String [ ] nullToBlank ( final String [ ] stringArray ) { String [ ] result = stringArray ; if ( stringArray == _NULL ) { result = new String [ ] { } ; } return result ; }
27861	public int flags ( ) { return theFlags ; }
27871	protected PhotosSaveMessagesPhotoQuery photo ( String value ) { return unsafeParam ( _CHAR photo _CHAR , value ) ; }
27995	public boolean canHaveMultipleShapes ( ) { return canHaveMultipleShapes ; }
28009	public static Map < String , Object > sendOrderConfirmNotification ( DispatchContext ctx , Map < String , ? extends Object > context ) { return sendOrderNotificationScreen ( ctx , context , _CHAR PRDS_ODR_CONFIRM _CHAR ) ; }
28039	public static byte parseByte ( String text ) throws DataParseException { try { return Byte . parseByte ( text ) ; } catch ( NumberFormatException e ) { throw new DataParseException ( e ) ; } }
28052	public PhotosDeleteAlbumQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
28057	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
28067	public void start ( Context context , android . support . v4 . app . Fragment fragment , int requestCode ) { fragment . startActivityForResult ( getIntent ( context ) , requestCode ) ; }
28085	public LogSubject containsNoMoreMessages ( ) { assertThat ( messages ) . isEmpty ( ) ; return this ; }
28112	@ Override public boolean isXYLocked ( ) { return _BOOL ; }
28119	final void removeHalfEdges ( DoubleEdgeListHalfEdge edge ) { int index = this . edges . indexOf ( edge ) ; this . removeHalfEdges ( index , edge ) ; }
28120	@ Override public boolean exclude ( String identifier ) { return ! whitelist . contains ( identifier ) ; }
28189	public UsersSearchQuery schoolCountry ( Integer value ) { return unsafeParam ( _CHAR school_country _CHAR , value ) ; }
28221	public int writeGraphToFile ( byte [ ] img , String file ) { File to = new File ( file ) ; return writeGraphToFile ( img , to ) ; }
28225	public static boolean audit ( ) { return audit . get ( ) == _NULL ? _BOOL : audit . get ( ) ; }
28226	public boolean isHttps ( ) { Attribute < Boolean > isHttpsAttr = ctx . attr ( AttributeKey . < Boolean > valueOf ( IS_HTTPS_ATTRIBUTE_NAME ) ) ; Boolean isHttps = isHttpsAttr . get ( ) ; if ( isHttps == _NULL ) { return _BOOL ; } else { return isHttps ; } }
28230	public Builder marginTop ( int marginTop ) { this . marginTop = marginTop ; return this ; }
28231	public static double parseDouble ( String text ) throws DataParseException { try { return Double . parseDouble ( text ) ; } catch ( NumberFormatException e ) { throw new DataParseException ( e ) ; } }
28232	public void clear ( int code ) { MouseButton mb = this . buttons . get ( code ) ; if ( mb == _NULL ) { return ; } mb . clear ( ) ; }
28279	public SpaceTypeDescriptorBuilder replicable ( boolean replicable ) { this . _replicable = replicable ; return this ; }
28282	public boolean equals ( ShoppingCartItem item ) { if ( item == _NULL ) return _BOOL ; return this . equals ( item . getProductId ( ) , item . additionalProductFeatureAndAppls , item . attributes , item . prodCatalogId , item . selectedAmount , item . getItemType ( ) , item . getItemGroup ( ) , item . getIsPromo ( ) ) ; }
28314	public void destroy ( ) { ApplicationStatus . unregisterActivityStateListener ( this ) ; }
28330	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static String mapWritableToString ( MapWritable map ) { JSONObject jsonObj = new JSONObject ( ) ; for ( Writable key : map . keySet ( ) ) { jsonObj . put ( key . toString ( ) , map . get ( key ) . toString ( ) ) ; } return jsonObj . toJSONString ( ) ; }
28333	public static String slurpURLNoExceptions ( URL u , String encoding ) { try { return slurpURL ( u , encoding ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
28344	private void debugPrint ( String msg ) { if ( debug ) { System . out . println ( toString ( ) + _CHAR : _CHAR + msg ) ; } }
28362	public InvokeStmt newInvokeStmt ( Value op ) { return new GInvokeStmt ( op ) ; }
28367	public void resetCircleColors ( ) { if ( mCircleColors == _NULL ) { mCircleColors = new ArrayList < > ( ) ; } mCircleColors . clear ( ) ; }
28398	public static SnippetObject root ( Dynamic obj , KindredSnippets [ ] snippets ) { return new SnippetObject ( obj , _NULL , snippets ) ; }
28411	public String clientAppId ( ) { return ( String ) httpRequest . getAttribute ( AuthenticationFilter . AuthenticatedRoleAttributeName ) ; }
28421	public Set < String > tables ( ) { return tables ; }
28424	public static String guessMimeTypeFromExtension ( String extension ) { if ( extension == _NULL || extension . isEmpty ( ) ) { return _NULL ; } return extensionToMimeTypeMap . get ( extension ) ; }
28466	public AemContentFinder expand ( ) { if ( isCollapsed ( ) ) { bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ContentFinderActions . expand ( ) ) ; bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . visibilityOf ( collapseButton ) ) ; } return this ; }
28485	public long initial ( ) { return initial ; }
28486	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
28491	public static int toOffset ( IBuffer buffer , int line , int column ) { try { return toDocument ( buffer ) . getLineOffset ( line ) + column ; } catch ( BadLocationException e ) { e . printStackTrace ( ) ; } return - _NUM ; }
28496	@ VisibleForTesting public void enableExperiment ( String experiment ) { this . experiments = FluentIterable . from ( experiments ) . append ( experiment ) . toSet ( ) ; }
28497	public static RecipientEntry constructFakePhoneEntry ( final String phoneNumber , final boolean isValid ) { return new RecipientEntry ( ENTRY_TYPE_PERSON , phoneNumber , phoneNumber , INVALID_DESTINATION_TYPE , _NULL , INVALID_CONTACT , _NULL , INVALID_CONTACT , _NULL , _BOOL , isValid , _NULL ) ; }
28504	public IObjectInfo < T > addUnlocked ( T subject ) { return store_impl ( subject ) ; }
28528	@ Override public boolean supports ( AuthenticationToken token ) { return super . supports ( token ) || ( _anonymousId != _NULL && AnonymousToken . isAnonymous ( token ) ) ; }
28533	public ChangeSet decrement ( String path , long delta ) { return increment ( path , - delta ) ; }
28551	private double mean ( double [ ] vec ) { double result = _NUM ; for ( int i = _NUM ; i < vec . length ; i ++ ) result += vec [ i ] ; return result / vec . length ; }
28572	public boolean isAssociated ( int node ) { return isAssociated ( node , _NUM ) ; }
28579	public EnterMonitorStmt newEnterMonitorStmt ( Value op ) { return new GEnterMonitorStmt ( op ) ; }
28592	@ Deprecated public static String removeJava2IANAMapping ( String javaEncoding ) { return ( String ) fJava2IANAMap . remove ( javaEncoding ) ; }
28609	public void addValue ( T v ) { incrementValue ( v , _NUM ) ; }
28612	public Builder removeColumns ( Collection < String > columnNames ) { return transform ( new RemoveColumnsTransform ( columnNames . toArray ( new String [ columnNames . size ( ) ] ) ) ) ; }
28623	public static String id ( long hash ) { return H32 . toString ( hash ) ; }
28625	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_PROC_INVALID_STANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28633	public void removeObserver ( FindToolbarObserver observer ) { mObservers . removeObserver ( observer ) ; }
28636	public void listen ( @ NotNull ObservableValue < ? > src , @ NotNull InvalidationListener listener ) { myListeners . add ( new ListenerPairing ( src , listener ) ) ; }
28643	public static void createCodeGroupClass ( ICodeUnit unit , StructureInfo struInfo ) { IMetadataGroup grp = new DexMetadataGroupClass ( _CHAR codeAnalysisClasses _CHAR , MetadataGroupType . CLASSID , struInfo ) ; unit . getMetadataManager ( ) . addGroup ( grp ) ; }
28672	public boolean isLimitEnabled ( ) { return this . limitEnabled ; }
28686	private static int computeCapacity ( final int expectedSize ) { if ( expectedSize == _NUM ) { return _NUM ; } final int capacity = ( int ) FastMath . ceil ( expectedSize / LOAD_FACTOR ) ; final int powerOfTwo = Integer . highestOneBit ( capacity ) ; if ( powerOfTwo == capacity ) { return capacity ; } return nextPowerOfTwo ( capacity ) ; }
28693	public boolean isEmpty ( ) { if ( mySnippets . length == _NUM ) { return _BOOL ; } for ( KindredSnippets snip : mySnippets ) { Pathway path = snip . getPath ( ) ; if ( myPath . isPrefix ( path ) ) { return _BOOL ; } } return _BOOL ; }
28717	@ Override public void onCanceled ( ) { }
28754	public List < RecognitionResult > recognize ( RecognitionRequest request ) throws ClarifaiException { return Arrays . asList ( new ClarifaiRequester < RecognitionResult [ ] > ( connectionFactory , credentialManager , POST , _CHAR / multiop _CHAR , RecognitionResult [ ] . class , maxAttempts ) . execute ( request ) ) ; }
28834	public boolean supportsCommandClass ( CommandClass commandClass ) { return supportedCommandClasses . containsKey ( commandClass ) ; }
28854	public TapTarget titleTextSize ( int sp ) { if ( sp < _NUM ) throw new IllegalArgumentException ( _CHAR Given negative text size _CHAR ) ; this . titleTextSize = sp ; return this ; }
28890	@ Override public boolean isShown ( ) { return isShown ; }
28894	public static FloatBuffer createFloatBuffer ( int size ) { FloatBuffer buf = ByteBuffer . allocateDirect ( _NUM * size ) . order ( ByteOrder . nativeOrder ( ) ) . asFloatBuffer ( ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
28898	public static SM_SYSTEM_MESSAGE STR_FIND_POS_NPC_FOUND_IN_OTHER_WORLD ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
28928	public boolean filterOut ( final SAMRecord first , final SAMRecord second ) { throw new UnsupportedOperationException ( _CHAR Paired * Filter not implemented ! _CHAR ) ; }
28939	@ Override public Tab createNewTab ( LoadUrlParams loadUrlParams , TabModel . TabLaunchType type , Tab parent ) { return createNewTab ( loadUrlParams , type , parent , _NULL ) ; }
28960	public int hashCode ( ) { return ( int ) ( DelegationAbsoluteTime . class . hashCode ( ) + minStart + maxStart + minStop + maxStop ) ; }
28973	public static SM_SYSTEM_MESSAGE STR_FORCE_HE_IS_ALREADY_MEMBER_OF_OTHER_FORCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29020	public static Map < String , String > strToMap ( String str ) { return strToMap ( str , _CHAR | _CHAR , _BOOL ) ; }
29024	private CountingThreadPoolExecutor createExecutor ( int numThreads ) { return new CountingThreadPoolExecutor ( numThreads , Integer . MAX_VALUE , _NUM , TimeUnit . SECONDS , new LinkedBlockingQueue < Runnable > ( ) ) ; }
29029	public Builder cacheOnDisc ( boolean cacheOnDisc ) { this . cacheOnDisc = cacheOnDisc ; return this ; }
29044	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator [ - summary = summary . txt ] [ - modelDir = models / ] _CHAR + _CHAR [ - nMin = # ] [ - nMax = # ] [ - dist = # ] _CHAR + _CHAR [ - s ] [ - docClass = ... ] [ - compClass = ... ] [ - merge ] _CHAR ) ; System . err . println ( _CHAR nMin = # \ tMin n - gram size .\ nnMax = # \ tMax n - gram size .\ n _CHAR + _CHAR dist = # \ tN - gram window .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - docClass = ... \ tA java class identifier to use as Document class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramDocument \ n _CHAR + _CHAR - compClass = ... \ tA java class identifier to use as Comparator class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramCachedGraphComparator \ n _CHAR + _CHAR - merge \ tIf indicated then the model files _CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR ) ; }
29060	public void requestInclusionStop ( ) { stopInclusionTimer ( ) ; }
29100	public static SM_SYSTEM_MESSAGE STR_EXCHANGE_CANT_ASK_WHEN_HE_IS_ASKED_QUESTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29114	public boolean isPendingOMADownload ( long downloadId ) { return mPendingOMADownloads . get ( downloadId ) != _NULL ; }
29153	private static boolean isPathCharacter ( char p_char ) { return ( p_char <= _CHAR && ( fgLookupTable [ p_char ] & MASK_PATH_CHARACTER ) != _NUM ) ; }
29159	protected void writeShort ( int value ) throws IOException { out . write ( value & _NUM ) ; out . write ( ( value >> _NUM ) & _NUM ) ; }
29175	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
29176	public int size ( ) { return data . length ; }
29177	static boolean isSystemWindows ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
29209	public void insertEntry ( Context context , IEntryHolder entryHolder , boolean origin , boolean shouldReplicate ) throws SAException { }
29211	@ Override public double value ( double z ) { return evaluateInternal ( x , y , z ) ; }
29220	public static String replaceString ( String mainString , String oldString , String newString ) { return StringUtil . replaceString ( mainString , oldString , newString ) ; }
29223	public void resetCircleColors ( ) { mCircleColors = new ArrayList < > ( ) ; }
29230	public static void main ( String argv [ ] ) { System . out . println ( getVersion ( ) ) ; }
29237	public Song next ( ) { switch ( playMode ) { case LOOP : case LIST : case SINGLE : int newIndex = playingIndex + _NUM ; if ( newIndex >= songs . size ( ) ) { newIndex = _NUM ; } playingIndex = newIndex ; break ; case SHUFFLE : playingIndex = randomPlayIndex ( ) ; break ; } return songs . get ( playingIndex ) ; }
29246	public void addDataSources ( Set < ? extends DataSource > added ) { super . registerDataSources ( added ) ; }
29259	private Reader createUTF16Reader ( InputStream stream , boolean isBigEndian ) { return new UTF16Reader ( stream , ( fTempString . ch . length << _NUM ) , isBigEndian , fErrorReporter . getMessageFormatter ( XMLMessageFormatter . XML_DOMAIN ) , fErrorReporter . getLocale ( ) ) ; }
29270	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
29282	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
29308	public String assign ( String value , Object ... replacements ) { if ( setter ( ) != _NULL ) { return assignIfPossible ( value , replacements ) ; } else { throw new IllegalArgumentException ( _CHAR Attempt was made to generate assignment / setter code for [ '' + name + '' . '' + ( property != _NULL ? property : type ) + _CHAR ] which has no setter / assignment method _CHAR ) ; } }
29313	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
29398	@ NonNull public static History single ( @ NonNull Object key ) { return emptyBuilder ( ) . push ( key ) . build ( ) ; }
29419	final void forceFinished ( boolean finished ) { mFinished = finished ; }
29457	public AdsGetSuggestionsQueryWithRegions country ( Integer value ) { return unsafeParam ( _CHAR country _CHAR , value ) ; }
29473	public static int red ( int color ) { return ( color >> _NUM ) & _NUM ; }
29474	public int hashCode ( ) { long v = Double . doubleToLongBits ( value ) ; return ( int ) ( v ^ ( v >> > _NUM ) ) ; }
29515	public Builder cacheOnDisk ( boolean cacheOnDisk ) { this . cacheOnDisk = cacheOnDisk ; return this ; }
29548	public boolean isEnum ( ) { return kind == Type . TYPE_ENUM ; }
29554	@ Override public boolean equals ( Object o ) { return o instanceof AirMapPilotPermit && getId ( ) . equals ( ( ( AirMapPilotPermit ) o ) . getId ( ) ) ; }
29559	@ Override public double value ( double z ) { return evaluate ( a , c , z ) ; }
29578	public static TransformResult of ( Path path , DummyReference originRef ) throws ValidationException , RepoException { return new TransformResult ( path , originRef , originRef . getAuthor ( ) , _CHAR test summary \ n _CHAR ) ; }
29586	public static boolean verifyFileMd5 ( File file , String md5 ) { if ( md5 == _NULL ) { return _BOOL ; } String fileMd5 = getMD5 ( file ) ; if ( fileMd5 == _NULL ) { return _BOOL ; } return md5 . equals ( fileMd5 ) ; }
29600	protected void subAppend ( LoggingEvent event ) { if ( event . getLevel ( ) . toInt ( ) == AuditLevel . AUDIT . toInt ( ) ) { currentLevel = AuditLevel . AUDIT . toInt ( ) ; super . subAppend ( event ) ; } }
29618	public void build ( Context context , SuggestionValue suggestionValue , List < SuggestionRow > suggestionList ) { if ( nextBuilder != _NULL ) { nextBuilder . build ( context , suggestionValue , suggestionList ) ; } }
29634	public boolean isBinaryObject ( ) { return myObject instanceof BinaryObject ; }
29686	public static SM_SYSTEM_MESSAGE STR_CHAT_CHANNEL_JOIN_TRADE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29722	public void onContentLoadStarted ( String url ) { }
29747	public double secondsSinceStart ( ) { return ( timeSinceStart ( ) ) / _NUM . _NUM ; }
29748	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_OPTION_IT_CAN_NOT_BE_GIVEN_OPTION_MORE_TIME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29756	private void removeOptionFields ( Box box , GraphicPanelFieldManager fieldConfigManager ) { if ( optionPanel != _NULL ) { box . remove ( optionPanel ) ; for ( FieldConfigBase field : optionFieldList ) { fieldConfigManager . removeField ( field ) ; } optionFieldList . clear ( ) ; optionPanel = _NULL ; box . revalidate ( ) ; } }
29764	public PhotosGetMarketUploadServerQuery cropX ( Integer value ) { return unsafeParam ( _CHAR crop_x _CHAR , value ) ; }
29781	private void handleUpdateTimeMessage ( ) { invalidate ( ) ; if ( shouldTimerBeRunning ( ) ) { long timeMs = System . currentTimeMillis ( ) ; long delayMs = INTERACTIVE_UPDATE_RATE_MS - ( timeMs % INTERACTIVE_UPDATE_RATE_MS ) ; mUpdateTimeHandler . sendEmptyMessageDelayed ( MSG_UPDATE_TIME , delayMs ) ; } }
29816	public String createToken ( String ipOfClient ) { cleanExpiredTokens ( ) ; if ( this . tokens . size ( ) < CONCURRENT_TOKEN_LIMIT ) { Token tkn = new Token ( ipOfClient ) ; String tokenuid = UUID . randomUUID ( ) . toString ( ) ; this . tokens . put ( tokenuid , tkn ) ; return tokenuid ; } return _NULL ; }
29861	private static Entry [ ] attributesFor ( ) { final Entry info = new ServiceInfo ( _CHAR Transaction Manager _CHAR , _CHAR Sun Microsystems , Inc . '' , _CHAR Sun Microsystems , Inc . '' , com . sun . jini . constants . VersionConstants . SERVER_VERSION , _CHAR _CHAR , _CHAR _CHAR ) ; final Entry type = new com . sun . jini . lookup . entry . BasicServiceType ( _CHAR Transaction Manager _CHAR ) ; return new Entry [ ] { info , type } ; }
29872	public void updateCurrentParsys ( String parsys ) { scenarioContext . add ( ContextKeys . CURRENT_PARSYS , parsys ) ; }
29892	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
29915	private void sendAfterTextChanged ( Editable s ) { if ( mListeners != _NULL ) { for ( int i = _NUM ; i < mListeners . size ( ) ; i ++ ) { mListeners . get ( i ) . afterTextChanged ( s ) ; } } }
29919	public int hashCode ( ) { return ( ServerMinPrincipal . class . hashCode ( ) + Constraint . hash ( principals ) ) ; }
29920	public void requestNodeInfo ( int nodeId ) { enqueue ( new RequestNodeInfoMessageClass ( ) . doRequest ( nodeId ) ) ; }
29927	protected Object newInitialFlow ( ) { return emptySet . clone ( ) ; }
29929	public V remove ( Object key ) { final int index = indexOfKey ( key ) ; if ( index >= _NUM ) { return removeAt ( index ) ; } return _NULL ; }
29940	public synchronized boolean isClosed ( ) { return journalWriter == _NULL ; }
29945	public boolean onSwipedAway ( boolean toRight ) { return _BOOL ; }
29974	public Pair < SourceContextAndPath , Stmt > popTopCallStackItem ( ) { if ( callStack == _NULL || callStack . isEmpty ( ) ) return _NULL ; SourceContextAndPath scap = clone ( ) ; return new Pair < > ( scap , scap . callStack . remove ( _NUM ) ) ; }
29990	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
29996	@ Override public boolean isIdDeclared ( String name ) { return ( fIdIdrefChecking ) ? super . isIdDeclared ( name ) : _BOOL ; }
30033	public static int parseInt ( String text ) throws DataParseException { try { return ColorLib . hex ( text ) ; } catch ( Exception e ) { throw new DataParseException ( e ) ; } }
30057	private Stream < String > resolve ( String template , Stream < File > files ) { Stream < Json > json = files . map ( _NULL ) ; return partitionedStream ( json . iterator ( ) ) . map ( _NULL ) . map ( _NULL ) ; }
30061	void young ( ) { mYoung = _BOOL ; }
30087	void old ( ) { mYoung = _BOOL ; }
30089	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM } ; }
30105	public static String formatPrice ( double price ) { return priceDecimalFormat . format ( price ) ; }
30241	public boolean isInSphere ( Vector origin , double radius ) { return ( NumberConversions . square ( origin . x - x ) + NumberConversions . square ( origin . y - y ) + NumberConversions . square ( origin . z - z ) ) <= NumberConversions . square ( radius ) ; }
30246	public static Bundle addProperties ( Bundle props , int pageNumber , int lastPageNumber ) { props . putInt ( THIS_PAGE_NUMBER , pageNumber ) ; return props ; }
30290	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( getByte ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
30319	public MessagesSendQuery chatId ( Integer value ) { return unsafeParam ( _CHAR chat_id _CHAR , value ) ; }
30334	public void verifyIsDisplayed ( ) { conditions . verify ( visibilityOf ( toolbar ) ) ; }
30367	public void updateView ( ) { dir . execute ( _CHAR update reinduce = _BOOL ; select nodes = previous ; _CHAR , dir . getMainViewer ( ) . getCommandManager ( ) ) ; }
30375	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
30378	public GroupsAddLinkQuery addLink ( UserActor actor , int groupId , String link ) { return new GroupsAddLinkQuery ( getClient ( ) , actor , groupId , link ) ; }
30386	@ NotNull public ActionButtonFixture findRunApplicationButton ( ) { return findActionButtonByActionId ( _CHAR Run _CHAR ) ; }
30398	public static void error ( Object message ) { Gdx . app . error ( TAG , String . valueOf ( message ) ) ; }
30420	public static int cleanup ( long uid ) { return Helper . delete ( W . create ( _CHAR uid _CHAR , uid ) , Lock . class ) ; }
30439	public void resizeFrames ( int numberOfFrames ) { times = new int [ numberOfFrames ] ; frames = new short [ numberOfFrames ] [ ] ; sizes = new int [ numberOfFrames ] ; this . numberOfFrames = numberOfFrames ; }
30444	public boolean hasDimensionConstraints ( ) { Set < DimensionalObject > constraints = getDimensionConstraints ( ) ; return constraints != _NULL && ! constraints . isEmpty ( ) ; }
30448	public boolean isPublished ( long sequence ) { return sequencer . isAvailable ( sequence ) ; }
30452	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
30461	public static SearchShareesFragment newInstance ( OCFile fileToShare , Account account ) { SearchShareesFragment fragment = new SearchShareesFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_FILE , fileToShare ) ; args . putParcelable ( ARG_ACCOUNT , account ) ; fragment . setArguments ( args ) ; return fragment ; }
30462	private static short convertToPrimitiveKind ( short valueType ) { if ( valueType <= XSConstants . NOTATION_DT ) { return valueType ; } if ( valueType <= XSConstants . ENTITY_DT ) { return XSConstants . STRING_DT ; } if ( valueType <= XSConstants . POSITIVEINTEGER_DT ) { return XSConstants . DECIMAL_DT ; } return valueType ; }
30484	public void fireSyncToViewer ( ) { syncListener . syncList2Viewer ( getEnabledLabels ( ) ) ; }
30513	public void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
30514	public void renderCenter ( GL2 gl ) { Vector2 c = this . mass . getCenter ( ) ; gl . glColor4fv ( Preferences . getBodyCenterColor ( ) , _NUM ) ; RenderUtilities . drawPoint ( gl , c ) ; }
30531	public static boolean isEmpty ( String string ) { if ( _NULL == string ) return _BOOL ; return string . equals ( EMPTY ) ; }
30556	@ Override public boolean endContentModel ( int [ ] currentState ) { boolean isFinal = _BOOL ; int state = currentState [ _NUM ] ; return state >= _NUM ; }
30565	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM } ; }
30587	public boolean toggleNeverTranslateLanguageState ( boolean value ) { if ( mOptions [ ALWAYS_LANGUAGE ] && value ) { return _BOOL ; } return toggleState ( NEVER_LANGUAGE , value ) ; }
30612	@ Override public void log ( final DataTagCacheObject dataTagCacheObject ) { tagCache . acquireReadLockOnKey ( dataTagCacheObject . getId ( ) ) ; try { TAGLOG . info ( dataTagCacheObject . toString ( ) ) ; } finally { tagCache . releaseReadLockOnKey ( dataTagCacheObject . getId ( ) ) ; } }
30634	public LeastSquaresBuilder lazyEvaluation ( final boolean newValue ) { lazyEvaluation = newValue ; return this ; }
30635	public void closeDriver ( ) { if ( camera != _NULL ) { FlashlightManager . disableFlashlight ( ) ; camera . release ( ) ; camera = _NULL ; } }
30651	public void checkDayTimeChange ( ) { DayTime oldDayTime = this . dayTime ; calculateDayTime ( ) ; onHourChange ( ) ; if ( oldDayTime != this . dayTime ) { onDayTimeChange ( ) ; } }
30680	public boolean popDirname ( ) { mDirectories . remove ( mDirectories . getItem ( _NUM ) ) ; return ! mDirectories . isEmpty ( ) ; }
30697	public boolean isEmptyViewShown ( ) { return emptyView != _NULL && emptyView . getVisibility ( ) == VISIBLE ; }
30709	SnippetSet result ( ) { return snippetSet ; }
30710	public StaticFieldRef newStaticFieldRef ( SootFieldRef f ) { return new StaticFieldRef ( f ) ; }
30741	private int computeKey ( int row , int column ) { return row * columns + column ; }
30748	public String removeContactMech ( String contactMechPurposeTypeId ) { return contactMechIdsMap . remove ( contactMechPurposeTypeId ) ; }
30757	public void sendNoMsgToTarget ( Object target ) { sendToTargetOrType ( target . getClass ( ) , _NULL ) ; }
30781	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
30785	public static void delete ( long uid , String sid ) { delete ( W . create ( _CHAR uid _CHAR , uid ) . and ( _CHAR sid _CHAR , sid ) ) ; }
30786	public boolean increment ( K key ) { return adjustValue ( key , ( long ) _NUM ) ; }
30813	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , ChecksumException , FormatException { return decode ( image , _NULL ) ; }
30843	static boolean isSystemWindows ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
30850	public void processUtterance ( Utterance utterance ) throws ProcessException { if ( utterance . getRelation ( Relation . SEGMENT ) == _NULL ) { throw new IllegalStateException ( _CHAR DiphoneUnitSelector : Segment relation does not exist _CHAR ) ; } utterance . setObject ( SampleInfo . UTT_NAME , diphoneDatabase . getSampleInfo ( ) ) ; createUnitRelation ( utterance ) ; }
30882	public boolean isSelfBalancing ( ) { return this . selfBalancing ; }
30890	private void addCallbackMethod ( String layoutClass , AndroidMethod callbackMethod ) { Set < SootMethodAndClass > methods = this . callbackMethods . get ( layoutClass ) ; if ( methods == _NULL ) { methods = new HashSet < SootMethodAndClass > ( ) ; this . callbackMethods . put ( layoutClass , methods ) ; } methods . add ( new AndroidMethod ( callbackMethod ) ) ; }
30891	public static final Vertex locateVertexInGraph ( UniqueVertexGraph gGraph , Vertex vToFind ) { return gGraph . locateVertex ( vToFind ) ; }
30920	public boolean showStorageSites ( ) { return CATEGORY_USE_STORAGE . equals ( mCategory ) ; }
30926	public void releaseReadLock ( int segmentId ) { _readLocks [ segmentId ] . unlock ( ) ; }
30938	public boolean showNotificationsSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_NOTIFICATIONS ; }
30942	public FileOutputStream createOutputFile ( String file_name ) throws FileNotFoundException { return new FileOutputStream ( new File ( dump_dir , file_name ) ) ; }
30943	public static boolean isFrictionImpulseEnabled ( ) { return frictionImpulseEnabled ; }
30951	public void addObserver ( FindToolbarObserver observer ) { mObservers . addObserver ( observer ) ; }
30970	@ Deprecated public static String removeIANA2JavaMapping ( String ianaEncoding ) { return ( String ) fIANA2JavaMap . remove ( ianaEncoding ) ; }
30971	public static String slurpURLNoExceptions ( URL u ) { try { return slurpURL ( u ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
30984	public static Style deepPurple ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_DEEP_PURPLE ) ; return style ; }
30988	public void addAll ( final Iterable < BSPTree < S >> iterator ) { for ( final BSPTree < S > node : iterator ) { add ( node ) ; } }
30992	public ConsoleWriter erasePreviouslyPrintedLines ( ) { if ( consoleWriterConfig . isAnsiCodeEnabled ( ) ) { for ( int i = _NUM ; i < numberOfNewLinesInLastPrintedString ; i ++ ) { ansi . cursorUp ( _NUM ) ; ansi . eraseLine ( ) ; } } return this ; }
31003	public void reset ( ) { resetStatus ( ) ; }
31047	public static PrivateKey loadPrivateKeyFromPemFile ( final String keyFile ) throws IOException , InvalidKeySpecException , NoSuchAlgorithmException { final PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec ( loadPemFileAsBytes ( keyFile ) ) ; final PrivateKey privateKey = KeyFactory . getInstance ( ALGORITHM ) . generatePrivate ( privateKeySpec ) ; return privateKey ; }
31064	public boolean DeleteNode ( int nodeId ) { synchronized ( stream ) { File file = new File ( this . folderName , String . format ( _CHAR node % d . xml _CHAR , nodeId ) ) ; return file . delete ( ) ; } }
31067	protected MetricsFilterSetBuilder initializeMetricsFilterSetBuilder ( ) { return new FilteredSketchMetricsHelper ( ) ; }
31069	public static SM_SYSTEM_MESSAGE STR_MSG_SUMMON_CANT_ORDER_BY_INVALID_STANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31087	public FactorialLog withCache ( final int cacheSize ) { return new FactorialLog ( cacheSize , LOG_FACTORIALS ) ; }
31102	public boolean isIdColumn ( ) { return _CHAR _id _CHAR . equalsIgnoreCase ( columnName ) || _CHAR id _CHAR . equalsIgnoreCase ( columnName ) ; }
31119	private void ExitBtnActionPerformed ( java . awt . event . ActionEvent evt ) { if ( JOptionPane . showConfirmDialog ( this , _CHAR Do you wish to end the application ? _CHAR , _CHAR Confirm _CHAR , JOptionPane . YES_NO_OPTION ) == JOptionPane . YES_OPTION ) { if ( taskInProgress ( ) ) removeTask ( getActiveTask ( ) ) ; this . setVisible ( _BOOL ) ; this . dispose ( ) ; } }
31122	public void invalidate ( ) { if ( conductorSet == _NULL ) { return ; } remove ( ) ; }
31137	public int cardinality ( ) { int c = _NUM ; for ( long v : bits ) { while ( v != _NUM ) { v & = v - _NUM ; ++ c ; } } return c ; }
31140	private void inflateConnectedTextColor ( ) { if ( mConnectedTextColor != R . color . connectivity_color ) { connectivityText . setTextColor ( ColorUtil . getColorWrapper ( mContext , mConnectedTextColor ) ) ; } }
31151	public void wipe ( ) { byte [ ] zeros = new byte [ Page . pageSize ] ; this . writeBytes ( _NUM , Page . pageSize , zeros ) ; }
31154	public static float ceil ( float fValue ) { return ( float ) Math . ceil ( fValue ) ; }
31177	private static boolean isHex ( char p_char ) { return ( p_char <= _CHAR && ( fgLookupTable [ p_char ] & ASCII_HEX_CHARACTERS ) != _NUM ) ; }
31183	public boolean delete ( ) { return deleteStrategy . deleteQuietly ( new File ( path ) ) ; }
31216	public static boolean shouldShowRequestPermissionRationale ( Activity activity , String ... permissions ) { for ( String permission : permissions ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( activity , permission ) ) { return _BOOL ; } } return _BOOL ; }
31218	public static boolean unbookmark ( String id ) { if ( isBookmarked ( id ) ) { Inquiry . get ( ) . deleteFrom ( Constants . DATABASE_NAME , BookmarksDB . class ) . where ( _CHAR _id = ? _CHAR , id ) . run ( ) ; return _BOOL ; } else bookmark ( id ) ; return _BOOL ; }
31219	public BpmResult login ( final LoginData loginData ) { switch ( loginData . getLoginType ( ) ) { case GOOGLE_AUTH : if ( loginData . isValidGoogleLogin ( ) ) { return logOnGoogleAuth ( loginData ) ; } break ; case PTC : if ( loginData . isValidPtcLogin ( ) ) { return logOnPtc ( loginData ) ; } break ; default : } return new BpmResult ( _CHAR Invalid Login Type _CHAR ) ; }
31235	public void clear ( ) { map . clear ( ) ; }
31240	public static int green ( int color ) { return ( color >> _NUM ) & _NUM ; }
31246	public void addOverlappingView ( View view , int index , ViewGroup . LayoutParams params ) { mFrameLayoutOverlappingViewContainer . addView ( view , index , params ) ; mOverlappingViewsMap . put ( view . getId ( ) , view ) ; }
31275	public void resetCircleColors ( ) { mCircleColors = new ArrayList < Integer > ( ) ; }
31321	private int indexOf ( int tabId ) { return mTabIdList . indexOf ( tabId ) ; }
31353	public static void startClock ( ) { if ( clockStarted ) { throw new IllegalStateException ( _CHAR Clock is already started _CHAR ) ; } updater = new GameTimeUpdater ( getGameTime ( ) ) ; ThreadPoolManager . getInstance ( ) . scheduleAtFixedRate ( updater , _NUM , _NUM ) ; clockStarted = _BOOL ; }
31355	public static void error ( Object message , Throwable exception ) { Gdx . app . error ( TAG , String . valueOf ( message ) , exception ) ; }
31392	public static String createRGBString ( Color c ) { return _CHAR rgb ( _CHAR + ( c . getRed ( ) * _NUM ) + _CHAR , _CHAR + ( c . getGreen ( ) * _NUM ) + _CHAR , _CHAR + ( c . getBlue ( ) * _NUM ) + _CHAR ) ; _CHAR ; }
31418	public void resetDocumentLocator ( String publicid , String systemid ) { thePublicid = publicid ; theSystemid = systemid ; theLastLine = theLastColumn = theCurrentLine = theCurrentColumn = _NUM ; }
31445	public void dispose ( ) { if ( serverSocket != _NULL ) { try { serverSocket . close ( ) ; } catch ( IOException e ) { ; } } }
31452	public static boolean isBanned ( String ip ) { for ( BannedIP ipBan : banList ) { if ( ipBan . isActive ( ) && NetworkUtils . checkIPMatching ( ipBan . getMask ( ) , ip ) ) { return _BOOL ; } } return _BOOL ; }
31470	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Slow_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
31480	public void removeClassLoaderStateListener ( Long classLoaderKey , IClassLoaderCacheStateListener listener ) { ClassLoaderContext classLoaderContext = _classLoaders . get ( classLoaderKey ) ; if ( classLoaderContext == _NULL ) return ; classLoaderContext . removeListener ( listener ) ; }
31533	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
31535	public void clearLineConfigs ( ) { mLinesConfig . clear ( ) ; }
31563	@ SuppressWarnings ( _CHAR unchecked _CHAR ) void updateBoxes ( ) { Value val = stackOrValue ( ) ; if ( boxes instanceof List ) { for ( ValueBox vb : ( List < ValueBox > ) boxes ) vb . setValue ( val ) ; } else if ( boxes instanceof ValueBox ) { ( ( ValueBox ) boxes ) . setValue ( val ) ; } }
31575	public static SharePasswordDialogFragment newInstance ( OCFile file , boolean createShare ) { SharePasswordDialogFragment frag = new SharePasswordDialogFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_FILE , file ) ; args . putBoolean ( ARG_CREATE_SHARE , createShare ) ; frag . setArguments ( args ) ; return frag ; }
31607	@ Override public String substringData ( int offset , int count ) throws DOMException { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Method not supported _CHAR ) ; }
31625	public static void drawCenteredString ( Graphics2D g , Rectangle rect , String str , boolean horzCentered , boolean vertCentered ) { UIUtil . drawCenteredString ( g , rect , str , horzCentered , vertCentered ) ; }
31690	public GroupsDeleteLinkQuery deleteLink ( UserActor actor , int groupId , int linkId ) { return new GroupsDeleteLinkQuery ( getClient ( ) , actor , groupId , linkId ) ; }
31696	public void addMember ( InternalMapObject member ) { this . members . add ( member ) ; }
31724	@ Deprecated public static void putIANA2JavaMapping ( String ianaEncoding , String javaEncoding ) { fIANA2JavaMap . put ( ianaEncoding , javaEncoding ) ; }
31728	public void printEntrypoints ( ) { if ( this . entrypoints == _NULL ) System . out . println ( _CHAR Entry points not initialized _CHAR ) ; else { System . out . println ( _CHAR Classes containing entry points : _CHAR ) ; for ( String className : entrypoints ) System . out . println ( _CHAR \ t _CHAR + className ) ; System . out . println ( _CHAR End of Entrypoints _CHAR ) ; } }
31749	public void repositoryModified ( ISVNRepositoryLocation repository ) { for ( ISVNListener listener : repositoryListeners ) { listener . repositoryModified ( repository ) ; } }
31764	@ Provides @ Singleton @ AdHocThrottleMapStore MapStore < AdHocThrottle > provideAdHocThrottleMapStore ( @ Global CuratorFramework curator , LifeCycleRegistry lifeCycle ) { CuratorFramework webCurator = withComponentNamespace ( curator , _CHAR web _CHAR ) ; return lifeCycle . manage ( new ZkMapStore < > ( webCurator , _CHAR / adhoc - throttles _CHAR , new ZkAdHocThrottleSerializer ( ) ) ) ; }
31785	public static final Ellipse scale ( Ellipse ellipse , double scale ) { if ( ellipse == _NULL ) throw new NullPointerException ( Messages . getString ( _CHAR geometry . nullShape _CHAR ) ) ; if ( scale <= _NUM ) throw new IllegalArgumentException ( Messages . getString ( _CHAR geometry . invalidScale _CHAR ) ) ; return new Ellipse ( ellipse . getWidth ( ) * scale , ellipse . getHeight ( ) * scale ) ; }
31788	public JimpleBody newBody ( SootMethod m ) { return new JimpleBody ( m ) ; }
31798	@ TargetApi ( VERSION_CODES . GINGERBREAD ) public static boolean isExternalStorageRemovable ( ) { if ( Utils . hasGingerbread ( ) ) { return Environment . isExternalStorageRemovable ( ) ; } return _BOOL ; }
31800	public TypeVariable typeVariable ( SootClass sootClass ) { return typeVariable ( hierarchy . typeNode ( sootClass . getType ( ) ) ) ; }
31811	public static Builder wrap ( @ NonNull Context context , @ NonNull PagerAdapter innerAdapter ) { return new Builder ( context , innerAdapter ) ; }
31813	void autocomplete ( Json json ) { queryExecutor . submit ( _NULL ) ; }
31820	public Builder buttonPressedBackgroundColor ( int buttonPressedBackgroundColor ) { this . buttonPressedBackgroundColor = buttonPressedBackgroundColor ; return this ; }
31826	private void releaseUselessResources ( ) { offlineProcessor . destroy ( ) ; offlineProcessor = _NULL ; IFigureManager . cleanCache ( ) ; System . gc ( ) ; }
31841	public boolean isString ( ) { return value instanceof String ; }
31856	public void validateSortingColumnName ( Class < ? > type , String sortingColumnName ) { BusinessRule . expect ( criteriaMapFactory . getCriteriaMap ( type ) . getCriteriaHolderUnchecked ( sortingColumnName ) . isPresent ( ) , Predicates . equalTo ( Boolean . TRUE ) ) . verify ( ErrorType . BAD_SAVE_USER_FILTER_REQUEST , Suppliers . formattedSupplier ( _CHAR Column for sorting with name ' { } ' is unknown . '' , sortingColumnName ) ) ; }
31862	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
31863	private CountingThreadPoolExecutor createExecutor ( int numThreads ) { return new CountingThreadPoolExecutor ( numThreads , Integer . MAX_VALUE , _NUM , TimeUnit . SECONDS , new LinkedBlockingQueue < Runnable > ( ) ) ; }
31866	public static SM_SYSTEM_MESSAGE STR_MSG_PvPZONE_MY_DEATH_TO_B ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31873	private static void buildIntervalSet ( List < String > entries , Interval interval , Map < String , Set < Interval >> container ) { entries . stream ( ) . map ( _NULL ) . forEach ( _NULL ) ; }
31875	public static List < List < List < Writable >> > sampleSequence ( int count , JavaRDD < List < List < Writable >> > data ) { return data . takeSample ( _BOOL , count ) ; }
32022	public void sendToAll ( ) { sendTo ( _NULL ) ; }
32056	public static Metrics create ( Map < String , String > dimensionMap ) { Map < String , String > map = Maps . newTreeMap ( ) ; map . putAll ( dimensionMap ) ; return new Metrics ( Collections . unmodifiableMap ( map ) ) ; }
32072	public boolean isMember ( int playerObjId ) { return legionMembers . contains ( playerObjId ) ; }
32087	public static Date min ( Date date1 , Date date2 ) { if ( date1 == _NULL ) { return date2 ; } return date2 != _NULL ? ( date1 . before ( date2 ) ? date1 : date2 ) : date1 ; }
32102	private void validateUser ( String username ) throws UserNotFoundException { if ( ! usersRepository . findByUsername ( username ) . isPresent ( ) ) { throw new UserNotFoundException ( username ) ; } }
32110	public MessagesGetHistoryQuery startMessageId ( Integer value ) { return unsafeParam ( _CHAR start_message_id _CHAR , value ) ; }
32129	@ Override public final float readFloat ( ) { return Float . intBitsToFloat ( readInt ( ) ) ; }
32132	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , _NUM . _NUM , + _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
32133	public float convert ( ) { return Float . intBitsToFloat ( ( int ) bytes ) ; }
32136	public void putSampleLabel ( String sampleName , String label ) { put ( sampleName , SampleAttributeTable . HiddenAttribute . Label , label ) ; }
32150	public boolean isAscending ( int i ) { return m_ascend [ i ] ; }
32162	public int model ( ) { return theModel ; }
32230	public static < V , V1 extends V , V2 extends V > Map < String , V > toMap ( String name1 , V1 value1 , String name2 , V2 value2 ) { return populateMap ( new HashMap < String , V > ( ) , name1 , value1 , name2 , value2 ) ; }
32239	@ Override public boolean exclude ( String identifier ) { return blacklist . contains ( identifier ) ; }
32253	public static SM_SYSTEM_MESSAGE STR_CHAT_PASSWORD_TOO_LONG ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32255	public void error ( String message , Object ... args ) { currentTest . get ( ) . error ( String . format ( message , args ) ) ; }
32276	public static double uniform ( Random rng , double min , double max ) { return rng . nextDouble ( ) * ( max - min ) + min ; }
32283	public static boolean banIp ( String ip ) { return banIp ( ip , _NULL ) ; }
32331	private void notifyUpdates ( ) { for ( EnvVarUpdateInterface listener : listenerList ) { listener . envVarsUpdated ( this . envVarList ) ; } }
32347	public static String formatQuantity ( int quantity ) { return formatQuantity ( ( double ) quantity ) ; }
32352	public boolean isUseCookies ( ) { return cookies ; }
32355	public Location add ( double x , double y , double z ) { this . x += x ; this . y += y ; this . z += z ; return this ; }
32379	private void distributeValue ( final SourceDataTagValue sourceDataTagValue ) throws JMSException { for ( JmsSender jmsSender : jmsSenders ) { try { jmsSender . processValue ( sourceDataTagValue ) ; } catch ( Exception e ) { LOGGER . error ( _CHAR Unhandled exception caught while sending a source value ( tag id _CHAR + sourceDataTagValue . getId ( ) + _CHAR ) - the value update will be lost . '' , e ) ; } } sourceDataTagValue . log ( ) ; }
32382	public static SM_SYSTEM_MESSAGE STR_BUDDY_REQUEST_TO_ADD ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32444	public GroupsApproveRequestQuery approveRequest ( UserActor actor , int groupId , int userId ) { return new GroupsApproveRequestQuery ( getClient ( ) , actor , groupId , userId ) ; }
32449	public static double log2 ( double a ) { if ( a == _NUM ) return _NUM . _NUM ; return Math . log ( a ) / log2 ; }
32451	public static void decorate ( View hostView , View decorView , int gravity ) { decorate ( hostView , decorView , gravity , _NUM , _NUM , _NUM , _NUM ) ; }
32454	public boolean isFailed ( ) { return ! pokemonHP . isPresent ( ) && ! pokemonCP . isPresent ( ) ; }
32466	public boolean isPlaying ( ) { return isPlaying ; }
32471	public static IOFileFilter or ( IOFileFilter ... filters ) { return new OrFileFilter ( toList ( filters ) ) ; }
32489	public boolean unregisterTask ( UserDefinedAction action ) { for ( KeyChain k : action . getActivation ( ) . getHotkeys ( ) ) { unregisterKey ( k ) ; } mouseGestureManager . unRegisterAction ( action ) ; return _BOOL ; }
32512	static boolean isSystemWindows ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
32520	public void toggleFullscreen ( ) { toggleFullscreenButton . click ( ) ; verifyFullscreen ( ) ; }
32543	public final boolean isAccountOnGameServer ( int accountId ) { return accountsOnGameServer . containsKey ( accountId ) ; }
32589	public static ObjectMapper createObjectMapper ( ) { return new ObjectMapper ( new YAMLFactory ( ) ) ; }
32593	public void noiseTexture ( Framebuffer target ) { copy ( mNoiseTexture , target ) ; }
32607	public Builder intoSourceFiles ( @ Nullable Collection < File > sourceFiles ) { mySourceFiles = sourceFiles ; return this ; }
32616	@ Override public void onDraw ( Canvas canvas ) { mLastDrawTimeMs = System . currentTimeMillis ( ) ; super . onDraw ( canvas ) ; }
32649	public static TargetExpression allFromPackageRecursive ( WorkspacePath localPackage ) { if ( localPackage . relativePath ( ) . isEmpty ( ) ) { return new TargetExpression ( _CHAR // ... : all '' ) ; } return new TargetExpression ( '' // '' + localPackage . relativePath ( ) + '' / ... : all '' ) ; }
32654	static void renderModel ( @ NotNull ConstraintModel model ) { model . getNlModel ( ) . requestRender ( ) ; }
32667	public final Vertex locateVertexInGraph ( UniqueVertexGraph gGraph , Vertex vToFind ) { return gGraph . locateVertex ( vToFind ) ; }
32669	private void createLeftOver ( ) { int lineLengthBytes = currentLastBytePos + _NUM ; if ( lineLengthBytes > _NUM ) { leftOver = new byte [ lineLengthBytes ] ; System . arraycopy ( data , _NUM , leftOver , _NUM , lineLengthBytes ) ; } else { leftOver = _NULL ; } currentLastBytePos =- _NUM ; }
32682	protected void drawLabel ( Canvas c , float x , float y , String label ) { c . drawText ( label , x , y , mLabelPaint ) ; }
32697	public static boolean mousePressed ( ) { synchronized ( mouseLock ) { return mousePressed ; } }
32698	public static void open ( File file ) throws IOException { Desktop . getDesktop ( ) . open ( file ) ; }
32715	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_PAINT_REMOVE_SUCCEED ( int objectNameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , calculateNameId ( objectNameId ) ) ; }
32778	public static Style lightBlue ( ) { final Style style = new Style ( ) ; style . color = PaletteUtils . getSolidColor ( PaletteUtils . MATERIAL_LIGHT_BLUE ) ; return style ; }
32790	public TypeRef makeRepeated ( ) { return interner . intern ( new TypeRef ( kind , Cardinality . REPEATED , messageType , enumType ) ) ; }
32805	void addPaths ( ViterbiPoint point , ViterbiPath path ) { ViterbiPath nextPath ; for ( ViterbiPath p = path ; p != _NULL ; p = nextPath ) { nextPath = p . next ; addPath ( point , p ) ; } }
32835	public final Observable < Void > evict ( ) { return Observable . defer ( _NULL ) ; }
32842	public int size ( ) { return set . size ( ) ; }
32851	@ Override public RemoteConnection connect ( ) throws RemoteException { return new RemoteConnectionImpl ( ) ; }
32871	protected void onUpdate ( ActivitiEvent event ) { }
32873	@ Override public void onBindViewHolder ( ) { if ( unbinder == _NULL ) unbinder = ButterKnife . bind ( this , itemView ) ; }
32883	private boolean allowedAsHttpRequestResponse ( WellKnownType wkt ) { return wkt . allowedAsHttpRequestResponse ( ) ; }
32916	public Builder cacheOnDisk ( boolean cacheOnDisk ) { this . cacheOnDisk = cacheOnDisk ; return this ; }
32919	public static SM_SYSTEM_MESSAGE STR_ABYSS_CHANGE_RANK ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32923	public void delete ( ) throws JMSException { }
32997	public void removeFromTemplateContext ( String name ) { if ( templateContext != _NULL ) templateContext . remove ( name ) ; }
33002	public void cancelCleanup ( ) { if ( mCleanupTask != _NULL ) mCleanupTask . cancel ( _BOOL ) ; }
33003	public void ping ( ) throws RemoteException { _remoteSpaceProxy . ping ( ) ; }
33052	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
33053	private void tryScrollBackToTop ( ) { if ( ! mPtrIndicator . isUnderTouch ( ) ) { mScrollChecker . tryToScrollTo ( PtrIndicator . POS_START , mDurationToCloseHeader ) ; } }
33055	public Triangle neighborOpposite ( Pnt site , Triangle triangle ) { if ( ! triangle . contains ( site ) ) throw new IllegalArgumentException ( _CHAR Bad vertex ; not in triangle _CHAR ) ; for ( Triangle neighbor : triGraph . neighbors ( triangle ) ) { if ( ! neighbor . contains ( site ) ) return neighbor ; } return _NULL ; }
33079	public void _write ( OutputStream output ) { output . write_float ( value ) ; }
33083	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) ; unchecked ( _NULL ) ; }
33104	private static int unsignedBytesToInt ( byte b0 , byte b1 , byte b2 , byte b3 ) { return ( unsignedByteToInt ( b0 ) + ( unsignedByteToInt ( b1 ) << _NUM ) ) + ( unsignedByteToInt ( b2 ) << _NUM ) + ( unsignedByteToInt ( b3 ) << _NUM ) ; }
33127	private void addFQDNDigestMD5 ( ) throws ConfigureDSException { try { updateConfigEntryWithAttribute ( DN_DIGEST_MD5_SASL_MECHANISM , _CHAR ds - cfg - server - fqdn _CHAR , CoreSchema . getDirectoryStringSyntax ( ) , hostName . getValue ( ) ) ; } catch ( final Exception e ) { throw new ConfigureDSException ( e , ERR_CONFIGDS_CANNOT_UPDATE_DIGEST_MD5_FQDN . get ( e ) ) ; } }
33134	public boolean isReverse ( ) { return _BOOL ; }
33158	public Observable < Void > addPaymentRecordObservable ( Payment payment ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; addPaymentRecord ( payment , resultHandler . toHandler ( ) ) ; return resultHandler ; }
33201	@ Override public boolean has ( final int index , final Scriptable start ) { return _BOOL ; }
33244	public static ArgumentException adaptPropertyException ( PropertyException e , AbstractManagedObjectDefinition < ? , ? > d ) { return new ArgumentException ( e . getMessageObject ( ) ) ; }
33272	public static String urlDecode ( String value ) { return Uris . formDecodeParameterNameOrValue ( value ) ; }
33274	@ Override public void clear ( ) throws IOException { String [ ] keys = keys ( ) ; for ( int i = _NUM ; i < keys . length ; i ++ ) { remove ( keys [ i ] ) ; } }
33289	private void badIndex ( int index ) throws ArrayIndexOutOfBoundsException { String msg = _CHAR Attempt to modify attribute at illegal index : _CHAR + index ; throw new ArrayIndexOutOfBoundsException ( msg ) ; }
33294	protected Client addToClientMap ( String ct , Map cMap ) { return addToClientMap ( ct , cMap , _BOOL ) ; }
33296	public static String urlEncode ( String value ) { return Uris . formEncodeParameterNameOrValue ( value ) ; }
33341	@ Override public boolean isServlet22 ( ) { return XmlIdentifiers . WEB_22_PUBLIC . equals ( publicId ) ; }
33383	public boolean containsAttrValue ( String attrName , String attrValue ) { if ( attrSet != _NULL ) { Set attr = ( Set ) attrSet . get ( attrName ) ; if ( attr != _NULL ) { return ( attr . contains ( attrValue ) ) ; } } return ( _BOOL ) ; }
33393	private boolean compareAndIncrementWorkerCount ( int expect ) { return ctl . compareAndSet ( expect , expect + _NUM ) ; }
33422	public void focusLost ( FocusEvent e ) { comboBox . repaint ( ) ; }
33456	public int changesInProgressSize ( ) { return activeAndDependentChanges . size ( ) ; }
33503	public static void main ( String [ ] args ) { int retCode = mainCLI ( args , System . out , System . err , System . in ) ; System . exit ( retCode ) ; }
33508	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
33553	private Object readResolve ( ) { return object ; }
33556	public PlaLineInt mirror_vertical ( PlaPointInt p_pole ) { PlaPointInt new_a = point_b . mirror_vertical ( p_pole ) ; PlaPointInt new_b = point_a . mirror_vertical ( p_pole ) ; return new PlaLineInt ( new_a , new_b ) ; }
33557	public Object clone ( ) { LDAPUsers theClone = _NULL ; try { theClone = ( LDAPUsers ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( selectedRFCUserDNs != _NULL ) { theClone . selectedRFCUserDNs = new HashSet ( ) ; theClone . selectedRFCUserDNs . addAll ( selectedRFCUserDNs ) ; } return theClone ; }
33561	@ Override public boolean accept ( File file ) { return file . isHidden ( ) ; }
33569	@ SuppressLint ( _CHAR InflateParams _CHAR ) static Folder fromXml ( Launcher launcher ) { return ( Folder ) launcher . getLayoutInflater ( ) . inflate ( R . layout . user_folder , _NULL ) ; }
33595	public void appendRemainingName ( Name name ) { if ( name != _NULL ) { if ( this . remainingName != _NULL ) { try { this . remainingName . addAll ( name ) ; } catch ( InvalidNameException e ) { } } else { this . remainingName = ( Name ) ( name . clone ( ) ) ; } } }
33597	public final boolean isVbr ( ) { return vbr ; }
33600	private final static boolean isThaiBaseConsonant ( int ch ) { return ( ch >= _NUM ) && ( ch <= _NUM ) ; }
33606	private void ensureCapacity ( int wordsRequired ) { if ( words . length < wordsRequired ) { int request = Math . max ( _NUM * words . length , wordsRequired ) ; words = Arrays . copyOf ( words , request ) ; sizeIsSticky = _BOOL ; } }
33607	public boolean canAcceptVariables ( ) { return _BOOL ; }
33623	public boolean isSyncEnabled ( ) { return syncEnabled ; }
33639	public void deleteField ( FieldKey genericKey ) { if ( genericKey == FieldKey . TRACK ) { track = _NUM ; } else { super . deleteField ( genericKey ) ; } }
33660	public boolean isAssured ( ) { return assuredFlag ; }
33669	public int start ( ) { if ( first < _NUM ) throw new IllegalStateException ( _CHAR No match available _CHAR ) ; return first ; }
33681	@ Override public boolean hasKernPairs ( ) { return kernPairs . size ( ) > _NUM ; }
33688	public boolean empty ( ) { return isEmpty ( ) ; }
33722	public void subscribe ( final Observable < M > observable , final boolean pullToRefresh ) { if ( isViewAttached ( ) ) { getView ( ) . showLoading ( pullToRefresh ) ; } unsubscribe ( ) ; subscriber = new RxSubscriber ( pullToRefresh ) ; observable . subscribeOn ( Schedulers . io ( ) ) . observeOn ( AndroidSchedulers . mainThread ( ) ) . subscribe ( subscriber ) ; }
33726	public void remove_items_unfixed ( Collection < BrdItem > p_item_list ) { for ( BrdItem curr_item : p_item_list ) { if ( curr_item . is_delete_fixed ( ) || curr_item . is_user_fixed ( ) ) continue ; remove_item ( curr_item ) ; } }
33736	public synchronized int size ( ) { return elementCount ; }
33760	private static < T > Handler < AsyncResult < T >> _failure ( ) { return _NULL ; }
33785	public void removeMessageDestination ( String name ) { synchronized ( messageDestinations ) { messageDestinations . remove ( name ) ; } fireContainerEvent ( _CHAR removeMessageDestination _CHAR , name ) ; }
33791	public boolean before ( String userDefinedValue ) throws IllegalArgumentException { try { return value . before ( getDate ( userDefinedValue ) ) ; } catch ( DataTypeValidationException e ) { throw new IllegalArgumentException ( e . getMessage ( ) ) ; } }
33824	public static void closeIfNotNull ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( IOException ignored ) { } } }
33872	public ManageNameIDRequest createManageNameIDRequest ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_REQUEST , value ) ; if ( obj == _NULL ) { return new ManageNameIDRequestImpl ( value ) ; } else { return ( ManageNameIDRequest ) obj ; } }
33876	private static void disableLogging ( ) { LogManager . getLogManager ( ) . reset ( ) ; Logger . getLogger ( _CHAR _CHAR ) . setLevel ( Level . OFF ) ; }
33899	@ Override @ SuppressWarnings ( _CHAR unchecked _CHAR ) public boolean remove ( Object o ) { if ( o == _NULL ) { return _BOOL ; } for ( int targetIndex = _NUM ; targetIndex < size ; targetIndex ++ ) { if ( o . equals ( elements [ targetIndex ] ) ) { removeAt ( targetIndex ) ; return _BOOL ; } } return _BOOL ; }
33945	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return _fooLocalService . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
33949	public boolean isExpired ( ) { return isExpired ; }
33960	void pushSpaceHandling ( boolean b ) throws org . xml . sax . SAXParseException { m_spacePreserveStack . push ( b ) ; }
33966	public int size ( ) { return size ; }
33969	public Set < String > names ( ) { TreeSet < String > result = new TreeSet < String > ( String . CASE_INSENSITIVE_ORDER ) ; for ( int i = _NUM ; i < length ( ) ; i ++ ) { result . add ( getFieldName ( i ) ) ; } return Collections . unmodifiableSet ( result ) ; }
33971	private static void updateAllUIs ( ) { Frame appFrames [ ] = Frame . getFrames ( ) ; for ( Frame frame : appFrames ) { updateWindowUI ( frame ) ; } }
33980	public int search ( Object o ) { int i = lastIndexOf ( o ) ; if ( i >= _NUM ) { return size ( ) - i ; } return - _NUM ; }
33997	public String toString ( ) { return ( index ) ; }
34011	public void registerDecisionCombiner ( String name , Class < ? extends EntitlementCombiner > type ) { register ( name , combiners , type ) ; }
34020	public int size ( ) { return _attrs . size ( ) ; }
34031	public boolean isEmpty ( ) { return _BOOL ; }
34039	@ Override public boolean isSortAscending ( ) { return sortAscending ; }
34072	public ManageNameIDResponse createManageNameIDResponse ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_RESPONSE , value ) ; if ( obj == _NULL ) { return new ManageNameIDResponseImpl ( value ) ; } else { return ( ManageNameIDResponse ) obj ; } }
34095	public void clear ( ) { initialize ( ) ; }
34106	public boolean isAllowUnlimited ( ) { return allowUnlimited ; }
34142	public void addStringToTable ( byte [ ] string ) { stringTable [ tableIndex ++ ] = string ; if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } else if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } else if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } }
34169	public net . aimeizi . person . Person . Builder clearAge ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
34177	protected void updateAutoscroll ( Point dragCursorLocn ) { if ( autoScroller != _NULL ) autoScroller . updateLocation ( dragCursorLocn ) ; }
34189	public static boolean isHighSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
34194	public boolean isTimedOut ( ) throws SessionException { if ( timedOutAt > _NUM ) { return _BOOL ; } if ( ! usingCachedBasedPolling ( ) && maxCachingTimeReached ( ) ) { try { refresh ( _BOOL ) ; } catch ( SessionTimedOutException e ) { latestRefreshTime = currentTimeMillis ( ) / _NUM ; timedOutAt = latestRefreshTime ; } } return timedOutAt > _NUM ; }
34196	static void initConnectionPool ( String host , String authDN , String authPasswd , boolean ssl , int minPoolSize , int maxPoolSize ) throws PolicyException { initConnectionPool ( host , authDN , authPasswd , ssl , minPoolSize , maxPoolSize , Options . defaultOptions ( ) ) ; }
34197	static MatchingRuleImpl relativeTimeLTOMatchingRule ( ) { return new RelativeTimeLessThanOrderingMatchingRuleImpl ( ) ; }
34200	public static final String makeJavaIdentifier ( String identifier ) { return makeJavaIdentifier ( identifier , _BOOL ) ; }
34201	private void add ( Attribute attr , CSN csn ) { AttributeType attrType = attr . getAttributeDescription ( ) . getAttributeType ( ) ; for ( ByteString val : attr ) { add ( val , attrType , csn ) ; } }
34205	public int size ( ) { return count . get ( ) ; }
34217	public void select_signal_layer ( int p_signal_layer_no ) { layer_name_arr [ p_signal_layer_no ] . setSelected ( _BOOL ) ; }
34244	public int hashCode ( ) { return _NUM ; }
34245	@ Override public String toString ( ) { return getClass ( ) . getSimpleName ( ) ; }
34259	public static void fill ( short [ ] array , short value ) { for ( int i = _NUM ; i < array . length ; i ++ ) { array [ i ] = value ; } }
34268	public void logEvent ( String eventName ) { logEvent ( eventName , _NULL ) ; }
34273	public MarkovNameGenerator build ( ) throws IllegalStateException { checkState ( ) ; return new MarkovNameGenerator ( this ) ; }
34301	public void register ( String elemname , String classname ) { if ( elemmap == _NULL ) elemmap = new Hashtable ( ) ; elemmap . put ( elemname , classname ) ; }
34316	public boolean hasMoreTokens ( ) { return index != oid . length ( ) ; }
34341	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) . setUseDefaultBranchingPolicy ( _BOOL ) ; unchecked ( _NULL ) ; }
34346	@ Override public void write ( int oneByte ) throws IOException { Streams . writeSingleByte ( this , oneByte ) ; }
34354	static synchronized void cancel ( final TimerTask task ) { task . cancel ( ) ; _usageCount -- ; if ( _usageCount == _NUM ) { _timer . cancel ( ) ; _timer = _NULL ; } }
34359	private BigDecimal convertIntToBigDecimal ( int quoteParam ) { BigDecimal quoteParamBigDecimal = new BigDecimal ( quoteParam ) . divide ( new BigDecimal ( _NUM ) , new MathContext ( _NUM , RoundingMode . HALF_DOWN ) ) ; return quoteParamBigDecimal ; }
34399	public static JsonObject jsonValue ( ) { return new JsonObject ( ) ; }
34415	public boolean validate ( String value ) { return ! DN . valueOf ( value ) . isRootDN ( ) ; }
34417	protected boolean isDisplayed ( AttributeSchema attrSchema ) { boolean displayed = _BOOL ; if ( ( attrSchema == _NULL ) || ( attrSchema . getI18NKey ( ) == _NULL ) || ( attrSchema . getI18NKey ( ) . length ( ) == _NUM ) ) { displayed = _BOOL ; } return displayed ; }
34438	public int hashCode ( ) { return name . hashCode ( ) ^ ( value == _NULL ? _NUM : value . hashCode ( ) ) ; }
34439	private static void debugPrintln ( String msg ) { if ( debug ) { System . err . println ( _CHAR JAXP : _CHAR + msg ) ; } }
34459	public boolean hasGlobalSubSchema ( ) { return ( globalSubSchemaNames != _NULL ) && ! globalSubSchemaNames . isEmpty ( ) ; }
34480	private void writeAttribute ( ASN1Writer stream , Attribute a ) throws IOException { stream . writeStartSequence ( ) ; stream . writeOctetString ( a . getAttributeDescription ( ) . toString ( ) ) ; stream . writeStartSet ( ) ; for ( ByteString value : a ) { stream . writeOctetString ( value ) ; } stream . writeEndSequence ( ) ; stream . writeEndSequence ( ) ; }
34489	public static void initializePropertyDefinition ( PropertyDefinition < ? > propertyDef ) throws Exception { propertyDef . initialize ( ) ; propertyDef . getDefaultBehaviorProvider ( ) . initialize ( ) ; }
34520	void noteBytesRead ( int pBytes ) { bytesRead += pBytes ; notifyListener ( ) ; }
34526	public static < T > List < T > asList ( T ... values ) { if ( values == _NULL ) { return new ArrayList < T > ( _NUM ) ; } else { return new ArrayList < T > ( Arrays . asList ( values ) ) ; } }
34539	public void showMenu ( ) { mSlidingMenu . showMenu ( ) ; }
34570	public boolean add ( E e ) { return offer ( e ) ; }
34586	private void copyResources ( ) throws IOException { for ( String file : resourceFiles ) { InputStream original = this . getClass ( ) . getResourceAsStream ( _CHAR / config - ref / _CHAR + file ) ; File copy = new File ( outputDirectory , file ) ; copyInputStreamToFile ( original , copy ) ; } }
34622	public boolean isLocalAddress ( ) { return LOCALHOST . equals ( this . normalizedHost ) ; }
34635	public static boolean isHighSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
34636	public boolean isBorderOpaque ( ) { return _BOOL ; }
34639	public boolean validate ( String value , String rule ) { return validate ( value ) ; }
34648	public boolean hasObjectClass ( ObjectClass objectClass ) { return objectClasses . containsKey ( objectClass ) ; }
34653	public boolean add ( E e ) { return offer ( e ) ; }
34673	public boolean isDone ( ) { return ( index > _NUM ) ; }
34688	public Enumeration children ( ) { if ( ! loadedChildren ) loadChildren ( ) ; return super . children ( ) ; }
34701	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) . setUseDirty ( _BOOL ) ; unchecked ( _NULL ) ; }
34737	public void update_ratsnest ( int p_net_no ) { if ( ratsnest != _NULL && p_net_no > _NUM ) { ratsnest . recalculate ( p_net_no , r_board ) ; ratsnest . show ( ) ; } }
34764	@ Override public String toString ( ) { return ruleString ; }
34766	synchronized public void createEmptyDB ( ) { mOpenHelper . createEmptyDB ( mOpenHelper . getWritableDatabase ( ) ) ; }
34794	private void putZipEntry ( ZipOutputStream zos , String file , byte [ ] bytes ) throws IOException { zos . putNextEntry ( new ZipEntry ( file ) ) ; zos . write ( bytes ) ; zos . closeEntry ( ) ; }
34811	public static PropertyException propertyIsSingleValuedException ( final PropertyDefinition < ? > pd ) { return new PropertyException ( pd , ERR_PROPERTY_IS_SINGLE_VALUED_EXCEPTION . get ( pd . getName ( ) ) ) ; }
34829	public final int value_at ( int class_i , int class_j , int p_layer ) { try { return clearance_rows [ class_j ] . column [ class_i ] . layer [ p_layer ] ; } catch ( Exception exc ) { return _NUM ; } }
34853	public boolean isDone ( ) { return index > _NUM ; }
34891	public final boolean isEmpty ( ) { return this . problems . isEmpty ( ) ; }
34930	@ Override public void removeNotificationListener ( NotificationListener listener ) throws ListenerNotFoundException { synchronized ( entries ) { Iterator < BaseNotificationBroadcasterEntry > items = entries . iterator ( ) ; while ( items . hasNext ( ) ) { BaseNotificationBroadcasterEntry item = items . next ( ) ; if ( item . listener == listener ) items . remove ( ) ; } } }
34931	@ SuppressWarnings ( _CHAR unchecked _CHAR ) private Segment < K , V > segmentForHash ( int h ) { long u = ( ( ( h >> > segmentShift ) & segmentMask ) << SSHIFT ) + SBASE ; return ( Segment < K , V > ) UNSAFE . getObjectVolatile ( segments , u ) ; }
34961	public void componentHidden ( ComponentEvent e ) { }
34986	private ResourceResponse policyResource ( Privilege policy ) throws EntitlementException { return newResourceResponse ( policy . getName ( ) , policyRevision ( policy ) , policyParser . printPolicy ( policy ) ) ; }
35039	public int compare ( Object o1 , Object o2 ) { AttributeSchema attr1 = ( AttributeSchema ) o1 ; AttributeSchema attr2 = ( AttributeSchema ) o2 ; return ( collator != _NULL ) ? collator . compare ( attr1 . getI18NKey ( ) , attr2 . getI18NKey ( ) ) : attr1 . getI18NKey ( ) . compareTo ( attr2 . getI18NKey ( ) ) ; }
35047	public void reset ( ) throws IOException { synchronized ( lock ) { ensureOpen ( ) ; if ( markedChar < _NUM ) throw new IOException ( ( markedChar == INVALIDATED ) ? _CHAR Mark invalid _CHAR : _CHAR Stream not marked _CHAR ) ; nextChar = markedChar ; skipLF = markedSkipLF ; } }
35105	public boolean isIgnoringElementContentWhitespace ( ) { return _BOOL ; }
35108	public List unshift ( Collection < ? > elements ) { addAll ( _NUM , elements ) ; return this ; }
35121	public boolean canBeDeleted ( String clientType ) { return ! clientCapDataIntInstance . isClientPresent ( clientType ) ; }
35122	public Set keySet ( ) { return map . keySet ( ) ; }
35127	protected void createProperty ( Object result ) { if ( resultproperty != _NULL ) { createProperty ( resultproperty , result ) ; } }
35227	public String toHostString ( ) { CharArrayBuffer buffer = new CharArrayBuffer ( _NUM ) ; buffer . append ( this . hostname ) ; if ( this . port != - _NUM ) { buffer . append ( _CHAR ) ; buffer . append ( Integer . toString ( this . port ) ) ; } return buffer . toString ( ) ; }
35236	public static int resetPostDisconnectCount ( ) { return postDisconnectCounter . getAndSet ( _NUM ) ; }
35279	@ Override protected void handleIOException ( IOException e ) throws IOException { throw new TaggedIOException ( e , tag ) ; }
35286	public char charAt ( int pos ) { int startChunk = pos >> > m_chunkBits ; if ( startChunk == _NUM && m_innerFSB != _NULL ) return m_innerFSB . charAt ( pos & m_chunkMask ) ; else return m_array [ startChunk ] [ pos & m_chunkMask ] ; }
35290	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { if ( getPrimaryModel ( ) == _NULL ) { throw new ModelControlException ( _CHAR Primary model is _NULL _CHAR ) ; } if ( callbacks != _NULL ) { getPrimaryModel ( ) . setSize ( callbacks . length ) ; } else { getPrimaryModel ( ) . setSize ( _NUM ) ; } super . beginDisplay ( event ) ; resetTileIndex ( ) ; }
35300	protected void appendResult ( Properties result , String path , byte [ ] digestedbyte ) { result . setProperty ( path , Utils . translateHashToString ( digestedbyte ) ) ; }
35319	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
35322	@ Override public String toString ( ) { String delegate = fileFilter != _NULL ? fileFilter . toString ( ) : filenameFilter . toString ( ) ; return super . toString ( ) + _CHAR ( _CHAR + delegate + _CHAR ) _CHAR ; }
35323	public boolean isSplash ( ) { return splash ; }
35376	public static boolean isAuthenticated ( ) throws IOException { AuthenticatedFaceletsTag authenticatedTag = new AuthenticatedFaceletsTag ( ) ; return authenticatedTag . authorize ( ) ; }
35396	public synchronized void deleteObservers ( ) { observers . clear ( ) ; }
35403	public void visitAttribute ( Attribute attr ) { if ( cv != _NULL ) { cv . visitAttribute ( attr ) ; } }
35436	public void flush ( ) throws IOException { flushCache ( ) ; this . out . flush ( ) ; }
35457	public void ignorableWhitespace ( StylesheetHandler handler , char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { }
35511	public void removeCOSTemplates ( ) throws UMSException { ArrayList aList = ( ArrayList ) getCOSTemplates ( ) ; for ( int i = _NUM ; i < aList . size ( ) ; i ++ ) { COSTemplate cosTemplate = ( COSTemplate ) aList . get ( i ) ; cosTemplate . remove ( ) ; } }
35521	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
35547	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { model = getModel ( ) ; setDisplayFieldValue ( TITLE_HTML_PAGE , model . getHTMLPageTitle ( ) ) ; setDisplayFieldValue ( COPYRIGHT_TEXT , model . getCopyRightText ( ) ) ; setDisplayFieldValue ( LBL_SUN_LOGO , model . getSunLogoLabel ( ) ) ; setDisplayFieldValue ( LBL_PRODUCT , model . getProductLabel ( ) ) ; setDisplayFieldValue ( LBL_JAVA_LOGO , model . getJavaLogoLabel ( ) ) ; }
35555	public boolean isAffiliation ( ) { return _isAffiliation ; }
35588	public static void registerListeners ( ) { DirectoryServer . registerBackupTaskListener ( instance ) ; DirectoryServer . registerRestoreTaskListener ( instance ) ; DirectoryServer . registerExportTaskListener ( instance ) ; DirectoryServer . registerImportTaskListener ( instance ) ; }
35595	public boolean isNamespaceProcessingEnabled ( ) { return processNamespaces ; }
35602	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
35629	public static void sendAlertNotification ( AlertGenerator generator , String alertType , LocalizableMessage alertMessage ) { DirectoryServer . sendAlertNotification ( generator , alertType , alertMessage ) ; }
35635	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) ; unchecked ( _NULL ) ; }
35667	public static MatchingResourcePath match ( ResourcePath path ) { return new MatchingResourcePath ( path ) ; }
35674	public boolean isLoaded ( String id ) { try { if ( super . findSession ( id ) != _NULL ) return _BOOL ; } catch ( IOException e ) { log . error ( _CHAR checking isLoaded for id , _CHAR + id + _CHAR , _CHAR + e . getMessage ( ) , e ) ; } return _BOOL ; }
35679	@ Override @ SuppressWarnings ( _CHAR unchecked _CHAR ) public V put ( K key , V value ) { return putImpl ( key , value ) ; }
35713	public final void init ( ManagerFactoryParameters spec ) throws InvalidAlgorithmParameterException { spiImpl . engineInit ( spec ) ; }
35721	public int hashCode ( ) { return _NUM ; }
35752	private static void reverseRange ( Object [ ] a , int lo , int hi ) { hi -- ; while ( lo < hi ) { Object t = a [ lo ] ; a [ lo ++ ] = a [ hi ] ; a [ hi -- ] = t ; } }
35754	public void endPrefixMapping ( String prefix ) throws org . xml . sax . SAXException { }
35759	private static String makeKeyFromLDAPUrl ( LDAPURL url ) { String protocol = isSecureLDAPUrl ( url ) ? _CHAR LDAPS _CHAR : _CHAR LDAP _CHAR ; return protocol + _CHAR : _CHAR + url . getHost ( ) + _CHAR : _CHAR + url . getPort ( ) ; }
35775	private void pushRun ( int runBase , int runLen ) { this . runBase [ stackSize ] = runBase ; this . runLen [ stackSize ] = runLen ; stackSize ++ ; }
35784	public void visitBaseType ( char descriptor ) { }
35794	public static boolean messageEnabled ( ) { return debugInst . messageEnabled ( ) ; }
35833	public void mouseReleased ( MouseEvent e ) { isBeingPressed = _BOOL ; }
35839	public Tuple2 < T2 , T1 > swap ( ) { return new Tuple2 < > ( _2 , _1 ) ; }
35843	public void visitAttribute ( Attribute attr ) { if ( fv != _NULL ) { fv . visitAttribute ( attr ) ; } }
35883	public void cancelCellEditing ( ) { fireEditingCanceled ( ) ; }
35887	private Integer parseNumber ( String number ) { return parseNumber ( number , _NULL , INVALID ) ; }
35902	private static int unsignedBytesToInt ( byte b0 , byte b1 ) { return ( unsignedByteToInt ( b0 ) + ( unsignedByteToInt ( b1 ) << _NUM ) ) ; }
35920	public void rewindInputPosition ( int position ) { this . ptr = position ; }
35946	public static AppEventsLogger newLogger ( Context context , String applicationId , Session session ) { return new AppEventsLogger ( context , applicationId , session ) ; }
35960	public static void sort ( byte [ ] array ) { DualPivotQuicksort . sort ( array ) ; }
35980	public static GetConnectionIDExtendedRequest newRequest ( ) { return INSTANCE ; }
36001	public boolean addCSSAttributeFromHTML ( MutableAttributeSet attr , CSS . Attribute key , String value ) { Object iValue = css . getCssValue ( key , value ) ; if ( iValue != _NULL ) { attr . addAttribute ( key , iValue ) ; return _BOOL ; } return _BOOL ; }
36026	public final boolean isReverse ( ) { return _BOOL ; }
36045	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setAutoIncrementPatch ( _BOOL ) ; unchecked ( _NULL ) ; }
36050	public static IntegerArgument adminLdapPortArgument ( final int defaultAdminPort ) throws ArgumentException { return IntegerArgument . builder ( _CHAR adminConnectorPort _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_ADMINCONNECTORPORT . get ( ) ) . range ( _NUM , _NUM ) . defaultValue ( defaultAdminPort ) . valuePlaceholder ( INFO_PORT_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
36054	public StringBuilder encodeMessage ( StringBuilder retval ) { if ( requestLine != _NULL ) { this . setRequestLineDefaults ( ) ; requestLine . encode ( retval ) ; encodeSIPHeaders ( retval ) ; } else if ( this . isNullRequest ( ) ) { retval . append ( _CHAR \ r \ n \ r \ n _CHAR ) ; } else retval = encodeSIPHeaders ( retval ) ; return retval ; }
36059	public boolean baseIsLeftToRight ( ) { return bidiBase . baseIsLeftToRight ( ) ; }
36066	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setAutoIncrementPatch ( _BOOL ) ; unchecked ( _NULL ) ; }
36072	public Builder superiorType ( String superiorTypeOID ) { this . superiorTypeOID = superiorTypeOID ; return this ; }
36075	public boolean beginContentStaticTextMessageDisplay ( ChildDisplayEvent event ) { return ( ( ErrorMessage != _NULL ) && ( ErrorMessage . length ( ) > _NUM ) ) ; }
36081	public boolean hasReplayError ( ) { return hasReplayError ; }
36094	boolean isZero ( ) { for ( int i = _NUM ; i < count ; ++ i ) { if ( digits [ i ] != _CHAR ) { return _BOOL ; } } return _BOOL ; }
36095	@ Override public int hashCode ( ) { return _canonicalName . hashCode ( ) ; }
36110	public void objectChanged ( AMEvent event ) { if ( event == _NULL ) { debug . error ( _CHAR AMConfiguration . objectChanged , event _NULL _CHAR ) ; return ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR objectChanged , type = _CHAR + event . getEventType ( ) + _CHAR , sDN = _CHAR + event . getSourceDN ( ) + _CHAR , sType = _CHAR + event . getSourceType ( ) ) ; } processSDKNotification ( ) ; }
36143	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; stringBuilder . append ( _CHAR < StatusCode > _CHAR ) ; stringBuilder . append ( this . getValue ( ) ) ; stringBuilder . append ( _CHAR < / StatusCode > _CHAR ) ; return stringBuilder . toString ( ) ; }
36175	public long sum ( ) { return deltaSum . get ( ) ; }
36177	public int exprGetNumChildren ( ) { return getLength ( ) ; }
36193	public int length ( ) { ImmutableList < A > l = this ; int len = _NUM ; while ( l . tail != _NULL ) { l = l . tail ; len ++ ; } return len ; }
36202	public String toString ( ) { return attr ; }
36204	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
36211	public final void remove ( AwtreeNodeLeaf [ ] p_entries ) { if ( p_entries == _NULL ) return ; for ( int index = _NUM ; index < p_entries . length ; ++ index ) { remove_leaf ( p_entries [ index ] ) ; } }
36242	private void startThreadDump ( ) throws IOException { if ( currentRecord . getRecordProperties ( ) . isThreadDumpEnabled ( ) ) { createFolder ( currentRecord . getFolderPath ( ) + File . separator + RecordConstants . THREAD_DUMP_FOLDER_NAME ) ; currentScheduledThreadDump = scheduledExecutorService . scheduleWithFixedDelay ( new ThreadsDumpRunnable ( currentRecord ) , _NUM , currentRecord . getRecordProperties ( ) . getThreadDumpDelayInSeconds ( ) , TimeUnit . SECONDS ) ; } }
36266	@ Override public boolean add ( E o ) { return offer ( o ) ; }
36270	void removeMin ( ) { queue [ _NUM ] = queue [ size ] ; queue [ size -- ] = _NULL ; fixDown ( _NUM ) ; }
36275	public boolean isSchemaEnabled ( ) { return isSchemaEnabled ; }
36284	public boolean hasPlayerCount ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
36302	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
36314	private void fillStackTrace ( StringBuffer buffer , StackTraceElement [ ] elements ) { for ( int index = _NUM ; index < elements . length ; index ++ ) { buffer . append ( elements [ index ] ) ; buffer . append ( _CHAR \ n _CHAR ) ; } }
36317	public static void finalizeAllEnqueued ( ) throws InterruptedException { Sentinel sentinel = new Sentinel ( ) ; enqueueSentinelReference ( sentinel ) ; sentinel . awaitFinalization ( ) ; }
36342	public SAML2ConfigBuilder idpId ( String idpId ) { this . idpId = idpId ; return this ; }
36347	public int type ( ) { return type ; }
36373	void recomposeVariables ( ElemVariable elemVar ) { if ( getVariableOrParamComposed ( elemVar . getName ( ) ) == _NULL ) { elemVar . setIsTopLevel ( _BOOL ) ; elemVar . setIndex ( m_variables . size ( ) ) ; m_variables . addElement ( elemVar ) ; } }
36388	private void readObject ( ObjectInputStream p_stream ) throws IOException , ClassNotFoundException { p_stream . defaultReadObject ( ) ; int snap_angle_no = p_stream . readInt ( ) ; trace_angle_restriction = TraceAngleRestriction . get_instance ( snap_angle_no ) ; }
36390	public QueryResponseWrapper query ( String db , Query toQuery ) throws IndexParseException , FieldNotIndexedException { ParsedQuery parsedQuery = ParsedQueryFactory . getParsedQuery ( db , toQuery , queries . getSession ( ) ) ; return queries . query ( parsedQuery ) ; }
36391	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
36414	public DN toDn ( ServerContext serverContext ) { return DN . valueOf ( toString ( ) , serverContext . getSchema ( ) ) ; }
36462	public void objectRemoved ( AMEvent event ) { if ( event == _NULL ) { debug . error ( _CHAR AMConfiguration . objectChanged , event _NULL _CHAR ) ; return ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR objectRemoved , type = _CHAR + event . getEventType ( ) + _CHAR , sDN = _CHAR + event . getSourceDN ( ) + _CHAR , sType = _CHAR + event . getSourceType ( ) ) ; } processSDKNotification ( ) ; }
36465	void pushImportURL ( String hrefUrl ) { m_importStack . push ( hrefUrl ) ; }
36500	private final boolean parkAndCheckInterrupt ( ) { LockSupport . park ( this ) ; return Thread . interrupted ( ) ; }
36504	private String badRegister ( long s ) { return _CHAR Attempt to register more than _CHAR + MAX_PARTIES + _CHAR parties for '' + stateToString ( s ) ; }
36525	public boolean isRunning ( ) { return _BOOL ; }
36535	public void columns ( String coldata [ ] ) { column = coldata ; ncolumns = column . length ; }
36542	public boolean accept ( File f ) { boolean shown = _BOOL ; if ( f != _NULL && fileFilter != _NULL ) { shown = fileFilter . accept ( f ) ; } return shown ; }
36545	@ Override protected void finalize ( ) { if ( dfos == _NULL ) { return ; } File outputFile = dfos . getFile ( ) ; if ( outputFile != _NULL && outputFile . exists ( ) ) { outputFile . delete ( ) ; } }
36565	public DTMAxisIterator reset ( ) { m_ancestorsPos = m_size - _NUM ; _currentNode = ( m_ancestorsPos >= _NUM ) ? m_ancestors [ m_ancestorsPos ] : DTM . NULL ; return resetPosition ( ) ; }
36572	public synchronized void abortGrabbing ( ) { imageComplete ( IMAGEABORTED ) ; }
36584	public static FeatureCollection fromJson ( String json ) { GsonBuilder gson = new GsonBuilder ( ) ; gson . registerTypeAdapter ( Position . class , new PositionDeserializer ( ) ) ; gson . registerTypeAdapter ( Geometry . class , new GeometryDeserializer ( ) ) ; return gson . create ( ) . fromJson ( json , FeatureCollection . class ) ; }
36588	protected StackFrame newFrame ( final int nLocals , final int nStack ) { return new StackFrame ( nLocals , nStack ) ; }
36590	public void publishRecovery ( ReplicationMsg msg ) { publish ( msg , _BOOL , _BOOL ) ; }
36604	@ Override public void addLifecycleListener ( LifecycleListener listener ) { }
36612	public Object clone ( ) { AuthenticatedSharedAgents theClone = _NULL ; try { theClone = ( AuthenticatedSharedAgents ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } return theClone ; }
36617	public boolean matchesDN ( DN dn ) { return equality != _NULL ? equalityMatchDN ( dn ) : substringMatchDN ( dn ) ; }
36673	public Future < Job > delayed ( ) { return this . state ( JobState . DELAYED ) ; }
36712	public static void putFloat ( String key , float value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putFloat ( key , value ) ; editor . apply ( ) ; }
36713	public static void appendToList ( List < String > list , String [ ] array ) { if ( ( array != _NULL ) && ( array . length > _NUM ) ) { for ( int i = _NUM ; i < array . length ; i ++ ) { list . add ( array [ i ] ) ; } } }
36718	public void writeAccountFedInfo ( String userID , FSAccountFedInfoKey fedInfoKey , FSAccountFedInfo fedInfo , FSAccountFedInfoKey oldFedInfoKey ) throws FSAccountMgmtException { writeAccountFedInfo ( userID , fedInfoKey , fedInfo ) ; }
36742	@ Override public String toString ( ) { String condition = acceptLarger ? _CHAR >= _CHAR : _CHAR < _CHAR ; return super . toString ( ) + _CHAR ( _CHAR + condition + size + _CHAR ) _CHAR ; }
36778	private static synchronized boolean isUpdatePending ( ) { return updatePending ; }
36797	public Collection values ( ) { return map . values ( ) ; }
36802	private boolean readHeader ( ) throws IOException { if ( consecutiveLineBreaks > _NUM ) { consecutiveLineBreaks = _NUM ; return _BOOL ; } readName ( ) ; consecutiveLineBreaks = _NUM ; readValue ( ) ; return consecutiveLineBreaks > _NUM ; }
36845	public static String buildStateKey ( int taskId , String key ) { return prefixState ( taskId ) + key ; }
36855	private void removeMapping ( FHTreeStateNode node ) { treePathMapping . remove ( node . getTreePath ( ) ) ; }
36860	protected void removeServiced ( String name ) throws Exception { String [ ] params = { name } ; String [ ] signature = { _CHAR java . lang . String _CHAR } ; mBeanServer . invoke ( oname , _CHAR removeServiced _CHAR , params , signature ) ; }
36866	public boolean canQuit ( WizardStep step ) { return step == Step . CONFIRM_UNINSTALL ; }
36887	private boolean evalDNPattern ( AciEvalContext evalCtx , LDAPURL url ) { PatternDN pattern ; try { pattern = PatternDN . decode ( url . getRawBaseDN ( ) ) ; } catch ( DirectoryException ex ) { return _BOOL ; } return pattern . matchesDN ( evalCtx . getClientDN ( ) ) ; }
36892	public static void putBoolean ( String key , boolean value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putBoolean ( key , value ) ; editor . apply ( ) ; }
36894	public boolean verify ( String provider ) throws NoSuchAlgorithmException , NoSuchProviderException , InvalidKeyException , SignatureException { return verify ( this . getPublicKey ( provider ) , provider ) ; }
36902	protected Rectangle applyMargins ( Rectangle rect , boolean reverse ) { return this . applyMargins ( rect , getMargins ( ) , reverse ) ; }
36931	public PdfIndirectReference add ( PdfIndirectReference reference ) { if ( reference == _NULL ) { return _NULL ; } int objNr = reference . getObjNumber ( ) ; this . count = Math . max ( this . count , objNr ) ; ensureCount ( objNr ) ; xref [ objNr ] = reference ; return reference ; }
36932	public boolean hasFeature ( String feature , String version ) { return getDOMImplementation ( ) . hasFeature ( feature , version ) ; }
36950	public Object clone ( ) { return ( new SampleSubject ( ) ) ; }
36954	public String toString ( ) { return Integer . toString ( get ( ) ) ; }
36964	public boolean isRunning ( ) { return MonitoringUtil . isRunning ( ) ; }
36969	public PdfCanvas beginText ( ) { contentStream . getOutputStream ( ) . writeBytes ( BT ) ; return this ; }
36984	public int plaline_len ( ) { return lines_list . size ( ) ; }
37014	public void addJarFile ( final File jarFile ) throws MalformedURLException { addURL ( jarFile . toURI ( ) . toURL ( ) ) ; }
37029	public int rtf ( XPathContext support ) { int result = rtf ( ) ; if ( DTM . NULL == result ) { DTM frag = support . createDocumentFragment ( ) ; frag . appendTextChild ( str ( ) ) ; result = frag . getDocument ( ) ; } return result ; }
37041	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Throwable cause = super . getCause ( ) ; if ( ! ( cause instanceof IOException ) ) throw new InvalidObjectException ( _CHAR Cause must be an IOException _CHAR ) ; }
37050	private void readMethods ( ) throws IOException , ClassFormatException { final int methods_count = dataInputStream . readUnsignedShort ( ) ; for ( int i = _NUM ; i < methods_count ; i ++ ) { Utility . swallowFieldOrMethod ( dataInputStream ) ; } }
37053	public boolean isBorderOpaque ( ) { return ! roundedCorners ; }
37084	public void clear ( ) { Arrays . fill ( elements , _NUM ) ; size = _NUM ; }
37104	public boolean validate ( String value , String rule ) { return validate ( value ) ; }
37126	@ Override public boolean hasInterestIn ( char value , SearchContext context ) { throw new IllegalAccessError ( _CHAR This is the root node _CHAR ) ; }
37146	public static void reset ( ) { instance . setAttributes . clear ( ) ; instance . removeAttributes . clear ( ) ; instance . addObjectClasses . clear ( ) ; instance . removeObjectClasses . clear ( ) ; instance . modifications . clear ( ) ; }
37160	public String toString ( ) { return _CHAR [ Signer ] _CHAR + super . toString ( ) ; }
37191	private void assertContainsNoControl ( InternalSearchOperation searchOp ) { for ( SearchResultEntry entry : searchOp . getSearchEntries ( ) ) { assertThat ( entry . getControls ( ) ) . as ( _CHAR result entry _CHAR + entry + _CHAR should contain no control ( s ) _CHAR ) . isEmpty ( ) ; } }
37252	private void assertNormalisation ( String untreatedResource , String treatedResource ) { try { assertThat ( resourceName . canonicalize ( untreatedResource ) ) . isEqualTo ( treatedResource ) ; } catch ( Exception e ) { String message = _CHAR Normalisation failed : _CHAR + e . getMessage ( ) ; throw ComparisonFailureFactory . comparisonFailure ( message , treatedResource , _CHAR _CHAR ) ; } }
37257	public AnnotationVisitor visitParameterAnnotation ( int parameter , String desc , boolean visible ) { if ( mv != _NULL ) { return mv . visitParameterAnnotation ( parameter , desc , visible ) ; } return _NULL ; }
37320	public < M extends Configuration > void deregisterDeleteListener ( SetRelationDefinition < ? , M > d , ServerManagedObjectDeleteListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) ; deregisterDeleteListener ( baseDN , listener ) ; }
37343	public static AddressMask valueOf ( final String mask ) { return new AddressMask ( mask ) ; }
37386	protected boolean hasUncompressedStrip ( ) { return mStripBytes . size ( ) != _NUM ; }
37390	private boolean checkSecurityLevel ( int securityLevel ) { return securityLevel >= this . securityLevel ; }
37391	public String toString ( ) { StringBuilder bindRule = new StringBuilder ( ) ; return bindRule . toString ( ) ; }
37415	public void removeAttributes ( Enumeration names ) { while ( names . hasMoreElements ( ) ) { Object name = names . nextElement ( ) ; removeAttribute ( name ) ; } }
37445	@ Override public final String toString ( ) { return String . valueOf ( resultCode ) ; }
37466	public synchronized static void free ( FastStringBuffer sb ) { sb . setLength ( _NUM ) ; m_stringBufPool . freeInstance ( sb ) ; }
37470	@ Override public void lifecycleEvent ( LifecycleEvent event ) { if ( Lifecycle . START_EVENT . equals ( event . getType ( ) ) ) { component = event . getLifecycle ( ) ; createMBeans ( ) ; } else if ( Lifecycle . STOP_EVENT . equals ( event . getType ( ) ) ) { destroyMBeans ( ) ; component = _NULL ; } }
37472	public void removeUser ( User user ) throws AccessRightsException , UMSException { super . removeChild ( user ) ; }
37477	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
37479	long triggerTime ( long delay ) { return now ( ) + ( ( delay < ( Long . MAX_VALUE >> _NUM ) ) ? delay : overflowFree ( delay ) ) ; }
37494	public static SQLiteConnectionPool open ( SQLiteDatabaseConfiguration configuration ) { if ( configuration == _NULL ) { throw new IllegalArgumentException ( _CHAR configuration must not be _NULL . _CHAR ) ; } SQLiteConnectionPool pool = new SQLiteConnectionPool ( configuration ) ; pool . open ( ) ; return pool ; }
37574	public String toString ( ) { return _dn . toString ( ) ; }
37597	public static boolean isInitialized ( ) { return logFile != _NULL ; }
37633	public int length ( ) { return isLeap ( ) ? _NUM : _NUM ; }
37653	public String toString ( ) { return Boolean . toString ( get ( ) ) ; }
37670	public int size ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return count ; } finally { lock . unlock ( ) ; } }
37671	@ Override protected AvroParser _createParser ( InputStream in , IOContext ctxt ) throws IOException { return new AvroParserImpl ( ctxt , _parserFeatures , _avroParserFeatures , _objectCodec , in ) ; }
37677	public static ByteBuffer parseBase64StringAsByteBuffer ( String in ) { return ByteBuffer . wrap ( Base64 . decodeBase64 ( in . getBytes ( ) ) ) ; }
37684	public boolean isReverse ( ) { return _BOOL ; }
37717	public MappedMember findFieldByNameAndDesc ( String name , String desc , boolean useOriginalName ) { for ( MappedMember mm : getFields ( ) ) { if ( mm . getDesc ( ) . equals ( desc ) && useOriginalName ? mm . getOriginalName ( ) . equals ( name ) : mm . getNewName ( ) . equals ( name ) ) { return mm ; } } return _NULL ; }
37728	private boolean isAcceptLicense ( ) { return acceptLicense . isPresent ( ) ; }
37746	public void addPropertyChangeListener ( PropertyChangeListener listener ) { support . addPropertyChangeListener ( listener ) ; }
37764	public int size ( ) { return getArray ( ) . length ; }
37771	public void write ( char chars [ ] , int start , int length ) throws java . io . IOException { int n = length + start ; for ( int i = start ; i < n ; i ++ ) { m_os . write ( chars [ i ] ) ; } }
37772	public void insertInOrder ( int value ) { for ( int i = _NUM ; i < m_firstFree ; i ++ ) { if ( value < m_map [ i ] ) { insertElementAt ( value , i ) ; return ; } } addElement ( value ) ; }
37774	public DN toDN ( ) { return path . toDN ( ) ; }
37785	public int size ( ) { return ( tail - head ) & ( elements . length - _NUM ) ; }
37804	public void transform ( Source source ) throws TransformerException { transform ( source , _BOOL ) ; }
37810	public static int resetPostSynchronizationCount ( ) { return postSynchronizationCounter . getAndSet ( _NUM ) ; }
37833	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
37876	public static Tag valueOf ( String name ) { Reject . ifNull ( name ) ; RootCfgDefn . getInstance ( ) ; Tag tag = TAGS . get ( name . toLowerCase ( ) ) ; if ( tag == _NULL ) { throw new IllegalArgumentException ( _CHAR Unknown tag \ _CHAR _CHAR + name + _CHAR \ _CHAR _CHAR ) ; } return tag ; }
37887	@ Override public void removeRoleMapping ( String role ) { synchronized ( roleMappings ) { roleMappings . remove ( role ) ; } fireContainerEvent ( _CHAR removeRoleMapping _CHAR , role ) ; }
37892	private K highestKey ( ) { ConcurrentSkipListMap . Node < K , V > n = hiNode ( ) ; if ( n != _NULL ) { K last = n . key ; if ( inBounds ( last ) ) return last ; } throw new NoSuchElementException ( ) ; }
37907	public int size ( ) { return all . size ( ) ; }
37920	public DTMAxisIterator reset ( ) { _sp = _oldsp ; return resetPosition ( ) ; }
37922	public NSObject objectForKey ( String key ) { return dict . get ( key ) ; }
37974	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
37997	public void stopThread ( ) { runStatus = _BOOL ; }
38005	public void removeSipProvider ( ) { this . sipProvider = _NULL ; }
38024	@ Override public void close ( ) { StaticUtils . close ( asn1Writer , debugOutputStream ) ; StaticUtils . close ( socket ) ; }
38036	public static Completion of ( String value , String message ) { return new SimpleCompletion ( value , message ) ; }
38046	protected void startDocumentInternal ( ) throws org . xml . sax . SAXException { super . startDocumentInternal ( ) ; m_needToCallStartDocument = _BOOL ; m_needToOutputDocTypeDecl = _BOOL ; m_startNewLine = _BOOL ; setOmitXMLDeclaration ( _BOOL ) ; }
38057	protected void scanPlatform ( ) { }
38059	private void hideToolTip ( MouseEvent event ) { if ( tipWindow != _NULL ) { tipWindow . hide ( ) ; tipWindow = _NULL ; isTooltipVisible = _BOOL ; } }
38066	protected boolean isSerializable ( Object obj ) { if ( obj == _NULL ) return _BOOL ; Class [ ] interfaces = obj . getClass ( ) . getInterfaces ( ) ; for ( Class anInterface : interfaces ) { if ( anInterface . getName ( ) . equals ( SERIALIZABLE_INT ) ) { return _BOOL ; } } return _BOOL ; }
38120	public int size ( ) { return addrs . size ( ) ; }
38142	public void throwException ( ) throws BufferUnderflowException , BufferOverflowException , UnmappableCharacterException , MalformedInputException , CharacterCodingException { switch ( this . type ) { case TYPE_UNDERFLOW : throw new BufferUnderflowException ( ) ; case TYPE_OVERFLOW : throw new BufferOverflowException ( ) ; case TYPE_UNMAPPABLE_CHAR : throw new UnmappableCharacterException ( this . length ) ; case TYPE_MALFORMED_INPUT : throw new MalformedInputException ( this . length ) ; default : throw new CharacterCodingException ( ) ; } }
38143	@ Override public void addPropertyChangeListener ( PropertyChangeListener listener ) { support . addPropertyChangeListener ( listener ) ; }
38147	private static void checkState ( ) throws IllegalStateException { if ( INSTANCE == _NULL ) { throw new IllegalStateException ( _CHAR Time service not started _CHAR ) ; } }
38157	protected boolean isValid ( ) { return ( maxX > _NUM ) ; }
38165	public SipRequestLine createRequestLine ( String requestLine ) throws ParseException { RequestLineParser requestLineParser = new RequestLineParser ( requestLine ) ; return ( SipRequestLine ) requestLineParser . parse ( ) ; }
38166	private void initiateMonitor ( ) { if ( DEBUG . messageEnabled ( ) ) { DEBUG . message ( _CHAR Initialising monitor to listen for policy path index modifications . '' ) ; } scheduler . schedule ( monitorTask , INIT_DELAY , DELAY_UNIT ) ; }
38190	private Future < List < Product >> prepareProduct ( ProductService service , ShoppingCart cart ) { List < Future < Product >> futures = cart . getAmountMap ( ) . keySet ( ) . stream ( ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; return Functional . sequenceFuture ( futures ) ; }
38192	public void addValue ( TemplateValue value ) { ArrayList < TemplateValue > valueList = attributes . get ( value . getAttributeType ( ) ) ; if ( valueList == _NULL ) { valueList = new ArrayList < > ( ) ; attributes . put ( value . getAttributeType ( ) , valueList ) ; } valueList . add ( value ) ; }
38202	public boolean isReverse ( ) { return _BOOL ; }
38204	public boolean requiredResourceName ( Policy policy , String realmName , String name ) { getSvcTypeNameToActionsMap ( policy , realmName ) ; return requiredResourceNameService . contains ( name ) ; }
38215	public net . aimeizi . person . Person . Builder clearSex ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
38266	public static Result unmodifiableResult ( final Result result ) { if ( result instanceof UnmodifiableResultImpl ) { return result ; } return new UnmodifiableResultImpl ( result ) ; }
38282	static ReplayPromise < Boolean > replayPromiseBoolean ( final Duration timeout , final long time ) { return new ReplayPromiseImpl < > ( timeout , time ) ; }
38306	public void stopReplicationServers ( Collection < HostPort > serversToDisconnect ) { for ( ReplicationServerHandler rsHandler : connectedRSs . values ( ) ) { if ( serversToDisconnect . contains ( HostPort . valueOf ( rsHandler . getServerAddressURL ( ) ) ) ) { stopServer ( rsHandler , _BOOL ) ; } } }
38313	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
38331	public int hashCode ( ) { return attrType . hashCode ( ) ; }
38341	private Set < T > convertResults ( Collection < Token > tokens ) { Set < T > results = new HashSet < T > ( ) ; for ( Token token : tokens ) { results . add ( adapter . fromToken ( token ) ) ; } return results ; }
38401	public File createFile ( String name ) throws IOException { File file = new File ( getFolder ( ) , name ) ; file . createNewFile ( ) ; return file ; }
38402	public void notify_moved ( BrdComponent p_component ) { }
38405	public boolean isVerbose ( ) { return ( environment . get ( CLIConstants . ARGUMENT_VERBOSE ) != _NULL ) ; }
38434	public String addExtension ( String testFileName ) { return testFileName + _CHAR . svg _CHAR ; }
38447	public static String toRealmQualifiedAuthnData ( String realm , String data ) { String realmQualifedData = data ; if ( realm != _NULL && realm . length ( ) != _NUM ) { realmQualifedData = realm . trim ( ) + ISAuthConstants . COLON + data . trim ( ) ; } return realmQualifedData ; }
38449	public int hashCode ( ) { int code = _NUM ; Object [ ] tbl = attributes ; for ( int i = _NUM ; i < tbl . length ; i += _NUM ) { code ^= tbl [ i ] . hashCode ( ) ; } return code ; }
38476	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
38478	public int hashCode ( ) { return name . hashCode ( ) ; }
38502	public Location add ( double x , double y , double z ) { this . x += x ; this . y += y ; this . z += z ; return this ; }
38505	public int remaining ( ) { return length - pos ; }
38519	public void addSessionListener ( SessionListener listener , boolean force ) throws SessionException { if ( ! force && sessionState != SessionState . VALID ) { throw new SessionException ( SessionBundle . rbName , _CHAR invalidSessionState _CHAR , _NULL ) ; } localSessionEventListeners . add ( listener ) ; }
38524	private static void assertFieldNS ( String fieldNS ) throws XMPException { if ( fieldNS == _NULL || fieldNS . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty field namespace URI _CHAR , XMPError . BADSCHEMA ) ; } }
38569	private void resetToSAXHandler ( ) { this . m_lexHandler = _NULL ; this . m_saxHandler = _NULL ; this . m_state = _NULL ; this . m_shouldGenerateNSAttribute = _BOOL ; }
38575	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; return ( obj instanceof TransactionState ) && ( ( TransactionState ) obj ) . m_transactionState == m_transactionState ; }
38585	public boolean notEquals ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . notEquals ( this ) ; return ! equals ( obj2 ) ; }
38589	public static com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return getService ( ) . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
38601	public Method element ( ) { return element ; }
38618	private void initLookAndFeel ( ) throws Throwable { UIFactory . initialize ( ) ; }
38626	public static String generateIDWithServerID ( ) { if ( random == _NULL ) { return _NULL ; } byte bytes [ ] = new byte [ SAML2Constants . ID_LENGTH ] ; random . nextBytes ( bytes ) ; String id = SAML2ID_PREFIX + byteArrayToHexString ( bytes ) ; return embedServerID ( id ) ; }
38631	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
38661	public LoginConfiguration httpRequest ( HttpServletRequest httpRequest ) { this . httpRequest = httpRequest ; return this ; }
38692	public boolean contains ( int s ) { if ( _NULL == m_map ) return _BOOL ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { int node = m_map [ i ] ; if ( node == s ) return _BOOL ; } return _BOOL ; }
38705	public SignatureVisitor visitArrayType ( ) { return this ; }
38713	public ParameterBlock add ( double d ) { return add ( new Double ( d ) ) ; }
38715	public boolean isBorderOpaque ( ) { return _BOOL ; }
38726	public ParameterBlock add ( float f ) { return add ( new Float ( f ) ) ; }
38728	public int hashCode ( ) { return this . credentialClass . hashCode ( ) ; }
38756	public static String trailingSlash ( String value ) { if ( value == _NULL || value . endsWith ( _CHAR / _CHAR ) ) { return value ; } return value . concat ( _CHAR / _CHAR ) ; }
38806	public boolean canBeRequestTime ( ) { return reqTime ; }
38812	public void leaveGroup ( InetAddress groupAddr ) throws IOException { checkJoinOrLeave ( groupAddr ) ; impl . leave ( groupAddr ) ; }
38818	public void write_abstract_interface ( java . lang . Object obj ) { throw new org . omg . CORBA . NO_IMPLEMENT ( ) ; }
38838	private static boolean isTlsProtocol ( byte [ ] packet ) { return ( packet [ _NUM ] & _NUM ) == _NUM && ( packet [ _NUM ] & _NUM ) == _NUM && ( packet [ _NUM ] & _NUM ) == _NUM ; }
38847	public boolean isEmpty ( ) { return components . isEmpty ( ) ; }
38862	public static boolean isLowSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
38867	@ Override public void flush ( ) throws IOException { doFlush ( _BOOL ) ; }
38883	public Object clone ( ) { WebServicesClients theClone = _NULL ; try { theClone = ( WebServicesClients ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( selectedWebServicesClients != _NULL ) { theClone . selectedWebServicesClients = new HashSet ( ) ; theClone . selectedWebServicesClients . addAll ( selectedWebServicesClients ) ; } return theClone ; }
38898	public void removeAttributes ( AttributeSet attrs ) { StyleContext context = StyleContext . this ; if ( attrs == this ) { attributes = context . getEmptySet ( ) ; } else { attributes = context . removeAttributes ( attributes , attrs ) ; } fireStateChanged ( ) ; }
38903	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) ; unchecked ( _NULL ) ; }
38910	boolean compareMethods ( Method a , Method b ) { if ( ( a == _NULL ) != ( b == _NULL ) ) { return _BOOL ; } if ( a != _NULL && b != _NULL ) { if ( ! a . equals ( b ) ) { return _BOOL ; } } return _BOOL ; }
38911	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return _fooLocalService . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
38922	public int hashCode ( ) { int hash = type . hashCode ( ) ; if ( name != _NULL ) hash ^= name . hashCode ( ) ; if ( actions != _NULL ) hash ^= actions . hashCode ( ) ; return hash ; }
38932	public boolean newline ( ) { return append ( _CHAR \ n _CHAR ) ; }
38935	public static boolean isClassAvilableInClassPath ( String string ) { try { Class . forName ( string ) ; return _BOOL ; } catch ( ClassNotFoundException e ) { return _BOOL ; } }
38959	@ Override public int available ( ) { return lastValid - pos ; }
38981	public void animateVisibility ( boolean visible ) { if ( mVisible != visible ) { mVisible = visible ; if ( mAlphaAnimator != _NULL ) { mAlphaAnimator . cancel ( ) ; } mAlphaAnimator = ObjectAnimator . ofFloat ( this , _CHAR alpha _CHAR , visible ? _NUM : _NUM ) ; mAlphaAnimator . setDuration ( visible ? _NUM : _NUM ) ; mAlphaAnimator . start ( ) ; } }
38985	public int hashCode ( ) { return attrType . hashCode ( ) ; }
38987	@ Override public synchronized int size ( ) { return elementCount ; }
39003	@ Override public boolean isExists ( SSOToken token , IdType type , String name ) throws IdRepoException { if ( DEBUG . messageEnabled ( ) ) { DEBUG . message ( _CHAR isExists invoked _CHAR ) ; } try { getDN ( type , name ) ; } catch ( IdentityNotFoundException infe ) { return _BOOL ; } return _BOOL ; }
39035	private Component scrollable ( Component pnl ) { JScrollPane scroll = new JScrollPane ( pnl ) ; scroll . setBorder ( BorderFactory . createEmptyBorder ( ) ) ; return scroll ; }
39086	public void handleButton3Request ( RequestInvocationEvent event ) { super . handleButton2Request ( event ) ; }
39158	@ Override public int hashCode ( ) { return Arrays . hashCode ( ipaddress ) ; }
39162	static boolean isSystemWindows ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
39177	private void doMatch ( FileEntry entry , File file ) { if ( entry . refresh ( file ) ) { for ( FileAlterationListener listener : listeners ) { if ( entry . isDirectory ( ) ) { listener . onDirectoryChange ( file ) ; } else { listener . onFileChange ( file ) ; } } } }
39181	public int hashCode ( ) { return map . hashCode ( ) ; }
39188	public static boolean warningEnabled ( ) { return debugInst . warningEnabled ( ) ; }
39215	public boolean isReverse ( ) { return _BOOL ; }
39235	public void internalFrameOpened ( InternalFrameEvent e ) { }
39239	public static final Document createTestDocument3 ( ) { Document entity = new Document ( ) ; entity . setTable ( _CHAR mydb _CHAR , _CHAR mytable _CHAR ) ; entity . setObjectAsString ( _CHAR { \ _CHAR thisisastring \ _CHAR : \ _CHAR hello \ _CHAR , \ _CHAR thisisanint \ _CHAR : \ _CHAR _NUM \ _CHAR , \ _CHAR thisisadouble \ _CHAR : \ _CHAR _NUM . _NUM \ _CHAR , _CHAR + _CHAR \ _CHAR thisisbase64 \ _CHAR : \ _CHAR VGhpcyBpcyBhIGdvb2RseSB0ZXN0IG1lc3NhZ2Uu \ _CHAR , \ _CHAR thisisaboolean \ _CHAR : \ _CHAR f \ _CHAR , _CHAR + _CHAR \ _CHAR thisisadate \ _CHAR : \ _CHAR Thu Apr _NUM _NUM : _NUM : _NUM MDT _NUM \ _CHAR , \ _CHAR thisisauudid \ _CHAR : \ _CHAR _NUM - ef51 - _NUM - _NUM - _NUM \ _CHAR , \ _CHAR thisisalong \ _CHAR : \ _CHAR _NUM \ _CHAR } _CHAR ) ; entity . setUuid ( new UUID ( _NUM , _NUM ) ) ; entity . setCreatedAt ( new Date ( ) ) ; entity . setUpdatedAt ( new Date ( ) ) ; return entity ; }
39254	public static RebuildIndexParameters rebuildIndexParams ( ) { return new RebuildIndexParameters ( ) ; }
39286	private static Attribute makeAttrFromServerProperty ( ServerProperty property , Object value ) { switch ( property ) { case INSTANCE_PUBLIC_KEY_CERTIFICATE : return _NULL ; case GROUPS : return new LinkedAttribute ( ServerProperty . GROUPS . getAttributeName ( ) , ( ( Collection < ? > ) value ) ) ; default : return new LinkedAttribute ( property . getAttributeName ( ) , value ) ; } }
39292	public boolean isAttribution ( ) { return attribution ; }
39294	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setAutoIncrementPatch ( _BOOL ) ; unchecked ( _NULL ) ; }
39299	public int hashCode ( ) { return this . getName ( ) . hashCode ( ) + this . getActions ( ) . hashCode ( ) ; }
39343	public boolean isVimeoURLValid ( ) { String videoID = getExtractedIdentifier ( ) ; return videoID . length ( ) > _NUM && TextUtils . isDigitsOnly ( videoID ) ; }
39347	public static int toRealPosition ( int position , int count ) { position = position - _NUM ; if ( position < _NUM ) { position += count ; } else { position = position % count ; } return position ; }
39350	private void assertAddEntry ( SearchResultEntry entry , String uid , String entryUUID , long changeNumber , CSN csn ) throws Exception { assertAttributeValue ( entry , _CHAR changetype _CHAR , _CHAR add _CHAR ) ; assertEntryMatchesLDIF ( entry , _CHAR changes _CHAR , _CHAR objectClass : domain _CHAR , _CHAR objectClass : top _CHAR , _CHAR entryUUID : _CHAR + entryUUID ) ; assertEntryCommonAttributes ( entry , uid , entryUUID , changeNumber , csn ) ; }
39360	@ Override protected CBORParser _createParser ( InputStream in , IOContext ctxt ) throws IOException { return new CBORParserBootstrapper ( ctxt , in ) . constructParser ( _factoryFeatures , _parserFeatures , _formatParserFeatures , _objectCodec , _byteSymbolCanonicalizer ) ; }
39365	public int hashCode ( ) { return ( getName ( ) . hashCode ( ) ^ mask ) ; }
39371	public static AppEventsLogger newLogger ( Context context , Session session ) { return new AppEventsLogger ( context , _NULL , session ) ; }
39373	public void clear ( ) { removeAll ( _BOOL ) ; }
39384	public XMLString newstr ( String string ) { return new XString ( string ) ; }
39396	public boolean isEmpty ( ) { return _BOOL ; }
39404	void registerEntryContainer ( DN baseDN , EntryContainer entryContainer ) throws InitializationException { EntryContainer ec = this . entryContainers . get ( baseDN ) ; if ( ec != _NULL ) { throw new InitializationException ( ERR_ENTRY_CONTAINER_ALREADY_REGISTERED . get ( ec . getTreePrefix ( ) , baseDN ) ) ; } this . entryContainers . put ( baseDN , entryContainer ) ; }
39407	private String badArrive ( long s ) { return _CHAR Attempted arrival of unregistered party for '' + stateToString ( s ) ; }
39433	public static ImageData create ( java . awt . Image image , java . awt . Color color ) throws java . io . IOException { return ImageDataFactory . create ( image , color , _BOOL ) ; }
39449	public final void endDocument ( ) throws org . xml . sax . SAXException { flushPending ( ) ; if ( m_doIndent && ! m_isprevtext ) { try { outputLineSep ( ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } } flushWriter ( ) ; if ( m_tracer != _NULL ) super . fireEndDoc ( ) ; }
39455	public boolean equals ( Object obj ) { if ( obj instanceof Parameter ) { Parameter other = ( Parameter ) obj ; return ( other . executable . equals ( executable ) && other . index == index ) ; } return _BOOL ; }
39460	public boolean canAcceptVariables ( ) { return _BOOL ; }
39467	public void notifyChanges ( ) { update ( _BOOL ) ; }
39491	public void endDocument ( ) throws SAXException { flushPending ( ) ; m_saxHandler . endDocument ( ) ; if ( m_tracer != _NULL ) super . fireEndDoc ( ) ; }
39500	public void dispatchToEvents ( int nodeHandle , org . xml . sax . ContentHandler ch ) throws org . xml . sax . SAXException { }
39505	void signedAdd ( SignedMutableBigInteger addend ) { if ( sign == addend . sign ) add ( addend ) ; else sign = sign * subtract ( addend ) ; }
39508	public net . aimeizi . person . Person . Builder clearSalary ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
39510	@ DataProvider ( name = _CHAR invalidStatements _CHAR ) public Object [ ] [ ] invalids ( ) { return new Object [ ] [ ] { { _CHAR _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM .. _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . XXX . 18 _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM . _NUM . *. _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM , _NUM . _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR + _CHAR } } ; }
39526	public boolean hasEventID ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
39559	public void removeAttributes ( Enumeration < ? > names ) { StyleContext context = StyleContext . this ; attributes = context . removeAttributes ( attributes , names ) ; fireStateChanged ( ) ; }
39564	public static void addConstraint ( Constraint constraint ) { TestChildCfgDefn . getInstance ( ) . registerConstraint ( constraint ) ; }
39607	public static Entry decode ( ByteSequenceReader entryBuffer ) throws DirectoryException { return decode ( entryBuffer , DirectoryServer . getDefaultCompressedSchema ( ) ) ; }
39609	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
39668	public static void sort ( long [ ] array ) { DualPivotQuicksort . sort ( array ) ; }
39677	private static FieldDataType parseArgs ( String [ ] args ) { if ( args . length != _NUM ) { throw new IllegalArgumentException ( _CHAR You must pass in a single FieldDataType _CHAR ) ; } return FieldDataType . valueOf ( args [ _NUM ] . toUpperCase ( ) . trim ( ) ) ; }
39686	private void registerDeleteListener ( DN baseDN , ConfigDeleteListener adaptor ) throws ConfigException { if ( configRepository . hasEntry ( baseDN ) ) { configRepository . registerDeleteListener ( baseDN , adaptor ) ; } else { ConfigAddListener delayedListener = new DelayedConfigAddListener ( baseDN , adaptor , configRepository ) ; registerDelayedListener ( baseDN , delayedListener ) ; } }
39687	public void remove ( String name ) { parameters . remove ( name . trim ( ) . toLowerCase ( ) ) ; }
39689	public synchronized boolean isClosed ( ) { return journalWriter == _NULL ; }
39736	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) ; unchecked ( _NULL ) ; }
39748	public int rtf ( ) { throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER , _NULL ) ) ; }
39782	public void reset ( ) { is_occupied = _BOOL ; backtrack_door = _NULL ; section_no_of_backtrack_door = _NUM ; room_ripped = _BOOL ; adjustment = MazeAdjustment . NONE ; }
39811	public static float pxToDp ( float px ) { float densityDpi = Resources . getSystem ( ) . getDisplayMetrics ( ) . densityDpi ; return pxToDp ( px , densityDpi ) ; }
39823	public void paintFormattedTextFieldBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
39843	public List unshift ( Object element ) { add ( _NUM , element ) ; return this ; }
39855	public void addObserver ( final FileAlterationObserver observer ) { if ( observer != _NULL ) { observers . add ( observer ) ; } }
39857	public boolean containsAttribute ( Object name , Object value ) { return value . equals ( getAttribute ( name ) ) ; }
39873	public PlaLineInt mirror_horizontal ( PlaPointInt p_pole ) { PlaPointInt new_a = point_b . mirror_horizontal ( p_pole ) ; PlaPointInt new_b = point_a . mirror_horizontal ( p_pole ) ; return new PlaLineInt ( new_a , new_b ) ; }
39882	public boolean validate ( String value , String rule ) { return validate ( value ) ; }
39898	protected void finalize ( ) { if ( cmmProfile != _NULL ) { CMSManager . getModule ( ) . freeProfile ( cmmProfile ) ; } else if ( profileActivator != _NULL ) { ProfileDeferralMgr . unregisterDeferral ( profileActivator ) ; } }
39937	public static boolean isThreadCpuTimeEnabled ( ) { return threadMXBean . isThreadCpuTimeEnabled ( ) ; }
39943	public void visitIntInsn ( int opcode , int operand ) { if ( mv != _NULL ) { mv . visitIntInsn ( opcode , operand ) ; } }
39982	@ Override public void delete ( final int index ) { }
39987	public void addSessionListener ( SessionListener listener ) throws SessionException { addSessionListener ( listener , _BOOL ) ; }
40013	private void assertNormalisation ( String untreatedResource , String treatedResource ) { try { assertThat ( resourceName . canonicalize ( untreatedResource ) ) . isEqualTo ( treatedResource ) ; } catch ( Exception e ) { String message = _CHAR Normalisation failed : _CHAR + e . getMessage ( ) ; throw ComparisonFailureFactory . comparisonFailure ( message , treatedResource , _CHAR _CHAR ) ; } }
40036	@ Override public int read ( ) throws IOException { InputStream input = m_streams . get ( ) ; if ( _NULL != input ) { return input . read ( ) ; } else { return - _NUM ; } }
40040	public StringBuilder reverse ( ) { reverse0 ( ) ; return this ; }
40054	private Future < Void > applyInventoryChanges ( Order order ) { Future < Void > future = Future . future ( ) ; Future < HttpClient > clientFuture = Future . future ( ) ; HttpEndpoint . getClient ( discovery , new JsonObject ( ) . put ( _CHAR name _CHAR , _CHAR inventory - rest - api _CHAR ) , clientFuture . completer ( ) ) ; return clientFuture . compose ( _NULL ) ; }
40064	public static Color flashColor ( ) { return info ( ) . flashColor ; }
40073	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
40075	public boolean isEmpty ( ) { return subpaths . size ( ) == _NUM ; }
40087	public static boolean isFillInAllowed ( int permissions ) { return ( EncryptionConstants . ALLOW_FILL_IN & permissions ) == EncryptionConstants . ALLOW_FILL_IN ; }
40100	protected ComboPopup createPopup ( ) { return new BasicComboPopup ( comboBox ) ; }
40116	public static WhoAmIExtendedRequest newWhoAmIExtendedRequest ( ) { return new WhoAmIExtendedRequestImpl ( ) ; }
40129	public static String toPem ( Object object ) throws Exception { StringWriter sw = new StringWriter ( ) ; PEMWriter pw = new PEMWriter ( sw ) ; pw . writeObject ( object ) ; pw . flush ( ) ; return sw . toString ( ) ; }
40134	public synchronized int size ( ) { return count ; }
40155	private void addBaseEntry ( String suffix , String namingAttribute ) throws Exception { TestCaseUtils . addEntry ( _CHAR dn : _CHAR + suffix , _CHAR objectClass : top _CHAR , _CHAR objectClass : organization _CHAR , _CHAR o : _CHAR + namingAttribute ) ; }
40167	public static String verifyCertificate ( X509Certificate cert , Collection < CRL > crls ) { return verifyCertificate ( cert , crls , DateTimeUtil . getCurrentTimeCalendar ( ) ) ; }
40195	public boolean isEmpty ( ) { return _BOOL ; }
40214	public boolean isVisible ( ) { if ( this == root ) return _BOOL ; TreeStateNode parent = ( TreeStateNode ) getParent ( ) ; return ( parent != _NULL && parent . isExpanded ( ) && parent . isVisible ( ) ) ; }
40218	public static com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return getService ( ) . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
40231	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
40246	public boolean isEnabled ( ) { return isEnabled ; }
40284	public int end ( ) { if ( first < _NUM ) throw new IllegalStateException ( _CHAR No match available _CHAR ) ; return last ; }
40296	public void write_value ( java . io . Serializable value , String repository_id ) { throw new org . omg . CORBA . NO_IMPLEMENT ( ) ; }
40299	public String toString ( ) { if ( exception != _NULL ) { return exception . toString ( ) ; } else { return super . toString ( ) ; } }
40310	public void addPropertyChangeListener ( PropertyChangeListener listener ) { support . addPropertyChangeListener ( listener ) ; }
40361	public static boolean isHighSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
40371	public boolean isUserValid ( String userId , OAuth2Request request ) { try { identityManager . getResourceOwnerIdentity ( userId , request . < String > getParameter ( REALM ) ) ; } catch ( Exception e ) { return _BOOL ; } return _BOOL ; }
40378	public static boolean isXuiAdminConsoleEnabled ( ) { return InjectorHolder . getInstance ( XUIState . class ) . isXUIAdminEnabled ( ) ; }
40387	public static com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return getService ( ) . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
40388	public boolean isCustomizable ( String clientType ) { return clientCapDataExtInstance . isClientPresent ( clientType ) ; }
40400	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) ; unchecked ( _NULL ) ; }
40424	public static Authenticator withAccessToken ( final String username , final ZonkyApiToken token , final boolean isDryRun ) { return new Authenticator ( _NULL , _BOOL , isDryRun ) ; }
40436	public void removeTemplateAttribute ( String name ) { removeAttribute ( new Attr ( name ) ) ; }
40437	private static int unsignedByteToInt ( byte b ) { return b & _NUM ; }
40477	public boolean isAPKFile ( JecFile file ) { return ! file . isDirectory ( ) && isAPKFile ( file . getName ( ) ) ; }
40487	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
40504	public void leaveGroup ( SocketAddress groupAddress , NetworkInterface netInterface ) throws IOException { checkJoinOrLeave ( groupAddress , netInterface ) ; impl . leaveGroup ( groupAddress , netInterface ) ; }
40512	public void visitTypeVariable ( String name ) { }
40532	public final void forceFinished ( boolean finished ) { mFinished = finished ; }
40581	public static Border createLineBorder ( Color color ) { return new LineBorder ( color , _NUM ) ; }
40589	public void addLiteralResultAttribute ( String attrUri , String attrLocalName , String attrRawName , String attrValue ) { QName key = new QName ( attrUri , attrLocalName ) ; m_outputProperties . setProperty ( key , attrValue ) ; }
40591	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
40675	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
40723	void append ( final String s ) { templateValue . append ( s ) ; }
40758	@ Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws IOException , ServletException { doGet ( request , response ) ; }
40765	public boolean containsProvider ( String providerID ) { EntityDescriptorElement ed = _NULL ; try { ed = metaManager . getEntityDescriptor ( _CHAR / _CHAR , providerID ) ; } catch ( SAML2MetaException smex ) { SAML2Utils . debug . error ( _CHAR SAML2ProviderManager . containsProvider : _CHAR , smex ) ; } return ( ed != _NULL ) ; }
40772	private void checkIsCorrectClass ( ) { if ( checkIsSubClass ( ACT_NAME ) ) { type = ElementType . ACTTIVITY ; } else if ( checkIsSubClass ( FRAG_NAME ) || checkIsSubClass ( V4_FRAG_NAME ) ) { type = ElementType . FRAGMENT ; } else { throw new IllegalArgumentException ( String . format ( _CHAR class % s must be extends from % s or % s or % s _CHAR , element . getQualifiedName ( ) , ACT_NAME , FRAG_NAME , V4_FRAG_NAME ) ) ; } }
40795	public void addCSSAttribute ( MutableAttributeSet attr , CSS . Attribute key , String value ) { css . addInternalCSSValue ( attr , key , value ) ; }
40811	private static void updateEntry ( final Connection connection , final String name , final String attributeDescription ) throws LdapException { ModifyRequest request = Requests . newModifyRequest ( name ) . addModification ( ModificationType . REPLACE , attributeDescription , _CHAR This is a String . '' ) ; connection . modify ( request ) ; }
40812	private final boolean compareAndSetTail ( Node expect , Node update ) { return unsafe . compareAndSwapObject ( this , tailOffset , expect , update ) ; }
40829	public static void fill ( double [ ] array , double value ) { for ( int i = _NUM ; i < array . length ; i ++ ) { array [ i ] = value ; } }
40830	public boolean isEmpty ( ) { return _BOOL ; }
40858	@ Override public EventHandlers defineEventHandlers ( EventHandlersBuilder builder ) { builder . setEventHandler ( CargoRegistered . class , _NULL ) ; return builder . build ( ) ; }
40882	private void readObject ( ObjectInputStream s ) throws ClassNotFoundException , IOException , HeadlessException { if ( GraphicsEnvironment . isHeadless ( ) ) { throw new HeadlessException ( ) ; } s . defaultReadObject ( ) ; }
40886	public int size ( ) { return ( tail - head ) & ( elements . length - _NUM ) ; }
40887	private static ObjectMapper createObjectMapper ( ) { ObjectMapper mapper = new ObjectMapper ( ) ; mapper . enable ( SerializationFeature . INDENT_OUTPUT ) ; return mapper ; }
40897	@ Override public boolean isSortAscending ( ) { return sortAscending ; }
40898	private final boolean compareAndSetTail ( Node expect , Node update ) { return unsafe . compareAndSwapObject ( this , tailOffset , expect , update ) ; }
40901	private void checkPostRequest ( final HttpServletRequest request ) throws ConnectorException { if ( request . getParameter ( _CHAR CKFinderCommand _CHAR ) == _NULL || ! request . getParameter ( _CHAR CKFinderCommand _CHAR ) . equals ( _CHAR _BOOL _CHAR ) ) { throw new ConnectorException ( Constants . Errors . CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST , _BOOL ) ; } }
40961	public static void define ( String name ) { Tag tag = new Tag ( name ) ; TAGS . put ( name , tag ) ; }
40968	public void authenticateRequester ( HttpServletRequest request , HttpServletResponse response , AttributeQuery attrQuery , String attrAuthorityEntityID , String realm ) throws SAML2Exception { AttributeQueryUtil . validateEntityRequester ( attrQuery , attrAuthorityEntityID , realm ) ; }
40969	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) . setUseDefaultBranchingPolicy ( _BOOL ) . setNonQualifierBranches ( _CHAR _CHAR ) ; unchecked ( _NULL ) ; }
40983	public void drawLine ( SynthContext context , Object paintKey , Graphics g , int x1 , int y1 , int x2 , int y2 ) { g . drawLine ( x1 , y1 , x2 , y2 ) ; }
41012	@ Override public void removeNotificationListener ( NotificationListener listener ) throws ListenerNotFoundException { if ( listener == _NULL ) throw new IllegalArgumentException ( _CHAR Listener is _NULL _CHAR ) ; if ( generalBroadcaster != _NULL ) { generalBroadcaster . removeNotificationListener ( listener ) ; } if ( attributeBroadcaster != _NULL ) { attributeBroadcaster . removeNotificationListener ( listener ) ; } }
41031	public boolean hasDescription ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
41084	private InetAddress socksGetServerAddress ( ) throws UnknownHostException { String proxyName ; InetSocketAddress addr = ( InetSocketAddress ) proxy . address ( ) ; proxyName = addr . getHostName ( ) ; if ( proxyName == _NULL ) { proxyName = addr . getAddress ( ) . getHostAddress ( ) ; } return InetAddress . getByName ( proxyName ) ; }
41117	public java . io . Serializable read_value ( org . omg . CORBA . portable . BoxedValueHelper factory ) { throw new org . omg . CORBA . NO_IMPLEMENT ( ) ; }
41145	public void clear ( ) { m . clear ( ) ; }
41150	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
41172	public int hashCode ( ) { if ( initiator != _NULL ) return initiator . hashCode ( ) ; else if ( acceptor != _NULL ) return acceptor . hashCode ( ) ; else if ( appData != _NULL ) return new String ( appData ) . hashCode ( ) ; else return _NUM ; }
41189	public boolean isAdvancedMode ( ) { return _BOOL ; }
41223	private void deleteAccessTokensRefreshToken ( JsonValue token ) throws CoreTokenException { if ( OAUTH_ACCESS_TOKEN . equals ( getAttributeValue ( token , TOKEN_NAME ) ) ) { String refreshTokenId = getAttributeValue ( token , REFRESH_TOKEN ) ; if ( refreshTokenId != _NULL ) { tokenStore . delete ( refreshTokenId ) ; } } }
41254	protected Object readResolve ( ) throws InvalidObjectException { if ( this . getClass ( ) != TextAttribute . class ) { throw new InvalidObjectException ( _CHAR subclass did n _CHAR_CHAR_CHAR_CHAR ) ; } }
41261	protected Rectangle applyPaddings ( Rectangle rect , boolean reverse ) { return applyPaddings ( rect , getPaddings ( ) , reverse ) ; }
41284	@ Override public synchronized void markReturning ( ) { state = PooledObjectState . RETURNING ; }
41306	public boolean hasSession ( SessionID sessionID ) { Reject . ifNull ( sessionID ) ; return sessionTable . containsKey ( sessionID ) ; }
41309	public Key decryptKey ( Element encryptedKey , String certAlias ) { return ep . decryptKey ( encryptedKey , certAlias ) ; }
41322	public static boolean isSiteId ( String siteID ) { if ( ! platformNamingInitialized ) { initPlatformNaming ( ) ; } return idToSiteTable . containsKey ( siteID ) ; }
41333	private final static boolean isLaoBaseConsonant ( int ch ) { return ( ch >= _NUM ) && ( ch <= _NUM ) ; }
41365	public boolean isDone ( ) { return index > poly . npoints ; }
41366	private final boolean compareAndSetHead ( Node update ) { return unsafe . compareAndSwapObject ( this , headOffset , _NULL , update ) ; }
41367	public void bodyBlock ( ) { throw new EmperorHasNoClothes ( ) ; }
41368	public void closeDriver ( ) { if ( camera != _NULL ) { FlashlightManager . disableFlashlight ( ) ; camera . release ( ) ; camera = _NULL ; } }
41373	public Enum asEnum ( ) { return this . searchScopeEnum ; }
41379	private boolean isSelfSigned ( X509Certificate cert ) { return cert . getSubjectDN ( ) . equals ( cert . getIssuerDN ( ) ) ; }
41383	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
41405	public int size ( ) { return delegate . size ( ) ; }
41421	private boolean checkCurrentAnimationPart ( AnimationPart part ) { switch ( part ) { case FIRST : { return mLoadingAnimationTime < getAnimationTimePart ( AnimationPart . FOURTH ) ; } case SECOND : case THIRD : { return mLoadingAnimationTime < getAnimationTimePart ( part ) ; } case FOURTH : { return mLoadingAnimationTime > getAnimationTimePart ( AnimationPart . THIRD ) ; } default : return _BOOL ; } }
41422	@ Provides @ PerActivity Activity activity ( ) { return activity ; }
41443	private ChangeRecordEntry parseDeleteChangeRecordEntry ( DN entryDN , List < StringBuilder > lines ) throws LDIFException { if ( ! lines . isEmpty ( ) ) { LocalizableMessage message = ERR_LDIF_INVALID_DELETE_ATTRIBUTES . get ( ) ; throw new LDIFException ( message , lineNumber , _BOOL ) ; } return new DeleteChangeRecordEntry ( entryDN ) ; }
41455	public boolean isBound ( ) { return bound ; }
41468	protected void handleTitle ( char text [ ] ) { handleText ( text ) ; }
41481	void removeClientConnection ( ClientConnection clientConnection ) { clientConnections . remove ( clientConnection ) ; }
41516	public boolean isAnalysisStarted ( MetricReference ref ) { return metricStatisticsMap . get ( ref ) . task != _NULL ; }
41542	public boolean is_diagonal_left ( ) { return dir_x == - dir_y ; }
41558	public boolean hasVersion ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
41585	private static boolean isUnreservedCharacter ( char p_char ) { return ( isAlphanum ( p_char ) || MARK_CHARACTERS . indexOf ( p_char ) != - _NUM ) ; }
41597	public static String constructLlccKey ( String lang , String country ) { String key = lang ; if ( country != _NULL && ! country . equals ( _CHAR none _CHAR ) ) { key += _CHAR _ _CHAR + country ; } return key ; }
41640	public final HashCode append ( double value ) { hashCode = combine ( hashCode , value ) ; return this ; }
41641	protected Integer parseNumber ( String number , Integer emptyValue , Integer invalidValue ) { if ( StringUtils . isEmpty ( number ) ) { return emptyValue ; } try { return Integer . parseInt ( number ) ; } catch ( NumberFormatException e ) { return invalidValue ; } }
41664	public void paintFormattedTextFieldBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
41677	public static IOFileFilter notFileFilter ( IOFileFilter filter ) { return new NotFileFilter ( filter ) ; }
41681	public org . omg . CORBA . TCKind discriminator_kind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR discriminator_kind _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . discriminator_kind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
41774	public static void deregisterListeners ( ) { DirectoryServer . deregisterBackupTaskListener ( instance ) ; DirectoryServer . deregisterRestoreTaskListener ( instance ) ; DirectoryServer . deregisterExportTaskListener ( instance ) ; DirectoryServer . deregisterImportTaskListener ( instance ) ; }
41825	public void removeResourceLink ( String name ) { try { envCtx . unbind ( name ) ; } catch ( NamingException e ) { log . error ( sm . getString ( _CHAR naming . unbindFailed _CHAR , e ) ) ; } ResourceLinkFactory . deregisterGlobalResourceAccess ( getGlobalNamingContext ( ) , name ) ; }
41835	public ManageNameIDRequest createManageNameIDRequest ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_REQUEST ) ; if ( obj == _NULL ) { return new ManageNameIDRequestImpl ( ) ; } else { return ( ManageNameIDRequest ) obj ; } }
41843	@ Override @ Deprecated public void shutdown ( ) { throw new UnsupportedOperationException ( ) ; }
41856	public boolean hasBinaryAttributes ( ) { return _BOOL ; }
41892	public int max_net_no ( ) { return net_list . size ( ) ; }
41901	public int size ( ) { return Long . bitCount ( elements ) ; }
41921	public Future < Boolean > existsJob ( long id ) { Future < Boolean > future = Future . future ( ) ; jobService . existsJob ( id , future . completer ( ) ) ; return future ; }
41930	public boolean clear ( ) { getContext ( ) . removeSessionAttribute ( SessionAttributeNames . LB_SITE_NAME ) ; getContext ( ) . removeSessionAttribute ( SessionAttributeNames . LB_PRIMARY_URL ) ; setPath ( _NULL ) ; return _BOOL ; }
41935	private void appendToList ( List < String > list , String [ ] array ) { if ( array != _NULL && array . length > _NUM ) { list . addAll ( Arrays . asList ( array ) ) ; } }
41937	void clear ( ) { baseDNs . clear ( ) ; privateNamingContexts . clear ( ) ; publicNamingContexts . clear ( ) ; allPublicNamingContexts . clear ( ) ; }
41946	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) ; unchecked ( _NULL ) ; }
41950	public void focusGained ( FocusEvent e ) { comboBox . repaint ( ) ; }
41975	void checkStartCode ( ) { if ( ! startCode ) { throw new IllegalStateException ( _CHAR Can not visit instructions before visitCode has been called . '' ) ; } }
41985	public static Mode chooseMode ( String content ) { return chooseMode ( content , _NULL ) ; }
41986	void signedSubtract ( SignedMutableBigInteger addend ) { if ( sign == addend . sign ) sign = sign * subtract ( addend ) ; else add ( addend ) ; }
41987	@ Override public String toString ( ) { return _CHAR ModelMBeanAttributeInfo : _CHAR + this . getName ( ) + _CHAR ; Description : _CHAR + this . getDescription ( ) + _CHAR ; Types : _CHAR + this . getType ( ) + _CHAR ; isReadable : _CHAR + this . isReadable ( ) + _CHAR ; isWritable : _CHAR + this . isWritable ( ) + _CHAR ; Descriptor : _CHAR + this . getDescriptor ( ) ; }
42017	public DTMAxisIterator reset ( ) { m_ancestorsPos = m_ancestors . size ( ) - _NUM ; _currentNode = ( m_ancestorsPos >= _NUM ) ? m_ancestors . elementAt ( m_ancestorsPos ) : DTM . NULL ; return resetPosition ( ) ; }
42027	private boolean isClosed ( ) { return buf == _NULL ; }
42034	@ Override public void addServletContainerInitializer ( ServletContainerInitializer sci , Set < Class < ? >> classes ) { initializers . put ( sci , classes ) ; }
42037	public void clear ( ) { elements = _NUM ; }
42039	private void importListeners ( Map < String , EntryListeners > listenersCopy , Schema schema ) { for ( Map . Entry < String , EntryListeners > entry : listenersCopy . entrySet ( ) ) { listeners . put ( DN . valueOf ( entry . getKey ( ) , schema ) , entry . getValue ( ) ) ; } }
42046	public static String toString ( Object value ) { return value != _NULL ? value . toString ( ) : _NULL ; }
42084	public final void println ( ) { if ( ! isQuiet ( ) ) { out . println ( ) ; } }
42095	public boolean satisfiesRequirement ( String version ) { return validator . apply ( version ) ; }
42100	public int count ( ) { return component_list . size ( ) ; }
42113	@ Override public int compare ( File o1 , File o2 ) { if ( o1 == o2 ) { return _NUM ; } if ( o1 . lastModified ( ) > o2 . lastModified ( ) ) { return - _NUM ; } else if ( o1 . lastModified ( ) < o2 . lastModified ( ) ) { return _NUM ; } else { return _NUM ; } }
42131	public static void putLong ( String key , long value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putLong ( key , value ) ; editor . apply ( ) ; }
42135	public boolean isNodesetExpr ( ) { return _BOOL ; }
42170	public static PasswordExpiredResponseControl newControl ( ) { return NONCRITICAL_INSTANCE ; }
42171	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
42183	private void finalizeAdditions ( boolean addHomeScreenShortcuts ) { finalizeWorkFolder ( ) ; if ( addHomeScreenShortcuts && ! mHomescreenApps . isEmpty ( ) ) { mModel . addAndBindAddedWorkspaceItems ( mContext , mHomescreenApps ) ; } }
42188	public void start ( Context context , android . support . v4 . app . Fragment fragment , int requestCode ) { fragment . startActivityForResult ( getIntent ( context ) , requestCode ) ; }
42194	public synchronized void clear ( ) { messageList . clear ( ) ; }
42218	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
42255	public void put ( ByteBuffer byteBuffer , int contentLength ) { if ( contentLength > ( bytes . length - this . contentLength ) ) { throw new IllegalArgumentException ( _CHAR contentLength is too large _CHAR ) ; } byteBuffer . get ( bytes , this . contentLength , contentLength ) ; this . contentLength += contentLength ; }
42294	public void addRuleSet ( ParserRuleSet ruleset ) { imports . add ( ruleset ) ; }
42326	public boolean removePermittedDomain ( String domainName ) { return Lists . remove ( permittedDomains , domainName ) ; }
42340	private boolean isLoggable ( Operation operation ) { return operation . getResultCode ( ) == SUCCESS && isResponseLoggable ( operation ) ; }
42380	public java . io . Serializable read_value ( java . lang . Class clz ) { throw new org . omg . CORBA . NO_IMPLEMENT ( ) ; }
42385	public static void fill ( int [ ] array , int value ) { for ( int i = _NUM ; i < array . length ; i ++ ) { array [ i ] = value ; } }
42394	public boolean argumentsPresent ( ) { if ( argList != _NULL ) { for ( Argument arg : argList ) { if ( arg . isPresent ( ) ) { return _BOOL ; } } } return _BOOL ; }
42403	protected void addURL ( URL url ) { try { originalUrls . add ( url ) ; searchList . add ( createSearchURL ( url ) ) ; } catch ( MalformedURLException e ) { } }
42407	public boolean isExpanded ( ) { return expanded ; }
42428	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
42430	private void addEntry ( Entry entry ) throws Exception { connection . processAdd ( entry ) ; assertNotNull ( getEntry ( entry . getName ( ) , _NUM , _BOOL ) ) ; }
42454	public int hashCode ( ) { return m_hashCode ; }
42472	public void write ( char cbuf [ ] , int off , int len ) throws IOException { se . write ( cbuf , off , len ) ; }
42483	public SAML2ConfigBuilder signatureKeyAlias ( String signatureKeyAlias ) { this . signatureKeyAlias = signatureKeyAlias ; return this ; }
42493	static void checkSupportedControls ( Connection connection ) throws LdapException { controls = RootDSE . readRootDSE ( connection ) . getSupportedControls ( ) ; }
42498	public void addListener ( final TimeoutEventListener listener ) { final long timeout = listener . getTimeout ( ) ; if ( timeout > _NUM ) { listeners . add ( listener ) ; synchronized ( stateLock ) { pendingListenerMinDelay = Math . min ( pendingListenerMinDelay , timeout ) ; stateLock . notifyAll ( ) ; } } }
42499	public boolean isInnerClass ( ) { return outer != _NULL ; }
42508	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
42528	private void badIndex ( int index ) throws ArrayIndexOutOfBoundsException { String msg = _CHAR Attempt to modify attribute at illegal index : _CHAR + index ; throw new ArrayIndexOutOfBoundsException ( msg ) ; }
42563	private void checkIsCorrectClass ( ) { if ( checkIsSubClass ( ACT_NAME ) ) { type = ElementType . ACTTIVITY ; } else if ( checkIsSubClass ( FRAG_NAME ) || checkIsSubClass ( V4_FRAG_NAME ) ) { type = ElementType . FRAGMENT ; } else { throw new IllegalArgumentException ( String . format ( _CHAR class % s must be extends from % s or % s or % s _CHAR , element . getQualifiedName ( ) , ACT_NAME , FRAG_NAME , V4_FRAG_NAME ) ) ; } }
42584	private void appendManagedObjectPathElement ( RelationDefinition < ? , ? > r ) { DN dn = DN . valueOf ( profile . getRelationRDNSequence ( r ) ) ; List < RDN > rdnsOfDn = getRdnsInBigEndianOrder ( dn ) ; rdns . addAll ( rdnsOfDn ) ; }
42618	static MatchingRuleImpl partialDateAndTimeMatchingRule ( ) { return new PartialDateAndTimeMatchingRuleImpl ( ) ; }
42646	public int size ( ) { return hlist . size ( ) ; }
42654	@ Override public int size ( ) { return size ; }
42714	EntryContainer unregisterEntryContainer ( DN baseDN ) { return entryContainers . remove ( baseDN ) ; }
42744	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
42756	boolean containsNonHiddenArguments ( ) { for ( final Argument arg : args ) { if ( ! arg . isHidden ( ) ) { return _BOOL ; } } return _BOOL ; }
42766	public boolean isTrustStoreInMemory ( ) { return state . trustStoreInMemory ; }
42790	public void endElement ( StylesheetHandler handler , String uri , String localName , String rawName ) throws SAXException { ElemTemplateElement function = handler . getElemTemplateElement ( ) ; validate ( function , handler ) ; super . endElement ( handler , uri , localName , rawName ) ; }
42809	protected static void init ( ) { rootSuffix = AMStoreConnection . getAMSdkBaseDN ( ) ; if ( rootSuffix == _NULL || rootSuffix . equals ( _CHAR _CHAR ) ) { debug . error ( _CHAR com . iplanet . am . rootsuffix property value _CHAR + _CHAR should not be _NULL _CHAR ) ; return ; } }
42823	@ SuppressWarnings ( _CHAR unused _CHAR ) public static long parseUnsignedInt ( byte [ ] bytes ) { return parseUnsignedInt ( bytes , _NUM , bytes . length ) ; }
42830	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return _fooLocalService . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
42838	public boolean hasKey ( ) throws SdpParseException { String key = getKeyData ( ) ; return key != _NULL ; }
42854	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) . setNonQualifierBranches ( _CHAR master , int _CHAR ) ; unchecked ( _NULL ) ; }
42872	@ Override public void put ( final int index , final Scriptable start , final Object value ) { }
42873	protected final void assertNotAborted ( ) throws InterruptedIOException { if ( aborted ) { throw new InterruptedIOException ( _CHAR Connection has been shut down . '' ) ; } }
42883	@ Override public boolean containsKey ( Object key ) { if ( key == _NULL ) { key = NULL_OBJECT ; } int index = findIndex ( key , elementData ) ; return elementData [ index ] == key ; }
42890	private final boolean compareAndSetHead ( Node update ) { return unsafe . compareAndSwapObject ( this , headOffset , _NULL , update ) ; }
42916	public void write ( char buf [ ] , int off , int len ) { try { synchronized ( lock ) { ensureOpen ( ) ; out . write ( buf , off , len ) ; } } catch ( InterruptedIOException x ) { Thread . currentThread ( ) . interrupt ( ) ; } catch ( IOException x ) { trouble = _BOOL ; } }
42925	public static boolean isIPv6 ( String ipAddress ) { if ( ipAddress == _NULL || ipAddress . isEmpty ( ) ) { return _BOOL ; } Matcher ipv6Matcher = IP_V6_PATTERN . matcher ( ipAddress ) ; return ipv6Matcher . find ( ) ; }
42933	K highestKey ( ) { Comparator < ? super K > cmp = m . comparator ; ConcurrentSkipListMap . Node < K , V > n = hiNode ( cmp ) ; if ( n != _NULL ) { K last = n . key ; if ( inBounds ( last , cmp ) ) return last ; } throw new NoSuchElementException ( ) ; }
42940	public boolean isRecursive ( ) { return recursive ; }
42966	public net . aimeizi . person . QueryParameter . Builder clearAgeEnd ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
42989	protected Expression number ( int opPos ) throws TransformerException { return compileUnary ( new org . apache . xpath . operations . Number ( ) , opPos ) ; }
43015	private Long convertIntToLong ( int quoteParam ) { Long quoteParamLong = new Long ( convertIntToIntString ( quoteParam ) ) ; return quoteParamLong ; }
43022	public boolean equals ( Object o ) { if ( o instanceof Name ) { Comparator < String > c = ASCIICaseInsensitiveComparator . CASE_INSENSITIVE_ORDER ; return c . compare ( name , ( ( Name ) o ) . name ) == _NUM ; } else { return _BOOL ; } }
43035	private void updateIndexStats ( EntryIDSet entryIDSet ) { if ( ! entryIDSet . isDefined ( ) ) { entryLimitExceededCount ++ ; multiReferenceCount ++ ; } else { if ( entryIDSet . size ( ) > _NUM ) { multiReferenceCount ++ ; } entryReferencesCount += entryIDSet . size ( ) ; maxEntryPerValue = Math . max ( maxEntryPerValue , entryIDSet . size ( ) ) ; } }
43062	public static int resetPostOperationCount ( ) { return postOperationCounter . getAndSet ( _NUM ) ; }
43101	public Builder usage ( AttributeUsage attributeUsage ) { this . attributeUsage = attributeUsage ; return this ; }
43147	public static void fill ( char [ ] array , char value ) { for ( int i = _NUM ; i < array . length ; i ++ ) { array [ i ] = value ; } }
43150	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
43152	String popImportURL ( ) { return ( String ) m_importStack . pop ( ) ; }
43159	private final boolean parkAndCheckInterrupt ( ) { LockSupport . park ( this ) ; return Thread . interrupted ( ) ; }
43193	public String toString ( ) { return _CHAR [ _CHAR + ( space . equals ( mySpace ) ? _CHAR _CHAR : space + _CHAR , _CHAR ) + objNum + _CHAR ] _CHAR ; }
43231	public static boolean allowNewPersistentSearch ( ) { return directoryServer . maxPSearches == - _NUM || directoryServer . activePSearches . get ( ) < directoryServer . maxPSearches ; }
43248	@ Override public void removeClusterListener ( ClusterListener listener ) { if ( listener != _NULL ) { clusterListeners . remove ( listener ) ; listener . setCluster ( _NULL ) ; } }
43263	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
43267	public void closeDriver ( ) { if ( camera != _NULL ) { FlashlightManager . disableFlashlight ( ) ; camera . release ( ) ; camera = _NULL ; } }
43271	public Node . Nodes parse ( String inFileName , Node parent , Jar jar ) throws JasperException , IOException { return doParse ( inFileName , parent , jar ) ; }
43307	private static ByteString createEncodedValue ( BigInteger serial , ByteString issuerDN ) { return new ByteStringBuilder ( ) . appendBytes ( issuerDN ) . appendByte ( _NUM ) . appendBytes ( serial . toByteArray ( ) ) . toByteString ( ) ; }
43317	public static void putInt ( String key , int value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putInt ( key , value ) ; editor . apply ( ) ; }
43326	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setAutoIncrementPatch ( _BOOL ) ; unchecked ( _NULL ) ; }
43332	private void readObject ( java . io . ObjectInputStream p_stream ) throws IOException , ClassNotFoundException { p_stream . defaultReadObject ( ) ; item_color_table = new ItemColorTableModel ( p_stream ) ; other_color_table = new OtherColorTableModel ( p_stream ) ; }
43353	private final boolean compareAndSetHead ( Node update ) { return unsafe . compareAndSwapObject ( this , headOffset , _NULL , update ) ; }
43358	public void clear ( ) { final Segment < K , V > [ ] segments = this . segments ; for ( int j = _NUM ; j < segments . length ; ++ j ) { Segment < K , V > s = segmentAt ( segments , j ) ; if ( s != _NULL ) s . clear ( ) ; } }
43360	protected JButton createIncreaseButton ( int orientation ) { increaseButton = new MetalScrollButton ( orientation , scrollBarWidth , isFreeStanding ) ; return increaseButton ; }
43368	public void activate ( ) { this . diagnosticsProcessor = new DiagnosticsProcessor ( config ) ; this . isRunning . set ( _BOOL ) ; initMXBean ( ) ; }
43395	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
43409	protected void didAdjustTree ( ) { }
43421	protected void modifyFlags ( ) { String str = getIdentifier ( ) ; if ( ID3v24Frames . getInstanceOf ( ) . isDiscardIfFileAltered ( str ) ) { writeFlags |= ( byte ) MASK_FILE_ALTER_PRESERVATION ; writeFlags & = ( byte ) ~ MASK_TAG_ALTER_PRESERVATION ; } else { writeFlags & = ( byte ) ~ MASK_FILE_ALTER_PRESERVATION ; writeFlags & = ( byte ) ~ MASK_TAG_ALTER_PRESERVATION ; } }
43423	public void editingStopped ( ChangeEvent e ) { getHandler ( ) . editingStopped ( e ) ; }
43425	public void popCurrentMatched ( ) { m_currentMatchTemplates . pop ( ) ; m_currentMatchedNodes . pop ( ) ; }
43446	public MaterialBarcodeScannerBuilder withBackfacingCamera ( ) { mFacing = CameraSource . CAMERA_FACING_BACK ; return this ; }
43461	public boolean validate ( String value ) { try { Float . parseFloat ( value ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
43497	@ Override public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ attribute = _CHAR + myAttribute + _CHAR , field = _CHAR + myField + _CHAR , beginIndex = _CHAR + beginIndex + _CHAR , endIndex = _CHAR + endIndex + _CHAR ] _CHAR ; }
43516	private boolean isServerRunning ( ) { return Installation . getLocal ( ) . getStatus ( ) . isServerRunning ( ) ; }
43532	private ConditionResult containsReferrals ( ReadableTransaction txn ) { try ( Cursor < ? , ? > cursor = txn . openCursor ( getName ( ) ) ) { return ConditionResult . valueOf ( cursor . next ( ) ) ; } catch ( Exception e ) { logger . traceException ( e ) ; return ConditionResult . UNDEFINED ; } }
43551	public List < Long > generateAndWrite ( ) throws FileNotFoundException , UnsupportedEncodingException { List < Long > toReturn = generateBuckets ( ) ; writeResults ( toReturn ) ; return toReturn ; }
43585	public int lastIndexOf ( Object obj ) { return this . hlist . lastIndexOf ( obj ) ; }
43586	public < M extends Configuration > void deregisterAddListener ( OptionalRelationDefinition < ? , M > d , ServerManagedObjectAddListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) . parent ( ) ; deregisterAddListener ( baseDN , listener ) ; }
43592	private void enableSSL ( ConnectionSecurityProvider sslProvider ) { tlsActiveProvider = sslProvider ; tlsChannel . redirect ( sslProvider ) ; }
43620	public boolean beginContentStaticTextHeaderDisplay ( ChildDisplayEvent event ) { return ( ( TextHeaderVal != _NULL ) && ( TextHeaderVal . length ( ) > _NUM ) ) ; }
43623	public static Remote toStub ( Remote obj ) throws NoSuchObjectException { if ( proDelegate != _NULL ) { return proDelegate . toStub ( obj ) ; } return _NULL ; }
43661	@ Override public void addSessionListener ( SessionListener listener ) { listeners . add ( listener ) ; }
43663	public ListBuffer < A > appendList ( final ListBuffer < A > xs ) { return appendList ( xs . toList ( ) ) ; }
43696	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { if ( getPrimaryModel ( ) == _NULL ) { throw new ModelControlException ( _CHAR Primary model is _NULL _CHAR ) ; } if ( buttons != _NULL ) { getPrimaryModel ( ) . setSize ( buttons . length ) ; } else { getPrimaryModel ( ) . setSize ( _NUM ) ; } super . beginDisplay ( event ) ; resetTileIndex ( ) ; }
43722	public final void pushNamespaceContext ( PrefixResolver pr ) { m_prefixResolvers . push ( pr ) ; }
43724	public void deleteAssignableDynamicGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMAssignableDynamicGroup group = new AMAssignableDynamicGroupImpl ( token , groupDN ) ; group . delete ( ) ; } }
43727	public SignatureVisitor visitArrayType ( ) { return this ; }
43737	public void write_value ( java . io . Serializable value , org . omg . CORBA . portable . BoxedValueHelper factory ) { throw new org . omg . CORBA . NO_IMPLEMENT ( ) ; }
43749	public static boolean contains ( @ NonNull String key ) { failIfNotInitialized ( ) ; try { return mCache . contains ( key ) ; } catch ( Exception e ) { return _BOOL ; } }
43783	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case MENU_SETTINGS_ID : startActivity ( new Intent ( this , ActivitySettings . class ) ) ; return _BOOL ; case MENU_ABOUT_ID : showAbout ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
43789	public boolean isField ( ) { return memberNode == _NULL ? _BOOL : memberNode instanceof FieldNode ; }
43803	public int rtf ( ) { return m_dtmRoot ; }
43820	public void recycle ( ) { jspConfig . isJspConfigSet = _BOOL ; sessionConfig . isSessionConfigSet = _BOOL ; loginConfig . isLoginConfigSet = _BOOL ; name . isNameSet = _BOOL ; absoluteOrdering . isAbsoluteOrderingSet = _BOOL ; relativeOrdering . isRelativeOrderingSet = _BOOL ; }
43824	public static String formatDate ( Date d ) { if ( d == _NULL ) { return _CHAR _CHAR ; } return new SimpleDateFormat ( DATE_FORMAT ) . format ( d ) ; }
43883	public int bytesCount ( ) { synchronized ( lock ) { return bytesCount ; } }
43904	public static boolean isLowSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
43956	public static SubjectType fromString ( String type ) { if ( type != _NULL ) { for ( SubjectType subjectType : SubjectType . values ( ) ) { if ( type . equalsIgnoreCase ( subjectType . type ) ) { return subjectType ; } } } return _NULL ; }
43966	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; camera . autoFocus ( autoFocusCallback ) ; } }
43971	public PlaSegmentInt opposite ( ) { return new PlaSegmentInt ( end . opposite ( ) , middle . opposite ( ) , start . opposite ( ) ) ; }
43972	public PdfCanvas newPath ( ) { contentStream . getOutputStream ( ) . writeBytes ( n ) ; return this ; }
43979	private static int read ( InputStream input ) throws IOException { int value = input . read ( ) ; if ( - _NUM == value ) { throw new EOFException ( _CHAR Unexpected EOF reached _CHAR ) ; } return value ; }
43983	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case MENU_HELP : help ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
44000	public int indexOf ( PdfObject o ) { if ( o == _NULL ) return list . indexOf ( _NULL ) ; int index = _NUM ; for ( PdfObject pdfObject : this ) { if ( PdfObject . equalContent ( o , pdfObject ) ) { return index ; } index ++ ; } return - _NUM ; }
44006	private Level errorLoggerSeverityToJulLevel ( Severity severity ) { switch ( severity ) { case DEBUG : case INFORMATION : case NOTICE : return Level . INFO ; case WARNING : return Level . WARNING ; case ERROR : return Level . SEVERE ; default : return Level . OFF ; } }
44020	public AnnotationVisitor visitParameterAnnotation ( int parameter , String desc , boolean visible ) { if ( mv != _NULL ) { return mv . visitParameterAnnotation ( parameter , desc , visible ) ; } return _NULL ; }
44047	public boolean isInside ( Pnt [ ] simplex ) { int [ ] result = this . relation ( simplex ) ; for ( int r : result ) if ( r >= _NUM ) return _BOOL ; return _BOOL ; }
44078	public void accept ( final ClassVisitor cv ) { String [ ] exceptions = new String [ this . exceptions . size ( ) ] ; this . exceptions . toArray ( exceptions ) ; MethodVisitor mv = cv . visitMethod ( access , name , desc , signature , exceptions ) ; if ( mv != _NULL ) { accept ( mv ) ; } }
44084	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
44109	public boolean hasResourceField ( ) { return resourcesField != _NULL ; }
44119	public boolean removeRestrictedDomain ( String domainName ) { return Lists . remove ( restrictedDomains , domainName ) ; }
44127	public static String generateAssertionID ( ) { return generateID ( ) ; }
44131	public ByteArrayBuilder appendStrings ( Collection < String > col ) { appendByte ( col . size ( ) ) ; for ( String s : col ) { appendString ( s ) ; } return this ; }
44153	public static void fill ( byte [ ] array , byte value ) { for ( int i = _NUM ; i < array . length ; i ++ ) { array [ i ] = value ; } }
44181	@ Override @ Deprecated public List < Runnable > shutdownNow ( ) { throw new UnsupportedOperationException ( ) ; }
44202	public static void main ( String argv [ ] ) { System . out . println ( getVersion ( ) ) ; }
44208	public void addTemplateLine ( TemplateLine line ) { TemplateLine [ ] newTemplateLines = new TemplateLine [ templateLines . length + _NUM ] ; System . arraycopy ( templateLines , _NUM , newTemplateLines , _NUM , templateLines . length ) ; newTemplateLines [ templateLines . length ] = line ; templateLines = newTemplateLines ; }
44235	public RESTEndpointBuilder header ( String header , String value ) { headers . put ( header , value ) ; return this ; }
44247	@ Override public Foo fetchFooByUuidAndGroupId ( String uuid , long groupId ) { return fooPersistence . fetchByUUID_G ( uuid , groupId ) ; }
44255	protected void fill ( ) throws IOException { ensureOpen ( ) ; len = in . read ( buf , _NUM , buf . length ) ; if ( len == - _NUM ) { throw new EOFException ( _CHAR Unexpected end of ZLIB input stream _CHAR ) ; } inf . setInput ( buf , _NUM , len ) ; }
44269	public int length ( ) { return count ; }
44289	public JsonObject addLast ( Object value ) { add ( value ) ; return build ( ) ; }
44299	public void componentShown ( ComponentEvent e ) { }
44302	public static void removeConstraint ( Constraint constraint ) { TestChildCfgDefn . getInstance ( ) . deregisterConstraint ( constraint ) ; }
44328	private boolean isJwtValid ( SignedJwt jwt , ClientRegistration clientRegistration ) { final SigningHandler signingHandler = signingManager . newHmacSigningHandler ( clientRegistration . getClientSecret ( ) . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ) ; return jwt == _NULL || ! jwt . verify ( signingHandler ) ; }
44363	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
44366	private void validateChrono ( TemporalAccessor temporal ) { Objects . requireNonNull ( temporal , _CHAR temporal _CHAR ) ; Chronology temporalChrono = temporal . query ( TemporalQueries . chronology ( ) ) ; if ( temporalChrono != _NULL && IsoChronology . INSTANCE . equals ( temporalChrono ) == _BOOL ) { throw new DateTimeException ( _CHAR Chronology mismatch , expected : ISO , actual : _CHAR + temporalChrono . getId ( ) ) ; } }
44367	public int length ( ) { return values . size ( ) ; }
44378	public static boolean isInvalid ( int c ) { return ! isValid ( c ) ; }
44381	private void determineSuperclasses ( ) { superclasses = new TIntHashSet ( _NUM ) ; Classfile clazz = this ; while ( clazz != _NULL ) { ClassInfo superInfo = clazz . getSuperclassInfo ( ) ; if ( superInfo != _NULL ) superclasses . add ( superInfo . getName ( ) . getID ( ) ) ; clazz = clazz . getSuperclass ( ) ; } superclasses . trimToSize ( ) ; }
44411	public static boolean isIPv4 ( String ipAddress ) { if ( ipAddress == _NULL || ipAddress . isEmpty ( ) ) { return _BOOL ; } Matcher ipv4Matcher = IP_V4_PATTERN . matcher ( ipAddress ) ; return ipv4Matcher . find ( ) ; }
44420	@ Override public boolean isValidToken ( SSOToken token , boolean refresh ) { SSOTokenImpl tokenImpl = ( SSOTokenImpl ) token ; return ( tokenImpl . isValid ( refresh ) ) ; }
44421	private static void executeOnRootDSE ( Operation operation , LocalBackendWorkflowElement workflow ) throws CanceledOperationException { OperationType operationType = operation . getOperationType ( ) ; if ( operationType == OperationType . SEARCH ) { executeSearch ( ( SearchOperation ) operation , workflow ) ; } else { workflow . execute ( operation ) ; } }
44441	public static JsonValue content ( final Object object ) { return json ( object ) ; }
44457	private static String makeKeyFromRecord ( ConnectionRecord rec ) { ConnectionWrapper conn = rec . conn . getConnectionWrapper ( ) ; return ( conn . isLdaps ( ) ? _CHAR LDAPS _CHAR : _CHAR LDAP _CHAR ) + _CHAR : _CHAR + conn . getHostPort ( ) ; }
44462	@ Advice . OnMethodExit public static void exit ( ) { ConnectorImpl . cassandraSetupComplete ( ) ; }
44468	public void translate ( int x , int y ) { if ( debugLog ( ) ) { info ( ) . log ( toShortString ( ) + _CHAR Translating by : _CHAR + new Point ( x , y ) ) ; } xOffset += x ; yOffset += y ; graphics . translate ( x , y ) ; }
44476	public String versionFull ( ) { return versionFull ; }
44508	public SessionMonitoringTimingStore createSessionMonitoringTimingStore ( ) { return InjectorHolder . getInstance ( SessionMonitoringTimingStore . class ) ; }
44528	public static GetSymmetricKeyExtendedRequest newRequest ( ) { return new GetSymmetricKeyExtendedRequest ( ) ; }
44531	public boolean isForceAuth ( ) { return forceAuth ; }
44552	public static int findFreePort ( ) throws IOException { return findFreePorts ( _NUM ) [ _NUM ] ; }
44554	protected int checkTimeDay ( ) { return _NUM ; }
44571	public static < T > LinkedHashSet < T > asOrderedSet ( T ... values ) { if ( values == _NULL ) { return new LinkedHashSet < T > ( _NUM ) ; } else { return new LinkedHashSet < T > ( Arrays . asList ( values ) ) ; } }
44575	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
44590	public void flush ( ) { LinkedList < Runnable > queue = new LinkedList < > ( ) ; synchronized ( mQueue ) { queue . addAll ( mQueue ) ; mQueue . clear ( ) ; } for ( Runnable r : queue ) { r . run ( ) ; } }
44595	public void store ( ) { try { amIdentity . store ( ) ; } catch ( IdRepoException e ) { LOGGER . warn ( _CHAR Exception persisting attribute _CHAR , e ) ; } catch ( SSOException e ) { LOGGER . warn ( _CHAR Exception persisting attribute _CHAR , e ) ; } }
44644	@ Override public String toString ( ) { String condition = acceptOlder ? _CHAR <= _CHAR : _CHAR > _CHAR ; return super . toString ( ) + _CHAR ( _CHAR + condition + cutoff + _CHAR ) _CHAR ; }
44656	public static AztecCode encode ( byte [ ] data ) { return encode ( data , DEFAULT_EC_PERCENT , DEFAULT_AZTEC_LAYERS ) ; }
44665	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) ; }
44672	public ListBuffer < A > appendList ( ImmutableList < A > xs ) { while ( xs . nonEmpty ( ) ) { append ( xs . head ) ; xs = xs . tail ; } return this ; }
44705	public static MatchingResourcePath resourcePath ( String path ) { return new MatchingResourcePath ( ResourcePath . resourcePath ( path ) ) ; }
44761	public java . io . Serializable read_value ( ) { throw new org . omg . CORBA . NO_IMPLEMENT ( ) ; }
44774	public SAML2ConfigBuilder signAssertion ( boolean signAssertion ) { this . signAssertion = signAssertion ; return this ; }
44810	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) ; unchecked ( _NULL ) ; }
44817	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) ; unchecked ( _NULL ) ; }
44826	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; camera . autoFocus ( autoFocusCallback ) ; } }
44833	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return _fooLocalService . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
44853	public boolean isReplicationServer ( ) { return Boolean . TRUE . equals ( serverProperties . get ( ServerProperty . IS_REPLICATION_SERVER ) ) ; }
44861	public boolean isEmpty ( ) { return table . isEmpty ( ) ; }
44876	@ Override public String toString ( ) { return toLDIFString ( ) ; }
44877	public Collection < ResourceSetDescription > filterPolicies ( Set < ResourceSetDescription > resourceSets , ResourceSetWithPolicyQuery query ) { Collection < ResourceSetDescription > filteredResourceSets = new HashSet < > ( ) ; filteredResourceSets . addAll ( query . getResourceSetQuery ( ) . accept ( RESOURCE_SET_QUERY_EVALUATOR , resourceSets ) ) ; return filteredResourceSets ; }
44900	@ Deprecated public static boolean isRunning ( ) { return DirectoryServer . isRunning ( ) ; }
44907	public final static AudioClip newAudioClip ( URL url ) { return new sun . applet . AppletAudioClip ( url ) ; }
44942	public void createEmptyDB ( SQLiteDatabase db ) { db . execSQL ( _CHAR DROP TABLE IF EXISTS _CHAR + TABLE_FAVORITES ) ; db . execSQL ( _CHAR DROP TABLE IF EXISTS _CHAR + TABLE_WORKSPACE_SCREENS ) ; onCreate ( db ) ; }
44963	public static boolean checkIfFileIsHidden ( final String fileName , final IConfiguration conf ) { return Pattern . compile ( getHiddenFileOrFolderRegex ( conf . getHiddenFiles ( ) ) ) . matcher ( fileName ) . matches ( ) ; }
44964	private void assertNormalisation ( String untreatedResource , String treatedResource ) { try { assertThat ( resourceName . canonicalize ( untreatedResource ) ) . isEqualTo ( treatedResource ) ; } catch ( Exception e ) { String message = _CHAR Normalisation failed : _CHAR + e . getMessage ( ) ; throw ComparisonFailureFactory . comparisonFailure ( message , treatedResource , _CHAR _CHAR ) ; } }
44988	public static boolean isThirdPartyRequest ( String requestUrl , String referrer ) { String domainName = getSecondLevelDomainName ( requestUrl ) ; String refDomainName = getSecondLevelDomainName ( referrer ) ; return referrer != _NULL && ! StringUtils . equals ( domainName , refDomainName ) ; }
45001	@ Override public void removeInitParameter ( String name ) { parametersLock . writeLock ( ) . lock ( ) ; try { parameters . remove ( name ) ; } finally { parametersLock . writeLock ( ) . unlock ( ) ; } fireContainerEvent ( _CHAR removeInitParameter _CHAR , name ) ; }
45018	public void handleButton3Request ( RequestInvocationEvent event ) { super . handleButton2Request ( event ) ; }
45030	public static void sort ( long [ ] a ) { doSort ( a , _NUM , a . length - _NUM ) ; }
45031	public static void sort ( float [ ] array ) { DualPivotQuicksort . sort ( array ) ; }
45076	public String toString ( ) { return _CHAR LDAPModificationSet : _CHAR + modifications . toString ( ) ; }
45083	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
45085	boolean isMulticastSocket ( ) { return _BOOL ; }
45094	public static void putString ( String key , String value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putString ( key , value ) ; editor . apply ( ) ; }
45101	private final boolean compareAndSetTail ( Node expect , Node update ) { return unsafe . compareAndSwapObject ( this , tailOffset , expect , update ) ; }
45133	public void endElement ( StylesheetHandler handler , String uri , String localName , String rawName ) throws org . xml . sax . SAXException { startNonText ( handler ) ; handler . getCurrentProcessor ( ) . endElement ( handler , uri , localName , rawName ) ; handler . popProcessor ( ) ; }
45137	private ClusterMonitor resolveClusterMonitor ( ) throws Exception { if ( isPartOfCluster ( ) ) { return new MultiServerClusterMonitor ( InjectorHolder . getInstance ( ForeignSessionHandler . class ) , sessionDebug , serviceConfig , serverConfig ) ; } else { return new SingleServerClusterMonitor ( ) ; } }
45145	private boolean isPlaceholder ( int index , char aChar ) { return ( getPlaceholderCharacter ( ) == aChar ) ; }
45155	public int length ( ) { return bytes . length ; }
45197	public boolean offer ( E e ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { q . offer ( e ) ; if ( q . peek ( ) == e ) { leader = _NULL ; available . signal ( ) ; } return _BOOL ; } finally { lock . unlock ( ) ; } }
45199	@ Override public void javacError ( String errorReport , Exception exception ) throws JasperException { throw new JasperException ( Localizer . getMessage ( _CHAR jsp . error . unable . compile _CHAR ) , exception ) ; }
45204	public void visitIntInsn ( int opcode , int operand ) { if ( mv != _NULL ) { mv . visitIntInsn ( opcode , operand ) ; } }
45230	@ Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException , ServletException { serveResource ( request , response , _BOOL , fileEncoding ) ; }
45242	private void raiseIOException ( String host , int port , String protocol ) { IOExceptionEvent ioError = new IOExceptionEvent ( this , host , port , protocol ) ; sipProvider . handleEvent ( ioError , _NULL ) ; setState ( SIPDialog . TERMINATED_STATE ) ; }
45258	@ Override public void removeSessionListener ( SessionListener listener ) { listeners . remove ( listener ) ; }
45328	private static byte [ ] serializeDocument ( Node n ) throws IOException { XmlDomWriter xw = new XmlDomWriter ( ) ; ByteArrayOutputStream fout = new ByteArrayOutputStream ( ) ; xw . setOutput ( fout , _NULL ) ; xw . setCanonical ( _BOOL ) ; xw . write ( n ) ; fout . close ( ) ; return fout . toByteArray ( ) ; }
45333	public boolean equals ( Object obj ) { if ( ! super . equals ( obj ) ) { return _BOOL ; } if ( obj . getClass ( ) != getClass ( ) ) { return _BOOL ; } return _BOOL ; }
45338	public boolean isTsp ( ) { return isTsp ; }
45348	private void safeSetFeature ( DocumentBuilderFactory factory , String feature , boolean flag ) { try { factory . setFeature ( feature , flag ) ; } catch ( ParserConfigurationException e ) { if ( logFeatureWarnings . compareAndSet ( _BOOL , _BOOL ) ) { Logger . getLogger ( PKG_NAME ) . log ( Level . SEVERE , _CHAR DocumentBuilderFactory unsupported feature _CHAR + feature ) ; } } }
45372	public void delete ( String privilegeName ) throws EntitlementException { delete ( privilegeName , _BOOL ) ; }
45382	private void initialize ( ) { final BluetoothManager bluetoothManager = ( BluetoothManager ) getSystemService ( BLUETOOTH_SERVICE ) ; mAdapter = bluetoothManager . getAdapter ( ) ; }
45410	public static long unsignedByteToLong ( byte b ) { return b & _NUM ; }
45453	public void reset ( ) { super . reset ( ) ; H1 = _NUM ; H2 = _NUM ; H3 = _NUM ; H4 = _NUM ; xOff = _NUM ; for ( int i = _NUM ; i != X . length ; i ++ ) { X [ i ] = _NUM ; } }
45460	protected < R > Handler < AsyncResult < SQLConnection >> connHandler ( Handler < AsyncResult < R >> h1 , Handler < SQLConnection > h2 ) { return _NULL ; }
45481	public int hashCode ( ) { return getName ( ) . hashCode ( ) ; }
45500	public int hashCode ( ) { return p . hashCode ( ) ; }
45509	@ Override protected void handleIOException ( IOException e ) throws IOException { throw new TaggedIOException ( e , tag ) ; }
45515	public Location zero ( ) { x = _NUM ; y = _NUM ; z = _NUM ; return this ; }
45531	protected Expression bool ( int opPos ) throws TransformerException { return compileUnary ( new org . apache . xpath . operations . Bool ( ) , opPos ) ; }
45532	public int rtf ( XPathContext support ) { return DTM . NULL ; }
45578	private Long convertIntToLong ( int quoteParam ) { Long quoteParamLong = new Long ( convertIntToIntString ( quoteParam ) ) ; return quoteParamLong ; }
45590	public void seekToPosition ( final long filePosition ) throws ChangelogException { try { reader . seek ( filePosition ) ; } catch ( IOException e ) { throw new ChangelogException ( ERR_CHANGELOG_UNABLE_TO_SEEK . get ( filePosition , file . getPath ( ) ) , e ) ; } }
45593	public final boolean contains ( String key ) { for ( int i = _NUM ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] . equals ( key ) ) return _BOOL ; } return _BOOL ; }
45610	public static IntegerArgument jmxPortArgument ( final int defaultJMXPort ) throws ArgumentException { return IntegerArgument . builder ( _CHAR jmxPort _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_SKIPPORT . get ( ) ) . range ( _NUM , _NUM ) . defaultValue ( defaultJMXPort ) . valuePlaceholder ( INFO_JMXPORT_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
45617	public boolean renameFile ( File oldFile , File newFile ) { synchronized ( fileCache ) { if ( oldFile . renameTo ( newFile ) ) { validateFileCache ( ) ; return _BOOL ; } return _BOOL ; } }
45624	protected ByteVector write ( final ClassWriter cw , final byte [ ] code , final int len , final int maxStack , final int maxLocals ) { ByteVector v = new ByteVector ( ) ; v . data = value ; v . length = value . length ; return v ; }
45626	public void characters ( StylesheetHandler handler , char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { handler . error ( XSLTErrorResources . ER_CHARS_NOT_ALLOWED , _NULL , _NULL ) ; }
45662	private void resetMnemonics ( ) { if ( mnemonicToIndexMap != _NULL ) { mnemonicToIndexMap . clear ( ) ; mnemonicInputMap . clear ( ) ; } }
45689	public static boolean isValidCharacterValue ( int c ) { return ( c == _NUM || c == _NUM || c == _NUM || c >= _NUM && c <= _NUM || c >= _NUM && c <= _NUM || c >= _NUM && c <= _NUM ) ; }
45701	@ DataProvider ( name = _CHAR validStatements _CHAR ) public Object [ ] [ ] valids ( ) { return new Object [ ] [ ] { { _CHAR _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR * _CHAR } } ; }
45702	public void close ( ) throws java . io . IOException { source . close ( ) ; getBufferStart =- _NUM ; getBufferEnd =- _NUM ; }
45713	public boolean contains ( int s ) { runTo ( - _NUM ) ; return super . contains ( s ) ; }
45723	public void clear ( ) { int max = bits . length ; for ( int i = _NUM ; i < max ; i ++ ) { bits [ i ] = _NUM ; } }
45733	static HijrahDate ofEpochDay ( HijrahChronology chrono , long epochDay ) { return new HijrahDate ( chrono , epochDay ) ; }
45749	private void runDetectChildren ( ) throws SearchAbandonException , LdapException { if ( controller . isShowContainerOnly ( ) || ! isNumSubOrdinatesUsable ( ) ) { runDetectChildrenManually ( ) ; } else { SearchResultEntry entry = getDisplayedEntry ( ) ; isLeafNode = ! BrowserController . getHasSubOrdinates ( entry ) ; } }
45782	public int size ( ) { return size ; }
45793	public boolean isSecureProcessing ( ) { return m_isSecureProcessing ; }
45815	public void deleteField ( FieldKey genericKey ) { switch ( genericKey ) { case ARTIST : setArtist ( _CHAR _CHAR ) ; break ; case ALBUM : setAlbum ( _CHAR _CHAR ) ; break ; case TITLE : setTitle ( _CHAR _CHAR ) ; break ; case GENRE : setGenre ( _CHAR _CHAR ) ; break ; case YEAR : setYear ( _CHAR _CHAR ) ; break ; case COMMENT : setComment ( _CHAR _CHAR ) ; break ; } }
45825	public static String buildTimeString ( int year , int month , int day , int hour , int minute , int second ) { return String . format ( _CHAR % _NUM - % _NUM - % _NUM % _NUM : % _NUM : % _NUM _CHAR , year , month , day , hour , minute , second ) ; }
45842	void copyArea ( JComponent c , Graphics g , int x , int y , int w , int h , int deltaX , int deltaY , boolean clip ) { getPaintManager ( ) . copyArea ( c , g , x , y , w , h , deltaX , deltaY , clip ) ; }
45864	public final void applySetting ( DocumentBuilderFactory factory ) throws DOMTestIncompatibleException { strategy . applySetting ( factory , value ) ; }
45874	public boolean startCellEditing ( EventObject anEvent ) { return _BOOL ; }
45882	public boolean isRetransmission ( ) { return isRetransmission ; }
45890	@ Override public void writeNewStateDescription ( ParcelFileDescriptor newState ) { writeJournal ( newState , getCurrentStateJournal ( ) ) ; }
45924	public ListIterator < HDR > listIterator ( int position ) { return hlist . listIterator ( position ) ; }
45927	public GuiResources newGuiResources ( String bundle_key ) { return new GuiResources ( stat , bundle_key ) ; }
45936	public String nextChoiceValueIdentifier ( ) throws GSERException { if ( ! hasNext ( GSER_CHOICE_IDENTIFIER ) ) { LocalizableMessage msg = ERR_GSER_NO_VALID_IDENTIFIEDCHOICE . get ( gserValue . substring ( pos , length ) ) ; throw new GSERException ( msg ) ; } String identifier = next ( GSER_CHOICE_IDENTIFIER ) ; return identifier . substring ( _NUM , identifier . length ( ) - _NUM ) ; }
45939	public void removeSubSchema ( String subSchemaName ) throws SSOException , SMSException { SMSEntry . validateToken ( ssm . getSSOToken ( ) ) ; removeChildNode ( SMSUtils . SUB_SCHEMA , subSchemaName ) ; }
45959	public int computeStringWidth ( SynthContext ss , Font font , FontMetrics metrics , String text ) { return SwingUtilities2 . stringWidth ( ss . getComponent ( ) , metrics , text ) ; }
45973	public static < A , B > Pair < A , B > create ( A a , B b ) { return new Pair < A , B > ( a , b ) ; }
45984	@ Override public void write ( int b ) throws IOException { buffer . append ( ( byte ) b ) ; }
45996	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
46000	public Entry readEntry ( ) throws IOException , LDIFException { return readEntry ( importConfig . validateSchema ( ) ) ; }
46008	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { if ( ! m_shouldProcess ) return ; getCurrentProcessor ( ) . ignorableWhitespace ( this , ch , start , length ) ; }
46019	public ManageNameIDResponse createManageNameIDResponse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_RESPONSE ) ; if ( obj == _NULL ) { return new ManageNameIDResponseImpl ( ) ; } else { return ( ManageNameIDResponse ) obj ; } }
46032	public static void unregisterAll ( Listener listener ) { synchronized ( allLists ) { for ( HandlerList h : allLists ) { h . unregister ( listener ) ; } } }
46051	protected void halt ( ) { }
46063	private static void reverseRange ( Object [ ] a , int lo , int hi ) { hi -- ; while ( lo < hi ) { Object t = a [ lo ] ; a [ lo ++ ] = a [ hi ] ; a [ hi -- ] = t ; } }
46078	public Observable < Product > retrieveProductObservable ( String productId ) { io . vertx . rx . java . ObservableFuture < Product > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrieveProduct ( productId , resultHandler . toHandler ( ) ) ; return resultHandler ; }
46080	public PdfPage addNewPage ( int index ) { return addNewPage ( index , getDefaultPageSize ( ) ) ; }
46098	public boolean hasDefaultSetting ( String clientType ) { return clientCapDataExtInstance . isClientPresent ( clientType ) && clientCapDataIntInstance . isClientPresent ( clientType ) ; }
46111	@ Override public String toString ( ) { return super . toString ( ) + _CHAR ( _CHAR + filter . toString ( ) + _CHAR ) _CHAR ; }
46124	public static boolean isMainDisplayInLandscape ( Context context ) { int rotation = DisplayManagerCompat . getInstance ( context ) . getDisplay ( _NUM ) . getRotation ( ) ; return rotation == Surface . ROTATION_90 || rotation == Surface . ROTATION_270 ; }
46128	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
46149	public SAML2ConfigBuilder signatureKeyPassword ( byte [ ] signatureKeyPassword ) { this . signatureKeyPassword = signatureKeyPassword ; return this ; }
46163	public CombinatorialNameGenerator build ( final boolean usesMiddles ) throws IllegalStateException { checkState ( usesMiddles ) ; return new CombinatorialNameGenerator ( this , usesMiddles ) ; }
46205	@ Override public String toString ( ) { return _CHAR RS id : _CHAR + rsServerId + _CHAR ; RS URL : _CHAR + rsServerURL + _CHAR ; Generation id : _CHAR + generationId + _CHAR ; Group id : _CHAR + groupId + _CHAR ; Weight : _CHAR + weight ; }
46213	public void handleButton3Request ( RequestInvocationEvent event ) { super . handleButton2Request ( event ) ; }
46223	@ Override public void clear ( ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR resourceSet . locked _CHAR ) ) ; super . clear ( ) ; }
46229	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
46247	public synchronized void startGrabbing ( ) { if ( ( flags & DONEBITS ) != _NUM ) { return ; } if ( ! grabbing ) { grabbing = _BOOL ; flags & =~ ( ImageObserver . ABORT ) ; producer . startProduction ( this ) ; } }
46256	int peekChar ( ) { return peekChar ( _NUM ) ; }
46288	public final boolean contains ( int s ) { for ( int i = _NUM ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] == s ) return _BOOL ; } return _BOOL ; }
46289	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
46332	private void addAttachment ( File attachmentFile ) throws MessagingException { MimeBodyPart attachment = new MimeBodyPart ( ) ; FileDataSource dataSource = new FileDataSource ( attachmentFile ) ; attachment . setDataHandler ( new DataHandler ( dataSource ) ) ; attachment . setFileName ( attachmentFile . getName ( ) ) ; attachments . add ( attachment ) ; }
46334	public String toLDAPDate ( Calendar calendar ) { return GeneralizedTime . valueOf ( calendar ) . toString ( ) ; }
46385	public LoginConfiguration httpResponse ( HttpServletResponse httpResponse ) { this . httpResponse = httpResponse ; return this ; }
46386	public static IOFileFilter or ( IOFileFilter ... filters ) { return new OrFileFilter ( toList ( filters ) ) ; }
46399	public boolean hasAttribute ( AttributeType attributeType , boolean includeSubordinates ) { return hasAttribute ( AttributeDescription . create ( attributeType ) , includeSubordinates ) ; }
46402	public int pkg_count ( ) { return package_list . size ( ) ; }
46417	public Class < ? > returnType ( ) { return rtype ; }
46426	public void putNameAndTypeDef ( STypeDef type , LineCol lineCol ) throws SyntaxException { if ( types . containsKey ( type . fullName ( ) ) ) { err . SyntaxException ( _CHAR duplicate type names _CHAR + type . fullName ( ) , lineCol ) ; } else { types . put ( type . fullName ( ) , type ) ; } }
46438	public boolean export_specctra_session_file ( String p_design_name , OutputStream p_output_stream ) { if ( board_is_read_only ) return _BOOL ; SpectraWriteSesFile writer = new SpectraWriteSesFile ( stat , r_board , p_output_stream ) ; return writer . write ( p_design_name ) ; }
46458	public Builder addFormDataPart ( String name , String filename , RequestBody body ) { return addPart ( Part . createFormData ( name , filename , body ) ) ; }
46486	public static void read ( BoardFrame p_board_frame , IteraBoard p_board_handling , InputStream p_input_stream ) throws IOException { GuiConfigScanner scanner = new GuiConfigScanner ( new InputStreamReader ( p_input_stream ) ) ; GuiConfigFile config_file = new GuiConfigFile ( p_board_frame , p_board_handling , scanner , _NULL ) ; config_file . read_defaults_scope ( ) ; }
46497	private String readInputUntil ( char symbol ) { String s = _CHAR _CHAR ; while ( ! accept ( symbol ) ) { s += ( char ) data [ index ] ; skip ( ) ; } return s ; }
46508	public int count ( ) { synchronized ( lock ) { return map . size ( ) ; } }
46548	public Object clone ( ) { DSAMERole theClone = _NULL ; try { theClone = ( DSAMERole ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( subjectRoles != _NULL ) { theClone . subjectRoles = new HashSet ( ) ; theClone . subjectRoles . addAll ( subjectRoles ) ; } return theClone ; }
46571	@ Override public boolean isOpen ( ) { return sc . isOpen ( ) ; }
46591	public static boolean hasBinarySyntax ( String attrName , Schema schema ) { return attrName . toLowerCase ( ) . contains ( _CHAR ; binary _CHAR ) || hasAnySyntax ( attrName , schema , binarySyntaxOIDs ) ; }
46603	@ Override public void removePropertyChangeListener ( PropertyChangeListener listener ) { support . removePropertyChangeListener ( listener ) ; }
46635	public int size ( ) { return count . get ( ) ; }
46642	private void createEntry ( AddRequest request ) throws ADSContextException { try { throwIfNotSuccess ( getConnection ( ) . getConnection ( ) . add ( request ) ) ; } catch ( LdapException e ) { throw new ADSContextException ( ErrorType . ERROR_UNEXPECTED , e ) ; } }
46652	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
46656	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
46661	public static StringArgument skippedImportFileArgument ( ) throws ArgumentException { return StringArgument . builder ( _CHAR skipFile _CHAR ) . description ( INFO_GENERAL_DESCRIPTION_SKIPPED_FILE . get ( ) ) . valuePlaceholder ( INFO_SKIP_FILE_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
46664	public boolean isOptional ( ) { return ( isOptional ) ; }
46680	public String toString ( ) { return Long . toString ( get ( ) ) ; }
46681	public static void dumbTradingLogic ( String company , int numberOfShares , PortfolioService portfolio , Map < String , Object > quote ) { JsonObject json = new JsonObject ( quote ) ; dumbTradingLogic ( company , numberOfShares , portfolio , json ) ; }
46694	public void deleteSubGroupContainers ( Set groupContainers ) throws AMException , SSOException { Iterator iter = groupContainers . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupContainerDN = ( String ) iter . next ( ) ; AMGroupContainer groupContainer = new AMGroupContainerImpl ( token , groupContainerDN ) ; groupContainer . delete ( ) ; } }
46738	public void save_design_file ( java . io . ObjectOutputStream p_object_stream ) throws IOException { p_object_stream . writeObject ( r_board ) ; p_object_stream . writeObject ( itera_settings ) ; p_object_stream . writeObject ( coordinate_transform ) ; p_object_stream . writeObject ( gdi_context ) ; }
46754	void signedAdd ( MutableBigInteger addend ) { if ( sign == _NUM ) add ( addend ) ; else sign = sign * subtract ( addend ) ; }
46756	@ SuppressWarnings ( _CHAR unused _CHAR ) public static float findMaxValue ( float ... values ) { if ( values == _NULL || values . length == _NUM ) return _NUM ; float max = Float . MIN_VALUE ; for ( float value : values ) { if ( max < value ) max = value ; } return max ; }
46759	public void authenticateRequester ( HttpServletRequest request , HttpServletResponse response , AttributeQuery attrQuery , String attrAuthorityEntityID , String realm ) throws SAML2Exception { AttributeQueryUtil . validateEntityRequester ( attrQuery , attrAuthorityEntityID , realm ) ; }
46768	public void visitAttribute ( Attribute attr ) { if ( cv != _NULL ) { cv . visitAttribute ( attr ) ; } }
46770	public String documentationReferenceGuideUrl ( ) { return properties . getProperty ( _CHAR doc . guide . ref . url _CHAR ) ; }
46777	public void checkIdle ( ) { try { createPool ( ) . checkIdle ( ) ; } catch ( SQLException x ) { throw new RuntimeException ( x ) ; } }
46794	public static String toString ( boolean value ) { return String . valueOf ( value ) ; }
46829	public void addStringToTable ( byte [ ] str ) { stringTable [ tableIndex ++ ] = str ; if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } else if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } else if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } }
46836	K lowestKey ( ) { Comparator < ? super K > cmp = m . comparator ; ConcurrentSkipListMap . Node < K , V > n = loNode ( cmp ) ; if ( isBeforeEnd ( n , cmp ) ) return n . key ; else throw new NoSuchElementException ( ) ; }
46849	public ListBuffer < A > appendArray ( final A [ ] xs ) { for ( final A x : xs ) { append ( x ) ; } return this ; }
46878	static private String generateTokenID ( String resource ) { if ( StringUtils . isBlank ( resource ) ) { return _NULL ; } return Hash . hash ( resource + RandomStringUtils . randomAlphanumeric ( _NUM ) ) ; }
46916	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) ; unchecked ( _NULL ) ; }
46934	public int read ( char cbuf [ ] , int off , int len ) throws IOException { return in . read ( cbuf , off , len ) ; }
46941	public < M extends Configuration > void deregisterAddListener ( InstantiableRelationDefinition < ? , M > d , ServerManagedObjectAddListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) ; deregisterAddListener ( baseDN , listener ) ; }
46954	public void visitBaseType ( char descriptor ) { }
46977	@ Override protected JsonGenerator _createGenerator ( Writer out , IOContext ctxt ) throws IOException { return _nonByteTarget ( ) ; }
46993	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
46996	public long length ( ) throws IOException { try { return Libcore . os . fstat ( fd ) . st_size ; } catch ( ErrnoException errnoException ) { throw errnoException . rethrowAsIOException ( ) ; } }
47018	@ NonNull public final Agera skip ( long n ) { return new AgeraSkip ( this , n ) ; }
47033	@ Override public String toString ( ) { return name . toString ( ) ; }
47039	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
47040	public boolean hasMAXEVENTS ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
47043	public final void forceFinished ( boolean finished ) { mFinished = finished ; }
47050	void updateMaskIfNecessary ( ) { if ( ! getAllowsInvalid ( ) && ( getFormat ( ) != _NULL ) ) { if ( ! isValidMask ( ) ) { updateMask ( ) ; } else { String newString = getFormattedTextField ( ) . getText ( ) ; if ( ! newString . equals ( string ) ) { updateMask ( ) ; } } } }
47061	public ParameterBlock add ( short s ) { return add ( new Short ( s ) ) ; }
47085	@ Override public Foo fetchFooByUuidAndGroupId ( String uuid , long groupId ) { return fooPersistence . fetchByUUID_G ( uuid , groupId ) ; }
47087	@ Override public void addHeader ( String name , String value ) { addHeader ( name , value , _NULL ) ; }
47113	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
47118	public void read_logfile ( InputStream p_input_stream ) { if ( board_is_read_only ) return ; if ( ! ( interactive_state instanceof StateMenu ) ) return ; interactive_action_thread = new ReadActlogThread ( this , p_input_stream ) ; interactive_action_thread . start ( ) ; }
47137	public void select_items_in_region ( ) { if ( board_is_read_only ) return ; if ( ! ( interactive_state instanceof StateMenu ) ) return ; set_interactive_state ( StateSelectRegionItems . get_instance ( interactive_state , this , actlog ) ) ; }
47140	public static long countSubstr ( final String value , final String subStr , final boolean caseSensitive , boolean allowOverlapping ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return countSubstr ( caseSensitive ? value : value . toLowerCase ( ) , caseSensitive ? subStr : subStr . toLowerCase ( ) , allowOverlapping , _NUM ) ; }
47149	public static void centerOnComponent ( Window comp , Component ref ) { comp . setLocationRelativeTo ( ref ) ; }
47152	protected boolean checkFuncNum ( ) { return this . ckFinderFuncNum != _NULL ; }
47163	public boolean hasAltitude ( ) { return ! Double . isNaN ( altitude ) ; }
47167	public boolean checkServerUp ( String serverID ) { try { return getClusterMonitor ( ) . checkServerUp ( serverID ) ; } catch ( SessionException e ) { sessionDebug . error ( _CHAR Failed to check Server Up for { _NUM } _CHAR , serverID , e ) ; return _BOOL ; } }
47258	public void addParent ( Permission perm , boolean value ) { perm . getChildren ( ) . put ( getName ( ) , value ) ; perm . recalculatePermissibles ( ) ; }
47287	public void visitAttribute ( Attribute attr ) { if ( mv != _NULL ) { mv . visitAttribute ( attr ) ; } }
47310	public boolean isClosed ( ) { synchronized ( closeLock ) { return closed ; } }
47328	@ DataProvider ( name = _CHAR invalidStatements _CHAR ) public Object [ ] [ ] invalids ( ) { return new Object [ ] [ ] { { _CHAR - _NUM _CHAR } , { _CHAR _NUM _CHAR } , { _CHAR not valid _CHAR } , { _CHAR _NUM _CHAR } , { _CHAR _NUM _CHAR } } ; }
47338	public static boolean isRunning ( ) { return directoryServer . isRunning ; }
47388	private void checkDSSentAndAcked ( FakeReplicationDomain fakeRd , int nPacket ) { fakeRd . newSafeReadAssertions ( ) . sentUpdates ( nPacket ) . acknowledgedUpdates ( nPacket ) . runAsserts ( ) ; }
47405	public boolean isRunning ( ) { return isRunning ; }
47429	protected synchronized void expire ( ) throws IllegalMonitorStateException { if ( owner == Thread . currentThread ( ) ) { expired = _BOOL ; } else { throw new IllegalMonitorStateException ( _CHAR The calling thread is not the owner of the lock ! _CHAR ) ; } }
47461	protected Frame < V > newFrame ( final int nLocals , final int nStack ) { return new Frame < V > ( nLocals , nStack ) ; }
47483	public ProductService retrieveProduct ( String productId , Handler < AsyncResult < Product >> resultHandler ) { delegate . retrieveProduct ( productId , resultHandler ) ; return this ; }
47484	public static BinaryValue createBase64 ( String base64 ) throws ParseException { BinaryValue value = new BinaryValue ( ) ; value . type = Type . BASE64_STRING ; value . base64 = base64 ; value . bytes = value . getBytes ( ) ; value . hashCode = base64 . hashCode ( ) ; return value ; }
47485	public void invoke ( String callbackName , Marshallable callbackParam ) { TransactInfo transactInfo = TransactInfo . createCallbackInvoke ( mCallbackId , callbackName ) ; mJsBridge . dispatchServerCallback ( transactInfo , callbackParam ) ; }
47557	public void removePropertyChangeListener ( PropertyChangeListener listener ) { support . removePropertyChangeListener ( listener ) ; }
47560	public void objectRenamed ( AMEvent event ) { if ( event == _NULL ) { debug . error ( _CHAR AMConfiguration . objectChanged , event _NULL _CHAR ) ; return ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR objectRenamed , type = _CHAR + event . getEventType ( ) + _CHAR , sDN = _CHAR + event . getSourceDN ( ) + _CHAR , sType = _CHAR + event . getSourceType ( ) ) ; } processSDKNotification ( ) ; }
47569	private static void updateAllUIs ( ) { Frame appFrames [ ] = Frame . getFrames ( ) ; for ( Frame frame : appFrames ) { updateWindowUI ( frame ) ; } }
47605	public boolean is_parallel ( PlaLineInt p_other ) { return direction ( ) . side_of ( p_other . direction ( ) ) == PlaSide . COLLINEAR ; }
47617	private final boolean compareAndSetTail ( Node expect , Node update ) { return unsafe . compareAndSwapObject ( this , tailOffset , expect , update ) ; }
47646	public void accept ( final MethodVisitor mv ) { mv . visitParameter ( name , access ) ; }
47658	public final void forceFinished ( boolean finished ) { mFinished = finished ; }
47661	public Enum asEnum ( ) { return this . modificationTypeEnum ; }
47663	public PlaPointFloat substract ( PlaPointFloat p_other ) { return new PlaPointFloat ( v_x - p_other . v_x , v_y - p_other . v_y ) ; }
47675	public void put ( String key , NewSubSchemaWrapper value ) { newSubSchemas . put ( key , value ) ; }
47683	protected void notifyListeners ( LocalizableMessage msg ) { notifyListeners ( _NULL , _NULL , _NULL , msg ) ; }
47696	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setNonQualifierBranches ( _CHAR master , int _CHAR ) ; unchecked ( _NULL ) ; }
47697	public void deleteSubPeopleContainers ( Set peopleContainers ) throws AMException , SSOException { Iterator iter = peopleContainers . iterator ( ) ; while ( iter . hasNext ( ) ) { String peopleContainerDN = ( String ) iter . next ( ) ; AMPeopleContainer peopleContainer = new AMPeopleContainerImpl ( super . token , peopleContainerDN ) ; peopleContainer . delete ( ) ; } }
47731	public void noEntrySelected ( ) { searchResult = _NULL ; delete . setVisible ( _BOOL ) ; saveChanges . setVisible ( _BOOL ) ; cardLayout . show ( mainPanel , NOTHING_SELECTED ) ; displayedEntryPanel = _NULL ; }
47758	private String readInputUntil ( char symbol ) { String s = _CHAR _CHAR ; while ( ! accept ( symbol ) ) { s += ( char ) data [ index ] ; skip ( ) ; } return s ; }
47765	public Set < Map . Entry < String , NewSubSchemaWrapper >> entrySet ( ) { return newSubSchemas . entrySet ( ) ; }
47774	private void deliverResultToReceiver ( int resultCode , String message ) { Bundle bundle = new Bundle ( ) ; bundle . putString ( Constants . RESULT_DATA_KEY , message ) ; receiver . send ( resultCode , bundle ) ; }
47793	public boolean hasSubOrdinates ( ) { return hasSubOrdinates ; }
47796	public static int tertiaryOrder ( int order ) { return order & TERTIARY_ORDER_MASK_ ; }
47798	protected void logMsg ( String s ) { outWriter . println ( s ) ; }
47820	public static String transformFileName ( String from , String to , File file ) { return transformFileName ( from , to , file , DEFAULT_WILD_CARD ) ; }
47831	public void removeCOSTemplate ( String name ) throws UMSException { Guid tGuid = new Guid ( COSTemplate . DEFAULT_NAMING_ATTR + _CHAR = _CHAR + name + _CHAR , _CHAR + this . getGuid ( ) ) ; this . removeChild ( tGuid ) ; }
47834	public static int flashTime ( ) { return info ( ) . flashTime ; }
47841	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
47881	public synchronized int count ( ) { return set . size ( ) ; }
47882	public boolean containsAttribute ( Object name , Object value ) { return attributes . containsAttribute ( name , value ) ; }
47885	public int size ( ) { synchronized ( eventsList ) { return eventsList . size ( ) ; } }
47956	@ Override public int doEndTag ( ) throws JspException { return EVAL_PAGE ; }
47971	public void removeAttributes ( Enumeration < ? > names ) { while ( names . hasMoreElements ( ) ) removeAttribute ( names . nextElement ( ) ) ; }
47988	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
47997	public boolean hasChoiceValues ( ) { return as . hasChoiceValues ( ) ; }
47999	private void removeMapping ( TreeStateNode node ) { treePathMapping . remove ( node . getTreePath ( ) ) ; }
48052	boolean updateServerState ( UpdateMsg msg ) { return msg . contributesToDomainState ( ) ? serverState . update ( msg . getCSN ( ) ) : ! serverState . cover ( msg . getCSN ( ) ) ; }
48080	public boolean hasModifications ( ) { return hasModifications ; }
48112	public void removeAllUserDevices ( @ Nonnull AMIdentity id ) throws IdRepoException , SSOException { Reject . ifNull ( id ) ; id . removeAttributes ( Collections . singleton ( getConfigStorageAttributeName ( ) ) ) ; id . store ( ) ; }
48124	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
48135	private static void cleanUpCache ( String reqID ) { IDPCache . oldIDPSessionCache . remove ( reqID ) ; IDPCache . authnRequestCache . remove ( reqID ) ; IDPCache . idpAuthnContextCache . remove ( reqID ) ; IDPCache . isSessionUpgradeCache . remove ( reqID ) ; }
48156	@ JsonIgnore public boolean isNeverExpiring ( ) { return this . expiryTimeSeconds == Long . MAX_VALUE ; }
48192	public static com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return getService ( ) . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
48215	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer , _BOOL ) ; return buffer . toString ( ) ; }
48231	public void removeAttribute ( String attrName ) throws SMSException , SSOException { validateServiceConfigImpl ( ) ; SMSEntry e = sc . getSMSEntry ( ) ; SMSUtils . removeAttribute ( e , attrName ) ; saveSMSEntry ( e ) ; }
48240	public String toString ( ) { return Boolean . toString ( get ( ) ) ; }
48254	public void addValue ( String value ) { if ( isNullSeperateMultipleValues ( ) ) { setValue ( this . value + _CHAR \ u0000 _CHAR + value ) ; } else { setValue ( this . value + value ) ; } }
48258	@ Override public void write ( int ch ) throws IOException { OutputStream output = m_streams . get ( ) ; if ( _NULL != output ) { output . write ( ch ) ; } }
48259	public HeaderIterator iterator ( ) { return new BasicListHeaderIterator ( this . headers , _NULL ) ; }
48312	public void clearExif ( ) { mData = new ExifData ( DEFAULT_BYTE_ORDER ) ; }
48319	protected int estimateNameValuePairLen ( final NameValuePair nvp ) { if ( nvp == _NULL ) return _NUM ; int result = nvp . getName ( ) . length ( ) ; final String value = nvp . getValue ( ) ; if ( value != _NULL ) { result += _NUM + value . length ( ) ; } return result ; }
48321	@ SuppressWarnings ( _CHAR unused _CHAR ) public static long parseUnsignedInt ( byte [ ] bytes ) { return parseUnsignedInt ( bytes , _NUM , bytes . length ) ; }
48344	protected void Pattern ( ) throws javax . xml . transform . TransformerException { while ( _BOOL ) { LocationPathPattern ( ) ; if ( tokenIs ( _CHAR ) ) { nextToken ( ) ; } else { break ; } } }
48345	public final static int primaryOrder ( int order ) { order & = RBCollationTables . PRIMARYORDERMASK ; return ( order >> > RBCollationTables . PRIMARYORDERSHIFT ) ; }
48352	public static int resetPreParseCount ( ) { return preParseCounter . getAndSet ( _NUM ) ; }
48355	public ParameterBlock add ( long l ) { return add ( new Long ( l ) ) ; }
48367	private void writeObject ( java . io . ObjectOutputStream p_stream ) throws java . io . IOException { p_stream . defaultWriteObject ( ) ; p_stream . writeInt ( trace_angle_restriction . get_no ( ) ) ; }
48382	public String constantName ( ) { return constantName ; }
48398	public void addAttachment ( MimeBodyPart attachment ) { attachments . add ( attachment ) ; }
48417	public boolean nextValidToken ( ) throws java . io . IOException { while ( tokeniser . nextToken ( ) ) { if ( tokeniser . getTokenType ( ) == TokenType . Comment ) continue ; return _BOOL ; } return _BOOL ; }
48475	public static boolean checkContentCanBePulledDown ( PtrFrameLayout frame , View content , View header ) { return ! canChildScrollUp ( content ) ; }
48484	public int hashCode ( ) { return x + _NUM * y + _NUM * w + _NUM * h ; }
48500	public boolean isForkedResponse ( ) { return isForked ; }
48503	public synchronized int hashCode ( ) { return super . hashCode ( ) ; }
48511	private final boolean is7BitClean ( ByteSequence value ) { for ( int i = _NUM ; i < value . length ( ) ; i ++ ) { byte b = value . byteAt ( i ) ; if ( ( b & MASK ) != b ) { return _BOOL ; } } return _BOOL ; }
48515	public static boolean isRootCA ( X509Certificate cert ) { return CertUtils . getIssuerName ( cert ) . equals ( CertUtils . getSubjectName ( cert ) ) ; }
48521	static ByteString dnToDNKey ( DN dn , int prefixRDNs ) { return dn . localName ( dn . size ( ) - prefixRDNs ) . toNormalizedByteString ( ) ; }
48527	public void copyArea ( JComponent c , Graphics g , int x , int y , int w , int h , int deltaX , int deltaY , boolean clip ) { g . copyArea ( x , y , w , h , deltaX , deltaY ) ; }
48532	public int length ( ) { return size ( ) ; }
48539	public int size ( ) { return map . size ( ) ; }
48571	@ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) public void start ( Context context , Fragment fragment , int requestCode ) { fragment . startActivityForResult ( getIntent ( context ) , requestCode ) ; }
48583	@ Issue ( _CHAR JENKINS - _NUM _CHAR ) @ Test public void dollar_class_must_die ( ) throws Exception { WorkflowJob p = r . jenkins . createProject ( WorkflowJob . class , _CHAR die1 _CHAR ) ; p . setDefinition ( new CpsFlowDefinition ( _CHAR california ocean : _CHAR , mountain : _CHAR _CHAR ) ) ; r . assertLogContains ( _CHAR California from pacific to sierra _CHAR , r . assertBuildStatusSuccess ( p . scheduleBuild2 ( _NUM ) ) ) ; }
48659	private void notifyListeners ( Entry sr ) { EntryReadEvent ev = new EntryReadEvent ( this , sr ) ; for ( EntryReadListener listener : listeners ) { listener . entryRead ( ev ) ; } }
48684	public static String guessMimeTypeFromExtension ( String extension ) { if ( extension == _NULL || extension . isEmpty ( ) ) { return _NULL ; } return extensionToMimeTypeMap . get ( extension ) ; }
48707	public PdfCanvas newlineText ( ) { contentStream . getOutputStream ( ) . writeBytes ( TStar ) ; return this ; }
48717	public boolean add ( E e ) { return offer ( e ) ; }
48723	private void addRDNAttributesIfNecessary ( ) throws DirectoryException { for ( AVA ava : entryDN . rdn ( ) ) { AttributeType t = ava . getAttributeType ( ) ; addRDNAttributesIfNecessary ( t . isOperational ( ) ? operationalAttributes : userAttributes , ava ) ; } }
48736	protected boolean isAllocationValid ( ) { return ( majorAllocValid && minorAllocValid ) ; }
48737	@ Override public void clear ( ) { this . callStack . clear ( ) ; super . clear ( ) ; }
48749	protected synchronized void timeout ( ) throws IllegalMonitorStateException { if ( owner == Thread . currentThread ( ) ) { timeout = _BOOL ; } else { throw new IllegalMonitorStateException ( _CHAR The calling thread is not the owner of the lock ! _CHAR ) ; } }
48769	protected void uninstallPreviewPanel ( ) { if ( this . previewPanel != _NULL ) { this . previewPanel . removeMouseListener ( getHandler ( ) ) ; this . previewPanelHolder . remove ( this . previewPanel ) ; } this . chooser . remove ( this . previewPanelHolder ) ; }
48788	public String documentationHomePageUrl ( ) { return properties . getProperty ( _CHAR doc . homepage . url _CHAR ) ; }
48799	@ Override public int hashCode ( ) { return value ? _NUM : _NUM ; }
48806	public static Clause not ( String clause ) { return new NotClause ( where ( clause ) ) ; }
48813	public boolean validate ( String value , String rule ) { return validate ( value ) ; }
48819	@ AfterClass public void shutDownEmbeddedServerServer ( ) throws Exception { for ( int i = _NUM ; i < _NUM ; i ++ ) { if ( i != _NUM ) { TestCaseUtils . deleteEntry ( DN . valueOf ( _CHAR uid = user . '' + i + _CHAR , o = test _CHAR ) ) ; } } }
48836	@ Override public void execute ( ) throws MojoExecutionException , MojoFailureException { createOutputDirectory ( ) ; generateConfigRef ( ) ; try { copyResources ( ) ; } catch ( IOException e ) { throw new MojoExecutionException ( _CHAR Failed to copy resource files . '' , e ) ; } }
48841	public static long fromInet4SocketAddress ( final InetSocketAddress socketAddress ) { validateAddressType ( socketAddress ) ; final long ipAddressOctets = Integer . toUnsignedLong ( socketAddress . getAddress ( ) . hashCode ( ) ) ; final long port = socketAddress . getPort ( ) ; return port << _NUM | ipAddressOctets ; }
48846	private static void configurePlugins ( Configuration config , RestExpress server ) { configureMetrics ( config , server ) ; new HyperExpressPlugin ( Linkable . class ) . register ( server ) ; new CorsHeaderPlugin ( _CHAR * _CHAR ) . flag ( PUBLIC_ROUTE ) . allowHeaders ( CONTENT_TYPE , ACCEPT , LOCATION ) . exposeHeaders ( LOCATION ) . register ( server ) ; }
48849	public int read ( char cbuf [ ] , int offset , int length ) throws IOException { return sd . read ( cbuf , offset , length ) ; }
48869	public static NamePath dotted ( String ... pieces ) { return parse ( _CHAR \\ . _CHAR , pieces ) ; }
48884	@ Override public int doStartTag ( ) throws JspException { return EVAL_BODY_BUFFERED ; }
48928	public void mousePressed ( MouseEvent e ) { getHandler ( ) . mousePressed ( e ) ; }
48929	public static void addAttributeToSchema ( String serviceName , String subSchemaName , String schemaType , Node attributeSchemaNode , SSOToken adminToken ) throws UpgradeException { ServiceSchema ss = getServiceSchema ( serviceName , subSchemaName , schemaType , adminToken ) ; addAttributeToSchema ( ss , attributeSchemaNode ) ; }
48932	public String now ( ) { return new DateTime ( chrono ) . toString ( ) ; }
48954	public String toXMLString ( ) throws FSMsgException { return this . toXMLString ( _BOOL , _BOOL ) ; }
48960	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setAutoIncrementPatch ( _BOOL ) ; unchecked ( _NULL ) ; }
48961	public int size ( ) { return count ; }
48964	public boolean isMethod ( ) { return memberNode == _NULL ? _BOOL : memberNode instanceof MethodNode ; }
48974	@ Override public boolean read ( java . io . ObjectInputStream p_object_stream ) { if ( ! super . read ( p_object_stream ) ) stat . userPrintln ( classname + _CHAR read ERROR a _CHAR ) ; if ( ! manual_rule_window . read ( p_object_stream ) ) stat . userPrintln ( classname + _CHAR read ERROR b _CHAR ) ; refresh ( ) ; return _BOOL ; }
48975	@ Override @ Deprecated public boolean awaitTermination ( long l , TimeUnit timeUnit ) throws InterruptedException { throw new UnsupportedOperationException ( ) ; }
48988	public static boolean matches ( MappedMember mm , MappedMember mm2 , boolean orig ) { return matches ( mm , orig ? mm2 . getOriginalName ( ) : mm2 . getNewName ( ) , mm2 . getDesc ( ) , _BOOL ) ; }
48995	private static void reverseRange ( Object [ ] a , int lo , int hi ) { hi -- ; while ( lo < hi ) { Object t = a [ lo ] ; a [ lo ++ ] = a [ hi ] ; a [ hi -- ] = t ; } }
49004	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49023	public static void sort ( double [ ] array ) { DualPivotQuicksort . sort ( array ) ; }
49047	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
49049	public void invalidate ( ) { this . authScheme = _NULL ; this . authScope = _NULL ; this . credentials = _NULL ; }
49104	public String toString ( ) { return ( status ) ; }
49119	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49123	static Promise < Boolean > promiseBoolean ( ) { return new BasePromise < > ( ) ; }
49161	public static long readUInt64 ( ByteBuffer b ) { long result = _NUM ; result += ( readUBEInt32 ( b ) << _NUM ) ; result += readUBEInt32 ( b ) ; return result ; }
49166	public int hashCode ( ) { return attrSyntax . hashCode ( ) ; }
49193	public int hashCode ( ) { return table . hashCode ( ) ; }
49201	public static String encodeBase64 ( final String value ) { if ( value != _NULL ) { return Base64 . encode ( value . getBytes ( ) ) ; } return _NULL ; }
49204	private boolean isLink ( ) { return ( ( state & LINK_FLAG ) == LINK_FLAG ) ; }
49209	public static TypeReference newTypeReference ( int sort ) { return new TypeReference ( sort << _NUM ) ; }
49227	public static void sort ( byte [ ] a ) { doSort ( a , _NUM , a . length - _NUM ) ; }
49257	public boolean isCaseInsensitive ( ) { return isCaseInsensitive ; }
49310	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49332	@ Override public void sendUrgentData ( int data ) throws IOException { throw new SocketException ( _CHAR Method sendUrgentData ( ) is not supported . '' ) ; }
49380	public void loadState ( Bundle bundle ) throws Exception { if ( bundle != _NULL && ! bundle . isEmpty ( ) ) { for ( ViewItem item : getItems ( ) ) { item . loadState ( bundle ) ; } } }
49403	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49421	long triggerTime ( long delay ) { return now ( ) + ( ( delay < ( Long . MAX_VALUE >> _NUM ) ) ? delay : overflowFree ( delay ) ) ; }
49422	public static RequirementsBuilder oneOf ( JsonValue ... oneOfElements ) { RequirementsBuilder newBuilder = new RequirementsBuilder ( BuilderType . ONE_OF , _NULL ) ; newBuilder . addOneOfElements ( oneOfElements ) ; return newBuilder ; }
49434	public static synchronized boolean isEmpty ( ) { return services . isEmpty ( ) ; }
49443	public void invokeStatic ( final Type owner , final Method method ) { invokeInsn ( Opcodes . INVOKESTATIC , owner , method , _BOOL ) ; }
49459	public boolean add ( E e ) { return offer ( e ) ; }
49464	public boolean hasEvents ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
49480	public final boolean isReverse ( ) { return _BOOL ; }
49506	public void invalidate ( ) { isValid = _BOOL ; sessionContext = _NULL ; }
49536	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49570	public int count ( ) { return class_list . size ( ) ; }
49571	public static StringArgument useJCEKSArgument ( ) throws ArgumentException { return StringArgument . builder ( _CHAR useJCEKS _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_USE_JCEKS . get ( ) ) . valuePlaceholder ( INFO_KEYSTOREPATH_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
49581	public boolean isDone ( ) { return index > arcSegs + lineSegs ; }
49605	public static boolean isInvalid ( int c ) { return ! isValid ( c ) ; }
49655	ReasonsMask intersect ( ReasonsMask mask ) { ReasonsMask _mask = new ReasonsMask ( ) ; _mask . addReasons ( new ReasonsMask ( _reasons & mask . getReasons ( ) ) ) ; return _mask ; }
49660	public void addChunk ( final Chunk toAdd ) { final List < Chunk > list = assertChunkList ( toAdd . getGuid ( ) ) ; if ( ! list . isEmpty ( ) && ! MULTI_CHUNKS . contains ( toAdd . getGuid ( ) ) ) { throw new IllegalArgumentException ( _CHAR The GUID of the given chunk indicates , that there is no more instance allowed . '' ) ; } list . add ( toAdd ) ; assert chunkstartsUnique ( this ) : _CHAR Chunk has equal start position like an already inserted one . '' ; }
49677	public int size ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return count ; } finally { lock . unlock ( ) ; } }
49701	public boolean isServerRunning ( ) { return isServerRunning ; }
49713	public void writeTag ( int tagId ) throws IOException { if ( tagId < _NUM ) { throw new IllegalArgumentException ( _CHAR Can not write negative tag ids ( _CHAR + tagId + _CHAR ) _CHAR ) ; } _writeLengthMarker ( PREFIX_TYPE_TAG , tagId ) ; }
49760	void addParameter ( String key , String value ) { parameterMap . put ( key , new String [ ] { value } ) ; }
49826	public boolean isCallerSensitive ( ) { return testAllFlags ( CALLER_SENSITIVE ) ; }
49832	public void addUniqueAttribute ( String rawName , String value , int flags ) throws SAXException { if ( m_firstTagNotEmitted ) { flush ( ) ; } m_handler . addUniqueAttribute ( rawName , value , flags ) ; }
49835	public Builder withColor ( Color color ) throws IllegalArgumentException { Validate . notNull ( color , _CHAR Can not have _NULL color _CHAR ) ; colors . add ( color ) ; return this ; }
49872	public final void pushCurrentNodeAndExpression ( int cn , int en ) { m_currentNodes . push ( cn ) ; m_currentExpressionNodes . push ( cn ) ; }
49903	public int size ( ) { return al . size ( ) ; }
49906	private String repoId ( String resourceId ) { return ResourcePath . valueOf ( _CHAR repo _CHAR ) . concat ( managedId ( resourceId ) ) . toString ( ) ; }
49921	public net . aimeizi . person . Person . Builder clearName ( ) { name = _NULL ; fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
49923	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
49928	public boolean isPartialReturn ( ) { return partialReturn ; }
49932	protected void addUrl ( String url ) { try { addUrl ( new URL ( url ) ) ; } catch ( IOException e ) { LOGGER . info ( _CHAR Skipped CRL url ( malformed ) : _CHAR + url ) ; } }
49954	private static void reInitConfigProperties ( String basedir , boolean initAMConfig ) throws FileNotFoundException , IOException { if ( initAMConfig ) { reInitAMConfigProperties ( basedir ) ; } }
49958	@ Override public boolean is_on_layer ( int p_layer ) { return get_layer ( ) == p_layer ; }
49960	public int search ( int o ) { int i = lastIndexOf ( o ) ; if ( i >= _NUM ) { return size ( ) - i ; } return - _NUM ; }
49971	public synchronized boolean isDestroyed ( ) { return destroyed ; }
49988	@ Fluent public Job onProgress ( Handler < Integer > progressHandler ) { this . on ( _CHAR progress _CHAR , _NULL ) ; return this ; }
49995	public void clearInterceptors ( ) { clearRequestInterceptors ( ) ; clearResponseInterceptors ( ) ; }
50010	public boolean isLocallyConfigured ( ) { return locallyConfigured ; }
50020	protected Expression string ( int opPos ) throws TransformerException { return compileUnary ( new org . apache . xpath . operations . String ( ) , opPos ) ; }
50071	public boolean removeElement ( Object key ) { return _BOOL ; }
50087	private final boolean compareAndSetHead ( Node update ) { return unsafe . compareAndSwapObject ( this , headOffset , _NULL , update ) ; }
50093	@ Override public void memberAdded ( Member member ) { }
50099	public void assignAssignableDynamicGroup ( AMAssignableDynamicGroup assignableDynamicGroup ) throws AMException , SSOException { assignAssignableDynamicGroup ( assignableDynamicGroup . getDN ( ) ) ; }
50105	private static boolean isHex ( char p_char ) { return ( isDigit ( p_char ) || ( p_char >= _CHAR && p_char <= _CHAR ) || ( p_char >= _CHAR && p_char <= _CHAR ) ) ; }
50113	public int hashCode ( ) { if ( init_with_ip || wildcard ) { return this . getName ( ) . hashCode ( ) ; } try { getCanonName ( ) ; } catch ( UnknownHostException uhe ) { } if ( invalid || cname == _NULL ) return this . getName ( ) . hashCode ( ) ; else return this . cname . hashCode ( ) ; }
50131	public void clearPermissions ( ) { loginButtonProperties . clearPermissions ( ) ; }
50142	public static boolean equal ( Object a , Object b ) { return a == b || ( a != _NULL && a . equals ( b ) ) ; }
50159	public static byte [ ] flateDecode ( byte [ ] input ) { byte [ ] b = flateDecode ( input , _BOOL ) ; if ( b == _NULL ) return flateDecode ( input , _BOOL ) ; return b ; }
50180	public static boolean hasIdRepoSchema ( String idRepoType ) { if ( idRepoType == _NULL ) { return _BOOL ; } String schemaFiles = getSchemaFiles ( idRepoType ) ; return ( ( schemaFiles != _NULL ) && ( schemaFiles . trim ( ) . length ( ) > _NUM ) ) ; }
50185	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
50200	private boolean compareAndDecrementWorkerCount ( int expect ) { return ctl . compareAndSet ( expect , expect - _NUM ) ; }
50225	public int intValue ( ) { return intValue ; }
50228	private void updateMenus ( ServerDescriptor desc ) { menuBar . newEntryFromLDIFMenuItem . setEnabled ( desc . isAuthenticated ( ) ) ; menuBar . deleteBackendMenuItem . setEnabled ( desc . isAuthenticated ( ) ) ; menuBar . deleteBaseDNMenuItem . setEnabled ( desc . isAuthenticated ( ) ) ; }
50254	public String toString ( ) { return SSOSessionID . toString ( ) ; }
50262	public boolean Arg0IsNodesetExpr ( ) { return ( _NULL == m_arg0 ) ? _BOOL : m_arg0 . isNodesetExpr ( ) ; }
50293	@ Override public void flush ( ) { Cell [ ] row = _NULL ; if ( ! rows . isEmpty ( ) ) { row = rows . get ( rows . size ( ) - _NUM ) ; } document . add ( this ) ; if ( row != _NULL ) { lastAddedRow = row ; } }
50320	private synchronized void addTracker ( String path , Object marker , FileDeleteStrategy deleteStrategy ) { if ( exitWhenFinished ) { throw new IllegalStateException ( _CHAR No new trackers can be added once exitWhenFinished ( ) is called _CHAR ) ; } if ( reaper == _NULL ) { reaper = new Reaper ( ) ; reaper . start ( ) ; } trackers . add ( new Tracker ( path , deleteStrategy , marker , q ) ) ; }
50351	private final boolean parkAndCheckInterrupt ( ) { LockSupport . park ( this ) ; return Thread . interrupted ( ) ; }
50355	public XMLString emptystr ( ) { return XString . EMPTYSTRING ; }
50430	public void addRestrictedDomains ( Collection < String > domainNames ) { if ( domainNames == _NULL ) { return ; } for ( String domainName : domainNames ) { addRestrictedDomain ( domainName ) ; } }
50432	public void clear ( byte value ) { for ( int y = _NUM ; y < height ; ++ y ) { for ( int x = _NUM ; x < width ; ++ x ) { bytes [ y ] [ x ] = value ; } } }
50449	public NSObject objectForKey ( String key ) { return dict . get ( key ) ; }
50452	public static void deleteAlias ( KeyStore ks , String ksPath , String alias , char [ ] pwd ) throws KeyStoreException { IMPL . deleteAlias ( ks , ksPath , alias , pwd ) ; }
50484	@ Override public int size ( ) { return size ; }
50518	public static Cookie createCookie ( String cookieValue , String cookieDomain ) { String cookieName = getCookieName ( ) ; if ( utilDebug . messageEnabled ( ) ) { utilDebug . message ( _CHAR cookieName = _CHAR , cookieValue = _CHAR , cookieDomain = _CHAR _CHAR , cookieName , cookieValue , cookieDomain ) ; } return ( createCookie ( cookieName , cookieValue , cookieDomain ) ) ; }
50521	void old ( ) { mYoung = _BOOL ; }
50531	public static int dayOfWeek ( long day ) { long [ ] remainder = new long [ _NUM ] ; floorDivide ( day + Calendar . THURSDAY , _NUM , remainder ) ; int dayOfWeek = ( int ) remainder [ _NUM ] ; dayOfWeek = ( dayOfWeek == _NUM ) ? _NUM : dayOfWeek ; return dayOfWeek ; }
50545	public String toString ( ) { return _CHAR Name = _CHAR + _name + _CHAR Attrs = _CHAR + _atts . toString ( ) + _CHAR Elems = _CHAR + _elems . toString ( ) + _CHAR PCDATA = _CHAR + _pcdata ; }
50547	@ Override public boolean accept ( File file ) { if ( file . isDirectory ( ) ) { File [ ] files = file . listFiles ( ) ; return files == _NULL || files . length == _NUM ; } else { return file . length ( ) == _NUM ; } }
50556	@ Override public void removeContainerListener ( ContainerListener listener ) { listeners . remove ( listener ) ; }
50563	private boolean isInteractionResponseExists ( Message msg ) { try { return ( InteractionManager . getInstance ( ) . getInteractionResponseElement ( msg ) != _NULL ) ; } catch ( Exception e ) { IDPPUtils . debug . error ( _CHAR PPRequestHandler . isInteractionResponse _CHAR + _CHAR Exists : Exception while getting interaction response . '' , e ) ; return _BOOL ; } }
50576	public SAML2ConfigBuilder spEntityId ( String spEntityId ) { this . spEntityId = spEntityId ; return this ; }
50583	public boolean isPluginEnabled ( Plugin plugin ) { if ( ( plugin != _NULL ) && ( plugins . contains ( plugin ) ) ) { return plugin . isEnabled ( ) ; } else { return _BOOL ; } }
50599	public TriggerWrapper block ( ) { if ( state != Trigger . STATE_COMPLETE ) { previous_state = state ; state = Trigger . STATE_BLOCKED ; } return this ; }
50636	public boolean isLeaf ( ) { TreeModel model = getModel ( ) ; return ( model != _NULL ) ? model . isLeaf ( this . getUserObject ( ) ) : _BOOL ; }
50647	protected Object readResolve ( ) throws InvalidObjectException { if ( this . getClass ( ) != MessageFormat . Field . class ) { throw new InvalidObjectException ( _CHAR subclass did n _CHAR_CHAR ) ; } return ARGUMENT ; }
50655	private String retrieveGenerationId ( final File directory ) { final File generationId = retrieveGenerationIdFile ( directory ) ; if ( generationId != _NULL ) { String filename = generationId . getName ( ) ; return filename . substring ( GENERATION_ID_FILE_PREFIX . length ( ) , filename . length ( ) - GENERATION_ID_FILE_SUFFIX . length ( ) ) ; } return _NULL ; }
50690	public boolean equals ( Object o1 ) { if ( o1 instanceof StringComparator ) return ( _BOOL ) ; else return ( _BOOL ) ; }
50769	public boolean hasSecond ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
50770	public void assignAssignableDynamicGroup ( String assignableDynamicGroupDN ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; Set userDNs = new HashSet ( ) ; userDNs . add ( super . entryDN ) ; dsServices . modifyMemberShip ( super . token , userDNs , assignableDynamicGroupDN , ASSIGNABLE_DYNAMIC_GROUP , ADD_MEMBER ) ; }
50776	public static synchronized void clearCache ( ) { entityDescriptorCache . clear ( ) ; entityConfigCache . clear ( ) ; metaAliasEntityCache . clear ( ) ; metaAliasRoleCache . clear ( ) ; entitySuccinctIDCache . clear ( ) ; }
50785	public boolean equals ( DisplayMode dm ) { if ( dm == _NULL ) { return _BOOL ; } return ( getHeight ( ) == dm . getHeight ( ) && getWidth ( ) == dm . getWidth ( ) && getBitDepth ( ) == dm . getBitDepth ( ) && getRefreshRate ( ) == dm . getRefreshRate ( ) ) ; }
50805	public static boolean isLowSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
50838	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) ; unchecked ( _NULL ) ; }
50855	public boolean isOnPanel ( ) { return onPanel ; }
50923	@ Override public Foo fetchFooByUuidAndGroupId ( String uuid , long groupId ) { return fooPersistence . fetchByUUID_G ( uuid , groupId ) ; }
50933	public boolean isLinkingEnabled ( ) { return linkingEnabled ; }
50936	public ConsonantVowelNameGenerator build ( ) throws IllegalStateException { checkState ( ) ; return new ConsonantVowelNameGenerator ( this ) ; }
50948	public static int primaryOrder ( int order ) { return ( ( order & PRIMARY_ORDER_MASK_ ) >> PRIMARY_ORDER_SHIFT_ ) & UNSIGNED_16_BIT_MASK_ ; }
50966	private static byte convertV24textEncodingToV23textEncoding ( byte textEncoding ) { if ( textEncoding == TextEncoding . UTF_16BE ) { return TextEncoding . UTF_16 ; } else if ( textEncoding == TextEncoding . UTF_8 ) { return TextEncoding . ISO_8859_1 ; } else { return textEncoding ; } }
50988	@ Override public void completeCycle ( ) { if ( ! runDeathSeq ) { main . Main . goombaHit . play ( _NUM . _NUM ) ; runDeathSeq = _BOOL ; main . Main . enemyCount ++ ; spriteFrame . setImage ( playerStates . get ( _NUM ) ) ; spriteBoundsArray [ _NUM ] = _NULL ; frameCounter = _NUM ; } }
50992	public DTMAxisIterator reset ( ) { _sp = _oldsp ; return resetPosition ( ) ; }
51003	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
51004	public String toString ( ) { return Double . toString ( get ( ) ) ; }
51039	public Object clone ( ) throws CloneNotSupportedException { NamespaceMappings clone = new NamespaceMappings ( ) ; clone . m_nodeStack = ( NamespaceMappings . Stack ) m_nodeStack . clone ( ) ; clone . count = this . count ; clone . m_namespaces = ( Hashtable ) m_namespaces . clone ( ) ; clone . count = count ; return clone ; }
51047	public static boolean isValidName ( String str ) { if ( str . startsWith ( _CHAR ` _CHAR ) && str . endsWith ( _CHAR ` _CHAR ) ) { return isJavaValidName ( str . substring ( _NUM , str . length ( ) - _NUM ) ) ; } return isJavaValidName ( str ) && ! keys . contains ( str ) ; }
51068	public ParameterBlock add ( byte b ) { return add ( new Byte ( b ) ) ; }
51086	public < T > T deserialise ( String text , Class < T > clazz ) { try { T value = mapper . readValue ( text , clazz ) ; return value ; } catch ( IOException e ) { throw new IllegalStateException ( MessageFormat . format ( _CHAR Failed to deserailise { _NUM } _CHAR , clazz . getSimpleName ( ) ) , e ) ; } }
51109	public static int resetPreOperationCount ( ) { return preOperationCounter . getAndSet ( _NUM ) ; }
51113	public void start ( Context context , android . support . v4 . app . Fragment fragment ) { start ( context , fragment , REQUEST_CROP ) ; }
51114	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
51123	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) ; unchecked ( _NULL ) ; }
51124	private void createLeftOver ( ) { int lineLengthBytes = currentLastBytePos + _NUM ; if ( lineLengthBytes > _NUM ) { leftOver = new byte [ lineLengthBytes ] ; System . arraycopy ( data , _NUM , leftOver , _NUM , lineLengthBytes ) ; } else { leftOver = _NULL ; } currentLastBytePos =- _NUM ; }
51125	private boolean isForwarding ( ) { return ( _depth > _NUM ) ; }
51130	public static void sort ( int [ ] a ) { doSort ( a , _NUM , a . length - _NUM ) ; }
51145	public void endElement ( StylesheetHandler handler , String uri , String localName , String rawName ) throws org . xml . sax . SAXException { ProcessorCharacters charProcessor = ( ProcessorCharacters ) handler . getProcessorFor ( _NULL , _CHAR text ( ) _CHAR , _CHAR text _CHAR ) ; charProcessor . setXslTextElement ( _NULL ) ; }
51150	boolean hasMoreInput ( ) { return current . cursor < current . stream . length ; }
51155	public int hashCode ( ) { return getKey ( ) . hashCode ( ) ; }
51181	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
51199	public boolean isSelectionEmpty ( ) { return getSelectionModel ( ) . isSelectionEmpty ( ) ; }
51226	public boolean isEmpty ( ) { return parameters . isEmpty ( ) ; }
51250	public static Builder createBuilder ( AbstractManagedObjectDefinition < ? , ? > d , String propertyName ) { return new Builder ( d , propertyName ) ; }
51258	public String toString ( ) { return String . valueOf ( get ( ) ) ; }
51262	public HttpURLConnectionWrapper httpURLConnectionWrapper ( URL url ) throws IOException { return new HttpURLConnectionWrapperImpl ( url ) ; }
51278	public final static short secondaryOrder ( int order ) { order = order & RBCollationTables . SECONDARYORDERMASK ; return ( ( short ) ( order >> RBCollationTables . SECONDARYORDERSHIFT ) ) ; }
51283	public String toString ( ) { validate ( ) ; return ( ssm . toString ( ) ) ; }
51291	@ Override public Promise < ResourceResponse , ResourceException > handleUpdate ( Context context , UpdateRequest request ) { return auditService . handleUpdate ( context , request ) ; }
51306	public static int sizeOfDate ( ) { return _NUM ; }
51319	public boolean beginToLogoutDisplay ( ChildDisplayEvent event ) { boolean display = _BOOL ; if ( ! validSession ) { HttpServletRequest req = getRequestContext ( ) . getRequest ( ) ; AMConsoleConfig config = AMConsoleConfig . getInstance ( ) ; setDisplayFieldValue ( LOGOUT_URL , config . getLogoutURL ( req ) ) ; display = _BOOL ; } return display ; }
51327	public void transform ( Source xmlSource , Result outputTarget ) throws TransformerException { transform ( xmlSource , outputTarget , _BOOL ) ; }
51335	public boolean remove ( final URI uri ) { return this . uris . remove ( uri ) ; }
51346	public boolean hasEventCount ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
51349	public void removeListener ( final TimeoutEventListener listener ) { listeners . remove ( listener ) ; }
51379	public static < T > Function < JsonValue , Expression < T > , JsonValueException > expression ( final Class < T > type ) { return expression ( type , Bindings . bindings ( ) ) ; }
51387	public boolean equals ( Object authStatus ) { if ( authStatus instanceof Status ) { Status s = ( Status ) authStatus ; return ( s . status . equalsIgnoreCase ( status ) ) ; } return ( _BOOL ) ; }
51418	public boolean isActive ( ) { return ( getData ( ) & _NUM ) == _NUM ; }
51422	private static boolean isTainted ( Object o ) { try { checkTypeSafe ( o ) ; } catch ( IllegalArgumentException e ) { return _BOOL ; } return _BOOL ; }
51433	public static void main ( String [ ] args ) { int retCode = mainCLI ( args , System . out , System . err ) ; if ( retCode != _NUM ) { System . exit ( retCode ) ; } }
51438	public Object clone ( ) { Organization theClone = _NULL ; try { theClone = ( Organization ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( selectedRFCOrgDNs != _NULL ) { theClone . selectedRFCOrgDNs = new HashSet ( ) ; theClone . selectedRFCOrgDNs . addAll ( selectedRFCOrgDNs ) ; } return theClone ; }
51453	private void resetToXMLStream ( ) { return ; }
51459	protected boolean isFormattedOutput ( ) { return formattedOutput ; }
51474	protected JButton createDecreaseButton ( int orientation ) { decreaseButton = new MetalScrollButton ( orientation , scrollBarWidth , isFreeStanding ) ; return decreaseButton ; }
51476	public static boolean startsWith ( String s1 , String s2 ) { if ( s1 == _NULL || s2 == _NULL ) { return _BOOL ; } return s1 . startsWith ( s2 ) ; }
51511	public static void dumbTradingLogic ( String company , int numberOfShares , PortfolioService portfolio , Map < String , Object > quote ) { JsonObject json = new JsonObject ( quote ) ; dumbTradingLogic ( company , numberOfShares , portfolio , json ) ; }
51547	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) ; unchecked ( _NULL ) ; }
51553	private void removeSubentry ( Entry entry ) { lock . writeLock ( ) . lock ( ) ; try { if ( ! removeSubEntry ( dn2SubEntry , entry ) ) { removeSubEntry ( dn2CollectiveSubEntry , entry ) ; } } finally { lock . writeLock ( ) . unlock ( ) ; } }
51575	private void updateEmptySearchBackgroundBounds ( ) { if ( mEmptySearchBackground == _NULL ) { return ; } int x = ( getMeasuredWidth ( ) - mEmptySearchBackground . getIntrinsicWidth ( ) ) / _NUM ; int y = mEmptySearchBackgroundTopOffset ; mEmptySearchBackground . setBounds ( x , y , x + mEmptySearchBackground . getIntrinsicWidth ( ) , y + mEmptySearchBackground . getIntrinsicHeight ( ) ) ; }
51584	public void startDocument ( ) throws SAXException { int doc = addNode ( DTM . DOCUMENT_NODE , DTM . DOCUMENT_NODE , DTM . NULL , DTM . NULL , _NUM , _BOOL ) ; m_parents . push ( doc ) ; m_previous = DTM . NULL ; m_contextIndexes . push ( m_prefixMappings . size ( ) ) ; }
51600	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { if ( getPrimaryModel ( ) == _NULL ) { throw new ModelControlException ( _CHAR Primary model is _NULL _CHAR ) ; } if ( choices != _NULL ) { getPrimaryModel ( ) . setSize ( choices . length ) ; } else { getPrimaryModel ( ) . setSize ( _NUM ) ; } super . beginDisplay ( event ) ; resetTileIndex ( ) ; }
51625	public static float spToPx ( float sp ) { float scaledDensity = Resources . getSystem ( ) . getDisplayMetrics ( ) . scaledDensity ; return Math . round ( sp * scaledDensity ) ; }
51630	private String stripTags ( String string ) { return string . replaceAll ( _CHAR < [ ^ > ] * > _CHAR , _CHAR _CHAR ) ; }
51632	public static JMenuItem createMenuItem ( LocalizableMessage msg ) { return new JMenuItem ( msg . toString ( ) ) ; }
51636	@ Override protected void doHead ( HttpServletRequest request , HttpServletResponse response ) throws IOException , ServletException { boolean serveContent = DispatcherType . INCLUDE . equals ( request . getDispatcherType ( ) ) ; serveResource ( request , response , serveContent , fileEncoding ) ; }
51645	public void update ( byte [ ] input , int inOff , int length ) { digest . update ( input , inOff , length ) ; }
51651	public boolean hasFirst ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
51674	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case MENU_HELP : help ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
51679	@ Override public String toString ( ) { return _CHAR Action : _CHAR + this . action ; }
51726	public boolean isAscending ( ) { return isAscending ; }
51742	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
51754	public boolean validate ( String value ) { try { Integer . parseInt ( value ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
51816	private BigDecimal convertIntToBigDecimal ( int quoteParam ) { BigDecimal quoteParamBigDecimal = new BigDecimal ( quoteParam ) . divide ( new BigDecimal ( _NUM ) , new MathContext ( _NUM , RoundingMode . HALF_DOWN ) ) ; return quoteParamBigDecimal ; }
51822	public boolean isUnusable ( ) { return code == Code . UNUSABLE ; }
51835	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
51844	protected boolean isAttributesModified ( ) { if ( attributes != _NULL ) { return ( attributes . isEmpty ( ) ) ? _BOOL : _BOOL ; } return _BOOL ; }
51859	public static int toRealPosition ( int position , int count ) { position = position - _NUM ; if ( position < _NUM ) { position += count ; } else { position = position % count ; } return position ; }
51875	@ Override protected CBORParser _createParser ( byte [ ] data , int offset , int len , IOContext ctxt ) throws IOException { return new CBORParserBootstrapper ( ctxt , data , offset , len ) . constructParser ( _factoryFeatures , _parserFeatures , _formatParserFeatures , _objectCodec , _byteSymbolCanonicalizer ) ; }
51915	public void removeEnvironment ( String envName ) { NamingResourcesImpl nresources = ( NamingResourcesImpl ) this . resource ; if ( nresources == _NULL ) { return ; } ContextEnvironment env = nresources . findEnvironment ( envName ) ; if ( env == _NULL ) { throw new IllegalArgumentException ( _CHAR Invalid environment name _CHAR_CHAR_CHAR _CHAR ) ; } nresources . removeEnvironment ( envName ) ; }
51921	static boolean isSystemWindows ( ) { return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR ; }
51922	public boolean isNoRetVal ( ) { return noRetVal ; }
51935	public void valueChanged ( TreeSelectionEvent e ) { if ( tree != _NULL ) { if ( tree . getSelectionCount ( ) == _NUM ) lastPath = tree . getSelectionPath ( ) ; else lastPath = _NULL ; } if ( timer != _NULL ) { timer . stop ( ) ; } }
51956	public static void sort ( char [ ] array ) { DualPivotQuicksort . sort ( array ) ; }
51989	public PlaPointFloat add ( PlaPointFloat p_other ) { return new PlaPointFloat ( v_x + p_other . v_x , v_y + p_other . v_y ) ; }
52035	public String toString ( ) { return name ; }
52045	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) ; unchecked ( _NULL ) ; }
52055	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
52063	public static boolean isCli ( ) { return _CHAR _BOOL _CHAR . equals ( System . getProperty ( Constants . CLI_JAVA_PROPERTY ) ) ; }
52071	@ Advice . OnMethodExit public static void exit ( ) { ConnectorImpl . cassandraSetupComplete ( ) ; }
52107	private void fieldInsn ( final int opcode , final Type ownerType , final String name , final Type fieldType ) { mv . visitFieldInsn ( opcode , ownerType . getInternalName ( ) , name , fieldType . getDescriptor ( ) ) ; }
52117	protected boolean isPersistent ( ) { return m_principal != _NULL && m_guid != _NULL && m_guid . getDn ( ) . length ( ) > _NUM ; }
52125	public static void fadeInView ( View view , int duration ) { view . setVisibility ( View . VISIBLE ) ; view . setAlpha ( _NUM ) ; ViewCompat . animate ( view ) . alpha ( _NUM ) . setDuration ( duration ) . setListener ( _NULL ) ; }
52176	public boolean hasExtendedDuration ( ) { return extended ; }
52214	public Object clone ( ) throws CloneNotSupportedException { if ( this instanceof Cloneable ) { return super . clone ( ) ; } else { throw new CloneNotSupportedException ( ) ; } }
52232	public Div add ( Image element ) { childElements . add ( element ) ; return this ; }
52234	public void showContent ( ) { mSlidingMenu . showContent ( ) ; }
52236	public net . aimeizi . person . Person . Builder clearChildrenCount ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
52257	public final boolean isLayered ( ) { return layered ; }
52263	public String toString ( ) { return String . valueOf ( get ( ) ) ; }
52275	void dispatchServerCallback ( TransactInfo transactInfo , Marshallable invokeParam ) { mClientProxy . transact ( transactInfo , invokeParam , _NULL ) ; }
52297	protected static void configureMDC ( Span span ) { MDC . put ( TRACE_ID_MDC_KEY , span . getTraceId ( ) ) ; MDC . put ( SPAN_JSON_MDC_KEY , span . toJSON ( ) ) ; }
52299	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { super . beginDisplay ( event ) ; PWResetUncaughtExceptionModel model = ( PWResetUncaughtExceptionModel ) getModel ( ) ; setErrorMessage ( model . getErrorTitle ( ) , model . getErrorMessage ( ) ) ; }
52301	public boolean isDomainSensitive ( ) { return CollectionUtils . isNotEmpty ( permittedDomains ) || CollectionUtils . isNotEmpty ( restrictedDomains ) ; }
52302	public Document decryptAndReplace ( Document encryptedDoc , java . lang . String certAlias ) throws EncryptionException { return decryptAndReplace ( encryptedDoc , keyProvider . getPrivateKey ( certAlias ) ) ; }
52305	private BufferedReader newFileReader ( final File file ) throws UnsupportedEncodingException , FileNotFoundException { return new BufferedReader ( new InputStreamReader ( new FileInputStream ( file ) , UTF8_ENCODING ) ) ; }
52322	public void addResult ( AMIdentity id , Map attrs ) { searchResults . add ( id ) ; resultsMap . put ( id , attrs ) ; }
52342	@ Override public void addContainerListener ( ContainerListener listener ) { listeners . add ( listener ) ; }
52347	public void invokeInterface ( final Type owner , final Method method ) { invokeInsn ( Opcodes . INVOKEINTERFACE , owner , method , _BOOL ) ; }
52365	public boolean replicateSchema ( ) { return replicateSchema ; }
52378	public boolean isInSphere ( Vector origin , double radius ) { return ( NumberConversions . square ( origin . x - x ) + NumberConversions . square ( origin . y - y ) + NumberConversions . square ( origin . z - z ) ) <= NumberConversions . square ( radius ) ; }
52401	public static JLabel createDefaultLabel ( LocalizableMessage text ) { JLabel label = new JLabel ( text . toString ( ) ) ; label . setFont ( ColorAndFontConstants . defaultFont ) ; label . setForeground ( ColorAndFontConstants . foreground ) ; return label ; }
52403	@ Override public boolean hasSubOrdinates ( ) { return hasSubOrdinates ; }
52468	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { super . beginDisplay ( event ) ; PWResetInvalidURLModel model = ( PWResetInvalidURLModel ) getModel ( ) ; setErrorMessage ( model . getInvalidURLTitle ( ) , model . getInvalidURLMessage ( ) ) ; }
52476	public Set < String > names ( ) { TreeSet < String > result = new TreeSet < > ( String . CASE_INSENSITIVE_ORDER ) ; for ( int i = _NUM , size = size ( ) ; i < size ; i ++ ) { result . add ( name ( i ) ) ; } return Collections . unmodifiableSet ( result ) ; }
52513	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
52573	@ Override public Class < ? > resolve ( String alias ) { return ALIASES . get ( alias ) ; }
52575	public static int secondaryOrder ( int order ) { return ( order & SECONDARY_ORDER_MASK_ ) >> SECONDARY_ORDER_SHIFT_ ; }
52636	public static void init ( @ NonNull Context context ) { mAppContext = context ; }
52642	boolean isValidProtocolType ( String protocolType ) throws COTException { String classMethod = _CHAR COTManager : isValidProtocolType _CHAR ; if ( ! COTUtils . isValidProtocolType ( protocolType ) ) { debug . error ( classMethod + _CHAR Invalid protocol Type _CHAR + protocolType ) ; String [ ] data = { protocolType } ; throw new COTException ( _CHAR invalidProtocolType _CHAR , data ) ; } return _BOOL ; }
52674	public ScenarioBuilder tag ( String tagName ) { return tag ( tagName , _BOOL ) ; }
52677	public static void main ( String argv [ ] ) { System . out . println ( getVersion ( ) ) ; }
52727	public void types ( String types [ ] ) { this . types = types ; }
52740	public static void sort ( int [ ] array ) { DualPivotQuicksort . sort ( array ) ; }
52748	public Object put ( Object key , Object value ) { Object oldValue = _NULL ; synchronized ( map ) { oldValue = map . put ( key , value ) ; if ( oldValue != _NULL ) { removeElement ( key ) ; } addElement ( key ) ; } return oldValue ; }
52759	public DTMAxisIterator reset ( ) { if ( _isConstant ) { _currentNode = _startNode ; return resetPosition ( ) ; } else { final boolean temp = _isRestartable ; _isRestartable = _BOOL ; setStartNode ( _startNode ) ; _isRestartable = temp ; } return this ; }
52763	public ConnectionParameters hostName ( String hostName ) { this . hostName = hostName ; return this ; }
52769	public String toString ( ) { return getStringValue ( ) ; }
52778	public synchronized StringBuffer reverse ( ) { reverse0 ( ) ; return this ; }
52819	public void addMessageDestination ( MessageDestination md ) { synchronized ( messageDestinations ) { messageDestinations . put ( md . getName ( ) , md ) ; } fireContainerEvent ( _CHAR addMessageDestination _CHAR , md . getName ( ) ) ; }
52832	private static void reverseRange ( Object [ ] a , int lo , int hi ) { hi -- ; while ( lo < hi ) { Object t = a [ lo ] ; a [ lo ++ ] = a [ hi ] ; a [ hi -- ] = t ; } }
52838	public int size ( ) { return methods . size ( ) ; }
52842	public void clear ( ) { initialize ( ) ; }
52847	public KeyStoreBuilder withKeyStoreFile ( final File keyStoreFile ) throws FileNotFoundException { return withInputStream ( new FileInputStream ( keyStoreFile ) ) ; }
52889	@ Override public Foo fetchFooByUuidAndGroupId ( String uuid , long groupId ) { return fooPersistence . fetchByUUID_G ( uuid , groupId ) ; }
52919	public boolean isBorderOpaque ( ) { return _BOOL ; }
52929	private void stopThreadDump ( ) { if ( currentRecord . getRecordProperties ( ) . isThreadDumpEnabled ( ) ) { currentScheduledThreadDump . cancel ( _BOOL ) ; } }
52932	private boolean isInvokeBasic ( Name name ) { if ( name . function == _NULL ) return _BOOL ; if ( name . arguments . length < _NUM ) return _BOOL ; MemberName member = name . function . member ( ) ; return memberRefersTo ( member , MethodHandle . class , _CHAR invokeBasic _CHAR ) && ! member . isPublic ( ) && ! member . isStatic ( ) ; }
52935	@ DataProvider ( name = _CHAR createDeleteData _CHAR ) public Object [ ] [ ] createDeleteData ( ) { List < Attribute > entryAttrList = getEntryAttributes ( ) ; return new Object [ ] [ ] { { _CHAR dc = com _CHAR , entryAttrList , _BOOL } , { _CHAR dc = delete , dc = an , dc = entry , dc = with , dc = a , dc = long dn _CHAR , _NULL , _BOOL } } ; }
52936	static void stringToPacket ( String s , DatagramPacket packet ) { byte [ ] bytes = s . getBytes ( ) ; System . arraycopy ( bytes , _NUM , packet . getData ( ) , _NUM , bytes . length ) ; packet . setLength ( bytes . length ) ; }
52970	public Set < Triangle > neighbors ( Triangle triangle ) { return triGraph . neighbors ( triangle ) ; }
52976	public void endRow ( ) { }
53002	public Pnt isOutside ( Pnt [ ] simplex ) { int [ ] result = this . relation ( simplex ) ; for ( int i = _NUM ; i < result . length ; i ++ ) { if ( result [ i ] > _NUM ) return simplex [ i ] ; } return _NULL ; }
53013	public static void sort ( short [ ] array ) { DualPivotQuicksort . sort ( array ) ; }
53051	private void adjustCaret ( MouseEvent e ) { if ( ( e . getModifiers ( ) & ActionEvent . SHIFT_MASK ) != _NUM && getDot ( ) != - _NUM ) { moveCaret ( e ) ; } else if ( ! e . isPopupTrigger ( ) ) { positionCaret ( e ) ; } }
53062	public String toString ( ) { return name ; }
53103	@ SideOnly ( Side . CLIENT ) public static void sendSpamlessMessage ( int messageID , ITextComponent message ) { Minecraft . getMinecraft ( ) . ingameGUI . getChatGUI ( ) . printChatMessageWithOptionalDeletion ( message , messageID ) ; }
53110	public static boolean equal ( Object a , Object b ) { return a == b || ( a != _NULL && a . equals ( b ) ) ; }
53112	public static IntegerArgument connectTimeOutHiddenArgument ( ) throws ArgumentException { return connectTimeOutArgument ( _BOOL ) ; }
53126	public int at ( int index ) { if ( index < _NUM || index >= sizeInBits ) { throw new IllegalArgumentException ( _CHAR Bad index : _CHAR + index ) ; } int value = array [ index >> _NUM ] & _NUM ; return ( value >> ( _NUM - ( index & _NUM ) ) ) & _NUM ; }
53144	public final HashCode append ( int value ) { hashCode = combine ( hashCode , value ) ; return this ; }
53170	public boolean hasUserAttributeSchema ( String serviceName ) { return hasAttributeSchema ( serviceName , SchemaType . USER ) ; }
53174	public boolean more ( ) { return pos < in . length ( ) ; }
53181	public int hashCode ( ) { return rp == _NULL ? m : m + rp . hashCode ( ) ; }
53183	private static void assertFieldName ( String fieldName ) throws XMPException { if ( fieldName == _NULL || fieldName . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty f name _CHAR , XMPError . BADXPATH ) ; } }
53209	boolean isActiveCOT ( String cotStatus ) { return ( cotStatus != _NULL && cotStatus . equalsIgnoreCase ( COTConstants . ACTIVE ) ) ; }
53231	public boolean isSelected ( ) { return selected ; }
53246	public static void fill ( long [ ] array , long value ) { for ( int i = _NUM ; i < array . length ; i ++ ) { array [ i ] = value ; } }
53253	public long scheduledExecutionTime ( ) { if ( expired ) { return - _NUM ; } else { return time . getTime ( ) ; } }
53254	private boolean ensureBleExists ( ) { if ( ! getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_BLUETOOTH_LE ) ) { Toast . makeText ( this , R . string . no_ble , Toast . LENGTH_LONG ) . show ( ) ; return _BOOL ; } return _BOOL ; }
53264	public ParameterBlock add ( char c ) { return add ( new Character ( c ) ) ; }
53267	private BigDecimal convertIntToBigDecimal ( int quoteParam ) { BigDecimal quoteParamBigDecimal = new BigDecimal ( quoteParam ) . divide ( new BigDecimal ( _NUM ) , new MathContext ( _NUM , RoundingMode . HALF_DOWN ) ) ; return quoteParamBigDecimal ; }
53268	public Executor env ( Map < String , String > env ) { this . env = env ; return this ; }
53284	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SecurityCollection [ _CHAR ) ; sb . append ( name ) ; if ( description != _NULL ) { sb . append ( _CHAR , _CHAR ) ; sb . append ( description ) ; } sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
53300	public SAML2ConfigBuilder encryptionKeyAlias ( String encryptionKeyAlias ) { this . encryptionKeyAlias = encryptionKeyAlias ; return this ; }
53327	public static IOFileFilter and ( IOFileFilter ... filters ) { return new AndFileFilter ( toList ( filters ) ) ; }
53360	public ParameterBlock add ( Object obj ) { parameters . addElement ( obj ) ; return this ; }
53383	protected void shutdown ( ) throws IOException { shutdownEntry ( ) ; if ( connection . isOpen ( ) ) connection . shutdown ( ) ; }
53391	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
53435	public boolean isDone ( ) { return index >= ctrlpts . length ; }
53441	void young ( ) { mYoung = _BOOL ; }
53445	public String encode ( String pString ) { return soundex ( pString ) ; }
53448	private static Object maskNull ( Object key ) { return ( key == _NULL ) ? NULL_KEY : key ; }
53482	void dispatchClientCallback ( TransactInfo transactInfo , String paramMarshalling ) { mClientProxy . dispatchClientCallback ( transactInfo , paramMarshalling ) ; }
53484	public void deleteLabeledUri ( String luri ) throws SSOException , SMSException { validateServiceConfigImpl ( ) ; SMSEntry e = sc . getSMSEntry ( ) ; sc . setLabeledUri ( _NULL ) ; e . removeAttribute ( SMSEntry . ATTR_LABELED_URI , luri ) ; saveSMSEntry ( e ) ; }
53495	private String buildJwtSession ( ) { JwtClaimsSetBuilder claimsBuilder = factory . claims ( ) ; claimsBuilder . claims ( this ) ; return factory . jwe ( pair . getPublic ( ) ) . headers ( ) . alg ( JweAlgorithm . RSAES_PKCS1_V1_5 ) . enc ( EncryptionMethod . A128CBC_HS256 ) . done ( ) . claims ( claimsBuilder . build ( ) ) . signedWith ( signingHandler , JwsAlgorithm . HS256 ) . build ( ) ; }
53499	static private String generateTokenID ( String resource ) { if ( StringUtils . isBlank ( resource ) ) { return _NULL ; } return Hash . hash ( resource + RandomStringUtils . randomAlphanumeric ( _NUM ) ) ; }
53504	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
53520	public void addColumnModelListener ( TableColumnModelListener x ) { listenerList . add ( TableColumnModelListener . class , x ) ; }
53531	@ Fluent public Job onFailureAttempt ( Handler < JsonObject > failureHandler ) { this . on ( _CHAR failed_attempt _CHAR , _NULL ) ; return this ; }
53547	public void invokeVirtual ( final Type owner , final Method method ) { invokeInsn ( Opcodes . INVOKEVIRTUAL , owner , method , _BOOL ) ; }
53570	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setMavenLike ( _BOOL ) ; unchecked ( _NULL ) ; }
53577	public int startY ( ) { return ( int ) ( surfaceSize . y * ( maxY - viewportRect . bottom ) / ( maxY - minY ) ) ; }
53593	public void addPaymentRecord ( Payment payment , Handler < AsyncResult < Void >> resultHandler ) { delegate . addPaymentRecord ( payment , resultHandler ) ; }
53606	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( resourceBundleName != _NULL ) { try { rb = ResourceBundle . getBundle ( resourceBundleName ) ; } catch ( MissingResourceException e ) { rb = _NULL ; } } }
53611	public String documentationWikiUrl ( ) { return properties . getProperty ( _CHAR doc . wiki . url _CHAR ) ; }
53617	public static String removeBusinessKeyFromRequest ( CreateRequest request ) { return ( String ) ( request . getContent ( ) . isNull ( ) ? _NULL : request . getContent ( ) . expect ( Map . class ) . asMap ( ) . remove ( _CHAR _businessKey _CHAR ) ) ; }
53653	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
53661	public boolean isDone ( ) { return index > _NUM ; }
53701	public MappedMember findMethodByNameAndDesc ( String name , String desc , boolean useOriginalName ) { for ( MappedMember mm : getMethods ( ) ) { if ( mm . getDesc ( ) . equals ( desc ) && useOriginalName ? mm . getOriginalName ( ) . equals ( name ) : mm . getNewName ( ) . equals ( name ) ) { return mm ; } } return _NULL ; }
53707	public AnnotationVisitor visitAnnotation ( String name , String desc ) { if ( av != _NULL ) { return av . visitAnnotation ( name , desc ) ; } return _NULL ; }
53717	public void removeSpan ( Object what ) { if ( mIndexOfSpan == _NULL ) return ; Integer i = mIndexOfSpan . remove ( what ) ; if ( i != _NULL ) { removeSpan ( i . intValue ( ) ) ; } }
53730	public void init ( int mode , byte [ ] key , byte [ ] iv ) { context = OpenSslNative . init ( context , mode , algorithm , padding , key , iv ) ; }
53732	public void alist_append_to ( PlaLineIntAlist dest , int src_pos ) { int poly_len = plaline_len ( ) ; for ( int index = src_pos ; index < poly_len ; index ++ ) dest . add ( plaline ( index ) ) ; }
53744	public static void fill ( float [ ] array , float value ) { for ( int i = _NUM ; i < array . length ; i ++ ) { array [ i ] = value ; } }
53760	public boolean hasBadge ( @ IdRes final int itemId ) { return map . contains ( itemId ) ; }
53824	protected ByteVector write ( final ClassWriter cw , final byte [ ] code , final int len , final int maxStack , final int maxLocals ) { ByteVector v = new ByteVector ( ) ; v . data = value ; v . length = value . length ; return v ; }
53826	public final void applySetting ( DocumentBuilderFactory factory ) { strategy . applySetting ( factory , value ) ; }
53835	public static void show ( Context context , int title , int message ) { show ( context , context . getString ( title ) , context . getString ( message ) ) ; }
53837	public void addPermittedDomains ( Collection < String > domainNames ) { if ( domainNames == _NULL ) { return ; } for ( String domainName : domainNames ) { addPermittedDomain ( domainName ) ; } }
53853	public int size ( ) { return parts . size ( ) ; }
53854	public String toString ( ) { return getName ( ) ; }
53856	private String findPropertiesFile ( final String directory ) { final File f = new File ( directory , DEFAULT_OPENDJ_PROPERTIES_FILE_NAME + DEFAULT_OPENDJ_PROPERTIES_FILE_EXTENSION ) ; if ( f . exists ( ) && f . canRead ( ) ) { return f . getAbsolutePath ( ) ; } return _NULL ; }
53880	public static String collapseWhitespace ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . trim ( ) . replaceAll ( _CHAR \\ s \\ s + _CHAR , _CHAR _CHAR ) ; }
53888	private void writeObject ( ObjectOutputStream p_stream ) throws IOException { p_stream . defaultWriteObject ( ) ; item_color_table . write_object ( p_stream ) ; other_color_table . write_object ( p_stream ) ; }
53890	public void focusLost ( FocusEvent e ) { }
53891	@ Override public String toString ( ) { return asString ; }
53898	public static Document newDocument ( ) throws ParserConfigurationException { return getSafeDocumentBuilder ( validating ) . newDocument ( ) ; }
53901	@ Override public Promise < ResourceResponse , ResourceException > filterRead ( Context context , ReadRequest request , RequestHandler next ) { return transform ( next . handleRead ( context , request ) ) ; }
53929	public boolean checkServerUp ( String serverID ) { return servicesClusterMonitorHandler . checkServerUp ( serverID ) ; }
53956	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
53968	@ Override protected JsonParser _createParser ( Reader r , IOContext ctxt ) throws IOException { return _nonByteSource ( ) ; }
53970	public void endDocument ( ) throws org . xml . sax . SAXException { flushPending ( ) ; if ( m_doIndent && ! m_isprevtext ) { try { outputLineSep ( ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } } flushWriter ( ) ; if ( m_tracer != _NULL ) super . fireEndDoc ( ) ; }
53976	public boolean isEmpty ( ) { return _BOOL ; }
53979	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case MENU_HELP : help ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
53990	public boolean isInstalled ( ) { return isInstalled ; }
54006	public int type ( ) { return type ; }
54051	public boolean is_diagonal_right ( ) { return dir_x == dir_y ; }
54068	private String fieldComment ( String name , Field field , PythonImportHandler importHandler , String paramComment ) { if ( paramComment == _NULL ) { paramComment = getSphinxifiedScopedDescription ( field ) ; } return fieldComment ( name , fieldTypeCardinalityComment ( field , importHandler ) , paramComment ) ; }
54083	public boolean isEmpty ( ) { return map . isEmpty ( ) ; }
54102	public void visitTypeVariable ( String name ) { }
54145	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
54152	public void draw ( Graphics p_graphics ) { }
54198	private K lowestKey ( ) { ConcurrentSkipListMap . Node < K , V > n = loNode ( ) ; if ( isBeforeEnd ( n ) ) return n . key ; else throw new NoSuchElementException ( ) ; }
54209	public boolean isMonitoringRunning ( ) { return entitlementConfiguration . isMonitoringRunning ( ) ; }
54237	public TelephoneNumber parseTelephoneNumber ( String telephone_number ) throws ParseException { return new URLParser ( telephone_number ) . parseTelephoneNumber ( _BOOL ) ; }
54243	void removeEntry ( IndexBuffer buffer , EntryID entryID , Entry entry ) throws StorageRuntimeException , DirectoryException { for ( MatchingRuleIndex index : indexIdToIndexes . values ( ) ) { for ( ByteString key : index . indexEntry ( entry ) ) { buffer . remove ( index , key , entryID ) ; } } }
54274	public boolean isDone ( ) { return ( index > _NUM ) ; }
54295	public static NullOutputStream instance ( ) { return instance ; }
54302	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
54343	public final double distance ( ) { return to_float ( ) . distance ( ) ; }
54370	public void endElement ( StylesheetHandler handler , String uri , String localName , String rawName ) throws org . xml . sax . SAXException { handler . popElemTemplateElement ( ) ; }
54376	public static void addToParserTable ( String headerName , Class < ? extends HeaderParser > parserClass ) { parserTable . put ( headerName . toLowerCase ( ) , parserClass ) ; }
54380	public ScenarioBuilder tagLight ( String tagName ) { return tag ( tagName , _BOOL ) ; }
54392	private void validateException ( InitializationException ie , LocalizableMessage message ) { if ( message == _NULL ) { assertNull ( ie . getMessageObject ( ) ) ; } else { assertEquals ( ie . getMessageObject ( ) , message ) ; } }
54408	public PdfCanvas endText ( ) { contentStream . getOutputStream ( ) . writeBytes ( ET ) ; return this ; }
54411	@ DataProvider ( name = _CHAR validStatements _CHAR ) public Object [ ] [ ] valids ( ) { return new Object [ ] [ ] { { _CHAR add = st : ( st =* ) , del = st : ( st =* ) _CHAR } , { _CHAR add = st : ( st =* ) && cn : ( cn = c * ) , del = st : ( st =* ) && sn : ( sn = s * ) _CHAR } , { _CHAR add = st : ( st =* ) _CHAR } , { _CHAR del = st : ( st =* ) _CHAR } } ; }
54415	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo fetchFooByUuidAndGroupId ( java . lang . String uuid , long groupId ) { return _fooLocalService . fetchFooByUuidAndGroupId ( uuid , groupId ) ; }
54434	public boolean containsProvider ( String providerID ) { SPDescriptorType spDescriptor = _NULL ; try { spDescriptor = idffMetaManager . getSPDescriptor ( ROOT_REALM , providerID ) ; } catch ( IDFFMetaException imex ) { ProviderUtil . debug . error ( _CHAR IDFFProviderManager . containsProvider : _CHAR , imex ) ; } return ( spDescriptor != _NULL ) ; }
54461	@ Override public void addPropertyChangeListener ( PropertyChangeListener listener ) { support . addPropertyChangeListener ( listener ) ; }
54469	public void sendEvent ( InternalSession internalSession , SessionEventType eventType ) { sessionNotificationSender . sendEvent ( internalSession , eventType ) ; }
54476	@ Override public void unparsedEntityDecl ( String name , String publicId , String systemId , String notation ) { if ( saxLog . isDebugEnabled ( ) ) { saxLog . debug ( _CHAR unparsedEntityDecl ( _CHAR + name + _CHAR , _CHAR + publicId + _CHAR , _CHAR + systemId + _CHAR , _CHAR + notation + _CHAR ) _CHAR ) ; } }
54484	public Builder rootCa ( Certificate rootCa ) { this . rootCa = rootCa ; return this ; }
54488	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Throwable cause = super . getCause ( ) ; if ( ! ( cause instanceof IOException ) ) throw new InvalidObjectException ( _CHAR Cause must be an IOException _CHAR ) ; }
54489	public final int yylength ( ) { return zzMarkedPos - zzStartRead ; }
54491	@ Override public void paintComponent ( Graphics p_g ) { super . paintComponent ( p_g ) ; if ( itera_board != _NULL ) itera_board . draw ( p_g ) ; if ( custom_cursor != _NULL ) custom_cursor . draw ( p_g ) ; }
54501	public boolean hasAuthenticationContext ( ) { return _NULL != authContext ; }
54529	public boolean validate ( ) { if ( complete_expansion_rooms == _NULL ) return _BOOL ; for ( ExpandRoomFreespaceComplete curr_room : complete_expansion_rooms ) { if ( ! curr_room . validate ( this ) ) return _BOOL ; } return _BOOL ; }
54548	public void regenerate ( ) { if ( code != _NULL ) { try { QRCodeWriter qc = new QRCodeWriter ( ) ; bm = qc . encode ( code , _NUM , _NUM , hints ) ; } catch ( WriterException ex ) { throw new IllegalArgumentException ( ex . getMessage ( ) , ex . getCause ( ) ) ; } } }
54575	public static void resetCurrentFileList ( String logName ) { currentFileList . remove ( PREFIX + logName ) ; }
54576	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; return ( obj instanceof DialogState ) && ( ( DialogState ) obj ) . m_dialogState == m_dialogState ; }
54627	@ Provides Activity provideActivity ( ) { return mActivity ; }
54670	public void removeAll ( Integer [ ] array ) { for ( int i = ( array . length - _NUM ) ; i >= _NUM ; -- i ) { list . remove ( array [ i ] . intValue ( ) ) ; } }
54689	public boolean isNavBarTintEnabled ( ) { return mNavBarTintEnabled ; }
54701	public void initialize ( Map configurationMap ) { }
54728	@ Override public boolean containsValue ( Object value ) { if ( value == _NULL ) { value = NULL_OBJECT ; } for ( int i = _NUM ; i < elementData . length ; i = i + _NUM ) { if ( elementData [ i ] == value ) { return _BOOL ; } } return _BOOL ; }
54749	public boolean acquireMemory ( long size ) { return allowOvercommit || reservedMemory . tryAcquire ( ( int ) ( size / ONE_MEGABYTE ) ) ; }
54752	public StringBuilder encodeBody ( StringBuilder buffer ) { return buffer . append ( getLanguageTag ( ) ) ; }
54785	@ Before public void init ( ) throws IOException { repository = new FileRepositoryBuilder ( ) . setGitDir ( scenario . getRepositoryLocation ( ) ) . build ( ) ; git = new Git ( repository ) ; versionCalculator = GitVersionCalculator . location ( scenario . getRepositoryLocation ( ) ) . setAutoIncrementPatch ( _BOOL ) ; unchecked ( _NULL ) ; }
54883	public Observable < Payment > retrievePaymentRecordObservable ( String payId ) { io . vertx . rx . java . ObservableFuture < Payment > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrievePaymentRecord ( payId , resultHandler . toHandler ( ) ) ; return resultHandler ; }
54889	private static void debugPrintln ( String msg ) { if ( debug ) { System . err . println ( _CHAR JAXP : _CHAR + msg ) ; } }
54896	public static void convert ( RandomAccessFileOrArray input , OutputStream output ) throws java . io . IOException { Pfm2afm p = new Pfm2afm ( input , output ) ; p . openpfm ( ) ; p . putheader ( ) ; p . putchartab ( ) ; p . putkerntab ( ) ; p . puttrailer ( ) ; p . output . flush ( ) ; }
54929	public boolean isPartialReturn ( ) { return partialReturn ; }
54931	public int count ( ) { return padstack_list . size ( ) ; }
54936	public final boolean contains ( String s ) { if ( _NULL == s ) return _BOOL ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { if ( m_map [ i ] . equals ( s ) ) return _BOOL ; } return _BOOL ; }
54939	public boolean is_perpendicular ( PlaLineInt p_other ) { return direction ( ) . projection ( p_other . direction ( ) ) == Signum . ZERO ; }
54943	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
54992	private static void checkCanReadConfig ( ConnectionWrapper conn ) throws IOException { SearchRequest request = newSearchRequest ( _CHAR cn = config _CHAR , BASE_OBJECT , _CHAR objectclass =* _CHAR , NO_ATTRIBUTES ) ; conn . getConnection ( ) . searchSingleEntry ( request ) ; }
55000	public static Set wrapInSet ( Object obj ) { Set set = _NULL ; if ( obj != _NULL ) { set = new HashSet ( _NUM ) ; set . add ( obj ) ; } else { set = Collections . EMPTY_SET ; } return set ; }
55018	@ Override public boolean isOpen ( ) { return sc . isOpen ( ) ; }
55049	public Builder withFade ( Color color ) throws IllegalArgumentException { Validate . notNull ( color , _CHAR Can not have _NULL color _CHAR ) ; if ( fadeColors == _NULL ) { fadeColors = ImmutableList . builder ( ) ; } fadeColors . add ( color ) ; return this ; }
55059	public RequirementsBuilder addProperty ( String name , String description ) { addProperty ( name , _CHAR string _CHAR , description ) ; return this ; }
55068	public static String decodeAsUTF8String ( String s ) { byte [ ] decodedValue = decode ( s ) ; if ( decodedValue != _NULL ) { return new String ( decode ( s ) , Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ; } else { return _NULL ; } }
55071	public int size ( ) { return size ; }
55074	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
55075	public static long fromInet4SocketAddressAndInode ( final InetSocketAddress socketAddress , final int inode ) { return overlayInode ( fromInet4SocketAddress ( socketAddress ) , inode ) ; }
55079	public < M extends Configuration > void deregisterDeleteListener ( InstantiableRelationDefinition < ? , M > d , ServerManagedObjectDeleteListener < M > listener ) { validateRelationDefinition ( d ) ; DN baseDN = DNBuilder . create ( path , d ) ; deregisterDeleteListener ( baseDN , listener ) ; }
55093	protected void pathWasCollapsed ( TreePath path ) { if ( tree != _NULL ) { tree . fireTreeCollapsed ( path ) ; } }
55146	public Image scale ( float horizontalScaling , float verticalScaling ) { setProperty ( Property . HORIZONTAL_SCALING , horizontalScaling ) ; setProperty ( Property . VERTICAL_SCALING , verticalScaling ) ; return this ; }
55163	protected void initializeRequestContext ( RequestContext requestContext ) { super . initializeRequestContext ( requestContext ) ; ViewBeanManager viewBeanManager = new ViewBeanManager ( requestContext , PACKAGE_NAME ) ; ( ( RequestContextImpl ) requestContext ) . setViewBeanManager ( viewBeanManager ) ; }
55182	public boolean isLeaf ( ) { return getModel ( ) . isLeaf ( this . getValue ( ) ) ; }
55186	public synchronized void makeVisible ( int index ) { visibleIndex = index ; ListPeer peer = ( ListPeer ) this . peer ; if ( peer != _NULL ) { peer . makeVisible ( index ) ; } }
55199	public void clear ( ) { int max = bits . length ; for ( int i = _NUM ; i < max ; i ++ ) { bits [ i ] = _NUM ; } }
55253	public static boolean isEmpty ( Collection < ? > collection ) { return collection == _NULL || collection . isEmpty ( ) ; }
55259	public final HashCode append ( boolean value ) { hashCode = combine ( hashCode , value ) ; return this ; }
55265	public void write_value ( java . io . Serializable value ) { throw new org . omg . CORBA . NO_IMPLEMENT ( ) ; }
55275	public boolean passwordIsPreEncoded ( ByteString passwordValue ) { return passwordPolicy . isAuthPasswordSyntax ( ) ? AuthPasswordSyntax . isEncoded ( passwordValue ) : UserPasswordSyntax . isEncoded ( passwordValue ) ; }
55293	public static Boolean valueOf ( String string ) { return parseBoolean ( string ) ? Boolean . TRUE : Boolean . FALSE ; }
55304	private void send ( ) { vertx . eventBus ( ) . publish ( GeneratorConfigVerticle . ADDRESS , toJson ( ) ) ; }
55309	boolean isTLSEnabled ( ) { synchronized ( stateLock ) { final FilterChain currentFilterChain = ( FilterChain ) connection . getProcessor ( ) ; for ( final Filter filter : currentFilterChain ) { if ( filter instanceof SSLFilter ) { return _BOOL ; } } return _BOOL ; } }
55318	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
55330	public DSInfo toDSInfo ( ) { return new DSInfo ( serverId , serverURL , getReplicationServerId ( ) , generationId , status , assuredFlag , assuredMode , safeDataLevel , groupId , refUrls , eclIncludes , eclIncludesForDeletes , getProtocolVersion ( ) ) ; }
55339	public final HashCode append ( Object value ) { hashCode = combine ( hashCode , value ) ; return this ; }
55359	private long triggerTime ( long delay , TimeUnit unit ) { return triggerTime ( unit . toNanos ( ( delay < _NUM ) ? _NUM : delay ) ) ; }
55388	public Future < Job > inactive ( ) { return this . state ( JobState . INACTIVE ) ; }
55404	protected void alert ( byte level , byte description ) { if ( logger != _NULL ) { logger . println ( _CHAR SSLRecordProtocol . allert : _CHAR + level + _CHAR _CHAR + description ) ; } alertProtocol . alert ( level , description ) ; }
55412	public boolean containsAttributes ( AttributeSet attrs ) { return attributes . containsAttributes ( attrs ) ; }
55430	public synchronized int hashCode ( ) { return startMonth ^ startDay ^ startDayOfWeek ^ startTime ^ endMonth ^ endDay ^ endDayOfWeek ^ endTime ^ rawOffset ; }
55445	public boolean isDone ( ) { return ( index > _NUM ) ; }
55464	public boolean isSelectionEmpty ( ) { return ( selection == _NULL || selection . length == _NUM ) ; }
55470	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
55471	public Object clone ( ) throws CloneNotSupportedException { if ( this instanceof Cloneable ) { return super . clone ( ) ; } else { throw new CloneNotSupportedException ( ) ; } }
55473	public void createEntityConfig ( String realm , EntityConfigElement config ) throws SAML2MetaException { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR SAML2MetaManager . creatEntityConfig : called . '' ) ; } createEntity ( realm , _NULL , config ) ; }
55487	public byte [ ] close ( ) { Fax4PostEncode ( ) ; return outBuf . toByteArray ( ) ; }
55490	public static final long fileTimeToUnixTime ( FileTime ftime ) { return ftime . to ( TimeUnit . SECONDS ) ; }
55509	protected void writeLeaf ( Element elem ) throws IOException { indent ( ) ; if ( elem . getName ( ) == StyleConstants . IconElementName ) { writeImage ( elem ) ; } else if ( elem . getName ( ) == StyleConstants . ComponentElementName ) { writeComponent ( elem ) ; } }
55511	private void writeRecords ( int blockSize , List < Record < Integer , Integer >> records ) throws ChangelogException { try ( BlockLogWriter < Integer , Integer > writer = newWriter ( blockSize ) ) { for ( Record < Integer , Integer > record : records ) { writer . write ( record ) ; } } }
55515	public boolean isBorderOpaque ( ) { return _BOOL ; }
55567	public void startElement ( StylesheetHandler handler , String uri , String localName , String rawName , Attributes attributes ) throws org . xml . sax . SAXException { if ( m_savedLastOrder == _NULL ) m_savedLastOrder = new IntStack ( ) ; m_savedLastOrder . push ( getElemDef ( ) . getLastOrder ( ) ) ; getElemDef ( ) . setLastOrder ( - _NUM ) ; }
55588	public static int dpToPx ( int dp ) { float density = Resources . getSystem ( ) . getDisplayMetrics ( ) . density ; return Math . round ( dp * density ) ; }
55595	public boolean isPopupVisible ( JComboBox c ) { return popup . isVisible ( ) ; }
55597	void addControls ( Request request ) { if ( sortControl != _NULL && request instanceof SearchRequest ) { request . addControl ( sortControl ) ; } if ( followReferralsControl != _NULL ) { request . addControl ( followReferralsControl ) ; } }
55626	public void show_layer_name ( BrdLayer p_layer ) { if ( write_protected ) return ; statusPanel . current_layer . setText ( active_layer_string + p_layer . name ) ; }
55628	public void transform ( Source xmlSource , Result outputTarget , boolean shouldRelease ) throws TransformerException { synchronized ( m_reentryGuard ) { SerializationHandler xoh = createSerializationHandler ( outputTarget ) ; this . setSerializationHandler ( xoh ) ; m_outputTarget = outputTarget ; transform ( xmlSource , shouldRelease ) ; } }
55682	public final HashCode append ( float value ) { hashCode = combine ( hashCode , value ) ; return this ; }
55707	boolean canJumpInto ( ) { switch ( kind ) { case Block : case Statement : case Switch : case Lambda : return _BOOL ; } return _BOOL ; }
55708	@ Override public Foo fetchFooByUuidAndGroupId ( String uuid , long groupId ) { return fooPersistence . fetchByUUID_G ( uuid , groupId ) ; }
55727	public int rtf ( XPathContext support ) { DTM frag = support . createDocumentFragment ( ) ; frag . appendTextChild ( str ( ) ) ; return frag . getDocument ( ) ; }
55767	public final void popNamespaceContext ( ) { m_prefixResolvers . pop ( ) ; }
55776	public void focusGained ( FocusEvent e ) { }
55791	public int size ( ) { return count ; }
55801	@ DataProvider ( name = _CHAR validStatements _CHAR ) public Object [ ] [ ] valids ( ) { return new Object [ ] [ ] { { _CHAR _NUM _CHAR } , { _CHAR _NUM _CHAR } , { _CHAR _NUM _CHAR } , { _CHAR _NUM _CHAR } , { _CHAR _NUM _CHAR } , { _CHAR _NUM _CHAR } } ; }
55835	public boolean hasNavigtionBar ( ) { return mHasNavigationBar ; }
55840	public ManageNameIDResponse createManageNameIDResponse ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_RESPONSE , value ) ; if ( obj == _NULL ) { return new ManageNameIDResponseImpl ( value ) ; } else { return ( ManageNameIDResponse ) obj ; } }
55844	public void close ( ) throws java . io . IOException { }
55870	private static void debugPrintln ( String msg ) { if ( debug ) { System . err . println ( CLASS_NAME + _CHAR : _CHAR + msg ) ; } }
55873	public InputStream bindStream ( InputStream input ) { InputStream oldValue = m_streams . get ( ) ; m_streams . set ( input ) ; return oldValue ; }
55885	public boolean isSecureProcessing ( ) { return m_isSecureProcessing ; }
55910	public String toString ( ) { return ( toString ( _BOOL , _BOOL ) ) ; }
55915	public void write ( int b ) throws IOException { wbuf [ _NUM ] = ( byte ) b ; write ( wbuf , _NUM , _NUM ) ; }
55969	private void registerAddListener ( DN baseDN , ConfigAddListener adaptor ) throws ConfigException { if ( configRepository . hasEntry ( baseDN ) ) { configRepository . registerAddListener ( baseDN , adaptor ) ; } else { ConfigAddListener delayedListener = new DelayedConfigAddListener ( baseDN , adaptor , configRepository ) ; registerDelayedListener ( baseDN , delayedListener ) ; } }
55986	public static void clear ( ) { stack . get ( ) . clear ( ) ; }
56027	protected void unbindThread ( ClassLoader oldContextClassLoader ) { if ( isUseNaming ( ) ) { ContextBindings . unbindThread ( this , getNamingToken ( ) ) ; } unbind ( _BOOL , oldContextClassLoader ) ; }
56042	public boolean isStatusBarTintEnabled ( ) { return mStatusBarTintEnabled ; }
56056	public static byte [ ] decodeBase64 ( String base64String ) throws XMPException { try { return Base64 . decode ( base64String . getBytes ( ) ) ; } catch ( Throwable e ) { throw new XMPException ( _CHAR Invalid base64 string _CHAR , XMPError . BADVALUE , e ) ; } }
56082	public static boolean isInvalid ( int c ) { return ! isValid ( c ) ; }
56106	private void checkDSReceivedAndAcked ( FakeReplicationDomain fakeRd , int nPacket ) { fakeRd . newSafeReadAssertions ( ) . receivedUpdates ( nPacket ) . receivedUpdatesAcked ( nPacket ) . runAsserts ( ) ; }
56158	public void removeLayoutComponent ( Component c ) { componentConstraints . remove ( c ) ; }
56187	@ DataProvider ( name = _CHAR v6Matches _CHAR ) public Object [ ] [ ] v6MatchData ( ) { return new Object [ ] [ ] { { _CHAR _NUM : _NUM : _NUM : CD30 : _NUM : _NUM : _NUM : _NUM _CHAR } , { _CHAR _NUM : : CD30 : _NUM : _NUM : _NUM : _NUM _CHAR } , { _CHAR _NUM : _NUM : _NUM : cd30 : : _CHAR } } ; }
56194	byte [ ] process ( ) throws java . io . IOException { try { createTableDirectory ( ) ; readLoca ( ) ; flatGlyphs ( ) ; createNewGlyphTables ( ) ; locaToBytes ( ) ; assembleFont ( ) ; return outFont ; } finally { try { rf . close ( ) ; } catch ( Exception ignore ) { } } }
56218	public E poll ( ) { if ( isEmpty ( ) ) { return _NULL ; } E result = elements [ _NUM ] ; removeAt ( _NUM ) ; return result ; }
56225	@ Override public Object clone ( ) { PrivilegeSubject cloned = _NULL ; try { cloned = ( PrivilegeSubject ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( state != _NULL ) { cloned . state = state ; } return cloned ; }
56234	public void clear ( ) { if ( write_protected ) return ; statusPanel . add_message . setText ( EMPTY ) ; clear_add_field ( ) ; statusPanel . current_layer . setText ( EMPTY ) ; }
56237	boolean hasChoiceValues ( ) { return hasChoiceValues ; }
56261	public DSInfo toDSInfo ( ) { return dsInfo ; }
56271	private static int unsignedBytesToInt ( byte b0 , byte b1 , byte b2 ) { return ( unsignedByteToInt ( b0 ) + ( unsignedByteToInt ( b1 ) << _NUM ) ) + ( unsignedByteToInt ( b2 ) << _NUM ) ; }
56332	public boolean hasValue ( ) throws SdpParseException { NameValue nameValue = getAttribute ( ) ; if ( nameValue == _NULL ) return _BOOL ; else { Object value = nameValue . getValueAsObject ( ) ; if ( value == _NULL ) return _BOOL ; else return _BOOL ; } }
