6	public void push ( ) { Map < K , V > newMap = new HashMap < K , V > ( ) ; this . stackList . add ( _NUM , newMap ) ; }
32	private void applyThirdPartyApiSettings ( ) { serviceBuilder . getControlBuilder ( ) . setEnvironment ( ControlConfigUtil . PROD_SERVICE_CONTROL ) ; serviceBuilder . setConfigVersion ( UInt32Value . newBuilder ( ) . setValue ( TOOLS_CONFIG_VERSION_3 ) . build ( ) ) ; }
53	private static boolean isJRE11 ( ) { try { Class c = Class . forName ( _CHAR java . security . AccessController _CHAR ) ; return _BOOL ; } catch ( Exception ex ) { } return _BOOL ; }
61	protected BoardRestoreCommentQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
65	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_FRIENDLY_DEATH_TO_B ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
87	public synchronized final int evictionCount ( ) { return evictionCount ; }
104	public int size ( ) { return players . size ( ) ; }
106	protected BoardEditTopicQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
170	public static boolean isUi ( final MultivaluedMap < String , String > headers ) { return CLIENT_HEADER_VALUE . equals ( headers . getFirst ( CLIENT_HEADER_NAME ) ) && headers . get ( _CHAR referer _CHAR ) != _NULL ; }
192	public DatabaseGetUniversitiesQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
252	public static StatefulHash createStateful ( HashParameters params ) { return HashProviders . best ( params ) . createStateful ( params ) ; }
274	public void takeDown ( ) { synchronized ( System . out ) { System . out . println ( _CHAR Finished ... _CHAR + ( new SimpleDateFormat ( _CHAR yyyy . MM . dd HH : mm : ss _CHAR ) ) . format ( new Date ( ) ) ) ; } }
326	public void write ( DataInput in , int length ) throws IOException { buffer . write ( in , length ) ; }
335	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_ATTACK ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
353	public static Field create ( MessageType parent , FieldDescriptorProto proto , String path , @ Nullable Oneof oneof ) { return new Field ( parent , proto , path , oneof , proto . getName ( ) ) ; }
367	@ Override public boolean ready ( ) throws IOException { return _BOOL ; }
397	public static ULong valueOf ( String value ) throws NumberFormatException { return new ULong ( value ) ; }
415	public static BookKeeperClientBuilder newBuilder ( ) { return new BookKeeperClientBuilder ( ) ; }
425	protected void addChildListeners ( ) { }
468	private void saveWindowPosition ( int appraisalWindowPosition ) { SharedPreferences . Editor edit = sharedPref . edit ( ) ; edit . putInt ( APPRAISAL_WINDOW_POSITION , appraisalWindowPosition ) ; edit . apply ( ) ; }
469	public void resetCropOverlayView ( ) { if ( initializedCropWindow ) { initCropWindow ( mBitmapRect ) ; invalidate ( ) ; } }
512	public static LazyElement parse ( String str ) throws LazyException { if ( str . startsWith ( _CHAR [ _CHAR ) ) { return new LazyArray ( str ) ; } else { return new LazyObject ( str ) ; } }
517	public int removeByCondition ( Delegator delegator , ModelEntity modelEntity , EntityCondition condition ) throws GenericEntityException { if ( modelEntity == _NULL || condition == _NULL ) { return _NUM ; } return genericDAO . deleteByCondition ( delegator , modelEntity , condition ) ; }
525	public SiteAdminGridRow select ( ) { pageNumber . click ( ) ; return this ; }
531	@ Override public boolean hasMoreData ( ) { return signal . hasMoreData ( ) && pitchmarks . hasMoreData ( ) || periodsInMemory - shiftPeriods > _NUM ; }
540	public static boolean interfaceOf ( Object obj , String interfaceName ) throws ClassNotFoundException { Class < ? > interfaceClass = loadClass ( interfaceName ) ; return interfaceOf ( obj , interfaceClass ) ; }
558	public String [ ] upload_file ( byte [ ] file_buff , int offset , int length , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_file ( group_name , file_buff , offset , length , file_ext_name , meta_list ) ; }
577	public List < ShoppingCartItem > items ( ) { List < ShoppingCartItem > result = FastList . newInstance ( ) ; result . addAll ( cartLines ) ; return result ; }
587	@ Controller ( events = EventType . PIN_ADDED ) public void onPinAdded ( WebSocketSession session , Event event ) { reply ( session , event , new Message ( _CHAR Thanks for the pin ! You can find all pinned items under channel details . '' ) ) ; }
598	public void configureWith ( ComponentConfiguration config ) { verifyIsDisplayed ( ) ; configure ( config ) ; confirm ( ) ; }
623	public final String yytext ( ) { return new String ( zzBuffer , zzStartRead , zzMarkedPos - zzStartRead ) ; }
646	public void clear ( ) { m_source . clear ( ) ; super . clear ( ) ; }
647	public void onLeaveZone ( ZoneInstance zoneInstance ) { }
665	public static Date stringToDate ( String formattedDate , SimpleDateFormat dateFormat ) { return new Date ( stringToMilliseconds ( formattedDate , dateFormat ) ) ; }
672	public boolean hasCurrentUser ( ) { return currentUser != _NULL ; }
676	public boolean isPartitionedSpace ( ) { return _clusterInfo . isPartitioned ( ) ; }
693	@ Override public int hashCode ( ) { if ( _NULL != xxHash32 ) { return xxHash32 . hash ( data , _NUM , data . length , _NUM ) ; } int result = Arrays . hashCode ( data ) ; result = _NUM * result ; return result ; }
771	public GroupsGetQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
780	@ Override public int [ ] makeCumulativeTestPoints ( ) { return new int [ ] { - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
816	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_WeaponStatUp_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
832	public boolean isInverted ( ) { return mInverted ; }
862	public void reverse ( ) { reverse ( _NUM , _pos ) ; }
871	public final boolean isLoaded ( I id ) { return objects . asMap ( ) . containsKey ( id ) ; }
899	public ServerServiceDefinition intercept ( BindableService bindableService ) { return ServerInterceptors . intercept ( bindableService , this ) ; }
914	public static boolean validate ( String ruleName ) { return validate ( ruleName , _NULL ) ; }
967	public int addRootRow ( ) { if ( getNodeCount ( ) != _NUM ) { throw new IllegalStateException ( _CHAR Can only add a root node to an empty tree _CHAR ) ; } return ( m_root = addNodeRow ( ) ) ; }
1044	public boolean isExtendedIndexing ( ) { return _isExtendedIndexing ; }
1045	public boolean isValidPoint ( double x , double y ) { if ( x < xval [ _NUM ] || x > xval [ xval . length - _NUM ] || y < yval [ _NUM ] || y > yval [ yval . length - _NUM ] ) { return _BOOL ; } else { return _BOOL ; } }
1057	public boolean isVerbose ( ) { return verbose ; }
1066	public UsersReportQuery report ( UserActor actor , int userId , UsersReportType type ) { return new UsersReportQuery ( getClient ( ) , actor , userId , type ) ; }
1070	public void add ( T item ) { if ( items . add ( item ) ) { notifyDataSetChanged ( ) ; } }
1084	public void addAll ( Map < String , String > map ) { if ( map == _NULL ) { throw new NullPointerException ( _CHAR contexts _CHAR ) ; } addAll ( map . entrySet ( ) ) ; }
1090	public CursorIterator < T > iterate ( final Txn < T > txn , final IteratorType type ) { return iterate ( txn , _NULL , type ) ; }
1091	@ Override public void addIdRef ( String name ) { if ( fIdIdrefChecking ) { super . addIdRef ( name ) ; } }
1101	public static void skipMethods ( @ Nonnull DexReader reader , int count ) { for ( int i = _NUM ; i < count ; i ++ ) { reader . skipUleb128 ( ) ; reader . skipUleb128 ( ) ; reader . skipUleb128 ( ) ; } }
1126	public long available ( ) { return arr . length - pos ; }
1154	public boolean equals ( Datagram other ) { if ( ! ( other instanceof HnmDatagram ) ) return _BOOL ; HnmDatagram otherHnm = ( HnmDatagram ) other ; if ( this . duration != otherHnm . duration ) return _BOOL ; return this . frame . equals ( otherHnm . frame ) ; }
1165	private static void increment ( Map < ResultPoint , Integer > table , ResultPoint key ) { Integer value = table . get ( key ) ; table . put ( key , value == _NULL ? _NUM : value + _NUM ) ; }
1182	@ Override public String toString ( ) { return _CHAR IV : _CHAR + HexTool . toString ( this . iv ) ; }
1206	public synchronized boolean directoryExists ( ) { return directory . exists ( ) ; }
1240	@ Override public boolean isSingleton ( ) { return _BOOL ; }
1305	public String toStringTree ( ) { return toStringTree ( _BOOL ) ; }
1314	public void withRecorderController ( String tag , Consumer < RecorderController > c ) { c . take ( getRecorderController ( ) ) ; }
1324	boolean isPresent ( String name ) { if ( f == _NULL ) { return _BOOL ; } else { return getFeature ( name ) != _NULL ; } }
1327	public static String [ ] commaDelimitedListToStringArray ( String str ) { return delimitedListToStringArray ( str , _CHAR , _CHAR ) ; }
1387	public String makeLiteral ( Object object ) { StringBuilder sb = new StringBuilder ( ) ; makeLiteral ( sb , object , _BOOL ) ; return sb . toString ( ) ; }
1396	public void removeAnimation ( Animation animation ) { mAnimations . remove ( animation ) ; }
1401	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
1415	private static String makeHash ( File file ) throws IOException { return String . valueOf ( FileUtils . checksumCRC32 ( file ) ) ; }
1416	static boolean isPermissionGranted ( @ NonNull Context context , @ NonNull String permissionName ) { return ContextCompat . checkSelfPermission ( context , permissionName ) == PackageManager . PERMISSION_GRANTED ; }
1437	public boolean addRegex ( final String regex ) { if ( regex != _NULL && ! regex . isEmpty ( ) ) { return regexList . add ( regex ) ; } return _BOOL ; }
1447	public WallSearchQueryWithExtended searchExtended ( ) { return new WallSearchQueryWithExtended ( getClient ( ) ) ; }
1490	public static boolean isActivityAvailableForIntent ( Context context , Intent intent ) { return intent . resolveActivity ( context . getPackageManager ( ) ) != _NULL ; }
1513	long segmentSize ( ) { return cardinality ( ) * recordSize ( ) ; }
1516	private static File constructFilePaths ( String file1 , String file2 ) { File newPath ; if ( file2 . startsWith ( file1 ) ) { newPath = new File ( file2 ) ; } else { newPath = new File ( file1 + _CHAR / _CHAR + file2 ) ; } return newPath ; }
1554	private static float lerp ( float a , float b , float t ) { return a + ( b - a ) * t ; }
1558	public List < Object > toList ( ) { Object [ ] copiedElements = new Object [ numElements ] ; System . arraycopy ( elements , _NUM , copiedElements , _NUM , numElements ) ; return Arrays . asList ( copiedElements ) ; }
1571	public static SM_SYSTEM_MESSAGE STR_MACRO_MSG_PROCESS ( String value0 , String value1 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 , value2 ) ; }
1578	public static boolean isEmpty ( CharSequence str ) { if ( str == _NULL || str . length ( ) == _NUM ) { return _BOOL ; } return _BOOL ; }
1590	@ Override public int [ ] makeCumulativeTestPoints ( ) { return makeDensityTestPoints ( ) ; }
1609	public static boolean isEmailRegistered ( String email ) { PersistenceManager pm = pmf . getPersistenceManager ( ) ; try { UserRecord user = findUserByEmail ( pm , email ) ; return user != _NULL ; } finally { pm . close ( ) ; } }
1620	public boolean deleteFile ( ) { if ( filterInfo == _NULL ) return _BOOL ; String fileName = getRootDir ( ) + getUrlPath ( filterInfo . paramURL ) ; File f = new File ( fileName ) ; return f . delete ( ) ; }
1630	public FaveGetVideosQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
1653	protected void addAbsoluteFooter ( @ LayoutRes int layoutId , int type ) { Insertion insertion = new Insertion ( layoutId , _NULL , type ) ; mInserts . add ( insertion ) ; getItems ( ) . add ( _NULL ) ; mFootersCount += _NUM ; notifyChangedIfNeed ( getItemCount ( ) - _NUM ) ; }
1661	public boolean isRotationEnabled ( ) { return mIsRotationEnabled ; }
1671	public synchronized void parseCatalog ( String fileName ) throws IOException { default_override = catalogManager . getPreferPublic ( ) ; catalogManager . debug . message ( _NUM , _CHAR Parse catalog : _CHAR + fileName ) ; catalogFiles . addElement ( fileName ) ; parsePendingCatalogs ( ) ; }
1678	private BSPTree < Euclidean1D > leafBefore ( BSPTree < Euclidean1D > node ) { node = childBefore ( node ) ; while ( node . getCut ( ) != _NULL ) { node = childAfter ( node ) ; } return node ; }
1683	public INDArray asImageMiniBatches ( File f , int numMiniBatches , int numRowsPerSlice ) { try { INDArray d = asMatrix ( f ) ; return Nd4j . create ( numMiniBatches , numRowsPerSlice , d . columns ( ) ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
1703	private ValueHolder < K , V > createValueHolder ( K key , V value ) { return new ValueHolder < K , V > ( key , value , _freeEntryQueue ) ; }
1713	public boolean isFullyZoomedOut ( ) { return mViewPortHandler . isFullyZoomedOut ( ) ; }
1718	public Z Times ( double a , Z b ) { re = a * b . re ; im = a * b . im ; return this ; }
1744	public void readExternal ( ObjectInput in ) throws IOException , ClassNotFoundException { x = in . readFloat ( ) ; y = in . readFloat ( ) ; }
1762	public void configureForRecentlyClosedTabs ( boolean isExpanded ) { mDeviceIcon . setVisibility ( View . VISIBLE ) ; mDeviceIcon . setImageResource ( R . drawable . recent_recently_closed ) ; mDeviceLabel . setText ( R . string . recently_closed ) ; setTimeLabelVisibility ( View . GONE ) ; configureExpandedCollapsed ( isExpanded ) ; }
1773	protected static WizardStepHeaderSettings buildConfigurationHeader ( ) { return WizardStepHeaderSettings . createProductHeader ( _CHAR New Project _CHAR ) ; }
1799	public RequestHandle head ( String url , ResponseHandlerInterface responseHandler ) { return head ( _NULL , url , _NULL , responseHandler ) ; }
1804	public int count ( ITemplateHolder template , String [ ] subClasses ) throws SAException { return _NUM ; }
1805	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_FRIENDLY_ATTACK ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
1814	public void write ( DataOutput out ) throws IOException { WritableUtils . writeVInt ( out , length ) ; out . write ( bytes , _NUM , length ) ; }
1826	protected Set < D > computeCallToReturnFlowFunction ( FlowFunction < D > callToReturnFlowFunction , D d1 , D d2 ) { return callToReturnFlowFunction . computeTargets ( d2 ) ; }
1828	public void remoteResourceDeleted ( ISVNRemoteResource resource ) { for ( ISVNListener listener : repositoryListeners ) { listener . remoteResourceDeleted ( resource ) ; } }
1837	public boolean inRange ( ) { return getDistance ( ) <= api . getSettings ( ) . getFortSettings ( ) . getInteractionRangeInMeters ( ) ; }
1851	public Expression bindVariable ( Value var , Value coll ) { _joinBindings . put ( var . getName ( ) , coll . getName ( ) ) ; return new BindVariableExpression ( ) ; }
1854	public void close ( ) throws IOException { if ( log == _NULL ) return ; try { log . close ( ) ; } finally { log = _NULL ; } }
1855	private void browseToRoot ( ) { browseTo ( new File ( _CHAR / _CHAR ) ) ; }
1856	public DistributedLogClientBuilder redirectBackoffStartMs ( int ms ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setRedirectBackoffStartMs ( ms ) ; return newBuilder ; }
1879	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
1890	public boolean isClinit ( ) { return this == CLINIT ; }
1911	static boolean hasUpdate ( final String newer , final String older ) { return VERSION_PATTERN . matcher ( newer ) . matches ( ) && VERSION_PATTERN . matcher ( older ) . matches ( ) ? newer . compareTo ( older ) > _NUM : _BOOL ; }
1916	private String convertToBoxItemName ( String string ) { return string . replace ( _CHAR / _CHAR , _CHAR _ _CHAR ) . replace ( _CHAR \\ _CHAR , _CHAR _ _CHAR ) ; }
1919	@ Override public boolean isSingleton ( ) { return _BOOL ; }
1921	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_SUMMONED_ATTACK ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
1980	public int size ( ) { return m_fields . length ; }
1982	public static float pow ( float fBase , float fExponent ) { return ( float ) Math . pow ( fBase , fExponent ) ; }
2019	private boolean isMenuDrawerOpen ( ) { if ( mDrawerLayout != _NULL ) { return mDrawerLayout . isDrawerOpen ( MENU_DRAWER_GRAVITY ) ; } else { return _BOOL ; } }
2024	public boolean isSlackEnabled ( ) { return this . slackEnabled ; }
2055	public boolean isEmpty ( ) { return _BOOL ; }
2067	public PagesSaveAccessQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
2069	static boolean isFieldFull ( ) { for ( int y = _NUM ; y < field_size ; y ++ ) { for ( int x = _NUM ; x < field_size ; x ++ ) { if ( field [ x ] [ y ] == dotEmpty ) return _BOOL ; } } return _BOOL ; }
2106	public static Event createImpression ( ) { return createEvent ( ) ; }
2119	public boolean separates ( int a , int b ) { return A . get ( a ) && B . get ( b ) || A . get ( b ) && B . get ( a ) ; }
2120	private static Set < TypeElement > findAllMembersInjectorsRecursively ( Collection < TypeElement > membersInjectors ) { Set < TypeElement > result = new HashSet < > ( ) ; for ( TypeElement element : membersInjectors ) { result . addAll ( findAllMembersInjectorsRecursively ( element ) ) ; } return result ; }
2127	public void writeIntoMARYPTCfile ( String ptcFileName ) throws IOException { PitchReaderWriter . write_pitch_file ( ptcFileName , this . contour , ( float ) this . header . windowSizeInSeconds , ( float ) this . header . skipSizeInSeconds , this . header . fs ) ; }
2128	public static SM_SYSTEM_MESSAGE STR_NOTIFY_DELETE_BUDDY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2131	public static SM_SYSTEM_MESSAGE STR_MSG_ENCHANT_ITEM_SUCCEED_NEW ( DescriptionId descriptionId , int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId , value0 ) ; }
2169	@ Override public void onRequestPermissionsResult ( int requestCode , @ NonNull String [ ] permissions , @ NonNull int [ ] grantResults ) { if ( requestCode == REQUEST_READ_CONTACTS ) { if ( grantResults . length == _NUM && grantResults [ _NUM ] == PackageManager . PERMISSION_GRANTED ) { populateAutoComplete ( ) ; } } }
2172	@ Override public void afterConsumption ( IReplicationInContext context , boolean successful , long lastProcessedKey ) { if ( _engine . getReplicationNode ( ) . getBlobStoreReplicationBulkConsumeHelper ( ) != _NULL ) { _engine . getReplicationNode ( ) . getBlobStoreReplicationBulkConsumeHelper ( ) . flushBulk ( lastProcessedKey ) ; logFlushAfterConsumption ( context , successful , lastProcessedKey , Level . FINE ) ; } }
2176	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_BARRIER_BROKEN ( String value1 , String value0 , String subzone2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 , subzone2 ) ; }
2195	@ VisibleForTesting RequestGenerator createRequestGenerator ( Context context ) { return ( ( ChromeApplication ) context . getApplicationContext ( ) ) . createOmahaRequestGenerator ( ) ; }
2231	private void notifyAlarmListeners ( final AlarmValue alarm ) { log . debug ( _CHAR onAlarmUpdate ( ) - there is : _CHAR + alarmListeners . size ( ) + _CHAR listeners waiting to be notified ! _CHAR ) ; for ( AlarmListener listener : alarmListeners ) { listener . onAlarmUpdate ( alarm ) ; } }
2267	@ Override protected final void addContentSpecToElement ( XMLElementDecl elementDecl ) { int contentSpec = fGroupIndexStackSizes [ _NUM ] > _NUM ? fGroupIndexStack [ _NUM ] [ _NUM ] : - _NUM ; setContentSpecIndex ( fCurrentElementIndex , contentSpec ) ; }
2348	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
2383	public void nullifyItem ( String sItem ) { NGramHistogram . put ( sItem , _NUM . _NUM ) ; }
2399	public String queryCatalogClassName ( ) { String className = System . getProperty ( pClassname ) ; if ( className == _NULL ) { if ( resources == _NULL ) readProperties ( ) ; if ( resources == _NULL ) return _NULL ; try { return resources . getString ( _CHAR catalog - class - name _CHAR ) ; } catch ( MissingResourceException e ) { return _NULL ; } } return className ; }
2400	int positionOfItem ( Item item ) { int offset = _NUM ; for ( List < ? > section : mSections ) { int index = section . indexOf ( item ) ; if ( index != - _NUM ) { return offset + index ; } offset += section . size ( ) ; } return - _NUM ; }
2403	public boolean removeAllEdgesOutOf ( Unit u ) { boolean hasRemoved = _BOOL ; for ( QueueReader < Edge > edgeRdr = listener ( ) ; edgeRdr . hasNext ( ) ; ) { Edge e = edgeRdr . next ( ) ; if ( e . srcUnit ( ) == u ) { removeEdge ( e ) ; hasRemoved = _BOOL ; } } return hasRemoved ; }
2407	@ Override public void normalize ( ProtoElement element , Builder builder ) { }
2415	private void afterSuccessfulBulkExecution ( IReplicationInBatchContext context ) { if ( _operationStatisticsHandler != _NULL ) { MirrorOperationsImpl sourceChannelStatistics = ( MirrorOperationsImpl ) _operationStatisticsHandler . getSourceChannelStatistics ( context . getSourceLookupName ( ) ) ; List < BulkItem > bulk = context . getPendingContext ( ) ; sourceChannelStatistics . addSuccessfulOperationCount ( bulk ) ; } }
2416	private static boolean fieldExists ( List < DataSourceFieldInterface > processedFieldList , String fieldName ) { for ( DataSourceFieldInterface field : processedFieldList ) { if ( field . getName ( ) . compareTo ( fieldName ) == _NUM ) { return _BOOL ; } } return _BOOL ; }
2430	public int numNodes ( ) { return numNodes ; }
2434	static Object find ( String factoryId , String fallbackClassName ) throws ConfigurationError { return find ( factoryId , _NULL , fallbackClassName ) ; }
2438	public static RegexSpacePredicate regex ( String pattern ) { return new RegexSpacePredicate ( pattern ) ; }
2455	String determineInstallSource ( ) { boolean isInSystemImage = ( getApplicationFlags ( ) & ApplicationInfo . FLAG_SYSTEM ) != _NUM ; return isInSystemImage ? INSTALL_SOURCE_SYSTEM : INSTALL_SOURCE_ORGANIC ; }
2461	public void destroy ( ) { mContextControl . destroy ( ) ; mSearchTermControl . destroy ( ) ; }
2475	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , ChecksumException , FormatException { return decode ( image , _NULL ) ; }
2486	public WallPostQuery placeId ( Integer value ) { return unsafeParam ( _CHAR place_id _CHAR , value ) ; }
2495	public void addInterpolatedColumn ( String name , Class type ) { addInterpolatedColumn ( name , type , _NULL ) ; }
2521	public final void writeBoolean ( boolean b ) { write ( b ? _NUM : _NUM ) ; }
2532	public static SM_SYSTEM_MESSAGE STR_MSG_TOWER_DEFENCE_ALREADY_MEMBER_OF_OTHER_GAME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
2536	public VUserInfo createUser ( String name , int flags ) { try { return mService . createUser ( name , flags ) ; } catch ( RemoteException re ) { Log . w ( TAG , _CHAR Could not create a user _CHAR , re ) ; return _NULL ; } }
2539	private void fixScrollOffset ( ) { if ( offsetScroll < _NUM ) { offsetScroll = _NUM ; } if ( offsetScroll > getMaxOffsetX ( ) ) { offsetScroll = getMaxOffsetX ( ) ; } }
2540	public static boolean isPrecaching ( ) { return sIsPrecaching ; }
2554	public static boolean isZero ( double value ) { return isEqual ( value , _NUM ) ; }
2593	public MarketReorderItemsQuery before ( Integer value ) { return unsafeParam ( _CHAR before _CHAR , value ) ; }
2626	public static String pad ( int padding ) { if ( padding > _NUM ) { StringBuffer sb = new StringBuffer ( padding ) ; for ( int i = _NUM ; i < padding ; i ++ ) { sb . append ( _CHAR ) ; } return sb . toString ( ) ; } else { return _CHAR _CHAR ; } }
2653	public void initialiseSelectedFTSIndex ( ) { this . selectedFTSIndex = _NUM ; }
2662	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bind_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
2664	private static void increaseKinahAmount ( Player player , long price ) { player . getInventory ( ) . increaseKinah ( price ) ; }
2689	protected FieldConverters initializeSketchConverter ( ) { return new SketchFieldConverter ( ) ; }
2706	public static void removeTargetFrom ( final Creature object ) { removeTargetFrom ( object , _BOOL ) ; }
2713	public static int hash ( String key , int bitSize , String input ) { int fullHash = ( key + input ) . hashCode ( ) ; int bitLimitedHash = fullHash ; if ( bitSize < _NUM ) { bitLimitedHash = ( _NUM >> > ( _NUM - bitSize ) ) & fullHash ; } return bitLimitedHash ; }
2720	public static byte [ ] writeFloat ( float f ) { return ByteBuffer . allocate ( _NUM ) . putFloat ( f ) . array ( ) ; }
2768	public Builder addColumnInteger ( String name , Integer minAllowedValue , Integer maxAllowedValue ) { return addColumn ( new IntegerMetaData ( name , minAllowedValue , maxAllowedValue ) ) ; }
2812	private JobField extractJobField ( Matcher tokenizedQuery ) throws BadFilterException { String fieldName = tokenizedQuery . group ( _NUM ) ; return Arrays . stream ( DefaultJobField . values ( ) ) . filter ( _NULL ) . findFirst ( ) . orElseThrow ( _NULL ) ; }
2827	public Local newLocal ( String name , Type t ) { return new BafLocal ( name , t ) ; }
2850	public LazyObject optJSONObject ( int index ) throws LazyException { LazyNode token = getOptionalValueToken ( index ) ; if ( token == _NULL ) return _NULL ; if ( token . type == LazyNode . VALUE_NULL ) return _NULL ; if ( token . type != LazyNode . OBJECT ) throw new LazyException ( _CHAR Requested value is not an object _CHAR , token ) ; return new LazyObject ( token , cbuf ) ; }
2851	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
2868	public boolean isValidPoint ( double x ) { if ( x < knots [ _NUM ] || x > knots [ n ] ) { return _BOOL ; } else { return _BOOL ; } }
2887	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
2927	public final String yytext ( ) { return new String ( zzBuffer , zzStartRead , zzMarkedPos - zzStartRead ) ; }
3024	public static byte [ ] hexToArray ( final String data ) throws ConversionException { try { return Hex . decodeHex ( data . toCharArray ( ) ) ; } catch ( DecoderException e ) { throw new ConversionException ( _CHAR Can not convert given hex text into plain text _CHAR , e ) ; } }
3059	public Iterator < SootMethod > methodIterator ( ) { checkLevel ( SIGNATURES ) ; return methodList . iterator ( ) ; }
3069	@ Override public boolean hasIntercept ( ) { return hasIntercept ; }
3089	public void addInitialSeeds ( Unit unit , Set < Abstraction > seeds ) { if ( this . initialSeeds . containsKey ( unit ) ) this . initialSeeds . get ( unit ) . addAll ( seeds ) ; else this . initialSeeds . put ( unit , new HashSet < Abstraction > ( seeds ) ) ; }
3130	private static void logHistogramByGesture ( boolean wasPanelSeen , boolean wasTap , String histogramName ) { RecordHistogram . recordEnumeratedHistogram ( histogramName , getPanelSeenByGestureStateCode ( wasPanelSeen , wasTap ) , RESULTS_BY_GESTURE_BOUNDARY ) ; }
3135	public void remoteResourceCopied ( ISVNRemoteResource source , ISVNRemoteFolder destination ) { for ( ISVNListener listener : repositoryListeners ) { listener . remoteResourceCopied ( source , destination ) ; } }
3140	public static GreaterSpacePredicate greater ( Comparable < ? > value ) { return new GreaterSpacePredicate ( value ) ; }
3160	public void remove ( RequestFilter filter ) { filters . remove ( filter ) ; }
3182	public void deleteItem ( final int _index ) { this . model . remove ( _index ) ; notifyItemRemoved ( _index ) ; }
3186	private void initializedDefaultsFromXml ( ) { mDefaultOverlappingBackgroundColor = Color . TRANSPARENT ; }
3234	public boolean isEmpty ( ) { if ( getRbacClass ( ) == _NULL && getRbacDevice ( ) == _NULL && getRbacProperty ( ) == _NULL ) return _BOOL ; return _BOOL ; }
3246	public static SM_SYSTEM_MESSAGE STR_CANT_WHISPER_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3273	@ ExceptionHandler ( ObjectNotFoundException . class ) @ ResponseStatus ( value = HttpStatus . NOT_FOUND ) public @ ResponseBody ErrorResponse resolveDocumentNotFoundException ( ObjectNotFoundException e ) throws IOException { if ( logger . isLoggable ( Level . FINE ) ) logger . fine ( _CHAR space id query has no results , returning error response : _CHAR + e . getMessage ( ) ) ; return new ErrorResponse ( new ErrorMessage ( e . getMessage ( ) ) ) ; }
3278	public static SM_SYSTEM_MESSAGE STR_GET_EXP ( String value0 , long num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
3296	public SchedulingContextFactory schedulingContextFactory ( ) { return schedulingContextFactory ; }
3297	public GroupsGetBannedQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
3325	public void addLocations ( Collection < PBLocation > locations ) { l_locations . addAll ( locations ) ; }
3345	protected InternalEventTracker handleEvent ( Event event ) { InternalEventTracker eventTracker = bus . postEvent ( event ) ; if ( eventTracker . hasErrors ( ) ) { eventTracker . getFirstError ( ) . printStackTrace ( ) ; } return eventTracker ; }
3391	@ Override public int compareTo ( byte [ ] other , int off , int len ) { ensureTextSet ( ) ; return _comparatorInstance . compare ( getBytes ( ) , _NUM , getLength ( ) , other , off , len ) ; }
3406	public static DimensionColumn addNewDimensionColumn ( Schema schema , Dimension d , PhysicalTable physicalTable ) { DimensionColumn col = new DimensionColumn ( d , physicalTable . getPhysicalColumnName ( d . getApiName ( ) ) ) ; schema . addColumn ( col ) ; return col ; }
3416	public double sumOfValues ( ) { double dSum = _NUM ; Iterator iValIter = hDistro . values ( ) . iterator ( ) ; while ( iValIter . hasNext ( ) ) { dSum += ( Double ) iValIter . next ( ) ; } return dSum ; }
3418	public boolean hasEventStartDate ( ) { return eventStartDate != _NULL ; }
3431	public void addDataPoint ( double value , int series ) { this . series . get ( series ) . addDataPoint ( value ) ; }
3439	public void importXLIFF ( Repository repository , String xliffContent , boolean updateTM ) { ImportExportedXliffStep importExportedXliffStep = new ImportExportedXliffStep ( repository , xliffContent , updateTM ) ; importXLIFF ( importExportedXliffStep , xliffContent ) ; }
3446	public KeyPair createKeys ( ) throws NoSuchAlgorithmException , InvalidAlgorithmParameterException , InvalidKeySpecException { DHPublicKey publicKey = ( DHPublicKey ) this . getValueLinkPublicKey ( ) ; DHParameterSpec dhParamSpec = publicKey . getParams ( ) ; KeyPairGenerator keyGen = KeyPairGenerator . getInstance ( _CHAR DH _CHAR ) ; keyGen . initialize ( dhParamSpec ) ; KeyPair keyPair = keyGen . generateKeyPair ( ) ; return keyPair ; }
3455	public boolean isScaleEnabled ( ) { return mIsScaleEnabled ; }
3460	public static boolean validColourString ( String htmlColour ) { if ( htmlColour == _NULL ) { return _BOOL ; } if ( htmlColourPattern == _NULL ) { htmlColourPattern = Pattern . compile ( HEX_PATTERN ) ; } Matcher matcher = htmlColourPattern . matcher ( htmlColour ) ; return matcher . matches ( ) ; }
3499	@ Override public int read ( ) { return - _NUM ; }
3532	@ Override public Vector2D toSubSpace ( final Point < Euclidean3D > point ) { final Vector3D p3D = ( Vector3D ) point ; return new Vector2D ( p3D . dotProduct ( u ) , p3D . dotProduct ( v ) ) ; }
3533	private void notifyShutdown ( ) { if ( eventHandler instanceof LifecycleAware ) { try { ( ( LifecycleAware ) eventHandler ) . onShutdown ( ) ; } catch ( final Throwable ex ) { exceptionHandler . handleOnShutdownException ( ex ) ; } } }
3541	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , ChecksumException , FormatException { return decode ( image , _NULL ) ; }
3557	public WallSearchQuery search ( ) { return new WallSearchQuery ( getClient ( ) ) ; }
3563	public boolean removeEdge ( Edge e ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
3566	protected final int computeHashCode ( ) { int hash = _NUM ; hash = hash * _NUM + this . collidable . hashCode ( ) ; hash = hash * _NUM + this . fixture . hashCode ( ) ; return hash ; }
3570	public VideoAddQuery add ( UserActor actor , int videoId , int ownerId ) { return new VideoAddQuery ( getClient ( ) , actor , videoId , ownerId ) ; }
3574	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_CANNOT_SUBMIT ( String value ) { return new SM_SYSTEM_MESSAGE ( _NUM , value ) ; }
3579	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , FormatException , ChecksumException { return decode ( image , _NULL ) ; }
3581	public boolean contains ( Vertex v ) { return UniqueVertices . containsKey ( v . getLabel ( ) ) ; }
3617	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
3621	@ Deprecated public static IOFileFilter orFileFilter ( IOFileFilter filter1 , IOFileFilter filter2 ) { return new OrFileFilter ( filter1 , filter2 ) ; }
3636	public boolean kindIsOneOf ( Kind ... kinds ) { return kindIsOneOf ( Arrays . asList ( kinds ) ) ; }
3686	public static SM_SYSTEM_MESSAGE STR_FORCE_BAN_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3738	public void verifyIsDisplayed ( ) { conditions . verifyPostAjax ( visibilityOfElementLocated ( By . cssSelector ( CSS ) ) ) ; }
3741	public static SM_SYSTEM_MESSAGE STR_ASSISTKEY_ASSIST_FOR_SOMEONE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3749	public void freezeAllHiddenPages ( ) { for ( int i = _NUM ; i < mRecentTabs . size ( ) ; i ++ ) { freeze ( mRecentTabs . get ( i ) . get ( ) ) ; } mRecentTabs . clear ( ) ; }
3809	public static void logSearchTermResolvedWords ( boolean isSingleWord ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchResolvedTermWords _CHAR , isSingleWord ? RESOLVED_SINGLE_WORD : RESOLVED_MULTI_WORD , RESOLVED_BOUNDARY ) ; }
3827	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
3853	public static boolean isDisaggregation ( PeriodType aggregationPeriodType , PeriodType dataPeriodType ) { return dataPeriodType != _NULL && aggregationPeriodType != _NULL && aggregationPeriodType . getFrequencyOrder ( ) < dataPeriodType . getFrequencyOrder ( ) ; }
3863	@ Override public int read ( byte [ ] b ) throws IOException { return read ( b , _NUM , b . length ) ; }
3880	@ Deprecated public UrlSpaceConfigurer userDetails ( UserDetails userDetails ) { return credentialsProvider ( new DefaultCredentialsProvider ( userDetails ) ) ; }
3908	public static MessageType create ( ProtoContainerElement parent , DescriptorProto proto , String path , ExtensionPool extensionPool ) { return new MessageType ( parent , proto , path , extensionPool ) ; }
3931	private void sendSensorEventDataRequests ( ) { try { Log . v ( TAG , _CHAR Updating sensor event data request _CHAR ) ; for ( Map . Entry < String , SensorDataRequest > sensorDataRequestEntry : sensorDataRequests . entrySet ( ) ) { sendSensorEventDataRequest ( sensorDataRequestEntry . getKey ( ) , sensorDataRequestEntry . getValue ( ) ) ; } } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
3982	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_BE_MENTOR ( String worldname0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 ) ; }
4013	public Value stringLength ( Value str ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
4016	public static PacProxySelector buildPacSelectorForUrl ( String url ) { PacProxySelector result = _NULL ; PacScriptSource pacSource = new UrlPacScriptSource ( url ) ; if ( pacSource . isScriptValid ( ) ) { result = new PacProxySelector ( pacSource ) ; } return result ; }
4037	protected boolean shouldStartDeserialization ( int currentState ) { return isNativeInitialized ( ) && currentState == STATE_LOAD_TAB_STATE_BG_END ; }
4048	@ Deprecated public T [ ] mapDerivative ( final FieldODEStateAndDerivative < T > state ) { return state . getCompleteDerivative ( ) ; }
4057	protected ResultSet mapResultSet ( ResultSet resultSet ) { ResultSet mappedResultSet = resultSet ; for ( ResultSetMapper resultSetMapper : getMappers ( ) ) { mappedResultSet = resultSetMapper . map ( mappedResultSet ) ; } return mappedResultSet ; }
4087	private void broadcastNewFile ( Uri nativeUri ) { Intent intent = new Intent ( Intent . ACTION_MEDIA_SCANNER_SCAN_FILE , nativeUri ) ; context . sendBroadcast ( intent ) ; }
4105	public Builder addColumnCategorical ( String name , List < String > stateNames ) { return addColumn ( new CategoricalMetaData ( name , stateNames ) ) ; }
4106	public static boolean isButtonPressed ( InputEvent e , int button ) { return ( e . getModifiers ( ) & button ) == button ; }
4111	public void init ( ) { LOG . d ( TAG , _CHAR init ( ) _CHAR ) ; isInitialized = _BOOL ; this . onPause ( _BOOL ) ; this . onDestroy ( ) ; pluginMap . clear ( ) ; this . startupPlugins ( ) ; }
4114	public void putDouble ( String key , double value ) { checkForNullKey ( key ) ; putString ( key , String . valueOf ( value ) ) ; }
4124	public void reverse ( ) { reverse ( _NUM , _pos ) ; }
4143	public final String toJson ( ) { return getGson ( ) . toJson ( this ) ; }
4195	public SubHyperplane < Euclidean3D > firstIntersection ( final Vector3D point , final Line line ) { return recurseFirstIntersection ( getTree ( _BOOL ) , point , line ) ; }
4232	protected void updateWidgetEnablements ( ) { if ( useUrlLabelButton . getSelection ( ) ) { customLabelText . setEnabled ( _BOOL ) ; } else { customLabelText . setEnabled ( _BOOL ) ; } validateFields ( ) ; }
4266	@ JsonIgnore public boolean isInTest ( ) { return ( this . mode == DataTagConstants . MODE_TEST ) ; }
4280	public DatabaseGetSchoolsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
4323	public final java_cup . runtime . Symbol CUP $ cup $ do_action ( int CUP $ cup $ act_num , java_cup . runtime . lr_parser CUP $ cup $ parser , java . util . Stack CUP $ cup $ stack , int CUP $ cup $ top ) throws java . lang . Exception { return CUP $ cup $ do_action_part00000000 ( CUP $ cup $ act_num , CUP $ cup $ parser , CUP $ cup $ stack , CUP $ cup $ top ) ; }
4341	public void showEmpty ( Drawable emptyImageDrawable , String emptyTextTitle , String emptyTextContent , List < Integer > skipIds ) { switchState ( EMPTY , emptyImageDrawable , emptyTextTitle , emptyTextContent , _NULL , _NULL , skipIds ) ; }
4343	public void softAssertion ( String message ) { currentTest . get ( ) . softAssertion ( message ) ; }
4379	@ Override public int [ ] makeInverseCumulativeTestValues ( ) { return new int [ ] { - _NUM , - _NUM , - _NUM , - _NUM , - _NUM , - _NUM , - _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
4390	private static boolean noResourceIncludedFieldsSpecified ( IncludedFieldsParams typeIncludedFields ) { return typeIncludedFields == _NULL || typeIncludedFields . getParams ( ) . isEmpty ( ) ; }
4422	@ Override public int size ( ) { return mSize ; }
4429	private static Comparable castToComparable ( Object obj ) { try { return ( Comparable ) obj ; } catch ( ClassCastException cce ) { throw new IllegalArgumentException ( _CHAR Type _CHAR + obj . getClass ( ) + _CHAR does n _CHAR_CHAR_CHAR_CHAR , cce ) ; } }
4434	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_LEAVE_PARTY_DURING_PATH_FLYING ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4467	private void sendQueryEnd ( ) { sendJson ( Json . object ( ACTION , ACTION_QUERY_END ) ) ; }
4475	public void addListener ( Listener listener ) { if ( listener == _NULL ) throw new NullPointerException ( Messages . getString ( _CHAR dynamics . world . nullListener _CHAR ) ) ; if ( this . listeners . contains ( listener ) ) throw new IllegalArgumentException ( _CHAR dynamics . world . addExistingListener _CHAR ) ; this . listeners . add ( listener ) ; }
4491	public static void ignoreFidelityWarning ( @ NotNull Object clientData ) { if ( ourIgnoredFidelityWarnings == _NULL ) { ourIgnoredFidelityWarnings = new HashSet < String > ( ) ; } ourIgnoredFidelityWarnings . add ( ( String ) clientData ) ; }
4516	public static Assignment createAssignment ( ) { return new Assignment ( ) ; }
4519	public boolean isFullyZoomedOut ( ) { return isFullyZoomedOutX ( ) && isFullyZoomedOutY ( ) ; }
4561	public static SM_SYSTEM_MESSAGE STR_GIVE_ITEM_OPTION_CANCELED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4567	public static ULong valueOf ( BigInteger value ) throws NumberFormatException { return new ULong ( value ) ; }
4591	public static String checkNotEmpty ( String value , String name , Location location ) throws EvalException { if ( value . isEmpty ( ) ) { throw new EvalException ( location , String . format ( _CHAR Invalid empty field _CHAR . _CHAR , name ) ) ; } return value ; }
4633	public Value multiply ( Value num1 , Value num2 ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
4648	public void onAccuracyChanged ( Sensor sensor , int accuracy ) { if ( sensor . getType ( ) != Sensor . TYPE_ACCELEROMETER ) { return ; } if ( this . status == AccelListener . STOPPED ) { return ; } this . accuracy = accuracy ; }
4687	public static SM_SYSTEM_MESSAGE STR_BUDDY_REQUEST_ADD ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
4727	public double minValue ( ) { Iterator iIter = asTreeMap ( ) . values ( ) . iterator ( ) ; Double dMin = Double . POSITIVE_INFINITY ; while ( iIter . hasNext ( ) ) { Double dVal = ( Double ) iIter . next ( ) ; dMin = ( dVal < dMin ) ? dVal : dMin ; } return dMin ; }
4737	protected final boolean hasListeners ( ) { return m_listeners != _NULL && m_listeners . size ( ) > _NUM ; }
4741	protected BoardCloseTopicQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
4748	private static Instance makeInstance ( String text , Instances data ) { DenseInstance instance = new DenseInstance ( _NUM ) ; Attribute messageAtt = data . attribute ( _CHAR text _CHAR ) ; instance . setValue ( messageAtt , messageAtt . addStringValue ( text ) ) ; instance . setDataset ( data ) ; return instance ; }
4766	public static String clearAllLastViewed ( HttpServletRequest request , HttpServletResponse response ) { ProductEvents . clearLastViewedCategories ( request , response ) ; ProductEvents . clearLastViewedProducts ( request , response ) ; ProductSearchSession . clearSearchOptionsHistoryList ( request , response ) ; return _CHAR success _CHAR ; }
4778	public void requestRemoveNodesStart ( ) { if ( exclusion == _BOOL || inclusion == _BOOL ) { logger . debug ( _CHAR ZWave exclusion already in progress - aborted _CHAR ) ; return ; } enqueue ( new RemoveNodeMessageClass ( ) . doRequestStart ( ) ) ; exclusion = _BOOL ; startInclusionTimer ( ) ; logger . debug ( _CHAR ZWave controller start exclusion _CHAR ) ; }
4786	@ Override public boolean isSingleton ( ) { return _BOOL ; }
4791	public GroupsGetRequestsQueryWithFields offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
4795	private double computeReferenceAngle ( ) { double r1 = ( ( SandboxBody ) this . cmbBody1 . getSelectedItem ( ) ) . getTransform ( ) . getRotation ( ) ; double r2 = ( ( SandboxBody ) this . cmbBody2 . getSelectedItem ( ) ) . getTransform ( ) . getRotation ( ) ; return r1 - r2 ; }
4829	@ NotNull public NlConfigurationToolbarFixture requireApi ( int apiLevel ) { Wait . seconds ( _NUM ) . expecting ( _CHAR configuration to be updated _CHAR ) . until ( _NULL ) ; return this ; }
4841	public int EOF_sym ( ) { return _NUM ; }
4850	public static String separatorsToWindows ( String path ) { if ( path == _NULL || path . indexOf ( UNIX_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( UNIX_SEPARATOR , WINDOWS_SEPARATOR ) ; }
4862	public boolean isPrivate ( ) { return Modifier . isPrivate ( this . getModifiers ( ) ) ; }
4907	public int size ( ) { synchronized ( contexts ) { return contexts . size ( ) ; } }
4948	protected void initializeWorld ( ) { SimulationBody floor = new SimulationBody ( ) ; floor . addFixture ( Geometry . createRectangle ( _NUM , _NUM ) ) ; floor . setMass ( MassType . INFINITE ) ; this . world . addBody ( floor ) ; }
4959	public void drawScreen ( int par1 , int par2 , float par3 ) { if ( reinit ) { initGui ( ) ; reinit = _BOOL ; } super . drawScreen ( par1 , par2 , par3 ) ; }
4979	@ VisibleForTesting ExponentialBackoffScheduler createBackoffScheduler ( String prefPackage , Context context , long base , long max ) { return new ExponentialBackoffScheduler ( prefPackage , context , base , max ) ; }
4982	public final void ensureValid ( JobParameters job ) { ensureNoErrors ( validate ( job ) ) ; }
5008	private void overwriteDictionaryMetaFile ( ColumnDictionaryChunkMeta firstDictionaryChunkMeta , String dictionaryFile ) throws IOException { ThriftWriter thriftMetaChunkWriter = new ThriftWriter ( dictionaryFile , _BOOL ) ; try { thriftMetaChunkWriter . open ( ) ; thriftMetaChunkWriter . write ( firstDictionaryChunkMeta ) ; } catch ( IOException e ) { } finally { thriftMetaChunkWriter . close ( ) ; } }
5034	public static String hex ( float f ) { return Integer . toHexString ( Float . floatToIntBits ( f ) ) ; }
5052	public boolean isLeftHalf ( ) { return isLeftHalf ; }
5064	public static float screenToScroll ( float x , float warpSize ) { if ( x <= _NUM ) return _NUM ; if ( x >= warpSize ) return x + warpSize ; return ( float ) Math . sqrt ( x * warpSize ) * _NUM ; }
5084	@ Override public void onUpdate ( Detector . Detections < Barcode > detectionResults , Barcode item ) { mOverlay . add ( mGraphic ) ; mGraphic . updateItem ( item ) ; }
5091	private void handleInitialize ( ) { scheduleRepeatingAlarm ( ) ; if ( hasRequest ( ) ) startService ( createPostRequestIntent ( this ) ) ; }
5104	public boolean hasProgramEndDate ( ) { return programEndDate != _NULL ; }
5204	@ Override public void put ( int index , byte [ ] value ) { System . arraycopy ( value , _NUM , datastore , ( ( index ) * sizeOfEachElement ) , sizeOfEachElement ) ; }
5205	public boolean isUpdateAvailable ( ) { return availableUpdate != _NULL ; }
5230	@ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) public static void pickImage ( Context context , Fragment fragment , int requestCode ) { try { fragment . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( context ) ; } }
5231	private EtcdKeysResponse handleEtcdWatchErrors ( EtcdException exception ) { if ( exception . errorCode == ETCD_EVENT_INDEX_CLEARED_CODE ) { initialSetAllFlagz ( ) ; return _NULL ; } else if ( exception . errorCode == ETCD_WATCHER_CLEARED_CODE ) { try { Thread . sleep ( reelectionBackoffMs . get ( ) ) ; } catch ( InterruptedException e1 ) { } return _NULL ; } else { throw new EtcdFlagFieldUpdaterException . EtcdFetchingFailed ( exception ) ; } }
5234	public PagesGetVersionQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
5245	public int modify_file ( String group_name , String appender_filename , long file_offset , long modify_size , UploadCallback callback ) throws IOException , MyException { return this . do_modify_file ( group_name , appender_filename , file_offset , modify_size , callback ) ; }
5258	public static void installToStorage ( Context context ) { mContext = context ; new Thread ( runnable ) . start ( ) ; }
5334	public SlickForm withField ( FormField field ) { this . formFields . add ( field ) ; return this ; }
5354	protected void reset ( ) throws XNIException { int count = fComponents . size ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { XMLComponent c = ( XMLComponent ) fComponents . get ( i ) ; c . reset ( this ) ; } }
5355	@ Override public boolean ready ( ) throws IOException { return _BOOL ; }
5381	public void putBoolean ( String key , boolean value ) { checkForNullKey ( key ) ; preferences . edit ( ) . putBoolean ( key , value ) . apply ( ) ; }
5389	@ JsonIgnore public boolean isInMaintenance ( ) { return ( this . mode == DataTagConstants . MODE_MAINTENANCE ) ; }
5398	public static SM_SYSTEM_MESSAGE STR_EXTEND_INVENTORY_SIZE_EXTENDED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5411	public static MutableContextSet fromEntries ( Iterable < Map . Entry < String , String >> iterable ) { MutableContextSet set = new MutableContextSet ( ) ; set . addAll ( iterable ) ; return set ; }
5484	public void addToken ( ClipboardToken token ) { tokens . add ( token ) ; saveTokenChanges ( ) ; }
5503	public ConfigDialog openDialog ( ) { select ( ) . clickOption ( ToolbarOptions . CONFIGURE ) ; configDialog . verifyIsDisplayed ( ) ; return configDialog ; }
5508	public TrafficLogPredicate add ( TrafficLogPredicate query ) { predicates . addAll ( query . getPredicates ( ) ) ; return this ; }
5518	public void writeExternal ( ObjectOutput out ) throws IOException { out . writeFloat ( x ) ; out . writeFloat ( y ) ; }
5523	public static < T > T convert ( Object source , TypeReference < T > destType ) { return JSON . convertValue ( source , destType ) ; }
5535	public SQLDataMigrator migrate ( Loader loader ) { for ( Collection < Var > vars : this ) { loader . addToQueue ( vars ) ; } loader . flush ( ) ; loader . waitToFinish ( ) ; return this ; }
5543	@ Override public final float readFloat ( ) throws IOException { return Float . intBitsToFloat ( readInt ( ) ) ; }
5565	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
5580	public void addAllTagsOf ( Host h ) { List < Tag > tags = h . getTags ( ) ; if ( tags . isEmpty ( ) ) return ; if ( mTagList == _NULL ) { mTagList = new ArrayList < Tag > ( tags . size ( ) ) ; } mTagList . addAll ( tags ) ; }
5603	public boolean isTimeGrainValid ( ) { if ( nestedQuery != _NULL ) { TimeGrain nestedTimeGrain = nestedQuery . getTimeGrain ( ) ; return timeGrain == _NULL || nestedTimeGrain == _NULL || timeGrain . satisfiedBy ( nestedTimeGrain ) ; } return _BOOL ; }
5619	public void addAccount ( Activity activity , int result ) { activity . startActivityForResult ( createAddAccountIntent ( ) , result ) ; }
5678	public LeadsStartQuery start ( UserActor actor , int leadId , String secret ) { return new LeadsStartQuery ( getClient ( ) , actor , leadId , secret ) ; }
5723	public static SM_SYSTEM_MESSAGE STR_COMPOUNDED_ITEM_DECOMPOUND_SUCCESS ( int i ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( i ) ) ; }
5744	public static Type toJimpleRefType ( String desc ) { return desc . charAt ( _NUM ) == _CHAR ? toJimpleType ( desc ) : RefType . v ( toQualifiedName ( desc ) ) ; }
5745	public LeadsGetStatsQuery dateEnd ( String value ) { return unsafeParam ( _CHAR date_end _CHAR , value ) ; }
5796	public void addBitmapToCache ( String data , BitmapDrawable value ) { if ( data == _NULL || value == _NULL ) { return ; } if ( mMemoryCache != _NULL ) { if ( RecyclingBitmapDrawable . class . isInstance ( value ) ) { ( ( RecyclingBitmapDrawable ) value ) . setIsCached ( _BOOL ) ; } mMemoryCache . put ( data , value ) ; } }
5808	public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_WATCH ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5823	public VideoEditCommentQuery editComment ( UserActor actor , int commentId ) { return new VideoEditCommentQuery ( getClient ( ) , actor , commentId ) ; }
5825	public static JavaRDD < List < List < Writable >> > normalizeSequence ( Schema schema , JavaRDD < List < List < Writable >> > data , double min , double max ) { return normalizeSequence ( schema , data , min , max , _NULL ) ; }
5834	public void printSources ( ) { if ( this . sourceSinkProvider == _NULL ) { System . err . println ( _CHAR Sources not calculated yet _CHAR ) ; return ; } System . out . println ( _CHAR Sources : _CHAR ) ; for ( SourceSinkDefinition am : getSources ( ) ) { System . out . println ( am . toString ( ) ) ; } System . out . println ( _CHAR End of Sources _CHAR ) ; }
5862	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_CAN_NOT_INVITE_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5880	private boolean lollipopAndAbove ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ; }
5887	protected void removeKeyFromLRUCache ( Cache cacheObject ) { for ( int i = _NUM ; i < columnIdentifiers . length ; i ++ ) { DictionaryColumnUniqueIdentifier dictionaryColumnUniqueIdentifier = createDictionaryColumnUniqueIdentifier ( columnIdentifiers [ i ] ) ; cacheObject . invalidate ( dictionaryColumnUniqueIdentifier ) ; } }
5898	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM / _NUM . _NUM , _NUM , _NUM } ; }
5942	public void showEmpty ( Drawable emptyImageDrawable , String emptyTextTitle , String emptyTextContent ) { switchState ( EMPTY , emptyImageDrawable , emptyTextTitle , emptyTextContent , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
5951	public Local newLocal ( String name , Type t ) { return Jimple . v ( ) . newLocal ( name , t ) ; }
5955	public void start ( boolean daemon , int thread_priority ) { if ( thread_priority < Thread . MIN_PRIORITY ) throw new IllegalArgumentException ( _CHAR thread priority too low _CHAR ) ; if ( thread_priority > Thread . MAX_PRIORITY ) throw new IllegalArgumentException ( _CHAR thread priority too high _CHAR ) ; start_ ( Executors . newSingleThreadScheduledExecutor ( _NULL ) , _BOOL ) ; }
5962	public static SM_SYSTEM_MESSAGE STR_MSG_LOOT_LISTING_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5971	public Builder countColumns ( String ... columns ) { return add ( ReduceOp . Count , columns ) ; }
5986	public AudioDeleteAlbumQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
6012	public boolean usedDevice ( @ NotNull IDevice device ) { return myDevicesUsedInLaunch . contains ( device . getSerialNumber ( ) ) ; }
6031	public boolean isRasterSymbol ( ) { Style style = getStyle ( ) ; if ( style != _NULL ) { for ( FeatureTypeStyle fts : style . featureTypeStyles ( ) ) { for ( Rule rule : fts . rules ( ) ) { for ( Symbolizer symbolizer : rule . symbolizers ( ) ) { if ( symbolizer instanceof RasterSymbolizer ) { return _BOOL ; } } } } } return _BOOL ; }
6048	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MEMBER_NICKNAME_HE_IS_NOT_MY_GUILD_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6050	public MessagesDeleteDialogQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
6070	private void turnOnTracks ( int trackCode ) { for ( int i = _NUM ; i < this . tracks . length ; i ++ ) { if ( ( _NUM << i & trackCode ) != _NUM ) { this . tracks [ i ] . setLowAnim ( TextureAnimationDrawer . trackAnim ) ; } } }
6071	public ElementType parent ( ) { return theParent ; }
6074	private String saveFileOnDisk ( String filePathToSave , String fileContent ) throws IOException { File file = new File ( filePathToSave ) ; Files . createParentDirs ( file ) ; Files . write ( fileContent , file , Charset . defaultCharset ( ) ) ; return filePathToSave ; }
6081	protected boolean cellConsumesEventType ( Cell < ? > cell , String eventType ) { Set < String > consumedEvents = cell . getConsumedEvents ( ) ; return consumedEvents != _NULL && consumedEvents . contains ( eventType ) ; }
6106	public void addAnnouncementToList ( Timestamp unixTime , String announcement ) { this . announcementList . put ( unixTime , announcement ) ; }
6116	public static boolean isSystemProp ( String propertyValue ) { int fIndex = propertyValue . indexOf ( _CHAR $ { _CHAR ) ; int lIndex = propertyValue . lastIndexOf ( _CHAR } _CHAR ) ; return ( fIndex != - _NUM && lIndex != - _NUM ) ; }
6130	public static void reset ( ) { if ( getMocks ( ) != _NULL ) { getMocks ( ) . clear ( ) ; } }
6206	public boolean contains ( JsonElement element ) { return elements . contains ( element ) ; }
6209	@ Deprecated public static IOFileFilter andFileFilter ( IOFileFilter filter1 , IOFileFilter filter2 ) { return new AndFileFilter ( filter1 , filter2 ) ; }
6213	public int size ( ) { return edges . size ( ) ; }
6218	public FriendsGetSuggestionsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
6262	private void writeThriftObject ( TBase dictionaryThriftObject ) throws IOException { dictionaryThriftWriter . write ( dictionaryThriftObject ) ; }
6306	public static UByte ubyte ( String value ) throws NumberFormatException { return value == _NULL ? _NULL : UByte . valueOf ( value ) ; }
6312	public void freeConnection ( ConnectionResource clientPeer ) { activeConnections . decrement ( ) ; _peersPool . freeResource ( clientPeer ) ; }
6316	public boolean isNonBlockingRead ( ) { return _nonBlockingRead ; }
6367	public void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( mAuthClient != _NULL ) mAuthClient . onActivityResult ( requestCode , resultCode , data ) ; }
6391	@ SuppressWarnings ( _CHAR unused _CHAR ) public int resumptionPoint ( ) { return resumptionPoint ; }
6405	@ Override public String toString ( ) { return charSequence . toString ( ) ; }
6414	public Edge addEdge ( Node s , Node t ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
6469	public AudioEditAlbumQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
6495	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
6502	private static boolean matches ( Pattern pattern , String input ) { Matcher m = pattern . matcher ( input ) ; return m . matches ( ) ; }
6551	public void disableDashedLine ( ) { mDashPathEffect = _NULL ; }
6610	public WallGetQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
6624	public boolean dnsDomainIs ( String host , String domain ) { return host . endsWith ( domain ) ; }
6651	public AemRichText type ( CharSequence text ) { switchToTextArea ( ) ; try { actions . sendKeys ( text ) . perform ( ) ; return this ; } finally { frameSwitcher . switchTo ( _CHAR / $ cq _CHAR ) ; } }
6678	public boolean isStatic ( ) { return Modifier . isStatic ( this . getModifiers ( ) ) ; }
6689	public void removeFromAggregate ( int row , VisualItem member ) { validRowCheck ( row , _BOOL ) ; int ar = getAggregatedRow ( row , member ) ; if ( ar >= _NUM ) { m_aggregated . removeRow ( ar ) ; fireTableEvent ( row , row , EventConstants . ALL_COLUMNS , EventConstants . UPDATE ) ; } }
6690	public static SM_SYSTEM_MESSAGE STR_PvPZONE_OUT_MESSAGE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6754	public static String separatorsToWindows ( String path ) { if ( path == _NULL || path . indexOf ( UNIX_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( UNIX_SEPARATOR , WINDOWS_SEPARATOR ) ; }
6778	@ Override public void onCheckedChanged ( CompoundButton switchView , boolean isChecked ) { if ( ! isResumed ( ) ) { return ; } if ( isChecked ) { requestPasswordForShareViaLink ( _BOOL ) ; } else { ( ( FileActivity ) getActivity ( ) ) . getFileOperationsHelper ( ) . setPasswordToShareViaLink ( mFile , _CHAR _CHAR ) ; } switchView . setOnCheckedChangeListener ( _NULL ) ; switchView . toggle ( ) ; switchView . setOnCheckedChangeListener ( mOnPasswordInteractionListener ) ; }
6789	public boolean isEmpty ( ) { return mSize <= _NUM ; }
6853	public AemDialog clickTab ( final String label ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ( ExpectedCondition < Object > ) _NULL , _NUM ) ; return this ; }
6877	public static String encodeWebSafe ( byte [ ] source , boolean doPadding ) { return encode ( source , _NUM , source . length , WEBSAFE_ALPHABET , doPadding ) ; }
6884	public DocsSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
6895	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_CHARGE_SUCCESS ( DescriptionId descriptionId , int level ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId , level ) ; }
6908	static public String convertUncompressedByteArray2String ( int size , byte [ ] bytes ) { StringBuilder buf = new StringBuilder ( size ) ; for ( byte b : bytes ) buf . append ( ( char ) b ) ; return buf . toString ( ) ; }
6913	public static HelpNode fromXml ( File file ) throws ParserConfigurationException , SAXException , IOException { return HelpReader . fromXml ( new InputSource ( new FileReader ( file ) ) ) ; }
6972	public DataQueryParams removeDimensionOrFilter ( String dimension ) { removeDimension ( dimension ) ; removeFilter ( dimension ) ; return this ; }
6981	public boolean apply ( ) { setup ( ) ; setVisible ( _BOOL ) ; return ok ; }
6995	static protected boolean isSilence ( String phone ) { return phone . equals ( _CHAR pau _CHAR ) ; }
7041	public static String createBaseRGBString ( Color c ) { return _CHAR - fx - base : _CHAR + createRGBString ( c ) ; }
7078	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
7090	public final void goToLastProcessedLine ( final int lastCommited ) throws DataFallbackException { fFileController . closeFallbackInputStream ( ) ; int readLines = fFileController . getReadBackLines ( ) ; fFileController . goToLine ( readLines + lastCommited ) ; }
7098	private Scope peek ( ) throws JSONException { if ( stack . isEmpty ( ) ) { throw new JSONException ( _CHAR Nesting problem _CHAR ) ; } return stack . get ( stack . size ( ) - _NUM ) ; }
7108	public void addParamClone ( ModelParam param ) { if ( param != _NULL ) { ModelParam newParam = new ModelParam ( param ) ; addParam ( newParam ) ; } }
7137	public static Builder newBuilder ( ) { return new Builder ( ) ; }
7141	public Builder addConverterFactory ( Converter . Factory factory ) { converterFactories . add ( checkNotNull ( factory , _CHAR factory == _NULL _CHAR ) ) ; return this ; }
7150	public Object remove ( String key ) { return this . map . remove ( key ) ; }
7153	void close ( ) { queryExecutor . submit ( _NULL ) ; }
7207	protected void captureRequestSize ( HttpContent httpContent ) { ByteBuf bufferedContent = httpContent . content ( ) ; int contentSize = bufferedContent . readableBytes ( ) ; requestBodySize . addAndGet ( contentSize ) ; }
7227	public MarketSearchQueryWithExtended priceFrom ( Integer value ) { return unsafeParam ( _CHAR price_from _CHAR , value ) ; }
7253	boolean tryTransfer ( E e ) { int start = startIndex ( ) ; return scanAndTransferToWaiter ( e , start ) || awaitExchange ( e , start ) ; }
7255	public void insertKey ( DataType key , RecordID rid ) { LeafNode leaf = locateLeaf ( key , _BOOL ) ; LeafEntry ent = new LeafEntry ( key , rid ) ; leaf . insertBEntry ( ent ) ; }
7258	protected void expandPanel ( StateChangeReason reason ) { animatePanelToState ( PanelState . EXPANDED , reason ) ; }
7275	public Object [ ] next ( ) { return getSortedRecordFromFile ( ) ; }
7287	@ Override public void close ( ) { ss1 . close ( ) ; ss2 . close ( ) ; }
7292	@ Override protected boolean simulationEnd ( SimulationEvent event ) { return _BOOL ; }
7305	public boolean isPrivate ( ) { return Modifier . isPrivate ( this . getModifiers ( ) ) ; }
7345	public boolean isPublic ( ) { return Modifier . isPublic ( this . getModifiers ( ) ) ; }
7359	public static boolean isAllowedPotentialStat ( Equip equip , int opID ) { return _BOOL ; }
7411	public void dumpBinary ( CART cart , DataOutput os ) throws IOException { try { toWagonFormat ( cart . getRootNode ( ) , ( DataOutputStream ) os , _NULL , _NULL ) ; } catch ( IOException ioe ) { IOException newIOE = new IOException ( _CHAR Error dumping CART to output stream _CHAR ) ; newIOE . initCause ( ioe ) ; throw newIOE ; } }
7432	protected BoardOpenTopicQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
7467	public GroupsEditManagerQuery isContact ( Boolean value ) { return unsafeParam ( _CHAR is_contact _CHAR , value ) ; }
7469	public MPPointF [ ] newArray ( int size ) { return new MPPointF [ size ] ; }
7486	public boolean matchStringConstant ( ) { return _CHAR_CHAR == ( char ) tok . ttype ; }
7499	public void onCompletion ( MediaPlayer player ) { Toast . makeText ( this , String . format ( getString ( R . string . media_event_done , mFile . getFileName ( ) ) ) , Toast . LENGTH_LONG ) . show ( ) ; if ( mMediaController != _NULL ) { player . seekTo ( _NUM ) ; processPauseRequest ( ) ; mMediaController . updatePausePlay ( ) ; } else { processStopRequest ( _BOOL ) ; } return ; }
7513	public boolean isTranslationEnabled ( ) { return mIsTranslationEnabled ; }
7520	public boolean seenTagPrefix ( @ NotNull String prefix ) { if ( myTags != _NULL ) { for ( String tag : myTags . keySet ( ) ) { if ( tag . startsWith ( prefix ) ) { return _BOOL ; } } } return _BOOL ; }
7546	protected BoardEditCommentQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
7565	public boolean removeChildEdge ( Edge e ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
7578	public LocalVariableTypeTable_attribute findLocalVariableTypeTable ( ) { int i ; for ( i = _NUM ; i < attributes_count ; i ++ ) { if ( attributes [ i ] instanceof LocalVariableTypeTable_attribute ) return ( LocalVariableTypeTable_attribute ) ( attributes [ i ] ) ; } return _NULL ; }
7613	NewProjectDescriptor withPackageName ( @ NotNull String pkg ) { myPkg = pkg ; return this ; }
7614	public static void writeProtoBinaryToFile ( File outputFile , Message proto ) throws IOException { try ( OutputStream prodOutputStream = new FileOutputStream ( outputFile ) ) { proto . writeTo ( prodOutputStream ) ; } }
7678	public static JsonNode replaceChild ( JsonNode parent , String replacingKey , JsonNode replacingChild ) { Map < String , JsonNode > childMap = new HashMap < > ( ) ; childMap . put ( replacingKey , replacingChild ) ; return replaceChildren ( parent , childMap ) ; }
7681	public static ExpectedCondition < Boolean > collapse ( ) { return _NULL ; }
7699	private void addToQueue ( Collection < SerialMessage > msgs ) { if ( msgs == _NULL ) { return ; } for ( SerialMessage serialMessage : msgs ) { addToQueue ( serialMessage ) ; } }
7701	public String post ( String url ) throws HttpException { return post ( _NULL , url , _NULL ) ; }
7757	public WallRepostQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
7772	public AemInsertWindow openInsertWindow ( ) { wait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return insertWindow ; }
7809	public static DimensionColumn addNewDimensionColumn ( PhysicalTable physicalTable , Dimension d ) { return addNewDimensionColumn ( physicalTable , d , physicalTable ) ; }
7816	public boolean isPreheatCacheDefaultFalse ( ) { return preheatCache == _NULL ? _BOOL : preheatCache ; }
7859	public boolean shippingApplies ( ) { boolean shippingApplies = _BOOL ; for ( ShoppingCartItem item : this ) { if ( item . shippingApplies ( ) ) { shippingApplies = _BOOL ; break ; } } return shippingApplies ; }
7881	private String rateLabels2RelativeValues ( String rateAttribute ) { if ( rateAttribute . equals ( _CHAR x - slow _CHAR ) ) { return _CHAR - _NUM % _CHAR ; } else if ( rateAttribute . equals ( _CHAR slow _CHAR ) ) { return _CHAR - _NUM . _NUM % _CHAR ; } else if ( rateAttribute . equals ( _CHAR medium _CHAR ) ) { return _CHAR + _NUM % _CHAR ; } else if ( rateAttribute . equals ( _CHAR fast _CHAR ) ) { return _CHAR + _NUM % _CHAR ; } else if ( rateAttribute . equals ( _CHAR x - fast _CHAR ) ) { return _CHAR + _NUM % _CHAR ; } return _CHAR + _NUM % _CHAR ; }
7887	public VideoGetNewTagsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
7894	public boolean contains ( String key ) { return options . containsKey ( key ) ; }
7917	public static boolean isEmailRegistered ( String email ) { PersistenceManager pm = pmf . getPersistenceManager ( ) ; try { UserRecord user = findUserByEmail ( pm , email ) ; return user != _NULL ; } finally { pm . close ( ) ; } }
7934	public FileFooter readFooter ( ) throws IOException { ThriftReader thriftReader = openThriftReader ( filePath ) ; thriftReader . open ( ) ; thriftReader . setReadOffset ( offset ) ; FileFooter footer = ( FileFooter ) thriftReader . read ( ) ; thriftReader . close ( ) ; return footer ; }
7951	public void updateEnableStateSwingItems ( ) { if ( SwingUtilities . isEventDispatchThread ( ) ) super . updateEnableState ( ) ; }
7968	public void onSearchTermResolutionResponse ( String searchTerm ) { getSearchBarControl ( ) . setSearchTerm ( searchTerm ) ; animateSearchTermResolution ( ) ; }
7970	public void updateCurrentConfig ( ComponentConfiguration data ) { scenarioContext . add ( ContextKeys . CURRENT_CONFIG , data ) ; }
8018	public boolean removeChild ( Node n ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
8034	public boolean contains ( int httpStatusCode ) { return httpStatusCode >= lowerBound && httpStatusCode <= upperBound ; }
8043	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
8116	public static SM_SYSTEM_MESSAGE STR_FORCE_PROMOTE_MANAGER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8118	public boolean hasItems ( ) { return items != _NULL && ! items . isEmpty ( ) ; }
8155	public static String toInternalName ( SootClass cls ) { return toInternalName ( cls . getName ( ) ) ; }
8187	public synchronized Utterance pend ( ) { Utterance utterance = _NULL ; while ( list . size ( ) == _NUM ) { try { wait ( ) ; } catch ( InterruptedException ie ) { return _NULL ; } } utterance = ( Utterance ) list . removeFirst ( ) ; notify ( ) ; return utterance ; }
8210	private static void increment ( Map < ResultPoint , Integer > table , ResultPoint key ) { Integer value = table . get ( key ) ; table . put ( key , value == _NULL ? _NUM : value + _NUM ) ; }
8215	public boolean success ( ) { return exited ( ) && getExitCode ( ) == _NUM ; }
8236	public MessagesSendQuery userId ( Integer value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
8245	public static DrawFragment newInstance ( @ Nullable Uri imageUri ) { Bundle args = new Bundle ( ) ; args . putParcelable ( KEY_IMAGE_URI , imageUri ) ; DrawFragment fragment = new DrawFragment ( ) ; fragment . setArguments ( args ) ; return fragment ; }
8321	private boolean isDownloadIdInOMASharedPrefs ( long downloadId ) { Set < String > omaDownloads = getStoredDownloadInfo ( PENDING_OMA_DOWNLOADS ) ; for ( String omaDownload : omaDownloads ) { OMAEntry entry = OMAEntry . parseOMAEntry ( omaDownload ) ; if ( entry . mDownloadId == downloadId ) { return _BOOL ; } } return _BOOL ; }
8358	public static Simulation fromXml ( File file ) throws ParserConfigurationException , SAXException , IOException { return XmlReader . fromXml ( new InputSource ( new FileReader ( file ) ) ) ; }
8377	protected FriendsAreFriendsQuery userIds ( List < Integer > value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
8412	private static long toLong ( int x , int z ) { return ( ( long ) x << _NUM ) + z - Integer . MIN_VALUE ; }
8419	public void dump ( ) { System . out . println ( _CHAR PList _CHAR ) ; dumpInternal ( this , _NUM ) ; }
8420	public static boolean hasAll ( Intent intent , String ... extras ) { for ( String extra : extras ) { if ( ! intent . hasExtra ( extra ) ) { return _BOOL ; } } return _BOOL ; }
8427	public boolean hasCurve ( ) { return mHasCurve ; }
8439	private boolean shouldGrowTable ( ) { return size > ( mask + _NUM ) * LOAD_FACTOR ; }
8451	public WallGetQueryWithExtended count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
8454	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
8480	public VideoReportQuery report ( UserActor actor , int ownerId , int videoId ) { return new VideoReportQuery ( getClient ( ) , actor , ownerId , videoId ) ; }
8490	public MarketSearchQuery priceFrom ( Integer value ) { return unsafeParam ( _CHAR price_from _CHAR , value ) ; }
8495	public void showEmpty ( Drawable emptyImageDrawable , String emptyTextTitle , String emptyTextContent ) { switchState ( EMPTY , emptyImageDrawable , emptyTextTitle , emptyTextContent , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
8523	public static SM_SYSTEM_MESSAGE STR_FORCE_INVITE_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8533	public static boolean hasAddressChanged ( final IEquipmentConfiguration equipmentConfiguration , final IEquipmentConfiguration oldEquipmentConfiguration ) { boolean hasChanged ; if ( oldEquipmentConfiguration . getAddress ( ) == _NULL ) { if ( equipmentConfiguration . getAddress ( ) == _NULL ) hasChanged = _BOOL ; else hasChanged = _BOOL ; } else { hasChanged = ! oldEquipmentConfiguration . getAddress ( ) . equals ( equipmentConfiguration . getAddress ( ) ) ; } return hasChanged ; }
8564	public Local newLocal ( String name , Type t ) { return new JimpleLocal ( name , t ) ; }
8588	public static SM_SYSTEM_MESSAGE STR_FORCE_HE_IS_ALREADY_MEMBER_OF_OUR_FORCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8617	public static int compareTo ( double x , double y , double eps ) { if ( equals ( x , y , eps ) ) { return _NUM ; } else if ( x < y ) { return - _NUM ; } return _NUM ; }
8621	@ Override public void onReadyForSpeech ( Bundle bundle ) { Log . i ( TAG , _CHAR onReadyForSpeech : _CHAR ) ; }
8686	public AemParsys insertComponent ( String componentGroup , String componentName ) { openInsertWindow ( ) . insertComponent ( componentGroup , componentName ) ; return this ; }
8694	public long size ( String fileName ) { try { IoChannel fileChannel = getFileChannel ( fileName ) ; return fileChannel . size ( ) / BLOCK_SIZE ; } catch ( IOException e ) { throw new RuntimeException ( _CHAR can not access _CHAR + fileName ) ; } }
8704	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_MAGIC_TARGET ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
8729	public static boolean isConnectedWifi ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_WIFI ) ; }
8735	public boolean isDisaggregation ( ) { return isAggregationType ( AVERAGE_SUM_INT_DISAGGREGATION ) || isAggregationType ( AVERAGE_INT_DISAGGREGATION ) ; }
8751	public int size ( ) { return edges . size ( ) ; }
8753	public boolean isInExpirationManager ( ) { return _inExpirationManager ; }
8761	public byte [ ] encryptViaKek ( byte [ ] content ) { return cryptoViaKek ( content , Cipher . ENCRYPT_MODE ) ; }
8777	public static int gray ( int v , int a ) { return rgba ( v , v , v , a ) ; }
8799	final public static long updateCollection ( Object id , V v , Class < ? extends Bean > t ) { return updateCollection ( id , v , t , _BOOL ) ; }
8821	public double distance ( final Vector3D p ) { final Vector3D d = p . subtract ( zero ) ; final Vector3D n = new Vector3D ( _NUM . _NUM , d , - d . dotProduct ( direction ) , direction ) ; return n . getNorm ( ) ; }
8839	@ Override public final char readChar ( ) throws IOException { dis . readFully ( work , _NUM , _NUM ) ; return ( char ) ( ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) ) ; }
8854	public static short readLittleEndianShort ( DataInputStream dis ) throws IOException { short bits = ( short ) ( _NUM & dis . readByte ( ) ) ; bits |= ( ( ( short ) ( _NUM & dis . readByte ( ) ) ) << _NUM ) ; return bits ; }
8864	public static Tuple max ( Iterator tuples , String field ) { return max ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
8865	boolean isUpperBiDiagonal ( ) { return householderVectors . length >= householderVectors [ _NUM ] . length ; }
8906	public VideoGetCommentsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
8908	@ Override public void merge ( ProtoElement elem ) { }
8922	public boolean removeTuple ( Tuple t ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
8936	public static final short bytesToShort ( byte hiByte , byte loByte ) { int result = ( _NUM & hiByte ) ; result = result << _NUM ; result |= ( _NUM & loByte ) ; return ( short ) result ; }
8967	public static SM_SYSTEM_MESSAGE STR_PARTY_HE_IS_BANISHED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8985	public boolean isEmpty ( ) { return oldSet . isEmpty ( ) && newSet . isEmpty ( ) ; }
8999	public int addEdge ( int s , int t ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
9030	@ Override public void sendDAQResponse ( final DAQResponse response , final Destination destination , final Session session ) throws JMSException { sendTextMessage ( MessageConverter . responseToJson ( response ) , destination , session ) ; }
9064	public boolean isValid ( String value ) { if ( value == _NULL ) { return _BOOL ; } for ( int i = _NUM ; i < patterns . length ; i ++ ) { if ( patterns [ i ] . matcher ( value ) . matches ( ) ) { return _BOOL ; } } return _BOOL ; }
9089	public static boolean checkStartConditions ( QuestEnv env , boolean warn ) { try { return checkStartConditionsImpl ( env , warn ) ; } catch ( Exception ex ) { log . error ( _CHAR QE : exception in checkStartCondition _CHAR , ex ) ; } return _BOOL ; }
9122	public int length ( ) { return this . map . size ( ) ; }
9131	private boolean isJarURL ( URL url ) { String protocol = url . getProtocol ( ) ; return _CHAR jar _CHAR . equals ( protocol ) || _CHAR zip _CHAR . equals ( protocol ) || _CHAR wsjar _CHAR . equals ( protocol ) || _CHAR code - source _CHAR . equals ( protocol ) && url . getPath ( ) . contains ( _CHAR ! / _CHAR ) ; }
9156	public static String [ ] convertStrings ( List < String > strings ) { String [ ] ret = new String [ strings . size ( ) ] ; for ( int i = _NUM ; i < ret . length ; i ++ ) { ret [ i ] = strings . get ( i ) ; } return ret ; }
9184	public static void addIdPrefix ( String idPrefix ) { RequestLog current = RLOG . get ( ) ; String newId = idPrefix + getId ( ) ; current . info = current . info . withUuid ( newId ) ; current . logId = newId ; MDC . put ( ID_KEY , newId ) ; }
9234	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
9253	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MASTER_NOT_MY_GUILD_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
9278	public void loadScript ( ) { if ( script != _NULL ) { return ; } try { script = FileCopyUtils . copyToString ( new BufferedReader ( new InputStreamReader ( resourceLoader . getResource ( resourceLocation ) . getInputStream ( ) ) ) ) ; } catch ( IOException e ) { throw new ScriptingException ( _CHAR Failed to load script resource [ _CHAR + resourceLocation + _CHAR ] _CHAR , e ) ; } }
9287	public void updateMemberInfo ( Player player ) { PacketSendUtility . broadcastPacketToLegion ( player . getLegion ( ) , new SM_LEGION_UPDATE_MEMBER ( player , _NUM , _CHAR _CHAR ) ) ; }
9304	public PagesGetHistoryQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
9330	@ Override public void onLocationChanged ( Location loc ) { mCurLocation = loc ; LocationService . location = loc ; updateUI ( ) ; }
9354	public double uniformRand ( ) { return ( rand . nextBoolean ( ) ) ? _NUM . _NUM : - _NUM . _NUM ; }
9358	private static void midPoint ( PointF point , MotionEvent event ) { float x = event . getX ( _NUM ) + event . getX ( _NUM ) ; float y = event . getY ( _NUM ) + event . getY ( _NUM ) ; point . set ( x / _NUM , y / _NUM ) ; }
9394	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_NPC_ATTACK ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
9439	public boolean isHidden ( final WebElement element , int timeout ) { return isConditionMet ( not ( visibilityOf ( element ) ) , timeout ) ; }
9466	private void initializeGooglePlusVariables ( ) { GoogleSignInOptions gso = new GoogleSignInOptions . Builder ( GoogleSignInOptions . DEFAULT_SIGN_IN ) . requestEmail ( ) . requestProfile ( ) . build ( ) ; mGoogleApiClient = new GoogleApiClient . Builder ( this ) . enableAutoManage ( this , this ) . addApi ( Auth . GOOGLE_SIGN_IN_API , gso ) . build ( ) ; }
9468	public void removeCategoriesListener ( SnapshotCategoriesListener listener ) { listeners . remove ( listener ) ; }
9470	public void drawScreen ( int par1 , int par2 , float par3 ) { if ( reinit ) { initGui ( ) ; reinit = _BOOL ; } super . drawScreen ( par1 , par2 , par3 ) ; }
9475	public boolean hasKey ( String key ) { return internalMap . containsKey ( key ) ; }
9500	public Builder duration ( Number duration ) { this . duration = duration ; return this ; }
9532	protected String resolveExternalPublic ( String publicId , String resolver ) throws IOException { Resolver r = queryResolver ( resolver , _CHAR fpi2l _CHAR , publicId , _NULL ) ; if ( r != _NULL ) { return r . resolvePublic ( publicId , _NULL ) ; } else { return _NULL ; } }
9550	public List < T > toList ( ) { @ SuppressWarnings ( _CHAR unchecked _CHAR ) T [ ] copiedElements = ( T [ ] ) new Object [ numElements ] ; System . arraycopy ( elements , _NUM , copiedElements , _NUM , numElements ) ; return Arrays . asList ( copiedElements ) ; }
9551	public boolean dump_summaries ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - summaries _CHAR ) ; }
9555	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_ENEMY_ATTACK ( String value1 , int num2 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , num2 , value0 ) ; }
9573	protected void moveToUnusable ( ) { try { _space . stopInternal ( ) ; } catch ( SpaceAlreadyStoppedException e ) { } catch ( RemoteException e ) { } }
9576	private Object [ ] next ( ) throws CarbonSortKeyAndGroupByException { return getSortedRecordFromFile ( ) ; }
9589	public void addAll ( X509TrustManager [ ] mgrs ) { for ( X509TrustManager mgr : mgrs ) { add ( mgr ) ; } }
9598	public static String separatorsToWindows ( String path ) { if ( path == _NULL || path . indexOf ( UNIX_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( UNIX_SEPARATOR , WINDOWS_SEPARATOR ) ; }
9601	TypeNode typeNode ( int id , Type type , ClassHierarchy hierarchy ) { if ( type == _NULL || hierarchy == _NULL ) { throw new InternalTypingException ( ) ; } this . id = id ; this . hierarchy = hierarchy ; type . apply ( this ) ; return result ; }
9611	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_CANT_RETURN_ITEM_MULTI ( int num1 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0s ) ; }
9612	public boolean contains ( short value ) { for ( int i = _NUM ; i < fLength ; ++ i ) { if ( fData [ i ] == value ) { return _BOOL ; } } return _BOOL ; }
9613	public MessagesGetDialogsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
9640	Collection < ? extends ClientRequestResult > handleRetrieveConfigurationsRequest ( final ClientRequest configurationRequest , final Session session , final Destination replyDestination ) { if ( configurationRequest . getRequestParameter ( ) != _NULL ) { return configurationLoader . getConfigurationReports ( configurationRequest . getRequestParameter ( ) ) ; } else { return configurationLoader . getConfigurationReports ( ) ; } }
9641	private void doUpdateAction ( DataSupport baseObj , List < Field > supportedFields ) throws SecurityException , IllegalArgumentException , NoSuchMethodException , IllegalAccessException , InvocationTargetException { ContentValues values = new ContentValues ( ) ; beforeUpdate ( baseObj , supportedFields , values ) ; updating ( baseObj , values ) ; afterUpdate ( baseObj ) ; }
9651	private void removeAllTraffic ( ) { List < AirMapTraffic > removed = new ArrayList < > ( allTraffic ) ; allTraffic . clear ( ) ; notifyRemoved ( removed ) ; }
9659	public void disableDashedLine ( ) { mDashPathEffect = _NULL ; }
9677	public Enumeration < V > elements ( ) { return new ValueIterator ( ) ; }
9683	public WallGetRepostsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
9684	@ Override public int [ ] makeInverseCumulativeTestValues ( ) { return new int [ ] { _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
9690	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
9704	public static SM_SYSTEM_MESSAGE STR_MSG_FPHeal_TO_OTHER ( String value0 , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 ) ; }
9707	public static TeleportCause toNukkit ( org . bukkit . event . player . PlayerTeleportEvent . TeleportCause cause ) { switch ( cause ) { case COMMAND : return TeleportCause . COMMAND ; case NETHER_PORTAL : return TeleportCause . NETHER_PORTAL ; case PLUGIN : return TeleportCause . PLUGIN ; default : return TeleportCause . UNKNOWN ; } }
9714	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
9722	public UsersGetFollowersQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
9733	public int addNodeRow ( ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
9751	public int size ( ) { return args . length ; }
9755	public void clearCache ( ) { DiskLruCache . clearCache ( mCacheDir ) ; }
9762	public static ZKLogMetadataForReader of ( URI uri , String logName , String logIdentifier ) { return new ZKLogMetadataForReader ( uri , logName , logIdentifier ) ; }
9810	public Iterator keys ( ) { return this . map . keySet ( ) . iterator ( ) ; }
9811	public void collapseDataSource ( DataSource dataSource ) { collapseNode ( getNode ( dataSource ) ) ; }
9865	protected String createAgentID ( int iLen ) { String sTemp = String . valueOf ( new Date ( ) . getTime ( ) ) ; return sTemp . substring ( sTemp . length ( ) - iLen ) ; }
9880	public double [ ] toArray ( ) { return new double [ ] { x , y , z } ; }
9886	public static Hash of ( byte [ ] data ) { return new Hash ( hash ( data , _NUM , data . length ) ) ; }
9906	public static SM_SYSTEM_MESSAGE STR_MSG_PACK_ITEM_WRONG_TARGET_ITEM_CATEGORY ( int parentNameId , int targetNameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , parentNameId , targetNameId ) ; }
9925	public static SM_SYSTEM_MESSAGE STR_FIELDABYSS_SHIELD_BROKEN ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
9953	protected void reset ( ) throws XNIException { int count = fComponents . size ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { XMLComponent c = ( XMLComponent ) fComponents . get ( i ) ; c . reset ( this ) ; } }
9973	public void readBody ( DataInput dataIn ) throws IOException { try { Body = SerializationHelper . readObject ( ( InputStream ) dataIn ) ; } catch ( ClassNotFoundException ex ) { throw new IOException ( ex . toString ( ) ) ; } }
9993	public static Map < String , Object > sendOrderPayRetryNotification ( DispatchContext ctx , Map < String , ? extends Object > context ) { return sendOrderNotificationScreen ( ctx , context , _CHAR PRDS_ODR_PAYRETRY _CHAR ) ; }
10005	public static boolean similar ( ItemStack a , ItemStack b ) { if ( a == _NULL || b == _NULL ) { return a == b ; } return a . getItem ( ) == b . getItem ( ) && a . getItemDamage ( ) == b . getItemDamage ( ) ; }
10025	public static JsonValue value ( String string ) { return string == _NULL ? NULL : new JsonString ( string ) ; }
10033	private void writeVersionFile ( ) throws IOException { RandomAccessFile out = new RandomAccessFile ( fName ( versionFile ) , _CHAR rw _CHAR ) ; try { writeInt ( out , version ) ; out . getFD ( ) . sync ( ) ; } finally { out . close ( ) ; } }
10044	@ RequestMapping ( value = { _CHAR / issue /** '' } , method = RequestMethod . GET ) public String returnIssueDetailsView ( ) { return '' issueDetails '' ; }
10062	private void writeDataTofile ( Object [ ] [ ] recordHolderList , int entryCountLocal , File file ) throws CarbonSortKeyAndGroupByException { if ( parameters . isSortFileCompressionEnabled ( ) || parameters . isPrefetch ( ) ) { writeSortTempFile ( recordHolderList , entryCountLocal , file ) ; return ; } writeData ( recordHolderList , entryCountLocal , file ) ; }
10089	public static String encodeWebSafe ( byte [ ] source , boolean doPadding ) { return encode ( source , _NUM , source . length , WEBSAFE_ALPHABET , doPadding ) ; }
10104	public static Event createEvent ( ) { return new Event ( ) ; }
10109	@ Override public int read ( ) { return - _NUM ; }
10125	public UrlSpaceConfigurer credentialsProvider ( CredentialsProvider credentialsProvider ) { return securityConfig ( new SecurityConfig ( credentialsProvider ) ) ; }
10131	public static boolean isConnectedWifi ( Context context ) { NetworkInfo info = NetworkUtil . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_WIFI ) ; }
10138	public WatchedObject addIdleWatch ( ConnectionResource client ) { return addWatch ( new ClientWatchedObject ( this , client ) ) ; }
10210	@ Override public void close ( ) { try { if ( auth != _NULL ) { auth . close ( ) ; } } catch ( IOException e ) { LOG . error ( _CHAR Failed to close the authentication service _CHAR , e ) ; } client . close ( ) ; }
10270	public BoardGetTopicsQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
10283	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
10296	public static PokkitMaterialData fromBukkit ( Material material , int bukkitDamage ) { @ SuppressWarnings ( _CHAR deprecation _CHAR ) int bukkitId = material . getId ( ) ; return new PokkitMaterialData ( bukkitId , bukkitDamage ) ; }
10326	@ Deprecated protected void wait ( int duration , Runnable callBack ) { executor . schedule ( callBack , duration , TimeUnit . MILLISECONDS ) ; }
10341	@ Override public String toString ( ) { return _CHAR FPS : _CHAR + currentFPS ; }
10360	public boolean isScaleEnabled ( ) { return mIsScaleEnabled ; }
10363	public static short quantize ( float f , float fMin , float fRange ) { return ( ( short ) ( ( ( double ) f - ( double ) fMin ) * _NUM . _NUM / ( fRange ) - _NUM . _NUM ) ) ; }
10398	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_UNBAN_SUCCESS ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10429	public BoardGetTopicsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
10467	public static ActivityAssigner instance ( Context context ) { ThreadUtils . assertOnUiThread ( ) ; if ( sInstance == _NULL ) { sInstance = new ActivityAssigner ( context ) ; } return sInstance ; }
10472	public void push ( PageObjectContext element ) { deque . push ( element ) ; }
10492	public void showEmpty ( Drawable emptyImageDrawable , String emptyTextTitle , String emptyTextContent , List < Integer > skipIds ) { switchState ( EMPTY , emptyImageDrawable , emptyTextTitle , emptyTextContent , _NULL , _NULL , skipIds ) ; }
10515	public boolean isAbnormalPresentBySkillId ( int skillId ) { for ( Effect effect : abnormalEffectMap . values ( ) ) { if ( effect . getSkillId ( ) == skillId ) { return _BOOL ; } } return _BOOL ; }
10527	public Scoop bind ( Object obj , int toppingId , View view ) { return bind ( obj , toppingId , view , _NULL ) ; }
10533	public MessagesGetDialogsQuery startMessageId ( Integer value ) { return unsafeParam ( _CHAR start_message_id _CHAR , value ) ; }
10544	public static void markToken ( JTextComponent pane , Token token , SimpleMarker marker ) { markText ( pane , token . start , token . end ( ) , marker ) ; }
10587	private void resizePanelToState ( PanelState state , StateChangeReason reason ) { cancelHeightAnimation ( ) ; final float height = getPanelHeightFromState ( state ) ; setPanelHeight ( height ) ; setPanelState ( state , reason ) ; requestUpdate ( ) ; }
10611	private int findInsertionIndex ( final int key ) { return findInsertionIndex ( keys , states , key , mask ) ; }
10630	@ Override public void inspectVolume ( CommandInput input , CompletionHandler completionHandler ) { createOrUpdateTargetSsl ( input ) ; String path = String . format ( _CHAR / volumes / % s _CHAR , input . getProperties ( ) . get ( DOCKER_VOLUME_NAME_PROP_NAME ) ) ; sendGet ( UriUtils . extendUri ( input . getDockerUri ( ) , path ) , input . getProperties ( ) , completionHandler ) ; }
10631	public void start ( ScheduledExecutorService ses ) { start_ ( ses , _BOOL ) ; }
10679	public MessagesGetHistoryQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
10681	public void changeSpaceBackgroundColor ( @ ColorInt int color ) { if ( color == spaceBackgroundColor ) { Log . d ( TAG , _CHAR changeSpaceBackgroundColor : color already changed _CHAR ) ; return ; } spaceBackgroundColor = color ; setBackgroundColors ( ) ; centreContent . changeBackgroundColor ( color ) ; }
10693	public static SM_SYSTEM_MESSAGE STR_MSG_LOOT_PAUSE_END_ME ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
10697	public static String mapChineseMarksToAnsi ( String text ) { }
10705	public Enumeration < K > keys ( ) { return new KeyIterator ( ) ; }
10715	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_RandomMoveLoc_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
10720	protected Set < D > computeCallToReturnFlowFunction ( FlowFunction < D > callToReturnFlowFunction , D d1 , D d2 ) { return callToReturnFlowFunction . computeTargets ( d2 ) ; }
10731	public static SM_SYSTEM_MESSAGE STR_PARTY_INVITED_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10746	public static SM_SYSTEM_MESSAGE STR_COMBINE_TOO_FAR_FROM_TOOL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10749	public static int compareTo ( double x , double y , double eps ) { if ( equals ( x , y , eps ) ) { return _NUM ; } else if ( x < y ) { return - _NUM ; } return _NUM ; }
10768	@ Override public void channelDisconnected ( ChannelHandlerContext ctx , ChannelStateEvent e ) throws Exception { log . info ( _CHAR Channel disconnected IP : _CHAR + inetAddress . getHostAddress ( ) ) ; }
10770	public static double mean ( final double [ ] values ) { double sum = _NUM ; for ( double val : values ) { sum += val ; } return sum / values . length ; }
10876	public static String lower ( String string ) { return string != _NULL ? string . toLowerCase ( ) : _NULL ; }
10887	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
10897	private boolean isSentenceStart ( int index ) { FeatureVector fv = features . getFeatureVector ( index ) ; return fv . getByteFeature ( fiSentenceStart ) == _NUM && fv . getByteFeature ( fiWordStart ) == _NUM && ( ! isHalfphone || fv . getByteFeature ( fiLR ) == fvLR_L ) ; }
10901	public static ServiceClient createServiceClient ( TrustManager trustManager , KeyManager keyManager ) { return createServiceClient ( CertificateUtil . createSSLContext ( trustManager , keyManager ) ) ; }
10904	public ConfigDialog switchTab ( String tabLabel ) { if ( ! tabs . isEmpty ( ) ) { tabs . stream ( ) . filter ( _NULL ) . findFirst ( ) . orElseThrow ( _NULL ) . click ( ) ; } return this ; }
10926	private void calcActualRenews ( ) { calcActualRenews ( SystemTime . timeMillis ( ) ) ; }
10949	public void reload ( SampleAttributeTable sampleAttributeTable ) { originalBytes = _NULL ; load ( sampleAttributeTable ) ; }
10996	public void sentData ( ) { hasSentData = _BOOL ; lastSendTime = System . currentTimeMillis ( ) ; }
11002	public int size ( String group ) { TupleSet tset = getGroup ( group ) ; return ( tset == _NULL ? _NUM : tset . getTupleCount ( ) ) ; }
11014	public AudioGetAlbumsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
11036	public boolean isDisplayed ( final WebElement element , int timeout ) { return isConditionMet ( visibilityOf ( element ) , timeout ) ; }
11038	public boolean lockEnabled ( ) { return getModelEntity ( ) . lock ( ) ; }
11067	public boolean supports ( @ MagicConstant ( flagsFromClass = Features . class ) int capability ) { IAndroidTarget target = getTarget ( ) ; if ( target != _NULL ) { return RenderService . supportsCapability ( getModule ( ) , target , capability ) ; } return _BOOL ; }
11079	public static < T > T assertArgumentNotNull ( T argument , String argumentName ) { if ( argument == _NULL ) throw new IllegalArgumentException ( _CHAR Argument can not be _NULL - _CHAR_CHAR_CHAR _CHAR ) ; return argument ; }
11085	public double maxValue ( ) { Iterator iIter = asTreeMap ( ) . values ( ) . iterator ( ) ; Double dMax = Double . NEGATIVE_INFINITY ; while ( iIter . hasNext ( ) ) { Double dVal = ( Double ) iIter . next ( ) ; dMax = ( dVal > dMax ) ? dVal : dMax ; } return dMax ; }
11103	protected Set < D > computeCallFlowFunction ( FlowFunction < D > callFlowFunction , D d1 , D d2 ) { return callFlowFunction . computeTargets ( d2 ) ; }
11105	public void ready ( ) { }
11129	public NewsfeedGetMentionsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
11130	private ProxyBypassListSelector buildLocalBypassSelector ( ProtocolDispatchSelector ps ) { List < UriFilter > localBypassFilter = new ArrayList < UriFilter > ( ) ; localBypassFilter . add ( new IELocalByPassFilter ( ) ) ; return new ProxyBypassListSelector ( localBypassFilter , ps ) ; }
11139	public static boolean isConnectedMobile ( Context context ) { NetworkInfo info = NetworkUtil . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_MOBILE ) ; }
11147	public void disbandLegion ( Legion legion ) { for ( Integer memberObjId : legion . getLegionMembers ( ) ) { this . allCachedLegionMembers . remove ( getLegionMemberEx ( memberObjId ) ) ; } SiegeService . getInstance ( ) . cleanLegionId ( legion . getLegionId ( ) ) ; updateAfterDisbandLegion ( legion ) ; deleteLegionFromDB ( legion ) ; }
11173	public static EnumType create ( ProtoContainerElement parent , EnumDescriptorProto proto , String path ) { return new EnumType ( parent , proto , path ) ; }
11176	public void printList ( ) { System . out . println ( this . optionsTable . toString ( ) ) ; }
11181	public static boolean isValidBedGraphLine ( String line ) { String [ ] bdg = line . split ( _CHAR \ t _CHAR ) ; if ( bdg . length < _NUM ) { return _BOOL ; } try { Integer . parseInt ( bdg [ _NUM ] ) ; Integer . parseInt ( bdg [ _NUM ] ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
11186	protected BoardGetTopicsQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
11206	public static Page createPage ( ) { return new Page ( Constants . DEFAULT_PREFIX_PAGE + internalId ++ , _BOOL ) ; }
11261	public static SM_SYSTEM_MESSAGE STR_GUILD_CHANGE_MEMBER_RANK_HE_IS_NOT_MY_GUILD_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11307	private void performHighlightDrag ( MotionEvent e ) { Highlight h = mChart . getHighlightByTouchPoint ( e . getX ( ) , e . getY ( ) ) ; if ( h != _NULL && ! h . equalTo ( mLastHighlighted ) ) { mLastHighlighted = h ; mChart . highlightValue ( h , _BOOL ) ; } }
11325	public boolean isValid ( String value ) { if ( value == _NULL ) { return _BOOL ; } for ( int i = _NUM ; i < patterns . length ; i ++ ) { if ( patterns [ i ] . matcher ( value ) . matches ( ) ) { return _BOOL ; } } return _BOOL ; }
11329	private boolean hasSimilarityMeasure ( ) { return this . isSimilarityMeasure ; }
11340	private Builder className ( String className ) { this . className = className ; return this ; }
11357	public RequestHandle head ( String url , ResponseHandlerInterface responseHandler ) { return head ( _NULL , url , _NULL , responseHandler ) ; }
11370	public boolean hasProperty ( String name ) { return config . hasPath ( name ) ; }
11402	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_CANT_UNSUMMON_STATE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
11416	public Builder weight ( Number weight ) { this . weight = weight ; return this ; }
11458	public ImmutableList < String > lines ( ) { return lines ; }
11463	private static boolean isMergedSegment ( String segName ) { if ( segName . contains ( _CHAR . _CHAR ) ) { return _BOOL ; } return _BOOL ; }
11487	public void insertGroup ( Group group , int position ) throws ObjectAlreadyHasException , IndexOutOfBoundsException { assertNotContains ( group ) ; groups . add ( position , group . getName ( ) ) ; }
11507	private ConnectDatum tryConnect ( ) { try ( SocketChannel dstSocket = SocketChannel . open ( ) ) { return tryConnect ( dstSocket ) ; } catch ( IOException ex ) { throw new RuntimeException ( _CHAR socket creation failed _CHAR , ex ) ; } }
11525	private void beforeBulkExecution ( IReplicationInBatchContext context ) { if ( _operationStatisticsHandler != _NULL ) { MirrorOperationsImpl sourceChannelStatistics = ( MirrorOperationsImpl ) _operationStatisticsHandler . getSourceChannelStatistics ( context . getSourceLookupName ( ) ) ; List < BulkItem > bulk = context . getPendingContext ( ) ; sourceChannelStatistics . addOperationCount ( bulk ) ; } }
11526	public ServerServiceDefinition intercept ( ServerServiceDefinition serviceDef ) { return ServerInterceptors . intercept ( serviceDef , this ) ; }
11528	public boolean isSyllableBoundary ( List syllablePhones , String [ ] wordPhones , int currentWordPhone ) { return _BOOL ; }
11540	public void drawScreen ( int par1 , int par2 , float par3 ) { if ( reinit ) { initGui ( ) ; reinit = _BOOL ; } this . guiList . drawScreen ( par1 , par2 , par3 ) ; super . drawScreen ( par1 , par2 , par3 , _BOOL ) ; }
11554	public int uninstallSilent ( Context context , String packageName ) { return uninstallSilent ( context , packageName , _BOOL ) ; }
11581	public boolean hasDeletedSlots ( ) { long blkNum = ( Long ) getVal ( OFFSET_LDS_BLOCKID , BIGINT ) . asJavaVal ( ) ; return blkNum != NO_SLOT_BLOCKID ? _BOOL : _BOOL ; }
11607	public void writeBytes ( byte [ ] value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
11611	private static void decreaseKinahAmount ( Player player , long price ) { player . getInventory ( ) . decreaseKinah ( price ) ; }
11661	String siteUrl ( ) { return mSiteUrl ; }
11674	boolean isYoung ( ) { return mYoung ; }
11683	public static void exitSafeRegion ( boolean token ) { sEnabled = token ; }
11712	public static UByte ubyte ( long value ) throws NumberFormatException { return UByte . valueOf ( value ) ; }
11713	public void addConnection ( final IConnectionWithReconnect connection , final Runnable connector ) { synchronized ( connections ) { connections . put ( connection , connector ) ; } }
11726	public boolean kindIsOneOf ( List < Kind > kinds ) { if ( kind != _NULL ) { return kind . isOneOf ( kinds ) ; } return _BOOL ; }
11775	private static ECPoint publicPointFromPrivate ( BigInteger privKey ) { if ( privKey . bitLength ( ) > CURVE . getN ( ) . bitLength ( ) ) { privKey = privKey . mod ( CURVE . getN ( ) ) ; } return new FixedPointCombMultiplier ( ) . multiply ( CURVE . getG ( ) , privKey ) ; }
11810	public static IOFileFilter sizeFileFilter ( long threshold , boolean acceptLarger ) { return new SizeFileFilter ( threshold , acceptLarger ) ; }
11819	public Builder addColumnCategorical ( String name , String ... stateNames ) { return addColumn ( new CategoricalMetaData ( name , stateNames ) ) ; }
11833	public final String yytext ( ) { return new String ( zzBuffer , zzStartRead , zzMarkedPos - zzStartRead ) ; }
11913	@ Override public boolean accept ( File file ) { return file . isFile ( ) ; }
11944	public static String escapeString ( String str ) { return escapeString ( str , ESCAPE_CHAR , COMMA ) ; }
11951	static < T > AnyVal < T > lit ( T matchValue ) { return new AnyVal < T > ( matchValue , _BOOL , _BOOL ) { } ; }
11962	public static ProcessEngineInfo retry ( String resourceUrl ) { log . debug ( _CHAR retying initializing of resource { } _CHAR , resourceUrl ) ; try { return initProcessEnginFromResource ( new URL ( resourceUrl ) ) ; } catch ( MalformedURLException e ) { throw new ActivitiIllegalArgumentException ( _CHAR invalid url : _CHAR + resourceUrl , e ) ; } }
11965	static boolean isRtlMargin ( String attribute ) { if ( SdkConstants . ATTR_LAYOUT_MARGIN_LEFT . equals ( attribute ) || SdkConstants . ATTR_LAYOUT_MARGIN_RIGHT . equals ( attribute ) ) { return _BOOL ; } return _BOOL ; }
11974	public static final String repeatString ( String sStr , int iTimes ) { StringBuffer sb = new StringBuffer ( ) ; for ( int iCnt = _NUM ; iCnt < iTimes ; iCnt ++ ) sb . append ( sStr ) ; return sb . toString ( ) ; }
11978	public void takeDown ( ) { synchronized ( System . out ) { System . out . println ( _CHAR Finished ... _CHAR + ( new SimpleDateFormat ( _CHAR yyyy . MM . dd HH : mm : ss _CHAR ) ) . format ( new Date ( ) ) ) ; } }
11989	public Node addChild ( Node parent ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
12036	public void afterOperationsBatchSynchronization ( OperationsBatchData batchData ) { }
12049	public static void updateUserNamePictureCache ( String accountId , String fullName , Bitmap bitmap ) { sChildAccountId = _NULL ; sCachedBadgedPicture = _NULL ; sToNamePicture . put ( accountId , new Pair < String , Bitmap > ( fullName , makeRoundUserPicture ( bitmap ) ) ) ; }
12053	public static Tuple min ( Iterator tuples , String field ) { return min ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
12055	public MarketReorderAlbumsQuery after ( Integer value ) { return unsafeParam ( _CHAR after _CHAR , value ) ; }
12068	public static final int find ( int [ ] a , int key ) { for ( int i = _NUM ; i < a . length ; i ++ ) { if ( a [ i ] == key ) { return i ; } } return - _NUM ; }
12070	public T execute ( ) throws Exception { return task . execute ( ) ; }
12099	public void putFloat ( String key , float value ) { checkForNullKey ( key ) ; preferences . edit ( ) . putFloat ( key , value ) . apply ( ) ; }
12100	public boolean isInverted ( ) { return mInverted ; }
12119	public String buildBoundaryComment ( String boundaryType , String widgetType , String widgetName ) { return formatBoundaryComment ( boundaryType , widgetType , widgetName ) ; }
12127	public static SM_SYSTEM_MESSAGE STR_UNION_CHANGE_FORCE_NUMBER_ME ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
12148	public boolean hasWord ( String word ) { return root . hasWord ( word , _NUM ) ; }
12151	public int peek ( ) { if ( type == MUST_READ ) { int argAndType = in . readByte ( ) & _NUM ; type = argAndType & _NUM ; arg = ( argAndType & _NUM ) >> _NUM ; } return type ; }
12162	public boolean isDirectory ( ) { return directory ; }
12178	@ SuppressWarnings ( _CHAR WeakerAccess _CHAR ) public boolean isFooter ( int position ) { return footer != _NULL && position == getFooterPosition ( ) ; }
12201	private static X509Certificate convertToJcaCertificate ( X509CertificateHolder bouncyCastleCertificate ) { try { return new JcaX509CertificateConverter ( ) . getCertificate ( bouncyCastleCertificate ) ; } catch ( CertificateException e ) { throw new CertificateCreationException ( _CHAR Unable to convert X590CertificateHolder to JCA X590Certificate _CHAR , e ) ; } }
12232	public static boolean hasValidCredentials ( ) { return apiKey != _NULL && ! apiKey . isEmpty ( ) && authToken != _NULL && ! authToken . isEmpty ( ) && hasValidAuthenticatedUser ( ) ; }
12252	public void checkWarnings ( ) { super . checkWarnings ( ) ; if ( ! suppressWarnings ( _CHAR unchecked _CHAR ) && ! hasAnnotationSafeVarargs ( ) && isVariableArity ( ) && ! getParameter ( getNumParameter ( ) - _NUM ) . type ( ) . isReifiable ( ) ) warning ( _CHAR possible heap pollution for '' + '' variable arity parameter '' ) ; }
12292	private void calculateNewAverage ( final long removedValue , final long timeDifference , final boolean increaseUsedFields ) { float oldSum = currentAverage * usedFields ; if ( increaseUsedFields ) usedFields ++ ; currentAverage = ( oldSum - removedValue + timeDifference ) / usedFields ; }
12307	static void removeSoIfExit ( String libName , int version ) { String file = _targetSoFile ( libName , version ) ; File a = new File ( file ) ; if ( a . exists ( ) ) { a . delete ( ) ; } }
12321	public void onStackAnimationFinished ( ) { mStackAnimationCount -- ; if ( mStackAnimationCount == _NUM ) super . onAnimationFinished ( ) ; }
12363	@ Override public void mark ( int readlimit ) { }
12410	public boolean isAvoidFirstLastClippingEnabled ( ) { return mAvoidFirstLastClipping ; }
12425	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoFly_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
12434	public static SM_SYSTEM_MESSAGE STR_GUILD_INVITE_HE_IS_MY_GUILD_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12470	boolean isValueEmpty ( String attribute ) { return TextUtils . isEmpty ( getValue ( attribute ) ) ; }
12540	public static boolean isWindowsXPLookAndFeel ( ) { return UIUtils . isWindowsXPLookAndFeel ( ) ; }
12553	public void takeDown ( ) { if ( ! Silent ) System . err . println ( this . getName ( ) + _CHAR : _CHAR + _CHAR Finished . '' ) ; }
12601	public final void removeChangeListener ( ChangeListener listener ) { listeners . remove ( listener ) ; }
12608	public static final double sum ( double [ ] a ) { double sum = _NUM ; for ( int i = _NUM ; i < a . length ; ++ i ) { sum += a [ i ] ; } return sum ; }
12706	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getCustomerDao ( ) : _NULL ; }
12714	public List < String > sortFields ( ) { return sortFields ; }
12741	public static SM_SYSTEM_MESSAGE STR_MSG_EDIT_CHAR_NAME_SUCCESS ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
12773	private static void reloadAttributeOptionCombos ( Collection < ValidationResult > results , DataElementCategoryService dataElementCategoryService ) { for ( ValidationResult result : results ) { result . setAttributeOptionCombo ( dataElementCategoryService . getDataElementCategoryOptionCombo ( result . getAttributeOptionCombo ( ) . getId ( ) ) ) ; } }
12786	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
12790	public void disableDashedHighlightLine ( ) { mHighlightDashPathEffect = _NULL ; }
12804	@ Override public IString2IntegerMap create ( IName2IdMap label2id , String fileName , ProgressListener progress ) throws IOException , CanceledException { if ( String2IntegerFileBasedABinMap . isTableFile ( fileName ) ) return new String2IntegerFileBasedABinMap ( fileName ) ; else return new Accession2IdMap ( label2id , fileName , progress ) ; }
12810	public static < T > ArrayList < T > provideArrayList ( final Class < T > ignored ) { return new ArrayList < > ( ) ; }
12812	private void writeFlowPolicy ( Document document , Element rootElement ) { Element flowPolicy = document . createElement ( _CHAR flowpolicy _CHAR ) ; rootElement . appendChild ( flowPolicy ) ; for ( FlowPair pair : this . document . getFlowPolicy ( ) ) writeFlowPair ( pair , document , flowPolicy ) ; }
12820	@ Override public void run ( ) { firstWavePath . reset ( ) ; secondWavePath . reset ( ) ; shift = shift + speed ; invalidate ( ) ; handler . postDelayed ( new WaveRunnable ( ) , _NUM ) ; }
12826	public long convert ( ) { return ints2long ( high , low ) ; }
12840	private void tryLoadData ( ) { if ( fullBookModel != _NULL ) { onLoadDataSuccess ( fullBookModel ) ; } else if ( isSubscriptionInactive ( loadFullBookSubscription ) ) { getView ( ) . showLoading ( ) ; loadData ( ) ; } else { getView ( ) . showLoading ( ) ; } }
12841	public boolean removeChild ( int node ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
12890	public final boolean isEmpty ( ) { return size == _NUM ; }
12940	public void assertion ( AssertionError e ) { currentTest . get ( ) . assertion ( e ) ; }
12952	private static boolean isGnome ( ) { return System . getenv ( _CHAR GNOME_DESKTOP_SESSION_ID _CHAR ) != _NULL ; }
12960	public static Interface create ( ProtoFile parent , ServiceDescriptorProto proto , String path ) { return new Interface ( parent , proto , path ) ; }
12993	public boolean isNative ( ) { return Modifier . isNative ( this . getModifiers ( ) ) ; }
13008	public void close ( ) { thriftWriter . close ( ) ; }
13014	public static boolean isValidBedLine ( String line ) { String [ ] bdg = line . split ( _CHAR \ t _CHAR ) ; if ( bdg . length < _NUM ) { return _BOOL ; } try { Integer . parseInt ( bdg [ _NUM ] ) ; Integer . parseInt ( bdg [ _NUM ] ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
13051	public static < T > boolean contains ( Enumeration < T > enumeration , T element ) { if ( enumeration != _NULL ) { while ( enumeration . hasMoreElements ( ) ) { T candidate = enumeration . nextElement ( ) ; if ( ObjectUtils . nullSafeEquals ( candidate , element ) ) return _BOOL ; } } return _BOOL ; }
13055	public VideoGetUserVideosQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
13078	public void addListener ( @ NotNull ConfigurationListener listener ) { if ( myListeners == _NULL ) { myListeners = new ArrayList < > ( ) ; } myListeners . add ( listener ) ; }
13101	public static SM_SYSTEM_MESSAGE STR_MSG_MY_PARTY_STATE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13110	public static < K , V > boolean putMapNotNullKey ( Map < K , V > map , K key , V value ) { if ( map == _NULL || key == _NULL ) { return _BOOL ; } map . put ( key , value ) ; return _BOOL ; }
13156	public UsersSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
13166	@ Override public double [ ] makeCumulativeTestPoints ( ) { return new double [ ] { - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , - _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
13228	public void addActionListener ( ActionListener actionListener ) { this . listenerList . add ( ActionListener . class , actionListener ) ; }
13241	public Builder addConverterFactory ( Converter . Factory factory ) { converterFactories . add ( checkNotNull ( factory , _CHAR factory == _NULL _CHAR ) ) ; return this ; }
13257	public void flushAll ( long txNum ) { bufferPool . flushAll ( txNum ) ; }
13269	private void addWindowsPath ( int id , String path ) { if ( path == _NULL || path . equals ( _CHAR _CHAR ) ) { return ; } _sb . append ( id ) ; _sb . append ( _CHAR RCDATA BEGIN \ _CHAR _CHAR ) ; _sb . append ( path . replaceAll ( _CHAR \\\\ _CHAR , _CHAR \\\\\\\\ _CHAR ) . replaceAll ( _CHAR / _CHAR , _CHAR \\\\\\\\ _CHAR ) ) ; _sb . append ( _CHAR \\ _NUM \ _CHAR END \ n _CHAR ) ; }
13282	public static void registerReceiver ( Context context , BroadcastReceiver receiver , String ... actions ) { IntentFilter filter = new IntentFilter ( ) ; for ( String action : actions ) filter . addAction ( action ) ; LocalBroadcastManager . getInstance ( context ) . registerReceiver ( receiver , filter ) ; }
13301	private void updateOCVersion ( ) { UpdateOCVersionOperation update = new UpdateOCVersionOperation ( getAccount ( ) , getContext ( ) ) ; RemoteOperationResult result = update . execute ( getClient ( ) ) ; if ( ! result . isSuccess ( ) ) { mLastFailedResult = result ; } else { mIsShareSupported = update . getOCVersion ( ) . isSharedSupported ( ) ; } }
13304	private boolean maybeDisableSync ( ) { if ( mSyncEverything . isChecked ( ) || ! getSelectedModelTypes ( ) . isEmpty ( ) || ! canDisableSync ( ) ) { return _BOOL ; } SyncController . get ( getActivity ( ) ) . stop ( ) ; mSyncSwitchPreference . setChecked ( _BOOL ) ; updateSyncStateFromSwitch ( ) ; return _BOOL ; }
13333	public WallSearchQueryWithExtended searchExtended ( UserActor actor ) { return new WallSearchQueryWithExtended ( getClient ( ) , actor ) ; }
13351	private boolean isSpdyProxyEnabledForUrl ( String url ) { if ( DataReductionProxySettings . getInstance ( ) . isDataReductionProxyEnabled ( ) && url != _NULL && ! url . toLowerCase ( Locale . US ) . startsWith ( _CHAR https : // '' ) && ! isIncognito ( ) ) { return true ; } return false ; }
13376	@ Override public boolean shouldSkipField ( FieldAttributes fieldAttributes ) { return blacklist . contains ( fieldAttributes . getName ( ) ) ; }
13399	public boolean isPrivate ( ) { return Modifier . isPrivate ( this . getModifiers ( ) ) ; }
13406	public void merge ( StringMap < T > toMerge ) { toMerge . forEach ( _NULL ) ; }
13423	public boolean isReadOnly ( ) { return m_readOnly ; }
13425	int elapsedMillis ( ) { return ( int ) ( AnimationUtils . currentAnimationTimeMillis ( ) - mStartMillis ) ; }
13437	public DatabaseGetCitiesQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
13446	public static < T > void cancel ( Future < T > future ) { future . raise ( new FutureCancelledException ( ) ) ; }
13472	public synchronized void increaseCurrentCounter ( ) { counters [ currentCounter ] = counters [ currentCounter ] + _NUM ; }
13487	public static ZooKeeperClientBuilder newBuilder ( ) { return new ZooKeeperClientBuilder ( ) ; }
13512	@ Override public boolean ready ( ) throws IOException { return _BOOL ; }
13536	private static float interpolate ( float a , float b , float t ) { return a + ( b - a ) * t ; }
13587	public static final int doubleToShortBits ( final double d ) { long l = Double . doubleToLongBits ( d ) ; return ( int ) ( l >> _NUM ) ; }
13600	public int EOF_sym ( ) { return _NUM ; }
13603	public static double cauchy ( ) { return Math . tan ( Math . PI * ( uniform ( ) - _NUM . _NUM ) ) ; }
13612	public static String utf8BytesWithUtf16LengthToString ( @ Nonnull byte [ ] bytes , int start , int utf16Length ) { return utf8BytesWithUtf16LengthToString ( bytes , start , utf16Length , _NULL ) ; }
13635	public Builder translationX ( float translationX ) { this . translationX = translationX ; return this ; }
13664	public void updateEnableStateFXItems ( ) { for ( MenuItem menuItem : menuItem2CommandFX . keySet ( ) ) { ICommand command = menuItem2CommandFX . get ( menuItem ) ; menuItem . setDisable ( ! command . isApplicable ( ) ) ; if ( command instanceof ICheckBoxCommand ) { ( ( CheckMenuItem ) menuItem ) . setSelected ( ( ( ICheckBoxCommand ) command ) . isSelected ( ) ) ; } } }
13668	public void registerBootstrapNamespaces ( ) throws PulsarServerException { if ( registerNamespace ( getHeartbeatNamespace ( host , config ) , _BOOL ) ) { this . uncountedNamespaces ++ ; LOG . info ( _CHAR added heartbeat namespace name in local cache : ns = { } _CHAR , getHeartbeatNamespace ( host , config ) ) ; } for ( String namespace : config . getBootstrapNamespaces ( ) ) { if ( registerNamespace ( namespace , _BOOL ) ) { LOG . info ( _CHAR added bootstrap namespace name in local cache : ns = { } _CHAR , namespace ) ; } } }
13670	public static boolean isParameterizedType ( @ Nullable TypeMirror type ) { return type instanceof DeclaredType && ! ( ( DeclaredType ) type ) . getTypeArguments ( ) . isEmpty ( ) ; }
13682	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
13706	public static ExpectedCondition < Boolean > pageUrlIs ( final String url ) { return _NULL ; }
13812	private static boolean permissionExists ( String permission ) { Integer minVersion = MIN_SDK_PERMISSIONS . get ( permission ) ; return minVersion == _NULL || Build . VERSION . SDK_INT >= minVersion ; }
13828	protected void reset ( ) throws XNIException { int count = fComponents . size ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { XMLComponent c = ( XMLComponent ) fComponents . get ( i ) ; c . reset ( this ) ; } }
13850	private void emitSuccess ( @ NotNull LengthOfOutputStream stream ) { Subject < Long , Long > lengthBroadcaster = stream . getLengthBroadcaster ( ) ; lengthBroadcaster . onNext ( stream . getResponseLength ( ) ) ; lengthBroadcaster . onCompleted ( ) ; }
13896	protected URLConnection openConnection ( URL u ) throws IOException { return new HttpmdURLConnection ( u ) ; }
13918	private void startPokeFly ( ) { launchButton . setText ( R . string . main_starting ) ; launchButton . setEnabled ( _BOOL ) ; int statusBarHeight = getStatusBarHeight ( ) ; Intent intent = Pokefly . createIntent ( this , trainerLevel , statusBarHeight , batterySaver ) ; startService ( intent ) ; if ( settings . shouldLaunchPokemonGo ( ) ) { openPokemonGoApp ( ) ; } }
13926	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Slow_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13950	public Future < ProcessResult > stop ( ) throws RabbitMqCommandException { return execute ( _CHAR stop _CHAR ) ; }
13981	private boolean isSentenceEnd ( int index ) { FeatureVector fv = features . getFeatureVector ( index ) ; return fv . getByteFeature ( fiSentenceEnd ) == _NUM && fv . getByteFeature ( fiWordEnd ) == _NUM && ( ! isHalfphone || fv . getByteFeature ( fiLR ) == fvLR_R ) ; }
13983	private void clearPendingOMADownload ( long downloadId , String installNotifyURI ) { ClearPendingOMADownloadTask task = new ClearPendingOMADownloadTask ( downloadId , installNotifyURI ) ; task . execute ( ) ; }
13997	public String upload_file1 ( String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { String parts [ ] = this . upload_file ( local_filename , file_ext_name , meta_list ) ; if ( parts != _NULL ) { return parts [ _NUM ] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts [ _NUM ] ; } else { return _NULL ; } }
14007	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_SUMMONED_ENEMY_ATTACK ( String value1 , int num2 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , num2 , value0 ) ; }
14091	public static List < String > synthesizerClasses ( ) { return getList ( _CHAR synthesizers . classes . list _CHAR ) ; }
14115	@ Override public long available ( ) { return arr . length - pos ; }
14116	public Object remove ( String key ) { return this . map . remove ( key ) ; }
14149	public boolean hasMoreData ( ) { return signal . hasMoreData ( ) || ! stopWhenTouchingEnd && memoryFilled && posInMemory < memory . length ; }
14157	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
14182	public Expression endsWith ( Value str1 , Value str2 ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
14193	public PhotosSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
14194	public static String removePackageName ( String fully_qualified_name_ ) { if ( fully_qualified_name_ == _NULL ) return _NULL ; int lastdot = fully_qualified_name_ . lastIndexOf ( _CHAR ) ; if ( lastdot < _NUM ) { return _CHAR _CHAR ; } else { return fully_qualified_name_ . substring ( lastdot + _NUM ) ; } }
14213	private static String capitalize ( String s ) { if ( s == _NULL || s . length ( ) == _NUM ) { return _CHAR _CHAR ; } char first = s . charAt ( _NUM ) ; if ( Character . isUpperCase ( first ) ) { return s ; } else { return Character . toUpperCase ( first ) + s . substring ( _NUM ) ; } }
14216	public static String identity ( String str ) { return Normalizer . normalize ( str . trim ( ) . toLowerCase ( ) , Normalizer . Form . NFD ) . replaceAll ( _CHAR [ ^ a - z0 - _NUM ] _CHAR , _CHAR _CHAR ) ; }
14237	private EmoResponse toEmoResponse ( ClientResponse clientResponse ) { return new DropWizard6EmoResponse ( clientResponse ) ; }
14240	public boolean containsJoint ( Joint joint ) { return this . joints . contains ( joint ) ; }
14242	private void loadProcHeader ( ByteBuffer bb ) throws BufferUnderflowException , UTFDataFormatException { procHeader = StreamUtils . readUTF ( bb ) ; assert procHeader != _NULL ; }
14252	public void renew ( long duration ) throws UnknownLeaseException , LeaseDeniedException , RemoteException { super . renew ( duration ) ; synchronized ( this ) { if ( createdXtn != _NULL ) { ServerTransaction txn = ( ServerTransaction ) createdXtn ; txn . setLease ( duration ) ; } } }
14263	public void drawScreen ( int par1 , int par2 , float par3 ) { if ( reinit ) { initGui ( ) ; reinit = _BOOL ; } super . drawScreen ( par1 , par2 , par3 ) ; }
14325	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
14326	public Iterator < String > keys ( ) { return this . keySet ( ) . iterator ( ) ; }
14347	public void stopTrackingOrientation ( ) { sensorManager . unregisterListener ( phoneOrientationListener ) ; }
14357	public void trimValuesToNull ( ) { if ( attributes != _NULL ) { for ( Attribute attribute : attributes ) { attribute . setValue ( StringUtils . trimToNull ( attribute . getValue ( ) ) ) ; } } }
14358	public boolean canManage ( User user ) { if ( user == _NULL || user . getGroups ( ) == _NULL ) { return _BOOL ; } for ( UserGroup group : user . getGroups ( ) ) { if ( canManage ( group ) ) { return _BOOL ; } } return _BOOL ; }
14364	public VideoSaveQuery link ( String value ) { return unsafeParam ( _CHAR link _CHAR , value ) ; }
14374	protected void peekPanel ( StateChangeReason reason ) { startShowing ( ) ; animatePanelToState ( PanelState . PEEKED , reason ) ; }
14385	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
14406	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
14409	void initOutputDirectory ( ) throws CommandException { if ( outputDirectoryParam == _NULL ) { outputDirectoryPath = Paths . get ( nameParam ) ; } else { outputDirectoryPath = Paths . get ( outputDirectoryParam ) ; } try { java . nio . file . Files . createDirectories ( outputDirectoryPath ) ; } catch ( IOException ioe ) { throw new CommandException ( _CHAR Error creating output directory _CHAR , ioe ) ; } }
14412	public String [ ] upload_file ( String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_file ( group_name , local_filename , file_ext_name , meta_list ) ; }
14423	public void addNamespace ( AXmlNamespace ns ) { if ( ns . getUri ( ) == _NULL || ns . getUri ( ) . isEmpty ( ) ) return ; if ( this . namespaces == _NULL ) this . namespaces = new HashMap < String , AXmlNamespace > ( ) ; this . namespaces . put ( ns . getPrefix ( ) , ns ) ; }
14430	public boolean shouldCache ( ) { return this . shouldCache ; }
14438	public static SM_SYSTEM_MESSAGE STR_PARTY_HE_IS_ALREADY_MEMBER_OF_OUR_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14452	public PhotosGetAlbumsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
14461	public boolean topAllowed ( ) { return ( myFlags & TOP_EDGE ) != _NUM ; }
14462	public static SM_SYSTEM_MESSAGE STR_BUDDYLIST_ADD_BUDDY_ACCEPTED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14516	public void init ( Table t , Graph g , Class tupleType ) { if ( m_table != _NULL ) { throw new IllegalStateException ( _CHAR This TupleManager has already been initialized _CHAR ) ; } m_table = t ; m_graph = g ; m_tupleType = tupleType ; m_tuples = _NULL ; }
14525	public static SM_SYSTEM_MESSAGE STR_BUDDYLIST_REMOVE_CHARACTER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14528	@ SuppressWarnings ( _CHAR WeakerAccess _CHAR ) public boolean isHeader ( int position ) { return header != _NULL && position == _NUM ; }
14531	protected void flowThrough ( Object inValue , Object unit , Object outValue ) { FlowSet in = ( FlowSet ) inValue , out = ( FlowSet ) outValue ; in . union ( unitToGenerateSet . get ( unit ) , out ) ; }
14547	public AppsGetCatalogQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
14571	private boolean runInParallel ( List < ConfigurationElement > elements ) { return ! elements . stream ( ) . anyMatch ( _NULL ) ; }
14579	private void startContainerManager ( ) { EasyMock . expect ( mockProcessCache . getKeys ( ) ) . andReturn ( Collections . EMPTY_LIST ) ; EasyMock . replay ( mockProcessCache ) ; ( ( JmsContainerManagerImpl ) jmsContainerManager ) . init ( ) ; ( ( SmartLifecycle ) jmsContainerManager ) . start ( ) ; EasyMock . reset ( mockProcessCache ) ; }
14585	private void flingOccurred ( float x , float y , float tx , float ty , float vx , float vy ) { if ( mEdgeSwipeHandler != _NULL && mEdgeSwipeStarted ) { mEdgeSwipeHandler . swipeFlingOccurred ( x , y , tx , ty , vx , vy ) ; } }
14601	public PagesSaveQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
14627	public long dump ( RandomAccessFile rafIn ) throws IOException { long before = rafIn . getFilePointer ( ) ; rafIn . writeUTF ( procHeader ) ; long after = rafIn . getFilePointer ( ) ; return after - before ; }
14635	public void remove ( String name ) { features . remove ( name ) ; }
14678	@ Override public void put ( int index , byte [ ] value ) { System . arraycopy ( value , _NUM , datastore , ( ( index ) * sizeOfEachElement ) , sizeOfEachElement ) ; }
14690	public int append_file ( String group_name , String appender_filename , byte [ ] file_buff , int offset , int length ) throws IOException , MyException { return this . do_append_file ( group_name , appender_filename , length , new UploadBuff ( file_buff , offset , length ) ) ; }
14703	@ Override public void addId ( String name ) { if ( fIdIdrefChecking ) { super . addId ( name ) ; } }
14734	public static ExpectedCondition < Boolean > expandFieldset ( final WebElement fieldset ) { return _NULL ; }
14737	protected BoardAddTopicQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
14749	public static boolean isActionUp ( KeyEvent event ) { return event . getAction ( ) == KeyEvent . ACTION_UP ; }
14750	private boolean isDictionaryMetaFileModified ( CarbonFile carbonFile , long fileTimeStamp , long endOffset ) { return carbonFile . isFileModified ( fileTimeStamp , endOffset ) ; }
14757	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_CANT_SUMMON_STATE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
14782	public static List < Locale > availableLocales ( ) { return LocaleHolder . availableLocaleList ; }
14784	public static boolean isMainScreenActivated ( Context context ) { return SharedPrefsUtils . getBoolean ( Constants . SHARED_PREFS . KEY_FLAG_MAINSCREEN , _BOOL , context ) ; }
14805	public void terminate ( ) { if ( animator != _NULL ) { animator . cancel ( ) ; } confettiView . terminate ( ) ; }
14810	public boolean hasItemsOrItemFilters ( ) { return ! items . isEmpty ( ) || ! itemFilters . isEmpty ( ) ; }
14860	protected boolean filterHeader ( int index ) { if ( this . headerName == _NULL ) return _BOOL ; final String name = ( ( Header ) this . allHeaders . get ( index ) ) . getName ( ) ; return this . headerName . equalsIgnoreCase ( name ) ; }
14868	@ Override public final void putAll ( Map < ? extends String , ? extends Object > m ) { for ( String s : m . keySet ( ) ) { set ( s , m . get ( s ) ) ; } }
14882	public boolean isPinchZoomEnabled ( ) { return mPinchZoomEnabled ; }
14928	public AccessPath copyWithNewValue ( Value val , Type newType , boolean cutFirstField ) { if ( this . value != _NULL && this . value . equals ( val ) && this . baseType . equals ( newType ) ) return this ; return new AccessPath ( val , fields , newType , fieldTypes , this . taintSubFields , cutFirstField , _BOOL ) ; }
14951	public static HelpNode fromXml ( InputStream stream ) throws ParserConfigurationException , SAXException , IOException { return HelpReader . fromXml ( new InputSource ( stream ) ) ; }
14957	public boolean isTestSource ( String relativePath ) { return testSources . matches ( relativePath ) ; }
14961	public FriendsSearchQuery search ( UserActor actor , int userId ) { return new FriendsSearchQuery ( getClient ( ) , actor , userId ) ; }
14985	public static PokkitMaterialData fromNukkit ( int nukkitId , int nukkitDamage ) { return new PokkitMaterialData ( nukkitId , nukkitDamage ) ; }
14989	private void checkWhitespace ( XMLString value ) { int end = value . offset + value . length ; for ( int i = value . offset ; i < end ; ++ i ) { if ( ! XMLChar . isSpace ( value . ch [ i ] ) ) { reportFatalError ( _CHAR ContentIllegalAtTopLevel _CHAR ) ; return ; } } }
15007	public static SM_SYSTEM_MESSAGE STR_GUILD_BANSIH_HE_BANISHED_HIM ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
15013	public PagesGetQuery sitePreview ( Boolean value ) { return unsafeParam ( _CHAR site_preview _CHAR , value ) ; }
15019	public boolean isProtected ( ) { return Modifier . isProtected ( this . getModifiers ( ) ) ; }
15037	public static SM_SYSTEM_MESSAGE STR_MSG_LOOT_GET_ITEM_OTHER ( String value0 , DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , descriptionId ) ; }
15053	@ Override public void closeKeepAliveService ( ) { synchronized ( this ) { if ( this . scheduledFuture != _NULL ) { this . keepAliveRequestStreamObserver . onCompleted ( ) ; this . keepAliveRequestStreamObserver = _NULL ; this . keepAliveResponseStreamObserver = _NULL ; this . scheduledFuture . cancel ( _BOOL ) ; this . scheduledFuture = _NULL ; } else { throw new IllegalStateException ( _CHAR Lease keep alive service not start yet _CHAR ) ; } } }
15054	public static Type toSoot ( TypeReference type ) { return toSoot ( type . getType ( ) , _NUM ) ; }
15058	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonSkillArea_A_TO_B ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
15100	public void afterCallingEvictionStrategy ( ) { int res = _numOfCurrentEvictionStrategyCallersUpdater . decrementAndGet ( this ) ; if ( res == _NUM && _needToRemoveFromEvictionStrategy ) { synchronized ( this ) { notifyAll ( ) ; } } }
15103	public static SM_SYSTEM_MESSAGE STR_CMD_SHOUT_OUTPUT1 ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
15112	public static void write ( JsonElement element , JsonWriter writer ) throws IOException { TypeAdapters . JSON_ELEMENT . write ( writer , element ) ; }
15114	boolean equivTo ( Operand other ) { if ( other . value == _NULL && value == _NULL ) return _BOOL ; return stackOrValue ( ) . equivTo ( other . stackOrValue ( ) ) ; }
15118	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Rebirth_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
15132	public void postIdle ( final Runnable runnable ) { post ( new IdleRunnable ( runnable ) ) ; }
15147	public static SM_SYSTEM_MESSAGE STR_COMBINE_OUT_OF_SKILL_POINT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15161	public static SM_SYSTEM_MESSAGE STR_MSG_GET_ALL_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15185	public GroupsGetInvitesQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
15219	private static void fixTies ( double [ ] x , double [ ] y ) throws Exception { Method method = KolmogorovSmirnovTest . class . getDeclaredMethod ( _CHAR fixTies _CHAR , double [ ] . class , double [ ] . class ) ; method . setAccessible ( _BOOL ) ; KolmogorovSmirnovTest ksTest = new KolmogorovSmirnovTest ( ) ; method . invoke ( ksTest , x , y ) ; }
15239	protected < T extends Enum < ? >> void cancelAnimation ( Animatable < T > object , T prop ) { if ( mLayoutAnimations != _NULL ) { mLayoutAnimations . cancel ( object , prop ) ; } }
15266	private void broadcastNewFile ( Uri nativeUri ) { Intent intent = new Intent ( Intent . ACTION_MEDIA_SCANNER_SCAN_FILE , nativeUri ) ; context . sendBroadcast ( intent ) ; }
15267	public double sumOfValues ( ) { double dSum = _NUM ; Iterator iValIter = hDistro . values ( ) . iterator ( ) ; while ( iValIter . hasNext ( ) ) { dSum += ( Double ) iValIter . next ( ) ; } return dSum ; }
15311	@ Override public void close ( ) throws IOException { super . close ( ) ; closed = _BOOL ; }
15317	public FaveGetUsersQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
15355	public Builder addColumnsString ( String ... columnNames ) { for ( String s : columnNames ) addColumnString ( s ) ; return this ; }
15357	@ Override public boolean isReadOnly ( ) throws RemoteException { return this . readOnly ; }
15360	public Value trim ( Value str , Value trimChar , Boolean where ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
15394	public boolean removeNode ( Node n ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
15403	public void onNativeLibraryReady ( ) { mRegularTabModel . initializeNative ( ) ; mIncognitoTabModel . initializeNative ( ) ; }
15411	public VideoSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
15430	public void mouseDragged ( @ AndroidCoordinate int x , @ AndroidCoordinate int y ) { if ( myMouseInteraction != _NULL ) { myMouseInteraction . mouseDragged ( pxToDp ( x ) , pxToDp ( y ) ) ; } }
15434	public static UInteger uint ( String value ) throws NumberFormatException { return value == _NULL ? _NULL : UInteger . valueOf ( value ) ; }
15453	private void cleanupService ( ) { if ( mService != _NULL ) { try { mContext . unbindService ( this ) ; } catch ( IllegalArgumentException e ) { Log . e ( TAG , _CHAR Unable to unbind from licensing service ( already unbound ) _CHAR ) ; } mService = _NULL ; } }
15472	protected BoardUnfixTopicQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
15487	protected BoardGetCommentsQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
15499	public boolean isClinit ( ) { return kind . isClinit ( ) ; }
15515	public Edge addChildEdge ( Node parent , Node child ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
15542	public void blockingWait ( int duration ) throws InterruptedException { Thread . sleep ( duration ) ; }
15565	private void validate ( String value ) { for ( int i = _NUM ; i < validators . size ( ) ; i ++ ) { if ( ! validators . get ( i ) . validate ( value ) ) { onValidationErrorListener . onError ( input , inputParent , validators . get ( i ) . getValidationMessage ( ) ) ; } } }
15572	@ Override public Vector3D toSpace ( final Point < Euclidean2D > point ) { final Vector2D p2D = ( Vector2D ) point ; return new Vector3D ( p2D . getX ( ) , u , p2D . getY ( ) , v , - originOffset , w ) ; }
15634	public UsersSearchQuery universityYear ( Integer value ) { return unsafeParam ( _CHAR university_year _CHAR , value ) ; }
15640	public void loadDataStringFromFile ( String sFilename , boolean clearCurrentData ) { loadDataStringFromFile ( sFilename , clearCurrentData , utils . getSystemEncoding ( ) ) ; }
15659	private void readFromVersion2Stream ( StatusFromBytesStream dis ) throws IOException { file = new File ( dis . readUTF ( ) ) ; }
15666	public static void skipFields ( @ Nonnull DexReader reader , int count ) { for ( int i = _NUM ; i < count ; i ++ ) { reader . skipUleb128 ( ) ; reader . skipUleb128 ( ) ; } }
15699	public boolean isProtected ( ) { return Modifier . isProtected ( this . getModifiers ( ) ) ; }
15723	public String makeLiteralSQ ( Object object ) { StringBuilder sb = new StringBuilder ( ) ; makeLiteral ( sb , object , _BOOL ) ; return sb . toString ( ) ; }
15726	public static boolean isEmpty ( String s ) { return s == _NULL || s . length ( ) == _NUM ; }
15754	public LazyArray optJSONArray ( int index ) throws LazyException { LazyNode token = getOptionalValueToken ( index ) ; if ( token == _NULL ) return _NULL ; if ( token . type == LazyNode . VALUE_NULL ) return _NULL ; if ( token . type != LazyNode . ARRAY ) throw new LazyException ( _CHAR Requested value is not an array _CHAR , token ) ; return new LazyArray ( token , cbuf ) ; }
15755	private void badRead ( int numBytes ) throws LogException { throw new LogException ( _CHAR length = _CHAR + String . valueOf ( length ) + _CHAR , numBytes = _CHAR + String . valueOf ( numBytes ) ) ; }
15764	public boolean isInterfaceSubinterfaceOf ( SootClass child , SootClass possibleParent ) { child . checkLevel ( SootClass . HIERARCHY ) ; possibleParent . checkLevel ( SootClass . HIERARCHY ) ; return getSubinterfacesOf ( possibleParent ) . contains ( child ) ; }
15777	public final CharSequence yytext ( ) { return zzBuffer . subSequence ( zzStartRead , zzMarkedPos ) ; }
15812	private static final boolean hasWildcard ( String s ) { String test = s . replace ( _CHAR \\* _CHAR , _CHAR _CHAR ) . replace ( _CHAR \\ ? _CHAR , _CHAR _CHAR ) ; return ( test . contains ( _CHAR * _CHAR ) || test . contains ( _CHAR ? _CHAR ) ) ; }
15826	public WeightEvaluationQuery makeWeightEvaluationQuery ( DruidAggregationQuery < ? > druidQuery ) { return WeightEvaluationQuery . makeWeightEvaluationQuery ( druidQuery ) ; }
15832	public boolean isRightHalf ( ) { return ! isLeftHalf ; }
15835	public UsersGetFollowersQueryWithFields offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
15837	@ Override public void onActionClick ( View view , String actionType , Object model ) { if ( view == _NULL ) return ; final Context context = view . getContext ( ) ; fireAction ( context , view , actionType , model ) ; }
15846	public static LessSpacePredicate less ( Comparable < ? > value ) { return new LessSpacePredicate ( value ) ; }
15849	public void adjustVideoFitTextureView ( ) { Matrix matrix = new Matrix ( ) ; getTransform ( matrix ) ; matrix . setScale ( _NUM , _NUM ) ; setTransform ( matrix ) ; }
15888	@ Override protected void onDestroy ( ) { super . onDestroy ( ) ; unregisterReceiver ( receiver ) ; mBluetoothAdapter . disable ( ) ; }
15949	public LocalVariableTable_attribute findLocalVariableTable ( ) { int i ; for ( i = _NUM ; i < attributes_count ; i ++ ) { if ( attributes [ i ] instanceof LocalVariableTable_attribute ) return ( LocalVariableTable_attribute ) ( attributes [ i ] ) ; } return _NULL ; }
15951	public boolean containsKey ( String key ) { if ( mLinkedHashMap . containsKey ( key ) ) { return _BOOL ; } final String existingFile = createFilePath ( mCacheDir , key ) ; if ( new File ( existingFile ) . exists ( ) ) { put ( key , existingFile ) ; return _BOOL ; } return _BOOL ; }
15959	@ Override public boolean waitForYellowStatus ( ) { if ( client == _NULL ) { log . warn ( _CHAR waitForYellowStatus ( ) - client for the ElasticSearch cluster seems to have null value . '' ) ; return _BOOL ; } checkYellowStatus ( ) ; log . debug ( _CHAR waitForYellowStatus ( ) - Everything is alright . '' ) ; return _BOOL ; }
15980	public double dotProduct ( final Quaternion q ) { return dotProduct ( this , q ) ; }
16012	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_COUNT_INFO ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16013	public DavaBody newBody ( Body b ) { return new DavaBody ( b ) ; }
16015	private double computeReferenceAngle ( ) { double r1 = ( ( SandboxBody ) this . cmbBody1 . getSelectedItem ( ) ) . getTransform ( ) . getRotation ( ) ; double r2 = ( ( SandboxBody ) this . cmbBody2 . getSelectedItem ( ) ) . getTransform ( ) . getRotation ( ) ; return r1 - r2 ; }
16018	public static boolean canCreateOgg ( ) { return AudioSystem . isConversionSupported ( getOggAudioFormat ( ) , Voice . AF22050 ) ; }
16029	public static boolean enterSafeRegion ( @ Nullable Object credential ) { boolean token = sEnabled ; if ( credential == sCredential ) { sEnabled = _BOOL ; } return token ; }
16036	public boolean isAmbient ( ) { return ambient ; }
16049	public int indexOfKey ( Object key ) { return key == _NULL ? indexOfNull ( ) : indexOf ( key , key . hashCode ( ) ) ; }
16103	public boolean isLured ( ) { return encounterKind == EncounterKind . DISK ; }
16134	public boolean isActivePublication ( ) { return state != _NULL && state . equals ( AlarmCondition . ACTIVE ) ; }
16139	public AXmlNode addChild ( AXmlNode child , int index ) { if ( this . children == _NULL ) this . children = new ArrayList < AXmlNode > ( ) ; this . children . add ( index , child ) ; return this ; }
16145	public void disableDashedHighlightLine ( ) { mHighlightDashPathEffect = _NULL ; }
16172	private void throwIfSaveFailed ( long id ) { if ( id == - _NUM ) { throw new DataSupportException ( DataSupportException . SAVE_FAILED ) ; } }
16188	public void applyConstraints ( ScoutWidget [ ] list ) { pickColumnWidgets ( list ) ; pickCenterOverlap ( list ) ; pickBaseLineConnections ( list ) ; pickCenteredConnections ( list , _BOOL ) ; pickMarginConnections ( list , _NUM ) ; pickCenteredConnections ( list , _BOOL ) ; pickMarginConnections ( list , _NUM ) ; if ( DEBUG ) { printBaseTable ( list ) ; } }
16210	public LikesGetListQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
16227	public boolean hasUserGroupsToAlert ( ) { return userGroupsToAlert != _NULL && ! userGroupsToAlert . isEmpty ( ) ; }
16233	public final void closeSourceDataTagsBuffers ( ) { dataTagsBuffer . disable ( ) ; dataTagsBuffer . close ( ) ; persistentTagsBuffer . disable ( ) ; persistentTagsBuffer . close ( ) ; }
16269	public Node addNode ( ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
16270	public static void root ( @ NotNull ScopedOperation scopedOperation ) { push ( _NULL , scopedOperation ) ; }
16282	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { IntegerDistribution dist = getDistribution ( ) ; return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , dist . cumulativeProbability ( _NUM ) , dist . cumulativeProbability ( _NUM ) , dist . cumulativeProbability ( _NUM ) , dist . cumulativeProbability ( _NUM ) , dist . cumulativeProbability ( _NUM ) } ; }
16302	public UsersSearchQuery search ( UserActor actor ) { return new UsersSearchQuery ( getClient ( ) , actor ) ; }
16345	public FileProcessor addInputSuffix ( String ... suffixes ) { for ( String suffix : suffixes ) addInputRegex ( _CHAR ( ? i ) . * _CHAR + Pattern . quote ( suffix ) ) ; return this ; }
16357	public static int swapInteger ( int value ) { return ( ( ( value >> _NUM ) & _NUM ) << _NUM ) + ( ( ( value >> _NUM ) & _NUM ) << _NUM ) + ( ( ( value >> _NUM ) & _NUM ) << _NUM ) + ( ( ( value >> _NUM ) & _NUM ) << _NUM ) ; }
16366	public PhotosDeleteAlbumQuery deleteAlbum ( UserActor actor , int albumId ) { return new PhotosDeleteAlbumQuery ( getClient ( ) , actor , albumId ) ; }
16378	static void checkParameterArrayIsNotNull ( final String parameterName , final int [ ] parameterValues ) { checkParameterIsNotNull ( parameterName , parameterValues ) ; if ( parameterValues . length == _NUM ) { throw new IllegalArgumentException ( parameterName + _CHAR can not be empty . '' ) ; } }
16380	public StringProperty lastReceivedPayloadShortProperty ( ) { return lastReceivedPayloadShort ; }
16384	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_COMMON_REWARD ( String value0 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value2 ) ; }
16386	public ElementType parent ( ) { return theParent ; }
16389	protected void addToolbarActionsToMenu ( @ NotNull String label , @ NotNull List < ViewAction > actions ) { List < ViewAction > nestedActions = Lists . newArrayList ( ) ; addToolbarActions ( nestedActions ) ; actions . add ( new ViewActionMenu ( label , _NULL , nestedActions ) ) ; }
16421	public static final void applyTransform ( GL2 gl , Transform t ) { Vector2 tr = t . getTranslation ( ) ; gl . glTranslated ( tr . x , tr . y , _NUM . _NUM ) ; gl . glRotated ( Math . toDegrees ( t . getRotation ( ) ) , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM ) ; }
16424	public void updateEntry ( Context context , IEntryHolder updatedEntry , boolean updateRedoLog , boolean origin , boolean [ ] partialUpdateValuesIndicators ) throws SAException { }
16437	public FriendsAddListQuery addList ( UserActor actor , String name ) { return new FriendsAddListQuery ( getClient ( ) , actor , name ) ; }
16439	public TableIterator iterator ( ) { return iterator ( rows ( ) ) ; }
16443	public boolean wasClicked ( int code ) { MouseButton mb = this . buttons . get ( code ) ; if ( mb == _NULL ) { return _BOOL ; } return mb . wasClicked ( ) ; }
16453	public VideoDeleteQuery delete ( UserActor actor , int videoId ) { return new VideoDeleteQuery ( getClient ( ) , actor , videoId ) ; }
16463	public void addWrapper ( ITaintPropagationWrapper wrapper ) { this . wrappers . add ( wrapper ) ; }
16464	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
16483	@ Override public String toString ( ) { return MoreObjects . toStringHelper ( this ) . add ( _CHAR id _CHAR , getId ( ) ) . add ( _CHAR name _CHAR , getName ( ) ) . add ( _CHAR url _CHAR , getUrl ( ) ) . add ( _CHAR openSource _CHAR , getOpenSource ( ) ) . toString ( ) ; }
16517	public static String asSql ( String expression ) { if ( expression == _NULL ) { return _NULL ; } for ( String key : EL_SQL_MAP . keySet ( ) ) { expression = expression . replaceAll ( key , EL_SQL_MAP . get ( key ) ) ; } return expression ; }
16557	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoFly_END_A_TO_SELF ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
16558	public String pushToRestApi ( ) throws IOException { RESTApiHandler restApi = new RESTApiHandler ( ) ; this . batchUrl = restApi . getRemoteURL ( this ) ; return this . batchUrl ; }
16563	public static byte [ ] writeDouble ( double d ) { return ByteBuffer . allocate ( _NUM ) . putDouble ( d ) . array ( ) ; }
16591	public void updateLogo ( Logo logo ) { if ( logo == _NULL ) { updateLogo ( getDefaultLogo ( ) , _NULL , _BOOL ) ; } else { String contentDescription = TextUtils . isEmpty ( logo . altText ) ? _NULL : getResources ( ) . getString ( R . string . accessibility_google_doodle , logo . altText ) ; updateLogo ( logo . image , contentDescription , _BOOL ) ; } }
16601	public T read ( PacketBuffer buf ) { return reader . apply ( buf ) ; }
16639	public void afterTransactionSynchronization ( TransactionData transactionData ) { }
16640	public boolean dump_summaries ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - summaries _CHAR ) ; }
16668	private void startFileBasedMerge ( ) throws CarbonSortKeyAndGroupByException { try { dataSorterAndWriterExecutorService . shutdown ( ) ; dataSorterAndWriterExecutorService . awaitTermination ( _NUM , TimeUnit . DAYS ) ; } catch ( InterruptedException e ) { throw new CarbonSortKeyAndGroupByException ( _CHAR Problem while shutdown the server '' , e ) ; } }
16695	private BSPTree < Euclidean1D > childAfter ( BSPTree < Euclidean1D > node ) { if ( isDirect ( node ) ) { return node . getPlus ( ) ; } else { return node . getMinus ( ) ; } }
16702	public SlickForm withFields ( FormField [ ] fields ) { Collections . addAll ( this . formFields , fields ) ; return this ; }
16703	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
16733	protected boolean onInterceptBarClick ( ) { return _BOOL ; }
16736	public Node addRoot ( ) { return getNode ( addRootRow ( ) ) ; }
16783	public static boolean hasAny ( Intent intent , String ... extras ) { for ( String extra : extras ) { if ( intent . hasExtra ( extra ) ) { return _BOOL ; } } return _BOOL ; }
16793	public static SM_SYSTEM_MESSAGE STR_MSG_DISABLE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16794	static boolean isLaidOut ( View view ) { if ( Build . VERSION . SDK_INT >= _NUM ) { return view . isLaidOut ( ) ; } return view . getWidth ( ) > _NUM && view . getHeight ( ) > _NUM ; }
16801	public static cn . nukkit . plugin . Plugin toNukkit ( Plugin plugin ) { return CraftServer . toNukkit ( Bukkit . getServer ( ) ) . getPluginManager ( ) . getPlugin ( plugin . getName ( ) ) ; }
16830	public PlacesSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
16866	void onRestoreStarted ( ) { mRestoreStartedAtMillis = SystemClock . elapsedRealtime ( ) ; }
16877	@ NotNull private List < StyleResourceValue > resolveNonFrameworkThemes ( ) { LocalResourceRepository repository = AppResourceRepository . getAppResources ( myConfiguration . getModule ( ) , _BOOL ) ; if ( repository == _NULL ) { return Collections . emptyList ( ) ; } return getThemes ( repository . getConfiguredResources ( ResourceType . STYLE , myConfiguration . getFullConfig ( ) ) , _BOOL ) ; }
16893	public GroupsGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
16901	@ Override public double [ ] makeInverseCumulativeTestValues ( ) { double [ ] points = makeCumulativeTestPoints ( ) ; double [ ] points2 = new double [ points . length - _NUM ] ; System . arraycopy ( points , _NUM , points2 , _NUM , points . length - _NUM ) ; return points2 ; }
16904	public boolean isRoot ( OCFile file ) { return file == _NULL || ( file . isFolder ( ) && file . getParentId ( ) == FileDataStorageManager . ROOT_PARENT_ID ) ; }
16907	public static ValueCompressonHolder . UnCompressValue unCompressNonDecimal ( DataType compDataType , DataType actualDataType ) { switch ( compDataType ) { case DATA_BYTE : return new UnCompressNonDecimalByte ( ) ; case DATA_SHORT : return new UnCompressNonDecimalShort ( ) ; case DATA_INT : return new UnCompressNonDecimalInt ( ) ; case DATA_LONG : return new UnCompressNonDecimalLong ( ) ; case DATA_FLOAT : return new UnCompressNonDecimalFloat ( ) ; default : return new UnCompressNonDecimalDefault ( ) ; } }
16921	public int append_file ( String group_name , String appender_filename , byte [ ] file_buff ) throws IOException , MyException { return this . do_append_file ( group_name , appender_filename , file_buff . length , new UploadBuff ( file_buff , _NUM , file_buff . length ) ) ; }
16946	public static ITemplateHolder createUpdateTemplateHolder ( IServerTypeDesc typeDesc , IEntryPacket template , String uid , long expirationTime , XtnEntry xidOriginated , long SCN , IResponseContext respContext , int operationModifiers ) { return new TemplateHolder ( typeDesc , template , uid , expirationTime , xidOriginated , SCN , SpaceOperations . UPDATE , respContext , operationModifiers ) ; }
16965	@ Override protected void loadData ( ) throws IOException , MaryConfigurationException { if ( htsData == _NULL ) htsData = new HMMData ( ) ; htsData . initHMMDataForHMMModel ( voiceName ) ; cart = htsData . getCartTreeSet ( ) ; fperiodsec = ( ( float ) htsData . getFperiod ( ) / ( float ) htsData . getRate ( ) ) ; predictionFeatureNames = htsData . getFeatureDefinition ( ) . getFeatureNames ( ) ; }
16973	public static boolean isCorsPreflight ( String requestMethod , SecurityContext securityContext ) { return HttpMethod . OPTIONS . equals ( requestMethod ) && ( securityContext == _NULL || securityContext . getUserPrincipal ( ) == _NULL ) ; }
16978	private void showDrawableError ( ) { Dialog dialog = new Dialog ( _CHAR Error ... _CHAR , getSkin ( ) ) ; Label label = new Label ( _CHAR Error while adding new drawables .\ nEnsure that image dimensions are \ nless than maximums specified in project .\ nRolling back changes ... '' , getSkin ( ) ) ; label . setAlignment ( Align . center ) ; dialog . text ( label ) ; dialog . button ( _CHAR OK _CHAR ) ; dialog . show ( getStage ( ) ) ; }
16996	public static void closeQuietly ( LineIterator iterator ) { if ( iterator != _NULL ) { iterator . close ( ) ; } }
17031	private BSPTree < Euclidean1D > childBefore ( BSPTree < Euclidean1D > node ) { if ( isDirect ( node ) ) { return node . getMinus ( ) ; } else { return node . getPlus ( ) ; } }
17038	public static Application createApplication ( ) { return new Application ( Constants . DEFAULT_PREFIX_APPLICATION + String . valueOf ( internalId ++ ) ) ; }
17045	public boolean isValidPoint ( double x , double y ) { if ( x < xval [ _NUM ] || x > xval [ xval . length - _NUM ] || y < yval [ _NUM ] || y > yval [ yval . length - _NUM ] ) { return _BOOL ; } else { return _BOOL ; } }
17061	public void clear ( ) { _outgoingEvents . clear ( ) ; _alreadyTriggeredEvents . clear ( ) ; }
17070	public Builder envVars ( Map < String , String > map ) { this . envVars . putAll ( map ) ; return this ; }
17101	@ Override public boolean isKeepAliveServiceRunning ( ) { synchronized ( this ) { return this . scheduledFuture != _NULL && ! this . scheduledFuture . isCancelled ( ) ; } }
17153	public static String md5 ( File file ) { if ( file == _NULL ) throw new IllegalArgumentException ( _CHAR file can not be _NULL _CHAR ) ; try { HashCode hc = Files . hash ( file , Hashing . md5 ( ) ) ; return toHex ( hc . asBytes ( ) ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
17178	public void close ( ) { if ( _NULL != inputStreamReader ) { CarbonUtil . closeStreams ( inputStreamReader ) ; } }
17205	void addFKNameToClearSelf ( String foreignKeyName ) { List < String > list = getListToClearSelfFK ( ) ; if ( ! list . contains ( foreignKeyName ) ) { list . add ( foreignKeyName ) ; } }
17216	protected void jimplifyStatic ( DexBody body ) { invocation = Jimple . v ( ) . newStaticInvokeExpr ( getStaticSootMethodRef ( ) , buildParameters ( body , _BOOL ) ) ; body . setDanglingInstruction ( this ) ; }
17243	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
17266	public WallSearchQuery search ( UserActor actor ) { return new WallSearchQuery ( getClient ( ) , actor ) ; }
17275	public boolean isFinal ( ) { return Modifier . isFinal ( this . getModifiers ( ) ) ; }
17288	public long durationInMillis ( ) { return this . end . getTime ( ) - this . start . getTime ( ) ; }
17294	private void expandTo ( int size ) { final double [ ] tempArray = new double [ size ] ; System . arraycopy ( internalArray , _NUM , tempArray , _NUM , internalArray . length ) ; internalArray = tempArray ; }
17295	public double [ ] computeDerivatives ( final double t , final double [ ] y ) throws MathIllegalArgumentException , MathIllegalStateException , NullPointerException { evaluations . increment ( ) ; return equations . computeDerivatives ( t , y ) ; }
17310	@ SuppressWarnings ( _CHAR deprecation _CHAR ) public static PokkitMaterialData fromBukkit ( MaterialData materialData ) { return fromBukkit ( materialData . getItemType ( ) , materialData . getData ( ) ) ; }
17321	public void onActivityResult ( int requestCode , int resultCode , Intent data ) { mSessionManager . onActivityResult ( mContext , requestCode , resultCode , data ) ; }
17369	private void observeChangingBook ( ) { Observable < Book > observable = bookRepository . observeChangingBooks ( ) . filter ( _NULL ) . observeOn ( AndroidSchedulers . mainThread ( ) ) ; subscribe ( observable , _NULL , _NULL , _NULL ) ; }
17395	public Tuple [ ] toArray ( ) { Tuple [ ] t = new Tuple [ getTupleCount ( ) ] ; m_tuples . toArray ( t ) ; return t ; }
17402	public RequestHandle head ( String url , ResponseHandlerInterface responseHandler ) { return head ( _NULL , url , _NULL , responseHandler ) ; }
17411	public void removeListeners ( String tag ) { }
17469	private void registerValue ( int index ) { synchronized ( L ) { L . pushValue ( index ) ; int key = L . Lref ( LuaState . LUA_REGISTRYINDEX . intValue ( ) ) ; ref = new Integer ( key ) ; } }
17496	public static SM_SYSTEM_MESSAGE STR_CANT_MAIL_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17528	protected void maximizePanel ( StateChangeReason reason ) { animatePanelToState ( PanelState . MAXIMIZED , reason ) ; }
17530	public static Tags matchingKeys ( Tags in , Set < String > keys ) { return Tags . valueOf ( in . asMap ( ) . entrySet ( ) . stream ( ) . filter ( _NULL ) ) ; }
17588	Collection < ? extends ClientRequestResult > handleDeviceClassNamesRequest ( final ClientRequest deviceClassNamesRequest ) { Collection < DeviceClassNameResponse > classNames = new ArrayList < > ( ) ; Collection < String > names = deviceClassFacade . getDeviceClassNames ( ) ; for ( String name : names ) { classNames . add ( TransferObjectFactory . createTransferDeviceName ( name ) ) ; } return classNames ; }
17602	public static SM_SYSTEM_MESSAGE STR_DEATH_REGISTER_RESURRECT_POINT ( String subzone ) { return new SM_SYSTEM_MESSAGE ( _NUM , subzone ) ; }
17615	public static SM_SYSTEM_MESSAGE STR_DUEL_REJECT_DUEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17617	public int addRootRow ( ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
17640	public RequestHandle put ( String url , ResponseHandlerInterface responseHandler ) { return put ( _NULL , url , _NULL , responseHandler ) ; }
17674	public boolean removeNode ( int node ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
17677	public boolean hasAttributesOrFilters ( ) { return hasAttributes ( ) || hasFilters ( ) ; }
17688	public double [ ] nextSample ( ) { double [ ] z = getStandardNormalVector ( dimension ) ; Matrix Z = new Matrix ( z , dimension ) ; Matrix sample = chol . getL ( ) . times ( Z ) ; sample . plusEquals ( mean ) ; return sample . getColumnPackedCopy ( ) ; }
17702	public void takeDown ( ) { if ( ! Silent ) System . err . println ( this . getName ( ) + _CHAR : _CHAR + _CHAR Finished . '' ) ; }
17715	public ProcessConfiguration createProcessConfiguration ( final String processName , final Long processPIK , final Document confXMLDoc , final boolean localConfiguration , String jmsDaqQueueTrunk ) throws ConfUnknownTypeException , ConfRejectedTypeException { this . jmsDaqQueueTrunk = jmsDaqQueueTrunk ; return createProcessConfiguration ( processName , processPIK , confXMLDoc , localConfiguration ) ; }
17731	public static boolean isCJKSymbol ( char c ) { return isRange ( c , _CHAR , _CHAR ) || isRange ( c , _CHAR , _CHAR ) ; }
17739	public boolean hasCommit ( ) throws IOException { return saveLoadState . getNextWriteGen ( ) != _NUM ; }
17744	public boolean isInterfaceSuperinterfaceOf ( SootClass parent , SootClass possibleChild ) { parent . checkLevel ( SootClass . HIERARCHY ) ; possibleChild . checkLevel ( SootClass . HIERARCHY ) ; return getSuperinterfacesOf ( possibleChild ) . contains ( parent ) ; }
17789	public synchronized final int evictionCount ( ) { return evictionCount ; }
17804	public void showEmpty ( Drawable emptyImageDrawable , String emptyTextContent ) { switchState ( EMPTY , emptyImageDrawable , emptyTextContent , _NULL , _NULL , Collections . < Integer > emptyList ( ) ) ; }
17808	@ Override public final double readDouble ( ) throws IOException { return Double . longBitsToDouble ( readLong ( ) ) ; }
17836	private void writeDomainHierarchy ( Document document , Element rootElement ) { Element domainHierarchy = document . createElement ( _CHAR domainhierarchy _CHAR ) ; rootElement . appendChild ( domainHierarchy ) ; for ( DomPair pair : this . document . getDomainHierarchy ( ) ) writeDomainPair ( pair , document , domainHierarchy ) ; }
17848	private void cancelUploadsForAccount ( Account account ) { mPendingUploads . remove ( account . name ) ; mUploadsStorageManager . removeUploads ( account . name ) ; }
17877	@ Override public boolean isValueLineVariableLength ( ) { return mValueLineVariableLength ; }
17888	public boolean contains ( Split split ) { return split2index . keySet ( ) . contains ( split ) ; }
17889	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_LEAVE_FAIL_NOT_A_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17923	private void unlinkReverse ( ) { if ( reverse != _NULL ) { reverse . reverse = _NULL ; } reverse = _NULL ; }
17963	public static SM_SYSTEM_MESSAGE STR_CANCEL_PETITION_OK_TO_GM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
17965	public static Simulation fromXml ( String xml ) throws ParserConfigurationException , SAXException , IOException { return XmlReader . fromXml ( new InputSource ( new StringReader ( xml ) ) ) ; }
17983	public GroupsGetRequestsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
17994	protected BoardDeleteCommentQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
17995	protected int nextChar ( ) throws IOException { if ( top < _NUM ) { return catfile . read ( ) ; } else { return stack [ top -- ] ; } }
18059	public boolean contains ( Vertex v ) { return UniqueVertices . containsKey ( v . getLabel ( ) ) ; }
18061	@ Override public void invalidate ( DictionaryColumnUniqueIdentifier dictionaryColumnUniqueIdentifier ) { carbonLRUCache . remove ( getLruCacheKey ( dictionaryColumnUniqueIdentifier . getColumnIdentifier ( ) . getColumnId ( ) , CacheType . FORWARD_DICTIONARY ) ) ; }
18071	public void save ( FileOutputStream outputStream , @ Nullable String header ) throws IOException { myProperties . store ( outputStream , header ) ; }
18081	public static < T extends GenericEntity > List < T > filterByDate ( List < T > datedValues , java . sql . Timestamp moment ) { return filterByDate ( datedValues , moment , _NULL , _NULL , _BOOL ) ; }
18098	public static boolean isWindowsClassicLookAndFeel ( ) { return UIUtils . isWindowsClassicLookAndFeel ( ) ; }
18126	@ Override public boolean hasField ( String fldName ) { return ts . hasField ( fldName ) ; }
18146	public static boolean interfaceOf ( Object obj , Object interfaceObject ) { Class < ? > interfaceClass = interfaceObject . getClass ( ) ; return interfaceOf ( obj , interfaceClass ) ; }
18169	public void startFragment ( String fragmentClass , Bundle args ) { Intent intent = new Intent ( Intent . ACTION_MAIN ) ; intent . setClass ( this , getClass ( ) ) ; intent . putExtra ( EXTRA_SHOW_FRAGMENT , fragmentClass ) ; intent . putExtra ( EXTRA_SHOW_FRAGMENT_ARGUMENTS , args ) ; startActivity ( intent ) ; }
18172	@ Override public boolean ready ( ) throws IOException { return _BOOL ; }
18182	public boolean isFinal ( ) { return Modifier . isFinal ( this . getModifiers ( ) ) ; }
18223	public synchronized boolean isCompleted ( ) { return completed ; }
18233	public static SM_SYSTEM_MESSAGE STR_FORCE_HE_IS_BANISHED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18271	public boolean isEmpty ( ) { return _BOOL ; }
18282	public static Map < String , Object > createUserPrefMap ( List < GenericValue > recList ) throws GeneralException { Map < String , Object > userPrefMap = new LinkedHashMap < String , Object > ( ) ; if ( recList != _NULL ) { for ( GenericValue value : recList ) { addPrefToMap ( value , userPrefMap ) ; } } return userPrefMap ; }
18284	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sleep_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
18288	public static ModelLocation fromAddress ( String address ) { return new ModelLocation ( address ) ; }
18296	public void run ( ) { filterMessageSender . connect ( ) ; }
18325	@ Override protected Object fetchRelatedObject ( RegistryEntry entry , Serializable relationId , RepositoryMethodParameterProvider parameterProvider , QueryAdapter queryAdapter ) { String uid = getUID ( entry , relationId ) ; Object relatedResource = resourceMap . get ( uid ) ; if ( relatedResource != _NULL ) { return relatedResource ; } else { return _NULL ; } }
18332	public void addBitmapToCache ( String data , BitmapDrawable value ) { if ( data == _NULL || value == _NULL ) { return ; } if ( mMemoryCache != _NULL ) { if ( RecyclingBitmapDrawable . class . isInstance ( value ) ) { ( ( RecyclingBitmapDrawable ) value ) . setIsCached ( _BOOL ) ; } mMemoryCache . put ( data , value ) ; } }
18336	public void validateOutput ( ) throws XmlParsingException , FileNotFoundException { XmlParser . parse ( outputFile , new String [ ] { TTML_SCHEMA } , TTML_PACKAGES , TtEltype . class ) ; }
18345	public int addChild ( int parent ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
18405	public static boolean isMetaTempo ( MidiMessage midiMsg ) { if ( midiMsg . getLength ( ) != _NUM || midiMsg . getStatus ( ) != MetaMessage . META ) { return _BOOL ; } byte [ ] msg = midiMsg . getMessage ( ) ; return ( ( msg [ _NUM ] & _NUM ) == META_TEMPO_TYPE ) && ( msg [ _NUM ] == _NUM ) ; }
18437	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
18445	public static String hexToString ( final String data ) throws ConversionException { try { return ConversionUtils . arrayToString ( Hex . decodeHex ( data . toCharArray ( ) ) ) ; } catch ( DecoderException e ) { throw new ConversionException ( _CHAR Can not convert given hex text into plain text _CHAR , e ) ; } }
18471	void exitScope ( ) { locals . pop ( ) ; }
18514	public boolean isRotationEnabled ( ) { return mIsRotationEnabled ; }
18531	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
18607	public void stopJumping ( ) { for ( JumpingBeansSpan bean : jumpingBeans ) { if ( bean != _NULL ) { bean . teardown ( ) ; } } cleanupSpansFrom ( textView . get ( ) ) ; }
18624	public static < T > T root ( @ NotNull ScopedFunction < T > scopedFunction ) { return push ( _NULL , scopedFunction ) ; }
18628	public boolean hasProgramStartDate ( ) { return programStartDate != _NULL ; }
18636	private void compareSurrogateKeyData ( List < String > data , Dictionary reverseDictionary ) { int surrogateKey = _NUM ; for ( int i = _NUM ; i < data . size ( ) ; i ++ ) { surrogateKey ++ ; assertTrue ( surrogateKey == reverseDictionary . getSurrogateKey ( data . get ( i ) ) ) ; } }
18651	public void resetZoom ( ) { Iterator < FileFragment > entries = mCachedFragments . values ( ) . iterator ( ) ; while ( entries . hasNext ( ) ) { FileFragment fileFragment = ( FileFragment ) entries . next ( ) ; if ( fileFragment instanceof PreviewImageFragment ) { ( ( PreviewImageFragment ) fileFragment ) . getImageView ( ) . resetZoom ( ) ; } } }
18677	public String constructFullClasspath ( ) { String cp = super . constructFullClasspath ( ) ; cp += File . pathSeparator + soot . options . Options . v ( ) . soot_classpath ( ) ; return cp ; }
18689	public static SM_SYSTEM_MESSAGE STR_MSG_GET_SCORE ( int num1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0 ) ; }
18706	public Builder encrypt ( String key ) { this . encryptKey = key ; return this ; }
18710	public LikesGetListQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
18714	protected BoardGetCommentsQueryWithExtended groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
18735	public boolean isAbstract ( ) { return Modifier . isAbstract ( this . getModifiers ( ) ) ; }
18737	public void clear ( ) { for ( VisibleObject object : knownObjects . values ( ) ) { object . getKnownList ( ) . del ( owner , _BOOL ) ; } knownObjects . clear ( ) ; if ( knownPlayers != _NULL ) { knownPlayers . clear ( ) ; } visualObjects . clear ( ) ; if ( visualPlayers != _NULL ) { visualPlayers . clear ( ) ; } }
18738	public static UserFeedback createUserFeedback ( ) { UserFeedback userFeedback = new UserFeedback ( Constants . DEFAULT_PREFIX_USER_FEEDBACK + internalId ++ ) ; return userFeedback ; }
18780	public void sort ( List < Map < String , Object >> sheet , String key ) { Collections . sort ( sheet , new FieldComparator ( key ) ) ; }
18783	@ Override public boolean ready ( ) throws IOException { return _BOOL ; }
18785	private boolean hasPrefix ( byte [ ] nal ) { if ( nal [ _NUM ] == _NUM && nal [ _NUM ] == _NUM && nal [ _NUM ] == _NUM && nal [ _NUM ] == _NUM ) return _BOOL ; else return _BOOL ; }
18786	public Txn < T > txn ( final Txn < T > parent , final TxnFlags ... flags ) { if ( closed ) { throw new AlreadyClosedException ( ) ; } return new Txn < > ( this , parent , proxy , flags ) ; }
18851	private void populateAllIvPossibilities ( IVScanResult ivScanResult ) { IVResultsAdapter ivResults = new IVResultsAdapter ( ivScanResult ) ; rvResults . setAdapter ( ivResults ) ; }
18862	protected String [ ] upload_file ( String group_name , String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final byte cmd = ProtoCommon . STORAGE_PROTO_CMD_UPLOAD_FILE ; return this . upload_file ( cmd , group_name , local_filename , file_ext_name , meta_list ) ; }
18863	public String encodeRootCertificateAsPem ( ) { return securityProviderTool . encodeCertificateAsPem ( generatedCertificateAndKey . get ( ) . getCertificate ( ) ) ; }
18872	public synchronized Vertex locateVertex ( String sVertexLabel ) { return ( Vertex ) UniqueVertices . get ( sVertexLabel ) ; }
18880	@ Override public final long available ( ) { try { return is . available ( ) ; } catch ( IOException e ) { System . err . println ( _CHAR ERROR _CHAR + e ) ; return _NUM ; } }
18933	public static boolean canInviteToAlliance ( Player player , Player target ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canInviteToAlliance . ordinal ( ) ] ) { if ( ! restrictions . canInviteToAlliance ( player , target ) ) { return _BOOL ; } } return _BOOL ; }
18939	public static String wrapQuotesIfWindowsOS ( String context ) { return ExecutorUtils . isUnixOS ( ) ? context : ( _CHAR \ _CHAR _CHAR + context + _CHAR \ _CHAR _CHAR ) ; }
18943	public DatabaseGetCountriesQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
18949	@ Override protected XMLDocumentScanner createDocumentScanner ( ) { fNamespaceScanner = new XMLNSDocumentScannerImpl ( ) ; return fNamespaceScanner ; }
18980	private void createChunkList ( ) { this . oneDictionaryChunkList = new ArrayList < ByteBuffer > ( dictionary_one_chunk_size ) ; chunk_count ++ ; }
18999	public void updateKey ( byte [ ] newKey ) { this . key = newKey ; }
19008	public PhotosReportQuery report ( UserActor actor , int ownerId , int photoId ) { return new PhotosReportQuery ( getClient ( ) , actor , ownerId , photoId ) ; }
19055	public void clear ( ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
19061	public FriendsGetQueryWithFields offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
19070	public void addCoreEquipmentConfigurationChanger ( final long equipmentId , final ICoreEquipmentConfigurationChanger coreEquipmentConfigurationChanger ) { List < ICoreEquipmentConfigurationChanger > changers = coreEquipmentConfigurationChangers . get ( equipmentId ) ; if ( changers == _NULL ) { changers = new ArrayList < > ( ) ; coreEquipmentConfigurationChangers . put ( equipmentId , changers ) ; } changers . add ( coreEquipmentConfigurationChanger ) ; }
19076	public void write ( PacketBuffer buf , T value ) { writer . accept ( buf , value ) ; }
19080	public static Document parseDocument ( File file ) throws ParserConfigurationException , SAXException , IOException { return parseDocument ( file , _BOOL ) ; }
19144	private synchronized void update ( String query ) throws SQLException { Statement st = connection . createStatement ( ) ; int ok = st . executeUpdate ( query ) ; if ( ok == - _NUM ) { throw new SQLException ( _CHAR DB problem with query : _CHAR + query ) ; } st . close ( ) ; }
19149	@ Override public boolean isValueLineVariableLength ( ) { return mValueLineVariableLength ; }
19191	public boolean hasApiCapability ( SerialMessageClass capability ) { return apiCapabilities . contains ( capability ) ; }
19206	public void putLong ( String key , long value ) { checkForNullKey ( key ) ; preferences . edit ( ) . putLong ( key , value ) . apply ( ) ; }
19209	public void addBitmapToCache ( String data , BitmapDrawable value ) { if ( data == _NULL || value == _NULL ) { return ; } if ( mMemoryCache != _NULL ) { if ( RecyclingBitmapDrawable . class . isInstance ( value ) ) { ( ( RecyclingBitmapDrawable ) value ) . setIsCached ( _BOOL ) ; } mMemoryCache . put ( data , value ) ; } }
19224	@ Override public boolean isSingleton ( ) { return _BOOL ; }
19241	public void reset ( ) { fromIndex = _NUM ; }
19252	public Node addRoot ( ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
19253	public boolean allowedAsHttpRequestResponse ( ) { return allowedAsHttpRequestResponse ; }
19267	public double incrementCount ( E key , double increment ) { double newVal = getCount ( key ) + increment ; setCount ( key , newVal ) ; dirty = _BOOL ; return newVal ; }
19279	public LeadsStartQuery start ( int leadId , String secret ) { return new LeadsStartQuery ( getClient ( ) , leadId , secret ) ; }
19297	protected BoardFixTopicQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
19338	@ Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ) ; if ( ( mBitmap != _NULL ) && ( mFaces != _NULL ) ) { double scale = drawBitmap ( canvas ) ; drawFaceBox ( canvas , scale ) ; } }
19349	protected void addAbsoluteFooter ( @ LayoutRes int layoutId ) { addAbsoluteFooter ( layoutId , Insertion . TYPE_ABSOLUTE_FOOTER ) ; }
19355	void flushAll ( long txNum ) { for ( Buffer buff : bufferPool ) { try { buff . getExternalLock ( ) . lock ( ) ; if ( buff . isModifiedBy ( txNum ) ) { buff . flush ( ) ; } } finally { buff . getExternalLock ( ) . unlock ( ) ; } } }
19409	public boolean isExplain ( ) { return isExplain ; }
19447	protected boolean isDefaultValue ( double value ) { return FastMath . abs ( value ) < epsilon ; }
19487	public static HelpNode fromXml ( String xml ) throws ParserConfigurationException , SAXException , IOException { return HelpReader . fromXml ( new InputSource ( new StringReader ( xml ) ) ) ; }
19500	protected BoardDeleteTopicQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
19512	public static UInteger valueOf ( long value ) throws NumberFormatException { return valueOfUnchecked ( rangeCheck ( value ) ) ; }
19514	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
19534	public Builder intoTargetFiles ( @ Nullable Collection < File > targetFiles ) { myTargetFiles = targetFiles ; return this ; }
19559	public Builder addColumnLong ( String name , Long minAllowedValue , Long maxAllowedValue ) { return addColumn ( new LongMetaData ( name , minAllowedValue , maxAllowedValue ) ) ; }
19580	public static SM_SYSTEM_MESSAGE STR_MSG_SKILL_ITEM_RESTRICTED_AREA ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
19582	public boolean removeEdge ( int edge ) { throw new UnsupportedOperationException ( _CHAR Changes to graph structure not allowed for spanning trees . '' ) ; }
19607	@ Override public int [ ] makeInverseCumulativeTestValues ( ) { return new int [ ] { _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , Integer . MAX_VALUE } ; }
19616	private int findInsertionIndex ( final int key ) { return findInsertionIndex ( keys , states , key , mask ) ; }
19675	public AudioGetPopularQuery genreId ( AudioGenre value ) { return unsafeParam ( _CHAR genre_id _CHAR , value ) ; }
19696	private static boolean permissionExists ( String permission ) { Integer minVersion = MIN_SDK_PERMISSIONS . get ( permission ) ; return minVersion == _NULL || Build . VERSION . SDK_INT >= minVersion ; }
19720	public static SM_SYSTEM_MESSAGE STR_CHANGE_ITEM_SKIN_NOT_SKIN_CHANGABLE_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
19749	@ Override public int read ( ) { return - _NUM ; }
19761	public static Complex valueOf ( double realPart ) { if ( Double . isNaN ( realPart ) ) { return NaN ; } return new Complex ( realPart ) ; }
19772	private XMLDocumentHandler handler ( ) { return JAXPValidatorComponent . this . getDocumentHandler ( ) ; }
19792	public Iterator tuples ( ) { return m_tuples . iterator ( rows ( ) ) ; }
19823	public boolean isChangeToPrimaryStage ( ) { return changeToPrimaryStage ; }
19848	public static String separatorsToWindows ( String path ) { if ( path == _NULL || path . indexOf ( UNIX_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( UNIX_SEPARATOR , WINDOWS_SEPARATOR ) ; }
19863	public HectorCassandraClientConfigurer keyspaceName ( String keyspaceName ) { this . keyspaceName = keyspaceName ; return this ; }
19901	public static Builder builder ( String featureName ) { return new Builder ( featureName ) ; }
19914	boolean appendMarker ( Node < K , V > f ) { return casNext ( f , new Node < K , V > ( f ) ) ; }
19933	public void addElement ( int element ) { ensureCapacity ( size + _NUM ) ; data [ size ++ ] = element ; }
19934	public static < T > void doForAll ( Collection < T > c_ , ObjectVisitor < T > v_ ) { for ( Iterator < T > iter = c_ . iterator ( ) ; iter . hasNext ( ) ; ) v_ . visit ( iter . next ( ) ) ; }
19943	public Bookmark addBookmark ( Bookmark bookmark ) { Assert . notNull ( bookmark ) ; bookmarks . add ( bookmark ) ; bookmark . setUser ( this ) ; return bookmark ; }
19963	public void sendFTPCommand ( String command ) throws IOException { writer . writeLine ( command ) ; for ( Iterator iter = communicationListeners . iterator ( ) ; iter . hasNext ( ) ; ) { FTPCommunicationListener l = ( FTPCommunicationListener ) iter . next ( ) ; l . sent ( command ) ; } }
19979	protected boolean edgeCheck ( Edge e , boolean throwException ) { if ( ! e . isValid ( ) ) { if ( throwException ) { throw new IllegalArgumentException ( _CHAR Edge must be valid . '' ) ; } return _BOOL ; } if ( e . getGraph ( ) != this ) { if ( throwException ) { throw new IllegalArgumentException ( _CHAR Edge must be part of this Graph . '' ) ; } return _BOOL ; } return _BOOL ; }
20001	public static SM_SYSTEM_MESSAGE STR_PARTY_HE_IS_ALREADY_MEMBER_OF_OTHER_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20046	public boolean isTranslationEnabled ( ) { return mIsTranslationEnabled ; }
20057	protected FriendsAreFriendsQuery userIds ( int ... value ) { return unsafeParam ( _CHAR user_ids _CHAR , value ) ; }
20079	public GroupsGetInvitesQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
20090	private void saveTouchStart ( MotionEvent event ) { mSavedMatrix . set ( mTouchMatrix ) ; mTouchStartPoint . x = event . getX ( ) ; mTouchStartPoint . y = event . getY ( ) ; mClosestDataSetToTouch = mChart . getDataSetByTouchPoint ( event . getX ( ) , event . getY ( ) ) ; }
20134	@ Override public long blocksAccessed ( ) { return p . blocksAccessed ( ) ; }
20136	@ Override public boolean isValueLineVariableLength ( ) { return mValueLineVariableLength ; }
20176	private static boolean sonyBadgeContentProviderExists ( Context context ) { boolean exists = _BOOL ; ProviderInfo info = context . getPackageManager ( ) . resolveContentProvider ( SONY_HOME_PROVIDER_NAME , _NUM ) ; if ( info != _NULL ) { exists = _BOOL ; } return exists ; }
20182	public BoardGetCommentsQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
20207	public ResourceNameValidator exist ( ) { myExist = _BOOL ; myUnique = _BOOL ; return this ; }
20209	public int size ( ) { return members . size ( ) ; }
20211	@ NotNull private EditSourceDialog showEditDialog ( @ Nullable RepositorySource source ) { RepositorySourceProvider userSourceProvider = getUserSourceProvider ( ) ; assert userSourceProvider != _NULL ; EditSourceDialog input = new EditSourceDialog ( userSourceProvider , source ) ; input . show ( ) ; return input ; }
20226	public void onActivityResult ( int requestCode , int resultCode , Intent data ) { mCallBackManager . onActivityResult ( requestCode , resultCode , data ) ; }
20297	public void initializeImages ( URL baseURL ) { createImageDescriptor ( IRevisionGraphConstants . IMG_EXPORT_IMAGE , baseURL ) ; createImageDescriptor ( IRevisionGraphConstants . IMG_FILTER_CONNECTIONS , baseURL ) ; createImageDescriptor ( IRevisionGraphConstants . IMG_REVISION_GRAPH_CHRONOLOGICAL , baseURL ) ; createImageDescriptor ( IRevisionGraphConstants . IMG_SHOW_DELETED , baseURL ) ; }
20310	@ Override protected synchronized void afterRead ( int n ) { if ( n != - _NUM ) { this . count += n ; } }
20325	public static Director newProject ( ) { return newProject ( _BOOL ) ; }
20333	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
20338	public void plot ( String filename ) { try { BufferedOutputStream out = new BufferedOutputStream ( new FileOutputStream ( filename ) ) ; render ( out , _NUM ) ; out . close ( ) ; } catch ( IOException ioe ) { } }
20373	public String [ ] upload_file ( byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_file ( group_name , file_buff , _NUM , file_buff . length , file_ext_name , meta_list ) ; }
20380	public int addChildEdge ( int parent , int child ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
20402	public static boolean initAsync ( String Version , Context AppContext , LoaderCallbackInterface Callback ) { return AsyncServiceHelper . initOpenCV ( Version , AppContext , Callback ) ; }
20422	@ Override public String toString ( ) { return MoreObjects . toStringHelper ( this ) . add ( _CHAR id _CHAR , getId ( ) ) . add ( _CHAR roleName _CHAR , getRoleName ( ) ) . toString ( ) ; }
20425	public void printSinks ( ) { if ( this . sourceSinkProvider == _NULL ) { System . err . println ( _CHAR Sinks not calculated yet _CHAR ) ; return ; } System . out . println ( _CHAR Sinks : _CHAR ) ; for ( SourceSinkDefinition am : getSinks ( ) ) { System . out . println ( am . toString ( ) ) ; } System . out . println ( _CHAR End of Sinks _CHAR ) ; }
20456	public static Vector < String > effectClasses ( ) { return new Vector < String > ( getList ( _CHAR audioeffects . classes . list _CHAR ) ) ; }
20465	public void add ( int position , T item ) { items . add ( position , item ) ; notifyItemInserted ( position ) ; }
20495	public static SM_SYSTEM_MESSAGE STR_MSG_FORCE_MATCH_JUST_SENT_APPLY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20531	void add ( SuperToast superToast ) { superToastPriorityQueue . add ( superToast ) ; this . showNextSuperToast ( ) ; }
20534	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
20558	public boolean isNullExpression ( ) { return _isNullExpression ; }
20567	void onLoadFailed ( int errorCode ) { if ( mRestoreStartedAtMillis != - _NUM && mLastShowMillis >= mRestoreStartedAtMillis ) { recordTabRestoreResult ( _BOOL , - _NUM , - _NUM , errorCode ) ; } mRestoreStartedAtMillis =- _NUM ; }
20606	public VideoSearchQuery hd ( Integer value ) { return unsafeParam ( _CHAR hd _CHAR , value ) ; }
20615	public boolean hasTrackedEntityInstance ( ) { return trackedEntityInstance != _NULL ; }
20632	public static boolean interfaceOf ( Class < ? > objectClass , String interfaceName ) throws ClassNotFoundException { Class < ? > interfaceClass = loadClass ( interfaceName ) ; return interfaceOf ( objectClass , interfaceClass ) ; }
20643	private float angle ( TouchState s ) { return ( float ) Math . toDegrees ( Math . atan2 ( s . yDown - s . yCurrent , s . xDown - s . xCurrent ) ) ; }
20649	@ Nullable public PsiElement resolveLabel ( Label label ) { return resolveLabel ( label . blazePackage ( ) , label . ruleName ( ) , _BOOL ) ; }
20684	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
20692	public void loadDataStringFromFile ( String sFilename , boolean clearCurrentData ) { loadDataStringFromFile ( sFilename , clearCurrentData , utils . getSystemEncoding ( ) ) ; }
20713	public static boolean isEmpty ( CharSequence str ) { return ( str == _NULL || str . length ( ) == _NUM ) ; }
20732	private static void buildRangeSet ( List < String > entries , Interval interval , Map < String , RangeSet < DateTime >> container ) { entries . stream ( ) . map ( _NULL ) . forEach ( _NULL ) ; }
20774	public void pitchAnalyze ( DoubleDataSource signal ) { pitchAnalyze ( signal . getAllData ( ) ) ; if ( f0s != _NULL ) params . numfrm = f0s . length ; else params . numfrm = _NUM ; }
20799	public void putInt ( String key , int value ) { checkForNullKey ( key ) ; preferences . edit ( ) . putInt ( key , value ) . apply ( ) ; }
20806	public void showEmpty ( Drawable emptyImageDrawable , String emptyTextContent , List < Integer > skipIds ) { switchState ( EMPTY , emptyImageDrawable , emptyTextContent , _NULL , _NULL , skipIds ) ; }
20835	public static UInteger valueOf ( String value ) throws NumberFormatException { return valueOfUnchecked ( rangeCheck ( Long . parseLong ( value ) ) ) ; }
20839	public EventQueryParams removeProgramIndicatorItems ( ) { items = items . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; itemFilters = itemFilters . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; return this ; }
20862	@ Override public RecyclerView . LayoutParams generateDefaultLayoutParams ( ) { return new LayoutParams ( ViewGroup . LayoutParams . WRAP_CONTENT , ViewGroup . LayoutParams . WRAP_CONTENT ) ; }
20898	public TrackedEntityInstanceQueryParams addFilter ( QueryItem filter ) { this . filters . add ( filter ) ; return this ; }
20922	@ Override public void onMapReady ( MapboxMap mapboxMap ) { map = mapboxMap ; map . setOnMapLongClickListener ( this ) ; }
20938	public static void writePbsEntryPacketObjectArray ( PbsOutputStream output , Object [ ] objects ) { if ( objects != _NULL ) { output . writeInt ( objects . length ) ; for ( Object entry : objects ) writePbsEntryPacket ( output , ( PbsEntryPacket ) entry ) ; } else output . writeInt ( - _NUM ) ; }
20941	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
20959	public static SM_SYSTEM_MESSAGE STR_FORCE_INVITED_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20978	private static Class < ? > convertFieldType ( String fieldType ) { if ( fieldTypeMap . containsKey ( fieldType ) ) { return fieldTypeMap . get ( fieldType ) ; } return _NULL ; }
20989	private boolean hasTargetConnection ( ) { return ( ConnectionHold . ConnectionContext . get ( ) != _NULL && ConnectionHold . ConnectionContext . get ( ) . get ( ConnectionHold . currentDataSource . get ( ) ) != _NULL ) ; }
21039	public boolean isChromeLocationSettingEnabled ( ) { return PrefServiceBridge . getInstance ( ) . isAllowLocationEnabled ( ) ; }
21056	public VideoGetQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
21124	private void observeChangingBooks ( ) { Observable < Book > observable = bookRepository . observeChangingBooks ( ) . observeOn ( AndroidSchedulers . mainThread ( ) ) ; subscribe ( observable , _NULL , _NULL , _NULL ) ; }
21136	protected boolean enabledForChrome ( Context context ) { if ( mAndroidPermission . isEmpty ( ) ) return _BOOL ; return permissionOnInAndroid ( mAndroidPermission , context ) ; }
21167	public static LessEqualsSpacePredicate lessEqual ( Comparable < ? > value ) { return new LessEqualsSpacePredicate ( value ) ; }
21177	public boolean containsTuple ( Tuple t ) { return ( t . getTable ( ) == this && isValidRow ( t . getRow ( ) ) ) ; }
21196	@ Override public void insertData ( int offset , String arg ) throws DOMException { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Method not supported _CHAR ) ; }
21223	@ Override public boolean isValueLineVariableLength ( ) { return mValueLineVariableLength ; }
21242	public final void ensureValid ( RetryStrategy retryStrategy ) { ensureNoErrors ( validate ( retryStrategy ) ) ; }
21248	public double distanceSquared ( Vector o ) { return NumberConversions . square ( x - o . x ) + NumberConversions . square ( y - o . y ) + NumberConversions . square ( z - o . z ) ; }
21253	public void remoteResourceMoved ( ISVNRemoteResource resource , ISVNRemoteFolder destinationFolder , String destinationResourceName ) { for ( ISVNListener listener : repositoryListeners ) { listener . remoteResourceMoved ( resource , destinationFolder , destinationResourceName ) ; } }
21262	public static boolean isFloatLike ( Type t ) { return t . equals ( FloatType . v ( ) ) || t . equals ( DoubleType . v ( ) ) || t . equals ( RefType . v ( _CHAR java . lang . Float _CHAR ) ) || t . equals ( RefType . v ( _CHAR java . lang . Double _CHAR ) ) ; }
21271	public static EnhancedBookmarkPage buildPage ( Activity activity , Tab tab ) { if ( DeviceFormFactor . isTablet ( activity ) ) return new EnhancedBookmarkPage ( activity , tab ) ; else return _NULL ; }
21305	public static UByte ubyte ( int value ) throws NumberFormatException { return UByte . valueOf ( value ) ; }
21334	public boolean isPreheatCache ( ) { return preheatCache == _NULL ? _BOOL : preheatCache ; }
21343	public final boolean isEmpty ( ) { return empty ; }
21355	Code_attribute locate_code_attribute ( ) { attribute_info ai ; int i ; for ( i = _NUM ; i < attributes_count ; i ++ ) { ai = attributes [ i ] ; if ( ai instanceof Code_attribute ) return ( Code_attribute ) ai ; } return _NULL ; }
21356	public boolean isSubsetOf ( PointsToBitVector other ) { BitVector andResult = BitVector . and ( this , other ) ; return andResult . equals ( this ) ; }
21392	public void event ( String action , String param , long duration ) { currentTest . get ( ) . event ( action , param , duration ) ; }
21394	void initialize ( ) { experimentValues = loadCache ( ) ; ListenableFuture < String > response = executor . submit ( new WebExperimentsDownloader ( ) ) ; response . addListener ( new WebExperimentsResultProcessor ( response ) , MoreExecutors . sameThreadExecutor ( ) ) ; }
21413	public void onAccuracyChanged ( Sensor sensor , int accuracy ) { if ( sensor . getType ( ) != Sensor . TYPE_ACCELEROMETER ) { return ; } if ( this . status == AccelListener . STOPPED ) { return ; } this . accuracy = accuracy ; }
21465	public void java_lang_Package_getSystemPackages0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getLeastArrayObject ( ) ) ; }
21478	public void clear ( ) { m_trie = new Trie ( m_trie . isCaseSensitive ( ) ) ; super . clear ( ) ; }
21539	public T [ ] computeDerivatives ( final T t , final T [ ] y ) throws MathIllegalArgumentException , MathIllegalStateException , NullPointerException { evaluations . increment ( ) ; return equations . computeDerivatives ( t , y ) ; }
21552	public static void closeQuietly ( LineIterator iterator ) { if ( iterator != _NULL ) { iterator . close ( ) ; } }
21612	private void parseFile ( String filename , Handler < AsyncResult < Void >> handler ) { OpenOptions options = new OpenOptions ( ) . setRead ( _BOOL ) . setWrite ( _BOOL ) ; vertx . fileSystem ( ) . open ( filename , options , _NULL ) ; }
21647	public static FunktionConfig load ( ) throws IOException { return findFromFolder ( new File ( _CHAR . _CHAR ) ) ; }
21662	public double pace ( double f ) { return _NUM * ( f <= _NUM . _NUM ? f : ( _NUM - f ) ) ; }
21694	private void run_implementation_ ( PushProcessor p ) throws Exception { final Map < GroupName , Alert > alerts = registry_ . getCollectionAlerts ( ) ; final TimeSeriesCollection tsdata = registry_ . getCollectionData ( ) ; p . accept ( tsdata , unmodifiableMap ( alerts ) , registry_ . getFailedCollections ( ) ) ; }
21711	public int length ( ) { return this . map . size ( ) ; }
21768	public static SM_SYSTEM_MESSAGE STR_SKILL_RESISTED_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
21779	public boolean isMaterializedView ( ) { return SqlViewType . MATERIALIZED_VIEW . equals ( type ) ; }
21784	@ Override public double [ ] makeCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM } ; }
21801	public FaveGetPostsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
21808	public static SM_SYSTEM_MESSAGE STR_PET_CONDITION_REWARD_GET ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
21819	public static SM_SYSTEM_MESSAGE STR_MSG_MONSTER_SKILL ( String value0 , String value1 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 , value2 ) ; }
21822	@ Override public void close ( ) throws RemoteException { tx . commit ( ) ; }
21823	public static boolean isPrimitive ( String typeName ) { return _primitiveTypes . containsKey ( typeName ) ; }
21832	public void addPackage ( Context context , String packageName ) { final List < ResolveInfo > matches = findActivitiesForPackage ( context , packageName ) ; if ( matches . size ( ) > _NUM ) { for ( ResolveInfo info : matches ) { add ( new ItemApplication ( context . getPackageManager ( ) , info , mIconCache , _NULL ) ) ; } } }
21840	public static Tuple min ( TupleSet tuples , String field ) { return min ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
21895	public static PrintWriter openFileForPrintWriter ( final File file ) throws IOException { if ( file . getName ( ) . endsWith ( _CHAR . gz _CHAR ) ) { return new PrintWriter ( openFileForWriting ( file ) ) ; } else { return new PrintWriter ( file ) ; } }
21914	public void disableDashedLine ( ) { mDashPathEffect = _NULL ; }
21919	public static SM_SYSTEM_MESSAGE STR_MSG_DELETE_CASH_TITLE_BY_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21973	@ SuppressWarnings ( { _CHAR unchecked _CHAR , _CHAR rawtypes _CHAR } ) public Serializable parseIdString ( String id ) { TypeParser parser = new TypeParser ( ) ; Class idType = getIdField ( ) . getType ( ) ; return parser . parse ( id , idType ) ; }
21983	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
22020	public Value add ( Value num1 , Value num2 ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
22033	private static boolean rotateIfLandScapeCamera ( ) { if ( Build . BRAND . toLowerCase ( ) . equals ( _CHAR samsung _CHAR ) ) { return _BOOL ; } else if ( Build . BRAND . toLowerCase ( ) . equals ( _CHAR sony _CHAR ) ) { return _BOOL ; } else { return _BOOL ; } }
22049	@ Override public boolean isDefaultWorkspace ( String workspaceName ) { if ( workspaceName != _NULL ) { return ( workspaceName . compareTo ( DEFAULT_WORKSPACE_NAME ) == _NUM ) ; } return _BOOL ; }
22061	public Object opt ( int index ) { return ( index < _NUM || index >= length ( ) ) ? _NULL : this . myArrayList . get ( index ) ; }
22082	public static boolean isBitOn ( int value , int bitNumber ) { if ( bitNumber <= _NUM || bitNumber > _NUM ) { throw new IllegalArgumentException ( _CHAR Only bits _NUM through _NUM are supported _CHAR ) ; } return ( ( value & MASKS [ bitNumber - _NUM ] ) == MASKS [ bitNumber - _NUM ] ) ; }
22084	@ JsonIgnore public boolean isInOperation ( ) { return ( this . mode == DataTagConstants . MODE_OPERATIONAL ) ; }
22095	private void updateNotificationsNodeLabel ( DefaultMutableTreeNode node , String label ) { DefaultMutableTreeNode selectedNode = ( DefaultMutableTreeNode ) mbeansTab . getTree ( ) . getLastSelectedPathComponent ( ) ; if ( node != selectedNode ) { return ; } invalidate ( ) ; mbeansTab . getButtonAt ( _NUM ) . setText ( label ) ; validate ( ) ; repaint ( ) ; }
22136	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_GATHERING_B_ITEM_CHECK ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22144	public WallGetQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
22153	public void init ( String flagzDirectory ) throws FlagException , EtcdFlagFieldUpdaterException { this . directoryPrefix = MoreObjects . firstNonNull ( flagzDirectory , directoryFlag . get ( ) ) ; client = new EtcdClient ( uris . toArray ( new URI [ uris . size ( ) ] ) ) ; client . setRetryHandler ( retryPolicy ) ; initialSetAllFlagz ( ) ; }
22177	public static final void main ( String [ ] args ) { System . out . println ( _CHAR dyn4j v _CHAR + Version . getVersion ( ) ) ; }
22180	public synchronized static boolean isDesktopSupported ( ) { if ( ! desktopSupportedInitialized ) { desktopSupported = Desktop . isDesktopSupported ( ) ; desktopSupportedInitialized = _BOOL ; } return desktopSupported ; }
22203	public boolean hasMapObjects ( ) { return mapObjects != _NULL && ! mapObjects . isEmpty ( ) ; }
22214	public Message fromJson ( TransportMessage message ) { if ( message == _NULL ) throw new IllegalArgumentException ( _CHAR Message can not be _NULL _CHAR ) ; return gson . fromJson ( message . getContent ( ) , Message . class ) ; }
22226	public static double readDouble ( byte [ ] bytes ) { return ByteBuffer . wrap ( bytes ) . getFloat ( ) ; }
22251	@ Override public String toString ( ) { return _CHAR at character _CHAR + pos + _CHAR of _CHAR + in ; }
22267	private Optional < UserFilter > findUserFilter ( String filterId ) { return Optional . ofNullable ( filterId == _NULL ? _NULL : userFilterRepository . findOne ( filterId ) ) ; }
22284	public boolean isIgnorableWhitespace ( ) { if ( needsSyncData ( ) ) { synchronizeData ( ) ; } return internalIsIgnorableWhitespace ( ) ; }
22296	private boolean isValidSelection ( String selection ) { return isValidSelection ( selection , getBaseContentView ( ) ) ; }
22327	public static SM_SYSTEM_MESSAGE STR_MSG_PARTY_MATCH_JUST_SENT_APPLY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22334	public Builder weight ( Number weight ) { this . weight = weight ; return this ; }
22364	public static < T extends GenericEntity > List < T > filterByDate ( List < T > datedValues , java . util . Date moment ) { return filterByDate ( datedValues , new java . sql . Timestamp ( moment . getTime ( ) ) , _NULL , _NULL , _BOOL ) ; }
22462	public void updateNodeDrawn ( ) { updateNodeDrawn ( myParentVisible ) ; }
22483	public void reset ( ) { Iterator iIter = Arrays . asList ( getAvailableCategories ( ) ) . iterator ( ) ; while ( iIter . hasNext ( ) ) Repository . deleteObject ( ( String ) iIter . next ( ) , INSECTDB . CATEGORY_TYPE ) ; }
22506	public boolean containsContext ( String name ) { return localContext . containsKey ( name ) ; }
22507	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
22540	public MarketSearchQueryWithExtended priceTo ( Integer value ) { return unsafeParam ( _CHAR price_to _CHAR , value ) ; }
22551	public void reset ( ) { count = _NUM ; totalTime = _NUM ; }
22554	public static SM_SYSTEM_MESSAGE STR_MSG_PARTY_MATCH_JUST_INVITE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22594	void executeQuery ( ) { queryExecutor . submit ( _NULL ) ; }
22599	public MarketCreateCommentQuery replyToComment ( Integer value ) { return unsafeParam ( _CHAR reply_to_comment _CHAR , value ) ; }
22609	private BSPTree < Euclidean1D > leafAfter ( BSPTree < Euclidean1D > node ) { node = childAfter ( node ) ; while ( node . getCut ( ) != _NULL ) { node = childBefore ( node ) ; } return node ; }
22635	public GroupsCreateQuery description ( String value ) { return unsafeParam ( _CHAR description _CHAR , value ) ; }
22650	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_END_ME_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
22655	@ Override public void onRequestPermissionsResult ( int requestCode , @ NonNull String [ ] permissions , @ NonNull int [ ] grantResults ) { switch ( requestCode ) { case REQUEST_STORAGE_READ_ACCESS_PERMISSION : if ( grantResults [ _NUM ] == PackageManager . PERMISSION_GRANTED ) { pickFromGallery ( ) ; } break ; default : super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } }
22665	protected String createAgentID ( int iLen ) { String sTemp = String . valueOf ( new Date ( ) . getTime ( ) ) ; return sTemp . substring ( sTemp . length ( ) - iLen ) ; }
22672	public boolean isConditionMet ( final ExpectedCondition < ? > condition , int timeout ) { try { bobcatWait . withTimeout ( timeout ) . until ( condition ) ; } catch ( TimeoutException | StaleElementReferenceException e ) { LOG . debug ( _CHAR Condition has not been made before timeout : _CHAR , e ) ; return _BOOL ; } return _BOOL ; }
22709	private void clickByText ( String text ) throws UiObjectNotFoundException { UiObject obj = new UiObject ( new UiSelector ( ) . text ( text ) ) ; obj . clickAndWaitForNewWindow ( ) ; }
22712	public void update ( ) { timeElapsed += Gdx . graphics . getDeltaTime ( ) ; if ( startGameTime ) { gameTime += Gdx . graphics . getDeltaTime ( ) ; } }
22722	public void showUpdateInfobarIfNecessary ( ChromeActivity activity ) { if ( mMustShowInfoBar ) showUpdateInfoBar ( activity ) ; }
22757	public static User createUser ( ) { return createUser ( Constants . DEFAULT_PREFIX_USER + internalId ++ ) ; }
22762	public void disableDashedLine ( ) { mDashPathEffect = _NULL ; }
22789	public void delete ( final T key ) { try ( Txn < T > txn = env . txnWrite ( ) ) { delete ( txn , key ) ; txn . commit ( ) ; } }
22861	public void append ( CharSequence s ) { text . append ( s ) ; }
22888	public static String unEscapeString ( String str ) { return unEscapeString ( str , ESCAPE_CHAR , COMMA ) ; }
22890	public BoardGetCommentsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
22900	public FriendsGetOnlineQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
22912	public boolean equals ( Object obj ) { return ReferentUuids . compare ( this , obj ) ; }
22919	@ Override public ASElementDeclaration createASElementDeclaration ( String namespaceURI , String name ) throws DOMException { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
22925	void update ( @ NonNull Bitmap icon , @ NonNull String description ) { mIcon = icon ; mDescription = description ; }
22949	@ Override public void onError ( AirMapException e ) { onDisconnect ( _BOOL ) ; }
23005	void localEscapes ( Local l ) { globEscape . addAll ( locals . get ( l ) ) ; if ( doCheck ) sanityCheck ( ) ; }
23016	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , FormatException , ChecksumException { return decode ( image , _NULL ) ; }
23032	public static LogicalMetricColumn addNewLogicalMetricColumn ( Schema schema , String name , LogicalMetric metric ) { LogicalMetricColumn col = new LogicalMetricColumn ( name , metric ) ; schema . addColumn ( col ) ; return col ; }
23039	public CreateSiteWindow selectTemplate ( String exactTemplateName ) { WebElement template = currentWindow . findElement ( By . xpath ( _CHAR .// div [ contains ( @ class , '' + '' ' template - title ' ) and text ( ) = \ '' '' + exactTemplateName + '' \ '' ] '' ) ) ; template . click ( ) ; return this ; }
23087	public Aggregation withAggregation ( Aggregation aggregation ) { return new FilteredAggregation ( aggregation . getName ( ) , aggregation . getFieldName ( ) , aggregation , getFilter ( ) ) ; }
23137	public boolean taxApplies ( ) { boolean taxApplies = _BOOL ; for ( ShoppingCartItem item : this ) { if ( item . taxApplies ( ) ) { taxApplies = _BOOL ; break ; } } return taxApplies ; }
23161	static void removeValueStatic ( @ NotNull GrStatementOwner root , @ NotNull BuildFileKey key ) { GrMethodCall method = getMethodCallByPath ( root , key . getPath ( ) ) ; if ( method != _NULL ) { method . delete ( ) ; } }
23176	public void disableDashedHighlightLine ( ) { mHighlightDashPathEffect = _NULL ; }
23177	public static UShort ushort ( String value ) throws NumberFormatException { return value == _NULL ? _NULL : UShort . valueOf ( value ) ; }
23222	private void update ( Collection < ResolverTuple > underlyingTuples , Throwable t ) { if ( t != _NULL ) applyException ( t ) ; else if ( underlyingTuples != _NULL ) applyUpdate ( underlyingTuples ) ; else applyException ( _NULL ) ; }
23294	public static boolean hasProperty ( String propertyName ) { return props . containsKey ( propertyName ) ; }
23311	public static < T > IStoredList < T > createRandomScanList ( boolean reuseLocks ) { return createStoredList ( _BOOL , reuseLocks ) ; }
23351	public void addAnimation ( Animation animation ) { if ( mAnimations . contains ( animation ) ) { return ; } mAnimations . add ( animation ) ; animation . start ( ) ; }
23385	public void plus ( long animationDurationMS ) { if ( state == FLAG_STATE_PLUS ) { return ; } toggle ( animationDurationMS ) ; }
23393	public String isMajorCompacted ( ) { return majorCompacted ; }
23394	public AemDialog openByContextMenu ( ) { openByContextMenu ( currentScope ) ; return this ; }
23424	public Date localCurrentTime ( ) { return new Date ( System . currentTimeMillis ( ) ) ; }
23484	public static SM_SYSTEM_MESSAGE STR_GUILD_INVITE_SENT_INVITE_MSG_TO_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23554	public boolean isVersionedExternalDB ( ) { return _isVersionedExternalDB ; }
23580	private void clickByDescription ( String text ) throws UiObjectNotFoundException { UiObject obj = new UiObject ( new UiSelector ( ) . description ( text ) ) ; obj . clickAndWaitForNewWindow ( ) ; }
23596	public boolean isPublic ( ) { return Modifier . isPublic ( this . getModifiers ( ) ) ; }
23609	public PhotosGetNewTagsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
23610	public static String separatorsToWindows ( String path ) { if ( path == _NULL || path . indexOf ( UNIX_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( UNIX_SEPARATOR , WINDOWS_SEPARATOR ) ; }
23650	public boolean isCyclic ( ) { return getKind ( ) == Type . TYPE_MESSAGE && getMessageType ( ) . isCyclic ( ) ; }
23652	public static boolean isBuildWithGradle ( @ NotNull Module module ) { return AndroidGradleFacet . getInstance ( module ) != _NULL ; }
23653	protected BoardCreateCommentQuery groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
23708	public T [ ] toArray ( ) { final T [ ] array = MathArrays . buildArray ( x . getField ( ) , _NUM ) ; array [ _NUM ] = x ; array [ _NUM ] = y ; array [ _NUM ] = z ; return array ; }
23814	public synchronized void replicateCompactionDeltas ( ) { _onlyReplicateDeletesUponCompaction = _BOOL ; while ( ! _addCompactQueue . isEmpty ( ) ) { _addCompactQueue . remove ( ) . run ( ) ; } }
23824	void localIsUnknown ( Local l ) { PurityNode node = PurityGlobalNode . node ; localsRemove ( l ) ; localsPut ( l , node ) ; nodes . add ( node ) ; if ( doCheck ) sanityCheck ( ) ; }
23857	public static int color ( Color c ) { return c . getRGB ( ) ; }
23868	public static < T > T convert ( Object source , Class < T > destType ) { return JSON . convertValue ( source , destType ) ; }
23899	public Builder client ( DistributedLogClient client ) { this . _client = client ; return this ; }
23900	public TrackedEntityInstanceQueryParams addAttribute ( QueryItem attribute ) { this . attributes . add ( attribute ) ; return this ; }
23904	protected String cmd ( ) { return cmd ; }
23908	private int peek ( ) { if ( stackSize == _NUM ) { throw new IllegalStateException ( _CHAR JsonWriter is closed . '' ) ; } return stack [ stackSize - _NUM ] ; }
23927	public static UInteger uint ( long value ) throws NumberFormatException { return UInteger . valueOf ( value ) ; }
23932	public static void println ( Object ... msg ) { String line = joiner . join ( msg ) ; trace . println ( line ) ; }
23935	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Resurrect_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
23952	public static void resetDimensionConstants ( Context context ) { Resources res = context . getResources ( ) ; sDpToPx = res . getDisplayMetrics ( ) . density ; sPxToDp = _NUM . _NUM / sDpToPx ; sCompositorButtonSlop = res . getDimension ( R . dimen . compositor_button_slop ) * sPxToDp ; }
23993	public boolean intersects ( S2CellId other ) { return other . rangeMin ( ) . lessOrEquals ( rangeMax ( ) ) && other . rangeMax ( ) . greaterOrEquals ( rangeMin ( ) ) ; }
24014	public static float readFloat ( byte [ ] bytes ) { return ByteBuffer . wrap ( bytes ) . getFloat ( ) ; }
24050	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
24060	public void writeBytes ( DataOutput out ) throws IOException { out . writeLong ( mostSig ) ; out . writeLong ( leastSig ) ; }
24067	private static TestItem adjustName ( TestItem input ) { StringBuilder sb = new StringBuilder ( StringUtils . repeat ( PREFIX , input . getPath ( ) . size ( ) ) ) ; input . setName ( sb . append ( input . getName ( ) ) . toString ( ) ) ; return input ; }
24069	public MessagesSetActivityQuery type ( MessagesSetActivityType value ) { return unsafeParam ( _CHAR type _CHAR , value ) ; }
24080	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HE_IS_ALREADY_MEMBER_OF_OUR_ALLIANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24083	public static int [ ] convertIntegers ( List < Integer > integers ) { int [ ] ret = new int [ integers . size ( ) ] ; for ( int i = _NUM ; i < ret . length ; i ++ ) { ret [ i ] = integers . get ( i ) . intValue ( ) ; } return ret ; }
24105	public void addProperty ( String key , String value ) { carbonProperties . setProperty ( key , value ) ; }
24143	public MessagesGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
24150	public static Document parseDocument ( InputStream inputData ) throws ParserConfigurationException , SAXException , IOException { return parseDocument ( inputData , _BOOL ) ; }
24151	public MessagesMarkAsImportantQuery markAsImportant ( UserActor actor ) { return new MessagesMarkAsImportantQuery ( getClient ( ) , actor ) ; }
24179	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
24183	public void configure ( ComponentConfiguration config ) { openDialog ( ) ; configDialog . configureWith ( config ) ; }
24281	public UsersGetSubscriptionsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
24305	@ Override public int available ( ) { long avail = size - position ; if ( avail <= _NUM ) { return _NUM ; } else if ( avail > Integer . MAX_VALUE ) { return Integer . MAX_VALUE ; } else { return ( int ) avail ; } }
24314	@ Override public double [ ] makeInverseCumulativeTestValues ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , Double . POSITIVE_INFINITY } ; }
24318	public void close ( ) { toolTipHelper . shutdownNow ( ) ; }
24324	public static Value noExceptionThrowingRhs ( Unit unit ) { return noExceptionThrowing ( rhs ( unit ) ) ; }
24414	public static boolean canInviteToGroup ( Player player , Player target ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canInviteToGroup . ordinal ( ) ] ) { if ( ! restrictions . canInviteToGroup ( player , target ) ) { return _BOOL ; } } return _BOOL ; }
24432	public boolean isAutoConnect ( ) { return mAutoConnect ; }
24459	public static SM_SYSTEM_MESSAGE STR_UNION_ENTER_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24460	public static Document parseDocument ( String inputData ) throws ParserConfigurationException , SAXException , IOException { return parseDocument ( inputData , _BOOL ) ; }
24469	public void openThriftWriter ( String filePath ) throws IOException { thriftWriter = new ThriftWriter ( filePath , _BOOL ) ; thriftWriter . open ( ) ; }
24488	@ Nonnull public WorkUnit produce ( ) { return this ; }
24516	public static SM_SYSTEM_MESSAGE STR_FACTION_JOIN_ERROR_MAX_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
24532	public boolean isRunning ( ) { if ( ! initedNative ) return _BOOL ; return NativeInterface . arwIsRunning ( ) ; }
24545	@ Override public BKAsyncLogWriter startAsyncLogSegmentNonPartitioned ( ) throws IOException { return ( BKAsyncLogWriter ) FutureUtils . result ( openAsyncLogWriter ( ) ) ; }
24548	public static String [ ] convertStrings ( List < String > strings ) { String [ ] ret = new String [ strings . size ( ) ] ; for ( int i = _NUM ; i < ret . length ; i ++ ) { ret [ i ] = strings . get ( i ) ; } return ret ; }
24591	protected void finish ( Map < String , Object > result ) throws InvalidJobException { if ( currentState != State . RUNNING ) { throw new InvalidJobException ( _CHAR Illegal state change _CHAR ) ; } currentState = State . FINISHED ; if ( Debug . verboseOn ( ) ) Debug . logVerbose ( _CHAR Async - Service finished . '' , module ) ; }
24593	public boolean showProtectedMediaSites ( ) { return mContentSettingsType == ContentSettingsType . CONTENT_SETTINGS_TYPE_PROTECTED_MEDIA_IDENTIFIER ; }
24615	public boolean bottomAllowed ( ) { return ( myFlags & BOTTOM_EDGE ) != _NUM ; }
24616	private boolean handleSingleTapUp ( MotionEvent e ) { setEventTarget ( mSearchPanel . isCoordinateInsideContent ( e . getX ( ) * mPxToDp , e . getY ( ) * mPxToDp ) ? EventTarget . SEARCH_CONTENT_VIEW : EventTarget . SEARCH_PANEL ) ; return _BOOL ; }
24617	private void checkMultipleRootElements ( ) { if ( getRootElementProcessed ( ) ) { reportFatalError ( _CHAR MultipleRootElements _CHAR ) ; } setRootElementProcessed ( _BOOL ) ; }
24653	public boolean match ( int bitWidth , long polynomial , long initial , long xorOut , boolean reflected ) { return bitWidth == this . bitWidth && polynomial == this . polynomial && initial == this . initial && xorOut == this . xorOut && reflected == this . reflected ; }
24657	public long size ( ) { return sequence . values ( ) . stream ( ) . mapToInt ( _NULL ) . sum ( ) ; }
24674	public Iterator edges ( ) { return m_edgeTuples . iterator ( edgeRows ( ) ) ; }
24697	public boolean containsBody ( Body body ) { return this . bodies . contains ( body ) ; }
24709	private boolean isCharType ( Field field ) { String type = field . getType ( ) . getName ( ) ; return type . equals ( _CHAR char _CHAR ) || type . endsWith ( _CHAR Character _CHAR ) ; }
24716	public FriendsSearchQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
24717	public void nullifyItem ( String sItem ) { NGramHistogram . put ( sItem , _NUM . _NUM ) ; }
24725	public static Simulation fromXml ( InputStream stream ) throws ParserConfigurationException , SAXException , IOException { return XmlReader . fromXml ( new InputSource ( stream ) ) ; }
24727	protected void dataHasChanged ( ) { if ( updateSymbolListener != _NULL ) { updateSymbolListener . dataChanged ( FieldIdEnum . UNKNOWN ) ; } }
24729	public boolean selectTreeItem ( TreeSelectionData data ) { SLDTree sldTree = uiMgr . getSymbolTree ( ) ; if ( sldTree == _NULL ) { return _BOOL ; } return sldTree . selectTreeItem ( data ) ; }
24816	public boolean compareAndSet ( final long expectedValue , final long newValue ) { return UNSAFE . compareAndSwapLong ( this , VALUE_OFFSET , expectedValue , newValue ) ; }
24833	public boolean isServiceUnitLoaded ( String suName ) { return this . loadedBundles . contains ( suName ) ; }
24848	public String makeLiteral ( Object object , boolean singleQuote ) { StringBuilder sb = new StringBuilder ( ) ; makeLiteral ( sb , object , singleQuote ) ; return sb . toString ( ) ; }
24893	public int indexOf ( Object key ) { return key == _NULL ? indexOfNull ( ) : indexOf ( key , key . hashCode ( ) ) ; }
24894	@ Override public int read ( ) { return - _NUM ; }
24911	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ReturnHome_A_TO_B ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
24925	public boolean isRecordSet ( ) { return isRecordSet ( metadata ) ; }
24927	private void push ( final ClassWriter cw , final String desc ) { int type = type ( cw , desc ) ; if ( type != _NUM ) { push ( type ) ; if ( type == LONG || type == DOUBLE ) { push ( TOP ) ; } } }
24930	public static String separatorsToWindows ( String path ) { if ( path == _NULL || path . indexOf ( UNIX_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( UNIX_SEPARATOR , WINDOWS_SEPARATOR ) ; }
24950	public boolean isProtected ( ) { return Modifier . isProtected ( this . getModifiers ( ) ) ; }
25006	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
25045	public boolean shippingApplies ( ) { GenericValue product = getProduct ( ) ; if ( product != _NULL ) { return ProductWorker . shippingApplies ( product ) ; } else { return _BOOL ; } }
25114	public static void stopLocalZkServer ( ) { try { stopLocalZkServer ( _BOOL ) ; } catch ( Exception e ) { LOGGER . error ( _CHAR Failed to stop ZK : _CHAR + e ) ; } }
25139	@ Override public void invalidate ( DictionaryColumnUniqueIdentifier dictionaryColumnUniqueIdentifier ) { carbonLRUCache . remove ( getLruCacheKey ( dictionaryColumnUniqueIdentifier . getColumnIdentifier ( ) . getColumnId ( ) , CacheType . REVERSE_DICTIONARY ) ) ; }
25144	@ Override public int [ ] makeInverseCumulativeTestValues ( ) { return new int [ ] { _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
25164	public void mouseReleased ( @ AndroidCoordinate int x , @ AndroidCoordinate int y ) { if ( myMouseInteraction != _NULL ) { myMouseInteraction . mouseReleased ( pxToDp ( x ) , pxToDp ( y ) ) ; } myConstraintModel . requestRender ( ) ; }
25187	@ Override public boolean hasField ( String fldName ) { return ts . hasField ( fldName ) || s . hasField ( fldName ) ; }
25190	public WallGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
25194	public Builder bitmapScale ( float bitmapScale ) { this . bitmapScale = bitmapScale ; return this ; }
25206	public SpaceTypeDescriptorBuilder supportsOptimisticLocking ( boolean supportsOptimisticLocking ) { this . _supportsOptimisticLocking = supportsOptimisticLocking ; return this ; }
25214	public static SM_SYSTEM_MESSAGE STR_SKILL_LEARNED_NEW_SKILL ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
25226	public boolean shouldCache ( ) { return this . shouldCache ; }
25249	private void validate ( int parameter , String parameterName ) throws BadPaginationException { if ( parameter < MINIMAL_VALUE ) { ErrorMessageFormat errorMessage = ErrorMessageFormat . PAGINATION_PARAMETER_INVALID ; LOG . debug ( errorMessage . logFormat ( parameterName , parameter ) ) ; throw new BadPaginationException ( errorMessage . format ( parameterName , parameter ) ) ; } }
25269	public RequestHandle post ( String url , ResponseHandlerInterface responseHandler ) { return post ( _NULL , url , _NULL , responseHandler ) ; }
25322	public final TestSubscriber < T > assertNonFuseableSource ( ) { if ( qs != _NULL ) { throw new AssertionError ( _CHAR Upstream was Fuseable _CHAR ) ; } return this ; }
25367	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_USE_ITEM_DURING_PATH_FLYING ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
25401	public void fail ( ) { screenshot ( ) ; this . testResult = new Fail ( ) ; }
25402	private static void requestToFireIntentAndFinish ( Activity activity ) { Log . e ( TAG , _CHAR Attempt to pass - through without completed FRE _CHAR ) ; FirstRunStatus . setFirstRunFlowComplete ( activity , _BOOL ) ; setFirstRunFlowSignInComplete ( activity , _BOOL ) ; setFirstRunFlowSignInAccountName ( activity , _NULL ) ; setFirstRunFlowSignInSetupSync ( activity , _BOOL ) ; activity . startActivity ( FirstRunFlowSequencer . createGenericFirstRunIntent ( activity , _BOOL ) ) ; }
25412	public void flip ( int x , int y ) { int offset = y * rowSize + ( x / _NUM ) ; bits [ offset ] ^= _NUM << ( x & _NUM ) ; }
25456	public void remove ( String name ) { featureMap . remove ( name ) ; }
25466	private void performHighlightDrag ( MotionEvent e ) { Highlight h = mChart . getHighlightByTouchPoint ( e . getX ( ) , e . getY ( ) ) ; if ( h != _NULL && ! h . equalTo ( mLastHighlighted ) ) { mLastHighlighted = h ; mChart . highlightValue ( h , _BOOL ) ; } }
25470	protected void captureResponseSize ( HttpContent httpContent ) { ByteBuf bufferedContent = httpContent . content ( ) ; int contentSize = bufferedContent . readableBytes ( ) ; responseBodySize . addAndGet ( contentSize ) ; }
25477	public BoardDeleteTopicQuery deleteTopic ( UserActor actor , int groupId , int topicId ) { return new BoardDeleteTopicQuery ( getClient ( ) , actor , groupId , topicId ) ; }
25488	public static SM_SYSTEM_MESSAGE STR_CMD_SHOUT_OUTPUT1_NPC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
25498	public static void writeProtoTextToFile ( File outputFile , Message proto ) throws IOException { try ( BufferedWriter outWriter = Files . newWriter ( outputFile , StandardCharsets . UTF_8 ) ) { TextFormat . print ( proto , outWriter ) ; } }
25586	private void addCachedLegion ( Legion legion ) { this . allCachedLegions . add ( legion ) ; }
25622	public String upload_file1 ( byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { String parts [ ] = this . upload_file ( file_buff , file_ext_name , meta_list ) ; if ( parts != _NULL ) { return parts [ _NUM ] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts [ _NUM ] ; } else { return _NULL ; } }
25667	public void updateBuildVersionFields ( ) { if ( apkAbsolutePath != _NULL ) { binary . initPath ( apkAbsolutePath ) ; } }
25689	public void clearIndicators ( ) { mWidgetMotion . getSnapCandidates ( ) . clear ( ) ; mWidgetMotion . getSimilarMargins ( ) . clear ( ) ; }
25706	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
25712	public Quaternion add ( final Quaternion q ) { return add ( this , q ) ; }
25713	public void disableDashedLine ( ) { mDashPathEffect = _NULL ; }
25725	@ Override public String toString ( ) { return MoreObjects . toStringHelper ( this ) . add ( _CHAR id _CHAR , getId ( ) ) . add ( _CHAR civility _CHAR , getCivility ( ) ) . add ( _CHAR firstName _CHAR , getFirstName ( ) ) . add ( _CHAR lastName _CHAR , getLastName ( ) ) . add ( _CHAR email _CHAR , getEmail ( ) ) . add ( _CHAR birthDate _CHAR , getBirthDate ( ) ) . add ( _CHAR birthDateTime _CHAR , getBirthDateTime ( ) ) . toString ( ) ; }
25729	private void writeLine ( char [ ] chars , int start , int len ) throws IOException { if ( beginningOfLine && len > _NUM ) { writeIndent ( ) ; beginningOfLine = _BOOL ; } writer . write ( chars , start , len ) ; }
25765	public static void println ( ) { out . println ( ) ; }
25768	@ Nullable public static Label createIfValid ( String label ) { if ( validate ( label ) ) { return new Label ( label ) ; } return _NULL ; }
25774	public static EqualsSpacePredicate equal ( Object value ) { return new EqualsSpacePredicate ( value ) ; }
25799	public boolean isFifoSearch ( ) { return _fifoTemplate && ( _uidToOperateBy == _NULL && ( _multipleUids == _NULL || _multipleUids . length == _NUM ) ) ; }
25825	public Expression startsWith ( Value str1 , Value str2 ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
25839	public void onTargetClick ( TapTargetView view ) { view . dismiss ( _BOOL ) ; }
25842	public void add ( long n ) { total . inc ( n ) ; }
25859	private boolean isSyncComplete ( JSONObject taskStatus , JSONObject taskDetails ) { try { if ( taskStatus . getBoolean ( _CHAR complete _CHAR ) ) { return _BOOL ; } if ( taskDetails . has ( _CHAR error _CHAR ) ) { throw new RuntimeException ( _CHAR Sync failed with error : _CHAR_CHAR_CHAR_CHAR_CHAR ! _CHAR ) ; } return _BOOL ; } catch ( JSONException e ) { throw new RuntimeException ( e ) ; } }
25864	public void drawScreen ( int par1 , int par2 , float par3 ) { if ( reinit ) { initGui ( ) ; reinit = _BOOL ; } this . guiList . drawScreen ( par1 , par2 , par3 ) ; super . drawScreen ( par1 , par2 , par3 , _BOOL ) ; }
25867	public static String encodeWebSafe ( byte [ ] source , boolean doPadding ) { return encode ( source , _NUM , source . length , WEBSAFE_ALPHABET , doPadding ) ; }
25872	public SparseGradient compose ( final double f0 , final double f1 ) { return new SparseGradient ( f0 , f1 , derivatives ) ; }
25881	@ Override public void commence ( HttpServletRequest request , HttpServletResponse response , AuthenticationException arg2 ) throws IOException , ServletException { log . debug ( _CHAR Pre - authenticated entry point called . Rejecting access _CHAR ) ; response . sendError ( HttpServletResponse . SC_UNAUTHORIZED , _CHAR Access Denied _CHAR ) ; }
25898	public boolean isBiasCorrected ( ) { return biasCorrected ; }
25899	private void launchNtp ( boolean incognito ) { if ( incognito && ! PrefServiceBridge . getInstance ( ) . isIncognitoModeEnabled ( ) ) return ; getTabCreator ( incognito ) . launchNTP ( ) ; }
25904	public MarketReorderAlbumsQuery before ( Integer value ) { return unsafeParam ( _CHAR before _CHAR , value ) ; }
25907	public final boolean isValid ( ) { State state = getConnection ( ) . getState ( ) ; boolean valid = validStates . contains ( state ) ; if ( ! valid ) { log . info ( this + _CHAR wont be processed cuz its valid state do n _CHAR_CHAR + state ) ; } return valid ; }
25916	public String constructFullClasspath ( ) { String cp = super . constructFullClasspath ( ) ; cp += File . pathSeparator + soot . options . Options . v ( ) . soot_classpath ( ) ; return cp ; }
25920	int indexOf ( Node child , Node parent ) { if ( child . getParentNode ( ) != parent ) return - _NUM ; int i = _NUM ; for ( Node node = parent . getFirstChild ( ) ; node != child ; node = node . getNextSibling ( ) ) { i ++ ; } return i ; }
25927	private String printEFormat ( double x ) { if ( conversionCharacter == _CHAR ) return eFormatString ( x , _CHAR ) ; else return eFormatString ( x , _CHAR ) ; }
25950	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
25983	public String [ ] upload_file ( String group_name , byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { return this . do_upload_file ( ProtoCommon . STORAGE_PROTO_CMD_UPLOAD_FILE , group_name , _NULL , _NULL , file_ext_name , file_buff . length , new UploadBuff ( file_buff , _NUM , file_buff . length ) , meta_list ) ; }
26000	public boolean isSSA ( ) { return isSSA ; }
26032	public boolean isFullyZoomedOut ( ) { return mViewPortHandler . isFullyZoomedOut ( ) ; }
26041	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
26050	public LeadsGetUsersQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
26076	public static Collection < String > validate ( Collection < Key < ? >> stages , Element element ) { StageValidator validator = new StageValidator ( stages ) ; validator . visit ( element ) ; return validator . errors ; }
26080	public String toString ( ) { return name ; }
26087	public void expandDataSource ( DataSource dataSource ) { expandNode ( getNode ( dataSource ) ) ; }
26096	public void addSourcePath ( PathPart pathPart ) { sourcePath . add ( pathPart ) ; pathPart . program = this ; }
26153	public int size ( ) { return mSize ; }
26164	public boolean hasNext ( ) { return ( iterator != _NULL ) ; }
26179	public boolean onEnterKeyPress ( View view ) { return showAppMenu ( view , _BOOL ) ; }
26218	public DatabaseGetFacultiesQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
26220	protected void requestUpdate ( ) { if ( mUpdateHost != _NULL ) { mUpdateHost . requestUpdate ( ) ; } }
26244	public static void startLocalZkServer ( ) { try { startLocalZkServer ( DEFAULT_ZK_TEST_PORT ) ; } catch ( Exception e ) { LOGGER . error ( _CHAR Failed to start ZK : _CHAR + e ) ; } }
26248	public static void launch ( Context context , int id ) { context . startActivity ( launchIntent ( context , id ) ) ; }
26269	public VideoSearchQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
26274	private void tryLoadData ( ) { if ( books . size ( ) != _NUM ) { onLoadBooksSuccess ( books ) ; } else if ( isSubscriptionInactive ( loadBookSubscription ) ) { getView ( ) . showLoading ( ) ; loadData ( ) ; } else { getView ( ) . showLoading ( ) ; } }
26292	public static UShort valueOf ( String value ) throws NumberFormatException { return new UShort ( value ) ; }
26304	public static UShort valueOf ( int value ) throws NumberFormatException { return new UShort ( value ) ; }
26328	public static Var map ( Relation relation ) { if ( isHasResourceRelation ( relation ) ) { return var ( ) ; } Var var = base ( relation ) ; var = roleplayers ( var , relation ) ; return var ; }
26370	private void sortBySelectedMode ( ) { switch ( sizeSelectBox . getSelectedIndex ( ) ) { case _NUM : sortDrawablesAZ ( ) ; break ; case _NUM : sortDrawablesZA ( ) ; break ; case _NUM : sortDrawablesOldest ( ) ; break ; case _NUM : sortDrawablesNewest ( ) ; break ; } }
26378	public boolean drawGroup ( @ NotNull Graphics2D gc , @ NotNull ScreenView screenView , @ NotNull NlComponent component ) { return _BOOL ; }
26398	public boolean isAvoidFirstLastClippingEnabled ( ) { return mAvoidFirstLastClipping ; }
26406	public static void pickImage ( Activity activity , int requestCode ) { try { activity . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( activity ) ; } }
26412	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSTATUS_SKILL_CAN_NOT_BE_TURNED_OFF_BY_TARGET ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26419	public final CharSequence yytext ( ) { return zzBuffer . subSequence ( zzStartRead , zzMarkedPos ) ; }
26423	public static SM_SYSTEM_MESSAGE STR_MSG_FORCE_MATCH_JUST_INVITE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26453	public static String generateRandomHexString ( int numChars ) { StringBuilder sb = new StringBuilder ( ) ; while ( sb . length ( ) < numChars ) { sb . append ( Integer . toHexString ( RANDOM . nextInt ( ) ) ) ; } return sb . toString ( ) . substring ( _NUM , numChars ) ; }
26456	public void disableDashedLine ( ) { mDashPathEffect = _NULL ; }
26499	public FaveGetPhotosQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
26523	public DateTimeFormatter generateDateTimeFormatter ( DateTimeZone timeZone ) { return FULLY_OPTIONAL_DATETIME_FORMATTER . withZone ( timeZone ) ; }
26594	void onRendererCrashed ( ) { if ( mRestoreStartedAtMillis != - _NUM ) { mRestoreStartedAtMillis =- _NUM ; } }
26616	@ RequestMapping ( value = _CHAR / { namespace } _CHAR , method = RequestMethod . DELETE ) public void deleteKeys ( @ PathVariable String namespace , HttpServletResponse response ) throws WebMessageException { userKeyJsonValueService . deleteNamespaceFromUser ( currentUserService . getCurrentUser ( ) , namespace ) ; messageService . sendJson ( WebMessageUtils . ok ( _CHAR All keys from namespace _CHAR_CHAR_CHAR deleted . '' ) , response ) ; }
26618	public String name ( ) { if ( this . record != _NULL ) { return this . record . name ( ) ; } else { return _NULL ; } }
26638	private LogRecordWithInputStream nextLogRecord ( ) throws IOException { return nextLogRecord ( reader ) ; }
26686	private void saveTouchStart ( MotionEvent event ) { mSavedMatrix . set ( mMatrix ) ; mTouchStartPoint . set ( event . getX ( ) , event . getY ( ) ) ; mClosestDataSetToTouch = mChart . getDataSetByTouchPoint ( event . getX ( ) , event . getY ( ) ) ; }
26689	public void reset ( ) { Iterator iIter = Arrays . asList ( getAvailableCategories ( ) ) . iterator ( ) ; while ( iIter . hasNext ( ) ) Repository . deleteObject ( ( String ) iIter . next ( ) , INSECTDB . CATEGORY_TYPE ) ; }
26698	public void toggleDividerVisibility ( boolean show ) { mStepDivider . setVisibility ( show ? VISIBLE : GONE ) ; }
26720	public DocsSaveQuery save ( Actor actor , String file ) { return new DocsSaveQuery ( getClient ( ) , actor , file ) ; }
26724	@ Override public void onRequestError ( int code , String message ) { progressDialog . cancel ( ) ; if ( code == ConnectAPI . COUPON_CODE ) { showMessage ( message ) ; } }
26730	public boolean isReachable ( ) { return method . isReachable ( ) ; }
26736	final public boolean has ( String name ) { return context != _NULL && context . containsKey ( name ) ; }
26768	public void releaseWriteLockOnKey ( K id ) { if ( id != _NULL ) { cache . releaseWriteLockOnKey ( id ) ; if ( LOGGER . isTraceEnabled ( ) ) { LOGGER . trace ( cache . getName ( ) + _CHAR Released WRITE lock for id = '' + String . valueOf ( id ) ) ; } } else { LOGGER . error ( _CHAR Trying to release write lock with a NULL key - throwing an exception ! _CHAR ) ; throw new IllegalArgumentException ( _CHAR Trying to release write lock with _NULL key ! _CHAR ) ; } }
26773	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HE_IS_ALREADY_MEMBER_OF_OTHER_ALLIANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26788	static public int makePosition ( int line , int column ) { return line << COLUMN_FIELD_BITS | column ; }
26811	private void saveProject ( ) { saveProject ( _BOOL ) ; }
26815	public Future < ? > scheduleRespawn ( ) { if ( ! getOwner ( ) . getSpawn ( ) . isNoRespawn ( ) ) { return RespawnService . scheduleRespawnTask ( getOwner ( ) ) ; } return _NULL ; }
26820	public static UByte ubyte ( short value ) throws NumberFormatException { return UByte . valueOf ( value ) ; }
26826	public static SM_SYSTEM_MESSAGE STR_PETITION_GM_LEAVE_MSG ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26862	public long blocksAccessed ( ) { return numBlks ; }
26878	private void afterFailedBulkExecution ( IReplicationInBatchContext context ) { if ( _operationStatisticsHandler != _NULL ) { MirrorOperationsImpl sourceChannelStatistics = ( MirrorOperationsImpl ) _operationStatisticsHandler . getSourceChannelStatistics ( context . getSourceLookupName ( ) ) ; List < BulkItem > bulk = context . getPendingContext ( ) ; sourceChannelStatistics . addFailedOperationCount ( bulk ) ; } }
26893	void offer ( T obj ) { _queue . put ( obj , obj ) ; }
26913	public void updateCloud ( int pointCount , FloatBuffer pointBuffer ) { calculateColors ( pointCount , pointBuffer ) ; updatePoints ( pointCount , pointBuffer , mColorArray ) ; }
26946	public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { return bean ; }
26970	public BeanMetricManager createBeanMetricManager ( String name ) { return metricRegistrator . extend ( name ) ; }
26976	private void writeDomainAssignment ( Document document , Element rootElement ) { Element domainAssignment = document . createElement ( _CHAR domainassignment _CHAR ) ; rootElement . appendChild ( domainAssignment ) ; for ( SourceSinkDomPair spec : this . document . getDomainAssignment ( ) ) writeSourceSinkDomPair ( spec , document , domainAssignment ) ; }
26997	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
27021	public synchronized void readLock ( ) { while ( activeWriter || waitingWriters != _NUM ) { try { wait ( ) ; } catch ( InterruptedException e ) { throw new ConcurrentLockException ( _CHAR read lock interrupted in thread _CHAR ) ; } } activeReaders ++ ; }
27046	public boolean isStatic ( ) { return Modifier . isStatic ( this . getModifiers ( ) ) ; }
27050	protected void propagate ( D sourceVal , N target , D targetVal , N relatedCallSite , boolean isUnbalancedReturn ) { propagate ( sourceVal , target , targetVal , relatedCallSite , isUnbalancedReturn , _BOOL ) ; }
27094	public float [ ] evaluate ( String inputFileName ) { JavaRDD < String > lines = jsc . textFile ( inputFileName ) ; DataFrame dataset = createDataFrame ( lines . collect ( ) ) ; return evaluate ( dataset ) ; }
27095	public void remoteResourceCreated ( ISVNRemoteFolder parent , String resourceName ) { for ( ISVNListener listener : repositoryListeners ) { listener . remoteResourceCreated ( parent , resourceName ) ; } }
27108	public boolean isPhantom ( ) { return isPhantom ; }
27115	@ ObjectiveCName ( _CHAR addEntry : index : _CHAR ) public List addEntry ( String entry , int index ) { java . util . List < String > entries = this . getEntries ( ) ; entries . add ( index , entry ) ; this . updateList ( entries ) ; return this ; }
27120	@ Nullable public static PsiNamedElement findInScope ( PsiElement element , String name ) { PsiNamedElement [ ] resultHolder = new PsiNamedElement [ _NUM ] ; Processor < BuildElement > processor = _NULL ; searchInScope ( element , processor ) ; return resultHolder [ _NUM ] ; }
27137	public boolean isXPath ( ) { return _BOOL ; }
27195	public boolean isClassSuperclassOf ( SootClass parent , SootClass possibleChild ) { parent . checkLevel ( SootClass . HIERARCHY ) ; possibleChild . checkLevel ( SootClass . HIERARCHY ) ; return getSubclassesOf ( parent ) . contains ( possibleChild ) ; }
27244	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSTATUS_SKILL_CAN_NOT_BE_TURNED_OFF_BY_CASTOR ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27251	private static File constructFilePaths ( String file1 , String file2 ) { File newPath ; if ( file2 . startsWith ( file1 ) ) { newPath = new File ( file2 ) ; } else { newPath = new File ( file1 + _CHAR / _CHAR + file2 ) ; } return newPath ; }
27269	public int storeByCondition ( Delegator delegator , ModelEntity modelEntity , Map < String , ? extends Object > fieldsToSet , EntityCondition condition ) throws GenericEntityException { if ( modelEntity == _NULL || condition == _NULL ) { return _NUM ; } return genericDAO . updateByCondition ( delegator , modelEntity , fieldsToSet , condition ) ; }
27282	private static boolean permissionExists ( String permission ) { Integer minVersion = MIN_SDK_PERMISSIONS . get ( permission ) ; return minVersion == _NULL || Build . VERSION . SDK_INT >= minVersion ; }
27296	public static String mapChineseMarksToAnsi ( String text ) { }
27315	private void tryStartingKbMode ( int keyCode ) { if ( keyCode == - _NUM || addKeyIfLegal ( keyCode ) ) { mInKbMode = _BOOL ; onValidationChanged ( _BOOL ) ; updateDisplay ( _BOOL ) ; mRadialTimePickerView . setInputEnabled ( _BOOL ) ; } }
27321	public static float swapFloat ( float value ) { return Float . intBitsToFloat ( swapInteger ( Float . floatToIntBits ( value ) ) ) ; }
27336	public boolean hasDataRecords ( ) { long blkNum = ( Long ) getVal ( OFFSET_TS_BLOCKID , BIGINT ) . asJavaVal ( ) ; return blkNum != NO_SLOT_BLOCKID ? _BOOL : _BOOL ; }
27343	@ Override public int read ( ) { return - _NUM ; }
27353	public void close ( ) { if ( blk != _NULL ) { tx . bufferMgr ( ) . unpin ( currentBuff ) ; blk = _NULL ; currentBuff = _NULL ; } }
27424	@ Override public boolean isEmpty ( ) { return mSize <= _NUM ; }
27482	public VideoReorderAlbumsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
27493	public static boolean isBypass ( final MultivaluedMap < String , String > headers ) { return BYPASS_HEADER_VALUE . equals ( headers . getFirst ( BYPASS_HEADER_NAME ) ) ; }
27502	public static String hexToStringNoException ( final String data ) { try { return ConversionUtils . arrayToString ( Hex . decodeHex ( data . toCharArray ( ) ) ) ; } catch ( DecoderException e ) { return _CHAR [ invalid hex ] _CHAR ; } }
27510	private Record emptyRecord ( Key key ) { return new RecordImpl ( key , Iterators . < Map . Entry < UUID , Compaction >> emptyIterator ( ) , Iterators . < Map . Entry < UUID , Change >> emptyIterator ( ) , Iterators . < RecordEntryRawMetadata > emptyIterator ( ) ) ; }
27511	private static Comparable < ? > castToComparable ( Object obj ) { try { return ( Comparable < ? > ) obj ; } catch ( ClassCastException cce ) { throw new IllegalArgumentException ( _CHAR Type _CHAR + obj . getClass ( ) + _CHAR does n _CHAR_CHAR_CHAR_CHAR , cce ) ; } }
27519	private static boolean isKDE ( ) { return System . getenv ( _CHAR KDE_SESSION_VERSION _CHAR ) != _NULL ; }
27529	public Iterator nodes ( ) { return m_nodeTuples . iterator ( nodeRows ( ) ) ; }
27540	protected void pluginInitialize ( ) { }
27546	public WallGetCommentsQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
27562	public static boolean identical ( ItemStack a , ItemStack b ) { if ( a == _NULL && b == _NULL ) { return _BOOL ; } else if ( a == _NULL || b == _NULL ) { return _BOOL ; } return couldMerge ( a , b ) ; }
27573	public boolean addSubEquipmentId ( final Long subEquipmentId ) { if ( subEquipmentId != _NULL && subEquipmentId > _NUM ) { return subEquipmentIds . add ( subEquipmentId ) ; } return _BOOL ; }
27605	public static ULong ulong ( BigInteger value ) throws NumberFormatException { return ULong . valueOf ( value ) ; }
27622	public Vector ortho ( ) { return new Vector ( - y , x ) ; }
27636	public PhotosReorderAlbumsQuery reorderAlbums ( UserActor actor , int albumId ) { return new PhotosReorderAlbumsQuery ( getClient ( ) , actor , albumId ) ; }
27642	@ Override public int hashCode ( ) { return this . id . hashCode ( ) ; }
27655	public void clear ( ) { m_nodeTuples . invalidateAll ( ) ; m_edgeTuples . invalidateAll ( ) ; super . clear ( ) ; m_links . clear ( ) ; }
27680	public static boolean canAffectBySkill ( Player player , VisibleObject target , Skill skill ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canAffectBySkill . ordinal ( ) ] ) { if ( ! restrictions . canAffectBySkill ( player , target , skill ) ) { return _BOOL ; } } return _BOOL ; }
27687	public static boolean stringIsContained ( String string1 , String string2 ) { return string1 . toLowerCase ( ) . replace ( _CHAR _CHAR , _CHAR _CHAR ) . replace ( _CHAR , _CHAR , _CHAR _CHAR ) . contains ( string2 . toLowerCase ( ) . replace ( _CHAR _CHAR , _CHAR _CHAR ) . replace ( _CHAR , _CHAR , _CHAR _CHAR ) ) ; }
27697	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Snare_END_A ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
27727	public void addAll ( List < String > stringValues ) { for ( String stringValue : stringValues ) { add ( stringValue ) ; } }
27746	public static int readLittleEndianInt ( DataInputStream dataStream ) throws IOException { int bits = _NUM ; for ( int shift = _NUM ; shift < _NUM ; shift += _NUM ) { int byteRead = ( _NUM & dataStream . readByte ( ) ) ; bits |= ( byteRead << shift ) ; } return bits ; }
27764	public Predicate selectPredicate ( Schema sch ) { Predicate result = new Predicate ( ) ; for ( Term t : terms ) if ( t . isApplicableTo ( sch ) ) result . terms . add ( t ) ; if ( result . terms . size ( ) == _NUM ) return _NULL ; else return result ; }
27790	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
27835	public void removeEventListener ( ZWaveEventListener eventListener ) { synchronized ( zwaveEventListeners ) { zwaveEventListeners . remove ( eventListener ) ; } }
27849	public boolean isTooLong ( ) { return fullNickname . length ( ) > MAX_NICKNAME_LENGTH ; }
27884	public static boolean isTestRun ( ) { return _CHAR _BOOL _CHAR . equals ( System . getProperty ( _CHAR org . hisp . dhis . test _CHAR , _CHAR _BOOL _CHAR ) ) ; }
27886	private static String formattedLocationFromGoogleResponse ( final JSONObject json ) { final JSONArray matches = json . optJSONArray ( GoogleKey . RESULTS ) ; String formattedLocation = _NULL ; if ( matches != _NULL && matches . length ( ) > _NUM ) { formattedLocation = matches . getJSONObject ( _NUM ) . optString ( GoogleKey . FORMATTED_ADDRESS ) ; } return formattedLocation ; }
27897	public long number ( ) { return blkNum ; }
27901	public < A > void publishEvents ( final EventTranslatorOneArg < T , A > eventTranslator , final A [ ] arg ) { ringBuffer . publishEvents ( eventTranslator , arg ) ; }
27905	public void drawScreen ( int mouseX , int mouseY , float partialTicks ) { super . drawScreen ( mouseX , mouseY , partialTicks ) ; this . oldMouseX = ( float ) mouseX ; this . oldMouseY = ( float ) mouseY ; }
27916	public void beginOperation ( ISVNClientAdapter aSvnClient , OperationProgressNotifyListener anOperationNotifyListener ) { this . operationNotifyListener = anOperationNotifyListener ; beginOperation ( aSvnClient ) ; }
27968	public final boolean isEmpty ( ) { return empty ; }
27972	protected BoardGetTopicsQueryWithExtended groupId ( int value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
28020	public Builder translationY ( float translationY ) { this . translationY = translationY ; return this ; }
28038	public static OcrHelper init ( String dataPath , int widthPixels , int heightPixels , String nidoFemale , String nidoMale , boolean isPokeSpamEnabled ) { if ( instance == _NULL ) { instance = new OcrHelper ( dataPath , widthPixels , heightPixels , nidoFemale , nidoMale , isPokeSpamEnabled ) ; } return instance ; }
28079	public void addAccount ( Fragment fragment , int result ) { fragment . startActivityForResult ( createAddAccountIntent ( ) , result ) ; }
28098	public boolean canContainKey ( Object key ) { if ( ! ( super . canContainKey ( key ) && key instanceof RemoteMethodControl ) ) { return _BOOL ; } return ConstrainableProxyUtil . equivalentConstraints ( ( ( RemoteMethodControl ) key ) . getConstraints ( ) , ( ( RemoteMethodControl ) server ) . getConstraints ( ) , methodMappings ) ; }
28106	public void mousePressed ( @ AndroidCoordinate int x , @ AndroidCoordinate int y ) { if ( myMouseInteraction != _NULL ) { myMouseInteraction . mousePressed ( pxToDp ( x ) , pxToDp ( y ) , _BOOL ) ; myMouseInteraction . setAutoConnect ( ConstraintModel . isAutoConnect ( ) ) ; } }
28131	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonSkillArea_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
28143	public static SM_SYSTEM_MESSAGE STR_UNION_ENTER_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28154	public void disableDashedHighlightLine ( ) { mHighlightDashPathEffect = _NULL ; }
28233	public RequestHandle put ( String url , ResponseHandlerInterface responseHandler ) { return put ( _NULL , url , _NULL , responseHandler ) ; }
28243	public static ExpectedCondition < Boolean > heightOfElementGreaterThan ( final WebElement element , final int expectedHeight ) { return _NULL ; }
28245	public final void log ( ) { if ( this . values != _NULL ) { for ( FilteredDataTagValue tagValue : values ) { tagValue . log ( ) ; } } }
28253	public void block ( ) { skype . block ( this ) ; }
28266	public static boolean isActionDown ( KeyEvent event ) { return event . getAction ( ) == KeyEvent . ACTION_DOWN ; }
28289	@ Override public int [ ] makeInverseCumulativeTestValues ( ) { return new int [ ] { _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; }
28291	public final void empty ( ) { synchronized ( buffer ) { buffer . clear ( ) ; bufferMap . clear ( ) ; } }
28293	public void clear ( ) { m_lucene = new LuceneSearcher ( ) ; super . clear ( ) ; }
28322	public void run ( ) { consumerObject . dispatch ( task ) ; }
28335	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
28345	@ SafeVarargs public static < T > Cons < T > fromArgs ( T ... elems ) { return fromArray ( elems ) ; }
28354	public void clearSounds ( ) { mSoundMap . clear ( ) ; }
28379	public boolean isElemhide ( ) { return isOptionEnabled ( UrlFilterRuleOption . ELEMHIDE ) ; }
28413	public MarketReorderItemsQuery after ( Integer value ) { return unsafeParam ( _CHAR after _CHAR , value ) ; }
28415	public static void initSPFactory ( ) { Class < ? > spFactoryCls = CoreProperties . getLoader ( ) . getPropertyAsClass ( VanillaDb . class . getName ( ) + _CHAR . SP_FACTORY _CHAR , SampleStoredProcedureFactory . class , StoredProcedureFactory . class ) ; if ( spFactoryCls != _NULL ) { try { spFactory = ( StoredProcedureFactory ) spFactoryCls . newInstance ( ) ; } catch ( InstantiationException | IllegalAccessException e ) { e . printStackTrace ( ) ; } } }
28467	private boolean shouldGrowTable ( ) { return size > ( mask + _NUM ) * LOAD_FACTOR ; }
28483	public void removeLocations ( Collection < PBLocation > locations ) { l_locations . removeAll ( locations ) ; if ( ! l_locations . isEmpty ( ) ) l_locations . get ( _NUM ) . setType ( StringConst . EMPTY ) ; }
28484	protected Set < D > computeCallFlowFunction ( FlowFunction < D > callFlowFunction , D d1 , D d2 ) { return callFlowFunction . computeTargets ( d2 ) ; }
28503	private void unsetBoundsAction ( ) { NullBounds bounds = new NullBounds ( ) ; synchronized ( Simulation . LOCK ) { this . simulation . getWorld ( ) . setBounds ( bounds ) ; } this . bounds . setUserObject ( bounds ) ; this . model . reload ( this . bounds ) ; }
28520	public static SM_SYSTEM_MESSAGE STR_UNION_LEAVE_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
28522	public Builder sumColumns ( String ... columns ) { return add ( ReduceOp . Sum , columns ) ; }
28536	public boolean hasEventEndDate ( ) { return eventEndDate != _NULL ; }
28542	public AemTextArea typeLine ( CharSequence text ) { return type ( text ) . typeNewLine ( ) ; }
28559	public static InSpacePredicate in ( Object ... values ) { return new InSpacePredicate ( values ) ; }
28608	public void afterOperationsBatchSynchronization ( OperationsBatchData batchData ) { }
28656	public static Tuple median ( Iterator tuples , String field ) { return median ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
28676	public void hideOverlappingContainer ( ) { mFrameLayoutOverlappingViewContainer . setVisibility ( GONE ) ; }
28679	public boolean isSuccess ( ) { return this . status != _NULL && this . status . equals ( ConfigConstants . Status . OK ) ; }
28689	public static int convertDPItoPixels ( Context context , int dpi ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpi * scale + _NUM . _NUM ) ; }
28691	public synchronized Vertex locateVertex ( String sVertexLabel ) { return ( Vertex ) UniqueVertices . get ( sVertexLabel ) ; }
28711	public void finish ( ) throws CarbonDataWriterException { if ( this . entryCount > _NUM ) { producerExecutorServiceTaskList . add ( producerExecutorService . submit ( new Producer ( blockletDataHolder , dataRows , ++ writerTaskSequenceCounter ) ) ) ; blockletProcessingCount . incrementAndGet ( ) ; processedDataCount += entryCount ; } closeWriterExecutionService ( producerExecutorService ) ; processWriteTaskSubmitList ( producerExecutorServiceTaskList ) ; processingComplete = _BOOL ; }
28736	@ Override public void onClick ( View v ) { int id = v . getId ( ) ; switch ( id ) { case R . id . email_login_button : login ( ) ; break ; case R . id . guest_login : guestLogin ( ) ; break ; case R . id . gplus_login_button : signInWithGPlus ( ) ; break ; default : break ; } }
28742	public static < T > boolean contains ( Iterator < T > iterator , T element ) { if ( iterator != _NULL ) { while ( iterator . hasNext ( ) ) { T candidate = iterator . next ( ) ; if ( ObjectUtils . nullSafeEquals ( candidate , element ) ) return _BOOL ; } } return _BOOL ; }
28757	public Builder shouldStartZK ( boolean startZK ) { this . _shouldStartZK = startZK ; return this ; }
28767	public RequestHandle post ( String url , ResponseHandlerInterface responseHandler ) { return post ( _NULL , url , _NULL , responseHandler ) ; }
28795	public void addEventListener ( ZWaveEventListener eventListener ) { synchronized ( zwaveEventListeners ) { if ( zwaveEventListeners . contains ( eventListener ) ) { logger . debug ( _CHAR Event Listener { } already registered _CHAR , eventListener ) ; return ; } zwaveEventListeners . add ( eventListener ) ; } }
28810	public final String yytext ( ) { return new String ( zzBuffer , zzStartRead , zzMarkedPos - zzStartRead ) ; }
28825	public boolean showAllSites ( ) { return CATEGORY_ALL_SITES . equals ( mCategory ) ; }
28839	public CursorIterator < T > iterate ( final Txn < T > txn ) { return iterate ( txn , _NULL , FORWARD ) ; }
28863	private final void raise ( IOException exception ) throws JMSException { JMSException error = new JMSException ( exception . toString ( ) ) ; error . setLinkedException ( exception ) ; throw error ; }
28912	private static boolean matches ( Pattern pattern , String input ) { Matcher m = pattern . matcher ( input ) ; return m . matches ( ) ; }
28954	public void visitPhpMethod ( Method method ) { final PhpLanguageLevel phpVersion = PhpProjectConfigurationFacade . getInstance ( holder . getProject ( ) ) . getLanguageLevel ( ) ; if ( phpVersion . hasFeature ( PhpLanguageFeature . SCALAR_TYPE_HINTS ) ) { return ; } this . checkParameters ( method . getParameters ( ) , method ) ; }
28957	public void add ( int dimension , float value ) { if ( this . map . containsKey ( dimension ) ) this . map . put ( dimension , this . map . get ( dimension ) + value ) ; else this . map . put ( dimension , value ) ; }
28958	public boolean hasActiveBody ( ) { return activeBody != _NULL ; }
28976	public static boolean expressionHasErrors ( String expression ) { final JEP parser = getJep ( ) ; parser . parseExpression ( expression ) ; return parser . hasError ( ) ; }
28994	@ Override public boolean accept ( File file ) { return file . canRead ( ) ; }
28999	public boolean removeChildEdge ( int edge ) { throw new UnsupportedOperationException ( _CHAR Changes to tree structure not allowed for spanning trees . '' ) ; }
29018	public static SM_SYSTEM_MESSAGE STR_MSG_EDIT_GUILD_NAME_SUCCESS ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29031	public static SM_SYSTEM_MESSAGE STR_MSG_DELETE_CASH_SOCIALACTION_BY_TIMEOUT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29043	public static SM_SYSTEM_MESSAGE STR_BINDSTONE_CAPACITY_LIMITTED_ALARM ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
29056	public boolean isLenient ( ) { return lenient ; }
29062	public static Document parseDocument ( Reader inputData ) throws ParserConfigurationException , SAXException , IOException { return parseDocument ( inputData , _BOOL ) ; }
29072	private void deleteConcept ( String id ) { try { getGraph ( ) . getConcept ( id ) . delete ( ) ; } catch ( ConceptException e ) { throw new RuntimeException ( e ) ; } }
29085	public boolean isPinchZoomEnabled ( ) { return mPinchZoomEnabled ; }
29087	public static SM_SYSTEM_MESSAGE STR_GATHER_OUT_OF_SKILL_POINT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29089	public List < T > toList ( ) { return Arrays . asList ( Arrays . copyOf ( elements , numElements ) ) ; }
29133	private void writeLine ( String str , int start , int len ) throws IOException { if ( beginningOfLine && len > _NUM ) { writeIndent ( ) ; beginningOfLine = _BOOL ; } writer . write ( str , start , len ) ; }
29162	public boolean haveSuggestions ( ) { return myCurrentLeftMatch != _NULL || myCurrentTopMatch != _NULL || myCurrentRightMatch != _NULL || myCurrentBottomMatch != _NULL ; }
29182	public Aggregation withFilter ( Filter filter ) { return new FilteredAggregation ( getName ( ) , getFieldName ( ) , getAggregation ( ) , filter ) ; }
29185	private void loadProxySettings ( ) { this . httpProxy = System . getenv ( this . httpEnv ) ; this . httpsProxy = System . getenv ( this . httpsEnv ) ; this . ftpProxy = System . getenv ( this . ftpEnv ) ; this . noProxy = System . getenv ( this . noProxyEnv ) ; }
29196	public boolean isAbstract ( ) { return Modifier . isAbstract ( this . getModifiers ( ) ) ; }
29208	public int size ( ) { return size ; }
29261	private void responseJson ( String jsonstr ) { this . setContentType ( Model . MIME_JSON ) ; this . print ( jsonstr ) ; }
29280	private boolean lollipopAndAbove ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ; }
29286	public static String mapCodeToSign ( short code ) { return extendedMatchCodeMapping [ code ] ; }
29301	public void afterTransactionSynchronization ( TransactionData transactionData ) { }
29306	public void close ( ) { if ( this . apk != _NULL ) this . apk . close ( ) ; }
29316	public static void o ( double [ ] a ) { o ( a , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
29335	public static Date parseDate ( final String dateValue , String [ ] dateFormats ) throws DateParseException { return parseDate ( dateValue , dateFormats , _NULL ) ; }
29351	public void onEnterZone ( ZoneInstance zoneInstance ) { }
29387	public static SM_SYSTEM_MESSAGE STR_DUEL_REQUESTER_WITHDRAW_REQUEST ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29395	public XtnEntry attachToXtn ( ServerTransaction txn , boolean fromReplication ) throws TransactionException , RemoteException { return _transactionHandler . attachToXtnGranular ( txn , fromReplication ) ; }
29408	public void changeCenterButtonIcon ( int icon ) { if ( fab == _NULL ) { Log . e ( TAG , _CHAR You should call setCentreButtonIcon ( ) instead , _CHAR + _CHAR changeCenterButtonIcon works if space navigation already set up '' ) ; } else { fab . setImageResource ( icon ) ; centreButtonIcon = icon ; } }
29420	public double sum ( ) { double result = _NUM ; for ( double [ ] dArr : A ) for ( double d : dArr ) result += d ; return result ; }
29427	private BSPTree < Sphere1D > childAfter ( BSPTree < Sphere1D > node ) { if ( isDirect ( node ) ) { return node . getPlus ( ) ; } else { return node . getMinus ( ) ; } }
29448	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_COMPLETE_ROUND_IDARENA ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29475	public final CharSequence yytext ( ) { return zzBuffer . subSequence ( zzStartRead , zzMarkedPos ) ; }
29482	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonSkillArea_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
29493	public static SM_SYSTEM_MESSAGE STR_FORCE_INVITE_ME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29497	private boolean isBetween ( double value , double boundary1 , double boundary2 ) { return ( value >= boundary1 && value <= boundary2 ) || ( value >= boundary2 && value <= boundary1 ) ; }
29506	public boolean IsOptSet ( int inOptNum ) { if ( this . optionsList == _NULL ) { initialize ( ) ; } return this . optionsList . contains ( ( byte ) inOptNum ) ; }
29510	public static IVScanResult createIVScanResult ( Pokemon pokemon , double estimatedPokemonLevel , int pokemonCP , boolean b ) { IVScanResult res = new IVScanResult ( pokemon , estimatedPokemonLevel , pokemonCP , b ) ; scanContainer . addNewScan ( res ) ; return res ; }
29530	public static boolean isMap ( NewBindingKey key ) { TypeName typeName = key . getTypeName ( ) ; if ( ! ( typeName instanceof ParameterizedTypeName ) ) { return _BOOL ; } ParameterizedTypeName parameterizedTypeName = ( ParameterizedTypeName ) typeName ; return parameterizedTypeName . rawType . equals ( ClassName . get ( Map . class ) ) ; }
29549	public static SM_SYSTEM_MESSAGE STR_SOUL_BOUND_INVALID_STANCE ( int value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( value0 ) ) ; }
29620	public void add ( FieldIdEnum fieldId , FieldConfigBase fieldConfig ) { Map < FieldIdEnum , FieldConfigBase > panelMap = fieldConfigMap . get ( panelId ) ; if ( panelMap == _NULL ) { panelMap = new HashMap < FieldIdEnum , FieldConfigBase > ( ) ; } panelMap . put ( fieldId , fieldConfig ) ; }
29664	public WallEditQuery placeId ( Integer value ) { return unsafeParam ( _CHAR place_id _CHAR , value ) ; }
29669	private BSPTree < Sphere1D > childBefore ( BSPTree < Sphere1D > node ) { if ( isDirect ( node ) ) { return node . getMinus ( ) ; } else { return node . getPlus ( ) ; } }
29678	public Pair < String , String > next ( String firstWordInHeader ) { while ( hasNext ( ) ) { Pair < String , String > pair = next ( ) ; if ( Basic . getFirstWord ( Basic . swallowLeadingGreaterSign ( pair . get1 ( ) ) ) . equals ( firstWordInHeader ) ) return pair ; } return _NULL ; }
29683	public FriendsGetOnlineQueryWithMobile offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
29692	public MarketGetCommentsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
29695	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getFileModelDao ( ) : _NULL ; }
29704	public int size ( ) { return size ; }
29775	public boolean addAbyssSkill ( Player player , int skillId , int skillLevel ) { return addSkill ( player , skillId , skillLevel , _BOOL , _BOOL , PersistentState . NOACTION ) ; }
29782	public void addChangeListener ( ChangeListener cl ) { if ( ! m_listeners . contains ( cl ) ) m_listeners . add ( cl ) ; }
29789	public boolean useAuthor ( String userId ) { switch ( mode ) { case PASS_THRU : return _BOOL ; case USE_DEFAULT : return _BOOL ; case WHITELIST : return whitelist . contains ( userId ) ; default : throw new IllegalStateException ( String . format ( _CHAR Mode _CHAR not implemented . '' , mode ) ) ; } }
29807	public void updateLastLogin ( ) { this . lastLogin = new Date ( ) ; }
29832	private void saveInstantUploadVideoPathOnPreferences ( ) { SharedPreferences appPrefs = PreferenceManager . getDefaultSharedPreferences ( getApplicationContext ( ) ) ; SharedPreferences . Editor editor = appPrefs . edit ( ) ; editor . putString ( _CHAR instant_video_upload_path _CHAR , mUploadVideoPath ) ; editor . commit ( ) ; }
29882	public void recordOpenedNTP ( ) { setFirstAction ( OPENED_NTP ) ; }
29887	public static Tuple median ( TupleSet tuples , String field ) { return median ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
29938	public NotesGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
29953	public static boolean isReservedStreamName ( String name ) { return name . startsWith ( _CHAR . _CHAR ) ; }
29958	public GiftsGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
29963	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_HOSTILE_ATTACK ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
29971	private void initializeValues ( ) { IPreferenceStore store = getPreferenceStore ( ) ; int iconSet = store . getInt ( ISVNUIConstants . PREF_MENU_ICON_SET ) ; useTortoiseSVN . setSelection ( ISVNUIConstants . MENU_ICON_SET_TORTOISESVN == iconSet ) ; useDefault . setSelection ( ISVNUIConstants . MENU_ICON_SET_DEFAULT == iconSet ) ; useSubversive . setSelection ( ISVNUIConstants . MENU_ICON_SET_SUBVERSIVE == iconSet ) ; }
29982	@ ExceptionHandler ( DataAccessException . class ) @ ResponseStatus ( value = HttpStatus . INTERNAL_SERVER_ERROR ) public @ ResponseBody ErrorResponse resolveDataAccessException ( DataAccessException e ) throws IOException { if ( logger . isLoggable ( Level . WARNING ) ) logger . log ( Level . WARNING , _CHAR received DataAccessException exception _CHAR , e ) ; return new ErrorResponse ( new ExceptionMessage ( e ) ) ; }
30131	public boolean shouldContinue ( ) { return ! hasErrors ( ) && ! isCancelled ( ) ; }
30134	static AnyVal < Void > anyNone ( ) { return new AnyOptional < > ( _NULL , _NULL ) ; }
30185	public final CharSequence yytext ( ) { return zzBuffer . subSequence ( zzStartRead , zzMarkedPos ) ; }
30189	public GroupsEditQuery website ( String value ) { return unsafeParam ( _CHAR website _CHAR , value ) ; }
30197	private BSPTree < Sphere1D > leafBefore ( BSPTree < Sphere1D > node ) { node = childBefore ( node ) ; while ( node . getCut ( ) != _NULL ) { node = childAfter ( node ) ; } return node ; }
30217	public void onFullScreenButtonListener ( OnClickListener listener ) { playerControlsWrapper . setOnFullScreenButtonListener ( listener ) ; }
30224	public RequestHandle put ( String url , ResponseHandlerInterface responseHandler ) { return put ( _NULL , url , _NULL , responseHandler ) ; }
30225	public CreatePageWindow selectTemplate ( String exactTemplateName ) { WebElement template = currentWindow . findElement ( By . xpath ( _CHAR .// div [ contains ( @ class , '' + '' ' template - title ' ) and text ( ) = \ '' '' + exactTemplateName + '' \ '' ] '' ) ) ; template . click ( ) ; return this ; }
30251	public Object opt ( int index ) { return ( index < _NUM || index >= this . length ( ) ) ? _NULL : this . myArrayList . get ( index ) ; }
30270	@ Override public void endValueScopeFor ( IdentityConstraint identityConstraint , int initialDepth ) { ValueStoreBase valueStore = fValueStoreCache . getValueStoreFor ( identityConstraint , initialDepth ) ; valueStore . endValueScope ( ) ; }
30283	protected Granularity generateGranularity ( String granularity , GranularityParser granularityParser ) throws BadApiRequestException { try { return granularityParser . parseGranularity ( granularity ) ; } catch ( GranularityParseException e ) { LOG . error ( UNKNOWN_GRANULARITY . logFormat ( granularity ) , granularity ) ; throw new BadApiRequestException ( e . getMessage ( ) ) ; } }
30300	private void stopStateTag ( final Long stateTagId , final Timestamp pTimestamp , final String message ) { controlTagFacade . updateAndValidate ( stateTagId , SupervisionStatus . DOWN . toString ( ) , message , pTimestamp ) ; }
30394	@ ObjectiveCName ( _CHAR removeEntry : _CHAR ) public List removeEntry ( String entry ) { Collection entries = this . getEntries ( ) ; while ( entries . contains ( entry ) ) entries . remove ( entry ) ; this . updateList ( entries ) ; return this ; }
30406	public UsersGetSubscriptionsQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
30482	public boolean isLeaf ( ) { return this . left == _NULL ; }
30485	public static String separatorsToWindows ( String path ) { if ( path == _NULL || path . indexOf ( UNIX_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( UNIX_SEPARATOR , WINDOWS_SEPARATOR ) ; }
30510	@ Override public boolean contains ( String identifier ) { return blacklist . contains ( identifier ) ; }
30519	public synchronized void writeUnlock ( ) { activeWriter = _BOOL ; notifyAll ( ) ; }
30535	private boolean firstParamIsSelf ( TypeElement classElement , SkylarkModule skyModule , DeclaredType objectType ) { return ! skyModule . namespace ( ) && objectType . toString ( ) . equals ( classElement . toString ( ) ) ; }
30538	@ Override public int read ( ) { return - _NUM ; }
30549	public int length ( ) { return nameValuePairs . size ( ) ; }
30602	public static GenericEntity createGenericEntity ( GenericEntity value ) { if ( value == _NULL ) { throw new IllegalArgumentException ( _CHAR Can not create a GenericEntity with a _NULL value parameter _CHAR ) ; } GenericEntity newEntity = new GenericEntity ( ) ; newEntity . init ( value ) ; return newEntity ; }
30648	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getUserInfoDao ( ) : _NULL ; }
30667	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Hide_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
30700	public boolean hasUserAuthorityGroups ( ) { return userAuthorityGroups != _NULL && ! userAuthorityGroups . isEmpty ( ) ; }
30743	public void initialize ( ) { for ( TabModel model : mTabModelSelector . getModels ( ) ) model . addObserver ( mTabModelObserver ) ; mTabModelSelector . addObserver ( mTabModelSelectorObserver ) ; }
30766	public void addCategoriesListener ( SnapshotCategoriesListener listener ) { listeners . add ( listener ) ; }
30769	public void teardown ( ) { logger . info ( _CHAR Tearing down ... _CHAR ) ; jssc . stop ( ) ; logger . info ( _CHAR Tear down complete _CHAR ) ; }
30778	@ Override public boolean contains ( String identifier ) { return whitelist . contains ( identifier ) ; }
30784	public NotesGetCommentsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
30821	@ SuppressWarnings ( { _CHAR checkstyle : cyclomaticcomplexity _CHAR , _CHAR checkstyle : javadocstyle _CHAR , _CHAR checkstyle : javadocmethod _CHAR } ) public Object parseText ( String text ) { if ( text == _NULL || text . length ( ) == _NUM ) { throw new IllegalArgumentException ( _CHAR The JSON input text should neither be _NULL nor empty . '' ) ; } return parse ( new LineColumnReader ( new StringReader ( text ) ) ) ; }
30826	public boolean isDown ( ) { if ( mLocalPath != _NULL && mLocalPath . length ( ) > _NUM ) { File file = new File ( mLocalPath ) ; return ( file . exists ( ) ) ; } return _BOOL ; }
30883	public static short swapShort ( short value ) { return ( short ) ( ( ( ( value >> _NUM ) & _NUM ) << _NUM ) + ( ( ( value >> _NUM ) & _NUM ) << _NUM ) ) ; }
30884	private static Scope buildScope ( ) { return Scope . build ( Scope . R_BASICPROFILE , Scope . R_EMAILADDRESS ) ; }
30889	public static GreaterEqualsSpacePredicate greaterEqual ( Comparable < ? > value ) { return new GreaterEqualsSpacePredicate ( value ) ; }
30892	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
30899	private static void write ( GigaSpace space , Phrase phrase ) { LeaseContext < Phrase > context = space . write ( phrase ) ; if ( context . getVersion ( ) == _NUM ) { System . out . println ( _CHAR write - _CHAR + phrase ) ; } else { System . out . println ( _CHAR update - _CHAR + phrase ) ; } }
30906	public SiteAdminActionBar clickOnButton ( SiteAdminButtons button ) { getButton ( button ) . click ( ) ; return this ; }
30907	public static boolean interfaceOf ( Class < ? > objectClass , Class < ? > interfaceClass ) { while ( objectClass != _NULL ) { Class < ? > [ ] ifaces = objectClass . getInterfaces ( ) ; for ( Class < ? > iface : ifaces ) { if ( iface == interfaceClass ) return _BOOL ; } objectClass = objectClass . getSuperclass ( ) ; } return _BOOL ; }
30927	public static EntityQuery use ( Delegator delegator ) { return new EntityQuery ( delegator ) ; }
30928	@ Override @ PostConstruct public void init ( ) throws IDBPersistenceException { super . init ( ) ; }
30946	public void addBrowserInfo ( ) { Capabilities caps = ( ( HasCapabilities ) webDriver ) . getCapabilities ( ) ; browserInfoEntry = new BrowserInfoEntry ( caps ) ; }
30947	public static UShort ushort ( int value ) throws NumberFormatException { return UShort . valueOf ( value ) ; }
30953	static void writeShort ( final byte [ ] b , final int index , final int s ) { b [ index ] = ( byte ) ( s >> > _NUM ) ; b [ index + _NUM ] = ( byte ) s ; }
30966	@ SuppressWarnings ( _CHAR UnusedParameters _CHAR ) void onStart ( @ Nullable Module module , @ Nullable VirtualFile workingDir , @ NotNull String ... args ) { }
30972	protected void clearError ( ) { synchronized ( lock ) { mIoError = _BOOL ; } }
30995	public void cancel ( OCUpload storedUpload ) { cancel ( storedUpload . getAccountName ( ) , storedUpload . getRemotePath ( ) ) ; }
31015	public boolean moveStream ( final String streamName ) { try { doMoveStream ( streamName ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
31019	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonSkillArea_ME_TO_B ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
31034	public static int gray ( int v ) { return rgba ( v , v , v , _NUM ) ; }
31042	public static Tuple max ( TupleSet tuples , String field ) { return max ( tuples , field , DefaultLiteralComparator . getInstance ( ) ) ; }
31048	public static Element firstChildElement ( Element element , String ... childElementNames ) { return firstChildElement ( element , UtilMisc . toSetArray ( childElementNames ) ) ; }
31052	public boolean rightAllowed ( ) { return ( myFlags & RIGHT_EDGE ) != _NUM ; }
31063	public static final String repeatString ( String sStr , int iTimes ) { StringBuffer sb = new StringBuffer ( ) ; for ( int iCnt = _NUM ; iCnt < iTimes ; iCnt ++ ) sb . append ( sStr ) ; return sb . toString ( ) ; }
31094	private void handleSelection ( String selection , SelectionType type ) { mShouldHandleSelectionModification = _BOOL ; mHandler . handleSelection ( selection , isValidSelection ( selection ) , type , mX , mY ) ; }
31114	public static boolean isConnectedMobile ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_MOBILE ) ; }
31141	public final void ensureValid ( JobTrigger trigger ) { ensureNoErrors ( validate ( trigger ) ) ; }
31144	public static SM_SYSTEM_MESSAGE STR_MSG_LIMIT_SALE_EPIC_SHOP_MATERIAL_DESC01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31152	public static SM_SYSTEM_MESSAGE STR_SKILL_DODGED_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
31156	public static void closeQuietly ( LineIterator iterator ) { if ( iterator != _NULL ) { iterator . close ( ) ; } }
31168	public boolean taxApplies ( ) { GenericValue product = getProduct ( ) ; if ( product != _NULL ) { return ProductWorker . taxApplies ( product ) ; } else { return _BOOL ; } }
31178	public void reset ( ) { removeAllNotifications ( ) ; setWakeupTime ( sleepTime ) ; }
31182	@ NonNull static String createUniqueFilename ( String prefix ) { String randomId = Long . toString ( System . currentTimeMillis ( ) ) ; return String . format ( Locale . US , FILE_NAME_TEMPLATE , prefix , randomId ) ; }
31195	public final boolean isEmpty ( ) { return s . isEmpty ( ) ; }
31198	public void put ( int b ) throws IOException { buffer . write ( b ) ; }
31251	public void flip ( int x , int y ) { int offset = y * rowSize + ( x / _NUM ) ; bits [ offset ] ^= _NUM << ( x & _NUM ) ; }
31280	public static ULong ulong ( String value ) throws NumberFormatException { return value == _NULL ? _NULL : ULong . valueOf ( value ) ; }
31290	public DocsSearchQuery search ( UserActor actor , String q ) { return new DocsSearchQuery ( getClient ( ) , actor , q ) ; }
31339	protected String resolveExternalSystem ( String systemId , String resolver ) throws IOException { Resolver r = queryResolver ( resolver , _CHAR i2l _CHAR , systemId , _NULL ) ; if ( r != _NULL ) { return r . resolveSystem ( systemId ) ; } else { return _NULL ; } }
31340	public static boolean interfaceOf ( Object obj , Class < ? > interfaceClass ) { Class < ? > objectClass = obj . getClass ( ) ; return interfaceOf ( objectClass , interfaceClass ) ; }
31370	private void handleStaticInitializerBlocks ( soot . SootMethod sootMethod ) { ArrayList < Block > staticInitializerBlocks = ( ( soot . javaToJimple . PolyglotMethodSource ) sootMethod . getSource ( ) ) . getStaticInitializerBlocks ( ) ; if ( staticInitializerBlocks != _NULL ) { Iterator < Block > staticInitBlocksIt = staticInitializerBlocks . iterator ( ) ; while ( staticInitBlocksIt . hasNext ( ) ) { createBlock ( staticInitBlocksIt . next ( ) ) ; } } }
31403	public static boolean isProjectStyle ( @ NotNull String styleResourceUrl ) { return ! styleResourceUrl . startsWith ( ANDROID_STYLE_RESOURCE_PREFIX ) ; }
31411	public static boolean interfaceOf ( Class < ? > objectClass , Object interfaceObject ) { Class < ? > interfaceClass = interfaceObject . getClass ( ) ; return interfaceOf ( objectClass , interfaceClass ) ; }
31440	@ Override public void onPrepared ( MediaPlayer mp ) { player . start ( ) ; }
31453	public void addColumnListener ( ColumnListener listener ) { m_listeners . add ( listener ) ; }
31464	public VideoGetCommentsQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
31469	@ Override public void close ( ) { if ( rf != _NULL ) rf . close ( ) ; }
31476	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_NONE_REPEATABLE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31490	public VideoGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
31501	public boolean isFullyZoomedOut ( ) { return ( isFullyZoomedOutX ( ) && isFullyZoomedOutY ( ) ) ; }
31544	public boolean isFinal ( ) { return Modifier . isFinal ( this . getModifiers ( ) ) ; }
31599	private static String timeOfDay ( int hour , int min ) { int hh = hour ; if ( min > _NUM ) hh ++ ; if ( hh == _NUM ) { return _CHAR _CHAR ; } else if ( hh > _NUM ) { return _CHAR in the evening _CHAR ; } else if ( hh > _NUM ) { return _CHAR in the afternoon _CHAR ; } else { return _CHAR in the morning _CHAR ; } }
31629	public void reset ( ) { fromIndex = _NUM ; toIndex = _NUM ; }
31636	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
31647	private EmoResponse toEmoResponse ( ClientResponse clientResponse ) { return new JerseyEmoResponse ( clientResponse ) ; }
31652	private boolean quietSleep ( long ms ) { try { Thread . sleep ( ms ) ; } catch ( InterruptedException e ) { return _BOOL ; } return _BOOL ; }
31661	private void showColorSelectDialog ( ) { new ColorSelectDialog . Builder ( getContext ( ) ) . setColors ( ColorPalettes . loadMaterialDesignColors500 ( getContext ( ) , _BOOL ) ) . setTitle ( R . string . selectiondialogs_color_dialog_title ) . setSortColorsByName ( _BOOL ) . setOnColorSelectedListener ( this ) . build ( ) . show ( getFragmentManager ( ) , TAG_SELECT_COLOR_DIALOG ) ; }
31663	@ Override public String toString ( ) { StringTable stringTable = StringTable . getCurrent ( ) ; if ( stringTable != _NULL ) { Node node = stringTable . get ( myIdentifier ) ; if ( node != _NULL ) { return node . getString ( myArguments ) ; } } return myIdentifier + _CHAR _CHAR + myArguments ; }
31670	public int error_sym ( ) { return _NUM ; }
31688	public static boolean isEmpty ( CharSequence str ) { if ( str == _NULL || str . toString ( ) == _NULL || str . toString ( ) . trim ( ) . length ( ) == _NUM || str . length ( ) == _NUM || _CHAR _NULL _CHAR . equalsIgnoreCase ( str . toString ( ) ) ) { return _BOOL ; } else { } return _BOOL ; }
31718	public static DmnEngineInfo retry ( String resourceUrl ) { log . debug ( _CHAR retying initializing of resource { } _CHAR , resourceUrl ) ; try { return initDmnEngineFromResource ( new URL ( resourceUrl ) ) ; } catch ( MalformedURLException e ) { throw new ActivitiDmnException ( _CHAR invalid url : _CHAR + resourceUrl , e ) ; } }
31754	public int size ( ) { return cartLines . size ( ) ; }
31763	private double computeReferenceAngle ( ) { double r1 = ( ( SandboxBody ) this . cmbBody1 . getSelectedItem ( ) ) . getTransform ( ) . getRotation ( ) ; double r2 = ( ( SandboxBody ) this . cmbBody2 . getSelectedItem ( ) ) . getTransform ( ) . getRotation ( ) ; return r1 - r2 ; }
31777	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoFly_END_A_TO_B ( String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget ) ; }
31782	@ Nullable E tryReceive ( ) { int start = startIndex ( ) ; E e = scanAndMatch ( start ) ; return ( e == _NULL ) ? awaitMatch ( start ) : e ; }
31792	public static FileDescriptorSet generate ( Service normalizedService ) { DescriptorGenerator generator = new DescriptorGenerator ( ) ; generator . analyzeService ( normalizedService ) ; return generator . generate ( ) ; }
31797	public String toStringMultiLine ( ) { return toStringMultiLine ( _BOOL ) ; }
31816	protected void paintBufferToScreen ( Graphics g ) { synchronized ( this ) { g . drawImage ( m_offscreen , _NUM , _NUM , _NULL ) ; } }
31831	protected double adjust ( double v ) { switch ( m_scale ) { case Constants . LOG_SCALE : return Math . pow ( _NUM , v ) ; case Constants . SQRT_SCALE : return v * v ; case Constants . LINEAR_SCALE : default : return v ; } }
31835	public void addClassPath ( PathPart pathPart ) { classPath . add ( pathPart ) ; pathPart . program = this ; }
31838	public static SM_SYSTEM_MESSAGE STR_FORCE_CHECK_REQUEST ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
31843	public void previous ( ) { goToPage ( getRowCount ( ) , getCurrentPage ( ) - _NUM ) ; }
31858	public boolean isSynchronized ( ) { return Modifier . isSynchronized ( this . getModifiers ( ) ) ; }
31900	public static Bitmap rotateImage ( Bitmap source , float angle ) { Bitmap retVal ; Matrix matrix = new Matrix ( ) ; matrix . postRotate ( angle ) ; retVal = Bitmap . createBitmap ( source , _NUM , _NUM , source . getWidth ( ) , source . getHeight ( ) , matrix , _BOOL ) ; return retVal ; }
31908	public int addSeries ( Color color ) { int i = this . series . size ( ) ; this . series . add ( new Series ( color ) ) ; return i ; }
31924	public static ContextSet fromEntries ( Iterable < Map . Entry < String , String >> iterable ) { if ( iterable == _NULL ) { throw new NullPointerException ( _CHAR iterable _CHAR ) ; } MutableContextSet set = new MutableContextSet ( ) ; set . addAll ( iterable ) ; return set . immutableCopy ( ) ; }
31928	public QueueReader < E > reader ( ) { return new QueueReader < E > ( ( E [ ] ) q , index ) ; }
31986	@ Override public double [ ] makeInverseCumulativeTestValues ( ) { double [ ] points = makeCumulativeTestPoints ( ) ; double [ ] points2 = new double [ points . length - _NUM ] ; System . arraycopy ( points , _NUM , points2 , _NUM , points2 . length - _NUM ) ; return points2 ; }
31992	public int logout ( ) { return Helper . update ( getId ( ) , V . create ( _CHAR sid _CHAR , X . EMPTY ) . set ( _CHAR updated _CHAR , System . currentTimeMillis ( ) ) , User . class ) ; }
32025	public boolean isXPath ( ) { return _BOOL ; }
32033	public static MetricColumn addNewMetricColumn ( Schema schema , String name ) { MetricColumn col = new MetricColumn ( name ) ; schema . addColumn ( col ) ; return col ; }
32042	public FriendsGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
32053	public MarketSearchQuery priceTo ( Integer value ) { return unsafeParam ( _CHAR price_to _CHAR , value ) ; }
32078	public static SM_SYSTEM_MESSAGE STR_FORCE_ALREADY_OTHER_FORCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32106	public void onStackAnimationStarted ( ) { if ( mStackAnimationCount == _NUM ) super . onAnimationStarted ( ) ; mStackAnimationCount ++ ; }
32122	private void updateButtonState ( GeometryTypeEnum geometryType ) { boolean applyTransformEnabled = _BOOL ; switch ( geometryType ) { case POINT : case LINE : case POLYGON : applyTransformEnabled = _BOOL ; break ; case RASTER : break ; default : break ; } if ( applyTransformationCheckBox != _NULL ) { applyTransformationCheckBox . setEnabled ( applyTransformEnabled ) ; } }
32171	public int error_sym ( ) { return _NUM ; }
32197	public double maxValue ( ) { Iterator iIter = asTreeMap ( ) . values ( ) . iterator ( ) ; Double dMax = Double . NEGATIVE_INFINITY ; while ( iIter . hasNext ( ) ) { Double dVal = ( Double ) iIter . next ( ) ; dMax = ( dVal > dMax ) ? dVal : dMax ; } return dMax ; }
32216	public SpaceTypeDescriptorBuilder supportsDynamicProperties ( boolean supportsDynamicProperties ) { this . _supportsDynamicProperties = supportsDynamicProperties ; return this ; }
32297	private BSPTree < Sphere1D > leafAfter ( BSPTree < Sphere1D > node ) { node = childAfter ( node ) ; while ( node . getCut ( ) != _NULL ) { node = childBefore ( node ) ; } return node ; }
32307	public DerivativeStructure compose ( final double ... f ) throws MathIllegalArgumentException { MathUtils . checkDimension ( f . length , getOrder ( ) + _NUM ) ; final DerivativeStructure result = new DerivativeStructure ( compiler ) ; compiler . compose ( data , _NUM , f , result . data , _NUM ) ; return result ; }
32392	public Iterator iterator ( IntIterator rows ) { return new TupleManagerIterator ( this , rows ) ; }
32397	public boolean leftAllowed ( ) { return ( myFlags & LEFT_EDGE ) != _NUM ; }
32404	public DocsGetQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
32408	public double [ ] toArray ( ) { return new double [ ] { x , y } ; }
32420	public static MonsterStatusFragment newInstance ( long monsterId ) { Bundle args = new Bundle ( ) ; args . putLong ( ARG_MONSTER_ID , monsterId ) ; MonsterStatusFragment f = new MonsterStatusFragment ( ) ; f . setArguments ( args ) ; return f ; }
32430	@ Override public Iterator iterator ( ) { return new EntryIterator ( set . iterator ( ) ) ; }
32443	public double minValue ( ) { Iterator iIter = asTreeMap ( ) . values ( ) . iterator ( ) ; Double dMin = Double . POSITIVE_INFINITY ; while ( iIter . hasNext ( ) ) { Double dVal = ( Double ) iIter . next ( ) ; dMin = ( dVal < dMin ) ? dVal : dMin ; } return dMin ; }
32491	public static double swapDouble ( double value ) { return Double . longBitsToDouble ( swapLong ( Double . doubleToLongBits ( value ) ) ) ; }
32500	public int store ( GenericValue value ) throws GenericEntityException { if ( value == _NULL ) { return _NUM ; } return genericDAO . update ( value ) ; }
32545	private static void sendPatch ( StatefulService service , Object body ) { Operation patch = Operation . createPatch ( service . getUri ( ) ) . setBody ( body ) . setCompletion ( _NULL ) ; service . sendRequest ( patch ) ; }
32553	public static BetweenSpacePredicate between ( Comparable < ? > low , Comparable < ? > high ) { return new BetweenSpacePredicate ( low , high ) ; }
32568	@ Override public boolean accept ( File file ) { return file . isDirectory ( ) ; }
32573	private boolean imageOutline ( DefaultMutableTreeNode node ) { boolean isOutline = _BOOL ; if ( node != _NULL ) { DefaultMutableTreeNode parentNode = ( DefaultMutableTreeNode ) node . getParent ( ) ; if ( parentNode != _NULL ) { if ( parentNode . getUserObject ( ) instanceof RasterSymbolizer ) { isOutline = _BOOL ; } } } return isOutline ; }
32621	public RequestHandle post ( String url , ResponseHandlerInterface responseHandler ) { return post ( _NULL , url , _NULL , responseHandler ) ; }
32638	public VideoSearchQueryWithExtended hd ( Integer value ) { return unsafeParam ( _CHAR hd _CHAR , value ) ; }
32659	public static SM_SYSTEM_MESSAGE STR_GUILD_BANISH_HE_IS_NOT_MY_GUILD_MEMBER ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
32660	public boolean isStatic ( ) { return Modifier . isStatic ( this . getModifiers ( ) ) ; }
32665	protected void jimplifySpecial ( DexBody body ) { List < Local > parameters = buildParameters ( body , _BOOL ) ; invocation = Jimple . v ( ) . newSpecialInvokeExpr ( parameters . get ( _NUM ) , getSootMethodRef ( ) , parameters . subList ( _NUM , parameters . size ( ) ) ) ; body . setDanglingInstruction ( this ) ; }
32730	public static void requestFileAccessPermission ( WindowAndroid windowAndroid , PermissionCallback callback ) { assert windowAndroid != _NULL ; windowAndroid . requestPermissions ( new String [ ] { android . Manifest . permission . WRITE_EXTERNAL_STORAGE } , callback ) ; }
32742	@ SubscribeEvent public void onRender ( RenderTickEvent event ) { if ( event . phase == Phase . START ) { resizeIfNeeded ( ) ; } }
32755	public static boolean supportsLogSegmentSequenceNo ( int version ) { return version >= LogSegmentMetadataVersion . VERSION_V2_LEDGER_SEQNO . value ; }
32769	public PagesGetTitlesQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
32783	public void insertComponent ( String componentName ) { openInsertDialog ( ) . insertComponent ( componentName ) ; }
32793	public static boolean isBeginnerSkill ( int skillId ) { return isBeginnerJob ( skillId / _NUM ) && ( skillId % _NUM == _NUM || skillId % _NUM == _NUM || skillId % _NUM == _NUM || skillId % _NUM == _NUM ) ; }
32814	public void recordSplashscreenIconType ( int type ) { assert ! mCommitted ; assert type >= _NUM && type < SPLASHSCREEN_ICON_TYPE_MAX ; mSplashScreenIconType = type ; }
32887	private boolean trafficExpired ( AirMapTraffic traffic ) { int timeInterval = _NUM ; return new Date ( traffic . getIncomingTime ( ) . getTime ( ) + timeInterval * _NUM ) . before ( new Date ( ) ) ; }
32917	public Z Eq ( double a , double b ) { re = a ; im = b ; return this ; }
32924	public void putString ( String key , String value ) { checkForNullKey ( key ) ; checkForNullValue ( value ) ; preferences . edit ( ) . putString ( key , value ) . apply ( ) ; }
32925	public WallGetCommentsQueryWithExtended count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
32934	private void checkNoErrors ( ) { guiTest . robot ( ) . waitForIdle ( ) ; for ( Notification notification : EventLog . getLogModel ( guiTest . ideFrame ( ) . getProject ( ) ) . getNotifications ( ) ) { assertThat ( notification . getType ( ) ) . isNotEqualTo ( NotificationType . ERROR ) ; } }
32963	public static int [ ] convertIntegers ( List < Integer > integers ) { int [ ] ret = new int [ integers . size ( ) ] ; copyIntegers ( integers , ret ) ; return ret ; }
32999	protected void markTabStateInitialized ( ) { mTabStateInitialized = _BOOL ; for ( TabModelSelectorObserver listener : mObservers ) listener . onTabStateInitialized ( ) ; }
33065	public boolean isOverriden ( ) { return overridesMe . size ( ) > _NUM ; }
33094	public static String stripHtmlToSingleLine ( String s ) { String o = _NULL ; if ( s != _NULL ) { s = s . replaceAll ( _CHAR < br > _CHAR , _CHAR _CHAR ) ; o = s . replaceAll ( _CHAR \\ < . * ? \\ > _CHAR , _CHAR _CHAR ) ; } return o ; }
33125	public AMActivityAuditEventBuilder component ( AuditConstants . Component value ) { putComponent ( jsonValue , value . toString ( ) ) ; return this ; }
33141	public void paintInternalFrameTitlePaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
33142	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public void sendSearchEntry ( SearchOperation searchOperation , SearchResultEntry searchEntry ) throws DirectoryException { ( ( InternalSearchOperation ) searchOperation ) . addSearchEntry ( searchEntry ) ; }
33151	public static ResourceType createResourceType ( String applicationName , String resourceTypeName , Set < String > patterns , Map < String , Boolean > actions , String uuid ) { return createResourceTypeBuilder ( applicationName , resourceTypeName , patterns , actions , uuid ) . build ( ) ; }
33174	public static void writeFile ( String name , String contents ) throws IOException { writeFile ( name , contents . getBytes ( ) ) ; }
33182	public static MatchedValuesFilter createSubstringsFilter ( String rawAttributeType , ByteString subInitial , List < ByteString > subAny , ByteString subFinal ) { Reject . ifNull ( rawAttributeType ) ; return new MatchedValuesFilter ( SUBSTRINGS_TYPE , rawAttributeType , _NULL , subInitial , subAny , subFinal , _NULL ) ; }
33183	public static AttributeSet unmodifiableView ( AttributeSet attributeSet ) { if ( attributeSet == _NULL ) { throw new NullPointerException ( ) ; } return new UnmodifiableAttributeSet ( attributeSet ) ; }
33187	public void newDataAvailable ( final TableModelEvent event ) { fireTableChanged ( event ) ; }
33236	public final void popQuick ( ) { m_firstFree -- ; m_map [ m_firstFree ] = DTM . NULL ; }
33238	public boolean hasValue ( AttributeDescription attributeDescription , ByteString value ) { Attribute attr = getAttribute ( attributeDescription ) ; return attr != _NULL && attr . contains ( value ) ; }
33277	public void addOperand ( PdfVisibilityExpression expression ) { getPdfObject ( ) . add ( expression . getPdfObject ( ) ) ; getPdfObject ( ) . setModified ( ) ; }
33328	private void returnTerminationStatus ( HttpServletResponse response ) { try { response . setStatus ( _NUM ) ; response . flushBuffer ( ) ; return ; } catch ( Exception e ) { FSUtils . debug . error ( _CHAR FSSOAPReceiver . returnFedTerminationStatus : Exception : : _CHAR , e ) ; } }
33332	public static Set < String > asSetOfString ( Entry entry , String attrDesc ) { Attribute attr = entry . getAttribute ( attrDesc ) ; return attr != _NULL ? attr . parse ( ) . asSetOfString ( ) : Collections . < String > emptySet ( ) ; }
33373	public static Name from ( String ... pieces ) { List < NamePiece > namePieces = new ArrayList < > ( ) ; for ( String piece : pieces ) { validateLowerUnderscore ( piece ) ; namePieces . add ( new NamePiece ( piece , CaseFormat . LOWER_UNDERSCORE ) ) ; } return new Name ( namePieces ) ; }
33398	static void checkSignedShort ( final int value , final String msg ) { if ( value < Short . MIN_VALUE || value > Short . MAX_VALUE ) { throw new IllegalArgumentException ( msg + _CHAR ( must be a signed short ) : _CHAR + value ) ; } }
33410	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
33415	synchronized void removeUnusedSets ( ) { attributesPool . size ( ) ; }
33444	public void removeStyle ( String nm ) { styles . removeAttribute ( nm ) ; }
33476	public static NSObject parse ( InputStream in ) throws ParseException , IOException { byte [ ] buf = PropertyListParser . readAll ( in ) ; in . close ( ) ; return parse ( buf ) ; }
33488	public Host parseHost ( String host ) throws ParseException { Lexer lexer = new Lexer ( _CHAR charLexer _CHAR , host ) ; return new HostNameParser ( lexer ) . host ( ) ; }
33497	private static Charset toCharset ( String csn ) throws UnsupportedEncodingException { requireNonNull ( csn , _CHAR charsetName _CHAR ) ; try { return Charset . forName ( csn ) ; } catch ( IllegalCharsetNameException | UnsupportedCharsetException unused ) { throw new UnsupportedEncodingException ( csn ) ; } }
33510	public Builder ca ( boolean ca ) { this . ca = ca ; return this ; }
33522	public static GetPropSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > path , InstantiableRelationDefinition < ? , ? > r ) throws ArgumentException { return new GetPropSubCommandHandler ( parser , path . child ( r , _CHAR DUMMY _CHAR ) , r ) ; }
33562	public final String yytext ( ) { return new String ( zzBuffer , zzStartRead , zzMarkedPos - zzStartRead ) ; }
33571	void recomposeOutput ( OutputProperties oprops ) throws TransformerException { m_outputProperties . copyFrom ( oprops ) ; }
33589	public List < AuditEvent > convertToAuditEvent ( Iterable < PersistentAuditEvent > persistentAuditEvents ) { if ( persistentAuditEvents == _NULL ) { return Collections . emptyList ( ) ; } List < AuditEvent > auditEvents = new ArrayList < > ( ) ; for ( PersistentAuditEvent persistentAuditEvent : persistentAuditEvents ) { auditEvents . add ( convertToAuditEvent ( persistentAuditEvent ) ) ; } return auditEvents ; }
33599	public Object newInstance ( Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
33605	@ Override public void close ( ) throws IOException { while ( in != _NULL ) { nextStream ( ) ; } e = _NULL ; }
33624	private void endOuterRDFDescription ( int level ) throws IOException { writeIndent ( level + _NUM ) ; write ( RDF_SCHEMA_END ) ; writeNewline ( ) ; }
33645	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
33650	private boolean isComplete ( ) { return m_isComplete2 ; }
33652	public boolean isReadable ( ) { return isRead ; }
33674	public byte [ ] fromUTF8 ( String contents ) throws UnsupportedEncodingException { Reject . ifNull ( contents ) ; return contents . getBytes ( ENCODING ) ; }
33676	public AddOperation processAdd ( ByteString rawEntryDN , List < RawAttribute > rawAttributes , List < Control > controls ) { AddOperationBasis addOperation = new AddOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , rawEntryDN , rawAttributes ) ; addOperation . setInternalOperation ( _BOOL ) ; addOperation . run ( ) ; return addOperation ; }
33695	@ SuppressWarnings ( { _CHAR unchecked _CHAR , _CHAR rawtypes _CHAR } ) protected void addRequestContextInCustomRequestScope ( R requestContext ) { Key key = Key . get ( new TypeLiteral < IRequestContext < ? >> ( ) { } ) ; getSpincastRequestScope ( ) . seed ( key , requestContext ) ; key = Key . get ( getRequestContextType ( ) ) ; getSpincastRequestScope ( ) . seed ( key , requestContext ) ; }
33703	public static SetPropSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > path , OptionalRelationDefinition < ? , ? > r ) throws ArgumentException { return new SetPropSubCommandHandler ( parser , path . child ( r ) , r ) ; }
33708	public PdfCanvas resetFillColorGray ( ) { return setFillColorGray ( _NUM ) ; }
33745	@ Override public boolean accept ( File file ) { return file . isDirectory ( ) ; }
33747	public AnnotationVisitor visitTypeAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( fv != _NULL ) { return fv . visitTypeAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
33748	public Socket createSocket ( String hostName , int portNumber ) throws SSLConnectionException , IOException { if ( sslSocketFactory == _NULL ) { throw new SSLConnectionException ( ERR_TOOLS_SSL_CONNECTION_NOT_INITIALIZED . get ( ) ) ; } return socketWithEnabledProtocols ( sslSocketFactory . createSocket ( hostName , portNumber ) ) ; }
33783	private boolean canAccessClipboard ( ) { SecurityManager sm = System . getSecurityManager ( ) ; if ( sm == _NULL ) return _BOOL ; try { sm . checkPermission ( SecurityConstants . AWT . ACCESS_CLIPBOARD_PERMISSION ) ; return _BOOL ; } catch ( SecurityException e ) { } return _BOOL ; }
33788	public String buildJvmVersion ( ) { return properties . getProperty ( _CHAR build . jvm . version _CHAR ) ; }
33803	public static JButton makeJButton ( LocalizableMessage label , LocalizableMessage tooltip ) { JButton b = new JButton ( ) ; if ( label != _NULL ) { b . setText ( label . toString ( ) ) ; } if ( tooltip != _NULL ) { b . setToolTipText ( tooltip . toString ( ) ) ; } b . setOpaque ( _BOOL ) ; return b ; }
33811	public long bytesUsed ( ) throws IOException { return diskLruCache . size ( ) ; }
33837	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getCustomerDao ( ) : _NULL ; }
33849	public boolean lessThan ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . greaterThan ( this ) ; return this . num ( ) < obj2 . num ( ) ; }
33860	int size ( ) { return size ; }
33866	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery ) ; }
33888	public static void closeQuietly ( final Statement stmt ) { if ( stmt != _NULL ) { try { stmt . close ( ) ; } catch ( final Exception e ) { } } }
33906	boolean isUsageArgument ( final Argument a ) { return usageArgument != _NULL && usageArgument . getLongIdentifier ( ) . equals ( a . getLongIdentifier ( ) ) ; }
33919	public static UnitValue createPercentValue ( float value ) { return new UnitValue ( PERCENT , value ) ; }
33926	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
33957	public static boolean isTeslaProducer ( ICapabilityProvider provider , EnumFacing side ) { return provider . hasCapability ( TeslaCapabilities . CAPABILITY_PRODUCER , side ) ; }
33964	protected void writeContent ( Element elem , boolean needsIndenting ) throws IOException , BadLocationException { AttributeSet attr = elem . getAttributes ( ) ; writeNonHTMLAttributes ( attr ) ; if ( needsIndenting ) { indent ( ) ; } writeHTMLTags ( attr ) ; text ( elem ) ; }
34004	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; UIManager . getLookAndFeel ( ) . provideErrorFeedback ( target ) ; }
34012	public static DeleteSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > p , SetRelationDefinition < ? , ? > r ) throws ArgumentException { return new DeleteSubCommandHandler ( parser , p , r , p . child ( r ) ) ; }
34018	public static long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return getService ( ) . dynamicQueryCount ( dynamicQuery ) ; }
34029	public String toString ( ) { if ( m_namespace != _NULL && m_namespace . length ( ) > _NUM ) return _CHAR { _CHAR + m_namespace + _CHAR } _CHAR + m_extensionName ; else return m_extensionName ; }
34063	public static boolean isConnectedWifi ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_WIFI ) ; }
34076	public static int rebuildSMSIndex ( ) throws Exception { return rebuildIndex ( AMSetupServlet . getBaseDir ( ) , SMSEntry . getRootSuffix ( ) ) ; }
34078	public static boolean isInternetConnected ( Context context ) { final ConnectivityManager conMgr = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; final NetworkInfo activeNetwork = conMgr . getActiveNetworkInfo ( ) ; if ( activeNetwork != _NULL && activeNetwork . isConnected ( ) ) { return _BOOL ; } else { return _BOOL ; } }
34081	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
34085	@ Deprecated public static IOFileFilter orFileFilter ( IOFileFilter filter1 , IOFileFilter filter2 ) { return new OrFileFilter ( filter1 , filter2 ) ; }
34089	@ After public void afterTest ( ) { }
34097	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { target . cut ( ) ; } }
34127	int size ( ) { return Integer . bitCount ( set ) ; }
34128	public Observable < Account > retrieveByUsernameObservable ( String username ) { io . vertx . rx . java . ObservableFuture < Account > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrieveByUsername ( username , resultHandler . toHandler ( ) ) ; return resultHandler ; }
34132	public void applyModifications ( List < Modification > mods ) throws DirectoryException { for ( Modification m : mods ) { applyModification ( m ) ; } }
34141	@ Override public void recycle ( ) { remaining = _NUM ; pos = _NUM ; lastValid = _NUM ; endChunk = _BOOL ; needCRLFParse = _BOOL ; trailingHeaders . recycle ( ) ; trailingHeaders . setLimit ( maxTrailerSize ) ; extensionSize = _NUM ; error = _BOOL ; }
34192	public void paintRadioButtonMenuItemBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
34193	public void endCompose ( StylesheetRoot sroot ) throws TransformerException { int length = getSortElemCount ( ) ; for ( int i = _NUM ; i < length ; i ++ ) { getSortElem ( i ) . endCompose ( sroot ) ; } super . endCompose ( sroot ) ; }
34216	public void paintSliderTrackBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
34226	protected void paint ( SynthContext context , Graphics g ) { }
34275	public static void showMessageDialog ( Component parentComponent , Object message ) throws HeadlessException { showMessageDialog ( parentComponent , message , UIManager . getString ( _CHAR OptionPane . messageDialogTitle _CHAR , parentComponent ) , INFORMATION_MESSAGE ) ; }
34288	public void clear ( ) { LinkedListNode node = getLast ( ) ; while ( node != _NULL ) { node . remove ( ) ; node = getLast ( ) ; } head . next = head . previous = head ; }
34303	public static NSObject parse ( InputStream in ) throws ParseException , IOException { byte [ ] buf = PropertyListParser . readAll ( in ) ; in . close ( ) ; return parse ( buf ) ; }
34322	@ Override public void onRequestPermissionsResult ( int requestCode , @ NonNull String [ ] permissions , @ NonNull int [ ] grantResults ) { if ( requestCode == REQUEST_READ_CONTACTS ) { if ( grantResults . length == _NUM && grantResults [ _NUM ] == PackageManager . PERMISSION_GRANTED ) { populateAutoComplete ( ) ; } } }
34363	public void addUser ( User user ) throws AccessRightsException , EntryAlreadyExistsException , UMSException { super . addChild ( user ) ; }
34371	@ Override public void sendSearchEntry ( SearchOperation searchOperation , SearchResultEntry searchEntry ) { SearchResultEntryProtocolOp protocolOp = new SearchResultEntryProtocolOp ( searchEntry , ldapVersion ) ; sendLDAPMessage ( new LDAPMessage ( searchOperation . getMessageID ( ) , protocolOp , searchEntry . getControls ( ) ) ) ; }
34376	ReconQueryResult querySourceIter ( int pageSize , String pagingCookie ) throws SynchronizationException { ReconQueryResult result = getReconHandler ( ) . querySource ( pageSize , pagingCookie ) ; setSourceIds ( result . getAllIds ( ) ) ; return result ; }
34414	private ConfigurationRepository createConfigRepositoryWithDNs ( DN ... dns ) throws ConfigException { ConfigurationRepository configRepository = mock ( ConfigurationRepository . class ) ; for ( DN dn : dns ) { when ( configRepository . hasEntry ( dn ) ) . thenReturn ( _BOOL ) ; } return configRepository ; }
34456	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { target . setEditable ( _BOOL ) ; } }
34458	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; parseName ( ) ; parseActions ( ) ; }
34469	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
34470	@ Override public void resetDiff ( ) { resetDeltaRequest ( ) ; }
34490	public static boolean isHexDigit ( byte b ) { switch ( b ) { case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : return _BOOL ; default : return _BOOL ; } }
34495	void addPermission ( Permission permission ) { if ( ( securityManager != _NULL ) && ( permission != _NULL ) ) { permissionList . add ( permission ) ; } }
34504	boolean appendMarker ( Node < K , V > f ) { return casNext ( f , new Node < K , V > ( f ) ) ; }
34506	public static JEditorPane makeProgressPane ( JScrollPane scroll ) { return new ProgressJEditorPane ( scroll ) ; }
34529	public boolean isConsumed ( ) { return consumed ; }
34543	public static Event35 . Builder newBuilder ( Event35 . Builder other ) { return new Event35 . Builder ( other ) ; }
34557	public int versionMajorNumber ( ) { return Integer . valueOf ( properties . getProperty ( _CHAR version . major _CHAR ) ) ; }
34568	public synchronized Enumeration < K > keys ( ) { return this . < K > getEnumeration ( KEYS ) ; }
34590	public void resetFilterPath ( ) { attribute = _NULL ; modelFilter = _NULL ; ruleFilter = _NULL ; ruleFilterDataOld = _NULL ; }
34608	@ Override public void sessionCreated ( HttpSessionEvent event ) { log ( _CHAR sessionCreated ( _CHAR_CHAR_CHAR ) _CHAR ) ; }
34631	public void replaceResourceData ( int idx , SMDiscoEntryData data ) throws AMConsoleException { data . setDiscoStr ( isUserResourceOffering ( ) ) ; SMDiscoEntryData old = ( SMDiscoEntryData ) discoData . set ( idx , data ) ; }
34649	public static String toRomanUpperCase ( int number ) { return convert ( number ) . toUpperCase ( ) ; }
34689	protected void paint ( SynthContext context , Graphics g ) { super . paint ( g , splitPane ) ; }
34713	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getCollectEntityDao ( ) : _NULL ; }
34721	@ Deprecated public Iterator < PdfObject > directIterator ( ) { return new PdfArrayDirectIterator ( list . iterator ( ) ) ; }
34727	public void addCellEditorListener ( CellEditorListener l ) { realEditor . addCellEditorListener ( l ) ; }
34741	@ Override public boolean ready ( ) throws IOException { return _BOOL ; }
34761	@ Override public boolean sendSearchReference ( SearchOperation searchOperation , SearchResultReference searchReference ) throws DirectoryException { ( ( InternalSearchOperation ) searchOperation ) . addSearchReference ( searchReference ) ; return _BOOL ; }
34763	public static ADNotificationRequestControl newControl ( final boolean isCritical ) { return new ADNotificationRequestControl ( isCritical ) ; }
34801	public void removeUserLockoutEntry ( String userDN ) { pwResetFailHash . remove ( userDN ) ; userWarningCount = _NUM ; }
34832	public static int encodePassword ( String [ ] args ) { return encodePassword ( args , _BOOL , System . out , System . err ) ; }
34835	public void update ( Token token , ResultHandler < Token , ? > handler ) throws CoreTokenException { Reject . ifNull ( token ) ; try { taskExecutor . execute ( token . getTokenId ( ) , taskFactory . update ( token , handler ) ) ; } catch ( DataLayerException e ) { throw new CoreTokenException ( _CHAR Error in data layer _CHAR , e ) ; } }
34840	private boolean hasWDSSOFailed ( HttpServletRequest request ) { return Boolean . valueOf ( ( String ) request . getAttribute ( _CHAR http - auth - failed _CHAR ) ) ; }
34881	void checkForEnoughResources ( Operation operation ) throws DirectoryException { StorageStatus status = storage . getStorageStatus ( ) ; if ( status . isUnusable ( ) || ( status . isLockedDown ( ) && hasBypassLockdownPrivileges ( operation ) ) ) { throw new DirectoryException ( ResultCode . UNWILLING_TO_PERFORM , status . getReason ( ) ) ; } }
34924	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery ) ; }
34969	public static int readUBEInt24 ( ByteBuffer b ) { int result = _NUM ; result += readUBEInt16 ( b ) << _NUM ; result += readUInt8 ( b ) ; return result ; }
35003	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { Document doc = target . getDocument ( ) ; int dot = doc . getLength ( ) ; if ( select ) { target . moveCaretPosition ( dot ) ; } else { target . setCaretPosition ( dot ) ; } } }
35019	boolean isECLEnabled ( ) { return this . eclDomain . isEnabled ( ) ; }
35081	public String geNumericPlusAliasKey ( ) { return _CHAR N + _CHAR ; }
35085	public static String encrypt ( String clearText ) { return encode ( clearText ) ; }
35092	public static boolean isNotEmpty ( final Collection < ? > collection ) { return collection != _NULL && ! collection . isEmpty ( ) ; }
35094	public ProductService retrieveProductPrice ( String productId , Handler < AsyncResult < JsonObject >> resultHandler ) { delegate . retrieveProductPrice ( productId , resultHandler ) ; return this ; }
35130	public static void main ( String [ ] args ) { int returnCode = encodePassword ( args , _BOOL , System . out , System . err ) ; if ( returnCode != _NUM ) { System . exit ( filterExitCode ( returnCode ) ) ; } }
35160	public static int i ( String tag , String msg , Throwable tr ) { return Log . i ( tag , msg , tr ) ; }
35164	@ Override public void write ( ASN1Writer stream ) throws IOException { stream . writeOctetString ( OP_TYPE_DELETE_REQUEST , dn ) ; }
35188	protected void paint ( SynthContext context , Graphics g ) { }
35226	public void paintRadioButtonMenuItemBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
35246	public void addLiteralResultAttribute ( AVT avt ) { if ( _NULL == m_avts ) m_avts = new ArrayList ( ) ; m_avts . add ( avt ) ; }
35255	public static StringArgument keyStorePasswordArgument ( ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_KEYSTORE_PWD ) . shortIdentifier ( OPTION_SHORT_KEYSTORE_PWD ) . description ( INFO_ARGUMENT_DESCRIPTION_KEYSTOREPASSWORD . get ( ) ) . valuePlaceholder ( INFO_KEYSTORE_PWD_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
35268	public Enumeration < E > elements ( ) { return delegate . elements ( ) ; }
35310	public boolean isShowUsernameEnabled ( ) { return showUsernameEnabled ; }
35321	private boolean validateID ( String sId ) { return ! siteIdSet . isEmpty ( ) && siteIdSet . contains ( sId ) ; }
35345	public Iterator < String > parameterSignatureIterator ( ) { return new ParameterSignatureIterator ( ) ; }
35354	public static String encodeWebSafe ( byte [ ] source , boolean doPadding ) { return encode ( source , _NUM , source . length , WEBSAFE_ALPHABET , doPadding ) ; }
35377	private boolean configExists ( ) { File configDir = Installation . getLocal ( ) . getConfigurationDirectory ( ) ; File [ ] children = configDir . listFiles ( ) ; return children != _NULL && children . length > _NUM ; }
35413	public Builder generateUUID ( ) { this . uuid = UUID . randomUUID ( ) . toString ( ) ; return this ; }
35418	public synchronized int size ( ) { return cache . size ( ) ; }
35465	public static void appendLong ( AbstractStringBuilder sb , long l ) { convertLong ( sb , l ) ; }
35466	public Observable < JsonObject > retrieveProductPriceObservable ( String productId ) { io . vertx . rx . java . ObservableFuture < JsonObject > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrieveProductPrice ( productId , resultHandler . toHandler ( ) ) ; return resultHandler ; }
35472	public static BooleanArgument enableTLSArgument ( ) throws ArgumentException { return BooleanArgument . builder ( _CHAR enableStartTLS _CHAR ) . shortIdentifier ( OPTION_SHORT_START_TLS ) . description ( INFO_SETUP_DESCRIPTION_ENABLE_STARTTLS . get ( ) ) . buildArgument ( ) ; }
35530	public static int v ( String tag , String msg , Throwable tr ) { return Log . v ( tag , msg , tr ) ; }
35536	public static NSObject parse ( final byte [ ] bytes ) throws ParserConfigurationException , ParseException , SAXException , PropertyListFormatException , IOException { ByteArrayInputStream bis = new ByteArrayInputStream ( bytes ) ; return parse ( bis ) ; }
35539	public void paintTableHeaderBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
35540	protected void updateDepthOffset ( ) { if ( isRootVisible ( ) ) { if ( getShowsRootHandles ( ) ) depthOffset = _NUM ; else depthOffset = _NUM ; } else if ( ! getShowsRootHandles ( ) ) depthOffset =- _NUM ; else depthOffset = _NUM ; }
35541	public static AbandonRequest unmodifiableAbandonRequest ( final AbandonRequest request ) { if ( request instanceof UnmodifiableAbandonRequestImpl ) { return request ; } return new UnmodifiableAbandonRequestImpl ( request ) ; }
35544	public void hilight_selected_button ( ) { toolbar_panel . hilight_selected_button ( ) ; }
35558	public static boolean isAPKFile ( String file ) { file = file . substring ( file . lastIndexOf ( _CHAR / _CHAR ) + _NUM ) ; if ( file . indexOf ( _CHAR . _CHAR ) > - _NUM ) file = file . substring ( file . lastIndexOf ( _CHAR . _CHAR ) + _NUM ) ; return file . equalsIgnoreCase ( _CHAR apk _CHAR ) ; }
35561	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
35605	@ Override protected String toExternalForm ( URL url ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( _CHAR jar : _CHAR ) ; sb . append ( url . getFile ( ) ) ; String ref = url . getRef ( ) ; if ( ref != _NULL ) { sb . append ( ref ) ; } return sb . toString ( ) ; }
35640	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { }
35643	protected void flushAckAndClearBuffer ( ) throws IOException { stateTrackingEngine . flush ( ) ; for ( Tuple t : buffer ) { collector . ack ( t ) ; } buffer . clear ( ) ; }
35651	public boolean containsRuleActionId ( String ruleActionId ) { StringBuilder builder = new StringBuilder ( ruleActionId . length ( ) + _NUM ) ; builder . append ( ruleActionId ) . append ( Constants . KEY_SEPARATOR ) . append ( Character . MAX_VALUE ) ; return getAggregationMap ( ) . subMap ( ruleActionId , builder . toString ( ) ) . size ( ) > _NUM ; }
35657	public static boolean shutdownCalled ( ) { return shutdownCalled ; }
35689	private void log ( String message ) { if ( context != _NULL ) context . log ( _CHAR ContextListener : _CHAR + message ) ; else System . out . println ( _CHAR ContextListener : _CHAR + message ) ; }
35697	private void newline ( ) { print ( System . lineSeparator ( ) ) ; }
35707	public Enumeration < K > keys ( ) { return new KeyIterator ( ) ; }
35718	public static long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return getService ( ) . dynamicQueryCount ( dynamicQuery , projection ) ; }
35740	public boolean hasQValue ( ) { return super . hasParameter ( ParameterNames . Q ) ; }
35746	@ Override public void close ( ) throws IOException { super . close ( ) ; }
35770	public boolean isWorseThan ( final Problem other ) { return other == _NULL ? _BOOL : compareTo ( other ) > _NUM ; }
35772	public InternalSearchOperation processSearch ( final SearchRequest request , InternalSearchListener searchListener ) { InternalSearchOperation searchOperation = new InternalSearchOperation ( this , nextOperationID ( ) , nextMessageID ( ) , request , searchListener ) ; searchOperation . run ( ) ; return searchOperation ; }
35786	public void removeService ( String name ) { try { envCtx . unbind ( name ) ; } catch ( NamingException e ) { log . error ( sm . getString ( _CHAR naming . unbindFailed _CHAR , e ) ) ; } }
35801	final boolean isUnmatchedRequest ( ) { return ! isData && item == _NULL ; }
35804	public static PrintStream printStream ( ) { return printStream ; }
35805	private boolean nextWhenCursorIsExhaustedOrNotCorrectlyPositionned ( ) throws ChangelogException { final boolean found = cursor . positionTo ( lastNonNullCurrentCSN , GREATER_THAN_OR_EQUAL_TO_KEY , positionStrategy ) ; if ( found && cursor . next ( ) ) { nextRecord = cursor . getRecord ( ) ; lastNonNullCurrentCSN = nextRecord . getKey ( ) ; return _BOOL ; } nextRecord = _NULL ; return _BOOL ; }
35812	public AddOperation processAdd ( Entry entry , List < Control > controls ) { AddOperationBasis addOperation = new AddOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , entry ) ; addOperation . setInternalOperation ( _BOOL ) ; addOperation . run ( ) ; return addOperation ; }
35828	public boolean hasValidSize ( ) { return ( preferredHeight != _NUM ) ; }
35835	private void endFormals ( ) { if ( hasFormals ) { hasFormals = _BOOL ; buf . append ( _CHAR ) ; } }
35850	public void repaint ( Rectangle p_rect ) { if ( paint_immediately ) { board_panel . paintImmediately ( p_rect ) ; } else { board_panel . repaint ( p_rect ) ; } }
35867	@ Override public String toString ( ) { return currencyCode ; }
35869	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
35881	protected void fireAdjustmentValueChanged ( int id , int type , int value ) { fireAdjustmentValueChanged ( id , type , value , getValueIsAdjusting ( ) ) ; }
35908	void updateMonitoringPeriod ( long period ) { if ( period == _NUM ) { stopMonitoringPublisher ( ) ; return ; } final MonitoringPublisher mpThread = monitoringPublisher . get ( ) ; if ( mpThread != _NULL ) { mpThread . setPeriod ( period ) ; } else if ( ! connectedDSs . isEmpty ( ) || ! connectedRSs . isEmpty ( ) ) { startMonitoringPublisher ( ) ; } }
35917	public void addPageStreamingCallSettingsImports ( ModelTypeTable typeTable ) { }
35918	public void removeAttributeValues ( String attrName , Set values ) throws SMSException , SSOException { validateServiceConfigImpl ( ) ; SMSEntry e = sc . getSMSEntry ( ) ; SMSUtils . removeAttributeValues ( e , attrName , values , ss . getSearchableAttributeNames ( ) ) ; saveSMSEntry ( e ) ; }
35947	public static ComponentUI createUI ( JComponent x ) { return new SynthProgressBarUI ( ) ; }
35959	public void pause ( ) { setPaused ( _BOOL ) ; }
35987	protected void parseDOMAttributes ( Element element ) throws SAML2Exception { super . parseDOMAttributes ( element ) ; }
35992	public LinkedListNode addFirst ( LinkedListNode node ) { node . next = head . next ; node . previous = head ; node . previous . next = node ; node . next . previous = node ; return node ; }
36008	protected void pathWasExpanded ( TreePath path ) { if ( tree != _NULL ) { tree . fireTreeExpanded ( path ) ; } }
36016	public static ComponentUI createUI ( JComponent c ) { return new SynthSliderUI ( ( JSlider ) c ) ; }
36028	public boolean hasName ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
36049	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
36056	public static < C extends ConfigurationClient , S extends Configuration > CreateSubCommandHandler < C , S > create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > p , SetRelationDefinition < C , S > r ) throws ArgumentException { return new CreateSubCommandHandler < > ( parser , p , r , _NULL , p . child ( r ) ) ; }
36069	protected void checkClosingStatus ( ) { if ( closed ) { throw new PdfException ( PdfException . DocumentClosedItIsImpossibleToExecuteAction ) ; } }
36092	public void addResourceData ( SMDiscoEntryData data ) { try { data . setDiscoStr ( isUserResourceOffering ( ) ) ; discoData . add ( data ) ; } catch ( AMConsoleException e ) { debug . error ( _CHAR SMDiscoveryServiceData . addResourceData _CHAR , e ) ; } }
36104	private boolean hasNextProxy ( ) { return hasNextProxy ; }
36122	@ Override public void startActivityFromFragment ( final Fragment fragment , final Intent intent , final int requestCode ) { super . startActivityFromFragment ( fragment , intent , requestCode ) ; }
36146	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public boolean sendSearchReference ( SearchResultReference searchReference ) throws DirectoryException { addSearchReference ( searchReference ) ; return _BOOL ; }
36153	protected LinearLayout createAndPrepareFoldingContainer ( ) { LinearLayout foldingContainer = new LinearLayout ( getContext ( ) ) ; foldingContainer . setClipToPadding ( _BOOL ) ; foldingContainer . setClipChildren ( _BOOL ) ; foldingContainer . setOrientation ( LinearLayout . VERTICAL ) ; foldingContainer . setLayoutParams ( new LinearLayout . LayoutParams ( LayoutParams . MATCH_PARENT , LayoutParams . WRAP_CONTENT ) ) ; return foldingContainer ; }
36187	public boolean isLdapConnection ( ) { return ldapConnect ; }
36190	public GenericURI parse ( ) throws ParseException { return uriReference ( _BOOL ) ; }
36230	public PdfCanvas resetStrokeColorGray ( ) { return setStrokeColorGray ( _NUM ) ; }
36234	public static int resetIntermediateResponseCount ( ) { return intermediateResponseCounter . getAndSet ( _NUM ) ; }
36248	private void printSpace ( int n ) throws IOException { final java . io . Writer writer = m_writer ; for ( int i = _NUM ; i < n ; i ++ ) { writer . write ( _CHAR ) ; } }
36249	public void removeRole ( AMRole role ) throws AMException , SSOException { removeRole ( role . getDN ( ) ) ; }
36271	private Connection checkState ( ) { if ( isClosed ( ) ) { throw new IllegalStateException ( ) ; } return connection ; }
36329	public int versionPointNumber ( ) { return Integer . valueOf ( properties . getProperty ( _CHAR version . point _CHAR ) ) ; }
36346	protected void registerChildren ( ) { super . registerChildren ( ) ; registerChild ( MH_COMMON , CCPrimaryMasthead . class ) ; registerChild ( BREAD_CRUMB , CCBreadCrumbs . class ) ; registerChild ( BREAD_CRUMB_HREF , HREF . class ) ; }
36359	public void addOperand ( PdfLayer layer ) { getPdfObject ( ) . add ( layer . getPdfObject ( ) ) ; getPdfObject ( ) . setModified ( ) ; }
36371	public boolean isStopScrollWhenTouch ( ) { return stopScrollWhenTouch ; }
36378	public static long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return getService ( ) . dynamicQueryCount ( dynamicQuery ) ; }
36396	protected View createChild ( String name ) { View child = _NULL ; if ( name . equals ( REDIRECT_URL ) ) { child = new StaticTextField ( this , REDIRECT_URL , _CHAR _CHAR ) ; } else { throw new IllegalArgumentException ( _CHAR Invalid child name [ _CHAR + name + _CHAR ] _CHAR ) ; } return child ; }
36397	public PdfCanvas resetStrokeColorRgb ( ) { return resetStrokeColorGray ( ) ; }
36412	@ Fluent public Job emit ( String event , Object msg ) { logger . debug ( _CHAR [ LOG ] Emit : _CHAR + Kue . getCertainJobAddress ( event , this ) ) ; eventBus . send ( Kue . getCertainJobAddress ( event , this ) , msg ) ; return this ; }
36422	void checkEndMethod ( ) { if ( endMethod ) { throw new IllegalStateException ( _CHAR Can not visit elements after visitEnd has been called . '' ) ; } }
36445	public static String separatorsToWindows ( String path ) { if ( path == _NULL || path . indexOf ( UNIX_SEPARATOR ) == - _NUM ) { return path ; } return path . replace ( UNIX_SEPARATOR , WINDOWS_SEPARATOR ) ; }
36458	public boolean equals ( String s ) { switch ( type ) { case T_STR : if ( strValue == _NULL ) { return s == _NULL ; } return strValue . equals ( s ) ; case T_CHARS : return charC . equals ( s ) ; case T_BYTES : return byteC . equals ( s ) ; default : return _BOOL ; } }
36499	public void removeResourceEnvRef ( String name ) { entries . remove ( name ) ; ContextResourceEnvRef resourceEnvRef = _NULL ; synchronized ( resourceEnvRefs ) { resourceEnvRef = resourceEnvRefs . remove ( name ) ; } if ( resourceEnvRef != _NULL ) { support . firePropertyChange ( _CHAR resourceEnvRef _CHAR , resourceEnvRef , _NULL ) ; resourceEnvRef . setNamingResources ( _NULL ) ; } }
36530	public List < MappedMember > findMethodsByDesc ( String text ) { List < MappedMember > list = new ArrayList < MappedMember > ( ) ; for ( MappedMember mm : getMethods ( ) ) { if ( mm . getDesc ( ) . equals ( text ) ) { list . add ( mm ) ; } } return list ; }
36553	public void addLayer ( PdfLayer layer ) { PdfArray layers = getPdfObject ( ) . getAsArray ( PdfName . OCGs ) ; if ( layers == _NULL ) { layers = new PdfArray ( ) ; getPdfObject ( ) . put ( PdfName . OCGs , layers ) ; } layers . add ( layer . getPdfObject ( ) ) ; layers . setModified ( ) ; }
36559	public boolean isUseDeltasEnabled ( ) { return useDeltas ; }
36568	public String versionQualifier ( ) { return properties . getProperty ( _CHAR version . qualifier _CHAR ) ; }
36575	@ Override public String toString ( ) { return _CHAR AccountStatusNotification ( type = _CHAR + notificationType . getName ( ) + _CHAR , dn = _CHAR + userEntry . getName ( ) + _CHAR , message = _CHAR + message + _CHAR ) _CHAR ; }
36600	@ Override public void flush ( ) { }
36606	public static void registerSynchronizationProvider ( SynchronizationProvider < SynchronizationProviderCfg > provider ) { directoryServer . synchronizationProviders . add ( provider ) ; provider . completeSynchronizationProvider ( ) ; }
36674	public void makeYoungest ( FastRemovalDequeue < JspServletWrapper > . Entry unloadHandle ) { if ( log . isTraceEnabled ( ) ) { JspServletWrapper jsw = unloadHandle . getContent ( ) ; log . trace ( Localizer . getMessage ( _CHAR jsp . message . jsp_queue_update _CHAR , jsw . getJspUri ( ) , context . getContextPath ( ) ) ) ; } jspQueue . moveFirst ( unloadHandle ) ; }
36680	public void paintCheckBoxMenuItemBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
36728	protected boolean isReadAllowed ( ) throws IOException { if ( selfClosed ) { throw new IOException ( _CHAR Attempted read on closed stream . '' ) ; } return ( wrappedStream != _NULL ) ; }
36748	boolean equals ( SAML2SessionPartner partner ) { if ( this . sessionPartner . equals ( partner . getPartner ( ) ) && ( this . isRoleIDP == partner . isIDPRole ( ) ) ) { return _BOOL ; } return _BOOL ; }
36753	public static CompareResult unmodifiableCompareResult ( final CompareResult result ) { if ( result instanceof UnmodifiableCompareResultImpl ) { return result ; } return new UnmodifiableCompareResultImpl ( result ) ; }
36758	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public void sendSearchEntry ( SearchResultEntry searchEntry ) throws DirectoryException { addSearchEntry ( searchEntry ) ; }
36799	public boolean isMetaphoneEqual ( String str1 , String str2 ) { return metaphone ( str1 ) . equals ( metaphone ( str2 ) ) ; }
36826	public static void closeQuietly ( LineIterator iterator ) { if ( iterator != _NULL ) { iterator . close ( ) ; } }
36837	protected String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
36842	public final void addInstanceOf ( String className ) { Reject . ifNull ( className ) ; String value = className . trim ( ) ; if ( ! value . matches ( CLASS_RE ) ) { throw new IllegalArgumentException ( _CHAR \ _CHAR _CHAR + value + _CHAR \ _CHAR is not a valid Java class name _CHAR ) ; } instanceOfInterfaces . add ( value ) ; }
36871	public static void deregisterAlertHandler ( AlertHandler < ? > alertHandler ) { directoryServer . alertHandlers . remove ( alertHandler ) ; }
36908	public void removeChildPeopleContainer ( PeopleContainer pc ) throws AccessRightsException , EntryNotFoundException , UMSException { super . removeChild ( pc ) ; }
36912	private boolean isDualRole ( EntityDescriptorElement entityDescriptor ) { boolean dual = _BOOL ; if ( entityDescriptor != _NULL ) { if ( ( SAML2MetaUtils . getSPSSODescriptor ( entityDescriptor ) != _NULL ) && ( SAML2MetaUtils . getIDPSSODescriptor ( entityDescriptor ) != _NULL ) ) { dual = _BOOL ; } } return dual ; }
36924	public static SearchFilter createGreaterOrEqualFilter ( AttributeType attributeType , Set < String > attributeOptions , ByteString assertionValue ) { return new SearchFilter ( FilterType . GREATER_OR_EQUAL , _NULL , _NULL , attributeType , attributeOptions , assertionValue , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
36939	public List < AuditEvent > convertToAuditEvent ( Iterable < PersistentAuditEvent > persistentAuditEvents ) { if ( persistentAuditEvents == _NULL ) { return Collections . emptyList ( ) ; } List < AuditEvent > auditEvents = new ArrayList < > ( ) ; for ( PersistentAuditEvent persistentAuditEvent : persistentAuditEvents ) { auditEvents . add ( convertToAuditEvent ( persistentAuditEvent ) ) ; } return auditEvents ; }
36941	public void validate ( final Cookie cookie , final CookieOrigin origin ) throws MalformedCookieException { if ( cookie == _NULL ) { throw new IllegalArgumentException ( _CHAR Cookie may not be _NULL _CHAR ) ; } if ( cookie instanceof SetCookie2 ) { if ( cookie instanceof ClientCookie && ! ( ( ClientCookie ) cookie ) . containsAttribute ( ClientCookie . VERSION_ATTR ) ) { throw new MalformedCookieException ( _CHAR Violates RFC _NUM . Version attribute is required . '' ) ; } } }
36957	public void addChildElementAt ( XMLElement child , int index ) throws Exception { addChildElementAt ( child , index , _BOOL ) ; }
36966	protected void installComboBoxListeners ( ) { if ( ( propertyChangeListener = createPropertyChangeListener ( ) ) != _NULL ) { comboBox . addPropertyChangeListener ( propertyChangeListener ) ; } if ( ( itemListener = createItemListener ( ) ) != _NULL ) { comboBox . addItemListener ( itemListener ) ; } installComboBoxModelListeners ( comboBox . getModel ( ) ) ; }
36980	public static void registerRootDN ( DN rootDN ) { directoryServer . rootDNs . add ( rootDN ) ; }
37032	@ SafeVarargs public static < T > boolean addAll ( Collection < ? super T > c , T ... a ) { boolean modified = _BOOL ; for ( int i = _NUM ; i < a . length ; i ++ ) { modified |= c . add ( a [ i ] ) ; } return modified ; }
37052	public final void remove_from_tree ( AwtreeShapeSearch p_shape_tree ) { if ( p_shape_tree == _NULL ) return ; p_shape_tree . remove ( tree_entries ) ; }
37055	protected final Object [ ] copyChildren ( ) { synchronized ( children ) { return children . keySet ( ) . toArray ( ) ; } }
37064	int size ( ) { return pendingChanges . size ( ) ; }
37120	public static SetPropSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > path , SetRelationDefinition < ? , ? > r ) throws ArgumentException { return new SetPropSubCommandHandler ( parser , path . child ( r ) , r ) ; }
37121	private void updateButtonForOcean ( JButton button ) { if ( MetalLookAndFeel . usingOcean ( ) ) { button . setFocusPainted ( comboBox . isEditable ( ) ) ; } }
37132	boolean equals ( FSSessionPartner partner ) { if ( this . sessionPartner . equals ( partner . getPartner ( ) ) && ( this . isRoleIDP == partner . getIsRoleIDP ( ) ) ) { return _BOOL ; } return _BOOL ; }
37137	public static void deregisterConnectionHandler ( ConnectionHandler < ? > handler ) { synchronized ( directoryServer . connectionHandlers ) { directoryServer . connectionHandlers . remove ( handler ) ; ConnectionHandlerMonitor monitor = handler . getConnectionHandlerMonitor ( ) ; if ( monitor != _NULL ) { deregisterMonitorProvider ( monitor ) ; monitor . finalizeMonitorProvider ( ) ; handler . setConnectionHandlerMonitor ( _NULL ) ; } } }
37164	public KeyStoreBuilder withProvider ( final Provider provider ) { Reject . ifNull ( provider ) ; this . provider = provider ; return this ; }
37183	public synchronized void enableAllObjectNames ( ) { RELATION_LOGGER . entering ( MBeanServerNotificationFilter . class . getName ( ) , _CHAR enableAllObjectNames _CHAR ) ; selectedNames = _NULL ; deselectedNames = new Vector < ObjectName > ( ) ; RELATION_LOGGER . exiting ( MBeanServerNotificationFilter . class . getName ( ) , _CHAR enableAllObjectNames _CHAR ) ; return ; }
37214	public static String upperFirst ( String input ) { if ( input == _NULL ) { throw new IllegalArgumentException ( _CHAR input ca n _CHAR_CHAR ) ; } return head ( input ) . map ( null ) . map ( null ) . get ( ) ; }
37215	protected void clearError ( ) { ioError = _BOOL ; }
37253	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery , projection ) ; }
37261	public static boolean isHolderCapability ( Capability < ? > capability ) { return capability == TeslaCapabilities . CAPABILITY_HOLDER ; }
37276	public static List < Foo > toModels ( FooSoap [ ] soapModels ) { if ( soapModels == _NULL ) { return _NULL ; } List < Foo > models = new ArrayList < Foo > ( soapModels . length ) ; for ( FooSoap soapModel : soapModels ) { models . add ( toModel ( soapModel ) ) ; } return models ; }
37290	public String toString ( ) { return ( resourceMatch ) ; }
37301	public Observable < Account > retrieveAccountObservable ( String id ) { io . vertx . rx . java . ObservableFuture < Account > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrieveAccount ( id , resultHandler . toHandler ( ) ) ; return resultHandler ; }
37303	public void createAdministrator ( boolean createAdministrator ) { this . createAdministrator = createAdministrator ; }
37341	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , ChecksumException , FormatException { return decode ( image , _NULL ) ; }
37363	public static boolean isModifiableVariableHolder ( Object object ) { List < Field > fields = getAllModifiableVariableFields ( object ) ; return ! fields . isEmpty ( ) ; }
37424	public String toLocalizedPattern ( ) { return translatePattern ( pattern , DateFormatSymbols . patternChars , formatData . getLocalPatternChars ( ) ) ; }
37440	public void run ( ) { boolean periodic = isPeriodic ( ) ; if ( ! canRunInCurrentRunState ( periodic ) ) cancel ( _BOOL ) ; else if ( ! periodic ) ScheduledFutureTask . super . run ( ) ; else if ( ScheduledFutureTask . super . runAndReset ( ) ) { setNextRunTime ( ) ; reExecutePeriodic ( outerTask ) ; } }
37450	public boolean isEmptyButtonShown ( ) { return mShowEmptyButton ; }
37453	@ Override public ServerResource create ( Request request , Response response ) { final ServerResource resource = InjectorHolder . getInstance ( serverResource ) ; resource . init ( getContext ( ) , request , response ) ; return resource ; }
37458	protected void checkClosingStatus ( ) { if ( getPdfDocument ( ) . isClosed ( ) ) { throw new PdfException ( PdfException . DocumentClosedItIsImpossibleToExecuteAction ) ; } }
37464	public List < Index > readAll ( String database , String table ) { return indexesRepo . readAllCached ( new Identifier ( database , table ) ) ; }
37469	private String keyToBackupKey ( BackupProtos . Key key ) { return Base64 . encodeToString ( BackupProtos . Key . toByteArray ( key ) , Base64 . NO_WRAP ) ; }
37481	public boolean hasName ( final String name ) { for ( final String n : names ) { if ( n . equalsIgnoreCase ( name ) ) { return _BOOL ; } } return _BOOL ; }
37490	public static int serviceState ( ) { return serviceState ( NullOutputStream . printStream ( ) , NullOutputStream . printStream ( ) ) ; }
37508	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { if ( select ) { target . moveCaretPosition ( _NUM ) ; } else { target . setCaretPosition ( _NUM ) ; } } }
37531	public static String toUpperCase ( String str ) { return str . toUpperCase ( Locale . ENGLISH ) ; }
37537	public String toHexString ( ) { final StringBuilder buf = new StringBuilder ( _NUM ) ; for ( final byte b : toByteArray ( ) ) { buf . append ( String . format ( _CHAR % _NUM _CHAR , b & _NUM ) ) ; } return buf . toString ( ) ; }
37550	public void disableWindowsService ( ) throws ApplicationException { int code = ConfigureWindowsService . disableService ( System . out , System . err ) ; if ( code == ConfigureWindowsService . SERVICE_DISABLE_ERROR ) { throw new ApplicationException ( ReturnCode . WINDOWS_SERVICE_ERROR , INFO_ERROR_DISABLING_WINDOWS_SERVICE . get ( _CHAR _CHAR ) , _NULL ) ; } }
37591	public void reset ( ) { gsStack . removeAllElements ( ) ; gsStack . push ( new ParserGraphicsState ( ) ) ; textMatrix = _NULL ; textLineMatrix = _NULL ; resourcesStack = new Stack < > ( ) ; isClip = _BOOL ; currentPath = new Path ( ) ; }
37610	private void initFromCollection ( Collection < ? extends E > c ) { initElementsFromCollection ( c ) ; heapify ( ) ; }
37629	private Future < Long > retrieveCounter ( String key ) { Future < Long > future = Future . future ( ) ; EventBusService . < CounterService > getProxy ( discovery , new JsonObject ( ) . put ( _CHAR name _CHAR , _CHAR counter - eb - service _CHAR ) , _NULL ) ; return future ; }
37663	protected boolean isPWResetEnabled ( ) { return model . isPasswordResetEnabled ( ) ; }
37668	public void paintRadioButtonMenuItemBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
37676	public ExtendedOperation processExtendedOperation ( String requestOID , ByteString requestValue ) { return processExtendedOperation ( requestOID , requestValue , _NULL ) ; }
37724	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
37766	public static void deregisterSynchronizationProvider ( SynchronizationProvider < ? > provider ) { directoryServer . synchronizationProviders . remove ( provider ) ; }
37768	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
37778	public int size ( ) { return components . size ( ) ; }
37793	@ Override public String toString ( ) { return charSequence . toString ( ) ; }
37802	public double screen_to_board ( double p_val ) { return p_val / scale_factor ; }
37819	public boolean isOptional ( ) { return ( as . isOptional ( ) ) ; }
37825	protected boolean checkWritable ( ) throws NamingException { if ( isWritable ( ) ) { return _BOOL ; } else { if ( exceptionOnFailedWrite ) { throw new javax . naming . OperationNotSupportedException ( sm . getString ( _CHAR namingContext . readOnly _CHAR ) ) ; } } return _BOOL ; }
37840	static DebugGraphicsInfo info ( ) { DebugGraphicsInfo debugGraphicsInfo = ( DebugGraphicsInfo ) SwingUtilities . appContextGet ( debugGraphicsInfoKey ) ; if ( debugGraphicsInfo == _NULL ) { debugGraphicsInfo = new DebugGraphicsInfo ( ) ; SwingUtilities . appContextPut ( debugGraphicsInfoKey , debugGraphicsInfo ) ; } return debugGraphicsInfo ; }
37843	public void removeThread ( WaitingThread wt ) { if ( wt == _NULL ) return ; this . waitingThreads . remove ( wt ) ; }
37882	private void updateHeader ( ) { updateHeaderShade ( ) ; }
37886	Values values ( Thread current ) { return current . localValues ; }
37891	public static ComponentUI createUI ( JComponent x ) { return new SynthPopupMenuUI ( ) ; }
37950	private void rangeCheckForAdd ( int index ) { if ( index > size || index < _NUM ) throw new IndexOutOfBoundsException ( outOfBoundsMsg ( index ) ) ; }
37960	public static List < Foo > toModels ( FooSoap [ ] soapModels ) { if ( soapModels == _NULL ) { return _NULL ; } List < Foo > models = new ArrayList < Foo > ( soapModels . length ) ; for ( FooSoap soapModel : soapModels ) { models . add ( toModel ( soapModel ) ) ; } return models ; }
37963	private void updateValuesFromBundle ( Bundle savedInstanceState ) { if ( savedInstanceState != _NULL ) { if ( savedInstanceState . keySet ( ) . contains ( ADDRESS_REQUESTED_KEY ) ) { addressRequested = savedInstanceState . getBoolean ( ADDRESS_REQUESTED_KEY ) ; } if ( savedInstanceState . keySet ( ) . contains ( LOCATION_ADDRESS_KEY ) ) { addressOutput = savedInstanceState . getString ( LOCATION_ADDRESS_KEY ) ; displayAddressOutput ( ) ; } } }
37964	static boolean previouslyNotificationEnabled ( ) { return previousNotificationEnabledFlag ; }
37970	public boolean startsWith ( XMLString prefix ) { return m_str . startsWith ( prefix . toString ( ) ) ; }
37979	public void appendCell ( ) { appendCell ( _CHAR _CHAR ) ; }
38018	public Pattern pattern ( ) { return parentPattern ; }
38031	public void clear ( ) { if ( states != _NULL ) { states . removeAllElements ( ) ; } }
38049	final boolean isShared ( ) { return nextWaiter == SHARED ; }
38055	public boolean isMalformed ( ) { return this . type == TYPE_MALFORMED_INPUT ; }
38132	public void doSetInput ( boolean force ) { IEditorInput input = getEditorInput ( ) ; try { if ( doOpenBuffer ( input , force ) ) { super . doSetInput ( input ) ; } } catch ( Exception e ) { JavaDecompilerPlugin . logError ( e , _CHAR _CHAR ) ; } }
38140	protected final boolean isBlocking ( ) { return response . getWriteListener ( ) == _NULL ; }
38153	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
38154	public void paintCheckBoxMenuItemBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
38232	@ After public void afterTest ( ) { }
38234	public double segment_distance ( PlaPointFloat p_point ) { PlaPointFloat projection = perpendicular_projection ( p_point ) ; if ( projection . is_contained_in_box ( point_a , point_b , _NUM . _NUM ) ) return p_point . distance ( projection ) ; return Math . min ( p_point . distance ( point_a ) , p_point . distance ( point_b ) ) ; }
38241	public DeleteOperation processDelete ( DeleteChangeRecordEntry deleteRecord ) { return processDelete ( deleteRecord . getDN ( ) ) ; }
38245	@ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) public static void pickImage ( Context context , Fragment fragment , int requestCode ) { try { fragment . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( context ) ; } }
38304	public static long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return getService ( ) . dynamicQueryCount ( dynamicQuery , projection ) ; }
38372	static boolean continueEvaluationOnDenyDecision ( ) { return continueEvaluationOnDenyDecisionFlag ; }
38375	public boolean isOverflow ( ) { return this . type == TYPE_OVERFLOW ; }
38436	public void endCompose ( StylesheetRoot sroot ) throws TransformerException { StylesheetRoot . ComposeState cstate = sroot . getComposeState ( ) ; super . endCompose ( sroot ) ; m_frameSize = cstate . getFrameSize ( ) ; cstate . resetStackFrameSize ( ) ; }
38445	protected void parseDOMAttributes ( Element element ) throws SAML2Exception { super . parseDOMAttributes ( element ) ; }
38455	protected Transferable createTransferableProxy ( Transferable t , boolean local ) { return new TransferableProxy ( t , local ) ; }
38472	public DeleteOperation processDelete ( DN entryDN ) { return processDelete ( entryDN , _NULL ) ; }
38487	private static int typeMapping ( int smsType ) { switch ( smsType ) { case ServiceListener . ADDED : return ConfigurationActionEvent . ADDED ; case ServiceListener . REMOVED : return ConfigurationActionEvent . DELETED ; case ServiceListener . MODIFIED : return ConfigurationActionEvent . MODIFIED ; } return smsType ; }
38490	@ Override public void recycle ( ) { input = _NULL ; }
38503	public void addBitmapToCache ( String data , BitmapDrawable value ) { if ( data == _NULL || value == _NULL ) { return ; } if ( mMemoryCache != _NULL ) { if ( RecyclingBitmapDrawable . class . isInstance ( value ) ) { ( ( RecyclingBitmapDrawable ) value ) . setIsCached ( _BOOL ) ; } mMemoryCache . put ( data , value ) ; } }
38518	public static boolean isTeslaHolder ( ICapabilityProvider provider , EnumFacing side ) { return provider . hasCapability ( TeslaCapabilities . CAPABILITY_HOLDER , side ) ; }
38574	private void idRequired ( String id ) throws ForbiddenException { if ( id == _NULL ) { throw new ForbiddenException ( _CHAR Operation not allowed on entire object set _CHAR ) ; } }
38592	public void printStackTrace ( ) { super . printStackTrace ( ) ; }
38611	private static Charset toCharset ( String csn ) { Objects . requireNonNull ( csn , _CHAR charsetName _CHAR ) ; try { return Charset . forName ( csn ) ; } catch ( IllegalCharsetNameException | UnsupportedCharsetException e ) { throw new IllegalArgumentException ( e ) ; } }
38617	public boolean omitStart ( ) { return oStart ; }
38637	public boolean containsKey ( PdfName key ) { return map . containsKey ( key ) ; }
38648	protected void registerChildren ( ) { super . registerChildren ( ) ; registerChild ( PGTITLE , CCPageTitle . class ) ; registerChild ( SEC_MH_COMMON , CCSecondaryMasthead . class ) ; registerChild ( PROPERTY_ATTRIBUTE , AMPropertySheet . class ) ; ptModel . registerChildren ( this ) ; propertySheetModel . registerChildren ( this ) ; }
38664	public void displayVoid ( ) { ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , NOTHING_SELECTED ) ; }
38672	public Task query ( TokenFilter filter , ResultHandler < Collection < Token > , ? > handler ) { return new QueryTask ( filter , handler ) ; }
38679	public void createEntityDescriptor ( String realm , EntityDescriptorElement descriptor ) throws SAML2MetaException { debug . message ( _CHAR SAML2MetaManager . createEntityDescriptor : called . '' ) ; createEntity ( realm , descriptor , _NULL ) ; }
38690	public static int d ( String tag , String msg , Throwable tr ) { return Log . d ( tag , msg , tr ) ; }
38695	public static int mainRestoreDB ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { RestoreDB tool = new RestoreDB ( ) ; return tool . process ( args , initializeServer , outStream , errStream ) ; }
38752	public SignerInfo toASN1Structure ( ) { return info ; }
38796	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public boolean sendSearchReference ( SearchOperation searchOperation , SearchResultReference searchReference ) throws DirectoryException { ( ( InternalSearchOperation ) searchOperation ) . addSearchReference ( searchReference ) ; return _BOOL ; }
38810	public static UnitValue createPointValue ( float value ) { return new UnitValue ( POINT , value ) ; }
38833	private void redoTheLayout ( ) { if ( treeState != _NULL ) { treeState . invalidateSizes ( ) ; } }
38841	public boolean after ( Date when ) { return getMillisOf ( this ) > getMillisOf ( when ) ; }
38881	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
38913	public static boolean isHexDigit ( final char c ) { return com . forgerock . opendj . util . StaticUtils . isHexDigit ( c ) ; }
38979	public AsfTagTextField createRatingField ( final String content ) { return new AsfTagTextField ( AsfFieldKey . RATING , content ) ; }
39021	public java . lang . Object read_abstract_interface ( ) { throw new org . omg . CORBA . NO_IMPLEMENT ( ) ; }
39052	public KeyStoreBuilder withProvider ( final String providerName ) { Provider provider = Security . getProvider ( providerName ) ; if ( provider == _NULL ) { throw new IllegalArgumentException ( _CHAR No such provider : _CHAR + providerName ) ; } return withProvider ( provider ) ; }
39073	public static void disable ( ) { }
39152	public boolean isEmpty ( ) { return bytes . remaining ( ) == _NUM ; }
39233	public boolean isUnumberedLink ( ) { return networkNumber == UN_NUMBERED ; }
39257	public int hashCode ( ) { return pattern . hashCode ( ) ; }
39263	public static ComponentUI createUI ( JComponent c ) { return new SynthButtonUI ( ) ; }
39269	protected void paint ( SynthContext context , Graphics g ) { }
39293	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
39295	boolean isYoung ( ) { return mYoung ; }
39297	public Object [ ] toArray ( ) { return children . toArray ( ) ; }
39307	public boolean equals ( Object o ) { if ( o instanceof ServiceSchemaManager ) { ServiceSchemaManager ossm = ( ServiceSchemaManager ) o ; if ( serviceName . equals ( ossm . serviceName ) && version . equals ( ossm . version ) ) { return ( _BOOL ) ; } } return ( _BOOL ) ; }
39313	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { target . setCaretPosition ( target . getCaretPosition ( ) ) ; } }
39315	InternalSession removeCachedInternalSession ( final SessionID sessionId ) { if ( _NULL == sessionId ) { return _NULL ; } return sessionAccessManager . removeInternalSession ( sessionId ) ; }
39321	public static int mainExportLDIF ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { ExportLDIF tool = new ExportLDIF ( ) ; return tool . process ( args , initializeServer , outStream , errStream ) ; }
39324	public void clear ( ) { if ( relations != _NULL ) { relations . removeAllElements ( ) ; } }
39330	public static Event35Id . Builder newBuilder ( Event35Id . Builder other ) { return new Event35Id . Builder ( other ) ; }
39359	private void readAllRecordsFiles ( ) { File logRecordDir = Constants . getRecordDir ( mContext ) ; mLogRecordsFiles = logRecordDir . listFiles ( ) ; if ( mLogRecordsFiles == _NULL ) { mLogRecordsFiles = new File [ _NUM ] ; } }
39368	public final AMAccessAuditEventBuilder realm ( String realm ) { putRealm ( jsonValue , realm ) ; return this ; }
39370	public AMAuthenticationAuditEventBuilder entryList ( List < AuthenticationAuditEntry > entries ) { List < Map < String , Object >> convertedEntries = new ArrayList < > ( ) ; for ( AuthenticationAuditEntry entry : entries ) { convertedEntries . add ( entry . toMap ( ) ) ; } super . entries ( convertedEntries ) ; return this ; }
39401	public boolean mustCreateAdministrator ( ) { return createAdministrator ; }
39413	protected static boolean isClientTypeValid ( String userAgent ) { boolean valid = _BOOL ; for ( int i = _NUM ; ( i < invalidCharacters . length ) && valid ; i ++ ) { valid = ( userAgent . indexOf ( invalidCharacters [ i ] ) == - _NUM ) ; } return valid ; }
39429	@ Override public void addRoleMapping ( String role , String link ) { synchronized ( roleMappings ) { roleMappings . put ( role , link ) ; } fireContainerEvent ( _CHAR addRoleMapping _CHAR , role ) ; }
39446	public static long nanoToMillis ( final long nano ) { return nano / _NUM ; }
39479	public boolean hasWrongStatus ( ) { return hasWrongStatus ; }
39496	@ BeforeClass public void beforeClass ( ) throws Exception { TestCaseUtils . startServer ( ) ; Entry configEntry = TestCaseUtils . makeEntry ( _CHAR dn : cn = samba password , cn = Plugins , cn = config _CHAR , _CHAR objectClass : ds - cfg - samba - password - plugin _CHAR , _CHAR objectClass : ds - cfg - plugin _CHAR , _CHAR objectClass : top _CHAR , _CHAR ds - cfg - plugin - type : postoperationextended _CHAR , _CHAR ds - cfg - plugin - type : preoperationmodify _CHAR , _CHAR ds - cfg - pwd - sync - policy : sync - nt - password _CHAR , _CHAR ds - cfg - pwd - sync - policy : sync - lm - password _CHAR , _CHAR ds - cfg - samba - administrator - dn : cn = samba admin , o = test _CHAR , _CHAR cn : samba password _CHAR , _CHAR ds - cfg - enabled : _BOOL _CHAR , _CHAR ds - cfg - java - class : org . opends . server . plugins . SambaPasswordPlugin _CHAR ) ; TestCaseUtils . addEntry ( configEntry ) ; }
39512	public static NSObject parse ( byte [ ] bytes ) throws ParseException { ASCIIPropertyListParser parser = new ASCIIPropertyListParser ( bytes ) ; return parser . parse ( ) ; }
39519	public static int sizeOfLong ( ) { return _NUM ; }
39546	public boolean contains ( ByteString value ) { return values . contains ( createAttributeValue ( attributeDescription , value ) ) ; }
39551	public void push ( long val ) { this . push ( new BaseTypeWrapper ( val ) ) ; }
39563	public static ActiveRequestorException newSenderException ( String key , String ... args ) { return new ActiveRequestorException ( SOAPConstants . SOAP_SENDER_FAULT , key , args ) ; }
39635	public static String lower ( String self ) { return self . toLowerCase ( ) ; }
39636	@ Override public boolean isRemote ( ) { return isRemote ; }
39646	private void twoTasksLoadCallsToRepository ( TasksDataSource . LoadTasksCallback callback ) { mTasksRepository . getTasks ( callback ) ; verify ( mTasksLocalDataSource ) . getTasks ( mTasksCallbackCaptor . capture ( ) ) ; mTasksCallbackCaptor . getValue ( ) . onDataNotAvailable ( ) ; verify ( mTasksRemoteDataSource ) . getTasks ( mTasksCallbackCaptor . capture ( ) ) ; mTasksCallbackCaptor . getValue ( ) . onTasksLoaded ( TASKS ) ; mTasksRepository . getTasks ( callback ) ; }
39649	protected List < Modification > generatemods ( String attrName , String attrValue ) { Attribute attr = Attributes . create ( attrName , attrValue ) ; return newArrayList ( new Modification ( REPLACE , attr ) ) ; }
39717	public final PlaPointInt mirror_vertical ( PlaPointInt p_pole ) { PlaVectorInt v = difference_by ( p_pole ) ; v = v . mirror_at_y_axis ( ) ; return p_pole . translate_by ( v ) ; }
39749	public void push ( int val ) { this . push ( new BaseTypeWrapper ( val ) ) ; }
39775	public void updateFromExtGState ( PdfDictionary extGState ) { updateFromExtGState ( new PdfExtGState ( extGState ) ) ; }
39788	public static void main ( final String [ ] args ) { final int retCode = mainRebuildIndex ( args , _BOOL , System . out , System . err ) ; if ( retCode != _NUM ) { System . exit ( filterExitCode ( retCode ) ) ; } }
39796	public ModifyOperation processModify ( ModifyChangeRecordEntry modifyRecord ) { return processModify ( ByteString . valueOfObject ( modifyRecord . getDN ( ) ) , modifyRecord . getModifications ( ) , _NULL ) ; }
39822	private void initialize ( URI p_other ) { m_scheme = p_other . getScheme ( ) ; m_userinfo = p_other . getUserinfo ( ) ; m_host = p_other . getHost ( ) ; m_port = p_other . getPort ( ) ; m_path = p_other . getPath ( ) ; m_queryString = p_other . getQueryString ( ) ; m_fragment = p_other . getFragment ( ) ; }
39838	public static ListSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > p , SetRelationDefinition < ? , ? > r ) throws ArgumentException { return new ListSubCommandHandler ( parser , p , r , r . getPluralName ( ) , r . getUserFriendlyPluralName ( ) ) ; }
39841	public boolean isResourceNameAllowed ( ) { return ( as . isResourceNameAllowed ( ) ) ; }
39842	boolean terminate ( ) { return ( state == _NULL ) || state . terminate ( ) ; }
39859	public boolean hasUserAttribute ( AttributeType attributeType ) { return hasAttribute ( userAttributes , attributeType ) ; }
39901	public SetupParameters backendType ( String backendType ) { this . backendType = backendType ; return this ; }
39945	@ Override protected void finalize ( ) throws Throwable { try { NativeCollation . closeElements ( address ) ; } finally { super . finalize ( ) ; } }
39988	public static ComponentUI createUI ( JComponent c ) { return new SynthComboBoxUI ( ) ; }
39996	protected void flushAckAndClearBuffer ( ) throws IOException { engine . flush ( ) ; for ( Tuple t : buffer ) { collector . ack ( t ) ; } buffer . clear ( ) ; }
40017	public static DataProviderID newInternalID ( final String name ) { return new DataProviderID ( name , _BOOL ) ; }
40029	void checkEndCode ( ) { if ( endCode ) { throw new IllegalStateException ( _CHAR Can not visit instructions after visitMaxs has been called . '' ) ; } }
40030	public static boolean isNativeCodeEnabled ( ) { return nativeEnabled ; }
40035	public AMActivityAuditEventBuilder realm ( String value ) { putRealm ( jsonValue , value ) ; return this ; }
40038	public double distanceSquared ( Vector o ) { return NumberConversions . square ( x - o . x ) + NumberConversions . square ( y - o . y ) + NumberConversions . square ( z - o . z ) ; }
40097	private String convertIntToIntString ( int quoteParam ) { String quoteParamString = ( new Integer ( quoteParam ) ) . toString ( ) ; return quoteParamString ; }
40213	public void sendTopoInfoToAll ( ) { enqueueTopoInfoToAllExcept ( _NULL ) ; }
40226	public void beginPaint ( ) { }
40265	public boolean isUnderflow ( ) { return this . type == TYPE_UNDERFLOW ; }
40270	public static boolean isParentRealm ( String parentPath , String path ) { parentPath = normalizeRealm ( parentPath ) . toLowerCase ( ) ; path = normalizeRealm ( path ) . toLowerCase ( ) ; if ( path . startsWith ( parentPath ) ) { path = path . substring ( parentPath . length ( ) ) ; return path . startsWith ( _CHAR / _CHAR ) ; } return _BOOL ; }
40307	private static HttpHost [ ] toChain ( HttpHost proxy ) { if ( proxy == _NULL ) return _NULL ; return new HttpHost [ ] { proxy } ; }
40309	public void quickPop ( int n ) { m_firstFree -= n ; }
40314	public boolean hasString ( ) { return _BOOL ; }
40359	public static boolean isConsumerCapability ( Capability < ? > capability ) { return capability == TeslaCapabilities . CAPABILITY_CONSUMER ; }
40383	public Object readObject ( ) { return ( parsingComplete ( ) ) ? this . array [ this . index ++ ] : _NULL ; }
40454	public SubResourceSingleton isReadOnly ( final boolean readOnly ) { isReadOnly = readOnly ; return this ; }
40458	protected void processKeyEvent ( KeyEvent evt ) { MenuSelectionManager . defaultManager ( ) . processKeyEvent ( evt ) ; if ( evt . isConsumed ( ) ) { return ; } super . processKeyEvent ( evt ) ; }
40459	public PlaLineInt plaline_last_prev ( ) { return plaline ( plaline_len ( - _NUM ) ) ; }
40467	static boolean isNativeCodeLoaded ( ) { return nativeCodeLoaded ; }
40496	@ AfterClass public void tearDown ( ) throws Exception { deleteAttrsEntry ( configDN , dsConfigBaseDN ) ; deleteAttrsEntry ( configDN , dsConfigEnforceIntegrity ) ; deleteAttrsEntry ( configDN , dsConfigAttrFiltMapping ) ; replaceAttrEntry ( configDN , dsConfigAttrType , _CHAR seeAlso _CHAR ) ; replaceAttrEntry ( configDN , dsConfigUpdateInterval , _CHAR _NUM seconds _CHAR ) ; TestCaseUtils . clearBackend ( _CHAR userRoot _CHAR ) ; }
40503	public boolean isBefore ( Year other ) { return year < other . year ; }
40511	private void update ( ServerState serverState ) { this . serverState . update ( serverState ) ; }
40523	public boolean isConfigBackend ( ) { return isConfigBackend ; }
40531	public void removeTagDefinition ( int tagId ) { getTagInfo ( ) . delete ( tagId ) ; }
40578	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
40588	public static PasswordType checkPasswordType ( AttributeType attrType ) { final String syntaxOID = attrType . getSyntax ( ) . getOID ( ) ; if ( syntaxOID . equals ( SYNTAX_AUTH_PASSWORD_OID ) ) { return PasswordType . AUTH_PASSWORD ; } else if ( attrType . hasName ( _CHAR userPassword _CHAR ) || syntaxOID . equals ( SYNTAX_USER_PASSWORD_OID ) ) { return PasswordType . USER_PASSWORD ; } return PasswordType . NOT_A_PASSWORD ; }
40594	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery ) ; }
40614	private String convertIntToIntString ( int quoteParam ) { String quoteParamString = ( new Integer ( quoteParam ) ) . toString ( ) ; return quoteParamString ; }
40645	public void addFile ( String filename ) { addFile ( filename , filename ) ; }
40658	public boolean startsWith ( XMLString prefix ) { return startsWith ( prefix , _NUM ) ; }
40659	private static int checkTypeArgument ( final String signature , int pos ) { char c = getChar ( signature , pos ) ; if ( c == _CHAR ) { return pos + _NUM ; } else if ( c == _CHAR || c == _CHAR ) { pos ++ ; } return checkFieldTypeSignature ( signature , pos ) ; }
40674	void updateValue ( Object value ) { super . updateValue ( value ) ; updateMaskIfNecessary ( ) ; }
40679	private static boolean isDirectory ( URL url ) { String file = url . getFile ( ) ; return ( file . length ( ) > _NUM && file . charAt ( file . length ( ) - _NUM ) == _CHAR ) ; }
40687	public void generateImportSteps ( ) throws EntitlementException { indexingApplicationsExisting ( ) ; indexingApplicationsReadFromFile ( ) ; indexingResourceTypesReadFromFile ( ) ; indexingResourceTypesExisting ( ) ; assignApplicationTypeToApplication ( ) ; generateResourceTypeImportSteps ( ) ; resolveResourceTypeDependencies ( ) ; generatePrivilegeImportSteps ( ) ; generateApplicationImportSteps ( ) ; }
40709	public void removeEnvironment ( String name ) { try { envCtx . unbind ( name ) ; } catch ( NamingException e ) { log . error ( sm . getString ( _CHAR naming . unbindFailed _CHAR , e ) ) ; } }
40729	public static ListSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > p , InstantiableRelationDefinition < ? , ? > r ) throws ArgumentException { return new ListSubCommandHandler ( parser , p , r , r . getPluralName ( ) , r . getUserFriendlyPluralName ( ) ) ; }
40730	public static SearchFilter createPresenceFilter ( AttributeType attributeType ) { return new SearchFilter ( FilterType . PRESENT , _NULL , _NULL , attributeType , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
40746	public void paintCheckBoxMenuItemBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
40771	public void makeSource ( ) throws Exception { this . readLabel ( readLabelFiles ) ; this . prepTrainData ( ) ; this . prepTestData ( ) ; }
40794	public static Pair < X509Certificate , PrivateKey > generateCertificate ( String commonName , String algorithm , int keySize , String signatureAlgorithm , String validFrom , String validTo ) throws Exception { return generateCertificate ( commonName , _CHAR None _CHAR , _CHAR None _CHAR , _CHAR None _CHAR , _CHAR None _CHAR , _CHAR None _CHAR , algorithm , keySize , signatureAlgorithm , validFrom , validTo ) ; }
40816	@ Override public void close ( ) throws IOException { super . close ( ) ; closed = _BOOL ; }
40823	public void ancestorResized ( HierarchyEvent e ) { }
40827	@ Override public void invoke ( Request request , Response response ) throws IOException , ServletException { getNext ( ) . invoke ( request , response ) ; }
40834	public int hashCode ( ) { return m_dialogState ; }
40861	private static void printVersion ( OutputStream outputStream ) throws IOException { outputStream . write ( PRINTABLE_VERSION_STRING . getBytes ( ) ) ; String extensionInformation = ConfigurationFramework . getPrintableExtensionInformation ( getServerRoot ( ) , getInstanceRoot ( ) ) ; if ( extensionInformation != _NULL ) { outputStream . write ( extensionInformation . getBytes ( ) ) ; } }
40863	public Builder withDelegateFactory ( String delegateFactory ) { config . setDelegateFactory ( delegateFactory ) ; return this ; }
40880	public void addRestrictedDomain ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return ; } if ( restrictedDomains == _NULL ) { restrictedDomains = new ArrayList < > ( ) ; } restrictedDomains . add ( domainName ) ; }
40919	public static CompareRequest unmodifiableCompareRequest ( final CompareRequest request ) { if ( request instanceof UnmodifiableCompareRequestImpl ) { return request ; } return new UnmodifiableCompareRequestImpl ( request ) ; }
40956	public boolean isComplete ( ) { return this . complete ; }
40965	public static void connectionClosed ( ClientConnection clientConnection ) { synchronized ( directoryServer . establishedConnections ) { directoryServer . establishedConnections . remove ( clientConnection ) ; directoryServer . currentConnections -- ; } }
40982	protected ImageView createBackSideView ( int height ) { ImageView imageView = new ImageView ( getContext ( ) ) ; imageView . setBackgroundColor ( mBackSideColor ) ; imageView . setLayoutParams ( new LayoutParams ( ViewGroup . LayoutParams . MATCH_PARENT , height ) ) ; return imageView ; }
40993	public boolean hasString ( ) { return ( _NULL != m_strCache ) ; }
40997	public static Cookie newCookie ( String name , String value ) { return newCookie ( name , value , defAge , _NULL , _NULL ) ; }
41002	public static void deregisterAlertGenerator ( AlertGenerator alertGenerator ) { DN componentDN = alertGenerator . getComponentEntryDN ( ) ; JMXMBean mBean = directoryServer . mBeans . get ( componentDN ) ; if ( mBean != _NULL ) { mBean . removeAlertGenerator ( alertGenerator ) ; } }
41014	public int hashCode ( ) { return getStringValue ( ) . hashCode ( ) ; }
41028	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery , projection ) ; }
41055	@ SuppressWarnings ( _CHAR unused _CHAR ) protected void onDraw ( Canvas canvas ) { }
41089	public static BinaryValue createBase64 ( byte [ ] bytes ) { BinaryValue value = new BinaryValue ( ) ; value . type = Type . BASE64_STRING ; value . bytes = bytes ; value . base64 = value . getBase64 ( ) ; value . hashCode = value . base64 . hashCode ( ) ; return value ; }
41091	public boolean isCanceled ( ) { return isCanceled ; }
41113	public static int e ( String tag , String msg , Throwable tr ) { return Log . e ( tag , msg , tr ) ; }
41121	static boolean orgAliasMappedResourcesEnabled ( ) { return orgAliasMappedResourcesEnabledFlag ; }
41149	public static boolean isSuppressed ( ) { return token != _NULL ; }
41163	public void reset ( ) { count = _NUM ; totalTime = _NUM ; }
41182	public E removeFirst ( ) { final Node < E > f = first ; if ( f == _NULL ) throw new NoSuchElementException ( ) ; return unlinkFirst ( f ) ; }
41190	private boolean isDisplayedEntryRemote ( BasicNode node ) { if ( isFollowReferrals ( ) ) { if ( node == rootNode ) { return _BOOL ; } if ( node . getRemoteUrl ( ) != _NULL ) { return _BOOL ; } final BasicNode parent = ( BasicNode ) node . getParent ( ) ; if ( parent != _NULL ) { return isDisplayedEntryRemote ( parent ) ; } } return _BOOL ; }
41191	boolean isEnabled ( ) { return this . isEnabled ; }
41219	private JsonValue performRead ( String resourceID ) throws ResourceException { JsonValue readResults = _NULL ; readResults = connectionFactory . getConnection ( ) . read ( taskScannerContext . getContext ( ) , Requests . newReadRequest ( resourceID ) ) . getContent ( ) ; return readResults ; }
41277	public static boolean isPrivilegedPort ( int port ) { return SetupUtils . isPrivilegedPort ( port ) ; }
41300	public static MatchedValuesFilter createPresentFilter ( String rawAttributeType ) { Reject . ifNull ( rawAttributeType ) ; return new MatchedValuesFilter ( PRESENT_TYPE , rawAttributeType , _NULL , _NULL , _NULL , _NULL , _NULL ) ; }
41339	public static Set < DN > asSetOfDN ( Entry entry , String attrDesc ) { Attribute attr = entry . getAttribute ( attrDesc ) ; return attr != _NULL ? attr . parse ( ) . asSetOfDN ( ) : Collections . < DN > emptySet ( ) ; }
41372	@ Override public final String toString ( ) { return appendDesc ( new StringBuilder ( _NUM ) ) . toString ( ) ; }
41393	@ Override public void run ( ) { try { Connection con = get ( ) ; con . close ( ) ; } catch ( ExecutionException ex ) { } catch ( Exception x ) { ConnectionPool . log . error ( _CHAR Unable to cancel ConnectionFuture . '' , x ) ; } }
41399	public static ComponentUI createUI ( JComponent c ) { return new SynthTableUI ( ) ; }
41433	public AnnotationVisitor visitAnnotationDefault ( ) { if ( mv != _NULL ) { return mv . visitAnnotationDefault ( ) ; } return _NULL ; }
41448	protected void clearError ( ) { synchronized ( lock ) { ioError = _BOOL ; } }
41449	public void completePendingPageChanges ( ) { if ( ! mPendingAnimations . isEmpty ( ) ) { HashMap < View , Runnable > pendingViews = new HashMap < > ( mPendingAnimations ) ; for ( Map . Entry < View , Runnable > e : pendingViews . entrySet ( ) ) { e . getKey ( ) . animate ( ) . cancel ( ) ; e . getValue ( ) . run ( ) ; } } }
41463	public boolean useSecureConnection ( ) { return connectionType == LDAPS ; }
41475	@ Override public boolean ready ( ) throws IOException { return _BOOL ; }
41544	public static DeleteRequest unmodifiableDeleteRequest ( final DeleteRequest request ) { if ( request instanceof UnmodifiableDeleteRequestImpl ) { return request ; } return new UnmodifiableDeleteRequestImpl ( request ) ; }
41554	public boolean keepStats ( ) { return currentConfig . isKeepStats ( ) ; }
41555	@ Override public byte [ ] unwrap ( final byte [ ] incoming , final int offset , final int len ) throws LdapException { final byte [ ] copy = new byte [ len ] ; System . arraycopy ( incoming , offset , copy , _NUM , len ) ; return copy ; }
41559	public boolean orgTemplateExists ( String serviceName ) throws AMException , SSOException { ServiceConfig sc = AMServiceUtils . getOrgConfig ( token , entryDN , serviceName ) ; return ( sc != _NULL ) ; }
41594	@ Override public boolean isBorderOpaque ( ) { return ( outsideBorder == _NULL || outsideBorder . isBorderOpaque ( ) ) && ( insideBorder == _NULL || insideBorder . isBorderOpaque ( ) ) ; }
41613	@ Override public Promise < AuthStatus , AuthenticationException > secureResponse ( MessageInfoContext messageInfo , Subject serviceSubject ) { return newResultPromise ( SEND_SUCCESS ) ; }
41634	public static Name upperCamel ( String ... pieces ) { return upperCamelInternal ( AcronymMode . CAMEL_CASE , pieces ) ; }
41647	public boolean isAnswerBlank ( ) { return missingData ; }
41655	public ModifyOperation processModify ( DN entryDN , List < Modification > modifications , List < Control > controls ) { ModifyOperationBasis modifyOperation = new ModifyOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , entryDN , modifications ) ; modifyOperation . setInternalOperation ( _BOOL ) ; modifyOperation . run ( ) ; return modifyOperation ; }
41672	public static boolean isCosmeticRule ( String ruleText ) { return StringUtils . isEmpty ( ruleText ) || ruleText . contains ( MASK_CSS_RULE ) || ruleText . contains ( MASK_CSS_EXCEPTION_RULE ) || ruleText . contains ( MASK_CSS_INJECT_RULE ) || ruleText . contains ( MASK_CSS_INJECT_EXCEPTION_RULE ) || ruleText . contains ( MASK_SCRIPT_RULE ) || ruleText . contains ( MASK_CONTENT_RULE ) ; }
41711	@ Override public void write ( int b ) throws IOException { Streams . writeSingleByte ( this , b ) ; }
41720	public boolean hasString ( ) { return _BOOL ; }
41725	public void addOfflineReplica ( DN baseDN , CSN offlineCSN ) { offlineReplicas . update ( baseDN , offlineCSN ) ; }
41745	private void addListeners ( Container container ) { container . addContainerListener ( this ) ; container . addLifecycleListener ( this ) ; for ( Container child : container . findChildren ( ) ) { addListeners ( child ) ; } }
41748	public static void deregisterAlertGenerator ( AlertGenerator alertGenerator ) { DirectoryServer . deregisterAlertGenerator ( alertGenerator ) ; }
41755	public boolean isLeafNode ( ) { return ( children . size ( ) == _NUM ) ; }
41760	public boolean canBeEncoded ( ) { for ( Pair entry : ( ( ValuePairs ) value ) . mapping ) { TextEncodedStringNullTerminated next = new TextEncodedStringNullTerminated ( identifier , frameBody , entry . getValue ( ) ) ; if ( ! next . canBeEncoded ( ) ) { return _BOOL ; } } return _BOOL ; }
41768	private void removeConstraints ( Component comp ) { comptable . remove ( comp ) ; }
41770	public boolean isEmpty ( ) { return count == _NUM ; }
41781	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery ) ; }
41784	public static NSObject parse ( InputStream is ) throws ParserConfigurationException , IOException , SAXException , PropertyListFormatException , ParseException { DocumentBuilder docBuilder = getDocBuilder ( ) ; Document doc = docBuilder . parse ( is ) ; return parse ( doc ) ; }
41785	public boolean isValid ( ) { checkState ( ) ; return invalidUsers . isEmpty ( ) ; }
41787	public AttributeSet parseDeclaration ( String string ) { try { return parseDeclaration ( new StringReader ( string ) ) ; } catch ( IOException ioe ) { } return _NULL ; }
41808	public static Control createDelayControl ( long delay ) { return new DelayRequestControl ( _BOOL , delay ) ; }
41828	public static StringArgument adminUidHiddenArgument ( final LocalizableMessage description ) throws ArgumentException { return adminUidArgument ( _BOOL , description ) ; }
41858	public void publishHeartbeat ( DN baseDN , CSN heartbeatCSN ) { if ( ! predicate . isECLEnabledDomain ( baseDN ) ) { return ; } final CSN oldestCSNBefore = getOldestLastAliveCSN ( ) ; lastAliveCSNs . update ( baseDN , heartbeatCSN ) ; tryNotify ( oldestCSNBefore ) ; }
41859	private static int checkTypeArguments ( final String signature , int pos ) { pos = checkChar ( _CHAR , signature , pos ) ; pos = checkTypeArgument ( signature , pos ) ; while ( getChar ( signature , pos ) != _CHAR ) { pos = checkTypeArgument ( signature , pos ) ; } return pos + _NUM ; }
41860	public XMLString trim ( ) { return fixWhiteSpace ( _BOOL , _BOOL , _BOOL ) ; }
41877	@ Override public void printTag ( PrintWriter aWriter , int indent , Object bean , StoreDescription aDesc ) throws Exception { aWriter . print ( _CHAR < _CHAR ) ; aWriter . print ( aDesc . getTag ( ) ) ; storeConnectorAttribtues ( aWriter , indent , bean , aDesc ) ; aWriter . println ( _CHAR / > _CHAR ) ; }
41920	@ Override public boolean is_IntOctagon ( ) { for ( int index = _NUM ; index < lines_size ( ) ; ++ index ) { PlaLineInt curr_line = tline_get ( index ) ; if ( ! curr_line . is_multiple_of_45_degree ( ) ) return _BOOL ; if ( ! corner_is_bounded ( index ) ) return _BOOL ; } return _BOOL ; }
41923	public JsonValue build ( ) { if ( BuilderType . JSON_SCHEMA == builderType ) { Reject . ifTrue ( properties . isEmpty ( ) , _CHAR There must be at least one property _CHAR ) ; } removePropertiesIfEmpty ( _CHAR definitions _CHAR , jsonValue ) ; removePropertiesIfEmpty ( _CHAR required _CHAR , jsonValue ) ; return jsonValue ; }
41944	public DeleteOperation processDelete ( ByteString rawEntryDN ) { return processDelete ( rawEntryDN , _NULL ) ; }
41948	static boolean usingOcean ( ) { return ( getCurrentTheme ( ) instanceof OceanTheme ) ; }
41988	public ModifyOperation processModify ( ByteString rawEntryDN , List < RawModification > rawModifications ) { return processModify ( rawEntryDN , rawModifications , _NULL ) ; }
42026	private boolean isDeployAllowed ( String user ) { if ( deny != _NULL && deny . matcher ( user ) . matches ( ) ) { return _BOOL ; } if ( allow != _NULL ) { if ( allow . matcher ( user ) . matches ( ) ) { return _BOOL ; } else { return _BOOL ; } } return _BOOL ; }
42040	public void vetoableChange ( PropertyChangeEvent event ) throws PropertyVetoException { getListener ( ) . vetoableChange ( event ) ; }
42077	public String toString ( ) { return ( resourceMatch ) ; }
42124	public List < String > methodDescriptionComments ( Method method ) { return splitToLines ( getTrimmedDocs ( method ) ) ; }
42129	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
42134	public void flush ( ) { if ( compressionStream != _NULL ) { try { if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR Flushing the compression stream ! _CHAR ) ; } compressionStream . flush ( ) ; } catch ( IOException e ) { if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR Ignored exception while flushing gzip filter '' , e ) ; } } } }
42153	public synchronized boolean isEmpty ( ) { return count == _NUM ; }
42155	protected void invalidate ( boolean first ) { super . invalidate ( first ) ; getParent ( ) . invalidate ( _BOOL ) ; }
42168	private long toEpochNano ( ) { long nod = time . toNanoOfDay ( ) ; long offsetNanos = offset . getTotalSeconds ( ) * NANOS_PER_SECOND ; return nod - offsetNanos ; }
42207	public static ComponentUI createUI ( JComponent b ) { return new SynthRadioButtonUI ( ) ; }
42212	public boolean ready ( ) throws IOException { return in . ready ( ) ; }
42227	@ Override public void dump ( final String prefix , final FileDescriptor fd , final PrintWriter writer , final String [ ] args ) { delegate . dump ( prefix , fd , writer , args ) ; }
42253	public AccountService retrieveAccount ( String id , Handler < AsyncResult < Account >> resultHandler ) { delegate . retrieveAccount ( id , resultHandler ) ; return this ; }
42267	public boolean isChangeEnabled ( ) { return change . isEnabled ( ) ; }
42270	public void addShutdownListener ( ShutdownListener listener , ShutdownPriority priority ) throws IllegalMonitorStateException { if ( acquireValidLock ( ) ) { try { removeShutdownListener ( listener ) ; listeners [ priority . getIntValue ( ) - _NUM ] . add ( listener ) ; } finally { releaseLockAndNotify ( ) ; } } else { throw new IllegalMonitorStateException ( _CHAR Failed to acquire lock registering the ShutdownListener _CHAR ) ; } }
42292	public static boolean containsServerFinishedMessage ( TlsContext tlsContext ) { return ( getServerFinishedMessagePosition ( tlsContext ) != - _NUM ) ; }
42315	public void addErrorCommandToRoot ( final Element rootElement , final int errorNum , final String errorText ) { Element element = this . getDocument ( ) . createElement ( _CHAR Error _CHAR ) ; element . setAttribute ( _CHAR number _CHAR , String . valueOf ( errorNum ) ) ; if ( errorText != _NULL ) { } rootElement . appendChild ( element ) ; }
42349	BigInteger copy ( ) { prepareJavaRepresentation ( ) ; int [ ] copyDigits = new int [ numberLength ] ; System . arraycopy ( digits , _NUM , copyDigits , _NUM , numberLength ) ; return new BigInteger ( sign , numberLength , copyDigits ) ; }
42379	public int size ( ) { return children . size ( ) ; }
42441	public static void deregisterInternalPlugin ( InternalDirectoryServerPlugin plugin ) { directoryServer . pluginConfigManager . deregisterInternalPlugin ( plugin ) ; }
42465	@ Override public void startActivityFromFragment ( final Fragment fragment , final Intent intent , final int requestCode , @ Nullable final Bundle options ) { super . startActivityFromFragment ( fragment , intent , requestCode , options ) ; }
42477	public CompareOperation processCompare ( ByteString rawEntryDN , String attributeType , ByteString assertionValue , List < Control > controls ) { CompareOperationBasis compareOperation = new CompareOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , rawEntryDN , attributeType , assertionValue ) ; compareOperation . setInternalOperation ( _BOOL ) ; compareOperation . run ( ) ; return compareOperation ; }
42481	public void adjust ( ServerState state ) { for ( CSN csn : state ) { adjust ( csn ) ; } }
42482	public boolean hasOperationalAttribute ( AttributeType attributeType ) { return hasAttribute ( operationalAttributes , attributeType ) ; }
42539	void add ( ByteString addedValue , AttributeType attrType , CSN csn ) { update ( csn , new AttrValueHistorical ( addedValue , attrType , csn , _NULL ) ) ; }
42544	static String swapRealmTag ( String realm , String value ) { return value . replace ( REALM_NAME_TAG , realm ) ; }
42550	public void paintInternalFrameTitlePaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
42565	void incrementUnindexedSearchCount ( ) { if ( filterUseEnabled ) { unindexedSearchCount . getAndIncrement ( ) ; } }
42573	protected void exiting ( String methodName ) { logger . exiting ( className , methodName ) ; }
42574	public ImmutableList < A > toList ( ) { shared = _BOOL ; return elements ; }
42596	public static ScheduleType createLaunchNow ( ) { ScheduleType schedule = new ScheduleType ( ) ; schedule . type = Type . LAUNCH_NOW ; schedule . toString = schedule . calculateToString ( ) ; schedule . hashCode = schedule . calculateHashCode ( ) ; return schedule ; }
42599	public static String readString ( DataInput di , int charsToRead ) throws IOException { final byte [ ] buf = new byte [ charsToRead ] ; di . readFully ( buf ) ; return new String ( buf ) ; }
42647	@ Override protected synchronized void afterRead ( int n ) { if ( n != - _NUM ) { this . count += n ; } }
42666	public < T extends IElement > Cell add ( BlockElement < T > element ) { childElements . add ( element ) ; return this ; }
42706	public static SearchFilter createApproximateFilter ( AttributeType attributeType , Set < String > attributeOptions , ByteString assertionValue ) { return new SearchFilter ( FilterType . APPROXIMATE_MATCH , _NULL , _NULL , attributeType , attributeOptions , assertionValue , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
42717	public void pause ( ) { setPaused ( _BOOL ) ; }
42789	public static int supplemental ( char h , char l ) { return ( h - _NUM ) * _NUM + ( l - _NUM ) + _NUM ; }
42799	public static boolean isHexDigit ( final char c ) { final ASCIICharProp cp = ASCIICharProp . valueOf ( c ) ; return cp != _NULL ? cp . isHexDigit ( ) : _BOOL ; }
42807	@ Override public byte [ ] wrap ( final byte [ ] outgoing , final int offset , final int len ) throws LdapException { final byte [ ] copy = new byte [ len ] ; System . arraycopy ( outgoing , offset , copy , _NUM , len ) ; return copy ; }
42817	public int versionMinorNumber ( ) { return Integer . valueOf ( properties . getProperty ( _CHAR version . minor _CHAR ) ) ; }
42836	private void waitUntilReadable ( ) throws IOException { readTimeout . enter ( ) ; try { while ( readBuffer . size ( ) == _NUM && ! finished && ! closed && errorCode == _NULL ) { waitForIo ( ) ; } } finally { readTimeout . exitAndThrowIfTimedOut ( ) ; } }
42844	public Entry filteredCopyOf ( final Entry entry ) { return new LinkedHashMapEntry ( filteredViewOf ( entry ) ) ; }
42878	public void addSubSchema ( String name , ServiceSchemaModificationWrapper subSchema ) { subSchemas . put ( name , subSchema ) ; }
42950	@ Override public void globalConfigChanged ( String serviceName , String version , String groupName , String serviceComponent , int type ) { updateSettings ( ) ; }
42970	public void run ( ) { boolean periodic = isPeriodic ( ) ; if ( ! canRunInCurrentRunState ( periodic ) ) cancel ( _BOOL ) ; else if ( ! periodic ) ScheduledFutureTask . super . run ( ) ; else if ( ScheduledFutureTask . super . runAndReset ( ) ) { setNextRunTime ( ) ; reExecutePeriodic ( outerTask ) ; } }
42990	protected void paint ( SynthContext context , Graphics g ) { }
42992	public void shutdown ( ) { if ( shutdown ) { return ; } shutdown = _BOOL ; StaticUtils . close ( listenSocket ) ; StaticUtils . close ( session ) ; try { join ( ) ; } catch ( InterruptedException ie ) { } }
42995	public boolean isAfter ( MonthDay other ) { return compareTo ( other ) > _NUM ; }
43048	public static RequirementsBuilder newInstance ( String description ) { return new RequirementsBuilder ( BuilderType . JSON_SCHEMA , description ) ; }
43051	public static < C extends ConfigurationClient , S extends Configuration > CreateSubCommandHandler < C , S > create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > p , InstantiableRelationDefinition < C , S > r ) throws ArgumentException { return new CreateSubCommandHandler < > ( parser , p , r , r . getNamingPropertyDefinition ( ) , p . child ( r , _CHAR DUMMY _CHAR ) ) ; }
43070	public static RequirementsBuilder newArray ( RequirementsBuilder builder ) { return newArray ( _NUM , builder , _NULL ) ; }
43111	@ Override public void addInitParameter ( String name , String value ) { parametersLock . writeLock ( ) . lock ( ) ; try { parameters . put ( name , value ) ; } finally { parametersLock . writeLock ( ) . unlock ( ) ; } fireContainerEvent ( _CHAR addInitParameter _CHAR , name ) ; }
43113	public boolean isValueQuoted ( ) { return isQuotedString ; }
43129	public void paintInternalFrameTitlePaneBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
43163	static void checkSupportedExtendedOperations ( Connection connection ) throws LdapException { extendedOperations = RootDSE . readRootDSE ( connection ) . getSupportedExtendedOperations ( ) ; }
43189	public static Event35Log . Builder newBuilder ( Event35Log . Builder other ) { return new Event35Log . Builder ( other ) ; }
43209	private byte [ ] calculateConfigDigest ( ) throws DirectoryException { try ( InputStream inputStream = new FileInputStream ( configFile ) ) { return calculateDigest ( inputStream ) ; } catch ( Exception e ) { LocalizableMessage message = ERR_CONFIG_CANNOT_CALCULATE_DIGEST . get ( configFile , stackTraceToSingleLineString ( e ) ) ; throw new DirectoryException ( DirectoryServer . getServerErrorResultCode ( ) , message , e ) ; } }
43246	public static Control createDisconnectControl ( String section ) { return new DisconnectClientControl ( _BOOL , section ) ; }
43255	private void signalRemove ( InternalSession session , SessionEventType event ) { sessionEventBroker . onEvent ( new InternalSessionEvent ( session , event ) ) ; sessionLogging . logEvent ( session . toSessionInfo ( ) , event ) ; session . setState ( SessionState . DESTROYED ) ; sendEvent ( session , event ) ; }
43344	public final void popQuick ( ) { m_firstFree -- ; m_map [ m_firstFree ] = _NULL ; }
43359	public Builder collective ( boolean isCollective ) { this . isCollective = isCollective ; return this ; }
43412	public int autoroute_pass ( int p_pass_no ) { try { return autoroute_pass_try ( p_pass_no ) ; } catch ( Exception exc ) { hdlg . userPrintln ( classname + _CHAR autoroute_pass _CHAR , exc ) ; air_line = _NULL ; return _NUM ; } }
43426	public boolean isHeadOfBed ( ) { return ( getData ( ) & _NUM ) == _NUM ; }
43451	public boolean startsWith ( String prefix ) { return startsWith ( prefix , _NUM ) ; }
43482	public View create ( Element elem ) { return new PasswordView ( elem ) ; }
43498	public void displayMultiple ( ) { ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , MULTIPLE_SELECTED ) ; }
43512	protected void processKeyEvent ( KeyEvent evt ) { MenuSelectionManager . defaultManager ( ) . processKeyEvent ( evt ) ; if ( evt . isConsumed ( ) ) return ; super . processKeyEvent ( evt ) ; }
43526	private static String unqualify ( String path ) { path = path . replace ( _CHAR , _CHAR ) ; return path . substring ( path . lastIndexOf ( _CHAR ) + _NUM ) ; }
43542	public byte [ ] decrypt ( byte [ ] data ) throws GeneralSecurityException , CryptoManagerException { return cryptoManager . decrypt ( data ) ; }
43561	public void put ( byte [ ] buffer , int offset , int count ) { if ( count > ( bytes . length - this . contentLength ) ) { throw new IllegalArgumentException ( _CHAR buffer is too large _CHAR ) ; } System . arraycopy ( buffer , offset , bytes , this . contentLength , count ) ; this . contentLength += count ; }
43595	public boolean hasAttributeType ( AttributeType attributeType ) { for ( AVA ava : avas ) { if ( ava . getAttributeType ( ) . equals ( attributeType ) ) { return _BOOL ; } } return _BOOL ; }
43638	protected void paint ( SynthContext context , Graphics g ) { }
43693	public void mark ( final Label label ) { mv . visitLabel ( label ) ; }
43716	public void paintSliderThumbBorder ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintBorder ( context , g , x , y , w , h , orientation ) ; }
43721	@ Before public void beforeTestMethodAction ( ) { }
43723	public int size ( ) { return _NUM + payload . length ; }
43745	public ModifyOperation processModify ( ModifyRequest modifyRequest ) { return processModify ( ByteString . valueOfObject ( modifyRequest . getName ( ) ) , toRawModifications ( modifyRequest . getModifications ( ) ) , to ( modifyRequest . getControls ( ) ) ) ; }
43747	public RequirementsBuilder addRequireProperty ( String name , String description ) { addRequireProperty ( name , _CHAR string _CHAR , description ) ; return this ; }
43754	public String toString ( org . w3c . dom . Node n ) { int nodeHandle = getDTMHandleFromNode ( n ) ; DTM dtm = getDTM ( nodeHandle ) ; XMLString strVal = dtm . getStringValue ( nodeHandle ) ; return strVal . toString ( ) ; }
43755	@ Override public void recycle ( ) { }
43788	public static int resetLDIFImportCount ( ) { return ldifImportCounter . getAndSet ( _NUM ) ; }
43812	@ Override public boolean isSuffix ( ) { return isSuffix ; }
43818	public int previous ( ) { return this . icuIterator . previous ( ) ; }
43856	public static ComponentUI createUI ( JComponent c ) { return new SynthToolBarUI ( ) ; }
43901	public static Iterator < Recipe > recipeIterator ( ) { return server . recipeIterator ( ) ; }
43914	@ Override public void recycle ( ) { compressionStream = _NULL ; }
43936	private void updateDataArray ( ) { TreeSet < TaskEntry > sortedSet = new TreeSet < > ( this ) ; sortedSet . addAll ( data ) ; dataSourceArray . clear ( ) ; dataSourceArray . addAll ( sortedSet ) ; }
43944	public boolean isEmpty ( ) { return attrMap . isEmpty ( ) ; }
43946	public boolean isShutdownInitiated ( ) { return shutdownInitiated ; }
43965	protected void init ( ) { Digester contextDigester = createContextDigester ( ) ; contextDigester . getParser ( ) ; if ( log . isDebugEnabled ( ) ) { log . debug ( sm . getString ( _CHAR contextConfig . init _CHAR ) ) ; } context . setConfigured ( _BOOL ) ; ok = _BOOL ; contextConfig ( contextDigester ) ; }
43994	protected static PdfLayer createTitleSilent ( String title , PdfDocument document ) { if ( title == _NULL ) throw new IllegalArgumentException ( _CHAR Invalid title argument _CHAR ) ; PdfLayer layer = new PdfLayer ( document ) ; layer . title = title ; return layer ; }
43995	public boolean isTemporary ( ) { return temporary ; }
43996	final boolean isShared ( ) { return nextWaiter == SHARED ; }
43999	private boolean confirmToUpdateRemote ( ) throws ClientException { return askConfirmation ( INFO_CLI_UNINSTALL_CONFIRM_UPDATE_REMOTE . get ( ) , _BOOL , logger ) ; }
44028	private void outputFollowCircleParameter ( float animationFraction ) { outerCirclePaint . setColor ( ( Integer ) argbEvaluator . evaluate ( animationFraction , START_COLOR , END_COLOR ) ) ; outerProgress = animationFraction * _NUM . _NUM + _NUM . _NUM ; innerProgress = animationFraction ; }
44057	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
44107	public boolean isChangeNumberEnabled ( ) { return config . isComputeChangeNumber ( ) ; }
44116	void stopPeriodicLogSigner ( ) { if ( signTask != _NULL ) { Debug . message ( logName + _CHAR Sign Thread being stopped _CHAR ) ; signTask . cancel ( ) ; signTask = _NULL ; } }
44118	public String scheme ( ) { return scheme ; }
44128	private Scope peek ( ) throws JSONException { if ( stack . isEmpty ( ) ) { throw new JSONException ( _CHAR Nesting problem _CHAR ) ; } return stack . get ( stack . size ( ) - _NUM ) ; }
44215	public static List < Foo > toModels ( FooSoap [ ] soapModels ) { if ( soapModels == _NULL ) { return _NULL ; } List < Foo > models = new ArrayList < Foo > ( soapModels . length ) ; for ( FooSoap soapModel : soapModels ) { models . add ( toModel ( soapModel ) ) ; } return models ; }
44242	public void editingCanceled ( ChangeEvent e ) { completeEditing ( _BOOL , _BOOL , _BOOL ) ; }
44294	public boolean is_selected ( ItemSelectionChoice p_choice ) { return sel_array [ p_choice . ordinal ( ) ] ; }
44312	@ After public void afterTest ( ) { f . clearTestTables ( ) ; }
44386	public void inverseSearchAdd ( String unstack ) { inverseSearchAdd ( inverseSearch , stack , unstack ) ; }
44439	@ OnMessage public void echoPongMessage ( PongMessage pm ) { }
44479	public void removeOperations ( Operation operation , Object token ) { if ( isRunning ) { if ( operationHandlerThreadHandler == _NULL ) return ; operationHandlerThreadHandler . removeCallbacks ( new AndroidOperation ( this , operation ) , token ) ; } else { operationQueue . remove ( new AndroidOperation ( this , operation , AndroidOperation . Type . NORMAL , token , _NUM ) ) ; } }
44494	private static String reasonToString ( int reason ) { if ( ( reason > _NUM ) && ( reason < REASON_STRINGS . length ) ) { return REASON_STRINGS [ reason ] ; } return _CHAR Unknown reason _CHAR + reason ; }
44551	public boolean isUnmappable ( ) { return this . type == TYPE_UNMAPPABLE_CHAR ; }
44604	public StaticResponseHandler addHeader ( final String key , final Expression < String > expression ) { headers . add ( key , expression ) ; return this ; }
44617	private void start ( ) { if ( host . getLogger ( ) . isDebugEnabled ( ) ) host . getLogger ( ) . debug ( sm . getString ( _CHAR userConfig . start _CHAR ) ) ; deploy ( ) ; }
44623	public boolean isCookieTimeToLiveEnabled ( ) { return ac . getLoginState ( ) . isCookieTimeToLiveEnabled ( ) ; }
44642	private static Remote exportObject ( Remote obj , ActivatableServerRef sref ) throws RemoteException { if ( obj instanceof Activatable ) { ( ( Activatable ) obj ) . ref = sref ; } return sref . exportObject ( obj , _NULL , _BOOL ) ; }
44693	private void push ( final ClassWriter cw , final String desc ) { int type = type ( cw , desc ) ; if ( type != _NUM ) { push ( type ) ; if ( type == LONG || type == DOUBLE ) { push ( TOP ) ; } } }
44782	public static ManagedObjectDefinitionResource createForProfile ( String profile ) { return new ManagedObjectDefinitionResource ( _CHAR config . profiles . '' + profile ) ; }
44791	public void paintTableHeaderBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
44812	protected SSLEngineResult . HandshakeStatus tasks ( ) { Runnable r = _NULL ; while ( ( r = sslEngine . getDelegatedTask ( ) ) != _NULL ) { r . run ( ) ; } return sslEngine . getHandshakeStatus ( ) ; }
44829	@ Override public boolean accept ( File file ) { return file . isFile ( ) ; }
44859	public double toNumber ( org . w3c . dom . Node n ) { int nodeHandle = getDTMHandleFromNode ( n ) ; DTM dtm = getDTM ( nodeHandle ) ; XString xobj = ( XString ) dtm . getStringValue ( nodeHandle ) ; return xobj . num ( ) ; }
44884	public static ModifyRequest unmodifiableModifyRequest ( final ModifyRequest request ) { if ( request instanceof UnmodifiableModifyRequestImpl ) { return request ; } return new UnmodifiableModifyRequestImpl ( request ) ; }
44934	void bindAuditFilter ( Filter filter ) { auditFilter . setDelegate ( filter ) ; }
44943	private void installDefaults ( ) { setFont ( UIManager . getFont ( _CHAR InternalFrame . titleFont _CHAR , getLocale ( ) ) ) ; }
44944	private static Charset toCharset ( String csn ) throws UnsupportedEncodingException { Objects . requireNonNull ( csn , _CHAR charsetName _CHAR ) ; try { return Charset . forName ( csn ) ; } catch ( IllegalCharsetNameException | UnsupportedCharsetException unused ) { throw new UnsupportedEncodingException ( csn ) ; } }
44966	public String toString ( boolean detailed ) { return _NULL ; }
44983	public boolean isTransientChild ( String classname ) { if ( transientChildren != _NULL ) return transientChildren . contains ( classname ) ; return _BOOL ; }
44993	public void removeResourceTypeUuid ( final String resourceTypeUuid ) { this . resourceTypeUuids . remove ( resourceTypeUuid ) ; }
45008	public static void resetRecipes ( ) { server . resetRecipes ( ) ; }
45009	public boolean isSneaking ( ) { return isSneaking ; }
45026	public static BooleanArgument enableWindowsServiceArgument ( ) throws ArgumentException { return BooleanArgument . builder ( _CHAR enableWindowsService _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_ENABLE_WINDOWS_SERVICE . get ( ) ) . buildArgument ( ) ; }
45041	public boolean supportsCustomEditor ( ) { return _BOOL ; }
45056	public boolean hasName ( final String name ) { for ( final String n : names ) { if ( n . equalsIgnoreCase ( name ) ) { return _BOOL ; } } return _BOOL ; }
45073	public static void move ( String source , String target ) { new File ( source ) . renameTo ( new File ( target ) ) ; }
45090	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
45091	public static ComponentUI createUI ( JComponent c ) { return new SynthViewportUI ( ) ; }
45118	public boolean export_eagle_session_file ( java . io . InputStream p_input_stream , OutputStream p_output_stream ) { if ( board_is_read_only ) return _BOOL ; return SpectraSesToEagle . get_instance ( p_input_stream , p_output_stream , r_board ) ; }
45144	public boolean isAccepted ( ) { return accepted ; }
45148	public void printTitleLine ( ) { startNewLineIfNeeded ( ) ; passFirstSeparatorColumn ( ) ; for ( final Column column : this . printableColumns ) { printCell ( column . title , Alignment . RIGHT ) ; } }
45159	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
45193	public AnnotationVisitor visitAnnotationDefault ( ) { if ( mv != _NULL ) { return mv . visitAnnotationDefault ( ) ; } return _NULL ; }
45206	public Label mark ( ) { Label label = new Label ( ) ; mv . visitLabel ( label ) ; return label ; }
45254	public static boolean hasWhitelist ( ) { return server . hasWhitelist ( ) ; }
45284	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
45336	public static EntryReader newEntryIteratorReader ( final Iterator < Entry > entries ) { return new EntryIteratorReader ( entries ) ; }
45362	public static int resetLDIFExportCount ( ) { return ldifExportCounter . getAndSet ( _NUM ) ; }
45415	public boolean isPaintable ( ) { return _BOOL ; }
45435	public static void registerAlertHandler ( AlertHandler < ? > alertHandler ) { directoryServer . alertHandlers . add ( alertHandler ) ; }
45438	public boolean hasExpired ( ) { if ( maxAge == - _NUM ) { return _BOOL ; } boolean expired = _BOOL ; if ( maxAge <= _NUM ) { expired = _BOOL ; } return expired ; }
45439	public int count ( ) { return buffer . countPackages ( ) ; }
45456	public static ImageData create ( java . awt . Image image , java . awt . Color color , boolean forceBW ) throws java . io . IOException { return AwtImageDataFactory . create ( image , color , forceBW ) ; }
45484	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
45485	public void addMessageDestinationRef ( MessageDestinationRef mdr ) { namingResources . addMessageDestinationRef ( mdr ) ; fireContainerEvent ( _CHAR addMessageDestinationRef _CHAR , mdr . getName ( ) ) ; }
45521	protected byte [ ] computeSHAdigest ( final byte [ ] value ) { try { return MessageDigest . getInstance ( _CHAR SHA _CHAR ) . digest ( value ) ; } catch ( Exception e ) { throw new UnsupportedOperationException ( e . toString ( ) ) ; } }
45527	@ Override public void recycle ( ) { }
45540	public void removeAllRetentionPolicies ( ) { this . retentionPolicies . clear ( ) ; }
45548	public boolean hasSalary ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
45568	public boolean isPasswordExpired ( ) { refreshIfUndefined ( isPasswordExpired ) ; return isPasswordExpired == ConditionResult . TRUE ; }
45630	public boolean isMemoryAvailable ( long size ) { if ( allowOvercommit ) { return _BOOL ; } if ( acquireMemory ( size ) ) { releaseMemory ( size ) ; return _BOOL ; } return _BOOL ; }
45668	public static ComponentUI createUI ( JComponent b ) { return new SynthToggleButtonUI ( ) ; }
45669	public static RequirementsBuilder newObject ( String description ) { return new RequirementsBuilder ( BuilderType . OBJECT , description ) ; }
45671	public static long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return getService ( ) . dynamicQueryCount ( dynamicQuery , projection ) ; }
45716	private void deregisterPlugin ( DN configEntryDN ) { pluginLock . lock ( ) ; DirectoryServerPlugin < ? extends PluginCfg > plugin ; try { plugin = registeredPlugins . remove ( configEntryDN ) ; if ( plugin != _NULL ) { deregisterPlugin0 ( plugin ) ; plugin . finalizePlugin ( ) ; } } finally { pluginLock . unlock ( ) ; } }
45741	@ Override public void onRequestPermissionsResult ( int requestCode , @ NonNull String [ ] permissions , @ NonNull int [ ] grantResults ) { if ( requestCode == REQUEST_READ_CONTACTS ) { if ( grantResults . length == _NUM && grantResults [ _NUM ] == PackageManager . PERMISSION_GRANTED ) { populateAutoComplete ( ) ; } } }
45747	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { target . paste ( ) ; } }
45772	public void removeCircleOfTrustMember ( String realm , String cotName , String protocolType , String entityId ) throws COTException { removeCircleOfTrustMember ( realm , cotName , protocolType , entityId , _BOOL ) ; }
45797	public static boolean isEmpty ( CharSequence str ) { if ( str == _NULL || str . length ( ) == _NUM ) { return _BOOL ; } else { return _BOOL ; } }
45804	public boolean omitEnd ( ) { return oEnd ; }
45832	public static SetPropSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > path , InstantiableRelationDefinition < ? , ? > r ) throws ArgumentException { return new SetPropSubCommandHandler ( parser , path . child ( r , _CHAR DUMMY _CHAR ) , r ) ; }
45865	public boolean contains ( final URI uri ) { return this . uris . contains ( uri ) ; }
45875	public static NSObject parse ( InputStream is ) throws IOException , PropertyListFormatException { byte [ ] buf = PropertyListParser . readAll ( is ) ; return parse ( buf ) ; }
45896	public TriggerWrapper pause ( ) { if ( state != Trigger . STATE_COMPLETE ) { previous_state = state ; state = Trigger . STATE_PAUSED ; } return this ; }
45932	public boolean validate ( String value , String rule ) { return validate ( value ) ; }
45958	public static String normalize ( String oid ) { return oid . startsWith ( _CHAR OID . '' ) ? oid . substring ( _NUM ) : oid ; }
45962	public static boolean keepName ( MappedMember mm ) { if ( mm . getDesc ( ) . equals ( _CHAR ( [ Ljava / lang / String ; ) V _CHAR ) && mm . getOriginalName ( ) . equals ( _CHAR main _CHAR ) ) { return _BOOL ; } if ( mm . getOriginalName ( ) . contains ( _CHAR < _CHAR ) ) { return _BOOL ; } if ( isNameWhitelisted ( mm . getOriginalName ( ) ) ) { return _BOOL ; } return _BOOL ; }
45988	protected void paint ( SynthContext context , Graphics g ) { }
45995	private static void swap ( Object [ ] arr , int i , int j ) { Object tmp = arr [ i ] ; arr [ i ] = arr [ j ] ; arr [ j ] = tmp ; }
46005	public void saveSharedStateAttributes ( ) { if ( sharedState != _NULL ) { for ( String sharedStateKey : SHARED_STATE_ATTRIBUTES ) { requestMap . put ( sharedStateKey , ( String ) sharedState . get ( sharedStateKey ) ) ; } } }
46026	public static Cookie newCookie ( String name , String value ) { return newCookie ( name , value , defAge , _NULL , _NULL ) ; }
46097	boolean hasRequired ( ) { return m_has_required ; }
46167	private boolean isGenerateConnectorCoreConfig ( JsonValue requestConfig ) { return ! requestConfig . get ( CONNECTOR_REF ) . isNull ( ) && ! requestConfig . get ( CONNECTOR_REF ) . get ( CONNECTOR_NAME ) . isNull ( ) && requestConfig . get ( CONFIGURATION_PROPERTIES ) . isNull ( ) ; }
46198	public boolean isSprinting ( ) { return isSprinting ; }
46233	public boolean isCoalescing ( ) { return _BOOL ; }
46292	@ Override protected void finalize ( ) { try { super . finalize ( ) ; } catch ( Throwable t ) { throw new AssertionError ( t ) ; } }
46301	protected String nullsToBlanks ( String s ) { return nullsToString ( s , _CHAR _CHAR ) ; }
46305	@ Override public String toString ( ) { return name ; }
46307	public int size ( ) { return this . values . size ( ) ; }
46312	public void removeDefaultValues ( ) throws SMSException , SSOException { updateDefaultValues ( new HashSet ( ) ) ; }
46347	public boolean containsValue ( PdfObject value ) { return map . values ( ) . contains ( value ) ; }
46388	public void flip ( int x , int y ) { int offset = y * rowSize + ( x >> _NUM ) ; bits [ offset ] ^= _NUM << ( x & _NUM ) ; }
46407	public int size ( ) { return size ; }
46419	public final int addAndGet ( int delta ) { return unsafe . getAndAddInt ( this , valueOffset , delta ) + delta ; }
46427	public void addInternalRoutes ( ResourceRouter internalRouter ) { }
46441	private void importLDIF ( ) throws Exception { importConfig = new LDIFImportConfig ( ldif . getAbsolutePath ( ) ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; backend = DirectoryServer . getBackend ( _CHAR test _CHAR ) ; backend . importLDIF ( importConfig , DirectoryServer . getInstance ( ) . getServerContext ( ) ) ; }
46452	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
46453	public E removeLast ( ) { final Node < E > l = last ; if ( l == _NULL ) throw new NoSuchElementException ( ) ; return unlinkLast ( l ) ; }
46456	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery , projection ) ; }
46465	protected boolean filterHeader ( int index ) { return ( this . headerName == _NULL ) || this . headerName . equalsIgnoreCase ( this . allHeaders [ index ] . getName ( ) ) ; }
46484	@ Override public Promise < AuthStatus , AuthenticationException > secureResponse ( MessageInfoContext messageInfo , Subject serviceSubject ) { return newResultPromise ( SEND_SUCCESS ) ; }
46496	static < T > T find ( Class < T > type , String fallbackClassName ) throws FactoryConfigurationError { return find ( type , type . getName ( ) , _NULL , fallbackClassName ) ; }
46525	public < T extends IElement > Div add ( BlockElement < T > element ) { childElements . add ( element ) ; return this ; }
46540	public static PropertyEditor findEditor ( Class < ? > targetType ) { return ThreadGroupContext . getContext ( ) . getPropertyEditorFinder ( ) . find ( targetType ) ; }
46541	private ConstraintResult verifyActions ( Set < String > actions , ResourceType resourceType ) { Set < String > acceptableActions = resourceType . getActions ( ) . keySet ( ) ; for ( String action : actions ) { if ( ! acceptableActions . contains ( action ) ) { return ConstraintResults . newFailure ( _CHAR actionValues _CHAR , action ) ; } } return ConstraintResults . newSuccess ( ) ; }
46556	public String toString ( ) { return bidiBase . toString ( ) ; }
46563	Promise < URI , DiscoveryException > performOpenIdIssuerDiscovery ( final Context context , final AccountIdentifier account ) { return discoveryHandler . handle ( context , buildWebFingerRequest ( account ) ) . then ( extractWellKnownUri ( ) , Responses . < URI , DiscoveryException > noopExceptionFunction ( ) ) ; }
46587	final boolean isUnmatchedRequest ( ) { return ! isData && item == _NULL ; }
46626	public static boolean hasEntityBody ( String method ) { return StringUtils . equals ( method , POST ) || StringUtils . equals ( method , PUT ) || StringUtils . equals ( method , PATCH ) || StringUtils . equals ( method , DELETE ) || isWebDavMethod ( method ) ; }
46645	@ Override public void storeChildren ( PrintWriter aWriter , int indent , Object aCredentialHandler , StoreDescription parentDesc ) throws Exception { if ( aCredentialHandler instanceof NestedCredentialHandler ) { NestedCredentialHandler nestedCredentialHandler = ( NestedCredentialHandler ) aCredentialHandler ; CredentialHandler [ ] credentialHandlers = nestedCredentialHandler . getCredentialHandlers ( ) ; storeElementArray ( aWriter , indent , credentialHandlers ) ; } }
46653	@ NonNull public static Agera empty ( ) { return new AgeraEmpty ( ) ; }
46684	protected void startPoolMaintenance ( ) { if ( connectionPool != _NULL && timeBetweenEvictionRunsMillis > _NUM ) { connectionPool . setTimeBetweenEvictionRunsMillis ( timeBetweenEvictionRunsMillis ) ; } }
46685	private Script populateScript ( final ScriptEntry scriptEntry , final Context context , final Request request ) { final Script script = scriptEntry . getScript ( context ) ; script . put ( _CHAR request _CHAR , request ) ; script . put ( _CHAR context _CHAR , context ) ; return script ; }
46687	public static ComponentUI createUI ( JComponent c ) { return new SynthSeparatorUI ( ) ; }
46690	public static String tagSwap ( String content , Map < String , String > tagSwapMap ) { for ( Map . Entry < String , String > entry : tagSwapMap . entrySet ( ) ) { content = content . replace ( entry . getKey ( ) , entry . getValue ( ) ) ; } return content ; }
46691	boolean appendMarker ( Node < K , V > f ) { return casNext ( f , new Node < K , V > ( f ) ) ; }
46702	boolean connectionArgumentsPresent ( ) { if ( isPurgeHistoricalSubcommand ( ) ) { boolean secureArgsPresent = getSecureArgsList ( ) != _NULL && getSecureArgsList ( ) . argumentsPresent ( ) ; boolean adminArgsPresent = getAdminUidArg ( ) . isPresent ( ) || secureArgsList . getBindPasswordArg ( ) . isPresent ( ) || secureArgsList . getBindPasswordFileArg ( ) . isPresent ( ) ; return secureArgsPresent || adminArgsPresent ; } return _BOOL ; }
46721	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
46742	static MatchingRuleImpl collationGreaterThanOrEqualToMatchingRule ( Locale locale ) { return new CollationGreaterThanOrEqualToMatchingRuleImpl ( locale ) ; }
46746	public static ComponentUI createUI ( JComponent c ) { return new SynthCheckBoxMenuItemUI ( ) ; }
46784	public void push ( float val ) { this . push ( new BaseTypeWrapper ( val ) ) ; }
46800	public ConfigException createDecodingExceptionAdaptor ( DN dn , DefinitionDecodingException e ) { LocalizableMessage message = ERR_ADMIN_MANAGED_OBJECT_DECODING_PROBLEM . get ( dn , stackTraceToSingleLineString ( e , _BOOL ) ) ; return new ConfigException ( message , e ) ; }
46802	public static MapView createMap ( World world ) { return server . createMap ( world ) ; }
46819	protected void removeTag ( short tagId , int ifdId ) { IfdData ifdData = mIfdDatas [ ifdId ] ; if ( ifdData == _NULL ) { return ; } ifdData . removeTag ( tagId ) ; }
46820	public boolean isBroken ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return generation . broken ; } finally { lock . unlock ( ) ; } }
46847	public static long asMatchAllSocketsSocketIdentifier ( final long socketIdentifier ) { return _NUM & socketIdentifier ; }
46861	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery , Projection projection ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery , projection ) ; }
46871	private void encodeValue ( String str , StringBuilder buffer ) { if ( StaticUtils . needsBase64Encoding ( str ) ) { buffer . append ( _CHAR : _CHAR ) ; buffer . append ( Base64 . encode ( getBytes ( str ) ) ) ; } else { buffer . append ( _CHAR _CHAR ) ; buffer . append ( str ) ; } }
46872	@ Override public ShapeTile intersection ( ShapeTile p_other ) { return p_other . intersection ( this ) ; }
46877	public static void registerCertificateMapper ( DN mapperDN , CertificateMapper < ? > mapper ) { directoryServer . certificateMappers . put ( mapperDN , mapper ) ; }
46886	private String cleanComment ( String comment ) { return stripCodeValueSentences ( stripTags ( convertLineSeparators ( comment ) ) ) . trim ( ) ; }
46897	public String executionErrorMessage ( ) { return executionErrorMessage ; }
46905	public final boolean isUnresolved ( ) { return holder . isUnresolved ( ) ; }
46909	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery , Projection projection ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery , projection ) ; }
47013	@ Override public EnumEvalResult evaluate ( AciEvalContext evalCtx ) { EnumEvalResult matched = evalCtx . hasAuthenticationMethod ( authMethod , saslMech ) ; return matched . getRet ( type , _BOOL ) ; }
47025	void reset ( ) { offset = intLen = _NUM ; }
47045	public boolean isCanceled ( ) { return isCanceled ; }
47046	public void accept ( final MethodVisitor mv ) { mv . visitLocalVariable ( name , desc , signature , start . getLabel ( ) , end . getLabel ( ) , index ) ; }
47059	public void printData ( final String data ) { passFirstSeparatorColumn ( ) ; printCell ( data , Alignment . RIGHT ) ; }
47072	private int epochMonthToEpochDay ( int epochMonth ) { return hijrahEpochMonthStartDays [ epochMonth ] ; }
47089	public ImportParameters backendId ( String id ) { backendID = id ; return this ; }
47095	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
47101	public void aggregate ( ConfigChangeResult other ) { if ( other . getResultCode ( ) != ResultCode . SUCCESS ) { setResultCodeIfSuccess ( other . getResultCode ( ) ) ; messages . addAll ( other . getMessages ( ) ) ; } }
47123	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery ) ; }
47136	protected void enrichCluster ( Builder clusterBuilder ) { }
47159	private boolean isSlavoGermanic ( final String s ) { return s . contains ( _CHAR W _CHAR ) || s . contains ( _CHAR K _CHAR ) || s . contains ( _CHAR CZ _CHAR ) || s . contains ( _CHAR WITZ _CHAR ) ; }
47168	public final CertPathBuilderResult build ( CertPathParameters params ) throws CertPathBuilderException , InvalidAlgorithmParameterException { return spiImpl . engineBuild ( params ) ; }
47205	public static LocalBackendWorkflowElement createAndRegister ( DN baseDN , Backend < ? > backend ) { LocalBackendWorkflowElement localBackend = registeredLocalBackends . get ( baseDN ) ; if ( localBackend == _NULL ) { localBackend = new LocalBackendWorkflowElement ( baseDN , backend ) ; registerLocalBackend ( localBackend ) ; } return localBackend ; }
47210	public boolean isWritable ( ) { return isWrite ; }
47218	public static int readUBEInt32 ( ByteBuffer b ) { int result = _NUM ; result += readUBEInt16 ( b ) << _NUM ; result += readUBEInt16 ( b ) ; return result ; }
47223	public static void push ( Context request ) { stack . get ( ) . push ( request ) ; }
47227	private String generateConflictRDN ( String entryUUID , String rdn ) { return _CHAR entryuuid = _CHAR + entryUUID + _CHAR + _CHAR + rdn ; }
47244	public static boolean isProducerCapability ( Capability < ? > capability ) { return capability == TeslaCapabilities . CAPABILITY_PRODUCER ; }
47248	boolean isEmpty ( ) { return size == _NUM ; }
47254	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { Document doc = target . getDocument ( ) ; target . setCaretPosition ( _NUM ) ; target . moveCaretPosition ( doc . getLength ( ) ) ; } }
47267	char charAt ( int i ) { return text . charAt ( i ) ; }
47268	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
47277	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery , Projection projection ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery , projection ) ; }
47281	public Set < SingleSignOnSessionKey > findSessions ( ) { return sessionKeys . keySet ( ) ; }
47335	protected Object clone ( ) { PipelinedMsgParser p = new PipelinedMsgParser ( ) ; p . rawInputStream = this . rawInputStream ; p . sipMessageListener = this . sipMessageListener ; Thread mythread = new Thread ( p ) ; mythread . setName ( _CHAR PipelineThread _CHAR ) ; return p ; }
47345	public boolean isCollective ( ) { return this . isCollective ; }
47372	public static String encodeWebSafe ( byte [ ] source , boolean doPadding ) { return encode ( source , _NUM , source . length , WEBSAFE_ALPHABET , doPadding ) ; }
47402	public AsfTagTextField createCopyrightField ( final String content ) { return new AsfTagTextField ( AsfFieldKey . COPYRIGHT , content ) ; }
47437	@ DataProvider public Object [ ] [ ] md4DigestData ( ) { return new Object [ ] [ ] { { _CHAR _CHAR , _CHAR _NUM _CHAR } , { _CHAR a _CHAR , _CHAR bde52cb31de33e46245e05fbdbd6fb24 _CHAR } , { _CHAR abc _CHAR , _CHAR a448017aaf21d8525fc10ae87aa6729d _CHAR } , { _CHAR message digest _CHAR , _CHAR d9130a8164549fe818874806e1c7014b _CHAR } , { _CHAR abcdefghijklmnopqrstuvwxyz _CHAR , _CHAR d79e1c308aa5bbcdeea8ed63df412da9 _CHAR } , { _CHAR ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 _CHAR , _CHAR _NUM _CHAR } , { _CHAR _NUM _CHAR , _CHAR e33b4ddc9c38f2199c3e7b164fcc0536 _CHAR } } ; }
47453	public boolean equalsIgnoreCase ( String s ) { switch ( type ) { case T_STR : if ( strValue == _NULL ) { return s == _NULL ; } return strValue . equalsIgnoreCase ( s ) ; case T_CHARS : return charC . equalsIgnoreCase ( s ) ; case T_BYTES : return byteC . equalsIgnoreCase ( s ) ; default : return _BOOL ; } }
47457	protected void updateMonitorCount ( DN baseDN , String attr ) throws Exception { monitorDN = baseDN ; monitorAttr = attr ; lastCount = getMonitorAttrValue ( baseDN , attr ) ; }
47459	@ Override public void onItemRangeMoved ( T sender , int fromPosition , int toPosition , int itemCount ) { for ( int i = _NUM ; i < itemCount ; ++ i ) { this . adapter . notifyItemMoved ( fromPosition + i , toPosition + i ) ; } }
47464	@ Override public void dump ( final String prefix , final FileDescriptor fd , final PrintWriter writer , final String [ ] args ) { delegate . dump ( prefix , fd , writer , args ) ; }
47468	public boolean functionAvailable ( String methName ) { Object tblEntry = m_functionID . get ( methName ) ; if ( _NULL != tblEntry ) return _BOOL ; else { tblEntry = m_functionID_customer . get ( methName ) ; return ( _NULL != tblEntry ) ? _BOOL : _BOOL ; } }
47471	public boolean endsWith ( String suffix ) { return m_str . endsWith ( suffix ) ; }
47481	public void removeAttributes ( AttributeSet attr ) { Enumeration names = attr . getAttributeNames ( ) ; while ( names . hasMoreElements ( ) ) { Object name = names . nextElement ( ) ; Object value = attr . getAttribute ( name ) ; removeSearchAttribute ( name , value ) ; } }
47496	public static ComponentUI createUI ( JComponent b ) { return new SynthCheckBoxUI ( ) ; }
47510	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override protected boolean sendIntermediateResponseMessage ( IntermediateResponse intermediateResponse ) { return _BOOL ; }
47561	protected boolean filterHeader ( int index ) { if ( this . headerName == _NULL ) return _BOOL ; final String name = ( ( Header ) this . allHeaders . get ( index ) ) . getName ( ) ; return this . headerName . equalsIgnoreCase ( name ) ; }
47571	boolean isPrivate ( ) { return Scope . PRIVATE . equals ( scope ) ; }
47589	public void actionPerformed ( ActionEvent e ) { start . actionPerformed ( e ) ; end . actionPerformed ( e ) ; }
47593	public void ssoTokenChanged ( SSOTokenEvent evt ) { try { int type = evt . getType ( ) ; switch ( type ) { case SSOTokenEvent . SSO_TOKEN_IDLE_TIMEOUT : case SSOTokenEvent . SSO_TOKEN_MAX_TIMEOUT : case SSOTokenEvent . SSO_TOKEN_DESTROY : SSOToken token = evt . getToken ( ) ; clearAllData ( token . getTokenID ( ) ) ; break ; } } catch ( SSOException ssoe ) { } }
47597	public void terminateServer ( ) { process . destroy ( ) ; }
47667	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
47686	public void put ( byte [ ] buffer ) { put ( buffer , _NUM , buffer . length ) ; }
47705	public void actionPerformed ( ActionEvent e ) { DefaultCellEditor . this . stopCellEditing ( ) ; }
47706	public boolean checkItemInDag ( String id ) { return this . parentChildMap . keySet ( ) . contains ( id ) || this . getLeaves ( ) . contains ( id ) ; }
47714	private Future < Job > attemptAdd ( ) { Future < Job > future = Future . future ( ) ; String key = RedisHelper . getKey ( _CHAR job : _CHAR + this . id ) ; if ( this . attempts < this . max_attempts ) { client . hincrby ( key , _CHAR attempts _CHAR , _NUM , _NULL ) ; } else { future . complete ( this ) ; } return future ; }
47770	@ Override public void write ( ASN1Writer stream ) throws IOException { stream . writeStartSequence ( OP_TYPE_SEARCH_RESULT_REFERENCE ) ; for ( String url : referralURLs ) { stream . writeOctetString ( url ) ; } stream . writeEndSequence ( ) ; }
47784	public static boolean processOperationResult ( Operation op , OperationResult opResult ) { if ( ! opResult . continueProcessing ( ) ) { op . setResultCode ( opResult . getResultCode ( ) ) ; op . appendErrorMessage ( opResult . getErrorMessage ( ) ) ; op . setMatchedDN ( opResult . getMatchedDN ( ) ) ; op . setReferralURLs ( opResult . getReferralURLs ( ) ) ; return _BOOL ; } return _BOOL ; }
47786	public static String retrieveCurrentVersion ( ) { return VersionCheck . class . getPackage ( ) . getImplementationVersion ( ) ; }
47815	public boolean isResourceOfferingModified ( ) { return resourceOfferingModified ; }
47832	@ Override public void onItemRangeRemoved ( T sender , int positionStart , int itemCount ) { this . adapter . notifyItemRangeRemoved ( positionStart , itemCount ) ; }
47838	public void paintSliderTrackBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
47844	public static short swapShort ( short value ) { return ( short ) ( ( ( ( value >> _NUM ) & _NUM ) << _NUM ) + ( ( ( value >> _NUM ) & _NUM ) << _NUM ) ) ; }
47850	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery , projection ) ; }
47872	public void paintInternalFrameTitlePaneBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
47884	public static ComponentUI createUI ( JComponent x ) { return new SynthTreeUI ( ) ; }
47894	public static boolean isConnectedMobile ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_MOBILE ) ; }
47913	public static int mainRebuildIndex ( final String [ ] args , final boolean initializeServer , final OutputStream outStream , final OutputStream errStream ) { final RebuildIndex tool = new RebuildIndex ( ) ; return tool . process ( args , initializeServer , outStream , errStream ) ; }
47917	protected boolean isText ( Element elem ) { return ( elem . getName ( ) == AbstractDocument . ContentElementName ) ; }
47931	public static boolean isNotEmpty ( Map < ? , ? > map ) { return map != _NULL && ! map . isEmpty ( ) ; }
47963	public static SearchFilter createApproximateFilter ( AttributeType attributeType , ByteString assertionValue ) { return new SearchFilter ( FilterType . APPROXIMATE_MATCH , _NULL , _NULL , attributeType , _NULL , assertionValue , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
47975	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { target . copy ( ) ; } }
47987	public MessageChannel createMessageChannel ( HostPort targetHostPort ) throws UnknownHostException { return new UDPMessageChannel ( targetHostPort . getInetAddress ( ) , targetHostPort . getPort ( ) , sipStack , this ) ; }
48004	public boolean hasString ( ) { return ( _NULL != m_strCache ) ; }
48010	public boolean isDoneIndexing ( ) { if ( getIndex ( ) != _NULL ) { return getIndex ( ) . isActive ( ) ; } else { return _BOOL ; } }
48012	public Set entrySet ( ) { return map . entrySet ( ) ; }
48022	public void rowsRemoved ( TableModelEvent event ) { fireTableChanged ( event ) ; }
48025	public static MessageDigest hashing ( MessageDigest md , InputStream in ) { try { DigestInputStream din = new DigestInputStream ( in , md ) ; synchronized ( buf ) { while ( din . read ( buf ) != - _NUM ) ; } } catch ( IOException ex ) { ex . printStackTrace ( ) ; } return md ; }
48085	public static long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return getService ( ) . dynamicQueryCount ( dynamicQuery , projection ) ; }
48087	public static boolean isDigit ( final char c ) { return com . forgerock . opendj . util . StaticUtils . isDigit ( c ) ; }
48104	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
48121	public void clearRecordedBytes ( ) { buffer . clear ( ) ; }
48123	public boolean equals ( Object other ) { if ( other instanceof DerInputBuffer ) return equals ( ( DerInputBuffer ) other ) ; else return _BOOL ; }
48126	public synchronized void write ( int b ) throws IOException { if ( count >= buf . length ) { flushBuffer ( ) ; } buf [ count ++ ] = ( byte ) b ; }
48139	public static ComponentUI createUI ( JComponent c ) { return new SynthMenuItemUI ( ) ; }
48151	public void rowsRemoved ( final TableModelEvent event ) { fireTableChanged ( event ) ; }
48157	public Builder withGoogleEndpoint ( String googleEndpoint ) { config . setGoogleEndpoint ( googleEndpoint ) ; return this ; }
48181	private static boolean isSecureLDAPUrl ( LDAPURL url ) { return ! LDAPURL . DEFAULT_SCHEME . equalsIgnoreCase ( url . getScheme ( ) ) ; }
48186	@ Override public int read ( ) { return - _NUM ; }
48211	public static ActiveRequestorException newReceiverException ( String key , String ... args ) { return new ActiveRequestorException ( SOAPConstants . SOAP_RECEIVER_FAULT , key , args ) ; }
48228	public boolean isLeafNode ( ) { return isLeafNode ; }
48261	public AuthStatus validateRequest ( MessageInfo messageInfo , Subject clientSubject ) throws AuthException { return serverAuthModule . validateRequest ( messageInfo , clientSubject , _NULL ) ; }
48269	public static void closeQuietly ( final Connection conn ) { if ( conn != _NULL ) { try { conn . close ( ) ; } catch ( final Exception e ) { } } }
48283	void sqlUpdate ( ContentValues values , String whereClause ) { database . update ( DATABASE_TABLE , values , whereClause , _NULL ) ; }
48286	public static String rdnValue ( RDN rdn ) { Reject . ifTrue ( rdn . isMultiValued ( ) , _CHAR Multivalued RDNs not supported _CHAR ) ; return rdn . getFirstAVA ( ) . getAttributeValue ( ) . toString ( ) ; }
48293	public synchronized void clear ( ) { Entry tab [ ] = table ; modCount ++ ; for ( int index = tab . length ; -- index >= _NUM ; ) tab [ index ] = _NULL ; lruTracker . clear ( ) ; count = _NUM ; }
48304	static void checkSignedByte ( final int value , final String msg ) { if ( value < Byte . MIN_VALUE || value > Byte . MAX_VALUE ) { throw new IllegalArgumentException ( msg + _CHAR ( must be a signed byte ) : _CHAR + value ) ; } }
48389	public synchronized boolean isWorking ( BasicNode node ) { return workingList . get ( node ) != _NULL ; }
48394	public String normalizeId ( String anId ) { return ( anId == _NULL ? _NULL : anId . toLowerCase ( ) ) ; }
48441	ResultIterable queryTarget ( ) throws SynchronizationException { ResultIterable result = getReconHandler ( ) . queryTarget ( ) ; setTargets ( result ) ; return result ; }
48447	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery , Projection projection ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery , projection ) ; }
48463	public void storeChildren ( PrintWriter aWriter , int indent , Object aElement , StoreDescription elementDesc ) throws Exception { }
48486	public static IOFileFilter sizeFileFilter ( long threshold , boolean acceptLarger ) { return new SizeFileFilter ( threshold , acceptLarger ) ; }
48498	private static int unitIndex ( int bitIndex ) { return bitIndex >> > _NUM ; }
48512	public boolean matchesEntry ( Entry entry ) throws DirectoryException { ConditionResult result = matchesEntryInternal ( this , entry , _NUM ) ; switch ( result ) { case TRUE : return _BOOL ; case FALSE : case UNDEFINED : return _BOOL ; default : logger . error ( ERR_SEARCH_FILTER_INVALID_RESULT_TYPE , entry . getName ( ) , this , result ) ; return _BOOL ; } }
48538	public static ComponentUI createUI ( JComponent c ) { return new SynthEditorPaneUI ( ) ; }
48569	public static String toRomanLowerCase ( int number ) { return convert ( number ) ; }
48577	public int signal_layer_count ( ) { int found_signal_layers = _NUM ; for ( int index = _NUM ; index < size ( ) ; ++ index ) { if ( get ( index ) . is_signal ) found_signal_layers ++ ; } return found_signal_layers ; }
48617	public static Target decode ( EnumTargetOperator operator , String expr , DN aciDN ) throws AciException { return new Target ( operator , expr , aciDN ) ; }
48640	public boolean canBeEncoded ( ) { for ( ListIterator < String > li = ( ( Values ) value ) . getList ( ) . listIterator ( ) ; li . hasNext ( ) ; ) { TextEncodedStringNullTerminated next = new TextEncodedStringNullTerminated ( identifier , frameBody , li . next ( ) ) ; if ( ! next . canBeEncoded ( ) ) { return _BOOL ; } } return _BOOL ; }
48643	@ Override public void reset ( ConnectionPool parent , PooledConnection con ) { }
48675	@ Override protected boolean sendIntermediateResponseMessage ( IntermediateResponse intermediateResponse ) { return _BOOL ; }
48683	private boolean isGenerateConnectorCoreConfig ( JsonValue params ) { return ! params . get ( ConnectorUtil . OPENICF_CONNECTOR_REF ) . isNull ( ) && params . get ( ConnectorUtil . OPENICF_CONFIGURATION_PROPERTIES ) . isNull ( ) ; }
48685	public static String encode ( String clearText ) { return encode ( clearText , encryptor ) ; }
48696	public DeleteOperation processDelete ( ByteString rawEntryDN , List < Control > controls ) { DeleteOperationBasis deleteOperation = new DeleteOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , rawEntryDN ) ; deleteOperation . setInternalOperation ( _BOOL ) ; deleteOperation . run ( ) ; return deleteOperation ; }
48701	@ After public void afterTestMethodAction ( ) { }
48712	void incrementIndexedSearchCount ( ) { if ( filterUseEnabled ) { indexedSearchCount . getAndIncrement ( ) ; } }
48716	public void paintSliderTrackBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
48720	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
48727	public void startRule ( ) { if ( selectorTokens . size ( ) > _NUM ) { addSelector ( ) ; } propertyName = _NULL ; }
48728	public void delete ( String tokenId , ResultHandler < String , ? > handler ) throws CoreTokenException { delete ( tokenId , _NULL , handler ) ; }
48740	protected void entering ( String methodName , Object [ ] params ) { if ( params != _NULL ) { logger . entering ( className , methodName , params ) ; } else { logger . entering ( className , methodName ) ; } }
48743	private static Attribute makeAttrFromServerGroupProperty ( ServerGroupProperty property , Object value ) { switch ( property ) { case MEMBERS : return new LinkedAttribute ( ServerGroupProperty . MEMBERS . getAttributeName ( ) , ( Collection < ? > ) value ) ; default : return new LinkedAttribute ( property . getAttributeName ( ) , value ) ; } }
48767	public List < MappedMember > findFieldsByDesc ( String text ) { List < MappedMember > list = new ArrayList < MappedMember > ( ) ; for ( MappedMember mm : getFields ( ) ) { if ( mm . getDesc ( ) . equals ( text ) ) { list . add ( mm ) ; } } return list ; }
48787	private void encodeValue ( ByteSequence str , StringBuilder buffer ) { if ( StaticUtils . needsBase64Encoding ( str ) ) { buffer . append ( _CHAR : _CHAR ) ; buffer . append ( Base64 . encode ( str ) ) ; } else { buffer . append ( _CHAR _CHAR ) ; buffer . append ( str . toString ( ) ) ; } }
48801	public int size ( ) { return rdns . size ( ) ; }
48816	static void writeShort ( final byte [ ] b , final int index , final int s ) { b [ index ] = ( byte ) ( s >> > _NUM ) ; b [ index + _NUM ] = ( byte ) s ; }
48826	protected void diagnoseLineNumber ( Expression expr ) { ElemTemplateElement e = getElemFromExpression ( expr ) ; System . err . println ( _CHAR _CHAR + e . getSystemId ( ) + _CHAR Line _CHAR + e . getLineNumber ( ) ) ; }
48861	private static void registerProp ( String propertyName , String attrName ) throws Exception { String baseName = attrName . substring ( _NUM ) ; String methodBaseName = propNametoCamlCase ( baseName ) ; registerJebProp ( attrName , methodBaseName ) ; attrMap . put ( propertyName , attrName ) ; }
48967	private boolean hasNextProxy ( ) { return nextProxyIndex < proxies . size ( ) ; }
49018	public synchronized void putReplicaOfflineMsg ( ) { final CSN offlineCSN = csnGenerator . newCSN ( ) ; final PendingChange pendingChange = new PendingChange ( offlineCSN , _NULL , new ReplicaOfflineMsg ( offlineCSN ) ) ; pendingChange . setCommitted ( _BOOL ) ; pendingChanges . put ( offlineCSN , pendingChange ) ; pushCommittedChanges ( ) ; }
49028	protected void paint ( SynthContext context , Graphics g ) { }
49097	public CompareOperation processCompare ( String rawEntryDN , String attributeType , String assertionValue ) { return processCompare ( ByteString . valueOfUtf8 ( rawEntryDN ) , attributeType , ByteString . valueOfUtf8 ( assertionValue ) , _NULL ) ; }
49108	public Kue process ( String type , Handler < Job > handler ) { processInternal ( type , handler , _BOOL ) ; setupTimers ( ) ; return this ; }
49111	public void closeAllOpenPositions ( ) { if ( recyclerView == _NULL ) { return ; } for ( int i = openedPositions . size ( ) - _NUM ; i >= _NUM ; i -- ) { closeOpenPosition ( openedPositions . keyAt ( i ) ) ; } openedPositions . clear ( ) ; }
49113	public void end_notify_observers ( ) { observers . deactivate ( ) ; }
49120	public void moveYLineTo ( float y ) { float curYLine = getYLine ( ) ; float delta = y - curYLine ; occupiedArea . getBBox ( ) . setY ( occupiedArea . getBBox ( ) . getY ( ) + delta ) ; }
49132	public void clearRecordedBytes ( ) { buffer . clear ( ) ; }
49135	public boolean isGlobalScope ( ) { return this . scope == GlobalScope . class ; }
49138	public Tasker addFinisher ( TaskFinisher finisher ) { this . finisher = finisher ; return this ; }
49168	static public boolean hasList ( SIPHeader sipHeader ) { if ( sipHeader instanceof SIPHeaderList ) return _BOOL ; else { Class < ? > headerClass = sipHeader . getClass ( ) ; return headerListTable . get ( headerClass ) != _NULL ; } }
49223	@ CpsVmThreadOnly private void propagateErrorToWorkflow ( Throwable t ) { Map . Entry < Integer , CpsThread > lastEntry = threads . lastEntry ( ) ; if ( lastEntry != _NULL ) { lastEntry . getValue ( ) . resume ( new Outcome ( _NULL , t ) ) ; } else { LOGGER . log ( Level . WARNING , _CHAR encountered error but could not pass it to the flow _CHAR , t ) ; } }
49226	String [ ] args ( ) { return modifyArgs ; }
49234	public boolean isLogo ( ) { return logo ; }
49238	public static Attributes parseAttributes ( ParserController pc , JspReader reader ) throws JasperException { Parser tmpParser = new Parser ( pc , reader , _BOOL , _BOOL , _NULL ) ; return tmpParser . parseAttributes ( _BOOL ) ; }
49263	boolean isEncrypted ( ) { return isEncrypted ; }
49267	private synchronized boolean shouldLogcatRunnableBeKilled ( ) { return mShouldLogcatRunnableBeKilled ; }
49315	boolean printUsageGroupHeaders ( ) { int groupsContainingArgs = _NUM ; for ( final ArgumentGroup argGroup : argumentGroups ) { if ( argGroup . containsNonHiddenArguments ( ) ) { groupsContainingArgs ++ ; } } return groupsContainingArgs > _NUM ; }
49373	public PdfCanvas resetFillColorCmyk ( ) { return setFillColorCmyk ( _NUM , _NUM , _NUM , _NUM ) ; }
49385	public boolean isInheritedCollective ( ) { return this . isInheritedCollective ; }
49445	public static int mainRestoreDB ( String [ ] args ) { return mainRestoreDB ( args , _BOOL , System . out , System . err ) ; }
49463	private static float lerp ( float a , float b , float t ) { return a + ( b - a ) * t ; }
49467	public static long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return getService ( ) . dynamicQueryCount ( dynamicQuery ) ; }
49471	public boolean isAuthenticated ( ) { return isAuthenticated ; }
49475	public int hashCode ( ) { return ( field . hashCode ( ) << _NUM + ( a . hashCode ( ) << _NUM ) + ( b . hashCode ( ) << _NUM ) ) ; }
49509	public final boolean shares_net_no ( int [ ] p_net_no_arr ) { for ( int want_net_no : p_net_no_arr ) { if ( has_net_no ( want_net_no ) ) return _BOOL ; } return _BOOL ; }
49529	public static boolean isFinalResponse ( int rc ) { return rc >= _NUM && rc < _NUM ; }
49546	@ SuppressWarnings ( _CHAR unused _CHAR ) public float dipToPixel ( float dip ) { DisplayMetrics metrics = this . getDisplayMetrics ( this . getContext ( ) ) ; return dip * metrics . density ; }
49583	public MessageDispatcher build ( long maxSize , int concurrency , long expireAfter , Debug debug ) { Cache < String , MessagePromise > cache = CacheBuilder . newBuilder ( ) . concurrencyLevel ( concurrency ) . maximumSize ( maxSize ) . expireAfterWrite ( expireAfter , TimeUnit . SECONDS ) . build ( ) ; return new MessageDispatcher ( cache , debug ) ; }
49590	protected boolean isAfter ( int x , int y , Rectangle innerAlloc ) { if ( majorAxis == View . X_AXIS ) { return ( x > ( innerAlloc . width + innerAlloc . x ) ) ; } else { return ( y > ( innerAlloc . height + innerAlloc . y ) ) ; } }
49592	@ Override public void onItemRangeInserted ( T sender , int positionStart , int itemCount ) { this . adapter . notifyItemRangeInserted ( positionStart , itemCount ) ; }
49603	public void concatenate ( SIPObjectList otherList , boolean topFlag ) { super . concatenate ( otherList , topFlag ) ; }
49633	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getOrderDao ( ) : _NULL ; }
49641	public boolean isUnseqToken ( ) { return unseqToken ; }
49644	public DeleteOperation processDelete ( String rawEntryDN ) { return processDelete ( ByteString . valueOfUtf8 ( rawEntryDN ) , _NULL ) ; }
49647	private void signalNotFull ( ) { final ReentrantLock putLock = this . putLock ; putLock . lock ( ) ; try { notFull . signal ( ) ; } finally { putLock . unlock ( ) ; } }
49650	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
49653	public static CartEvent createCheckoutEvent ( String userId ) { return new CartEvent ( CartEventType . CHECKOUT , userId , _CHAR all _CHAR , _NUM ) ; }
49659	public static BindResult unmodifiableBindResult ( final BindResult result ) { if ( result instanceof UnmodifiableBindResultImpl ) { return result ; } return new UnmodifiableBindResultImpl ( result ) ; }
49678	void bindMaintenanceFilter ( Filter filter ) { maintenanceFilter . setDelegate ( filter ) ; }
49686	public void error ( Level level , String messageId , String data [ ] , Object session , Map props ) throws LogException { if ( isErrorLoggable ( level ) ) { LogRecord lr = new LogRecord ( level , formatMessage ( messageId , data , session ) ) ; errorLogger . log ( lr ) ; } }
49715	public boolean isErrorButtonShown ( ) { return mShowErrorButton ; }
49728	public boolean isArmed ( ) { ButtonModel model = getModel ( ) ; return model . isArmed ( ) ; }
49738	public synchronized boolean isEmpty ( ) { return ( timerTable . isEmpty ( ) ) ; }
49755	public void preSingleSignOnRequest ( String hostedEntityID , String idpEntityID , String realm , HttpServletRequest request , HttpServletResponse response , AuthnRequest authnRequest ) throws SAML2Exception { return ; }
49765	@ Override public void recycle ( ) { contentLength =- _NUM ; remaining = _NUM ; }
49785	public static Entry stripObjectClass ( Entry entry ) { Attribute attribute = entry . getAttribute ( CoreTokenConstants . OBJECT_CLASS ) ; if ( attribute != _NULL ) { AttributeDescription description = attribute . getAttributeDescription ( ) ; entry . removeAttribute ( description ) ; } return entry ; }
49812	public static String hexEncode ( final String value ) { return encode ( value , _NUM , _NUM ) ; }
49827	public static int sizeOfChar ( ) { return _NUM ; }
49885	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
49907	public static void copyAttributes ( Application sourceApp , Application destApp ) { if ( destApp == _NULL || sourceApp == _NULL ) { return ; } destApp . addAllResourceTypeUuids ( sourceApp . getResourceTypeUuids ( ) ) ; }
49937	public void enableAnimations ( ) { mShouldAnimate = _BOOL ; }
49947	public static double swapDouble ( double value ) { return Double . longBitsToDouble ( swapLong ( Double . doubleToLongBits ( value ) ) ) ; }
49952	public Enumeration elements ( ) { return perms . elements ( ) ; }
49966	public int length ( ) { return bytes . length ; }
49979	protected String reload ( ContextName cn , StringManager smClient ) { StringWriter stringWriter = new StringWriter ( ) ; PrintWriter printWriter = new PrintWriter ( stringWriter ) ; super . reload ( printWriter , cn , smClient ) ; return stringWriter . toString ( ) ; }
49985	public boolean isClosed ( ) { return isClosed ; }
50015	Attributes parseAttributes ( ) throws JasperException { return parseAttributes ( _BOOL ) ; }
50022	public String findFieldName ( String name ) { if ( acroFieldsSom == _NULL && xfaPresent ) { acroFieldsSom = new AcroFieldsSearch ( datasetsSom . getName2Node ( ) . keySet ( ) ) ; return acroFieldsSom . getAcroShort2LongName ( ) . containsKey ( name ) ? acroFieldsSom . getAcroShort2LongName ( ) . get ( name ) : acroFieldsSom . inverseSearchGlobal ( Xml2Som . splitParts ( name ) ) ; } return _NULL ; }
50026	public synchronized boolean isDestroyed ( ) { return isDestroyed ; }
50029	private void endFormals ( ) { if ( hasFormals ) { hasFormals = _BOOL ; buf . append ( _CHAR ) ; } }
50040	public static SearchFilter createPresenceFilter ( AttributeType attributeType , Set < String > attributeOptions ) { return new SearchFilter ( FilterType . PRESENT , _NULL , _NULL , attributeType , attributeOptions , _NULL , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
50110	public static GetPropSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > path , OptionalRelationDefinition < ? , ? > r ) throws ArgumentException { return new GetPropSubCommandHandler ( parser , path . child ( r ) , r ) ; }
50132	public void updateCloud ( int pointCount , FloatBuffer pointBuffer ) { calculateColors ( pointCount , pointBuffer ) ; updatePoints ( pointCount , pointBuffer , mColorArray ) ; }
50134	public Builder trail ( boolean trail ) { this . trail = trail ; return this ; }
50149	public void paintCheckBoxMenuItemBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
50157	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { }
50167	public boolean isRepresentationClassSerializable ( ) { return java . io . Serializable . class . isAssignableFrom ( representationClass ) ; }
50205	@ After public void afterTest ( ) { }
50235	public static boolean contains ( final String value , final String needle , final boolean caseSensitive ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; if ( caseSensitive ) { return value . contains ( needle ) ; } return value . toLowerCase ( ) . contains ( needle . toLowerCase ( ) ) ; }
50249	public int size ( ) { return ( impl . size ( ) ) ; }
50252	public boolean is_multiple_of_45_degree ( ) { return is_orthogonal ( ) || is_diagonal ( ) ; }
50259	@ Override public String toString ( ) { return _CHAR at character _CHAR + pos + _CHAR of _CHAR + in ; }
50268	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery ) ; }
50332	public T status ( Status status ) { if ( _NULL != status ) { jsonValue . put ( STATUS , status . name ( ) ) ; } return self ( ) ; }
50346	static MatchingRuleImpl collationLessThanOrEqualMatchingRule ( Locale locale ) { return new CollationLessThanOrEqualToMatchingRuleImpl ( locale ) ; }
50367	public AttributeSet parseDeclaration ( Reader r ) throws IOException { parse ( base , r , _BOOL , _BOOL ) ; return declaration . copyAttributes ( ) ; }
50377	public void push ( char val ) { this . push ( new BaseTypeWrapper ( val ) ) ; }
50388	void purgeUpTo ( final CSN purgeCSN ) throws ChangelogException { if ( purgeCSN == _NULL ) { return ; } final Record < CSN , UpdateMsg > oldestRecord = log . purgeUpTo ( purgeCSN ) ; if ( oldestRecord != _NULL ) { csnLimits = new CSNLimits ( oldestRecord . getKey ( ) , csnLimits . newestCSN ) ; } }
50389	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
50403	public void addPermittedDomain ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return ; } if ( permittedDomains == _NULL ) { permittedDomains = new ArrayList < > ( ) ; } permittedDomains . add ( domainName ) ; }
50459	public final SecretKey generateSecret ( KeySpec keySpec ) throws InvalidKeySpecException { return spiImpl . engineGenerateSecret ( keySpec ) ; }
50471	public boolean isSessionValid ( ) { return validSession ; }
50500	@ Override public void startActivityFromFragment ( final Fragment fragment , final Intent intent , final int requestCode , @ Nullable final Bundle options ) { delegate . startActivityFromFragment ( fragment , intent , requestCode , options ) ; }
50505	protected String stop ( ContextName cn , StringManager smClient ) { StringWriter stringWriter = new StringWriter ( ) ; PrintWriter printWriter = new PrintWriter ( stringWriter ) ; super . stop ( printWriter , cn , smClient ) ; return stringWriter . toString ( ) ; }
50511	public boolean isPrimitive ( ) { char tcode = signature . charAt ( _NUM ) ; return ( ( tcode != _CHAR ) && ( tcode != _CHAR ) ) ; }
50539	public static DeleteSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > p , OptionalRelationDefinition < ? , ? > r ) throws ArgumentException { return new DeleteSubCommandHandler ( parser , p , r , p . child ( r ) ) ; }
50598	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
50601	@ Override public Promise < AuthStatus , AuthenticationException > secureResponse ( MessageInfoContext messageInfo , Subject serviceSubject ) { return newResultPromise ( SEND_SUCCESS ) ; }
50614	protected String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
50619	public void notify_new ( BrdItem p_item ) { }
50628	public Transformer newTransformer ( ) { return new TransformerImpl ( this ) ; }
50682	protected JScrollPane createScroller ( ) { JScrollPane sp = new JScrollPane ( list , ScrollPaneConstants . VERTICAL_SCROLLBAR_AS_NEEDED , ScrollPaneConstants . HORIZONTAL_SCROLLBAR_NEVER ) ; sp . setHorizontalScrollBar ( _NULL ) ; return sp ; }
50701	public static void registerConnectionHandler ( ConnectionHandler < ? extends ConnectionHandlerCfg > handler ) { synchronized ( directoryServer . connectionHandlers ) { directoryServer . connectionHandlers . add ( handler ) ; ConnectionHandlerMonitor monitor = new ConnectionHandlerMonitor ( handler ) ; monitor . initializeMonitorProvider ( _NULL ) ; handler . setConnectionHandlerMonitor ( monitor ) ; registerMonitorProvider ( monitor ) ; } }
50708	public boolean updateApplicationLoginInfo ( ModelApplication modelApp ) { if ( isClosed ) { throw new IllegalStateException ( TAG + _CHAR is closed . '' ) ; } return registeredAppDbAdapter . update ( modelApp . getDatabaseId ( ) , _NULL , _NULL , _NULL , _NULL , modelApp . getUsername ( ) , modelApp . getPassword ( ) ) ; }
50746	protected void start ( ) { if ( engine . getLogger ( ) . isDebugEnabled ( ) ) engine . getLogger ( ) . debug ( sm . getString ( _CHAR engineConfig . start _CHAR ) ) ; }
50808	public boolean isSaveChunk ( ) { return saveChunk ; }
50815	public void addService ( ContextService service ) { if ( entries . contains ( service . getName ( ) ) ) { return ; } else { entries . add ( service . getName ( ) ) ; } synchronized ( services ) { service . setNamingResources ( this ) ; services . put ( service . getName ( ) , service ) ; } support . firePropertyChange ( _CHAR service _CHAR , _NULL , service ) ; }
50817	protected void createMBeans ( ) { Context context = _NULL ; try { context = ( Context ) ( new InitialContext ( ) ) . lookup ( _CHAR java : / _CHAR ) ; } catch ( NamingException e ) { log . error ( _CHAR No global naming context defined for server '' ) ; return ; } try { createMBeans ( _CHAR _CHAR , context ) ; } catch ( NamingException e ) { log . error ( _CHAR Exception processing Global JNDI Resources _CHAR , e ) ; } }
50845	public static boolean startupCalled ( ) { return startupCalled ; }
50896	public void removeAttributeValues ( String attrName , Set values ) throws SMSException , SSOException { validatePluginConfig ( ) ; SMSEntry e = pc . getSMSEntry ( ) ; SMSUtils . removeAttributeValues ( e , attrName , values , ps . getSearchableAttributeNames ( ) ) ; saveSMSEntry ( e ) ; }
50903	public static void deregisterCertificateMapper ( DN mapperDN ) { directoryServer . certificateMappers . remove ( mapperDN ) ; }
50911	public void removeLocalEjb ( String name ) { try { envCtx . unbind ( name ) ; } catch ( NamingException e ) { log . error ( sm . getString ( _CHAR naming . unbindFailed _CHAR , e ) ) ; } }
50925	public boolean isUserQuestionEnabled ( String realmName ) { Set values = getAttributeValues ( realmName , PW_RESET_PERSONAL_ANSWER , AMAdminConstants . PW_RESET_SERVICE ) ; return ( ( String ) AMAdminUtils . getValue ( values ) ) . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ; }
50931	private static void garbageCollect ( ) { try { System . gc ( ) ; Thread . sleep ( _NUM ) ; System . runFinalization ( ) ; Thread . sleep ( _NUM ) ; System . gc ( ) ; Thread . sleep ( _NUM ) ; System . runFinalization ( ) ; Thread . sleep ( _NUM ) ; } catch ( InterruptedException ex ) { ex . printStackTrace ( ) ; } }
50935	public boolean hasAgeStart ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
50941	public static SearchFilter createLessOrEqualFilter ( AttributeType attributeType , ByteString assertionValue ) { return new SearchFilter ( FilterType . LESS_OR_EQUAL , _NULL , _NULL , attributeType , _NULL , assertionValue , _NULL , _NULL , _NULL , _NULL , _BOOL ) ; }
50951	private LDAPURL findUrlForDisplayedEntry ( BasicNode node ) { if ( isFollowReferrals ( ) && node . getRemoteUrl ( ) != _NULL ) { return node . getRemoteUrl ( ) ; } return findUrlForLocalEntry ( node ) ; }
50953	public void startAppsSearch ( ) { if ( mSearchBarController != _NULL ) { mSearchBarController . focusSearchField ( ) ; } }
50964	@ Override public boolean canScrollVertically ( ) { return _BOOL ; }
50973	private boolean confirmToUpdateRemoteAndStart ( ) throws ClientException { return askConfirmation ( INFO_CLI_UNINSTALL_CONFIRM_UPDATE_REMOTE_AND_START . get ( ) , _BOOL , logger ) ; }
50990	public boolean isBefore ( MonthDay other ) { return compareTo ( other ) < _NUM ; }
51066	public boolean validate ( String value , String rule ) { return validate ( value ) ; }
51080	public void actionPerformed ( ActionEvent e ) { start . actionPerformed ( e ) ; end . actionPerformed ( e ) ; }
51085	public boolean greaterThan ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . lessThan ( this ) ; return this . num ( ) > obj2 . num ( ) ; }
51092	public String toString ( ) { String [ ] theTable = getStringTable ( ) ; int theIndex = value - getOffset ( ) ; return theTable != _NULL && theIndex >= _NUM && theIndex < theTable . length ? theTable [ theIndex ] : Integer . toString ( value ) ; }
51119	@ Deprecated protected InputStream render ( String contextPath , WebResource resource ) throws IOException , ServletException { return render ( contextPath , resource , _NULL ) ; }
51120	public int length ( ) { return bytes . length ; }
51148	public static List < String > matchAll ( String self , String pattern ) throws Exception { return matchAll ( self , pattern , - _NUM ) ; }
51182	public void publishUpdateMsg ( DN baseDN , UpdateMsg updateMsg ) throws ChangelogException { if ( ! predicate . isECLEnabledDomain ( baseDN ) ) { return ; } final CSN oldestCSNBefore = getOldestLastAliveCSN ( ) ; lastAliveCSNs . update ( baseDN , updateMsg . getCSN ( ) ) ; tryNotify ( oldestCSNBefore ) ; }
51189	@ Override public boolean accept ( File file ) { return file . canRead ( ) ; }
51193	public static long readUint32 ( DataInput di ) throws IOException { final byte [ ] buf8 = { _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM } ; di . readFully ( buf8 , _NUM , _NUM ) ; final long l = ByteBuffer . wrap ( buf8 ) . getLong ( ) ; return l ; }
51203	private void notifyListeners ( ) { for ( ReferralAuthenticationListener listener : listeners ) { listener . notifyAuthDataChanged ( ) ; } }
51215	public AddOperation processAdd ( ByteString rawEntryDN , List < RawAttribute > rawAttributes ) { return processAdd ( rawEntryDN , rawAttributes , _NULL ) ; }
51220	public static float swapFloat ( float value ) { return Float . intBitsToFloat ( swapInteger ( Float . floatToIntBits ( value ) ) ) ; }
51280	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
51302	public void addEjb ( ContextEjb ejb ) { if ( entries . contains ( ejb . getName ( ) ) ) { return ; } else { entries . add ( ejb . getName ( ) ) ; } synchronized ( ejbs ) { ejb . setNamingResources ( this ) ; ejbs . put ( ejb . getName ( ) , ejb ) ; } support . firePropertyChange ( _CHAR ejb _CHAR , _NULL , ejb ) ; }
51305	public static ListSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > p , OptionalRelationDefinition < ? , ? > r ) throws ArgumentException { return new ListSubCommandHandler ( parser , p , r , r . getName ( ) , r . getUserFriendlyName ( ) ) ; }
51309	@ DataProvider ( name = _CHAR validRules _CHAR ) public Object [ ] [ ] validData ( ) { return new Object [ ] [ ] { { _CHAR _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM .*. _NUM . _NUM _CHAR } , { _CHAR . central . sun . com _CHAR } , { _CHAR foo . central . sun . com _CHAR } , { _CHAR foo .*. sun .* _CHAR } , { _CHAR _NUM .*.*.* _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM / _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM / _NUM _CHAR } , { _CHAR *.*.* . * _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM / _NUM _CHAR } , { _CHAR foo . com _CHAR } , { _CHAR foo _CHAR } } ; }
51313	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { if ( ( ! target . isEditable ( ) ) || ( ! target . isEnabled ( ) ) ) { UIManager . getLookAndFeel ( ) . provideErrorFeedback ( target ) ; return ; } target . replaceSelection ( _CHAR \ t _CHAR ) ; } }
51322	public boolean inUse ( ) { return ! messageQueue . isEmpty ( ) ; }
51333	public void interruptTask ( TaskState interruptState , LocalizableMessage interruptReason , boolean exitThread ) { if ( getAssociatedTask ( ) != _NULL ) { try { getAssociatedTask ( ) . interruptTask ( interruptState , interruptReason ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } if ( exitThread ) { exitRequested = _BOOL ; } }
51352	public static boolean delete ( final File file ) { if ( file . isDirectory ( ) ) { for ( String item : file . list ( ) ) { File subFile = new File ( file . getAbsolutePath ( ) + File . separator + item ) ; if ( ! delete ( subFile ) ) { return _BOOL ; } } } return file . delete ( ) ; }
51383	public ListIterator < AbstractInsnNode > iterator ( ) { return iterator ( _NUM ) ; }
51396	public void removeOfflineReplica ( DN baseDN , int serverId ) { CSN csn ; do { csn = offlineReplicas . getCSN ( baseDN , serverId ) ; } while ( csn != _NULL && ! offlineReplicas . removeCSN ( baseDN , csn ) ) ; }
51413	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
51434	private void internalSetOrientation ( Orientation orientation ) { switch ( orientation ) { case HORIZONTAL : this . mBounds = new RectF ( _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM ) ; break ; case VERTICAL : this . mBounds = new RectF ( _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM ) ; break ; } }
51472	public static void writeFile ( File file , String contents ) throws IOException { writeFile ( file . getAbsolutePath ( ) , contents ) ; }
51479	public void addSigners ( SignerInformationStore signerStore ) { Iterator it = signerStore . getSigners ( ) . iterator ( ) ; while ( it . hasNext ( ) ) { _signers . add ( it . next ( ) ) ; } }
51499	public static ComponentUI createUI ( JComponent c ) { return new SynthDesktopIconUI ( ) ; }
51513	public boolean keepStats ( ) { return currentConfig . isKeepStats ( ) ; }
51544	public synchronized Enumeration keys ( ) { return new Enumerator ( KEYS , _BOOL ) ; }
51545	@ Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . setContentType ( _CHAR text / plain _CHAR ) ; PrintWriter out = resp . getWriter ( ) ; processHeaders ( invalidHeaderName , req , out ) ; processHeaders ( _CHAR X - Bug51557 _CHAR , req , out ) ; }
51562	private CartEvent wrapCartEvent ( JsonObject raw ) { return new CartEvent ( raw ) . setUserId ( raw . getString ( _CHAR user_id _CHAR ) ) . setProductId ( raw . getString ( _CHAR product_id _CHAR ) ) . setCreatedAt ( raw . getLong ( _CHAR created_at _CHAR ) ) . setCartEventType ( CartEventType . valueOf ( raw . getString ( _CHAR type _CHAR ) ) ) ; }
51588	protected void paint ( SynthContext context , Graphics g ) { }
51609	public void registerClientConnection ( ClientConnection connection ) { connectionList . add ( connection ) ; }
51613	public final void update ( byte [ ] input ) throws IllegalStateException { if ( ! isInitMac ) { throw new IllegalStateException ( ) ; } if ( input != _NULL ) { spiImpl . engineUpdate ( input , _NUM , input . length ) ; } }
51614	public int length ( ) { return nameValuePairs . size ( ) ; }
51627	public boolean isWindowsServiceEnabled ( ) { return isWindowsServiceEnabled ; }
51668	private void checkHeadingDisplayed ( ) { if ( ! state . isHeadingDisplayed ) { app . println ( ) ; app . println ( ) ; app . println ( heading ) ; state . isHeadingDisplayed = _BOOL ; } }
51669	private static Remote exportObject ( Remote obj , UnicastServerRef sref ) throws RemoteException { if ( obj instanceof UnicastRemoteObject ) { ( ( UnicastRemoteObject ) obj ) . ref = sref ; } return sref . exportObject ( obj , _NULL , _BOOL ) ; }
51681	public final String yytext ( ) { return new String ( zzBuffer , zzStartRead , zzMarkedPos - zzStartRead ) ; }
51688	public void unregisterClientConnection ( ClientConnection connection ) { connectionList . remove ( connection ) ; }
51702	public void removeMessageDestinationRef ( String name ) { entries . remove ( name ) ; MessageDestinationRef mdr = _NULL ; synchronized ( mdrs ) { mdr = mdrs . remove ( name ) ; } if ( mdr != _NULL ) { support . firePropertyChange ( _CHAR messageDestinationRef _CHAR , mdr , _NULL ) ; mdr . setNamingResources ( _NULL ) ; } }
51710	@ SuppressWarnings ( _CHAR rawtypes _CHAR ) protected Class resolveClass ( ObjectStreamClass classDesc ) throws IOException , ClassNotFoundException { String cname = classDesc . getName ( ) ; return ClassFinder . resolveClass ( cname , this . loader ) ; }
51803	public static MatchedValuesFilter createGreaterOrEqualFilter ( String rawAttributeType , ByteString rawAssertionValue ) { Reject . ifNull ( rawAttributeType , rawAssertionValue ) ; return new MatchedValuesFilter ( GREATER_OR_EQUAL_TYPE , rawAttributeType , rawAssertionValue , _NULL , _NULL , _NULL , _NULL ) ; }
51820	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { }
51831	@ Override public boolean equals ( Object p_ob ) { if ( p_ob == _NULL ) return _BOOL ; if ( this == p_ob ) return _BOOL ; if ( ! ( p_ob instanceof PlaVectorInt ) ) return _BOOL ; PlaVectorInt other = ( PlaVectorInt ) p_ob ; return v_x == other . v_x && v_y == other . v_y ; }
51856	@ Override public void messageReceived ( Serializable msg , Member source ) { }
51857	public static void pickImage ( Activity activity , int requestCode ) { try { activity . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( activity ) ; } }
51866	public Cell add ( Table element ) { childElements . add ( element ) ; return this ; }
51883	public static Name lowerCamel ( String ... pieces ) { List < NamePiece > namePieces = new ArrayList < > ( ) ; for ( String piece : pieces ) { validateCamel ( piece , CheckCase . LOWER ) ; namePieces . add ( new NamePiece ( piece , CaseFormat . LOWER_CAMEL ) ) ; } return new Name ( namePieces ) ; }
51894	public void shutdown ( ) { if ( shutdown ) { return ; } shutdown = _BOOL ; if ( session != _NULL ) { session . close ( ) ; } try { join ( ) ; } catch ( InterruptedException ignored ) { } }
51958	public void actionPerformed ( ActionEvent e ) { start . actionPerformed ( e ) ; end . actionPerformed ( e ) ; }
51967	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { }
51983	public boolean equals ( Object object ) { if ( ! ( object instanceof ObjectInstance ) ) { return _BOOL ; } ObjectInstance val = ( ObjectInstance ) object ; if ( ! name . equals ( val . getObjectName ( ) ) ) return _BOOL ; if ( className == _NULL ) return ( val . getClassName ( ) == _NULL ) ; return className . equals ( val . getClassName ( ) ) ; }
51995	public void registerAll ( Collection < RegisteredListener > listeners ) { for ( RegisteredListener listener : listeners ) { register ( listener ) ; } }
52023	public void resume ( ) { setPaused ( _BOOL ) ; }
52056	public static int sizeOfBoolean ( ) { return _NUM ; }
52067	private LocalizableMessage expectedOutput ( LocalizableMessage val ) { return val ; }
52088	public final double cumulative_trace_length ( ) { double result = _NUM ; Iterator < UndoObjectNode > it = undo_items . start_read_object ( ) ; for ( ; ; ) { UndoObjectStorable curr_item = undo_items . read_next ( it ) ; if ( curr_item == _NULL ) break ; if ( curr_item instanceof BrdTracep ) { result += ( ( BrdTracep ) curr_item ) . get_length ( ) ; } } return result ; }
52099	public static NSObject parse ( byte [ ] data ) throws PropertyListFormatException , UnsupportedEncodingException { BinaryPropertyListParser parser = new BinaryPropertyListParser ( ) ; return parser . doParse ( data ) ; }
52108	final boolean isShared ( ) { return nextWaiter == SHARED ; }
52112	public void addResourceTypeUuid ( final String resourceTypeUuid ) { this . resourceTypeUuids . add ( resourceTypeUuid ) ; }
52116	public boolean isAfter ( YearMonth other ) { return compareTo ( other ) > _NUM ; }
52135	public int hashCode ( ) { return getStringValue ( ) . hashCode ( ) ; }
52140	public QRCallbackBuilder withCallbackIndex ( int index ) { this . callbackIndex = index ; return this ; }
52158	@ Override public void dump ( final String prefix , final FileDescriptor fd , final PrintWriter writer , final String [ ] args ) { super . dump ( prefix , fd , writer , args ) ; }
52165	public boolean isPattern ( ) { return isPattern ; }
52169	public final void quickPop ( int n ) { m_firstFree -= n ; }
52171	private boolean isClosed ( ) { return str == _NULL ; }
52172	public void removeIsdnSubaddress ( ) { deleteParm ( ISUB ) ; }
52225	public Builder clear ( ) { localeBuilder . clear ( ) ; return this ; }
52262	public void appendRemainingComponent ( String name ) { if ( name != _NULL ) { try { if ( remainingName == _NULL ) { remainingName = new CompositeName ( ) ; } remainingName . add ( name ) ; } catch ( NamingException e ) { throw new IllegalArgumentException ( e . toString ( ) ) ; } } }
52285	private int fractionalConfigToInt ( ) { if ( ! fractional ) { return NOT_FRACTIONAL ; } else if ( fractionalExclusive ) { return EXCLUSIVE_FRACTIONAL ; } return INCLUSIVE_FRACTIONAL ; }
52289	public static AttributeSet synchronizedView ( AttributeSet attributeSet ) { if ( attributeSet == _NULL ) { throw new NullPointerException ( ) ; } return new SynchronizedAttributeSet ( attributeSet ) ; }
52295	protected Object readResolve ( ) throws ObjectStreamException { return resolvedDeserializedProfile ; }
52296	protected void paint ( SynthContext context , Graphics g ) { }
52309	public static NSObject parse ( InputStream is ) throws IOException , PropertyListFormatException { byte [ ] buf = PropertyListParser . readAll ( is ) ; return parse ( buf ) ; }
52311	public void update ( JsonValue token ) throws CoreTokenException { cts . update ( tokenAdapter . toToken ( token ) ) ; }
52316	public static void deregisterShutdownListener ( ServerShutdownListener listener ) { DirectoryServer . deregisterShutdownListener ( listener ) ; }
52333	public boolean validate ( String value , String rule ) { return ( value . equalsIgnoreCase ( rule ) ) ; }
52337	public static boolean isTeslaConsumer ( ICapabilityProvider provider , EnumFacing side ) { return provider . hasCapability ( TeslaCapabilities . CAPABILITY_CONSUMER , side ) ; }
52354	@ Override public void write ( ASN1Writer stream ) throws IOException { stream . writeStartSequence ( OP_TYPE_EXTENDED_REQUEST ) ; stream . writeOctetString ( TYPE_EXTENDED_REQUEST_OID , oid ) ; if ( value != _NULL ) { stream . writeOctetString ( TYPE_EXTENDED_REQUEST_VALUE , value ) ; } stream . writeEndSequence ( ) ; }
52362	public void paintSliderThumbBorder ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { }
52382	public ExtendedOperation processExtendedOperation ( String requestOID , ByteString requestValue , List < Control > controls ) { ExtendedOperationBasis extendedOperation = new ExtendedOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , requestOID , requestValue ) ; extendedOperation . setInternalOperation ( _BOOL ) ; extendedOperation . run ( ) ; return extendedOperation ; }
52416	public boolean hasNewSubSchema ( ) { if ( newSubSchemas == _NULL ) { return _BOOL ; } return ! newSubSchemas . isEmpty ( ) ; }
52417	public boolean hasAgeEnd ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
52443	public boolean hasQValue ( ) { return hasParameter ( _CHAR q _CHAR ) ; }
52454	public boolean isTrackingActiveSession ( ) { return session == _NULL ; }
52467	public static int mainBackUpDB ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { BackUpDB tool = new BackUpDB ( ) ; return tool . process ( args , initializeServer , outStream , errStream ) ; }
52470	protected void applicationAnnotationsConfig ( ) { long t1 = System . currentTimeMillis ( ) ; WebAnnotationSet . loadApplicationAnnotations ( context ) ; long t2 = System . currentTimeMillis ( ) ; if ( context instanceof StandardContext ) { ( ( StandardContext ) context ) . setStartupTime ( t2 - t1 + ( ( StandardContext ) context ) . getStartupTime ( ) ) ; } }
52525	public void pause ( ) { setPaused ( _BOOL ) ; }
52534	public static void println ( String message ) { synchronized ( logSync ) { if ( logWriter != _NULL ) { logWriter . println ( message ) ; logWriter . flush ( ) ; } } }
52542	public static boolean isSAMLDecryptionDebugEnabled ( ) { return SystemPropertiesManager . getAsBoolean ( SAML2Constants . SAML_DECRYPTION_DEBUG_MODE ) ; }
52544	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
52555	public void removeMessageDestinationRef ( String name ) { namingResources . removeMessageDestinationRef ( name ) ; fireContainerEvent ( _CHAR removeMessageDestinationRef _CHAR , name ) ; }
52560	public void ancestorMoved ( HierarchyEvent e ) { }
52580	public void paintTableHeaderBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
52582	public String toString ( ) { return ( resourceMatch ) ; }
52591	public String generateNamedAttributeJspFragment ( Node . NamedAttribute n , String tagHandlerVar ) throws JasperException { String varName = n . getTemporaryVariableName ( ) ; out . printin ( _CHAR javax . servlet . jsp . tagext . JspFragment _CHAR + varName + _CHAR = _CHAR ) ; generateJspFragment ( n , tagHandlerVar ) ; out . println ( _CHAR ; _CHAR ) ; return varName ; }
52596	void incrementInCount ( ) { inCount ++ ; }
52597	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
52606	static void removeSoIfExit ( String libName , int version ) { String file = _targetSoFile ( libName , version ) ; File a = new File ( file ) ; if ( a . exists ( ) ) { a . delete ( ) ; } }
52609	public void store ( ) throws SSOException , IdRepoException { amIdentity . store ( ) ; }
52612	public boolean isDebugOn ( ) { return ( environment . get ( CLIConstants . ARGUMENT_DEBUG ) != _NULL ) ; }
52667	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery ) ; }
52670	public boolean isTransientAttribute ( String attribute ) { if ( transientAttributes != _NULL ) return transientAttributes . contains ( attribute ) ; return _BOOL ; }
52689	public boolean isDirectory ( ) { return directory ; }
52692	public boolean isInternal ( ) { return isInternal ; }
52693	public String encodeURL ( String url ) { return encodeURL ( url , _BOOL ) ; }
52711	public boolean equals ( Object obj ) { if ( obj instanceof Type ) { Type inType = ( Type ) obj ; SchemaType inSchemaType = inType . getInternalSchemaType ( ) ; return schemaType . equals ( inSchemaType ) ; } return ( _BOOL ) ; }
52732	public boolean isCookieTimeToLiveEnabled ( ) { if ( DEBUG . messageEnabled ( ) ) { DEBUG . message ( _CHAR LoginState . isCookieTimeToLiveEnabled ( ) : enabled = _CHAR + cookieTimeToLiveEnabledFlag ) ; } return cookieTimeToLiveEnabledFlag ; }
52754	public boolean hasGlobalSubSchema ( ) { return subConfigMeta . hasGlobalSubSchema ( ) ; }
52761	@ Override public void write ( ASN1Writer stream ) throws IOException { stream . writeInteger ( OP_TYPE_ABANDON_REQUEST , idToAbandon ) ; }
52869	protected void parseDOMAttributes ( Element element ) throws SAML2Exception { super . parseDOMAttributes ( element ) ; }
52893	protected void registerChildren ( ) { super . registerChildren ( ) ; registerChild ( PGTITLE , CCPageTitle . class ) ; registerChild ( SEC_MH_COMMON , CCSecondaryMasthead . class ) ; registerChild ( TF_ORIG_CLIENT_TYPE , CCTextField . class ) ; registerChild ( PROPERTY_ATTRIBUTE , AMPropertySheet . class ) ; ptModel . registerChildren ( this ) ; propertySheetModel . registerChildren ( this ) ; }
52900	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { }
52914	public void receiveNewStatus ( ChangeStatusMsg csMsg ) { replicationServerDomain . processNewStatus ( this , csMsg ) ; }
52923	private int [ ] createEmptySetOfIntegers ( int max ) { firstWordNotUsed = _NUM ; int [ ] arr = new int [ arrayIndex ( max - _NUM ) + _NUM ] ; return arr ; }
52949	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
52966	public void propertyChange ( PropertyChangeEvent event ) { getListener ( ) . propertyChange ( event ) ; }
52972	public synchronized void okToUseGui ( ) { if ( ! okToUseGui ) { okToUseGui = _BOOL ; synchronized ( children ) { for ( Iterator i = children . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { Visibility v = getChildVisibility ( i . next ( ) ) ; if ( v != _NULL ) v . okToUseGui ( ) ; } } } }
53007	public List < AuditEvent > convertToAuditEvent ( Iterable < PersistentAuditEvent > persistentAuditEvents ) { if ( persistentAuditEvents == _NULL ) { return Collections . emptyList ( ) ; } List < AuditEvent > auditEvents = new ArrayList < > ( ) ; for ( PersistentAuditEvent persistentAuditEvent : persistentAuditEvents ) { auditEvents . add ( convertToAuditEvent ( persistentAuditEvent ) ) ; } return auditEvents ; }
53028	public void resume ( ) { setPaused ( _BOOL ) ; }
53039	public ProcessBuilder command ( String ... command ) { return command ( new ArrayList < String > ( Arrays . asList ( command ) ) ) ; }
53044	public static String decrypt ( String encoded ) { return decode ( encoded ) ; }
53046	private void exitRecordingMode ( boolean isInRecordingMode ) { refreshImageButton ( mIsPlaying ) ; refreshActionMenuItem ( mIsPlaying ) ; refreshPopupMenuItem ( mIsPlaying ) ; refreshActionMenuPower ( _BOOL ) ; if ( ! isInRecordingMode ) { mIsInRecordingMode = _BOOL ; switchRecordLayout ( isInRecordingMode ) ; } }
53058	public boolean isComplete ( ) { String s = getParameter ( _CHAR stale _CHAR ) ; if ( _CHAR _BOOL _CHAR . equalsIgnoreCase ( s ) ) { return _BOOL ; } else { return this . complete ; } }
53065	public static SearchRequest unmodifiableSearchRequest ( final SearchRequest request ) { if ( request instanceof UnmodifiableSearchRequestImpl ) { return request ; } return new UnmodifiableSearchRequestImpl ( request ) ; }
53072	public boolean hasGlobalSubSchema ( ) { return subConfigMeta . hasGlobalSubSchema ( ) ; }
53107	private static void increment ( Map < ResultPoint , Integer > table , ResultPoint key ) { Integer value = table . get ( key ) ; table . put ( key , value == _NULL ? _NUM : value + _NUM ) ; }
53114	public final int addAndGet ( int delta ) { for ( ; ; ) { int current = get ( ) ; int next = current + delta ; if ( compareAndSet ( current , next ) ) return next ; } }
53128	public static IntroFragment newInstance ( String title , String description ) { Bundle args = new Bundle ( ) ; args . putString ( TITLE , title ) ; args . putString ( DESCRIPTION , description ) ; IntroFragment fragment = new IntroFragment ( ) ; fragment . setArguments ( args ) ; return fragment ; }
53204	public int size ( ) { if ( relations == _NULL ) { return _NUM ; } else { return relations . size ( ) ; } }
53228	private static void writeAdd ( LDIFWriter writer , Entry entry ) throws IOException { writer . writeAddChangeRecord ( entry ) ; writer . flush ( ) ; }
53229	public boolean isEmpty ( ) { return count == _NUM ; }
53249	public void destroySession ( SessionID sid ) { getSessionService ( ) . destroyAuthenticationSession ( sid ) ; }
53258	public boolean isEmptyType ( TypeRef type ) { return s_isEmptyType ( type ) ; }
53263	public static boolean isEmpty ( Map < ? , ? > map ) { return map == _NULL || map . isEmpty ( ) ; }
53275	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery , com . liferay . portal . kernel . dao . orm . Projection projection ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery , projection ) ; }
53321	public PdfCanvas resetStrokeColorCmyk ( ) { return setStrokeColorCmyk ( _NUM , _NUM , _NUM , _NUM ) ; }
53339	public boolean isEncrypted ( ) { return isEncrypted ; }
53344	@ Override public long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return _fooLocalService . dynamicQueryCount ( dynamicQuery ) ; }
53387	public void poll ( ) { this . put ( _CHAR lastQueried _CHAR , CollectionUtils . asSet ( String . valueOf ( currentTimeMillis ( ) ) ) ) ; }
53410	final void postAccept ( ) { connected = _BOOL ; created = _BOOL ; bound = _BOOL ; }
53413	public int hashCode ( ) { return m_transactionState ; }
53431	public static int readUBEInt16 ( ByteBuffer b ) { int result = _NUM ; result += readUInt8 ( b ) << _NUM ; result += readUInt8 ( b ) ; return result ; }
53438	public static MatchedValuesFilter createEqualityFilter ( String rawAttributeType , ByteString rawAssertionValue ) { Reject . ifNull ( rawAttributeType , rawAssertionValue ) ; return new MatchedValuesFilter ( EQUALITY_MATCH_TYPE , rawAttributeType , rawAssertionValue , _NULL , _NULL , _NULL , _NULL ) ; }
53443	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public ListIterator < AbstractInsnNode > iterator ( int index ) { return new InsnListIterator ( index ) ; }
53479	public PrivilegeSet read ( InputStream xacml ) throws EntitlementException { PolicySet policySet ; try { policySet = XACMLPrivilegeUtils . streamToPolicySet ( xacml ) ; } catch ( JAXBException e ) { throw new EntitlementException ( INVALID_XML , e ) ; } return fromXACML ( policySet ) ; }
53509	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
53514	private void sync ( ) { int s = state ; if ( ( s & RELOAD_IMAGE_FLAG ) != _NUM ) { refreshImage ( ) ; } s = state ; if ( ( s & RELOAD_FLAG ) != _NUM ) { synchronized ( this ) { state = ( state | RELOAD_FLAG ) ^ RELOAD_FLAG ; } setPropertiesFromAttributes ( ) ; } }
53537	public static int sum ( int a , int b ) { return a + b ; }
53579	private boolean processUnbindRequest ( LDAPMessage message , List < Control > controls ) { UnbindOperationBasis unbindOp = new UnbindOperationBasis ( this , nextOperationID . getAndIncrement ( ) , message . getMessageID ( ) , controls ) ; unbindOp . run ( ) ; return _BOOL ; }
53610	public boolean isRedirect ( ) { switch ( code ) { case HTTP_PERM_REDIRECT : case HTTP_TEMP_REDIRECT : case HTTP_MULT_CHOICE : case HTTP_MOVED_PERM : case HTTP_MOVED_TEMP : case HTTP_SEE_OTHER : return _BOOL ; default : return _BOOL ; } }
53643	public static int sizeOfInt ( ) { return _NUM ; }
53662	public void removeRole ( String roleDN ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; Set userDNs = new HashSet ( ) ; userDNs . add ( super . entryDN ) ; dsServices . modifyMemberShip ( super . token , userDNs , roleDN , ROLE , REMOVE_MEMBER ) ; }
53669	public static NSObject parse ( byte [ ] data ) throws PropertyListFormatException , UnsupportedEncodingException { BinaryPropertyListParser parser = new BinaryPropertyListParser ( ) ; return parser . doParse ( data ) ; }
53672	protected OCommandSQL createQueryObject ( String queryString ) { return new OCommandSQL ( queryString ) ; }
53677	public Element encrypt ( String xmlString , Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID , String outerElementName ) throws SAML2Exception { return encrypt ( xmlString , recipientPublicKey , _NULL , dataEncAlgorithm , dataEncStrength , recipientEntityID , outerElementName ) ; }
53687	private void initialize ( URI p_other ) { m_scheme = p_other . getScheme ( ) ; m_userinfo = p_other . getUserinfo ( ) ; m_host = p_other . getHost ( ) ; m_port = p_other . getPort ( ) ; m_path = p_other . getPath ( ) ; m_queryString = p_other . getQueryString ( ) ; m_fragment = p_other . getFragment ( ) ; }
53731	public Enumeration identities ( ) { return _NULL ; }
53743	public synchronized void disableAllObjectNames ( ) { RELATION_LOGGER . entering ( MBeanServerNotificationFilter . class . getName ( ) , _CHAR disableAllObjectNames _CHAR ) ; selectedNames = new Vector < ObjectName > ( ) ; deselectedNames = _NULL ; RELATION_LOGGER . exiting ( MBeanServerNotificationFilter . class . getName ( ) , _CHAR disableAllObjectNames _CHAR ) ; return ; }
53830	protected void destroyMBeans ( ) { if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR Destroying MBeans for Global JNDI Resources '' ) ; } }
53897	public void endCompose ( StylesheetRoot sroot ) throws TransformerException { StylesheetRoot . ComposeState cstate = sroot . getComposeState ( ) ; cstate . popStackMark ( ) ; }
53899	public static UnbindRequest unmodifiableUnbindRequest ( final UnbindRequest request ) { if ( request instanceof UnmodifiableUnbindRequestImpl ) { return request ; } return new UnmodifiableUnbindRequestImpl ( request ) ; }
53926	public void accept ( ) { accepted = _BOOL ; }
53934	public Socket createSocket ( InetAddress host , int portNumber ) throws SSLConnectionException , IOException { if ( sslSocketFactory == _NULL ) { throw new SSLConnectionException ( ERR_TOOLS_SSL_CONNECTION_NOT_INITIALIZED . get ( ) ) ; } return socketWithEnabledProtocols ( sslSocketFactory . createSocket ( host , portNumber ) ) ; }
53981	public Builder withAppleEndpoint ( String appleEndpoint ) { config . setAppleEndpoint ( appleEndpoint ) ; return this ; }
53986	@ Override public void clear_doors ( ) { super . clear_doors ( ) ; target_doors . clear ( ) ; }
53989	@ Override public int doStartTag ( ) throws JspException { return SKIP_BODY ; }
54010	public static boolean isAttributeType ( SchemaElement element ) { return element instanceof AttributeType ; }
54046	public boolean isAuthorized ( Object credential , String action , Object data , Map env ) { return _BOOL ; }
54059	public void iterateDeclaredPrefixes ( PrefixCallback callback ) throws SAXException { for ( Enumeration e = nss . getDeclaredPrefixes ( ) ; e . hasMoreElements ( ) ; ) { String p = ( String ) e . nextElement ( ) ; String uri = nss . getURI ( p ) ; callback . onPrefixMapping ( p , uri ) ; } }
54154	public void close ( ) { flush ( ) ; if ( writer != _NULL ) { try { writer . close ( ) ; } catch ( IOException e ) { Debug . error ( fileName + _CHAR : FileHandler : Error closing writer _CHAR , e ) ; } } stopBufferTimer ( ) ; }
54159	private int checkACLForFolder ( final ACLEntry entry , final String folder ) { int acl = _NUM ; if ( folder . contains ( entry . folder ) || entry . folder . equals ( File . separator ) ) { acl = countAclByEntry ( acl , entry ) ; } return acl ; }
54240	protected void parseDOMAttributes ( Element element ) throws SAML2Exception { super . parseDOMAttributes ( element ) ; sessionIndex = element . getAttribute ( SAML2Constants . SESSION_INDEX ) ; }
54253	public void reset ( ) { allowToChange = _BOOL ; }
54263	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { super . beginDisplay ( event ) ; setInlineAlertMessage ( CCAlert . TYPE_ERROR , _CHAR message . error _CHAR , _CHAR uncaughtException . message _CHAR ) ; }
54267	public void removeEjb ( String name ) { entries . remove ( name ) ; ContextEjb ejb = _NULL ; synchronized ( ejbs ) { ejb = ejbs . remove ( name ) ; } if ( ejb != _NULL ) { support . firePropertyChange ( _CHAR ejb _CHAR , ejb , _NULL ) ; ejb . setNamingResources ( _NULL ) ; } }
54314	public boolean isVirtual ( ) { return virtual ; }
54331	public final byte [ ] genExemptionBlob ( ) throws IllegalStateException , ExemptionMechanismException { if ( ! isInit ) { throw new IllegalStateException ( _CHAR ExemptionMechanism is not initialized _CHAR ) ; } generated = _BOOL ; byte [ ] result = spiImpl . engineGenExemptionBlob ( ) ; generated = _BOOL ; return result ; }
54333	public GSERParser skipMSP ( ) throws GSERException { skip ( GSER_MSP ) ; return this ; }
54336	public static RequirementsBuilder newArray ( int minItems , RequirementsBuilder builder ) { return newArray ( minItems , builder , _NULL ) ; }
54347	public ConfigParameters disableConnectionHandlers ( boolean disable ) { disableConnectionHandlers = disable ; return this ; }
54357	public boolean containsRuleActionId ( String ruleActionId ) { return getAggregationMap ( ) . containsKey ( ruleActionId ) ; }
54371	@ Override public int doRead ( ByteChunk chunk ) throws IOException { if ( hasRead || buffered . getLength ( ) <= _NUM ) { return - _NUM ; } chunk . setBytes ( buffered . getBytes ( ) , buffered . getStart ( ) , buffered . getLength ( ) ) ; hasRead = _BOOL ; return chunk . getLength ( ) ; }
54384	@ NonNull public static Expired hasExpired ( @ NonNull String key ) { failIfNotInitialized ( ) ; return new Expired ( key ) ; }
54414	private void stop ( ) { if ( host . getLogger ( ) . isDebugEnabled ( ) ) host . getLogger ( ) . debug ( sm . getString ( _CHAR userConfig . stop _CHAR ) ) ; }
54456	public static MatchedValuesFilter createApproximateFilter ( String rawAttributeType , ByteString rawAssertionValue ) { Reject . ifNull ( rawAttributeType , rawAssertionValue ) ; return new MatchedValuesFilter ( APPROXIMATE_MATCH_TYPE , rawAttributeType , rawAssertionValue , _NULL , _NULL , _NULL , _NULL ) ; }
54464	@ Override public long end ( ) throws IOException { return _NUM ; }
54502	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery ) ; }
54507	public ModifyOperation processModify ( DN entryDN , List < Modification > modifications ) { return processModify ( entryDN , modifications , _NULL ) ; }
54514	public int drainPermits ( ) { return sync . drainPermits ( ) ; }
54519	public List < AuditEvent > convertToAuditEvent ( Iterable < PersistentAuditEvent > persistentAuditEvents ) { if ( persistentAuditEvents == _NULL ) { return Collections . emptyList ( ) ; } List < AuditEvent > auditEvents = new ArrayList < > ( ) ; for ( PersistentAuditEvent persistentAuditEvent : persistentAuditEvents ) { auditEvents . add ( convertToAuditEvent ( persistentAuditEvent ) ) ; } return auditEvents ; }
54524	public static final boolean isWhiteSpace ( CharSequence s ) { for ( int i = s . length ( ) - _NUM ; i >= _NUM ; i -- ) if ( ! isWhiteSpace ( s . charAt ( i ) ) ) return _BOOL ; return _BOOL ; }
54536	public PollingWaitCallbackBuilder withWaitTime ( String waitTime ) { this . waitTime = waitTime ; return this ; }
54590	public String metricsPackageName ( ) { return values . metricsPackageName ; }
54593	public static SASLContext createSASLContext ( final HashMap < String , String > saslProps , final String serverFQDN , final String mechanism , final IdentityMapper < ? > identityMapper ) throws SaslException { return new SASLContext ( saslProps , serverFQDN , mechanism , identityMapper ) ; }
54602	public static ComponentUI createUI ( JComponent c ) { return new SynthColorChooserUI ( ) ; }
54609	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException , FormatException , ChecksumException { return decode ( image , _NULL ) ; }
54654	public int size ( ) { return parameters . size ( ) ; }
54698	public static boolean isValidWithNetMask ( String address ) { return isValidIPv4WithNetmask ( address ) || isValidIPv6WithNetmask ( address ) ; }
54759	private void completeIfNecessary ( final ResourceException e , final PromiseImpl < QueryResponse , ResourceException > handler ) { if ( pendingResult == _NULL ) { pendingResult = e ; } completeIfNecessary ( handler ) ; }
54773	public void removeService ( String name ) { entries . remove ( name ) ; ContextService service = _NULL ; synchronized ( services ) { service = services . remove ( name ) ; } if ( service != _NULL ) { support . firePropertyChange ( _CHAR service _CHAR , service , _NULL ) ; service . setNamingResources ( _NULL ) ; } }
54790	public void reset_doors ( ) { for ( ExpandRoomObstacle curr_room : expansion_room_arr ) { if ( curr_room == _NULL ) continue ; curr_room . reset_doors ( ) ; } }
54818	public boolean hasAge ( ) { return fieldSetFlags ( ) [ _NUM ] ; }
54850	public final boolean push ( boolean val ) { if ( m_index == m_allocatedSize - _NUM ) grow ( ) ; return ( m_values [ ++ m_index ] = val ) ; }
54864	public void clearWarnedTime ( ) { logger . trace ( _CHAR Clearing warned time for user % s '' , userDNString ) ; if ( getWarnedTime ( ) >= _NUM ) { warnedTime =- _NUM ; clearAttribute ( OP_ATTR_PWPOLICY_WARNED_TIME ) ; logger . trace ( _CHAR Cleared the warned time for user % s '' , userDNString ) ; } }
54899	public int size ( ) { return ( impl . size ( ) ) ; }
54903	public static String match ( String self , String pattern ) throws Exception { return match ( self , pattern , - _NUM ) ; }
54906	public boolean mustReindex ( AbstractIndexDescriptor index ) { for ( AbstractIndexDescriptor i : modifiedIndexes ) { if ( i . getName ( ) . equals ( index . getName ( ) ) && i . getBackend ( ) . getBackendID ( ) . equals ( index . getBackend ( ) . getBackendID ( ) ) ) { return _BOOL ; } } return _BOOL ; }
54935	public java . lang . Object newInstance ( java . lang . Class javaContentInterface ) throws javax . xml . bind . JAXBException { return super . newInstance ( javaContentInterface ) ; }
54948	public static long dynamicQueryCount ( com . liferay . portal . kernel . dao . orm . DynamicQuery dynamicQuery ) { return getService ( ) . dynamicQueryCount ( dynamicQuery ) ; }
54961	public void resetStats ( ) { ConcurrentHashMap < String , QueryStats > queries = perPoolStats . get ( poolName ) ; if ( queries != _NULL ) { Iterator < String > it = queries . keySet ( ) . iterator ( ) ; while ( it . hasNext ( ) ) it . remove ( ) ; } }
54998	boolean isTerminatedOnBye ( ) { return this . terminateOnBye ; }
55026	private int hashCode ( Collection < List < Attribute >> attributesLists ) { int result = _NUM ; for ( List < Attribute > attributes : attributesLists ) { for ( Attribute a : attributes ) { result += a . hashCode ( ) ; } } return result ; }
55032	@ Override public void removeChangeListener ( ConfigurationChangeListener < ExternalChangelogDomainCfg > listener ) { }
55041	@ Override public long dynamicQueryCount ( DynamicQuery dynamicQuery , Projection projection ) { return fooPersistence . countWithDynamicQuery ( dynamicQuery , projection ) ; }
55050	public boolean isEditable ( ) { return editable ; }
55061	public static boolean isDigit ( final char c ) { final ASCIICharProp cp = ASCIICharProp . valueOf ( c ) ; return cp != _NULL ? cp . isDigit ( ) : _BOOL ; }
55062	public final boolean pull_tight ( boolean p_own_net_only , int p_pullt_min_move , ThreadStoppable p_stoppable_thread ) { NetNosList opt_net_no_arr = p_own_net_only ? net_nos : NetNosList . EMPTY ; AlgoPullTight pull_tight_algo = AlgoPullTight . get_instance ( r_board , opt_net_no_arr , p_pullt_min_move , p_stoppable_thread , _NULL ) ; return pull_tight ( pull_tight_algo ) ; }
55102	public int size ( ) { return map . size ( ) ; }
55109	public boolean isInboundOffhook ( ) { return ( currentState == inboundOffHookState ) ; }
55142	public static Cookie newCookie ( String name , String value ) { return newCookie ( name , value , defAge , _NULL , _NULL ) ; }
55149	public static void writeFile ( String path , byte [ ] contents ) throws IOException { try ( FileOutputStream fos = new FileOutputStream ( path ) ) { fos . write ( contents ) ; } }
55201	private void emitStoreResult ( Name name ) { if ( name != _NULL && name . type != V_TYPE ) { emitStoreInsn ( name . type , name . index ( ) ) ; } }
55212	private static Class < ? > loadBuilderClass ( String builderClassName ) throws ClassNotFoundException { final ClassLoader loader = Thread . currentThread ( ) . getContextClassLoader ( ) ; if ( loader != _NULL ) { return loader . loadClass ( builderClassName ) ; } return ReflectUtil . forName ( builderClassName ) ; }
55219	@ Override public boolean isMonitoringRunning ( ) { return MonitoringUtil . isRunning ( ) ; }
55248	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; if ( ! ( obj instanceof ServicePermission ) ) return _BOOL ; ServicePermission that = ( ServicePermission ) obj ; return ( ( this . mask & that . mask ) == that . mask ) && this . getName ( ) . equals ( that . getName ( ) ) ; }
55276	@ Override public void updateDrawState ( TextPaint ds ) { ds . setColor ( editorDelegate . mEditText . getCurrentTextColor ( ) ) ; ds . setUnderlineText ( _BOOL ) ; }
55280	public static List < Foo > toModels ( FooSoap [ ] soapModels ) { if ( soapModels == _NULL ) { return _NULL ; } List < Foo > models = new ArrayList < Foo > ( soapModels . length ) ; for ( FooSoap soapModel : soapModels ) { models . add ( toModel ( soapModel ) ) ; } return models ; }
55297	@ Override public boolean isCommitted ( ) { return getCoyoteResponse ( ) . isCommitted ( ) ; }
55307	public AwtreeNode pop ( ) { if ( node_list . isEmpty ( ) ) return _NULL ; return node_list . removeLast ( ) ; }
55335	public void applyPattern ( String pattern ) { applyPatternImpl ( pattern ) ; }
55336	private boolean hasPath ( String uri ) { int pos = uri . indexOf ( _CHAR : // '' ) ; if ( pos < 0 ) { return false ; } pos = uri . indexOf ( '/ ' , pos + 3 ) ; if ( pos < 0 ) { return false ; } return true ; }
55389	protected void addMenus ( ) { add ( createFileMenuBar ( ) ) ; add ( createViewMenuBar ( ) ) ; add ( createHelpMenuBar ( ) ) ; }
55392	@ Override public String toString ( ) { return name ; }
55440	public void alist_append_to ( PlaLineIntAlist dest , int src_pos , int length ) { for ( int index = _NUM ; index < length ; index ++ ) dest . add ( plaline ( src_pos + index ) ) ; }
55472	public boolean orgTemplateExists ( String serviceName ) throws AMException , SSOException { ServiceConfig sc = AMServiceUtils . getOrgConfig ( token , entryDN , serviceName ) ; return ( sc != _NULL ) ; }
55492	public boolean isTagPresent ( int tag ) { return fieldIndex . containsKey ( tag ) ; }
55534	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { for ( int i = _NUM ; i < m_patterns . length ; i ++ ) { m_patterns [ i ] . fixupVariables ( vars , globalsSize ) ; } }
55590	public static GetPropSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > path , SingletonRelationDefinition < ? , ? > r ) throws ArgumentException { return new GetPropSubCommandHandler ( parser , path . child ( r ) , r ) ; }
55607	private ResourcePath managedId ( String resourceId ) { return resourceId != _NULL ? managedObjectPath . child ( resourceId ) : managedObjectPath ; }
55618	public boolean isRdrandEnabled ( ) { return rdrandEnabled ; }
55621	public void multipleEntriesSelected ( ) { searchResult = _NULL ; delete . setVisible ( _BOOL ) ; saveChanges . setVisible ( _BOOL ) ; cardLayout . show ( mainPanel , MULTIPLE_SELECTED ) ; displayedEntryPanel = _NULL ; }
55656	public void componentResized ( ComponentEvent e ) { getHandler ( ) . componentResized ( e ) ; }
55711	public static SetPropSubCommandHandler create ( SubCommandArgumentParser parser , ManagedObjectPath < ? , ? > path , SingletonRelationDefinition < ? , ? > r ) throws ArgumentException { return new SetPropSubCommandHandler ( parser , path . child ( r ) , r ) ; }
55732	public void push ( double val ) { this . push ( new BaseTypeWrapper ( val ) ) ; }
55738	int size ( ) { return Integer . bitCount ( set ) ; }
55744	@ DataProvider public Object [ ] [ ] authzID ( ) { return new Object [ ] [ ] { { _CHAR uid = test . user , o = test _CHAR } , { _CHAR dn : uid = test . user , o = test _CHAR } , { _CHAR u : test . user _CHAR } } ; }
55777	public String buildJavaVersion ( ) { return properties . getProperty ( _CHAR build . java . version _CHAR ) ; }
55786	protected void stop ( ) { if ( engine . getLogger ( ) . isDebugEnabled ( ) ) engine . getLogger ( ) . debug ( sm . getString ( _CHAR engineConfig . stop _CHAR ) ) ; }
55795	@ Override public void unbind ( ) throws Exception { if ( running ) { stop ( ) ; } serverSock . close ( ) ; serverSock = _NULL ; destroySsl ( ) ; super . unbind ( ) ; shutdownExecutor ( ) ; if ( getHandler ( ) != _NULL ) { getHandler ( ) . recycle ( ) ; } }
55856	@ OnMessage public void echoPongMessage ( PongMessage pm ) { }
55860	boolean containsKey ( final String key ) { return properties . containsKey ( key ) ; }
55872	public static Object instantiate ( ClassLoader cls , String beanName ) throws IOException , ClassNotFoundException { return Beans . instantiate ( cls , beanName , _NULL , _NULL ) ; }
55921	private boolean isVLVAttrs ( String name ) { for ( int i = _NUM ; i < vlvAttrNames . length ; i ++ ) { if ( name . equalsIgnoreCase ( vlvAttrNames [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
55922	public boolean isRegistered ( ) { return ! adsProperties . isEmpty ( ) ; }
55941	public DeleteOperation processDelete ( DN entryDN , List < Control > controls ) { DeleteOperationBasis deleteOperation = new DeleteOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , entryDN ) ; deleteOperation . setInternalOperation ( _BOOL ) ; deleteOperation . run ( ) ; return deleteOperation ; }
55978	void incrementOutCount ( ) { outCount ++ ; }
55998	@ Override public void write ( ASN1Writer stream ) throws IOException { stream . writeStartSequence ( OP_TYPE_MODIFY_DN_REQUEST ) ; stream . writeOctetString ( entryDN ) ; stream . writeOctetString ( newRDN ) ; stream . writeBoolean ( deleteOldRDN ) ; if ( newSuperior != _NULL ) { stream . writeOctetString ( TYPE_MODIFY_DN_NEW_SUPERIOR , newSuperior ) ; } stream . writeEndSequence ( ) ; }
56006	@ Override public void startActivityFromFragment ( final Fragment fragment , final Intent intent , final int requestCode ) { delegate . startActivityFromFragment ( fragment , intent , requestCode ) ; }
56009	public static Date parseDate ( final String dateValue , String [ ] dateFormats ) throws DateParseException { return parseDate ( dateValue , dateFormats , _NULL ) ; }
56014	public void paintSliderTrackBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
56024	protected void Predicate ( ) throws javax . xml . transform . TransformerException { if ( tokenIs ( _CHAR ) ) { nextToken ( ) ; PredicateExpr ( ) ; consumeExpected ( _CHAR ) ; } }
56036	Values initializeValues ( Thread current ) { return current . localValues = new Values ( ) ; }
56088	public int hashCode ( ) { return ( ( ( crossFeedResolution & _NUM ) ) | ( ( feedResolution & _NUM ) << _NUM ) ) ; }
56102	public static ComponentUI createUI ( JComponent list ) { return new SynthListUI ( ) ; }
56132	public int drainPermits ( ) { return sync . drainPermits ( ) ; }
56143	public static Set delimStringToSet ( String str , String delimiter ) { Set valSet = new HashSet ( ) ; StringTokenizer st = new StringTokenizer ( str , delimiter ) ; while ( st . hasMoreTokens ( ) ) { valSet . add ( st . nextToken ( ) . trim ( ) ) ; } return valSet ; }
56174	@ Override public Promise < ResourceResponse , ResourceException > filterDelete ( Context context , DeleteRequest request , RequestHandler next ) { return next . handleDelete ( context , request ) ; }
56183	protected void removeAuthConfigListener ( String configName ) { removeConfigListenerEntry ( singleton ( configName ) ) ; }
56200	public void paintSliderThumbBackground ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { }
56203	public void push ( boolean val ) { this . push ( new BaseTypeWrapper ( val ) ) ; }
56229	public AMAccessAuditEventBuilder component ( Component value ) { putComponent ( jsonValue , value == _NULL ? _NULL : value . toString ( ) ) ; return this ; }
56299	public boolean isBroken ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return generation . broken ; } finally { lock . unlock ( ) ; } }
