17	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
50	public float readFloat ( ) { return scanner . nextFloat ( ) ; }
73	public int bdd_nodes ( ) { return soot . PhaseOptions . getInt ( options , _CHAR bdd - nodes _CHAR ) ; }
100	@ Override public void publish ( String topic , AWSIotQos qos , byte [ ] payload , long timeout ) throws AWSIotException , AWSIotTimeoutException { super . publish ( topic , qos , payload , timeout ) ; }
127	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( name == _NULL ) throw new InvalidObjectException ( _CHAR name can not be _NULL _CHAR ) ; if ( hash == _NUM ) throw new InvalidObjectException ( _CHAR hash can not be zero _CHAR ) ; integrity = MarshalledWrapper . integrityEnforced ( in ) ; }
148	public static boolean isDirectlyInPackage ( @ NotNull String qualifiedName , @ NotNull String packagePrefix ) { return qualifiedName . startsWith ( packagePrefix ) && qualifiedName . indexOf ( _CHAR , packagePrefix . length ( ) + _NUM ) == - _NUM ; }
151	public static String encodeLines ( byte [ ] in ) { return encodeLines ( in , _NUM , in . length , _NUM , systemLineSeparator ) ; }
166	public static String formatNumber ( float number , int digitCount , boolean separateThousands ) { return formatNumber ( number , digitCount , separateThousands , _CHAR ) ; }
193	@ Override public void notationDecl ( String name , String publicId , String systemId ) throws SAXException { allowXMLCatalogPI = _BOOL ; super . notationDecl ( name , publicId , systemId ) ; }
208	public int key ( ) { return _map . _set [ _index ] ; }
227	boolean showPermissionBlockedMessage ( Context context ) { return ! enabledForChrome ( context ) || ! enabledGlobally ( ) ; }
230	private boolean canStopTrackingJob ( JobStatus job ) { return ( ! job . hasTimingDelayConstraint ( ) || job . timeDelayConstraintSatisfied . get ( ) ) && ( ! job . hasDeadlineConstraint ( ) || job . deadlineConstraintSatisfied . get ( ) ) ; }
233	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_graph = graph ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
239	private static int secondaryHash ( int h ) { h ^= ( h >> > _NUM ) ^ ( h >> > _NUM ) ; return h ^ ( h >> > _NUM ) ^ ( h >> > _NUM ) ; }
244	public < T > T removeEnv ( String key ) { String ekey = FlexibleStringExpander . expandString ( key , this . env ) ; FlexibleMapAccessor < T > fma = FlexibleMapAccessor . getInstance ( ekey ) ; return this . removeEnv ( fma ) ; }
257	private static Unit insertGotoBefore ( Chain < Unit > unitChain , Unit node , Unit target ) { Unit newGoto = Jimple . v ( ) . newGotoStmt ( target ) ; unitChain . insertBefore ( newGoto , node ) ; newGoto . redirectJumpsToThisTo ( node ) ; return newGoto ; }
263	public static char [ ] toCharArray ( InputStream is , String encoding ) throws IOException { return toCharArray ( is , Charsets . toCharset ( encoding ) ) ; }
268	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
277	public void update ( Object value ) throws IOException { update ( value , _BOOL ) ; }
293	public boolean monitorMemoryUsageWithNoEviction ( boolean isWriteTypeOperation ) { MemoryEvictionDecision res = monitorMemoryUsageWithNoEviction_Impl ( isWriteTypeOperation ) ; return res != MemoryEvictionDecision . NO_EVICTION ; }
304	@ Override public final void storeData ( final List < T > data ) { if ( log ( data ) && ! fallbackManager . isFallbackFileEmpty ( ) ) { if ( ! this . dataRecovery . isRunning ( ) ) { dataRecovery . setPersistenceManager ( this ) ; new Thread ( dataRecovery ) . start ( ) ; } } }
306	public void reset ( ) { internalReset ( _NUM ) ; }
308	public Application createJmxApplicationInteractive ( String connectionString , String displayName , EnvironmentProvider provider , boolean persistent ) { return createJmxApplicationInteractive ( connectionString , displayName , provider , persistent , _BOOL ) ; }
312	public void addCPItem ( CP cp ) { String uniq = cp . getUniq ( ) ; CP intern ; if ( ( intern = ( CP ) ( cpe . get ( uniq ) ) ) == _NULL ) { cpe . put ( uniq , cp ) ; cp . resolve ( this ) ; } }
333	@ Override public final void pcdata ( Augmentations augs ) throws XNIException { fMixed = _BOOL ; }
344	public static void encode ( InputStream inputStream , OutputStream outputStream ) throws IOException { encode ( inputStream , outputStream , _NUM ) ; }
349	public GsonBuilder addDeserializationExclusionStrategy ( ExclusionStrategy strategy ) { excluder = excluder . withExclusionStrategy ( strategy , _BOOL , _BOOL ) ; return this ; }
362	public void addHeaderView ( View v ) { addHeaderView ( v , _NULL , _BOOL ) ; }
366	@ Override public void cleanup ( ) { fEntityManager . closeReaders ( ) ; }
369	public static char [ ] toCharArray ( Reader input ) throws IOException { CharArrayWriter sw = new CharArrayWriter ( ) ; copy ( input , sw ) ; return sw . toCharArray ( ) ; }
383	public DataSourceDescriptor createModelFor ( DataSource ds ) { return new DefaultDataSourceDescriptor ( ds ) ; }
399	@ Override public String addSymbol ( char [ ] buffer , int offset , int length ) { if ( fSymbolTable . containsSymbol ( buffer , offset , length ) ) { return fSymbolTable . addSymbol ( buffer , offset , length ) ; } return super . addSymbol ( buffer , offset , length ) ; }
401	@ Override public synchronized TimeSeriesCollection updateCollection ( ) { return super . updateCollection ( ) ; }
402	public static Object deepClone ( Object obj ) { try { byte [ ] bArray = objectToByteBuffer ( obj ) ; return objectFromByteBuffer ( bArray ) ; } catch ( Exception ex ) { throw new IllegalArgumentException ( _CHAR Failed to perform deep clone on [ _CHAR + obj + _CHAR ] object . Check that the all object context are implements java . io . Serializable . '' , ex ) ; } }
403	private void scheduleOpTimeOut ( ) { removeOpTimeOut ( ) ; final long timeoutMillis = ( mVerb == VERB_EXECUTING ) ? EXECUTING_TIMESLICE_MILLIS : OP_TIMEOUT_MILLIS ; Message m = mCallbackHandler . obtainMessage ( MSG_TIMEOUT ) ; mCallbackHandler . sendMessageDelayed ( m , timeoutMillis ) ; mTimeoutElapsed = SystemClock . elapsedRealtime ( ) + timeoutMillis ; }
412	public static JavaRDD < List < List < Writable >> > executeToSequence ( JavaRDD < List < Writable >> inputWritables , TransformProcess transformProcess ) { if ( ! ( transformProcess . getFinalSchema ( ) instanceof SequenceSchema ) ) { throw new IllegalStateException ( _CHAR Can not return non - sequence data with this method _CHAR ) ; } return execute ( inputWritables , _NULL , transformProcess ) . getSecond ( ) ; }
417	public int charAt ( int position ) { if ( position > this . length ) return - _NUM ; if ( position < _NUM ) return - _NUM ; ByteBuffer bb = ( ByteBuffer ) ByteBuffer . wrap ( bytes ) . position ( position ) ; return bytesToCodePoint ( bb . slice ( ) ) ; }
418	public boolean isFinished ( ) { return this . request == _NULL || request . isDone ( ) ; }
424	public void close ( ) { finished = _BOOL ; IOUtils . closeQuietly ( bufferedReader ) ; cachedLine = _NULL ; }
428	public void startEntity ( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs ) throws XNIException { fEntityDepth ++ ; fEntityScanner = fEntityManager . getEntityScanner ( ) ; }
430	public JSONArray put ( int index , long value ) throws JSONException { this . put ( index , new Long ( value ) ) ; return this ; }
433	public boolean isUsed ( ) { return myUsed ; }
438	public static boolean deleteQuietly ( File file ) { if ( file == _NULL ) { return _BOOL ; } try { if ( file . isDirectory ( ) ) { cleanDirectory ( file ) ; } } catch ( Exception ignored ) { } try { return file . delete ( ) ; } catch ( Exception ignored ) { return _BOOL ; } }
473	public final char yycharat ( int pos ) { return zzBuffer [ zzStartRead + pos ] ; }
486	@ Override public void stopPropagation ( ) { stopPropagation = _BOOL ; }
506	public Builder maxNativeZoom ( Number maxNativeZoom ) { this . maxNativeZoom = maxNativeZoom ; return this ; }
520	public boolean implicit_entry ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR implicit - entry _CHAR ) ; }
522	public ThrowableSet mightThrowImplicitly ( ThrowStmt t ) { return ThrowableSet . Manager . v ( ) . ALL_THROWABLES ; }
523	public void shutdown ( ) { check ( ) ; state = SHUTDOWN ; synchronized ( this ) { notifyAll ( ) ; } }
535	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
553	public void selectionChanged ( IWorkbenchPart part , ISelection sel ) { selectionChanged ( sel ) ; }
559	public static InvocationConstraint create ( InvocationConstraint [ ] constraints ) { return reduce ( constraints . clone ( ) , _BOOL ) ; }
566	public boolean string_constants ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR string - constants _CHAR ) ; }
568	public Builder withRange ( ByteString endKey ) { this . endKey = Optional . ofNullable ( endKey ) ; return this ; }
574	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
588	void prepareDisplayTaskFor ( ImageAware imageAware , String memoryCacheKey ) { cacheKeysForImageAwares . put ( imageAware . getId ( ) , memoryCacheKey ) ; }
589	public List < X509Certificate > checkServerTrusted ( X509Certificate [ ] chain , String authType , SSLSession session ) throws CertificateException { return checkTrusted ( chain , authType , session , _NULL , _BOOL ) ; }
595	public TrieNode find ( String word ) { return ( word . length ( ) < _NUM ? _NULL : find ( word , root , _NUM ) ) ; }
599	public static GenericValue searchDuplicatedAncestor ( String productId , String productIdKey , String bomType , Date inDate , Delegator delegator , LocalDispatcher dispatcher , GenericValue userLogin ) throws GenericEntityException { return searchDuplicatedAncestor ( productId , productIdKey , _NULL , bomType , inDate , delegator , dispatcher , userLogin ) ; }
606	private void handleException ( final Call call , final Exception e , final Callback callback ) { if ( call . isCanceled ( ) ) { callback . onCancellation ( ) ; } else { callback . onFailure ( e ) ; } }
613	public void populateContextForRequest ( HttpServletRequest request , HttpServletResponse response , ServletContext servletContext ) { populateContextForRequest ( context , this , request , response , servletContext ) ; }
639	public String replaceBackTrickyPhones ( String lab ) { String s = lab ; if ( actualPhones . containsKey ( lab ) ) { s = actualPhones . get ( lab ) ; } return s ; }
669	public static < T extends RealFieldElement < T >> T distance1 ( final FieldVector3D < T > v1 , final FieldVector3D < T > v2 ) { return v1 . distance1 ( v2 ) ; }
674	public LruCachePolicy initialLoadPercentage ( int initialLoadPercentage ) { setInitialLoadPercentage ( initialLoadPercentage ) ; return this ; }
683	public void enableTabSwiping ( boolean enable ) { mEnableTabSwiping = TAB_SWIPING_ENABLED && enable ; }
691	@ Override public void close ( ) throws IOException { fInputStream . close ( ) ; }
709	public static Element addChildElementNSValue ( Element element , String childElementName , String childElementValue , Document document , String nameSpaceUrl ) { Element newElement = document . createElementNS ( nameSpaceUrl , childElementName ) ; newElement . appendChild ( document . createTextNode ( childElementValue ) ) ; element . appendChild ( newElement ) ; return element ; }
720	public K key ( ) { return ( K ) _map . _set [ _index ] ; }
722	public Boolean shouldAllowNavigation ( String url ) { return _NULL ; }
724	static Object createObject ( String factoryId , String fallbackClassName ) throws ConfigurationError { return createObject ( factoryId , _NULL , fallbackClassName ) ; }
733	public boolean merge_stringbuffer ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR merge - stringbuffer _CHAR ) ; }
746	@ Override public void pcdata ( Augmentations augs ) throws XNIException { fMixed = _BOOL ; }
748	private boolean satisfiesFilters ( Set < JobRowFilter > jobRowFilters , JobRow jobRow ) throws IllegalArgumentException { return jobRowFilters . stream ( ) . allMatch ( _NULL ) ; }
753	public static void triggerRefresh ( ) { Bundle extras = new Bundle ( ) ; extras . putBoolean ( ContentResolver . SYNC_EXTRAS_MANUAL , _BOOL ) ; extras . putBoolean ( ContentResolver . SYNC_EXTRAS_EXPEDITED , _BOOL ) ; ContentResolver . requestSync ( AccountUtils . getAccount ( ) , FeedContract . CONTENT_AUTHORITY , extras ) ; }
764	public boolean requiresReboot ( ) { if ( processActionRequired ( ) ) { throw new UnsupportedOperationException ( _CHAR The method is not available for configuration changes that need sending to the DAQ ! '' ) ; } else { return requiresReboot ; } }
766	public int hashCode ( ) { int hash = _NUM ; hash += _NUM * hash + Float . floatToIntBits ( x ) ; hash += _NUM * hash + Float . floatToIntBits ( y ) ; hash += _NUM * hash + Float . floatToIntBits ( z ) ; return hash ; }
767	@ Override public void close ( ) { }
772	public boolean simplify_sccs ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simplify - sccs _CHAR ) ; }
773	@ Override public double nextGaussian ( ) { return randomGenerator . nextGaussian ( ) ; }
777	public void uiSelectingTab ( long time , int id ) { onTabSelecting ( time , id ) ; }
854	@ Override public void close ( ) throws IOException { fInputStream . close ( ) ; }
855	public boolean optBoolean ( String key ) { return this . optBoolean ( key , _BOOL ) ; }
857	private Builder smoothFactor ( Number smoothFactor ) { this . smoothFactor = smoothFactor ; return this ; }
858	public static void cleanupParagraphs ( RTEditText editor , Effect ... exclude ) { cleanupParagraphs ( editor , Effects . ALIGNMENT , exclude ) ; cleanupParagraphs ( editor , Effects . INDENTATION , exclude ) ; cleanupParagraphs ( editor , Effects . BULLET , exclude ) ; cleanupParagraphs ( editor , Effects . NUMBER , exclude ) ; }
863	public void maxLocal ( Vector3f other ) { x = other . x > x ? other . x : x ; y = other . y > y ? other . y : y ; z = other . z > z ? other . z : z ; }
866	public synchronized List subList ( int fromIndex , int toIndex ) { Object [ ] elements = getArray ( ) ; int len = elements . length ; if ( fromIndex < _NUM || toIndex > len || fromIndex > toIndex ) throw new IndexOutOfBoundsException ( ) ; return new COWSubList ( this , fromIndex , toIndex ) ; }
867	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
873	public static JSONObject toJSONObject ( XMLTokener x ) throws JSONException { return ( JSONObject ) parse ( x , _BOOL , _NULL ) ; }
875	public boolean rta ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR rta _CHAR ) ; }
905	public static final int nextPrime ( int desiredCapacity ) { int i = Arrays . binarySearch ( primeCapacities , desiredCapacity ) ; if ( i < _NUM ) { i =- i - _NUM ; } return primeCapacities [ i ] ; }
910	public TemplateDruidQuery withGranularity ( ZonelessTimeGrain newTimeGrain ) { return new TemplateDruidQuery ( aggregations , postAggregations , nestedQuery , newTimeGrain ) ; }
916	@ Override public void reset ( ) throws IOException { fInputStream . reset ( ) ; }
924	@ Override public void cleanup ( ) { fEntityManager . closeReaders ( ) ; }
946	public static void writeLines ( File file , Collection < ? > lines , String lineEnding , boolean append ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , append ) ; }
954	public StatelessHibernateSpaceDataSourceConfigurer initialLoadChunkSize ( int initalLoadChunkSize ) { this . initialLoadChunkSize = initalLoadChunkSize ; return this ; }
956	private static boolean contains ( Entry [ ] eSet , Entry e ) { for ( int i = _NUM ; i < eSet . length ; i ++ ) if ( equal ( eSet [ i ] , e ) ) return _BOOL ; return _BOOL ; }
977	public static String toString ( InputStream input ) throws IOException { return toString ( input , Charset . defaultCharset ( ) ) ; }
991	public static void writeLines ( File file , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , _BOOL ) ; }
995	public Ticket schedule ( long when , Runnable task ) { return schedule ( when , task , _NULL ) ; }
1027	void subscribeByRegex ( final Set < String > regexList , final BaseListener listener , final boolean sendInitialUpdateSeperately ) throws CacheSynchronizationException { final Set < Long > allMatchingTags = new HashSet < Long > ( ) ; Set < Long > newTagIds = cacheSynchronizer . initTags ( regexList , allMatchingTags ) ; handleTagSubscription ( allMatchingTags , newTagIds , listener , sendInitialUpdateSeperately ) ; }
1029	@ Override protected void synchronizeChildren ( ) { DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) ownerDocument ( ) ; ownerDocument . synchronizeChildren ( this , fNodeIndex ) ; }
1035	public Matrix3f transpose ( ) { return transposeLocal ( ) ; }
1043	@ Override public boolean equals ( Object obj ) { if ( obj == this ) { return _BOOL ; } else if ( obj == _NULL || obj . getClass ( ) != getClass ( ) ) { return _BOOL ; } return getName ( ) . equals ( ( ( Permission ) obj ) . getName ( ) ) ; }
1048	public synchronized Map < D , EdgeFunction < L >> reverseLookup ( N target , D targetVal ) { assert target != _NULL ; assert targetVal != _NULL ; Map < D , EdgeFunction < L >> res = nonEmptyReverseLookup . get ( target , targetVal ) ; if ( res == _NULL ) return Collections . emptyMap ( ) ; return res ; }
1077	public static ULong ulong ( long value ) { return ULong . valueOf ( value ) ; }
1079	private void toggleSelection ( final int position ) { mTicketsAdapter . toggleSelection ( position ) ; int count = mTicketsAdapter . getSelectedItemCount ( ) ; if ( count == _NUM ) { mActionMode . finish ( ) ; } else { mActionMode . setTitle ( String . valueOf ( count ) ) ; mActionMode . invalidate ( ) ; } }
1098	public boolean intersectWherePlanar ( Vector3f v0 , Vector3f v1 , Vector3f v2 , Vector3f loc ) { return intersects ( v0 , v1 , v2 , loc , _BOOL , _BOOL ) ; }
1100	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
1123	private RealDistribution findKernel ( double lower , double upper ) { if ( lower < _NUM ) { return new NormalDistribution ( _NUM , _NUM . _NUM ) ; } else { return new NormalDistribution ( ( upper + lower + _NUM ) / _NUM , _NUM . _NUM ) ; } }
1145	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
1168	@ Override public int size ( ) { return backedSet . size ( ) ; }
1176	@ Override public Vector whatCanGoHere ( int [ ] state ) { return EMPTY ; }
1179	public boolean insert_redundant_casts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR insert - redundant - casts _CHAR ) ; }
1203	public void aionClientDisconnected ( int accountId ) { synchronized ( this ) { loginRequests . remove ( accountId ) ; loggedInAccounts . remove ( accountId ) ; } sendAccountDisconnected ( accountId ) ; }
1213	private static boolean hasSelfPermission ( Context context , String permission ) { try { return PermissionChecker . checkSelfPermission ( context , permission ) == PackageManager . PERMISSION_GRANTED ; } catch ( RuntimeException t ) { return _BOOL ; } }
1218	public static Map < String , Object > returnError ( String errorMessage , List < ? extends Object > errorMessageList , Map < String , ? extends Object > errorMessageMap , Map < String , ? extends Object > nestedResult ) { return returnProblem ( ModelService . RESPOND_ERROR , errorMessage , errorMessageList , errorMessageMap , nestedResult ) ; }
1229	private List < XtnEntry > initReadLockOwnersIfNeed ( ) { if ( _readLocksOwners == _NULL ) _readLocksOwners = new ArrayList < XtnEntry > ( ) ; return _readLocksOwners ; }
1253	public FTPFile [ ] list ( ) throws IllegalStateException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException , FTPListParseException { return list ( _NULL ) ; }
1254	public final void removePropertyChangeListener ( String propertyName , PropertyChangeListener listener ) { getChangeSupport ( ) . removePropertyChangeListener ( propertyName , listener ) ; }
1306	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
1331	public double distance ( Location o ) { return Math . sqrt ( distanceSquared ( o ) ) ; }
1339	public DefaultHibernateSpaceDataSourceConfigurer performOrderById ( boolean performOrderById ) { this . performOrderById = performOrderById ; return this ; }
1340	public int max_inlinee_size ( ) { return soot . PhaseOptions . getInt ( options , _CHAR max - inlinee - size _CHAR ) ; }
1344	@ VisibleForTesting public void cleanAllMiniDumps ( ) { cleanOutAllNonFreshMinidumpFiles ( ) ; for ( File f : getAllMinidumpFiles ( ) ) { deleteFile ( f ) ; } }
1355	public static void writeLines ( File file , String encoding , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , encoding , lines , _NULL , append ) ; }
1365	default String fromIri ( IRI iri ) { return iri . getShortForm ( ) ; }
1373	private static Version readVersion ( BitMatrix bitMatrix ) throws FormatException { int numRows = bitMatrix . getHeight ( ) ; int numColumns = bitMatrix . getWidth ( ) ; return Version . getVersionForDimensions ( numRows , numColumns ) ; }
1374	public void destroyContent ( ) { super . destroyOverlayPanelContent ( ) ; }
1384	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_INFO_2_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1390	public boolean equals ( Object obj ) { if ( ! ( obj instanceof DelegationAbsoluteTime ) ) { return _BOOL ; } DelegationAbsoluteTime dc = ( DelegationAbsoluteTime ) obj ; return ( minStart == dc . minStart && maxStart == dc . maxStart && minStop == dc . minStop && maxStop == dc . maxStop ) ; }
1407	public void updateSingleStat ( MapleStat stat , long newval , boolean itemReaction ) { Map < MapleStat , Long > statup = new EnumMap < > ( MapleStat . class ) ; statup . put ( stat , newval ) ; client . getSession ( ) . write ( CWvsContext . updatePlayerStats ( statup , itemReaction , this ) ) ; }
1414	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
1429	private static boolean clientOverwriteable ( SootMethod m ) { SootClass c = m . getDeclaringClass ( ) ; if ( ! c . isFinal ( ) && ! m . isFinal ( ) && visible ( m ) && clientCanInstantiate ( c ) ) return _BOOL ; return _BOOL ; }
1432	public short readShort ( ) { return scanner . nextShort ( ) ; }
1438	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
1442	public boolean optBoolean ( int index ) { return this . optBoolean ( index , _BOOL ) ; }
1450	public synchronized void clearDamage ( ) { if ( m_damageRedraw ) m_clip . reset ( ) ; }
1458	public static TrustSource empty ( ) { return new TrustSource ( ) ; }
1473	public void leaveIntermediateCatchEvent ( DelegateExecution execution ) { EventGateway eventGateway = getPrecedingEventBasedGateway ( execution ) ; if ( eventGateway != _NULL ) { deleteOtherEventsRelatedToEventBasedGateway ( execution , eventGateway ) ; } leave ( execution ) ; }
1561	@ Override public void onEviction ( ResourceKey < K > resourceKey ) { for ( ; ; ) { Status status = resourceKey . getStatus ( ) ; switch ( status ) { case IDLE : if ( resourceKey . goFromIdleToRetired ( ) ) { cache . remove ( resourceKey ) ; return ; } break ; default : return ; } } }
1570	public static boolean isOptionalClosing ( String tagName ) { return isElement ( tagName , OPT_CLOSING ) ; }
1574	public static long timeMillis ( ) { return SystemInfo . singleton ( ) . timeProvider ( ) . timeMillis ( ) ; }
1579	public static String guessBuildSystemName ( ) { Project project = guessCurrentProject ( ) ; return buildSystemName ( project ) ; }
1585	boolean isDirty ( CoordinatorLayout parent , View child ) { return mBehavior != _NULL && mBehavior . isDirty ( parent , child ) ; }
1606	private boolean isOff ( long flag ) { return ( options & flag ) == _NUM ; }
1608	public TapTarget dimColor ( @ ColorRes int color ) { this . dimColor = color ; return this ; }
1633	public static void update ( VisualItem item , String field , Object val ) { item . set ( getStartField ( field ) , item . get ( field ) ) ; item . set ( field , val ) ; item . set ( getEndField ( field ) , val ) ; }
1642	public Builder updateWhenIdle ( Boolean updateWhenIdle ) { this . updateWhenIdle = updateWhenIdle ; return this ; }
1649	public List < Pair < SequenceUUID , Integer >> guessMainAudio ( String lang ) { List < Pair < SequenceUUID , Integer >> surround = guessChannelsByEssenceDescriptor ( SURROUND , lang ) ; if ( surround . isEmpty ( ) ) { return guessChannelsByEssenceDescriptor ( STEREO , lang ) ; } return surround ; }
1656	public S2CellId prev ( ) { return new S2CellId ( id - ( lowestOnBit ( ) << _NUM ) ) ; }
1658	private void addToMap ( LocatorReg reg ) { undiscoveredLocators . add ( reg ) ; queueDiscoveryTask ( reg ) ; }
1664	public boolean compare_type_assigners ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR compare - type - assigners _CHAR ) ; }
1665	public K key ( ) { return ( K ) _map . _set [ _index ] ; }
1674	public static String toString ( InputStream input , String encoding ) throws IOException { return toString ( input , Charsets . toCharset ( encoding ) ) ; }
1677	public static byte [ ] decode ( byte [ ] source ) throws java . io . IOException { byte [ ] decoded = _NULL ; decoded = decode ( source , _NUM , source . length , Base64 . NO_OPTIONS ) ; return decoded ; }
1679	public static byte [ ] decode ( byte [ ] source ) { byte [ ] decoded = _NULL ; try { decoded = decode ( source , _NUM , source . length , Base64 . NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : _CHAR IOExceptions only come from GZipping , which is turned off : _CHAR + ex . getMessage ( ) ; } return decoded ; }
1688	@ Override public double evaluate ( final double [ ] values , final int begin , final int length ) throws MathIllegalArgumentException { return FastMath . sqrt ( variance . evaluate ( values , begin , length ) ) ; }
1699	@ Override public String toString ( ) { return getClass ( ) . getSimpleName ( ) + _CHAR [ Normal : _CHAR + normal + _CHAR - Constant : _CHAR + constant + _CHAR ] _CHAR ; }
1709	public static Boolean booleanValue ( Object value ) { if ( value == _NULL || value instanceof Boolean ) { return ( Boolean ) value ; } else if ( _CHAR _BOOL _CHAR . equals ( value ) ) { return Boolean . TRUE ; } else if ( _CHAR _BOOL _CHAR . equals ( value ) ) { return Boolean . FALSE ; } else { return _NULL ; } }
1715	static boolean isJavaVersionMatch ( final String version , final String versionPrefix ) { if ( version == _NULL ) { return _BOOL ; } return version . startsWith ( versionPrefix ) ; }
1725	public static final boolean isConvertible ( final Object value , final String className ) { return ( cast ( value , className ) != _NULL ) ; }
1731	public void addHeaderView ( View v ) { addHeaderView ( v , _NULL , _BOOL ) ; }
1735	public boolean isFailure ( ) { return this . status != _NULL && this . status . equals ( ConfigConstants . Status . FAILURE ) ; }
1739	@ Override public void pcdata ( Augmentations augs ) throws XNIException { }
1756	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
1760	public static byte indicator ( final byte x ) { return ( x >= ZB ) ? PB : NB ; }
1761	private void beforeSave ( DataSupport baseObj , List < Field > supportedFields , ContentValues values ) throws SecurityException , IllegalArgumentException , NoSuchMethodException , IllegalAccessException , InvocationTargetException { putFieldsValue ( baseObj , supportedFields , values ) ; if ( ! ignoreAssociations ) { putForeignKeyValue ( values , baseObj ) ; } }
1772	public ECDSASignature toCanonicalised ( ) { if ( ! isCanonical ( ) ) { return new ECDSASignature ( r , CURVE . getN ( ) . subtract ( s ) ) ; } else { return this ; } }
1774	public void start ( ) { getTimer ( SELF ) . start ( ) ; }
1780	public void stopRecording ( ) { m_line . stop ( ) ; m_line . close ( ) ; }
1783	protected void addOnPropertyChangedCallback ( Observable . OnPropertyChangedCallback callback ) { onPropertyChangedCallbacks . add ( callback ) ; getViewModel ( ) . addOnPropertyChangedCallback ( callback ) ; }
1786	@ Override public void textDecl ( String version , String encoding , Augmentations augs ) throws XNIException { }
1788	public EntityQuery where ( EntityCondition ... entityCondition ) { this . whereEntityCondition = EntityCondition . makeCondition ( Arrays . asList ( entityCondition ) ) ; return this ; }
1791	public boolean geom_app_only ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR geom - app - only _CHAR ) ; }
1793	public DynamicTemplateParameterContext appendParameter ( DynamicContextParameters param , String paramValue ) { return appendParameter ( param , paramValue , ContextInfo . EMPTY ) ; }
1801	public boolean contains ( Object o ) { Object [ ] elements = getArray ( ) ; return indexOf ( o , elements , _NUM , elements . length ) >= _NUM ; }
1809	public static String encodeLines ( byte [ ] in ) { return encodeLines ( in , _NUM , in . length , _NUM , systemLineSeparator ) ; }
1813	public double predict ( final double x ) { final double b1 = getSlope ( ) ; if ( hasIntercept ) { return getIntercept ( b1 ) + b1 * x ; } return b1 * x ; }
1832	public Builder conditionalReduction ( String column , String outputName , ReduceOp reduction , Condition condition ) { this . conditionalReductions . put ( column , new ConditionalReduction ( column , outputName , reduction , condition ) ) ; return this ; }
1833	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
1847	public Builder inertiaThreshold ( Number inertiaThreshold ) { this . inertiaThreshold = inertiaThreshold ; return this ; }
1858	public void onRestoreStateForActivityResult ( Bundle state , CallbackContext callbackContext ) { }
1860	public boolean isSynchronizing ( Account account , OCFile file ) { return mSyncFolderHandler . isSynchronizing ( account , file . getRemotePath ( ) ) ; }
1868	@ Override public void subscribe ( final Set < Long > tagIds , final TagListener listener ) { doSubscription ( tagIds , listener ) ; }
1874	@ Override public final Node namedItem ( String name ) { if ( name == _NULL ) throw new NullPointerException ( _CHAR HTM013 Argument _CHAR is _NULL . _CHAR ) ; return namedItem ( _topLevel , name ) ; }
1875	public static byte [ ] toByteArray ( InputStream input ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output ) ; return output . toByteArray ( ) ; }
1881	@ Override public DOMASBuilder createDOMASBuilder ( ) { return new DOMASBuilderImpl ( ) ; }
1897	public void waiterNotify ( Object notifier ) { synchronized ( notifier ) { notifier . notifyAll ( ) ; } }
1899	public PhotosGetAllQuery noServiceAlbums ( Boolean value ) { return unsafeParam ( _CHAR no_service_albums _CHAR , value ) ; }
1901	private void notifyListeners ( Object object , JsonObject config ) { for ( PropertyChangeListener configUpdate : listener ) { configUpdate . propertyChange ( new PropertyChangeEvent ( this , _CHAR configSetup _CHAR , config , config ) ) ; } }
1904	@ Override public int available ( ) throws IOException { return frameSize * source . available ( ) ; }
1917	public void enableDashedLine ( float lineLength , float spaceLength , float phase ) { mDashPathEffect = new DashPathEffect ( new float [ ] { lineLength , spaceLength } , phase ) ; }
1953	public final void removePropertyChangeListener ( PropertyChangeListener listener ) { getChangeSupport ( ) . removePropertyChangeListener ( listener ) ; }
1958	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augs ) throws XNIException { }
1969	public static Object processTarget ( Object target ) { if ( Proxy . isProxyClass ( target . getClass ( ) ) ) { MetaObject mo = SystemMetaObject . forObject ( target ) ; return processTarget ( mo . getValue ( _CHAR h . target _CHAR ) ) ; } return target ; }
2004	@ Override protected void thresholdReached ( ) throws IOException { if ( prefix != _NULL ) { outputFile = File . createTempFile ( prefix , suffix , directory ) ; } FileOutputStream fos = new FileOutputStream ( outputFile ) ; memoryOutputStream . writeTo ( fos ) ; currentOutputStream = fos ; memoryOutputStream = _NULL ; }
2006	public void onSaveInstanceState ( Bundle outState ) { outState . putBoolean ( _CHAR SlidingActivityHelper . open _CHAR , mSlidingMenu . isMenuShowing ( ) ) ; outState . putBoolean ( _CHAR SlidingActivityHelper . secondary _CHAR , mSlidingMenu . isSecondaryMenuShowing ( ) ) ; }
2016	private boolean checkPlayServices ( ) { GoogleApiAvailability apiAvailability = GoogleApiAvailability . getInstance ( ) ; int resultCode = apiAvailability . isGooglePlayServicesAvailable ( context . getApplicationContext ( ) ) ; if ( resultCode != ConnectionResult . SUCCESS ) { return _BOOL ; } return _BOOL ; }
2021	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( minStart > maxStart || maxStart > minStop || minStop > maxStop ) { throw new InvalidObjectException ( _CHAR invalid times _CHAR ) ; } }
2030	@ Override public void startElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { if ( fNamespaces ) { handleStartElement ( element , attributes , augs , _BOOL ) ; } else if ( fDocumentHandler != _NULL ) { fDocumentHandler . startElement ( element , attributes , augs ) ; } }
2035	@ Override public LSOutput createLSOutput ( ) { return new DOMOutputImpl ( ) ; }
2036	public void writeTo ( OutputStream out ) throws IOException { out . write ( _buffer , _NUM , _count ) ; }
2049	public static byte [ ] toByteArray ( Reader input ) throws IOException { return toByteArray ( input , Charset . defaultCharset ( ) ) ; }
2053	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
2057	@ Override public void write ( DataOutput out ) throws IOException { ensureTextSet ( ) ; WritableUtils . writeVInt ( out , _text . limit ( ) ) ; out . write ( _text . array ( ) , _NUM , _text . limit ( ) ) ; }
2070	private void notifyAllSupervisedCachesOfUpdate ( ) { for ( Long key : processCache . getKeys ( ) ) { processFacade . refreshAndnotifyCurrentSupervisionStatus ( key ) ; } for ( Long key : equipmentCache . getKeys ( ) ) { equipmentFacade . refreshAndnotifyCurrentSupervisionStatus ( key ) ; } for ( Long key : subEquipmentCache . getKeys ( ) ) { subEquipmentFacade . refreshAndnotifyCurrentSupervisionStatus ( key ) ; } }
2074	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
2091	public void delete ( int slot ) { currentBuff . lockFlushing ( ) ; try { for ( int i = slot + _NUM ; i < getNumRecords ( ) ; i ++ ) copyRecordWithoutLogging ( i , i - _NUM ) ; setNumRecordsWithoutLogging ( getNumRecords ( ) - _NUM ) ; } finally { currentBuff . unlockFlushing ( ) ; } }
2100	public DataQueryParams conform ( ) { if ( ! ( ! getDataElements ( ) . isEmpty ( ) && getDataElementOperands ( ) . isEmpty ( ) && getIndicators ( ) . isEmpty ( ) && getReportingRates ( ) . isEmpty ( ) ) ) { removeDimension ( CATEGORYOPTIONCOMBO_DIM_ID ) ; } return this ; }
2101	public Vector2f multLocal ( Vector2f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x *= vec . x ; y *= vec . y ; return this ; }
2112	public int read ( byte b [ ] ) throws IOException { return read ( b , _NUM , b . length ) ; }
2122	public static String join ( Object [ ] elements , String glue ) { return ( join ( Arrays . asList ( elements ) , glue ) ) ; }
2166	public @ NonNull ChargeRequest . Builder restrictTendersTo ( @ NonNull Collection < TenderType > tenderTypes ) { nonNull ( tenderTypes , _CHAR tenderTypes _CHAR ) ; if ( tenderTypes . isEmpty ( ) ) { throw new IllegalArgumentException ( _CHAR Please restrict to at least one TenderType . '' ) ; } this . tenderTypes . clear ( ) ; this . tenderTypes . addAll ( tenderTypes ) ; return this ; }
2181	public static Experiment createExperiment ( ) { return new Experiment ( Constants . DEFAULT_PREFIX_EXPERIMENT + System . currentTimeMillis ( ) + internalId ++ , ApplicationFactory . defaultApplication ( ) , TestUtils . currentTimeString ( ) , TestUtils . relativeTimeString ( _NUM ) , _NUM ) . setCreatorID ( USER_ID ) . setDescription ( _CHAR A sample Experiment description . '' ) ; }
2185	public BoardAddTopicQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
2192	@ VisibleForTesting int exactBinarySearch ( long searchX , int startSearchIndex ) { return approximateBinarySearch ( searchX , startSearchIndex , mData . size ( ) - _NUM , _BOOL , _NUM ) ; }
2210	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
2212	static Object createObject ( String factoryId , String fallbackClassName ) throws ConfigurationError { return createObject ( factoryId , _NULL , fallbackClassName ) ; }
2222	public static List < String > readLines ( InputStream input , String encoding ) throws IOException { return readLines ( input , Charsets . toCharset ( encoding ) ) ; }
2230	public static float scrollToScreen ( float x , float warpSize ) { if ( x <= _NUM ) return _NUM ; if ( x >= _NUM * warpSize ) return x - warpSize ; x = ( x - warpSize ) / ( _NUM . _NUM * warpSize ) + _NUM . _NUM ; return x * x * warpSize ; }
2232	public static String removeLast ( String string , int characters ) { if ( string == _NULL ) { return _NULL ; } if ( characters < _NUM || characters > string . length ( ) ) { return EMPTY ; } return string . substring ( _NUM , string . length ( ) - characters ) ; }
2239	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
2246	public int nextInt ( ) { int val = iterator . val ; if ( iterator != _NULL ) { iterator = iterator . next ; } return val ; }
2254	public synchronized long fileCount ( ) { return fileCount ; }
2273	public JSONWriter object ( ) throws JSONException { if ( this . mode == _CHAR ) { this . mode = _CHAR ; } if ( this . mode == _CHAR || this . mode == _CHAR ) { this . append ( _CHAR { _CHAR ) ; this . push ( new JSONObject ( ) ) ; this . comma = _BOOL ; return this ; } throw new JSONException ( _CHAR Misplaced object . '' ) ; }
2290	public static IntBuffer createIntBuffer ( int ... data ) { if ( data == _NULL ) { return _NULL ; } IntBuffer buff = createIntBuffer ( data . length ) ; buff . clear ( ) ; buff . put ( data ) ; buff . flip ( ) ; return buff ; }
2291	public String formatTweetText ( CustomStatus status ) { if ( status . isRetweet ( ) ) { return _CHAR RT _CHAR + formatText ( status . getRetweetedStatus ( ) . getText ( ) ) ; } else { return formatText ( status . getText ( ) ) ; } }
2294	public static < T extends RealFieldElement < T >> T distance ( final FieldVector3D < T > v1 , final Vector3D v2 ) { return v1 . distance ( v2 ) ; }
2298	public static < K , V > Map < K , V > newMap ( ) { return new HashMap < K , V > ( ) ; }
2303	public Builder animate ( Boolean animate ) { this . animate = animate ; return this ; }
2321	public boolean simple_edges_bidirectional ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simple - edges - bidirectional _CHAR ) ; }
2330	public void parse ( Reader reader ) throws IOException { parse ( reader , DEFAULT_BUFFER_SIZE ) ; }
2339	public static boolean checkStorageAccessPermissions ( Context context ) { if ( android . os . Build . VERSION . SDK_INT >= android . os . Build . VERSION_CODES . M ) { String permission = _CHAR android . permission . READ_EXTERNAL_STORAGE _CHAR ; int res = context . checkCallingOrSelfPermission ( permission ) ; return ( res == PackageManager . PERMISSION_GRANTED ) ; } else { return _BOOL ; } }
2363	public boolean class_method_var ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR class - method - var _CHAR ) ; }
2382	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . processingInstruction ( target , data , augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . processingInstruction ( target , data , augs ) ; } }
2385	public static String toString ( Reader input ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw ) ; return sw . toString ( ) ; }
2395	private void updateSyncEverythingState ( ) { boolean isSyncEnabled = mSyncSwitchPreference . isChecked ( ) ; mSyncEverything . setEnabled ( isSyncEnabled ) ; mSyncEverything . setChecked ( ! isSyncEnabled || mProfileSyncService . hasKeepEverythingSynced ( ) ) ; }
2397	public boolean isWriteLockEnabled ( ) { return this . getBoolean ( BKDL_WRITE_LOCK_ENABLED , BKDL_WRITE_LOCK_ENABLED_DEFAULT ) ; }
2402	public T solve ( final int maxEval , final RealFieldUnivariateFunction < T > f , final T min , final T max , final AllowedSolution allowedSolution ) throws MathIllegalArgumentException , NullArgumentException { return solve ( maxEval , f , min , max , min . add ( max ) . divide ( _NUM ) , allowedSolution ) ; }
2408	public void animateX ( int durationMillis ) { if ( android . os . Build . VERSION . SDK_INT < _NUM ) return ; ObjectAnimator animatorX = ObjectAnimator . ofFloat ( this , _CHAR phaseX _CHAR , _NUM , _NUM ) ; animatorX . setDuration ( durationMillis ) ; animatorX . addUpdateListener ( mListener ) ; animatorX . start ( ) ; }
2410	private void ensureDependenciesResolved ( ) { new GrantPermission ( new UmbrellaGrantPermission ( ) ) ; }
2411	public static URL urlFromString ( String location ) { return urlFromString ( location , _NULL , _BOOL ) ; }
2412	public synchronized void requestPreviewFrame ( Handler handler , int message ) { Camera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . setOneShotPreviewCallback ( previewCallback ) ; } }
2418	public static float indicator ( final float x ) { if ( Float . isNaN ( x ) ) { return Float . NaN ; } return ( x >= _NUM . _NUM ) ? _NUM . _NUM : - _NUM . _NUM ; }
2421	public static void writeLines ( File file , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , _BOOL ) ; }
2422	public DynamicTemplateParameterContext appendParameter ( DynamicContextParameters param , String paramValue , ContextInfo contextInfo ) { return appendParameter ( param , paramValue , _BOOL , contextInfo ) ; }
2431	public Builder clientCiphers ( Collection < String > clientCiphers ) { this . clientCiphers = clientCiphers ; return this ; }
2439	public static void writeStringToFile ( File file , String data , String encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
2451	@ Override public boolean writeAnnotation ( Object target , short targetType ) { if ( targetType == XSAnnotation . W3C_DOM_ELEMENT || targetType == XSAnnotation . W3C_DOM_DOCUMENT ) { writeToDOM ( ( Node ) target , targetType ) ; return _BOOL ; } else if ( targetType == SAX_CONTENTHANDLER ) { writeToSAX ( ( ContentHandler ) target ) ; return _BOOL ; } return _BOOL ; }
2465	private void insertBadgeAsync ( int badgeCount , String packageName , String activityName ) { final ContentValues contentValues = new ContentValues ( ) ; contentValues . put ( PROVIDER_COLUMNS_BADGE_COUNT , badgeCount ) ; contentValues . put ( PROVIDER_COLUMNS_PACKAGE_NAME , packageName ) ; contentValues . put ( PROVIDER_COLUMNS_ACTIVITY_NAME , activityName ) ; mQueryHandler . startInsert ( _NUM , _NULL , BADGE_CONTENT_URI , contentValues ) ; }
2477	public boolean hasNestedSubReport ( ) { return nestedSubReport != _NULL ; }
2480	public static String toString ( InputStream input , Charset encoding ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw , encoding ) ; return sw . toString ( ) ; }
2483	public synchronized long size ( ) { return size ; }
2487	public int hash ( String symbol ) { return symbol . hashCode ( ) & _NUM ; }
2501	public static char [ ] toCharArray ( InputStream is ) throws IOException { return toCharArray ( is , Charset . defaultCharset ( ) ) ; }
2502	public static double indicator ( final double x ) { if ( Double . isNaN ( x ) ) { return Double . NaN ; } return ( x >= _NUM . _NUM ) ? _NUM . _NUM : - _NUM . _NUM ; }
2503	public static boolean isReturnPrevOnUpdate ( int mod ) { return Modifiers . contains ( mod , UpdateModifiers . RETURN_PREV_ON_UPDATE ) ; }
2513	public DefaultHibernateSpaceDataSourceConfigurer initialLoadChunkSize ( int initalLoadChunkSize ) { this . initialLoadChunkSize = initalLoadChunkSize ; return this ; }
2516	@ Override public Element createElementNS ( String namespaceURI , String qualifiedName ) throws DOMException { return new ElementNSImpl ( this , namespaceURI , qualifiedName ) ; }
2527	@ Override public boolean next ( ) { while ( s . next ( ) ) if ( pred . isSatisfied ( s ) ) return _BOOL ; return _BOOL ; }
2541	public boolean subtractFrom ( Rectangle bounds ) { if ( isEmpty ( ) ) { return _BOOL ; } bounds . x -= left ; bounds . width += left ; bounds . y -= top ; bounds . height += top ; bounds . width += right ; bounds . height += bottom ; return _BOOL ; }
2543	public static String toString ( byte [ ] input , String encoding ) throws IOException { return new String ( input , encoding ) ; }
2553	public void add ( String expr , FontAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
2560	public synchronized long resetByteCount ( ) { long tmp = this . count ; this . count = _NUM ; return tmp ; }
2568	public synchronized void requestPreviewFrame ( Handler handler , int message ) { Camera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . setOneShotPreviewCallback ( previewCallback ) ; } }
2598	public int countFilteredLines ( List < String > codeLines ) { return codeLines . stream ( ) . map ( _NULL ) . filter ( _NULL ) . toArray ( ) . length ; }
2609	public CommandBuilder withLongSwitchIfPresent ( Map < String , Object > properties , UnaryOperator < String > switchNameMapper , String ... keys ) { for ( String key : keys ) { withLongSwitchIfPresent ( properties , key , switchNameMapper . apply ( key ) ) ; } return this ; }
2623	private Observable < JobRow > buildJobRowStoredNotification ( Observable < JobRow > asynchronousPayload , JobRow jobRow ) { return asynchronousPayload . flatMap ( _NULL ) . onErrorReturn ( _NULL ) ; }
2632	public static < T > OperatorSemaphore < T > semaphore ( Observable < Boolean > go ) { return new OperatorSemaphore < > ( go ) ; }
2634	public boolean with_arrayref ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - arrayref _CHAR ) ; }
2636	public static String charToString ( int value ) { return ( String . valueOf ( Character . toChars ( value ) ) ) ; }
2640	public int geom_worklist ( ) { String s = soot . PhaseOptions . getString ( options , _CHAR geom - worklist _CHAR ) ; if ( s . equalsIgnoreCase ( _CHAR PQ _CHAR ) ) return geom_worklist_PQ ; if ( s . equalsIgnoreCase ( _CHAR FIFO _CHAR ) ) return geom_worklist_FIFO ; throw new RuntimeException ( _CHAR Invalid value _CHAR + s + _CHAR of phase option geom - worklist _CHAR ) ; }
2649	public Builder worldCopyJump ( Boolean worldCopyJump ) { this . worldCopyJump = worldCopyJump ; return this ; }
2656	public void add ( IResource [ ] resources , int depth , IProgressMonitor progress ) throws SVNException { AddResourcesCommand command = new AddResourcesCommand ( getSVNWorkspaceRoot ( ) , resources , depth ) ; command . run ( progress ) ; }
2672	protected Class resolveClass ( ObjectStreamClass desc ) throws IOException , ClassNotFoundException { if ( desc . getName ( ) . equals ( _CHAR net . jini . io . MarshalledObject _CHAR ) ) { return java . rmi . MarshalledObject . class ; } return super . resolveClass ( desc ) ; }
2675	public boolean load ( String uri ) { return _BOOL ; }
2676	public MultiwayPoolBuilder < K , R > maximumSize ( long size ) { checkState ( maximumSize == UNSET_INT , _CHAR maximum size was already set to % s _CHAR , maximumSize ) ; checkArgument ( size >= _NUM , _CHAR maximum size must not be negative _CHAR ) ; maximumSize = size ; return this ; }
2694	private void initializationSteps ( ) { if ( isLocal ) { setHost ( LOCAL_HOST ) ; setPort ( LOCAL_PORT ) ; localNode = launchLocalCluster ( ) ; log . debug ( _CHAR init ( ) - Connecting to local ElasticSearch instance ( inside same JVM ) is enabled . '' ) ; } else { log . debug ( _CHAR init ( ) - Connecting to local ElasticSearch instance ( inside same JVM ) is disabled . '' ) ; } client = createClient ( ) ; }
2712	protected Element insertMajorBoundary ( NodeList tokens , int i , Element firstToken , String tone , int breakindex ) { Element boundary = insertBoundary ( ( Element ) tokens . item ( i ) , tone , breakindex ) ; insertPhraseNode ( firstToken , boundary ) ; return boundary ; }
2726	public void writeDouble ( double value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeDouble ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
2734	public byte [ ] encode ( Record record ) { return _NULL ; }
2739	public Builder paddingTopLeft ( Point paddingTopLeft ) { this . paddingTopLeft = paddingTopLeft ; return this ; }
2740	@ Override public void refreshIndex ( String rowId , DimensionRow dimensionRow , DimensionRow dimensionRowOld ) { refreshIndex ( Collections . singletonMap ( rowId , new Pair < > ( dimensionRow , dimensionRowOld ) ) ) ; }
2743	public boolean force_gc ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR force - gc _CHAR ) ; }
2772	protected boolean isValidScheme ( String scheme ) { if ( scheme == _NULL ) { return _BOOL ; } if ( ! SCHEME_PATTERN . matcher ( scheme ) . matches ( ) ) { return _BOOL ; } if ( isOff ( ALLOW_ALL_SCHEMES ) && ! allowedSchemes . contains ( scheme . toLowerCase ( Locale . ENGLISH ) ) ) { return _BOOL ; } return _BOOL ; }
2782	public void lerp ( Vector2 dp , double da , double alpha ) { this . translate ( dp . x * alpha , dp . y * alpha ) ; this . rotate ( da * alpha , this . getTranslationX ( ) , this . getTranslationY ( ) ) ; }
2792	public void insert ( final double [ ] key , final T value ) throws KeySizeException , KeyDuplicateException { this . edit ( key , new Editor . Inserter < T > ( value ) ) ; }
2801	public int geom_encoding ( ) { String s = soot . PhaseOptions . getString ( options , _CHAR geom - encoding _CHAR ) ; if ( s . equalsIgnoreCase ( _CHAR Geom _CHAR ) ) return geom_encoding_Geom ; if ( s . equalsIgnoreCase ( _CHAR HeapIns _CHAR ) ) return geom_encoding_HeapIns ; if ( s . equalsIgnoreCase ( _CHAR PtIns _CHAR ) ) return geom_encoding_PtIns ; throw new RuntimeException ( _CHAR Invalid value _CHAR + s + _CHAR of phase option geom - encoding _CHAR ) ; }
2808	private String printDFormat ( long x ) { return printDFormat ( Long . toString ( x ) ) ; }
2814	public static String makeCompositeParam ( String prefix , String suffix ) { return prefix + COMPOSITE_DELIMITER + suffix ; }
2823	public static Experiment createExperimentWithRule ( ) { Experiment experiment = ExperimentFactory . createExperiment ( ) ; experiment . rule = _CHAR ( salary < _NUM ) && ( state = _CHAR ) _CHAR ; return experiment ; }
2871	public JSONArray put ( int index , double value ) throws JSONException { this . put ( index , new Double ( value ) ) ; return this ; }
2894	public void removeData ( double [ ] [ ] data ) { for ( int i = _NUM ; i < data . length && n > _NUM ; i ++ ) { removeData ( data [ i ] [ _NUM ] , data [ i ] [ _NUM ] ) ; } }
2913	public void putMessageFormatter ( String domain , MessageFormatter messageFormatter ) { fMessageFormatters . put ( domain , messageFormatter ) ; }
2914	public void addResource ( InputStream in ) { addResourceObject ( in ) ; }
2917	@ NotNull public OCROnImageAction ocrOnImage ( @ NotNull String language , boolean detectOrientation , @ NotNull InputStream image ) { return new OCROnImageAction ( cognitiveContext , language , detectOrientation , image ) ; }
2941	public boolean on_fly_cg ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR on - fly - cg _CHAR ) ; }
2942	public static boolean isRunningApplicationStart ( ) { return sRunningApplicationStart ; }
2947	protected Entity cacheLoadOrStore ( Entity entity ) { Entity cachedEntity = entityCache . findInCache ( entity . getClass ( ) , entity . getId ( ) ) ; if ( cachedEntity != _NULL ) { return cachedEntity ; } entityCache . put ( entity , _BOOL ) ; return entity ; }
2954	private InstallOperation < File , File > createInitSdkOperation ( InstallContext installContext , double progressRatio ) { File handoffSource = getHandoffAndroidSdkSource ( ) ; if ( handoffSource != _NULL ) { return new MergeOperation ( handoffSource , installContext , progressRatio ) ; } return InstallOperation . wrap ( installContext , new ReturnValue ( ) , _NUM ) ; }
2978	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_COOL_TIME_MIN ( String worldname0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 , value1 ) ; }
2981	public Vector3f divideLocal ( float scalar ) { scalar = _NUM / scalar ; x *= scalar ; y *= scalar ; z *= scalar ; return this ; }
2983	public Vector3f mult ( Vector3f vec ) { return mult ( vec , _NULL ) ; }
3001	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
3020	public BoardEditCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
3033	public static JSONObject toJSONObject ( String string ) throws JSONException { JSONObject o = new JSONObject ( ) ; XMLTokener x = new XMLTokener ( string ) ; while ( x . more ( ) && x . skipPast ( _CHAR < _CHAR ) ) { parse ( x , o , _NULL ) ; } return o ; }
3052	public void reportIgnored ( @ NonNull String module , @ NonNull String path ) { List < String > list = myNotMigrated . get ( module ) ; if ( list == _NULL ) { list = Lists . newArrayList ( ) ; myNotMigrated . put ( module , list ) ; } list . add ( path ) ; }
3071	public static double sign ( final double x ) { if ( Double . isNaN ( x ) ) { return Double . NaN ; } return ( x == _NUM . _NUM ) ? _NUM . _NUM : ( x > _NUM . _NUM ) ? _NUM . _NUM : - _NUM . _NUM ; }
3092	public DynamicTemplateParameterContext addParameter ( DynamicContextParameters param , String paramValue , ContextInfo contextInfo ) { return addParameter ( param , paramValue , _BOOL , contextInfo ) ; }
3095	@ Override public void notifyElementUpdated ( final Tag tag ) { List < Alarm > alarmList = evaluateAlarms ( tag ) ; notifyListeners ( tag , alarmList ) ; }
3098	@ Override public int read ( ) { return ( _position < _count ) ? readUnsignedByte ( ) : - _NUM ; }
3106	public void appendAudio ( AudioInputStream audioToAppend ) { if ( this . audio == _NULL ) setAudio ( audioToAppend ) ; else if ( this . audio instanceof AppendableSequenceAudioInputStream ) ( ( AppendableSequenceAudioInputStream ) this . audio ) . append ( audioToAppend ) ; else this . audio = new SequenceAudioInputStream ( this . audio . getFormat ( ) , Arrays . asList ( this . audio , audioToAppend ) ) ; }
3107	public ChangeSet custom ( CustomChangeOperation changeOperation ) { return add ( changeOperation ) ; }
3114	public static int copy ( InputStream input , OutputStream output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
3126	public static Class forName ( String name ) throws ClassNotFoundException { return forName ( name , getDefaultClassLoader ( ) ) ; }
3131	public static void recover ( Transaction tx ) { tx . recoveryMgr ( ) . doRecover ( tx ) ; tx . bufferMgr ( ) . flushAll ( ) ; LogSeqNum lsn = new CheckpointRecord ( ) . writeToLog ( ) ; VanillaDb . logMgr ( ) . flush ( lsn ) ; }
3145	public static String slurpURLNoExceptions ( String path ) { try { return slurpURL ( path ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
3155	public static void writeLines ( File file , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , _BOOL ) ; }
3162	public boolean profiling ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR profiling _CHAR ) ; }
3165	public void notifyFileShown ( @ NotNull TextEditor editor , boolean renderImmediately ) { if ( renderImmediately ) { myRenderImmediately = _BOOL ; } processFileEditorChange ( editor ) ; if ( renderImmediately ) { myToolWindowUpdateQueue . sendFlush ( ) ; } }
3173	public static < E > DoubleStream shiftingWindowAveragingInt ( Stream < E > stream , int rollingFactor , ToIntFunction < ? super E > mapper ) { Objects . requireNonNull ( stream ) ; Objects . requireNonNull ( mapper ) ; IntStream intStream = stream . mapToInt ( mapper ) ; return shiftingWindowAveragingInt ( intStream , rollingFactor ) ; }
3174	public JToolTip createToolTip ( ) { if ( m_customToolTip == _NULL ) { return super . createToolTip ( ) ; } else { return m_customToolTip ; } }
3181	V readValueUnderLock ( IHashEntry < K , V > e ) { lock ( ) ; try { return _h . value ( e ) ; } finally { unlock ( ) ; } }
3183	public void insert ( int slot ) { currentBuff . lockFlushing ( ) ; try { for ( int i = getNumRecords ( ) ; i > slot ; i -- ) copyRecordWithoutLogging ( i - _NUM , i ) ; setNumRecordsWithoutLogging ( getNumRecords ( ) + _NUM ) ; } finally { currentBuff . unlockFlushing ( ) ; } }
3192	private int [ ] makeDefStateList ( ) { int [ ] retArray = new int [ fElemMapSize ] ; for ( int index = _NUM ; index < fElemMapSize ; index ++ ) retArray [ index ] =- _NUM ; return retArray ; }
3201	public NewsfeedGetQuery sourceIds ( String value ) { return unsafeParam ( _CHAR source_ids _CHAR , value ) ; }
3204	public T dotProduct ( final FieldVector3D < T > v ) { return x . linearCombination ( x , v . x , y , v . y , z , v . z ) ; }
3233	public Result decodeWithState ( BinaryBitmap image ) throws NotFoundException { if ( readers == _NULL ) { setHints ( _NULL ) ; } return decodeInternal ( image ) ; }
3236	@ Override public Node replaceChild ( Node newChild , Node oldChild ) throws DOMException { ownerDocument . replacingNode ( this ) ; internalInsertBefore ( newChild , oldChild , _BOOL ) ; if ( newChild != oldChild ) { internalRemoveChild ( oldChild , _BOOL ) ; } ownerDocument . replacedNode ( this ) ; return oldChild ; }
3240	@ Override public void publish ( String topic , AWSIotQos qos , String payload ) throws AWSIotException { super . publish ( topic , qos , payload ) ; }
3252	public static boolean parseBooleanTag ( String tag , String s ) { return parseBooleanTag ( tag , s , _BOOL ) ; }
3260	public void add ( String expr , double size ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; add ( p , size ) ; }
3263	protected void addOnPropertyChangedCallback ( Observable . OnPropertyChangedCallback callback ) { onPropertyChangedCallbacks . add ( callback ) ; getViewModel ( ) . addOnPropertyChangedCallback ( callback ) ; }
3265	public IntIterator rangeSortedBy ( String field , long lo , long hi , int indexType ) { Index index = getIndex ( field , long . class , _BOOL ) ; return index . rows ( lo , hi , indexType ) ; }
3274	public JSONArray put ( int index , int value ) throws JSONException { this . put ( index , new Integer ( value ) ) ; return this ; }
3276	public boolean dump_html ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - html _CHAR ) ; }
3347	public static char [ ] toCharArray ( Reader input ) throws IOException { CharArrayWriter sw = new CharArrayWriter ( ) ; copy ( input , sw ) ; return sw . toCharArray ( ) ; }
3352	public static char [ ] toCharArray ( Reader input ) throws IOException { CharArrayWriter sw = new CharArrayWriter ( ) ; copy ( input , sw ) ; return sw . toCharArray ( ) ; }
3358	private static boolean overflowInParse ( long current , int digit , int radix ) { if ( current >= _NUM ) { if ( current < maxValueDivs [ radix ] ) { return _BOOL ; } if ( current > maxValueDivs [ radix ] ) { return _BOOL ; } return ( digit > maxValueMods [ radix ] ) ; } return _BOOL ; }
3359	public double calcCoexistenceImportance ( String sNode ) { VertexImpl v = new VertexImpl ( ) ; v . setLabel ( sNode ) ; return calcCoexistenceImportance ( v ) ; }
3361	public double optDouble ( String key , double defaultValue ) { try { Object o = opt ( key ) ; return o instanceof Number ? ( ( Number ) o ) . doubleValue ( ) : new Double ( ( String ) o ) . doubleValue ( ) ; } catch ( Exception e ) { return defaultValue ; } }
3373	@ Override public XSModel loadURI ( String uri ) { try { fGrammarPool . clear ( ) ; return ( ( XSGrammar ) fSchemaLoader . loadGrammar ( new XMLInputSource ( _NULL , uri , _NULL ) ) ) . toXSModel ( ) ; } catch ( Exception e ) { fSchemaLoader . reportDOMFatalError ( e ) ; return _NULL ; } }
3376	public int log10K ( ) { return exp - _NUM ; }
3377	synchronized void ignoreTextChanges ( ) { mIgnoreTextChanges = _BOOL ; }
3384	public boolean isTimestampValid ( final long timestamp ) { this . equipmentLogger . trace ( _CHAR entering isTimestampValid ( ) .. _CHAR ) ; boolean isValid = _BOOL ; long diff = ( timestamp - System . currentTimeMillis ( ) ) ; if ( diff > MAX_MSECONDS_DIFF ) { isValid = _BOOL ; } this . equipmentLogger . trace ( _CHAR leaving isTimestampValid ( ) .. Result : _CHAR + isValid ) ; return isValid ; }
3390	public SecureCheckTokenQuery ip ( String value ) { return unsafeParam ( _CHAR ip _CHAR , value ) ; }
3394	public void addCertChainListener ( CertChainListener listener ) { certChainListeners . add ( listener ) ; }
3401	public void reset ( ) { internalReset ( _NUM ) ; }
3440	public boolean class_method_var ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR class - method - var _CHAR ) ; }
3450	int onDelete ( Class < ? > modelClass , long id ) { analyzeAssociations ( modelClass ) ; int rowsAffected = deleteCascade ( modelClass , id ) ; rowsAffected += mDatabase . delete ( getTableName ( modelClass ) , _CHAR id = _CHAR + id , _NULL ) ; getForeignKeyTableToDelete ( ) . clear ( ) ; return rowsAffected ; }
3457	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
3471	public static byte [ ] toByteArray ( Reader input ) throws IOException { return toByteArray ( input , Charset . defaultCharset ( ) ) ; }
3479	public void terminate ( ) { listeners . clear ( ) ; lookupDisc . terminate ( ) ; locatorDisc . terminate ( ) ; if ( dynamicLocatorDisc != _NULL ) dynamicLocatorDisc . terminate ( ) ; }
3483	public boolean with_classfield ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - classfield _CHAR ) ; }
3487	@ NotNull public BoolProperty useForegroundColor ( ) { return myUseForegroundColor ; }
3514	public int optInt ( int index ) { return optInt ( index , _NUM ) ; }
3515	public JSONArray put ( int index , long value ) throws JSONException { put ( index , new Long ( value ) ) ; return this ; }
3519	public static DoubleStream shiftingWindowAveragingDouble ( DoubleStream doubleStream , int rollingFactor ) { Objects . requireNonNull ( doubleStream ) ; RollingOfDoubleSpliterator ofDoubleSpliterator = RollingOfDoubleSpliterator . of ( doubleStream . spliterator ( ) , rollingFactor ) ; return StreamSupport . stream ( ofDoubleSpliterator , doubleStream . isParallel ( ) ) . onClose ( _NULL ) . mapToDouble ( _NULL ) ; }
3535	private static String removeQuotesEncolosingOption ( String fileName , String option ) throws Exception { String option1 = removeQuoteCharactersIfNecessary ( fileName , option , _CHAR_CHAR ) ; if ( ! option1 . equals ( option ) ) { return option1 ; } return removeQuoteCharactersIfNecessary ( fileName , option , _CHAR_CHAR ) ; }
3552	@ Override public long blocksAccessed ( ) { return lhs . blocksAccessed ( ) + rhs . blocksAccessed ( ) ; }
3578	public static Plugin toBukkit ( cn . nukkit . plugin . Plugin plugin ) { if ( plugin == _NULL ) { return _NULL ; } if ( plugin instanceof PokkitPlugin ) { return ( ( PokkitPlugin ) plugin ) . bukkit ; } return new NukkitPluginWrapper ( plugin ) ; }
3584	public T walkInOptimizedOrder ( final FieldVectorChangingVisitor < T > visitor , final int start , final int end ) throws MathIllegalArgumentException { return walkInDefaultOrder ( visitor , start , end ) ; }
3605	public synchronized void requestPreviewFrame ( Handler handler , int message ) { Camera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . setOneShotPreviewCallback ( previewCallback ) ; } }
3608	@ Override public long nodeNumber ( ) { throw new UnsupportedOperationException ( _CHAR Unsupported operation _CHAR ) ; }
3618	public static FileSubjects . PathSubject assertThatCheckout ( GitRepository repo , String ref ) throws IOException , RepoException { Path tempWorkTree = Files . createTempDirectory ( _CHAR assertAboutCheckout _CHAR ) ; repo . withWorkTree ( tempWorkTree ) . simpleCommand ( _CHAR checkout _CHAR , ref , _CHAR -- _CHAR , _CHAR . _CHAR ) ; return assertThatPath ( tempWorkTree ) ; }
3624	public static < T extends Map < ? , ? >> void notEmpty ( String argumentName , T argumentObject ) { notNull ( argumentName , argumentObject ) ; if ( argumentObject . size ( ) == _NUM ) { throw new IllegalArgumentException ( argumentName + _CHAR can not be empty _CHAR ) ; } }
3631	protected void addOnPropertyChangedCallback ( Observable . OnPropertyChangedCallback callback ) { onPropertyChangedCallbacks . add ( callback ) ; getViewModel ( ) . addOnPropertyChangedCallback ( callback ) ; }
3638	@ Override public boolean implementsInterface ( @ Nonnull String iface ) { if ( getInterfaces ( ) . containsKey ( iface ) ) { return _BOOL ; } if ( ! interfacesFullyResolved ) { throw new UnresolvedClassException ( _CHAR Interfaces for class % s not fully resolved '' , getType ( ) ) ; } return _BOOL ; }
3666	public Body retrieveActiveBody ( ) { declaringClass . checkLevel ( SootClass . BODIES ) ; if ( declaringClass . isPhantomClass ( ) ) throw new RuntimeException ( _CHAR can not get resident body for phantom class : '' + getSignature ( ) + _CHAR ; maybe you want to call c . setApplicationClass ( ) on this class ! _CHAR ) ; if ( ! hasActiveBody ( ) ) { setActiveBody ( this . getBodyFromMethodSource ( _CHAR jb _CHAR ) ) ; ms = _NULL ; } return getActiveBody ( ) ; }
3671	public static boolean equalsOnSystem ( String filename1 , String filename2 ) { return equals ( filename1 , filename2 , _BOOL , IOCase . SYSTEM ) ; }
3672	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; registrarID = new ServiceID ( in ) ; if ( server == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL server _CHAR ) ; } }
3674	public AdsGetCampaignsQuery campaignIds ( String value ) { return unsafeParam ( _CHAR campaign_ids _CHAR , value ) ; }
3701	private boolean isOn ( long flag ) { return ( options & flag ) > _NUM ; }
3702	protected void addCommonComponent ( XMLComponent component ) { if ( fCommonComponents . contains ( component ) ) { return ; } fCommonComponents . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
3704	public static Predicate < ApiFilter > isNonAggregatableInFilter ( ) { return _NULL ; }
3717	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static final < T > T castToType ( final Object value , final Class < T > clazz ) { return ( T ) cast ( value , clazz ) ; }
3726	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
3734	public Instruction reconstructInstructions ( ) { if ( cfg != _NULL ) return cfg . head ; else return _NULL ; }
3745	XSParticleDecl traverseChoice ( Element choiceDecl , XSDocumentInfo schemaDoc , SchemaGrammar grammar , int allContextFlags , XSObject parent ) { return traverseSeqChoice ( choiceDecl , schemaDoc , grammar , allContextFlags , _BOOL , parent ) ; }
3750	private boolean matches ( Composite column , ColumnGroup group , int index ) { return column . size ( ) == _NUM && column . get ( _NUM , AsciiSerializer . get ( ) ) . equals ( group . name ( ) ) && column . get ( _NUM , IntegerSerializer . get ( ) ) . equals ( index ) ; }
3786	public AudioSetBroadcastQuery targetIds ( List < Integer > value ) { return unsafeParam ( _CHAR target_ids _CHAR , value ) ; }
3795	public synchronized long size ( ) { return size ; }
3808	public static JSONArray toJSONArray ( String string ) throws JSONException { return toJSONArray ( new XMLTokener ( string ) ) ; }
3812	public static double max ( double a , double b ) { return ( a >= b ) ? a : b ; }
3824	public static float asin ( float fValue ) { if ( - _NUM . _NUM < fValue ) { if ( fValue < _NUM . _NUM ) { return ( float ) Math . asin ( fValue ) ; } return HALF_PI ; } return - HALF_PI ; }
3825	public static boolean isAlphanumeric ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { char c = s . charAt ( i ) ; if ( ! isLetterOrDigit ( c ) ) return _BOOL ; } return _BOOL ; }
3837	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
3847	@ Override public void parse ( XMLInputSource inputSource ) throws XNIException , IOException { }
3861	public void add ( String expr , ShapeAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
3874	public static long smpteTimecodeToMilliSeconds ( String tc , String unitsInSecStr ) { BigFraction unitsInSec = parseEditRate ( unitsInSecStr ) ; return smpteTimecodeToMilliSeconds ( tc , unitsInSec ) ; }
3886	public void disconnect ( ) { if ( connecting || ! connected ) { return ; } connected = _BOOL ; logger . fine ( _CHAR Disconnecting from Skype _CHAR ) ; notifConnector . disconnect ( ) ; for ( Map . Entry < String , User > user : users . entrySet ( ) ) { user . getValue ( ) . setPresence ( Presence . OFFLINE , _BOOL ) ; } reset ( ) ; }
3893	@ Override public LogSeqNum writeToLog ( ) { List < Constant > rec = buildRecord ( ) ; return logMgr . append ( rec . toArray ( new Constant [ rec . size ( ) ] ) ) ; }
3912	public int numConnections ( ) { int num = _NUM ; if ( this . results != _NULL ) for ( Entry < ResultSinkInfo , Set < ResultSourceInfo >> entry : this . results . entrySet ( ) ) num += entry . getValue ( ) . size ( ) ; return num ; }
3919	public void java_lang_Class_getMethod0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getMethodObject ( ) ) ; }
3930	public static boolean booleanValueVersatile ( Object value , boolean defaultValue ) { Boolean res = booleanValueVersatile ( value ) ; return res != _NULL ? res : defaultValue ; }
3933	public void endStatement ( ) { for ( TransactionLifecycleListener l : lifecycleListeners ) l . onTxEndStatement ( this ) ; }
3943	@ NotNull public ListFaceListsAction listFaceLists ( ) { return new ListFaceListsAction ( cognitiveContext ) ; }
3949	synchronized private void writeEndOfStreamMarker ( ) throws IOException { LogRecord endOfStreamRec = new LogRecord ( DistributedLogConstants . MAX_TXID , _CHAR endOfStream _CHAR . getBytes ( UTF_8 ) ) ; endOfStreamRec . setEndOfStream ( ) ; writeInternal ( endOfStreamRec ) ; }
3963	public static byte [ ] decodeWebSafe ( byte [ ] source ) throws Base64DecoderException { return decodeWebSafe ( source , _NUM , source . length ) ; }
3965	public void zoom ( float scaleX , float scaleY , float xValue , float yValue , AxisDependency axis ) { Runnable job = new ZoomJob ( mViewPortHandler , scaleX , scaleY , xValue , yValue , getTransformer ( axis ) , axis , this ) ; addViewportJob ( job ) ; }
3976	protected int checkGooglePlayServicesAvailable ( final Context context ) { return GoogleApiAvailability . getInstance ( ) . isGooglePlayServicesAvailable ( context ) ; }
3988	public Builder zIndexOffset ( Number zIndexOffset ) { this . zIndexOffset = zIndexOffset ; return this ; }
3995	final boolean link ( Index < K , V > succ , Index < K , V > newSucc ) { Node < K , V > n = node ; newSucc . right = succ ; return n . value != _NULL && casRight ( succ , newSucc ) ; }
3997	static public int encode_vA_vM ( float vArc , float vMag ) { float vArc_nor = vArc / TWO_PI ; int vArc_I16 = ( int ) ( vArc_nor * ( _NUM - _NUM ) ) & _NUM ; int vMag_I16 = ( int ) ( vMag ) & _NUM ; return vMag_I16 << _NUM | vArc_I16 ; }
4012	public static UInteger valueOf ( int value ) { return valueOfUnchecked ( value & MAX_VALUE ) ; }
4019	public void typeCheck ( ) { TypeDecl type = getExpr ( ) . type ( ) ; if ( ( ! type . isIntegralType ( ) || type . isLong ( ) ) && ! type . isEnumDecl ( ) && ! type . isString ( ) ) error ( _CHAR Switch expression must be of type _CHAR + _CHAR char , byte , short , int , enum , or string _CHAR ) ; }
4026	public static void writeLines ( File file , String encoding , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , encoding , lines , _NULL , append ) ; }
4027	public double doGraphCompareToSet ( String sSummaryTextFile , Set < String > ssModelFiles , String sGraphModelClassName , String sComparatorClassName , int iMinNGramRank , int iMaxNGramRank , int iNGramDist ) { throw new NotImplementedException ( ) ; }
4044	public synchronized void dropClass ( String className ) throws DropClassException { _typeManager . dropClass ( className ) ; }
4045	public static void write ( char [ ] data , Writer output ) throws IOException { if ( data != _NULL ) { output . write ( data ) ; } }
4047	public RecordID addRecord ( List < DataType > values ) throws DatabaseException { return _NULL ; }
4075	public final char yycharat ( int pos ) { return zzBuffer [ zzStartRead + pos ] ; }
4076	@ Override public boolean isAssignable ( ) { return _BOOL ; }
4100	public IntIterator rangeSortedBy ( String field , double lo , double hi , int indexType ) { Index index = getIndex ( field , double . class , _BOOL ) ; return index . rows ( lo , hi , indexType ) ; }
4102	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
4104	@ Transactional public void rollbackCurrentVariantsFromTMToDate ( DateTime rollbackDateTime , Long tmId , CurrentVariantRollbackParameters extraParameters ) { Preconditions . checkNotNull ( extraParameters , _CHAR Extra parameters should not be _NULL _CHAR ) ; deleteExistingCurrentVariants ( tmId , extraParameters ) ; addCurrentVariantsAsOfRollbackDate ( rollbackDateTime , tmId , extraParameters ) ; }
4110	public boolean isForProject ( String projectDir ) { return myProjectDirectory == _NULL || myProjectDirectory . equals ( projectDir ) ; }
4118	public Builder withCameraRequestCode ( int startRequestCode , int endRequestCode ) { if ( ( endRequestCode - startRequestCode ) < _NUM ) { throw new IllegalArgumentException ( _CHAR The following formula must be apply for the given arguments : '' + '' ( endRequestCode - startRequestCode ) >= _NUM _CHAR ) ; } this . mCameraRequestCodeStart = startRequestCode ; this . mCameraRequestCodeEnd = endRequestCode ; return this ; }
4132	private void verifyReplicationModeOnDistributedTransactionProcessingConfiguration ( Logger specificLogger ) { if ( _distributedTransactionProcessingConfiguration . isOverriden ( ) ) { if ( specificLogger . isLoggable ( Level . WARNING ) ) specificLogger . log ( Level . WARNING , _CHAR Distributed transaction processing configuration has been set but replication mode was not set to _CHAR_CHAR_CHAR - configuration will be ignored _CHAR ) ; } }
4146	public static char [ ] toCharArray ( InputStream is , String encoding ) throws IOException { return toCharArray ( is , Charsets . toCharset ( encoding ) ) ; }
4149	public static void show ( Window owner , Joint joint ) { EditJointDialog dialog = new EditJointDialog ( owner , joint ) ; dialog . setLocationRelativeTo ( owner ) ; dialog . setVisible ( _BOOL ) ; if ( ! dialog . canceled ) { dialog . pnlJoint . setJoint ( joint ) ; } }
4151	@ Override public ASObject cloneASObject ( boolean deep ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
4170	@ AndroidCoordinate public int height ( ) { return top + bottom ; }
4180	private void ensureDependenciesResolved ( ) { ClassLoader ldr = getClass ( ) . getClassLoader ( ) ; if ( ldr == _NULL ) { ldr = ClassLoader . getSystemClassLoader ( ) ; } trustGetContextClassLoader0 ( Thread . class ) ; getContextClassLoader ( ) ; synchronized ( subPolicies ) { lookupSubPolicy ( ldr ) ; } }
4193	static protected String fixPartOfSpeech ( String partOfSpeech ) { return ( partOfSpeech == _NULL ) ? _CHAR _NUM _CHAR : partOfSpeech ; }
4196	protected void recoverAfterListenerSetupFailure ( ) { refreshConnectionUntilSuccessful ( ) ; }
4200	@ Override public Node cloneNode ( boolean deep ) { PSVIDocumentImpl newdoc = new PSVIDocumentImpl ( ) ; callUserDataHandlers ( this , newdoc , UserDataHandler . NODE_CLONED ) ; cloneNode ( newdoc , deep ) ; newdoc . mutationEvents = mutationEvents ; return newdoc ; }
4202	protected void eventReceived ( Object event ) { scheduleNewInvokerIfAppropriate ( ) ; }
4205	@ Override public void onTokenRefresh ( ) { startService ( new Intent ( this , SaveFCMIdService . class ) ) ; }
4227	public static boolean isSemitonesDelta ( String string ) { String s = string . trim ( ) ; if ( s . length ( ) < _NUM ) return _BOOL ; return s . substring ( s . length ( ) - _NUM ) . equals ( _CHAR st _CHAR ) && isNumberDelta ( s . substring ( _NUM , s . length ( ) - _NUM ) ) ; }
4270	public PhotosGetQuery feed ( Integer value ) { return unsafeParam ( _CHAR feed _CHAR , value ) ; }
4275	@ Override protected final void synchronizeChildren ( ) { DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) ownerDocument ( ) ; ownerDocument . synchronizeChildren ( this , fNodeIndex ) ; }
4278	public static boolean shouldShowRequestPermissionRationale ( Activity activity , String permission ) { return ActivityCompat . shouldShowRequestPermissionRationale ( activity , permission ) ; }
4291	public AudioSetBroadcastQuery audio ( String value ) { return unsafeParam ( _CHAR audio _CHAR , value ) ; }
4293	public void java_lang_Class_forName0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassObject ( ) ) ; }
4298	public synchronized void close ( ) { if ( currentClip != _NULL ) { currentClip . drain ( ) ; if ( drainDelay > _NUM ) { try { Thread . sleep ( drainDelay ) ; } catch ( InterruptedException e ) { } } currentClip . close ( ) ; } notifyAll ( ) ; }
4301	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
4304	public static String decode ( byte [ ] utf8 , int start , int length , boolean replace ) throws CharacterCodingException { return decode ( ByteBuffer . wrap ( utf8 , start , length ) , replace ) ; }
4320	public static boolean isPrimaryThread ( ) { return server . isPrimaryThread ( ) ; }
4332	@ Override public void close ( ) throws IOException { }
4342	public short value ( ) { return _map . _values [ _index ] ; }
4344	public static boolean booleanValue ( Object value , boolean defaultValue ) { Boolean res = booleanValue ( value ) ; return res != _NULL ? res : defaultValue ; }
4357	public FileInputStream openRead ( ) throws FileNotFoundException { if ( mBackupName . exists ( ) ) { mBaseName . delete ( ) ; mBackupName . renameTo ( mBaseName ) ; } return new FileInputStream ( mBaseName ) ; }
4358	@ SafeVarargs public static SimplifiedIntervalList simplifyIntervals ( Collection < Interval > ... intervals ) { Stream < Interval > allIntervals = Stream . empty ( ) ; for ( Collection < Interval > intervalCollection : intervals ) { allIntervals = Stream . concat ( allIntervals , intervalCollection . stream ( ) ) ; } return allIntervals . sorted ( _NULL ) . collect ( getCollector ( ) ) ; }
4366	@ NotNull public ObservableBool hasErrors ( ) { return myHasErrors ; }
4370	private void validateMemberName ( String memberName ) throws ClusterConfigurationException { if ( memberName . indexOf ( _CHAR : _CHAR ) == - _NUM ) { String commandLine = _CHAR \ _CHAR - Xbootclasspath / p : % XML_JARS % \ _CHAR _CHAR ; if ( ! System . getProperty ( _CHAR file . separator _CHAR ) . equals ( _CHAR \\ _CHAR ) ) commandLine = _CHAR \ _CHAR - Xbootclasspath / p : $ { XML_JARS } \ _CHAR _CHAR ; throw new ClusterConfigurationException ( _CHAR The used JDK _NUM . _NUM . x default Xalan implementation , does not support proper xsl transformations .\ n _CHAR + _CHAR Please use the Xalan package located under < GigaSpaces Root Directory > / lib / xml '' + '' \ n and add the following to the Java command line : '' + commandLine ) ; } }
4371	public T key ( ) { return k ; }
4380	public boolean hasTransaction ( ) { return ( txCreated != _NULL && txCreated . transaction != _NULL ) ; }
4382	public void addMutualEdges ( Object from , Object to , int weight ) { addEdge ( from , to , weight ) ; addEdge ( to , from , - weight ) ; }
4408	public static double roundSignificant ( double value ) { if ( value >= _NUM . _NUM || value <= - _NUM . _NUM ) { return getRounded ( value , _NUM ) ; } else { return roundToSignificantDigits ( value , _NUM ) ; } }
4412	private boolean shouldGiveModelIdValue ( String idName , Class < ? > idType , long id ) { return idName != _NULL && idType != _NULL && id > _NUM ; }
4420	private static void forceInit ( Class < ? > cls ) { try { Class . forName ( cls . getName ( ) , _BOOL , cls . getClassLoader ( ) ) ; } catch ( ClassNotFoundException e ) { throw new IllegalArgumentException ( _CHAR Ca n _CHAR_CHAR + cls , e ) ; } }
4428	@ Override public void markEndOfStream ( ) throws IOException { FutureUtils . result ( getLedgerWriter ( DistributedLogConstants . MAX_TXID , _BOOL ) . markEndOfStream ( ) ) ; closeAndComplete ( ) ; }
4469	private LocatorReg removeDiscoveredLocator ( LookupLocator lct ) { Iterator iter = discoveredLocators . iterator ( ) ; while ( iter . hasNext ( ) ) { LocatorReg reg = ( LocatorReg ) iter . next ( ) ; if ( reg . l . equals ( lct ) ) { iter . remove ( ) ; return reg ; } } return _NULL ; }
4474	public final int enableKey ( ) { if ( packetKey != _NULL ) { throw new KeyAlreadySetException ( ) ; } int key = Rnd . nextInt ( ) ; packetKey = new EncryptionKeyPair ( key ) ; log . debug ( _CHAR new encrypt key : _CHAR + packetKey ) ; return ( key ^ _NUM ) + _NUM ; }
4476	public final char yycharat ( int pos ) { return zzBuffer [ zzStartRead + pos ] ; }
4481	public VideoCreateCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
4509	public void startNull ( ) { }
4513	@ NotNull public DeleteFaceListFaceAction deleteFaceListFace ( @ NotNull String faceListId , @ NotNull String persistedFaceId ) { Validation . validate ( faceListId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR faceListId _CHAR , _CHAR FaceListId is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new DeleteFaceListFaceAction ( cognitiveContext , faceListId , persistedFaceId ) ; }
4521	public VideoCreateCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
4559	public boolean dump_types ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - types _CHAR ) ; }
4584	@ Override public void onTokenRefresh ( ) { super . onTokenRefresh ( ) ; String refreshedToken = FirebaseInstanceId . getInstance ( ) . getToken ( ) ; Log . d ( TAG , _CHAR Refreshed token : _CHAR + refreshedToken ) ; sendRegistrationToServer ( refreshedToken ) ; }
4586	SchemaGrammar loadSchema ( XSDDescription desc , XMLInputSource source , Hashtable locationPairs ) throws IOException , XNIException { if ( ! fJAXPProcessed ) { processJAXPSchemaSource ( locationPairs ) ; } SchemaGrammar grammar = fSchemaHandler . parseSchema ( source , desc , locationPairs ) ; return grammar ; }
4599	@ Override public void onLoaderReset ( Loader < Cursor > cursorLoader ) { changeCursor ( _NULL ) ; }
4602	public static String generateKey ( String imageUri , ImageSize targetSize ) { return new StringBuilder ( imageUri ) . append ( URI_AND_SIZE_SEPARATOR ) . append ( targetSize . getWidth ( ) ) . append ( WIDTH_AND_HEIGHT_SEPARATOR ) . append ( targetSize . getHeight ( ) ) . toString ( ) ; }
4608	public double calculateLocalSwapTotalCapacity ( int hostcount , int hostlocalswapsize ) { double d = ( double ) ( hostcount * hostlocalswapsize ) / _NUM ; d *=- _NUM ; d = ( double ) Math . round ( d * _NUM ) / _NUM ; return d ; }
4635	private int doUpdateAllAction ( String tableName , ContentValues values , String ... conditions ) { BaseUtility . checkConditionsCorrect ( conditions ) ; if ( values . size ( ) > _NUM ) { return mDatabase . update ( tableName , values , getWhereClause ( conditions ) , getWhereArgs ( conditions ) ) ; } return _NUM ; }
4645	Observable < Reply < List < Task >> > tasks ( boolean refresh ) { return refresh ? api . tasks ( ) . compose ( cacheProvider . replaceAsReply ( ) ) : api . tasks ( ) . compose ( cacheProvider . readWithLoaderAsReply ( ) ) ; }
4655	protected static void init ( Callable initCall ) { try { initCall . call ( ) ; } catch ( Exception ex ) { if ( _logger . isLoggable ( Level . SEVERE ) ) { _logger . log ( Level . SEVERE , _CHAR Failed to initialize remote stub . '' , ex ) ; } } }
4681	public static boolean shouldProcessDependenciesRecursively ( JpsModule module ) { return JpsJavaDependenciesEnumerationHandler . shouldProcessDependenciesRecursively ( JpsJavaDependenciesEnumerationHandler . createHandlers ( Collections . singletonList ( module ) ) ) ; }
4692	public void performDefaultOutgoingBehavior ( ExecutionEntity activityExecution ) { performOutgoingBehavior ( activityExecution , _BOOL , _BOOL ) ; }
4710	public static String byteCountToDisplaySize ( long size ) { return byteCountToDisplaySize ( BigInteger . valueOf ( size ) ) ; }
4714	public void add ( String expr , SizeAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
4724	public synchronized long fileCount ( ) { return fileCount ; }
4726	public boolean isPersistent ( ) { return persistent ; }
4729	public DefaultHibernateSpaceSynchronizationEndpointConfigurer managedEntries ( String ... entries ) { this . managedEntries = new HashSet < String > ( ) ; this . managedEntries . addAll ( Arrays . asList ( entries ) ) ; return this ; }
4742	synchronized void ignoreTextChanges ( ) { mIgnoreTextChanges = _BOOL ; }
4760	public synchronized long size ( ) { return size ; }
4776	public static < T extends RealFieldElement < T >> T distanceSq ( final Vector3D v1 , final FieldVector3D < T > v2 ) { return v2 . distanceSq ( v1 ) ; }
4783	public boolean isValueDeadbandFiltered ( final SourceDataTag currentTag , final ValueUpdate update ) { return isValueDeadbandFiltered ( currentTag , update , new SourceDataTagQuality ( ) ) ; }
4798	public void resetIDTables ( ) { fIdTable . clear ( ) ; fIdRefTable . clear ( ) ; }
4804	public boolean isCutOffApproximation ( ) { return this . cutOffApproximation ; }
4812	public static char [ ] toCharArray ( InputStream is ) throws IOException { return toCharArray ( is , Charset . defaultCharset ( ) ) ; }
4835	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public ClientCommandTag < T > clone ( ) throws CloneNotSupportedException { ClientCommandTagImpl < T > clone = ( ClientCommandTagImpl < T > ) super . clone ( ) ; clone . authorizationDetails = _NULL ; return clone ; }
4836	private void recordMiniFabClick ( ) { if ( ! miniFabClicked ) { final SharedPreferences sp = PreferenceManager . getDefaultSharedPreferences ( getActivity ( ) ) ; sp . edit ( ) . putLong ( KEY_FAB_EVER_CLICKED , _NUM ) . apply ( ) ; miniFabClicked = _BOOL ; } }
4847	public static JsonArray unmodifiableArray ( JsonArray array ) { return new JsonArray ( array , _BOOL ) ; }
4871	protected void persistProcessDefinitionsAndAuthorizations ( ParsedDeployment parsedDeployment ) { CommandContext commandContext = Context . getCommandContext ( ) ; ProcessDefinitionEntityManager processDefinitionManager = commandContext . getProcessDefinitionEntityManager ( ) ; for ( ProcessDefinitionEntity processDefinition : parsedDeployment . getAllProcessDefinitions ( ) ) { processDefinitionManager . insert ( processDefinition , _BOOL ) ; bpmnDeploymentHelper . addAuthorizationsForNewProcessDefinition ( parsedDeployment . getProcessModelForProcessDefinition ( processDefinition ) , processDefinition ) ; } }
4874	public long optLong ( int index ) { return optLong ( index , _NUM ) ; }
4889	public final void removePropertyChangeListener ( PropertyChangeListener listener ) { getChangeSupport ( ) . removePropertyChangeListener ( listener ) ; }
4910	public boolean with_cse ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - cse _CHAR ) ; }
4911	public final char yycharat ( int pos ) { return zzBufferArray != _NULL ? zzBufferArray [ zzStartRead + pos ] : zzBuffer . charAt ( zzStartRead + pos ) ; }
4919	public Vector3f subtract ( Vector3f vec ) { return new Vector3f ( x - vec . x , y - vec . y , z - vec . z ) ; }
4956	public int optInt ( String key , int defaultValue ) { try { return this . getInt ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
4957	public static void restartApplicationWithIntent ( Activity activity , Intent intent ) { intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_CLEAR_TASK ) ; activity . finish ( ) ; activity . startActivity ( intent ) ; killCurrentProcess ( ) ; }
4965	public static < T > IStoredList < T > createUniDirectionalConcurrentList ( boolean segmented ) { return new ConcurrentSegmentedStoredList < T > ( segmented , _BOOL , _BOOL , _NUM ) ; }
4970	public static void writeLines ( File file , Collection < ? > lines ) throws IOException { writeLines ( file , _NULL , lines , _NULL , _BOOL ) ; }
4972	public Matrix3f mult ( Matrix3f mat ) { return mult ( mat , _NULL ) ; }
4988	public long readLong ( ) { return scanner . nextLong ( ) ; }
5000	public static < T > Observable < T > doWhile ( ObservableSource < ? extends T > source , BooleanSupplier postCondition ) { ObjectHelper . requireNonNull ( source , _CHAR source is _NULL _CHAR ) ; ObjectHelper . requireNonNull ( postCondition , _CHAR postCondition is _NULL _CHAR ) ; return RxJavaPlugins . onAssembly ( new ObservableWhileDoWhile < T > ( source , AlwaysTrueBooleanSupplier . INSTANCE , postCondition ) ) ; }
5003	private void _scheduleAfter ( Activity before , Activity after ) { before . addActivityListener ( new ScheduleAfterActivity ( after , _BOOL ) ) ; }
5022	public static boolean lookingAt ( String str , String regex ) { return Pattern . compile ( regex ) . matcher ( str ) . lookingAt ( ) ; }
5046	private void updateSyncState ( ) { boolean isSyncEnabled = AndroidSyncSettings . isSyncEnabled ( getActivity ( ) ) ; mSyncSwitchPreference . setChecked ( isSyncEnabled ) ; mSyncSwitchPreference . setEnabled ( canDisableSync ( ) ) ; updateSyncStateFromSwitch ( ) ; }
5072	public void addGenericAttr ( GenericAttr g ) { generic . addElement ( g ) ; }
5080	@ NotNull public EditorFixture waitForCodeAnalysisHighlightCount ( @ NotNull final HighlightSeverity severity , int expected ) { waitForBackgroundTasks ( robot ) ; FileFixture file = getCurrentFileFixture ( ) ; file . waitForCodeAnalysisHighlightCount ( severity , expected ) ; return this ; }
5092	public double doGraphCompareToSet ( String sSummaryTextFile , Set < String > ssModelFiles , String sGraphModelClassName , String sComparatorClassName , int iMinNGramRank , int iMaxNGramRank , int iNGramDist ) { throw new NotImplementedException ( ) ; }
5100	public void java_lang_Class_getMethods0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getLeastArrayObject ( ) ) ; }
5106	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
5117	public AttributesImpl atts ( ) { return theAtts ; }
5128	public static char [ ] toCharArray ( InputStream is ) throws IOException { return toCharArray ( is , Charset . defaultCharset ( ) ) ; }
5129	public static BigDecimal parseBigDecimalForEntity ( String bigDecimalString ) throws NumberFormatException { if ( bigDecimalString == _NULL ) { return _NULL ; } bigDecimalString = bigDecimalString . trim ( ) ; bigDecimalString = bigDecimalString . replaceAll ( _CHAR , _CHAR , _CHAR _CHAR ) ; if ( bigDecimalString . length ( ) < _NUM ) { return _NULL ; } return new BigDecimal ( bigDecimalString ) ; }
5136	public void java_lang_Package_getSystemPackage0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getStringObject ( ) ) ; }
5137	public boolean isUnwrapping ( ) { return _BOOL ; }
5146	public Builder watch ( Boolean watch ) { this . watch = watch ; return this ; }
5155	@ Override public synchronized void maybeStopTrackingJob ( JobStatus job ) { if ( mTrackedJobs . remove ( job ) ) { checkExpiredDelaysAndResetAlarm ( ) ; checkExpiredDeadlinesAndResetAlarm ( ) ; } }
5214	@ Override public void onConnectionClosed ( ) { super . onConnectionClosed ( ) ; }
5226	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
5233	public static String id ( Object ... ss ) { StringBuilder sb = new StringBuilder ( ) ; for ( Object s : ss ) { if ( sb . length ( ) > _NUM ) sb . append ( _CHAR / _CHAR ) ; sb . append ( s ) ; } return id ( hash ( sb . toString ( ) ) ) ; }
5244	public boolean add_tags ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR add - tags _CHAR ) ; }
5248	public void add ( Predicate p , BasicStroke stroke ) { super . add ( p , stroke ) ; }
5280	public boolean vta ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR vta _CHAR ) ; }
5291	public static String toString ( InputStream input , String encoding ) throws IOException { return toString ( input , Charsets . toCharset ( encoding ) ) ; }
5295	public void onIntroduceType ( IntroduceTypeData introduceTypeData ) { }
5298	@ JsOverlay public static JsPlainObj $ jsPlainObj ( Object ... fieldValues ) { return $ ( new JsPlainObj ( ) , fieldValues ) ; }
5306	public double asDistance ( ) { double dS = getOverallSimilarity ( ) ; if ( dS == _NUM ) return Double . POSITIVE_INFINITY ; else return _NUM . _NUM / dS ; }
5319	public static boolean isCyberwareInstalled ( @ Nullable Entity targetEntity , ItemStack stack ) { if ( ! hasCapability ( targetEntity ) ) return _BOOL ; ICyberwareUserData cyberware = getCapability ( targetEntity ) ; return cyberware . isCyberwareInstalled ( stack ) ; }
5346	public void removedFromDatasource ( ) { assertIsMutable ( ) ; this . clearChanged ( ) ; this . setImmutable ( ) ; }
5357	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
5360	public void add ( String expr , BasicStroke stroke ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; add ( p , stroke ) ; }
5376	public boolean isValidGenericTld ( String gTld ) { gTld = unicodeToASCII ( gTld ) ; return Arrays . binarySearch ( GENERIC_TLDS , chompLeadingDot ( gTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
5382	public ExtendedIndexIterator < TemplateCacheInfo > establishScan ( K startPos , short relation , K endPos , boolean endPosInclusive , boolean ordered ) { if ( isEmpty ( ) ) return _NULL ; ordered |= _FORCE_ORDERED_SCAN ; return ordered ? establishScanOrdered ( startPos , relation , endPos , endPosInclusive ) : establishScanUnOrdered ( startPos , relation , endPos , endPosInclusive ) ; }
5383	public String renderAsString ( String combinedName ) throws GeneralException , IOException , SAXException , ParserConfigurationException { String resourceName = ScreenFactory . getResourceNameFromCombined ( combinedName ) ; String screenName = ScreenFactory . getScreenNameFromCombined ( combinedName ) ; return this . render ( resourceName , screenName , _BOOL ) ; }
5396	public boolean equals ( Object obj ) { return obj == this || ( obj != _NULL && obj . getClass ( ) == getClass ( ) && instance . equals ( ( ( MarshalledWrapper ) obj ) . instance ) ) ; }
5412	public PhotosEditCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
5423	public final void addPropertyChangeListener ( String propertyName , PropertyChangeListener listener ) { getChangeSupport ( ) . addPropertyChangeListener ( propertyName , listener ) ; }
5450	void prepareDisplayTaskFor ( ImageAware imageAware , String memoryCacheKey ) { cacheKeysForImageAwares . put ( imageAware . getId ( ) , memoryCacheKey ) ; }
5455	public void startObjectName ( O object ) { }
5465	private String computeOverrideMethodName ( String name , String desc ) { if ( desc . startsWith ( instanceToStaticDescPrefix ) && ! name . equals ( _CHAR init $ body _CHAR ) ) { return METHOD_MANGLE_PREFIX + name ; } return name ; }
5467	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output , String encoding ) throws IOException { writeLines ( lines , lineEnding , output , Charsets . toCharset ( encoding ) ) ; }
5470	Future < LogSegmentMetadata > completeAndCloseLogSegment ( final BKLogSegmentWriter writer ) { final Promise < LogSegmentMetadata > promise = new Promise < LogSegmentMetadata > ( ) ; completeAndCloseLogSegment ( writer , promise ) ; return promise ; }
5471	public static boolean templatesAreValid ( ) { try { File templateRootFolder = getTemplateRootFolder ( ) ; if ( templateRootFolder == _NULL ) { return _BOOL ; } return templateRootIsValid ( templateRootFolder ) ; } catch ( Exception e ) { return _BOOL ; } }
5488	public static char [ ] toCharArray ( InputStream is , String encoding ) throws IOException { return toCharArray ( is , Charsets . toCharset ( encoding ) ) ; }
5492	public long themeColor ( ) { return mThemeColor ; }
5494	public boolean removeDataSet ( T d ) { if ( d == _NULL ) return _BOOL ; boolean removed = mDataSets . remove ( d ) ; if ( removed ) { calcMinMax ( ) ; } return removed ; }
5517	synchronized protected boolean removeFromPendingCacheIfEqual ( IResource resource , byte [ ] syncBytes ) { byte [ ] old = ( byte [ ] ) pendingCacheWrites . get ( resource ) ; if ( equals ( old , syncBytes ) ) { pendingCacheWrites . remove ( resource ) ; return _BOOL ; } return _BOOL ; }
5529	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
5532	public void enableGridDashedLine ( float lineLength , float spaceLength , float phase ) { mGridDashPathEffect = new DashPathEffect ( new float [ ] { lineLength , spaceLength } , phase ) ; }
5539	public PhotosCreateCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
5542	public Builder conditionalReplaceValueTransform ( String column , Writable newValue , Condition condition ) { return transform ( new ConditionalReplaceValueTransform ( column , newValue , condition ) ) ; }
5544	public double length ( ) { return Math . sqrt ( NumberConversions . square ( x ) + NumberConversions . square ( y ) + NumberConversions . square ( z ) ) ; }
5553	public final void addPropertyChangeListener ( PropertyChangeListener listener ) { getChangeSupport ( ) . addPropertyChangeListener ( listener ) ; }
5570	public static Iterator providers ( Class service , ClassLoader loader ) throws ServiceConfigurationError { return new LazyIterator ( service , loader ) ; }
5576	@ Override public long blocksAccessed ( ) { return sp1 . blocksAccessed ( ) + sp2 . blocksAccessed ( ) ; }
5589	@ NotNull public IntProperty outputHeight ( ) { return myOutputHeight ; }
5590	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
5594	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
5595	public static < R > Flowable < R > ifThen ( BooleanSupplier condition , Publisher < ? extends R > then ) { return ifThen ( condition , then , Flowable . < R > empty ( ) ) ; }
5604	public ShapelessRecipe removeIngredient ( MaterialData ingredient ) { return removeIngredient ( ingredient . getItemType ( ) , ingredient . getData ( ) ) ; }
5620	@ Override public String addSymbol ( char [ ] buffer , int offset , int length ) { synchronized ( fSymbolTable ) { return fSymbolTable . addSymbol ( buffer , offset , length ) ; } }
5625	public void writeBytes ( byte [ ] value ) throws JMSException { writeBytes ( value , _NUM , value . length ) ; }
5641	public void write ( byte b [ ] , int off , int len ) { if ( len == _NUM ) return ; ensureCapacity ( len ) ; System . arraycopy ( b , off , _buffer , _count , len ) ; _count += len ; }
5652	public Builder position ( String position ) { this . position = position ; return this ; }
5668	public EntityQuery having ( EntityCondition entityCondition ) { this . havingEntityCondition = entityCondition ; return this ; }
5683	void prepareDisplayTaskFor ( ImageAware imageAware , String memoryCacheKey ) { cacheKeysForImageAwares . put ( imageAware . getId ( ) , memoryCacheKey ) ; }
5696	public static long factorial ( final int n ) { if ( n < _NUM ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR must have n >= _NUM for n ! , got n = { _NUM } _CHAR , n ) ; } if ( n > _NUM ) { throw new ArithmeticException ( _CHAR factorial value is too large to fit in a long _CHAR ) ; } return FACTORIALS [ n ] ; }
5701	public JsonObject add ( String name , long value ) { add ( name , Json . value ( value ) ) ; return this ; }
5703	public int optInt ( int index ) { return this . optInt ( index , _NUM ) ; }
5713	public double distance ( Vector o ) { return Math . sqrt ( NumberConversions . square ( x - o . x ) + NumberConversions . square ( y - o . y ) + NumberConversions . square ( z - o . z ) ) ; }
5717	public Iterator < E > snapshotIterator ( ) { List < E > l = new LinkedList < E > ( this ) ; return l . iterator ( ) ; }
5718	public void startBoolean ( ) { }
5742	public static boolean needsAnnotationsJarInClasspath ( @ NotNull IAndroidTarget target ) { return target . getVersion ( ) . getApiLevel ( ) <= _NUM ; }
5754	public CMMModel train ( String inputFileName , String modelFileName , CMMParams params ) { JavaRDD < String > lines = jsc . textFile ( inputFileName ) ; cmmModel = train ( lines . collect ( ) , modelFileName , params ) ; return cmmModel ; }
5760	@ BeforeClass public void createResponseSpecification ( ) { RestAssured . baseURI = _CHAR http : // localhost : 9876 '' ; }
5761	public int read ( ) { return ( _position < _count ) ? readUnsignedByte ( ) : - _NUM ; }
5766	public static String commentIsValid ( String comment ) { if ( comment == _NULL || comment . trim ( ) . isEmpty ( ) ) { return _NULL ; } if ( comment . length ( ) > VALUE_MAX_LENGTH ) { return _CHAR comment_length_greater_than_max_length _CHAR ; } return _NULL ; }
5784	public Object [ ] toArray ( ) { Object [ ] elements = getArray ( ) ; return copyOf ( elements , elements . length ) ; }
5787	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
5794	private void indexSplitDoc ( ) { try { _indexSplitDoc ( ) ; } finally { semaphore . release ( ) ; indexState . globalState . indexingJobsRunning . release ( ) ; ctx . inFlightChunks . arrive ( ) ; } }
5811	void updateInstalledState ( ) { Module module = getModule ( ) ; boolean isInstalled = getBuildSystemOperations ( module . getProject ( ) ) . isServiceInstalled ( module , getMetadata ( ) ) ; getContext ( ) . installed ( ) . set ( isInstalled ) ; }
5819	@ Override public void ignorableWhitespace ( XMLString text , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL && ! fOnlyPassPrefixMappingEvents ) { fDocumentHandler . ignorableWhitespace ( text , augs ) ; } }
5820	@ Override public int read ( ) throws IOException { return fInputStream . read ( ) ; }
5882	@ Override public void delete ( ) throws AWSIotException { super . delete ( ) ; }
5889	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
5895	@ Override public FSDataInputStream open ( Path path , int bufferSize ) throws IOException { String table = getTableName ( _rootPath , path ) ; String split = getSplitName ( _rootPath , path ) ; split = splitNameWithoutGzipExtension ( split ) ; return new FSDataInputStream ( new EmoSplitInputStream ( table , split ) ) ; }
5935	public double evaluate ( final double [ ] values , final double mean ) throws MathIllegalArgumentException { return FastMath . sqrt ( variance . evaluate ( values , mean ) ) ; }
5937	public static boolean typeCheck ( Class type , Object instance ) { return type . isAssignableFrom ( instance . getClass ( ) ) || isWrapperInstance ( type , instance ) ; }
5939	public Application createJmxApplication ( String connectionString , String displayName , String username , String password ) throws JmxApplicationException { return createJmxApplication ( connectionString , displayName , username , password , _BOOL , _BOOL ) ; }
5947	public static void writeLines ( File file , Collection < ? > lines , String lineEnding , boolean append ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , append ) ; }
5950	public void incrShortFor ( Quaternion other ) { double cosom = this . dotProduct ( other ) ; if ( cosom < _NUM ) { incrScale ( - _NUM ) ; } }
5975	public static void showManagedByParentToast ( Context context ) { boolean singleParentIsManager = PrefServiceBridge . getInstance ( ) . getSupervisedUserSecondCustodianName ( ) . isEmpty ( ) ; Toast . makeText ( context , context . getString ( singleParentIsManager ? R . string . managed_by_your_parent : R . string . managed_by_your_parents ) , Toast . LENGTH_LONG ) . show ( ) ; }
5990	public void put ( String key , String value ) { parameters . put ( key , value ) ; }
5992	public final void addAlarmValues ( final List < AlarmValueImpl > alarmValues ) { if ( alarmValues != _NULL ) { for ( AlarmValueImpl alarmValue : alarmValues ) { if ( alarmValue != _NULL ) { addAlarmValue ( alarmValue ) ; } } } }
6002	public static List < String > readLines ( InputStream input , String encoding ) throws IOException { return readLines ( input , Charsets . toCharset ( encoding ) ) ; }
6009	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_graph = graph ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
6013	public static final int daysBetween ( Date early , Date late ) { Calendar c1 = Calendar . getInstance ( ) ; Calendar c2 = Calendar . getInstance ( ) ; c1 . setTime ( early ) ; c2 . setTime ( late ) ; return daysBetween ( c1 , c2 ) ; }
6014	public void renew ( final Txn < T > newTxn ) { if ( SHOULD_CHECK ) { requireNonNull ( newTxn ) ; checkNotClosed ( ) ; this . txn . checkReadOnly ( ) ; newTxn . checkReadOnly ( ) ; newTxn . checkReady ( ) ; } checkRc ( LIB . mdb_cursor_renew ( newTxn . pointer ( ) , ptrCursor ) ) ; this . txn = newTxn ; }
6024	static public int ceil ( float value ) { return ( int ) ( value + BIG_ENOUGH_CEIL ) - BIG_ENOUGH_INT ; }
6035	public static float log ( float value , float base ) { return ( float ) ( Math . log ( value ) / Math . log ( base ) ) ; }
6036	public Object decode ( Object object ) throws Exception { try { char [ ] charArray = object instanceof String ? ( ( String ) object ) . toCharArray ( ) : ( char [ ] ) object ; return decodeHex ( charArray ) ; } catch ( ClassCastException e ) { throw new Exception ( e . getMessage ( ) , e ) ; } }
6040	private boolean isRecent ( ByteBuffer slabId ) { UUID uuid = TimeUUIDSerializer . get ( ) . fromByteBuffer ( slabId . duplicate ( ) ) ; long age = System . currentTimeMillis ( ) - TimeUUIDs . getTimeMillis ( uuid ) ; return age <= Constants . OPEN_SLAB_MARKER_TTL . getMillis ( ) ; }
6075	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
6079	private String normalizeResourceName ( String sName ) { return sName . replace ( _CHAR , _CHAR ) ; }
6088	public boolean checkRemove ( DataSource removeRoot ) { return _BOOL ; }
6092	@ Override public boolean containsAll ( Collection < ? > c ) { return backedSet . containsAll ( c ) ; }
6155	public void execute ( DelegateExecution execution ) { boolean exists = FileExistsMock . getInstance ( ) . fileExists ( ) ; execution . setVariable ( _CHAR fileexists _CHAR , exists ) ; }
6170	void commit ( long waitFor ) throws CannotCommitException , TimeoutExpiredException , RemoteException { commitImpl ( waitFor , _BOOL ) ; }
6176	public boolean binomialTest ( int numberOfTrials , int numberOfSuccesses , double probability , AlternativeHypothesis alternativeHypothesis , double alpha ) { double pValue = binomialTest ( numberOfTrials , numberOfSuccesses , probability , alternativeHypothesis ) ; return pValue < alpha ; }
6181	public static void linkCyberware ( ItemStack stack , ICyberware link ) { if ( stack == _NULL ) return ; ItemStack key = new ItemStack ( stack . getItem ( ) , _NUM , stack . getItemDamage ( ) ) ; linkedWare . put ( key , link ) ; }
6182	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
6187	@ NotNull public EditorFixture invokeQuickfixAction ( @ NotNull String labelPrefix ) { waitForQuickfix ( ) ; invokeAction ( EditorAction . SHOW_INTENTION_ACTIONS ) ; JBList popup = waitForPopup ( robot ) ; clickPopupMenuItem ( labelPrefix , popup , robot ) ; return this ; }
6195	static public int encode_vA_vM ( float vArc , float vMag ) { float vArc_nor = vArc / TWO_PI ; int vArc_I16 = ( int ) ( vArc_nor * ( _NUM - _NUM ) ) & _NUM ; int vMag_I16 = ( int ) ( vMag ) & _NUM ; return vMag_I16 << _NUM | vArc_I16 ; }
6197	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
6230	public void stopRecording ( ) { m_line . stop ( ) ; m_line . close ( ) ; }
6231	public boolean isValidInfrastructureTld ( String iTld ) { iTld = unicodeToASCII ( iTld ) ; return Arrays . binarySearch ( INFRASTRUCTURE_TLDS , ( chompLeadingDot ( iTld . toLowerCase ( Locale . ENGLISH ) ) ) ) >= _NUM ; }
6232	public boolean naive ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR naive _CHAR ) ; }
6239	public TimeColumn selectIf ( IntPredicate predicate ) { TimeColumn column = emptyCopy ( ) ; IntIterator iterator = intIterator ( ) ; while ( iterator . hasNext ( ) ) { int next = iterator . nextInt ( ) ; if ( predicate . test ( next ) ) { column . add ( next ) ; } } return column ; }
6247	@ Override public void close ( ) throws IOException { fInputStream . close ( ) ; }
6269	public boolean simplify_offline ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simplify - offline _CHAR ) ; }
6276	public synchronized Map < D , EdgeFunction < L >> forwardLookup ( D sourceVal , N target ) { assert sourceVal != _NULL ; assert target != _NULL ; Map < D , EdgeFunction < L >> res = nonEmptyForwardLookup . get ( sourceVal , target ) ; if ( res == _NULL ) return Collections . emptyMap ( ) ; return res ; }
6277	public SootClass makeClassRef ( String className ) { if ( Scene . v ( ) . containsClass ( className ) ) return Scene . v ( ) . getSootClass ( className ) ; SootClass newClass ; newClass = new SootClass ( className ) ; newClass . setResolvingLevel ( SootClass . DANGLING ) ; Scene . v ( ) . addClass ( newClass ) ; return newClass ; }
6295	@ Override public void applyTo ( List < Element > elements ) throws MaryConfigurationException { Log . d ( Mary . LOG , _CHAR predicting duration _CHAR ) ; HTSUttModel um = predictAndSetDuration ( elements , elements ) ; if ( predictDurAndF0 ) { uttModels . put ( elements , um ) ; } }
6298	public void type ( String ... strings ) { for ( String s : strings ) { type ( s ) ; } }
6307	public static UByte valueOf ( byte value ) { return valueOfUnchecked ( ( short ) ( value & MAX_VALUE ) ) ; }
6321	public static byte [ ] toByteArray ( Reader input , Charset encoding ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output , encoding ) ; return output . toByteArray ( ) ; }
6353	public byte [ ] decode ( byte [ ] array ) throws Exception { try { return decodeHex ( new String ( array , getCharsetName ( ) ) . toCharArray ( ) ) ; } catch ( Exception e ) { throw new Exception ( e . getMessage ( ) , e ) ; } }
6356	public int valueAt ( int index ) { return mValues [ index ] ; }
6375	public RemoteEvent dequeue ( ) { Uuid uuid = _readyEvents . poll ( ) ; if ( uuid == _NULL ) return _NULL ; SingleProducer producer = getProducer ( uuid ) ; return producer . popNextReadyEvent ( ) ; }
6385	public int available ( ) throws IOException { if ( reduceChannels ) return ( super . available ( ) / ratio ) / _NUM ; else return super . available ( ) / ratio ; }
6388	public static boolean find ( String str , String regex ) { return Pattern . compile ( regex ) . matcher ( str ) . find ( ) ; }
6392	public static short sign ( final short x ) { return ( x == ZS ) ? ZS : ( x > ZS ) ? PS : NS ; }
6400	public static double turnAngle ( S2Point a , S2Point b , S2Point c ) { double outAngle = S2Point . crossProd ( b , a ) . angle ( S2Point . crossProd ( c , b ) ) ; return ( robustCCW ( a , b , c ) > _NUM ) ? outAngle : - outAngle ; }
6410	public Vector3f subtractLocal ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x -= vec . x ; y -= vec . y ; z -= vec . z ; return this ; }
6416	public static short indicator ( final short x ) { return ( x >= ZS ) ? PS : NS ; }
6421	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_JOIN_FAIL_WRONG_PASSWORD ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6424	public void validate ( List < ValidationException > exceptionList ) { final boolean runAllValidators = Options . v ( ) . debug ( ) || Options . v ( ) . validate ( ) ; for ( ClassValidator validator : getValidators ( ) ) { if ( ! validator . isBasicValidator ( ) && ! runAllValidators ) continue ; validator . validate ( this , exceptionList ) ; } }
6431	public static NativePage createNativePageForURL ( String url , NativePage candidatePage , Tab tab , TabModelSelector tabModelSelector , Activity activity ) { return createNativePageForURL ( url , candidatePage , tab , tabModelSelector , activity , tab . isIncognito ( ) ) ; }
6450	public static double product ( final double [ ] values , final int begin , final int length ) throws MathIllegalArgumentException { return PRODUCT . evaluate ( values , begin , length ) ; }
6452	private void _alwaysScheduleAfter ( Activity before , Activity after ) { before . addActivityListener ( new ScheduleAfterActivity ( after , _BOOL ) ) ; }
6468	public boolean debug ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR debug _CHAR ) ; }
6507	public void selectionChanged ( SelectionChangedEvent event ) { selectionChanged ( event . getSelection ( ) ) ; }
6515	@ Override public void ignorableWhitespace ( XMLString text , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL ) { fDocumentHandler . ignorableWhitespace ( text , augs ) ; } }
6530	public double evaluate ( final double [ ] values , final double mean , final int begin , final int length ) throws MathIllegalArgumentException { return FastMath . sqrt ( variance . evaluate ( values , mean , begin , length ) ) ; }
6534	public static double distance ( Vector3D v1 , Vector3D v2 ) { return v1 . distance ( v2 ) ; }
6537	public Vector3f add ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } return new Vector3f ( x + vec . x , y + vec . y , z + vec . z ) ; }
6540	@ Override public void startContentModel ( String elementName , Augmentations augs ) throws XNIException { }
6541	private void adjustRightByAspectRatio ( RectF rect , float aspectRatio ) { rect . right = rect . left + rect . height ( ) * aspectRatio ; }
6544	boolean inHalfOpenRange ( K key , K least , K fence ) { if ( key == _NULL ) throw new NullPointerException ( ) ; return ( ( least == _NULL || compare ( key , least ) >= _NUM ) && ( fence == _NULL || compare ( key , fence ) < _NUM ) ) ; }
6584	public static JSONObject toJSONObject ( String string ) throws JSONException { JSONObject jo = new JSONObject ( ) ; XMLTokener x = new XMLTokener ( string ) ; while ( x . more ( ) && x . skipPast ( _CHAR < _CHAR ) ) { parse ( x , jo , _NULL ) ; } return jo ; }
6587	public SecurityManagerBuilder withAnonymousAccessAs ( @ Nullable String id ) { _anonymousId = id ; return this ; }
6588	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
6599	@ DataProvider ( name = _CHAR pitstops _CHAR ) public Object [ ] [ ] createPitstopData ( ) { return new Object [ ] [ ] { { _CHAR _NUM _CHAR , _NUM } , { _CHAR _NUM _CHAR , _NUM } , { _CHAR _NUM _CHAR , _NUM } , { _CHAR _NUM _CHAR , _NUM } } ; }
6613	public static @ Lightness int isDark ( Palette palette ) { Palette . Swatch mostPopulous = getMostPopulousSwatch ( palette ) ; if ( mostPopulous == _NULL ) return LIGHTNESS_UNKNOWN ; return isDark ( mostPopulous . getHsl ( ) ) ? IS_DARK : IS_LIGHT ; }
6625	private void skipToEndOfLine ( ) { for ( ; pos < in . length ( ) ; pos ++ ) { char c = in . charAt ( pos ) ; if ( c == _CHAR || c == _CHAR ) { pos ++ ; break ; } } }
6629	protected void keyTyped ( char typedChar , int keyCode ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { GuiTextField txt = ( ( GuiQuickCommandsList . CommandEntry ) this . guiList . getListEntry ( i ) ) . txt ; if ( txt . isFocused ( ) ) { txt . textboxKeyTyped ( typedChar , keyCode ) ; } } }
6630	public static int round ( float value ) { long lx = ( long ) ( value * ( _NUM * _NUM ) ) ; return ( int ) ( ( lx + _NUM ) >> _NUM ) ; }
6635	protected void handleListenerSetupFailure ( Throwable ex , boolean alreadyRecovered ) { if ( ex instanceof Exception ) { invokeExceptionListener ( ( Exception ) ex ) ; } if ( alreadyRecovered ) { logger . debug ( message ( _CHAR Setup of event listener invoker failed - already recovered by other invoker _CHAR ) , ex ) ; } else { logger . error ( message ( _CHAR Setup of event listener invoker failed - trying to recover _CHAR ) , ex ) ; } }
6637	public boolean with_fieldref ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - fieldref _CHAR ) ; }
6648	public RealMatrix computeCorrelationMatrix ( double [ ] [ ] data ) { return computeCorrelationMatrix ( new BlockRealMatrix ( data ) ) ; }
6652	public boolean contains ( double x , double y , double w , double h ) { return _BOOL ; }
6658	public void useCodebaseAnnotations ( ) { usingCodebaseAnnotations = _BOOL ; }
6707	public Builder iconAnchor ( Point iconAnchor ) { this . iconAnchor = iconAnchor ; return this ; }
6717	@ Override public void publish ( String topic , String payload ) throws AWSIotException { super . publish ( topic , payload ) ; }
6741	@ Override public boolean isFullyComposed ( ) { return fFullyComposed ; }
6745	public static String toDateTimeString ( java . util . Date date ) { if ( date == _NULL ) return _CHAR _CHAR ; String dateString = toDateString ( date ) ; String timeString = toTimeString ( date ) ; if ( dateString != _NULL && timeString != _NULL ) { return dateString + _CHAR _CHAR + timeString ; } else { return _CHAR _CHAR ; } }
6796	protected void addComponent ( XMLComponent component ) { if ( fComponents . contains ( component ) ) { return ; } fComponents . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
6803	static Class [ ] reduce ( Class [ ] classes , boolean keepSupers ) { return reduce0 ( classes . clone ( ) , keepSupers ) ; }
6820	public static final String name ( String name ) { return name . toLowerCase ( Locale . ROOT ) . replaceAll ( _CHAR [ ^- a - zA - Z_0 - _NUM . ] _CHAR , _CHAR _ _CHAR ) ; }
6826	private int readFirstBytes ( ) throws IOException { getBOM ( ) ; return fbIndex < fbLength ? firstBytes [ fbIndex ++ ] : - _NUM ; }
6831	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
6846	public Builder icon ( Icon icon ) { this . icon = icon ; return this ; }
6847	private static void determineFirstDigit ( StringBuilder resultString , int lgPatternFound ) throws NotFoundException { for ( int d = _NUM ; d < _NUM ; d ++ ) { if ( lgPatternFound == FIRST_DIGIT_ENCODINGS [ d ] ) { resultString . insert ( _NUM , ( char ) ( _CHAR + d ) ) ; return ; } } throw NotFoundException . getNotFoundInstance ( ) ; }
6849	public static boolean isXML11ValidLiteral ( int c ) { return ( ( c < _NUM && ( ( XML11CHARS [ c ] & MASK_XML11_VALID ) != _NUM && ( XML11CHARS [ c ] & MASK_XML11_CONTROL ) == _NUM ) ) || ( _NUM <= c && c <= _NUM ) ) ; }
6897	@ TargetApi ( Build . VERSION_CODES . LOLLIPOP ) private static boolean moveToFront ( AppTask task ) { try { task . moveToFront ( ) ; return _BOOL ; } catch ( SecurityException e ) { sMoveToFrontExceptionHistogram . recordHit ( ) ; } return _BOOL ; }
6914	public int hashCode ( ) { return hashCode ; }
6919	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
6921	@ NotNull public RecognizeDomainSpecificContentInImageAction recognizeDomainSpecificContentInImage ( @ NotNull List < DomainSpecificDetails > model , @ NotNull InputStream image ) { return new RecognizeDomainSpecificContentInImageAction ( cognitiveContext , model , image ) ; }
6925	public void erasePurchase ( String sku ) { if ( mPurchaseMap . containsKey ( sku ) ) mPurchaseMap . remove ( sku ) ; }
6936	public Builder position ( String position ) { this . position = position ; return this ; }
6941	public static boolean isSignedInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { Integer . parseInt ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
6943	public boolean naive_side_effect ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR naive - side - effect _CHAR ) ; }
6961	protected LinkedHashMap < Dimension , LinkedHashSet < DimensionField >> generateDimensionFields ( @ NotNull List < PathSegment > apiDimensionPathSegments , @ NotNull DimensionDictionary dimensionDictionary ) { return apiDimensionPathSegments . stream ( ) . filter ( _NULL ) . collect ( Collectors . toMap ( _NULL , _NULL , _NULL , _NULL ) ) ; }
6975	public boolean readBoolean ( ) { String s = readString ( ) ; if ( s . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( s . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( s . equals ( _CHAR _NUM _CHAR ) ) return _BOOL ; if ( s . equals ( _CHAR _NUM _CHAR ) ) return _BOOL ; throw new InputMismatchException ( ) ; }
6992	@ Override public void endGeneralEntity ( String name , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL ) { fDocumentHandler . endGeneralEntity ( name , augs ) ; } }
6998	private void ensureDependenciesResolved ( ) { getDelegate ( loader ) ; }
7004	public void grant ( Class cl , Principal [ ] principals , Permission [ ] permissions ) { Policy p = getCurrentSubPolicy ( ) ; if ( p instanceof DynamicPolicy ) { ( ( DynamicPolicy ) p ) . grant ( cl , principals , permissions ) ; } else { throw new UnsupportedOperationException ( _CHAR grants not supported _CHAR ) ; } }
7011	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
7020	public boolean contains ( int x , int y ) { return _BOOL ; }
7028	public final int enableCryptKey ( ) { return crypt . enableKey ( ) ; }
7030	public static String toString ( InputStream input , Charset encoding ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw , encoding ) ; return sw . toString ( ) ; }
7031	protected void addXML11Component ( XMLComponent component ) { if ( fXML11Components . contains ( component ) ) { return ; } fXML11Components . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
7036	@ Override public boolean accepts ( Field field ) { return isList ( field ) && AnnotationsHelper . isFindByAnnotationPresent ( field ) && AnnotationsHelper . isGenericTypeAnnotedWithPageObject ( field ) ; }
7038	public WallCreateCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
7046	public boolean isAfter ( Period period ) { if ( period == _NULL || period . getEndDate ( ) == _NULL ) { return _BOOL ; } return getEndDate ( ) . after ( period . getEndDate ( ) ) ; }
7073	public void addWhileRunning ( Cursored cursored , Sequence sequence ) { SequenceGroups . addSequences ( this , SEQUENCE_UPDATER , cursored , sequence ) ; }
7079	public static void copyInternalVector3 ( FloatBuffer buf , int fromPos , int toPos ) { copyInternal ( buf , fromPos * _NUM , toPos * _NUM , _NUM ) ; }
7091	public static String [ ] tokenizeToStringArray ( String str , String delimiters ) { return tokenizeToStringArray ( str , delimiters , _BOOL , _BOOL ) ; }
7097	public static < T > ObservableList < T > filter ( ObservableList < T > items , Function < T , ObservableBooleanValue > conditionExtractor ) { return filterInternal ( items , conditionExtractor , _NULL ) ; }
7102	protected void load ( Document d ) { for ( String name : d . keySet ( ) ) { Object o = d . get ( name ) ; if ( o instanceof ObjectId ) { o = ( ( ObjectId ) o ) . toString ( ) ; } this . set ( name , o ) ; } }
7109	public static final void fillCircleFromTopLeft ( GL2 gl , double sx , double sy , double w , double h ) { double r = Math . min ( w , h ) * _NUM . _NUM ; RenderUtilities . fillCircleFromCenter ( gl , r , sx + r , sy - r ) ; }
7123	public Builder scrollWheelZoom ( Boolean scrollWheelZoom ) { this . scrollWheelZoom = scrollWheelZoom ; return this ; }
7124	private void traverseAndResolveTree ( FilterResolverIntf filterResolverTree , AbsoluteTableIdentifier tableIdentifier ) throws FilterUnsupportedException { if ( _NULL == filterResolverTree ) { return ; } traverseAndResolveTree ( filterResolverTree . getLeft ( ) , tableIdentifier ) ; filterResolverTree . resolve ( tableIdentifier ) ; traverseAndResolveTree ( filterResolverTree . getRight ( ) , tableIdentifier ) ; }
7134	public static < T extends RealFieldElement < T >> T distanceInf ( final Vector3D v1 , final FieldVector3D < T > v2 ) { return v2 . distanceInf ( v1 ) ; }
7151	public static double [ ] computeLogPowerSpectrum ( final double [ ] signal ) { double [ ] spectrum = computePowerSpectrum ( signal ) ; for ( int i = _NUM ; i < spectrum . length ; i ++ ) { spectrum [ i ] = MathUtils . db ( spectrum [ i ] ) ; } return spectrum ; }
7156	private void updateTabsVisibility ( StackTab [ ] sortedPriorityArray ) { mVisibilityArray . clear ( ) ; for ( int i = _NUM ; i < sortedPriorityArray . length ; i ++ ) { mVisibilityArray . add ( sortedPriorityArray [ i ] . getId ( ) ) ; } updateCacheVisibleIds ( mVisibilityArray ) ; }
7167	public static boolean isTake ( int mod ) { return ( mod & NOTIFY_TAKE ) != _NUM ; }
7169	public double pow ( final double exponent ) { return FastMath . pow ( numerator . doubleValue ( ) , exponent ) / FastMath . pow ( denominator . doubleValue ( ) , exponent ) ; }
7178	public static String toString ( Reader input ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw ) ; return sw . toString ( ) ; }
7184	public static void writeLines ( File file , Collection < ? > lines ) throws IOException { writeLines ( file , _NULL , lines , _NULL , _BOOL ) ; }
7193	@ Override public void close ( ) throws IOException { }
7208	public Condition simplify ( ) { return this ; }
7218	private void adjustLeftByAspectRatio ( RectF rect , float aspectRatio ) { rect . left = rect . right - rect . height ( ) * aspectRatio ; }
7233	public int minEffectiveTotalRange ( ) { if ( fCompositor == MODELGROUP_CHOICE ) return minEffectiveTotalRangeChoice ( ) ; else return minEffectiveTotalRangeAllSeq ( ) ; }
7252	public static Boolean booleanValueIndicator ( Object value ) { if ( value == _NULL || value instanceof Boolean ) { return ( Boolean ) value ; } else if ( _CHAR Y _CHAR . equals ( value ) ) { return Boolean . TRUE ; } else if ( _CHAR N _CHAR . equals ( value ) ) { return Boolean . FALSE ; } else { return _NULL ; } }
7266	@ Override public void add ( int location , MODEL object ) { int insertPosition = calcInsertPosition ( location ) ; if ( insertPosition == getItemCount ( ) ) { mItems . add ( object ) ; } else { mItems . add ( insertPosition , object ) ; } notifyIfNeed ( ) ; }
7268	public boolean field_based ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR field - based _CHAR ) ; }
7276	public static JpaQueryExecutor newExecutor ( QueryExpressions expression , ClassMetaData cm , Object [ ] parameters ) { if ( expression . projections . length > _NUM ) return new JpaJdbcQueryExecutor ( expression , cm , parameters ) ; return new JpaSqlQueryExecutor ( expression , cm , parameters ) ; }
7283	public void add ( String expr , ColorAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
7284	@ Override public void onServiceConnected ( ComponentName name , IBinder service ) { if ( ! name . equals ( mRunningJob . getServiceComponent ( ) ) ) { mCallbackHandler . obtainMessage ( MSG_SHUTDOWN_EXECUTION ) . sendToTarget ( ) ; return ; } this . service = IJobService . Stub . asInterface ( service ) ; mCallbackHandler . obtainMessage ( MSG_SERVICE_BOUND ) . sendToTarget ( ) ; }
7301	public static FeatureProcessorManager determineBestFeatureProcessorManager ( Voice voice ) { FeatureProcessorManager mgr = getFeatureProcessorManager ( voice ) ; if ( mgr == _NULL ) { mgr = determineBestFeatureProcessorManager ( voice . getLocale ( ) ) ; } return mgr ; }
7313	static void alwaysScheduleAfter ( Activity before , Activity after ) { getInstance ( ) . _alwaysScheduleAfter ( before , after ) ; }
7322	public static byte [ ] toByteArray ( InputStream input ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output ) ; return output . toByteArray ( ) ; }
7331	private static boolean hasSelfPermission ( Context context , String permission ) { switch ( Build . MANUFACTURER ) { case _CHAR Xiaomi _CHAR : { return checkSelfPermissionForXiaomi ( context , permission ) ; } default : { try { return checkSelfPermission ( context , permission ) == PackageManager . PERMISSION_GRANTED ; } catch ( RuntimeException t ) { return _BOOL ; } } } }
7332	@ Override public void textDecl ( String version , String encoding , Augmentations augs ) throws XNIException { }
7340	protected void beforeMove ( ) { synchronized ( System . err ) { System . err . println ( getLocalName ( ) + _CHAR is now migrating . '' ) ; } }
7341	public void readFrom ( Reader from ) throws ParserConfigurationException , SAXException , IOException { String inputData = FileUtils . getReaderAsString ( from ) ; setData ( inputData ) ; }
7351	public static String byteCountToDisplaySize ( long size ) { return byteCountToDisplaySize ( BigInteger . valueOf ( size ) ) ; }
7363	private void sendInstallNotificationAndNextStep ( OMAInfo omaInfo , DownloadInfo downloadInfo , String statusMessage ) { if ( ! sendNotification ( omaInfo , downloadInfo , statusMessage ) ) { showNextUrlDialog ( omaInfo ) ; } }
7367	@ Override public String toString ( ) { return getSelectAllQuery ( ) ; }
7368	public static boolean deleteQuietly ( File file ) { if ( file == _NULL ) { return _BOOL ; } try { if ( file . isDirectory ( ) ) { cleanDirectory ( file ) ; } } catch ( Exception ignored ) { } try { return file . delete ( ) ; } catch ( Exception ignored ) { return _BOOL ; } }
7372	private boolean isPrimitiveBooleanType ( Field field ) { Class < ? > fieldType = field . getType ( ) ; if ( _CHAR boolean _CHAR . equals ( fieldType . getName ( ) ) ) { return _BOOL ; } return _BOOL ; }
7379	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
7382	public long value ( ) { return _map . _values [ _index ] ; }
7385	public int length ( ) { return Graph . getEdgesCount ( ) ; }
7424	boolean isMarker ( ) { return value == this ; }
7456	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augs ) throws XNIException { }
7457	public static String toString ( Reader input ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw ) ; return sw . toString ( ) ; }
7476	@ Override public void mark ( int readAheadLimit ) throws IOException { throw new IOException ( fFormatter . formatMessage ( fLocale , _CHAR OperationNotSupported _CHAR , new Object [ ] { _CHAR mark ( ) _CHAR , _CHAR UTF - _NUM _CHAR } ) ) ; }
7490	public static boolean isEnableAppRestart ( ) { return enableAppRestart ; }
7492	public boolean isBelow ( Vector2 p , Vector2 q ) { double diff = p . y - q . y ; if ( diff == _NUM . _NUM ) { if ( p . x > q . x ) { return _BOOL ; } else { return _BOOL ; } } else { if ( diff < _NUM . _NUM ) { return _BOOL ; } else { return _BOOL ; } } }
7493	public void notifyHorizontalEdgeReached ( int startX , int finalX , int overX ) { mScrollerX . notifyEdgeReached ( startX , finalX , overX ) ; }
7501	@ Override public void update ( String jsonState ) throws AWSIotException { super . update ( jsonState ) ; }
7506	public void removeAllKeys ( ) { removeAllKeys ( storeName ) ; }
7515	public boolean isValid ( ) { return ( quality == _NULL || quality . isValid ( ) ) ; }
7539	public static List < Bucket > createBuckets ( Experiment experiment , int numberOfBuckets ) { double [ ] percentages = new double [ numberOfBuckets ] ; Arrays . fill ( percentages , _NUM . _NUM / numberOfBuckets ) ; return createBuckets ( experiment , percentages ) ; }
7545	@ Nullable @ Override @ CallSuper public List < String > validate ( JobTrigger trigger ) { if ( trigger == Trigger . NOW ) { return _NULL ; } if ( ! ( trigger instanceof JobTrigger . ExecutionWindowTrigger ) ) { return getMutableSingletonList ( _CHAR Unknown trigger provided _CHAR ) ; } return _NULL ; }
7547	public BoardCreateCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
7572	public boolean trim_clinit ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR trim - clinit _CHAR ) ; }
7577	static void handleException ( final Throwable e ) { if ( e instanceof Error && ! ( e instanceof LinkageError || e instanceof OutOfMemoryError || e instanceof StackOverflowError ) ) { throw ( Error ) e ; } logger . log ( Level . INFO , _CHAR unmarshalling failure _CHAR , e ) ; }
7579	public void java_lang_ClassLoader_defineClass0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassObject ( ) ) ; }
7588	public boolean removeTuple ( Tuple t ) { if ( containsTuple ( t ) ) { removeRow ( t . getRow ( ) ) ; return _BOOL ; } else { return _BOOL ; } }
7594	public static < K , R > Flowable < R > switchCase ( Callable < ? extends K > caseSelector , Map < ? super K , ? extends Publisher < ? extends R >> mapOfCases ) { return switchCase ( caseSelector , mapOfCases , Flowable . < R > empty ( ) ) ; }
7597	public long optLong ( String key ) { return optLong ( key , _NUM ) ; }
7600	public int size ( ) { return size ; }
7606	public void notifyDataSetInvalidated ( ) { mDataSetObservable . notifyInvalidated ( ) ; }
7629	public static boolean equals ( String filename1 , String filename2 ) { return equals ( filename1 , filename2 , _BOOL , IOCase . SENSITIVE ) ; }
7635	public static String defaultBuildSystemName ( ) { return BuildSystemProvider . defaultBuildSystem ( ) . buildSystem ( ) . getName ( ) ; }
7660	public T walkInOptimizedOrder ( final FieldVectorPreservingVisitor < T > visitor , final int start , final int end ) throws MathIllegalArgumentException { return walkInDefaultOrder ( visitor , start , end ) ; }
7687	public static double angle ( S2Point a , S2Point b , S2Point c ) { return S2Point . crossProd ( a , b ) . angle ( S2Point . crossProd ( c , b ) ) ; }
7693	public void addSplit ( String splitLabel ) { if ( mDisabled ) return ; long now = SystemClock . elapsedRealtime ( ) ; mSplits . add ( now ) ; mSplitLabels . add ( splitLabel ) ; }
7702	public void readFrom ( Reader from , String endMarker ) throws ParserConfigurationException , SAXException , IOException { Reader r = from ; if ( endMarker != _NULL ) { ReaderSplitter fromSplitter = new ReaderSplitter ( from , endMarker ) ; r = fromSplitter . nextReader ( ) ; } readFrom ( r ) ; }
7705	public boolean hasFeatureValue ( String featureName , String featureValue ) { return hasFeatureValue ( getFeatureIndex ( featureName ) , featureValue ) ; }
7706	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
7709	public void press ( ) { this . isDown = _BOOL ; this . justPressed = _BOOL ; }
7715	public MessagesGetQuery lastMessageId ( Integer value ) { return unsafeParam ( _CHAR last_message_id _CHAR , value ) ; }
7719	@ NotNull public DetectFaceAction detectFace ( boolean returnFaceId , boolean returnFaceLandmarks , @ NotNull EnumSet < FaceAttributes > returnFaceAttributes , @ NotNull String imageUrl ) { return new DetectFaceAction ( cognitiveContext , returnFaceId , returnFaceLandmarks , returnFaceAttributes , imageUrl ) ; }
7724	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
7754	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augmentations ) throws XNIException { }
7759	public boolean dump_answer ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - answer _CHAR ) ; }
7762	public ThrowableSet mightThrowImplicitly ( ThrowInst t ) { return ThrowableSet . Manager . v ( ) . ALL_THROWABLES ; }
7764	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
7768	public void reject ( ) { this . isComplete = _BOOL ; this . isAcknowledged = _BOOL ; this . connection . sendMsg ( Topic . RPC , Actions . REJECTION , new String [ ] { this . name , this . correlationId } ) ; }
7771	private void initializeIndexSearcher ( ) { if ( luceneIndexSearcher == _NULL ) { reopenIndexSearcher ( _BOOL ) ; } }
7781	@ Override public boolean equals ( Object other ) { if ( this == other ) { return _BOOL ; } if ( other instanceof Fraction ) { Fraction rhs = ( Fraction ) other ; return ( numerator == rhs . numerator ) && ( denominator == rhs . denominator ) ; } return _BOOL ; }
7795	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static boolean isLog4jConfigured ( ) { return _BOOL ; }
7803	public static char [ ] toCharArray ( InputStream is , String encoding ) throws IOException { return toCharArray ( is , Charsets . toCharset ( encoding ) ) ; }
7825	public void textDecl ( String version , String encoding ) throws XNIException { }
7827	public JsonObject add ( String name , boolean value ) { add ( name , Json . value ( value ) ) ; return this ; }
7828	public boolean optBoolean ( int index , boolean defaultValue ) { try { return getBoolean ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
7831	@ Override public boolean contains ( Object o ) { return backedSet . contains ( o ) ; }
7832	public BinaryBitmap crop ( int left , int top , int width , int height ) { LuminanceSource newSource = binarizer . getLuminanceSource ( ) . crop ( left , top , width , height ) ; return new BinaryBitmap ( binarizer . createBinarizer ( newSource ) ) ; }
7836	private void checkBatchSize ( ) { if ( loader . getBatchSize ( ) > _NUM ) { LOG . warn ( _CHAR Loading with batch size [ _CHAR + loader . getBatchSize ( ) + _CHAR ] . This can cause conflicts on commit . '' ) ; } }
7867	@ Override public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { }
7902	public boolean isInteriorRight ( ) { return this . left . isInteriorRight ( ) ; }
7908	public boolean isValid ( ) { return ( Math . abs ( lat . lo ( ) ) <= S2 . M_PI_2 && Math . abs ( lat . hi ( ) ) <= S2 . M_PI_2 && lng . isValid ( ) && lat . isEmpty ( ) == lng . isEmpty ( ) ) ; }
7927	public static final String unescapeHtml4 ( final String input ) { return UNESCAPE_HTML4 . translate ( input ) ; }
7928	public boolean hasFeatureValue ( int featureIndex , String featureValue ) { if ( featureIndex < _NUM ) { return _BOOL ; } if ( featureIndex < numByteFeatures ) { return byteFeatureValues [ featureIndex ] . contains ( featureValue ) ; } if ( featureIndex < numByteFeatures + numShortFeatures ) { return shortFeatureValues [ featureIndex - numByteFeatures ] . contains ( featureValue ) ; } return _BOOL ; }
7936	public void fixupNextTryTime ( ) { long curTime = SystemTime . timeMillis ( ) ; if ( ( curTime - time ) > MIN_RETRY ) { tryIndx = _NUM ; nextTryTime = curTime ; } else { setNextTryTime ( ) ; } }
7947	public static void writeVLong ( DataOutput stream , long i ) throws IOException { WritableUtils . writeVLong ( stream , i ) ; }
7950	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output ) throws IOException { writeLines ( lines , lineEnding , output , Charset . defaultCharset ( ) ) ; }
7953	public boolean chiSquareTest ( final double [ ] expected , final long [ ] observed , final double alpha ) throws MathIllegalArgumentException , MathIllegalStateException { if ( ( alpha <= _NUM ) || ( alpha > _NUM . _NUM ) ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . OUT_OF_BOUND_SIGNIFICANCE_LEVEL , alpha , _NUM , _NUM . _NUM ) ; } return chiSquareTest ( expected , observed ) < alpha ; }
7959	public SegmentTemplateParameterContext initSegment ( SegmentUUID uuid ) { if ( ! segments . containsKey ( uuid ) ) { int segmNum = segments . size ( ) ; doAddParameter ( uuid , SegmentContextParameters . UUID , uuid . getUuid ( ) ) ; doAddParameter ( uuid , SegmentContextParameters . NUM , String . valueOf ( segmNum ) ) ; } return this ; }
7973	protected void resetEntityManager ( ) { EntityManager em = module . getEntityManager ( ) ; em . flush ( ) ; em . clear ( ) ; }
7990	void prepareDisplayTaskFor ( ImageAware imageAware , String memoryCacheKey ) { cacheKeysForImageAwares . put ( imageAware . getId ( ) , memoryCacheKey ) ; }
8005	public void java_lang_Class_getDeclaredClasses0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getLeastArrayObject ( ) ) ; }
8016	public < T > void putEnv ( String key , T value ) { String ekey = FlexibleStringExpander . expandString ( key , this . env ) ; FlexibleMapAccessor < T > fma = FlexibleMapAccessor . getInstance ( ekey ) ; this . putEnv ( fma , value ) ; }
8022	@ Override public CarbonDictionaryColumnMetaChunk readLastEntryOfDictionaryMetaChunk ( ) throws IOException { ColumnDictionaryChunkMeta dictionaryChunkMeta = _NULL ; openThriftReader ( ) ; while ( dictionaryMetadataFileReader . hasNext ( ) ) { dictionaryChunkMeta = ( ColumnDictionaryChunkMeta ) dictionaryMetadataFileReader . read ( ) ; } CarbonDictionaryColumnMetaChunk columnMetaChunkForLastSegment = getNewInstanceOfCarbonDictionaryColumnMetaChunk ( dictionaryChunkMeta ) ; return columnMetaChunkForLastSegment ; }
8027	public static MissionBehaviour createAgentHandlersFromMissionInit ( MissionInit missionInit ) throws Exception { MissionBehaviour behaviour = new MissionBehaviour ( ) ; behaviour . initAgent ( missionInit ) ; return behaviour ; }
8028	public JSONObject putOnce ( String key , Object value ) throws JSONException { if ( key != _NULL && value != _NULL ) { if ( opt ( key ) != _NULL ) { throw new JSONException ( _CHAR Duplicate key \ _CHAR _CHAR + key + _CHAR \ _CHAR _CHAR ) ; } put ( key , value ) ; } return this ; }
8029	public StyleImageView enableAnimation ( long animationDuration ) { styler . enableAnimation ( animationDuration ) ; return this ; }
8031	public boolean all_reachable ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR all - reachable _CHAR ) ; }
8036	public static Token newToken ( int ofKind , String image ) { switch ( ofKind ) { default : return new Token ( ofKind , image ) ; } }
8057	public int size ( ) { if ( size == _NUM ) return _NUM ; expungeStaleEntries ( ) ; return size ; }
8060	public static SnippetObject symbol ( Object symbol ) { return new SnippetObject ( longify ( symbol ) , _NULL , _NULL ) ; }
8073	public boolean isSynchronizing ( Account account , String remotePath ) { if ( account == _NULL || remotePath == _NULL ) return _BOOL ; return ( mPendingOperations . contains ( account . name , remotePath ) ) ; }
8083	@ Override public Scan open ( ) { TempTable tt = copyRecordsFrom ( rhs ) ; TableInfo ti = tt . getTableInfo ( ) ; Scan leftscan = lhs . open ( ) ; return new MultiBufferProductScan ( leftscan , ti , tx ) ; }
8086	protected Object takeGetMethodValueByField ( DataSupport dataSupport , Field field ) throws SecurityException , NoSuchMethodException , IllegalArgumentException , IllegalAccessException , InvocationTargetException { if ( shouldGetOrSet ( dataSupport , field ) ) { String getMethodName = makeGetterMethodName ( field ) ; return DynamicExecutor . send ( dataSupport , getMethodName , _NULL , dataSupport . getClass ( ) , _NULL ) ; } return _NULL ; }
8095	public synchronized BookKeeperClientBuilder zkc ( ZooKeeperClient zkc ) { this . zkc = zkc ; return this ; }
8097	public void clearSelection ( ) { Iterator < Integer > iterator = selectedItems . iterator ( ) ; while ( iterator . hasNext ( ) ) { int i = iterator . next ( ) ; iterator . remove ( ) ; Log . v ( TAG , _CHAR clearSelection notifyItemChanged on position _CHAR + i ) ; notifyItemChanged ( i ) ; } }
8100	public void clear ( ) { if ( data != _NULL ) { for ( int i = _NUM ; i < ( length * _NUM ) ; i ++ ) data [ i ] = _NULL ; } length = _NUM ; }
8101	public Vector2f add ( Vector2f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } return new Vector2f ( x + vec . x , y + vec . y ) ; }
8103	public static double positiveDistance ( double a , double b ) { double d = b - a ; if ( d >= _NUM ) { return d ; } return ( b + S2 . M_PI ) - ( a - S2 . M_PI ) ; }
8150	private static String filterCriteriaRebuilder ( String input ) { String [ ] split = input . split ( _CHAR \\ $ _CHAR ) ; StringBuilder builder = new StringBuilder ( input ) ; if ( split . length <= _NUM ) builder . append ( _CHAR $ _CHAR ) . append ( IssueCounter . GROUP_TOTAL ) ; return builder . toString ( ) ; }
8151	public boolean addSiblingBefore ( AXmlNode sibling ) { if ( this . parent != _NULL ) { this . parent . addChild ( sibling , this . parent . getChildren ( ) . indexOf ( this ) ) ; return _BOOL ; } else { return _BOOL ; } }
8153	public int optInt ( int index , int defaultValue ) { try { return this . getInt ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
8156	public static JSONObject toJSONObject ( String string ) throws JSONException { return toJSONObject ( new XMLTokener ( string ) ) ; }
8160	public static UShort valueOf ( short value ) { return new UShort ( value ) ; }
8164	public int optInt ( String key ) { return this . optInt ( key , _NUM ) ; }
8200	public void back ( ) { checkState ( myIndex > _NUM ) ; this . myIndex -= _NUM ; }
8201	public int threshold ( ) { return soot . PhaseOptions . getInt ( options , _CHAR threshold _CHAR ) ; }
8204	public boolean dump_types ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - types _CHAR ) ; }
8205	public double readDouble ( ) { return scanner . nextDouble ( ) ; }
8208	private boolean isNeedToRemove ( String columnName ) { return isRemovedFromClass ( columnName ) && ! isIdColumn ( columnName ) && ! isForeignKeyColumn ( mTableModel , columnName ) ; }
8221	@ NonNull public Builder buildUpon ( ) { return new Builder ( history ) ; }
8227	public static R1Interval fromPointPair ( double p1 , double p2 ) { if ( p1 <= p2 ) { return new R1Interval ( p1 , p2 ) ; } else { return new R1Interval ( p2 , p1 ) ; } }
8232	public static void databaseMigrations ( ) { Data data = injector . getInstance ( Data . class ) ; Repo repo = injector . getInstance ( Repo . class ) ; Api api = injector . getInstance ( Api . class ) ; data . createTableIfMissing ( ) ; repo . addSourceToTable ( ) ; repo . addBranchToTable ( ) ; api . createTableIfMissing ( ) ; }
8252	public Result useInteractedBlock ( ) { return useClickedBlock ; }
8259	public Builder enableHighAccuracy ( Boolean enableHighAccuracy ) { this . enableHighAccuracy = enableHighAccuracy ; return this ; }
8260	@ Override protected void synchronizeChildren ( ) { DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) ownerDocument ( ) ; ownerDocument . synchronizeChildren ( this , fNodeIndex ) ; }
8262	public static double sum ( Iterator tuples , String field ) { try { double sum = _NUM ; while ( tuples . hasNext ( ) ) { sum += ( ( Tuple ) tuples . next ( ) ) . getDouble ( field ) ; } return sum ; } catch ( Exception e ) { return Double . NaN ; } }
8263	@ Override public boolean next ( ) { if ( prodScan == _NULL ) return _BOOL ; while ( ! prodScan . next ( ) ) if ( ! useNextChunk ( ) ) return _BOOL ; return _BOOL ; }
8267	@ SuppressWarnings ( _CHAR unused _CHAR ) private void mapColumns ( String [ ] columns ) { for ( int i = _NUM ; i < columns . length ; i ++ ) { final String target = mProjectionMap . get ( columns [ i ] ) ; if ( target != _NULL ) { columns [ i ] = target ; } } }
8270	public static void precachingFinished ( Context context , boolean tryAgainSoon ) { new PrecacheServiceLauncher ( ) . precachingFinishedInternal ( context , tryAgainSoon ) ; }
8278	@ Override public String toString ( ) { String str = _NULL ; if ( denominator == _NUM ) { str = Integer . toString ( numerator ) ; } else if ( numerator == _NUM ) { str = _CHAR _NUM _CHAR ; } else { str = numerator + _CHAR / _CHAR + denominator ; } return str ; }
8285	private void performReplIfChunkReached ( Context context ) { if ( isReplicated ( ) ) { final int maxMultipleOperChunkSize = _clusterPolicy . m_ReplicationPolicy . m_SyncReplPolicy . getMultipleOperationChunkSize ( ) ; IReplicationOutContext replicationContext = context . getReplicationContext ( ) ; if ( maxMultipleOperChunkSize > _NUM && replicationContext != _NULL && replicationContext . pendingSize ( ) >= maxMultipleOperChunkSize ) performReplication ( context ) ; } }
8288	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
8293	@ Override public boolean addAll ( Collection < ? extends Pair < K , V >> c ) { return backedSet . addAll ( c ) ; }
8312	Circle sharedCircleWith ( final Vertex vertex ) { for ( final Circle circle1 : circles ) { for ( final Circle circle2 : vertex . circles ) { if ( circle1 == circle2 ) { return circle1 ; } } } return _NULL ; }
8317	private static boolean isUsableField ( IField < ? , ? > field ) { if ( ( field . getModifiers ( ) & IGNORE_MODES ) != _NUM ) return _BOOL ; if ( field . getType ( ) . isPrimitive ( ) ) { throw new IllegalArgumentException ( _CHAR Primitive fields not allowed in an Entry . Cause primitive field : [ _CHAR + field + _CHAR ] _CHAR ) ; } return _BOOL ; }
8318	public int length ( ) { return Graph . getEdgesCount ( ) ; }
8323	public Object convertFieldValue ( ModelField modelField , Object value , Delegator delegator , Map < String , ? extends Object > context ) { ModelFieldTypeReader modelFieldTypeReader = delegator . getModelFieldTypeReader ( this ) ; return this . convertFieldValue ( modelField , value , modelFieldTypeReader , context ) ; }
8324	public static JsonWriterWithViewHelper withView ( Class view ) { return new JsonWriterWithViewHelper ( JSON . writerWithView ( view ) ) ; }
8338	public static String error ( final int err ) { return LIB . mdb_strerror ( err ) ; }
8343	public Builder keyColumns ( String ... keyColumns ) { this . keyColumns = keyColumns ; return this ; }
8348	public String build ( ) { return StringUtil . join ( Arrays . asList ( buildSystemName , commandName , targetString ) , _CHAR _CHAR ) ; }
8356	public DoubleDataSource apply ( DoubleDataSource signal ) { return new FIROutput ( signal ) ; }
8357	@ Controller ( events = EventType . FILE_SHARED ) public void onFileShared ( WebSocketSession session , Event event ) { logger . info ( _CHAR File shared : { } _CHAR , event ) ; }
8362	public static boolean solveSelectionConflict ( @ NotNull Conflict conflict ) { return solveSelectionConflict ( conflict , _BOOL ) ; }
8376	public Matrix4f multLocal ( Matrix4f in2 ) { return mult ( in2 , this ) ; }
8378	protected PhotosGetByIdQueryWithExtended photos ( String ... value ) { return unsafeParam ( _CHAR photos _CHAR , value ) ; }
8382	public boolean equalTo ( Entry e ) { return e != _NULL && e . data == data && Math . abs ( e . x - this . x ) <= _NUM . _NUM && Math . abs ( e . getY ( ) - this . getY ( ) ) <= _NUM . _NUM ; }
8401	private void rememberUserInputForPokemonNameIfNewNickname ( Pokemon pokemon ) { if ( ! pokemonName . equals ( pokemon . name ) && pokeInfoCalculator . get ( pokemonName ) == _NULL ) { putCorrection ( pokemonName , pokemon . name ) ; } }
8408	protected void updateClientIDInternally ( final String updatedClientID ) throws JMSException { if ( closed ) throw new IllegalStateException ( _CHAR Forbidden call on a closed connection . '' ) ; this . m_clientID = updatedClientID ; }
8409	public int traversal ( ) { return soot . PhaseOptions . getInt ( options , _CHAR traversal _CHAR ) ; }
8421	int onUpdate ( Class < ? > modelClass , long id , ContentValues values ) { if ( values . size ( ) > _NUM ) { return mDatabase . update ( getTableName ( modelClass ) , values , _CHAR id = _CHAR + id , _NULL ) ; } return _NUM ; }
8437	public PhotosCreateCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
8443	private void ensureInstanceExists ( ServiceDocument state , Consumer < Throwable > callback ) { final AtomicBoolean documentExists = new AtomicBoolean ( ) ; QueryTaskClientHelper . create ( state . getClass ( ) ) . setDocumentLink ( state . documentSelfLink ) . setResultHandler ( _NULL ) . sendWith ( getHost ( ) ) ; }
8444	public static String replaceXliffVariableContent ( String xliffContent ) { return xliffContent . replaceFirst ( _CHAR file original =\ _CHAR . * ? \ _CHAR _CHAR , _CHAR file original =\ _CHAR replaced - original \ _CHAR _CHAR ) . replaceAll ( _CHAR id =\ _CHAR . * ? \ _CHAR _CHAR , _CHAR id =\ _CHAR replaced - id \ _CHAR _CHAR ) . replaceAll ( _CHAR tuv id : \\ d + _CHAR , _CHAR tuv id : replaced - id _CHAR ) ; }
8456	public static char [ ] encodeHex ( byte [ ] data , boolean toLowerCase ) { return encodeHex ( data , toLowerCase ? DIGITS_LOWER : DIGITS_UPPER ) ; }
8466	private Map < String , ArrayList < Integer >> beforeChange ( ) { if ( this . listChangedListeners . isEmpty ( ) ) { return _NULL ; } return this . getStructure ( ) ; }
8468	public static S2Cap fromAxisArea ( S2Point axis , double area ) { return new S2Cap ( axis , area / ( _NUM * S2 . M_PI ) ) ; }
8481	public boolean lazy_pts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR lazy - pts _CHAR ) ; }
8482	private String splitAsGzipFile ( String split ) { return split + _CHAR . gz _CHAR ; }
8499	public static < T extends Collection < ? >> void notEmpty ( String argumentName , T argumentObject ) { notNull ( argumentName , argumentObject ) ; if ( argumentObject . size ( ) == _NUM ) { throw new IllegalArgumentException ( argumentName + _CHAR can not be empty _CHAR ) ; } }
8501	public TrustManagerBuilder useDefault ( ) throws NoSuchAlgorithmException , KeyStoreException { TrustManagerFactory tmf = TrustManagerFactory . getInstance ( TrustManagerFactory . getDefaultAlgorithm ( ) ) ; tmf . init ( ( KeyStore ) _NULL ) ; add ( tmf . getTrustManagers ( ) ) ; return ( this ) ; }
8508	public Map . Entry < K , V > lastEntry ( ) { for ( ; ; ) { Node < K , V > n = findLast ( ) ; if ( n == _NULL ) return _NULL ; AbstractMap . SimpleImmutableEntry < K , V > e = n . createSnapshot ( ) ; if ( e != _NULL ) return e ; } }
8517	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
8520	public boolean canContain ( ElementType other ) { return ( theModel & other . theMemberOf ) != _NUM ; }
8528	public SpaceCopyStatus spaceCopy ( String remoteUrl , Object template , boolean includeNotifyTemplates , int chunkSize ) throws RemoteException { return ( ( IRemoteJSpaceAdmin ) m_service ) . spaceCopy ( remoteUrl , template , includeNotifyTemplates , chunkSize ) ; }
8550	@ Override public String addSymbol ( String symbol ) { if ( fSymbolTable . containsSymbol ( symbol ) ) { return fSymbolTable . addSymbol ( symbol ) ; } return super . addSymbol ( symbol ) ; }
8551	@ Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; refreshMapBtn . setEnabled ( _BOOL ) ; clearMapBtn . setEnabled ( _BOOL ) ; settingsrequest ( ) ; }
8563	public boolean tTest ( final double mu , final double [ ] sample , final double alpha ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSignificanceLevel ( alpha ) ; return tTest ( mu , sample ) < alpha ; }
8572	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_UPGRADE_LEVEL ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
8576	public boolean with_all ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - all _CHAR ) ; }
8582	public boolean is2DArea ( ) { return m_is2DArea ; }
8584	public static Stream < LongSummaryStatistics > shiftingWindowSummarizingLong ( LongStream longStream , int rollingFactor ) { Objects . requireNonNull ( longStream ) ; RollingOfLongSpliterator ofLongSpliterator = RollingOfLongSpliterator . of ( longStream . spliterator ( ) , rollingFactor ) ; return StreamSupport . stream ( ofLongSpliterator , longStream . isParallel ( ) ) . onClose ( _NULL ) . map ( _NULL ) ; }
8585	public int geom_eval ( ) { return soot . PhaseOptions . getInt ( options , _CHAR geom - eval _CHAR ) ; }
8589	public void abruptlyCloseCommunication ( ) { if ( communication != _NULL ) { communication . close ( ) ; communication = _NULL ; } connected = _BOOL ; stopAutoNoopTimer ( ) ; }
8590	public boolean contains ( Rectangle2D r ) { return _BOOL ; }
8603	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
8616	public RTText convertTo ( RTFormat destFormat , RTMediaFactory < RTImage , RTAudio , RTVideo > mediaFactory ) { if ( destFormat == mRTFormat ) { return this ; } throw new UnsupportedOperationException ( _CHAR Ca n _CHAR_CHAR_CHAR_CHAR + destFormat . getClass ( ) . getSimpleName ( ) ) ; }
8627	public static byte [ ] toByteArray ( InputStream input ) throws IOException { com . android . base . common . io . stream . ByteArrayOutputStream output = new com . android . base . common . io . stream . ByteArrayOutputStream ( ) ; copy ( input , output ) ; return output . toByteArray ( ) ; }
8635	public static void initialize ( Context context ) { sContext = context ; }
8639	public static String checkCreateUpdateAnonUser ( HttpServletRequest request , HttpServletResponse response ) { throw new UnsupportedOperationException ( _CHAR Not implemented _CHAR ) ; }
8645	public Iterator iterator ( ) { return new Iterator ( ) ; }
8657	@ NonNull public static Observable < BigInteger > task6Observable ( ) { return Observable . just ( BigInteger . ONE ) ; }
8664	public boolean hasSuperclass ( ) { checkLevel ( HIERARCHY ) ; return superClass != _NULL ; }
8676	static Object createObject ( String factoryId , String fallbackClassName ) throws ConfigurationError { return createObject ( factoryId , _NULL , fallbackClassName ) ; }
8690	public void fromAngleAxis ( float angle , Vector3f axis ) { Vector3f normAxis = axis . normalize ( ) ; fromAngleNormalAxis ( angle , normAxis ) ; }
8700	public void openSnapshot ( File file ) { throw new UnsupportedOperationException ( _CHAR Open snapshot not supported _CHAR ) ; }
8711	public static AnnotateView openInActivePerspective ( ) throws PartInitException { return ( AnnotateView ) SVNUIPlugin . getActivePage ( ) . showView ( VIEW_ID ) ; }
8721	public PhotosGetQueryWithExtended feed ( Integer value ) { return unsafeParam ( _CHAR feed _CHAR , value ) ; }
8727	public static < E > DoubleStream shiftingWindowAveragingLong ( Stream < E > stream , int rollingFactor , ToLongFunction < ? super E > mapper ) { Objects . requireNonNull ( stream ) ; Objects . requireNonNull ( mapper ) ; LongStream longStream = stream . mapToLong ( mapper ) ; return shiftingWindowAveragingLong ( longStream , rollingFactor ) ; }
8736	public boolean standard_local_names ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR standard - local - names _CHAR ) ; }
8756	public void addPage ( @ NonNull List < MODEL > items ) { setAutoNotifyDataSetChanged ( _BOOL ) ; addAll ( items ) ; setAutoNotifyDataSetChanged ( _BOOL ) ; onNewItemsAdded ( items . size ( ) ) ; notifyItemRangeInsertedIfNeed ( size ( ) - ( items . size ( ) + getHeadersCount ( ) ) , items . size ( ) ) ; }
8763	public boolean all_reachable ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR all - reachable _CHAR ) ; }
8783	public void requestNodeNeighborUpdate ( int nodeId ) { enqueue ( new RequestNodeNeighborUpdateMessageClass ( ) . doRequest ( nodeId ) ) ; }
8794	public static boolean isResourceReference ( @ NotNull PsiElement element ) { return getResourceReferenceType ( element ) != ResourceReferenceType . NONE ; }
8805	public void addHeaderView ( View v ) { addHeaderView ( v , _NULL , _BOOL ) ; }
8812	@ Override public RealVector solve ( final RealVector b ) { return pseudoInverse . operate ( b ) ; }
8826	private void migrate ( ) { if ( ! migrated ) { BlazeUserSettings userSettings = BlazeUserSettings . getInstance ( ) ; this . attachSourcesByDefault = userSettings . getAttachSourcesByDefault ( ) ; this . attachSourcesOnDemand = userSettings . getAttachSourcesOnDemand ( ) ; this . migrated = _BOOL ; } }
8830	public int size ( ) { return backedMap . size ( ) ; }
8831	public static boolean passwordIsValid ( String password ) { if ( password == _NULL || password . trim ( ) . length ( ) < _NUM || password . trim ( ) . length ( ) > _NUM ) { return _BOOL ; } return DIGIT_PATTERN . matcher ( password ) . matches ( ) && UPPERCASE_PATTERN . matcher ( password ) . matches ( ) ; }
8835	public static double distanceSq ( Vector1D p1 , Vector1D p2 ) { return p1 . distanceSq ( p2 ) ; }
8850	public static ResponseProperties createForbiddenResponse ( String statusMessage ) { return new ResponseProperties ( HttpServletResponse . SC_FORBIDDEN , statusMessage ) ; }
8868	@ Override public void close ( ) { }
8876	public NewsfeedGetQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
8878	public void reset ( String tag , String label ) { mTag = tag ; mLabel = label ; reset ( ) ; }
8902	public static char [ ] toCharArray ( InputStream is , String encoding ) throws IOException { return toCharArray ( is , Charsets . toCharset ( encoding ) ) ; }
8931	public boolean updateLibrariesToVersion ( @ NotNull Module module , @ NotNull List < GradleCoordinate > dependencies , @ Nullable Runnable callback ) { GradleBuildModel buildModel = GradleBuildModel . get ( module ) ; if ( buildModel == _NULL ) { return _BOOL ; } updateDependenciesInTransaction ( buildModel , module , dependencies , callback ) ; return _BOOL ; }
8944	public void begin ( int size ) { debugPrint ( _CHAR opening Stream ... _CHAR ) ; openLine ( currentFormat ) ; reset ( ) ; debugPrint ( _CHAR ... Stream opened _CHAR ) ; }
8952	public static ColumnReference column ( String columnName ) { return new ColumnReference ( columnName ) ; }
8958	public void minLocal ( Vector3f other ) { x = other . x < x ? other . x : x ; y = other . y < y ? other . y : y ; z = other . z < z ? other . z : z ; }
8972	public static String encodeHexString ( byte [ ] data ) { return new String ( encodeHex ( data ) ) ; }
8977	public void cancelJob ( int uid , int jobId ) { JobStatus toCancel ; synchronized ( mJobs ) { toCancel = mJobs . getJobByUidAndJobId ( uid , jobId ) ; } if ( toCancel != _NULL ) { cancelJobImpl ( toCancel ) ; } }
8981	public ThrowableSet mightThrow ( Unit u ) { return ThrowableSet . Manager . v ( ) . ALL_THROWABLES ; }
8984	public static boolean isMarkup ( int c ) { return c == _CHAR || c == _CHAR || c == _CHAR ; }
8988	public void remove ( int objIdOfPlayer ) { blockedList . remove ( objIdOfPlayer ) ; }
8989	public static void rollback ( boolean beganTransaction , String causeMessage , Throwable causeThrowable ) throws GenericTransactionException { if ( beganTransaction ) { TransactionUtil . rollback ( causeThrowable ) ; } else { TransactionUtil . setRollbackOnly ( causeMessage , causeThrowable ) ; } }
8998	public static String generateKey ( String imageUri , ImageSize targetSize ) { return new StringBuilder ( imageUri ) . append ( URI_AND_SIZE_SEPARATOR ) . append ( targetSize . getWidth ( ) ) . append ( WIDTH_AND_HEIGHT_SEPARATOR ) . append ( targetSize . getHeight ( ) ) . toString ( ) ; }
9004	public int bdd_nodes ( ) { return soot . PhaseOptions . getInt ( options , _CHAR bdd - nodes _CHAR ) ; }
9013	public boolean isSensor ( ) { return this . sensor ; }
9015	public AemSidekick activatePage ( ) { clickTab ( SidekickTab . PAGE ) ; clickOperation ( PageOperation . ACTIVATE_PAGE ) ; activateReferencesIfNeeded ( ) ; return this ; }
9017	public static SM_SYSTEM_MESSAGE STR_PETITION_SUBMIT_MESSAGE ( ) { return new SM_SYSTEM_MESSAGE ( _NUM ) ; }
9040	@ Override public void onAttach ( Context context ) { super . onAttach ( context ) ; if ( mTask != _NULL ) { if ( context instanceof ReceiveExternalFilesActivity ) { mTask . setListener ( ( CopyAndUploadContentUrisTask . OnCopyTmpFilesTaskListener ) context ) ; } else { mTask . setListener ( _NULL ) ; } } }
9041	public double slope ( ) { return beta ; }
9100	public void registerEditor ( RTEditText editor , boolean useRichTextEditing ) { mEditors . put ( editor . getId ( ) , editor ) ; editor . register ( this , mRTApi ) ; editor . setRichTextEditing ( useRichTextEditing , _BOOL ) ; updateToolbarVisibility ( ) ; }
9101	public static byte [ ] toByteArray ( InputStream input ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output ) ; return output . toByteArray ( ) ; }
9137	public CriteriaHibernateSpaceDataSourceConfigurer performOrderById ( boolean performOrderById ) { this . performOrderById = performOrderById ; return this ; }
9143	public static InputStream toInputStream ( CharSequence input , String encoding ) throws IOException { return toInputStream ( input , Charsets . toCharset ( encoding ) ) ; }
9144	private void cleanupMinidumpFile ( ) { if ( ! CrashFileManager . tryMarkAsUploaded ( mFileToUpload ) ) { Log . w ( TAG , _CHAR Unable to mark _CHAR + mFileToUpload + _CHAR as uploaded . '' ) ; if ( ! mFileToUpload . delete ( ) ) { Log . w ( TAG , _CHAR Can not delete _CHAR + mFileToUpload ) ; } } }
9148	@ Override public Future < List < Future < DLSN >> > writeBulk ( final List < LogRecord > records ) { final Stopwatch stopwatch = Stopwatch . createStarted ( ) ; return Future . value ( asyncWriteBulk ( records ) ) . addEventListener ( new OpStatsListener < List < Future < DLSN >> > ( bulkWriteOpStatsLogger , stopwatch ) ) ; }
9162	public final void incrementIdCounterTo ( int id ) { int diff = id - mIdCounter . get ( ) ; if ( diff < _NUM ) return ; mIdCounter . addAndGet ( diff ) ; updateSharedPreference ( ) ; }
9164	protected void checkNotation ( String notName ) { Notation not = new Notation ( ) ; not . name = notName ; int index = fNotations . indexOf ( not ) ; if ( index != - _NUM ) { not = ( Notation ) fNotations . get ( index ) ; checkAndSendNotation ( not ) ; } }
9165	public boolean cancel ( boolean mayInterruptIfRunning ) { if ( cancelled != _NULL ) { return cancelled ; } Object retVal = gigaSpace . take ( remotingEntry , _NUM ) ; cancelled = retVal != _NULL ; return cancelled ; }
9167	public static void updateDouble ( VisualItem item , String field , double val ) { item . setDouble ( getStartField ( field ) , item . getDouble ( field ) ) ; item . setDouble ( field , val ) ; item . setDouble ( getEndField ( field ) , val ) ; }
9176	public static byte [ ] toByteArray ( Reader input ) throws IOException { return toByteArray ( input , Charset . defaultCharset ( ) ) ; }
9177	public static InputStream toInputStream ( CharSequence input , String encoding ) throws IOException { return toInputStream ( input , Charsets . toCharset ( encoding ) ) ; }
9188	public void tryToRestoreTabStateForUrl ( String url ) { if ( isSessionRestoreInProgress ( ) ) mTabSaver . restoreTabStateForUrl ( url ) ; }
9190	public double inference ( Document d , double [ ] pzd ) { initializeTopics ( d ) ; return inferenceByGibbsSampling ( d , pzd , _NUM , _NUM ) ; }
9203	public boolean isFinished ( ) { return this . request == _NULL || request . isDone ( ) ; }
9206	public boolean isValidCountryCodeTld ( String ccTld ) { ccTld = unicodeToASCII ( ccTld ) ; return Arrays . binarySearch ( COUNTRY_CODE_TLDS , chompLeadingDot ( ccTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
9213	public static boolean begin ( ) throws GenericTransactionException { return begin ( _NUM ) ; }
9221	@ Override public boolean checkFacadeAllowed ( String table , FacadeOptions options ) throws FacadeExistsException { return checkFacadeAllowed ( readTableJson ( table , _BOOL ) , options . getPlacement ( ) , _NULL ) ; }
9233	public static final int daysBetween ( Date early , Date late ) { Calendar c1 = Calendar . getInstance ( ) ; Calendar c2 = Calendar . getInstance ( ) ; c1 . setTime ( early ) ; c2 . setTime ( late ) ; return daysBetween ( c1 , c2 ) ; }
9241	public void requestPreviewFrame ( Handler handler , int message ) { if ( mCamera != _NULL && mPreviewing ) { mPreviewCallback . setHandler ( handler , message ) ; mCamera . setOneShotPreviewCallback ( mPreviewCallback ) ; } }
9257	public Activity alwaysRunAfter ( String beforeKey , String afterKey ) { Activity before = get ( beforeKey ) ; Activity after = get ( afterKey ) ; if ( before != _NULL && after != _NULL ) ActivityManager . alwaysScheduleAfter ( before , after ) ; return after ; }
9262	public void writerWait ( Object notifier , long time ) { try { synchronized ( notifier ) { writeUnlock ( ) ; notifier . wait ( time ) ; } } catch ( InterruptedException e ) { throw new ConcurrentLockException ( _CHAR write wait interrupted in thread _CHAR ) ; } finally { writeLock ( ) ; } }
9267	public final synchronized String resolvePublic ( String publicId , String systemId ) throws IOException { if ( fCatalogsChanged ) { parseCatalogs ( ) ; fCatalogsChanged = _BOOL ; } return ( fCatalog != _NULL ) ? fCatalog . resolvePublic ( publicId , systemId ) : _NULL ; }
9268	public static < T > ObservableList < T > filterInverted ( ObservableList < T > items , Function < T , ObservableBooleanValue > conditionExtractor ) { return filterInternal ( items , conditionExtractor , _NULL ) ; }
9271	public boolean method_context_counts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR method - context - counts _CHAR ) ; }
9272	public void rejectDocument ( NGramDocument dDoc , double fLearningRate ) { dDoc . getDocumentGraph ( ) . nullify ( ) ; dDoc . getDocumentHistogram ( ) . nullify ( ) ; if ( this . getDocumentHistogram ( ) . length ( ) > _NUM ) getDocumentHistogram ( ) . mergeHistogram ( dDoc . getDocumentHistogram ( ) , fLearningRate ) ; if ( ! this . getDocumentGraph ( ) . isEmpty ( ) ) this . getDocumentGraph ( ) . mergeGraph ( dDoc . getDocumentGraph ( ) , fLearningRate ) ; }
9279	@ Override protected boolean elementDepthIsZeroHook ( ) throws IOException , XNIException { setScannerState ( SCANNER_STATE_TRAILING_MISC ) ; setDispatcher ( fTrailingMiscDispatcher ) ; return _BOOL ; }
9282	protected void beforeMove ( ) { synchronized ( System . err ) { System . err . println ( getLocalName ( ) + _CHAR is now migrating . '' ) ; } }
9288	private View findReferenceChildClosestToStart ( RecyclerView . State state ) { return mShouldReverseLayout ? findLastReferenceChild ( state . getItemCount ( ) ) : findFirstReferenceChild ( state . getItemCount ( ) ) ; }
9290	public void print ( NumberFormat format , int width ) { print ( new PrintWriter ( System . out , _BOOL ) , format , width ) ; }
9298	public int geom_frac_base ( ) { return soot . PhaseOptions . getInt ( options , _CHAR geom - frac - base _CHAR ) ; }
9302	public Builder calculateSortedRank ( String newColumnName , String sortOnColumn , WritableComparator comparator , boolean ascending ) { actionList . add ( new DataAction ( new CalculateSortedRank ( newColumnName , sortOnColumn , comparator , ascending ) ) ) ; return this ; }
9313	public void addLocators ( LookupLocator [ ] locators ) { locatorDisc . addLocators ( locators ) ; }
9320	public void spacing ( ) { int len = m_bias + m_tagStack . size ( ) * m_tab ; for ( int i = _NUM ; i < len ; ++ i ) m_out . print ( _CHAR ) ; }
9322	public static void writeStringToFile ( File file , String data , Charset encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
9325	public AudioGetRecommendationsQuery targetAudio ( String value ) { return unsafeParam ( _CHAR target_audio _CHAR , value ) ; }
9337	public static int copy ( Reader input , Writer output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
9379	public static final Token newToken ( int ofKind ) { switch ( ofKind ) { default : return new Token ( ) ; } }
9449	static BigDecimal sanitize ( BigDecimal value , int signum ) { if ( signum == _NUM || value == _NULL ) { return ZERO ; } if ( signum > _NUM ) { return value ; } return value . negate ( ) ; }
9462	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
9463	private void updateLayoutParams ( View currentHeader ) { MarginLayoutParams params = ( MarginLayoutParams ) currentHeader . getLayoutParams ( ) ; matchMarginsToPadding ( params ) ; }
9492	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augs ) throws XNIException { }
9495	public static final Polygon flip ( Polygon polygon , Vector2 axis ) { return Geometry . flip ( polygon , axis , _NULL ) ; }
9497	void addAttributeValue ( String attribute , String value ) { if ( attribute . equals ( OMA_TYPE ) ) { mTypes . add ( value ) ; } else { mDescription . put ( attribute , value ) ; } }
9508	public boolean merge_stringbuffer ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR merge - stringbuffer _CHAR ) ; }
9509	private static Set < URL > urlsToReflect ( List < String > packagePrefixes ) { List < String > prefixesWithFlags = ImmutableList . < String > builder ( ) . addAll ( packagePrefixes ) . add ( _CHAR org . flagz _CHAR ) . build ( ) ; return prefixesWithFlags . stream ( ) . flatMap ( _NULL ) . collect ( Collectors . toSet ( ) ) ; }
9514	public static String toString ( InputStream input , String encoding ) throws IOException { return toString ( input , Charsets . toCharset ( encoding ) ) ; }
9516	public static String encodeObject ( java . io . Serializable serializableObject ) throws java . io . IOException { return encodeObject ( serializableObject , NO_OPTIONS ) ; }
9522	public void resetCustom ( ) { mIsLegendCustom = _BOOL ; }
9534	public static boolean equals ( String filename1 , String filename2 ) { return equals ( filename1 , filename2 , _BOOL , IOCase . SENSITIVE ) ; }
9556	public String toString ( ) { try { return _CHAR + join ( _CHAR , _CHAR ) + _CHAR ; } catch ( Exception e ) { return _NULL ; } }
9557	private static long computeVisibilitySortingValue ( float area , float orderSortingValue , float stackVisibility ) { return ( long ) ( area * stackVisibility - orderSortingValue ) ; }
9563	@ Override public Plane copySelf ( ) { return new Plane ( this ) ; }
9577	public boolean interiorIntersects ( S2Cap other ) { return ! complement ( ) . contains ( other ) ; }
9593	public static boolean isExpressionNeedsToResolved ( Expression rightExp , boolean isIncludeFilter ) { if ( ! isIncludeFilter && rightExp instanceof LiteralExpression && ( DataType . NULL == ( ( LiteralExpression ) rightExp ) . getLiteralExpDataType ( ) ) ) { return _BOOL ; } for ( Expression child : rightExp . getChildren ( ) ) { if ( isExpressionNeedsToResolved ( child , isIncludeFilter ) ) { return _BOOL ; } } return _BOOL ; }
9594	public void removeLocators ( LookupLocator [ ] locators ) { locatorDisc . removeLocators ( locators ) ; }
9632	public boolean isBigEndian ( ) { return bigEndian ; }
9638	private Object writeReplace ( ) throws ObjectStreamException { return new BigDecimal ( value ) ; }
9664	public static void writeLines ( File file , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , _NULL , lines , _NULL , append ) ; }
9671	@ Override public void endGeneralEntity ( String name , Augmentations augs ) throws XNIException { }
9673	public T walkInOptimizedOrder ( final FieldVectorPreservingVisitor < T > visitor ) { return walkInDefaultOrder ( visitor ) ; }
9682	public Map . Entry < K , V > pollFirstEntry ( ) { return doRemoveFirstEntry ( ) ; }
9686	public BaseFlag < T > withListener ( Consumer < T > predicate ) { listeners . add ( predicate ) ; return this ; }
9689	public boolean chiSquareTest ( final long [ ] [ ] counts , final double alpha ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { if ( ( alpha <= _NUM ) || ( alpha > _NUM . _NUM ) ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . OUT_OF_BOUND_SIGNIFICANCE_LEVEL , alpha , _NUM , _NUM . _NUM ) ; } return chiSquareTest ( counts ) < alpha ; }
9721	public String formatTime ( long value ) { int timestamps = storage . getTimestampsCount ( ) ; if ( timestamps == _NUM ) return SimpleXYChartUtils . formatTime ( value , value , value ) ; else return SimpleXYChartUtils . formatTime ( value , storage . getTimestamp ( _NUM ) , storage . getTimestamp ( timestamps - _NUM ) ) ; }
9723	public void addUpdateListener ( final BaseListener listener ) { addUpdateListener ( listener , _NULL ) ; }
9737	public String formatPercent ( long value ) { return SimpleXYChartUtils . formatPercent ( value * chartFactor ) ; }
9739	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
9741	@ Override public void startGeneralEntity ( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs ) throws XNIException { }
9743	public Builder maxWidth ( Number maxWidth ) { this . maxWidth = maxWidth ; return this ; }
9744	public T walkInOptimizedOrder ( final FieldVectorChangingVisitor < T > visitor ) { return walkInDefaultOrder ( visitor ) ; }
9763	@ Override protected void restore ( GeneratorAdapter mv , List < Type > args ) { if ( type == Type . VOID_TYPE ) { mv . pop ( ) ; } else { ByteCodeUtils . unbox ( mv , type ) ; } mv . returnValue ( ) ; }
9767	public void erasePurchase ( String sku ) { if ( mPurchaseMap . containsKey ( sku ) ) mPurchaseMap . remove ( sku ) ; }
9790	public static final Token newToken ( int ofKind ) { switch ( ofKind ) { default : return new Token ( ) ; } }
9806	@ Override public void mark ( int readAheadLimit ) throws IOException { fInputStream . mark ( readAheadLimit ) ; }
9807	public V remove ( Object key ) { return backedMap . remove ( key ) ; }
9812	protected AdsGetUploadURLQuery adFormat ( AdsGetUploadURLAdFormat value ) { return unsafeParam ( _CHAR ad_format _CHAR , value ) ; }
9813	public SiteAdminPage createNewPageReusingDialog ( String title , String name , String templateName ) { createPageWindow . createPage ( title , name , templateName ) ; grid . waitForLoaderNotPresent ( ) ; return this ; }
9820	public static InvocationConstraint create ( Collection c ) { try { return reduce ( ( InvocationConstraint [ ] ) c . toArray ( new InvocationConstraint [ c . size ( ) ] ) , _BOOL ) ; } catch ( ArrayStoreException e ) { throw new IllegalArgumentException ( _CHAR element of collection is not an InvocationConstraint _CHAR ) ; } }
9836	public static void logPromoTapsForNeverOpened ( int promoTaps ) { RecordHistogram . recordCountHistogram ( _CHAR Search . ContextualSearchPromoTapsForNeverOpened _CHAR , promoTaps ) ; }
9838	public long optLong ( String key , long defaultValue ) { try { return getLong ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
9840	public void java_lang_reflect_Proxy_defineClass0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { throw new NativeMethodNotSupportedException ( method ) ; }
9845	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
9850	public void putIdentifier ( String idName , Element element ) { if ( element == _NULL ) { removeIdentifier ( idName ) ; return ; } if ( needsSyncData ( ) ) { synchronizeData ( ) ; } if ( identifiers == _NULL ) { identifiers = new Hashtable ( ) ; } identifiers . put ( idName , element ) ; }
9852	public static boolean isUrlString ( String s ) { return s . startsWith ( _CHAR http : / _CHAR ) || s . startsWith ( _CHAR ftp : / _CHAR ) || s . startsWith ( _CHAR file : / _CHAR ) ; }
9858	static Object readRequestStack ( String name , HttpServletRequest request , Map < String , Object > context , Environment env ) throws TemplateModelException { return ContextFtlUtil . readRequestStack ( name , _BOOL , request , context , env ) ; }
9870	public void sendMissionInitDirectToServer ( MissionInit minit ) { this . stateMachine . setMissionInit ( minit ) ; }
9876	public static boolean isServletInitStatusReached ( ) { return servletInitStatusReached ; }
9882	public boolean ignore_wrong_staticness ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR ignore - wrong - staticness _CHAR ) ; }
9884	@ Override public void disconnect ( ) throws AWSIotException { super . disconnect ( ) ; }
9888	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
9890	public int pointsToSetHashCode ( ) { final int PRIME = _NUM ; int result = _NUM ; for ( AllocAndContext elem : this ) { result = PRIME * result + elem . hashCode ( ) ; } return result ; }
9892	public V value ( ) { return _map . _values [ _index ] ; }
9898	public void incrementIterationCount ( ) throws MathIllegalStateException { iterations . increment ( ) ; }
9923	default String resourceRelation ( IRI dataPropertyIRI ) { return _CHAR has - _CHAR + dataPropertyIRI . getShortForm ( ) ; }
9931	public boolean transmissionPolicyDefined ( ) { return replTransmissionPolicies != _NULL ; }
9934	@ Override protected CombinedConfiguration createResultConfiguration ( ) throws ConfigurationException { CombinedConfiguration result = super . createResultConfiguration ( ) ; if ( parentConfigurationWhileParsing != _NULL ) { result . addConfiguration ( parentConfigurationWhileParsing ) ; } return result ; }
9936	void prepareDisplayTaskFor ( ImageAware imageAware , String memoryCacheKey ) { cacheKeysForImageAwares . put ( imageAware . getId ( ) , memoryCacheKey ) ; }
9949	public boolean canContain ( ElementType other ) { return ( theModel & other . theMemberOf ) != _NUM ; }
9979	public boolean optBoolean ( String key ) { return optBoolean ( key , _BOOL ) ; }
9983	public ReplicationClientFactory usingApiKey ( String apiKey ) { if ( Objects . equal ( _apiKey , apiKey ) ) { return this ; } return new ReplicationClientFactory ( _jerseyClient , apiKey ) ; }
9995	@ Override public void startElement ( String uri , String localName , String qName , Attributes atts ) throws SAXException { allowXMLCatalogPI = _BOOL ; super . startElement ( uri , localName , qName , atts ) ; }
10003	public static char [ ] toCharArray ( InputStream is , Charset encoding ) throws IOException { CharArrayWriter output = new CharArrayWriter ( ) ; copy ( is , output , encoding ) ; return output . toCharArray ( ) ; }
10026	public boolean removeEntry ( float xPos , int dataSetIndex ) { if ( dataSetIndex >= mDataSets . size ( ) ) return _BOOL ; IDataSet dataSet = getDataSetByIndex ( dataSetIndex ) ; Entry e = dataSet . getEntryForXPos ( xPos ) ; return e != _NULL && removeEntry ( e , dataSetIndex ) ; }
10045	@ NotNull GetPersonGroupTrainingStatusAction personGroupTrainingStatus ( @ NotNull String personGroupId ) { Validation . validate ( personGroupId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR personGroupId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new GetPersonGroupTrainingStatusAction ( cognitiveContext , personGroupId ) ; }
10060	private Unit insertCloneAfter ( Chain < Unit > unitChain , Unit node , Unit toClone ) { Unit clone = ( Unit ) toClone . clone ( ) ; body . getUnits ( ) . insertAfter ( clone , node ) ; return clone ; }
10067	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
10069	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
10073	public void addHeaderView ( View v ) { addHeaderView ( v , _NULL , _BOOL ) ; }
10077	public LeafNode locateLeaf ( DataType key , boolean findFirst ) { throw new BPlusTreeException ( _CHAR Not Implemented _CHAR ) ; }
10079	@ Override @ ObjectiveCName ( _CHAR onDestroyPending : _CHAR ) public void onDestroyPending ( final String recordName ) { onRecordDiscarded ( recordName ) ; }
10081	public double chiSquareTest ( final double [ ] expected , final long [ ] observed ) throws MathIllegalArgumentException , MathIllegalStateException { final ChiSquaredDistribution distribution = new ChiSquaredDistribution ( expected . length - _NUM . _NUM ) ; return _NUM . _NUM - distribution . cumulativeProbability ( chiSquare ( expected , observed ) ) ; }
10095	public String render ( String combinedName , boolean asString ) throws GeneralException , IOException , SAXException , ParserConfigurationException { String resourceName = ScreenFactory . getResourceNameFromCombined ( combinedName ) ; String screenName = ScreenFactory . getScreenNameFromCombined ( combinedName ) ; return this . render ( resourceName , screenName , asString ) ; }
10110	public boolean insert_redundant_casts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR insert - redundant - casts _CHAR ) ; }
10124	public static boolean isAccountClass ( GenericValue glAccount , String glAccountClassId ) throws GenericEntityException { if ( glAccount == _NULL ) { return _BOOL ; } GenericValue glAccountClass = glAccount . getRelatedOne ( _CHAR GlAccountClass _CHAR , _BOOL ) ; if ( glAccountClass == _NULL ) { throw new GenericEntityException ( _CHAR Can not find GlAccountClass for glAccountId '' + glAccount . getString ( _CHAR glAccountId _CHAR ) ) ; } return isAccountClassClass ( glAccountClass , glAccountClassId ) ; }
10135	public synchronized long fileCount ( ) { return fileCount ; }
10142	public void reset ( ) { npoints = _NUM ; bounds = _NULL ; path = new GeneralPath ( ) ; closedPath = _NULL ; }
10148	public static boolean makeDirs ( String filePath ) { String folderName = getFolderName ( filePath ) ; if ( StringUtil . isEmpty ( folderName ) ) { return _BOOL ; } File folder = new File ( folderName ) ; return ( folder . exists ( ) && folder . isDirectory ( ) ) ? _BOOL : folder . mkdirs ( ) ; }
10152	public PlacesCheckinQuery services ( List < PlacesCheckinService > value ) { return unsafeParam ( _CHAR services _CHAR , value ) ; }
10184	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = StringCodingUtils . getBytes ( input , Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
10192	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
10204	@ Override public void mark ( int readAheadLimit ) throws IOException { fInputStream . mark ( readAheadLimit ) ; }
10207	@ Provides @ Singleton @ SystemTablePlacement String provideSystemTablePlacement ( DataStoreConfiguration config ) { return config . getSystemTablePlacement ( ) ; }
10212	private LookupLocator findRegFromProxy ( ServiceRegistrar proxy ) { Iterator iter = discoveredLocators . iterator ( ) ; while ( iter . hasNext ( ) ) { LocatorReg reg = ( LocatorReg ) iter . next ( ) ; if ( ( reg . proxy ) . equals ( proxy ) ) return reg . l ; } return _NULL ; }
10244	public boolean hasDropShadow ( ) { return myShadowType != ShadowType . NONE ; }
10253	public void insertAudio ( String inputtype , String locale , String voice , String inputtext , byte [ ] audio ) throws SQLException { insertAudio ( inputtype , locale , voice , _NULL , _NULL , _NULL , inputtext , audio ) ; }
10255	@ Override public String onDeviceReport ( ) { return super . onDeviceReport ( ) ; }
10259	public static boolean isPhoneNumber ( String str ) { return isRegexMatch ( str , REGEX_PHONE_NUMBER ) ; }
10278	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_protect_PROTECT_SKILL_A_to_B ( int num0 , String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillcaster , skillname ) ; }
10294	public static String decode ( String str ) throws RuntimeException { byte [ ] bytes ; try { bytes = str . getBytes ( _CHAR ASCII _CHAR ) ; } catch ( UnsupportedEncodingException e ) { throw new RuntimeException ( _CHAR ASCII is not supported ! _CHAR , e ) ; } byte [ ] decoded = decode ( bytes ) ; return new String ( decoded ) ; }
10313	public static void showManagedByAdministratorToast ( Context context ) { Toast . makeText ( context , context . getString ( R . string . managed_by_your_administrator ) , Toast . LENGTH_LONG ) . show ( ) ; }
10319	private static boolean isDup ( Entry [ ] attrs , int index ) { Entry set = attrs [ index ] ; for ( int i = index ; -- i >= _NUM ; ) { if ( equal ( set , attrs [ i ] ) ) return _BOOL ; } return _BOOL ; }
10322	public < K , C > ColumnFamilyQuery < K , C > prepareQuery ( ColumnFamily < K , C > cf , ConsistencyLevel consistency ) { return _astyanaxKeyspace . prepareQuery ( cf ) . setConsistencyLevel ( clamp ( consistency ) ) ; }
10324	public static List < String > readLines ( InputStream input , String encoding ) throws IOException { return readLines ( input , Charsets . toCharset ( encoding ) ) ; }
10325	@ SubscribeEvent public void onClientTick ( TickEvent . ClientTickEvent ev ) { if ( ev != _NULL && ev . phase == Phase . START ) { for ( InternalKey binding : this . additionalKeys ) { if ( binding . isKeyDown ( ) ) { binding . onKeyDown ( ) ; } if ( binding . isPressed ( ) ) { binding . onPressed ( ) ; } } } }
10337	public static float toFloatBits ( int r , int g , int b , int a ) { int color = ( a << _NUM ) | ( b << _NUM ) | ( g << _NUM ) | r ; float floatColor = NumberUtils . intToFloatColor ( color ) ; return floatColor ; }
10347	private void handleFinishedH ( boolean reschedule ) { switch ( mVerb ) { case VERB_EXECUTING : case VERB_STOPPING : closeAndCleanupJobH ( reschedule ) ; break ; default : break ; } }
10361	private int inRange ( int number , int min , int max ) { int result ; result = Math . min ( number , max ) ; result = Math . max ( result , min ) ; return result ; }
10375	protected void processChars ( char [ ] chars , int offset , int length ) { }
10376	public static SpaceURL verifyURL ( String url ) throws MalformedURLException { return parseURL ( url , _NULL ) ; }
10395	public void createUnpartitionedStream ( final String streamName ) throws IOException { namespace . createLog ( streamName ) ; }
10413	public boolean compare_type_assigners ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR compare - type - assigners _CHAR ) ; }
10436	public static boolean isUpdate ( int mod ) { return ( mod & NOTIFY_UPDATE ) != _NUM ; }
10462	public boolean types_for_sites ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR types - for - sites '' ) ; }
10471	public Builder calculateSortedRank ( String newColumnName , String sortOnColumn , WritableComparator comparator ) { actionList . add ( new DataAction ( new CalculateSortedRank ( newColumnName , sortOnColumn , comparator ) ) ) ; return this ; }
10488	public static char [ ] toCharArray ( InputStream is ) throws IOException { return toCharArray ( is , Charset . defaultCharset ( ) ) ; }
10494	@ Override public void ignorableWhitespace ( XMLString text , Augmentations augs ) throws XNIException { if ( fAnnotationDepth != - _NUM ) { schemaDOM . characters ( text ) ; } }
10496	public void contract ( ) { final double [ ] tempArray = new double [ numElements + _NUM ] ; System . arraycopy ( internalArray , startIndex , tempArray , _NUM , numElements ) ; internalArray = tempArray ; startIndex = _NUM ; }
10534	private void indexSplitDoc ( ) { try { _indexSplitDoc ( ) ; } finally { shardState . indexState . globalState . indexingJobsRunning . release ( ) ; semaphore . release ( ) ; ctx . inFlightChunks . arriveAndDeregister ( ) ; } }
10553	public AppsGetCatalogQuery extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
10559	public boolean isUpdateRequired ( ) { return this . updateRequired ; }
10563	public boolean optBoolean ( String key , boolean defaultValue ) { try { return this . getBoolean ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
10569	public final void addDescription ( final Object pValue , final String pDescription ) { if ( pValue != _NULL ) { this . descriptions . put ( pValue , pDescription ) ; } }
10575	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; if ( obj instanceof MarshalledInstance ) { MarshalledInstance other = ( MarshalledInstance ) obj ; if ( hash != other . hash ) return _BOOL ; return Arrays . equals ( objBytes , other . objBytes ) ; } return _BOOL ; }
10593	@ Override public void appendData ( String arg ) throws DOMException { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Method not supported _CHAR ) ; }
10594	public void endObjectName ( O object , String name ) { }
10605	private boolean focusCenter ( ) { return ! showGuidelines ( ) ; }
10616	@ Override protected boolean scanForDoctypeHook ( ) throws IOException , XNIException { if ( fEntityScanner . skipString ( _CHAR DOCTYPE _CHAR ) ) { setScannerState ( SCANNER_STATE_DOCTYPE ) ; return _BOOL ; } return _BOOL ; }
10629	public void removeToken ( int i ) { tokens . remove ( i ) ; saveTokenChanges ( ) ; }
10666	protected boolean sameBaseURIAsIncludeParent ( ) { String parentBaseURI = getIncludeParentBaseURI ( ) ; String baseURI = fCurrentBaseURI . getExpandedSystemId ( ) ; return parentBaseURI != _NULL && parentBaseURI . equals ( baseURI ) ; }
10671	public Querier encrypt ( ) throws InterruptedException , PIRException { int numThreads = SystemConfiguration . getIntProperty ( _CHAR numThreads _CHAR , _NUM ) ; return encrypt ( numThreads ) ; }
10674	@ Override public int available ( ) throws IOException { int av = super . available ( ) ; if ( av <= _NUM ) return av ; return _NUM * av / inputChannels ; }
10678	@ Override public double nextNormalizedDouble ( ) { return SQRT3 * ( _NUM * generator . nextDouble ( ) - _NUM . _NUM ) ; }
10685	public < R > R executeTransactionalCommand ( final TransactionalCommand < R > command ) throws MithraBusinessException { return this . executeTransactionalCommand ( command , this . defaultTransactionStyle ) ; }
10691	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = input . getBytes ( Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
10698	public double polynomialSquaredDistance ( Polynomial other ) { return polynomialSquaredDistance ( this . coeffs , other . coeffs ) ; }
10713	public long optLong ( String key ) { return this . optLong ( key , _NUM ) ; }
10719	public IntIterator rangeSortedBy ( String field , int lo , int hi , int indexType ) { Index index = getIndex ( field , int . class , _BOOL ) ; return index . rows ( lo , hi , indexType ) ; }
10722	public static byte [ ] toByteArray ( Reader input ) throws IOException { return toByteArray ( input , Charset . defaultCharset ( ) ) ; }
10725	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
10726	public V value ( ) { return _map . _values [ _index ] ; }
10735	public static String fromChar ( int value ) { if ( value > _NUM ) return _NULL ; String name ; initialize ( ) ; name = ( String ) _byChar . get ( new Integer ( value ) ) ; return name ; }
10760	@ Override public void ignorableWhitespace ( XMLString text , Augmentations augs ) throws XNIException { handleIgnorableWhitespace ( text ) ; if ( fDocumentHandler != _NULL ) { fDocumentHandler . ignorableWhitespace ( text , augs ) ; } }
10761	public BoardEditCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
10765	@ Override public int hash ( char [ ] buffer , int offset , int length ) { return fSymbolTable . hash ( buffer , offset , length ) ; }
10766	public void pushTemplateFolder ( @ NotNull File folder ) { myLastTemplateFolders . push ( folder ) ; }
10776	public static List < String > readLines ( InputStream input ) throws IOException { return readLines ( input , Charset . defaultCharset ( ) ) ; }
10783	public String toString ( ) { try { return this . toString ( _NUM ) ; } catch ( Exception e ) { return _NULL ; } }
10793	public static byte sign ( final byte x ) { return ( x == ZB ) ? ZB : ( x > ZB ) ? PB : NB ; }
10794	private static String extractTagSource ( Map < String , String > tag_map ) { return Optional . ofNullable ( tag_map . remove ( _CHAR source _CHAR ) ) . orElseGet ( _NULL ) ; }
10798	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL && ! fOnlyPassPrefixMappingEvents ) { fDocumentHandler . processingInstruction ( target , data , augs ) ; } }
10821	public static ToolbarTapTarget forToolbarOverflow ( Toolbar toolbar , CharSequence title ) { return forToolbarOverflow ( toolbar , title , _NULL ) ; }
10825	@ Override protected FlowSet entryInitialFlow ( ) { return emptySet . clone ( ) ; }
10840	public static void give ( IDimensionSlice idc , TransformData < Any > target , int tickTime , Interpolation interp ) { BasicTransformOrder order = new BasicTransformOrder ( idc . getTransform ( ) . copy ( ) . elide ( ) , target , _NUM . _NUM / tickTime , interp ) ; idc . giveOrder ( order ) ; }
10877	@ Override public void startGeneralEntity ( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL && ! fOnlyPassPrefixMappingEvents ) { fDocumentHandler . startGeneralEntity ( name , identifier , encoding , augs ) ; } }
10880	public TextMessage createTextMessage ( ) throws JMSException { return createTextMessage ( _NULL ) ; }
10883	protected boolean isEnabledForAddedResources ( ) { return _BOOL ; }
10892	public static < E > Stream < Map . Entry < E , E >> crossProductNoDoubles ( Stream < E > stream ) { Objects . requireNonNull ( stream ) ; CrossProductOrderedSpliterator < E > spliterator = CrossProductOrderedSpliterator . noDoubles ( stream . spliterator ( ) ) ; return StreamSupport . stream ( spliterator , stream . isParallel ( ) ) . onClose ( _NULL ) ; }
10910	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
10920	public double deriv ( ) { return deriv ; }
10931	public boolean merge_stringbuffer ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR merge - stringbuffer _CHAR ) ; }
10945	public < T > T inject ( Class < T > clazz , WebElement scope ) { return inject ( clazz , scope , new FramePath ( ) ) ; }
10967	@ Override public void close ( ) throws IOException { }
10999	public View detachViewAndClearPreInfo ( ) { View original = mHost ; if ( mBorder != _NULL ) { mBorder . detachView ( ) ; } mPreRealLeft = _NUM ; mPreRealWidth = _NUM ; mPreRealHeight = _NUM ; mPreRealTop = _NUM ; return original ; }
11017	public final char yycharat ( int pos ) { return zzBuffer . charAt ( zzStartRead + pos ) ; }
11019	@ Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; LatLng sydney = new LatLng ( - _NUM , _NUM ) ; mMap . addMarker ( new MarkerOptions ( ) . position ( sydney ) . title ( _CHAR Marker in Sydney _CHAR ) ) ; mMap . moveCamera ( CameraUpdateFactory . newLatLng ( sydney ) ) ; }
11028	private void inflateEmptyView ( ) { emptyView . removeAllViewsInLayout ( ) ; LayoutInflater . from ( mContext ) . inflate ( mEmptyLayout , emptyView ) ; if ( mEmptyLayout == R . layout . layout_empty ) { textEmpty = ( TextView ) emptyView . findViewById ( R . id . text_empty ) ; inflateEmptyText ( ) ; inflateEmptyTextColor ( ) ; } }
11030	public boolean notmainentry ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR notmainentry _CHAR ) ; }
11037	protected synchronized String nextCnxKey ( ) { if ( connectionsCounter == Integer . MAX_VALUE ) connectionsCounter = _NUM ; connectionsCounter ++ ; int randLong = random . nextInt ( Integer . MAX_VALUE ) ; return connectionsCounter + ( randLong + _CHAR _ _CHAR + ID_SUFFIX ) ; }
11039	public static void writeVInt ( DataOutput stream , int i ) throws IOException { writeVLong ( stream , i ) ; }
11041	@ NotNull public AddFaceToPersonAction addFaceToPerson ( @ NotNull String personGroupId , @ NotNull String personId , @ Nullable String userData , @ NotNull InputStream imageInputStream ) { return new AddFaceToPersonAction ( cognitiveContext , personGroupId , personId , userData , imageInputStream ) ; }
11042	public DynamicTemplateParameterContext addParameter ( String paramName , String paramValue , boolean deleteOnExit ) { return addParameter ( paramName , paramValue , deleteOnExit , ContextInfo . EMPTY ) ; }
11043	public int jdkver ( ) { return soot . PhaseOptions . getInt ( options , _CHAR jdkver _CHAR ) ; }
11057	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
11062	public void cancel ( Lease lease ) throws UnknownLeaseException , RemoteException { remove ( lease ) ; lease . cancel ( ) ; }
11064	@ Deprecated public static boolean useExactLoginLocation ( ) { return server . useExactLoginLocation ( ) ; }
11069	public boolean insert_null_checks ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR insert - _NULL - checks _CHAR ) ; }
11082	public boolean empties_as_allocs ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR empties - as - allocs _CHAR ) ; }
11110	public void commit ( ) { for ( TransactionLifecycleListener l : lifecycleListeners ) l . onTxCommit ( this ) ; if ( logger . isLoggable ( Level . FINE ) ) logger . fine ( _CHAR transaction _CHAR + txNum + _CHAR committed _CHAR ) ; }
11141	public void eliminatePhiNodes ( ) { if ( phi . doEliminatePhiNodes ( ) ) makeUniqueLocalNames ( ) ; }
11161	private Observable < JobRow > buildUpdateRowChain ( Observable < JobRow > jobRowStoredNotification , Observable < String > preResponseStoredNotification , Observable < PreResponse > preResponseEmitter , JobRow jobMetadata ) { return preResponseEmitter . zipWith ( jobRowStoredNotification , _NULL ) . zipWith ( preResponseStoredNotification , _NULL ) . map ( _NULL ) . map ( _NULL ) . map ( _NULL ) . flatMap ( _NULL ) ; }
11201	public static double factorialDouble ( final int n ) { if ( n < _NUM ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR must have n >= _NUM for n ! , got n = { _NUM } _CHAR , n ) ; } if ( n < _NUM ) { return factorial ( n ) ; } return Math . floor ( Math . exp ( factorialLog ( n ) ) + _NUM . _NUM ) ; }
11224	@ Override public void onTextChanged ( CharSequence s , int start , int before , int count ) { isSendVisible = s != _NULL && s . length ( ) > _NUM ; setSendBtn ( ) ; if ( isSendVisible ) { chatView . sending ( ) ; } }
11225	public boolean addSiblingAfter ( AXmlNode sibling ) { if ( this . parent != _NULL ) { this . parent . addChild ( sibling , this . parent . getChildren ( ) . indexOf ( this ) + _NUM ) ; return _BOOL ; } else { return _BOOL ; } }
11228	public Boolean shouldAllowRequest ( String url ) { return _NULL ; }
11229	public static void encode ( InputStream inputStream , OutputStream outputStream , int wrapAt ) throws IOException { Base64OutputStream aux = new Base64OutputStream ( outputStream , wrapAt ) ; copy ( inputStream , aux ) ; aux . commit ( ) ; }
11231	public DoubleDataSource apply ( DoubleDataSource signal ) { return new BufferedDoubleDataSource ( signal , new Processor ( a ) ) ; }
11240	public GroupFacesAction groupFaces ( List < String > faceIds ) { Validation . validateArray ( faceIds , _NUM , _NUM , new ParameterValidationException ( _CHAR faceIds _CHAR , _CHAR length must be between _NUM & _NUM _CHAR ) ) ; return new GroupFacesAction ( cognitiveContext , faceIds ) ; }
11246	public static boolean isDark ( @ NonNull Bitmap bitmap ) { return isDark ( bitmap , bitmap . getWidth ( ) / _NUM , bitmap . getHeight ( ) / _NUM ) ; }
11252	public void print ( List < BOMNode > arr , int initialDepth ) { print ( arr , initialDepth , _BOOL ) ; }
11260	public StatelessHibernateSpaceDataSourceConfigurer useScrollableResultSet ( boolean useScrollableResultSet ) { this . useScrollableResultSet = useScrollableResultSet ; return this ; }
11272	@ Nullable @ Override protected JComponent createSouthPanel ( ) { JPanel southPanel = ( JPanel ) super . createSouthPanel ( ) ; assert southPanel != _NULL ; southPanel . setBorder ( new EmptyBorder ( WizardConstants . STUDIO_WIZARD_INSETS ) ) ; return southPanel ; }
11276	public boolean global_nodes_in_natives ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR global - nodes - in - natives _CHAR ) ; }
11282	public synchronized boolean unexport ( boolean force ) { if ( ! used ) { throw new IllegalStateException ( _CHAR an object has not been exported via this exporter _CHAR ) ; } return underlyingExporter . unexport ( force ) ; }
11293	public static boolean isXML11Valid ( int c ) { return ( c < _NUM && ( XML11CHARS [ c ] & MASK_XML11_VALID ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
11308	@ Override public void redo ( Transaction tx ) { Buffer buff = tx . bufferMgr ( ) . pin ( blk ) ; buff . setVal ( offset , newVal , tx . getTransactionNumber ( ) , _NULL ) ; tx . bufferMgr ( ) . unpin ( buff ) ; }
11312	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
11313	public static String toString ( byte [ ] input , String encoding ) throws IOException { return new String ( input , encoding ) ; }
11332	private boolean superSetOf ( AllocAndContextSet onePts , final AllocAndContextSet otherPts ) { return onePts . containsAll ( otherPts ) ; }
11339	public < T > List < T > apply ( Iterable < T > resources ) { InMemoryEvaluator eval = new InMemoryEvaluator ( ) ; return eval . eval ( resources , this ) ; }
11349	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
11355	public boolean profiling ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR profiling _CHAR ) ; }
11360	protected boolean baseMatchesStrict ( final Value baseValue , Abstraction source ) { if ( ! baseMatches ( baseValue , source ) ) return _BOOL ; if ( baseValue instanceof Local ) return source . getAccessPath ( ) . isLocal ( ) ; else if ( baseValue instanceof InstanceFieldRef || baseValue instanceof StaticFieldRef ) return source . getAccessPath ( ) . getFieldCount ( ) == _NUM ; throw new RuntimeException ( _CHAR Unexpected left side _CHAR ) ; }
11379	@ Override public void beforeFirst ( ) { currentScan = _NULL ; s1 . beforeFirst ( ) ; hasMore1 = s1 . next ( ) ; if ( s2 != _NULL ) { s2 . beforeFirst ( ) ; hasMore2 = s2 . next ( ) ; } }
11406	public < T2 > Pattern2 < T , T2 > and ( Observable < T2 > right ) { return JoinPatterns . and ( o , right ) ; }
11422	public static < T extends RealFieldElement < T >> T angle ( final Vector3D v1 , final FieldVector3D < T > v2 ) throws MathRuntimeException { return angle ( v2 , v1 ) ; }
11425	public static String guessExtensionFromMimeType ( String mimeType ) { if ( mimeType == _NULL || mimeType . isEmpty ( ) ) { return _NULL ; } return mimeTypeToExtensionMap . get ( mimeType ) ; }
11439	@ Override public void generateReport ( ) { this . cfg = new Configuration ( ) ; try { configureFreeMarker ( ) ; getTemplate ( ) ; merge ( ) ; } catch ( IOException e ) { LOG . error ( _CHAR Exception when setting template directory _CHAR , e ) ; } }
11440	public static String stripFileProtocol ( String uriString ) { if ( uriString . startsWith ( _CHAR file : // '' ) ) { return Uri . parse ( uriString ) . getPath ( ) ; } return uriString ; }
11448	@ Override public void draw ( Canvas canvas ) { canvas . drawCircle ( mRadius , mRadius , mRadius , mBackground ) ; canvas . drawText ( mText , mRadius , mRadius - ( ( mTextPaint . descent ( ) + mTextPaint . ascent ( ) ) / _NUM ) , mTextPaint ) ; }
11461	private boolean hasLegalRootContainer ( Node node ) { if ( node == _NULL ) return _BOOL ; Node rootContainer = getRootContainer ( node ) ; switch ( rootContainer . getNodeType ( ) ) { case Node . ATTRIBUTE_NODE : case Node . DOCUMENT_NODE : case Node . DOCUMENT_FRAGMENT_NODE : return _BOOL ; } return _BOOL ; }
11471	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException { setHints ( _NULL ) ; return decodeInternal ( image ) ; }
11483	public static final String readString ( byte [ ] bytes , int offset , int length , String charset ) throws IOException { return readString ( bytes , _NUM , bytes . length , Charset . forName ( charset ) ) ; }
11500	public void stateChanged ( ChangeEvent event ) { if ( panelFont != _NULL ) { int scroll = charMap4 . getGridScroll ( ) . getValue ( ) ; int newCorner = scroll * panelColumns ; if ( newCorner != cornerIndex ) { cornerIndex = newCorner ; this . repaint ( ) ; } } }
11509	public void notifyVerticalEdgeReached ( int startY , int finalY , int overY ) { mScrollerY . notifyEdgeReached ( startY , finalY , overY ) ; }
11515	public static void updateBoolean ( VisualItem item , String field , boolean b ) { item . setBoolean ( getStartField ( field ) , item . getBoolean ( field ) ) ; item . setBoolean ( field , b ) ; item . setBoolean ( getEndField ( field ) , b ) ; }
11521	public boolean naive ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR naive _CHAR ) ; }
11523	public DynamicTemplateParameterContext addParameter ( DynamicContextParameters param , String paramValue , boolean deleteOnExit ) { return addParameter ( param , paramValue , deleteOnExit , ContextInfo . EMPTY ) ; }
11544	public boolean simulate_natives ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simulate - natives _CHAR ) ; }
11547	public static ItemStack sanitize ( ItemStack stack ) { if ( stack != _NULL ) { if ( stack . hasTagCompound ( ) && stack . getTagCompound ( ) . hasKey ( DATA_TAG ) ) { stack . getTagCompound ( ) . removeTag ( DATA_TAG ) ; } if ( stack . hasTagCompound ( ) && stack . getTagCompound ( ) . hasNoTags ( ) ) { stack . setTagCompound ( _NULL ) ; } } return stack ; }
11550	private static boolean is32BitJvm ( ) { Integer bits = Integer . getInteger ( _CHAR sun . arch . data . model _CHAR ) ; return bits != _NULL && bits == _NUM ; }
11562	public int indexOf ( Object e , int index ) { Object [ ] elements = getArray ( ) ; return indexOf ( e , elements , index , elements . length ) ; }
11563	@ Override public void onLoadHandler ( Item item ) { if ( item . getItemTemplate ( ) . isKinah ( ) ) { kinahItem = item ; } else { itemStorage . putItem ( item ) ; } }
11583	@ Override public void ignorableWhitespace ( XMLString text , Augmentations augs ) throws XNIException { fAllWhitespace = _BOOL ; }
11586	public boolean use_older_type_assigner ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR use - older - type - assigner _CHAR ) ; }
11592	public void notifyVerticalEdgeReached ( int startY , int finalY , int overY ) { mScrollerY . notifyEdgeReached ( startY , finalY , overY ) ; }
11600	public static final Polygon flipAlongTheXAxis ( Polygon polygon ) { return Geometry . flip ( polygon , Vector2 . X_AXIS , _NULL ) ; }
11603	public void java_lang_Class_getFields0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getLeastArrayObject ( ) ) ; }
11608	public void java_lang_SecurityManager_currentClassLoader0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassLoaderObject ( ) ) ; }
11627	synchronized public void allowCertForProcess ( @ NonNull X509Certificate [ ] chain ) throws KeyStoreException , NoSuchAlgorithmException { for ( X509Certificate cert : chain ) { String alias = cert . getSubjectDN ( ) . getName ( ) ; transientKeyStore . setCertificateEntry ( alias , cert ) ; } initTrustManager ( ) ; }
11631	private boolean _hasNext ( ) { try { if ( _iterator . hasNext ( ) ) return _BOOL ; else while ( _cursor < _listOfIterators . size ( ) ) { _iterator = _listOfIterators . get ( _cursor ++ ) ; if ( _iterator . hasNext ( ) ) return _BOOL ; } return _BOOL ; } catch ( NullPointerException npe ) { if ( _iterator == _NULL ) return _BOOL ; else throw npe ; } }
11637	public V value ( ) { return _map . _values [ _index ] ; }
11644	private void checkFailed ( ) throws WrongMessageDigestException { if ( failed != _NULL ) { WrongMessageDigestException exception = new WrongMessageDigestException ( failed ) ; logger . log ( Levels . FAILED , _CHAR Incorrect message digest _CHAR , exception ) ; throw exception ; } }
11647	public Builder easeLinearity ( Number easeLinearity ) { this . easeLinearity = easeLinearity ; return this ; }
11651	public static void writeStringToFile ( File file , String data , Charset encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
11666	public static String loadFileSetToString ( Set < String > ssFiles ) { StringBuffer sbRes = new StringBuffer ( ) ; for ( String sCurFile : ssFiles ) { sbRes . append ( loadFileToString ( sCurFile ) ) . append ( ( char ) _NUM ) ; } return sbRes . toString ( ) ; }
11692	public static boolean isMemoryOnlySearch ( int mod ) { return Modifiers . contains ( mod , UpdateModifiers . MEMORY_ONLY_SEARCH ) ; }
11720	public T dotProduct ( final Vector3D v ) { return x . linearCombination ( v . getX ( ) , x , v . getY ( ) , y , v . getZ ( ) , z ) ; }
11727	public void writeBoolean ( boolean value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeBoolean ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
11731	protected Object entryInitialFlow ( ) { FlowSet entrySet = ( FlowSet ) emptySet . emptySet ( ) ; entrySet . add ( TopConstant . v ( ) ) ; return entrySet ; }
11732	public static long gymDefense ( final Pokemon p ) { return gymDefense ( p . getPokemonId ( ) , p . getMove1 ( ) , p . getMove2 ( ) , p . getIndividualAttack ( ) , p . getIndividualDefense ( ) , p . getIndividualStamina ( ) ) ; }
11738	@ Override public void reset ( ) throws IOException { fInputStream . reset ( ) ; }
11739	public static String fromInternalForm ( String internalForm ) { if ( internalForm . charAt ( _NUM ) == _CHAR ) return internalForm ; return _CHAR + internalForm + _CHAR ; }
11740	public long backgroundColor ( ) { return mBackgroundColor ; }
11758	public static char [ ] toCharArray ( InputStream is , Charset encoding ) throws IOException { CharArrayWriter output = new CharArrayWriter ( ) ; copy ( is , output , encoding ) ; return output . toCharArray ( ) ; }
11759	public void rebuild ( boolean hasPhiNodes ) { isExtendedSSA = options . extended ( ) ; sbb . transform ( ) ; setSSA ( _BOOL ) ; }
11768	public static < K , R > Observable < R > switchCase ( Callable < ? extends K > caseSelector , Map < ? super K , ? extends ObservableSource < ? extends R >> mapOfCases ) { return switchCase ( caseSelector , mapOfCases , Observable . < R > empty ( ) ) ; }
11771	@ Override public void cleanup ( ) { fEntityManager . closeReaders ( ) ; }
11782	public int equivHashCode ( ) { return ( getUnit ( ) . hashCode ( ) * _NUM ) + ( getValue ( ) . equivHashCode ( ) * _NUM ) ; }
11803	public void step ( int steps , double elapsedTime ) { if ( steps <= _NUM ) return ; if ( elapsedTime <= _NUM . _NUM ) return ; for ( int i = _NUM ; i < steps ; i ++ ) { this . step . update ( elapsedTime ) ; this . step ( ) ; } }
11840	public static void main ( String [ ] args ) throws IOException { IncrementalVisitor . main ( args , VISITOR_BUILDER ) ; }
11847	public synchronized void reloadConfiguration ( ) { properties = _NULL ; finalParameters . clear ( ) ; }
11851	public int passes ( ) { return soot . PhaseOptions . getInt ( options , _CHAR passes _CHAR ) ; }
11878	@ Override public boolean addAll ( @ NonNull Collection < ? extends MODEL > collection ) { return addAll ( getItemCount ( ) , collection ) ; }
11884	public void notifyHorizontalEdgeReached ( int startX , int finalX , int overX ) { mScrollerX . notifyEdgeReached ( startX , finalX , overX ) ; }
11903	public MessagesGetLongPollHistoryQuery maxMsgId ( Integer value ) { return unsafeParam ( _CHAR max_msg_id _CHAR , value ) ; }
11907	public Builder continuousWorld ( Boolean continuousWorld ) { this . continuousWorld = continuousWorld ; return this ; }
11911	public static float [ ] evaluate ( String automaticFileName , String correctFileName ) { List < String > s1 = Arrays . asList ( UTF8FileIO . readLines ( automaticFileName ) ) ; List < String > s2 = Arrays . asList ( UTF8FileIO . readLines ( correctFileName ) ) ; return evaluate ( s1 , s2 ) ; }
11924	public static boolean AM ( int packedTime ) { return packedTime < NOON ; }
11936	public static boolean lowMemoryCondition ( ) { return MaryUtils . availableMemory ( ) < lowMemoryThreshold ( ) ; }
11949	public static String removeExtraSpaces ( String text ) { text = text . replace ( ChineseLanguageConstants . SPACE [ _NUM ] , ChineseLanguageConstants . SPACE [ _NUM ] ) ; text = text . replaceAll ( _CHAR [ \ t \ u000B \ u000C \ u00A0 \ uE5F1 ] + _CHAR , _CHAR _CHAR ) ; text = text . replaceAll ( _CHAR ( ^ + ) | ( + $ ) _CHAR , _CHAR _CHAR ) ; return text ; }
11952	@ Override public Node importNode ( Node source , boolean deep ) throws DOMException { return importNode ( source , deep , _BOOL , _NULL ) ; }
11966	public static void writeLines ( File file , String encoding , Collection < ? > lines ) throws IOException { writeLines ( file , encoding , lines , _NULL , _BOOL ) ; }
11986	public ShapelessRecipe removeIngredient ( int count , MaterialData ingredient ) { return removeIngredient ( count , ingredient . getItemType ( ) , ingredient . getData ( ) ) ; }
11998	public int childPosition ( int level ) { return ( int ) ( id >> > ( _NUM * ( MAX_LEVEL - level ) + _NUM ) ) & _NUM ; }
12000	public synchronized VisualGraph addGraph ( String group , Graph graph ) { return addGraph ( group , graph , _NULL ) ; }
12007	public int valueAt ( int index ) { return mValues [ index ] ; }
12009	public void startTimer ( double durationInMilliseconds ) { startTime = System . nanoTime ( ) ; timeout = startTime + ( long ) ( durationInMilliseconds * _NUM ) ; }
12012	public static < K , R > Flowable < R > switchCase ( Callable < ? extends K > caseSelector , Map < ? super K , ? extends Publisher < ? extends R >> mapOfCases , Scheduler scheduler ) { return switchCase ( caseSelector , mapOfCases , Flowable . < R > empty ( ) . subscribeOn ( scheduler ) ) ; }
12022	@ Override public boolean isUploadLimited ( ) { return isCellularExperimentEnabled ( ) && ! isWiFiOrEthernetNetwork ( ) ; }
12025	private boolean _removeActivity ( Activity a ) { boolean r ; synchronized ( this ) { r = m_activities . remove ( a ) ; if ( r ) { if ( m_activities . size ( ) == _NUM ) { m_nextTime = Long . MAX_VALUE ; } } } if ( r ) { a . setScheduled ( _BOOL ) ; } return r ; }
12032	public Matrix3f multLocal ( Matrix3f mat ) { return mult ( mat , this ) ; }
12042	public DynamicTemplateParameterContext appendParameter ( DynamicContextParameters param , String paramValue , boolean deleteOnExit ) { return appendParameter ( param , paramValue , deleteOnExit , ContextInfo . EMPTY ) ; }
12046	public static InputStream toInputStream ( CharSequence input , String encoding ) throws IOException { return toInputStream ( input , Charsets . toCharset ( encoding ) ) ; }
12056	public static void json ( int level , String msg ) { log ( level , _NUM , _NULL , FMT_JSON , _NULL , _NULL , msg ) ; }
12066	public void reparse ( ) { clear ( ) ; parse ( ) ; }
12067	public Builder serverCiphers ( Collection < String > serverCiphers ) { this . serverCiphers = serverCiphers ; return this ; }
12073	public void start ( String name ) { getTimer ( name ) . start ( ) ; }
12074	public String normalizeText ( String text ) { return text . replaceAll ( _CHAR \\ t _CHAR , _CHAR _CHAR ) . replaceAll ( _CHAR [ ^\\ S \\ n ] + ( \\ n ) _CHAR , _CHAR $ _NUM _CHAR ) . replaceAll ( _CHAR [ ^\\ S \\ n ] _CHAR , _CHAR _CHAR ) ; }
12076	public void addHandler ( String name , Handler handler ) { if ( handlers . containsKey ( name ) ) { throw new IllegalArgumentException ( _CHAR handler \ _CHAR _CHAR + name + _CHAR \ _CHAR is already defined _CHAR ) ; } handlers . put ( name , handler ) ; }
12115	public static Value concreteRef ( Value val ) { if ( val == _NULL ) return _NULL ; if ( val instanceof ConcreteRef ) return val ; return _NULL ; }
12123	@ Override protected void flowThrough ( FlowSet in , Unit node , FlowSet out ) { kill ( in , node , out ) ; gen ( out , node ) ; }
12142	@ Override protected FlowSet newInitialFlow ( ) { return emptySet . clone ( ) ; }
12145	public static void copy ( InputStream input , Writer output ) throws IOException { InputStreamReader in = new InputStreamReader ( input ) ; copy ( in , output ) ; }
12174	public void release ( ) { this . isDown = _BOOL ; }
12189	public static String toString ( byte [ ] input , String encoding ) throws IOException { return new String ( input , Charsets . toCharset ( encoding ) ) ; }
12192	public TrustSource add ( String trustedPemEncodedCAs ) { if ( trustedPemEncodedCAs == _NULL ) { throw new IllegalArgumentException ( _CHAR PEM - encoded trusted CA String can not be _NULL _CHAR ) ; } X509Certificate [ ] trustedCertificates = TrustUtil . readX509CertificatesFromPem ( trustedPemEncodedCAs ) ; return add ( trustedCertificates ) ; }
12195	public int threshold ( ) { return soot . PhaseOptions . getInt ( options , _CHAR threshold _CHAR ) ; }
12196	public MarketEditCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
12197	private void addDimensions ( List < DimensionalObject > dimensions ) { for ( DimensionalObject dim : dimensions ) { addDimension ( dim ) ; } }
12224	public S2LatLngRect intersection ( S2LatLngRect other ) { R1Interval intersectLat = lat . intersection ( other . lat ) ; S1Interval intersectLng = lng . intersection ( other . lng ) ; if ( intersectLat . isEmpty ( ) || intersectLng . isEmpty ( ) ) { return empty ( ) ; } return new S2LatLngRect ( intersectLat , intersectLng ) ; }
12245	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
12274	public static String toString ( InputStream input ) throws IOException { return toString ( input , Charset . defaultCharset ( ) ) ; }
12291	public void encryptWallet ( String password ) throws WalletCallException , IOException , InterruptedException { String response = this . executeCommandAndGetSingleStringResponse ( _CHAR encryptwallet _CHAR , password ) ; System . out . println ( _CHAR Result of wallet encryption is : \ n _CHAR + response ) ; }
12295	public boolean with_rectarray ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - rectarray _CHAR ) ; }
12312	public static boolean booleanValueIndicator ( Object value , boolean defaultValue ) { Boolean res = booleanValueIndicator ( value ) ; return res != _NULL ? res : defaultValue ; }
12315	public void clearBody ( ) throws JMSException { super . clearBody ( ) ; this . dataOut = _NULL ; this . dataIn = _NULL ; this . bytesOut = _NULL ; }
12325	public boolean verbose ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR verbose _CHAR ) ; }
12338	public boolean notmainentry ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR notmainentry _CHAR ) ; }
12370	public boolean ignore_types_for_sccs ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR ignore - types - for - sccs '' ) ; }
12372	@ ObjectiveCName ( _CHAR add : action : name : timeout : _CHAR ) void add ( Topic topic , Actions action , String name , int timeout ) { this . add ( topic , action , name , Event . ACK_TIMEOUT , this , timeout ) ; }
12376	static private void writeAttributes ( Entry [ ] attributes , ObjectOutput out ) throws IOException { out . writeInt ( attributes . length ) ; for ( int i = _NUM ; i < attributes . length ; i ++ ) { out . writeObject ( new MarshalledObject ( attributes [ i ] ) ) ; } }
12377	public int jdkver ( ) { return soot . PhaseOptions . getInt ( options , _CHAR jdkver _CHAR ) ; }
12402	public boolean removeDataSet ( int index ) { if ( index >= mDataSets . size ( ) || index < _NUM ) return _BOOL ; T set = mDataSets . get ( index ) ; return removeDataSet ( set ) ; }
12412	public static JSONObject toJSONObject ( XMLTokener x ) throws JSONException { return ( JSONObject ) parse ( x , _BOOL , _NULL ) ; }
12423	public static File toFile ( URL url ) { if ( url == _NULL || ! _CHAR file _CHAR . equalsIgnoreCase ( url . getProtocol ( ) ) ) { return _NULL ; } else { String filename = url . getFile ( ) . replace ( _CHAR , File . separatorChar ) ; filename = decodeUrl ( filename ) ; return new File ( filename ) ; } }
12427	public boolean isZoomingEnabled ( ) { return zoomingEnabled ; }
12428	public Builder diskCacheExtraOptions ( int maxImageWidthForDiskCache , int maxImageHeightForDiskCache , BitmapProcessor processorForDiskCache ) { this . maxImageWidthForDiskCache = maxImageWidthForDiskCache ; this . maxImageHeightForDiskCache = maxImageHeightForDiskCache ; this . processorForDiskCache = processorForDiskCache ; return this ; }
12436	public static boolean isMultiYear ( int field ) { return ( field == DECADE || field == CENTURY || field == MILLENIUM ) ; }
12438	public DefaultHibernateSpaceSynchronizationEndpointConfigurer useMerge ( boolean useMerge ) { this . useMerge = useMerge ; return this ; }
12439	@ Override public void beforeFirst ( ) { s . beforeFirst ( ) ; isLhsEmpty = ! s . next ( ) ; if ( ! isLhsEmpty ) resetIndex ( ) ; }
12441	public boolean debug ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR debug _CHAR ) ; }
12453	public double [ ] apply ( double [ ] signal ) { return new FIROutput ( new BufferedDoubleDataSource ( signal ) ) . getAllData ( ) ; }
12457	public EntityQuery orderBy ( String ... fields ) { this . orderBy = Arrays . asList ( fields ) ; return this ; }
12463	public static void line ( double x0 , double y0 , double x1 , double y1 ) { offscreen . draw ( new Line2D . Double ( scaleX ( x0 ) , scaleY ( y0 ) , scaleX ( x1 ) , scaleY ( y1 ) ) ) ; draw ( ) ; }
12465	public synchronized long size ( ) { return size ; }
12476	public static byte [ ] toByteArray ( Reader input , String encoding ) throws IOException { return toByteArray ( input , Charsets . toCharset ( encoding ) ) ; }
12479	private boolean isOn ( long flag ) { return ( options & flag ) > _NUM ; }
12491	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
12496	@ Override public void startEffect ( Effect effect ) { Creature effected = effect . getEffected ( ) ; if ( effected instanceof Player ) { effected . setTarget ( _NULL ) ; PacketSendUtility . sendPacket ( ( Player ) effected , new SM_TARGET_SELECTED ( _NULL ) ) ; PacketSendUtility . broadcastPacket ( effected , new SM_TARGET_UPDATE ( ( Player ) effected ) ) ; } }
12500	public void childrenSeparator ( short separator ) throws XNIException { }
12512	@ Override public void reset ( ) throws IOException { }
12529	@ Override public void run ( ) { try { if ( _delay > _NUM ) { fallAsleep ( _delay ) ; } while ( ! isInterrupted ( ) ) { super . run ( ) ; fallAsleep ( ) ; } } catch ( InterruptedException ie ) { interrupt ( ) ; } }
12554	public static double distanceSq ( Vector3D v1 , Vector3D v2 ) { return v1 . distanceSq ( v2 ) ; }
12568	public void checkConstraints ( ) throws IOException { }
12595	private float smoothInput ( float current , float input ) { current = MathUtils . clamp ( current , input - _NUM , input + _NUM ) ; return MathUtils . interpolate ( current , input , _NUM . _NUM ) ; }
12621	static Object createObject ( String factoryId , String fallbackClassName ) throws ConfigurationError { return createObject ( factoryId , _NULL , fallbackClassName ) ; }
12628	@ Override public final int skipBytes ( int n ) throws IOException { return dis . skipBytes ( n ) ; }
12639	@ NotNull public RecognizeDomainSpecificContentInImageAction recognizeDomainSpecificContentInImage ( @ NotNull List < DomainSpecificDetails > model , @ NotNull String imageUrl ) { return new RecognizeDomainSpecificContentInImageAction ( cognitiveContext , model , imageUrl ) ; }
12643	public void cancel ( ) { Message . obtain ( mHandler , MSG_CANCEL_TOAST , this ) . sendToTarget ( ) ; }
12647	public Iterator < JsonElement > iterator ( ) { return elements . iterator ( ) ; }
12659	public void makeUniqueLocalNames ( ) { sbb . makeUniqueLocalNames ( ) ; }
12662	public boolean global_nodes_in_natives ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR global - nodes - in - natives _CHAR ) ; }
12677	private Object writeReplace ( ) throws ObjectStreamException { return new LinkedHashMap < K , V > ( this ) ; }
12680	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
12684	@ Override public int hash ( String symbol ) { return fSymbolTable . hash ( symbol ) ; }
12702	public void rejectDocument ( NGramDocument dDoc , double fLearningRate ) { dDoc . getDocumentGraph ( ) . nullify ( ) ; dDoc . getDocumentHistogram ( ) . nullify ( ) ; if ( this . getDocumentHistogram ( ) . length ( ) > _NUM ) getDocumentHistogram ( ) . mergeHistogram ( dDoc . getDocumentHistogram ( ) , fLearningRate ) ; if ( ! this . getDocumentGraph ( ) . isEmpty ( ) ) this . getDocumentGraph ( ) . mergeGraph ( dDoc . getDocumentGraph ( ) , fLearningRate ) ; }
12723	protected void checkEigenVector ( double [ ] eigenVector , EigenDecomposition ed , double tolerance ) { Assert . assertTrue ( isIncludedColumn ( eigenVector , ed . getV ( ) , tolerance ) ) ; }
12731	@ Override public String toString ( ) { return degrees ( ) + _CHAR d _CHAR ; }
12749	public static < R > Observable < R > ifThen ( BooleanSupplier condition , ObservableSource < ? extends R > then ) { return ifThen ( condition , then , Observable . < R > empty ( ) ) ; }
12754	public boolean pre_jimplify ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR pre - jimplify _CHAR ) ; }
12755	@ Override public void serializeWithType ( HasDruidName value , JsonGenerator jgen , SerializerProvider provider , TypeSerializer typeSer ) throws IOException { typeSer . writeTypePrefixForScalar ( value , jgen ) ; serialize ( value , jgen , provider ) ; typeSer . writeTypeSuffixForScalar ( value , jgen ) ; }
12769	@ Override public int compareTo ( Pair < F , S > o ) { return new DefaultLexicographicPairComparator ( ) . compare ( this , o ) ; }
12778	@ Override public boolean next ( ) { boolean ok = idx . next ( ) ; if ( ok ) { RecordId rid = idx . getDataRecordId ( ) ; ts . moveToRecordId ( rid ) ; } return ok ; }
12788	public static String contextualEncode ( String s , Type t , boolean template ) { return _encode ( s , t , template , _BOOL ) ; }
12808	public AudioInputStream htsMLSAVocoder ( HTSParameterGeneration pdf2par , HMMData htsData ) throws Exception { int audioSize = computeAudioSize ( pdf2par . getMcepPst ( ) , htsData ) ; HTSVocoderDataProducer producer = new HTSVocoderDataProducer ( audioSize , pdf2par , htsData ) ; producer . start ( ) ; return new DDSAudioInputStream ( producer , getHTSAudioFormat ( htsData ) ) ; }
12838	public static < T extends RealFieldElement < T >> T distance1 ( final FieldVector3D < T > v1 , final Vector3D v2 ) { return v1 . distance1 ( v2 ) ; }
12842	public void java_lang_Class_getClassLoader0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassLoaderObject ( ) ) ; }
12847	@ NonNull public static Maybe < LoginResult > login ( @ NonNull final Activity activity ) { checkNotNull ( activity , _CHAR activity == _NULL _CHAR ) ; ReactiveFB . getSessionManager ( ) . setActivity ( activity ) ; return Maybe . create ( new LoginOnSubscribe ( ) ) ; }
12853	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
12859	public DynamicTemplateParameterContext addParameter ( String paramName , String paramValue , ContextInfo contextInfo ) { return addParameter ( paramName , paramValue , _BOOL , contextInfo ) ; }
12872	public static double sumSq ( final double [ ] values , final int begin , final int length ) throws MathIllegalArgumentException { return SUM_OF_SQUARES . evaluate ( values , begin , length ) ; }
12876	public FriendsGetRequestsQueryWithNeedMutual extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
12888	private void pauseModelListNotifications ( ) { ( ( ModelList ) models ) . pauseNotifications ( ) ; }
12889	public boolean isFrequentlyListening ( ) { return frequentlyListening ; }
12892	public static < T > Flowable < T > doWhile ( Publisher < ? extends T > source , BooleanSupplier postCondition ) { ObjectHelper . requireNonNull ( source , _CHAR source is _NULL _CHAR ) ; ObjectHelper . requireNonNull ( postCondition , _CHAR postCondition is _NULL _CHAR ) ; return RxJavaPlugins . onAssembly ( new FlowableWhileDoWhile < T > ( source , AlwaysTrueBooleanSupplier . INSTANCE , postCondition ) ) ; }
12907	public Builder withContentType ( String contentType ) { this . mContentType = contentType ; return this ; }
12942	public float nextFloat ( boolean includeZero , boolean includeOne ) { float d = _NUM . _NUM ; do { d = nextFloat ( ) ; if ( includeOne && nextBoolean ( ) ) d += _NUM . _NUM ; } while ( ( d > _NUM . _NUM ) || ( ! includeZero && d == _NUM . _NUM ) ) ; return d ; }
12950	private void ensureNamespaceExists ( Result result ) { DockerImage image = DockerImage . fromImageName ( result . name ) ; if ( image . getNamespace ( ) == _NULL ) { result . name = String . format ( _CHAR % s / % s _CHAR , DEFAULT_NAMESPACE , image . getRepository ( ) ) ; } }
12953	public static String trimToDummyIdentifier ( String string ) { int dummyIdentifierIndex = string . indexOf ( CompletionUtilCore . DUMMY_IDENTIFIER ) ; if ( dummyIdentifierIndex == - _NUM ) { dummyIdentifierIndex = string . indexOf ( CompletionUtilCore . DUMMY_IDENTIFIER_TRIMMED ) ; } return dummyIdentifierIndex == - _NUM ? string : string . substring ( _NUM , dummyIdentifierIndex ) ; }
12958	public synchronized void reset ( ) { Iterator iter = m_focus . entrySet ( ) . iterator ( ) ; while ( iter . hasNext ( ) ) { Map . Entry entry = ( Map . Entry ) iter . next ( ) ; TupleSet ts = ( TupleSet ) entry . getValue ( ) ; ts . clear ( ) ; } m_visual . clear ( ) ; m_source . clear ( ) ; }
12967	public EntityQuery select ( String ... fields ) { this . fieldsToSelect = UtilMisc . toSetArray ( fields ) ; return this ; }
12999	@ Override public void textDecl ( String version , String encoding , Augmentations augs ) throws XNIException { }
13005	private String buildRemoteName ( String accountName , String remotePath ) { return accountName + remotePath ; }
13013	public boolean isJavaLibraryClass ( ) { if ( name . startsWith ( _CHAR java . '' ) || name . startsWith ( _CHAR sun . '' ) || name . startsWith ( _CHAR javax . '' ) || name . startsWith ( _CHAR com . sun . '' ) || name . startsWith ( _CHAR org . omg . '' ) || name . startsWith ( _CHAR org . xml . '' ) ) return _BOOL ; return _BOOL ; }
13060	public int readBytes ( byte [ ] value ) throws JMSException { return readBytes ( value , value . length ) ; }
13096	public JsonObject add ( String name , float value ) { add ( name , Json . value ( value ) ) ; return this ; }
13105	public MapContext < K , V > standAloneChildStack ( ) { MapContext < K , V > standAloneChild = MapContext . createMapContext ( this ) ; standAloneChild . push ( ) ; return standAloneChild ; }
13107	public boolean pairedTTest ( final double [ ] sample1 , final double [ ] sample2 , final double alpha ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSignificanceLevel ( alpha ) ; return pairedTTest ( sample1 , sample2 ) < alpha ; }
13144	public void ensureCapacity ( int minCapacity ) { if ( table . length < minCapacity ) { int newCapacity = nextPrime ( minCapacity ) ; rehash ( newCapacity ) ; } }
13160	public void onMainActivityStart ( ) { try { TraceEvent . begin ( _CHAR GoogleServicesManager . onMainActivityStart _CHAR ) ; boolean accountsChanged = SigninHelper . checkAndClearAccountsChangedPref ( mContext ) ; mSigninHelper . validateAccountSettings ( accountsChanged ) ; } finally { TraceEvent . end ( _CHAR GoogleServicesManager . onMainActivityStart _CHAR ) ; } }
13170	private static void determineFirstDigit ( StringBuilder resultString , int lgPatternFound ) throws NotFoundException { for ( int d = _NUM ; d < _NUM ; d ++ ) { if ( lgPatternFound == FIRST_DIGIT_ENCODINGS [ d ] ) { resultString . insert ( _NUM , ( char ) ( _CHAR + d ) ) ; return ; } } throw NotFoundException . getNotFoundInstance ( ) ; }
13175	public void initRawSwap ( ArrayList < S2CellId > cellIds ) { this . cellIds = new ArrayList < S2CellId > ( cellIds ) ; cellIds . clear ( ) ; }
13177	@ SuppressWarnings ( _CHAR rawtypes _CHAR ) public Value newBoundVariable ( String name , Class type ) { return new Variable ( name , type ) ; }
13185	public static long duelAbility ( final Pokemon p ) { return duelAbility ( p . getPokemonId ( ) , p . getMove1 ( ) , p . getMove2 ( ) , p . getIndividualAttack ( ) , p . getIndividualDefense ( ) , p . getIndividualStamina ( ) ) ; }
13186	public static File createTempResultFile ( ) throws IOException { File tempResultFile = File . createTempFile ( tempFilePrefix , _CHAR . res _CHAR ) ; tempResultFile . deleteOnExit ( ) ; return tempResultFile ; }
13190	public LinkedList < Diff > diff_main ( String text1 , String text2 ) { return diff_main ( text1 , text2 , _BOOL ) ; }
13192	public AemList removeItem ( int index ) { AemListItem item = getItem ( index ) ; return removeItem ( item ) ; }
13195	public Writer write ( Writer writer ) throws JSONException { return this . write ( writer , _NUM , _NUM ) ; }
13207	public void add ( String property , JsonElement value ) { if ( value == _NULL ) { value = JsonNull . INSTANCE ; } members . put ( property , value ) ; }
13216	public static < T extends RealFieldElement < T >> T distanceInf ( final FieldVector3D < T > v1 , final FieldVector3D < T > v2 ) { return v1 . distanceInf ( v2 ) ; }
13217	public < T > String makeStringValue ( T value ) { return value . toString ( ) ; }
13229	public static String replaceTargetState ( String xliffContent , String state ) { return xliffContent . replaceAll ( _CHAR state =\ _CHAR ( .* ? ) \ _CHAR _CHAR , _CHAR state =\ _CHAR _CHAR + state + _CHAR \ _CHAR _CHAR ) ; }
13232	@ Persist @ SuppressWarnings ( _CHAR unused _CHAR ) private void prepare ( ) { isValid = isValid ( ) ; }
13238	void addAssociatedModelWithoutFK ( String associatedTableName , long associatedId ) { getAssociatedModelsMapWithoutFK ( ) . put ( associatedTableName , associatedId ) ; }
13248	public void showErrorDialog ( final int errorCode , final Activity activity , final int requestCode , final OnCancelListener onCancelListener ) { final Dialog dialog = GoogleApiAvailability . getInstance ( ) . getErrorDialog ( activity , errorCode , requestCode , onCancelListener ) ; if ( dialog != _NULL ) { dialog . show ( ) ; } }
13251	public void shutdown ( final long timeout , final TimeUnit timeUnit ) throws TimeoutException { final long timeOutAt = System . currentTimeMillis ( ) + timeUnit . toMillis ( timeout ) ; while ( hasBacklog ( ) ) { if ( timeout >= _NUM && System . currentTimeMillis ( ) > timeOutAt ) { throw TimeoutException . INSTANCE ; } } halt ( ) ; }
13258	public boolean contains ( double x , double y ) { return _BOOL ; }
13281	public int geom_worklist ( ) { String s = soot . PhaseOptions . getString ( options , _CHAR geom - worklist _CHAR ) ; if ( s . equalsIgnoreCase ( _CHAR PQ _CHAR ) ) return geom_worklist_PQ ; if ( s . equalsIgnoreCase ( _CHAR FIFO _CHAR ) ) return geom_worklist_FIFO ; throw new RuntimeException ( _CHAR Invalid value _CHAR + s + _CHAR of phase option geom - worklist _CHAR ) ; }
13287	@ Override public void onPatchVersionCheckFail ( File patchFile , SharePatchInfo oldPatchInfo , String patchFileVersion , boolean isUpgradePatch ) { TinkerLog . i ( TAG , _CHAR patchReporter : patch version exist . path : % s , version : % s , isUpgrade : % b _CHAR , patchFile . getAbsolutePath ( ) , patchFileVersion , isUpgradePatch ) ; }
13312	public int available ( ) { return _count - _position ; }
13319	public Node item ( int index ) { try { return item ( index , _NULL ) ; } catch ( ParserConfigurationException e ) { throw new RuntimeException ( e ) ; } }
13326	public static double distanceInf ( Vector1D p1 , Vector1D p2 ) { return p1 . distanceInf ( p2 ) ; }
13334	public static char [ ] toCharArray ( Reader input ) throws IOException { CharArrayWriter sw = new CharArrayWriter ( ) ; copy ( input , sw ) ; return sw . toCharArray ( ) ; }
13347	public long skip ( long n ) { if ( _position + n > _count ) n = _count - _position ; if ( n < _NUM ) return _NUM ; _position += n ; return n ; }
13359	public static List < String > readLines ( InputStream input , String encoding ) throws IOException { return readLines ( input , Charsets . toCharset ( encoding ) ) ; }
13377	private Map < String , Object > parse ( Json json ) { return json . asMap ( ) ; }
13380	protected void addXML11Component ( XMLComponent component ) { if ( fXML11Components . contains ( component ) ) { return ; } fXML11Components . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
13384	public JSONObject putOnce ( String key , Object value ) throws JSONException { if ( key != _NULL && value != _NULL ) { if ( this . opt ( key ) != _NULL ) { throw new JSONException ( _CHAR Duplicate key \ _CHAR _CHAR + key + _CHAR \ _CHAR _CHAR ) ; } this . put ( key , value ) ; } return this ; }
13395	@ Override public void write ( String value ) throws IOException { write ( value . getBytes ( defaultCharset ) ) ; }
13398	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
13403	public static boolean isRootModuleWithNoSources ( @ NotNull Module module ) { if ( ModuleRootManager . getInstance ( module ) . getSourceRoots ( ) . length == _NUM ) { String gradlePath = getGradlePath ( module ) ; if ( gradlePath == _NULL || gradlePath . equals ( _CHAR : _CHAR ) ) { return _BOOL ; } } return _BOOL ; }
13404	public T walkInOptimizedOrder ( final FieldVectorChangingVisitor < T > visitor , final int start , final int end ) throws MathIllegalArgumentException { return walkInDefaultOrder ( visitor , start , end ) ; }
13407	protected Class resolveClass ( ObjectStreamClass desc ) throws IOException , ClassNotFoundException { if ( desc . getName ( ) . equals ( _CHAR java . rmi . MarshalledObject _CHAR ) ) { return net . jini . io . MarshalledObject . class ; } return super . resolveClass ( desc ) ; }
13411	public static double min ( double a , double b ) { return ( a <= b ) ? a : b ; }
13417	public boolean topo_sort ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR topo - sort _CHAR ) ; }
13421	public Object clone ( ) { Schema s = new Schema ( m_size ) ; for ( int i = _NUM ; i < m_size ; ++ i ) { s . addColumn ( m_names [ i ] , m_types [ i ] , m_dflts [ i ] ) ; } return s ; }
13493	public int findLastCompletelyVisibleItemPosition ( ) { final View child = findOneVisibleChild ( getChildCount ( ) - _NUM , - _NUM , _BOOL ) ; return child == _NULL ? NO_POSITION : getPosition ( child ) ; }
13508	public boolean geom_trans ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR geom - trans _CHAR ) ; }
13509	public TrustManagerBuilder or ( ) { if ( mgr . isMatchAll ( ) ) { if ( mgr . size ( ) < _NUM ) { mgr . setMatchAll ( _BOOL ) ; } else { mgr = CompositeTrustManager . matchAny ( mgr ) ; } } return ( this ) ; }
13552	@ Override public void onAddCommandTag ( final ISourceCommandTag sourceCommandTag , final ChangeReport changeReport ) { changeReport . appendError ( _CHAR The equipment has no implementation to _CHAR + _CHAR add command tags . You have to restart the DAQ . '' ) ; changeReport . setState ( CHANGE_STATE . REBOOT ) ; }
13572	public int keyAt ( int index ) { return mKeys [ index ] ; }
13592	public synchronized void addLocators ( LookupLocator [ ] locators ) { testSetForNull ( locators ) ; if ( terminated ) { throw new IllegalStateException ( _CHAR discovery terminated _CHAR ) ; } discoverLocators ( locators ) ; }
13595	public static < K , V > Map < K , V > newMap ( Map < ? extends K , ? extends V > map ) { return new HashMap < K , V > ( map ) ; }
13607	public void childrenStartGroup ( ) throws XNIException { }
13614	public void loadBasicClasses ( ) { addReflectionTraceClasses ( ) ; for ( int i = SootClass . BODIES ; i >= SootClass . HIERARCHY ; i -- ) { for ( String name : basicclasses [ i ] ) { tryLoadClass ( name , i ) ; } } }
13616	public MessagesSendQuery attachment ( String ... value ) { return unsafeParam ( _CHAR attachment _CHAR , value ) ; }
13620	protected PhotosGetByIdQueryWithExtended photos ( List < String > value ) { return unsafeParam ( _CHAR photos _CHAR , value ) ; }
13623	protected boolean handleDirectory ( File directory , int depth , Collection < T > results ) throws IOException { return _BOOL ; }
13626	@ ObjectiveCName ( _CHAR error : err : _CHAR ) void error ( String rpcName , String err ) { this . callback . onRpcError ( rpcName , err ) ; this . clearTimeouts ( ) ; }
13631	@ Override public void publish ( String topic , byte [ ] payload , long timeout ) throws AWSIotException , AWSIotTimeoutException { super . publish ( topic , payload , timeout ) ; }
13643	protected Ticket newTicket ( long when , Runnable task , ThreadDesc threadDesc ) { synchronized ( contents ) { return new Ticket ( when , task , threadDesc , nextBreaker ++ ) ; } }
13676	@ Override public void startGeneralEntity ( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs ) throws XNIException { }
13679	public static void writeLines ( File file , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , _NULL , lines , _NULL , append ) ; }
13680	public boolean isInteriorRight ( ) { double diff = v0 . point . y - v1 . point . y ; if ( diff == _NUM . _NUM ) { if ( v0 . point . x < v1 . point . x ) { return _BOOL ; } else { return _BOOL ; } } else if ( diff > _NUM . _NUM ) { return _BOOL ; } else { return _BOOL ; } }
13686	public long skip ( long n ) { if ( _position + n > _count ) n = _count - _position ; if ( n < _NUM ) return _NUM ; _position += n ; return n ; }
13692	public Builder withSerializable ( boolean serializable ) { this . serializable = serializable ; return this ; }
13722	public static void assertAndEnsureCleanDb ( DmnEngine dmnEngine ) { log . debug ( _CHAR verifying that db is clean after test _CHAR ) ; DmnRepositoryService repositoryService = dmnEngine . getDmnEngineConfiguration ( ) . getDmnRepositoryService ( ) ; List < DmnDeployment > deployments = repositoryService . createDeploymentQuery ( ) . list ( ) ; if ( deployments != _NULL && deployments . isEmpty ( ) == _BOOL ) { throw new AssertionError ( _CHAR DmnDeployments is not empty _CHAR ) ; } }
13727	public static Pattern convertPerlRegexToPattern ( @ Nonnull final String regex ) { return convertPerlRegexToPattern ( regex , _BOOL ) ; }
13731	public boolean context_heap ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR context - heap _CHAR ) ; }
13741	public void back ( ) throws JSONException { if ( usePrevious || index <= _NUM ) { throw new JSONException ( _CHAR Stepping back two steps is not supported _CHAR ) ; } this . index -= _NUM ; this . character -= _NUM ; this . usePrevious = _BOOL ; this . eof = _BOOL ; }
13745	public boolean merge_stringbuffer ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR merge - stringbuffer _CHAR ) ; }
13753	public boolean field_based ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR field - based _CHAR ) ; }
13761	static Object createObject ( String factoryId , String fallbackClassName ) throws ConfigurationError { return createObject ( factoryId , _NULL , fallbackClassName ) ; }
13764	public Builder position ( String position ) { this . position = position ; return this ; }
13765	@ Override public void close ( ) { if ( closed ) { return ; } if ( SHOULD_CHECK && ! txn . isReadOnly ( ) ) { txn . checkReady ( ) ; } LIB . mdb_cursor_close ( ptrCursor ) ; closed = _BOOL ; }
13789	public void java_net_InetAddressImpl_getLocalHostName ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getStringObject ( ) ) ; }
13793	public Builder stringMapTransform ( String columnName , Map < String , String > mapping ) { return transform ( new StringMapTransform ( columnName , mapping ) ) ; }
13798	public DynamicTemplateParameterContext appendParameter ( String paramName , String paramValue , boolean deleteOnExit ) { return appendParameter ( paramName , paramValue , deleteOnExit , _BOOL , ContextInfo . EMPTY ) ; }
13808	public Result useItemInHand ( ) { return useItemInHand ; }
13813	public BoardGetTopicsQueryWithExtended topicIds ( Integer ... value ) { return unsafeParam ( _CHAR topic_ids _CHAR , value ) ; }
13831	@ Override public void onWebDriverClosed ( boolean terminated ) { reset ( ) ; }
13842	protected boolean fetchRelations ( String fieldName ) { return _BOOL ; }
13843	public static int copy ( Reader input , Writer output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
13853	public static void registerContentType ( String type , String classname ) { JEditorPane . registerEditorKitForContentType ( type , classname ) ; CONTENTS . add ( type ) ; }
13859	public static UUID uuidForTimeMillis ( long timeMillis ) { return uuidForTimeMillis ( timeMillis , _NUM ) ; }
13863	@ Override public void onDestroyView ( ) { super . onDestroyView ( ) ; if ( mProgressAnimator != _NULL ) { mProgressAnimator . removeAllListeners ( ) ; } Log . d ( TAG , _CHAR onDestroyView ( ) _CHAR ) ; mPrefs . unregisterOnSharedPreferenceChangeListener ( mPrefChangeListener ) ; }
13866	public boolean ignore_types ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR ignore - types _CHAR ) ; }
13875	public Builder markerZoomAnimation ( Boolean markerZoomAnimation ) { this . markerZoomAnimation = markerZoomAnimation ; return this ; }
13916	public int minEffectiveTotalRange ( ) { if ( fType == XSParticleDecl . PARTICLE_EMPTY ) { return _NUM ; } if ( fType == PARTICLE_MODELGROUP ) { return ( ( XSModelGroupImpl ) fValue ) . minEffectiveTotalRange ( ) * fMinOccurs ; } return fMinOccurs ; }
13936	public static RecipientEntry constructGeneratedEntry ( String display , String address , boolean isValid ) { return new RecipientEntry ( ENTRY_TYPE_PERSON , display , address , INVALID_DESTINATION_TYPE , _NULL , GENERATED_CONTACT , _NULL , GENERATED_CONTACT , _NULL , _BOOL , isValid , _NULL ) ; }
13948	@ Override public Iterator < Pair < K , V >> iterator ( ) { return backedSet . iterator ( ) ; }
13973	public boolean with_fieldref ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - fieldref _CHAR ) ; }
13977	public boolean isClosePath ( ) { return m_closed ; }
13978	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_INFO_4_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13988	@ JsonIgnore public DateMidnight calculateLastDay ( ) { DateMidnight earliestDay = new DateMidnight ( endTime ) ; if ( state . equals ( State . TERMINATED ) ) { DateMidnight modifiedDay = new DateMidnight ( modificationTime ) ; if ( modifiedDay . isBefore ( earliestDay ) ) { earliestDay = modifiedDay ; } } return earliestDay ; }
14010	protected PhotosGetByIdQuery photos ( String ... value ) { return unsafeParam ( _CHAR photos _CHAR , value ) ; }
14037	public CriteriaHibernateSpaceDataSourceConfigurer initialLoadChunkSize ( int initalLoadChunkSize ) { this . initialLoadChunkSize = initalLoadChunkSize ; return this ; }
14063	public EntityQuery where ( Map < String , Object > fieldMap ) { this . whereEntityCondition = EntityCondition . makeCondition ( fieldMap ) ; return this ; }
14081	public static String base64EncodeBasicCredentials ( String username , String password ) { String credentialsToEncode = username + _CHAR + password ; byte [ ] credentialsAsUtf8Bytes = credentialsToEncode . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ; return new String ( DatatypeConverter . parseBase64Binary ( new String ( credentialsAsUtf8Bytes ) ) ) ; }
14094	public boolean verbose ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR verbose _CHAR ) ; }
14105	public static final Vector2 [ ] show ( Window owner ) { ApplyForceAtPointDialog afd = new ApplyForceAtPointDialog ( owner ) ; afd . setLocationRelativeTo ( owner ) ; afd . setVisible ( _BOOL ) ; if ( ! afd . canceled ) { return new Vector2 [ ] { afd . forceAtPointPanel . getForce ( ) , afd . forceAtPointPanel . getPoint ( ) } ; } return _NULL ; }
14112	public synchronized boolean unexport ( boolean force ) { if ( ! mainExporter . unexport ( force ) ) { return _BOOL ; } bootExporter . unexport ( _BOOL ) ; if ( ref != _NULL ) { ref . enqueue ( ) ; } return _BOOL ; }
14113	public static < E > DoubleStream shiftingWindowAveragingDouble ( Stream < E > stream , int rollingFactor , ToDoubleFunction < ? super E > mapper ) { Objects . requireNonNull ( stream ) ; Objects . requireNonNull ( mapper ) ; DoubleStream doubleStream = stream . mapToDouble ( mapper ) ; return shiftingWindowAveragingDouble ( doubleStream , rollingFactor ) ; }
14118	public static byte [ ] toByteArray ( Reader input , Charset encoding ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output , encoding ) ; return output . toByteArray ( ) ; }
14140	@ Override public void beforeFirst ( ) { s1 . beforeFirst ( ) ; isLhsEmpty = ! s1 . next ( ) ; s2 . beforeFirst ( ) ; }
14159	public < T > void putEnv ( String key , T value ) { String ekey = this . expandString ( key ) ; FlexibleMapAccessor < T > fma = FlexibleMapAccessor . getInstance ( ekey ) ; this . putEnv ( fma , value ) ; }
14160	public BoundingVolume mergeLocal ( BoundingVolume volume ) { if ( volume == _NULL ) { return this ; } switch ( volume . getType ( ) ) { case AABB : { BoundingBox vBox = ( BoundingBox ) volume ; return merge ( vBox . center , vBox . xExtent , vBox . yExtent , vBox . zExtent , this ) ; } default : return _NULL ; } }
14164	public static boolean isEmpty ( Collection < ? > collection ) { return ( collection == _NULL || collection . isEmpty ( ) ) ; }
14177	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output ) throws IOException { writeLines ( lines , lineEnding , output , Charset . defaultCharset ( ) ) ; }
14196	public Builder reduce ( IReducer reducer ) { actionList . add ( new DataAction ( reducer ) ) ; return this ; }
14212	public static JsonValue parse ( Reader reader ) throws IOException { if ( reader == _NULL ) { throw new NullPointerException ( _CHAR reader is _NULL _CHAR ) ; } DefaultHandler handler = new DefaultHandler ( ) ; new JsonParser ( handler ) . parse ( reader ) ; return handler . getValue ( ) ; }
14227	public E valueAt ( int index ) { if ( mGarbage ) { gc ( ) ; } return ( E ) mValues [ index ] ; }
14228	public GsonBuilder addSerializationExclusionStrategy ( ExclusionStrategy strategy ) { excluder = excluder . withExclusionStrategy ( strategy , _BOOL , _BOOL ) ; return this ; }
14232	public static void writeLines ( File file , String encoding , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , encoding , lines , _NULL , append ) ; }
14257	public static String byteCountToDisplaySize ( long size ) { return byteCountToDisplaySize ( BigInteger . valueOf ( size ) ) ; }
14258	public static boolean isFixed ( InvokeExpr ie ) { return ie instanceof StaticInvokeExpr || ie instanceof SpecialInvokeExpr || ! clientOverwriteableOverwrites ( ie . getMethod ( ) ) ; }
14272	public void forceNSDecl ( String uri ) { forcedDeclTable . put ( uri , Boolean . TRUE ) ; }
14300	@ Override public final void storeData ( final T object ) { if ( log ( object ) && ! fallbackManager . isFallbackFileEmpty ( ) ) { if ( ! this . dataRecovery . isRunning ( ) ) { dataRecovery . setPersistenceManager ( this ) ; new Thread ( dataRecovery ) . start ( ) ; } } }
14308	@ Override public void connect ( ) throws AWSIotException { super . connect ( ) ; }
14315	public boolean insert_null_checks ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR insert - _NULL - checks _CHAR ) ; }
14323	private int nextToken ( ) throws XNIException { if ( fCurrentTokenIndex == fTokenCount ) reportError ( _CHAR XPointerElementSchemeProcessingError _CHAR , _NULL ) ; return fTokens [ fCurrentTokenIndex ++ ] ; }
14343	public String formatValue ( Object value ) { if ( value == _NULL ) { return EMPTY ; } if ( value instanceof Number ) { try { return FORMAT_VALUE . format ( value ) ; } catch ( IllegalArgumentException ex ) { return NAN ; } } else { return String . valueOf ( value ) ; } }
14360	public static List split ( String str , String regex ) { return ( Arrays . asList ( str . split ( regex ) ) ) ; }
14368	public static Double scaledZ ( final double confidence_level ) { if ( confidence_level <= _NUM . _NUM || confidence_level >= _NUM . _NUM ) { throw new IllegalArgumentException ( _CHAR Confidence level must be in the interval ( _NUM , _NUM ) . _CHAR ) ; } double significance_level = _NUM . _NUM - confidence_level ; return normalInverse ( _NUM . _NUM - significance_level / DEFAULT_MAX_DECISIONS / _NUM . ) ; }
14375	public T val ( ) { return v ; }
14377	public static boolean isNoReturnValue ( int mod ) { return Modifiers . contains ( mod , UpdateModifiers . NO_RETURN_VALUE ) ; }
14379	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
14391	public static boolean isLeaseExpiration ( int mod ) { return ( mod & NOTIFY_LEASE_EXPIRATION ) != _NUM ; }
14392	private String fixMalformedJson ( String string ) { string = string . trim ( ) ; if ( ! string . startsWith ( _CHAR { _CHAR ) ) { string = _CHAR { _CHAR + string + _CHAR } _CHAR ; string = string . replaceAll ( START_OF_TEXT , _CHAR , _CHAR ) ; string = string . replaceAll ( END_OF_TEXT , _CHAR : _CHAR ) ; } return string ; }
14394	public static void notEmpty ( String argumentName , String argumentObject ) { notNull ( argumentName , argumentObject ) ; if ( argumentObject . length ( ) == _NUM ) { throw new IllegalArgumentException ( argumentName + _CHAR can not be empty _CHAR ) ; } }
14413	public Builder detectRetina ( Boolean detectRetina ) { this . detectRetina = detectRetina ; return this ; }
14421	public static void copy ( byte [ ] input , Writer output ) throws IOException { ByteArrayInputStream in = new ByteArrayInputStream ( input ) ; copy ( in , output ) ; }
14433	public final boolean addAlarmValue ( @ Valid final AlarmValueImpl alarmValue ) { if ( alarmValue . getTagId ( ) . equals ( tagId ) ) { return alarmValues . add ( alarmValue ) ; } return _BOOL ; }
14442	public static byte [ ] decodeWebSafe ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , WEBSAFE_DECODABET ) ; }
14456	public boolean isClusteredExternalDBEnabled ( ) { return _isClusteredExternalDBEnabled ; }
14471	@ Override public List < byte [ ] > read ( ) throws IOException { return read ( _NUM ) ; }
14473	public Selection isBeforeNoon ( ) { return select ( _NULL ) ; }
14482	@ Override public boolean removeAll ( Collection < ? > c ) { return backedSet . removeAll ( c ) ; }
14486	protected AdsGetStatisticsQuery dateTo ( String value ) { return unsafeParam ( _CHAR date_to _CHAR , value ) ; }
14509	@ Override public void endGeneralEntity ( String name , Augmentations augs ) throws XNIException { }
14510	public static String u2or4 ( int v ) { if ( v == ( char ) v ) { return u2 ( v ) ; } else { return u4 ( v ) ; } }
14517	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
14526	public static double min ( final double [ ] values , final int begin , final int length ) throws MathIllegalArgumentException { return MIN . evaluate ( values , begin , length ) ; }
14529	public synchronized VisualTable addTable ( String group ) { VisualTable vt = new VisualTable ( this , group ) ; addDataGroup ( group , vt , _NULL ) ; return vt ; }
14534	public static int copy ( InputStream input , OutputStream output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
14537	public static Model create ( FileDescriptorSet proto , Iterable < String > sources ) { return new Model ( proto , sources , _NULL , ExtensionPool . EMPTY , new BoundedDiagCollector ( ) ) ; }
14545	public boolean isExpired ( Period period , Date now ) { int expiryDays = getExpiryDays ( ) ; return expiryDays != DataSet . NO_EXPIRY && new DateTime ( period . getEndDate ( ) ) . plusDays ( expiryDays ) . isBefore ( new DateTime ( now ) ) ; }
14548	public static int copy ( Reader input , Writer output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
14549	private static Path doPath ( String s ) { Path path = new Path ( ) ; PathParser . parse ( s , path ) ; return path ; }
14554	public static JSONArray toJSONArray ( XMLTokener x ) throws JSONException { return ( JSONArray ) parse ( x , _BOOL , _NULL ) ; }
14564	public synchronized VisualTree addTree ( String group , Tree tree , Predicate filter ) { return addTree ( group , tree , filter , VisualItem . SCHEMA , VisualItem . SCHEMA ) ; }
14566	public TrustSource add ( X509Certificate ... trustedCertificates ) { if ( trustedCertificates == _NULL || trustedCertificates . length == _NUM ) { return this ; } X509Certificate [ ] newTrustedCAs = ObjectArrays . concat ( trustedCAs , trustedCertificates , X509Certificate . class ) ; return new TrustSource ( newTrustedCAs ) ; }
14574	public < R > R executeTransactionalCommandInSeparateThread ( final TransactionalCommand < R > command ) throws MithraBusinessException { return this . executeTransactionalCommandInSeparateThread ( command , this . defaultTransactionStyle ) ; }
14602	@ ManagedOperation ( description = _CHAR Refresh supervision timestamps of Processes / ( Sub ) Equipments and notify all listeners . '' ) @ Override public void refreshAllSupervisionStatus ( ) { notifyAllSupervisedCachesOfUpdate ( ) ; }
14620	private void enqueueEvaluateParameters ( ) { if ( myEvaluationState == EvaluationState . REQUEST_ENQUEUED ) { return ; } myEvaluationState = EvaluationState . REQUEST_ENQUEUED ; ApplicationManager . getApplication ( ) . invokeLater ( _NULL , ModalityState . any ( ) ) ; }
14629	public Plan makeProductPlan ( Plan trunk ) { Plan p = makeSelectPlan ( ) ; return new MultiBufferProductPlan ( trunk , p , tx ) ; }
14631	@ NotNull public ObservableBool hasErrors ( ) { return myValidatorPanel . hasErrors ( ) ; }
14634	public MapMessage createMapMessage ( ) throws JMSException { return createMapMessage ( new HashMap < String , Object > ( ) ) ; }
14646	public < T > String makeStringValueSQ ( T value ) { return value . toString ( ) ; }
14651	@ Override public void unsubscribe ( String topic ) throws AWSIotException { super . unsubscribe ( topic ) ; }
14652	@ Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; LatLng sydney = new LatLng ( - _NUM , _NUM ) ; mMap . addMarker ( new MarkerOptions ( ) . position ( sydney ) . title ( _CHAR Marker in Sydney _CHAR ) ) ; mMap . moveCamera ( CameraUpdateFactory . newLatLng ( sydney ) ) ; }
14661	public boolean cs_demand ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR cs - demand _CHAR ) ; }
14663	private boolean isOff ( long flag ) { return ( options & flag ) == _NUM ; }
14666	public MessagesGetDialogsQuery previewLength ( Integer value ) { return unsafeParam ( _CHAR preview_length _CHAR , value ) ; }
14672	public StatelessHibernateSpaceSynchronizationEndpointConfigurer managedEntries ( String ... entries ) { this . managedEntries = new HashSet < String > ( ) ; this . managedEntries . addAll ( Arrays . asList ( entries ) ) ; return this ; }
14673	public void back ( ) throws JSONException { if ( this . usePrevious || this . index <= _NUM ) { throw new JSONException ( _CHAR Stepping back two steps is not supported _CHAR ) ; } this . index -= _NUM ; this . character -= _NUM ; this . usePrevious = _BOOL ; this . eof = _BOOL ; }
14680	@ NotNull public ThreeState isSyncNeeded ( ) { long lastSync = getLastGradleSyncTimestamp ( ) ; if ( lastSync < _NUM ) { return ThreeState . UNSURE ; } return isSyncNeeded ( lastSync ) ? ThreeState . YES : ThreeState . NO ; }
14702	private void update ( DataApprovalLevel dataApprovalLevel , int index ) { dataApprovalLevel . setLevel ( index + _NUM ) ; dataApprovalLevelStore . update ( dataApprovalLevel ) ; }
14720	public void startString ( ) { }
14753	public MapContext < K , V > standAloneStack ( ) { MapContext < K , V > standAlone = MapContext . createMapContext ( this ) ; return standAlone ; }
14756	public synchronized VisualTable addTable ( String group , Schema schema ) { VisualTable vt = new VisualTable ( this , group , schema ) ; addDataGroup ( group , vt , _NULL ) ; return vt ; }
14766	public static double product ( final double ... values ) throws MathIllegalArgumentException { return PRODUCT . evaluate ( values ) ; }
14770	public void java_lang_Class_getComponentType ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassObject ( ) ) ; }
14780	public void addValue ( double v ) { if ( windowSize != INFINITE_WINDOW ) { if ( getN ( ) == windowSize ) { eDA . addElementRolling ( v ) ; } else if ( getN ( ) < windowSize ) { eDA . addElement ( v ) ; } } else { eDA . addElement ( v ) ; } }
14799	public Uri remapUri ( Uri uri ) { return _NULL ; }
14816	public double t ( final double mu , final double [ ] observed ) throws MathIllegalArgumentException , NullArgumentException { checkSampleData ( observed ) ; return t ( StatUtils . mean ( observed ) , mu , StatUtils . variance ( observed ) , observed . length ) ; }
14819	public boolean canModifyUser ( UserCredentials other ) { if ( other == _NULL ) { return _BOOL ; } final Set < String > authorities = getAllAuthorities ( ) ; if ( authorities . contains ( UserAuthorityGroup . AUTHORITY_ALL ) ) { return _BOOL ; } return authorities . containsAll ( other . getAllAuthorities ( ) ) ; }
14840	private String nonControl ( String s , int start ) { String ret = _CHAR _CHAR ; cPos = s . indexOf ( _CHAR % _CHAR , start ) ; if ( cPos == - _NUM ) cPos = s . length ( ) ; return s . substring ( start , cPos ) ; }
14853	public boolean isVisible ( SootClass from , SootClass check ) { if ( check . isPublic ( ) ) return _BOOL ; if ( check . isProtected ( ) || check . isPrivate ( ) ) return _BOOL ; return from . getJavaPackageName ( ) . equals ( check . getJavaPackageName ( ) ) ; }
14865	public MessagesGetQuery previewLength ( Integer value ) { return unsafeParam ( _CHAR preview_length _CHAR , value ) ; }
14894	public String matchStatement ( String alias , String idParameterName ) { Objects . requireNonNull ( alias , _CHAR alias can not be _NULL _CHAR ) ; Objects . requireNonNull ( idParameterName , _CHAR idParameterName can not be _NULL _CHAR ) ; return _CHAR MATCH _CHAR + matchPattern ( alias ) + _CHAR WHERE _CHAR + matchPredicate ( alias , idParameterName ) ; }
14903	public static void sleep ( double durationInSec ) { try { TimeUnit . SECONDS . sleep ( ( long ) ( durationInSec ) ) ; } catch ( InterruptedException e ) { LOG . error ( _CHAR Sleep was interrupted _CHAR , e ) ; } }
14948	public static FileDetailFragment newInstance ( OCFile fileToDetail , Account account ) { FileDetailFragment frag = new FileDetailFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_FILE , fileToDetail ) ; args . putParcelable ( ARG_ACCOUNT , account ) ; frag . setArguments ( args ) ; return frag ; }
14972	public static boolean equals ( double x , double y , double eps ) { return equals ( x , y ) || ( Math . abs ( y - x ) <= eps ) ; }
14973	public EntityQuery orderBy ( List < String > orderBy ) { this . orderBy = orderBy ; return this ; }
14986	public static File toFile ( URL url ) { if ( url == _NULL || ! _CHAR file _CHAR . equalsIgnoreCase ( url . getProtocol ( ) ) ) { return _NULL ; } else { String filename = url . getFile ( ) . replace ( _CHAR , File . separatorChar ) ; filename = decodeUrl ( filename ) ; return new File ( filename ) ; } }
14988	private void recoverInternal ( String streamIdentifier ) throws IOException { checkClosedOrInError ( _CHAR recoverInternal _CHAR ) ; BKLogWriteHandler ledgerHandler = createWriteHandler ( _BOOL ) ; try { FutureUtils . result ( ledgerHandler . recoverIncompleteLogSegments ( ) ) ; } finally { Utils . closeQuietly ( ledgerHandler ) ; } }
14993	public Map . Entry < K , V > higherEntry ( K key ) { return getNear ( key , GT ) ; }
15009	@ Deprecated public static JsonObject readFrom ( Reader reader ) throws IOException { return JsonValue . readFrom ( reader ) . asObject ( ) ; }
15026	@ Override public RealMatrix solve ( final RealMatrix b ) { return pseudoInverse . multiply ( b ) ; }
15028	public void upload ( File file ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { upload ( file , _NUM , _NULL ) ; }
15060	@ Override public int size ( ) { int size = _NUM ; for ( Node < E > node = top . get ( ) ; node != _NULL ; node = node . next ) { if ( node . get ( ) != _NULL ) { size ++ ; } } return size ; }
15063	private boolean hasRemainingMaskBases ( ) { if ( ! emitUncoveredLoci ) { return _BOOL ; } return ( lastReferenceSequence < referenceSequenceMask . getMaxSequenceIndex ( ) || ( lastReferenceSequence == referenceSequenceMask . getMaxSequenceIndex ( ) && lastPosition < referenceSequenceMask . nextPosition ( lastReferenceSequence , lastPosition ) ) ) ; }
15067	public void unregisterEditor ( RTEditText editor ) { mEditors . remove ( editor . getId ( ) ) ; editor . unregister ( ) ; updateToolbarVisibility ( ) ; }
15071	public BoardGetTopicsQuery topicIds ( List < Integer > value ) { return unsafeParam ( _CHAR topic_ids _CHAR , value ) ; }
15073	public static void loadArmLibrary ( ApplicationLike applicationLike , String libName ) { if ( libName == _NULL || libName . isEmpty ( ) || applicationLike == _NULL ) { throw new TinkerRuntimeException ( _CHAR libName or context is _NULL ! _CHAR ) ; } if ( TinkerApplicationHelper . isTinkerEnableForNativeLib ( applicationLike ) ) { if ( TinkerApplicationHelper . loadLibraryFromTinker ( applicationLike , _CHAR lib / armeabi _CHAR , libName ) ) { return ; } } System . loadLibrary ( libName ) ; }
15086	public void bodySetup ( LocalVariableTable_attribute la , LocalVariableTypeTable_attribute lt , cp_info [ ] ca ) { activeVariableTable = la ; activeConstantPool = ca ; nameToIndexToLocal = _NULL ; }
15102	public static void parseLitePalConfiguration ( ) { if ( parser == _NULL ) { parser = new LitePalParser ( ) ; } parser . useSAXParser ( ) ; }
15138	@ Override public XSNamespaceItem item ( int index ) { if ( index < _NUM || index >= fGrammarCount ) { return _NULL ; } return fGrammarList [ index ] ; }
15150	public static AudioDestination createAudioDestination ( ) throws IOException { boolean ram = _BOOL ; if ( audiostoreProperty . equals ( _CHAR ram _CHAR ) ) ram = _BOOL ; else if ( audiostoreProperty . equals ( _CHAR file _CHAR ) ) ram = _BOOL ; else ram = ! lowMemoryCondition ( ) ; return new AudioDestination ( ram ) ; }
15152	private List < ColumnModel > findColumnsToAdd ( ) { List < ColumnModel > columnsToAdd = new ArrayList < ColumnModel > ( ) ; for ( ColumnModel columnModel : mTableModel . getColumnModels ( ) ) { String columnName = columnModel . getColumnName ( ) ; if ( ! mTableModelDB . containsColumn ( columnName ) ) { columnsToAdd . add ( columnModel ) ; } } return columnsToAdd ; }
15154	private static Class < ? extends Activity > guessErrorActivityClass ( Context context ) { Class < ? extends Activity > resolvedActivityClass ; resolvedActivityClass = CustomActivityOnCrash . getErrorActivityClassWithIntentFilter ( context ) ; if ( resolvedActivityClass == _NULL ) { resolvedActivityClass = DefaultErrorActivity . class ; } return resolvedActivityClass ; }
15167	public float angleBetween ( Vector2f otherVector ) { float angle = FastMath . atan2 ( otherVector . y , otherVector . x ) - FastMath . atan2 ( y , x ) ; return angle ; }
15175	public IObjectInfo < T > storeBeforeCeiling ( IObjectInfo < T > theCeiling , T subject ) { return storeBeforeCeiling_impl ( ( ObjectInfo < T > ) theCeiling , subject ) ; }
15181	private boolean checkRecordIDValidity ( RecordID rid ) throws DatabaseException { return _BOOL ; }
15187	public synchronized void checkOwnership ( ) throws LockingException { if ( _NULL == lockAcquireFuture || ! lockAcquireFuture . isDefined ( ) ) { throw new LockingException ( lockPath , _CHAR check ownership before acquiring _CHAR ) ; } if ( ! haveLock ( ) ) { throw new LockingException ( lockPath , _CHAR Lost lock ownership _CHAR ) ; } }
15197	public synchronized void changeStripedCount ( long diff ) { this . count += diff ; if ( this . count == _NUM ) { this . signalTaskCompleted ( ) ; } }
15200	public boolean dump_answer ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - answer _CHAR ) ; }
15201	public boolean removeDataSet ( T d ) { if ( d == _NULL ) return _BOOL ; boolean removed = mDataSets . remove ( d ) ; if ( removed ) { mYValCount -= d . getEntryCount ( ) ; calcMinMax ( _NUM , mYValCount ) ; } return removed ; }
15206	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_INFO_1_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
15223	public static String checkNull ( String string1 , String string2 , String string3 , String string4 ) { if ( string1 != _NULL ) return string1 ; else if ( string2 != _NULL ) return string2 ; else if ( string3 != _NULL ) return string3 ; else if ( string4 != _NULL ) return string4 ; else return _CHAR _CHAR ; }
15235	public int hashCode ( ) { int hash = _NUM ; hash += _NUM * hash + Float . floatToIntBits ( x ) ; hash += _NUM * hash + Float . floatToIntBits ( y ) ; return hash ; }
15240	public Builder lineJoin ( String lineJoin ) { this . lineJoin = lineJoin ; return this ; }
15246	void assignToBlock ( BlockId blk ) { internalLock . writeLock ( ) . lock ( ) ; try { flush ( ) ; this . blk = blk ; contents . read ( blk ) ; pins = _NUM ; lastLsn = LogSeqNum . readFromPage ( contents , LAST_LSN_OFFSET ) ; } finally { internalLock . writeLock ( ) . unlock ( ) ; } }
15263	public static File createTempFoXmlFile ( ) throws IOException { File tempXmlFile = File . createTempFile ( tempFilePrefix , _CHAR . xml _CHAR ) ; tempXmlFile . deleteOnExit ( ) ; return tempXmlFile ; }
15271	@ Override public void finished ( ) { QueueFinalizer queueFinalizer = new QueueFinalizer ( ) ; queueFinalizer . finalizeQueue ( tasks , completionService , executorService ) ; try { webDriverRegistry . shutdown ( ) ; reportingHandler . endOfSuite ( ) ; } catch ( InterruptedException e ) { Thread . currentThread ( ) . interrupt ( ) ; } }
15275	public static @ Lightness int isDark ( Palette palette ) { Palette . Swatch mostPopulous = getMostPopulousSwatch ( palette ) ; if ( mostPopulous == _NULL ) return LIGHTNESS_UNKNOWN ; return isDark ( mostPopulous . getHsl ( ) ) ? IS_DARK : IS_LIGHT ; }
15281	public boolean halfEmpty ( ) { return count * _NUM < capacity && bufferMap . size ( ) == _NUM && bufferMap . containsKey ( _NUM ) ; }
15286	@ Override public void onPageScrollStateChanged ( int state ) { }
15310	public void pause ( ) { if ( ! paused ) { setPaused ( _BOOL ) ; if ( currentClip != _NULL ) { currentClip . stop ( ) ; } synchronized ( this ) { notifyAll ( ) ; } } }
15324	private InvocationConstraints createInvocationConstraints ( ) { if ( MIN_RETRY >= sleepTime [ tryIndx ] ) { return new InvocationConstraints ( new ConnectionAbsoluteTime ( System . currentTimeMillis ( ) + sleepTime [ tryIndx ] ) , _NULL ) ; } else { return InvocationConstraints . EMPTY ; } }
15328	public void appendData ( String data ) { if ( isReadOnly ( ) ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NO_MODIFICATION_ALLOWED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NO_MODIFICATION_ALLOWED_ERR , msg ) ; } if ( data == _NULL ) { return ; } if ( needsSyncData ( ) ) { synchronizeData ( ) ; } setNodeValue ( this . data + data ) ; }
15346	public static String classPackageAsResourcePath ( Class clazz ) { if ( clazz == _NULL || clazz . getPackage ( ) == _NULL ) { return _CHAR _CHAR ; } return clazz . getPackage ( ) . getName ( ) . replace ( _CHAR , _CHAR ) ; }
15373	public WallGetCommentsQuery previewLength ( Integer value ) { return unsafeParam ( _CHAR preview_length _CHAR , value ) ; }
15384	public Builder diskCacheExtraOptions ( int maxImageWidthForDiskCache , int maxImageHeightForDiskCache , BitmapProcessor processorForDiskCache ) { this . maxImageWidthForDiskCache = maxImageWidthForDiskCache ; this . maxImageHeightForDiskCache = maxImageHeightForDiskCache ; this . processorForDiskCache = processorForDiskCache ; return this ; }
15387	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
15390	public static InputStream needStream ( String propertyName ) throws NoSuchPropertyException , FileNotFoundException , MaryConfigurationException { MaryProperties . needProperty ( propertyName ) ; return getStream ( propertyName ) ; }
15397	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
15406	public static void breakpoint ( ) { }
15407	private boolean canReadCOGS ( User user , CategoryOptionGroupSet cogs ) { if ( cogs == _NULL ) { UserCredentials userCredentials = user . getUserCredentials ( ) ; return CollectionUtils . isEmpty ( userCredentials . getCogsDimensionConstraints ( ) ) && CollectionUtils . isEmpty ( userCredentials . getCatDimensionConstraints ( ) ) ; } return ! CollectionUtils . isEmpty ( categoryService . getCategoryOptionGroups ( cogs ) ) ; }
15415	public static void main ( String [ ] args ) { if ( args . length < _NUM ) { System . err . println ( _CHAR Usage : HTTPDStatus URL1 [ URL2 ... URLN ] _CHAR ) ; return ; } for ( int i = _NUM ; i < args . length ; i ++ ) { httpdWarning ( args [ i ] ) ; } }
15421	public void findHighestTiles ( ) { if ( ! highestTilesFound ) { for ( int x = _NUM ; x < CHUNK_SIZE ; x ++ ) { findHighestTile ( x ) ; } highestTilesFound = _BOOL ; } }
15438	public boolean aggregationLevelIsValid ( int organisationUnitLevel , int dataValueLevel ) { if ( aggregationLevels . size ( ) == _NUM ) { return _BOOL ; } final Integer aggregationLevel = getRelevantAggregationLevel ( organisationUnitLevel ) ; return aggregationLevel == _NULL || dataValueLevel <= aggregationLevel ; }
15470	private void extendTail ( int count ) { if ( terminated || count < _NUM ) { return ; } while ( -- count >= _NUM ) { final Slot inserted = insertSlotAt ( size , lastSlot ) ; inserted . withTags ( TAG_EXTENSION ) ; } }
15475	public int size ( ) { long count = _NUM ; for ( Node < K , V > n = findFirst ( ) ; n != _NULL ; n = n . next ) { if ( n . getValidValue ( ) != _NULL ) ++ count ; } return ( count >= Integer . MAX_VALUE ) ? Integer . MAX_VALUE : ( int ) count ; }
15518	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output ) throws IOException { writeLines ( lines , lineEnding , output , Charset . defaultCharset ( ) ) ; }
15529	public void onMethodEnter ( @ NotNull String methodName ) { myCodeStructure . add ( methodName ) ; }
15548	public static InputStream toInputStream ( CharSequence input , String encoding ) throws IOException { return toInputStream ( input , Charsets . toCharset ( encoding ) ) ; }
15561	public static final void toString ( StringBuffer output , String str ) { if ( str == _NULL ) { output . append ( _CHAR _NULL _CHAR ) ; return ; } output . append ( toString ( str ) ) ; }
15593	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
15632	public static int copy ( Reader input , Writer output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
15646	public void writeUTF ( String value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeUTF ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
15650	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
15654	@ Deprecated public static String makeWhereStringFromFields ( List < ModelField > modelFields , Map < String , Object > fields , String operator , List < EntityConditionParam > entityConditionParams ) { return makeWhereStringFromFields ( new StringBuilder ( ) , modelFields , fields , operator , entityConditionParams ) . toString ( ) ; }
15672	public void discard ( ServiceRegistrar reg ) { synchronized ( registrars ) { if ( terminated ) { throw new IllegalStateException ( _CHAR discovery terminated _CHAR ) ; } if ( reg == _NULL ) return ; sendDiscarded ( reg , _NULL ) ; } }
15676	public static double deviation ( Iterator tuples , String field ) { return deviation ( tuples , field , DataLib . mean ( tuples , field ) ) ; }
15700	@ Override public void onPageStarted ( WebView view , String url , Bitmap favicon ) { i ( _NULL , _CHAR -- > onPageStarted ( ) url = _CHAR + url ) ; super . onPageStarted ( view , url , favicon ) ; onLoadPageStarted ( view , url , favicon ) ; }
15756	public void initFromIds ( ArrayList < Long > cellIds ) { initRawIds ( cellIds ) ; normalize ( ) ; }
15757	protected void addComponent ( XMLComponent component ) { if ( fComponents . contains ( component ) ) { return ; } fComponents . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
15782	public void deny ( PermissionFlag flag , Identity < ? > identity ) { deny ( flag , identity , defaultMessage ) ; }
15821	public boolean use_original_names ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR use - original - names _CHAR ) ; }
15852	public boolean with_all ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - all _CHAR ) ; }
15879	public static GsonBuilder createGsonBuilder ( ) { GsonBuilder gsonBuilder = new GsonBuilder ( ) . registerTypeAdapter ( Timestamp . class , new TimestampSerializer ( ) ) . registerTypeAdapter ( Timestamp . class , new TimestampDeserializer ( ) ) . registerTypeAdapter ( Object . class , new TagValueDeserializer ( ) ) ; return gsonBuilder ; }
15885	public static Uri createFileUri ( String path ) { if ( path . startsWith ( _CHAR file : // '' ) ) { return Uri . parse ( path ) ; } return Uri . fromFile ( new File ( path ) ) ; }
15889	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
15894	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( minStart > maxStart || maxStart > minStop || minStop > maxStop || minStop < _NUM ) { throw new InvalidObjectException ( _CHAR invalid durations _CHAR ) ; } }
15899	public ShapelessRecipe removeIngredient ( int count , Material ingredient ) { return removeIngredient ( count , ingredient , _NUM ) ; }
15908	@ Override public void startContentModel ( String elementName , Augmentations augs ) throws XNIException { if ( fValidation ) { fDTDElementDeclName = elementName ; fMixedElementTypes . clear ( ) ; } if ( fDTDGrammar != _NULL ) fDTDGrammar . startContentModel ( elementName , augs ) ; if ( fDTDContentModelHandler != _NULL ) { fDTDContentModelHandler . startContentModel ( elementName , augs ) ; } }
15913	public long timeMillis ( ) { return ( ( _perf . highResCounter ( ) * TO_MILLISECONDS ) / TICKS_PER_SECOND ) ; }
15919	public static double sumSq ( final double ... values ) throws MathIllegalArgumentException { return SUM_OF_SQUARES . evaluate ( values ) ; }
15932	public double optDouble ( String key ) { return optDouble ( key , Double . NaN ) ; }
15945	void subscribe ( final Set < Long > tagIds , final BaseListener listener , final boolean sendInitialUpdateSeperately ) throws CacheSynchronizationException { Set < Long > newTagIds = cacheSynchronizer . initTags ( tagIds ) ; handleTagSubscription ( tagIds , newTagIds , listener , sendInitialUpdateSeperately ) ; }
15955	public Contentlet executeSafeFirst ( ) { List < Contentlet > result = executeSafe ( ) ; if ( result . size ( ) > _NUM ) { return result . get ( _NUM ) ; } return _NULL ; }
15961	protected boolean isSideChannelActive ( ) { return System . getenv ( SIDECHANNEL_AUTH_ENV_NAME ) != _NULL ; }
15967	public Builder withDryRun ( boolean dryRun ) { myDryRun = dryRun ; return this ; }
15998	private void adjustBottomByAspectRatio ( RectF rect , float aspectRatio ) { rect . bottom = rect . top + rect . width ( ) / aspectRatio ; }
15999	public static ExecutorRequirement create ( ExecutorInfo executorInfo ) throws InvalidRequirementException { if ( executorInfo . getExecutorId ( ) . getValue ( ) . isEmpty ( ) ) { return createExecutorRequirement ( executorInfo ) ; } else { return getExistingExecutorRequirement ( executorInfo ) ; } }
16008	public static final String readString ( byte [ ] bytes , String charset ) throws IOException { return readString ( bytes , _NUM , bytes . length , Charset . forName ( charset ) ) ; }
16011	@ Override public void close ( ) throws IOException { fInputStream . close ( ) ; }
16016	public int read ( byte [ ] b ) throws IOException { return read ( b , _NUM , b . length ) ; }
16017	public static float [ ] evaluate ( String automaticFileName , String correctFileName ) { List < String > s1 = Arrays . asList ( UTF8FileIO . readLines ( automaticFileName ) ) ; List < String > s2 = Arrays . asList ( UTF8FileIO . readLines ( correctFileName ) ) ; return evaluate ( s1 , s2 ) ; }
16019	public final void notifyWhenRemoved ( DataRemovedListener listener ) { if ( listener == _NULL ) throw new IllegalArgumentException ( _CHAR Listener can not be _NULL _CHAR ) ; if ( isRemoved ( ) ) listener . dataRemoved ( this ) ; else getRemovedListeners ( ) . add ( new ComparableWeakReference ( listener ) ) ; }
16024	public static BigDecimal findProductMrpQoh ( String mrpId , GenericValue product , String facilityId , LocalDispatcher dispatcher , Delegator delegator ) { return findProductMrpQoh ( mrpId , product . getString ( _CHAR productId _CHAR ) , facilityId , dispatcher , delegator ) ; }
16031	protected void addXML11Component ( XMLComponent component ) { if ( fXML11Components . contains ( component ) ) { return ; } fXML11Components . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
16035	private void ensureDependenciesResolved ( ) { getDomainPermissions ( sysDomain ) ; }
16045	public boolean isPaymentsAdequate ( ) { return isPaymentsAdequate ( this . cart ) ; }
16047	private static InvocationConstraint reduce ( InvocationConstraint [ ] constraints , boolean allAbs ) { verify ( constraints , _NUM ) ; int n = reduce0 ( constraints ) ; if ( n == _NUM ) { return constraints [ _NUM ] ; } return new ConstraintAlternatives ( ( InvocationConstraint [ ] ) Constraint . trim ( constraints , n ) , allAbs ) ; }
16063	public boolean with_cse ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - cse _CHAR ) ; }
16069	public static void updateFloat ( VisualItem item , String field , float val ) { item . setFloat ( getStartField ( field ) , item . getFloat ( field ) ) ; item . setFloat ( field , val ) ; item . setFloat ( getEndField ( field ) , val ) ; }
16078	public static byte [ ] toByteArray ( InputStream input ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output ) ; return output . toByteArray ( ) ; }
16082	public static String checkCart ( HttpServletRequest request , HttpServletResponse response ) { ShoppingCart cart = getCartObject ( request ) ; if ( cart == _NULL || cart . size ( ) <= _NUM ) { return _CHAR cartEmpty _CHAR ; } return _CHAR success _CHAR ; }
16094	public static String formatDate ( Date date , String dateTimeFormat , Locale locale , TimeZone timeZone ) { return UtilDateTime . toDateFormat ( dateTimeFormat , timeZone , locale ) . format ( date ) ; }
16095	public PhiExpr newPhiExpr ( List < Value > args , List < Unit > preds ) { return new SPhiExpr ( args , preds ) ; }
16099	public static void writeStringToFile ( File file , String data , String encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
16114	@ Override public Node removeChild ( Node oldChild ) throws DOMException { super . removeChild ( oldChild ) ; int type = oldChild . getNodeType ( ) ; if ( type == Node . ELEMENT_NODE ) { docElement = _NULL ; } else if ( type == Node . DOCUMENT_TYPE_NODE ) { docType = _NULL ; } return oldChild ; }
16123	public synchronized long size ( ) { return size ; }
16157	public boolean hasMultiple ( ) { return multiple ; }
16197	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
16215	public static boolean isSetTrue ( String propertyName ) { String value = props . getProperty ( propertyName ) ; return _CHAR _BOOL _CHAR . equals ( value ) ; }
16235	public AudioSetBroadcastQuery targetIds ( Integer ... value ) { return unsafeParam ( _CHAR target_ids _CHAR , value ) ; }
16271	public boolean implicit_entry ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR implicit - entry _CHAR ) ; }
16276	public JSONWriter object ( ) throws JSONException { if ( this . mode == _CHAR ) { this . mode = _CHAR ; } if ( this . mode == _CHAR || this . mode == _CHAR ) { this . append ( _CHAR { _CHAR ) ; this . push ( new JSONObject ( ) ) ; this . comma = _BOOL ; return this ; } throw new JSONException ( _CHAR Misplaced object . '' ) ; }
16283	public ShapelessRecipe removeIngredient ( Material ingredient ) { return removeIngredient ( ingredient , _NUM ) ; }
16295	public DynamicTemplateParameterContext addParameter ( DynamicContextParameters param , String paramValue , boolean deleteOnExit , ContextInfo contextInfo ) { return addParameter ( param . getName ( ) , paramValue , deleteOnExit , contextInfo ) ; }
16300	public void requestSoftReset ( ) { SerialMessage msg = new SerialApiSoftResetMessageClass ( ) . doRequest ( ) ; msg . attempts = _NUM ; enqueue ( msg ) ; logger . debug ( _CHAR ZWave controller soft reset _CHAR ) ; }
16306	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
16310	protected void processBytes ( byte [ ] bytes , int offset , int length ) { }
16314	public boolean connectsToEmergencyNumber ( String number , String regionCode ) { return matchesEmergencyNumberHelper ( number , regionCode , _BOOL ) ; }
16318	public String makeStringLiteral ( String value ) { if ( value == _NULL ) { return this . literalDQStringDefault ; } else if ( value . isEmpty ( ) ) { return _CHAR \ _CHAR \ _CHAR _CHAR ; } else if ( ! value . contains ( _CHAR \ _CHAR _CHAR ) ) { return _CHAR r \ _CHAR _CHAR + value + _CHAR \ _CHAR _CHAR ; } else { return _CHAR \ _CHAR _CHAR + makeStringValue ( value ) + _CHAR \ _CHAR _CHAR ; } }
16330	public MarketEditCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
16342	public static String toString ( InputStream input ) throws IOException { return toString ( input , Charset . defaultCharset ( ) ) ; }
16344	@ Override protected void endOfFileHook ( EOFException e ) throws IOException , XNIException { reportFatalError ( _CHAR PrematureEOF _CHAR , _NULL ) ; }
16351	public static boolean isLegal ( boolean expression , String message ) { if ( ! expression ) throw new IllegalArgumentException ( message ) ; return expression ; }
16353	public final void close ( GsServerPacket closePacket , boolean forced ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } pendingClose = _BOOL ; isForcedClosing = forced ; sendMsgQueue . clear ( ) ; sendMsgQueue . addLast ( closePacket ) ; enableWriteInterest ( ) ; } }
16354	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
16356	public static String stripFileProtocol ( String uriString ) { if ( uriString . startsWith ( _CHAR file : // '' ) ) { uriString = uriString . substring ( 7 ) ; } return uriString ; }
16370	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output , String encoding ) throws IOException { writeLines ( lines , lineEnding , output , Charsets . toCharset ( encoding ) ) ; }
16371	String generateSharedPrefsString ( ) { return String . valueOf ( mDownloadId ) + _CHAR , _CHAR + mInstallNotifyURI ; }
16382	public AbstractDataConsumeFix createFixForUnknownError ( Throwable error ) { return new UnhandledErrorFix ( error ) ; }
16393	@ NotNull public OCROnImageAction ocrOnImage ( @ Nullable String language , boolean detectOrientation , @ NotNull String imageUrl ) { return new OCROnImageAction ( cognitiveContext , language , detectOrientation , imageUrl ) ; }
16428	public void pack ( ) { cellIds . trimToSize ( ) ; }
16441	private void adjustTopByAspectRatio ( RectF rect , float aspectRatio ) { rect . top = rect . bottom - rect . width ( ) / aspectRatio ; }
16484	private void preBufferAccess ( ) { _mostRecentUse = System . currentTimeMillis ( ) ; _lock . lock ( ) ; try { while ( _flushPending ) { _flushComplete . await ( ) ; } ensureBufferAvailable ( this ) ; ensureLoaded ( ) ; _bufferUseCount ++ ; } catch ( Exception e ) { throw Throwables . propagate ( e ) ; } finally { _lock . unlock ( ) ; } }
16488	@ Override public boolean next ( ) { if ( isLhsEmpty ) return _BOOL ; if ( s2 . next ( ) ) return _BOOL ; else if ( ! ( isLhsEmpty = ! s1 . next ( ) ) ) { s2 . beforeFirst ( ) ; return s2 . next ( ) ; } else { return _BOOL ; } }
16518	public static void updateInt ( VisualItem item , String field , int val ) { item . setInt ( getStartField ( field ) , item . getInt ( field ) ) ; item . setInt ( field , val ) ; item . setInt ( getEndField ( field ) , val ) ; }
16531	@ Deprecated @ Override public void monitor ( HostChangeMonitor < ServiceInstance > monitor ) throws MonitorException { throw new UnsupportedOperationException ( _CHAR NameServerSet does not support monitor _CHAR ) ; }
16543	public static Element addChildElementValue ( Element element , String childElementName , String childElementValue , Document document ) { Element newElement = addChildElement ( element , childElementName , document ) ; newElement . appendChild ( document . createTextNode ( childElementValue ) ) ; return newElement ; }
16546	public static ULong valueOf ( long value ) { return new ULong ( value ) ; }
16561	public boolean isPutFirst ( ) { return putFirst ; }
16606	public static int posToOrientation ( int position ) { if ( ! ( _NUM <= position && position < _NUM ) ) throw new IllegalArgumentException ( ) ; return POS_TO_ORIENTATION [ position ] ; }
16612	public static String toString ( InputStream input , String encoding ) throws IOException { return toString ( input , Charsets . toCharset ( encoding ) ) ; }
16614	public static void writeLines ( File file , Collection < ? > lines , String lineEnding , boolean append ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , append ) ; }
16636	public void onTouchSearchContentViewAck ( ) { mHasContentBeenTouched = _BOOL ; }
16644	public static void writeRepetitiveObject ( ObjectOutput out , Object obj ) throws IOException { if ( out instanceof MarshalOutputStream ) ( ( MarshalOutputStream ) out ) . writeRepetitiveObject ( obj ) ; else writeObject ( out , obj ) ; }
16657	public static Object find ( String [ ] urls ) throws FinderException { return spaceFinder . findService ( urls ) ; }
16658	public RingBuffer < T > start ( ) { final Sequence [ ] gatingSequences = consumerRepository . getLastSequenceInChain ( _BOOL ) ; ringBuffer . addGatingSequences ( gatingSequences ) ; checkOnlyStartedOnce ( ) ; for ( final ConsumerInfo consumerInfo : consumerRepository ) { consumerInfo . start ( executor ) ; } return ringBuffer ; }
16667	public static double distance ( Vector1D p1 , Vector1D p2 ) { return p1 . distance ( p2 ) ; }
16677	public Builder withRevision ( long revision ) { this . revision = revision ; return this ; }
16688	@ NonNull public static Observable < String > task2 ( @ NonNull Observable < String > observable ) { return Observable . just ( _CHAR _CHAR ) ; }
16704	public static JavaPairRDD < Integer , Iterable < Tuple2 < Integer , BigInteger >> > computeExpTable ( JavaSparkContext sc , FileSystem fs , BroadcastVars bVars , Query query , String queryInputFile , String outputDirExp ) { return computeExpTable ( sc , fs , bVars , query , queryInputFile , outputDirExp , _BOOL ) ; }
16717	@ Override public void handleMessage ( final SoapMessage msg ) throws Fault { if ( mode . isCheckOnly ( ) ) { logger . warn ( _CHAR Running in _CHAR + mode + _CHAR mode , no response signature verification available ! _CHAR ) ; } else if ( isErrorResponse ( msg ) ) { logger . warn ( _CHAR Validation error , no response signature verification available ! _CHAR ) ; } else { super . handleMessage ( msg ) ; } }
16727	public void print ( NumberFormat format , int width ) { print ( new PrintWriter ( System . out , _BOOL ) , format , width ) ; }
16746	public synchronized void onDestroy ( ) { cleanupService ( ) ; mHandler . getLooper ( ) . quit ( ) ; }
16753	public void preventHandlingCurrentSelectionModification ( ) { mShouldHandleSelectionModification = _BOOL ; }
16756	@ Override public void textDecl ( String version , String encoding , Augmentations augs ) throws XNIException { }
16761	public ExtendedIndexIterator < TemplateCacheInfo > establishScan ( K startPos , short relation , K endPos , boolean endPosInclusive ) { return establishScan ( startPos , relation , endPos , endPosInclusive , _BOOL ) ; }
16769	static public boolean domWriter ( Node node , PrintStream ps , String prefix ) { ps . print ( XML_VERSION_TAG ) ; return _domWriter ( node , ps , prefix ) ; }
16770	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
16771	public Writer write ( Writer writer ) throws JSONException { return this . write ( writer , _NUM , _NUM ) ; }
16775	public synchronized long size ( ) { return size ; }
16795	public Record verify ( List < DataType > values ) throws SchemaException { return _NULL ; }
16796	public JSONWriter array ( ) throws JSONException { if ( this . mode == _CHAR || this . mode == _CHAR || this . mode == _CHAR ) { this . push ( _NULL ) ; this . append ( _CHAR [ _CHAR ) ; this . comma = _BOOL ; return this ; } throw new JSONException ( _CHAR Misplaced array . '' ) ; }
16811	@ Override public boolean isKeyDown ( ) { boolean bReturn = this . isOverridingPresses ? this . isDown : super . isKeyDown ( ) ; return bReturn ; }
16813	public PhotosEditCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
16857	protected String readAnnotation ( ) throws IOException , ClassNotFoundException { return ( locIn == _NULL ? _NULL : ( String ) locIn . readObject ( ) ) ; }
16858	public boolean isUncertain ( ) { return myStatus == Status . UNCERTAIN || ( myStatus == Status . INVALID && myErrorNode == _NULL ) ; }
16859	public Builder conditionalCopyValueTransform ( String columnToReplace , String sourceColumn , Condition condition ) { return transform ( new ConditionalCopyValueTransform ( columnToReplace , sourceColumn , condition ) ) ; }
16873	public boolean connect ( ) { if ( mService != _NULL ) Log . e ( TAG , _CHAR Already connected . '' ) ; Intent intent = new Intent ( GSA_SERVICE ) . setPackage ( GSAState . SEARCH_INTENT_PACKAGE ) ; return mContext . bindService ( intent , mConnection , Context . BIND_AUTO_CREATE ) ; }
16876	@ Override public void run ( ) { try { AudioSystem . write ( m_audioInputStream , m_targetType , m_outputFile ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
16886	public String guards ( ) { return soot . PhaseOptions . getString ( options , _CHAR guards _CHAR ) ; }
16887	public void abort ( Executor executor ) throws SQLException { throw new UnsupportedOperationException ( _CHAR abort _CHAR ) ; }
16889	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
16897	public int read ( ) throws IOException { if ( frameSize != _NUM ) { throw new IOException ( _CHAR can not read a single byte if frame size > 1 '' ) ; } byte [ ] data = new byte [ _NUM ] ; int temp = read ( data ) ; if ( temp <= _NUM ) { return - _NUM ; } return data [ _NUM ] & _NUM ; }
16911	@ Nullable public static PsiFileSystemItem asFileSystemItemSearch ( PsiElement elementToSearch ) { if ( elementToSearch instanceof PsiFileSystemItem ) { return ( PsiFileSystemItem ) elementToSearch ; } return asFileSearch ( elementToSearch ) ; }
16919	protected boolean isFallbackElement ( QName element ) { return element . localpart . equals ( XINCLUDE_FALLBACK ) && hasXIncludeNamespace ( element ) ; }
16941	public boolean types_for_sites ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR types - for - sites '' ) ; }
16955	public static long tankiness ( final PokemonId pokemonId , final int defenseIV , final int staminaIV ) { final PokemonMeta meta = PokemonMetaRegistry . getMeta ( pokemonId ) ; return ( meta . getBaseStamina ( ) + staminaIV ) * ( meta . getBaseDefense ( ) + defenseIV ) ; }
16967	public static < T > OperatorSemaphore < T > semaphoreLatestCache ( Observable < Boolean > go ) { return new OperatorSemaphore < > ( go , _BOOL , _BOOL ) ; }
16977	public static boolean PM ( long packedDateTime ) { return PackedLocalTime . PM ( time ( packedDateTime ) ) ; }
16987	@ Override protected final void invalidateQuietly ( final DataTag tag , final TagQualityStatus statusToAdd , final String description , final Timestamp timestamp ) { dataTagCacheObjectFacade . addQualityFlag ( tag , statusToAdd , description ) ; ( ( DataTagCacheObject ) tag ) . setCacheTimestamp ( timestamp ) ; }
17001	protected AdsGetDemographicsQuery period ( String value ) { return unsafeParam ( _CHAR period _CHAR , value ) ; }
17010	public static void onCreate ( Activity activity ) { FieldsRetainer < Activity > retainer = findFieldsRetainer ( activity . getClass ( ) ) ; if ( retainer != _NULL ) { retainer . onCreate ( activity ) ; } }
17012	@ Override public void textDecl ( String version , String encoding , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL ) { fDocumentHandler . textDecl ( version , encoding , augs ) ; } }
17013	void onSaveFast ( DataSupport baseObj ) throws SecurityException , IllegalArgumentException , NoSuchMethodException , IllegalAccessException , InvocationTargetException { ignoreAssociations = _BOOL ; onSave ( baseObj ) ; }
17016	public Iterator < Map . Entry < T , Long >> entrySetIterator ( ) { return freqTable . entrySet ( ) . iterator ( ) ; }
17017	public boolean implies ( ProtectionDomain domain , Permission permission ) { return ( domain == myDomain ) || getCurrentSubPolicy ( ) . implies ( domain , permission ) ; }
17034	public int keyAt ( int index ) { if ( mGarbage ) { gc ( ) ; } return mKeys [ index ] ; }
17035	public static Double calcMaxDecisions ( final long min_impressions , final long max_impressions ) { if ( min_impressions <= _NUM ) { throw new IllegalArgumentException ( _CHAR Minimum number of unique impressions must be positive . '' ) ; } if ( max_impressions <= _NUM ) { throw new IllegalArgumentException ( _CHAR Maximum number of unique impressions must be positive . '' ) ; } return log ( _NUM . _NUM * max_impressions / min_impressions ) ; }
17041	private String readBasicTag ( XmlPullParser parser , String tag ) throws IOException , XmlPullParserException { parser . require ( XmlPullParser . START_TAG , ns , tag ) ; String result = readText ( parser ) ; parser . require ( XmlPullParser . END_TAG , ns , tag ) ; return result ; }
17066	public static double distance ( Vector2D p1 , Vector2D p2 ) { return p1 . distance ( p2 ) ; }
17079	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
17124	public void sendMessage ( String mac , MessageItem item , boolean needResponse , OnSendMessageListener listener ) { if ( mCurrStatus != STATUS . CONNECTED ) connectDevice ( mac , listener ) ; mMessageQueue . add ( item ) ; WriteRunnable writeRunnable = new WriteRunnable ( listener , needResponse ) ; mExecutorService . submit ( writeRunnable ) ; }
17168	@ Override public void publish ( String topic , AWSIotQos qos , String payload , long timeout ) throws AWSIotException , AWSIotTimeoutException { super . publish ( topic , qos , payload , timeout ) ; }
17185	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augs ) throws XNIException { if ( fAnnotationDepth > - _NUM ) { schemaDOM . processingInstruction ( target , data ) ; } }
17213	public double optDouble ( int index , double defaultValue ) { try { return this . getDouble ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
17227	public static boolean equalsOnSystem ( String filename1 , String filename2 ) { return equals ( filename1 , filename2 , _BOOL , IOCase . SYSTEM ) ; }
17231	public boolean topo_sort ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR topo - sort _CHAR ) ; }
17249	public static boolean isUnmatched ( int mod ) { return ( mod & NOTIFY_UNMATCHED ) != _NUM ; }
17251	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
17255	private RuntimeException propagateTableNotStashed ( TableNotStashedException e ) throws TableNotStashedException , UnknownTableException { if ( _dataStore . getTableExists ( e . getTable ( ) ) ) { throw e ; } throw new UnknownTableException ( e . getTable ( ) ) ; }
17271	public void putAll ( TObjectIntHashMap < K > map ) { for ( TObjectIntIterator < K > it = map . iterator ( ) ; it . hasNext ( ) ; ) { put ( it . key ( ) , it . value ( ) ) ; } }
17272	@ JsOverlay final public < R extends JsPlainObj , O extends JsPlainObj > R merge ( O toMerge ) { return JsHelper . merge ( this , toMerge ) ; }
17277	public static JSONArray toJSONArray ( XMLTokener x ) throws JSONException { return ( JSONArray ) parse ( x , _BOOL , _NULL ) ; }
17284	private void compactAbstractionChain ( D d3 , D d2 ) { if ( d3 != d2 ) { D pred = d3 . getPredecessor ( ) ; if ( pred != _NULL && pred != d2 ) d3 . setPredecessor ( d2 ) ; } }
17286	@ Override public void startGroup ( Augmentations augs ) throws XNIException { }
17306	public void enableDashedLine ( float lineLength , float spaceLength , float phase ) { mDashPathEffect = new DashPathEffect ( new float [ ] { lineLength , spaceLength } , phase ) ; }
17313	public static double max ( final double [ ] values , final int begin , final int length ) throws MathIllegalArgumentException { return MAX . evaluate ( values , begin , length ) ; }
17324	public PollsGetVotersQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
17326	public static void requestPermission ( CordovaPlugin plugin , int requestCode , String permission ) { PermissionHelper . requestPermissions ( plugin , requestCode , new String [ ] { permission } ) ; }
17350	public S2LatLngRect expanded ( S2LatLng margin ) { if ( isEmpty ( ) ) { return this ; } return new S2LatLngRect ( lat . expanded ( margin . lat ( ) . radians ( ) ) . intersection ( fullLat ( ) ) , lng . expanded ( margin . lng ( ) . radians ( ) ) ) ; }
17352	public void abort ( ) { }
17356	private synchronized void notifyListeners ( final Tag clone ) { for ( BaseListener updateListener : listeners ) { try { updateListener . onUpdate ( clone ) ; } catch ( Exception e ) { LOG . error ( _CHAR notifyListeners ( ) : error notifying DataTagUpdateListeners _CHAR , e ) ; } } }
17358	public Vector3f addLocal ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x += vec . x ; y += vec . y ; z += vec . z ; return this ; }
17370	public BoardGetTopicsQuery topicIds ( Integer ... value ) { return unsafeParam ( _CHAR topic_ids _CHAR , value ) ; }
17374	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
17388	public static long floorMod ( final long a , final long b ) { if ( b == _NUM ) { throw new MathRuntimeException ( LocalizedCoreFormats . ZERO_DENOMINATOR ) ; } final long m = a % b ; if ( ( a ^ b ) >= _NUM || m == _NUM ) { return m ; } else { return b + m ; } }
17390	public boolean isActiveWhenBackup ( ) { return activeWhenBackup ; }
17403	public void registerEditor ( RTEditText editor , boolean useRichTextEditing ) { mEditors . put ( editor . getId ( ) , editor ) ; editor . register ( this , mRTApi ) ; editor . setRichTextEditing ( useRichTextEditing , _BOOL ) ; updateToolbarVisibility ( ) ; }
17404	public Bundle onSaveInstanceState ( ) { return _NULL ; }
17406	void removeLocals ( ) { locals = new HashMultiMap ( ) ; backLocals = new HashMultiMap ( ) ; }
17422	public String makeStringLiteralSQ ( String value ) { if ( value == _NULL ) { return this . literalSQStringDefault ; } else if ( value . isEmpty ( ) ) { return _CHAR _CHAR _CHAR ; } else if ( ! value . contains ( _CHAR _CHAR_CHAR_CHAR _CHAR + value + _CHAR _CHAR_CHAR_CHAR _CHAR + makeStringValueSQ ( value ) + _CHAR _CHAR_CHAR ; } }
17437	public boolean implies ( Permission permission ) { if ( ! ( permission instanceof GrantPermission ) ) { return _BOOL ; } if ( implier == _NULL ) { Implier imp = new Implier ( ) ; imp . add ( this ) ; implier = imp ; } return implier . implies ( permission ) ; }
17438	public EntityQuery where ( EntityCondition entityCondition ) { this . whereEntityCondition = entityCondition ; return this ; }
17443	private void finalizeRecord ( ) { myPage . setVal ( currentPos , new IntegerConstant ( getLastRecordPosition ( ) ) ) ; setPreviousNextRecordPosition ( currentPos + pointerSize ) ; setLastRecordPosition ( currentPos ) ; currentPos += pointerSize ; setNextRecordPosition ( currentPos ) ; currentPos += pointerSize ; }
17476	public boolean ignore_wrong_staticness ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR ignore - wrong - staticness _CHAR ) ; }
17483	protected void writeStreamHeader ( ) throws IOException { }
17488	public void forceNSDecl ( String uri ) { forcedDeclTable . put ( uri , Boolean . TRUE ) ; }
17489	@ Override public void publish ( String topic , AWSIotQos qos , byte [ ] payload ) throws AWSIotException { super . publish ( topic , qos , payload ) ; }
17490	public boolean isStartVisible ( int row ) { return getBoolean ( row , VisualItem . STARTVISIBLE ) ; }
17507	public static List < String > readLines ( InputStream input ) throws IOException { return readLines ( input , Charset . defaultCharset ( ) ) ; }
17513	public float smallestAngleBetween ( Vector2f otherVector ) { float dotProduct = dot ( otherVector ) ; float angle = FastMath . acos ( dotProduct ) ; return angle ; }
17540	public Builder maxBounds ( LatLngBounds maxBounds ) { this . maxBounds = maxBounds ; return this ; }
17563	public Line sharedLineWith ( final Vertex vertex ) { for ( final Line line1 : lines ) { for ( final Line line2 : vertex . lines ) { if ( line1 == line2 ) { return line1 ; } } } return _NULL ; }
17592	@ Override public void endEntity ( String name , Augmentations augs ) throws XNIException { super . endEntity ( name , augs ) ; if ( fDocumentHandler != _NULL && name . equals ( _CHAR [ xml ] _CHAR ) ) { fDocumentHandler . endDocument ( _NULL ) ; } }
17600	public static JavaRDD < List < List < Writable >> > executeSequenceToSequence ( JavaRDD < List < List < Writable >> > inputSequence , TransformProcess transformProcess ) { if ( ! ( transformProcess . getFinalSchema ( ) instanceof SequenceSchema ) ) { throw new IllegalStateException ( _CHAR Can not return non - sequence data with this method _CHAR ) ; } return execute ( _NULL , inputSequence , transformProcess ) . getSecond ( ) ; }
17603	public JSONArray put ( int index , boolean value ) throws JSONException { put ( index , value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
17612	@ Override public MaryData process ( MaryData d ) throws Exception { return d ; }
17622	public S1Interval complement ( ) { if ( lo ( ) == hi ( ) ) { return full ( ) ; } return new S1Interval ( hi ( ) , lo ( ) , _BOOL ) ; }
17633	protected boolean isValidScheme ( String scheme ) { if ( scheme == _NULL ) { return _BOOL ; } if ( ! SCHEME_PATTERN . matcher ( scheme ) . matches ( ) ) { return _BOOL ; } if ( isOff ( ALLOW_ALL_SCHEMES ) && ! allowedSchemes . contains ( scheme . toLowerCase ( Locale . ENGLISH ) ) ) { return _BOOL ; } return _BOOL ; }
17634	protected boolean isTopLevelIncludedItem ( ) { return isTopLevelIncludedItemViaInclude ( ) || isTopLevelIncludedItemViaFallback ( ) ; }
17642	public void enableDashedLine ( float lineLength , float spaceLength , float phase ) { mDashPathEffect = new DashPathEffect ( new float [ ] { lineLength , spaceLength } , phase ) ; }
17648	@ Override public void close ( ) throws IOException { }
17652	public int equivHashCode ( ) { return hashCode ( ) ; }
17655	public synchronized VisualTupleSet add ( String group , TupleSet data ) { return add ( group , data , _NULL ) ; }
17663	public T walkInOptimizedOrder ( final FieldVectorChangingVisitor < T > visitor ) { return walkInDefaultOrder ( visitor ) ; }
17664	public static void logPreferenceState ( ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchPreferenceState _CHAR , getPreferenceValue ( ) , PREFERENCE_HISTOGRAM_BOUNDARY ) ; }
17698	public static double distanceInf ( Vector3D v1 , Vector3D v2 ) { return v1 . distanceInf ( v2 ) ; }
17710	private static int findeol ( byte b [ ] , int pos , int len ) { int end = pos + len ; int i = pos ; while ( i < end ) { if ( b [ i ++ ] == _CHAR ) { return i - pos ; } } return - _NUM ; }
17720	@ Override public void textDecl ( String version , String encoding , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL ) { fDocumentHandler . textDecl ( version , encoding , augs ) ; } }
17730	public void check ( ) { while ( _BOOL ) { switch ( state ) { case INITIALIZE : try { synchronized ( this ) { if ( state == READY ) { return ; } wait ( _NUM ) ; } } catch ( InterruptedException e ) { } break ; case READY : return ; default : throw new RemoteExceptionWrapper ( new NoSuchObjectException ( _CHAR service is unavailable _CHAR ) ) ; } } }
17732	public void reset ( ) { for ( int i = _NUM ; i < counters . length ; ++ i ) { counters [ i ] . set ( _NUM ) ; } counters [ _NUM ] . set ( _initialValue ) ; }
17781	@ ManagedOperation ( description = _CHAR Prepare server for shutdown _CHAR ) public void prepareForShutdown ( ) { if ( running . compareAndSet ( _BOOL , _BOOL ) ) { log . info ( _CHAR Preparing server for shutdown '' ) ; lifecycleProcessor . stop ( ) ; } }
17792	@ Override public < I > void hear ( TypeLiteral < I > typeLiteral , final TypeEncounter < I > typeEncounter ) { if ( typeLiteral . getRawType ( ) . isAnnotationPresent ( PageObject . class ) ) { typeEncounter . register ( new PageObjectInjectorListener ( typeEncounter ) ) ; } }
17802	public static List < String > readLines ( InputStream input ) throws IOException { return readLines ( input , Charset . defaultCharset ( ) ) ; }
17803	public boolean isUnknown ( ) { return _BOOL ; }
17813	public boolean isHidden ( ) { return isHidden ; }
17839	public static Uuid read ( InputStream in ) throws IOException { long bits0 = readLong ( in ) ; long bits1 = readLong ( in ) ; return create ( bits0 , bits1 ) ; }
17840	protected void keyTyped ( char typedChar , int keyCode ) { if ( this . buttonId != _NULL ) { buttonId . FunctionExt = typedChar ; this . buttonId = _NULL ; } else { try { super . keyTyped ( typedChar , keyCode ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } }
17841	@ NotNull public static String formatContinuation ( @ NotNull String message ) { return String . format ( _CHAR + % s _CHAR , message ) ; }
17864	public < T > String makeStringLiteralSQ ( T value ) { return ( value != _NULL ) ? ( _CHAR _CHAR_CHAR_CHAR _CHAR ) : this . literalSQGeneralDefault ; }
17869	public int paramStatus ( int param ) { return internalParamStatus ( cacheNode ( new PurityParamNode ( param ) ) ) ; }
17871	public static void ensureDir ( String path ) throws IllegalArgumentException { File dir = new File ( path ) ; if ( dir . isDirectory ( ) ) return ; else if ( dir . exists ( ) ) throw new IllegalArgumentException ( path + _CHAR exists , but not a dir _CHAR ) ; if ( ! dir . mkdirs ( ) ) throw new IllegalArgumentException ( path + _CHAR : can not create _CHAR ) ; }
17873	public boolean precise_newinstance ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR precise - newinstance _CHAR ) ; }
17884	public boolean onStartNestedScroll ( CoordinatorLayout coordinatorLayout , V child , View directTargetChild , View target , int nestedScrollAxes ) { return _BOOL ; }
17885	@ Override public void onCreate ( @ Nullable Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mPrefs = PreferenceManager . getDefaultSharedPreferences ( getActivity ( ) ) ; mStartDrawable = ContextCompat . getDrawable ( getActivity ( ) , R . drawable . ic_start_24dp ) ; mPauseDrawable = ContextCompat . getDrawable ( getActivity ( ) , R . drawable . ic_pause_24dp ) ; }
17917	public static JavaRDD < List < Writable >> executeSequenceToSeparate ( JavaRDD < List < List < Writable >> > inputSequence , TransformProcess transformProcess ) { if ( transformProcess . getFinalSchema ( ) instanceof SequenceSchema ) { throw new IllegalStateException ( _CHAR Can not return sequence data with this method _CHAR ) ; } return execute ( _NULL , inputSequence , transformProcess ) . getFirst ( ) ; }
17922	void show ( ) { if ( mIsVisible ) return ; mIsVisible = _BOOL ; mHeightPx = Math . round ( mDefaultHeightPx ) ; invalidate ( ) ; }
17935	public final void close ( AionServerPacket closePacket , boolean forced ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } pendingClose = _BOOL ; isForcedClosing = forced ; sendMsgQueue . clear ( ) ; sendMsgQueue . addLast ( closePacket ) ; enableWriteInterest ( ) ; } }
17941	public static < T extends ConfigurationEntity > void validateIsCreate ( List < T > configurationObjects ) { for ( T config : configurationObjects ) { if ( ! config . isCreated ( ) ) { throw new IllegalArgumentException ( config . getClass ( ) + _CHAR Created through the wrong builder pattern . '' + _CHAR Please use the _CHAR builder provided by the class of the object _CHAR ) ; } } }
17947	public void removeUnlocked ( IObjectInfo < T > oi ) { removeNode ( ( ConcurrentSLObjectInfo ) oi , _BOOL ) ; }
17967	private void computeThreadsNumber ( ) { numOfThreads = Integer . parseInt ( prop . getProperty ( NUM_THREADS_PROPERTY ) ) ; if ( numOfThreads == _NUM ) numOfThreads = Runtime . getRuntime ( ) . availableProcessors ( ) ; if ( numOfThreads > MAX_NUMBER_OF_THREADS ) numOfThreads = MAX_NUMBER_OF_THREADS ; }
17973	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
17987	public String reflection_log ( ) { return soot . PhaseOptions . getString ( options , _CHAR reflection - log _CHAR ) ; }
18019	public void addItemRelation ( String relationName , Item item ) { relations . setObject ( relationName , item ) ; }
18044	public DateColumn selectIf ( IntPredicate predicate ) { DateColumn column = emptyCopy ( ) ; IntIterator iterator = intIterator ( ) ; while ( iterator . hasNext ( ) ) { int next = iterator . nextInt ( ) ; if ( predicate . test ( next ) ) { column . add ( next ) ; } } return column ; }
18045	public Future < Long > markEndOfStream ( ) { synchronized ( this ) { try { writeEndOfStreamMarker ( ) ; } catch ( IOException e ) { return Future . exception ( e ) ; } streamEnded = _BOOL ; } return flushAndCommit ( ) ; }
18050	@ Override public void pcdata ( Augmentations augs ) { fMixed = _BOOL ; if ( fDTDGrammar != _NULL ) fDTDGrammar . pcdata ( augs ) ; if ( fDTDContentModelHandler != _NULL ) { fDTDContentModelHandler . pcdata ( augs ) ; } }
18052	public static boolean calculatePhysicalEvasion ( float diff , int upperCap ) { diff = diff * _NUM . _NUM + _NUM ; if ( diff > upperCap ) { diff = upperCap ; } return Rnd . nextInt ( _NUM ) < diff ; }
18075	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_DEGRADE_LEVEL ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
18077	public int available ( ) { return _count - _position ; }
18100	public boolean rta ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR rta _CHAR ) ; }
18104	public EntityQuery select ( Set < String > fieldsToSelect ) { this . fieldsToSelect = fieldsToSelect ; return this ; }
18114	public synchronized long resetByteCount ( ) { long tmp = this . count ; this . count = _NUM ; return tmp ; }
18128	public Builder dashArray ( String dashArray ) { this . dashArray = dashArray ; return this ; }
18132	public void computeFromPoints ( FloatBuffer points ) { containAABB ( points ) ; }
18147	public void print ( NumberFormat format , int width ) { print ( new PrintWriter ( System . out , _BOOL ) , format , width ) ; }
18148	@ Deprecated public static JsonArray readFrom ( Reader reader ) throws IOException { return JsonValue . readFrom ( reader ) . asArray ( ) ; }
18159	public boolean naive_side_effect ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR naive - side - effect _CHAR ) ; }
18165	public int available ( ) throws IOException { int temp = stream . available ( ) ; if ( ( frameLength != AudioSystem . NOT_SPECIFIED ) && ( ( temp / frameSize ) > ( frameLength - framePos ) ) ) { return ( int ) ( frameLength - framePos ) * frameSize ; } else { return temp ; } }
18192	public < T > String makeStringLiteral ( T value ) { return ( value != _NULL ) ? ( _CHAR \ _CHAR _CHAR + makeStringValue ( value ) + _CHAR \ _CHAR _CHAR ) : this . literalDQGeneralDefault ; }
18208	protected boolean isReflex ( Vector2 p0 , Vector2 p , Vector2 p1 ) { return right ( p1 , p0 , p ) ; }
18212	public static HarResponse createHarResponseForFailure ( ) { return new HarResponse ( HTTP_STATUS_CODE_FOR_FAILURE , HTTP_REASON_PHRASE_FOR_FAILURE , HTTP_VERSION_STRING_FOR_FAILURE ) ; }
18221	public Side whichSide ( Vector3f point ) { float dis = pseudoDistance ( point ) ; if ( dis < _NUM ) { return Side . Negative ; } else if ( dis > _NUM ) { return Side . Positive ; } else { return Side . None ; } }
18229	@ Override public void onConnectionFailure ( ) { super . onConnectionFailure ( ) ; }
18247	@ Override public int hashCode ( ) { if ( fExpandedSystemId != _NULL ) { return fExpandedSystemId . hashCode ( ) ; } if ( fPublicId != _NULL ) { return fPublicId . hashCode ( ) ; } return _NUM ; }
18254	@ Override public Object [ ] toArray ( ) { return backedSet . toArray ( ) ; }
18270	public boolean verbose ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR verbose _CHAR ) ; }
18290	public Boolean shouldAllowBridgeAccess ( String url ) { return shouldAllowNavigation ( url ) ; }
18294	private void resize ( ) { Matrix [ ] newData = new Matrix [ data . length * _NUM ] ; for ( int i = _NUM ; i < data . length ; i ++ ) newData [ i ] = data [ i ] ; data = newData ; }
18307	@ Deprecated protected boolean isRequired ( AnnotationIntrospector intr ) { return _metadata . isRequired ( ) ; }
18315	public static File toFile ( URL url ) { if ( url == _NULL || ! _CHAR file _CHAR . equalsIgnoreCase ( url . getProtocol ( ) ) ) { return _NULL ; } else { String filename = url . getFile ( ) . replace ( _CHAR , File . separatorChar ) ; filename = decodeUrl ( filename ) ; return new File ( filename ) ; } }
18316	public static boolean nanSafeEqualsDoubles ( Double d1 , Double d2 ) { Boolean xIsNan = Double . isNaN ( d1 ) ; Boolean yIsNan = Double . isNaN ( d2 ) ; if ( ( xIsNan && yIsNan ) || ( d1 . doubleValue ( ) == d2 . doubleValue ( ) ) ) { return _BOOL ; } return _BOOL ; }
18324	@ Override public void endGeneralEntity ( String name , Augmentations augs ) throws XNIException { }
18328	public boolean isCurrentFileBestMatchFor ( @ NotNull FolderConfiguration config ) { if ( myResources != _NULL && myFile != _NULL ) { VirtualFile match = myResources . getMatchingFile ( myFile , getResourceType ( ) , config ) ; if ( match != _NULL ) { return myFile . equals ( match ) ; } else { LOG . info ( _CHAR Current file is not a match for the given config . '' ) ; } } return _BOOL ; }
18329	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; registrarID = new ServiceID ( in ) ; if ( server == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL server _CHAR ) ; } }
18354	public static void post ( Runnable r ) { sMainHandler . post ( r ) ; }
18359	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( classes ) ; }
18386	public static String toString ( InputStream input ) throws IOException { return toString ( input , Charset . defaultCharset ( ) ) ; }
18392	public boolean stopWhenTouchingEnd ( ) { return stopWhenTouchingEnd ; }
18423	public List < Configuration > loadConfigurationsNoJars ( String name ) throws IOException { return loadResourcesWithName ( name ) . filter ( _NULL ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; }
18428	public void download ( String remoteFileName , File localFile ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { download ( remoteFileName , localFile , _NUM , _NULL ) ; }
18430	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
18450	public static String toString ( Reader input ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw ) ; return sw . toString ( ) ; }
18454	protected void newline ( ) { if ( mode == LexerMode . SyntaxHighlighting ) { addToken ( TokenKind . NEWLINE , pos - _NUM , pos ) ; return ; } if ( openParenStackDepth > _NUM ) { newlineInsideExpression ( ) ; } else { newlineOutsideExpression ( ) ; } }
18456	public Builder doubleClickZoom ( Boolean doubleClickZoom ) { this . doubleClickZoom = doubleClickZoom ; return this ; }
18458	public boolean string_constants ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR string - constants _CHAR ) ; }
18463	public synchronized boolean removeFrom ( int from ) { if ( from == _NUM ) { throw new RuntimeException ( _CHAR call to removeFrom with bad argument _CHAR ) ; } this . from & =~ from ; return ( this . from == _NUM ) ; }
18465	private String genGetColumnMethod ( Field field ) { return genGetColumnMethod ( field . getType ( ) ) ; }
18472	public boolean pre_jimplify ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR pre - jimplify _CHAR ) ; }
18482	public double optDouble ( int index ) { return optDouble ( index , Double . NaN ) ; }
18484	public static void copy ( byte [ ] input , Writer output , String encoding ) throws IOException { ByteArrayInputStream in = new ByteArrayInputStream ( input ) ; copy ( in , output , encoding ) ; }
18485	public AttributesImpl atts ( ) { return theAtts ; }
18487	public static String prettyPrintArgv ( List < String > argv ) { StringBuilder buf = new StringBuilder ( ) ; for ( String arg : argv ) { if ( buf . length ( ) > _NUM ) { buf . append ( _CHAR ) ; } buf . append ( shellEscape ( arg ) ) ; } return buf . toString ( ) ; }
18490	public boolean rta ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR rta _CHAR ) ; }
18497	public static String generateKey ( String imageUri , ImageSize targetSize ) { return new StringBuilder ( imageUri ) . append ( URI_AND_SIZE_SEPARATOR ) . append ( targetSize . getWidth ( ) ) . append ( WIDTH_AND_HEIGHT_SEPARATOR ) . append ( targetSize . getHeight ( ) ) . toString ( ) ; }
18498	public static String encodeQuery ( String query ) { String retString ; retString = replaceString ( query , _CHAR % _CHAR , _CHAR % _NUM _CHAR ) ; retString = replaceString ( retString , _CHAR _CHAR , _CHAR % _NUM _CHAR ) ; return retString ; }
18507	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { if ( isRawType ( ) ) return _BOOL ; for ( int i = _NUM ; i < getNumArgument ( ) ; ++ i ) { if ( ! getArgument ( i ) . type ( ) . isWildcard ( ) ) return _BOOL ; } return _BOOL ; } finally { } }
18545	public synchronized long size ( ) { return size ; }
18555	public synchronized VisualGraph addGraph ( String group , Graph graph , Predicate filter ) { return addGraph ( group , graph , filter , VisualItem . SCHEMA , VisualItem . SCHEMA ) ; }
18580	public String reflection_log ( ) { return soot . PhaseOptions . getString ( options , _CHAR reflection - log _CHAR ) ; }
18596	public static int tryParseInt ( String toParse , String defaultValue ) { int result ; try { result = Integer . parseInt ( toParse ) ; } catch ( NumberFormatException ex ) { result = Integer . parseInt ( defaultValue ) ; } return result ; }
18623	public void addLayout ( LoadingLayout layout ) { if ( _NULL != layout ) { mLoadingLayouts . add ( layout ) ; } }
18629	public static List < String > readLines ( InputStream input , String encoding ) throws IOException { return readLines ( input , Charsets . toCharset ( encoding ) ) ; }
18643	public static boolean equalsOnSystem ( String filename1 , String filename2 ) { return equals ( filename1 , filename2 , _BOOL , IOCase . SYSTEM ) ; }
18648	@ Override public void onClick ( View v ) { if ( v . getId ( ) == R . id . upload_files_btn_cancel ) { setResult ( RESULT_CANCELED ) ; finish ( ) ; } else if ( v . getId ( ) == R . id . upload_files_btn_upload ) { new CheckAvailableSpaceTask ( ) . execute ( mBehaviourSpinner . getSelectedItemPosition ( ) == _NUM ) ; } }
18662	public boolean field_based ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR field - based _CHAR ) ; }
18663	public static Builder newInstance ( VerticalStepperFormLayout stepperLayout , String [ ] stepTitles , VerticalStepperForm stepperImplementation , Activity activity ) { return new Builder ( stepperLayout , stepTitles , stepperImplementation , activity ) ; }
18675	public Vector2f subtract ( Vector2f vec , Vector2f store ) { if ( store == _NULL ) { store = new Vector2f ( ) ; } store . x = x - vec . x ; store . y = y - vec . y ; return store ; }
18678	public float expansion_factor ( ) { return soot . PhaseOptions . getFloat ( options , _CHAR expansion - factor _CHAR ) ; }
18680	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
18683	public boolean ignore_types ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR ignore - types _CHAR ) ; }
18692	protected void printComponent ( Graphics g ) { boolean wasHighQuality = m_highQuality ; try { m_highQuality = _BOOL ; paintDisplay ( ( Graphics2D ) g , getSize ( ) ) ; } finally { m_highQuality = wasHighQuality ; } }
18694	public static void cleanupParagraphs ( RTEditText editor , Effect ... exclude ) { cleanupParagraphs ( editor , Effects . ALIGNMENT , exclude ) ; cleanupParagraphs ( editor , Effects . INDENTATION , exclude ) ; cleanupParagraphs ( editor , Effects . BULLET , exclude ) ; cleanupParagraphs ( editor , Effects . NUMBER , exclude ) ; }
18703	public boolean equals ( XMLGrammarDescription desc1 , XMLGrammarDescription desc2 ) { return desc1 . equals ( desc2 ) ; }
18745	private void handleException ( final Call call , final Exception e , final Callback callback ) { if ( call . isCanceled ( ) ) { callback . onCancellation ( ) ; } else { callback . onFailure ( e ) ; } }
18750	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
18757	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
18813	public boolean fullyEquals ( Object obj ) { if ( equals ( obj ) ) { MarshalledInstance other = ( MarshalledInstance ) obj ; return Arrays . equals ( locBytes , other . locBytes ) ; } return _BOOL ; }
18814	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
18848	public void addSupressionDirective ( Element elem , String directive ) { diagSuppressor . addSuppressionDirective ( elem , directive , configAspects ) ; }
18853	public static Direction directionForArrowKey ( KeyEvent e ) { int index = Math . max ( _NUM , Math . min ( e . getKeyCode ( ) , KeyEvent . VK_DOWN ) - KeyEvent . VK_LEFT ) ; return Direction . values ( ) [ index ] ; }
18860	public static byte [ ] toByteArray ( Reader input , String encoding ) throws IOException { return toByteArray ( input , Charsets . toCharset ( encoding ) ) ; }
18873	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
18879	public static double calculateContrastRatio ( @ NotNull Color color1 , @ NotNull Color color2 ) { double color1Luminance = calculateColorLuminance ( color1 ) ; double color2Luminance = calculateColorLuminance ( color2 ) ; return ( Math . max ( color1Luminance , color2Luminance ) + _NUM . _NUM ) / ( Math . min ( color2Luminance , color1Luminance ) + _NUM . _NUM ) ; }
18882	protected boolean isStressed ( String phone ) { return phone . endsWith ( _CHAR _NUM _CHAR ) ; }
18886	public double underflow ( ) { return m_underflow ; }
18895	public void add ( Predicate p , int color ) { super . add ( p , new Integer ( color ) ) ; }
18899	public void animateY ( int durationMillis ) { if ( android . os . Build . VERSION . SDK_INT < _NUM ) return ; ObjectAnimator animatorY = ObjectAnimator . ofFloat ( this , _CHAR phaseY _CHAR , _NUM , _NUM ) ; animatorY . setDuration ( durationMillis ) ; animatorY . addUpdateListener ( mListener ) ; animatorY . start ( ) ; }
18904	public static UShort ushort ( short value ) { return UShort . valueOf ( value ) ; }
18926	public static byte [ ] decode ( byte [ ] source ) throws java . io . IOException { byte [ ] decoded = _NULL ; decoded = decode ( source , _NUM , source . length , Base64 . NO_OPTIONS ) ; return decoded ; }
18945	public final boolean hasKey ( final K id ) { if ( id == _NULL ) { throw new NullPointerException ( _CHAR Querying cache with a _NULL key . '' ) ; } return cache . isKeyInCache ( id ) ; }
18960	private boolean newSeqNum ( long currentNum , long oldNum ) { if ( oldNum == - _NUM ) { return _BOOL ; } else if ( currentNum > oldNum ) { return _BOOL ; } else { return _BOOL ; } }
18961	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
18963	public static void decode ( InputStream inputStream , OutputStream outputStream ) throws IOException { copy ( new Base64InputStream ( inputStream ) , outputStream ) ; }
18982	public static boolean isMatchedUpdate ( int mod ) { return ( mod & NOTIFY_MATCHED_UPDATE ) != _NUM ; }
18991	public int read ( ) throws IOException { if ( count - pos <= _NUM ) { fill ( ) ; if ( count - pos <= _NUM ) { return - _NUM ; } } return buf [ pos ++ ] & _NUM ; }
18997	public boolean ignore_types ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR ignore - types _CHAR ) ; }
19001	public static void assertRelativelyEquals ( double expected , double actual , double relativeError ) { assertRelativelyEquals ( _NULL , expected , actual , relativeError ) ; }
19004	public long key ( ) { return _map . _set [ _index ] ; }
19013	public void addFooterView ( View v ) { addFooterView ( v , _NULL , _BOOL ) ; }
19016	public void attachTo ( RecyclerView recycler , boolean headerAlreadyAligned ) { validateRecycler ( recycler , headerAlreadyAligned ) ; mRecycler = recycler ; mAlreadyAligned = headerAlreadyAligned ; mReversed = isLayoutManagerReversed ( recycler ) ; setupAlignment ( recycler ) ; setupHeader ( recycler ) ; }
19022	public boolean addTo ( Rectangle bounds ) { if ( isEmpty ( ) ) { return _BOOL ; } bounds . x += left ; bounds . width -= left ; bounds . y += top ; bounds . height -= top ; bounds . width -= right ; bounds . height -= bottom ; return _BOOL ; }
19032	public SiteAdminGrid activatePage ( String title ) { selectPageByTitle ( title ) ; activateSelectedPage ( ) ; return this ; }
19049	public static byte [ ] toByteArray ( Reader input , String encoding ) throws IOException { return toByteArray ( input , Charsets . toCharset ( encoding ) ) ; }
19064	@ Override public void startGroup ( Augmentations augmentations ) throws XNIException { }
19142	@ SuppressWarnings ( _CHAR rawtypes _CHAR ) public Value newUnboundVariable ( String name , Class type ) { return newBoundVariable ( name , type ) ; }
19152	public String makeStringValue ( String value ) { value = StringUtils . replace ( value , _CHAR \\ _CHAR , _CHAR \\\\ _CHAR ) ; value = StringUtils . replace ( value , _CHAR $ { _CHAR , _CHAR $ \\ { _CHAR ) ; value = StringUtils . replace ( value , _CHAR \ _CHAR _CHAR , _CHAR \\\ _CHAR _CHAR ) ; return value ; }
19157	public IExtendedIndexIterator < IEntryCacheInfo > establishScan ( K startPos , short relation , K endPos , boolean endPosInclusive , boolean ordered ) { ordered |= FORCE_ORDERED_SCAN ; return ordered ? establishScanOrdered ( startPos , relation , endPos , endPosInclusive ) : establishScanUnOrdered ( startPos , relation , endPos , endPosInclusive ) ; }
19168	public BKLogSegmentWriter startLogSegment ( long txId ) throws IOException { return startLogSegment ( txId , _BOOL , _BOOL ) ; }
19171	public WallCreateCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
19173	public DefaultHibernateSpaceSynchronizationEndpointConfigurer deleteById ( boolean deleteById ) { this . deleteById = deleteById ; return this ; }
19180	public PollsEditQuery editAnswers ( String value ) { return unsafeParam ( _CHAR edit_answers _CHAR , value ) ; }
19201	public < T > T removeEnv ( String key ) { String ekey = this . expandString ( key ) ; FlexibleMapAccessor < T > fma = FlexibleMapAccessor . getInstance ( ekey ) ; return removeEnv ( fma ) ; }
19205	public static < T extends Serializable > Task < T > task ( Runnable runnable , T result ) { return new RunnableTaskAdapter < T > ( runnable , result ) ; }
19212	public static void writeLines ( File file , String encoding , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , encoding , lines , lineEnding , _BOOL ) ; }
19237	public long retryTime ( ) { return reg . getNextTryTime ( ) ; }
19239	public double optDouble ( int index , double defaultValue ) { try { return getDouble ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
19257	@ Override public Attr createAttributeNS ( String namespaceURI , String qualifiedName ) throws DOMException { return new AttrNSImpl ( this , namespaceURI , qualifiedName ) ; }
19266	public void printCurrentStackTrace ( ) { try { throw new java . io . IOException ( _CHAR FAKE _CHAR ) ; } catch ( java . io . IOException e ) { e . printStackTrace ( G . v ( ) . out ) ; } }
19269	public static Element addChildElementCDATAValue ( Element element , String childElementName , String childElementValue , Document document ) { Element newElement = addChildElement ( element , childElementName , document ) ; newElement . appendChild ( document . createCDATASection ( childElementValue ) ) ; return newElement ; }
19271	public BoardAddTopicQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
19274	public Bundler putStringArrayList ( String key , ArrayList < String > value ) { bundle . putStringArrayList ( key , value ) ; return this ; }
19276	private boolean isJMXEnabled ( ) { return Boolean . parseBoolean ( System . getProperty ( SystemProperties . JMX_ENABLED_PROP , SystemProperties . JMX_ENABLED_DEFAULT_VALUE ) ) ; }
19284	@ Override public void startGroup ( Augmentations augs ) throws XNIException { fMixed = _BOOL ; if ( fDTDGrammar != _NULL ) fDTDGrammar . startGroup ( augs ) ; if ( fDTDContentModelHandler != _NULL ) { fDTDContentModelHandler . startGroup ( augs ) ; } }
19285	public void tryToRestoreTabStateForId ( int id ) { if ( isSessionRestoreInProgress ( ) ) mTabSaver . restoreTabStateForId ( id ) ; }
19292	private String statusKey ( DataApproval approval ) { return approval == _NULL ? _NULL : approval . getOrganisationUnit ( ) . getId ( ) + IdentifiableObjectUtils . SEPARATOR + approval . getPeriod ( ) . getId ( ) + IdentifiableObjectUtils . SEPARATOR + approval . getWorkflow ( ) . getId ( ) ; }
19293	public static boolean checkClassValid ( TypeElement type ) { Set < Modifier > modifiers = type . getModifiers ( ) ; if ( modifiers . contains ( Modifier . ABSTRACT ) ) { return _BOOL ; } if ( modifiers . contains ( Modifier . PRIVATE ) ) { throw new ParcelException ( String . format ( _CHAR class % s must not be modified by private _CHAR , type . getQualifiedName ( ) ) , type ) ; } return _BOOL ; }
19306	public static < T > boolean containsAny ( Collection < T > source , Collection < T > candidates ) { if ( isEmpty ( source ) || isEmpty ( candidates ) ) return _BOOL ; for ( T candidate : candidates ) if ( source . contains ( candidate ) ) return _BOOL ; return _BOOL ; }
19319	public static String generateKey ( String imageUri , ImageSize targetSize ) { return new StringBuilder ( imageUri ) . append ( URI_AND_SIZE_SEPARATOR ) . append ( targetSize . getWidth ( ) ) . append ( WIDTH_AND_HEIGHT_SEPARATOR ) . append ( targetSize . getHeight ( ) ) . toString ( ) ; }
19330	public WallGetCommentsQueryWithExtended previewLength ( Integer value ) { return unsafeParam ( _CHAR preview_length _CHAR , value ) ; }
19334	void checkNormalizationAfterRemove ( ChildNode previousSibling ) { if ( previousSibling != _NULL && previousSibling . getNodeType ( ) == Node . TEXT_NODE ) { ChildNode next = previousSibling . nextSibling ; if ( next != _NULL && next . getNodeType ( ) == Node . TEXT_NODE ) { isNormalized ( _BOOL ) ; } } }
19340	public static String formatDate ( java . sql . Timestamp timestamp ) { if ( timestamp == _NULL ) return _CHAR _CHAR ; DateFormat df = DateFormat . getDateTimeInstance ( DateFormat . LONG , DateFormat . FULL ) ; java . util . Date date = timestamp ; return df . format ( date ) ; }
19343	@ Override public boolean accept ( File file ) { boolean newer = FileUtils . isFileNewer ( file , cutoff ) ; return acceptOlder ? ! newer : newer ; }
19347	public boolean incrementNumOfUsersIfNotEmpty ( ) { while ( _BOOL ) { int num = get ( ) ; if ( num == _NUM ) return _BOOL ; if ( compareAndSet ( num , num + _NUM ) ) return _BOOL ; } }
19350	public boolean dump_pag ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - pag _CHAR ) ; }
19360	public void groupBars ( float fromX , float groupSpace , float barSpace ) { if ( getBarData ( ) == _NULL ) { throw new RuntimeException ( _CHAR batData = _NULL _CHAR ) ; } else { getBarData ( ) . groupBars ( fromX , groupSpace , barSpace ) ; notifyDataSetChanged ( ) ; } }
19365	public final synchronized String resolveSystem ( String systemId ) throws IOException { if ( fCatalogsChanged ) { parseCatalogs ( ) ; fCatalogsChanged = _BOOL ; } return ( fCatalog != _NULL ) ? fCatalog . resolveSystem ( systemId ) : _NULL ; }
19377	public void message ( int level , String message , String spec1 , String spec2 ) { if ( debug >= level ) { System . out . println ( message + _CHAR : _CHAR + spec1 ) ; System . out . println ( _CHAR \ t _CHAR + spec2 ) ; } }
19380	public static void onscreen ( EntityPlayer player , String message , String ... formatArguments ) { NotifyImplementation . instance . doSendOnscreenMessage ( player , message , formatArguments ) ; }
19383	public static Map < String , Object > updatePaymentApplicationDef ( DispatchContext dctx , Map < String , Object > context ) { if ( ! context . containsKey ( _CHAR useHighestAmount _CHAR ) ) { context . put ( _CHAR useHighestAmount _CHAR , _CHAR Y _CHAR ) ; } return updatePaymentApplication ( dctx , context ) ; }
19394	@ Before public void loadMemory ( ) throws IOException { this . chip8 = Chip8Utils . createFromRom ( E03ClockExecutionAndMemoryTest . class . getResource ( _CHAR / E03TestRom . ch8 _CHAR ) ) ; }
19400	public Object executeTransactionalCommandInSeparateThread ( final TransactionalCommand command , final int retries ) throws MithraBusinessException { return executeTransactionalCommandInSeparateThread ( command , new TransactionStyle ( this . transactionTimeout , retries ) ) ; }
19406	public S2CellId prevWrap ( ) { S2CellId p = prev ( ) ; if ( p . id < WRAP_OFFSET ) { return p ; } return new S2CellId ( p . id + WRAP_OFFSET ) ; }
19421	public final void removePropertyChangeListener ( String propertyName , PropertyChangeListener listener ) { getChangeSupport ( ) . removePropertyChangeListener ( propertyName , listener ) ; }
19442	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
19483	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
19485	public void add ( BlockedPlayer plr ) { blockedList . put ( plr . getObjId ( ) , plr ) ; }
19488	public static < E > Stream < IntSummaryStatistics > shiftingWindowSummarizingInt ( Stream < E > stream , int rollingFactor , ToIntFunction < ? super E > mapper ) { Objects . requireNonNull ( stream ) ; Objects . requireNonNull ( mapper ) ; IntStream intStream = stream . mapToInt ( mapper ) ; return shiftingWindowSummarizingInt ( intStream , rollingFactor ) ; }
19493	public PermissionCollection newPermissionCollection ( ) { return new GrantPermissionCollection ( ) ; }
19501	@ Override public void publish ( String topic , String payload , long timeout ) throws AWSIotException , AWSIotTimeoutException { super . publish ( topic , payload , timeout ) ; }
19510	public static int calculateDeviceSpeedRank ( Context context ) { return _NUM ; }
19520	public void java_lang_Class_getField0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getFieldObject ( ) ) ; }
19539	public Builder addColumnTime ( String columnName , DateTimeZone timeZone , Long minValidValue , Long maxValidValue ) { addColumn ( new TimeMetaData ( columnName , timeZone , minValidValue , maxValidValue ) ) ; return this ; }
19548	@ NonNull public static Observable < Integer > sum ( @ NonNull Observable < Integer > observable ) { return Observable . just ( _NUM ) ; }
19572	public void clearSpanningTree ( ) { m_spanning = _NULL ; }
19592	protected User createUserAndInjectSecurityContext ( boolean allAuth , String ... auths ) { return createUserAndInjectSecurityContext ( _NULL , allAuth , auths ) ; }
19599	public boolean trim_clinit ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR trim - clinit _CHAR ) ; }
19604	public static void notNull ( Object ... arguments ) { for ( int i = _NUM ; i < arguments . length ; ) { notNull ( ( String ) arguments [ i ++ ] , arguments [ i ++ ] ) ; } }
19608	protected void removeAllAfterModel ( EpoxyModel < ? > model ) { List < EpoxyModel < ? >> modelsToRemove = getAllModelsAfter ( model ) ; int numModelsRemoved = modelsToRemove . size ( ) ; int initialModelCount = models . size ( ) ; pauseModelListNotifications ( ) ; modelsToRemove . clear ( ) ; resumeModelListNotifications ( ) ; notifyItemRangeRemoved ( initialModelCount - numModelsRemoved , numModelsRemoved ) ; }
19629	public static byte [ ] decodeWebSafe ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , WEBSAFE_DECODABET ) ; }
19646	@ Override public SpaceCopyStatus spaceCopy ( String remoteUrl , Object template , boolean includeNotifyTemplates , int chunkSize ) throws RemoteException { return ( ( IRemoteJSpaceAdmin ) getProxy ( ) ) . spaceCopy ( remoteUrl , template , includeNotifyTemplates , chunkSize ) ; }
19650	public Configuration subConfig ( String prefix , String keyPrefix ) { Configuration sub = new Configuration ( ) ; addToSubConf ( sub , prefix . length ( ) > _NUM ? prefix + _CHAR . _CHAR + keyPrefix : keyPrefix ) ; return sub ; }
19662	@ Override public void run ( ) { while ( ! keyList . isEmpty ( ) ) { Object key = keyList . pollFirst ( ) ; cache . putQuiet ( new Element ( key , preloadBuffer . get ( key ) ) ) ; cache . putQuiet ( new Element ( key , preloadBuffer . get ( key ) ) ) ; } }
19663	public final char yycharat ( int pos ) { return zzBufferArray != _NULL ? zzBufferArray [ zzStartRead + pos ] : zzBuffer . charAt ( zzStartRead + pos ) ; }
19669	@ Override public boolean execute ( Object target ) { if ( _tokens == _NULL || _containsIndexes == _NULL || _propertyInfo == _NULL ) initialize ( ) ; Object value = ( ( ServerEntry ) target ) . getPropertyValue ( _tokens [ _NUM ] ) ; return ( value == _NULL ) ? _BOOL : performMatching ( value , _NUM , _NUM ) ; }
19670	public static byte [ ] decodeWebSafe ( byte [ ] source ) throws Base64DecoderException { return decodeWebSafe ( source , _NUM , source . length ) ; }
19681	public static char [ ] encodeHex ( byte [ ] data ) { return encodeHex ( data , _BOOL ) ; }
19700	public static boolean isSameDomainName ( URL url1 , URL url2 ) { return getDomainName ( url1 ) . equalsIgnoreCase ( getDomainName ( url2 ) ) ; }
19704	public static < R > Flowable < R > ifThen ( BooleanSupplier condition , Publisher < ? extends R > then , Scheduler scheduler ) { return ifThen ( condition , then , Flowable . < R > empty ( ) . subscribeOn ( scheduler ) ) ; }
19709	public static void writeLines ( File file , String encoding , Collection < ? > lines ) throws IOException { writeLines ( file , encoding , lines , _NULL , _BOOL ) ; }
19715	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
19727	public ChangeSet unset ( String path ) { return add ( new UnsetValueSpaceEntryMutator ( path ) ) ; }
19755	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
19757	private synchronized void writeToOutputStream ( int oneByte ) { if ( mClosed ) { return ; } try { mOutputStream . write ( oneByte ) ; reportDecodedSizeIfApplicable ( ) ; } catch ( IOException e ) { handleIOExceptionWritingToStream ( e ) ; } }
19767	private boolean allowUploadCrashDump ( ) { if ( isCellularExperimentEnabled ( ) ) return isUsageAndCrashReportingEnabled ( ) ; if ( isMobileNetworkCapable ( ) ) { String option = mSharedPreferences . getString ( PREF_CRASH_DUMP_UPLOAD , mCrashDumpNeverUpload ) ; return option . equals ( mCrashDumpAlwaysUpload ) || ( option . equals ( mCrashDumpWifiOnlyUpload ) && isWiFiOrEthernetNetwork ( ) ) ; } return mSharedPreferences . getBoolean ( PREF_CRASH_DUMP_UPLOAD_NO_CELLULAR , _BOOL ) ; }
19768	public final String toString ( ) { return ( name + _CHAR , early reflection delay _CHAR + earlyReflectionDelay + _CHAR ns , early reflection intensity _CHAR + earlyReflectionIntensity + _CHAR dB , late deflection delay _CHAR + lateReflectionDelay + _CHAR ns , late reflection intensity _CHAR + lateReflectionIntensity + _CHAR dB , decay time _CHAR + decayTime ) ; }
19797	@ Override public void ignorableWhitespace ( XMLString text , Augmentations augs ) throws XNIException { }
19799	public static boolean isWriteOnly ( int mod ) { return Modifiers . contains ( mod , UpdateModifiers . WRITE_ONLY ) ; }
19800	protected String generateCreateTableSQL ( TableModel tableModel ) { return generateCreateTableSQL ( tableModel . getTableName ( ) , tableModel . getColumnModels ( ) , _BOOL ) ; }
19804	static public int floor ( float value ) { return ( int ) ( value + BIG_ENOUGH_FLOOR ) - BIG_ENOUGH_INT ; }
19807	public static double sum ( final double ... values ) throws MathIllegalArgumentException { return SUM . evaluate ( values ) ; }
19850	@ Override public void endParameterEntity ( String name , Augmentations augs ) throws XNIException { }
19856	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T extends DimensionalItemObject > List < T > asTypedList ( Collection < DimensionalItemObject > collection ) { List < T > list = new ArrayList < > ( ) ; if ( collection != _NULL ) { for ( DimensionalItemObject object : collection ) { list . add ( ( T ) object ) ; } } return list ; }
19875	public void updateUI ( ) { super . updateUI ( ) ; if ( tree != _NULL ) { tree . updateUI ( ) ; } LookAndFeel . installColorsAndFont ( this , _CHAR Tree . background _CHAR , _CHAR Tree . foreground _CHAR , _CHAR Tree . font _CHAR ) ; }
19891	public static void copy ( String input , OutputStream output ) throws IOException { StringReader in = new StringReader ( input ) ; OutputStreamWriter out = new OutputStreamWriter ( output ) ; copy ( in , out ) ; out . flush ( ) ; }
19902	protected boolean isPerformOrderById ( ) { return performOrderById ; }
19903	@ Override public void disconnect ( long timeout ) throws AWSIotException , AWSIotTimeoutException { super . disconnect ( timeout ) ; }
19929	public ConfettiManager enableFadeOut ( Interpolator fadeOutInterpolator ) { this . fadeOutInterpolator = fadeOutInterpolator ; return this ; }
19931	public synchronized VisualTable addTable ( String group , Table table , Predicate filter ) { VisualTable vt = new VisualTable ( table , this , group , filter ) ; addDataGroup ( group , vt , table ) ; return vt ; }
19946	protected void onCreate ( ) { if ( mCalled ) { throw new IllegalAccessError ( _CHAR do n _CHAR_CHAR ) ; } mCalled = true ; }
19953	public static void writeLines ( File file , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , _BOOL ) ; }
19960	public void add ( String expr , int color ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; add ( p , color ) ; }
19974	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
19986	public static Locale ensureLocale ( Object localeObject ) { if ( localeObject instanceof String ) { return parseLocale ( ( String ) localeObject ) ; } else if ( localeObject instanceof Locale ) { return ( Locale ) localeObject ; } return Locale . getDefault ( ) ; }
19993	public void close ( ) { LOGGER . debug ( _CHAR synchro close _CHAR ) ; setClosed ( _BOOL ) ; while ( ! isEmpty ( ) || isFiring ( ) && ! checkingThread . isDaemon ( ) ) { try { Thread . sleep ( minWindowSize ) ; } catch ( Exception e ) { LOGGER . debug ( _CHAR Exception _CHAR ) ; } } }
19998	public boolean safe_forname ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR safe - forname _CHAR ) ; }
20009	public boolean execute ( String action , JSONArray args , CallbackContext callbackContext ) throws JSONException { CordovaArgs cordovaArgs = new CordovaArgs ( args ) ; return execute ( action , cordovaArgs , callbackContext ) ; }
20010	public static boolean isPrimitiveOrWrapper ( Class clazz ) { Assert . notNull ( clazz , _CHAR Class must not be _NULL _CHAR ) ; return ( clazz . isPrimitive ( ) || isPrimitiveWrapper ( clazz ) ) ; }
20016	@ Override public void deleteData ( int offset , int count ) throws DOMException { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Method not supported _CHAR ) ; }
20018	public boolean isEmpty ( ) { return size ( ) == _NUM ; }
20024	public static AudioFileFormat . Type findTargetType ( String strExtension ) { AudioFileFormat . Type [ ] aTypes = AudioSystem . getAudioFileTypes ( ) ; for ( int i = _NUM ; i < aTypes . length ; i ++ ) { if ( aTypes [ i ] . getExtension ( ) . equals ( strExtension ) ) { return aTypes [ i ] ; } } return _NULL ; }
20027	public static String toString ( InputStream input , String encoding ) throws IOException { return toString ( input , Charsets . toCharset ( encoding ) ) ; }
20038	@ AndroidCoordinate public int width ( ) { return left + right ; }
20048	public static double weaveDps ( final Pokemon p , final int additionalDelay ) { return weaveDps ( p . getPokemonId ( ) , p . getMove1 ( ) , p . getMove2 ( ) , additionalDelay ) ; }
20074	@ Override public boolean isElementContentWhitespace ( ) { if ( needsSyncData ( ) ) { synchronizeData ( ) ; } return internalIsIgnorableWhitespace ( ) ; }
20089	@ Override public void addChild ( WXComponent child ) { addChild ( child , - _NUM ) ; }
20093	public static boolean sameProxyClass ( Object proxy1 , Object proxy2 ) { return ( proxy1 . getClass ( ) == proxy2 . getClass ( ) || ( Proxy . isProxyClass ( proxy2 . getClass ( ) ) && equalInterfaces ( proxy1 , proxy2 ) ) ) ; }
20097	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
20116	public static void writeLines ( File file , String encoding , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , encoding , lines , lineEnding , _BOOL ) ; }
20143	public long fileSize ( ) { try { if ( ! isTempTable ( ) ) tx . concurrencyMgr ( ) . readFile ( fileName ) ; } catch ( LockAbortException e ) { tx . rollback ( ) ; throw e ; } return VanillaDb . fileMgr ( ) . size ( fileName ) ; }
20157	public void putFramePathOnStack ( String nameOrId ) { if ( ! switchRequestComingFromFrameSwitcher ) { expandFramePathStack ( new NamedFrame ( nameOrId ) ) ; } }
20161	public Iterator iterator ( ) { return new COWIterator ( getArray ( ) , _NUM ) ; }
20162	public void addSequenceNumber ( GSEventRegistration registration ) { if ( _sequenceNumbers == _NULL ) _sequenceNumbers = new HashMap < Uuid , Long > ( ) ; _sequenceNumbers . put ( registration . getSpaceUID ( ) , registration . getSequenceNumber ( ) ) ; }
20180	public Builder perExecutorStatsLogger ( StatsLogger perExecutorStatsLogger ) { this . perExecutorStatsLogger = perExecutorStatsLogger ; return this ; }
20201	public Builder lineJoin ( String lineJoin ) { this . lineJoin = lineJoin ; return this ; }
20214	public static String formatTimeDiff ( long finishTime , long startTime ) { long timeDiff = finishTime - startTime ; return formatTime ( timeDiff ) ; }
20216	@ NotNull public DescribeImageAction describeImage ( int maxCandidates , @ NotNull InputStream image ) { return new DescribeImageAction ( cognitiveContext , maxCandidates , image ) ; }
20217	public static boolean isPowerOfTwo ( int number ) { return ( number > _NUM ) && ( number & ( number - _NUM ) ) == _NUM ; }
20233	public BigDecimal bigDecimalValue ( final int scale , final int roundingMode ) { return new BigDecimal ( numerator ) . divide ( new BigDecimal ( denominator ) , scale , roundingMode ) ; }
20234	public void endBoolean ( boolean value ) { }
20244	public void registerToolbar ( ViewGroup toolbarContainer , RTToolbar toolbar ) { mToolbars . put ( toolbar . getId ( ) , toolbar ) ; toolbar . setToolbarListener ( this ) ; toolbar . setToolbarContainer ( toolbarContainer ) ; updateToolbarVisibility ( ) ; }
20253	public static long nowInNanos ( ) { return System . nanoTime ( ) ; }
20254	@ Override public boolean equals ( Object other ) { if ( this == other ) { return _BOOL ; } if ( other instanceof Fraction ) { Fraction rhs = ( Fraction ) other ; return ( numerator == rhs . numerator ) && ( denominator == rhs . denominator ) ; } return _BOOL ; }
20255	@ Override public IBinder onBind ( Intent arg0 ) { return mBinder ; }
20258	public boolean isComponentPresent ( String cssClassName ) { try { wait . withTimeout ( Timeouts . SMALL ) . until ( ExpectedConditions . visibilityOf ( currentScope . findElement ( getComponentLocator ( cssClassName ) ) ) ) ; return _BOOL ; } catch ( NoSuchElementException e ) { LOG . debug ( String . format ( _CHAR component located by : % s is not present _CHAR , cssClassName ) , e ) ; return _BOOL ; } }
20274	public Selection isAfterNoon ( ) { return select ( _NULL ) ; }
20306	protected void addCommonComponent ( XMLComponent component ) { if ( fCommonComponents . contains ( component ) ) { return ; } fCommonComponents . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
20334	@ Override protected void authorizeRequests ( final HttpSecurity http ) throws Exception { http . authorizeRequests ( ) . anyRequest ( ) . authenticated ( ) ; }
20354	@ Override public void onRemoveCommandTag ( final ISourceCommandTag sourceCommandTag , final ChangeReport changeReport ) { changeReport . appendError ( _CHAR The equipment has no implementation to _CHAR + _CHAR remove command tags . You have to restart the DAQ . '' ) ; changeReport . setState ( CHANGE_STATE . REBOOT ) ; }
20367	@ Override public void close ( ) throws IOException { }
20388	public void upload ( File file , FTPDataTransferListener listener ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { upload ( file , _NUM , listener ) ; }
20419	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = input . getBytes ( Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
20420	public static void clear ( View view ) { view . setOnTouchListener ( _NULL ) ; }
20426	public void addUpdateListeners ( final Collection < BaseListener > listeners ) { for ( BaseListener listener : listeners ) { addUpdateListener ( listener ) ; } }
20432	public Object clone ( ) { try { EntryRep entry = ( EntryRep ) super . clone ( ) ; entry . fields = entry . fields . clone ( ) ; return entry ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } }
20441	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
20447	public boolean isComponentPresent ( Class < ? > componentClass ) { final String cssClassName = new AemComponentHandler ( componentClass ) . getCssClassName ( ) ; return isComponentPresent ( cssClassName ) ; }
20448	protected void assertFailsWith ( String command , JSONObject args , String ... fragments ) throws Exception { assertFailsWith ( command , args . toString ( ) , fragments ) ; }
20479	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException { setHints ( _NULL ) ; return decodeInternal ( image ) ; }
20483	public void onPressed ( ) { }
20488	public boolean types_for_sites ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR types - for - sites '' ) ; }
20496	public void eliminatePhiNodes ( ) { sbb . preElimOpt ( ) ; sbb . eliminatePhiNodes ( ) ; sbb . postElimOpt ( ) ; setSSA ( _BOOL ) ; }
20499	@ NotNull public TrainPersonGroupAction trainGroup ( @ NotNull String personGroupId ) { Validation . validate ( personGroupId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR personGroupId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new TrainPersonGroupAction ( cognitiveContext , personGroupId ) ; }
20510	public final void addPropertyChangeListener ( PropertyChangeListener listener ) { getChangeSupport ( ) . addPropertyChangeListener ( listener ) ; }
20511	@ Override protected final void scanPIData ( String target , XMLString data ) throws IOException , XNIException { super . scanPIData ( target , data ) ; fMarkUpDepth -- ; if ( fDTDHandler != _NULL ) { fDTDHandler . processingInstruction ( target , data , _NULL ) ; } }
20518	public void notifyUpdated ( ) { mHandler . sendEmptyMessage ( MSG_DID_UPDATE ) ; }
20521	public static void writeLines ( File file , String encoding , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , encoding , lines , lineEnding , _BOOL ) ; }
20527	public void put ( HttpSession session , T value , Map < String , Object > expandContext ) { AttributeAccessor < T > aa = new AttributeAccessor < T > ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; aa . put ( session , value ) ; }
20535	public static int copy ( InputStream input , OutputStream output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
20537	static Class [ ] reduce ( Collection c , boolean keepSupers ) { try { return reduce0 ( ( Class [ ] ) c . toArray ( new Class [ c . size ( ) ] ) , keepSupers ) ; } catch ( ArrayStoreException e ) { throw new IllegalArgumentException ( _CHAR element of collection is not a Class _CHAR ) ; } }
20553	public static void writeStringToFile ( File file , String data , Charset encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
20555	private int [ ] makeDefStateList ( ) { int [ ] retArray = new int [ fElemMapSize ] ; for ( int index = _NUM ; index < fElemMapSize ; index ++ ) retArray [ index ] =- _NUM ; return retArray ; }
20572	public int optInt ( String key ) { return optInt ( key , _NUM ) ; }
20588	public double sumWithWeights ( ) { double dSum = _NUM ; for ( TKeyType dKey : hDistro . keySet ( ) ) { if ( dKey instanceof Double ) dSum += ( ( Double ) dKey * getValue ( dKey ) ) ; else dSum += getValue ( dKey ) ; } return dSum ; }
20616	public static SinkRecord spoofSinkRecord ( String topic , String value ) { return spoofSinkRecord ( topic , _CHAR sink_task_test_field _CHAR , value ) ; }
20619	public static void write ( char [ ] data , Writer output ) throws IOException { if ( data != _NULL ) { output . write ( data ) ; } }
20623	public static int growSize ( int currentSize ) { return currentSize <= _NUM ? _NUM : currentSize + ( currentSize >> _NUM ) ; }
20624	@ Override public void start ( String testName ) { currentTest . get ( ) . setLast ( _BOOL ) ; currentTest . set ( injector . getInstance ( TestInfo . class ) ) ; currentTest . get ( ) . setLast ( _BOOL ) ; currentTest . get ( ) . setName ( testName ) ; browserInfo ( ) ; testInfoEntries . add ( currentTest . get ( ) ) ; }
20627	@ Deprecated public static String makeWhereStringFromFields ( List < ModelField > modelFields , Map < String , Object > fields , String operator ) { return makeWhereStringFromFields ( new StringBuilder ( ) , modelFields , fields , operator , _NULL ) . toString ( ) ; }
20648	public void insertBEntry ( BEntry ent ) { if ( ! hasSpace ( ) ) { throw new BPlusTreeException ( _CHAR Node should have split before ; Currently is full _CHAR ) ; } List < BEntry > entries = getAllValidEntries ( ) ; entries . add ( ent ) ; Collections . sort ( entries ) ; overwriteBNodeEntries ( entries ) ; if ( ! hasSpace ( ) ) { splitNode ( ) ; } }
20654	public boolean optBoolean ( int index ) { return optBoolean ( index , _BOOL ) ; }
20664	public boolean hasReachedFullCapacity ( ) { return ( getActiveCount ( ) == getMaximumPoolSize ( ) ) ; }
20676	public String geom_verify_name ( ) { return soot . PhaseOptions . getString ( options , _CHAR geom - verify - name _CHAR ) ; }
20677	public BinaryBitmap crop ( int left , int top , int width , int height ) { LuminanceSource newSource = binarizer . getLuminanceSource ( ) . crop ( left , top , width , height ) ; return new BinaryBitmap ( binarizer . createBinarizer ( newSource ) ) ; }
20686	public boolean buildHostPart ( Appendable buffer , String url , Boolean useSSL ) throws WebAppConfigurationException , IOException { return buildHostPart ( buffer , url , useSSL , _BOOL ) ; }
20693	public static final String removeDataFolderPath ( String fullPath ) { File sdCard = Environment . getExternalStorageDirectory ( ) ; String dataFolderPath = sdCard . getAbsolutePath ( ) + _CHAR / _CHAR + MainApp . getDataFolder ( ) + _CHAR / _CHAR ; if ( fullPath . indexOf ( dataFolderPath ) == _NUM ) { return fullPath . substring ( dataFolderPath . length ( ) ) ; } return fullPath ; }
20708	public PlacesSearchQuery radius ( Integer value ) { return unsafeParam ( _CHAR radius _CHAR , value ) ; }
20711	public void rollback ( ) { for ( TransactionLifecycleListener l : lifecycleListeners ) { l . onTxRollback ( this ) ; } if ( logger . isLoggable ( Level . FINE ) ) logger . fine ( _CHAR transaction _CHAR + txNum + _CHAR rolled back _CHAR ) ; }
20716	private static Class < ? extends Activity > guessRestartActivityClass ( Context context ) { Class < ? extends Activity > resolvedActivityClass ; resolvedActivityClass = CustomActivityOnCrash . getRestartActivityClassWithIntentFilter ( context ) ; if ( resolvedActivityClass == _NULL ) { resolvedActivityClass = getLauncherActivity ( context ) ; } return resolvedActivityClass ; }
20718	@ Override public LSInput item ( int index ) { if ( index < _NUM || index >= fLength ) { return _NULL ; } return fArray [ index ] ; }
20729	public static String encodeObject ( java . io . Serializable serializableObject ) throws java . io . IOException { return encodeObject ( serializableObject , NO_OPTIONS ) ; }
20745	public boolean match ( ZWaveNode node ) { return match ( node . getManufacturer ( ) , node . getDeviceType ( ) , node . getDeviceId ( ) , node . getApplicationVersion ( ) ) ; }
20746	public String toString ( ) { return ( digits ( mostSig >> _NUM , _NUM ) + _CHAR - _CHAR + digits ( mostSig >> _NUM , _NUM ) + _CHAR - _CHAR + digits ( mostSig , _NUM ) + _CHAR - _CHAR + digits ( leastSig >> _NUM , _NUM ) + _CHAR - _CHAR + digits ( leastSig , _NUM ) ) ; }
20751	@ Override public int hashCode ( ) { int result = car . hashCode ( ) ; result = _NUM * result + ( cdr != _NULL ? cdr . hashCode ( ) : _NUM ) ; return result ; }
20752	public DynamicTemplateParameterContext appendParameter ( String paramName , String paramValue , ContextInfo contextInfo ) { return appendParameter ( paramName , paramValue , _BOOL , _BOOL , contextInfo ) ; }
20757	private boolean isTypedTimeLegalSoFar ( ) { Node node = mLegalTimesTree ; for ( int keyCode : mTypedTimes ) { node = node . canReach ( keyCode ) ; if ( node == _NULL ) { return _BOOL ; } } return _BOOL ; }
20761	public Boolean isShared ( ) { return ( Boolean ) getAttributes ( ) . get ( Attributes . SHARED ) ; }
20762	public BoardGetTopicsQueryWithExtended topicIds ( List < Integer > value ) { return unsafeParam ( _CHAR topic_ids _CHAR , value ) ; }
20763	protected boolean recurse ( ) { return _lookingFor > _NUM ; }
20798	@ Override public void readFields ( DataInput in ) throws IOException { }
20828	public BoardGetTopicsQueryWithExtended order ( BoardGetTopicsOrder value ) { return unsafeParam ( _CHAR order _CHAR , value ) ; }
20859	public static String escape ( String raw ) { checkNotNull ( raw , _CHAR raw _CHAR ) ; String escaped = raw ; escaped = escaped . replaceAll ( UNESCAPED_WILDCARD_REGEX , WILDCARD_ESCAPE ) ; escaped = escapeSeparators ( escaped ) ; return escaped ; }
20860	public S2CellId next ( ) { return new S2CellId ( id + ( lowestOnBit ( ) << _NUM ) ) ; }
20861	public static ToolbarTapTarget forToolbarOverflow ( android . widget . Toolbar toolbar , CharSequence title , @ Nullable CharSequence description ) { return new ToolbarTapTarget ( toolbar , _BOOL , title , description ) ; }
20908	private List < ResourceState > sortResourcesByImportance ( Set < ResourceState > resourcesStates ) { List < ResourceState > sortedResources = resourcesStates . stream ( ) . sorted ( _NULL ) . collect ( Collectors . toList ( ) ) ; return sortedResources ; }
20912	private Observable < String > buildStorePreResponseChain ( Observable < PreResponse > preResponseEmitter , Observable < JobRow > asynchronousPayload , JobRow jobRow ) { return preResponseEmitter . zipWith ( asynchronousPayload , _NULL ) . flatMap ( _NULL ) ; }
20916	public boolean equals ( Object o ) { if ( o == this ) { return _BOOL ; } if ( o instanceof LookupLocator ) { LookupLocator oo = ( LookupLocator ) o ; return port == oo . port && host . equalsIgnoreCase ( oo . host ) ; } return _BOOL ; }
20917	public int calculateStorageSize ( int vmfullclonesize , int vmdeltasize , int vmpersistentdisksize , int vmdisposabledisksize , int vmlogsize , int vmswapsize , int vmvideoswapsize ) { final int i = vmfullclonesize + vmdeltasize + vmpersistentdisksize + vmdisposabledisksize + vmlogsize + vmswapsize + vmvideoswapsize ; return i ; }
20923	public static double normalizeAngle ( double a , double center ) { return a - TWO_PI * Math . floor ( ( a + Math . PI - center ) / TWO_PI ) ; }
20924	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
20930	public final synchronized void close ( AionServerPacket closePacket , boolean forced ) { if ( isWriteDisabled ( ) ) { return ; } log . info ( _CHAR sending packet : _CHAR + closePacket + _CHAR and closing connection after that . '' ) ; pendingClose = _BOOL ; isForcedClosing = forced ; sendMsgQueue . clear ( ) ; sendMsgQueue . addLast ( closePacket ) ; enableWriteInterest ( ) ; }
20933	public Builder dashArray ( String dashArray ) { this . dashArray = dashArray ; return this ; }
20935	private void processFormState ( ) { if ( currentFieldPosition == - _NUM ) { Log . d ( DEBUG_TAG , _CHAR process ( ) : begin _CHAR ) ; processFormFieldBegin ( ) ; return ; } FormField field = formFields . get ( currentFieldPosition ) ; if ( field != _NULL ) processFormField ( field ) ; else processFormFieldEnd ( ) ; }
20960	public static JpaModule newServerModule ( EntityManagerFactory emFactory , EntityManager em , TransactionRunner transactionRunner ) { return new JpaModule ( emFactory , em , transactionRunner ) ; }
20968	@ Override public void readFields ( DataInput in ) throws IOException { }
20987	public < T > T dataFromResource ( String resourceName , Class < T > clazz ) { return json2Data ( readResource ( resourceName ) , clazz ) ; }
20998	public void write ( OutputStream outp ) throws IOException , jasError { class_env . setSource ( source_name ) ; class_env . write ( new DataOutputStream ( outp ) ) ; }
21001	@ Override public synchronized XSObject item ( int index ) { if ( fArray == _NULL ) { getLength ( ) ; } if ( index < _NUM || index >= fLength ) { return _NULL ; } return fArray [ index ] ; }
21020	public boolean tTest ( final double mu , final StatisticalSummary sampleStats , final double alpha ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSignificanceLevel ( alpha ) ; return tTest ( mu , sampleStats ) < alpha ; }
21027	public static SinkRecord spoofSinkRecord ( String topic ) { return spoofSinkRecord ( topic , _CHAR sink task test row _CHAR ) ; }
21037	@ Override public MapStack < K > standAloneStack ( ) { MapStack < K > standAlone = MapStack . create ( this ) ; return standAlone ; }
21038	public double distance ( final Vector2D p ) { return FastMath . abs ( getOffset ( p ) ) ; }
21041	public boolean canClip ( ) { return ! isEmpty ( ) && mRect != _NULL ; }
21047	private String printDFormat ( short x ) { return printDFormat ( Short . toString ( x ) ) ; }
21049	public static < T extends RealFieldElement < T >> T distance ( final Vector3D v1 , final FieldVector3D < T > v2 ) { return v2 . distance ( v1 ) ; }
21055	public void onKeyDown ( ) { }
21068	public int installSilent ( Context context , String filePath ) { return installSilent ( context , filePath , _CHAR - r _CHAR + getInstallLocationParams ( ) ) ; }
21078	public Vector3f cross ( Vector3f v , Vector3f result ) { return cross ( v . x , v . y , v . z , result ) ; }
21080	@ Override public void close ( ) throws IOException { fInputStream . close ( ) ; }
21086	public TShortArrayList inverseGrep ( TShortProcedure condition ) { TShortArrayList list = new TShortArrayList ( ) ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( ! condition . execute ( _data [ i ] ) ) { list . add ( _data [ i ] ) ; } } return list ; }
21112	public boolean profiling ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR profiling _CHAR ) ; }
21120	public < T > void bindTwoWay ( @ NotNull SettableValue < T > first , @ NotNull SettableValue < T > second ) { releaseTwoWay ( first , second ) ; myTwoWayBindings . add ( new TwoWayBinding < > ( first , second ) ) ; }
21128	public void add ( Predicate p , ColorAction f ) { super . add ( p , f ) ; }
21132	public void startObjectValue ( O object , String name ) { }
21148	public boolean localHostOrDomainIs ( String host , String domain ) { return domain . startsWith ( host ) ; }
21155	public void register ( String key , Remote value ) throws RegistryException { try { registry . rebind ( key , value ) ; } catch ( Exception e ) { throw new RegistryException ( _CHAR Failed to register with key [ _CHAR + key + _CHAR ] _CHAR , e ) ; } }
21166	private LocatorReg findReg ( LookupLocator lct ) { Iterator iter = undiscoveredLocators . iterator ( ) ; while ( iter . hasNext ( ) ) { LocatorReg reg = ( LocatorReg ) iter . next ( ) ; if ( reg . l . equals ( lct ) ) return reg ; } return _NULL ; }
21169	static IndexPredicateAnalyzer newIndexPredicateAnalyzer ( String keyColumnName ) { IndexPredicateAnalyzer analyzer = new IndexPredicateAnalyzer ( ) ; analyzer . addComparisonOp ( _CHAR org . apache . hadoop . hive . ql . udf . generic . GenericUDFOPEqual _CHAR ) ; analyzer . clearAllowedColumnNames ( ) ; analyzer . allowColumnName ( keyColumnName ) ; return analyzer ; }
21194	XSParticleDecl traverseSequence ( Element seqDecl , XSDocumentInfo schemaDoc , SchemaGrammar grammar , int allContextFlags , XSObject parent ) { return traverseSeqChoice ( seqDecl , schemaDoc , grammar , allContextFlags , _BOOL , parent ) ; }
21222	public void incrementResendCount ( ) { if ( ++ resendCount >= _NUM ) { setNodeState ( ZWaveNodeState . DEAD ) ; } retryCount ++ ; }
21249	public final int cursor ( ) { return cursor ; }
21259	public MithraTransaction startOrContinueTransaction ( ) throws MithraTransactionException { return this . startOrContinueTransaction ( defaultTransactionStyle ) ; }
21274	@ Override public ListenableFuture < DefragmentResponse > defragmentMember ( ) { return this . futureStub . defragment ( DefragmentRequest . getDefaultInstance ( ) ) ; }
21325	public FlowImageLoader resize ( int width , int height ) { if ( ! mHasUri ) { throw new RuntimeException ( _CHAR not impl _CHAR ) ; } else { mDna . digest ( new ResizeGene ( width , height ) ) ; } return this ; }
21327	public boolean profiling ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR profiling _CHAR ) ; }
21338	public static boolean isSignedDouble ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { Double . parseDouble ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
21350	@ TargetApi ( Build . VERSION_CODES . LOLLIPOP ) public Scoop bindStatusBar ( Activity activity , int toppingId , @ Nullable Interpolator interpolator ) { IBinding binding = new StatusBarBinding ( toppingId , activity , interpolator ) ; return bind ( activity , toppingId , binding ) ; }
21376	@ Override public double nextDouble ( ) { return randomGenerator . nextDouble ( ) ; }
21384	void prepareDisplayTaskFor ( ImageAware imageAware , String memoryCacheKey ) { cacheKeysForImageAwares . put ( imageAware . getId ( ) , memoryCacheKey ) ; }
21397	public static Properties readProperties ( Class clazz ) { return readProperties ( clazz . getName ( ) ) ; }
21401	public void putGrammar ( SchemaGrammar grammar ) { if ( grammar . getTargetNamespace ( ) == _NULL ) fNoNSGrammar = grammar ; else fGrammarRegistry . put ( grammar . getTargetNamespace ( ) , grammar ) ; }
21403	public static boolean AM ( long packedDateTime ) { return PackedLocalTime . AM ( time ( packedDateTime ) ) ; }
21415	public static void registerFieldMapper ( @ NotNull String layoutParamsClassName , @ NotNull Function < String , MappedField > mapper ) { FIELD_MAPPERS . put ( layoutParamsClassName , mapper ) ; }
21419	public void add ( Predicate p , FontAction f ) { super . add ( p , f ) ; }
21421	public void degreesAndPersist ( ) { degreesAndPersist ( degree ) ; }
21456	public static < E > Stream < DoubleSummaryStatistics > shiftingWindowSummarizingDouble ( Stream < E > stream , int rollingFactor , ToDoubleFunction < ? super E > mapper ) { Objects . requireNonNull ( stream ) ; Objects . requireNonNull ( mapper ) ; DoubleStream doubleStream = stream . mapToDouble ( mapper ) ; return shiftingWindowSummarizingLong ( doubleStream , rollingFactor ) ; }
21457	public BytesMessage createBytesMessage ( ) throws JMSException { return createBytesMessage ( _NULL ) ; }
21458	public void notifyObservers ( ) { notifyObservers ( _NULL ) ; }
21474	public void type ( String string ) { for ( int i = _NUM ; i < string . length ( ) ; i ++ ) { char c = string . charAt ( i ) ; type ( c ) ; } }
21476	@ BeforeClass public void retrieveOAuthToken ( ) { RestAssured . baseURI = _CHAR http : // localhost : 9876 '' ; given ( ) . when ( ) . then ( ) ; }
21496	public void download ( String remoteFileName , File localFile , FTPDataTransferListener listener ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { download ( remoteFileName , localFile , _NUM , listener ) ; }
21499	public static Stream < DoubleSummaryStatistics > shiftingWindowSummarizingLong ( DoubleStream doubleStream , int rollingFactor ) { Objects . requireNonNull ( doubleStream ) ; RollingOfDoubleSpliterator ofDoubleSpliterator = RollingOfDoubleSpliterator . of ( doubleStream . spliterator ( ) , rollingFactor ) ; return StreamSupport . stream ( ofDoubleSpliterator , doubleStream . isParallel ( ) ) . onClose ( _NULL ) . map ( _NULL ) ; }
21505	public Bundler putIntegerArrayList ( String key , ArrayList < Integer > value ) { bundle . putIntegerArrayList ( key , value ) ; return this ; }
21530	public static byte [ ] toByteArray ( Reader input , Charset encoding ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output , encoding ) ; return output . toByteArray ( ) ; }
21534	public K key ( ) { return ( K ) _map . _set [ _index ] ; }
21541	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
21551	public String optString ( String key ) { return this . optString ( key , _CHAR _CHAR ) ; }
21554	public int optInt ( int index , int defaultValue ) { try { return getInt ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
21556	public static boolean simpleCCW ( S2Point a , S2Point b , S2Point c ) { return S2Point . crossProd ( c , a ) . dotProd ( b ) > _NUM ; }
21560	@ NonNull public static Observable < Integer > task4 ( @ NonNull Observable < Boolean > flagObservable , @ NonNull Observable < Integer > first , @ NonNull Observable < Integer > second ) { return Observable . just ( _NUM ) ; }
21562	public static void debug ( String string ) { if ( wantDebug ) System . err . println ( string ) ; }
21572	public void endString ( String string ) { }
21581	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL ) { fDocumentHandler . processingInstruction ( target , data , augs ) ; } }
21602	public synchronized void requestPreviewFrame ( Handler handler , int message ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . getCamera ( ) . setOneShotPreviewCallback ( previewCallback ) ; } }
21607	public static void printToFile ( String filename , String message , boolean append ) { printToFile ( new File ( filename ) , message , append ) ; }
21610	public int fastSkip ( int len ) throws IllegalArgumentException , IOException { if ( len < _NUM ) throw new IllegalArgumentException ( _CHAR the number of frames to skip must be positiv _CHAR ) ; if ( len == _NUM ) return _NUM ; return ( ( int ) in . skip ( len * frameSize ) ) / frameSize ; }
21629	public static double min ( final double ... values ) throws MathIllegalArgumentException { return MIN . evaluate ( values ) ; }
21631	public void addPage ( int position , @ NonNull List < MODEL > items ) { setAutoNotifyDataSetChanged ( _BOOL ) ; addAll ( position , items ) ; setAutoNotifyDataSetChanged ( _BOOL ) ; onNewItemsAdded ( items . size ( ) ) ; notifyItemRangeInsertedIfNeed ( size ( ) - ( items . size ( ) + getHeadersCount ( ) ) , items . size ( ) ) ; }
21633	@ Override public void startContentModel ( String elementName , Augmentations augmentations ) throws XNIException { }
21654	public static String checkAttribute ( String attributeValue , String defaultValue ) { return attributeValue . isEmpty ( ) ? defaultValue : attributeValue ; }
21658	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public E valueAt ( int index ) { if ( mGarbage ) { gc ( ) ; } return ( E ) mValues [ index ] ; }
21659	@ SuppressFBWarnings ( _CHAR CHROMIUM_SYNCHRONIZED_METHOD _CHAR ) @ VisibleForTesting public synchronized void detachFromThread ( ) { mThreadId = _NULL ; }
21674	public static List < String > readLines ( InputStream input ) throws IOException { return readLines ( input , Charset . defaultCharset ( ) ) ; }
21688	public static int copy ( InputStream input , OutputStream output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
21697	private void registerChangedResourceParent ( IResource changedResource ) throws TeamException { IContainer parent = changedResource . getParent ( ) ; if ( parent == _NULL ) return ; if ( remoteSyncStateStore . getBytes ( parent ) == _NULL ) { remoteSyncStateStore . setBytes ( parent , DUMMY_SYNC_BYTES ) ; registerChangedResourceParent ( parent ) ; } }
21701	public Vector2f subtract ( Vector2f vec ) { return subtract ( vec , _NULL ) ; }
21716	public static JSONArray toJSONArray ( String string ) throws JSONException { return toJSONArray ( new XMLTokener ( string ) ) ; }
21726	public Builder unloadInvisibleTiles ( Boolean unloadInvisibleTiles ) { this . unloadInvisibleTiles = unloadInvisibleTiles ; return this ; }
21735	public static Value noExceptionThrowing ( Value val ) { if ( val == _NULL ) return _NULL ; if ( ! throwsException ( val ) ) return val ; else return _NULL ; }
21749	@ Override public void beforeTextChanged ( CharSequence s , int start , int count , int after ) { }
21751	@ Override public SpaceCopyStatus spaceCopy ( String remoteUrl , Object template , boolean includeNotifyTemplates , int chunkSize ) { throw new UnsupportedOperationException ( _CHAR should n _CHAR_CHAR ) ; }
21757	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_COOL_TIME_HOUR ( String worldname0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 , value1 ) ; }
21759	public void fixConversion ( String rep ) { if ( sHashCode != rep . hashCode ( ) ) throw new RuntimeException ( _CHAR bad use of fixConversion ! _CHAR ) ; if ( s == _NULL ) { s = rep ; } }
21762	int onDeleteAll ( String tableName , String ... conditions ) { BaseUtility . checkConditionsCorrect ( conditions ) ; return mDatabase . delete ( tableName , getWhereClause ( conditions ) , getWhereArgs ( conditions ) ) ; }
21766	private boolean indicateReadCommitted ( ITransactionalEntryData entry , ITemplateHolder template ) { if ( indicateDirtyRead ( template ) || ! template . isReadCommittedRequested ( ) ) return _BOOL ; ServerTransaction est = entry . getWriteLockTransaction ( ) ; if ( template . getXidOriginatedTransaction ( ) != _NULL && est != _NULL && template . getXidOriginatedTransaction ( ) . equals ( est ) ) return _BOOL ; return _BOOL ; }
21770	public void print ( List < BOMNode > arr ) { print ( arr , _NUM , _BOOL ) ; }
21782	public void notifyObservers ( Object arg ) { for ( Observer observer : observers ) { observer . update ( this , arg ) ; } }
21802	public static void writeLines ( File file , String encoding , Collection < ? > lines ) throws IOException { writeLines ( file , encoding , lines , _NULL , _BOOL ) ; }
21807	private List < ValidationResult > orderedList ( Collection < ValidationResult > results ) { List < ValidationResult > resultList = new ArrayList < > ( results ) ; Collections . sort ( resultList ) ; return resultList ; }
21810	public Builder fillRule ( String fillRule ) { this . fillRule = fillRule ; return this ; }
21811	public static float acos ( float fValue ) { if ( - _NUM . _NUM < fValue ) { if ( fValue < _NUM . _NUM ) { return ( float ) Math . acos ( fValue ) ; } return _NUM . _NUM ; } return PI ; }
21817	public static void shutdown ( ) { LRMIRuntime . getRuntime ( ) . shutdown ( ) ; ClassLoaderCache . getCache ( ) . shutdown ( ) ; }
21830	private static boolean validLabelLocation ( StringLiteral element ) { PsiElement parent = element . getParent ( ) ; if ( parent instanceof Argument . Keyword ) { String argName = ( ( Argument . Keyword ) parent ) . getName ( ) ; if ( _CHAR name _CHAR . equals ( argName ) ) { return _BOOL ; } } return _BOOL ; }
21849	private static void killRunningApplication ( ) throws IOException { String [ ] cmd = { _CHAR / bin / sh _CHAR , _CHAR - c _CHAR , _CHAR kill - _NUM $ ( cat application . pid ) _CHAR } ; Process p = Runtime . getRuntime ( ) . exec ( cmd ) ; }
21853	public void childrenEndGroup ( ) throws XNIException { }
21868	public Builder discCacheExtraOptions ( int maxImageWidthForDiscCache , int maxImageHeightForDiscCache , CompressFormat compressFormat , int compressQuality , BitmapProcessor processorForDiscCache ) { this . maxImageWidthForDiscCache = maxImageWidthForDiscCache ; this . maxImageHeightForDiscCache = maxImageHeightForDiscCache ; this . imageCompressFormatForDiscCache = compressFormat ; this . imageQualityForDiscCache = compressQuality ; this . processorForDiscCache = processorForDiscCache ; return this ; }
21911	public PlacesAddQuery type ( Integer value ) { return unsafeParam ( _CHAR type _CHAR , value ) ; }
21921	@ Override public void serializeAsPlaceholder ( Object bean , JsonGenerator jgen , SerializerProvider prov ) throws Exception { if ( _nullSerializer != _NULL ) { _nullSerializer . serialize ( _NULL , jgen , prov ) ; } else { jgen . writeNull ( ) ; } }
21923	@ Override public void endGeneralEntity ( String name , Augmentations augs ) throws XNIException { fEntityRef = _BOOL ; if ( fDocumentHandler != _NULL ) { fDocumentHandler . endGeneralEntity ( name , augs ) ; } }
21924	public void sendMessage ( String mac , MessageItem item , OnSendMessageListener listener ) { sendMessage ( mac , item , _BOOL , listener ) ; }
21926	public synchronized void requestPreviewFrame ( Handler handler , int message ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . getCamera ( ) . setOneShotPreviewCallback ( previewCallback ) ; } }
21931	@ NonNull public static Observable < LoginResult > loginWithButton ( @ NonNull final LoginButton loginButton ) { checkNotNull ( loginButton , _CHAR loginButton == _NULL _CHAR ) ; ReactiveFB . checkInit ( ) ; return Observable . create ( new LoginWithButtonOnSubscribe ( loginButton ) ) ; }
21933	public static S2Cap fromAxisAngle ( S2Point axis , S1Angle angle ) { double d = Math . sin ( _NUM . _NUM * angle . radians ( ) ) ; return new S2Cap ( axis , _NUM * d * d ) ; }
21935	public int geom_encoding ( ) { String s = soot . PhaseOptions . getString ( options , _CHAR geom - encoding _CHAR ) ; if ( s . equalsIgnoreCase ( _CHAR Geom _CHAR ) ) return geom_encoding_Geom ; if ( s . equalsIgnoreCase ( _CHAR HeapIns _CHAR ) ) return geom_encoding_HeapIns ; if ( s . equalsIgnoreCase ( _CHAR PtIns _CHAR ) ) return geom_encoding_PtIns ; throw new RuntimeException ( _CHAR Invalid value _CHAR + s + _CHAR of phase option geom - encoding _CHAR ) ; }
21943	@ Override public void close ( ) throws IOException { try { super . close ( ) ; } finally { this . branch . close ( ) ; } }
21944	public S2CellId nextWrap ( ) { S2CellId n = next ( ) ; if ( unsignedLongLessThan ( n . id , WRAP_OFFSET ) ) { return n ; } return new S2CellId ( n . id - WRAP_OFFSET ) ; }
21946	public boolean with_arrayref ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - arrayref _CHAR ) ; }
21965	protected boolean isIncludeElement ( QName element ) { return element . localpart . equals ( XINCLUDE_INCLUDE ) && hasXIncludeNamespace ( element ) ; }
21968	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
21975	public void addRecognizedParamsAndSetDefaults ( XMLComponent component , XSGrammarPoolContainer grammarContainer ) { final String [ ] recognizedFeatures = component . getRecognizedFeatures ( ) ; addRecognizedFeatures ( recognizedFeatures ) ; final String [ ] recognizedProperties = component . getRecognizedProperties ( ) ; addRecognizedProperties ( recognizedProperties ) ; setFeatureDefaults ( component , recognizedFeatures , grammarContainer ) ; setPropertyDefaults ( component , recognizedProperties ) ; }
21986	public boolean isVersioned ( ) { return versioned ; }
21992	@ Override public void endParameterEntity ( String name , Augmentations augs ) throws XNIException { fPEDepth -- ; fReadingExternalDTD = fPEntityStack [ fPEDepth ] ; }
21996	void hide ( ) { if ( ! mIsVisible ) return ; mIsVisible = _BOOL ; mHeightPx = _NUM . f ; }
22010	public String fixed_class_names ( ) { return soot . PhaseOptions . getString ( options , _CHAR fcn _CHAR ) ; }
22011	public int max_container_size ( ) { return soot . PhaseOptions . getInt ( options , _CHAR max - container - size _CHAR ) ; }
22014	@ Override public IBinder onBind ( Intent arg0 ) { return mBinder ; }
22022	@ Override public void splitNode ( ) { return ; }
22030	static Set < String > parsePathParameters ( String path ) { Matcher m = PARAM_URL_REGEX . matcher ( path ) ; Set < String > patterns = new LinkedHashSet < > ( ) ; while ( m . find ( ) ) { patterns . add ( m . group ( _NUM ) ) ; } return patterns ; }
22044	public synchronized void requestPreviewFrame ( Handler handler , int message ) { Camera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . setOneShotPreviewCallback ( previewCallback ) ; } }
22087	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output , String encoding ) throws IOException { writeLines ( lines , lineEnding , output , Charsets . toCharset ( encoding ) ) ; }
22117	public JSONArray put ( int index , int value ) throws JSONException { put ( index , new Integer ( value ) ) ; return this ; }
22120	public boolean isExistingCommand ( ) { return ( ! name . equals ( CommandTagHandle . CMD_UNKNOWN ) ) ; }
22121	public WallEditQuery services ( String value ) { return unsafeParam ( _CHAR services _CHAR , value ) ; }
22124	public int passes ( ) { return soot . PhaseOptions . getInt ( options , _CHAR passes _CHAR ) ; }
22129	public Vector3f divideLocal ( Vector3f scalar ) { x /= scalar . x ; y /= scalar . y ; z /= scalar . z ; return this ; }
22131	@ Override public Set < String > vertexMatchPatternLabels ( ) { return labels . size ( ) == _NUM ? labels : Collections . emptySet ( ) ; }
22147	public final void addPropertyChangeListener ( String propertyName , PropertyChangeListener listener ) { getChangeSupport ( ) . addPropertyChangeListener ( propertyName , listener ) ; }
22148	public static String dataValueIsValid ( String value , DataElement dataElement ) { if ( dataElement == _NULL || dataElement . getValueType ( ) == _NULL ) { return _CHAR data_element_or_type_null_or_empty _CHAR ; } return dataValueIsValid ( value , dataElement . getValueType ( ) ) ; }
22161	public boolean isUpgradable ( ) { return canAddSingleRecord ( ) && Const . isUpgradable ( getVersionMajor ( ) , getVersionMinor ( ) ) ; }
22166	public boolean simple_edges_bidirectional ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simple - edges - bidirectional _CHAR ) ; }
22170	public synchronized VisualTree addTree ( String group , Tree tree ) { return addTree ( group , tree , _NULL ) ; }
22188	@ SuppressWarnings ( _CHAR unchecked _CHAR ) protected D restoreContextOnReturnedFact ( D d4 , D d5 ) { if ( d5 instanceof LinkedNode ) { ( ( LinkedNode < D > ) d5 ) . setCallingContext ( d4 ) ; } if ( d5 instanceof JoinHandlingNode ) { ( ( JoinHandlingNode < D > ) d5 ) . setCallingContext ( d4 ) ; } return d5 ; }
22210	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
22220	@ SuppressWarnings ( _CHAR unchecked _CHAR ) @ Override public String sendRequestToQueue ( final String text , final String jmsListenerQueue , final long timeout ) { if ( text == _NULL ) { throw new NullPointerException ( _CHAR Attempting to send a _NULL text message . '' ) ; } return jmsTemplate . execute ( _NULL , _BOOL ) ; }
22221	@ Override public boolean accepts ( Field field ) { return field . getType ( ) . isAnnotationPresent ( PageObject . class ) && AnnotationsHelper . isFindByAnnotationPresent ( field ) ; }
22222	public void addRegexList ( final Collection < String > regexList ) { if ( regexList != _NULL ) { this . regexList . addAll ( regexList ) ; } }
22244	public static void logWithStackOffset ( int level , int stackOffset , String tag , String msg , Object ... params ) { log ( level , stackOffset , tag , FMT_STRING , mConfig . getLogger ( ) , msg , params ) ; }
22260	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
22261	private void invalidateFromTouch ( int minY , int maxY ) { invalidate ( _NUM , ( int ) ( minY - ( mTouchLabelTextSize + mTouchLabelOffsetPx ) ) , getWidth ( ) , maxY + _NUM ) ; }
22265	public synchronized TemporaryTopic createTemporaryTopic ( ) throws JMSException { ensureOpen ( ) ; if ( _logger . isLoggable ( Level . FINE ) ) { _logger . log ( Level . FINE , _CHAR Creating temporary Topic _CHAR ) ; } return new GSTemporaryTopicImpl ( m_sessionID + _CHAR : _CHAR + getRandomInt ( ) , m_sessionID ) ; }
22283	@ Override public void startGeneralEntity ( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs ) throws XNIException { }
22288	@ TargetApi ( _NUM ) public Bundler putCharSequenceArrayList ( String key , ArrayList < CharSequence > value ) { bundle . putCharSequenceArrayList ( key , value ) ; return this ; }
22290	public boolean string_constants ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR string - constants _CHAR ) ; }
22295	public boolean containsKey ( E key ) { return entries . containsKey ( key ) ; }
22308	@ VisibleForTesting public Optional < HostedZone > findHostedZone ( String record ) { final String fqdnRecord = determineFqdnRecord ( record ) ; final Optional < HostedZone > matchingZone = route53 . listHostedZones ( ) . getHostedZones ( ) . stream ( ) . filter ( _NULL ) . reduce ( ( _NULL ) ) ; matchingZone . ifPresent ( _NULL ) ; return matchingZone ; }
22319	private String nextTokenAsString ( ) throws XNIException { String s = getTokenString ( nextToken ( ) ) ; if ( s == _NULL ) reportError ( _CHAR XPointerElementSchemeProcessingError _CHAR , _NULL ) ; return s ; }
22331	public boolean pre_jimplify ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR pre - jimplify _CHAR ) ; }
22337	public static Uri createFileUri ( String path ) { if ( path . startsWith ( _CHAR file : // '' ) ) { return Uri . parse ( path ) ; } return Uri . fromFile ( new File ( path ) ) ; }
22350	public void clear ( ) { if ( data != _NULL ) { for ( int i = _NUM ; i < ( length * _NUM ) ; i ++ ) data [ i ] = _NULL ; } length = _NUM ; }
22362	private static boolean isSuppressed ( @ NonNull Issue issue , @ NonNull String string ) { for ( String id : Splitter . on ( _CHAR ) . trimResults ( ) . split ( string ) ) { if ( id . equals ( issue . getId ( ) ) || id . equals ( SUPPRESS_ALL ) ) { return _BOOL ; } } return _BOOL ; }
22379	public boolean optBoolean ( int index , boolean defaultValue ) { try { return this . getBoolean ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
22384	public static Map < String , Object > singletonMap ( String key , Object value ) { Map < String , Object > map = new HashMap < String , Object > ( ) ; map . put ( key , value ) ; return map ; }
22385	public boolean canReuseProcessHandler ( ) { if ( myCurrentSession == _NULL || myCurrentSession . isProcessTerminated ( ) ) { return _BOOL ; } BuildSelection buildSelection = myContext . getBuildSelection ( ) ; assert buildSelection != _NULL : _CHAR Build must have completed before results are analyzed _CHAR ; return buildSelection . mode == BuildMode . HOT && ( myBuildInfo . hasNoChanges ( ) || myBuildInfo . canHotswap ( ) ) ; }
22395	@ Nullable public Boolean isDebuggable ( ) { AndroidModel androidModel = myFacet . getAndroidModel ( ) ; if ( androidModel != _NULL ) { Boolean debuggable = androidModel . isDebuggable ( ) ; if ( debuggable != _NULL ) { return debuggable ; } } return MergedManifest . get ( myFacet ) . getApplicationDebuggable ( ) ; }
22426	public void add ( Predicate p , Font font ) { super . add ( p , font ) ; }
22434	public long optLong ( String key , long defaultValue ) { try { return this . getLong ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
22479	private void startMarginAnimation ( boolean enter ) { startMarginAnimation ( enter , mStacks [ _NUM ] . isDisplayable ( ) ) ; }
22482	private JobRow updateField ( JobRow row , JobField field , String value ) { return row . withFieldValue ( field , value ) . withFieldValue ( DATE_UPDATED , new DateTime ( timestampGenerator . instant ( ) . toEpochMilli ( ) ) . toDateTimeISO ( ) . toString ( ) ) ; }
22498	public void close ( ) { finished = _BOOL ; IOUtils . closeQuietly ( bufferedReader ) ; cachedLine = _NULL ; }
22512	public boolean lazy_pts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR lazy - pts _CHAR ) ; }
22545	public String optString ( int index ) { return optString ( index , _CHAR _CHAR ) ; }
22579	public String renderAsString ( String resourceName , String screenName ) throws GeneralException , IOException , SAXException , ParserConfigurationException { return render ( resourceName , screenName , _BOOL ) ; }
22585	public boolean dynomiteCheck ( ) { logger . info ( _CHAR Dynomite check with Redis Ping _CHAR ) ; if ( ! dynomiteRedisCheck ( ) ) { try { logger . error ( _CHAR Dynomite was down _CHAR ) ; this . dynProcess . stop ( ) ; sleeper . sleepQuietly ( _NUM ) ; return _BOOL ; } catch ( IOException e ) { logger . error ( _CHAR Dynomite can not be restarted -- > Requires manual restart _CHAR + e . getMessage ( ) ) ; } } return _BOOL ; }
22591	public static byte [ ] toByteArray ( Reader input , Charset encoding ) throws IOException { com . android . base . common . io . stream . ByteArrayOutputStream output = new com . android . base . common . io . stream . ByteArrayOutputStream ( ) ; copy ( input , output , encoding ) ; return output . toByteArray ( ) ; }
22598	public GsonBuilder registerTypeAdapterFactory ( TypeAdapterFactory factory ) { factories . add ( factory ) ; return this ; }
22629	public static void logPromoTapsBeforeFirstOpen ( int promoTaps ) { RecordHistogram . recordCountHistogram ( _CHAR Search . ContextualSearchPromoTapsBeforeFirstOpen _CHAR , promoTaps ) ; }
22640	public static double [ ] computeLogAmplitudeSpectrum ( final double [ ] signal ) { double [ ] spectrum = computeAmplitudeSpectrum ( signal ) ; for ( int i = _NUM ; i < spectrum . length ; i ++ ) { spectrum [ i ] = Math . log ( spectrum [ i ] ) ; } return spectrum ; }
22671	public Builder categoricalToInteger ( String ... columnNames ) { for ( String s : columnNames ) { transform ( new CategoricalToIntegerTransform ( s ) ) ; } return this ; }
22684	public static byte [ ] decodeWebSafe ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , WEBSAFE_DECODABET ) ; }
22686	public synchronized long size ( ) { return size ; }
22691	public static void write ( char [ ] data , Writer output ) throws IOException { if ( data != _NULL ) { output . write ( data ) ; } }
22697	private void rehash ( ) { if ( size >= threshold - threshold / _NUM ) resize ( ) ; }
22705	@ Override public void startElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { }
22708	public boolean collideWith ( KeyChain other ) { if ( keys . size ( ) > other . keys . size ( ) ) { return Collections . indexOfSubList ( keys , other . keys ) == _NUM ; } else { return Collections . indexOfSubList ( other . keys , keys ) == _NUM ; } }
22710	public WallEditCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
22717	public static byte [ ] decodeWebSafe ( byte [ ] source ) throws Base64DecoderException { return decodeWebSafe ( source , _NUM , source . length ) ; }
22718	public AemContentFinder clickMosaicView ( ) { getCurrentTab ( ) . clickMosaicView ( ) ; return this ; }
22723	public void addCarbonTable ( CarbonTable carbonTable ) { tableInfoMap . put ( convertToLowerCase ( carbonTable . getTableUniqueName ( ) ) , carbonTable ) ; }
22736	public static String formatNumber ( float number , int digitCount , boolean separateThousands ) { return formatNumber ( number , digitCount , separateThousands , _CHAR ) ; }
22748	public boolean tryReadLockOnKey ( K id , Long timeout ) { try { return cache . tryReadLockOnKey ( id , timeout ) ; } catch ( InterruptedException e ) { LOGGER . debug ( _CHAR Thread interrupted for id = '' + String . valueOf ( id ) + _CHAR ( _CHAR + this . getClass ( ) + _CHAR ) _CHAR ) ; return _BOOL ; } }
22749	public static Stream < IntSummaryStatistics > shiftingWindowSummarizingInt ( IntStream intStream , int rollingFactor ) { Objects . requireNonNull ( intStream ) ; RollingOfIntSpliterator ofIntSpliterator = RollingOfIntSpliterator . of ( intStream . spliterator ( ) , rollingFactor ) ; return StreamSupport . stream ( ofIntSpliterator , intStream . isParallel ( ) ) . onClose ( _NULL ) . map ( _NULL ) ; }
22767	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
22771	public static boolean deleteQuietly ( File file ) { if ( file == _NULL ) { return _BOOL ; } try { if ( file . isDirectory ( ) ) { cleanDirectory ( file ) ; } } catch ( Exception ignored ) { } try { return file . delete ( ) ; } catch ( Exception ignored ) { return _BOOL ; } }
22773	public static TimeDuration fromNumber ( Number number ) { return number == _NULL ? ZeroTimeDuration : fromLong ( number . longValue ( ) ) ; }
22782	public void childrenOccurrence ( short occurrence ) throws XNIException { }
22802	public boolean simulate_natives ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simulate - natives _CHAR ) ; }
22805	public static String approximately ( CharSequence in ) { return eval ( in ) . getApproximately ( ) ; }
22826	public Matrix4f mult ( Matrix4f in2 ) { return mult ( in2 , _NULL ) ; }
22828	public boolean this_edges ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR this - edges _CHAR ) ; }
22832	public double t ( final double mu , final StatisticalSummary sampleStats ) throws MathIllegalArgumentException , NullArgumentException { checkSampleData ( sampleStats ) ; return t ( sampleStats . getMean ( ) , mu , sampleStats . getVariance ( ) , sampleStats . getN ( ) ) ; }
22846	public static void writeByteArrayToFile ( File file , byte [ ] data ) throws IOException { writeByteArrayToFile ( file , data , _BOOL ) ; }
22860	public int geom_eval ( ) { return soot . PhaseOptions . getInt ( options , _CHAR geom - eval _CHAR ) ; }
22865	public static void updateVisible ( VisualItem item , boolean val ) { item . setStartVisible ( item . isVisible ( ) ) ; item . setVisible ( val ) ; item . setEndVisible ( val ) ; }
22869	public static byte [ ] toByteArray ( Reader input , String encoding ) throws IOException { return toByteArray ( input , Charsets . toCharset ( encoding ) ) ; }
22877	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
22891	public Builder lineCap ( String lineCap ) { this . lineCap = lineCap ; return this ; }
22908	@ Override public boolean isPressed ( ) { boolean bReturn = this . isOverridingPresses ? this . justPressed : super . isPressed ( ) ; this . justPressed = _BOOL ; return bReturn ; }
22914	@ Override public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; return _map . equals ( obj ) ; }
22923	@ Override public void pcdata ( Augmentations augmentations ) throws XNIException { }
22928	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
22929	public void stem ( ) { k = i - _NUM ; if ( k > _NUM ) { step1 ( ) ; step2 ( ) ; step3 ( ) ; step4 ( ) ; step5 ( ) ; step6 ( ) ; } i_end = k + _NUM ; i = _NUM ; }
22960	public static boolean isVersionNewerThan ( String oneVersion , String otherVersion ) { if ( oneVersion == _NULL || otherVersion == _NULL ) { return _BOOL ; } if ( otherVersion . equals ( oneVersion + _CHAR - SNAPSHOT _CHAR ) ) { return _BOOL ; } if ( oneVersion . equals ( otherVersion + _CHAR - SNAPSHOT _CHAR ) ) { return _BOOL ; } return oneVersion . compareTo ( otherVersion ) > _NUM ; }
22961	public float pseudoDistance ( Vector3f point ) { return normal . dot ( point ) - constant ; }
22962	public DistributedLogManager createDistributedLogManager ( String nameOfLogStream , ClientSharingOption clientSharingOption , Optional < DistributedLogConfiguration > streamConfiguration , Optional < DynamicDistributedLogConfiguration > dynamicStreamConfiguration ) throws InvalidStreamNameException , IOException { return namespace . createDistributedLogManager ( nameOfLogStream , clientSharingOption , streamConfiguration , dynamicStreamConfiguration ) ; }
22966	static Object popRequestStack ( String name , HttpServletRequest request , Map < String , Object > context , Environment env ) throws TemplateModelException { return readRequestStack ( name , _BOOL , request , context , env ) ; }
22975	@ Override public void publish ( String topic , byte [ ] payload ) throws AWSIotException { super . publish ( topic , payload ) ; }
22984	public char nextClean ( ) throws JSONException { int nextCleanInt = nextCleanInternal ( ) ; return nextCleanInt == - _NUM ? _CHAR : ( char ) nextCleanInt ; }
22990	public void unsubscribe ( ) { try { listenersLock . writeLock ( ) . lock ( ) ; listeners . clear ( ) ; } finally { listenersLock . writeLock ( ) . unlock ( ) ; } }
22994	public static ArrayList < SelectableColor > loadMaterialDesignColors500 ( Context context , boolean sortByName ) { return Utils . convertResourceArraysToColorsArrayList ( context , sortByName , R . array . selectiondialogs_materialdesign500_ids , R . array . selectiondialogs_materialdesign500_names , R . array . selectiondialogs_materialdesign500_colors ) ; }
22995	private boolean isTypedTimeLegalSoFar ( ) { Node node = mLegalTimesTree ; for ( int keyCode : mTypedTimes ) { node = node . canReach ( keyCode ) ; if ( node == _NULL ) { return _BOOL ; } } return _BOOL ; }
22996	public boolean shouldRecognizeSwipe ( MotionEvent e1 , MotionEvent e2 ) { return _BOOL ; }
23021	public double polynomialDistance ( Polynomial other ) { return polynomialDistance ( this . coeffs , other . coeffs ) ; }
23022	public static int nextPrime ( int desiredCapacity ) { int i = java . util . Arrays . binarySearch ( primeCapacities , desiredCapacity ) ; if ( i < _NUM ) { i =- i - _NUM ; } return primeCapacities [ i ] ; }
23027	public BoardCreateCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
23040	public String formatDecimal ( long value ) { return SimpleXYChartUtils . formatDecimal ( value * chartFactor , customFormat ) ; }
23059	public BytesMessage createBytesMessage ( byte [ ] bytesArrayBody ) throws JMSException { ensureOpen ( ) ; GSBytesMessageImpl bytesMsg = new GSBytesMessageImpl ( this , bytesArrayBody ) ; return bytesMsg ; }
23060	public static Intent createDeepLinkIntent ( Context context , VRDeepLinkParam param ) { if ( param == _NULL || isStringNullOrEmpty ( param . mediaFbId ) ) { return _NULL ; } if ( IsVideoDeepLink ( param ) ) { return createDeepLinkIntentForVideoContent ( context , param ) ; } return createDeepLinkIntentForPhotoContent ( context , param ) ; }
23061	@ Override public final void startGroup ( Augmentations augs ) throws XNIException { ++ fDepth ; initializeContentModelStacks ( ) ; fMixed = _BOOL ; }
23063	private static long sum ( long n ) { return n * ( n + _NUM ) / _NUM ; }
23111	@ Override public void deliverResult ( T data ) { if ( isReset ( ) ) { if ( data != _NULL ) { onReleaseResources ( data ) ; } } T oldData = mData ; mData = data ; if ( isStarted ( ) ) { super . deliverResult ( data ) ; } if ( oldData != _NULL ) { onReleaseResources ( oldData ) ; } }
23120	public void moveViewTo ( float xIndex , float yValue , AxisDependency axis ) { float valsInView = getDeltaY ( axis ) / mViewPortHandler . getScaleY ( ) ; Runnable job = new MoveViewJob ( mViewPortHandler , xIndex , yValue + valsInView / _NUM , getTransformer ( axis ) , this ) ; addViewportJob ( job ) ; }
23167	public void clearExpressions ( ) { this . generator = _NULL ; this . sampleSkipTest = _NULL ; }
23172	@ Nonnull public static File findOrCreateCacheFile ( ) { final File file = new File ( CACHE_DIR , PREFIX + SUFFIX ) ; if ( ! file . exists ( ) ) { try { file . createNewFile ( ) ; } catch ( final IOException e ) { throw new IllegalStateOfArgumentException ( _CHAR Can not create a cache file . '' , e ) ; } } return file ; }
23194	public void endEntity ( String name , Augmentations augmentations ) throws XNIException { }
23205	@ Override public void handleUseItemFinish ( Player player , Npc npc ) { switch ( npc . getNpcId ( ) ) { case _NUM : case _NUM : case _NUM : case _NUM : despawnNpc ( npc ) ; SkillEngine . getInstance ( ) . getSkill ( npc , _NUM , _NUM , player ) . useNoAnimationSkill ( ) ; break ; } }
23221	public static String byteCountToDisplaySize ( long size ) { return byteCountToDisplaySize ( BigInteger . valueOf ( size ) ) ; }
23224	@ NotNull public IntProperty outputWidth ( ) { return myOutputWidth ; }
23248	public boolean validateRequest ( String publicKey , String hmac , String query ) { ApiResult apiResult = this . api . getApiByPublicKey ( publicKey ) ; if ( apiResult == _NULL ) { return _BOOL ; } String myHmac = HmacUtils . hmacSha1Hex ( apiResult . getPrivateKey ( ) , query ) ; return myHmac . equals ( hmac ) ; }
23251	public static void writeLines ( File file , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , _NULL , lines , _NULL , append ) ; }
23254	@ Override public void textDecl ( String version , String encoding , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL && ! fOnlyPassPrefixMappingEvents ) { fDocumentHandler . textDecl ( version , encoding , augs ) ; } }
23263	public static boolean isChildGroup ( String group ) { return group . indexOf ( GROUP_DELIMITER ) != - _NUM ; }
23269	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
23285	private static boolean quickRejectField ( Object entryValue , Object templateValue ) { if ( templateValue == _NULL ) return _BOOL ; if ( entryValue == _NULL ) return _BOOL ; return ( templateValue . hashCode ( ) != entryValue . hashCode ( ) ) ; }
23309	public double sumWithWeights ( ) { double dSum = _NUM ; for ( TKeyType dKey : hDistro . keySet ( ) ) { if ( dKey instanceof Double ) dSum += ( ( Double ) dKey * getValue ( dKey ) ) ; else dSum += getValue ( dKey ) ; } return dSum ; }
23352	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_protect_PROTECT_SKILL_HEAL_A_to_B ( String protector , int num0 , String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , protector , num0 , skilltarget , skillcaster , skillname ) ; }
23361	public static double [ ] convolve_FD ( final double [ ] signal1 , final double [ ] fft2 , double deltaT ) { double [ ] result = convolve_FD ( signal1 , fft2 ) ; for ( int i = _NUM ; i < result . length ; i ++ ) { result [ i ] *= deltaT ; } return result ; }
23384	public T walkInOptimizedOrder ( final FieldVectorPreservingVisitor < T > visitor , final int start , final int end ) throws MathIllegalArgumentException { return walkInDefaultOrder ( visitor , start , end ) ; }
23390	public Object [ ] copyRemaining ( ) { return index <= args . length ? Arrays . copyOfRange ( args , index , args . length ) : new Object [ _NUM ] ; }
23445	public static boolean equals ( String filename1 , String filename2 ) { return equals ( filename1 , filename2 , _BOOL , IOCase . SENSITIVE ) ; }
23451	public static List < Bucket > createCompleteBuckets ( Experiment experiment , int numberOfBuckets ) { double [ ] percentages = new double [ numberOfBuckets ] ; Arrays . fill ( percentages , _NUM . _NUM / numberOfBuckets ) ; return createBuckets ( experiment , percentages ) ; }
23460	public String [ ] lookup ( String word ) { return lookup ( word , _BOOL ) ; }
23467	public void endNull ( ) { }
23481	public boolean use_original_names ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR use - original - names _CHAR ) ; }
23488	@ Override public long blocksAccessed ( ) { Plan mp = new MaterializePlan ( p , tx ) ; return mp . blocksAccessed ( ) ; }
23493	public boolean isTrustedObject ( Object obj , TrustVerifier . Context ctx ) throws RemoteException { return obj instanceof ConstrainableLookupLocator ; }
23501	public static byte [ ] toByteArray ( Reader input ) throws IOException { return toByteArray ( input , Charset . defaultCharset ( ) ) ; }
23534	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
23535	public void addHeaderView ( View v ) { addHeaderView ( v , _NULL , _BOOL ) ; }
23541	boolean maySendBasePageUrl ( ) { return ! isUserUndecided ( ) ; }
23560	public static void checkLocation ( int location , String label ) { if ( location < _NUM ) { throw new RuntimeException ( _CHAR Unable to locate _CHAR_CHAR_CHAR in program _CHAR ) ; } }
23578	public boolean isExistingCommand ( ) { return ( ! name . equals ( CommandTagHandle . CMD_UNKNOWN ) ) ; }
23588	public static TrustSource defaultTrustSource ( ) { return DEFAULT_TRUST_SOURCE ; }
23608	@ Override public Node parseWithContext ( LSInput is , Node cnode , short action ) throws DOMException , LSException { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Not supported _CHAR ) ; }
23611	public static < T extends RealFieldElement < T >> T distance1 ( final Vector3D v1 , final FieldVector3D < T > v2 ) { return v2 . distance1 ( v1 ) ; }
23627	public boolean isValidLocalTld ( String lTld ) { lTld = unicodeToASCII ( lTld ) ; return Arrays . binarySearch ( LOCAL_TLDS , chompLeadingDot ( lTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
23636	public String syllabify ( String phones ) { Syllabifier sfr = new Syllabifier ( this . allophoneSet , this . removeTrailingOneFromPhones ) ; return sfr . syllabify ( phones ) ; }
23643	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
23645	public static String localePrefix ( Locale locale ) { if ( locale == _NULL ) return _NULL ; return locale . toString ( ) ; }
23648	public static < E , T > Stream < T > shiftingWindowCollect ( Stream < E > stream , int rollingFactor , Collector < ? super E , ? , ? extends T > collector ) { Objects . requireNonNull ( stream ) ; Objects . requireNonNull ( collector ) ; return roll ( stream , rollingFactor ) . map ( _NULL ) ; }
23649	public static UUID uuidForTimestamp ( Date timestamp ) { return uuidForTimeMillis ( timestamp . getTime ( ) , _NUM ) ; }
23675	protected void scheduleNewInvokerIfAppropriate ( ) { if ( isRunning ( ) ) { synchronized ( this . activeInvokerMonitor ) { if ( this . scheduledInvokers . size ( ) < this . maxConcurrentConsumers && ! hasIdleInvokers ( ) ) { scheduleNewInvoker ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( message ( _CHAR Raised scheduled invoker count [ _CHAR + scheduledInvokers . size ( ) + _CHAR ] _CHAR ) ) ; } } } } }
23685	public void translate ( float xAmount , float yAmount ) { x += xAmount ; y += yAmount ; }
23703	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output , String encoding ) throws IOException { writeLines ( lines , lineEnding , output , Charsets . toCharset ( encoding ) ) ; }
23714	private void indexSplitDoc ( ) { try { _indexSplitDoc ( ) ; } finally { semaphore . release ( ) ; shardState . indexState . globalState . indexingJobsRunning . release ( ) ; ctx . inFlightChunks . arrive ( ) ; } }
23723	public MarketCreateCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
23731	private static MetricValue opt_duration_to_metricvalue_ ( Optional < Duration > duration ) { return duration . map ( _NULL ) . orElse ( MetricValue . EMPTY ) ; }
23739	public static void writeByteArrayToFile ( File file , byte [ ] data ) throws IOException { writeByteArrayToFile ( file , data , _BOOL ) ; }
23743	public void animateY ( int durationMillis ) { if ( android . os . Build . VERSION . SDK_INT < _NUM ) return ; ObjectAnimator animatorY = ObjectAnimator . ofFloat ( this , _CHAR phaseY _CHAR , _NUM , _NUM ) ; animatorY . setDuration ( durationMillis ) ; animatorY . addUpdateListener ( mListener ) ; animatorY . start ( ) ; }
23747	public void saveAs ( ) { throw new UnsupportedOperationException ( _CHAR Save as not supported _CHAR ) ; }
23763	public boolean isOrQuery ( ) { return hasQuery ( ) ; }
23766	public int readLargeUleb128 ( ) { return readUleb128 ( _BOOL ) ; }
23795	public boolean rerun_jb ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR rerun - jb _CHAR ) ; }
23801	public static String generateKey ( String imageUri , ImageSize targetSize ) { return new StringBuilder ( imageUri ) . append ( URI_AND_SIZE_SEPARATOR ) . append ( targetSize . getWidth ( ) ) . append ( WIDTH_AND_HEIGHT_SEPARATOR ) . append ( targetSize . getHeight ( ) ) . toString ( ) ; }
23815	public boolean cs_demand ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR cs - demand _CHAR ) ; }
23830	private void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( this ) ; onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
23837	public double optDouble ( String key ) { return this . optDouble ( key , Double . NaN ) ; }
23840	public static String stripFileProtocol ( String uriString ) { if ( uriString . startsWith ( _CHAR file : // '' ) ) { return Uri . parse ( uriString ) . getPath ( ) ; } return uriString ; }
23856	@ Override public void startGroup ( Augmentations augs ) throws XNIException { fDepth ++ ; initializeContentModelStack ( ) ; fMixed = _BOOL ; }
23877	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
23891	public static < E > Stream < Map . Entry < E , E >> crossProduct ( Stream < E > stream ) { Objects . requireNonNull ( stream ) ; CrossProductOrderedSpliterator < E > spliterator = CrossProductOrderedSpliterator . of ( stream . spliterator ( ) ) ; return StreamSupport . stream ( spliterator , stream . isParallel ( ) ) . onClose ( _NULL ) ; }
23892	public boolean hasNext ( ) { return ! error && iterator . hasNext ( ) ; }
23893	public static float max ( float a , float b ) { return ( a >= b ) ? a : b ; }
23926	public boolean isSuper ( ) { for ( UserAuthorityGroup group : userAuthorityGroups ) { if ( group . isSuper ( ) ) { return _BOOL ; } } return _BOOL ; }
23928	public void freeCacheContext ( Context ctx ) { ctx . clean ( ) ; ctx . setActive ( _BOOL ) ; }
23994	public static boolean PM ( int packedTime ) { return packedTime >= NOON ; }
24007	public synchronized VisualTable addTable ( String group , Table table , Predicate filter , Schema schema ) { VisualTable vt = new VisualTable ( table , this , group , filter , schema ) ; addDataGroup ( group , vt , table ) ; return vt ; }
24009	public void readerWait ( Object notifier , long time ) { try { synchronized ( notifier ) { readUnlock ( ) ; notifier . wait ( time ) ; } } catch ( InterruptedException e ) { throw new ConcurrentLockException ( _CHAR read wait interrupted in thread _CHAR ) ; } finally { readLock ( ) ; } }
24025	public static String toString ( Reader input ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw ) ; return sw . toString ( ) ; }
24038	@ Override public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { allowXMLCatalogPI = _BOOL ; super . unparsedEntityDecl ( name , publicId , systemId , notationName ) ; }
24046	public void startContentModel ( String elementName , short type ) throws XNIException { }
24061	public boolean containsErrors ( ) { return containsErrors ; }
24076	private < T > T readValue ( TypeReference < T > typeReference , String value ) { try { return objectMapper . readValue ( value , typeReference ) ; } catch ( IOException e ) { LOG . error ( _CHAR Exception while reading dimension rows { } _CHAR , e ) ; throw new RuntimeException ( e ) ; } }
24086	public static URL resolveLocation ( String location ) throws MalformedURLException { return resolveLocation ( location , _NULL ) ; }
24094	@ Deprecated public void resetTo ( long sequence ) { sequencer . claim ( sequence ) ; sequencer . publish ( sequence ) ; }
24095	@ Override public void handleMessage ( final SoapMessage msg ) throws Fault { if ( mode . isCheckOnly ( ) ) { logger . warn ( _CHAR Running in _CHAR + mode + _CHAR mode , no response signature verification available ! _CHAR ) ; } else if ( isErrorResponse ( msg ) ) { logger . warn ( _CHAR Validation error , no response signature verification available ! _CHAR ) ; } else { super . handleMessage ( msg ) ; } }
24098	private String appendNationalNumber ( String nationalNumber ) { int prefixBeforeNationalNumberLength = prefixBeforeNationalNumber . length ( ) ; if ( shouldAddSpaceAfterNationalPrefix && prefixBeforeNationalNumberLength > _NUM && prefixBeforeNationalNumber . charAt ( prefixBeforeNationalNumberLength - _NUM ) != SEPARATOR_BEFORE_NATIONAL_NUMBER ) { return new String ( prefixBeforeNationalNumber ) + SEPARATOR_BEFORE_NATIONAL_NUMBER + nationalNumber ; } else { return prefixBeforeNationalNumber + nationalNumber ; } }
24109	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data found when attempting to _CHAR + _CHAR deserialize TxnMgrProxy instance _CHAR ) ; }
24157	public void initGui ( ) { this . buttonList . clear ( ) ; if ( this . mc . playerController . isInCreativeMode ( ) ) { this . mc . displayGuiScreen ( new GuiContainerCreative ( this . mc . thePlayer ) ) ; } else { super . initGui ( ) ; } }
24162	protected void initEnvironment ( Options options , MainArguments mainArgs , JCommander jcommander ) { }
24168	public boolean safe_forname ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR safe - forname _CHAR ) ; }
24175	public void splashscreenHidden ( int reason ) { assert reason >= _NUM && reason < SPLASHSCREEN_HIDES_REASON_MAX ; RecordHistogram . recordEnumeratedHistogram ( HISTOGRAM_SPLASHSCREEN_HIDES , reason , SPLASHSCREEN_HIDES_REASON_MAX ) ; assert mSplashScreenVisibleTime != _NUM ; RecordHistogram . recordMediumTimesHistogram ( HISTOGRAM_SPLASHSCREEN_DURATION , SystemClock . elapsedRealtime ( ) - mSplashScreenVisibleTime , TimeUnit . MILLISECONDS ) ; }
24188	public boolean use_older_type_assigner ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR use - older - type - assigner _CHAR ) ; }
24202	public static ToolbarTapTarget forToolbarOverflow ( Toolbar toolbar , CharSequence title , @ Nullable CharSequence description ) { return new ToolbarTapTarget ( toolbar , _BOOL , title , description ) ; }
24208	public static List < String > readLines ( InputStream input ) throws IOException { return readLines ( input , Charset . defaultCharset ( ) ) ; }
24218	public String makeLinkAutoFull ( HttpServletRequest request , HttpServletResponse response , String url , Boolean absPath , Boolean interWebapp , String webSiteId , Boolean controller ) { return makeLinkAuto ( request , response , url , absPath , interWebapp , webSiteId , controller , _BOOL , _NULL , _NULL ) ; }
24225	public static final Gson createGson ( ) { return createGsonBuilder ( ) . create ( ) ; }
24233	public boolean exists ( ) { return _BOOL ; }
24244	public boolean isEndVisible ( int row ) { return getBoolean ( row , VisualItem . ENDVISIBLE ) ; }
24264	boolean enabledInAndroid ( Context context ) { return enabledGlobally ( ) && enabledForChrome ( context ) ; }
24268	public void java_lang_System_setIn0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable sysIn = helper . staticField ( _CHAR java . lang . System _CHAR , _CHAR in _CHAR ) ; helper . assign ( sysIn , params [ _NUM ] ) ; }
24292	public boolean dump_html ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - html _CHAR ) ; }
24303	public void put ( ServletRequest request , T value , Map < String , Object > expandContext ) { AttributeAccessor < T > aa = new AttributeAccessor < T > ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; aa . put ( request , value ) ; }
24304	private float smoothInput ( float current , float input ) { current = MathUtils . clamp ( current , input - _NUM , input + _NUM ) ; return MathUtils . interpolate ( current , input , _NUM . _NUM ) ; }
24308	public static String slurpFileNoExceptions ( String filename , String encoding ) { try { return slurpFile ( filename , encoding ) ; } catch ( Exception e ) { throw new RuntimeException ( ) ; } }
24313	public boolean match ( Context context , IEntryHolder entry , ITemplateHolder template , int skipAlreadyMatchedFixedPropertyIndex , String skipAlreadyMatchedIndexPath , boolean safeEntry ) { MatchResult res = template . match ( _cacheManager , entry , skipAlreadyMatchedFixedPropertyIndex , skipAlreadyMatchedIndexPath , safeEntry , context , _regexCache ) ; return res != MatchResult . NONE ; }
24328	public void updateIntent ( Intent intent ) { mIsMainIntent = intent != _NULL && Intent . ACTION_MAIN . equals ( intent . getAction ( ) ) ; mFirstActionTaken = NO_ACTIVITY ; mSessionStartTimestamp = System . nanoTime ( ) ; mRecordedHistogram = _BOOL ; }
24329	public static boolean isAssignable ( Class targetType , Class valueType ) { Assert . notNull ( targetType , _CHAR Target type must not be _NULL _CHAR ) ; Assert . notNull ( valueType , _CHAR Value type must not be _NULL _CHAR ) ; return ( targetType . isAssignableFrom ( valueType ) || targetType . equals ( primitiveWrapperTypeMap . get ( valueType ) ) ) ; }
24330	public boolean equals ( Object obj ) { if ( ! ( obj instanceof DelegationRelativeTime ) ) { return _BOOL ; } DelegationRelativeTime dc = ( DelegationRelativeTime ) obj ; return ( minStart == dc . minStart && maxStart == dc . maxStart && minStop == dc . minStop && maxStop == dc . maxStop ) ; }
24338	private Object writeReplace ( ) throws ObjectStreamException { return new LinkedHashMap < K , V > ( this ) ; }
24356	public static boolean deleteQuietly ( File file ) { if ( file == _NULL ) { return _BOOL ; } try { if ( file . isDirectory ( ) ) { cleanDirectory ( file ) ; } } catch ( Exception ignored ) { } try { return file . delete ( ) ; } catch ( Exception ignored ) { return _BOOL ; } }
24360	public boolean isDownloading ( Account account , OCFile file ) { if ( account == _NULL || file == _NULL ) return _BOOL ; return ( mPendingDownloads . contains ( account . name , file . getRemotePath ( ) ) ) ; }
24364	public static double [ ] convolve ( final double [ ] signal1 , final double [ ] signal2 , double deltaT ) { double [ ] result = convolve ( signal1 , signal2 ) ; for ( int i = _NUM ; i < result . length ; i ++ ) { result [ i ] *= deltaT ; } return result ; }
24365	public boolean on_fly_cg ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR on - fly - cg _CHAR ) ; }
24366	public int provideDumpInterval ( ) { return provideBlockThreshold ( ) ; }
24384	public static void notNull ( String argumentName , Object objectToTest ) { if ( objectToTest == _NULL ) { throw new IllegalArgumentException ( argumentName + _CHAR can not be _NULL _CHAR ) ; } }
24391	public void clearStyle ( ) { styler . clearStyle ( ) ; }
24401	protected void addToAnimation ( ChromeAnimation . Animation < Animatable < ? >> component ) { if ( mLayoutAnimations == _NULL || mLayoutAnimations . finished ( ) ) { onAnimationStarted ( ) ; mLayoutAnimations = new ChromeAnimation < Animatable < ? >> ( ) ; mLayoutAnimations . start ( ) ; } component . start ( ) ; mLayoutAnimations . add ( component ) ; requestUpdate ( ) ; }
24410	public Builder addColumnTime ( String columnName , TimeZone timeZone ) { return addColumnTime ( columnName , DateTimeZone . forTimeZone ( timeZone ) ) ; }
24442	public IdentifyFacesAction identifyFaces ( List < String > faceIds , String personGroupId , int maxNumOfCandidatesReturned ) { Validation . validateArray ( faceIds , _NUM , _NUM , new ParameterValidationException ( _CHAR faceIds _CHAR , _CHAR length must be between _NUM & _NUM _CHAR ) ) ; Validation . validateInt ( maxNumOfCandidatesReturned , _NUM , new ParameterValidationException ( _CHAR maxNumOfCandidatesReturned _CHAR , _CHAR maxNumOfCandidatesReturned must be between _NUM & _NUM _CHAR ) ) ; return new IdentifyFacesAction ( cognitiveContext , faceIds , personGroupId , maxNumOfCandidatesReturned ) ; }
24444	public void reset ( ) { _count = _NUM ; }
24456	public void showExpandableItems ( List < ExpandableItem > expandableItems ) { validateExpandableItems ( expandableItems ) ; reset ( ) ; setExpandableItems ( expandableItems ) ; renderExpandableItems ( ) ; hookListeners ( ) ; bringChildsToFront ( expandableItems ) ; }
24472	public static boolean isDiscoveredContainer ( ContainerState containerState ) { return containerState . descriptionLink != _NULL && containerState . descriptionLink . contains ( UriUtils . buildUriPath ( SystemContainerDescriptions . DISCOVERED_DESCRIPTION_LINK ) ) ; }
24487	public Builder position ( String position ) { this . position = position ; return this ; }
24493	public Vector3f mult ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } return mult ( vec , _NULL ) ; }
24499	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = StringCodingUtils . getBytes ( input , Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
24503	public boolean context_heap ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR context - heap _CHAR ) ; }
24515	public boolean isComponentNotPresent ( final String cssClassName ) { boolean missing = _BOOL ; try { wait . withTimeout ( Timeouts . SMALL ) . until ( _NULL ) ; missing = _BOOL ; } catch ( TimeoutException e ) { LOG . debug ( String . format ( _CHAR component located by : % s is not present _CHAR , cssClassName ) , e ) ; } return missing ; }
24519	public synchronized void update ( Vector2 mousePosition ) { this . beginPosition = mousePosition ; }
24529	public TrustManagerBuilder and ( ) { if ( ! mgr . isMatchAll ( ) ) { if ( mgr . size ( ) < _NUM ) { mgr . setMatchAll ( _BOOL ) ; } else { mgr = CompositeTrustManager . matchAll ( mgr ) ; } } return ( this ) ; }
24543	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
24552	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
24558	public void putAll ( Map < ? extends K , ? extends V > m ) { for ( Map . Entry < ? extends K , ? extends V > e : m . entrySet ( ) ) put ( e . getKey ( ) , e . getValue ( ) ) ; }
24564	public boolean isSecondPhase ( ) { return _secondPhase ; }
24567	public WallEditCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
24574	@ Override public void beforeFirst ( ) { nextBlkNum = _NUM ; useNextChunk ( ) ; }
24575	public Builder discCacheExtraOptions ( int maxImageWidthForDiscCache , int maxImageHeightForDiscCache , CompressFormat compressFormat , int compressQuality , BitmapProcessor processorForDiscCache ) { this . maxImageWidthForDiscCache = maxImageWidthForDiscCache ; this . maxImageHeightForDiscCache = maxImageHeightForDiscCache ; this . imageCompressFormatForDiscCache = compressFormat ; this . imageQualityForDiscCache = compressQuality ; this . processorForDiscCache = processorForDiscCache ; return this ; }
24578	public static < E > Stream < LongSummaryStatistics > shiftingWindowSummarizingLong ( Stream < E > stream , int rollingFactor , ToLongFunction < ? super E > mapper ) { Objects . requireNonNull ( stream ) ; Objects . requireNonNull ( mapper ) ; LongStream longStream = stream . mapToLong ( mapper ) ; return shiftingWindowSummarizingLong ( longStream , rollingFactor ) ; }
24580	public static final String name ( SimpleGroupPath group , MetricName metric ) { return name ( Stream . concat ( group . getPath ( ) . stream ( ) , metric . getPath ( ) . stream ( ) ) . collect ( Collectors . joining ( _CHAR . _CHAR ) ) ) ; }
24608	@ Override @ CallSuper public void onPause ( ) { running = _BOOL ; }
24618	static Principal [ ] reduce ( Collection c ) { try { return reduce0 ( ( Principal [ ] ) c . toArray ( new Principal [ c . size ( ) ] ) ) ; } catch ( ArrayStoreException e ) { throw new IllegalArgumentException ( _CHAR element of collection is not a Principal _CHAR ) ; } }
24622	public void writeTo ( OutputStream out ) throws IOException { out . write ( _buffer , _NUM , _count ) ; }
24628	public void updateConfiguration ( @ NotNull Configuration configuration ) { myConfiguration = configuration ; invalidateGraphicsRenderer ( ) ; }
24641	public static void updateLong ( VisualItem item , String field , long val ) { item . setLong ( getStartField ( field ) , item . getLong ( field ) ) ; item . setLong ( field , val ) ; item . setLong ( getEndField ( field ) , val ) ; }
24643	public static void shutdown ( ) { LRMIRuntime . getRuntime ( ) . shutdown ( ) ; }
24668	public static InputStream toInputStream ( CharSequence input , String encoding ) throws IOException { return toInputStream ( input , Charsets . toCharset ( encoding ) ) ; }
24670	public static String toString ( InputStream input , Charset encoding ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw , encoding ) ; return sw . toString ( ) ; }
24671	public JSONObject optJSONObject ( int index ) { Object o = opt ( index ) ; return o instanceof JSONObject ? ( JSONObject ) o : _NULL ; }
24672	public static void write ( char [ ] data , Writer output ) throws IOException { if ( data != _NULL ) { output . write ( data ) ; } }
24682	public void deleteData ( int offset , int count ) throws DOMException { internalDeleteData ( offset , count , _BOOL ) ; }
24692	@ JsOverlay final public < R extends JsPlainObj > R except ( String ... exclude ) { return JsHelper . except ( this , exclude ) ; }
24735	public static boolean isRestricted ( Player player , Class < ? extends Restrictions > callingRestriction ) { if ( player == _NULL ) { return _BOOL ; } for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . isRestricted . ordinal ( ) ] ) { if ( ! restrictions . isRestricted ( player , callingRestriction ) ) { return _BOOL ; } } return _BOOL ; }
24741	public static String contextualEncode ( String s , Type t ) { return _encode ( s , t , _BOOL , _BOOL ) ; }
24747	public void unlockFlushing ( ) { flushLock . unlock ( ) ; }
24752	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
24754	public boolean isInAABB ( Vector min , Vector max ) { return x >= min . x && x <= max . x && y >= min . y && y <= max . y && z >= min . z && z <= max . z ; }
24758	protected void refreshConnectionUntilSuccessful ( ) { sleepInbetweenRecoveryAttempts ( ) ; }
24803	protected AdsGetDemographicsQuery dateFrom ( String value ) { return unsafeParam ( _CHAR date_from _CHAR , value ) ; }
24806	public static void write ( char [ ] data , Writer output ) throws IOException { if ( data != _NULL ) { output . write ( data ) ; } }
24813	public void add ( String expr , Font font ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , font ) ; }
24815	public double intercept ( ) { return alpha ; }
24819	public ConsistencyLevel clamp ( ConsistencyLevel consistencyLevel ) { return _topologyAdapter . clamp ( consistencyLevel ) ; }
24835	public boolean isSimilarTo ( final Line line ) { final double angle = Vector3D . angle ( direction , line . direction ) ; return ( ( angle < tolerance ) || ( angle > ( FastMath . PI - tolerance ) ) ) && contains ( line . zero ) ; }
24837	@ Override public void reset ( ) throws IOException { fInputStream . reset ( ) ; }
24859	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( classes ) ; }
24867	public static void writeStringToFile ( File file , String data , Charset encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
24874	public Map < String , Object > makeValidContext ( String serviceName , String mode , Map < String , ? extends Object > context ) throws GenericServiceException { ModelService model = getModelService ( serviceName ) ; return makeValidContext ( model , mode , context ) ; }
24884	public void java_lang_Class_setSigners ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable tempFld = helper . tempField ( _CHAR < java . lang . Class signers > _CHAR ) ; helper . assign ( tempFld , params [ _NUM ] ) ; }
24904	public int keyAt ( int index ) { return mKeys [ index ] ; }
24913	public CMMModel train ( List < String > taggedSentences , String modelFileName , CMMParams params ) { DataFrame dataset = createDataFrame ( taggedSentences ) ; return train ( dataset , modelFileName , params ) ; }
24914	public static boolean isUpdateOnly ( int mod ) { return Modifiers . contains ( mod , UpdateModifiers . UPDATE_ONLY ) ; }
24944	private View findReferenceChildClosestToEnd ( RecyclerView . State state ) { return mShouldReverseLayout ? findFirstReferenceChild ( state . getItemCount ( ) ) : findLastReferenceChild ( state . getItemCount ( ) ) ; }
24949	public int optInt ( String key , int defaultValue ) { try { return getInt ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
24958	public void resume ( ) { if ( mPaused && ! valueAnimator . isRunning ( ) ) { mPaused = _BOOL ; startValueAnimator ( elapsedTime / _NUM , fullTime / _NUM , ( long ) ( fullTime - elapsedTime ) ) ; } }
24964	public void addStatus ( final ConfigConstants . Status pStatus ) { if ( pStatus . severity > status . severity ) { status = pStatus ; } }
24966	@ NotNull public AddFaceToPersonAction addFaceToPerson ( @ NotNull String personGroupId , @ NotNull String personId , String userData , File image ) { return addFaceToPerson ( personGroupId , personId , userData , Utils . fileToFileInputStream ( image ) ) ; }
24974	public void unregisterToolbar ( RTToolbar toolbar ) { mToolbars . remove ( toolbar . getId ( ) ) ; toolbar . removeToolbarListener ( ) ; updateToolbarVisibility ( ) ; }
24980	public Iterator iterator ( ) { return new Iterator ( ) ; }
24984	@ Override public void onRemoveDataTag ( final ISourceDataTag sourceDataTag , final ChangeReport changeReport ) { changeReport . appendError ( _CHAR The equipment has no implementation to _CHAR + _CHAR remove data tags . You have to restart the DAQ . '' ) ; changeReport . setState ( CHANGE_STATE . REBOOT ) ; }
24985	public String toString ( ) { return this . mode == _CHAR ? this . writer . toString ( ) : _NULL ; }
24986	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
25000	public Builder reorderColumns ( String ... newOrder ) { return transform ( new ReorderColumnsTransform ( newOrder ) ) ; }
25041	public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } if ( obj instanceof GrantPermission ) { GrantPermission gp = ( GrantPermission ) obj ; return this . implies ( gp ) && gp . implies ( this ) ; } return _BOOL ; }
25046	public boolean isOptimal ( int optimalQueries ) { return getLargestGroupSize ( ) >= optimalQueries ; }
25051	public void add ( String expr , int shape ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; add ( p , shape ) ; }
25061	@ NonNull private boolean hasGalleryApp ( @ NonNull Context context ) { return isIntentResolvable ( getGalleryIntent ( ) , context ) ; }
25072	public < T > T showDialog ( Function < FileChooser , T > method ) { return showDialog ( method , _NUM , TimeUnit . SECONDS ) ; }
25074	public static boolean matches ( String str , String regex ) { return Pattern . compile ( regex ) . matcher ( str ) . matches ( ) ; }
25081	public String cleanTextValue ( String text ) { if ( text != _NULL ) { return text . trim ( ) ; } else { return text ; } }
25084	public boolean dump_solution ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - solution _CHAR ) ; }
25091	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
25111	public boolean isValidInfrastructureTld ( String iTld ) { iTld = unicodeToASCII ( iTld ) ; return Arrays . binarySearch ( INFRASTRUCTURE_TLDS , ( chompLeadingDot ( iTld . toLowerCase ( Locale . ENGLISH ) ) ) ) >= _NUM ; }
25116	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
25122	private void parseNoWildCards ( ) { fSegments = new String [ _NUM ] ; fSegments [ _NUM ] = fPattern ; fBound = fLength ; }
25153	public final synchronized String resolveURI ( String uri ) throws IOException { if ( fCatalogsChanged ) { parseCatalogs ( ) ; fCatalogsChanged = _BOOL ; } return ( fCatalog != _NULL ) ? fCatalog . resolveURI ( uri ) : _NULL ; }
25159	public boolean optBoolean ( String key , boolean defaultValue ) { try { return getBoolean ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
25180	public static String storedByIsValid ( String storedBy ) { if ( storedBy == _NULL || storedBy . trim ( ) . isEmpty ( ) ) { return _NULL ; } if ( storedBy . length ( ) > _NUM ) { return _CHAR stored_by_length_greater_than_max_length _CHAR ; } return _NULL ; }
25181	@ Override public int available ( ) throws IOException { int av = super . available ( ) ; if ( av <= _NUM ) return av ; return av / inputChannels ; }
25188	public boolean field_based ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR field - based _CHAR ) ; }
25192	public static void postDelayed ( Runnable r , long delayMillis ) { sMainHandler . postDelayed ( r , delayMillis ) ; }
25227	private void cacheAuthorizationInfoByInternalId ( String internalId , AuthorizationInfo authorizationInfo ) { Cache < String , AuthorizationInfo > internalAuthorizationCache = getAvailableInternalAuthorizationCache ( ) ; if ( internalAuthorizationCache != _NULL ) { internalAuthorizationCache . put ( internalId , authorizationInfo ) ; } }
25228	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output , String encoding ) throws IOException { writeLines ( lines , lineEnding , output , Charsets . toCharset ( encoding ) ) ; }
25231	public void addTagIds ( final Collection < Long > tagIds ) { if ( tagIds != _NULL ) { for ( Long tagId : tagIds ) { addTagId ( tagId ) ; } } }
25262	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; registrarID = new ServiceID ( in ) ; if ( ! ( server instanceof RemoteMethodControl ) ) { throw new InvalidObjectException ( _CHAR server does not implement RemoteMethodControl _CHAR ) ; } else if ( ! ( server instanceof TrustEquivalence ) ) { throw new InvalidObjectException ( _CHAR server does not implement TrustEquivalence _CHAR ) ; } }
25265	protected PhotosGetByIdQuery photos ( List < String > value ) { return unsafeParam ( _CHAR photos _CHAR , value ) ; }
25271	public synchronized void update ( Vector2 mousePosition ) { this . beginPosition = mousePosition ; }
25279	public static byte [ ] toByteArray ( Reader input , String encoding ) throws IOException { return toByteArray ( input , Charsets . toCharset ( encoding ) ) ; }
25303	public static GeneralPath cardinalSpline ( float pts [ ] , float slack , boolean closed ) { GeneralPath path = new GeneralPath ( ) ; path . moveTo ( pts [ _NUM ] , pts [ _NUM ] ) ; return cardinalSpline ( path , pts , slack , closed , _NUM , _NUM ) ; }
25334	@ Override public void cleanup ( ) { fEntityManager . closeReaders ( ) ; }
25339	public static long tankiness ( final Pokemon p ) { return tankiness ( p . getPokemonId ( ) , p . getIndividualDefense ( ) , p . getIndividualStamina ( ) ) ; }
25371	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = input . getBytes ( Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
25375	private boolean warmUpTextLayoutCache ( Layout layout ) { boolean result ; try { layout . draw ( DUMMY_CANVAS ) ; result = _BOOL ; } catch ( Exception e ) { WXLogUtils . eTag ( TAG , e ) ; result = _BOOL ; } return result ; }
25407	@ Override public synchronized Throwable initCause ( Throwable throwable ) { if ( fException != this ) { throw new IllegalStateException ( ) ; } if ( throwable == this ) { throw new IllegalArgumentException ( ) ; } fException = ( Exception ) throwable ; return this ; }
25426	@ Override default boolean aligns ( DateTime dateTime ) { return dateTime . equals ( roundFloor ( dateTime ) ) ; }
25430	public void fileRotated ( ) { }
25439	public boolean isFinished ( ) { return this . request == _NULL || request . isDone ( ) ; }
25444	public boolean naive_side_effect ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR naive - side - effect _CHAR ) ; }
25448	public void add ( Predicate p , SizeAction f ) { super . add ( p , f ) ; }
25463	public Bundler putStringArrayList ( String key , ArrayList < String > value ) { bundle . putStringArrayList ( key , value ) ; return this ; }
25482	public String makeLinkAuto ( HttpServletRequest request , HttpServletResponse response , String url , Boolean absPath , Boolean interWebapp , String webSiteId , Boolean controller ) { return makeLinkAuto ( request , response , url , absPath , interWebapp , webSiteId , controller , _NULL , _NULL , _NULL ) ; }
25489	public static double hz2bark ( double freqInHz ) { double f = freqInHz / _NUM ; return _NUM * Math . log ( f + Math . sqrt ( ( f * f ) + _NUM ) ) ; }
25497	@ Override public void startParameterEntity ( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs ) throws XNIException { }
25513	public static char [ ] toCharArray ( InputStream is , Charset encoding ) throws IOException { CharArrayWriter output = new CharArrayWriter ( ) ; copy ( is , output , encoding ) ; return output . toCharArray ( ) ; }
25520	public static void writeLines ( File file , Collection < ? > lines ) throws IOException { writeLines ( file , _NULL , lines , _NULL , _BOOL ) ; }
25533	public synchronized void requestPreviewFrame ( Handler handler , int message ) { Camera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . setOneShotPreviewCallback ( previewCallback ) ; } }
25538	@ Override public boolean accept ( File file ) { boolean smaller = file . length ( ) < size ; return acceptLarger ? ! smaller : smaller ; }
25545	public IntIterator rowsSortedBy ( String field , boolean ascend ) { Class type = getColumnType ( field ) ; Index index = getIndex ( field , type , _BOOL ) ; int t = ascend ? Index . TYPE_ASCENDING : Index . TYPE_DESCENDING ; return index . allRows ( t ) ; }
25547	public boolean intersectWherePlanar ( Triangle t , Vector3f loc ) { return intersectWherePlanar ( t . get ( _NUM ) , t . get ( _NUM ) , t . get ( _NUM ) , loc ) ; }
25550	public synchronized VisualTable addTable ( VisualTable table ) { addDataGroup ( table . getGroup ( ) , table , table . getParentTable ( ) ) ; table . setVisualization ( this ) ; return table ; }
25564	public static int copy ( Reader input , Writer output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
25573	public Builder crs ( ICRS crs ) { this . crs = crs ; return this ; }
25574	public static Iterator providers ( Class service , ClassLoader loader ) throws ServiceConfigurationError { return new LazyIterator ( service , loader ) ; }
25590	private static Unit insertGotoAfter ( Chain < Unit > unitChain , Unit node , Unit target ) { Unit newGoto = Jimple . v ( ) . newGotoStmt ( target ) ; unitChain . insertAfter ( newGoto , node ) ; return newGoto ; }
25600	public Builder autoZIndex ( Boolean autoZIndex ) { this . autoZIndex = autoZIndex ; return this ; }
25610	public void pushResourceBundle ( ResourceBundle topResourceBundle ) { this . rbmwStack . push ( new InternalRbmWrapper ( topResourceBundle ) ) ; }
25617	void skipNextUpdateDelay ( ) { mySkipWait = _BOOL ; }
25628	public List < String > names ( ) { return Collections . unmodifiableList ( names ) ; }
25630	public JsonObject add ( String name , int value ) { add ( name , Json . value ( value ) ) ; return this ; }
25640	private void _cancelActivity ( Activity a ) { boolean fire = _BOOL ; synchronized ( this ) { synchronized ( a ) { if ( a . isScheduled ( ) ) { _removeActivity ( a ) ; fire = _BOOL ; } a . setRunning ( _BOOL ) ; } } if ( fire ) a . fireActivityCancelled ( ) ; }
25647	public FTPReply sendCustomCommand ( String command ) throws IllegalStateException , IOException , FTPIllegalReplyException { synchronized ( lock ) { if ( ! connected ) { throw new IllegalStateException ( _CHAR Client not connected _CHAR ) ; } communication . sendFTPCommand ( command ) ; touchAutoNoopTimer ( ) ; return communication . readFTPReply ( ) ; } }
25652	public boolean verbose ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR verbose _CHAR ) ; }
25653	public static SM_SYSTEM_MESSAGE STR_NORMAL_REMAIN_PLAYTIME ( String value0 , String value1 , String value2 , String value3 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 , value2 , value3 ) ; }
25661	public void acquireWriteLock ( ) { for ( int i = _NUM ; i < _numOfSegments ; i ++ ) _writeLocks [ i ] . lock ( ) ; }
25673	@ Override public boolean equals ( Object o ) { if ( this == o ) return _BOOL ; if ( ! ( o instanceof WeakKey ) ) return _BOOL ; WeakKey weakKey = ( WeakKey ) o ; Object key = weakKey . get ( ) ; return key == get ( ) ; }
25676	public boolean isDirty ( CoordinatorLayout parent , V child ) { return _BOOL ; }
25700	public synchronized TemporaryQueue createTemporaryQueue ( ) throws JMSException { ensureOpen ( ) ; if ( _logger . isLoggable ( Level . FINE ) ) { _logger . log ( Level . FINE , _CHAR Creating temporary Queue _CHAR ) ; } return new GSTemporaryQueueImpl ( m_sessionID + _CHAR : _CHAR + getRandomInt ( ) , m_sessionID ) ; }
25707	@ Override public Vector whatCanGoHere ( int [ ] state ) { Vector ret = new Vector ( ) ; for ( int i = _NUM ; i < fNumElements ; i ++ ) { if ( state [ i + _NUM ] == STATE_START ) ret . addElement ( fAllElements [ i ] ) ; } return ret ; }
25716	public void append ( File file ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { append ( file , _NULL ) ; }
25720	public < T extends EntityCondition > EntityQuery where ( List < T > andConditions ) { this . whereEntityCondition = EntityCondition . makeCondition ( andConditions ) ; return this ; }
25723	public void requestPreviewFrame ( Handler handler , int message ) { Camera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . setOneShotPreviewCallback ( previewCallback ) ; } }
25732	public VideoSaveQuery isPrivate ( Boolean value ) { return unsafeParam ( _CHAR is_private _CHAR , value ) ; }
25794	public synchronized void addSubscription ( Subscription subscription ) { if ( waitList . isEmpty ( ) && ! serviceQueue . isEmpty ( ) ) { subscription . onPublish ( serviceQueue . poll ( ) ) ; } else { waitList . putIfAbsent ( subscription . getId ( ) , new WaitingSubscription ( subscription ) ) ; } }
25798	public JsonObject add ( String name , double value ) { add ( name , Json . value ( value ) ) ; return this ; }
25808	public boolean add_tags ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR add - tags _CHAR ) ; }
25815	public Builder iconAnchor ( Point iconAnchor ) { this . iconAnchor = iconAnchor ; return this ; }
25818	public boolean hasIDConstraints ( ) { return fHasIDC ; }
25829	@ Override public void endGeneralEntity ( String name , Augmentations augs ) throws XNIException { if ( fDocumentHandler != _NULL && ! fOnlyPassPrefixMappingEvents ) { fDocumentHandler . endGeneralEntity ( name , augs ) ; } }
25841	public static String string ( String prefix ) { return prefix + _CHAR = _CHAR + string ( ) ; }
25857	public boolean rta ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR rta _CHAR ) ; }
25868	public boolean dump_solution ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - solution _CHAR ) ; }
25873	public boolean hasUUID ( long uuid ) { return _uuid == uuid ; }
25875	public boolean performGradleSync ( ) { return myGradleSync ; }
25887	public boolean with_classfield ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - classfield _CHAR ) ; }
25896	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
25901	public static S2Cap fromAxisHeight ( S2Point axis , double height ) { return new S2Cap ( axis , height ) ; }
25902	public float angleBetween ( Vector3f otherVector ) { float dotProduct = dot ( otherVector ) ; float angle = FastMath . acos ( dotProduct ) ; return angle ; }
25918	public static char [ ] toCharArray ( InputStream is , Charset encoding ) throws IOException { CharArrayWriter output = new CharArrayWriter ( ) ; copy ( is , output , encoding ) ; return output . toCharArray ( ) ; }
25921	public static Uuid create ( long bits0 , long bits1 ) { return new Impl ( bits0 , bits1 ) ; }
25933	@ Override public void onAddDataTag ( final ISourceDataTag sourceDataTag , final ChangeReport changeReport ) { changeReport . appendError ( _CHAR The equipment has no implementation to _CHAR + _CHAR add data tags . You have to restart the DAQ . '' ) ; changeReport . setState ( CHANGE_STATE . REBOOT ) ; }
25939	public void insertText ( String inputtype , String outputtype , String locale , String voice , String inputtext , String outputtext ) throws SQLException { insertText ( inputtype , outputtype , locale , voice , _NULL , _NULL , _NULL , inputtext , outputtext ) ; }
25955	private boolean canPickImageFromCamera ( @ NonNull Context context ) { return hasCamera ( context ) ; }
25974	public static String toString ( InputStream input , String encoding ) throws IOException { return toString ( input , Charsets . toCharset ( encoding ) ) ; }
25975	@ Override public boolean next ( ) { while ( _BOOL ) { if ( rp . next ( ) ) return _BOOL ; if ( current == endBlkNum ) return _BOOL ; moveToBlock ( current + _NUM ) ; } }
25977	public static void linkCyberware ( Item item , ICyberware link ) { if ( item == _NULL ) return ; ItemStack key = new ItemStack ( item , _NUM , OreDictionary . WILDCARD_VALUE ) ; linkedWare . put ( key , link ) ; }
25984	public short key ( ) { return _map . _set [ _index ] ; }
25991	public Builder closeOnClick ( Boolean closeOnClick ) { this . closeOnClick = closeOnClick ; return this ; }
26002	public double slope ( ) { return beta ; }
26010	public String optString ( int index ) { return this . optString ( index , _CHAR _CHAR ) ; }
26030	@ Override public void close ( ) { for ( int i = _NUM ; i < dictionaries . length ; i ++ ) { CarbonUtil . clearDictionaryCache ( dictionaries [ i ] ) ; } }
26045	public boolean isPaymentsAdequate ( ) { return CheckOutHelper . isPaymentsAdequate ( this ) ; }
26047	public static UByte ubyte ( byte value ) { return UByte . valueOf ( value ) ; }
26061	protected String updateDdlForMySqlVersionLowerThan56 ( String ddlStatements ) { return ddlStatements . replace ( _CHAR timestamp ( _NUM ) _CHAR , _CHAR timestamp _CHAR ) . replace ( _CHAR datetime ( _NUM ) _CHAR , _CHAR datetime _CHAR ) . replace ( _CHAR TIMESTAMP ( _NUM ) _CHAR , _CHAR TIMESTAMP _CHAR ) . replace ( _CHAR DATETIME ( _NUM ) _CHAR , _CHAR DATETIME _CHAR ) ; }
26066	private void initializePreferredResources ( ) throws IOException { assert Thread . holdsLock ( this ) ; assert preferredResources == _NULL ; if ( firstURL != _NULL ) { InputStream prefIn = getPreferredInputStream ( firstURL ) ; if ( prefIn != _NULL ) { try { preferredResources = new PreferredResources ( prefIn ) ; } finally { try { prefIn . close ( ) ; } catch ( IOException e ) { } } } } }
26110	private static int capacity ( int expectedSize ) { if ( expectedSize < _NUM ) { checkNonnegative ( expectedSize , _CHAR expectedSize _CHAR ) ; return expectedSize + _NUM ; } if ( expectedSize < MAX_POWER_OF_TWO ) { return ( int ) ( ( float ) expectedSize / _NUM . _NUM + _NUM . _NUM ) ; } return Integer . MAX_VALUE ; }
26112	@ Override @ Transactional TMTextUnitVariant importTextUnit ( Long tmTextUnitId , TextContainer target ) { TMTextUnitVariant importTextUnit = super . importTextUnit ( tmTextUnitId , target ) ; translationKitService . markTranslationKitTextUnitAsImported ( translationKit , importTextUnit ) ; return importTextUnit ; }
26120	public static File findOrCreateDir ( File parent , String dirName ) { File directory = new File ( parent , dirName ) ; if ( ! directory . exists ( ) ) { directory . mkdirs ( ) ; } return directory ; }
26148	@ Override public float nextFloat ( ) { return randomGenerator . nextFloat ( ) ; }
26163	public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } else if ( ! ( obj instanceof ProxyTrustInvocationHandler ) ) { return _BOOL ; } ProxyTrustInvocationHandler oh = ( ProxyTrustInvocationHandler ) obj ; return main . equals ( oh . main ) && boot . equals ( oh . boot ) ; }
26165	public void upload ( File file , long restartAt ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { upload ( file , restartAt , _NULL ) ; }
26211	public void unregisterEditor ( RTEditText editor ) { mEditors . remove ( editor . getId ( ) ) ; editor . unregister ( ) ; updateToolbarVisibility ( ) ; }
26219	public static float sign ( final float x ) { if ( Float . isNaN ( x ) ) { return Float . NaN ; } return ( x == _NUM . _NUM ) ? _NUM . _NUM : ( x > _NUM . _NUM ) ? _NUM . _NUM : - _NUM . _NUM ; }
26227	public JSONArray put ( int index , boolean value ) throws JSONException { this . put ( index , value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
26234	public long ticks ( ) { long ret = _NUM ; synchronized ( eventsList ) { if ( eventsList . size ( ) > _NUM ) { ret = ( ( MidiEvent ) eventsList . get ( eventsList . size ( ) - _NUM ) ) . getTick ( ) ; } } return ret ; }
26250	public static List < String > readLines ( InputStream input ) throws IOException { return readLines ( input , Charset . defaultCharset ( ) ) ; }
26253	public TrustManagerBuilder add ( TrustManager ... mgrs ) { for ( TrustManager tm : mgrs ) { if ( tm instanceof X509TrustManager ) { mgr . add ( ( X509TrustManager ) tm ) ; } } return ( this ) ; }
26255	protected AdsGetStatisticsQuery dateFrom ( String value ) { return unsafeParam ( _CHAR date_from _CHAR , value ) ; }
26258	public static DoubleStream shiftingWindowAveragingInt ( IntStream intStream , int rollingFactor ) { Objects . requireNonNull ( intStream ) ; RollingOfIntSpliterator ofIntSpliterator = RollingOfIntSpliterator . of ( intStream . spliterator ( ) , rollingFactor ) ; return StreamSupport . stream ( ofIntSpliterator , intStream . isParallel ( ) ) . onClose ( _NULL ) . mapToDouble ( _NULL ) ; }
26267	public static S2LatLngRect fromCenterSize ( S2LatLng center , S2LatLng size ) { return fromPoint ( center ) . expanded ( size . mul ( _NUM . _NUM ) ) ; }
26273	public void type ( char c ) { if ( Character . isAlphabetic ( c ) ) { typeAlphabetic ( c ) ; } else if ( charShiftType . containsKey ( c ) ) { charShiftType . get ( c ) . apply ( controller ) ; } else if ( ! typeSpecialChar ( c ) ) { typeUnknown ( c ) ; } }
26287	@ Override public void surfaceDestroyed ( SurfaceHolder holder ) { }
26297	public static Integer parseInt ( String string ) { if ( string == _NULL || string . trim ( ) . isEmpty ( ) ) { return _NULL ; } try { return Integer . parseInt ( string ) ; } catch ( NumberFormatException ex ) { return _NULL ; } }
26301	public void denyAll ( PermissionFlag flag ) { denyAll ( flag , defaultMessage ) ; }
26308	public Vector2f addLocal ( Vector2f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x += vec . x ; y += vec . y ; return this ; }
26345	public void writeBoolean ( boolean value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _BOOLEAN ) ; this . dataOut . writeBoolean ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
26351	public boolean cancel ( boolean mayInterruptIfRunning ) { return this . request != _NULL && request . cancel ( mayInterruptIfRunning ) ; }
26356	Future < ? extends DistributedLock > lockHandler ( ) { if ( _NULL != lockFuture ) { return lockFuture ; } lockFuture = lock . asyncAcquire ( ) ; return lockFuture ; }
26361	private int peekToken ( ) throws XNIException { if ( fCurrentTokenIndex == fTokenCount ) reportError ( _CHAR XPointerElementSchemeProcessingError _CHAR , _NULL ) ; return fTokens [ fCurrentTokenIndex ] ; }
26363	protected void persistDecisionTables ( ParsedDeployment parsedDeployment ) { CommandContext commandContext = Context . getCommandContext ( ) ; DecisionTableEntityManager decisionTableEntityManager = commandContext . getDecisionTableEntityManager ( ) ; for ( DecisionTableEntity decisionTable : parsedDeployment . getAllDecisionTables ( ) ) { decisionTableEntityManager . insert ( decisionTable ) ; } }
26375	public Action removeAction ( String name ) { Action a = getAction ( name ) ; if ( a != _NULL ) { a . cancel ( ) ; m_actions . remove ( name ) ; a . setVisualization ( _NULL ) ; } return a ; }
26376	protected void handleKeyMatchedBeforeCompare ( T oldObject , T newObject ) { }
26421	@ TargetApi ( _NUM ) public Bundler putCharSequenceArrayList ( String key , ArrayList < CharSequence > value ) { bundle . putCharSequenceArrayList ( key , value ) ; return this ; }
26428	public String toString ( ) { return this . mode == _CHAR ? this . writer . toString ( ) : _NULL ; }
26437	public RTText convertTo ( RTFormat destFormat , RTMediaFactory < RTImage , RTAudio , RTVideo > mediaFactory ) { if ( destFormat == mRTFormat ) { return this ; } throw new UnsupportedOperationException ( _CHAR Ca n _CHAR_CHAR_CHAR_CHAR + destFormat . getClass ( ) . getSimpleName ( ) ) ; }
26461	public static void requestPermission ( CordovaPlugin plugin , int requestCode , String permission ) { PermissionHelper . requestPermissions ( plugin , requestCode , new String [ ] { permission } ) ; }
26473	public void startEntity ( String name , String publicId , String systemId , String encoding ) throws XNIException { }
26476	public StreamMessage createStreamMessage ( ) throws JMSException { ensureOpen ( ) ; GSStreamMessageImpl streamMsg = new GSStreamMessageImpl ( this ) ; return streamMsg ; }
26490	public void attachTo ( RecyclerView recycler ) { attachTo ( recycler , _BOOL ) ; }
26493	public boolean equalTo ( Entry e ) { if ( e == _NULL ) return _BOOL ; if ( e . mData != this . mData ) return _BOOL ; if ( e . mXIndex != this . mXIndex ) return _BOOL ; if ( Math . abs ( e . mVal - this . mVal ) > _NUM . _NUM ) return _BOOL ; return _BOOL ; }
26504	public int available ( ) throws IOException { int avail = ( count - pos - _NUM ) + in . available ( ) ; return ( avail < _NUM ? _NUM : avail ) ; }
26508	@ Override public boolean next ( ) { if ( isLhsEmpty ) return _BOOL ; if ( idx . next ( ) ) { ts . moveToRecordId ( idx . getDataRecordId ( ) ) ; return _BOOL ; } else if ( ! ( isLhsEmpty = ! s . next ( ) ) ) { resetIndex ( ) ; return next ( ) ; } else return _BOOL ; }
26509	@ Deprecated public void ignoreMissingProperties ( boolean ignore ) { setIgnoreMissingProperties ( ignore ) ; }
26512	public static boolean isValid ( int c ) { return ( c < _NUM && ( CHARS [ c ] & MASK_VALID ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
26517	public static UInteger uint ( int value ) { return UInteger . valueOf ( value ) ; }
26525	public static List < String > readLines ( InputStream input , String encoding ) throws IOException { return readLines ( input , Charsets . toCharset ( encoding ) ) ; }
26532	public EntityQuery where ( Object ... fields ) { this . whereEntityCondition = EntityCondition . makeCondition ( UtilMisc . toMap ( fields ) ) ; return this ; }
26539	protected Preference onCreateItem ( String name , AttributeSet attrs ) throws ClassNotFoundException { return createItem ( name , mDefaultPackages , attrs ) ; }
26540	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output ) throws IOException { writeLines ( lines , lineEnding , output , Charset . defaultCharset ( ) ) ; }
26541	public void mixedElement ( String elementName ) throws XNIException { }
26543	@ Override protected void authorizeRequests ( final HttpSecurity http ) throws Exception { http . authorizeRequests ( ) . antMatchers ( _CHAR / ping _CHAR ) . permitAll ( ) . anyRequest ( ) . authenticated ( ) ; }
26544	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { return elementType ( ) . isReifiable ( ) ; } finally { } }
26547	@ After @ Before @ CacheEvict ( _CHAR default _CHAR ) public void post ( ) { }
26571	public static void loadArmV7aLibrary ( ApplicationLike applicationLike , String libName ) { if ( libName == _NULL || libName . isEmpty ( ) || applicationLike == _NULL ) { throw new TinkerRuntimeException ( _CHAR libName or context is _NULL ! _CHAR ) ; } if ( TinkerApplicationHelper . isTinkerEnableForNativeLib ( applicationLike ) ) { if ( TinkerApplicationHelper . loadLibraryFromTinker ( applicationLike , _CHAR lib / armeabi - v7a _CHAR , libName ) ) { return ; } } System . loadLibrary ( libName ) ; }
26576	@ Override public void run ( ) { try { AudioSystem . write ( m_audioInputStream , m_targetType , m_outputFile ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
26578	@ Override public String addSymbol ( String symbol ) { synchronized ( fSymbolTable ) { return fSymbolTable . addSymbol ( symbol ) ; } }
26579	public boolean use_original_names ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR use - original - names _CHAR ) ; }
26582	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
26583	public JsonObject add ( String name , String value ) { add ( name , Json . value ( value ) ) ; return this ; }
26584	public static final String unescapeHtml4 ( final String input ) { return UNESCAPE_HTML4 . translate ( input ) ; }
26586	public Path newPath ( ) { return new FieldPathNode ( ) ; }
26601	private boolean canScrollLinearly ( int fromStackIndex ) { int count = mStacks . length ; if ( ! ( mScrollIndexOffset <= _NUM && - mScrollIndexOffset <= ( count - _NUM ) ) ) { return _BOOL ; } return mStacks [ fromStackIndex ^ _NUM ] . isDisplayable ( ) ; }
26606	@ Override public ProcessChange removeControlTag ( Long id , ConfigurationElementReport tagReport ) { ProcessChange change = controlTagConfigTransacted . doRemoveControlTag ( id , tagReport ) ; controlTagCache . remove ( id ) ; return change ; }
26611	protected void prepareBlock ( ) { }
26617	public PhotosGetAllQueryWithExtended noServiceAlbums ( Boolean value ) { return unsafeParam ( _CHAR no_service_albums _CHAR , value ) ; }
26644	public boolean isEmpty ( ) { return size ( ) == _NUM ; }
26657	public final char yycharat ( int pos ) { return zzBufferArray != _NULL ? zzBufferArray [ zzStartRead + pos ] : zzBuffer . charAt ( zzStartRead + pos ) ; }
26660	public static String toString ( InputStream input , Charset encoding ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw , encoding ) ; return sw . toString ( ) ; }
26666	public boolean isVisible ( int row ) { return getBoolean ( row , VisualItem . VISIBLE ) ; }
26671	public DynamicTemplateParameterContext addParameter ( String paramName , String paramValue , boolean deleteOnExit , ContextInfo contextInfo ) { paramName = parameterResolver . resolveTemplateParameter ( paramName , contextInfo ) ; paramValue = parameterResolver . resolveTemplateParameter ( paramValue , contextInfo ) ; params . put ( paramName , new CustomParameterValue ( paramValue , deleteOnExit ) ) ; return this ; }
26672	public double optDouble ( String key , double defaultValue ) { try { return this . getDouble ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
26675	public static boolean isLegal ( boolean expression ) { return isLegal ( expression , _CHAR _CHAR ) ; }
26693	@ Override public Node cloneNode ( boolean deep ) { ElementImpl newnode = ( ElementImpl ) super . cloneNode ( deep ) ; if ( attributes != _NULL ) { newnode . attributes = ( AttributeMap ) attributes . cloneMap ( newnode ) ; } return newnode ; }
26694	public MessagesSendQuery forwardMessages ( List < String > value ) { return unsafeParam ( _CHAR forward_messages _CHAR , value ) ; }
26700	@ Override public void onEffectChanged ( Effect effect ) { requestRender ( GLRenderer . RenderRequest . EFFECT ) ; }
26712	private String toHexString ( long value , int digits ) { long cutoff = _NUM << ( digits * _NUM ) ; return Long . toHexString ( cutoff | ( value & ( cutoff - _NUM ) ) ) . substring ( _NUM ) ; }
26713	public Builder subdomains ( String [ ] subdomains ) { this . subdomains = subdomains ; return this ; }
26718	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
26719	public Iterator < PDGNode > iterator ( ) { return new ChildPDGFlowIterator ( this . m_nodes ) ; }
26723	public Map . Entry < K , V > firstEntry ( ) { for ( ; ; ) { Node < K , V > n = findFirst ( ) ; if ( n == _NULL ) return _NULL ; AbstractMap . SimpleImmutableEntry < K , V > e = n . createSnapshot ( ) ; if ( e != _NULL ) return e ; } }
26738	@ Override public void startGeneralEntity ( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs ) throws XNIException { fEntityRef = _BOOL ; if ( fDocumentHandler != _NULL ) { fDocumentHandler . startGeneralEntity ( name , identifier , encoding , augs ) ; } }
26762	@ Override public int hashCode ( ) { return _map . hashCode ( ) ; }
26767	public static void checkout ( final ISVNRemoteFolder [ ] resources , final IProject [ ] projects , final IProgressMonitor monitor ) throws SVNException { CheckoutCommand command = new CheckoutCommand ( resources , projects ) ; command . run ( monitor ) ; }
26781	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { float f = get ( i ) ; if ( f != f ) { count ++ ; } } return count ; }
26831	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
26845	public IMethod findDeclaringMethod ( IMethod overriding , boolean testVisibility ) throws JavaModelException { IMethod result = _NULL ; IMethod overridden = findOverriddenMethod ( overriding , testVisibility ) ; while ( overridden != _NULL ) { result = overridden ; overridden = findOverriddenMethod ( result , testVisibility ) ; } return result ; }
26847	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output ) throws IOException { writeLines ( lines , lineEnding , output , Charset . defaultCharset ( ) ) ; }
26851	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
26855	public void renewUntil ( Lease lease , long desiredExpiration , long renewDuration , LeaseListener listener ) { validateDuration ( renewDuration , desiredExpiration == Lease . FOREVER , _CHAR desiredExpiration _CHAR ) ; addLease ( lease , desiredExpiration , renewDuration , listener , SystemTime . timeMillis ( ) ) ; }
26873	public static JsonObject unmodifiableObject ( JsonObject object ) { return new JsonObject ( object , _BOOL ) ; }
26884	public static byte [ ] toByteArray ( Reader input ) throws IOException { return toByteArray ( input , Charset . defaultCharset ( ) ) ; }
26900	public static final float toJulian ( Date date ) { Calendar c = Calendar . getInstance ( ) ; c . setTime ( date ) ; return toJulian ( c ) ; }
26914	private PreferenceLayout createPreferenceLayout ( Preference preference , PreferenceLayout in ) { PreferenceLayout pl = in != _NULL ? in : new PreferenceLayout ( ) ; pl . name = preference . getClass ( ) . getName ( ) ; pl . resId = preference . getLayoutResource ( ) ; pl . widgetResId = preference . getWidgetLayoutResource ( ) ; return pl ; }
26917	public void addGenericAttr ( GenericAttr g ) { generic . addElement ( g ) ; g . resolve ( this ) ; }
26921	@ Override public Object invoke ( MethodInvocation methodInvocation ) throws Throwable { return isObjectMethodCall ( methodInvocation ) ? methodInvocation . proceed ( ) : switchFrameAndProceed ( methodInvocation ) ; }
26924	public void add ( X509TrustManager mgr ) { if ( mgr instanceof X509Extensions ) { managers . add ( ( X509Extensions ) mgr ) ; } else { managers . add ( new X509ExtensionsWrapper ( mgr ) ) ; } }
26926	public static ToolbarTapTarget forToolbarOverflow ( android . widget . Toolbar toolbar , CharSequence title ) { return forToolbarOverflow ( toolbar , title , _NULL ) ; }
26928	public static String formatDateTime ( Date date , String dateTimeFormat , Locale locale , TimeZone timeZone ) { return UtilDateTime . toDateTimeFormat ( dateTimeFormat , timeZone , locale ) . format ( date ) ; }
26937	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
26939	public void add ( final int location , final T object ) { this . data . add ( location , object ) ; this . notifyItemInserted ( location ) ; }
26958	public static double distanceSq ( Vector2D p1 , Vector2D p2 ) { return p1 . distanceSq ( p2 ) ; }
26971	public void put ( Object [ ] parameters ) { if ( ! this . isAlive ( ) ) { LOGGER . warn ( _CHAR HandlerThread has not being started yet and objects are being added ! _CHAR ) ; } else { if ( handlerEnabled ) { synchronized ( threadMonitorObject ) { incomingQueue . offer ( parameters ) ; threadMonitorObject . notify ( ) ; } } else { throw new IllegalStateException ( _CHAR The ThreadHandler is no longer enabled and can not accept any new objects . '' ) ; } } }
26983	public static String stripFileProtocol ( String uriString ) { if ( uriString . startsWith ( _CHAR file : // '' ) ) { uriString = uriString . substring ( 7 ) ; } return uriString ; }
26990	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
26996	public double length ( ) { return Math . sqrt ( NumberConversions . square ( x ) + NumberConversions . square ( y ) + NumberConversions . square ( z ) ) ; }
27008	public boolean addAll ( final List < T > collection ) { final boolean added = this . data . addAll ( collection ) ; this . notifyItemRangeInserted ( _NUM , data . size ( ) + _NUM ) ; return added ; }
27010	@ Override public boolean shouldOverrideUrlLoading ( WebView view , String url ) { return CommonRefreshWebViewActivity . this . shouldOverrideUrlLoading ( view , url ) ; }
27022	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
27023	@ Override public EquipmentConfiguration clone ( ) { EquipmentConfiguration equipmentConfiguration = _NULL ; try { equipmentConfiguration = ( EquipmentConfiguration ) super . clone ( ) ; } catch ( CloneNotSupportedException ex ) { ex . printStackTrace ( ) ; } return equipmentConfiguration ; }
27029	@ Override public boolean canAccessSubscription ( OwnedSubscription subscription ) { return _ownerId . equals ( subscription . getOwnerId ( ) ) || _internalAuthorizer . hasPermissionByInternalId ( _ownerId , Permissions . assumeDatabusSubscriptionOwnership ( new NamedResource ( subscription . getName ( ) ) ) ) ; }
27035	@ Override public void delete ( long timeout ) throws AWSIotException , AWSIotTimeoutException { super . delete ( timeout ) ; }
27041	@ Override public XSObject item ( int index ) { if ( index < _NUM || index >= fLength ) { return _NULL ; } return fArray [ index ] ; }
27060	public VerifyFaceAction verifyFace ( String faceId1 , String faceId2 ) { return new VerifyFaceAction ( cognitiveContext , faceId1 , faceId2 ) ; }
27063	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
27074	public DynamicTemplateParameterContext appendParameter ( String paramName , String paramValue ) { return appendParameter ( paramName , paramValue , ContextInfo . EMPTY ) ; }
27080	public VideoEditCommentQuery attachments ( List < String > value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
27088	public static double [ ] convolveWithZeroPadding ( final double [ ] signal1 , final double [ ] signal2 , double deltaT ) { double [ ] result = convolveWithZeroPadding ( signal1 , signal2 ) ; for ( int i = _NUM ; i < result . length ; i ++ ) { result [ i ] *= deltaT ; } return result ; }
27091	public void discard ( ServiceRegistrar proxy ) { if ( proxy == _NULL ) return ; ProxyReg reg = findReg ( proxy ) ; if ( reg != _NULL ) { synchronized ( discoveredSet ) { reg . discard ( ) ; reg . commDiscard = _BOOL ; } } }
27107	private void skipToEndOfLine ( ) throws IOException { while ( pos < limit || fillBuffer ( _NUM ) ) { char c = buffer [ pos ++ ] ; if ( c == _CHAR ) { lineNumber ++ ; lineStart = pos ; break ; } else if ( c == _CHAR ) { break ; } } }
27112	@ Override public void update ( String jsonState , long timeout ) throws AWSIotException , AWSIotTimeoutException { super . update ( jsonState , timeout ) ; }
27114	public static int copy ( InputStream input , OutputStream output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
27125	@ Override public void cleanup ( ) { fEntityManager . closeReaders ( ) ; }
27131	public static void writeStringToFile ( File file , String data , String encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
27139	private StringBuilder appendIfNotNull ( StringBuilder source , String addStr , String delimiter ) { if ( addStr != _NULL ) { if ( addStr . length ( ) == _NUM ) { delimiter = _CHAR _CHAR ; } return source . append ( addStr ) . append ( delimiter ) ; } return source ; }
27163	public boolean isValidLocalTld ( String lTld ) { lTld = unicodeToASCII ( lTld ) ; return Arrays . binarySearch ( LOCAL_TLDS , chompLeadingDot ( lTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
27170	public V put ( K key , V value ) { if ( value == _NULL ) throw new NullPointerException ( ) ; int hash = hash ( key . hashCode ( ) ) ; return segmentFor ( hash ) . put ( key , hash , value , _BOOL , _BOOL ) ; }
27171	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_graph = graph ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
27190	@ Override public boolean remove ( Object o ) { return backedSet . remove ( o ) ; }
27193	public boolean isComplex ( ) { return _BOOL ; }
27196	public static void writeLines ( File file , String encoding , Collection < ? > lines ) throws IOException { writeLines ( file , encoding , lines , _NULL , _BOOL ) ; }
27207	public static void isInstanceOf ( String argumentName , Object argumentObject , Class < ? > targetClass ) { notNull ( argumentName , argumentObject ) ; if ( ! targetClass . isInstance ( argumentObject ) ) { throw new IllegalArgumentException ( argumentName + _CHAR is not an instance of _CHAR + targetClass . getName ( ) ) ; } }
27213	public boolean geom_trans ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR geom - trans _CHAR ) ; }
27222	public static String encodeObject ( java . io . Serializable serializableObject ) throws java . io . IOException { return encodeObject ( serializableObject , NO_OPTIONS ) ; }
27238	public boolean simplify_offline ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simplify - offline _CHAR ) ; }
27239	protected boolean isStressed ( String phone ) { return phone . endsWith ( _CHAR _NUM _CHAR ) ; }
27245	static Set < String > parsePathParameters ( String path ) { Matcher m = PARAM_URL_REGEX . matcher ( path ) ; Set < String > patterns = new LinkedHashSet < > ( ) ; while ( m . find ( ) ) { patterns . add ( m . group ( _NUM ) ) ; } return patterns ; }
27254	public short key ( ) { return _map . _set [ _index ] ; }
27262	@ Override public void textDecl ( String version , String encoding , Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . textDecl ( version , encoding , augs ) ; if ( fDTDHandler != _NULL ) { fDTDHandler . textDecl ( version , encoding , augs ) ; } }
27265	public boolean cancel ( boolean mayInterruptIfRunning ) { return this . request != _NULL && request . cancel ( mayInterruptIfRunning ) ; }
27286	protected boolean needInputMethod ( ) { return _BOOL ; }
27316	public static Path parsePath ( String pathString ) { return doPath ( pathString ) ; }
27344	public synchronized void resetTimeLimit ( ) { if ( customer == Thread . currentThread ( ) ) { doResetTimeLimit ( ) ; notify ( ) ; } }
27358	@ Override public boolean mayIntersect ( S2Cell cell ) { return intersects ( cell . getRectBound ( ) ) ; }
27379	public String formatBytes ( long value ) { return SimpleXYChartUtils . formatBytes ( ( long ) ( value * chartFactor ) ) ; }
27384	public boolean method_context_counts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR method - context - counts _CHAR ) ; }
27388	@ ObjectiveCName ( _CHAR add : action : name : event : timeout : _CHAR ) void add ( Topic topic , Actions action , String name , Event event , int timeout ) { this . add ( topic , action , name , event , this , timeout ) ; }
27396	public boolean isNextEvolutionOf ( Pokemon otherPokemon ) { for ( Pokemon evolution : otherPokemon . evolutions ) { if ( number == evolution . number ) { return _BOOL ; } } return _BOOL ; }
27414	public boolean hasNext ( ) { try { return ! error && dataIndexReader . getPosition ( ) < dataIndexReader . length ( ) ; } catch ( IOException e ) { Basic . caught ( e ) ; return _BOOL ; } }
27428	public void java_lang_ClassLoader_findLoadedClass ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassObject ( ) ) ; }
27430	public static String toString ( byte [ ] input , String encoding ) throws IOException { return new String ( input , Charsets . toCharset ( encoding ) ) ; }
27432	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
27441	public Map . Entry < K , V > floorEntry ( K key ) { return getNear ( key , LT | EQ ) ; }
27457	public void checkConstraints ( ) throws IOException { }
27460	public static String toString ( Reader input ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw ) ; return sw . toString ( ) ; }
27476	public Rotation revert ( ) { return new Rotation ( - q0 , q1 , q2 , q3 , _BOOL ) ; }
27494	public void endObject ( O object ) { }
27498	private Unit insertGotoAfter ( Unit node , Unit target ) { Unit newGoto = Jimple . v ( ) . newGotoStmt ( target ) ; body . getUnits ( ) . insertAfter ( newGoto , node ) ; return newGoto ; }
27518	public void my_readFromParcel ( Parcel in ) { x = in . readFloat ( ) ; y = in . readFloat ( ) ; }
27544	public DynamicTemplateParameterContext appendParameter ( DynamicContextParameters param , String paramValue , boolean deleteOnExit , ContextInfo contextInfo ) { return appendParameter ( param . getName ( ) , paramValue , deleteOnExit , _BOOL , contextInfo ) ; }
27555	public Builder diskCacheExtraOptions ( int maxImageWidthForDiskCache , int maxImageHeightForDiskCache , BitmapProcessor processorForDiskCache ) { this . maxImageWidthForDiskCache = maxImageWidthForDiskCache ; this . maxImageHeightForDiskCache = maxImageHeightForDiskCache ; this . processorForDiskCache = processorForDiskCache ; return this ; }
27557	public void begin ( String header , int bias ) { begin ( ) ; m_out . print ( header ) ; m_bias = bias ; }
27561	void checkNormalizationAfterRemove ( ChildNode previousSibling ) { if ( previousSibling != _NULL && previousSibling . getNodeType ( ) == Node . TEXT_NODE ) { ChildNode next = previousSibling . nextSibling ; if ( next != _NULL && next . getNodeType ( ) == Node . TEXT_NODE ) { isNormalized ( _BOOL ) ; } } }
27563	protected boolean sameLanguageAsIncludeParent ( ) { String parentLanguage = getIncludeParentLanguage ( ) ; return parentLanguage != _NULL && parentLanguage . equalsIgnoreCase ( fCurrentLanguage ) ; }
27565	private void sendBroadcastNewOperation ( Target target , RemoteOperation operation ) { Intent intent = new Intent ( ACTION_OPERATION_ADDED ) ; if ( target . mAccount != _NULL ) { intent . putExtra ( EXTRA_ACCOUNT , target . mAccount ) ; } else { intent . putExtra ( EXTRA_SERVER_URL , target . mServerUrl ) ; } sendStickyBroadcast ( intent ) ; }
27600	public boolean isLegendVisible ( ) { return legendVisible ; }
27612	public Builder position ( String position ) { this . position = position ; return this ; }
27614	public static int robustCCW ( S2Point a , S2Point b , S2Point c ) { return robustCCW ( a , b , c , S2Point . crossProd ( a , b ) ) ; }
27618	public int value ( ) { return _map . _values [ _index ] ; }
27637	public void download ( String remoteFileName , File localFile , long restartAt ) throws IllegalStateException , FileNotFoundException , IOException , FTPIllegalReplyException , FTPException , FTPDataTransferException , FTPAbortedException { download ( remoteFileName , localFile , restartAt , _NULL ) ; }
27641	private String printDFormat ( int x ) { return printDFormat ( Integer . toString ( x ) ) ; }
27650	public double calcCoexistenceImportance ( String sNode ) { VertexImpl v = new VertexImpl ( ) ; v . setLabel ( sNode ) ; return calcCoexistenceImportance ( v ) ; }
27652	@ Override public void close ( ) throws IOException { try { super . close ( ) ; } finally { if ( closeBranch ) { branch . close ( ) ; } } }
27661	public boolean empties_as_allocs ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR empties - as - allocs _CHAR ) ; }
27663	public PhotosSearchQuery radius ( Integer value ) { return unsafeParam ( _CHAR radius _CHAR , value ) ; }
27669	public boolean isPingOptIn ( ) { if ( StatisticsUploadAssistant . isSendAllowed ( ) ) { return _BOOL ; } PreferenceStore prefs = getPreferenceStore ( ) ; synchronized ( DdmsPreferenceStore . class ) { return prefs != _NULL && prefs . contains ( PING_OPT_IN ) ; } }
27676	public DistributedLogClientBuilder periodicHandshakeIntervalMs ( long intervalMs ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setPeriodicHandshakeIntervalMs ( intervalMs ) ; return newBuilder ; }
27677	public static AudioFileFormat . Type findTargetType ( String strExtension ) { AudioFileFormat . Type [ ] aTypes = AudioSystem . getAudioFileTypes ( ) ; for ( int i = _NUM ; i < aTypes . length ; i ++ ) { if ( aTypes [ i ] . getExtension ( ) . equals ( strExtension ) ) { return aTypes [ i ] ; } } return _NULL ; }
27688	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
27716	protected void validateInput ( ) { String errorMessage = _NULL ; if ( validator != _NULL ) { errorMessage = validator . isValid ( text . getText ( ) ) ; } setErrorMessage ( errorMessage ) ; }
27723	private static boolean notInstanceAvailable ( ) { if ( sInstance == _NULL ) { if ( ! sTrainingTaskFuture . isDone ( ) ) { try { sInstance = sTrainingTaskFuture . get ( ) ; return _BOOL ; } catch ( InterruptedException | ExecutionException e ) { e . printStackTrace ( ) ; return _BOOL ; } } else { return _BOOL ; } } return _BOOL ; }
27726	@ TargetApi ( Build . VERSION_CODES . KITKAT ) public void hide ( ) { if ( ! isShow ) return ; try { hide . invoke ( mTN ) ; } catch ( InvocationTargetException | IllegalAccessException e ) { e . printStackTrace ( ) ; } isShow = _BOOL ; }
27745	@ Override public byte [ ] next ( ) { if ( iteratorIndex >= dictionaryChunks . get ( outerIndex ) . size ( ) ) { iteratorIndex = _NUM ; outerIndex ++ ; } byte [ ] value = dictionaryChunks . get ( outerIndex ) . get ( iteratorIndex ) ; currentIndex ++ ; iteratorIndex ++ ; return value ; }
27777	public static String formatTime ( Date date , String dateTimeFormat , Locale locale , TimeZone timeZone ) { return UtilDateTime . toTimeFormat ( dateTimeFormat , timeZone , locale ) . format ( date ) ; }
27788	public int keyAt ( int index ) { if ( mGarbage ) { gc ( ) ; } return mKeys [ index ] ; }
27792	public static void writeLines ( File file , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , _NULL , lines , _NULL , append ) ; }
27796	@ Override public void syncStateChanged ( ) { boolean wasSyncInitialized = mIsBackendInitialized ; boolean wasPassphraseRequired = mIsPassphraseRequired ; mIsBackendInitialized = mProfileSyncService . isBackendInitialized ( ) ; mIsPassphraseRequired = mIsBackendInitialized && mProfileSyncService . isPassphraseRequiredForDecryption ( ) ; if ( mIsBackendInitialized != wasSyncInitialized || mIsPassphraseRequired != wasPassphraseRequired ) { updateSyncStateFromSwitch ( ) ; } }
27798	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; servID = new ServiceID ( in ) ; if ( item instanceof Item ) item = ( ( Item ) item ) . get ( ) ; }
27799	public float expansion_factor ( ) { return soot . PhaseOptions . getFloat ( options , _CHAR expansion - factor _CHAR ) ; }
27808	@ NotNull public DetectFaceAction detectFace ( boolean returnFaceId , boolean returnFaceLandmarks , @ NotNull EnumSet < FaceAttributes > returnFaceAttributes , @ NotNull InputStream image ) { return new DetectFaceAction ( cognitiveContext , returnFaceId , returnFaceLandmarks , returnFaceAttributes , image ) ; }
27823	public void resetCustom ( ) { mIsLegendCustom = _BOOL ; }
27824	public boolean isCellEditable ( Object node , int column ) { return getColumnClass ( column ) == TreeTableModel . class ; }
27837	public boolean execute ( String action , CordovaArgs args , CallbackContext callbackContext ) throws JSONException { return _BOOL ; }
27845	public boolean context_counts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR context - counts _CHAR ) ; }
27878	public boolean context_counts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR context - counts _CHAR ) ; }
27894	public AdsUpdateTargetGroupQuery lifetime ( Integer value ) { return unsafeParam ( _CHAR lifetime _CHAR , value ) ; }
27902	public boolean contains ( Object o ) { return elementSet . contains ( o ) ; }
27914	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
27919	public PickRequest withAllImageMimeTypesAllowed ( ) { this . mMimeType = QiPick . MIME_TYPE_IMAGES_ALL ; this . mMimeTypesKitKat = _NULL ; return this ; }
27927	public static boolean veryLowMemoryCondition ( ) { return MaryUtils . availableMemory ( ) < lowMemoryThreshold ( ) / _NUM ; }
27931	protected static String resolveApplicationName ( Application application , ApplicationType type ) { String persistedName = resolveName ( application , _NULL ) ; if ( persistedName != _NULL ) return persistedName ; String customName = resolveCustomName ( application ) ; if ( customName != _NULL ) return customName ; return createGenericName ( application , type . getName ( ) ) ; }
27937	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = StringCodingUtils . getBytes ( input , Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
27953	public boolean string_constants ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR string - constants _CHAR ) ; }
27956	public MessagesSendQuery forwardMessages ( String ... value ) { return unsafeParam ( _CHAR forward_messages _CHAR , value ) ; }
27957	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
27959	public void deny ( PermissionFlag flag ) { generalPermissions . put ( flag , getDefaultMessage ( flag ) ) ; }
27960	private void checkBatchSize ( ) { if ( loader . getBatchSize ( ) > _NUM ) { LOG . warn ( _CHAR Loading with batch size [ _CHAR + loader . getBatchSize ( ) + _CHAR ] . This can cause conflicts on commit . '' ) ; } }
27967	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
27977	public String onValidate ( String text ) { if ( text . length ( ) >= _NUM ) { return _NULL ; } else { return getContext ( ) . getString ( R . string . error_msg_api_secret_length ) ; } }
27982	@ Override public Command watch ( HostChangeMonitor < ServiceInstance > monitor ) throws MonitorException { synchronized ( watchers ) { watchers . add ( monitor ) ; } if ( resolutionPending . compareAndSet ( _BOOL , _BOOL ) ) { monitor . onChange ( hostSet ) ; } return Commands . NOOP ; }
27989	public Builder addColumnTime ( String columnName , DateTimeZone timeZone ) { return addColumnTime ( columnName , timeZone , _NULL , _NULL ) ; }
27998	public void writeBytes ( byte [ ] value , int offset , int length ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _BYTES ) ; this . dataOut . writeInt ( length ) ; this . dataOut . write ( value , offset , length ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
28003	public final void close ( LsServerPacket closePacket , boolean forced ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } log . debug ( _CHAR sending packet : _CHAR + closePacket + _CHAR and closing connection after that . '' ) ; pendingClose = _BOOL ; isForcedClosing = forced ; sendMsgQueue . clear ( ) ; sendMsgQueue . addLast ( closePacket ) ; enableWriteInterest ( ) ; } }
28005	public static < T extends ConfigurationEntity > void validateIsUpdate ( List < T > configurationObjects ) { for ( T config : configurationObjects ) { if ( ! config . isUpdated ( ) ) { throw new IllegalArgumentException ( config . getClass ( ) + _CHAR Created through the wrong builder pattern . '' + _CHAR Please use the _CHAR builder provided by the class of the object _CHAR ) ; } } }
28006	public JsonObject remove ( String name ) { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name is _NULL _CHAR ) ; } int index = indexOf ( name ) ; if ( index != - _NUM ) { table . remove ( index ) ; names . remove ( index ) ; values . remove ( index ) ; } return this ; }
28011	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
28019	public static final Polygon flipAlongTheYAxis ( Polygon polygon ) { return Geometry . flip ( polygon , Vector2 . Y_AXIS , _NULL ) ; }
28047	private static void replace ( byte [ ] text , byte [ ] replacement , int start ) { for ( int t = start , p = _NUM ; p < replacement . length ; t ++ , p ++ ) { text [ t ] = replacement [ p ] ; } }
28054	public boolean isAskForConfirmation ( ) { return askForConfirmation ; }
28064	public void promote ( TransactionParticipant [ ] parts , long [ ] crashCounts , TransactionParticipant drop ) throws UnknownTransactionException , CannotJoinException , CrashCountException , RemoteException { ( ( NestableTransactionManager ) mgr ) . promote ( id , parts , crashCounts , drop ) ; }
28069	@ Override public long blocksAccessed ( ) { return sp . blocksAccessed ( ) ; }
28070	public Builder animate ( Boolean animate ) { this . animate = animate ; return this ; }
28096	public void close ( ) { finished = _BOOL ; IOUtils . closeQuietly ( bufferedReader ) ; cachedLine = _NULL ; }
28113	public boolean geom_app_only ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR geom - app - only _CHAR ) ; }
28142	public Vector2f subtractLocal ( Vector2f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x -= vec . x ; y -= vec . y ; return this ; }
28149	public void updateFifoXtnInfoForEntry ( IEntryHolder eh , long xtnNumber , boolean writeLock , boolean entryWritingXtn ) { _terminatingXtnsInfo . updateFifoXtnInfoForEntry ( eh , xtnNumber , writeLock , entryWritingXtn ) ; }
28157	public final ScheduledTask schedule ( SchedulerTask task , Quantum interval ) { return schedule ( task , interval , _BOOL ) ; }
28166	public static byte [ ] toByteArray ( Reader input , Charset encoding ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output , encoding ) ; return output . toByteArray ( ) ; }
28174	@ Override protected void componentShowing ( ) { if ( ! initialized ) { initialized = _BOOL ; doInitialize ( ) ; } if ( _NULL != content && getComponentCount ( ) == _NUM ) { add ( content , BorderLayout . CENTER ) ; } super . componentShowing ( ) ; }
28186	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
28198	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
28207	@ Override public void onPageStarted ( WebView view , String url , Bitmap favicon ) { super . onPageStarted ( view , url , favicon ) ; isCurrentlyLoading = _BOOL ; parentEngine . bridge . reset ( ) ; parentEngine . client . onPageStarted ( url ) ; }
28244	public boolean isValidGenericTld ( String gTld ) { gTld = unicodeToASCII ( gTld ) ; return Arrays . binarySearch ( GENERIC_TLDS , chompLeadingDot ( gTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
28255	public void add ( String expr , StrokeAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
28268	public DynamicTemplateParameterContext addParameter ( DynamicContextParameters param , String paramValue ) { return addParameter ( param , paramValue , ContextInfo . EMPTY ) ; }
28281	public void unregisterToolbar ( RTToolbar toolbar ) { mToolbars . remove ( toolbar . getId ( ) ) ; toolbar . removeToolbarListener ( ) ; updateToolbarVisibility ( ) ; }
28286	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
28290	public static boolean isEmpty ( Map < ? , ? > map ) { return ( map == _NULL || map . isEmpty ( ) ) ; }
28297	public boolean insert_null_checks ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR insert - _NULL - checks _CHAR ) ; }
28304	public static boolean sameProxyClass ( Object proxy1 , Object proxy2 ) { return ( proxy1 . getClass ( ) == proxy2 . getClass ( ) || ( Proxy . isProxyClass ( proxy2 . getClass ( ) ) && equalInterfaces ( proxy1 , proxy2 ) ) ) ; }
28325	public static String determineInitialCheckOutPage ( ShoppingCart cart ) { String page = DEFAULT_INIT_CHECKOUT_PAGE ; if ( cart == _NULL ) return page ; if ( ! cart . shippingApplies ( ) ) { cart . setAllShipmentMethodTypeId ( _CHAR NO_SHIPPING _CHAR ) ; cart . setAllCarrierPartyId ( _CHAR _NA_ _CHAR ) ; page = _CHAR payment _CHAR ; } return page ; }
28332	public Builder fillRule ( String fillRule ) { this . fillRule = fillRule ; return this ; }
28348	private void scheduleInvalidTapNotification ( ) { mRunnableHandler . postDelayed ( mHandleInvalidTapRunnable , INVALID_IF_NO_SELECTION_CHANGE_AFTER_TAP_MS ) ; }
28358	public AudioMapType guessAudioMap ( ) throws InvalidAudioChannelAssignmentException { if ( contextProvider . getSequenceContext ( ) . getSequenceCount ( SequenceType . AUDIO ) == _NUM ) { return _NULL ; } logger . debug ( _CHAR Trying to generate an audiomap . xml based on the EssenceDescriptor ... _CHAR ) ; prepareContext ( ) ; AudioMapType audioMap = createAudioMap ( ) ; logger . info ( _CHAR Generated an audiomap . xml based on the EssenceDescriptor : OK _CHAR ) ; return audioMap ; }
28359	public static boolean isMultiTenantEnabled ( ) { return _CHAR Y _CHAR . equalsIgnoreCase ( UtilProperties . getPropertyValue ( _CHAR general . properties _CHAR , _CHAR multitenant _CHAR ) ) ; }
28382	public void add ( Predicate p , ShapeAction f ) { super . add ( p , f ) ; }
28387	public static String returnWindowsFileAppropriateName ( String nameOfFile ) { return nameOfFile . replaceAll ( _CHAR _CHAR , _CHAR _CHAR ) . replace ( _CHAR : _CHAR , _CHAR - _CHAR ) ; }
28389	public static Map < String , List < GenericValue >> makeCategoryFeatureLists ( String productCategoryId , Delegator delegator ) { return makeCategoryFeatureLists ( productCategoryId , delegator , DEFAULT_PER_TYPE_MAX_SIZE ) ; }
28405	public boolean isUpdateOf ( ComponentDescription other ) { return ! ( other == _NULL || ! this . getClass ( ) . equals ( other . getClass ( ) ) || ! name . equals ( other . getName ( ) ) || other . getStatus ( ) != Status . INSTALLED || ! ( isVersionNewerThan ( version , other . getVersion ( ) ) ) ) ; }
28408	public void fromAngleAxis ( float angle , Vector3f axis ) { Vector3f normAxis = axis . normalize ( ) ; fromAngleNormalAxis ( angle , normAxis ) ; }
28414	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
28428	protected User createUserAndInjectSecurityContext ( Set < OrganisationUnit > organisationUnits , boolean allAuth , String ... auths ) { return createUserAndInjectSecurityContext ( organisationUnits , _NULL , allAuth , auths ) ; }
28434	@ Override public void copy ( @ NotNull File from , @ NotNull File to ) { try { copyTemplateResource ( from , to ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
28437	public Result decodeWithState ( BinaryBitmap image ) throws NotFoundException { if ( readers == _NULL ) { setHints ( _NULL ) ; } return decodeInternal ( image ) ; }
28448	public static < T extends RealFieldElement < T >> T distanceInf ( final FieldVector3D < T > v1 , final Vector3D v2 ) { return v1 . distanceInf ( v2 ) ; }
28450	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_graph = graph ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
28455	public boolean hasNext ( ) { if ( this . samIterator == _NULL ) { iterator ( ) ; } while ( complete . isEmpty ( ) && ( ( ! accumulator . isEmpty ( ) ) || samHasMore ( ) || hasRemainingMaskBases ( ) ) ) { final LocusInfo locusInfo = next ( ) ; if ( locusInfo != _NULL ) { complete . add ( _NUM , locusInfo ) ; } } return ! complete . isEmpty ( ) ; }
28476	public boolean isForceUnderTransaction ( ) { return _selfIncrementedUpdateColumn ; }
28490	public TextMessage createTextMessage ( String text ) throws JMSException { ensureOpen ( ) ; GSTextMessageImpl textMsg = new GSTextMessageImpl ( this , text ) ; return textMsg ; }
28516	@ Override public void onConnectionSuccess ( ) { super . onConnectionSuccess ( ) ; }
28525	private boolean canModifyUserConversation ( User currentUser , User user ) { return currentUser . equals ( user ) || currentUser . isSuper ( ) ; }
28530	public static double max ( final double ... values ) throws MathIllegalArgumentException { return MAX . evaluate ( values ) ; }
28548	private void showNextSuperToast ( ) { if ( superToastPriorityQueue . isEmpty ( ) ) return ; final SuperToast superToast = superToastPriorityQueue . peek ( ) ; if ( ! superToast . isShowing ( ) ) { final Message message = obtainMessage ( Messages . DISPLAY_SUPERTOAST ) ; message . obj = superToast ; sendMessage ( message ) ; } }
28556	public static int cmdHdr ( GeomCmd cmd , int length ) { return ( cmd . getCmdId ( ) & _NUM ) | ( length << _NUM ) ; }
28570	public static void writeSingleByte ( OutputStream out , int b ) throws IOException { byte [ ] buffer = new byte [ _NUM ] ; buffer [ _NUM ] = ( byte ) ( b & _NUM ) ; out . write ( buffer ) ; }
28586	public static boolean isSignedLong ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { Long . parseLong ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
28613	public void join ( TransactionParticipant part , long crashCount ) throws UnknownTransactionException , CannotJoinException , CrashCountException , RemoteException { if ( crashCount == EMBEDDED_CRASH_COUNT ) mgr . join ( id , part , crashCount , this ) ; else mgr . join ( id , part , crashCount ) ; }
28626	public long optLong ( int index , long defaultValue ) { try { return getLong ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
28639	public Bundler putIntegerArrayList ( String key , ArrayList < Integer > value ) { bundle . putIntegerArrayList ( key , value ) ; return this ; }
28642	boolean sameClass ( String cfn ) { String s = cfn ; int i = s . lastIndexOf ( _CHAR . class _CHAR ) ; if ( i > _NUM ) { s = s . substring ( _NUM , i ) ; } if ( s . compareTo ( toString ( ) ) == _NUM ) return _BOOL ; return _BOOL ; }
28644	public static boolean isUpdateOrWrite ( int mod ) { return Modifiers . contains ( mod , UpdateModifiers . UPDATE_OR_WRITE ) ; }
28655	public MultiwayPoolBuilder < K , R > expireAfterAccess ( long duration , TimeUnit unit ) { checkState ( expireAfterAccessNanos == UNSET_INT , _CHAR expireAfterAccess was already set to % s ns _CHAR , expireAfterAccessNanos ) ; checkArgument ( duration >= _NUM , _CHAR duration can not be negative : % s % s _CHAR , duration , unit ) ; expireAfterAccessNanos = unit . toNanos ( duration ) ; return this ; }
28660	public static double exp ( double x ) { return exp ( x , _NUM . _NUM , _NULL ) ; }
28665	public List < JsonValue > values ( ) { return Collections . unmodifiableList ( values ) ; }
28700	public void enqueueDownloadManagerRequest ( final DownloadInfo info , boolean notifyCompleted ) { EnqueueDownloadRequestTask task = new EnqueueDownloadRequestTask ( info ) ; task . execute ( notifyCompleted ) ; }
28704	public double intercept ( ) { return alpha ; }
28709	public Scoop bind ( Object obj , int toppingId , IBinding binding ) { Topping topping = getOrCreateTopping ( toppingId ) ; autoUpdateBinding ( binding , topping ) ; Set < IBinding > bindings = getBindings ( obj . getClass ( ) ) ; bindings . add ( binding ) ; return this ; }
28713	public void endArray ( A array ) { }
28724	public void acquireReadLock ( int segmentId ) { _readLocks [ segmentId ] . lock ( ) ; }
28725	public boolean registerClassLoaderStateListener ( Long classLoaderKey , IClassLoaderCacheStateListener listener ) { ClassLoaderContext classLoaderContext = _classLoaders . get ( classLoaderKey ) ; if ( classLoaderContext == _NULL ) return _BOOL ; if ( classLoaderContext . getRepresents ( ) != Represent . REGULAR ) return _BOOL ; return classLoaderContext . addListener ( listener ) ; }
28748	@ Override public Box clone ( ) { return new Box ( center . clone ( ) , xExtent , yExtent , zExtent ) ; }
28752	private void magnitudePhaseFFT ( double [ ] re , double [ ] im ) { powerPhaseFFT ( re , im ) ; toMagnitude ( re ) ; }
28770	public void discard ( ) { synchronized ( this ) { bDiscarded = _BOOL ; } if ( ( from & FROM_GROUP ) != _NUM ) { lookupDisc . discard ( proxy ) ; } else if ( ( from & FROM_LOCATOR ) != _NUM ) { locatorDisc . discard ( proxy ) ; } }
28802	public void resetLabelsToSkip ( ) { mIsAxisModulusCustom = _BOOL ; }
28803	static boolean isAlive ( Vertex vertex ) { if ( vertex == _NULL ) return _BOOL ; try { return vertex . property ( Schema . BaseType . TYPE . name ( ) ) . isPresent ( ) ; } catch ( IllegalStateException e ) { return _BOOL ; } }
28808	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
28829	boolean hasTransitioned ( StorageState state ) { return state . hasTransitioned ( this ) ; }
28840	public boolean checkTrustEquivalence ( Object obj ) { if ( this == obj ) { return _BOOL ; } else if ( ! ( obj instanceof ProxyTrustInvocationHandler ) ) { return _BOOL ; } ProxyTrustInvocationHandler oh = ( ProxyTrustInvocationHandler ) obj ; return ( ( ( TrustEquivalence ) main ) . checkTrustEquivalence ( oh . main ) && ( ( TrustEquivalence ) boot ) . checkTrustEquivalence ( oh . boot ) ) ; }
28841	public static SM_SYSTEM_MESSAGE STR_MSG_LEVEL_LIMIT_FREE_TIME ( String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 ) ; }
28843	public final void write ( OutputStream out ) throws IOException { writeLong ( bits0 , out ) ; writeLong ( bits1 , out ) ; }
28845	@ Override public void preload ( ) { clusterCache . acquireReadLockOnKey ( aliveStatusInitialized ) ; try { preloadBuffer = fillBufferFromDB ( ) ; if ( preloadBuffer != _NULL ) { LOGGER . debug ( _CHAR Loading the cache from the buffer ... _CHAR ) ; loadCacheFromBuffer ( preloadBuffer ) ; LOGGER . debug ( _CHAR \ t ... done _CHAR ) ; } else { LOGGER . error ( _CHAR Attempt to call loadCacheFromBuffer with _NULL buffer : _CHAR + _CHAR this should not happen and needs investigating ! _CHAR ) ; } } finally { clusterCache . releaseReadLockOnKey ( aliveStatusInitialized ) ; } }
28862	private boolean isSemitonesDelta ( String string ) { String s = string . trim ( ) ; if ( s . length ( ) < _NUM ) return _BOOL ; return s . substring ( s . length ( ) - _NUM ) . equals ( _CHAR st _CHAR ) && isNumberDelta ( s . substring ( _NUM , s . length ( ) - _NUM ) ) ; }
28866	public PhiExpr newPhiExpr ( Local leftLocal , List < Block > preds ) { return new SPhiExpr ( leftLocal , preds ) ; }
28874	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
28883	public boolean use_original_names ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR use - original - names _CHAR ) ; }
28886	public void addGroups ( String [ ] groups ) throws IOException { lookupDisc . addGroups ( groups ) ; }
28895	public Vector3f multLocal ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x *= vec . x ; y *= vec . y ; z *= vec . z ; return this ; }
28897	public static String toString ( InputStream input , Charset encoding ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw , encoding ) ; return sw . toString ( ) ; }
28899	public static String toString ( InputStream input ) throws IOException { return toString ( input , Charset . defaultCharset ( ) ) ; }
28910	private static Optional < Set < String >> includedFields ( String resourceType , TypedParams < IncludedFieldsParams > includedFields ) { IncludedFieldsParams typeIncludedFields = findIncludedFields ( includedFields , resourceType ) ; if ( noResourceIncludedFieldsSpecified ( typeIncludedFields ) ) { return Optional . empty ( ) ; } else { return Optional . of ( typeIncludedFields . getParams ( ) ) ; } }
28911	@ Override public String toString ( ) { String str = _NULL ; if ( BigInteger . ONE . equals ( denominator ) ) { str = numerator . toString ( ) ; } else if ( BigInteger . ZERO . equals ( numerator ) ) { str = _CHAR _NUM _CHAR ; } else { str = numerator + _CHAR / _CHAR + denominator ; } return str ; }
28921	public static InputStream toInputStream ( CharSequence input , String encoding ) throws IOException { return toInputStream ( input , Charsets . toCharset ( encoding ) ) ; }
28938	public static byte [ ] toByteArray ( InputStream input ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output ) ; return output . toByteArray ( ) ; }
28947	public char next ( ) { return pos < in . length ( ) ? in . charAt ( pos ++ ) : _CHAR ; }
28950	synchronized public boolean unexport ( Remote obj ) { _unexport ( obj ) ; _identityExportObjTable . remove ( new WeakKey ( obj ) ) ; return _BOOL ; }
28959	private void captionPut ( int value , String text ) { captionMap . put ( new Integer ( value ) , text ) ; }
28966	public void java_lang_Class_getDeclaringClass ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassObject ( ) ) ; }
28980	public static boolean isLetter ( char c ) { return Character . isLetter ( c ) ; }
28996	public static < T extends RealFieldElement < T >> T distanceSq ( final FieldVector3D < T > v1 , final Vector3D v2 ) { return v1 . distanceSq ( v2 ) ; }
29006	public String geom_verify_name ( ) { return soot . PhaseOptions . getString ( options , _CHAR geom - verify - name _CHAR ) ; }
29010	public final void cancelAll ( ) { for ( ActionPair actionPair : mActions ) { if ( actionPair . action instanceof Cancelable ) { ( ( Cancelable ) actionPair . action ) . cancel ( ) ; } } }
29011	public void registerToolbar ( ViewGroup toolbarContainer , RTToolbar toolbar ) { mToolbars . put ( toolbar . getId ( ) , toolbar ) ; toolbar . setToolbarListener ( this ) ; toolbar . setToolbarContainer ( toolbarContainer ) ; updateToolbarVisibility ( ) ; }
29015	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
29016	@ Override public Document newDocument ( ) { return new mf . org . apache . xerces . dom . DocumentImpl ( ) ; }
29038	public synchronized long fileCount ( ) { return fileCount ; }
29040	public boolean showGuidelines ( ) { return ! ( mEdges . width ( ) < _NUM || mEdges . height ( ) < _NUM ) ; }
29048	public static String encode ( String str ) throws RuntimeException { byte [ ] bytes = str . getBytes ( ) ; byte [ ] encoded = encode ( bytes ) ; try { return new String ( encoded , _CHAR ASCII _CHAR ) ; } catch ( UnsupportedEncodingException e ) { throw new RuntimeException ( _CHAR ASCII is not supported ! _CHAR , e ) ; } }
29066	public int readInt ( ) { return scanner . nextInt ( ) ; }
29071	public double nextDouble ( boolean includeZero , boolean includeOne ) { double d = _NUM . _NUM ; do { d = nextDouble ( ) ; if ( includeOne && nextBoolean ( ) ) d += _NUM . _NUM ; } while ( ( d > _NUM . _NUM ) || ( ! includeZero && d == _NUM . _NUM ) ) ; return d ; }
29118	public static AirMap init ( Context context , String authToken , boolean pinCertificates ) { ourInstance = new AirMap ( context , authToken , pinCertificates ) ; airMapTrafficService = new TrafficService ( context ) ; airMapMapMappingService = new MappingService ( ) ; return ourInstance ; }
29119	public long optLong ( int index , long defaultValue ) { try { return this . getLong ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
29128	public boolean isIncrementalBuild ( ) { return incrementalBuild ; }
29143	public boolean naive_side_effect ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR naive - side - effect _CHAR ) ; }
29146	public boolean intersectWhere ( Vector3f v0 , Vector3f v1 , Vector3f v2 , Vector3f loc ) { return intersects ( v0 , v1 , v2 , loc , _BOOL , _BOOL ) ; }
29147	public int max_container_size ( ) { return soot . PhaseOptions . getInt ( options , _CHAR max - container - size _CHAR ) ; }
29148	protected View onCreateDialogView ( ) { if ( mDialogLayoutResId == _NUM ) { return _NULL ; } LayoutInflater inflater = LayoutInflater . from ( mBuilder . getContext ( ) ) ; return inflater . inflate ( mDialogLayoutResId , _NULL ) ; }
29150	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
29156	@ Override public void onTextChanged ( CharSequence s , int start , int before , int count ) { if ( iTextWatcher != _NULL ) { iTextWatcher . onTextChanged ( this . curEditText ) ; } }
29170	public static void isNotInstanceOf ( String argumentName , Object argumentObject , Class < ? > targetClass ) { notNull ( argumentName , argumentObject ) ; if ( targetClass . isInstance ( argumentObject ) ) { throw new IllegalArgumentException ( argumentName + _CHAR can not be an instance of _CHAR + targetClass . getName ( ) ) ; } }
29191	public String optString ( String key ) { return optString ( key , _CHAR _CHAR ) ; }
29192	public static long sign ( final long x ) { return ( x == _NUM ) ? _NUM : ( x > _NUM ) ? _NUM : - _NUM ; }
29200	public WallEditQuery signed ( Boolean value ) { return unsafeParam ( _CHAR signed _CHAR , value ) ; }
29205	@ Override public boolean isFinal ( short derivation ) { return ( fFinal & derivation ) != _NUM ; }
29215	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
29218	public static double sum ( final double [ ] values , final int begin , final int length ) throws MathIllegalArgumentException { return SUM . evaluate ( values , begin , length ) ; }
29221	private CredentialsProvider extractCredentials ( Properties properties , JSpaceAttributes spaceAttr ) { CredentialsProvider credentialsProvider = CredentialsProviderHelper . extractCredentials ( properties ) ; if ( credentialsProvider != _NULL ) CredentialsProviderHelper . clearCredentialsProperties ( spaceAttr ) ; return credentialsProvider ; }
29226	public int traversal ( ) { return soot . PhaseOptions . getInt ( options , _CHAR traversal _CHAR ) ; }
29258	public boolean isDone ( ) { if ( cancelled != _NULL ) { return _BOOL ; } if ( remoteResult != _NULL ) { return _BOOL ; } remoteResult = gigaSpace . take ( template , _NUM ) ; return remoteResult != _NULL ; }
29264	public JsonObject merge ( JsonObject object ) { if ( object == _NULL ) { throw new NullPointerException ( _CHAR object is _NULL _CHAR ) ; } for ( Member member : object ) { this . set ( member . name , member . value ) ; } return this ; }
29267	public long optLong ( int index ) { return this . optLong ( index , _NUM ) ; }
29283	public void addResource ( String name ) { addResourceObject ( name ) ; }
29289	public boolean containsValue ( Object value ) { return backedMap . containsValue ( value ) ; }
29297	public static String needFilename ( String property ) throws NoSuchPropertyException { String filename = expandPath ( needProperty ( property ) ) ; if ( ! new File ( filename ) . canRead ( ) ) { throw new NoSuchPropertyException ( _CHAR Can not read file ` _CHAR + filename + _CHAR _CHAR_CHAR_CHAR in configuration files _CHAR ) ; } return filename ; }
29318	public boolean isBeginningInstruction ( ) { if ( predecessors . size ( ) == _NUM ) { return _BOOL ; } if ( predecessors . first ( ) . instructionIndex == - _NUM ) { return _BOOL ; } return _BOOL ; }
29322	public Transaction deleteTask ( long taskId ) { if ( ! mIsSuccess ) { return this ; } mDatabase . delete ( TasksTable . TABLE_NAME , BuildingBlocks . SELECTION_ID , new String [ ] { Long . toString ( taskId ) } ) ; return this ; }
29323	public static String escapeQuotedSwitch ( String value ) { return value . replaceAll ( _CHAR _CHAR_CHAR_CHAR\ _CHAR _CHAR_CHAR _CHAR ) ; }
29327	@ Override public void update ( final DataTag dataTag , final Object value , final String valueDesc , final Timestamp sourceTimestamp , final Timestamp daqTimestamp , final Timestamp cacheTimestamp ) { updateValue ( dataTag , value , valueDesc ) ; setTimestamps ( dataTag , sourceTimestamp , daqTimestamp , cacheTimestamp ) ; }
29328	@ NotNull public DescribeImageAction describeImage ( int maxCandidates , @ NotNull String imageUrl ) { return new DescribeImageAction ( cognitiveContext , maxCandidates , imageUrl ) ; }
29331	private static void askAboutRestart ( @ NotNull PatchRunner patchRunner , @ NotNull PatchOperation op , @ NotNull final File patchFile , @ NotNull FileOp fop , @ NotNull final ProgressIndicator progress ) { final ApplicationEx application = ApplicationManagerEx . getApplicationEx ( ) ; application . invokeLater ( _NULL , ModalityState . any ( ) ) ; }
29347	public IExtendedIndexIterator < IEntryCacheInfo > establishScan ( K startPos , short relation , K endPos , boolean endPosInclusive ) { return establishScan ( startPos , relation , endPos , endPosInclusive , _BOOL ) ; }
29367	public BigDecimal bigDecimalValue ( final int roundingMode ) { return new BigDecimal ( numerator ) . divide ( new BigDecimal ( denominator ) , roundingMode ) ; }
29403	public IntIterator rangeSortedBy ( String field , float lo , float hi , int indexType ) { Index index = getIndex ( field , float . class , _BOOL ) ; return index . rows ( lo , hi , indexType ) ; }
29412	public boolean isAssignable ( ) { for ( MatchingPart part : _parts ) { if ( ! part . isAssignable ( ) ) { return _BOOL ; } } return _BOOL ; }
29418	public static void bindProperties ( Binder binder ) { Properties properties = PropertyUtils . gatherProperties ( ) ; Names . bindProperties ( binder , properties ) ; binder . bind ( Properties . class ) . toInstance ( properties ) ; }
29429	public String fixed_class_names ( ) { return soot . PhaseOptions . getString ( options , _CHAR fcn _CHAR ) ; }
29430	@ Override public boolean accepts ( Field field ) { return isList ( field ) && AnnotationsHelper . isFindPageObjectAnnotationPresent ( field ) && AnnotationsHelper . isGenericTypeAnnotedWithPageObject ( field ) ; }
29431	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
29436	@ Override public void close ( ) throws IOException { }
29437	public void handleExceptionsWith ( final ExceptionHandler < ? super T > exceptionHandler ) { this . exceptionHandler = exceptionHandler ; }
29443	public static byte [ ] toByteArray ( Reader input , Charset encoding ) throws IOException { ByteArrayOutputStream output = new ByteArrayOutputStream ( ) ; copy ( input , output , encoding ) ; return output . toByteArray ( ) ; }
29480	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
29502	@ Override protected final void process ( double [ ] real , double [ ] imag ) { MathUtils . toPolarCoordinates ( real , imag ) ; double [ ] r = real ; double [ ] phi = imag ; processPolar ( r , phi ) ; MathUtils . toCartesianCoordinates ( real , imag ) ; }
29509	protected void addComponent ( XMLComponent component ) { if ( fComponents . contains ( component ) ) { return ; } fComponents . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
29564	public void reset ( final Plane original ) { originOffset = original . originOffset ; origin = original . origin ; u = original . u ; v = original . v ; w = original . w ; }
29574	public Builder reuseTiles ( Boolean reuseTiles ) { this . reuseTiles = reuseTiles ; return this ; }
29582	public static int levelToLevelIdx ( double level ) { return ( int ) ( ( level - _NUM ) * _NUM ) ; }
29594	public void modifyEnergyStored ( int energy ) { this . energy += energy ; if ( this . energy > capacity ) { this . energy = capacity ; } else if ( this . energy < _NUM ) { this . energy = _NUM ; } }
29597	public boolean interiorContains ( S2Point p ) { return interiorContains ( new S2LatLng ( p ) ) ; }
29628	public boolean cancel ( boolean mayInterruptIfRunning ) { return this . request != _NULL && request . cancel ( mayInterruptIfRunning ) ; }
29637	private float computeOverscrollPercent ( ) { if ( mOverScrollOffset >= _NUM ) { return mOverScrollOffset / mMaxOverScroll ; } else { return mOverScrollOffset / mMaxUnderScroll ; } }
29641	public boolean isAlive ( ) { if ( hasSentData ) { if ( System . currentTimeMillis ( ) - lastSendTime < TIMEOUT ) return _BOOL ; return hasReceivedData && lastReceiveTime > lastSendTime ; } return _BOOL ; }
29647	public static double distance1 ( Vector3D v1 , Vector3D v2 ) { return v1 . distance1 ( v2 ) ; }
29659	public static int readSingleByte ( InputStream in ) throws IOException { byte [ ] buffer = new byte [ _NUM ] ; int result = in . read ( buffer , _NUM , _NUM ) ; return ( result != - _NUM ) ? buffer [ _NUM ] & _NUM : - _NUM ; }
29668	public void enableDashedLine ( float lineLength , float spaceLength , float phase ) { mDashPathEffect = new DashPathEffect ( new float [ ] { lineLength , spaceLength } , phase ) ; }
29672	public void rebuild ( ) { rebuild ( _BOOL ) ; }
29675	public static List < ? extends Element > childElementList ( Element element , String ... childElementNames ) { return childElementList ( element , UtilMisc . toSetArray ( childElementNames ) ) ; }
29681	public TIntArrayList inverseGrep ( TIntProcedure condition ) { TIntArrayList list = new TIntArrayList ( ) ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( ! condition . execute ( _data [ i ] ) ) { list . add ( _data [ i ] ) ; } } return list ; }
29685	private static void defineEntity ( String name , char value ) { if ( _byName . get ( name ) == _NULL ) { _byName . put ( name , new Integer ( value ) ) ; _byChar . put ( new Integer ( value ) , name ) ; } }
29694	public static boolean isDark ( @ NonNull Bitmap bitmap ) { return isDark ( bitmap , bitmap . getWidth ( ) / _NUM , bitmap . getHeight ( ) / _NUM ) ; }
29696	public static < K , R > Observable < R > switchCase ( Callable < ? extends K > caseSelector , Map < ? super K , ? extends ObservableSource < ? extends R >> mapOfCases , Scheduler scheduler ) { return switchCase ( caseSelector , mapOfCases , Observable . < R > empty ( ) . subscribeOn ( scheduler ) ) ; }
29699	public static DoubleStream shiftingWindowAveragingLong ( LongStream longStream , int rollingFactor ) { Objects . requireNonNull ( longStream ) ; RollingOfLongSpliterator ofLongSpliterator = RollingOfLongSpliterator . of ( longStream . spliterator ( ) , rollingFactor ) ; return StreamSupport . stream ( ofLongSpliterator , longStream . isParallel ( ) ) . onClose ( _NULL ) . mapToDouble ( _NULL ) ; }
29701	public static boolean isLegalBlobId ( String blobId ) { return blobId != _NULL && blobId . length ( ) > _NUM && blobId . length ( ) <= _NUM && BLOB_ID_ALLOWED . matchesAllOf ( blobId ) ; }
29707	public void java_io_ObjectInputStream_allocateNewObject ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { throw new NativeMethodNotSupportedException ( method ) ; }
29708	public boolean rerun_jb ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR rerun - jb _CHAR ) ; }
29713	@ Override public int hashCode ( ) { int result = _NUM ; final Iterator < ? > iter = iterator ( ) ; while ( iter . hasNext ( ) ) result = _NUM * result + Objects . hashCode ( iter . next ( ) ) ; return result ; }
29714	public static double meanDifference ( final double [ ] sample1 , final double [ ] sample2 ) throws MathIllegalArgumentException { return sumDifference ( sample1 , sample2 ) / sample1 . length ; }
29717	public static char [ ] toCharArray ( InputStream is ) throws IOException { return toCharArray ( is , Charset . defaultCharset ( ) ) ; }
29727	public static void writeLines ( File file , String encoding , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , encoding , lines , _NULL , append ) ; }
29730	public boolean pointsToSetEquals ( Object other ) { if ( this == other ) { return _BOOL ; } if ( ! ( other instanceof AllocAndContextSet ) ) { return _BOOL ; } AllocAndContextSet otherPts = ( AllocAndContextSet ) other ; return superSetOf ( otherPts , this ) && superSetOf ( this , otherPts ) ; }
29738	final void persistUpdatedAlarm ( Alarm newAlarm , boolean showSnackbar ) { mAlarmController . scheduleAlarm ( newAlarm , showSnackbar ) ; mAlarmController . save ( newAlarm ) ; }
29739	public static byte [ ] CPQMessage ( byte message ) { PacketWriter pw = new PacketWriter ( ) ; pw . writeShort ( SendPacketOpcode . MONSTER_CARNIVAL_MESSAGE . getValue ( ) ) ; pw . write ( message ) ; return pw . getPacket ( ) ; }
29769	public boolean interiorContains ( S2Point p ) { return isFull ( ) || S2Point . sub ( axis , p ) . norm2 ( ) < _NUM * height ; }
29779	@ Override public Node cloneNode ( boolean deep ) { CoreDocumentImpl newdoc = new CoreDocumentImpl ( ) ; callUserDataHandlers ( this , newdoc , UserDataHandler . NODE_CLONED ) ; cloneNode ( newdoc , deep ) ; return newdoc ; }
29793	public static char [ ] toCharArray ( Reader input ) throws IOException { CharArrayWriter sw = new CharArrayWriter ( ) ; copy ( input , sw ) ; return sw . toCharArray ( ) ; }
29794	@ Override public void ignorableWhitespace ( XMLString text , Augmentations augs ) throws XNIException { }
29840	public double asDistance ( ) { double dS = getOverallSimilarity ( ) ; if ( dS == _NUM ) return Double . POSITIVE_INFINITY ; else return _NUM . _NUM / dS ; }
29852	public static String topLevelTypeString ( String typeStr ) { int dollarIndex = typeStr . indexOf ( _CHAR ) ; String topLevelTypeStr = dollarIndex == - _NUM ? typeStr : typeStr . substring ( _NUM , dollarIndex ) ; return topLevelTypeStr ; }
29893	public void reset ( ) { _count = _NUM ; }
29907	@ Override public void beforeFirst ( ) { ss . beforeFirst ( ) ; moreGroups = ss . next ( ) ; }
29928	public synchronized void addFrom ( int from ) { this . from |= from ; }
29931	public synchronized VisualTable addTable ( String group , Table table , Schema schema ) { return addTable ( group , table , _NULL , schema ) ; }
29934	public static boolean isWrite ( int mod ) { return ( mod & NOTIFY_WRITE ) != _NUM ; }
29966	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output ) throws IOException { writeLines ( lines , lineEnding , output , Charset . defaultCharset ( ) ) ; }
29976	public boolean standard_local_names ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR standard - local - names _CHAR ) ; }
29980	private static boolean overflowInParse ( long current , int digit ) { return overflowInParse ( current , digit , _NUM ) ; }
29991	public long parseLong ( ) { ASTNode $ State state = state ( ) ; try { switch ( getKind ( ) ) { case HEXADECIMAL : return parseLongHexadecimal ( ) ; case OCTAL : return parseLongOctal ( ) ; case BINARY : return parseLongBinary ( ) ; case DECIMAL : default : return parseLongDecimal ( ) ; } } finally { } }
30001	@ Override public boolean isStepVisible ( ) { return myFinishClicks . get ( ) == _NUM && myComponentsPath . shouldDownloadingComponentsStepBeShown ( ) ; }
30007	@ Override public boolean contains ( S2Cell cell ) { throw new UnsupportedOperationException ( _CHAR _CHAR is not numerically well - defined _CHAR + _CHAR except at the polyline vertices _CHAR ) ; }
30011	static Object createObject ( String factoryId , String fallbackClassName ) throws ConfigurationError { return createObject ( factoryId , _NULL , fallbackClassName ) ; }
30028	@ Override public Loader < Cursor > onCreateLoader ( int i , Bundle bundle ) { return new CursorLoader ( getActivity ( ) , FeedContract . Entry . CONTENT_URI , PROJECTION , _NULL , _NULL , FeedContract . Entry . COLUMN_NAME_PUBLISHED + _CHAR desc _CHAR ) ; }
30037	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
30047	public static char [ ] toCharArray ( InputStream is , String encoding ) throws IOException { return toCharArray ( is , Charsets . toCharset ( encoding ) ) ; }
30054	public void close ( ) throws IOException { if ( ! eof ) { while ( read ( buf , _NUM , buf . length ) != - _NUM ) ; } }
30060	private static InvocationConstraint [ ] reduce ( InvocationConstraint [ ] constraints ) { verify ( constraints , _NUM ) ; int n = reduce0 ( constraints ) ; if ( n == _NUM ) { throw new IllegalArgumentException ( _CHAR reduced to less than _NUM elements _CHAR ) ; } return ( InvocationConstraint [ ] ) Constraint . trim ( constraints , n ) ; }
30068	public int max_inlinee_size ( ) { return soot . PhaseOptions . getInt ( options , _CHAR max - inlinee - size _CHAR ) ; }
30080	@ Override public boolean offer ( E o ) { int allWorkingThreads = executor . getActiveCount ( ) + super . size ( ) ; return allWorkingThreads < executor . getPoolSize ( ) && super . offer ( o ) ; }
30083	public MessagesGetLongPollHistoryQuery previewLength ( Integer value ) { return unsafeParam ( _CHAR preview_length _CHAR , value ) ; }
30084	public LogSubjects . LogSubject assertThat ( ) { return assertAbout ( LogSubjects . CONSOLE_SUBJECT_FACTORY ) . that ( this ) ; }
30085	public static Map < String , Object > createContent ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = createContentMethod ( dctx , context ) ; return result ; }
30090	@ Inject ( optional = _BOOL ) private void injectDataCenterAnnouncer ( DataCenterAnnouncer ignore ) { }
30093	public static boolean areEqualOrNull ( ItemStack stack1 , ItemStack stack2 ) { if ( stack1 == stack2 ) { return _BOOL ; } return ( areEqual ( stack1 , stack2 ) ) ; }
30103	public Set < RefType > catchableSubset ( ThrowableSet thrownSet ) { Set < RefType > result = new ExceptionHashSet < RefType > ( ALL_TEST_THROWABLES . size ( ) ) ; for ( RefType e : ALL_TEST_THROWABLES ) { if ( thrownSet . catchableAs ( e ) ) { result . add ( e ) ; } } return result ; }
30108	private ABTester from ( Object fromObj ) { if ( pointOfReference != _NULL ) { throw new IllegalStateException ( _CHAR Can only supply one point of reference ! _CHAR ) ; } pointOfReference = fromObj ; return this ; }
30120	public void moveViewTo ( float xValue , float yValue , AxisDependency axis ) { float yInView = getAxisRange ( axis ) / mViewPortHandler . getScaleY ( ) ; Runnable job = MoveViewJob . getInstance ( mViewPortHandler , xValue , yValue + yInView / _NUM , getTransformer ( axis ) , this ) ; addViewportJob ( job ) ; }
30139	protected Uri onRestoreRingtone ( ) { final String uriString = getPersistedString ( _NULL ) ; return ! TextUtils . isEmpty ( uriString ) ? Uri . parse ( uriString ) : _NULL ; }
30165	public static JSONObject toJSONObject ( String string ) throws JSONException { return toJSONObject ( new XMLTokener ( string ) ) ; }
30174	public static SM_SYSTEM_MESSAGE STR_MSG_ALARM_REMAIN_PLAYTIME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
30180	public void stopEditing ( ) { m_editor . setVisible ( _BOOL ) ; if ( m_editItem != _NULL ) { String txt = m_editor . getText ( ) ; m_editItem . set ( m_editAttribute , txt ) ; m_editItem = _NULL ; m_editAttribute = _NULL ; m_editor . setBackground ( _NULL ) ; m_editor . setForeground ( _NULL ) ; } m_editing = _BOOL ; }
30193	public void addSoundEvent ( State event , int resId ) { mSoundMap . put ( event , resId ) ; }
30194	protected Augmentations modifyAugmentations ( Augmentations augs , boolean force ) { if ( force || isTopLevelIncludedItem ( ) ) { if ( augs == _NULL ) { augs = new AugmentationsImpl ( ) ; } augs . putItem ( XINCLUDE_INCLUDED , Boolean . TRUE ) ; } return augs ; }
30206	public final boolean isSearch ( ) { return ( this . collidable == _NULL || this . fixture == _NULL ) ; }
30213	public void notifyLoaded ( ) { mHandler . sendEmptyMessage ( MSG_DID_LOAD ) ; }
30222	public static final float toJulian ( Date date ) { Calendar c = Calendar . getInstance ( ) ; c . setTime ( date ) ; return toJulian ( c ) ; }
30236	@ Override public void close ( ) throws IOException { }
30244	public SequenceBarrier newBarrier ( Sequence ... sequencesToTrack ) { return sequencer . newBarrier ( sequencesToTrack ) ; }
30250	protected final void throwObjectContractViolation ( Object o1 , Object o2 ) throws IllegalArgumentException { throw new IllegalArgumentException ( _CHAR Equal objects must have equal hashcodes . '' + _CHAR During rehashing , Trove discovered that _CHAR + _CHAR the following two objects claim to be _CHAR + _CHAR equal ( as in java . lang . Object . equals ( ) ) _CHAR + _CHAR but their hashCodes ( or those calculated by _CHAR + _CHAR your TObjectHashingStrategy ) are not equal . '' + _CHAR This violates the general contract of _CHAR + _CHAR java . lang . Object . hashCode ( ) . See bullet point two _CHAR + _CHAR in that method _CHAR_CHAR_CHAR_CHAR_CHAR_CHAR + o2 ) ; }
30252	@ Override public void reset ( ) throws IOException { fOffset = _NUM ; fSurrogate =- _NUM ; }
30254	@ Override public long nodeNumber ( ) { return nodeNumber ; }
30276	public ListIterator < E > listIterator ( ) { return this . listIterator ( _NUM ) ; }
30277	public void insert ( int offset , int [ ] values ) { insert ( offset , values , _NUM , values . length ) ; }
30278	private void requestAudioPermissions ( ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( getActivity ( ) , AUDIO_PERMS ) ) { showPermissionRationale ( ) ; } else { ActivityCompat . requestPermissions ( this . getActivity ( ) , new String [ ] { AUDIO_PERMS } , REQUEST_AUDIO_PERMS ) ; } }
30279	@ Override public void unsubscribe ( String topic , long timeout ) throws AWSIotException , AWSIotTimeoutException { super . unsubscribe ( topic , timeout ) ; }
30282	public boolean types_for_sites ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR types - for - sites '' ) ; }
30286	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
30287	public void putFramePathOnStack ( int index ) { if ( ! switchRequestComingFromFrameSwitcher ) { expandFramePathStack ( new IndexedFrame ( index ) ) ; } }
30301	public boolean removeDataSet ( int index ) { if ( index >= mDataSets . size ( ) || index < _NUM ) return _BOOL ; T set = mDataSets . get ( index ) ; return removeDataSet ( set ) ; }
30309	public void shutdown ( ) { try { shutdown ( - _NUM , TimeUnit . MILLISECONDS ) ; } catch ( final TimeoutException e ) { exceptionHandler . handleOnShutdownException ( e ) ; } }
30310	public int lastIndexOf ( Object e , int index ) { Object [ ] elements = getArray ( ) ; return lastIndexOf ( e , elements , index ) ; }
30315	protected AdsGetDemographicsQuery dateTo ( String value ) { return unsafeParam ( _CHAR date_to _CHAR , value ) ; }
30317	public MessagesSendQuery attachment ( List < String > value ) { return unsafeParam ( _CHAR attachment _CHAR , value ) ; }
30330	@ Override public XMLInputSource resolveEntity ( XMLResourceIdentifier resourceIdentifier ) throws XNIException , IOException { String resolvedId = resolveIdentifier ( resourceIdentifier ) ; if ( resolvedId != _NULL ) { return new XMLInputSource ( resourceIdentifier . getPublicId ( ) , resolvedId , resourceIdentifier . getBaseSystemId ( ) ) ; } return _NULL ; }
30332	@ Override public void update ( Protos . TaskStatus status ) { synchronized ( planLock ) { getPlan ( ) . update ( status ) ; updatePlan ( ) ; notifyObservers ( ) ; } }
30338	private static void expandBelow7DigitNumber ( String numberString , WordRelation wordRelation , Item tokenItem ) { expandLargeNumber ( numberString , _CHAR thousand _CHAR , _NUM , wordRelation , tokenItem ) ; }
30374	public boolean pre_jimplify ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR pre - jimplify _CHAR ) ; }
30376	public boolean dump_pag ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dump - pag _CHAR ) ; }
30384	public static char [ ] toCharArray ( Reader input ) throws IOException { CharArrayWriter sw = new CharArrayWriter ( ) ; copy ( input , sw ) ; return sw . toCharArray ( ) ; }
30391	private static boolean containsOrExtends ( @ NotNull Set < PsiClass > resolvedClasses , @ NotNull PsiClass relatedActivity ) { if ( resolvedClasses . contains ( relatedActivity ) ) { return _BOOL ; } for ( PsiClass resolvedClass : resolvedClasses ) { if ( relatedActivity . isInheritor ( resolvedClass , _BOOL ) ) { return _BOOL ; } } return _BOOL ; }
30411	public synchronized VisualTable addTable ( String group , Table table ) { return addTable ( group , table , ( Predicate ) _NULL ) ; }
30428	public void add ( ItemApplication info ) { if ( findActivity ( data , info . mComponentName ) ) { return ; } data . add ( info ) ; added . add ( info ) ; }
30433	@ Override public void mark ( int readAheadLimit ) throws IOException { throw new IOException ( fFormatter . formatMessage ( fLocale , _CHAR OperationNotSupported _CHAR , new Object [ ] { _CHAR mark ( ) _CHAR , _CHAR UTF - _NUM _CHAR } ) ) ; }
30442	public static int charFromName ( String name ) { Object value ; initialize ( ) ; value = _byName . get ( name ) ; if ( value != _NULL && value instanceof Integer ) { return ( ( Integer ) value ) . intValue ( ) ; } return - _NUM ; }
30447	@ Override protected void invalidateQuietly ( final T dataTag , final TagQualityStatus statusToAdd , final String description , final Timestamp timestamp ) { dataTagCacheObjectFacade . addQualityFlag ( dataTag , statusToAdd , description ) ; dataTagCacheObjectFacade . setTimestamps ( dataTag , _NULL , _NULL , timestamp ) ; }
30456	public static boolean isTrue ( boolean expression , String message ) { if ( ! expression ) throw new AssertionFailedException ( _CHAR assertion failed : _CHAR + message ) ; return expression ; }
30493	public void stopRecording ( ) { m_line . stop ( ) ; m_line . close ( ) ; }
30502	public void stopRecording ( ) { m_line . stop ( ) ; m_line . close ( ) ; }
30515	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
30523	public BoolValueProperty hiddenFromStructureDialog ( ) { return myHiddenFromStructureDialog ; }
30532	protected void addCommonComponent ( XMLComponent component ) { if ( fCommonComponents . contains ( component ) ) { return ; } fCommonComponents . add ( component ) ; addRecognizedParamsAndSetDefaults ( component ) ; }
30541	public static void writeLines ( File file , String encoding , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , encoding , lines , lineEnding , _BOOL ) ; }
30548	public boolean isSuppressedDiag ( Diag diag , Element elem ) { return diagSuppressor . isSuppressedWarning ( diag , elem ) ; }
30550	public Builder reduceSequenceByWindow ( IReducer reducer , WindowFunction windowFunction ) { actionList . add ( new DataAction ( new ReduceSequenceByWindowTransform ( reducer , windowFunction ) ) ) ; return this ; }
30564	@ Nullable protected Path findConfigRootHeuristic ( Path configPath ) { Path parent = configPath . getParent ( ) ; while ( parent != _NULL ) { if ( Files . isDirectory ( parent . resolve ( _CHAR . git _CHAR ) ) ) { return parent ; } parent = parent . getParent ( ) ; } return _NULL ; }
30572	public static void writeByteArrayToFile ( File file , byte [ ] data ) throws IOException { writeByteArrayToFile ( file , data , _BOOL ) ; }
30575	@ Override public void write ( byte [ ] value ) throws IOException { if ( isFirstTime ) { init ( ) ; isFirstTime = _BOOL ; } checkAndWriteDictionaryChunkToFile ( ) ; oneDictionaryChunkList . add ( ByteBuffer . wrap ( value ) ) ; totalRecordCount ++ ; }
30578	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { if ( isRawType ( ) ) return _BOOL ; for ( int i = _NUM ; i < getNumArgument ( ) ; ++ i ) { if ( ! getArgument ( i ) . type ( ) . isWildcard ( ) ) return _BOOL ; } return _BOOL ; } finally { } }
30580	public double overflow ( ) { return m_overflow ; }
30581	@ Override public Tab createFrozenTab ( TabState state , int id , int index ) { return Tab . createFrozenTabFromState ( id , _NULL , state . isIncognito ( ) , _NULL , Tab . INVALID_TAB_ID , state ) ; }
30583	public static float min ( float a , float b ) { return ( a <= b ) ? a : b ; }
30597	public static int copy ( Reader input , Writer output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
30608	public static boolean isFile ( String fileName ) { File f = new File ( fileName ) ; return f . isFile ( ) ; }
30620	public static void increaseTime ( Clock clock ) { Calendar c = Calendar . getInstance ( ) ; c . setTime ( clock . getCurrentTime ( ) ) ; c . add ( Calendar . SECOND , _NUM ) ; clock . setCurrentTime ( c . getTime ( ) ) ; }
30624	public JsonElement remove ( int index ) { return elements . remove ( index ) ; }
30627	public static void mainMe ( String args1 , String arg2 , String arg3 ) throws IOException { IncrementalVisitor . main ( new String [ ] { args1 , arg2 , arg3 } , VISITOR_BUILDER ) ; }
30638	public static final String toString ( String str ) { if ( str == _NULL ) return _CHAR _NULL _CHAR ; ByteArrayOutputStream buffer = new ByteArrayOutputStream ( ) ; toByteArray ( buffer , str ) ; return buffer . toString ( ) ; }
30658	@ Override public void connect ( long timeout ) throws AWSIotException , AWSIotTimeoutException { super . connect ( timeout ) ; }
30661	public synchronized final void reschedule ( long period ) { _period = period ; wakeUp ( ) ; }
30673	public JSONArray put ( int index , double value ) throws JSONException { put ( index , new Double ( value ) ) ; return this ; }
30676	public static SM_SYSTEM_MESSAGE STR_MSG_ACCUSE_INFO_3_LEVEL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
30694	public static char [ ] toCharArray ( InputStream is ) throws IOException { return toCharArray ( is , Charset . defaultCharset ( ) ) ; }
30717	public Application createJmxApplicationInteractive ( String connectionString , String displayName , String username , String password ) { return createJmxApplicationInteractive ( connectionString , displayName , username , password , _BOOL , _BOOL ) ; }
30722	public static Date unmodifiableDate ( Date date ) { if ( date instanceof ImmutableDate ) { return date ; } return new ImmutableDate ( date . getTime ( ) ) ; }
30735	protected void validateNamespaceOwnership ( String property , String cluster , String namespace ) { validateNamespaceOwnership ( property , cluster , namespace , _BOOL , _BOOL ) ; }
30738	synchronized public Remote export ( Remote impl , boolean allowCache ) throws ExportException { return export ( impl , _config , allowCache ) ; }
30756	public static < T extends DataSupport > void markAsDeleted ( Collection < T > collection ) { for ( T t : collection ) { t . clearSavedState ( ) ; } }
30779	public boolean ignore_types ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR ignore - types _CHAR ) ; }
30792	public static int sign ( final int x ) { return ( x == _NUM ) ? _NUM : ( x > _NUM ) ? _NUM : - _NUM ; }
30804	@ Override public Pair < Aggregation , Aggregation > nest ( ) { String nestingName = this . getName ( ) ; Aggregation outer = this . getAggregation ( ) . withFieldName ( nestingName ) ; return new ImmutablePair < > ( outer , this ) ; }
30824	public boolean isDocumentLevel ( ) { loadRuleProperties ( ) ; return documentLevelRule ; }
30836	public JSONWriter array ( ) throws JSONException { if ( this . mode == _CHAR || this . mode == _CHAR || this . mode == _CHAR ) { this . push ( _NULL ) ; this . append ( _CHAR [ _CHAR ) ; this . comma = _BOOL ; return this ; } throw new JSONException ( _CHAR Misplaced array . '' ) ; }
30839	int onUpdateAll ( String tableName , ContentValues values , String ... conditions ) { return doUpdateAllAction ( tableName , values , conditions ) ; }
30841	public boolean insert_redundant_casts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR insert - redundant - casts _CHAR ) ; }
30842	public E claimAndGetPreallocated ( long sequence ) { sequencer . claim ( sequence ) ; return get ( sequence ) ; }
30847	public static void resetPlugins ( ) { getInstance ( ) . reset ( ) ; }
30861	@ NonNull public static Observable < Integer > task1 ( @ NonNull List < String > list ) { return Observable . just ( _NUM ) ; }
30864	@ Override public void processingInstruction ( String target , XMLString data , Augmentations augs ) throws XNIException { }
30887	protected void addToken ( Tokens tokens , int token ) throws XNIException { tokens . addToken ( token ) ; }
30908	public Map . Entry < K , V > ceilingEntry ( K key ) { return getNear ( key , GT | EQ ) ; }
30909	public boolean ignore_types_for_sccs ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR ignore - types - for - sccs '' ) ; }
30917	@ Override public void powerOnSelfTest ( ) throws Error { }
30924	public static CarbonDimension findDimension ( List < CarbonDimension > dimensions , String carbonDim ) { CarbonDimension findDim = _NULL ; for ( CarbonDimension dimension : dimensions ) { if ( dimension . getColName ( ) . equalsIgnoreCase ( carbonDim ) ) { findDim = dimension ; break ; } } return findDim ; }
30935	public boolean containsKey ( Object key ) { return backedMap . containsKey ( key ) ; }
30940	public double tTest ( final double mu , final StatisticalSummary sampleStats ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSampleData ( sampleStats ) ; return tTest ( sampleStats . getMean ( ) , mu , sampleStats . getVariance ( ) , sampleStats . getN ( ) ) ; }
30944	public static void copy ( Reader input , OutputStream output ) throws IOException { OutputStreamWriter out = new OutputStreamWriter ( output ) ; copy ( input , out ) ; out . flush ( ) ; }
30980	private static int resolveGravity ( int gravity ) { return gravity == Gravity . NO_GRAVITY ? GravityCompat . START | Gravity . TOP : gravity ; }
30989	public void resetResendCount ( ) { resendCount = _NUM ; if ( nodeInitStageAdvancer . isInitializationComplete ( ) && isDead ( ) == _BOOL ) { nodeInitStageAdvancer . startInitialisation ( ZWaveNodeInitStage . DONE ) ; } }
31073	public static String imageToString ( Image image , String format ) { byte [ ] imageBytes = imageToBytes ( image , format ) ; return imageBytes != _NULL ? Base64 . byteArrayToBase64 ( imageBytes ) : _NULL ; }
31077	public void java_lang_Runtime_execInternal ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getProcessObject ( ) ) ; }
31084	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
31090	@ Override public MapStack < K > standAloneChildStack ( ) { MapStack < K > standAloneChild = MapStack . create ( this ) ; standAloneChild . push ( ) ; return standAloneChild ; }
31095	static void scheduleAfter ( Activity before , Activity after ) { getInstance ( ) . _scheduleAfter ( before , after ) ; }
31096	public boolean isUploading ( Account account , OCFile file ) { if ( account == _NULL || file == _NULL ) return _BOOL ; return ( mPendingUploads . contains ( account . name , file . getRemotePath ( ) ) ) ; }
31115	@ Deprecated public ShapelessRecipe removeIngredient ( Material ingredient , int rawdata ) { return removeIngredient ( _NUM , ingredient , rawdata ) ; }
31192	public static < T > OperatorSemaphore < T > semaphoreLatest ( Observable < Boolean > go ) { return new OperatorSemaphore < > ( go , _BOOL ) ; }
31194	public static boolean isYear ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; if ( ! isNonnegativeInteger ( s ) ) return _BOOL ; return ( ( s . length ( ) == _NUM ) || ( s . length ( ) == _NUM ) ) ; }
31196	@ Override public void write ( byte b [ ] , int off , int len ) { if ( len == _NUM ) return ; ensureCapacity ( len ) ; System . arraycopy ( b , off , _buffer , _count , len ) ; _count += len ; }
31209	public static float reduceSinAngle ( float radians ) { radians % = TWO_PI ; if ( Math . abs ( radians ) > PI ) { radians = radians - ( TWO_PI ) ; } if ( Math . abs ( radians ) > HALF_PI ) { radians = PI - radians ; } return radians ; }
31214	public JSONObject optJSONObject ( int index ) { Object o = this . opt ( index ) ; return o instanceof JSONObject ? ( JSONObject ) o : _NULL ; }
31221	public JsonObject add ( String name , JsonValue value ) { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name is _NULL _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value is _NULL _CHAR ) ; } table . add ( name , names . size ( ) ) ; names . add ( name ) ; values . add ( value ) ; return this ; }
31222	public String toString ( ) { return new String ( b , _NUM , i_end ) ; }
31242	private LogSeqNum currentLSN ( ) { return new LogSeqNum ( currentBlk . number ( ) , currentPos ) ; }
31250	public Builder inertia ( Boolean inertia ) { this . inertia = inertia ; return this ; }
31253	public T walkInOptimizedOrder ( final FieldVectorPreservingVisitor < T > visitor ) { return walkInDefaultOrder ( visitor ) ; }
31257	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
31261	public S2Cap complement ( ) { double cHeight = isFull ( ) ? - _NUM : _NUM - Math . max ( height , _NUM . _NUM ) ; return S2Cap . fromAxisHeight ( S2Point . neg ( axis ) , cHeight ) ; }
31288	@ Override public Text splitText ( int offset ) throws DOMException { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Method not supported _CHAR ) ; }
31302	public VideoEditCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
31306	public static boolean isSameDomainName ( String url1 , String url2 ) throws MalformedURLException { return isSameDomainName ( new URL ( url1 ) , new URL ( url2 ) ) ; }
31312	@ Override public Document createDefaultDocument ( ) { return new SyntaxDocument ( lexer ) ; }
31315	public FieldRotation < T > revert ( ) { return new FieldRotation < T > ( q0 . negate ( ) , q1 , q2 , q3 , _BOOL ) ; }
31316	public void addInsn ( Insn insn ) { insns . addElement ( insn ) ; }
31318	public static void checkConstraints ( InvocationConstraints constraints ) throws UnsupportedConstraintException { if ( constraints == _NULL ) { return ; } for ( Iterator i = constraints . requirements ( ) . iterator ( ) ; i . hasNext ( ) ; ) { InvocationConstraint c = ( InvocationConstraint ) i . next ( ) ; if ( ! supported ( c ) ) { throw new UnsupportedConstraintException ( _CHAR unsupported constraint : _CHAR + c ) ; } } }
31323	public void add ( Predicate p , int shape ) { super . add ( p , new Integer ( shape ) ) ; }
31324	public static File toFile ( URL url ) { if ( url == _NULL || ! _CHAR file _CHAR . equalsIgnoreCase ( url . getProtocol ( ) ) ) { return _NULL ; } else { String filename = url . getFile ( ) . replace ( _CHAR , File . separatorChar ) ; filename = decodeUrl ( filename ) ; return new File ( filename ) ; } }
31330	public boolean isValidCountryCodeTld ( String ccTld ) { ccTld = unicodeToASCII ( ccTld ) ; return Arrays . binarySearch ( COUNTRY_CODE_TLDS , chompLeadingDot ( ccTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
31342	public static void displayContextClassLoaderTree ( ) { Thread curThread = Thread . currentThread ( ) ; ClassLoader curClassLoader = curThread . getContextClassLoader ( ) ; displayClassLoaderTree ( curClassLoader ) ; }
31357	public static void enableConsoleLogging ( ) { consoleLoggingEnabled = _BOOL ; }
31388	@ Override public IScanListIterator < IEntryCacheInfo > establishScan ( K startPos , short relation , K endPos , boolean endPosInclusive ) { return establishScan ( startPos , relation , endPos , endPosInclusive , _BOOL ) ; }
31398	public static < T > void notEmpty ( String argumentName , T [ ] argumentObject ) { notNull ( argumentName , argumentObject ) ; if ( argumentObject . length == _NUM ) { throw new IllegalArgumentException ( argumentName + _CHAR can not be empty _CHAR ) ; } }
31399	public static < R > Observable < R > ifThen ( BooleanSupplier condition , ObservableSource < ? extends R > then , Scheduler scheduler ) { return ifThen ( condition , then , Observable . < R > empty ( ) . subscribeOn ( scheduler ) ) ; }
31409	public boolean isLocalEchoEnabled ( ) { return localEchoEnabled ; }
31416	public void endEntity ( String name , Augmentations augs ) throws XNIException { fEntityDepth -- ; }
31421	public void delFriend ( int friendOid ) { Iterator < Friend > it = iterator ( ) ; while ( it . hasNext ( ) ) { if ( it . next ( ) . getOid ( ) == friendOid ) { it . remove ( ) ; } } }
31425	public boolean isComponentNotPresent ( Class < ? > componentClass ) { final String cssClassName = new AemComponentHandler ( componentClass ) . getCssClassName ( ) ; return isComponentNotPresent ( cssClassName ) ; }
31449	public static < E > Stream < E > validate ( Stream < E > stream , Predicate < ? super E > validator , UnaryOperator < E > transformingIfNotValid ) { return validate ( stream , validator , Function . identity ( ) , transformingIfNotValid ) ; }
31456	public boolean isMinified ( List < String > codeLines ) { OptionalDouble average = codeLines . stream ( ) . map ( _NULL ) . mapToInt ( _NULL ) . average ( ) ; if ( average . isPresent ( ) && average . getAsDouble ( ) > this . MINIFIEDLENGTH ) { return _BOOL ; } return _BOOL ; }
31482	public static String generateKey ( String imageUri , ImageSize targetSize ) { return new StringBuilder ( imageUri ) . append ( URI_AND_SIZE_SEPARATOR ) . append ( targetSize . getWidth ( ) ) . append ( WIDTH_AND_HEIGHT_SEPARATOR ) . append ( targetSize . getHeight ( ) ) . toString ( ) ; }
31486	public static String removeExtraSpaces ( String text ) { text = text . replace ( ChineseLanguageConstants . SPACE [ _NUM ] , ChineseLanguageConstants . SPACE [ _NUM ] ) ; text = text . replaceAll ( _CHAR [ \ t \ u000B \ u000C \ u00A0 \ uE5F1 ] + _CHAR , _CHAR _CHAR ) ; text = text . replaceAll ( _CHAR ( ^ + ) | ( + $ ) _CHAR , _CHAR _CHAR ) ; return text ; }
31492	public boolean simple_edges_bidirectional ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simple - edges - bidirectional _CHAR ) ; }
31520	public static < T > Observable < T > whileDo ( ObservableSource < ? extends T > source , BooleanSupplier preCondition ) { ObjectHelper . requireNonNull ( source , _CHAR source is _NULL _CHAR ) ; ObjectHelper . requireNonNull ( preCondition , _CHAR preCondition is _NULL _CHAR ) ; return RxJavaPlugins . onAssembly ( new ObservableWhileDoWhile < T > ( source , preCondition , preCondition ) ) ; }
31537	public long value ( ) { return _map . _values [ _index ] ; }
31542	public boolean this_edges ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR this - edges _CHAR ) ; }
31547	public boolean implies ( Permission perm ) { if ( ! ( perm instanceof AuthenticationPermission ) ) { return _BOOL ; } AuthenticationPermission ap = ( AuthenticationPermission ) perm ; return ( mask & ap . mask ) == ap . mask && implies0 ( ap ) ; }
31551	public static ResponseProperties createNotAuthorizedResponse ( String statusMessage ) { return new ResponseProperties ( HttpServletResponse . SC_UNAUTHORIZED , statusMessage ) ; }
31554	private void addIdentifierOrKeyword ( ) { int oldPos = pos - _NUM ; String id = scanIdentifier ( ) ; TokenKind kind = getTokenKindForIdentfier ( id ) ; addToken ( kind , oldPos , pos , ( kind == TokenKind . IDENTIFIER ) ? id : _NULL ) ; }
31572	public SiteAdminPage createNewPageReusingDialog ( String title , String templateName ) { createPageWindow . createPage ( title , templateName ) ; grid . waitForLoaderNotPresent ( ) ; return this ; }
31584	boolean doesProfileMatch ( Experiment experiment , SegmentationProfile segmentationProfile , HttpHeaders headers , Context context ) { return doesProfileMatch ( experiment , segmentationProfile , headers , context , _BOOL ) ; }
31590	public Activity runAfter ( String beforeKey , String afterKey ) { Activity before = get ( beforeKey ) ; Activity after = get ( afterKey ) ; if ( before != _NULL && after != _NULL ) ActivityManager . scheduleAfter ( before , after ) ; return after ; }
31591	public WindowInsetsCompat onApplyWindowInsets ( CoordinatorLayout coordinatorLayout , V child , WindowInsetsCompat insets ) { return insets ; }
31597	public < R > Plan < R > then ( Function < ? super T , ? extends R > selector ) { return JoinPatterns . then ( o , selector ) ; }
31602	public boolean vta ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR vta _CHAR ) ; }
31615	public boolean simulate_natives ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simulate - natives _CHAR ) ; }
31630	private static void expandBelow7DigitNumber ( String numberString , WordRelation wordRelation ) { expandLargeNumber ( numberString , _CHAR thousand _CHAR , _NUM , wordRelation ) ; }
31646	public Map . Entry < K , V > pollLastEntry ( ) { return doRemoveLastEntry ( ) ; }
31659	public void writeFloat ( float value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeFloat ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
31666	public boolean canPowerUp ( boolean considerMaxCPLimitForPlayerLevel ) throws NoSuchItemException { return considerMaxCPLimitForPlayerLevel ? this . canPowerUp ( ) && ( this . getCp ( ) < this . getMaxCpForPlayer ( ) ) : canPowerUp ( ) ; }
31669	public Builder withRange ( ByteString endKey ) { this . endKey = Optional . fromNullable ( endKey ) ; return this ; }
31692	public static String toString ( InputStream input , Charset encoding ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw , encoding ) ; return sw . toString ( ) ; }
31694	public static int copy ( InputStream input , OutputStream output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
31707	@ Deprecated public static boolean hasParentType ( Delegator delegator , String entityName , String primaryKey , String childType , String parentTypeField , String parentType ) { return EntityTypeUtil . hasParentType ( delegator , entityName , primaryKey , childType , parentTypeField , parentType ) ; }
31709	public double optDouble ( int index ) { return this . optDouble ( index , Double . NaN ) ; }
31710	public Builder maximumAge ( Number maximumAge ) { this . maximumAge = maximumAge ; return this ; }
31721	public DynamicTemplateParameterContext addParameter ( String paramName , String paramValue ) { return addParameter ( paramName , paramValue , ContextInfo . EMPTY ) ; }
31755	public static boolean isUpdate ( int mod ) { return Modifiers . contains ( mod , UpdateModifiers . UPDATE_ONLY | UpdateModifiers . PARTIAL_UPDATE | UpdateModifiers . UPDATE_OR_WRITE ) ; }
31772	public int geom_frac_base ( ) { return soot . PhaseOptions . getInt ( options , _CHAR geom - frac - base _CHAR ) ; }
31783	public void putDefaultFramePathOnStack ( ) { if ( ! switchRequestComingFromFrameSwitcher ) { localDeque . push ( new FramePath ( ) ) ; } }
31784	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
31812	public static void write ( char [ ] data , Writer output ) throws IOException { if ( data != _NULL ) { output . write ( data ) ; } }
31847	public static boolean isSignedFloat ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { Float . parseFloat ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
31857	public static < T extends RealFieldElement < T >> T distance ( final FieldVector3D < T > v1 , final FieldVector3D < T > v2 ) { return v1 . distance ( v2 ) ; }
31868	public synchronized long size ( ) { return size ; }
31881	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
31889	public static MultiTextEdit flatten ( TextEdit edit ) { MultiTextEdit result = new MultiTextEdit ( ) ; flatten ( edit , result ) ; return result ; }
31896	@ Override public void splitNode ( ) { return ; }
31902	public Vector2f divideLocal ( float scalar ) { x /= scalar ; y /= scalar ; return this ; }
31906	public void clearExpressions ( ) { this . leftSide = _NULL ; this . rightSide = _NULL ; }
31929	public void add ( Predicate p , double size ) { super . add ( p , new Double ( size ) ) ; }
31933	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_protect_PROTECT_SKILL_HEAL_ME_to_B ( String protector , int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , protector , num0 , skilltarget , skillname ) ; }
31936	@ Override public boolean equals ( Object object ) { if ( this == object ) { return _BOOL ; } if ( object == _NULL ) { return _BOOL ; } if ( getClass ( ) != object . getClass ( ) ) { return _BOOL ; } JsonArray other = ( JsonArray ) object ; return values . equals ( other . values ) ; }
31945	public int findFirstCompletelyVisibleItemPosition ( ) { final View child = findOneVisibleChild ( _NUM , getChildCount ( ) , _BOOL ) ; return child == _NULL ? NO_POSITION : getPosition ( child ) ; }
31946	public static SM_SYSTEM_MESSAGE STR_SUBMIT_PETITION_FAILED_NOT_SERVICE_TIME ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
31955	public void addResource ( URL url ) { addResourceObject ( url ) ; }
31957	public void performSignIn ( Fragment fragment ) { LoginManager . getInstance ( ) . logInWithReadPermissions ( fragment , Arrays . asList ( _CHAR public_profile _CHAR , _CHAR user_friends _CHAR , _CHAR email _CHAR ) ) ; }
31960	public byte [ ] decodeAuto ( String s ) { int nRemain = s . length ( ) % _NUM ; if ( nRemain == _NUM ) { return this . decode ( s ) ; } else { return this . decode ( s + new String ( this . charToPad , _NUM , _NUM - nRemain ) ) ; } }
31994	public static char [ ] toCharArray ( InputStream is , Charset encoding ) throws IOException { CharArrayWriter output = new CharArrayWriter ( ) ; copy ( is , output , encoding ) ; return output . toCharArray ( ) ; }
31996	private static boolean focusCenter ( ) { return ( ! CropOverlayView . showGuidelines ( ) ) ; }
32006	private List < ValueComboBoxDataGroup > populateSymbolList ( Class < ? > panelDetails ) { List < ValueComboBoxDataGroup > combinedSymbolList = new ArrayList < ValueComboBoxDataGroup > ( ) ; for ( FieldState panel : symbolTypeFieldList ) { panel . populateSymbolList ( panelDetails , combinedSymbolList ) ; } return combinedSymbolList ; }
32010	public void erasePurchase ( String sku ) { if ( mPurchaseMap . containsKey ( sku ) ) mPurchaseMap . remove ( sku ) ; }
32012	public static boolean isRematchedUpdate ( int mod ) { return ( mod & NOTIFY_REMATCHED_UPDATE ) != _NUM ; }
32018	public void removeDiscoveryListener ( DiscoveryListener listener ) { listeners . remove ( listener ) ; }
32026	private Map < String , String > mapJobRowsToJobViews ( JobRow jobRow ) { try { return jobPayloadBuilder . buildPayload ( jobRow , uriInfo ) ; } catch ( JobRequestFailedException ignored ) { String msg = ErrorMessageFormat . JOBS_RETREIVAL_FAILED . format ( jobRow . getId ( ) ) ; LOG . error ( msg ) ; throw new JobRequestFailedException ( msg ) ; } }
32040	public < E extends Element > void registerLintRule ( LintRule < E > rule ) { lintRules . put ( rule . getElementClass ( ) , rule ) ; registerLintRuleName ( rule . getName ( ) ) ; }
32055	public void timeToSpeech ( String time ) { String theTime = timeToString ( time ) ; if ( theTime != _NULL ) { textToSpeech ( theTime ) ; } else { throw new IllegalArgumentException ( _CHAR Bad time format _CHAR ) ; } }
32060	public static String toString ( byte [ ] input , String encoding ) throws IOException { return new String ( input , encoding ) ; }
32101	public static boolean isXML11NameHighSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
32113	public boolean simplify_sccs ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simplify - sccs _CHAR ) ; }
32137	public final void removeDescription ( final Object pValue ) { if ( pValue != _NULL ) { this . descriptions . remove ( pValue ) ; } }
32142	public static void writeLines ( File file , Collection < ? > lines ) throws IOException { writeLines ( file , _NULL , lines , _NULL , _BOOL ) ; }
32146	public static boolean showGuidelines ( ) { if ( ( Math . abs ( Edge . LEFT . getCoordinate ( ) - Edge . RIGHT . getCoordinate ( ) ) < DEFAULT_SHOW_GUIDELINES_LIMIT ) || ( Math . abs ( Edge . TOP . getCoordinate ( ) - Edge . BOTTOM . getCoordinate ( ) ) < DEFAULT_SHOW_GUIDELINES_LIMIT ) ) return _BOOL ; else return _BOOL ; }
32149	public void installAemPackage ( String packageName ) throws IOException { String packagePath = String . format ( _CHAR / etc / packages / % s . zip _CHAR , packageName ) ; HttpPost request = builder . createInstallRequest ( packagePath ) ; sender . sendCrxRequest ( request ) ; }
32157	public void onReady ( Runnable runnable ) { runnable . run ( ) ; }
32163	@ Override public void startContentModel ( String elementName , Augmentations augs ) throws XNIException { XMLElementDecl elementDecl = ( XMLElementDecl ) this . fElementDeclTab . get ( elementName ) ; if ( elementDecl != _NULL ) { fElementDecl = elementDecl ; } fDepth = _NUM ; initializeContentModelStack ( ) ; }
32178	public JimpleBody toJimpleBody ( ) { ShimpleBody sBody = ( ShimpleBody ) this . clone ( ) ; sBody . eliminateNodes ( ) ; JimpleBody jBody = Jimple . v ( ) . newBody ( sBody . getMethod ( ) ) ; jBody . importBodyContentsFrom ( sBody ) ; return jBody ; }
32182	public static int readUnsignedShort ( ByteBuffer bb ) throws BufferUnderflowException { int ch1 = bb . get ( ) & _NUM ; int ch2 = bb . get ( ) & _NUM ; return ( ch1 << _NUM ) + ( ch2 << _NUM ) ; }
32185	public void trimToSize ( ) { int newCapacity = nextPrime ( ( int ) ( _NUM + _NUM . _NUM * size ( ) ) ) ; if ( table . length > newCapacity ) { rehash ( newCapacity ) ; } }
32199	public static double log ( double base , double x ) { return Math . log ( x ) / Math . log ( base ) ; }
32202	@ Override public void mark ( int readAheadLimit ) throws IOException { fInputStream . mark ( readAheadLimit ) ; }
32211	public int provideDumpInterval ( ) { return provideBlockThreshold ( ) ; }
32225	public boolean with_rectarray ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR with - rectarray _CHAR ) ; }
32228	static String byteArrayToAltBase64 ( byte [ ] a ) { return byteArrayToBase64 ( a , _BOOL ) ; }
32232	public static long lowestOnBitForLevel ( int level ) { return _NUM << ( _NUM * ( MAX_LEVEL - level ) ) ; }
32236	public boolean isArrayElement ( String element ) { return arrayElements . contains ( element ) ; }
32241	public boolean tryWriteLockOnKey ( K id , Long timeout ) { try { return cache . tryWriteLockOnKey ( id , timeout ) ; } catch ( InterruptedException e ) { LOGGER . debug ( _CHAR Thread interrupted for id = '' + String . valueOf ( id ) + _CHAR ( _CHAR + this . getClass ( ) + _CHAR ) _CHAR ) ; return _BOOL ; } }
32243	public static void isAssignableTo ( String argumentName , Object argumentObject , Class < ? > targetClass ) { notNull ( argumentName , argumentObject ) ; if ( ! targetClass . isAssignableFrom ( argumentObject . getClass ( ) ) ) { throw new IllegalArgumentException ( argumentName + _CHAR can not be assigned to _CHAR + targetClass . getName ( ) ) ; } }
32245	public Boolean shouldOpenExternalUrl ( String url ) { return _NULL ; }
32270	protected IViewFinder createViewFinderView ( Context context ) { return new ViewFinderView ( context ) ; }
32271	public boolean insert_null_checks ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR insert - _NULL - checks _CHAR ) ; }
32284	@ Nullable public static String extractMajorVersionFromSemanticVersion ( String semanticVersion ) { Matcher matcher = SEMANTIC_VERSION_REGEX_PATTERN . matcher ( semanticVersion ) ; if ( matcher . find ( ) ) { return matcher . group ( _NUM ) ; } else { return _NULL ; } }
32312	protected long doRenew ( long duration ) throws UnknownLeaseException , RemoteException { return server . renewEventLease ( eventID , leaseID , duration ) ; }
32314	public static String toString ( byte [ ] input , String encoding ) throws IOException { return new String ( input , Charsets . toCharset ( encoding ) ) ; }
32333	@ Override protected void merge ( FlowSet in1 , FlowSet in2 , FlowSet out ) { in1 . intersection ( in2 , out ) ; }
32343	public static void writeByteArrayToFile ( File file , byte [ ] data ) throws IOException { writeByteArrayToFile ( file , data , _BOOL ) ; }
32344	public synchronized void update ( Vector2 mousePosition ) { this . beginPosition = mousePosition ; }
32350	public static boolean isPrimitiveWrapperArray ( Class clazz ) { Assert . notNull ( clazz , _CHAR Class must not be _NULL _CHAR ) ; return ( clazz . isArray ( ) && isPrimitiveWrapper ( clazz . getComponentType ( ) ) ) ; }
32373	public static String toString ( InputStream input ) throws IOException { return toString ( input , Charset . defaultCharset ( ) ) ; }
32396	public void add ( Predicate p , StrokeAction f ) { super . add ( p , f ) ; }
32401	public byte [ ] unsafeGetArray ( ) { return bytes ; }
32407	public StatelessHibernateSpaceDataSourceConfigurer performOrderById ( boolean performOrderById ) { this . performOrderById = performOrderById ; return this ; }
32410	public boolean precise_newinstance ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR precise - newinstance _CHAR ) ; }
32439	public boolean execute ( String action , String rawArgs , CallbackContext callbackContext ) throws JSONException { JSONArray args = new JSONArray ( rawArgs ) ; return execute ( action , args , callbackContext ) ; }
32457	public boolean simulate_natives ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simulate - natives _CHAR ) ; }
32463	public static JScrollPane newTableScrollPane ( JComponent comp ) { return new TableScrollPane ( comp ) ; }
32465	protected GroupsGetQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
32476	@ Override public void onShadowUpdate ( String jsonState ) { super . onShadowUpdate ( jsonState ) ; }
32481	public String guards ( ) { return soot . PhaseOptions . getString ( options , _CHAR guards _CHAR ) ; }
32509	synchronized public Remote export ( Remote impl ) throws ExportException { return export ( impl , _config , _BOOL ) ; }
32510	@ Override public final void finalize ( ) { if ( LOG . isDebugEnabled ( ) ) { LOG . debug ( _CHAR finalize ( ) - Removing the references to the fallbackManager and the dataRecoveryThread _CHAR ) ; } dataRecovery . stop ( ) ; dataRecovery = _NULL ; fallbackManager . finalize ( ) ; }
32519	public MarketCreateCommentQuery attachments ( String ... value ) { return unsafeParam ( _CHAR attachments _CHAR , value ) ; }
32527	public static void writeLines ( File file , Collection < ? > lines , String lineEnding , boolean append ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , append ) ; }
32530	public static Map < String , String > tags ( Tags tags ) { return tags . stream ( ) . map ( _NULL ) . flatMap ( _NULL ) . map ( _NULL ) . collect ( Collectors . toMap ( _NULL , _NULL ) ) ; }
32532	public PlacesCheckinQuery services ( PlacesCheckinService ... value ) { return unsafeParam ( _CHAR services _CHAR , value ) ; }
32549	public MutationBatch prepareMutationBatch ( ConsistencyLevel consistency ) { return _astyanaxKeyspace . prepareMutationBatch ( ) . setConsistencyLevel ( clamp ( consistency ) ) ; }
32551	public static double distanceInf ( Vector2D p1 , Vector2D p2 ) { return p1 . distanceInf ( p2 ) ; }
32560	public Builder lineCap ( String lineCap ) { this . lineCap = lineCap ; return this ; }
32576	public static String unescapeChar ( String parseStr ) { switch ( parseStr ) { case _CHAR \\ _NUM _CHAR : return _CHAR \ _NUM _CHAR ; case _CHAR \\ t _CHAR : return _CHAR \ t _CHAR ; case _CHAR \\ r _CHAR : return _CHAR \ r _CHAR ; case _CHAR \\ b _CHAR : return _CHAR \ b _CHAR ; case _CHAR \\ f _CHAR : return _CHAR \ f _CHAR ; case _CHAR \\ n _CHAR : return _CHAR \ n _CHAR ; default : return parseStr ; } }
32582	public Map . Entry < K , V > lowerEntry ( K key ) { return getNear ( key , LT ) ; }
32585	public static String buildSystemName ( @ Nullable Project project ) { return getBuildSystem ( project ) . getName ( ) ; }
32595	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output , String encoding ) throws IOException { writeLines ( lines , lineEnding , output , Charsets . toCharset ( encoding ) ) ; }
32612	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final int scrollRange , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , scrollRange , _NUM , DEFAULT_OVERSCROLL_SCALE , isTouchEvent ) ; }
32613	protected List < ZWaveEvent > processCommandClassMessage ( byte [ ] packetData ) { return processCommandClassMessage ( packetData , _NUM ) ; }
32620	public E peek ( ) { for ( ; ; ) { Node < E > node = top . get ( ) ; if ( node == _NULL ) { return _NULL ; } E e = node . get ( ) ; if ( e == _NULL ) { top . compareAndSet ( node , node . next ) ; } else { return e ; } } }
32634	public static char [ ] toCharArray ( InputStream is , Charset encoding ) throws IOException { CharArrayWriter output = new CharArrayWriter ( ) ; copy ( is , output , encoding ) ; return output . toCharArray ( ) ; }
32635	@ Override public boolean retainAll ( Collection < ? > c ) { return backedSet . retainAll ( c ) ; }
32636	@ Override public final void startContentModel ( String elementName , Augmentations augs ) throws XNIException { fDepth = _NUM ; initializeContentModelStacks ( ) ; super . startContentModel ( elementName , augs ) ; }
32645	public boolean isSub ( ) { return isSub ; }
32657	public final char yycharat ( int pos ) { return zzBuffer [ zzStartRead + pos ] ; }
32661	public static byte [ ] toByteArray ( Reader input , String encoding ) throws IOException { return toByteArray ( input , Charsets . toCharset ( encoding ) ) ; }
32673	public boolean force_gc ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR force - gc _CHAR ) ; }
32685	public double [ ] apply ( double [ ] signal ) { return new BufferedDoubleDataSource ( signal , new Processor ( a ) ) . getAllData ( ) ; }
32703	public static String dbNameToClassName ( String columnName ) { return upperFirstChar ( dbNameToVarName ( columnName ) ) ; }
32706	public static void isNotNull ( Object object , String message ) { if ( object == _NULL ) throw new AssertionFailedException ( _CHAR _NULL argument : _CHAR + message ) ; }
32719	public void values ( ArrayList list ) { Object [ ] val = values ; byte [ ] stat = state ; for ( int i = stat . length ; i -- > _NUM ; ) { if ( stat [ i ] == FULL ) list . add ( val [ i ] ) ; } }
32726	public double tTest ( final double mu , final double [ ] sample ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSampleData ( sample ) ; return tTest ( StatUtils . mean ( sample ) , mu , StatUtils . variance ( sample ) , sample . length ) ; }
32741	public void computeFromPoints ( FloatBuffer points ) { calcWelzl ( points ) ; }
32765	public boolean providesIntegrity ( URL url ) { if ( ! _CHAR file _CHAR . equals ( url . getProtocol ( ) ) ) { return _BOOL ; } String host = url . getHost ( ) ; return ( host == _NULL || host . equals ( _CHAR _CHAR ) || host . equals ( _CHAR ~ _CHAR ) || host . equals ( _CHAR localhost _CHAR ) ) ; }
32777	public String makeStringValueSQ ( String value ) { value = StringUtils . replace ( value , _CHAR \\ _CHAR , _CHAR \\\\ _CHAR ) ; value = StringUtils . replace ( value , _CHAR $ { _CHAR , _CHAR $ \\ { _CHAR ) ; value = StringUtils . replace ( value , _CHAR _CHAR_CHAR_CHAR _CHAR ) ; return value ; }
32789	public final boolean equals ( Object obj ) { if ( obj instanceof Uuid ) { Uuid other = ( Uuid ) obj ; return bits0 == other . bits0 && bits1 == other . bits1 ; } else { return _BOOL ; } }
32791	public static String quote ( String string ) { StringWriter sw = new StringWriter ( ) ; synchronized ( sw . getBuffer ( ) ) { try { return quote ( string , sw ) . toString ( ) ; } catch ( IOException ignored ) { return _CHAR _CHAR ; } } }
32804	public BoardGetTopicsQuery order ( BoardGetTopicsOrder value ) { return unsafeParam ( _CHAR order _CHAR , value ) ; }
32807	public Builder withGradleSync ( boolean gradleSync ) { myGradleSync = gradleSync ; return this ; }
32811	@ Override public int read ( ) throws IOException { int b0 = fInputStream . read ( ) ; if ( b0 >= _NUM ) { throw new MalformedByteSequenceException ( fFormatter , fLocale , XMLMessageFormatter . XML_DOMAIN , _CHAR InvalidASCII _CHAR , new Object [ ] { Integer . toString ( b0 ) } ) ; } return b0 ; }
32821	private void readObjectNoData ( ) throws ObjectStreamException { throw new InvalidObjectException ( _CHAR no data found when attempting to _CHAR + _CHAR deserialize MailboxProxy instance _CHAR ) ; }
32829	public static < T extends RealFieldElement < T >> T distanceSq ( final FieldVector3D < T > v1 , final FieldVector3D < T > v2 ) { return v1 . distanceSq ( v2 ) ; }
32832	public static void writeStringToFile ( File file , String data , String encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
32833	private static Version readVersion ( BitMatrix bitMatrix ) throws FormatException { int numRows = bitMatrix . getHeight ( ) ; int numColumns = bitMatrix . getWidth ( ) ; return Version . getVersionForDimensions ( numRows , numColumns ) ; }
32848	public static void replaceBinaryHttpEntityBody ( FullHttpMessage message , byte [ ] newBinaryContents ) { message . content ( ) . resetWriterIndex ( ) ; message . content ( ) . ensureWritable ( newBinaryContents . length , _BOOL ) ; message . content ( ) . writeBytes ( newBinaryContents ) ; message . headers ( ) . set ( HttpHeaders . Names . CONTENT_LENGTH , newBinaryContents . length ) ; }
32853	public void animateX ( int durationMillis ) { if ( android . os . Build . VERSION . SDK_INT < _NUM ) return ; ObjectAnimator animatorX = ObjectAnimator . ofFloat ( this , _CHAR phaseX _CHAR , _NUM , _NUM ) ; animatorX . setDuration ( durationMillis ) ; animatorX . addUpdateListener ( mListener ) ; animatorX . start ( ) ; }
32863	public static void overScrollBy ( final PullToRefreshBase < ? > view , final int deltaX , final int scrollX , final int deltaY , final int scrollY , final boolean isTouchEvent ) { overScrollBy ( view , deltaX , scrollX , deltaY , scrollY , _NUM , isTouchEvent ) ; }
32864	public TrustManagerBuilder withCertChainListener ( CertChainListener listener ) { mgr . addCertChainListener ( listener ) ; return ( this ) ; }
32867	public boolean simple_edges_bidirectional ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR simple - edges - bidirectional _CHAR ) ; }
32893	public final TestSubscriber < T > configureValuesStorage ( boolean enabled ) { this . valuesStorage = enabled ; return this ; }
32898	public boolean insert_redundant_casts ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR insert - redundant - casts _CHAR ) ; }
32900	public static String randomID ( ) { return System . currentTimeMillis ( ) + _CHAR _CHAR ; }
32907	public static boolean isPartialUpdate ( int mod ) { return Modifiers . contains ( mod , UpdateModifiers . PARTIAL_UPDATE ) ; }
32911	@ VisibleForTesting public static void ignoreBrowserProviderSystemPackageCheckForTests ( boolean ignore ) { sIgnoreBrowserProviderSystemPackageCheck = ignore ; }
32926	public static Object deepClone ( Object obj ) { try { byte [ ] bArray = objectToByteBuffer ( obj ) ; return objectFromByteBuffer ( bArray ) ; } catch ( Exception ex ) { throw new IllegalArgumentException ( _CHAR Failed to perform deep clone on [ _CHAR + obj + _CHAR ] object . Check that the all object context are implements java . io . Serializable . '' , ex ) ; } }
32927	public Builder diskCacheExtraOptions ( int maxImageWidthForDiskCache , int maxImageHeightForDiskCache , BitmapProcessor processorForDiskCache ) { this . maxImageWidthForDiskCache = maxImageWidthForDiskCache ; this . maxImageHeightForDiskCache = maxImageHeightForDiskCache ; this . processorForDiskCache = processorForDiskCache ; return this ; }
32938	public static < T > Flowable < T > whileDo ( Publisher < ? extends T > source , BooleanSupplier preCondition ) { ObjectHelper . requireNonNull ( source , _CHAR source is _NULL _CHAR ) ; ObjectHelper . requireNonNull ( preCondition , _CHAR preCondition is _NULL _CHAR ) ; return RxJavaPlugins . onAssembly ( new FlowableWhileDoWhile < T > ( source , preCondition , preCondition ) ) ; }
32953	public void insert ( int offset , short [ ] values ) { insert ( offset , values , _NUM , values . length ) ; }
32968	public void switchBack ( ) { if ( localDeque . size ( ) > _NUM ) { doSwitch ( localDeque . poll ( ) , localDeque . peek ( ) ) ; } }
32974	public String toString ( ) { try { return this . toString ( _NUM ) ; } catch ( Exception e ) { return _NULL ; } }
32984	public HectorCassandraClientConfigurer clusterName ( String clusterName ) { this . clusterName = clusterName ; return this ; }
33000	public void add ( GenomicCoords gc ) { if ( this . history . size ( ) == _NUM || ! this . history . get ( this . history . size ( ) - _NUM ) . equalCoords ( gc ) ) { this . history . add ( ( GenomicCoords ) gc . clone ( ) ) ; } this . positionTracker = this . history . size ( ) - _NUM ; }
33007	public static String loadFileSetToString ( Set < String > ssFiles ) { StringBuffer sbRes = new StringBuffer ( ) ; for ( String sCurFile : ssFiles ) { sbRes . append ( loadFileToString ( sCurFile ) ) . append ( ( char ) _NUM ) ; } return sbRes . toString ( ) ; }
33023	public void processingInstruction ( String target , String data ) throws SAXException { }
33031	public void columnRemoved ( TableColumnModelEvent e ) { resizeAndRepaint ( ) ; }
33036	public void startPrefixMapping ( String prefix , String uri ) throws org . xml . sax . SAXException { startPrefixMapping ( prefix , uri , _BOOL ) ; }
33039	private SSOToken checkAuthentication ( HttpServletRequest request ) throws SSOException { SSOTokenManager manager = SSOTokenManager . getInstance ( ) ; SSOToken ssoToken = manager . createSSOToken ( request ) ; manager . validateToken ( ssoToken ) ; return ssoToken ; }
33042	public void firePropertyChange ( String propertyName , int oldValue , int newValue ) { super . firePropertyChange ( propertyName , oldValue , newValue ) ; }
33062	public AMSearchResults searchGroupContainers ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP_CONTAINER ) , getSearchFilter ( AMObject . GROUP_CONTAINER ) , wildcard , avPairs , searchControl ) ; }
33077	@ Override public void add ( int location , E object ) { insertElementAt ( object , location ) ; }
33080	private void open ( File fileName , boolean append ) throws IOException { meteredStream = new MeteredStream ( fileName , append ) ; setOutputStream ( meteredStream ) ; checkForHeaderWritten ( fileName . toString ( ) ) ; }
33091	public static < T > MenuResult < T > success ( ) { return success ( Collections . < T > emptySet ( ) ) ; }
33093	private boolean isCauseException ( Throwable ex , Class < ? > clazz , int maxLevels ) { if ( maxLevels > _NUM ) { Throwable cause = ex . getCause ( ) ; if ( cause != _NULL ) { return clazz . isInstance ( cause ) || isCauseException ( cause , clazz , maxLevels - _NUM ) ; } } return _BOOL ; }
33107	public float readFloat ( ) throws SQLException { Float attrib = ( Float ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . floatValue ( ) ; }
33119	public Enumeration postorderEnumeration ( ) { return new PostorderEnumeration ( this ) ; }
33128	public XMLString toLowerCase ( Locale locale ) { return new XString ( str ( ) . toLowerCase ( locale ) ) ; }
33144	public boolean isValidEntry ( String dn ) throws SSOException { if ( ! LDAPUtils . isDN ( dn ) ) { return _BOOL ; } SSOTokenManager . getInstance ( ) . validateToken ( token ) ; if ( AMCommonUtils . debug . messageEnabled ( ) ) { AMCommonUtils . debug . message ( _CHAR AMStoreConnection . isValidEntry ( ) : DN = _CHAR + dn ) ; } return dsServices . doesEntryExists ( token , dn ) ; }
33157	public boolean markSupported ( ) { return _BOOL ; }
33163	public void isBinary ( boolean b ) { }
33164	public void organizationConfigChanged ( String serviceName , String version , String orgName , String groupName , String serviceComponent , int type ) { }
33168	public String debugDump ( ) { String superstring = super . debugDump ( ) ; stringRepresentation = _CHAR _CHAR ; sprint ( SIPRequest . class . getName ( ) ) ; sprint ( _CHAR { _CHAR ) ; if ( requestLine != _NULL ) sprint ( requestLine . debugDump ( ) ) ; sprint ( superstring ) ; sprint ( _CHAR } _CHAR ) ; return stringRepresentation ; }
33188	public InputSource resolveEntity ( String publicId , String systemId ) throws IOException , SAXException { return _NULL ; }
33189	public int showSaveDialog ( Component parent ) throws HeadlessException { setDialogType ( SAVE_DIALOG ) ; return showDialog ( parent , _NULL ) ; }
33191	public boolean allowsCoreThreadTimeOut ( ) { return allowCoreThreadTimeOut ; }
33194	private void validateDisableReplicationOptions ( LocalizableMessageBuilder buf ) { appendErrorMessageIfArgumentsConflict ( buf , getAdminUidArg ( ) , secureArgsList . getBindDnArg ( ) ) ; appendErrorMessageIfArgumentsConflict ( buf , disableAllArg , disableReplicationServerArg ) ; appendErrorMessageIfArgumentsConflict ( buf , disableAllArg , baseDNsArg ) ; }
33199	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
33205	protected void write ( StringBuffer buffer ) { System . err . println ( buffer . toString ( ) ) ; }
33208	public static byte [ ] decodeWebSafe ( byte [ ] source ) throws Base64DecoderException { return decodeWebSafe ( source , _NUM , source . length ) ; }
33218	public Encoder withoutPadding ( ) { if ( ! doPadding ) return this ; return new Encoder ( isURL , newline , linemax , _BOOL ) ; }
33220	public static MatteBorder createMatteBorder ( int top , int left , int bottom , int right , Icon tileIcon ) { return new MatteBorder ( top , left , bottom , right , tileIcon ) ; }
33224	protected void reportWrongNumberArgs ( ) throws WrongNumberArgsException { String fMsg = XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_INCORRECT_PROGRAMMER_ASSERTION , new Object [ ] { _CHAR Programmer _CHAR_CHAR } ) ; throw new RuntimeException ( fMsg ) ; }
33225	public boolean equals ( Object object ) { return ( object != _NULL && object instanceof URISyntax && this . uri . equals ( ( ( URISyntax ) object ) . uri ) ) ; }
33227	private void doPostAdd ( PluginOperation addOperation , Entry entry ) { if ( hasGroupMembershipUpdateControl ( addOperation ) ) { return ; } createAndRegisterGroup ( entry ) ; }
33228	public E remove ( int index ) { checkElementIndex ( index ) ; return unlink ( node ( index ) ) ; }
33230	public static String encode ( String s ) { String ret = _NULL ; try { ret = encode ( s , UTF_8 ) ; } catch ( UnsupportedEncodingException e ) { } return ret ; }
33239	public static void flushCaches ( ) { synchronized ( declaredMethodCache ) { ThreadGroupContext . getContext ( ) . clearBeanInfoCache ( ) ; declaredMethodCache . clear ( ) ; } }
33243	public void startDocument ( ) throws org . xml . sax . SAXException { }
33246	public LdapConnection connect ( final String host , final int port ) throws LdapException { return connect ( host , port , Options . defaultOptions ( ) ) ; }
33249	public void writeTo ( OutputStream output ) throws IOException { output . write ( buf , _NUM , count ) ; }
33265	public CompositeData remove ( Object [ ] key ) { checkKeyType ( key ) ; return dataMap . remove ( Arrays . asList ( key ) ) ; }
33270	public boolean keepProcessingParent ( ) { return keepProcessingParent ; }
33278	public boolean equals ( Object object ) { return ( object != _NULL && object instanceof Size2DSyntax && this . x == ( ( Size2DSyntax ) object ) . x && this . y == ( ( Size2DSyntax ) object ) . y ) ; }
33284	public Wrapper addServlet ( String contextPath , String servletName , String servletClass ) { Container ctx = getHost ( ) . findChild ( contextPath ) ; return addServlet ( ( Context ) ctx , servletName , servletClass ) ; }
33309	boolean isNavigatable ( int offset ) { return ! isLiteral ( offset ) ; }
33311	public static GSSAPISASLBindRequest unmodifiableGSSAPISASLBindRequest ( final GSSAPISASLBindRequest request ) { if ( request instanceof UnmodifiableGSSAPISASLBindRequestImpl ) { return request ; } return new UnmodifiableGSSAPISASLBindRequestImpl ( request ) ; }
33315	public void login ( AuthContext . IndexType type , String indexName , String locale ) throws AuthLoginException { if ( authDebug . messageEnabled ( ) ) { authDebug . message ( _CHAR AuthContextLocal : : login ( ) called _CHAR + _CHAR with IndexType : _CHAR + type + _CHAR & Indexname : _CHAR + indexName + _CHAR & locale : _CHAR + locale ) ; } login ( type , indexName , _NULL , _NULL , _NULL , _NULL , locale ) ; }
33329	protected SizeRequirements calculateMajorAxisRequirements ( int axis , SizeRequirements r ) { updateInsets ( ) ; rowIterator . updateAdjustments ( ) ; r = CSS . calculateTiledRequirements ( rowIterator , r ) ; r . maximum = r . preferred ; return r ; }
33331	public Object clone ( ) { return ( new CompoundName ( getAll ( ) , mySyntax ) ) ; }
33340	public boolean isVisible ( TreePath path ) { if ( path != _NULL ) { TreePath parentPath = path . getParentPath ( ) ; if ( parentPath != _NULL ) return isExpanded ( parentPath ) ; return _BOOL ; } return _BOOL ; }
33343	public void addReturnAttribute ( CoreTokenField field ) { Reject . ifNull ( field ) ; returnFields . add ( field ) ; }
33346	public static String toString ( long n ) { return IntegralToString . longToString ( n ) ; }
33350	private List < ? > checkValueAndIndex ( CompositeData value ) { checkValueType ( value ) ; List < ? > index = internalCalculateIndex ( value ) ; if ( dataMap . containsKey ( index ) ) { throw new KeyAlreadyExistsException ( _CHAR Argument value _CHAR_CHAR_CHAR s tabularType , already refers to a value in this table . '' ) ; } return index ; }
33360	public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) { }
33361	protected void layoutMajorAxis ( int targetSpan , int axis , int [ ] offsets , int [ ] spans ) { if ( children == _NULL ) { init ( ) ; } SizeRequirements . calculateTiledPositions ( targetSpan , _NULL , getChildRequests ( targetSpan , axis ) , offsets , spans ) ; }
33379	public boolean equals ( String obj2 ) { return str ( ) . equals ( obj2 ) ; }
33380	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
33418	public boolean reset ( ) { boolean wasReset = _BOOL ; if ( super . reset ( ) ) { wasReset = _BOOL ; } return wasReset ; }
33430	public static byte [ ] decodeWebSafe ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , WEBSAFE_DECODABET ) ; }
33441	public int start ( int group ) { if ( first < _NUM ) throw new IllegalStateException ( _CHAR No match available _CHAR ) ; if ( group < _NUM || group > groupCount ( ) ) throw new IndexOutOfBoundsException ( _CHAR No group _CHAR + group ) ; return groups [ group * _NUM ] ; }
33445	public boolean isMember ( SSOToken token ) throws SSOException { return ( SSOTokenManager . getInstance ( ) . isValidToken ( token ) ) ; }
33448	public String toString ( ) { return super . toString ( ) + _CHAR ; Link Remaining Name : _CHAR_CHAR_CHAR _CHAR ; }
33449	protected String paramString ( ) { String rootPaneCheckingEnabledString = ( rootPaneCheckingEnabled ? _CHAR _BOOL _CHAR : _CHAR _BOOL _CHAR ) ; return super . paramString ( ) + _CHAR , rootPaneCheckingEnabled = _CHAR + rootPaneCheckingEnabledString ; }
33469	public int indexOfObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( int i = _NUM ; i < array . length ; i ++ ) { if ( array [ i ] . equals ( nso ) ) { return i ; } } return - _NUM ; }
33473	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeRef ( Ref x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialRef ( x ) ) ; } }
33474	private boolean checkXMLENC ( final byte [ ] msg ) { if ( ! checkSecond ( msg ) ) { return _BOOL ; } if ( hasCorrectKeySize ( _NUM , msg ) || hasCorrectKeySize ( _NUM , msg ) || hasCorrectKeySize ( _NUM , msg ) ) { return _BOOL ; } return _BOOL ; }
33475	protected String paramString ( ) { return super . paramString ( ) ; }
33479	public String [ ] _ids ( ) { return ( String [ ] ) _type_ids . clone ( ) ; }
33506	protected void firePropertyChange ( String propertyName , Object oldValue , Object newValue ) { propertyChangeSupport . firePropertyChange ( propertyName , oldValue , newValue ) ; }
33521	public OffsetDateTime plusDays ( long days ) { return with ( dateTime . plusDays ( days ) , offset ) ; }
33526	public final void cancel ( ) { synchronized ( this ) { if ( valid ) { valid = _BOOL ; ( ( AbstractSelector ) selector ( ) ) . cancel ( this ) ; } } }
33531	public boolean is_start_info ( ) { return start_info ; }
33540	public void addConnectionProperty ( final String name , final String value ) { connectionProperties . put ( name , value ) ; }
33552	public static Remote exportObject ( Remote obj , ActivationID id , int port , RMIClientSocketFactory csf , RMIServerSocketFactory ssf ) throws RemoteException { return exportObject ( obj , new ActivatableServerRef ( id , port , csf , ssf ) ) ; }
33555	public URL createLocalServerURL ( String path ) throws MalformedURLException { return new URL ( WebtopNaming . getLocalServer ( ) + _CHAR / _CHAR + path ) ; }
33564	public void firePropertyChange ( String propertyName , int oldValue , int newValue ) { firePropertyChange ( propertyName , Integer . valueOf ( oldValue ) , Integer . valueOf ( newValue ) ) ; }
33574	public List < Attribute > toAttributeList ( ) throws IllegalStateException { return CollectionUtils . newArrayList ( toAttribute ( ) ) ; }
33586	public boolean equals ( Object obj ) { return obj instanceof Date && getTime ( ) == ( ( Date ) obj ) . getTime ( ) ; }
33590	@ Override public void close ( ) { flush ( ) ; }
33603	public MessageFactory createMessageFactory ( ) throws PeerUnavailableException { if ( messageFactory == _NULL ) { messageFactory = ( MessageFactory ) createSipFactory ( _CHAR javax . sip . message . MessageFactoryImpl _CHAR ) ; } return messageFactory ; }
33604	public void addEditor ( ) { removeEditor ( ) ; editor = comboBox . getEditor ( ) . getEditorComponent ( ) ; if ( editor != _NULL ) { configureEditor ( ) ; comboBox . add ( editor ) ; if ( comboBox . isFocusOwner ( ) ) { editor . requestFocusInWindow ( ) ; } } }
33613	protected BCSChild createBCSChild ( Object targetChild , Object peer ) { return new BCSSChild ( targetChild , peer ) ; }
33619	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
33636	public E remove ( int index ) { E rv = delegate . elementAt ( index ) ; delegate . removeElementAt ( index ) ; fireIntervalRemoved ( this , index , index ) ; return rv ; }
33641	public char charAt ( int index ) { return m_str . charAt ( index ) ; }
33653	public IContentOperator registerContentOperator ( String operatorString , IContentOperator operator ) { return operators . put ( operatorString , operator ) ; }
33656	public WorldCreator generator ( ChunkGenerator generator ) { this . generator = generator ; return this ; }
33665	public void copyFrom ( Properties src ) { copyFrom ( src , _BOOL ) ; }
33679	public DecimalStyle withPositiveSign ( char positiveSign ) { if ( positiveSign == this . positiveSign ) { return this ; } return new DecimalStyle ( zeroDigit , positiveSign , negativeSign , decimalSeparator ) ; }
33680	public boolean requiresTunnel ( ) { return address . sslSocketFactory != _NULL && proxy . type ( ) == Proxy . Type . HTTP ; }
33687	public boolean authenticate ( IdType idType , Callback [ ] credentials ) throws IdRepoException , com . sun . identity . authentication . spi . AuthLoginException { IdServices idServices = IdServicesFactory . getDataStoreServices ( ) ; return idServices . authenticate ( organizationDN , credentials , idType ) ; }
33720	Object adjustValue ( Object value , Map attributes , Object field , int direction ) throws BadLocationException , ParseException { return _NULL ; }
33728	public boolean isTrueVolatile ( ) { return _BOOL ; }
33741	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof RADIUSPrincipal ) ) { return _BOOL ; } RADIUSPrincipal that = ( RADIUSPrincipal ) o ; if ( this . getName ( ) . equals ( that . getName ( ) ) ) { return _BOOL ; } return _BOOL ; }
33752	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
33799	public TextHitInfo hitTestChar ( float x , float y ) { return hitTestChar ( x , y , getNaturalBounds ( ) ) ; }
33805	@ Override public void init ( Subject subject , Map sharedState , Map options ) { this . sharedState = sharedState ; authLoginModule . init ( subject , sharedState , options ) ; }
33808	public final void pressReturnToContinue ( ) { try { readLineOfInput ( INFO_MENU_PROMPT_RETURN_TO_CONTINUE . get ( ) ) ; } catch ( final ClientException e ) { } }
33819	public Object encode ( Object pObject ) throws EncoderException { if ( ! ( pObject instanceof byte [ ] ) ) { throw new EncoderException ( _CHAR Parameter supplied to Base64 encode is not a byte [ ] _CHAR ) ; } return encode ( ( byte [ ] ) pObject ) ; }
33822	public static AsfHeader readHeader ( final RandomAccessFile file ) throws IOException { final InputStream stream = createStream ( file ) ; return FULL_READER . read ( Utils . readGUID ( stream ) , stream , _NUM ) ; }
33848	public void startPrefixMapping ( String prefix , String uri ) throws org . xml . sax . SAXException { if ( _NULL == prefix || prefix . equals ( _CHAR _CHAR ) ) prefix = _CHAR xmlns _CHAR ; else prefix = _CHAR xmlns : _CHAR + prefix ; m_prefixMappings . addElement ( prefix ) ; m_prefixMappings . addElement ( uri ) ; }
33862	public static boolean isLeap ( long year ) { return ( ( year & _NUM ) == _NUM ) && ( ( year % _NUM ) != _NUM || ( year % _NUM ) == _NUM ) ; }
33885	void sendReset ( ) { state . sendReset ( ) ; }
33886	static public XObject create ( Object val ) { return XObjectFactory . create ( val ) ; }
33891	@ Override public synchronized void backgroundProcess ( ) { if ( getState ( ) . isAvailable ( ) && getEnabled ( ) && writer != _NULL && buffered ) { writer . flush ( ) ; } }
33892	public static EnumEvalResult evalURL ( AciEvalContext evalCtx , LDAPURL url ) { return evalURL0 ( evalCtx , url ) ? EnumEvalResult . TRUE : EnumEvalResult . FALSE ; }
33893	public Object [ ] toArray ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return Arrays . copyOf ( queue , size ) ; } finally { lock . unlock ( ) ; } }
33923	public static String toLatinAlphabetNumberLowerCase ( int number ) { return AlphabetNumbering . toAlphabetNumber ( number , ALPHABET_LOWERCASE ) ; }
33930	protected void firePropertyChange ( String propertyName , Object oldValue , Object newValue ) { if ( changeSupport != _NULL ) { changeSupport . firePropertyChange ( propertyName , oldValue , newValue ) ; } }
33932	private Node < E > nextNode ( Node < E > p ) { for ( ; ; ) { Node < E > s = p . next ; if ( s == p ) return head . next ; if ( s == _NULL || s . item != _NULL ) return s ; p = s ; } }
33934	public boolean isToggleOff ( ) { return ! getFieldFlag ( FF_NO_TOGGLE_TO_OFF ) ; }
33942	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof JobName ) ; }
33962	public static void message ( CommandManager mgr , String msg , Throwable t ) { dumpToOutput ( mgr , msg , t ) ; mgr . getDebugger ( ) . message ( msg , t ) ; }
33967	public static void embedBasicPatterns ( int version , ByteMatrix matrix ) throws WriterException { embedPositionDetectionPatternsAndSeparators ( matrix ) ; embedDarkDotAtLeftBottomCorner ( matrix ) ; maybeEmbedPositionAdjustmentPatterns ( version , matrix ) ; embedTimingPatterns ( matrix ) ; }
33984	public void addPropertyChangeListener ( PropertyChangeListener listener ) { if ( listener == _NULL ) { return ; } if ( listener instanceof PropertyChangeListenerProxy ) { PropertyChangeListenerProxy proxy = ( PropertyChangeListenerProxy ) listener ; addPropertyChangeListener ( proxy . getPropertyName ( ) , proxy . getListener ( ) ) ; } else { this . map . add ( _NULL , listener ) ; } }
33986	public void traverse ( Node pos ) throws org . xml . sax . SAXException { this . m_contentHandler . startDocument ( ) ; traverseFragment ( pos ) ; this . m_contentHandler . endDocument ( ) ; }
33989	public void layoutContainer ( Container parent ) { arrangeGrid ( parent ) ; }
33992	void pop ( ) { if ( ! stack . isEmpty ( ) ) { DirectoryNode node = stack . pop ( ) ; try { node . stream ( ) . close ( ) ; } catch ( IOException ignore ) { } } }
33994	private void checkUniqueName ( String name , String type , Node n ) throws JasperException { checkUniqueName ( name , type , n , _NULL ) ; }
33995	public boolean exists ( ) { return ! takeSnapshot ( ) . isMissing ( ) ; }
34001	public boolean equals ( Object o ) { if ( ( o == _NULL ) || ! ( o instanceof ImageTypeSpecifier ) ) { return _BOOL ; } ImageTypeSpecifier that = ( ImageTypeSpecifier ) o ; return ( colorModel . equals ( that . colorModel ) ) && ( sampleModel . equals ( that . sampleModel ) ) ; }
34015	public AMSearchResults searchAssignableDynamicGroups ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP ) , getSearchFilter ( AMObject . ASSIGNABLE_DYNAMIC_GROUP ) , wildcard , avPairs , searchControl ) ; }
34016	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeArray ( Array x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialArray ( x , map ) ) ; } }
34023	public void remove ( int position ) { delItem ( position ) ; }
34030	public void handleAddTPButtonRequest ( RequestInvocationEvent event ) { FSSAMLSelectTrustedPartnerTypeViewBean vb = ( FSSAMLSelectTrustedPartnerTypeViewBean ) getViewBean ( FSSAMLSelectTrustedPartnerTypeViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
34032	protected synchronized void majorRequirementChange ( ChildState cs , float delta ) { if ( estimatedMajorSpan == _BOOL ) { majorSpan += delta ; } majorChanged = _BOOL ; }
34051	public synchronized void dragExit ( DropTargetEvent dte ) { isDraggingInside = _BOOL ; if ( ! active ) return ; if ( dtListener != _NULL && active ) dtListener . dragExit ( dte ) ; clearAutoscroll ( ) ; }
34059	public void characters ( char ch [ ] , int start , int length ) throws SAXException { }
34094	public static void reset ( ) { schema = new XMPSchemaRegistryImpl ( ) ; }
34117	private void writeStartMask ( int mask ) throws IOException { if ( mask != _NUM ) { if ( ( mask & UNDERLINE ) != _NUM ) { write ( _CHAR < u > _CHAR ) ; } if ( ( mask & ITALIC ) != _NUM ) { write ( _CHAR < i > _CHAR ) ; } if ( ( mask & BOLD ) != _NUM ) { write ( _CHAR < b > _CHAR ) ; } } }
34135	boolean matchesOptionalSpacesFollowedBy ( String s ) { Mark mark = mark ( ) ; skipSpaces ( ) ; boolean result = matches ( s ) ; if ( ! result ) { setCurrent ( mark ) ; } return result ; }
34148	void resetId ( ) { id = NativeCrypto . SSL_SESSION_session_id ( sslSessionNativePointer ) ; }
34155	private void updatePressed ( boolean p ) { this . pressed = p && isEnabled ( ) ; if ( shouldActLikeButton ( ) ) { comboBox . repaint ( ) ; } }
34157	@ Override public Object lookup ( Name name ) throws NamingException { if ( log . isDebugEnabled ( ) ) { log . debug ( sm . getString ( _CHAR selectorContext . methodUsingName _CHAR , _CHAR lookup _CHAR , name ) ) ; } return getBoundContext ( ) . lookup ( parseName ( name ) ) ; }
34159	public StarBrick genStarBrick ( float [ ] coords , int stageZone ) { return new StarBrick ( player , stageZone , stageContainer , coords [ _NUM ] , coords [ _NUM ] , ( float ) _NUM . _NUM * REL_HEIGHT , ( float ) _NUM . _NUM * REL_HEIGHT , starBrickSprites , invinciStarSprites ) ; }
34179	private MouseInputListener createWindowMouseInputListener ( JRootPane root ) { return new MouseInputHandler ( ) ; }
34180	protected boolean isNavigationKey ( int keyCode ) { return keyCode == KeyEvent . VK_UP || keyCode == KeyEvent . VK_DOWN || keyCode == KeyEvent . VK_KP_UP || keyCode == KeyEvent . VK_KP_DOWN ; }
34182	@ Override public Foo fetchByUUID_G ( String uuid , long groupId ) { return fetchByUUID_G ( uuid , groupId , _BOOL ) ; }
34186	public void finest ( Supplier < String > msgSupplier ) { log ( Level . FINEST , msgSupplier ) ; }
34211	boolean isNormal ( ) { if ( intLen + offset > value . length ) return _BOOL ; if ( intLen == _NUM ) return _BOOL ; return ( value [ offset ] != _NUM ) ; }
34223	public void clear ( ) { if ( data != _NULL ) { for ( int i = _NUM ; i < ( length * _NUM ) ; i ++ ) data [ i ] = _NULL ; } length = _NUM ; }
34224	public void log ( Level level , String msg , Object params [ ] ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; lr . setParameters ( params ) ; doLog ( lr ) ; }
34225	public SubResourceCollection useClientDnNaming ( final String dnAttribute ) { this . namingStrategy = new DnNamingStrategy ( dnAttribute ) ; return this ; }
34227	public boolean _is_equivalent ( org . omg . CORBA . Object that ) { return equals ( that ) ; }
34228	public Reference < ? extends T > poll ( ) { if ( head == _NULL ) return _NULL ; synchronized ( lock ) { return reallyPoll ( ) ; } }
34231	static boolean isSelectionStarted ( Spannable buffer ) { DragState [ ] ds ; ds = buffer . getSpans ( _NUM , buffer . length ( ) , DragState . class ) ; return ds . length > _NUM && ds [ _NUM ] . mIsSelectionStarted ; }
34238	public int hashCode ( ) { int hash = addrType . hashCode ( ) ; for ( int i = _NUM ; i < buf . length ; i ++ ) { hash += buf [ i ] ; } return hash ; }
34243	public void closeCDATA ( ) throws SAXException { if ( m_lexHandler != _NULL && m_cdataTagOpen ) { m_lexHandler . endCDATA ( ) ; } m_cdataTagOpen = _BOOL ; }
34255	public String toString ( ) { return getName ( ) + _CHAR = _CHAR + getValue ( ) ; }
34267	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
34269	public String encodeURL ( HttpServletResponse res , String url , String cookieName , Session session ) { String httpEncodeUrl = res . encodeURL ( url ) ; return encodeSessionURL ( httpEncodeUrl , SessionUtils . QUERY , _BOOL , cookieName , session ) ; }
34284	public boolean isLeftToRight ( ) { return textLine . isDirectionLTR ( ) ; }
34285	@ Override public Class < ? > loadClass ( String name ) throws ClassNotFoundException { return ( loadClass ( name , _BOOL ) ) ; }
34289	public static ExecutorService newCachedThreadPool ( ThreadFactory threadFactory ) { return new ThreadPoolExecutor ( _NUM , Integer . MAX_VALUE , _NUM , TimeUnit . SECONDS , new SynchronousQueue < Runnable > ( ) , threadFactory ) ; }
34296	@ Override public boolean defaulted ( String name ) throws IOException , IllegalArgumentException { return emulatedFields . defaulted ( name ) ; }
34297	public static String encodeBase64URLSafeString ( final byte [ ] binaryData ) { return StringUtils . newStringUtf8 ( encodeBase64 ( binaryData , _BOOL , _BOOL ) ) ; }
34304	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { }
34309	public URI parseServerAuthority ( ) throws URISyntaxException { if ( ! serverAuthority ) { parseAuthority ( _BOOL ) ; } return this ; }
34314	public boolean equals ( Object object ) { return ( object != _NULL && object instanceof Media && object . getClass ( ) == this . getClass ( ) && ( ( Media ) object ) . getValue ( ) == this . getValue ( ) ) ; }
34315	public int at ( int x , int y ) { int value = matrix . get ( x , y ) ; if ( ! ( value == _NUM || value == _NUM ) ) { throw new RuntimeException ( _CHAR Bad value _CHAR ) ; } return value ; }
34320	public final boolean isDebugEnabled ( ) { return isLevelEnabled ( SimpleLog . LOG_LEVEL_DEBUG ) ; }
34333	public StateInteractive mouse_pressed ( PlaPointFloat p_point ) { return this ; }
34335	public void endCompose ( StylesheetRoot sroot ) throws TransformerException { super . endCompose ( sroot ) ; if ( m_parentNode instanceof Stylesheet ) { StylesheetRoot . ComposeState cstate = sroot . getComposeState ( ) ; m_frameSize = cstate . getFrameSize ( ) ; cstate . resetStackFrameSize ( ) ; } }
34338	protected String paramString ( ) { String rootPaneString = ( rootPane != _NULL ? rootPane . toString ( ) : _CHAR _CHAR ) ; String rootPaneCheckingEnabledString = ( rootPaneCheckingEnabled ? _CHAR _BOOL _CHAR : _CHAR _BOOL _CHAR ) ; return super . paramString ( ) + _CHAR , rootPane = _CHAR + rootPaneString + _CHAR , rootPaneCheckingEnabled = _CHAR + rootPaneCheckingEnabledString ; }
34343	public C create ( ) throws DataLayerException { boolean success = _BOOL ; try { C response = connectionFactory . create ( ) ; success = _BOOL ; return response ; } finally { monitorStore . addConnection ( success ) ; } }
34348	@ Deprecated public static boolean useExactLoginLocation ( ) { return server . useExactLoginLocation ( ) ; }
34362	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof RequestingUserName ) ; }
34375	public void modifyService ( String serviceName , Map attributes ) throws SMSException { try { getServiceConfig ( serviceName ) . setAttributes ( attributes ) ; } catch ( SSOException ssoe ) { SMSEntry . debug . error ( _CHAR OrganizationConfigManager . modifyService _CHAR + _CHAR SSOException in modify service _CHAR , ssoe ) ; throw ( new SMSException ( SMSEntry . bundle . getString ( SMS_INVALID_SSO_TOKEN ) , SMS_INVALID_SSO_TOKEN ) ) ; } }
34384	public boolean add ( E e ) { if ( offer ( e ) ) return _BOOL ; else throw new IllegalStateException ( _CHAR Queue full _CHAR ) ; }
34391	protected void uninstallKeyboardActions ( ) { SwingUtilities . replaceUIActionMap ( list , _NULL ) ; SwingUtilities . replaceUIInputMap ( list , JComponent . WHEN_FOCUSED , _NULL ) ; }
34393	public void commentChar ( int ch ) { if ( ch >= _NUM && ch < ctype . length ) ctype [ ch ] = CT_COMMENT ; }
34405	public void deleteOnQuery ( final TokenFilter filter ) throws CoreTokenException , IllegalArgumentException { filter . addReturnAttribute ( CoreTokenField . TOKEN_ID ) ; ResultHandler < Collection < PartialToken > , CoreTokenException > handler = handlerFactory . getDeleteOnQueryHandler ( ) ; try { attributeQueryWithHandler ( filter , handler ) ; } catch ( CoreTokenException e ) { throw new QueryFailedException ( filter , e ) ; } }
34420	public boolean addAll ( int index , RoleList roleList ) throws IllegalArgumentException , IndexOutOfBoundsException { if ( roleList == _NULL ) { String excMsg = _CHAR Invalid parameter . '' ; throw new IllegalArgumentException ( excMsg ) ; } return ( super . addAll ( index , roleList ) ) ; }
34426	public boolean stopCellEditing ( ) { if ( realEditor . stopCellEditing ( ) ) { cleanupAfterEditing ( ) ; return _BOOL ; } return _BOOL ; }
34430	public static byte [ ] copyOf ( byte [ ] original , int newLength ) { byte [ ] copy = new byte [ newLength ] ; System . arraycopy ( original , _NUM , copy , _NUM , Math . min ( original . length , newLength ) ) ; return copy ; }
34431	public boolean isNodeRelated ( DefaultMutableTreeNode aNode ) { return ( aNode != _NULL ) && ( getRoot ( ) == aNode . getRoot ( ) ) ; }
34432	public void validateCookie ( MultiDomainServerState cookie , Set < DN > ignoredBaseDNs ) throws DirectoryException { final Set < DN > activeDomains = getDNsOfActiveDomainsInServer ( ignoredBaseDNs ) ; final Set < DN > cookieDomains = getDNsOfCookie ( cookie ) ; checkNoUnknownDomainIsProvidedInCookie ( cookie , activeDomains , cookieDomains ) ; checkCookieIsNotOutdated ( cookie , activeDomains ) ; }
34436	public static byte [ ] charToByte ( char [ ] charArray ) { byte bytearray [ ] = _NULL ; try { if ( charArray != _NULL ) { bytearray = ( byte [ ] ) new String ( charArray ) . getBytes ( _CHAR UTF - _NUM _CHAR ) ; } } catch ( UnsupportedEncodingException e ) { } return bytearray ; }
34437	public void addChangeListener ( ChangeListener l ) { listenerList . add ( ChangeListener . class , l ) ; }
34441	private void appendNodeValue ( String value , boolean forAttribute ) throws IOException { if ( value == _NULL ) { value = _CHAR _CHAR ; } write ( Utils . escapeXML ( value , forAttribute , _BOOL ) ) ; }
34455	public boolean match ( MimeType type ) { if ( type == _NULL ) return _BOOL ; return primaryType . equals ( type . getPrimaryType ( ) ) && ( subType . equals ( _CHAR * _CHAR ) || type . getSubType ( ) . equals ( _CHAR * _CHAR ) || ( subType . equals ( type . getSubType ( ) ) ) ) ; }
34464	public boolean equals ( Object obj ) { if ( obj instanceof UnknownTag ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
34472	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiMenuBarUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiMenuBarUI ) mui ) . uis , a ) ; }
34475	public boolean equals ( java . lang . Object obj ) { if ( stubDelegate == _NULL ) { setDefaultDelegate ( ) ; } if ( stubDelegate != _NULL ) { return stubDelegate . equals ( this , obj ) ; } return _BOOL ; }
34476	public static boolean isSigningOn ( ) { return signingOn ; }
34477	protected void startAnimationTimer ( ) { if ( animator == _NULL ) { animator = new Animator ( ) ; } animator . start ( getRepaintInterval ( ) ) ; }
34492	boolean alwaysOnTop ( ) { if ( SwingUtilities . getAncestorOfClass ( JInternalFrame . class , this ) != _NULL ) { return _BOOL ; } return _BOOL ; }
34493	public Iterator < E > iterator ( ) { return new Itr ( toArray ( ) ) ; }
34502	protected void addIcon ( Container top ) { Icon sideIcon = getIcon ( ) ; if ( sideIcon != _NULL ) { JLabel iconLabel = new JLabel ( sideIcon ) ; iconLabel . setName ( _CHAR OptionPane . iconLabel _CHAR ) ; iconLabel . setVerticalAlignment ( SwingConstants . TOP ) ; top . add ( iconLabel , BorderLayout . BEFORE_LINE_BEGINS ) ; } }
34505	public boolean isClosed ( ) { return closed ; }
34515	protected LayoutManager createLayout ( ) { return getHandler ( ) ; }
34545	public Builder addUnicodeLocaleAttribute ( String attribute ) { try { localeBuilder . addUnicodeLocaleAttribute ( attribute ) ; } catch ( LocaleSyntaxException e ) { throw new IllformedLocaleException ( e . getMessage ( ) , e . getErrorIndex ( ) ) ; } return this ; }
34549	public Dimension minimumLayoutSize ( Container parent ) { GridBagLayoutInfo info = getLayoutInfo ( parent , MINSIZE ) ; return getMinSize ( parent , info ) ; }
34565	public static Entry modifyEntry ( final Entry entry , final Modification change ) throws LdapException { return modifyEntry ( entry , change , _NULL ) ; }
34574	public synchronized void sendReset ( ) { if ( state == State . IDLE ) { throw new IllegalStateException ( sm . getString ( _CHAR streamStateMachine . debug . change _CHAR , stream . getConnectionId ( ) , stream . getIdentifier ( ) , state ) ) ; } if ( state . canReset ( ) ) { stateChange ( state , State . CLOSED_RST_TX ) ; } }
34581	public static Foo fetchByUUID_G ( java . lang . String uuid , long groupId , boolean retrieveFromCache ) { return getPersistence ( ) . fetchByUUID_G ( uuid , groupId , retrieveFromCache ) ; }
34591	public Node removeNamedItemNS ( String namespaceURI , String localName ) throws DOMException { throw new DTMException ( DTMException . NO_MODIFICATION_ALLOWED_ERR ) ; }
34592	public boolean isOptimizedDrawingEnabled ( ) { return ! glassPane . isVisible ( ) ; }
34593	public Set searchSubGroupContainers ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP_CONTAINER ) , getSearchFilter ( AMObject . GROUP_CONTAINER ) , wildcard , avPairs , level ) ; }
34598	public String toString ( ) { String answer = super . toString ( ) ; if ( _exception != _NULL && _exception != this ) { answer += _CHAR [ Caused by _CHAR + _exception . toString ( ) + _CHAR ] _CHAR ; } return answer ; }
34601	public String toString ( ) { if ( keyCode == KeyEvent . VK_UNDEFINED ) { return getModifiersText ( modifiers ) + _CHAR typed _CHAR + keyChar ; } else { return getModifiersText ( modifiers ) + ( onKeyRelease ? _CHAR released _CHAR : _CHAR pressed _CHAR ) + _CHAR _CHAR + getVKText ( keyCode ) ; } }
34602	static int capacityForInitSize ( int size ) { int result = ( size >> _NUM ) + size ; return ( result & ~ ( MAXIMUM_CAPACITY - _NUM ) ) == _NUM ? result : MAXIMUM_CAPACITY ; }
34605	public void warning ( SAXParseException e ) throws SAXException { }
34611	protected boolean isRootPaneCheckingEnabled ( ) { return rootPaneCheckingEnabled ; }
34621	public void addColumn ( Object columnName ) { addColumn ( columnName , ( Vector ) _NULL ) ; }
34638	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
34647	@ Override public int read ( ) throws IOException { return Streams . readSingleByte ( this ) ; }
34654	@ Override public boolean isValidateRoot ( ) { return ! ( SwingUtilities . getUnwrappedParent ( this ) instanceof JViewport ) ; }
34656	final boolean link ( Index < K , V > succ , Index < K , V > newSucc ) { Node < K , V > n = node ; newSucc . right = succ ; return n . value != _NULL && casRight ( succ , newSucc ) ; }
34659	public static MemoryNotificationInfo from ( CompositeData cd ) { if ( cd == _NULL ) { return _NULL ; } if ( cd instanceof MemoryNotifInfoCompositeData ) { return ( ( MemoryNotifInfoCompositeData ) cd ) . getMemoryNotifInfo ( ) ; } else { return new MemoryNotificationInfo ( cd ) ; } }
34662	public static DocumentBuilderProvider documentBuilderProvider ( int maxSize ) { return new PerThreadDocumentBuilderProvider ( new SafeDocumentBuilderProvider ( ) , maxSize ) ; }
34668	@ NonNull public static Interpolator rasterize ( int samples , Interpolator interpolator ) { return new RasterizeInterpolator ( samples , interpolator ) ; }
34683	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeBigDecimal ( java . math . BigDecimal x ) throws SQLException { attribs . add ( x ) ; }
34693	public void expandPath ( TreePath path ) { TreeModel model = getModel ( ) ; if ( path != _NULL && model != _NULL && ! model . isLeaf ( path . getLastPathComponent ( ) ) ) { setExpandedState ( path , _BOOL ) ; } }
34697	void reset ( final DN parentDN , final int numberOfEntries ) { this . parentDN = parentDN ; this . numberOfEntries = numberOfEntries ; entriesCount = _NUM ; currentEntryIsInitialized = _BOOL ; subTemplateIndex = _NUM ; nextEntry = _NULL ; }
34705	public void dispose ( ) { }
34710	@ Override public void removeAttribute ( String name ) { removeAttribute ( name , _BOOL ) ; }
34712	void flushBuffer ( ) throws IOException { se . flushBuffer ( ) ; }
34716	public void deleteMembership ( String userId , String groupId ) { }
34736	public void log ( Level level , Supplier < String > msgSupplier ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msgSupplier . get ( ) ) ; doLog ( lr ) ; }
34752	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeInt ( int x ) throws SQLException { attribs . add ( Integer . valueOf ( x ) ) ; }
34759	protected String paramString ( ) { String defaultCapableString = ( defaultCapable ? _CHAR _BOOL _CHAR : _CHAR _BOOL _CHAR ) ; return super . paramString ( ) + _CHAR , defaultCapable = _CHAR + defaultCapableString ; }
34785	protected final void cullCache ( ) { if ( maxCacheSize < _NUM ) { return ; } if ( cacheSize >= maxCacheSize * . _NUM ) { deleteExpiredEntries ( ) ; int desiredSize = ( int ) ( maxCacheSize * . _NUM ) ; while ( cacheSize > desiredSize ) { remove ( lastAccessedList . getLast ( ) . object ) ; } } }
34790	public Object peek ( int n ) { try { return ( stack . peek ( n ) ) ; } catch ( EmptyStackException e ) { log . warn ( _CHAR Empty stack ( returning _NULL ) _CHAR ) ; return ( _NULL ) ; } }
34792	public CMSSignedData generate ( String eContentType , CMSProcessable content , boolean encapsulate , Provider sigProvider ) throws NoSuchAlgorithmException , CMSException { return generate ( eContentType , content , encapsulate , sigProvider , _BOOL ) ; }
34793	public void logAddResponse ( AddOperation addOperation ) { }
34804	public void restoreOldSession ( ) { InternalSession oldSession = getReferencedOldSession ( ) ; if ( oldSession != _NULL ) { DEBUG . message ( _CHAR Restoring old session _CHAR ) ; setSession ( oldSession ) ; } }
34807	public boolean isNullSeperateMultipleValues ( ) { return isNullSeperateMultipleValues ; }
34815	public boolean isTerminalDataDependency ( ) { EventKind kind = getTrace ( ) . getKind ( getEventID ( ) ) ; return kind . isDefinition || kind . isArgument || kind . isInvocation || kind == EventKind . RETURN || kind . isInstantiation ; }
34838	public void endPrefixMapping ( String prefix ) throws SAXException { }
34845	public void remove ( Component comp ) { int oldCount = getComponentCount ( ) ; super . remove ( comp ) ; if ( oldCount == getComponentCount ( ) ) { getContentPane ( ) . remove ( comp ) ; } }
34849	public boolean isPolicyMappingInhibited ( ) { return policyMappingInhibited ; }
34857	@ Override public void onOptionsMenuClosed ( final Menu menu ) { delegate . onOptionsMenuClosed ( menu ) ; }
34867	public static boolean isXML11NameHighSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
34871	public void replaceTemplate ( ElemTemplate v , int i ) throws TransformerException { if ( _NULL == m_templates ) throw new ArrayIndexOutOfBoundsException ( ) ; replaceChild ( v , ( ElemTemplateElement ) m_templates . elementAt ( i ) ) ; m_templates . setElementAt ( v , i ) ; v . setStylesheet ( this ) ; }
34876	protected Object processKey ( String key ) { return argmap . get ( key ) ; }
34884	public static void copy ( byte [ ] input , Writer output , String encoding ) throws IOException { ByteArrayInputStream in = new ByteArrayInputStream ( input ) ; copy ( in , output , encoding ) ; }
34885	protected void notifyRowChanged ( ) throws SQLException { checkforRowSetInterface ( ) ; if ( listeners . isEmpty ( ) == _BOOL ) { RowSetEvent event = new RowSetEvent ( ( RowSet ) this ) ; for ( RowSetListener rsl : listeners ) { rsl . rowChanged ( event ) ; } } }
34890	public boolean equals ( Object object ) { return ( object != _NULL && object instanceof IntegerSyntax && value == ( ( IntegerSyntax ) object ) . value ) ; }
34896	public static PlainSASLBindRequest unmodifiablePlainSASLBindRequest ( final PlainSASLBindRequest request ) { if ( request instanceof UnmodifiablePlainSASLBindRequestImpl ) { return request ; } return new UnmodifiablePlainSASLBindRequestImpl ( request ) ; }
34901	public static void writeLines ( File file , String encoding , Collection < ? > lines ) throws IOException { writeLines ( file , encoding , lines , _NULL , _BOOL ) ; }
34903	public Object eval ( Reader reader ) throws ScriptException { return eval ( reader , context ) ; }
34914	protected int calculateNewPagerPosition ( int newActiveElement ) { newActiveElement ++ ; if ( newActiveElement <= _NUM ) newActiveElement = _NUM ; int pagerActiveElemCenterPosX = mPagerElementActiveSize / _NUM + newActiveElement * mPagerElementLeftMargin + ( newActiveElement - _NUM ) * ( mPagerElementNormalSize + mPagerElementRightMargin ) ; return mRootLayout . getWidth ( ) / _NUM - pagerActiveElemCenterPosX ; }
34927	public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { if ( _NULL != m_resultDTDHandler ) m_resultDTDHandler . unparsedEntityDecl ( name , publicId , systemId , notationName ) ; }
34934	public void truncate ( long length ) throws SerialException { isValid ( ) ; if ( length > len ) { throw new SerialException ( _CHAR Length more than what can be truncated _CHAR ) ; } else { len = length ; if ( len == _NUM ) { buf = new char [ ] { } ; } else { buf = ( this . getSubString ( _NUM , ( int ) len ) ) . toCharArray ( ) ; } } }
34941	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiMenuItemUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiMenuItemUI ) mui ) . uis , a ) ; }
34942	public void detach ( ) { if ( m_allowDetach ) { if ( m_axis > - _NUM ) m_iterator = _NULL ; super . detach ( ) ; } }
34955	protected void scrollDueToClickInTrack ( int dir ) { scrollByBlock ( dir ) ; }
34957	@ Override public NamingEnumeration < NameClassPair > list ( Name name ) throws NamingException { if ( log . isDebugEnabled ( ) ) { log . debug ( sm . getString ( _CHAR selectorContext . methodUsingName _CHAR , _CHAR list _CHAR , name ) ) ; } return getBoundContext ( ) . list ( parseName ( name ) ) ; }
34965	@ Override public void reset ( ) throws IOException { synchronized ( lock ) { super . reset ( ) ; lineNumber = markedLineNumber ; lastWasCR = markedLastWasCR ; } }
34979	private static String makeSwingPropertiesFilename ( ) { String sep = File . separator ; String javaHome = System . getProperty ( _CHAR java . home _CHAR ) ; if ( javaHome == _NULL ) { javaHome = _CHAR < java . home undefined > _CHAR ; } return javaHome + sep + _CHAR lib _CHAR + sep + _CHAR swing . properties _CHAR ; }
34983	protected boolean isWhitespace ( char ch ) { return ( ( ch == _CHAR ) || Character . isSpaceChar ( ch ) ) ; }
34996	private static final StringBuilder convertToAbbr ( StringBuilder sb , String name ) { sb . append ( Character . toUpperCase ( name . charAt ( _NUM ) ) ) ; sb . append ( name . charAt ( _NUM ) ) . append ( name . charAt ( _NUM ) ) ; return sb ; }
35001	protected void printBorder ( Graphics g ) { paintBorder ( g ) ; }
35004	public void config ( String msg ) { log ( Level . CONFIG , msg ) ; }
35009	protected ListSelectionListener createListSelectionListener ( ) { return _NULL ; }
35022	public boolean isRelative ( ) { return isRel ; }
35023	public synchronized void reset ( ) throws IOException { throw new IOException ( _CHAR mark / reset not supported _CHAR ) ; }
35042	public static Bar createEntity ( EntityManager em ) { Bar bar = new Bar ( ) ; bar . setValue ( DEFAULT_VALUE ) ; return bar ; }
35043	public X509Certificate generate ( PrivateKey key ) throws CertificateEncodingException , IllegalStateException , NoSuchAlgorithmException , SignatureException , InvalidKeyException { return generate ( key , ( SecureRandom ) _NULL ) ; }
35052	public synchronized boolean retainAll ( Collection < ? > c ) { return super . retainAll ( c ) ; }
35054	protected String paramString ( ) { String paintBorderString = ( paintBorder ? _CHAR _BOOL _CHAR : _CHAR _BOOL _CHAR ) ; String marginString = ( margin != _NULL ? margin . toString ( ) : _CHAR _CHAR ) ; return super . paramString ( ) + _CHAR , margin = _CHAR + marginString + _CHAR , paintBorder = _CHAR + paintBorderString ; }
35059	public Object clone ( ) { try { TabularDataSupport c = ( TabularDataSupport ) super . clone ( ) ; c . dataMap = new HashMap < Object , CompositeData > ( c . dataMap ) ; return c ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e . toString ( ) , e ) ; } }
35064	public static Foo fetchByUUID_G ( java . lang . String uuid , long groupId ) { return getPersistence ( ) . fetchByUUID_G ( uuid , groupId ) ; }
35077	public boolean isPermanent ( ) { return permanent ; }
35080	public void imageComplete ( int status ) { consumer . imageComplete ( status ) ; }
35087	public void addTab ( String title , Icon icon , Component component ) { insertTab ( title , icon , component , _NULL , pages . size ( ) ) ; }
35096	public long readLong ( ) throws SQLException { Long attrib = ( Long ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . longValue ( ) ; }
35100	public void pack ( ) { try { if ( isIcon ( ) ) { setIcon ( _BOOL ) ; } else if ( isMaximum ( ) ) { setMaximum ( _BOOL ) ; } } catch ( PropertyVetoException e ) { return ; } setSize ( getPreferredSize ( ) ) ; validate ( ) ; }
35103	private void shrinkSize ( ) { int i = longCount - _NUM ; while ( i >= _NUM && bits [ i ] == _NUM ) { -- i ; } this . longCount = i + _NUM ; }
35117	public synchronized void keyRelease ( int keycode ) { checkKeycodeArgument ( keycode ) ; peer . keyRelease ( keycode ) ; afterEvent ( ) ; }
35118	public void startAttribute ( String uri , String local ) { textBuf . setLength ( _NUM ) ; this . attNamespaceUri = uri ; this . attLocalName = local ; }
35126	public void dragOver ( DragSourceDragEvent dsde ) { }
35129	void startPeriodicLogSigner ( ) { if ( signTask == _NULL ) { signTask = new SignTask ( signInterval ) ; SystemTimer . getTimer ( ) . schedule ( signTask , new Date ( ( ( currentTimeMillis ( ) + signInterval ) / _NUM ) * _NUM ) ) ; } }
35139	public String findNamespaceURI ( String prefix ) { ArrayStack < String > stack = namespaces . get ( prefix ) ; if ( stack == _NULL ) { return ( _NULL ) ; } try { return stack . peek ( ) ; } catch ( EmptyStackException e ) { return ( _NULL ) ; } }
35140	public static boolean containsObjectClass ( final Entry entry , final ObjectClass objectClass ) { return containsObjectClass ( entry , Schema . getDefaultSchema ( ) , objectClass ) ; }
35154	public int hashCode ( ) { int hash = ( ignoreCase ? _NUM : _NUM ) ; try { NamingEnumeration < ? > all = getAll ( ) ; while ( all . hasMore ( ) ) { hash += all . next ( ) . hashCode ( ) ; } } catch ( NamingException e ) { } return hash ; }
35162	public int groupCount ( ) { return parentPattern . capturingGroupCount - _NUM ; }
35166	public void logUnbind ( UnbindOperation unbindOperation ) { }
35169	public PdfExtGState put ( PdfName key , PdfObject value ) { getPdfObject ( ) . put ( key , value ) ; return this ; }
35173	@ Override public void putAll ( Map < ? extends K , ? extends V > map ) { ensureCapacity ( map . size ( ) ) ; super . putAll ( map ) ; }
35190	public void queueThread ( WaitingThread wt ) { if ( wt == _NULL ) { throw new IllegalArgumentException ( _CHAR Waiting thread must not be _NULL . _CHAR ) ; } this . waitingThreads . add ( wt ) ; }
35202	public synchronized void removePropertyChangeListener ( PropertyChangeListener listener ) { if ( changeSupport != _NULL ) { changeSupport . removePropertyChangeListener ( listener ) ; } }
35204	public Object [ ] toArray ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return Arrays . copyOf ( queue , size ) ; } finally { lock . unlock ( ) ; } }
35205	public void addVetoableChangeListener ( VetoableChangeListener listener ) { if ( listener == _NULL ) { return ; } if ( listener instanceof VetoableChangeListenerProxy ) { VetoableChangeListenerProxy proxy = ( VetoableChangeListenerProxy ) listener ; addVetoableChangeListener ( proxy . getPropertyName ( ) , proxy . getListener ( ) ) ; } else { this . map . add ( _NULL , listener ) ; } }
35207	public boolean isCellEditable ( EventObject anEvent ) { if ( anEvent instanceof MouseEvent ) { return ( ( MouseEvent ) anEvent ) . getClickCount ( ) >= clickCountToStart ; } return _BOOL ; }
35213	public void animateIn ( ) { animate ( IN ) ; }
35231	@ Deprecated protected ActionListener createKeyboardHomeListener ( ) { return new KeyboardHomeHandler ( ) ; }
35239	public Object put ( Object key , Object value ) { internalPut ( ( CompositeData ) value ) ; return value ; }
35245	public static < T > Collection < T > unmodifiableCollection ( Collection < ? extends T > c ) { return new UnmodifiableCollection < > ( c ) ; }
35247	protected Object readResolve ( ) throws java . io . ObjectStreamException { synchronized ( AWTKeyStroke . class ) { if ( getClass ( ) . equals ( getAWTKeyStrokeClass ( ) ) ) { return getCachedStroke ( keyChar , keyCode , modifiers , onKeyRelease ) ; } } return this ; }
35248	public void openFileChooser ( ValueCallback < Uri > uploadMsg , String acceptType , String capture ) { openFileChooser ( uploadMsg , acceptType ) ; }
35252	public Set < String > stringPropertyNames ( ) { Hashtable < String , String > h = new Hashtable < > ( ) ; enumerateStringProperties ( h ) ; return h . keySet ( ) ; }
35272	public static < K , V > KeyedObjectPool < K , V > erodingPool ( final KeyedObjectPool < K , V > keyedPool ) { return erodingPool ( keyedPool , _NUM ) ; }
35273	public static String toString ( byte [ ] input , String encoding ) throws IOException { return new String ( input , Charsets . toCharset ( encoding ) ) ; }
35276	public void nodesWereRemoved ( TreeNode node , int [ ] childIndices , Object [ ] removedChildren ) { if ( node != _NULL && childIndices != _NULL ) { fireTreeNodesRemoved ( this , getPathToRoot ( node ) , childIndices , removedChildren ) ; } }
35284	protected < V > RunnableScheduledFuture < V > decorateTask ( Callable < V > callable , RunnableScheduledFuture < V > task ) { return task ; }
35293	public boolean removeAll ( Collection < ? > c ) { return al . removeAll ( c ) ; }
35303	public static AsfHeader readHeader ( final File file ) throws IOException { final InputStream stream = new FileInputStream ( file ) ; final AsfHeader result = FULL_READER . read ( Utils . readGUID ( stream ) , stream , _NUM ) ; stream . close ( ) ; return result ; }
35305	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
35313	public synchronized void invalidateLayout ( Container target ) { checkContainer ( target ) ; xChildren = _NULL ; yChildren = _NULL ; xTotal = _NULL ; yTotal = _NULL ; }
35315	public void addReferral ( Referral referral ) throws NameAlreadyExistsException { addReferral ( _NULL , referral ) ; }
35340	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiTabbedPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiTabbedPaneUI ) mui ) . uis , a ) ; }
35346	public SmAuthStatus release ( String parameter , String secret ) { return SmAuthStatus . SMAUTH_SUCCESS ; }
35347	public void visitEnd ( ) { if ( cv != _NULL ) { cv . visitEnd ( ) ; } }
35357	protected void processEvent ( AWTEvent e ) { if ( e instanceof TextEvent ) { processTextEvent ( ( TextEvent ) e ) ; return ; } super . processEvent ( e ) ; }
35364	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeBytes ( byte [ ] x ) throws SQLException { attribs . add ( x ) ; }
35374	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = input . getBytes ( Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
35378	public void joinGroup ( SocketAddress groupAddress , NetworkInterface netInterface ) throws IOException { checkJoinOrLeave ( groupAddress , netInterface ) ; impl . joinGroup ( groupAddress , netInterface ) ; }
35381	public static BooleanArgument noOpArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_DRYRUN ) . shortIdentifier ( OPTION_SHORT_DRYRUN ) . description ( INFO_DESCRIPTION_NOOP . get ( ) ) . buildArgument ( ) ; }
35386	public Set searchGroupContainers ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP_CONTAINER ) , getSearchFilter ( AMObject . GROUP_CONTAINER ) , wildcard , avPairs , level ) ; }
35399	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException { setHints ( _NULL ) ; return decodeInternal ( image ) ; }
35400	public static Attribute create ( String attributeName , String valueString ) { return create ( getSchema ( ) . getAttributeType ( attributeName ) , attributeName , valueString ) ; }
35405	private void handleFlawedDiscovery ( String logAdapterClassName , ClassLoader classLoader , Throwable discoveryFlaw ) { if ( isDiagnosticsEnabled ( ) ) { logDiagnostic ( _CHAR Could not instantiate Log _CHAR_CHAR_CHAR -- _CHAR + discoveryFlaw . getClass ( ) . getName ( ) + _CHAR : _CHAR + discoveryFlaw . getLocalizedMessage ( ) ) ; } if ( ! allowFlawedDiscovery ) { throw new LogConfigurationException ( discoveryFlaw ) ; } }
35419	private boolean hasTable ( ) { return ( table != _NULL ) ; }
35424	private void delayedExecute ( RunnableScheduledFuture < ? > task ) { if ( isShutdown ( ) ) reject ( task ) ; else { super . getQueue ( ) . add ( task ) ; if ( isShutdown ( ) && ! canRunInCurrentRunState ( task . isPeriodic ( ) ) && remove ( task ) ) task . cancel ( _BOOL ) ; else ensurePrestart ( ) ; } }
35441	@ Override public int read ( ) throws IOException { int b0 = fInputStream . read ( ) ; if ( b0 > _NUM ) { throw new IOException ( Localizer . getMessage ( _CHAR jsp . error . xml . invalidASCII _CHAR , Integer . toString ( b0 ) ) ) ; } return b0 ; }
35450	public void columnMarginChanged ( ChangeEvent e ) { resizeAndRepaint ( ) ; }
35453	public String toString ( boolean detail ) { if ( ! detail || resolvedObj == _NULL ) { return toString ( ) ; } else { return ( toString ( ) + _CHAR ; resolved object _CHAR + resolvedObj ) ; } }
35470	public void replaceRule ( Rule rule ) throws InvalidNameException { if ( rule . getName ( ) == _NULL ) { rule . setName ( _CHAR rule _CHAR + ServiceTypeManager . generateRandomName ( ) ) ; } rules . put ( rule . getName ( ) , rule ) ; }
35473	public void removeAllElements ( ) { if ( _NULL == m_map ) return ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { m_map [ i ] = _NULL ; } m_firstFree = _NUM ; }
35478	public Node item ( int index ) { runTo ( index ) ; return ( Node ) this . elementAt ( index ) ; }
35481	public void startDrag ( DragGestureEvent trigger , Cursor dragCursor , Transferable transferable , DragSourceListener dsl ) throws InvalidDnDOperationException { startDrag ( trigger , dragCursor , _NULL , _NULL , transferable , dsl , _NULL ) ; }
35499	public boolean isEmpty ( ) { return ( id3Tag == _NULL || id3Tag . isEmpty ( ) ) ; }
35502	@ NonNull public static Interpolator anticipateOvershoot ( int tension , int extraTension ) { return new AnticipateOvershootInterpolator ( tension , extraTension ) ; }
35504	public void close ( ) { dispose ( _BOOL ) ; }
35505	public String encode ( String pString , String charset ) throws UnsupportedEncodingException { if ( pString == _NULL ) { return _NULL ; } return new String ( encode ( pString . getBytes ( charset ) ) , StringEncodings . US_ASCII ) ; }
35509	public Node removeNamedItem ( String name ) { throw new DTMException ( DTMException . NO_MODIFICATION_ALLOWED_ERR ) ; }
35515	public void comment ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { flushPending ( ) ; if ( m_tracer != _NULL ) super . fireCommentEvent ( ch , start , length ) ; }
35519	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
35520	@ Override public void clearBuffer ( ) throws IOException { if ( writer == _NULL ) { this . clear ( ) ; } }
35529	public boolean selectInputMethod ( Locale locale ) { return _BOOL ; }
35534	public ShapelessRecipe removeIngredient ( int count , Material ingredient ) { return removeIngredient ( count , ingredient , _NUM ) ; }
35553	public void enter ( Thread threadId , MetricReference metricReference ) { HashMap < MetricReference , Object > attribs = getAttributes ( threadId ) ; attribs . put ( metricReference , System . currentTimeMillis ( ) ) ; }
35559	protected static Long convertIntegerToBucketingLong ( Integer integer ) { if ( integer == _NULL ) { return _NULL ; } if ( integer == Integer . MIN_VALUE ) { integer ++ ; } long toReturn = integer . longValue ( ) ; return toReturn ; }
35573	public synchronized void addPropertyChangeListener ( PropertyChangeListener listener ) { if ( changeSupport == _NULL ) { changeSupport = new SwingPropertyChangeSupport ( this ) ; } changeSupport . addPropertyChangeListener ( listener ) ; }
35579	public void warning ( String msg ) { getDebugServiceInstance ( ) . warning ( msg , _NULL ) ; }
35587	public static Response parseXML ( String xml ) throws SAMLException { Document doc = XMLUtils . toDOMDocument ( xml , SAMLUtils . debug ) ; Element root = doc . getDocumentElement ( ) ; return new Response ( root ) ; }
35597	private boolean isSolveConflict ( ReplicationDomainCfg cfg ) { return ! getBaseDN ( ) . equals ( DirectoryServer . getSchemaDN ( ) ) && cfg . isSolveConflicts ( ) ; }
35598	@ Override public Foo fetchByUUID_G ( String uuid , long groupId ) { return fetchByUUID_G ( uuid , groupId , _BOOL ) ; }
35611	public int hashCode ( ) { return this . getName ( ) . hashCode ( ) ; }
35619	public void println ( ) { newLine ( ) ; }
35623	protected void copy ( WebResource resource , InputStream is , ServletOutputStream ostream ) throws IOException { IOException exception = _NULL ; InputStream istream = new BufferedInputStream ( is , input ) ; exception = copyRange ( istream , ostream ) ; istream . close ( ) ; if ( exception != _NULL ) throw exception ; }
35630	private static ClassLoader createSystemClassLoader ( ) { String classPath = System . getProperty ( _CHAR java . class . path _CHAR , _CHAR . _CHAR ) ; return new PathClassLoader ( classPath , BootClassLoader . getInstance ( ) , _BOOL ) ; }
35650	public synchronized void paintIcon ( Component c , Graphics g , int x , int y ) { if ( imageObserver == _NULL ) { g . drawImage ( image , x , y , c ) ; } else { g . drawImage ( image , x , y , imageObserver ) ; } }
35668	public int read ( ByteBuffer buf , NioChannel socket , Selector selector , long readTimeout ) throws IOException { return read ( buf , socket , selector , readTimeout , _BOOL ) ; }
35672	T childValue ( T parentValue ) { throw new UnsupportedOperationException ( ) ; }
35673	public void printJobNoMoreEvents ( PrintJobEvent pje ) { }
35677	public void enable ( ) { try { loadDataState ( ) ; } catch ( Exception e ) { logger . error ( ERR_LOADING_GENERATION_ID , getBaseDN ( ) , stackTraceToSingleLineString ( e ) ) ; return ; } enableService ( ) ; disabled = _BOOL ; }
35683	private JapaneseDate withYear ( JapaneseEra era , int yearOfEra ) { int year = JapaneseChronology . INSTANCE . prolepticYear ( era , yearOfEra ) ; return with ( isoDate . withYear ( year ) ) ; }
35685	public boolean equals ( Object object ) { return super . equals ( object ) && object instanceof Copies ; }
35691	public void dragDropEnd ( DragSourceDropEvent dsde ) { }
35693	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
35694	public void paintScrollBarThumbBorder ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { }
35701	@ SuppressWarnings ( _CHAR unused _CHAR ) public void openFileChooser ( ValueCallback < Uri > uploadMsg , String acceptType , String capture ) { openFileChooser ( uploadMsg , acceptType ) ; }
35716	@ Override public String toString ( ) { return new StringBuilder ( ) . append ( this . getClass ( ) . getName ( ) ) . append ( _CHAR ( compositeType = _CHAR ) . append ( compositeType . toString ( ) ) . append ( _CHAR , contents = _CHAR ) . append ( contentString ( ) ) . append ( _CHAR ) _CHAR ) . toString ( ) ; }
35723	public short nextShort ( ) { return nextShort ( defaultRadix ) ; }
35725	public static Component createGlue ( ) { return new Filler ( new Dimension ( _NUM , _NUM ) , new Dimension ( _NUM , _NUM ) , new Dimension ( Short . MAX_VALUE , Short . MAX_VALUE ) ) ; }
35734	public final int readUnsignedByte ( ) throws IOException { int temp = this . read ( ) ; if ( temp < _NUM ) { throw new EOFException ( ) ; } return temp ; }
35736	public synchronized void removeItemListener ( ItemListener l ) { if ( l == _NULL ) { return ; } itemListener = AWTEventMulticaster . remove ( itemListener , l ) ; }
35738	public void updateUI ( ) { setUI ( ( ScrollPaneUI ) UIManager . getUI ( this ) ) ; }
35739	public boolean hasListeners ( String propertyName ) { return this . map . hasListeners ( propertyName ) ; }
35756	public static String quote ( long l ) { return quote ( Long . toString ( l ) ) ; }
35762	public void globalConfigChanged ( String serviceName , String version , String groupName , String serviceComponent , int changeType ) { }
35776	public static boolean inactive ( ActivationID id ) throws UnknownObjectException , ActivationException , RemoteException { return ActivationGroup . currentGroup ( ) . inactiveObject ( id ) ; }
35782	protected void propertyChange ( PropertyChangeEvent evt ) { super . propertyChange ( evt ) ; }
35785	public boolean hasMultiple ( ) { return multiple ; }
35791	void cancelEvent ( ) { notify . set ( _BOOL ) ; }
35792	public void enableInputMethods ( boolean enable ) { checkForEnableIM = _BOOL ; super . enableInputMethods ( enable ) ; }
35795	protected void firePropertyChange ( String propertyName , Object oldValue , Object newValue ) { super . firePropertyChange ( propertyName , oldValue , newValue ) ; if ( propertyName . equals ( EnableWindowBlit ) ) { if ( newValue != _NULL ) { setScrollMode ( BLIT_SCROLL_MODE ) ; } else { setScrollMode ( SIMPLE_SCROLL_MODE ) ; } } }
35826	public void attributeDecl ( String eName , String aName , String type , String valueDefault , String value ) throws SAXException { }
35838	public void reset ( ) { synchronized ( lock ) { count = _NUM ; } }
35849	public void addCondition ( Condition condition ) throws NameAlreadyExistsException { addCondition ( _NULL , condition ) ; }
35856	public static void writeSingleByte ( OutputStream out , int b ) throws IOException { byte [ ] buffer = new byte [ _NUM ] ; buffer [ _NUM ] = ( byte ) ( b & _NUM ) ; out . write ( buffer ) ; }
35862	public void configChanged ( ConfigurationActionEvent e ) { if ( IDPPUtils . debug . messageEnabled ( ) ) { IDPPUtils . debug . message ( _CHAR IDPPServiceManager : configChanged : _CHAR ) ; } try { initializeService ( ) ; } catch ( IDPPException ie ) { IDPPUtils . debug . error ( _CHAR IDPPServiceManager : configChanged : _CHAR + _CHAR Error in updating service configuration . '' , ie ) ; } }
35874	public synchronized void putAll ( Map < ? extends K , ? extends V > t ) { for ( Map . Entry < ? extends K , ? extends V > e : t . entrySet ( ) ) put ( e . getKey ( ) , e . getValue ( ) ) ; }
35876	private Object readResolve ( ) { if ( list instanceof RandomAccess ) { return new UnmodifiableRandomAccessList < E > ( list ) ; } return this ; }
35882	public AuthTargetMappingBuilder addMapping ( TokenTypeId tokenTypeId , String authIndexType , String authIndexValue ) { return addMapping ( tokenTypeId , authIndexType , authIndexValue , NULL_MAP ) ; }
35894	private boolean handleCallbacksInternally ( HttpServletRequest request , HttpServletResponse response , Callback [ ] callbacks ) throws RestAuthException { for ( Callback callback : callbacks ) { RestAuthCallbackHandler restAuthCallbackHandler = restAuthCallbackHandlerFactory . getRestAuthCallbackHandler ( callback . getClass ( ) ) ; if ( ! restAuthCallbackHandler . updateCallbackFromRequest ( request , response , callback ) ) { return _BOOL ; } } return _BOOL ; }
35896	public static URL toURL ( String filename ) throws MalformedURLException { URL url ; try { url = new URL ( filename ) ; } catch ( MalformedURLException e ) { url = new File ( filename ) . toURI ( ) . toURL ( ) ; } return url ; }
35897	static < K extends Comparable < K > , V > BlockLogReader < K , V > newReaderForTests ( final File file , final RandomAccessFile reader , final RecordParser < K , V > parser , int blockSize ) { return new BlockLogReader < > ( file , reader , parser , blockSize ) ; }
35906	protected final void openSessionForPublish ( String applicationId , List < String > permissions , SessionLoginBehavior behavior , int activityCode ) { openSession ( applicationId , permissions , behavior , activityCode , SessionAuthorizationType . PUBLISH ) ; }
35923	@ Override protected void installDefaults ( ) { LayoutManager layout = spinner . getLayout ( ) ; if ( layout == _NULL || layout instanceof UIResource ) { spinner . setLayout ( createLayout ( ) ) ; } updateStyle ( spinner ) ; }
35928	public ReplicationParameters replicationPortSource ( int port ) { this . replicationPortSource = port ; return this ; }
35937	public void paintScrollBarThumbBackground ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintBackground ( context , g , x , y , w , h , orientation ) ; }
35938	@ Override public void reset ( ) throws IOException { synchronized ( lock ) { super . reset ( ) ; lineNumber = markedLineNumber ; lastWasCR = markedLastWasCR ; } }
35956	public int readInt ( ) throws SQLException { Integer attrib = ( Integer ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . intValue ( ) ; }
35963	public void addVetoableChangeListener ( String propertyName , VetoableChangeListener listener ) { if ( listener == _NULL || propertyName == _NULL ) { return ; } listener = this . map . extract ( listener ) ; if ( listener != _NULL ) { this . map . add ( propertyName , listener ) ; } }
35988	public static double tan ( double a ) { return StrictMath . tan ( a ) ; }
36000	public boolean isValidYear ( int year ) { return ( day == _NUM && month == _NUM && Year . isLeap ( year ) == _BOOL ) == _BOOL ; }
36010	public Object [ ] toArray ( ) { return Arrays . copyOf ( elementData , size ) ; }
36027	protected < V > RunnableScheduledFuture < V > decorateTask ( Runnable runnable , RunnableScheduledFuture < V > task ) { return task ; }
36036	public static int [ ] toIntArray ( String str ) { return toIntArray ( str , _BOOL ) ; }
36037	public void refreshSession ( SSOToken token ) throws SSOException { try { getProvider ( token ) . refreshSession ( token ) ; } catch ( Exception e ) { debug . error ( _CHAR Error in refreshing the session from session server _CHAR ) ; throw new SSOException ( e ) ; } }
36038	void processDragMouseMoved ( DragSourceDragEvent dsde ) { DragSourceMotionListener dsml = motionListener ; if ( dsml != _NULL ) { dsml . dragMouseMoved ( dsde ) ; } }
36043	private String buildCacheKey ( String orgName , String policyName ) { String serviceComponent = CACHE_KEY_DELIMITER + PolicyManager . NAMED_POLICY + CACHE_KEY_DELIMITER + policyName ; return buildCacheKey ( PolicyManager . POLICY_SERVICE_NAME , PolicyManager . POLICY_VERSION , orgName , _CHAR default _CHAR , serviceComponent ) ; }
36058	public final short readShort ( ) throws IOException { int ch1 = in . read ( ) ; int ch2 = in . read ( ) ; if ( ( ch1 | ch2 ) < _NUM ) throw new EOFException ( ) ; return ( short ) ( ( ch1 << _NUM ) + ( ch2 << _NUM ) ) ; }
36060	public void addAttribute ( Attribute attribute , Collection < ? super ByteString > duplicateValues ) { setAttribute ( attribute , duplicateValues , _BOOL ) ; }
36084	public int viewToModel ( Point pt ) { return getUI ( ) . viewToModel ( this , pt ) ; }
36089	boolean useRESTProtocol ( ) { return useRESTProtocolFlag ; }
36101	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof MSISDNPrincipal ) ) { return _BOOL ; } MSISDNPrincipal that = ( MSISDNPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
36109	private byte [ ] calculateCMSKeyChecksum ( byte [ ] key ) { byte [ ] result = new byte [ _NUM ] ; sha1 . update ( key , _NUM , key . length ) ; sha1 . doFinal ( digest , _NUM ) ; System . arraycopy ( digest , _NUM , result , _NUM , _NUM ) ; return result ; }
36112	private void invokePostResponsePlugins ( boolean workflowExecuted ) { if ( workflowExecuted ) { List localOperations = ( List ) getAttachment ( Operation . LOCALBACKENDOPERATIONS ) ; if ( localOperations != _NULL ) { for ( Object localOp : localOperations ) { LocalBackendBindOperation localOperation = ( LocalBackendBindOperation ) localOp ; getPluginConfigManager ( ) . invokePostResponseBindPlugins ( localOperation ) ; } } else { } } }
36114	public static String toJavaSourceTypeFromTld ( String type ) { if ( type == _NULL || _CHAR void _CHAR . equals ( type ) ) { return _CHAR java . lang . Void . TYPE _CHAR ; } return type + _CHAR . class _CHAR ; }
36117	@ Override public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof SampleAuthPrincipal ) ) { return _BOOL ; } SampleAuthPrincipal that = ( SampleAuthPrincipal ) o ; if ( this . getName ( ) . equals ( that . getName ( ) ) ) { return _BOOL ; } return _BOOL ; }
36129	public Object [ ] toArray ( ) { return al . toArray ( ) ; }
36138	public void updateListLength ( int listLength ) { mListLength = listLength ; if ( mListLength == _NUM ) { mIncrementsHSVValue = _NUM ; } else { mIncrementsHSVValue = mTotalHsvValue / mListLength ; } generateStaticColorList ( ) ; }
36142	public boolean isInteractive ( ) { return this . interactive ; }
36144	public ProcessBuilder command ( List < String > command ) { if ( command == _NULL ) { throw new NullPointerException ( _CHAR command == _NULL _CHAR ) ; } this . command = command ; return this ; }
36156	protected JComponent createEditor ( ) { JComponent editor = spinner . getEditor ( ) ; maybeRemoveEditorBorder ( editor ) ; installEditorBorderListener ( editor ) ; editor . setInheritsPopupMenu ( _BOOL ) ; updateEditorAlignment ( editor ) ; return editor ; }
36167	public boolean contains ( final AbstractInsnNode insn ) { AbstractInsnNode i = first ; while ( i != _NULL && i != insn ) { i = i . next ; } return i != _NULL ; }
36168	protected final void resolveClass ( Class < ? > clazz ) { }
36172	public void write ( ByteArrayOutputStream tagBuffer ) { if ( ! ( ( PairedTextEncodedStringNullTerminated ) getObject ( DataTypes . OBJ_TEXT ) ) . canBeEncoded ( ) ) { this . setTextEncoding ( TextEncoding . UTF_16 ) ; } super . write ( tagBuffer ) ; }
36173	public boolean equals ( Object obj ) { return obj != _NULL && obj instanceof DocFlavor && getStringValue ( ) . equals ( ( ( DocFlavor ) obj ) . getStringValue ( ) ) ; }
36180	public int compare ( File f1 , File f2 ) { return f1 . getPath ( ) . compareTo ( f2 . getPath ( ) ) ; }
36184	public static void fill ( float [ ] a , int fromIndex , int toIndex , float val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
36186	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof PrinterMoreInfo ) ; }
36191	public static Request parseXML ( String xml ) throws SAMLException { Document doc = XMLUtils . toDOMDocument ( xml , FSUtils . debug ) ; Element root = doc . getDocumentElement ( ) ; return new FSRequest ( root ) ; }
36195	public synchronized void dragEnter ( DropTargetDragEvent dtde ) { isDraggingInside = _BOOL ; if ( ! active ) return ; if ( dtListener != _NULL ) { dtListener . dragEnter ( dtde ) ; } else dtde . getDropTargetContext ( ) . setTargetActions ( DnDConstants . ACTION_NONE ) ; initializeAutoscrolling ( dtde . getLocation ( ) ) ; }
36209	public Collection values ( ) { if ( values == _NULL ) values = new SynchronizedCollection ( new ValueCollection ( ) , this ) ; return values ; }
36210	public void incrementLocalSequenceNumber ( ) { ++ this . localSequenceNumber ; }
36214	protected static Map convertJAXBToAttrMap ( String attrName , Object jaxbObj ) throws JAXBException { String xmlString = convertJAXBToString ( jaxbObj ) ; Map attrs = new HashMap ( ) ; Set values = new HashSet ( ) ; values . add ( xmlString ) ; attrs . put ( attrName , values ) ; return attrs ; }
36217	public static int findMSBSet ( int value ) { int numDigits = _NUM ; while ( value != _NUM ) { value >> >= _NUM ; ++ numDigits ; } return numDigits ; }
36233	public static void writeSingleByte ( OutputStream out , int b ) throws IOException { byte [ ] buffer = new byte [ _NUM ] ; buffer [ _NUM ] = ( byte ) ( b & _NUM ) ; out . write ( buffer ) ; }
36237	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; s . writeObject ( SerializationTester . test ( flavorMap ) ? flavorMap : _NULL ) ; DnDEventMulticaster . save ( s , dragSourceListenerK , listener ) ; DnDEventMulticaster . save ( s , dragSourceMotionListenerK , motionListener ) ; s . writeObject ( _NULL ) ; }
36255	private void copyChunk ( final GUID guid , final InputStream source , final OutputStream destination ) throws IOException { final long chunkSize = Utils . readUINT64 ( source ) ; destination . write ( guid . getBytes ( ) ) ; Utils . writeUINT64 ( chunkSize , destination ) ; Utils . copy ( source , destination , chunkSize - _NUM ) ; }
36257	boolean excluded ( int elemIndex ) { return ( exclusions != _NULL ) && exclusions . get ( elem . getIndex ( ) ) ; }
36292	public boolean containsKey ( Object key ) { checkKey ( key ) ; return map . containsKey ( key ) ; }
36293	public boolean isBigEndian ( ) { return bigEndian ; }
36308	public SSOToken createSSOToken ( String tokenId , boolean invokedByAuth ) throws SSOException , UnsupportedOperationException { return createSSOToken ( tokenId , invokedByAuth , _BOOL ) ; }
36313	public int enumerate ( ThreadGroup [ ] groups ) { return enumerate ( groups , _BOOL ) ; }
36318	public static Cookie newCookie ( String name , String value , String path , String domain ) { return newCookie ( name , value , defAge , path , domain ) ; }
36325	public void copyInto ( Object anArray [ ] ) { delegate . copyInto ( anArray ) ; }
36328	private static boolean isLineWrapChar ( char c ) { return Character . isWhitespace ( c ) || _CHAR ( [ _CHAR . indexOf ( c ) >= _NUM ; }
36345	private final static boolean _validBackRef ( int index ) { return ( index & _NUM ) < _NUM ; }
36348	public static boolean isSurrogatePair ( String text , int idx ) { return ! ( idx < _NUM || idx > text . length ( ) - _NUM ) && isSurrogateHigh ( text . charAt ( idx ) ) && isSurrogateLow ( text . charAt ( idx + _NUM ) ) ; }
36349	public static void removeUserDefinedFormatter ( String formatString ) throws IllegalStateException { checkState ( ) ; INSTANCE . timeInfo . userDefinedFormatters . remove ( new SimpleDateFormat ( formatString ) ) ; INSTANCE . timeInfo . userDefinedTimeStrings . remove ( formatString ) ; }
36350	public void insertRow ( int row , Vector rowData ) { dataVector . insertElementAt ( rowData , row ) ; justifyRows ( row , row + _NUM ) ; fireTableRowsInserted ( row , row ) ; }
36362	public void logSearchRequest ( SearchOperation searchOperation ) { }
36363	protected String paramString ( ) { String orientationString = ( orientation == HORIZONTAL ? _CHAR HORIZONTAL _CHAR : _CHAR VERTICAL _CHAR ) ; return super . paramString ( ) + _CHAR , orientation = _CHAR + orientationString ; }
36375	protected void checkInterruptStatus ( ) throws IOException { if ( Thread . interrupted ( ) ) { throw new IOException ( sm . getString ( _CHAR channel . nio . interrupted _CHAR ) ) ; } }
36379	public Object eval ( String script , Bindings bindings ) throws ScriptException { ScriptContext ctxt = getScriptContext ( bindings ) ; return eval ( script , ctxt ) ; }
36400	public boolean equals ( Object obj ) { return ( obj instanceof TextLayout ) && equals ( ( TextLayout ) obj ) ; }
36413	public void replaceReferral ( String referralName , Referral referral ) throws NameNotFoundException { if ( ! referrals . containsKey ( referralName ) ) { String [ ] objs = { referralName } ; throw ( new NameNotFoundException ( ResBundleUtils . rbName , _CHAR name_not_present _CHAR , objs , referralName , PolicyException . REFERRAL_COLLECTION ) ) ; } referrals . put ( referralName , referral ) ; }
36417	public void updateUI ( ) { setUI ( ( SplitPaneUI ) UIManager . getUI ( this ) ) ; revalidate ( ) ; }
36420	public final int readUnsignedByte ( ) throws IOException { int ch = in . read ( ) ; if ( ch < _NUM ) throw new EOFException ( ) ; return ch ; }
36421	protected static void addResource ( Context context , Resource annotation ) { addResource ( context , annotation , _NULL , _NULL ) ; }
36423	protected void delegateFocus ( MouseEvent e ) { if ( comboBox . isEditable ( ) ) { Component comp = comboBox . getEditor ( ) . getEditorComponent ( ) ; if ( ( ! ( comp instanceof JComponent ) ) || ( ( JComponent ) comp ) . isRequestFocusEnabled ( ) ) { comp . requestFocus ( ) ; } } else if ( comboBox . isRequestFocusEnabled ( ) ) { comboBox . requestFocus ( ) ; } }
36426	protected static Long convertTimepointToBucketingLong ( Date timepointToBeConverted ) { if ( timepointToBeConverted == _NULL ) { return _NULL ; } Long toReturn = timepointToBeConverted . getTime ( ) - PrimaryIndexBucketGeneratorImpl . TIMEPOINT_MIN ; if ( toReturn < _NUM ) { return _NUM ; } else if ( toReturn > PrimaryIndexBucketGeneratorImpl . TIMEPOINT_MAX ) { return PrimaryIndexBucketGeneratorImpl . TIMEPOINT_MAX ; } else { return toReturn ; } }
36435	@ Override public Set < K > keySet ( ) { Set < K > ks = keySet ; return ( ks != _NULL ) ? ks : ( keySet = new KeySet ( ) ) ; }
36439	public void fireIndexedPropertyChange ( String propertyName , int index , boolean oldValue , boolean newValue ) { if ( oldValue != newValue ) { fireIndexedPropertyChange ( propertyName , index , Boolean . valueOf ( oldValue ) , Boolean . valueOf ( newValue ) ) ; } }
36464	public static char [ ] toCharArray ( InputStream is , Charset encoding ) throws IOException { CharArrayWriter output = new CharArrayWriter ( ) ; copy ( is , output , encoding ) ; return output . toCharArray ( ) ; }
36471	public static void fill ( byte [ ] a , int fromIndex , int toIndex , byte val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
36477	public static void registerEditorKitForContentType ( String type , String classname , ClassLoader loader ) { getKitTypeRegistry ( ) . put ( type , classname ) ; getKitLoaderRegistry ( ) . put ( type , loader ) ; getKitRegisty ( ) . remove ( type ) ; }
36483	@ SuppressWarnings ( _CHAR unused _CHAR ) public void openFileChooser ( ValueCallback < Uri > uploadMsg , String acceptType , String capture ) { openFileChooser ( uploadMsg , acceptType ) ; }
36486	@ Override public Name composeName ( Name name , Name prefix ) throws NamingException { Name prefixClone = ( Name ) prefix . clone ( ) ; return prefixClone . addAll ( name ) ; }
36510	public Collection values ( ) { if ( values == _NULL ) { values = new SynchronizedCollection ( new ValueCollection ( ) , this ) ; } return values ; }
36512	public W3CEndpointReferenceBuilder serviceName ( QName serviceName ) { this . serviceName = serviceName ; return this ; }
36531	public boolean hasMoreTokens ( ) { newPosition = skipDelimiters ( currentPosition ) ; return ( newPosition < maxPosition ) ; }
36538	public String readLine ( ) throws IOException { return readLine ( _BOOL ) ; }
36550	public void unread ( int c ) throws IOException { synchronized ( lock ) { ensureOpen ( ) ; if ( pos == _NUM ) throw new IOException ( _CHAR Pushback buffer overflow _CHAR ) ; buf [ -- pos ] = ( char ) c ; } }
36558	@ NonNull public static Interpolator path ( int controlX1 , int controlY1 , int controlX2 , int controlY2 ) { return PathInterpolatorCompat . create ( controlX1 , controlY1 , controlX2 , controlY2 ) ; }
36562	public IOException ioException ( ) { return lastException ; }
36570	public void registerKeyboardAction ( ActionListener anAction , KeyStroke aKeyStroke , int aCondition ) { registerKeyboardAction ( anAction , _NULL , aKeyStroke , aCondition ) ; }
36574	private static boolean isNameFormatMatching ( String desiredNameFormat , String availableNameFormat ) { return desiredNameFormat == _NULL || DEFAULT_ATTRIBUTE_NAME_FORMAT . equals ( desiredNameFormat ) || desiredNameFormat . equals ( availableNameFormat ) ; }
36577	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
36587	public UpgradeParameters isIgnoreErrors ( boolean ignore ) { ignoreErrors = ignore ; return this ; }
36593	@ Override public boolean shouldShowRequestPermissionRationale ( @ NonNull final String permission ) { return delegate . shouldShowRequestPermissionRationale ( permission ) ; }
36598	public void applyDismissing ( ViewPropertyAnimator animator , float currValue , float endValue , float velocity , float maxDistance ) { AnimatorProperties properties = getDismissingProperties ( currValue , endValue , velocity , maxDistance ) ; animator . setDuration ( properties . duration ) ; animator . setInterpolator ( properties . interpolator ) ; }
36602	public String toString ( ) { return toString ( _BOOL , _BOOL ) ; }
36610	public Response priorResponse ( ) { return priorResponse ; }
36627	public XMLElement newElement ( String name , String value ) throws Exception { return newElement ( name , value , _NULL ) ; }
36639	public boolean visitPredicate ( ExpressionOwner owner , Expression pred ) { boolean savedIsSame = m_isSameContext ; m_isSameContext = _BOOL ; pred . callVisitors ( owner , this ) ; m_isSameContext = savedIsSame ; return _BOOL ; }
36652	public boolean isSignificant ( ) { Enumeration cursor = edits . elements ( ) ; while ( cursor . hasMoreElements ( ) ) { if ( ( ( UndoableEdit ) cursor . nextElement ( ) ) . isSignificant ( ) ) { return _BOOL ; } } return _BOOL ; }
36659	public void removeNotify ( ) { JRootPane root = SwingUtilities . getRootPane ( this ) ; if ( root != _NULL && root . getDefaultButton ( ) == this ) { root . setDefaultButton ( _NULL ) ; } super . removeNotify ( ) ; }
36662	public static void register ( Class < ? > clazz ) { checkInit ( ) ; TYPE_CENTER . register ( clazz ) ; }
36663	public void decrement ( ) { int counterVal = counter . decrementAndGet ( ) ; if ( counterVal == _NUM ) { if ( _NULL != resourceCallback ) { resourceCallback . onTransitionToIdle ( ) ; } } if ( counterVal < _NUM ) { throw new IllegalArgumentException ( _CHAR Counter has been corrupted ! _CHAR ) ; } }
36667	public void severe ( Supplier < String > msgSupplier ) { log ( Level . SEVERE , msgSupplier ) ; }
36668	public boolean isDoubleBufferingEnabled ( ) { return doubleBufferingEnabled ; }
36676	final Node < E > succ ( Node < E > p ) { Node < E > next = p . next ; return ( p == next ) ? head : next ; }
36677	private static void fixOverrideNames ( MappedMember mm , MappedMember override ) { for ( MappedMember mm2 : mm . getOverrides ( ) ) { fixOverrideNames ( mm2 , override ) ; } mm . setNewName ( override . getNewName ( ) ) ; }
36681	protected boolean handleDirectory ( File directory , int depth , Collection < T > results ) throws IOException { return _BOOL ; }
36690	public static void enableVerboseConsoleLoggingForOpenDJ ( ) { enableConsoleLoggingForOpenDJ ( Level . ALL , System . out , System . err ) ; }
36692	public static Message sendRequest ( Message req , String connectTo , String certAlias ) throws SOAPBindingException , SOAPFaultException { return sendRequest ( req , connectTo , certAlias , _NULL ) ; }
36697	public boolean isRepeats ( ) { return repeats ; }
36700	public void endElement ( String name ) throws SAXException { }
36710	private void createSunXmlKeyValFiles ( SMSFlatFileTreeNode node , Set sunxmlkeyvals ) throws SMSException { if ( ( sunxmlkeyvals != _NULL ) && ! sunxmlkeyvals . isEmpty ( ) ) { createLookupFiles ( node , SMSEntry . ATTR_XML_KEYVAL , sunxmlkeyvals ) ; } }
36725	@ Override public int read ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; int ch = readChar ( ) ; if ( lastWasCR && ch == _CHAR ) { ch = readChar ( ) ; } lastWasCR = _BOOL ; return ch ; } }
36729	public void checkNode ( Node node ) throws TransformerException { }
36735	public synchronized Object send ( String functionName , Object params [ ] , String cookies ) throws Exception { return ( send ( encodeMessage ( functionName , params ) , cookies ) ) ; }
36740	@ Override public IndexCreatedEvent update ( IndexCreatedEvent entity ) { BoundStatement bs = new BoundStatement ( updateStmt ) ; bindUpdate ( bs , entity ) ; if ( entity . isDoneIndexing ( ) ) { markDone ( entity . getUuid ( ) ) ; } else { markIndexing ( entity . getUuid ( ) ) ; } getSession ( ) . execute ( bs ) ; return entity ; }
36760	public static TitledBorder createTitledBorder ( Border border ) { return new TitledBorder ( border ) ; }
36762	public boolean expectMoreValues ( ) { if ( ++ _index == _expEntryCount ) { return _BOOL ; } return _BOOL ; }
36773	@ Override public int read ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; if ( pos != count ) { return str . charAt ( pos ++ ) ; } return - _NUM ; } }
36774	protected void adjustVisibility ( Rectangle nloc ) { if ( component == _NULL ) { return ; } if ( SwingUtilities . isEventDispatchThread ( ) ) { component . scrollRectToVisible ( nloc ) ; } else { SwingUtilities . invokeLater ( new SafeScroller ( nloc ) ) ; } }
36775	public org . omg . CORBA . TypeCode _type ( ) { return org . omg . CORBA . ServiceInformationHelper . type ( ) ; }
36780	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiTableUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiTableUI ) mui ) . uis , a ) ; }
36786	public JToolTip createToolTip ( ) { JToolTip tip = new JToolTip ( ) ; tip . setComponent ( this ) ; return tip ; }
36801	public final V accumulateAndGet ( V x , BinaryOperator < V > accumulatorFunction ) { V prev , next ; do { prev = get ( ) ; next = accumulatorFunction . apply ( prev , x ) ; } while ( ! compareAndSet ( prev , next ) ) ; return next ; }
36808	protected SmallAttributeSet createSmallAttributeSet ( AttributeSet a ) { return new SmallAttributeSet ( a ) ; }
36809	public void startDrag ( Cursor dragCursor , Transferable transferable ) throws InvalidDnDOperationException { dragSource . startDrag ( this , dragCursor , transferable , _NULL ) ; }
36811	public void close ( ) throws java . io . IOException { flushBuffer ( ) ; m_os . close ( ) ; }
36812	protected void completeEditing ( ) { if ( tree . getInvokesStopCellEditing ( ) && stopEditingInCompleteEditing && editingComponent != _NULL ) { cellEditor . stopCellEditing ( ) ; } completeEditing ( _BOOL , _BOOL , _BOOL ) ; }
36823	public synchronized void reset ( ) throws IOException { in . reset ( ) ; }
36835	protected void rolloverColumnUpdated ( int oldColumn , int newColumn ) { }
36851	public void pushPairCurrentMatched ( ElemTemplateElement template , int child ) { m_currentMatchTemplates . push ( template ) ; m_currentMatchedNodes . push ( child ) ; }
36865	public static void invalidateSession ( Object session , HttpServletRequest request , HttpServletResponse response , String protocol ) throws SessionException { SessionProvider provider = SessionManager . getProvider ( ) ; if ( ! isMultipleProtocolSession ( session , protocol ) ) { provider . invalidateSession ( session , request , response ) ; } else { removeFederationProtocol ( session , protocol ) ; } }
36867	@ Override @ Deprecated public void removeValue ( String name ) { removeAttribute ( name ) ; }
36868	protected DropTargetContext createDropTargetContext ( ) { return new DropTargetContext ( this ) ; }
36873	protected File resolveFile ( final String s ) { if ( getProject ( ) == _NULL ) { return FileUtils . getFileUtils ( ) . resolveFile ( _NULL , s ) ; } else { return FileUtils . getFileUtils ( ) . resolveFile ( getProject ( ) . getBaseDir ( ) , s ) ; } }
36883	public static String showInputDialog ( Object message , Object initialSelectionValue ) { return showInputDialog ( _NULL , message , initialSelectionValue ) ; }
36904	public void printStackTrace ( PrintWriter pw ) { pw . println ( fetchStackTrace ( ) ) ; }
36918	public void _release ( ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
36922	@ Override public void onTokenAvailable ( Context context , String token , boolean updated ) { Core . registerDeviceToken ( context , token ) ; Log . d ( _CHAR HSRL _CHAR , _CHAR New token available , setting it to helpshift _CHAR ) ; }
36928	@ Override public String toString ( ) { return super . toString ( ) + _CHAR : connectionId = _CHAR + connectionId ; }
36967	public void write ( int b ) throws IOException { if ( sink == _NULL ) { throw new IOException ( _CHAR Pipe not connected _CHAR ) ; } sink . receive ( b ) ; }
36982	protected boolean identityEquals ( Identity identity ) { if ( ! name . equalsIgnoreCase ( identity . name ) ) return _BOOL ; if ( ( publicKey == _NULL ) ^ ( identity . publicKey == _NULL ) ) return _BOOL ; if ( publicKey != _NULL && identity . publicKey != _NULL ) if ( ! publicKey . equals ( identity . publicKey ) ) return _BOOL ; return _BOOL ; }
36983	static Class lookUpFactoryClass ( String factoryId ) throws ConfigurationError { return lookUpFactoryClass ( factoryId , _NULL , _NULL ) ; }
36985	public void removeActionListener ( ActionListener l ) { if ( ( l != _NULL ) && ( getAction ( ) == l ) ) { setAction ( _NULL ) ; } else { listenerList . remove ( ActionListener . class , l ) ; } }
36990	public boolean hasNext ( ) { ensureOpen ( ) ; saveState ( ) ; while ( ! sourceClosed ) { if ( hasTokenInBuffer ( ) ) return revertState ( _BOOL ) ; readInput ( ) ; } boolean result = hasTokenInBuffer ( ) ; return revertState ( result ) ; }
36992	private Object readResolve ( ) { return ( list instanceof RandomAccess ? new SynchronizedRandomAccessList < > ( list ) : this ) ; }
36994	public static BigInteger probablePrime ( int bitLength , Random rnd ) { if ( bitLength < _NUM ) throw new ArithmeticException ( _CHAR bitLength < _NUM _CHAR ) ; return ( bitLength < SMALL_PRIME_THRESHOLD ? smallPrime ( bitLength , DEFAULT_PRIME_CERTAINTY , rnd ) : largePrime ( bitLength , DEFAULT_PRIME_CERTAINTY , rnd ) ) ; }
36995	public SmAuthStatus init ( String parameter , String secret ) { try { logw = new PrintStream ( new FileOutputStream ( _CHAR / tmp / FMAuth _CHAR ) ) ; logw . println ( _CHAR RYA : init _CHAR ) ; } catch ( Exception ex ) { } return SmAuthStatus . SMAUTH_SUCCESS ; }
36996	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
36999	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; if ( Constants . ELEMNAME_SORT == type ) { setSortElem ( ( ElemSort ) newChild ) ; return newChild ; } else return super . appendChild ( newChild ) ; }
37002	public static void serialize ( XMPMetaImpl xmp , OutputStream output , SerializeOptions options ) throws XMPException { options = options != _NULL ? options : new SerializeOptions ( ) ; if ( options . getSort ( ) ) { xmp . sort ( ) ; } new XMPSerializerRDF ( ) . serialize ( xmp , output , options ) ; }
37006	public void endDocument ( ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . endDocument ( ) ; }
37007	public final byte readByte ( ) throws IOException { int ch = in . read ( ) ; if ( ch < _NUM ) throw new EOFException ( ) ; return ( byte ) ( ch ) ; }
37009	public synchronized void readRequest ( ) { if ( currentWriters == _NUM && writerLocks . size ( ) == _NUM ) { ++ currentReaders ; } else { ++ queuedReaders ; try { wait ( ) ; } catch ( InterruptedException e ) { } } }
37019	@ Override public void println ( ) throws IOException { newLine ( ) ; }
37022	public void globalConfigChanged ( String serviceName , String version , String groupName , String componentName , int type ) { organizationConfigChanged ( serviceName , version , _NULL , groupName , componentName , type ) ; }
37033	public void sizeWidthToFit ( ) { if ( headerRenderer == _NULL ) { return ; } Component c = headerRenderer . getTableCellRendererComponent ( _NULL , getHeaderValue ( ) , _BOOL , _BOOL , _NUM , _NUM ) ; setMinWidth ( c . getMinimumSize ( ) . width ) ; setMaxWidth ( c . getMaximumSize ( ) . width ) ; setPreferredWidth ( c . getPreferredSize ( ) . width ) ; setWidth ( getPreferredWidth ( ) ) ; }
37038	public static Calendar fromUnixTime ( long unixTime ) { return fromUnixTime ( unixTime , TimeUnit . SECONDS ) ; }
37065	public synchronized long size ( ) { return size ; }
37068	public PermissionCollection newPermissionCollection ( ) { return new KrbDelegationPermissionCollection ( ) ; }
37074	public boolean isSubregion ( ) { return subregion ; }
37075	public void parse ( List < CMapObject > ls ) throws java . io . IOException { ls . clear ( ) ; CMapObject ob ; while ( ( ob = readObject ( ) ) != _NULL ) { ls . add ( ob ) ; if ( ob . isLiteral ( ) ) break ; } }
37081	public boolean readBoolean ( ) throws SQLException { Boolean attrib = ( Boolean ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _BOOL : attrib . booleanValue ( ) ; }
37083	public void addPropertyChangeListener ( String name , PropertyChangeListener pcl ) { pcSupport . addPropertyChangeListener ( name , pcl ) ; }
37086	public AMSearchResults searchOrganizationalUnits ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ORGANIZATIONAL_UNIT ) , getSearchFilter ( AMObject . ORGANIZATIONAL_UNIT ) , wildcard , avPairs , searchControl ) ; }
37092	public void forceTermination ( ) { final Phaser root = this . root ; long s ; while ( ( s = root . state ) >= _NUM ) { if ( UNSAFE . compareAndSwapLong ( root , stateOffset , s , s | TERMINATION_BIT ) ) { releaseWaiters ( _NUM ) ; releaseWaiters ( _NUM ) ; return ; } } }
37105	public String jmxExecute ( MBeanServerConnection jmxServerConnection ) throws Exception { if ( ( jmxServerConnection == _NULL ) ) { throw new BuildException ( _CHAR Must open a connection ! _CHAR ) ; } else if ( isEcho ( ) ) { handleOutput ( _CHAR JMX Connection ref = _CHAR + ref + _CHAR is open ! _CHAR ) ; } return _NULL ; }
37114	Shape adjustPaintRegion ( Shape a ) { return a ; }
37115	public int read ( byte [ ] b ) throws IOException { return read ( b , _NUM , b . length ) ; }
37118	@ Deprecated protected ActionListener createKeyboardEndListener ( ) { return new KeyboardEndHandler ( ) ; }
37128	public synchronized void dropActionChanged ( DropTargetDragEvent dtde ) { if ( ! active ) return ; if ( dtListener != _NULL ) dtListener . dropActionChanged ( dtde ) ; updateAutoscroll ( dtde . getLocation ( ) ) ; }
37129	public static SessionRequest parseXML ( String xml ) { SessionRequestParser parser = new SessionRequestParser ( xml ) ; return parser . parseXML ( ) ; }
37130	public String toString ( ) { if ( attrs . size ( ) == _NUM ) { return ( _CHAR No attributes _CHAR ) ; } else { return attrs . toString ( ) ; } }
37138	public boolean equals ( Object o ) { if ( o == _NULL ) return _BOOL ; if ( this == o ) return _BOOL ; if ( ! ( o instanceof AuthPrincipal ) ) return _BOOL ; AuthPrincipal that = ( AuthPrincipal ) o ; if ( this . getName ( ) . equals ( that . getName ( ) ) ) return _BOOL ; return _BOOL ; }
37139	protected ListDataListener createListDataListener ( ) { return getHandler ( ) ; }
37152	public String [ ] findAuthRoles ( ) { return ( authRoles ) ; }
37153	public boolean isReferralPolicy ( ) { return referralPolicy ; }
37155	public Period minusYears ( long yearsToSubtract ) { return ( yearsToSubtract == Long . MIN_VALUE ? plusYears ( Long . MAX_VALUE ) . plusYears ( _NUM ) : plusYears ( - yearsToSubtract ) ) ; }
37170	public boolean equals ( Object obj ) { if ( obj instanceof Point ) { Point pt = ( Point ) obj ; return ( x == pt . x ) && ( y == pt . y ) ; } return super . equals ( obj ) ; }
37175	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiPopupMenuUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiPopupMenuUI ) mui ) . uis , a ) ; }
37189	@ Override public boolean removeOperationInProgress ( int messageID ) { return _BOOL ; }
37195	public synchronized void removeTextListener ( TextListener l ) { if ( l == _NULL ) { return ; } textListener = AWTEventMulticaster . remove ( textListener , l ) ; }
37216	@ Override public Foo fetchByUUID_G ( String uuid , long groupId ) { return fetchByUUID_G ( uuid , groupId , _BOOL ) ; }
37229	public static void fill ( short [ ] a , int fromIndex , int toIndex , short val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
37231	public BindOperation processSimpleBind ( DN bindDN , ByteString password ) { return processSimpleBind ( bindDN , password , _NULL ) ; }
37254	public static String defaultPCCreateDuringOrgConfig ( ) { initialize ( ) ; return ( defaultPCCreateDuringOrgConfig ) ; }
37262	public StateInteractive mouse_dragged ( PlaPointFloat p_point ) { return this ; }
37265	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ i = _CHAR + ( index ) + _CHAR ] _CHAR ; }
37272	public void removeVetoableChangeListener ( String propertyName , VetoableChangeListener listener ) { if ( listener == _NULL || propertyName == _NULL ) { return ; } listener = this . map . extract ( listener ) ; if ( listener != _NULL ) { this . map . remove ( propertyName , listener ) ; } }
37274	public String toString ( ) { String orig = super . toString ( ) ; if ( unexecs != _NULL ) { orig += ( _CHAR First unexecuted modification : _CHAR + unexecs [ _NUM ] . toString ( ) ) ; } return orig ; }
37275	public static Reflect on ( String name , ClassLoader classLoader ) throws ReflectException { return on ( forName ( name , classLoader ) ) ; }
37277	public LoginConfiguration sessionId ( String sessionId ) { if ( sessionId != _NULL ) { this . sessionId = sessionId ; } return this ; }
37278	public void paintToolBarDragWindowBackground ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintBackground ( context , g , x , y , w , h , orientation ) ; }
37283	public int size ( ) { synchronized ( lock ) { return count ; } }
37284	public synchronized void newPixels ( int [ ] newpix , ColorModel newmodel , int offset , int scansize ) { this . pixels = newpix ; this . model = newmodel ; this . pixeloffset = offset ; this . pixelscan = scansize ; newPixels ( ) ; }
37316	public String toString ( ) { if ( myToString == _NULL ) { myToString = this . getClass ( ) . getName ( ) + _CHAR ( name = _CHAR + getTypeName ( ) + _CHAR ) _CHAR ; } return myToString ; }
37327	public boolean isDeleteAllowed ( ServerManagedObject < ? > managedObject , Collection < LocalizableMessage > unacceptableReasons ) throws ConfigException { return _BOOL ; }
37329	public ResponseEvent extractCollectedResponseEvent ( ) { if ( responseCollector == _NULL ) throw new TckInternalError ( _CHAR A response collect was attempted when the responseCollector was _NULL _CHAR ) ; ResponseEvent collectedEvent = responseCollector . collectedEvent ; responseCollector . provider . removeSipListener ( responseCollector ) ; resetCollectors ( ) ; try { Thread . sleep ( _NUM ) ; } catch ( InterruptedException ex ) { } return collectedEvent ; }
37344	public void reduce_nets_of_route_items ( ) { int reduce_loop_counter = _NUM ; while ( reduce_nets_of_route_items_changed ( ) ) { if ( reduce_loop_counter ++ > _NUM ) { userPrintln ( _CHAR reduce_nets_of_route_items : Excessive loops _CHAR ) ; break ; } } }
37352	protected void count_and_yield ( boolean moreExpected ) throws SAXException { if ( ! moreExpected ) eventcounter = _NUM ; if ( -- eventcounter <= _NUM ) { co_yield ( _BOOL ) ; eventcounter = frequency ; } }
37357	final boolean link ( Index < K , V > succ , Index < K , V > newSucc ) { Node < K , V > n = node ; newSucc . right = succ ; return n . value != _NULL && casRight ( succ , newSucc ) ; }
37361	public static String escapeColonInString ( String str ) { if ( str != _NULL ) { if ( str . indexOf ( _CHAR : _CHAR ) >= _NUM ) { str = str . replaceAll ( _CHAR : _CHAR , _CHAR & # _NUM ; _CHAR ) ; } } return str ; }
37366	public static synchronized MBeanServer createServer ( ) { if ( mserver == _NULL ) { mserver = Registry . getRegistry ( _NULL , _NULL ) . getMBeanServer ( ) ; } return ( mserver ) ; }
37368	protected MutableAttributeSet createLargeAttributeSet ( AttributeSet a ) { return new LargeConversionSet ( a ) ; }
37373	public void load ( InputStream input , Class < ? > resourceBase ) throws ParseException { if ( resourceBase == _NULL ) { throw new IllegalArgumentException ( _CHAR You must supply a valid resource base Class _CHAR ) ; } if ( defaultsMap == _NULL ) { defaultsMap = new HashMap < String , Object > ( ) ; } new SynthParser ( ) . parse ( input , ( DefaultSynthStyleFactory ) factory , _NULL , resourceBase , defaultsMap ) ; }
37377	public void fireIndexedPropertyChange ( String propertyName , int index , int oldValue , int newValue ) { if ( oldValue != newValue ) { fireIndexedPropertyChange ( propertyName , index , Integer . valueOf ( oldValue ) , Integer . valueOf ( newValue ) ) ; } }
37395	public void logCompareRequest ( CompareOperation compareOperation ) { }
37397	public void enableSuperAura ( ) { auraStateComplete = _BOOL ; spriteFrame . setFitHeight ( _NUM ) ; main . Main . auraLoop . stop ( ) ; frameControl = _NUM ; effectiveYPos = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) playerStates . remove ( _NUM ) ; }
37399	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiButtonUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiButtonUI ) mui ) . uis , a ) ; }
37405	private void startSpanTag ( String style ) throws IOException { boolean callIndent = _BOOL ; if ( inFontTag ( ) ) { endSpanTag ( ) ; callIndent = _BOOL ; } writeStartTag ( _CHAR < span style =\ _CHAR _CHAR + style + _CHAR \ _CHAR > _CHAR ) ; if ( callIndent ) { indent ( ) ; } }
37422	private void createStatusReplicationSubCommand ( ) throws ArgumentException { statusReplicationSubCmd = new SubCommand ( this , STATUS_REPLICATION_SUBCMD_NAME , INFO_DESCRIPTION_SUBCMD_STATUS_REPLICATION . get ( ) ) ; scriptFriendlyArg = BooleanArgument . builder ( _CHAR script - friendly _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_DESCRIPTION_SCRIPT_FRIENDLY . get ( ) ) . buildArgument ( ) ; addArgumentsToSubCommand ( statusReplicationSubCmd , secureArgsList . getHostNameArg ( ) , secureArgsList . getPortArg ( ) , scriptFriendlyArg ) ; }
37433	public static Service create ( java . net . URL wsdlDocumentLocation , QName serviceName , WebServiceFeature ... features ) { return new Service ( wsdlDocumentLocation , serviceName , features ) ; }
37435	public static UUID randomUUID ( ) { byte [ ] data = new byte [ _NUM ] ; synchronized ( UUID . class ) { if ( rng == _NULL ) { rng = new SecureRandom ( ) ; } } rng . nextBytes ( data ) ; return makeUuid ( data , _NUM ) ; }
37442	@ Override public void roll ( int field , boolean increment ) { roll ( field , increment ? _NUM : - _NUM ) ; }
37452	public static void checkLocation ( int location , String label ) { if ( location < _NUM ) { throw new RuntimeException ( _CHAR Unable to locate _CHAR_CHAR_CHAR in program _CHAR ) ; } }
37457	public Resource superType ( final String resourceId ) { this . superTypeId = resourceId ; return this ; }
37459	protected void configurePropertiesFromAction ( Action a ) { AbstractAction . setEnabledFromAction ( this , a ) ; AbstractAction . setToolTipTextFromAction ( this , a ) ; setActionCommandFromAction ( a ) ; }
37467	public int indexOfObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( int i = _NUM ; i < array . length ; i ++ ) { if ( array [ i ] . equals ( nso ) ) { return i ; } } return - _NUM ; }
37480	public static String keyAlgorithm ( String algorithm ) { int index = algorithm . indexOf ( _CHAR ) ; if ( index == - _NUM ) { return algorithm ; } return algorithm . substring ( _NUM , index ) ; }
37485	public String chooseServerAlias ( String keyType , Principal [ ] issuers , Socket sock ) { return sunX509KeyManager . chooseServerAlias ( keyType , issuers , sock ) ; }
37500	public static WritableByteChannel newChannel ( final OutputStream out ) { checkNotNull ( out , _CHAR out _CHAR ) ; if ( out instanceof FileOutputStream && FileOutputStream . class . equals ( out . getClass ( ) ) ) { return ( ( FileOutputStream ) out ) . getChannel ( ) ; } return new WritableByteChannelImpl ( out ) ; }
37510	private void checkParamIndex ( int idx ) throws SQLException { if ( ( idx < _NUM ) ) { throw new SQLException ( _CHAR Invalid Parameter Index _CHAR ) ; } }
37511	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof JobMediaSheetsCompleted ) ; }
37518	public AMSearchResults searchUsers ( String wildcard , AMSearchControl searchControl , String avfilter ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( USER ) , getSearchFilter ( AMObject . USER ) , wildcard , searchControl , avfilter ) ; }
37523	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof JobMessageFromOperator ) ; }
37528	public void reset ( ) { len = _NUM ; pos = _NUM ; }
37533	private Session resolveSession ( SessionID sessionID ) throws SessionException { if ( statelessSessionManager . containsJwt ( sessionID ) ) { return statelessSessionManager . generate ( sessionID ) ; } return sessionCache . getSession ( sessionID ) ; }
37539	public void commit ( ) throws CannotWriteException { AudioFileIO . write ( this ) ; }
37570	@ Override public boolean isValidateRoot ( ) { return _BOOL ; }
37586	void doPreOperation ( PreOperationAddOperation addOperation ) { final CSN csn = generateCSN ( addOperation ) ; final String entryUUID = getEntryUUID ( addOperation ) ; final AddContext ctx = new AddContext ( csn , entryUUID , findEntryUUID ( DirectoryServer . getParentDNInSuffix ( addOperation . getEntryDN ( ) ) ) ) ; addOperation . setAttachment ( SYNCHROCONTEXT , ctx ) ; }
37588	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
37603	public boolean equalsIgnoreCase ( String anotherString ) { return str ( ) . equalsIgnoreCase ( anotherString ) ; }
37605	@ Override public Class < ? > loadClass ( String name ) throws ClassNotFoundException { return ( loadClass ( name , _BOOL ) ) ; }
37607	public void compose ( StylesheetRoot sroot ) throws TransformerException { super . compose ( sroot ) ; m_extns = this . getNamespace ( ) ; m_decl = getElemExtensionDecl ( sroot , m_extns ) ; if ( m_decl == _NULL ) sroot . getExtensionNamespacesManager ( ) . registerExtension ( m_extns ) ; }
37616	public boolean isMultiSelect ( ) { return getFieldFlag ( FF_MULTI_SELECT ) ; }
37621	static boolean enforceOnlyKnownProviders ( ) { if ( Utils . debug . messageEnabled ( ) ) { Utils . debug . message ( _CHAR SOAPBindingService . enforceOnlyKnownProviders _CHAR ) ; } return enforceOnlyKnownProvider ; }
37624	public WriterProperties useSmartMode ( ) { this . smartMode = _BOOL ; return this ; }
37630	public boolean isCancelled ( ) { return cancelled ; }
37644	public boolean onlyIfCached ( ) { return onlyIfCached ; }
37657	private void copyChunk ( final GUID guid , final InputStream source , final OutputStream destination ) throws IOException { final long chunkSize = Utils . readUINT64 ( source ) ; destination . write ( guid . getBytes ( ) ) ; Utils . writeUINT64 ( chunkSize , destination ) ; Utils . copy ( source , destination , chunkSize - _NUM ) ; }
37658	public PdfFormXObject put ( PdfName key , PdfObject value ) { getPdfObject ( ) . put ( key , value ) ; return this ; }
37682	@ Override public void reset ( ) throws IOException { fOffset = _NUM ; fSurrogate =- _NUM ; }
37686	public void cut ( ) { if ( getClientProperty ( _CHAR JPasswordField . cutCopyAllowed _CHAR ) != Boolean . TRUE ) { UIManager . getLookAndFeel ( ) . provideErrorFeedback ( this ) ; } else { super . cut ( ) ; } }
37689	public static void registerSupportedControl ( String controlOID ) { DirectoryServer . registerSupportedControl ( controlOID ) ; }
37693	public void trackPendingDialogCall ( FacebookDialog . PendingCall pendingCall ) { if ( pendingFacebookDialogCallId != _NULL ) { Log . i ( _CHAR Facebook _CHAR , _CHAR Tracking new app call while one is still pending ; canceling pending call . '' ) ; cancelPendingAppCall ( _NULL ) ; } if ( pendingCall != _NULL ) { pendingFacebookDialogCallId = pendingCall . getCallId ( ) ; pendingFacebookDialogCallStore . trackPendingCall ( pendingCall ) ; } }
37698	public final void stopIdleThreads ( ) { synchronized ( idleThreadList ) { while ( tail >= _NUM ) { IPSThread idleThread = idleThreadList [ tail ] ; idleThreadList [ tail -- ] = _NULL ; idleThread . stop ( ) ; } } }
37706	@ Override public void clear ( ) throws IOException { if ( writer != _NULL ) { throw new IOException ( ) ; } else { nextChar = _NUM ; if ( LIMIT_BUFFER && ( cb . length > Constants . DEFAULT_TAG_BUFFER_SIZE ) ) { cb = new char [ Constants . DEFAULT_TAG_BUFFER_SIZE ] ; bufferSize = cb . length ; } } }
37709	public void put ( String key , Object value ) { Bindings nn = getBindings ( ScriptContext . ENGINE_SCOPE ) ; if ( nn != _NULL ) { nn . put ( key , value ) ; } }
37710	public static MBeanServer createMBeanServer ( ) { return createMBeanServer ( _NULL ) ; }
37713	public static void verifyCategoryForValue ( Class < ? > category , Attribute attribute ) { if ( ! category . equals ( attribute . getCategory ( ) ) ) { throw new IllegalArgumentException ( ) ; } }
37716	public boolean isIssuingDistributionPointEnabled ( ) { return issuingDistributionPointEnabled ; }
37747	protected byte [ ] wrap ( ) { byte [ ] res = recordProtocol . wrap ( ContentType . ALERT , alert , _NUM , _NUM ) ; return res ; }
37780	public static boolean isXML11ValidLiteral ( int c ) { return ( ( c < _NUM && ( ( XML11CHARS [ c ] & MASK_XML11_VALID ) != _NUM && ( XML11CHARS [ c ] & MASK_XML11_CONTROL ) == _NUM ) ) || ( _NUM <= c && c <= _NUM ) ) ; }
37781	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiColorChooserUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiColorChooserUI ) mui ) . uis , a ) ; }
37800	public void fireVetoableChange ( String name , Object oldValue , Object newValue ) throws PropertyVetoException { vcSupport . fireVetoableChange ( name , oldValue , newValue ) ; }
37801	public synchronized void reset ( ) throws IOException { getBufIfOpen ( ) ; if ( markpos < _NUM ) throw new IOException ( _CHAR Resetting to invalid mark _CHAR ) ; pos = markpos ; }
37809	public static int filterExitCode ( final int exitCode ) { if ( exitCode < _NUM ) { return _NUM ; } else if ( exitCode > _NUM ) { return _NUM ; } else { return exitCode ; } }
37811	public XMLString substring ( int beginIndex , int endIndex ) { return new XMLStringDefault ( m_str . substring ( beginIndex , endIndex ) ) ; }
37817	public void unread ( byte [ ] b , int off , int len ) throws IOException { ensureOpen ( ) ; if ( len > pos ) { throw new IOException ( _CHAR Push back buffer is full _CHAR ) ; } pos -= len ; System . arraycopy ( b , off , buf , pos , len ) ; }
37820	public ElemTemplateElement appendChild ( ElemTemplateElement elem ) { if ( _NULL == elem ) { error ( XSLTErrorResources . ER_NULL_CHILD , _NULL ) ; } if ( _NULL == m_firstChild ) { m_firstChild = elem ; } else { ElemTemplateElement last = getLastChildElem ( ) ; last . m_nextSibling = elem ; } elem . setParentElem ( this ) ; return elem ; }
37821	public X509Certificate generateX509Certificate ( PrivateKey key , SecureRandom random ) throws SecurityException , SignatureException , InvalidKeyException { try { return generateX509Certificate ( key , _CHAR BC _CHAR , random ) ; } catch ( NoSuchProviderException e ) { throw new SecurityException ( _CHAR BC provider not installed ! _CHAR ) ; } }
37823	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
37831	public boolean enqueue ( ) { return this . queue . enqueue ( this ) ; }
37832	public NetClass find ( int p_trace_half_width , int p_trace_clearance_class , RuleViaInfoList p_via_rule ) { for ( NetClass curr_class : class_list ) { if ( curr_class . get_trace_clearance_class ( ) != p_trace_clearance_class ) continue ; if ( curr_class . get_via_rule ( ) != p_via_rule ) continue ; if ( curr_class . has_trace_half_width ( p_trace_half_width ) ) return curr_class ; } return _NULL ; }
37835	public boolean isExternalFile ( ProtoFile file ) { String filePath = file . getSimpleName ( ) ; for ( String commonPath : COMMON_PROTO_PATHS ) { if ( filePath . startsWith ( commonPath ) ) { return _BOOL ; } } return _BOOL ; }
37836	private static final < T > int findIgnoreCase ( MapElement < T > [ ] map , CharChunk name ) { return findIgnoreCase ( map , name , name . getStart ( ) , name . getEnd ( ) ) ; }
37845	@ Override public boolean equals ( final Object obj ) { if ( obj == _NULL ) { return _BOOL ; } if ( this == obj ) { return _BOOL ; } if ( obj instanceof Size ) { Size other = ( Size ) obj ; return mWidth == other . mWidth && mHeight == other . mHeight ; } return _BOOL ; }
37853	public int variant ( ) { return variant ; }
37858	public String composeName ( String name , String prefix ) throws NamingException { return name ; }
37866	final void deregisterRelationDefinition ( RelationDefinition < ? , ? > d ) { String relName = d . getName ( ) ; relationDefinitions . remove ( relName ) ; allRelationDefinitions . remove ( relName ) ; d . getChildDefinition ( ) . reverseRelationDefinitions . remove ( d ) ; }
37874	public void copy ( ) { invokeAction ( _CHAR copy _CHAR , TransferHandler . getCopyAction ( ) ) ; }
37895	public void removeAllElements ( ) { int index1 = delegate . size ( ) - _NUM ; delegate . removeAllElements ( ) ; if ( index1 >= _NUM ) { fireIntervalRemoved ( this , _NUM , index1 ) ; } }
37901	@ Deprecated public static void restartServer ( String className , LocalizableMessage reason , DirectoryEnvironmentConfig config ) { DirectoryServer . restart ( className , reason , config ) ; }
37905	private void processModifyDN ( Map < DN , DN > modDNMap , boolean log ) { if ( modDNMap != _NULL ) { if ( log ) { writeLog ( modDNMap ) ; } else { for ( DN baseDN : getBaseDNsToSearch ( ) ) { doBaseDN ( baseDN , modDNMap ) ; } } } }
37909	public final int read ( byte b [ ] , int off , int len ) throws IOException { return in . read ( b , off , len ) ; }
37925	protected ChangeListener createChangeListener ( ) { return new ModelListener ( ) ; }
37926	public long roundTripTime ( long timeout , TimeUnit unit ) throws InterruptedException { if ( latch . await ( timeout , unit ) ) { return received - sent ; } else { return - _NUM ; } }
37938	private void createPostExternalInitializationSubCommand ( ) throws ArgumentException { postExternalInitializationSubCmd = new SubCommand ( this , POST_EXTERNAL_INITIALIZATION_SUBCMD_NAME , INFO_DESCRIPTION_SUBCMD_POST_EXTERNAL_INITIALIZATION . get ( PRE_EXTERNAL_INITIALIZATION_SUBCMD_NAME ) ) ; Argument [ ] argsToAdd = { secureArgsList . getHostNameArg ( ) , secureArgsList . getPortArg ( ) } ; for ( Argument arg : argsToAdd ) { postExternalInitializationSubCmd . addArgument ( arg ) ; } }
37955	public AMSearchResults searchUsers ( String wildcard , AMSearchControl searchControl , String avfilter ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( USER ) , getSearchFilter ( AMObject . USER ) , wildcard , searchControl , avfilter ) ; }
37956	public boolean isValid ( ) { return _BOOL ; }
37965	public SIPResponse createResponse ( int statusCode ) { String reasonPhrase = SIPResponse . getReasonPhrase ( statusCode ) ; return this . createResponse ( statusCode , reasonPhrase ) ; }
37971	public void registerComponent ( JComponent component ) { component . removeMouseListener ( this ) ; component . addMouseListener ( this ) ; component . removeMouseMotionListener ( moveBeforeEnterListener ) ; component . addMouseMotionListener ( moveBeforeEnterListener ) ; component . removeKeyListener ( accessibilityKeyListener ) ; component . addKeyListener ( accessibilityKeyListener ) ; }
37982	public void addSubject ( String name , Subject subject ) throws NameAlreadyExistsException , InvalidNameException { users . addSubject ( name , subject , _BOOL ) ; }
37996	public boolean addAll ( Collection < ? extends E > c ) { return addAll ( size , c ) ; }
37999	@ Override public boolean ready ( ) throws IOException { synchronized ( lock ) { if ( isOpen ( ) ) { return _BOOL ; } throw new IOException ( _CHAR StringReader is closed _CHAR ) ; } }
38006	public Object [ ] toArray ( ) { return Arrays . copyOf ( queue , size ) ; }
38007	public void insertNodeInto ( MutableTreeNode newChild , MutableTreeNode parent , int index ) { parent . insert ( newChild , index ) ; int [ ] newIndexs = new int [ _NUM ] ; newIndexs [ _NUM ] = index ; nodesWereInserted ( parent , newIndexs ) ; }
38023	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiListUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiListUI ) mui ) . uis , a ) ; }
38025	public static void registerSupportedFeature ( String featureOID ) { synchronized ( directoryServer . supportedFeatures ) { directoryServer . supportedFeatures . add ( featureOID ) ; } }
38030	@ Override protected void propertyChange ( PropertyChangeEvent evt ) { if ( SynthLookAndFeel . shouldUpdateStyle ( evt ) ) { updateStyle ( ( JTextComponent ) evt . getSource ( ) ) ; } super . propertyChange ( evt ) ; }
38032	final void forgetContents ( ) { UNSAFE . putObject ( this , itemOffset , this ) ; UNSAFE . putObject ( this , waiterOffset , _NULL ) ; }
38040	public void processStatement ( final Statement statement , long startTime , ResultSetFuture result ) { report ( startTime , statement , result ) ; }
38048	private String policyRevision ( Privilege policy ) { return Long . toString ( policy . getLastModifiedDate ( ) ) ; }
38051	public void dragDropEnd ( DragSourceDropEvent dsde ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragDropEnd ( dsde ) ; } getDragSource ( ) . processDragDropEnd ( dsde ) ; }
38062	public void compose ( StylesheetRoot sroot ) throws TransformerException { super . compose ( sroot ) ; java . util . Vector vnames = sroot . getComposeState ( ) . getVariableNames ( ) ; if ( _NULL != m_name_atv ) m_name_atv . fixupVariables ( vnames , sroot . getComposeState ( ) . getGlobalsSize ( ) ) ; }
38068	@ Override public ClusterMessage requestCompleted ( String sessionId ) { return requestCompleted ( sessionId , _BOOL ) ; }
38069	public void flushOutputStreamOrWriter ( ) throws IOException { if ( servletOutputStream != _NULL ) { servletOutputStream . flush ( ) ; } if ( printWriter != _NULL ) { printWriter . flush ( ) ; } }
38070	public Throwable initCause ( Throwable cause ) { super . initCause ( cause ) ; setRootCause ( cause ) ; return this ; }
38076	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
38079	public static UUID nameUUIDFromBytes ( byte [ ] name ) { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name == _NULL _CHAR ) ; } try { MessageDigest md = MessageDigest . getInstance ( _CHAR MD5 _CHAR ) ; return makeUuid ( md . digest ( name ) , _NUM ) ; } catch ( NoSuchAlgorithmException e ) { throw new AssertionError ( e ) ; } }
38083	public void doLayout ( ) { if ( editingComponent != _NULL ) { int width = getWidth ( ) ; int height = getHeight ( ) ; if ( getComponentOrientation ( ) . isLeftToRight ( ) ) { editingComponent . setBounds ( offset , _NUM , width - offset , height ) ; } else { editingComponent . setBounds ( _NUM , _NUM , width - offset , height ) ; } } }
38086	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
38090	public boolean lessThanOrEquals ( ResolutionSyntax other ) { return ( this . crossFeedResolution <= other . crossFeedResolution && this . feedResolution <= other . feedResolution ) ; }
38110	private static void exit ( final ReturnCode returnCode ) { App . STATE . shutdown ( returnCode ) ; }
38113	protected void notifyCursorMoved ( ) throws SQLException { checkforRowSetInterface ( ) ; if ( listeners . isEmpty ( ) == _BOOL ) { RowSetEvent event = new RowSetEvent ( ( RowSet ) this ) ; for ( RowSetListener rsl : listeners ) { rsl . cursorMoved ( event ) ; } } }
38114	public boolean equals ( Object object ) { if ( object == _NULL || ! ( object instanceof SessionID ) ) { return _BOOL ; } SessionID another = ( SessionID ) object ; return encryptedString . equals ( another . encryptedString ) ; }
38139	public synchronized void addItemListener ( ItemListener l ) { if ( l == _NULL ) { return ; } itemListener = AWTEventMulticaster . add ( itemListener , l ) ; newEventsOnly = _BOOL ; }
38144	protected JViewport createViewport ( ) { return new JViewport ( ) ; }
38146	protected ListDataListener createListDataListener ( ) { return _NULL ; }
38176	private boolean defineEntity ( String name , char value ) { StringBuffer sb = new StringBuffer ( _CHAR & _CHAR ) ; sb . append ( name ) ; sb . append ( _CHAR ) ; String entityString = sb . toString ( ) ; boolean extra = defineChar2StringMapping ( entityString , value ) ; return extra ; }
38183	public void assignThreadForSubscriber ( @ NonNull Object subscriber ) { Looper looper = Looper . myLooper ( ) ; if ( looper != _NULL ) { mSubscribersDefaultThreads . put ( new IdentityWeakReferenceKey < > ( subscriber ) , looper != Looper . getMainLooper ( ) ? new Handler ( looper ) : mUiThreadHandler ) ; } else { mSubscribersDefaultThreads . remove ( new IdentityWeakReferenceKey < > ( subscriber ) ) ; } }
38185	public static Entry modifyEntryStrict ( final Entry entry , final Collection < Modification > changes ) throws LdapException { return modifyEntry0 ( entry , changes , _BOOL ) ; }
38212	public final boolean isTraceEnabled ( ) { return isLevelEnabled ( SimpleLog . LOG_LEVEL_TRACE ) ; }
38223	public boolean equals ( Object rhs ) { if ( rhs != _NULL ) { try { TransformAttribute that = ( TransformAttribute ) rhs ; if ( transform == _NULL ) { return that . transform == _NULL ; } return transform . equals ( that . transform ) ; } catch ( ClassCastException e ) { } } return _BOOL ; }
38229	public boolean canSetSourceRenderSize ( ) { return canSetSourceRenderSize ; }
38238	public void login ( IndexType type , String indexName , String locale ) throws AuthLoginException { login ( type , indexName , _NULL , _NULL , locale ) ; }
38240	@ Override public int read ( byte [ ] b ) { return read ( b , _NUM , b . length ) ; }
38244	protected final void notifyDataProviderEventOccurred ( final DataProviderEvent event ) { for ( final DataProviderEventListener listener : eventListeners ) { try { listener . handleDataProviderEvent ( event ) ; } catch ( final Exception e ) { debugLogger . trace ( _CHAR Unexpected error occurred while invoking listener '' , e ) ; } } }
38268	public static char [ ] toCharArray ( InputStream is , String encoding ) throws IOException { return toCharArray ( is , Charsets . toCharset ( encoding ) ) ; }
38275	public final void removeElementAt ( int i ) { if ( i > m_firstFree ) System . arraycopy ( m_map , i + _NUM , m_map , i , m_firstFree ) ; else m_map [ i ] = _NULL ; m_firstFree -- ; }
38292	public boolean isNowWithinInterval ( String intervalString ) throws IllegalArgumentException { Interval interval = Interval . parse ( intervalString ) ; return interval . contains ( DateTime . now ( ) ) ; }
38294	public static ConnectionFactory configureConnectionFactory ( final JsonValue configuration , final String name , final TrustManager trustManager , final X509KeyManager keyManager , final ClassLoader providerClassLoader ) { final JsonValue normalizedConfiguration = normalizeConnectionFactory ( configuration , name , _NUM ) ; return configureConnectionFactory ( normalizedConfiguration , trustManager , keyManager , providerClassLoader ) ; }
38297	public void init ( ) { }
38302	public long ticks ( ) { long ret = _NUM ; synchronized ( eventsList ) { if ( eventsList . size ( ) > _NUM ) { ret = ( ( MidiEvent ) eventsList . get ( eventsList . size ( ) - _NUM ) ) . getTick ( ) ; } } return ret ; }
38311	public static ResultCode valueOf ( final int intValue ) { ResultCode result = ELEMENTS . get ( intValue ) ; if ( result == _NULL ) { result = new ResultCode ( intValue , LocalizableMessage . raw ( _CHAR unknown ( _CHAR + intValue + _CHAR ) _CHAR ) , _BOOL , Enum . UNKNOWN ) ; } return result ; }
38319	protected TreeModelListener createTreeModelListener ( ) { return new TreeModelHandler ( ) ; }
38332	public List < String > lineWrapDoc ( String str , int maxWidth , String firstLinePrefix ) { return s_lineWrapDoc ( str , maxWidth , firstLinePrefix ) ; }
38349	public String toASCIIPropertyList ( ) { StringBuilder ascii = new StringBuilder ( ) ; toASCII ( ascii , _NUM ) ; ascii . append ( NEWLINE ) ; return ascii . toString ( ) ; }
38358	public DNLock tryReadLockEntry ( final DN entry ) { return acquireLockFromCache ( entry ) . tryReadLockEntry ( ) ; }
38367	public int viewToModel ( float x , float y , Shape a , Position . Bias [ ] bias ) { load ( ) ; return super . viewToModel ( x , y , a , bias ) ; }
38368	private static boolean sendEntryIfMatches ( SearchOperation searchOp , Entry entry , String cookie ) throws DirectoryException { if ( matchBaseAndScopeAndFilter ( searchOp , entry ) ) { return searchOp . returnEntry ( entry , getControls ( cookie ) ) ; } return _BOOL ; }
38369	public void addColumn ( final Object columnName ) { addColumn ( columnName , ( Vector ) _NULL ) ; }
38374	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
38378	private static String makeInstalledLAFKey ( String laf , String attr ) { return _CHAR swing . installedlaf . '' + laf + _CHAR . _CHAR + attr ; }
38384	public Request _create_request ( Context ctx , String operation , NVList arg_list , NamedValue result , ExceptionList exceptions , ContextList contexts ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
38385	public boolean isShowing ( ) { return _BOOL ; }
38388	public boolean hasNext ( ) { if ( nextItem != _NULL ) return _BOOL ; noNext ( ) ; return _BOOL ; }
38394	public PlaPoint corner_last ( ) { return polyline . corner_last ( ) ; }
38418	public boolean equals ( Object obj2 ) { if ( _NULL == obj2 ) return _BOOL ; else if ( obj2 instanceof XNodeSet ) return obj2 . equals ( this ) ; else if ( obj2 instanceof XNumber ) return obj2 . equals ( this ) ; else return str ( ) . equals ( obj2 . toString ( ) ) ; }
38426	public ResponseProvider removeResponseProvider ( ResponseProvider responseProvider ) { String responseProviderName = getResponseProviderName ( responseProvider ) ; if ( responseProviderName != _NULL ) { return ( ResponseProvider ) removeResponseProvider ( responseProviderName ) ; } return _NULL ; }
38427	public void replaceSubject ( String name , Subject subject , boolean exclusive ) throws NameNotFoundException { users . replaceSubject ( name , subject , exclusive ) ; }
38432	public RenderedImage createDefaultRendering ( ) { AffineTransform usr2dev = new AffineTransform ( ) ; RenderContext newRC = new RenderContext ( usr2dev ) ; return createRendering ( newRC ) ; }
38452	public Enumeration < String > names ( ) { return new NamesEnumerator ( this ) ; }
38456	public void addLayoutComponent ( Component comp , Object constraints ) { if ( constraints instanceof GridBagConstraints ) { setConstraints ( comp , ( GridBagConstraints ) constraints ) ; } else if ( constraints != _NULL ) { throw new IllegalArgumentException ( _CHAR can not add to layout : constraints must be a GridBagConstraint _CHAR ) ; } }
38461	public Set searchRoles ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ROLE ) , getSearchFilter ( AMObject . ROLE ) , wildcard , avPairs , level ) ; }
38475	public void updateUI ( ) { setUI ( ( ToolBarUI ) UIManager . getUI ( this ) ) ; if ( getLayout ( ) == _NULL ) { setLayout ( new DefaultToolBarLayout ( getOrientation ( ) ) ) ; } invalidate ( ) ; }
38477	public boolean canCreateNewResource ( String ServiceType ) throws PolicyException { return canCreateNewRes ; }
38497	public static double asin ( double a ) { return StrictMath . asin ( a ) ; }
38512	public boolean removeParameter ( String name ) { throw new UnsupportedOperationException ( _CHAR Removing parameters in a stack is not supported . '' ) ; }
38520	public boolean markSupported ( ) { return _BOOL ; }
38522	public static String applyFontToHtml ( String html , Font font ) { StringBuilder buf = new StringBuilder ( ) ; buf . append ( _CHAR < span style =\ _CHAR _CHAR ) . append ( getFontStyle ( font ) ) . append ( _CHAR \ _CHAR > _CHAR ) . append ( html ) . append ( SPAN_CLOSE ) ; return buf . toString ( ) ; }
38530	public AMSearchResults searchRoles ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ROLE ) , getSearchFilter ( AMObject . ROLE ) , wildcard , avPairs , searchControl ) ; }
38533	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
38535	public Boolean isTraversable ( File f ) { return _NULL ; }
38536	@ NonNull public static Interpolator fastOutLinearIn ( ) { return new FastOutLinearInInterpolator ( ) ; }
38538	public ResponseProvider removeResponseProvider ( String responseProviderName ) { return ( ResponseProvider ) providers . remove ( responseProviderName ) ; }
38539	boolean customSetUIProperty ( String propertyName , Object value ) { if ( propertyName == _CHAR echoChar _CHAR ) { if ( ! echoCharSet ) { setEchoChar ( ( Character ) value ) ; echoCharSet = _BOOL ; } return _BOOL ; } return _BOOL ; }
38541	public void removeNotify ( ) { synchronized ( getTreeLock ( ) ) { TextComponentPeer peer = ( TextComponentPeer ) this . peer ; if ( peer != _NULL ) { text = peer . getText ( ) ; selectionStart = peer . getSelectionStart ( ) ; selectionEnd = peer . getSelectionEnd ( ) ; } super . removeNotify ( ) ; } }
38546	public void addTab ( String title , Icon icon , Component component , String tip ) { insertTab ( title , icon , component , tip , pages . size ( ) ) ; }
38547	public MethodHandle guardWithTest ( MethodHandle target , MethodHandle fallback ) { if ( mcs . getTarget ( ) == K_false ) return fallback ; return MethodHandles . guardWithTest ( mcsInvoker , target , fallback ) ; }
38549	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof ADPrincipal ) ) { return _BOOL ; } ADPrincipal that = ( ADPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
38561	public final int size ( ) { return written ; }
38576	public boolean contains ( Point p ) { return _BOOL ; }
38583	public Request _create_request ( Context ctx , String operation , NVList arg_list , NamedValue result ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
38590	protected MutableAttributeSet createLargeAttributeSet ( AttributeSet a ) { return new SimpleAttributeSet ( a ) ; }
38593	public int compareTo ( Object obj ) { ObjectStreamField other = ( ObjectStreamField ) obj ; boolean isPrim = isPrimitive ( ) ; if ( isPrim != other . isPrimitive ( ) ) { return isPrim ? - _NUM : _NUM ; } return name . compareTo ( other . name ) ; }
38603	public void rejectedExecution ( Runnable r , ThreadPoolExecutor e ) { if ( ! e . isShutdown ( ) ) { e . getQueue ( ) . poll ( ) ; e . execute ( r ) ; } }
38615	public int difference ( String s1 , String s2 ) throws EncoderException { return SoundexUtils . difference ( this , s1 , s2 ) ; }
38627	public boolean isLocalSite ( String siteID ) { String localID = getSiteID ( ) ; if ( localID == _NULL ) { localID = getLocalServerID ( ) ; } return localID . equals ( siteID ) || getSecondarySiteIDs ( ) . contains ( siteID ) ; }
38628	@ Deprecated public static ObjectId massageToObjectId ( Object o ) { if ( o == _NULL ) { return _NULL ; } if ( o instanceof ObjectId ) { return ( ObjectId ) o ; } if ( o instanceof String ) { String s = o . toString ( ) ; if ( isValid ( s ) ) { return new ObjectId ( s ) ; } } return _NULL ; }
38633	public CMSSignedData generate ( String eContentType , CMSProcessable content , boolean encapsulate , String sigProvider ) throws NoSuchAlgorithmException , NoSuchProviderException , CMSException { return generate ( eContentType , content , encapsulate , CMSUtils . getProvider ( sigProvider ) , _BOOL ) ; }
38639	public Set keySet ( ) { if ( keySet == _NULL ) keySet = new SynchronizedSet ( new KeySet ( ) , this ) ; return keySet ; }
38641	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public boolean removeOperationInProgress ( int messageID ) { return _BOOL ; }
38642	public synchronized long resetByteCount ( ) { long tmp = this . count ; this . count = _NUM ; return tmp ; }
38645	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeTimestamp ( java . sql . Timestamp x ) throws SQLException { attribs . add ( x ) ; }
38671	public void exiting ( String sourceClass , String sourceMethod ) { logp ( Level . FINER , sourceClass , sourceMethod , _CHAR RETURN _CHAR ) ; }
38678	public Observable < Void > saveStoreObservable ( Store store ) { io . vertx . rx . java . ObservableFuture < Void > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; saveStore ( store , resultHandler . toHandler ( ) ) ; return resultHandler ; }
38681	public final static EventEntry start ( Name eventName , Object payload , Object context ) { return eventName . publisherImpl . start ( eventName , payload , context ) ; }
38682	public void dragEnter ( DragSourceDragEvent dsde ) { }
38688	public AMSearchResults searchStaticGroups ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP ) , getSearchFilter ( AMObject . GROUP ) , wildcard , avPairs , searchControl ) ; }
38702	public void forceRewriteExif ( String filename ) throws FileNotFoundException , IOException { forceRewriteExif ( filename , getAllTags ( ) ) ; }
38712	public static AuthenticationHandler tokenBased ( final SecretProvider data , final boolean isDryRun ) { return new AuthenticationHandler ( data , isDryRun , _BOOL ) ; }
38719	public void elementDecl ( String name , String model ) throws SAXException { }
38731	public synchronized void drop ( DropTargetDropEvent dtde ) { isDraggingInside = _BOOL ; clearAutoscroll ( ) ; if ( dtListener != _NULL && active ) dtListener . drop ( dtde ) ; else { dtde . rejectDrop ( ) ; } }
38742	public static Foo fetchByUUID_G ( java . lang . String uuid , long groupId , boolean retrieveFromCache ) { return getPersistence ( ) . fetchByUUID_G ( uuid , groupId , retrieveFromCache ) ; }
38750	final void forgetContents ( ) { UNSAFE . putObject ( this , itemOffset , this ) ; UNSAFE . putObject ( this , waiterOffset , _NULL ) ; }
38763	@ Override public boolean onOptionsItemSelected ( final MenuItem item ) { return delegate . onOptionsItemSelected ( item ) ; }
38776	protected void updateLayout ( DocumentEvent . ElementChange ec , DocumentEvent e , Shape a ) { if ( ec != _NULL ) { int index = Math . max ( ec . getIndex ( ) - _NUM , _NUM ) ; ChildState cs = getChildState ( index ) ; locator . childChanged ( cs ) ; } }
38782	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; if ( ( obj == _NULL ) || ( obj . getClass ( ) != getClass ( ) ) ) return _BOOL ; BasicPermission bp = ( BasicPermission ) obj ; return getName ( ) . equals ( bp . getName ( ) ) ; }
38787	public DTMAxisIterator cloneIterator ( ) { try { final DTMAxisIteratorBase clone = ( DTMAxisIteratorBase ) super . clone ( ) ; clone . _isRestartable = _BOOL ; return clone ; } catch ( CloneNotSupportedException e ) { throw new org . apache . xml . utils . WrappedRuntimeException ( e ) ; } }
38788	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
38799	public synchronized long skip ( long n ) { if ( n < _NUM ) { return _NUM ; } if ( n > count - pos ) { n = count - pos ; } pos += n ; return n ; }
38813	protected void installNonRolloverBorders ( JComponent c ) { Component [ ] components = c . getComponents ( ) ; for ( Component component : components ) { if ( component instanceof JComponent ) { ( ( JComponent ) component ) . updateUI ( ) ; setBorderToNonRollover ( component ) ; } } }
38824	@ Deprecated protected String normalizeMimeTypeParameter ( String parameterName , String parameterValue ) { return parameterValue ; }
38826	@ Override public boolean isLeapYear ( ) { return IsoChronology . INSTANCE . isLeapYear ( year ) ; }
38834	public synchronized boolean canRedo ( ) { if ( inProgress ) { UndoableEdit edit = editToBeRedone ( ) ; return edit != _NULL && edit . canRedo ( ) ; } else { return super . canRedo ( ) ; } }
38837	public boolean addLogger ( Logger logger ) { final String name = logger . getName ( ) ; if ( name == _NULL ) { throw new NullPointerException ( ) ; } drainLoggerRefQueueBounded ( ) ; LoggerContext cx = getUserContext ( ) ; if ( cx . addLocalLogger ( logger ) ) { loadLoggerHandlers ( logger , name , name + _CHAR . handlers _CHAR ) ; return _BOOL ; } else { return _BOOL ; } }
38840	protected void releaseBeanContextResources ( ) { }
38844	@ NonNull public static Interpolator path ( Path path ) { return PathInterpolatorCompat . create ( path ) ; }
38845	public static synchronized void unsuppress ( ) { if ( token != _NULL ) { System . setOut ( token . out ) ; System . setErr ( token . err ) ; token = _NULL ; } else { throw new IllegalStateException ( _CHAR Standard streams not currently suppressed _CHAR ) ; } }
38846	public void close ( ) throws IOException { do { nextStream ( ) ; } while ( in != _NULL ) ; }
38855	public boolean isBigEndian ( ) { return isBigEndian ; }
38856	public boolean hasFeature ( String feature , String version ) { if ( ( _CHAR CORE _CHAR . equals ( feature . toUpperCase ( ) ) || _CHAR XML _CHAR . equals ( feature . toUpperCase ( ) ) ) && ( _CHAR _NUM . _NUM _CHAR . equals ( version ) || _CHAR _NUM . _NUM _CHAR . equals ( version ) ) ) return _BOOL ; return _BOOL ; }
38861	public boolean contains ( Point p ) { Rectangle r = getBounds ( ) ; if ( r != _NULL ) { return r . contains ( p . x , p . y ) ; } else { return _BOOL ; } }
38870	public Set searchUsers ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( USER ) , getSearchFilter ( AMObject . USER ) , wildcard , avPairs , level ) ; }
38874	public boolean equals ( Object object ) { return ( object != _NULL && object instanceof ResolutionSyntax && this . crossFeedResolution == ( ( ResolutionSyntax ) object ) . crossFeedResolution && this . feedResolution == ( ( ResolutionSyntax ) object ) . feedResolution ) ; }
38879	public static void fill ( double [ ] a , int fromIndex , int toIndex , double val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
38886	public boolean isIntervalInFuture ( String intervalString ) throws IllegalArgumentException { return Interval . parse ( intervalString ) . getStart ( ) . isAfterNow ( ) ; }
38895	@ Override public void println ( ) throws IOException { newLine ( ) ; }
38897	protected void writeHeader ( ) throws IOException { writeStartTag ( _CHAR < head > _CHAR ) ; writeStartTag ( _CHAR < style > _CHAR ) ; writeStartTag ( _CHAR < ! -- _CHAR ) ; writeStyles ( ) ; writeEndTag ( _CHAR -- > _CHAR ) ; writeEndTag ( _CHAR < / style > _CHAR ) ; writeEndTag ( _CHAR < / head > _CHAR ) ; }
38900	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof PrinterInfo ) ; }
38905	static < K extends Comparable < K > , V > BlockLogWriter < K , V > newWriterForTests ( final LogWriter writer , final RecordParser < K , V > parser , final int blockSize ) { return new BlockLogWriter < > ( writer , parser , blockSize ) ; }
38909	protected void redefine ( int nodetype , String namespace , String localName ) { this . nodetype = nodetype ; this . namespace = namespace ; this . localName = localName ; this . hash = nodetype + namespace . hashCode ( ) + localName . hashCode ( ) ; }
38919	protected void storeInProfilesMap ( Client client ) { Set parentSet = client . getProperties ( PARENT_ID ) ; String clientType = client . getClientType ( ) ; Map m = getStylesProfileMap ( clientType , parentSet ) ; if ( m != _NULL ) { m . put ( clientType , client ) ; } return ; }
38927	public boolean ready ( ) throws IOException { return sd . ready ( ) ; }
38944	public static void writeStringToFile ( File file , String data , String encoding ) throws IOException { writeStringToFile ( file , data , encoding , _BOOL ) ; }
38950	public void downFocusCycle ( Container aContainer ) { if ( aContainer != _NULL && aContainer . isFocusCycleRoot ( ) ) { aContainer . transferFocusDownCycle ( ) ; } }
38984	public void removeVetoableChangeListener ( String name , VetoableChangeListener vcl ) { vcSupport . removeVetoableChangeListener ( name , vcl ) ; }
38991	@ Override public boolean isSecure ( ) { boolean secure = _BOOL ; if ( tlsActiveProvider != _NULL ) { secure = tlsActiveProvider . isSecure ( ) ; } if ( ! secure && saslActiveProvider != _NULL ) { secure = saslActiveProvider . isSecure ( ) ; } return secure ; }
39022	public synchronized void write ( int b ) throws IOException { out . write ( b ) ; incCount ( _NUM ) ; }
39027	public Node item ( int index ) { if ( m_iter != _NULL ) { int handle = m_iter . item ( index ) ; if ( handle == DTM . NULL ) { return _NULL ; } return m_iter . getDTM ( handle ) . getNode ( handle ) ; } else { return _NULL ; } }
39028	public boolean remove ( AccessibleState state ) { if ( states == _NULL ) { return _BOOL ; } else { return states . removeElement ( state ) ; } }
39031	public HttpParams copy ( ) { return this ; }
39042	public void selectAllAccessibleSelection ( ) { }
39043	public void removeSharedOrganizationNames ( Set names ) throws SMSException , SSOException { }
39048	public String toDisplayString ( Locale locale ) { return toDisplayString ( defaultResourceBundleName , locale ) ; }
39050	public char charAt ( int index ) { return fsb ( ) . charAt ( m_start + index ) ; }
39063	public boolean isStandardStreamMetadataFormatSupported ( ) { return supportsStandardStreamMetadataFormat ; }
39069	public void startElement ( String arg0 , String arg1 , String arg2 , Attributes arg3 ) throws SAXException { if ( m_state != _NULL ) { m_state . resetState ( getTransformer ( ) ) ; } if ( m_tracer != _NULL ) super . fireStartElem ( arg2 ) ; }
39072	public void logAddRequest ( AddOperation addOperation ) { }
39084	public int radix ( ) { return this . defaultRadix ; }
39093	public static void appendLDIFSeparatorAndValue ( StringBuilder buffer , ByteSequence valueBytes ) { appendLDIFSeparatorAndValue ( buffer , valueBytes , _BOOL , _BOOL ) ; }
39096	public final void removeAllElements ( ) { for ( int i = _NUM ; i < m_firstFree ; i ++ ) { m_map [ i ] = java . lang . Integer . MIN_VALUE ; } m_firstFree = _NUM ; }
39100	public boolean equals ( Object obj ) { if ( obj instanceof ObjID ) { ObjID id = ( ObjID ) obj ; return objNum == id . objNum && space . equals ( id . space ) ; } else { return _BOOL ; } }
39101	public void removeValue ( String name ) { if ( name == _NULL ) { throw new IllegalArgumentException ( _CHAR name == _NULL _CHAR ) ; } Object old = values . remove ( name ) ; if ( old instanceof SSLSessionBindingListener ) { SSLSessionBindingListener listener = ( SSLSessionBindingListener ) old ; listener . valueUnbound ( new SSLSessionBindingEvent ( this , name ) ) ; } }
39105	public void addSelectionPaths ( TreePath [ ] paths ) { getSelectionModel ( ) . addSelectionPaths ( paths ) ; }
39135	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
39136	public static char [ ] toCharArray ( InputStream is ) throws IOException { return toCharArray ( is , Charset . defaultCharset ( ) ) ; }
39145	public static void fill ( Object [ ] a , int fromIndex , int toIndex , Object val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
39156	public Collection engineGenerateCRLs ( InputStream inStream ) throws CRLException { CRL crl ; List crls = new ArrayList ( ) ; while ( ( crl = engineGenerateCRL ( inStream ) ) != _NULL ) { crls . add ( crl ) ; } return crls ; }
39157	public void createKeyPair ( ) { try { mKeyPairGenerator . initialize ( new KeyGenParameterSpec . Builder ( KEY_NAME , KeyProperties . PURPOSE_SIGN ) . setDigests ( KeyProperties . DIGEST_SHA256 ) . setAlgorithmParameterSpec ( new ECGenParameterSpec ( _CHAR secp256r1 _CHAR ) ) . setUserAuthenticationRequired ( _BOOL ) . build ( ) ) ; mKeyPairGenerator . generateKeyPair ( ) ; } catch ( InvalidAlgorithmParameterException e ) { throw new RuntimeException ( e ) ; } }
39161	@ Override public void delete ( ) { cachedContent = _NULL ; File outputFile = getStoreLocation ( ) ; if ( outputFile != _NULL && outputFile . exists ( ) ) { outputFile . delete ( ) ; } }
39169	public void destroy ( ) { }
39171	static ComputedDayOfField ofDayOfWeekField ( WeekFields weekDef ) { return new ComputedDayOfField ( _CHAR DayOfWeek _CHAR , weekDef , DAYS , WEEKS , DAY_OF_WEEK_RANGE ) ; }
39173	public void startDrag ( DragGestureEvent trigger , Cursor dragCursor , Transferable transferable , DragSourceListener dsl , FlavorMap flavorMap ) throws InvalidDnDOperationException { startDrag ( trigger , dragCursor , _NULL , _NULL , transferable , dsl , flavorMap ) ; }
39178	@ Override public boolean isLoggable ( LogRecord record ) { return super . isLoggable ( record ) ; }
39179	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
39191	public String toString ( ) { return super . toString ( ) + _CHAR : _CHAR + getAttributes ( ) ; }
39198	public void endPrefixMapping ( String prefix ) throws org . xml . sax . SAXException { }
39200	public static boolean requiresBidi ( char [ ] text , int start , int limit ) { return BidiBase . requiresBidi ( text , start , limit ) ; }
39205	private Object readResolve ( ) throws ObjectStreamException { return m_transStateArray [ m_transactionState ] ; }
39208	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; dictionaryFile = TestCaseUtils . createTempFile ( _CHAR love _CHAR , _CHAR sex _CHAR , _CHAR secret _CHAR , _CHAR god _CHAR , _CHAR password _CHAR ) ; }
39211	public boolean allowsCoreThreadTimeOut ( ) { return allowCoreThreadTimeOut ; }
39223	@ Override public void onTokenRefresh ( ) { String refreshedToken = FirebaseInstanceId . getInstance ( ) . getToken ( ) ; Log . d ( TAG , _CHAR Refreshed token : _CHAR + refreshedToken ) ; sendRegistrationToServer ( refreshedToken ) ; }
39228	public boolean isFresh ( ) { return ( m_next == _NUM ) ; }
39230	public RandomAccessFileOrArray createView ( ) { return new RandomAccessFileOrArray ( new IndependentRandomAccessSource ( byteSource ) ) ; }
39232	protected void doFilter ( HttpServletRequest request , HttpServletResponse response , FilterChain chain ) throws IOException , ServletException { chain . doFilter ( request , response ) ; }
39234	public static Throwable unwrapInvocationTargetException ( Throwable t ) { if ( t instanceof InvocationTargetException && t . getCause ( ) != _NULL ) { return t . getCause ( ) ; } return t ; }
39242	public Name add ( int posn , String comp ) throws InvalidNameException { Rdn rdn = ( new Rfc2253Parser ( comp ) ) . parseRdn ( ) ; rdns . add ( posn , rdn ) ; unparsed = _NULL ; return this ; }
39256	public void undo ( ) throws CannotUndoException { if ( ! canUndo ( ) ) { throw new CannotUndoException ( ) ; } hasBeenDone = _BOOL ; }
39260	public byte nextByte ( ) { return nextByte ( defaultRadix ) ; }
39266	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T > T [ ] copyOfRange ( T [ ] original , int from , int to ) { return copyOfRange ( original , from , to , ( Class < ? extends T [ ] > ) original . getClass ( ) ) ; }
39276	private void registerInstanceKeyCertificate ( Map < ServerProperty , Object > serverProperties , DN serverEntryDn ) throws ADSContextException { ADSContextHelper helper = new ADSContextHelper ( ) ; helper . registerInstanceKeyCertificate ( connectionWrapper , serverProperties , serverEntryDn ) ; }
39279	public static int roundUpToPowerOfTwo ( int i ) { i -- ; i |= i >> > _NUM ; i |= i >> > _NUM ; i |= i >> > _NUM ; i |= i >> > _NUM ; i |= i >> > _NUM ; return i + _NUM ; }
39282	public void openFrame ( JInternalFrame f ) { if ( f . getDesktopIcon ( ) . getParent ( ) != _NULL ) { f . getDesktopIcon ( ) . getParent ( ) . add ( f ) ; removeIconFor ( f ) ; } }
39287	protected static EventListener removeInternal ( EventListener l , EventListener oldl ) { if ( l == oldl || l == _NULL ) { return _NULL ; } else if ( l instanceof AWTEventMulticaster ) { return ( ( AWTEventMulticaster ) l ) . remove ( oldl ) ; } else { return l ; } }
39289	public void addSubject ( Subject subject ) throws NameAlreadyExistsException { addSubject ( _NULL , subject , _BOOL ) ; }
39302	static Class lookUpFactoryClass ( String factoryId ) throws ConfigurationError { return lookUpFactoryClass ( factoryId , _NULL , _NULL ) ; }
39312	@ Override public void close ( ) throws IOException { try { super . close ( ) ; } finally { this . branch . close ( ) ; } }
39314	protected boolean validateIfNecessary ( ) { if ( ! isValid ( ) && canBeValid ) { children = _NULL ; Object lock = lock ( ) ; try { validate ( ) ; } finally { unlock ( lock ) ; } } return isValid ( ) ; }
39331	public AMSearchResults searchAllRoles ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { int [ ] objectTypes = { AMObject . ROLE , AMObject . FILTERED_ROLE } ; return searchObjects ( objectTypes , wildcard , avPairs , searchControl ) ; }
39337	public static Metrics isBoring ( LayoutContext layoutContext , CharSequence text , TextPaint paint , Metrics metrics ) { return isBoring ( layoutContext , text , paint , TextDirectionHeuristics . FIRSTSTRONG_LTR , metrics ) ; }
39340	public ContentDescription findContentDescription ( ) { ContentDescription result = getContentDescription ( ) ; if ( result == _NULL && getExtendedHeader ( ) != _NULL ) { result = getExtendedHeader ( ) . getContentDescription ( ) ; } return result ; }
39349	public boolean topCollide ( ) { for ( StageBlock block : SpriteHandler . getStageElements ( ) ) { Shape intersection = SVGPath . intersect ( super . getSpriteBoundsArray ( ) [ _NUM ] , block . getSpriteBounds ( ) ) ; if ( intersection . getBoundsInParent ( ) . getWidth ( ) != - _NUM ) return _BOOL ; } return _BOOL ; }
39352	public static MappedMember findField ( MappedClass owner , String name , String desc ) { for ( MappedMember mm : owner . getFields ( ) ) { if ( matches ( mm , name , desc , _BOOL ) ) { return mm ; } } return _NULL ; }
39385	public Object [ ] calculateIndex ( CompositeData value ) { checkValueType ( value ) ; return internalCalculateIndex ( value ) . toArray ( ) ; }
39386	public void add ( String item , int index ) { addItem ( item , index ) ; }
39387	public void writeRejectedEntries ( OutputStream outputStream ) { if ( outputStream == _NULL ) { closeRejectWriter ( ) ; return ; } rejectWriter = new BufferedWriter ( new OutputStreamWriter ( outputStream ) ) ; }
39395	public void login ( IndexType indexType , String indexName , String [ ] params , Map envMap ) throws AuthLoginException { login ( indexType , indexName , params , envMap , _NULL , _NULL ) ; }
39399	public boolean isInSync ( ) { return inSync ; }
39406	private Object readResolve ( ) throws ObjectStreamException { return m_timeoutArray [ m_timeout ] ; }
39416	public Period minusDays ( long daysToSubtract ) { return ( daysToSubtract == Long . MIN_VALUE ? plusDays ( Long . MAX_VALUE ) . plusDays ( _NUM ) : plusDays ( - daysToSubtract ) ) ; }
39436	public boolean isAddAcceptable ( ManagementContext context , ManagedObject < ? > managedObject , Collection < LocalizableMessage > unacceptableReasons ) throws LdapException { return _BOOL ; }
39442	public boolean equals ( Object object ) { return super . equals ( object ) && object instanceof JobKOctets ; }
39444	public String next ( ) { return next ( ANY_PATTERN ) ; }
39451	public Object decode ( Object object ) throws DecoderException { try { char [ ] charArray = object instanceof String ? ( ( String ) object ) . toCharArray ( ) : ( char [ ] ) object ; return decodeHex ( charArray ) ; } catch ( ClassCastException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
39452	public static ImageTypeSpecifier createInterleaved ( ColorSpace colorSpace , int [ ] bandOffsets , int dataType , boolean hasAlpha , boolean isAlphaPremultiplied ) { return new ImageTypeSpecifier . Interleaved ( colorSpace , bandOffsets , dataType , hasAlpha , isAlphaPremultiplied ) ; }
39464	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
39465	public boolean isUnknown ( ) { return _BOOL ; }
39470	public int readInt ( ) { if ( remaining ( ) < _NUM ) { throw new IndexOutOfBoundsException ( ) ; } int v = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) { v <<= _NUM ; v |= sequence . byteAt ( pos ++ ) & _NUM ; } return v ; }
39471	public static int readSingleByte ( InputStream in ) throws IOException { byte [ ] buffer = new byte [ _NUM ] ; int result = in . read ( buffer , _NUM , _NUM ) ; return ( result != - _NUM ) ? buffer [ _NUM ] & _NUM : - _NUM ; }
39472	public static Foo fetchByUUID_G ( java . lang . String uuid , long groupId ) { return getPersistence ( ) . fetchByUUID_G ( uuid , groupId ) ; }
39481	public static String URLDecode ( String str ) { return URLDecode ( str , _NULL ) ; }
39482	public boolean startsWith ( Name n ) { if ( n instanceof CompositeName ) { return ( impl . startsWith ( n . size ( ) , n . getAll ( ) ) ) ; } else { return _BOOL ; } }
39487	public boolean containsKey ( String itemName ) { if ( itemName == _NULL ) { return _BOOL ; } return nameToDescription . containsKey ( itemName ) ; }
39490	public boolean isFlavorTextType ( ) { return ( DataTransferer . isFlavorCharsetTextType ( this ) || DataTransferer . isFlavorNoncharsetTextType ( this ) ) ; }
39498	static boolean isApplicable ( AttributeType a , TargetAttr targetAttr ) { if ( targetAttr . isAllUserAttributes ( ) && targetAttr . isAllOpAttributes ( ) ) { return ! targetAttr . getOperator ( ) . equals ( EnumTargetOperator . NOT_EQUALITY ) ; } else { return evalAttrType ( a , targetAttr ) ; } }
39528	private void fillGridForPreLayout ( RecyclerView . Recycler recycler , RecyclerView . State state ) { while ( fakeSpanBottomMin <= bottomBorder && mCurrentPosition >= _NUM && mCurrentPosition < state . getItemCount ( ) ) { layoutChunk ( recycler , state , _BOOL , _BOOL ) ; } }
39529	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
39532	public Object clone ( ) { DefaultMutableTreeNode newNode = _NULL ; try { newNode = ( DefaultMutableTreeNode ) super . clone ( ) ; newNode . children = _NULL ; newNode . parent = _NULL ; } catch ( CloneNotSupportedException e ) { throw new Error ( e . toString ( ) ) ; } return newNode ; }
39536	public void uninstallUI ( JComponent c ) { uninstallListeners ( ) ; uninstallDefaults ( ) ; uninstallKeyboardActions ( ) ; cellWidth = cellHeight =- _NUM ; cellHeights = _NULL ; listWidth = listHeight =- _NUM ; list . remove ( rendererPane ) ; rendererPane = _NULL ; list = _NULL ; }
39537	public MethodHandle findSetter ( Class < ? > refc , String name , Class < ? > type ) throws NoSuchFieldException , IllegalAccessException { MemberName field = resolveOrFail ( REF_putField , refc , name , type ) ; return getDirectField ( REF_putField , refc , field ) ; }
39539	private void checkNoAntennaDialogInOnResume ( ) { if ( mIsNeedShowNoAntennaDlg && mService != _NULL && ! mService . isAntennaAvailable ( ) && ! FmRadioUtils . isFmShortAntennaSupport ( ) ) { Log . w ( TAG , _CHAR Need to show no antenna dialog for plug out earphone in onPause state '' ) ; dismissNoAntennaDialog ( ) ; showNoAntennaDialog ( ) ; } }
39548	public void restartable ( int restartableId , Func0 < Subscription > factory ) { restartables . put ( restartableId , factory ) ; if ( requested . contains ( restartableId ) ) start ( restartableId ) ; }
39552	public static QueryExp match ( AttributeValueExp a , StringValueExp s ) { return new MatchQueryExp ( a , s ) ; }
39562	public void updateConfig ( RadiusServiceConfig config ) { this . config = config ; }
39567	public static int highestOneBit ( int i ) { i |= ( i >> _NUM ) ; i |= ( i >> _NUM ) ; i |= ( i >> _NUM ) ; i |= ( i >> _NUM ) ; i |= ( i >> _NUM ) ; return i - ( i >> > _NUM ) ; }
39577	protected final void openSessionForRead ( String applicationId , List < String > permissions , SessionLoginBehavior behavior , int activityCode ) { openSession ( applicationId , permissions , behavior , activityCode , SessionAuthorizationType . READ ) ; }
39580	public static void sort ( byte [ ] a ) { DualPivotQuicksort . sort ( a , _NUM , a . length - _NUM ) ; }
39585	public PlaPoint corner_first ( ) { return polyline . corner_first ( ) ; }
39588	public static int showConfirmDialog ( Component parentComponent , Object message , String title , int optionType , int messageType ) throws HeadlessException { return showConfirmDialog ( parentComponent , message , title , optionType , messageType , _NULL ) ; }
39593	public int end ( int group ) { if ( first < _NUM ) throw new IllegalStateException ( _CHAR No match available _CHAR ) ; if ( group < _NUM || group > groupCount ( ) ) throw new IndexOutOfBoundsException ( _CHAR No group _CHAR + group ) ; return groups [ group * _NUM + _NUM ] ; }
39595	public int nextInt ( ) { return nextInt ( defaultRadix ) ; }
39610	public void applyPattern ( String pattern ) { applyPattern ( pattern , _BOOL ) ; }
39619	public static String unqualifyPid ( String qualifiedPid ) { if ( qualifiedPid != _NULL && qualifiedPid . startsWith ( ServerConstants . SERVICE_RDN_PREFIX ) ) { return qualifiedPid . substring ( ServerConstants . SERVICE_RDN_PREFIX . length ( ) ) ; } else { return qualifiedPid ; } }
39632	public static List < String > readLines ( InputStream input ) throws IOException { return readLines ( input , Charset . defaultCharset ( ) ) ; }
39638	public void addBaseDNToSearch ( DN dn ) { baseDNs . add ( dn ) ; }
39653	public void mouseDragged ( MouseEvent e ) { }
39664	protected Class < ? > findClass ( String name ) throws ClassNotFoundException { if ( mDexClass != _NULL ) { return findClassDalvik ( name ) ; } else { return findClassNonDalvik ( name ) ; } }
39684	public boolean containsValue ( Object value ) { return contains ( value ) ; }
39697	public final void encodeObjectClasses ( final ByteStringBuilder builder , final Map < ObjectClass , String > objectClasses ) throws DirectoryException { int id = getObjectClassId ( objectClasses ) ; final byte [ ] idBytes = encodeId ( id ) ; builder . appendBERLength ( idBytes . length ) ; builder . appendBytes ( idBytes ) ; }
39704	public final void automaticallyReleaseConnectionToPool ( ) { automaticallyReleaseConnectionToPool = _BOOL ; if ( connection != _NULL && connectionReleased ) { client . getConnectionPool ( ) . recycle ( connection ) ; connection = _NULL ; } }
39711	public void layoutChanged ( int axis ) { if ( axis == majorAxis ) { majorAllocValid = _BOOL ; } else { minorAllocValid = _BOOL ; } }
39714	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
39716	public Remote toStub ( ) throws IOException { final Remote stub = IIOPHelper . toStub ( this ) ; return stub ; }
39729	public static < T > T orderAccesses ( T ref ) { theVolatile = _NUM ; return ref ; }
39742	public Referral removeReferral ( Referral referral ) { String referralName = getReferralName ( referral ) ; if ( referralName != _NULL ) { return removeReferral ( referralName ) ; } return _NULL ; }
39752	public void close ( ) throws IOException { }
39758	public int size ( ) { queueReadLock . lock ( ) ; try { return opQueue . size ( ) ; } finally { queueReadLock . unlock ( ) ; } }
39759	public boolean equals ( Object obj ) { return ( obj instanceof TextHitInfo ) && equals ( ( TextHitInfo ) obj ) ; }
39763	public static Border createBevelBorder ( int type ) { return createSharedBevel ( type ) ; }
39766	private static boolean canMapToSpace ( final StringBuilder buffer , final boolean trim ) { final int buffLen = buffer . length ( ) ; final boolean doNotMap = ( trim && buffLen == _NUM ) || ( buffLen > _NUM && buffer . charAt ( buffLen - _NUM ) == SPACE_CHAR ) ; return ! doNotMap ; }
39772	private static void updateNamingTable ( ) throws SMSException { Hashtable updatedNamingTable = updateNamingTable ( _BOOL ) ; if ( namingTable != _NULL ) { synchronized ( namingTable ) { namingTable . clear ( ) ; namingTable . putAll ( updatedNamingTable ) ; } } else { namingTable = updatedNamingTable ; } }
39777	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
39780	public long skip ( long n ) throws IOException { return in . skip ( n ) ; }
39791	public void startPrefixMapping ( String prefix , String uri ) throws SAXException { }
39793	@ Override public int compare ( Tree tree1 , Tree tree2 ) { return priority ( tree1 ) - priority ( tree2 ) ; }
39794	public static boolean isDefaultLookAndFeelDecorated ( ) { Boolean defaultLookAndFeelDecorated = ( Boolean ) SwingUtilities . appContextGet ( defaultLookAndFeelDecoratedKey ) ; if ( defaultLookAndFeelDecorated == _NULL ) { defaultLookAndFeelDecorated = Boolean . FALSE ; } return defaultLookAndFeelDecorated . booleanValue ( ) ; }
39809	public static boolean isValid ( int c ) { return ( c < _NUM && ( CHARS [ c ] & MASK_VALID ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
39813	private void positionAndSizeAsIcon ( ) { if ( ! ( getParent ( ) instanceof DragLayer ) ) return ; setScaleX ( _NUM . _NUM ) ; setScaleY ( _NUM . _NUM ) ; setAlpha ( _NUM ) ; mState = STATE_SMALL ; }
39816	public Object [ ] toArray ( ) { Object [ ] result = new Object [ size ] ; int i = _NUM ; for ( Node < E > x = first ; x != _NULL ; x = x . next ) result [ i ++ ] = x . item ; return result ; }
39829	protected static Map convertJAXBToAttrMap ( String attrName , Object jaxbObj ) throws JAXBException { String xmlString = convertJAXBToString ( jaxbObj ) ; Map attrs = new HashMap ( ) ; Set values = new HashSet ( ) ; values . add ( xmlString ) ; attrs . put ( attrName , values ) ; return attrs ; }
39840	public static TitledBorder createTitledBorder ( Border border , String title , int titleJustification , int titlePosition , Font titleFont ) { return new TitledBorder ( border , title , titleJustification , titlePosition , titleFont ) ; }
39848	public void error ( SAXParseException e ) throws SAXException { }
39854	protected Object clone ( ) throws CloneNotSupportedException { AbstractAction newAction = ( AbstractAction ) super . clone ( ) ; synchronized ( this ) { if ( arrayTable != _NULL ) { newAction . arrayTable = ( ArrayTable ) arrayTable . clone ( ) ; } } return newAction ; }
39856	private void inputPanelButtonClicked ( ) { getDialog ( ) . getStepsPanel ( ) . updateStepVisibility ( this ) ; }
39860	public static void warning ( CommandManager mgr , String msg ) { dumpToOutput ( mgr , msg , _NULL ) ; mgr . getDebugger ( ) . warning ( msg ) ; }
39861	public static FontProgram createFont ( String fontProgram , boolean cached ) throws java . io . IOException { return createFont ( fontProgram , _NULL , cached ) ; }
39865	public void storeToXML ( OutputStream os , String comment ) throws IOException { storeToXML ( os , comment , _CHAR UTF - _NUM _CHAR ) ; }
39871	public int compareTo ( Object obj ) { if ( ! ( obj instanceof CompoundName ) ) { throw new ClassCastException ( _CHAR Not a CompoundName _CHAR ) ; } return impl . compareTo ( ( ( CompoundName ) obj ) . impl ) ; }
39877	public int findColumn ( String columnName ) { for ( int i = _NUM ; i < getColumnCount ( ) ; i ++ ) { if ( columnName . equals ( getColumnName ( i ) ) ) { return i ; } } return - _NUM ; }
39883	protected < V > RunnableScheduledFuture < V > decorateTask ( Callable < V > callable , RunnableScheduledFuture < V > task ) { return task ; }
39887	public boolean equals ( String obj2 ) { return m_str . equals ( obj2 ) ; }
39889	public String read ( final int length ) { if ( length > this . length || pos + length > this . length ) { throw new StringIndexOutOfBoundsException ( ) ; } final String substring = source . substring ( pos , pos + length ) ; pos += length ; return substring ; }
39894	static boolean copyTo ( ByteBuffer inBuffer , CharBuffer outBuffer , CharsetDecoder decoder ) { final CoderResult result = decoder . decode ( inBuffer , outBuffer , _BOOL ) ; decoder . flush ( outBuffer ) ; return ! result . isError ( ) && ! result . isOverflow ( ) ; }
39895	public Enumeration depthFirstEnumeration ( ) { return postorderEnumeration ( ) ; }
39900	public void fatalError ( SAXParseException e ) throws SAXException { throw e ; }
39914	public void unsetCompression ( ) { if ( ! canWriteCompressed ( ) ) { throw new UnsupportedOperationException ( _CHAR Compression not supported _CHAR ) ; } if ( getCompressionMode ( ) != MODE_EXPLICIT ) { throw new IllegalStateException ( _CHAR Compression mode not MODE_EXPLICIT ! _CHAR ) ; } this . compressionType = _NULL ; this . compressionQuality = _NUM . _NUM ; }
39925	public NClob readNClob ( ) throws SQLException { return ( NClob ) getNextAttribute ( ) ; }
39927	public synchronized int read ( ) { return ( pos < count ) ? ( buf [ pos ++ ] & _NUM ) : - _NUM ; }
39954	public void record ( String msg ) { if ( statsState > Stats . OFF ) { formatAndWrite ( _NULL , msg ) ; } }
39959	public Object remove ( int posn ) throws InvalidNameException { unparsed = _NULL ; return rdns . remove ( posn ) . toString ( ) ; }
39961	public String encode ( String pString ) throws EncoderException { if ( pString == _NULL ) { return _NULL ; } try { return encode ( pString , getDefaultCharset ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
39971	private void createSunXmlKeyValFiles ( File dirHandle , Set sunxmlkeyvals ) throws SMSException { createLookupFiles ( dirHandle , SMSEntry . ATTR_XML_KEYVAL , sunxmlkeyvals ) ; }
39977	private void createSunServiceIdFiles ( File dirHandle , Set sunserviceids ) throws SMSException { createLookupFiles ( dirHandle , SMSEntry . ATTR_SERVICE_ID , sunserviceids ) ; }
39993	public int hashCode ( ) { return impl . hashCode ( ) ; }
39995	public String toString ( ) { switch ( mod_op ) { case DirContext . ADD_ATTRIBUTE : return ( _CHAR Add attribute : _CHAR + attr . toString ( ) ) ; case DirContext . REPLACE_ATTRIBUTE : return ( _CHAR Replace attribute : _CHAR + attr . toString ( ) ) ; case DirContext . REMOVE_ATTRIBUTE : return ( _CHAR Remove attribute : _CHAR + attr . toString ( ) ) ; } return _CHAR _CHAR ; }
39998	protected void IdKeyPattern ( ) throws javax . xml . transform . TransformerException { FunctionCall ( ) ; }
40009	public void resendTopDownLeftRight ( ImageProducer ip ) { ip . requestTopDownLeftRightResend ( this ) ; }
40016	public BindOperation processSASLBind ( ByteString rawBindDN , String saslMechanism , ByteString saslCredentials ) { return processSASLBind ( rawBindDN , saslMechanism , saslCredentials , _NULL ) ; }
40018	public synchronized byte [ ] toByteArray ( ) { byte [ ] newArray = new byte [ count ] ; System . arraycopy ( buf , _NUM , newArray , _NUM , count ) ; return newArray ; }
40033	protected void maximizeFrame ( JInternalFrame f ) { BasicLookAndFeel . playSound ( frame , _CHAR InternalFrame . maximizeSound _CHAR ) ; getDesktopManager ( ) . maximizeFrame ( f ) ; }
40034	public boolean isMissing ( String key ) { return ( missingHyphenationTrees != _NULL && missingHyphenationTrees . contains ( key ) ) ; }
40037	public void skippedEntity ( String name ) throws SAXException { }
40043	public void columnMoved ( TableColumnModelEvent e ) { repaint ( ) ; }
40050	public static byte [ ] decodeWebSafe ( byte [ ] source ) throws Base64DecoderException { return decodeWebSafe ( source , _NUM , source . length ) ; }
40068	static < T > Promise < T > promise ( ) { return new BasePromise < > ( ) ; }
40069	public void uninstallUI ( JComponent c ) { }
40071	public boolean startsWith ( Name n ) { if ( n == _NULL ) { return _BOOL ; } int len1 = rdns . size ( ) ; int len2 = n . size ( ) ; return ( len1 >= len2 && matches ( _NUM , len2 , n ) ) ; }
40080	public boolean equals ( Object object ) { if ( this == object ) { return _BOOL ; } else if ( object == _NULL || getClass ( ) != object . getClass ( ) ) { return _BOOL ; } return SSOSessionID . equals ( object ) ; }
40083	protected UndoableEdit lastEdit ( ) { int count = edits . size ( ) ; if ( count > _NUM ) return edits . elementAt ( count - _NUM ) ; else return _NULL ; }
40085	protected void processComponentKeyEvent ( KeyEvent e ) { }
40096	private boolean isNavigationKey ( KeyEvent event ) { InputMap inputMap = list . getInputMap ( JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT ) ; KeyStroke key = KeyStroke . getKeyStrokeForEvent ( event ) ; if ( inputMap != _NULL && inputMap . get ( key ) != _NULL ) { return _BOOL ; } return _BOOL ; }
40104	@ Override public void dismiss ( ) { delegate . dismiss ( ) ; }
40108	@ Override public void rename ( Name oldName , Name newName ) throws NamingException { Object value = lookup ( oldName ) ; bind ( newName , value ) ; unbind ( oldName ) ; }
40109	public static String toHexString ( int i ) { return IntegralToString . intToHexString ( i , _BOOL , _NUM ) ; }
40112	public org . omg . CORBA . ORB _orb ( ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
40115	public boolean isLeftToRight ( ) { return ( orientation & LTR_BIT ) != _NUM ; }
40127	@ Override public void checkClientTrusted ( X509Certificate [ ] chain , String authType ) throws CertificateException { LocalizableMessage message = ERR_PROMPTTM_REJECTING_CLIENT_CERT . get ( ) ; throw new CertificateException ( message . toString ( ) ) ; }
40128	public HttpEngine recover ( RouteException e ) { if ( ! streamAllocation . recover ( e ) ) { return _NULL ; } if ( ! client . getRetryOnConnectionFailure ( ) ) { return _NULL ; } StreamAllocation streamAllocation = close ( ) ; return new HttpEngine ( client , userRequest , bufferRequestBody , callerWritesRequestBody , forWebSocket , streamAllocation , ( RetryableSink ) requestBodyOut , priorResponse ) ; }
40135	public static int lastIndexOf ( final String value , final String needle ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return lastIndexOf ( value , needle , value . length ( ) , _BOOL ) ; }
40148	public int compareTo ( Object obj ) { if ( ! ( obj instanceof CompositeName ) ) { throw new ClassCastException ( _CHAR Not a CompositeName _CHAR ) ; } return impl . compareTo ( ( ( CompositeName ) obj ) . impl ) ; }
40158	public static String toGreekAlphabetNumberUpperCase ( int number ) { return AlphabetNumbering . toAlphabetNumber ( number , ALPHABET_UPPERCASE ) ; }
40162	public Iterator < E > iterator ( ) { return new Itr ( ) ; }
40164	public void moveCaretPosition ( int pos ) { Document doc = getDocument ( ) ; if ( doc != _NULL ) { if ( pos > doc . getLength ( ) || pos < _NUM ) { throw new IllegalArgumentException ( _CHAR bad position : _CHAR + pos ) ; } caret . moveDot ( pos ) ; } }
40165	public ASN1Primitive toASN1Primitive ( ) { return seq ; }
40170	public void appendChild ( int newChild , boolean clone , boolean cloneDepth ) { boolean sameDoc = ( ( newChild & DOCHANDLE_MASK ) == m_docHandle ) ; if ( clone || ! sameDoc ) { } else { } }
40171	EntryContainer openEntryContainer ( DN baseDN , WriteableTransaction txn , AccessMode accessMode ) throws StorageRuntimeException , ConfigException { EntryContainer ec = new EntryContainer ( baseDN , backendId , config , storage , this , serverContext ) ; ec . open ( txn , accessMode ) ; return ec ; }
40180	public synchronized long fileCount ( ) { return fileCount ; }
40181	public boolean implies ( Permission p ) { if ( ! ( p instanceof FilePermission ) ) return _BOOL ; FilePermission that = ( FilePermission ) p ; return ( ( this . mask & that . mask ) == that . mask ) && impliesIgnoreMask ( that ) ; }
40205	public String formatMulticastAddress ( String addr , int ttl , int numAddrs ) { String res = addr + _CHAR / _CHAR + ttl + _CHAR / _CHAR + numAddrs ; return res ; }
40206	public static void registerPersistentSearch ( ) { directoryServer . activePSearches . incrementAndGet ( ) ; }
40210	public void addNodes ( NodeSet ns ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESET_NOT_MUTABLE , _NULL ) ) ; addNodes ( ( NodeIterator ) ns ) ; }
40223	public boolean reset ( ) { boolean wasReset = _BOOL ; if ( super . reset ( ) ) { resetToXMLSAXHandler ( ) ; wasReset = _BOOL ; } return wasReset ; }
40224	public boolean has_no_active_member ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR has_no_active_member _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . has_no_active_member ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
40227	protected T childValue ( T parentValue ) { return parentValue ; }
40233	public SoapSTSServerCryptoStateBuilder decryptionKeyAlias ( String decryptionKeyAlias ) { this . decryptionKeyAlias = decryptionKeyAlias ; return this ; }
40247	public LibPadstack add ( String p_name , ShapeConvex [ ] p_shapes , boolean p_attach_allowed , boolean p_placed_absolute ) { int pad_no = count ( ) + _NUM ; LibPadstack new_padstack = new LibPadstack ( p_name , pad_no , p_shapes , p_attach_allowed , p_placed_absolute ) ; padstack_list . add ( new_padstack ) ; return new_padstack ; }
40263	protected final boolean isDescendant ( int identity ) { return ( _parent2 ( identity ) >= _startNode ) || ( _startNode == identity ) ; }
40269	private static int capacity ( int expectedMaxSize ) { return ( expectedMaxSize > MAXIMUM_CAPACITY / _NUM ) ? MAXIMUM_CAPACITY : ( expectedMaxSize <= _NUM * MINIMUM_CAPACITY / _NUM ) ? MINIMUM_CAPACITY : Integer . highestOneBit ( expectedMaxSize + ( expectedMaxSize << _NUM ) ) ; }
40275	public void paintToolBarDragWindowBackground ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintToolBarDragWindowBackground ( context , g , x , y , w , h ) ; }
40290	public void add ( MutableTreeNode newChild ) { if ( newChild != _NULL && newChild . getParent ( ) == this ) insert ( newChild , getChildCount ( ) - _NUM ) ; else insert ( newChild , getChildCount ( ) ) ; }
40297	public void fireVisibleDataPropertyChange ( ) { firePropertyChange ( AccessibleContext . ACCESSIBLE_VISIBLE_DATA_PROPERTY , Boolean . valueOf ( _BOOL ) , Boolean . valueOf ( _BOOL ) ) ; }
40320	private void exception ( Request request , Response response , Throwable exception ) { request . setAttribute ( RequestDispatcher . ERROR_EXCEPTION , exception ) ; response . setStatus ( HttpServletResponse . SC_INTERNAL_SERVER_ERROR ) ; response . setError ( ) ; }
40323	public PlaSide side_of ( PlaVectorInt p_other ) { return PlaSide . get_side_of ( determinant ( p_other ) ) ; }
40344	public Condition removeCondition ( String conditionName ) { return ( Condition ) conditions . remove ( conditionName ) ; }
40350	@ Override public void backgroundProcess ( ) { }
40351	public String generateName ( final Random random , final int length , int middlesToUse ) { return generateName ( _NULL , length , middlesToUse ) ; }
40354	public final void writeFloat ( float v ) throws IOException { writeInt ( Float . floatToIntBits ( v ) ) ; }
40358	public void detach ( ) { if ( m_allowDetach ) { m_traverser = _NULL ; m_extendedTypeID = _NUM ; super . detach ( ) ; } }
40379	public final int readInt ( ) throws IOException { readFully ( scratch , _NUM , SizeOf . INT ) ; return Memory . peekInt ( scratch , _NUM , ByteOrder . BIG_ENDIAN ) ; }
40382	public boolean chainIsNotPinned ( String hostname , List < X509Certificate > chain ) throws PinManagerException { PinListEntry entry = lookup ( hostname ) ; if ( entry != _NULL ) { return entry . chainIsNotPinned ( chain ) ; } return _BOOL ; }
40390	private void createSunServiceIdFiles ( SMSFlatFileTreeNode node , Set sunserviceids ) throws SMSException { if ( ( sunserviceids != _NULL ) && ! sunserviceids . isEmpty ( ) ) { createLookupFiles ( node , SMSEntry . ATTR_SERVICE_ID , sunserviceids ) ; } }
40392	private static String encodeHistorical ( CSN csn , String operationType ) { return _CHAR dn : _CHAR + csn + _CHAR : _CHAR + operationType ; }
40399	public OIDCIdTokenConfigBuilder customAuthenticationMethodReferencesMapperClass ( String customAuthenticationMethodReferencesMapperClass ) { this . customAuthenticationMethodReferencesMapper = customAuthenticationMethodReferencesMapperClass ; return this ; }
40407	@ Override public boolean shouldShowRequestPermissionRationale ( @ NonNull final String permission ) { return super . shouldShowRequestPermissionRationale ( permission ) ; }
40416	@ Override public String toString ( ) { synchronized ( lock ) { return buf . toString ( ) ; } }
40426	public long position ( Clob searchStr , long start ) throws SerialException , SQLException { isValid ( ) ; return position ( searchStr . getSubString ( _NUM , ( int ) searchStr . length ( ) ) , start ) ; }
40429	private Session resolveSession ( SessionID sessionID ) throws SessionException { return sessionOperationStrategy . getOperation ( sessionID ) . resolveSession ( sessionID ) ; }
40439	public static boolean isDefined ( int codePoint ) { return getType ( codePoint ) != Character . UNASSIGNED ; }
40448	static final int hash ( Object key ) { int h ; return ( key == _NULL ) ? _NUM : ( h = key . hashCode ( ) ) ^ ( h >> > _NUM ) ; }
40455	public boolean equals ( Object target ) { if ( this == target ) return _BOOL ; if ( target == _NULL || ! getClass ( ) . equals ( target . getClass ( ) ) ) { return _BOOL ; } RuleBasedCollationKey other = ( RuleBasedCollationKey ) target ; return key . equals ( other . key ) ; }
40471	private void readObject ( java . io . ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; installShowFilesListener ( ) ; }
40473	public void upgradeBundle ( Path newBundle , String symbolicName ) throws UpdateException { List < Bundle > installedBundles = getBundles ( symbolicName ) ; if ( ! installedBundles . isEmpty ( ) ) { replaceBundle ( installedBundles , newBundle ) ; } else { installBundle ( newBundle ) ; } }
40474	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
40480	private static Version readVersion ( BitMatrix bitMatrix ) throws FormatException { int numRows = bitMatrix . getHeight ( ) ; int numColumns = bitMatrix . getWidth ( ) ; return Version . getVersionForDimensions ( numRows , numColumns ) ; }
40482	public boolean authenticate ( Callback [ ] credentials ) throws IdRepoException , com . sun . identity . authentication . spi . AuthLoginException { IdServices idServices = IdServicesFactory . getDataStoreServices ( ) ; return ( idServices . authenticate ( organizationDN , credentials ) ) ; }
40491	@ Override public void publish ( LogRecord record ) { super . publish ( record ) ; flush ( ) ; }
40502	static < T > Promise < T > blockingPromise ( ) { return new BlockingPromise < > ( ) ; }
40524	void clearSubjectResultCache ( String tokenIdString ) throws PolicyException { if ( DEBUG . messageEnabled ( ) ) { DEBUG . message ( _CHAR Policy . clearSubjectResultCache ( tokenIdString ) : _CHAR + _CHAR clearing cached subject evaluation result for '' + '' tokenId XXXXX '' ) ; } users . clearSubjectResultCache ( tokenIdString ) ; }
40533	public boolean isNegative ( ) { return years < _NUM || months < _NUM || days < _NUM ; }
40549	@ Override public Promise < ActionResponse , ResourceException > filterAction ( Context context , ActionRequest request , RequestHandler next ) { final CrestAuditor auditor = newAuditor ( context , request ) ; auditor . auditAccessAttempt ( ) ; return auditResponse ( next . handleAction ( context , request ) , auditor , request ) ; }
40551	private WeakReference < Object > newWeakReference ( ReferenceQueue < Object > queue ) { Object o = new Object ( ) ; WeakReference < Object > ref = new WeakReference < Object > ( o , queue ) ; assertSame ( o , ref . get ( ) ) ; return ref ; }
40564	public AMSearchResults searchDynamicGroups ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP ) , getSearchFilter ( AMObject . DYNAMIC_GROUP ) , wildcard , avPairs , searchControl ) ; }
40566	protected boolean isRootPaneCheckingEnabled ( ) { return rootPaneCheckingEnabled ; }
40567	public boolean isId ( ) { return _BOOL ; }
40580	public static Border createRaisedBevelBorder ( ) { return createSharedBevel ( BevelBorder . RAISED ) ; }
40582	public boolean isLeaf ( ) { return ( getChildCount ( ) == _NUM ) ; }
40583	public static String encodeBase64String ( final byte [ ] binaryData ) { return StringUtils . newStringUtf8 ( encodeBase64 ( binaryData , _BOOL ) ) ; }
40592	public void init ( KeyGenerationParameters param ) { super . init ( param ) ; if ( strength == _NUM || strength == ( _NUM / _NUM ) ) { strength = DESParameters . DES_KEY_LENGTH ; } else if ( strength != DESParameters . DES_KEY_LENGTH ) { throw new IllegalArgumentException ( _CHAR DES key must be _CHAR + ( DESParameters . DES_KEY_LENGTH * _NUM ) + _CHAR bits long . '' ) ; } }
40593	public boolean addAll ( int index , RoleUnresolvedList roleList ) throws IllegalArgumentException , IndexOutOfBoundsException { if ( roleList == _NULL ) { String excMsg = _CHAR Invalid parameter _CHAR ; throw new IllegalArgumentException ( excMsg ) ; } return ( super . addAll ( index , roleList ) ) ; }
40611	public String toXMLString ( ) throws FSMsgException { return toXMLString ( _BOOL , _BOOL ) ; }
40613	public Object put ( final String varName , final Object value ) { final Object currentResult = current . put ( varName , value ) ; final Object parentResult = parent . put ( varName , value ) ; return currentResult != _NULL ? currentResult : parentResult ; }
40622	protected void handleJustify ( float justificationWidth ) { }
40625	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeString ( String x ) throws SQLException { attribs . add ( x ) ; }
40633	public boolean add ( E e ) { return map . put ( e , PRESENT ) == _NULL ; }
40637	public boolean isDegenerate ( ) { if ( segments . size ( ) > _NUM && closed ) { return _BOOL ; } for ( IShape segment : segments ) { Set < Point > points = new HashSet < > ( segment . getBasePoints ( ) ) ; if ( points . size ( ) != _NUM ) { return _BOOL ; } } return segments . size ( ) > _NUM || closed ; }
40639	void shutdown ( ) { cursor = NONE ; if ( nextIndex >= _NUM ) nextIndex = REMOVED ; if ( lastRet >= _NUM ) { lastRet = REMOVED ; lastItem = _NULL ; } prevTakeIndex = DETACHED ; }
40644	public synchronized void childChanged ( ChildState cs ) { if ( lastValidOffset == _NULL ) { lastValidOffset = cs ; } else if ( cs . getChildView ( ) . getStartOffset ( ) < lastValidOffset . getChildView ( ) . getStartOffset ( ) ) { lastValidOffset = cs ; } }
40649	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
40654	public boolean breaksFlow ( ) { return breakTag ; }
40660	@ Override public void mark ( int readAheadLimit ) throws IOException { fInputStream . mark ( readAheadLimit ) ; }
40670	public boolean isSpammed ( ) { return ! isWaitLongEnough ( ) && spamStrike > maxSpamRequest ; }
40676	public boolean markSupported ( ) { return in . markSupported ( ) ; }
40688	private static MethodHandle fillToRight ( int nargs ) { MethodHandle filler = FILL_ARRAY_TO_RIGHT [ nargs ] ; if ( filler != _NULL ) return filler ; filler = buildFiller ( nargs ) ; assert ( assertCorrectArity ( filler , nargs - LEFT_ARGS + _NUM ) ) ; return FILL_ARRAY_TO_RIGHT [ nargs ] = filler ; }
40690	public Set createUsers ( Map usersMap ) throws AMException , SSOException { String parentOrgDN = getOrganizationDN ( ) ; AMOrganizationImpl parentOrg = new AMOrganizationImpl ( super . token , parentOrgDN ) ; Set serviceNames = parentOrg . getOrgTypeAttributes ( ADMINISTRATION_SERVICE , REQUIRED_SERVICES_ATTR ) ; return createUsers ( usersMap , serviceNames ) ; }
40695	public static Remote exportObject ( Remote obj , ActivationID id , int port ) throws RemoteException { return exportObject ( obj , new ActivatableServerRef ( id , port ) ) ; }
40697	protected final void registerRelationDefinition ( RelationDefinition < ? , ? > d ) { String relName = d . getName ( ) ; relationDefinitions . put ( relName , d ) ; allRelationDefinitions . put ( relName , d ) ; registerReverseRelationDefinition ( d ) ; }
40698	public static void generateSelfSignedCertificate ( KeyStore ks , String ksType , String ksPath , KeyType keyType , String alias , char [ ] pwd , String dn , int validity ) throws KeyStoreException { PlatformIMPL . generateSelfSignedCertificate ( ks , ksType , ksPath , keyType , alias , pwd , dn , validity ) ; }
40704	public void updatedDoctypeString ( String newDoctypeString ) throws Exception { DoctypeToken dctoken = getDoctypeToken ( ) ; if ( dctoken != _NULL ) { dctoken . updateDoctypeString ( newDoctypeString ) ; } else { throw new Exception ( _CHAR FAILED to update DOCTYPE - no such element _CHAR ) ; } }
40711	public synchronized void reset ( ) { count = _NUM ; }
40717	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof PagesPerMinuteColor ) ; }
40718	public ListIterator < E > listIterator ( ) { return new ListItr ( _NUM ) ; }
40727	public void dragOver ( DragSourceDragEvent dsde ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragOver ( dsde ) ; } getDragSource ( ) . processDragOver ( dsde ) ; updateCurrentCursor ( getSourceActions ( ) , dsde . getTargetActions ( ) , OVER ) ; }
40731	private JapaneseDate withYear ( int year ) { return withYear ( getEra ( ) , year ) ; }
40732	public void installUI ( JComponent c ) { this . spinner = ( JSpinner ) c ; installDefaults ( ) ; installListeners ( ) ; maybeAdd ( createNextButton ( ) , _CHAR Next _CHAR ) ; maybeAdd ( createPreviousButton ( ) , _CHAR Previous _CHAR ) ; maybeAdd ( createEditor ( ) , _CHAR Editor _CHAR ) ; updateEnabledState ( ) ; installKeyboardActions ( ) ; }
40737	public boolean shouldUpdateStyleOnAncestorChanged ( ) { return _BOOL ; }
40739	private void siftDown ( int k , E x ) { if ( comparator != _NULL ) siftDownUsingComparator ( k , x ) ; else siftDownComparable ( k , x ) ; }
40740	AttributeSet convertToHTML ( AttributeSet from , MutableAttributeSet to ) { if ( to == _NULL ) { to = convAttr ; } to . removeAttributes ( to ) ; if ( writeCSS ) { convertToHTML40 ( from , to ) ; } else { convertToHTML32 ( from , to ) ; } return to ; }
40745	@ Override public boolean equals ( Object x ) { return this == x || x instanceof MethodType && equals ( ( MethodType ) x ) ; }
40749	protected boolean isJdk14Available ( ) { return isLogLibraryAvailable ( _CHAR Jdk14 _CHAR , _CHAR org . apache . commons . logging . impl . Jdk14Logger _CHAR ) ; }
40763	public boolean remove ( Object o ) { return map . remove ( o ) == PRESENT ; }
40770	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiLabelUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiLabelUI ) mui ) . uis , a ) ; }
40775	public static void copy ( InputStream input , Writer output ) throws IOException { InputStreamReader in = new InputStreamReader ( input ) ; copy ( in , output ) ; }
40778	@ Override public void reset ( ) throws IOException { synchronized ( lock ) { if ( isOpen ( ) ) { pos = markpos != - _NUM ? markpos : _NUM ; } else { throw new IOException ( _CHAR StringReader is closed _CHAR ) ; } } }
40782	public char charAt ( int index ) { return str ( ) . charAt ( index ) ; }
40785	public void logBindResponse ( BindOperation bindOperation ) { }
40792	protected void processEvent ( AWTEvent e ) { if ( e instanceof ItemEvent ) { processItemEvent ( ( ItemEvent ) e ) ; return ; } else if ( e instanceof ActionEvent ) { processActionEvent ( ( ActionEvent ) e ) ; return ; } super . processEvent ( e ) ; }
40793	public boolean _is_a ( String repository_id ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
40797	@ Override public void handle ( Callback [ ] callbacks ) throws UnsupportedCallbackException { }
40801	public List < X509Certificate > checkServerTrusted ( X509Certificate [ ] chain , String authType , String host ) throws CertificateException { return checkTrusted ( chain , authType , host , _BOOL ) ; }
40806	static Class lookUpFactoryClass ( String factoryId ) throws ConfigurationError { return lookUpFactoryClass ( factoryId , _NULL , _NULL ) ; }
40808	public final boolean isFirstOrDisposed ( ) { if ( disposed ) { return _BOOL ; } return this == getFirstWithContext ( ) || disposed ; }
40814	public static Keymap addKeymap ( String nm , Keymap parent ) { Keymap map = new DefaultKeymap ( nm , parent ) ; if ( nm != _NULL ) { getKeymapTable ( ) . put ( nm , map ) ; } return map ; }
40825	public boolean isLightWeightPopupEnabled ( ) { return lightWeightPopupEnabled ; }
40833	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
40836	private static final < T > int find ( MapElement < T > [ ] map , CharChunk name ) { return find ( map , name , name . getStart ( ) , name . getEnd ( ) ) ; }
40840	public boolean isComb ( ) { return getFieldFlag ( FF_COMB ) ; }
40842	public final boolean isWarnEnabled ( ) { return isLevelEnabled ( SimpleLog . LOG_LEVEL_WARN ) ; }
40849	public final boolean hasContended ( ) { return head != _NULL ; }
40857	public void paint ( Graphics g , Shape allocation ) { Rectangle a = ( Rectangle ) allocation ; painter . paint ( g , a . x , a . y , a . width , a . height , this ) ; super . paint ( g , a ) ; }
40865	public Set searchGroupContainers ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP_CONTAINER ) , getSearchFilter ( AMObject . GROUP_CONTAINER ) , wildcard , avPairs , level ) ; }
40872	public DateTimeFormatter withLocale ( Locale locale ) { if ( this . locale . equals ( locale ) ) { return this ; } return new DateTimeFormatter ( printerParser , locale , decimalStyle , resolverStyle , resolverFields , chrono , zone ) ; }
40903	public static WritableByteChannel newChannel ( OutputStream outputStream ) { return new OutputStreamChannel ( outputStream ) ; }
40920	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof UserPrincipal ) ) { return _BOOL ; } UserPrincipal that = ( UserPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
40925	public short readShort ( ) throws SQLException { Short attrib = ( Short ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . shortValue ( ) ; }
40929	public static double hypot ( double x , double y ) { return StrictMath . hypot ( x , y ) ; }
40930	public boolean equals ( TextHitInfo hitInfo ) { return hitInfo != _NULL && charIndex == hitInfo . charIndex && isLeadingEdge == hitInfo . isLeadingEdge ; }
40934	public LdapConnection connect ( final String host , final int port , final Options options ) throws LdapException { final ConnectionFactory factory = getConnectionFactory ( host , port , options ) ; return new LdapConnection ( factory . getConnection ( ) , options . get ( TRANSACTIONID_OPTION ) ) ; }
40937	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
40941	public void saveStore ( Store store , Handler < AsyncResult < Void >> resultHandler ) { delegate . saveStore ( store , resultHandler ) ; }
40945	protected void installKeyboardActions ( ) { InputMap inputMap = getInputMap ( JComponent . WHEN_FOCUSED ) ; SwingUtilities . replaceUIInputMap ( list , JComponent . WHEN_FOCUSED , inputMap ) ; LazyActionMap . installLazyActionMap ( list , BasicListUI . class , _CHAR List . actionMap _CHAR ) ; }
40947	public Period plusDays ( long daysToAdd ) { if ( daysToAdd == _NUM ) { return this ; } return create ( years , months , Math . toIntExact ( Math . addExact ( days , daysToAdd ) ) ) ; }
40953	private void advanceTimeThread ( ) throws InterruptedException { long timeThreadCurrentTime = TimeThread . getTime ( ) ; while ( timeThreadCurrentTime == TimeThread . getTime ( ) ) { Thread . sleep ( _NUM ) ; } }
40957	public static XMLReader createXMLReader ( String className ) throws SAXException { return loadClass ( NewInstance . getClassLoader ( ) , className ) ; }
40966	public void selectAllAccessibleSelection ( ) { }
40967	protected UndoableEdit editToBeRedone ( ) { int count = edits . size ( ) ; int i = indexOfNextAdd ; while ( i < count ) { UndoableEdit edit = edits . elementAt ( i ++ ) ; if ( edit . isSignificant ( ) ) { return edit ; } } return _NULL ; }
40970	public DiffOptions useExactMatching ( ) { this . useExactMatching = _BOOL ; return this ; }
40971	@ Override public int read ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; if ( pos == count ) { return - _NUM ; } return buf [ pos ++ ] ; } }
40972	private static BigInteger valueOf ( int val [ ] ) { return ( val [ _NUM ] > _NUM ? new BigInteger ( val , _NUM ) : new BigInteger ( val ) ) ; }
40985	public void erasePurchase ( String sku ) { if ( mPurchaseMap . containsKey ( sku ) ) mPurchaseMap . remove ( sku ) ; }
40986	public java . io . InputStream readBinaryStream ( ) throws SQLException { return ( java . io . InputStream ) getNextAttribute ( ) ; }
41001	public boolean isOpaque ( ) { return opaque ; }
41005	public static boolean containsMissingMessage ( TlsContext tlsContext ) { return ( getMissingMessagePosition ( tlsContext ) != - _NUM ) ; }
41008	public void skippedEntity ( String name ) throws org . xml . sax . SAXException { if ( ! m_shouldProcess ) return ; getCurrentProcessor ( ) . skippedEntity ( this , name ) ; }
41013	public Matcher reset ( CharSequence input ) { text = input ; return reset ( ) ; }
41020	public static ImageTypeSpecifier createFromBufferedImageType ( int bufferedImageType ) { if ( bufferedImageType >= BufferedImage . TYPE_INT_RGB && bufferedImageType <= BufferedImage . TYPE_BYTE_INDEXED ) { return getSpecifier ( bufferedImageType ) ; } else if ( bufferedImageType == BufferedImage . TYPE_CUSTOM ) { throw new IllegalArgumentException ( _CHAR Can not create from TYPE_CUSTOM ! _CHAR ) ; } else { throw new IllegalArgumentException ( _CHAR Invalid BufferedImage type ! _CHAR ) ; } }
41026	public static boolean deleteQuietly ( File file ) { if ( file == _NULL ) { return _BOOL ; } try { if ( file . isDirectory ( ) ) { cleanDirectory ( file ) ; } } catch ( Exception ignored ) { } try { return file . delete ( ) ; } catch ( Exception ignored ) { return _BOOL ; } }
41027	public void remove ( int childIndex ) { MutableTreeNode child = ( MutableTreeNode ) getChildAt ( childIndex ) ; children . removeElementAt ( childIndex ) ; child . setParent ( _NULL ) ; }
41032	public void close ( ) { buf = _NULL ; }
41036	public int read ( ) throws IOException { return ( read ( scratch , _NUM , _NUM ) != - _NUM ) ? scratch [ _NUM ] & _NUM : - _NUM ; }
41043	final boolean isInvalid ( ) { if ( status == _NULL ) { status = ( this . path . indexOf ( _CHAR ) < _NUM ) ? PathStatus . CHECKED : PathStatus . INVALID ; } return status == PathStatus . INVALID ; }
41049	protected KeyListener createKeyListener ( ) { return getHandler ( ) ; }
41057	public void auditAccessFailure ( String message ) { auditAccessFailure ( _NULL , message ) ; }
41060	public boolean hasAttribute ( AttributeDescription attributeDescription ) { return hasAttribute ( attributeDescription , _BOOL ) ; }
41077	public void sendUrgentData ( int data ) throws IOException { if ( ! getImpl ( ) . supportsUrgentData ( ) ) { throw new SocketException ( _CHAR Urgent data not supported _CHAR ) ; } getImpl ( ) . sendUrgentData ( data ) ; }
41083	public void log ( LogRecord record ) { if ( record instanceof ILogRecord ) { log ( ( ILogRecord ) record ) ; } else { Object obj = token . get ( ) ; log ( record , obj ) ; } }
41087	@ NonNull public static Interpolator path ( int controlX , int controlY ) { return PathInterpolatorCompat . create ( controlX , controlY ) ; }
41094	public void dragMouseMoved ( DragSourceDragEvent dsde ) { getDragSource ( ) . processDragMouseMoved ( dsde ) ; }
41102	public void updateUI ( ) { super . updateUI ( ) ; setForeground ( _NULL ) ; setBackground ( _NULL ) ; }
41119	public void logDeleteResponse ( DeleteOperation deleteOperation ) { }
41122	public void install ( JFormattedTextField ftf ) { super . install ( ftf ) ; if ( ftf != _NULL ) { Object value = ftf . getValue ( ) ; try { stringToValue ( valueToString ( value ) ) ; } catch ( ParseException pe ) { setEditValid ( _BOOL ) ; } } }
41130	public final String readInput ( LocalizableMessage prompt , final String defaultValue ) throws ClientException { return readInput ( prompt , defaultValue , _NULL ) ; }
41133	public void removePropertyChangeListener ( String propertyName , PropertyChangeListener listener ) { if ( listener == _NULL || propertyName == _NULL ) { return ; } listener = this . map . extract ( listener ) ; if ( listener != _NULL ) { this . map . remove ( propertyName , listener ) ; } }
41166	public static ConnectionFactory configureConnectionFactory ( final JsonValue configuration , final String name , final TrustManager trustManager , final X509KeyManager keyManager ) { return configureConnectionFactory ( configuration , name , trustManager , keyManager , _NULL ) ; }
41167	static MethodHandle makePairwiseConvert ( MethodHandle target , MethodType srcType , boolean strict , boolean monobox ) { MethodType dstType = target . type ( ) ; if ( srcType == dstType ) return target ; return makePairwiseConvertByEditor ( target , srcType , strict , monobox ) ; }
41168	private Set < Integer > computeExpectedServersInError ( List < Integer > eligibleServers , List < Integer > expectedServers ) { Set < Integer > expectedServersInError = new HashSet < > ( eligibleServers ) ; expectedServersInError . removeAll ( expectedServers ) ; return expectedServersInError ; }
41169	@ Override public void onSaveInstanceState ( @ NonNull Bundle bundle ) { }
41173	public static ImageTypeSpecifier createBanded ( ColorSpace colorSpace , int [ ] bankIndices , int [ ] bandOffsets , int dataType , boolean hasAlpha , boolean isAlphaPremultiplied ) { return new ImageTypeSpecifier . Banded ( colorSpace , bankIndices , bandOffsets , dataType , hasAlpha , isAlphaPremultiplied ) ; }
41177	@ NonNull public static Interpolator anticipateOvershoot ( ) { return new AnticipateOvershootInterpolator ( ) ; }
41179	public void showStatus ( String msg ) { getAppletContext ( ) . showStatus ( msg ) ; }
41195	public synchronized String generateTag ( ) { return Integer . toHexString ( rand . nextInt ( ) ) ; }
41199	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
41202	public void translate ( int deltaX , int deltaY ) { for ( int i = _NUM ; i < npoints ; i ++ ) { xpoints [ i ] += deltaX ; ypoints [ i ] += deltaY ; } if ( bounds != _NULL ) { bounds . translate ( deltaX , deltaY ) ; } }
41206	public void severe ( String msg ) { log ( Level . SEVERE , msg ) ; }
41214	public Query or ( List < Query > queries ) { innerQueries = queries ; return this ; }
41217	public int enumerate ( Thread [ ] threads ) { return enumerate ( threads , _BOOL ) ; }
41220	public ProtobufSchema withRootType ( String typeName ) throws IllegalArgumentException { if ( _rootType . getName ( ) . equals ( typeName ) ) { return this ; } return _source . forType ( typeName ) ; }
41221	public void repaint ( long time , int x , int y , int width , int height ) { if ( RepaintManager . HANDLE_TOP_LEVEL_PAINT ) { RepaintManager . currentManager ( this ) . addDirtyRegion ( this , x , y , width , height ) ; } else { super . repaint ( time , x , y , width , height ) ; } }
41232	public static boolean containsObjectClass ( final Entry entry , final Schema schema , final ObjectClass objectClass ) { return getObjectClasses ( entry , schema ) . contains ( objectClass ) ; }
41238	public ElemTemplateElement appendChildElem ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; switch ( type ) { case Constants . ELEMNAME_ATTRIBUTE : break ; default : error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; } return super . appendChild ( newChild ) ; }
41250	public void flush ( ) throws IOException { super . flush ( ) ; }
41255	public void addExportedOrganizationNames ( Set names ) throws SMSException , SSOException { }
41262	private void initResourceBundle ( UIDefaults table ) { table . setDefaultLocale ( Locale . getDefault ( ) ) ; table . addResourceBundle ( _CHAR com . sun . swing . internal . plaf . basic . resources . basic _CHAR ) ; }
41263	public boolean isSubjectExclusive ( String subjectName ) throws NameNotFoundException { return users . isSubjectExclusive ( subjectName ) ; }
41287	public synchronized int hashCode ( ) { if ( hashCode != - _NUM ) return hashCode ; hashCode = handler . hashCode ( this ) ; return hashCode ; }
41289	private int injectCallbacks ( final Callback [ ] realCallbacks , final int state ) throws AuthLoginException { if ( authenticationContext . hasMoreRequirements ( ) ) { if ( realCallbacks != _NULL ) { authenticationContext . submitRequirements ( realCallbacks ) ; } if ( authenticationContext . hasMoreRequirements ( ) ) { return injectAndReturn ( state ) ; } else { return finishLoginModule ( state ) ; } } return processError ( bundle . getString ( _CHAR invalidLoginState _CHAR ) , _CHAR SAML2 : : injectCallbacks ( ) : Authentication Module - invalid login state _CHAR ) ; }
41290	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
41302	static public XObject create ( Object val , XPathContext xctxt ) { return XObjectFactory . create ( val , xctxt ) ; }
41304	public void check ( final int api ) { if ( api == Opcodes . ASM4 ) { if ( visibleTypeAnnotations != _NULL && visibleTypeAnnotations . size ( ) > _NUM ) { throw new RuntimeException ( ) ; } if ( invisibleTypeAnnotations != _NULL && invisibleTypeAnnotations . size ( ) > _NUM ) { throw new RuntimeException ( ) ; } } }
41317	public synchronized void writeTo ( OutputStream out ) throws IOException { out . write ( buf , _NUM , count ) ; }
41330	public static IntegerArgument ldapsPortArgument ( final int defaultSecurePort ) throws ArgumentException { return IntegerArgument . builder ( _CHAR ldapsPort _CHAR ) . shortIdentifier ( OPTION_SHORT_USE_SSL ) . description ( INFO_ARGUMENT_DESCRIPTION_LDAPSPORT . get ( ) ) . range ( _NUM , _NUM ) . defaultValue ( defaultSecurePort ) . valuePlaceholder ( INFO_PORT_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
41343	private int policyConditionUsageCount ( String uuid ) throws SSOException , SMSException { return getUsageCount ( getPolicyBaseDN ( ) , getPolicySearchString ( uuid ) ) ; }
41346	@ Override public void onOptionsMenuClosed ( final Menu menu ) { super . onOptionsMenuClosed ( menu ) ; }
41349	protected void loadChildren ( ) { loadedChildren = _BOOL ; createChildren ( this , childValue ) ; }
41360	static Object createObject ( String factoryId , String fallbackClassName ) throws ConfigurationError { return createObject ( factoryId , _NULL , fallbackClassName ) ; }
41376	public ReplacesHeader createReplacesHeader ( String callId , String toTag , String fromTag ) throws ParseException { Replaces replaces = new Replaces ( ) ; replaces . setCallId ( callId ) ; replaces . setFromTag ( fromTag ) ; replaces . setToTag ( toTag ) ; return replaces ; }
41380	public void dispatchCharactersEvents ( org . xml . sax . ContentHandler ch ) throws org . xml . sax . SAXException { fsb ( ) . sendSAXcharacters ( ch , m_start , m_length ) ; }
41391	public Boolean isSSL ( ) { return isSSL ; }
41395	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof JobImpressionsSupported ) ; }
41408	public void configChanged ( ConfigurationActionEvent e ) { debug . message ( _CHAR DiscoServiceManager . configChanged . '' ) ; setValues ( ) ; }
41410	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; s . writeObject ( SerializationTester . test ( events ) ? events : _NULL ) ; }
41420	public boolean removeAttribute ( Attribute attribute , Collection < ? super ByteString > missingValues ) { attachment = _NULL ; AttributeDescription attrDesc = attribute . getAttributeDescription ( ) ; AttributeType attrType = attrDesc . getAttributeType ( ) ; if ( attrType . isObjectClass ( ) ) { return removeObjectClassAttribute ( attribute , missingValues ) ; } return removeNonObjectClassAttribute ( attribute , missingValues ) ; }
41423	public PushDeviceSettings createDeviceProfile ( ) { byte [ ] secretBytes = new byte [ SECRET_BYTE_LENGTH ] ; secureRandom . nextBytes ( secretBytes ) ; String sharedSecret = Base64 . encode ( secretBytes ) ; return new PushDeviceSettings ( sharedSecret , DEVICE_NAME ) ; }
41425	public String toString ( ) { return _prefix != _NULL ? ( _prefix + _CHAR : _CHAR + _localName ) : ( _namespaceURI != null ? ( '' { _CHAR + _namespaceURI + _CHAR } '' + _localName ) : _localName ) ; }
41442	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof SAML2Principal ) ) { return _BOOL ; } SAML2Principal that = ( SAML2Principal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
41446	public String toString ( ) { return _CHAR _CHAR + value ; }
41450	public Set searchAssignableDynamicGroups ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP ) , getSearchFilter ( AMObject . ASSIGNABLE_DYNAMIC_GROUP ) , wildcard , avPairs , level ) ; }
41467	public WorldCreator generator ( String generator , CommandSender output ) { this . generator = getGeneratorForName ( name , generator , output ) ; return this ; }
41471	private static final boolean subPartMatch ( String p , String t ) { return ( p == t ) || ( ( _NULL != p ) && ( ( t == WILD ) || p . equals ( t ) ) ) ; }
41491	static Promise < Void > blockingPromiseNotify ( final Duration duration ) { return new BlockingPromise < > ( duration ) ; }
41492	synchronized public void addDTM ( DTM dtm , int id ) { addDTM ( dtm , id , _NUM ) ; }
41494	public void die ( ) { alive = _BOOL ; }
41500	private static LocalTime create ( int hour , int minute , int second , int nanoOfSecond ) { if ( ( minute | second | nanoOfSecond ) == _NUM ) { return HOURS [ hour ] ; } return new LocalTime ( hour , minute , second , nanoOfSecond ) ; }
41501	public static < K , V > Map < K , V > unmodifiableMap ( Map < ? extends K , ? extends V > m ) { return new UnmodifiableMap < > ( m ) ; }
41502	public RunnerSearchConfig markTestsWithoutAnnotationAsIgnored ( ) { isToMarkTestsWithoutAnnotationAsIgnored = _BOOL ; return this ; }
41504	public int registerOrUpdateServer ( Map < ServerProperty , Object > serverProperties ) throws ADSContextException { try { registerServer ( serverProperties ) ; return _NUM ; } catch ( ADSContextException x ) { if ( x . getError ( ) == ErrorType . ALREADY_REGISTERED ) { updateServer ( serverProperties ) ; return _NUM ; } throw x ; } }
41525	public boolean containsSortKeys ( ) throws DirectoryException { return ! getSortKeys ( ) . isEmpty ( ) ; }
41526	public boolean isSubjectExclusive ( String subjectName ) throws NameNotFoundException { if ( ! users . containsKey ( subjectName ) ) { String [ ] objs = { subjectName } ; throw ( new NameNotFoundException ( ResBundleUtils . rbName , _CHAR name_not_present _CHAR , objs , subjectName , PolicyException . USER_COLLECTION ) ) ; } else { return ( ( QualifiedSubject ) users . get ( subjectName ) ) . isExclusive ( ) ; } }
41528	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof HTTPBasicPrincipal ) ) { return _BOOL ; } HTTPBasicPrincipal that = ( HTTPBasicPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
41533	EmulatedFields emulatedFields ( ) { return emulatedFields ; }
41534	public void write ( ByteArrayOutputStream tagBuffer ) { setTextEncoding ( ID3TextEncodingConversion . getTextEncoding ( getHeader ( ) , getTextEncoding ( ) ) ) ; if ( ! ( ( TextEncodedStringSizeTerminated ) getObject ( DataTypes . OBJ_TEXT ) ) . canBeEncoded ( ) ) { this . setTextEncoding ( ID3TextEncodingConversion . getUnicodeTextEncoding ( getHeader ( ) ) ) ; } super . write ( tagBuffer ) ; }
41538	public void initGenerationID ( long generationId ) { synchronized ( generationIDLock ) { this . generationId = generationId ; this . generationIdSavedStatus = _BOOL ; } }
41557	public boolean isNodeChild ( TreeNode aNode ) { boolean retval ; if ( aNode == _NULL ) { retval = _BOOL ; } else { if ( getChildCount ( ) == _NUM ) { retval = _BOOL ; } else { retval = ( aNode . getParent ( ) == this ) ; } } return retval ; }
41561	synchronized public void releaseXMLReader ( XMLReader reader ) { if ( m_readerManager != _NULL ) { m_readerManager . releaseXMLReader ( reader ) ; } }
41563	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { if ( isOutsideDocElem ( ) ) return ; String s = new String ( ch , start , length ) ; append ( m_doc . createTextNode ( s ) ) ; }
41571	protected MouseMotionListener createListMouseMotionListener ( ) { return getHandler ( ) ; }
41589	public synchronized void updateWindowAfterReplay ( ) { try { updateDoneCount ++ ; final Session session = connectedRS . get ( ) . session ; if ( updateDoneCount >= halfRcvWindow && session != _NULL ) { session . publish ( new WindowMsg ( updateDoneCount ) ) ; rcvWindow += updateDoneCount ; updateDoneCount = _NUM ; } } catch ( IOException e ) { } }
41595	public void write ( int c ) throws IOException { m_os . write ( c ) ; }
41599	public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) { }
41600	public void addSelectionPath ( TreePath path ) { if ( path != _NULL ) { TreePath [ ] toAdd = new TreePath [ _NUM ] ; toAdd [ _NUM ] = path ; addSelectionPaths ( toAdd ) ; } }
41617	public AMSearchResults searchPeopleContainers ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( PEOPLE_CONTAINER ) , getSearchFilter ( AMObject . PEOPLE_CONTAINER ) , wildcard , avPairs , searchControl ) ; }
41623	public void endComposition ( ) { }
41632	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiSeparatorUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiSeparatorUI ) mui ) . uis , a ) ; }
41637	public final Collection < AwtreeFindEntry > find_overlap_tree_entries_with_clearance ( ShapeTile p_shape , int p_layer , NetNosList p_ignore_net_nos , int p_clearance_class ) { if ( is_clearance_compensation_used ( ) ) return find_overlap_tree_entries ( p_shape , p_layer , p_ignore_net_nos ) ; else return find_overlap_tree_entries_with_clearance_fun ( p_shape , p_layer , p_ignore_net_nos , p_clearance_class ) ; }
41642	public AMSearchResults searchAllRoles ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { int [ ] objectTypes = { AMObject . ROLE , AMObject . FILTERED_ROLE } ; return searchObjects ( objectTypes , wildcard , avPairs , searchControl ) ; }
41645	public int hashCode ( ) { int h = _NUM ; for ( int i = _NUM ; i < keyUniverse . length ; i ++ ) { if ( _NULL != vals [ i ] ) { h += entryHashCode ( i ) ; } } return h ; }
41646	@ Nullable @ Override public ActionMode onWindowStartingSupportActionMode ( ActionMode . Callback callback ) { return _NULL ; }
41649	public static Component createHorizontalStrut ( int width ) { return new Filler ( new Dimension ( width , _NUM ) , new Dimension ( width , _NUM ) , new Dimension ( width , Short . MAX_VALUE ) ) ; }
41663	@ Deprecated public boolean requestDefaultFocus ( ) { Container nearestRoot = ( isFocusCycleRoot ( ) ) ? this : getFocusCycleRootAncestor ( ) ; if ( nearestRoot == _NULL ) { return _BOOL ; } Component comp = nearestRoot . getFocusTraversalPolicy ( ) . getDefaultComponent ( nearestRoot ) ; if ( comp != _NULL ) { comp . requestFocus ( ) ; return _BOOL ; } else { return _BOOL ; } }
41667	public Operation nextOperation ( ParallelWorkerThread workerThread ) { return retryNextOperation ( workerThread , _NUM ) ; }
41673	public Enumeration preorderEnumeration ( ) { return new PreorderEnumeration ( this ) ; }
41674	public boolean remove ( HttpConnection connection ) { TimeValues times = connectionToTimes . remove ( connection ) ; if ( times == _NULL ) { log . warn ( _CHAR Removing a connection that never existed ! _CHAR ) ; return _BOOL ; } else { return System . currentTimeMillis ( ) <= times . timeExpires ; } }
41679	public Object next ( ) { if ( hasNext ( ) ) { XMPPropertyInfo result = returnProperty ; returnProperty = _NULL ; return result ; } else { throw new NoSuchElementException ( _CHAR There are no more nodes to return _CHAR ) ; } }
41690	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
41694	public Object shallowClone ( ) { try { return super . clone ( ) ; } catch ( Exception e ) { return _NULL ; } }
41696	public void updateAttribute ( String name , String value ) { updateAttribute ( name , value , _BOOL ) ; }
41697	public void startDrag ( DragGestureEvent trigger , Cursor dragCursor , Image dragImage , Point dragOffset , Transferable transferable , DragSourceListener dsl ) throws InvalidDnDOperationException { startDrag ( trigger , dragCursor , dragImage , dragOffset , transferable , dsl , _NULL ) ; }
41698	public static int showConfirmDialog ( Component parentComponent , Object message ) throws HeadlessException { return showConfirmDialog ( parentComponent , message , UIManager . getString ( _CHAR OptionPane . titleText _CHAR ) , YES_NO_CANCEL_OPTION ) ; }
41701	public static NotificationSet parseXML ( String xml ) { NotificationSetParser parser = new NotificationSetParser ( xml ) ; return parser . parseXML ( ) ; }
41709	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiScrollBarUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiScrollBarUI ) mui ) . uis , a ) ; }
41731	public void insertIcon ( Icon g ) { MutableAttributeSet inputAttributes = getInputAttributes ( ) ; inputAttributes . removeAttributes ( inputAttributes ) ; StyleConstants . setIcon ( inputAttributes , g ) ; replaceSelection ( _CHAR _CHAR , _BOOL ) ; inputAttributes . removeAttributes ( inputAttributes ) ; }
41735	private ZonedDateTime resolveOffset ( ZoneOffset offset ) { if ( offset . equals ( this . offset ) == _BOOL && zone . getRules ( ) . isValidOffset ( dateTime , offset ) ) { return new ZonedDateTime ( dateTime , offset , zone ) ; } return this ; }
41738	public boolean isQuiet ( ) { return this . quiet ; }
41742	public void characters ( char ch [ ] , int start , int length ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . characters ( ch , start , length ) ; }
41747	public void compose ( StylesheetRoot sroot ) throws TransformerException { super . compose ( sroot ) ; java . util . Vector vnames = sroot . getComposeState ( ) . getVariableNames ( ) ; if ( _NULL != m_test ) m_test . fixupVariables ( vnames , sroot . getComposeState ( ) . getGlobalsSize ( ) ) ; }
41758	protected String createNodeVersion ( String nodeId ) throws GroundException { return this . factories . getNodeVersionFactory ( ) . create ( new HashMap < > ( ) , _NULL , _NULL , new HashMap < > ( ) , nodeId , new ArrayList < > ( ) ) . getId ( ) ; }
41771	public static String toLatinAlphabetNumber ( int number , boolean upperCase ) { return upperCase ? toLatinAlphabetNumberUpperCase ( number ) : toLatinAlphabetNumberLowerCase ( number ) ; }
41778	public static void writeLines ( Collection < ? > lines , String lineEnding , OutputStream output ) throws IOException { writeLines ( lines , lineEnding , output , Charset . defaultCharset ( ) ) ; }
41779	public Set searchDynamicGroups ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP ) , getSearchFilter ( AMObject . DYNAMIC_GROUP ) , wildcard , avPairs , level ) ; }
41786	@ Deprecated public URL toURL ( ) throws MalformedURLException { if ( isInvalid ( ) ) { throw new MalformedURLException ( _CHAR Invalid file path _CHAR ) ; } return new URL ( _CHAR file _CHAR , _CHAR _CHAR , slashify ( getAbsolutePath ( ) , isDirectory ( ) ) ) ; }
41788	public boolean isStandardImageMetadataFormatSupported ( ) { return supportsStandardImageMetadataFormat ; }
41789	public SecretBlock genSecretBlock ( float [ ] coords , int stageZone ) { return new SecretBlock ( player , stageContainer , stageZone , coords [ _NUM ] , coords [ _NUM ] , ASPECT_LENGTH , tile4 , yolo ) ; }
41791	public void writeExpression ( Expression oldExp ) { Object oldValue = getValue ( oldExp ) ; if ( get ( oldValue ) != _NULL ) { return ; } bindings . put ( oldValue , ( Expression ) cloneStatement ( oldExp ) ) ; writeObject ( oldValue ) ; }
41827	public void valueForPathChanged ( TreePath path , Object newValue ) { MutableTreeNode aNode = ( MutableTreeNode ) path . getLastPathComponent ( ) ; aNode . setUserObject ( newValue ) ; nodeChanged ( aNode ) ; }
41838	public DecimalStyle withDecimalSeparator ( char decimalSeparator ) { if ( decimalSeparator == this . decimalSeparator ) { return this ; } return new DecimalStyle ( zeroDigit , positiveSign , negativeSign , decimalSeparator ) ; }
41841	private static int sameBaselineUpTo ( Font font , char [ ] text , int start , int limit ) { return limit ; }
41850	public static void paintComponent ( Graphics g , Component c , Container p , int x , int y , int w , int h ) { getCellRendererPane ( c , p ) . paintComponent ( g , c , p , x , y , w , h , _BOOL ) ; }
41852	public PlaSegmentInt sort_endpoints_in_x_y ( ) { boolean swap_endlines = start_point ( ) . compare_x_y ( end_point ( ) ) > _NUM ; if ( swap_endlines ) return new PlaSegmentInt ( end , middle , start ) ; else return this ; }
41869	protected String paramString ( ) { return super . paramString ( ) ; }
41873	public boolean isPrimaryServer ( String serverID ) { return isSiteEnabled ( ) ? getSiteID ( ) . equals ( serverID ) : localServerID . equals ( serverID ) ; }
41879	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { Reject . ifFalse ( tokenFilter . getReturnFields ( ) . isEmpty ( ) ) ; handler . processResults ( adapter . query ( tokenFilter ) ) ; }
41881	private boolean isCauseConcurrentModificationException ( Throwable ex , int maxLevels ) { return isCauseException ( ex , OConcurrentModificationException . class , maxLevels ) ; }
41889	public static String reverse ( String encoding ) { return s_revhash . get ( encoding . toUpperCase ( Locale . ENGLISH ) ) ; }
41910	public static ResponseSet parseXML ( String xml ) { ResponseSetParser parser = new ResponseSetParser ( xml ) ; return parser . parseXML ( ) ; }
41918	public void beginDisplay ( DisplayEvent event ) { redirectToXui ( getRequestContext ( ) . getRequest ( ) , getRedirectRealm ( this ) , MessageFormat . format ( _CHAR realms / { _NUM } / scripts _CHAR , getCurrentRealmEncoded ( ) ) ) ; }
41925	@ Override public String chooseServerAlias ( final String keyType , final Principal [ ] issuers , final Socket socket ) { if ( keyManager != _NULL ) { return keyManager . chooseServerAlias ( keyType , issuers , socket ) ; } return _NULL ; }
41926	public static MethodHandle arrayElementSetter ( Class < ? > arrayClass ) throws IllegalArgumentException { return MethodHandleImpl . makeArrayElementAccessor ( arrayClass , _BOOL ) ; }
41940	public TimeoutEvent extractCollectedTimeoutEvent ( ) { if ( timeoutCollector == _NULL ) throw new TckInternalError ( _CHAR A timeout collect was attempted when the timeoutCollector was _NULL _CHAR ) ; TimeoutEvent collectedEvent = timeoutCollector . collectedEvent ; timeoutCollector . provider . removeSipListener ( timeoutCollector ) ; resetCollectors ( ) ; return collectedEvent ; }
41945	public boolean isHidden ( ) { SecurityManager security = System . getSecurityManager ( ) ; if ( security != _NULL ) { security . checkRead ( path ) ; } if ( isInvalid ( ) ) { return _BOOL ; } return ( ( fs . getBooleanAttributes ( this ) & FileSystem . BA_HIDDEN ) != _NUM ) ; }
41953	public static CRAMMD5SASLBindRequest unmodifiableCRAMMD5SASLBindRequest ( final CRAMMD5SASLBindRequest request ) { if ( request instanceof UnmodifiableCRAMMD5SASLBindRequestImpl ) { return request ; } return new UnmodifiableCRAMMD5SASLBindRequestImpl ( request ) ; }
41955	public final boolean isSupported ( String feature , String version ) { return implementation . hasFeature ( feature , version ) ; }
41963	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
41969	public static void sort ( long [ ] a ) { DualPivotQuicksort . sort ( a , _NUM , a . length - _NUM , _NULL , _NUM , _NUM ) ; }
41970	public void replaceSubject ( String name , Subject subject ) throws NameNotFoundException { users . replaceSubject ( name , subject , _BOOL ) ; }
41992	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeClob ( Clob x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialClob ( x ) ) ; } }
42001	public void initialize ( ) throws IOException { cache . initialize ( ) ; }
42011	public static EntryChangeNotificationResponseControl newControl ( final PersistentSearchChangeType type , final String previousName , final long changeNumber ) { return new EntryChangeNotificationResponseControl ( _BOOL , type , DN . valueOf ( previousName ) , changeNumber ) ; }
42024	public int hashCode ( ) { int result = _NUM ; int n = members . length ; for ( int i = _NUM ; i < n ; ++ i ) { result += members [ i ] [ _NUM ] + members [ i ] [ _NUM ] ; } return result ; }
42042	public synchronized void mark ( int readlimit ) { }
42048	public static String makeRelatedSessionID ( String encryptedID , SessionID prototype ) throws SessionException { prototype . parseSessionString ( ) ; return makeSessionID ( encryptedID , prototype . getExtension ( ) , prototype . tail ) ; }
42049	public void characters ( char ch [ ] , int start , int length ) throws SAXException { }
42088	public static void writeLines ( File file , Collection < ? > lines ) throws IOException { writeLines ( file , _NULL , lines , _NULL , _BOOL ) ; }
42090	public static String defaultGCCreateDuringOrgConfig ( ) { initialize ( ) ; return ( defaultGCCreateDuringOrgConfig ) ; }
42091	public PdfCanvas moveTextWithLeading ( float x , float y ) { currentGs . setLeading ( - y ) ; contentStream . getOutputStream ( ) . writeFloat ( x ) . writeSpace ( ) . writeFloat ( y ) . writeSpace ( ) . writeBytes ( TD ) ; return this ; }
42097	public final boolean hasContended ( ) { return head != _NULL ; }
42105	public void _servant_postinvoke ( ServantObject servant ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
42109	public boolean isShowContainerOnly ( ) { return showContainerOnly ; }
42120	public void paint ( Graphics g , Shape a ) { Rectangle alloc = a . getBounds ( ) ; c . paintIcon ( getContainer ( ) , g , alloc . x , alloc . y ) ; }
42123	public static char [ ] toCharArray ( Reader input ) throws IOException { CharArrayWriter sw = new CharArrayWriter ( ) ; copy ( input , sw ) ; return sw . toCharArray ( ) ; }
42132	@ Override public void addValue ( final String valueString ) { final String actualValue = namesToValues . get ( valueString ) ; if ( actualValue != _NULL ) { super . addValue ( actualValue ) ; } }
42136	public Duration minusHours ( long hoursToSubtract ) { return ( hoursToSubtract == Long . MIN_VALUE ? plusHours ( Long . MAX_VALUE ) . plusHours ( _NUM ) : plusHours ( - hoursToSubtract ) ) ; }
42151	boolean isFinished ( ) { if ( lastValid > pos ) { return _BOOL ; } if ( lastActiveFilter >= _NUM ) { return activeFilters [ lastActiveFilter ] . isFinished ( ) ; } else { return _BOOL ; } }
42159	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiSplitPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiSplitPaneUI ) mui ) . uis , a ) ; }
42163	protected PropertyChangeListener createActionPropertyChangeListener ( Action a ) { return new TextFieldActionPropertyChangeListener ( this , a ) ; }
42169	public String toGnuStepASCIIPropertyList ( ) { StringBuilder ascii = new StringBuilder ( ) ; toASCIIGnuStep ( ascii , _NUM ) ; ascii . append ( NEWLINE ) ; return ascii . toString ( ) ; }
42172	private boolean isSilentStart ( String value ) { boolean result = _BOOL ; for ( int i = _NUM ; i < SILENT_START . length ; i ++ ) { if ( value . startsWith ( SILENT_START [ i ] ) ) { result = _BOOL ; break ; } } return result ; }
42181	public void startElement ( String name , AttributeList attributes ) throws SAXException { }
42184	private void checkValueType ( CompositeData value ) { if ( value == _NULL ) { throw new NullPointerException ( _CHAR Argument value can not be _NULL . _CHAR ) ; } if ( ! tabularType . getRowType ( ) . isValue ( value ) ) { throw new InvalidOpenTypeException ( _CHAR Argument value _CHAR_CHAR_CHAR_CHAR_CHAR s row type [ _CHAR + tabularType . getRowType ( ) + _CHAR ] . _CHAR ) ; } }
42195	public static boolean equalsOnSystem ( String filename1 , String filename2 ) { return equals ( filename1 , filename2 , _BOOL , IOCase . SYSTEM ) ; }
42201	public int doRead ( ByteChunk chunk ) throws IOException { int n = inputBuffer . doRead ( chunk ) ; if ( n > _NUM ) { bytesRead += n ; } return n ; }
42203	protected void processWindowEvent ( final WindowEvent e ) { super . processWindowEvent ( e ) ; if ( e . getID ( ) == WindowEvent . WINDOW_CLOSING ) { switch ( defaultCloseOperation ) { case HIDE_ON_CLOSE : setVisible ( _BOOL ) ; break ; case DISPOSE_ON_CLOSE : dispose ( ) ; break ; case EXIT_ON_CLOSE : System . exit ( _NUM ) ; break ; case DO_NOTHING_ON_CLOSE : default : } } }
42208	public static void unregister ( ActivationID id ) throws UnknownObjectException , ActivationException , RemoteException { ActivationGroup . getSystem ( ) . unregisterObject ( id ) ; }
42214	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiFileChooserUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiFileChooserUI ) mui ) . uis , a ) ; }
42220	public void error ( String msg , Throwable t ) { if ( debugLevel > Debug . OFF ) { formatAndWrite ( _CHAR ERROR : _CHAR , msg , t ) ; } }
42231	@ Override public void backgroundProcess ( ) { if ( clusterDeployer != _NULL ) clusterDeployer . backgroundProcess ( ) ; if ( isHeartbeatBackgroundEnabled ( ) && channel != _NULL ) channel . heartbeat ( ) ; fireLifecycleEvent ( Lifecycle . PERIODIC_EVENT , _NULL ) ; }
42248	public SSOToken createSSOToken ( String tokenId ) throws UnsupportedOperationException , SSOException { for ( SSOProviderPlugin ssoProvider : getSsoProviderPlugins ( ) ) { if ( ssoProvider . isApplicable ( tokenId ) ) { return ssoProvider . createSSOToken ( tokenId ) ; } } if ( dProProvider != _NULL ) return ( dProProvider . createSSOToken ( tokenId ) ) ; else return ( grappaProvider . createSSOToken ( tokenId ) ) ; }
42259	public void addOrReplace ( E element ) { remove ( element ) ; add ( element ) ; }
42261	@ Override public void bind ( Name name , Object obj ) throws NamingException { bind ( name , obj , _BOOL ) ; }
42265	public void write ( int b ) throws IOException { out . write ( b ) ; }
42276	public int clockSequence ( ) { if ( version != _NUM ) { throw new UnsupportedOperationException ( ) ; } return clockSequence ; }
42280	@ NonNull public static Interpolator cycle ( int cycles ) { return new CycleInterpolator ( cycles ) ; }
42288	public char next ( ) { return pos < in . length ( ) ? in . charAt ( pos ++ ) : _CHAR ; }
42299	public Object [ ] toArray ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return q . toArray ( ) ; } finally { lock . unlock ( ) ; } }
42302	public void updateUI ( ) { setUI ( ( ColorChooserUI ) UIManager . getUI ( this ) ) ; }
42303	public void reset ( ) { contexts = new Context [ _NUM ] ; namespaceDeclUris = _BOOL ; contextPos = _NUM ; contexts [ contextPos ] = currentContext = new Context ( ) ; currentContext . declarePrefix ( _CHAR xml _CHAR , XMLNS ) ; }
42316	public void performPostAdd ( ServerManagedObject < ? > managedObject ) throws ConfigException { }
42325	public synchronized Object send ( String functionName , Object param , String cookies ) throws Exception { return ( send ( encodeMessage ( functionName , param ) , cookies ) ) ; }
42329	@ Deprecated public static List < Player > matchPlayer ( String name ) { return server . matchPlayer ( name ) ; }
42333	public void jspError ( Node n , Exception e , String errCode , String ... args ) throws JasperException { dispatch ( n . getStart ( ) , errCode , args , e ) ; }
42343	public InputSource resolveEntity ( String publicId , String systemId ) throws IOException , SAXException { return _NULL ; }
42346	public boolean isInNative ( ) { return inNative ; }
42352	public void replace ( DN baseDN , ServerState serverState ) { if ( serverState == _NULL ) { throw new IllegalArgumentException ( _CHAR ServerState must not be _NULL _CHAR ) ; } list . put ( baseDN , serverState ) ; }
42353	public void clear ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { q . clear ( ) ; } finally { lock . unlock ( ) ; } }
42363	public static void deregisterSupportedControl ( String controlOID ) { DirectoryServer . deregisterSupportedControl ( controlOID ) ; }
42374	@ Override public void rebind ( Name name , Object obj ) throws NamingException { getBoundContext ( ) . rebind ( parseName ( name ) , obj ) ; }
42375	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
42376	public Clob readClob ( ) throws SQLException { return ( Clob ) getNextAttribute ( ) ; }
42387	void addNewEntry ( K key , V value , int hash , int index ) { table [ index ] = new HashMapEntry < K , V > ( key , value , hash , table [ index ] ) ; }
42426	public synchronized boolean isConsumer ( ImageConsumer ic ) { return ( proxies != _NULL && proxies . containsKey ( ic ) ) ; }
42436	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiPanelUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiPanelUI ) mui ) . uis , a ) ; }
42437	public boolean export_to_dsn_file ( OutputStream p_output_stream , String p_design_name , boolean p_compat_mode ) { if ( board_is_read_only || p_output_stream == _NULL ) return _BOOL ; DsnWriteSesFile writer = new DsnWriteSesFile ( this , p_output_stream ) ; return writer . write ( p_design_name , p_compat_mode ) ; }
42443	@ Override public void close ( ) throws SQLException { if ( ! isClosedInternal ( ) ) { try { passivate ( ) ; } finally { setClosedInternal ( _BOOL ) ; pooledConnection . notifyListeners ( ) ; } } }
42444	public void displayFieldInvalid ( FieldName fieldName , boolean invalid ) { getCurrentStepPanel ( ) . displayFieldInvalid ( fieldName , invalid ) ; }
42453	@ Override public boolean isSecure ( ) { return _BOOL ; }
42455	private Issuer fromSupportedDomainNames ( final String givenDomainName ) throws HeapException { for ( final Issuer definedIssuer : heap . getAll ( Issuer . class ) ) { final List < Pattern > domainNames = definedIssuer . getSupportedDomains ( ) ; for ( final Pattern domainName : domainNames ) { if ( domainName . matcher ( givenDomainName ) . matches ( ) ) { return definedIssuer ; } } } return _NULL ; }
42456	public int indexOfIdenticalObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( int i = _NUM ; i < array . length ; i ++ ) { if ( array [ i ] == nso ) { return i ; } } return - _NUM ; }
42457	private void assertBlockedForLessThanTimeout ( long startTime , int TIMEOUT ) { long endTime = System . currentTimeMillis ( ) ; long callTime = endTime - startTime ; assertTrue ( NO_TIMEOUT_RS_SLEEP_TIME <= callTime && callTime <= TIMEOUT ) ; }
42467	public final char yycharat ( int pos ) { return zzBuffer [ zzStartRead + pos ] ; }
42470	public final boolean isFatalEnabled ( ) { return isLevelEnabled ( SimpleLog . LOG_LEVEL_FATAL ) ; }
42486	public synchronized BukkitTask runTaskTimerAsynchronously ( Plugin plugin , long delay , long period ) throws IllegalArgumentException , IllegalStateException { checkState ( ) ; return setupId ( Bukkit . getScheduler ( ) . runTaskTimerAsynchronously ( plugin , ( Runnable ) this , delay , period ) ) ; }
42492	public static String decryptOrDeobfuscate ( String encrypted ) { if ( encrypted == _NULL ) { return _NULL ; } final String decrypted ; try { decrypted = new String ( CryptoUtil . unfold ( encrypted ) ) ; } catch ( GeneralSecurityException ex ) { throw new RuntimeException ( _CHAR Failed to decrypt / de - obfuscate value of string _CHAR , ex ) ; } return decrypted ; }
42510	public boolean equals ( Object obj ) { return obj instanceof JapaneseImperialCalendar && super . equals ( obj ) ; }
42511	public int countTokens ( ) { int count = _NUM ; int currpos = currentPosition ; while ( currpos < maxPosition ) { currpos = skipDelimiters ( currpos ) ; if ( currpos >= maxPosition ) break ; currpos = scanToken ( currpos ) ; count ++ ; } return count ; }
42520	public void putProperty ( String key , String value ) { internalPutProperty ( key , value ) ; }
42533	protected boolean validatePendingRemove ( Object targetChild ) { return _BOOL ; }
42541	@ Override public JapaneseDate date ( int prolepticYear , int month , int dayOfMonth ) { return new JapaneseDate ( LocalDate . of ( prolepticYear , month , dayOfMonth ) ) ; }
42546	public Style addStyle ( String nm , Style parent ) { StyledDocument doc = getStyledDocument ( ) ; return doc . addStyle ( nm , parent ) ; }
42549	public static DigestMD5SASLBindRequest unmodifiableDigestMD5SASLBindRequest ( final DigestMD5SASLBindRequest request ) { if ( request instanceof UnmodifiableDigestMD5SASLBindRequestImpl ) { return request ; } return new UnmodifiableDigestMD5SASLBindRequestImpl ( request ) ; }
42567	public void recomposeTemplates ( boolean flushFirst ) throws TransformerException { }
42577	public boolean isValid ( ) { return JEditorPaneAccessibleHypertextSupport . this . linksValid ; }
42593	@ Override public void backgroundProcess ( ) { super . backgroundProcess ( ) ; if ( ! getState ( ) . isAvailable ( ) ) return ; if ( getServlet ( ) instanceof PeriodicEventListener ) { ( ( PeriodicEventListener ) getServlet ( ) ) . periodicEvent ( ) ; } }
42604	public String toString ( ) { String string = getClass ( ) . getName ( ) ; string += _CHAR [ _CHAR + paramString ( ) + _CHAR ] _CHAR ; return string ; }
42611	public boolean remove ( Attribute attribute ) { return attribute != _NULL && attrMap . remove ( attribute . getCategory ( ) ) != _NULL ; }
42620	public final String toString ( ) { int length = ( m_lastChunk << m_chunkBits ) + m_firstFree ; return getString ( new StringBuffer ( length ) , _NUM , _NUM , length ) . toString ( ) ; }
42622	public void pushRTFContext ( ) { m_last_pushed_rtfdtm . push ( m_which_rtfdtm ) ; if ( _NULL != m_rtfdtm_stack ) ( ( SAX2RTFDTM ) ( getRTFDTM ( ) ) ) . pushRewindMark ( ) ; }
42678	public boolean implies ( Permission p ) { if ( ! ( p instanceof PropertyPermission ) ) return _BOOL ; PropertyPermission that = ( PropertyPermission ) p ; return ( ( this . mask & that . mask ) == that . mask ) && super . implies ( that ) ; }
42684	public Object send ( String functionName , Object params [ ] , String lbcookie , String cookies ) throws Exception { return ( send ( encodeMessage ( functionName , params ) , lbcookie , cookies ) ) ; }
42689	public final int readUnsignedShort ( ) throws IOException { return ( ( int ) readShort ( ) ) & _NUM ; }
42695	public static byte [ ] decodeBase64 ( final byte [ ] base64Data ) { return decodeBase64 ( base64Data , _NUM , base64Data . length ) ; }
42699	@ VisibleForTesting void clear ( ) { sessionInfoCache . clear ( ) ; }
42701	public void visitEnd ( ) { if ( fv != _NULL ) { fv . visitEnd ( ) ; } }
42712	public static boolean isWebSocketUpgradeRequest ( ServletRequest request , ServletResponse response ) { return ( ( request instanceof HttpServletRequest ) && ( response instanceof HttpServletResponse ) && headerContainsToken ( ( HttpServletRequest ) request , Constants . UPGRADE_HEADER_NAME , Constants . UPGRADE_HEADER_VALUE ) && _CHAR GET _CHAR . equals ( ( ( HttpServletRequest ) request ) . getMethod ( ) ) ) ; }
42740	public void addLayoutComponent ( Component comp , Object constraints ) { synchronized ( comp . getTreeLock ( ) ) { if ( ( constraints == _NULL ) || ( constraints instanceof String ) ) { addLayoutComponent ( ( String ) constraints , comp ) ; } else { throw new IllegalArgumentException ( _CHAR can not add to layout : constraint must be a string ( or _NULL ) _CHAR ) ; } } }
42754	public void addAncestorListener ( AncestorListener listener ) { AncestorNotifier ancestorNotifier = getAncestorNotifier ( ) ; if ( ancestorNotifier == _NULL ) { ancestorNotifier = new AncestorNotifier ( this ) ; putClientProperty ( JComponent_ANCESTOR_NOTIFIER , ancestorNotifier ) ; } ancestorNotifier . addAncestorListener ( listener ) ; }
42755	public void remove ( Component comp ) { if ( comp == rootPane ) { super . remove ( comp ) ; } else { getContentPane ( ) . remove ( comp ) ; } }
42772	public String encodeMessage ( String function , Object param ) { Object params [ ] = _NULL ; if ( param != _NULL ) { params = new Object [ _NUM ] ; params [ _NUM ] = param ; } return ( encodeMessage ( function , params ) ) ; }
42774	private void addWorkerFailed ( Worker w ) { final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { if ( w != _NULL ) workers . remove ( w ) ; decrementWorkerCount ( ) ; tryTerminate ( ) ; } finally { mainLock . unlock ( ) ; } }
42777	public void saveAuthenticatedPrincipal ( String principalName ) { authenticatedPrincipals . add ( principalName ) ; requestMap . put ( ISAuthConstants . AUTHENTICATED_PRINCIPALS , StringUtils . join ( authenticatedPrincipals , _CHAR | _CHAR ) ) ; }
42795	public void processingInstruction ( String target , String data ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . processingInstruction ( target , data ) ; }
42800	public int compareTo ( CollationKey target ) { int result = key . compareTo ( ( ( RuleBasedCollationKey ) ( target ) ) . key ) ; if ( result <= Collator . LESS ) return Collator . LESS ; else if ( result >= Collator . GREATER ) return Collator . GREATER ; return Collator . EQUAL ; }
42804	public boolean isStrikeThrough ( ) { sync ( ) ; return strike ; }
42813	public ShapelessRecipe removeIngredient ( int count , MaterialData ingredient ) { return removeIngredient ( count , ingredient . getItemType ( ) , ingredient . getData ( ) ) ; }
42819	private synchronized void unlinkStyleSheet ( StyleSheet ss , int index ) { if ( resolvedStyles . size ( ) > _NUM ) { Enumeration < ResolvedStyle > values = resolvedStyles . elements ( ) ; while ( values . hasMoreElements ( ) ) { ResolvedStyle rule = values . nextElement ( ) ; rule . removeExtendedStyleAt ( index ) ; } } }
42829	public boolean reset ( ) { boolean wasReset = _BOOL ; if ( super . reset ( ) ) { resetToStream ( ) ; wasReset = _BOOL ; } return wasReset ; }
42834	public void notationDecl ( String name , String publicId , String systemId ) { getCurrentProcessor ( ) . notationDecl ( this , name , publicId , systemId ) ; }
42843	public final int readUnsignedShort ( ) throws IOException { int ch1 = in . read ( ) ; int ch2 = in . read ( ) ; if ( ( ch1 | ch2 ) < _NUM ) throw new EOFException ( ) ; return ( ch1 << _NUM ) + ( ch2 << _NUM ) ; }
42857	@ Override public int lengthOfMonth ( ) { return isoDate . lengthOfMonth ( ) ; }
42858	public double length ( ) { return Math . sqrt ( NumberConversions . square ( x ) + NumberConversions . square ( y ) + NumberConversions . square ( z ) ) ; }
42874	@ Override public synchronized int read ( ) { return pos < count ? buf [ pos ++ ] & _NUM : - _NUM ; }
42875	public ContactHeader createContactHeader ( ) { Contact contact = new Contact ( ) ; contact . setWildCardFlag ( _BOOL ) ; contact . setExpires ( _NUM ) ; return contact ; }
42880	@ Override public String toString ( ) { return holder . toString ( ) ; }
42885	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeURL ( java . net . URL url ) throws SQLException { if ( url == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialDatalink ( url ) ) ; } }
42893	public synchronized Iterator < NSObject > objectIterator ( ) { return set . iterator ( ) ; }
42897	public void close ( ) throws IOException { long length = cache . getLength ( ) ; seek ( length ) ; flushBefore ( length ) ; super . close ( ) ; cache . reset ( ) ; cache = _NULL ; stream = _NULL ; }
42898	public MethodHandle findStaticGetter ( Class < ? > refc , String name , Class < ? > type ) throws NoSuchFieldException , IllegalAccessException { MemberName field = resolveOrFail ( REF_getStatic , refc , name , type ) ; return getDirectField ( REF_getStatic , refc , field ) ; }
42913	public void paint ( Graphics g , Shape alloc ) { synchronized ( locator ) { locator . setAllocation ( alloc ) ; locator . paintChildren ( g ) ; } }
42922	public static AuthXMLRequest parseXML ( String xml , HttpServletRequest req ) throws AuthException { debug . message ( _CHAR Calling AuthXMLRequestParser _CHAR ) ; AuthXMLRequestParser authParser = new AuthXMLRequestParser ( xml , req ) ; debug . message ( _CHAR After AuthXMLRequestParser _CHAR ) ; return authParser . parseXML ( ) ; }
42928	public Boolean isSingleThreadModel ( ) { if ( singleThreadModel || instance != _NULL ) { return Boolean . valueOf ( singleThreadModel ) ; } return _NULL ; }
42935	@ Override protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { super . onSizeChanged ( w , h , oldw , oldh ) ; setupBounds ( w , h ) ; setupPaints ( ) ; invalidate ( ) ; }
42943	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
42948	public void logModifyDNRequest ( ModifyDNOperation modifyDNOperation ) { }
42954	public static void initializeProperties ( String propertyName , String propertyValue ) { Properties newProps = new Properties ( ) ; newProps . put ( propertyName , propertyValue ) ; initializeProperties ( newProps , _BOOL , _BOOL ) ; }
42977	public String encodeURL ( HttpServletResponse res , String url , Session session ) { return encodeURL ( res , url , sessionCookies . getCookieName ( ) , session ) ; }
43001	@ Override public int handshake ( ) throws IOException { return handshakeInternal ( _BOOL ) ; }
43014	public void removeVetoableChangeListener ( VetoableChangeListener listener ) { if ( listener == _NULL ) { return ; } if ( listener instanceof VetoableChangeListenerProxy ) { VetoableChangeListenerProxy proxy = ( VetoableChangeListenerProxy ) listener ; removeVetoableChangeListener ( proxy . getPropertyName ( ) , proxy . getListener ( ) ) ; } else { this . map . remove ( _NULL , listener ) ; } }
43020	private void validatePurgeHistoricalOptions ( LocalizableMessageBuilder buf ) { try { if ( ! isInteractive ( ) && ! connectionArgumentsPresent ( ) ) { taskArgs . validateArgsIfOffline ( ) ; } else { taskArgs . validateArgs ( ) ; } } catch ( ClientException | ArgumentException e ) { addMessage ( buf , e . getMessageObject ( ) ) ; } }
43030	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
43036	public void insertRow ( final int row , final Vector rowData ) { this . dataVector . insertElementAt ( rowData , row ) ; justifyRows ( row , row + _NUM ) ; fireTableRowsInserted ( row , row ) ; }
43042	public void firePropertyChange ( String propertyName , boolean oldValue , boolean newValue ) { firePropertyChange ( propertyName , Boolean . valueOf ( oldValue ) , Boolean . valueOf ( newValue ) ) ; }
43055	public void flush ( ) throws IOException { out . flush ( ) ; }
43058	public char next ( ) { pos += _NUM ; int end = offset + count ; if ( pos >= end ) { pos = end ; return DONE ; } return current ( ) ; }
43075	public void executeFallback ( TransformerImpl transformer ) throws TransformerException { int parentElemType = m_parentNode . getXSLToken ( ) ; if ( Constants . ELEMNAME_EXTENSIONCALL == parentElemType || Constants . ELEMNAME_UNDEFINED == parentElemType ) { transformer . executeChildTemplates ( this , _BOOL ) ; } else { System . out . println ( _CHAR Error ! parent of xsl : fallback must be an extension or unknown element ! _CHAR ) ; } }
43093	@ Override public void putAll ( Map < ? extends K , ? extends V > map ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR parameterMap . locked _CHAR ) ) ; super . putAll ( map ) ; }
43102	public void popContext ( ) { contexts [ contextPos ] . clear ( ) ; contextPos -- ; if ( contextPos < _NUM ) { throw new EmptyStackException ( ) ; } currentContext = contexts [ contextPos ] ; }
43106	public boolean hasNext ( ) { if ( nextItem != _NULL ) return _BOOL ; noNext ( ) ; return _BOOL ; }
43107	private void sieveSingle ( int limit , int start , int step ) { while ( start < limit ) { set ( start ) ; start += step ; } }
43115	public void createBufferStrategy ( int numBuffers , BufferCapabilities caps ) throws AWTException { super . createBufferStrategy ( numBuffers , caps ) ; }
43122	public PdfImageXObject put ( PdfName key , PdfObject value ) { getPdfObject ( ) . put ( key , value ) ; return this ; }
43130	public org . omg . CORBA . Object _duplicate ( ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
43131	public static void deregisterPersistentSearch ( ) { directoryServer . activePSearches . decrementAndGet ( ) ; }
43143	public SQLXML readSQLXML ( ) throws SQLException { return ( SQLXML ) getNextAttribute ( ) ; }
43145	public void paintToolBarDragWindowBorder ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintToolBarDragWindowBorder ( context , g , x , y , w , h ) ; }
43146	public boolean hasBeenModified ( ) throws IOException { boolean isConfigFileModified = getPort ( ) != _NUM ; if ( ! isConfigFileModified ) { isConfigFileModified = ! getLowerCaseContents ( ) . contains ( _CHAR # The contents of this file are subject to the terms of the Common Development _CHAR . toLowerCase ( ) ) ; } return isConfigFileModified ; }
43164	public static double cos ( double a ) { return StrictMath . cos ( a ) ; }
43177	public int readCompactUnsignedInt ( ) { long l = readCompactUnsignedLong ( ) ; if ( l > Integer . MAX_VALUE ) { throw new IllegalStateException ( ERR_INVALID_COMPACTED_UNSIGNED_INT . get ( Integer . MAX_VALUE , l ) . toString ( ) ) ; } return ( int ) l ; }
43182	private static boolean hasConditions ( Request request ) { return request . header ( _CHAR If - Modified - Since _CHAR ) != _NULL || request . header ( _CHAR If - None - Match _CHAR ) != _NULL ; }
43187	private void indentAndWrap ( StringBuilder buffer , String indent , LocalizableMessage text ) { int actualSize = MAX_LINE_WIDTH - indent . length ( ) - COLUMN_ADJUST ; indentAndWrap ( indent , buffer , actualSize , text ) ; }
43204	protected PropertyChangeListener createPropertyChangeListener ( ) { return getHandler ( ) ; }
43214	public int compareTo ( UUID val ) { return ( this . mostSigBits < val . mostSigBits ? - _NUM : ( this . mostSigBits > val . mostSigBits ? _NUM : ( this . leastSigBits < val . leastSigBits ? - _NUM : ( this . leastSigBits > val . leastSigBits ? _NUM : _NUM ) ) ) ) ; }
43217	public void login ( AuthContext . IndexType type , String indexName ) throws AuthLoginException { if ( authDebug . messageEnabled ( ) ) { authDebug . message ( _CHAR AuthContextLocal : : login ( ) called _CHAR + _CHAR with IndexType : _CHAR + type + _CHAR & Indexname : _CHAR + indexName ) ; } login ( type , indexName , _NULL , _NULL , _NULL ) ; }
43218	public final boolean hasContended ( ) { return head != _NULL ; }
43229	public static int showInternalConfirmDialog ( Component parentComponent , Object message ) { return showInternalConfirmDialog ( parentComponent , message , UIManager . getString ( _CHAR OptionPane . titleText _CHAR ) , YES_NO_CANCEL_OPTION ) ; }
43242	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( options == _NULL ) { options = new String [ _NUM ] ; } }
43252	public void paint ( Graphics g , Shape a ) { load ( ) ; super . paint ( g , a ) ; }
43254	public void addChangeListener ( ChangeListener listener ) { if ( modelListener == _NULL ) { modelListener = new ModelListener ( ) ; getModel ( ) . addChangeListener ( modelListener ) ; } listenerList . add ( ChangeListener . class , listener ) ; }
43256	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof PrinterMakeAndModel ) ; }
43257	@ Deprecated protected String normalizeMimeType ( String mimeType ) { return mimeType ; }
43259	public void redo ( ) throws CannotRedoException { if ( ! canRedo ( ) ) { throw new CannotRedoException ( ) ; } hasBeenDone = _BOOL ; }
43277	public void mult ( int scalar ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { c [ i ] *= scalar ; } reduceCoefficients ( ) ; }
43288	public Duration minusMinutes ( long minutesToSubtract ) { return ( minutesToSubtract == Long . MIN_VALUE ? plusMinutes ( Long . MAX_VALUE ) . plusMinutes ( _NUM ) : plusMinutes ( - minutesToSubtract ) ) ; }
43303	public static String toLatinAlphabetNumberUpperCase ( int number ) { return AlphabetNumbering . toAlphabetNumber ( number , ALPHABET_UPPERCASE ) ; }
43305	public void detach ( ) { }
43313	final Node succ ( Node p ) { Node next = p . next ; return ( p == next ) ? head : next ; }
43315	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
43322	public static void deleteContents ( File dir ) throws IOException { File [ ] files = dir . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { if ( file . isDirectory ( ) ) { deleteContents ( file ) ; } file . delete ( ) ; } } }
43323	public void error ( SAXParseException e ) throws SAXException { throw e ; }
43343	@ Override public Promise < ResourceResponse , ResourceException > filterRead ( Context context , ReadRequest request , RequestHandler next ) { CrestAuditor auditor = newAuditor ( context , request ) ; auditor . auditAccessAttempt ( ) ; return auditResponse ( next . handleRead ( context , request ) , auditor , request ) ; }
43348	public SampleModel createCompatibleSampleModel ( int w , int h ) { SampleModel sampleModel = new MultiPixelPackedSampleModel ( dataType , w , h , pixelBitStride ) ; return sampleModel ; }
43366	public void startPrefixMapping ( String prefix , String uri ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . startPrefixMapping ( prefix , uri ) ; }
43367	public boolean mayUseGraceLogin ( ) { refreshIfUndefined ( mayUseGraceLogin ) ; return mayUseGraceLogin == ConditionResult . TRUE ; }
43386	public void removeReferral ( Referral referral ) { String referralName = referrals . getReferralName ( referral ) ; if ( referralName != _NULL ) { removeReferral ( referralName ) ; } }
43399	public Object [ ] toArray ( ) { return copyElements ( new Object [ size ( ) ] ) ; }
43407	public void firePropertyChange ( String propertyName , boolean oldValue , boolean newValue ) { super . firePropertyChange ( propertyName , oldValue , newValue ) ; }
43429	protected void processActionEvent ( ActionEvent e ) { ActionListener listener = actionListener ; if ( listener != _NULL ) { listener . actionPerformed ( e ) ; } }
43435	protected String paramString ( ) { return super . paramString ( ) ; }
43447	protected BCSChild createBCSChild ( Object targetChild , Object peer ) { return new BCSChild ( targetChild , peer ) ; }
43449	public final long readLong ( ) throws IOException { readFully ( scratch , _NUM , SizeOf . LONG ) ; return Memory . peekLong ( scratch , _NUM , ByteOrder . BIG_ENDIAN ) ; }
43466	static void exhaustInputStream ( final InputStream inStream ) throws IOException { byte buffer [ ] = new byte [ _NUM ] ; while ( inStream . read ( buffer ) >= _NUM ) { ; } }
43475	public static boolean isLocal ( Stub stub ) throws RemoteException { if ( utilDelegate != _NULL ) { return utilDelegate . isLocal ( stub ) ; } return _BOOL ; }
43477	void updateValue ( Object value ) { try { if ( value == _NULL ) { String string = getFormattedTextField ( ) . getText ( ) ; value = stringToValue ( string ) ; } if ( getCommitsOnValidEdit ( ) ) { commitEdit ( ) ; } setEditValid ( _BOOL ) ; } catch ( ParseException pe ) { setEditValid ( _BOOL ) ; } }
43483	public void forceToDisplay ( ) { this . forceToDisplay = _BOOL ; framePanel = _NULL ; frame . getContentPane ( ) . removeAll ( ) ; frame . getContentPane ( ) . add ( getFramePanel ( ) ) ; frame . pack ( ) ; Utilities . centerOnScreen ( frame ) ; setFocusOnButton ( ButtonName . NEXT ) ; }
43486	public final int compare ( Object obj1 , Object obj2 ) { byte [ ] bytes1 = ( byte [ ] ) obj1 ; byte [ ] bytes2 = ( byte [ ] ) obj2 ; return ( bytes1 [ _NUM ] | _NUM ) - ( bytes2 [ _NUM ] | _NUM ) ; }
43489	public static void fillEntriesInSet ( Map attrMap , String key , String value ) { if ( ( key != _NULL ) && ( value != _NULL ) && ( attrMap != _NULL ) ) { Set valueSet = new HashSet ( ) ; valueSet . add ( value ) ; attrMap . put ( key , valueSet ) ; } }
43508	public boolean isNavigationAtBottom ( ) { return ( mSmallestWidthDp >= _NUM || mInPortrait ) ; }
43533	public static long lowestOneBit ( long v ) { return v & - v ; }
43534	public boolean equals ( Object obj2 ) { if ( _NULL == obj2 ) return _BOOL ; if ( obj2 instanceof XNumber ) return obj2 . equals ( this ) ; else if ( obj2 instanceof XNodeSet ) return obj2 . equals ( this ) ; else if ( obj2 instanceof XStringForFSB ) return equals ( ( XMLString ) obj2 ) ; else return equals ( obj2 . toString ( ) ) ; }
43539	@ Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; LatLng sydney = new LatLng ( - _NUM , _NUM ) ; mMap . addMarker ( new MarkerOptions ( ) . position ( sydney ) . title ( _CHAR Marker in Sydney _CHAR ) ) ; mMap . moveCamera ( CameraUpdateFactory . newLatLng ( sydney ) ) ; }
43552	@ Override public boolean isValidateRoot ( ) { return _BOOL ; }
43555	public static Object convertByteString ( ByteString bs ) { try { return new String ( bs . toCharArray ( ) ) ; } catch ( Exception e ) { return bs . toByteArray ( ) ; } }
43558	public static TitledBorder createTitledBorder ( String title ) { return new TitledBorder ( title ) ; }
43564	public static boolean isXML11ValidLiteral ( int c ) { return ( ( c < _NUM && ( ( XML11CHARS [ c ] & MASK_XML11_VALID ) != _NUM && ( XML11CHARS [ c ] & MASK_XML11_CONTROL ) == _NUM ) ) || ( _NUM <= c && c <= _NUM ) ) ; }
43574	@ Override public void destroySubcontext ( Name name ) throws NamingException { getBoundContext ( ) . destroySubcontext ( parseName ( name ) ) ; }
43577	public static BooleanArgument noPromptArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_NO_PROMPT ) . shortIdentifier ( OPTION_SHORT_NO_PROMPT ) . description ( INFO_DESCRIPTION_NO_PROMPT . get ( ) ) . buildArgument ( ) ; }
43583	@ Override public void close ( ) throws NamingException { getBoundContext ( ) . close ( ) ; }
43594	public int read ( byte b [ ] , int off , int len ) throws IOException { return in . read ( b , off , len ) ; }
43596	protected ReplicationBroker openReplicationSession ( final DN baseDN , int serverId , int windowSize , int port , int timeout ) throws Exception { return openReplicationSession ( baseDN , serverId , windowSize , port , timeout , getGenerationId ( baseDN ) ) ; }
43597	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof PagesPerMinute ) ; }
43603	public boolean endsWith ( Name n ) { if ( n == _NULL ) { return _BOOL ; } int len1 = rdns . size ( ) ; int len2 = n . size ( ) ; return ( len1 >= len2 && matches ( len1 - len2 , len1 , n ) ) ; }
43613	public static void writeByteArrayToFile ( File file , byte [ ] data ) throws IOException { writeByteArrayToFile ( file , data , _BOOL ) ; }
43616	public JDialog createDialog ( String title ) throws HeadlessException { int style = styleFromMessageType ( getMessageType ( ) ) ; JDialog dialog = new JDialog ( ( Dialog ) _NULL , title , _BOOL ) ; initDialog ( dialog , style , _NULL ) ; return dialog ; }
43624	public String toGnuStepASCIIPropertyList ( ) { StringBuilder ascii = new StringBuilder ( ) ; toASCIIGnuStep ( ascii , _NUM ) ; ascii . append ( NEWLINE ) ; return ascii . toString ( ) ; }
43636	public void ensureCapacity ( int minCapacity ) { int minExpand = ( elementData != DEFAULTCAPACITY_EMPTY_ELEMENTDATA ) ? _NUM : DEFAULT_CAPACITY ; if ( minCapacity > minExpand ) { ensureExplicitCapacity ( minCapacity ) ; } }
43641	protected void forwardUpdateToView ( View v , DocumentEvent e , Shape a , ViewFactory f ) { v . setParent ( this ) ; super . forwardUpdateToView ( v , e , a , f ) ; }
43657	protected PropertyChangeListener createPropertyChangeListener ( ) { return getHandler ( ) ; }
43660	public void clearParameters ( ) throws SQLException { params . clear ( ) ; }
43677	@ Override public boolean supportsPredictiveItemAnimations ( ) { return _BOOL ; }
43679	public static AccessToken createFromNativeLinkingIntent ( Intent intent ) { Validate . notNull ( intent , _CHAR intent _CHAR ) ; if ( intent . getExtras ( ) == _NULL ) { return _NULL ; } return createFromBundle ( _NULL , intent . getExtras ( ) , AccessTokenSource . FACEBOOK_APPLICATION_WEB , new Date ( ) ) ; }
43686	private void runOnEventThread ( Runnable r ) { if ( SwingUtilities . isEventDispatchThread ( ) ) { r . run ( ) ; } else { SwingUtilities . invokeLater ( r ) ; } }
43708	public void warning ( String msg , Throwable t ) { getDebugServiceInstance ( ) . warning ( msg , t ) ; }
43720	public String next ( String pattern ) { return next ( patternCache . forName ( pattern ) ) ; }
43730	public void collapseRow ( int row ) { collapsePath ( getPathForRow ( row ) ) ; }
43733	private void checkShutdownAccess ( ) { SecurityManager security = System . getSecurityManager ( ) ; if ( security != _NULL ) { security . checkPermission ( shutdownPerm ) ; final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { for ( Worker w : workers ) security . checkAccess ( w . thread ) ; } finally { mainLock . unlock ( ) ; } } }
43746	public ShapelessRecipe removeIngredient ( Material ingredient ) { return removeIngredient ( ingredient , _NUM ) ; }
43750	public boolean verify ( X509Certificate cert , Provider sigProvider ) throws NoSuchAlgorithmException , CertificateExpiredException , CertificateNotYetValidException , CMSException { Time signingTime = getSigningTime ( ) ; if ( signingTime != _NULL ) { cert . checkValidity ( signingTime . getDate ( ) ) ; } return doVerify ( cert . getPublicKey ( ) , sigProvider ) ; }
43761	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof ApplicationPrincipal ) ) { return _BOOL ; } ApplicationPrincipal that = ( ApplicationPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
43775	private void copyTables ( ) { prefixTable = ( Hashtable ) prefixTable . clone ( ) ; uriTable = ( Hashtable ) uriTable . clone ( ) ; if ( elementNameTable != _NULL ) elementNameTable = new Hashtable ( ) ; if ( attributeNameTable != _NULL ) attributeNameTable = new Hashtable ( ) ; tablesDirty = _BOOL ; }
43781	protected void add ( Object component ) { if ( component == _NULL ) { return ; } components . add ( component ) ; }
43799	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
43813	public boolean isEmpty ( ) { return size ( ) == _NUM ; }
43826	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeShort ( short x ) throws SQLException { attribs . add ( Short . valueOf ( x ) ) ; }
43827	public int read ( byte b [ ] ) throws IOException { return read ( b , _NUM , b . length ) ; }
43830	@ Override public void onAttachFragment ( final Fragment childFragment ) { delegate . onAttachFragment ( childFragment ) ; }
43833	public void flush ( ) throws IOException { out . flush ( ) ; }
43836	public void dragExit ( DropTargetEvent dte ) { }
43840	public Object encode ( Object pObject ) throws EncoderException { if ( ! ( pObject instanceof java . lang . String ) ) { throw new EncoderException ( _CHAR Parameter supplied to RefinedSoundex encode is not of type java . lang . String _CHAR ) ; } return soundex ( ( String ) pObject ) ; }
43848	public void startParse ( InputSource source ) throws SAXException { if ( fNoMoreEvents ) throw new SAXException ( XMLMessages . createXMLMessage ( XMLErrorResources . ER_INCRSAXSRCFILTER_NOT_RESTARTABLE , _NULL ) ) ; if ( fXMLReader == _NULL ) throw new SAXException ( XMLMessages . createXMLMessage ( XMLErrorResources . ER_XMLRDR_NOT_BEFORE_STARTPARSE , _NULL ) ) ; fXMLReaderInputSource = source ; ThreadControllerWrapper . runThread ( this , - _NUM ) ; }
43852	public void releaseStreamAllocation ( ) throws IOException { streamAllocation . release ( ) ; }
43857	public void check ( final int api ) { }
43864	private void goToBackup ( ) { mStage = Stage . PASSWORD ; updateStage ( ) ; mPassword . requestFocus ( ) ; mPassword . postDelayed ( mShowKeyboardRunnable , _NUM ) ; mFingerprintUiHelper . stopListening ( ) ; }
43866	public void start ( ) { }
43876	public long toTotalMonths ( ) { return years * _NUM + months ; }
43878	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
43885	public static String toString ( Reader input ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw ) ; return sw . toString ( ) ; }
43890	public void configChanged ( ConfigurationActionEvent e ) { if ( AuthnSvcUtils . debug . messageEnabled ( ) ) { AuthnSvcUtils . debug . message ( _CHAR AuthnSvcService . configChanged _CHAR ) ; } setValues ( ) ; }
43893	public AMSearchResults searchOrganizations ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ORGANIZATION ) , getSearchFilter ( AMObject . ORGANIZATION ) , wildcard , avPairs , searchControl ) ; }
43912	public Object encode ( Object obj ) throws EncoderException { if ( ! ( obj instanceof String ) ) { throw new EncoderException ( _CHAR DoubleMetaphone encode parameter is not of type String _CHAR ) ; } return doubleMetaphone ( ( String ) obj ) ; }
43913	protected boolean removeDescendantSelectedPaths ( TreePath path , boolean includePath ) { TreePath [ ] toRemove = getDescendantSelectedPaths ( path , includePath ) ; if ( toRemove != _NULL ) { getSelectionModel ( ) . removeSelectionPaths ( toRemove ) ; return _BOOL ; } return _BOOL ; }
43921	public void printStackTrace ( ) { printStackTrace ( System . err ) ; }
43947	private static boolean mayUseExec ( ) { return ! DirectoryServer . getEnvironmentConfig ( ) . disableExec ( ) ; }
43955	public synchronized long size ( ) { return size ; }
43959	public Set < BrdItem > overlapping_items_with_clearance ( ShapeTile p_shape , int p_layer , NetNosList p_ignore_net_nos , int p_clearance_class ) { AwtreeShapeSearch default_tree = search_tree_manager . get_default_tree ( ) ; return default_tree . find_overlap_items_with_clearance ( p_shape , p_layer , p_ignore_net_nos , p_clearance_class ) ; }
43980	public ValidationMessage [ ] validate ( String prefix , String uri , PageData page ) { return _NULL ; }
43993	public void postProcessDelete ( SSOToken token , String entryDN , Map attributes , boolean softDelete , int objectType ) throws AMPostCallBackException { }
44001	public void removePolicyListener ( PolicyListener policyListener ) { policyCache . removePolicyListener ( policyListener ) ; }
44002	public static int makeMovementFlags ( int swipeFlags ) { return makeFlag ( ACTION_STATE_IDLE , swipeFlags ) | makeFlag ( ACTION_STATE_SWIPE , swipeFlags ) ; }
44008	public void changedUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { if ( isLoaded ( ) ) { super . changedUpdate ( e , a , f ) ; } }
44021	public void fatalError ( SAXParseException e ) throws SAXException { throw e ; }
44029	public boolean isSuperscript ( ) { sync ( ) ; return superscript ; }
44032	public void removeAccessibleSelection ( int i ) { if ( i >= _NUM && i < getMenuCount ( ) ) { JMenu menu = getMenu ( i ) ; if ( menu != _NULL ) { MenuSelectionManager . defaultManager ( ) . setSelectedPath ( _NULL ) ; } getSelectionModel ( ) . setSelectedIndex ( - _NUM ) ; } }
44040	public Subject removeSubject ( String subjectName ) { Subject subject = _NULL ; QualifiedSubject qualifiedSubject = ( QualifiedSubject ) users . remove ( subjectName ) ; if ( qualifiedSubject != _NULL ) { subject = qualifiedSubject . getSubject ( ) ; } return subject ; }
44054	public void valueForPathChanged ( TreePath path , Object newValue ) { MutableTreeNode aNode = ( MutableTreeNode ) path . getLastPathComponent ( ) ; aNode . setUserObject ( newValue ) ; nodeChanged ( aNode ) ; }
44062	public synchronized int search ( Object o ) { int i = lastIndexOf ( o ) ; if ( i >= _NUM ) { return size ( ) - i ; } return - _NUM ; }
44063	public boolean isNamespaceNode ( Node n ) { if ( Node . ATTRIBUTE_NODE == n . getNodeType ( ) ) { String attrName = n . getNodeName ( ) ; return ( attrName . startsWith ( _CHAR xmlns : _CHAR ) || attrName . equals ( _CHAR xmlns _CHAR ) ) ; } return _BOOL ; }
44067	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ dropPoint = _CHAR + getDropPoint ( ) + _CHAR , _CHAR + _CHAR path = _CHAR + path + _CHAR , _CHAR + _CHAR childIndex = _CHAR + index + _CHAR ] _CHAR ; }
44070	public boolean isUnderline ( ) { sync ( ) ; return underline ; }
44077	public void dragExit ( DragSourceEvent dse ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragExit ( dse ) ; } getDragSource ( ) . processDragExit ( dse ) ; updateCurrentCursor ( DnDConstants . ACTION_NONE , DnDConstants . ACTION_NONE , DEFAULT ) ; }
44082	public void openFileChooser ( ValueCallback < Uri > uploadMsg , String acceptType , String capture ) { openFileChooser ( uploadMsg , acceptType ) ; }
44085	public void clearPasswordChangedTime ( ) { logger . trace ( _CHAR Clearing password changed time for user % s '' , userDNString ) ; clearAttribute ( OP_ATTR_PWPOLICY_CHANGED_TIME_LC ) ; try { passwordChangedTime = getGeneralizedTime0 ( userEntry , OP_ATTR_CREATE_TIMESTAMP_LC ) ; if ( passwordChangedTime < _NUM ) { passwordChangedTime = _NUM ; } } catch ( Exception e ) { passwordChangedTime = _NUM ; } }
44086	public static ComponentUI createUI ( JComponent c ) { throw new Error ( _CHAR ComponentUI . createUI not implemented . '' ) ; }
44093	public MaterialBarcodeScannerBuilder withCenterTracker ( int trackerResourceId , int detectedTrackerResourceId ) { mScannerMode = MaterialBarcodeScanner . SCANNER_MODE_CENTER ; mTrackerResourceID = trackerResourceId ; mTrackerDetectedResourceID = detectedTrackerResourceId ; return this ; }
44095	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeNString ( String x ) throws SQLException { attribs . add ( x ) ; }
44100	protected synchronized void engineSetSeed ( byte [ ] seed ) { if ( seed == _NULL ) { throw new NullPointerException ( _CHAR seed == _NULL _CHAR ) ; } if ( state == NEXT_BYTES ) { System . arraycopy ( copies , HASHCOPY_OFFSET , this . seed , HASH_OFFSET , EXTRAFRAME_OFFSET ) ; } state = SET_SEED ; if ( seed . length != _NUM ) { updateSeed ( seed ) ; } }
44104	public void eleminateRedundentGlobals ( StylesheetRoot stylesheet ) { eleminateRedundent ( stylesheet , m_absPaths ) ; }
44105	public boolean isStylesheetParsingComplete ( ) { return m_parsingComplete ; }
44111	public static Foo createEntity ( EntityManager em ) { Foo foo = new Foo ( ) ; foo . setValue ( DEFAULT_VALUE ) ; return foo ; }
44113	public boolean willThrowExceptionIfKeyWasNotFound ( ) { return throwex ; }
44130	public boolean verifyOnly ( ) { return verifyOnly ; }
44142	public Severity put ( PrinterStateReason reason , Severity severity ) { if ( reason == _NULL ) { throw new NullPointerException ( _CHAR reason is _NULL _CHAR ) ; } if ( severity == _NULL ) { throw new NullPointerException ( _CHAR severity is _NULL _CHAR ) ; } return super . put ( reason , severity ) ; }
44147	public static void removePropertyChangeListener ( PropertyChangeListener listener ) { synchronized ( classLock ) { getLAFState ( ) . getPropertyChangeSupport ( _BOOL ) . removePropertyChangeListener ( listener ) ; } }
44148	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
44164	public byte [ ] generateSeed ( int numBytes ) { return secureRandomSpi . engineGenerateSeed ( numBytes ) ; }
44176	public final char yycharat ( int pos ) { return zzBuffer [ zzStartRead + pos ] ; }
44177	public String toString ( ) { if ( userObject == _NULL ) { return _CHAR _CHAR ; } else { return userObject . toString ( ) ; } }
44187	public final boolean readBoolean ( ) throws IOException { int ch = in . read ( ) ; if ( ch < _NUM ) throw new EOFException ( ) ; return ( ch != _NUM ) ; }
44188	@ Override public boolean onOptionsItemSelected ( final MenuItem item ) { return super . onOptionsItemSelected ( item ) ; }
44189	public void resetLastRefusedItems ( ) { lastRefusedAuthType = _NULL ; lastRefusedChain = _NULL ; lastRefusedCause = _NULL ; }
44201	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ dropPoint = _CHAR + getDropPoint ( ) + _CHAR , _CHAR + _CHAR index = _CHAR + index + _CHAR , _CHAR + _CHAR bias = _CHAR + bias + _CHAR ] _CHAR ; }
44205	public long executeInsert ( ) { acquireReference ( ) ; try { return getSession ( ) . executeForLastInsertedRowId ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
44209	final long determinant ( PlaDirection p_other ) { return dir_x * p_other . dir_y - dir_y * p_other . dir_x ; }
44222	public boolean isNodeAncestor ( TreeNode anotherNode ) { if ( anotherNode == _NULL ) { return _BOOL ; } TreeNode ancestor = this ; do { if ( ancestor == anotherNode ) { return _BOOL ; } } while ( ( ancestor = ancestor . getParent ( ) ) != _NULL ) ; return _BOOL ; }
44225	protected boolean accept ( Component aComponent ) { return fitnessTestPolicy . accept ( aComponent ) ; }
44246	public synchronized void enableAttribute ( String name ) throws java . lang . IllegalArgumentException { if ( name == _NULL ) { throw new java . lang . IllegalArgumentException ( _CHAR The name can not be _NULL . _CHAR ) ; } if ( ! enabledAttributes . contains ( name ) ) { enabledAttributes . addElement ( name ) ; } }
44254	public boolean wildcard ( ) { return wildcard ; }
44256	public void printStackTrace ( ) { System . err . println ( fetchStackTrace ( ) ) ; }
44273	public byte readByte ( ) throws SQLException { Byte attrib = ( Byte ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . byteValue ( ) ; }
44275	protected String paramString ( ) { String orientationString = ( orientation == HORIZONTAL ? _CHAR HORIZONTAL _CHAR : _CHAR VERTICAL _CHAR ) ; return super . paramString ( ) + _CHAR , blockIncrement = _CHAR + blockIncrement + _CHAR , orientation = _CHAR + orientationString + _CHAR , unitIncrement = _CHAR + unitIncrement ; }
44286	public void addCharsetMappingFromDeploymentDescriptor ( String locale , String charset ) { map . put ( locale , charset ) ; }
44298	@ NonNull public static Interpolator anticipateOvershoot ( int tension ) { return new AnticipateOvershootInterpolator ( tension ) ; }
44300	protected String paramString ( ) { return super . paramString ( ) + _CHAR , echoChar = _CHAR + echoChar ; }
44309	public org . omg . CORBA . DomainManager [ ] _get_domain_managers ( ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
44314	public void reclaim ( AttributeSet a ) { if ( SwingUtilities . isEventDispatchThread ( ) ) { attributesPool . size ( ) ; } }
44331	public Set entrySet ( ) { if ( entrySet == _NULL ) entrySet = new SynchronizedSet ( new EntrySet ( ) , this ) ; return entrySet ; }
44339	private static String makeHHString ( int i ) { String s = Integer . toHexString ( i ) . toUpperCase ( ) ; if ( s . length ( ) == _NUM ) { s = _CHAR _NUM _CHAR + s ; } return s ; }
44351	public void close ( ) throws IOException { maxStreamPos = cache . length ( ) ; seek ( maxStreamPos ) ; flushBefore ( maxStreamPos ) ; super . close ( ) ; cache . close ( ) ; cache = _NULL ; cacheFile . delete ( ) ; cacheFile = _NULL ; stream . flush ( ) ; stream = _NULL ; StreamCloser . removeFromQueue ( closeAction ) ; }
44360	protected void zoneWasLoaded ( View zone ) { loadedZones . addElement ( zone ) ; unloadOldZones ( ) ; }
44374	public String valueToString ( Object value ) throws ParseException { if ( value == _NULL ) { return _CHAR _CHAR ; } Format f = getFormat ( ) ; if ( f == _NULL ) { return value . toString ( ) ; } return f . format ( value ) ; }
44380	public java . math . BigDecimal readBigDecimal ( ) throws SQLException { return ( java . math . BigDecimal ) getNextAttribute ( ) ; }
44384	protected synchronized void clearChanged ( ) { changed = _BOOL ; }
44394	public static RequestSecurityTokenResponse parseXML ( String xml ) throws WSFederationException { Document doc = XMLUtils . toDOMDocument ( xml , debug ) ; Element root = doc . getDocumentElement ( ) ; return new RequestSecurityTokenResponse ( root ) ; }
44395	@ Override public int hashCode ( ) { return ByteString . hashCode ( buffer , _NUM , length ) ; }
44398	public boolean match ( String rawdata ) throws MimeTypeParseException { if ( rawdata == _NULL ) return _BOOL ; return match ( new MimeType ( rawdata ) ) ; }
44399	public boolean isOpaque ( ) { return path == _NULL ; }
44432	private void completeIfNecessary ( final PromiseImpl < QueryResponse , ResourceException > handler ) { if ( pendingResourceCount == _NUM && pendingResult != _NULL && ! resultSent ) { if ( pendingResult == SUCCESS ) { handler . handleResult ( newQueryResponse ( cookie ) ) ; } else { handler . handleException ( pendingResult ) ; } resultSent = _BOOL ; } }
44448	public void println ( ) { newLine ( ) ; }
44464	public static String encodeObject ( java . io . Serializable serializableObject ) { return encodeObject ( serializableObject , NO_OPTIONS ) ; }
44482	@ SuppressWarnings ( _CHAR unused _CHAR ) public static void translatePoint ( PointF point , float offsetX , float offsetY , float angle ) { ScFeature . translatePoint ( point , offsetX , angle ) ; ScFeature . translatePoint ( point , offsetY , angle + _NUM . _NUM ) ; }
44489	protected void paintBorder ( Graphics g ) { Border border = getBorder ( ) ; if ( border != _NULL ) { border . paintBorder ( this , g , _NUM , _NUM , getWidth ( ) , getHeight ( ) ) ; } }
44512	public void startDocument ( ) throws SAXException { }
44516	void unbind ( ) { }
44518	public static int [ ] copyOf ( int [ ] original , int newLength ) { int [ ] copy = new int [ newLength ] ; System . arraycopy ( original , _NUM , copy , _NUM , Math . min ( original . length , newLength ) ) ; return copy ; }
44522	public Object clone ( ) { Reference r = new Reference ( className , classFactory , classFactoryLocation ) ; Enumeration < RefAddr > a = getAll ( ) ; r . addrs = new Vector < > ( ) ; while ( a . hasMoreElements ( ) ) r . addrs . addElement ( a . nextElement ( ) ) ; return r ; }
44524	public CMSSignedData generate ( CMSProcessable content , boolean encapsulate , String sigProvider ) throws NoSuchAlgorithmException , NoSuchProviderException , CMSException { if ( content instanceof CMSTypedData ) { return this . generate ( ( ( CMSTypedData ) content ) . getContentType ( ) . getId ( ) , content , encapsulate , sigProvider ) ; } else { return this . generate ( DATA , content , encapsulate , sigProvider ) ; } }
44548	public void propertyChange ( PropertyChangeEvent e ) { if ( e . getPropertyName ( ) . equals ( _CHAR defaultButton _CHAR ) ) { JRootPane rootpane = ( JRootPane ) e . getSource ( ) ; updateDefaultButtonBindings ( rootpane ) ; if ( rootpane . getClientProperty ( _CHAR temporaryDefaultButton _CHAR ) == _NULL ) { rootpane . putClientProperty ( _CHAR initialDefaultButton _CHAR , e . getNewValue ( ) ) ; } } }
44549	public static void registerSupportedFeature ( String featureOID ) { DirectoryServer . registerSupportedFeature ( featureOID ) ; }
44556	public Node item ( int i ) { int count = _NUM ; for ( int n = dtm . getFirstAttribute ( element ) ; n != - _NUM ; n = dtm . getNextAttribute ( n ) ) { if ( count == i ) return dtm . getNode ( n ) ; else ++ count ; } return _NULL ; }
44565	public static long toUnixTime ( Calendar timestamp ) { return timestamp . getTimeInMillis ( ) / _NUM ; }
44570	public void logExtendedRequest ( ExtendedOperation extendedOperation ) { }
44572	@ Override public int hashCode ( ) { int result = _NUM ; Iterator < ? > it = iterator ( ) ; while ( it . hasNext ( ) ) { Object next = it . next ( ) ; result += next == _NULL ? _NUM : next . hashCode ( ) ; } return result ; }
44583	private static boolean includeAuthorityInRequestLine ( Request request , Proxy . Type proxyType ) { return ! request . isHttps ( ) && proxyType == Proxy . Type . HTTP ; }
44599	public static Remote toStub ( Remote obj ) throws NoSuchObjectException { if ( obj instanceof RemoteStub || ( obj != _NULL && Proxy . isProxyClass ( obj . getClass ( ) ) && Proxy . getInvocationHandler ( obj ) instanceof RemoteObjectInvocationHandler ) ) { return obj ; } else { return sun . rmi . transport . ObjectTable . getStub ( obj ) ; } }
44601	public String encodedQuery ( ) { if ( queryNamesAndValues == _NULL ) return _NULL ; int queryStart = url . indexOf ( _CHAR ) + _NUM ; int queryEnd = delimiterOffset ( url , queryStart + _NUM , url . length ( ) , _CHAR # _CHAR ) ; return url . substring ( queryStart , queryEnd ) ; }
44610	public boolean isInAABB ( Vector min , Vector max ) { return x >= min . x && x <= max . x && y >= min . y && y <= max . y && z >= min . z && z <= max . z ; }
44621	public boolean ackReplied ( ) { boolean result = ackReplied ; ackReplied = _BOOL ; return result ; }
44627	public boolean isSecure ( Socket sock ) throws IllegalArgumentException { if ( sock == _NULL ) { throw new IllegalArgumentException ( _CHAR Socket may not be _NULL . _CHAR ) ; } if ( ! ( sock instanceof SSLSocket ) ) { throw new IllegalArgumentException ( _CHAR Socket not created by this factory . '' ) ; } if ( sock . isClosed ( ) ) { throw new IllegalArgumentException ( _CHAR Socket is closed . '' ) ; } return _BOOL ; }
44634	public static short [ ] copyOf ( short [ ] original , int newLength ) { short [ ] copy = new short [ newLength ] ; System . arraycopy ( original , _NUM , copy , _NUM , Math . min ( original . length , newLength ) ) ; return copy ; }
44637	private void recalculateWordsInUse ( ) { int i ; for ( i = wordsInUse - _NUM ; i >= _NUM ; i -- ) if ( words [ i ] != _NUM ) break ; wordsInUse = i + _NUM ; }
44638	protected void childJustRemovedHook ( Object child , BCSChild bcsc ) { BCSSChild bcssc = ( BCSSChild ) bcsc ; bcssc . cleanupReferences ( ) ; }
44652	public static boolean isValid ( int c ) { return ( c < _NUM && ( CHARS [ c ] & MASK_VALID ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
44658	public static int makeFieldFlag ( int bitPosition ) { return ( _NUM << ( bitPosition - _NUM ) ) ; }
44659	public void cancelSelection ( ) { returnValue = CANCEL_OPTION ; if ( dialog != _NULL ) { dialog . setVisible ( _BOOL ) ; } fireActionPerformed ( CANCEL_SELECTION ) ; }
44663	protected void bcsPreSerializationHook ( ObjectOutputStream oos ) throws IOException { }
44671	protected void cleanupChildren ( ) { if ( children . size ( ) == _NUM ) { children = _NULL ; } }
44674	public static boolean isReadable ( Path path ) { return isAccessible ( path , AccessMode . READ ) ; }
44678	public void addAttribute ( String name , String type , String value ) { names . addElement ( name ) ; types . addElement ( type ) ; values . addElement ( value ) ; }
44688	private void appendHtml ( String msg ) { HTMLDocument doc = ( HTMLDocument ) logs . getDocument ( ) ; try { msg = filterForBugID4988885 ( msg ) ; doc . insertBeforeStart ( doc . getElement ( LASTID ) , msg ) ; } catch ( Throwable t ) { t . printStackTrace ( ) ; } }
44714	public Enumeration pathFromAncestorEnumeration ( TreeNode ancestor ) { return new PathBetweenNodesEnumeration ( ancestor , this ) ; }
44715	public TopologyMsg createTopologyMsgForRS ( ) { List < DSInfo > dsInfos = new ArrayList < > ( ) ; for ( DataServerHandler dsHandler : connectedDSs . values ( ) ) { dsInfos . add ( dsHandler . toDSInfo ( ) ) ; } List < RSInfo > rsInfos = newArrayList ( toRSInfo ( localReplicationServer , generationId ) ) ; return new TopologyMsg ( dsInfos , rsInfos ) ; }
44732	public void removeRowSetListener ( RowSetListener listener ) { listeners . remove ( listener ) ; }
44742	public static boolean isEventDispatchThread ( ) { return EventQueue . isDispatchThread ( ) ; }
44753	public boolean isLockedOut ( ) { String userDN = loginState . getUserToken ( ) ; return isLockedOut ( userDN ) ; }
44754	@ Override public boolean equals ( Object o ) { if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof Modification ) ) { return _BOOL ; } Modification m = ( Modification ) o ; return modificationType == m . modificationType && attribute . equals ( m . attribute ) ; }
44756	public void scheduleAtFixedRate ( TimerTask task , Date firstTime , long period ) { if ( period <= _NUM ) throw new IllegalArgumentException ( _CHAR Non - positive period . '' ) ; sched ( task , firstTime . getTime ( ) , period ) ; }
44773	public void close ( ) { finished = _BOOL ; IOUtils . closeQuietly ( bufferedReader ) ; cachedLine = _NULL ; }
44780	private boolean isFreshnessLifetimeHeuristic ( ) { return cacheResponse . cacheControl ( ) . maxAgeSeconds ( ) == - _NUM && expires == _NULL ; }
44781	private static void determineFirstDigit ( StringBuilder resultString , int lgPatternFound ) throws NotFoundException { for ( int d = _NUM ; d < _NUM ; d ++ ) { if ( lgPatternFound == FIRST_DIGIT_ENCODINGS [ d ] ) { resultString . insert ( _NUM , ( char ) ( _CHAR + d ) ) ; return ; } } throw NotFoundException . getNotFoundInstance ( ) ; }
44786	public boolean isInUndo ( ) { return mInUndo ; }
44790	public char charAt ( int index ) { return ( ( char [ ] ) m_obj ) [ index + m_start ] ; }
44794	public static byte [ ] decode ( byte [ ] source ) throws java . io . IOException { byte [ ] decoded = _NULL ; decoded = decode ( source , _NUM , source . length , Base64 . NO_OPTIONS ) ; return decoded ; }
44805	public final void writeUTF ( String str ) throws IOException { writeUTF ( str , this ) ; }
44806	public void decrement ( ) { int counterVal = counter . decrementAndGet ( ) ; if ( counterVal == _NUM ) { if ( _NULL != resourceCallback ) { resourceCallback . onTransitionToIdle ( ) ; } } if ( counterVal < _NUM ) { throw new IllegalArgumentException ( _CHAR Counter has been corrupted ! _CHAR ) ; } }
44811	public static boolean isWhiteSpace ( char ch ) { return ( ch == _NUM ) || ( ch == _NUM ) || ( ch == _NUM ) || ( ch == _NUM ) ; }
44824	public void login ( IndexType indexType , String indexName , String [ ] params ) throws AuthLoginException { login ( indexType , indexName , params , _NULL , _NULL , _NULL ) ; }
44839	public static float [ ] copyOf ( float [ ] original , int newLength ) { float [ ] copy = new float [ newLength ] ; System . arraycopy ( original , _NUM , copy , _NUM , Math . min ( original . length , newLength ) ) ; return copy ; }
44848	public static boolean booleanValue ( String s ) { boolean b = _BOOL ; if ( s != _NULL ) { if ( s . equalsIgnoreCase ( _CHAR yes _CHAR ) ) { b = _BOOL ; } else { b = Boolean . parseBoolean ( s ) ; } } return b ; }
44851	public void paintValue ( java . awt . Graphics gfx , java . awt . Rectangle box ) { }
44863	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
44868	public OffsetDateTime plusWeeks ( long weeks ) { return with ( dateTime . plusWeeks ( weeks ) , offset ) ; }
44885	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiRootPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiRootPaneUI ) mui ) . uis , a ) ; }
44899	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
44901	public int indexOfIdenticalObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( int i = _NUM ; i < array . length ; i ++ ) { if ( array [ i ] == nso ) { return i ; } } return - _NUM ; }
44917	public Component add ( Component c , int index ) { ensurePopupMenuCreated ( ) ; popupMenu . add ( c , index ) ; return c ; }
44921	public void warning ( SAXParseException exception ) throws SAXException { PrintWriter pw = getErrorWriter ( ) ; printLocation ( pw , exception ) ; pw . println ( _CHAR Parser warning : _CHAR + exception . getMessage ( ) ) ; }
44932	public XMLString fixWhiteSpace ( boolean trimHead , boolean trimTail , boolean doublePunctuationSpaces ) { return new XMLStringDefault ( m_str . trim ( ) ) ; }
44947	public void finest ( String msg ) { log ( Level . FINEST , msg ) ; }
44970	public synchronized void remove ( String item ) { int index = items . indexOf ( item ) ; if ( index < _NUM ) { throw new IllegalArgumentException ( _CHAR item _CHAR + item + _CHAR not found in list _CHAR ) ; } else { remove ( index ) ; } }
44978	private List < ? > internalCalculateIndex ( CompositeData value ) { return Collections . unmodifiableList ( Arrays . asList ( value . getAll ( this . indexNamesArray ) ) ) ; }
44987	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof OblixPrincipal ) ) { return _BOOL ; } OblixPrincipal that = ( OblixPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
44990	private boolean isNavigationKey ( KeyEvent event ) { InputMap inputMap = tree . getInputMap ( JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT ) ; KeyStroke key = KeyStroke . getKeyStrokeForEvent ( event ) ; return inputMap != _NULL && inputMap . get ( key ) != _NULL ; }
44991	public void cut ( ) { if ( isEditable ( ) && isEnabled ( ) ) { invokeAction ( _CHAR cut _CHAR , TransferHandler . getCutAction ( ) ) ; } }
44999	public void updateRenderCameraPose ( TangoPoseData devicePose , DeviceExtrinsics extrinsics ) { Pose cameraPose = ScenePoseCalculator . toOpenGlCameraPose ( devicePose , extrinsics ) ; getCurrentCamera ( ) . setRotation ( cameraPose . getOrientation ( ) ) ; getCurrentCamera ( ) . setPosition ( cameraPose . getPosition ( ) ) ; floorPlan . setTrajectoryPosition ( cameraPose . getPosition ( ) ) ; }
45004	static void rdf_RDF ( XMPMetaImpl xmp , Node rdfRdfNode ) throws XMPException { if ( rdfRdfNode . hasAttributes ( ) ) { rdf_NodeElementList ( xmp , xmp . getRoot ( ) , rdfRdfNode ) ; } else { throw new XMPException ( _CHAR Invalid attributes of rdf : RDF element _CHAR , BADRDF ) ; } }
45014	public Object remove ( int posn ) throws InvalidNameException { return impl . remove ( posn ) ; }
45015	public final int updateAndGet ( IntUnaryOperator updateFunction ) { int prev , next ; do { prev = get ( ) ; next = updateFunction . applyAsInt ( prev ) ; } while ( ! compareAndSet ( prev , next ) ) ; return next ; }
45023	public static FontProgram createFont ( String fontProgram ) throws java . io . IOException { return createFont ( fontProgram , _NULL , DEFAULT_CACHED ) ; }
45050	public void execute ( TransformerImpl transformer ) throws TransformerException { }
45070	public void warning ( SAXParseException e ) throws SAXException { System . err . println ( e . getMessage ( ) ) ; }
45071	@ Override @ Deprecated public void putValue ( String name , Object value ) { setAttribute ( name , value ) ; }
45075	public static < K , V > KeyedObjectPool < K , V > erodingPool ( final KeyedObjectPool < K , V > keyedPool , final float factor ) { return erodingPool ( keyedPool , factor , _BOOL ) ; }
45077	public void addHandler ( Handler handler ) throws SecurityException { handler . getClass ( ) ; checkPermission ( ) ; handlers . add ( handler ) ; }
45078	private < T > void castAndAddValues ( Collection < T > destination , Collection < ? > source , PropertyDefinition < T > pd ) { for ( Object o : source ) { destination . add ( pd . castValue ( o ) ) ; } }
45080	public void migrateTo ( DTMManager manager ) { }
45089	@ Override public boolean onOptionsItemSelected ( final MenuItem item ) { return delegate . onOptionsItemSelected ( item ) ; }
45102	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
45112	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof DataStorePrincipal ) ) { return _BOOL ; } DataStorePrincipal that = ( DataStorePrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
45128	protected String selectEncoding ( ServletRequest request ) { return this . encoding ; }
45129	public boolean markSupported ( ) { return _BOOL ; }
45142	@ Override public Object lookupLink ( Name name ) throws NamingException { if ( log . isDebugEnabled ( ) ) { log . debug ( sm . getString ( _CHAR selectorContext . methodUsingName _CHAR , _CHAR lookupLink _CHAR , name ) ) ; } return getBoundContext ( ) . lookupLink ( parseName ( name ) ) ; }
45158	@ Override public Descriptor clone ( ) { return this ; }
45160	public static boolean isSynchronized ( int mod ) { return ( mod & ACC_SYNCHRONIZED ) != _NUM ; }
45168	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; if ( ! ( obj instanceof MBeanPermission ) ) return _BOOL ; MBeanPermission that = ( MBeanPermission ) obj ; return ( this . mask == that . mask ) && ( this . getName ( ) . equals ( that . getName ( ) ) ) ; }
45170	public void submitRequiredInformation ( Callback [ ] info ) { authDebug . message ( _CHAR AuthContext : : submitRequestedInformation ( ) _CHAR ) ; informationRequired = _NULL ; synchronized ( loginThread ) { submittedInformation = info ; loginThread . notify ( ) ; } authDebug . message ( _CHAR AuthContext : : submitRequestedInformation _CHAR + _CHAR ( ) sending notify to sleeping threads _CHAR ) ; }
45196	public static String applyFont ( CharSequence html , Font font ) { return _CHAR < span style =\ _CHAR _CHAR + getFontStyle ( font ) + _CHAR \ _CHAR > _CHAR + html + _CHAR < / span > _CHAR ; }
45208	@ Override public boolean isLeapYear ( long prolepticYear ) { return IsoChronology . INSTANCE . isLeapYear ( prolepticYear - YEARS_DIFFERENCE ) ; }
45213	public Result useItemInHand ( ) { return useItemInHand ; }
45219	public int sMaxAgeSeconds ( ) { return sMaxAgeSeconds ; }
45226	public MethodHandle findGetter ( Class < ? > refc , String name , Class < ? > type ) throws NoSuchFieldException , IllegalAccessException { MemberName field = resolveOrFail ( REF_getField , refc , name , type ) ; return getDirectField ( REF_getField , refc , field ) ; }
45231	public boolean isVisible ( ) { return visible ; }
45233	public Duration plusDays ( long daysToAdd ) { return plus ( Math . multiplyExact ( daysToAdd , SECONDS_PER_DAY ) , _NUM ) ; }
45244	protected void layoutMinorAxis ( int targetSpan , int axis , int [ ] offsets , int [ ] spans ) { baselineLayout ( targetSpan , axis , offsets , spans ) ; }
45253	@ Override protected boolean doAuthenticate ( Request request , HttpServletResponse response ) throws IOException { if ( checkForCachedAuthentication ( request , response , _BOOL ) ) { if ( cache ) { request . getSessionInternal ( _BOOL ) . setPrincipal ( request . getUserPrincipal ( ) ) ; } return _BOOL ; } if ( containerLog . isDebugEnabled ( ) ) containerLog . debug ( _CHAR User authenticated without any roles _CHAR ) ; return _BOOL ; }
45268	public boolean writeEntries ( Collection < Entry > entries ) throws IOException , LDIFException { for ( Entry entry : entries ) { if ( ! writeEntry ( entry ) ) { return _BOOL ; } } return _BOOL ; }
45272	private static final byte [ ] toOctets ( byte [ ] orig ) { byte [ ] bytes = new byte [ orig . length ] ; System . arraycopy ( orig , _NUM , bytes , _NUM , orig . length ) ; bytes [ _NUM ] = ( byte ) AttributeType . UNKNOWN . getTypeCode ( ) ; return bytes ; }
45273	public Object [ ] toArray ( ) { Object [ ] elements = getArray ( ) ; return Arrays . copyOf ( elements , elements . length ) ; }
45275	public void addAdjustmentListener ( AdjustmentListener l ) { listenerList . add ( AdjustmentListener . class , l ) ; }
45277	public void stop ( ) { }
45278	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof DocumentName ) ; }
45279	private T wildcardResponseCombiner ( T ... matches ) { boolean wildcard = _BOOL ; for ( T match : matches ) { if ( wildcardMatch . equals ( match ) ) { wildcard = _BOOL ; } else if ( ! exactMatch . equals ( match ) ) { return match ; } } if ( wildcard ) { return wildcardMatch ; } else { return exactMatch ; } }
45290	public void removeSelectionPath ( TreePath path ) { if ( path != _NULL ) { TreePath [ ] rPath = new TreePath [ _NUM ] ; rPath [ _NUM ] = path ; removeSelectionPaths ( rPath ) ; } }
45292	public boolean isMixed ( ) { return bidiBase . isMixed ( ) ; }
45301	protected void installRolloverBorders ( JComponent c ) { Component [ ] components = c . getComponents ( ) ; for ( Component component : components ) { if ( component instanceof JComponent ) { ( ( JComponent ) component ) . updateUI ( ) ; setBorderToRollover ( component ) ; } } }
45312	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
45318	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
45322	public void replaceResponseProvider ( String name , ResponseProvider respProvider ) throws NameNotFoundException { respProviders . replaceResponseProvider ( name , respProvider ) ; }
45340	public Bidi createLineBidi ( int lineStart , int lineLimit ) { AttributedString astr = new AttributedString ( _CHAR _CHAR ) ; Bidi newBidi = new Bidi ( astr . getIterator ( ) ) ; return bidiBase . setLine ( this , bidiBase , newBidi , newBidi . bidiBase , lineStart , lineLimit ) ; }
45342	public WritableRaster createWritableTranslatedChild ( int childMinX , int childMinY ) { return createWritableChild ( minX , minY , width , height , childMinX , childMinY , _NULL ) ; }
45349	public Name addAll ( Name suffix ) throws InvalidNameException { if ( suffix instanceof CompoundName ) { impl . addAll ( suffix . getAll ( ) ) ; return this ; } else { throw new InvalidNameException ( _CHAR Not a compound name : _CHAR + suffix . toString ( ) ) ; } }
45360	public double distance ( Vector o ) { return Math . sqrt ( NumberConversions . square ( x - o . x ) + NumberConversions . square ( y - o . y ) + NumberConversions . square ( z - o . z ) ) ; }
45367	private boolean contains ( String [ ] names , String name ) { assert name != _NULL ; for ( int i = _NUM ; i < names . length ; i ++ ) { if ( name . equals ( names [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
45369	public boolean isOptimizedDrawingEnabled ( ) { return _BOOL ; }
45373	public SubResourceCollection glueObjectClasses ( final String ... objectClasses ) { this . glueObjectClasses . add ( ( Object [ ] ) objectClasses ) ; return this ; }
45389	public String convertValueToText ( Object value , boolean selected , boolean expanded , boolean leaf , int row , boolean hasFocus ) { if ( value != _NULL ) { String sValue = value . toString ( ) ; if ( sValue != _NULL ) { return sValue ; } } return _CHAR _CHAR ; }
45409	public void dismiss ( JSpinner spinner ) { spinner . removeChangeListener ( this ) ; }
45411	public boolean isExplicitPolicyRequired ( ) { return explicitPolicyRequired ; }
45417	public MethodHandle findStaticSetter ( Class < ? > refc , String name , Class < ? > type ) throws NoSuchFieldException , IllegalAccessException { MemberName field = resolveOrFail ( REF_putStatic , refc , name , type ) ; return getDirectField ( REF_putStatic , refc , field ) ; }
45434	public CoinTile genTile ( float [ ] coords , int stageZone ) { return new CoinTile ( stageZone , coords [ _NUM ] , coords [ _NUM ] , ( float ) _NUM . _NUM * REL_HEIGHT , hitCoins , stageContainer , tile0 , tile1 , tile2 , tile3 , tile4 ) ; }
45444	public Enumeration < ? > propertyNames ( ) { Hashtable < String , Object > h = new Hashtable < > ( ) ; enumerate ( h ) ; return h . keys ( ) ; }
45452	public Enumeration pathFromAncestorEnumeration ( TreeNode ancestor ) { return new PathBetweenNodesEnumeration ( ancestor , this ) ; }
45458	public static boolean isXML11Valid ( int c ) { return ( c < _NUM && ( XML11CHARS [ c ] & MASK_XML11_VALID ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
45464	public PdfCanvas lineTo ( double x , double y ) { contentStream . getOutputStream ( ) . writeDouble ( x ) . writeSpace ( ) . writeDouble ( y ) . writeSpace ( ) . writeBytes ( l ) ; return this ; }
45465	private void rehash ( ) { expungeStaleEntries ( ) ; if ( size >= threshold - threshold / _NUM ) resize ( ) ; }
45469	protected String paramString ( ) { return super . paramString ( ) ; }
45480	public String toString ( ) { return super . toString ( ) + _CHAR : _CHAR + getObject ( ) ; }
45487	private boolean execute ( boolean readResponse ) throws IOException { try { httpEngine . sendRequest ( ) ; if ( readResponse ) { httpEngine . readResponse ( ) ; } return _BOOL ; } catch ( IOException e ) { if ( handleFailure ( e ) ) { return _BOOL ; } else { throw e ; } } }
45499	public static Token newToken ( int ofKind , String image ) { switch ( ofKind ) { default : return new Token ( ofKind , image ) ; } }
45513	boolean isNavigatable ( int offset ) { if ( ! getAllowsInvalid ( ) ) { return ( offset < getMaxLength ( ) && ! isLiteral ( offset ) ) ; } return _BOOL ; }
45519	public void removeUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { handleRemove ( changes . getOffset ( ) , changes . getLength ( ) ) ; super . removeUpdate ( changes , a , f ) ; }
45526	protected PropertyChangeListener createPropertyChangeListener ( JComponent c ) { return getHandler ( ) ; }
45537	public void writeStatement ( Statement oldStm ) { Statement newStm = cloneStatement ( oldStm ) ; if ( oldStm . getTarget ( ) != this && executeStatements ) { try { newStm . execute ( ) ; } catch ( Exception e ) { getExceptionListener ( ) . exceptionThrown ( new Exception ( _CHAR Encoder : discarding statement _CHAR + newStm , e ) ) ; } } }
45538	public void restart ( String className , LocalizableMessage reason ) { DirectoryServer . restart ( className , reason , DirectoryServer . getEnvironmentConfig ( ) ) ; }
45539	@ Override public void removeAttribute ( String name , boolean notify ) { removeAttribute ( name , notify , _BOOL ) ; }
45550	public static void fill ( boolean [ ] a , int fromIndex , int toIndex , boolean val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
45563	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
45581	void dispose ( ) { }
45584	protected void notifyRowSetChanged ( ) throws SQLException { checkforRowSetInterface ( ) ; if ( listeners . isEmpty ( ) == _BOOL ) { RowSetEvent event = new RowSetEvent ( ( RowSet ) this ) ; for ( RowSetListener rsl : listeners ) { rsl . rowSetChanged ( event ) ; } } }
45585	public boolean acceptFilenameIdentical ( String fileName ) { return acceptIdentical ( _NULL , fileName ) ; }
45600	public synchronized void addDragSourceListener ( DragSourceListener dsl ) throws TooManyListenersException { if ( dsl == _NULL ) return ; if ( equals ( dsl ) ) throw new IllegalArgumentException ( _CHAR DragSourceContext may not be its own listener _CHAR ) ; if ( listener != _NULL ) throw new TooManyListenersException ( ) ; else listener = dsl ; }
45620	public DecimalStyle withZeroDigit ( char zeroDigit ) { if ( zeroDigit == this . zeroDigit ) { return this ; } return new DecimalStyle ( zeroDigit , positiveSign , negativeSign , decimalSeparator ) ; }
45639	public char [ ] toCharArray ( ) { synchronized ( lock ) { char [ ] result = new char [ count ] ; System . arraycopy ( buf , _NUM , result , _NUM , count ) ; return result ; } }
45647	public void modifyAttributes ( ModificationItem [ ] modItems ) { if ( modSet == _NULL ) { modSet = new HashSet ( ) ; } for ( int i = _NUM ; ( modItems != _NULL ) && ( i < modItems . length ) ; i ++ ) { modSet . add ( modItems [ i ] ) ; } }
45649	public void startAttribute ( String uri , String local ) { textBuf . setLength ( _NUM ) ; this . attNamespaceUri = uri ; this . attLocalName = local ; }
45656	public boolean forget ( String messageId ) { MessagePromise messagePromise = cache . getIfPresent ( messageId ) ; if ( messagePromise != _NULL ) { cache . invalidate ( messageId ) ; return _BOOL ; } return _BOOL ; }
45659	private static boolean missingHashColorFormat ( String colStr ) { int len = colStr . length ( ) ; if ( len == _NUM || len == _NUM ) { String match = _CHAR [ _NUM - _NUM - f ] { _CHAR + len + _CHAR } _CHAR ; return colStr . matches ( match ) ; } return _BOOL ; }
45672	public void loadTagFiles ( Compiler compiler , Node . Nodes page ) throws JasperException { tempVector = new Vector < > ( ) ; page . visit ( new TagFileLoaderVisitor ( compiler ) ) ; }
45673	public boolean addAll ( Collection < ? extends E > c ) { if ( c == _NULL ) throw new NullPointerException ( ) ; if ( c == this ) throw new IllegalArgumentException ( ) ; boolean modified = _BOOL ; for ( E e : c ) if ( add ( e ) ) modified = _BOOL ; return modified ; }
45681	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeStruct ( Struct x ) throws SQLException { SerialStruct s = new SerialStruct ( x , map ) ; ; attribs . add ( s ) ; }
45690	public BindOperation processSimpleBind ( ByteString rawBindDN , ByteString password , List < Control > controls ) { BindOperationBasis bindOperation = new BindOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , PROTOCOL_VERSION , rawBindDN , password ) ; bindOperation . setInternalOperation ( _BOOL ) ; bindOperation . run ( ) ; return bindOperation ; }
45700	public static void doWebArtifact ( HttpServletRequest request , HttpServletResponse response , String target ) throws IOException , SAMLException { doSSO ( request , response , target , SAMLConstants . SAML_AWARE_NAMING ) ; }
45706	public static boolean isInstanceOf ( Object bean , Class < ? > targetType ) { return Introspector . isSubclass ( bean . getClass ( ) , targetType ) ; }
45707	protected String paramString ( ) { String desktopManagerString = ( desktopManager != _NULL ? desktopManager . toString ( ) : _CHAR _CHAR ) ; return super . paramString ( ) + _CHAR , desktopManager = _CHAR + desktopManagerString ; }
45709	static int difference ( StringEncoder encoder , String s1 , String s2 ) throws EncoderException { return differenceEncoded ( encoder . encode ( s1 ) , encoder . encode ( s2 ) ) ; }
45712	public int transformToGlobalRTF ( ElemTemplateElement templateParent ) throws TransformerException { DTM dtmFrag = m_xcontext . getGlobalRTFDTM ( ) ; return transformToRTF ( templateParent , dtmFrag ) ; }
45726	private void checkColRange ( int col ) throws SQLException { if ( col <= _NUM || col > colCount ) { throw new SQLException ( _CHAR Invalid column index : _CHAR + col ) ; } }
45738	public boolean implies ( Permission p ) { if ( ! ( p instanceof MBeanServerPermission ) ) return _BOOL ; MBeanServerPermission that = ( MBeanServerPermission ) p ; return ( ( this . mask & that . mask ) == that . mask ) ; }
45739	protected void paranoiaCheck ( ) throws Exception { logger . error ( LocalizableMessage . raw ( _CHAR Performing paranoia check _CHAR ) ) ; assertNoConfigEntriesWithFilter ( _CHAR ( objectclass = ds - cfg - replication - server ) _CHAR , _CHAR Found unexpected replication server config left _CHAR ) ; Assertions . assertThat ( ReplicationServer . getAllInstances ( ) ) . isEmpty ( ) ; assertNoConfigEntriesWithFilter ( _CHAR ( objectclass = ds - cfg - replication - domain ) _CHAR , _CHAR Found unexpected replication domain config left _CHAR ) ; assertEquals ( MultimasterReplication . getNumberOfDomains ( ) , _NUM , _CHAR Some replication domain objects left _CHAR ) ; }
45744	public void clear ( ) { match = _CHAR _CHAR ; bodyTexts . clear ( ) ; params . clear ( ) ; publicId = _NULL ; stack . clear ( ) ; log = _NULL ; saxLog = _NULL ; configured = _BOOL ; }
45748	public boolean nextBoolean ( ) { clearCaches ( ) ; return Boolean . parseBoolean ( next ( boolPattern ( ) ) ) ; }
45758	public boolean hasMoreRequirements ( ) { if ( localFlag ) { return ( acLocal . hasMoreRequirements ( _BOOL ) ) ; } else { if ( ( ! loginStatus . equals ( Status . IN_PROGRESS ) ) || ( ( getCallbacks ( receivedDocument , _BOOL ) ) == _NULL ) ) { return ( _BOOL ) ; } return ( _BOOL ) ; } }
45768	protected void checkForClickInExpandControl ( TreePath path , int mouseX , int mouseY ) { if ( isLocationInExpandControl ( path , mouseX , mouseY ) ) { handleExpandControlClick ( path , mouseX , mouseY ) ; } }
45775	public boolean deleteAllNamedPolicyTemplates ( String policyDN ) throws AMException , SSOException { throw new UnsupportedOperationException ( ) ; }
45776	protected void closeFrame ( JInternalFrame f ) { BasicLookAndFeel . playSound ( frame , _CHAR InternalFrame . closeSound _CHAR ) ; getDesktopManager ( ) . closeFrame ( f ) ; }
45786	public InputSource resolveEntity ( String publicId , String systemId ) throws SAXException { return _NULL ; }
45801	public synchronized boolean addEdit ( UndoableEdit anEdit ) { boolean retVal ; trimEdits ( indexOfNextAdd , edits . size ( ) - _NUM ) ; retVal = super . addEdit ( anEdit ) ; if ( inProgress ) { retVal = _BOOL ; } indexOfNextAdd = edits . size ( ) ; trimForLimit ( ) ; return retVal ; }
45803	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof PrinterMoreInfoManufacturer ) ; }
45810	public static String encodeDataFlavor ( DataFlavor flav ) { return ( flav != _NULL ) ? SystemFlavorMap . encodeJavaMIMEType ( flav . getMimeType ( ) ) : _NULL ; }
45811	public static void copy ( Reader input , OutputStream output ) throws IOException { OutputStreamWriter out = new OutputStreamWriter ( output ) ; copy ( input , out ) ; out . flush ( ) ; }
45816	public void deregisterChangeListener ( SubentryChangeListener changeListener ) { changeListeners . remove ( changeListener ) ; }
45824	protected void forwardUpdateToView ( View v , DocumentEvent e , Shape a , ViewFactory f ) { v . setParent ( this ) ; super . forwardUpdateToView ( v , e , a , f ) ; }
45837	public void detach ( ) { if ( m_allowDetach ) { m_traverser = _NULL ; super . detach ( ) ; } }
45838	public void reuse ( Tag handler ) { synchronized ( this ) { if ( current < ( handlers . length - _NUM ) ) { handlers [ ++ current ] = handler ; return ; } } doRelease ( handler ) ; }
45845	private boolean isSlavoGermanic ( String value ) { return value . indexOf ( _CHAR ) > - _NUM || value . indexOf ( _CHAR ) > - _NUM || value . indexOf ( _CHAR CZ _CHAR ) > - _NUM || value . indexOf ( _CHAR WITZ _CHAR ) > - _NUM ; }
45846	public void reset ( ) { authDebug . message ( _CHAR AuthContextLocal : : reset ( ) called _CHAR ) ; loginStatus = AuthContext . Status . NOT_STARTED ; informationRequired = _NULL ; loginException = _NULL ; }
45858	public void newRowsAdded ( final TableModelEvent e ) { justifyRows ( e . getFirstRow ( ) , e . getLastRow ( ) + _NUM ) ; fireTableChanged ( e ) ; }
45859	public < E extends IEventListener > E processContent ( int pageNumber , E renderListener , Map < String , IContentOperator > additionalContentOperators ) { PdfCanvasProcessor processor = new PdfCanvasProcessor ( renderListener , additionalContentOperators ) ; processor . processPageContent ( pdfDocument . getPage ( pageNumber ) ) ; return renderListener ; }
45872	public void removeUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { super . removeUpdate ( e , a , f ) ; }
45880	public Result decodeWithState ( BinaryBitmap image ) throws NotFoundException { if ( readers == _NULL ) { setHints ( _NULL ) ; } return decodeInternal ( image ) ; }
45883	protected PropertyChangeListener createActionPropertyChangeListener ( Action a ) { return createActionPropertyChangeListener0 ( a ) ; }
45895	@ Override public Context createSubcontext ( Name name ) throws NamingException { return getBoundContext ( ) . createSubcontext ( parseName ( name ) ) ; }
45905	public void expandRow ( int row ) { expandPath ( getPathForRow ( row ) ) ; }
45916	public static int calculateBCHCode ( int value , int poly ) { int msbSetInPoly = findMSBSet ( poly ) ; value <<= msbSetInPoly - _NUM ; while ( findMSBSet ( value ) >= msbSetInPoly ) { value ^= poly << ( findMSBSet ( value ) - msbSetInPoly ) ; } return value ; }
45928	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
45942	private int readFirstBytes ( ) throws IOException { getBOM ( ) ; return fbIndex < fbLength ? firstBytes [ fbIndex ++ ] : - _NUM ; }
45961	public static String toHexString ( long v ) { return IntegralToString . longToHexString ( v ) ; }
45968	public void copy ( ) { if ( getClientProperty ( _CHAR JPasswordField . cutCopyAllowed _CHAR ) != Boolean . TRUE ) { UIManager . getLookAndFeel ( ) . provideErrorFeedback ( this ) ; } else { super . copy ( ) ; } }
45979	public void finer ( String msg ) { log ( Level . FINER , msg ) ; }
45980	public static MappedMember findMethod ( MappedClass owner , String name , String desc , boolean originalNames ) { for ( MappedMember mm : owner . getMethods ( ) ) { if ( matches ( mm , name , desc , originalNames ) ) { return mm ; } } return _NULL ; }
45981	public static String requestPath ( HttpUrl url ) { String path = url . encodedPath ( ) ; String query = url . encodedQuery ( ) ; return query != _NULL ? ( path + _CHAR + query ) : path ; }
45982	@ Override public void performBackendPreInitializationProcessing ( Backend < ? > backend ) { }
45985	@ Deprecated public boolean isManagingFocus ( ) { return _BOOL ; }
46022	public void upFocusCycle ( Component aComponent ) { if ( aComponent != _NULL ) { aComponent . transferFocusUpCycle ( ) ; } }
46028	public void startElement ( String namespaceURI , String localName , String qName , Attributes atts ) throws org . xml . sax . SAXException { throw new StopParseException ( ) ; }
46039	@ Override public void propertyChange ( PropertyChangeEvent e ) { if ( SynthLookAndFeel . shouldUpdateStyle ( e ) ) { updateStyle ( ( JRootPane ) e . getSource ( ) ) ; } super . propertyChange ( e ) ; }
46044	private boolean isPreflightFlow ( final HttpServletRequest req ) { final String reqMethodHeader = req . getHeader ( CORSConstants . AC_REQUEST_METHOD ) ; return CORSConstants . HTTP_OPTIONS . equals ( req . getMethod ( ) ) && reqMethodHeader != _NULL && ! reqMethodHeader . isEmpty ( ) ; }
46052	public static Reflect on ( String name , ClassLoader classLoader ) throws ReflectException { return on ( forName ( name , classLoader ) ) ; }
46055	public final void writeBytes ( String s ) throws IOException { int len = s . length ( ) ; for ( int i = _NUM ; i < len ; i ++ ) { out . write ( ( byte ) s . charAt ( i ) ) ; } incCount ( len ) ; }
46065	void addXMLElementAfterTokenIndex ( int lastTokenIndex , XMLElement element , boolean addAfterNewLine ) throws Exception { addXMLElementAfterTokenIndex ( lastTokenIndex , element , addAfterNewLine , _BOOL ) ; }
46067	public void add ( MutableTreeNode newChild ) { if ( newChild != _NULL && newChild . getParent ( ) == this ) insert ( newChild , getChildCount ( ) - _NUM ) ; else insert ( newChild , getChildCount ( ) ) ; }
46105	public Object validateValue ( ) throws Throwable { if ( tag == ERROR ) { rethrowError ( ) ; } if ( value == NO_VALUE ) { return _NULL ; } if ( elementType == value . getClass ( ) || elementType . isInstance ( value ) ) { return copyValue ( ) ; } else { throw new AnnotationTypeMismatchException ( definingMethod , value . getClass ( ) . getName ( ) ) ; } }
46116	public static Class < ? > loadClassWithout ( ClassLoader loader , String className ) throws ClassNotFoundException { return javax . management . loading . DefaultLoaderRepository . loadClassWithout ( loader , className ) ; }
46119	public int lengthOfMonth ( ) { return getMonth ( ) . length ( isLeapYear ( ) ) ; }
46125	public Duration withNanos ( int nanoOfSecond ) { NANO_OF_SECOND . checkValidIntValue ( nanoOfSecond ) ; return create ( seconds , nanoOfSecond ) ; }
46126	public AMSearchResults searchUsers ( AMSearchControl searchControl , String avfilter ) throws AMException , SSOException { return searchObjects ( getSearchFilter ( AMObject . USER ) , searchControl , avfilter ) ; }
46139	public Node nextNode ( ) throws DOMException { if ( ( m_next ) < this . size ( ) ) { Node next = this . elementAt ( m_next ) ; m_next ++ ; return next ; } else return _NULL ; }
46142	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof Destination ) ; }
46144	public Iterator < E > iterator ( ) { return new Itr ( ) ; }
46147	public static NamingResponse parseXML ( String xml ) { NamingResponseParser parser = new NamingResponseParser ( xml ) ; return parser . parseXML ( ) ; }
46153	private void _writeSignedVInt ( int input ) throws IOException { _writePositiveVInt ( SmileUtil . zigzagEncode ( input ) ) ; }
46165	@ Override public boolean equals ( Object obj ) { return obj instanceof GregorianCalendar && super . equals ( obj ) && gregorianCutover == ( ( GregorianCalendar ) obj ) . gregorianCutover ; }
46166	public static boolean encryptNIinSessionContext ( ) { return encryptNI ; }
46168	public long nextLong ( ) { return nextLong ( defaultRadix ) ; }
46170	public void doLog ( String key , String message ) { if ( logStatus ) { doLog ( Locale . getString ( rb , key , PWResetModelImpl . debug ) + _CHAR _CHAR + message ) ; } }
46173	public boolean containsValue ( CompositeData value ) { return dataMap . containsValue ( value ) ; }
46180	public boolean isRoot ( ) { return getParent ( ) == _NULL ; }
46183	protected void startFontTag ( String style ) throws IOException { boolean callIndent = _BOOL ; if ( inFontTag ( ) ) { endFontTag ( ) ; callIndent = _BOOL ; } writeStartTag ( _CHAR < font style =\ _CHAR _CHAR + style + _CHAR \ _CHAR > _CHAR ) ; if ( callIndent ) { indent ( ) ; } }
46187	public static String escapeValue ( Object val ) { return ( val instanceof byte [ ] ) ? escapeBinaryValue ( ( byte [ ] ) val ) : escapeStringValue ( ( String ) val ) ; }
46209	protected final DTMAxisIterator resetPosition ( ) { _position = _NUM ; return this ; }
46212	public Object clone ( ) { RenderContext newRenderContext = new RenderContext ( usr2dev , aoi , hints ) ; return newRenderContext ; }
46216	@ Override public Foo fetchByUUID_G ( String uuid , long groupId ) { return fetchByUUID_G ( uuid , groupId , _BOOL ) ; }
46225	public boolean isReadOnly ( ) { return readOnly ; }
46232	@ Override public int process ( Callback [ ] callbacks , int state ) throws LoginException { return authLoginModule . process ( callbacks , state ) ; }
46236	public boolean _is_local ( ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
46245	public AttributeSet addAttributes ( AttributeSet old , AttributeSet attr ) { if ( ! ( attr instanceof HTMLDocument . TaggedAttributeSet ) ) { old = removeHTMLTags ( old , attr ) ; } return super . addAttributes ( old , convertAttributeSet ( attr ) ) ; }
46246	public void startDocument ( ) throws SAXException { }
46260	protected MouseListener createListMouseListener ( ) { return getHandler ( ) ; }
46265	public static void doWebPOST ( HttpServletRequest request , HttpServletResponse response , String target ) throws IOException , SAMLException { doSSO ( request , response , target , SAMLConstants . SAML_POST_NAMING ) ; }
46266	public static String format ( String pattern , Map arguments ) { MapFormat temp = new MapFormat ( arguments ) ; return temp . format ( pattern ) ; }
46280	public void putAll ( Map < ? extends K , ? extends V > m ) { for ( Map . Entry < ? extends K , ? extends V > e : m . entrySet ( ) ) put ( e . getKey ( ) , e . getValue ( ) ) ; }
46290	public Result useInteractedBlock ( ) { return useClickedBlock ; }
46302	public static Condition implies ( Condition premise , Condition implication ) { return or ( not ( premise ) , implication ) ; }
46306	private void checkShutdownAccess ( ) { SecurityManager security = System . getSecurityManager ( ) ; if ( security != _NULL ) { security . checkPermission ( shutdownPerm ) ; final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { for ( Worker w : workers ) security . checkAccess ( w . thread ) ; } finally { mainLock . unlock ( ) ; } } }
46310	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
46331	public void removeElementAt ( int i ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; super . removeElementAt ( i ) ; }
46333	public synchronized boolean isNotificationEnabled ( Notification notification ) { String type = notification . getType ( ) ; if ( type == _NULL ) { return _BOOL ; } try { for ( String prefix : enabledTypes ) { if ( type . startsWith ( prefix ) ) { return _BOOL ; } } } catch ( java . lang . NullPointerException e ) { return _BOOL ; } return _BOOL ; }
46335	Stylesheet popStylesheet ( ) { if ( ! m_stylesheetLocatorStack . isEmpty ( ) ) m_stylesheetLocatorStack . pop ( ) ; if ( ! m_stylesheets . isEmpty ( ) ) m_lastPoppedStylesheet = ( Stylesheet ) m_stylesheets . pop ( ) ; return m_lastPoppedStylesheet ; }
46338	public void insertRow ( int row , Object [ ] rowData ) { insertRow ( row , convertToVector ( rowData ) ) ; }
46341	public static void fill ( int [ ] a , int fromIndex , int toIndex , int val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
46356	public static String showInputDialog ( Component parentComponent , Object message , Object initialSelectionValue ) { return ( String ) showInputDialog ( parentComponent , message , UIManager . getString ( _CHAR OptionPane . inputDialogTitle _CHAR , parentComponent ) , QUESTION_MESSAGE , _NULL , _NULL , initialSelectionValue ) ; }
46358	protected void layout ( int width , int height ) { super . layout ( Integer . MAX_VALUE - _NUM , height ) ; }
46359	private static boolean evalAttrType ( AttributeType a , TargetAttr targetAttr ) { final EnumTargetOperator op = targetAttr . getOperator ( ) ; if ( a . isOperational ( ) ) { return evalAttrType ( a , targetAttr . isAllOpAttributes ( ) , targetAttr . opAttributes , op ) ; } else { return evalAttrType ( a , targetAttr . isAllUserAttributes ( ) , targetAttr . attributes , op ) ; } }
46371	public boolean retainAll ( Collection < ? > c ) { Objects . requireNonNull ( c ) ; return batchRemove ( c , _BOOL ) ; }
46382	public void addLayoutComponent ( Component comp , Object constraints ) { synchronized ( comp . getTreeLock ( ) ) { if ( constraints == _NULL ) { constraints = _CHAR _CHAR ; } if ( constraints instanceof String ) { addLayoutComponent ( ( String ) constraints , comp ) ; } else { throw new IllegalArgumentException ( _CHAR can not add to layout : constraint must be a string _CHAR ) ; } } }
46384	public Matcher useAnchoringBounds ( boolean b ) { anchoringBounds = b ; return this ; }
46387	@ Override public int compareTo ( ZoneOffsetTransition transition ) { return this . getInstant ( ) . compareTo ( transition . getInstant ( ) ) ; }
46389	public boolean isSplitForcedByNewline ( ) { return splitForcedByNewline ; }
46391	public ReplicationMsg receive ( ) throws SocketTimeoutException { return receive ( _BOOL , _BOOL , _BOOL ) ; }
46397	@ Override public boolean isTLSInUse ( SoapMessage message ) { return super . isTLSInUse ( message ) || HTTPS . equals ( message . get ( HTTP_SCHEME ) ) ; }
46398	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
46400	private void decodeRules ( ) { decodeStartRule ( ) ; decodeEndRule ( ) ; }
46403	public void printStackTrace ( ) { printStackTrace ( System . err ) ; }
46424	static AttributeType newPlaceHolder ( final String name , final Syntax syntax , final MatchingRule equalityMatchingRule ) { return new AttributeType ( name , syntax , equalityMatchingRule ) ; }
46433	private ScriptException convertException ( RhinoException ex ) { final ScriptException se = new ScriptException ( ex . getMessage ( ) , ex . sourceName ( ) , ex . lineNumber ( ) , ex . columnNumber ( ) ) ; se . initCause ( ex ) ; return se ; }
46435	boolean validateAttributes ( SSOToken ssoToken , Map < String , Set < String >> attributeSet , boolean encodePassword , String orgName ) throws SMSException { return validateAttributes ( ssoToken , attributeSet , encodePassword , orgName , _BOOL ) ; }
46436	private Object writeReplace ( ) { return new UnmodifiableList < E > ( list ) ; }
46447	private void changeSelection ( int clearMin , int clearMax , int setMin , int setMax ) { changeSelection ( clearMin , clearMax , setMin , setMax , _BOOL ) ; }
46467	@ Deprecated public static void initializeForClientUse ( ) { DirectoryServer . getInstance ( ) ; DirectoryServer . bootstrapClient ( ) ; }
46470	private void searchUpdateSent ( ) throws Exception { assertEquals ( searchNbMonitorEntries ( _CHAR ( sent - updates = _CHAR + WINDOW_SIZE + _CHAR ) _CHAR ) , _NUM ) ; final int nb = searchNbMonitorEntries ( _CHAR ( missing - changes = _CHAR + ( REPLICATION_QUEUE_SIZE + WINDOW_SIZE ) + _CHAR ) _CHAR ) ; assertEquals ( nb , _NUM ) ; }
46474	protected String paramString ( ) { return super . paramString ( ) ; }
46477	public AnnotationVisitor visitInsnAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { return mv . visitInsnAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
46480	void syncToFileSystem ( ) throws ChangelogException { checkLogIsEnabledForWrite ( ) ; sharedLock . lock ( ) ; try { writer . sync ( ) ; } catch ( Exception e ) { throw new ChangelogException ( ERR_CHANGELOG_UNABLE_TO_SYNC . get ( getPath ( ) ) , e ) ; } finally { sharedLock . unlock ( ) ; } }
46483	public void processingInstruction ( String target , String data ) throws SAXException { }
46504	public static void writeLines ( File file , Collection < ? > lines , boolean append ) throws IOException { writeLines ( file , _NULL , lines , _NULL , append ) ; }
46505	public Object [ ] toArray ( ) { return copyElements ( new Object [ size ( ) ] ) ; }
46519	public static int copy ( InputStream input , OutputStream output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
46520	protected void firePropertyChange ( String propertyName , Object oldValue , Object newValue ) { if ( changeSupport == _NULL || ( oldValue != _NULL && newValue != _NULL && oldValue . equals ( newValue ) ) ) { return ; } changeSupport . firePropertyChange ( propertyName , oldValue , newValue ) ; }
46526	@ Override public void close ( ) throws SQLException { if ( ! _closed ) { closeInternal ( ) ; } }
46527	public void add ( int index , E element ) { delegate . insertElementAt ( element , index ) ; fireIntervalAdded ( this , index , index ) ; }
46532	public void logModifyResponse ( ModifyOperation modifyOperation ) { }
46534	public void remove ( Component comp ) { if ( comp == rootPane ) { super . remove ( comp ) ; } else { getContentPane ( ) . remove ( comp ) ; } }
46535	public void notationDecl ( String name , String publicId , String systemId ) throws SAXException { }
46558	public boolean isEnqueued ( ) { return ( this . queue == ReferenceQueue . ENQUEUED ) ; }
46560	public synchronized void disableAttribute ( String name ) { enabledAttributes . removeElement ( name ) ; }
46566	public boolean use ( String name ) { if ( includes != _NULL && includes . contains ( name ) ) { return _BOOL ; } else if ( excludes != _NULL && excludes . contains ( name ) ) { return _BOOL ; } else { return includes != _NULL ? _BOOL : _BOOL ; } }
46575	public E push ( E item ) { add ( item ) ; return item ; }
46582	final Node predecessor ( ) throws NullPointerException { Node p = prev ; if ( p == _NULL ) throw new NullPointerException ( ) ; else return p ; }
46583	final void registerInParent ( ) { if ( parent != _NULL ) { parent . children . put ( name , this ) ; } }
46589	public synchronized void requestPreviewFrame ( Handler handler , int message ) { Camera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . setOneShotPreviewCallback ( previewCallback ) ; } }
46595	public DNLock tryWriteLockSubtree ( final DN subtree ) { return acquireLockFromCache ( subtree ) . tryWriteLockSubtree ( ) ; }
46596	public boolean isSplitForcedByNewline ( ) { return splitForcedByNewline ; }
46610	protected void swapOut ( Session session ) throws IOException { if ( store == _NULL || ! session . isValid ( ) ) { return ; } ( ( StandardSession ) session ) . passivate ( ) ; writeSession ( session ) ; super . remove ( session , _BOOL ) ; session . recycle ( ) ; }
46611	public void performPostModify ( ServerManagedObject < ? > managedObject ) throws ConfigException { }
46622	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiComboBoxUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiComboBoxUI ) mui ) . uis , a ) ; }
46628	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
46634	private static int parseUnsignedShort ( final byte [ ] bytes , final int i ) { return ( ( bytes [ i ] & _NUM ) << _NUM ) | ( bytes [ i + _NUM ] & _NUM ) ; }
46639	public boolean equals ( Object obj ) { if ( obj == _NULL || ( ! ( obj instanceof Timestamp ) ) ) { return _BOOL ; } Timestamp that = ( Timestamp ) obj ; if ( this == that ) { return _BOOL ; } return ( timestamp . equals ( that . getTimestamp ( ) ) && signerCertPath . equals ( that . getSignerCertPath ( ) ) ) ; }
46641	private static void addAllToJson ( JsonValue to , JsonValue from ) { Iterator < String > iter = from . keys ( ) . iterator ( ) ; while ( iter . hasNext ( ) ) { String key = iter . next ( ) ; to . put ( key , from . get ( key ) . getObject ( ) ) ; } }
46650	public static int hashCode ( Object a [ ] ) { if ( a == _NULL ) return _NUM ; int result = _NUM ; for ( Object element : a ) result = _NUM * result + ( element == _NULL ? _NUM : element . hashCode ( ) ) ; return result ; }
46657	protected < T > Handler < AsyncResult < T >> resultHandlerNonEmpty ( RoutingContext context ) { return _NULL ; }
46670	@ Override public int read ( ) { if ( saveBufferReader . remaining ( ) > _NUM ) { return _NUM & saveBufferReader . readByte ( ) ; } if ( byteBuffer . remaining ( ) > _NUM ) { return _NUM & byteBuffer . get ( ) ; } throw new IllegalBlockingModeException ( ) ; }
46671	public int compareTo ( Object o ) { ObjectStreamField f = ( ObjectStreamField ) o ; boolean thisPrimitive = this . isPrimitive ( ) ; boolean fPrimitive = f . isPrimitive ( ) ; if ( thisPrimitive != fPrimitive ) { return thisPrimitive ? - _NUM : _NUM ; } return this . getName ( ) . compareTo ( f . getName ( ) ) ; }
46673	@ Override public void removeTransformer ( ClassFileTransformer transformer ) { if ( transformer == _NULL ) { return ; } if ( this . transformers . remove ( transformer ) ) { log . info ( sm . getString ( _CHAR webappClassLoader . removeTransformer _CHAR , transformer , getContextName ( ) ) ) ; return ; } }
46696	public void write ( byte [ ] b ) throws IOException { write ( b , _NUM , b . length ) ; }
46703	public synchronized void addActionListener ( ActionListener l ) { if ( l == _NULL ) { return ; } actionListener = AWTEventMulticaster . add ( actionListener , l ) ; newEventsOnly = _BOOL ; }
46704	public void mouseEntered ( MouseEvent e ) { handler . mouseEntered ( e ) ; }
46706	public boolean removeAll ( Collection < ? > c ) { boolean modified = _BOOL ; for ( Object e : c ) if ( remove ( e ) ) modified = _BOOL ; return modified ; }
46714	protected GridBagConstraints lookupConstraints ( Component comp ) { GridBagConstraints constraints = comptable . get ( comp ) ; if ( constraints == _NULL ) { setConstraints ( comp , defaultConstraints ) ; constraints = comptable . get ( comp ) ; } return constraints ; }
46716	public boolean removeAll ( Collection < ? > c ) { boolean modified = _BOOL ; for ( Object e : c ) if ( remove ( e ) ) modified = _BOOL ; return modified ; }
46718	@ Override public String toString ( ) { return original ; }
46720	public Enumeration postorderEnumeration ( ) { return new PostorderEnumeration ( this ) ; }
46722	static XMPMetaImpl parse ( Node xmlRoot ) throws XMPException { XMPMetaImpl xmp = new XMPMetaImpl ( ) ; rdf_RDF ( xmp , xmlRoot ) ; return xmp ; }
46726	public String readStringUtf8 ( final int length ) { if ( remaining ( ) < length ) { throw new IndexOutOfBoundsException ( ) ; } final int newPos = pos + length ; final String str = sequence . subSequence ( pos , pos + length ) . toString ( ) ; pos = newPos ; return str ; }
46729	private void updateDisplayedMnemonicIndex ( String text , int mnemonic ) { setDisplayedMnemonicIndex ( SwingUtilities . findDisplayedMnemonicIndex ( text , mnemonic ) ) ; }
46737	public void trimToSize ( ) { modCount ++ ; if ( size < elementData . length ) { elementData = ( size == _NUM ) ? EMPTY_ELEMENTDATA : Arrays . copyOf ( elementData , size ) ; } }
46761	protected Component createComponent ( ) { AttributeSet attr = getElement ( ) . getAttributes ( ) ; Component comp = StyleConstants . getComponent ( attr ) ; return comp ; }
46771	static Method findMethod ( Class < ? > cls , String methodName , int argCount , Class args [ ] ) { if ( methodName == _NULL ) { return _NULL ; } return internalFindMethod ( cls , methodName , argCount , args ) ; }
46780	public PowerTile genPowerTile ( float [ ] coords , int stageZone ) { return new PowerTile ( player , stageZone , coords [ _NUM ] , coords [ _NUM ] , ( float ) _NUM . _NUM * REL_HEIGHT , ( float ) _NUM . _NUM * REL_HEIGHT , stageContainer , tile0 , tile1 , tile2 , tile3 , tile4 ) ; }
46783	public AMSearchResults searchSubOrganizations ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ORGANIZATION ) , getSearchFilter ( AMObject . ORGANIZATION ) , wildcard , avPairs , searchControl ) ; }
46797	@ Override public int read ( ) throws IOException { synchronized ( lock ) { if ( isOpen ( ) ) { if ( pos != count ) { return str . charAt ( pos ++ ) ; } return - _NUM ; } throw new IOException ( _CHAR StringReader is closed _CHAR ) ; } }
46807	boolean validateAttributes ( Map < String , Set < String >> attributeSet , boolean encodePassword , String orgName ) throws SMSException { return ( validateAttributes ( _NULL , attributeSet , encodePassword , orgName ) ) ; }
46809	public java . io . InputStream readAsciiStream ( ) throws SQLException { return ( java . io . InputStream ) getNextAttribute ( ) ; }
46812	public int intValue ( ) { return ( int ) longValue ; }
46815	private static boolean isCoreSyntaxTerm ( int term ) { return RDFTERM_FIRST_CORE <= term && term <= RDFTERM_LAST_CORE ; }
46822	public LoginConfiguration indexValue ( String indexValue ) { switch ( indexType ) { case COMPOSITE : { httpRequest = new RestAuthHttpRequestWrapper ( httpRequest ) ; ( ( RestAuthHttpRequestWrapper ) httpRequest ) . addParameter ( AuthClientUtils . COMPOSITE_ADVICE , indexValue ) ; } } this . indexValue = indexValue ; return this ; }
46824	public void _read ( InputStream input ) { value = input . read_boolean ( ) ; }
46835	boolean isParagraph ( ) { return ( this == P || this == IMPLIED || this == DT || this == H1 || this == H2 || this == H3 || this == H4 || this == H5 || this == H6 ) ; }
46838	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiViewportUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiViewportUI ) mui ) . uis , a ) ; }
46846	public boolean echoCharIsSet ( ) { return echoChar != _NUM ; }
46853	public int compareTo ( File pathname ) { return fs . compare ( this , pathname ) ; }
46857	protected void paintComponent ( Graphics g ) { if ( ui != _NULL ) { Graphics scratchGraphics = ( g == _NULL ) ? _NULL : g . create ( ) ; try { ui . update ( scratchGraphics , this ) ; } finally { scratchGraphics . dispose ( ) ; } } }
46858	public void synchronize ( ) { checkAdminConnector ( ) ; }
46867	public static String requestPath ( URL url ) { String fileOnly = url . getFile ( ) ; if ( fileOnly == _NULL ) { return _CHAR / _CHAR ; } else if ( ! fileOnly . startsWith ( _CHAR / _CHAR ) ) { return _CHAR / _CHAR + fileOnly ; } else { return fileOnly ; } }
46875	final Node predecessor ( ) throws NullPointerException { Node p = prev ; if ( p == _NULL ) throw new NullPointerException ( ) ; else return p ; }
46881	public boolean remove ( AccessibleRelation relation ) { if ( relations == _NULL ) { return _BOOL ; } else { return relations . removeElement ( relation ) ; } }
46885	private static boolean isSpace ( char ch ) { return XMLCharacterRecognizer . isWhiteSpace ( ch ) ; }
46918	public Object put ( Object name , Object value ) { return map . put ( ( Attributes . Name ) name , ( String ) value ) ; }
46919	public void endDocument ( ) throws org . xml . sax . SAXException { flushPending ( ) ; flushWriter ( ) ; if ( m_tracer != _NULL ) super . fireEndDoc ( ) ; }
46928	private boolean isPageStreaming ( Method method ) { Type type = apiaryConfig . getType ( method . getResponseTypeUrl ( ) ) ; if ( type == _NULL ) { return _BOOL ; } for ( Field field : type . getFieldsList ( ) ) { if ( field . getName ( ) . equals ( NEXT_PAGE_TOKEN_FIELD_NAME ) ) { return _BOOL ; } } return _BOOL ; }
46939	public static boolean pointInView ( View v , float localX , float localY , float slop ) { return localX >= - slop && localY >= - slop && localX < ( v . getWidth ( ) + slop ) && localY < ( v . getHeight ( ) + slop ) ; }
46944	public boolean equalsIgnoreCase ( String anotherString ) { return m_str . equalsIgnoreCase ( anotherString ) ; }
46945	public boolean addAll ( RoleList roleList ) throws IndexOutOfBoundsException { if ( roleList == _NULL ) { return _BOOL ; } return ( super . addAll ( roleList ) ) ; }
46947	@ Override public String toString ( ) { return getSerializedNameString ( ) ; }
46948	public final void exceptionPrint ( String message , Exception exc ) { System . err . println ( exceptionExpand ( message , exc ) ) ; }
46953	public boolean isActive ( ) { if ( stub != _NULL ) { return stub . isActive ( ) ; } else { return _BOOL ; } }
46961	public static Foo fetchByUUID_G ( java . lang . String uuid , long groupId ) { return getPersistence ( ) . fetchByUUID_G ( uuid , groupId ) ; }
46970	protected void addImpl ( Component x , Object constraints , int index ) { if ( x . getParent ( ) == this ) { return ; } else { super . addImpl ( x , constraints , index ) ; } }
46992	public void dragEnter ( DropTargetDragEvent dtde ) { }
46997	private void handleNonCORS ( final HttpServletRequest request , final HttpServletResponse response , final FilterChain filterChain ) throws IOException , ServletException { filterChain . doFilter ( request , response ) ; }
47015	@ Override public boolean supportsPredictiveItemAnimations ( ) { return _BOOL ; }
47016	void processDragOver ( DragSourceDragEvent dsde ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragOver ( dsde ) ; } }
47021	protected boolean isSupported ( Method method ) { return ! method . getRequestStreaming ( ) && ! method . getResponseStreaming ( ) ; }
47029	public void fatalError ( TransformerException exception ) throws TransformerException { if ( m_throwExceptionOnError ) throw exception ; else { PrintWriter pw = getErrorWriter ( ) ; printLocation ( pw , exception ) ; pw . println ( exception . getMessage ( ) ) ; } }
47034	public boolean isGeneric ( ) { return CollectionUtils . isEmpty ( permittedDomains ) ; }
47051	public boolean isLeadAnchorNotificationEnabled ( ) { return leadAnchorNotificationEnabled ; }
47052	public void log ( Level level , String msg ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; doLog ( lr ) ; }
47065	public static String toUpperCase ( String s ) { if ( s == _NULL ) { return _NULL ; } StringBuilder buffer = new StringBuilder ( s . length ( ) ) ; toUpperCase ( s , buffer ) ; return buffer . toString ( ) ; }
47080	protected void fireVetoableChange ( String propertyName , Object oldValue , Object newValue ) throws java . beans . PropertyVetoException { if ( vetoableChangeSupport == _NULL ) { return ; } vetoableChangeSupport . fireVetoableChange ( propertyName , oldValue , newValue ) ; }
47092	public static < T > ObjectPool < T > erodingPool ( final ObjectPool < T > pool , final float factor ) { if ( pool == _NULL ) { throw new IllegalArgumentException ( _CHAR pool must not be _NULL . _CHAR ) ; } if ( factor <= _NUM ) { throw new IllegalArgumentException ( _CHAR factor must be positive . '' ) ; } return new ErodingObjectPool < > ( pool , factor ) ; }
47111	public org . omg . CORBA . TypeCode type ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR type _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . type ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
47116	public MethodType basicType ( ) { return basicType ; }
47120	public static void writeRemoteObject ( OutputStream out , java . lang . Object obj ) { if ( utilDelegate != _NULL ) { utilDelegate . writeRemoteObject ( out , obj ) ; } }
47129	public boolean equals ( Object obj ) { return ( obj != _NULL && obj instanceof CompositeName && impl . equals ( ( ( CompositeName ) obj ) . impl ) ) ; }
47142	public boolean isPersistent ( ) { return ( _NULL != cookieExpiryDate ) ; }
47143	public static String wrapText ( final LocalizableMessage message , final int width ) { return wrapText ( message . toString ( ) , width , _NUM ) ; }
47158	@ Override public Principal authenticate ( String username , String credentials ) { return authenticate ( username , new JAASCallbackHandler ( this , username , credentials ) ) ; }
47161	public boolean isDynamic ( ) { return myCRIF . isDynamic ( ) ; }
47169	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof NTPrincipal ) ) { return _BOOL ; } NTPrincipal that = ( NTPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
47176	public W3CEndpointReferenceBuilder address ( String address ) { this . address = address ; return this ; }
47179	protected Handler < AsyncResult < Void >> deleteResultHandler ( RoutingContext context ) { return _NULL ; }
47216	@ Override public void realWriteChars ( char c [ ] , int off , int len ) throws IOException { markPos =- _NUM ; cb . setOffset ( _NUM ) ; cb . setEnd ( _NUM ) ; }
47238	public boolean isRichText ( ) { return getFieldFlag ( FF_RICH_TEXT ) ; }
47240	protected void reportWrongNumberArgs ( ) throws WrongNumberArgsException { throw new WrongNumberArgsException ( XSLMessages . createXPATHMessage ( _CHAR zero _CHAR , _NULL ) ) ; }
47247	public static boolean match ( String pattern , String str , boolean caseSensitive ) { return match ( pattern , str . toCharArray ( ) , caseSensitive ) ; }
47250	public final void writeChar ( int v ) throws IOException { out . write ( ( v >> > _NUM ) & _NUM ) ; out . write ( ( v >> > _NUM ) & _NUM ) ; incCount ( _NUM ) ; }
47255	private Object readResolve ( ) { if ( list instanceof RandomAccess ) { return new SynchronizedRandomAccessList < E > ( list , mutex ) ; } return this ; }
47257	public void preSingleLogoutProcess ( String hostedEntityID , String realm , HttpServletRequest request , HttpServletResponse response , String userID , LogoutRequest logoutRequest , LogoutResponse logoutResponse , String binding ) throws SAML2Exception { return ; }
47302	@ Override public Object lookupLink ( Name name ) throws NamingException { return lookup ( name , _BOOL ) ; }
47307	public void insertChar ( AttributedCharacterIterator newParagraph , int insertPos ) { measurer . insertChar ( newParagraph , insertPos ) ; limit = newParagraph . getEndIndex ( ) ; pos = start = newParagraph . getBeginIndex ( ) ; charIter . reset ( measurer . getChars ( ) , newParagraph . getBeginIndex ( ) ) ; breakIter . setText ( charIter ) ; }
47308	public void log ( Level level , String msg , Object param1 ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; Object params [ ] = { param1 } ; lr . setParameters ( params ) ; doLog ( lr ) ; }
47312	public void endPrefixMapping ( String prefix ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . endPrefixMapping ( prefix ) ; }
47314	protected String paramString ( ) { return super . paramString ( ) ; }
47318	protected MouseListener createMouseListener ( ) { return getHandler ( ) ; }
47322	protected synchronized void minorRequirementChange ( ChildState cs ) { minorChanged = _BOOL ; }
47325	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
47347	public void toByteString ( ByteStringBuilder builder ) { builder . appendLong ( timeStamp ) . appendShort ( serverId & _NUM ) . appendInt ( seqnum ) ; }
47356	public boolean isValid ( TagData data ) { return _BOOL ; }
47366	public void grabFocus ( ) { requestFocus ( ) ; }
47367	public boolean isLoggable ( Level level ) { if ( level . intValue ( ) < levelValue || levelValue == offValue ) { return _BOOL ; } return _BOOL ; }
47368	public static BooleanArgument continueOnErrorArgument ( ) throws ArgumentException { return BooleanArgument . builder ( _CHAR continueOnError _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_DESCRIPTION_CONTINUE_ON_ERROR . get ( ) ) . buildArgument ( ) ; }
47375	public int compareTo ( Object o1 ) { QCharset q1 = ( QCharset ) o1 ; if ( qFactor < q1 . qFactor ) { return _NUM ; } if ( qFactor > q1 . qFactor ) { return - _NUM ; } return name . compareTo ( q1 . name ) ; }
47376	public void updateUI ( ) { setUI ( ( TreeUI ) UIManager . getUI ( this ) ) ; SwingUtilities . updateRendererOrEditorUI ( getCellRenderer ( ) ) ; SwingUtilities . updateRendererOrEditorUI ( getCellEditor ( ) ) ; }
47382	public static synchronized void sdkInitialize ( Context context ) { if ( sdkInitialized == _BOOL ) { return ; } Settings . loadDefaultsFromMetadataIfNeeded ( context ) ; Utility . loadAppSettingsAsync ( context , Settings . getApplicationId ( ) ) ; BoltsMeasurementEventListener . getInstance ( context . getApplicationContext ( ) ) ; sdkInitialized = _BOOL ; }
47386	synchronized boolean recoveryUntil ( CSN recovered ) { final CSN lastLocalChange = domain . getLastLocalChange ( ) ; if ( recovered != _NULL && recovered . isNewerThanOrEqualTo ( lastLocalChange ) ) { recoveringOldChanges = _BOOL ; } return recoveringOldChanges ; }
47391	@ Override public void onRender ( ) { if ( error ) { addModel ( _CHAR error _CHAR , _BOOL ) ; } else { addModel ( _CHAR currentVersion _CHAR , VersionUtils . getCurrentVersion ( ) ) ; addModel ( _CHAR newVersion _CHAR , VersionUtils . getWarFileVersion ( ) ) ; addModel ( _CHAR changelist _CHAR , upgrade . generateShortUpgradeReport ( adminToken , _BOOL ) ) ; } }
47406	public boolean keepProcessingTemplateFile ( ) { return keepProcessingTemplateFile ; }
47407	public int read ( byte [ ] buf , int off , int len ) throws IOException { len = in . read ( buf , off , len ) ; if ( len != - _NUM ) { cksum . update ( buf , off , len ) ; } return len ; }
47412	@ SuppressWarnings ( _CHAR unchecked _CHAR ) protected void init ( Hashtable < ? , ? > environment ) throws NamingException { myProps = ( Hashtable < Object , Object > ) ResourceManager . getInitialEnvironment ( environment ) ; if ( myProps . get ( Context . INITIAL_CONTEXT_FACTORY ) != _NULL ) { getDefaultInitCtx ( ) ; } }
47418	protected void printComponent ( Graphics g ) { paintComponent ( g ) ; }
47432	protected V create ( K key ) { return _NULL ; }
47434	private static boolean isMimeText ( String file ) { if ( file == _NULL ) return _BOOL ; if ( ! file . contains ( _CHAR . _CHAR ) ) return _BOOL ; file = file . substring ( file . lastIndexOf ( _CHAR / _CHAR ) + _NUM ) ; return MimeTypes . getInstance ( ) . getMimeType ( file ) . startsWith ( _CHAR text / _CHAR ) ; }
47449	public SearchResults search ( SearchTemplate template , SearchControl searchControl ) throws UMSException { return search ( template . getSearchFilter ( ) , template . getAttributeSet ( ) . getAttributeNames ( ) , searchControl ) ; }
47451	public void fine ( Supplier < String > msgSupplier ) { log ( Level . FINE , msgSupplier ) ; }
47465	public void write ( int b ) { try { synchronized ( this ) { ensureOpen ( ) ; out . write ( b ) ; if ( ( b == _CHAR ) && autoFlush ) out . flush ( ) ; } } catch ( InterruptedIOException x ) { Thread . currentThread ( ) . interrupt ( ) ; } catch ( IOException x ) { trouble = _BOOL ; } }
47475	protected String paramString ( ) { return super . paramString ( ) ; }
47477	private Node < E > nextNode ( Node < E > p ) { for ( ; ; ) { Node < E > s = p . next ; if ( s == p ) return head . next ; if ( s == _NULL || s . item != _NULL ) return s ; p = s ; } }
47492	public static void writeLines ( File file , String encoding , Collection < ? > lines , String lineEnding ) throws IOException { writeLines ( file , encoding , lines , lineEnding , _BOOL ) ; }
47504	public String configure ( ) { if ( isConfigured ( ) ) { return baseDir ; } configData . put ( _CHAR DEPLOYMENT_URI _CHAR , uri ) ; configData . put ( _CHAR BASE_DIR _CHAR , baseDir ) ; return AMSetupServlet . configure ( servletct , configData ) ; }
47511	protected boolean isHttpSeparator ( char ch ) { return ( HTTP_SEPARATORS . indexOf ( ch ) >= _NUM ) ; }
47515	public void compose ( StylesheetRoot sroot ) throws TransformerException { super . compose ( sroot ) ; StylesheetRoot . ComposeState cstate = sroot . getComposeState ( ) ; m_selectExpression . fixupVariables ( cstate . getVariableNames ( ) , cstate . getGlobalsSize ( ) ) ; }
47522	protected T childValue ( T parentValue ) { return parentValue ; }
47530	public static int showInternalConfirmDialog ( Component parentComponent , Object message , String title , int optionType , int messageType ) { return showInternalConfirmDialog ( parentComponent , message , title , optionType , messageType , _NULL ) ; }
47543	private boolean removeElement ( int s ) { int at = indexOf ( s , _NUM ) ; if ( at < _NUM ) return _BOOL ; removeElementAt ( at ) ; return _BOOL ; }
47544	public AMSearchResults searchRoles ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ROLE ) , getSearchFilter ( AMObject . ROLE ) , wildcard , avPairs , searchControl ) ; }
47546	private Object writeReplace ( ) { return new SynchronizedList < E > ( list ) ; }
47575	public byte [ ] decode ( byte [ ] bytes ) throws DecoderException { return decodeQuotedPrintable ( bytes ) ; }
47586	public void propertyChange ( PropertyChangeEvent e ) { getHandler ( ) . propertyChange ( e ) ; }
47596	protected ItemListener createItemListener ( ) { return getHandler ( ) ; }
47600	private static int findRunContaining ( int index , int [ ] starts ) { for ( int i = _NUM ; _BOOL ; i ++ ) { if ( starts [ i ] > index ) { return i - _NUM ; } } }
47610	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeBlob ( Blob x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialBlob ( x ) ) ; } }
47611	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof JobOriginatingUserName ) ; }
47623	public static TitledBorder createTitledBorder ( Border border , String title ) { return new TitledBorder ( border , title ) ; }
47627	public void addAccessibleSelection ( int i ) { JList . this . addSelectionInterval ( i , i ) ; }
47635	public void printStackTrace ( ) { printStackTrace ( System . err ) ; }
47640	@ Override public final void run ( ) { setProcessingStartTime ( ) ; getPluginConfigManager ( ) . invokePreParseUnbindPlugins ( this ) ; logUnbind ( this ) ; getClientConnection ( ) . disconnect ( DisconnectReason . UNBIND , _BOOL , _NULL ) ; getPluginConfigManager ( ) . invokePostOperationUnbindPlugins ( this ) ; setProcessingStopTime ( ) ; }
47647	public static void addOCGRadioGroup ( PdfDocument document , List < PdfLayer > group ) { document . getCatalog ( ) . getOCProperties ( _BOOL ) . addOCGRadioGroup ( group ) ; }
47659	@ Override public void mark ( int readLimit ) throws IOException { if ( readLimit >= _NUM ) { synchronized ( lock ) { if ( isOpen ( ) ) { markpos = pos ; } else { throw new IOException ( _CHAR StringReader is closed _CHAR ) ; } } } else { throw new IllegalArgumentException ( ) ; } }
47674	public int hashCode ( ) { return ( key . hashCode ( ) ) ; }
47691	public void popContext ( ) { Context2 parentContext = currentContext . getParent ( ) ; if ( parentContext == _NULL ) throw new EmptyStackException ( ) ; else currentContext = parentContext ; }
47694	public boolean isLeapYear ( ) { return IsoChronology . INSTANCE . isLeapYear ( year ) ; }
47695	@ Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { process ( request . getRemoteAddr ( ) , request , response , chain ) ; }
47701	public void addRow ( final Object [ ] rowData ) { addRow ( convertToVector ( rowData ) ) ; }
47723	private void adjustFooterAndFixOccupiedArea ( Rectangle layoutBox ) { if ( footerRenderer != _NULL ) { footerRenderer . move ( _NUM , layoutBox . getHeight ( ) ) ; float footerHeight = footerRenderer . getOccupiedArea ( ) . getBBox ( ) . getHeight ( ) ; occupiedArea . getBBox ( ) . moveDown ( footerHeight ) . increaseHeight ( footerHeight ) ; } }
47725	public Brick genBrick ( float [ ] coords , int stageZone ) { return new Brick ( stageZone , coords [ _NUM ] , coords [ _NUM ] , brick0 ) ; }
47727	static < T > Promise < T > blockingPromise ( final Duration duration ) { return new BlockingPromise < > ( duration ) ; }
47740	public static < T > T orderWrites ( final T ref ) { theVolatile = _NUM ; return ref ; }
47742	public void clear ( ) { names . clear ( ) ; types . clear ( ) ; values . clear ( ) ; }
47751	public synchronized void enableType ( String prefix ) throws IllegalArgumentException { if ( prefix == _NULL ) { throw new IllegalArgumentException ( _CHAR The prefix can not be _NULL . _CHAR ) ; } if ( ! enabledTypes . contains ( prefix ) ) { enabledTypes . add ( prefix ) ; } }
47766	@ NonNull public static Interpolator accelerateDecelerate ( ) { return new AccelerateDecelerateInterpolator ( ) ; }
47773	public final boolean supports ( String feature , String version ) { return implementation . hasFeature ( feature , version ) ; }
47777	public boolean removeAll ( Collection < ? > c ) { return al . removeAll ( c ) ; }
47778	public long toMinutes ( ) { return seconds / SECONDS_PER_MINUTE ; }
47780	public void error ( SAXParseException e ) throws SAXException { }
47781	public StateInteractive mouse_moved ( ) { PlaPointFloat mouse_position = i_brd . coordinate_transform . board_to_user ( i_brd . get_current_mouse_position ( ) ) ; i_brd . screen_messages . set_mouse_position ( mouse_position ) ; return this ; }
47787	public void initializeAccessControl ( ServerContext serverContext ) throws ConfigException , InitializationException { this . serverContext = serverContext ; AccessControlHandlerCfg accessControlConfiguration = serverContext . getRootConfig ( ) . getAccessControlHandler ( ) ; accessControlConfiguration . addChangeListener ( this ) ; currentConfiguration = _NULL ; updateConfiguration ( accessControlConfiguration ) ; }
47809	public boolean addAll ( Collection < ? extends E > c ) { if ( c == _NULL ) throw new NullPointerException ( _CHAR c == _NULL _CHAR ) ; if ( c == this ) throw new IllegalArgumentException ( _CHAR c == this _CHAR ) ; boolean modified = _BOOL ; for ( E e : c ) if ( add ( e ) ) modified = _BOOL ; return modified ; }
47812	Component createComponent ( Component owner ) { if ( GraphicsEnvironment . isHeadless ( ) ) { return _NULL ; } return new HeavyWeightWindow ( getParentWindow ( owner ) ) ; }
47817	public void startDocument ( ) throws SAXException { }
47828	public void doLogKey ( String key ) { if ( logStatus ) { doLog ( Locale . getString ( rb , key , PWResetModelImpl . debug ) ) ; } }
47829	private void createInitializeAllReplicationSubCommand ( ) throws ArgumentException { initializeAllReplicationSubCmd = new SubCommand ( this , INITIALIZE_ALL_REPLICATION_SUBCMD_NAME , INFO_DESCRIPTION_SUBCMD_INITIALIZE_ALL_REPLICATION . get ( INITIALIZE_REPLICATION_SUBCMD_NAME ) ) ; Argument [ ] argsToAdd = { secureArgsList . getHostNameArg ( ) , secureArgsList . getPortArg ( ) } ; for ( Argument arg : argsToAdd ) { initializeAllReplicationSubCmd . addArgument ( arg ) ; } }
47833	public BindOperation processSimpleBind ( DN bindDN , ByteString password , List < Control > controls ) { BindOperationBasis bindOperation = new BindOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , PROTOCOL_VERSION , bindDN , password ) ; bindOperation . setInternalOperation ( _BOOL ) ; bindOperation . run ( ) ; return bindOperation ; }
47846	public boolean currentFuncResultSeen ( ) { return ! m_currentFuncResult . empty ( ) && m_currentFuncResult . peek ( ) != _NULL ; }
47854	public void updateUI ( ) { setUI ( ( InternalFrameUI ) UIManager . getUI ( this ) ) ; invalidate ( ) ; if ( desktopIcon != _NULL ) { desktopIcon . updateUIWhenHidden ( ) ; } }
47858	public void reset ( ) { loginStatus = Status . NOT_STARTED ; }
47860	public void removeDragSourceMotionListener ( DragSourceMotionListener dsml ) { if ( dsml != _NULL ) { synchronized ( this ) { motionListener = DnDEventMulticaster . remove ( motionListener , dsml ) ; } } }
47867	public DTMIterator createDTMIterator ( Object xpathCompiler , int pos ) { return m_dtmManager . createDTMIterator ( xpathCompiler , pos ) ; }
47870	private static boolean exceptionIsMapFailureException ( java . io . IOException e ) { if ( e . getMessage ( ) != _NULL && e . getMessage ( ) . contains ( _CHAR Map failed _CHAR ) ) return _BOOL ; return _BOOL ; }
47874	public void selectInitialValue ( ) { OptionPaneUI ui = getUI ( ) ; if ( ui != _NULL ) { ui . selectInitialValue ( this ) ; } }
47875	public JDialog createDialog ( Component parentComponent , String title ) throws HeadlessException { int style = styleFromMessageType ( getMessageType ( ) ) ; return createDialog ( parentComponent , title , style ) ; }
47880	public HttpUrl url ( ) { return url ; }
47888	public void addAccessibleSelection ( int i ) { List . this . select ( i ) ; }
47892	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
47897	public void startEntity ( String name ) throws org . xml . sax . SAXException { }
47907	public Set searchRoles ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ROLE ) , getSearchFilter ( AMObject . ROLE ) , wildcard , avPairs , level ) ; }
47936	public void notifyDataSetInvalidated ( ) { mDataSetObservable . notifyInvalidated ( ) ; }
47942	public void displayFieldInvalid ( FieldName fieldName , boolean invalid ) { for ( WizardStep s : hmPanels . keySet ( ) ) { getPanel ( s ) . displayFieldInvalid ( fieldName , invalid ) ; } }
47965	public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { }
47969	public Rectangle modelToView ( int pos ) throws BadLocationException { return getUI ( ) . modelToView ( this , pos ) ; }
47972	@ Override public boolean abort ( ) throws LoginException { if ( principal == _NULL ) { return _BOOL ; } if ( committed ) { logout ( ) ; } else { committed = _BOOL ; principal = _NULL ; } if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR Abort _CHAR ) ; } return _BOOL ; }
47980	@ NonNull public static Interpolator rasterize ( Interpolator interpolator ) { return rasterize ( _NUM , interpolator ) ; }
47985	public boolean addAll ( RoleUnresolvedList roleList ) throws IndexOutOfBoundsException { if ( roleList == _NULL ) { return _BOOL ; } return ( super . addAll ( roleList ) ) ; }
47989	protected void maybeUpdateLayoutState ( ) { if ( updateLayoutStateNeeded != _NUM ) { updateLayoutState ( ) ; updateLayoutStateNeeded = _NUM ; } }
48007	public static String encodeForPOST ( final String str ) { try { return Base64 . encode ( str . getBytes ( _CHAR UTF - _NUM _CHAR ) , _BOOL ) ; } catch ( UnsupportedEncodingException uee ) { debug . error ( _CHAR SAML2Utils . encodeForPOST _CHAR , uee ) ; return _NULL ; } }
48014	protected char charAt ( String value , int index ) { if ( index < _NUM || index >= value . length ( ) ) { return Character . MIN_VALUE ; } return value . charAt ( index ) ; }
48015	private boolean canBeRDFAttrProp ( XMPNode node ) { return ! node . hasQualifier ( ) && ! node . getOptions ( ) . isURI ( ) && ! node . getOptions ( ) . isCompositeProperty ( ) && ! node . getOptions ( ) . containsOneOf ( PropertyOptions . SEPARATE_NODE ) && ! XMPConst . ARRAY_ITEM_NAME . equals ( node . getName ( ) ) ; }
48016	public int showOpenDialog ( Component parent ) throws HeadlessException { setDialogType ( OPEN_DIALOG ) ; return showDialog ( parent , _NULL ) ; }
48035	public String readString ( ) throws SQLException { return ( String ) getNextAttribute ( ) ; }
48058	public void updateUI ( ) { setUI ( ( DesktopPaneUI ) UIManager . getUI ( this ) ) ; }
48063	@ Override public void unwrapSSLv2 ( byte [ ] bytes ) { unexpectedMessage ( ) ; }
48073	public static boolean isProtectedProperty ( String key ) { if ( protectedProperties . contains ( key ) || key . toLowerCase ( ) . startsWith ( Constants . AM_PROTECTED_PROPERTY_PREFIX ) ) { return _BOOL ; } return _BOOL ; }
48083	public boolean isEmpty ( ) { synchronized ( children ) { return children . isEmpty ( ) ; } }
48086	public DTMIterator createDTMIterator ( String xpathString , PrefixResolver presolver ) { return m_dtmManager . createDTMIterator ( xpathString , presolver ) ; }
48090	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
48092	public static boolean isValid ( int c ) { return ( c < _NUM && ( CHARS [ c ] & MASK_VALID ) != _NUM ) || ( _NUM <= c && c <= _NUM ) ; }
48093	public Style addStyle ( String nm , Style parent ) { Style style = new NamedStyle ( nm , parent ) ; if ( nm != _NULL ) { styles . addAttribute ( nm , style ) ; } return style ; }
48100	public final String readUTF ( ) throws IOException { return readUTF ( this ) ; }
48109	void validateOptions ( LocalizableMessageBuilder buf ) { validateGlobalOptions ( buf ) ; validateSubcommandOptions ( buf ) ; }
48114	public static void writeLines ( File file , Collection < ? > lines , String lineEnding , boolean append ) throws IOException { writeLines ( file , _NULL , lines , lineEnding , append ) ; }
48117	public boolean noCache ( ) { return noCache ; }
48137	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeDate ( java . sql . Date x ) throws SQLException { attribs . add ( x ) ; }
48147	private boolean cacheComplete ( ) { final boolean complete ; if ( m_cache != _NULL ) { complete = m_cache . isComplete ( ) ; } else { complete = _BOOL ; } return complete ; }
48149	@ Override public int read ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; if ( pos < buf . length ) { return buf [ pos ++ ] ; } return in . read ( ) ; } }
48160	public void fatalError ( SAXParseException exception ) throws SAXException { throw exception ; }
48161	private void loadAttsMap ( ) { final AttributeSet atts = requestPacket . getAttributeSet ( ) ; for ( int i = _NUM ; i < atts . size ( ) ; i ++ ) { final Attribute att = atts . getAttributeAt ( i ) ; attributeMap . put ( att . getClass ( ) , att ) ; } }
48175	public boolean isOpaque ( ) { return getFlag ( IS_OPAQUE ) ; }
48177	public boolean addAll ( AttributeList list ) { return ( super . addAll ( list ) ) ; }
48182	public int hashCode ( ) { return fs . hashCode ( this ) ; }
48183	protected void installNormalBorders ( JComponent c ) { Component [ ] components = c . getComponents ( ) ; for ( Component component : components ) { setBorderToNormal ( component ) ; } }
48190	public static Calendar fromUnixTime ( long unixTime , TimeUnit timeUnit ) { Calendar calendar = getCalendarInstance ( ) ; calendar . setTimeZone ( TimeZone . getDefault ( ) ) ; long millis = timeUnit . toMillis ( unixTime ) ; calendar . setTimeInMillis ( millis ) ; return calendar ; }
48197	void onDragEnter ( ) { mDragging = _BOOL ; }
48199	@ Override public int hashCode ( ) { return ( int ) id ; }
48203	public byte [ ] encode ( byte [ ] array ) { return new String ( encodeHex ( array ) ) . getBytes ( ) ; }
48204	public Object send ( String functionName , Object param , String lbcookie , String cookies ) throws Exception { return ( send ( encodeMessage ( functionName , param ) , lbcookie , cookies ) ) ; }
48208	public int compareToIgnoreCase ( XMLString str ) { return m_str . compareToIgnoreCase ( str . toString ( ) ) ; }
48234	public Polynomial25519 reciprocal ( ) { return innerReciprocal ( this ) ; }
48249	public void square ( ) { c = Polynomial25519 . innerSquare ( c ) ; reduceDegree ( ) ; reduceCoefficients ( ) ; }
48255	public boolean isAgain ( ) { return type == Type . AGAIN ; }
48256	public void endElement ( String uri , String localName , String qName ) throws SAXException { m_resultContentHandler . endElement ( uri , localName , qName ) ; }
48270	synchronized public boolean writeRequestImmediate ( ) { if ( writerLocks . size ( ) == _NUM && currentReaders == _NUM && currentWriters == _NUM ) { ++ currentWriters ; return _BOOL ; } return _BOOL ; }
48274	public Set searchAllRoles ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { int [ ] objectTypes = { AMObject . ROLE , AMObject . FILTERED_ROLE } ; return searchObjects ( objectTypes , wildcard , avPairs , level ) ; }
48291	public List < String > command ( ) { return command ; }
48297	public int executeUpdateDelete ( ) { acquireReference ( ) ; try { return getSession ( ) . executeForChangedRowCount ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
48301	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { }
48322	public float length ( ) { return ( float ) Math . sqrt ( lengthSquared ( ) ) ; }
48324	protected void processChars ( char [ ] chars , int offset , int length ) { }
48327	protected Document createDefaultModel ( ) { return new PlainDocument ( ) ; }
48331	public void notationDecl ( String name , String publicId , String systemId ) throws SAXException { }
48332	public void replaceAttribute ( Attribute attribute ) { setAttribute ( attribute , _NULL , _BOOL ) ; }
48341	public static double sin ( double a ) { return StrictMath . sin ( a ) ; }
48348	protected void verifyAttributes ( AttrSet attrSet ) throws AMException { String userStatus = attrSet . getValue ( USER_STATUS_ATTRIBUTE ) ; if ( userStatus != _NULL && userStatus . equalsIgnoreCase ( _CHAR deleted _CHAR ) ) { debug . warning ( _CHAR Compliance . verifyAttributes ( ) : _CHAR + USER_STATUS_ATTRIBUTE + _CHAR : _CHAR + userStatus ) ; throw new AMException ( AMSDKBundle . getString ( _CHAR _NUM _CHAR ) , _CHAR _NUM _CHAR ) ; } }
48359	protected void writeEndParagraph ( ) throws IOException { writeEndMask ( fontMask ) ; if ( inFontTag ( ) ) { endSpanTag ( ) ; } else { write ( NEWLINE ) ; } writeEndTag ( _CHAR < / p > _CHAR ) ; }
48375	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof NumberUp ) ; }
48379	public void deleteChar ( AttributedCharacterIterator newParagraph , int deletePos ) { measurer . deleteChar ( newParagraph , deletePos ) ; limit = newParagraph . getEndIndex ( ) ; pos = start = newParagraph . getBeginIndex ( ) ; charIter . reset ( measurer . getChars ( ) , start ) ; breakIter . setText ( charIter ) ; }
48396	public InputSource resolveEntity ( String publicId , String systemId ) throws SAXException { return _NULL ; }
48397	public void add ( int posn , RefAddr addr ) { addrs . insertElementAt ( addr , posn ) ; }
48403	public void registerConditionType ( String name , Class < ? extends EntitlementCondition > type ) { register ( name , conditions , type ) ; }
48407	public Enumeration elements ( ) { debug . message ( _CHAR ISPermissionCollection : : calling elements ... . _CHAR ) ; if ( debug . messageEnabled ( ) ) { for ( Enumeration e = perms . elements ( ) ; e . hasMoreElements ( ) ; ) { debug . message ( _CHAR ISPC : : perms : : _CHAR + e . nextElement ( ) . toString ( ) ) ; } } return perms . elements ( ) ; }
48414	@ Override public void visitInnerClass ( final String aname , final String outerName , final String innerName , final int attr_access ) { if ( ( name != _NULL ) && name . equals ( aname ) ) { this . access = attr_access ; } super . visitInnerClass ( aname , outerName , innerName , attr_access ) ; }
48420	@ VisibleForTesting static boolean isTextualContent ( final ContentTypeHeader contentType ) { String type = ( contentType . getType ( ) != _NULL ? contentType . getType ( ) . toLowerCase ( ) : _NULL ) ; return contentType . getCharset ( ) != _NULL || ( type != _NULL && ( TEXT_TYPES . contains ( type ) || type . startsWith ( _CHAR text / _CHAR ) ) ) ; }
48422	public void startPreserving ( ) throws org . xml . sax . SAXException { m_preserves . push ( _BOOL ) ; m_ispreserve = _BOOL ; }
48423	public StatelessSession generate ( String tokenId ) throws SessionException { return generate ( new SessionID ( tokenId ) ) ; }
48424	public boolean isPassword ( ) { return getFieldFlag ( FF_PASSWORD ) ; }
48426	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
48431	public static Request parseXML ( String xml ) throws SAMLException { Document doc = XMLUtils . toDOMDocument ( xml , SAMLUtils . debug ) ; Element root = doc . getDocumentElement ( ) ; return new Request ( root ) ; }
48437	public void submitRequirements ( Callback [ ] info ) { submitRequirements ( info , _NULL , _NULL ) ; }
48448	public void warning ( String msg , Throwable t ) { if ( debugLevel > Debug . ERROR ) { formatAndWrite ( _CHAR WARNING : _CHAR , msg , t ) ; } }
48454	@ Override public synchronized void putAll ( Map < ? , ? > t ) { check ( _CHAR putProviderProperty . '' + name ) ; if ( debug != _NULL ) { debug . println ( _CHAR Put all _CHAR + name + _CHAR provider properties _CHAR ) ; } implPutAll ( t ) ; }
48456	public void uninstallingUI ( ) { if ( propertyChangeListener != _NULL ) { comboBox . removePropertyChangeListener ( propertyChangeListener ) ; } if ( itemListener != _NULL ) { comboBox . removeItemListener ( itemListener ) ; } uninstallComboBoxModelListeners ( comboBox . getModel ( ) ) ; uninstallKeyboardActions ( ) ; uninstallListListeners ( ) ; uninstallScrollerListeners ( ) ; list . setModel ( EmptyListModel ) ; }
48460	public Name composeName ( Name name , Name prefix ) throws NamingException { return ( Name ) name . clone ( ) ; }
48491	public String foundType ( ) { return this . foundType ; }
48501	@ Override public Object defaultInstance ( Object bean ) throws InstantiationException , IllegalAccessException { if ( bean instanceof StandardContext ) { StandardContext defaultContext = new StandardContext ( ) ; return defaultContext ; } else return super . defaultInstance ( bean ) ; }
48505	@ Override public String toString ( ) { if ( isSSL != _NULL ) { return ( isSSL ? _CHAR ldaps _CHAR : _CHAR ldap _CHAR ) + COLON_SLASH_SLASH + host + SEPARATOR + port ; } else { return host + SEPARATOR + port ; } }
48507	protected static EventListener removeInternal ( EventListener l , EventListener oldl ) { if ( l == oldl || l == _NULL ) { return _NULL ; } else if ( l instanceof DnDEventMulticaster ) { return ( ( DnDEventMulticaster ) l ) . remove ( oldl ) ; } else { return l ; } }
48523	public String toString ( ) { if ( myToString == _NULL ) { myToString = getClass ( ) . getName ( ) + _CHAR ( name = _CHAR + getTypeName ( ) + _CHAR , dimension = _CHAR + dimension + _CHAR , elementType = _CHAR + elementType + _CHAR , primitiveArray = _CHAR + primitiveArray + _CHAR ) _CHAR ; } return myToString ; }
48533	@ Override public void addObject ( ) throws Exception { assertOpen ( ) ; if ( factory == _NULL ) { throw new IllegalStateException ( _CHAR Can not add objects without a factory . '' ) ; } final PooledObject < T > p = create ( ) ; addIdleObject ( p ) ; }
48543	public void fatalError ( SAXParseException e ) throws SAXException { throw e ; }
48546	protected boolean isZoneLoaded ( View zone ) { return ( zone . getViewCount ( ) > _NUM ) ; }
48547	public RowId readRowId ( ) throws SQLException { return ( RowId ) getNextAttribute ( ) ; }
48548	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
48554	public void layout ( FlowView fv ) { super . layout ( fv ) ; }
48556	public void approveSelection ( ) { returnValue = APPROVE_OPTION ; if ( dialog != _NULL ) { dialog . setVisible ( _BOOL ) ; } fireActionPerformed ( APPROVE_SELECTION ) ; }
48572	public String toString ( ) { if ( userObject == _NULL ) { return _NULL ; } else { return userObject . toString ( ) ; } }
48580	public boolean containsKey ( Object key ) { Object [ ] k ; try { k = ( Object [ ] ) key ; } catch ( ClassCastException e ) { return _BOOL ; } return this . containsKey ( k ) ; }
48598	public int read ( ) throws IOException { while ( in != _NULL ) { int c = in . read ( ) ; if ( c != - _NUM ) { return c ; } nextStream ( ) ; } return - _NUM ; }
48601	public static double signum ( double d ) { return ( d == _NUM . _NUM || Double . isNaN ( d ) ) ? d : copySign ( _NUM . _NUM , d ) ; }
48605	@ Override protected void doReadObject ( ObjectInputStream stream ) throws ClassNotFoundException , IOException { doReadObject ( ( ObjectInput ) stream ) ; }
48619	public X509Certificate generate ( PrivateKey key , String provider ) throws CertificateEncodingException , IllegalStateException , NoSuchProviderException , NoSuchAlgorithmException , SignatureException , InvalidKeyException { return generate ( key , provider , _NULL ) ; }
48620	public static void sort ( int [ ] a ) { DualPivotQuicksort . sort ( a , _NUM , a . length - _NUM , _NULL , _NUM , _NUM ) ; }
48628	@ Nullable public static GrpcStreamingConfig createGrpcStreaming ( DiagCollector diagCollector , Method method ) { GrpcStreamingType type = getGrpcStreamingType ( diagCollector , method ) ; if ( type == _NULL ) { return _NULL ; } return new GrpcStreamingConfig ( _NULL , type ) ; }
48629	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T > T [ ] copyOf ( T [ ] original , int newLength ) { return ( T [ ] ) copyOf ( original , newLength , original . getClass ( ) ) ; }
48633	public static Foo fetchByUUID_G ( java . lang . String uuid , long groupId ) { return getPersistence ( ) . fetchByUUID_G ( uuid , groupId ) ; }
48635	public boolean warningEnabled ( ) { return getDebugServiceInstance ( ) . warningEnabled ( ) ; }
48648	public void write ( ByteArrayOutputStream tagBuffer ) { if ( ! ( ( PairedTextEncodedStringNullTerminated ) getObject ( DataTypes . OBJ_TEXT ) ) . canBeEncoded ( ) ) { this . setTextEncoding ( TextEncoding . UTF_16 ) ; } super . write ( tagBuffer ) ; }
48651	public boolean containsValue ( int value ) { return contains ( value ) ; }
48658	static ObjectClass newPlaceHolder ( String name ) { return new ObjectClass ( name ) ; }
48668	public void startDocument ( ) throws SAXException { try { if ( _NULL == m_resultContentHandler ) createResultContentHandler ( m_result ) ; } catch ( TransformerException te ) { throw new SAXException ( te . getMessage ( ) , te ) ; } m_flushedStartDoc = _BOOL ; m_foundFirstElement = _BOOL ; }
48671	public String toStringImpl ( ) { return _CHAR _CHAR ; }
48679	@ Override public boolean isLeapYear ( long prolepticYear ) { return ( ( prolepticYear & _NUM ) == _NUM ) && ( ( prolepticYear % _NUM ) != _NUM || ( prolepticYear % _NUM ) == _NUM ) ; }
48690	public void addDragSourceListener ( DragSourceListener dsl ) { if ( dsl != _NULL ) { synchronized ( this ) { listener = DnDEventMulticaster . add ( listener , dsl ) ; } } }
48691	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof HOTPPrincipal ) ) { return _BOOL ; } HOTPPrincipal that = ( HOTPPrincipal ) o ; if ( this . getName ( ) . equals ( that . getName ( ) ) ) { return _BOOL ; } return _BOOL ; }
48698	public long toDays ( ) { return seconds / SECONDS_PER_DAY ; }
48705	private static boolean isNELorLSEPCharacter ( char ch ) { return ( ch == _NUM || ch == _NUM ) ; }
48711	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
48713	public static int indexOf ( final String value , final String needle , int offset , boolean caseSensitive ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; if ( caseSensitive ) { return value . indexOf ( needle , offset ) ; } return value . toLowerCase ( ) . indexOf ( needle . toLowerCase ( ) , offset ) ; }
48714	private static QueryResponse generateQueryResponse ( QueryRequest request , int total , int handled ) { if ( _CHAR _BOOL _CHAR . equalsIgnoreCase ( request . getAdditionalParameter ( REMAINING ) ) ) { return Responses . newRemainingResultsResponse ( _NULL , total - handled ) ; } else { return Responses . newQueryResponse ( _NULL , CountPolicy . EXACT , total ) ; } }
48730	public AttributeParser parseAttribute ( String attributeDescription ) throws LocalizedIllegalArgumentException , NullPointerException { Iterator < Attribute > it = getAllAttributes ( attributeDescription ) . iterator ( ) ; return AttributeParser . parseAttribute ( it . hasNext ( ) ? it . next ( ) : _NULL ) ; }
48744	@ Override public void initialize ( ClassLoadHelper loadHelper , SchedulerSignaler schedSignaler ) { logger . info ( _CHAR Initializing RepoJobStore _CHAR ) ; this . schedulerSignaler = schedSignaler ; this . loadHelper = loadHelper ; this . writeRetries = Integer . parseInt ( IdentityServer . getInstance ( ) . getProperty ( _CHAR openidm . scheduler . repo . retry _CHAR , _CHAR - _NUM _CHAR ) ) ; }
48748	public final int compareTo ( E o ) { return ordinal - ( ( Enum ) o ) . ordinal ; }
48750	public boolean isDeleteAcceptable ( ManagementContext context , ManagedObjectPath < ? , ? > path , Collection < LocalizableMessage > unacceptableReasons ) throws LdapException { return _BOOL ; }
48755	static LDAPReplicationDomain createNewDomain ( ReplicationDomainCfg configuration , BlockingQueue < UpdateToReplay > queue ) throws ConfigException { final LDAPReplicationDomain domain = new LDAPReplicationDomain ( configuration , queue , dsrsShutdownSync ) ; domains . put ( domain . getBaseDN ( ) , domain ) ; return domain ; }
48757	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
48768	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof PrinterMessageFromOperator ) ; }
48772	public void auditDelete ( ) { if ( shouldAudit ( ConfigOperation . DELETE ) ) { JsonValue afterState = json ( object ( ) ) ; AMConfigAuditEventBuilder builder = getBaseBuilder ( ) . operation ( ConfigOperation . DELETE ) . after ( afterState ) ; recordBeforeStateIfNotNull ( builder , beforeState ) ; auditEventPublisher . tryPublish ( CONFIG_TOPIC , builder . toEvent ( ) ) ; } }
48780	void addNewEntryForNullKey ( V value ) { entryForNullKey = new HashMapEntry < K , V > ( _NULL , value , _NUM , _NULL ) ; }
48785	protected final Class < ? > defineClass ( String name , byte [ ] b , int off , int len , CodeSource cs ) { return defineClass ( name , b , off , len , getProtectionDomain ( cs ) ) ; }
48789	public void destroy ( ) { }
48805	public synchronized void addFlavorListener ( FlavorListener listener ) { if ( listener == _NULL ) { return ; } if ( flavorListeners == _NULL ) { currentDataFlavors = getAvailableDataFlavorSet ( ) ; flavorListeners = new EventListenerAggregate ( FlavorListener . class ) ; } flavorListeners . add ( listener ) ; }
48818	public synchronized void redo ( ) throws CannotRedoException { if ( inProgress ) { UndoableEdit edit = editToBeRedone ( ) ; if ( edit == _NULL ) { throw new CannotRedoException ( ) ; } redoTo ( edit ) ; } else { super . redo ( ) ; } }
48823	public void rejectedExecution ( Runnable r , ThreadPoolExecutor e ) { if ( ! e . isShutdown ( ) ) { e . getQueue ( ) . poll ( ) ; e . execute ( r ) ; } }
48838	public Period plusMonths ( long monthsToAdd ) { if ( monthsToAdd == _NUM ) { return this ; } return create ( years , Math . toIntExact ( Math . addExact ( months , monthsToAdd ) ) , days ) ; }
48899	public static AppEventsLogger newLogger ( Context context ) { return new AppEventsLogger ( context , _NULL , _NULL ) ; }
48909	public void erasePurchase ( String sku ) { if ( mPurchaseMap . containsKey ( sku ) ) mPurchaseMap . remove ( sku ) ; }
48940	private Object readResolve ( ) { if ( getDescriptor ( ) . getFieldNames ( ) . length == _NUM ) { return new OpenMBeanOperationInfoSupport ( name , description , arrayCopyCast ( getSignature ( ) ) , returnOpenType , getImpact ( ) ) ; } else return this ; }
48941	public static void finalizeOnShutdown ( ) { AciEffectiveRights . aclRights = _NULL ; AciEffectiveRights . aclRightsInfo = _NULL ; AciEffectiveRights . dnAttributeType = _NULL ; }
48942	public void initialize ( Map configParams ) throws PolicyException { }
48949	private ResourceResponse issuedTokenResource ( String assertion ) { return newResourceResponse ( UUID . randomUUID ( ) . toString ( ) , Hash . hash ( assertion ) , json ( object ( field ( AMSTSConstants . ISSUED_TOKEN , assertion ) ) ) ) ; }
48950	public boolean removeFirstOccurrence ( Object o ) { return remove ( o ) ; }
48959	@ Override public void show ( final FragmentManager manager , final String tag ) { super . show ( manager , tag ) ; }
48971	public static BooleanArgument restartArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_RESTART ) . shortIdentifier ( _CHAR ) . description ( INFO_DESCRIPTION_RESTART . get ( ) ) . buildArgument ( ) ; }
48976	public void onConversationsButtonClick ( android . view . View view ) { this . navigateToConversationsActivity ( ) ; }
48982	public boolean isCommon ( ) { return _BOOL ; }
48984	public boolean equals ( Object obj ) { if ( obj instanceof ActivationID ) { ActivationID id = ( ActivationID ) obj ; return ( uid . equals ( id . uid ) && activator . equals ( id . activator ) ) ; } else { return _BOOL ; } }
49001	public AttributeSet removeAttributes ( AttributeSet old , Enumeration < ? > names ) { return super . removeAttributes ( old , names ) ; }
49003	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
49006	public boolean isPropertyValuePattern ( ) { return _property_value_pattern ; }
49014	public final void writeByte ( int v ) throws IOException { out . write ( v ) ; incCount ( _NUM ) ; }
49016	public void acceptDrag ( int dragOperation ) { getDropTargetContext ( ) . acceptDrag ( dragOperation ) ; }
49020	void verify ( ) { byte [ ] d = digest . digest ( ) ; if ( ! MessageDigest . isEqual ( d , Base64 . decode ( hash ) ) ) { throw invalidDigest ( JarFile . MANIFEST_NAME , name , jarName ) ; } verifiedEntries . put ( name , certificates ) ; }
49027	public void execute ( ) { acquireReference ( ) ; try { getSession ( ) . execute ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
49032	public void addPropertyChangeListener ( PropertyChangeListener listener ) { if ( changeSupport == _NULL ) { changeSupport = new PropertyChangeSupport ( this ) ; } changeSupport . addPropertyChangeListener ( listener ) ; }
49034	public static void reorderVisually ( byte [ ] levels , int levelStart , Object [ ] objects , int objectStart , int count ) { BidiBase . reorderVisually ( levels , levelStart , objects , objectStart , count ) ; }
49040	public int asNode ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return xctxt . getCurrentNode ( ) ; }
49051	public void update ( Graphics g ) { paint ( g ) ; }
49060	public static < T > List < T > nCopies ( int n , T o ) { if ( n < _NUM ) throw new IllegalArgumentException ( _CHAR List length = _CHAR + n ) ; return new CopiesList < > ( n , o ) ; }
49070	public boolean isIgnorableWhitespace ( Text node ) { boolean isIgnorable = _BOOL ; return isIgnorable ; }
49077	public boolean isActive ( ) { return isAlive ( ) && operation != _NULL ; }
49092	private static String buildAciValue ( String ... aciFields ) { return _buildAciValue ( _CHAR aci : _CHAR , aciFields ) ; }
49093	public boolean startsWith ( List < Rdn > rdns ) { if ( rdns == _NULL ) { return _BOOL ; } int len1 = this . rdns . size ( ) ; int len2 = rdns . size ( ) ; return ( len1 >= len2 && doesListMatch ( _NUM , len2 , rdns ) ) ; }
49109	public boolean hasChildNodes ( int nodeHandle ) { return ( getFirstChild ( nodeHandle ) != NULL ) ; }
49131	@ Override public void mark ( int readAheadLimit ) throws IOException { throw new IOException ( Localizer . getMessage ( _CHAR jsp . error . xml . operationNotSupported _CHAR , _CHAR mark ( ) _CHAR , _CHAR UTF - _NUM _CHAR ) ) ; }
49145	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiToolTipUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiToolTipUI ) mui ) . uis , a ) ; }
49155	public void treeDidChange ( ) { revalidate ( ) ; repaint ( ) ; }
49164	public boolean isLeaf ( ) { return ( getChildCount ( ) == _NUM ) ; }
49169	@ Override public void close ( ) throws IOException { fInputStream . close ( ) ; }
49176	public synchronized void delay ( int ms ) { checkDelayArgument ( ms ) ; try { Thread . sleep ( ms ) ; } catch ( InterruptedException ite ) { ite . printStackTrace ( ) ; } }
49182	public void pushContext ( ) { Context2 parentContext = currentContext ; currentContext = parentContext . getChild ( ) ; if ( currentContext == _NULL ) { currentContext = new Context2 ( parentContext ) ; } else { currentContext . setParent ( parentContext ) ; } }
49186	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
49187	public static void updateComponentTreeUI ( Component c ) { updateComponentTreeUI0 ( c ) ; c . invalidate ( ) ; c . validate ( ) ; c . repaint ( ) ; }
49207	public boolean equals ( Object o ) { if ( o == _NULL ) return _BOOL ; if ( this == o ) return _BOOL ; if ( ! ( o instanceof JMXPrincipal ) ) return _BOOL ; JMXPrincipal that = ( JMXPrincipal ) o ; return ( this . getName ( ) . equals ( that . getName ( ) ) ) ; }
49211	public static ReadableByteChannel newChannel ( InputStream inputStream ) { return new InputStreamChannel ( inputStream ) ; }
49222	public void printStackTrace ( PrintWriter pw ) { pw . println ( fetchStackTrace ( ) ) ; }
49243	public static FontProgram createFont ( byte [ ] fontProgram , boolean cached ) throws java . io . IOException { return createFont ( _NULL , fontProgram , cached ) ; }
49259	public void change_side ( int p_component_no , PlaPointInt p_pole ) { BrdComponent curr_component = get ( p_component_no ) ; undo_list . save_for_undo ( curr_component ) ; curr_component . change_side ( p_pole ) ; }
49264	private void loadDataState ( ) throws DirectoryException { state . clearInMemory ( ) ; state . loadState ( ) ; getGenerator ( ) . adjust ( state . getMaxCSN ( getServerId ( ) ) ) ; generationId = loadGenerationId ( ) ; }
49284	final boolean shouldMapTextChar ( int value ) { if ( value < ASCII_MAX ) return shouldMapTextChar_ASCII [ value ] ; return get ( value ) ; }
49287	@ Override public void onOptionsMenuClosed ( final Menu menu ) { delegate . onOptionsMenuClosed ( menu ) ; }
49294	public static Attribute empty ( String attributeName ) { return empty ( getSchema ( ) . getAttributeType ( attributeName ) , attributeName ) ; }
49303	public Object decode ( Object pObject ) throws DecoderException { if ( ! ( pObject instanceof byte [ ] ) ) { throw new DecoderException ( _CHAR Parameter supplied to Base64 decode is not a byte [ ] _CHAR ) ; } return decode ( ( byte [ ] ) pObject ) ; }
49319	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
49324	public boolean remove ( Class < ? > category ) { return category != _NULL && AttributeSetUtilities . verifyAttributeCategory ( category , Attribute . class ) != _NULL && attrMap . remove ( category ) != _NULL ; }
49327	public Subject removeSubject ( Subject subject ) { Subject s = _NULL ; String subjectName = getSubjectName ( subject ) ; if ( subjectName != _NULL ) { QualifiedSubject qualifiedSubject = ( QualifiedSubject ) users . remove ( subjectName ) ; if ( qualifiedSubject != _NULL ) { s = qualifiedSubject . getSubject ( ) ; } } return s ; }
49330	public synchronized void undoOrRedo ( ) throws CannotRedoException , CannotUndoException { if ( indexOfNextAdd == edits . size ( ) ) { undo ( ) ; } else { redo ( ) ; } }
49336	private void siftUp ( int k , E x ) { if ( comparator != _NULL ) siftUpUsingComparator ( k , x ) ; else siftUpComparable ( k , x ) ; }
49339	public int available ( ) throws IOException { int temp = stream . available ( ) ; if ( ( frameLength != AudioSystem . NOT_SPECIFIED ) && ( ( temp / frameSize ) > ( frameLength - framePos ) ) ) { return ( int ) ( frameLength - framePos ) * frameSize ; } else { return temp ; } }
49340	@ Override public boolean equals ( final Object o ) { if ( this == o ) { return _BOOL ; } else if ( o instanceof ByteSequence ) { final ByteSequence other = ( ByteSequence ) o ; return other . equals ( buffer , offset , length ) ; } else { return _BOOL ; } }
49354	public static String composeLangSelector ( String arrayName , String langName ) { return arrayName + _CHAR [ ? xml : lang =\ _CHAR _CHAR + Utils . normalizeLangValue ( langName ) + _CHAR \ _CHAR ] _CHAR ; }
49369	@ Override public void close ( ) throws IOException { fInputStream . close ( ) ; }
49370	public static double [ ] copyOf ( double [ ] original , int newLength ) { double [ ] copy = new double [ newLength ] ; System . arraycopy ( original , _NUM , copy , _NUM , Math . min ( original . length , newLength ) ) ; return copy ; }
49378	static Class lookUpFactoryClass ( String factoryId ) throws ConfigurationError { return lookUpFactoryClass ( factoryId , _NULL , _NULL ) ; }
49379	public Set searchOrganizationalUnits ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ORGANIZATIONAL_UNIT ) , getSearchFilter ( AMObject . ORGANIZATIONAL_UNIT ) , wildcard , avPairs , level ) ; }
49390	public Object remove ( Object key ) { checkKey ( key ) ; return map . remove ( key ) ; }
49394	public static Set < String > putSetIntoMap ( String key , Map < String , Set < String >> map , String value ) { Set < String > set = new HashSet < String > ( ) ; set . add ( value ) ; map . put ( key , set ) ; return set ; }
49405	public void compose ( StylesheetRoot sroot ) throws javax . xml . transform . TransformerException { super . compose ( sroot ) ; java . util . Vector vnames = sroot . getComposeState ( ) . getVariableNames ( ) ; if ( _NULL != m_test ) m_test . fixupVariables ( vnames , sroot . getComposeState ( ) . getGlobalsSize ( ) ) ; }
49406	public static boolean unexportObject ( Remote obj , boolean force ) throws java . rmi . NoSuchObjectException { return sun . rmi . transport . ObjectTable . unexportObject ( obj , force ) ; }
49409	public void insert ( UndoObjectStorable p_object ) { if ( p_object == _NULL ) throw new IllegalArgumentException ( classname + _CHAR insert p_object is _NULL _CHAR ) ; disable_redo ( ) ; UndoObjectNode undoable_object = new UndoObjectNode ( p_object , stack_level ) ; objects_map . put ( p_object , undoable_object ) ; }
49410	public boolean equals ( Object o ) { return map . equals ( o ) ; }
49416	@ Override public void mark ( int readAheadLimit ) throws IOException { fInputStream . mark ( readAheadLimit ) ; }
49424	boolean isMarker ( ) { return value == this ; }
49446	@ Override public Promise < ResourceResponse , ResourceException > filterDelete ( Context context , DeleteRequest request , RequestHandler next ) { return next . handleDelete ( context , request ) ; }
49457	public boolean equals ( Object o ) { if ( ! ( o instanceof RegularEnumSet ) ) return super . equals ( o ) ; RegularEnumSet < ? > es = ( RegularEnumSet < ? > ) o ; if ( es . elementType != elementType ) return elements == _NUM && es . elements == _NUM ; return es . elements == elements ; }
49504	public Node item ( int index ) { int handle = m_firstChild ; while ( -- index >= _NUM && handle != DTM . NULL ) { handle = m_parentDTM . getNextSibling ( handle ) ; } if ( handle == DTM . NULL ) { return _NULL ; } return m_parentDTM . getNode ( handle ) ; }
49523	public void install ( JFormattedTextField ftf ) { super . install ( ftf ) ; positionCursorAtInitialLocation ( ) ; }
49547	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; if ( Constants . ELEMNAME_WITHPARAM == type ) { setParamElem ( ( ElemWithParam ) newChild ) ; } return super . appendChild ( newChild ) ; }
49565	public void applyLocalizedPattern ( String pattern ) { applyPattern ( pattern , _BOOL ) ; }
49573	boolean isMarker ( ) { return value == this ; }
49577	public synchronized Iterator < E > iterator ( ) { return new Itr ( ) ; }
49599	public char previous ( ) { if ( pos == offset ) { return DONE ; } pos -= _NUM ; return current ( ) ; }
49612	public void log ( Level level , String msg , Throwable thrown ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; lr . setThrown ( thrown ) ; doLog ( lr ) ; }
49613	public int size ( ) { if ( size == _NUM ) return _NUM ; expungeStaleEntries ( ) ; return size ; }
49615	public boolean matches ( ) { return match ( from , ENDANCHOR ) ; }
49624	public void execute ( TransformerImpl transformer ) throws TransformerException { XPathContext xctxt = transformer . getXPathContext ( ) ; int sourceNode = xctxt . getCurrentNode ( ) ; if ( m_test . bool ( xctxt , sourceNode , this ) ) { transformer . executeChildTemplates ( this , _BOOL ) ; } }
49639	public Name add ( int posn , Rdn comp ) { if ( comp == _NULL ) { throw new NullPointerException ( _CHAR Can not set comp to _NULL _CHAR ) ; } rdns . add ( posn , comp ) ; unparsed = _NULL ; return this ; }
49657	protected void processTextEvent ( TextEvent e ) { TextListener listener = textListener ; if ( listener != _NULL ) { int id = e . getID ( ) ; switch ( id ) { case TextEvent . TEXT_VALUE_CHANGED : listener . textValueChanged ( e ) ; break ; } } }
49661	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiScrollPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiScrollPaneUI ) mui ) . uis , a ) ; }
49662	private void expandTo ( int wordIndex ) { int wordsRequired = wordIndex + _NUM ; if ( wordsInUse < wordsRequired ) { ensureCapacity ( wordsRequired ) ; wordsInUse = wordsRequired ; } }
49665	public void paint ( Graphics g , Shape a ) { if ( c != _NULL ) { Rectangle alloc = ( a instanceof Rectangle ) ? ( Rectangle ) a : a . getBounds ( ) ; c . setBounds ( alloc . x , alloc . y , alloc . width , alloc . height ) ; } }
49669	public void startPrefixMapping ( String prefix , String uri ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR startPrefixMapping : prefix : _CHAR + prefix + _CHAR , uri : _CHAR + uri ) ; if ( _NULL == prefix ) prefix = _CHAR _CHAR ; m_prefixMappings . addElement ( prefix ) ; m_prefixMappings . addElement ( uri ) ; }
49689	public long readLong ( ) { if ( remaining ( ) < _NUM ) { throw new IndexOutOfBoundsException ( ) ; } long v = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) { v <<= _NUM ; v |= sequence . byteAt ( pos ++ ) & _NUM ; } return v ; }
49692	public void paint ( Graphics g , Shape a ) { Rectangle r = ( Rectangle ) a ; g . clipRect ( r . x , r . y , r . width , r . height ) ; super . paint ( g , adjustAllocation ( a ) ) ; }
49700	public synchronized void mark ( int readlimit ) { }
49705	public CMSSignedData generate ( CMSProcessable content , boolean encapsulate , Provider sigProvider ) throws NoSuchAlgorithmException , CMSException { if ( content instanceof CMSTypedData ) { return this . generate ( ( ( CMSTypedData ) content ) . getContentType ( ) . getId ( ) , content , encapsulate , sigProvider ) ; } else { return this . generate ( DATA , content , encapsulate , sigProvider ) ; } }
49707	public void revalidate ( ) { if ( getParent ( ) == _NULL ) { return ; } if ( SunToolkit . isDispatchThreadForAppContext ( this ) ) { invalidate ( ) ; RepaintManager . currentManager ( this ) . addInvalidComponent ( this ) ; } else { if ( revalidateRunnableScheduled . getAndSet ( _BOOL ) ) { return ; } SunToolkit . executeOnEventHandlerThread ( this , _NULL ) ; } }
49736	public static ValueRange of ( long min , long maxSmallest , long maxLargest ) { return of ( min , min , maxSmallest , maxLargest ) ; }
49743	public List < Challenge > challenges ( ) { String responseField ; if ( code == HTTP_UNAUTHORIZED ) { responseField = _CHAR WWW - Authenticate _CHAR ; } else if ( code == HTTP_PROXY_AUTH ) { responseField = _CHAR Proxy - Authenticate _CHAR ; } else { return Collections . emptyList ( ) ; } return OkHeaders . parseChallenges ( headers ( ) , responseField ) ; }
49749	protected String paramString ( ) { String kitString = ( kit != _NULL ? kit . toString ( ) : _CHAR _CHAR ) ; String typeHandlersString = ( typeHandlers != _NULL ? typeHandlers . toString ( ) : _CHAR _CHAR ) ; return super . paramString ( ) + _CHAR , kit = _CHAR + kitString + _CHAR , typeHandlers = _CHAR + typeHandlersString ; }
49753	public void initialize ( Map configParams ) throws PolicyException { }
49757	public static void flushFromCaches ( Class < ? > clz ) { if ( clz == _NULL ) { throw new NullPointerException ( ) ; } synchronized ( declaredMethodCache ) { ThreadGroupContext . getContext ( ) . removeBeanInfo ( clz ) ; declaredMethodCache . put ( clz , _NULL ) ; } }
49769	public static void calculateTiledPositions ( int allocated , SizeRequirements total , SizeRequirements [ ] children , int [ ] offsets , int [ ] spans ) { calculateTiledPositions ( allocated , total , children , offsets , spans , _BOOL ) ; }
49772	@ Override public int compareTo ( Aci aci ) { return this . aciString . compareTo ( aci . toString ( ) ) ; }
49773	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
49793	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeFloat ( float x ) throws SQLException { attribs . add ( Float . valueOf ( x ) ) ; }
49796	public void add ( AppInfo info ) { if ( mAppFilter != _NULL && ! mAppFilter . shouldShowApp ( info . componentName ) ) { return ; } if ( findActivity ( data , info . componentName , info . user ) ) { return ; } data . add ( info ) ; added . add ( info ) ; }
49800	public org . omg . CORBA . TypeCode _type ( ) { return ORB . init ( ) . get_primitive_tc ( TCKind . tk_long ) ; }
49802	@ Override protected void doWriteObject ( ObjectOutputStream stream ) throws IOException { doWriteObject ( ( ObjectOutput ) stream ) ; }
49804	void onBindAppWidget ( Launcher launcher ) { if ( ! mHasNotifiedInitialWidgetSizeChanged ) { notifyWidgetSizeChanged ( launcher ) ; } }
49806	@ Override public void onNewIntent ( final Intent intent ) { delegate . onNewIntent ( intent ) ; }
49813	public JsonValue continueAuthentication ( HttpServletRequest request , HttpServletResponse response , JsonValue postBody , String sessionUpgradeSSOTokenId ) throws RestAuthException { return authenticate ( request , response , postBody , _NULL , _NULL , sessionUpgradeSSOTokenId ) ; }
49841	public void comment ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { append ( m_doc . createComment ( new String ( ch , start , length ) ) ) ; }
49842	public static void restart ( String className , LocalizableMessage reason ) { restart ( className , reason , directoryServer . environmentConfig ) ; }
49844	public void performPostDelete ( ServerManagedObject < ? > managedObject ) throws ConfigException { }
49846	@ Deprecated protected ActionListener createKeyboardDownRightListener ( ) { return new KeyboardDownRightHandler ( ) ; }
49847	public String toGnuStepASCIIPropertyList ( ) { StringBuilder ascii = new StringBuilder ( ) ; toASCIIGnuStep ( ascii , _NUM ) ; ascii . append ( NEWLINE ) ; return ascii . toString ( ) ; }
49857	public static void initializeTestBackend ( boolean createBaseEntry ) throws Exception { initializeMemoryBackend ( TEST_BACKEND_ID , TEST_ROOT_DN_STRING , createBaseEntry ) ; }
49866	@ Override protected void createInitialRepository ( Repository r ) throws IOException { r . create ( ) ; }
49870	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
49871	public int read ( ) throws IOException { return in . read ( ) ; }
49883	void processDragExit ( DragSourceEvent dse ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragExit ( dse ) ; } }
49889	public static boolean sslServerSocketSupportsSessionTickets ( ) { return _BOOL ; }
49891	@ SuppressWarnings ( _CHAR unchecked _CHAR ) static final < K , V > HashEntry < K , V > entryAt ( HashEntry < K , V > [ ] tab , int i ) { return ( tab == _NULL ) ? _NULL : ( HashEntry < K , V > ) UNSAFE . getObjectVolatile ( tab , ( ( long ) i << TSHIFT ) + TBASE ) ; }
49896	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof JobPriority ) ; }
49901	public static void registerSupportedControl ( String controlOID ) { synchronized ( directoryServer . supportedControls ) { directoryServer . supportedControls . add ( controlOID ) ; } }
49908	public void paint ( Graphics g ) { g . clearRect ( _NUM , _NUM , width , height ) ; }
49914	public String toString ( ) { StringBuffer result = new StringBuffer ( ) ; result . append ( x ) ; result . append ( _CHAR ) ; result . append ( y ) ; result . append ( _CHAR um _CHAR ) ; return result . toString ( ) ; }
49975	public static void initializeProperties ( Properties properties , boolean reset ) { initializeProperties ( properties , reset , _BOOL ) ; }
49986	public void comment ( char ch [ ] , int start , int length ) throws SAXException { flushStartDoc ( ) ; if ( _NULL != m_resultLexicalHandler ) m_resultLexicalHandler . comment ( ch , start , length ) ; }
49993	public static XMPMeta parse ( InputStream in , ParseOptions options ) throws XMPException { return XMPMetaParser . parse ( in , options ) ; }
49994	private String findAlias ( String varName ) { if ( aliases == _NULL ) return varName ; String alias = aliases . get ( varName ) ; if ( alias == _NULL ) { return varName ; } return alias ; }
49999	public void removeCondition ( Condition condition ) { String conditionName = conditions . getConditionName ( condition ) ; if ( conditionName != _NULL ) { removeCondition ( conditionName ) ; } }
50008	public final boolean hasContended ( ) { return head != _NULL ; }
50024	public static String signatureAlgorithm ( String algorithm ) { int index = algorithm . indexOf ( _CHAR ) ; if ( index == - _NUM ) { return algorithm ; } return algorithm . substring ( index + _NUM , algorithm . length ( ) ) ; }
50025	public boolean isPropertyListPattern ( ) { return _property_list_pattern ; }
50042	public void changedUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { super . changedUpdate ( e , a , this ) ; }
50043	public static Position destination ( Position p1 , double distance , double bearing , String units ) throws TurfException { return destination ( Point . fromCoordinates ( p1 ) , distance , bearing , units ) . getCoordinates ( ) ; }
50049	public String chooseServerAlias ( String keyType , Principal [ ] issuers , Socket socket ) { return defaultX509KM . chooseServerAlias ( keyType , issuers , socket ) ; }
50061	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( ( ui != _NULL ) && ( getUIClassID ( ) . equals ( uiClassID ) ) ) { ui . installUI ( this ) ; } }
50062	public static String decode ( String s ) { String str = _NULL ; try { str = decode ( s , _CHAR UTF8 _CHAR ) ; } catch ( UnsupportedEncodingException e ) { } return str ; }
50074	public static byte [ ] decode ( byte [ ] source ) throws java . io . IOException { byte [ ] decoded = _NULL ; decoded = decode ( source , _NUM , source . length , Base64 . NO_OPTIONS ) ; return decoded ; }
50076	final Node < E > succ ( Node < E > p ) { Node < E > next = p . next ; return ( p == next ) ? head : next ; }
50080	public void unsetTiling ( ) { if ( ! canWriteTiles ( ) ) { throw new UnsupportedOperationException ( _CHAR Tiling not supported ! _CHAR ) ; } if ( getTilingMode ( ) != MODE_EXPLICIT ) { throw new IllegalStateException ( _CHAR Tiling mode not MODE_EXPLICIT ! _CHAR ) ; } this . tilingSet = _BOOL ; this . tileWidth = _NUM ; this . tileHeight = _NUM ; this . tileGridXOffset = _NUM ; this . tileGridYOffset = _NUM ; }
50084	private Request createTunnelRequest ( ) throws IOException { return new Request . Builder ( ) . url ( route . address ( ) . url ( ) ) . header ( _CHAR Host _CHAR , Util . hostHeader ( route . address ( ) . url ( ) ) ) . header ( _CHAR Proxy - Connection _CHAR , _CHAR Keep - Alive _CHAR ) . header ( _CHAR User - Agent _CHAR , Version . userAgent ( ) ) . build ( ) ; }
50088	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
50096	final ElemContext push ( ) { ElemContext frame = this . m_next ; if ( frame == _NULL ) { frame = new ElemContext ( this ) ; this . m_next = frame ; } frame . m_startTagOpen = _BOOL ; return frame ; }
50102	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T > T doLookup ( Name name ) throws NamingException { return ( T ) ( new InitialContext ( ) ) . lookup ( name ) ; }
50108	public void add ( int index , E element ) { checkPositionIndex ( index ) ; if ( index == size ) linkLast ( element ) ; else linkBefore ( element , node ( index ) ) ; }
50111	public static List < HttpCookie > parse ( String header ) { return new CookieParser ( header ) . parse ( ) ; }
50118	public void fatalError ( SAXParseException e ) throws SAXException { throw e ; }
50127	public static void write ( char [ ] data , Writer output ) throws IOException { if ( data != _NULL ) { output . write ( data ) ; } }
50152	protected void repaintRoot ( JComponent root ) { assert ( repaintManager . repaintRoot == _NULL ) ; if ( repaintManager . painting ) { repaintManager . repaintRoot = root ; } else { root . repaint ( ) ; } }
50166	public boolean equals ( Object object ) { return super . equals ( object ) && object instanceof JobImpressions ; }
50168	@ Override public void close ( ) throws IOException { try { super . close ( ) ; } finally { if ( closeBranch ) { branch . close ( ) ; } } }
50170	public void warning ( Supplier < String > msgSupplier ) { log ( Level . WARNING , msgSupplier ) ; }
50173	public int size ( ) { return opQueue . size ( ) ; }
50175	public void _read ( InputStream input ) { value = input . read_long ( ) ; }
50178	public synchronized long size ( ) throws IOException { initialize ( ) ; return size ; }
50193	public JScrollBar createVerticalScrollBar ( ) { return new ScrollBar ( JScrollBar . VERTICAL ) ; }
50210	public static String toGreekAlphabetNumberLowerCase ( int number ) { return AlphabetNumbering . toAlphabetNumber ( number , ALPHABET_LOWERCASE ) ; }
50220	public boolean endsWith ( Name n ) { if ( n instanceof CompositeName ) { return ( impl . endsWith ( n . size ( ) , n . getAll ( ) ) ) ; } else { return _BOOL ; } }
50221	private void doBaseDN ( DN baseDN , Map < DN , DN > modifyDNmap ) { for ( Map . Entry < DN , DN > mapEntry : modifyDNmap . entrySet ( ) ) { searchBaseDN ( baseDN , mapEntry . getKey ( ) , mapEntry . getValue ( ) ) ; } }
50227	public void uninstallUI ( JComponent c ) { super . uninstallUI ( c ) ; uninstallClientDecorations ( root ) ; layoutManager = _NULL ; mouseInputListener = _NULL ; root = _NULL ; }
50258	public void leave ( MetricReference metricReference ) { Thread threadId = Thread . currentThread ( ) ; leave ( threadId , metricReference ) ; }
50260	public boolean hasNext ( Pattern pattern ) { ensureOpen ( ) ; if ( pattern == _NULL ) throw new NullPointerException ( ) ; hasNextPattern = _NULL ; saveState ( ) ; while ( _BOOL ) { if ( getCompleteTokenInBuffer ( pattern ) != _NULL ) { matchValid = _BOOL ; cacheResult ( ) ; return revertState ( _BOOL ) ; } if ( needInput ) readInput ( ) ; else return revertState ( _BOOL ) ; } }
50261	public String toString ( ) { String answer = super . toString ( ) ; if ( rootException != _NULL ) { answer += _CHAR [ Root exception is _CHAR + rootException + _CHAR ] _CHAR ; } if ( remainingName != _NULL ) { answer += _CHAR ; remaining name _CHAR_CHAR_CHAR _CHAR ; } return answer ; }
50264	public String group ( ) { return group ( _NUM ) ; }
50265	private static int capacityForInitSize ( int size ) { int result = ( size >> _NUM ) + size ; return ( result & ~ ( MAXIMUM_CAPACITY - _NUM ) ) == _NUM ? result : MAXIMUM_CAPACITY ; }
50270	public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } else if ( obj instanceof ActivationGroupID ) { ActivationGroupID id = ( ActivationGroupID ) obj ; return ( uid . equals ( id . uid ) && system . equals ( id . system ) ) ; } else { return _BOOL ; } }
50276	@ SuppressWarnings ( _CHAR deprecation _CHAR ) public boolean contains ( JComponent c , int x , int y ) { return c . inside ( x , y ) ; }
50278	public void consumeUpTo ( UpdateMsg finalMsg ) { final CSN finalCSN = finalMsg . getCSN ( ) ; UpdateMsg msg ; do { msg = removeFirst ( ) ; } while ( ! finalCSN . equals ( msg . getCSN ( ) ) ) ; }
50279	public JScrollBar createHorizontalScrollBar ( ) { return new ScrollBar ( JScrollBar . HORIZONTAL ) ; }
50281	protected byte [ ] engineDigest ( ) { byte [ ] hash = new byte [ DIGEST_LENGTH ] ; processDigest ( hash , _NUM ) ; return hash ; }
50295	public void printDataTransferCompleted ( PrintJobEvent pje ) { }
50312	@ Transient public boolean isCompositionEnabled ( ) { return _BOOL ; }
50316	public void removeAttribute ( String name ) { int i = names . indexOf ( name ) ; if ( i >= _NUM ) { names . removeElementAt ( i ) ; types . removeElementAt ( i ) ; values . removeElementAt ( i ) ; } }
50319	public boolean postProcessKeyEvent ( KeyEvent e ) { if ( ! e . isConsumed ( ) ) { Component target = e . getComponent ( ) ; Container p = ( Container ) ( target instanceof Container ? target : target . getParent ( ) ) ; if ( p != _NULL ) { p . postProcessKeyEvent ( e ) ; } } return _BOOL ; }
50324	public void addTokenOperation ( CTSOperation operation , boolean success ) { operationStore . add ( operation ) ; if ( ! success ) { operationFailureStore . add ( operation ) ; } }
50328	public void fileRotated ( ) { }
50361	public void shutdown ( int statusCode ) throws IOException { synchronized ( spdyWriter ) { int lastGoodStreamId ; synchronized ( this ) { if ( shutdown ) { return ; } shutdown = _BOOL ; lastGoodStreamId = this . lastGoodStreamId ; } spdyWriter . goAway ( _NUM , lastGoodStreamId , statusCode ) ; } }
50376	public void updateUI ( ) { setUI ( ( TextUI ) UIManager . getUI ( this ) ) ; invalidate ( ) ; }
50393	public boolean isNodeDescendant ( DefaultMutableTreeNode anotherNode ) { if ( anotherNode == _NULL ) return _BOOL ; return anotherNode . isNodeAncestor ( this ) ; }
50394	protected String paramString ( ) { String tipTextString = ( tipText != _NULL ? tipText : _CHAR _CHAR ) ; return super . paramString ( ) + _CHAR , tipText = _CHAR + tipTextString ; }
50396	public static boolean is02ConfigLdif ( String schemaFile ) { return CONFIG_SCHEMA_ELEMENTS_FILE . equals ( schemaFile ) ; }
50405	public AMSearchResults searchStaticGroups ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP ) , getSearchFilter ( AMObject . GROUP ) , wildcard , avPairs , searchControl ) ; }
50410	public void _write ( OutputStream output ) { output . write_long ( value ) ; }
50411	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
50447	@ Override public void rebind ( Name name , Object obj ) throws NamingException { bind ( name , obj , _BOOL ) ; }
50475	public void sendSAXComment ( org . xml . sax . ext . LexicalHandler ch , int start , int length ) throws org . xml . sax . SAXException { String comment = getString ( start , length ) ; ch . comment ( comment . toCharArray ( ) , _NUM , length ) ; }
50477	public void applyAttrSets ( TransformerImpl transformer , StylesheetRoot stylesheet ) throws TransformerException { applyAttrSets ( transformer , stylesheet , m_attributeSetsNames ) ; }
50479	public void remove ( int index ) { Component comp = getComponent ( index ) ; if ( comp == leftComponent ) { leftComponent = _NULL ; } else if ( comp == rightComponent ) { rightComponent = _NULL ; } super . remove ( index ) ; revalidate ( ) ; repaint ( ) ; }
50490	public static boolean equals ( String filename1 , String filename2 ) { return equals ( filename1 , filename2 , _BOOL , IOCase . SENSITIVE ) ; }
50493	public static Entry entryFromLdifString ( String ldif ) throws Exception { return entriesFromLdifString ( ldif ) . get ( _NUM ) ; }
50506	@ NonNull public static Interpolator fastOutSlowIn ( ) { return new FastOutSlowInInterpolator ( ) ; }
50507	public Object remove ( int posn ) { Object r = addrs . elementAt ( posn ) ; addrs . removeElementAt ( posn ) ; return r ; }
50517	public void endPrefixMapping ( String prefix ) throws org . xml . sax . SAXException { }
50528	public void logAbandonRequest ( AbandonOperation abandonOperation ) { }
50532	public void error ( SAXParseException e ) throws SAXException { }
50548	protected void fireValueChanged ( int firstIndex , int lastIndex ) { fireValueChanged ( firstIndex , lastIndex , getValueIsAdjusting ( ) ) ; }
50555	public void printSet ( Set set , int indentLevel ) { Iterator itr = set . iterator ( ) ; while ( itr . hasNext ( ) ) { printIndent ( indentLevel ) ; writer . println ( itr . next ( ) . toString ( ) ) ; } writer . flush ( ) ; }
50561	private static int compareTo ( byte [ ] ip1 , byte [ ] ip2 ) { if ( Arrays . areEqual ( ip1 , ip2 ) ) { return _NUM ; } if ( Arrays . areEqual ( max ( ip1 , ip2 ) , ip1 ) ) { return _NUM ; } return - _NUM ; }
50567	public void putAll ( Map < ? extends K , ? extends V > m ) { putMapEntries ( m , _BOOL ) ; }
50568	public static long [ ] copyOf ( long [ ] original , int newLength ) { long [ ] copy = new long [ newLength ] ; System . arraycopy ( original , _NUM , copy , _NUM , Math . min ( original . length , newLength ) ) ; return copy ; }
50586	public boolean domainMatch ( String host , String domain ) { boolean match = host . equals ( domain ) || ( domain . startsWith ( _CHAR . _CHAR ) && host . endsWith ( domain ) ) ; return match ; }
50596	public boolean contains_plane ( ) { return contains_plane ; }
50597	public Object nextElement ( ) { return nextToken ( ) ; }
50610	private void processDelete ( Set < DN > deleteDNset , boolean log ) { if ( log ) { writeLog ( deleteDNset ) ; } else { for ( DN baseDN : getBaseDNsToSearch ( ) ) { doBaseDN ( baseDN , deleteDNset ) ; } } }
50612	public AMSearchResults searchUsers ( AMSearchControl searchControl , String avfilter ) throws AMException , SSOException { return searchObjects ( getSearchFilter ( AMObject . USER ) , searchControl , avfilter ) ; }
50616	public boolean warningEnabled ( ) { return ( debugLevel > Debug . ERROR ) ; }
50620	public static String replacePart ( String self ) { return replacePart ( self , _CHAR _CHAR ) ; }
50635	public String findInLine ( String pattern ) { return findInLine ( patternCache . forName ( pattern ) ) ; }
50641	static InternalSearchOperation searchForChangedEntries ( DN baseDN , CSN fromCSN , InternalSearchListener resultListener ) throws Exception { return searchForChangedEntries ( baseDN , fromCSN , _NULL , resultListener ) ; }
50643	@ Override public void close ( ) { LogManager . getLogManager ( ) . checkAccess ( ) ; close ( _BOOL ) ; }
50653	public void transformNode ( int node , Result outputTarget ) throws TransformerException { SerializationHandler xoh = createSerializationHandler ( outputTarget ) ; this . setSerializationHandler ( xoh ) ; m_outputTarget = outputTarget ; transformNode ( node ) ; }
50657	public synchronized void requestPreviewFrame ( Handler handler , int message ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . getCamera ( ) . setOneShotPreviewCallback ( previewCallback ) ; } }
50660	void logSearchResultReference ( SearchOperation searchOperation , SearchResultReference searchReference ) { }
50665	protected void propertyChange ( PropertyChangeEvent evt ) { super . propertyChange ( evt ) ; if ( evt . getPropertyName ( ) . equals ( _CHAR lineWrap _CHAR ) || evt . getPropertyName ( ) . equals ( _CHAR wrapStyleWord _CHAR ) || evt . getPropertyName ( ) . equals ( _CHAR tabSize _CHAR ) ) { modelChanged ( ) ; } else if ( _CHAR editable _CHAR . equals ( evt . getPropertyName ( ) ) ) { updateFocusTraversalKeys ( ) ; } }
50670	public char nextClean ( ) throws JSONException { int nextCleanInt = nextCleanInternal ( ) ; return nextCleanInt == - _NUM ? _CHAR : ( char ) nextCleanInt ; }
50671	public void toggle_select_action ( Point2D p_point ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; PlaPointFloat location = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; StateInteractive return_state = ( ( StateSelectedItem ) interactive_state ) . toggle_select ( location ) ; if ( return_state != interactive_state ) { set_interactive_state ( return_state ) ; repaint ( ) ; } }
50676	protected synchronized void bcsPreDeserializationHook ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { serializable = ois . readInt ( ) ; int count = serializable ; while ( count > _NUM ) { services . put ( ois . readObject ( ) , ois . readObject ( ) ) ; count -- ; } }
50678	public static void main ( String [ ] args ) { int result = configureWindowsService ( args , System . out , System . err ) ; System . exit ( filterExitCode ( result ) ) ; }
50680	private void logUnexpectedException ( Exception e ) { logger . trace ( ERR_CHANGE_NUMBER_INDEXER_UNEXPECTED_EXCEPTION , getClass ( ) . getSimpleName ( ) , stackTraceToSingleLineString ( e ) ) ; }
50688	public PdfCanvas openTag ( TagReference tagReference ) { if ( tagReference . getRole ( ) == _NULL ) return this ; CanvasTag tag = new CanvasTag ( tagReference . getRole ( ) , tagReference . createNextMcid ( ) ) ; tag . setProperties ( tagReference . getProperties ( ) ) ; return openTag ( tag ) ; }
50689	public final float readFloat ( ) throws IOException { return Float . intBitsToFloat ( readInt ( ) ) ; }
50697	protected UndoableEdit editToBeUndone ( ) { int i = indexOfNextAdd ; while ( i > _NUM ) { UndoableEdit edit = edits . elementAt ( -- i ) ; if ( edit . isSignificant ( ) ) { return edit ; } } return _NULL ; }
50698	protected int drawEchoCharacter ( Graphics g , int x , int y , char c ) { ONE [ _NUM ] = c ; SwingUtilities2 . drawChars ( Utilities . getJComponent ( this ) , g , ONE , _NUM , _NUM , x , y ) ; return x + g . getFontMetrics ( ) . charWidth ( c ) ; }
50709	public void replaceCondition ( String conditionName , Condition condition ) throws NameNotFoundException { if ( ! conditions . containsKey ( conditionName ) ) { String [ ] objs = { conditionName } ; throw ( new NameNotFoundException ( ResBundleUtils . rbName , _CHAR name_not_present _CHAR , objs , conditionName , PolicyException . CONDITION_COLLECTION ) ) ; } conditions . put ( conditionName , condition ) ; }
50714	public boolean isExtensible ( ) { return isExtensibleObject ; }
50724	public final PlaSide side_of ( PlaPoint p_point ) { PlaSide result = p_point . side_of ( this ) ; return result . negate ( ) ; }
50725	@ Override public Promise < ResourceResponse , ResourceException > filterCreate ( Context context , CreateRequest request , RequestHandler next ) { CrestAuditor auditor = newAuditor ( context , request ) ; auditor . auditAccessAttempt ( ) ; return auditResponse ( next . handleCreate ( context , request ) , auditor , request ) ; }
50733	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
50734	public Set < K > keySet ( ) { Set < K > ks = keySet ; if ( ks != _NULL ) return ks ; else return keySet = new KeySet ( ) ; }
50741	public static void main ( String [ ] args ) { try { new MergeProperties ( args [ _NUM ] , args [ _NUM ] , args [ _NUM ] ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
50752	public Object createSession ( Map info , HttpServletRequest request , HttpServletResponse response , StringBuffer targetApplication ) throws SessionException { debug . message ( _CHAR FedletSessionProvider . createSession ( _NUM ) called _CHAR + info ) ; return info . get ( SessionProvider . PRINCIPAL_NAME ) ; }
50754	public Set searchOrganizations ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ORGANIZATION ) , getSearchFilter ( AMObject . ORGANIZATION ) , wildcard , avPairs , level ) ; }
50755	public int _hash ( int maximum ) { return hashCode ( ) ; }
50757	public static Foo fetchByUUID_G ( java . lang . String uuid , long groupId , boolean retrieveFromCache ) { return getPersistence ( ) . fetchByUUID_G ( uuid , groupId , retrieveFromCache ) ; }
50758	public static AsfHeader readInfoHeader ( final RandomAccessFile file ) throws IOException { final InputStream stream = createStream ( file ) ; return INFO_READER . read ( Utils . readGUID ( stream ) , stream , _NUM ) ; }
50759	public static void reversedMergesort ( double [ ] a ) { reversedMergesort ( a , _NUM , a . length ) ; }
50761	public void curveTo ( float x2 , float y2 , float x3 , float y3 ) { if ( currentPoint == _NULL ) { throw new RuntimeException ( START_PATH_ERR_MSG ) ; } curveTo ( ( float ) currentPoint . getX ( ) , ( float ) currentPoint . getY ( ) , x2 , y2 , x3 , y3 ) ; }
50765	public static double acos ( double a ) { return StrictMath . acos ( a ) ; }
50771	public boolean isSecure ( ) { return this . firstTransactionSecure ; }
50780	public static String byteCountToDisplaySize ( long size ) { return byteCountToDisplaySize ( BigInteger . valueOf ( size ) ) ; }
50783	public void startElement ( String uri , String localName , String qName , Attributes attributes ) throws SAXException { }
50794	public boolean canWriteTiles ( ) { return canWriteTiles ; }
50796	public void trimToSize ( ) { balance ( ) ; redimNodeArrays ( freenode ) ; CharVector kx = new CharVector ( ) ; kx . alloc ( _NUM ) ; TernaryTree map = new TernaryTree ( ) ; compact ( kx , map , root ) ; kv = kx ; kv . trimToSize ( ) ; }
50801	public void startElement ( String uri , String localName , String qName , Attributes attributes ) throws SAXException { }
50819	public void fireTableDataChanged ( ) { fireTableChanged ( new TableModelEvent ( this ) ) ; }
50827	public void remove ( ) throws AccessRightsException , EntryNotFoundException , UMSException { if ( m_guid == _NULL || m_principal == _NULL ) return ; DataLayer . getInstance ( ) . deleteEntry ( getPrincipal ( ) , getGuid ( ) ) ; setGuid ( _NULL ) ; setPrincipal ( _NULL ) ; }
50837	protected void closeRedirector ( ) { try { if ( redirectOutput && redirectOutPrintStream != _NULL ) { redirector . complete ( ) ; } } catch ( IOException ioe ) { log ( _CHAR Error closing redirector : _CHAR + ioe . getMessage ( ) , Project . MSG_ERR ) ; } redirectOutStream = _NULL ; redirectOutPrintStream = _NULL ; redirectErrStream = _NULL ; redirectErrPrintStream = _NULL ; }
50856	public boolean validate ( int validateAction ) { return validate ( validateAction , _NULL ) ; }
50884	public void addColumn ( TableColumn aColumn ) { if ( aColumn == _NULL ) { throw new IllegalArgumentException ( _CHAR Object is _NULL _CHAR ) ; } tableColumns . addElement ( aColumn ) ; aColumn . addPropertyChangeListener ( this ) ; invalidateWidthCache ( ) ; fireColumnAdded ( new TableColumnModelEvent ( this , _NUM , getColumnCount ( ) - _NUM ) ) ; }
50886	public boolean isUnknown ( ) { return _BOOL ; }
50899	protected void replacePane ( JComponent currentPane , JComponent newPane ) { if ( currentPane != _NULL ) { deinstallMouseHandlers ( currentPane ) ; frame . remove ( currentPane ) ; } if ( newPane != _NULL ) { frame . add ( newPane ) ; installMouseHandlers ( newPane ) ; } }
50901	private void appendErrorLine ( String msg ) { msg = filterForBugID4988885 ( msg + _CHAR < br > _CHAR ) ; msg = Utilities . applyFont ( msg , ColorAndFontConstants . progressFont ) ; appendHtml ( msg ) ; }
50904	public void eleminateRedundentLocals ( ElemTemplateElement psuedoVarRecipient ) { eleminateRedundent ( psuedoVarRecipient , m_paths ) ; }
50910	public final boolean readBoolean ( ) throws IOException { int temp = this . read ( ) ; if ( temp < _NUM ) { throw new EOFException ( ) ; } return temp != _NUM ; }
50918	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; s . writeObject ( SerializationTester . test ( transferable ) ? transferable : _NULL ) ; s . writeObject ( SerializationTester . test ( listener ) ? listener : _NULL ) ; }
50920	public DecimalStyle withNegativeSign ( char negativeSign ) { if ( negativeSign == this . negativeSign ) { return this ; } return new DecimalStyle ( zeroDigit , positiveSign , negativeSign , decimalSeparator ) ; }
50921	public String toString ( boolean detail ) { if ( ! detail || this . linkResolvedObj == _NULL ) return this . toString ( ) ; return this . toString ( ) + _CHAR ; Link Resolved Object : _CHAR + this . linkResolvedObj ; }
50926	public boolean isValid ( SigningHandler signingHandler ) { if ( isSignatureValid == _NULL ) { isSignatureValid = jwt . verify ( signingHandler ) ; } return isSignatureValid && isContentValid ( ) ; }
50944	public boolean isCancelled ( ) { return cancel ; }
50945	public synchronized void removePropertyChangeListener ( PropertyChangeListener listener ) { if ( changeSupport == _NULL ) { return ; } changeSupport . removePropertyChangeListener ( listener ) ; }
50950	public StatelessSession generate ( SessionInfo info ) throws SessionException { String jwt = getJwtSessionMapper ( ) . asJwt ( info ) ; SessionID sessionID = SessionID . generateStatelessSessionID ( sessionServerConfig , info . getClientDomain ( ) , jwt ) ; cache . cache ( info , jwt ) ; return new StatelessSession ( sessionID , info , this ) ; }
50952	public boolean isSameNode ( Node other ) { return this == other ; }
50958	@ Override protected boolean isIgnoredProfile ( String realm ) { return SAML2PluginsUtils . isIgnoredProfile ( realm ) ; }
50959	public Iterator < E > iterator ( ) { return new Itr ( ) ; }
50960	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof QueuedJobCount ) ; }
50965	@ Override public String chooseClientAlias ( final String [ ] keyType , final Principal [ ] issuers , final Socket socket ) { if ( keyManager != _NULL ) { return keyManager . chooseClientAlias ( keyType , issuers , socket ) ; } return _NULL ; }
50971	public void openFileChooser ( ValueCallback < Uri > uploadMsg , String acceptType , String capture ) { openFileChooser ( uploadMsg , acceptType ) ; }
50972	static DnTemplate compile ( String template ) { return compile ( template , _BOOL ) ; }
50981	public int nextSpanTransition ( int start , int limit , Class kind ) { if ( mSpanCount == _NUM ) return limit ; if ( kind == _NULL ) { kind = Object . class ; } return nextSpanTransitionRec ( start , limit , kind , treeRoot ( ) ) ; }
50994	protected ResourceMatch compare ( String resource1 , String resource2 , boolean interpretWildCard ) { if ( resourceNameUtil == _NULL ) { return ( ResourceMatch . NO_MATCH ) ; } return ( resourceNameUtil . compare ( resource1 , resource2 , interpretWildCard ) ) ; }
50998	public boolean equals ( Object obj ) { if ( obj instanceof MenuShortcut ) { return equals ( ( MenuShortcut ) obj ) ; } return _BOOL ; }
51001	public static int showInternalConfirmDialog ( Component parentComponent , Object message , String title , int optionType , int messageType , Icon icon ) { return showInternalOptionDialog ( parentComponent , message , title , optionType , messageType , icon , _NULL , _NULL ) ; }
51010	public int start ( String name ) { return groups [ getMatchedGroupIndex ( name ) * _NUM ] ; }
51037	public boolean isECLEnabledDomain ( DN baseDN ) { return MultimasterReplication . isECLEnabledDomain ( baseDN ) ; }
51044	public void postEvent ( AWTEvent theEvent ) { SunToolkit . flushPendingEvents ( appContext ) ; postEventPrivate ( theEvent ) ; }
51049	@ Override public void close ( ) throws IOException { if ( ! def . finished ( ) ) { finish ( ) ; } def . end ( ) ; out . close ( ) ; }
51050	public void columnSelectionChanged ( ListSelectionEvent e ) { }
51053	@ Override public void onAttachFragment ( final Fragment fragment ) { super . onAttachFragment ( fragment ) ; }
51054	public W3CEndpointReferenceBuilder metadata ( Element metadataElement ) { if ( metadataElement == _NULL ) throw new java . lang . IllegalArgumentException ( _CHAR The metadataElement can not be _NULL . _CHAR ) ; metadata . add ( metadataElement ) ; return this ; }
51064	public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { }
51069	public static < T > ObjectPool < T > erodingPool ( final ObjectPool < T > pool ) { return erodingPool ( pool , _NUM ) ; }
51073	private boolean isInternalFrameSystemMenu ( ) { String actionCommand = menuItem . getActionCommand ( ) ; if ( ( actionCommand == _CHAR Close _CHAR ) || ( actionCommand == _CHAR Minimize _CHAR ) || ( actionCommand == _CHAR Restore _CHAR ) || ( actionCommand == _CHAR Maximize _CHAR ) ) { return _BOOL ; } else { return _BOOL ; } }
51083	public Period multipliedBy ( int scalar ) { if ( this == ZERO || scalar == _NUM ) { return this ; } return create ( Math . multiplyExact ( years , scalar ) , Math . multiplyExact ( months , scalar ) , Math . multiplyExact ( days , scalar ) ) ; }
51095	public void addAttribute ( String uri , String localName , String rawName , String type , String value , boolean XSLAttribute ) throws SAXException { if ( m_elemContext . m_startTagOpen ) { ensurePrefixIsDeclared ( uri , rawName ) ; addAttributeAlways ( uri , localName , rawName , type , value , _BOOL ) ; } }
51097	public static String toString ( InputStream input , String encoding ) throws IOException { return toString ( input , Charsets . toCharset ( encoding ) ) ; }
51112	public static String encodeJavaMIMEType ( String mimeType ) { return ( mimeType != _NULL ) ? JavaMIME + mimeType : _NULL ; }
51122	public void characters ( char ch [ ] , int start , int length ) throws SAXException { }
51133	public boolean remove ( Object o ) { return map . remove ( o ) == PRESENT ; }
51137	public void close ( ) throws IOException { super . close ( ) ; buf = _NULL ; }
51139	public boolean equals ( Object obj ) { if ( obj instanceof FontKey ) { FontKey font = ( FontKey ) obj ; return ( size == font . size ) && ( style == font . style ) && ( family == font . family ) ; } return _BOOL ; }
51147	public ServantObject _servant_preinvoke ( String operation , Class expectedType ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
51165	void deregisterAllGroups ( ) { lock . writeLock ( ) . lock ( ) ; try { groupInstances . clear ( ) ; } finally { lock . writeLock ( ) . unlock ( ) ; } }
51166	public boolean isVisible ( ) { return getTextComponent ( ) . isVisible ( ) ; }
51170	public synchronized boolean next ( Writable key , Writable val ) throws IOException { if ( val . getClass ( ) != WALEntry . class ) { throw new IOException ( _CHAR wrong value class : _CHAR + val + _CHAR is not _CHAR + WALEntry . class ) ; } boolean more = next ( key ) ; if ( more ) { getCurrentValue ( val ) ; } return more ; }
51171	public Set searchFilteredRoles ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( FILTERED_ROLE ) , getSearchFilter ( AMObject . FILTERED_ROLE ) , wildcard , avPairs , level ) ; }
51179	public void notationDecl ( String name , String publicId , String systemId ) { }
51201	boolean isNavigatable ( int offset ) { return _BOOL ; }
51204	public boolean isBuildable ( ) { return buildable ; }
51206	public synchronized void reset ( ) throws IOException { throw new IOException ( _CHAR mark / reset not supported _CHAR ) ; }
51208	public java . io . Reader readCharacterStream ( ) throws SQLException { return ( java . io . Reader ) getNextAttribute ( ) ; }
51210	public static byte [ ] decodeBase64 ( final String base64String ) { return new Base64 ( ) . decode ( base64String ) ; }
51216	public void newLine ( ) throws IOException { write ( lineSeparator ) ; }
51223	private void assertThatCursorCanBeFullyRead ( DBCursor < Record < String , String >> cursor , int fromIndex , int endIndex ) throws Exception { advanceCursorUpTo ( cursor , fromIndex , endIndex ) ; assertThatCursorIsExhausted ( cursor ) ; }
51224	public void skippedEntity ( String name ) throws SAXException { }
51255	public static void copy ( byte [ ] input , Writer output ) throws IOException { ByteArrayInputStream in = new ByteArrayInputStream ( input ) ; copy ( in , output ) ; }
51256	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
51270	private boolean isCauseRecordDuplicatedException ( Throwable ex , int maxLevels ) { return isCauseException ( ex , ORecordDuplicatedException . class , maxLevels ) ; }
51284	public static < T > ArrayList < T > list ( Enumeration < T > e ) { ArrayList < T > l = new ArrayList < > ( ) ; while ( e . hasMoreElements ( ) ) l . add ( e . nextElement ( ) ) ; return l ; }
51288	public synchronized void keyPress ( int keycode ) { checkKeycodeArgument ( keycode ) ; peer . keyPress ( keycode ) ; afterEvent ( ) ; }
51293	public CMSSignedData generate ( String eContentType , CMSProcessable content , boolean encapsulate , String sigProvider , boolean addDefaultAttributes ) throws NoSuchAlgorithmException , NoSuchProviderException , CMSException { return generate ( eContentType , content , encapsulate , CMSUtils . getProvider ( sigProvider ) , addDefaultAttributes ) ; }
51295	private void pop ( ) { String removed = encodedPathSegments . remove ( encodedPathSegments . size ( ) - _NUM ) ; if ( removed . isEmpty ( ) && ! encodedPathSegments . isEmpty ( ) ) { encodedPathSegments . set ( encodedPathSegments . size ( ) - _NUM , _CHAR _CHAR ) ; } else { encodedPathSegments . add ( _CHAR _CHAR ) ; } }
51311	public void addRow ( final Vector rowData ) { insertRow ( getRowCount ( ) , rowData ) ; }
51320	public static void initializeProperties ( Properties properties ) { if ( systemProperties != _NULL ) { systemProperties . initializeProperties ( properties ) ; } }
51328	public static void error ( CommandManager mgr , String msg , Throwable t ) { dumpToOutput ( mgr , msg , t ) ; mgr . getDebugger ( ) . error ( msg , t ) ; }
51329	public void importSubConfig ( String subConfigName , String exportedSubConfigName ) throws SMSException , SSOException { }
51337	static final int drawTabbedText ( View view , Segment s , int x , int y , Graphics g , TabExpander e , int startOffset ) { return drawTabbedText ( view , s , x , y , g , e , startOffset , _NULL ) ; }
51339	public void removePropertyChangeListener ( String name , PropertyChangeListener pcl ) { pcSupport . removePropertyChangeListener ( name , pcl ) ; }
51345	@ Override public void write ( int oneByte ) throws IOException { mSingleByteArray [ _NUM ] = ( byte ) ( _NUM & oneByte ) ; write ( mSingleByteArray ) ; }
51347	public String toString ( ) { return getClass ( ) . getName ( ) + _CHAR [ dropPoint = _CHAR + getDropPoint ( ) + _CHAR , _CHAR + _CHAR index = _CHAR + index + _CHAR , _CHAR + _CHAR insert = _CHAR + isInsert + _CHAR ] _CHAR ; }
51348	private boolean matchesField ( Format . Field attribute , int field ) { if ( this . attribute != _NULL ) { return this . attribute . equals ( attribute ) ; } return ( field == this . field ) ; }
51360	public void login ( Principal principal , char [ ] password ) throws AuthLoginException { if ( principal == _NULL ) throw new AuthLoginException ( amAuthContextLocal , _CHAR invalid - username _CHAR , _NULL ) ; if ( password == _NULL ) throw new AuthLoginException ( amAuthContextLocal , _CHAR invalid - password _CHAR , _NULL ) ; this . password = password ; login ( _NULL , _NULL , principal , password , _NULL ) ; }
51367	private int internalGetEra ( ) { return isSet ( ERA ) ? internalGet ( ERA ) : eras . length - _NUM ; }
51370	@ Override public int lengthOfMonth ( ) { return chrono . getMonthLength ( prolepticYear , monthOfYear ) ; }
51381	public boolean equals ( Object object ) { return super . equals ( object ) && object instanceof CopiesSupported ; }
51393	@ Override public boolean isLoggable ( LogRecord record ) { if ( writer == _NULL || record == _NULL ) { return _BOOL ; } return super . isLoggable ( record ) ; }
51419	public ProxySelector proxySelector ( ) { return proxySelector ; }
51425	public static void fill ( long [ ] a , int fromIndex , int toIndex , long val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
51430	public void startElement ( String name , AttributeList attributes ) throws SAXException { }
51436	final Node predecessor ( ) throws NullPointerException { Node p = prev ; if ( p == _NULL ) throw new NullPointerException ( ) ; else return p ; }
51444	public void preSingleLogoutProcess ( String hostedEntityID , String realm , HttpServletRequest request , HttpServletResponse response , String userID , LogoutRequest logoutRequest , LogoutResponse logoutResponse , String binding ) throws SAML2Exception { return ; }
51460	protected void paintComponent ( Graphics g ) { if ( ui != _NULL ) { super . paintComponent ( g ) ; } else if ( isOpaque ( ) ) { g . setColor ( getBackground ( ) ) ; g . fillRect ( _NUM , _NUM , getWidth ( ) , getHeight ( ) ) ; } }
51470	public boolean isEqualTo ( ChangelogState other ) { if ( other == _NULL ) { return _BOOL ; } if ( this == other ) { return _BOOL ; } return domainToGenerationId . equals ( other . domainToGenerationId ) && domainToServerIds . equals ( other . domainToServerIds ) && offlineReplicas . getSnapshot ( ) . equals ( other . offlineReplicas . getSnapshot ( ) ) ; }
51473	public boolean requiresResourceName ( ) { return ( isResourceNameAllowed ( ) ) ; }
51475	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { Token token = adapter . read ( tokenId ) ; handler . processResults ( token ) ; }
51480	@ Override protected URLConnection openConnection ( URL url , Proxy proxy ) throws IOException { if ( url == _NULL || proxy == _NULL ) { throw new IllegalArgumentException ( _CHAR url == _NULL || proxy == _NULL _CHAR ) ; } return new FtpURLConnection ( url , proxy ) ; }
51493	public boolean equals ( Object obj ) { if ( obj == _NULL ) { return _BOOL ; } if ( this == obj ) { return _BOOL ; } if ( ! ( obj instanceof WindowsDesktopSSOPrincipal ) ) { return _BOOL ; } WindowsDesktopSSOPrincipal wtp = ( WindowsDesktopSSOPrincipal ) obj ; if ( name . equals ( wtp . getName ( ) ) ) { return _BOOL ; } return _BOOL ; }
51496	public static ImageTypeSpecifier createFromRenderedImage ( RenderedImage image ) { if ( image == _NULL ) { throw new IllegalArgumentException ( _CHAR image == _NULL ! _CHAR ) ; } if ( image instanceof BufferedImage ) { int bufferedImageType = ( ( BufferedImage ) image ) . getType ( ) ; if ( bufferedImageType != BufferedImage . TYPE_CUSTOM ) { return getSpecifier ( bufferedImageType ) ; } } return new ImageTypeSpecifier ( image ) ; }
51497	public Color stringToColor ( String string ) { return CSS . stringToColor ( string ) ; }
51498	public void paint ( Graphics g , Shape allocation ) { Rectangle a = ( Rectangle ) allocation ; painter . paint ( g , a . x , a . y , a . width , a . height , this ) ; super . paint ( g , a ) ; }
51509	public void endElement ( String ns , String localName , String name ) throws org . xml . sax . SAXException { m_elemStack . pop ( ) ; m_currentNode = m_elemStack . isEmpty ( ) ? _NULL : ( Node ) m_elemStack . peek ( ) ; }
51512	public boolean usageOrVersionDisplayed ( ) { return usageOrVersionDisplayed ; }
51516	public boolean isMenuDrivenMode ( ) { return _BOOL ; }
51517	public Blob readBlob ( ) throws SQLException { return ( Blob ) getNextAttribute ( ) ; }
51518	public void startDrag ( Cursor dragCursor , Transferable transferable , DragSourceListener dsl ) throws InvalidDnDOperationException { dragSource . startDrag ( this , dragCursor , transferable , dsl ) ; }
51522	public RequestEvent extractCollectedRequestEvent ( ) { return this . extractCollectedRequestEvent ( _BOOL ) ; }
51523	private synchronized void writeToOutputStream ( int oneByte ) { if ( mClosed ) { return ; } try { mOutputStream . write ( oneByte ) ; reportDecodedSizeIfApplicable ( ) ; } catch ( IOException e ) { handleIOExceptionWritingToStream ( e ) ; } }
51526	@ Override public void addChild ( WXComponent child ) { addChild ( child , - _NUM ) ; }
51528	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
51530	@ Override public void run ( ) { Collections . sort ( files ) ; for ( int i = files . size ( ) - _NUM ; i >= _NUM ; i -- ) { new File ( files . get ( i ) ) . delete ( ) ; } }
51543	public static Border createLoweredSoftBevelBorder ( ) { if ( sharedSoftLoweredBevel == _NULL ) { sharedSoftLoweredBevel = new SoftBevelBorder ( BevelBorder . LOWERED ) ; } return sharedSoftLoweredBevel ; }
51574	@ Override protected void finalize ( ) throws Throwable { close ( ) ; }
51580	@ NonNull public static Observable toAgeraObservable ( @ NonNull rx . Observable < ? > rxObservable ) { return new RxObservableAsAgera ( rxObservable ) ; }
51593	public void createTable ( Table tbl ) throws InvalidObjectException , MetaException { if ( tbl == _NULL ) throw new InvalidObjectException ( _CHAR Table passed is _NULL _CHAR ) ; try { this . getDatabase ( tbl . getDbName ( ) ) ; this . metastore . createTable ( tbl ) ; } catch ( NoSuchObjectException ex ) { throw new MetaException ( ex . getMessage ( ) ) ; } }
51597	public void mouseEntered ( MouseEvent e ) { getHandler ( ) . mouseEntered ( e ) ; }
51603	public boolean ignoreUserProfile ( ) { String profile = _NULL ; try { profile = ssoToken . getProperty ( ISAuthConstants . USER_PROFILE ) ; } catch ( SSOException e ) { debug . warning ( _CHAR AMModelBase . ignoreUserProfile _CHAR , e ) ; } return ( ( profile != _NULL ) && profile . equals ( ISAuthConstants . IGNORE ) ) ; }
51610	public DragGestureRecognizer createDefaultDragGestureRecognizer ( Component c , int actions , DragGestureListener dgl ) { return Toolkit . getDefaultToolkit ( ) . createDragGestureRecognizer ( MouseDragGestureRecognizer . class , this , c , actions , dgl ) ; }
51612	public void _read ( InputStream input ) { value = input . read_string ( ) ; }
51619	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof JobKOctetsProcessed ) ; }
51637	@ Override public Iterator < ByteString > iterator ( ) { return getUnmodifiableIterator ( values ) ; }
51643	public < T > T unwrap ( java . lang . Class < T > iface ) throws java . sql . SQLException { if ( isWrapperFor ( iface ) ) { return iface . cast ( this ) ; } else { throw new SQLException ( _CHAR unwrap failed for : '' + iface ) ; } }
51673	public FilterConfig findFilterConfig ( String name ) { return ( filterConfigs . get ( name ) ) ; }
51676	public SoapSTSServerCryptoStateBuilder decryptionKeyPassword ( String decryptionKeyPassword ) { this . decryptionKeyPassword = decryptionKeyPassword ; return this ; }
51677	public static InputStream toInputStream ( CharSequence input , String encoding ) throws IOException { return toInputStream ( input , Charsets . toCharset ( encoding ) ) ; }
51685	public Map validateAndInheritDefaults ( Map attrMap , boolean inherit ) throws SMSException { return ( validateAndInheritDefaults ( attrMap , _NULL , inherit ) ) ; }
51696	public void notifyVerticalEdgeReached ( int startY , int finalY , int overY ) { mScrollerY . notifyEdgeReached ( startY , finalY , overY ) ; }
51697	public static boolean isXML11NameHighSurrogate ( int c ) { return ( _NUM <= c && c <= _NUM ) ; }
51707	public void addRow ( Object [ ] rowData ) { addRow ( convertToVector ( rowData ) ) ; }
51708	public boolean add ( E e ) { if ( offer ( e ) ) return _BOOL ; else throw new IllegalStateException ( _CHAR Queue full _CHAR ) ; }
51709	public boolean equals ( Object opObject ) { if ( opObject instanceof IdOperation ) { return ( ( ( IdOperation ) opObject ) . op . equalsIgnoreCase ( this . op ) ) ; } return ( _BOOL ) ; }
51713	private void examineCompletedOPNoExtraPluginCounts ( ModifyDNOperation modifyDNOperation ) { assertTrue ( modifyDNOperation . getProcessingStartTime ( ) > _NUM ) ; assertTrue ( modifyDNOperation . getProcessingStopTime ( ) > _NUM ) ; assertTrue ( modifyDNOperation . getProcessingTime ( ) >= _NUM ) ; ensurePostReponseHasRun ( ) ; }
51714	public PlaSide side_of ( PlaDelTriCorner p_1 , PlaDelTriCorner p_2 ) { return coor . side_of ( p_1 . coor , p_2 . coor ) ; }
51717	public boolean equals ( Object obj ) { if ( obj instanceof RemoteObject ) { if ( ref == _NULL ) { return obj == this ; } else { return ref . remoteEquals ( ( ( RemoteObject ) obj ) . ref ) ; } } else if ( obj != _NULL ) { return obj . equals ( this ) ; } else { return _BOOL ; } }
51725	public String toString ( ) { StringBuffer buf = new StringBuffer ( _CHAR Reference Class Name : _CHAR + className + _CHAR \ n _CHAR ) ; int len = addrs . size ( ) ; for ( int i = _NUM ; i < len ; i ++ ) buf . append ( get ( i ) . toString ( ) ) ; return buf . toString ( ) ; }
51737	public synchronized void close ( ) throws IOException { if ( in == _NULL ) return ; in . close ( ) ; in = _NULL ; buf = _NULL ; }
51738	public void printStackTrace ( PrintStream ps ) { ps . println ( fetchStackTrace ( ) ) ; }
51739	public Response networkResponse ( ) { return networkResponse ; }
51744	public void onUnsubscribe ( ) { }
51747	public Duration withSeconds ( long seconds ) { return create ( seconds , nanos ) ; }
51752	public void login ( Subject subject ) throws AuthLoginException { login ( _NULL , _NULL , _NULL , _NULL , subject ) ; }
51763	public void attachContentStream ( PdfStream contentStream ) { this . contentStream = contentStream ; }
51764	public void createBufferStrategy ( int numBuffers ) { super . createBufferStrategy ( numBuffers ) ; }
51765	public java . sql . Date readDate ( ) throws SQLException { return ( java . sql . Date ) getNextAttribute ( ) ; }
51767	public boolean isActive ( ) { return active ; }
51771	protected boolean wasIcon ( JInternalFrame f ) { return ( f . getClientProperty ( HAS_BEEN_ICONIFIED_PROPERTY ) == Boolean . TRUE ) ; }
51773	public void clear ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { q . clear ( ) ; } finally { lock . unlock ( ) ; } }
51774	public void configChanged ( ConfigurationActionEvent e ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR SOAPBindingService : configChanged _CHAR ) ; } setValues ( ) ; }
51777	public boolean isCompressionLossless ( ) { if ( ! canWriteCompressed ( ) ) { throw new UnsupportedOperationException ( _CHAR Compression not supported _CHAR ) ; } if ( getCompressionMode ( ) != MODE_EXPLICIT ) { throw new IllegalStateException ( _CHAR Compression mode not MODE_EXPLICIT ! _CHAR ) ; } if ( ( getCompressionTypes ( ) != _NULL ) && ( getCompressionType ( ) == _NULL ) ) { throw new IllegalStateException ( _CHAR No compression type set ! _CHAR ) ; } return _BOOL ; }
51778	@ Override public void putAll ( Map < ? extends K , ? extends V > map ) { putAllImpl ( map ) ; }
51779	public Attribute toAttribute ( ) throws IllegalStateException { Attribute attribute = toAttribute0 ( ) ; values = new SmallSet < > ( ) ; return attribute ; }
51784	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof CertAuthPrincipal ) ) { return _BOOL ; } CertAuthPrincipal that = ( CertAuthPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
51792	private static String writeAsStringNoEolSlash ( JsonValue json ) throws JsonProcessingException { return writePrettyValueAsString ( json ) . replaceAll ( _CHAR \\ n _CHAR , _CHAR \\\ n _CHAR ) ; }
51796	@ NonNull public static Interpolator linearOutSlowIn ( ) { return new LinearOutSlowInInterpolator ( ) ; }
51797	@ Override public void performBackendPostFinalizationProcessing ( Backend < ? > backend ) { if ( ! DirectoryServer . getInstance ( ) . isShuttingDown ( ) ) { clearBackend ( backend . getBackendID ( ) ) ; } }
51801	public static BooleanArgument addBaseEntryArgument ( ) throws ArgumentException { return BooleanArgument . builder ( _CHAR addBaseEntry _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_ARGUMENT_DESCRIPTION_ADDBASE . get ( ) ) . buildArgument ( ) ; }
51809	public boolean isRadiosInUnison ( ) { return getFieldFlag ( FF_RADIOS_IN_UNISON ) ; }
51817	public void startPrefixMapping ( String prefix , String uri ) throws SAXException { }
51826	public static void writeAbstractObject ( OutputStream out , java . lang . Object obj ) { if ( utilDelegate != _NULL ) { utilDelegate . writeAbstractObject ( out , obj ) ; } }
51838	public static String wrapText ( final String text , final int width ) { return wrapText ( text , width , _NUM ) ; }
51863	public static RequestSecurityTokenResponse parseXML ( InputStream is ) throws WSFederationException { Document doc = XMLUtils . toDOMDocument ( is , debug ) ; Element root = doc . getDocumentElement ( ) ; return new RequestSecurityTokenResponse ( root ) ; }
51873	public boolean accept ( String filePath , String fileName , String firstLine ) { return acceptFile ( filePath , fileName ) || acceptIdentical ( filePath , fileName ) || acceptFirstLine ( firstLine ) ; }
51876	public static < T > MenuResult < T > again ( ) { return new MenuResult < > ( Type . AGAIN , Collections . < T > emptyList ( ) ) ; }
51877	public synchronized void co_exit ( int thisCoroutine ) { m_activeIDs . clear ( thisCoroutine ) ; m_nextCoroutine = NOBODY ; notify ( ) ; }
51884	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
51886	public boolean write ( String p_design_name , boolean p_compat_mode ) { try { write_dsn_scope ( p_design_name , p_compat_mode ) ; output_file . close ( ) ; board_handling . userPrintln ( classname + _CHAR write DONE _CHAR ) ; } catch ( java . io . IOException exc ) { board_handling . userPrintln ( _CHAR unable to write dsn file _CHAR , exc ) ; return _BOOL ; } return _BOOL ; }
51898	public static Foo fetchByUUID_G ( java . lang . String uuid , long groupId , boolean retrieveFromCache ) { return getPersistence ( ) . fetchByUUID_G ( uuid , groupId , retrieveFromCache ) ; }
51899	public static void flow ( InputStream is , OutputStream os ) throws IOException { byte [ ] buf = new byte [ DEFAULT_BUFFER_SIZE ] ; int numRead ; while ( ( numRead = is . read ( buf ) ) >= _NUM ) { os . write ( buf , _NUM , numRead ) ; } }
51904	private void updateRingColor ( float interpolatedTime , Ring ring ) { if ( interpolatedTime > COLOR_START_DELAY_OFFSET ) { ring . setColor ( evaluateColorChange ( ( interpolatedTime - COLOR_START_DELAY_OFFSET ) / ( _NUM . _NUM - COLOR_START_DELAY_OFFSET ) , ring . getStartingColor ( ) , ring . getNextColor ( ) ) ) ; } }
51910	public void policyChanged ( PolicyEvent policyEvent ) { if ( DelegationManager . debug . messageEnabled ( ) ) { DelegationManager . debug . message ( _CHAR DelegationPolicyImpl : delegation policy changed . '' ) ; } cleanupCache ( ) ; }
51913	private void firePropertyChange ( String propertyName , Object oldValue , Object newValue ) { if ( oldValue != _NULL && newValue != _NULL && oldValue . equals ( newValue ) ) { return ; } getCurrentChangeSupport ( ) . firePropertyChange ( propertyName , oldValue , newValue ) ; }
51917	void processDragEnter ( DragSourceDragEvent dsde ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragEnter ( dsde ) ; } }
51918	public boolean visitPredicate ( ExpressionOwner owner , Expression pred ) { return _BOOL ; }
51920	public void seek ( long pos ) throws IOException { checkClosed ( ) ; if ( pos < flushedPos ) { throw new IndexOutOfBoundsException ( ) ; } cache . seek ( pos ) ; this . streamPos = cache . getFilePointer ( ) ; maxStreamPos = Math . max ( maxStreamPos , streamPos ) ; this . bitOffset = _NUM ; }
51927	@ Nullable @ Override public ActionMode onWindowStartingSupportActionMode ( @ NonNull final ActionMode . Callback callback ) { return super . onWindowStartingSupportActionMode ( callback ) ; }
51930	public void sendMessage ( int type , String msg ) throws LoginException { messageCallback ( type , msg ) ; }
51937	@ Override public void newLine ( ) throws IOException { if ( writer != _NULL ) { writer . write ( System . lineSeparator ( ) ) ; } else { write ( System . lineSeparator ( ) ) ; } }
51940	public void write ( byte b [ ] ) throws IOException { write ( b , _NUM , b . length ) ; }
51941	private void writeChunks ( SocketChannel channel , byte [ ] bytes , int length ) { synchronized ( channel ) { byte [ ] buff = new byte [ length ] ; System . arraycopy ( bytes , _NUM , buff , _NUM , length ) ; messageProcessor . send ( channel , bytes ) ; } }
51944	protected void writeImage ( Element elem ) throws IOException { }
51952	public Resource objectClass ( final String objectClass ) { this . objectClasses . add ( objectClass ) ; return this ; }
51971	public static Cookie newCookie ( String name , String value , String path , String domain ) { return newCookie ( name , value , defAge , path , domain ) ; }
51984	public void detach ( ) { }
51996	public boolean isEnabled ( ) { return this . isEnabled ; }
52005	public static boolean isMarkup ( int c ) { return c == _CHAR || c == _CHAR || c == _CHAR ; }
52011	static Collection < Investment > mergeInvestments ( final Collection < Investment > left , final Collection < Investment > right ) { return Collections . unmodifiableCollection ( Stream . concat ( left . stream ( ) , right . stream ( ) ) . distinct ( ) . collect ( Collectors . toList ( ) ) ) ; }
52025	public static void fillEntriesInSet ( Map attrMap , String key , String value ) { if ( ( key != _NULL ) && ( value != _NULL ) && ( attrMap != _NULL ) ) { Set valueSet = new HashSet ( ) ; valueSet . add ( value ) ; attrMap . put ( key , valueSet ) ; } }
52026	public static void copy ( String input , OutputStream output ) throws IOException { StringReader in = new StringReader ( input ) ; OutputStreamWriter out = new OutputStreamWriter ( output ) ; copy ( in , out ) ; out . flush ( ) ; }
52027	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( ( ui != _NULL ) && ( getUIClassID ( ) . equals ( uiClassID ) ) ) { ui . installUI ( this ) ; } if ( getToolTipText ( ) == _NULL && haveRegistered ) { ToolTipManager . sharedInstance ( ) . registerComponent ( this ) ; } }
52028	public void newPixels ( ) { newPixels ( _NUM , _NUM , width , height , _BOOL ) ; }
52029	public void postActionEvent ( ) { fireActionPerformed ( ) ; }
52031	public static Class < ? > loadClassWithout ( ClassLoader loader , String className ) throws ClassNotFoundException { MBEANSERVER_LOGGER . logp ( Level . FINEST , DefaultLoaderRepository . class . getName ( ) , _CHAR loadClassWithout _CHAR , className ) ; return load ( loader , className ) ; }
52036	public double distance ( Location o ) { return Math . sqrt ( distanceSquared ( o ) ) ; }
52050	public static void deregisterSupportedFeature ( String featureOID ) { DirectoryServer . deregisterSupportedFeature ( featureOID ) ; }
52069	@ Override protected void onNewIntent ( final Intent intent ) { super . onNewIntent ( intent ) ; }
52070	public Object remove ( int posn ) throws InvalidNameException { return impl . remove ( posn ) ; }
52074	public void assignService ( String serviceName , Map attributes ) throws SMSException { addServiceConfig ( serviceName , attributes ) ; }
52082	Class < ? > findBoundCallerClass ( MemberName m ) throws IllegalAccessException { Class < ? > callerClass = _NULL ; if ( MethodHandleNatives . isCallerSensitive ( m ) ) { if ( hasPrivateAccess ( ) ) { callerClass = lookupClass ; } else { throw new IllegalAccessException ( _CHAR Attempt to lookup caller - sensitive method using restricted lookup object _CHAR ) ; } } return callerClass ; }
52087	private Object lock ( ) { Document document = getDocument ( ) ; if ( document instanceof AbstractDocument ) { ( ( AbstractDocument ) document ) . readLock ( ) ; return document ; } return _NULL ; }
52095	protected void deiconifyFrame ( JInternalFrame f ) { if ( ! f . isMaximum ( ) ) { BasicLookAndFeel . playSound ( frame , _CHAR InternalFrame . restoreUpSound _CHAR ) ; } getDesktopManager ( ) . deiconifyFrame ( f ) ; }
52100	public void processingInstruction ( String target , String data ) throws SAXException { }
52115	private void updateOver ( boolean o ) { boolean old = isRollover ( ) ; this . over = o && isEnabled ( ) ; boolean newo = isRollover ( ) ; if ( shouldActLikeButton ( ) && old != newo ) { comboBox . repaint ( ) ; } }
52118	public void characters ( char ch [ ] , int start , int length ) throws SAXException { }
52126	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiOptionPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiOptionPaneUI ) mui ) . uis , a ) ; }
52136	public Object encode ( Object object ) throws EncoderException { try { byte [ ] byteArray = object instanceof String ? ( ( String ) object ) . getBytes ( ) : ( byte [ ] ) object ; return encodeHex ( byteArray ) ; } catch ( ClassCastException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
52143	public static < T > SortedSet < T > unmodifiableSortedSet ( SortedSet < T > s ) { return new UnmodifiableSortedSet < > ( s ) ; }
52146	public static SAXSource createSAXSource ( InputSource source ) throws JAXBException { try { SAXParser saxParser = getSafeSAXParser ( _BOOL ) ; return new SAXSource ( saxParser . getXMLReader ( ) , source ) ; } catch ( Exception ex ) { throw new JAXBException ( _CHAR Unable to create SAXSource _CHAR , ex ) ; } }
52156	public void removeNotify ( ComponentPeer peer ) { if ( nativePeer != _NULL ) ( ( DropTargetPeer ) nativePeer ) . removeDropTarget ( this ) ; componentPeer = nativePeer = _NULL ; synchronized ( this ) { if ( isDraggingInside ) { dragExit ( new DropTargetEvent ( getDropTargetContext ( ) ) ) ; } } }
52159	public static int lastIndexOf ( final String value , final String needle , boolean caseSensitive ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return lastIndexOf ( value , needle , value . length ( ) , caseSensitive ) ; }
52162	void processDropActionChanged ( DragSourceDragEvent dsde ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dropActionChanged ( dsde ) ; } }
52168	public boolean isScroll ( ) { return ! getFieldFlag ( FF_DO_NOT_SCROLL ) ; }
52174	public void printStackTrace ( ) { printStackTrace ( System . err ) ; }
52177	public static int pixelToDp ( Context context , int pixel ) { DisplayMetrics displayMetrics = context . getResources ( ) . getDisplayMetrics ( ) ; return pixel < _NUM ? pixel : Math . round ( pixel / displayMetrics . density ) ; }
52187	public static String showInternalInputDialog ( Component parentComponent , Object message ) { return showInternalInputDialog ( parentComponent , message , UIManager . getString ( _CHAR OptionPane . inputDialogTitle _CHAR , parentComponent ) , QUESTION_MESSAGE ) ; }
52189	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; if ( ! ( obj instanceof PropertyPermission ) ) return _BOOL ; PropertyPermission that = ( PropertyPermission ) obj ; return ( this . mask == that . mask ) && ( this . getName ( ) . equals ( that . getName ( ) ) ) ; }
52200	public boolean containsValue ( Object value ) { return contains ( value ) ; }
52203	private String updateClassName ( String name ) { ClassNode cn = getClassNode ( name ) ; if ( cn != _NULL ) { return getRefactoredName ( cn ) ; } return name ; }
52209	public void scan ( ) throws IOException , SAXException { scanPlatform ( ) ; scanJspConfig ( ) ; scanResourcePaths ( WEB_INF ) ; scanJars ( ) ; }
52211	public URI relativize ( URI uri ) { return relativize ( this , uri ) ; }
52218	boolean inHalfOpenRange ( K key , K least , K fence ) { if ( key == _NULL ) throw new NullPointerException ( ) ; return ( ( least == _NULL || compare ( key , least ) >= _NUM ) && ( fence == _NULL || compare ( key , fence ) < _NUM ) ) ; }
52220	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { try { writeNormalizedChars ( ch , start , length , m_lineSepUse ) ; } catch ( IOException ioe ) { throw new SAXException ( ioe ) ; } }
52224	@ Override public int hashCode ( ) { if ( numFrames != _NUM ) { return classNames [ _NUM ] . hashCode ( ) + methodNames [ _NUM ] . hashCode ( ) + lineNumbers [ _NUM ] ; } return _NUM ; }
52239	public void visitEnd ( ) { if ( mv != _NULL ) { mv . visitEnd ( ) ; } }
52249	public void addTab ( String title , Component component ) { insertTab ( title , _NULL , component , _NULL , pages . size ( ) ) ; }
52250	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof LDAPPrincipal ) ) { return _BOOL ; } LDAPPrincipal that = ( LDAPPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
52251	@ Override public int read ( ) throws IOException { synchronized ( lock ) { return in . read ( ) ; } }
52256	public double length ( ) { return Math . sqrt ( NumberConversions . square ( x ) + NumberConversions . square ( y ) + NumberConversions . square ( z ) ) ; }
52265	@ Override public boolean accept ( File file ) { boolean newer = FileUtils . isFileNewer ( file , cutoff ) ; return acceptOlder ? ! newer : newer ; }
52268	public int enumerate ( Thread [ ] threads , boolean recurse ) { return enumerateGeneric ( threads , recurse , _NUM , _BOOL ) ; }
52277	public final void writeBoolean ( boolean v ) throws IOException { out . write ( v ? _NUM : _NUM ) ; incCount ( _NUM ) ; }
52282	public boolean containsValue ( Object value ) { return contents . containsValue ( value ) ; }
52313	public void animateOut ( ) { animate ( OUT ) ; }
52317	protected void flushRequirementChanges ( ) { if ( isLoaded ( ) ) { super . flushRequirementChanges ( ) ; } }
52320	private void initializeSubentryManager ( ) throws InitializationException { try { subentryManager = new SubentryManager ( ) ; } catch ( DirectoryException de ) { throw new InitializationException ( de . getMessageObject ( ) ) ; } }
52321	public java . sql . Time readTime ( ) throws SQLException { return ( java . sql . Time ) getNextAttribute ( ) ; }
52327	public Condition removeCondition ( Condition condition ) { String conditionName = getConditionName ( condition ) ; if ( conditionName != _NULL ) { return ( Condition ) removeCondition ( conditionName ) ; } return _NULL ; }
52345	@ Override protected void propertyChange ( PropertyChangeEvent evt ) { if ( SynthLookAndFeel . shouldUpdateStyle ( evt ) ) { updateStyle ( ( JTextComponent ) evt . getSource ( ) ) ; } super . propertyChange ( evt ) ; }
52363	public String toString ( ) { return ( _CHAR Operation : _CHAR + op ) ; }
52366	public static TempLogFile newTempLogFile ( final String prefix ) { try { return new TempLogFile ( File . createTempFile ( prefix , _CHAR . log _CHAR ) ) ; } catch ( final IOException e ) { localizedLogger . error ( LocalizableMessage . raw ( _CHAR Unable to create temp log file because : _CHAR + e . getMessage ( ) ) , e ) ; return new TempLogFile ( ) ; } }
52369	public BindOperation processSimpleBind ( ByteString rawBindDN , ByteString password ) { return processSimpleBind ( rawBindDN , password , _NULL ) ; }
52374	private void delayedExecute ( RunnableScheduledFuture < ? > task ) { if ( isShutdown ( ) ) reject ( task ) ; else { super . getQueue ( ) . add ( task ) ; if ( isShutdown ( ) && ! canRunInCurrentRunState ( task . isPeriodic ( ) ) && remove ( task ) ) task . cancel ( _BOOL ) ; else ensurePrestart ( ) ; } }
52375	@ Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { process ( request . getRemoteHost ( ) , request , response , chain ) ; }
52376	@ Override public void reset ( ) throws IOException { fInputStream . reset ( ) ; }
52386	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof AnonymousAuthPrincipal ) ) { return _BOOL ; } AnonymousAuthPrincipal that = ( AnonymousAuthPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
52387	public boolean isAbsolute ( ) { return fs . isAbsolute ( this ) ; }
52411	public double readDouble ( ) throws SQLException { Double attrib = ( Double ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . doubleValue ( ) ; }
52414	public Locale locale ( ) { return this . locale ; }
52418	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
52419	protected void processBytes ( byte [ ] bytes , int offset , int length ) { }
52440	public String toString ( ) { return hexify ( ) ; }
52456	public synchronized void putAll ( Map t ) { Iterator i = t . entrySet ( ) . iterator ( ) ; while ( i . hasNext ( ) ) { Map . Entry e = ( Map . Entry ) i . next ( ) ; put ( e . getKey ( ) , e . getValue ( ) ) ; } }
52459	public void compose ( StylesheetRoot sroot ) throws TransformerException { super . compose ( sroot ) ; }
52464	public void ensureExceptionThrownIfOptionIsUnsupportedOnOS ( int option ) { if ( ! getOptionIsSupported ( option ) ) { fail ( _CHAR Failed to throw exception for unsupported socket option : _CHAR + getSocketOptionString ( option ) ) ; } }
52474	public void endElement ( String namespaceURI , String localName , String name ) throws org . xml . sax . SAXException { if ( m_tracer != _NULL ) super . fireEndElem ( name ) ; }
52475	private static void readIndex ( ) { try { readIndexMulti ( ) ; } catch ( Exception ex ) { throw new AssertionError ( ex ) ; } zoneInfos = new ZoneInfo [ ids . length ] ; }
52490	public final byte readByte ( ) throws IOException { int temp = this . read ( ) ; if ( temp < _NUM ) { throw new EOFException ( ) ; } return ( byte ) temp ; }
52496	public static void fillEntriesInSet ( Map attrMap , String key , String value ) { if ( ( key != _NULL ) && ( value != _NULL ) && ( attrMap != _NULL ) ) { Set valueSet = new HashSet ( ) ; valueSet . add ( value ) ; attrMap . put ( key , valueSet ) ; } }
52503	private static String applyFontToHtmlWithDiv ( String html , Font font ) { return _CHAR < div style =\ _CHAR _CHAR + getFontStyle ( font ) + _CHAR \ _CHAR > _CHAR + html + DIV_CLOSE ; }
52510	@ Override public synchronized List < E > subList ( int start , int end ) { return new Collections . SynchronizedRandomAccessList < E > ( super . subList ( start , end ) , this ) ; }
52511	public static void register ( String path ) { register ( path , _NULL ) ; }
52517	public void dispatchCharactersEvents ( int nodeHandle , org . xml . sax . ContentHandler ch , boolean normalize ) throws org . xml . sax . SAXException { }
52521	public void message ( String msg , Throwable t ) { if ( debugLevel > Debug . WARNING ) { formatAndWrite ( _NULL , msg , t ) ; } }
52533	@ Deprecated public ShapelessRecipe removeIngredient ( Material ingredient , int rawdata ) { return removeIngredient ( _NUM , ingredient , rawdata ) ; }
52539	public void elementDecl ( String name , String model ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # elementDecl : _CHAR + name + _CHAR , _CHAR + model ) ; if ( _NULL != m_declHandler ) { m_declHandler . elementDecl ( name , model ) ; } }
52548	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
52568	public byte [ ] decode ( byte [ ] array ) throws DecoderException { return decodeHex ( new String ( array ) . toCharArray ( ) ) ; }
52570	public int asNode ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { int current = xctxt . getCurrentNode ( ) ; DTM dtm = xctxt . getDTM ( current ) ; return dtm . getFirstChild ( current ) ; }
52583	public boolean isPropertySetSettable ( SSOToken caller , Collection < String > properties ) { for ( String property : properties ) { try { SessionUtils . checkPermissionToSetProperty ( caller , property , _NULL ) ; } catch ( SessionException e ) { return _BOOL ; } } return _BOOL ; }
52584	public static boolean unexportObject ( Remote obj , boolean force ) throws NoSuchObjectException { return sun . rmi . transport . ObjectTable . unexportObject ( obj , force ) ; }
52588	@ SuppressWarnings ( _CHAR unused _CHAR ) public static PointF toPoint ( float [ ] point ) { if ( point == _NULL ) return _NULL ; if ( point . length < _NUM ) throw new IndexOutOfBoundsException ( ) ; return new PointF ( point [ _NUM ] , point [ _NUM ] ) ; }
52598	@ Override protected void onStartLoading ( ) { super . onStartLoading ( ) ; if ( objectToRetain != _NULL ) { deliverResult ( objectToRetain ) ; } else { forceLoad ( ) ; } }
52602	public boolean contains ( Object o ) { return map . containsKey ( o ) ; }
52613	private String replaceTokens ( String s , String alertType , String alertID , String alertMessage ) { return s . replace ( _CHAR % % alert - type % % _CHAR , alertType ) . replace ( _CHAR % % alert - id % % _CHAR , alertID ) . replace ( _CHAR % % alert - message % % _CHAR , alertMessage ) . replace ( _CHAR \\ n _CHAR , _CHAR \ r \ n _CHAR ) ; }
52639	public void clear ( ) { this . referent = _NULL ; }
52641	public synchronized void mark ( int readlimit ) { in . mark ( readlimit ) ; }
52645	public final boolean isDaemon ( ) { return daemon ; }
52650	public ExtensionNamespaceSupport defineJavaNamespace ( String ns ) { return defineJavaNamespace ( ns , ns ) ; }
52654	public static synchronized String [ ] [ ] read ( String logName , String logType , Object userCrdential ) throws IOException , NoSuchFieldException , IllegalArgumentException , RuntimeException , Exception { queryResult = read ( logName , logType , ( String ) _NULL , ( LogQuery ) _NULL , userCrdential ) ; return queryResult ; }
52678	public void resetEffectiveRightsParams ( ) { this . targAttrFilterAcis . clear ( ) ; this . decidingAci = _NULL ; this . evalReason = _NULL ; this . targAttrFiltersMatch = _BOOL ; this . summaryString = _NULL ; this . targAttrMatch = _NUM ; }
52680	synchronized static void initialize ( ) { if ( CertPathHelper . instance == _NULL ) { CertPathHelper . instance = new CertPathHelperImpl ( ) ; } }
52687	public boolean activateController ( ) { if ( ! hasController ( ) ) { throw new IllegalStateException ( _CHAR hasController ( ) == _BOOL ! _CHAR ) ; } return getController ( ) . activate ( this ) ; }
52694	static String compactClassName ( final String str ) { return str . replace ( _CHAR , _CHAR ) ; }
52703	@ Override public void close ( ) throws IOException { if ( writer != _NULL ) { writer . close ( ) ; } else { closed = _BOOL ; } }
52710	@ Override public int hashCode ( ) { int hashCode = _NUM + rtype . hashCode ( ) ; for ( Class < ? > ptype : ptypes ) hashCode = _NUM * hashCode + ptype . hashCode ( ) ; return hashCode ; }
52714	public static boolean isDownwardAxisOfMany ( int axis ) { return ( ( Axis . DESCENDANTORSELF == axis ) || ( Axis . DESCENDANT == axis ) || ( Axis . FOLLOWING == axis ) || ( Axis . PRECEDING == axis ) ) ; }
52725	public void removeAttribute ( String name , boolean notify ) { if ( ! isValidInternal ( ) ) throw new IllegalStateException ( sm . getString ( _CHAR standardSession . removeAttribute . ise _CHAR ) ) ; removeAttributeInternal ( name , notify ) ; }
52734	public HeaderFactory createHeaderFactory ( ) throws PeerUnavailableException { if ( headerFactory == _NULL ) { headerFactory = ( HeaderFactory ) createSipFactory ( _CHAR javax . sip . header . HeaderFactoryImpl _CHAR ) ; } return headerFactory ; }
52752	protected void iconifyFrame ( JInternalFrame f ) { BasicLookAndFeel . playSound ( frame , _CHAR InternalFrame . minimizeSound _CHAR ) ; getDesktopManager ( ) . iconifyFrame ( f ) ; }
52783	public boolean equals ( Object obj ) { if ( obj instanceof UID ) { UID uid = ( UID ) obj ; return ( unique == uid . unique && count == uid . count && time == uid . time ) ; } else { return _BOOL ; } }
52785	public boolean isUsable ( ServerManagedObject < ? > managedObject , Collection < LocalizableMessage > unacceptableReasons ) throws ConfigException { return _BOOL ; }
52787	public ValidationMessage [ ] validate ( TagData data ) { ValidationMessage [ ] result = _NULL ; if ( ! isValid ( data ) ) { result = new ValidationMessage [ ] { new ValidationMessage ( data . getId ( ) , _CHAR isValid ( ) == _BOOL _CHAR ) } ; } return result ; }
52794	public static AsfHeader readTagHeader ( final RandomAccessFile file ) throws IOException { final InputStream stream = createStream ( file ) ; return TAG_READER . read ( Utils . readGUID ( stream ) , stream , _NUM ) ; }
52802	public W3CEndpointReferenceBuilder interfaceName ( QName interfaceName ) { this . interfaceName = interfaceName ; return this ; }
52810	public boolean equals ( Object o ) { if ( o == _NULL ) return _BOOL ; if ( this == o ) return _BOOL ; if ( ! ( o instanceof SecurIDPrincipal ) ) return _BOOL ; SecurIDPrincipal that = ( SecurIDPrincipal ) o ; if ( this . getName ( ) . equals ( that . getName ( ) ) ) return _BOOL ; return _BOOL ; }
52813	public int difference ( String s1 , String s2 ) throws EncoderException { return SoundexUtils . difference ( this , s1 , s2 ) ; }
52814	public long position ( Blob pattern , long start ) throws SerialException , SQLException { isValid ( ) ; return position ( pattern . getBytes ( _NUM , ( int ) ( pattern . length ( ) ) ) , start ) ; }
52815	private void processSDKNotification ( ) { try { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR processSDKNotification name = _CHAR + configName ) ; } ( ( AMConfiguration ) Configuration . getConfiguration ( ) ) . processListenerEvent ( configName ) ; } catch ( Exception e ) { debug . error ( _CHAR processSDKNotification _CHAR , e ) ; } }
52817	public org . omg . CORBA . TypeCode type ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR type _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . type ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
52822	public static String encodeLines ( byte [ ] in ) { return encodeLines ( in , _NUM , in . length , _NUM , systemLineSeparator ) ; }
52836	public Set searchSubOrganizations ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( ORGANIZATION ) , getSearchFilter ( AMObject . ORGANIZATION ) , wildcard , avPairs , level ) ; }
52841	String constructComponentName ( ) { synchronized ( PopupMenu . class ) { return base + nameCounter ++ ; } }
52851	public BrdComponent add ( PlaPointInt p_location , int p_rotation , boolean p_on_front , LibPackage p_package ) { int an_index = component_list . size ( ) + _NUM ; String component_name = _CHAR Component # _CHAR + an_index ; return add ( component_name , p_location , p_rotation , p_on_front , p_package , p_package , _BOOL ) ; }
52852	public ConfigChangeResult applyConfigurationChange ( ErrorLogAccountStatusNotificationHandlerCfg configuration , boolean detailedResults ) { return applyConfigurationChange ( configuration ) ; }
52854	protected void endFontTag ( ) throws IOException { write ( NEWLINE ) ; writeEndTag ( _CHAR < / font > _CHAR ) ; fontAttributes = _NULL ; }
52870	public void jspError ( String errCode , String ... args ) throws JasperException { dispatch ( _NULL , errCode , args , _NULL ) ; }
52882	public void propertyChange ( PropertyChangeEvent evt ) { super . propertyChange ( evt ) ; }
52888	@ Override public void onAttachFragment ( final Fragment childFragment ) { super . onAttachFragment ( childFragment ) ; }
52897	public org . omg . CORBA . TypeCode type ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR type _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . type ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
52898	static Object find ( String factoryId ) throws SOAPException { return find ( factoryId , _NULL , _BOOL ) ; }
52899	public Object pop ( ) { try { return ( stack . pop ( ) ) ; } catch ( EmptyStackException e ) { log . warn ( _CHAR Empty stack ( returning _NULL ) _CHAR ) ; return ( _NULL ) ; } }
52901	public boolean hasListeners ( String propertyName ) { return this . map . hasListeners ( propertyName ) ; }
52916	public static AuthenticationHandler tokenBased ( final SecretProvider data , final boolean isDryRun , final long time , final TemporalUnit unit ) { return new AuthenticationHandler ( data , isDryRun , _BOOL , Duration . of ( time , unit ) . getSeconds ( ) ) ; }
52943	public int transformToRTF ( ElemTemplateElement templateParent ) throws TransformerException { DTM dtmFrag = m_xcontext . getRTFDTM ( ) ; return transformToRTF ( templateParent , dtmFrag ) ; }
52961	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { m_resultContentHandler . ignorableWhitespace ( ch , start , length ) ; }
52967	public MazeSearchResult find_connection ( ) { while ( occupy_next_element ( ) ) { } if ( destination_door == _NULL ) return _NULL ; return new MazeSearchResult ( destination_door , section_no_of_destination_door ) ; }
52992	@ Override public void close ( ) throws IOException { }
52996	public void wordChars ( int low , int hi ) { if ( low < _NUM ) low = _NUM ; if ( hi >= ctype . length ) hi = ctype . length - _NUM ; while ( low <= hi ) ctype [ low ++ ] |= CT_ALPHA ; }
52997	public static IntegerArgument sampleDataArgument ( ) throws ArgumentException { return IntegerArgument . builder ( _CHAR sampleData _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_SETUP_DESCRIPTION_SAMPLE_DATA . get ( ) ) . lowerBound ( _NUM ) . defaultValue ( _NUM ) . valuePlaceholder ( INFO_NUM_ENTRIES_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
53021	public X509Certificate generateX509Certificate ( PrivateKey key , String provider ) throws NoSuchProviderException , SecurityException , SignatureException , InvalidKeyException { return generateX509Certificate ( key , provider , _NULL ) ; }
53031	@ Override public int read ( ) throws IOException { return in . read ( ) ; }
53032	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof SMPrincipal ) ) { return _BOOL ; } SMPrincipal that = ( SMPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
53034	public final void init ( byte [ ] params ) throws IOException { if ( this . initialized ) throw new IOException ( _CHAR already initialized _CHAR ) ; paramSpi . engineInit ( params ) ; this . initialized = _BOOL ; }
53036	private boolean internalIsLoggable ( Level l ) { int effectiveLevel = levelIntVal ; if ( effectiveLevel == Level . OFF . intValue ( ) ) { return _BOOL ; } return l . intValue ( ) >= effectiveLevel ; }
53050	public void removeSubject ( Subject subject ) { String subjectName = users . getSubjectName ( subject ) ; if ( subjectName != _NULL ) { removeSubject ( subjectName ) ; } }
53055	public void insertComponent ( Component c ) { MutableAttributeSet inputAttributes = getInputAttributes ( ) ; inputAttributes . removeAttributes ( inputAttributes ) ; StyleConstants . setComponent ( inputAttributes , c ) ; replaceSelection ( _CHAR _CHAR , _BOOL ) ; inputAttributes . removeAttributes ( inputAttributes ) ; }
53059	public static int copy ( Reader input , Writer output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
53076	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53077	@ Override public Promise < ResourceResponse , ResourceException > filterRead ( final Context context , final ReadRequest request , final RequestHandler next ) { return applicationTransformer . transform ( next . handleRead ( context , request ) , context ) ; }
53079	public void skippedEntity ( String name ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . skippedEntity ( name ) ; }
53085	public boolean startsWith ( Name n ) { if ( n instanceof CompoundName ) { return ( impl . startsWith ( n . size ( ) , n . getAll ( ) ) ) ; } else { return _BOOL ; } }
53088	@ Override public Promise < ResourceResponse , ResourceException > filterDelete ( Context context , DeleteRequest request , RequestHandler next ) { CrestAuditor auditor = newAuditor ( context , request ) ; auditor . auditAccessAttempt ( ) ; return auditResponse ( next . handleDelete ( context , request ) , auditor , request ) ; }
53095	public AMSearchResults searchSubGroupContainers ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP_CONTAINER ) , getSearchFilter ( AMObject . GROUP_CONTAINER ) , wildcard , avPairs , searchControl ) ; }
53099	public boolean isDataFlavorSupported ( DataFlavor df ) { return getDropTargetContext ( ) . isDataFlavorSupported ( df ) ; }
53100	public static MultiChoiceArgument < SearchScope > searchScopeArgument ( ) throws ArgumentException { return MultiChoiceArgument . < SearchScope > builder ( OPTION_LONG_SEARCHSCOPE ) . shortIdentifier ( OPTION_SHORT_SEARCHSCOPE ) . description ( INFO_SEARCH_DESCRIPTION_SEARCH_SCOPE . get ( ) ) . allowedValues ( SearchScope . values ( ) ) . defaultValue ( SearchScope . WHOLE_SUBTREE ) . valuePlaceholder ( INFO_SEARCH_SCOPE_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
53101	public int compareToIgnoreCase ( XMLString str ) { throw new org . apache . xml . utils . WrappedRuntimeException ( new java . lang . NoSuchMethodException ( _CHAR Java _NUM . _NUM method , not yet implemented _CHAR ) ) ; }
53108	public void insertNodeInto ( MutableTreeNode newChild , MutableTreeNode parent , int index ) { parent . insert ( newChild , index ) ; int [ ] newIndexs = new int [ _NUM ] ; newIndexs [ _NUM ] = index ; nodesWereInserted ( parent , newIndexs ) ; }
53122	public void visitEnd ( ) { if ( cv != _NULL ) { cv . visitEnd ( ) ; } }
53123	void registerFont ( String path ) { registerFont ( path , _NULL ) ; }
53125	public boolean equals ( Object object ) { return ( object != _NULL && object instanceof DateTimeSyntax && value . equals ( ( ( DateTimeSyntax ) object ) . value ) ) ; }
53142	@ Override public boolean isLeapYear ( long prolepticYear ) { return IsoChronology . INSTANCE . isLeapYear ( prolepticYear ) ; }
53145	public static int secondaryIdentityHash ( Object key ) { return secondaryHash ( System . identityHashCode ( key ) ) ; }
53147	public void warning ( SAXParseException e ) throws SAXException { }
53153	public synchronized boolean canUndo ( ) { if ( inProgress ) { UndoableEdit edit = editToBeUndone ( ) ; return edit != _NULL && edit . canUndo ( ) ; } else { return super . canUndo ( ) ; } }
53176	public XMLString substring ( int beginIndex , int endIndex ) { return new XString ( str ( ) . substring ( beginIndex , endIndex ) ) ; }
53178	public void clear ( ) { names . removeAllElements ( ) ; types . removeAllElements ( ) ; values . removeAllElements ( ) ; }
53185	public void addAttribute ( String uri , String localName , String rawName , String type , String value , boolean XSLAttribute ) throws SAXException { if ( m_elemContext . m_startTagOpen ) { addAttributeAlways ( uri , localName , rawName , type , value , XSLAttribute ) ; } }
53186	public void initialize ( Map configParams ) throws PolicyException { }
53190	public void update ( Graphics g ) { g . clearRect ( _NUM , _NUM , width , height ) ; paint ( g ) ; }
53193	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof JobImpressionsCompleted ) ; }
53215	public void repaint ( long tm , int x , int y , int width , int height ) { RepaintManager . currentManager ( SunToolkit . targetToAppContext ( this ) ) . addDirtyRegion ( this , x , y , width , height ) ; }
53224	public long timestamp ( ) { if ( version != _NUM ) { throw new UnsupportedOperationException ( ) ; } return timestamp ; }
53230	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeLong ( long x ) throws SQLException { attribs . add ( Long . valueOf ( x ) ) ; }
53235	public synchronized void addTextListener ( TextListener l ) { if ( l == _NULL ) { return ; } textListener = AWTEventMulticaster . add ( textListener , l ) ; newEventsOnly = _BOOL ; }
53237	public void dispatch ( ) { try { if ( catchExceptions ) { try { runnable . run ( ) ; } catch ( Throwable t ) { if ( t instanceof Exception ) { exception = ( Exception ) t ; } throwable = t ; } } else { runnable . run ( ) ; } } finally { finishedDispatching ( _BOOL ) ; } }
53238	public WorldCreator generator ( String generator ) { this . generator = getGeneratorForName ( name , generator , Bukkit . getConsoleSender ( ) ) ; return this ; }
53255	public void notationDecl ( String name , String publicId , String systemId ) throws SAXException { if ( _NULL != m_resultDTDHandler ) m_resultDTDHandler . notationDecl ( name , publicId , systemId ) ; }
53256	public void paintArrowButtonForeground ( SynthContext context , Graphics g , int x , int y , int w , int h , int direction ) { }
53270	public synchronized Object co_entry_pause ( int thisCoroutine ) throws java . lang . NoSuchMethodException { if ( ! m_activeIDs . get ( thisCoroutine ) ) throw new java . lang . NoSuchMethodException ( ) ; while ( m_nextCoroutine != thisCoroutine ) { try { wait ( ) ; } catch ( java . lang . InterruptedException e ) { } } return m_yield ; }
53281	public void initWebappDefaults ( String contextPath ) { Container ctx = getHost ( ) . findChild ( contextPath ) ; initWebappDefaults ( ( Context ) ctx ) ; }
53303	public int convertPreviousRowIndexToModel ( int index ) { if ( oldViewToModel != _NULL && index >= _NUM && index < oldViewToModel . length ) { return oldViewToModel [ index ] ; } return - _NUM ; }
53306	public boolean isNodeAfter ( int nodeHandle1 , int nodeHandle2 ) { return _BOOL ; }
53308	protected FocusListener createFocusListener ( ) { return getHandler ( ) ; }
53311	public void notationDecl ( String name , String publicId , String systemId ) { }
53315	public static ValueRange of ( long min , long max ) { if ( min > max ) { throw new IllegalArgumentException ( _CHAR Minimum value must be less than maximum value _CHAR ) ; } return new ValueRange ( min , min , max , max ) ; }
53324	public void compose ( StylesheetRoot sroot ) throws TransformerException { super . compose ( sroot ) ; m_qnameID = sroot . getComposeState ( ) . getQNameID ( m_qname ) ; int parentToken = m_parentNode . getXSLToken ( ) ; if ( parentToken == Constants . ELEMNAME_TEMPLATE || parentToken == Constants . EXSLT_ELEMNAME_FUNCTION ) ( ( ElemTemplate ) m_parentNode ) . m_inArgsSize ++ ; }
53326	public boolean isUnused ( ) { return ( numEntries < _NUM ) && waitingThreads . isEmpty ( ) ; }
53334	public OIDCIdTokenConfigBuilder customClaimMapperClass ( String customClaimMapperClass ) { this . customClaimMapperClass = customClaimMapperClass ; return this ; }
53343	public void cancel ( ) { synchronized ( queue ) { thread . newTasksMayBeScheduled = _BOOL ; queue . clear ( ) ; queue . notify ( ) ; } }
53351	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53362	public static void deregisterSupportedControl ( String controlOID ) { synchronized ( directoryServer . supportedControls ) { directoryServer . supportedControls . remove ( controlOID ) ; } }
53363	public int peekChar ( ) throws IOException { if ( fCurrentEntity . position == fCurrentEntity . count ) { load ( _NUM , _BOOL ) ; } int c = fCurrentEntity . ch [ fCurrentEntity . position ] ; if ( fCurrentEntity . isExternal ( ) ) { return c != _CHAR ? c : _CHAR ; } else { return c ; } }
53367	private synchronized void writeObject ( java . io . ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; s . writeChar ( separatorChar ) ; }
53371	public InputSource resolveEntity ( String publicId , String systemId ) throws SAXException { return _NULL ; }
53397	@ Override public boolean accept ( File file ) { boolean smaller = file . length ( ) < size ; return acceptLarger ? ! smaller : smaller ; }
53399	public Ref readRef ( ) throws SQLException { return ( Ref ) getNextAttribute ( ) ; }
53406	public static String toString ( InputStream input , Charset encoding ) throws IOException { StringBuilderWriter sw = new StringBuilderWriter ( ) ; copy ( input , sw , encoding ) ; return sw . toString ( ) ; }
53411	public int indexOf ( final AbstractInsnNode insn ) { if ( cache == _NULL ) { cache = toArray ( ) ; } return insn . index ; }
53415	public void put ( KeyStroke keyStroke , Object actionMapKey ) { super . put ( keyStroke , actionMapKey ) ; if ( getComponent ( ) != _NULL ) { getComponent ( ) . componentInputMapChanged ( this ) ; } }
53440	public Enumeration breadthFirstEnumeration ( ) { return new BreadthFirstEnumeration ( this ) ; }
53444	public final Signum projection ( PlaDirection p_other ) { return Signum . of ( projection_value ( p_other ) ) ; }
53447	public void removeNotify ( ) { super . removeNotify ( ) ; firePropertyChange ( _CHAR ancestor _CHAR , getParent ( ) , _NULL ) ; unregisterWithKeyboardManager ( ) ; deregisterNextFocusableComponent ( ) ; if ( getCreatedDoubleBuffer ( ) ) { RepaintManager . currentManager ( this ) . resetDoubleBuffer ( ) ; setCreatedDoubleBuffer ( _BOOL ) ; } if ( autoscrolls ) { Autoscroller . stop ( this ) ; } }
53457	public final boolean isErrorEnabled ( ) { return isLevelEnabled ( SimpleLog . LOG_LEVEL_ERROR ) ; }
53458	public boolean isLocalEchoEnabled ( ) { return localEchoEnabled ; }
53475	public Node selectSingleNode ( Node contextNode , String str ) throws TransformerException { return selectSingleNode ( contextNode , str , contextNode ) ; }
53478	public void addAccessibleSelection ( int i ) { TreeModel model = JTree . this . getModel ( ) ; if ( model != _NULL ) { if ( i >= _NUM && i < getAccessibleChildrenCount ( ) ) { TreePath path = getChildTreePath ( i ) ; JTree . this . addSelectionPath ( path ) ; } } }
53492	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53501	protected void appendQueryParams ( NonSyncStringBuffer buffer ) throws JspException { String nvPairs = getQueryParams ( ) ; if ( ( nvPairs != _NULL ) && ( nvPairs . length ( ) > _NUM ) ) { buffer . append ( _CHAR & amp ; _CHAR ) ; buffer . append ( nvPairs ) ; } }
53505	public org . omg . CORBA . TypeCode type ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR type _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . type ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53513	@ Override public Promise < AuthStatus , AuthenticationException > secureResponse ( MessageInfoContext messageInfo , Subject subject ) { return newResultPromise ( SEND_SUCCESS ) ; }
53529	public boolean equals ( XMLString anObject ) { return m_str . equals ( anObject . toString ( ) ) ; }
53532	public synchronized boolean removeElement ( Object object ) { int index ; if ( ( index = indexOf ( object , _NUM ) ) == - _NUM ) { return _BOOL ; } removeElementAt ( index ) ; return _BOOL ; }
53536	public static SessionNotification parseXML ( String xml ) { SessionNotificationParser parser = new SessionNotificationParser ( xml ) ; return parser . parseXML ( ) ; }
53552	private void examineCompletedOperation ( ModifyDNOperation modifyDNOperation ) { assertTrue ( modifyDNOperation . getProcessingStartTime ( ) > _NUM ) ; assertTrue ( modifyDNOperation . getProcessingStopTime ( ) > _NUM ) ; assertTrue ( modifyDNOperation . getProcessingTime ( ) >= _NUM ) ; ensurePostReponseHasRun ( ) ; }
53572	public OIDCIdTokenConfigBuilder customAuthenticationContextMapperClass ( String customAuthenticationContextMapperClass ) { this . customAuthenticationContextMapper = customAuthenticationContextMapperClass ; return this ; }
53583	public final double readDouble ( ) throws IOException { return Double . longBitsToDouble ( readLong ( ) ) ; }
53586	static String generateRandomName ( ) { StringBuilder sb = new StringBuilder ( _NUM ) ; byte [ ] keyRandom = new byte [ _NUM ] ; random . nextBytes ( keyRandom ) ; sb . append ( currentTimeMillis ( ) ) . toString ( ) ; return ( sb . append ( Base64 . encode ( keyRandom ) ) . toString ( ) ) ; }
53588	public boolean containsKey ( Object [ ] key ) { return ( key == _NULL ? _BOOL : dataMap . containsKey ( Arrays . asList ( key ) ) ) ; }
53608	final Node predecessor ( ) throws NullPointerException { Node p = prev ; if ( p == _NULL ) throw new NullPointerException ( ) ; else return p ; }
53609	public String toASCIIPropertyList ( ) { StringBuilder ascii = new StringBuilder ( ) ; toASCII ( ascii , _NUM ) ; ascii . append ( NEWLINE ) ; return ascii . toString ( ) ; }
53618	public static BufferedImage createColorModelCompatibleImage ( BufferedImage image ) { ColorModel cm = image . getColorModel ( ) ; return new BufferedImage ( cm , cm . createCompatibleWritableRaster ( image . getWidth ( ) , image . getHeight ( ) ) , cm . isAlphaPremultiplied ( ) , _NULL ) ; }
53634	public void logConnect ( ClientConnection clientConnection ) { }
53637	public void propertyChange ( PropertyChangeEvent e ) { getHandler ( ) . propertyChange ( e ) ; }
53651	protected final void openSessionForRead ( String applicationId , List < String > permissions ) { openSessionForRead ( applicationId , permissions , SessionLoginBehavior . SSO_WITH_FALLBACK , Session . DEFAULT_AUTHORIZE_ACTIVITY_CODE ) ; }
53667	public void insertUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { super . insertUpdate ( e , a , this ) ; }
53678	public synchronized long skip ( long n ) { long k = count - pos ; if ( n < k ) { k = n < _NUM ? _NUM : n ; } pos += k ; return k ; }
53682	public Name addAll ( int posn , Name n ) throws InvalidNameException { if ( n instanceof CompositeName ) { impl . addAll ( posn , n . getAll ( ) ) ; return this ; } else { throw new InvalidNameException ( _CHAR Not a composite name : _CHAR + n . toString ( ) ) ; } }
53683	public boolean isSizeLimitReached ( ) { return sizeLimitReached ; }
53693	public void mouseDragged ( MouseEvent e ) { if ( ( ! e . isConsumed ( ) ) && SwingUtilities . isLeftMouseButton ( e ) ) { moveCaret ( e ) ; } }
53695	@ Override public void onTokenRefresh ( ) { String refreshedToken = FirebaseInstanceId . getInstance ( ) . getToken ( ) ; Log . d ( TAG , _CHAR Refreshed token : _CHAR + refreshedToken ) ; sendRegistrationToServer ( refreshedToken ) ; }
53721	private void addWorkerFailed ( Worker w ) { final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { if ( w != _NULL ) workers . remove ( w ) ; decrementWorkerCount ( ) ; tryTerminate ( ) ; } finally { mainLock . unlock ( ) ; } }
53745	@ Override public void flush ( ) throws IOException { flushBytes ( _BOOL ) ; }
53746	@ NonNull public final Agera flatMap ( @ NonNull Supplier < Observable > mapper ) { return new AgeraFlatMap ( this , mapper ) ; }
53747	public boolean isUnsynchronization ( ) { return unsynchronization ; }
53755	@ Override public int lengthOfMonth ( ) { return isoDate . lengthOfMonth ( ) ; }
53764	public static Class loadClass ( String className , String remoteCodebase , ClassLoader loader ) throws ClassNotFoundException { if ( utilDelegate != _NULL ) { return utilDelegate . loadClass ( className , remoteCodebase , loader ) ; } return _NULL ; }
53765	public boolean messageEnabled ( ) { return ( debugLevel > Debug . WARNING ) ; }
53771	public static Cookie newCookie ( String name , String value , String path , String domain ) { return newCookie ( name , value , defAge , path , domain ) ; }
53773	public void addPropertyChangeListener ( String propertyName , PropertyChangeListener listener ) { if ( listener == _NULL || propertyName == _NULL ) { return ; } listener = this . map . extract ( listener ) ; if ( listener != _NULL ) { this . map . add ( propertyName , listener ) ; } }
53783	public void visitEnd ( ) { if ( mv != _NULL ) { mv . visitEnd ( ) ; } }
53786	@ Override public void addRuleInstances ( Digester digester ) { digester . addRule ( prefix + _CHAR user _CHAR , new MemoryUserRule ( ) ) ; }
53791	public TreePath pathByAddingChild ( Object child ) { if ( child == _NULL ) throw new NullPointerException ( _CHAR Null child not allowed _CHAR ) ; return new TreePath ( this , child ) ; }
53792	public static ByteString wrap ( final byte [ ] bytes ) { return new ByteString ( bytes , _NUM , bytes . length ) ; }
53797	public void compose ( StylesheetRoot sroot ) throws TransformerException { super . compose ( sroot ) ; }
53804	private Map mergeWithInternal ( String ct , Map dMap ) { Map rMap = _NULL ; Map sMap = ( Map ) internalClientData . get ( ct ) ; if ( sMap != _NULL ) { rMap = mergeMap ( sMap , dMap ) ; } return rMap ; }
53807	public static StringArgument rejectedImportLdifArgument ( ) throws ArgumentException { return StringArgument . builder ( _CHAR rejectFile _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_GENERAL_DESCRIPTION_REJECTED_FILE . get ( ) ) . valuePlaceholder ( INFO_REJECT_FILE_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
53817	public static void writeAttribue ( final UIComponent component , final String key , final Object defaultValue ) throws IOException { JKJsfUtil . writeAttribue ( component , key , _NULL , defaultValue ) ; }
53818	@ Override public void shutdown ( ) { if ( DEBUG . messageEnabled ( ) ) { DEBUG . message ( _CHAR shutdown invoked _CHAR ) ; } super . shutdown ( ) ; removeListener ( ) ; IOUtils . closeIfNotNull ( connectionFactory ) ; IOUtils . closeIfNotNull ( bindConnectionFactory ) ; idRepoListener = _NULL ; }
53820	@ Override public void processSchemaChange ( List < Modification > modifications ) { if ( ! modifications . isEmpty ( ) ) { LDAPReplicationDomain domain = findDomain ( DirectoryServer . getSchemaDN ( ) , _NULL ) ; if ( domain != _NULL ) { domain . synchronizeSchemaModifications ( modifications ) ; } } }
53829	public void startDocument ( ) throws SAXException { }
53834	public ObjectName preRegister ( MBeanServer server , ObjectName name ) throws Exception { setMBeanServer ( server ) ; if ( name == _NULL ) { name = new ObjectName ( server . getDefaultDomain ( ) + _CHAR : _CHAR + ServiceName . MLET ) ; } this . mletObjectName = name ; return this . mletObjectName ; }
53838	public BindOperation processSASLBind ( ByteString rawBindDN , String saslMechanism , ByteString saslCredentials , List < Control > controls ) { BindOperationBasis bindOperation = new BindOperationBasis ( this , nextOperationID ( ) , nextMessageID ( ) , controls , PROTOCOL_VERSION , rawBindDN , saslMechanism , saslCredentials ) ; bindOperation . setInternalOperation ( _BOOL ) ; bindOperation . run ( ) ; return bindOperation ; }
53841	public void comment ( char ch [ ] , int start , int length ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # comment : _CHAR + start + _CHAR , _CHAR + length ) ; if ( _NULL != m_lexicalHandler ) { m_lexicalHandler . comment ( ch , start , length ) ; } }
53843	public boolean isRequestFocusEnabled ( ) { return ! getFlag ( REQUEST_FOCUS_DISABLED ) ; }
53851	public static String toGreekAlphabetNumber ( int number , boolean upperCase ) { return upperCase ? toGreekAlphabetNumberUpperCase ( number ) : toGreekAlphabetNumberLowerCase ( number ) ; }
53857	public void invalidate ( ) { bounds = _NULL ; }
53865	public boolean isOperational ( ) { return getUsage ( ) . isOperational ( ) ; }
53866	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
53872	private boolean isAllowed ( AciContainer container , Operation operation ) { return skipAccessCheck ( operation ) || accessAllowed ( container ) ; }
53873	public void addSubject ( String name , Subject subject , boolean exclusive ) throws NameAlreadyExistsException , InvalidNameException { users . addSubject ( name , subject , exclusive ) ; }
53886	private void installClientDecorations ( JRootPane root ) { installBorder ( root ) ; JComponent titlePane = createTitlePane ( root ) ; setTitlePane ( root , titlePane ) ; installWindowListeners ( root , root . getParent ( ) ) ; installLayout ( root ) ; if ( window != _NULL ) { root . revalidate ( ) ; root . repaint ( ) ; } }
53896	public synchronized void requestPreviewFrame ( Handler handler , int message ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . getCamera ( ) . setOneShotPreviewCallback ( previewCallback ) ; } }
53902	protected boolean home ( TextView widget , Spannable buffer ) { return _BOOL ; }
53925	public static GenericBindRequest unmodifiableGenericBindRequest ( final GenericBindRequest request ) { if ( request instanceof UnmodifiableGenericBindRequestImpl ) { return request ; } return new UnmodifiableGenericBindRequestImpl ( request ) ; }
53936	private JsonValue validateSession ( final String tokenId ) { try { final SSOToken ssoToken = ssoTokenManager . createSSOToken ( tokenId ) ; return validateSession ( ssoToken ) ; } catch ( SSOException e ) { if ( LOGGER . errorEnabled ( ) ) { LOGGER . error ( _CHAR SessionResource . validateSession ( ) : : Unable to validate token _CHAR + tokenId , e ) ; } return sessionResourceUtil . invalidSession ( ) ; } }
53947	public void dispatchCharactersEvents ( org . xml . sax . ContentHandler ch ) throws org . xml . sax . SAXException { }
53954	public void resetKeyboardActions ( ) { for ( int counter = _NUM ; counter < _NUM ; counter ++ ) { InputMap inputMap = getInputMap ( counter , _BOOL ) ; if ( inputMap != _NULL ) { inputMap . clear ( ) ; } } ActionMap am = getActionMap ( _BOOL ) ; if ( am != _NULL ) { am . clear ( ) ; } }
53966	public void removeAllElements ( ) { if ( _NULL == m_map ) return ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { m_map [ i ] = DTM . NULL ; } m_firstFree = _NUM ; }
53984	public boolean keepProcessingEntry ( ) { return keepProcessingEntry ; }
53991	public AMSearchResults searchGroupContainers ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP_CONTAINER ) , getSearchFilter ( AMObject . GROUP_CONTAINER ) , wildcard , avPairs , searchControl ) ; }
53993	public static double atan ( double a ) { return StrictMath . atan ( a ) ; }
54013	public boolean isWritable ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . writable ; }
54015	@ Deprecated public boolean equals ( String s ) { if ( s == _NULL || mimeType == _NULL ) return _BOOL ; return isMimeTypeEqual ( s ) ; }
54019	public void put ( KeyStroke keyStroke , Object actionMapKey ) { if ( keyStroke == _NULL ) { return ; } if ( actionMapKey == _NULL ) { remove ( keyStroke ) ; } else { if ( arrayTable == _NULL ) { arrayTable = new ArrayTable ( ) ; } arrayTable . put ( keyStroke , actionMapKey ) ; } }
54026	public AMSearchResults searchUsers ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( USER ) , getSearchFilter ( AMObject . USER ) , wildcard , avPairs , searchControl ) ; }
54028	public Node item ( int i ) { if ( getLength ( ) == _NUM || i >= m_avts . size ( ) ) return _NULL ; else return new Attribute ( ( ( AVT ) m_avts . get ( i ) ) , ElemLiteralResult . this ) ; }
54034	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
54037	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof MembershipPrincipal ) ) { return _BOOL ; } MembershipPrincipal that = ( MembershipPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
54044	@ Override public void flush ( ) { target . flush ( ) ; }
54047	protected boolean isRootPaneCheckingEnabled ( ) { return rootPaneCheckingEnabled ; }
54053	public static String encode ( String s ) { String str = _NULL ; try { str = encode ( s , _CHAR UTF8 _CHAR ) ; } catch ( UnsupportedEncodingException e ) { } return str ; }
54055	public boolean canBuild ( ) { return this . canBuild ; }
54056	public void dispose ( ) { if ( isVisible ( ) ) { setVisible ( _BOOL ) ; } if ( isSelected ( ) ) { try { setSelected ( _BOOL ) ; } catch ( PropertyVetoException pve ) { } } if ( ! isClosed ) { firePropertyChange ( IS_CLOSED_PROPERTY , Boolean . FALSE , Boolean . TRUE ) ; isClosed = _BOOL ; } fireInternalFrameEvent ( InternalFrameEvent . INTERNAL_FRAME_CLOSED ) ; }
54063	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
54066	@ Override public boolean isValidateRoot ( ) { return _BOOL ; }
54071	public boolean isPathEditable ( TreePath path ) { return isEditable ( ) ; }
54078	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { }
54079	public MaterialBarcodeScannerBuilder withCenterTracker ( ) { mScannerMode = MaterialBarcodeScanner . SCANNER_MODE_CENTER ; return this ; }
54101	public PdfPage copyTo ( PdfDocument toDocument ) { return copyTo ( toDocument , _NULL ) ; }
54121	public boolean canContinueReading ( ) { return canContinueReading ; }
54122	public List < Interceptor > interceptors ( ) { return interceptors ; }
54147	public boolean hitEnd ( ) { return hitEnd ; }
54151	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeObject ( SQLData x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialStruct ( x , map ) ) ; } }
54170	public View detachViewAndClearPreInfo ( ) { View original = mHost ; if ( mBorder != _NULL ) { mBorder . detachView ( ) ; } mPreRealLeft = _NUM ; mPreRealWidth = _NUM ; mPreRealHeight = _NUM ; mPreRealTop = _NUM ; return original ; }
54173	public IXObjectDoHandler registerXObjectDoHandler ( PdfName xobjectSubType , IXObjectDoHandler handler ) { return xobjectDoHandlers . put ( xobjectSubType , handler ) ; }
54176	public void startDocument ( ) throws org . xml . sax . SAXException { startDocumentInternal ( ) ; m_needToCallStartDocument = _BOOL ; return ; }
54177	public void processingInstruction ( String target , String data ) throws org . xml . sax . SAXException { append ( m_doc . createProcessingInstruction ( target , data ) ) ; }
54180	public boolean isOptimizedDrawingEnabled ( ) { return _BOOL ; }
54183	public void close ( ) throws IOException { }
54192	public Iterator < E > iterator ( ) { return new Itr ( ) ; }
54193	@ Override public void replaceSelection ( String content ) { replaceSelection ( content , _BOOL ) ; }
54202	public final char yycharat ( int pos ) { return zzBuffer [ zzStartRead + pos ] ; }
54211	public ExpandRoomFreespaceIncomplete add_incomplete_expansion_room ( ShapeTile p_shape , int p_layer , ShapeTile p_contained_shape ) { ExpandRoomFreespaceIncomplete new_room = new ExpandRoomFreespaceIncomplete ( p_shape , p_layer , p_contained_shape ) ; incomplete_expansion_rooms . add ( new_room ) ; return new_room ; }
54216	@ Override public Name composeName ( Name name , Name prefix ) throws NamingException { prefix = ( Name ) prefix . clone ( ) ; return prefix . addAll ( name ) ; }
54217	public char previous ( ) { if ( pos == offset ) { return DONE ; } pos -= _NUM ; return current ( ) ; }
54221	public boolean add ( E e ) { return map . put ( e , PRESENT ) == _NULL ; }
54224	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof PrinterLocation ) ; }
54227	public void updateUI ( ) { setUI ( ( TableHeaderUI ) UIManager . getUI ( this ) ) ; TableCellRenderer renderer = getDefaultRenderer ( ) ; if ( renderer instanceof Component ) { SwingUtilities . updateComponentTreeUI ( ( Component ) renderer ) ; } }
54233	public void applyDismissing ( Animator animator , float currValue , float endValue , float velocity , float maxDistance ) { AnimatorProperties properties = getDismissingProperties ( currValue , endValue , velocity , maxDistance ) ; animator . setDuration ( properties . duration ) ; animator . setInterpolator ( properties . interpolator ) ; }
54247	boolean isViewableAs ( MethodType newType , boolean keepInterfaces ) { if ( ! VerifyType . isNullConversion ( returnType ( ) , newType . returnType ( ) , keepInterfaces ) ) return _BOOL ; return parametersAreViewableAs ( newType , keepInterfaces ) ; }
54255	public void prepare ( ) { if ( COMPILE_THRESHOLD == _NUM && ! isCompiled ) { compileToBytecode ( ) ; } if ( this . vmentry != _NULL ) { return ; } LambdaForm prep = getPreparedForm ( basicTypeSignature ( ) ) ; this . vmentry = prep . vmentry ; }
54256	private AuthTargetMappingBuilder addMapping ( String tokenTypeId , String authIndexType , String authIndexValue , Map < String , String > context ) { mappings . put ( tokenTypeId , new AuthTarget ( authIndexType , authIndexValue , context ) ) ; return this ; }
54258	public synchronized Iterator < NSObject > objectIterator ( ) { return set . iterator ( ) ; }
54259	public StampingProperties preserveEncryption ( ) { this . preserveEncryption = _BOOL ; return this ; }
54261	public static SimpleBindRequest newSimpleBindRequest ( final String name , final char [ ] password ) { Reject . ifNull ( name , password ) ; return new SimpleBindRequestImpl ( name , getBytes ( password ) ) ; }
54265	public String toString ( ) { return ( isRelative ( ) ? _CHAR _CHAR : _CHAR ( not relative ) _CHAR ) + getName ( ) + _CHAR : _CHAR + getClassName ( ) ; }
54266	public void warning ( String msg ) { log ( Level . WARNING , msg ) ; }
54285	public final V updateAndGet ( UnaryOperator < V > updateFunction ) { V prev , next ; do { prev = get ( ) ; next = updateFunction . apply ( prev ) ; } while ( ! compareAndSet ( prev , next ) ) ; return next ; }
54290	public boolean isValidOffset ( ZoneOffset offset ) { return isGap ( ) ? _BOOL : ( getOffsetBefore ( ) . equals ( offset ) || getOffsetAfter ( ) . equals ( offset ) ) ; }
54296	public String chooseServerAlias ( String keyType , Principal [ ] issuers , Socket sock ) { return sunX509KeyManager . chooseServerAlias ( keyType , issuers , sock ) ; }
54315	public void requestTopDownLeftRightResend ( ImageConsumer ic ) { if ( proxies != _NULL ) { ImageFilter imgf = ( ImageFilter ) proxies . get ( ic ) ; if ( imgf != _NULL ) { imgf . resendTopDownLeftRight ( src ) ; } } }
54316	public synchronized void addStratum ( SmapStratum stratum , boolean defaultStratum ) { strata . add ( stratum ) ; if ( defaultStratum ) this . defaultStratum = stratum . getStratumName ( ) ; }
54322	private boolean allInitialReplicasAreOfflineOrAlive ( ) { for ( DN baseDN : lastAliveCSNs ) { for ( CSN csn : lastAliveCSNs . getServerState ( baseDN ) ) { if ( csn . getTime ( ) == _NUM && replicasOffline . getCSN ( baseDN , csn . getServerId ( ) ) == _NULL ) { return _BOOL ; } } } return _BOOL ; }
54327	public synchronized void dragOver ( DropTargetDragEvent dtde ) { if ( ! active ) return ; if ( dtListener != _NULL && active ) dtListener . dragOver ( dtde ) ; updateAutoscroll ( dtde . getLocation ( ) ) ; }
54330	public org . omg . CORBA . Object _get_interface_def ( ) { throw new org . omg . CORBA . NO_IMPLEMENT ( reason ) ; }
54335	private boolean warmUpTextLayoutCache ( ) { boolean result ; try { layout . draw ( DUMMY_CANVAS ) ; result = _BOOL ; } catch ( Exception e ) { WXLogUtils . e ( TAG , WXLogUtils . getStackTrace ( e ) ) ; result = _BOOL ; } return result ; }
54337	public static int secondaryHash ( Object key ) { return secondaryHash ( key . hashCode ( ) ) ; }
54344	@ Override public void handleRequest ( RequestContext rc ) throws CLIException { super . handleRequest ( rc ) ; ssoToken = rc . getCLIRequest ( ) . getSSOToken ( ) ; if ( ssoToken == _NULL ) { adminID = getStringOptionValue ( AccessManagerConstants . ARGUMENT_ADMIN_ID ) ; adminPassword = getPassword ( ) ; } }
54352	public boolean contains ( Object o ) { return map . containsKey ( o ) ; }
54374	@ Override public boolean remove ( Object object ) { return removeElement ( object ) ; }
54385	@ Override public void access ( ) { this . thisAccessedTime = System . currentTimeMillis ( ) ; if ( ACTIVITY_CHECK ) { accessCount . incrementAndGet ( ) ; } }
54388	public void globalConfigChanged ( String serviceName , String version , String groupName , String serviceComponent , int type ) { }
54403	public void removePropertyChangeListener ( PropertyChangeListener listener ) { if ( listener == _NULL ) { return ; } if ( listener instanceof PropertyChangeListenerProxy ) { PropertyChangeListenerProxy proxy = ( PropertyChangeListenerProxy ) listener ; removePropertyChangeListener ( proxy . getPropertyName ( ) , proxy . getListener ( ) ) ; } else { this . map . remove ( _NULL , listener ) ; } }
54412	public synchronized int available ( ) { return count - pos ; }
54419	public String toGnuStepASCIIPropertyList ( ) { StringBuilder ascii = new StringBuilder ( ) ; toASCIIGnuStep ( ascii , _NUM ) ; ascii . append ( NEWLINE ) ; return ascii . toString ( ) ; }
54420	public boolean add ( Object attrVal ) { if ( isOrdered ( ) || ( find ( attrVal ) < _NUM ) ) { values . addElement ( attrVal ) ; return _BOOL ; } else { return _BOOL ; } }
54421	public void removeDragSourceListener ( DragSourceListener dsl ) { if ( dsl != _NULL ) { synchronized ( this ) { listener = DnDEventMulticaster . remove ( listener , dsl ) ; } } }
54424	public boolean signHash ( ) { return signHash ; }
54426	public boolean hasNextBoolean ( ) { return hasNext ( boolPattern ( ) ) ; }
54433	public AuthTargetMappingBuilder addMapping ( TokenTypeId tokenTypeId , String authIndexType , String authIndexValue , Map < String , String > context ) { mappings . put ( tokenTypeId . getId ( ) , new AuthTarget ( authIndexType , authIndexValue , context ) ) ; return this ; }
54438	protected PropertyChangeListener createActionChangeListener ( JButton b ) { return _NULL ; }
54463	public char previous ( ) { if ( pos > _NUM ) { pos -- ; return chars [ pos ] ; } else { pos = _NUM ; return DONE ; } }
54472	public void unread ( int b ) throws IOException { ensureOpen ( ) ; if ( pos == _NUM ) { throw new IOException ( _CHAR Push back buffer is full _CHAR ) ; } buf [ -- pos ] = ( byte ) b ; }
54477	public static SimpleBindRequest newSimpleBindRequest ( final String name , final byte [ ] password ) { Reject . ifNull ( name , password ) ; return new SimpleBindRequestImpl ( name , password ) ; }
54479	@ Override public void close ( ) throws IOException { synchronized ( lock ) { if ( encoder != _NULL ) { drainEncoder ( ) ; flushBytes ( _BOOL ) ; out . close ( ) ; encoder = _NULL ; bytes = _NULL ; } } }
54483	@ Override protected void addToken ( SoapMessage message ) { throw new IllegalStateException ( _CHAR OpenAMSessionTokenSeverInterceptor # addToken called - this is unexpected ! _CHAR ) ; }
54493	public boolean isEdit ( ) { return getFieldFlag ( FF_EDIT ) ; }
54515	public int size ( ) { return attrMap . size ( ) ; }
54516	public Object [ ] toArray ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return q . toArray ( ) ; } finally { lock . unlock ( ) ; } }
54518	@ Override public int compareTo ( EntryID that ) throws ClassCastException { final long result = this . id - that . id ; if ( result < _NUM ) { return - _NUM ; } else if ( result > _NUM ) { return _NUM ; } return _NUM ; }
54534	boolean allowsTrailingArguments ( ) { return allowsTrailingArguments ; }
54547	public Set searchPeopleContainers ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( PEOPLE_CONTAINER ) , getSearchFilter ( AMObject . PEOPLE_CONTAINER ) , wildcard , avPairs , level ) ; }
54550	public boolean isIntervalInPast ( String intervalString ) throws IllegalArgumentException { return Interval . parse ( intervalString ) . getEnd ( ) . isBeforeNow ( ) ; }
54558	public static void checkStringLengthNullSafe ( String value ) throws IllegalArgumentException { if ( value != _NULL ) { if ( value . length ( ) > MAXIMUM_STRING_LENGTH_ALLOWED ) { throw new IllegalArgumentException ( ErrorMessage . WMA_LENGTH_OF_STRING_IS_TOO_LARGE . getMsg ( ( value . length ( ) * _NUM ) ) ) ; } } }
54569	protected void initParams ( ) { params = new Hashtable < Integer , Object > ( ) ; }
54571	protected SizeRequirements calculateMajorAxisRequirements ( int axis , SizeRequirements r ) { SizeRequirements req = super . calculateMajorAxisRequirements ( axis , r ) ; req . maximum = Integer . MAX_VALUE ; return req ; }
54592	@ SuppressWarnings ( _CHAR all _CHAR ) static < T > Promise < T > invokablePromise ( Consumer < Promise < T >> promiseConsumer ) { return new InvokerPromise < > ( ( Consumer < CallbackHandle < T >> ) ( Object ) promiseConsumer ) ; }
54599	public E elementAt ( int index ) { return delegate . elementAt ( index ) ; }
54606	public static < K , V > SortedMap < K , V > unmodifiableSortedMap ( SortedMap < K , ? extends V > m ) { return new UnmodifiableSortedMap < > ( m ) ; }
54608	public boolean isWrapperFor ( Class < ? > interfaces ) throws SQLException { return interfaces . isInstance ( this ) ; }
54616	static boolean doesIconReferenceImage ( Icon icon , Image image ) { Image iconImage = ( icon != _NULL && ( icon instanceof ImageIcon ) ) ? ( ( ImageIcon ) icon ) . getImage ( ) : _NULL ; return ( iconImage == image ) ; }
54617	DN findBaseDNForChildEntries ( BasicNode node ) { if ( isFollowReferrals ( ) && node . getRemoteUrl ( ) != _NULL ) { return DN . valueOf ( node . getRemoteUrl ( ) . getRawBaseDN ( ) ) ; } return node . getDN ( ) ; }
54621	public boolean hasController ( ) { return ( controller != _NULL ) ; }
54623	private static void notifyDeveloperError ( String message ) { Logger . log ( LoggingBehavior . DEVELOPER_ERRORS , _CHAR AppEvents _CHAR , message ) ; }
54625	public void close ( ) throws IOException { }
54626	public void addDragSourceMotionListener ( DragSourceMotionListener dsml ) { if ( dsml != _NULL ) { synchronized ( this ) { motionListener = DnDEventMulticaster . add ( motionListener , dsml ) ; } } }
54632	public void repaint ( long time , int x , int y , int width , int height ) { if ( RepaintManager . HANDLE_TOP_LEVEL_PAINT ) { RepaintManager . currentManager ( this ) . addDirtyRegion ( this , x , y , width , height ) ; } else { super . repaint ( time , x , y , width , height ) ; } }
54635	public URL createServerURL ( URL server , String path ) throws MalformedURLException { return new URL ( server . getProtocol ( ) , server . getHost ( ) , server . getPort ( ) , localServerDeploymentPath + _CHAR / _CHAR + path ) ; }
54636	protected ListCellRenderer createRenderer ( ) { return new BasicComboBoxRenderer . UIResource ( ) ; }
54645	final int hash ( Object k ) { int h = k . hashCode ( ) ; h ^= ( h >> > _NUM ) ^ ( h >> > _NUM ) ; return h ^ ( h >> > _NUM ) ^ ( h >> > _NUM ) ; }
54648	boolean canIncrement ( Object field , int cursorPosition ) { return ( field != _NULL ) ; }
54651	protected final synchronized void repaint ( ) { if ( component != _NULL ) { component . repaint ( x , y , width , height ) ; } }
54659	public static void clearInstanceAfterTests ( ) { instance = _NULL ; }
54665	public boolean retainAll ( Collection < ? > c ) { return al . retainAll ( c ) ; }
54669	public JavaClass parse ( ) throws IOException , ClassFormatException { readID ( ) ; readVersion ( ) ; readConstantPool ( ) ; readClassInfo ( ) ; readInterfaces ( ) ; readFields ( ) ; readMethods ( ) ; readAttributes ( ) ; return new JavaClass ( class_name , superclass_name , access_flags , constant_pool , interface_names , runtimeVisibleAnnotations ) ; }
54673	private synchronized void readObject ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { synchronized ( BeanContext . globalHierarchyLock ) { ois . defaultReadObject ( ) ; initialize ( ) ; bcsPreDeserializationHook ( ois ) ; if ( serializable > _NUM && this . equals ( getBeanContextPeer ( ) ) ) readChildren ( ois ) ; deserialize ( ois , bcmListeners = new ArrayList ( _NUM ) ) ; } }
54713	public String toExternalForm ( ) { if ( entryName == _NULL ) { return url . toExternalForm ( ) ; } else { return _CHAR jar : _CHAR + url . toExternalForm ( ) + _CHAR ! / _CHAR + entryName ; } }
54714	public Collection < ? > values ( ) { return Collections . unmodifiableCollection ( contents . values ( ) ) ; }
54723	void resetRealmSubjects ( ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR Resetting realm subjects in realm : _CHAR + pmRealmName ) ; } synchronized ( this ) { realmSubjects = _NULL ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR Reset realm subjects in realm : _CHAR + pmRealmName ) ; } }
54727	public void globalConfigChanged ( String serviceName , String version , String groupName , String serviceComponent , int changeType ) { }
54729	public void addCertificatesAndCRLs ( CertStore certStore ) throws CertStoreException , CMSException { certs . addAll ( CMSUtils . getCertificatesFromStore ( certStore ) ) ; crls . addAll ( CMSUtils . getCRLsFromStore ( certStore ) ) ; }
54733	public boolean equals ( Object o ) { if ( ( o == _NULL ) || ! ( o instanceof SamplePrincipal ) ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } SamplePrincipal that = ( SamplePrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
54735	public static boolean lockdownMode ( ) { return directoryServer . lockdownMode ; }
54750	public void write ( byte [ ] b ) { checkLengthBeforeWrite ( b . length ) ; System . arraycopy ( b , _NUM , headerBuffer , pos , b . length ) ; pos = pos + b . length ; }
54757	public static void main ( String [ ] args ) { int result = stopDS ( args , System . out , System . err ) ; if ( result != LDAPResultCode . SUCCESS ) { System . exit ( filterExitCode ( result ) ) ; } }
54769	public void error ( String msg , Throwable t ) { getDebugServiceInstance ( ) . error ( msg , t ) ; }
54781	public void insertUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { handleInsert ( changes . getOffset ( ) , changes . getLength ( ) ) ; super . insertUpdate ( changes , a , f ) ; }
54787	public void message ( String msg ) { getDebugServiceInstance ( ) . message ( msg , _NULL ) ; }
54791	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
54798	@ Deprecated public static boolean allowAttributeNameExceptions ( ) { return directoryServer . allowAttributeNameExceptions ; }
54801	public SampleModel createSubsetSampleModel ( int bands [ ] ) { if ( bands != _NULL ) { if ( bands . length != _NUM ) throw new RasterFormatException ( _CHAR MultiPixelPackedSampleModel has _CHAR + _CHAR only one band . '' ) ; } SampleModel sm = createCompatibleSampleModel ( width , height ) ; return sm ; }
54803	public static Service create ( java . net . URL wsdlDocumentLocation , QName serviceName ) { return new Service ( wsdlDocumentLocation , serviceName ) ; }
54826	public void checkPermissionToDestroySession ( final Session requester , final SessionID sessionId ) throws SessionException { if ( ! hasPermissionToDestroySession ( requester , sessionId ) ) { throw new SessionException ( SessionBundle . rbName , _CHAR noPrivilege _CHAR , _NULL ) ; } }
54840	public void execute ( TransformerImpl transformer ) throws TransformerException { if ( _NULL != m_attributeSetsNames ) { applyAttrSets ( transformer , getStylesheetRoot ( ) , m_attributeSetsNames ) ; } }
54863	public AMSearchResults searchFilteredRoles ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( FILTERED_ROLE ) , getSearchFilter ( AMObject . FILTERED_ROLE ) , wildcard , avPairs , searchControl ) ; }
54872	public long checkValidValue ( long value , TemporalField field ) { if ( isValidValue ( value ) == _BOOL ) { throw new DateTimeException ( genInvalidFieldMessage ( field , value ) ) ; } return value ; }
54874	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiToolBarUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiToolBarUI ) mui ) . uis , a ) ; }
54877	public static boolean isSigningOptional ( ) { return signingOptional ; }
54879	@ Deprecated public static Player [ ] _INVALID_getOnlinePlayers ( ) { return server . _INVALID_getOnlinePlayers ( ) ; }
54884	public boolean isRadio ( ) { return getFieldFlag ( FF_RADIO ) ; }
54891	public void flush ( ) throws java . io . IOException { flushBuffer ( ) ; m_os . flush ( ) ; }
54895	public void addRowSetListener ( RowSetListener listener ) { listeners . add ( listener ) ; }
54905	public void appendTextChild ( String str ) { }
54908	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
54913	void logSearchResultEntry ( SearchOperation searchOperation , SearchResultEntry searchEntry ) { }
54914	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; String key = preference . getKey ( ) ; Object value = Pref . getInstance ( preference . getContext ( ) ) . getValue ( key ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , value ) ; }
54926	public void replaceResponseProvider ( String responseProviderName , ResponseProvider responseProvider ) throws NameNotFoundException { if ( ! providers . containsKey ( responseProviderName ) ) { String [ ] objs = { responseProviderName } ; throw ( new NameNotFoundException ( ResBundleUtils . rbName , _CHAR name_not_present _CHAR , objs , responseProviderName , PolicyException . RESPONSE_PROVIDER_COLLECTION ) ) ; } providers . put ( responseProviderName , responseProvider ) ; }
54942	public BindOperation processSASLBind ( DN bindDN , String saslMechanism , ByteString saslCredentials ) { return processSASLBind ( bindDN , saslMechanism , saslCredentials , _NULL ) ; }
54968	public boolean equals ( Object object ) { return ( super . equals ( object ) && object instanceof OutputDeviceAssigned ) ; }
54976	public void startPrefixMapping ( String prefix , String uri ) throws org . xml . sax . SAXException { m_prefixMappings . addElement ( prefix ) ; m_prefixMappings . addElement ( uri ) ; }
54989	public static void registerFont ( String path ) { registerFont ( path , _NULL ) ; }
54993	public void close ( ) throws java . io . IOException { m_os . close ( ) ; }
55003	MigrationReport dryRunPolicyUpgrade ( Privilege policy ) throws EntitlementException , UpgradeException { MigrationReport migrationReport = new MigrationReport ( policy . getName ( ) ) ; migrateSubjectConditions ( policy , migrationReport ) ; migrateEnvironmentConditions ( policy , migrationReport ) ; return migrationReport ; }
55009	protected void doClick ( MenuSelectionManager msm ) { if ( ! isInternalFrameSystemMenu ( ) ) { BasicLookAndFeel . playSound ( menuItem , getPropertyPrefix ( ) + _CHAR . commandSound _CHAR ) ; } if ( msm == _NULL ) { msm = MenuSelectionManager . defaultManager ( ) ; } msm . clearSelectedPath ( ) ; menuItem . doClick ( _NUM ) ; }
55025	protected void doHead ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { if ( DispatcherType . INCLUDE . equals ( req . getDispatcherType ( ) ) ) { doGet ( req , resp ) ; } else { NoBodyResponse response = new NoBodyResponse ( resp ) ; doGet ( req , response ) ; response . setContentLength ( ) ; } }
55038	public Period withMonths ( int months ) { if ( months == this . months ) { return this ; } return create ( years , months , days ) ; }
55042	protected void minimizeFrame ( JInternalFrame f ) { if ( ! f . isIcon ( ) ) { BasicLookAndFeel . playSound ( frame , _CHAR InternalFrame . restoreDownSound _CHAR ) ; } getDesktopManager ( ) . minimizeFrame ( f ) ; }
55046	public boolean isContextInsensitive ( ) { return _NULL != m_simpleString ; }
55048	private void writeObject ( ObjectOutputStream out ) throws IOException { if ( diff == _NULL ) { out . writeBoolean ( _BOOL ) ; } else { out . writeBoolean ( _BOOL ) ; out . writeUTF ( diff ) ; } }
55053	public void reset ( ) { currentContext = new Context2 ( _NULL ) ; currentContext . declarePrefix ( _CHAR xml _CHAR , XMLNS ) ; }
55060	public void whitespaceChars ( int low , int hi ) { if ( low < _NUM ) low = _NUM ; if ( hi >= ctype . length ) hi = ctype . length - _NUM ; while ( low <= hi ) ctype [ low ++ ] = CT_WHITESPACE ; }
55092	public static String quote ( int i ) { return quote ( Integer . toString ( i ) ) ; }
55099	public void registerAttributeType ( String name , Class < ? extends ResourceAttribute > type ) { register ( name , attributes , type ) ; }
55103	public boolean isLeadAnchorNotificationEnabled ( ) { return leadAnchorNotificationEnabled ; }
55112	public void addCdataSectionElements ( String URI_and_localNames ) { if ( URI_and_localNames != _NULL ) initCdataElems ( URI_and_localNames ) ; if ( m_StringOfCDATASections == _NULL ) m_StringOfCDATASections = URI_and_localNames ; else m_StringOfCDATASections += ( _CHAR _CHAR + URI_and_localNames ) ; }
55145	protected String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
55158	public void warning ( TransformerException exception ) throws TransformerException { PrintWriter pw = getErrorWriter ( ) ; printLocation ( pw , exception ) ; pw . println ( exception . getMessage ( ) ) ; }
55175	public void continuousQuery ( ContinuousQueryListener listener , TokenFilter filter ) throws CoreTokenException { dispatcher . continuousQuery ( listener , filter ) ; }
55178	@ Override public boolean equals ( final Object o ) { if ( this == o ) { return _BOOL ; } else if ( o instanceof ByteSequence ) { final ByteSequence other = ( ByteSequence ) o ; return other . equals ( buffer , _NUM , length ) ; } else { return _BOOL ; } }
55185	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
55191	public void cancel ( ) { streamAllocation . cancel ( ) ; }
55196	public static byte [ ] toByteArray ( Reader input , String encoding ) throws IOException { return toByteArray ( input , Charsets . toCharset ( encoding ) ) ; }
55203	protected boolean isDataFlavorSupported ( DataFlavor df ) { return getCurrentDataFlavorsAsList ( ) . contains ( df ) ; }
55206	public static int growSize ( int currentSize ) { return currentSize <= _NUM ? _NUM : currentSize * _NUM ; }
55213	private static void deleteFrom ( int deleteAt , int [ ] starts , int numStarts ) { while ( starts [ -- numStarts ] > deleteAt ) { starts [ numStarts ] -= _NUM ; } }
55215	private static HashSet < Object > cloneIssuerNames ( Collection < Object > names ) { try { return cloneAndCheckIssuerNames ( names ) ; } catch ( IOException ioe ) { throw new RuntimeException ( ioe ) ; } }
55221	public void schedule ( TimerTask task , Date firstTime , long period ) { if ( period <= _NUM ) throw new IllegalArgumentException ( _CHAR Non - positive period . '' ) ; sched ( task , firstTime . getTime ( ) , - period ) ; }
55233	public boolean isAbsolute ( ) { return scheme != _NULL ; }
55236	public void append ( byte [ ] src ) { append ( src , _NUM , src . length ) ; }
55242	public final int _exptype ( int identity ) { return m_exptype . elementAt ( identity ) ; }
55244	public final short readShort ( ) throws IOException { readFully ( scratch , _NUM , SizeOf . SHORT ) ; return Memory . peekShort ( scratch , _NUM , ByteOrder . BIG_ENDIAN ) ; }
55283	public void countDown ( ) { sync . releaseShared ( _NUM ) ; }
55288	public void reset ( ) { npoints = _NUM ; bounds = _NULL ; }
55289	private void appendOutputLine ( String msg ) { appendErrorLine ( msg ) ; }
55292	public synchronized void requestPreviewFrame ( Handler handler , int message ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; theCamera . getCamera ( ) . setOneShotPreviewCallback ( previewCallback ) ; } }
55294	public void open ( File file ) throws IOException { checkAWTPermission ( ) ; checkExec ( ) ; checkActionSupport ( Action . OPEN ) ; checkFileValidation ( file ) ; peer . open ( file ) ; }
55301	public boolean isPropertyPattern ( ) { return _property_list_pattern || _property_value_pattern ; }
55308	protected boolean flipEastAndWestAtEnds ( int position , Position . Bias bias ) { Document doc = getDocument ( ) ; position = getStartOffset ( ) ; return ! AbstractDocument . isLeftToRight ( doc , position , position + _NUM ) ; }
55314	public void error ( SAXParseException exception ) throws SAXException { throw exception ; }
55316	public final char readChar ( ) throws IOException { int ch1 = in . read ( ) ; int ch2 = in . read ( ) ; if ( ( ch1 | ch2 ) < _NUM ) throw new EOFException ( ) ; return ( char ) ( ( ch1 << _NUM ) + ( ch2 << _NUM ) ) ; }
55317	protected void configure ( ) { if ( configured ) { return ; } log = LogFactory . getLog ( _CHAR org . apache . tomcat . util . digester . Digester _CHAR ) ; saxLog = LogFactory . getLog ( _CHAR org . apache . tomcat . util . digester . Digester . sax _CHAR ) ; configured = _BOOL ; }
55322	private void assertBlockedLongerThanTimeout ( long startTime , long endTime , int TIMEOUT ) { assertTrue ( endTime - startTime >= TIMEOUT ) ; }
55326	public static int copy ( InputStream input , OutputStream output ) throws IOException { long count = copyLarge ( input , output ) ; if ( count > Integer . MAX_VALUE ) { return - _NUM ; } return ( int ) count ; }
55345	public static Component createVerticalStrut ( int height ) { return new Filler ( new Dimension ( _NUM , height ) , new Dimension ( _NUM , height ) , new Dimension ( Short . MAX_VALUE , height ) ) ; }
55350	public final void writeShort ( int v ) throws IOException { out . write ( ( v >> > _NUM ) & _NUM ) ; out . write ( ( v >> > _NUM ) & _NUM ) ; incCount ( _NUM ) ; }
55378	public final boolean isInfoEnabled ( ) { return isLevelEnabled ( SimpleLog . LOG_LEVEL_INFO ) ; }
55381	private void processWebInfLib ( ) { WebResource [ ] possibleJars = listResources ( _CHAR / WEB - INF / lib _CHAR , _BOOL ) ; for ( WebResource possibleJar : possibleJars ) { if ( possibleJar . isFile ( ) && possibleJar . getName ( ) . endsWith ( _CHAR . jar _CHAR ) ) { createWebResourceSet ( ResourceSetType . CLASSES_JAR , _CHAR / WEB - INF / classes _CHAR , possibleJar . getURL ( ) , _CHAR / _CHAR ) ; } } }
55386	public char next ( ) { pos += _NUM ; int end = offset + count ; if ( pos >= end ) { pos = end ; return DONE ; } return current ( ) ; }
55414	public static String escape ( String s ) { return JSONValue . escape ( s ) ; }
55417	public boolean isEmpty ( ) { return fields . size ( ) <= _NUM ; }
55420	public boolean endsWith ( List < Rdn > rdns ) { if ( rdns == _NULL ) { return _BOOL ; } int len1 = this . rdns . size ( ) ; int len2 = rdns . size ( ) ; return ( len1 >= len2 && doesListMatch ( len1 - len2 , len1 , rdns ) ) ; }
55421	@ Override public void initializeExtendedOperationHandler ( PasswordPolicyStateExtendedOperationHandlerCfg config ) throws ConfigException , InitializationException { userFilter = SearchFilter . objectClassPresent ( ) ; requestAttributes = newLinkedHashSet ( _CHAR * _CHAR , _CHAR + _CHAR ) ; DirectoryServer . registerSupportedExtension ( OID_PASSWORD_POLICY_STATE_EXTOP , this ) ; }
55437	public void processListenerEvent ( String name ) { synchronized ( jaasConfig ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR pLE , remove config _CHAR + name ) ; } jaasConfig . remove ( name ) ; } }
55441	public synchronized void addConsumer ( ImageConsumer ic ) { if ( proxies == _NULL ) { proxies = new Hashtable ( ) ; } if ( ! proxies . containsKey ( ic ) ) { ImageFilter imgf = filter . getFilterInstance ( ic ) ; proxies . put ( ic , imgf ) ; src . addConsumer ( imgf ) ; } }
55447	public static void initializeCache ( String name , int defaultMaxCacheSize ) { initializeCache ( name , defaultMaxCacheSize , maxLifetime ) ; }
55448	@ Override public void rename ( Name oldName , Name newName ) throws NamingException { getBoundContext ( ) . rename ( parseName ( oldName ) , parseName ( newName ) ) ; }
55450	@ Override public void unbind ( Name name ) throws NamingException { getBoundContext ( ) . unbind ( parseName ( name ) ) ; }
55459	public void appendRemainingName ( Name name ) { if ( name == _NULL ) { return ; } if ( remainingName != _NULL ) { try { remainingName . addAll ( name ) ; } catch ( NamingException e ) { throw new IllegalArgumentException ( e . toString ( ) ) ; } } else { remainingName = ( Name ) ( name . clone ( ) ) ; } }
55465	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiTextUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiTextUI ) mui ) . uis , a ) ; }
55466	protected static EventListener addInternal ( EventListener a , EventListener b ) { if ( a == _NULL ) return b ; if ( b == _NULL ) return a ; return new DnDEventMulticaster ( a , b ) ; }
55469	public void dragEnter ( DragSourceDragEvent dsde ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragEnter ( dsde ) ; } getDragSource ( ) . processDragEnter ( dsde ) ; updateCurrentCursor ( getSourceActions ( ) , dsde . getTargetActions ( ) , ENTER ) ; }
55497	public static int lowestOneBit ( int i ) { return i & - i ; }
55501	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
55507	public Builder removeUnicodeLocaleAttribute ( String attribute ) { try { localeBuilder . removeUnicodeLocaleAttribute ( attribute ) ; } catch ( LocaleSyntaxException e ) { throw new IllformedLocaleException ( e . getMessage ( ) , e . getErrorIndex ( ) ) ; } return this ; }
55528	public void insertUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { super . insertUpdate ( e , a , f ) ; }
55551	public boolean allowsTrailingArguments ( ) { return allowsTrailingArguments ; }
55554	@ Override public synchronized int read ( ) { return pos < count ? buffer . charAt ( pos ++ ) & _NUM : - _NUM ; }
55562	public static boolean isMarkup ( int c ) { return c == _CHAR || c == _CHAR || c == _CHAR ; }
55566	public < T extends DragGestureRecognizer > T createDragGestureRecognizer ( Class < T > recognizerAbstractClass , Component c , int actions , DragGestureListener dgl ) { return Toolkit . getDefaultToolkit ( ) . createDragGestureRecognizer ( recognizerAbstractClass , this , c , actions , dgl ) ; }
55568	public static String serializeToString ( XMPMeta xmp , SerializeOptions options ) throws XMPException { assertImplementation ( xmp ) ; return XMPSerializerHelper . serializeToString ( ( XMPMetaImpl ) xmp , options ) ; }
55569	public int available ( ) throws IOException { ensureOpen ( ) ; if ( entryEOF ) { return _NUM ; } else { return _NUM ; } }
55576	public boolean isStartNow ( ) { boolean isStartNow = _BOOL ; if ( startArg != _NULL && startArg . isPresent ( ) ) { isStartNow = NOW . equals ( startArg . getValue ( ) ) ; } return isStartNow ; }
55582	public boolean hasRaster ( ) { synchronized ( this ) { return ( raster != _NULL ) ; } }
55585	public Response cacheResponse ( ) { return cacheResponse ; }
55587	public void send ( ) throws MessagingException { send ( DirectoryServer . getMailServerPropertySets ( ) ) ; }
55604	public boolean removePage ( PdfPage page ) { checkClosingStatus ( ) ; int pageNum = getPageNumber ( page ) ; return pageNum >= _NUM && removePage ( pageNum ) != _NULL ; }
55610	public boolean contains ( Object o ) { return indexOf ( o ) >= _NUM ; }
55611	public void logModifyDNResponse ( ModifyDNOperation modifyDNOperation ) { }
55624	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiSliderUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiSliderUI ) mui ) . uis , a ) ; }
55635	public MetadataContainer findExtendedContentDescription ( ) { MetadataContainer result = getExtendedContentDescription ( ) ; if ( result == _NULL && getExtendedHeader ( ) != _NULL ) { result = getExtendedHeader ( ) . getExtendedContentDescription ( ) ; } return result ; }
55637	public String encodeMessage ( String function , Object param ) { Object params [ ] = _NULL ; if ( param != _NULL ) { params = new Object [ _NUM ] ; params [ _NUM ] = param ; } return ( encodeMessage ( function , params ) ) ; }
55642	void clearSubjectResultCache ( String tokenIdString ) throws PolicyException { if ( PolicyManager . debug . messageEnabled ( ) ) { PolicyManager . debug . message ( _CHAR Subjects . clearSubjectResultCache ( tokenIdString ) : _CHAR + _CHAR clearing cached subject evaluation result for '' + '' tokenId XXXXX '' ) ; } resultCache . remove ( tokenIdString ) ; }
55643	protected boolean validatePendingAdd ( Object targetChild ) { return _BOOL ; }
55655	public int available ( ) throws IOException { ensureOpen ( ) ; if ( reachEOF ) { return _NUM ; } return _NUM ; }
55658	public static String encodeObject ( java . io . Serializable serializableObject ) throws java . io . IOException { return encodeObject ( serializableObject , NO_OPTIONS ) ; }
55681	public void removeRange ( int fromIndex , int toIndex ) { if ( fromIndex > toIndex ) { throw new IllegalArgumentException ( _CHAR fromIndex must be <= toIndex _CHAR ) ; } for ( int i = toIndex ; i >= fromIndex ; i -- ) { delegate . removeElementAt ( i ) ; } fireIntervalRemoved ( this , fromIndex , toIndex ) ; }
55688	protected void addImpl ( Component child , Object constraints , int index ) { setView ( child ) ; }
55691	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { }
55696	@ Override public void onMapReady ( GoogleMap googleMap ) { mMap = googleMap ; LatLng sydney = new LatLng ( - _NUM , _NUM ) ; mMap . addMarker ( new MarkerOptions ( ) . position ( sydney ) . title ( _CHAR Marker in Sydney _CHAR ) ) ; mMap . moveCamera ( CameraUpdateFactory . newLatLng ( sydney ) ) ; }
55700	public BinaryBitmap crop ( int left , int top , int width , int height ) { LuminanceSource newSource = binarizer . getLuminanceSource ( ) . crop ( left , top , width , height ) ; return new BinaryBitmap ( binarizer . createBinarizer ( newSource ) ) ; }
55704	public static void removeProperties ( XMPMeta xmp , String schemaNS , String propName , boolean doAllProperties , boolean includeAliases ) throws XMPException { XMPUtilsImpl . removeProperties ( xmp , schemaNS , propName , doAllProperties , includeAliases ) ; }
55724	public void documentRelease ( ) { }
55726	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiTreeUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiTreeUI ) mui ) . uis , a ) ; }
55728	@ Override protected JComponent createEditor ( ) { JComponent editor = spinner . getEditor ( ) ; editor . setName ( _CHAR Spinner . editor _CHAR ) ; updateEditorAlignment ( editor ) ; return editor ; }
55729	public void recreate ( EglCore newEglCore ) { if ( mSurface == _NULL ) { throw new RuntimeException ( _CHAR not yet implemented for SurfaceTexture '' ) ; } mEglCore = newEglCore ; createWindowSurface ( mSurface ) ; }
55731	public Object encode ( Object pObject ) throws EncoderException { if ( ! ( pObject instanceof String ) ) { throw new EncoderException ( _CHAR Parameter supplied to Soundex encode is not of type java . lang . String _CHAR ) ; } return soundex ( ( String ) pObject ) ; }
55741	public void addLayoutComponent ( Component component , Object constraints ) { if ( constraints instanceof Constraints ) { putConstraints ( component , ( Constraints ) constraints ) ; } }
55742	public void finer ( Supplier < String > msgSupplier ) { log ( Level . FINER , msgSupplier ) ; }
55745	public void forceTermination ( ) { final Phaser root = this . root ; long s ; while ( ( s = root . state ) >= _NUM ) { if ( UNSAFE . compareAndSwapLong ( root , stateOffset , s , s | TERMINATION_BIT ) ) { releaseWaiters ( _NUM ) ; releaseWaiters ( _NUM ) ; return ; } } }
55747	protected void pushMessage ( byte [ ] data , boolean reconnect , boolean waitForAck ) throws IOException { keepalive ( ) ; if ( reconnect ) closeSocket ( ) ; if ( ! isConnected ( ) ) openSocket ( ) ; soOut . write ( data ) ; soOut . flush ( ) ; if ( waitForAck ) waitForAck ( ) ; SenderState . getSenderState ( getDestination ( ) ) . setReady ( ) ; }
55761	public Operation nextOperation ( TraditionalWorkerThread workerThread ) { return retryNextOperation ( workerThread , _NUM ) ; }
55764	@ Override public boolean equals ( Object obj ) { return ( obj instanceof MethodExpressionImpl && obj . hashCode ( ) == this . hashCode ( ) ) ; }
55775	protected void processItemEvent ( ItemEvent e ) { ItemListener listener = itemListener ; if ( listener != _NULL ) { listener . itemStateChanged ( e ) ; } }
55778	public XMLElement newCollapsedElement ( String name ) throws Exception { return newElement ( name , _NULL , _NULL , _BOOL ) ; }
55793	public Object clone ( ) { DefaultMutableTreeNode newNode ; try { newNode = ( DefaultMutableTreeNode ) super . clone ( ) ; newNode . children = _NULL ; newNode . parent = _NULL ; } catch ( CloneNotSupportedException e ) { throw new Error ( e . toString ( ) ) ; } return newNode ; }
55802	private static boolean isNameChar ( char ch ) { return ( ch <= _NUM && xmlNameChars [ ch ] ) || isNameStartChar ( ch ) || ( ch >= _NUM && ch <= _NUM ) || ( ch >= _NUM && ch <= _NUM ) ; }
55811	public Set < String > keySet ( ) { if ( myNamesSet == _NULL ) { myNamesSet = Collections . unmodifiableSet ( nameToDescription . keySet ( ) ) ; } return myNamesSet ; }
55813	public static ByteOrder nativeOrder ( ) { return Bits . byteOrder ( ) ; }
55815	public AMSearchResults searchDynamicGroups ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { return searchObjects ( AMNamingAttrManager . getNamingAttr ( GROUP ) , getSearchFilter ( AMObject . DYNAMIC_GROUP ) , wildcard , avPairs , searchControl ) ; }
55816	public Name addAll ( int posn , Name n ) throws InvalidNameException { if ( n instanceof CompoundName ) { impl . addAll ( posn , n . getAll ( ) ) ; return this ; } else { throw new InvalidNameException ( _CHAR Not a compound name : _CHAR + n . toString ( ) ) ; } }
55820	public Enumeration depthFirstEnumeration ( ) { return postorderEnumeration ( ) ; }
55826	protected boolean updateChildren ( DocumentEvent . ElementChange ec , DocumentEvent e , ViewFactory f ) { return _BOOL ; }
55831	public void info ( Supplier < String > msgSupplier ) { log ( Level . INFO , msgSupplier ) ; }
55843	public synchronized void addObserver ( Observer o ) { if ( o == _NULL ) throw new NullPointerException ( ) ; if ( ! obs . contains ( o ) ) { obs . addElement ( o ) ; } }
55855	public Name add ( int posn , String comp ) throws InvalidNameException { impl . add ( posn , comp ) ; return this ; }
55892	private static boolean isURLEncoded ( String s ) { boolean urlEncoded = _BOOL ; if ( s != _NULL ) { if ( ( s . indexOf ( _CHAR % _CHAR ) != - _NUM ) || ( s . indexOf ( _CHAR + _CHAR ) != - _NUM ) ) { urlEncoded = _BOOL ; } } return urlEncoded ; }
55897	public void paint ( Graphics g , Shape a ) { Rectangle r = ( Rectangle ) a ; g . clipRect ( r . x , r . y , r . width , r . height ) ; super . paint ( g , a ) ; }
55902	protected boolean isTokenChar ( char ch ) { if ( Character . isLetterOrDigit ( ch ) ) return _BOOL ; if ( Character . isISOControl ( ch ) ) return _BOOL ; if ( isHttpSeparator ( ch ) ) return _BOOL ; return _BOOL ; }
55911	public ArrayList < ShapeTile > offset_shapes ( int p_half_width ) { return offset_shapes ( p_half_width , _NUM , plaline_len ( - _NUM ) ) ; }
55917	private void createAndRegisterRemainingWorkflows ( ) throws ConfigException { try { createAndRegisterWorkflows ( getConfigurationBackend ( ) ) ; createAndRegisterWorkflows ( rootDSEBackend ) ; } catch ( DirectoryException de ) { throw new ConfigException ( de . getMessageObject ( ) ) ; } }
55925	public void startEditingAtPath ( TreePath path ) { TreeUI tree = getUI ( ) ; if ( tree != _NULL ) tree . startEditingAtPath ( this , path ) ; }
55933	protected ItemListener createItemListener ( ) { return _NULL ; }
55936	protected boolean isRootPaneCheckingEnabled ( ) { return rootPaneCheckingEnabled ; }
55940	public void reset ( ) { contexts = new Context [ _NUM ] ; namespaceDeclUris = _BOOL ; contextPos = _NUM ; contexts [ contextPos ] = currentContext = new Context ( ) ; currentContext . declarePrefix ( _CHAR xml _CHAR , XMLNS ) ; }
55948	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { characters ( ch , start , length ) ; }
55968	public static boolean isWritable ( Path path ) { return isAccessible ( path , AccessMode . WRITE ) ; }
55983	public void skippedEntity ( String name ) throws SAXException { }
55984	public boolean equals ( Object anObject ) { return m_str . equals ( anObject ) ; }
56002	public int intValue ( ) { return ( int ) longValue ; }
56007	private void updatePacketRecvAddress ( DatagramPacket packet ) { packet . setAddress ( connectedAddress ) ; packet . setPort ( connectedPort ) ; }
56015	public static int showConfirmDialog ( Component parentComponent , Object message , String title , int optionType , int messageType , Icon icon ) throws HeadlessException { return showOptionDialog ( parentComponent , message , title , optionType , messageType , icon , _NULL , _NULL ) ; }
56020	public static void writeAttribue ( final UIComponent component , final String sourceKey , final String targetKey , final Object defaultValue ) throws IOException { final Object value = JKJsfUtil . getAttribute ( component , sourceKey , defaultValue ) ; JKJsfUtil . context ( ) . getResponseWriter ( ) . writeAttribute ( targetKey == _NULL ? sourceKey : targetKey , value , _NULL ) ; }
56026	public synchronized long size ( ) { return size ; }
56030	public boolean validateAttributes ( Map attributeSet , String orgName ) throws SMSException { SMSEntry . validateToken ( ssm . getSSOToken ( ) ) ; return ( ss . validateAttributes ( ssm . getSSOToken ( ) , attributeSet , _BOOL , orgName ) ) ; }
56031	private int calculatePosition ( int spot , int width ) { if ( spot < BORDER_DRAG_THICKNESS ) { return _NUM ; } if ( spot < CORNER_DRAG_WIDTH ) { return _NUM ; } if ( spot >= ( width - BORDER_DRAG_THICKNESS ) ) { return _NUM ; } if ( spot >= ( width - CORNER_DRAG_WIDTH ) ) { return _NUM ; } return _NUM ; }
56039	public void printStackTrace ( ) { System . err . println ( fetchStackTrace ( ) ) ; }
56051	public ByteStringBuilder trimToSize ( ) { if ( buffer . length > length ) { final byte [ ] newBuffer = new byte [ length ] ; System . arraycopy ( buffer , _NUM , newBuffer , _NUM , length ) ; buffer = newBuffer ; } return this ; }
56061	public boolean equals ( Object obj ) { if ( ( obj != _NULL ) && ( obj instanceof File ) ) { return compareTo ( ( File ) obj ) == _NUM ; } return _BOOL ; }
56062	@ Override public boolean isEnabled ( int position ) { return position < data . size ( ) ; }
56080	public void putConstraint ( String e1 , Component c1 , Spring s , String e2 , Component c2 ) { putConstraint ( e1 , c1 , Spring . sum ( s , getConstraint ( e2 , c2 ) ) ) ; }
56084	public boolean isSameNode ( Node other ) { return this == other ; }
56090	public int read ( long pos ) throws IOException { if ( pos >= length ) { return - _NUM ; } byte [ ] buf = getCacheBlock ( pos / BUFFER_LENGTH ) ; if ( buf == _NULL ) { return - _NUM ; } return buf [ ( int ) ( pos % BUFFER_LENGTH ) ] & _NUM ; }
56097	public void _write ( org . omg . CORBA . portable . OutputStream out ) { org . omg . CORBA . ServiceInformationHelper . write ( out , value ) ; }
56099	public synchronized void ensureTestDocussandraRunning ( ) throws Exception { ensureTestDocussandraRunning ( _BOOL ) ; }
56100	public Set keySet ( ) { if ( keySet == _NULL ) keySet = new SynchronizedSet ( new KeySet ( ) , this ) ; return keySet ; }
56109	static Object find ( String factoryId , String fallbackClassName ) throws SOAPException { return find ( factoryId , fallbackClassName , _BOOL ) ; }
56111	public boolean hasLrParam ( ) { return uriParms . getNameValue ( LR ) != _NULL ; }
56113	public void dragExit ( DragSourceEvent dse ) { }
56115	public void scheduleAtFixedRate ( TimerTask task , long delay , long period ) { if ( delay < _NUM ) throw new IllegalArgumentException ( _CHAR Negative delay . '' ) ; if ( period <= _NUM ) throw new IllegalArgumentException ( _CHAR Non - positive period . '' ) ; sched ( task , System . currentTimeMillis ( ) + delay , period ) ; }
56120	public static javax . xml . namespace . QName parseQName ( String lexicalXSDQName , NamespaceContext nsc ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseQName ( lexicalXSDQName , nsc ) ; }
56123	public PermissionCollection newPermissionCollection ( ) { return new KrbServicePermissionCollection ( ) ; }
56134	@ Override public NamingEnumeration < Binding > listBindings ( Name name ) throws NamingException { if ( log . isDebugEnabled ( ) ) { log . debug ( sm . getString ( _CHAR selectorContext . methodUsingName _CHAR , _CHAR listBindings _CHAR , name ) ) ; } return getBoundContext ( ) . listBindings ( parseName ( name ) ) ; }
56137	@ Overridden boolean notUncommon ( CraftMetaItem meta ) { return _BOOL ; }
56142	void addUnstarted ( ) { synchronized ( this ) { if ( destroyed ) { throw new IllegalThreadStateException ( ) ; } nUnstartedThreads ++ ; } }
56148	protected boolean isToggleEvent ( MouseEvent event ) { if ( ! SwingUtilities . isLeftMouseButton ( event ) ) { return _BOOL ; } int clickCount = tree . getToggleClickCount ( ) ; if ( clickCount <= _NUM ) { return _BOOL ; } return ( ( event . getClickCount ( ) % clickCount ) == _NUM ) ; }
56156	public void displayFieldInvalid ( FieldName fieldName , boolean invalid ) { getDialog ( ) . displayFieldInvalid ( fieldName , invalid ) ; }
56164	public void removeAllElements ( ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; super . removeAllElements ( ) ; }
56201	protected String paramString ( ) { return super . paramString ( ) ; }
56202	protected final void openSessionForPublish ( String applicationId , List < String > permissions ) { openSessionForPublish ( applicationId , permissions , SessionLoginBehavior . SSO_WITH_FALLBACK , Session . DEFAULT_AUTHORIZE_ACTIVITY_CODE ) ; }
56206	protected void childJustRemovedHook ( Object child , BCSChild bcsc ) { }
56207	public Node item ( int index ) { return _NULL ; }
56222	private void flushMyWriter ( ) { if ( m_writer != _NULL ) { try { m_writer . flush ( ) ; } catch ( IOException ioe ) { } } }
56224	void finished ( ) { request = _NULL ; }
56243	public static String toString ( InputStream input ) throws IOException { return toString ( input , Charset . defaultCharset ( ) ) ; }
56244	protected void childJustAddedHook ( Object child , BCSChild bcsc ) { }
56248	public Reflect call ( String name ) throws ReflectException { return call ( name , new Object [ _NUM ] ) ; }
56259	public void logp ( Level level , String sourceClass , String sourceMethod , String msg ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; lr . setSourceClassName ( sourceClass ) ; lr . setSourceMethodName ( sourceMethod ) ; doLog ( lr ) ; }
56263	protected Component addSingletonComponent ( Component oldC , Component newC ) { if ( ( oldC != _NULL ) && ( oldC != newC ) ) { oldC . getParent ( ) . remove ( oldC ) ; } return newC ; }
56268	public boolean authenticate ( String orgName , Callback [ ] credentials ) { return authenticate ( orgName , credentials , _NULL ) ; }
56274	public synchronized void write ( byte b [ ] , int off , int len ) throws IOException { out . write ( b , off , len ) ; incCount ( len ) ; }
56281	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof JDBCPrincipal ) ) { return _BOOL ; } JDBCPrincipal that = ( JDBCPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
56286	static < T > PromiseHandle < T > deferCall ( Consumer < CallbackHandle < T >> promiseConsumer ) { return new InvokerPromise < > ( promiseConsumer ) ; }
56304	public synchronized void removeActionListener ( ActionListener l ) { if ( l == _NULL ) { return ; } actionListener = AWTEventMulticaster . remove ( actionListener , l ) ; }
56323	private void updateError ( CSN csn ) { try { remotePendingChanges . commit ( csn ) ; } catch ( NoSuchElementException e ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( _CHAR LDAPReplicationDomain . updateError : Unable to find remote _CHAR + _CHAR pending change for CSN % s '' , csn ) ; } } }
56325	private void skipToEndOfLine ( ) { for ( ; pos < in . length ( ) ; pos ++ ) { char c = in . charAt ( pos ) ; if ( c == _CHAR || c == _CHAR ) { pos ++ ; break ; } } }
