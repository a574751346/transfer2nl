25	public static boolean hasMethod ( Class clazz , String methodName , Class [ ] paramTypes ) { return ( getMethodIfAvailable ( clazz , methodName , paramTypes ) != _NULL ) ; }
26	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( principals ) ; }
494	public SimpleLocator element2Locator ( Element e ) { if ( ! ( e instanceof ElementImpl ) ) return _NULL ; SimpleLocator l = new SimpleLocator ( ) ; return element2Locator ( e , l ) ? l : _NULL ; }
883	protected MarketCreateCommentQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
926	public void delete ( ) throws IOException { close ( ) ; deleteContents ( directory ) ; }
1207	public static void checkMethodSignature ( List < ExecutableElement > elements ) { for ( ExecutableElement element : elements ) { if ( element . getReturnType ( ) . getKind ( ) != TypeKind . VOID ) { throw new WrongReturnTypeException ( element ) ; } if ( ! element . getThrownTypes ( ) . isEmpty ( ) ) { throw new NoThrowsAllowedException ( element ) ; } } }
1215	public void reset ( ) { }
1362	protected MarketGetAlbumByIdQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
1377	public RealMatrix computeCorrelationMatrix ( final double [ ] [ ] matrix ) { return computeCorrelationMatrix ( new BlockRealMatrix ( matrix ) ) ; }
2048	public void addInterface ( CP ifc ) { addCPItem ( ifc ) ; interfaces . addElement ( ifc ) ; }
2443	public AdsGetAdsTargetingQuery limit ( Integer value ) { return unsafeParam ( _CHAR limit _CHAR , value ) ; }
2498	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < R > JoinObservable < R > when ( Plan < R > p1 , Plan < R > p2 , Plan < R > p3 ) { return from ( JoinPatterns . when ( p1 , p2 , p3 ) ) ; }
2741	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < R > JoinObservable < R > when ( Plan < R > p1 , Plan < R > p2 ) { return from ( JoinPatterns . when ( p1 , p2 ) ) ; }
2804	public void processServerResponse ( int response , ResponseData rawData ) { mLastResponse = response ; }
3144	@ Nullable public static PsiFile asFileSearch ( PsiElement elementToSearch ) { if ( elementToSearch instanceof PsiFile ) { return ( PsiFile ) elementToSearch ; } for ( PsiFileProvider provider : PsiFileProvider . EP_NAME . getExtensions ( ) ) { PsiFile file = provider . asFileSearch ( elementToSearch ) ; if ( file != _NULL ) { return file ; } } return _NULL ; }
3459	public Bundler putParcelableArray ( String key , Parcelable [ ] value ) { bundle . putParcelableArray ( key , value ) ; return this ; }
3553	public static void isNotNull ( Object object ) { isNotNull ( object , _CHAR _CHAR ) ; }
3727	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < R > JoinObservable < R > when ( Plan < R > p1 , Plan < R > p2 , Plan < R > p3 , Plan < R > p4 ) { return from ( JoinPatterns . when ( p1 , p2 , p3 , p4 ) ) ; }
4173	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
4440	@ Override public void render ( SpriteBatch sb ) { }
4541	@ Override public synchronized CompletableFuture < Void > disconnect ( ) { closeFuture = new CompletableFuture < > ( ) ; if ( ! consumers . isEmpty ( ) ) { consumers . forEach ( _NULL ) ; if ( havePendingRead && cursor . cancelPendingReadRequest ( ) ) { havePendingRead = _BOOL ; } } else { closeFuture . complete ( _NULL ) ; } return closeFuture ; }
4684	public static double trainerLevelToMaxPokeLevel ( int trainerLevel ) { return Math . min ( trainerLevel + _NUM . _NUM , _NUM ) ; }
4981	public static boolean updateGradleExperimentalPluginVersionAndNotifyFailure ( @ NotNull Project project , @ NotNull GradleVersion pluginVersion , @ Nullable String gradleVersion , boolean invalidateSyncOnFailure ) { return updateGradlePluginVersionAndNotifyFailure ( project , pluginVersion , gradleVersion , _BOOL , invalidateSyncOnFailure ) ; }
5311	public DistributedLogClientBuilder periodicOwnershipSyncIntervalMs ( long intervalMs ) { DistributedLogClientBuilder newBuilder = newBuilder ( this ) ; newBuilder . _clientConfig . setPeriodicOwnershipSyncIntervalMs ( intervalMs ) ; return newBuilder ; }
5511	public LogSubject equalsNext ( @ Nullable MessageType type , String text ) { return assertRegex ( type , Pattern . quote ( text ) ) ; }
5661	private static boolean hasSelfPermission ( Context context , String permission ) { try { return checkSelfPermission ( context , permission ) == PackageManager . PERMISSION_GRANTED ; } catch ( RuntimeException t ) { return _BOOL ; } }
5687	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( principals ) ; }
5844	public float dot ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NUM returned . '' ) ; return _NUM ; } return x * vec . x + y * vec . y + z * vec . z ; }
5856	public boolean isValidTld ( String tld ) { tld = unicodeToASCII ( tld ) ; if ( allowLocal && isValidLocalTld ( tld ) ) { return _BOOL ; } return isValidInfrastructureTld ( tld ) || isValidGenericTld ( tld ) || isValidCountryCodeTld ( tld ) ; }
5985	public boolean geom_blocking ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR geom - blocking _CHAR ) ; }
6007	protected MarketReportQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
6059	public void put ( byte b [ ] , int off , int len ) throws IOException { buffer . write ( b , off , len ) ; }
6096	public void clearCache ( ) { if ( mMemoryCache != _NULL ) { mMemoryCache . evictAll ( ) ; if ( BuildConfig . DEBUG ) { Log . d ( TAG , _CHAR Memory cache cleared _CHAR ) ; } } }
6254	public void ready ( ) { switch ( state ) { case INITIALIZE : state = READY ; synchronized ( this ) { notifyAll ( ) ; } break ; default : throw new AssertionError ( _CHAR ready is only called when the _CHAR + _CHAR service is in the INITIALIZE _CHAR + _CHAR state _CHAR ) ; } }
6291	public boolean remove ( JsonElement element ) { return elements . remove ( element ) ; }
6349	public void clearCache ( ) { if ( mMemoryCache != _NULL ) { mMemoryCache . evictAll ( ) ; if ( BuildConfig . DEBUG ) { Log . d ( TAG , _CHAR Memory cache cleared _CHAR ) ; } } }
6743	@ Override public void write ( List < byte [ ] > valueList ) throws IOException { if ( isFirstTime ) { init ( ) ; isFirstTime = _BOOL ; } for ( byte [ ] value : valueList ) { oneDictionaryChunkList . add ( ByteBuffer . wrap ( value ) ) ; totalRecordCount ++ ; } }
6788	public WallPostQuery services ( String value ) { return unsafeParam ( _CHAR services _CHAR , value ) ; }
7089	public YamlConfigurationOptions indent ( int value ) { Validate . isTrue ( value >= _NUM , _CHAR Indent must be at least _NUM characters _CHAR ) ; Validate . isTrue ( value <= _NUM , _CHAR Indent can not be greater than _NUM characters _CHAR ) ; this . indent = value ; return this ; }
7592	@ Override public boolean containsVertex ( Set < String > labels ) { Objects . requireNonNull ( labels , _CHAR labels can not be _NULL _CHAR ) ; return this . labels . stream ( ) . anyMatch ( _NULL ) ; }
7632	public int indent ( ) { return indent ; }
7663	public boolean spansMultiplePartitions ( ) { return partitions != _NULL && partitions . isMultiple ( ) ; }
7725	private MetricField convertToSketchEstimateIfNeeded ( MetricField originalSourceMetric ) { if ( originalSourceMetric instanceof SketchAggregation ) { return FieldConverterSupplier . sketchConverter . asSketchEstimate ( ( SketchAggregation ) originalSourceMetric ) ; } return originalSourceMetric ; }
8058	public boolean isUpgraded ( ) { return upgraded ; }
8397	private void blockIfNecessaryUntilCleaned ( ) throws SpaceCleanedException , InterruptedException { if ( _isCleaned ) { if ( Thread . holdsLock ( _cleanedLock ) ) return ; synchronized ( _cleanedLock ) { long CLEAN_TIMEOUT = _NUM * _NUM ; while ( _isCleaned ) { _cleanedLock . wait ( CLEAN_TIMEOUT ) ; if ( _isCleaned ) throw new SpaceCleanedException ( getServiceName ( ) , _CHAR Clean operation timed out after _CHAR + CLEAN_TIMEOUT + _CHAR ms . for space : _CHAR + getServiceName ( ) ) ; } } } }
8559	protected MarketEditCommentQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
8602	public void overrideBackbutton ( boolean override ) { LOG . i ( _CHAR App _CHAR , _CHAR WARNING : Back Button Default Behavior will be overridden . The backbutton event will be fired ! _CHAR ) ; webView . setButtonPlumbedToJs ( KeyEvent . KEYCODE_BACK , override ) ; }
8798	public double covariance ( final double [ ] xArray , final double [ ] yArray ) throws MathIllegalArgumentException { return covariance ( xArray , yArray , _BOOL ) ; }
8814	public static Optional < String > wavefrontValue ( MetricValue mv ) { if ( mv . isInfiniteOrNaN ( ) ) return Optional . empty ( ) ; return mv . value ( ) . map ( _NULL ) ; }
8957	public YamlConfigurationOptions indent ( int value ) { Validate . isTrue ( value >= _NUM , _CHAR Indent must be at least _NUM characters _CHAR ) ; Validate . isTrue ( value <= _NUM , _CHAR Indent can not be greater than _NUM characters _CHAR ) ; this . indent = value ; return this ; }
8965	private synchronized void messageProcessed ( Message msg ) { ClientCnx currentCnx = cnx ( ) ; ClientCnx msgCnx = ( ( MessageImpl ) msg ) . getCnx ( ) ; if ( msgCnx != currentCnx ) { return ; } increaseAvailablePermits ( currentCnx ) ; stats . updateNumMsgsReceived ( msg ) ; }
9115	public Bundler putParcelableArray ( String key , Parcelable [ ] value ) { bundle . putParcelableArray ( key , value ) ; return this ; }
9187	public void delete ( ) throws IOException { close ( ) ; deleteContents ( directory ) ; }
9240	public Builder shadowRetinaUrl ( String shadowRetinaUrl ) { this . shadowRetinaUrl = shadowRetinaUrl ; return this ; }
9327	protected MarketAddQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
9368	public Bundler putSparseParcelableArray ( String key , SparseArray < ? extends Parcelable > value ) { bundle . putSparseParcelableArray ( key , value ) ; return this ; }
9400	public void cleanupTableSetForScan ( String id ) { String path = getPathForScan ( id ) ; DistributedTableSerializer . cleanup ( _curator , path ) ; }
10232	public static boolean isJavaLangObject ( String signature ) { return OBJECT_SIGNATURE . equals ( signature ) ; }
10343	public BigFraction multiply ( final BigInteger bg ) { MathUtils . checkNotNull ( bg ) ; if ( numerator . signum ( ) == _NUM || bg . signum ( ) == _NUM ) { return ZERO ; } return new BigFraction ( bg . multiply ( numerator ) , denominator ) ; }
11001	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
11226	public String toString ( ) { return _CHAR ( _CHAR + x + _CHAR , _CHAR + y + _CHAR , _CHAR + z + _CHAR ) _CHAR ; }
11376	public boolean isComplete ( ) { return complete ; }
11527	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
11564	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( id == _NULL ) { throw new InvalidObjectException ( _CHAR id is _NULL _CHAR ) ; } else { if ( ! hasConsistentConstraints ( ) ) { throw new InvalidObjectException ( _CHAR inconsistent constraints between underlying proxy and invocation handler _CHAR ) ; } } }
11587	public void reset ( ) { timer . start ( _CHAR AudioOutput _CHAR ) ; }
11718	public void exclude ( ) { this . include ( _BOOL ) ; }
11821	public float dot ( Vector2f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NUM returned . '' ) ; return _NUM ; } return x * vec . x + y * vec . y ; }
11982	protected MarketRestoreQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
11984	public void java_lang_Class_setProtectionDomain0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable protdmn = helper . tempField ( _CHAR < java . lang . Class ProtDmn > _CHAR ) ; helper . assign ( protdmn , params [ _NUM ] ) ; }
12592	@ Override public String toString ( ) { return getClass ( ) . getSimpleName ( ) + _CHAR [ Center : _CHAR + center + _CHAR xExtent : _CHAR + xExtent + _CHAR yExtent : _CHAR + yExtent + _CHAR zExtent : _CHAR + zExtent + _CHAR ] _CHAR ; }
12827	public BigDecimal bigDecimalValue ( ) { return new BigDecimal ( numerator ) . divide ( new BigDecimal ( denominator ) ) ; }
13182	public int decrement ( int offset ) { return increment ( - offset ) ; }
13259	@ Override public String toString ( ) { return getClass ( ) . getSimpleName ( ) + _CHAR [ Radius : _CHAR + radius + _CHAR Center : _CHAR + center + _CHAR ] _CHAR ; }
13321	@ Override public void normalize ( ) { if ( isNormalized ( ) ) { return ; } if ( needsSyncChildren ( ) ) { synchronizeChildren ( ) ; } ChildNode kid ; for ( kid = firstChild ; kid != _NULL ; kid = kid . nextSibling ) { kid . normalize ( ) ; } isNormalized ( _BOOL ) ; }
13339	public Solution_ solve ( Solution_ planningProblem ) { return solver . solve ( planningProblem ) ; }
13887	protected RegisterType mergePreRegisterTypeFromPredecessors ( int registerNumber ) { RegisterType mergedRegisterType = _NULL ; for ( AnalyzedInstruction predecessor : predecessors ) { RegisterType predecessorRegisterType = predecessor . postRegisterMap [ registerNumber ] ; assert predecessorRegisterType != _NULL ; mergedRegisterType = predecessorRegisterType . merge ( mergedRegisterType ) ; } return mergedRegisterType ; }
14190	protected Label readLabel ( int offset , Label [ ] labels ) { if ( labels [ offset ] == _NULL ) { labels [ offset ] = new Label ( ) ; } return labels [ offset ] ; }
14339	public static OfflinePageFreeUpSpaceDialog newInstance ( OfflinePageBridge offlinePageBridge , OfflinePageFreeUpSpaceCallback callback ) { assert offlinePageBridge != _NULL ; OfflinePageFreeUpSpaceDialog dialog = new OfflinePageFreeUpSpaceDialog ( ) ; dialog . mOfflinePageBridge = offlinePageBridge ; dialog . mCallback = callback ; return dialog ; }
14443	public boolean geom_blocking ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR geom - blocking _CHAR ) ; }
14798	public static int convertPxToSp ( int pxSize ) { return Math . round ( ( float ) pxSize * getDisplayDensity4Fonts ( ) ) ; }
14863	protected MarketReportCommentQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
15347	protected String deStress ( String phone ) { String retPhone = phone ; if ( isStressed ( phone ) ) { retPhone = phone . substring ( _NUM , phone . length ( ) - _NUM ) ; } return retPhone ; }
15521	public VisualItem addItem ( ) { return getItem ( addRow ( ) ) ; }
15664	public final void startAliveTimer ( ) { ProcessConfiguration processConfiguration = getConfigurationController ( ) . getProcessConfiguration ( ) ; aliveTimer . setInterval ( processConfiguration . getAliveInterval ( ) ) ; }
15679	@ Override public void update ( ) { }
15947	protected MarketEditQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
16156	public ColumnQuery addColumn ( String column ) throws NullPointerException { this . columns . add ( Objects . requireNonNull ( column , _CHAR column is required _CHAR ) ) ; return this ; }
16322	@ Override public boolean equals ( Object obj ) { if ( ! ( obj instanceof FeatureComparator ) ) return _BOOL ; else if ( ( ( FeatureComparator ) obj ) . getFeatureIdx ( ) != this . I ) return _BOOL ; return ( _BOOL ) ; }
16888	public void delete ( ) throws IOException { close ( ) ; IoUtils . deleteContents ( directory ) ; }
16970	protected boolean enabledGlobally ( ) { return _BOOL ; }
17505	public AdsGetAdsLayoutQuery limit ( Integer value ) { return unsafeParam ( _CHAR limit _CHAR , value ) ; }
17548	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
17604	private void validateClaimedTaskHasStarted ( ClaimedTask claimedTask ) { if ( claimedTask . unclaimIfNotStarted ( ) ) { _log . warn ( _CHAR Claimed task has not started since it was scheduled at { } ; unclaiming task : { } _CHAR , claimedTask . getClaimTime ( ) , claimedTask . getTask ( ) ) ; unclaimTask ( claimedTask , _BOOL ) ; } }
17644	public DocumentQuery addColumn ( String document ) throws NullPointerException { this . documents . add ( Objects . requireNonNull ( document , _CHAR document is required _CHAR ) ) ; return this ; }
17742	public void notifyContentLoadingStatus ( ) { currentContentLevel ++ ; if ( currentContentLevel == MAX_CONTENT_LEVEL && iContentLoadListener != _NULL ) { iContentLoadListener . onContentLoaded ( ) ; } }
17785	public int CalcBonusGloryReward ( boolean isWin , boolean isBossKilled ) { int BossKilled = _NUM ; int Win = _NUM ; int Loss = _NUM ; if ( isBossKilled ) { return isWin ? ( Win + BossKilled ) : ( Loss + BossKilled ) ; } else { return isWin ? Win : Loss ; } }
17824	public void focusWithoutAnimation ( ) { mEditText . setHint ( _NULL ) ; mLabel . setVisibility ( View . VISIBLE ) ; mEditText . requestFocus ( ) ; }
18264	public byte [ ] toByteArray ( ) { byte newbuf [ ] = new byte [ _count ] ; System . arraycopy ( _buffer , _NUM , newbuf , _NUM , _count ) ; return newbuf ; }
18272	public int [ ] transform ( final int [ ] f ) { return fht ( f ) ; }
18333	private static void expandNumberAt ( String numberString , int startIndex , WordRelation wordRelation ) { expandNumber ( numberString . substring ( startIndex , numberString . length ( ) ) , wordRelation ) ; }
18383	public void remove ( IObjectInfo < T > oi ) { if ( _unidirectionalList ) throw new RuntimeException ( _CHAR unidirectional - SL can not support remove _CHAR ) ; removeNode ( ( ConcurrentSLObjectInfo ) oi , _BOOL ) ; oi . setSubject ( _NULL ) ; }
18449	public Bundler putSparseParcelableArray ( String key , SparseArray < ? extends Parcelable > value ) { bundle . putSparseParcelableArray ( key , value ) ; return this ; }
18569	protected MarketRestoreCommentQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
18876	protected MarketDeleteCommentQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
19127	public void showTimes ( long overall ) { showTimesShort ( overall ) ; }
19204	protected MarketGetQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
19317	public static String checkNull ( String string1 , String string2 , String string3 ) { if ( string1 != _NULL ) return string1 ; else if ( string2 != _NULL ) return string2 ; else if ( string3 != _NULL ) return string3 ; else return _CHAR _CHAR ; }
19553	private boolean isJsonProcessingException ( Exception e ) { return e instanceof JsonProcessingException && ! ( e instanceof JsonParseException && e . getMessage ( ) != _NULL && e . getMessage ( ) . startsWith ( _CHAR Unexpected end - of - input _CHAR ) ) ; }
19583	protected boolean expect ( TokenKind kind , boolean alwaysConsume ) { return expect ( kind , String . format ( _CHAR _CHAR expected _CHAR , kind ) , alwaysConsume ) ; }
19826	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
19913	public void java_lang_SecurityManager_getClassContext ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getLeastArrayObject ( ) ) ; }
20078	public void establishRelation ( AtomicQuery aq ) { Atomic aqAtom = aq . getAtom ( ) ; if ( atom . getTypeId ( ) . equals ( aqAtom . getTypeId ( ) ) ) { if ( atom . isRelation ( ) && aqAtom . getRoleVarTypeMap ( ) . size ( ) > atom . getRoleVarTypeMap ( ) . size ( ) ) aq . addChild ( this ) ; else this . addChild ( aq ) ; } }
20213	public DLSN positionOnTheNextLedger ( ) { return new DLSN ( logSegmentSequenceNo + _NUM , _NUM , _NUM ) ; }
20266	public boolean remove ( E comparable ) { if ( comparable == _NULL ) return _BOOL ; if ( this . root == _NULL ) return _BOOL ; return this . remove ( this . root , comparable ) != _NULL ; }
20272	protected String deStress ( String phone ) { String retPhone = phone ; if ( isStressed ( phone ) ) { retPhone = phone . substring ( _NUM , phone . length ( ) - _NUM ) ; } return retPhone ; }
20398	public void addLookupAttributes ( Entry [ ] attrSets ) { if ( operationsLogger . isLoggable ( Level . FINER ) ) { operationsLogger . entering ( JoinStateManager . class . getName ( ) , _CHAR addLookupAttributes _CHAR ) ; } mgr . addAttributes ( attrSets , _BOOL ) ; update ( ) ; if ( operationsLogger . isLoggable ( Level . FINER ) ) { operationsLogger . exiting ( JoinStateManager . class . getName ( ) , _CHAR addLookupAttributes _CHAR ) ; } }
20609	public void initialize ( CordovaInterface cordova , CordovaWebView webView ) { }
20837	public boolean isValidTld ( String tld ) { tld = unicodeToASCII ( tld ) ; if ( allowLocal && isValidLocalTld ( tld ) ) { return _BOOL ; } return isValidInfrastructureTld ( tld ) || isValidGenericTld ( tld ) || isValidCountryCodeTld ( tld ) ; }
21870	@ Override public void stop ( ) { if ( running ) { running = _BOOL ; if ( LOGGER . isDebugEnabled ( ) ) { LOGGER . debug ( _CHAR Shutting down CacheListener threads . '' ) ; } notifyUpdateThreadHandler . shutdown ( ) ; statusConfirmationHandler . shutdown ( ) ; } }
21876	public static int convertSpToPx ( int spSize ) { return Math . round ( ( float ) spSize / getDisplayDensity4Fonts ( ) ) ; }
22094	public int indent ( ) { return indent ; }
22297	public Bundler putParcelableArrayList ( String key , ArrayList < ? extends Parcelable > value ) { bundle . putParcelableArrayList ( key , value ) ; return this ; }
22306	public static boolean isAlphabetic ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { char c = s . charAt ( i ) ; if ( ! isLetter ( c ) ) return _BOOL ; } return _BOOL ; }
22444	public boolean contains ( S2Cap other ) { if ( isFull ( ) || other . isEmpty ( ) ) { return _BOOL ; } return angle ( ) . radians ( ) >= axis . angle ( other . axis ) + other . angle ( ) . radians ( ) ; }
22542	public static < R > JoinObservable < R > when ( Iterable < ? extends Plan < R >> plans ) { if ( plans == _NULL ) { throw new NullPointerException ( _CHAR plans _CHAR ) ; } return from ( JoinPatterns . when ( plans ) ) ; }
22603	public synchronized void reset ( ) { }
22605	public void delete ( ) throws IOException { close ( ) ; deleteContents ( directory ) ; }
22970	public synchronized void reset ( ) { timer . start ( _CHAR speakableOut _CHAR ) ; }
23012	protected boolean expect ( TokenKind kind , String message , boolean alwaysConsume ) { TokenKind current = currentToken ( ) ; if ( current == kind || alwaysConsume ) { builder . advanceLexer ( ) ; } if ( current != kind ) { builder . error ( message ) ; return _BOOL ; } return _BOOL ; }
23112	public void clearCache ( ) { if ( mMemoryCache != _NULL ) { mMemoryCache . evictAll ( ) ; if ( BuildConfig . DEBUG ) { Log . d ( TAG , _CHAR Memory cache cleared _CHAR ) ; } } }
23175	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
23246	public static ItemStack writeQualityTag ( ItemStack stack , Quality quality ) { if ( stack == _NULL ) return stack ; if ( ! stack . hasTagCompound ( ) ) { stack . setTagCompound ( new NBTTagCompound ( ) ) ; } stack . getTagCompound ( ) . setString ( QUALITY_TAG , quality . getUnlocalizedName ( ) ) ; return stack ; }
23337	@ Override public Output apply ( Input input ) { if ( input == _NULL ) return fn_ . apply ( input ) ; return match_ ( input ) . orElseGet ( _NULL ) . getOutput ( ) ; }
23358	public static < R > JoinObservable < R > when ( Plan < R > ... plans ) { return from ( JoinPatterns . when ( plans ) ) ; }
23590	public void synchronizedWithDatasource ( ) { assertIsMutable ( ) ; this . originalDbValues = Collections . unmodifiableMap ( getAllFields ( ) ) ; this . clearChanged ( ) ; }
23808	public static int convertSpToPx ( int spSize ) { return Math . round ( ( float ) spSize / getDisplayDensity4Fonts ( ) ) ; }
24012	public GroupsSearchQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
24051	public byte [ ] toByteArray ( ) { byte newbuf [ ] = new byte [ _count ] ; System . arraycopy ( _buffer , _NUM , newbuf , _NUM , _count ) ; return newbuf ; }
24229	protected MarketDeleteQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
24296	@ Override public void postEvent ( EventLogEvent event ) { }
24407	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
24972	public static boolean isPrimitiveArray ( Class clazz ) { Assert . notNull ( clazz , _CHAR Class must not be _NULL _CHAR ) ; return ( clazz . isArray ( ) && clazz . getComponentType ( ) . isPrimitive ( ) ) ; }
25166	@ Override public void onMissing ( Detector . Detections < Barcode > detectionResults ) { mOverlay . remove ( mGraphic ) ; }
25432	public static void copy ( InputStream input , Writer output , String encoding ) throws IOException { InputStreamReader in = new InputStreamReader ( input , encoding ) ; copy ( in , output ) ; }
25616	private int determineValidPageNumberFrom ( int userPage ) { if ( userPage <= _NUM ) { return _NUM ; } if ( originalUserPages != _NULL ) { if ( userPage >= originalUserPages . length ) { return originalUserPages . length - _NUM ; } } else { if ( userPage >= documentPageCount ) { return documentPageCount - _NUM ; } } return userPage ; }
25678	public void delete ( ) throws IOException { close ( ) ; deleteContents ( directory ) ; }
26135	public static void inlineSite ( SootMethod inlinee , Stmt toInline , SootMethod container ) { inlineSite ( inlinee , toInline , container , new HashMap ( ) ) ; }
26270	protected SecureAddAppEventQuery activityId ( int value ) { return unsafeParam ( _CHAR activity_id _CHAR , value ) ; }
26491	protected void createMediaPlayerIfNeeded ( ) { if ( mPlayer == _NULL ) { mPlayer = new MediaPlayer ( ) ; mPlayer . setWakeMode ( getApplicationContext ( ) , PowerManager . PARTIAL_WAKE_LOCK ) ; mPlayer . setOnPreparedListener ( this ) ; mPlayer . setOnCompletionListener ( this ) ; mPlayer . setOnErrorListener ( this ) ; } else { mPlayer . reset ( ) ; } }
26521	private static void expandNumberAt ( String numberString , int startIndex , WordRelation wordRelation , Item tokenItem ) { expandNumber ( numberString . substring ( startIndex , numberString . length ( ) ) , wordRelation , tokenItem ) ; }
26641	private void handleFailedSendDataRequest ( SerialMessage originalMessage ) { new SendDataMessageClass ( ) . handleFailedSendDataRequest ( this , originalMessage ) ; }
26643	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
26763	public synchronized void reset ( ) { timer . start ( _CHAR audioOut _CHAR ) ; if ( line != _NULL ) { waitResume ( ) ; if ( isCancelled ( ) && ! isDone ( ) ) { cancelled = _BOOL ; line . start ( ) ; } } }
26848	public void assignBaseObjId ( int baseObjId ) { this . baseObjId = baseObjId ; }
26871	int toplineFrequency ( int time ) { if ( time < startTime || time > endTime ) { throw new RuntimeException ( _CHAR Invalid time _CHAR + time + _CHAR ( startTime _CHAR + startTime + _CHAR , endTime _CHAR + endTime + _CHAR ) _CHAR ) ; } return topStart + ( int ) ( topSlope * ( time - startTime ) ) ; }
27113	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
27386	public String toString ( ) { return _CHAR ( _CHAR + x + _CHAR , _CHAR + y + _CHAR ) _CHAR ; }
27615	public static boolean isConcreteType ( @ NotNull Element element ) { return isConcreteType ( element . asType ( ) ) ; }
28061	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
28133	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
28385	public void anonymize ( ) { for ( int i = theAtts . getLength ( ) - _NUM ; i >= _NUM ; i -- ) { if ( theAtts . getType ( i ) . equals ( _CHAR ID _CHAR ) || theAtts . getQName ( i ) . equals ( _CHAR name _CHAR ) ) { theAtts . removeAttribute ( i ) ; } } }
28745	public int decrement ( int offset ) { return increment ( - offset ) ; }
29105	public Bundler putParcelableArrayList ( String key , ArrayList < ? extends Parcelable > value ) { bundle . putParcelableArrayList ( key , value ) ; return this ; }
29216	public void stop ( ) { run = _BOOL ; }
29276	public synchronized void reset ( ) { }
29352	protected MarketGetQueryWithExtended ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
29394	public QueueReader < MethodOrMethodContext > newListener ( ) { return reachables . reader ( ) ; }
29402	public synchronized void reset ( ) { }
29491	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
29518	public static int convertPxToSp ( int pxSize ) { return Math . round ( ( float ) pxSize * getDisplayDensity4Fonts ( ) ) ; }
29719	public SiteAdminPage createNewPage ( String title , String templateName ) { openCreatePageWindow ( ) ; createPageWindow . createPage ( title , templateName ) ; grid . waitForLoaderNotPresent ( ) ; return this ; }
30002	int baselineFrequency ( int time ) { if ( time < startTime || time > endTime ) { throw new RuntimeException ( _CHAR Invalid time _CHAR + time + _CHAR ( startTime _CHAR + startTime + _CHAR , endTime _CHAR + endTime + _CHAR ) _CHAR ) ; } return baseStart + ( int ) ( baseSlope * ( time - startTime ) ) ; }
30004	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( principals ) ; }
30293	public int CalcBonusAbyssReward ( boolean isWin , boolean isBossKilled ) { int BossKilled = _NUM ; int Win = _NUM ; int Loss = _NUM ; if ( isBossKilled ) { return isWin ? ( Win + BossKilled ) : ( Loss + BossKilled ) ; } else { return isWin ? Win : Loss ; } }
30312	public static String checkEmpty ( String string1 , String string2 , String string3 ) { if ( UtilValidate . isNotEmpty ( string1 ) ) return string1 ; else if ( UtilValidate . isNotEmpty ( string2 ) ) return string2 ; else if ( UtilValidate . isNotEmpty ( string3 ) ) return string3 ; else return _CHAR _CHAR ; }
30603	protected MarketGetCommentsQuery ownerId ( int value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
30713	public void anonymize ( ) { for ( int i = theAtts . getLength ( ) - _NUM ; i >= _NUM ; i -- ) { if ( theAtts . getType ( i ) . equals ( _CHAR ID _CHAR ) || theAtts . getQName ( i ) . equals ( _CHAR name _CHAR ) ) { theAtts . removeAttribute ( i ) ; } } }
30867	public static String exactly ( CharSequence in ) { return eval ( in ) . getExactly ( ) ; }
30963	public Record decode ( byte [ ] input ) { return _NULL ; }
31124	public double averageArea ( ) { return averageArea ( level ) ; }
31568	@ Override public void abort ( ) throws IOException { super . abort ( ) ; }
31708	public void startRTM ( String slackToken ) { RTM rtm = slackDao . startRTM ( slackToken ) ; currentUser = rtm . getUser ( ) ; dmChannels = rtm . getDmChannels ( ) ; webSocketUrl = rtm . getWebSocketUrl ( ) ; }
31823	private static String resolveMapConflicts ( String left , String right ) { if ( ! left . equals ( right ) ) { LOG . error ( _CHAR Two different casing _CHAR { } _CHAR { } _CHAR { } _CHAR_CHAR_CHAR_CHAR_CHAR_CHAR + left ) ; } return left ; }
32021	public static boolean updateGradleExperimentalPluginVersionAndNotifyFailure ( @ NotNull Project project , @ NotNull String pluginVersion , @ Nullable String gradleVersion , boolean invalidateSyncOnFailure ) { return updateGradlePluginVersionAndNotifyFailure ( project , pluginVersion , gradleVersion , _BOOL , invalidateSyncOnFailure ) ; }
32103	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
33051	public byte [ ] toByteArray ( ) { if ( places . length == _NUM ) { byte zero [ ] = new byte [ _NUM ] ; zero [ _NUM ] = ( byte ) _NUM ; return zero ; } else { return ( byte [ ] ) places . clone ( ) ; } }
33061	public int hashCode ( ) { int hashCode = _NUM ; if ( context == _NULL ) return hashCode ; for ( int i = _NUM ; i < context . length ; i ++ ) { if ( context [ i ] != _NULL ) hashCode ^= context [ i ] . hashCode ( ) ; } return hashCode ; }
33401	public void initNodeTest ( int whatToShow , String namespace , String name ) { m_whatToShow = whatToShow ; m_namespace = namespace ; m_name = name ; calcScore ( ) ; }
33402	public StateInteractive left_button_clicked ( PlaPointFloat p_location ) { return this ; }
33477	public boolean canDelete ( DN dn ) { try { return ! dn . equals ( DN . rootDN ( ) ) && ! nonDeletable . contains ( dn ) && isDescendantOfAny ( dn , parentReadOnly ) ; } catch ( Throwable t ) { throw new RuntimeException ( _CHAR Error decoding DNs : _CHAR + t , t ) ; } }
33515	protected Label readLabel ( int offset , Label [ ] labels ) { if ( labels [ offset ] == _NULL ) { labels [ offset ] = new Label ( ) ; } return labels [ offset ] ; }
33532	public void arrangeChildren ( ArrayList < View > list , int itemCount ) { arrangeChildren ( list , itemCount , _BOOL ) ; }
33560	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
33621	public boolean isNewChunk ( ) { return newChunk ; }
33793	public static SimpleBindRequest unmodifiableSimpleBindRequest ( final SimpleBindRequest request ) { if ( request instanceof UnmodifiableSimpleBindRequestImpl ) { return request ; } return new UnmodifiableSimpleBindRequestImpl ( request ) ; }
33844	public static StringArgument encodingArgument ( ) throws ArgumentException { return StringArgument . builder ( _CHAR encoding _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_DESCRIPTION_ENCODING . get ( ) ) . valuePlaceholder ( INFO_ENCODING_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
34046	public void enter ( MetricReference metricReference ) { Thread threadId = Thread . currentThread ( ) ; enter ( threadId , metricReference ) ; }
34364	public void logAbandonResult ( AbandonOperation abandonOperation ) { }
34370	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
34487	public Iterator iterator ( ) { return new PartialOrderIterator ( poNodes . values ( ) . iterator ( ) ) ; }
34578	@ Deprecated protected void editablePropertyChanged ( PropertyChangeEvent e ) { }
34604	static int findDNKeyParent ( ByteSequence dnKey ) { if ( dnKey . length ( ) == _NUM ) { return - _NUM ; } for ( int i = dnKey . length ( ) - _NUM ; i >= _NUM ; i -- ) { if ( positionIsRDNSeparator ( dnKey , i ) ) { return i ; } } return _NUM ; }
34612	public boolean isZero ( ) { return ( this == ZERO ) ; }
34720	public static String forceFrameID22To23 ( String identifier ) { return ID3Frames . forcev22Tov23 . get ( identifier ) ; }
34770	public void updateDefinition ( ICOSDefinition cosDef ) throws UMSException { PersistentObject pObject = ( PersistentObject ) cosDef ; if ( pObject . getGuid ( ) == _NULL ) { String msg = i18n . getString ( IUMSConstants . REPLACE_DEFINITION_NOT_PERSISTENT ) ; throw new UMSException ( msg ) ; } pObject . save ( ) ; }
34827	public boolean containsAll ( Collection < ? > c ) { for ( Object o : c ) if ( ! contains ( o ) ) return _BOOL ; return _BOOL ; }
34878	private String resourceId ( ) { return subSchemaPath . isEmpty ( ) ? _NULL : lastSchemaNodeName ( ) ; }
34883	public static ChangeRecord newChangeRecord ( final String ... ldifLines ) { return LDIFChangeRecordReader . valueOfLDIFChangeRecord ( ldifLines ) ; }
34994	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
34997	@ Override public synchronized int lastIndexOf ( Object object ) { return lastIndexOf ( object , elementCount - _NUM ) ; }
35148	public boolean canTraverseOutsideSubtree ( ) { int n = getPredicateCount ( ) ; for ( int i = _NUM ; i < n ; i ++ ) { if ( getPredicate ( i ) . canTraverseOutsideSubtree ( ) ) return _BOOL ; } return _BOOL ; }
35210	protected final void flushBuffer ( ) throws IOException { if ( bufferSize == _NUM ) return ; flushed = _BOOL ; ensureOpen ( ) ; if ( nextChar == _NUM ) return ; initOut ( ) ; out . write ( cb , _NUM , nextChar ) ; nextChar = _NUM ; }
35389	public W3CEndpointReferenceBuilder referenceParameter ( Element referenceParameter ) { if ( referenceParameter == _NULL ) throw new java . lang . IllegalArgumentException ( _CHAR The referenceParameter can not be _NULL . _CHAR ) ; referenceParameters . add ( referenceParameter ) ; return this ; }
35507	@ NonNull public static Interpolator divide ( Interpolator dividend , float divisor ) { return divide ( dividend , constant ( divisor ) ) ; }
35660	public void addClassResolver ( IClassResolver resolver ) { m_resolvers . addElement ( resolver ) ; }
35761	@ Deprecated public static LogStream log ( String name ) { LogStream stream ; synchronized ( known ) { stream = known . get ( name ) ; if ( stream == _NULL ) { stream = new LogStream ( name , defaultStream ) ; } known . put ( name , stream ) ; } return stream ; }
36025	final void sync ( ) { if ( font == _NULL ) { setPropertiesFromAttributes ( ) ; } }
36077	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
36188	@ Override protected Object createSsoServerIdRepoSvcMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) idrepoSvcGroup = new SsoServerIdRepoSvcImpl ( this , server ) ; else idrepoSvcGroup = new SsoServerIdRepoSvcImpl ( this ) ; return idrepoSvcGroup ; }
36309	public void addRule ( String pattern , Rule rule ) { rule . setDigester ( this ) ; getRules ( ) . add ( pattern , rule ) ; }
36522	public boolean isMutable ( ) { return m_mutable ; }
36698	public UUID toUUID ( ) { ByteString normDN = toNormalizedByteString ( ) ; if ( ! normDN . isEmpty ( ) ) { normDN = normDN . subSequence ( _NUM , normDN . length ( ) ) ; } return UUID . nameUUIDFromBytes ( normDN . toByteArray ( ) ) ; }
37144	@ Override protected Object createSsoServerSessSvcMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) sessSvcGroup = new SsoServerSessSvcImpl ( this , server ) ; else sessSvcGroup = new SsoServerSessSvcImpl ( this ) ; return sessSvcGroup ; }
37325	protected Set < String > handleKeySet ( ) { return lookup . keySet ( ) ; }
37396	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
37517	@ Override protected Object createSsoServerAuthSvcMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) authSvcGroup = new SsoServerAuthSvcImpl ( this , server ) ; else authSvcGroup = new SsoServerAuthSvcImpl ( this ) ; return authSvcGroup ; }
37557	public < O extends CustomBaseObject > List < O > flagLast ( List < O > list ) { if ( list != _NULL && ! list . isEmpty ( ) ) { list . get ( list . size ( ) - _NUM ) . setIsLast ( _BOOL ) ; } return list ; }
37708	public static void doAsPrivilege ( final String methodName , final Filter targetObject ) throws Exception { doAsPrivilege ( methodName , targetObject , _NULL , _NULL ) ; }
38019	public void undoableEditHappened ( UndoableEditEvent e ) { addEdit ( e . getEdit ( ) ) ; }
38556	protected static Long convertDateToBucketingLong ( Date dateToBeConverted ) { if ( dateToBeConverted == _NULL ) { return _NULL ; } return dateToBeConverted . getTime ( ) ; }
39040	protected void adjustRow ( FlowView fv , int rowIndex , int desiredSpan , int x ) { }
39079	@ SuppressWarnings ( _CHAR WeakerAccess _CHAR ) public void updateData ( @ Nullable OrderedRealmCollection < T > data ) { if ( hasAutoUpdates ) { if ( adapterData != _NULL ) { removeListener ( adapterData ) ; } if ( data != _NULL ) { addListener ( data ) ; } } this . adapterData = data ; notifyDataSetChanged ( ) ; }
39087	public void removeAll ( ) { leftComponent = rightComponent = _NULL ; super . removeAll ( ) ; revalidate ( ) ; repaint ( ) ; }
39566	public boolean isVariableBitRate ( ) { return ( Boolean ) content . get ( FIELD_VBR ) ; }
39674	public void initialize ( ) { super . initialize ( ) ; services = new HashMap ( serializable + _NUM ) ; bcsListeners = new ArrayList ( _NUM ) ; }
39955	public static Condition and ( Condition ... conditions ) { return new ANDCondition ( conditions ) ; }
40008	public static DN deregisterAlternateRootBindDN ( DN alternateRootBindDN ) { return directoryServer . alternateRootBindDNs . remove ( alternateRootBindDN ) ; }
40031	public void addAppender ( Appender appender ) { this . logger . addAppender ( appender ) ; }
40076	public void printAttributes ( PrintWriter writer , int indent , Object bean , StoreDescription desc ) throws Exception { printAttributes ( writer , indent , _BOOL , bean , desc ) ; }
40370	public void toBack ( ) { moveToBack ( ) ; }
40380	public static String forceFrameID23To22 ( String identifier ) { return ID3Frames . forcev23Tov22 . get ( identifier ) ; }
40381	public static void registerRotationPolicy ( DN configEntryDN , RotationPolicy < ? > policy ) { Reject . ifNull ( configEntryDN , policy ) ; directoryServer . rotationPolicies . put ( configEntryDN , policy ) ; }
40420	protected Object createCtsConnectionFailureRateMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { ctsConnectionFailureRate = new CtsConnectionFailureRateImpl ( this ) ; return ctsConnectionFailureRate ; }
40844	public synchronized void clearCache ( ) { sdkCache . clear ( ) ; initializeCache ( ) ; }
41076	@ Override protected Object createSsoServerSAML2SvcMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) saml2SvcGroup = new SsoServerSAML2SvcImpl ( this , server ) ; else saml2SvcGroup = new SsoServerSAML2SvcImpl ( this ) ; return saml2SvcGroup ; }
41248	@ Override protected Object createSsoServerTopologyMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) topologyGroup = new SsoServerTopologyImpl ( this , server ) ; else topologyGroup = new SsoServerTopologyImpl ( this ) ; return topologyGroup ; }
41364	public String readLine ( ) throws IOException { synchronized ( lock ) { String l = super . readLine ( skipLF ) ; skipLF = _BOOL ; if ( l != _NULL ) lineNumber ++ ; return l ; } }
41659	private void ensureCapacityHelper ( int minCapacity ) { if ( minCapacity - elementData . length > _NUM ) grow ( minCapacity ) ; }
41795	public boolean contains ( Object o ) { if ( ! ( o instanceof Map . Entry ) ) return _BOOL ; return c . contains ( new UnmodifiableEntry < > ( ( Map . Entry < ? , ? > ) o ) ) ; }
41817	public static XMPDateTime convertToLocalTime ( XMPDateTime dateTime ) { long timeInMillis = dateTime . getCalendar ( ) . getTimeInMillis ( ) ; GregorianCalendar cal = new GregorianCalendar ( ) ; cal . setTimeInMillis ( timeInMillis ) ; return new XMPDateTimeImpl ( cal ) ; }
41834	public Set readAllFederatedProviderID ( String userID ) throws FSAccountMgmtException { if ( SP_PROVIDER_ID != _NULL && SP_PROVIDER_ID . length ( ) != _NUM ) { return readAllFederatedProviderID ( SP_PROVIDER_ID , userID ) ; } else { return readAllFederatedProviderID ( _NULL , userID ) ; } }
41865	public boolean isUpgraded ( ) { return upgraded ; }
41898	private static String escapeHtml ( String rawString ) { StringBuilder buffer = new StringBuilder ( ) ; for ( int i = _NUM ; i < rawString . length ( ) ; i ++ ) { escapeChar ( buffer , rawString . charAt ( i ) ) ; } return buffer . toString ( ) ; }
42053	void flushBuffer ( ) throws IOException { synchronized ( lock ) { ensureOpen ( ) ; if ( nextChar == _NUM ) return ; out . write ( cb , _NUM , nextChar ) ; nextChar = _NUM ; } }
42126	@ Override public int indexOf ( Object object ) { return indexOf ( object , _NUM ) ; }
42246	public boolean isInProgress ( ) { return inProgress ; }
42304	public static String forceFrameID23To24 ( String identifier ) { return ID3Frames . forcev23Tov24 . get ( identifier ) ; }
42381	private boolean has_corner_loopt ( ) { if ( ! is_valid ( ) ) return _BOOL ; PlaPoint first_corner = corner_first ( ) ; for ( int index = _NUM ; index < corner_count ( ) ; ++ index ) { if ( corner ( index ) . equals ( first_corner ) ) continue ; return _BOOL ; } return _BOOL ; }
42532	public synchronized byte toByteArray ( ) [ ] { return Arrays . copyOf ( buf , count ) ; }
42613	public synchronized void addPropertyChangeListener ( PropertyChangeListener listener ) { if ( changeSupport == _NULL ) { changeSupport = new SwingPropertyChangeSupport ( this ) ; } changeSupport . addPropertyChangeListener ( listener ) ; }
42891	public void keyPressed ( KeyEvent e ) { if ( tree != _NULL && isNavigationKey ( e ) ) { prefix = _CHAR _CHAR ; typedString = _CHAR _CHAR ; lastTime = _NUM ; } }
42955	public boolean isAlias ( ) { return hasObjectClassOrAttribute ( OC_ALIAS , ATTR_ALIAS_DN ) ; }
43195	public boolean contains ( LDAPURL url ) { if ( ! isUnreliableEntryListEmpty ) { boolean isInServer = serverHost . equalsIgnoreCase ( url . getHost ( ) ) && serverPort == url . getPort ( ) ; if ( isInServer ) { return unreliableEntryList . contains ( DN . valueOf ( url . getRawBaseDN ( ) ) ) ; } } return _BOOL ; }
43669	public void finish ( ) throws IOException { ensureOpen ( ) ; if ( finished ) { return ; } if ( current != _NULL ) { closeEntry ( ) ; } long off = written ; for ( XEntry xentry : xentries ) writeCEN ( xentry ) ; writeEND ( off , written - off ) ; finished = _BOOL ; }
43692	static IndexOutOfBoundsException throwIndexOutOfBoundsException ( int index , int size ) { throw new IndexOutOfBoundsException ( _CHAR Invalid index _CHAR + index + _CHAR , size is _CHAR + size ) ; }
43738	@ Override public int doFinal ( ByteBuffer inBuffer , ByteBuffer outBuffer ) throws ShortBufferException , IllegalBlockSizeException , BadPaddingException { return cipher . doFinal ( inBuffer , outBuffer ) ; }
44200	protected < T > Handler < AsyncResult < T >> resultHandler ( RoutingContext context ) { return _NULL ; }
44236	void skipRemainingSiblings ( ) { if ( ! stack . isEmpty ( ) ) { stack . peek ( ) . skip ( ) ; } }
44467	public static String toUNIXMode ( FilePermission p ) { StringBuilder buffer = new StringBuilder ( _NUM ) ; toUNIXMode ( buffer , p ) ; return buffer . toString ( ) ; }
44639	public boolean isAccelerated ( ) { return accelerated ; }
44647	public void toFront ( ) { moveToFront ( ) ; }
44797	public void writeBytes ( byte [ ] data , int offset , int len ) throws IOException { _writeBytes ( data , offset , len ) ; }
44822	public static SAXParserProvider saxParserProvider ( int maxSize ) { return new PerThreadSAXParserProvider ( new SafeSAXParserProvider ( ) , maxSize ) ; }
44980	public static void copy ( InputStream input , Writer output , String encoding ) throws IOException { InputStreamReader in = new InputStreamReader ( input , encoding ) ; copy ( in , output ) ; }
45024	protected void removeFromMarkedPosition ( ) { System . arraycopy ( buffer , read_pos , buffer , marked_pos , read_pos_end - read_pos ) ; read_pos_end -= ( read_pos - marked_pos ) ; read_pos = marked_pos ; }
45680	public void delete ( ) throws IOException { cache . delete ( ) ; }
45886	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
46081	public void delete ( ) throws IOException { close ( ) ; fileSystem . deleteContents ( directory ) ; }
46091	public void logSearchResultDone ( SearchOperation searchOperation ) { }
46294	private void notifyAuthDataChanged ( LDAPURL url ) { startRefreshReferralNodes ( rootNode ) ; }
46522	protected TableColumnModel createDefaultColumnModel ( ) { return new DefaultTableColumnModel ( ) ; }
46655	public static TitledBorder createTitledBorder ( Border border , String title , int titleJustification , int titlePosition ) { return new TitledBorder ( border , title , titleJustification , titlePosition ) ; }
46830	public boolean isPrimitiveArray ( ) { return primitiveArray ; }
46908	protected void init ( String owner , MethodNode m ) throws AnalyzerException { }
47067	public static Request processAuthHeader ( Authenticator authenticator , Response response , Proxy proxy ) throws IOException { return response . code ( ) == HTTP_PROXY_AUTH ? authenticator . authenticateProxy ( proxy , response ) : authenticator . authenticate ( proxy , response ) ; }
47196	public boolean isValidDay ( int dayOfMonth ) { return dayOfMonth >= _NUM && dayOfMonth <= lengthOfMonth ( ) ; }
47313	public TokenFilterBuilder withTimeLimit ( Duration timeLimit ) { tokenFilter . setTimeLimit ( timeLimit ) ; return this ; }
47357	boolean validateAttributes ( Map < String , Set < String >> attributeSet , boolean encodePassword ) throws SMSException { return ( validateAttributes ( attributeSet , encodePassword , _NULL ) ) ; }
47830	public void writeRaw ( byte b ) throws IOException { _writeByte ( b ) ; }
47912	public void delete ( ) throws IOException { cache . delete ( ) ; }
48038	public boolean canUndo ( ) { return alive && hasBeenDone ; }
48103	public static StringArgument configFileArgument ( ) throws ArgumentException { return StringArgument . builder ( _CHAR configFile _CHAR ) . shortIdentifier ( _CHAR ) . description ( INFO_DESCRIPTION_CONFIG_FILE . get ( ) ) . hidden ( ) . required ( ) . valuePlaceholder ( INFO_CONFIGFILE_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
48129	synchronized String [ ] [ ] internalZoneStrings ( ) { if ( zoneStrings == _NULL ) { zoneStrings = TimeZoneNames . getZoneStrings ( locale ) ; } return zoneStrings ; }
48402	public boolean stopEditing ( JTree tree ) { if ( editingComponent != _NULL && cellEditor . stopCellEditing ( ) ) { completeEditing ( _BOOL , _BOOL , _BOOL ) ; return _BOOL ; } return _BOOL ; }
48412	public static ArgumentException missingSeparatorInPropertyArgument ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_SEPARATOR_IN_PROPERTY_VALUE . get ( arg ) ; return new ArgumentException ( msg ) ; }
48537	public void changeShape ( Dimension min , Dimension pref , Dimension max ) { setMinimumSize ( min ) ; setPreferredSize ( pref ) ; setMaximumSize ( max ) ; revalidate ( ) ; }
48678	@ Override protected Object createSsoServerFedEntitiesMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) fedEntitiesGroup = new SsoServerFedEntitiesImpl ( this , server ) ; else fedEntitiesGroup = new SsoServerFedEntitiesImpl ( this ) ; return fedEntitiesGroup ; }
49017	private boolean checkInvalidSessionDefaultIdleTime ( ) { long currentTimeInSeconds = MILLISECONDS . toSeconds ( currentTimeMillis ( ) ) ; long timeLeftInSeconds = creationTimeInSeconds + MINUTES . toSeconds ( maxDefaultIdleTimeInMinutes ) - currentTimeInSeconds ; return timeLeftInSeconds < _NUM ; }
49160	public synchronized void clearCache ( ) { idRepoCache . clear ( ) ; initializeCache ( ) ; }
49245	public static ArgumentException missingSeparatorInPropertyModification ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_SEPARATOR_IN_PROPERTY_MOD . get ( arg ) ; return new ArgumentException ( msg ) ; }
49305	@ Override protected Object createSsoServerSvcMgmtSvcMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) svcmgmtSvcGroup = new SsoServerSvcMgmtSvcImpl ( this , server ) ; else svcmgmtSvcGroup = new SsoServerSvcMgmtSvcImpl ( this ) ; return svcmgmtSvcGroup ; }
49430	@ Override protected Object createSsoServerWSSAgentsMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) wssAgentsGroup = new SsoServerWSSAgentsImpl ( this , server ) ; else wssAgentsGroup = new SsoServerWSSAgentsImpl ( this ) ; return wssAgentsGroup ; }
49495	public static void doAsPrivilege ( final String methodName , final Servlet targetObject ) throws Exception { doAsPrivilege ( methodName , targetObject , _NULL , _NULL , _NULL ) ; }
49521	@ Override protected Object createCtsMonitoringMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { ctsMonitoringGroup = new CtsMonitoringImpl < OperationType , TokenType > ( this , OperationType . class , TokenType . class ) ; return ctsMonitoringGroup ; }
49572	protected boolean createTunnelToProxy ( HttpRoute route , int hop , HttpContext context ) throws HttpException , IOException { throw new UnsupportedOperationException ( _CHAR Proxy chains are not supported . '' ) ; }
49637	public synchronized void clearCache ( ) { idRepoCache . invalidateAll ( ) ; initializeCache ( ) ; }
49848	public void writeBytes ( byte [ ] data , int offset , int len ) throws IOException { _writeBytes ( data , offset , len ) ; }
49862	@ Override public void onTokenRefresh ( ) { Intent intent = new Intent ( this , RegistrationIntentService . class ) ; intent . setAction ( RegistrationIntentService . ACTION_REGISTER ) ; startService ( intent ) ; }
49953	public boolean validateAttributes ( Map attributeSet ) throws SMSException { SMSEntry . validateToken ( ssm . getSSOToken ( ) ) ; return ( ss . validateAttributes ( ssm . getSSOToken ( ) , attributeSet , _BOOL , _NULL ) ) ; }
50184	public boolean isPopupTrigger ( MouseEvent e ) { return getUI ( ) . isPopupTrigger ( e ) ; }
50392	public static StringArgument saslArgument ( ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_SASLOPTION ) . shortIdentifier ( OPTION_SHORT_SASLOPTION ) . description ( INFO_LDAP_CONN_DESCRIPTION_SASLOPTIONS . get ( ) ) . multiValued ( ) . valuePlaceholder ( INFO_SASL_OPTION_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
50654	protected void add ( Object ... components ) { if ( components == _NULL ) { return ; } for ( Object component : components ) { add ( component ) ; } }
50681	public void mark ( int readAheadLimit ) throws IOException { throw new IOException ( _CHAR mark / reset not supported _CHAR ) ; }
50813	public World createWorld ( ) { return Bukkit . createWorld ( this ) ; }
50836	@ Override protected Object createSsoServerFedCOTsMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) fedCotsGroup = new SsoServerFedCOTsImpl ( this , server ) ; else fedCotsGroup = new SsoServerFedCOTsImpl ( this ) ; return fedCotsGroup ; }
51081	private static int bit ( int i ) { int ret = ( _NUM << ( i & LOW_ORDER_BITMASK ) ) ; return ret ; }
51274	public void clearCache ( ) { if ( mMemoryCache != _NULL ) { mMemoryCache . evictAll ( ) ; Log . d ( TAG , _CHAR Memory cache cleared _CHAR ) ; } }
51416	public static AdditionalLogItem unquotedKeyValue ( final Class < ? > source , final String key , final Object value ) { Reject . ifNull ( source , key , value ) ; return new AdditionalLogItem ( source , key , value , _BOOL ) ; }
51573	protected Object createCtsConnectionSuccessRateMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { ctsConnectionSuccessRate = new CtsConnectionSuccessRateImpl ( this ) ; return ctsConnectionSuccessRate ; }
51654	protected void initializeBeanContextResources ( ) { }
52059	@ NonNull public static Interpolator overshoot ( int tension ) { return new OvershootInterpolator ( tension ) ; }
52132	void resetDoubleBuffer ( ) { if ( standardDoubleBuffer != _NULL ) { standardDoubleBuffer . needsReset = _BOOL ; } }
52216	public static BooleanArgument useSSLArgument ( ) throws ArgumentException { return BooleanArgument . builder ( OPTION_LONG_USE_SSL ) . shortIdentifier ( OPTION_SHORT_USE_SSL ) . description ( INFO_DESCRIPTION_USE_SSL . get ( ) ) . buildArgument ( ) ; }
52228	public void preProcessDelete ( SSOToken token , String entryDN , Map attributes , boolean softDeleteEnabled , int objectType ) throws AMPreCallBackException { }
52246	public boolean add ( Attribute attribute ) { Object oldAttribute = attrMap . put ( attribute . getCategory ( ) , AttributeSetUtilities . verifyAttributeValue ( attribute , myInterface ) ) ; return ( ! attribute . equals ( oldAttribute ) ) ; }
52483	public void keyPressed ( KeyEvent e ) { if ( isNavigationKey ( e ) ) { prefix = _CHAR _CHAR ; typedString = _CHAR _CHAR ; lastTime = _NUM ; } }
52547	public void removeFromParent ( ) { MutableTreeNode parent = ( MutableTreeNode ) getParent ( ) ; if ( parent != _NULL ) { parent . remove ( this ) ; } }
52665	protected int convertYToRow ( int y0 ) { return convertLocationToRow ( _NUM , y0 , _BOOL ) ; }
52697	final void chompNewline ( ) throws IOException { if ( ( pos != end || fillBuf ( ) != - _NUM ) && buf [ pos ] == _CHAR ) { ++ pos ; } }
53140	private void updateLaunchDailyErrorMessages ( Collection < LocalizableMessage > errorMessages ) { setPrimaryValid ( lDailyTime ) ; int [ ] h = { - _NUM } ; int [ ] min = { - _NUM } ; checkTime ( dailyTime , lDailyTime , h , min , errorMessages ) ; }
53189	public byte [ ] toByteArray ( ) { byte [ ] newbuf = new byte [ count ] ; System . arraycopy ( buf , _NUM , newbuf , _NUM , count ) ; return newbuf ; }
53223	public ByteMatrix encode ( String contents , int width , int height ) throws WriterException { return encode ( contents , width , height , _NULL ) ; }
53261	public void addNotify ( ) { super . addNotify ( ) ; enableInputMethodsIfNecessary ( ) ; }
53355	@ NonNull public static Interpolator overshoot ( ) { return new OvershootInterpolator ( ) ; }
53592	@ Override public FileVisitResult visitFileFailed ( T file , IOException exc ) throws IOException { Objects . requireNonNull ( file ) ; throw exc ; }
53810	@ Override protected Object createSsoServerIDFFSvcMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) idffSvcGroup = new SsoServerIDFFSvcImpl ( this , server ) ; else idffSvcGroup = new SsoServerIDFFSvcImpl ( this ) ; return idffSvcGroup ; }
54123	final void chompNewline ( ) throws IOException { if ( ( pos != end || fillBuf ( ) != - _NUM ) && buf [ pos ] == _CHAR ) { ++ pos ; } }
54359	public void close ( ) throws IOException { super . close ( ) ; disposerRecord . dispose ( ) ; stream = _NULL ; cache = _NULL ; cacheFile = _NULL ; StreamCloser . removeFromQueue ( closeAction ) ; }
54422	public boolean contains ( Object o ) { if ( ! ( o instanceof Map . Entry ) ) return _BOOL ; Map . Entry < ? , ? > e = ( Map . Entry < ? , ? > ) o ; return s . contains ( ( e instanceof CheckedEntry ) ? e : checkedEntry ( e , valueType ) ) ; }
54453	public void writeRaw ( byte b ) throws IOException { _writeByte ( b ) ; }
54497	@ Override public String toString ( ) { return new String ( buf , _NUM , count ) ; }
54521	private static ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException ( int index , int size ) { throw new ArrayIndexOutOfBoundsException ( size , index ) ; }
54679	public static String forceFrameID24To23 ( String identifier ) { return ID3Frames . forcev24Tov23 . get ( identifier ) ; }
54731	@ Override public int doFinal ( ByteBuffer inBuffer , ByteBuffer outBuffer ) throws ShortBufferException , IllegalBlockSizeException , BadPaddingException { int n = cipher . update ( inBuffer , outBuffer ) ; return n + cipher . doFinal ( outBuffer ) ; }
54771	@ Override public void onTokenRefresh ( ) { Intent intent = new Intent ( this , RegistrationIntentService . class ) ; startService ( intent ) ; }
54831	@ NonNull public static Interpolator reverse ( Interpolator interpolator ) { return new ReverseInterpolator ( interpolator ) ; }
54838	protected Label readLabel ( int offset , Label [ ] labels ) { if ( labels [ offset ] == _NULL ) { labels [ offset ] = new Label ( ) ; } return labels [ offset ] ; }
54849	@ Override protected Object createSsoServerSAML1SvcMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) saml1SvcGroup = new SsoServerSAML1SvcImpl ( this , server ) ; else saml1SvcGroup = new SsoServerSAML1SvcImpl ( this ) ; return saml1SvcGroup ; }
54988	public static RationaleDialog newInstance ( int requestCode , boolean finishActivity ) { Bundle arguments = new Bundle ( ) ; arguments . putInt ( ARGUMENT_PERMISSION_REQUEST_CODE , requestCode ) ; arguments . putBoolean ( ARGUMENT_FINISH_ACTIVITY , finishActivity ) ; RationaleDialog dialog = new RationaleDialog ( ) ; dialog . setArguments ( arguments ) ; return dialog ; }
55002	private static Expression makeBlock ( final ExpressionList < ? extends Expression > expressions ) { return new SpilledExpressionBlock ( expressions ) ; }
55134	private Bindings mergeBindings ( Bindings ... allBindings ) { Bindings result = new SimpleBindings ( ) ; for ( Bindings scope : allBindings ) { if ( scope != _NULL ) { result = new ChainedBindings ( result , scope ) ; } } return result ; }
55159	public static void main ( String args [ ] ) { if ( args . length != _NUM ) { System . out . println ( _CHAR usage : java SAMLUtils < host_name > _CHAR ) ; return ; } System . out . println ( generateSourceID ( args [ _NUM ] ) ) ; }
55277	public void execute ( TransformerImpl transformer ) throws TransformerException { XPathContext xctxt = transformer . getXPathContext ( ) ; xctxt . pushRTFContext ( ) ; transformer . executeChildTemplates ( this , _BOOL ) ; xctxt . popRTFContext ( ) ; }
55313	public boolean removeAudienceRestrictionCondition ( String audience ) { Iterator it = _arcs . iterator ( ) ; while ( it . hasNext ( ) ) { AudienceRestrictionCondition arc = ( AudienceRestrictionCondition ) it . next ( ) ; if ( arc . containsAudience ( audience ) ) { return arc . removeAudience ( audience ) ; } } return _BOOL ; }
55324	public void undo ( ) throws CannotUndoException { super . undo ( ) ; int i = edits . size ( ) ; while ( i -- > _NUM ) { UndoableEdit e = edits . elementAt ( i ) ; e . undo ( ) ; } }
55369	public Editor edit ( ) throws IOException { return DiskLruCache . this . edit ( key , sequenceNumber ) ; }
55396	public static byte [ ] scalarMultBase ( byte [ ] n ) { toPrivateKey ( n ) ; return scalarMult ( n , BASE_POINT ) ; }
55506	public void loadRules ( Reader in , URL ref ) throws IOException { CssParser parser = new CssParser ( ) ; parser . parse ( ref , in , _BOOL , _BOOL ) ; }
55662	public boolean containsAll ( Collection < ? > coll ) { for ( Object e : coll ) { if ( ! contains ( e ) ) return _BOOL ; } return _BOOL ; }
55974	private void handleReleaseSession ( SessionID sessionID ) { InternalSession internalSession = InjectorHolder . getInstance ( SessionAccessManager . class ) . releaseSession ( sessionID ) ; if ( internalSession == _NULL ) { debug . message ( _CHAR releaseSession : session not found { } _CHAR , sessionID ) ; } }
55999	@ Override protected Object createSsoServerInstanceMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { if ( server != _NULL ) instanceGroup = new SsoServerInstanceImpl ( this , server ) ; else instanceGroup = new SsoServerInstanceImpl ( this ) ; return instanceGroup ; }
56016	public void logDisconnect ( ClientConnection clientConnection , DisconnectReason disconnectReason , LocalizableMessage message ) { }
56264	public int indent ( ) { return indent ; }
56276	public void flush ( ) { flush ( FlushReason . EXPLICIT ) ; }
