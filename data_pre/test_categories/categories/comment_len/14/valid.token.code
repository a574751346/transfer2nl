21	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
74	private void init ( ) { mPaint = new Paint ( ) ; mPath = new Path ( ) ; startPoint = new Point ( _NUM , _NUM ) ; endPoint = new Point ( _NUM , _NUM ) ; assistPoint = new Point ( _NUM , _NUM ) ; mPaint . setAntiAlias ( _BOOL ) ; mPaint . setDither ( _BOOL ) ; }
108	private boolean sameType ( Object flowSet ) { return ( flowSet instanceof ArraySparseSet ) ; }
160	private boolean isBeforeParent ( final BSPTree < Sphere1D > node ) { final BSPTree < Sphere1D > parent = node . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return node == childBefore ( parent ) ; } }
215	public static void validateApplicationUri ( X509Certificate certificate , String applicationUri ) throws UaException { if ( ! validateSubjectAltNameField ( certificate , SUBJECT_ALT_NAME_URI , _NULL ) ) { throw new UaException ( StatusCodes . Bad_CertificateUriInvalid ) ; } }
224	@ Override public boolean hasMoreData ( ) { int c =- _NUM ; try { reader . mark ( _NUM ) ; c = reader . read ( ) ; reader . reset ( ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; } return c != - _NUM ; }
364	public ClearModifiers remove ( ClearModifiers modifiers ) { return createIfNeeded ( super . remove ( modifiers ) ) ; }
368	public boolean contains ( S2LatLngRect other ) { return lat . contains ( other . lat ) && lng . contains ( other . lng ) ; }
398	private void checkCallingPackage ( ) throws SecurityException { String callingPkg = _NULL ; if ( android . os . Build . VERSION . SDK_INT >= android . os . Build . VERSION_CODES . KITKAT ) { callingPkg = getCallingPackage ( ) ; } if ( _CHAR org . kustom . wallpaper _CHAR . equals ( callingPkg ) ) return ; if ( _CHAR org . kustom . widget _CHAR . equals ( callingPkg ) ) return ; throw new SecurityException ( _CHAR Unauthorized _CHAR ) ; }
406	public static Tailer create ( File file , TailerListener listener , long delayMillis , boolean end , boolean reOpen ) { return create ( file , listener , delayMillis , end , reOpen , DEFAULT_BUFSIZE ) ; }
501	private HttpEntityEnclosingRequestBase addEntityToRequestBase ( HttpEntityEnclosingRequestBase requestBase , HttpEntity entity ) { if ( entity != _NULL ) { requestBase . setEntity ( entity ) ; } return requestBase ; }
502	public static SM_SYSTEM_MESSAGE STR_MSG_PAY_DISTRIBUTE ( long highestValue , int num2 , long distributeKinah ) { return new SM_SYSTEM_MESSAGE ( _NUM , highestValue , num2 , distributeKinah ) ; }
546	public static String mapFullWidthNumberToHalfWidth ( String text ) { }
556	public void onStart ( ) { }
611	public boolean isDragEnabled ( ) { return mDragEnabled ; }
617	public void writeChar ( char value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _CHAR ) ; this . dataOut . writeChar ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
624	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
629	private boolean hasCurrentAccountChanged ( ) { Account account = AccountUtils . getCurrentOwnCloudAccount ( this ) ; if ( account == _NULL ) { return _BOOL ; } else { return ! mOriginalCurrentAccount . equals ( account . name ) ; } }
636	public static String childElementValue ( Element element , String childElementName ) { if ( element == _NULL ) return _NULL ; Element childElement = firstChildElement ( element , childElementName ) ; return elementValue ( childElement ) ; }
643	public void onSuccess ( byte [ ] binaryData ) { }
655	@ Override public boolean removeAll ( Collection < ? > collection ) { boolean removed = _BOOL ; for ( Object value : collection ) { removed |= remove ( value ) ; } return removed ; }
675	public void stopDragDropInteraction ( ) { for ( Layer layer : myLayers ) { if ( layer instanceof ConstraintsLayer ) { ConstraintsLayer constraintsLayer = ( ConstraintsLayer ) layer ; if ( constraintsLayer . isShowOnHover ( ) ) { constraintsLayer . setShowOnHover ( _BOOL ) ; repaint ( ) ; } } } }
679	public static void closeZipEntry ( ZipOutputStream out ) { try { out . closeEntry ( ) ; } catch ( Exception ex ) { throw new RuntimeException ( _CHAR Failed to close the current ZipEntry _CHAR , ex ) ; } }
704	protected void sleepInbetweenRecoveryAttempts ( ) { if ( this . recoveryInterval > _NUM ) { try { Thread . sleep ( this . recoveryInterval ) ; } catch ( InterruptedException interEx ) { Thread . currentThread ( ) . interrupt ( ) ; } } }
716	public void scanNonNotifyTemplates ( Context context , IEntryHolder entry , ServerTransaction txn , FifoSearch fifoSearch ) throws EntryDeletedException , SAException { scanNonNotifyTemplates ( context , entry , txn , fifoSearch , fifoSearch == FifoSearch . YES ? FifoGroupsSearch . NO : FifoGroupsSearch . INCLUSIVE ) ; }
727	public void java_lang_Class_getSuperclass ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassObject ( ) ) ; }
735	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Hide_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
851	public IntIterator edgeRows ( ) { return getEdgeTable ( ) . rows ( ) ; }
960	private void decreaseCounter ( NotifyContext notifyContext ) { if ( notifyContext . countDec ( ) ) { try { _filterManager . invokeFilters ( FilterOperationCodes . AFTER_ALL_NOTIFY_TRIGGER , _NULL , notifyContext ) ; } catch ( Exception e ) { if ( _logger . isLoggable ( Level . FINE ) ) _logger . log ( Level . FINE , _CHAR Exception was thrown by filter on AFTER_ALL_NOTIFY_TRIGGER . '' , e ) ; } } }
965	@ Override public AudioInputStream reSynthesize ( int backchannelNumber , AudioFileFormat aft ) throws SynthesisException { return synthesize ( backchannelNumber , aft ) ; }
1003	public Iterator edgesOutOf ( MethodOrMethodContext m ) { return new ArrayList ( srcMap . get ( m ) ) . iterator ( ) ; }
1026	public SubHyperplane < S > insideTouching ( ) { return insideTouching ; }
1032	public static void toEntPos ( Entity ent , Vec3 pos ) { ent . posX = pos . xCoord ; ent . posY = pos . yCoord ; ent . posZ = pos . zCoord ; }
1047	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stumble_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
1139	private List < Integer > muxToList ( PageResultMultiplexer < Integer > mux ) throws InterruptedException , IOException { Integer n ; List < Integer > list = new ArrayList < > ( ) ; while ( _BOOL ) { if ( ( n = mux . next ( ) ) == _NULL ) { break ; } list . add ( n ) ; } return list ; }
1169	public static boolean writeFile ( File file , InputStream stream ) { return writeFile ( file , stream , _BOOL ) ; }
1177	@ Override public ServerHandshakeBuilder onWebsocketHandshakeReceivedAsServer ( WebSocket conn , Draft draft , ClientHandshake request ) throws InvalidDataException { return new HandshakeImpl1Server ( ) ; }
1211	@ Override public void drop_duplicates ( ) { for ( HeapInsIntervalManager im : pt_objs . values ( ) ) { im . removeUselessSegments ( ) ; } }
1217	@ Override public boolean hasField ( String fldName ) { return s1 . hasField ( fldName ) || s2 . hasField ( fldName ) ; }
1223	public boolean canZoomInMoreY ( ) { return ( mScaleY < mMaxScaleY ) ; }
1238	public boolean isLocked ( ) { return m_locked ; }
1256	public static SM_SYSTEM_MESSAGE STR_MSG_GET_HCOIN_01 ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1287	public static void putString ( String key , String value ) { prefs . edit ( ) . putString ( key , value ) . commit ( ) ; }
1292	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
1295	public Predicate pred ( ) { return pred ; }
1352	protected AdsGetSuggestionsQueryWithCities cities ( String value ) { return unsafeParam ( _CHAR cities _CHAR , value ) ; }
1363	public void clear ( ) { m_map . clear ( ) ; }
1366	private synchronized void addTableLockObject ( AbsoluteTableIdentifier absoluteTableIdentifier ) { if ( _NULL == tableLockMap . get ( absoluteTableIdentifier ) ) { tableLockMap . put ( absoluteTableIdentifier , new Object ( ) ) ; } }
1367	public static boolean isNullOrEmpty ( String [ ] strings ) { for ( String string : strings ) { return TextUtils . isEmpty ( string ) ; } return _BOOL ; }
1403	public static Optional < DateTime > firstMoment ( Collection < ? extends Collection < Interval >> intervalSets ) { return intervalSets . stream ( ) . flatMap ( _NULL ) . map ( _NULL ) . reduce ( _NULL ) ; }
1427	JSONStringer open ( Scope empty , String openBracket ) throws JSONException { if ( stack . isEmpty ( ) && out . length ( ) > _NUM ) { throw new JSONException ( _CHAR Nesting problem : multiple top - level roots _CHAR ) ; } beforeValue ( ) ; stack . add ( empty ) ; out . append ( openBracket ) ; return this ; }
1505	public FloatColumn logN ( ) { FloatColumn newColumn = FloatColumn . create ( name ( ) + _CHAR [ logN ] _CHAR , size ( ) ) ; for ( float value : this ) { newColumn . add ( ( float ) Math . log ( value ) ) ; } return newColumn ; }
1549	private HttpEntityEnclosingRequestBase addEntityToRequestBase ( HttpEntityEnclosingRequestBase requestBase , HttpEntity entity ) { if ( entity != _NULL ) { requestBase . setEntity ( entity ) ; } return requestBase ; }
1557	public VideoEditAlbumQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
1601	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Provoker_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
1621	public final Abstraction deriveNewAbstractionOnThrow ( Stmt throwStmt ) { assert ! this . exceptionThrown ; Abstraction abs = clone ( ) ; abs . currentStmt = throwStmt ; abs . sourceContext = _NULL ; abs . exceptionThrown = _BOOL ; return abs ; }
1634	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_PICKUP_ITEM_TIMEOUT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
1689	public void remove ( Vertex v ) throws Exception { if ( hVertexTypes . containsKey ( v ) ) hVertexTypes . remove ( v ) ; super . remove ( v ) ; }
1690	public void error ( String message ) { currentTest . get ( ) . error ( message ) ; }
1706	protected String domain ( ) { if ( uri . getPath ( ) . startsWith ( _CHAR queues / _CHAR ) ) { return _CHAR queue _CHAR ; } else if ( uri . getPath ( ) . startsWith ( _CHAR topics / _CHAR ) ) { return _CHAR topic _CHAR ; } else if ( uri . getPath ( ) . startsWith ( _CHAR persistent / _CHAR ) ) { return _CHAR persistent _CHAR ; } else { throw new RestException ( Status . INTERNAL_SERVER_ERROR , _CHAR domain ( ) invoked from wrong resource _CHAR ) ; } }
1720	@ SubscribeEvent public void saveFoodSystem ( PlayerLoggedOutEvent event ) { if ( ! ( event . player . getFoodStats ( ) instanceof BWMFoodStats ) ) return ; event . player . getFoodStats ( ) . writeNBT ( event . player . getEntityData ( ) ) ; }
1752	public static Map < String , Object > updateImage ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = updateImageMethod ( dctx , context ) ; return result ; }
1779	public Vec2d sub ( double x , double y ) { this . x -= x ; this . y -= y ; return this ; }
1784	@ Deprecated public void onSuccess ( int statusCode , Header [ ] headers , String content ) { onSuccess ( statusCode , content ) ; }
1861	public boolean isTemplateOnTheList ( String title , String template ) { return grid . isTemplateOnList ( title , template ) ; }
1876	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
1880	public static SM_SYSTEM_MESSAGE STR_CRAFT_INFO_UPGRADE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
1912	private void animatePanelToState ( PanelState state , StateChangeReason reason ) { animatePanelToState ( state , reason , BASE_ANIMATION_DURATION_MS ) ; }
1928	public static void startEditFolderActivity ( Context context , BookmarkId idToEdit ) { Intent intent = new Intent ( context , EnhancedBookmarkAddEditFolderActivity . class ) ; intent . putExtra ( INTENT_IS_ADD_MODE , _BOOL ) ; intent . putExtra ( INTENT_BOOKMARK_ID , idToEdit . toString ( ) ) ; context . startActivity ( intent ) ; }
1942	public static boolean equals ( IBinding b1 , IBinding b2 ) { return b1 . isEqualTo ( b2 ) ; }
1964	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_MAGIC_OTHER_FRIENDLY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
1992	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_STATUS_UNSEALPROGRESS ( String value0 , String durationday1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , durationday1 ) ; }
2058	private boolean isPackageAboveVersion ( String packageName , int minVersion ) { return PackageUtils . getPackageVersion ( mContext , packageName ) >= minVersion ; }
2066	public boolean canZoomOutMoreY ( ) { return ( mScaleY > mMinScaleY ) ; }
2142	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
2167	@ Override public void separator ( short separator , Augmentations augs ) throws XNIException { if ( fDTDGrammar != _NULL ) fDTDGrammar . separator ( separator , augs ) ; if ( fDTDContentModelHandler != _NULL ) { fDTDContentModelHandler . separator ( separator , augs ) ; } }
2174	public void mustSchedule ( Job job ) { if ( schedule ( job ) != SCHEDULE_RESULT_SUCCESS ) { throw new ScheduleFailedException ( ) ; } }
2184	public ABTester doNotRetain ( ) { noSave = _BOOL ; return this ; }
2191	public static Pattern compile ( String pattern ) { return Pattern . compile ( URIPattern . escape ( pattern ) ) ; }
2225	public void putRequest ( Context context , String url , JSONObject body , ApiListener apiListener ) { request ( context , Request . Method . PUT , url , body , apiListener ) ; }
2250	protected boolean postlexicalRules ( Element token , AllophoneSet allophoneSet ) { return _BOOL ; }
2251	void cleanTheList ( ) { int length = connections . size ( ) ; int total = items . size ( ) ; boolean tag [ ] = new boolean [ total ] ; Platform . runLater ( _NULL ) ; }
2284	protected VirtualFile createFile ( String filePath ) { return testFixture . getTempDirFixture ( ) . createFile ( filePath ) ; }
2285	public VideoAddAlbumQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
2286	public boolean hasChanged ( ) { return changed . get ( ) ; }
2313	@ Override public BigFraction reciprocal ( ) { return new BigFraction ( denominator , numerator ) ; }
2318	public static boolean isDigit ( char ch ) { return ( _CHAR <= ch && ch <= _CHAR ) ; }
2350	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
2378	public boolean isClassSuperclassOfIncluding ( SootClass parent , SootClass possibleChild ) { parent . checkLevel ( SootClass . HIERARCHY ) ; possibleChild . checkLevel ( SootClass . HIERARCHY ) ; return getSubclassesOfIncluding ( parent ) . contains ( possibleChild ) ; }
2396	protected void animatePanelToState ( PanelState state , StateChangeReason reason , long duration ) { mAnimatingState = state ; mAnimatingStateReason = reason ; final float height = getPanelHeightFromState ( state ) ; animatePanelTo ( height , duration ) ; }
2414	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_USE_ALREADY_HAVE_REWARD_ITEM ( int rewardNameId , int objectNameId ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( rewardNameId ) , calculateNameId ( objectNameId ) ) ; }
2437	public GroupsSearchQuery type ( String value ) { return unsafeParam ( _CHAR type _CHAR , value ) ; }
2453	public static boolean shuffle ( Object [ ] objArray ) { if ( objArray == _NULL ) { return _BOOL ; } return shuffle ( objArray , getRandom ( objArray . length ) ) ; }
2462	public static < T extends Serializable , R > DistributedTask < T , R > task ( Runnable runnable , AsyncResultsReducer < T , R > reducer , AsyncResultFilter < T > filter ) { return new RunnableDistributedTaskAdapter < T , R > ( runnable , reducer , filter ) ; }
2517	public static Aggregate < Map < String , Concept > , Optional < ? >> min ( String varName ) { return Aggregates . min ( varName ) ; }
2519	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
2545	@ Override public boolean supportsInheritance ( ) { return _BOOL ; }
2569	@ Override public int hashCode ( ) { return fDomain . hashCode ( ) + fKey . hashCode ( ) ; }
2600	public static String whichDoctypePublic ( Document doc ) { DocumentType doctype ; doctype = doc . getDoctype ( ) ; if ( doctype != _NULL ) { try { return doctype . getPublicId ( ) ; } catch ( Error except ) { } } if ( doc instanceof HTMLDocument ) return DTD . XHTMLPublicId ; return _NULL ; }
2625	private void validatePerPage ( int perPage ) { if ( perPage > maxResults ) { String msg = String . format ( _CHAR Number of rows requested exceeds request limit of % d _CHAR , maxResults ) ; throw new RowLimitReachedException ( msg ) ; } }
2663	public boolean canZoomInMoreX ( ) { return ( mScaleX < mMaxScaleX ) ; }
2668	public void config ( Configuration config , String prefix , String name ) { items = config . getPrefixPropertyList ( prefix , name + _CHAR . Items _CHAR ) ; }
2771	public static boolean writeFile ( String filePath , String content ) { return writeFile ( filePath , content , _BOOL ) ; }
2787	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_PetOrderUseUltraSkill_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
2860	private boolean isBeforeParent ( final BSPTree < Euclidean1D > node ) { final BSPTree < Euclidean1D > parent = node . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return node == childBefore ( parent ) ; } }
2925	public static SM_SYSTEM_MESSAGE STR_AERIALGATHERING_INFO_UPGRADE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
2928	private boolean isProtocolMatching ( URI uri ) { return this . protocolFilter == _NULL || uri . getScheme ( ) == _NULL || uri . getScheme ( ) . equalsIgnoreCase ( this . protocolFilter ) ; }
2956	private boolean isResult ( final ClientRequestReport clientRequestReport ) { return clientRequestReport . isResult ( ) ; }
2963	public ElementType parent ( ) { return theType . parent ( ) ; }
2974	@ Nonnull public Builder copy ( ) { return new Builder ( this ) ; }
3005	@ Override public void onChanged ( boolean status ) { isConnected = status ; inflateConnectivity ( ) ; }
3056	public int allowed_modifier_changes ( ) { String s = soot . PhaseOptions . getString ( options , _CHAR allowed - modifier - changes _CHAR ) ; if ( s . equalsIgnoreCase ( _CHAR unsafe _CHAR ) ) return allowed_modifier_changes_unsafe ; if ( s . equalsIgnoreCase ( _CHAR safe _CHAR ) ) return allowed_modifier_changes_safe ; if ( s . equalsIgnoreCase ( _CHAR none _CHAR ) ) return allowed_modifier_changes_none ; throw new RuntimeException ( _CHAR Invalid value _CHAR + s + _CHAR of phase option allowed - modifier - changes _CHAR ) ; }
3070	public void writeShort ( short value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _SHORT ) ; this . dataOut . writeShort ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
3132	private void updateSkillEnabledStates ( ) { if ( talismanSkillContainers [ _NUM ] . getSkillTree ( ) != _NULL ) { talismanSkillContainers [ _NUM ] . setEnabled ( _BOOL ) ; } else { if ( talismanSkillContainers [ _NUM ] . getSkillTree ( ) != _NULL ) { talismanSkillContainers [ _NUM ] . setSkillTree ( _NULL ) ; } talismanSkillContainers [ _NUM ] . setEnabled ( _BOOL ) ; } }
3152	private boolean useForAllProtocols ( Properties settings ) { return Boolean . parseBoolean ( settings . getProperty ( _CHAR org . gnome . system . proxy use - same - proxy _CHAR , _CHAR _BOOL _CHAR ) ) ; }
3161	public NewsfeedGetRecommendedQuery maxPhotos ( Integer value ) { return unsafeParam ( _CHAR max_photos _CHAR , value ) ; }
3176	private boolean isCurrentFolder ( String mailBoxFolder ) { return folder . getName ( ) . equalsIgnoreCase ( mailBoxFolder ) ; }
3210	public static Map < String , Object > updateDataResource ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = updateDataResourceMethod ( dctx , context ) ; return result ; }
3231	public static SM_SYSTEM_MESSAGE STR_SKILL_CONFLICT_ME_TO_B ( String skillname , String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname , skilltarget ) ; }
3245	public void createSets ( ) { createSets ( _BOOL , _NUM . _NUM , _BOOL ) ; }
3284	public PhotosGetAllCommentsQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
3304	protected BuildSystem buildSystem ( ) { return BuildSystem . Blaze ; }
3329	public static InsertAllRequest buildExpectedInsertAllRequest ( TableId table , InsertAllRequest . RowToInsert ... rows ) { return InsertAllRequest . builder ( table , rows ) . ignoreUnknownValues ( _BOOL ) . skipInvalidRows ( _BOOL ) . build ( ) ; }
3331	public boolean aggregateContains ( int row , VisualItem member ) { return getAggregatedRow ( row , member ) >= _NUM ; }
3380	public final String toString ( ) { return ( name + ( ( isSource == _BOOL ) ? _CHAR source _CHAR : _CHAR target _CHAR ) + _CHAR port _CHAR ) ; }
3400	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
3410	public static Long daysBetween ( String start , String end ) { LocalDate st = LocalDate . parse ( start , DATE_FORMAT ) ; LocalDate en = LocalDate . parse ( end , DATE_FORMAT ) ; return ChronoUnit . DAYS . between ( st , en ) ; }
3482	@ Override public String toString ( ) { return _CHAR Sequence _CHAR + sequence ; }
3517	public static < T > void filter ( Collection < T > src_ , Predicate < T > pred_ , List < T > result_ ) { for ( T t : src_ ) { if ( pred_ . test ( t ) ) { result_ . add ( t ) ; } } }
3538	public boolean isLazy ( ) { return lazy ; }
3598	public BasenameList duplicate ( ) { return ( new BasenameList ( this . fromDir , this . fromExt , ( Vector ) ( this . bList . clone ( ) ) ) ) ; }
3625	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_CHANGE_LOOT_HE_DENIED_HIS_ASK ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
3642	private PorterDuffColorFilter updateTintFilter ( ColorStateList tint , PorterDuff . Mode tintMode ) { if ( tint == _NULL || tintMode == _NULL ) { return _NULL ; } final int color = tint . getColorForState ( getState ( ) , Color . TRANSPARENT ) ; return new PorterDuffColorFilter ( color , tintMode ) ; }
3647	public void addString ( String word , Tuple t ) { TrieLeaf leaf = new TrieLeaf ( word , t ) ; addLeaf ( root , leaf , _NUM ) ; }
3669	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_SKILL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
3687	public static String join ( List < ? > list , String delim ) { return join ( ( Collection < ? > ) list , delim ) ; }
3708	public void unify ( Atomic parentAtom ) { unifyViaAtom ( parentAtom ) ; propagateConstraints ( parentAtom ) ; }
3712	public static String formatCurrency ( BigDecimal price , String isoCode , Locale locale , int maximumFractionDigits ) { return formatCurrency ( price . doubleValue ( ) , isoCode , locale , maximumFractionDigits ) ; }
3887	public void whitelistRequests ( String [ ] patterns , int responseCode ) { if ( patterns == _NULL || patterns . length == _NUM ) { this . enableEmptyWhitelist ( responseCode ) ; } else { this . whitelistRequests ( Arrays . asList ( patterns ) , responseCode ) ; } }
3935	public boolean isStatic ( ) { return kind . isStatic ( ) ; }
3945	private < T > Stream < Collection < T >> partitionedStream ( Iterator < T > iterator ) { return StreamSupport . stream ( Spliterators . spliteratorUnknownSize ( Iterators . partition ( iterator , batchSize ) , Spliterator . ORDERED ) , _BOOL ) ; }
3952	@ Override public void separator ( short separator , Augmentations augmentations ) throws XNIException { }
3994	private static boolean isHandoff ( AndroidFirstRunPersistentData persistentData ) { if ( InstallerData . exists ( ) ) { if ( ! persistentData . isSdkUpToDate ( ) || ! persistentData . isSameTimestamp ( InstallerData . get ( ) . getTimestamp ( ) ) ) { return InstallerData . get ( ) . isCurrentVersion ( ) ; } } return _BOOL ; }
4038	public String readAll ( ) { if ( ! scanner . hasNextLine ( ) ) return _CHAR _CHAR ; String result = scanner . useDelimiter ( EVERYTHING_PATTERN ) . next ( ) ; scanner . useDelimiter ( WHITESPACE_PATTERN ) ; return result ; }
4059	public static SM_SYSTEM_MESSAGE STR_GATHERING_INFO_UPGRADE ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
4064	public ObservableBool modified ( ) { return myModified ; }
4082	public boolean isConvertible ( final SourceDataTag tag , final Object tagValue ) { this . equipmentLogger . trace ( _CHAR isConvertible - Tag # _CHAR + tag . getId ( ) + _CHAR casting _CHAR + tagValue + _CHAR to _CHAR + tag . getDataType ( ) ) ; return TypeConverter . isConvertible ( tagValue , tag . getDataType ( ) ) ; }
4131	public boolean isAddColumnSupported ( ) { return _BOOL ; }
4164	public CommandBuilder withLongSwitch ( String switchName , Object value ) { withLongSwitch ( switchName , value , UnaryOperator . identity ( ) ) ; return this ; }
4218	public static String [ ] toStringArray ( Object value ) { if ( value instanceof String [ ] ) { return ( String [ ] ) value ; } else { Object [ ] valueArray = ( Object [ ] ) value ; return Arrays . stream ( valueArray ) . map ( _NULL ) . toArray ( _NULL ) ; } }
4284	public static boolean isZero ( String value ) { return value != _NULL && ZERO_PATTERN . matcher ( value ) . matches ( ) ; }
4297	private static boolean isUppercaseLetter ( char ch ) { return ( _CHAR <= ch && ch <= _CHAR ) ; }
4355	public TransactionManager manager ( ) { readyState . check ( ) ; return txnMgrProxy ; }
4436	public static String formatFraction ( Fraction f ) { return getImproperInstance ( ) . format ( f ) ; }
4459	void cancelPrerender ( IBinder session ) { ThreadUtils . assertOnUiThread ( ) ; if ( mPrerender != _NULL && ( session == _NULL || session . equals ( mPrerender . mSession ) ) ) { mExternalPrerenderHandler . cancelCurrentPrerender ( ) ; mPrerender . mWebContents . destroy ( ) ; mPrerender = _NULL ; } }
4482	public Expression emptyExpression ( ) { return new EmptyExpression ( ) ; }
4496	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( landlord == _NULL ) throw new InvalidObjectException ( _CHAR _NULL landlord reference _CHAR ) ; if ( landlordUuid == _NULL ) throw new InvalidObjectException ( _CHAR _NULL landlordUuid reference _CHAR ) ; if ( ! ( landlord instanceof TrustEquivalence ) ) { throw new InvalidObjectException ( _CHAR server does not implement TrustEquivalence _CHAR ) ; } }
4503	PorterDuffColorFilter createTintFilter ( ColorStateList tint , Mode tintMode ) { if ( tint == _NULL || tintMode == _NULL ) { return _NULL ; } final int color = tint . getColorForState ( getState ( ) , Color . TRANSPARENT ) ; return new PorterDuffColorFilter ( color , tintMode ) ; }
4518	public static ValueGetterSpacePredicate < ServerEntry > propertyXor ( String propertyName , ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return property ( propertyName , xor ( leftPredicate , rightPredicate ) ) ; }
4542	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_ENTER_INSTANCE_COOL_TIME_HOUR_CLIENT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
4581	public void close ( ) { namespace . close ( ) ; }
4615	public PhotosReorderAlbumsQuery before ( Integer value ) { return unsafeParam ( _CHAR before _CHAR , value ) ; }
4638	private static void checkPermissions ( Permissions perms ) { SecurityManager sm = System . getSecurityManager ( ) ; if ( sm != _NULL ) { Enumeration en = perms . elements ( ) ; while ( en . hasMoreElements ( ) ) { sm . checkPermission ( ( Permission ) en . nextElement ( ) ) ; } } }
4660	@ Override public void addDictionaryChunk ( List < byte [ ] > dictionaryChunk ) { dictionaryChunks . add ( dictionaryChunk ) ; if ( _NULL == dictionaryByteArrayToSurrogateKeyMap ) { createDictionaryByteArrayToSurrogateKeyMap ( dictionaryChunk . size ( ) ) ; } addDataToDictionaryMap ( ) ; }
4673	public static String formatFraction ( Fraction f ) { return getImproperInstance ( ) . format ( f ) ; }
4697	public byte [ ] array ( ) { return _tempBuffer ; }
4700	public Iterator < RecordID > sortedScan ( ) { LeafNode firstLeaf = new LeafNode ( this , firstLeafPageNum ) ; return new BPlusIterator ( firstLeaf ) ; }
4750	public User toEntity ( UserDTO dto ) { return toEntity ( dto , _NUM ) ; }
4787	public static String toString ( final ByteBuffer buf ) { buf . flip ( ) ; final byte arr [ ] = new byte [ buf . remaining ( ) ] ; buf . get ( arr ) ; String ret = toString ( arr ) ; buf . flip ( ) ; buf . put ( arr ) ; return ret ; }
4815	public TapTarget icon ( Drawable icon ) { return icon ( icon , _BOOL ) ; }
4881	public static boolean isEqual ( double d1 , double d2 ) { return Math . abs ( d1 - d2 ) < TOLERANCE ; }
4983	protected void removeAt ( int index ) { _set [ index ] = ( int ) _NUM ; super . removeAt ( index ) ; }
5037	public final boolean lessEquals ( SaveProtocolVersion version ) { return isComparable ( version ) && ( compareToVersion ( version ) <= _NUM ) ; }
5066	public WallRepostQuery repost ( UserActor actor , String object ) { return new WallRepostQuery ( getClient ( ) , actor , object ) ; }
5069	public static < X , Y > boolean containsSuperclass ( Set < ? extends Class < ? extends Y >> classes , X subclassInstance ) { Class subclass = subclassInstance . getClass ( ) ; for ( Class < ? extends Y > classs : classes ) if ( classs . isAssignableFrom ( subclass ) ) return _BOOL ; return _BOOL ; }
5133	public void handleStep ( final ODEStateInterpolator interpolator , final boolean isLast ) { }
5135	public static IOFileFilter magicNumberFileFilter ( byte [ ] magicNumber ) { return new MagicNumberFileFilter ( magicNumber ) ; }
5232	protected void readStreamHeader ( ) throws IOException { }
5282	public Builder iconSize ( Point iconSize ) { this . iconSize = iconSize ; return this ; }
5297	public void prepend ( CharSequence s ) { text . insert ( _NUM , s ) ; }
5327	public static String pennPOSToWordnetPOS ( String s ) { if ( s . matches ( _CHAR NN | NNP | NNS | NNPS _CHAR ) ) { return _CHAR noun _CHAR ; } if ( s . matches ( _CHAR VB | VBD | VBG | VBN | VBZ | VBP | MD _CHAR ) ) { return _CHAR verb _CHAR ; } if ( s . matches ( _CHAR JJ | JJR | JJS | CD _CHAR ) ) { return _CHAR adjective _CHAR ; } if ( s . matches ( _CHAR RB | RBR | RBS | RP | WRB _CHAR ) ) { return _CHAR adverb _CHAR ; } return _NULL ; }
5329	protected void removeAt ( int index ) { _set [ index ] = ( long ) _NUM ; super . removeAt ( index ) ; }
5349	public static < S , T > Aggregate < S , Map < String , T >> select ( Set < NamedAggregate < ? super S , ? extends T >> aggregates ) { return Aggregates . select ( ImmutableSet . copyOf ( aggregates ) ) ; }
5405	public static SM_SYSTEM_MESSAGE STR_UNION_INVITE_HIS_LEADER ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
5427	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stagger_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
5438	public boolean isBlockInHand ( ) { if ( ! hasItem ( ) ) { return _BOOL ; } return item . getType ( ) . isBlock ( ) ; }
5442	protected void clearRegion ( Graphics2D g , Rectangle2D r ) { g . setColor ( getBackground ( ) ) ; g . fill ( r ) ; firePrePaint ( g ) ; }
5489	public Builder threadFactory ( ThreadFactory threadFactory ) { this . threadFactory = threadFactory ; return this ; }
5498	public static boolean isMainThread ( ) { return sMainThread == Thread . currentThread ( ) ; }
5615	PorterDuffColorFilter updateTintFilter ( PorterDuffColorFilter tintFilter , ColorStateList tint , PorterDuff . Mode tintMode ) { if ( tint == _NULL || tintMode == _NULL ) { return _NULL ; } final int color = tint . getColorForState ( getState ( ) , Color . TRANSPARENT ) ; tintFilter = new PorterDuffColorFilter ( color , tintMode ) ; return tintFilter ; }
5622	public synchronized void denyAll ( ) { for ( RequestResponseHandler handler : map . values ( ) ) { handler . handle ( player , _NUM ) ; } map . clear ( ) ; }
5640	public static String mapFullWidthNumberToHalfWidth ( String text ) { }
5662	public static Map < String , Object > createFile ( DispatchContext dctx , Map < String , ? extends Object > context ) { return createFileMethod ( dctx , context ) ; }
5670	public static SM_SYSTEM_MESSAGE STR_UNION_REJECT_HIM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5739	private void addInsideTouching ( final SubHyperplane < S > sub , final List < BSPTree < S >> splitters ) { if ( insideTouching == _NULL ) { insideTouching = sub ; } else { insideTouching = insideTouching . reunite ( sub ) ; } insideSplitters . addAll ( splitters ) ; }
5753	public boolean canZoomOutMoreX ( ) { return ( mScaleX > mMinScaleX ) ; }
5816	public void print ( ) { System . out . println ( _CHAR mean : _CHAR ) ; mean . print ( _NUM , _NUM ) ; System . out . println ( _CHAR covariance matrix : _CHAR ) ; covariances . print ( _NUM , _NUM ) ; System . out . println ( _CHAR component weight : _CHAR ) ; System . out . println ( componentWeight ) ; System . out . println ( _CHAR --------------------------------------------- _CHAR ) ; }
5831	public boolean isTouchEnabled ( ) { return mTouchEnabled ; }
5877	private void unsupportedQueryType ( QueryType queryType ) { String msg = RESULT_SET_ERROR . logFormat ( queryType ) ; LOG . error ( msg ) ; throw new UnsupportedOperationException ( msg ) ; }
5928	@ Override public ServerHandshakeBuilder onWebsocketHandshakeReceivedAsServer ( WebSocket conn , Draft draft , ClientHandshake request ) throws InvalidDataException { return new HandshakeImpl1Server ( ) ; }
6006	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stagger_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
6010	public boolean unroll ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR unroll _CHAR ) ; }
6109	public boolean isTransactionCanceled ( ) { return transactionCanceled ; }
6160	public boolean supportsRename ( ) { return _BOOL ; }
6198	public boolean hasPermissionsByInternalId ( String internalId , Permission ... permissions ) { return hasPermissionsByInternalId ( internalId , Arrays . asList ( permissions ) ) ; }
6227	boolean hasPublishPermissions ( ) { return mHasPublishPermissions ; }
6233	public boolean canZoomInMoreY ( ) { return ( mScaleY < mMaxScaleY ) ; }
6302	public void addUpdateColumn ( UpdateColumn updateColumn ) { _updatedColumns . add ( updateColumn ) ; }
6310	public static boolean timeIsValid ( String time ) { return TIME_OF_DAY_PATTERN . matcher ( time ) . matches ( ) ; }
6325	public static boolean isError ( Map < String , ? extends Object > results ) { if ( results == _NULL || results . get ( ModelService . RESPONSE_MESSAGE ) == _NULL ) { return _BOOL ; } return ModelService . RESPOND_ERROR . equals ( results . get ( ModelService . RESPONSE_MESSAGE ) ) ; }
6339	public Project toEntity ( ProjectDTO dto ) { return toEntity ( dto , _NUM ) ; }
6362	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_CANT_INVITE_WHEN_HE_IS_ASKED_QUESTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
6365	private void putInArgumentValueCache ( Class cls , Object value ) { argumentValueCache . put ( cls , value ) ; }
6368	public WallDeleteCommentQuery deleteComment ( UserActor actor , int commentId ) { return new WallDeleteCommentQuery ( getClient ( ) , actor , commentId ) ; }
6386	public boolean isShortFeature ( int index ) { return byteValuedDiscreteFeatures . length <= index && index < byteValuedDiscreteFeatures . length + shortValuedDiscreteFeatures . length ; }
6395	@ Override public void onWebsocketPong ( WebSocket conn , Framedata f ) { }
6430	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sleep_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
6433	public static void main ( String [ ] args ) { System . out . println ( approxLog ( _NUM . _NUM ) ) ; }
6464	public static boolean checkIfRightExpressionRequireEvaluation ( Expression expression ) { if ( expression . getFilterExpressionType ( ) == ExpressionType . UNKNOWN || ! ( expression instanceof LiteralExpression ) && ! ( expression instanceof ListExpression ) ) { return _BOOL ; } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfRightExpressionRequireEvaluation ( child ) ) { return _BOOL ; } } return _BOOL ; }
6508	public static double mouseX ( ) { synchronized ( mouseLock ) { return mouseX ; } }
6549	private Object readResolve ( ) { return val ? YES : NO ; }
6556	private static Spannable errorSummary ( String string ) { SpannableString summary = new SpannableString ( string ) ; summary . setSpan ( new ForegroundColorSpan ( ERROR_COLOR ) , _NUM , summary . length ( ) , _NUM ) ; return summary ; }
6682	public void requestAssignSucReturnRoute ( int nodeId ) { enqueue ( new AssignSucReturnRouteMessageClass ( ) . doRequest ( nodeId , getCallbackId ( ) ) ) ; }
6701	public static double mouseY ( ) { synchronized ( mouseLock ) { return mouseY ; } }
6708	public void appendToLog ( String s ) { append ( _CHAR \ n _CHAR + s ) ; }
6760	@ Nonnull public Builder copy ( ) { return new Builder ( this ) ; }
6842	public NewsfeedSaveListQuery noReposts ( Boolean value ) { return unsafeParam ( _CHAR no_reposts _CHAR , value ) ; }
6845	public Builder zkPort ( int zkPort ) { this . _zkPort = zkPort ; return this ; }
6880	protected void withBoundRecorderService ( final FallibleConsumer < RecorderService > c ) { if ( mServiceConnection == _NULL ) { mServiceConnection = mConnectionSupplier . get ( ) ; } mServiceConnection . runWithService ( c ) ; }
6888	public void addController ( BaseController controller ) { controllers . add ( controller ) ; }
7015	public JSONArray put ( long value ) { this . put ( new Long ( value ) ) ; return this ; }
7061	public int classify ( ) { return nans ; }
7082	private static int convertToInt ( String value , int defaultValue ) { String trim = value . trim ( ) ; if ( trim . length ( ) == _NUM ) { return defaultValue ; } return Integer . parseInt ( trim ) ; }
7088	private static int resolvePoolSize ( int poolSize ) { if ( poolSize == _NUM ) return Runtime . getRuntime ( ) . availableProcessors ( ) ; return poolSize ; }
7107	protected boolean applyRules ( Node n ) { Element intonation = ( Element ) DomUtils . getAncestor ( n , MaryXML . PROSODY ) ; return intonation == _NULL || ! intonation . getAttribute ( _CHAR rules _CHAR ) . equals ( _CHAR off _CHAR ) ; }
7128	public static String formatCurrency ( BigDecimal price , String isoCode , Locale locale ) { return formatCurrency ( price , isoCode , locale , - _NUM ) ; }
7163	public static boolean isBoolean ( String expression , Map < String , Object > vars ) { try { Object result = evaluate ( expression , vars ) ; return ( result instanceof Boolean ) ; } catch ( JexlException ex ) { return _BOOL ; } }
7198	public void releaseAll ( ) { for ( OneWayBinding < ? > oneWayBinding : myOneWayBindings ) { oneWayBinding . dispose ( ) ; } myOneWayBindings . clear ( ) ; for ( TwoWayBinding < ? > twoWayBinding : myTwoWayBindings ) { twoWayBinding . dispose ( ) ; } myTwoWayBindings . clear ( ) ; }
7243	public boolean canZoomInMoreX ( ) { return ( mScaleX < mMaxScaleX ) ; }
7279	private void STAR_encoding_row ( ) { int i , j ; for ( i = _NUM ; i < stripe_unit_size ; i ++ ) { for ( j = _NUM ; j < data_disk_nbr ; j ++ ) { check_data [ data_disk_nbr ] [ i ] ^= check_data [ j ] [ i ] ; } } }
7294	public void createPage ( String title , String name , String exactTemplateName ) { typeTitle ( title ) ; typeName ( name ) ; selectTemplate ( exactTemplateName ) ; confirm ( ) ; }
7320	public final boolean isOwner ( ) { return this . equals ( OWNER ) ; }
7401	public static boolean isEcKey ( Key key ) { return _CHAR EC _CHAR . equals ( key . getAlgorithm ( ) ) ; }
7421	@ Nonnull public OperatingSystem . Builder copy ( ) { return new Builder ( this ) ; }
7433	private Object readResolve ( ) { return val ? YES : NO ; }
7439	public boolean unroll ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR unroll _CHAR ) ; }
7455	public TrackedEntityInstanceQueryParams addFiltersIfNotExist ( List < QueryItem > filtrs ) { for ( QueryItem filter : filtrs ) { if ( filters != _NULL && ! filters . contains ( filter ) ) { filters . add ( filter ) ; } } return this ; }
7465	public boolean isProbeAvailable ( ) { return available ; }
7528	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonBindingGroupGate_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
7535	public static Object find ( String urls , Properties customProperties , LifeCycle lifeCycle , CredentialsProvider credentialsProvider ) throws FinderException { return spaceFinder . findService ( urls , customProperties , lifeCycle , credentialsProvider ) ; }
7662	public void putAll ( Map < String , String > map ) { parameters . putAll ( map ) ; }
7691	public void release ( ) { if ( mReleased ) { return ; } mReleased = _BOOL ; clear ( _BOOL ) ; onRelease ( ) ; }
7740	public VideoGetQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
7814	public static Map < String , Object > updateElectronicText ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = updateElectronicTextMethod ( dctx , context ) ; return result ; }
7834	private boolean isIntervalEnd ( final BSPTree < Euclidean1D > node ) { if ( ! ( Boolean ) leafBefore ( node ) . getAttribute ( ) ) { return _BOOL ; } if ( ( Boolean ) leafAfter ( node ) . getAttribute ( ) ) { return _BOOL ; } return _BOOL ; }
7839	@ CalledByNative private static InfoBar show ( int enumeratedIconId , String messageText , int inlineLinkRangeStart , int inlineLinkRangeEnd , String buttonLabel ) { return new GeneratedPasswordSavedInfoBar ( ResourceId . mapToDrawableId ( enumeratedIconId ) , messageText , inlineLinkRangeStart , inlineLinkRangeEnd , buttonLabel ) ; }
7843	public void post ( Runnable runnable ) { synchronized ( mQueue ) { mQueue . add ( runnable ) ; if ( mQueue . size ( ) == _NUM ) { scheduleNextLocked ( ) ; } } }
7848	public void writeByte ( byte value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _BYTE ) ; this . dataOut . writeByte ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
7876	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bind_ME_TO_B ( String skillname , String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname , skilltarget ) ; }
7962	public boolean isSpringDamper ( ) { return this . frequency > _NUM . _NUM && this . dampingRatio > _NUM . _NUM ; }
8038	public CatchItemResult useItem ( ItemId item ) throws LoginFailedException , RemoteServerException { return AsyncHelper . toBlocking ( useItemAsync ( item ) ) ; }
8064	public synchronized BookKeeperClientBuilder requestTimer ( HashedWheelTimer requestTimer ) { this . requestTimer = requestTimer ; return this ; }
8094	public static void cancelAll ( String id ) { Token token ; synchronized ( TOKENS ) { token = TOKENS . remove ( id ) ; } if ( token == _NULL ) { return ; } HANDLER . removeCallbacksAndMessages ( token ) ; }
8141	@ Deprecated public void onSuccess ( String content ) { }
8158	private static void writeResource ( ResourceCreator resourceCreator , String resourceName , byte [ ] data ) throws IOException { OutputStream os = resourceCreator . createResource ( resourceName ) ; try { os . write ( data ) ; } finally { try { os . close ( ) ; } catch ( IOException ex ) { } } }
8189	protected VirtualFile createFile ( String filePath , String contents ) { assertPathIsNotAbsolute ( filePath ) ; try { return testFixture . getTempDirFixture ( ) . createFile ( filePath , contents ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
8211	public Iterator edgesInto ( MethodOrMethodContext m ) { return new ArrayList ( tgtMap . get ( m ) ) . iterator ( ) ; }
8306	public static boolean hasMimeType ( String mimeType ) { if ( mimeType == _NULL || mimeType . isEmpty ( ) ) { return _BOOL ; } return mimeTypeToExtensionMap . containsKey ( mimeType ) ; }
8328	public void putInArgumentValueCache ( Collection values ) { values . stream ( ) . forEach ( _NULL ) ; }
8403	public void reset ( ) { fDeclaration = _NULL ; fTypeDecl = _NULL ; fNil = _BOOL ; fSpecified = _BOOL ; fNotation = _NULL ; fValidationAttempted = ItemPSVI . VALIDATION_NONE ; fValidity = ItemPSVI . VALIDITY_NOTKNOWN ; fErrors = _NULL ; fValidationContext = _NULL ; fValue . reset ( ) ; }
8455	public static byte [ ] decode ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , DECODABET ) ; }
8505	@ Override public boolean equals ( Object o ) { return this == o || ( o instanceof Storage && _uuid . equals ( ( ( Storage ) o ) . _uuid ) ) ; }
8518	@ Nullable ResourceFile loadFile ( File file ) throws MergingException { return myResourceSet . loadFile ( myResourceDir , file , myILogger ) ; }
8519	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
8568	public boolean isPrintHeader ( ) { return m_printHeader ; }
8608	public static void performSaveAs ( String schemaPrefixFileName , String selFilePath , ContainerConfig containerConfig ) { try { File fileWithDefaultConfiguration = createContainerSchemaFile ( schemaPrefixFileName , selFilePath ) ; updateFile ( containerConfig , fileWithDefaultConfiguration . getPath ( ) , schemaPrefixFileName ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
8630	public synchronized void addListenerAndNotify ( ISpaceModeListener listener ) throws RemoteException { SpaceMode currentSpaceMode = _spaceMode ; listener . beforeSpaceModeChange ( currentSpaceMode ) ; listener . afterSpaceModeChange ( currentSpaceMode ) ; _primarySpaceModeListeners . addListener ( listener ) ; }
8684	@ Override public void onWebsocketPong ( WebSocket conn , Framedata f ) { }
8702	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPHeal_HEAL_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
8730	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostDropRate_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
8745	default String roleParentName ( String type ) { return String . format ( ROLE_PARENT , type ) ; }
8787	public void appendToLog ( String s ) { append ( _CHAR \ n _CHAR + s ) ; }
8788	protected void removeAt ( int index ) { _set [ index ] = ( short ) _NUM ; super . removeAt ( index ) ; }
8790	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_MOVE_BIRTHAREA_FRIENDLY_IDARENA ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
8802	public boolean containsKey ( String key ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } synchronized ( contexts ) { for ( Map . Entry < String , String > e : contexts ) { if ( e . getKey ( ) . equalsIgnoreCase ( key ) ) { return _BOOL ; } } } return _BOOL ; }
8815	public ISourceDataTag findDataTag ( final Long dataTagId ) { Map < Long , EquipmentConfiguration > equipmentMap = getProcessConfiguration ( ) . getEquipmentConfigurations ( ) ; for ( EquipmentConfiguration equipmentConfiguration : equipmentMap . values ( ) ) { if ( equipmentConfiguration . hasSourceDataTag ( dataTagId ) ) { return equipmentConfiguration . getSourceDataTag ( dataTagId ) ; } } return _NULL ; }
8836	public boolean hasErrors ( ) { return myHaveExceptions || myMessages != _NULL || myClassesWithIncorrectFormat != _NULL || myBrokenClasses != _NULL || myMissingClasses != _NULL || myMissingSize || myMissingFragments != _NULL ; }
8853	public boolean equals ( Object obj ) { if ( ! ( obj instanceof ConnectionAbsoluteTime ) ) { return _BOOL ; } ConnectionAbsoluteTime cc = ( ConnectionAbsoluteTime ) obj ; return time == cc . time ; }
8871	public void print ( ) { System . out . println ( _CHAR ----- _CHAR ) ; center . print ( _NUM , _NUM ) ; }
8901	public final Observable < T > readNullable ( final Object group ) { return Observable . defer ( _NULL ) . onErrorResumeNext ( _NULL ) ; }
8905	public boolean dynamic_order ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dynamic - order _CHAR ) ; }
8959	private Socket ensureTls ( Socket socket ) { if ( socket != _NULL && ( socket instanceof SSLSocket ) ) { ( ( SSLSocket ) socket ) . setEnabledProtocols ( new String [ ] { TLS_V_1_2 } ) ; } return socket ; }
9002	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_TITLE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
9020	public FormField withLabel ( String label ) { this . stepLabel = label ; return this ; }
9031	public boolean isSpringDamper ( ) { return this . frequency > _NUM . _NUM && this . dampingRatio > _NUM . _NUM ; }
9047	public static boolean shuffle ( Object [ ] objArray ) { if ( objArray == _NULL ) { return _BOOL ; } return shuffle ( objArray , getRandom ( objArray . length ) ) ; }
9090	public PagesParseWikiQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
9118	public void mergedWith ( Node n1 , Node n2 ) { }
9207	@ Override public void startDocument ( ) throws SAXException { litePalAttr = LitePalAttr . getInstance ( ) ; litePalAttr . getClassNames ( ) . clear ( ) ; }
9250	public String assignIfPossible ( String value , Object ... replacements ) { if ( setter ( ) != _NULL ) { String expr = format ( value , replacements ) ; expr = cast ( expr ) ; return format ( setter ( ) , expr ) ; } else { return _CHAR _CHAR ; } }
9301	public final Abstraction deriveNewAbstractionOnCatch ( Value taint ) { assert this . exceptionThrown ; Abstraction abs = deriveNewAbstractionMutable ( new AccessPath ( taint , _BOOL ) , _NULL ) ; abs . exceptionThrown = _BOOL ; return abs ; }
9340	protected Set < D > computeNormalFlowFunction ( FlowFunction < D > flowFunction , D d1 , D d2 ) { return flowFunction . computeTargets ( d2 ) ; }
9341	private static ByteBuffer trim ( ByteBuffer buf ) { if ( buf . capacity ( ) <= _NUM * buf . remaining ( ) ) { return buf ; } else { ByteBuffer clone = ByteBuffer . allocate ( buf . remaining ( ) ) ; buf . get ( clone . array ( ) ) ; return clone ; } }
9363	public boolean isProgramRegistration ( ) { return program != _NULL && program . isRegistration ( ) ; }
9388	public JSONArray put ( int value ) { this . put ( new Integer ( value ) ) ; return this ; }
9389	public static byte [ ] decode ( String s ) throws java . io . IOException { return decode ( s , NO_OPTIONS ) ; }
9460	public Bitmap icon ( ) { if ( mDecodedIcon != _NULL ) return mDecodedIcon ; mDecodedIcon = ShortcutHelper . decodeBitmapFromString ( mEncodedIcon ) ; return mDecodedIcon ; }
9473	public float [ ] evaluate ( List < String > taggedSentences ) { DataFrame dataset = createDataFrame ( taggedSentences ) ; return evaluate ( dataset ) ; }
9511	@ Override public boolean hasMoreData ( ) { return currentlyInBuffer ( ) > _NUM || totalRead < dataLength ; }
9520	public NewsfeedSaveListQuery listId ( Integer value ) { return unsafeParam ( _CHAR list_id _CHAR , value ) ; }
9536	private static boolean isLowercaseLetter ( char ch ) { return ( _CHAR <= ch && ch <= _CHAR ) ; }
9537	public void save ( ) throws IOException { if ( myFilename == _NULL ) { throw new IOException ( _CHAR No filename specified for PreferenceStore . '' ) ; } if ( myChanged ) { FileOutputStream out = new FileOutputStream ( myFilename ) ; try { save ( out , _NULL ) ; myChanged = _BOOL ; } finally { out . close ( ) ; } } }
9619	protected AudioSaveQuery audio ( String value ) { return unsafeParam ( _CHAR audio _CHAR , value ) ; }
9622	public static float convertDpToPixel ( float dp , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float px = dp * ( ( float ) metrics . densityDpi / DisplayMetrics . DENSITY_DEFAULT ) ; return px ; }
9628	public boolean isStatic ( ) { return this == STATIC ; }
9655	public JSONArray put ( boolean value ) { this . put ( value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
9729	public static void deleteSortLocationIfExists ( String tempFileLocation ) throws CarbonSortKeyAndGroupByException { File file = new File ( tempFileLocation ) ; if ( file . exists ( ) ) { try { CarbonUtil . deleteFoldersAndFiles ( file ) ; } catch ( CarbonUtilException e ) { LOGGER . error ( e ) ; } } }
9753	public static CommonConfetti rainingConfetti ( ViewGroup container , ConfettiSource confettiSource , int [ ] colors ) { final CommonConfetti commonConfetti = new CommonConfetti ( container ) ; commonConfetti . configureRainingConfetti ( container , confettiSource , colors ) ; return commonConfetti ; }
9757	public JSONArray put ( Object value ) { this . myArrayList . add ( value ) ; return this ; }
9780	public Expression bindValueVariable ( Value var , Value map ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
9792	public static String toXml ( Object obj ) { return xstream . toXML ( obj ) ; }
9831	public char next ( char c ) { char n = next ( ) ; if ( n != c ) { throw syntaxError ( _CHAR Expected _CHAR_CHAR_CHAR and instead saw _CHAR_CHAR_CHAR _CHAR ) ; } return n ; }
9846	public Vec2d add ( double x , double y ) { this . x += x ; this . y += y ; return this ; }
9869	public AdsGetSuggestionsQueryWithRegions cities ( String value ) { return unsafeParam ( _CHAR cities _CHAR , value ) ; }
9874	public String assignIfPossible ( VariableRef value ) { if ( setter ( ) != _NULL ) { return format ( setter ( ) , cast ( value ) ) ; } else { return _CHAR _CHAR ; } }
9909	public void pushRect ( Rect rect , int color ) { if ( mFirstPush ) { mRectangles . clear ( ) ; mFirstPush = _BOOL ; } mRectangles . add ( new Pair < Rect , Integer > ( rect , color ) ) ; invalidate ( ) ; }
9912	public void removeUpdateListener ( final BaseListener < ? extends Tag > pListener ) { listeners . remove ( pListener ) ; }
9956	public DocsGetUploadServerQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
9960	private boolean isIntervalStart ( final BSPTree < Euclidean1D > node ) { if ( ( Boolean ) leafBefore ( node ) . getAttribute ( ) ) { return _BOOL ; } if ( ! ( Boolean ) leafAfter ( node ) . getAttribute ( ) ) { return _BOOL ; } return _BOOL ; }
10049	public void reloadData ( ) { loadData ( ) ; }
10097	public Element makeXmlElement ( Document document ) { return makeXmlElement ( document , _NULL ) ; }
10108	public synchronized long incRefLastCommitGen ( ) throws IOException { long nextGen = saveLoadState . getNextWriteGen ( ) ; if ( nextGen == _NUM ) { throw new IllegalStateException ( _CHAR no commit exists _CHAR ) ; } long result = nextGen - _NUM ; incRef ( result ) ; return result ; }
10114	protected WallRepostQuery object ( String value ) { return unsafeParam ( _CHAR object _CHAR , value ) ; }
10122	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
10127	public HeaderIterator iterator ( final String name ) { return new SaveListHeaderIterator ( this . headers , name ) ; }
10171	public boolean isShowing ( ) { return mPopupWindow . isShowing ( ) ; }
10173	public JSONArray put ( long value ) { put ( new Long ( value ) ) ; return this ; }
10225	public boolean isSpringDamper ( ) { return this . frequency > _NUM . _NUM && this . dampingRatio > _NUM . _NUM ; }
10242	public static SM_SYSTEM_MESSAGE STR_FACTION_POINTDOWN ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
10264	public static AlarmValueImpl createAlarmValue ( final Alarm alarm ) { AlarmValueImpl alarmValueImpl = _NULL ; if ( alarm != _NULL ) { alarmValueImpl = new AlarmValueImpl ( alarm . getId ( ) , alarm . getFaultCode ( ) , alarm . getFaultMember ( ) , alarm . getFaultFamily ( ) , alarm . getInfo ( ) , alarm . getTagId ( ) , alarm . getTimestamp ( ) , alarm . isActive ( ) ) ; } return alarmValueImpl ; }
10272	public boolean isPerformingBlockingOperation ( ) { return ( ! mServiceHandler . mPendingOperations . isEmpty ( ) ) ; }
10281	public static void removeSpaceProperties ( String fullSpaceName ) { m_UrlTable . remove ( fullSpaceName ) ; m_spaceProperties . remove ( fullSpaceName ) ; }
10286	public boolean add ( E o ) { if ( o == _NULL ) return _BOOL ; return map . put ( o , PRESENT ) == _NULL ; }
10362	public static SM_SYSTEM_MESSAGE STR_UNION_CANT_INVITE_WHEN_HE_IS_ASKED_QUESTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10372	public void updateFileDetails ( OCFile file , Account ocAccount ) { setFile ( file ) ; mAccount = ocAccount ; updateFileDetails ( _BOOL , _BOOL ) ; }
10401	public static final SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_DUNGEON_OPENED_FOR_SELF ( int worldId ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldId ) ; }
10416	protected void buildBidirectionalAssociations ( DataSupport baseObj , DataSupport associatedModel , AssociationsInfo associationInfo ) throws SecurityException , IllegalArgumentException , NoSuchMethodException , IllegalAccessException , InvocationTargetException { putSetMethodValueByField ( associatedModel , associationInfo . getAssociateSelfFromOtherModel ( ) , baseObj ) ; }
10479	public double quadraticMean ( ) { return quadraticMean . reduce ( this ) ; }
10501	public void onTargetCancel ( TapTargetView view ) { view . dismiss ( _BOOL ) ; }
10502	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_DUNGEON_OPENED_FOR_SELF ( String worldname0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 ) ; }
10516	public Builder primaryDarkColor ( int colorPrimaryDark ) { this . buttonPressedBackgroundColor = colorPrimaryDark ; return this ; }
10529	protected void mouseClicked ( int mouseX , int mouseY , int mouseButton ) throws IOException { super . mouseClicked ( mouseX , mouseY , mouseButton ) ; for ( GuiTextField gtf : this . fields ) gtf . mouseClicked ( mouseX , mouseY , mouseButton ) ; }
10638	public Location multiply ( double m ) { x *= m ; y *= m ; z *= m ; return this ; }
10655	public AppsSendRequestQuery sendRequest ( UserActor actor , int userId ) { return new AppsSendRequestQuery ( getClient ( ) , actor , userId ) ; }
10669	public Builder touchZoom ( Boolean touchZoom ) { this . touchZoom = touchZoom ; return this ; }
10701	private void checkModified ( ) { final long currentModifiedTime = file . lastModified ( ) ; if ( currentModifiedTime != lastModified ) { System . out . print ( _CHAR Modified config . json externally . Will be reloaded now . '' ) ; final String content = FileHelper . readFile ( file ) ; if ( content != _NULL ) { json = new JSONObject ( content ) ; } lastModified = currentModifiedTime ; } }
10703	public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_WARNING_ALREADYUNSEAL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
10733	public synchronized void unpause ( ) { _paused = _BOOL ; while ( ! _writeQueue . isEmpty ( ) ) { _writeQueue . remove ( ) . run ( ) ; } }
10740	public float length ( ) { return FastMath . sqrt ( lengthSquared ( ) ) ; }
10747	public R1Interval addPoint ( double p ) { if ( isEmpty ( ) ) { return R1Interval . fromPoint ( p ) ; } else if ( p < lo ( ) ) { return new R1Interval ( p , hi ( ) ) ; } else if ( p > hi ( ) ) { return new R1Interval ( lo ( ) , p ) ; } else { return new R1Interval ( lo ( ) , hi ( ) ) ; } }
10759	@ Override public void close ( ) throws java . io . IOException { flushBase64 ( ) ; super . close ( ) ; buffer = _NULL ; out = _NULL ; }
10813	public boolean isCacheValid ( int row ) { return m_valid . get ( row ) ; }
10859	public static Paint newBackgroundPaint ( Context context ) { final Paint paint = new Paint ( ) ; paint . setColor ( Color . parseColor ( DEFAULT_BACKGROUND_COLOR_ID ) ) ; return paint ; }
10861	public void attach ( ActionObserver observer ) { observer . makeOneTimeUse ( ) ; lock . lock ( ) ; try { onceUsedObservers . add ( observer ) ; } finally { lock . unlock ( ) ; } }
10916	private Object readResolve ( ) { return val ? YES : NO ; }
10928	private boolean isArcStart ( final BSPTree < Sphere1D > node ) { if ( ( Boolean ) leafBefore ( node ) . getAttribute ( ) ) { return _BOOL ; } if ( ! ( Boolean ) leafAfter ( node ) . getAttribute ( ) ) { return _BOOL ; } return _BOOL ; }
10975	public static String composeConnectionName ( final String clientId , final List < String > serverURIs ) { return composeConnectionName ( clientId , serverURIsToString ( serverURIs ) ) ; }
10994	public static int [ ] readInts ( ) { return new In ( ) . readAllInts ( ) ; }
11005	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
11008	public AemSidekick clickCustomOperation ( String optionName ) { getCustomOperation ( optionName ) . click ( ) ; return this ; }
11012	public String toString ( ) { return _CHAR Value : _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , ValueSimilarity * _NUM . _NUM ) + _CHAR Containment : _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , ContainmentSimilarity * _NUM . _NUM ) + _CHAR Size : _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , SizeSimilarity * _NUM . _NUM ) ; }
11053	@ Override public boolean hasMoreData ( ) { if ( inputSource == _NULL ) return _BOOL ; return inputSource . hasMoreData ( ) ; }
11163	public void addDataPoint ( double value ) { this . series . get ( _NUM ) . addDataPoint ( value ) ; }
11198	private void addLegionMember ( Legion legion , Player player ) { addLegionMember ( legion , player , LegionRank . VOLUNTEER ) ; }
11233	public JSONArray put ( double value ) throws JSONException { Double d = new Double ( value ) ; JSONObject . testValidity ( d ) ; this . put ( d ) ; return this ; }
11311	public void writeDouble ( double value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _DOUBLE ) ; this . dataOut . writeDouble ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
11314	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_ENEMY_CRITICAL ( String value1 , int num2 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , num2 , value0 ) ; }
11319	public static boolean isInteger ( String value ) { return value != _NULL && INT_VALIDATOR . isValid ( value ) && INT_PATTERN . matcher ( value ) . matches ( ) ; }
11341	public static void logSerpLoadedOnClose ( boolean fullyLoaded ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchSerpLoadedOnClose _CHAR , fullyLoaded ? FULLY_LOADED : PARTIALLY_LOADED , LOADED_BOUNDARY ) ; }
11404	public double dot ( Vector other ) { return x * other . x + y * other . y ; }
11460	public static void putStringSet ( String key , Set < String > values ) { prefs . edit ( ) . putStringSet ( key , values ) . commit ( ) ; }
11479	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
11496	public SubHyperplane < S > outsideTouching ( ) { return outsideTouching ; }
11580	public static void recordOmniboxNavigation ( String destinationUrl , int transitionType ) { if ( ( transitionType & PageTransition . CORE_MASK ) == PageTransition . GENERATED ) { recordAction ( ACTION_SEARCHED_USING_OMNIBOX ) ; } else { if ( UrlUtilities . nativeIsGoogleHomePageUrl ( destinationUrl ) ) { recordAction ( ACTION_NAVIGATED_TO_GOOGLE_HOMEPAGE ) ; } else { recordAction ( ACTION_NAVIGATED_USING_OMNIBOX ) ; } recordExplicitUserNavigation ( destinationUrl , RAPPOR_ACTION_NAVIGATED_USING_OMNIBOX ) ; } }
11632	public Value mod ( Value num1 , Value num2 ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
11639	@ Override public boolean add ( MODEL object ) { add ( getItemCount ( ) , object ) ; return _BOOL ; }
11643	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
11677	public static double regularizedBeta ( double x , double a , double b , int maxIterations ) { return regularizedBeta ( x , a , b , DEFAULT_EPSILON , maxIterations ) ; }
11684	public static Aggregate < Map < String , Concept > , Optional < Number >> median ( String varName ) { return Aggregates . median ( varName ) ; }
11691	public void postRequest ( @ NonNull Context context , String url , JSONObject body , ApiListener apiListener ) { request ( context , Request . Method . POST , url , body , apiListener ) ; }
11714	@ Override public void close ( ) throws IOException { eof = _BOOL ; position = _NUM ; mark =- _NUM ; }
11728	public void writeInt ( int value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _INT ) ; this . dataOut . writeInt ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
11735	@ Override public RegressionResults regress ( ) throws MathIllegalArgumentException { return regress ( this . nvars ) ; }
11763	public final TestSubscriber < T > await ( ) { if ( cdl . getCount ( ) == _NUM ) { return this ; } try { cdl . await ( ) ; } catch ( InterruptedException ex ) { throw new AssertionError ( _CHAR Wait interrupted _CHAR , ex ) ; } return this ; }
11816	public boolean isDrawEntryLabelsEnabled ( ) { return mDrawEntryLabels ; }
11839	public void addSimpleMethod ( SimpleMethod method ) { this . simpleMethodNameSet . add ( method . getLocationAndName ( ) ) ; }
11915	public TrackedEntityInstanceQueryParams addAttributesIfNotExist ( List < QueryItem > attrs ) { for ( QueryItem attr : attrs ) { if ( attributes != _NULL && ! attributes . contains ( attr ) ) { attributes . add ( attr ) ; } } return this ; }
11925	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
11939	public boolean isOptional ( ) { return this . optionalParams ; }
11947	protected void onHideAnimationStart ( ) { setResultsBarVisibility ( _BOOL ) ; }
12006	public static < T extends Serializable , R > DistributedTask < T , R > privilegedTask ( DistributedTask < T , R > task , AsyncResultFilter < T > filter ) { return new PrivilegedDistributedTask < T , R > ( task , filter ) ; }
12035	private < T > Stream < Collection < T >> partitionedStream ( Iterator < T > iterator ) { return StreamSupport . stream ( Spliterators . spliteratorUnknownSize ( Iterators . partition ( iterator , batchSize ) , Spliterator . ORDERED ) , _BOOL ) ; }
12080	@ Override public void onSuccess ( int statusCode , Header [ ] headers , byte [ ] binaryData ) { onSuccess ( statusCode , binaryData ) ; }
12090	public boolean isInGroup ( VisualItem item , String group ) { if ( ALL_ITEMS . equals ( group ) ) return _BOOL ; if ( item . getGroup ( ) == group ) return _BOOL ; TupleSet tset = getGroup ( group ) ; return ( tset == _NULL ? _BOOL : tset . containsTuple ( item ) ) ; }
12185	public View inflateHeaderView ( @ LayoutRes int res ) { return mNavigationView . inflateHeaderView ( res ) ; }
12193	private Response assureAcceptJSON ( IHTTPSession session ) { final Map < String , String > headers = session . getHeaders ( ) ; if ( ! APPLICATION_JSON . equals ( headers . get ( ACCEPT_FIELD ) ) ) { return newFixedLengthResponse ( Response . Status . NOT_ACCEPTABLE , MIME_PLAINTEXT , _CHAR set accept to application / json or remove it _CHAR ) ; } else { return _NULL ; } }
12240	static byte [ ] altBase64ToByteArray ( String s ) { return base64ToByteArray ( s , _BOOL ) ; }
12296	public void pushTemplateFolder ( @ NotNull String folderName ) throws IOException { myLastTemplateFolders . push ( resolveName ( folderName ) ) ; }
12300	protected String adjustContentPath ( String path ) { return isMobile ? path : path . replaceFirst ( _CHAR - mobile _CHAR , _CHAR _CHAR ) ; }
12407	public Builder attributionControl ( Boolean attributionControl ) { this . attributionControl = attributionControl ; return this ; }
12443	public void trackNextPageLoadFromTimestamp ( long timestamp ) { mIntentReceivedTimestamp = timestamp ; mCurrentState = STATE_WAITING_LOAD_START ; }
12467	public boolean isFirst ( ) { return first ; }
12585	public static AirMap init ( Context context , String authToken ) { return init ( context , authToken , _BOOL ) ; }
12605	public Builder rangeColumns ( String ... columns ) { return add ( ReduceOp . Range , columns ) ; }
12614	public boolean isByteFeature ( int index ) { return _NUM <= index && index < numByteFeatures ; }
12625	public static void o ( Zmat A ) { o ( A , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
12650	public Iterator < Edge > edgesOutOf ( MethodOrMethodContext m ) { return new TargetsOfMethodIterator ( m ) ; }
12758	public static Label createLabel ( Composite parent , String text ) { return createIndentedLabel ( parent , text , _NUM ) ; }
12761	@ Override public String toString ( ) { StringBuffer uriSpecString = new StringBuffer ( ) ; if ( m_scheme != _NULL ) { uriSpecString . append ( m_scheme ) ; uriSpecString . append ( _CHAR ) ; } uriSpecString . append ( getSchemeSpecificPart ( ) ) ; return uriSpecString . toString ( ) ; }
12775	public Map < C , V > row ( R rowKey ) { if ( rowKey == _NULL ) return _NULL ; return dataMap . get ( rowKey ) ; }
12805	protected AdsCreateTargetGroupQuery name ( String value ) { return unsafeParam ( _CHAR name _CHAR , value ) ; }
12863	public void writeString ( String value ) throws JMSException { initializeWriting ( ) ; try { if ( value == _NULL ) { this . dataOut . write ( _NULL ) ; } else { this . dataOut . write ( _STRING ) ; this . dataOut . writeUTF ( value ) ; } } catch ( IOException ioe ) { raise ( ioe ) ; } }
12916	public synchronized boolean putRequest ( int messageId , RequestResponseHandler handler ) { if ( map . containsKey ( messageId ) ) { return _BOOL ; } map . put ( messageId , handler ) ; return _BOOL ; }
12924	public void onPatchServiceResult ( boolean isUpgradePatch ) { if ( ! isRetryEnable ) { TinkerLog . w ( TAG , _CHAR onPatchServiceResult retry disabled , just return _CHAR ) ; return ; } if ( ! isUpgradePatch ) { TinkerLog . w ( TAG , _CHAR onPatchServiceResult is not upgrade patch , just return _CHAR ) ; return ; } if ( retryInfoFile . exists ( ) ) { SharePatchFileUtil . safeDeleteFile ( retryInfoFile ) ; } if ( tempPatchFile . exists ( ) ) { SharePatchFileUtil . safeDeleteFile ( tempPatchFile ) ; } }
12941	public String time ( ) { super . split ( ) ; return DurationFormatUtils . formatDurationHMS ( super . getSplitTime ( ) ) ; }
12944	public static void updateSigninManagerFirstRunCheckDone ( Context context ) { SigninManager manager = SigninManager . get ( context ) ; if ( manager . isSignInAllowed ( ) ) return ; if ( ! FirstRunStatus . getFirstRunFlowComplete ( context ) ) return ; if ( ! getFirstRunFlowSignInComplete ( context ) ) return ; manager . onFirstRunCheckDone ( ) ; }
12955	public ChangeModifiers remove ( ChangeModifiers modifiers ) { return createIfNeeded ( super . remove ( modifiers ) ) ; }
13024	@ Override public Result decode ( BinaryBitmap image , Map < DecodeHintType , ? > hints ) throws NotFoundException { setHints ( hints ) ; return decodeInternal ( image ) ; }
13050	public void createSets ( boolean bNoCategories ) { createSets ( _BOOL , _NUM . _NUM , bNoCategories ) ; }
13072	public void press ( int key ) { controller . keyPress ( key ) ; }
13097	public void deleteObservers ( ) { observers . clear ( ) ; }
13103	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
13122	@ Override public void close ( ) throws java . io . IOException { flushBase64 ( ) ; super . close ( ) ; buffer = _NULL ; out = _NULL ; }
13131	public void loadDataStringFromFile ( String sFilename ) throws java . io . IOException , java . io . FileNotFoundException { String sDataString = utils . loadFileToStringWithNewlines ( sFilename ) ; setDataString ( sDataString ) ; }
13135	public void startDragDropInteraction ( ) { for ( Layer layer : myLayers ) { if ( layer instanceof ConstraintsLayer ) { ConstraintsLayer constraintsLayer = ( ConstraintsLayer ) layer ; if ( ! constraintsLayer . isShowOnHover ( ) ) { constraintsLayer . setShowOnHover ( _BOOL ) ; repaint ( ) ; } } } }
13139	@ Override public boolean hasField ( String fldName ) { return ss1 . hasField ( fldName ) || ss2 . hasField ( fldName ) ; }
13148	public Vector rotateInDegree ( double degree ) { return rotateInRadian ( Math . toRadians ( degree ) ) ; }
13152	public static float limit ( float number , float between , float and ) { if ( number <= between ) { return between ; } if ( number >= and ) { return and ; } return number ; }
13164	public void createSets ( boolean bNoCategories ) { createSets ( _BOOL , _NUM . _NUM , bNoCategories ) ; }
13168	public boolean isTypeAllowed ( @ NotNull ResourceType type ) { return isTypeAllowed ( type . getName ( ) ) ; }
13171	public LogSubject matchesNext ( @ Nullable MessageType type , String regex ) { return assertRegex ( type , regex ) ; }
13178	public static double zeroIfNull ( Double value ) { return value == _NULL ? _NUM : value ; }
13221	private void resetTimer ( ) { if ( fadeOutTime > _NUM ) { if ( timer == _NULL || timer . _run == _BOOL ) { timer = new FadeTimer ( ) ; timer . execute ( ) ; } else { timer . resetTimer ( ) ; } } }
13231	public static void killSilently ( AbstractAI ai2 , Creature target ) { target . getController ( ) . onDie ( ai2 . getOwner ( ) ) ; }
13310	@ Override protected final boolean processData ( ByteBuffer data ) { if ( ! decrypt ( data ) ) { return _BOOL ; } AionClientPacket pck = AionPacketHandlerFactory . handle ( data , this ) ; if ( ( pck != _NULL ) && pck . read ( ) ) { processor . executePacket ( pck ) ; } return _BOOL ; }
13325	public ConversationFactory withInitialSessionData ( Map < Object , Object > initialSessionData ) { this . initialSessionData = initialSessionData ; return this ; }
13330	public static Map < String , Object > createElectronicText ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = createElectronicTextMethod ( dctx , context ) ; return result ; }
13341	public static String [ ] jsonArrayStringToList ( String jsonString ) { String modString = jsonString . replaceFirst ( _CHAR \\ [ _CHAR , _CHAR _CHAR ) ; modString = modString . replaceFirst ( _CHAR \\ ] _CHAR , _CHAR _CHAR ) ; modString = modString . replaceAll ( _CHAR \ _CHAR _CHAR , _CHAR _CHAR ) ; return modString . split ( _CHAR \\ s * , \\ s * _CHAR ) ; }
13357	private boolean hasSupportLibraryInClasspath ( ) { try { Class . forName ( _CHAR com . android . support : appcompat - v7 _CHAR ) ; return _BOOL ; } catch ( ClassNotFoundException ex ) { ex . printStackTrace ( ) ; } return _BOOL ; }
13422	@ Override public void endDocument ( ) throws SAXException { if ( saxParser != _NULL ) { saxParser . endDocument ( ) ; } }
13496	public static void execute ( Runnable runnable ) { if ( runnable == _NULL ) { return ; } new Task ( runnable ) . executeOnExecutor ( mPool ) ; }
13505	void insertAfter ( Node pred ) { Node succ = pred . next ; next = succ ; prev = pred ; pred . next = this ; succ . prev = this ; }
13515	public boolean isPrintHeader ( ) { return m_printHeader ; }
13534	private File createCaptureFile ( int encodingType ) { return createCaptureFile ( encodingType , _CHAR _CHAR ) ; }
13567	public static SM_SYSTEM_MESSAGE STR_SUBMIT_PETITION_OK ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13604	public MaxReducer ignoreExceptions ( ) { this . ignoreExceptions = _BOOL ; return this ; }
13615	public static void putLong ( String key , long value ) { prefs . edit ( ) . putLong ( key , value ) . commit ( ) ; }
13634	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
13645	public void updateDisplayName ( ) { setDisplayName ( computeDisplayName ( ) ) ; }
13694	public INDArray toRaveledTensor ( File file ) { try { BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( file ) ) ; INDArray ret = toRaveledTensor ( bis ) ; bis . close ( ) ; return ret . ravel ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
13739	private boolean isAfterParent ( final BSPTree < Euclidean1D > node ) { final BSPTree < Euclidean1D > parent = node . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return node == childAfter ( parent ) ; } }
13758	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
13767	public void swapItems ( List < T > items ) { this . items = items ; notifyDataSetChanged ( ) ; }
13773	private HttpEntityEnclosingRequestBase addEntityToRequestBase ( HttpEntityEnclosingRequestBase requestBase , HttpEntity entity ) { if ( entity != _NULL ) { requestBase . setEntity ( entity ) ; } return requestBase ; }
13797	public synchronized void writeLock ( ) { while ( activeWriter || activeReaders != _NUM || waitingPriorityWriters != _NUM ) { try { waitingWriters ++ ; try { wait ( ) ; } finally { waitingWriters -- ; } } catch ( InterruptedException e ) { throw new ConcurrentLockException ( _CHAR write lock interrupted in thread _CHAR ) ; } } activeWriter = _BOOL ; }
13810	public byte [ ] copyToNewArray ( ) { return Arrays . copyOf ( bytes , bytes . length ) ; }
13814	public AdsGetSuggestionsQueryWithSchools cities ( String value ) { return unsafeParam ( _CHAR cities _CHAR , value ) ; }
13825	public static void createParentDirectories ( String path ) { File targetFile = new File ( path ) ; File parent = targetFile . getParentFile ( ) ; if ( ! parent . exists ( ) && ! parent . mkdirs ( ) ) { throw new IllegalStateException ( _CHAR Could n _CHAR_CHAR + parent ) ; } }
13845	public static ChatPage paginate ( String unpaginatedString , int pageNumber ) { return paginate ( unpaginatedString , pageNumber , GUARANTEED_NO_WRAP_CHAT_PAGE_WIDTH , CLOSED_CHAT_PAGE_HEIGHT ) ; }
13867	public String toString ( ) { return _CHAR Value : _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , ValueSimilarity * _NUM . _NUM ) + _CHAR Containment : _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , ContainmentSimilarity * _NUM . _NUM ) + _CHAR Size : _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , SizeSimilarity * _NUM . _NUM ) ; }
13871	public boolean isSlotEquipped ( long slot ) { return ! ( equipment . get ( slot ) == _NULL ) ; }
13876	private void collectChanges ( UpdateOpHelper helper ) { for ( ModelState newItem : currentStateList ) { if ( newItem . pair == _NULL ) { continue ; } if ( newItem . pair . hashCode != newItem . hashCode ) { helper . update ( newItem . position ) ; } } }
13885	public JSONArray put ( Object value ) { this . myArrayList . add ( value ) ; return this ; }
13906	public boolean isSingleton ( ) { return _BOOL ; }
13958	private void animatePanelTo ( float height , long duration ) { animateProperty ( Property . PANEL_HEIGHT , getHeight ( ) , height , duration ) ; }
13979	public String changeName ( String path , String newName ) throws RepositoryException { String newPath = substringBeforeLast ( path , SEPARATOR ) + SEPARATOR + newName ; session . move ( path , newPath ) ; session . save ( ) ; return newPath ; }
14031	public static DiscCacheAware createReserveDiscCache ( File cacheDir ) { File individualDir = new File ( cacheDir , _CHAR uil - images _CHAR ) ; if ( individualDir . exists ( ) || individualDir . mkdir ( ) ) { cacheDir = individualDir ; } return new TotalSizeLimitedDiscCache ( cacheDir , _NUM * _NUM * _NUM ) ; }
14048	public static void enableTrafficAlerts ( AirMapTrafficListener listener ) { getAirMapTrafficService ( ) . addListener ( listener ) ; getAirMapTrafficService ( ) . connect ( ) ; }
14071	public Iterator edgesOutOf ( Unit u ) { return new ArrayList ( unitMap . get ( u ) ) . iterator ( ) ; }
14080	public Expression bindKeyVariable ( Value var , Value map ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
14151	public static boolean isCurrency ( char c ) { return ( c == _CHAR ) || isRange ( c , _CHAR , _CHAR ) || isRange ( c , _CHAR , _CHAR ) ; }
14206	public MinReducer ignoreExceptions ( ) { this . ignoreExceptions = _BOOL ; return this ; }
14287	public Author toEntity ( AuthorDTO dto ) { return toEntity ( dto , _NUM ) ; }
14367	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
14426	public void deleteSortLocationIfExists ( ) throws CarbonSortKeyAndGroupByException { CarbonDataProcessorUtil . deleteSortLocationIfExists ( parameters . getTempFileLocation ( ) ) ; }
14437	@ Override public boolean processData ( ByteBuffer data ) { GsClientPacket pck = GsPacketHandlerFactory . handle ( data , this ) ; if ( pck != _NULL && pck . read ( ) ) { ThreadPoolManager . getInstance ( ) . executeLsPacket ( pck ) ; } return _BOOL ; }
14467	private void onFetchVideosInfoError ( Exception ex ) { Log . e ( TAG , _CHAR Error fetching videos from _CHAR + getResources ( ) . getString ( R . string . videos_url ) + _CHAR , Exception : _CHAR + ex . toString ( ) ) ; Toast . makeText ( getContext ( ) , _CHAR Error fetching videos from json file _CHAR , Toast . LENGTH_LONG ) . show ( ) ; }
14480	public boolean isUserAGoat ( ) { return _BOOL ; }
14494	private void updateView ( ) { if ( rebuildItems ( ) ) { calculateLayoutWidth ( getWidth ( ) , MeasureSpec . EXACTLY ) ; layout ( getWidth ( ) , getHeight ( ) ) ; } }
14514	public JSONArray put ( double value ) throws JSONException { Double d = new Double ( value ) ; JSONObject . testValidity ( d ) ; put ( d ) ; return this ; }
14553	public static void sendBroadcast ( Context context , String action , Bundle extras ) { Intent intent = new Intent ( action ) ; if ( extras != _NULL ) { intent . putExtras ( extras ) ; } LocalBroadcastManager . getInstance ( context ) . sendBroadcast ( intent ) ; }
14570	@ Override public Text createTextNode ( String data ) { return new TextImpl ( this , data ) ; }
14623	protected String fixSlashes ( String sysid ) { return sysid . replace ( _CHAR , _CHAR ) ; }
14625	public Fraction divide ( Fraction fraction ) { if ( fraction == _NULL ) { throw MathRuntimeException . createIllegalArgumentException ( NULL_FRACTION ) ; } if ( fraction . numerator == _NUM ) { throw MathRuntimeException . createArithmeticException ( _CHAR the fraction to divide by must not be zero : { _NUM } / { _NUM } _CHAR , fraction . numerator , fraction . denominator ) ; } return multiply ( fraction . reciprocal ( ) ) ; }
14660	public static SM_SYSTEM_MESSAGE STR_ARTIFACT_FIRE ( DescriptionId race , String value1 , DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , race , value1 , descriptionId ) ; }
14717	public static String composeConnectionName ( final String clientId , final String serverURIs ) { return clientId + _CHAR @ _CHAR + serverURIs ; }
14732	@ AfterClass public void cleanUp ( ) { experiment . setState ( Constants . EXPERIMENT_STATE_PAUSED ) ; putExperiment ( experiment ) ; experiment . setState ( Constants . EXPERIMENT_STATE_TERMINATED ) ; putExperiment ( experiment ) ; deleteExperiment ( experiment ) ; }
14755	@ Override public boolean hasMoreData ( ) { return currentlyInBuffer ( ) > _NUM || inputSource != _NULL && inputSource . hasMoreData ( ) ; }
14775	private HttpEntityEnclosingRequestBase addEntityToRequestBase ( HttpEntityEnclosingRequestBase requestBase , HttpEntity entity ) { if ( entity != _NULL ) { requestBase . setEntity ( entity ) ; } return requestBase ; }
14812	private static void writeStringToOutput ( String str , DataOutput out ) throws IOException { out . writeInt ( str . length ( ) ) ; out . writeChars ( str ) ; }
14817	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoReduceSpellATK_Instant_A_TO_SELF ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
14867	@ Override protected SubjectContext createSubjectContext ( ) { SubjectContext subjectContext = super . createSubjectContext ( ) ; subjectContext . setSecurityManager ( this ) ; return subjectContext ; }
14879	public static SM_SYSTEM_MESSAGE STR_GET_EXP2_VITAL_BONUS ( long num0 , long num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , num1 ) ; }
14883	@ Override public boolean hasMoreData ( ) { return currentlyInBuffer ( ) > _NUM || ! datagrams . isEmpty ( ) ; }
14895	public void solve ( ) { submitInitialSeeds ( ) ; awaitCompletionComputeValuesAndShutdown ( ) ; }
14910	private File createCaptureFile ( int encodingType ) { return createCaptureFile ( encodingType , _CHAR _CHAR ) ; }
14979	public static SM_SYSTEM_MESSAGE STR_SUBMIT_PETITION_WAITING_COUNT ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
15004	public boolean isContinuousFeature ( int index ) { return byteValuedDiscreteFeatures . length + shortValuedDiscreteFeatures . length <= index && index < byteValuedDiscreteFeatures . length + shortValuedDiscreteFeatures . length + continuousFeatures . length ; }
15012	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
15025	public MessagesSearchDialogsQuery searchDialogs ( UserActor actor ) { return new MessagesSearchDialogsQuery ( getClient ( ) , actor ) ; }
15208	protected void appendTreeItemToRoot ( TreeItem < WeakRef < Node >> treeItemChild ) { rootItem . getChildren ( ) . add ( treeItemChild ) ; }
15210	public synchronized void priorityWriteLock ( ) { while ( activeWriter || activeReaders != _NUM ) { try { waitingWriters ++ ; waitingPriorityWriters ++ ; try { wait ( ) ; } finally { waitingWriters -- ; waitingPriorityWriters -- ; } } catch ( InterruptedException e ) { throw new ConcurrentLockException ( _CHAR write lock interrupted in thread _CHAR ) ; } } activeWriter = _BOOL ; }
15214	public static boolean isArrow ( char c ) { return isRange ( c , _CHAR , _CHAR ) || isRange ( c , _CHAR , _CHAR ) || isRange ( c , _CHAR , _CHAR ) ; }
15230	public boolean isASingleValue ( ) { return _BOOL ; }
15251	public void selectClosestPack ( PackModel pack ) { ensurePackExists ( pack ) ; Array < PackModel > packs = getProject ( ) . getPacks ( ) ; int index = packs . indexOf ( pack , _BOOL ) ; if ( index > _NUM ) { selectPrevPack ( pack ) ; } else { selectNextPack ( pack ) ; } }
15287	public MessagesSendQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
15337	public synchronized void cancelConflictingJobs ( CopyJob newJob ) throws IOException { for ( CopyJob job : queue ) { if ( job . conflicts ( newJob ) ) { node . message ( _CHAR top : now cancel existing conflicting job = _CHAR + job + _CHAR due to newJob = _CHAR + newJob ) ; job . cancel ( _CHAR conflicts with new job _CHAR , _NULL ) ; } } }
15389	public void createSets ( ) { createSets ( _BOOL , _NUM . _NUM , _BOOL ) ; }
15414	private void initRowMap ( ) { m_rowmap = new int [ m_table . getRowCount ( ) ] ; IntIterator rows = m_table . rows ( ) ; for ( int i = _NUM ; rows . hasNext ( ) ; ++ i ) { m_rowmap [ i ] = rows . nextInt ( ) ; } }
15417	public void onTabsViewShown ( ) { mUma . onTabsViewShown ( ) ; }
15460	public Coord add ( Coord coord ) { return new Coord ( x + coord . x , y + coord . y ) ; }
15492	public NewInvokeExpr newNewInvokeExpr ( RefType base , SootMethodRef method , List args ) { return new GNewInvokeExpr ( base , method , args ) ; }
15505	public PointsToSet reachingObjects ( Context c , Local l ) { VarNode n = findContextVarNode ( l , c ) ; if ( n == _NULL ) { return EmptyPointsToSet . v ( ) ; } return n . getP2Set ( ) ; }
15513	public static byte [ ] decode ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , DECODABET ) ; }
15544	@ Override public String toString ( ) { return _CHAR SelectionBuilder [ table = _CHAR + mTable + _CHAR , selection = _CHAR + getSelection ( ) + _CHAR , selectionArgs = _CHAR + Arrays . toString ( getSelectionArgs ( ) ) + _CHAR ] _CHAR ; }
15546	private Object readResolve ( ) { return val ? YES : NO ; }
15568	public static SpaceIndex createPropertyIndex ( String propertyName , SpaceIndexType indexType , boolean unique ) { return createPathIndex_Impl ( propertyName , indexType , unique ) ; }
15594	protected Storage createStorage ( ) { return new Storage ( ) ; }
15626	public Builder showVerticalLineWhenStepsAreCollapsed ( boolean showVerticalLineWhenStepsAreCollapsed ) { this . showVerticalLineWhenStepsAreCollapsed = showVerticalLineWhenStepsAreCollapsed ; return this ; }
15637	public void solve ( ) { submitInitialSeeds ( ) ; awaitCompletionComputeValuesAndShutdown ( ) ; }
15648	public static Aggregate < Map < String , Concept > , Optional < ? >> max ( String varName ) { return Aggregates . max ( varName ) ; }
15675	public static void resetTimingLogger ( String tag , String label ) { if ( mTimingLogger == _NULL ) { mTimingLogger = createDefaultTimingLogger ( ) ; } mTimingLogger . reset ( tag , label ) ; }
15710	public static S2Cap full ( ) { return new S2Cap ( new S2Point ( _NUM , _NUM , _NUM ) , _NUM ) ; }
15760	public PayloadBuilder withScheme ( String scheme ) { _scheme = checkNotNull ( scheme , _CHAR scheme _CHAR ) ; return this ; }
15788	public static void splitAndLog ( String tag , String text ) { ArrayList < String > messageList = Utils . splitString ( text ) ; for ( String message : messageList ) { if ( isDebug ( ) ) { Log . d ( tag , message ) ; } } }
15830	static Process forkProcess ( File directory , String ... processArgs ) throws IOException { ProcessBuilder processBuilder = new ProcessBuilder ( processArgs ) ; processBuilder . directory ( directory ) ; processBuilder . redirectErrorStream ( _BOOL ) ; return processBuilder . start ( ) ; }
15836	public boolean declaresMethod ( String name , List < Type > parameterTypes ) { checkLevel ( SIGNATURES ) ; for ( SootMethod method : methodList ) { if ( method . getName ( ) . equals ( name ) && method . getParameterTypes ( ) . equals ( parameterTypes ) ) return _BOOL ; } return _BOOL ; }
15858	@ SafeVarargs public static < S , T > Aggregate < S , Map < String , T >> select ( NamedAggregate < ? super S , ? extends T > ... aggregates ) { return select ( ImmutableSet . copyOf ( aggregates ) ) ; }
15901	public void maximizePanelThenPromoteToTab ( StateChangeReason reason , long duration ) { mShouldPromoteToTabAfterMaximizing = _BOOL ; animatePanelToState ( PanelState . MAXIMIZED , reason , duration ) ; }
15974	public static long count ( Bson q , Class < ? extends Bean > t ) { String collection = MongoHelper . getCollection ( t ) ; if ( ! X . isEmpty ( collection ) ) { return count ( collection , q ) ; } return _NUM ; }
16048	public static JsonArray array ( String ... strings ) { if ( strings == _NULL ) { throw new NullPointerException ( _CHAR values is _NULL _CHAR ) ; } JsonArray array = new JsonArray ( ) ; for ( String value : strings ) { array . add ( value ) ; } return array ; }
16068	public static boolean hasSelfPermissions ( Context context , String ... permissions ) { for ( String permission : permissions ) { if ( permissionExists ( permission ) && ! hasSelfPermission ( context , permission ) ) { return _BOOL ; } } return _BOOL ; }
16100	public static String relativePath ( File file , File dir ) { checkArgument ( file . isFile ( ) || file . isDirectory ( ) , _CHAR % s is not a file nor a directory . '' , file . getPath ( ) ) ; checkArgument ( dir . isDirectory ( ) , _CHAR % s is not a directory . '' , dir . getPath ( ) ) ; return relativePossiblyNonExistingPath ( file , dir ) ; }
16118	public AccountChangePasswordQuery changePassword ( UserActor actor , String newPassword ) { return new AccountChangePasswordQuery ( getClient ( ) , actor , newPassword ) ; }
16128	private void onDisconnect ( ) { onDisconnect ( _BOOL ) ; }
16141	public void maximizePanelThenPromoteToTab ( StateChangeReason reason ) { mShouldPromoteToTabAfterMaximizing = _BOOL ; maximizePanel ( reason ) ; }
16153	public Decoration findRealDecorationOfDummy ( int pieceIndex , int decorationIndex ) { if ( getDecoration ( pieceIndex , decorationIndex ) != dummyDecoration ) { throw new IllegalArgumentException ( _CHAR The specified decoration must be a dummy ! _CHAR ) ; } int i = decorationIndex ; while ( getDecoration ( pieceIndex , i ) == dummyDecoration ) { i -- ; } return getDecoration ( pieceIndex , i ) ; }
16208	private void processCandidateForUnaassign ( Iterable < User > users , String projectName ) { List < User > updated = StreamSupport . stream ( users . spliterator ( ) , _BOOL ) . filter ( _NULL ) . map ( _NULL ) . collect ( toList ( ) ) ; userRepository . save ( updated ) ; }
16217	public double quadraticMean ( ) { return NumericReduceUtils . quadraticMean . reduce ( this ) ; }
16230	public FriendsGetRequestsQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
16249	public static Predicate < Integer > inRange ( Integer lower , Integer upper ) { return _NULL ; }
16253	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_USE_HOUSE_OBJECT_ITEM_CHECK ( DescriptionId id ) { return new SM_SYSTEM_MESSAGE ( _NUM , id ) ; }
16291	protected VirtualFile createFile ( String filePath , String ... contentLines ) { return createFile ( filePath , Joiner . on ( _CHAR \ n _CHAR ) . join ( contentLines ) ) ; }
16333	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_ENTER_INSTANCE_COOL_TIME_MIN_CLIENT ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
16336	public boolean indicateDirtyRead ( ITemplateHolder template ) { return ( ( template . isReadOperation ( ) && _useDirtyRead ) || template . isDirtyReadRequested ( ) ) ; }
16434	public MovePageWindow typeDestinationPath ( String destinationPath ) { AemPathWindow pathWindow = lookupField . openPathWindow ( ) ; pathWindow . getContentTree ( ) . selectPath ( destinationPath ) ; pathWindow . clickOk ( ) ; return this ; }
16498	public PollsDeleteVoteQuery deleteVote ( UserActor actor , int pollId , int answerId ) { return new PollsDeleteVoteQuery ( getClient ( ) , actor , pollId , answerId ) ; }
16508	public AvgReducer ignoreExceptions ( ) { super . ignoreExceptions ( ) ; return this ; }
16584	public ElementType parent ( ) { return theType . parent ( ) ; }
16594	@ Override public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws SAXException { if ( saxParser != _NULL ) { saxParser . ignorableWhitespace ( ch , start , length ) ; } }
16699	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
16723	public static boolean isDigit ( char c ) { return Character . isDigit ( c ) ; }
16735	public int remove ( T item ) { int index = indexOf ( item ) ; if ( index >= _NUM ) super . remove ( index ) ; return index ; }
16809	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MagicCounterATK_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
16884	public boolean isSource ( ) { return isSource ; }
16910	public boolean isGenericHide ( ) { return isOptionEnabled ( UrlFilterRuleOption . GENERIC_HIDE ) ; }
16920	protected void assertCurrentVariantWasSet ( String errorMessage , List < Long > localeIds , Long tmTextUnitId ) { for ( Long localeId : localeIds ) { TMTextUnitCurrentVariant currentVariant = tmTextUnitCurrentVariantRepository . findByLocale_IdAndTmTextUnit_Id ( localeId , tmTextUnitId ) ; assertNotNull ( errorMessage , currentVariant ) ; } }
16928	public ReadModifiers remove ( ReadModifiers modifiers ) { return createIfNeeded ( super . remove ( modifiers ) ) ; }
16944	public Vector minus ( Vector other ) { return new Vector ( x - other . x , y - other . y ) ; }
16972	public ShimpleBody newBody ( SootMethod m ) { Map < String , String > options = PhaseOptions . v ( ) . getPhaseOptions ( PHASE ) ; return new ShimpleBody ( m , options ) ; }
16988	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Summon_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
17002	public final int read ( byte ba [ ] , int off , int len ) throws IOException { return is . read ( ba , off , len ) ; }
17005	private void doSendEquipmentAlive ( final SourceDataTagValue aliveTagValue ) { int ttl = aliveTagValue . getTimeToLive ( ) ; if ( aliveTagInterval <= Integer . MAX_VALUE ) { ttl = aliveTagInterval . intValue ( ) ; } aliveTagValue . setTimeToLive ( ttl ) ; aliveTagValue . setPriority ( DataTagConstants . PRIORITY_HIGH ) ; this . processMessageSender . addValue ( aliveTagValue ) ; }
17116	public Location toLocation ( World world ) { return new Location ( world , x , y , z ) ; }
17123	public boolean isInstance ( ) { return this == VIRTUAL || this == INTERFACE || this == SPECIAL ; }
17148	@ Override public boolean processData ( ByteBuffer data ) { LsClientPacket pck = lsPacketHandler . handle ( data , this ) ; log . debug ( _CHAR recived packet : _CHAR + pck ) ; if ( pck != _NULL && pck . read ( ) ) { ThreadPoolManager . getInstance ( ) . executeLsPacket ( pck ) ; } return _BOOL ; }
17186	private static String genSalt ( final byte [ ] Random ) { final StringBuilder Salt = new StringBuilder ( _CHAR $ H $ _CHAR ) ; Salt . append ( iota64 [ _NUM ] ) ; Salt . append ( encode64 ( Random ) ) ; return Salt . toString ( ) ; }
17196	@ NotNull public ImageOverlayBuilder toDiskAndLaunchViewer ( @ NotNull File file ) { toDisk ( file ) ; try { Desktop . getDesktop ( ) . open ( file ) ; Utils . waitFor ( _NUM , TimeUnit . SECONDS ) ; } catch ( IOException e ) { throw new CognitiveException ( _CHAR Could not open image _CHAR , e ) ; } return this ; }
17209	public WallCreateCommentQuery createComment ( UserActor actor , int postId ) { return new WallCreateCommentQuery ( getClient ( ) , actor , postId ) ; }
17218	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonBindingGroupGate_A_TO_B ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
17234	public Builder zoomAnimationThreshold ( Number zoomAnimationThreshold ) { this . zoomAnimationThreshold = zoomAnimationThreshold ; return this ; }
17237	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
17302	@ Override public void separator ( short separator , Augmentations augs ) throws XNIException { }
17330	public void newMethod ( SootMethod m ) { unitToRead = new HashMap < Unit , RWSet > ( ) ; unitToWrite = new HashMap < Unit , RWSet > ( ) ; localToReachingObjects = new HashMap < Local , PointsToSet > ( ) ; currentMethod = m ; sea . findNTRWSets ( currentMethod ) ; }
17347	private Object readResolve ( ) { return val ? YES : NO ; }
17392	public Builder zkServers ( String zkServers ) { this . _zkHost = zkServers ; return this ; }
17413	public boolean isContinuousFeature ( int index ) { index -= numByteFeatures ; index -= numShortFeatures ; return _NUM <= index && index < numContinuousFeatures ; }
17430	public static boolean storageDirectoryExists ( ) { return new File ( getStorageDirectoryString ( ) ) . isDirectory ( ) ; }
17449	public synchronized void onlyReplicateDeletesUponCompaction ( ) { _onlyReplicateDeletesUponCompaction = _BOOL ; }
17481	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_MAGIC_OTHER_HOSTILE ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
17493	public boolean isSharedBroker ( String host ) { for ( NamespaceIsolationData policyData : this . policies . values ( ) ) { NamespaceIsolationPolicyImpl policy = new NamespaceIsolationPolicyImpl ( policyData ) ; if ( policy . isPrimaryBroker ( host ) ) { return _BOOL ; } } return _BOOL ; }
17498	private void blockUntilShutdown ( ) throws InterruptedException { if ( server != _NULL ) { server . awaitTermination ( ) ; } }
17519	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static void isPossibleToRead ( Acl acl , String userModifier , String projectName ) { BusinessRule . expect ( acl , Predicates . or ( Preconditions . isOwner ( userModifier ) , Preconditions . isSharedTo ( projectName ) ) ) . verify ( ErrorType . UNABLE_MODIFY_SHARABLE_RESOURCE , Suppliers . formattedSupplier ( _CHAR User _CHAR is n _CHAR t shared to project _CHAR . _CHAR , userModifier , projectName ) ) ; }
17534	@ Override public boolean hasField ( String fldName ) { return prodScan . hasField ( fldName ) ; }
17570	public boolean isZero ( ) { return this . milliseconds == _NUM && this . seconds == _NUM && this . minutes == _NUM && this . hours == _NUM && this . days == _NUM && this . months == _NUM && this . years == _NUM ; }
17575	private static Map < String , DimensionField > buildNameToDimensionField ( @ NotNull Set < DimensionField > dimensionFields ) { Map < String , DimensionField > nameToDimensionField = new HashMap < > ( dimensionFields . size ( ) ) ; for ( DimensionField dimensionField : dimensionFields ) { nameToDimensionField . put ( dimensionField . getName ( ) , dimensionField ) ; } return nameToDimensionField ; }
17586	public static boolean checkIfExpressionContainsColumn ( Expression expression ) { if ( expression instanceof ColumnExpression ) { return _BOOL ; } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfExpressionContainsColumn ( child ) ) { return _BOOL ; } } return _BOOL ; }
17593	public char next ( char c ) throws JSONException { char n = this . next ( ) ; if ( n != c ) { throw this . syntaxError ( _CHAR Expected _CHAR_CHAR_CHAR and instead saw _CHAR_CHAR_CHAR _CHAR ) ; } return n ; }
17614	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
17672	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DashATK_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
17682	private void displayCustomProcessFunction ( String selectedValue ) { ProcessBriefType selectedFunction = _NULL ; for ( ProcessBriefType function : availableFunctionList ) { if ( function . getIdentifier ( ) . getValue ( ) . compareTo ( selectedValue ) == _NUM ) { selectedFunction = function ; break ; } } functionParameterTableModel . populate ( selectedFunction ) ; }
17700	private boolean isArcEnd ( final BSPTree < Sphere1D > node ) { if ( ! ( Boolean ) leafBefore ( node ) . getAttribute ( ) ) { return _BOOL ; } if ( ( Boolean ) leafAfter ( node ) . getAttribute ( ) ) { return _BOOL ; } return _BOOL ; }
17733	public static Intent createGetContentIntent ( ) { final Intent intent = new Intent ( Intent . ACTION_GET_CONTENT ) ; intent . setType ( _CHAR */* '' ) ; intent . addCategory ( Intent . CATEGORY_OPENABLE ) ; return intent ; }
17798	public VideoReorderVideosQuery beforeVideoId ( Integer value ) { return unsafeParam ( _CHAR before_video_id _CHAR , value ) ; }
17805	protected boolean isSet ( Class < ? > fieldType ) { return Set . class . isAssignableFrom ( fieldType ) ; }
17815	public VideoReorderAlbumsQuery after ( Integer value ) { return unsafeParam ( _CHAR after _CHAR , value ) ; }
17850	public void add ( Long o ) { }
17851	public static double ulp ( double x ) { if ( Double . isInfinite ( x ) ) { return Double . POSITIVE_INFINITY ; } return abs ( x - Double . longBitsToDouble ( Double . doubleToRawLongBits ( x ) ^ _NUM ) ) ; }
17936	public static byte [ ] decode ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , DECODABET ) ; }
18032	public boolean equals ( Object other ) { if ( other == _NULL ) return _BOOL ; if ( other == this ) return _BOOL ; if ( CPtr . class != other . getClass ( ) ) return _BOOL ; return peer == ( ( CPtr ) other ) . peer ; }
18108	public double logJointProb ( String a , String b ) { return logConditionalProb ( a , b ) + logProb ( a ) ; }
18122	private void resetSelectionStates ( ) { mSelectionType = SelectionType . UNDETERMINED ; mSelectedText = _NULL ; mWasTapGestureDetected = _BOOL ; }
18152	public void initGui ( ) { this . buttonList . clear ( ) ; this . initProfileList ( ) ; this . profileListCtrl = new GuiSelectSettingsProfile . List ( ) ; this . profileListCtrl . registerScrollButtons ( _NUM , _NUM ) ; this . initGuiButtons ( ) ; updateButtonEnablement ( this . selectedProfile ) ; }
18205	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_HOSTILE_CRITICAL ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
18277	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Resurrect_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
18342	public static SM_SYSTEM_MESSAGE STR_FORCE_CANT_INVITE_WHEN_HE_IS_ASKED_QUESTION ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18436	public static Paint newSurroundingAreaOverlayPaint ( @ NonNull Resources resources ) { final Paint paint = new Paint ( ) ; paint . setStyle ( Paint . Style . FILL ) ; paint . setColor ( resources . getColor ( R . color . surrounding_area ) ) ; return paint ; }
18477	public static DownloadQueue newDownloadQueue ( ) { return newDownloadQueue ( _NUM ) ; }
18491	public < T > List < T > listScalarItems ( SectionKey < T , ScalarSection < T >> key ) { List < T > result = Lists . newArrayList ( ) ; for ( ScalarSection < T > section : getSections ( key ) ) { result . add ( section . getValue ( ) ) ; } return result ; }
18501	public FriendsGetQuery order ( FriendsGetOrder value ) { return unsafeParam ( _CHAR order _CHAR , value ) ; }
18508	public static SecretKey generateKey ( String algorithm ) throws EncodingException { try { KeyGenerator kgen = KeyGenerator . getInstance ( algorithm ) ; kgen . init ( _NUM ) ; SecretKey key = kgen . generateKey ( ) ; return key ; } catch ( Exception e ) { throw new EncodingException ( e ) ; } }
18543	public void add ( String fldName , Schema sch ) { Type type = sch . type ( fldName ) ; addField ( fldName , type ) ; }
18556	public BoardRestoreCommentQuery restoreComment ( UserActor actor , int groupId , int topicId , int commentId ) { return new BoardRestoreCommentQuery ( getClient ( ) , actor , groupId , topicId , commentId ) ; }
18575	public boolean isManaged ( ) { return org . tigris . subversion . svnclientadapter . utils . SVNStatusUtils . isManaged ( getTextStatus ( ) ) ; }
18626	public static SM_SYSTEM_MESSAGE STR_MSG_QUEST_LIMIT_START_DAILY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18642	public < T > T insertFirstComponentType ( Class < T > componentClass ) { By componentLocator = getComponentLocator ( componentClass ) ; openInsertWindow ( ) . insertComponent ( componentClass ) ; wait . withTimeout ( Timeouts . SMALL ) . until ( _NULL ) ; return pageObjectInjector . inject ( componentClass , getComponentScope ( componentClass , _NUM ) , currentFrame ) ; }
18691	public void updateEquipmentConfiguration ( final EquipmentConfigurationUpdate equipmentConfigurationUpdate , final IEquipmentConfiguration equipmentConfiguration ) throws IllegalAccessException , NoSuchFieldException { fillNonNullFields ( equipmentConfigurationUpdate , equipmentConfiguration , CHANGE_ID_FIELD , EQUIPMENT_ID_FIELD ) ; removeListOfFields ( equipmentConfigurationUpdate . getFieldsToRemove ( ) , equipmentConfiguration ) ; }
18693	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
18704	default String individualEntityName ( IRI individualIri ) { return _CHAR e _CHAR + fromIri ( individualIri ) ; }
18744	public static Object unflatten ( Object array , int [ ] dimensions ) { Class < ? > type = getType ( array ) ; return unflatten ( type , array , dimensions , _NUM ) ; }
18845	public boolean isCaseSensitive ( ) { return caseSensitive ; }
18916	public JSONArray put ( boolean value ) { put ( value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
18942	public boolean add ( E o ) { if ( o == _NULL ) return _BOOL ; return map . put ( o , PRESENT ) == _NULL ; }
18965	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_REGISTER_CANCELED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
18970	private boolean checkDuelCondition ( Effect effect ) { Creature creature = effect . getEffector ( ) ; if ( creature instanceof Player ) { if ( ! getOwner ( ) . isEnemy ( creature ) && effect . getTargetSlot ( ) == SkillTargetSlot . DEBUFF . ordinal ( ) ) { return _BOOL ; } } return _BOOL ; }
19033	static Intent createRegisterRequestIntent ( Context context ) { Intent intent = new Intent ( context , OmahaClient . class ) ; intent . setAction ( ACTION_REGISTER_REQUEST ) ; return intent ; }
19038	public double quadraticMean ( ) { return NumericReduceUtils . quadraticMean . reduce ( this ) ; }
19069	public TakeModifiers remove ( TakeModifiers modifiers ) { return createIfNeeded ( super . remove ( modifiers ) ) ; }
19087	@ SuppressWarnings ( _CHAR deprecation _CHAR ) @ Override public void onSuccess ( int statusCode , Header [ ] headers , String responseBody ) { onSuccess ( statusCode , responseBody ) ; }
19104	public static List < String > moduleInitInfo ( ) { return getList ( _CHAR modules . classes . list _CHAR ) ; }
19165	public static byte [ ] decode ( byte [ ] source ) throws Base64DecoderException { return decode ( source , _NUM , source . length ) ; }
19190	public int start ( ) { return start ; }
19225	public static float ulp ( float x ) { if ( Float . isInfinite ( x ) ) { return Float . POSITIVE_INFINITY ; } return abs ( x - Float . intBitsToFloat ( Float . floatToIntBits ( x ) ^ _NUM ) ) ; }
19249	public static < T1 , T2 > Pattern2 < T1 , T2 > and ( Observable < T1 > left , Observable < T2 > right ) { if ( left == _NULL ) { throw new NullPointerException ( _CHAR left _CHAR ) ; } if ( right == _NULL ) { throw new NullPointerException ( _CHAR right _CHAR ) ; } return new Pattern2 < T1 , T2 > ( left , right ) ; }
19275	public LoggedMqttMessage parse ( final String xmlMessage ) throws XMLException { return ( LoggedMqttMessage ) super . unmarshal ( xmlMessage , LoggedMqttMessage . class ) ; }
19294	public static IOFileFilter magicNumberFileFilter ( String magicNumber ) { return new MagicNumberFileFilter ( magicNumber ) ; }
19299	public static ValueGetterSpacePredicate < ServerEntry > propertyAnd ( String propertyName , ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return property ( propertyName , and ( leftPredicate , rightPredicate ) ) ; }
19316	public static byte [ ] decode ( String s ) throws java . io . IOException { return decode ( s , NO_OPTIONS ) ; }
19321	public FriendsGetQueryWithFields order ( FriendsGetOrder value ) { return unsafeParam ( _CHAR order _CHAR , value ) ; }
19370	protected boolean isList ( Class < ? > fieldType ) { return List . class . isAssignableFrom ( fieldType ) ; }
19374	public static SM_SYSTEM_MESSAGE STR_EXTEND_CHAR_WAREHOUSE_CANT_EXTEND_DUE_TO_MINIMUM_EXTEND_LEVEL_BY_THIS_NPC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
19395	public boolean onBackPressed ( ) { if ( drawer . isDrawerOpen ( GravityCompat . START ) ) { drawer . closeDrawer ( GravityCompat . START ) ; return _BOOL ; } else { drawer . removeDrawerListener ( toggle ) ; return _BOOL ; } }
19402	private void refill ( ) { long nowNano = time . getNanoTime ( ) ; long deltaMs = time . getTimeDeltaMs ( lastRefill , nowNano ) ; if ( deltaMs < _NUM ) { return ; } tokens = Math . min ( tokens + deltaMs * rate , capacity ) ; lastRefill = nowNano ; }
19474	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_MAGIC_PARTY_ENEMY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
19476	public void disconnected ( VmEvent event ) { ErrorManager . getDefault ( ) . log ( _CHAR Disconnect _CHAR + event . getMonitoredVm ( ) . getVmIdentifier ( ) ) ; disableListeners ( ) ; monitoredVm . detach ( ) ; }
19535	public boolean contains ( int i ) { return ( i >= startLine && i <= endLine ) ; }
19551	public DocsGetWallUploadServerQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
19579	private void updateView ( ) { if ( rebuildItems ( ) ) { calculateLayoutWidth ( getWidth ( ) , MeasureSpec . EXACTLY ) ; layout ( getWidth ( ) , getHeight ( ) ) ; } }
19677	@ NotNull private Dimension viewToModel ( int width , int height ) { return new Dimension ( ( int ) ( width / myScale ) , ( int ) ( height / myScale ) ) ; }
19752	@ Override public boolean hasSourceCommandTag ( final Long tagID ) { return sourceCommandTags . get ( tagID ) != _NULL ; }
19756	public PhotosReorderPhotosQuery after ( Integer value ) { return unsafeParam ( _CHAR after _CHAR , value ) ; }
19817	public static SM_SYSTEM_MESSAGE STR_FACTION_POINTUP ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
19880	public static void putFloat ( String key , float value ) { prefs . edit ( ) . putFloat ( key , value ) . commit ( ) ; }
19882	private boolean isValidSelfIntro ( String name ) { return LegionConfig . SELF_INTRO_PATTERN . matcher ( name ) . matches ( ) ; }
19889	@ NotNull private Dimension modelToView ( int width , int height ) { return new Dimension ( ( int ) ( width * myScale ) , ( int ) ( height * myScale ) ) ; }
19894	public JsonReader newJsonReader ( Reader reader ) { JsonReader jsonReader = new JsonReader ( reader ) ; jsonReader . setLenient ( lenient ) ; return jsonReader ; }
19915	public static boolean isAtLeastJava14 ( ) { return _BOOL ; }
19924	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonServant_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
20044	public double quadraticMean ( ) { return NumericReduceUtils . quadraticMean . reduce ( this ) ; }
20132	public void reloadData ( ) { loadData ( ) ; }
20181	protected boolean sameType ( Object flowSet ) { return ( flowSet instanceof ValueArraySparseSet ) ; }
20212	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Root_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
20237	protected PsiFile createPsiFile ( String filePath , String ... contentLines ) { return getPsiFile ( createFile ( filePath , contentLines ) ) ; }
20248	@ SafeVarargs public static final < T > List < T > distinctUnion ( final List < T > ... lists ) { final List < T > union = new UniqueArrayList < > ( ) ; for ( List < T > list : lists ) { union . addAll ( list ) ; } return union ; }
20262	@ Nullable public static File findPlatformSources ( @ NotNull IAndroidTarget target ) { String path = target . getPath ( IAndroidTarget . SOURCES ) ; if ( path != _NULL ) { File platformSource = new File ( path ) ; if ( platformSource . isDirectory ( ) ) { return platformSource ; } } return _NULL ; }
20344	public static float convertDpToPixel ( Context context , float dp ) { return dp * ( getDisplayMetrics ( context ) . densityDpi / _NUM ) ; }
20410	@ Override public boolean isInterrupted ( ) { return interrupted ; }
20412	public static SM_SYSTEM_MESSAGE STR_GET_EXP2_MAKEUP_BONUS ( long num0 , long num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , num1 ) ; }
20438	public int allowed_modifier_changes ( ) { String s = soot . PhaseOptions . getString ( options , _CHAR allowed - modifier - changes _CHAR ) ; if ( s . equalsIgnoreCase ( _CHAR unsafe _CHAR ) ) return allowed_modifier_changes_unsafe ; if ( s . equalsIgnoreCase ( _CHAR safe _CHAR ) ) return allowed_modifier_changes_safe ; if ( s . equalsIgnoreCase ( _CHAR none _CHAR ) ) return allowed_modifier_changes_none ; throw new RuntimeException ( _CHAR Invalid value _CHAR + s + _CHAR of phase option allowed - modifier - changes _CHAR ) ; }
20503	public static String whichDoctypeSystem ( Document doc ) { DocumentType doctype ; doctype = doc . getDoctype ( ) ; if ( doctype != _NULL ) { try { return doctype . getSystemId ( ) ; } catch ( Error except ) { } } if ( doc instanceof HTMLDocument ) return DTD . XHTMLSystemId ; return _NULL ; }
20519	public void conjunctWith ( Term t ) { terms . add ( t ) ; }
20549	public boolean has ( String key ) { validateKey ( key ) ; Entry entry ; synchronized ( mDiskCacheLock ) { entry = mLruEntries . get ( key ) ; } return entry != _NULL && entry . isReadable ( ) && entry . getCleanFile ( ) . exists ( ) ; }
20641	@ Override public boolean goBack ( ) { if ( webView . canGoBack ( ) ) { webView . goBack ( ) ; return _BOOL ; } return _BOOL ; }
20698	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_ENTER_INSTANCE_COOL_TIME_HOUR ( String worldname0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 , value1 ) ; }
20754	public static boolean isUIdContainedInSetOfOpenFiles ( String name , long uId ) { final Pair < String , Long > pair = new Pair < > ( name , uId ) ; Integer count = openFiles . get ( pair ) ; return count != _NULL && count > _NUM ; }
20766	private void populateResultListView ( List < BookmarkMatch > ids ) { if ( ids . isEmpty ( ) ) { setUIState ( UIState . EMPTY ) ; } else { setUIState ( UIState . RESULT ) ; mResultList . setAdapter ( new ResultListAdapter ( ids , mDelegate ) ) ; } }
20770	public TapTarget icon ( Drawable icon , boolean hasSetBounds ) { if ( icon == _NULL ) throw new IllegalArgumentException ( _CHAR Can not use _NULL drawable _CHAR ) ; this . icon = icon ; if ( ! hasSetBounds ) { this . icon . setBounds ( new Rect ( _NUM , _NUM , this . icon . getIntrinsicWidth ( ) , this . icon . getIntrinsicHeight ( ) ) ) ; } return this ; }
20857	public static boolean isBookSearchUrl ( String url ) { return url . startsWith ( _CHAR http : // google . com / books '' ) || url . startsWith ( '' http : // books . google . '' ) ; }
20883	protected void mouseClicked ( int mouseX , int mouseY , int mouseButton ) { try { super . mouseClicked ( mouseX , mouseY , mouseButton ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } this . guiTextField . mouseClicked ( mouseX , mouseY , mouseButton ) ; }
20921	public static Bundler of ( Bundle b ) { return new Bundler ( b ) ; }
20976	private boolean useForAllProtocols ( Properties settings ) { return Boolean . parseBoolean ( settings . getProperty ( _CHAR / system / http_proxy / use_same_proxy _CHAR , _CHAR _BOOL _CHAR ) ) ; }
21011	public double lengthSquared ( ) { return NumberConversions . square ( x ) + NumberConversions . square ( y ) + NumberConversions . square ( z ) ; }
21013	public static byte [ ] decode ( byte [ ] source ) throws Base64DecoderException { return decode ( source , _NUM , source . length ) ; }
21048	protected PhotosGetChatUploadServerQuery chatId ( int value ) { return unsafeParam ( _CHAR chat_id _CHAR , value ) ; }
21076	public boolean containsElement ( String elementName ) { return typeMap . containsKey ( elementName ) ; }
21081	public boolean isEmpty ( ) { return ( geometryType == _NULL ) || segmentList . isEmpty ( ) ; }
21092	public static SM_SYSTEM_MESSAGE STR_MSG_WILL_DELETE_ITEM_CHANGE_TO_PUBLIC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
21106	@ NonNull public Job . Builder newJobBuilder ( ) { return new Job . Builder ( mValidator ) ; }
21113	public void waitForAnimationFinish ( final WebElement element , int timeout ) { final Deque < Point > locations = new ArrayDeque < > ( ) ; isConditionMet ( _NULL , timeout ) ; }
21116	public boolean containsBafBody ( ) { Iterator < SootMethod > methodIt = methodIterator ( ) ; while ( methodIt . hasNext ( ) ) { SootMethod m = methodIt . next ( ) ; if ( m . hasActiveBody ( ) && m . getActiveBody ( ) instanceof soot . baf . BafBody ) { return _BOOL ; } } return _BOOL ; }
21135	public int send ( OutputStream out ) throws IOException { out . write ( this . fileBuff , this . offset , this . length ) ; return _NUM ; }
21150	public static float convertDpToPixel ( float dp , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float px = dp * ( ( float ) metrics . densityDpi / DisplayMetrics . DENSITY_DEFAULT ) ; return px ; }
21153	public boolean anyNotifyWriteTemplates ( ) { return _anyNotifyWriteTemplates ; }
21170	@ Before public void beforeTest ( ) throws IOException { ( ( AbstractApplicationContext ) context ) . start ( ) ; processFacade . start ( _NUM , _CHAR hostname _CHAR , new Timestamp ( System . currentTimeMillis ( ) ) ) ; reset ( mockManager ) ; }
21207	public boolean canBeCollidedWith ( ) { return ! this . isDead ; }
21208	private static boolean intersectsLngEdge ( S2Point a , S2Point b , R1Interval lat , double lng ) { return S2 . simpleCrossing ( a , b , S2LatLng . fromRadians ( lat . lo ( ) , lng ) . toPoint ( ) , S2LatLng . fromRadians ( lat . hi ( ) , lng ) . toPoint ( ) ) ; }
21220	public SumReducer ignoreExceptions ( ) { this . ignoreExceptions = _BOOL ; return this ; }
21268	public Collection < V > values ( ) { Collection < V > values = new LinkedList < > ( ) ; for ( Map < C , V > row : dataMap . values ( ) ) { values . addAll ( row . values ( ) ) ; } return values ; }
21311	public static SpaceIndex createPropertyIndex ( String propertyName , SpaceIndexType indexType ) { return createPropertyIndex ( propertyName , indexType , _BOOL ) ; }
21422	protected int maxDayInMonthFor ( int year , int month ) { if ( month == _NUM || month == _NUM || month == _NUM || month == _NUM ) { return _NUM ; } else if ( month == _NUM ) { if ( isLeapYear ( year ) ) { return _NUM ; } else { return _NUM ; } } else { return _NUM ; } }
21438	public void attribute ( String elemName , String attrName , String type , String value ) { ElementType e = getElementType ( elemName ) ; if ( e == _NULL ) { throw new Error ( _CHAR Attribute _CHAR + attrName + _CHAR specified for unknown element type '' + elemName ) ; } e . setAttribute ( attrName , type , value ) ; }
21466	private void reportDisplaySelection ( @ Nullable GSAContextDisplaySelection displaySelection ) { Tab currentTab = mActivity . getActivityTab ( ) ; reportUsageOfCurrentContextIfPossible ( currentTab , _BOOL , displaySelection ) ; }
21545	public JSONArray put ( int value ) { put ( new Integer ( value ) ) ; return this ; }
21561	public FriendsGetRequestsQuery needMutual ( Boolean value ) { return unsafeParam ( _CHAR need_mutual _CHAR , value ) ; }
21618	public static SM_SYSTEM_MESSAGE STR_REMOVE_ITEM_OPTION_NOT_ENOUGH_GOLD ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
21619	public AdsGetSuggestionsQuery cities ( String value ) { return unsafeParam ( _CHAR cities _CHAR , value ) ; }
21630	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_MAGIC_OTHER_NPC ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
21657	public static PinnedKeyspaceBuilder pin ( Keyspace keyspace ) { return new PinnedKeyspaceBuilder ( keyspace ) ; }
21666	static Iterable < Enum > createAdditionalServiceEnums ( ) { String fileName = _CHAR struct . proto _CHAR ; List < Enum > additionalEnums = Lists . newArrayList ( ) ; additionalEnums . add ( TypesBuilderFromDescriptor . createEnum ( NullValue . getDescriptor ( ) . getFullName ( ) , NullValue . getDescriptor ( ) . toProto ( ) , fileName ) ) ; return additionalEnums ; }
21675	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonTrap_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
21710	public StoredListIterator < T > establishListScan ( boolean random_scan ) { if ( isEmpty ( ) ) return _NULL ; StoredListIterator < T > slh = _SLHolderPool . get ( ) ; StoredListIterator < T > res = establishPos ( random_scan , slh ) ; if ( res == _NULL ) slh . release ( ) ; return res ; }
21730	public EventPoller < E > newPoller ( Sequence ... gatingSequences ) { return sequencer . newPoller ( this , gatingSequences ) ; }
21742	@ Override public void close ( ) throws java . io . IOException { flushBase64 ( ) ; super . close ( ) ; buffer = _NULL ; out = _NULL ; }
21795	private boolean isAfterParent ( final BSPTree < Sphere1D > node ) { final BSPTree < Sphere1D > parent = node . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return node == childAfter ( parent ) ; } }
21804	public static String readLine ( ) { String line ; try { line = scanner . nextLine ( ) ; } catch ( NoSuchElementException e ) { line = _NULL ; } return line ; }
21856	public static byte [ ] decode ( byte [ ] source ) throws Base64DecoderException { return decode ( source , _NUM , source . length ) ; }
21864	@ PostConstruct public final void init ( ) throws ConfUnknownTypeException , ConfRejectedTypeException { Runtime . getRuntime ( ) . addShutdownHook ( this . ksh ) ; processMessageReceiver . setKernel ( this ) ; processMessageReceiver . setRequestController ( requestController ) ; configure ( ) ; }
21886	public void fling ( long time , float x , float y , float velocityX , float velocityY ) { getActiveStripLayoutHelper ( ) . fling ( time , x , y , velocityX , velocityY ) ; }
21959	public final void copy ( byte [ ] bytes , int offset , int length ) { if ( this . bytes == _NULL || this . bytes . length < length ) { this . bytes = new byte [ length ] ; } System . arraycopy ( bytes , offset , this . bytes , _NUM , length ) ; this . count = length ; }
21988	public boolean hit ( float x , float y ) { return mBounds . contains ( x , y ) ; }
22051	private static boolean isLowercaseLetter ( char ch ) { return ( _CHAR <= ch && ch <= _CHAR ) ; }
22077	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
22083	public void remove ( Vertex v ) throws Exception { if ( hVertexTypes . containsKey ( v ) ) hVertexTypes . remove ( v ) ; super . remove ( v ) ; }
22097	public static Map < String , List < Distributable >> nodeBlockMapping ( List < Distributable > blockInfos , int noOfNodesInput ) { return nodeBlockMapping ( blockInfos , noOfNodesInput , _NULL ) ; }
22109	private void removeLiveCacheInvalidation ( final TagQualityStatus statusToRemove ) { LOG . debug ( _CHAR removeLiveCacheInvalidation ( ) - removing _CHAR + statusToRemove + _CHAR from _CHAR + liveCache . size ( ) + _CHAR tag entries . '' ) ; for ( ClientDataTagImpl cdt : liveCache . values ( ) ) { cdt . validate ( statusToRemove ) ; } }
22116	public static SM_SYSTEM_MESSAGE STR_CHANGE_REMAIN_PLAYTIME ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22119	private boolean isBetterThan ( int a , int b ) { if ( bigIsGood ) { return a > b ; } else { return a < b ; } }
22137	@ Override public void customize ( ConfigurableEmbeddedServletContainer container ) { MimeMappings mappings = new MimeMappings ( MimeMappings . DEFAULT ) ; mappings . add ( _CHAR html _CHAR , _CHAR text / html ; charset = utf - _NUM _CHAR ) ; mappings . add ( _CHAR json _CHAR , _CHAR text / html ; charset = utf - _NUM _CHAR ) ; container . setMimeMappings ( mappings ) ; setLocationForStaticAssets ( container ) ; }
22142	public boolean dynamic_order ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR dynamic - order _CHAR ) ; }
22158	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
22196	public long lowestOnBit ( ) { return id & - id ; }
22207	public static String formatBigFraction ( final BigFraction f ) { return getImproperInstance ( ) . format ( f ) ; }
22240	public PlacesGetCheckinsQuery timestamp ( Integer value ) { return unsafeParam ( _CHAR timestamp _CHAR , value ) ; }
22252	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_CHANGE_LOOT_HE_DENIED_MY_ASK ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
22253	protected void savePassCodeAndExit ( ) { Intent resultIntent = new Intent ( ) ; resultIntent . putExtra ( KEY_PASSCODE , mPassCodeDigits [ _NUM ] + mPassCodeDigits [ _NUM ] + mPassCodeDigits [ _NUM ] + mPassCodeDigits [ _NUM ] ) ; setResult ( RESULT_OK , resultIntent ) ; finish ( ) ; }
22270	public void java_lang_System_getCallerClass ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getClassObject ( ) ) ; }
22279	synchronized static void ensureSecurityManager ( ) { if ( System . getSecurityManager ( ) == _NULL ) { System . setSecurityManager ( new RMISecurityManager ( ) ) ; } }
22302	public static void writeString ( DataOutputStream os , String s ) throws IOException { if ( s == _NULL ) { os . writeInt ( - _NUM ) ; } else { byte array [ ] = s . getBytes ( ) ; os . writeInt ( array . length ) ; os . write ( array ) ; } }
22342	public Builder zoomControl ( Boolean zoomControl ) { this . zoomControl = zoomControl ; return this ; }
22343	public void build ( ) throws XmlParsingException , FileNotFoundException { strategy . parse ( cplFile ) ; strategy . build ( ) ; }
22371	public SafeHtml processHtml ( SafeHtml html ) { return html ; }
22386	public boolean isByteFeature ( int index ) { return _NUM <= index && index < byteValuedDiscreteFeatures . length ; }
22407	public boolean isGenericBlock ( ) { return isOptionEnabled ( UrlFilterRuleOption . GENERIC_BLOCK ) ; }
22436	public VideoGetQueryWithExtended ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
22464	protected void writeEntityToNBT ( NBTTagCompound compound ) { compound . setShort ( _CHAR Fuse _CHAR , ( short ) this . getFuse ( ) ) ; compound . setByte ( _CHAR Facing _CHAR , ( byte ) this . getFacing ( ) . getIndex ( ) ) ; }
22541	private void invokeResources ( AppCompatActivity activity ) { try { Field resources = AppCompatActivity . class . getDeclaredField ( _CHAR mResources _CHAR ) ; resources . setAccessible ( _BOOL ) ; resources . set ( activity , _NULL ) ; } catch ( NoSuchFieldException e ) { e . printStackTrace ( ) ; } catch ( IllegalAccessException e ) { e . printStackTrace ( ) ; } }
22578	public BoardUnfixTopicQuery unfixTopic ( UserActor actor , int groupId , int topicId ) { return new BoardUnfixTopicQuery ( getClient ( ) , actor , groupId , topicId ) ; }
22596	private void replaceTop ( Scope topOfStack ) { stack . set ( stack . size ( ) - _NUM , topOfStack ) ; }
22632	public static void runOnUiThread ( Runnable runnable ) { if ( isMainThread ( ) ) { runnable . run ( ) ; } else { post ( runnable ) ; } }
22634	public static boolean isChinese ( int codePoint ) { return codePoint >= ChineseLanguageConstants . CHINESE_START && codePoint <= ChineseLanguageConstants . CHINESE_END ; }
22725	public static boolean hasSelfPermissions ( Context context , String ... permissions ) { for ( String permission : permissions ) { if ( permissionExists ( permission ) && ! hasSelfPermission ( context , permission ) ) { return _BOOL ; } } return _BOOL ; }
22800	public boolean isSingleton ( ) { return _BOOL ; }
22809	@ Override public void finish ( ) { if ( mAccountAuthenticatorResponse != _NULL ) { if ( mResultBundle != _NULL ) { mAccountAuthenticatorResponse . onResult ( mResultBundle ) ; } else { mAccountAuthenticatorResponse . onError ( AccountManager . ERROR_CODE_CANCELED , _CHAR canceled _CHAR ) ; } mAccountAuthenticatorResponse = _NULL ; } super . finish ( ) ; }
22905	public void trimToSize ( ) { if ( _data . length > size ( ) ) { short [ ] tmp = new short [ size ( ) ] ; toNativeArray ( tmp , _NUM , tmp . length ) ; _data = tmp ; } }
22937	protected boolean isAwareOf ( VisibleObject newObject ) { return _BOOL ; }
22958	public void reelect ( ) throws InterruptedException , ActiveElectionException , RemoteException { changeState ( getState ( ) , State . PENDING , _BOOL ) ; elect ( ) ; }
23019	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_SUMMONED_CRITICAL ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
23081	public static void writeObjectToFile ( String path , Object toWrite , JavaSparkContext sc ) throws IOException { writeObjectToFile ( path , toWrite , sc . sc ( ) ) ; }
23082	protected boolean isTemporaryDestination ( ) { boolean result = _BOOL ; if ( m_TopicName . startsWith ( TEMP_TOPIC_PREFIX ) ) { result = _BOOL ; } return result ; }
23084	public void writePacket ( byte [ ] buffer , SocketAddress dest ) throws IOException { DatagramPacket dp = new DatagramPacket ( buffer , buffer . length , dest ) ; socket . send ( dp ) ; }
23113	@ JsonIgnore public QueryContext fork ( ) { return new QueryContext ( new HashMap < > ( contextMap ) , this . totalQueries ) ; }
23143	public String toString ( ) { return super . toString ( ) + _CHAR [ charsetName = _CHAR + charsetName + _CHAR ] _CHAR ; }
23144	public void addBreak ( ) { Item wordItem = relation . getTail ( ) ; if ( wordItem != _NULL ) { FeatureSet featureSet = wordItem . getFeatures ( ) ; featureSet . setString ( _CHAR break '' , '' 1 '' ) ; } }
23180	private String pickCharset ( ) { if ( charset != _NULL ) { return charset ; } else if ( utf8Supported ) { return _CHAR UTF - _NUM _CHAR ; } else { return System . getProperty ( _CHAR file . encoding _CHAR ) ; } }
23299	private void updateView ( ) { if ( rebuildItems ( ) ) { calculateLayoutWidth ( getWidth ( ) , MeasureSpec . EXACTLY ) ; layout ( getWidth ( ) , getHeight ( ) ) ; } }
23315	@ Override public void startDocument ( ) throws SAXException { saxParser = _NULL ; abandonHope = _BOOL ; return ; }
23318	public PhotosSaveMessagesPhotoQuery saveMessagesPhoto ( Actor actor , String photo ) { return new PhotosSaveMessagesPhotoQuery ( getClient ( ) , actor , photo ) ; }
23342	public static SM_SYSTEM_MESSAGE STR_MSG_STIGMA_ENCHANT_FAIL ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
23364	@ Override public final void separator ( short separator , Augmentations augs ) throws XNIException { if ( separator == XMLDTDContentModelHandler . SEPARATOR_CHOICE ) { fOpStack [ fDepth ] = XMLContentSpec . CONTENTSPECNODE_CHOICE ; } else if ( separator == XMLDTDContentModelHandler . SEPARATOR_SEQUENCE ) { fOpStack [ fDepth ] = XMLContentSpec . CONTENTSPECNODE_SEQ ; } }
23377	public static boolean hasSelfPermissions ( Context context , String ... permissions ) { for ( String permission : permissions ) { if ( permissionExists ( permission ) && ! hasSelfPermission ( context , permission ) ) { return _BOOL ; } } return _BOOL ; }
23386	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_HE_IS_BANISHED ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
23514	public static Tailer create ( File file , TailerListener listener , long delayMillis , boolean end ) { return create ( file , listener , delayMillis , end , DEFAULT_BUFSIZE ) ; }
23518	public boolean isVirtual ( ) { return this == VIRTUAL ; }
23522	protected boolean isTemporaryDestination ( ) { boolean result = _BOOL ; if ( m_queueName . startsWith ( TEMP_QUEUE_PREFIX ) ) { result = _BOOL ; } return result ; }
23628	public boolean isTemplateOnList ( String title , String template ) { boolean isOnList ; SiteAdminGridRow row = getRowByTitle ( title ) ; isOnList = template . equals ( row . getTemplateName ( ) ) ; if ( ! isOnList ) { LOG . debug ( _CHAR there is no template { } with title { } on the list _CHAR , template , title ) ; } return isOnList ; }
23632	public boolean isUseMemoryOnlySearch ( ) { return useMemoryOnlySearch ; }
23682	protected AdsImportTargetContactsQuery contacts ( String value ) { return unsafeParam ( _CHAR contacts _CHAR , value ) ; }
23850	public static BigDecimal safeAdd ( BigDecimal left , BigDecimal right ) { return right != _NULL ? left . add ( right ) : left ; }
23861	private boolean shouldContract ( ) { if ( expansionMode == ExpansionMode . MULTIPLICATIVE ) { return ( internalArray . length / ( ( float ) numElements ) ) > contractionCriterion ; } else { return ( internalArray . length - numElements ) > contractionCriterion ; } }
23925	public boolean canZoomOutMoreY ( ) { return ( mScaleY > mMinScaleY ) ; }
23936	public static int limit ( int number , int between , int and ) { if ( number <= between ) { return between ; } if ( number >= and ) { return and ; } return number ; }
23969	public static final < T > boolean isConvertible ( final Object value , final Class < T > clazz ) { return ( castToType ( value , clazz ) != _NULL ) ; }
23988	public void close ( ) throws IOException { getFooterSectionRMA6 ( ) . setStartFooterSection ( readerWriter . getPosition ( ) ) ; getFooterSectionRMA6 ( ) . write ( readerWriter ) ; readerWriter . close ( ) ; readerWriter = _NULL ; }
23991	void dismiss ( ) { if ( isShowing ( ) ) { mPopup . dismiss ( ) ; } }
24023	public static boolean isGoUp ( KeyEvent event ) { return isActionDown ( event ) && ( event . getKeyCode ( ) == KeyEvent . KEYCODE_DPAD_UP || ( ! event . isNumLockOn ( ) && event . getKeyCode ( ) == KeyEvent . KEYCODE_NUMPAD_8 ) ) ; }
24024	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
24063	public int allowed_modifier_changes ( ) { String s = soot . PhaseOptions . getString ( options , _CHAR allowed - modifier - changes _CHAR ) ; if ( s . equalsIgnoreCase ( _CHAR unsafe _CHAR ) ) return allowed_modifier_changes_unsafe ; if ( s . equalsIgnoreCase ( _CHAR safe _CHAR ) ) return allowed_modifier_changes_safe ; if ( s . equalsIgnoreCase ( _CHAR none _CHAR ) ) return allowed_modifier_changes_none ; throw new RuntimeException ( _CHAR Invalid value _CHAR + s + _CHAR of phase option allowed - modifier - changes _CHAR ) ; }
24124	public static ValueGetterSpacePredicate < ServerEntry > pathAnd ( String path , ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return path ( path , and ( leftPredicate , rightPredicate ) ) ; }
24172	public static SecretKey generateKey ( byte [ ] key , String algorithm ) throws EncodingException { try { SecretKey skey = new SecretKeySpec ( key , algorithm ) ; return skey ; } catch ( Exception e ) { throw new EncodingException ( e ) ; } }
24190	@ Override public void clusterOnline ( ClusterNode clusterNode ) { LOGGER . info ( _CHAR Detected Terracotta cluster online event for node : '' + clusterNode . getId ( ) ) ; }
24192	public void watchMonitoredHostCache ( PreferenceChangeListener pcl ) { addListener ( INT_KEY_MONHOST_CACHE , pcl ) ; }
24193	private void addOutsideTouching ( final SubHyperplane < S > sub , final List < BSPTree < S >> splitters ) { if ( outsideTouching == _NULL ) { outsideTouching = sub ; } else { outsideTouching = outsideTouching . reunite ( sub ) ; } outsideSplitters . addAll ( splitters ) ; }
24201	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
24222	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
24246	private boolean isNotValidRequestId ( String requestId ) { return requestId == _NULL || requestId . isEmpty ( ) || requestId . length ( ) > _NUM || ! VALID_REQUEST_ID . matcher ( requestId ) . matches ( ) ; }
24260	private Iterator < byte [ ] > load ( ColumnIdentifier columnIdentifier , long startOffset , long endOffset ) throws IOException { CarbonDictionaryReader dictionaryReader = getDictionaryReader ( columnIdentifier ) ; try { Iterator < byte [ ] > columnDictionaryChunkWrapper = dictionaryReader . read ( startOffset , endOffset ) ; return columnDictionaryChunkWrapper ; } finally { dictionaryReader . close ( ) ; } }
24302	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
24358	public BitSet isScanRequired ( byte [ ] [ ] blkMaxVal , byte [ ] [ ] blkMinVal ) { BitSet bitSet = new BitSet ( _NUM ) ; bitSet . flip ( _NUM , _NUM ) ; return bitSet ; }
24362	public JsonWriter newJsonWriter ( Writer writer ) throws IOException { if ( generateNonExecutableJson ) { writer . write ( JSON_NON_EXECUTABLE_PREFIX ) ; } JsonWriter jsonWriter = new JsonWriter ( writer ) ; if ( prettyPrinting ) { jsonWriter . setIndent ( _CHAR _CHAR ) ; } jsonWriter . setSerializeNulls ( serializeNulls ) ; return jsonWriter ; }
24477	public float length ( ) { return FastMath . sqrt ( lengthSquared ( ) ) ; }
24478	public Book toEntity ( BookDTO dto ) { return toEntity ( dto , _NUM ) ; }
24505	public static boolean shuffle ( Object [ ] objArray ) { if ( objArray == _NULL ) { return _BOOL ; } return shuffle ( objArray , getRandom ( objArray . length ) ) ; }
24541	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SubTypeBoostResist_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
24596	public void updateProcessConfiguration ( final ProcessConfigurationUpdate processConfigurationUpdate , final ProcessConfiguration processConfiguration ) throws IllegalAccessException , NoSuchFieldException { fillNonNullFields ( processConfigurationUpdate , processConfiguration , CHANGE_ID_FIELD , PROCESS_ID_FIELD ) ; removeListOfFields ( processConfigurationUpdate . getFieldsToRemove ( ) , processConfiguration ) ; }
24603	public synchronized boolean isPressed ( ) { return this . pressed ; }
24698	public NewsfeedGetQuery maxPhotos ( Integer value ) { return unsafeParam ( _CHAR max_photos _CHAR , value ) ; }
24724	public static boolean isShowErrorDetailsFromIntent ( Intent intent ) { return intent . getBooleanExtra ( CustomActivityOnCrash . EXTRA_SHOW_ERROR_DETAILS , _BOOL ) ; }
24793	public static S2Cap empty ( ) { return new S2Cap ( new S2Point ( _NUM , _NUM , _NUM ) , - _NUM ) ; }
24821	public final boolean greaterEquals ( SaveProtocolVersion version ) { return isComparable ( version ) && ( compareToVersion ( version ) >= _NUM ) ; }
24871	private static boolean isNonEmptyGrid ( Grid grid ) { return grid != _NULL && grid . getVisibleWidth ( ) > _NUM ; }
24899	public void addException ( SootClass e ) { if ( DEBUG ) System . out . println ( _CHAR Adding exception _CHAR + e ) ; if ( exceptions == _NULL ) exceptions = new ArrayList < SootClass > ( ) ; else if ( exceptions . contains ( e ) ) throw new RuntimeException ( _CHAR already throws exception _CHAR + e . getName ( ) ) ; exceptions . add ( e ) ; }
24901	public Role toEntity ( RoleDTO dto ) { return toEntity ( dto , _NUM ) ; }
24903	public void addRuleIds ( final Collection < Long > ruleIds ) { this . ruleIds . addAll ( ruleIds ) ; }
24952	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
24983	public static Aggregate < Map < String , Concept > , Optional < Double >> average ( String varName ) { return Aggregates . average ( varName ) ; }
25008	public void addColumn ( String name , Class type , Object defaultValue ) { Column col = ColumnFactory . getColumn ( type , m_rows . getMaximumRow ( ) + _NUM , defaultValue ) ; addColumn ( name , col ) ; }
25016	private Doc evalParsingTime ( Elem elem ) { try { return Values . convertToDoc ( elem . eval ( new Context ( ImmutableMap . < SnippetKey , Snippet > of ( ) ) ) ) ; } catch ( EvalException e ) { error ( _CHAR parsing time evaluation error : % s _CHAR , e . getMessage ( ) ) ; return Doc . BREAK ; } }
25017	public static Zmat o ( int n ) { return o ( n , n ) ; }
25019	public ZonedTimeGrain withZone ( DateTimeZone dateTimeZone ) { return new ZonedTimeGrain ( this . getBaseTimeGrain ( ) , dateTimeZone ) ; }
25027	public String writeDataFile ( ) throws DataFileException { ByteArrayOutputStream bos = new ByteArrayOutputStream ( ) ; writeDataFile ( bos ) ; String outString = bos . toString ( ) ; try { if ( bos != _NULL ) bos . close ( ) ; } catch ( IOException e ) { Debug . logWarning ( e , module ) ; } return outString ; }
25052	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonGroupGate_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
25076	public static SpaceIndex createPathIndex ( String path , SpaceIndexType indexType ) { return createPathIndex ( path , indexType , _BOOL ) ; }
25087	public static boolean isBookSearchUrl ( String url ) { return url . startsWith ( _CHAR http : // google . com / books '' ) || url . startsWith ( '' http : // books . google . '' ) ; }
25092	public static ValueGetterSpacePredicate < ServerEntry > pathXor ( String path , ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return path ( path , xor ( leftPredicate , rightPredicate ) ) ; }
25093	public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_CASH_REWARD_CASH_UNLIMITED ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
25143	private Bundle updateAppSecretProof ( ) { if ( configuration . useAppsecretProof ( ) ) { if ( mBundle == _NULL ) { mBundle = new Bundle ( ) ; } mBundle . putString ( _CHAR appsecret_proof _CHAR , Utils . encode ( configuration . getAppSecret ( ) , sessionManager . getAccessToken ( ) . getToken ( ) ) ) ; } return mBundle ; }
25152	public void addBreak ( ) { Item wordItem = relation . getTail ( ) ; if ( wordItem != _NULL ) { FeatureSet featureSet = wordItem . getFeatures ( ) ; featureSet . setString ( _CHAR break '' , '' 1 '' ) ; } }
25169	public static ValueGetterSpacePredicate < ServerEntry > pathBetween ( String path , Comparable < ? > low , Comparable < ? > high ) { return path ( path , between ( low , high ) ) ; }
25197	@ Override public boolean onBackPressed ( ) { return getActiveLayout ( ) != _NULL && getActiveLayout ( ) . onBackPressed ( ) ; }
25289	public void stopUsingGPS ( ) { if ( locationManager != _NULL ) { locationManager . removeUpdates ( LocationTracker . this ) ; } }
25296	public static < T > T resolveDefault ( ResourceResolverFactory factory , String userId , ResolveCallback callback , T defaultValue ) { try { return resolve ( factory , userId , callback ) ; } catch ( ResolveException e ) { LOG . error ( RESOLVE_ERROR_MESSAGE , e ) ; } return defaultValue ; }
25314	public void render ( Graphics2D g , double scale ) { this . render ( g , scale , this . color ) ; }
25354	public Builder withOutputRoot ( @ NotNull File outputRoot ) { myOutputRoot = outputRoot ; return this ; }
25381	public void writeFloat ( float value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _FLOAT ) ; this . dataOut . writeFloat ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
25391	@ Override public Result decode ( BinaryBitmap image , Map < DecodeHintType , ? > hints ) throws NotFoundException { setHints ( hints ) ; return decodeInternal ( image ) ; }
25406	public Future < T > [ ] waitForResult ( ) throws InterruptedException { return waitForResult ( - _NUM , TimeUnit . MILLISECONDS ) ; }
25476	public static < T > T readObjectFromFile ( String path , Class < T > type , JavaSparkContext sc ) throws IOException { return readObjectFromFile ( path , type , sc . sc ( ) ) ; }
25543	public static byte [ ] decode ( String s ) throws java . io . IOException { return decode ( s , NO_OPTIONS ) ; }
25548	public static final SM_SYSTEM_MESSAGE STR_MSG_HOUSING_CANT_BID_LOW_LEVEL ( int minLevel ) { return new SM_SYSTEM_MESSAGE ( _NUM , minLevel ) ; }
25593	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
25634	public static ValueCompressonHolder . UnCompressValue unCompressMaxMin ( DataType compDataType , DataType actualDataType ) { switch ( compDataType ) { case DATA_BYTE : return new UnCompressMaxMinByte ( ) ; case DATA_SHORT : return new UnCompressMaxMinShort ( ) ; case DATA_INT : return new UnCompressMaxMinInt ( ) ; case DATA_LONG : return new UnCompressMaxMinLong ( ) ; case DATA_FLOAT : return new UnCompressMaxMinFloat ( ) ; default : return new UnCompressMaxMinDefault ( ) ; } }
25682	public static < T > T resolveDefault ( ResourceResolverFactory factory , ResolveCallback callback , T defaultValue ) { return resolveDefault ( factory , _NULL , callback , defaultValue ) ; }
25696	@ Override public void endPrefixMapping ( String prefix ) throws SAXException { if ( saxParser != _NULL ) { saxParser . endPrefixMapping ( prefix ) ; } }
25744	private boolean isIndexExisting ( String index ) { ActionFuture < IndicesExistsResponse > response = client . admin ( ) . indices ( ) . exists ( new IndicesExistsRequest ( index ) ) ; return response . actionGet ( _NUM ) . isExists ( ) ; }
25797	private boolean sameType ( Object flowSet ) { return ( flowSet instanceof DavaFlowSet ) ; }
25816	public void removeException ( SootClass e ) { if ( DEBUG ) System . out . println ( _CHAR Removing exception _CHAR + e ) ; if ( exceptions == _NULL ) exceptions = new ArrayList < SootClass > ( ) ; if ( ! exceptions . contains ( e ) ) throw new RuntimeException ( _CHAR does not throw exception _CHAR + e . getName ( ) ) ; exceptions . remove ( e ) ; }
25879	public static IOFileFilter nameFileFilter ( String name ) { return new NameFileFilter ( name ) ; }
25884	public SimplifiedIntervalList union ( SimplifiedIntervalList that ) { return simplifyIntervals ( this , that ) ; }
25925	private boolean checkIfExpressionContainsColumn ( Expression expression ) { if ( expression instanceof ColumnExpression ) { return _BOOL ; } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfExpressionContainsColumn ( child ) ) { return _BOOL ; } } return _BOOL ; }
25942	public static double normalize ( double val , double min , double max ) { if ( max < min ) throw new IllegalArgumentException ( _CHAR Max must be greather than min _CHAR ) ; return ( val - min ) / ( max - min ) ; }
25948	public void finish ( ) { if ( mAccountAuthenticatorResponse != _NULL ) { if ( mResultBundle != _NULL ) { mAccountAuthenticatorResponse . onResult ( mResultBundle ) ; } else { mAccountAuthenticatorResponse . onError ( AccountManager . ERROR_CODE_CANCELED , _CHAR canceled _CHAR ) ; } mAccountAuthenticatorResponse = _NULL ; } super . finish ( ) ; }
26028	public void deleteRequest ( @ NonNull Context context , String url , ApiListener apiListener ) { request ( context , Request . Method . DELETE , url , _NULL , apiListener ) ; }
26084	public static SM_SYSTEM_MESSAGE STR_MSG_CANNOT_ENTER_INSTANCE_COOL_TIME_MIN ( String worldname0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname0 , value1 ) ; }
26099	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
26111	public static String readString ( DataInputStream in ) throws IOException { int llength = in . readInt ( ) ; if ( llength == - _NUM ) return _NULL ; byte a [ ] = new byte [ llength ] ; in . readFully ( a , _NUM , llength ) ; return new String ( a ) ; }
26169	private void updateView ( ) { if ( rebuildItems ( ) ) { calculateLayoutWidth ( getWidth ( ) , MeasureSpec . EXACTLY ) ; layout ( getWidth ( ) , getHeight ( ) ) ; } }
26177	@ Override public void postEvent ( EventLogEvent event ) { AuditLogEntryEnvelope auditLogEntryEnvelope = new AuditLogEntryEnvelope ( createFromEvent ( event ) , repository ) ; LOGGER . debug ( _CHAR posting auditLogEntryEnvelope : { } _CHAR , auditLogEntryEnvelope ) ; threadPoolExecutor . submit ( auditLogEntryEnvelope ) ; LOGGER . debug ( _CHAR posted auditLogEntryEnvelope : { } _CHAR , auditLogEntryEnvelope ) ; }
26209	public CountModifiers remove ( CountModifiers modifiers ) { return createIfNeeded ( super . remove ( modifiers ) ) ; }
26217	public Role toEntity ( RoleDTO dto , int depth ) { if ( dto == _NULL ) { return _NULL ; } Role role = new Role ( ) ; role . setId ( dto . id ) ; role . setRoleName ( dto . roleName ) ; if ( depth -- > _NUM ) { } return role ; }
26265	public void deactivate ( ) { mSensorManager . unregisterListener ( this ) ; mInitialRotationMatrix = _NULL ; mActive = _BOOL ; }
26389	public boolean documentFitsView ( ) { if ( swipeVertical ) { return getPageCount ( ) * optimalPageHeight < getHeight ( ) ; } else { return getPageCount ( ) * optimalPageWidth < getWidth ( ) ; } }
26400	private void validityCheck ( ) { if ( m_row == - _NUM ) { throw new IllegalStateException ( _CHAR This tuple is no longer valid . '' + _CHAR It has been deleted from its table _CHAR ) ; } }
26420	public PollsAddVoteQuery addVote ( UserActor actor , int pollId , int answerId ) { return new PollsAddVoteQuery ( getClient ( ) , actor , pollId , answerId ) ; }
26422	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SwitchHPMP_Instant_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
26446	public Builder className ( String className ) { this . className = className ; return this ; }
26516	public static void assertCommitterLineMatches ( GitRepository repo , String commitRef , String regex ) throws RepoException { assertLineWithPrefixMatches ( repo , commitRef , _CHAR committer _CHAR , regex ) ; }
26518	public void onSuccess ( int statusCode , byte [ ] binaryData ) { onSuccess ( binaryData ) ; }
26556	public static SM_SYSTEM_MESSAGE STR_CHANGE_ITEM_SKIN_NOT_ENOUGH_GOLD ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
26564	public static Intent createGetContentIntent ( ) { final Intent intent = new Intent ( Intent . ACTION_GET_CONTENT ) ; intent . setType ( _CHAR */* '' ) ; intent . addCategory ( Intent . CATEGORY_OPENABLE ) ; return intent ; }
26621	public static void onSync ( Project project , BlazeContext context , ProjectViewSet projectViewSet , BlazeProjectData blazeProjectData , BlazeSyncParams . SyncMode syncMode ) { for ( FileCache fileCache : FileCache . EP_NAME . getExtensions ( ) ) { Scope . push ( context , _NULL ) ; } LocalFileSystem . getInstance ( ) . refresh ( _BOOL ) ; }
26636	int onCount ( String tableName , String [ ] conditions ) { return mathQuery ( tableName , new String [ ] { _CHAR count ( _NUM ) _CHAR } , conditions , int . class ) ; }
26667	@ Override public void onChangeTheme ( Theme theme ) { mColorModeButtons . get ( theme ) . setChecked ( _BOOL ) ; }
26696	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
26721	public void onDestroy ( ) { this . stop ( ) ; }
26734	public LookupExtractionFunction withRetainMissingValue ( Boolean retainMissingValue ) { return new LookupExtractionFunction ( lookup , retainMissingValue , replaceMissingValueWith , injective , optimize ) ; }
26775	protected boolean shouldDrawValues ( IDataSet set ) { return set . isVisible ( ) && set . isDrawValuesEnabled ( ) ; }
26802	public static float calculateAngleFrom ( VisibleObject obj1 , VisibleObject obj2 ) { return calculateAngleFrom ( obj1 . getX ( ) , obj1 . getY ( ) , obj2 . getX ( ) , obj2 . getY ( ) ) ; }
26841	public synchronized ZooKeeperClientBuilder zkc ( ZooKeeperClient zkc ) { this . cachedClient = zkc ; return this ; }
26886	public void upgradeDataDimensionItemsToReportingRateMetric ( ) { String sql = _CHAR update datadimensionitem _CHAR + _CHAR set metric =_CHAR _CHAR + _CHAR where datasetid is not _NULL _CHAR + _CHAR and metric is _NULL ; _CHAR ; executeSql ( sql ) ; }
26892	public Builder primaryColor ( int colorPrimary ) { this . stepNumberBackgroundColor = colorPrimary ; this . buttonBackgroundColor = colorPrimary ; return this ; }
26894	public boolean isFirstTimeUser ( ) { return getPreference ( _CHAR firstTimeUser _CHAR , _BOOL ) ; }
26912	public int model ( ) { return theType . model ( ) ; }
26938	public static ValueGetterSpacePredicate < ServerEntry > propertyBetween ( String propertyName , Comparable < ? > low , Comparable < ? > high ) { return property ( propertyName , between ( low , high ) ) ; }
26950	private JsonWriter open ( int empty , String openBracket ) throws IOException { beforeValue ( ) ; push ( empty ) ; out . write ( openBracket ) ; return this ; }
27058	private void replaceTop ( int topOfStack ) { stack [ stackSize - _NUM ] = topOfStack ; }
27086	public WriteModifiers remove ( WriteModifiers modifiers ) { return createIfNeeded ( super . remove ( modifiers ) ) ; }
27109	public void openProperties ( DataSource dataSource , int propertiesCategory ) { if ( dataSource == _NULL ) throw new IllegalArgumentException ( _CHAR DataSource can not be _NULL _CHAR ) ; PropertiesConfigurator . editProperties ( dataSource , propertiesCategory ) ; }
27119	public Iterator < Edge > edgesInto ( MethodOrMethodContext m ) { return new CallersOfMethodIterator ( m ) ; }
27141	@ Override public boolean hasMoreData ( ) { return hasMoreData ; }
27144	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
27145	public IntIterator nodeRows ( ) { return getNodeTable ( ) . rows ( ) ; }
27150	private String extractDeclaringTypeFQN ( CompletionProposal methodProposal ) { char [ ] declaringTypeSignature = methodProposal . getDeclarationSignature ( ) ; if ( declaringTypeSignature == _NULL ) return _CHAR java . lang . Object _CHAR ; return SignatureUtil . stripSignatureToFQN ( String . valueOf ( declaringTypeSignature ) ) ; }
27230	public int model ( ) { return theType . model ( ) ; }
27236	public ShimpleBody newBody ( SootMethod m , Map < String , String > options ) { return new ShimpleBody ( m , options ) ; }
27259	public static < T extends Serializable , R > DistributedTask < T , R > task ( Callable < T > callable , AsyncResultsReducer < T , R > reducer , AsyncResultFilter < T > filter ) { return new CallableDistributedTaskAdapter < T , R > ( callable , reducer , filter ) ; }
27290	public void addEdge ( Object from , Object to ) { if ( ! super . containsNode ( from ) ) super . addNode ( from ) ; if ( ! super . containsNode ( to ) ) super . addNode ( to ) ; super . addEdge ( from , to ) ; }
27299	public PointsToSet reachingObjects ( Context c , Local l ) { return reachingObjects ( l ) ; }
27333	private double nextAfter ( final double t ) { final double dir = forward ? Double . POSITIVE_INFINITY : Double . NEGATIVE_INFINITY ; return FastMath . nextAfter ( t , dir ) ; }
27383	@ Override public void endElement ( String name ) throws SAXException { if ( saxParser != _NULL ) { saxParser . endElement ( name ) ; } }
27390	@ Override public void parseXPointer ( String part ) throws XNIException { fShortHandPointer = part ; fIsFragmentResolved = _BOOL ; }
27409	public static boolean writeFile ( String filePath , InputStream stream ) { return writeFile ( filePath , stream , _BOOL ) ; }
27437	public static SM_SYSTEM_MESSAGE STR_PARTY_ALLIANCE_PICKUP_ITEM_ALL_ACCEPT_HIM ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
27497	public static final void convertColor ( Color color , float [ ] destination ) { color . getRGBComponents ( destination ) ; }
27499	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
27536	public boolean hasWhereClause ( ) { if ( _expression == _NULL ) return _BOOL ; String trimmed = _expression . trim ( ) ; return ! ( trimmed . length ( ) == _NUM || ORDER . matcher ( trimmed ) . matches ( ) || GROUP . matcher ( trimmed ) . matches ( ) ) ; }
27598	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
27629	public static ValueGetterSpacePredicate < ServerEntry > pathOr ( String path , ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return path ( path , or ( leftPredicate , rightPredicate ) ) ; }
27682	public PhotosReorderAlbumsQuery after ( Integer value ) { return unsafeParam ( _CHAR after _CHAR , value ) ; }
27706	public INDArray toRaveledTensor ( InputStream is ) { return toBgr ( is ) . ravel ( ) ; }
27712	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Reflector_INTERVAL_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
27731	@ LegacyNetworkConstant private int convertConstraintsToLegacyNetConstant ( int constraintMap ) { int reqNet = LEGACY_NETWORK_ANY ; reqNet = ( constraintMap & Constraint . ON_ANY_NETWORK ) == Constraint . ON_ANY_NETWORK ? LEGACY_NETWORK_CONNECTED : reqNet ; reqNet = ( constraintMap & Constraint . ON_UNMETERED_NETWORK ) == Constraint . ON_UNMETERED_NETWORK ? LEGACY_NETWORK_UNMETERED : reqNet ; return reqNet ; }
27736	public void addRelationshipFilter ( RelatedFinder relatedFinder , Operation filter ) { Operation existing = this . filters . get ( relatedFinder ) ; this . filters . put ( relatedFinder , existing == _NULL ? filter : existing . or ( filter ) ) ; }
27737	public void onPatchServiceResult ( boolean isUpgradePatch ) { if ( ! isRetryEnable ) { TinkerLog . w ( TAG , _CHAR onPatchServiceResult retry disabled , just return _CHAR ) ; return ; } if ( ! isUpgradePatch ) { TinkerLog . w ( TAG , _CHAR onPatchServiceResult is not upgrade patch , just return _CHAR ) ; return ; } if ( retryInfoFile . exists ( ) ) { SharePatchFileUtil . safeDeleteFile ( retryInfoFile ) ; } if ( tempPatchFile . exists ( ) ) { SharePatchFileUtil . safeDeleteFile ( tempPatchFile ) ; } }
27766	public ISourceCommandTag findCommandTag ( final Long commandTagId ) { Map < Long , EquipmentConfiguration > equipmentMap = getProcessConfiguration ( ) . getEquipmentConfigurations ( ) ; for ( EquipmentConfiguration equipmentConfiguration : equipmentMap . values ( ) ) { if ( equipmentConfiguration . hasSourceCommandTag ( commandTagId ) ) { return equipmentConfiguration . getSourceCommandTag ( commandTagId ) ; } } return _NULL ; }
27834	public boolean removeAll ( Collection < ? > collection ) { return MapCollections . removeAllHelper ( this , collection ) ; }
27839	public AudioSaveQuery hash ( String value ) { return unsafeParam ( _CHAR hash _CHAR , value ) ; }
27842	private static boolean isUppercaseLetter ( char ch ) { return ( _CHAR <= ch && ch <= _CHAR ) ; }
27870	public void attribute ( String elemName , String attrName , String type , String value ) { ElementType e = getElementType ( elemName ) ; if ( e == _NULL ) { throw new Error ( _CHAR Attribute _CHAR + attrName + _CHAR specified for unknown element type '' + elemName ) ; } e . setAttribute ( attrName , type , value ) ; }
27874	@ SafeVarargs public static final < T > T firstNonNull ( T ... objects ) { if ( objects != _NULL ) { for ( T object : objects ) { if ( object != _NULL ) { return object ; } } } return _NULL ; }
27882	@ Override public void onAttachedToWindow ( ) { super . onAttachedToWindow ( ) ; setupBounds ( ) ; setupPaints ( ) ; invalidate ( ) ; }
27896	private void checkAtEnd ( ) { if ( ! hasSynErrors && matched ) { syntaxError ( _CHAR unrecognized input : _CHAR ) ; } }
27915	@ Override public void characters ( char ch [ ] , int start , int length ) throws SAXException { if ( saxParser != _NULL ) { saxParser . characters ( ch , start , length ) ; } }
27925	@ Override public void endElement ( String namespaceURI , String localName , String qName ) throws SAXException { if ( saxParser != _NULL ) { saxParser . endElement ( namespaceURI , localName , qName ) ; } }
27934	public < T > T recall ( String path , Class < T > type ) throws IOException { return recall ( new File ( path ) , type ) ; }
27952	public synchronized BookKeeperClientBuilder bkc ( BookKeeperClient bkc ) { this . cachedClient = bkc ; return this ; }
27962	public Iterator < Edge > edgesOutOf ( Unit u ) { return new TargetsOfUnitIterator ( u ) ; }
27992	public BoardCreateCommentQuery message ( String value ) { return unsafeParam ( _CHAR message _CHAR , value ) ; }
27997	public boolean isShortFeature ( int index ) { index -= numByteFeatures ; return _NUM <= index && index < numShortFeatures ; }
28002	public static < T extends Serializable , R > DistributedTask < T , R > task ( Runnable runnable , T result , AsyncResultsReducer < T , R > reducer , AsyncResultFilter < T > filter ) { return new RunnableDistributedTaskAdapter < T , R > ( runnable , result , reducer , filter ) ; }
28026	boolean shouldPreviousTapResolve ( @ Nullable URL url ) { if ( isTapResolveBeyondTheLimit ( ) ) { return _BOOL ; } if ( isPromoAvailable ( ) ) { return isBasePageHTTP ( url ) ; } return _BOOL ; }
28084	public void triangulateYMonotonePolygons ( ) { List < MonotonePolygon < DoubleEdgeListVertex >> monotonePolygons = this . getYMonotonePolygons ( ) ; int size = monotonePolygons . size ( ) ; for ( int i = _NUM ; i < size ; i ++ ) { this . triangulateYMonotonePolygon ( monotonePolygons . get ( i ) ) ; } }
28088	public Iterator tuples ( IntIterator rows ) { return m_tuples . iterator ( rows ) ; }
28136	public void loadDataStringFromFile ( String sFilename ) throws java . io . IOException , java . io . FileNotFoundException { String sDataString = utils . loadFileToStringWithNewlines ( sFilename ) ; setDataString ( sDataString ) ; }
28137	public static AirMap init ( Context context ) { return init ( context , _CHAR _CHAR ) ; }
28141	public FriendsGetRequestsQueryWithExtended count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
28147	public VideoReorderAlbumsQuery before ( Integer value ) { return unsafeParam ( _CHAR before _CHAR , value ) ; }
28240	public Builder filter ( Filter filter ) { actionList . add ( new DataAction ( filter ) ) ; return this ; }
28299	public void unregisterDrop ( Npc npc ) { Integer npcObjId = npc . getObjectId ( ) ; Map < Integer , DropNpc > dropRegmap = DropRegistrationService . getInstance ( ) . getDropRegistrationMap ( ) ; DropRegistrationService . getInstance ( ) . getCurrentDropMap ( ) . remove ( npcObjId ) ; if ( dropRegmap . containsKey ( npcObjId ) ) { dropRegmap . remove ( npcObjId ) ; } }
28311	public boolean requestInterceptPreScroll ( CoordinatorLayout parent ) { return _BOOL ; }
28356	protected void readEntityFromNBT ( NBTTagCompound compound ) { this . setFuse ( compound . getShort ( _CHAR Fuse _CHAR ) ) ; this . setFacing ( compound . getByte ( _CHAR Facing _CHAR ) ) ; }
28366	public void addColumn ( String name , Class type ) { addColumn ( name , type , _NULL ) ; }
28374	public boolean isGridDashedLineEnabled ( ) { return mGridDashPathEffect != _NULL ; }
28375	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
28394	public boolean isNegative ( ) { return years < _NUM || months < _NUM || days < _NUM || hours < _NUM || minutes < _NUM || seconds < _NUM || milliseconds < _NUM ; }
28397	public void onDestroy ( ) { this . stop ( ) ; }
28426	public static void main ( String [ ] args ) { Thread thread = new Thread ( new WebBrowserConnection ( ) ) ; thread . start ( ) ; }
28458	private void clustering ( int tagetClusterSize ) { clustering ( tagetClusterSize , _CHAR Average _CHAR ) ; }
28534	public static Map < String , Object > createDataResource ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = createDataResourceMethod ( dctx , context ) ; return result ; }
28540	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
28576	public LogSegmentMetadata remove ( String name ) { synchronized ( logSegments ) { LogSegmentMetadata metadata = logSegments . remove ( name ) ; if ( _NULL != metadata ) { lid2LogSegments . remove ( metadata . getLedgerId ( ) , metadata ) ; LOG . debug ( _CHAR Removed log segment ( { } : { } ) from cache . '' , name , metadata ) ; } return metadata ; } }
28577	public static ValueGetterSpacePredicate < ServerEntry > propertyOr ( String propertyName , ISpacePredicate leftPredicate , ISpacePredicate rightPredicate ) { return property ( propertyName , or ( leftPredicate , rightPredicate ) ) ; }
28631	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_MAGIC_PARTY ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
28669	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_PROTECT_A_to_ME ( String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster ) ; }
28675	@ Override public void close ( ) { idx = _NUM ; mark = _NUM ; }
28783	public FriendsGetRequestsQueryWithNeedMutual count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
28789	@ Override public boolean bulkAdd ( IndexRequest request ) { if ( bulkProcessor == _NULL ) { log . error ( _CHAR bulkProcessor is _NULL . This should not happen ! _CHAR ) ; return _BOOL ; } if ( request == _NULL ) { return _BOOL ; } bulkProcessor . add ( request ) ; log . trace ( _CHAR bulkAdd ( ) - BulkProcessor will handle indexing of new index . '' ) ; return _BOOL ; }
28799	@ Override public void toggle ( ) { setChecked ( ! isChecked ) ; }
28824	public boolean hasPermissionsByInternalId ( String internalId , Collection < Permission > permissions ) { AuthorizationInfo authorizationInfo = getAuthorizationInfoByInternalId ( internalId ) ; return authorizationInfo != _NULL && isPermittedAll ( permissions , authorizationInfo ) ; }
28842	@ VisibleForTesting MinidumpUploadCallable createMinidumpUploadCallable ( File minidumpFile , File logfile ) { return new MinidumpUploadCallable ( minidumpFile , logfile , getApplicationContext ( ) ) ; }
28855	public Variance withBiasCorrection ( boolean biasCorrection ) { return new Variance ( this . moment , this . incMoment , biasCorrection ) ; }
28893	public double apply ( UnivariateStatistic stat ) { return eDA . compute ( stat ) ; }
28948	public void remove ( int childRow ) { int parentRow = m_childToParent . getInt ( childRow ) ; m_childToParent . setInt ( - _NUM , childRow ) ; m_parentToChild . remove ( parentRow ) ; }
28995	private synchronized void addLockObject ( AbsoluteTableIdentifier absoluteTableIdentifier ) { if ( _NULL == tableLockMap . get ( absoluteTableIdentifier ) ) { tableLockMap . put ( absoluteTableIdentifier , new Object ( ) ) ; } }
29054	public static List < DockerPortMapping > fromMap ( Map < String , List < Map < String , String >> > map ) { return map . entrySet ( ) . stream ( ) . map ( _NULL ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; }
29068	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
29092	public static boolean isGoRight ( KeyEvent event ) { return isActionDown ( event ) && ( event . getKeyCode ( ) == KeyEvent . KEYCODE_DPAD_RIGHT || ( ! event . isNumLockOn ( ) && event . getKeyCode ( ) == KeyEvent . KEYCODE_NUMPAD_6 ) ) ; }
29093	public static SM_SYSTEM_MESSAGE STR_CANNOT_QUIT_DURING_BATTLE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29124	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Summon_A_TO_B ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
29171	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_MY_SUMMONED_ENEMY_CRITICAL ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
29235	@ Override public void skippedEntity ( String name ) throws SAXException { if ( saxParser != _NULL ) { saxParser . skippedEntity ( name ) ; } }
29257	public boolean isLast ( ) { return last ; }
29292	private void updateView ( ) { if ( rebuildItems ( ) ) { calculateLayoutWidth ( getWidth ( ) , MeasureSpec . EXACTLY ) ; layout ( getWidth ( ) , getHeight ( ) ) ; } }
29364	private Object readResolve ( ) { if ( type == ERROR . type ) { return ERROR ; } else if ( type == WARNING . type ) { return WARNING ; } else if ( type == NOTICE . type ) { return NOTICE ; } else if ( type == NORMAL . type ) { return NORMAL ; } else { throw new IllegalArgumentException ( _CHAR illegal type _CHAR ) ; } }
29366	public void config ( Configuration config , String prefix , String name ) { String completionsFile = config . getPrefixProperty ( prefix , _CHAR Completions . File _CHAR , _CHAR NONE _CHAR ) ; if ( completionsFile != _NULL ) { completions = JarServiceProvider . readStringsMap ( completionsFile ) ; } }
29385	@ Override public boolean isInterrupted ( ) { return interrupted ; }
29388	public void screenshot ( ) { currentTest . get ( ) . screenshot ( ) ; }
29479	public void addSubEquipmentIds ( final Collection < Long > subEquipmentIds ) { for ( Long subEquipmentId : subEquipmentIds ) { addSubEquipmentId ( subEquipmentId ) ; } }
29494	public static boolean isDigit ( char ch ) { return ( _CHAR <= ch && ch <= _CHAR ) ; }
29522	public void add ( double d ) { data . add ( ( float ) d ) ; }
29558	public Activity cancel ( String action ) { return m_actions . cancel ( action ) ; }
29579	public int allowed_modifier_changes ( ) { String s = soot . PhaseOptions . getString ( options , _CHAR allowed - modifier - changes _CHAR ) ; if ( s . equalsIgnoreCase ( _CHAR unsafe _CHAR ) ) return allowed_modifier_changes_unsafe ; if ( s . equalsIgnoreCase ( _CHAR safe _CHAR ) ) return allowed_modifier_changes_safe ; if ( s . equalsIgnoreCase ( _CHAR none _CHAR ) ) return allowed_modifier_changes_none ; throw new RuntimeException ( _CHAR Invalid value _CHAR + s + _CHAR of phase option allowed - modifier - changes _CHAR ) ; }
29631	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_ENTER_GIVEUP ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29640	public static Float hgToHpa ( float hg ) { return ( float ) ( hg * _NUM . _NUM ) ; }
29643	public LookupExtractionFunction withReplaceMissingValueWith ( String replaceMissingValueWith ) { return new LookupExtractionFunction ( lookup , retainMissingValue , replaceMissingValueWith , injective , optimize ) ; }
29650	protected void timeout ( ) { }
29663	private static byte to_byte_ ( int b ) { assert ( b >= _NUM && b < _NUM ) ; return ( byte ) b ; }
29677	public TapTarget tintTarget ( boolean tint ) { this . tintTarget = tint ; return this ; }
29690	public AudioAddAlbumQuery groupId ( Integer value ) { return unsafeParam ( _CHAR group_id _CHAR , value ) ; }
29691	public static SM_SYSTEM_MESSAGE STR_STIGMA_CANNT_EQUIP_STONE_OUT_OF_AVAILABLE_STIGMA_POINT ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
29720	public boolean isCallerValid ( Context context , int authRequirements ) { return isCallerValid ( context , authRequirements , _CHAR _CHAR ) ; }
29741	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonTotem_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
29754	public Builder riseOffset ( Number riseOffset ) { this . riseOffset = riseOffset ; return this ; }
29783	public static float convertDpToPixel ( float dp , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float px = dp * ( metrics . densityDpi / _NUM ) ; return px ; }
29817	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
29830	public void clear ( ) { items . clear ( ) ; Iterator siter = springs . iterator ( ) ; Spring . SpringFactory f = Spring . getFactory ( ) ; while ( siter . hasNext ( ) ) f . reclaim ( ( Spring ) siter . next ( ) ) ; springs . clear ( ) ; }
29839	public void shutDown ( ) { setTab ( _NULL ) ; if ( mLayerTitleCache != _NULL ) mLayerTitleCache . shutDown ( ) ; mCompositorView . shutDown ( ) ; }
29845	public static void putInt ( String key , int value ) { prefs . edit ( ) . putInt ( key , value ) . commit ( ) ; }
29849	private static boolean checkOffset ( String value , int offset , char expected ) { return ( offset < value . length ( ) ) && ( value . charAt ( offset ) == expected ) ; }
29853	@ NotNull private Point viewToModel ( @ NotNull Point p ) { return new Point ( ( int ) ( p . x / myScale ) , ( int ) ( p . y / myScale ) ) ; }
29867	public void put ( int i , double real , double imag ) { re [ i ] = real ; im [ i ] = imag ; }
29939	private Object handleRuleWithNoInvalidTags ( final Map < Long , Object > pInputParams ) throws RuleEvaluationException { final Object [ ] valueTokens = splitToTokens ( pInputParams ) ; final Object result = Parser . getInstance ( ) . eval ( valueTokens ) ; return result ; }
29954	public final boolean containsKey ( String name ) { return mMap . containsKey ( name ) ; }
30009	public boolean equals ( Object obj ) { if ( ! ( obj instanceof ConnectionRelativeTime ) ) { return _BOOL ; } ConnectionRelativeTime cc = ( ConnectionRelativeTime ) obj ; return time == cc . time ; }
30072	@ Override public void startPrefixMapping ( String prefix , String uri ) throws SAXException { if ( saxParser != _NULL ) { saxParser . startPrefixMapping ( prefix , uri ) ; } }
30150	public static java . sql . Time toSqlTime ( int hour , int minute , int second ) { java . util . Date newDate = toDate ( _NUM , _NUM , _NUM , hour , minute , second ) ; if ( newDate != _NULL ) { return new java . sql . Time ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
30162	void cancelExecutingJob ( ) { mCallbackHandler . obtainMessage ( MSG_CANCEL ) . sendToTarget ( ) ; }
30216	@ Override public List < Integer > readSortIndex ( ) throws IOException { if ( _NULL == columnSortInfo ) { readColumnSortInfo ( ) ; } return columnSortInfo . getSort_index ( ) ; }
30247	protected WallGetQueryWithExtended extended ( Boolean value ) { return unsafeParam ( _CHAR extended _CHAR , value ) ; }
30336	public boolean containsKey ( String key ) { return context . containsKey ( key ) ; }
30351	@ Override public void processingInstruction ( String target , String data ) throws SAXException { if ( saxParser != _NULL ) { saxParser . processingInstruction ( target , data ) ; } }
30402	public static boolean isGoDown ( KeyEvent event ) { return isActionDown ( event ) && ( event . getKeyCode ( ) == KeyEvent . KEYCODE_DPAD_DOWN || ( ! event . isNumLockOn ( ) && event . getKeyCode ( ) == KeyEvent . KEYCODE_NUMPAD_2 ) ) ; }
30465	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_FRIENDLY_CRITICAL ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
30467	public boolean hasPermissionsByInternalId ( String internalId , String ... permissions ) { List < Permission > resolvedPermissions = Lists . newArrayListWithCapacity ( permissions . length ) ; for ( String permission : permissions ) { resolvedPermissions . add ( getPermissionResolver ( ) . resolvePermission ( permission ) ) ; } return hasPermissionsByInternalId ( internalId , resolvedPermissions ) ; }
30481	static < T extends REAL , REAL > AnyVal < T > typeAlias ( TypeAliasType < REAL , T > typeAliasType ) { return new AnyAlias < > ( typeAliasType ) ; }
30562	public static float convertDpToPixel ( float dp , Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; float px = dp * ( metrics . densityDpi / _NUM ) ; return px ; }
30586	public boolean canZoomOutMoreX ( ) { return ( mScaleX > mMinScaleX ) ; }
30631	protected AudioSaveQuery server ( int value ) { return unsafeParam ( _CHAR server _CHAR , value ) ; }
30641	protected void assertNoCurrentVariantSet ( String errorMessage , List < Long > localeIds , Long tmTextUnitId ) { for ( Long localeId : localeIds ) { TMTextUnitCurrentVariant currentVariant = tmTextUnitCurrentVariantRepository . findByLocale_IdAndTmTextUnit_Id ( localeId , tmTextUnitId ) ; assertNull ( errorMessage , currentVariant ) ; } }
30666	public static ExisitingJiniTransactionHolder unbindExistingTransactionIfPossible ( ) { return ( ExisitingJiniTransactionHolder ) TransactionSynchronizationManager . unbindResourceIfPossible ( CONTEXT ) ; }
30675	private File findSettingsFile ( File settingsFile ) { Logger . log ( getClass ( ) , LogLevel . TRACE , _CHAR Searching Kde settings in { _NUM } _CHAR , settingsFile ) ; if ( ! settingsFile . exists ( ) ) { Logger . log ( getClass ( ) , LogLevel . DEBUG , _CHAR Settings not found _CHAR ) ; return _NULL ; } Logger . log ( getClass ( ) , LogLevel . TRACE , _CHAR Settings found _CHAR ) ; return settingsFile ; }
30727	public boolean isDragEnabled ( ) { return mDragEnabled ; }
30754	public static boolean handle ( EntityPlayer player , BlockPos pos ) { SleepCheck event = new SleepCheck ( player , pos , player . worldObj . getBlockState ( pos ) . getBlock ( ) == Blocks . BED ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event . result ; }
30808	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonHoming_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
30838	public static IOFileFilter nameFileFilter ( String name , IOCase caseSensitivity ) { return new NameFileFilter ( name , caseSensitivity ) ; }
30911	public long generateNewPingId ( ) { PreferenceStore prefs = getPreferenceStore ( ) ; Random rnd = new Random ( ) ; long id = rnd . nextLong ( ) ; synchronized ( DdmsPreferenceStore . class ) { prefs . setValue ( PING_ID , id ) ; try { prefs . save ( ) ; } catch ( IOException e ) { } } return id ; }
30957	protected void initFileLocation ( ) { PathService pathService = CarbonCommonFactory . getPathService ( ) ; CarbonTablePath carbonTablePath = pathService . getCarbonTablePath ( columnIdentifier , this . hdfsStorePath , carbonTableIdentifier ) ; this . columnDictionaryMetadataFilePath = carbonTablePath . getDictionaryMetaFilePath ( columnIdentifier . getColumnId ( ) ) ; }
30976	@ SuppressWarnings ( _CHAR rawtypes _CHAR ) private boolean sameType ( Object flowSet ) { return ( flowSet instanceof ArrayPackedSet && ( ( ArrayPackedSet ) flowSet ) . map == map ) ; }
31085	public static ProbeItemDescriptor discreteLineItem ( String name , String description , ItemValueFormatter formatter ) { return discreteOutlineItem ( name , description , formatter , _NUM , _NUM , MAX_VALUE_UNDEFINED , DEFAULT_LINE_WIDTH , DEFAULT_COLOR , _NULL ) ; }
31131	public static < X , Y > boolean containsSubclass ( Set < ? extends Class < ? extends Y >> classes , X superclassInstance ) { for ( Class < ? extends Y > classs : classes ) if ( classs . isInstance ( superclassInstance ) ) return _BOOL ; return _BOOL ; }
31132	public static Bundler of ( Bundle b ) { return new Bundler ( b ) ; }
31159	public boolean acceptsParent ( @ NotNull NlComponent layout , @ NotNull NlComponent newChild ) { return _BOOL ; }
31220	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_OTHER_NPC_CRITICAL ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
31238	protected PsiFile createPsiFile ( String filePath ) { return getPsiFile ( testFixture . getTempDirFixture ( ) . createFile ( filePath ) ) ; }
31338	public void run ( ) { try { Thread . sleep ( timeout ) ; thread . interrupt ( ) ; } catch ( InterruptedException e ) { } }
31354	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
31397	public static SM_SYSTEM_MESSAGE STR_COMPOUND_ERROR_NOT_ENOUGH_MONEY ( int i , int j ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( i ) , new DescriptionId ( j ) ) ; }
31438	public String rawString ( ) { return rawString ; }
31461	public void endAddingQueries ( ) throws IOException { getFooterSectionRMA6 ( ) . setEndReadsSection ( readerWriter . getPosition ( ) ) ; getFooterSectionRMA6 ( ) . setNumberOfReads ( totalNumberOfReads ) ; getFooterSectionRMA6 ( ) . setNumberOfMatches ( totalNumberOfMatches ) ; }
31462	public PhotosReorderPhotosQuery before ( Integer value ) { return unsafeParam ( _CHAR before _CHAR , value ) ; }
31472	public Builder trackResize ( Boolean trackResize ) { this . trackResize = trackResize ; return this ; }
31493	public static long nowInMillis ( ) { return System . currentTimeMillis ( ) ; }
31534	public static boolean isChinese ( int codePoint ) { return codePoint >= ChineseLanguageConstants . CHINESE_START && codePoint <= ChineseLanguageConstants . CHINESE_END ; }
31612	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_EQUIP_ITEM ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
31640	public static < T extends Comparable < ? super T >> List < T > sort ( List < T > list ) { Collections . sort ( list ) ; return list ; }
31657	public boolean isEmpty ( ) { return this . results == _NULL || this . results . isEmpty ( ) ; }
31819	public < T > List < T > listItems ( SectionKey < T , ListSection < T >> key ) { List < T > result = Lists . newArrayList ( ) ; for ( ListSection < T > section : getSections ( key ) ) { result . addAll ( section . items ( ) ) ; } return result ; }
31855	public static boolean checkIfLeftExpressionRequireEvaluation ( Expression expression ) { if ( expression . getFilterExpressionType ( ) == ExpressionType . UNKNOWN || ! ( expression instanceof ColumnExpression ) ) { return _BOOL ; } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfLeftExpressionRequireEvaluation ( child ) ) { return _BOOL ; } } return _BOOL ; }
31973	public final void dropDocumentReferences ( ) { fDocument = _NULL ; fDocumentImpl = _NULL ; fDeferredDocumentImpl = _NULL ; fDocumentType = _NULL ; fCurrentNode = _NULL ; fCurrentCDATASection = _NULL ; fCurrentEntityDecl = _NULL ; fRoot = _NULL ; }
31974	public Builder className ( String className ) { this . className = className ; return this ; }
31982	public Vector rotateInRadian ( double radians ) { final double length = length ( ) ; double angle = angleInRadian ( ) ; angle += radians ; final Vector result = new Vector ( Math . cos ( angle ) , Math . sin ( angle ) ) ; return result . multiply ( length ) ; }
32001	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CloseAerial_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
32032	protected void onUnregisterObserver ( ) { }
32189	public void trimToSize ( ) { if ( _data . length > size ( ) ) { int [ ] tmp = new int [ size ( ) ] ; toNativeArray ( tmp , _NUM , tmp . length ) ; _data = tmp ; } }
32207	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
32262	@ Deprecated public void onSuccess ( int statusCode , String content ) { onSuccess ( content ) ; }
32279	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DeathBlow_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
32319	public static Map < String , List < Distributable >> nodeBlockMapping ( List < Distributable > blockInfos ) { return nodeBlockMapping ( blockInfos , - _NUM ) ; }
32339	public static SpaceIndex createPathIndex ( String path , SpaceIndexType indexType , boolean unique ) { return createPathIndex_Impl ( path , indexType , unique ) ; }
32387	public VideoReorderVideosQuery afterVideoId ( Integer value ) { return unsafeParam ( _CHAR after_video_id _CHAR , value ) ; }
32389	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BackDashATK_ME_TO_SELF ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
32406	public boolean isFifo ( ) { return fifo ; }
32487	public void createScriptRunner ( final IKBus eventBus , final Executor executor ) { if ( scriptRunner == _NULL ) { this . scriptRunner = new ScriptRunner ( eventBus , this , executor ) ; } }
32514	public void delete ( ) { mBaseName . delete ( ) ; mBackupName . delete ( ) ; }
32561	public void writeLong ( long value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _LONG ) ; this . dataOut . writeLong ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
32588	public static boolean needRecalculate ( String returnAdjustmentTypeId ) { return _CHAR RET_PROMOTION_ADJ _CHAR . equals ( returnAdjustmentTypeId ) || _CHAR RET_DISCOUNT_ADJ _CHAR . equals ( returnAdjustmentTypeId ) || _CHAR RET_SALES_TAX_ADJ _CHAR . equals ( returnAdjustmentTypeId ) ; }
32601	public static void logDuration ( boolean wereResultsSeen , boolean isChained , long durationMs ) { if ( wereResultsSeen ) { RecordHistogram . recordTimesHistogram ( _CHAR Search . ContextualSearchDurationSeen _CHAR , durationMs , TimeUnit . MILLISECONDS ) ; } else if ( isChained ) { RecordHistogram . recordTimesHistogram ( _CHAR Search . ContextualSearchDurationUnseenChained _CHAR , durationMs , TimeUnit . MILLISECONDS ) ; } else { RecordHistogram . recordTimesHistogram ( _CHAR Search . ContextualSearchDurationUnseen _CHAR , durationMs , TimeUnit . MILLISECONDS ) ; } }
32605	public EntityQuery maxRows ( int maxRows ) { this . maxRows = maxRows ; return this ; }
32619	public static SM_SYSTEM_MESSAGE STR_COMBINE_NO_COMPONENT_ITEM_MULTIPLE ( int num1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num1 , value0 ) ; }
32640	public Set < C > columnKeySet ( ) { Set < C > set = new HashSet < > ( ) ; for ( Map < C , V > row : dataMap . values ( ) ) { set . addAll ( row . keySet ( ) ) ; } return set ; }
32646	public static SM_SYSTEM_MESSAGE STR_MSG_COMBAT_PARTY_CRITICAL ( String value0 , int num2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num2 , value1 ) ; }
32692	public void close ( ) throws IOException { super . close ( ) ; }
32826	public boolean isInstance ( ) { return kind . isInstance ( ) ; }
32837	private void notifyProcessTags ( final Long processId ) { Process process = processCache . getCopy ( processId ) ; for ( Long equipmentId : process . getEquipmentIds ( ) ) { notifyEquipmentTags ( equipmentId ) ; } }
32843	public static Map < String , Object > createImage ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = createImageMethod ( dctx , context ) ; return result ; }
32855	public Plan createQueryPlan ( String qry , Transaction tx ) { Parser parser = new Parser ( qry ) ; QueryData data = parser . queryCommand ( ) ; Verifier . verifyQueryData ( data , tx ) ; return qPlanner . createPlan ( data , tx ) ; }
32861	public static NestableTransaction . Created create ( NestableTransactionManager mgr , long leaseTime ) throws LeaseDeniedException , RemoteException { TransactionManager . Created rawTxn = mgr . create ( leaseTime ) ; NestableServerTransaction tx = new NestableServerTransaction ( mgr , rawTxn . id , _NULL , leaseTime ) ; return new NestableTransaction . Created ( tx , rawTxn . lease ) ; }
32881	public char next ( char c ) throws JSONException { char n = next ( ) ; if ( n != c ) { throw syntaxError ( _CHAR Expected _CHAR_CHAR_CHAR and instead saw _CHAR_CHAR_CHAR _CHAR ) ; } return n ; }
32908	public void initGui ( ) { }
32929	public boolean isGuaranteedDelivery ( ) { return this . guaranteedDelivery ; }
32943	static void commitElement ( ConstraintModel model , @ NotNull ConstraintWidget widget ) { AttributesTransaction transaction = updateElement ( model , widget ) ; if ( transaction != _NULL ) { transaction . commit ( ) ; } }
32946	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
32960	public static DiscCacheAware createReserveDiscCache ( File cacheDir ) { File individualDir = new File ( cacheDir , _CHAR uil - images _CHAR ) ; if ( individualDir . exists ( ) || individualDir . mkdir ( ) ) { cacheDir = individualDir ; } return new TotalSizeLimitedDiscCache ( cacheDir , _NUM * _NUM * _NUM ) ; }
32965	public boolean isConnected ( ) { synchronized ( lock ) { return connected ; } }
33012	public static ProxiedAuthV1RequestControl newControl ( final DN authorizationName ) { Reject . ifNull ( authorizationName ) ; return new ProxiedAuthV1RequestControl ( authorizationName ) ; }
33013	public MaterialBarcodeScannerBuilder withActivity ( @ NonNull Activity activity ) { this . mRootView = ( ViewGroup ) activity . findViewById ( android . R . id . content ) ; this . mActivity = activity ; return this ; }
33028	private ByteString evaluateResponse ( ByteString response ) throws SaslException { if ( response == _NULL ) { response = ByteString . empty ( ) ; } final byte [ ] evalResponse = saslServer . evaluateResponse ( response . toByteArray ( ) ) ; if ( evalResponse == _NULL ) { return ByteString . empty ( ) ; } else { return ByteString . wrap ( evalResponse ) ; } }
33073	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR UnbindRequest ( ) _CHAR ) ; }
33086	public boolean validate ( Set < String > values ) { if ( values . size ( ) > _NUM ) { for ( String value : values ) { if ( ! StringUtils . isNotEmpty ( value ) ) { return _BOOL ; } } return _BOOL ; } return _BOOL ; }
33088	public ImmutableList < MessageType > filterDocumentingMessages ( ProtoContainerElement element ) { ImmutableList . Builder < MessageType > builder = ImmutableList . builder ( ) ; for ( MessageType msg : element . getMessages ( ) ) { if ( ! msg . isMapEntry ( ) ) { builder . add ( msg ) ; } } return builder . build ( ) ; }
33098	public String password ( ) { return password ; }
33159	public JobService jobRange ( long from , long to , String order , Handler < AsyncResult < List < Job >> > handler ) { delegate . jobRange ( from , to , order , handler ) ; return this ; }
33203	public boolean contains ( DsnNetId p_net_id ) { return nets . containsKey ( p_net_id ) ; }
33207	public SetupParameters jmxPort ( int jmxPort ) { this . jmxPort = jmxPort ; return this ; }
33255	private static Unmarshaller assertionFailed ( ) throws JAXBException { throw new JAXBException ( Messages . format ( Messages . RESULT_NULL_CONTEXT ) ) ; }
33313	public Time createTime ( ) throws SdpException { TimeField timeImpl = new TimeField ( ) ; timeImpl . setZero ( ) ; return timeImpl ; }
33324	public boolean isIcon ( ) { return isIcon ; }
33355	public static boolean logout ( String sessionID , HttpServletRequest request , HttpServletResponse response ) throws SSOException { return logout ( AuthD . getSession ( sessionID ) , SSOTokenManager . getInstance ( ) . createSSOToken ( sessionID ) , request , response ) ; }
33356	public void allowDetachToRelease ( boolean allowRelease ) { }
33417	@ DataProvider ( name = _CHAR identifiedChoicdeIdentifierValues _CHAR ) public Object [ ] [ ] createIdentifiedChoicdeIdentifierValues ( ) { return new Object [ ] [ ] { { _CHAR serialNumber : _CHAR , _BOOL } , { _CHAR issuer1 : _CHAR , _BOOL } , { _CHAR Serialnumber : _CHAR , _BOOL } , { _CHAR _NUM : _CHAR , _BOOL } , { _CHAR serial Number : _CHAR , _BOOL } , { _CHAR missingColon _CHAR , _BOOL } } ; }
33428	public ImmutableList < A > appendList ( final ListBuffer < A > x ) { return appendList ( x . toList ( ) ) ; }
33442	public boolean useSecureReplication ( ) { return secureReplication ; }
33467	public void mouseReleased ( MouseEvent e ) { ( ( MouseListener ) a ) . mouseReleased ( e ) ; ( ( MouseListener ) b ) . mouseReleased ( e ) ; }
33484	public boolean hasReceiverTypeDispatch ( ) { return MethodHandleNatives . refKindDoesDispatch ( getReferenceKind ( ) ) ; }
33500	public MetadataContainer findMetadataContainer ( final ContainerType type ) { MetadataContainer result = ( MetadataContainer ) getFirst ( type . getContainerGUID ( ) , MetadataContainer . class ) ; if ( result == _NULL ) { result = ( MetadataContainer ) getExtendedHeader ( ) . getFirst ( type . getContainerGUID ( ) , MetadataContainer . class ) ; } return result ; }
33519	private void savePreviousImageValues ( ) { if ( matrix != _NULL ) { matrix . getValues ( m ) ; prevMatrix . setValues ( m ) ; prevMatchViewHeight = matchViewHeight ; prevMatchViewWidth = matchViewWidth ; prevViewHeight = viewHeight ; prevViewWidth = viewWidth ; } }
33520	public void schemaChanged ( String serviceName , String version ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ServiceListenerImpl . schemaChanged : service = _CHAR + serviceName ) ; } ConfigurationActionEvent caevent = new ConfigurationActionEventImpl ( ConfigurationActionEvent . MODIFIED , _NULL , componentName , _NULL ) ; configListener . configChanged ( caevent ) ; }
33631	@ Override public String toString ( ) { return _CHAR FastDateFormat [ _CHAR + printer . getPattern ( ) + _CHAR , _CHAR + printer . getLocale ( ) + _CHAR , _CHAR + printer . getTimeZone ( ) . getID ( ) + _CHAR ] _CHAR ; }
33655	@ Indexable ( type = IndexableType . REINDEX ) @ Override public Foo addFoo ( Foo foo ) { foo . setNew ( _BOOL ) ; return fooPersistence . update ( foo ) ; }
33670	protected void reportWrongNumberArgs ( ) throws WrongNumberArgsException { throw new WrongNumberArgsException ( XSLMessages . createXPATHMessage ( _CHAR two _CHAR , _NULL ) ) ; }
33730	public SignatureVisitor visitTypeArgument ( char wildcard ) { return this ; }
33749	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK ! _CHAR ) ; logger . info ( _CHAR Dialog = _CHAR + requestEvent . getDialog ( ) ) ; logger . info ( _CHAR Dialog State = _CHAR + requestEvent . getDialog ( ) . getState ( ) ) ; this . ackSeen = _BOOL ; }
33782	public String fromSAMLPrimaryTokenId ( String primaryId ) { return encoding . decodeKey ( primaryId ) ; }
33786	public boolean matchesEntry ( Entry entry ) throws DirectoryException { SearchScope scope = getScope ( ) ; if ( scope == _NULL ) { scope = SearchScope . BASE_OBJECT ; } return entry . matchesBaseAndScope ( getBaseDN ( ) , scope ) && getFilter ( ) . matchesEntry ( entry ) ; }
33798	public void reset ( ) { System . arraycopy ( IV , _NUM , cfbV , _NUM , IV . length ) ; cipher . reset ( ) ; }
33883	private void expect ( char expectedSymbol ) throws ParseException { if ( ! accept ( expectedSymbol ) ) throw new ParseException ( _CHAR Expected _CHAR_CHAR_CHAR but found _CHAR_CHAR_CHAR _CHAR , index ) ; }
33914	public void componentHidden ( ComponentEvent e ) { ( ( ComponentListener ) a ) . componentHidden ( e ) ; ( ( ComponentListener ) b ) . componentHidden ( e ) ; }
33933	private final void prevToken ( ) { if ( m_queueMark > _NUM ) { m_queueMark -- ; m_token = ( String ) m_ops . m_tokenQueue . elementAt ( m_queueMark ) ; m_tokenChar = m_token . charAt ( _NUM ) ; } else { m_token = _NULL ; m_tokenChar = _NUM ; } }
33951	public Result modifyDN ( ModifyDNRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . modifyDN ( request ) ; }
33954	public void appendCell ( long value ) { appendCell ( String . valueOf ( value ) ) ; }
33974	@ DataProvider ( name = _CHAR identifiedChoicdeIdentifierValues _CHAR ) public Object [ ] [ ] createIdentifiedChoicdeIdentifierValues ( ) { return new Object [ ] [ ] { { _CHAR serialNumber : _CHAR , _BOOL } , { _CHAR issuer1 : _CHAR , _BOOL } , { _CHAR Serialnumber : _CHAR , _BOOL } , { _CHAR _NUM : _CHAR , _BOOL } , { _CHAR serial Number : _CHAR , _BOOL } , { _CHAR missingColon _CHAR , _BOOL } } ; }
33983	public Collection < ? extends Indexer > createIndexers ( IndexingOptions options ) { return impl . createIndexers ( options ) ; }
34009	public static Polynomial25519 mult ( Polynomial25519 a , Polynomial25519 b ) { Polynomial25519 output = new Polynomial25519 ( ) ; output . c = Polynomial25519 . innerMult ( a . c , b . c ) ; output . reduceDegree ( ) ; output . reduceCoefficients ( ) ; return output ; }
34013	public int hashCode ( ) { return name . hashCode ( ) ; }
34014	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public Object [ ] toArray ( Object [ ] array ) { return events . toArray ( array ) ; }
34086	@ DataProvider ( name = _CHAR namedValueIdentifierValues _CHAR ) public Object [ ] [ ] createNamedValueIdentifierValues ( ) { return new Object [ ] [ ] { { _CHAR serialNumber _CHAR , _BOOL } , { _CHAR issuer _CHAR , _BOOL } , { _CHAR Serialnumber _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR serial Number _CHAR , _BOOL } , { _CHAR missingSpace _CHAR , _BOOL } } ; }
34107	public HeaderIterator iterator ( final String name ) { return new BasicListHeaderIterator ( this . headers , name ) ; }
34164	static < K extends Comparable < K > , V > LogFile < K , V > newReadOnlyLogFile ( final File logFilePath , final RecordParser < K , V > parser ) throws ChangelogException { return new LogFile < > ( logFilePath , parser , _BOOL ) ; }
34167	private void checkReturnType ( Method method ) { TypeVariable < Method > typeParameter = getTypeParameter ( method ) ; Type genericReturnType = method . getGenericReturnType ( ) ; assertEquals ( typeParameter , genericReturnType ) ; assertInstanceOf ( TypeVariable . class , genericReturnType ) ; assertEquals ( method , ( ( TypeVariable < ? > ) genericReturnType ) . getGenericDeclaration ( ) ) ; }
34212	public ByteBufferOutputStream append ( int i ) { return append ( ( double ) i ) ; }
34266	public boolean hashData ( ) { return hashData ; }
34272	public void appendCell ( double value ) { appendCell ( String . valueOf ( value ) ) ; }
34282	public String toString ( ) { return ( _CHAR HTTPBasicPrincipal : _CHAR + name ) ; }
34327	public static GifImageData createGif ( byte [ ] bytes ) { byte [ ] imageType = readImageType ( bytes ) ; if ( imageTypeIs ( imageType , gif ) ) { GifImageData image = new GifImageData ( bytes ) ; GifImageHelper . processImage ( image ) ; return image ; } throw new IllegalArgumentException ( _CHAR GIF image expected . '' ) ; }
34424	public void windowActivated ( WindowEvent e ) { ( ( WindowListener ) a ) . windowActivated ( e ) ; ( ( WindowListener ) b ) . windowActivated ( e ) ; }
34447	@ Indexable ( type = IndexableType . REINDEX ) @ Override public Foo addFoo ( Foo foo ) { foo . setNew ( _BOOL ) ; return fooPersistence . update ( foo ) ; }
34452	public static byte [ ] encodeBase64 ( final byte [ ] binaryData ) { return encodeBase64 ( binaryData , _BOOL ) ; }
34524	public static void error ( Level level , String msgId , String data [ ] , Object session ) { try { logger . error ( level , msgId , data , session ) ; } catch ( LogException le ) { SAMLUtils . debug . error ( _CHAR LogUtils . error : Error writing to _CHAR + _CHAR log : _CHAR , le ) ; } }
34540	public boolean is_placed_on_front ( ) { return _BOOL ; }
34547	public static Short valueOf ( String string , int radix ) throws NumberFormatException { return valueOf ( parseShort ( string , radix ) ) ; }
34671	void updateLabelsForNewResourceSet ( ResourceSetDescription resourceSet ) { JsonValue labels = resourceSet . getDescription ( ) . get ( OAuth2Constants . ResourceSets . LABELS ) ; if ( ! labels . isNull ( ) && labels . size ( ) > _NUM ) { updateLabels ( resourceSet , labels . asCollection ( String . class ) , Collections . < String > emptySet ( ) ) ; } }
34674	protected static final boolean classEquals ( Class first , Class second ) { return first . equals ( second ) || first . getName ( ) . equals ( second . getName ( ) ) ; }
34681	public < T > void addProperty ( PropertyDefinition < T > pd , Collection < T > defaultValues , Collection < T > activeValues ) { MyProperty < T > p = new MyProperty < > ( pd , defaultValues , activeValues ) ; properties . put ( pd , p ) ; }
34778	private static void isVersionNewer ( ) { if ( isConfiguredFlag ) { isVersionNewer = VersionUtils . isVersionNewer ( ) ; } }
34780	@ Override public TagResult generateValue ( TemplateEntry templateEntry , TemplateValue templateValue ) { templateValue . append ( text ) ; return TagResult . SUCCESS_RESULT ; }
34824	public void updateUI ( ) { setUI ( ( RootPaneUI ) UIManager . getUI ( this ) ) ; }
34834	public static boolean isHistoricalAttribute ( Attribute attr ) { AttributeType attrType = attr . getAttributeDescription ( ) . getAttributeType ( ) ; return HISTORICAL_ATTRIBUTE_NAME . equals ( attrType . getNameOrOID ( ) ) ; }
34855	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo addFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return _fooLocalService . addFoo ( foo ) ; }
34886	public boolean isValidFQDN ( String hostname ) { return FqdnValidator . getInstance ( ) . isHostnameValid ( hostname ) ; }
34892	public static QueryExp in ( ValueExp val , ValueExp valueList [ ] ) { return new InQueryExp ( val , valueList ) ; }
34922	public double noise ( double x , double y , double frequency , double amplitude ) { return noise ( x , y , _NUM , frequency , amplitude ) ; }
34932	public void recompose ( StylesheetRoot root ) { root . recomposeKeys ( this ) ; }
34954	public static boolean isFmShortAntennaSupport ( ) { return IS_FM_SHORT_ANTENNA_SUPPORT ; }
34960	static void printStats ( Stats policyStats ) { int cacheSize = _NUM ; synchronized ( subjectEvaluationCache ) { cacheSize = subjectEvaluationCache . size ( ) ; } policyStats . record ( _CHAR SubjectEvaluationCache : Number of entries in _CHAR + _CHAR cache : _CHAR + cacheSize ) ; }
34981	private List < String > toList ( String [ ] array ) { List < String > ret = new ArrayList < String > ( ) ; if ( array != _NULL && array . length > _NUM ) { ret . addAll ( Arrays . asList ( array ) ) ; } return ret ; }
35008	private void updateView ( ) { if ( rebuildItems ( ) ) { calculateLayoutWidth ( getWidth ( ) , MeasureSpec . EXACTLY ) ; layout ( getWidth ( ) , getHeight ( ) ) ; } }
35041	public ByteBufferOutputStream append ( long i ) { return append ( Long . toString ( i ) ) ; }
35051	public static String toTitleCase ( String str ) { if ( str . length ( ) == _NUM ) return str ; else { return Character . toUpperCase ( str . charAt ( _NUM ) ) + str . substring ( _NUM ) . toLowerCase ( ) ; } }
35067	public void schemaChanged ( String serviceName , String version ) { }
35069	public String toPattern ( ) { return toPattern ( _BOOL ) ; }
35112	public int hashCode ( ) { return name . hashCode ( ) ; }
35113	public void addExtension ( DERObjectIdentifier oid , boolean critical , ASN1Encodable value ) { extGenerator . addExtension ( new ASN1ObjectIdentifier ( oid . getId ( ) ) , critical , value ) ; }
35177	public void updateUI ( ) { setUI ( ( ButtonUI ) UIManager . getUI ( this ) ) ; }
35282	public void addMenuDragMouseListener ( MenuDragMouseListener l ) { listenerList . add ( MenuDragMouseListener . class , l ) ; }
35285	public static BigInteger decodeInteger ( final byte [ ] pArray ) { return new BigInteger ( _NUM , decodeBase64 ( pArray ) ) ; }
35287	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK ! _CHAR ) ; logger . info ( _CHAR Dialog = _CHAR + requestEvent . getDialog ( ) ) ; if ( requestEvent . getDialog ( ) != _NULL ) { logger . info ( _CHAR Dialog State = _CHAR + requestEvent . getDialog ( ) . getState ( ) ) ; } this . ackSeen = _BOOL ; }
35302	public void addInitParameter ( String name , String value ) { if ( parameters . containsKey ( name ) ) { return ; } parameters . put ( name , value ) ; }
35312	public static Byte valueOf ( String string , int radix ) throws NumberFormatException { return valueOf ( parseByte ( string , radix ) ) ; }
35342	public String executeCypher ( String serverUrl , String ... cypherStatements ) { return executeCypher ( serverUrl , Collections . < String , String > emptyMap ( ) , cypherStatements ) ; }
35365	public void clear ( ) { if ( arrayTable != _NULL ) { arrayTable . clear ( ) ; } }
35430	public int hashCode ( ) { return ( ( location == _NULL ? _NUM : location . hashCode ( ) << _NUM ) ^ ( env == _NULL ? _NUM : env . hashCode ( ) << _NUM ) ^ ( className == _NULL ? _NUM : className . hashCode ( ) << _NUM ) ^ ( data == _NULL ? _NUM : data . hashCode ( ) ) ) ; }
35438	public int hashCode ( ) { return name . hashCode ( ) ; }
35485	public String encode ( ) { return encode ( new StringBuilder ( ) ) . toString ( ) ; }
35517	public boolean isNotifyListeners ( ) { return notifyListeners ; }
35523	boolean removeEq ( Object o ) { for ( int i = _NUM ; i < size ; i ++ ) { if ( o == queue [ i ] ) { removeAt ( i ) ; return _BOOL ; } } return _BOOL ; }
35552	@ Override public Set < Object > keySet ( ) { checkInitialized ( ) ; return Collections . unmodifiableSet ( super . keySet ( ) ) ; }
35570	public void removeMenuDragMouseListener ( MenuDragMouseListener l ) { listenerList . remove ( MenuDragMouseListener . class , l ) ; }
35576	public Set < String > objectsChanged_idrepo ( int time ) throws RemoteException { initializeCacheSize ( ) ; Set < String > answer = collectChangesFromCache ( time , idrepoCache ) ; if ( idRepoDebug . messageEnabled ( ) ) { idRepoDebug . message ( _CHAR IdRepoJAXRPCObjectImpl . objectsChanged in time : _CHAR + time + _CHAR + _NUM minutes : \ n _CHAR + answer ) ; } return answer ; }
35625	public int hashCode ( ) { return ( int ) objNum ; }
35649	public int hashCode ( ) { return name . hashCode ( ) ; }
35753	public boolean isScheduled ( ) { return scheduledExecutionTime ( ) != - _NUM ; }
35764	public boolean flush ( boolean block , Selector s , long timeout ) throws IOException { return _BOOL ; }
35773	public Boolean isPassive ( ) { return isPassive ; }
35800	private synchronized void readObject ( java . io . ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getName ( ) ) ; }
35834	public static byte [ ] decode ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , DECODABET ) ; }
35852	public static String parseString ( String lexicalXSDString ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseString ( lexicalXSDString ) ; }
35926	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR CompareRequest ( dn = _CHAR ) ; buffer . append ( dn ) ; buffer . append ( _CHAR , attribute = _CHAR ) ; buffer . append ( attributeType ) ; buffer . append ( _CHAR , value = _CHAR ) ; buffer . append ( assertionValue ) ; buffer . append ( _CHAR ) _CHAR ) ; }
35972	public static void executeRandomModifiableVariableModification ( ModifiableVariableHolder object ) { Field field = object . getRandomModifiableVariableField ( ) ; executeModifiableVariableModification ( object , field ) ; }
35994	public static com . liferay . blade . samples . servicebuilder . model . Foo addFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return getService ( ) . addFoo ( foo ) ; }
36005	public void addCellEditorListener ( CellEditorListener l ) { listenerList . add ( CellEditorListener . class , l ) ; }
36074	public synchronized void deleteObservers ( ) { obs . removeAllElements ( ) ; }
36086	public static PdfTargetDictionary createParentTarget ( ) { return new PdfTargetDictionary ( PdfName . P ) ; }
36163	public String toString ( ) { return ( _CHAR AnonymousAuthPrincipal : _CHAR + name ) ; }
36232	public static void access ( Level level , String msgId , String data [ ] ) { access ( level , msgId , data , _NULL ) ; }
36262	boolean configureReplicationServer ( ) { return configureReplicationServer ; }
36267	@ Override public void publish ( LogRecord record ) { super . publish ( record ) ; super . flush ( ) ; }
36320	public static boolean isBookSearchUrl ( String url ) { return url . startsWith ( _CHAR http : // google . com / books '' ) || url . startsWith ( '' http : // books . google . '' ) ; }
36357	private void update ( InternalSession session ) { if ( session . isStored ( ) ) { if ( session . getState ( ) != SessionState . VALID ) { delete ( session ) ; } else if ( ! session . isTimedOut ( ) ) { save ( session ) ; } } }
36409	private void expect ( char expectedSymbol ) throws ParseException { if ( ! accept ( expectedSymbol ) ) throw new ParseException ( _CHAR Expected _CHAR_CHAR_CHAR but found _CHAR_CHAR_CHAR _CHAR , index ) ; }
36430	public void process ( String name , Vector elems , Hashtable atts , String pcdata ) { str = pcdata ; }
36449	public AcceptHeader createAcceptHeader ( String contentType , String contentSubType ) throws ParseException { if ( contentType == _NULL || contentSubType == _NULL ) throw new NullPointerException ( _CHAR contentType or subtype is _NULL _CHAR ) ; Accept accept = new Accept ( ) ; accept . setContentType ( contentType ) ; accept . setContentSubType ( contentSubType ) ; return accept ; }
36501	public static boolean containsUnexpectedMessage ( TlsContext tlsContext ) { return ( getUnexpectedMessagePosition ( tlsContext ) != - _NUM ) ; }
36506	public void keyTyped ( KeyEvent e ) { ( ( KeyListener ) a ) . keyTyped ( e ) ; ( ( KeyListener ) b ) . keyTyped ( e ) ; }
36581	public void clear ( ) { dataMap . clear ( ) ; }
36601	public boolean hasNameOrOID ( final String value ) { return hasName ( value ) || structuralClassOID . equals ( value ) ; }
36608	private static String buildCacheKey ( String realm , String entityId ) { return realm + _CHAR // '' + entityId ; }
36656	public void keyReleased ( KeyEvent e ) { ( ( KeyListener ) a ) . keyReleased ( e ) ; ( ( KeyListener ) b ) . keyReleased ( e ) ; }
36693	public void remove ( ) { previous . next = next ; next . previous = previous ; }
36699	public static PendingIntent buildTriggerServicePendingIntent ( Context context ) { final Intent intent = buildTriggerServiceIntent ( ) ; return PendingIntent . getService ( context , EXECUTE_SCRIPT_REQUEST_CODE , intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; }
36720	public boolean isRightClick ( ) { return click . isRightClick ( ) ; }
36737	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; configFilePath = DirectoryServer . getInstanceRoot ( ) + File . separator + _CHAR config _CHAR + File . separator + _CHAR config . ldif _CHAR ; passwordFilePath = TestCaseUtils . createTempFile ( _CHAR password _CHAR ) ; encodedPasswordFilePath = TestCaseUtils . createTempFile ( _CHAR { SHA } C5wmJdwh7wX2rU3fR8XyA4N6oyw = _CHAR ) ; }
36771	private File retrieveLastRotationTimeFile ( ) { File [ ] files = getCNIndexDBPath ( ) . listFiles ( LAST_ROTATION_TIME_FILE_FILTER ) ; return ( files != _NULL && files . length > _NUM ) ? files [ _NUM ] : _NULL ; }
36795	private void simulateEntryAdd ( Entry entry , ConfigurationRepository configRepository ) throws IOException { ArgumentCaptor < ConfigAddListener > registeredListener = ArgumentCaptor . forClass ( ConfigAddListener . class ) ; verify ( configRepository ) . registerAddListener ( eq ( entry . getName ( ) . parent ( ) ) , registeredListener . capture ( ) ) ; registeredListener . getValue ( ) . configAddIsAcceptable ( entry , new LocalizableMessageBuilder ( ) ) ; }
36796	public boolean isTimedOut ( ) { return timedOutTimeInSeconds != _NUM ; }
36817	public final String toString ( ) { return ( name + ( ( isSource == _BOOL ) ? _CHAR source _CHAR : _CHAR target _CHAR ) + _CHAR port _CHAR ) ; }
36831	public void extend_selection_to_whole_components ( ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; set_interactive_state ( ( ( StateSelectedItem ) interactive_state ) . extent_to_whole_components ( ) ) ; }
36840	public void close ( ) throws java . io . IOException { flushBase64 ( ) ; super . close ( ) ; buffer = _NULL ; out = _NULL ; }
36841	public boolean skipped ( ) { return skipped ; }
36888	public static String decryptLocal ( String encoded ) { return decode ( encoded , localEncryptor ) ; }
36900	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { java . io . ObjectInputStream . GetField fields = s . readFields ( ) ; value = ( char [ ] ) fields . get ( _CHAR value _CHAR , _NULL ) ; count = fields . get ( _CHAR count _CHAR , _NUM ) ; }
36951	public static JLabel createInlineHelpLabel ( LocalizableMessage text ) { JLabel label = new JLabel ( text . toString ( ) ) ; label . setFont ( ColorAndFontConstants . inlineHelpFont ) ; label . setForeground ( ColorAndFontConstants . foreground ) ; return label ; }
36955	protected void reportWrongNumberArgs ( ) throws WrongNumberArgsException { throw new WrongNumberArgsException ( XSLMessages . createXPATHMessage ( _CHAR gtone _CHAR , _NULL ) ) ; }
36971	public void addJob ( String jobId ) { if ( ! jobs . contains ( jobId ) ) { jobs . add ( jobId ) ; } }
37003	public void trimToSize ( ) { delegate . trimToSize ( ) ; }
37026	protected void writeStartTag ( String tag ) throws IOException { indent ( ) ; write ( tag ) ; write ( NEWLINE ) ; incrIndent ( ) ; }
37042	public AttributeSet translateHTMLToCSS ( AttributeSet htmlAttrSet ) { AttributeSet cssAttrSet = css . translateHTMLToCSS ( htmlAttrSet ) ; MutableAttributeSet cssStyleSet = addStyle ( _NULL , _NULL ) ; cssStyleSet . addAttributes ( cssAttrSet ) ; return cssStyleSet ; }
37097	private RDN generateDeleteConflictDn ( String entryUUID , DN dn ) { String newRDN = _CHAR entryuuid = _CHAR + entryUUID + _CHAR + _CHAR + dn . rdn ( ) ; try { return RDN . valueOf ( newRDN ) ; } catch ( LocalizedIllegalArgumentException e ) { return _NULL ; } }
37122	public void addExtension ( DERObjectIdentifier oid , boolean critical , byte [ ] value ) { extGenerator . addExtension ( new ASN1ObjectIdentifier ( oid . getId ( ) ) , critical , value ) ; }
37127	public synchronized void addSmap ( String smap , String stratumName ) { embedded . add ( _CHAR * O _CHAR + stratumName + _CHAR \ n _CHAR + smap + _CHAR * C _CHAR + stratumName + _CHAR \ n _CHAR ) ; }
37161	public void clear ( ) { if ( arrayTable != _NULL ) { arrayTable . clear ( ) ; } }
37178	public void removeFromRoom ( ) { if ( room != _NULL ) { room . internalRemovePlayer ( this ) ; room = _NULL ; } }
37212	public void addField ( TagField field ) { if ( field . getId ( ) . equals ( VorbisCommentFieldKey . VENDOR . getFieldName ( ) ) ) { super . setField ( field ) ; } else { super . addField ( field ) ; } }
37227	public static GenericExtendedRequest newGenericExtendedRequest ( final String requestName ) { Reject . ifNull ( requestName ) ; return new GenericExtendedRequestImpl ( requestName ) ; }
37256	public TransformerHandler newTransformerHandler ( ) throws TransformerConfigurationException { return new TransformerIdentityImpl ( m_isSecureProcessing ) ; }
37279	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { s . defaultReadObject ( ) ; for ( ; ; ) { @ SuppressWarnings ( _CHAR unchecked _CHAR ) E item = ( E ) s . readObject ( ) ; if ( item == _NULL ) break ; else offer ( item ) ; } }
37335	private synchronized void readObject ( java . io . ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getName ( ) , getMask ( actions ) ) ; }
37358	protected void lastResortExceptionHandling ( Throwable originalException , Throwable defaultHandlingException ) { try { this . logger . error ( _CHAR Error while trying to use the default exception '' + '' handling : '' + defaultHandlingException . getMessage ( ) + _CHAR .\ n _CHAR + _CHAR The original exception was : _CHAR + SpincastStatics . getStackTrace ( originalException ) ) ; } catch ( Throwable ex3 ) { } throw new RuntimeException ( _CHAR An error occured . '' ) ; }
37402	public static @ Nonnull EnvActionImpl forRun ( @ Nonnull Run < ? , ? > run ) throws IOException { synchronized ( run ) { EnvActionImpl action = run . getAction ( EnvActionImpl . class ) ; if ( action == _NULL ) { action = new EnvActionImpl ( ) ; run . addAction ( action ) ; run . save ( ) ; } return action ; } }
37413	public org . omg . CORBA . TypeCode _type ( ) { return ORB . init ( ) . get_primitive_tc ( TCKind . tk_fixed ) ; }
37444	public int hashCode ( ) { return name . hashCode ( ) ; }
37455	protected void reportWrongNumberArgs ( ) throws WrongNumberArgsException { throw new WrongNumberArgsException ( XSLMessages . createMessage ( XSLTErrorResources . ER_TWO_OR_THREE , _NULL ) ) ; }
37463	public String toString ( ) { return ( _CHAR CertAuthPrincipal : _CHAR + name ) ; }
37492	void afterOpen ( WriteableTransaction txn , boolean createOnDemand ) throws StorageRuntimeException { }
37493	public void paintTabbedPaneTabAreaBackground ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
37496	public void initialize ( ) { Thread athread = new Thread ( new InitializeThread ( ) ) ; athread . setName ( classname + _CHAR initialize _CHAR ) ; athread . setPriority ( Thread . MIN_PRIORITY ) ; athread . start ( ) ; }
37524	public boolean isApplicable ( AciTargetMatchContext matchCtx ) { if ( matchCtx . getExtOpOID ( ) == _NULL ) { return _BOOL ; } boolean ret = isApplicable ( matchCtx . getExtOpOID ( ) ) ; if ( EnumTargetOperator . NOT_EQUALITY . equals ( op ) ) { return ! ret ; } return ret ; }
37529	protected String printStack ( ) { if ( stack . size ( ) == _NUM ) { return _CHAR _CHAR ; } StringBuilder s = new StringBuilder ( ) ; for ( int k = _NUM ; k < stack . size ( ) ; ++ k ) s . append ( _CHAR ) . append ( stack . get ( k ) ) ; return s . substring ( _NUM ) ; }
37534	public boolean remove ( ByteString value ) { return values . remove ( createAttributeValue ( attributeDescription , value ) ) ; }
37573	public void windowLostFocus ( WindowEvent e ) { ( ( WindowFocusListener ) a ) . windowLostFocus ( e ) ; ( ( WindowFocusListener ) b ) . windowLostFocus ( e ) ; }
37608	public void recompose ( StylesheetRoot root ) { root . recomposeTemplates ( this ) ; }
37625	private void createInitializeReplicationSubCommand ( ) throws ArgumentException { initializeReplicationSubCmd = new SubCommand ( this , INITIALIZE_REPLICATION_SUBCMD_NAME , INFO_DESCRIPTION_SUBCMD_INITIALIZE_REPLICATION . get ( INITIALIZE_ALL_REPLICATION_SUBCMD_NAME ) ) ; addArgumentsToSubCommand ( initializeReplicationSubCmd , hostNameSourceArg , portSourceArg , hostNameDestinationArg , portDestinationArg ) ; }
37707	public static WindowMessage show ( String p_message ) { String [ ] message_arr = new String [ _NUM ] ; message_arr [ _NUM ] = p_message ; return new WindowMessage ( message_arr ) ; }
37734	boolean containKey ( String handler ) { if ( ( handler == _NULL ) || ( handler . length ( ) == _NUM ) ) { return _BOOL ; } if ( relayStateMap . containsKey ( handler ) ) { return _BOOL ; } else { return _BOOL ; } }
37791	public static XMPDateTime create ( int year , int month , int day ) { XMPDateTime dt = new XMPDateTimeImpl ( ) ; dt . setYear ( year ) ; dt . setMonth ( month ) ; dt . setDay ( day ) ; return dt ; }
37846	private boolean useDateFormatSymbols ( ) { return useDateFormatSymbols || locale == _NULL ; }
37860	public boolean isSource ( ) { return isSource ; }
37889	public static final FileTime unixTimeToFileTime ( long utime ) { return FileTime . from ( utime , TimeUnit . SECONDS ) ; }
37951	public boolean isMimeTypeSerializedObject ( ) { return isMimeTypeEqual ( javaSerializedObjectMimeType ) ; }
37953	public Rule removeRule ( String ruleName ) { return ( ( Rule ) rules . remove ( ruleName ) ) ; }
37975	private final void consumeExpected ( String expected ) throws javax . xml . transform . TransformerException { if ( tokenIs ( expected ) ) { nextToken ( ) ; } else { error ( XPATHErrorResources . ER_EXPECTED_BUT_FOUND , new Object [ ] { expected , m_token } ) ; throw new XPathProcessorException ( CONTINUE_AFTER_FATAL_ERROR ) ; } }
38038	public boolean isVisible ( ) { return foregroundCounter > _NUM ; }
38075	public void removeLocalSessionToken ( String requestID ) { FSUtils . debug . message ( _CHAR FSSessionManager . removeLocalSessionToken : Called _CHAR ) ; idLocalSessionTokenMap . remove ( requestID ) ; if ( ( agent != _NULL ) && agent . isRunning ( ) && ( idffSvc != _NULL ) ) { idffSvc . setIdLocalSessToken ( ( long ) idLocalSessionTokenMap . size ( ) ) ; } }
38088	public String [ ] generateCodes ( int numCodes , CodeGeneratorSource alphabet , boolean allowDuplicates ) throws CodeException { return generateCodes ( numCodes , alphabet , DEFAULT_LENGTH , allowDuplicates ) ; }
38104	public void registerSSOToken ( SSOToken ssoToken ) { ssoTokens . add ( ssoToken ) ; Logger . token . set ( ssoToken ) ; }
38105	public static String toPunycode ( String domainName ) { try { return IDN . toASCII ( domainName ) ; } catch ( Exception ex ) { LOG . debug ( _CHAR Can not convert _CHAR + domainName + _CHAR to punycode _CHAR , ex ) ; } return domainName ; }
38125	public boolean isAccessToUnderlyingConnectionAllowed ( ) { return accessToUnderlyingConnectionAllowed ; }
38126	public void close ( ) throws IOException { if ( ! closed ) { super . close ( ) ; eos = _BOOL ; closed = _BOOL ; } }
38160	@ Override public synchronized boolean removeAll ( Collection < ? > collection ) { return super . removeAll ( collection ) ; }
38187	public String toString ( ) { return toIndentedString ( _NUM ) ; }
38194	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR PasswordExpiredControl ( ) _CHAR ) ; }
38197	public void increasePermits ( int increase ) { this . release ( increase ) ; }
38217	private void addGlobalAttributesToIntent ( Intent intent ) { if ( ! intent . hasExtra ( Event . ATTRIBUTE_TIME ) ) { insertTimeStamp ( intent ) ; } if ( ! intent . hasExtra ( Event . ATTRIBUTE_LOCATION ) ) { insertLocationData ( intent ) ; } }
38263	public static TypeReference newTypeParameterReference ( int sort , int paramIndex ) { return new TypeReference ( ( sort << _NUM ) | ( paramIndex << _NUM ) ) ; }
38322	public static WhoAmIExtendedRequest unmodifiableWhoAmIExtendedRequest ( final WhoAmIExtendedRequest request ) { if ( request instanceof UnmodifiableWhoAmIExtendedRequestImpl ) { return request ; } return new UnmodifiableWhoAmIExtendedRequestImpl ( request ) ; }
38342	void addNonExpiringSession ( InternalSession session ) { if ( session . willExpire ( ) ) { throw new IllegalStateException ( _CHAR Tried to add session which would expire to NonExpiringSessionManager _CHAR ) ; } session . setMaxSessionTime ( NON_EXPIRING_SESSION_LENGTH_MINUTES ) ; session . setMaxIdleTime ( refreshPeriodInMinutes * _NUM ) ; updateSession ( session ) ; nonExpiringSessions . add ( session . getID ( ) ) ; }
38352	public String processURL ( String URL , HttpServletRequest servletRequest ) { String url = URL ; if ( url != _NULL ) { url = processDynamicVariables ( url , servletRequest ) ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR processURL : _CHAR + url ) ; } return url ; }
38362	public void changed_area_join_corner ( BrdChangedArea p_area , int p_index , int p_layer ) { PlaPointFloat corner = get ( p_index ) . intersection_approx ( get ( p_index + _NUM ) ) ; if ( corner . is_NaN ( ) ) return ; p_area . join ( corner , p_layer ) ; }
38389	public void recycle ( ) { nextRequest ( ) ; socketWrapper = _NULL ; }
38408	public void visitEnd ( ) { }
38565	public void removeChangeListener ( ChangeListener l ) { listenerList . remove ( ChangeListener . class , l ) ; }
38596	public static LDAPURL valueOf ( String host , int port ) { return valueOf ( host , port , _NULL ) ; }
38613	public boolean isBlockInHand ( ) { if ( ! hasItem ( ) ) { return _BOOL ; } return item . getType ( ) . isBlock ( ) ; }
38625	public boolean isDefaultCapable ( ) { return defaultCapable ; }
38635	public boolean hasNameOrOID ( final String value ) { return hasName ( value ) || oid . equals ( value ) ; }
38680	public boolean removeAll ( Collection < ByteString > values ) { boolean wasModified = _BOOL ; for ( ByteString v : values ) { wasModified |= remove ( v ) ; } return wasModified ; }
38701	public String toString ( ) { return ( _CHAR JDBCPrincipal : _CHAR + name ) ; }
38704	public static PasswordPolicyResponseControl newControl ( final PasswordPolicyWarningType warningType , final int warningValue , final PasswordPolicyErrorType errorType ) { Reject . ifNull ( warningType ) ; Reject . ifNull ( errorType ) ; Reject . ifFalse ( warningValue >= _NUM , _CHAR warningValue is negative _CHAR ) ; return new PasswordPolicyResponseControl ( _BOOL , warningType , warningValue , errorType ) ; }
38737	@ Override public void encodeEnd ( final FacesContext context ) throws IOException { encodeAll ( context ) ; }
38745	public String toString ( ) { return MessageFormat . format ( _CHAR [ node = { _NUM } , object = { _NUM } , url = { _NUM } , line = { _NUM } , col = { _NUM } , offset = { _NUM } ] _CHAR , getNode ( ) , getObject ( ) , getURL ( ) , String . valueOf ( getLineNumber ( ) ) , String . valueOf ( getColumnNumber ( ) ) , String . valueOf ( getOffset ( ) ) ) ; }
38753	public void updateUI ( ) { setUI ( ( ButtonUI ) UIManager . getUI ( this ) ) ; }
38866	public int compareTo ( Long object ) { return compare ( value , object . value ) ; }
38873	@ Override public String toString ( ) { return _CHAR AdaptivePrincipal : _CHAR + name ; }
38901	public boolean isLeftClick ( ) { return click . isLeftClick ( ) ; }
38917	protected JTextField createEditorComponent ( ) { JTextField editor = new BorderlessTextField ( _CHAR _CHAR , _NUM ) ; editor . setBorder ( _NULL ) ; return editor ; }
38921	@ Override public boolean isField2 ( ) { return _foo . isField2 ( ) ; }
38925	public static String formatDateTimeString ( Date date ) { String timeStr = _NULL ; if ( date != _NULL ) { SimpleDateFormat dateFormat = new SimpleDateFormat ( DATE_FORMAT_GMT_TIME ) ; dateFormat . setTimeZone ( TimeZone . getTimeZone ( _CHAR UTC _CHAR ) ) ; timeStr = dateFormat . format ( date ) ; } return timeStr ; }
38938	public void addActionListener ( ActionListener listener ) { listenerList . add ( ActionListener . class , listener ) ; }
38982	public boolean isValidOn ( Date date ) { AttCertValidityPeriod certValidityPeriod = attrCert . getAcinfo ( ) . getAttrCertValidityPeriod ( ) ; return ! date . before ( CertUtils . recoverDate ( certValidityPeriod . getNotBeforeTime ( ) ) ) && ! date . after ( CertUtils . recoverDate ( certValidityPeriod . getNotAfterTime ( ) ) ) ; }
38994	public int compareTo ( Integer object ) { return compare ( value , object . value ) ; }
38998	@ Override public void recycle ( ) { super . recycle ( ) ; outputStream = _NULL ; }
39025	void saveDevicePrint ( Map < String , Object > devicePrint ) { saveDevicePrint ( _NULL , devicePrint ) ; }
39103	public static QueryExp or ( QueryExp q1 , QueryExp q2 ) { return new OrQueryExp ( q1 , q2 ) ; }
39138	public final Node pop ( ) { m_firstFree -- ; Node n = m_map [ m_firstFree ] ; m_map [ m_firstFree ] = _NULL ; return n ; }
39168	public static String formatDateTime ( Date d ) { if ( d == _NULL ) { return _CHAR _CHAR ; } return new SimpleDateFormat ( DATETIME_FORMAT ) . format ( d ) ; }
39199	public String put ( String url , final int expectedStatusCode ) { return put ( url , _NULL , expectedStatusCode ) ; }
39216	public synchronized boolean isDesignTime ( ) { return designTime ; }
39304	protected void installComponents ( ) { if ( scrollableTabLayoutEnabled ( ) ) { if ( tabScroller == _NULL ) { tabScroller = new ScrollableTabSupport ( tabPane . getTabPlacement ( ) ) ; tabPane . add ( tabScroller . viewport ) ; } } installTabContainer ( ) ; }
39328	public boolean isAccepted ( ) { for ( License license : licenses ) { if ( ! license . isAccepted ( ) ) { return _BOOL ; } } return _BOOL ; }
39380	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getMask ( actions ) ) ; }
39392	@ Issue ( _CHAR JENKINS - _NUM _CHAR ) @ Test public void monomorphic ( ) throws Exception { WorkflowJob p = r . jenkins . createProject ( WorkflowJob . class , _CHAR mon _CHAR ) ; p . setDefinition ( new CpsFlowDefinition ( _CHAR monomorphStep ( [ firstArg : _CHAR , secondArg : _CHAR ] ) _CHAR , _BOOL ) ) ; r . assertLogContains ( _CHAR First arg : one , second arg : two _CHAR , r . assertBuildStatusSuccess ( p . scheduleBuild2 ( _NUM ) ) ) ; }
39409	public int hashCode ( ) { return name . hashCode ( ) ; }
39438	private void notifyAllPlugins ( NotifierPlugin . MutateType type , Document document ) { for ( NotifierPlugin plugin : plugins ) { plugin . doNotify ( type , document ) ; } }
39439	@ Indexable ( type = IndexableType . REINDEX ) @ Override public Foo addFoo ( Foo foo ) { foo . setNew ( _BOOL ) ; return fooPersistence . update ( foo ) ; }
39457	@ Override public void onPropertyChanged ( Observable sender , int propertyId ) { Conversation conversation = ( Conversation ) sender ; switch ( propertyId ) { case Conversation . SUBJECT_PROPERTY_ID : setSubject ( conversation . getSubject ( ) ) ; break ; case Conversation . STATE_PROPERTY_ID : setState ( conversation . getState ( ) . toString ( ) ) ; break ; default : } }
39493	private void executeNoTimeoutScenario ( ) throws Exception { UpdateMsg updateMsg = checkAssuredParametersOnReceivedUpdateMsg ( ) ; sleep ( NO_TIMEOUT_RS_SLEEP_TIME ) ; AckMsg ackMsg = new AckMsg ( updateMsg . getCSN ( ) ) ; session . publish ( ackMsg ) ; scenarioExecuted = _BOOL ; }
39501	public boolean isCookieEncodingEnabled ( ) { return cookieEncoding ; }
39507	public void updateUI ( ) { setUI ( ( PopupMenuUI ) UIManager . getUI ( this ) ) ; }
39517	public void javacError ( String errorReport , Exception e ) throws JasperException { errHandler . javacError ( errorReport , e ) ; }
39522	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { try { s . defaultReadObject ( ) ; this . queue = new Object [ q . size ( ) ] ; comparator = q . comparator ( ) ; addAll ( q ) ; } finally { q = _NULL ; } }
39523	public void release ( ) { this . contentLength = _NUM ; parentPool . release ( this ) ; }
39531	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo deleteFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return _fooLocalService . deleteFoo ( foo ) ; }
39535	private final void nextToken ( ) { if ( m_queueMark < m_ops . getTokenQueueSize ( ) ) { m_token = ( String ) m_ops . m_tokenQueue . elementAt ( m_queueMark ++ ) ; m_tokenChar = m_token . charAt ( _NUM ) ; } else { m_token = _NULL ; m_tokenChar = _NUM ; } }
39544	public static boolean isRunningAsWindowsService ( ) { return OperatingSystem . isWindows ( ) && serviceState ( ) == SERVICE_STATE_ENABLED ; }
39587	@ Override public TagResult generateValue ( TemplateEntry templateEntry , TemplateValue templateValue ) { int intValue = random . nextInt ( _NUM ) ; if ( intValue < percentage ) { return TagResult . SUCCESS_RESULT ; } else { return TagResult . OMIT_FROM_ENTRY ; } }
39599	private void generateReferenceDoc ( final StringBuilder builder , Collection < SubCommand > subCommands ) { toRefEntry ( builder , subCommands ) ; }
39618	protected void reportWrongNumberArgs ( ) throws WrongNumberArgsException { throw new WrongNumberArgsException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_ZERO_OR_ONE , _NULL ) ) ; }
39633	public void update_ratsnest ( int p_net_no , Collection < BrdItem > p_item_list ) { if ( ratsnest != _NULL && p_net_no > _NUM ) { ratsnest . recalculate ( p_net_no , p_item_list , r_board ) ; ratsnest . show ( ) ; } }
39734	public int hashCode ( ) { return name . hashCode ( ) ; }
39747	private ModifyOperation addAttrEntry ( DN dn , String attrName , Object ... attrValStrings ) { ModifyRequest modifyRequest = Requests . newModifyRequest ( dn ) . addModification ( ADD , attrName , attrValStrings ) ; return getRootConnection ( ) . processModify ( modifyRequest ) ; }
39762	public boolean add ( E e ) { typeCheck ( e ) ; long oldElements = elements ; elements |= ( _NUM << ( ( Enum < ? > ) e ) . ordinal ( ) ) ; return elements != oldElements ; }
39785	public static Map < String , Object > params ( String key1 , Object value1 ) { return map ( key1 , value1 ) ; }
39836	private boolean hasPixels ( Image image ) { return image != _NULL && ( image . getHeight ( imageObserver ) > _NUM ) && ( image . getWidth ( imageObserver ) > _NUM ) ; }
39849	public static boolean match ( String name ) { if ( osName . equalsIgnoreCase ( name ) ) { return _BOOL ; } else { String winPrefix = name . substring ( _NUM , _NUM ) ; if ( osName . toLowerCase ( ) . contains ( winPrefix . toLowerCase ( ) ) ) { return _BOOL ; } } return _BOOL ; }
39850	@ Override public EnumEvalResult evaluate ( AciEvalContext evalCtx ) { EnumEvalResult matched = evaluate ( ) ? EnumEvalResult . TRUE : EnumEvalResult . FALSE ; return matched . getRet ( type , _BOOL ) ; }
39864	public double noise ( double x , double y , double z , double w , double frequency , double amplitude ) { return noise ( x , y , z , w , frequency , amplitude , _BOOL ) ; }
39869	public GSERParser readEndSequence ( ) throws DecodeException { skip ( GSER_SP ) ; next ( GSER_SEQUENCE_END ) ; return this ; }
39886	public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR ConfigChangeResult ( result = _CHAR ) ; buffer . append ( resultCode ) ; buffer . append ( _CHAR , adminActionRequired = _CHAR ) ; buffer . append ( adminActionRequired ) ; buffer . append ( _CHAR , messages = { _CHAR ) ; Utils . joinAsString ( buffer , _CHAR , _CHAR , messages ) ; buffer . append ( _CHAR } ) _CHAR ) ; }
39896	private boolean isSessionUsedInWSFed ( Set userSession , String userId ) { if ( ( userSession == _NULL ) || userSession . isEmpty ( ) ) { return _BOOL ; } else { Object session = userSession . iterator ( ) . next ( ) ; return MultiProtocolUtils . usedInProtocol ( session , SingleLogoutManager . WS_FED ) ; } }
39907	protected String deployInternal ( String config , ContextName cn , String war , StringManager smClient ) { StringWriter stringWriter = new StringWriter ( ) ; PrintWriter printWriter = new PrintWriter ( stringWriter ) ; super . deploy ( printWriter , config , cn , war , _BOOL , smClient ) ; return stringWriter . toString ( ) ; }
39992	protected void doChecks ( ) { checkOsUser ( ) ; checkUmask ( ) ; }
40006	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR processAck _CHAR ) ; }
40024	public String fromSAMLSecondaryTokenId ( String secondaryId ) { return encoding . decodeKey ( secondaryId ) ; }
40025	synchronized CSN putLocalOperation ( PluginOperation operation ) { final CSN csn = csnGenerator . newCSN ( ) ; if ( ! operation . isSynchronizationOperation ( ) ) { pendingChanges . put ( csn , new PendingChange ( csn , operation , _NULL ) ) ; } return csn ; }
40047	public void schemaChanged ( String serviceName , String version ) { }
40056	public boolean isRealmSubject ( String subjectName ) throws NameNotFoundException { return users . isRealmSubject ( subjectName ) ; }
40057	public static int interfaceModifiers ( ) { return PUBLIC | PROTECTED | PRIVATE | ABSTRACT | STATIC | STRICT ; }
40098	public void windowDeactivated ( WindowEvent e ) { ( ( WindowListener ) a ) . windowDeactivated ( e ) ; ( ( WindowListener ) b ) . windowDeactivated ( e ) ; }
40139	public void logStackTrace ( ) { this . logStackTrace ( TRACE_DEBUG ) ; }
40168	public static boolean areNotGranted ( String authorities ) throws IOException { AuthorizeFaceletsTag authorizeTag = new AuthorizeFaceletsTag ( ) ; authorizeTag . setIfNotGranted ( authorities ) ; return authorizeTag . authorize ( ) ; }
40188	public static DN valueOf ( ByteString dn ) { return DN . valueOf ( dn . toString ( ) ) ; }
40204	public boolean isPreExternalInitializationSubcommand ( ) { return isSubcommand ( PRE_EXTERNAL_INITIALIZATION_SUBCMD_NAME ) ; }
40286	public void close ( ) throws IOException { in =- _NUM ; closedByReader = _BOOL ; }
40312	public int hashCode ( ) { return name . hashCode ( ) ; }
40337	public int hashCode ( ) { return selectedRoleDNs . hashCode ( ) ; }
40386	public void updateUI ( ) { setUI ( ( ButtonUI ) UIManager . getUI ( this ) ) ; }
40468	public AuditEvent auditAccessSuccess ( ) { long endTime = timeService . now ( ) ; long elapsedTime = endTime - startTime ; return accessEvent ( ) . forHttpServletRequest ( request ) . timestamp ( endTime ) . transactionId ( AuditRequestContext . getTransactionIdValue ( ) ) . eventName ( AM_ACCESS_OUTCOME ) . component ( component ) . response ( SUCCESSFUL , _CHAR _CHAR , elapsedTime , MILLISECONDS ) . toEvent ( ) ; }
40476	public void addTrigger ( String triggerId ) { if ( ! triggers . contains ( triggerId ) ) { triggers . add ( triggerId ) ; } }
40478	public void post ( Runnable runnable ) { synchronized ( mQueue ) { mQueue . add ( runnable ) ; if ( mQueue . size ( ) == _NUM ) { scheduleNextLocked ( ) ; } } }
40556	public static ApiAnnotationAssert assertThat ( Class value ) { return new ApiAnnotationAssert ( value ) ; }
40557	@ Override protected final JsonValue createTemplate ( ) { JsonValue result = super . createTemplate ( ) ; if ( dynamicSchema != _NULL ) { result . add ( _CHAR dynamic _CHAR , dynamicConverter . toJson ( dynamicSchema . getAttributeDefaults ( ) , _BOOL ) . getObject ( ) ) ; } return result ; }
40619	public void mousePressed ( MouseEvent e ) { ( ( MouseListener ) a ) . mousePressed ( e ) ; ( ( MouseListener ) b ) . mousePressed ( e ) ; }
40627	public boolean isDynamicProfileCreationEnabled ( ) { return dynamicProfileCreation ; }
40646	protected void removeFromMapping ( ) { if ( path != _NULL ) { removeMapping ( this ) ; for ( int counter = getChildCount ( ) - _NUM ; counter >= _NUM ; counter -- ) ( ( TreeStateNode ) getChildAt ( counter ) ) . removeFromMapping ( ) ; } }
40665	public static String toValidJson ( final String jsonStr ) { return jsonStr . replace ( _CHAR _CHAR_CHAR_CHAR_CHAR_CHAR ) ; }
40684	private Proxy nextProxy ( ) throws IOException { if ( ! hasNextProxy ( ) ) { throw new SocketException ( _CHAR No route to _CHAR + address . url ( ) . host ( ) + _CHAR ; exhausted proxy configurations : _CHAR + proxies ) ; } Proxy result = proxies . get ( nextProxyIndex ++ ) ; resetNextInetSocketAddress ( result ) ; return result ; }
40715	@ Indexable ( type = IndexableType . DELETE ) @ Override public Foo deleteFoo ( Foo foo ) { return fooPersistence . remove ( foo ) ; }
40728	public void visitClassType ( String name ) { }
40735	public void close ( ) throws IOException { if ( ! closed ) { finish ( ) ; if ( usesDefaultDeflater ) def . end ( ) ; out . close ( ) ; closed = _BOOL ; } }
40820	public boolean isReplicationSecure ( ) { return isReplicationServer ( ) && Boolean . TRUE . equals ( serverProperties . get ( ServerProperty . IS_REPLICATION_SECURE ) ) ; }
40828	public void write ( ByteString bs ) throws IOException { bs . copyTo ( stream ) ; }
40845	private static String buildCacheKey ( String realm , String entityId ) { return realm + _CHAR // '' + entityId ; }
40850	@ Override public int scrollVerticallyBy ( int dy , RecyclerView . Recycler recycler , RecyclerView . State state ) { if ( getChildCount ( ) == _NUM || dy == _NUM ) { return _NUM ; } return scrollBy ( dy , recycler , state ) ; }
40894	public void paintTabbedPaneTabAreaBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { paintBorder ( context , g , x , y , w , h , _NULL ) ; }
40895	public int hashCode ( ) { return selectedOrgDNs . hashCode ( ) ; }
40896	public static < S > ServiceLoader < S > load ( Class < S > service ) { return ServiceLoader . load ( service , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; }
40906	public void removeAttribute ( String name ) { synchronized ( names ) { names . remove ( name ) ; } }
40915	public int hashCode ( ) { return name . hashCode ( ) ; }
41017	public boolean isValidRealm ( ) { return validRealm ; }
41074	public boolean countMatchingEntries ( ) { return countMatchingEntries ; }
41088	public static Result copyOfResult ( final Result result ) { return new ResultImpl ( result ) ; }
41103	public String toString ( ) { return ( toString ( _BOOL , _BOOL ) ) ; }
41114	public void addLayoutComponent ( String name , Component c ) { }
41140	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
41148	protected void registerChannel ( Selector selector , SelectableChannel channel , int ops , Object attach ) throws Exception { if ( channel == _NULL ) return ; channel . configureBlocking ( _BOOL ) ; channel . register ( selector , ops , attach ) ; }
41175	public static ByteString valueOfBase64 ( final String s ) { if ( s . length ( ) == _NUM ) { return EMPTY ; } return Base64 . decode ( s ) ; }
41257	public void mouseExited ( MouseEvent e ) { ( ( MouseListener ) a ) . mouseExited ( e ) ; ( ( MouseListener ) b ) . mouseExited ( e ) ; }
41286	public JoinHeader createJoinHeader ( String callId , String toTag , String fromTag ) throws ParseException { Join join = new Join ( ) ; join . setCallId ( callId ) ; join . setFromTag ( fromTag ) ; join . setToTag ( toTag ) ; return join ; }
41321	public void permitDenied ( Request request , Response response ) throws IOException , ServletException { }
41325	public void removeMenuKeyListener ( MenuKeyListener l ) { listenerList . remove ( MenuKeyListener . class , l ) ; }
41432	public void addLayoutComponent ( String name , Component comp ) { }
41459	public void removeActionListener ( ActionListener l ) { listenerList . remove ( ActionListener . class , l ) ; }
41497	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK ! _CHAR ) ; logger . info ( _CHAR Dialog = _CHAR + requestEvent . getDialog ( ) ) ; logger . info ( _CHAR Dialog State = _CHAR + requestEvent . getDialog ( ) . getState ( ) ) ; this . ackSeen = _BOOL ; }
41536	@ Override public void close ( ) throws IOException { if ( ! closed ) { finish ( ) ; inf . end ( ) ; out . close ( ) ; closed = _BOOL ; } }
41547	public boolean verifyWSSSignature ( org . w3c . dom . Document document , java . lang . String certAlias ) throws XMLSignatureException { return _BOOL ; }
41568	public void focusLost ( FocusEvent e ) { ( ( FocusListener ) a ) . focusLost ( e ) ; ( ( FocusListener ) b ) . focusLost ( e ) ; }
41630	private String encodeForHTML ( String description ) { return ESAPI . encoder ( ) . encodeForHTML ( description ) ; }
41665	public int hashCode ( ) { return name . hashCode ( ) ; }
41682	public String toString ( ) { return ( _CHAR SMPrincipal : _CHAR + name ) ; }
41714	public boolean isSigned ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . signed ; }
41749	public int hashCode ( ) { return name . hashCode ( ) ; }
41761	@ Override public boolean isField2 ( ) { return _foo . isField2 ( ) ; }
41767	public boolean isLogOff ( ) { return ( environment . get ( CLIConstants . ARGUMENT_NOLOG ) != _NULL ) ; }
41797	public void updateUI ( ) { setUI ( ( ToolTipUI ) UIManager . getUI ( this ) ) ; }
41800	@ Override public void addLocaleEncodingMappingParameter ( String locale , String encoding ) { getCharsetMapper ( ) . addCharsetMappingFromDeploymentDescriptor ( locale , encoding ) ; }
41810	public String post ( String url , final int expectedStatusCode ) { return post ( url , _NULL , expectedStatusCode ) ; }
41884	public static XMPMeta parseFromString ( String packet , ParseOptions options ) throws XMPException { return XMPMetaParser . parse ( packet , options ) ; }
41899	public void adjustmentValueChanged ( AdjustmentEvent e ) { ( ( AdjustmentListener ) a ) . adjustmentValueChanged ( e ) ; ( ( AdjustmentListener ) b ) . adjustmentValueChanged ( e ) ; }
41977	public void visitEnd ( ) { }
42019	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; configFilePath = DirectoryServer . getInstanceRoot ( ) + File . separator + _CHAR config _CHAR + File . separator + _CHAR config . ldif _CHAR ; }
42031	public void updateUI ( ) { setUI ( ( MenuItemUI ) UIManager . getUI ( this ) ) ; if ( popupMenu != _NULL ) { popupMenu . setUI ( ( PopupMenuUI ) UIManager . getUI ( popupMenu ) ) ; } }
42058	public boolean shouldSelectCell ( EventObject event ) { return realEditor . shouldSelectCell ( event ) ; }
42060	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK _CHAR + requestEvent . getRequest ( ) ) ; ackReceived = _BOOL ; }
42078	public void addObfuscatedArgument ( final Argument argument ) { addArgument ( argument ) ; obfuscatedArgs . add ( argument ) ; }
42114	public PlaPointFloat dsn_to_board_rel ( double [ ] p_tuple ) { double x = dsn_to_board ( p_tuple [ _NUM ] ) ; double y = dsn_to_board ( p_tuple [ _NUM ] ) ; return new PlaPointFloat ( x , y ) ; }
42140	public Calendar fromLDAPDate ( String ldapDate ) { return GeneralizedTime . valueOf ( ldapDate ) . toCalendar ( ) ; }
42146	public static Intent createGetContentIntent ( ) { final Intent intent = new Intent ( Intent . ACTION_GET_CONTENT ) ; intent . setType ( _CHAR */* '' ) ; intent . addCategory ( Intent . CATEGORY_OPENABLE ) ; return intent ; }
42154	public String toString ( ) { return ( _CHAR LDAPPrincipal : _CHAR + name ) ; }
42199	@ Override public Expected < T > ifAbsent ( final Runnable runnable ) { if ( isAbsent ( ) ) { runnable . run ( ) ; } return this ; }
42314	private void initXMLTree ( ) throws Exception { updateFilteredTokens ( ) ; ArrayList elements = getElements ( getFilteredTokens ( ) ) ; if ( elements . size ( ) > _NUM ) { throw new Exception ( _CHAR More than one root elements encountered _CHAR ) ; } setRootElement ( ( XMLElement ) elements . get ( _NUM ) ) ; }
42359	public void map ( MessageBytes host , MessageBytes uri , String version , MappingData mappingData ) throws IOException { if ( host . isNull ( ) ) { host . getCharChunk ( ) . append ( defaultHostName ) ; } host . toChars ( ) ; uri . toChars ( ) ; internalMap ( host . getCharChunk ( ) , uri . getCharChunk ( ) , version , mappingData ) ; }
42373	public static WaspDb openOrCreateDatabase ( String path , String name , String password ) { if ( WaspFactory . existsDatabase ( path , name ) ) { return WaspFactory . loadDatabase ( path , name , password ) ; } else { return WaspFactory . createDatabase ( path , name , password ) ; } }
42388	public static GeneralizedTime valueOf ( final long timeMS ) { Reject . ifTrue ( timeMS < MIN_GENERALIZED_TIME_MS , _CHAR timeMS is too old to represent as a generalized time _CHAR ) ; return new GeneralizedTime ( _NULL , _NULL , timeMS , _NULL ) ; }
42399	@ Override public ThaiBuddhistDate dateEpochDay ( long epochDay ) { return new ThaiBuddhistDate ( LocalDate . ofEpochDay ( epochDay ) ) ; }
42439	public Dns dns ( ) { return dns ; }
42543	public static List doResourceIPEnvAuth ( String resourceUrl , String realm , Map envParameters ) throws PolicyException { ActionDecision decision = _NULL ; if ( resourceUrl != _NULL ) { decision = getActionDecision ( resourceUrl , envParameters ) ; return getPolicyAdvice ( decision , realm ) ; } else { return Collections . EMPTY_LIST ; } }
42545	private boolean isId3v2Tag ( ) throws IOException { byte buf [ ] = new byte [ _NUM ] ; raf . read ( buf ) ; String id = new String ( buf , _CHAR ASCII _CHAR ) ; return _CHAR ID3 _CHAR . equals ( id ) ; }
42575	protected static Vector convertToVector ( Object [ ] [ ] anArray ) { if ( anArray == _NULL ) { return _NULL ; } Vector < Vector > v = new Vector < Vector > ( anArray . length ) ; for ( Object [ ] o : anArray ) { v . addElement ( convertToVector ( o ) ) ; } return v ; }
42614	public void add ( N node ) { if ( theNeighbors . containsKey ( node ) ) return ; theNeighbors . put ( node , new ArraySet < N > ( ) ) ; }
42628	@ Deprecated protected InputStream renderHtml ( String contextPath , WebResource resource ) throws IOException { return renderHtml ( contextPath , resource , _NULL ) ; }
42674	public boolean compressData ( ) { return compressData ; }
42752	private static void addObjectClass ( Map < ObjectClass , String > objectClasses , ByteSequenceReader entryBuffer , int startPos , int endPos ) { entryBuffer . position ( startPos ) ; final String ocName = entryBuffer . readStringUtf8 ( endPos - startPos ) ; objectClasses . put ( DirectoryServer . getSchema ( ) . getObjectClass ( ocName ) , ocName ) ; }
42763	public static void main ( String [ ] args ) { int returnCode = ldifModifyMain ( args , _BOOL , System . out , System . err ) ; if ( returnCode != _NUM ) { System . exit ( filterExitCode ( returnCode ) ) ; } }
42806	@ DataProvider ( name = _CHAR bigIntegerValues _CHAR ) public Object [ ] [ ] createBigIntegerValues ( ) { return new Object [ ] [ ] { { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR NULL _CHAR , _BOOL } , { _CHAR Not a Number _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } } ; }
42808	public static com . liferay . blade . samples . servicebuilder . model . Foo addFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return getService ( ) . addFoo ( foo ) ; }
42812	public void execute ( TransformerImpl transformer ) throws TransformerException { try { if ( hasFallbackChildren ( ) ) { executeFallbacks ( transformer ) ; } else { } } catch ( TransformerException e ) { transformer . getErrorListener ( ) . fatalError ( e ) ; } }
42846	public void mouseWheelMoved ( MouseWheelEvent e ) { ( ( MouseWheelListener ) a ) . mouseWheelMoved ( e ) ; ( ( MouseWheelListener ) b ) . mouseWheelMoved ( e ) ; }
42889	public int nextMessageID ( ) { int msgID = nextMessageID . getAndIncrement ( ) ; if ( msgID < _NUM ) { synchronized ( nextMessageID ) { if ( nextMessageID . get ( ) < _NUM ) { nextMessageID . set ( _NUM ) ; return _NUM ; } else { return nextMessageID . getAndIncrement ( ) ; } } } return msgID ; }
42892	public int hashCode ( ) { return name . hashCode ( ) ; }
42993	public static Integer valueOf ( String string , int radix ) throws NumberFormatException { return valueOf ( parseInt ( string , radix ) ) ; }
43083	public SeriesTaskExecutorThread create ( BlockingQueue < Task > queue ) { Reject . ifNull ( queue ) ; SeriesTaskExecutorThread processor = injector . getInstance ( SeriesTaskExecutorThread . class ) ; processor . setQueue ( queue ) ; return processor ; }
43114	protected void RelativePathPattern ( ) throws javax . xml . transform . TransformerException { boolean trailingSlashConsumed = StepPattern ( _BOOL ) ; while ( tokenIs ( _CHAR ) ) { nextToken ( ) ; trailingSlashConsumed = StepPattern ( ! trailingSlashConsumed ) ; } }
43116	public RxGalleryFinal cropOvalDimmedLayer ( boolean isOval ) { configuration . setOvalDimmedLayer ( isOval ) ; return this ; }
43120	public boolean isClosed ( ) { return isClosed ; }
43172	protected boolean isSwitchOpen ( ) { return MotanSwitcherUtil . isOpen ( swictherName ) ; }
43295	protected int checkVerticalKey ( int key , String message ) { if ( ( key == TOP ) || ( key == CENTER ) || ( key == BOTTOM ) ) { return key ; } else { throw new IllegalArgumentException ( message ) ; } }
43370	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR PasswordExpiringControl ( secondsUntilExpiration = _CHAR ) ; buffer . append ( secondsUntilExpiration ) ; buffer . append ( _CHAR ) _CHAR ) ; }
43390	@ Override public synchronized boolean addAll ( Collection < ? extends E > collection ) { return addAll ( elementCount , collection ) ; }
43394	public static String generateResourceTypeDummyUuid ( ) { return ID_PREFIX_RESOURCE_TYPE_UNAVAILABLE + generateResourceTypeUuid ( ) ; }
43398	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo deleteFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return _fooLocalService . deleteFoo ( foo ) ; }
43410	public String toString ( ) { return ( _CHAR UserPrincipal : _CHAR + name ) ; }
43459	public void hierarchyChanged ( HierarchyEvent e ) { ( ( HierarchyListener ) a ) . hierarchyChanged ( e ) ; ( ( HierarchyListener ) b ) . hierarchyChanged ( e ) ; }
43543	public PlaPointFloat end_point_approx ( ) { return end_point . to_float ( ) ; }
43570	public void putStatic ( final Type owner , final String name , final Type type ) { fieldInsn ( Opcodes . PUTSTATIC , owner , name , type ) ; }
43605	public void addActionListener ( ActionListener l ) { listenerList . add ( ActionListener . class , l ) ; }
43612	public static void showInternalMessageDialog ( Component parentComponent , Object message , String title , int messageType , Icon icon ) { showInternalOptionDialog ( parentComponent , message , title , DEFAULT_OPTION , messageType , icon , _NULL , _NULL ) ; }
43651	@ Override public TagResult generateValue ( TemplateEntry templateEntry , TemplateValue templateValue ) { templateValue . append ( templateFile . getLastName ( ) ) ; return TagResult . SUCCESS_RESULT ; }
43676	public void appendCell ( char value ) { appendCell ( String . valueOf ( value ) ) ; }
43734	@ DataProvider ( name = _CHAR bigIntegerValues _CHAR ) public Object [ ] [ ] createBigIntegerValues ( ) { return new Object [ ] [ ] { { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR NULL _CHAR , _BOOL } , { _CHAR Not a Number _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } } ; }
43760	static < T > ReplayPromise < T > replayPromise ( final Duration timeout ) { return new ReplayPromiseImpl < > ( timeout , System . currentTimeMillis ( ) ) ; }
43785	private final void consumeExpected ( char expected ) throws javax . xml . transform . TransformerException { if ( tokenIs ( expected ) ) { nextToken ( ) ; } else { error ( XPATHErrorResources . ER_EXPECTED_BUT_FOUND , new Object [ ] { String . valueOf ( expected ) , m_token } ) ; throw new XPathProcessorException ( CONTINUE_AFTER_FATAL_ERROR ) ; } }
43792	public static boolean isBookSearchUrl ( String url ) { return url . startsWith ( _CHAR http : // google . com / books '' ) || url . startsWith ( '' http : // books . google . '' ) ; }
43797	public boolean contains ( PlaPointInt p_point ) { return p_point . is_contained_in ( bounding_box ) ; }
43880	private static void waitForOpsToComplete ( ) { try { WorkQueue < ? > workQueue = DirectoryServer . getWorkQueue ( ) ; final long NO_TIMEOUT =- _NUM ; workQueue . waitUntilIdle ( NO_TIMEOUT ) ; } catch ( Exception e ) { } }
43962	public static com . liferay . blade . samples . servicebuilder . model . Foo deleteFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return getService ( ) . deleteFoo ( foo ) ; }
43985	public static PdfFormField createEmptyField ( PdfDocument doc ) { return new PdfFormField ( doc ) ; }
44027	private static int mix32 ( long z ) { z = ( z ^ ( z >> > _NUM ) ) * _NUM ; return ( int ) ( ( ( z ^ ( z >> > _NUM ) ) * _NUM ) >> > _NUM ) ; }
44035	public Class < ? > parameterType ( int num ) { return ptypes [ num ] ; }
44124	public void deleteTag ( int tagId ) { int ifdId = getDefinedTagDefaultIfd ( tagId ) ; deleteTag ( tagId , ifdId ) ; }
44125	public static QueryExp and ( QueryExp q1 , QueryExp q2 ) { return new AndQueryExp ( q1 , q2 ) ; }
44159	public boolean isBorderPaintedFlat ( ) { return flat ; }
44163	public PlaPointFloat start_point_approx ( ) { return start_point . to_float ( ) ; }
44184	public String toString ( ) { return m_str ; }
44262	public String toString ( ) { return ( _CHAR SSOTokenPrincipal : _CHAR + name ) ; }
44342	public void mouseClicked ( MouseEvent e ) { }
44355	@ Override public String toString ( ) { return name ; }
44416	public void noNewStreams ( ) { deallocate ( _BOOL , _BOOL , _BOOL ) ; }
44438	private JsonValue validateConnector ( ) throws Exception { System . out . println ( _CHAR _NUM . Validate that the connection with the Azure connector is OK : _CHAR ) ; HttpResponse < String > response = Unirest . post ( azureEndpoint + _CHAR ? _action = test _CHAR ) . header ( _CHAR x - openidm - username _CHAR , _CHAR openidm - admin _CHAR ) . header ( _CHAR x - openidm - password _CHAR , _CHAR openidm - admin _CHAR ) . asString ( ) ; return json ( readJson ( response . getBody ( ) ) ) ; }
44480	protected Context wrap ( final Context context ) { return context ; }
44523	public static String tagSwapReport ( Map < String , String > reportContents , String key ) { return tagSwap ( reportContents , BUNDLE . getString ( key ) ) ; }
44530	boolean isSessionInvalid ( ) { InternalSession session = getReferencedSession ( ) ; return ( session == _NULL || session . getState ( ) == SessionState . INVALID || session . getState ( ) == SessionState . DESTROYED ) ; }
44538	public String toString ( ) { return ( _CHAR AuthenticatorPushPrincipal : _CHAR + name ) ; }
44578	public void show_ratsnest ( ) { if ( ratsnest != _NULL ) { ratsnest . show ( ) ; } }
44611	public int value ( ) { return _value ; }
44612	public void updateUI ( ) { setUI ( ( ButtonUI ) UIManager . getUI ( this ) ) ; }
44613	public static String rdnValueFromDn ( DN dn ) { if ( dn . size ( ) > _NUM ) { return rdnValue ( dn . rdn ( ) ) ; } return _CHAR _CHAR ; }
44677	public Set < String > objectsChanged ( int time ) throws RemoteException { initializeCacheSize ( ) ; Set < String > answer = collectChangesFromCache ( time , cache ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR DirectoryManagerImpl : objectsChanged in time : _CHAR + time + _CHAR + _NUM minutes : \ n _CHAR + answer ) ; } return answer ; }
44687	static DN create ( ManagedObjectPath < ? , ? > path , SetRelationDefinition < ? , ? > relation , LDAPProfile profile ) { DNBuilder builder = new DNBuilder ( profile ) ; path . serialize ( builder ) ; builder . appendManagedObjectPathElement ( relation ) ; return builder . build ( ) ; }
44706	protected int CalcBias ( int Offset , int Font ) { seek ( Offset ) ; int nSubrs = getCard16 ( ) ; if ( fonts [ Font ] . CharstringType == _NUM ) return _NUM ; else if ( nSubrs < _NUM ) return _NUM ; else if ( nSubrs < _NUM ) return _NUM ; else return _NUM ; }
44729	public Graphics create ( ) { DebugGraphics debugGraphics ; debugGraphics = new DebugGraphics ( ) ; debugGraphics . graphics = graphics . create ( ) ; debugGraphics . debugOptions = debugOptions ; debugGraphics . buffer = buffer ; return debugGraphics ; }
44747	public void insert ( String s , int pos ) { if ( pos < _NUM ) { throw new IllegalArgumentException ( _CHAR index less than zero . '' ) ; } ensurePopupMenuCreated ( ) ; popupMenu . insert ( new JMenuItem ( s ) , pos ) ; }
44760	private static Marshaller assertionFailed ( String message ) throws JAXBException { throw new JAXBException ( message ) ; }
44796	@ Override public int available ( ) throws IOException { if ( pos == - _NUM ) { return tail - head - pad ; } return pos - head ; }
44854	public Object clone ( ) throws CloneNotSupportedException { try { UnicastRemoteObject cloned = ( UnicastRemoteObject ) super . clone ( ) ; cloned . reexport ( ) ; return cloned ; } catch ( RemoteException e ) { throw new ServerCloneException ( _CHAR Clone failed _CHAR , e ) ; } }
44959	protected void indent ( int depth ) throws IOException { if ( m_startNewLine ) outputLineSep ( ) ; if ( m_indentAmount > _NUM ) printSpace ( depth * m_indentAmount ) ; }
44981	public int hashCode ( ) { return name . hashCode ( ) ; }
45011	@ Override public void close ( ) throws IOException { eof = _BOOL ; position = _NUM ; mark =- _NUM ; }
45027	public static AVA valueOf ( final String ava , final Schema schema ) { final SubstringReader reader = new SubstringReader ( ava ) ; try { return decode ( reader , schema ) ; } catch ( final UnknownSchemaElementException e ) { final LocalizableMessage message = ERR_RDN_TYPE_NOT_FOUND . get ( ava , e . getMessageObject ( ) ) ; throw new LocalizedIllegalArgumentException ( message ) ; } }
45054	public String toSessionTokenId ( SessionID sessionID ) { return encoding . encryptKey ( sessionID ) ; }
45195	protected void addCustomMetadataExtensions ( XMPMeta xmpMeta ) { }
45200	public static IOFileFilter nameFileFilter ( String name ) { return new NameFileFilter ( name ) ; }
45209	public boolean isLocalSessionService ( URL svcurl ) { return serverConfig . isLocalSessionService ( svcurl ) ; }
45293	@ Override public void rejectedExecution ( Runnable r , ThreadPoolExecutor executor ) { RadiusRequestHandler handler = ( RadiusRequestHandler ) r ; LOG . warning ( _CHAR RADIUS thread pool queue full . Dropping packet from _CHAR + handler . getClientName ( ) ) ; }
45313	@ Override public String toString ( ) { return new StringBuilder ( ) . append ( this . getClass ( ) . getName ( ) ) . append ( COLON ) . append ( name ) . toString ( ) ; }
45391	public boolean isPostExternalInitializationSubcommand ( ) { return isSubcommand ( POST_EXTERNAL_INITIALIZATION_SUBCMD_NAME ) ; }
45454	private boolean isSessionUsedInSAML2 ( Set userSession , String userId ) { if ( ( userSession == _NULL ) || userSession . isEmpty ( ) ) { return _BOOL ; } else { Object session = userSession . iterator ( ) . next ( ) ; return MultiProtocolUtils . usedInProtocol ( session , SingleLogoutManager . SAML2 ) ; } }
45470	public final int size ( ) { if ( written < _NUM ) { written = Integer . MAX_VALUE ; } return written ; }
45476	public final int bytesProduced ( ) { return bytesProduced ; }
45542	public static IOFileFilter nameFileFilter ( String name , IOCase caseSensitivity ) { return new NameFileFilter ( name , caseSensitivity ) ; }
45561	public Cursor fetchAllOrdered ( ) { return database . query ( DATABASE_TABLE , KEYS , _NULL , _NULL , _NULL , _NULL , KEY_EVENTNAME + _CHAR ASC _CHAR ) ; }
45574	private void genPreamblePackage ( String packageName ) { if ( ! _CHAR _CHAR . equals ( packageName ) && packageName != _NULL ) { out . printil ( _CHAR package '' + packageName + '' ; _CHAR ) ; out . println ( ) ; } }
45576	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo addFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return _fooLocalService . addFoo ( foo ) ; }
45594	@ Override public TagResult generateValue ( TemplateEntry templateEntry , TemplateValue templateValue ) { templateValue . getValue ( ) . append ( nextValue ++ ) ; return TagResult . SUCCESS_RESULT ; }
45614	public void recompose ( StylesheetRoot root ) { root . recomposeWhiteSpaceInfo ( this ) ; }
45629	private void writeObject ( java . io . ObjectOutputStream s ) throws java . io . IOException { s . defaultWriteObject ( ) ; Object [ ] elements = getArray ( ) ; s . writeInt ( elements . length ) ; for ( Object element : elements ) s . writeObject ( element ) ; }
45826	private void writeObject ( java . io . ObjectOutputStream s ) throws java . io . IOException { s . defaultWriteObject ( ) ; for ( E e : this ) s . writeObject ( e ) ; s . writeObject ( _NULL ) ; }
45848	public boolean maxCachingTimeReached ( ) { long cachingtime = currentTimeMillis ( ) / _NUM - latestRefreshTime ; return cachingtime > maxCachingTime * _NUM ; }
45862	private static void checkProblemSize ( int n , int nr_class ) { if ( n >= Integer . MAX_VALUE / nr_class || n * nr_class < _NUM ) { throw new IllegalArgumentException ( _CHAR _CHAR * _CHAR is too large : _CHAR + nr_class + _CHAR * _CHAR + n ) ; } }
45863	public boolean contains ( String key ) { return get ( key ) != _NULL ; }
46048	public String toString ( ) { return ( _CHAR AuthPrincipal : _CHAR + name ) ; }
46106	public boolean isFixedRowHeight ( ) { return ( rowHeight > _NUM ) ; }
46131	public QRCallbackBuilder withUriPort ( String port ) { this . port = port ; return this ; }
46143	public static List < Object > evaluate ( List < Object > list , Bindings bindings ) throws ExpressionException { List < Object > evaluatedList = new ArrayList < > ( ) ; for ( Object object : list ) { evaluatedList . add ( evaluate ( object , bindings ) ) ; } return evaluatedList ; }
46197	public static Object convertElementToJAXB ( Element element ) throws JAXBException { Unmarshaller u = jc . createUnmarshaller ( ) ; return u . unmarshal ( element ) ; }
46220	public boolean isLong ( ) { return ( val instanceof Long || val instanceof Integer ) ; }
46242	public void updateBorder ( ) { boolean displayBorder = scroll . getVerticalScrollBar ( ) . isVisible ( ) || scroll . getHorizontalScrollBar ( ) . isVisible ( ) ; if ( displayBorder ) { scroll . setBorder ( etchedBorder ) ; } else { scroll . setBorder ( emptyBorder ) ; } }
46244	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { try { s . defaultReadObject ( ) ; this . queue = new Object [ q . size ( ) ] ; comparator = q . comparator ( ) ; addAll ( q ) ; } finally { q = _NULL ; } }
46272	private boolean isStandardTextRepresentationClass ( ) { return isRepresentationClassReader ( ) || String . class . equals ( representationClass ) || isRepresentationClassCharBuffer ( ) || char [ ] . class . equals ( representationClass ) ; }
46282	public void removeJob ( String jobId ) { if ( jobs . contains ( jobId ) ) { jobs . remove ( jobId ) ; } }
46285	public final boolean greaterEquals ( ProtocolVersion version ) { return isComparable ( version ) && ( compareToVersion ( version ) >= _NUM ) ; }
46291	private void tagWithArguments ( TemplateTag tag , String ... arguments ) throws DecodeException { tagWithArguments ( tag , templateWithAnyAttribute ( ) , arguments ) ; }
46293	private void assertDeleteMsgCSNEquals ( ReplicationMsg msg , CSN nextCSN , String msgNumber ) { Assertions . assertThat ( msg ) . isInstanceOf ( DeleteMsg . class ) ; DeleteMsg del = ( DeleteMsg ) msg ; assertEquals ( del . getCSN ( ) , nextCSN , _CHAR The _CHAR + msgNumber + _CHAR message received by a new client was the wrong one . '' ) ; }
46300	synchronized void receivedLast ( ) { closedByWriter = _BOOL ; notifyAll ( ) ; }
46320	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK ! _CHAR ) ; logger . info ( _CHAR Dialog = _CHAR + requestEvent . getDialog ( ) ) ; logger . info ( _CHAR Dialog State = _CHAR + requestEvent . getDialog ( ) . getState ( ) ) ; this . ackSeen = _BOOL ; }
46327	public void replaceAll ( Collection < ByteString > values ) { clear ( ) ; addAll ( values ) ; }
46345	public String toString ( ) { return Integer . toString ( unique , _NUM ) + _CHAR : _CHAR + Long . toString ( time , _NUM ) + _CHAR : _CHAR + Integer . toString ( count , _NUM ) ; }
46482	public boolean hasTextLitOnly ( ) { return m_hasTextLitOnly ; }
46487	@ DataProvider ( name = _CHAR namedValueIdentifierValues _CHAR ) public Object [ ] [ ] createNamedValueIdentifierValues ( ) { return new Object [ ] [ ] { { _CHAR serialNumber _CHAR , _BOOL } , { _CHAR issuer _CHAR , _BOOL } , { _CHAR Serialnumber _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR serial Number _CHAR , _BOOL } , { _CHAR missingSpace _CHAR , _BOOL } } ; }
46489	public void changeToParentDirectory ( ) { selectedFile = _NULL ; File oldValue = getCurrentDirectory ( ) ; setCurrentDirectory ( getFileSystemView ( ) . getParentDirectory ( oldValue ) ) ; }
46490	public boolean isActive ( String value , String activeValue ) { return value == _NULL || value . equalsIgnoreCase ( activeValue ) ; }
46506	public boolean isWaitLongEnough ( ) { long elapsed = Time . currentTimeMillis ( ) - lastSendTime ; if ( elapsed > currentWaitPeriod - spamGracePeriod ) { return _BOOL ; } return _BOOL ; }
46551	private void adjustRowCountBy ( int changeAmount ) { rowCount += changeAmount ; }
46554	public void appendCell ( byte value ) { appendCell ( String . valueOf ( value ) ) ; }
46573	@ Override public void ignorableWhitespace ( char buffer [ ] , int start , int len ) throws SAXException { if ( saxLog . isDebugEnabled ( ) ) { saxLog . debug ( _CHAR ignorableWhitespace ( _CHAR + new String ( buffer , start , len ) + _CHAR ) _CHAR ) ; } }
46577	public void addResponseProvider ( String name , ResponseProvider respProvider ) throws NameAlreadyExistsException { respProviders . addResponseProvider ( name , respProvider ) ; }
46580	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK ! _CHAR ) ; logger . info ( _CHAR Dialog = _CHAR + requestEvent . getDialog ( ) ) ; logger . info ( _CHAR Dialog State = _CHAR + requestEvent . getDialog ( ) . getState ( ) ) ; this . ackSeen = _BOOL ; }
46625	public < T > LocalizableMessage print ( PropertyDefinition < T > pd , T value ) { return pd . accept ( pimpl , value , _NULL ) ; }
46646	public static byte [ ] decode ( String s ) throws java . io . IOException { return decode ( s , NO_OPTIONS ) ; }
46705	public static Tailer create ( File file , TailerListener listener , long delayMillis , boolean end ) { return create ( file , listener , delayMillis , end , DEFAULT_BUFSIZE ) ; }
46717	public void addRetentionPolicy ( RetentionPolicy < ? > policy ) { this . retentionPolicies . add ( policy ) ; }
46741	public GenericURI parseUrl ( String url ) throws ParseException { return new URLParser ( url ) . parse ( ) ; }
46745	public static ByteString valueOfInt ( int i ) { final byte [ ] bytes = new byte [ _NUM ] ; for ( int j = _NUM ; j >= _NUM ; j -- ) { bytes [ j ] = ( byte ) i ; i >> >= _NUM ; } return wrap ( bytes ) ; }
46775	public boolean shouldCheckWhitespace ( ) { return _NULL != m_whiteSpaceInfoList ; }
46782	private void readObject ( java . io . ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getName ( ) , getMask ( actions ) ) ; }
46805	public int value ( ) { return _value ; }
46834	protected static void copyBytes ( byte [ ] b , int dest , int src , int len ) { for ( int pos = _NUM ; pos < len ; pos ++ ) { b [ pos + dest ] = b [ pos + src ] ; } }
46837	private void disconnectAndRemove ( ConnectionRecord cr ) { connectionTable . remove ( makeKeyFromRecord ( cr ) ) ; cr . conn . close ( ) ; }
46845	public void removeLayoutComponent ( Component c ) { }
46863	private boolean skipAccessCheck ( Operation operation ) { return operation . getClientConnection ( ) . hasPrivilege ( Privilege . BYPASS_ACL , operation ) ; }
46907	@ Override public synchronized Set < Map . Entry < Object , Object >> entrySet ( ) { checkInitialized ( ) ; if ( entrySet == _NULL ) { if ( entrySetCallCount ++ == _NUM ) entrySet = Collections . unmodifiableMap ( this ) . entrySet ( ) ; else return super . entrySet ( ) ; } if ( entrySetCallCount != _NUM ) throw new RuntimeException ( _CHAR Internal error . '' ) ; return entrySet ; }
46910	public boolean disableAll ( ) { return disableAll ; }
46938	JwtSessionMapperBuilder compressedUsing ( CompressionAlgorithm compressionAlgorithm ) { this . compressionAlgorithm = checkNotNull ( compressionAlgorithm ) ; return this ; }
46943	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK _CHAR + requestEvent . getRequest ( ) ) ; }
46960	public int receive ( byte [ ] buffer , int offset , int count ) { return receive ( buffer , offset , count , Integer . MAX_VALUE ) ; }
46962	private static int [ ] [ ] canonicalArrayForm ( Vector ranges ) { return ( int [ ] [ ] ) ranges . toArray ( new int [ ranges . size ( ) ] [ ] ) ; }
46971	@ Override public String composeName ( String name , String prefix ) throws NamingException { return prefix + _CHAR / _CHAR + name ; }
47019	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo deleteFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return _fooLocalService . deleteFoo ( foo ) ; }
47105	static byte [ ] altBase64ToByteArray ( String s ) { return base64ToByteArray ( s , _BOOL ) ; }
47109	public int hashCode ( ) { return super . hashCode ( ) ; }
47131	public static void onHideSoftInput ( Context context , View view ) { if ( view != _NULL && view . getWindowToken ( ) != _NULL ) { InputMethodManager mInputMethodManager = ( InputMethodManager ) context . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; mInputMethodManager . hideSoftInputFromWindow ( view . getWindowToken ( ) , InputMethodManager . HIDE_NOT_ALWAYS ) ; } }
47186	public static com . liferay . blade . samples . servicebuilder . model . Foo addFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return getService ( ) . addFoo ( foo ) ; }
47195	public synchronized void trimToSize ( ) { if ( elementData . length != elementCount ) { grow ( elementCount ) ; } }
47279	public void extend_selection_to_whole_connections ( ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; set_interactive_state ( ( ( StateSelectedItem ) interactive_state ) . extent_to_whole_connections ( ) ) ; }
47295	private synchronized void writeObject ( java . io . ObjectOutputStream s ) throws java . io . IOException { java . io . ObjectOutputStream . PutField fields = s . putFields ( ) ; fields . put ( _CHAR value _CHAR , value ) ; fields . put ( _CHAR count _CHAR , count ) ; fields . put ( _CHAR shared _CHAR , _BOOL ) ; s . writeFields ( ) ; }
47306	public int hashCode ( ) { return ( command == _NULL ? _NUM : command . hashCode ( ) ) ; }
47321	@ Override public void write ( byte [ ] b , int off , int len ) { }
47324	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; }
47334	@ Override public void addCookie ( final Cookie cookie ) { if ( included || isCommitted ( ) ) { return ; } cookies . add ( cookie ) ; String header = generateCookieString ( cookie ) ; addHeader ( _CHAR Set - Cookie _CHAR , header , getContext ( ) . getCookieProcessor ( ) . getCharset ( ) ) ; }
47352	public void release ( ) { gsStack = _NULL ; currentGs = _NULL ; contentStream = _NULL ; resources = _NULL ; }
47363	public void updateUI ( ) { setUI ( ( ProgressBarUI ) UIManager . getUI ( this ) ) ; }
47364	@ Override public void write ( int b ) { }
47370	static void needToExitWithErrorCode ( ) { Upgrade . exitWithErrorCode = _BOOL ; }
47383	public Builder withMessageDispatcherDuration ( long duration ) { config . setMessageDispatcherDuration ( duration ) ; return this ; }
47435	public static String rdnValueFromDn ( String dn ) { return rdnValueFromDn ( DN . valueOf ( dn ) ) ; }
47486	public static Long valueOf ( String string , int radix ) throws NumberFormatException { return valueOf ( parseLong ( string , radix ) ) ; }
47655	@ DataProvider ( name = _CHAR mixedMatches _CHAR ) public Object [ ] [ ] mixedData ( ) { return new Object [ ] [ ] { { _CHAR _NUM : _NUM : _NUM : CD30 : _NUM : _NUM : _NUM : _NUM _CHAR } , { _CHAR _NUM : _NUM : _NUM : cd3f : _NUM : _NUM : _NUM : DC30 _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM _CHAR } , { _CHAR _NUM . _NUM . _NUM . _NUM _CHAR } } ; }
47690	public Object clone ( ) { return super . clone ( ) ; }
47718	public static void clear ( ) { INSTANCES . remove ( ) ; }
47721	public void assertion ( boolean b , java . lang . String msg ) { if ( ! b ) { java . lang . String fMsg = XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_INCORRECT_PROGRAMMER_ASSERTION , new Object [ ] { msg } ) ; throw new RuntimeException ( fMsg ) ; } }
47750	public static void enableBackend ( String backendID ) throws DirectoryException { enableBackend ( backendID , TRUE_VALUE , ERR_TASK_CANNOT_ENABLE_BACKEND ) ; }
47764	public static com . liferay . blade . samples . servicebuilder . model . Foo deleteFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return getService ( ) . deleteFoo ( foo ) ; }
47879	public DTMIterator cloneWithReset ( ) throws CloneNotSupportedException { OneStepIterator clone = ( OneStepIterator ) super . cloneWithReset ( ) ; clone . m_iterator = m_iterator ; return clone ; }
47895	public static int classModifiers ( ) { return PUBLIC | PROTECTED | PRIVATE | ABSTRACT | STATIC | FINAL | STRICT ; }
47927	public DTMIterator cloneWithReset ( ) throws CloneNotSupportedException { ChildTestIterator clone = ( ChildTestIterator ) super . cloneWithReset ( ) ; clone . m_traverser = m_traverser ; return clone ; }
48009	public void updateUI ( ) { setUI ( ( SeparatorUI ) UIManager . getUI ( this ) ) ; }
48046	public double [ ] board_to_dsn ( PlaVectorInt p_vector ) { double [ ] result = new double [ _NUM ] ; PlaPointFloat v = p_vector . to_float ( ) ; result [ _NUM ] = board_to_dsn ( v . v_x ) ; result [ _NUM ] = board_to_dsn ( v . v_y ) ; return result ; }
48065	public static void disableBackend ( String backendID ) throws DirectoryException { enableBackend ( backendID , FALSE_VALUE , ERR_TASK_CANNOT_DISABLE_BACKEND ) ; }
48159	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo deleteFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return _fooLocalService . deleteFoo ( foo ) ; }
48166	public int value ( ) { return _value ; }
48244	private void checkJobPromotion ( ) { int timeout = config . getInteger ( _CHAR job . promotion . interval _CHAR , _NUM ) ; int limit = config . getInteger ( _CHAR job . promotion . limit _CHAR , _NUM ) ; vertx . setPeriodic ( timeout , _NULL ) ; }
48277	public static boolean hasBackend ( String backendID ) { return directoryServer . backends . containsKey ( backendID ) ; }
48328	public static int defineTag ( int ifdId , short tagId ) { return ( tagId & _NUM ) | ( ifdId << _NUM ) ; }
48356	public void updateUI ( ) { setUI ( ( SliderUI ) UIManager . getUI ( this ) ) ; updateLabelUIs ( ) ; }
48400	@ Override public boolean append ( freert . planar . PlaShape p_shape , java . util . Locale p_locale ) { PrintableShape transformed_shape = coordinate_transform . board_to_user ( p_shape , p_locale ) ; if ( transformed_shape == _NULL ) return _BOOL ; return append ( transformed_shape . toString ( ) ) ; }
48408	public static TypeReference newFormalParameterReference ( int paramIndex ) { return new TypeReference ( ( METHOD_FORMAL_PARAMETER << _NUM ) | ( paramIndex << _NUM ) ) ; }
48433	@ Override public void write ( byte [ ] b ) { }
48489	@ Override public EnumEvalResult evaluate ( AciEvalContext evalCtx ) { return evaluate ( evalCtx . getRemoteAddress ( ) ) ; }
48544	public boolean isCurrency ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . currency ; }
48564	protected UnsupportedOperationException unsupportedFilterOperation ( String filterType ) { return new UnsupportedOperationException ( _CHAR _CHAR_CHAR_CHAR not supported in _CHAR + type + _CHAR queries _CHAR ) ; }
48593	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo deleteFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return _fooLocalService . deleteFoo ( foo ) ; }
48639	public boolean isSubTypeOf ( final AttributeType type ) { AttributeType tmp = this ; do { if ( tmp . matches ( type ) ) { return _BOOL ; } tmp = tmp . getSuperiorType ( ) ; } while ( tmp != _NULL ) ; return _BOOL ; }
48642	public void windowGainedFocus ( WindowEvent e ) { ( ( WindowFocusListener ) a ) . windowGainedFocus ( e ) ; ( ( WindowFocusListener ) b ) . windowGainedFocus ( e ) ; }
48657	public String toString ( ) { return ( _CHAR MembershipPrincipal : _CHAR + name ) ; }
48682	public static WindowMessage show ( String [ ] p_messages ) { return new WindowMessage ( p_messages ) ; }
48715	public String toXMLString ( ) { int beginTokenIndex = getStartToken ( ) . getTokenIndex ( ) ; int endTokenIndex = beginTokenIndex ; if ( getEndToken ( ) != _NULL ) { endTokenIndex = getEndToken ( ) . getTokenIndex ( ) ; } return getDocument ( ) . toXMLFragment ( beginTokenIndex , endTokenIndex ) ; }
48726	public void addLayoutComponent ( Component comp , Object constraints ) { if ( ( constraints == _NULL ) || ( constraints instanceof String ) ) { addLayoutComponent ( ( String ) constraints , comp ) ; } else { throw new IllegalArgumentException ( _CHAR can not add to layout : _CHAR + _CHAR constraint must be a _CHAR + _CHAR string ( or _NULL ) _CHAR ) ; } }
48753	public static boolean scheduleTask ( Runnable task ) { boolean success = _BOOL ; if ( ! initialized ) { initialize ( _BOOL ) ; } try { thrdPool . run ( task ) ; } catch ( ThreadPoolException e ) { debug . error ( _CHAR SMSThreadPool : unable to schedule task _CHAR + e ) ; success = _BOOL ; } return success ; }
48756	private void addPWPolicyControl ( PasswordPolicyErrorType errorType ) { for ( Control c : getRequestControls ( ) ) { if ( OID_PASSWORD_POLICY_CONTROL . equals ( c . getOID ( ) ) ) { addResponseControl ( new PasswordPolicyResponseControl ( _NULL , _NUM , errorType ) ) ; } } }
48760	public void ancestorMoved ( HierarchyEvent e ) { ( ( HierarchyBoundsListener ) a ) . ancestorMoved ( e ) ; ( ( HierarchyBoundsListener ) b ) . ancestorMoved ( e ) ; }
48762	public void xref ( ) { }
48802	@ Override public boolean hasNextElement ( ) throws IOException { return reader . hasNextElement ( ) ; }
48851	@ Override public void sendAttributeChangeNotification ( AttributeChangeNotification notification ) throws MBeanException , RuntimeOperationsException { if ( notification == _NULL ) throw new RuntimeOperationsException ( new IllegalArgumentException ( _CHAR Notification is _NULL _CHAR ) , _CHAR Notification is _NULL _CHAR ) ; if ( attributeBroadcaster == _NULL ) return ; if ( log . isDebugEnabled ( ) ) log . debug ( _CHAR AttributeChangeNotification _CHAR + notification ) ; attributeBroadcaster . sendNotification ( notification ) ; }
48871	public void recompose ( StylesheetRoot root ) { root . recomposeVariables ( this ) ; }
48876	private JsonResourceType createJsonResourceType ( JsonValue jsonValue ) throws EntitlementException { try { String s = jsonValue . toString ( ) ; return MAPPER . readValue ( s , JsonResourceType . class ) ; } catch ( IOException e ) { logger . error ( _CHAR Caught IOException while creating JSON wrapper '' , e ) ; throw new EntitlementException ( INVALID_CLASS , getMessage ( e ) ) ; } }
48898	public static void access ( Level level , String msgId , String data [ ] , Object session ) { try { logger . access ( level , msgId , data , session ) ; } catch ( LogException le ) { SAMLUtils . debug . error ( _CHAR LogUtils . access : _CHAR + _CHAR Error writing to log : _CHAR , le ) ; } }
48915	public void preSSOFederationRequest ( String hostedProviderID , String idpProviderID , HttpServletRequest request , HttpServletResponse response , FSAuthnRequest authnRequest ) { FSUtils . debug . message ( _CHAR In FSDefaultSPAdapter . preSSOFederationRequest . '' ) ; }
48956	protected void stopTimer ( ) { try { acquireTimerTaskSem ( ) ; try { if ( this . timerTask != _NULL ) { this . getStack ( ) . getTimer ( ) . cancel ( timerTask ) ; this . timerTask = _NULL ; } if ( this . earlyStateTimerTask != _NULL ) { this . getStack ( ) . getTimer ( ) . cancel ( this . earlyStateTimerTask ) ; this . earlyStateTimerTask = _NULL ; } } finally { releaseTimerTaskSem ( ) ; } } catch ( Exception ex ) { } }
48996	@ DataProvider ( name = _CHAR integerValues _CHAR ) public Object [ ] [ ] createIntegerValues ( ) { return new Object [ ] [ ] { { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR _CHAR , _BOOL } , { _CHAR _NUM _CHAR , _BOOL } , { _CHAR NULL _CHAR , _BOOL } , { _CHAR Not a Number _CHAR , _BOOL } } ; }
49008	private static String buildCacheKey ( String realm , String entityId ) { return realm + _CHAR // '' + entityId ; }
49074	public static com . liferay . blade . samples . servicebuilder . model . Foo addFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return getService ( ) . addFoo ( foo ) ; }
49149	public static boolean isOpenIdConnectClient ( ClientRegistration clientRegistration ) { return clientRegistration . getAllowedScopes ( ) . contains ( OPENID ) ; }
49197	private void readObject ( ObjectInputStream s ) throws ClassNotFoundException , IOException { s . defaultReadObject ( ) ; myMimeType = new MimeType ( ( String ) s . readObject ( ) ) ; }
49206	public void waitForShutdown ( ) { try { join ( _NUM ) ; } catch ( InterruptedException e ) { } }
49232	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getName ( ) ) ; }
49304	void initializeEvaluationWeights ( ) { psWeight = users . size ( ) * subjectWeight ; prWeight = rules . size ( ) * ruleWeight ; pcWeight = conditions . size ( ) * conditionWeight ; }
49313	public long countDown ( ) { sync . releaseShared ( _NUM ) ; long result = getCount ( ) ; if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR Counting down [ _CHAR + Thread . currentThread ( ) . getName ( ) + _CHAR ] latch = _CHAR + result ) ; } return result ; }
49320	public static String firstValueAsString ( Entry entry , String attrDesc ) { Attribute attr = entry . getAttribute ( attrDesc ) ; return ( attr != _NULL && ! attr . isEmpty ( ) ) ? attr . firstValueAsString ( ) : _NULL ; }
49343	public int hashCode ( ) { return name . hashCode ( ) ; }
49372	public void windowClosing ( WindowEvent e ) { ( ( WindowListener ) a ) . windowClosing ( e ) ; ( ( WindowListener ) b ) . windowClosing ( e ) ; }
49412	public void paintTabbedPaneTabAreaBorder ( SynthContext context , Graphics g , int x , int y , int w , int h ) { }
49415	public void recompose ( StylesheetRoot root ) throws TransformerException { }
49425	public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR EntryEncodeConfig ( excludeDN = _CHAR ) ; buffer . append ( excludeDN ) ; buffer . append ( _CHAR , compressAttrDescriptions = _CHAR ) ; buffer . append ( compressAttrDescriptions ) ; buffer . append ( _CHAR , compressObjectClassSets = _CHAR ) ; buffer . append ( compressObjectClassSets ) ; buffer . append ( _CHAR ) _CHAR ) ; }
49444	public boolean isPoolPreparedStatements ( ) { return poolPreparedStatements ; }
49451	public double noise ( double x , double y , double frequency , double amplitude , boolean normalized ) { return noise ( x , y , _NUM , frequency , amplitude , normalized ) ; }
49462	@ Override public void nullifyUsedVars ( ) { authLevel = _NULL ; amAuthOATH = _NULL ; }
49502	public Location toLocation ( World world ) { return new Location ( world , x , y , z ) ; }
49527	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { System . out . println ( _CHAR shootmeA : got an ACK ! _CHAR ) ; System . out . println ( _CHAR Dialog State = _CHAR + dialog . getState ( ) ) ; new Timer ( ) . schedule ( new MyTimerTask ( this , _BOOL ) , _NUM ) ; }
49562	synchronized void receivedLast ( ) { closedByWriter = _BOOL ; notifyAll ( ) ; }
49600	public boolean isInitializeAllReplicationSubcommand ( ) { return isSubcommand ( INITIALIZE_ALL_REPLICATION_SUBCMD_NAME ) ; }
49602	public boolean disableReplicationServer ( ) { return disableReplicationServer ; }
49631	public boolean isIndeterminate ( ) { return indeterminate ; }
49652	void disablePercentages ( ) { percentages = _NULL ; }
49697	protected void BuildFDArrayUsed ( int Font ) { int [ ] FDSelect = fonts [ Font ] . FDSelect ; for ( Integer glyphsInList1 : glyphsInList ) { int glyph = ( int ) glyphsInList1 ; int FD = FDSelect [ glyph ] ; FDArrayUsed . add ( FD ) ; } }
49761	public static void addEntries ( String ... lines ) throws Exception { for ( Entry entry : makeEntries ( lines ) ) { addEntry ( entry ) ; } }
49775	private void unlock ( Object key ) { if ( key != _NULL ) { ( ( AbstractDocument ) key ) . readUnlock ( ) ; } }
49786	public void promoteSession ( SessionID sessionID ) { InternalSession session = removeSession ( sessionID ) ; if ( session == _NULL ) { throw new IllegalStateException ( _CHAR Attempted to promote non existent session _CHAR ) ; } session . setStored ( _BOOL ) ; sessionAccessManager . persistInternalSession ( session ) ; }
49789	private void dispatchCallbackInvoke ( TransactInfo transactInfo , String paramMarshalling ) { mJsBridge . dispatchClientCallback ( transactInfo , paramMarshalling ) ; }
49828	@ Override public void encodeBegin ( final FacesContext context ) throws IOException { super . encodeBegin ( context ) ; }
49849	public String toSessionTokenId ( InternalSession session ) { return toSessionTokenId ( session . getID ( ) ) ; }
49867	public org . omg . CORBA . TypeCode _type ( ) { return ORB . init ( ) . get_primitive_tc ( TCKind . tk_double ) ; }
49893	@ DataProvider ( name = _CHAR sequenceValues _CHAR ) public Object [ ] [ ] createSequenceValues ( ) { return new Object [ ] [ ] { { _CHAR { _NUM , _NUM } _CHAR , _BOOL } , { _CHAR { _NUM , _NUM } _CHAR , _BOOL } , { _CHAR { _NUM , _NUM } _CHAR , _BOOL } , { _CHAR { _NUM , } _CHAR , _BOOL } , { _CHAR { _NUM _NUM } _CHAR , _BOOL } , { _CHAR { _NUM , _NUM _CHAR , _BOOL } , { _CHAR { _NUM , _NUM _CHAR , _BOOL } , { _CHAR _NUM , _NUM } _CHAR , _BOOL } } ; }
49941	private static void parse ( String xml , ContentHandler contentHandler ) throws SAXException { try { XMLReader reader = new ExpatReader ( ) ; reader . setContentHandler ( contentHandler ) ; reader . parse ( new InputSource ( new StringReader ( xml ) ) ) ; } catch ( IOException e ) { throw new AssertionError ( e ) ; } }
49946	public int countPackages ( ) { return countPackages ( _BOOL ) ; }
49956	public void addMenuKeyListener ( MenuKeyListener l ) { listenerList . add ( MenuKeyListener . class , l ) ; }
50039	public void updateUI ( ) { setUI ( ( LabelUI ) UIManager . getUI ( this ) ) ; }
50051	private static boolean isAccessible ( Path path , AccessMode ... modes ) { try { provider ( path ) . checkAccess ( path , modes ) ; return _BOOL ; } catch ( IOException x ) { return _BOOL ; } }
50055	public boolean enabled ( ) { for ( PublisherSettings settings : publisherSettings ) { if ( shouldLog ( settings . classSettings ) || settings . methodSettings != _NULL ) { return _BOOL ; } } return _BOOL ; }
50057	public boolean isMaximum ( ) { return isMaximum ; }
50079	public static Paint newBackgroundPaint ( Context context ) { final Paint paint = new Paint ( ) ; paint . setColor ( Color . parseColor ( DEFAULT_BACKGROUND_COLOR_ID ) ) ; return paint ; }
50091	public int hashCode ( ) { return name . hashCode ( ) ; }
50092	@ Override public void onChatFragmentInteraction ( ) { }
50140	@ DataProvider ( name = _CHAR stringValues _CHAR ) public Object [ ] [ ] createStringValues ( ) { return new Object [ ] [ ] { { _CHAR \ _CHAR \ _CHAR _CHAR , _BOOL } , { _CHAR \ _CHAR escaped \ _CHAR \ _CHAR dquotes \ _CHAR _CHAR , _BOOL } , { _CHAR \ _CHAR valid Unicode \ u00D6 \ u00C4 \ _CHAR _CHAR , _BOOL } , { _CHAR \ _CHAR only one \ _CHAR \ _CHAR _CHAR , _BOOL } , { _CHAR invalid without dquotes _CHAR , _BOOL } , { _CHAR \ _CHAR missing end _CHAR , _BOOL } , { _CHAR \ _CHAR valid string \ _CHAR with extra trailing characters _CHAR , _BOOL } } ; }
50183	public void addInternalFrameListener ( InternalFrameListener l ) { listenerList . add ( InternalFrameListener . class , l ) ; enableEvents ( _NUM ) ; }
50206	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { System . out . println ( _CHAR shootme : got an ACK ! _CHAR ) ; System . out . println ( _CHAR Dialog State = _CHAR + dialog . getState ( ) ) ; }
50257	public boolean containsKey ( Object name ) { return map . containsKey ( name ) ; }
50299	public void mouseDragged ( MouseEvent e ) { }
50307	public boolean isCanceled ( ) { return schedule == _NULL ; }
50321	public void process ( String name , Vector elems , Hashtable atts , String pcdata ) { str = pcdata ; }
50458	private String normalizeString ( final String string ) { final StringBuilder builder = new StringBuilder ( string . length ( ) ) ; prepareUnicode ( builder , ByteString . valueOfUtf8 ( string ) , ignoreWhiteSpaceInStrings , ! caseSensitiveStrings ) ; if ( builder . length ( ) == _NUM && string . length ( ) > _NUM ) { return _CHAR _CHAR ; } return builder . toString ( ) ; }
50460	public void registerServiceListener ( ) { configHelperFactory . addListener ( new PushNotificationServiceListener ( ) ) ; }
50468	public int hashCode ( ) { return super . hashCode ( ) ; }
50478	private static final boolean isWhiteSpace ( final byte c ) { if ( c == _CHAR || c == _CHAR || c == _CHAR || c == _CHAR || c == _CHAR ) { return _BOOL ; } else { return _BOOL ; } }
50486	public static String dumpAsString ( Object obj ) { return dumpAsString ( obj , _BOOL ) ; }
50512	public String toString ( ) { return ( _CHAR ApplicationPrincipal : _CHAR + name ) ; }
50542	public synchronized void initializeGeneralTopics ( ) { yaml = new HelpYamlReader ( server ) ; for ( HelpTopic topic : yaml . getGeneralTopics ( ) ) { addTopic ( topic ) ; } for ( HelpTopic topic : yaml . getIndexTopics ( ) ) { if ( topic . getName ( ) . equals ( _CHAR Default _CHAR ) ) { defaultTopic = topic ; } else { addTopic ( topic ) ; } } }
50553	public final boolean lessEquals ( ProtocolVersion version ) { return isComparable ( version ) && ( compareToVersion ( version ) <= _NUM ) ; }
50605	public static double convertToDouble ( String rawValue ) throws XMPException { try { if ( rawValue == _NULL || rawValue . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty convert - string _CHAR , XMPError . BADVALUE ) ; } else { return Double . parseDouble ( rawValue ) ; } } catch ( NumberFormatException e ) { throw new XMPException ( _CHAR Invalid double string _CHAR , XMPError . BADVALUE ) ; } }
50700	public void moveDot ( int dot ) { moveDot ( dot , Position . Bias . Forward ) ; }
50732	public static int convertDpToPixel ( final float dp , final Context context ) { Resources resources = context . getResources ( ) ; DisplayMetrics metrics = resources . getDisplayMetrics ( ) ; return ( int ) ( dp * ( metrics . densityDpi / _NUM ) ) ; }
50810	public void inputMethodTextChanged ( InputMethodEvent e ) { ( ( InputMethodListener ) a ) . inputMethodTextChanged ( e ) ; ( ( InputMethodListener ) b ) . inputMethodTextChanged ( e ) ; }
50814	public Boolean isPassive ( ) { return isPassive ; }
50823	public GSERParser readStartSequence ( ) throws GSERException { next ( GSER_SEQUENCE_START ) ; skip ( GSER_SP ) ; return this ; }
50825	@ NonNull public final Agera filter ( @ NonNull Condition condition ) { return new AgeraFilter ( this , condition ) ; }
50849	public static long nextOperationID ( ) { long opID = nextOperationID . getAndIncrement ( ) ; if ( opID < _NUM ) { synchronized ( nextOperationID ) { if ( nextOperationID . get ( ) < _NUM ) { nextOperationID . set ( _NUM ) ; return _NUM ; } else { return nextOperationID . getAndIncrement ( ) ; } } } return opID ; }
50853	@ Override public com . liferay . blade . samples . servicebuilder . model . Foo addFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return _fooLocalService . addFoo ( foo ) ; }
50866	public void mouseMoved ( MouseEvent e ) { ( ( MouseMotionListener ) a ) . mouseMoved ( e ) ; ( ( MouseMotionListener ) b ) . mouseMoved ( e ) ; }
50881	public boolean isDecimalSeparatorAlwaysShown ( ) { return ndf . isDecimalSeparatorAlwaysShown ( ) ; }
50889	@ Override public void encodeChildren ( final FacesContext context ) throws IOException { }
50930	public ShapeTileBox gdi_update_get ( ) { return update_box ; }
50937	private void positionClockAndNotifications ( ) { boolean animate = mStackScroller . isAddOrRemoveAnimationPending ( ) ; int stackScrollerPadding = _NUM ; int bottom = mHeader . getCollapsedHeight ( ) ; stackScrollerPadding = bottom + mScrollLayoutPeekHeight + mNotificationTopPadding ; mTopPaddingAdjustment = _NUM ; mStackScroller . setIntrinsicPadding ( stackScrollerPadding ) ; requestScrollerTopPaddingUpdate ( animate ) ; }
51002	public static boolean containsAll ( final String value , final String [ ] needles ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return Arrays . stream ( needles ) . allMatch ( _NULL ) ; }
51019	@ Override public void close ( ) { try { super . close ( ) ; if ( this . socket != _NULL ) { this . socket . close ( ) ; this . socket = _NULL ; } } catch ( Exception e ) { getErrorManager ( ) . error ( _CHAR Exception occurred when closing the socket handler _CHAR , e , ErrorManager . CLOSE_FAILURE ) ; } }
51027	JSONStringer open ( Scope empty , String openBracket ) throws JSONException { if ( stack . isEmpty ( ) && out . length ( ) > _NUM ) { throw new JSONException ( _CHAR Nesting problem : multiple top - level roots _CHAR ) ; } beforeValue ( ) ; stack . add ( empty ) ; out . append ( openBracket ) ; return this ; }
51031	public long nextOperationID ( ) { long opID = nextOperationID . getAndIncrement ( ) ; if ( opID < _NUM ) { synchronized ( nextOperationID ) { if ( nextOperationID . get ( ) < _NUM ) { nextOperationID . set ( _NUM ) ; return _NUM ; } else { return nextOperationID . getAndIncrement ( ) ; } } } return opID ; }
51032	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { ObjectInputStream . GetField fields = s . readFields ( ) ; object = fields . get ( _CHAR object _CHAR , _NULL ) ; baseTypeName = ( String ) fields . get ( _CHAR baseTypeName _CHAR , _NULL ) ; reference = ( Ref ) fields . get ( _CHAR reference _CHAR , _NULL ) ; }
51051	public double noise ( double x , double y , double z , double frequency , double amplitude ) { return noise ( x , y , z , frequency , amplitude , _BOOL ) ; }
51052	public void addRealmSubject ( SSOToken token , String subjectName , String realmName , boolean exclusive ) throws NameAlreadyExistsException , InvalidNameException , PolicyException , SSOException { PolicyManager pm = new PolicyManager ( token , realmName ) ; SubjectTypeManager stm = pm . getSubjectTypeManager ( ) ; addRealmSubject ( subjectName , stm , exclusive ) ; }
51057	public MessageBytes addValue ( String name ) { MimeHeaderField mh = createHeader ( ) ; mh . getName ( ) . setString ( name ) ; return mh . getValue ( ) ; }
51059	public Observable < Order > retrieveOrderObservable ( Long orderId ) { io . vertx . rx . java . ObservableFuture < Order > resultHandler = io . vertx . rx . java . RxHelper . observableFuture ( ) ; retrieveOrder ( orderId , resultHandler . toHandler ( ) ) ; return resultHandler ; }
51061	public boolean isStringPainted ( ) { return paintString ; }
51074	public int compareTo ( Byte object ) { return compare ( value , object . value ) ; }
51116	private static String parseStringValue ( String parseString , String openTag , String closeTag , DataTypeValidationException exception ) throws DataTypeValidationException { String tagValue ; tagValue = parseTagValue ( parseString , openTag , closeTag ) ; if ( tagValue == _NULL ) { throw exception ; } return tagValue ; }
51176	public void replace ( ByteString value ) { clear ( ) ; add ( value ) ; }
51218	public void windowOpened ( WindowEvent e ) { ( ( WindowListener ) a ) . windowOpened ( e ) ; ( ( WindowListener ) b ) . windowOpened ( e ) ; }
51332	public final int pop ( ) { m_firstFree -- ; int n = m_map [ m_firstFree ] ; m_map [ m_firstFree ] = DTM . NULL ; return n ; }
51350	public boolean signatureCoversWholeDocument ( String name ) { getSignatureNames ( ) ; if ( ! sigNames . containsKey ( name ) ) return _BOOL ; try { return sigNames . get ( name ) [ _NUM ] == document . getReader ( ) . getFileLength ( ) ; } catch ( IOException e ) { throw new PdfException ( e ) ; } }
51361	public static String generateMessageHandle ( ) { if ( random == _NULL ) { return _NULL ; } byte bytes [ ] = new byte [ SAML2Constants . ID_LENGTH ] ; random . nextBytes ( bytes ) ; return byteArrayToString ( bytes ) ; }
51373	public void scheduleAtFixedRate ( TimerTask task , long delay , long period ) { if ( delay < _NUM || period <= _NUM ) { throw new IllegalArgumentException ( ) ; } scheduleImpl ( task , delay , period , _BOOL ) ; }
51478	public int charAt ( int pos ) { return text . get ( pos + text . start ) . getUnicode ( ) ; }
51481	public boolean equals ( Object obj ) { return ( obj instanceof AllPermission ) ; }
51531	public int hashCode ( ) { return super . hashCode ( ) ; }
51541	protected < V > Promise < V , ResourceException > handleRequest ( final Context context , final Request request ) { return new NotSupportedException ( ) . asPromise ( ) ; }
51549	public OrderService retrieveOrder ( Long orderId , Handler < AsyncResult < Order >> resultHandler ) { delegate . retrieveOrder ( orderId , resultHandler ) ; return this ; }
51569	private void clearFailureLockedTime ( ) { logger . trace ( _CHAR Clearing failure lockout time for user % s . '' , userDNString ) ; if ( - _NUM != getFailureLockedTime ( ) ) { failureLockedTime =- _NUM ; clearAttribute ( OP_ATTR_PWPOLICY_LOCKED_TIME ) ; } }
51581	protected void removeFromMapping ( ) { if ( path != _NULL ) { removeMapping ( this ) ; for ( int counter = getChildCount ( ) - _NUM ; counter >= _NUM ; counter -- ) ( ( FHTreeStateNode ) getChildAt ( counter ) ) . removeFromMapping ( ) ; } }
51618	public static boolean hasMimeType ( String mimeType ) { if ( mimeType == _NULL || mimeType . isEmpty ( ) ) { return _BOOL ; } return mimeTypeToExtensionMap . containsKey ( mimeType ) ; }
51638	private void copyData ( ) { try { String aLine ; while ( ( aLine = inputReader . readLine ( ) ) != _NULL ) writeHere . println ( aLine ) ; } catch ( Exception exc ) { System . err . println ( classname + _CHAR copyData ( ) input closed _CHAR ) ; } }
51650	public static byte [ ] decode ( byte [ ] source , int off , int len ) throws Base64DecoderException { return decode ( source , off , len , DECODABET ) ; }
51661	public AppLauncher appLauncherCallback ( AppLauncherCallback callback ) { this . appLauncherCallback = callback ; return this ; }
51703	public boolean isFullSpan ( ) { return this . fullSpan ; }
51706	public static ChatPage paginate ( String unpaginatedString , int pageNumber ) { return paginate ( unpaginatedString , pageNumber , GUARANTEED_NO_WRAP_CHAT_PAGE_WIDTH , CLOSED_CHAT_PAGE_HEIGHT ) ; }
51711	private boolean simulateEntryChange ( Entry newEntry , ConfigurationRepository configRepository ) { ArgumentCaptor < ConfigChangeListener > registeredListener = ArgumentCaptor . forClass ( ConfigChangeListener . class ) ; verify ( configRepository ) . registerChangeListener ( eq ( newEntry . getName ( ) ) , registeredListener . capture ( ) ) ; return registeredListener . getValue ( ) . configChangeIsAcceptable ( newEntry , new LocalizableMessageBuilder ( ) ) ; }
51745	private int convertLocationToModel ( int x , int y ) { int row = convertLocationToRow ( x , y , _BOOL ) ; int column = convertLocationToColumn ( x , y ) ; if ( row >= _NUM && column >= _NUM ) { return getModelIndex ( column , row ) ; } return - _NUM ; }
51814	public static Control createShortCircuitControl ( int resultCode , String section ) { return new ShortCircuitRequestControl ( _BOOL , resultCode , section ) ; }
51815	public static byte [ ] decode ( String s ) throws java . io . IOException { return decode ( s , NO_OPTIONS ) ; }
51819	public void appendCell ( boolean value ) { appendCell ( String . valueOf ( value ) ) ; }
51855	public Document createDocument ( String namespaceURI , String qualifiedName , DocumentType doctype ) throws DOMException { throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , _CHAR Not Implemented _CHAR ) ; }
51858	@ Override public boolean isField2 ( ) { return _foo . isField2 ( ) ; }
51901	public boolean areTablesSet ( ) { return ( qTables != _NULL ) ; }
51914	public boolean hasGlobalArgument ( String argumentName ) { return globalArgumentMap . containsKey ( argumentName ) ; }
51969	public void addMenuKeyListener ( MenuKeyListener l ) { listenerList . add ( MenuKeyListener . class , l ) ; }
51976	@ AfterMethod ( alwaysRun = _BOOL ) public void reenableBackend ( ) throws DirectoryException { Backend < ? > b = DirectoryServer . getBackend ( DN . valueOf ( _CHAR o = test _CHAR ) ) ; b . setWritabilityMode ( WritabilityMode . ENABLED ) ; }
51994	public String typeName ( ) { return typeName ; }
52002	public static DN valueOf ( final String dn ) { return valueOf ( dn , Schema . getDefaultSchema ( ) ) ; }
52008	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK ! _CHAR ) ; logger . info ( _CHAR Dialog = _CHAR + requestEvent . getDialog ( ) ) ; logger . info ( _CHAR Dialog State = _CHAR + requestEvent . getDialog ( ) . getState ( ) ) ; this . ackSeen = _BOOL ; }
52034	private void simulateEntryChange ( Entry newEntry , ConfigurationRepository configRepository ) { ArgumentCaptor < ConfigChangeListener > registeredListener = ArgumentCaptor . forClass ( ConfigChangeListener . class ) ; verify ( configRepository ) . registerChangeListener ( eq ( newEntry . getName ( ) ) , registeredListener . capture ( ) ) ; registeredListener . getValue ( ) . configChangeIsAcceptable ( newEntry , new LocalizableMessageBuilder ( ) ) ; }
52046	@ DataProvider ( name = _CHAR sequenceValues _CHAR ) public Object [ ] [ ] createSequenceValues ( ) { return new Object [ ] [ ] { { _CHAR { _NUM , _NUM } _CHAR , _BOOL } , { _CHAR { _NUM , _NUM } _CHAR , _BOOL } , { _CHAR { _NUM , _NUM } _CHAR , _BOOL } , { _CHAR { _NUM , } _CHAR , _BOOL } , { _CHAR { _NUM _NUM } _CHAR , _BOOL } , { _CHAR { _NUM , _NUM _CHAR , _BOOL } , { _CHAR { _NUM , _NUM _CHAR , _BOOL } , { _CHAR _NUM , _NUM } _CHAR , _BOOL } } ; }
52054	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR ExtendedRequest ( oid = _CHAR ) ; buffer . append ( oid ) ; if ( value != _NULL ) { buffer . append ( _CHAR , value = _CHAR ) ; buffer . append ( value ) ; } buffer . append ( _CHAR ) _CHAR ) ; }
52105	private static void initNetMask ( String ... lines ) { for ( String line : lines ) { validNetMasks . put ( line , line ) ; } }
52161	public void remove ( Component child ) { child . removeComponentListener ( viewListener ) ; super . remove ( child ) ; }
52184	public int hashCode ( ) { return selectedGroupDNs . hashCode ( ) ; }
52247	public ToHeader createToHeader ( Address address , String tag ) throws ParseException { if ( address == _NULL ) throw new NullPointerException ( _CHAR _NULL address _CHAR ) ; To to = new To ( ) ; to . setAddress ( address ) ; if ( tag != _NULL ) to . setTag ( tag ) ; return to ; }
52252	@ Override public LocalDate dateYearDay ( Era era , int yearOfEra , int dayOfYear ) { return dateYearDay ( prolepticYear ( era , yearOfEra ) , dayOfYear ) ; }
52266	public static boolean isNamingContext ( DN dn ) { return directoryServer . baseDnRegistry . containsNamingContext ( dn ) ; }
52288	public void run ( ) { try { Thread . sleep ( timeout ) ; thread . interrupt ( ) ; } catch ( InterruptedException e ) { } }
52308	public void init ( byte [ ] password , byte [ ] salt ) { super . init ( password , salt , _NUM ) ; }
52323	public static boolean isValidFilter ( String filter ) { try { getFilterFromString ( filter ) ; } catch ( IllegalArgumentException e ) { return _BOOL ; } return _BOOL ; }
52341	public void timeout ( ) { if ( timedOutAt <= _NUM ) { timedOutAt = currentTimeMillis ( ) / _NUM ; } }
52353	public double angle ( Pnt p ) { return Math . acos ( this . dot ( p ) / ( this . magnitude ( ) * p . magnitude ( ) ) ) ; }
52381	@ Override public void close ( ) throws java . io . IOException { flushBase64 ( ) ; super . close ( ) ; buffer = _NULL ; out = _NULL ; }
52393	public AppLauncher closeOutOnExit ( boolean closeOutOnExit ) { this . closeOutOnExit = closeOutOnExit ; return this ; }
52445	public static VariableModification < byte [ ] > shuffle ( final byte [ ] shuffle ) { return new ByteArrayShuffleModification ( shuffle ) ; }
52449	public int peek ( int n ) { try { return m_map [ m_firstFree - ( _NUM + n ) ] ; } catch ( ArrayIndexOutOfBoundsException e ) { throw new EmptyStackException ( ) ; } }
52451	public int hashCode ( ) { return name . hashCode ( ) ; }
52472	public void focusGained ( FocusEvent e ) { ( ( FocusListener ) a ) . focusGained ( e ) ; ( ( FocusListener ) b ) . focusGained ( e ) ; }
52506	public void saveState ( Bundle bundle ) { for ( ViewItem item : getItems ( ) ) { item . saveState ( bundle ) ; } }
52523	public static ByteString valueOfLong ( long l ) { final byte [ ] bytes = new byte [ _NUM ] ; for ( int i = _NUM ; i >= _NUM ; i -- ) { bytes [ i ] = ( byte ) l ; l >> >= _NUM ; } return wrap ( bytes ) ; }
52585	public Object cloneWithSource ( Object newSource ) { return new TreeSelectionEvent ( newSource , paths , areNew , oldLeadSelectionPath , newLeadSelectionPath ) ; }
52617	public void collapsePath ( TreePath path ) { setExpandedState ( path , _BOOL ) ; }
52631	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { System . out . println ( _CHAR shootme : got an ACK ! _CHAR ) ; System . out . println ( _CHAR Dialog State = _CHAR + dialog . getState ( ) ) ; }
52635	public boolean isChannelIdEnabled ( ) { return channelIdEnabled ; }
52648	public GSERParser readEndSequence ( ) throws GSERException { skip ( GSER_SP ) ; next ( GSER_SEQUENCE_END ) ; return this ; }
52712	@ Override public void close ( ) throws java . io . IOException { flushBase64 ( ) ; super . close ( ) ; buffer = _NULL ; out = _NULL ; }
52713	public static String lookupTag ( List < LanguageRange > priorityList , Collection < String > tags ) { return LocaleMatcher . lookupTag ( priorityList , tags ) ; }
52753	protected PropertyChangeListener createSelectionModelPropertyChangeListener ( ) { return getHandler ( ) ; }
52786	public String toString ( ) { return ( _CHAR NTPrincipal : _CHAR + name ) ; }
52788	@ Indexable ( type = IndexableType . DELETE ) @ Override public Foo deleteFoo ( Foo foo ) { return fooPersistence . remove ( foo ) ; }
52796	public boolean isError ( ) { return this . type == TYPE_MALFORMED_INPUT || this . type == TYPE_UNMAPPABLE_CHAR ; }
52918	public int hashCode ( ) { return name . hashCode ( ) ; }
52963	public static KeyStore createClient ( KeyStore caKeyStore ) { KeyStore clientKeyStore = createKeyStore ( ) ; copySelfSignedCertificates ( clientKeyStore , caKeyStore ) ; return clientKeyStore ; }
53010	public void addResourceResult ( ResourceResult resourceResult , ServiceType serviceType ) throws PolicyException { addResourceResult ( resourceResult , serviceType . getResourceNameComparator ( ) ) ; }
53038	public void addModification ( Modification mod ) { mods . add ( mod ) ; }
53106	public void updateState ( Path newFile ) throws IOException { Path cacheKey = newFile ; if ( ! Files . exists ( checksum . resolvePath ( newFile ) ) ) { checksum . remove ( cacheKey ) ; } else { checksum . put ( cacheKey , checksum . getCurrentDigest ( newFile ) ) ; } checksum . persistChecksums ( ) ; }
53188	boolean configureReplicationDomain ( ) { return configureReplicationDomain ; }
53201	public static IOFileFilter magicNumberFileFilter ( byte [ ] magicNumber ) { return new MagicNumberFileFilter ( magicNumber ) ; }
53227	public void mouseClicked ( MouseEvent e ) { ( ( MouseListener ) a ) . mouseClicked ( e ) ; ( ( MouseListener ) b ) . mouseClicked ( e ) ; }
53242	public void connectToHost ( String bindDN , String bindPassword ) throws LDAPConnectionException { connectToHost ( bindDN , bindPassword , new AtomicInteger ( _NUM ) , _NUM ) ; }
53266	public Document toDocument ( ) throws SOAPBindingException { return toDocument ( _BOOL ) ; }
53291	public boolean isBorderOpaque ( ) { return _BOOL ; }
53335	@ AfterMethod ( alwaysRun = _BOOL ) public void reenableBackend ( ) throws DirectoryException { for ( Object [ ] backendBaseDN2 : getBaseDNs ( ) ) { final DN baseDN = DN . valueOf ( backendBaseDN2 [ _NUM ] . toString ( ) ) ; Backend < ? > b = DirectoryServer . getBackend ( baseDN ) ; b . setWritabilityMode ( WritabilityMode . ENABLED ) ; } }
53372	public static StringArgument trustStorePathArgument ( final String defaultValue ) throws ArgumentException { return StringArgument . builder ( OPTION_LONG_TRUSTSTOREPATH ) . shortIdentifier ( OPTION_SHORT_TRUSTSTOREPATH ) . description ( INFO_DESCRIPTION_TRUSTSTOREPATH . get ( ) ) . defaultValue ( defaultValue ) . valuePlaceholder ( INFO_TRUSTSTOREPATH_PLACEHOLDER . get ( ) ) . buildArgument ( ) ; }
53392	public void not ( ) { mv . visitInsn ( Opcodes . ICONST_1 ) ; mv . visitInsn ( Opcodes . IXOR ) ; }
53404	@ Override public boolean elementAvailable ( ) throws IOException { return reader . elementAvailable ( ) ; }
53451	protected ApplicationWrapper createApplicationWrapper ( JsonValue jsonValue ) throws EntitlementException { try { return mapper . readValue ( jsonValue . toString ( ) , ApplicationWrapper . class ) ; } catch ( IOException e ) { throw new EntitlementException ( EntitlementException . INVALID_CLASS , e . getCause ( ) . getMessage ( ) ) ; } }
53542	public ConversationFactory withInitialSessionData ( Map < Object , Object > initialSessionData ) { this . initialSessionData = initialSessionData ; return this ; }
53562	@ Override public String toString ( ) { return this . getClass ( ) . getName ( ) + _CHAR + getName ( ) + _CHAR+ getTypeInternal ( ) + _CHAR ; }
53622	public void process ( String name , Vector elems , Hashtable atts , String pcdata ) { _name = name ; _elems = elems ; _atts = atts ; _pcdata = pcdata ; }
53647	public void characters ( char ch [ ] , int start , int length ) throws SAXException { if ( contentHandler != _NULL ) { contentHandler . characters ( ch , start , length ) ; } }
53673	public boolean isDataFlavorSupported ( DataFlavor flavor ) { DataFlavor [ ] flavors = getTransferDataFlavors ( ) ; for ( int i = _NUM ; i < flavors . length ; i ++ ) { if ( flavors [ i ] . equals ( flavor ) ) { return _BOOL ; } } return _BOOL ; }
53688	public void remove ( Component c ) { if ( popupMenu != _NULL ) popupMenu . remove ( c ) ; }
53714	public PdfFormXObject createFormXObject ( Color foreground , float moduleSide , PdfDocument document ) { PdfFormXObject xObject = new PdfFormXObject ( ( Rectangle ) _NULL ) ; Rectangle rect = placeBarcode ( new PdfCanvas ( xObject , document ) , foreground , moduleSide ) ; xObject . setBBox ( new PdfArray ( rect ) ) ; return xObject ; }
53761	public static int methodModifiers ( ) { return PUBLIC | PROTECTED | PRIVATE | ABSTRACT | STATIC | FINAL | SYNCHRONIZED | NATIVE | STRICT ; }
53778	@ Override public Object clone ( ) { if ( MODELMBEAN_LOGGER . isLoggable ( Level . FINER ) ) { MODELMBEAN_LOGGER . logp ( Level . FINER , ModelMBeanAttributeInfo . class . getName ( ) , _CHAR clone ( ) _CHAR , _CHAR Entry _CHAR ) ; } return ( new ModelMBeanAttributeInfo ( this ) ) ; }
53798	public static RDN valueOf ( final String rdn ) { return valueOf ( rdn , Schema . getDefaultSchema ( ) ) ; }
53911	protected void reportWrongNumberArgs ( ) throws WrongNumberArgsException { throw new WrongNumberArgsException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_TWO_OR_THREE , _NULL ) ) ; }
53935	public String toString ( ) { StringBuffer uriSpecString = new StringBuffer ( ) ; if ( m_scheme != _NULL ) { uriSpecString . append ( m_scheme ) ; uriSpecString . append ( _CHAR ) ; } uriSpecString . append ( getSchemeSpecificPart ( ) ) ; return uriSpecString . toString ( ) ; }
53943	public void appendCell ( float value ) { appendCell ( String . valueOf ( value ) ) ; }
53944	public void updateUI ( ) { setUI ( ( ViewportUI ) UIManager . getUI ( this ) ) ; }
53950	private boolean simulateEntryDelete ( Entry entry , ConfigurationRepository configRepository ) throws IOException { ArgumentCaptor < ConfigDeleteListener > registeredListener = ArgumentCaptor . forClass ( ConfigDeleteListener . class ) ; verify ( configRepository ) . registerDeleteListener ( eq ( entry . getName ( ) . parent ( ) ) , registeredListener . capture ( ) ) ; return registeredListener . getValue ( ) . configDeleteIsAcceptable ( entry , new LocalizableMessageBuilder ( ) ) ; }
53957	public void caretPositionChanged ( InputMethodEvent e ) { ( ( InputMethodListener ) a ) . caretPositionChanged ( e ) ; ( ( InputMethodListener ) b ) . caretPositionChanged ( e ) ; }
53982	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR IntermediateResponse ( oid = _CHAR ) . append ( oid ) ; if ( value != _NULL ) { buffer . append ( _CHAR , value = _CHAR ) . append ( value ) ; } buffer . append ( _CHAR ) _CHAR ) ; }
53995	private boolean isAuthnManagedLocally ( ) { return pwPolicyState != _NULL ; }
54007	@ Override protected boolean doSingleSignOn ( Object ssoToken , String inResponseTo , NameIdentifier opaqueHandle , NameIdentifier idpOpaqueHandle ) { FSUtils . debug . message ( _CHAR FSSSOBrowserArtifactProfileHandler . doSingleSignOn : Called _CHAR ) ; this . ssoToken = ssoToken ; List artList = createSAMLAssertionArtifact ( ssoToken , inResponseTo , opaqueHandle , idpOpaqueHandle ) ; sendSAMLArtifacts ( artList ) ; return _BOOL ; }
54025	public boolean isLocalNotificationService ( URL url ) { try { URL localURL = WebtopNaming . getNotificationURL ( ) ; return isUrlPrefix ( localURL , url ) ; } catch ( URLNotFoundException ex ) { return _BOOL ; } }
54082	public void componentResized ( ComponentEvent e ) { ( ( ComponentListener ) a ) . componentResized ( e ) ; ( ( ComponentListener ) b ) . componentResized ( e ) ; }
54128	public static int fieldModifiers ( ) { return PUBLIC | PROTECTED | PRIVATE | STATIC | FINAL | TRANSIENT | VOLATILE ; }
54141	static < T > ReplayPromise < T > replayPromise ( final Duration timeout , final long time ) { return new ReplayPromiseImpl < > ( timeout , time ) ; }
54149	private boolean recalculateSize ( ) { int oldSize = size ; size = _NUM ; for ( long elt : elements ) size += Long . bitCount ( elt ) ; return size != oldSize ; }
54190	public ImmutableList < MessageType > filterDocumentingMessages ( ProtoContainerElement element ) { ImmutableList . Builder < MessageType > builder = ImmutableList . builder ( ) ; for ( MessageType msg : element . getMessages ( ) ) { if ( ! msg . isMapEntry ( ) ) { builder . add ( msg ) ; } } return builder . build ( ) ; }
54304	private ModifyOperation replaceAttrEntry ( DN dn , String attrName , Object ... attrValStrings ) { ModifyRequest modifyRequest = Requests . newModifyRequest ( dn ) . addModification ( REPLACE , attrName , attrValStrings ) ; return getRootConnection ( ) . processModify ( modifyRequest ) ; }
54309	public static Map < String , MappedClass > mappingsFromJar ( File file ) { Map < String , ClassNode > nodes = _NULL ; try { nodes = JarUtils . loadClasses ( file ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return mappingsFromNodes ( nodes ) ; }
54350	public boolean isRoleIDP ( ) { return this . isRoleIDP ; }
54355	public static ClientException adaptInputException ( final Throwable cause ) { return new ClientException ( ReturnCode . ERROR_USER_DATA , ERR_CONSOLE_INPUT_ERROR . get ( cause . getMessage ( ) ) , cause ) ; }
54361	public boolean isPageInRange ( int pageNumber ) { for ( int ind = _NUM ; ind < sequenceStarts . size ( ) ; ind ++ ) { if ( sequenceStarts . get ( ind ) <= pageNumber && pageNumber <= sequenceEnds . get ( ind ) ) return _BOOL ; } return _BOOL ; }
54407	public static boolean isDefaultOrg ( String orgName ) { return ( orgName != _NULL ) || orgName . equals ( _CHAR / _CHAR ) ; }
54448	public static byte [ ] encodeBase64 ( byte [ ] binaryData ) { return encodeBase64 ( binaryData , _BOOL ) ; }
54450	public Object clone ( ) { if ( MODELMBEAN_LOGGER . isLoggable ( Level . FINER ) ) { MODELMBEAN_LOGGER . logp ( Level . FINER , ModelMBeanNotificationInfo . class . getName ( ) , _CHAR clone ( ) _CHAR , _CHAR Entry _CHAR ) ; } return ( new ModelMBeanNotificationInfo ( this ) ) ; }
54457	public String generateNextPrefix ( ) { return _CHAR ns _CHAR + ( count ++ ) ; }
54471	public void draw ( Graphics p_graphics , GdiContext p_graphics_context , double p_intensity ) { if ( expansion_room_arr == _NULL ) return ; for ( ExpandRoomObstacle curr_room : expansion_room_arr ) { if ( curr_room == _NULL ) continue ; curr_room . draw ( p_graphics , p_graphics_context , p_intensity ) ; } }
54475	public int hashCode ( ) { return subjectValues . hashCode ( ) ; }
54482	void addServiceListener ( String service ) { debug . message ( _CHAR Adding service listener _CHAR ) ; try { schemaManager . addListener ( this ) ; } catch ( Exception ee ) { debug . error ( _CHAR addServiceListener : _CHAR + ee . getMessage ( ) ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR Stack trace : _CHAR , ee ) ; } } }
54513	public int size ( ) { return count ; }
54531	public void reset ( ) { System . arraycopy ( IV , _NUM , ofbV , _NUM , IV . length ) ; cipher . reset ( ) ; }
54543	public void assertion ( boolean b , String msg ) { if ( ! b ) { String fMsg = XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_INCORRECT_PROGRAMMER_ASSERTION , new Object [ ] { msg } ) ; throw new RuntimeException ( fMsg ) ; } }
54544	public static boolean isOnline ( Context context ) { ConnectivityManager cm = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo netInfo = cm . getActiveNetworkInfo ( ) ; if ( netInfo != _NULL && netInfo . isConnectedOrConnecting ( ) ) { return _BOOL ; } return _BOOL ; }
54553	@ Override public int compareTo ( final Problem o ) { final int ix = this . severity . ordinal ( ) ; final int oid = o . severity . ordinal ( ) ; return ix - oid ; }
54566	public String toString ( ) { return ( _CHAR MSISDNPrincipal : _CHAR + name ) ; }
54570	public void assign_selected_to_new_group ( ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; StateInteractive new_state = ( ( StateSelectedItem ) interactive_state ) . assign_items_to_new_group ( ) ; set_interactive_state ( new_state ) ; }
54622	public boolean isAcceptAllFileFilterUsed ( ) { return useAcceptAllFileFilter ; }
54629	protected static String [ ] commaDelimitedListToStringArray ( String commaDelimitedStrings ) { return ( commaDelimitedStrings == _NULL || commaDelimitedStrings . length ( ) == _NUM ) ? new String [ _NUM ] : commaSeparatedValuesPattern . split ( commaDelimitedStrings ) ; }
54630	public void keyPressed ( KeyEvent e ) { ( ( KeyListener ) a ) . keyPressed ( e ) ; ( ( KeyListener ) b ) . keyPressed ( e ) ; }
54657	public boolean isCanceled ( ) { if ( pane == _NULL ) return _BOOL ; Object v = pane . getValue ( ) ; return ( ( v != _NULL ) && ( cancelOption . length == _NUM ) && ( v . equals ( cancelOption [ _NUM ] ) ) ) ; }
54674	public boolean hasDatabase ( ) { return ( database != _NULL ) ; }
54697	public boolean isSuperTypeOf ( final AttributeType type ) { return type . isSubTypeOf ( this ) ; }
54703	public static int nextMessageID ( ) { int msgID = nextMessageID . getAndIncrement ( ) ; if ( msgID < _NUM ) { synchronized ( nextMessageID ) { if ( nextMessageID . get ( ) < _NUM ) { nextMessageID . set ( _NUM ) ; return _NUM ; } else { return nextMessageID . getAndIncrement ( ) ; } } } return msgID ; }
54705	@ Override public void update ( ) { if ( ! bounce ) return ; counter ++ ; if ( counter == _NUM ) super . getSpriteFrame ( ) . setTranslateY ( super . getSpriteFrame ( ) . getTranslateY ( ) - BOUNCE_HEIGHT ) ; else if ( counter == _NUM ) { super . getSpriteFrame ( ) . setTranslateY ( super . getSpriteFrame ( ) . getTranslateY ( ) + BOUNCE_HEIGHT ) ; counter = _NUM ; bounce = _BOOL ; } }
54741	public void removeAllUpdateListeners ( ) { if ( updateListeners == _NULL ) { return ; } updateListeners . clear ( ) ; updateListeners = _NULL ; }
54745	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { System . out . println ( _CHAR Error ! Function . execute should not be called ! _CHAR ) ; return _NULL ; }
54763	public void windowStateChanged ( WindowEvent e ) { ( ( WindowStateListener ) a ) . windowStateChanged ( e ) ; ( ( WindowStateListener ) b ) . windowStateChanged ( e ) ; }
54776	public void mouseEntered ( MouseEvent e ) { ( ( MouseListener ) a ) . mouseEntered ( e ) ; ( ( MouseListener ) b ) . mouseEntered ( e ) ; }
54793	@ Override public void create ( Token token ) throws CoreTokenException { final ResultHandler < Token , CoreTokenException > createHandler = adapter . create ( token ) ; createHandler . getResults ( ) ; debug ( _CHAR Token { _NUM } created _CHAR , token . getTokenId ( ) ) ; }
54809	public boolean handleError ( DOMError error ) { errors . add ( new DOMErrorImpl ( error ) ) ; return _BOOL ; }
54890	public void removeMenuKeyListener ( MenuKeyListener l ) { listenerList . remove ( MenuKeyListener . class , l ) ; }
54932	public void updateUI ( ) { if ( isAcceptAllFileFilterUsed ( ) ) { removeChoosableFileFilter ( getAcceptAllFileFilter ( ) ) ; } FileChooserUI ui = ( ( FileChooserUI ) UIManager . getUI ( this ) ) ; if ( fileSystemView == _NULL ) { setFileSystemView ( FileSystemView . getFileSystemView ( ) ) ; } setUI ( ui ) ; if ( isAcceptAllFileFilterUsed ( ) ) { addChoosableFileFilter ( getAcceptAllFileFilter ( ) ) ; } }
54953	public boolean isLocalSessionService ( URL url ) { return isUrlPrefix ( localServerSessionServiceURL , url ) ; }
55040	static DN create ( ManagedObjectPath < ? , ? > path , InstantiableRelationDefinition < ? , ? > relation , LDAPProfile profile ) { DNBuilder builder = new DNBuilder ( profile ) ; path . serialize ( builder ) ; builder . appendManagedObjectPathElement ( relation ) ; return builder . build ( ) ; }
55045	@ Override public String composeName ( String name , String prefix ) { return prefix + _CHAR / _CHAR + name ; }
55090	public DTMIterator cloneWithReset ( ) throws CloneNotSupportedException { DescendantIterator clone = ( DescendantIterator ) super . cloneWithReset ( ) ; clone . m_traverser = m_traverser ; clone . resetProximityPositions ( ) ; return clone ; }
55128	protected void deepMarkSizeInvalid ( ) { markSizeInvalid ( ) ; for ( int counter = getChildCount ( ) - _NUM ; counter >= _NUM ; counter -- ) ( ( TreeStateNode ) getChildAt ( counter ) ) . deepMarkSizeInvalid ( ) ; }
55183	public void remove ( ) { checkState ( ) ; iterator . remove ( ) ; }
55184	public int indexOf ( Object elem ) { return delegate . indexOf ( elem ) ; }
55187	public PlaLineInt opposite ( ) { return new PlaLineInt ( point_b , point_a ) ; }
55193	public static void addEntries ( List < Entry > entries ) throws Exception { for ( Entry entry : entries ) { addEntry ( entry ) ; } }
55214	boolean isSecureReplication ( ) { return secureReplication ; }
55273	public boolean isVisible ( ) { return visible ; }
55290	public void removePowerupEffect ( ) { root . getChildren ( ) . remove ( powerupEffectView ) ; }
55310	public void ancestorResized ( HierarchyEvent e ) { ( ( HierarchyBoundsListener ) a ) . ancestorResized ( e ) ; ( ( HierarchyBoundsListener ) b ) . ancestorResized ( e ) ; }
55311	final int strengthOrder ( int order ) { int s = owner . getStrength ( ) ; if ( s == Collator . PRIMARY ) { order & = RBCollationTables . PRIMARYDIFFERENCEONLY ; } else if ( s == Collator . SECONDARY ) { order & = RBCollationTables . SECONDARYDIFFERENCEONLY ; } return order ; }
55349	protected static Vector convertToVector ( final Object [ ] [ ] anArray ) { if ( anArray == _NULL ) { return _NULL ; } final Vector v = new Vector ( anArray . length ) ; for ( final Object [ ] element : anArray ) { v . addElement ( convertToVector ( element ) ) ; } return v ; }
55361	public static Entry modifyEntryPermissive ( final Entry entry , final Collection < Modification > changes ) throws LdapException { return modifyEntry0 ( entry , changes , _BOOL ) ; }
55495	public boolean verifyWSSSignature ( org . w3c . dom . Document document , java . lang . String certAlias ) throws XMLSignatureException { return sp . verifyWSSSignature ( document , certAlias ) ; }
55504	protected AbstractElement createDefaultRoot ( ) { BranchElement map = ( BranchElement ) createBranchElement ( _NULL , _NULL ) ; Element line = createLeafElement ( map , _NULL , _NUM , _NUM ) ; Element [ ] lines = new Element [ _NUM ] ; lines [ _NUM ] = line ; map . replace ( _NUM , _NUM , lines ) ; return map ; }
55527	public void logStackTrace ( ) { this . logStackTrace ( TRACE_DEBUG ) ; }
55591	public void mouseDragged ( MouseEvent e ) { ( ( MouseMotionListener ) a ) . mouseDragged ( e ) ; ( ( MouseMotionListener ) b ) . mouseDragged ( e ) ; }
55712	public boolean is_shove_fixed ( ) { return shove_fixed ; }
55733	public int hashCode ( ) { return name . hashCode ( ) ; }
55734	public String toString ( ) { return ( _CHAR GSSException : _CHAR + getMessage ( ) ) ; }
55768	public static com . liferay . blade . samples . servicebuilder . model . Foo deleteFoo ( com . liferay . blade . samples . servicebuilder . model . Foo foo ) { return getService ( ) . deleteFoo ( foo ) ; }
55769	public String toString ( ) { return toString ( _BOOL , _BOOL ) ; }
55782	public void stop ( ) { this . isRunning = _BOOL ; sock . close ( ) ; for ( Object messageChannel : messageChannels ) { ( ( MessageChannel ) messageChannel ) . close ( ) ; } if ( sipStack . stackCongenstionControlTimeout > _NUM && congestionAuditor != _NULL ) { this . congestionAuditor . stop ( ) ; } }
55789	@ Override public int hashCode ( ) { return name . hashCode ( ) ; }
55790	public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; if ( certificate != _NULL ) { sb . append ( certificate . getSubjectDN ( ) . getName ( ) ) ; sb . append ( _CHAR verified with _CHAR ) ; } sb . append ( verifierClass . getName ( ) ) ; sb . append ( _CHAR : _CHAR ) ; sb . append ( message ) ; return sb . toString ( ) ; }
55809	public boolean startsWith ( XMLString prefix , int toffset ) { return m_str . startsWith ( prefix . toString ( ) , toffset ) ; }
55814	public boolean hasAttribute ( final AttributeType attributeType ) { return attributes . contains ( attributeType ) ; }
55842	public boolean encryptData ( ) { return encryptData ; }
55847	private PorterDuffColorFilter createTintFilter ( ColorStateList tint , PorterDuff . Mode tintMode ) { if ( tint == _NULL || tintMode == _NULL ) { return _NULL ; } final int color = tint . getColorForState ( getState ( ) , Color . TRANSPARENT ) ; return new PorterDuffColorFilter ( color , tintMode ) ; }
55882	public static boolean isValidFilter ( String filter ) { try { getFilterFromString ( filter ) ; } catch ( IllegalArgumentException e ) { return _BOOL ; } return _BOOL ; }
55894	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { bRealmSelect = _BOOL ; super . handleButton2Request ( event ) ; }
55905	@ Indexable ( type = IndexableType . DELETE ) @ Override public Foo deleteFoo ( Foo foo ) { return fooPersistence . remove ( foo ) ; }
55913	public void updateUI ( ) { setUI ( ( MenuItemUI ) UIManager . getUI ( this ) ) ; }
55916	public boolean messageEnabled ( ) { return debug . messageEnabled ( ) ; }
55931	public static IOFileFilter magicNumberFileFilter ( String magicNumber ) { return new MagicNumberFileFilter ( magicNumber ) ; }
55935	public void windowClosed ( WindowEvent e ) { ( ( WindowListener ) a ) . windowClosed ( e ) ; ( ( WindowListener ) b ) . windowClosed ( e ) ; }
55945	public static String formatDateTime ( long d ) { return new SimpleDateFormat ( DATETIME_FORMAT ) . format ( d ) ; }
55964	private void removeStates ( int count ) { for ( int i = _NUM ; i < count ; i ++ ) playerStates . remove ( _NUM ) ; }
55991	public void removeLayoutComponent ( Component comp ) { }
56003	public final int bytesConsumed ( ) { return bytesConsumed ; }
56005	public void recompose ( StylesheetRoot root ) throws TransformerException { root . recomposeOutput ( this ) ; }
56032	protected boolean isJdk13LumberjackAvailable ( ) { return isLogLibraryAvailable ( _CHAR Jdk13Lumberjack _CHAR , _CHAR org . apache . commons . logging . impl . Jdk13LumberjackLogger _CHAR ) ; }
56049	@ Override public void nullifyUsedVars ( ) { options = _NULL ; sharedState = _NULL ; bundle = _NULL ; secretKeyAttrName = _NULL ; counterAttrName = _NULL ; authLevel = _NULL ; amAuthOATH = _NULL ; loginTimeAttrName = _NULL ; }
56162	private void writeObject ( java . io . ObjectOutputStream oos ) throws java . io . IOException { synchronized ( principals ) { oos . defaultWriteObject ( ) ; } }
56215	private float calculateDeltaScale ( float t ) { float zoom = startZoom + t * ( targetZoom - startZoom ) ; return zoom / normalizedScale ; }
56242	private void retrieveCompletedOperationElements ( AddOperation addOperation ) { assertTrue ( addOperation . getProcessingStartTime ( ) > _NUM ) ; assertTrue ( addOperation . getProcessingStopTime ( ) >= addOperation . getProcessingStartTime ( ) ) ; assertTrue ( addOperation . getProcessingTime ( ) >= _NUM ) ; }
56278	public boolean remove ( String valueString ) { return remove ( ByteString . valueOfUtf8 ( valueString ) ) ; }
56294	public ResponseProvider removeResponseProvider ( String respProvider ) { return respProviders . removeResponseProvider ( respProvider ) ; }
