5	public void add ( E e ) { buffer [ write ] = e ; write = ( write + _NUM ) % maxSize ; if ( count == maxSize ) { read = ( read + _NUM ) % maxSize ; } else { count += _NUM ; } }
28	@ Nullable public static NlComponent findComponent ( @ NotNull ScreenView view , @ SwingCoordinate int swingX , @ SwingCoordinate int swingY ) { return view . getModel ( ) . findLeafAt ( getAndroidX ( view , swingX ) , getAndroidY ( view , swingY ) , _BOOL ) ; }
31	public boolean isCritical ( ) { return _BOOL ; }
39	public void drawScreen ( int mouseX , int mouseY , float partialTicks ) { this . drawDefaultBackground ( ) ; this . drawCenteredString ( this . fontRendererObj , _CHAR Quick Commands _CHAR , this . width / _NUM , _NUM , _NUM ) ; super . drawScreen ( mouseX , mouseY , partialTicks ) ; }
46	private boolean handleCommand ( String command ) { if ( currentMissionBehaviour ( ) != _NULL && currentMissionBehaviour ( ) . commandHandler != _NULL ) { return currentMissionBehaviour ( ) . commandHandler . execute ( command , currentMissionInit ( ) ) ; } return _BOOL ; }
68	public boolean isCritical ( ) { return _BOOL ; }
99	public boolean isCritical ( ) { return _BOOL ; }
132	public Iterator items ( String group , Predicate filter ) { if ( ALL_ITEMS . equals ( group ) ) return items ( filter ) ; TupleSet t = getGroup ( group ) ; return ( t == _NULL ? Collections . EMPTY_LIST . iterator ( ) : t . tuples ( filter ) ) ; }
161	public boolean isInfinite ( ) { return ! isNaN ( ) && ( Double . isInfinite ( x . getReal ( ) ) || Double . isInfinite ( y . getReal ( ) ) || Double . isInfinite ( z . getReal ( ) ) ) ; }
197	public static < T > T checkNotNull ( T reference , String errorMessageTemplate , Object ... errorMessageArgs ) { if ( reference == _NULL ) { throw new NullPointerException ( format ( errorMessageTemplate , errorMessageArgs ) ) ; } return reference ; }
209	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
331	private final boolean validateClientPacket ( ByteBuffer buf ) { return buf . getShort ( _NUM ) == ~ buf . getShort ( _NUM ) && buf . get ( _NUM ) == staticClientPacketCode ; }
337	@ NonNull public static void onActivityResult ( int requestCode , int resultCode , Intent data ) { ReactiveFB . getSessionManager ( ) . getCallbackManager ( ) . onActivityResult ( requestCode , resultCode , data ) ; }
340	public boolean isCritical ( ) { return _BOOL ; }
346	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Hide_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
396	public static boolean instanceOf ( Object obj , String typeName ) { return instanceOf ( obj , typeName , _NULL ) ; }
465	public boolean isNested ( ) { return _BOOL ; }
516	public boolean isCritical ( ) { return _BOOL ; }
561	public float distance ( Vector3f v ) { return FastMath . sqrt ( distanceSquared ( v ) ) ; }
619	public static < T > T checkNotNull ( T reference , String errorMessageTemplate , Object ... errorMessageArgs ) { if ( reference == _NULL ) { throw new NullPointerException ( String . format ( errorMessageTemplate , errorMessageArgs ) ) ; } return reference ; }
645	public boolean isCritical ( ) { return _BOOL ; }
729	public boolean isCritical ( ) { return _BOOL ; }
781	public boolean isCritical ( ) { return _BOOL ; }
799	public boolean isCritical ( ) { return _BOOL ; }
806	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fall_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
811	public SiteAdminPage deactivatePage ( String title ) { grid . deactivatePage ( title ) ; waitForPageActivationStatus ( title , ActivationStatus . DEACTIVATED ) ; return this ; }
872	public TSDataOptimizerTask add ( TSData tsdata ) { files . add ( tsdata ) ; return this ; }
897	public void minimizeButtons ( ) { mAlert . minimizeButtons ( ) ; }
950	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Slow_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
988	public VirtualInvokeExpr newVirtualInvokeExpr ( Local base , SootMethodRef method , Value ... args ) { return newVirtualInvokeExpr ( base , method , Arrays . asList ( args ) ) ; }
1016	public static StorableLocationFence in ( double latitude , double longitude , double radius , long dwellTimeMillis ) { return new StorableLocationFence ( IN_TYPE , latitude , longitude , radius , dwellTimeMillis ) ; }
1031	public boolean isCritical ( ) { return _BOOL ; }
1037	public static int handle ( EntityLivingBase entityLiving , Enchantment enchantment , ItemStack heldItem , int level ) { final Level event = new Level ( entityLiving , enchantment , heldItem , level ) ; OpenModLoader . getEventBus ( ) . post ( event ) ; return event . getLevel ( ) ; }
1055	public RecognitionRequest addCustomOperation ( String customOperation ) { operations . add ( customOperation ) ; return this ; }
1058	public static boolean instanceOf ( Object obj , Object typeObject ) { Class < ? > typeClass = typeObject . getClass ( ) ; return instanceOf ( obj , typeClass ) ; }
1061	protected void onCreate ( Bundle icicle ) { super . onCreate ( icicle ) ; mAccountAuthenticatorResponse = getIntent ( ) . getParcelableExtra ( AccountManager . KEY_ACCOUNT_AUTHENTICATOR_RESPONSE ) ; if ( mAccountAuthenticatorResponse != _NULL ) { mAccountAuthenticatorResponse . onRequestContinued ( ) ; } }
1064	public boolean isCritical ( ) { return _BOOL ; }
1107	public static SM_SYSTEM_MESSAGE STR_CHAT_ROOM_CREATE_SUCCESS ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1112	@ Override public boolean isNullMeasureValue ( int ordinal ) { return isNullMeasureValue ( ordinal , currentRow ) ; }
1118	public static SM_SYSTEM_MESSAGE STR_STIGMA_CANNT_EQUIP_STONE_YOU_DO_NOT_HAVE_THIS_SKILL ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1122	public static SM_SYSTEM_MESSAGE STR_SERVER_SHUTDOWN ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
1149	public EmailBuilder to ( String to ) { this . to . add ( to ) ; return this ; }
1151	public void close ( ) { Log . d ( _CHAR MusicPlaybackService _CHAR , _CHAR MusicMediaPlayerGlue closed ! _CHAR ) ; mContext . unbindService ( mPlaybackServiceConnection ) ; }
1216	public boolean isCritical ( ) { return _BOOL ; }
1267	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_INTERVAL_A_TO_ME ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
1329	public final boolean canGetString ( String field ) { return m_table . canGetString ( field ) ; }
1342	public static ProbeItemDescriptor discreteLineFillItem ( String name , String description , ItemValueFormatter formatter ) { return discreteOutlineItem ( name , description , formatter , _NUM , _NUM , MAX_VALUE_UNDEFINED , DEFAULT_LINE_WIDTH , DEFAULT_COLOR , DEFAULT_COLOR ) ; }
1455	public static void updateAllForFacade ( DataStore dataStore , Iterable < Update > updates ) { updateAllForFacade ( dataStore , updates . iterator ( ) ) ; }
1465	public void showError ( Drawable errorImageDrawable , String errorTextContent , String errorButtonText , OnClickListener onClickListener ) { switchState ( ERROR , errorImageDrawable , errorTextContent , errorButtonText , onClickListener , Collections . < Integer > emptyList ( ) ) ; }
1467	public PollsGetVotersQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
1498	void insertData ( CharacterData node , int index , String insert ) { fInsertNode = node ; node . insertData ( index , insert ) ; fInsertNode = _NULL ; }
1510	public void addAlias ( String entityAlias , String name , String field , String colAlias , Boolean primKey , Boolean groupBy , String function ) { addAlias ( entityAlias , name , field , colAlias , primKey , groupBy , function , _NULL , _NULL ) ; }
1584	public AllocDotField makeAllocDotField ( AllocNode an , SparkField field ) { AllocDotField ret = an . dot ( field ) ; if ( ret == _NULL ) { ret = new AllocDotField ( this , an , field ) ; } return ret ; }
1593	public boolean isCritical ( ) { return _BOOL ; }
1644	private void login ( ) { getCredentials ( ) ; disable ( ) ; try { connectAPI . login ( emailInput , passInput ) ; } catch ( BindingException e ) { e . printStackTrace ( ) ; } }
1657	private synchronized boolean _keepRunning ( ) { return m_run ; }
1660	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeBoostSkillAttack_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
1684	public boolean isCritical ( ) { return _BOOL ; }
1734	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
1746	public void removeInterface ( SootClass interfaceClass ) { checkLevel ( HIERARCHY ) ; if ( ! implementsInterface ( interfaceClass . getName ( ) ) ) throw new RuntimeException ( _CHAR no such interface : _CHAR + interfaceClass . getName ( ) ) ; interfaces . remove ( interfaceClass ) ; }
1749	public boolean isCritical ( ) { return _BOOL ; }
1771	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
1811	protected boolean isInBoundsX ( Entry e , IBarLineScatterCandleBubbleDataSet set ) { if ( e == _NULL ) return _BOOL ; float entryIndex = set . getEntryIndex ( e ) ; return entryIndex < set . getEntryCount ( ) * mAnimator . getPhaseX ( ) ; }
1848	public void addMP ( int delta ) { addMP ( delta , _BOOL ) ; }
1894	public static SM_SYSTEM_MESSAGE STR_MSG_STIGMA_ENCHANT_SUCCESS ( DescriptionId descriptionId ) { return new SM_SYSTEM_MESSAGE ( _NUM , descriptionId ) ; }
1898	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeTypeBoostSkillLevel_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
1936	public static boolean instanceOf ( Class < ? > objectClass , String typeName , ClassLoader loader ) { Class < ? > infoClass = loadInfoClass ( typeName , loader ) ; if ( infoClass == _NULL ) throw new IllegalArgumentException ( _CHAR Illegal type found in info map ( could not load class for specified type ) '' ) ; return instanceOf ( objectClass , infoClass ) ; }
1948	public boolean isSetQueueSize ( ) { return __isset_bit_vector . get ( __QUEUESIZE_ISSET_ID ) ; }
1955	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Deform_ME_TO_SELF ( String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , skillname ) ; }
1988	private boolean atTokenSequence ( ProjectViewTokenType ... kinds ) { for ( int i = _NUM ; i < kinds . length ; i ++ ) { if ( builder . lookAhead ( i ) != kinds [ i ] ) { return _BOOL ; } } return _BOOL ; }
2082	public boolean isSetSendTime ( ) { return __isset_bit_vector . get ( __SENDTIME_ISSET_ID ) ; }
2109	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSpellATK_Instant_ME_TO_SELF ( String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname ) ; }
2114	public boolean isDrawBarShadowEnabled ( ) { return mDrawBarShadow ; }
2116	public static boolean extractTimeZoneAndTestDate ( Date date , String filter ) { String [ ] timezoneAndFilter = extractTimeZone ( filter ) ; return StringUtils . containsIgnoreCase ( formatDateTimeAsUI ( convertDateToOffsetDateTime ( date ) , timezoneAndFilter [ _NUM ] ) , timezoneAndFilter [ _NUM ] ) ; }
2118	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
2209	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
2215	public Builder className ( String className ) { this . className = className ; return this ; }
2226	public final static boolean isJavaKeyword ( String s ) { if ( s == _NULL || s . length ( ) == _NUM ) { return _BOOL ; } for ( int i = _NUM ; i < keywords . length ; i ++ ) { if ( keywords [ i ] . equals ( s ) ) { return _BOOL ; } } return _BOOL ; }
2258	private void scheduleValueProcessing ( ValuePropagationTask vpt ) { if ( executor . isTerminating ( ) ) return ; executor . execute ( vpt ) ; }
2269	public Iterator items ( String group , String expr ) { Expression e = ExpressionParser . parse ( expr ) ; if ( ! ( e instanceof Predicate ) || ExpressionParser . getError ( ) != _NULL ) return Collections . EMPTY_LIST . iterator ( ) ; return items ( group , ( Predicate ) e ) ; }
2288	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MagicCounterATK_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
2289	public void addHeader ( String header , String value ) { clientHeaderMap . put ( header , value ) ; }
2300	public boolean isCritical ( ) { return _BOOL ; }
2309	public static JsonValue value ( double value ) { if ( Double . isInfinite ( value ) || Double . isNaN ( value ) ) { throw new IllegalArgumentException ( _CHAR Infinite and NaN values not permitted in JSON _CHAR ) ; } return new JsonNumber ( cutOffPointZero ( Double . toString ( value ) ) ) ; }
2343	public boolean isCritical ( ) { return _BOOL ; }
2344	@ Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( GymsEvent event ) { setGymsMarkers ( event ) ; }
2371	public boolean isNull ( String key ) { return JSONObject . NULL . equals ( this . opt ( key ) ) ; }
2425	@ Nullable public StringLiteral findChildReferenceToTarget ( final FuncallExpression targetRule ) { final StringLiteral [ ] child = new StringLiteral [ _NUM ] ; Processor < StringLiteral > processor = _NULL ; PsiUtils . processChildrenOfType ( this , processor , StringLiteral . class ) ; return child [ _NUM ] ; }
2428	public void resetIterationCount ( ) { iterations . reset ( ) ; }
2463	public boolean isCritical ( ) { return _BOOL ; }
2464	public static SM_SYSTEM_MESSAGE STR_MSG_SPLIT_B_TO_ME ( String value0 , int num1 , int num2 , int num3 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 , num2 , num3 ) ; }
2467	public boolean isCritical ( ) { return _BOOL ; }
2525	public static void closeQuietly ( AutoCloseable closeable ) { try { if ( closeable != _NULL ) { closeable . close ( ) ; } } catch ( Exception e ) { logger . error ( _CHAR An error occurred closing statement . '' , e ) ; } }
2624	public static void readFully ( InputStream in , byte [ ] dst ) throws IOException { readFully ( in , dst , _NUM , dst . length ) ; }
2710	public boolean isCritical ( ) { return _BOOL ; }
2751	public boolean onOverrideUrlLoading ( String url ) { return _BOOL ; }
2760	@ Override public final String readAsciiString ( final int n ) { final char ret [ ] = new char [ n ] ; for ( int x = _NUM ; x < n ; x ++ ) { ret [ x ] = ( char ) readByte ( ) ; } return new String ( ret ) ; }
2764	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Dispel_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
2780	public boolean isValid ( ) { return S2 . isUnitLength ( axis ) && height <= _NUM ; }
2785	public boolean isCritical ( ) { return _BOOL ; }
2794	public void addInterface ( SootClass interfaceClass ) { checkLevel ( HIERARCHY ) ; if ( implementsInterface ( interfaceClass . getName ( ) ) ) throw new RuntimeException ( _CHAR duplicate interface : _CHAR + interfaceClass . getName ( ) ) ; interfaces . add ( interfaceClass ) ; }
2826	public Iterator < E > iterator ( E head , E tail ) { return new PatchingIterator ( innerChain , head , tail ) ; }
2840	private boolean isInSamePackage ( String type ) { if ( type . charAt ( _NUM ) == _CHAR ) { return _BOOL ; } return getPackage ( visitedClassName ) . equals ( getPackage ( type ) ) ; }
2867	public boolean isSetDebug ( ) { return __isset_bit_vector . get ( __DEBUG_ISSET_ID ) ; }
2872	public InterfaceInvokeExpr newInterfaceInvokeExpr ( Local base , SootMethodRef method , List args ) { return new GInterfaceInvokeExpr ( base , method , args ) ; }
2873	protected void clean ( ) { if ( dirty ) { LU = _NULL ; HQR = _NULL ; CHOL = _NULL ; dirty = _BOOL ; } }
2901	protected void updateRoot ( int pNum ) { this . rootPageNum = pNum ; writeHeader ( ) ; }
2933	public void java_io_FileSystem_getFileSystem ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { helper . assignObjectTo ( returnVar , Environment . v ( ) . getFileSystemObject ( ) ) ; }
2939	public static Map < String , String > parseKeyAndValueToMap ( String source ) { if ( StringUtil . isEmpty ( source ) ) { return _NULL ; } try { JSONObject jsonObject = new JSONObject ( source ) ; return parseKeyAndValueToMap ( jsonObject ) ; } catch ( JSONException e ) { if ( isPrintException ) { e . printStackTrace ( ) ; } return _NULL ; } }
3031	public boolean removeAll ( int [ ] array ) { boolean changed = _BOOL ; for ( int i = array . length ; i -- > _NUM ; ) { if ( remove ( array [ i ] ) ) { changed = _BOOL ; } } return changed ; }
3048	public V putIfAbsent ( K key , V value , boolean unstableKey ) { if ( value == _NULL ) throw new NullPointerException ( ) ; int hash = hash ( key . hashCode ( ) ) ; return segmentFor ( hash ) . put ( key , hash , value , _BOOL , unstableKey ) ; }
3076	public static int recordSize ( Schema sch ) { int pos = _NUM ; for ( String fldname : sch . fields ( ) ) pos += Page . maxSize ( sch . type ( fldname ) ) ; return pos < MIN_REC_SIZE ? MIN_REC_SIZE : pos ; }
3129	private boolean checkValidation ( final SourceDataTag currentSourceDataTag , final ValueUpdate update ) { if ( ! isTimestampValid ( currentSourceDataTag , update ) ) { return _BOOL ; } if ( ! isConvertible ( currentSourceDataTag , update ) ) { return _BOOL ; } if ( isNumber ( currentSourceDataTag . getDataType ( ) ) && ! isInRange ( currentSourceDataTag , update ) ) { return _BOOL ; } return _BOOL ; }
3133	public static void launch ( Activity activity , @ StringRes int titleResId , @ StringRes int messageResId ) { Intent intent = new Intent ( activity , DialogActivity . class ) ; intent . putExtra ( ARG_MESSAGE , messageResId ) ; intent . putExtra ( ARG_TITLE , titleResId ) ; activity . startActivity ( intent ) ; }
3164	private void regulateAverageAngle ( double endAngleRadians , int expandButtonCount ) { if ( ! angleStartEqualsEnd && startAngleRadians == endAngleRadians ) { double tmp = _NUM * Math . PI / expandButtonCount ; if ( averageAngleRadians < _NUM ) { averageAngleRadians =- tmp ; } else { averageAngleRadians = tmp ; } } }
3267	public static float parseFloat ( byte [ ] bytes , int start , int length ) throws NumberFormatException { return ( float ) parseDouble ( bytes , start , length ) ; }
3295	public static SM_SYSTEM_MESSAGE STR_MSG_UNION_LOOTING_CHANGED_RULE ( String value0 , String value1 , String value2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 , value2 ) ; }
3346	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sleep_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
3353	public boolean isCritical ( ) { return _BOOL ; }
3355	public static SM_SYSTEM_MESSAGE STR_SKILL_NO_AVAILABLE_SLOT_ME_TO_B ( String skillname , String skilltarget ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillname , skilltarget ) ; }
3360	public Vec2d add ( Vec2d v ) { return add ( v . x , v . y ) ; }
3465	public static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
3486	@ Override public boolean isCritical ( ) { return _BOOL ; }
3512	private void fixPhoneme_AH ( Utterance utterance ) { for ( Item item = utterance . getRelation ( Relation . SEGMENT ) . getHead ( ) ; item != _NULL ; item = item . getNext ( ) ) { if ( item . getFeatures ( ) . getString ( _CHAR name _CHAR ) . equals ( _CHAR ah _CHAR ) ) { item . getFeatures ( ) . setString ( _CHAR name _CHAR , _CHAR aa _CHAR ) ; } } }
3630	public static void refresh ( Project project ) { BlazeExecutor . submitTask ( project , _NULL ) ; }
3707	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoReduceSpellATK_Instant_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
3766	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Reflector_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
3780	private int transition ( int state , int symbol ) { for ( int i = state ; i < transitions . length ; i ++ ) { if ( ( transitions [ i ] % vocabularySize ) == symbol ) { return ( transitions [ i ] / vocabularySize ) ; } } return - _NUM ; }
3816	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( time < _NUM ) { throw new InvalidObjectException ( _CHAR invalid duration _CHAR ) ; } }
3830	private boolean typeSpecialChar ( char c ) { switch ( c ) { case _CHAR : controller . keyPress ( KeyEvent . VK_TAB ) ; controller . keyRelease ( KeyEvent . VK_TAB ) ; return _BOOL ; case _CHAR : controller . keyPress ( KeyEvent . VK_ENTER ) ; controller . keyRelease ( KeyEvent . VK_ENTER ) ; return _BOOL ; default : return _BOOL ; } }
3958	public boolean isCritical ( ) { return _BOOL ; }
4065	public static Tailer create ( File file , TailerListener listener , long delayMillis ) { return create ( file , listener , delayMillis , _BOOL ) ; }
4079	public static String createContainerPresentName ( String hostName , String containerName ) { if ( hostName == _NULL ) hostName = _CHAR _CHAR ; else hostName += _CHAR : _CHAR ; return hostName + containerName ; }
4108	@ Override public List < Class < ? extends ConfigAspect >> mergeDependencies ( ) { return ImmutableList . < Class < ? extends ConfigAspect >> of ( HttpConfigAspect . class ) ; }
4121	public static byte [ ] readFully ( InputStream in ) throws IOException { try { return readFullyNoClose ( in ) ; } finally { in . close ( ) ; } }
4160	public static void main ( String [ ] args ) throws IOException { ParseSinaXmlData parser = new ParseSinaXmlData ( ) ; parser . buildRawText ( _CHAR res / sina_data / alldata . txt _CHAR , _CHAR res / sina_data / SinaRawText . txt _CHAR ) ; }
4221	public static StorableTimeFence inMondayInterval ( TimeZone timeZone , long startTimeOfDayMillis , long stopTimeOfDayMillis ) { return new StorableTimeFence ( MONDAY , timeZone , startTimeOfDayMillis , stopTimeOfDayMillis ) ; }
4252	public boolean isCritical ( ) { return _BOOL ; }
4259	public boolean isCritical ( ) { return _BOOL ; }
4271	public CursorIterator < T > iterate ( final Txn < T > txn , final T key , final IteratorType type ) { if ( SHOULD_CHECK ) { requireNonNull ( txn ) ; txn . checkReady ( ) ; } return new CursorIterator < > ( openCursor ( txn ) , key , type ) ; }
4327	public boolean isCritical ( ) { return _BOOL ; }
4401	public boolean print_debug ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR print - debug _CHAR ) ; }
4524	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoReduceSpellATK_Instant_A_TO_ME ( int num0 , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillcaster , skillname ) ; }
4527	public void finish ( String footer ) { m_bias = _NUM ; m_out . print ( footer ) ; m_out . flush ( ) ; }
4531	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcATK_Instant_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
4605	public void syncUser ( String username ) throws AuthenticatorException { Debug . logInfo ( this . getClass ( ) . getName ( ) + _CHAR Authenticator syncUser ( ) _CHAR , module ) ; }
4630	public synchronized static boolean isBrowseAvailable ( ) { if ( ! browseAvailableInitialized ) { if ( ! isDesktopSupported ( ) ) browseAvailable = _BOOL ; else browseAvailable = Desktop . getDesktop ( ) . isSupported ( Desktop . Action . BROWSE ) ; browseAvailableInitialized = _BOOL ; } return browseAvailable ; }
4654	public boolean isCritical ( ) { return _BOOL ; }
4664	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
4674	public static void main ( String [ ] args ) { }
4676	@ Override public int hashCode ( ) { final int prime = _NUM ; int result = ( operation == _NULL ) ? _NUM : operation . hashCode ( ) ; result += prime * ( ( text == _NULL ) ? _NUM : text . hashCode ( ) ) ; return result ; }
4705	public boolean verify ( Endorser endorser , PublicKey key ) { byte [ ] hash = Hash . of ( outputs . get ( _NUM ) ) . toByteArray ( ) ; return endorser . verify ( hash , key ) ; }
4716	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
4719	public boolean isCritical ( ) { return _BOOL ; }
4772	public static boolean instanceOf ( Object obj , Class < ? > typeClass ) { if ( obj == _NULL ) return _BOOL ; Class < ? > objectClass = obj . getClass ( ) ; return instanceOf ( objectClass , typeClass ) ; }
4912	public void checkForNullValue ( String value ) { if ( value == _NULL ) { throw new NullPointerException ( ) ; } }
5043	public Builder withGalleryRequestCode ( int requestCode ) { this . mGalleryRequestCode = requestCode ; return this ; }
5095	public PhotosGetCommentsQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
5111	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SignetBurst_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
5115	public static float [ ] pointOnCircumference ( int centerX , int centerY , double angle , double radius ) { float [ ] result = new float [ _NUM ] ; pointOnCircumference ( centerX , centerY , angle , radius , result ) ; return result ; }
5140	public FriendsGetByPhonesQuery phones ( String ... value ) { return unsafeParam ( _CHAR phones _CHAR , value ) ; }
5153	public static JsonValue value ( boolean value ) { return value ? TRUE : FALSE ; }
5166	public static MapWrapperFragment newInstance ( ) { MapWrapperFragment fragment = new MapWrapperFragment ( ) ; Bundle args = new Bundle ( ) ; fragment . setArguments ( args ) ; return fragment ; }
5203	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
5223	public static boolean isColorDark ( int color ) { return ( ( _NUM * Color . red ( color ) + _NUM * Color . green ( color ) + _NUM * Color . blue ( color ) ) / _NUM ) <= BRIGHTNESS_THRESHOLD ; }
5225	public static SM_SYSTEM_MESSAGE STR_MSG_LEAVE_INSTANCE_PARTY ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
5276	public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_PRINT_SCREEN_COOLTIME ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
5333	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MagicCounterATK_INTERVAL_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
5343	public boolean isCritical ( ) { return _BOOL ; }
5443	public boolean isDurableWriteEnabled ( ) { return this . getBoolean ( BKDL_IS_DURABLE_WRITE_ENABLED , BKDL_IS_DURABLE_WRITE_ENABLED_DEFAULT ) ; }
5531	private void updateCurrentEdition ( ) { try { getHistoryTableProvider ( ) . setRemoteResource ( ( ISVNRemoteFile ) SVNWorkspaceRoot . getBaseResourceFor ( resource ) ) ; } catch ( TeamException e ) { handle ( e ) ; } }
5602	public AdsImportTargetContactsQuery importTargetContacts ( UserActor actor , int accountId , int targetGroupId , String contacts ) { return new AdsImportTargetContactsQuery ( getClient ( ) , actor , accountId , targetGroupId , contacts ) ; }
5752	public boolean isCritical ( ) { return _BOOL ; }
5789	@ Override public boolean isCritical ( ) { return _BOOL ; }
5797	public boolean isCritical ( ) { return _BOOL ; }
5847	public static void closeQuietly ( AutoCloseable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
5859	public boolean isNull ( String key ) { return JSONObject . NULL . equals ( opt ( key ) ) ; }
5865	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillCastingTime_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
5892	public PointsToSet reachingObjectsOfArrayElement ( PointsToSet s ) { return reachingObjectsInternal ( s , ArrayElement . v ( ) ) ; }
5912	public boolean isCritical ( ) { return _BOOL ; }
5949	public static boolean charInString ( char c , String s ) { return ( s . indexOf ( c ) != - _NUM ) ; }
5995	public void combination ( int ... keys ) { press ( keys ) ; for ( int i = keys . length - _NUM ; i >= _NUM ; i -- ) { release ( keys [ i ] ) ; } }
6076	private void startFormFragment ( @ FeedbackItem . FeedbackType int feedbackType ) { String title = getString ( getTitleResId ( feedbackType ) ) ; String hint = getString ( getHintResId ( feedbackType ) ) ; changeToFragment ( FormFragment . newInstance ( title , hint , imageUri ) ) ; }
6085	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Reflector_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
6133	@ Override public final HTMLDocument createHTMLDocument ( String title ) throws DOMException { HTMLDocument doc ; if ( title == _NULL ) throw new NullPointerException ( _CHAR HTM014 Argument _CHAR is _NULL . _CHAR ) ; doc = new HTMLDocumentImpl ( ) ; doc . setTitle ( title ) ; return doc ; }
6149	public static < T > T checkNotNull ( T reference , Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
6172	public boolean equals ( IntervalFeature x ) { if ( x == _NULL ) { return _BOOL ; } return ( this . chrom . equals ( x . chrom ) && this . from == x . from && this . to == x . to ) ; }
6224	@ Override public boolean isFingerprintRegistered ( ) { return impl . isFingerprintRegistered ( ) ; }
6249	protected View reuseOrInflateView ( View convertView , ViewGroup parent , AdapterType type ) { int itemLayout = getItemLayoutResId ( ) ; switch ( type ) { case BASE_RECIPIENT : case RECIPIENT_ALTERNATES : break ; case SINGLE_RECIPIENT : itemLayout = getAlternateItemLayoutResId ( ) ; break ; } return convertView != _NULL ? convertView : mInflater . inflate ( itemLayout , parent , _BOOL ) ; }
6259	public boolean isCritical ( ) { return _BOOL ; }
6264	public static void o ( Z [ ] [ ] A ) { o ( A , Parameters . OutputFieldWidth , Parameters . OutputFracPlaces ) ; }
6301	public boolean isPrimaryKey ( ) { return isPrimaryKey ( _BOOL ) ; }
6336	@ Override protected void onSaveInstanceState ( Bundle outState ) { outState . putParcelableArrayList ( SAVED_INSTANCE_MEIZHI , mainPresenter . getData ( ) ) ; super . onSaveInstanceState ( outState ) ; }
6428	public ClearModifiers add ( ClearModifiers modifiers ) { return createIfNeeded ( super . add ( modifiers ) ) ; }
6476	public Builder zoomInTitle ( String zoomInTitle ) { this . zoomInTitle = zoomInTitle ; return this ; }
6479	@ PostConstruct public void init ( ) { listenerContainer = cacheRegistrationService . registerToAlarms ( this ) ; }
6480	public void prepareStatement ( String sql ) throws GenericDataSourceException , GenericEntityException { this . prepareStatement ( sql , _BOOL , _NUM , _NUM , - _NUM , - _NUM ) ; }
6579	public static boolean between ( float value , float start , float end ) { if ( start > end ) { float tmp = start ; start = end ; end = tmp ; } return value >= start && value <= end ; }
6598	@ NonNull public < T > T peek ( int index ) { return ( T ) history . get ( history . size ( ) - index - _NUM ) ; }
6615	static < T > T checkNotNull ( T reference , @ Nullable Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
6618	public void checkForNullKey ( String key ) { if ( key == _NULL ) { throw new NullPointerException ( ) ; } }
6632	public static SM_SYSTEM_MESSAGE STR_SKILL_CONFLICT_WITH_OTHER_SKILL ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
6642	public boolean isCritical ( ) { return _BOOL ; }
6662	public boolean isCritical ( ) { return _BOOL ; }
6757	public boolean isFullyZoomedOutY ( ) { return ! ( mScaleY > mMinScaleY || mMinScaleY > _NUM ) ; }
6773	public boolean isCritical ( ) { return _BOOL ; }
6807	public FloatBuffer toFloatBuffer ( ) { return toFloatBuffer ( _BOOL ) ; }
6838	private synchronized void disconnectQuietly ( ) { connected = _BOOL ; for ( Map . Entry < String , MessageListenerWrapper > entry : topicToWrapper . entrySet ( ) ) { entry . getValue ( ) . stop ( ) ; } if ( connection != _NULL ) { try { connection . close ( ) ; } catch ( JMSException jmsEx ) { LOGGER . error ( _CHAR disconnect ( ) - Exception caught while attempting to disconnect from JMS - aborting this attempt . '' , jmsEx ) ; } } }
6863	public void terminate ( ) { if ( ! terminated ) { this . terminated = _BOOL ; getParent ( ) . requestLayout ( ) ; } }
6948	public static void hideKeyboard ( View view ) { try { InputMethodManager imm = ( InputMethodManager ) view . getContext ( ) . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; imm . hideSoftInputFromWindow ( view . getWindowToken ( ) , _NUM ) ; } catch ( RuntimeException e ) { Timber . w ( e , _CHAR Error on hideKeyboard ( ) _CHAR ) ; } }
6984	public static SM_SYSTEM_MESSAGE STR_MSG_GET_ITEM_PARTYNOTICE_DICE_GIVEUP_ROLL ( String value0 , String value2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value2 , value1 ) ; }
7027	public PhotosGetAllQueryWithExtended offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
7054	protected void scheduleEdgeProcessing ( PathEdge < N , D > edge ) { if ( executor . isTerminating ( ) ) return ; executor . execute ( new PathEdgeProcessingTask ( edge ) ) ; propagationCount ++ ; }
7138	public static boolean strictlyBetween ( Date baseDate , Date startDate , Date endDate ) { if ( startDate . equals ( endDate ) || endDate . before ( startDate ) ) { return _BOOL ; } if ( startDate . before ( baseDate ) && endDate . after ( baseDate ) ) { return _BOOL ; } return _BOOL ; }
7249	protected DominatorNode < N > fetchDode ( N gode ) { DominatorNode < N > dode ; if ( godeToDode . containsKey ( gode ) ) { dode = godeToDode . get ( gode ) ; } else { dode = new DominatorNode ( gode ) ; godeToDode . put ( gode , dode ) ; } return dode ; }
7286	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } }
7288	public void addProcessToReboot ( final String processName ) { processesToReboot . add ( processName ) ; }
7298	public static SM_SYSTEM_MESSAGE STR_SUBMIT_PETITION_QUOTA_LEFT ( int num0th , int num1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0th , num1 ) ; }
7329	public Builder addStringDerivedColumn ( String columnName , String format , DateTimeZone timeZone ) { derivedColumns . add ( new DerivedColumn ( columnName , ColumnType . String , format , timeZone , _NULL ) ) ; return this ; }
7349	public SiteAdminPage clickDeleteAndConfirm ( String title ) { grid . selectPageByTitle ( title ) ; grid . getActionBar ( ) . clickOnButton ( SiteAdminButtons . DELETE , siteAdminConfirmationWindow ) ; clickYesOnConfirmationWindow ( ) ; return this ; }
7404	public boolean isCritical ( ) { return _BOOL ; }
7449	public void showError ( Drawable errorImageDrawable , String errorTextTitle , String errorTextContent , String errorButtonText , OnClickListener onClickListener , List < Integer > skipIds ) { switchState ( ERROR , errorImageDrawable , errorTextTitle , errorTextContent , errorButtonText , onClickListener , skipIds ) ; }
7497	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillCost_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
7507	public boolean isCritical ( ) { return _BOOL ; }
7508	public static boolean isZeroOrPositiveInteger ( String value ) { return value != _NULL && INT_VALIDATOR . isValid ( value ) && POSITIVE_OR_ZERO_INT_PATTERN . matcher ( value ) . matches ( ) ; }
7544	public boolean isCritical ( ) { return _BOOL ; }
7548	public Vec2d sub ( Vec2d v ) { return sub ( v . x , v . y ) ; }
7557	public static String formatDps ( final double dps ) { return _CHAR ( _CHAR + String . format ( _CHAR % . _NUM _CHAR , dps ) + _CHAR dps ) _CHAR ; }
7642	private void appendPermittedContentType ( ContentType contentType ) { if ( permittedContentTypesMask == ContentType . ANY . getFlagValue ( ) ) { permittedContentTypesMask = contentType . getFlagValue ( ) ; } else { permittedContentTypesMask |= contentType . getFlagValue ( ) ; } }
7648	protected void restoreBaseURI ( ) { fBaseURI . pop ( ) ; fLiteralSystemID . pop ( ) ; fExpandedSystemID . pop ( ) ; fBaseURIScope . pop ( ) ; fCurrentBaseURI . setBaseSystemId ( ( String ) fBaseURI . peek ( ) ) ; fCurrentBaseURI . setLiteralSystemId ( ( String ) fLiteralSystemID . peek ( ) ) ; fCurrentBaseURI . setExpandedSystemId ( ( String ) fExpandedSystemID . peek ( ) ) ; }
7669	public boolean isCritical ( ) { return _BOOL ; }
7679	@ Override public Schema schema ( ) { return p . schema ( ) ; }
7683	public static ProbeItemDescriptor continuousFillItem ( String name , String description , ItemValueFormatter formatter , double dataFactor , long minValue , long maxValue ) { return continuousItem ( name , description , formatter , dataFactor , minValue , maxValue , DEFAULT_LINE_WIDTH , _NULL , DEFAULT_COLOR ) ; }
7713	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
7717	public int dnsDomainLevels ( String host ) { int count = _NUM ; int startPos = _NUM ; while ( ( startPos = host . indexOf ( _CHAR . _CHAR , startPos + _NUM ) ) > - _NUM ) { count ++ ; } return count ; }
7730	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
7760	public boolean isSetGlobalContext ( ) { return this . globalContext != _NULL ; }
7788	public static < T > T checkNotNull ( final T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
7847	private boolean isTypedTimeFullyLegal ( ) { if ( mIs24HourMode ) { int [ ] values = getEnteredTime ( _NULL ) ; return ( values [ _NUM ] >= _NUM && values [ _NUM ] >= _NUM && values [ _NUM ] < _NUM ) ; } else { return ( mTypedTimes . contains ( getAmOrPmKeyCode ( HALF_DAY_1 ) ) || mTypedTimes . contains ( getAmOrPmKeyCode ( HALF_DAY_2 ) ) ) ; } }
7863	public boolean isCritical ( ) { return _BOOL ; }
7923	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OneTimeBoostSkillCritical_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
7926	public boolean isCritical ( ) { return _BOOL ; }
7984	private TreeSet < DimensionRow > doPagination ( TreeSet < DimensionRow > dimensionRows , int page , int perPage ) { return dimensionRows . stream ( ) . skip ( ( page - _NUM ) * perPage ) . limit ( perPage ) . collect ( Collectors . toCollection ( _NULL ) ) ; }
8011	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MoveBehindATK_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
8014	public boolean isCritical ( ) { return _BOOL ; }
8055	public boolean isCritical ( ) { return _BOOL ; }
8062	@ SuppressLint ( _CHAR NewApi _CHAR ) public static void tryAccessibilityAnnounce ( View view , CharSequence text ) { if ( isJellybeanOrLater ( ) && view != _NULL && text != _NULL ) { view . announceForAccessibility ( text ) ; } }
8115	public static ToastCompat makeText ( Context context , @ StringRes int resId , @ Duration int duration ) throws Resources . NotFoundException { return makeText ( context , context . getString ( resId ) , duration ) ; }
8138	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelDeBuffPhysical_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
8148	static protected void registerNonXS ( String name ) { if ( Token . nonxs == _NULL ) Token . nonxs = new Hashtable ( ) ; Token . nonxs . put ( name , name ) ; }
8219	public boolean isCritical ( ) { return _BOOL ; }
8274	public static byte [ ] readFileToByteArray ( File file ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toByteArray ( in , file . length ( ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
8298	public static JsonValue value ( int value ) { return new JsonNumber ( Integer . toString ( value , _NUM ) ) ; }
8354	public boolean isCritical ( ) { return _BOOL ; }
8413	private void checkIfNext ( ) { for ( ; _pos != _NULL ; _pos = _entries . next ( _pos ) ) { IEntryCacheInfo pEntry = _pos . getSubject ( ) ; if ( pEntry == _NULL ) continue ; _currentEntry = pEntry ; _pos = _entries . next ( _pos ) ; return ; } _currentEntry = _NULL ; }
8446	public boolean isCritical ( ) { return _BOOL ; }
8465	protected VideoHideCatalogSectionQuery sectionId ( int value ) { return unsafeParam ( _CHAR section_id _CHAR , value ) ; }
8476	public Builder transparent ( Boolean transparent ) { this . transparent = transparent ; return this ; }
8487	public int errorCount ( ) { return errors ; }
8494	private boolean isReplicatedFromCentralDB ( Context ctx ) { return _cacheManager . isCacheExternalDB ( ) && _cacheManager . isCentralDB ( ) && ctx . isFromReplication ( ) ; }
8500	public static _Fields findByThriftIdOrThrow ( int fieldId ) { _Fields fields = findByThriftId ( fieldId ) ; if ( fields == _NULL ) throw new IllegalArgumentException ( _CHAR Field _CHAR + fieldId + _CHAR does n _CHAR_CHAR ) ; return fields ; }
8511	public static MaxIter unlimited ( ) { return new MaxIter ( Integer . MAX_VALUE ) ; }
8575	public boolean isCritical ( ) { return _BOOL ; }
8578	public boolean isCritical ( ) { return _BOOL ; }
8592	public static SM_SYSTEM_MESSAGE STR_FIND_POS_TOO_FAR_FROM_SUBZONE_DEV ( String value0 , String value2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value2 , value1 ) ; }
8598	public boolean isCritical ( ) { return _BOOL ; }
8625	static Pair < DistributedLogClient , MonitorServiceClient > createDistributedLogClient ( SocketAddress host , DistributedLogClientBuilder clientBuilder ) { DistributedLogClientBuilder newBuilder = DistributedLogClientBuilder . newBuilder ( clientBuilder ) . host ( host ) ; return ClientUtils . buildClient ( newBuilder ) ; }
8629	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Reflector_PROTECT_ME_to_B ( String skilltarget , int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 ) ; }
8678	public boolean isEnabled ( ) { return mEnabled ; }
8722	public boolean isCritical ( ) { return _BOOL ; }
8768	public boolean isCritical ( ) { return _BOOL ; }
8773	@ Deprecated public static void disableLogging ( ) { writeLogs ( _BOOL ) ; }
8899	public boolean isFileType ( ) { return getValueType ( ) . isFile ( ) ; }
8963	public static byte [ ] readFileToByteArray ( File file ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toByteArray ( in , file . length ( ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
8997	public RabbitMqCommand listenToEvents ( ProcessListener listener ) { this . eventsListener = listener ; return this ; }
9005	private < T > UnaryOperator < T > chainOperators ( Stream < UnaryOperator < T >> operators ) { return operators . reduce ( UnaryOperator . identity ( ) , _NULL ) ; }
9050	public boolean isSetTimeout ( ) { return __isset_bit_vector . get ( __TIMEOUT_ISSET_ID ) ; }
9055	void removingNode ( NodeImpl node , NodeImpl oldChild , boolean replace ) { }
9065	public static String htmlify ( String text ) { text = htmlLinks ( text ) ; text = htmlNewline ( text ) ; return text ; }
9147	public static int handle ( BiomeColor color ) { OpenModLoader . getEventBus ( ) . post ( color ) ; return color . getColorModifier ( ) ; }
9248	public static URL resolveURL ( URL base , String target ) throws MalformedURLException { target = target . trim ( ) ; if ( target . startsWith ( _CHAR ? _CHAR ) ) { return fixPureQueryTargets ( base , target ) ; } return new URL ( base , target ) ; }
9274	private void scheduleValueComputationTask ( ValueComputationTask task ) { if ( executor . isTerminating ( ) ) return ; executor . execute ( task ) ; }
9284	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
9355	public boolean isCritical ( ) { return _BOOL ; }
9505	public static _Fields findByThriftIdOrThrow ( int fieldId ) { _Fields fields = findByThriftId ( fieldId ) ; if ( fields == _NULL ) throw new IllegalArgumentException ( _CHAR Field _CHAR + fieldId + _CHAR does n _CHAR_CHAR ) ; return fields ; }
9554	public boolean isCritical ( ) { return _BOOL ; }
9653	public boolean isCritical ( ) { return _BOOL ; }
9718	public boolean isCritical ( ) { return _BOOL ; }
9802	public static float calculateHeight ( float left , float right , float targetAspectRatio ) { final float width = right - left ; final float height = width / targetAspectRatio ; return height ; }
9803	@ Override protected void onRestoreInstanceState ( Bundle savedInstanceState ) { super . onRestoreInstanceState ( savedInstanceState ) ; contentManager . onRestoreInstanceState ( savedInstanceState ) ; }
9823	protected void writeAnnotation ( String loc ) throws IOException { hadAnnotations |= ( loc != _NULL ) ; locOut . writeObject ( loc ) ; }
9828	public boolean isCritical ( ) { return _BOOL ; }
9833	public boolean equalTo ( Highlight h ) { if ( h == _NULL ) return _BOOL ; else { if ( this . mDataSetIndex == h . mDataSetIndex && this . mX == h . mX && this . mStackIndex == h . mStackIndex && this . mDataIndex == h . mDataIndex ) return _BOOL ; else return _BOOL ; } }
9871	@ Deprecated public static void disableLogging ( ) { writeLogs ( _BOOL ) ; }
9945	private void checkIfNext ( ) { for ( ; _pos != _NULL ; _pos = _templates . next ( _pos ) ) { TemplateCacheInfo pTemplate = _pos . getSubject ( ) ; if ( pTemplate == _NULL ) continue ; if ( pTemplate . m_TemplateHolder . isDeleted ( ) ) continue ; _currentTemplate = pTemplate ; _pos = _templates . next ( _pos ) ; return ; } _currentTemplate = _NULL ; }
9959	public static String trim ( String s , int maxWidth ) { if ( s . length ( ) <= maxWidth ) { return ( s ) ; } return ( s . substring ( _NUM , maxWidth ) ) ; }
9966	public boolean isFullyZoomedOutX ( ) { return ! ( mScaleX > mMinScaleX || mMinScaleX > _NUM ) ; }
9990	public boolean hasSingleIndicatorAsDataFilter ( ) { return getFilterIndicators ( ) . size ( ) == _NUM && getFilterOptions ( DATA_X_DIM_ID ) . size ( ) == _NUM ; }
10053	public static PageFragment newInstance ( @ NonNull final String pageText ) { PageFragment fragment = new PageFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_TEXT , pageText ) ; fragment . setArguments ( args ) ; return fragment ; }
10106	public boolean isEventStatus ( EventStatus eventStatus ) { return this . eventStatus != _NULL && this . eventStatus . equals ( eventStatus ) ; }
10137	public boolean isSetSequenceId ( ) { return __isset_bit_vector . get ( __SEQUENCEID_ISSET_ID ) ; }
10164	public MarketReorderItemsQuery albumId ( Integer value ) { return unsafeParam ( _CHAR album_id _CHAR , value ) ; }
10169	public static boolean instanceOf ( Class < ? > objectClass , Class < ? > typeClass ) { if ( typeClass . isInterface ( ) && ! objectClass . isInterface ( ) ) { return interfaceOf ( objectClass , typeClass ) ; } else { return isOrSubOf ( objectClass , typeClass ) ; } }
10176	public void generateAllDotDescForWagon ( PrintWriter out ) { generateAllDotDescForWagon ( out , _NULL ) ; }
10310	public boolean isCritical ( ) { return _BOOL ; }
10331	public boolean isCritical ( ) { return _BOOL ; }
10351	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostHate_A_TO_ME ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
10402	public FieldRefNode makeGlobalFieldRefNode ( Object baseValue , Type baseType , SparkField field ) { VarNode base = makeGlobalVarNode ( baseValue , baseType ) ; return makeFieldRefNode ( base , field ) ; }
10460	public boolean isCritical ( ) { return _BOOL ; }
10483	public static boolean removeFromCache ( String imageUri , DiscCacheAware discCache ) { File image = discCache . get ( imageUri ) ; return image . delete ( ) ; }
10512	private String populateASGName ( String region , String instanceId ) { GetASGName getASGName = new GetASGName ( region , instanceId ) ; try { return getASGName . call ( ) ; } catch ( Exception e ) { logger . error ( _CHAR Failed to determine ASG name . '' , e ) ; return _NULL ; } }
10524	public static SM_SYSTEM_MESSAGE STR_FIND_POS_TOO_FAR_FROM_NPC_DEV ( String value0 , String value2 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value2 , value1 ) ; }
10536	public boolean isCritical ( ) { return _BOOL ; }
10546	public synchronized void append ( AudioInputStream ais ) { if ( ais == this ) throw new IllegalArgumentException ( _CHAR Can not append me to myself _CHAR ) ; if ( doneAppending ) throw new IllegalArgumentException ( _CHAR Can not append after doneAppending ( ) was called ! _CHAR ) ; m_audioInputStreamList . add ( ais ) ; notifyAll ( ) ; }
10551	public boolean isCritical ( ) { return _BOOL ; }
10585	public static void appendContentPrefix ( HttpServletRequest request , StringBuilder urlBuffer ) { try { appendContentPrefix ( request , ( Appendable ) urlBuffer ) ; } catch ( IOException e ) { throw UtilMisc . initCause ( new InternalError ( e . getMessage ( ) ) , e ) ; } }
10637	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
10695	static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
10772	public boolean isSetAppkey ( ) { return this . appkey != _NULL ; }
10792	public Object clone ( ) { byte [ ] newData = new byte [ length ] ; System . arraycopy ( data , _NUM , newData , _NUM , newData . length ) ; SysexMessage event = new SysexMessage ( newData ) ; return event ; }
10833	public boolean isCritical ( ) { return _BOOL ; }
10837	public String serialize ( byte version ) { return Base64 . encodeBase64String ( serializeBytes ( version ) ) ; }
10849	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcATK_Instant_Ratio_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
10981	public ImageSize scaleDown ( int sampleSize ) { return new ImageSize ( width / sampleSize , height / sampleSize ) ; }
10982	public boolean isEmpty ( ) { return lat . isEmpty ( ) ; }
11003	public boolean isCritical ( ) { return _BOOL ; }
11093	public boolean removeByObject ( T obj ) { lock . lock ( ) ; try { return removeByObject_impl ( obj ) ; } finally { lock . unlock ( ) ; } }
11101	@ SuppressLint ( _CHAR NewApi _CHAR ) public static void tryAccessibilityAnnounce ( View view , CharSequence text ) { if ( isJellybeanOrLater ( ) && view != _NULL && text != _NULL ) { view . announceForAccessibility ( text ) ; } }
11146	public void dump ( PrintWriter output , int pad , String title ) { dump ( output , pad , title , _BOOL ) ; }
11188	public void checkExpectedGeneratedResources ( ) { try { checkDirectoriesContainSameContent ( getExpectedResourcesTestDir ( ) , targetTestDir ) ; } catch ( DifferentDirectoryContentException e ) { String msg = _CHAR Generated resources do not match the expected resources _CHAR ; logger . debug ( msg , e ) ; Assert . fail ( msg + _CHAR \ n _CHAR + e . getMessage ( ) ) ; } }
11195	public GroupsEditQuery messages ( Boolean value ) { return unsafeParam ( _CHAR messages _CHAR , value ) ; }
11210	public static boolean equal ( Entry [ ] attrSet1 , Entry [ ] attrSet2 ) { return contains ( attrSet1 , attrSet2 ) && contains ( attrSet2 , attrSet1 ) ; }
11243	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostDropRate_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
11310	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCDeBuffMental_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
11387	public boolean isSetHeartbeatInfo ( ) { return this . heartbeatInfo != _NULL ; }
11398	public WallSearchQuery ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
11486	public void stop ( ) throws ShutDownException { if ( rabbitMqProcess == _NULL ) { throw new IllegalStateException ( _CHAR Stop should n _CHAR start ( ) _CHAR_CHAR ) ; } new ShutdownHelper ( config , rabbitMqProcess ) . run ( ) ; rabbitMqProcess = null ; }
11506	public static JsonValue value ( long value ) { return new JsonNumber ( Long . toString ( value , _NUM ) ) ; }
11513	public boolean isCritical ( ) { return _BOOL ; }
11575	public boolean isSetLoadInfo ( ) { return this . loadInfo != _NULL ; }
11624	public boolean isCritical ( ) { return _BOOL ; }
11634	public boolean isCritical ( ) { return _BOOL ; }
11676	public boolean isBlockPopups ( ) { return isOptionEnabled ( UrlFilterRuleOption . BLOCK_POPUPS ) ; }
11700	public boolean add ( Node n ) { if ( oldSet . contains ( n ) ) return _BOOL ; return newSet . add ( n ) ; }
11773	public boolean providesProperties ( ) { return _BOOL ; }
11797	public AdaptableList add ( Iterator e ) { while ( e . hasNext ( ) ) { add ( ( IAdaptable ) e . next ( ) ) ; } return this ; }
11829	public static SM_SYSTEM_MESSAGE STR_PARTY_ITEM_DICE_CUSTOM ( String value0 , int num1 , int num2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 , num2 ) ; }
11852	public static WorkspaceRoot fromProject ( Project project ) { BlazeImportSettings importSettings = BlazeImportSettingsManager . getInstance ( project ) . getImportSettings ( ) ; if ( importSettings == _NULL ) { throw new IllegalStateException ( _CHAR _NULL BlazeImportSettings . '' ) ; } return fromImportSettings ( importSettings ) ; }
11897	public Object [ ] toArray ( ) { return elementVector . toArray ( ) ; }
11909	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_INTERVAL_TO_B ( String skilltarget , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillname ) ; }
11919	public GroupsEditQuery obsceneStopwords ( Boolean value ) { return unsafeParam ( _CHAR obscene_stopwords _CHAR , value ) ; }
11937	public VirtualInvokeExpr newVirtualInvokeExpr ( Local base , SootMethodRef method , List < ? extends Value > args ) { return new JVirtualInvokeExpr ( base , method , args ) ; }
11953	public boolean isCritical ( ) { return _BOOL ; }
12011	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_INTERVAL_A_TO_ME ( String skillcaster , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , num0 , skillname ) ; }
12058	public void writeResponseHeader ( String version , ResponseCode code ) throws IOException { if ( code == _NULL ) throw new IllegalArgumentException ( ) ; writeHeader ( version + _CHAR _CHAR + code . value ( ) + _CHAR _CHAR + code . message ( ) ) ; }
12077	public boolean isCritical ( ) { return _BOOL ; }
12144	public boolean isCritical ( ) { return _BOOL ; }
12167	public Iterator sortedKeys ( ) { return new TreeSet ( this . map . keySet ( ) ) . iterator ( ) ; }
12187	public boolean isInTargetZone ( float x , float y ) { if ( Math . abs ( x - mX ) <= mTargetRadiusPx && Math . abs ( y - mY ) <= mTargetRadiusPx ) { return _BOOL ; } return _BOOL ; }
12214	public static ProbeItemDescriptor continuousLineItem ( String name , String description , ItemValueFormatter formatter , double dataFactor , long minValue , long maxValue ) { return continuousItem ( name , description , formatter , dataFactor , minValue , maxValue , DEFAULT_LINE_WIDTH , DEFAULT_COLOR , _NULL ) ; }
12277	public boolean isCritical ( ) { return _BOOL ; }
12288	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SubTypeExtendDuration_A_TO_SELF ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
12289	public boolean isCritical ( ) { return _BOOL ; }
12290	public boolean isCritical ( ) { return _BOOL ; }
12306	protected boolean validRowCheck ( int row , boolean throwException ) { if ( isValidRow ( row ) ) { return _BOOL ; } else if ( throwException ) { throw new IllegalArgumentException ( _CHAR Invalid row value : _CHAR + row ) ; } else { return _BOOL ; } }
12389	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
12406	public int read ( byte b [ ] ) throws IOException , LogException { if ( length < b . length ) badRead ( b . length ) ; int len = in . read ( b ) ; length -= len ; return len ; }
12422	public int hashCode ( ) { int hashval = _NUM ; for ( Constant c : vals . values ( ) ) hashval += c . hashCode ( ) ; return hashval ; }
12433	public static SM_SYSTEM_MESSAGE STR_SUBMIT_GM_PETITION_FAILED ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
12497	void removeFromDisplaySlots ( Objective objective ) { for ( Iterator < Entry < DisplaySlot , Objective >> it = objectivesByDisplaySlot . entrySet ( ) . iterator ( ) ; it . hasNext ( ) ; ) { Entry < DisplaySlot , Objective > entry = it . next ( ) ; if ( entry . getValue ( ) == objective ) { it . remove ( ) ; } } }
12531	public static RxJavaCallAdapterFactory create ( ) { return new RxJavaCallAdapterFactory ( _NULL ) ; }
12539	public boolean isCritical ( ) { return _BOOL ; }
12564	public void drawScreen ( int mouseX , int mouseY , float partialTicks ) { this . profileListCtrl . drawScreen ( mouseX , mouseY , partialTicks ) ; super . drawScreen ( mouseX , mouseY , partialTicks , _BOOL ) ; }
12617	private static boolean haveChecked ( File templateFile , boolean createWithProject ) { return haveChecked ( templateFile . getParentFile ( ) . getName ( ) , templateFile . getName ( ) , createWithProject ) ; }
12635	public static JsonValue value ( float value ) { if ( Float . isInfinite ( value ) || Float . isNaN ( value ) ) { throw new IllegalArgumentException ( _CHAR Infinite and NaN values not permitted in JSON _CHAR ) ; } return new JsonNumber ( cutOffPointZero ( Float . toString ( value ) ) ) ; }
12642	private void scheduleNewInvoker ( ) { AsyncEventListenerInvoker invoker = new AsyncEventListenerInvoker ( ) ; this . taskExecutor . execute ( invoker ) ; this . scheduledInvokers . add ( invoker ) ; this . activeInvokerMonitor . notifyAll ( ) ; }
12734	public void nextGroup ( ) { release ( ) ; }
12784	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
12811	public boolean isCritical ( ) { return _BOOL ; }
12832	public boolean isAxisMaxCustom ( ) { return mCustomAxisMax ; }
12858	void createFinish ( String instanceId ) { if ( ! isDomThread ( ) ) { throw new WXRuntimeException ( _CHAR CreateFinish operation must be done in dom thread _CHAR ) ; } WXDomStatement statement = mDomRegistries . get ( instanceId ) ; if ( statement == _NULL ) { return ; } statement . createFinish ( ) ; }
12881	public boolean isEnabled ( ) { return mEnabled ; }
12918	public static PostFragment newInstance ( ) { PostFragment fragment = new PostFragment ( ) ; Bundle args = new Bundle ( ) ; fragment . setArguments ( args ) ; return fragment ; }
13000	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
13011	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSpellATK_Instant_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
13029	@ Override public boolean isNullMeasureValue ( int ordinal ) { return isNullMeasureValue ( ordinal , rowMapping [ currentRow ] ) ; }
13058	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedFPATK_Instant_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
13090	public boolean isCritical ( ) { return _BOOL ; }
13129	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelDeBuffMental_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
13143	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_TS_RANK ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
13196	public boolean isSetSequenceId ( ) { return __isset_bit_vector . get ( __SEQUENCEID_ISSET_ID ) ; }
13218	public static byte [ ] readFileToByteArray ( File file ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toByteArray ( in , file . length ( ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
13295	public ImageSize scaleDown ( int sampleSize ) { return new ImageSize ( width / sampleSize , height / sampleSize ) ; }
13299	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPHeal_HEAL_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
13408	public boolean isCritical ( ) { return _BOOL ; }
13617	public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
13622	public static < T > T checkNotNull ( T reference , @ Nullable String errorMessageTemplate , @ Nullable Object ... errorMessageArgs ) { if ( reference == _NULL ) { throw new NullPointerException ( format ( errorMessageTemplate , errorMessageArgs ) ) ; } return reference ; }
13696	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ResurrectPositional_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
13718	@ Deprecated public static void disableLogging ( ) { writeLogs ( _BOOL ) ; }
13754	public static boolean isTime ( String hour , String minute , String second ) { if ( isHour ( hour ) && isMinute ( minute ) && isSecond ( second ) ) return _BOOL ; else return _BOOL ; }
13755	public boolean isCritical ( ) { return _BOOL ; }
13784	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Provoker_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
13868	public boolean isCritical ( ) { return _BOOL ; }
13881	public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_CHANGE_CHANNEL_COOLTIME ( String durationtime0 , String durationtime1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , durationtime0 , durationtime1 ) ; }
13920	static < T > T checkNotNull ( T reference , @ Nullable Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
13932	public boolean isCritical ( ) { return _BOOL ; }
13941	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATK_Instant_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
13998	public boolean isCritical ( ) { return _BOOL ; }
14035	public boolean isCritical ( ) { return _BOOL ; }
14041	public static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
14047	@ Override public SourceCommandTag clone ( ) throws CloneNotSupportedException { SourceCommandTag clonedSourceCommandTag = ( SourceCommandTag ) super . clone ( ) ; HardwareAddress hardwareAddress = getHardwareAddress ( ) ; if ( hardwareAddress != _NULL ) clonedSourceCommandTag . setHardwareAddress ( getHardwareAddress ( ) . clone ( ) ) ; return clonedSourceCommandTag ; }
14068	public static boolean removeFromCache ( String imageUri , DiskCache diskCache ) { File image = diskCache . get ( imageUri ) ; return image != _NULL && image . exists ( ) && image . delete ( ) ; }
14134	public static < T > T parse ( File xml , String [ ] xsds , String pkg , Class < T > resultClass ) throws XmlParsingException , FileNotFoundException { return parse ( new FileInputStream ( xml ) , xml . getAbsolutePath ( ) , xsds , pkg , resultClass ) ; }
14147	public boolean isCritical ( ) { return _BOOL ; }
14154	public boolean isCritical ( ) { return _BOOL ; }
14207	public Builder withSortOrder ( RangeRequest . SortOrder order ) { this . sortOrder = order ; return this ; }
14223	public void updateViewport ( ) { setToOrtho ( _BOOL , virtualViewport . getWidth ( ) , virtualViewport . getHeight ( ) ) ; }
14279	public boolean isSetStatus ( ) { return __isset_bit_vector . get ( __STATUS_ISSET_ID ) ; }
14291	public boolean removeByObject ( T obj ) { if ( getNumSegments ( ) > _NUM ) throw new RuntimeException ( _CHAR ConcurrentSegmentedStoredList : : removeByObject not supported for multi segments list '' ) ; if ( _segments [ _NUM ] . removeByObject ( obj ) ) { sizeUpdater . decrementAndGet ( this ) ; return _BOOL ; } return _BOOL ; }
14303	public boolean isCritical ( ) { return _BOOL ; }
14363	public boolean isCritical ( ) { return _BOOL ; }
14420	private void validateOrderByAttribute ( String attributeName ) { if ( ( ! nameToAggregateAttributeMap . containsKey ( attributeName ) ) && ( ! nameToGroupByAttributeMap . containsKey ( attributeName ) ) ) { throw new MithraBusinessException ( _CHAR Aggregate list can not be order by attribute with name : _CHAR + attributeName + _CHAR .\ n _CHAR + _CHAR An AggregateList can only be ordered by an attribute which is either a AggregateAttribute or a GroupByAttribute _CHAR ) ; } }
14422	public boolean isFullyZoomedOutY ( ) { return ! ( mScaleY > mMinScaleY || mMinScaleY > _NUM ) ; }
14450	public boolean isCritical ( ) { return _BOOL ; }
14458	public boolean isCritical ( ) { return _BOOL ; }
14527	public boolean isSetOldGC ( ) { return __isset_bit_vector . get ( __OLDGC_ISSET_ID ) ; }
14546	public boolean isCritical ( ) { return _BOOL ; }
14551	public static boolean strictOn ( ) { return _CHAR strict _CHAR . equals ( UtilProperties . getPropertyValue ( _CHAR minilang . properties _CHAR , _CHAR validation . level _CHAR ) ) ; }
14587	public boolean isRepair ( ) { return repair ; }
14613	public static fra_list newInstance ( String param1 , String param2 ) { fra_list fragment = new fra_list ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
14615	public static boolean removeFromCache ( String imageUri , DiskCache diskCache ) { File image = diskCache . get ( imageUri ) ; return image != _NULL && image . exists ( ) && image . delete ( ) ; }
14682	public CountModifiers add ( CountModifiers modifiers ) { return createIfNeeded ( super . add ( modifiers ) ) ; }
14764	public PhotosGetCommentsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
14820	public PhotosGetUserPhotosQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
14856	public PhotosGetAllQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
14921	public static MaxEval unlimited ( ) { return new MaxEval ( Integer . MAX_VALUE ) ; }
14936	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SkillATKDrain_Instant_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
14938	private URI buildNormalizedUri ( UriInfo uriInfo ) { UriBuilder builder = uriInfo . getRequestUriBuilder ( ) ; builder . replaceQuery ( _CHAR _CHAR ) ; getNormalizedQueryParameters ( uriInfo ) . forEach ( _NULL ) ; return builder . build ( ) ; }
14953	public boolean isCritical ( ) { return _BOOL ; }
14954	public static ReactorCallAdapterFactory create ( ) { return new ReactorCallAdapterFactory ( _NULL ) ; }
14960	public void stopReplicationService ( ) throws Exception { if ( _BOOL == isAutoRecoveryEnabled ( ) ) { return ; } for ( Entry < BookieServer , AutoRecoveryMain > autoRecoveryProcess : autoRecoveryProcesses . entrySet ( ) ) { autoRecoveryProcess . getValue ( ) . shutdown ( ) ; LOG . debug ( _CHAR Shutdown Auditor Recovery for the bookie : '' + autoRecoveryProcess . getKey ( ) . getLocalAddress ( ) ) ; } }
14982	public static boolean lenientOn ( ) { return _CHAR lenient _CHAR . equals ( UtilProperties . getPropertyValue ( _CHAR minilang . properties _CHAR , _CHAR validation . level _CHAR ) ) ; }
14997	@ Deprecated public static void disableLogging ( ) { writeLogs ( _BOOL ) ; }
15065	boolean aequal ( S2Point that , double margin ) { return ( Math . abs ( x - that . x ) < margin ) && ( Math . abs ( y - that . y ) < margin ) && ( Math . abs ( z - that . z ) < margin ) ; }
15076	@ Override public void skip ( final int num ) { for ( int x = _NUM ; x < num ; x ++ ) { readByte ( ) ; } }
15093	public boolean isCritical ( ) { return _BOOL ; }
15101	public static boolean removeFromCache ( String imageUri , DiscCacheAware discCache ) { File image = discCache . get ( imageUri ) ; return image . delete ( ) ; }
15110	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
15117	protected void closeApplicationContext ( ) { if ( applicationContext != _NULL ) { if ( logger . isDebugEnabled ( ) ) { logger . debug ( _CHAR Closing application context [ _CHAR + location + _CHAR ] _CHAR ) ; } try { applicationContext . setParent ( _NULL ) ; applicationContext . close ( ) ; } finally { applicationContext = _NULL ; } } }
15204	public CustomConfiguration tryGetHostConfiguration ( String hostName , HttpServletRequest request ) { try { return ConfigurationService . getHostConfiguration ( hostName , request . getRemoteAddr ( ) , request . getSession ( ) . getId ( ) ) ; } catch ( ConfigurationException e ) { Logger . debug ( getClass ( ) , _CHAR Failed to retrieve host configuration : _CHAR + hostName ) ; return _NULL ; } }
15226	public boolean isSetMethodQpsMap ( ) { return this . methodQpsMap != _NULL ; }
15229	public static SM_SYSTEM_MESSAGE STR_MSG_DICE_RESULT_EX_OTHER ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
15299	public boolean isCritical ( ) { return _BOOL ; }
15349	public static RxJava2CallAdapterFactory create ( ) { return new RxJava2CallAdapterFactory ( _NULL ) ; }
15364	public void revertToDefault ( int row , String field ) { int col = getColumnNumber ( field ) ; row = getColumnRow ( row , col ) ; getColumn ( col ) . revertToDefault ( row ) ; }
15425	public static _Fields findByThriftIdOrThrow ( int fieldId ) { _Fields fields = findByThriftId ( fieldId ) ; if ( fields == _NULL ) throw new IllegalArgumentException ( _CHAR Field _CHAR + fieldId + _CHAR does n _CHAR_CHAR ) ; return fields ; }
15451	void registerLaunch ( IBinder session , String url ) { mClientManager . registerLaunch ( session , url ) ; }
15458	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
15486	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
15596	public static void disableLogging ( ) { DISABLED = _BOOL ; }
15606	private String expandClassName ( String className ) { String packageName = getPackageName ( ) ; if ( className . startsWith ( _CHAR . _CHAR ) ) return packageName + className ; else if ( className . substring ( _NUM , _NUM ) . equals ( className . substring ( _NUM , _NUM ) . toUpperCase ( ) ) ) return packageName + _CHAR . _CHAR + className ; else return className ; }
15658	public BigInteger toBigInteger ( ) { return new BigInteger ( _NUM , ByteUtils . reverse ( toByteArray ( ) ) ) ; }
15677	public AudioSaveQuery title ( String value ) { return unsafeParam ( _CHAR title _CHAR , value ) ; }
15691	public static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
15694	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
15696	public boolean isCritical ( ) { return _BOOL ; }
15706	public TakeModifiers add ( TakeModifiers modifiers ) { return createIfNeeded ( super . add ( modifiers ) ) ; }
15759	public static boolean hasEquipmentValueDeadbandChanged ( final ISourceDataTag sourceDataTag , final ISourceDataTag oldSourceDataTag ) { return sourceDataTag . getValueDeadbandType ( ) == DataTagDeadband . DEADBAND_EQUIPMENT_ABSOLUTE || sourceDataTag . getValueDeadbandType ( ) == DataTagDeadband . DEADBAND_EQUIPMENT_RELATIVE && sourceDataTag . getValueDeadband ( ) != oldSourceDataTag . getValueDeadband ( ) ; }
15773	private boolean isDiscovered ( LookupLocator lct ) { Iterator iter = discoveredLocators . iterator ( ) ; while ( iter . hasNext ( ) ) { LocatorReg reg = ( LocatorReg ) iter . next ( ) ; if ( reg . l . equals ( lct ) ) return _BOOL ; } return _BOOL ; }
15865	public static ProbeItemDescriptor discreteFillItem ( String name , String description , ItemValueFormatter formatter , double dataFactor , long minValue , long maxValue ) { return discreteOutlineItem ( name , description , formatter , dataFactor , minValue , maxValue , DEFAULT_LINE_WIDTH , _NULL , DEFAULT_COLOR ) ; }
15903	public void paint ( Graphics g ) { g . translate ( _NUM , - visibleRow * getRowHeight ( ) ) ; super . paint ( g ) ; }
15968	public FieldRefNode makeLocalFieldRefNode ( Object baseValue , Type baseType , SparkField field , SootMethod method ) { VarNode base = makeLocalVarNode ( baseValue , baseType , method ) ; return makeFieldRefNode ( base , field ) ; }
15970	public boolean isSetLocalContext ( ) { return this . localContext != _NULL ; }
16005	protected Label createWrappingLabel ( Composite parent , String text , int indent ) { return createWrappingLabel ( parent , text , indent , _NUM ) ; }
16070	public void loadDataStringFromFile ( String sFilename ) { try { Histogram . loadDataStringFromFile ( sFilename ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; Histogram . setDataString ( _CHAR _CHAR ) ; Graph . setDataString ( _CHAR _CHAR ) ; } }
16087	public boolean isCDataElement ( String tagName ) { int i ; if ( _cdataElements == _NULL ) return _BOOL ; for ( i = _NUM ; i < _cdataElements . length ; ++ i ) if ( _cdataElements [ i ] . equals ( tagName ) ) return _BOOL ; return _BOOL ; }
16152	private void pushChar ( ) { buf . append ( getLITERAL ( ) . charAt ( idx ++ ) ) ; }
16164	public boolean isCritical ( ) { return _BOOL ; }
16187	public boolean greaterOrEquals ( PlatformLogicalVersion otherVersion ) { return ! lessThan ( otherVersion ) ; }
16234	public static float readLittleEndianFloat ( DataInputStream dataStream ) throws IOException { return Float . intBitsToFloat ( readLittleEndianInt ( dataStream ) ) ; }
16277	public static < T > T checkNotNull ( T reference , String errorMessageTemplate , Object ... errorMessageArgs ) { if ( reference == _NULL ) { throw new NullPointerException ( format ( errorMessageTemplate , errorMessageArgs ) ) ; } return reference ; }
16343	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Resurrect_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
16364	public static < T > T checkNotNull ( T reference , Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
16373	public FastByteArrayInputStream convertToInputStream ( ) { return new FastByteArrayInputStream ( buf , count ) ; }
16457	public static SM_SYSTEM_MESSAGE STR_MSG_CANT_USE_DUPLICATED_ITEM ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
16465	public boolean isCritical ( ) { return _BOOL ; }
16497	public static String sampaEn2sampaDe ( String En ) { String result = En ; if ( sampaEn2sampaDe . containsKey ( En ) ) { result = sampaEn2sampaDe . get ( En ) ; } return result ; }
16502	public static Object nullToBlank ( Object object ) { if ( object == _NULL ) { return StringUtil . BLANK ; } return object ; }
16537	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; addPreferencesFromResource ( R . xml . preference ) ; bindPreferenceSummaryToValue ( findPreference ( getString ( R . string . pref_units_key ) ) ) ; bindPreferenceSummaryToValuesInt ( findPreference ( getString ( R . string . pref_colors_key ) ) ) ; MainActivity . audioWidget . hide ( ) ; }
16567	public boolean isCritical ( ) { return _BOOL ; }
16626	public boolean isCritical ( ) { return _BOOL ; }
16627	public Object clone ( ) { byte [ ] newData = new byte [ length ] ; System . arraycopy ( data , _NUM , newData , _NUM , newData . length ) ; ShortMessage msg = new ShortMessage ( newData ) ; return msg ; }
16692	public boolean isCritical ( ) { return _BOOL ; }
16694	public void tag ( String tag , String name , String value ) { tag ( tag , name , value , _BOOL ) ; }
16731	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
16814	public boolean isCritical ( ) { return _BOOL ; }
16849	public static boolean hasEncoding ( List < Encoding > encodings , Encoding encoding ) { return encodings . contains ( encoding ) ; }
16853	public static boolean instanceOf ( Class < ? > objectClass , String typeName ) { return instanceOf ( objectClass , typeName , _NULL ) ; }
16895	public boolean isCritical ( ) { return _BOOL ; }
16903	public synchronized void append ( AudioInputStream ais ) { if ( ais == this ) throw new IllegalArgumentException ( _CHAR Can not append me to myself _CHAR ) ; if ( doneAppending ) throw new IllegalArgumentException ( _CHAR Can not append after doneAppending ( ) was called ! _CHAR ) ; m_audioInputStreamList . add ( ais ) ; notifyAll ( ) ; }
16960	public static RuntimeEnvironment system ( InputStream in , OutputStream out , OutputStream err ) { return new SystemRuntimeEnvironment ( in , out , err ) ; }
16975	public static < T > T checkNotNull ( T reference , @ Nullable Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
17003	@ Override public void onButtonClicked ( boolean isPrimaryButton ) { onButtonClicked ( ActionType . OK ) ; }
17019	private static boolean deleteResolveEBUSY ( File file ) { final File to = new File ( file . getAbsolutePath ( ) + System . currentTimeMillis ( ) ) ; file . renameTo ( to ) ; return to . delete ( ) ; }
17023	private final void reapStaleReplicas ( ) { long currentTime = SystemTime . timeMillis ( ) ; long expirationTime = currentTime - _staleReplicaExpirationTime ; if ( _force || _lastReapedSpaceContentObjects < expirationTime ) _lastReapedSpaceContentObjects = currentTime ; else return ; _engine . getReplicationNode ( ) . getAdmin ( ) . clearStaleReplicas ( expirationTime ) ; }
17039	public SiteAdminPage pastePage ( String parentPath ) { open ( parentPath ) ; grid . getActionBar ( ) . clickOnButton ( SiteAdminButtons . PASTE , pastePageWindow ) ; pastePageWindow . confirm ( ) ; grid . waitForLoaderNotPresent ( ) ; return this ; }
17063	public boolean isCritical ( ) { return _BOOL ; }
17076	public static int rgba ( int r , int g , int b , int a ) { return ( ( a & _NUM ) << _NUM ) | ( ( r & _NUM ) << _NUM ) | ( ( g & _NUM ) << _NUM ) | ( ( b & _NUM ) << _NUM ) ; }
17138	public boolean isCritical ( ) { return _BOOL ; }
17193	public static boolean isFileTypeSupported ( int fileType ) { List providers = getMidiFileWriters ( ) ; for ( int i = _NUM ; i < providers . size ( ) ; i ++ ) { MidiFileWriter writer = ( MidiFileWriter ) providers . get ( i ) ; if ( writer . isFileTypeSupported ( fileType ) ) { return _BOOL ; } } return _BOOL ; }
17258	public void gen ( ) throws Exception { infoGen . gen ( ) ; }
17283	public static float calculateWidth ( float height , float targetAspectRatio ) { return targetAspectRatio * height ; }
17315	public boolean isCritical ( ) { return _BOOL ; }
17376	public boolean isEmptyResponse ( ) { return isOptionEnabled ( UrlFilterRuleOption . EMPTY_RESPONSE ) ; }
17410	public boolean isCritical ( ) { return _BOOL ; }
17508	private static boolean isInHorizontalTargetZone ( float x , float y , float handleXStart , float handleXEnd , float handleY , float targetRadius ) { if ( x > handleXStart && x < handleXEnd && Math . abs ( y - handleY ) <= targetRadius ) { return _BOOL ; } return _BOOL ; }
17527	public boolean isCritical ( ) { return _BOOL ; }
17532	public boolean isCritical ( ) { return _BOOL ; }
17583	public boolean isCritical ( ) { return _BOOL ; }
17584	public boolean isCritical ( ) { return _BOOL ; }
17704	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATK_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
17747	public void dragBy ( int amountX , int amountY ) { press ( InputEvent . BUTTON1_MASK ) ; moveBy ( amountX , amountY ) ; release ( InputEvent . BUTTON1_MASK ) ; }
17770	public BoolValueProperty installed ( ) { return myInstalled ; }
17772	public boolean isSetThreadNum ( ) { return __isset_bit_vector . get ( __THREADNUM_ISSET_ID ) ; }
17801	private void recordSimpleJavaEdit ( ) { synchronized ( myLock ) { mySeenLocalJavaChanges = _BOOL ; } }
17893	public final static String base64Decode ( String str ) { if ( str == _NULL ) return _NULL ; return new String ( base64Decode ( str . getBytes ( ) ) ) ; }
17961	public void removeCartItem ( int index , LocalDispatcher dispatcher ) throws CartItemModifyException { removeCartItem ( index , _BOOL , dispatcher ) ; }
17975	public boolean isCritical ( ) { return _BOOL ; }
17998	private void pushAnnotatorsRef ( String values ) { annotatorsRef . push ( annotatorsRef . peek ( ) ) ; setAnnotatorsRef ( values ) ; }
18029	@ ScheduleResult public int schedule ( @ NonNull Job job ) { if ( ! mDriver . isAvailable ( ) ) { return SCHEDULE_RESULT_NO_DRIVER_AVAILABLE ; } return mDriver . schedule ( job ) ; }
18048	public static FragmentIntroBase newInstance ( String type ) { FragmentIntroBase fragment = new FragmentIntroBase ( ) ; Bundle args = new Bundle ( ) ; args . putString ( _CHAR type _CHAR , type ) ; fragment . setArguments ( args ) ; return fragment ; }
18055	public final boolean add ( Node n ) { if ( pag . getTypeManager ( ) . castNeverFails ( n . getType ( ) , type ) ) { return fastAdd ( n ) ; } return _BOOL ; }
18097	public static void assertion ( boolean expression , String errorMessage ) { if ( ! expression ) { throw new UnsupportedOperationException ( _CHAR Error in _CHAR + NAME + _CHAR _CHAR + VERSION + _CHAR : _CHAR + errorMessage ) ; } }
18107	@ Override public void initialise ( marytts . modules . synthesis . Voice aMaryVoice , String lexiconClassName ) { super . initialise ( aMaryVoice , lexiconClassName ) ; if ( ! aMaryVoice . getLocale ( ) . equals ( Locale . US ) ) { throw new IllegalArgumentException ( _CHAR This dummy freetts voice is meant for US English voices only ! '' ) ; } }
18120	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_Instant_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
18160	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bleed_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
18175	public boolean isCritical ( ) { return _BOOL ; }
18183	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
18209	public synchronized void panTo ( Point2D p ) { m_itransform . transform ( p , m_tmpPoint ) ; panToAbs ( m_tmpPoint ) ; }
18255	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ChangeHateOnAttacked_A_TO_ME ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
18299	@ Override public void close ( ) { if ( closed ) { return ; } closed = _BOOL ; LIB . mdb_env_close ( ptr ) ; }
18341	public boolean isCritical ( ) { return _BOOL ; }
18357	public boolean removeByObject ( T obj ) { return removeByObject_impl ( obj ) ; }
18367	public void write ( int b ) throws IOException { raf . write ( b ) ; }
18380	public static QQWXFragment newInstance ( String param1 , String param2 ) { QQWXFragment fragment = new QQWXFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
18443	@ PostConstruct public void init ( ) { listenerContainer = cacheRegistrationService . registerToAlarms ( this ) ; }
18457	public boolean isCritical ( ) { return _BOOL ; }
18524	public SpecialInvokeExpr newSpecialInvokeExpr ( Local base , SootMethodRef method , List args ) { return new GSpecialInvokeExpr ( base , method , args ) ; }
18546	public Builder traceTaskExecutionWarnTimeUs ( long timeUs ) { this . traceTaskExecutionWarnTimeUs = timeUs ; return this ; }
18684	public String restoreLanguage ( ) { fLanguageStack . pop ( ) ; fLanguageScope . pop ( ) ; return ( String ) fLanguageStack . peek ( ) ; }
18758	public AemInsertWindow openInsertWindowByContextMenu ( ) { wait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return insertWindow . waitToBeDisplayed ( ) ; }
18770	@ PostConstruct public void init ( ) { listenerContainer = cacheRegistrationService . registerBufferedListenerToTags ( this ) ; }
18779	@ Override public boolean supports ( Class < ? > clazz ) { boolean result = ActionConfig . class . equals ( clazz ) ; LOG . debug ( _CHAR Supports class : _CHAR + clazz + _CHAR , _CHAR + result ) ; return result ; }
18816	private void readChunkHeader ( InputStream stream , ResChunk_Header nextChunkHeader ) throws IOException { byte [ ] header = new byte [ _NUM ] ; stream . read ( header ) ; readChunkHeader ( nextChunkHeader , header , _NUM ) ; }
18819	@ Override public DOMASWriter createDOMASWriter ( ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
18823	public boolean isCritical ( ) { return _BOOL ; }
18828	public static final void initZK ( ZooKeeper zkc , String selfBrokerUrl ) { try { LocalZooKeeperConnectionService . checkAndCreatePersistNode ( zkc , OWNER_INFO_ROOT ) ; cleanupNamespaceNodes ( zkc , OWNER_INFO_ROOT , selfBrokerUrl ) ; } catch ( Exception e ) { LOG . error ( e . getMessage ( ) , e ) ; throw new RuntimeException ( e ) ; } }
18906	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
18951	public boolean isCritical ( ) { return _BOOL ; }
18957	public boolean isCritical ( ) { return _BOOL ; }
18971	private void updateNotification ( int notificationId , int mediaType , String url ) { if ( doesNotificationExist ( notificationId ) && ! doesNotificationNeedUpdate ( notificationId , mediaType ) ) { return ; } destroyNotification ( notificationId ) ; if ( mediaType != MEDIATYPE_NO_MEDIA ) { createNotification ( notificationId , mediaType , url ) ; } if ( mNotifications . size ( ) == _NUM ) stopSelf ( ) ; }
18978	public static String needProperty ( String property ) throws NoSuchPropertyException { String value = getProperty ( property ) ; if ( value == _NULL ) { throw new NoSuchPropertyException ( _CHAR Missing value ` _CHAR + property + _CHAR _CHAR_CHAR ) ; } return value ; }
19011	public boolean isSetStatus ( ) { return __isset_bit_vector . get ( __STATUS_ISSET_ID ) ; }
19019	public boolean isCritical ( ) { return _BOOL ; }
19059	public void processNewData ( int off , int len ) { for ( int i = off ; i < off + len ; i ++ ) { buf [ i ] = buf [ i ] * buf [ i ] ; assert buf [ i ] >= _NUM ; } }
19073	private void shutdownPrecaching ( boolean tryAgainSoon ) { sIsPrecaching = _BOOL ; releasePrecachingWakeLock ( ) ; PrecacheServiceLauncher . precachingFinished ( getApplicationContext ( ) , tryAgainSoon ) ; stopSelf ( ) ; }
19088	private void inflateLayouts ( ) { inflateEmptyView ( ) ; inflateProgressView ( ) ; if ( mConnectivityAware ) { inflateConnectivityView ( ) ; initConnectivity ( ) ; } }
19098	public boolean isCritical ( ) { return _BOOL ; }
19101	public boolean equalStranded ( IntervalFeature x ) { if ( x == _NULL ) { return _BOOL ; } return ( this . chrom . equals ( x . chrom ) && this . from == x . from && this . to == x . to && this . strand == x . strand ) ; }
19126	public boolean isSetSample ( ) { return __isset_bit_vector . get ( __SAMPLE_ISSET_ID ) ; }
19128	public static SM_SYSTEM_MESSAGE STR_GET_EXP_MAKEUP_BONUS ( String value0 , long num1 , long num2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 , num2 ) ; }
19189	public boolean isVerticalType ( Value val ) { throw new RuntimeException ( _CHAR Unsupported operation . '' ) ; }
19238	private static boolean isInHorizontalTargetZone ( float x , float y , float handleXStart , float handleXEnd , float handleY , float targetRadius ) { return ( x > handleXStart && x < handleXEnd && Math . abs ( y - handleY ) <= targetRadius ) ; }
19248	public void addHeader ( String header , String value ) { clientHeaderMap . put ( header , value ) ; }
19309	private static boolean isInVerticalTargetZone ( float x , float y , float handleX , float handleYStart , float handleYEnd , float targetRadius ) { if ( Math . abs ( x - handleX ) <= targetRadius && y > handleYStart && y < handleYEnd ) { return _BOOL ; } return _BOOL ; }
19410	@ Nullable public Processor registerProcessor ( Processor processor ) { return processors . put ( processor . establishes ( ) , processor ) ; }
19448	public ImageSize scaleDown ( int sampleSize ) { return new ImageSize ( width / sampleSize , height / sampleSize ) ; }
19472	public boolean add ( Node n ) { throw new RuntimeException ( _CHAR ca n _CHAR_CHAR ) ; }
19480	private void processFormFieldEnd ( ) { slickFormSubmitButton . setText ( ! endTag . isEmpty ( ) ? endTag : getResources ( ) . getText ( R . string . form_field_progress ) ) ; slickFieldContainer . setVisibility ( View . GONE ) ; slickFormProgressBar . setVisibility ( View . VISIBLE ) ; new DutyAsyncTask ( ) . execute ( ) ; }
19509	public static SM_SYSTEM_MESSAGE STR_MSG_END_OF_EXCHANGE_TIME ( int nameId , int timeMin ) { return new SM_SYSTEM_MESSAGE ( _NUM , new DescriptionId ( nameId ) , timeMin ) ; }
19546	public JSONException syntaxError ( String message ) { return new JSONException ( message + this ) ; }
19570	void deleteData ( CharacterData node , int offset , int count ) { fDeleteNode = node ; node . deleteData ( offset , count ) ; fDeleteNode = _NULL ; }
19571	public boolean isCritical ( ) { return _BOOL ; }
19618	@ Override public double [ ] makeDensityTestValues ( ) { return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM } ; }
19630	public BoardCloseTopicQuery closeTopic ( UserActor actor , int groupId , int topicId ) { return new BoardCloseTopicQuery ( getClient ( ) , actor , groupId , topicId ) ; }
19651	public static StorableTimeFence inTuesdayInterval ( TimeZone timeZone , long startTimeOfDayMillis , long stopTimeOfDayMillis ) { return new StorableTimeFence ( TUESDAY , timeZone , startTimeOfDayMillis , stopTimeOfDayMillis ) ; }
19667	public static < T > T checkNotNull ( T reference , @ Nullable String errorMessageTemplate , @ Nullable Object ... errorMessageArgs ) { if ( reference == _NULL ) { throw new NullPointerException ( format ( errorMessageTemplate , errorMessageArgs ) ) ; } return reference ; }
19713	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Snare_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
19729	public static boolean after ( GenericRecord first , GenericRecord second , String timestampFieldName ) { return compareTimestamp ( first , second , timestampFieldName ) == _NUM ; }
19776	protected Boolean isNotifyUpdate ( ) { if ( notifyUpdate == _NULL ) { return _BOOL ; } return this . notifyUpdate ; }
19840	public boolean isCritical ( ) { return _BOOL ; }
19892	public boolean isCritical ( ) { return _BOOL ; }
19949	public boolean isCritical ( ) { return _BOOL ; }
20015	public FriendsGetByPhonesQuery phones ( List < String > value ) { return unsafeParam ( _CHAR phones _CHAR , value ) ; }
20066	public static String normaliseUnicodePunctuation ( String unicodeText ) { return normaliseUnicode ( unicodeText , punctuationTable ) ; }
20070	public static AboutFragment newInstance ( String param1 , String param2 ) { AboutFragment fragment = new AboutFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
20076	public boolean isSame ( ModelMenuItem menuItem ) { return this == menuItem ; }
20101	@ Bean public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer ( ) { return new PropertySourcesPlaceholderConfigurer ( ) ; }
20103	public final boolean add ( Node n ) { if ( pag . getTypeManager ( ) . castNeverFails ( n . getType ( ) , type ) ) { return s . add ( n ) ; } return _BOOL ; }
20110	@ VisibleForTesting static Intent createFindAndUploadAllCrashesIntent ( Context context ) { Intent intent = new Intent ( context , MinidumpUploadService . class ) ; intent . setAction ( ACTION_FIND_ALL ) ; return intent ; }
20117	public boolean isCritical ( ) { return _BOOL ; }
20171	public static boolean isAndroidSdkDirInLocalPropertiesFile ( @ NotNull File projectDir ) { String androidHome = getAndroidHomeFromLocalPropertiesFile ( projectDir ) ; if ( ! Strings . isNullOrEmpty ( androidHome ) ) { String msg = String . format ( _CHAR Found Android SDK home at _CHAR ( from local . properties file ) _CHAR , androidHome ) ; LOG . info ( msg ) ; return _BOOL ; } return _BOOL ; }
20187	public boolean isSetTraceInfo ( ) { return this . traceInfo != _NULL ; }
20245	public boolean isCritical ( ) { return _BOOL ; }
20271	public SiteAdminPage copyPage ( String title ) { grid . selectPageByTitle ( title ) ; final SiteAdminActionBar siteAdminActionBar = grid . getActionBar ( ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; grid . waitForLoaderNotPresent ( ) ; return this ; }
20329	public static SM_SYSTEM_MESSAGE STR_MSG_LEAVE_INSTANCE_FORCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20363	public boolean isCritical ( ) { return _BOOL ; }
20364	public static StorableTimeFence inThursdayInterval ( TimeZone timeZone , long startTimeOfDayMillis , long stopTimeOfDayMillis ) { return new StorableTimeFence ( THURSDAY , timeZone , startTimeOfDayMillis , stopTimeOfDayMillis ) ; }
20372	public void writeRequestHeader ( String requestType , String uri , String version ) throws IOException { writeHeader ( requestType + _CHAR _CHAR + uri + _CHAR _CHAR + version ) ; }
20379	public PhotosGetAllCommentsQuery offset ( Integer value ) { return unsafeParam ( _CHAR offset _CHAR , value ) ; }
20429	public boolean isSetAverageLoad ( ) { return __isset_bit_vector . get ( __AVERAGELOAD_ISSET_ID ) ; }
20434	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Petrification_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
20455	public void trustProxy ( IJSpace proxy ) throws RemoteException { ( ( ISpaceProxy ) proxy ) . login ( trustedCredentialsProvider ) ; }
20486	protected boolean atTokenSequence ( TokenKind ... kinds ) { for ( int i = _NUM ; i < kinds . length ; i ++ ) { if ( kindFromElement ( builder . lookAhead ( i ) ) != kinds [ i ] ) { return _BOOL ; } } return _BOOL ; }
20491	public boolean isCritical ( ) { return _BOOL ; }
20502	public static SM_SYSTEM_MESSAGE STR_MSG_LEAVE_INSTANCE ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
20509	@ VisibleForTesting protected void cancelAlarmOnSystem ( Context context , PendingIntent operation ) { AlarmManager alarmManager = ( AlarmManager ) context . getSystemService ( Context . ALARM_SERVICE ) ; alarmManager . cancel ( operation ) ; }
20530	@ Override public boolean isChildFragmentResolved ( ) { if ( fIsShortHand && fShortHandPointer != _NULL && fChildSequence . length <= _NUM ) { return fShortHandPointer . isChildFragmentResolved ( ) ; } else { return fWasOnlyEmptyElementFound ? ! fWasOnlyEmptyElementFound : ( fIsFragmentResolved && ( fCurrentChildDepth >= fFoundDepth ) ) ; } }
20539	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_OutofSight_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
20547	public static Pose matrixToPose ( Matrix4 m ) { Vector3 p = m . getTranslation ( ) ; Quaternion q = new Quaternion ( ) ; q . fromMatrix ( m ) ; q . conjugate ( ) ; return new Pose ( p , q ) ; }
20575	public boolean isCritical ( ) { return _BOOL ; }
20601	public boolean isCritical ( ) { return _BOOL ; }
20653	public boolean isCritical ( ) { return _BOOL ; }
20683	public static boolean isInitialized ( ) { return SdkProperties . isInitialized ( ) ; }
20823	private void handlePunctureRequest ( Peer peer , PunctureRequest message ) throws IOException , MessageException { if ( ! peerExists ( message . getPuncturePeer ( ) . getPeerId ( ) ) ) sendPuncture ( message . getPuncturePeer ( ) ) ; }
20884	public static ViewAction checkViewAction ( ViewAssertion viewAssertion ) { return ViewActions . actionWithAssertions ( new CheckAssertionAction ( viewAssertion ) ) ; }
20885	public boolean isCritical ( ) { return _BOOL ; }
20902	public boolean isCritical ( ) { return _BOOL ; }
21000	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_INTERVAL_HEAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
21026	private int castLongToInt ( final long l ) { if ( l < Integer . MIN_VALUE || l > Integer . MAX_VALUE ) { LOG . warn ( _CHAR castLongToInt ( ) - unsafe cast of long _CHAR + l + _CHAR to int _CHAR ) ; } return ( int ) l ; }
21029	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_RandomMoveLoc_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
21057	public boolean isSetServerMessageId ( ) { return this . serverMessageId != _NULL ; }
21059	private boolean isTypedTimeFullyLegal ( ) { if ( mIs24HourMode ) { int [ ] values = getEnteredTime ( _NULL ) ; return ( values [ _NUM ] >= _NUM && values [ _NUM ] >= _NUM && values [ _NUM ] < _NUM ) ; } else { return ( mTypedTimes . contains ( getAmOrPmKeyCode ( AM ) ) || mTypedTimes . contains ( getAmOrPmKeyCode ( PM ) ) ) ; } }
21062	public static void showCode ( Instruction inst , cp_info constant_pool [ ] ) { showCode ( inst , _NUM , constant_pool ) ; }
21073	public static MonsterHabitatFragment newInstance ( long mon_id ) { MonsterHabitatFragment fragment = new MonsterHabitatFragment ( ) ; Bundle args = new Bundle ( ) ; args . putLong ( ARG_MONSTER_ID , mon_id ) ; fragment . setArguments ( args ) ; return fragment ; }
21090	@ Override public void connect ( ) { }
21123	public boolean removeTuple ( Tuple t ) { Table table = t . getTable ( ) ; if ( m_sets . contains ( table ) ) { return table . removeTuple ( t ) ; } else { return _BOOL ; } }
21134	public DistributedLogManager createDistributedLogManagerWithSharedClients ( String nameOfLogStream ) throws InvalidStreamNameException , IOException { return createDistributedLogManager ( nameOfLogStream , ClientSharingOption . SharedClients ) ; }
21152	public boolean hasMoreElements ( ) { if ( curindex < length ) return _BOOL ; return _BOOL ; }
21198	private static boolean haveChecked ( String category , String name , boolean createWithProject ) { String key = getCheckKey ( category , name , createWithProject ) ; return ourTemplatesChecked . contains ( key ) ; }
21227	public void put ( String name , Object value ) { name2data . get ( name ) [ _NUM ] = value ; }
21276	@ Override public boolean isCritical ( ) { return _BOOL ; }
21329	public static < T > T checkNotNull ( T reference , @ Nullable String errorMessageTemplate , @ Nullable Object ... errorMessageArgs ) { if ( reference == _NULL ) { throw new NullPointerException ( format ( errorMessageTemplate , errorMessageArgs ) ) ; } return reference ; }
21330	private boolean isAlphaUsedForScale ( ) { return android . os . Build . VERSION . SDK_INT < _NUM ; }
21360	public AdsGetTargetingStatsQuery criteria ( String value ) { return unsafeParam ( _CHAR criteria _CHAR , value ) ; }
21432	private void waitForSearchToEnd ( ) { By loaderLocator = By . xpath ( _CHAR .// div [ @ class =' loading - indicator ' and text ( ) =' Loading content ... ' ] '' ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( CommonExpectedConditions . scopedElementLocatedByNotPresent ( resultsPanel , loaderLocator ) ) ; }
21450	public static VersionNumber parseOperatingSystemVersion ( @ Nonnull final OperatingSystemFamily family , @ Nonnull final String userAgent ) { Check . notNull ( family , _CHAR family _CHAR ) ; Check . notNull ( userAgent , _CHAR userAgent _CHAR ) ; return VersionParser . parseOperatingSystemVersion ( family , userAgent ) ; }
21540	public static < T > T checkNotNull ( T reference , @ Nullable Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
21609	public WallEditQuery friendsOnly ( Boolean value ) { return unsafeParam ( _CHAR friends_only _CHAR , value ) ; }
21642	public boolean shouldPrerender ( ) { return DeviceClassManager . enablePrerendering ( ) && PrefServiceBridge . getInstance ( ) . canPredictNetworkActions ( ) ; }
21677	public boolean isCritical ( ) { return _BOOL ; }
21691	public InterfaceInvokeExpr newInterfaceInvokeExpr ( Local base , SootMethodRef method , Value ... args ) { return newInterfaceInvokeExpr ( base , method , Arrays . asList ( args ) ) ; }
21719	public boolean isCritical ( ) { return _BOOL ; }
21722	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_INTERVAL_TO_B ( String skilltarget , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillname ) ; }
21750	private void requestInputMethod ( Dialog dialog ) { Window window = dialog . getWindow ( ) ; window . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_STATE_ALWAYS_VISIBLE ) ; }
21776	@ PostConstruct public void init ( ) { listenerContainer = cacheRegistrationService . registerBufferedListenerToTags ( this ) ; }
21937	public boolean hasNext ( ) { if ( prefetch || isSortTempFileCompressionEnabled ) { return this . prefetchRecordsProceesed < this . entryCount ; } return this . numberOfObjectRead < this . entryCount ; }
21974	public ImageSize scaleDown ( int sampleSize ) { return new ImageSize ( width / sampleSize , height / sampleSize ) ; }
21982	public void put ( String name , Object value ) { name2data . get ( name ) [ _NUM ] = value ; }
21999	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DashATK_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
22036	public boolean isCritical ( ) { return _BOOL ; }
22125	private void showCreateEditDialog ( @ Nullable Task task ) { EditTaskDialogFragment fragment = EditTaskDialogFragment . newInstance ( task ) ; fragment . show ( getSupportFragmentManager ( ) , EditTaskDialogFragment . TAG ) ; }
22156	public boolean isSetCurrentMessageId ( ) { return this . currentMessageId != _NULL ; }
22201	public boolean isCritical ( ) { return _BOOL ; }
22229	public ContextVarNode makeContextVarNode ( Object baseValue , Type baseType , Context context , SootMethod method ) { LocalVarNode base = makeLocalVarNode ( baseValue , baseType , method ) ; return makeContextVarNode ( base , context ) ; }
22278	public ReadModifiers add ( ReadModifiers modifiers ) { return createIfNeeded ( super . add ( modifiers ) ) ; }
22303	public static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
22318	public boolean isCritical ( ) { return _BOOL ; }
22353	public final boolean canGetDate ( String field ) { return m_table . canGetDate ( field ) ; }
22376	public boolean isCritical ( ) { return _BOOL ; }
22406	public void addHP ( int delta ) { if ( stats . setHp ( stats . getHp ( ) + delta , this ) ) { updateSingleStat ( MapleStat . HP , stats . getHp ( ) ) ; } }
22443	public static boolean instanceOf ( Class < ? > objectClass , Object typeObject ) { Class < ? > typeClass = typeObject . getClass ( ) ; return instanceOf ( objectClass , typeClass ) ; }
22497	public boolean isSetMessage ( ) { return this . message != _NULL ; }
22546	public static boolean instanceOf ( Object obj , String typeName , ClassLoader loader ) { Class < ? > infoClass = loadInfoClass ( typeName , loader ) ; if ( infoClass == _NULL ) { throw new IllegalArgumentException ( _CHAR Illegal type found in info map ( could not load class for specified type ) '' ) ; } return instanceOf ( obj , infoClass ) ; }
22571	public boolean isCritical ( ) { return _BOOL ; }
22574	public boolean isCritical ( ) { return _BOOL ; }
22620	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
22627	public boolean isCritical ( ) { return _BOOL ; }
22636	public boolean isCritical ( ) { return _BOOL ; }
22750	public boolean isCritical ( ) { return _BOOL ; }
22751	public static void appendContentPrefix ( HttpServletRequest request , Appendable urlBuffer ) throws IOException { appendContentPrefix ( request , urlBuffer , _NULL ) ; }
22776	public static Integer adjustPort ( Delegator delegator , Integer port ) { if ( port != _NULL && Start . getInstance ( ) . getConfig ( ) . portOffset != _NUM ) { return port + Start . getInstance ( ) . getConfig ( ) . portOffset ; } else { return port ; } }
22808	public char nextClean ( char c ) { char n = nextClean ( ) ; if ( n != c ) { throw syntaxError ( _CHAR Expected _CHAR_CHAR_CHAR and instead saw _CHAR_CHAR_CHAR _CHAR ) ; } return n ; }
22892	public boolean isSetSpanId ( ) { return this . spanId != _NULL ; }
22944	public ImageSize scaleDown ( int sampleSize ) { return new ImageSize ( width / sampleSize , height / sampleSize ) ; }
22979	public static float calculateWidth ( float top , float bottom , float targetAspectRatio ) { final float height = bottom - top ; final float width = targetAspectRatio * height ; return width ; }
22987	public static _Fields findByThriftIdOrThrow ( int fieldId ) { _Fields fields = findByThriftId ( fieldId ) ; if ( fields == _NULL ) throw new IllegalArgumentException ( _CHAR Field _CHAR + fieldId + _CHAR does n _CHAR_CHAR ) ; return fields ; }
22998	public boolean isCritical ( ) { return _BOOL ; }
23095	private void cancelRepeatingAlarm ( ) { Intent requestIntent = createRegisterRequestIntent ( this ) ; PendingIntent pendingIntent = PendingIntent . getService ( this , _NUM , requestIntent , PendingIntent . FLAG_NO_CREATE ) ; if ( pendingIntent != _NULL ) { AlarmManager am = ( AlarmManager ) getSystemService ( Context . ALARM_SERVICE ) ; am . cancel ( pendingIntent ) ; pendingIntent . cancel ( ) ; } }
23102	public PlacesAddQuery city ( Integer value ) { return unsafeParam ( _CHAR city _CHAR , value ) ; }
23124	public static RxJavaCallAdapterFactory create ( ) { return new RxJavaCallAdapterFactory ( _NULL ) ; }
23133	public boolean isCritical ( ) { return _BOOL ; }
23173	public final boolean add ( Node n ) { if ( pag . getTypeManager ( ) . castNeverFails ( n . getType ( ) , type ) ) { return fastAdd ( n ) ; } return _BOOL ; }
23182	protected void handleRestricted ( File directory , int depth , Collection < T > results ) throws IOException { }
23219	public boolean isCritical ( ) { return _BOOL ; }
23245	public boolean hasCategoryCombo ( ) { return categoryCombo != _NULL && ! DataElementCategoryCombo . DEFAULT_CATEGORY_COMBO_NAME . equals ( categoryCombo . getName ( ) ) ; }
23256	public boolean isCritical ( ) { return _BOOL ; }
23271	public boolean addAll ( int [ ] array ) { boolean changed = _BOOL ; for ( int i = array . length ; i -- > _NUM ; ) { if ( add ( array [ i ] ) ) { changed = _BOOL ; } } return changed ; }
23348	public void destroySelf ( ) { if ( mPager == _NULL || mPager . getAdapter ( ) == _NULL ) { return ; } InfinitePagerAdapter wrapper = ( InfinitePagerAdapter ) mPager . getAdapter ( ) ; PagerAdapter adapter = wrapper . getRealAdapter ( ) ; if ( adapter != _NULL ) { adapter . unregisterDataSetObserver ( dataChangeObserver ) ; } removeAllViews ( ) ; }
23442	public boolean isCritical ( ) { return _BOOL ; }
23448	public Histogram histogram ( ) { return hist ; }
23449	public static < T > T checkNotNull ( T reference , @ Nullable Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
23496	public boolean isCritical ( ) { return _BOOL ; }
23500	public boolean isCritical ( ) { return _BOOL ; }
23504	public static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
23662	public Builder withSortField ( RangeRequest . SortTarget field ) { this . sortTarget = field ; return this ; }
23678	public boolean isCritical ( ) { return _BOOL ; }
23706	public boolean isCritical ( ) { return _BOOL ; }
23712	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
23769	public void registerContext ( Appendable writer , Map < String , Object > context ) throws IOException { registerScreenRenderer ( writer , context ) ; }
23813	protected boolean matchesSequence ( TokenKind ... kinds ) { PsiBuilder . Marker marker = builder . mark ( ) ; for ( TokenKind kind : kinds ) { if ( ! matches ( kind ) ) { marker . rollbackTo ( ) ; return _BOOL ; } } marker . drop ( ) ; return _BOOL ; }
23832	private static List < Path > file_listing_ ( Path dir ) throws IOException { try ( Stream < Path > files = Files . list ( dir ) ) { return files . collect ( Collectors . toList ( ) ) ; } }
23888	public boolean print_debug ( ) { return soot . PhaseOptions . getBoolean ( options , _CHAR print - debug _CHAR ) ; }
23984	public InterfaceInvokeExpr newInterfaceInvokeExpr ( Local base , SootMethodRef method , List < ? extends Value > args ) { return new JInterfaceInvokeExpr ( base , method , args ) ; }
24001	public void showError ( Drawable errorImageDrawable , String errorTextTitle , String errorTextContent , String errorButtonText , OnClickListener onClickListener ) { switchState ( ERROR , errorImageDrawable , errorTextTitle , errorTextContent , errorButtonText , onClickListener , Collections . < Integer > emptyList ( ) ) ; }
24034	public void addEvidence ( DocumentNGramGraph dDoc , String sFinalCategory ) { addEvidence ( new Decision ( dDoc , sFinalCategory , _NUM . _NUM , new HashMap ( _NUM ) ) , sFinalCategory ) ; }
24035	public boolean isSetServiceName ( ) { return this . serviceName != _NULL ; }
24064	public static synchronized List < Proxy > noProxyList ( ) { if ( noProxyList == _NULL ) { ArrayList < Proxy > list = new ArrayList < Proxy > ( _NUM ) ; list . add ( Proxy . NO_PROXY ) ; noProxyList = Collections . unmodifiableList ( list ) ; } return noProxyList ; }
24121	protected boolean matchesAnyOf ( Set < TokenKind > kinds ) { if ( kinds . contains ( currentToken ( ) ) ) { builder . advanceLexer ( ) ; return _BOOL ; } return _BOOL ; }
24200	private boolean isTypedTimeFullyLegal ( ) { if ( mIs24HourView ) { int [ ] values = getEnteredTime ( _NULL ) ; return ( values [ _NUM ] >= _NUM && values [ _NUM ] >= _NUM && values [ _NUM ] < _NUM ) ; } else { return ( mTypedTimes . contains ( getAmOrPmKeyCode ( AM ) ) || mTypedTimes . contains ( getAmOrPmKeyCode ( PM ) ) ) ; } }
24207	public boolean isStatic ( ) { return this . mass . isInfinite ( ) && this . velocity . isZero ( ) && Math . abs ( this . angularVelocity ) <= Epsilon . E ; }
24240	public boolean isCritical ( ) { return _BOOL ; }
24251	public WallSearchQueryWithExtended ownerId ( Integer value ) { return unsafeParam ( _CHAR owner_id _CHAR , value ) ; }
24290	public PointsToSet reachingObjectsOfArrayElement ( PointsToSet s ) { return FullObjectSet . v ( ) ; }
24327	public void makeCurrentReadFrom ( EglSurfaceBase readSurface ) { eglCore . makeCurrent ( eGLSurface , readSurface . eGLSurface ) ; }
24379	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Bind_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
24400	public boolean equalTo ( Highlight h ) { if ( h == _NULL ) return _BOOL ; else { return ( this . mDataSetIndex == h . mDataSetIndex && this . mXIndex == h . mXIndex && this . mStackIndex == h . mStackIndex ) ; } }
24413	public static void replaceSystemOut ( ) { final ThreadPrintStream threadStdOut = new ThreadPrintStream ( ) ; System . setOut ( threadStdOut ) ; System . setErr ( threadStdOut ) ; threadStdOut . setThreadOut ( stdout ) ; }
24417	public static DeviceClassNameResponse createTransferDeviceName ( String name ) { return new DeviceClassNameResponseImpl ( name ) ; }
24440	public MapConfigurer useLocalCache ( ) { if ( localCacheSupport == _NULL ) { localCacheSupport = new LocalCacheSupport ( ) ; } return this ; }
24523	public static boolean hasLollipop ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ; }
24563	protected boolean checkReversedObjectInRange ( VisibleObject newObject ) { return _BOOL ; }
24614	public boolean isCritical ( ) { return _BOOL ; }
24626	public String loadDocumentDatelineToString ( String sDocID ) { return loadDocumentElement ( sDocID , DATELINE_TAG ) ; }
24701	public static void disableLogging ( ) { DISABLED = _BOOL ; }
24708	public boolean isCritical ( ) { return _BOOL ; }
24750	public static StorableHeadphoneFence during ( int state ) { return new StorableHeadphoneFence ( STATE , state ) ; }
24757	public boolean isCritical ( ) { return _BOOL ; }
24790	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
24797	private static void markChecked ( File templateFile , boolean createWithProject ) { markChecked ( templateFile . getParentFile ( ) . getName ( ) , templateFile . getName ( ) , createWithProject ) ; }
24854	public void notifyObserversNow ( ) { Log_OC . d ( TAG , _CHAR notifyObserversNow _CHAR ) ; setChanged ( ) ; notifyObservers ( ) ; }
24879	public boolean isCritical ( ) { return _BOOL ; }
24959	public boolean isCritical ( ) { return _BOOL ; }
24968	public static SM_SYSTEM_MESSAGE STR_QUEST_GET_REWARD_ERROR_NO_QUEST_ITEM_SINGLE ( String value0 , String value0s ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value0s ) ; }
25018	public boolean contains ( double p ) { if ( p == - S2 . M_PI ) { p = S2 . M_PI ; } return fastContains ( p ) ; }
25056	public static DirectCallExecutor newExecutor ( ) { return NEVER_PAUSING_EXECUTOR ; }
25094	public StaticScript routing ( Object routing ) { this . routing = routing ; return this ; }
25120	void replacingNode ( NodeImpl node ) { }
25125	public Object clone ( ) { byte [ ] newData = new byte [ length ] ; System . arraycopy ( data , _NUM , newData , _NUM , newData . length ) ; MetaMessage event = new MetaMessage ( newData ) ; return event ; }
25150	public boolean isExtended ( ) { return extended ; }
25177	private void saveFile ( ) throws FileNotFoundException { PrintStream psStream = new PrintStream ( new FileOutputStream ( clusterConfigFile ) ) ; JSpaceUtilities . domWriter ( m_rootDoc . getDocumentElement ( ) , psStream , _CHAR _CHAR ) ; psStream . close ( ) ; }
25239	private static boolean isInVerticalTargetZone ( float x , float y , float handleX , float handleYStart , float handleYEnd , float targetRadius ) { return ( Math . abs ( x - handleX ) <= targetRadius && y > handleYStart && y < handleYEnd ) ; }
25243	public static StorableTimeFence inFridayInterval ( TimeZone timeZone , long startTimeOfDayMillis , long stopTimeOfDayMillis ) { return new StorableTimeFence ( FRIDAY , timeZone , startTimeOfDayMillis , stopTimeOfDayMillis ) ; }
25275	protected FriendsGetRequestsQueryWithNeedMutual needMutual ( Boolean value ) { return unsafeParam ( _CHAR need_mutual _CHAR , value ) ; }
25294	public void addHeader ( String header , String value ) { clientHeaderMap . put ( header , value ) ; }
25305	public boolean isCritical ( ) { return _BOOL ; }
25349	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
25368	public void prepareStatement ( String sql , boolean specifyTypeAndConcur , int resultSetType , int resultSetConcurrency ) throws GenericDataSourceException , GenericEntityException { this . prepareStatement ( sql , specifyTypeAndConcur , resultSetType , resultSetConcurrency , - _NUM , - _NUM ) ; }
25376	public boolean isCritical ( ) { return _BOOL ; }
25379	public static _Fields findByThriftIdOrThrow ( int fieldId ) { _Fields fields = findByThriftId ( fieldId ) ; if ( fields == _NULL ) throw new IllegalArgumentException ( _CHAR Field _CHAR + fieldId + _CHAR does n _CHAR_CHAR ) ; return fields ; }
25396	public boolean isSetRootMessageId ( ) { return this . rootMessageId != _NULL ; }
25428	public static TopUserFragment newInstance ( ) { TopUserFragment fragment = new TopUserFragment ( ) ; Bundle args = new Bundle ( ) ; fragment . setArguments ( args ) ; return fragment ; }
25433	public Map < String , List < Pair < SequenceUUID , Integer >> > guessAlternatives ( String mainLang ) { List < SoundfieldGroupInfo > stereo = findInputForChannelGroup ( STEREO_LAYOUT ) ; return stereo . stream ( ) . filter ( _NULL ) . filter ( _NULL ) . collect ( Collectors . toMap ( _NULL , _NULL ) ) ; }
25454	public Vector2f normalizeLocal ( ) { float length = length ( ) ; if ( length != _NUM ) { return divideLocal ( length ) ; } return divideLocal ( _NUM ) ; }
25493	public PlacesGetCheckinsQuery count ( Integer value ) { return unsafeParam ( _CHAR count _CHAR , value ) ; }
25499	public void showError ( Drawable errorImageDrawable , String errorTextTitle , String errorTextContent , String errorButtonText , OnClickListener onClickListener ) { switchState ( ERROR , errorImageDrawable , errorTextTitle , errorTextContent , errorButtonText , onClickListener , Collections . < Integer > emptyList ( ) ) ; }
25503	public boolean isCritical ( ) { return _BOOL ; }
25531	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HostileUp_A_TO_ME ( String skillcaster , String value0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , value0 , skillname ) ; }
25534	public GroupsEditQuery marketComments ( Boolean value ) { return unsafeParam ( _CHAR market_comments _CHAR , value ) ; }
25579	public static boolean isValidIP6Range ( String possibleIPAddress ) { return IP6_SUB_PATTERN . matcher ( possibleIPAddress ) . matches ( ) ; }
25602	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CloseAerial_A_TO_SELF ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
25612	public boolean removeByObject ( T obj ) { return removeByObject_impl ( obj ) ; }
25631	public boolean isSetMessageType ( ) { return __isset_bit_vector . get ( __MESSAGETYPE_ISSET_ID ) ; }
25675	@ Override public ValueExpression resolveVariable ( String variable ) { Object obj = UelUtil . resolveVariable ( variable , this . elContext . variables , _NULL ) ; if ( obj != _NULL ) { return new BasicValueExpression ( variable , this . elContext ) ; } return _NULL ; }
25710	public static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
25739	public static PrettyPrint indentWithSpaces ( int number ) { if ( number < _NUM ) { throw new IllegalArgumentException ( _CHAR number is negative _CHAR ) ; } char [ ] chars = new char [ number ] ; Arrays . fill ( chars , _CHAR ) ; return new PrettyPrint ( chars ) ; }
25741	public boolean has ( String memberName ) { return members . containsKey ( memberName ) ; }
25785	public boolean isCritical ( ) { return _BOOL ; }
25810	public boolean isSetClientIp ( ) { return this . clientIp != _NULL ; }
25923	public static boolean hasValueDeadbandTypeChanged ( final ISourceDataTag sourceDataTag , final ISourceDataTag oldSourceDataTag ) { return sourceDataTag . getValueDeadbandType ( ) != oldSourceDataTag . getValueDeadbandType ( ) ; }
25941	public SootClass loadClassAndSupport ( String className ) { SootClass ret = loadClass ( className , SootClass . SIGNATURES ) ; if ( ! ret . isPhantom ( ) ) ret = loadClass ( className , SootClass . BODIES ) ; return ret ; }
25997	public boolean isCritical ( ) { return _BOOL ; }
26013	public boolean isFullyZoomedOutX ( ) { return ! ( mScaleX > mMinScaleX || mMinScaleX > _NUM ) ; }
26063	private static boolean isInVerticalTargetZone ( float x , float y , float handleX , float handleYStart , float handleYEnd , float targetRadius ) { return Math . abs ( x - handleX ) <= targetRadius && y > handleYStart && y < handleYEnd ; }
26088	public boolean isCritical ( ) { return _BOOL ; }
26154	public String loadDocumentDatelineToString ( String sDocID ) { return loadDocumentElement ( sDocID , DATELINE_TAG ) ; }
26162	private Properties removeRedundantProperties ( Properties props ) { if ( props == _NULL ) { return _NULL ; } Properties clonedProps = ( Properties ) props . clone ( ) ; clonedProps . remove ( XPathProperties . CONTAINER_JNDI_URL ) ; return clonedProps ; }
26193	public static SM_SYSTEM_MESSAGE STR_MSG_REPAIR_ABYSS_DOOR ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
26202	public static VersionNumber parseVersion ( @ Nonnull final String version ) { return VersionParser . parseVersion ( Check . notNull ( version , _CHAR version _CHAR ) ) ; }
26206	public static _Fields findByThriftIdOrThrow ( int fieldId ) { _Fields fields = findByThriftId ( fieldId ) ; if ( fields == _NULL ) throw new IllegalArgumentException ( _CHAR Field _CHAR + fieldId + _CHAR does n _CHAR_CHAR ) ; return fields ; }
26216	public void handle ( Context context , String input , String lastToken , SuggestionValue suggestionValue ) { if ( nextHandler != _NULL ) { nextHandler . handle ( context , input , lastToken , suggestionValue ) ; } }
26263	public void requestDeleteAllReturnRoutes ( int nodeId ) { enqueue ( new DeleteReturnRouteMessageClass ( ) . doRequest ( nodeId ) ) ; }
26278	public boolean isSetResponseInfo ( ) { return this . responseInfo != _NULL ; }
26302	protected void updateVisualsForTabModel ( boolean isIncognito ) { }
26396	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SkillATK_Instant_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
26397	default String resourceRole ( String resourceId ) { return _CHAR has - _CHAR + resourceId + _CHAR - value _CHAR ; }
26466	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
26535	public static SM_SYSTEM_MESSAGE STR_GET_EXP_VITAL_BONUS ( String value0 , long num1 , long num2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 , num2 ) ; }
26560	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Disease_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
26628	public boolean isCritical ( ) { return _BOOL ; }
26647	private boolean inverted ( ) { return ( mClosestDataSetToTouch == _NULL && mChart . isAnyAxisInverted ( ) ) || ( mClosestDataSetToTouch != _NULL && mChart . isInverted ( mClosestDataSetToTouch . getAxisDependency ( ) ) ) ; }
26702	public final TestSubscriber < T > requestedFusionMode ( int requestMode ) { this . requestedFusionMode = requestMode ; return this ; }
26716	static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
26733	public boolean isCritical ( ) { return _BOOL ; }
26752	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Silence_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
26777	public static String readPemStringFromFile ( File file ) { try { byte [ ] fileContents = FileUtils . readFileToByteArray ( file ) ; return new String ( fileContents , Charset . forName ( _CHAR US - ASCII _CHAR ) ) ; } catch ( IOException e ) { throw new ImportException ( _CHAR Unable to read PEM - encoded data from file : _CHAR + file . getName ( ) ) ; } }
26832	public boolean isCritical ( ) { return _BOOL ; }
26853	public static SM_SYSTEM_MESSAGE STR_FREE_EXPERIENCE_CHARACTER_CANT_USE_VENDOR ( String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 ) ; }
26872	public boolean isCritical ( ) { return _BOOL ; }
26879	public static SM_SYSTEM_MESSAGE STR_QUEST_GET_REWARD_ERROR_NO_QUEST_ITEM_MULTIPLE ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
26889	public final static String base64Encode ( String str ) { if ( str == _NULL ) { return _NULL ; } return new String ( base64Encode ( str . getBytes ( ) ) ) ; }
26936	private void findClusterAndLaunchBulk ( ) { Thread clusterFinder = new Thread ( _NULL , _CHAR C2MON - ES - Module - Cluster - Health - Check _CHAR ) ; log . info ( _CHAR init ( ) - Trying to connect to Elasticsearch cluster { } on host = { } , port = { } _CHAR , cluster , host , port ) ; clusterFinder . start ( ) ; }
26945	public boolean isCritical ( ) { return _BOOL ; }
26961	public synchronized boolean holdsLock ( String tableName , long transNum , LockType lockType ) { return this . databaseLocked && this . databaseTransactionOwner == transNum ; }
27039	public boolean isCritical ( ) { return _BOOL ; }
27056	public EmailBuilder cc ( List < String > ccAddresses ) { this . cc . addAll ( ccAddresses ) ; return this ; }
27070	public void addHeader ( String header , String value ) { clientHeaderMap . put ( header , value ) ; }
27082	public void update ( LineEvent event ) { if ( event . getType ( ) . equals ( LineEvent . Type . OPEN ) ) { synchronized ( openLock ) { openLock . notifyAll ( ) ; } } }
27098	public boolean isCritical ( ) { return _BOOL ; }
27154	public boolean isCritical ( ) { return _BOOL ; }
27165	public boolean isCritical ( ) { return _BOOL ; }
27205	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CloseAerial_A_TO_ME ( String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skillcaster , skillname ) ; }
27247	public boolean isCritical ( ) { return _BOOL ; }
27309	public ContextVarNode makeContextVarNode ( LocalVarNode base , Context context ) { ContextVarNode ret = base . context ( context ) ; if ( ret == _NULL ) { ret = new ContextVarNode ( this , base , context ) ; addNodeTag ( ret , base . getMethod ( ) ) ; } return ret ; }
27342	@ Override public void onTxCommit ( Transaction tx ) { if ( ! tx . isReadOnly ( ) && enableLogging ) { LogSeqNum lsn = new CommitRecord ( txNum ) . writeToLog ( ) ; VanillaDb . logMgr ( ) . flush ( lsn ) ; } }
27436	public synchronized void resetBookInfoList ( ) { bookInfoList = _NULL ; }
27440	@ Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( PokestopsEvent event ) { setPokestopsMarkers ( event ) ; }
27470	public boolean isCritical ( ) { return _BOOL ; }
27579	public boolean isCritical ( ) { return _BOOL ; }
27584	public boolean hasSingleExit ( ) { return getLoopExits ( ) . size ( ) == _NUM ; }
27604	public void flushChanges ( ) { for ( GradleEditorEntityTable table : myTablesByGroupName . values ( ) ) { if ( table . isEditing ( ) ) { table . getCellEditor ( ) . stopCellEditing ( ) ; } } }
27633	public boolean isCritical ( ) { return _BOOL ; }
27644	protected void recordConnectionResult ( final int resultCode ) { RecordHistogram . recordSparseSlowlyHistogram ( CONNECTION_RESULT_HISTOGRAM_NAME , resultCode ) ; }
27666	public static SM_SYSTEM_MESSAGE STR_MSG_QUEST_LIMIT_START_WEEK ( String value1 , String value0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value1 , value0 ) ; }
27793	public WallReportPostQuery reportPost ( UserActor actor , int ownerId , int postId ) { return new WallReportPostQuery ( getClient ( ) , actor , ownerId , postId ) ; }
27809	public boolean isCritical ( ) { return _BOOL ; }
27875	@ Override public boolean equals ( Object other ) { if ( this == other ) return _BOOL ; if ( ! ( other instanceof ServerTransaction ) ) return _BOOL ; ServerTransaction t = ( ServerTransaction ) other ; return ( id == t . id && mgr . equals ( t . mgr ) ) ; }
27876	private static void markChecked ( String category , String name , boolean createWithProject ) { String key = getCheckKey ( category , name , createWithProject ) ; ourTemplatesChecked . add ( key ) ; }
27899	public static < T > T checkNotNull ( T reference , Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
27906	public String providePath ( ) { return _CHAR / blockcanary / _CHAR ; }
27965	public static void clearColumnDictionaryCache ( Map < String , Dictionary > columnToDictionaryMap ) { for ( Map . Entry < String , Dictionary > entry : columnToDictionaryMap . entrySet ( ) ) { CarbonUtil . clearDictionaryCache ( entry . getValue ( ) ) ; } }
27999	public static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
28012	public boolean isCritical ( ) { return _BOOL ; }
28017	public RecognitionRequest addTagForSelectClasses ( String tag ) { selectClasses . add ( tag ) ; return this ; }
28050	public void clear ( ) { cache . invalidateAllData ( ) ; }
28116	public static String [ ] toStringArray ( Collection < String > collection ) { if ( collection == _NULL ) { return _NULL ; } return collection . toArray ( new String [ collection . size ( ) ] ) ; }
28124	private void startDrawFragment ( ) { changeToFragment ( DrawFragment . newInstance ( imageUri ) ) ; }
28163	public boolean isCritical ( ) { return _BOOL ; }
28172	public DummyReference withTimestamp ( Instant newTimestamp ) { return new DummyReference ( this . reference , this . message , this . author , this . changesBase , newTimestamp ) ; }
28220	public boolean isCritical ( ) { return _BOOL ; }
28270	@ Override public boolean equals ( Object o ) { if ( this == o ) return _BOOL ; if ( o instanceof TxnMgrProxy ) { TxnMgrProxy other = ( TxnMgrProxy ) o ; return proxyID . getLeastSignificantBits ( ) == other . proxyID . getLeastSignificantBits ( ) && proxyID . getMostSignificantBits ( ) == other . proxyID . getMostSignificantBits ( ) ; } else return _BOOL ; }
28285	public boolean isCritical ( ) { return _BOOL ; }
28539	public boolean isCritical ( ) { return _BOOL ; }
28594	public boolean isCritical ( ) { return _BOOL ; }
28607	public static LocationHabitatFragment newInstance ( long loc_id ) { LocationHabitatFragment fragment = new LocationHabitatFragment ( ) ; Bundle args = new Bundle ( ) ; args . putLong ( ARG_LOCATION_ID , loc_id ) ; fragment . setArguments ( args ) ; return fragment ; }
28645	public boolean isCritical ( ) { return _BOOL ; }
28662	public boolean isCritical ( ) { return _BOOL ; }
28705	public boolean isSame ( ModelSubMenu subMenu ) { return ( this == subMenu ) ; }
28721	public static < T > T checkNotNull ( T reference , @ Nullable String errorMessageTemplate , @ Nullable Object ... errorMessageArgs ) { if ( reference == _NULL ) { throw new NullPointerException ( format ( errorMessageTemplate , errorMessageArgs ) ) ; } return reference ; }
28727	static < T > AnyVal < Object > anyHeadAnyTail ( AnyVal < T > head , AnyVal < ? extends List < ? extends T >> tail ) { return new AnyConsImpl ( _NULL , head , _NULL , tail ) ; }
28739	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATKDrain_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
28763	public boolean isAxisMinCustom ( ) { return mCustomAxisMin ; }
28788	public static boolean isValidIP4Range ( String possibleIPAddress ) { return IP_SUB_PATTERN . matcher ( possibleIPAddress ) . matches ( ) ; }
28876	public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_DUNGEON_WITH_DIFFICULTY_OPENED ( String worldname1 , String value2 , int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , worldname1 , value2 , num0 ) ; }
28967	public static boolean dataValueIsZeroAndInsignificant ( String value , DataElement dataElement ) { AggregationType aggregationType = dataElement . getAggregationType ( ) ; return dataElement . getValueType ( ) . isNumeric ( ) && MathUtils . isZero ( value ) && ! dataElement . isZeroIsSignificant ( ) && ! ( aggregationType == AggregationType . AVERAGE_SUM_ORG_UNIT || aggregationType == AggregationType . AVERAGE ) ; }
28968	private boolean peekRead ( int expected ) throws CompileException , IOException { if ( this . peek ( ) == expected ) { if ( this . nextChar != - _NUM ) this . sb . append ( ( char ) this . nextChar ) ; this . nextChar = this . nextButOneChar ; this . nextButOneChar =- _NUM ; return _BOOL ; } return _BOOL ; }
28974	protected boolean matchesAnyOf ( TokenKind ... kinds ) { TokenKind current = currentToken ( ) ; for ( TokenKind kind : kinds ) { if ( kind == current ) { builder . advanceLexer ( ) ; return _BOOL ; } } return _BOOL ; }
28993	public long estimateMaxCapacity ( ResourceQuota defaultQuota ) { return calculateBrokerMaxCapacity ( this . systemResourceUsage , defaultQuota ) ; }
29036	public boolean isCritical ( ) { return _BOOL ; }
29050	public static boolean removeFromCache ( String imageUri , DiskCache diskCache ) { File image = diskCache . get ( imageUri ) ; return image != _NULL && image . exists ( ) && image . delete ( ) ; }
29082	static boolean lessThanUnsigned ( long x1 , long x2 ) { return ( x1 + Long . MIN_VALUE ) < ( x2 + Long . MIN_VALUE ) ; }
29165	public boolean isCritical ( ) { return _BOOL ; }
29167	void insertingNode ( NodeImpl node , boolean replace ) { }
29173	public void showError ( Drawable errorImageDrawable , String errorTextContent , String errorButtonText , OnClickListener onClickListener , List < Integer > skipIds ) { switchState ( ERROR , errorImageDrawable , errorTextContent , errorButtonText , onClickListener , skipIds ) ; }
29183	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCDeBuffPhysical_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
29228	public boolean isCritical ( ) { return _BOOL ; }
29242	public SiteAdminPage activatePage ( String title ) { grid . activatePage ( title ) ; waitForPageActivationStatus ( title , ActivationStatus . ACTIVATED ) ; return this ; }
29247	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Poison_INTERVAL_TO_B ( String skilltarget , int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , num0 , skillname ) ; }
29251	public boolean isCritical ( ) { return _BOOL ; }
29256	public boolean isCritical ( ) { return _BOOL ; }
29317	public boolean isCritical ( ) { return _BOOL ; }
29329	public boolean isCritical ( ) { return _BOOL ; }
29350	public boolean sendTCPString ( String message ) { byte [ ] bytes = message . getBytes ( ) ; return sendTCPBytes ( bytes ) ; }
29389	public static StorableTimeFence inWednesdayInterval ( TimeZone timeZone , long startTimeOfDayMillis , long stopTimeOfDayMillis ) { return new StorableTimeFence ( WEDNESDAY , timeZone , startTimeOfDayMillis , stopTimeOfDayMillis ) ; }
29458	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DeathBlow_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
29527	public static boolean before ( GenericRecord first , GenericRecord second , String timestampFieldName ) { return compareTimestamp ( first , second , timestampFieldName ) == - _NUM ; }
29588	public static boolean isStateCode ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return ( ( USStateCodes . indexOf ( s ) != - _NUM ) && ( s . indexOf ( USStateCodeDelimiter ) == - _NUM ) ) ; }
29601	public boolean isDrawBarShadowEnabled ( ) { return mDrawBarShadow ; }
29657	public boolean isCritical ( ) { return _BOOL ; }
29777	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CloseAerial_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
29850	public static float calculateHeight ( float width , float targetAspectRatio ) { return width / targetAspectRatio ; }
29985	public SpecialInvokeExpr newSpecialInvokeExpr ( Local base , SootMethodRef method , List < ? extends Value > args ) { return new JSpecialInvokeExpr ( base , method , args ) ; }
30006	public static void deleteFile ( final File file , final boolean deleteDir ) { if ( file . isDirectory ( ) ) { for ( final File subFile : file . listFiles ( ) ) { deleteFile ( subFile , _BOOL ) ; } if ( deleteDir ) { file . delete ( ) ; } } else { file . delete ( ) ; } }
30020	public void addEvidence ( DocumentNGramGraph dDoc , String sFinalCategory ) { addEvidence ( new Decision ( dDoc , sFinalCategory , _NUM . _NUM , new HashMap ( _NUM ) ) , sFinalCategory ) ; }
30058	public boolean isSetRequestInfo ( ) { return this . requestInfo != _NULL ; }
30076	public static byte [ ] readFileToByteArray ( File file ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toByteArray ( in , file . length ( ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
30099	public String [ ] readAllLines ( ) { ArrayList < String > lines = new ArrayList < String > ( ) ; while ( hasNextLine ( ) ) { lines . add ( readLine ( ) ) ; } return lines . toArray ( new String [ _NUM ] ) ; }
30152	public boolean isCritical ( ) { return _BOOL ; }
30160	public VirtualInvokeExpr newVirtualInvokeExpr ( Local base , SootMethodRef method , List args ) { return new GVirtualInvokeExpr ( base , method , args ) ; }
30178	public final void detach ( ) { if ( isAttachedToRecycler ) { isAttachedToRecycler = _BOOL ; recyclerWantsTouch = _BOOL ; recyclerView . reset ( ) ; recyclerView = _NULL ; layoutManager = _NULL ; } }
30184	public static ZooKeeperClientBuilder newBuilder ( DistributedLogConfiguration conf ) { return ZooKeeperClientBuilder . newBuilder ( ) . retryPolicy ( RetryPolicyUtils . DEFAULT_INFINITE_RETRY_POLICY ) . sessionTimeoutMs ( conf . getZKSessionTimeoutMilliseconds ( ) ) . zkAclId ( conf . getZkAclId ( ) ) . retryThreadCount ( conf . getZKClientNumberRetryThreads ( ) ) . requestRateLimit ( conf . getZKRequestRateLimit ( ) ) . statsLogger ( NullStatsLogger . INSTANCE ) ; }
30209	public void sendResumeEvent ( PluginResult resumeEvent ) { synchronized ( messageChannelLock ) { if ( messageChannel != _NULL ) { sendEventMessage ( resumeEvent ) ; } else { this . pendingResume = resumeEvent ; } } }
30323	public final String readAsciiString ( final int n ) { final char ret [ ] = new char [ n ] ; for ( int x = _NUM ; x < n ; x ++ ) { ret [ x ] = ( char ) readByte ( ) ; } return new String ( ret ) ; }
30329	@ Override public XSModel toXSModel ( ) { return new XSModelImpl ( new SchemaGrammar [ ] { this } ) ; }
30373	T cycle ( ) { if ( _prioritize != _NULL ) { return _prioritize ; } if ( ! _queue . isEmpty ( ) ) { T first = _queue . keySet ( ) . iterator ( ) . next ( ) ; _queue . get ( first ) ; return first ; } return _NULL ; }
30382	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_ME_TO_B ( String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillname ) ; }
30399	public boolean isCritical ( ) { return _BOOL ; }
30409	public static boolean removeFromCache ( String imageUri , DiskCache diskCache ) { File image = diskCache . get ( imageUri ) ; return image != _NULL && image . exists ( ) && image . delete ( ) ; }
30432	private void startPeerSync ( String peer , int port ) { boolean isDone = _BOOL ; localRedisConnect ( ) ; while ( ! isDone ) { try { isDone = ( this . localJedis . slaveof ( peer , port ) != _NULL ) ; sleeper . sleepQuietly ( _NUM ) ; } catch ( Exception e ) { localRedisConnect ( ) ; } } }
30435	public static String mrpa2sampa ( String voicePhoneme ) { if ( mrpa2sampa . containsKey ( voicePhoneme ) ) return mrpa2sampa . get ( voicePhoneme ) ; else return voicePhoneme ; }
30489	public boolean isCritical ( ) { return _BOOL ; }
30499	public boolean isCritical ( ) { return _BOOL ; }
30611	public static float parseFloat ( char [ ] chars , int start , int length ) throws NumberFormatException { return ( float ) parseDouble ( chars , start , length ) ; }
30630	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Shield_PROTECT_A_to_B ( String skilltarget , String skillcaster ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster ) ; }
30640	public int toContentSettingsType ( ) { return mContentSettingsType ; }
30645	private boolean isRequestingSensorEventData ( String nodeId ) { SensorDataRequest request = sensorDataRequests . get ( nodeId ) ; if ( request == _NULL ) { return _BOOL ; } return request . getEndTimestamp ( ) == DataRequest . TIMESTAMP_NOT_SET ; }
30749	private void transferToSpecificBuilderAndReset ( ) { if ( currentTag == Tag . VERSION ) { dataBuilder . setVersion ( buffer . toString ( ) ) ; } addToRobotBuilder ( ) ; addToBrowserBuilder ( ) ; addToOperatingSystemBuilder ( ) ; addToBrowserPatternBuilder ( ) ; addToBrowserTypeBuilder ( ) ; addToBrowserOsMappingBuilder ( ) ; addToOperatingSystemPatternBuilder ( ) ; addToDeviceBuilder ( ) ; addToDevicePatternBuilder ( ) ; buffer = new StringBuilder ( ) ; }
30750	public boolean isSetCallType ( ) { return __isset_bit_vector . get ( __CALLTYPE_ISSET_ID ) ; }
30817	public void simulateMethod ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { String subSignature = method . getSubSignature ( ) ; { defaultMethod ( method , thisVar , returnVar , params ) ; return ; } }
30869	public static SM_SYSTEM_MESSAGE STR_MSG_DICE_CUSTOM_OTHER ( String value0 , int num1 , int num2 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , num1 , num2 ) ; }
30893	public Builder zoomOutTitle ( String zoomOutTitle ) { this . zoomOutTitle = zoomOutTitle ; return this ; }
30974	private void scheduleFixedTasks ( ) { scheduler . scheduleTask ( FileResourceCleanUpTask . KEY_TASK , fileResourceCleanUpTask , Scheduler . CRON_DAILY_2AM ) ; scheduler . scheduleTask ( DataStatisticsTask . KEY_TASK , dataStatisticsTask , Scheduler . CRON_DAILY_2AM ) ; }
30990	public void loadDataStringFromFile ( String sFilename ) { try { Histogram . loadDataStringFromFile ( sFilename ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; Histogram . setDataString ( _CHAR _CHAR ) ; Graph . setDataString ( _CHAR _CHAR ) ; } }
31005	public SpecialInvokeExpr newSpecialInvokeExpr ( Local base , SootMethodRef method , Value ... args ) { return newSpecialInvokeExpr ( base , method , Arrays . asList ( args ) ) ; }
31009	public ChangeModifiers add ( ChangeModifiers modifiers ) { return createIfNeeded ( super . add ( modifiers ) ) ; }
31044	protected void scheduleEdgeProcessing ( PathEdge < N , D > edge ) { if ( executor . isTerminating ( ) ) return ; executor . execute ( new PathEdgeProcessingTask ( edge ) ) ; propagationCount ++ ; }
31060	public static boolean isBackgroundAttribute ( String text ) { return BACKGROUND_ATTRIBUTES . contains ( text ) ; }
31143	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPATK_INTERVAL_TO_ME ( int num0 , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skillname ) ; }
31185	public boolean supportsDelete ( ) { return _BOOL ; }
31225	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stun_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
31239	public Builder stringToCategorical ( String columnName , List < String > stateNames ) { return transform ( new StringToCategoricalTransform ( columnName , stateNames ) ) ; }
31244	@ Override public synchronized void publish ( LogRecord record ) { if ( corruptedOutputStream ) { return ; } if ( sizeRollingPolicy . hasReachedLimit ( ) || timeRollingPolicy . needsRollover ( ) ) { configureOutputStream ( ) ; } super . publish ( record ) ; super . flush ( ) ; }
31347	public boolean isCritical ( ) { return _BOOL ; }
31377	private static boolean isInHorizontalTargetZone ( float x , float y , float handleXStart , float handleXEnd , float handleY , float targetRadius ) { return x > handleXStart && x < handleXEnd && Math . abs ( y - handleY ) <= targetRadius ; }
31386	public boolean removeByObject ( T obj ) { throw new RuntimeException ( _CHAR RwlSegmentedStoredList : : removeByObject not supported _CHAR ) ; }
31412	public void onNewItemsAdded ( int size ) { if ( size < mPageSize ) { setAllItemsLoaded ( _BOOL ) ; hideBottomProgress ( ) ; } }
31523	public ByteVector putByte ( final int b ) { int length = this . length ; if ( length + _NUM > data . length ) { enlarge ( _NUM ) ; } data [ length ++ ] = ( byte ) b ; this . length = length ; return this ; }
31567	public static StorableTimeFence inSundayInterval ( TimeZone timeZone , long startTimeOfDayMillis , long stopTimeOfDayMillis ) { return new StorableTimeFence ( SUNDAY , timeZone , startTimeOfDayMillis , stopTimeOfDayMillis ) ; }
31577	private void recordSimpleResourceEdit ( ) { synchronized ( myLock ) { mySeenLocalResourceChanges = _BOOL ; } }
31622	public boolean resourceInitializationException ( TypeDecl catchType ) { ASTNode $ State state = state ( ) ; try { for ( ResourceDeclaration resource : getResourceList ( ) ) { if ( resource . reachedException ( catchType ) ) return _BOOL ; } return _BOOL ; } finally { } }
31627	public boolean isSetTraceId ( ) { return this . traceId != _NULL ; }
31649	public static StorableTimeFence inSaturdayInterval ( TimeZone timeZone , long startTimeOfDayMillis , long stopTimeOfDayMillis ) { return new StorableTimeFence ( SATURDAY , timeZone , startTimeOfDayMillis , stopTimeOfDayMillis ) ; }
31668	public boolean isCritical ( ) { return _BOOL ; }
31679	public static < T > T checkNotNull ( T reference , @ Nullable Object errorMessage ) { if ( reference == _NULL ) { throw new NullPointerException ( String . valueOf ( errorMessage ) ) ; } return reference ; }
31805	public ComponentConfigBuilder add ( String itemType , String label , String value ) { config . add ( new ConfigurationEntry ( currentTab , itemType , label , value ) ) ; return this ; }
31822	public VideoCreateCommentQuery fromGroup ( Boolean value ) { return unsafeParam ( _CHAR from_group _CHAR , value ) ; }
31901	@ CalledByNative public static boolean isIconLargeEnoughForLauncher ( Context context , int width , int height ) { ActivityManager am = ( ActivityManager ) context . getSystemService ( Context . ACTIVITY_SERVICE ) ; final int minimalSize = am . getLauncherLargeIconSize ( ) / _NUM ; return width >= minimalSize && height >= minimalSize ; }
31937	public int read ( byte b [ ] , int off , int len ) throws IOException , LogException { if ( length < len ) badRead ( len ) ; len = in . read ( b , off , len ) ; length -= len ; return len ; }
31966	public boolean isCritical ( ) { return _BOOL ; }
32069	protected AdsGetStatisticsQuery period ( AdsGetStatisticsPeriod value ) { return unsafeParam ( _CHAR period _CHAR , value ) ; }
32074	public boolean isCritical ( ) { return _BOOL ; }
32104	public static void main ( String [ ] args ) { }
32117	public boolean isCritical ( ) { return _BOOL ; }
32120	public boolean isCritical ( ) { return _BOOL ; }
32139	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BackDashATK_ME_TO_B ( int num0 , String skilltarget , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 , skilltarget , skillname ) ; }
32174	public boolean isCritical ( ) { return _BOOL ; }
32177	public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Curse_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
32210	@ VisibleForTesting void registerNewRequest ( long currentTimestamp ) { mCurrentRequest = createRequestData ( currentTimestamp , _NULL ) ; getBackoffScheduler ( ) . resetFailedAttempts ( ) ; mTimestampForNextPostAttempt = currentTimestamp ; mTimestampForNewRequest = currentTimestamp + MS_BETWEEN_REQUESTS ; scheduleRepeatingAlarm ( ) ; saveState ( ) ; }
32223	public boolean isCritical ( ) { return _BOOL ; }
32224	public static boolean updateGradlePluginVersion ( @ NotNull Project project , @ NotNull String pluginVersion , @ Nullable String gradleVersion ) { return updateGradlePluginVersion ( project , pluginVersion , gradleVersion , _BOOL ) ; }
32275	public void showError ( Drawable errorImageDrawable , String errorTextTitle , String errorTextContent , String errorButtonText , OnClickListener onClickListener , List < Integer > skipIds ) { switchState ( ERROR , errorImageDrawable , errorTextTitle , errorTextContent , errorButtonText , onClickListener , skipIds ) ; }
32296	public boolean isCritical ( ) { return _BOOL ; }
32317	public static SM_SYSTEM_MESSAGE STR_CANT_CHANGE_SAME_ITEM_SKIN ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
32330	public void remove ( final String id ) { this . speakers . remove ( id ) ; }
32446	public boolean isCritical ( ) { return _BOOL ; }
32474	public float distance ( Vector2f v ) { return FastMath . sqrt ( distanceSquared ( v ) ) ; }
32541	public PlacesAddQuery country ( Integer value ) { return unsafeParam ( _CHAR country _CHAR , value ) ; }
32546	public static SM_SYSTEM_MESSAGE STR_SKILL_IMMUNED_A_TO_B ( String skilltarget , String skillcaster , String skillname ) { return new SM_SYSTEM_MESSAGE ( _NUM , skilltarget , skillcaster , skillname ) ; }
32571	public static String validateString ( String string ) { if ( string == _NULL ) { return _CHAR _CHAR ; } else { return string ; } }
32623	public StorageGetKeysQuery userId ( Integer value ) { return unsafeParam ( _CHAR user_id _CHAR , value ) ; }
32674	public static SettingsFragment newInstance ( String param1 , String param2 ) { SettingsFragment fragment = new SettingsFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
32737	public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_NATION_PT ( int num0 ) { return new SM_SYSTEM_MESSAGE ( _NUM , num0 ) ; }
32739	public FloatBuffer toFloatBuffer ( boolean columnMajor ) { FloatBuffer fb = BufferUtils . createFloatBuffer ( _NUM ) ; fillFloatBuffer ( fb , columnMajor ) ; fb . rewind ( ) ; return fb ; }
32781	public String providePath ( ) { return _CHAR / blockcanary / _CHAR ; }
32782	public static SM_SYSTEM_MESSAGE STR_MSG_DELETE_ITEM_CHANGE_TO_PUBLIC ( String value0 , String value1 ) { return new SM_SYSTEM_MESSAGE ( _NUM , value0 , value1 ) ; }
32825	public WriteModifiers add ( WriteModifiers modifiers ) { return createIfNeeded ( super . add ( modifiers ) ) ; }
32850	public boolean isSetClientAppkey ( ) { return this . clientAppkey != _NULL ; }
32889	public ImageSize scaleDown ( int sampleSize ) { return new ImageSize ( width / sampleSize , height / sampleSize ) ; }
32962	public boolean isCritical ( ) { return _BOOL ; }
33229	public static Tailer create ( File file , TailerListener listener , long delayMillis ) { return create ( file , listener , delayMillis , _BOOL ) ; }
33321	public void releaseConnection ( Connection ldapConnection , int ldapErrorCode ) { releaseConnection ( ldapConnection ) ; }
33335	public static int collectDefaults ( ) { int flags = _NUM ; for ( Feature f : values ( ) ) { if ( f . enabledByDefault ( ) ) { flags |= f . getMask ( ) ; } } return flags ; }
33403	@ Override public void warning ( SAXParseException exception ) throws SAXException { if ( errorHandler != _NULL ) { log . warn ( _CHAR Parse Warning Error at line _CHAR + exception . getLineNumber ( ) + _CHAR column _CHAR + exception . getColumnNumber ( ) + _CHAR : _CHAR + exception . getMessage ( ) , exception ) ; errorHandler . warning ( exception ) ; } }
33468	private static void insertValueUsingIfNotEmpty ( final Map < String , List < String >> paramsMap , final String paramVal , final String parameterName ) { if ( StringUtils . isNotEmpty ( paramVal ) ) { List < String > list = new ArrayList < > ( ) ; list . add ( paramVal ) ; paramsMap . put ( parameterName , list ) ; } }
33507	public synchronized BukkitTask runTaskTimer ( Plugin plugin , long delay , long period ) throws IllegalArgumentException , IllegalStateException { checkState ( ) ; return setupId ( Bukkit . getScheduler ( ) . runTaskTimer ( plugin , ( Runnable ) this , delay , period ) ) ; }
33527	public void stopWork ( ) { setThreadStateIfNotShuttingDown ( ThreadState . IDLE ) ; }
33535	private synchronized void cleanupState ( ) { sourceIds = _NULL ; targets = _NULL ; if ( executor != _NULL ) { executor . shutdown ( ) ; executor = _NULL ; } }
33549	public synchronized void resetOrders ( ) { orders = _NULL ; }
33627	public final boolean hasChildren ( ) { return ! children . isEmpty ( ) ; }
33637	@ NonNull public static Agera wrap ( @ NonNull Observable observable ) { if ( observable instanceof Agera ) { return ( Agera ) observable ; } return new AgeraWrapper ( observable ) ; }
33654	public static int registerSystemDirectories ( ) { return FontProgramFactory . registerSystemFontDirectories ( ) ; }
33682	public JSONException syntaxError ( String message ) { return new JSONException ( message + this ) ; }
33734	public AppLauncher forward ( int localPort ) { this . localPort = localPort ; return this ; }
33739	public boolean containsActionName ( String actionName ) { return ( getActionNames ( ) . contains ( actionName ) ) ; }
33781	public Name addAll ( List < Rdn > suffixRdns ) { return addAll ( size ( ) , suffixRdns ) ; }
33800	public void _read ( InputStream input ) { value = input . read_fixed ( ) ; }
33841	public boolean isTokenRestricted ( ) throws SSOException { try { return session . isRestricted ( ) ; } catch ( SessionException se ) { throw new SSOException ( se ) ; } }
33952	protected void expandParentAndReceiver ( ) { FHTreeStateNode parent = ( FHTreeStateNode ) getParent ( ) ; if ( parent != _NULL ) parent . expandParentAndReceiver ( ) ; expand ( ) ; }
33978	public static PdfAction createGoToE ( PdfDestination destination , boolean newWindow , PdfTargetDictionary targetDictionary ) { return createGoToE ( _NULL , destination , newWindow , targetDictionary ) ; }
34002	public void addPolicyListener ( PolicyListener policyListener ) { policyCache . addPolicyListener ( policyListener ) ; }
34044	public boolean recalculate_length_violations ( ) { boolean result = _BOOL ; for ( int i = _NUM ; i < net_incompletes . length ; ++ i ) { if ( net_incompletes [ i ] . calc_length_violation ( ) ) { result = _BOOL ; } } return result ; }
34074	public boolean isColor ( ) { return ! this . isStyle && this != RESET ; }
34112	public Iterator < Integer > rsIterator ( ) { return rsStates . keySet ( ) . iterator ( ) ; }
34156	public void exprAddChild ( ExpressionNode n , int i ) { appendChild ( ( ElemTemplateElement ) n ) ; }
34183	@ Override public boolean execute ( ) { return _BOOL ; }
34199	public static MyFragment newInstance ( int param1 ) { MyFragment fragment = new MyFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_COLOR , param1 ) ; fragment . setArguments ( args ) ; return fragment ; }
34203	public void startWork ( ) { setThreadStateIfNotShuttingDown ( ThreadState . PROCESSING ) ; }
34234	public int hashCode ( ) { return name . hashCode ( ) ; }
34256	public int from_layer ( ) { for ( int index = _NUM ; index < shapes . length ; index ++ ) { if ( shapes [ index ] != _NULL ) return index ; } return _NUM ; }
34264	public SubjectDecision evaluate ( Subject subject , String resourceName , Map < String , Set < String >> environment ) throws EntitlementException { return _NULL ; }
34300	public Object clone ( ) { byte [ ] newData = new byte [ length ] ; System . arraycopy ( data , _NUM , newData , _NUM , newData . length ) ; SysexMessage event = new SysexMessage ( newData ) ; return event ; }
34307	public static int collectDefaults ( ) { int flags = _NUM ; for ( Feature f : values ( ) ) { if ( f . enabledByDefault ( ) ) { flags |= f . getMask ( ) ; } } return flags ; }
34345	private void breakBarrier ( ) { generation . broken = _BOOL ; count = parties ; trip . signalAll ( ) ; }
34378	public boolean isValid ( ) { return isValid ( _BOOL ) ; }
34411	public static PasswordModifyExtendedRequest copyOfPasswordModifyExtendedRequest ( final PasswordModifyExtendedRequest request ) { return new PasswordModifyExtendedRequestImpl ( request ) ; }
34501	public void visitLabel ( Label label ) { if ( mv != _NULL ) { mv . visitLabel ( label ) ; } }
34509	private void continueInstallClicked ( ) { application . forceToDisplay ( ) ; getDialog ( ) . forceToDisplay ( ) ; setCurrentStep ( Step . WELCOME ) ; }
34511	public StatusDetail createStatusDetail ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_DETAIL , value ) ; if ( obj == _NULL ) { return new StatusDetailImpl ( value ) ; } else { return ( StatusDetail ) obj ; } }
34538	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
34643	public URI toURILenient ( ) throws URISyntaxException { if ( streamHandler == _NULL ) { throw new IllegalStateException ( protocol ) ; } return new URI ( streamHandler . toExternalForm ( this , _BOOL ) ) ; }
34655	public boolean mustChangePassword ( ) { return mustChangePassword ; }
34700	public static void handleThrowable ( Throwable t ) { if ( t instanceof ThreadDeath ) { throw ( ThreadDeath ) t ; } if ( t instanceof StackOverflowError ) { return ; } if ( t instanceof VirtualMachineError ) { throw ( VirtualMachineError ) t ; } }
34724	protected void addMoreAttributeSchemasForModification ( Set attributeSchemas ) { }
34799	public static QueryExp between ( ValueExp v1 , ValueExp v2 , ValueExp v3 ) { return new BetweenQueryExp ( v1 , v2 , v3 ) ; }
34816	public final boolean peek ( ) { return m_values [ m_index ] ; }
34825	@ Override protected boolean checkParam ( final String reqParam ) throws ConnectorException { if ( reqParam == _NULL || reqParam . equals ( _CHAR _CHAR ) ) { return _BOOL ; } if ( Pattern . compile ( Constants . INVALID_PATH_REGEX ) . matcher ( reqParam ) . find ( ) ) { return _BOOL ; } return _BOOL ; }
34848	public void save ( InternalSession session ) throws CoreTokenException { coreTokenService . update ( tokenAdapter . toToken ( session ) ) ; }
34874	public static String calculateITableName ( Index index ) { return calculateITableName ( index . getDatabaseName ( ) , index . getTableName ( ) , index . getName ( ) ) ; }
34877	public String toString ( ) { return value ; }
34939	public int intValue ( ) { return intValue ; }
34949	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException , InvalidObjectException { s . defaultReadObject ( ) ; if ( minSmallest > minLargest ) { throw new InvalidObjectException ( _CHAR Smallest minimum value must be less than largest minimum value _CHAR ) ; } if ( maxSmallest > maxLargest ) { throw new InvalidObjectException ( _CHAR Smallest maximum value must be less than largest maximum value _CHAR ) ; } if ( minLargest > maxLargest ) { throw new InvalidObjectException ( _CHAR Minimum value must be less than maximum value _CHAR ) ; } }
34970	boolean isDServerUp ( ) { return isDServerUp ( _BOOL ) ; }
34990	public boolean isDataFlavorSupported ( DataFlavor flavor ) { for ( int i = _NUM ; i < flavors . length ; i ++ ) { if ( flavor . equals ( flavors [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
35021	public void addMembers ( Guid [ ] guids ) throws UMSException { if ( guids == _NULL ) { throw new IllegalArgumentException ( i18n . getString ( IUMSConstants . NULL_GUIDS ) ) ; } for ( int i = _NUM ; i < guids . length ; i ++ ) { addMember ( guids [ i ] ) ; } }
35124	public static List < String > filterTags ( List < LanguageRange > priorityList , Collection < String > tags , FilteringMode mode ) { return LocaleMatcher . filterTags ( priorityList , tags , mode ) ; }
35131	public ReplicationParameters replicationPortDestination ( int port ) { this . replicationPortDestination = port ; return this ; }
35151	@ Override public NamingEnumeration < Binding > listBindings ( String name ) throws NamingException { if ( log . isDebugEnabled ( ) ) { log . debug ( sm . getString ( _CHAR selectorContext . methodUsingString _CHAR , _CHAR listBindings _CHAR , name ) ) ; } return getBoundContext ( ) . listBindings ( parseName ( name ) ) ; }
35191	public static String formatDouble ( double d ) { return formatDouble ( d , _NULL ) ; }
35277	public String canonicalize ( String res ) throws PolicyException { return res ; }
35443	public static SettingsFragment newInstance ( String param1 , String param2 ) { SettingsFragment fragment = new SettingsFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
35493	public static byte [ ] encodeBase64 ( final byte [ ] binaryData , final boolean isChunked ) { return encodeBase64 ( binaryData , isChunked , _BOOL ) ; }
35600	public void removeEvents ( ) { scene . setOnKeyPressed ( _NULL ) ; scene . setOnKeyReleased ( _NULL ) ; up = down = left = right = sprint = jump = shootFireball = _BOOL ; }
35645	public Object clone ( ) { byte [ ] newData = new byte [ length ] ; System . arraycopy ( data , _NUM , newData , _NUM , newData . length ) ; MetaMessage event = new MetaMessage ( newData ) ; return event ; }
35661	public boolean disableSynchronization ( ) { return isPropertyTrue ( PROPERTY_DISABLE_SYNCHRONIZATION ) ; }
35720	public static TitledBorder createTitledBorder ( Border border , String title , int titleJustification , int titlePosition , Font titleFont , Color titleColor ) { return new TitledBorder ( border , title , titleJustification , titlePosition , titleFont , titleColor ) ; }
35726	public boolean trace_width_is_layer_dependent ( ) { int compare_value = trace_half_width_arr [ _NUM ] ; for ( int index = _NUM ; index < trace_half_width_arr . length ; ++ index ) { if ( ! blayer_structure . is_signal ( index ) ) continue ; if ( trace_half_width_arr [ index ] != compare_value ) return _BOOL ; } return _BOOL ; }
35780	public static void main ( String [ ] args ) { int retCode = mainCLI ( args , _BOOL , System . out , System . err , System . in ) ; System . exit ( retCode ) ; }
35864	public RxGalleryFinal cropMaxScaleMultiplier ( @ FloatRange ( from = _NUM . _NUM , fromInclusive = _BOOL ) float maxScaleMultiplier ) { configuration . setMaxScaleMultiplier ( maxScaleMultiplier ) ; return this ; }
35914	private boolean invalidated ( int index , int prevTakeIndex , long dequeues , int length ) { if ( index < _NUM ) return _BOOL ; int distance = index - prevTakeIndex ; if ( distance < _NUM ) distance += length ; return dequeues > distance ; }
35990	public int viewToModel ( float fx , float fy , Shape a , Position . Bias [ ] bias ) { return super . viewToModel ( fx , fy , adjustAllocation ( a ) , bias ) ; }
36020	public PdfCanvas curveFromTo ( double x1 , double y1 , double x3 , double y3 ) { contentStream . getOutputStream ( ) . writeDouble ( x1 ) . writeSpace ( ) . writeDouble ( y1 ) . writeSpace ( ) . writeDouble ( x3 ) . writeSpace ( ) . writeDouble ( y3 ) . writeSpace ( ) . writeBytes ( y ) ; return this ; }
36039	public void addQuery ( QueryElement qryElement ) { if ( qryElement == _NULL ) { return ; } if ( this . queries == _NULL ) { this . queries = new ArrayList ( ) ; } this . queries . add ( qryElement ) ; }
36041	public boolean isIdentity ( ) { return transform == _NULL ; }
36068	private void executeTimeoutScenario ( ) throws Exception { checkAssuredParametersOnReceivedUpdateMsg ( ) ; scenarioExecuted = _BOOL ; }
36115	public static FontProgram createType1Font ( byte [ ] afm , byte [ ] pfb ) throws java . io . IOException { return createType1Font ( afm , pfb , DEFAULT_CACHED ) ; }
36158	public org . w3c . dom . Element signWithWSSX509TokenProfile ( org . w3c . dom . Document doc , java . security . cert . Certificate cert , String algorithm , java . util . List ids ) throws XMLSignatureException { return sp . signWithWSSX509TokenProfile ( doc , cert , algorithm , ids ) ; }
36231	private static boolean isV0Separator ( final char c ) { if ( c < _NUM || c >= _NUM ) { if ( c != _NUM ) { throw new IllegalArgumentException ( _CHAR Control character in cookie value or attribute . '' ) ; } } return V0_SEPARATOR_FLAGS . get ( c ) ; }
36264	@ Override public boolean completeCycle ( ) { return cycleStats ; }
36304	public Object clone ( ) { byte [ ] newData = new byte [ length ] ; System . arraycopy ( data , _NUM , newData , _NUM , newData . length ) ; ShortMessage msg = new ShortMessage ( newData ) ; return msg ; }
36358	public CodeStream putDouble ( final double d ) { return putLong ( Double . doubleToRawLongBits ( d ) ) ; }
36468	public JMenuItem add ( JMenuItem menuItem ) { ensurePopupMenuCreated ( ) ; return popupMenu . add ( menuItem ) ; }
36479	protected void rejectDrop ( ) { DropTargetContextPeer peer = getDropTargetContextPeer ( ) ; if ( peer != _NULL ) { peer . rejectDrop ( ) ; } }
36523	public boolean isStartNow ( ) { return startNow ; }
36578	@ Override public NamingEnumeration < Binding > listBindings ( String name ) throws NamingException { return listBindings ( new CompositeName ( name ) ) ; }
36591	protected ArrayList < ShapeTile > offset_shapes ( Polyline p_polyline , int p_half_width , int p_from_no , int p_to_no ) { return p_polyline . offset_shapes ( p_half_width , p_from_no , p_to_no ) ; }
36848	protected boolean inFontTag ( ) { return ( fontAttributes != _NULL ) ; }
36875	@ Override public Object lookupLink ( String name ) throws NamingException { if ( log . isDebugEnabled ( ) ) { log . debug ( sm . getString ( _CHAR selectorContext . methodUsingString _CHAR , _CHAR lookupLink _CHAR , name ) ) ; } return getBoundContext ( ) . lookupLink ( parseName ( name ) ) ; }
36882	public String toString ( ) { return ( _CHAR SAML2Principal : _CHAR + name ) ; }
36973	public boolean webEnabled ( ) { return webSupport ; }
36975	public static boolean isCurrentVersionEqualTo ( Integer expectedVersion ) { String [ ] parsedVersion = parseVersion ( getCurrentVersion ( ) ) ; if ( parsedVersion == _NULL ) { return _BOOL ; } return expectedVersion . equals ( Integer . valueOf ( parsedVersion [ _NUM ] ) ) ; }
37008	public static Home newInstance ( ) { return new Home ( ) ; }
37109	public boolean containsExcludeResultPrefix ( String prefix , String uri ) { if ( _NULL == m_ExcludeResultPrefixs || uri == _NULL ) return _BOOL ; for ( int i = _NUM ; i < m_ExcludeResultPrefixs . size ( ) ; i ++ ) { if ( uri . equals ( getNamespaceForPrefix ( m_ExcludeResultPrefixs . elementAt ( i ) ) ) ) return _BOOL ; } return _BOOL ; }
37246	private boolean isPastMaxAge ( long maxAge , long authTime ) throws SSOException { return maxAge > - _NUM && maxAge <= currentTimeMillis ( ) - authTime ; }
37266	public boolean isBackToBackUserAgent ( ) { return super . isBackToBackUserAgent ; }
37267	public static boolean removeFromCache ( String key , DiskCache diskCache ) { File file = diskCache . getFile ( key ) ; return file != _NULL && file . exists ( ) && file . delete ( ) ; }
37268	@ Override public ProtobufGenerator useDefaultPrettyPrinter ( ) { return this ; }
37332	public boolean disableConnectionHandlers ( ) { return isPropertyTrue ( PROPERTY_DISABLE_CONNECTION_HANDLERS ) ; }
37412	public static int collectDefaults ( ) { int flags = _NUM ; for ( Feature f : values ( ) ) { if ( f . enabledByDefault ( ) ) { flags |= f . getMask ( ) ; } } return flags ; }
37471	private void assertion ( boolean condition , String msg ) throws RuntimeException { if ( ! condition ) throw new RuntimeException ( msg ) ; }
37486	public boolean beginContentStaticTextExceptionDisplay ( ChildDisplayEvent event ) { return _BOOL ; }
37488	public int addPadding ( byte [ ] in , int inOff ) { int added = ( in . length - inOff ) ; while ( inOff < in . length ) { in [ inOff ] = ( byte ) _NUM ; inOff ++ ; } return added ; }
37601	public SOAPMessage createSOAPMessage ( final String xmlString , final boolean isClientMessage ) throws SOAPException , SAML2Exception { return createSOAPMessage ( _NULL , xmlString , isClientMessage ) ; }
37647	public void selectAllAccessibleSelection ( ) { synchronized ( List . this ) { for ( int i = List . this . getItemCount ( ) - _NUM ; i >= _NUM ; i -- ) { List . this . select ( i ) ; } } }
37655	public static void closeQuietly ( AutoCloseable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
37739	public boolean isRestricted ( ) throws SessionException { return restriction != _NULL ; }
37761	boolean hasNewReasons ( ReasonsMask mask ) { return ( ( _reasons | mask . getReasons ( ) ^ _reasons ) != _NUM ) ; }
37796	public static AnonymousSASLBindRequest copyOfAnonymousSASLBindRequest ( final AnonymousSASLBindRequest request ) { return new AnonymousSASLBindRequestImpl ( request ) ; }
37797	public CodeStream putByte ( final int b ) { ensureCapacity ( _NUM ) ; _data [ _length ++ ] = ( byte ) ( b & _NUM ) ; return this ; }
37890	public synchronized void stop ( ) { stopPointAdder = _BOOL ; while ( ! pointAdderStopped ) { try { t . interrupt ( ) ; Thread . sleep ( _NUM ) ; } catch ( Throwable t ) { } } }
37910	private static String escapeString ( String s ) { if ( s == _NULL ) return _NULL ; s = s . replace ( _CHAR \\ _CHAR , _CHAR \\\\ _CHAR ) ; s = s . replace ( _CHAR * _CHAR , _CHAR \\* _CHAR ) ; s = s . replace ( _CHAR ? _CHAR , _CHAR \\ ? _CHAR ) ; s = s . replace ( _CHAR [ _CHAR , _CHAR \\ [ _CHAR ) ; return s ; }
37917	private static String linkId ( String id ) { StringBuilder sb = new StringBuilder ( _CHAR repo / link _CHAR ) ; if ( id != _NULL ) { sb . append ( _CHAR ) . append ( id ) ; } return sb . toString ( ) ; }
37940	private boolean isThisSiteID ( String sourceID ) { return ( ( String ) SAMLServiceManager . getAttribute ( SAMLConstants . SITE_ID ) ) . equals ( sourceID ) ? _BOOL : _BOOL ; }
37985	public static void handleThrowable ( Throwable t ) { if ( t instanceof ThreadDeath ) { throw ( ThreadDeath ) t ; } if ( t instanceof StackOverflowError ) { return ; } if ( t instanceof VirtualMachineError ) { throw ( VirtualMachineError ) t ; } }
38102	public SubjectDecision evaluate ( String realm , SubjectAttributesManager mgr , Subject subject , String resourceName , Map < String , Set < String >> environment ) throws EntitlementException { boolean satified = hasPrincipal ( subject , getID ( ) ) ^ isExclusive ( ) ; return new SubjectDecision ( satified , Collections . EMPTY_MAP ) ; }
38137	public static boolean isGingerbread ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . GINGERBREAD ; }
38293	public ByteVector putByte ( final int b ) { int length = this . length ; if ( length + _NUM > data . length ) { enlarge ( _NUM ) ; } data [ length ++ ] = ( byte ) b ; this . length = length ; return this ; }
38315	void verifyClass ( ) throws UMSException { Class expectedClass = TemplateManager . getTemplateManager ( ) . getJavaClassForEntry ( this . getGuid ( ) . getDn ( ) , this . getAttrSet ( ) ) ; if ( this . getClass ( ) != expectedClass ) { String msg = i18n . getString ( IUMSConstants . UNMATCHED_CLASS ) ; throw new IllegalArgumentException ( msg ) ; } }
38353	public org . w3c . dom . Element signXML ( org . w3c . dom . Document doc , java . lang . String certAlias , java . lang . String algorithm , java . util . List ids ) throws XMLSignatureException { return sp . signXML ( doc , certAlias , algorithm , ids ) ; }
38443	public void abort ( ) throws AuthLoginException { authDebug . message ( _CHAR AuthContextLocal : : abort ( ) _CHAR ) ; try { amlc . abort ( ) ; } catch ( Exception e ) { if ( authDebug . messageEnabled ( ) ) { authDebug . message ( _CHAR Exception in AMLoginContext : : abort ( ) _CHAR + e . getMessage ( ) ) ; } throw new AuthLoginException ( amAuthContextLocal , _CHAR abortError _CHAR , _NULL , e ) ; } loginStatus = AuthContext . Status . COMPLETED ; }
38460	public boolean isExtended ( ) { return extended ; }
38608	public static boolean isJellyBean ( ) { return Build . VERSION . SDK_INT >= Build . VERSION_CODES . JELLY_BEAN ; }
38623	public String toString ( ) { String modelString = _CHAR value = _CHAR + getValue ( ) + _CHAR , '' + '' extent = _CHAR + getExtent ( ) + _CHAR , '' + '' min = _CHAR + getMinimum ( ) + _CHAR , '' + '' max = _CHAR + getMaximum ( ) + _CHAR , '' + '' adj = _CHAR + getValueIsAdjusting ( ) ; return getClass ( ) . getName ( ) + _CHAR [ _CHAR + modelString + _CHAR ] _CHAR ; }
38652	public StatusCode createStatusCode ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_CODE , value ) ; if ( obj == _NULL ) { return new StatusCodeImpl ( value ) ; } else { return ( StatusCode ) obj ; } }
38666	public void log ( Level logLevel , String msg ) { if ( ! internalIsLoggable ( logLevel ) ) { return ; } dalvikLogHandler . publish ( this , androidTag , logLevel , msg ) ; }
38751	public static final String createXPATHMessage ( String msgKey , Object args [ ] ) { return createXPATHMsg ( XPATHBundle , msgKey , args ) ; }
38835	protected PropertyChangeListener createPropertyChangeListener ( ) { return getHandler ( ) ; }
38871	public static void handleThrowable ( Throwable t ) { if ( t instanceof ThreadDeath ) { throw ( ThreadDeath ) t ; } if ( t instanceof StackOverflowError ) { return ; } if ( t instanceof VirtualMachineError ) { throw ( VirtualMachineError ) t ; } }
38980	public static PlainSASLBindRequest copyOfPlainSASLBindRequest ( final PlainSASLBindRequest request ) { return new PlainSASLBindRequestImpl ( request ) ; }
39002	public static GSSAPISASLBindRequest copyOfGSSAPISASLBindRequest ( final GSSAPISASLBindRequest request ) { return new GSSAPISASLBindRequestImpl ( request ) ; }
39030	public String toString ( ) { return _CHAR TextHitInfo [ _CHAR + charIndex + ( isLeadingEdge ? _CHAR L _CHAR : _CHAR T _CHAR ) + _CHAR ] _CHAR ; }
39034	public static CommentsFragment newInstance ( String postRef ) { CommentsFragment fragment = new CommentsFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( POST_REF_PARAM , postRef ) ; fragment . setArguments ( args ) ; return fragment ; }
39122	private void writeHex ( int i ) throws IOException { int cursor = _NUM ; do { hex [ -- cursor ] = HEX_DIGITS [ i & _NUM ] ; } while ( ( i >> >= _NUM ) != _NUM ) ; socketOut . write ( hex , cursor , hex . length - cursor ) ; }
39219	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
39246	public static void clearBackend ( String backendId ) throws Exception { clearBackend ( backendId , _NULL ) ; }
39261	public boolean needsLogging ( ) { return logFileName != _NULL ; }
39280	public void ifPresent ( DoubleConsumer consumer ) { if ( isPresent ) consumer . accept ( value ) ; }
39317	public SwitchFilter addRequestCase ( final Expression < Boolean > condition , final Handler handler ) { requestCases . add ( new Case ( condition , handler ) ) ; return this ; }
39361	public boolean isFlavorSerializedObjectType ( ) { return isRepresentationClassSerializable ( ) && isMimeTypeEqual ( javaSerializedObjectMimeType ) ; }
39383	public String toString ( ) { return ( _CHAR HOTPPrincipal : _CHAR + name ) ; }
39397	public E peek ( ) { final Node < E > f = first ; return ( f == _NULL ) ? _NULL : f . item ; }
39600	public static void convertJAXBToOutputStream ( Object jaxbObj , OutputStream os ) throws JAXBException { Marshaller marshaller = jaxbContext . createMarshaller ( ) ; marshaller . setProperty ( PROP_JAXB_FORMATTED_OUTPUT , Boolean . TRUE ) ; marshaller . setProperty ( PROP_NAMESPACE_PREFIX_MAPPER , nsPrefixMapper ) ; marshaller . marshal ( jaxbObj , os ) ; }
39750	public static Border createEtchedBorder ( int type , Color highlight , Color shadow ) { return new EtchedBorder ( type , highlight , shadow ) ; }
39761	@ Override public MinguoDate date ( int prolepticYear , int month , int dayOfMonth ) { return new MinguoDate ( LocalDate . of ( prolepticYear + YEARS_DIFFERENCE , month , dayOfMonth ) ) ; }
39902	public boolean beginTabCommonDisplay ( ChildDisplayEvent event ) { return ( tabModel . getNodeCount ( ) > _NUM ) ; }
39930	public boolean is_on_the_right ( ShapeTile p_tile ) { int border_line_count = p_tile . border_line_count ( ) ; for ( int index = _NUM ; index < border_line_count ; ++ index ) { if ( side_of ( p_tile . corner ( index ) ) == PlaSide . ON_THE_LEFT ) return _BOOL ; } return _BOOL ; }
39939	@ Override public boolean isInMemory ( ) { if ( cachedContent != _NULL ) { return _BOOL ; } return dfos . isInMemory ( ) ; }
39975	private final static boolean isThaiPreVowel ( int ch ) { return ( ch >= _NUM ) && ( ch <= _NUM ) ; }
40041	public static boolean doVerifierAction ( String logName , boolean result ) { return vout . doVerifierAction ( logName , result ) ; }
40059	public void encode ( ByteStringBuilder buffer ) { buffer . appendBERLength ( _NUM ) ; buffer . appendByte ( encodedRepresentation ) ; }
40114	public Map < TopicPartition , Long > offsets ( ) { return offsets ; }
40186	private void createPageTitleModel ( ) { ptModel = new CCPageTitleModel ( getClass ( ) . getClassLoader ( ) . getResourceAsStream ( _CHAR com / sun / identity / console / fileUploaderPageTitle . xml _CHAR ) ) ; }
40194	@ DataProvider ( name = _CHAR testModifyMustChange _CHAR ) public Object [ ] [ ] createTestModifyMustChange ( ) { return new Object [ ] [ ] { { _CHAR uid = test . admin , o = test _CHAR , _CHAR uid = test . admin , o = test _CHAR , _BOOL } , { _CHAR uid = test . admin , o = test _CHAR , _CHAR uid = test . user , o = test _CHAR , _BOOL } , { _CHAR uid = test . admin , o = test _CHAR , _CHAR o = test _CHAR , _BOOL } , { _CHAR uid = test . user , o = test _CHAR , _CHAR uid = test . admin , o = test _CHAR , _BOOL } , { _CHAR uid = test . user , o = test _CHAR , _CHAR uid = test . user , o = test _CHAR , _BOOL } , { _CHAR uid = test . user , o = test _CHAR , _CHAR o = test _CHAR , _BOOL } } ; }
40259	protected boolean isSpecial ( String name ) { for ( int i = _NUM ; i < specials . length ; i ++ ) { if ( specials [ i ] . equals ( name ) ) return _BOOL ; } return _BOOL ; }
40316	public String encode ( String value ) throws EncoderException { if ( value == _NULL ) { return _NULL ; } return encode ( value , getDefaultCharset ( ) ) ; }
40339	public void preDeregister ( ) throws java . lang . Exception { }
40356	public boolean isFlavorRemoteObjectType ( ) { return isRepresentationClassRemote ( ) && isRepresentationClassSerializable ( ) && isMimeTypeEqual ( javaRemoteObjectMimeType ) ; }
40427	public void invalidate ( ) { }
40543	@ Override public boolean completeCycle ( ) { return completeCycle ; }
40555	public static ArgumentException unknownCategory ( String categoryName ) { LocalizableMessage msg = ERR_DSCFG_ERROR_CATEGORY_UNRECOGNIZED . get ( categoryName ) ; return new ArgumentException ( msg ) ; }
40605	@ Override public int show ( final FragmentTransaction transaction , final String tag ) { return super . show ( transaction , tag ) ; }
40656	private void processHostPattern ( final String rule ) { final String [ ] s = rule . split ( _CHAR ^ [ _NUM - _NUM - zA - z - . ] + _CHAR ) ; if ( s . length > _NUM ) { throw genericDecodeError ( ) ; } hostPattern = rule ; }
40681	@ Override public MinguoDate dateYearDay ( Era era , int yearOfEra , int dayOfYear ) { return dateYearDay ( prolepticYear ( era , yearOfEra ) , dayOfYear ) ; }
40741	public Element signWithWSSX509TokenProfile ( Document doc , java . security . cert . Certificate cert , String algorithm , List ids ) throws XMLSignatureException { return signWithWSSX509TokenProfile ( doc , cert , algorithm , ids , SOAPBindingConstants . WSF_10_VERSION ) ; }
40822	public LogoutResponse createLogoutResponse ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_RESPONSE , value ) ; if ( obj == _NULL ) { return new LogoutResponseImpl ( value ) ; } else { return ( LogoutResponse ) obj ; } }
40860	private final static boolean isLaoPreVowel ( int ch ) { return ( ch >= _NUM ) && ( ch <= _NUM ) ; }
40928	public StatusDetail createStatusDetail ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_DETAIL , value ) ; if ( obj == _NULL ) { return new StatusDetailImpl ( value ) ; } else { return ( StatusDetail ) obj ; } }
40977	public void clearFailureLockout ( ) { clearAuthFailureTimes ( ) ; clearFailureLockedTime ( ) ; }
41042	public boolean shouldImportRequestObjectParamElementType ( Field field ) { return _BOOL ; }
41046	private static Locale createConstant ( String lang , String country ) { BaseLocale base = BaseLocale . createInstance ( lang , country ) ; return getInstance ( base , _NULL ) ; }
41062	public void checkTokenType ( String methodName ) { if ( ldapConnect ) { String str = methodName + _CHAR is an unsupported operation for tokens created '' + '' by direct ldap connection '' ; SSOProviderImpl . debug . error ( str ) ; throw new UnsupportedOperationException ( str ) ; } }
41132	public boolean isAnyPolicyInhibited ( ) { return anyPolicyInhibited ; }
41158	public void resetBuffer ( boolean resetWriterStreamFlags ) { if ( isCommitted ( ) ) { throw new IllegalStateException ( sm . getString ( _CHAR coyoteResponse . resetBuffer . ise _CHAR ) ) ; } outputBuffer . reset ( resetWriterStreamFlags ) ; if ( resetWriterStreamFlags ) { usingOutputStream = _BOOL ; usingWriter = _BOOL ; isCharacterEncodingSet = _BOOL ; } }
41171	public Map < String , MappedClass > remapClasses ( Map < String , MappedClass > mappings , MappingMode mode ) { for ( MappedClass mc : mappings . values ( ) ) { if ( ! mc . isLibrary ( ) ) { remapClass ( mc , mappings , mode ) ; } } return mappings ; }
41186	public void applyLocalizedPattern ( String pattern ) { ndf . applyLocalizedPattern ( pattern ) ; }
41212	public static boolean match ( String name , int majorVersion , int minorVersion ) { return osName . equalsIgnoreCase ( name ) && ( osMajorVersion == majorVersion ) && ( osMinorVersion == minorVersion ) ; }
41276	public void endMonitoringOf ( final InetAddress inetAddress , final int inode ) { candidateSockets . endMonitoringOfSocketIdentifier ( fromInet4AddressAndInode ( inetAddress , inode ) ) ; }
41440	@ Override @ Deprecated public String encodeRedirectUrl ( String url ) { return ( encodeRedirectURL ( url ) ) ; }
41466	public synchronized int hashCode ( ) { int h = _NUM ; Iterator i = entrySet ( ) . iterator ( ) ; while ( i . hasNext ( ) ) h += i . next ( ) . hashCode ( ) ; return h ; }
41601	@ Override public byte [ ] encodePassword ( String password ) { return password == _NULL ? _NULL : ( _CHAR \ _CHAR _CHAR + password + _CHAR \ _CHAR _CHAR ) . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ; }
41721	public void initializeSchema ( ) throws InitializationException , ConfigException { schemaHandler . initialize ( serverContext ) ; schemaHandler . detectChangesOnInitialization ( ) ; compressedSchema = new DefaultCompressedSchema ( serverContext ) ; }
41733	public static GSSAPISASLBindRequest newGSSAPISASLBindRequest ( final Subject subject ) { return new GSSAPISASLBindRequestImpl ( subject ) ; }
41814	public static CustomTokenOperation fromSMSString ( String smsString ) { String [ ] tokens = smsString . split ( REGEX_PIPE ) ; if ( tokens . length != _NUM ) { throw new IllegalArgumentException ( _CHAR The sms string representation of the CustomTokenOperation must be of _CHAR + _CHAR format : custom_token_name | impl_class_mame . The sms string argument : _CHAR + smsString ) ; } return new CustomTokenOperation ( tokens [ _NUM ] , tokens [ _NUM ] ) ; }
41866	private void removeAttributes ( AttributeType attrType ) { getUserOrOperationalAttributes ( attrType ) . remove ( attrType ) ; }
41929	public boolean isAutoIncrement ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . autoIncrement ; }
41952	public static boolean hasClass ( MavenProject project , String ... classNames ) { URLClassLoader compileClassLoader = getCompileClassLoader ( project ) ; for ( String className : classNames ) { try { compileClassLoader . loadClass ( className ) ; return _BOOL ; } catch ( Throwable e ) { } } return _BOOL ; }
41962	private int monthLength ( int month ) { assert jdate . isNormalized ( ) ; return jdate . isLeapYear ( ) ? GregorianCalendar . LEAP_MONTH_LENGTH [ month ] : GregorianCalendar . MONTH_LENGTH [ month ] ; }
42174	public void invalidatePathBounds ( TreePath path ) { }
42235	public void focusGained ( FocusEvent e ) { getHandler ( ) . focusGained ( e ) ; }
42275	public static boolean hasVaryAll ( Headers responseHeaders ) { return varyFields ( responseHeaders ) . contains ( _CHAR * _CHAR ) ; }
42286	public boolean isCompressionLossless ( ) { if ( getCompressionMode ( ) != MODE_EXPLICIT ) { throw new IllegalStateException ( _CHAR Compression mode not MODE_EXPLICIT ! _CHAR ) ; } return _BOOL ; }
42371	protected static boolean isDiagnosticsEnabled ( ) { return LogFactory . isDiagnosticsEnabled ( ) ; }
42489	public void endMonitoringOf ( final InetAddress inetAddress ) { candidateSockets . endMonitoringOfSocketIdentifier ( SocketIdentifier . fromInet4Address ( inetAddress ) ) ; }
42529	protected void layout ( int width , int height ) { if ( ! isVisible ( ) ) { return ; } super . layout ( width , height ) ; }
42562	public void clear ( ) { synchronized ( names ) { names . clear ( ) ; } }
42632	@ Override public List < IndexCreatedEvent > readAll ( ) { BoundStatement bs = new BoundStatement ( readAllStmt ) ; return ( marshalAll ( getSession ( ) . execute ( bs ) ) ) ; }
42650	public boolean isForceOnError ( ) { return forceOnErrorArg . isPresent ( ) ; }
42692	public static void main ( String [ ] args ) { final int exitCode = configMain ( args , System . out , System . err ) ; if ( exitCode != SUCCESS ) { System . exit ( filterExitCode ( exitCode ) ) ; } }
42741	public int countAllTokens ( ) throws CoreTokenException { TokenFilter filter = new TokenFilterBuilder ( ) . returnAttribute ( CoreTokenField . TOKEN_ID ) . build ( ) ; return store . attributeQuery ( filter ) . size ( ) ; }
42792	static public PrintWriter log ( Throwable xcpt , PrintWriter out ) { out . println ( _CHAR ----------- _CHAR ) ; out . println ( xcpt . toString ( ) ) ; out . println ( _CHAR Stack Trace : _CHAR ) ; out . print ( getStackTrace ( xcpt ) ) ; out . println ( _CHAR ----------- _CHAR ) ; out . flush ( ) ; return out ; }
42888	public LogoutRequest createLogoutRequest ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_REQUEST , value ) ; if ( obj == _NULL ) { return new LogoutRequestImpl ( value ) ; } else { return ( LogoutRequest ) obj ; } }
42904	private void cleanStatic ( MethodNode method ) { }
42969	public void visitLabel ( Label label ) { if ( mv != _NULL ) { mv . visitLabel ( label ) ; } }
42991	protected void stopAutoScrolling ( ) { isAutoScrolling = _BOOL ; if ( autoscrollTimer != _NULL ) { autoscrollTimer . stop ( ) ; autoscrollTimer = _NULL ; } }
43005	public String patchFixIds ( ) { return properties . getProperty ( _CHAR patch . fix . ids _CHAR ) ; }
43170	public boolean is_on_the_left ( ShapeTile p_tile ) { int border_line_count = p_tile . border_line_count ( ) ; for ( int index = _NUM ; index < border_line_count ; ++ index ) { if ( side_of ( p_tile . corner ( index ) ) == PlaSide . ON_THE_RIGHT ) return _BOOL ; } return _BOOL ; }
43176	public boolean passed ( ) { boolean passed = _BOOL ; for ( Iterator i = tests . iterator ( ) ; i . hasNext ( ) && passed ; ) { Test t = ( Test ) i . next ( ) ; passed = t . passed ( ) ; } return passed ; }
43188	public int hashCode ( ) { return name . hashCode ( ) ; }
43276	private long computeGenerationId ( ) throws DirectoryException { final long genId = exportBackend ( _NULL , _BOOL ) ; if ( logger . isTraceEnabled ( ) ) { logger . trace ( _CHAR Computed generationId : generationId = _CHAR + genId ) ; } return genId ; }
43300	public void cancelEditing ( ) { TreeUI tree = getUI ( ) ; if ( tree != _NULL ) tree . cancelEditing ( this ) ; }
43357	private static boolean containsCertNicknameErrorMessage ( Collection < LocalizableMessage > msgs ) { for ( final LocalizableMessage msg : msgs ) { if ( StaticUtils . hasDescriptor ( msg , ERR_INSTALLDS_CERTNICKNAME_NOT_FOUND ) || StaticUtils . hasDescriptor ( msg , ERR_INSTALLDS_MUST_PROVIDE_CERTNICKNAME ) ) { return _BOOL ; } } return _BOOL ; }
43372	public boolean isAccessibleSelected ( int r , int c ) { return _BOOL ; }
43492	public boolean removeAlertGenerator ( AlertGenerator generator ) { synchronized ( alertGenerators ) { return alertGenerators . remove ( generator ) ; } }
43537	public void zoomOutImage ( float scale , float centerX , float centerY ) { if ( scale >= getMinScale ( ) ) { postScale ( scale / getCurrentScale ( ) , centerX , centerY ) ; } }
43680	@ Override public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; toString ( buffer ) ; return buffer . toString ( ) ; }
43704	public void clear ( ) { valueToName . clear ( ) ; nameToCount . clear ( ) ; }
43752	void read ( ) throws SSOException , SMSException { read ( ssoToken ) ; }
43777	public static void onlyForTestsClearLocalReplicationServerList ( ) { localPorts . clear ( ) ; }
43805	public int viewToModel ( float x , float y , Shape a , Position . Bias [ ] bias ) { return view . viewToModel ( x , y , a , bias ) ; }
43814	public Iterator enumerateLiteralResultAttributes ( ) { return ( _NULL == m_avts ) ? _NULL : m_avts . iterator ( ) ; }
43825	public String encode ( String pString ) throws EncoderException { if ( pString == _NULL ) { return _NULL ; } return encode ( pString , getDefaultCharset ( ) ) ; }
43938	public boolean isSupportedLookAndFeel ( ) { return _BOOL ; }
43949	public Dispatch < Object > createDispatch ( QName portName , JAXBContext context , Mode mode ) { return delegate . createDispatch ( portName , context , mode ) ; }
43992	long removeCount ( final WriteableTransaction txn , final EntryID entryID ) { return counter . removeCount ( txn , toKey ( entryID ) ) ; }
44011	public int read ( ) throws IOException { int c = in . read ( ) ; if ( c >= _NUM ) monitor . setProgress ( ++ nread ) ; if ( monitor . isCanceled ( ) ) { InterruptedIOException exc = new InterruptedIOException ( _CHAR progress _CHAR ) ; exc . bytesTransferred = nread ; throw exc ; } return c ; }
44015	public static ModifyRequest newModifyRequest ( final String ... ldifLines ) { final ChangeRecord record = LDIFChangeRecordReader . valueOfLDIFChangeRecord ( ldifLines ) ; if ( record instanceof ModifyRequest ) { return ( ModifyRequest ) record ; } else { final LocalizableMessage message = WARN_READ_LDIF_RECORD_CHANGE_RECORD_WRONG_TYPE . get ( _CHAR modify _CHAR ) ; throw new LocalizedIllegalArgumentException ( message ) ; } }
44023	protected void unconfigureEditor ( ) { if ( focusListener != _NULL ) { editor . removeFocusListener ( focusListener ) ; } editor . removePropertyChangeListener ( propertyChangeListener ) ; editor . removeFocusListener ( getHandler ( ) ) ; comboBox . getEditor ( ) . removeActionListener ( getHandler ( ) ) ; }
44039	protected String encodeBody ( ) { return encodeBody ( new StringBuilder ( ) ) . toString ( ) ; }
44069	@ Override public BrdComponent copy ( ) { return new BrdComponent ( this ) ; }
44178	public boolean hasMoreRequirements ( ) { authDebug . message ( _CHAR AuthContext : : requiresMoreInformation ( ) _CHAR ) ; if ( getRequirements ( ) == _NULL ) return ( _BOOL ) ; else return ( _BOOL ) ; }
44248	public void endMonitoringOf ( final InetAddress inetAddress ) { candidateSockets . endMonitoringOfSocketIdentifier ( fromInet4Address ( inetAddress ) ) ; }
44311	public CodeStream putShort ( final int s ) { ensureCapacity ( _NUM ) ; _data [ _length ++ ] = ( byte ) ( ( s >> > _NUM ) & _NUM ) ; _data [ _length ++ ] = ( byte ) ( s & _NUM ) ; return this ; }
44326	public ReplicationParameters connectionParamsForDestination ( ConnectionParameters destinationParams ) { this . connParamsForDestination = destinationParams ; return this ; }
44338	public static < K , V > SortedMap < K , V > synchronizedSortedMap ( SortedMap < K , V > map ) { if ( map == _NULL ) { throw new NullPointerException ( _CHAR map == _NULL _CHAR ) ; } return new SynchronizedSortedMap < K , V > ( map ) ; }
44504	public Object encode ( Object pObject ) throws EncoderException { if ( pObject == _NULL ) { return _NULL ; } else if ( pObject instanceof String ) { return encode ( ( String ) pObject ) ; } else { throw new EncoderException ( _CHAR Objects of type _CHAR + pObject . getClass ( ) . getName ( ) + _CHAR can not be encoded using Q codec _CHAR ) ; } }
44576	public LogoutResponse createLogoutResponse ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_RESPONSE , value ) ; if ( obj == _NULL ) { return new LogoutResponseImpl ( value ) ; } else { return ( LogoutResponse ) obj ; } }
44597	public static Object convertInputStreamToJAXB ( InputStream is ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( is ) ) ) ; }
44618	private void newClientWithUnknownChanges ( ) throws Exception { debugInfo ( _CHAR Starting newClientWithUnknownChanges _CHAR ) ; ServerState state = newServerState ( unknownCSNServer1 , secondCSNServer2 ) ; newClientWithChanges ( state , secondCSNServer1 ) ; debugInfo ( _CHAR Ending newClientWithUnknownChanges _CHAR ) ; }
44668	public void serialize ( Node node ) throws IOException { try { TreeWalker walker = new TreeWalker ( this ) ; walker . traverse ( node ) ; } catch ( org . xml . sax . SAXException se ) { throw new WrappedRuntimeException ( se ) ; } }
44681	public boolean isAllowedWithoutReferer ( ) { return allowWithoutReferer ; }
44701	public int hashCode ( ) { return name . hashCode ( ) ; }
44730	public final void pushNamespaceContextNull ( ) { m_prefixResolvers . push ( _NULL ) ; }
44739	public java . lang . String signXML ( java . lang . String xmlString , java . lang . String certAlias , java . lang . String algorithm , java . util . List ids ) throws XMLSignatureException { return sp . signXML ( xmlString , certAlias , algorithm , ids ) ; }
44763	public void endMonitoringOf ( final InetAddress inetAddress , final int inode ) { candidateSockets . endMonitoringOfSocketIdentifier ( fromInet4AddressAndInode ( inetAddress , inode ) ) ; }
45139	public void finish ( ) throws IOException { if ( ! this . wroteLastChunk ) { flushCache ( ) ; writeClosingChunk ( ) ; this . wroteLastChunk = _BOOL ; } }
45184	@ Override public boolean equals ( Object o ) { if ( o instanceof ChannelData ) { return Arrays . equals ( getUniqueId ( ) , ( ( ChannelData ) o ) . getUniqueId ( ) ) ; } else return _BOOL ; }
45285	public boolean isFatal ( ) { return isFatal ; }
45355	@ Override public FrameReader newReader ( BufferedSource source , boolean client ) { return new Reader ( source , _NUM , client ) ; }
45371	public static boolean isEqual ( byte [ ] digesta , byte [ ] digestb ) { if ( digesta . length != digestb . length ) { return _BOOL ; } for ( int i = _NUM ; i < digesta . length ; i ++ ) { if ( digesta [ i ] != digestb [ i ] ) { return _BOOL ; } } return _BOOL ; }
45520	public static byte [ ] serializeToBuffer ( XMPMetaImpl xmp , SerializeOptions options ) throws XMPException { ByteArrayOutputStream out = new ByteArrayOutputStream ( _NUM ) ; serialize ( xmp , out , options ) ; return out . toByteArray ( ) ; }
45523	public static final String createMessage ( String msgKey , Object args [ ] ) { return createMsg ( XSLTBundle , msgKey , args ) ; }
45536	public void update ( byte [ ] buf , int off , int len ) throws SignatureException { if ( RSAdata != _NULL || digestAttr != _NULL || isTsp ) messageDigest . update ( buf , off , len ) ; else sig . update ( buf , off , len ) ; }
45604	public void addSubTree ( Tree < E > node ) { node . parent = this ; children . add ( node ) ; }
45621	public static final String createWarning ( String msgKey , Object args [ ] ) { return createMsg ( XSLTBundle , msgKey , args ) ; }
45638	private void countLines ( String message ) { char [ ] chars = message . toCharArray ( ) ; for ( int i = _NUM ; i < chars . length ; i ++ ) { if ( chars [ i ] == _CHAR ) lineCount ++ ; } }
45652	public static String removeLeft ( final String value , final String prefix ) { return removeLeft ( value , prefix , _BOOL ) ; }
45654	public Builder removeAllRequiredAttributes ( ) { this . requiredAttributeOIDs . clear ( ) ; return this ; }
45663	protected void concatenate ( GenericObjectList objList ) { concatenate ( objList , _BOOL ) ; }
45740	public PdfCanvas openTag ( CanvasTag tag ) { if ( tag . getRole ( ) == _NULL ) return this ; return beginMarkedContent ( tag . getRole ( ) , tag . getProperties ( ) ) ; }
45766	boolean isValidated ( ) { return schema != _NULL ; }
45807	protected ZipEntry createZipEntry ( String name ) { return new ZipEntry ( name ) ; }
45853	public boolean isQuestionAvailable ( String uuid , String realm ) { Map map = getSecretQuestions ( uuid , realm ) ; return ( map != _NULL ) && ! map . isEmpty ( ) ; }
45861	@ Override public void accept ( final LongHashSet targetForOwnedSocketInodes ) { targetForOwnedSocketInodes . clear ( ) ; try { Files . list ( Paths . get ( _CHAR / proc / self / fd _CHAR ) ) . filter ( _NULL ) . mapToLong ( _NULL ) . filter ( _NULL ) . forEach ( _NULL ) ; } catch ( final IOException e ) { throw new UncheckedIOException ( e ) ; } }
45923	@ Override public boolean completeCycle ( ) { return cycleStats ; }
45930	public String debugDump ( int indent ) { int save = indentation ; indentation = indent ; String retval = this . debugDump ( ) ; indentation = save ; return retval ; }
45933	private boolean timeoutOccurred ( long endMaxTime ) { return TimeThread . getTime ( ) > endMaxTime ; }
45974	private static boolean isFractionalProhibitedAttr ( String attr ) { for ( String forbiddenAttr : FRACTIONAL_PROHIBITED_ATTRIBUTES ) { if ( forbiddenAttr . equalsIgnoreCase ( attr ) ) { return _BOOL ; } } return _BOOL ; }
46015	public static int rotateRight ( int i , int distance ) { return ( i >> > distance ) | ( i << - distance ) ; }
46277	public Name addAll ( Name suffix ) throws InvalidNameException { return addAll ( size ( ) , suffix ) ; }
46304	public int addPadding ( byte [ ] in , int inOff ) { byte code = ( byte ) ( in . length - inOff ) ; while ( inOff < in . length ) { in [ inOff ] = code ; inOff ++ ; } return code ; }
46517	public String toString ( ) { return ( _CHAR SAEPrincipal : _CHAR + name ) ; }
46546	public boolean handles ( Instruction i ) { return i . getIndex ( ) >= startPC . getIndex ( ) && i . getIndex ( ) < endPC . getIndex ( ) ; }
46564	public static void resetAllCounters ( ) { resetPreParseCount ( ) ; resetPreOperationCount ( ) ; resetPostOperationCount ( ) ; resetPostResponseCount ( ) ; resetPostSynchronizationCount ( ) ; resetSearchEntryCount ( ) ; resetSearchReferenceCount ( ) ; resetSubordinateModifyDNCount ( ) ; resetIntermediateResponseCount ( ) ; resetPostConnectCount ( ) ; resetPostDisconnectCount ( ) ; resetLDIFImportCount ( ) ; resetLDIFExportCount ( ) ; }
46605	public String productShortName ( ) { return properties . getProperty ( _CHAR product . name . short _CHAR ) ; }
46616	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
46621	private void addGroups ( ) throws Exception { TestCaseUtils . addEntries ( _CHAR dn : cn = Test Group , o = test _CHAR , _CHAR objectClass : top _CHAR , _CHAR objectClass : groupOfUniqueNames _CHAR , _CHAR cn : Test Group _CHAR , _CHAR uniqueMember : o = test _CHAR , _CHAR _CHAR , _CHAR dn : cn = Example Group , o = test _CHAR , _CHAR objectClass : top _CHAR , _CHAR objectClass : groupOfUniqueNames _CHAR , _CHAR cn : Example Group _CHAR , _CHAR uniqueMember : dc = example , dc = com _CHAR ) ; }
46623	public static boolean isTablet ( Context context ) { return ( context . getResources ( ) . getConfiguration ( ) . screenLayout & Configuration . SCREENLAYOUT_SIZE_MASK ) >= Configuration . SCREENLAYOUT_SIZE_LARGE ; }
46711	@ Override public Modification toModification ( ) throws LDAPException { return new Modification ( modificationType , attribute . toAttribute ( ) ) ; }
46856	public String toXMLString ( boolean includeNS , boolean declareNS ) throws FSMsgException { return toXMLString ( includeNS , declareNS , _BOOL ) ; }
46879	public static final String createXPATHWarning ( String msgKey , Object args [ ] ) { return createXPATHMsg ( XPATHBundle , msgKey , args ) ; }
46901	public static SimpleBindRequest newSimpleBindRequest ( ) { return new SimpleBindRequestImpl ( _CHAR _CHAR , EMPTY_BYTES ) ; }
46983	public Status createStatus ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS , value ) ; if ( obj == _NULL ) { return new StatusImpl ( value ) ; } else { return ( Status ) obj ; } }
47007	public static SimplePagedResultsControl newControl ( final boolean isCritical , final int size , final ByteString cookie ) { Reject . ifNull ( cookie ) ; return new SimplePagedResultsControl ( isCritical , size , cookie ) ; }
47154	public void logPurchase ( BigDecimal purchaseAmount , Currency currency ) { logPurchase ( purchaseAmount , currency , _NULL ) ; }
47180	public static EditStatus newInstance ( String token ) { EditStatus fragment = new EditStatus ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_TOKEN , token ) ; fragment . setArguments ( args ) ; return fragment ; }
47183	public SOAPElement create ( String localName ) throws SOAPException { return soapFactory . createElement ( localName ) ; }
47242	public int processBlock ( byte [ ] in , int inOff , byte [ ] out , int outOff ) throws DataLengthException , IllegalStateException { return ( encrypting ) ? encryptBlock ( in , inOff , out , outOff ) : decryptBlock ( in , inOff , out , outOff ) ; }
47369	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { Token created = adapter . create ( token ) ; handler . processResults ( created ) ; }
47420	public void addSigner ( PrivateKey key , byte [ ] subjectKeyID , String encryptionOID , String digestOID , CMSAttributeTableGenerator signedAttrGen , CMSAttributeTableGenerator unsignedAttrGen ) throws IllegalArgumentException { doAddSigner ( key , subjectKeyID , encryptionOID , digestOID , signedAttrGen , unsignedAttrGen , _NULL ) ; }
47452	public boolean containsValue ( Attribute attribute ) { return attribute != _NULL && attribute instanceof Attribute && attribute . equals ( attrMap . get ( ( ( Attribute ) attribute ) . getCategory ( ) ) ) ; }
47460	public boolean addStatement ( Statement statement ) { boolean addedStmt = _BOOL ; if ( statement != _NULL ) { super . addStatement ( statement ) ; addedStmt = _BOOL ; } return addedStmt ; }
47500	public void destroy ( ) throws LifecycleException { getServer ( ) ; server . destroy ( ) ; }
47558	public void pack ( ) { if ( popup != _NULL ) { Dimension pref = getPreferredSize ( ) ; if ( pref == _NULL || pref . width != getWidth ( ) || pref . height != getHeight ( ) ) { showPopup ( ) ; } else { validate ( ) ; } } }
47618	public String encode ( final String pString , final String charset ) throws EncoderException { if ( pString == _NULL ) { return _NULL ; } try { return encodeText ( pString , charset ) ; } catch ( UnsupportedEncodingException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
47624	private static void insertValue ( final Map < String , List < String >> paramsMap , final String paramVal , final String parameterName ) { if ( paramVal != _NULL ) { List < String > list = new ArrayList < > ( ) ; list . add ( paramVal ) ; paramsMap . put ( parameterName , list ) ; } }
47757	public static PasswordModifyExtendedResult copyOfPasswordModifyExtendedResult ( final PasswordModifyExtendedResult result ) { return new PasswordModifyExtendedResultImpl ( result ) ; }
47922	public boolean implies ( Permission permission ) { return all_allowed ; }
47944	public static void readFully ( InputStream in , byte [ ] dst ) throws IOException { readFully ( in , dst , _NUM , dst . length ) ; }
48003	public void invokePostSynchronizationModifyDNPlugins ( PostSynchronizationModifyDNOperation modifyDNOperation ) { for ( DirectoryServerPlugin p : postSynchronizationModifyDNPlugins ) { try { p . doPostSynchronization ( modifyDNOperation ) ; } catch ( Exception e ) { logException ( modifyDNOperation , p , e , ERR_PLUGIN_POST_SYNCHRONIZATION_PLUGIN_EXCEPTION ) ; } } }
48017	public CertificatePinner certificatePinner ( ) { return certificatePinner ; }
48036	public static List convertJAXBToElement ( List jaxbObjs ) throws JAXBException { List result = new ArrayList ( ) ; if ( jaxbObjs != _NULL && ! jaxbObjs . isEmpty ( ) ) { Iterator iter = jaxbObjs . iterator ( ) ; while ( iter . hasNext ( ) ) { result . add ( convertJAXBToElement ( iter . next ( ) ) ) ; } } return result ; }
48054	private boolean isScriptOwnMethodCall ( Object receiver , String method ) { if ( ! ( receiver instanceof Script ) ) { return _BOOL ; } final Method [ ] scriptOwnMethods = receiver . getClass ( ) . getDeclaredMethods ( ) ; for ( Method declaredMethod : scriptOwnMethods ) { if ( declaredMethod . getName ( ) . equals ( method ) ) { return _BOOL ; } } return _BOOL ; }
48219	public static int registerSystemFontDirectories ( ) { return fontRegisterProvider . registerSystemFontDirectories ( ) ; }
48222	public StatusCode createStatusCode ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_CODE , value ) ; if ( obj == _NULL ) { return new StatusCodeImpl ( value ) ; } else { return ( StatusCode ) obj ; } }
48284	private void checkGenerationId ( ) { if ( localGenerationId <= _NUM ) { oldGenerationId = replicationServerDomain . changeGenerationId ( generationId ) ; return ; } if ( generationId > _NUM && generationId != localGenerationId ) { logger . warn ( WARN_BAD_GENERATION_ID_FROM_RS , serverId , session . getReadableRemoteAddress ( ) , generationId , getBaseDN ( ) , getReplicationServerId ( ) , localGenerationId ) ; } }
48336	public void applyPattern ( String pattern ) { ndf . applyPattern ( pattern ) ; }
48373	public static KeyManager [ ] wrap ( KeyManager [ ] keyManagers , SortedSet < String > aliases ) { return wrap ( keyManagers , aliases , _CHAR [ unknown ] _CHAR ) ; }
48401	public void run ( ) throws ArgumentException { run ( _BOOL ) ; }
48476	private void maybeCompileToBytecode ( MethodHandle invoker ) { final int EAGER_COMPILE_ARITY_LIMIT = _NUM ; if ( targetType == targetType . erase ( ) && targetType . parameterCount ( ) < EAGER_COMPILE_ARITY_LIMIT ) { invoker . form . compileToBytecode ( ) ; } }
48480	CodeStream put11 ( final int b1 , final int b2 ) { ensureCapacity ( _NUM ) ; _data [ _length ++ ] = ( byte ) ( b1 & _NUM ) ; _data [ _length ++ ] = ( byte ) ( b2 & _NUM ) ; return this ; }
48493	public final long determinant ( PlaPointInt p_other ) { return ( long ) v_x * p_other . v_y - ( long ) v_y * p_other . v_x ; }
48528	public boolean includeObjectClasses ( ) { return includeObjectClasses ; }
48660	private static boolean isAccentColorTinted ( View view ) { return view instanceof EditText ; }
48673	@ Override public void onPause ( ) { super . onPause ( ) ; mWebView . onPause ( ) ; }
48677	@ Override protected void doCatch ( Throwable throwable ) { exceptionHandler . handle ( throwable , getResponse ( ) ) ; }
48702	public void removeEditor ( ) { if ( editor != _NULL ) { unconfigureEditor ( ) ; comboBox . remove ( editor ) ; editor = _NULL ; } }
48782	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { return execute ( xctxt , _BOOL ) ; }
48803	private StringBuilder encodeProduct ( StringBuilder tokens ) { ListIterator it = productTokens . listIterator ( ) ; while ( it . hasNext ( ) ) { tokens . append ( ( String ) it . next ( ) ) ; } return tokens ; }
48824	public void start_scope ( LogfileScope p_logfile_scope , int p_int_value ) { start_scope ( p_logfile_scope ) ; add_int ( p_int_value ) ; }
48828	public static Pose matrixToPose ( Matrix4 m ) { Vector3 p = m . getTranslation ( ) ; Quaternion q = new Quaternion ( ) ; q . fromMatrix ( m ) ; q . conjugate ( ) ; return new Pose ( p , q ) ; }
48889	private void showAverageClicked ( ) { boolean showAverages = showAveragesMenu . isSelected ( ) ; setChOperationsToDisplay ( chOperations , showAverages ) ; updateTableSizes ( ) ; }
48897	protected void autoScrollUp ( ) { int index = list . getSelectedIndex ( ) ; if ( index > _NUM ) { list . setSelectedIndex ( index - _NUM ) ; list . ensureIndexIsVisible ( index - _NUM ) ; } }
48968	public static String ensureRight ( final String value , final String suffix , boolean caseSensitive ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return endsWith ( value , suffix , caseSensitive ) ? value : append ( value , suffix ) ; }
49076	public static < T > T checkNotNull ( T reference ) { if ( reference == _NULL ) { throw new NullPointerException ( ) ; } return reference ; }
49126	private boolean is ( int flags ) { return ( m_flags & flags ) != _NUM ; }
49179	public static boolean isEncoded ( final HttpEntity entity ) { final Header contentType = entity . getContentType ( ) ; return ( contentType != _NULL && contentType . getValue ( ) . equalsIgnoreCase ( CONTENT_TYPE ) ) ; }
49217	public void writeExif ( InputStream jpegStream , OutputStream exifOutStream ) throws IOException { if ( jpegStream == _NULL || exifOutStream == _NULL ) { throw new IllegalArgumentException ( NULL_ARGUMENT_STRING ) ; } OutputStream s = getExifWriterStream ( exifOutStream ) ; doExifStreamIO ( jpegStream , s ) ; s . flush ( ) ; }
49276	@ Override public int show ( final FragmentTransaction transaction , final String tag ) { return delegate . show ( transaction , tag ) ; }
49306	public boolean isIPAddress ( ) { return addressType != HOSTNAME ; }
49311	public String waitForConfigChange ( ) throws InterruptedException { logger . message ( _CHAR Entering ConfigChangeListener . waitForConfigChange ( ) _CHAR ) ; String msg = _NULL ; try { msg = configChangedQueue . take ( ) ; } catch ( final InterruptedException e ) { logger . warning ( _CHAR Thread waiting for config change has been interrupted . '' ) ; throw e ; } logger . message ( _CHAR Exiting ConfigChangeListener . waitForConfigChange , returning _CHAR + msg ) ; return msg ; }
49322	public static void main ( String [ ] args ) { MakeLDIF makeLDIF = new MakeLDIF ( ) ; int returnCode = makeLDIF . makeLDIFMain ( args ) ; if ( returnCode != _NUM ) { System . exit ( filterExitCode ( returnCode ) ) ; } }
49351	public void unconfigureArrowButton ( ) { if ( arrowButton != _NULL ) { arrowButton . removeMouseListener ( popup . getMouseListener ( ) ) ; arrowButton . removeMouseMotionListener ( popup . getMouseMotionListener ( ) ) ; } }
49356	protected void removeIconFor ( JInternalFrame f ) { JInternalFrame . JDesktopIcon di = f . getDesktopIcon ( ) ; Container c = di . getParent ( ) ; if ( c != _NULL ) { c . remove ( di ) ; c . repaint ( di . getX ( ) , di . getY ( ) , di . getWidth ( ) , di . getHeight ( ) ) ; } }
49393	protected void expandParentAndReceiver ( ) { TreeStateNode parent = ( TreeStateNode ) getParent ( ) ; if ( parent != _NULL ) parent . expandParentAndReceiver ( ) ; expand ( ) ; }
49454	public void postDeregister ( ) { }
49479	public void start ( Future < ? > finishFutureEvent ) { this . finishFutureEvent = finishFutureEvent ; this . startTime = Time . currentTimeMillis ( ) ; this . started = _BOOL ; resetWait ( ) ; }
49483	protected void handleRestricted ( File directory , int depth , Collection < T > results ) throws IOException { }
49496	public boolean isInDefaultEventSet ( ) { return inDefaultEventSet ; }
49515	public boolean adminActionRequired ( ) { return adminActionRequired ; }
49519	protected void paintBorder ( Graphics g ) { if ( isBorderPainted ( ) ) { super . paintBorder ( g ) ; } }
49607	public StringBuilder encodeBody ( StringBuilder buffer ) { buffer . append ( protocol ) ; if ( parameters != _NULL && ! parameters . isEmpty ( ) ) { buffer = buffer . append ( SEMICOLON ) ; buffer = parameters . encode ( buffer ) ; } return buffer ; }
49703	public void start_scope ( LogfileScope p_logfile_scope , PlaPointFloat p_start_corner ) { start_scope ( p_logfile_scope ) ; add_corner ( p_start_corner ) ; }
49748	private static QueryResponseHandler createPagingHandler ( QueryResourceHandler handler , QueryRequest request ) { if ( isPagingRequested ( request ) ) { return new PagingQueryResponseHandler ( new QueryResponseHandler ( handler ) , Math . max ( _NUM , request . getPageSize ( ) ) , Math . max ( _NUM , request . getPagedResultsOffset ( ) ) ) ; } else { return new QueryResponseHandler ( handler ) ; } }
49927	public synchronized void login ( String username , String password , String language ) throws XmlRpcFault { Map < ? , ? > response = invoke ( _CHAR LogIn _CHAR , username , password , language , useragent ) ; token = response . get ( _CHAR token _CHAR ) . toString ( ) ; }
49992	@ SuppressLint ( _CHAR ClickableViewAccessibility _CHAR ) @ Override public boolean onTouchEvent ( MotionEvent ev ) { return _BOOL ; }
50063	public void removeHeader ( String name ) { for ( int i = _NUM ; i < headers . size ( ) ; i ++ ) { MimeHeader hdr = ( MimeHeader ) headers . elementAt ( i ) ; if ( hdr . getName ( ) . equalsIgnoreCase ( name ) ) headers . removeElementAt ( i -- ) ; } }
50073	public ByteVector putByte ( final int b ) { int length = this . length ; if ( length + _NUM > data . length ) { enlarge ( _NUM ) ; } data [ length ++ ] = ( byte ) b ; this . length = length ; return this ; }
50158	public static ExternalSASLBindRequest copyOfExternalSASLBindRequest ( final ExternalSASLBindRequest request ) { return new ExternalSASLBindRequestImpl ( request ) ; }
50162	public Builder add ( String line ) { int index = line . indexOf ( _CHAR : _CHAR ) ; if ( index == - _NUM ) { throw new IllegalArgumentException ( _CHAR Unexpected header : _CHAR + line ) ; } return add ( line . substring ( _NUM , index ) . trim ( ) , line . substring ( index + _NUM ) ) ; }
50201	public static boolean isFileTypeSupported ( int fileType ) { List providers = getMidiFileWriters ( ) ; for ( int i = _NUM ; i < providers . size ( ) ; i ++ ) { MidiFileWriter writer = ( MidiFileWriter ) providers . get ( i ) ; if ( writer . isFileTypeSupported ( fileType ) ) { return _BOOL ; } } return _BOOL ; }
50208	public static boolean isPattern ( String pattern ) { return pattern . indexOf ( _CHAR ) != - _NUM || pattern . indexOf ( _CHAR ) != - _NUM ; }
50283	public int hashCode ( ) { return name . hashCode ( ) ; }
50310	protected MouseInputAdapter createBorderListener ( JInternalFrame w ) { return new BorderListener1 ( ) ; }
50357	public boolean matchesBaseAndScope ( DN baseDN , SearchScope scope ) { return dn . isInScopeOf ( baseDN , scope ) ; }
50362	@ Override public ConnectionChangeRecordWriter writeComment ( final CharSequence comment ) { Reject . ifNull ( comment ) ; return this ; }
50424	public int viewToModel ( float fx , float fy , Shape a , Position . Bias [ ] bias ) { return super . viewToModel ( fx , fy , adjustAllocation ( a ) , bias ) ; }
50530	public boolean isEmpty ( ) { return rdns . isEmpty ( ) ; }
50562	private boolean invalidated ( int index , int prevTakeIndex , long dequeues , int length ) { if ( index < _NUM ) return _BOOL ; int distance = index - prevTakeIndex ; if ( distance < _NUM ) distance += length ; return dequeues > distance ; }
50731	public static void main ( String [ ] args ) throws Exception { File workDir = new File ( System . getProperty ( _CHAR user . dir _CHAR ) ) ; try ( GitVersionCalculator jgitver = GitVersionCalculator . location ( workDir ) . setMavenLike ( _BOOL ) ) { System . out . println ( jgitver . getVersion ( ) ) ; } }
50751	public LogoutRequest createLogoutRequest ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_REQUEST , value ) ; if ( obj == _NULL ) { return new LogoutRequestImpl ( value ) ; } else { return ( LogoutRequest ) obj ; } }
50775	public static byte [ ] encodeBase64 ( final byte [ ] binaryData , final boolean isChunked , final boolean urlSafe ) { return encodeBase64 ( binaryData , isChunked , urlSafe , Integer . MAX_VALUE ) ; }
50802	public void changed_area_clear ( ) { changed_area . clear ( get_layer_count ( ) ) ; }
50870	public boolean isTearOff ( ) { throw new Error ( _CHAR boolean isTearOff ( ) { } not yet implemented _CHAR ) ; }
50983	public String toString ( ) { return super . toString ( ) + ( _message == _NULL ? _CHAR _CHAR : _CHAR [ message : _CHAR + _message + _CHAR ] _CHAR ) ; }
51025	public void selectAllAccessibleSelection ( ) { TreeModel model = JTree . this . getModel ( ) ; if ( model != _NULL ) { Object [ ] objPath = { model . getRoot ( ) } ; if ( objPath [ _NUM ] == _NULL ) return ; TreePath path = new TreePath ( objPath ) ; JTree . this . addSelectionPath ( path ) ; } }
51063	private void increaseUseCount ( ) { if ( m_vec2 != _NULL ) m_useCount2 ++ ; }
51079	private void configureButton ( JButton button ) { Font buttonFont = ( Font ) DefaultLookup . get ( optionPane , this , _CHAR OptionPane . buttonFont _CHAR ) ; if ( buttonFont != _NULL ) { button . setFont ( buttonFont ) ; } }
51096	public void removeRelayState ( String requestID ) { relayStateMap . remove ( requestID ) ; }
51131	public static char [ ] convertFromUtf32 ( int codePoint ) { if ( codePoint < _NUM ) { return new char [ ] { ( char ) codePoint } ; } codePoint -= _NUM ; return new char [ ] { ( char ) ( codePoint / _NUM + _NUM ) , ( char ) ( codePoint % _NUM + _NUM ) } ; }
51173	@ Override public void removeAttribute ( String name ) { if ( ! removeSpecial ( name ) ) getRequest ( ) . removeAttribute ( name ) ; }
51178	@ After public void unregisterIdlingResource ( ) { Espresso . unregisterIdlingResources ( mAddTaskIntentsTestRule . getActivity ( ) . getCountingIdlingResource ( ) ) ; }
51240	public static final Index createTestIndexWithBulkDataHit ( ) { Index index = new Index ( _CHAR myindexbulkdata _CHAR ) ; index . setTable ( DB , _CHAR mytable _CHAR ) ; ArrayList < IndexField > fields = new ArrayList < > ( ) ; fields . add ( new IndexField ( _CHAR field1 _CHAR ) ) ; index . setFields ( fields ) ; index . isUnique ( _BOOL ) ; return index ; }
51244	public boolean implies ( Permission permission ) { if ( ! ( permission instanceof DelegationPermission ) ) return _BOOL ; synchronized ( this ) { for ( Permission x : perms ) { if ( x . implies ( permission ) ) return _BOOL ; } } return _BOOL ; }
51308	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; updateMaskIfNecessary ( ) ; }
51315	public final String createMessage ( String msgKey , Object args [ ] ) { if ( m_resourceBundle == _NULL ) m_resourceBundle = loadResourceBundle ( m_resourceBundleName ) ; if ( m_resourceBundle != _NULL ) { return createMsg ( m_resourceBundle , msgKey , args ) ; } else return _CHAR Could not load the resource bundles : _CHAR + m_resourceBundleName ; }
51365	public void addAlertGenerator ( AlertGenerator generator ) { synchronized ( alertGenerators ) { if ( ! alertGenerators . contains ( generator ) ) { alertGenerators . add ( generator ) ; } } }
51378	public boolean shouldYieldConnection ( SQLiteConnection connection , int connectionFlags ) { synchronized ( mLock ) { if ( ! mAcquiredConnections . containsKey ( connection ) ) { throw new IllegalStateException ( _CHAR Can not perform this operation _CHAR + _CHAR because the specified connection was not acquired _CHAR + _CHAR from this pool or has already been released . '' ) ; } if ( ! mIsOpen ) { return _BOOL ; } return isSessionBlockingImportantConnectionWaitersLocked ( connection . isPrimaryConnection ( ) , connectionFlags ) ; } }
51424	private void repaint ( long delay ) { if ( container != _NULL && fBounds != _NULL ) { container . repaint ( delay , fBounds . x , fBounds . y , fBounds . width , fBounds . height ) ; } }
51429	void unexecuteNSDecls ( TransformerImpl transformer ) throws TransformerException { unexecuteNSDecls ( transformer , _NULL ) ; }
51461	public static Border createEtchedBorder ( Color highlight , Color shadow ) { return new EtchedBorder ( highlight , shadow ) ; }
51483	public String encode ( final String value , final String charset ) throws EncoderException { if ( value == _NULL ) { return _NULL ; } try { return encodeText ( value , charset ) ; } catch ( UnsupportedEncodingException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
51578	public static final String createXMLMessage ( String msgKey , Object args [ ] ) { return createMsg ( XMLBundle , msgKey , args ) ; }
51616	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR CoyotePrincipal [ _CHAR ) ; sb . append ( this . name ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
51617	public void _read ( InputStream input ) { value = input . read_float ( ) ; }
51657	private void assertNewAlertsGenerated ( int oldAlertCount , int expectedNbNewAlerts ) { assertEquals ( DummyAlertHandler . getAlertCount ( ) , oldAlertCount + expectedNbNewAlerts , _CHAR An alert was not generated when resolving conflicts _CHAR ) ; }
51665	public static String toAsciiString ( byte [ ] raw ) { return new String ( toAsciiChars ( raw ) ) ; }
51667	public void printStats ( ) { if ( table . size ( ) != _NUM ) { FSAssertionManager . assrtStats . record ( _CHAR Number of assertion in table for provider '' + providerId + '' under realm '' + realm + '' : '' + table . size ( ) ) ; } else { FSAssertionManager . assrtStats . record ( _CHAR No assertion found in table for provider '' + providerId + '' under realm '' + realm + '' . '' ) ; } }
51766	@ Override public void write ( byte [ ] b , int off , int len ) { for ( OutputStream s : targetStreams ) { try { s . write ( b , off , len ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
51781	public Object encode ( Object raw ) throws EncoderException { if ( ! ( raw instanceof byte [ ] ) ) { throw new EncoderException ( _CHAR argument not a byte array _CHAR ) ; } return toAsciiChars ( ( byte [ ] ) raw ) ; }
51791	public static AdditionalLogItem keyOnly ( final Class < ? > source , final String key ) { Reject . ifNull ( source , key ) ; return new AdditionalLogItem ( source , key , _NULL , _BOOL ) ; }
51802	public static int rotateLeft ( int i , int distance ) { return ( i << distance ) | ( i >> > - distance ) ; }
51862	protected void addSystemMenuItems ( JMenu systemMenu ) { }
51895	public final boolean peek ( ) { return m_values [ m_index ] ; }
51954	public synchronized E peek ( ) { int len = size ( ) ; if ( len == _NUM ) throw new EmptyStackException ( ) ; return elementAt ( len - _NUM ) ; }
52041	public PdfCanvas curveTo ( double x2 , double y2 , double x3 , double y3 ) { contentStream . getOutputStream ( ) . writeDouble ( x2 ) . writeSpace ( ) . writeDouble ( y2 ) . writeSpace ( ) . writeDouble ( x3 ) . writeSpace ( ) . writeDouble ( y3 ) . writeSpace ( ) . writeBytes ( v ) ; return this ; }
52083	@ Override public String encodeRedirectURL ( String url ) { if ( isEncodeable ( toAbsolute ( url ) ) ) { return ( toEncoded ( url , request . getSessionInternal ( ) . getIdInternal ( ) ) ) ; } else { return ( url ) ; } }
52167	public void append ( Printable painter , PageFormat page ) { mPages . addElement ( new BookPage ( painter , page ) ) ; }
52197	public org . w3c . dom . Element signWithSAMLToken ( org . w3c . dom . Document doc , java . security . cert . Certificate cert , String assertionID , java . lang . String algorithm , java . util . List ids ) throws XMLSignatureException { return _NULL ; }
52230	public boolean isFromWithParam ( ) { return m_isFromWithParam ; }
52338	public void change_side ( PlaPointInt p_pole ) { on_front = ! on_front ; if ( location != _NULL ) location = location . mirror_vertical ( p_pole ) ; }
52377	public boolean verify ( PublicKey key , String sigProvider ) throws NoSuchAlgorithmException , NoSuchProviderException , CMSException { return verify ( key , CMSUtils . getProvider ( sigProvider ) ) ; }
52469	private Object doPrivileged ( final String methodName , final Object [ ] params ) { try { return invokeMethod ( context , methodName , params ) ; } catch ( Throwable t ) { ExceptionUtils . handleThrowable ( t ) ; throw new RuntimeException ( t . getMessage ( ) , t ) ; } }
52605	public static Object convertInputStreamToJAXB ( InputStream is ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( is ) ) ) ; }
52661	public void bindKeyStore ( final KeyStoreService keyStoreService ) { this . keyStore = keyStoreService ; }
52707	public boolean isSendWasCalled ( ) { return this . sendWasCalled ; }
52824	@ Override public HijrahDate dateYearDay ( Era era , int yearOfEra , int dayOfYear ) { return dateYearDay ( prolepticYear ( era , yearOfEra ) , dayOfYear ) ; }
52831	@ Override public int hashCode ( ) { rwlock . readLock ( ) . lock ( ) ; int h = _NUM ; try { Iterator i = entrySet ( ) . iterator ( ) ; while ( i . hasNext ( ) ) { h += i . next ( ) . hashCode ( ) ; } } finally { rwlock . readLock ( ) . unlock ( ) ; } return h ; }
52844	public boolean removeListener ( Subject adminSubject , String url ) throws EntitlementException { if ( registry != _NULL ) { return registry . removeListener ( adminSubject , url ) ; } return _BOOL ; }
52863	public byte [ ] computeUserPassword ( byte [ ] ownerPassword ) { byte [ ] userPassword = _NULL ; if ( securityHandler instanceof StandardHandlerUsingStandard40 ) { userPassword = ( ( StandardHandlerUsingStandard40 ) securityHandler ) . computeUserPassword ( ownerPassword , getPdfObject ( ) ) ; } return userPassword ; }
52884	public void write ( int b ) throws IOException { out . write ( b ) ; }
52908	public int hashCode ( ) { return name . hashCode ( ) ; }
52993	public boolean hasVaryAll ( ) { return varyFields . contains ( _CHAR * _CHAR ) ; }
53006	public int viewToModel ( float x , float y , Shape a , Position . Bias [ ] bias ) { if ( ! isAllocationValid ( ) ) { Rectangle alloc = a . getBounds ( ) ; setSize ( alloc . width , alloc . height ) ; } return super . viewToModel ( x , y , a , bias ) ; }
53138	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException , InvalidObjectException { s . defaultReadObject ( ) ; if ( firstDayOfWeek == _NULL ) { throw new InvalidObjectException ( _CHAR firstDayOfWeek is _NULL _CHAR ) ; } if ( minimalDays < _NUM || minimalDays > _NUM ) { throw new InvalidObjectException ( _CHAR Minimal number of days is invalid _CHAR ) ; } }
53285	public static byte [ ] serializeToBuffer ( XMPMeta xmp , SerializeOptions options ) throws XMPException { assertImplementation ( xmp ) ; return XMPSerializerHelper . serializeToBuffer ( ( XMPMetaImpl ) xmp , options ) ; }
53322	public static PasswordExpiringResponseControl newControl ( final int secondsUntilExpiration ) { return new PasswordExpiringResponseControl ( _BOOL , secondsUntilExpiration ) ; }
53430	public boolean isHostname ( ) { return addressType == HOSTNAME ; }
53432	public void ifNull ( final Label label ) { mv . visitJumpInsn ( Opcodes . IFNULL , label ) ; }
53518	@ Deprecated public boolean inside ( int x , int y ) { return contains ( ( double ) x , ( double ) y ) ; }
53555	protected void togglePopup ( ) { if ( isVisible ( ) ) { hide ( ) ; } else { show ( ) ; } }
53708	public static boolean useImpliedResource ( ) { return useImpliedRes ; }
53758	public Object peek ( ) { try { return m_map [ m_firstFree - _NUM ] ; } catch ( ArrayIndexOutOfBoundsException e ) { throw new EmptyStackException ( ) ; } }
53784	public E element ( ) { return getFirst ( ) ; }
53861	public void run ( boolean canUseStartTLS ) throws ArgumentException { resetBeforeRun ( ) ; resolveHostName ( ) ; resolveConnectionType ( canUseStartTLS ) ; resolvePortNumber ( ) ; resolveTrustAndKeyManagers ( ) ; resolveCredentialLogin ( ) ; resolveCredentialPassword ( ) ; resolveConnectTimeout ( ) ; }
53862	static SearchBuffer obtainSearchBuffer ( ) { SearchBuffer sb ; try { if ( ! searchBuffers . empty ( ) ) { sb = searchBuffers . pop ( ) ; } else { sb = new SearchBuffer ( ) ; } } catch ( EmptyStackException ese ) { sb = new SearchBuffer ( ) ; } return sb ; }
53884	public void write ( int b ) throws IOException { out . write ( b ) ; written ++ ; }
54030	public void paintSplitPaneDragDivider ( SynthContext context , Graphics g , int x , int y , int w , int h , int orientation ) { paintBackground ( context , g , x , y , w , h , _NULL ) ; }
54042	public final void init ( KeyStore ks ) throws KeyStoreException { spiImpl . engineInit ( ks ) ; }
54081	public byte [ ] encode ( byte [ ] raw ) { return toAsciiBytes ( raw ) ; }
54089	public static String generateMessageHandleWithServerID ( ) { if ( random == _NULL ) { return _NULL ; } byte bytes [ ] = new byte [ SAML2Constants . ID_LENGTH ] ; random . nextBytes ( bytes ) ; String id = byteArrayToString ( bytes ) ; return embedServerID ( id ) ; }
54410	public static SearchResultEntry newSearchResultEntry ( final String name ) { final Entry entry = new LinkedHashMapEntry ( ) . setName ( name ) ; return new SearchResultEntryImpl ( entry ) ; }
54551	public String toString ( ) { return ( _CHAR SecurIDPrincipal : _CHAR + name ) ; }
54562	public static byte [ ] readFully ( InputStream in ) throws IOException { try { return readFullyNoClose ( in ) ; } finally { in . close ( ) ; } }
54639	public static void mergeIfAbsent ( Map < String , String > map , Map < String , String > toMerge ) { for ( Map . Entry < String , String > entry : toMerge . entrySet ( ) ) { putIfAbsent ( map , entry . getKey ( ) , entry . getValue ( ) ) ; ; } }
54676	public StringBuilder encodeBody ( StringBuilder retval ) { return retval . append ( Long . toString ( this . sequenceNumber ) ) ; }
54700	private static void addItemsToList ( int startIndex , int endIndex ) { for ( int i = startIndex ; i < endIndex ; i ++ ) { values . add ( new Integer ( i ) ) ; } }
54706	public JobService jobRangeByState ( String state , long from , long to , String order , Handler < AsyncResult < List < Job >> > handler ) { delegate . jobRangeByState ( state , from , to , order , handler ) ; return this ; }
54792	public boolean read ( ObjectInputStream p_object_stream ) { try { WindowSavedAttributes saved_attributes = ( WindowSavedAttributes ) p_object_stream . readObject ( ) ; setBounds ( saved_attributes . bounds ) ; setVisible ( saved_attributes . is_visible ) ; return _BOOL ; } catch ( Exception e ) { System . out . println ( _CHAR SelectParameterWindow . read : read failed _CHAR ) ; return _BOOL ; } }
54808	public org . w3c . dom . Element signWithBinarySecurityToken ( org . w3c . dom . Document doc , java . security . cert . Certificate cert , java . lang . String algorithm , java . util . List ids , java . lang . String referenceType ) throws XMLSignatureException { return _NULL ; }
54822	public void write ( ByteArrayOutputStream tagBuffer ) { setTextEncoding ( ID3TextEncodingConversion . getTextEncoding ( getHeader ( ) , getTextEncoding ( ) ) ) ; if ( ! ( ( TextEncodedStringNullTerminated ) getObject ( DataTypes . OBJ_DESCRIPTION ) ) . canBeEncoded ( ) ) { this . setTextEncoding ( ID3TextEncodingConversion . getUnicodeTextEncoding ( getHeader ( ) ) ) ; } super . write ( tagBuffer ) ; }
54853	public boolean isHandshakeOk ( ) { return handshakeOk ; }
54859	protected StringBuffer applyRules ( final Calendar calendar , final StringBuffer buf ) { return printer . applyRules ( calendar , buf ) ; }
54940	public int processBlock ( byte [ ] in , int inOff , byte [ ] out , int outOff ) throws DataLengthException , IllegalStateException { return ( encrypting ) ? encryptBlock ( in , inOff , out , outOff ) : decryptBlock ( in , inOff , out , outOff ) ; }
54975	public static boolean disable ( ) { return ! getInstanceInternal ( _BOOL ) . isRegistered ( ) ; }
54994	static boolean isActivelySelecting ( Spannable buffer ) { DragState [ ] ds ; ds = buffer . getSpans ( _NUM , buffer . length ( ) , DragState . class ) ; return ds . length > _NUM && ds [ _NUM ] . mIsActivelySelecting ; }
55015	public static int parseVersion ( String revision ) throws ConflictException { int ver =- _NUM ; try { ver = Integer . parseInt ( revision ) ; } catch ( NumberFormatException ex ) { throw new ConflictException ( _CHAR OrientDB repository expects revisions as int , _CHAR + _CHAR unable to parse passed revision : _CHAR + revision ) ; } return ver ; }
55122	void executeNSDecls ( TransformerImpl transformer ) throws TransformerException { executeNSDecls ( transformer , _NULL ) ; }
55154	private static byte [ ] longToByteArray ( long l ) { byte [ ] retVal = new byte [ _NUM ] ; for ( int i = _NUM ; i < _NUM ; i ++ ) { retVal [ i ] = ( byte ) l ; l >>= _NUM ; } return retVal ; }
55155	public boolean isEmpty ( ) { return values . isEmpty ( ) ; }
55173	public Dispatch < Object > createDispatch ( QName portName , JAXBContext context , Service . Mode mode , WebServiceFeature ... features ) { return delegate . createDispatch ( portName , context , mode , features ) ; }
55230	public void focusLost ( FocusEvent e ) { getHandler ( ) . focusLost ( e ) ; }
55245	public static void readFully ( InputStream in , byte [ ] dst ) throws IOException { readFully ( in , dst , _NUM , dst . length ) ; }
55291	public static void convertJAXBToOutputStream ( Object jaxbObj , OutputStream os ) throws JAXBException { Marshaller marshaller = jaxbContext . createMarshaller ( ) ; marshaller . setProperty ( PROP_JAXB_FORMATTED_OUTPUT , Boolean . TRUE ) ; marshaller . setProperty ( PROP_NAMESPACE_PREFIX_MAPPER , nsPrefixMapper ) ; marshaller . marshal ( jaxbObj , os ) ; }
55360	public static boolean hasVaryAll ( Response response ) { return hasVaryAll ( response . headers ( ) ) ; }
55449	public boolean isBase64 ( ) { return isBase64 ; }
55480	public boolean isRepair ( ) { return repair ; }
55488	public boolean isRightToLeft ( ) { return bidiBase . isRightToLeft ( ) ; }
55491	private void newClientWithFirstChanges ( ) throws Exception { debugInfo ( _CHAR Starting newClientWithFirstChanges _CHAR ) ; ServerState state = newServerState ( firstCSNServer1 , firstCSNServer2 ) ; newClientWithChanges ( state , secondCSNServer1 ) ; debugInfo ( _CHAR Ending newClientWithFirstChanges _CHAR ) ; }
55516	private int monthLength ( int month ) { int year = internalGet ( YEAR ) ; if ( internalGetEra ( ) == BCE ) { year = _NUM - year ; } return monthLength ( month , year ) ; }
55529	public synchronized void removeActionListener ( ActionListener l ) { if ( ( l != _NULL ) && ( getAction ( ) == l ) ) { setAction ( _NULL ) ; } else { listenerList . remove ( ActionListener . class , l ) ; } }
55646	public static CompoundBorder createCompoundBorder ( Border outsideBorder , Border insideBorder ) { return new CompoundBorder ( outsideBorder , insideBorder ) ; }
55836	public static final BigInteger determinant ( BigInteger p_x_1 , BigInteger p_y_1 , BigInteger p_x_2 , BigInteger p_y_2 ) { BigInteger tmp1 = p_x_1 . multiply ( p_y_2 ) ; BigInteger tmp2 = p_x_2 . multiply ( p_y_1 ) ; return tmp1 . subtract ( tmp2 ) ; }
55874	public void makeCurrentReadFrom ( EglSurfaceBase readSurface ) { mEglCore . makeCurrent ( mEGLSurface , readSurface . mEGLSurface ) ; }
55929	protected void showSystemMenu ( ) { }
56043	protected final String entryName ( final Entry entry ) { return entry . getName ( ) . rdn ( ) . getFirstAVA ( ) . getAttributeValue ( ) . toString ( ) ; }
56047	public static SmsRouteTreeBuilder filter ( String uriTemplate , Predicate < String > handlesFunction , Filter filter ) { return new SmsRouteTreeBuilder ( uriTemplate ) . handles ( handlesFunction ) . filtered ( filter ) ; }
56118	private void breakBarrier ( ) { generation . broken = _BOOL ; count = parties ; trip . signalAll ( ) ; }
56128	private boolean isServerToUninstall ( ServerDescriptor server ) { Boolean sameInstanceInstallPaths = isSameInstanceInstallPaths ( server ) ; return sameInstanceInstallPaths != _NULL ? sameInstanceInstallPaths : isSamePort ( server ) && isSameHostName ( server ) ; }
56192	public boolean isRowSelected ( int row ) { return listSelectionModel . isSelectedIndex ( row ) ; }
56208	boolean isAllReasons ( ) { return _reasons == allReasons . _reasons ? _BOOL : _BOOL ; }
56245	private boolean isConfidentialIntegrity ( ) { boolean ret = _BOOL ; final String qop = ( String ) saslServer . getNegotiatedProperty ( Sasl . QOP ) ; if ( qop . equalsIgnoreCase ( confidentiality ) || qop . equalsIgnoreCase ( integrity ) ) { ret = _BOOL ; } return ret ; }
56247	private void waitForConnectionToRs ( String testCase , FakeReplicationServer rs ) throws Exception { int nsec =- _NUM ; do { nsec ++ ; if ( nsec == _NUM ) { fail ( testCase + _CHAR : timeout waiting for domain connection to fake RS after '' + nsec + '' seconds . '' ) ; } Thread . sleep ( 1000 ) ; } while ( ! rs . isHandshakeOk ( ) ) ; }
56326	public static void processNotification ( String xml ) throws PolicyEvaluationException { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ResultsCacheUtil . processNotification ( ) : _CHAR + _CHAR recieved notification xml = _CHAR + xml ) ; } PolicyNotification pn = extractPolicyNotification ( xml ) ; if ( pn != _NULL ) { ResourceResultCache . processPolicyNotification ( pn ) ; } else { debug . error ( _CHAR ResultsCacheUtil . processPolicyNotification ( ) : _CHAR + _CHAR PolicyNotification is _NULL _CHAR ) ; } }
56331	public void paint ( Graphics g , Shape allocation ) { Container host = getContainer ( ) ; if ( host != _NULL && visible != ( ( JTextComponent ) host ) . isEditable ( ) ) { visible = ( ( JTextComponent ) host ) . isEditable ( ) ; } if ( ! isVisible ( ) ) { return ; } super . paint ( g , allocation ) ; }
