5	public void add ( E e ) { buffer [ write ] = e ; write = ( write + _NUM ) % maxSize ; if ( count == maxSize ) { read = ( read + _NUM ) % maxSize ; } else { count += _NUM ; } }
11	@ Subscribe ( threadMode = ThreadMode . MAIN ) public void onEventMainThread ( SetColorChangedListenerEvent event ) { if ( event . getId ( ) == mId ) { int screenOrientation = Util . getScreenOrientation ( mContext ) ; if ( mOrientation != screenOrientation ) { mOrientation = screenOrientation ; createTabs ( ) ; } mListener = event . getOnColorChangedListener ( ) ; } }
19	@ Override public XSModel load ( LSInput is ) { try { fGrammarPool . clear ( ) ; return ( ( XSGrammar ) fSchemaLoader . loadGrammar ( fSchemaLoader . dom2xmlInputSource ( is ) ) ) . toXSModel ( ) ; } catch ( Exception e ) { fSchemaLoader . reportDOMFatalError ( e ) ; return _NULL ; } }
118	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } committed = _BOOL ; }
173	public void updateUnreadLabel ( ) { int count = getUnreadMsgCountTotal ( ) ; if ( count > _NUM ) { unreadLabel . setText ( String . valueOf ( count ) ) ; unreadLabel . setVisibility ( View . VISIBLE ) ; } else { unreadLabel . setVisibility ( View . INVISIBLE ) ; } }
198	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( undoRedoObject != _NULL ) { if ( textField != _NULL ) { if ( undoRedoObject . getOldValue ( ) instanceof String ) { String oldValue = ( String ) undoRedoObject . getOldValue ( ) ; textField . setText ( oldValue ) ; } } } }
218	public void removeTransactionAfterEnd ( XtnEntry xtnEntry ) { try { xtnEntry . lock ( ) ; ( ( ConcurrentHashMap < ServerTransaction , XtnEntry > ) getXtnTable ( ) ) . remove ( xtnEntry . m_Transaction , xtnEntry ) ; m_TimedXtns . remove ( xtnEntry . m_Transaction ) ; } finally { xtnEntry . unlock ( ) ; } }
226	public Fraction abs ( ) { Fraction ret ; if ( numerator >= _NUM ) { ret = this ; } else { ret = negate ( ) ; } return ret ; }
231	private void ensureBufferAvailable ( TableBlock block ) throws IOException { if ( ! block . hasBuffer ( ) ) { synchronized ( this ) { if ( ! block . hasBuffer ( ) ) { ByteBuffer buffer = getBuffer ( ) ; block . setBuffer ( buffer ) ; } } } }
256	@ Override protected final boolean writeData ( ByteBuffer data ) { synchronized ( guard ) { GsServerPacket packet = sendMsgQueue . pollFirst ( ) ; if ( packet == _NULL ) { return _BOOL ; } packet . write ( this , data ) ; return _BOOL ; } }
400	public static String readFileToString ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toString ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
407	protected JSONObject readInputStream ( InputStream is ) throws IOException { String jsonString = readStreamToString ( is ) ; JSONObject jsonObject ; try { return new JSONObject ( jsonString ) ; } catch ( JSONException error ) { throw new IOException ( error . toString ( ) ) ; } }
607	public AudioInputStream synthesize ( Voice voice , AudioFileFormat aft , Element domElement ) throws Exception { if ( ! voice . hasVocalizationSupport ( ) ) return _NULL ; if ( domElement . hasAttribute ( _CHAR variant _CHAR ) ) { return synthesizeVariant ( aft , domElement ) ; } if ( f0ContourImposeSupport ) { return synthesizeImposedIntonation ( aft , domElement ) ; } return synthesizeVocalization ( aft , domElement ) ; }
617	public void writeChar ( char value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _CHAR ) ; this . dataOut . writeChar ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
652	public boolean isAllowed ( List < VersionData > versionList , VendorOptionVersion vendorOptionVersion ) { if ( ( versionList != _NULL ) && ( vendorOptionVersion != _NULL ) ) { for ( VersionData versionData : versionList ) { if ( vendorOptionVersion . isAllowed ( versionData ) ) { return _BOOL ; } } } return _BOOL ; }
662	@ Override public void close ( ) { try { if ( connection != _NULL ) { connection . close ( ) ; } } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
704	protected void sleepInbetweenRecoveryAttempts ( ) { if ( this . recoveryInterval > _NUM ) { try { Thread . sleep ( this . recoveryInterval ) ; } catch ( InterruptedException interEx ) { Thread . currentThread ( ) . interrupt ( ) ; } } }
802	private static int compareInt ( final int a , final int b ) { int result = _NUM ; if ( a > b ) { result = _NUM ; } else if ( a < b ) { result =- _NUM ; } return result ; }
895	public void toggleLockConstraints ( ConstraintWidget widget ) { int constraintsCreator = getMainConstraintsCreator ( widget ) ; if ( constraintsCreator == ConstraintAnchor . USER_CREATOR ) { setConstraintsCreator ( widget , ConstraintAnchor . AUTO_CONSTRAINT_CREATOR ) ; } else if ( constraintsCreator == ConstraintAnchor . AUTO_CONSTRAINT_CREATOR ) { setConstraintsCreator ( widget , ConstraintAnchor . USER_CREATOR ) ; } mSelection . selectionHasChanged ( ) ; }
960	private void decreaseCounter ( NotifyContext notifyContext ) { if ( notifyContext . countDec ( ) ) { try { _filterManager . invokeFilters ( FilterOperationCodes . AFTER_ALL_NOTIFY_TRIGGER , _NULL , notifyContext ) ; } catch ( Exception e ) { if ( _logger . isLoggable ( Level . FINE ) ) _logger . log ( Level . FINE , _CHAR Exception was thrown by filter on AFTER_ALL_NOTIFY_TRIGGER . '' , e ) ; } } }
971	private void initializeComponentGetters ( ) { mDownloadServiceConnection = newTransferenceServiceConnection ( ) ; if ( mDownloadServiceConnection != _NULL ) { bindService ( new Intent ( this , FileDownloader . class ) , mDownloadServiceConnection , Context . BIND_AUTO_CREATE ) ; } mUploadServiceConnection = newTransferenceServiceConnection ( ) ; if ( mUploadServiceConnection != _NULL ) { bindService ( new Intent ( this , FileUploader . class ) , mUploadServiceConnection , Context . BIND_AUTO_CREATE ) ; } }
1049	public static final Object [ ] trim ( Object [ ] a , int size ) { if ( a . length == size ) { return a ; } else { Object [ ] b = new Object [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , size ) ; return b ; } }
1052	@ Override public void onConfigurationChanged ( Configuration newConfig ) { super . onConfigurationChanged ( newConfig ) ; if ( this . appView == _NULL ) { return ; } PluginManager pm = this . appView . getPluginManager ( ) ; if ( pm != _NULL ) { pm . onConfigurationChanged ( newConfig ) ; } }
1145	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
1181	public void release ( MesosResource mesosResource ) { if ( mesosResource . isAtomic ( ) ) { releaseAtomicResource ( mesosResource ) ; return ; } else { releaseMergedResource ( mesosResource ) ; return ; } }
1207	public static void checkMethodSignature ( List < ExecutableElement > elements ) { for ( ExecutableElement element : elements ) { if ( element . getReturnType ( ) . getKind ( ) != TypeKind . VOID ) { throw new WrongReturnTypeException ( element ) ; } if ( ! element . getThrownTypes ( ) . isEmpty ( ) ) { throw new NoThrowsAllowedException ( element ) ; } } }
1316	private void startHotRefresh ( ) { try { String host = new URL ( mUri . toString ( ) ) . getHost ( ) ; String wsUrl = _CHAR ws : // '' + host + '' : 8082 '' ; mWXHandler . obtainMessage ( Constants . HOT_REFRESH_CONNECT , 0 , 0 , wsUrl ) . sendToTarget ( ) ; } catch ( MalformedURLException e ) { e . printStackTrace ( ) ; } }
1379	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
1414	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
1507	public void releaseAll ( ) { for ( ListenerPairing listener : myListeners ) { listener . dispose ( ) ; } myListeners . clear ( ) ; for ( CompositeListener listener : myCompositeListeners ) { listener . dispose ( ) ; } myCompositeListeners . clear ( ) ; }
1516	private static File constructFilePaths ( String file1 , String file2 ) { File newPath ; if ( file2 . startsWith ( file1 ) ) { newPath = new File ( file2 ) ; } else { newPath = new File ( file1 + _CHAR / _CHAR + file2 ) ; } return newPath ; }
1609	public static boolean isEmailRegistered ( String email ) { PersistenceManager pm = pmf . getPersistenceManager ( ) ; try { UserRecord user = findUserByEmail ( pm , email ) ; return user != _NULL ; } finally { pm . close ( ) ; } }
1629	public boolean hasAttributeWithValue ( final WebElement element , final String attribute , final String value ) { boolean result = _BOOL ; try { bobcatWait . withTimeout ( Timeouts . SMALL ) . until ( _NULL ) ; } catch ( TimeoutException e ) { result = _BOOL ; } return result ; }
1644	private void login ( ) { getCredentials ( ) ; disable ( ) ; try { connectAPI . login ( emailInput , passInput ) ; } catch ( BindingException e ) { e . printStackTrace ( ) ; } }
1679	public static byte [ ] decode ( byte [ ] source ) { byte [ ] decoded = _NULL ; try { decoded = decode ( source , _NUM , source . length , Base64 . NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : _CHAR IOExceptions only come from GZipping , which is turned off : _CHAR + ex . getMessage ( ) ; } return decoded ; }
1738	@ Override public void write ( int idx ) throws IOException { try { beforeWrite ( _NUM ) ; out . write ( idx ) ; afterWrite ( _NUM ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
1810	public static IntRange upTo ( int endpoint , BoundType boundType ) { switch ( boundType ) { case OPEN : return lessThan ( endpoint ) ; case CLOSED : return atMost ( endpoint ) ; default : throw new AssertionError ( ) ; } }
1829	private byte [ ] read ( FSDataInputStream channel , int size ) { byte [ ] byteBffer = new byte [ size ] ; try { channel . readFully ( byteBffer ) ; } catch ( Exception e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return byteBffer ; }
1996	public FTPReply sendSiteCommand ( String command ) throws IllegalStateException , IOException , FTPIllegalReplyException { synchronized ( lock ) { if ( ! connected ) { throw new IllegalStateException ( _CHAR Client not connected _CHAR ) ; } communication . sendFTPCommand ( _CHAR SITE _CHAR + command ) ; touchAutoNoopTimer ( ) ; return communication . readFTPReply ( ) ; } }
2091	public void delete ( int slot ) { currentBuff . lockFlushing ( ) ; try { for ( int i = slot + _NUM ; i < getNumRecords ( ) ; i ++ ) copyRecordWithoutLogging ( i , i - _NUM ) ; setNumRecordsWithoutLogging ( getNumRecords ( ) - _NUM ) ; } finally { currentBuff . unlockFlushing ( ) ; } }
2197	public static byte [ ] compressForZlib ( String stringToCompress ) { byte [ ] returnValues = _NULL ; try { returnValues = compressForZlib ( stringToCompress . getBytes ( _CHAR UTF - _NUM _CHAR ) ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return returnValues ; }
2279	protected void performHighlight ( Highlight h , MotionEvent e ) { if ( h == _NULL || h . equalTo ( mLastHighlighted ) ) { mChart . highlightValue ( _NULL , _BOOL ) ; mLastHighlighted = _NULL ; } else { mChart . highlightValue ( h , _BOOL ) ; mLastHighlighted = h ; } }
2290	public static IntBuffer createIntBuffer ( int ... data ) { if ( data == _NULL ) { return _NULL ; } IntBuffer buff = createIntBuffer ( data . length ) ; buff . clear ( ) ; buff . put ( data ) ; buff . flip ( ) ; return buff ; }
2307	public void deactivate ( ) { if ( myActive ) { getRenderingQueue ( ) . cancelAllUpdates ( ) ; ResourceNotificationManager manager = ResourceNotificationManager . getInstance ( myFile . getProject ( ) ) ; manager . removeListener ( this , myFacet , myFile , myConfiguration ) ; myConfigurationModificationCount = myConfiguration . getModificationCount ( ) ; myConfiguration . removeListener ( myConfigurationListener ) ; myActive = _BOOL ; } }
2339	public static boolean checkStorageAccessPermissions ( Context context ) { if ( android . os . Build . VERSION . SDK_INT >= android . os . Build . VERSION_CODES . M ) { String permission = _CHAR android . permission . READ_EXTERNAL_STORAGE _CHAR ; int res = context . checkCallingOrSelfPermission ( permission ) ; return ( res == PackageManager . PERMISSION_GRANTED ) ; } else { return _BOOL ; } }
2450	protected void writeNetscapeExt ( ) throws IOException { out . write ( _NUM ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeString ( _CHAR NETSCAPE _CHAR + _CHAR _NUM . _NUM _CHAR ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeShort ( repeat ) ; out . write ( _NUM ) ; }
2524	@ Override public Filter createLogicFilter ( List < Filter > filterList ) { OrImpl filter = _NULL ; if ( ( filterList == _NULL ) || ( filterList . size ( ) != _NUM ) ) { filter = new OrExtended ( ) ; } else { filter = new OrExtended ( filterList ) ; } return filter ; }
2525	public static void closeQuietly ( AutoCloseable closeable ) { try { if ( closeable != _NULL ) { closeable . close ( ) ; } } catch ( Exception e ) { logger . error ( _CHAR An error occurred closing statement . '' , e ) ; } }
2577	public static double mean ( double [ ] vector ) { double sum = _NUM ; if ( vector . length == _NUM ) { return _NUM ; } for ( double aVector : vector ) { sum += aVector ; } return sum / ( double ) vector . length ; }
2652	public static boolean isPortBusy ( int port , String bindAddr ) throws UnknownHostException { InetAddress inetBindAddr = bindAddr != _NULL ? InetAddress . getByName ( bindAddr ) : _NULL ; try { new ServerSocket ( port , _NUM , inetBindAddr ) . close ( ) ; } catch ( IOException ex ) { return _BOOL ; } return _BOOL ; }
2724	public synchronized boolean shouldWait ( List < String > targetNames ) throws InterruptedException { if ( _currentSpaceState == StartupState . LAST ) { return _BOOL ; } if ( ! _activeSpaces . isEmpty ( ) ) return _BOOL ; if ( _currentSpaceState == StartupState . UNINITIALIZED ) { if ( _spaceName . equals ( targetNames . get ( _NUM ) ) ) return _BOOL ; } return _BOOL ; }
2800	public boolean equals ( Object other ) { if ( ! ( other instanceof TObjectIntHashMap ) ) { return _BOOL ; } TObjectIntHashMap that = ( TObjectIntHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
2811	public static boolean hasComplexDataType ( DataType dataType ) { switch ( dataType ) { case ARRAY : case STRUCT : case MAP : return _BOOL ; default : return _BOOL ; } }
2870	public static < T extends TagValueUpdate > String toJson ( T tagUpdate ) { String result = _NULL ; try { result = mapper . writeValueAsString ( tagUpdate ) ; } catch ( JsonProcessingException e ) { log . error ( _CHAR Serializing of tagUpdate failed : _CHAR + e . getMessage ( ) ) ; } return result ; }
2929	public void showSvnProperties ( ISVNLocalResource resource ) throws SVNException { this . resource = resource ; if ( resource != _NULL ) { setContentDescription ( Policy . bind ( _CHAR SvnPropertiesView . titleWithArgument _CHAR , resource . getName ( ) ) ) ; } else { setContentDescription ( _CHAR _CHAR ) ; } refresh ( ) ; }
3017	private void closeWriterExecutionService ( ExecutorService service ) throws CarbonDataWriterException { try { service . shutdown ( ) ; service . awaitTermination ( _NUM , TimeUnit . DAYS ) ; } catch ( InterruptedException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; throw new CarbonDataWriterException ( e . getMessage ( ) ) ; } }
3070	public void writeShort ( short value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _SHORT ) ; this . dataOut . writeShort ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
3088	public static List < String > splitPath ( File file ) { List < String > output = new ArrayList < > ( ) ; File current = file ; while ( current != _NULL ) { output . add ( current . getName ( ) ) ; current = current . getParentFile ( ) ; } Collections . reverse ( output ) ; return output ; }
3183	public void insert ( int slot ) { currentBuff . lockFlushing ( ) ; try { for ( int i = getNumRecords ( ) ; i > slot ; i -- ) copyRecordWithoutLogging ( i - _NUM , i ) ; setNumRecordsWithoutLogging ( getNumRecords ( ) + _NUM ) ; } finally { currentBuff . unlockFlushing ( ) ; } }
3213	public void startPlaying ( String file ) { if ( this . readyPlayer ( file ) && this . player != _NULL ) { this . player . start ( ) ; this . setState ( STATE . MEDIA_RUNNING ) ; this . seekOnPrepared = _NUM ; } else { this . prepareOnly = _BOOL ; } }
3323	public static String describeElements ( @ Nullable PsiElement [ ] elements ) { if ( elements == _NULL ) { return _CHAR Empty _CHAR ; } StringBuilder sb = new StringBuilder ( ) ; for ( PsiElement target : elements ) { appendElementDescription ( sb , target ) ; } return sb . toString ( ) ; }
3373	@ Override public XSModel loadURI ( String uri ) { try { fGrammarPool . clear ( ) ; return ( ( XSGrammar ) fSchemaLoader . loadGrammar ( new XMLInputSource ( _NULL , uri , _NULL ) ) ) . toXSModel ( ) ; } catch ( Exception e ) { fSchemaLoader . reportDOMFatalError ( e ) ; return _NULL ; } }
3378	public ResultSet executeQuery ( ) throws GenericDataSourceException { try { _rs = _ps . executeQuery ( ) ; } catch ( SQLException sqle ) { this . checkLockWaitInfo ( sqle ) ; throw new GenericDataSourceException ( _CHAR SQL Exception while executing the following : '' + _sql , sqle ) ; } return _rs ; }
3384	public boolean isTimestampValid ( final long timestamp ) { this . equipmentLogger . trace ( _CHAR entering isTimestampValid ( ) .. _CHAR ) ; boolean isValid = _BOOL ; long diff = ( timestamp - System . currentTimeMillis ( ) ) ; if ( diff > MAX_MSECONDS_DIFF ) { isValid = _BOOL ; } this . equipmentLogger . trace ( _CHAR leaving isTimestampValid ( ) .. Result : _CHAR + isValid ) ; return isValid ; }
3405	public boolean hasFill ( Symbolizer symbolizer ) { boolean result = _BOOL ; if ( symbolizer != _NULL ) { SLDTreeLeafInterface obj = map . get ( symbolizer . getClass ( ) ) ; if ( obj != _NULL ) { result = obj . hasFill ( symbolizer ) ; } } return result ; }
3436	public static boolean isAllowed ( Class < ? > typeToCheck , Class < ? > attributeType ) { if ( allowedClassTypeMap . isEmpty ( ) ) { initialise ( ) ; } List < Class < ? >> list = allowedClassTypeMap . get ( attributeType ) ; if ( list == _NULL ) { return _BOOL ; } return list . contains ( typeToCheck ) ; }
3453	public static JsonArray array ( double ... values ) { if ( values == _NULL ) { throw new NullPointerException ( _CHAR values is _NULL _CHAR ) ; } JsonArray array = new JsonArray ( ) ; for ( double value : values ) { array . add ( value ) ; } return array ; }
3460	public static boolean validColourString ( String htmlColour ) { if ( htmlColour == _NULL ) { return _BOOL ; } if ( htmlColourPattern == _NULL ) { htmlColourPattern = Pattern . compile ( HEX_PATTERN ) ; } Matcher matcher = htmlColourPattern . matcher ( htmlColour ) ; return matcher . matches ( ) ; }
3505	public boolean isSideHandle ( ) { switch ( mType ) { case LEFT_SIDE : case RIGHT_SIDE : case TOP_SIDE : case BOTTOM_SIDE : return _BOOL ; } return _BOOL ; }
3533	private void notifyShutdown ( ) { if ( eventHandler instanceof LifecycleAware ) { try { ( ( LifecycleAware ) eventHandler ) . onShutdown ( ) ; } catch ( final Throwable ex ) { exceptionHandler . handleOnShutdownException ( ex ) ; } } }
3539	private String readLineTrimComments ( BufferedReader br ) throws IOException { String line = br . readLine ( ) ; if ( line != _NULL ) { line = line . trim ( ) ; if ( line . indexOf ( _CHAR ) == _NUM ) { line = _CHAR _CHAR ; } } return line ; }
3548	private void handleEmptyAxis ( T firstLeft , T firstRight ) { if ( firstLeft == _NULL ) { mLeftAxisMax = mRightAxisMax ; mLeftAxisMin = mRightAxisMin ; } else if ( firstRight == _NULL ) { mRightAxisMax = mLeftAxisMax ; mRightAxisMin = mLeftAxisMin ; } }
3644	public static void closeQuietly ( @ Nullable AsyncCloseable closeable ) { if ( _NULL == closeable ) { return ; } try { FutureUtils . result ( closeable . asyncClose ( ) ) ; } catch ( IOException e ) { } }
3695	@ Override public void elementDecl ( String name , String contentModel , Augmentations augs ) throws XNIException { try { if ( fDeclHandler != _NULL ) { fDeclHandler . elementDecl ( name , contentModel ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
3779	@ Override public BigFraction divide ( final BigFraction fraction ) { MathUtils . checkNotNull ( fraction , LocalizedCoreFormats . FRACTION ) ; if ( fraction . numerator . signum ( ) == _NUM ) { throw new MathRuntimeException ( LocalizedCoreFormats . ZERO_DENOMINATOR ) ; } if ( numerator . signum ( ) == _NUM ) { return ZERO ; } return multiply ( fraction . reciprocal ( ) ) ; }
3936	public static ProcessRegistry locateRegistry ( int port ) throws RegistryException { try { Registry registry = LocateRegistry . getRegistry ( port ) ; ProcessRegistry processRegistry = new ProcessRegistry ( port , registry ) ; return processRegistry ; } catch ( RemoteException e ) { throw new RegistryException ( _CHAR Failed to locate registry on port [ _CHAR + port + _CHAR ] _CHAR , e ) ; } }
3970	public FilterSpec normalize ( ) { FilterSpec copy = new FilterSpec ( ) ; copy . attributePath = attributePath ; copy . operator = operator ; copy . value = value ; if ( expressions != _NULL ) { copy . expressions = cloneExpressions ( expressions , _BOOL ) ; } return copy ; }
4097	private void notifyStart ( ) { if ( eventHandler instanceof LifecycleAware ) { try { ( ( LifecycleAware ) eventHandler ) . onStart ( ) ; } catch ( final Throwable ex ) { exceptionHandler . handleOnStartException ( ex ) ; } } }
4117	void refreshFinish ( String instanceId ) { if ( ! isDomThread ( ) ) { throw new WXRuntimeException ( _CHAR RefreshFinish operation must be done in dom thread _CHAR ) ; } WXDomStatement statement = mDomRegistries . get ( instanceId ) ; if ( statement == _NULL ) { return ; } statement . refreshFinish ( ) ; }
4208	private int wordBack ( int offset ) { int x = wordBI . preceding ( offset ) ; if ( x < offset - _NUM ) { x = offset ; } if ( x < _NUM ) { x = _NUM ; } return x ; }
4229	@ Override public Filter createLogicFilter ( List < Filter > filterList ) { AndImpl filter = _NULL ; if ( ( filterList == _NULL ) || ( filterList . size ( ) != _NUM ) ) { filter = new AndExtended ( ) ; } else { filter = new AndExtended ( filterList ) ; } return filter ; }
4498	@ Override public ReversibleIterator < BasicLogRecord > iterator ( ) { logMgrLock . lock ( ) ; try { flush ( ) ; return new LogIterator ( currentBlk ) ; } finally { logMgrLock . unlock ( ) ; } }
4579	public static Long streamOpCRC32 ( String stream ) { CRC32 crc = requestCRC . get ( ) ; try { crc . update ( stream . getBytes ( UTF_8 ) ) ; return crc . getValue ( ) ; } finally { crc . reset ( ) ; } }
4652	public int read ( ) throws IOException { if ( totalRead >= totalExpected ) { return - _NUM ; } int result = in . read ( ) ; if ( result != - _NUM ) { totalRead ++ ; } return result ; }
4655	protected static void init ( Callable initCall ) { try { initCall . call ( ) ; } catch ( Exception ex ) { if ( _logger . isLoggable ( Level . SEVERE ) ) { _logger . log ( Level . SEVERE , _CHAR Failed to initialize remote stub . '' , ex ) ; } } }
4698	public static LSOutput createLSOutput ( DOMImplementationLS impl , OutputStream os , String encoding ) { LSOutput out = impl . createLSOutput ( ) ; if ( os != _NULL ) { out . setByteStream ( os ) ; } if ( encoding != _NULL ) { out . setEncoding ( encoding ) ; } return out ; }
4778	public void requestRemoveNodesStart ( ) { if ( exclusion == _BOOL || inclusion == _BOOL ) { logger . debug ( _CHAR ZWave exclusion already in progress - aborted _CHAR ) ; return ; } enqueue ( new RemoveNodeMessageClass ( ) . doRequestStart ( ) ) ; exclusion = _BOOL ; startInclusionTimer ( ) ; logger . debug ( _CHAR ZWave controller start exclusion _CHAR ) ; }
4890	public Draggable searchForAsset ( String asset ) { if ( isClosed ( ) ) { pageObjectInjector . inject ( GlobalBar . class ) . toggleSidePanel ( ) ; } verifyResultsVisible ( ) ; searchInput . sendKeys ( asset ) ; searchInput . sendKeys ( Keys . ENTER ) ; verifyResultsVisible ( ) ; return dragAndDropFactory . createDraggable ( getResult ( asset ) , FramePath . parsePath ( _CHAR / _CHAR ) ) ; }
5074	public static void close ( @ Nullable Closeable closeable ) { if ( _NULL == closeable ) { return ; } try { Closeables . close ( closeable , _BOOL ) ; } catch ( IOException e ) { } }
5121	public static final void show ( Window owner , World world ) { EditWorldDialog ewd = new EditWorldDialog ( owner , world ) ; ewd . setLocationRelativeTo ( owner ) ; ewd . setVisible ( _BOOL ) ; if ( ! ewd . canceled ) { synchronized ( world ) { ewd . pnlWorld . setWorld ( world ) ; } } }
5150	protected void cleanTableView ( ) { if ( ++ fLargeCount < _NUM ) { if ( fAttributeTableViewChainState != _NULL ) { for ( int i = fTableViewBuckets - _NUM ; i >= _NUM ; -- i ) { fAttributeTableViewChainState [ i ] = _NUM ; } } fLargeCount = _NUM ; } }
5218	public void visitPhpMethodReference ( MethodReference reference ) { if ( ! this . isPropelDefined ( ) ) { return ; } String strName = reference . getName ( ) ; if ( _NULL == strName || ! strName . equals ( _CHAR count _CHAR ) ) { return ; } this . inspectSignature ( reference . getSignature ( ) , reference , _NULL ) ; }
5235	public static String factoryLinkByStateLink ( String stateLink ) { if ( _NULL == stateLink ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . stateFactoryLink ; }
5439	public void collapseToDefault ( ) { getCollapsedIds ( ) . clear ( ) ; getCollapsedIds ( ) . add ( _NUM ) ; getCollapsedIds ( ) . add ( _NUM ) ; getCollapsedIds ( ) . add ( _NUM ) ; getCollapsedIds ( ) . add ( _NUM ) ; getCollapsedIds ( ) . add ( _NUM ) ; getCollapsedIds ( ) . add ( _NUM ) ; getCollapsedIds ( ) . add ( _NUM ) ; }
5462	private void lockFocus ( ) { try { mPreviewRequestBuilder . set ( CaptureRequest . CONTROL_AF_TRIGGER , CameraMetadata . CONTROL_AF_TRIGGER_START ) ; mState = STATE_WAITING_LOCK ; mCaptureSession . capture ( mPreviewRequestBuilder . build ( ) , mCaptureCallback , mBackgroundHandler ) ; } catch ( CameraAccessException e ) { e . printStackTrace ( ) ; } }
5545	private Relation addNewRolePlayer ( Map < RoleType , Instance > roleMap , RoleType roleType , Instance instance ) { if ( instance != _NULL ) mindmapsGraph . putCasting ( ( RoleTypeImpl ) roleType , ( InstanceImpl ) instance , this ) ; if ( mindmapsGraph . isBatchLoadingEnabled ( ) ) { setHash ( _NULL ) ; } else { setHash ( roleMap ) ; } return this ; }
5571	@ Override public void onPrepared ( MediaPlayer vp ) { Log_OC . v ( TAG , _CHAR onPrepared _CHAR ) ; mVideoPreview . seekTo ( mSavedPlaybackPosition ) ; if ( mAutoplay ) { mVideoPreview . start ( ) ; } mMediaController . setEnabled ( _BOOL ) ; mMediaController . updatePausePlay ( ) ; mPrepared = _BOOL ; }
5665	private void removeFailedServers ( Set < String > failedServers ) { if ( ! failedServers . isEmpty ( ) ) { for ( String server : failedServers ) { Response < Boolean > leaveResp = clusterService . leaveServer ( server ) ; if ( leaveResp . isSuccess ( ) && leaveResp . getData ( ) ) { Logs . info ( _CHAR remove failed server ( { } ) successfully _CHAR , server ) ; } } } }
5684	public boolean isElement ( List < String > requestPrefixList , String requestedElementName ) { if ( ( requestPrefixList != _NULL ) && ( requestedElementName != _NULL ) ) { for ( String requestPrefix : requestPrefixList ) { if ( isElement ( requestPrefix , requestedElementName ) ) { return _BOOL ; } } } return _BOOL ; }
5768	public IDataProcessStatus makeCopy ( ) { IDataProcessStatus copy = new DataProcessTaskStatus ( ) ; copy . setTableName ( this . tableName ) ; copy . setDataloadstatusid ( this . dataloadstatusid ) ; copy . setDesc ( this . desc ) ; copy . setKey ( this . key ) ; copy . setDatabaseName ( databaseName ) ; copy . setStatus ( status ) ; return copy ; }
5790	private static void check ( double [ ] x , double [ ] y ) { if ( x . length == y . length ) { for ( int i = _NUM ; i < x . length ; i ++ ) { check ( x [ i ] , y [ i ] ) ; } } else { throw new RuntimeException ( _CHAR Attempt to compare vectors of different lengths _CHAR ) ; } }
5794	private void indexSplitDoc ( ) { try { _indexSplitDoc ( ) ; } finally { semaphore . release ( ) ; indexState . globalState . indexingJobsRunning . release ( ) ; ctx . inFlightChunks . arrive ( ) ; } }
5804	public static List < String > readLines ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . readLines ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
5839	private void readSortIndexFile ( DictionaryInfo dictionaryInfo , ColumnIdentifier columnIdentifier ) throws IOException { CarbonDictionarySortIndexReader sortIndexReader = getSortIndexReader ( columnIdentifier ) ; try { dictionaryInfo . setSortOrderIndex ( sortIndexReader . readSortIndex ( ) ) ; dictionaryInfo . setSortReverseOrderIndex ( sortIndexReader . readInvertedSortIndex ( ) ) ; } finally { sortIndexReader . close ( ) ; } }
5910	private void createUI ( ) { setLayout ( new BorderLayout ( ) ) ; box = Box . createVerticalBox ( ) ; add ( box , BorderLayout . CENTER ) ; setUpLiteralPanel ( ) ; setUpPropertyPanel ( ) ; setUpEnvVarPanel ( ) ; setUpFunctionPanel ( ) ; box . add ( createApplyRevertPanel ( ) ) ; }
6023	@ Override public void close ( ) { try { if ( connection != _NULL ) { connection . close ( ) ; } } catch ( SQLException e ) { e . printStackTrace ( ) ; } }
6101	public static int findHighestMajorVersion ( Collection < Throwable > list ) { int result = _NUM ; for ( Throwable t : list ) { if ( t instanceof InconvertibleClassError ) { InconvertibleClassError error = ( InconvertibleClassError ) t ; result = Math . max ( result , error . getMajor ( ) ) ; } } return result ; }
6165	private void replicateAndfreeCacheContextTxn ( Context context , ServerTransaction transaction ) { try { replicateAndfreeCache ( context ) ; } catch ( RuntimeException ex ) { if ( _logger . isLoggable ( Level . SEVERE ) ) { _logger . log ( Level . SEVERE , _CHAR Failed to perform sync - replication on transactionId : _CHAR + transaction , ex ) ; } } }
6296	@ Override public void populateField ( String value ) { if ( value != _NULL ) { oldValueObj = value ; attributeComboBox . setSelectedItem ( value ) ; } else { oldValueObj = value ; attributeComboBox . setSelectedIndex ( - _NUM ) ; } }
6410	public Vector3f subtractLocal ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x -= vec . x ; y -= vec . y ; z -= vec . z ; return this ; }
6422	public static boolean containsScript ( String str ) { if ( str . length ( ) > _NUM ) { for ( String scriptPrefix : SCRIPT_PREFIXES ) { if ( str . contains ( scriptPrefix ) ) { return _BOOL ; } } } return _BOOL ; }
6525	public int findIndexOfValue ( String value ) { if ( value != _NULL && mEntryValues != _NULL ) { for ( int i = mEntryValues . length - _NUM ; i >= _NUM ; i -- ) { if ( mEntryValues [ i ] . equals ( value ) ) { return i ; } } } return - _NUM ; }
6561	public void close ( ) throws IOException { if ( io != _NULL ) { try { io . close ( ) ; } finally { io = _NULL ; } } }
6651	public AemRichText type ( CharSequence text ) { switchToTextArea ( ) ; try { actions . sendKeys ( text ) . perform ( ) ; return this ; } finally { frameSwitcher . switchTo ( _CHAR / $ cq _CHAR ) ; } }
6667	private String verifyRestoreCode ( String restoreCode , String code ) { if ( code == _NULL ) { return _CHAR code_parameter_is_null _CHAR ; } if ( restoreCode == _NULL ) { return _CHAR account_restore_code_is_null _CHAR ; } boolean validCode = passwordManager . matches ( code , restoreCode ) ; return validCode ? _NULL : _CHAR code_does_not_match_restoreCode - code : _CHAR_CHAR_CHAR restoreCode : _CHAR_CHAR_CHAR _CHAR ; }
6676	static private double norm ( double [ ] x ) { int n = x . length ; double ss = _NUM . _NUM ; double xk ; for ( double aX : x ) { xk = aX ; ss += xk * xk ; } return ss ; }
6743	@ Override public void write ( List < byte [ ] > valueList ) throws IOException { if ( isFirstTime ) { init ( ) ; isFirstTime = _BOOL ; } for ( byte [ ] value : valueList ) { oneDictionaryChunkList . add ( ByteBuffer . wrap ( value ) ) ; totalRecordCount ++ ; } }
6749	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
6781	public static String readFileToString ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toString ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
6806	public int findIndexOfValue ( String value ) { if ( value != _NULL && mEntryValues != _NULL ) { for ( int i = mEntryValues . length - _NUM ; i >= _NUM ; i -- ) { if ( mEntryValues [ i ] . equals ( value ) ) { return i ; } } } return - _NUM ; }
6828	public static String copyFromClipboard ( ) { try { String data = ( String ) Toolkit . getDefaultToolkit ( ) . getSystemClipboard ( ) . getData ( DataFlavor . stringFlavor ) ; return data ; } catch ( HeadlessException | UnsupportedFlavorException | IOException e ) { LOGGER . log ( Level . WARNING , _CHAR Error retrieving text from clipboard . '' , e ) ; return _CHAR _CHAR ; } }
6830	protected void stopWatchTextUnit ( ) { if ( ! textUnitStopWatch . isRunning ( ) ) { textUnitStopWatch . start ( _CHAR start creating text unit _CHAR ) ; } if ( ++ numOfTextUnitProcess % _NUM == _NUM ) { logger . info ( _CHAR num of text unit added : { } _CHAR , numOfTextUnitProcess ) ; textUnitStopWatch . stop ( ) ; textUnitStopWatch . start ( _CHAR batch _CHAR + numOfTextUnitProcess ) ; } }
6897	@ TargetApi ( Build . VERSION_CODES . LOLLIPOP ) private static boolean moveToFront ( AppTask task ) { try { task . moveToFront ( ) ; return _BOOL ; } catch ( SecurityException e ) { sMoveToFrontExceptionHistogram . recordHit ( ) ; } return _BOOL ; }
6902	public static List < String > readLines ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . readLines ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
6917	public void connect ( final MqttCallback callback , final Runnable connectionRunnable ) throws SpyException { createClient ( callback ) ; final ReconnectionSettings reconnectionSettings = getMqttConnectionDetails ( ) . getReconnectionSettings ( ) ; if ( reconnectionSettings == _NULL ) { new Thread ( connectionRunnable ) . start ( ) ; } else { reconnectionManager . addConnection ( this , connectionRunnable ) ; } }
6941	public static boolean isSignedInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { Integer . parseInt ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
6952	public static boolean copyFile ( String sourceFilePath , String destFilePath ) { InputStream inputStream = _NULL ; try { inputStream = new FileInputStream ( sourceFilePath ) ; } catch ( FileNotFoundException e ) { throw new RuntimeException ( _CHAR FileNotFoundException occurred . '' , e ) ; } return writeFile ( destFilePath , inputStream ) ; }
7024	public boolean periodTypeIsValid ( ) { PeriodType periodType = _NULL ; for ( DataSet dataSet : getDataSets ( ) ) { if ( periodType != _NULL && ! periodType . equals ( dataSet . getPeriodType ( ) ) ) { return _BOOL ; } periodType = dataSet . getPeriodType ( ) ; } return _BOOL ; }
7050	public void flushAndCancel ( ) { synchronized ( this . sourceDataTag ) { if ( LOGGER . isDebugEnabled ( ) ) { LOGGER . debug ( _CHAR \ tscheduler [ _CHAR + this . sourceDataTag . getId ( ) + _CHAR ] : flush and reset _CHAR ) ; } this . cancel ( ) ; this . run ( ) ; this . lastSourceDataTag = _NULL ; } }
7136	private void notifyListeners ( final Tag tag , final List < Alarm > alarmList ) { for ( AlarmAggregatorListener listener : listeners ) { try { listener . notifyOnUpdate ( ( Tag ) tag . clone ( ) , alarmList ) ; } catch ( CloneNotSupportedException e ) { LOGGER . error ( _CHAR Unexpected exception caught : clone should be implemented for this class ! '' + '' Alarm & tag listener was not notified : '' + listener . getClass ( ) . getSimpleName ( ) ) ; } } }
7198	public void releaseAll ( ) { for ( OneWayBinding < ? > oneWayBinding : myOneWayBindings ) { oneWayBinding . dispose ( ) ; } myOneWayBindings . clear ( ) ; for ( TwoWayBinding < ? > twoWayBinding : myTwoWayBindings ) { twoWayBinding . dispose ( ) ; } myTwoWayBindings . clear ( ) ; }
7266	@ Override public void add ( int location , MODEL object ) { int insertPosition = calcInsertPosition ( location ) ; if ( insertPosition == getItemCount ( ) ) { mItems . add ( object ) ; } else { mItems . add ( insertPosition , object ) ; } notifyIfNeed ( ) ; }
7307	private void playNext ( ) { SpotlightView . Builder next = queue . poll ( ) ; if ( next != _NULL ) { next . show ( ) . setReady ( _BOOL ) ; } else { Log . d ( TAG , _CHAR END OF QUEUE _CHAR ) ; resetTour ( ) ; } }
7326	public static final int [ ] trim ( int [ ] a , int size ) { if ( a . length == size ) { return a ; } else { int [ ] b = new int [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , size ) ; return b ; } }
7411	public void dumpBinary ( CART cart , DataOutput os ) throws IOException { try { toWagonFormat ( cart . getRootNode ( ) , ( DataOutputStream ) os , _NULL , _NULL ) ; } catch ( IOException ioe ) { IOException newIOE = new IOException ( _CHAR Error dumping CART to output stream _CHAR ) ; newIOE . initCause ( ioe ) ; throw newIOE ; } }
7520	public boolean seenTagPrefix ( @ NotNull String prefix ) { if ( myTags != _NULL ) { for ( String tag : myTags . keySet ( ) ) { if ( tag . startsWith ( prefix ) ) { return _BOOL ; } } } return _BOOL ; }
7538	private void doScrollX ( int delta ) { if ( delta != _NUM ) { if ( mSmoothScrollingEnabled ) { smoothScrollBy ( delta , _NUM ) ; } else { scrollBy ( delta , _NUM ) ; } } }
7564	protected void handleBarClick ( long time , float x , float y ) { if ( isPeeking ( ) ) { if ( supportsExpandedState ( ) ) { expandPanel ( StateChangeReason . SEARCH_BAR_TAP ) ; } else { maximizePanel ( StateChangeReason . SEARCH_BAR_TAP ) ; } } }
7574	boolean waitForState ( Processor p , int state ) { synchronized ( waitSync ) { try { while ( p . getState ( ) < state && stateTransitionOK ) waitSync . wait ( ) ; } catch ( Exception e ) { } } return stateTransitionOK ; }
7618	public static boolean isNetWorkConnected ( Context context ) { if ( context != _NULL ) { ConnectivityManager mConnectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo mNetworkInfo = mConnectivityManager . getActiveNetworkInfo ( ) ; if ( mNetworkInfo != _NULL ) { return mNetworkInfo . isAvailable ( ) && mNetworkInfo . isConnected ( ) ; } } return _BOOL ; }
7684	public void abortIfRunning ( ) { if ( mRunning ) { if ( ! mScroller . isFinished ( ) ) { mAbort = _BOOL ; mScroller . forceFinished ( _BOOL ) ; } finish ( ) ; mAbort = _BOOL ; } }
7764	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
7781	@ Override public boolean equals ( Object other ) { if ( this == other ) { return _BOOL ; } if ( other instanceof Fraction ) { Fraction rhs = ( Fraction ) other ; return ( numerator == rhs . numerator ) && ( denominator == rhs . denominator ) ; } return _BOOL ; }
7794	public static String toString ( JSONArray ja ) throws JSONException { JSONObject jo = ja . optJSONObject ( _NUM ) ; if ( jo != _NULL ) { JSONArray names = jo . names ( ) ; if ( names != _NULL ) { return rowToString ( names ) + toString ( names , ja ) ; } } return _NULL ; }
7810	@ Override public void actionPerformed ( ActionEvent event ) { final ImportBlastDialog importBlastDialog = ( ImportBlastDialog ) getParent ( ) ; importBlastDialog . apply ( ) ; try { importBlastDialog . destroyView ( ) ; } catch ( CanceledException e ) { Basic . caught ( e ) ; } }
7848	public void writeByte ( byte value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _BYTE ) ; this . dataOut . writeByte ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
7859	public boolean shippingApplies ( ) { boolean shippingApplies = _BOOL ; for ( ShoppingCartItem item : this ) { if ( item . shippingApplies ( ) ) { shippingApplies = _BOOL ; break ; } } return shippingApplies ; }
7907	private static void popTransactionStartStamp ( ) { ListOrderedMap map = ( ListOrderedMap ) suspendedTxStartStamps . get ( ) ; if ( map . size ( ) > _NUM ) { transactionStartStamp . set ( ( Timestamp ) map . remove ( map . lastKey ( ) ) ) ; } else { Debug . logError ( _CHAR Error in transaction handling - no saved start stamp found - using NOW . '' , module ) ; transactionStartStamp . set ( UtilDateTime . nowTimestamp ( ) ) ; } }
7917	public static boolean isEmailRegistered ( String email ) { PersistenceManager pm = pmf . getPersistenceManager ( ) ; try { UserRecord user = findUserByEmail ( pm , email ) ; return user != _NULL ; } finally { pm . close ( ) ; } }
7936	public void fixupNextTryTime ( ) { long curTime = SystemTime . timeMillis ( ) ; if ( ( curTime - time ) > MIN_RETRY ) { tryIndx = _NUM ; nextTryTime = curTime ; } else { setNextTryTime ( ) ; } }
7960	@ Override public Filter createLogicFilter ( List < Filter > filterList ) { NotImpl filter = _NULL ; if ( ( filterList == _NULL ) || filterList . isEmpty ( ) ) { filter = new NotExtended ( ) ; } else { filter = new NotExtended ( filterList . get ( _NUM ) ) ; } return filter ; }
7997	public static ClassHierarchy classHierarchy ( Scene scene ) { if ( scene == _NULL ) { throw new InternalTypingException ( ) ; } ClassHierarchy classHierarchy = G . v ( ) . ClassHierarchy_classHierarchyMap . get ( scene ) ; if ( classHierarchy == _NULL ) { classHierarchy = new ClassHierarchy ( scene ) ; } return classHierarchy ; }
8094	public static void cancelAll ( String id ) { Token token ; synchronized ( TOKENS ) { token = TOKENS . remove ( id ) ; } if ( token == _NULL ) { return ; } HANDLER . removeCallbacksAndMessages ( token ) ; }
8177	public boolean equals ( Object other ) { if ( ! ( other instanceof TIntObjectHashMap ) ) { return _BOOL ; } TIntObjectHashMap that = ( TIntObjectHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
8274	public static byte [ ] readFileToByteArray ( File file ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toByteArray ( in , file . length ( ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
8312	Circle sharedCircleWith ( final Vertex vertex ) { for ( final Circle circle1 : circles ) { for ( final Circle circle2 : vertex . circles ) { if ( circle1 == circle2 ) { return circle1 ; } } } return _NULL ; }
8321	private boolean isDownloadIdInOMASharedPrefs ( long downloadId ) { Set < String > omaDownloads = getStoredDownloadInfo ( PENDING_OMA_DOWNLOADS ) ; for ( String omaDownload : omaDownloads ) { OMAEntry entry = OMAEntry . parseOMAEntry ( omaDownload ) ; if ( entry . mDownloadId == downloadId ) { return _BOOL ; } } return _BOOL ; }
8366	private void populateFunctionComboBox ( ) { if ( envVarComboBox != _NULL ) { DefaultComboBoxModel < String > model = new DefaultComboBoxModel < String > ( ) ; model . addElement ( _CHAR _CHAR ) ; for ( String name : envVarMap . keySet ( ) ) { model . addElement ( name ) ; } envVarComboBox . setModel ( model ) ; } }
8367	public static void insertAfter ( Node newNode , Node refNode ) throws DOMException { Node parent = refNode . getParentNode ( ) ; Node next = refNode . getNextSibling ( ) ; if ( next == _NULL ) { parent . appendChild ( newNode ) ; } else { parent . insertBefore ( newNode , next ) ; } }
8390	protected void actionPerformed ( GuiButton par1GuiButton ) { if ( par1GuiButton . id == ID_GENERIC_DONE ) { this . guivrSettings . saveOptions ( ) ; this . mc . displayGuiScreen ( this . parentGuiScreen ) ; } else if ( par1GuiButton . id == ID_GENERIC_DEFAULTS ) { mc . vrSettings . resetBindings ( ) ; this . initGui ( ) ; } }
8413	private void checkIfNext ( ) { for ( ; _pos != _NULL ; _pos = _entries . next ( _pos ) ) { IEntryCacheInfo pEntry = _pos . getSubject ( ) ; if ( pEntry == _NULL ) continue ; _currentEntry = pEntry ; _pos = _entries . next ( _pos ) ; return ; } _currentEntry = _NULL ; }
8435	public void close ( ) { if ( f_reader != _NULL ) { try { f_reader . close ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } }
8706	private void populateConnectionComboBox ( ) { connectionComboBox . removeAllItems ( ) ; if ( geoServerConnectionManager != _NULL ) { List < GeoServerConnection > connectionList = geoServerConnectionManager . getConnectionList ( ) ; for ( GeoServerConnection connection : connectionList ) { connectionComboBox . addItem ( connection . getConnectionName ( ) ) ; connectionMap . put ( connection . getConnectionName ( ) , connection ) ; } } }
8748	public boolean equals ( Object other ) { if ( ! ( other instanceof TShortLongHashMap ) ) { return _BOOL ; } TShortLongHashMap that = ( TShortLongHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
8895	public void dismiss ( boolean tappedTarget ) { pulseAnimation . cancel ( ) ; expandAnimation . cancel ( ) ; if ( tappedTarget ) { dismissConfirmAnimation . start ( ) ; } else { dismissAnimation . start ( ) ; } }
8904	private void inflateEmptyTextColor ( ) { if ( mEmptyTextColor != R . color . text_empty_color ) { if ( mEmptyLayout != R . layout . layout_empty ) { throw new RuntimeException ( _CHAR Can not assign the emptyTextColor attribute . '' + _CHAR You already overridden the entire empty view , no need to specify _CHAR + _CHAR custom color or custom text message _CHAR ) ; } else { textEmpty . setTextColor ( ColorUtil . getColorWrapper ( mContext , mEmptyTextColor ) ) ; } } }
8926	public void requestHardReset ( ) { sendQueue . clear ( ) ; recvQueue . clear ( ) ; SerialMessage msg = new ControllerSetDefaultMessageClass ( ) . doRequest ( ) ; msg . attempts = _NUM ; enqueue ( msg ) ; zwaveNodes . clear ( ) ; enqueue ( new SerialApiGetInitDataMessageClass ( ) . doRequest ( ) ) ; logger . debug ( _CHAR ZWave controller hard reset _CHAR ) ; }
8960	public int findIndexOfValue ( String value ) { if ( value != _NULL && mEntryValues != _NULL ) { for ( int i = mEntryValues . length - _NUM ; i >= _NUM ; i -- ) { if ( mEntryValues [ i ] . equals ( value ) ) { return i ; } } } return - _NUM ; }
8963	public static byte [ ] readFileToByteArray ( File file ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toByteArray ( in , file . length ( ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
9012	public AemRichText selectAll ( ) { switchToTextArea ( ) ; try { actions . sendKeys ( Keys . chord ( Keys . CONTROL , _CHAR a _CHAR ) ) . perform ( ) ; return this ; } finally { frameSwitcher . switchTo ( _CHAR / $ cq _CHAR ) ; } }
9076	public static IntRange downTo ( int endpoint , BoundType boundType ) { switch ( boundType ) { case OPEN : return greaterThan ( endpoint ) ; case CLOSED : return atLeast ( endpoint ) ; default : throw new AssertionError ( ) ; } }
9136	void stop ( ) { if ( ! configuration . customExecutor ) { ( ( ExecutorService ) taskExecutor ) . shutdownNow ( ) ; } if ( ! configuration . customExecutorForCachedImages ) { ( ( ExecutorService ) taskExecutorForCachedImages ) . shutdownNow ( ) ; } cacheKeysForImageAwares . clear ( ) ; uriLocks . clear ( ) ; }
9204	public synchronized void destroy ( ) { if ( operationsLogger . isLoggable ( Level . FINER ) ) { operationsLogger . entering ( TxnManagerImpl . class . getName ( ) , _CHAR destroy _CHAR ) ; } readyState . check ( ) ; ( new DestroyThread ( ) ) . start ( ) ; if ( operationsLogger . isLoggable ( Level . FINER ) ) { operationsLogger . exiting ( TxnManagerImpl . class . getName ( ) , _CHAR destroy _CHAR ) ; } }
9209	boolean insert ( BinarySearchTreeNode < E > item ) { if ( this . root == _NULL ) { this . root = item ; this . size ++ ; return _BOOL ; } else { return this . insert ( item , this . root ) ; } }
9222	public boolean store ( ) { try { prefs . sync ( ) ; return _BOOL ; } catch ( BackingStoreException ex ) { LOGGER . log ( Level . SEVERE , _CHAR Error saving preferences _CHAR , ex ) ; } return _BOOL ; }
9250	public String assignIfPossible ( String value , Object ... replacements ) { if ( setter ( ) != _NULL ) { String expr = format ( value , replacements ) ; expr = cast ( expr ) ; return format ( setter ( ) , expr ) ; } else { return _CHAR _CHAR ; } }
9286	public static byte [ ] compressForZlib ( String stringToCompress ) { byte [ ] returnValues = _NULL ; try { returnValues = compressForZlib ( stringToCompress . getBytes ( _CHAR UTF - _NUM _CHAR ) ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return returnValues ; }
9316	private String extractString ( JsonObject jsonObj , String field ) { String value = _CHAR _CHAR ; if ( jsonObj != _NULL ) { JsonElement element = jsonObj . get ( field ) ; if ( element != _NULL ) { value = element . getAsString ( ) ; } } return value ; }
9341	private static ByteBuffer trim ( ByteBuffer buf ) { if ( buf . capacity ( ) <= _NUM * buf . remaining ( ) ) { return buf ; } else { ByteBuffer clone = ByteBuffer . allocate ( buf . remaining ( ) ) ; buf . get ( clone . array ( ) ) ; return clone ; } }
9353	public String encrypt ( String raw ) { try { MessageDigest localMessageDigest = cloneMessageDigest ( ) ; byte [ ] digest = localMessageDigest . digest ( raw . getBytes ( _CHAR UTF - _NUM _CHAR ) ) ; return new String ( Hex . encodeHex ( digest ) ) ; } catch ( UnsupportedEncodingException e ) { throw new EncodingException ( _CHAR UTF - _NUM not supported ! _CHAR , e ) ; } }
9362	public void prepareMatrixOffset ( boolean inverted ) { mMatrixOffset . reset ( ) ; if ( ! inverted ) { mMatrixOffset . postTranslate ( mViewPortHandler . offsetLeft ( ) , mViewPortHandler . getChartHeight ( ) - mViewPortHandler . offsetBottom ( ) ) ; } else { mMatrixOffset . setTranslate ( mViewPortHandler . offsetLeft ( ) , - mViewPortHandler . offsetTop ( ) ) ; mMatrixOffset . postScale ( _NUM . _NUM , - _NUM . _NUM ) ; } }
9369	public boolean isImageOutlineLineVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { if ( obj instanceof RasterSymbolizer ) { RasterSymbolizer raster = ( RasterSymbolizer ) obj ; enabled = ( raster . getImageOutline ( ) == _NULL ) && ( geometryType == GeometryTypeEnum . RASTER ) ; } } return enabled ; }
9565	@ Override public void updateLayerStyle ( List < GeoServerLayer > layerList ) { if ( layerList != _NULL ) { for ( GeoServerLayer layer : layerList ) { GeoServerClientInterface client = connectionMap . get ( layer . getConnection ( ) ) ; if ( client != _NULL ) { client . updateLayerStyles ( layer ) ; } } } }
9665	public static ComponentMeta metaByStateLink ( String stateLink ) { if ( _NULL == stateLink ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . componentMeta ; }
9791	@ Override public void computeTargetFeatures ( Target target ) { if ( ! ( target instanceof DiphoneTarget ) ) { tcfForHalfphones . computeTargetFeatures ( target ) ; } else { DiphoneTarget dt = ( DiphoneTarget ) target ; tcfForHalfphones . computeTargetFeatures ( dt . left ) ; tcfForHalfphones . computeTargetFeatures ( dt . right ) ; } }
9881	@ Override public String toString ( ) { String string = _CHAR _CHAR ; if ( leftTarget != _NULL ) { string += _CHAR _CHAR + leftTarget . getName ( ) ; } if ( rightTarget != _NULL ) { string += _CHAR _CHAR + rightTarget . getName ( ) ; } return string ; }
9998	@ Nullable public byte [ ] loadWindowData ( long timeout , TimeUnit unit ) { CaptureByteArrayHandler handler = new CaptureByteArrayHandler ( HandleViewDebug . CHUNK_VURT ) ; try { HandleViewDebug . dumpViewHierarchy ( client , title , _BOOL , _BOOL , handler ) ; } catch ( IOException e ) { return _NULL ; } return handler . getData ( timeout , unit ) ; }
10033	private void writeVersionFile ( ) throws IOException { RandomAccessFile out = new RandomAccessFile ( fName ( versionFile ) , _CHAR rw _CHAR ) ; try { writeInt ( out , version ) ; out . getFD ( ) . sync ( ) ; } finally { out . close ( ) ; } }
10035	public void onUpOrCancel ( long time ) { if ( mLastPressedCloseButton != _NULL ) mLastPressedCloseButton . onUpOrCancel ( ) ; mLastPressedCloseButton = _NULL ; stopReorderMode ( ) ; mInteractingTab = _NULL ; mReorderState = REORDER_SCROLL_NONE ; if ( mNewTabButton . onUpOrCancel ( ) && mModel != _NULL ) { mTabCreator . launchNTP ( ) ; } }
10067	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
10083	protected void writeNetscapeExt ( ) throws IOException { out . write ( _NUM ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeString ( _CHAR NETSCAPE _CHAR + _CHAR _NUM . _NUM _CHAR ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeShort ( repeat ) ; out . write ( _NUM ) ; }
10096	private int peekButOne ( ) throws CompileException , IOException { if ( this . nextButOneChar != - _NUM ) return this . nextButOneChar ; this . peek ( ) ; try { return ( this . nextButOneChar = this . internalRead ( ) ) ; } catch ( UnicodeUnescapeException ex ) { throw new CompileException ( ex . getMessage ( ) , this . location ( ) , ex ) ; } }
10124	public static boolean isAccountClass ( GenericValue glAccount , String glAccountClassId ) throws GenericEntityException { if ( glAccount == _NULL ) { return _BOOL ; } GenericValue glAccountClass = glAccount . getRelatedOne ( _CHAR GlAccountClass _CHAR , _BOOL ) ; if ( glAccountClass == _NULL ) { throw new GenericEntityException ( _CHAR Can not find GlAccountClass for glAccountId '' + glAccount . getString ( _CHAR glAccountId _CHAR ) ) ; } return isAccountClassClass ( glAccountClass , glAccountClassId ) ; }
10178	public void save ( ) { PreferenceStore prefs = getPreferenceStore ( ) ; synchronized ( DdmsPreferenceStore . class ) { try { prefs . save ( ) ; } catch ( IOException ioe ) { } } }
10347	private void handleFinishedH ( boolean reschedule ) { switch ( mVerb ) { case VERB_EXECUTING : case VERB_STOPPING : closeAndCleanupJobH ( reschedule ) ; break ; default : break ; } }
10350	protected String checkCycles ( ) { myErrorMessage = _NULL ; myHorizontalCycle = _NULL ; myVerticalCycle = _NULL ; if ( checkCycle ( myCurrentTopMatch , _BOOL ) || checkCycle ( myCurrentBottomMatch , _BOOL ) ) { } if ( checkCycle ( myCurrentLeftMatch , _BOOL ) || checkCycle ( myCurrentRightMatch , _BOOL ) ) { } return myErrorMessage ; }
10477	private void clearOldTraffic ( ) { List < AirMapTraffic > oldAllTraffic = new ArrayList < > ( ) ; for ( AirMapTraffic traffic : allTraffic ) { if ( trafficExpired ( traffic ) ) { oldAllTraffic . add ( traffic ) ; allTraffic . remove ( traffic ) ; } } notifyRemoved ( oldAllTraffic ) ; }
10512	private String populateASGName ( String region , String instanceId ) { GetASGName getASGName = new GetASGName ( region , instanceId ) ; try { return getASGName . call ( ) ; } catch ( Exception e ) { logger . error ( _CHAR Failed to determine ASG name . '' , e ) ; return _NULL ; } }
10521	public final void sendPacket ( LsServerPacket bp ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } log . debug ( _CHAR sending packet : _CHAR + bp ) ; sendMsgQueue . addLast ( bp ) ; enableWriteInterest ( ) ; } }
10534	private void indexSplitDoc ( ) { try { _indexSplitDoc ( ) ; } finally { shardState . indexState . globalState . indexingJobsRunning . release ( ) ; semaphore . release ( ) ; ctx . inFlightChunks . arriveAndDeregister ( ) ; } }
10591	@ Override public Object clone ( ) { try { TinkerZipEntry result = ( TinkerZipEntry ) super . clone ( ) ; result . extra = extra != _NULL ? extra . clone ( ) : _NULL ; return result ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( e ) ; } }
10608	private int klattRule6 ( Element segment ) { Element syllable = getSyllable ( segment ) ; if ( isInOnset ( segment ) && ! isWordInitial ( syllable ) ) { return getPropertyAsInteger ( _CHAR rule6 . onset _CHAR ) ; } else if ( isInCoda ( segment ) ) { return getPropertyAsInteger ( _CHAR rule6 . coda _CHAR ) ; } return _NUM ; }
10665	public AemRichText clear ( ) { switchToTextArea ( ) ; try { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return this ; } finally { frameSwitcher . switchTo ( _CHAR / $ cq _CHAR ) ; } }
10796	boolean deleteTheClientInTheRooms ( Client client ) { boolean result = _BOOL ; for ( int i = gameRooms . size ( ) - _NUM ; i > - _NUM ; i -- ) { if ( gameRooms . get ( i ) . exitTheRoom ( client ) ) { result = _BOOL ; break ; } } return result ; }
10861	public void attach ( ActionObserver observer ) { observer . makeOneTimeUse ( ) ; lock . lock ( ) ; try { onceUsedObservers . add ( observer ) ; } finally { lock . unlock ( ) ; } }
10932	private void startNetLog ( ) { File outputFile ; try { outputFile = File . createTempFile ( _CHAR cronet _CHAR , _CHAR log _CHAR , Environment . getExternalStorageDirectory ( ) ) ; cronetEngine . startNetLogToFile ( outputFile . toString ( ) , _BOOL ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
10961	public void populate ( List < DataSourceAttributeData > attributeList ) { valueList . clear ( ) ; valueMap . clear ( ) ; if ( attributeList != _NULL ) { for ( DataSourceAttributeData data : attributeList ) { valueList . add ( data ) ; valueMap . put ( data . getName ( ) . getLocalPart ( ) , data ) ; } } }
10995	private static boolean containsOnlyInheritDoc ( Reader reader , int length ) { char [ ] content = new char [ length ] ; try { reader . read ( content , _NUM , length ) ; } catch ( IOException e ) { return _BOOL ; } return new String ( content ) . trim ( ) . equals ( _CHAR { @ inheritDoc } _CHAR ) ; }
11026	public void start ( ) { mTargetWrapperView . prepareTransition ( mToShow ) ; mContainer . prepareTransition ( mToShow ) ; if ( mToShow == _NULL ) { continueAnimation ( ) ; } else { mTargetWrapperView . getViewTreeObserver ( ) . addOnGlobalLayoutListener ( this ) ; } }
11073	@ Override protected void finalize ( ) { if ( catfile != _NULL ) { try { catfile . close ( ) ; } catch ( IOException e ) { } } catfile = _NULL ; }
11076	@ Override public final void storeData ( final IFallback object ) throws IDBPersistenceException { if ( object instanceof FallbackImpl ) { if ( ! ( ( FallbackImpl ) object ) . toString ( ) . equals ( FallbackImpl . ERROR ) ) { storage . add ( object ) ; } else { throw new IDBPersistenceException ( _CHAR Connection to the DB has been lost _CHAR ) ; } } }
11092	public void startPlaying ( String file ) { if ( this . readyPlayer ( file ) && this . player != _NULL ) { this . player . start ( ) ; this . setState ( STATE . MEDIA_RUNNING ) ; this . seekOnPrepared = _NUM ; } else { this . prepareOnly = _BOOL ; } }
11122	private AudioMapType generateDefaultAudioMap ( String locale ) { AudioMapType audioMap = new AudioMapType ( ) ; audioMap . setMainAudio ( new MainAudioType ( ) ) ; audioMap . getMainAudio ( ) . setLocale ( locale ) ; audioMap . getMainAudio ( ) . setName ( _CHAR main - audio . mov _CHAR ) ; if ( ! fillDefaultAudioMapFromDescriptor ( audioMap ) ) { setAudioMapDefaultOptions ( audioMap ) ; } return audioMap ; }
11125	public void finishTransition ( ) { if ( mViewToHide != _NULL ) { removeView ( mViewToHide ) ; } getLayoutParams ( ) . height = ViewGroup . LayoutParams . WRAP_CONTENT ; requestLayout ( ) ; mViewToHide = _NULL ; mViewToShow = _NULL ; mInfoBar . setControlsEnabled ( _BOOL ) ; }
11133	@ Override public void write ( int idx ) throws IOException { try { beforeWrite ( _NUM ) ; out . write ( idx ) ; afterWrite ( _NUM ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
11183	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_main ) ; toolbar = ( Toolbar ) findViewById ( R . id . toolbar ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar ( ) . setDisplayShowHomeEnabled ( _BOOL ) ; setupNavigationDrawer ( ) ; setFragmentContent ( currentFragment ) ; showIntro ( ) ; }
11188	public void checkExpectedGeneratedResources ( ) { try { checkDirectoriesContainSameContent ( getExpectedResourcesTestDir ( ) , targetTestDir ) ; } catch ( DifferentDirectoryContentException e ) { String msg = _CHAR Generated resources do not match the expected resources _CHAR ; logger . debug ( msg , e ) ; Assert . fail ( msg + _CHAR \ n _CHAR + e . getMessage ( ) ) ; } }
11242	private Collection < AssociationsInfo > analyzeAssociations ( DataSupport baseObj ) { try { Collection < AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName ( ) ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; return associationInfos ; } catch ( Exception e ) { throw new DataSupportException ( e . getMessage ( ) ) ; } }
11311	public void writeDouble ( double value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _DOUBLE ) ; this . dataOut . writeDouble ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
11337	public static int toRealPosition ( int position , int count ) { position = position - _NUM ; if ( position < _NUM ) { position += count ; } else { position = position % count ; } return position ; }
11342	@ Override public void endCDATA ( Augmentations augs ) throws XNIException { try { if ( fLexicalHandler != _NULL ) { fLexicalHandler . endCDATA ( ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
11500	public void stateChanged ( ChangeEvent event ) { if ( panelFont != _NULL ) { int scroll = charMap4 . getGridScroll ( ) . getValue ( ) ; int newCorner = scroll * panelColumns ; if ( newCorner != cornerIndex ) { cornerIndex = newCorner ; this . repaint ( ) ; } } }
11635	public void merge ( RegistrySearchResponse other ) { AssertUtil . assertNotNull ( other , _CHAR other _CHAR ) ; if ( other . results != _NULL ) { numResults += other . numResults ; if ( results == _NULL ) { results = new ArrayList < Result > ( ) ; } results . addAll ( other . results ) ; } }
11703	public Object clone ( ) { TShortArrayList list = _NULL ; try { list = ( TShortArrayList ) super . clone ( ) ; list . _data = toNativeArray ( ) ; } catch ( CloneNotSupportedException e ) { } return list ; }
11728	public void writeInt ( int value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _INT ) ; this . dataOut . writeInt ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
11827	public boolean canFinish ( ) { IWizardPage page = getContainer ( ) . getCurrentPage ( ) ; if ( page == directoryPage ) { return directoryPage . useProjectName ( ) || directoryPage . getDirectoryName ( ) != _NULL ; } else if ( page == finishPage ) { return _BOOL ; } return super . canFinish ( ) ; }
11844	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; try { camera . autoFocus ( autoFocusCallback ) ; } catch ( Exception e ) { } } }
11858	public static JsonArray array ( boolean ... values ) { if ( values == _NULL ) { throw new NullPointerException ( _CHAR values is _NULL _CHAR ) ; } JsonArray array = new JsonArray ( ) ; for ( boolean value : values ) { array . add ( value ) ; } return array ; }
12045	private void unloadDataStore ( ) { if ( dataSourceInfo != _NULL ) { notifyDataSourceAboutToUnloaded ( dataSourceInfo . getDataStore ( ) ) ; dataSourceInfo . unloadDataStore ( ) ; } if ( exampleDataSourceInfo != _NULL ) { notifyDataSourceAboutToUnloaded ( exampleDataSourceInfo . getDataStore ( ) ) ; exampleDataSourceInfo . unloadDataStore ( ) ; } }
12075	public final TestSubscriber < T > assertNotSubscribed ( ) { int s = subscriptionCount ; if ( s == _NUM ) { throw new AssertionError ( _CHAR OnSubscribe called once _CHAR , _NULL ) ; } if ( s > _NUM ) { throw new AssertionError ( _CHAR OnSubscribe called multiple times : _CHAR + s , _NULL ) ; } return this ; }
12082	public static boolean isSupported ( DataFlavor source , DataFlavor destination ) { if ( supportedMap . isEmpty ( ) ) { populateSupportedMap ( ) ; } List < DataFlavor > list = supportedMap . get ( destination ) ; if ( list != _NULL ) { return list . contains ( source ) ; } return _BOOL ; }
12152	public void removeGroups ( String [ ] oldGroups ) { testArrayForNullElement ( oldGroups ) ; boolean maybeDiscard ; synchronized ( registrars ) { if ( terminated ) throw new IllegalStateException ( _CHAR discovery terminated _CHAR ) ; if ( groups == _NULL ) throw new UnsupportedOperationException ( _CHAR ca n _CHAR_CHAR_CHAR_CHAR ) ; maybeDiscard = removeGroupsInt ( oldGroups ) ; } if ( maybeDiscard ) maybeDiscardRegistrars ( ) ; }
12160	private HavingOperation extractOperation ( Matcher query ) throws BadHavingException { String operationName = query . group ( _NUM ) ; try { return HavingOperation . fromString ( operationName ) ; } catch ( IllegalArgumentException ignored ) { LOG . debug ( HAVING_OPERATOR_INVALID . logFormat ( operationName ) ) ; throw new BadHavingException ( HAVING_OPERATOR_INVALID . format ( operationName ) ) ; } }
12163	public static String toString ( JSONArray ja ) throws JSONException { JSONObject jo = ja . optJSONObject ( _NUM ) ; if ( jo != _NULL ) { JSONArray names = jo . names ( ) ; if ( names != _NULL ) { return rowToString ( names ) + toString ( names , ja ) ; } } return _NULL ; }
12243	public void cleanPAG ( ) { simple . clear ( ) ; load . clear ( ) ; store . clear ( ) ; alloc . clear ( ) ; simpleInv . clear ( ) ; loadInv . clear ( ) ; storeInv . clear ( ) ; allocInv . clear ( ) ; }
12260	private void checkServerResponseCode ( HttpURLConnection urlConnection ) throws RequestFailureException { try { if ( urlConnection . getResponseCode ( ) != _NUM ) { throw new RequestFailureException ( _CHAR Received _CHAR + urlConnection . getResponseCode ( ) + _CHAR code instead of _NUM ( OK ) from the server . Aborting . '' ) ; } } catch ( IOException e ) { throw new RequestFailureException ( _CHAR Failed to read response code from server : _CHAR , e ) ; } }
12263	public void renew ( long extension ) throws LeaseDeniedException , UnknownLeaseException { _leaseRenewed = _BOOL ; _leaseRenewedExtension = extension ; str . setLease ( extension ) ; ParticipantHandle [ ] phs = parthandles ( ) ; if ( phs == _NULL ) return ; for ( ParticipantHandle ph : phs ) { renewParticipantLease ( ph , extension ) ; } }
12308	public static void flushWriter ( Writer wr ) { if ( wr != _NULL ) { try { wr . flush ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } }
12335	public static void loadPlugins ( final Plugins plugins ) throws RuntimeException { for ( final PluginDescription plugin : plugins . getPluginDescriptions ( ) ) { if ( plugin instanceof PhasePluginDescription ) { handlePhasePlugin ( ( PhasePluginDescription ) plugin ) ; } else { G . v ( ) . out . println ( _CHAR [ Warning ] Unhandled plugin of type _CHAR_CHAR_CHAR _CHAR ) ; } } }
12374	@ Override public void populateExpression ( Object objValue ) { TimePeriod timePeriod = new TimePeriod ( ) ; if ( objValue instanceof String ) { timePeriod . decode ( ( String ) objValue ) ; } else if ( objValue instanceof DefaultPeriod ) { timePeriod . decode ( ( DefaultPeriod ) objValue ) ; } populateField ( timePeriod ) ; }
12391	public static Object catcher ( Object input ) { try { NORELEASE . just ( input ) ; } catch ( Throwable t ) { t . printStackTrace ( ) ; NORELEASE . breakpoint ( ) ; } return _NULL ; }
12423	public static File toFile ( URL url ) { if ( url == _NULL || ! _CHAR file _CHAR . equalsIgnoreCase ( url . getProtocol ( ) ) ) { return _NULL ; } else { String filename = url . getFile ( ) . replace ( _CHAR , File . separatorChar ) ; filename = decodeUrl ( filename ) ; return new File ( filename ) ; } }
12472	public Session store ( ) { long expired = Global . getLong ( _CHAR session . alive _CHAR , X . AWEEK ) ; if ( expired > _NUM ) { expired = System . currentTimeMillis ( ) + expired ; } else { expired =- _NUM ; } return store ( expired ) ; }
12494	@ Override public String marshal ( final BigDecimal v ) throws Exception { if ( v != _NULL ) { final DecimalFormatSymbols symbols = new DecimalFormatSymbols ( ) ; symbols . setDecimalSeparator ( _CHAR ) ; return new DecimalFormat ( _CHAR _NUM . _NUM _CHAR , symbols ) . format ( v ) ; } else { return _NULL ; } }
12541	private boolean canRecreateLegion ( Player activePlayer , Legion legion ) { if ( ! isBrigadeGeneral ( activePlayer ) ) { PacketSendUtility . sendPacket ( activePlayer , SM_SYSTEM_MESSAGE . STR_GUILD_DISPERSE_ONLY_MASTER_CAN_DISPERSE ) ; return _BOOL ; } else if ( ! legion . isDisbanding ( ) ) { return _BOOL ; } return _BOOL ; }
12581	public static final double [ ] trim ( double [ ] a , int size ) { if ( a . length == size ) { return a ; } else { double [ ] b = new double [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , size ) ; return b ; } }
12594	private static int calcNumAdditionalMillerRabinRounds ( int bitLength ) { int roundsLeft = _NUM ; if ( bitLength >= _NUM ) { roundsLeft = _NUM ; } else if ( bitLength >= _NUM ) { roundsLeft = _NUM ; } return roundsLeft ; }
12739	public static String readFileToString ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toString ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
12809	@ Override public DataTagCacheObject clone ( ) throws CloneNotSupportedException { DataTagCacheObject dataTagCacheObject = ( DataTagCacheObject ) super . clone ( ) ; if ( address != _NULL ) { dataTagCacheObject . address = ( DataTagAddress ) this . address . clone ( ) ; } if ( sourceTimestamp != _NULL ) { dataTagCacheObject . sourceTimestamp = ( Timestamp ) this . sourceTimestamp . clone ( ) ; } return dataTagCacheObject ; }
12858	void createFinish ( String instanceId ) { if ( ! isDomThread ( ) ) { throw new WXRuntimeException ( _CHAR CreateFinish operation must be done in dom thread _CHAR ) ; } WXDomStatement statement = mDomRegistries . get ( instanceId ) ; if ( statement == _NULL ) { return ; } statement . createFinish ( ) ; }
12896	public void initData ( ) { noteDb = new NoteDatabase ( aty ) ; datas = noteDb . query ( ) ; if ( datas != _NULL ) { adapter = new NotebookAdapter ( aty , datas ) ; } else { getServerData ( ) ; } }
12958	public synchronized void reset ( ) { Iterator iter = m_focus . entrySet ( ) . iterator ( ) ; while ( iter . hasNext ( ) ) { Map . Entry entry = ( Map . Entry ) iter . next ( ) ; TupleSet ts = ( TupleSet ) entry . getValue ( ) ; ts . clear ( ) ; } m_visual . clear ( ) ; m_source . clear ( ) ; }
12965	public final boolean removeRuleId ( final Long pId ) { if ( this . ruleIds . contains ( pId ) ) { this . ruleIds . remove ( pId ) ; this . tagChange = CHANGE_CONFIGURATION ; return _BOOL ; } else { return _BOOL ; } }
13077	public static boolean kingLike ( Item tokenItem ) { String kingName = ( ( String ) tokenItem . findFeature ( _CHAR p . name _CHAR ) ) . toLowerCase ( ) ; if ( inKingSectionLikeHash ( kingName , KING_NAMES ) ) { return _BOOL ; } else { String kingTitle = ( ( String ) tokenItem . findFeature ( _CHAR p . p . name _CHAR ) ) . toLowerCase ( ) ; return inKingSectionLikeHash ( kingTitle , KING_TITLES ) ; } }
13160	public void onMainActivityStart ( ) { try { TraceEvent . begin ( _CHAR GoogleServicesManager . onMainActivityStart _CHAR ) ; boolean accountsChanged = SigninHelper . checkAndClearAccountsChangedPref ( mContext ) ; mSigninHelper . validateAccountSettings ( accountsChanged ) ; } finally { TraceEvent . end ( _CHAR GoogleServicesManager . onMainActivityStart _CHAR ) ; } }
13218	public static byte [ ] readFileToByteArray ( File file ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toByteArray ( in , file . length ( ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
13268	public final TestSubscriber < T > assertSubscribed ( ) { int s = subscriptionCount ; if ( s == _NUM ) { throw new AssertionError ( _CHAR OnSubscribe not called _CHAR , _NULL ) ; } if ( s > _NUM ) { throw new AssertionError ( _CHAR OnSubscribe called multiple times : _CHAR + s , _NULL ) ; } return this ; }
13301	private void updateOCVersion ( ) { UpdateOCVersionOperation update = new UpdateOCVersionOperation ( getAccount ( ) , getContext ( ) ) ; RemoteOperationResult result = update . execute ( getClient ( ) ) ; if ( ! result . isSuccess ( ) ) { mLastFailedResult = result ; } else { mIsShareSupported = update . getOCVersion ( ) . isSharedSupported ( ) ; } }
13310	@ Override protected final boolean processData ( ByteBuffer data ) { if ( ! decrypt ( data ) ) { return _BOOL ; } AionClientPacket pck = AionPacketHandlerFactory . handle ( data , this ) ; if ( ( pck != _NULL ) && pck . read ( ) ) { processor . executePacket ( pck ) ; } return _BOOL ; }
13357	private boolean hasSupportLibraryInClasspath ( ) { try { Class . forName ( _CHAR com . android . support : appcompat - v7 _CHAR ) ; return _BOOL ; } catch ( ClassNotFoundException ex ) { ex . printStackTrace ( ) ; } return _BOOL ; }
13387	@ Override public void write ( char [ ] chr , int st , int len ) throws IOException { try { beforeWrite ( len ) ; out . write ( chr , st , len ) ; afterWrite ( len ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
13504	public synchronized void waitForNonActiveStatus ( ) { try { if ( _status == INITIAL_SCAN_NOTACTIVE ) return ; _needNotifyTermination = _BOOL ; this . wait ( _NUM ) ; } catch ( InterruptedException e ) { Thread . currentThread ( ) . interrupt ( ) ; } }
13521	@ Override public String leaveDTD ( ) { if ( _writer == _dtdWriter ) { _line . append ( _text ) ; _text = new StringBuffer ( _NUM ) ; flushLine ( _BOOL ) ; _writer = _docWriter ; return _dtdWriter . toString ( ) ; } return _NULL ; }
13559	@ Produces @ VenueList @ Named ( value = _CHAR venueList _CHAR ) public List < Venue > produceVenues ( ) { final List < Venue > venues = new ArrayList < > ( ) ; try { venues . add ( new VenueJavaOne2016 ( ) ) ; } catch ( final MalformedURLException e ) { this . log . log ( Level . SEVERE , _CHAR Failed to produce a Venue _CHAR , e ) ; } return venues ; }
13712	protected void processStopRequest ( boolean force ) { if ( mState != State . PREPARING || force ) { mState = State . STOPPED ; mFile = _NULL ; mAccount = _NULL ; releaseResources ( _BOOL ) ; giveUpAudioFocus ( ) ; stopSelf ( ) ; } }
13765	@ Override public void close ( ) { if ( closed ) { return ; } if ( SHOULD_CHECK && ! txn . isReadOnly ( ) ) { txn . checkReady ( ) ; } LIB . mdb_cursor_close ( ptrCursor ) ; closed = _BOOL ; }
13876	private void collectChanges ( UpdateOpHelper helper ) { for ( ModelState newItem : currentStateList ) { if ( newItem . pair == _NULL ) { continue ; } if ( newItem . pair . hashCode != newItem . hashCode ) { helper . update ( newItem . position ) ; } } }
13918	private void startPokeFly ( ) { launchButton . setText ( R . string . main_starting ) ; launchButton . setEnabled ( _BOOL ) ; int statusBarHeight = getStatusBarHeight ( ) ; Intent intent = Pokefly . createIntent ( this , trainerLevel , statusBarHeight , batterySaver ) ; startService ( intent ) ; if ( settings . shouldLaunchPokemonGo ( ) ) { openPokemonGoApp ( ) ; } }
13988	@ JsonIgnore public DateMidnight calculateLastDay ( ) { DateMidnight earliestDay = new DateMidnight ( endTime ) ; if ( state . equals ( State . TERMINATED ) ) { DateMidnight modifiedDay = new DateMidnight ( modificationTime ) ; if ( modifiedDay . isBefore ( earliestDay ) ) { earliestDay = modifiedDay ; } } return earliestDay ; }
14076	@ Override public Filter createFilter ( List < Expression > parameterList ) { IsNullImpl filter = _NULL ; if ( ( parameterList == _NULL ) || parameterList . isEmpty ( ) ) { filter = new IsNullExtended ( ) ; } else { filter = new IsNullExtended ( parameterList . get ( _NUM ) ) ; } return filter ; }
14112	public synchronized boolean unexport ( boolean force ) { if ( ! mainExporter . unexport ( force ) ) { return _BOOL ; } bootExporter . unexport ( _BOOL ) ; if ( ref != _NULL ) { ref . enqueue ( ) ; } return _BOOL ; }
14172	public static final boolean anyIsTrue ( Boolean ... conditions ) { if ( conditions != _NULL ) { for ( Boolean condition : conditions ) { if ( condition != _NULL && condition . booleanValue ( ) ) { return _BOOL ; } } } return _BOOL ; }
14194	public static String removePackageName ( String fully_qualified_name_ ) { if ( fully_qualified_name_ == _NULL ) return _NULL ; int lastdot = fully_qualified_name_ . lastIndexOf ( _CHAR ) ; if ( lastdot < _NUM ) { return _CHAR _CHAR ; } else { return fully_qualified_name_ . substring ( lastdot + _NUM ) ; } }
14265	public static ComponentMeta metaByDescriptionLink ( String descriptionLink ) { if ( _NULL == descriptionLink ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . componentMeta ; }
14355	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( filterTable != _NULL ) && ( undoRedoObject != _NULL ) ) { try { @ SuppressWarnings ( _CHAR unchecked _CHAR ) List < FeatureTypeConstraint > oldValue = ( List < FeatureTypeConstraint > ) undoRedoObject . getOldValue ( ) ; populateField ( oldValue ) ; } catch ( ClassCastException e ) { } } }
14386	public static String apiToMagic ( int targetApiLevel ) { String version ; if ( targetApiLevel >= API_CURRENT ) { version = VERSION_CURRENT ; } else { version = VERSION_FOR_API_13 ; } return MAGIC_PREFIX + version + MAGIC_SUFFIX ; }
14396	public void onClick ( int id ) { switch ( id ) { case _NUM : startLocationUpdates ( ) ; break ; case _NUM : stopLocationUpdates ( ) ; break ; } }
14488	public static String toUTF8 ( String sStr ) { byte [ ] baBytes = sStr . getBytes ( ) ; try { return new String ( baBytes , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return new String ( baBytes ) ; } }
14776	@ Override public int read ( ) throws IOException { if ( eof ) { throw new IOException ( _CHAR Read after end of file _CHAR ) ; } if ( position == size ) { return doEndOfFile ( ) ; } position ++ ; return processChar ( ) ; }
14819	public boolean canModifyUser ( UserCredentials other ) { if ( other == _NULL ) { return _BOOL ; } final Set < String > authorities = getAllAuthorities ( ) ; if ( authorities . contains ( UserAuthorityGroup . AUTHORITY_ALL ) ) { return _BOOL ; } return authorities . containsAll ( other . getAllAuthorities ( ) ) ; }
14888	private void inspectConditionsWithBooleans ( LinkedList < PsiElement > objBranchConditions ) { for ( PsiElement objExpression : objBranchConditions ) { if ( ! ( objExpression instanceof ConstantReference ) ) { continue ; } if ( ExpressionSemanticUtil . isBoolean ( ( ConstantReference ) objExpression ) ) { holder . registerProblem ( objExpression , strProblemDescriptionBooleans , ProblemHighlightType . GENERIC_ERROR_OR_WARNING ) ; } } }
14963	@ Override public void onPassphraseTypeSelected ( PassphraseType type ) { if ( ! mProfileSyncService . isBackendInitialized ( ) ) { return ; } boolean isAllDataEncrypted = mProfileSyncService . isEncryptEverythingEnabled ( ) ; boolean isUsingSecondaryPassphrase = mProfileSyncService . isUsingSecondaryPassphrase ( ) ; assert ! isAllDataEncrypted ; assert ! isUsingSecondaryPassphrase ; displayCustomPassphraseDialog ( ) ; }
14986	public static File toFile ( URL url ) { if ( url == _NULL || ! _CHAR file _CHAR . equalsIgnoreCase ( url . getProtocol ( ) ) ) { return _NULL ; } else { String filename = url . getFile ( ) . replace ( _CHAR , File . separatorChar ) ; filename = decodeUrl ( filename ) ; return new File ( filename ) ; } }
14988	private void recoverInternal ( String streamIdentifier ) throws IOException { checkClosedOrInError ( _CHAR recoverInternal _CHAR ) ; BKLogWriteHandler ledgerHandler = createWriteHandler ( _BOOL ) ; try { FutureUtils . result ( ledgerHandler . recoverIncompleteLogSegments ( ) ) ; } finally { Utils . closeQuietly ( ledgerHandler ) ; } }
15089	@ Override public void onRequestError ( int code , String message ) { if ( code == ConnectAPI . LOGIN_CODE ) { emailLayout . setError ( _CHAR Enter valid Email _CHAR ) ; requestFocus ( email ) ; passwordLayout . setError ( _CHAR Enter valid Password _CHAR ) ; requestFocus ( password ) ; signin . setText ( _CHAR Sign in _CHAR ) ; signin . setClickable ( _BOOL ) ; } }
15129	private double extractDouble ( JsonObject jsonObj , String field ) { double value = _NUM . _NUM ; if ( jsonObj != _NULL ) { JsonElement element = jsonObj . get ( field ) ; if ( element != _NULL ) { value = element . getAsDouble ( ) ; } } return value ; }
15152	private List < ColumnModel > findColumnsToAdd ( ) { List < ColumnModel > columnsToAdd = new ArrayList < ColumnModel > ( ) ; for ( ColumnModel columnModel : mTableModel . getColumnModels ( ) ) { String columnName = columnModel . getColumnName ( ) ; if ( ! mTableModelDB . containsColumn ( columnName ) ) { columnsToAdd . add ( columnModel ) ; } } return columnsToAdd ; }
15156	public Fraction abs ( ) { Fraction ret ; if ( numerator >= _NUM ) { ret = this ; } else { ret = negate ( ) ; } return ret ; }
15225	public void addColumn ( String name , String expr ) { Expression ex = ExpressionParser . parse ( expr ) ; Throwable t = ExpressionParser . getError ( ) ; if ( t != _NULL ) { throw new RuntimeException ( t ) ; } else { addColumn ( name , ex ) ; } }
15308	@ Override public void populateField ( List < FeatureTypeConstraint > valueList ) { if ( filterModel != _NULL ) { if ( valueList != _NULL ) { filterModel . populate ( valueList ) ; UndoManager . getInstance ( ) . addUndoEvent ( new UndoEvent ( this , getFieldId ( ) , oldValueObj , valueList ) ) ; oldValueObj = valueList ; valueUpdated ( ) ; } } }
15312	public String readLine ( ) throws IOException { StringBuilder buf = new StringBuilder ( ) ; byte b = ( byte ) read ( ) ; while ( b != _CHAR ) { buf . append ( ( char ) b ) ; b = ( byte ) in . read ( ) ; if ( getPosition ( ) >= length ( ) ) break ; } return buf . toString ( ) ; }
15380	protected static ImageIcon createImageIcon ( String path ) { java . net . URL imgURL = ImageFileExtensionUtils . class . getResource ( path ) ; if ( imgURL != _NULL ) { return new ImageIcon ( imgURL ) ; } else { ConsoleManager . getInstance ( ) . error ( ImageFileExtensionUtils . class , _CHAR Could n _CHAR_CHAR + path ) ; return null ; } }
15482	public static void flushWriter ( Writer wr ) { if ( wr != _NULL ) { try { wr . flush ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } }
15489	public static final float [ ] trim ( float [ ] a , int size ) { if ( a . length == size ) { return a ; } else { float [ ] b = new float [ size ] ; System . arraycopy ( a , _NUM , b , _NUM , size ) ; return b ; } }
15554	public long addAndGet ( final long increment ) { long currentValue ; long newValue ; do { currentValue = get ( ) ; newValue = currentValue + increment ; } while ( ! compareAndSet ( currentValue , newValue ) ) ; return newValue ; }
15582	boolean needsRollover ( ) { Calendar now = GregorianCalendar . getInstance ( ) ; if ( now . compareTo ( nextRollover ) > _NUM ) { setTimestamp ( ) ; return _BOOL ; } else { return _BOOL ; } }
15609	private void addValue ( String key , String value ) { if ( ( key == _NULL ) || key . isEmpty ( ) ) { keyList . add ( _CHAR _CHAR ) ; valueMap . put ( _CHAR _CHAR , value ) ; } else { keyList . add ( key ) ; valueMap . put ( key , value ) ; } }
15814	void updateFinish ( String instanceId ) { if ( ! isDomThread ( ) ) { throw new WXRuntimeException ( _CHAR RefreshFinish operation must be done in dom thread _CHAR ) ; } WXDomStatement statement = mDomRegistries . get ( instanceId ) ; if ( statement == _NULL ) { return ; } statement . updateFinish ( ) ; }
15908	@ Override public void startContentModel ( String elementName , Augmentations augs ) throws XNIException { if ( fValidation ) { fDTDElementDeclName = elementName ; fMixedElementTypes . clear ( ) ; } if ( fDTDGrammar != _NULL ) fDTDGrammar . startContentModel ( elementName , augs ) ; if ( fDTDContentModelHandler != _NULL ) { fDTDContentModelHandler . startContentModel ( elementName , augs ) ; } }
16014	@ ObjectiveCName ( _CHAR unlisten : _CHAR ) public void unlisten ( String pattern ) { UtilListener listener = listeners . get ( pattern ) ; if ( listener != _NULL ) { listener . destroy ( ) ; listeners . remove ( pattern ) ; } else { client . onError ( Topic . RECORD , Event . NOT_LISTENING , pattern ) ; } }
16048	public static JsonArray array ( String ... strings ) { if ( strings == _NULL ) { throw new NullPointerException ( _CHAR values is _NULL _CHAR ) ; } JsonArray array = new JsonArray ( ) ; for ( String value : strings ) { array . add ( value ) ; } return array ; }
16054	public ServerConfiguration killBookie ( int index ) throws Exception { if ( index >= bs . size ( ) ) { throw new IOException ( _CHAR Bookie does not exist _CHAR ) ; } BookieServer server = bs . get ( index ) ; server . shutdown ( ) ; stopAutoRecoveryService ( server ) ; bs . remove ( server ) ; return bsConfs . remove ( index ) ; }
16070	public void loadDataStringFromFile ( String sFilename ) { try { Histogram . loadDataStringFromFile ( sFilename ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; Histogram . setDataString ( _CHAR _CHAR ) ; Graph . setDataString ( _CHAR _CHAR ) ; } }
16107	public static String readText ( Context context , String assetPath ) { LogUtils . debug ( _CHAR read assets file as text : _CHAR + assetPath ) ; try { return ConvertUtils . toString ( context . getAssets ( ) . open ( assetPath ) ) ; } catch ( Exception e ) { LogUtils . error ( e ) ; return _CHAR _CHAR ; } }
16115	@ Override public Object invoke ( MethodInvocation invocation ) throws Throwable { Subreport subreport = invocation . getMethod ( ) . getAnnotation ( Subreport . class ) ; testEventCollector . startSubreport ( subreport . value ( ) ) ; try { return invocation . proceed ( ) ; } finally { testEventCollector . endSubreport ( subreport . value ( ) ) ; } }
16153	public Decoration findRealDecorationOfDummy ( int pieceIndex , int decorationIndex ) { if ( getDecoration ( pieceIndex , decorationIndex ) != dummyDecoration ) { throw new IllegalArgumentException ( _CHAR The specified decoration must be a dummy ! _CHAR ) ; } int i = decorationIndex ; while ( getDecoration ( pieceIndex , i ) == dummyDecoration ) { i -- ; } return getDecoration ( pieceIndex , i ) ; }
16254	private void startupPlugins ( ) { for ( PluginEntry entry : entryMap . values ( ) ) { if ( entry . onload ) { getPlugin ( entry . service ) ; } else { pluginMap . put ( entry . service , _NULL ) ; } } }
16278	public Session createSession ( boolean transacted , int acknowledgeMode ) throws JMSException { if ( closed ) { throw new IllegalStateException ( _CHAR Forbidden call on a closed connection . '' ) ; } GSSessionImpl session = new GSSessionImpl ( this , transacted , acknowledgeMode ) ; if ( ! isStopped ( ) ) { session . start ( ) ; } return session ; }
16462	@ Override public ASModel parseASInputSource ( LSInput is ) throws Exception { XMLInputSource xis = this . dom2xmlInputSource ( is ) ; try { return parseASInputSource ( xis ) ; } catch ( XNIException e ) { Exception ex = e . getException ( ) ; throw ex ; } }
16475	@ Override public void initialize ( InputSplit split ) throws IOException , InterruptedException { if ( split instanceof ListStringSplit ) { ListStringSplit listStringSplit = ( ListStringSplit ) split ; delimitedData = listStringSplit . getData ( ) ; dataIter = delimitedData . iterator ( ) ; } else { throw new IllegalArgumentException ( _CHAR Illegal type of input split _CHAR + split . getClass ( ) . getName ( ) ) ; } }
16544	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
16580	public static final double show ( Window owner ) { ApplyTorqueDialog atd = new ApplyTorqueDialog ( owner ) ; atd . setLocationRelativeTo ( owner ) ; atd . setVisible ( _BOOL ) ; if ( ! atd . canceled ) { double t = atd . torquePanel . getTorque ( ) ; return t ; } return _NUM . _NUM ; }
16615	public boolean isResolvable ( String host ) { try { InetAddress . getByName ( host ) . getHostAddress ( ) ; return _BOOL ; } catch ( UnknownHostException ex ) { Logger . log ( JavaxPacScriptParser . class , LogLevel . DEBUG , _CHAR Hostname not resolveable { _NUM } . _CHAR , host ) ; } return _BOOL ; }
16661	public boolean hasMagicalStateEffect ( ) { Iterator < Effect > effectIterator = this . abnormalEffectMap . values ( ) . iterator ( ) ; while ( effectIterator . hasNext ( ) ) { Effect localEffect = effectIterator . next ( ) ; if ( localEffect . isMagicalState ( ) ) { return _BOOL ; } } return _BOOL ; }
16780	public boolean has ( String key ) { LazyNode child = root . child ; while ( child != _NULL ) { if ( keyMatch ( key , child ) ) { return _BOOL ; } child = child . next ; } return _BOOL ; }
16789	@ Nullable public static Label createLabelForFile ( BlazePackage blazePackage , @ Nullable String filePath ) { if ( blazePackage == _NULL || filePath == _NULL ) { return _NULL ; } String relativeFilePath = blazePackage . getPackageRelativePath ( filePath ) ; if ( relativeFilePath == _NULL ) { return _NULL ; } return createLabelFromRuleName ( blazePackage , relativeFilePath ) ; }
16889	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
16979	public void seekToPlaying ( int milliseconds ) { if ( this . readyPlayer ( this . audioFile ) ) { this . player . seekTo ( milliseconds ) ; Log . d ( LOG_TAG , _CHAR Send a onStatus update for the new seek '' ) ; sendStatusChange ( MEDIA_POSITION , _NULL , ( milliseconds / _NUM . _NUM ) ) ; } else { this . seekOnPrepared = milliseconds ; } }
17018	public static Activity scanForActivity ( Context context ) { if ( context == _NULL ) return _NULL ; if ( context instanceof Activity ) { return ( Activity ) context ; } else if ( context instanceof ContextWrapper ) { return scanForActivity ( ( ( ContextWrapper ) context ) . getBaseContext ( ) ) ; } return _NULL ; }
17096	public static String readFromFile ( String fileName ) throws IOException { InputStream in = RequestExecutionHelper . class . getClassLoader ( ) . getResourceAsStream ( fileName ) ; try { String result = StreamHelper . readStreamContent ( in ) ; return result ; } finally { in . close ( ) ; } }
17150	private List < Expression > createDashArrayList ( float [ ] dashes ) { List < Expression > dashExpressionList = _NULL ; if ( dashes != _NULL ) { dashExpressionList = new ArrayList < Expression > ( ) ; for ( float dashValue : dashes ) { dashExpressionList . add ( getFilterFactory ( ) . literal ( dashValue ) ) ; } } return dashExpressionList ; }
17153	public static String md5 ( File file ) { if ( file == _NULL ) throw new IllegalArgumentException ( _CHAR file can not be _NULL _CHAR ) ; try { HashCode hc = Files . hash ( file , Hashing . md5 ( ) ) ; return toHex ( hc . asBytes ( ) ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
17170	public boolean isItemSelected ( Object userObject , Symbolizer parentSymbolizer ) { boolean selectedItem = _BOOL ; if ( userObject instanceof Fill ) { selectedItem = hasFill ( parentSymbolizer ) ; } else if ( userObject instanceof Stroke ) { selectedItem = hasStroke ( parentSymbolizer ) ; } return selectedItem ; }
17193	public static boolean isFileTypeSupported ( int fileType ) { List providers = getMidiFileWriters ( ) ; for ( int i = _NUM ; i < providers . size ( ) ; i ++ ) { MidiFileWriter writer = ( MidiFileWriter ) providers . get ( i ) ; if ( writer . isFileTypeSupported ( fileType ) ) { return _BOOL ; } } return _BOOL ; }
17222	public void handleLegionRequest ( int exOpcode , Player activePlayer , String text ) { switch ( exOpcode ) { case _NUM : changeAnnouncement ( activePlayer , text ) ; break ; case _NUM : changeSelfIntro ( activePlayer , text ) ; break ; } }
17251	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
17304	public void seekToPlaying ( int milliseconds ) { if ( this . readyPlayer ( this . audioFile ) ) { this . player . seekTo ( milliseconds ) ; Log . d ( LOG_TAG , _CHAR Send a onStatus update for the new seek '' ) ; sendStatusChange ( MEDIA_POSITION , _NULL , ( milliseconds / _NUM . _NUM ) ) ; } else { this . seekOnPrepared = milliseconds ; } }
17305	private void initFilter ( ReplicationFilterWrapper filterHolder , String url ) throws SpaceComponentsInitializeException { try { filterHolder . init ( _space , url , _replicationPolicy ) ; } catch ( RuntimeException re ) { if ( _shutdownSpaceOnInitFailure ) { throw new SpaceComponentsInitializeException ( _CHAR Failed to initialize replication filter - _CHAR + filterHolder . getClassName ( ) , re ) ; } } }
17351	private void dismiss ( ) { preferencesManager . setDisplayed ( usageId ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) { if ( isRevealAnimationEnabled ) exitRevealAnimation ( ) ; else startFadeout ( ) ; } else { startFadeout ( ) ; } }
17356	private synchronized void notifyListeners ( final Tag clone ) { for ( BaseListener updateListener : listeners ) { try { updateListener . onUpdate ( clone ) ; } catch ( Exception e ) { LOG . error ( _CHAR notifyListeners ( ) : error notifying DataTagUpdateListeners _CHAR , e ) ; } } }
17358	public Vector3f addLocal ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x += vec . x ; y += vec . y ; z += vec . z ; return this ; }
17417	public Object removeInternalSetting ( Object key ) { Object removed = _NULL ; if ( _internalSettings != _NULL ) { removed = _internalSettings . remove ( key ) ; if ( _internalSettings . size ( ) == _NUM ) { _internalSettings = _NULL ; } } return removed ; }
17533	public Object clone ( ) { Object newObject = _NULL ; try { newObject = super . clone ( ) ; } catch ( CloneNotSupportedException e ) { e . printStackTrace ( ) ; } return newObject ; }
17563	public Line sharedLineWith ( final Vertex vertex ) { for ( final Line line1 : lines ) { for ( final Line line2 : vertex . lines ) { if ( line1 == line2 ) { return line1 ; } } } return _NULL ; }
17607	public boolean adjustValue ( short key , long amount ) { int index = index ( key ) ; if ( index < _NUM ) { return _BOOL ; } else { _values [ index ] += amount ; return _BOOL ; } }
17682	private void displayCustomProcessFunction ( String selectedValue ) { ProcessBriefType selectedFunction = _NULL ; for ( ProcessBriefType function : availableFunctionList ) { if ( function . getIdentifier ( ) . getValue ( ) . compareTo ( selectedValue ) == _NUM ) { selectedFunction = function ; break ; } } functionParameterTableModel . populate ( selectedFunction ) ; }
17683	public static ComponentMeta metaByType ( String type ) { if ( _NULL == type ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . componentMeta ; }
17710	private static int findeol ( byte b [ ] , int pos , int len ) { int end = pos + len ; int i = pos ; while ( i < end ) { if ( b [ i ++ ] == _CHAR ) { return i - pos ; } } return - _NUM ; }
17726	public void removeAndCreateNewLog ( ) { logMgrLock . lock ( ) ; try { VanillaDb . fileMgr ( ) . rebuildLogFile ( ) ; appendNewBlock ( ) ; } finally { logMgrLock . unlock ( ) ; } }
17745	private String toCommaSeparatedString ( List < ? > proxyExceptions ) { StringBuilder result = new StringBuilder ( ) ; for ( Object object : proxyExceptions ) { if ( result . length ( ) > _NUM ) { result . append ( _CHAR , _CHAR ) ; } result . append ( object ) ; } return result . toString ( ) ; }
17796	public synchronized void closeFolder ( boolean expunge ) { try { if ( folder != _NULL && folder . isOpen ( ) ) { folder . close ( expunge ) ; } } catch ( MessagingException e ) { throw new EmailException ( format ( _CHAR Error while closing mailbox folder % s '' , folder . getName ( ) ) , e ) ; } }
17852	public boolean isDirectDictionaryColumns ( ) { List < ColumnExpression > listOfExp = new ArrayList < ColumnExpression > ( CarbonCommonConstants . DEFAULT_COLLECTION_SIZE ) ; getColumnList ( this , listOfExp ) ; for ( ColumnExpression ce : listOfExp ) { if ( ! ce . getCarbonColumn ( ) . hasEncoding ( Encoding . DICTIONARY ) ) { return _BOOL ; } } return _BOOL ; }
17948	public static String toUTF8 ( String sStr ) { byte [ ] baBytes = sStr . getBytes ( ) ; try { return new String ( baBytes , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return new String ( baBytes ) ; } }
17973	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
18022	public int compare ( File file1 , File file2 ) { int result = _NUM ; for ( Comparator < File > delegate : delegates ) { result = delegate . compare ( file1 , file2 ) ; if ( result != _NUM ) { break ; } } return result ; }
18054	private synchronized void addTracker ( String path , Object marker , FileDeleteStrategy deleteStrategy ) { if ( exitWhenFinished ) { throw new IllegalStateException ( _CHAR No new trackers can be added once exitWhenFinished ( ) is called _CHAR ) ; } if ( reaper == _NULL ) { reaper = new Reaper ( ) ; reaper . start ( ) ; } trackers . add ( new Tracker ( path , deleteStrategy , marker , q ) ) ; }
18060	protected String renderHighlight ( JSONArray hit ) { StringBuilder sb = new StringBuilder ( ) ; for ( Object o : hit ) { if ( sb . length ( ) != _NUM ) { sb . append ( _CHAR ... _CHAR ) ; } sb . append ( renderSingleHighlight ( getArray ( o , _CHAR parts _CHAR ) ) ) ; } return sb . toString ( ) ; }
18113	public void moveToTargetObject ( ) { if ( started . compareAndSet ( _BOOL , _BOOL ) ) { if ( owner . getAi2 ( ) . isLogging ( ) ) { AI2Logger . moveinfo ( owner , _CHAR MC : moveToTarget started _CHAR ) ; } destination = Destination . TARGET_OBJECT ; updateLastMove ( ) ; MoveTaskManager . getInstance ( ) . addCreature ( owner ) ; } }
18123	public void addToken ( View v ) { if ( selectedToken != _NULL ) { cth . addToken ( selectedToken ) ; updateEditField ( ) ; updateClipPreview ( ) ; } else { Toast . makeText ( this , R . string . clipboard_no_token_selected , Toast . LENGTH_LONG ) . show ( ) ; } }
18174	public static double calcHaMultiplier ( Boolean vcenterhastate ) { double d = _NUM ; if ( vcenterhastate ) { d = _NUM . _NUM ; } else { d = _NUM ; } return d ; }
18188	synchronized public boolean update ( String expected ) { if ( ! cookie . equals ( expected ) ) return _BOOL ; String newCookie ; do { newCookie = Long . toHexString ( RANDOM . nextLong ( ) ) ; } while ( cookie . equals ( newCookie ) ) ; cookie = newCookie ; return _BOOL ; }
18315	public static File toFile ( URL url ) { if ( url == _NULL || ! _CHAR file _CHAR . equalsIgnoreCase ( url . getProtocol ( ) ) ) { return _NULL ; } else { String filename = url . getFile ( ) . replace ( _CHAR , File . separatorChar ) ; filename = decodeUrl ( filename ) ; return new File ( filename ) ; } }
18325	@ Override protected Object fetchRelatedObject ( RegistryEntry entry , Serializable relationId , RepositoryMethodParameterProvider parameterProvider , QueryAdapter queryAdapter ) { String uid = getUID ( entry , relationId ) ; Object relatedResource = resourceMap . get ( uid ) ; if ( relatedResource != _NULL ) { return relatedResource ; } else { return _NULL ; } }
18487	public static String prettyPrintArgv ( List < String > argv ) { StringBuilder buf = new StringBuilder ( ) ; for ( String arg : argv ) { if ( buf . length ( ) > _NUM ) { buf . append ( _CHAR ) ; } buf . append ( shellEscape ( arg ) ) ; } return buf . toString ( ) ; }
18572	public boolean add ( JobStatus jobStatus ) { boolean replaced = mJobSet . remove ( jobStatus ) ; mJobSet . add ( jobStatus ) ; if ( jobStatus . isPersisted ( ) ) { maybeWriteStatusToDiskAsync ( ) ; } if ( DEBUG ) { } return replaced ; }
18596	public static int tryParseInt ( String toParse , String defaultValue ) { int result ; try { result = Integer . parseInt ( toParse ) ; } catch ( NumberFormatException ex ) { result = Integer . parseInt ( defaultValue ) ; } return result ; }
18669	@ Override public boolean accept ( File pathname ) { try { try ( InputReader r = new InputReader ( pathname , _NULL , _NULL , _BOOL ) ) { return r . readInt ( ) == RMA2File . MAGIC_NUMBER && r . readInt ( ) == _NUM ; } } catch ( IOException e ) { return _BOOL ; } }
18692	protected void printComponent ( Graphics g ) { boolean wasHighQuality = m_highQuality ; try { m_highQuality = _BOOL ; paintDisplay ( ( Graphics2D ) g , getSize ( ) ) ; } finally { m_highQuality = wasHighQuality ; } }
18746	public boolean twrHandlesException ( TypeDecl exceptionType ) { ASTNode $ State state = state ( ) ; try { if ( catchHandlesException ( exceptionType ) ) return _BOOL ; if ( hasFinally ( ) && ! getFinally ( ) . canCompleteNormally ( ) ) return _BOOL ; return handlesException ( exceptionType ) ; } finally { } }
18778	protected void startBKCluster ( ) throws Exception { baseClientConf . setZkServers ( zkUtil . getZooKeeperConnectString ( ) ) ; baseClientConf . setUseV2WireProtocol ( _BOOL ) ; if ( numBookies > _NUM ) { bkc = new BookKeeperTestClient ( baseClientConf ) ; } for ( int i = _NUM ; i < numBookies ; i ++ ) { startNewBookie ( ) ; } }
18792	@ Override public Boolean next ( ) { byte b = iterator . next ( ) ; if ( b == ( byte ) _NUM ) { return _BOOL ; } if ( b == ( byte ) _NUM ) { return _BOOL ; } return _NULL ; }
18828	public static final void initZK ( ZooKeeper zkc , String selfBrokerUrl ) { try { LocalZooKeeperConnectionService . checkAndCreatePersistNode ( zkc , OWNER_INFO_ROOT ) ; cleanupNamespaceNodes ( zkc , OWNER_INFO_ROOT , selfBrokerUrl ) ; } catch ( Exception e ) { LOG . error ( e . getMessage ( ) , e ) ; throw new RuntimeException ( e ) ; } }
18856	public int findIndexOfValue ( String value ) { if ( value != _NULL && mEntryValues != _NULL ) { for ( int i = mEntryValues . length - _NUM ; i >= _NUM ; i -- ) { if ( mEntryValues [ i ] . equals ( value ) ) { return i ; } } } return - _NUM ; }
18971	private void updateNotification ( int notificationId , int mediaType , String url ) { if ( doesNotificationExist ( notificationId ) && ! doesNotificationNeedUpdate ( notificationId , mediaType ) ) { return ; } destroyNotification ( notificationId ) ; if ( mediaType != MEDIATYPE_NO_MEDIA ) { createNotification ( notificationId , mediaType , url ) ; } if ( mNotifications . size ( ) == _NUM ) stopSelf ( ) ; }
19045	public Literal parse ( ) { if ( getLITERAL ( ) . length ( ) == _NUM ) throw new IllegalStateException ( _CHAR Empty NumericLiteral _CHAR ) ; kind = classifyLiteral ( ) ; Literal literal ; if ( ! floating ) literal = parseDigits ( ) ; else literal = parseFractionPart ( ) ; literal . setStart ( LITERALstart ) ; literal . setEnd ( LITERALend ) ; return literal ; }
19136	public static void removeEmptys ( List < String > list ) { if ( list != _NULL && ! list . isEmpty ( ) ) { Iterator < String > iterator = list . iterator ( ) ; while ( iterator . hasNext ( ) ) { if ( StringUtils . isEmpty ( iterator . next ( ) ) ) { iterator . remove ( ) ; } } } }
19293	public static boolean checkClassValid ( TypeElement type ) { Set < Modifier > modifiers = type . getModifiers ( ) ; if ( modifiers . contains ( Modifier . ABSTRACT ) ) { return _BOOL ; } if ( modifiers . contains ( Modifier . PRIVATE ) ) { throw new ParcelException ( String . format ( _CHAR class % s must not be modified by private _CHAR , type . getQualifiedName ( ) ) , type ) ; } return _BOOL ; }
19295	public static void toPdf ( List < Grid > grids , OutputStream out ) { if ( hasNonEmptyGrid ( grids ) ) { Document document = openDocument ( out ) ; for ( Grid grid : grids ) { toPdfInternal ( grid , document , _NUM ) ; } addPdfTimestamp ( document , _BOOL ) ; closeDocument ( document ) ; } }
19339	@ Override protected Expression generateExpression ( ) { Expression expression = _NULL ; if ( this . textField != _NULL ) { String text = textField . getText ( ) ; if ( ( text != _NULL ) && ! text . isEmpty ( ) ) { expression = getFilterFactory ( ) . literal ( text ) ; } } return expression ; }
19395	public boolean onBackPressed ( ) { if ( drawer . isDrawerOpen ( GravityCompat . START ) ) { drawer . closeDrawer ( GravityCompat . START ) ; return _BOOL ; } else { drawer . removeDrawerListener ( toggle ) ; return _BOOL ; } }
19442	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
19462	public static String trim ( final String string ) { String result = _NULL ; if ( string == _NULL ) { result = BLANK ; } else { result = string . trim ( ) ; } return result ; }
19495	public String readLine ( ) { String line ; try { line = scanner . nextLine ( ) ; } catch ( NoSuchElementException e ) { line = _NULL ; } return line ; }
19511	public boolean equals ( Object other ) { if ( ! ( other instanceof TShortObjectHashMap ) ) { return _BOOL ; } TShortObjectHashMap that = ( TShortObjectHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
19513	@ SuppressWarnings ( _CHAR unchecked _CHAR ) void removeBox ( ValueBox vb ) { if ( vb == _NULL ) return ; if ( boxes == vb ) { boxes = _NULL ; } else if ( boxes instanceof List ) { List < ValueBox > list = ( List < ValueBox > ) boxes ; list . remove ( vb ) ; } }
19530	public boolean hasPhysicalStateEffect ( ) { Iterator < Effect > effectIterator = this . abnormalEffectMap . values ( ) . iterator ( ) ; while ( effectIterator . hasNext ( ) ) { Effect localEffect = effectIterator . next ( ) ; if ( localEffect . isPhysicalState ( ) ) { return _BOOL ; } } return _BOOL ; }
19605	@ Override protected final boolean writeData ( ByteBuffer data ) { synchronized ( guard ) { LsServerPacket packet = sendMsgQueue . pollFirst ( ) ; if ( packet == _NULL ) { return _BOOL ; } packet . write ( this , data ) ; return _BOOL ; } }
19611	@ Override public void write ( String str , int st , int len ) throws IOException { try { beforeWrite ( len ) ; out . write ( str , st , len ) ; afterWrite ( len ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
19648	private void mapContainerIPAddress ( ContainerState containerState , Map < String , Object > networkSettings ) { if ( networkSettings == _NULL ) { return ; } Object ipAddress = networkSettings . get ( DOCKER_CONTAINER_NETWORK_SETTINGS_IP_ADDRESS_PROP_NAME ) ; if ( ipAddress == _NULL ) { return ; } containerState . address = ipAddress . toString ( ) ; }
19715	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
19730	private void storeDownloadInfo ( String type , Set < String > downloadInfo ) { SharedPreferences . Editor editor = mSharedPrefs . edit ( ) ; if ( downloadInfo . isEmpty ( ) ) { editor . remove ( type ) ; } else { editor . putStringSet ( type , downloadInfo ) ; } editor . apply ( ) ; }
19732	public boolean isFilterColumn ( int [ ] selectedColumns ) { if ( selectedColumns != _NULL ) { for ( int column : selectedColumns ) { if ( column == COL_FILTER ) { return _BOOL ; } } } return _BOOL ; }
19740	@ Override public boolean input ( I input ) { if ( getAvailableInputSlot ( ) <= _NUM ) { return _BOOL ; } int bufferIndex = ( int ) ( inputCnt % bufferSize ) ; inputs . set ( bufferIndex , input ) ; inputCnt ++ ; scheduleRun ( ) ; return _BOOL ; }
19806	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( filterTable != _NULL ) && ( undoRedoObject != _NULL ) ) { try { @ SuppressWarnings ( _CHAR unchecked _CHAR ) List < FeatureTypeConstraint > newValue = ( List < FeatureTypeConstraint > ) undoRedoObject . getNewValue ( ) ; populateField ( newValue ) ; } catch ( ClassCastException e ) { } } }
19808	private Node traversePartiallySelected ( Node n , int how ) { switch ( how ) { case DELETE_CONTENTS : return _NULL ; case CLONE_CONTENTS : case EXTRACT_CONTENTS : return n . cloneNode ( _BOOL ) ; } return _NULL ; }
19864	public boolean isWifiConnection ( ) { try { ConnectivityManager manager = ( ConnectivityManager ) app . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo ni = manager . getActiveNetworkInfo ( ) ; return ni != _NULL && ni . getType ( ) == ConnectivityManager . TYPE_WIFI ; } catch ( Throwable t ) { return _BOOL ; } }
19900	public static String factoryLinkByDescriptionLink ( String descriptionLink ) { if ( _NULL == descriptionLink ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . descriptionFactoryLink ; }
19927	void stop ( ) { if ( ! configuration . customExecutor ) { ( ( ExecutorService ) taskExecutor ) . shutdownNow ( ) ; } if ( ! configuration . customExecutorForCachedImages ) { ( ( ExecutorService ) taskExecutorForCachedImages ) . shutdownNow ( ) ; } cacheKeysForImageAwares . clear ( ) ; uriLocks . clear ( ) ; }
20023	public void openPageByTitle ( String title ) { SiteAdminGridRow row = getRowByTitle ( title ) ; if ( row != _NULL ) { row . open ( ) ; } else { String msg = String . format ( _CHAR Could not find a page titled % s _CHAR , title ) ; throw new IllegalArgumentException ( msg ) ; } }
20049	public void pausePlaying ( ) { if ( this . state == STATE . MEDIA_RUNNING && this . player != _NULL ) { this . player . pause ( ) ; this . setState ( STATE . MEDIA_PAUSED ) ; } else { Log . d ( LOG_TAG , _CHAR AudioPlayer Error : pausePlaying ( ) called during invalid state : _CHAR + this . state . ordinal ( ) ) ; sendErrorStatus ( MEDIA_ERR_NONE_ACTIVE ) ; } }
20094	public boolean equals ( Object other ) { if ( ! ( other instanceof TObjectLongHashMap ) ) { return _BOOL ; } TObjectLongHashMap that = ( TObjectLongHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
20143	public long fileSize ( ) { try { if ( ! isTempTable ( ) ) tx . concurrencyMgr ( ) . readFile ( fileName ) ; } catch ( LockAbortException e ) { tx . rollback ( ) ; throw e ; } return VanillaDb . fileMgr ( ) . size ( fileName ) ; }
20254	@ Override public boolean equals ( Object other ) { if ( this == other ) { return _BOOL ; } if ( other instanceof Fraction ) { Fraction rhs = ( Fraction ) other ; return ( numerator == rhs . numerator ) && ( denominator == rhs . denominator ) ; } return _BOOL ; }
20258	public boolean isComponentPresent ( String cssClassName ) { try { wait . withTimeout ( Timeouts . SMALL ) . until ( ExpectedConditions . visibilityOf ( currentScope . findElement ( getComponentLocator ( cssClassName ) ) ) ) ; return _BOOL ; } catch ( NoSuchElementException e ) { LOG . debug ( String . format ( _CHAR component located by : % s is not present _CHAR , cssClassName ) , e ) ; return _BOOL ; } }
20262	@ Nullable public static File findPlatformSources ( @ NotNull IAndroidTarget target ) { String path = target . getPath ( IAndroidTarget . SOURCES ) ; if ( path != _NULL ) { File platformSource = new File ( path ) ; if ( platformSource . isDirectory ( ) ) { return platformSource ; } } return _NULL ; }
20398	public void addLookupAttributes ( Entry [ ] attrSets ) { if ( operationsLogger . isLoggable ( Level . FINER ) ) { operationsLogger . entering ( JoinStateManager . class . getName ( ) , _CHAR addLookupAttributes _CHAR ) ; } mgr . addAttributes ( attrSets , _BOOL ) ; update ( ) ; if ( operationsLogger . isLoggable ( Level . FINER ) ) { operationsLogger . exiting ( JoinStateManager . class . getName ( ) , _CHAR addLookupAttributes _CHAR ) ; } }
20432	public Object clone ( ) { try { EntryRep entry = ( EntryRep ) super . clone ( ) ; entry . fields = entry . fields . clone ( ) ; return entry ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } }
20494	public static String factoryLinkByType ( String type ) { if ( _NULL == type ) { return _NULL ; } List < RegistryEntry > list = entries . stream ( ) . filter ( _NULL ) . collect ( Collectors . toList ( ) ) ; if ( list . isEmpty ( ) ) { return _NULL ; } return list . get ( _NUM ) . descriptionFactoryLink ; }
20508	final public void print ( Object o ) { try { BufferedWriter writer = new BufferedWriter ( resp . getWriter ( ) ) ; writer . write ( o . toString ( ) ) ; writer . flush ( ) ; } catch ( Exception e ) { if ( log . isErrorEnabled ( ) ) log . error ( o , e ) ; } }
20515	public void invertProbability ( ) { normalizeToSum ( ) ; double dRemaining = _NUM . _NUM ; Iterator < TKeyType > iIter = hDistro . keySet ( ) . iterator ( ) ; while ( iIter . hasNext ( ) ) { TKeyType oNext = iIter . next ( ) ; setValue ( oNext , dRemaining - getValue ( oNext ) ) ; dRemaining += getValue ( oNext ) ; } }
20650	public boolean add ( Object e ) { synchronized ( this ) { Object [ ] elements = getArray ( ) ; int len = elements . length ; Object [ ] newElements = copyOf ( elements , len + _NUM ) ; newElements [ len ] = e ; setArray ( newElements ) ; } return _BOOL ; }
20658	@ Override public LoginToken logIn ( final String authHeader ) { LOGGER . debug ( _CHAR Authentication header received as : { } _CHAR , authHeader ) ; UserCredential credential = parseUsernamePassword ( fromNullable ( authHeader ) ) ; if ( isBasicAuthenicationValid ( credential ) ) { return withAccessToken ( credential . toBase64Encode ( ) ) . withTokenType ( BASIC ) . build ( ) ; } else { throw new AuthenticationException ( _CHAR Authentication login failed . Invalid Login Credential _CHAR ) ; } }
20728	private void findRepeatedDataItems ( ) { for ( JsTreeDataItem dataItem : this ) { Integer timesRepeated = _NUM ; if ( hasTreeDataItem ( dataItem ) ) { if ( sameIdDataItemsMap . containsKey ( dataItem . getOriginalId ( ) ) ) timesRepeated = sameIdDataItemsMap . get ( dataItem . getOriginalId ( ) ) ; timesRepeated ++ ; sameIdDataItemsMap . put ( dataItem . getOriginalId ( ) , timesRepeated ) ; } } }
20757	private boolean isTypedTimeLegalSoFar ( ) { Node node = mLegalTimesTree ; for ( int keyCode : mTypedTimes ) { node = node . canReach ( keyCode ) ; if ( node == _NULL ) { return _BOOL ; } } return _BOOL ; }
20786	public void initComponents ( ) throws SpaceComponentsInitializeException { try { SpaceInitializationIndicator . setInitializer ( ) ; initPrimaryOnlyComponents ( ) ; initBackupComponents ( ) ; } finally { SpaceInitializationIndicator . unsetInitializer ( ) ; } }
20916	public boolean equals ( Object o ) { if ( o == this ) { return _BOOL ; } if ( o instanceof LookupLocator ) { LookupLocator oo = ( LookupLocator ) o ; return port == oo . port && host . equalsIgnoreCase ( oo . host ) ; } return _BOOL ; }
20935	private void processFormState ( ) { if ( currentFieldPosition == - _NUM ) { Log . d ( DEBUG_TAG , _CHAR process ( ) : begin _CHAR ) ; processFormFieldBegin ( ) ; return ; } FormField field = formFields . get ( currentFieldPosition ) ; if ( field != _NULL ) processFormField ( field ) ; else processFormFieldEnd ( ) ; }
21004	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
21093	public final TestSubscriber < T > assertNotComplete ( ) { int c = completionCount ; if ( c == _NUM ) { throw new AssertionError ( _CHAR Completed _CHAR , _NULL ) ; } if ( c > _NUM ) { throw new AssertionError ( _CHAR Multiple completions : _CHAR + c , _NULL ) ; } return this ; }
21107	public static double vectorLength ( double [ ] vector ) { double ret = _NUM ; if ( vector == _NULL ) return ret ; else { for ( double aVector : vector ) { ret += Math . pow ( aVector , _NUM ) ; } } return ret ; }
21116	public boolean containsBafBody ( ) { Iterator < SootMethod > methodIt = methodIterator ( ) ; while ( methodIt . hasNext ( ) ) { SootMethod m = methodIt . next ( ) ; if ( m . hasActiveBody ( ) && m . getActiveBody ( ) instanceof soot . baf . BafBody ) { return _BOOL ; } } return _BOOL ; }
21186	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } committed = _BOOL ; }
21209	public static FloatBuffer createFloatBuffer ( float ... data ) { if ( data == _NULL ) { return _NULL ; } FloatBuffer buff = createFloatBuffer ( data . length ) ; buff . clear ( ) ; buff . put ( data ) ; buff . flip ( ) ; return buff ; }
21230	private void inflateEmptyText ( ) { if ( mEmptyText != R . string . text_empty ) { if ( mEmptyLayout != R . layout . layout_empty ) { throw new RuntimeException ( _CHAR Can not assign the EmptyText attribute . '' + _CHAR You already overridden the entire emptyLayout , no need to specify _CHAR + _CHAR custom color or custom text message _CHAR ) ; } else { textEmpty . setText ( getResources ( ) . getString ( R . string . text_empty ) ) ; } } }
21338	public static boolean isSignedDouble ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { Double . parseDouble ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
21481	public static JsonArray array ( int ... values ) { if ( values == _NULL ) { throw new NullPointerException ( _CHAR values is _NULL _CHAR ) ; } JsonArray array = new JsonArray ( ) ; for ( int value : values ) { array . add ( value ) ; } return array ; }
21541	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
21639	protected void writeNetscapeExt ( ) throws IOException { out . write ( _NUM ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeString ( _CHAR NETSCAPE _CHAR + _CHAR _NUM . _NUM _CHAR ) ; out . write ( _NUM ) ; out . write ( _NUM ) ; writeShort ( repeat ) ; out . write ( _NUM ) ; }
21804	public static String readLine ( ) { String line ; try { line = scanner . nextLine ( ) ; } catch ( NoSuchElementException e ) { line = _NULL ; } return line ; }
21830	private static boolean validLabelLocation ( StringLiteral element ) { PsiElement parent = element . getParent ( ) ; if ( parent instanceof Argument . Keyword ) { String argName = ( ( Argument . Keyword ) parent ) . getName ( ) ; if ( _CHAR name _CHAR . equals ( argName ) ) { return _BOOL ; } } return _BOOL ; }
21870	@ Override public void stop ( ) { if ( running ) { running = _BOOL ; if ( LOGGER . isDebugEnabled ( ) ) { LOGGER . debug ( _CHAR Shutting down CacheListener threads . '' ) ; } notifyUpdateThreadHandler . shutdown ( ) ; statusConfirmationHandler . shutdown ( ) ; } }
21893	@ Override public void internalEntityDecl ( String name , XMLString text , XMLString nonNormalizedText , Augmentations augs ) throws XNIException { try { if ( fDeclHandler != _NULL ) { fDeclHandler . internalEntityDecl ( name , text . toString ( ) ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
21948	public static void register ( String modelName , IWindModel model , int awesomeness ) { models . put ( modelName , model ) ; if ( modelName . equalsIgnoreCase ( userModelChoice ) ) { awesomeness = Integer . MAX_VALUE ; } if ( awesomeness > best ) { best = awesomeness ; activeModel = model ; } }
21985	@ Override public void write ( byte [ ] bts , int st , int end ) throws IOException { try { beforeWrite ( end ) ; out . write ( bts , st , end ) ; afterWrite ( end ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
22064	public void close ( ) throws IOException { if ( io != _NULL ) { try { io . close ( ) ; } finally { io = _NULL ; } } }
22072	public void interrupt ( ) { _interrupted = _BOOL ; for ( SingleProducer producer : _producers . values ( ) ) { Iterator threads = producer . orderedThreadEventsMap . values ( ) . iterator ( ) ; while ( threads . hasNext ( ) ) { LockSupport . unpark ( ( Thread ) threads . next ( ) ) ; threads . remove ( ) ; } } }
22095	private void updateNotificationsNodeLabel ( DefaultMutableTreeNode node , String label ) { DefaultMutableTreeNode selectedNode = ( DefaultMutableTreeNode ) mbeansTab . getTree ( ) . getLastSelectedPathComponent ( ) ; if ( node != selectedNode ) { return ; } invalidate ( ) ; mbeansTab . getButtonAt ( _NUM ) . setText ( label ) ; validate ( ) ; repaint ( ) ; }
22163	public boolean isImageOutlinePolygonVisible ( Object parentObj , Object obj ) { boolean enabled = _BOOL ; if ( overallEnableSymbolizersOverride ) { if ( obj instanceof RasterSymbolizer ) { RasterSymbolizer raster = ( RasterSymbolizer ) obj ; enabled = ( raster . getImageOutline ( ) == _NULL ) && ( geometryType == GeometryTypeEnum . RASTER ) ; } } return enabled ; }
22302	public static void writeString ( DataOutputStream os , String s ) throws IOException { if ( s == _NULL ) { os . writeInt ( - _NUM ) ; } else { byte array [ ] = s . getBytes ( ) ; os . writeInt ( array . length ) ; os . write ( array ) ; } }
22335	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
22346	@ Override protected Expression generateExpression ( ) { Expression expression = _NULL ; if ( this . comboBox != _NULL ) { ValueComboBoxData selectedValue = comboBox . getSelectedValue ( ) ; if ( selectedValue != _NULL ) { expression = getFilterFactory ( ) . literal ( selectedValue . getKey ( ) ) ; } } return expression ; }
22395	@ Nullable public Boolean isDebuggable ( ) { AndroidModel androidModel = myFacet . getAndroidModel ( ) ; if ( androidModel != _NULL ) { Boolean debuggable = androidModel . isDebuggable ( ) ; if ( debuggable != _NULL ) { return debuggable ; } } return MergedManifest . get ( myFacet ) . getApplicationDebuggable ( ) ; }
22404	public ByteVector putByteArray ( final byte [ ] b , final int off , final int len ) { if ( length + len > data . length ) { enlarge ( len ) ; } if ( b != _NULL ) { System . arraycopy ( b , off , data , length , len ) ; } length += len ; return this ; }
22492	private boolean showAppMenu ( View view , boolean startDragging ) { if ( ! mMenuHandler . isAppMenuShowing ( ) && mMenuHandler . showAppMenu ( view , startDragging ) ) { if ( ! startDragging ) RecordUserAction . record ( _CHAR MobileUsingMenuBySwButtonTap _CHAR ) ; if ( mOnAppMenuShownListener != _NULL ) { mOnAppMenuShownListener . run ( ) ; } return _BOOL ; } return _BOOL ; }
22535	public static KeyStore createEmptyKeyStore ( ) { try { KeyStore keyStore = KeyStore . getInstance ( KeyStore . getDefaultType ( ) ) ; keyStore . load ( _NULL ) ; return keyStore ; } catch ( KeyStoreException | NoSuchAlgorithmException | CertificateException | IOException e ) { throw new RuntimeException ( _CHAR Failed to create empty keystore _CHAR , e ) ; } }
22595	public final boolean addRuleId ( final Long pId ) { if ( ! this . ruleIds . contains ( pId ) ) { this . ruleIds . add ( pId ) ; this . tagChange = CHANGE_CONFIGURATION ; return _BOOL ; } else { return _BOOL ; } }
22672	public boolean isConditionMet ( final ExpectedCondition < ? > condition , int timeout ) { try { bobcatWait . withTimeout ( timeout ) . until ( condition ) ; } catch ( TimeoutException | StaleElementReferenceException e ) { LOG . debug ( _CHAR Condition has not been made before timeout : _CHAR , e ) ; return _BOOL ; } return _BOOL ; }
22681	protected void parseTimeZone ( String buffer , int start , int end , DateTimeData date ) throws RuntimeException { if ( start < end ) { if ( ! isNextCharUTCSign ( buffer , start , end ) ) { throw new RuntimeException ( _CHAR Error in month parsing _CHAR ) ; } else { getTimeZone ( buffer , date , start , end ) ; } } }
22848	public static int toRealPosition ( int position , int count ) { position = position - _NUM ; if ( position < _NUM ) { position += count ; } else { position = position % count ; } return position ; }
22858	public boolean adjustValue ( K key , long amount ) { int index = index ( key ) ; if ( index < _NUM ) { return _BOOL ; } else { _values [ index ] += amount ; return _BOOL ; } }
22877	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
22931	public static String readFileToString ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toString ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
22995	private boolean isTypedTimeLegalSoFar ( ) { Node node = mLegalTimesTree ; for ( int keyCode : mTypedTimes ) { node = node . canReach ( keyCode ) ; if ( node == _NULL ) { return _BOOL ; } } return _BOOL ; }
23009	public boolean freePage ( int pageNum ) { Page p ; try { p = fetchPage ( pageNum ) ; } catch ( PageException e ) { return _BOOL ; } return freePage ( p ) ; }
23050	private boolean checkIfNameExists ( String name ) { boolean returnValue = _BOOL ; for ( DrawableData drawable : drawables ) { if ( drawable . name . equals ( name ) ) { returnValue = _BOOL ; break ; } } return returnValue ; }
23137	public boolean taxApplies ( ) { boolean taxApplies = _BOOL ; for ( ShoppingCartItem item : this ) { if ( item . taxApplies ( ) ) { taxApplies = _BOOL ; break ; } } return taxApplies ; }
23211	public static boolean isNoDictionaryBlock ( int [ ] noDictionaryColIndexes , int blockIndex ) { if ( _NULL != noDictionaryColIndexes ) { for ( int noDictionaryValIndex : noDictionaryColIndexes ) { if ( noDictionaryValIndex == blockIndex ) { return _BOOL ; } } } return _BOOL ; }
23257	private void clean ( ) { Reference ref = fReferenceQueue . poll ( ) ; while ( ref != _NULL ) { Entry entry = ( ( SoftGrammarReference ) ref ) . entry ; if ( entry != _NULL ) { removeEntry ( entry ) ; } ref = fReferenceQueue . poll ( ) ; } }
23269	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
23278	public static String normalize ( String token ) { if ( isNumber ( token ) ) return _CHAR _NUM _CHAR ; if ( isPunctuation ( token ) ) return _CHAR PUNCT _CHAR ; if ( isEmail ( token ) ) return _CHAR EMAIL _CHAR ; if ( isDate ( token ) ) return _CHAR DATE _CHAR ; if ( isCode ( token ) ) return _CHAR CODE _CHAR ; if ( isWebsite ( token ) ) return _CHAR WEBSITE _CHAR ; if ( isTag ( token ) ) return _CHAR XMLTAG _CHAR ; return token ; }
23503	@ Override protected Expression generateExpression ( ) { Expression expression = _NULL ; if ( inlineGML != _NULL ) { String text = inlineGML . getInlineFeatures ( ) ; if ( ( text != _NULL ) && ! text . isEmpty ( ) ) { expression = getFilterFactory ( ) . literal ( text ) ; } } return expression ; }
23546	public static long nextPowOf2 ( long v ) { v -- ; v |= v >> _NUM ; v |= v >> _NUM ; v |= v >> _NUM ; v |= v >> _NUM ; v |= v >> _NUM ; v ++ ; return v ; }
23655	public static String routeOrderEntry ( HttpServletRequest request , HttpServletResponse response ) { HttpSession session = request . getSession ( ) ; if ( session . getAttribute ( _CHAR orderMode _CHAR ) == _NULL ) { return _CHAR init _CHAR ; } if ( request . getParameter ( _CHAR orderMode _CHAR ) != _NULL ) { return _CHAR agreements _CHAR ; } return _CHAR cart _CHAR ; }
23657	public void invertProbability ( ) { normalizeToSum ( ) ; double dRemaining = _NUM . _NUM ; Iterator < TKeyType > iIter = hDistro . keySet ( ) . iterator ( ) ; while ( iIter . hasNext ( ) ) { TKeyType oNext = iIter . next ( ) ; setValue ( oNext , dRemaining - getValue ( oNext ) ) ; dRemaining += getValue ( oNext ) ; } }
23714	private void indexSplitDoc ( ) { try { _indexSplitDoc ( ) ; } finally { semaphore . release ( ) ; shardState . indexState . globalState . indexingJobsRunning . release ( ) ; ctx . inFlightChunks . arrive ( ) ; } }
23734	public byte [ ] encrypt ( byte [ ] bytes ) { byte [ ] resp = _NULL ; try { resp = crypt ( bytes , Cipher . ENCRYPT_MODE ) ; } catch ( Exception e ) { return _NULL ; } return resp ; }
23750	@ Override public boolean equals ( final Object other ) { if ( other instanceof Dfp ) { final Dfp x = ( Dfp ) other ; if ( isNaN ( ) || x . isNaN ( ) || field . getRadixDigits ( ) != x . field . getRadixDigits ( ) ) { return _BOOL ; } return compare ( this , x ) == _NUM ; } return _BOOL ; }
23853	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { try { if ( fLexicalHandler != _NULL ) { fLexicalHandler . startCDATA ( ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
23948	private void registerTaskInstances ( ) { for ( TaskFromDBTrigger trigger : tasksList ) { if ( trigger . isValid ( ) ) { trigger . initTrigger ( ) ; } else { log . error ( _CHAR Invalid task from db with ID : _CHAR + trigger . getTaskId ( ) ) ; } } }
23956	public static boolean isSvnMetaResource ( IResource resource ) { if ( ( resource . getType ( ) == IResource . FOLDER ) && ( SVNProviderPlugin . getPlugin ( ) . isAdminDirectory ( resource . getName ( ) ) ) ) return _BOOL ; IResource parent = resource . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return isSvnMetaResource ( parent ) ; } }
24013	public void clearSharing ( boolean clearUser ) { if ( clearUser ) { user = _NULL ; } publicAccess = AccessStringHelper . DEFAULT ; externalAccess = _BOOL ; if ( userGroupAccesses != _NULL ) { userGroupAccesses . clear ( ) ; } }
24017	public static JsonArray array ( long ... values ) { if ( values == _NULL ) { throw new NullPointerException ( _CHAR values is _NULL _CHAR ) ; } JsonArray array = new JsonArray ( ) ; for ( long value : values ) { array . add ( value ) ; } return array ; }
24101	public boolean nextPage ( ) { if ( toIndex >= values ) { return _BOOL ; } if ( toIndex > _NUM ) { fromIndex += pageSize ; } toIndex = Math . min ( ( fromIndex + pageSize ) , values ) ; return _BOOL ; }
24139	protected void addRow ( Object [ ] carbonTuple ) throws SliceMergerException { Object [ ] rowInWritableFormat ; rowInWritableFormat = tupleConvertor . getObjectArray ( carbonTuple ) ; try { this . dataHandler . addDataToStore ( rowInWritableFormat ) ; } catch ( CarbonDataWriterException e ) { throw new SliceMergerException ( _CHAR Problem in merging the slice _CHAR , e ) ; } }
24155	private void fixDescendants ( int id ) { if ( descendants . get ( id ) ) { return ; } for ( Iterator < TypeNode > parentIt = parents . iterator ( ) ; parentIt . hasNext ( ) ; ) { final TypeNode parent = parentIt . next ( ) ; parent . fixDescendants ( id ) ; } descendants . set ( id ) ; }
24260	private Iterator < byte [ ] > load ( ColumnIdentifier columnIdentifier , long startOffset , long endOffset ) throws IOException { CarbonDictionaryReader dictionaryReader = getDictionaryReader ( columnIdentifier ) ; try { Iterator < byte [ ] > columnDictionaryChunkWrapper = dictionaryReader . read ( startOffset , endOffset ) ; return columnDictionaryChunkWrapper ; } finally { dictionaryReader . close ( ) ; } }
24273	private Canvas beginRecordingPicture ( int imageWidth , int imageHeight ) { if ( targetWidth == _NUM || targetHeight == _NUM ) { return picture . beginRecording ( imageWidth , imageHeight ) ; } else { Canvas canvas = picture . beginRecording ( targetWidth , targetHeight ) ; prepareScaledCanvas ( canvas , imageWidth , imageHeight ) ; return canvas ; } }
24299	public boolean adjustValue ( K key , int amount ) { int index = index ( key ) ; if ( index < _NUM ) { return _BOOL ; } else { _values [ index ] += amount ; return _BOOL ; } }
24369	public void delayMethod ( int deltaTime ) { Robot robot ; try { robot = new Robot ( ) ; robot . delay ( deltaTime ) ; } catch ( AWTException e ) { e . printStackTrace ( ) ; } }
24401	protected void addToAnimation ( ChromeAnimation . Animation < Animatable < ? >> component ) { if ( mLayoutAnimations == _NULL || mLayoutAnimations . finished ( ) ) { onAnimationStarted ( ) ; mLayoutAnimations = new ChromeAnimation < Animatable < ? >> ( ) ; mLayoutAnimations . start ( ) ; } component . start ( ) ; mLayoutAnimations . add ( component ) ; requestUpdate ( ) ; }
24429	public String process ( String source , Location location , Element element ) { if ( Strings . isNullOrEmpty ( source ) ) { return source ; } String result = source ; for ( DocumentationProcessor processor : processors ) { result = processor . process ( result , location , element ) ; } return result ; }
24453	public boolean hasValueBeenUpdated ( int rowIndex , int columnIndex ) { ScaleSLDData data = scaleList . get ( rowIndex ) ; if ( columnIndex == COL_MIN_SCALE ) { return data . isMinimumScaleUpdated ( ) ; } if ( columnIndex == COL_MAX_SCALE ) { return data . isMaximumScaleUpdated ( ) ; } return _BOOL ; }
24506	private boolean checkForIssue164378 ( @ Nullable Throwable throwable ) { if ( isIssue164378 ( throwable ) ) { RenderProblem . Html problem = RenderProblem . create ( ERROR ) ; HtmlBuilder builder = problem . getHtmlBuilder ( ) ; addHtmlForIssue164378 ( throwable , myModule , getLinkManager ( ) , builder , _BOOL ) ; addMessage ( problem ) ; return _BOOL ; } return _BOOL ; }
24520	public static byte [ ] hash ( byte [ ] data , int offset , int len ) { try { MessageDigest a = MessageDigest . getInstance ( _CHAR SHA - _NUM _CHAR ) ; a . update ( data , offset , len ) ; return a . digest ( ) ; } catch ( NoSuchAlgorithmException e ) { throw new RuntimeException ( e ) ; } }
24882	private static void createWriter ( OutputStream outputStream ) { try { closeWriter ( ) ; Writer oWriter = new OutputStreamWriter ( outputStream , _CHAR UTF - _NUM _CHAR ) ; writer = new BufferedWriter ( oWriter ) ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; } }
24957	public void updateConnection ( GeoServerConnection originalConnectionDetails , GeoServerConnection newConnectionDetails ) { if ( newConnectionDetails != _NULL ) { GeoServerNode geoserverNode = nodeMap . get ( originalConnectionDetails ) ; originalConnectionDetails . update ( newConnectionDetails ) ; if ( geoserverNode != _NULL ) { geoserverNode . setUserObject ( newConnectionDetails . getConnectionName ( ) ) ; refreshNode ( geoserverNode ) ; } } }
25041	public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } if ( obj instanceof GrantPermission ) { GrantPermission gp = ( GrantPermission ) obj ; return this . implies ( gp ) && gp . implies ( this ) ; } return _BOOL ; }
25109	public void changeFragmentShader ( String fragmentShader ) { if ( fragmentShader == _NULL ) { fragmentShader = FRAGMENT_SHADER ; } GLES20 . glDeleteProgram ( mProgram ) ; mProgram = createProgram ( VERTEX_SHADER , fragmentShader ) ; if ( mProgram == _NUM ) { throw new RuntimeException ( _CHAR failed creating program _CHAR ) ; } }
25115	public void close ( ) { try { os . flush ( ) ; os . close ( ) ; System . out . println ( _CHAR Wrote synthesized speech to _CHAR + path ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; } }
25160	public String readNullTerminatedBytes ( ) throws IOException { StringBuilder buf = new StringBuilder ( ) ; while ( _BOOL ) { byte letter = ( byte ) ins . read ( ) ; if ( letter == - _NUM ) throw new IOException ( _CHAR readNullTerminatedBytes ( ) : failed ( EOF ) _CHAR ) ; if ( letter == _NUM ) break ; else buf . append ( ( char ) letter ) ; } return buf . toString ( ) ; }
25162	protected Expression generateExpression ( ) { Expression expression = _NULL ; if ( comboBox != _NULL ) { ValueComboBoxData value = comboBox . getSelectedValue ( ) ; if ( value != _NULL ) { expression = getFilterFactory ( ) . literal ( value . getKey ( ) ) ; } } return expression ; }
25262	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; registrarID = new ServiceID ( in ) ; if ( ! ( server instanceof RemoteMethodControl ) ) { throw new InvalidObjectException ( _CHAR server does not implement RemoteMethodControl _CHAR ) ; } else if ( ! ( server instanceof TrustEquivalence ) ) { throw new InvalidObjectException ( _CHAR server does not implement TrustEquivalence _CHAR ) ; } }
25280	public boolean isSupportedBcp47Tag ( String bcp47Tag ) { boolean supported = _BOOL ; try { getDetectorLanguageForBcp47Tag ( bcp47Tag ) ; } catch ( UnsupportedLanguageException ule ) { supported = _BOOL ; } return supported ; }
25381	public void writeFloat ( float value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _FLOAT ) ; this . dataOut . writeFloat ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
25390	public void markFooterViewHeight ( View view ) { this . mFooterView = view ; mFooterViewHeight = mFooterView . getHeight ( ) ; if ( mFooterViewHeight <= _NUM ) { mFooterViewHeight = mFooterView . getLayoutParams ( ) . height ; } else { this . mFooterView . getLayoutParams ( ) . height = mFooterViewHeight ; } }
25407	@ Override public synchronized Throwable initCause ( Throwable throwable ) { if ( fException != this ) { throw new IllegalStateException ( ) ; } if ( throwable == this ) { throw new IllegalArgumentException ( ) ; } fException = ( Exception ) throwable ; return this ; }
25423	public static GitRepository initScratchRepo ( boolean verbose , Map < String , String > environment ) throws RepoException { Path scratchWorkTree ; try { scratchWorkTree = Files . createTempDirectory ( _CHAR copybara - makeScratchClone _CHAR ) ; } catch ( IOException e ) { throw new RepoException ( _CHAR Could not make temporary directory for scratch repo '' , e ) ; } return initScratchRepo ( verbose , scratchWorkTree , environment ) ; }
25549	protected void mangleClass ( StringBuilder sb , Class cl ) { String name = cl . getName ( ) ; if ( cl . isArray ( ) ) { sb . append ( _CHAR array_ _CHAR ) ; this . mangleClass ( sb , cl . getComponentType ( ) ) ; } else { sb . append ( name ) ; } }
25647	public FTPReply sendCustomCommand ( String command ) throws IllegalStateException , IOException , FTPIllegalReplyException { synchronized ( lock ) { if ( ! connected ) { throw new IllegalStateException ( _CHAR Client not connected _CHAR ) ; } communication . sendFTPCommand ( command ) ; touchAutoNoopTimer ( ) ; return communication . readFTPReply ( ) ; } }
25686	protected boolean filterCheck ( VisualItem item ) { if ( filter == _NULL ) return _BOOL ; try { return filter . getBoolean ( item ) ; } catch ( Exception e ) { Logger . getLogger ( getClass ( ) . getName ( ) ) . warning ( e . getMessage ( ) + _CHAR \ n _CHAR + StringLib . getStackTrace ( e ) ) ; return _BOOL ; } }
25754	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( undoRedoObject != _NULL ) { if ( textField != _NULL ) { if ( undoRedoObject . getNewValue ( ) instanceof String ) { String newValue = ( String ) undoRedoObject . getNewValue ( ) ; textField . setText ( newValue ) ; } } } }
25775	protected synchronized void startEvictor ( long delay ) { if ( _NULL != evictor ) { evictor . cancel ( ) ; evictor = _NULL ; } if ( delay > _NUM ) { evictor = new Evictor ( ) ; EVICTION_TIMER . schedule ( evictor , delay , delay ) ; } }
25791	@ Override public SAXParser newSAXParser ( ) throws ParserConfigurationException { SAXParser saxParserImpl ; try { saxParserImpl = new SAXParserImpl ( this , features , fSecureProcess ) ; } catch ( SAXException se ) { throw new ParserConfigurationException ( se . getMessage ( ) ) ; } return saxParserImpl ; }
25896	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
26001	public static void deleteESTestIndex ( String index ) { logger . info ( _CHAR Deleting index : _CHAR ) ; ProcessBuilder pDelete = new ProcessBuilder ( _CHAR curl _CHAR , _CHAR - XDELETE _CHAR , index ) ; try { executeCommand ( pDelete ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
26016	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
26026	private static int compareInt ( final int a , final int b ) { int result = _NUM ; if ( a > b ) { result = _NUM ; } else if ( a < b ) { result =- _NUM ; } return result ; }
26043	public static boolean doesTableHaveColumn ( String tableName , String columnName ) { switch ( tableName ) { case CaughtPokemonEntry . TABLE_NAME : return CaughtPokemonEntry . hasColumn ( columnName ) ; case FavoritePokemonEntry . TABLE_NAME : return FavoritePokemonEntry . hasColumn ( columnName ) ; default : return _BOOL ; } }
26069	private void doDelete ( FileEntry entry ) { for ( FileAlterationListener listener : listeners ) { if ( entry . isDirectory ( ) ) { listener . onDirectoryDelete ( entry . getFile ( ) ) ; } else { listener . onFileDelete ( entry . getFile ( ) ) ; } } }
26110	private static int capacity ( int expectedSize ) { if ( expectedSize < _NUM ) { checkNonnegative ( expectedSize , _CHAR expectedSize _CHAR ) ; return expectedSize + _NUM ; } if ( expectedSize < MAX_POWER_OF_TWO ) { return ( int ) ( ( float ) expectedSize / _NUM . _NUM + _NUM . _NUM ) ; } return Integer . MAX_VALUE ; }
26163	public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } else if ( ! ( obj instanceof ProxyTrustInvocationHandler ) ) { return _BOOL ; } ProxyTrustInvocationHandler oh = ( ProxyTrustInvocationHandler ) obj ; return main . equals ( oh . main ) && boot . equals ( oh . boot ) ; }
26171	public static void kickOffReading ( Context context ) { if ( sIsReadingAttempted ) return ; sIsReadingAttempted = _BOOL ; PartnerBookmarksReader reader = new PartnerBookmarksReader ( context ) ; if ( ( context . getApplicationInfo ( ) . flags & ApplicationInfo . FLAG_SYSTEM ) == _NUM ) { reader . onBookmarksRead ( ) ; return ; } reader . readBookmarks ( ) ; }
26173	protected void validateConfig ( Equipment equipment ) { EquipmentCacheObject equipmentCacheObject = ( EquipmentCacheObject ) equipment ; super . validateConfig ( equipmentCacheObject ) ; if ( equipmentCacheObject . getHandlerClassName ( ) == _NULL ) { throw new ConfigurationException ( ConfigurationException . INVALID_PARAMETER_VALUE , _CHAR Parameter \ _CHAR handlerClassName \ _CHAR can not be _NULL _CHAR ) ; } if ( equipmentCacheObject . getProcessId ( ) == _NULL ) { throw new ConfigurationException ( ConfigurationException . INVALID_PARAMETER_VALUE , _CHAR Parameter \ _CHAR processId \ _CHAR can not be _NULL . An equipment MUST be attached to a process . '' ) ; } }
26201	void addPreDrawListener ( ) { if ( mIsAttachedToWindow ) { if ( mOnPreDrawListener == _NULL ) { mOnPreDrawListener = new OnPreDrawListener ( ) ; } final ViewTreeObserver vto = getViewTreeObserver ( ) ; vto . addOnPreDrawListener ( mOnPreDrawListener ) ; } mNeedsPreDrawListener = _BOOL ; }
26260	public static boolean sleep ( final long milliseconds ) { try { Thread . sleep ( milliseconds ) ; return _BOOL ; } catch ( InterruptedException e ) { logger . warn ( _CHAR Thread { } has been interrupted _CHAR , Thread . currentThread ( ) . getName ( ) , e ) ; return _BOOL ; } }
26345	public void writeBoolean ( boolean value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _BOOLEAN ) ; this . dataOut . writeBoolean ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
26371	public boolean checkPresenceWithNoTimeout ( By locator ) { WebDriver webDriver = webDriverProvider . get ( ) ; webDriver . manage ( ) . timeouts ( ) . implicitlyWait ( IMPLICITLY_WAIT_TIME , TimeUnit . MILLISECONDS ) ; try { return ! webDriver . findElements ( locator ) . isEmpty ( ) ; } finally { webDriver . manage ( ) . timeouts ( ) . implicitlyWait ( defaultTimeout , TimeUnit . SECONDS ) ; } }
26763	public synchronized void reset ( ) { timer . start ( _CHAR audioOut _CHAR ) ; if ( line != _NULL ) { waitResume ( ) ; if ( isCancelled ( ) && ! isDone ( ) ) { cancelled = _BOOL ; line . start ( ) ; } } }
26781	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { float f = get ( i ) ; if ( f != f ) { count ++ ; } } return count ; }
26783	private boolean isValidInHTTPHeader ( String value ) { char ch ; for ( int i = value . length ( ) - _NUM ; i >= _NUM ; -- i ) { ch = value . charAt ( i ) ; if ( ch < _NUM || ch > _NUM ) { return _BOOL ; } } return _BOOL ; }
26827	public int length ( ) { if ( root . child == _NULL ) { return _NUM ; } if ( length > - _NUM ) { return length ; } length = root . getChildCount ( ) ; return length ; }
26907	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } committed = _BOOL ; }
27022	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
27023	@ Override public EquipmentConfiguration clone ( ) { EquipmentConfiguration equipmentConfiguration = _NULL ; try { equipmentConfiguration = ( EquipmentConfiguration ) super . clone ( ) ; } catch ( CloneNotSupportedException ex ) { ex . printStackTrace ( ) ; } return equipmentConfiguration ; }
27064	public void doUpdate ( ) { lock . lock ( ) ; try { forgetObjects ( ) ; findVisibleObjects ( ) ; } finally { lock . unlock ( ) ; } }
27091	public void discard ( ServiceRegistrar proxy ) { if ( proxy == _NULL ) return ; ProxyReg reg = findReg ( proxy ) ; if ( reg != _NULL ) { synchronized ( discoveredSet ) { reg . discard ( ) ; reg . commDiscard = _BOOL ; } } }
27181	public static String joinStrings ( Collection < String > strings ) { StringBuilder buf = new StringBuilder ( ) ; if ( strings == _NULL ) { throw new NullPointerException ( _CHAR Received _NULL collection _CHAR ) ; } for ( String s : strings ) { buf . append ( s ) ; } return buf . toString ( ) ; }
27250	public boolean equals ( Object other ) { if ( ! ( other instanceof TLongObjectHashMap ) ) { return _BOOL ; } TLongObjectHashMap that = ( TLongObjectHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
27251	private static File constructFilePaths ( String file1 , String file2 ) { File newPath ; if ( file2 . startsWith ( file1 ) ) { newPath = new File ( file2 ) ; } else { newPath = new File ( file1 + _CHAR / _CHAR + file2 ) ; } return newPath ; }
27272	private static void createReader ( InputStream inputStream ) { try { closeReader ( ) ; Reader iReader = new InputStreamReader ( inputStream , _CHAR UTF - _NUM _CHAR ) ; reader = new BufferedReader ( iReader ) ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; } }
27415	private static ScoutWidget [ ] removeGuidelines ( ScoutWidget [ ] list ) { ArrayList < ScoutWidget > al = new ArrayList < > ( ) ; for ( ScoutWidget aList : list ) { if ( aList . mConstraintWidget instanceof Guideline ) { continue ; } al . add ( aList ) ; } return al . toArray ( new ScoutWidget [ al . size ( ) ] ) ; }
27492	public AemTags addTag ( String namespace , String pathAndTagName ) throws DeniedTagException { final String textToSend ; if ( StringUtils . isNotBlank ( namespace ) ) { textToSend = namespace + NAMESPACE_SEPARATOR + pathAndTagName ; } else { textToSend = pathAndTagName ; } return addTag ( textToSend ) ; }
27549	protected static ImageIcon createImageIcon ( String path ) { java . net . URL imgURL = MenuLookDemo . class . getResource ( path ) ; if ( imgURL != _NULL ) { return new ImageIcon ( imgURL ) ; } else { System . err . println ( _CHAR Could n _CHAR_CHAR + path ) ; return null ; } }
27565	private void sendBroadcastNewOperation ( Target target , RemoteOperation operation ) { Intent intent = new Intent ( ACTION_OPERATION_ADDED ) ; if ( target . mAccount != _NULL ) { intent . putExtra ( EXTRA_ACCOUNT , target . mAccount ) ; } else { intent . putExtra ( EXTRA_SERVER_URL , target . mServerUrl ) ; } sendStickyBroadcast ( intent ) ; }
27591	public static void hideProgressDialog ( String tag ) { if ( tag == _NULL ) return ; synchronized ( sLock ) { ProgressDialog dialog = findDialog ( tag ) ; if ( dialog != _NULL ) { if ( isAlive ( dialog ) && dialog . isShowing ( ) ) dialog . dismiss ( ) ; sDialogs . remove ( dialog ) ; } } }
27616	public synchronized void abandon ( ConversationAbandonedEvent details ) { if ( ! abandoned ) { abandoned = _BOOL ; currentPrompt = _NULL ; context . getForWhom ( ) . abandonConversation ( this ) ; for ( ConversationAbandonedListener listener : abandonedListeners ) { listener . conversationAbandoned ( details ) ; } } }
27635	public void runActions ( Context context , boolean onlyIfScreenIsOn ) { assert mServiceRunnable != _NULL ; assert mPowerManagerHelper != _NULL ; if ( ! onlyIfScreenIsOn || mPowerManagerHelper . isScreenOn ( context ) ) { if ( mNeedToRunActions . getAndSet ( _BOOL ) ) { unregisterReceiver ( context ) ; mHandler . postDelayed ( mServiceRunnable , mServiceRunnable . delayToRun ( ) ) ; } } }
27648	@ Override public void comment ( XMLString text , Augmentations augs ) throws XNIException { try { if ( fLexicalHandler != _NULL ) { fLexicalHandler . comment ( text . ch , _NUM , text . length ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
27652	@ Override public void close ( ) throws IOException { try { super . close ( ) ; } finally { if ( closeBranch ) { branch . close ( ) ; } } }
27725	public byte [ ] decrypt ( byte [ ] bytes ) { byte [ ] resp = _NULL ; try { resp = crypt ( bytes , Cipher . DECRYPT_MODE ) ; } catch ( Exception e ) { return _NULL ; } return resp ; }
27726	@ TargetApi ( Build . VERSION_CODES . KITKAT ) public void hide ( ) { if ( ! isShow ) return ; try { hide . invoke ( mTN ) ; } catch ( InvocationTargetException | IllegalAccessException e ) { e . printStackTrace ( ) ; } isShow = _BOOL ; }
27745	@ Override public byte [ ] next ( ) { if ( iteratorIndex >= dictionaryChunks . get ( outerIndex ) . size ( ) ) { iteratorIndex = _NUM ; outerIndex ++ ; } byte [ ] value = dictionaryChunks . get ( outerIndex ) . get ( iteratorIndex ) ; currentIndex ++ ; iteratorIndex ++ ; return value ; }
27802	public static boolean applyCount ( Context context , int badgeCount ) { try { applyCountOrThrow ( context , badgeCount ) ; return _BOOL ; } catch ( ShortcutBadgeException e ) { Log . e ( LOG_TAG , _CHAR Unable to execute badge _CHAR , e ) ; return _BOOL ; } }
27848	public boolean selectServiceTab ( String url ) { url = url . replaceAll ( _CHAR . * : // '' , '' '' ) ; for ( int i = 0 ; i < tabbedPane . getTabCount ( ) ; i ++ ) { if ( tabbedPane . getTitleAt ( i ) . equalsIgnoreCase ( url ) ) { tabbedPane . setSelectedIndex ( i ) ; return true ; } } return false ; }
27874	@ SafeVarargs public static final < T > T firstNonNull ( T ... objects ) { if ( objects != _NULL ) { for ( T object : objects ) { if ( object != _NULL ) { return object ; } } } return _NULL ; }
27914	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
27924	public static BigInteger formBitMask ( int partitionSize ) { BigInteger mask ; if ( partitionSize < _NUM ) { mask = BigInteger . valueOf ( ( _NUM << partitionSize ) - _NUM ) ; } else { mask = BigInteger . valueOf ( _NUM ) . pow ( partitionSize ) . subtract ( BigInteger . ONE ) ; } return mask ; }
27963	public static void close ( Closeable stream ) { if ( _NULL != stream ) { try { stream . close ( ) ; } catch ( IOException e ) { LOG . error ( _CHAR Exception while closing the Log stream '' ) ; } } }
27967	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
28018	private static boolean detectGoogleCloudPlatform ( ) { try { val lookup = new Lookup ( _CHAR metadata . google . internal _CHAR ) ; return lookup . run ( ) != _NULL ; } catch ( TextParseException e ) { log . error ( _CHAR Error while detecting Google Cloud Platform : { } _CHAR , e . getMessage ( ) ) ; return _BOOL ; } }
28080	protected static double normaliseAngle ( double value ) { double angle = value ; while ( angle < _NUM . _NUM ) { angle += _NUM . _NUM ; } while ( angle > _NUM . _NUM ) { angle -= _NUM . _NUM ; } return angle ; }
28174	@ Override protected void componentShowing ( ) { if ( ! initialized ) { initialized = _BOOL ; doInitialize ( ) ; } if ( _NULL != content && getComponentCount ( ) == _NUM ) { add ( content , BorderLayout . CENTER ) ; } super . componentShowing ( ) ; }
28203	private boolean has ( Object spec ) { if ( ! matched ) { return _BOOL ; } String match = matcher . group ( EXPR_TOKEN_GROUP ) ; if ( spec instanceof Pattern ) { return ( ( Pattern ) spec ) . matcher ( match ) . matches ( ) ; } return spec . equals ( match ) ; }
28226	public boolean isHttps ( ) { Attribute < Boolean > isHttpsAttr = ctx . attr ( AttributeKey . < Boolean > valueOf ( IS_HTTPS_ATTRIBUTE_NAME ) ) ; Boolean isHttps = isHttpsAttr . get ( ) ; if ( isHttps == _NULL ) { return _BOOL ; } else { return isHttps ; } }
28325	public static String determineInitialCheckOutPage ( ShoppingCart cart ) { String page = DEFAULT_INIT_CHECKOUT_PAGE ; if ( cart == _NULL ) return page ; if ( ! cart . shippingApplies ( ) ) { cart . setAllShipmentMethodTypeId ( _CHAR NO_SHIPPING _CHAR ) ; cart . setAllCarrierPartyId ( _CHAR _NA_ _CHAR ) ; page = _CHAR payment _CHAR ; } return page ; }
28358	public AudioMapType guessAudioMap ( ) throws InvalidAudioChannelAssignmentException { if ( contextProvider . getSequenceContext ( ) . getSequenceCount ( SequenceType . AUDIO ) == _NUM ) { return _NULL ; } logger . debug ( _CHAR Trying to generate an audiomap . xml based on the EssenceDescriptor ... _CHAR ) ; prepareContext ( ) ; AudioMapType audioMap = createAudioMap ( ) ; logger . info ( _CHAR Generated an audiomap . xml based on the EssenceDescriptor : OK _CHAR ) ; return audioMap ; }
28376	private static boolean hasNonEmptyGrid ( List < Grid > grids ) { if ( grids != _NULL && grids . size ( ) > _NUM ) { for ( Grid grid : grids ) { if ( isNonEmptyGrid ( grid ) ) { return _BOOL ; } } } return _BOOL ; }
28432	public static void toggleViewVisibility ( View view , boolean setVisible ) { if ( view == _NULL ) { return ; } int visibility = View . GONE ; if ( setVisible ) { visibility = View . VISIBLE ; } view . setVisibility ( visibility ) ; }
28481	private static byte [ ] hash ( String text ) throws AWSIotException { try { MessageDigest md = MessageDigest . getInstance ( HASH_ALGORITHM ) ; md . update ( text . getBytes ( UTF8 ) ) ; return md . digest ( ) ; } catch ( Exception e ) { throw new AWSIotException ( _CHAR Unable to compute hash while signing request : '' + e . getMessage ( ) ) ; } }
28515	private FilterOperation extractOperation ( Matcher tokenizedQuery ) throws BadFilterException { String operationName = tokenizedQuery . group ( _NUM ) ; try { return FilterOperation . valueOf ( operationName ) ; } catch ( IllegalArgumentException ignored ) { LOG . debug ( FILTER_OPERATOR_INVALID . logFormat ( operationName ) ) ; throw new BadFilterException ( FILTER_OPERATOR_INVALID . format ( operationName ) ) ; } }
28576	public LogSegmentMetadata remove ( String name ) { synchronized ( logSegments ) { LogSegmentMetadata metadata = logSegments . remove ( name ) ; if ( _NULL != metadata ) { lid2LogSegments . remove ( metadata . getLedgerId ( ) , metadata ) ; LOG . debug ( _CHAR Removed log segment ( { } : { } ) from cache . '' , name , metadata ) ; } return metadata ; } }
28586	public static boolean isSignedLong ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { Long . parseLong ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
28587	public void pausePlaying ( ) { if ( this . state == STATE . MEDIA_RUNNING && this . player != _NULL ) { this . player . pause ( ) ; this . setState ( STATE . MEDIA_PAUSED ) ; } else { Log . d ( LOG_TAG , _CHAR AudioPlayer Error : pausePlaying ( ) called during invalid state : _CHAR + this . state . ordinal ( ) ) ; sendErrorStatus ( MEDIA_ERR_NONE_ACTIVE ) ; } }
28678	public Object clone ( ) { TIntArrayList list = _NULL ; try { list = ( TIntArrayList ) super . clone ( ) ; list . _data = toNativeArray ( ) ; } catch ( CloneNotSupportedException e ) { } return list ; }
28703	boolean waitForFileDone ( ) { synchronized ( waitFileSync ) { try { while ( ! fileDone ) waitFileSync . wait ( ) ; } catch ( Exception e ) { } } return fileSuccess ; }
28711	public void finish ( ) throws CarbonDataWriterException { if ( this . entryCount > _NUM ) { producerExecutorServiceTaskList . add ( producerExecutorService . submit ( new Producer ( blockletDataHolder , dataRows , ++ writerTaskSequenceCounter ) ) ) ; blockletProcessingCount . incrementAndGet ( ) ; processedDataCount += entryCount ; } closeWriterExecutionService ( producerExecutorService ) ; processWriteTaskSubmitList ( producerExecutorServiceTaskList ) ; processingComplete = _BOOL ; }
28790	private void checkDigest ( ) throws WrongMessageDigestException { if ( ! checked ) { byte [ ] result = messageDigest . digest ( ) ; checked = _BOOL ; if ( ! MessageDigest . isEqual ( result , expectedDigest ) ) { failed = _CHAR Incorrect message digest for '' + url + '' : '' + HttpmdUtil . digestString ( result ) ; checkFailed ( ) ; } } }
28840	public boolean checkTrustEquivalence ( Object obj ) { if ( this == obj ) { return _BOOL ; } else if ( ! ( obj instanceof ProxyTrustInvocationHandler ) ) { return _BOOL ; } ProxyTrustInvocationHandler oh = ( ProxyTrustInvocationHandler ) obj ; return ( ( ( TrustEquivalence ) main ) . checkTrustEquivalence ( oh . main ) && ( ( TrustEquivalence ) boot ) . checkTrustEquivalence ( oh . boot ) ) ; }
28859	private void clearDictionaryFromQueryModel ( ) { if ( _NULL != queryModel ) { Map < String , Dictionary > columnToDictionaryMapping = queryModel . getColumnToDictionaryMapping ( ) ; if ( _NULL != columnToDictionaryMapping ) { for ( Map . Entry < String , Dictionary > entry : columnToDictionaryMapping . entrySet ( ) ) { CarbonUtil . clearDictionaryCache ( entry . getValue ( ) ) ; } } } }
28880	public void removeKey ( String key ) { String validKey = convertToValidKey ( key ) ; try { mDiskCache . remove ( validKey ) ; Log_OC . d ( TAG , _CHAR removeKey from cache : _CHAR + validKey ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
28895	public Vector3f multLocal ( Vector3f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x *= vec . x ; y *= vec . y ; z *= vec . z ; return this ; }
28926	public Z Exch ( Z a ) { double t ; t = re ; re = a . re ; a . re = t ; t = im ; im = a . im ; a . im = t ; return this ; }
28945	public void prepareTransition ( View viewToShow ) { assert mViewToHide == _NULL && mViewToShow == _NULL ; assert getChildCount ( ) <= _NUM ; if ( hasChildView ( ) ) { mViewToHide = getChildAt ( CONTENT_INDEX ) ; } mViewToShow = viewToShow ; assert mViewToHide != _NULL || mViewToShow != _NULL ; assert mViewToHide != mViewToShow ; }
28961	private void updateMainPanel ( ) { if ( myDumbService . isDumb ( ) ) { myProgressIcon . resume ( ) ; ( ( CardLayout ) myMainPanel . getLayout ( ) ) . show ( myMainPanel , PROGRESS ) ; } else { myProgressIcon . suspend ( ) ; ( ( CardLayout ) myMainPanel . getLayout ( ) ) . show ( myMainPanel , myShowError ? ERROR : PREVIEW ) ; } }
28974	protected boolean matchesAnyOf ( TokenKind ... kinds ) { TokenKind current = currentToken ( ) ; for ( TokenKind kind : kinds ) { if ( kind == current ) { builder . advanceLexer ( ) ; return _BOOL ; } } return _BOOL ; }
29000	private static boolean findActivity ( List < ResolveInfo > apps , ComponentName component ) { final String className = component . getClassName ( ) ; for ( ResolveInfo info : apps ) { final ActivityInfo activityInfo = info . activityInfo ; if ( activityInfo . name . equals ( className ) ) { return _BOOL ; } } return _BOOL ; }
29030	void notifyStop ( ) { if ( ! m_isQueue ) { synchronized ( synchTopicNotifyLock ) { if ( currentMessage == _NULL ) { currentMessage = this . topicWakeupObject ; synchTopicNotifyLock . notify ( ) ; } } } }
29048	public static String encode ( String str ) throws RuntimeException { byte [ ] bytes = str . getBytes ( ) ; byte [ ] encoded = encode ( bytes ) ; try { return new String ( encoded , _CHAR ASCII _CHAR ) ; } catch ( UnsupportedEncodingException e ) { throw new RuntimeException ( _CHAR ASCII is not supported ! _CHAR , e ) ; } }
29051	public static boolean isAllowed ( Class < ? > typeToCheck , Class < ? > attributeType ) { if ( allowedClassTypeMap . isEmpty ( ) ) { initialise ( ) ; } List < Class < ? >> list = allowedClassTypeMap . get ( attributeType ) ; if ( list == _NULL ) { return _BOOL ; } return list . contains ( typeToCheck ) ; }
29063	public void start ( ) { logger . info ( _CHAR Starting computation ... _CHAR ) ; jssc . start ( ) ; try { jssc . awaitTermination ( ) ; } catch ( InterruptedException e ) { Thread . interrupted ( ) ; } }
29215	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
29252	public static GapisConnection connect ( ) { GapisProcess gapis ; synchronized ( myInstanceLock ) { if ( myInstance == _NULL ) { myInstance = new GapisProcess ( ) ; } gapis = myInstance ; } return gapis . doConnect ( ) ; }
29258	public boolean isDone ( ) { if ( cancelled != _NULL ) { return _BOOL ; } if ( remoteResult != _NULL ) { return _BOOL ; } remoteResult = gigaSpace . take ( template , _NUM ) ; return remoteResult != _NULL ; }
29263	public void generate ( ) { messager . printMessage ( Kind . NOTE , String . format ( _CHAR % s . generate ( ) for % s '' , TAG , topLevelPackageString ) ) ; generateAll ( ) ; if ( ! errors . isEmpty ( ) ) { messager . printMessage ( Kind . ERROR , _CHAR Generating injectors failed : _CHAR ) ; for ( String s : errors ) { messager . printMessage ( Kind . ERROR , s ) ; } } }
29312	private void subscribeRecord ( ) { for ( Subscription subscription : this . subscriptions ) { if ( subscription . recordPathChangedCallback != _NULL ) { this . record . subscribe ( subscription . path , subscription . recordPathChangedCallback , _BOOL ) ; } else if ( subscription . recordChangedCallback != _NULL ) { this . record . subscribe ( subscription . recordChangedCallback , _BOOL ) ; } } }
29407	public static Date stringToDate ( String date , String datePattern ) { DateFormat format = new SimpleDateFormat ( datePattern , Locale . ENGLISH ) ; try { return format . parse ( date ) ; } catch ( ParseException e ) { Log . e ( _CHAR _CHAR + e . getMessage ( ) , _CHAR Please check if you have valid pattern ! '' ) ; } return _NULL ; }
29455	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
29500	public ApplicationType createModelFor ( Application appl ) { Jvm jvm = JvmFactory . getJVMFor ( appl ) ; if ( jvm . isBasicInfoSupported ( ) ) { String mainClass = jvm . getMainClass ( ) ; if ( mainClass != _NULL ) { return createApplicationTypeFor ( appl , jvm , mainClass ) ; } } return _NULL ; }
29514	public void enqueueBlocked ( E o ) { try { this . execute ( new TaskWrapper < E > ( o , _consumerObject ) ) ; } catch ( RejectedExecutionException ree ) { if ( _logger . isLoggable ( Level . INFO ) ) { _logger . log ( Level . INFO , _CHAR Task can not be accepted for execution . '' , ree ) ; } } }
29583	private static void pushTransactionStartStamp ( Transaction t ) { Map < Transaction , Timestamp > map = suspendedTxStartStamps . get ( ) ; Timestamp stamp = transactionStartStamp . get ( ) ; if ( stamp != _NULL ) { map . put ( t , stamp ) ; } else { Debug . logError ( _CHAR Error in transaction handling - no start stamp to push . '' , module ) ; } }
29586	public static boolean verifyFileMd5 ( File file , String md5 ) { if ( md5 == _NULL ) { return _BOOL ; } String fileMd5 = getMD5 ( file ) ; if ( fileMd5 == _NULL ) { return _BOOL ; } return md5 . equals ( fileMd5 ) ; }
29617	public INDArray asMatrix ( InputStream inputStream ) throws IOException { if ( channels == _NUM ) return toBgr ( inputStream ) ; try { BufferedImage image = ImageIO . read ( inputStream ) ; return asMatrix ( image ) ; } catch ( IOException e ) { throw new IOException ( _CHAR Unable to load image _CHAR , e ) ; } }
29651	private void addFields ( SimpleFeatureTypeBuilder b , List < DataSourceFieldInterface > fieldList ) { for ( DataSourceFieldInterface field : fieldList ) { if ( isGeometryField ( field . getFieldType ( ) ) ) { geometryField . setGeometryFieldName ( field . getName ( ) ) ; } else { b . add ( field . getName ( ) , field . getFieldType ( ) ) ; } } }
29653	public static List < String > readLines ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . readLines ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
29730	public boolean pointsToSetEquals ( Object other ) { if ( this == other ) { return _BOOL ; } if ( ! ( other instanceof AllocAndContextSet ) ) { return _BOOL ; } AllocAndContextSet otherPts = ( AllocAndContextSet ) other ; return superSetOf ( otherPts , this ) && superSetOf ( this , otherPts ) ; }
29803	public synchronized boolean hasRef ( long gen ) { Integer rc = genRefCounts . get ( gen ) ; if ( rc == _NULL ) { return _BOOL ; } else { assert rc . intValue ( ) > _NUM ; return _BOOL ; } }
29816	public String createToken ( String ipOfClient ) { cleanExpiredTokens ( ) ; if ( this . tokens . size ( ) < CONCURRENT_TOKEN_LIMIT ) { Token tkn = new Token ( ipOfClient ) ; String tokenuid = UUID . randomUUID ( ) . toString ( ) ; this . tokens . put ( tokenuid , tkn ) ; return tokenuid ; } return _NULL ; }
29956	public void revertToDefaultValue ( ) { List < FieldConfigBase > fieldList = fieldConfigManager . getFields ( _NULL ) ; if ( fieldList != _NULL ) { for ( FieldConfigBase field : fieldList ) { if ( field != _NULL ) { field . revertToDefaultValue ( ) ; } } } }
30076	public static byte [ ] readFileToByteArray ( File file ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . toByteArray ( in , file . length ( ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
30096	@ Override public int read ( ) throws IOException { if ( eof ) { throw new IOException ( _CHAR Read after end of file _CHAR ) ; } if ( position == size ) { return doEndOfFile ( ) ; } position ++ ; return processByte ( ) ; }
30111	private List < String > dimensionNamespaces ( String dimensionName ) { switch ( dimensionName ) { case _CHAR SIZE _CHAR : return Arrays . asList ( _CHAR SPECIES _CHAR , _CHAR BREED _CHAR , _CHAR GENDER _CHAR ) ; case _CHAR SHAPE _CHAR : return Arrays . asList ( _CHAR SPECIES _CHAR ) ; default : return Collections . emptyList ( ) ; } }
30124	public void close ( ) { try { if ( textStorageReader != _NULL ) textStorageReader . closeAllFiles ( ) ; if ( dataIndexReader != _NULL ) dataIndexReader . close ( ) ; if ( classDumpReader != _NULL ) classDumpReader . close ( ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
30126	public boolean equals ( Object other ) { if ( ! ( other instanceof TObjectShortHashMap ) ) { return _BOOL ; } TObjectShortHashMap that = ( TObjectShortHashMap ) other ; if ( that . size ( ) != this . size ( ) ) { return _BOOL ; } return forEachEntry ( new EqProcedure ( that ) ) ; }
30187	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } committed = _BOOL ; }
30205	public static String sanitizeAppIdentifier ( String appIdentifier ) throws IllegalArgumentException { if ( appIdentifier == _NULL ) { throw new IllegalArgumentException ( _CHAR App Key must not be _NULL . _CHAR ) ; } String sAppIdentifier = appIdentifier . trim ( ) ; if ( sAppIdentifier . length ( ) != APP_IDENTIFIER_LENGTH ) { throw new IllegalArgumentException ( _CHAR App Key length must be _CHAR + APP_IDENTIFIER_LENGTH + _CHAR characters . '' ) ; } return sAppIdentifier ; }
30209	public void sendResumeEvent ( PluginResult resumeEvent ) { synchronized ( messageChannelLock ) { if ( messageChannel != _NULL ) { sendEventMessage ( resumeEvent ) ; } else { this . pendingResume = resumeEvent ; } } }
30231	public static Point size ( URL url ) { if ( url == _NULL ) return _NULL ; try { return size ( url . openStream ( ) ) ; } catch ( Exception e ) { log . error ( e . getMessage ( ) , e ) ; } return _NULL ; }
30286	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
30294	public boolean hasStroke ( Symbolizer symbolizer ) { boolean result = _BOOL ; if ( symbolizer != _NULL ) { SLDTreeLeafInterface obj = map . get ( symbolizer . getClass ( ) ) ; if ( obj != _NULL ) { result = obj . hasStroke ( symbolizer ) ; } } return result ; }
30316	private static void populate ( ) { String className = FileSystemExtension . class . getName ( ) ; try { ExtensionInterface extension = ( ExtensionInterface ) Class . forName ( className ) . newInstance ( ) ; extensionList . add ( extension ) ; } catch ( InstantiationException | IllegalAccessException | ClassNotFoundException e ) { ConsoleManager . getInstance ( ) . exception ( ExtensionFactory . class , e ) ; } }
30335	public TypeDecl type ( ) { ASTNode $ State state = state ( ) ; try { ArrayList < TypeDecl > list = new ArrayList < TypeDecl > ( ) ; for ( int i = _NUM ; i < getNumTypeAccess ( ) ; i ++ ) list . add ( getTypeAccess ( i ) . type ( ) ) ; return lookupLUBType ( list ) . lub ( ) ; } finally { } }
30397	private void cleanupCache ( ) { Iterator < Entry < SocketAddress , Long >> it = this . failedDelayCache . entrySet ( ) . iterator ( ) ; while ( it . hasNext ( ) ) { Entry < SocketAddress , Long > e = it . next ( ) ; Long lastFailTime = e . getValue ( ) ; if ( retryDelayHasPassedBy ( lastFailTime ) ) { it . remove ( ) ; } } }
30518	public void addWatch ( FileWatcherUpdateInterface parent , Path path ) { if ( path != _NULL ) { try { WatchKey key = path . register ( watchService , StandardWatchEventKinds . ENTRY_CREATE , StandardWatchEventKinds . ENTRY_DELETE , StandardWatchEventKinds . ENTRY_MODIFY ) ; watcherMap . put ( key , parent ) ; } catch ( IOException e ) { } } }
30564	@ Nullable protected Path findConfigRootHeuristic ( Path configPath ) { Path parent = configPath . getParent ( ) ; while ( parent != _NULL ) { if ( Files . isDirectory ( parent . resolve ( _CHAR . git _CHAR ) ) ) { return parent ; } parent = parent . getParent ( ) ; } return _NULL ; }
30605	@ Override public void parse ( String systemId ) throws IOException , SAXException { setupParse ( systemId ) ; try { parser . parse ( systemId ) ; } catch ( InternalError ie ) { explain ( systemId ) ; throw ie ; } }
30669	private boolean initIfNecessary ( ) { if ( ourDeviceManager == _NULL ) { if ( mySdkPath == _NULL ) { IJ_LOG . error ( _CHAR No installed SDK found ! _CHAR ) ; return _BOOL ; } ourDeviceManager = DeviceManager . createInstance ( mySdkPath , SDK_LOG ) ; } return _BOOL ; }
30692	boolean onSplitWork ( int bytesMoved ) { if ( _splitTargetRemaining <= _NUM ) { _splitTargetRemaining = _splitTargetSize - bytesMoved ; return _BOOL ; } else { _splitTargetRemaining -= bytesMoved ; return _BOOL ; } }
30716	private static boolean isPaymentTypeRecurse ( GenericValue paymentType , String inputTypeId ) throws GenericEntityException { String parentTypeId = paymentType . getString ( _CHAR parentTypeId _CHAR ) ; if ( parentTypeId == _NULL ) { return _BOOL ; } if ( parentTypeId . equals ( inputTypeId ) ) { return _BOOL ; } return isPaymentTypeRecurse ( paymentType . getRelatedOne ( _CHAR ParentPaymentType _CHAR , _BOOL ) , inputTypeId ) ; }
30788	private static void fixPrng ( ) { if ( ! prngFixed . get ( ) ) { synchronized ( PrngFixes . class ) { if ( ! prngFixed . get ( ) ) { PrngFixes . apply ( ) ; prngFixed . set ( _BOOL ) ; } } } }
30820	protected int [ ] createPalette ( int size ) { switch ( m_type ) { case Constants . NOMINAL : return ColorLib . getCategoryPalette ( size ) ; case Constants . NUMERICAL : case Constants . ORDINAL : default : return ColorLib . getGrayscalePalette ( size ) ; } }
30907	public static boolean interfaceOf ( Class < ? > objectClass , Class < ? > interfaceClass ) { while ( objectClass != _NULL ) { Class < ? > [ ] ifaces = objectClass . getInterfaces ( ) ; for ( Class < ? > iface : ifaces ) { if ( iface == interfaceClass ) return _BOOL ; } objectClass = objectClass . getSuperclass ( ) ; } return _BOOL ; }
30916	public void update ( Vector2 mousePosition ) { synchronized ( this . mousePosition ) { if ( this . mousePosition . distanceSquared ( mousePosition ) <= Epsilon . E ) return ; this . mousePosition = mousePosition . copy ( ) ; if ( ! this . updateRequired ) { this . updateRequired = _BOOL ; this . updateEDT ( ) ; } } }
30924	public static CarbonDimension findDimension ( List < CarbonDimension > dimensions , String carbonDim ) { CarbonDimension findDim = _NULL ; for ( CarbonDimension dimension : dimensions ) { if ( dimension . getColName ( ) . equalsIgnoreCase ( carbonDim ) ) { findDim = dimension ; break ; } } return findDim ; }
30933	public static boolean kingLike ( Item tokenItem ) { String kingName = ( ( String ) tokenItem . findFeature ( _CHAR p . name _CHAR ) ) . toLowerCase ( ) ; if ( inKingSectionLikeHash ( kingName , KING_NAMES ) ) { return _BOOL ; } else { String kingTitle = ( ( String ) tokenItem . findFeature ( _CHAR p . p . name _CHAR ) ) . toLowerCase ( ) ; return inKingSectionLikeHash ( kingTitle , KING_TITLES ) ; } }
30990	public void loadDataStringFromFile ( String sFilename ) { try { Histogram . loadDataStringFromFile ( sFilename ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; Histogram . setDataString ( _CHAR _CHAR ) ; Graph . setDataString ( _CHAR _CHAR ) ; } }
31013	public static float readFloat ( DataInputStream dis , boolean isBigEndian ) throws IOException { float val ; if ( ! isBigEndian ) { val = readLittleEndianFloat ( dis ) ; } else { val = dis . readFloat ( ) ; } return val ; }
31137	public int cardinality ( ) { int c = _NUM ; for ( long v : bits ) { while ( v != _NUM ) { v & = v - _NUM ; ++ c ; } } return c ; }
31179	public String readString ( ) { int s = readInt ( ) ; if ( s == _NUM ) { return _NULL ; } byte [ ] b = new byte [ s ] ; System . arraycopy ( data , offset , b , _NUM , s ) ; offset += s ; return new String ( b ) ; }
31209	public static float reduceSinAngle ( float radians ) { radians % = TWO_PI ; if ( Math . abs ( radians ) > PI ) { radians = radians - ( TWO_PI ) ; } if ( Math . abs ( radians ) > HALF_PI ) { radians = PI - radians ; } return radians ; }
31232	public void cancel ( ) { if ( mAnimator != _NULL && mAnimator . isRunning ( ) ) { mAnimator . cancel ( ) ; } if ( mTimer != _NULL ) { mTimer . cancel ( ) ; mTimer . purge ( ) ; cleanupAnimation ( ) ; } }
31244	@ Override public synchronized void publish ( LogRecord record ) { if ( corruptedOutputStream ) { return ; } if ( sizeRollingPolicy . hasReachedLimit ( ) || timeRollingPolicy . needsRollover ( ) ) { configureOutputStream ( ) ; } super . publish ( record ) ; super . flush ( ) ; }
31324	public static File toFile ( URL url ) { if ( url == _NULL || ! _CHAR file _CHAR . equalsIgnoreCase ( url . getProtocol ( ) ) ) { return _NULL ; } else { String filename = url . getFile ( ) . replace ( _CHAR , File . separatorChar ) ; filename = decodeUrl ( filename ) ; return new File ( filename ) ; } }
31445	public void dispose ( ) { if ( serverSocket != _NULL ) { try { serverSocket . close ( ) ; } catch ( IOException e ) { ; } } }
31466	private void registerTaskInstances ( ) { for ( TaskFromDBTrigger trigger : tasksList ) { if ( trigger . isValid ( ) ) { trigger . initTrigger ( ) ; } else { log . error ( _CHAR Can not load task from db with ID : _CHAR + trigger . getTaskId ( ) ) ; } } }
31578	private void openDownloadsPage ( Context context ) { Intent pageView = new Intent ( DownloadManager . ACTION_VIEW_DOWNLOADS ) ; pageView . setFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; try { context . startActivity ( pageView ) ; } catch ( ActivityNotFoundException e ) { Log . e ( TAG , _CHAR Can not find Downloads app _CHAR , e ) ; } }
31623	@ Override public boolean equals ( Object o ) { if ( o instanceof RepoResult == _BOOL ) { return _BOOL ; } RepoResult rr = ( RepoResult ) o ; if ( this . getName ( ) . equals ( rr . getName ( ) ) ) { return _BOOL ; } return _BOOL ; }
31644	public int read ( ) throws EOFException { try { int value = array [ cursor ( ) ] ; advance ( _NUM ) ; return value & _NUM ; } catch ( ArrayIndexOutOfBoundsException ex ) { throw new EOFException ( ) ; } }
31663	@ Override public String toString ( ) { StringTable stringTable = StringTable . getCurrent ( ) ; if ( stringTable != _NULL ) { Node node = stringTable . get ( myIdentifier ) ; if ( node != _NULL ) { return node . getString ( myArguments ) ; } } return myIdentifier + _CHAR _CHAR + myArguments ; }
31691	public static boolean addOrUpdateBan ( BannedIP ipBan ) { if ( ipBan . getId ( ) == _NULL ) { if ( getDAO ( ) . insert ( ipBan ) ) { banList . add ( ipBan ) ; return _BOOL ; } return _BOOL ; } return getDAO ( ) . update ( ipBan ) ; }
31732	public static List < String > readLines ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . readLines ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
31847	public static boolean isSignedFloat ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { Float . parseFloat ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
31949	public String dnsResolve ( String host ) { try { InetAddress ina = InetAddress . getByName ( host ) ; return ina . getHostAddress ( ) ; } catch ( UnknownHostException e ) { Logger . log ( JavaxPacScriptParser . class , LogLevel . DEBUG , _CHAR DNS name not resolvable { _NUM } . _CHAR , host ) ; } return _CHAR _CHAR ; }
31973	public final void dropDocumentReferences ( ) { fDocument = _NULL ; fDocumentImpl = _NULL ; fDeferredDocumentImpl = _NULL ; fDocumentType = _NULL ; fCurrentNode = _NULL ; fCurrentCDATASection = _NULL ; fCurrentEntityDecl = _NULL ; fRoot = _NULL ; }
31984	protected Expression generateExpression ( ) { Expression expression = _NULL ; if ( attributeComboBox != _NULL ) { String value = getStringValue ( ) ; if ( value != _NULL ) { expression = getFilterFactory ( ) . property ( value ) ; } } return expression ; }
32026	private Map < String , String > mapJobRowsToJobViews ( JobRow jobRow ) { try { return jobPayloadBuilder . buildPayload ( jobRow , uriInfo ) ; } catch ( JobRequestFailedException ignored ) { String msg = ErrorMessageFormat . JOBS_RETREIVAL_FAILED . format ( jobRow . getId ( ) ) ; LOG . error ( msg ) ; throw new JobRequestFailedException ( msg ) ; } }
32028	public static JsonArray array ( float ... values ) { if ( values == _NULL ) { throw new NullPointerException ( _CHAR values is _NULL _CHAR ) ; } JsonArray array = new JsonArray ( ) ; for ( float value : values ) { array . add ( value ) ; } return array ; }
32459	public < T > T inject ( Class < T > clazz , FramePath framePath ) { final ElementLocatorFactory elementLocatorFactory = new DefaultElementLocatorFactory ( webDriver ) ; stack . push ( new PageObjectContext ( elementLocatorFactory , framePath ) ) ; try { return injector . getInstance ( clazz ) ; } finally { stack . pop ( ) ; } }
32526	public boolean adjustValue ( K key , short amount ) { int index = index ( key ) ; if ( index < _NUM ) { return _BOOL ; } else { _values [ index ] += amount ; return _BOOL ; } }
32561	public void writeLong ( long value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _LONG ) ; this . dataOut . writeLong ( value ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
32562	private static boolean isTrusted ( Object obj , TrustVerifier . Context ctx ) throws RemoteException { Object saved = state . get ( ) ; try { state . set ( obj ) ; return ctx . isTrustedObject ( obj ) ; } finally { state . set ( saved ) ; } }
32696	public static ContainerDescription buildCoreAgentContainerDescription ( ) { ContainerDescription cd = new ContainerDescription ( ) ; cd . documentSelfLink = AGENT_CONTAINER_DESCRIPTION_LINK ; cd . name = AGENT_CONTAINER_NAME ; cd . image = getAgentImageNameAndVersion ( ) ; cd . publishAll = _BOOL ; cd . volumes = AGENT_CONTAINER_VOLUMES ; cd . restartPolicy = _CHAR always _CHAR ; return cd ; }
32931	public void onPut ( ) { if ( this . isAjax ( ) ) { JSON jo = new JSON ( ) ; jo . put ( X . STATE , HttpServletResponse . SC_FORBIDDEN ) ; response ( jo ) ; } else { this . print ( _CHAR not support _CHAR ) ; } }
32940	private void mergeXmlFiles ( File cachedXml , File cleanMainXml ) throws Error { XmlMerger merger = new XmlMerger ( cleanMainXml , cachedXml ) ; try { merger . process ( ) ; } catch ( Exception e ) { log . error ( _CHAR Error while merging xml files '' , e ) ; throw new Error ( _CHAR Error while merging xml files '' , e ) ; } }
32990	public void destroy ( ) { if ( mDomThread != _NULL && mDomThread . isWXThreadAlive ( ) ) { mDomThread . quit ( ) ; } if ( mDomRegistries != _NULL ) { mDomRegistries . clear ( ) ; } mDomHandler = _NULL ; mDomThread = _NULL ; }
33051	public byte [ ] toByteArray ( ) { if ( places . length == _NUM ) { byte zero [ ] = new byte [ _NUM ] ; zero [ _NUM ] = ( byte ) _NUM ; return zero ; } else { return ( byte [ ] ) places . clone ( ) ; } }
33071	public static byte [ ] decode ( byte [ ] data ) { ByteArrayOutputStream bOut = new ByteArrayOutputStream ( ) ; try { encoder . decode ( data , _NUM , data . length , bOut ) ; } catch ( Exception e ) { throw new DecoderException ( _CHAR exception decoding Hex data : _CHAR + e . getMessage ( ) , e ) ; } return bOut . toByteArray ( ) ; }
33105	public void destroyToken ( SSOToken destroyer , SSOToken destroyed ) throws SSOException { try { Session requester = ( ( SSOTokenImpl ) destroyer ) . getSession ( ) ; Session target = ( ( SSOTokenImpl ) destroyed ) . getSession ( ) ; requester . destroySession ( target ) ; } catch ( SessionException e ) { throw new SSOException ( e ) ; } }
33112	private void updateKeyMaskFields ( ) { mask = fRanges ; if ( fContextual ) { mask |= ( _NUM << _NUM ) ; key = fDefaultContextIndex ; } else { key = fSingleRangeIndex ; } }
33144	public boolean isValidEntry ( String dn ) throws SSOException { if ( ! LDAPUtils . isDN ( dn ) ) { return _BOOL ; } SSOTokenManager . getInstance ( ) . validateToken ( token ) ; if ( AMCommonUtils . debug . messageEnabled ( ) ) { AMCommonUtils . debug . message ( _CHAR AMStoreConnection . isValidEntry ( ) : DN = _CHAR + dn ) ; } return dsServices . doesEntryExists ( token , dn ) ; }
33168	public String debugDump ( ) { String superstring = super . debugDump ( ) ; stringRepresentation = _CHAR _CHAR ; sprint ( SIPRequest . class . getName ( ) ) ; sprint ( _CHAR { _CHAR ) ; if ( requestLine != _NULL ) sprint ( requestLine . debugDump ( ) ) ; sprint ( superstring ) ; sprint ( _CHAR } _CHAR ) ; return stringRepresentation ; }
33199	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
33217	public EMail createEMail ( String value ) { EmailField emailImpl = new EmailField ( ) ; try { emailImpl . setValue ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return emailImpl ; }
33307	public int read ( ) throws IOException { if ( closed ) { throw new IOException ( _CHAR Attempted read from closed stream . '' ) ; } if ( pos >= contentLength ) { return - _NUM ; } pos ++ ; return this . in . read ( ) ; }
33328	private void returnTerminationStatus ( HttpServletResponse response ) { try { response . setStatus ( _NUM ) ; response . flushBuffer ( ) ; return ; } catch ( Exception e ) { FSUtils . debug . error ( _CHAR FSSOAPReceiver . returnFedTerminationStatus : Exception : : _CHAR , e ) ; } }
33380	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
33396	public Cursor fetch ( Long attributeID ) { if ( attributeID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_EXTERNALATTRIBUTEID + _CHAR = _CHAR + attributeID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
33519	private void savePreviousImageValues ( ) { if ( matrix != _NULL ) { matrix . getValues ( m ) ; prevMatrix . setValues ( m ) ; prevMatchViewHeight = matchViewHeight ; prevMatchViewWidth = matchViewWidth ; prevViewHeight = viewHeight ; prevViewWidth = viewWidth ; } }
33589	public List < AuditEvent > convertToAuditEvent ( Iterable < PersistentAuditEvent > persistentAuditEvents ) { if ( persistentAuditEvents == _NULL ) { return Collections . emptyList ( ) ; } List < AuditEvent > auditEvents = new ArrayList < > ( ) ; for ( PersistentAuditEvent persistentAuditEvent : persistentAuditEvents ) { auditEvents . add ( convertToAuditEvent ( persistentAuditEvent ) ) ; } return auditEvents ; }
33683	public void updateDeleteTime ( long time ) { if ( time > _NUM && time < deleteTimeMin ) { deleteTimeMin = time ; } if ( time > deleteTimeMax ) { deleteTimeMax = time ; } deleteCumulativeCount += time ; deleteTimeAverage = deleteCumulativeCount / totalDeletes ; }
33711	public Object createXPathEvaluator ( Document doc ) { try { Class xpathClass = Class . forName ( _CHAR org . apache . xpath . domapi . XPathEvaluatorImpl _CHAR ) ; Constructor constructor = xpathClass . getConstructor ( new Class [ ] { Document . class } ) ; return constructor . newInstance ( new Object [ ] { doc } ) ; } catch ( Exception ex ) { } return doc ; }
33752	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
33777	public boolean nextTile ( ) throws ModelControlException { boolean movedToRow = super . nextTile ( ) ; if ( movedToRow ) { curTile = getTileIndex ( ) ; setDisplayFieldValue ( TXT_INDEX , Integer . toString ( curTile ) ) ; setDisplayFieldValue ( TXT_BUTTON , buttons [ curTile ] ) ; setDisplayFieldValue ( TXT_CLASS , curTile == _NUM ? _CHAR button primary _CHAR : _CHAR button _CHAR ) ; } return movedToRow ; }
33816	public void showDoneButton ( boolean animate ) { if ( animate ) { mButtonStyle = STYLE_NEXT ; toggle ( ) ; } else { mButtonStyle = STYLE_DONE ; setImageDrawable ( mDoneDrawable ) ; } }
33874	protected boolean reportNode ( ) { state = ITERATE_CHILDREN ; if ( visitedNode . getParent ( ) != _NULL && ( ! getOptions ( ) . isJustLeafnodes ( ) || ! visitedNode . hasChildren ( ) ) ) { returnProperty = createPropertyInfo ( visitedNode , getBaseNS ( ) , path ) ; return _BOOL ; } else { return hasNext ( ) ; } }
33893	public Object [ ] toArray ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return Arrays . copyOf ( queue , size ) ; } finally { lock . unlock ( ) ; } }
33936	private void powerUpFm ( ) { Log . v ( TAG , _CHAR start powerUpFm _CHAR ) ; refreshImageButton ( _BOOL ) ; refreshActionMenuItem ( _BOOL ) ; refreshPopupMenuItem ( _BOOL ) ; refreshActionMenuPower ( _BOOL ) ; startAnimation ( ) ; mService . powerUpAsync ( FmRadioUtils . computeFrequency ( mCurrentStation ) ) ; Log . v ( TAG , _CHAR end powerUpFm _CHAR ) ; }
33958	private boolean isHHSign ( String str ) { boolean sign = _BOOL ; try { char r = ( char ) Integer . parseInt ( str , _NUM ) ; } catch ( NumberFormatException e ) { sign = _BOOL ; } return sign ; }
33992	void pop ( ) { if ( ! stack . isEmpty ( ) ) { DirectoryNode node = stack . pop ( ) ; try { node . stream ( ) . close ( ) ; } catch ( IOException ignore ) { } } }
34067	public void disable_item ( int p_no ) { for ( int i = _NUM ; i < item_arr . length ; ++ i ) { if ( i == p_no ) { item_arr [ i ] . setEnabled ( _BOOL ) ; } else { item_arr [ i ] . setEnabled ( _BOOL ) ; } } }
34078	public static boolean isInternetConnected ( Context context ) { final ConnectivityManager conMgr = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; final NetworkInfo activeNetwork = conMgr . getActiveNetworkInfo ( ) ; if ( activeNetwork != _NULL && activeNetwork . isConnected ( ) ) { return _BOOL ; } else { return _BOOL ; } }
34267	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
34324	static boolean createFile ( File f ) throws IOException { if ( f != _NULL ) { File parent = f . getParentFile ( ) ; if ( ! parent . exists ( ) ) { parent . mkdirs ( ) ; } return f . createNewFile ( ) ; } return _BOOL ; }
34336	private boolean confirmDeletion ( ConsoleApplication app ) throws ClientException { if ( app . isInteractive ( ) ) { app . println ( ) ; if ( ! app . confirmAction ( INFO_DSCFG_CONFIRM_DELETE . get ( relation . getUserFriendlyName ( ) ) , _BOOL ) ) { app . errPrintln ( INFO_DSCFG_CONFIRM_DELETE_FAIL . get ( relation . getUserFriendlyName ( ) ) ) ; return _BOOL ; } } return _BOOL ; }
34344	@ Override public void shutdown ( ) { processServerShutdown ( _NULL ) ; try { writer . flush ( ) ; writer . close ( ) ; } catch ( Exception e ) { errorHandler . handleCloseError ( e ) ; } }
34405	public void deleteOnQuery ( final TokenFilter filter ) throws CoreTokenException , IllegalArgumentException { filter . addReturnAttribute ( CoreTokenField . TOKEN_ID ) ; ResultHandler < Collection < PartialToken > , CoreTokenException > handler = handlerFactory . getDeleteOnQueryHandler ( ) ; try { attributeQueryWithHandler ( filter , handler ) ; } catch ( CoreTokenException e ) { throw new QueryFailedException ( filter , e ) ; } }
34413	void createImpl ( ) throws SocketException { if ( impl == _NULL ) setImpl ( ) ; try { impl . create ( _BOOL ) ; created = _BOOL ; } catch ( IOException e ) { throw new SocketException ( e . getMessage ( ) ) ; } }
34457	private void startHotRefresh ( ) { try { String host = new URL ( mUri . toString ( ) ) . getHost ( ) ; String wsUrl = _CHAR ws : // '' + host + '' : 8082 '' ; mWXHandler . obtainMessage ( Constants . HOT_REFRESH_CONNECT , 0 , 0 , wsUrl ) . sendToTarget ( ) ; } catch ( MalformedURLException e ) { e . printStackTrace ( ) ; } }
34466	private static void log ( final Entry entry ) { try { writer . writeEntry ( entry ) ; writer . flush ( ) ; } catch ( IOException e ) { System . err . println ( e . getMessage ( ) ) ; System . exit ( ResultCode . CLIENT_SIDE_LOCAL_ERROR . intValue ( ) ) ; } }
34480	private void writeAttribute ( ASN1Writer stream , Attribute a ) throws IOException { stream . writeStartSequence ( ) ; stream . writeOctetString ( a . getAttributeDescription ( ) . toString ( ) ) ; stream . writeStartSet ( ) ; for ( ByteString value : a ) { stream . writeOctetString ( value ) ; } stream . writeEndSequence ( ) ; stream . writeEndSequence ( ) ; }
34638	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
34642	public boolean connectDSwithDN ( boolean ssl ) { try ( Connection conn = getLDAPConnection ( ssl ) ) { ConnectionEntryReader results = conn . search ( LDAPRequests . newSearchRequest ( suffix , SearchScope . BASE_OBJECT , Filter . objectClassPresent ( ) . toString ( ) ) ) ; return results . hasNext ( ) ; } catch ( LdapException e ) { disconnectDServer ( ) ; return _BOOL ; } }
34711	public final void tunnelTarget ( boolean secure ) { if ( ! this . connected ) { throw new IllegalStateException ( _CHAR No tunnel unless connected . '' ) ; } if ( this . proxyChain == _NULL ) { throw new IllegalStateException ( _CHAR No tunnel without proxy . '' ) ; } this . tunnelled = TunnelType . TUNNELLED ; this . secure = secure ; }
34826	final void onDetach ( ) { DraweeSpan [ ] images = getImages ( ) ; for ( DraweeSpan image : images ) { Drawable drawable = image . getDrawable ( ) ; if ( drawable != _NULL ) { unscheduleDrawable ( drawable ) ; } image . onDetach ( ) ; } }
34830	public void makeImmutable ( ) { mutable = _BOOL ; if ( authnContextClassRef != _NULL ) { authnContextClassRef = Collections . unmodifiableList ( authnContextClassRef ) ; } if ( authnContextDeclRef != _NULL ) { authnContextDeclRef = Collections . unmodifiableList ( authnContextDeclRef ) ; } return ; }
34917	@ Override public void cacheResult ( List < Foo > foos ) { for ( Foo foo : foos ) { if ( entityCache . getResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) ) == _NULL ) { cacheResult ( foo ) ; } else { foo . resetOriginalValues ( ) ; } } }
35053	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
35059	public Object clone ( ) { try { TabularDataSupport c = ( TabularDataSupport ) super . clone ( ) ; c . dataMap = new HashMap < Object , CompositeData > ( c . dataMap ) ; return c ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e . toString ( ) , e ) ; } }
35101	public void logout ( ) throws SessionException { try { SessionOperations operation = sessionOperationStrategy . getOperation ( this . getID ( ) ) ; operation . logout ( this ) ; sessionCache . removeSID ( sessionID ) ; } catch ( Exception e ) { throw new SessionException ( e ) ; } }
35185	public static List < String > readLines ( File file , Charset encoding ) throws IOException { InputStream in = _NULL ; try { in = openInputStream ( file ) ; return IOUtils . readLines ( in , Charsets . toCharset ( encoding ) ) ; } finally { IOUtils . closeQuietly ( in ) ; } }
35204	public Object [ ] toArray ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return Arrays . copyOf ( queue , size ) ; } finally { lock . unlock ( ) ; } }
35305	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
35330	private String findNextDomainId ( ) { int nextId = _NUM ; for ( final String domainId : domains . values ( ) ) { final Integer id = Integer . valueOf ( domainId ) ; if ( nextId <= id ) { nextId = id + _NUM ; } } return String . valueOf ( nextId ) ; }
35397	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException e ) { PrivilegeManager . debug . error ( _CHAR AttributeLookupCondition . setState _CHAR , e ) ; } return s ; }
35412	public static SetOverrideType from_int ( int i ) { switch ( i ) { case _SET_OVERRIDE : return SET_OVERRIDE ; case _ADD_OVERRIDE : return ADD_OVERRIDE ; default : throw new org . omg . CORBA . BAD_PARAM ( ) ; } }
35464	public Object clone ( ) { Object o ; try { o = super . clone ( ) ; } catch ( CloneNotSupportedException cnse ) { o = _NULL ; } return o ; }
35519	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
35559	protected static Long convertIntegerToBucketingLong ( Integer integer ) { if ( integer == _NULL ) { return _NULL ; } if ( integer == Integer . MIN_VALUE ) { integer ++ ; } long toReturn = integer . longValue ( ) ; return toReturn ; }
35563	public ByteString generatePassword ( ) throws DirectoryException { PasswordGenerator < ? > generator = passwordPolicy . getPasswordGenerator ( ) ; if ( generator == _NULL ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( _CHAR Unable to generate a new password for user % s because no password generator has been defined '' + '' in the associated password policy . '' , userDNString ) ; } return _NULL ; } return generator . generatePassword ( userEntry ) ; }
35591	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
35605	@ Override protected String toExternalForm ( URL url ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( _CHAR jar : _CHAR ) ; sb . append ( url . getFile ( ) ) ; String ref = url . getRef ( ) ; if ( ref != _NULL ) { sb . append ( ref ) ; } return sb . toString ( ) ; }
35615	private int countLines ( Process process ) throws IOException { logErrors ( process ) ; InputStream in = process . getInputStream ( ) ; BufferedReader reader = new BufferedReader ( new InputStreamReader ( in ) ) ; int count = _NUM ; while ( reader . readLine ( ) != _NULL ) { count ++ ; } return count ; }
35654	public static boolean clear ( ) { failIfNotInitialized ( ) ; try { mCache . clear ( ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
35678	public AppLauncher env ( String name , String value ) { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value _CHAR ) ; } this . env . put ( name , value ) ; return this ; }
35693	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
35724	public void addLanguage ( final String language ) { if ( language . length ( ) < MetadataDescriptor . MAX_LANG_INDEX ) { if ( ! this . languages . contains ( language ) ) { this . languages . add ( language ) ; } } else { throw new IllegalArgumentException ( ErrorMessage . WMA_LENGTH_OF_LANGUAGE_IS_TOO_LARGE . getMsg ( language . length ( ) * _NUM + _NUM ) ) ; } }
35755	@ Override public void removeSecurityReference ( String name ) { referencesLock . writeLock ( ) . lock ( ) ; try { references . remove ( name ) ; } finally { referencesLock . writeLock ( ) . unlock ( ) ; } fireContainerEvent ( _CHAR removeSecurityReference _CHAR , name ) ; }
35778	public Cursor fetch ( Long appID ) { if ( appID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_APPID + _CHAR = _CHAR + appID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
35781	public static int generateViewId ( ) { for ( ; ; ) { final int result = sNextGeneratedId . get ( ) ; int newValue = result + _NUM ; if ( newValue > _NUM ) newValue = _NUM ; if ( sNextGeneratedId . compareAndSet ( result , newValue ) ) { return result ; } } }
35805	private boolean nextWhenCursorIsExhaustedOrNotCorrectlyPositionned ( ) throws ChangelogException { final boolean found = cursor . positionTo ( lastNonNullCurrentCSN , GREATER_THAN_OR_EQUAL_TO_KEY , positionStrategy ) ; if ( found && cursor . next ( ) ) { nextRecord = cursor . getRecord ( ) ; lastNonNullCurrentCSN = nextRecord . getKey ( ) ; return _BOOL ; } nextRecord = _NULL ; return _BOOL ; }
35860	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
35896	public static URL toURL ( String filename ) throws MalformedURLException { URL url ; try { url = new URL ( filename ) ; } catch ( MalformedURLException e ) { url = new File ( filename ) . toURI ( ) . toURL ( ) ; } return url ; }
36035	public StringBuilder encodeBody ( StringBuilder retval ) { retval . append ( LESS_THAN ) ; errorInfo . encode ( retval ) ; retval . append ( GREATER_THAN ) ; if ( ! parameters . isEmpty ( ) ) { retval . append ( SEMICOLON ) ; parameters . encode ( retval ) ; } return retval ; }
36110	public void objectChanged ( AMEvent event ) { if ( event == _NULL ) { debug . error ( _CHAR AMConfiguration . objectChanged , event _NULL _CHAR ) ; return ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR objectChanged , type = _CHAR + event . getEventType ( ) + _CHAR , sDN = _CHAR + event . getSourceDN ( ) + _CHAR , sType = _CHAR + event . getSourceType ( ) ) ; } processSDKNotification ( ) ; }
36138	public void updateListLength ( int listLength ) { mListLength = listLength ; if ( mListLength == _NUM ) { mIncrementsHSVValue = _NUM ; } else { mIncrementsHSVValue = mTotalHsvValue / mListLength ; } generateStaticColorList ( ) ; }
36212	public static void error ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . error ( level , msgid , data , session ) ; } catch ( LogException le ) { COTUtils . debug . error ( _CHAR LogUtil . error : Could n _CHAR_CHAR , le ) ; } } }
36243	public static void error ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . error ( level , msgid , data , session ) ; } catch ( LogException le ) { debug . error ( _CHAR LogUtil . error : Could n _CHAR_CHAR , le ) ; } } }
36351	public void initializeConfigurationFramework ( ) throws org . opends . server . config . ConfigException { if ( ! ConfigurationFramework . getInstance ( ) . isInitialized ( ) ) { try { ConfigurationFramework . getInstance ( ) . initialize ( ) ; } catch ( ConfigException ce ) { throw new org . opends . server . config . ConfigException ( ce . getMessageObject ( ) , ce ) ; } } }
36357	private void update ( InternalSession session ) { if ( session . isStored ( ) ) { if ( session . getState ( ) != SessionState . VALID ) { delete ( session ) ; } else if ( ! session . isTimedOut ( ) ) { save ( session ) ; } } }
36381	void updateFinish ( String instanceId ) { if ( ! isDomThread ( ) ) { throw new WXRuntimeException ( _CHAR RefreshFinish operation must be done in dom thread _CHAR ) ; } WXDomStatement statement = mDomRegistries . get ( instanceId ) ; if ( statement == _NULL ) { return ; } statement . updateFinish ( ) ; }
36396	protected View createChild ( String name ) { View child = _NULL ; if ( name . equals ( REDIRECT_URL ) ) { child = new StaticTextField ( this , REDIRECT_URL , _CHAR _CHAR ) ; } else { throw new IllegalArgumentException ( _CHAR Invalid child name [ _CHAR + name + _CHAR ] _CHAR ) ; } return child ; }
36462	public void objectRemoved ( AMEvent event ) { if ( event == _NULL ) { debug . error ( _CHAR AMConfiguration . objectChanged , event _NULL _CHAR ) ; return ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR objectRemoved , type = _CHAR + event . getEventType ( ) + _CHAR , sDN = _CHAR + event . getSourceDN ( ) + _CHAR , sType = _CHAR + event . getSourceType ( ) ) ; } processSDKNotification ( ) ; }
36478	public boolean exists ( ) { SecurityManager security = System . getSecurityManager ( ) ; if ( security != _NULL ) { security . checkRead ( path ) ; } if ( isInvalid ( ) ) { return _BOOL ; } return ( ( fs . getBooleanAttributes ( this ) & FileSystem . BA_EXISTS ) != _NUM ) ; }
36513	private byte convertV3ToV4Flags ( byte v3Flag ) { byte v4Flag = ( byte ) _NUM ; if ( ( v3Flag & ID3v23Frame . StatusFlags . MASK_FILE_ALTER_PRESERVATION ) != _NUM ) { v4Flag |= ( byte ) MASK_FILE_ALTER_PRESERVATION ; } if ( ( v3Flag & ID3v23Frame . StatusFlags . MASK_TAG_ALTER_PRESERVATION ) != _NUM ) { v4Flag |= ( byte ) MASK_TAG_ALTER_PRESERVATION ; } return v4Flag ; }
36577	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
36612	public Object clone ( ) { AuthenticatedSharedAgents theClone = _NULL ; try { theClone = ( AuthenticatedSharedAgents ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } return theClone ; }
36644	@ Override public final void normalize ( ) { Node next ; for ( Node node = getFirstChild ( ) ; node != _NULL ; node = next ) { next = node . getNextSibling ( ) ; node . normalize ( ) ; if ( node . getNodeType ( ) == Node . TEXT_NODE ) { ( ( TextImpl ) node ) . minimize ( ) ; } } }
36706	public static boolean isNetworkAvailable ( Context context ) { try { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getApplicationContext ( ) . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetworkInfo = connectivityManager . getActiveNetworkInfo ( ) ; return activeNetworkInfo != _NULL && activeNetworkInfo . isConnected ( ) ; } catch ( Exception e ) { return _BOOL ; } }
36802	private boolean readHeader ( ) throws IOException { if ( consecutiveLineBreaks > _NUM ) { consecutiveLineBreaks = _NUM ; return _BOOL ; } readName ( ) ; consecutiveLineBreaks = _NUM ; readValue ( ) ; return consecutiveLineBreaks > _NUM ; }
36844	public Object clone ( ) { try { ZipEntry e = ( ZipEntry ) super . clone ( ) ; e . extra = ( extra == _NULL ) ? _NULL : extra . clone ( ) ; return e ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
36846	public static void notifyExportBeginning ( Backend < ? > backend , LDIFExportConfig config ) { for ( ExportTaskListener listener : directoryServer . exportTaskListeners ) { try { listener . processExportBegin ( backend , config ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
36887	private boolean evalDNPattern ( AciEvalContext evalCtx , LDAPURL url ) { PatternDN pattern ; try { pattern = PatternDN . decode ( url . getRawBaseDN ( ) ) ; } catch ( DirectoryException ex ) { return _BOOL ; } return pattern . matchesDN ( evalCtx . getClientDN ( ) ) ; }
36931	public PdfIndirectReference add ( PdfIndirectReference reference ) { if ( reference == _NULL ) { return _NULL ; } int objNr = reference . getObjNumber ( ) ; this . count = Math . max ( this . count , objNr ) ; ensureCount ( objNr ) ; xref [ objNr ] = reference ; return reference ; }
36939	public List < AuditEvent > convertToAuditEvent ( Iterable < PersistentAuditEvent > persistentAuditEvents ) { if ( persistentAuditEvents == _NULL ) { return Collections . emptyList ( ) ; } List < AuditEvent > auditEvents = new ArrayList < > ( ) ; for ( PersistentAuditEvent persistentAuditEvent : persistentAuditEvents ) { auditEvents . add ( convertToAuditEvent ( persistentAuditEvent ) ) ; } return auditEvents ; }
36941	public void validate ( final Cookie cookie , final CookieOrigin origin ) throws MalformedCookieException { if ( cookie == _NULL ) { throw new IllegalArgumentException ( _CHAR Cookie may not be _NULL _CHAR ) ; } if ( cookie instanceof SetCookie2 ) { if ( cookie instanceof ClientCookie && ! ( ( ClientCookie ) cookie ) . containsAttribute ( ClientCookie . VERSION_ATTR ) ) { throw new MalformedCookieException ( _CHAR Violates RFC _NUM . Version attribute is required . '' ) ; } } }
36942	public static void writeToFile ( String fileName , String content ) throws IOException { FileWriter fileWriter = _NULL ; try { fileWriter = new FileWriter ( fileName ) ; fileWriter . write ( content ) ; } finally { closeIfNotNull ( fileWriter ) ; } }
36945	public static boolean isUpperCase ( final String txt ) { boolean upper = _BOOL ; for ( final char c : txt . toCharArray ( ) ) { if ( Character . isLowerCase ( c ) ) { upper = _BOOL ; break ; } } return upper ; }
36990	public boolean hasNext ( ) { ensureOpen ( ) ; saveState ( ) ; while ( ! sourceClosed ) { if ( hasTokenInBuffer ( ) ) return revertState ( _BOOL ) ; readInput ( ) ; } boolean result = hasTokenInBuffer ( ) ; return revertState ( result ) ; }
36996	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
37033	public void sizeWidthToFit ( ) { if ( headerRenderer == _NULL ) { return ; } Component c = headerRenderer . getTableCellRendererComponent ( _NULL , getHeaderValue ( ) , _BOOL , _BOOL , _NUM , _NUM ) ; setMinWidth ( c . getMinimumSize ( ) . width ) ; setMaxWidth ( c . getMaximumSize ( ) . width ) ; setPreferredWidth ( c . getPreferredSize ( ) . width ) ; setWidth ( getPreferredWidth ( ) ) ; }
37085	public Object clone ( ) { Object o ; try { o = super . clone ( ) ; } catch ( CloneNotSupportedException cnse ) { o = _NULL ; } return o ; }
37177	private static boolean portMatch ( int port , int [ ] ports ) { boolean portInList = _BOOL ; for ( int i = _NUM , len = ports . length ; i < len ; i ++ ) { if ( port == ports [ i ] ) { portInList = _BOOL ; break ; } } return portInList ; }
37192	protected boolean matchNameAttribute ( AttributeSet attr , HTML . Tag tag ) { Object o = attr . getAttribute ( StyleConstants . NameAttribute ) ; if ( o instanceof HTML . Tag ) { HTML . Tag name = ( HTML . Tag ) o ; if ( name == tag ) { return _BOOL ; } } return _BOOL ; }
37276	public static List < Foo > toModels ( FooSoap [ ] soapModels ) { if ( soapModels == _NULL ) { return _NULL ; } List < Foo > models = new ArrayList < Foo > ( soapModels . length ) ; for ( FooSoap soapModel : soapModels ) { models . add ( toModel ( soapModel ) ) ; } return models ; }
37420	public boolean contains_plane ( String p_net_name ) { for ( DsnLayer curr_layer : arr ) { if ( ! curr_layer . is_signal ) { if ( curr_layer . net_names . contains ( p_net_name ) ) { return _BOOL ; } } } return _BOOL ; }
37435	public static UUID randomUUID ( ) { byte [ ] data = new byte [ _NUM ] ; synchronized ( UUID . class ) { if ( rng == _NULL ) { rng = new SecureRandom ( ) ; } } rng . nextBytes ( data ) ; return makeUuid ( data , _NUM ) ; }
37438	public byte [ ] generateSignature ( @ NonNull byte [ ] content ) { try { Mac mac = Mac . getInstance ( HASH_ALGORITHM ) ; mac . init ( secretKeySpec ) ; return mac . doFinal ( content ) ; } catch ( NoSuchAlgorithmException | InvalidKeyException e ) { throw new IllegalStateException ( e ) ; } }
37470	@ Override public void lifecycleEvent ( LifecycleEvent event ) { if ( Lifecycle . START_EVENT . equals ( event . getType ( ) ) ) { component = event . getLifecycle ( ) ; createMBeans ( ) ; } else if ( Lifecycle . STOP_EVENT . equals ( event . getType ( ) ) ) { destroyMBeans ( ) ; component = _NULL ; } }
37524	public boolean isApplicable ( AciTargetMatchContext matchCtx ) { if ( matchCtx . getExtOpOID ( ) == _NULL ) { return _BOOL ; } boolean ret = isApplicable ( matchCtx . getExtOpOID ( ) ) ; if ( EnumTargetOperator . NOT_EQUALITY . equals ( op ) ) { return ! ret ; } return ret ; }
37527	private void interruptWorkers ( ) { final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { for ( Worker w : workers ) w . interruptIfStarted ( ) ; } finally { mainLock . unlock ( ) ; } }
37547	public Cursor fetch ( Long ruleActionID ) { if ( ruleActionID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_RULEACTIONID + _CHAR = _CHAR + ruleActionID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
37588	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
37611	private void readObject ( final ObjectInputStream in ) throws IOException , ClassNotFoundException { try { in . defaultReadObject ( ) ; final PerUserPoolDataSource oldDS = ( PerUserPoolDataSource ) new PerUserPoolDataSourceFactory ( ) . getObjectInstance ( getReference ( ) , _NULL , _NULL , _NULL ) ; this . managers = oldDS . managers ; } catch ( final NamingException e ) { throw new IOException ( _CHAR NamingException : _CHAR + e ) ; } }
37623	@ Override public long contentLength ( ) { long size ; try { size = Long . parseLong ( request . getHeader ( FileUploadBase . CONTENT_LENGTH ) ) ; } catch ( NumberFormatException e ) { size = request . getContentLength ( ) ; } return size ; }
37670	public int size ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return count ; } finally { lock . unlock ( ) ; } }
37693	public void trackPendingDialogCall ( FacebookDialog . PendingCall pendingCall ) { if ( pendingFacebookDialogCallId != _NULL ) { Log . i ( _CHAR Facebook _CHAR , _CHAR Tracking new app call while one is still pending ; canceling pending call . '' ) ; cancelPendingAppCall ( _NULL ) ; } if ( pendingCall != _NULL ) { pendingFacebookDialogCallId = pendingCall . getCallId ( ) ; pendingFacebookDialogCallStore . trackPendingCall ( pendingCall ) ; } }
37758	public void removeAllRotationPolicies ( ) { for ( RotationPolicy < ? > policy : rotationPolicies ) { if ( policy instanceof SizeBasedRotationPolicy ) { sizeLimit = _NUM ; SizeBasedRotationPolicy sizePolicy = ( SizeBasedRotationPolicy ) policy ; sizePolicy . currentConfig . removeSizeLimitChangeListener ( this ) ; } } this . rotationPolicies . clear ( ) ; }
37770	private static InetAddress toIpAddress ( String hostName ) { try { if ( InetAddressValidator . isValid ( hostName ) ) { return InetAddress . getByName ( hostName ) ; } } catch ( UnknownHostException e ) { } return _NULL ; }
37823	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
37862	public static void error ( Level level , String msgid , String [ ] data ) { if ( ( logger != _NULL ) && logger . isErrorLoggable ( level ) ) { try { logger . error ( level , msgid , data , _NULL ) ; } catch ( LogException le ) { debug . error ( _CHAR LogUtil . error : _CHAR , le ) ; } } }
37873	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
37960	public static List < Foo > toModels ( FooSoap [ ] soapModels ) { if ( soapModels == _NULL ) { return _NULL ; } List < Foo > models = new ArrayList < Foo > ( soapModels . length ) ; for ( FooSoap soapModel : soapModels ) { models . add ( toModel ( soapModel ) ) ; } return models ; }
38003	public void invokePostSynchronizationModifyPlugins ( PostSynchronizationModifyOperation modifyOperation ) { for ( DirectoryServerPlugin p : postSynchronizationModifyPlugins ) { try { p . doPostSynchronization ( modifyOperation ) ; } catch ( Exception e ) { logException ( modifyOperation , p , e , ERR_PLUGIN_POST_SYNCHRONIZATION_PLUGIN_EXCEPTION ) ; } } }
38066	protected boolean isSerializable ( Object obj ) { if ( obj == _NULL ) return _BOOL ; Class [ ] interfaces = obj . getClass ( ) . getInterfaces ( ) ; for ( Class anInterface : interfaces ) { if ( anInterface . getName ( ) . equals ( SERIALIZABLE_INT ) ) { return _BOOL ; } } return _BOOL ; }
38076	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
38086	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
38093	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
38150	public Cursor fetch ( Long dataFilterID ) { if ( dataFilterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_DATAFILTERID + _CHAR = _CHAR + dataFilterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
38244	protected final void notifyDataProviderEventOccurred ( final DataProviderEvent event ) { for ( final DataProviderEventListener listener : eventListeners ) { try { listener . handleDataProviderEvent ( event ) ; } catch ( final Exception e ) { debugLogger . trace ( _CHAR Unexpected error occurred while invoking listener '' , e ) ; } } }
38250	public void start ( ) { synchronized ( startStopLock ) { if ( ! shutdown ) { return ; } shutdown = _BOOL ; this . rcvWindow = getMaxRcvWindow ( ) ; connectAsDataServer ( ) ; } }
38291	protected void readDataFromSocket ( SelectionKey key ) throws Exception { NioReplicationTask task = ( NioReplicationTask ) getTaskPool ( ) . getRxTask ( ) ; if ( task == _NULL ) { if ( log . isDebugEnabled ( ) ) log . debug ( _CHAR No TcpReplicationThread available _CHAR ) ; } else { task . serviceChannel ( key ) ; getExecutor ( ) . execute ( task ) ; } }
38326	private void forceTrustManagerInitialization ( ) { forceNonInteractive = _BOOL ; try { ci . initializeTrustManagerIfRequired ( ) ; } catch ( ArgumentException ae ) { logger . warn ( LocalizableMessage . raw ( _CHAR Error initializing trust store : _CHAR + ae , ae ) ) ; } forceNonInteractive = _BOOL ; }
38352	public String processURL ( String URL , HttpServletRequest servletRequest ) { String url = URL ; if ( url != _NULL ) { url = processDynamicVariables ( url , servletRequest ) ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR processURL : _CHAR + url ) ; } return url ; }
38374	public static void touch ( File file ) throws IOException { if ( ! file . exists ( ) ) { OutputStream out = openOutputStream ( file ) ; IOUtils . closeQuietly ( out ) ; } boolean success = file . setLastModified ( System . currentTimeMillis ( ) ) ; if ( ! success ) { throw new IOException ( _CHAR Unable to set the last modification time for '' + file ) ; } }
38404	private void initializeGroupManager ( ) throws ConfigException , InitializationException { try { groupManager = new GroupManager ( serverContext ) ; } catch ( DirectoryException de ) { logger . traceException ( de ) ; throw new InitializationException ( de . getMessageObject ( ) ) ; } groupManager . initializeGroupImplementations ( ) ; }
38417	public void clear ( DN baseDN ) { final DN baseDNToClear = baseDN != _NULL ? baseDN : DN . rootDN ( ) ; domainsToClear . add ( baseDNToClear ) ; while ( domainsToClear . contains ( baseDNToClear ) && ! State . TERMINATED . equals ( getState ( ) ) ) { synchronized ( this ) { notify ( ) ; } Thread . yield ( ) ; } }
38439	public synchronized void flush ( ) throws IOException { if ( sink != _NULL ) { if ( sink . closedByReader || closed ) { throw new IOException ( _CHAR Pipe closed _CHAR ) ; } synchronized ( sink ) { sink . notifyAll ( ) ; } } }
38533	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
38539	boolean customSetUIProperty ( String propertyName , Object value ) { if ( propertyName == _CHAR echoChar _CHAR ) { if ( ! echoCharSet ) { setEchoChar ( ( Character ) value ) ; echoCharSet = _BOOL ; } return _BOOL ; } return _BOOL ; }
38673	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } committed = _BOOL ; }
38677	final void nextStream ( ) throws IOException { if ( in != _NULL ) { in . close ( ) ; } if ( e . hasMoreElements ( ) ) { in = ( InputStream ) e . nextElement ( ) ; if ( in == _NULL ) throw new NullPointerException ( ) ; } else in = _NULL ; }
38787	public DTMAxisIterator cloneIterator ( ) { try { final DTMAxisIteratorBase clone = ( DTMAxisIteratorBase ) super . clone ( ) ; clone . _isRestartable = _BOOL ; return clone ; } catch ( CloneNotSupportedException e ) { throw new org . apache . xml . utils . WrappedRuntimeException ( e ) ; } }
38788	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
38790	@ Override public void addSecurityReference ( String name , String link ) { referencesLock . writeLock ( ) . lock ( ) ; try { references . put ( name , link ) ; } finally { referencesLock . writeLock ( ) . unlock ( ) ; } fireContainerEvent ( _CHAR addSecurityReference _CHAR , name ) ; }
38799	public synchronized long skip ( long n ) { if ( n < _NUM ) { return _NUM ; } if ( n > count - pos ) { n = count - pos ; } pos += n ; return n ; }
38809	public Kue process ( String type , int n , Handler < Job > handler ) { if ( n <= _NUM ) { throw new IllegalStateException ( _CHAR The process times must be positive _CHAR ) ; } while ( n -- > _NUM ) { processInternal ( type , handler , _BOOL ) ; } setupTimers ( ) ; return this ; }
38819	public Object clone ( ) { MimeType newObj = _NULL ; try { newObj = ( MimeType ) super . clone ( ) ; } catch ( CloneNotSupportedException cannotHappen ) { } newObj . parameters = ( MimeTypeParameterList ) parameters . clone ( ) ; return newObj ; }
38830	public static Process executeFile ( final String fileName ) { try { final String command = _CHAR cmd / c \ _CHAR _CHAR + fileName + _CHAR \ _CHAR _CHAR ; logger . info ( command ) ; return Runtime . getRuntime ( ) . exec ( command ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
38831	private void parseTrailerHeaders ( ) throws IOException { try { this . footers = AbstractMessageParser . parseHeaders ( in , - _NUM , - _NUM , _NULL ) ; } catch ( HttpException e ) { IOException ioe = new MalformedChunkCodingException ( _CHAR Invalid footer : _CHAR + e . getMessage ( ) ) ; ExceptionUtils . initCause ( ioe , e ) ; throw ioe ; } }
38845	public static synchronized void unsuppress ( ) { if ( token != _NULL ) { System . setOut ( token . out ) ; System . setErr ( token . err ) ; token = _NULL ; } else { throw new IllegalStateException ( _CHAR Standard streams not currently suppressed _CHAR ) ; } }
38859	public static String toString ( final ChangeRecord change ) { final StringWriter writer = new StringWriter ( _NUM ) ; try ( LDIFChangeRecordWriter ldifWriter = new LDIFChangeRecordWriter ( writer ) ) { ldifWriter . setAddUserFriendlyComments ( _BOOL ) . writeChangeRecord ( change ) ; } catch ( final IOException e ) { throw new IllegalStateException ( e ) ; } return writer . toString ( ) ; }
38892	protected void fireValueChanged ( boolean isAdjusting ) { if ( lastChangedIndex == MIN ) { return ; } int oldFirstChangedIndex = firstChangedIndex ; int oldLastChangedIndex = lastChangedIndex ; firstChangedIndex = MAX ; lastChangedIndex = MIN ; fireValueChanged ( oldFirstChangedIndex , oldLastChangedIndex , isAdjusting ) ; }
38898	public void removeAttributes ( AttributeSet attrs ) { StyleContext context = StyleContext . this ; if ( attrs == this ) { attributes = context . getEmptySet ( ) ; } else { attributes = context . removeAttributes ( attributes , attrs ) ; } fireStateChanged ( ) ; }
38899	@ Override public int read ( ) throws IOException { if ( closed ) { return - _NUM ; } byte [ ] b = new byte [ _NUM ] ; if ( read ( b , _NUM , _NUM ) == _NUM ) { throw new IOException ( ) ; } return b [ _NUM ] ; }
38976	public void clearAccessibleSelection ( ) { int i = getSelectionModel ( ) . getSelectedIndex ( ) ; if ( i >= _NUM && i < getMenuCount ( ) ) { JMenu menu = getMenu ( i ) ; if ( menu != _NULL ) { MenuSelectionManager . defaultManager ( ) . setSelectedPath ( _NULL ) ; } } getSelectionModel ( ) . setSelectedIndex ( - _NUM ) ; }
38991	@ Override public boolean isSecure ( ) { boolean secure = _BOOL ; if ( tlsActiveProvider != _NULL ) { secure = tlsActiveProvider . isSecure ( ) ; } if ( ! secure && saslActiveProvider != _NULL ) { secure = saslActiveProvider . isSecure ( ) ; } return secure ; }
39006	protected boolean isDefaultLoader ( Loader loader ) { if ( ! ( loader instanceof WebappLoader ) ) { return _BOOL ; } WebappLoader wloader = ( WebappLoader ) loader ; if ( ( wloader . getDelegate ( ) != _BOOL ) || ! wloader . getLoaderClass ( ) . equals ( _CHAR org . apache . catalina . loader . WebappClassLoader _CHAR ) ) { return _BOOL ; } return _BOOL ; }
39062	public StringBuilder encodeBody ( StringBuilder retval ) { if ( address . getAddressType ( ) == AddressImpl . ADDRESS_SPEC ) { retval . append ( LESS_THAN ) ; } address . encode ( retval ) ; if ( address . getAddressType ( ) == AddressImpl . ADDRESS_SPEC ) { retval . append ( GREATER_THAN ) ; } return retval ; }
39077	private void doSignalAll ( Node first ) { lastWaiter = firstWaiter = _NULL ; do { Node next = first . nextWaiter ; first . nextWaiter = _NULL ; transferForSignal ( first ) ; first = next ; } while ( first != _NULL ) ; }
39101	public void removeValue ( String name ) { if ( name == _NULL ) { throw new IllegalArgumentException ( _CHAR name == _NULL _CHAR ) ; } Object old = values . remove ( name ) ; if ( old instanceof SSLSessionBindingListener ) { SSLSessionBindingListener listener = ( SSLSessionBindingListener ) old ; listener . valueUnbound ( new SSLSessionBindingEvent ( this , name ) ) ; } }
39127	public final void run ( Runnable task ) throws ThreadPoolException { try { lock . lock ( ) ; taskList . add ( task ) ; hasTasks . signal ( ) ; } finally { lock . unlock ( ) ; } }
39135	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
39167	private void waitForAbandon ( long expectedCount ) throws Exception { long stopTime = System . currentTimeMillis ( ) + _NUM ; while ( System . currentTimeMillis ( ) < stopTime ) { if ( ldapStatistics . getOperationsAbandoned ( ) == expectedCount ) { return ; } Thread . sleep ( _NUM ) ; } throw new AssertionError ( _CHAR Expected abandon count of _CHAR + expectedCount + _CHAR but got _CHAR + ldapStatistics . getOperationsAbandoned ( ) ) ; }
39179	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
39283	public void interrupt ( ) { interrupt = _BOOL ; while ( ! done ) { try { readerThread . interrupt ( ) ; } catch ( Throwable t ) { } } }
39286	private static Attribute makeAttrFromServerProperty ( ServerProperty property , Object value ) { switch ( property ) { case INSTANCE_PUBLIC_KEY_CERTIFICATE : return _NULL ; case GROUPS : return new LinkedAttribute ( ServerProperty . GROUPS . getAttributeName ( ) , ( ( Collection < ? > ) value ) ) ; default : return new LinkedAttribute ( property . getAttributeName ( ) , value ) ; } }
39347	public static int toRealPosition ( int position , int count ) { position = position - _NUM ; if ( position < _NUM ) { position += count ; } else { position = position % count ; } return position ; }
39464	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
39529	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
39533	public void toChars ( ) { if ( ! charC . isNull ( ) ) { type = T_CHARS ; return ; } toString ( ) ; type = T_CHARS ; char cc [ ] = strValue . toCharArray ( ) ; charC . setChars ( cc , _NUM , cc . length ) ; }
39535	private final void nextToken ( ) { if ( m_queueMark < m_ops . getTokenQueueSize ( ) ) { m_token = ( String ) m_ops . m_tokenQueue . elementAt ( m_queueMark ++ ) ; m_tokenChar = m_token . charAt ( _NUM ) ; } else { m_token = _NULL ; m_tokenChar = _NUM ; } }
39771	public boolean hasCorrelation ( String linkQualifier ) { switch ( type ) { case correlationQuery : return correlationQueries . get ( linkQualifier ) != _NULL ; case correlationScript : return _BOOL ; default : return _BOOL ; } }
39773	@ Override public void write ( byte [ ] b ) { for ( OutputStream s : targetStreams ) { try { s . write ( b ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
39777	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
39845	protected boolean checkParam ( final String reqParam ) throws ConnectorException { if ( reqParam == _NULL || reqParam . equals ( _CHAR _CHAR ) ) { return _BOOL ; } if ( Pattern . compile ( Constants . INVALID_PATH_REGEX ) . matcher ( reqParam ) . find ( ) ) { this . errorCode = Constants . Errors . CKFINDER_CONNECTOR_ERROR_INVALID_NAME ; return _BOOL ; } return _BOOL ; }
39914	public void unsetCompression ( ) { if ( ! canWriteCompressed ( ) ) { throw new UnsupportedOperationException ( _CHAR Compression not supported _CHAR ) ; } if ( getCompressionMode ( ) != MODE_EXPLICIT ) { throw new IllegalStateException ( _CHAR Compression mode not MODE_EXPLICIT ! _CHAR ) ; } this . compressionType = _NULL ; this . compressionQuality = _NUM . _NUM ; }
39991	public boolean isRemoteLDAPServer ( int serverId ) { synchronized ( remoteDirectoryServers ) { for ( LightweightServerHandler server : remoteDirectoryServers . values ( ) ) { if ( serverId == server . getServerId ( ) ) { return _BOOL ; } } return _BOOL ; } }
40113	@ Override public void noAntennaContinue ( ) { Log . d ( TAG , _CHAR noAntennaContinue . onClick ok to continue '' ) ; if ( isAntennaAvailable ( ) ) { powerUpFm ( ) ; } else { Log . d ( TAG , _CHAR noAntennaContinue . earphone is not ready _CHAR ) ; mService . switchAntennaAsync ( _NUM ) ; } }
40128	public HttpEngine recover ( RouteException e ) { if ( ! streamAllocation . recover ( e ) ) { return _NULL ; } if ( ! client . getRetryOnConnectionFailure ( ) ) { return _NULL ; } StreamAllocation streamAllocation = close ( ) ; return new HttpEngine ( client , userRequest , bufferRequestBody , callerWritesRequestBody , forWebSocket , streamAllocation , ( RetryableSink ) requestBodyOut , priorResponse ) ; }
40211	private void writeLargeDataToFile ( File file , int size ) throws FileNotFoundException , IOException { FileOutputStream fos = new FileOutputStream ( file ) ; byte [ ] buf = new byte [ size ] ; try { fos . write ( buf ) ; } finally { fos . close ( ) ; } }
40224	public boolean has_no_active_member ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR has_no_active_member _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . has_no_active_member ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
40252	protected static Vector convertToVector ( Object [ ] anArray ) { if ( anArray == _NULL ) { return _NULL ; } Vector < Object > v = new Vector < Object > ( anArray . length ) ; for ( Object o : anArray ) { v . addElement ( o ) ; } return v ; }
40273	protected static Vector convertToVector ( final Object [ ] anArray ) { if ( anArray == _NULL ) { return _NULL ; } final Vector v = new Vector ( anArray . length ) ; for ( final Object element : anArray ) { v . addElement ( element ) ; } return v ; }
40276	public static Object unifyReferences ( final Hashtable hash , Object object ) { final Object itemAtHash = hash . get ( object . hashCode ( ) ) ; if ( itemAtHash == _NULL ) { hash . put ( object . hashCode ( ) , object ) ; } else { object = itemAtHash ; } return object ; }
40332	private ReconTypeHandler createReconTypeHandler ( ReconciliationService . ReconAction reconAction ) throws BadRequestException { switch ( reconAction ) { case recon : return new ReconTypeByQuery ( this ) ; case reconById : return new ReconTypeById ( this ) ; default : throw new BadRequestException ( _CHAR Unknown action _CHAR + reconAction . toString ( ) ) ; } }
40461	@ Override protected void finalize ( ) throws Throwable { try { connection . close ( ) ; } catch ( final Exception ignored ) { } if ( logicalConnection != _NULL && ! logicalConnection . isClosed ( ) ) { throw new SQLException ( _CHAR PooledConnection was gc _CHAR_CHAR_CHAR_CHAR ) ; } }
40501	public boolean delete ( String name ) { String lcName = name . toLowerCase ( ) ; if ( this . nameValueMap . containsKey ( lcName ) ) { this . nameValueMap . remove ( lcName ) ; return _BOOL ; } else { return _BOOL ; } }
40552	void reRegisterRemotePolicyListener ( SSOToken appToken ) throws PolicyException { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR PolicyEvaluator . reRegisterRemotePolicyListener ( ) : _CHAR + _CHAR entering _CHAR ) ; } resourceResultCache . addRemotePolicyListener ( appSSOToken , serviceName , policyProperties . getNotificationURL ( ) , _BOOL ) ; resourceResultCache . clearCachedDecisionsForService ( serviceName ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR PolicyEvaluator . reRegisterRemotePolicyListener ( ) : _CHAR + _CHAR returning _CHAR ) ; } }
40553	protected void parseParameter ( AuthenticationHeader header ) throws ParseException { if ( debug ) dbg_enter ( _CHAR parseParameter _CHAR ) ; try { NameValue nv = this . nameValue ( _CHAR ) ; header . setParameter ( nv ) ; } finally { if ( debug ) dbg_leave ( _CHAR parseParameter _CHAR ) ; } }
40588	public static PasswordType checkPasswordType ( AttributeType attrType ) { final String syntaxOID = attrType . getSyntax ( ) . getOID ( ) ; if ( syntaxOID . equals ( SYNTAX_AUTH_PASSWORD_OID ) ) { return PasswordType . AUTH_PASSWORD ; } else if ( attrType . hasName ( _CHAR userPassword _CHAR ) || syntaxOID . equals ( SYNTAX_USER_PASSWORD_OID ) ) { return PasswordType . USER_PASSWORD ; } return PasswordType . NOT_A_PASSWORD ; }
40659	private static int checkTypeArgument ( final String signature , int pos ) { char c = getChar ( signature , pos ) ; if ( c == _CHAR ) { return pos + _NUM ; } else if ( c == _CHAR || c == _CHAR ) { pos ++ ; } return checkFieldTypeSignature ( signature , pos ) ; }
40702	public static byte [ ] decode ( String data ) { ByteArrayOutputStream bOut = new ByteArrayOutputStream ( ) ; try { encoder . decode ( data , bOut ) ; } catch ( Exception e ) { throw new DecoderException ( _CHAR exception decoding Hex string : _CHAR + e . getMessage ( ) , e ) ; } return bOut . toByteArray ( ) ; }
40732	public void installUI ( JComponent c ) { this . spinner = ( JSpinner ) c ; installDefaults ( ) ; installListeners ( ) ; maybeAdd ( createNextButton ( ) , _CHAR Next _CHAR ) ; maybeAdd ( createPreviousButton ( ) , _CHAR Previous _CHAR ) ; maybeAdd ( createEditor ( ) , _CHAR Editor _CHAR ) ; updateEnabledState ( ) ; installKeyboardActions ( ) ; }
40765	public boolean containsProvider ( String providerID ) { EntityDescriptorElement ed = _NULL ; try { ed = metaManager . getEntityDescriptor ( _CHAR / _CHAR , providerID ) ; } catch ( SAML2MetaException smex ) { SAML2Utils . debug . error ( _CHAR SAML2ProviderManager . containsProvider : _CHAR , smex ) ; } return ( ed != _NULL ) ; }
40769	public void init ( boolean forEncryption , CipherParameters param ) { if ( param instanceof ParametersWithRandom ) { ParametersWithRandom rParam = ( ParametersWithRandom ) param ; key = ( RSAKeyParameters ) rParam . getParameters ( ) ; } else { key = ( RSAKeyParameters ) param ; } this . forEncryption = forEncryption ; }
40778	@ Override public void reset ( ) throws IOException { synchronized ( lock ) { if ( isOpen ( ) ) { pos = markpos != - _NUM ? markpos : _NUM ; } else { throw new IOException ( _CHAR StringReader is closed _CHAR ) ; } } }
40937	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
40962	@ Override public int read ( ) throws IOException { if ( eof ) { throw new IOException ( _CHAR Read after end of file _CHAR ) ; } if ( position == size ) { return doEndOfFile ( ) ; } position ++ ; return processByte ( ) ; }
41018	public void updateWriteTime ( long time ) { if ( time > _NUM && time < writeTimeMin ) { writeTimeMin = time ; } if ( time > writeTimeMax ) { writeTimeMax = time ; } writeCumulativeCount += time ; writeTimeAverage = writeCumulativeCount / totalWrites ; }
41052	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; if ( ! AMSetupServlet . isCurrentConfigurationValid ( ) ) { return ; } if ( WebtopNaming . configMonitoring ( ) == _NUM ) { ConfigMonitoring cm = new ConfigMonitoring ( ) ; cm . configureMonitoring ( ) ; } }
41155	private void doSignalAll ( Node first ) { lastWaiter = firstWaiter = _NULL ; do { Node next = first . nextWaiter ; first . nextWaiter = _NULL ; transferForSignal ( first ) ; first = next ; } while ( first != _NULL ) ; }
41199	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
41210	public Info createInfo ( String value ) { InformationField infoImpl = new InformationField ( ) ; try { infoImpl . setValue ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return infoImpl ; }
41237	public void loadState ( ) { SearchResultEntry stateEntry = searchBaseEntry ( ) ; if ( stateEntry == _NULL ) { stateEntry = searchConfigEntry ( ) ; } if ( stateEntry != _NULL ) { updateStateFromEntry ( stateEntry ) ; } checkAndUpdateServerState ( ) ; }
41238	public ElemTemplateElement appendChildElem ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; switch ( type ) { case Constants . ELEMNAME_ATTRIBUTE : break ; default : error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; } return super . appendChild ( newChild ) ; }
41290	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
41298	private void doSignalAll ( Node first ) { lastWaiter = firstWaiter = _NULL ; do { Node next = first . nextWaiter ; first . nextWaiter = _NULL ; transferForSignal ( first ) ; first = next ; } while ( first != _NULL ) ; }
41304	public void check ( final int api ) { if ( api == Opcodes . ASM4 ) { if ( visibleTypeAnnotations != _NULL && visibleTypeAnnotations . size ( ) > _NUM ) { throw new RuntimeException ( ) ; } if ( invisibleTypeAnnotations != _NULL && invisibleTypeAnnotations . size ( ) > _NUM ) { throw new RuntimeException ( ) ; } } }
41354	private boolean isCurrentDevice ( RouteInfo info ) { if ( mCastDevice == _NULL ) { return _BOOL ; } CastDevice device = CastDevice . getFromBundle ( info . getExtras ( ) ) ; if ( ! device . getDeviceId ( ) . equals ( mCastDevice . getDeviceId ( ) ) ) { return _BOOL ; } return _BOOL ; }
41359	public static void resetEnv ( ) { if ( lmgr != _NULL ) { if ( oldcclass != _NULL ) { System . setProperty ( _CHAR java . util . logging . config . class _CHAR , oldcclass ) ; } if ( oldcfile != _NULL ) { System . setProperty ( _CHAR java . util . logging . config . file _CHAR , oldcfile ) ; } } }
41414	protected void createTabModel ( ) { if ( tabModel == _NULL ) { String realmName = ( String ) getPageSessionAttribute ( AMAdminConstants . CURRENT_PROFILE ) ; if ( realmName != _NULL ) { AMViewConfig amconfig = AMViewConfig . getInstance ( ) ; tabModel = amconfig . getTabsModel ( realmName , getRequestContext ( ) . getRequest ( ) ) ; registerChild ( TAB_COMMON , CCTabs . class ) ; } } }
41431	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException e ) { PrivilegeManager . debug . error ( _CHAR EntitlementSubjectImpl . toString _CHAR , e ) ; } return s ; }
41469	public void run ( ) throws ClientException { headerDisplayed = _BOOL ; runStartNowOrSchedule ( ) ; runCompletionNotification ( ) ; runErrorNotification ( ) ; runDependency ( ) ; if ( ! uData . getDependencyIds ( ) . isEmpty ( ) ) { runFailedDependencyAction ( ) ; } }
41483	public void close ( ) { flush ( ) ; writeln ( _CHAR < / java > _CHAR ) ; try { out . close ( ) ; } catch ( IOException e ) { getExceptionListener ( ) . exceptionThrown ( e ) ; } }
41523	private void interruptWorkers ( ) { final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { for ( Worker w : workers ) w . interruptIfStarted ( ) ; } finally { mainLock . unlock ( ) ; } }
41602	public static boolean containsModifiableVariableModification ( ProtocolMessage object ) { for ( ModifiableVariableHolder holder : object . getAllModifiableVariableHolders ( ) ) { for ( Field f : holder . getAllModifiableVariableFields ( ) ) { if ( containsModifiableVariableModification ( holder , f ) ) { return _BOOL ; } } } return _BOOL ; }
41674	public boolean remove ( HttpConnection connection ) { TimeValues times = connectionToTimes . remove ( connection ) ; if ( times == _NULL ) { log . warn ( _CHAR Removing a connection that never existed ! _CHAR ) ; return _BOOL ; } else { return System . currentTimeMillis ( ) <= times . timeExpires ; } }
41679	public Object next ( ) { if ( hasNext ( ) ) { XMPPropertyInfo result = returnProperty ; returnProperty = _NULL ; return result ; } else { throw new NoSuchElementException ( _CHAR There are no more nodes to return _CHAR ) ; } }
41681	public org . omg . CORBA . TCKind discriminator_kind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR discriminator_kind _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . discriminator_kind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
41690	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
41707	void refresh ( SMSEntry e ) { if ( e . attrSet != _NULL ) { attrSet = SMSUtils . copyAttributes ( e . attrSet ) ; } else { attrSet = _NULL ; } newEntry = e . newEntry ; modSet = _NULL ; }
41807	public boolean isStatic ( ) { if ( innerClasses == _NULL ) { return _BOOL ; } else { int flags = innerClasses . getFlagsFor ( getInternalName ( ) ) ; if ( flags >= _NUM ) return java . lang . reflect . Modifier . isStatic ( flags ) ; else return _BOOL ; } }
41945	public boolean isHidden ( ) { SecurityManager security = System . getSecurityManager ( ) ; if ( security != _NULL ) { security . checkRead ( path ) ; } if ( isInvalid ( ) ) { return _BOOL ; } return ( ( fs . getBooleanAttributes ( this ) & FileSystem . BA_HIDDEN ) != _NUM ) ; }
41963	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
41967	@ Override public synchronized void invalidate ( String key , boolean fullExpire ) { Entry entry = get ( key ) ; if ( entry != _NULL ) { entry . softTtl = _NUM ; if ( fullExpire ) { entry . ttl = _NUM ; } put ( key , entry ) ; } }
42144	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
42172	private boolean isSilentStart ( String value ) { boolean result = _BOOL ; for ( int i = _NUM ; i < SILENT_START . length ; i ++ ) { if ( value . startsWith ( SILENT_START [ i ] ) ) { result = _BOOL ; break ; } } return result ; }
42211	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public Object clone ( ) { try { HashSet < E > newSet = ( HashSet < E > ) super . clone ( ) ; newSet . map = ( HashMap < E , Object > ) map . clone ( ) ; return newSet ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
42229	public static boolean isClassLoaderBound ( ) { ClassLoader cl = Thread . currentThread ( ) . getContextClassLoader ( ) ; do { if ( clBindings . containsKey ( cl ) ) { return _BOOL ; } } while ( ( cl = cl . getParent ( ) ) != _NULL ) ; return _BOOL ; }
42299	public Object [ ] toArray ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return q . toArray ( ) ; } finally { lock . unlock ( ) ; } }
42334	public ArrayDeque < E > clone ( ) { try { @ SuppressWarnings ( _CHAR unchecked _CHAR ) ArrayDeque < E > result = ( ArrayDeque < E > ) super . clone ( ) ; result . elements = Arrays . copyOf ( elements , elements . length ) ; return result ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( ) ; } }
42353	public void clear ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { q . clear ( ) ; } finally { lock . unlock ( ) ; } }
42394	public boolean argumentsPresent ( ) { if ( argList != _NULL ) { for ( Argument arg : argList ) { if ( arg . isPresent ( ) ) { return _BOOL ; } } } return _BOOL ; }
42498	public void addListener ( final TimeoutEventListener listener ) { final long timeout = listener . getTimeout ( ) ; if ( timeout > _NUM ) { listeners . add ( listener ) ; synchronized ( stateLock ) { pendingListenerMinDelay = Math . min ( pendingListenerMinDelay , timeout ) ; stateLock . notifyAll ( ) ; } } }
42543	public static List doResourceIPEnvAuth ( String resourceUrl , String realm , Map envParameters ) throws PolicyException { ActionDecision decision = _NULL ; if ( resourceUrl != _NULL ) { decision = getActionDecision ( resourceUrl , envParameters ) ; return getPolicyAdvice ( decision , realm ) ; } else { return Collections . EMPTY_LIST ; } }
42575	protected static Vector convertToVector ( Object [ ] [ ] anArray ) { if ( anArray == _NULL ) { return _NULL ; } Vector < Vector > v = new Vector < Vector > ( anArray . length ) ; for ( Object [ ] o : anArray ) { v . addElement ( convertToVector ( o ) ) ; } return v ; }
42594	protected boolean isOpenShiftMode ( ) { MavenProject project = getProject ( ) ; if ( project != _NULL ) { Properties properties = project . getProperties ( ) ; if ( properties != _NULL ) { return PlatformMode . isOpenShiftMode ( properties ) ; } } return _BOOL ; }
42667	public static byte [ ] decodeDataElement ( Element dataE ) { if ( dataE == _NULL ) { return _NULL ; } String value = XMLUtils . getElementValue ( dataE ) ; if ( value == _NULL ) { return _NULL ; } return Base64 . decode ( value ) ; }
42718	private void _stop ( JComponent c ) { if ( component == c ) { if ( timer != _NULL ) { timer . stop ( ) ; } timer = _NULL ; event = _NULL ; component = _NULL ; } }
42740	public void addLayoutComponent ( Component comp , Object constraints ) { synchronized ( comp . getTreeLock ( ) ) { if ( ( constraints == _NULL ) || ( constraints instanceof String ) ) { addLayoutComponent ( ( String ) constraints , comp ) ; } else { throw new IllegalArgumentException ( _CHAR can not add to layout : constraint must be a string ( or _NULL ) _CHAR ) ; } } }
42780	public synchronized void logout ( ) throws XmlRpcFault { try { invoke ( _CHAR LogOut _CHAR , token ) ; } catch ( XmlRpcFault e ) { } finally { token = _NULL ; } }
42783	private void assertTokenClientExists ( AccessToken accessToken , OAuth2Request request ) throws InvalidTokenException { String clientId = accessToken . getClientId ( ) ; try { clientRegistrationStore . get ( clientId , request ) ; } catch ( InvalidClientException | NotFoundException e ) { logger . error ( _CHAR The client identified by the id : _CHAR + clientId + _CHAR does not exist _CHAR ) ; throw new InvalidTokenException ( ) ; } }
42815	@ Override public void removeMapping ( String mapping ) { mappingsLock . writeLock ( ) . lock ( ) ; try { mappings . remove ( mapping ) ; } finally { mappingsLock . writeLock ( ) . unlock ( ) ; } if ( parent . getState ( ) . equals ( LifecycleState . STARTED ) ) fireContainerEvent ( REMOVE_MAPPING_EVENT , mapping ) ; }
42826	public String extract ( HttpServletRequest request , String cookieName ) { if ( request . getCookies ( ) != _NULL ) { for ( final Cookie cookie : request . getCookies ( ) ) { if ( cookie . getName ( ) . equals ( cookieName ) ) { return cookie . getValue ( ) ; } } } return _NULL ; }
42833	@ Override public boolean equals ( Object obj ) { if ( obj == this ) { return _BOOL ; } if ( ! ( obj instanceof SecretKeySpec ) ) { return _BOOL ; } SecretKeySpec ks = ( SecretKeySpec ) obj ; return ( algorithm . equalsIgnoreCase ( ks . algorithm ) ) && ( Arrays . equals ( key , ks . key ) ) ; }
42943	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
42947	private void postProcessOnFail ( ) { if ( ! internalAuthError && ! processDone ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR postProcessOnFail _CHAR ) ; } authContext . getLoginState ( ) . postProcess ( indexType , indexName , LoginState . PostProcessEvent . FAILURE ) ; authContext . getLoginState ( ) . setFailureLoginURL ( indexType , indexName ) ; processDone = _BOOL ; } }
42997	private static DeleteRequestProtocolOp readDeleteRequest ( ASN1Reader reader ) throws LDAPException { try { return new DeleteRequestProtocolOp ( reader . readOctetString ( ) ) ; } catch ( Exception e ) { logger . traceException ( e ) ; LocalizableMessage message = ERR_LDAP_DELETE_REQUEST_DECODE_DN . get ( e ) ; throw new LDAPException ( PROTOCOL_ERROR , message , e ) ; } }
43030	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
43111	@ Override public void addInitParameter ( String name , String value ) { parametersLock . writeLock ( ) . lock ( ) ; try { parameters . put ( name , value ) ; } finally { parametersLock . writeLock ( ) . unlock ( ) ; } fireContainerEvent ( _CHAR addInitParameter _CHAR , name ) ; }
43185	public void append ( final CommandBuilder builder ) { for ( final Argument arg : builder . args ) { if ( builder . isObfuscated ( arg ) ) { addObfuscatedArgument ( arg ) ; } else { addArgument ( arg ) ; } } }
43186	public void remove ( AbstractButton b ) { if ( b == _NULL ) { return ; } buttons . removeElement ( b ) ; if ( b . getModel ( ) == selection ) { selection = _NULL ; } b . getModel ( ) . setGroup ( _NULL ) ; }
43280	public void reset ( ) { if ( text != _NULL ) { text . reset ( ) ; NormalizerBase . Mode mode = CollatorUtilities . toNormalizerMode ( owner . getDecomposition ( ) ) ; text . setMode ( mode ) ; } buffer = _NULL ; expIndex = _NUM ; swapOrder = _NUM ; }
43315	public static boolean isExtension ( String filename , String extension ) { if ( filename == _NULL ) { return _BOOL ; } if ( extension == _NULL || extension . length ( ) == _NUM ) { return indexOfExtension ( filename ) == - _NUM ; } String fileExt = getExtension ( filename ) ; return fileExt . equals ( extension ) ; }
43376	public synchronized void abandon ( ConversationAbandonedEvent details ) { if ( ! abandoned ) { abandoned = _BOOL ; currentPrompt = _NULL ; context . getForWhom ( ) . abandonConversation ( this ) ; for ( ConversationAbandonedListener listener : abandonedListeners ) { listener . conversationAbandoned ( details ) ; } } }
43412	public int autoroute_pass ( int p_pass_no ) { try { return autoroute_pass_try ( p_pass_no ) ; } catch ( Exception exc ) { hdlg . userPrintln ( classname + _CHAR autoroute_pass _CHAR , exc ) ; air_line = _NULL ; return _NUM ; } }
43438	@ Override public void close ( ) { for ( OutputStream s : targetStreams ) { try { s . close ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
43450	public void close ( ) throws IOException { guard . close ( ) ; synchronized ( this ) { if ( channel != _NULL && channel . isOpen ( ) ) { channel . close ( ) ; channel = _NULL ; } IoUtils . close ( fd ) ; } }
43457	public void internalEntityDecl ( String name , String value ) throws SAXException { if ( m_inExternalDTD ) return ; try { DTDprolog ( ) ; outputEntityDecl ( name , value ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
43496	private void updateUiWidgets ( ) { if ( addressRequested ) { progressBar . setVisibility ( ProgressBar . VISIBLE ) ; fetchAddressButton . setEnabled ( _BOOL ) ; } else { progressBar . setVisibility ( ProgressBar . GONE ) ; fetchAddressButton . setEnabled ( _BOOL ) ; } }
43600	public void addAttribute ( Attribute attribute , Object value ) { if ( attribute == _NULL ) { throw new NullPointerException ( ) ; } int len = length ( ) ; if ( len == _NUM ) { throw new IllegalArgumentException ( _CHAR Ca n _CHAR_CHAR ) ; } addAttributeImpl ( attribute , value , 0 , len ) ; }
43630	public Object clone ( ) { SearchTemplate t = ( SearchTemplate ) super . clone ( ) ; if ( m_attrSet != _NULL ) { t . setAttributeSet ( ( AttrSet ) m_attrSet . clone ( ) ) ; } if ( m_searchFilter != _NULL ) { t . setSearchFilter ( m_searchFilter ) ; } return t ; }
43837	public boolean canTraverseOutsideSubtree ( ) { if ( _NULL != m_parts ) { int n = m_parts . size ( ) ; for ( int i = _NUM ; i < n ; i ++ ) { AVTPart part = ( AVTPart ) m_parts . elementAt ( i ) ; if ( part . canTraverseOutsideSubtree ( ) ) return _BOOL ; } } return _BOOL ; }
43878	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
43919	@ Override public int hashCode ( ) { int result = version + rounds + wordSize ; if ( iv == _NULL ) { return result ; } for ( byte element : iv ) { result += element & _NUM ; } return result ; }
43920	void refreshFinish ( String instanceId ) { if ( ! isDomThread ( ) ) { throw new WXRuntimeException ( _CHAR RefreshFinish operation must be done in dom thread _CHAR ) ; } WXDomStatement statement = mDomRegistries . get ( instanceId ) ; if ( statement == _NULL ) { return ; } statement . refreshFinish ( ) ; }
43951	public boolean equals ( TextLayout rhs ) { if ( rhs == _NULL ) { return _BOOL ; } if ( rhs == this ) { return _BOOL ; } ensureCache ( ) ; return textLine . equals ( rhs . textLine ) ; }
43956	public static SubjectType fromString ( String type ) { if ( type != _NULL ) { for ( SubjectType subjectType : SubjectType . values ( ) ) { if ( type . equalsIgnoreCase ( subjectType . type ) ) { return subjectType ; } } } return _NULL ; }
43965	protected void init ( ) { Digester contextDigester = createContextDigester ( ) ; contextDigester . getParser ( ) ; if ( log . isDebugEnabled ( ) ) { log . debug ( sm . getString ( _CHAR contextConfig . init _CHAR ) ) ; } context . setConfigured ( _BOOL ) ; ok = _BOOL ; contextConfig ( contextDigester ) ; }
44011	public int read ( ) throws IOException { int c = in . read ( ) ; if ( c >= _NUM ) monitor . setProgress ( ++ nread ) ; if ( monitor . isCanceled ( ) ) { InterruptedIOException exc = new InterruptedIOException ( _CHAR progress _CHAR ) ; exc . bytesTransferred = nread ; throw exc ; } return c ; }
44015	public static ModifyRequest newModifyRequest ( final String ... ldifLines ) { final ChangeRecord record = LDIFChangeRecordReader . valueOfLDIFChangeRecord ( ldifLines ) ; if ( record instanceof ModifyRequest ) { return ( ModifyRequest ) record ; } else { final LocalizableMessage message = WARN_READ_LDIF_RECORD_CHANGE_RECORD_WRONG_TYPE . get ( _CHAR modify _CHAR ) ; throw new LocalizedIllegalArgumentException ( message ) ; } }
44036	private void registerPlugin ( DirectoryServerPlugin < ? extends PluginCfg > plugin , DN pluginEntryDN , Set < PluginType > pluginTypes ) { pluginLock . lock ( ) ; try { registeredPlugins . put ( pluginEntryDN , plugin ) ; registerPlugin0 ( plugin , pluginTypes ) ; } finally { pluginLock . unlock ( ) ; } }
44122	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException e ) { PolicyConstants . DEBUG . error ( _CHAR StaticAttributes . toString _CHAR , e ) ; } return s ; }
44211	@ Override public int hashCode ( ) { int result = effectiveKeyBits ; if ( iv == _NULL ) { return result ; } for ( byte element : iv ) { result += element ; } return result ; }
44215	public static List < Foo > toModels ( FooSoap [ ] soapModels ) { if ( soapModels == _NULL ) { return _NULL ; } List < Foo > models = new ArrayList < Foo > ( soapModels . length ) ; for ( FooSoap soapModel : soapModels ) { models . add ( toModel ( soapModel ) ) ; } return models ; }
44373	public String toBASE64EncodedString ( ) throws FSMsgException { if ( ( responseID == _NULL ) || ( responseID . length ( ) == _NUM ) ) { responseID = FSUtils . generateID ( ) ; if ( responseID == _NULL ) { FSUtils . debug . error ( _CHAR FSNameRegistrationResponse . toBASE64EncodedString : _CHAR + _CHAR could n _CHAR_CHAR_CHAR_CHAR , null ) ; } } return Base64 . encode ( this . toXMLString ( ) . getBytes ( ) ) ; }
44374	public String valueToString ( Object value ) throws ParseException { if ( value == _NULL ) { return _CHAR _CHAR ; } Format f = getFormat ( ) ; if ( f == _NULL ) { return value . toString ( ) ; } return f . format ( value ) ; }
44381	private void determineSuperclasses ( ) { superclasses = new TIntHashSet ( _NUM ) ; Classfile clazz = this ; while ( clazz != _NULL ) { ClassInfo superInfo = clazz . getSuperclassInfo ( ) ; if ( superInfo != _NULL ) superclasses . add ( superInfo . getName ( ) . getID ( ) ) ; clazz = clazz . getSuperclass ( ) ; } superclasses . trimToSize ( ) ; }
44388	public void init ( String hostedProviderId ) throws FSAccountMgmtException { this . hostedProviderId = hostedProviderId ; try { datastoreProvider = DataStoreProviderManager . getInstance ( ) . getDataStoreProvider ( IFSConstants . IDFF ) ; } catch ( Exception de ) { FSUtils . debug . error ( _CHAR DefaultFSUserProvider . init : could n _CHAR_CHAR_CHAR_CHAR , de ) ; throw new FSAccountMgmtException ( de . getMessage ( ) ) ; } }
44547	@ Override public void write ( byte [ ] bts , int st , int end ) throws IOException { try { beforeWrite ( end ) ; out . write ( bts , st , end ) ; afterWrite ( end ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
44590	public void flush ( ) { LinkedList < Runnable > queue = new LinkedList < > ( ) ; synchronized ( mQueue ) { queue . addAll ( mQueue ) ; mQueue . clear ( ) ; } for ( Runnable r : queue ) { r . run ( ) ; } }
44688	private void appendHtml ( String msg ) { HTMLDocument doc = ( HTMLDocument ) logs . getDocument ( ) ; try { msg = filterForBugID4988885 ( msg ) ; doc . insertBeforeStart ( doc . getElement ( LASTID ) , msg ) ; } catch ( Throwable t ) { t . printStackTrace ( ) ; } }
44725	public boolean removeNameIdentifier ( ) { if ( _subjectConfirmation == _NULL ) { if ( SAMLUtilsCommon . debug . messageEnabled ( ) ) { SAMLUtilsCommon . debug . message ( _CHAR Subject : At least one of _CHAR + _CHAR NameIdentifier and SubjectConfirmation is mandatory _CHAR ) ; } return _BOOL ; } _nameIdentifier = _NULL ; return _BOOL ; }
44754	@ Override public boolean equals ( Object o ) { if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof Modification ) ) { return _BOOL ; } Modification m = ( Modification ) o ; return modificationType == m . modificationType && attribute . equals ( m . attribute ) ; }
44854	public Object clone ( ) throws CloneNotSupportedException { try { UnicastRemoteObject cloned = ( UnicastRemoteObject ) super . clone ( ) ; cloned . reexport ( ) ; return cloned ; } catch ( RemoteException e ) { throw new ServerCloneException ( _CHAR Clone failed _CHAR , e ) ; } }
44855	public boolean nextTile ( ) throws ModelControlException { boolean movedToRow = super . nextTile ( ) ; if ( movedToRow ) { curTile = getTileIndex ( ) ; setDisplayFieldValue ( TXT_PARENT_INDEX , parentIdx ) ; setDisplayFieldValue ( TXT_CHOICE , choices [ curTile ] ) ; setDisplayFieldValue ( TXT_INDEX , Integer . toString ( curTile ) ) ; } return movedToRow ; }
44899	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
44916	public Cursor fetch ( Long eventID ) { if ( eventID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_EVENTID + _CHAR = _CHAR + eventID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
44986	void onDragExit ( ) { if ( mDragging ) { mDragging = _BOOL ; } mDragCell [ _NUM ] = mDragCell [ _NUM ] =- _NUM ; mDragOutlineAnims [ mDragOutlineCurrent ] . animateOut ( ) ; mDragOutlineCurrent = ( mDragOutlineCurrent + _NUM ) % mDragOutlineAnims . length ; revertTempState ( ) ; setIsDragOverlapping ( _BOOL ) ; }
44996	private void writeLargeDataToFile ( File file , int size ) throws FileNotFoundException , IOException { FileOutputStream fos = new FileOutputStream ( file ) ; byte [ ] buf = new byte [ size ] ; try { fos . write ( buf ) ; } finally { fos . close ( ) ; } }
44998	public ByteVector putByteArray ( final byte [ ] b , final int off , final int len ) { if ( length + len > data . length ) { enlarge ( len ) ; } if ( b != _NULL ) { System . arraycopy ( b , off , data , length , len ) ; } length += len ; return this ; }
45001	@ Override public void removeInitParameter ( String name ) { parametersLock . writeLock ( ) . lock ( ) ; try { parameters . remove ( name ) ; } finally { parametersLock . writeLock ( ) . unlock ( ) ; } fireContainerEvent ( _CHAR removeInitParameter _CHAR , name ) ; }
45027	public static AVA valueOf ( final String ava , final Schema schema ) { final SubstringReader reader = new SubstringReader ( ava ) ; try { return decode ( reader , schema ) ; } catch ( final UnknownSchemaElementException e ) { final LocalizableMessage message = ERR_RDN_TYPE_NOT_FOUND . get ( ava , e . getMessageObject ( ) ) ; throw new LocalizedIllegalArgumentException ( message ) ; } }
45135	public void clear ( int maximumCapacity ) { if ( capacity <= maximumCapacity ) { clear ( ) ; return ; } zeroValue = _NULL ; hasZeroValue = _BOOL ; size = _NUM ; resize ( maximumCapacity ) ; }
45167	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
45180	void createImpl ( boolean stream ) throws SocketException { if ( impl == _NULL ) setImpl ( ) ; try { impl . create ( stream ) ; created = _BOOL ; } catch ( IOException e ) { throw new SocketException ( e . getMessage ( ) ) ; } }
45215	private int constrainOffset ( JTextComponent text , int offset ) { Document doc = text . getDocument ( ) ; if ( ( offset != _NUM ) && ( offset > doc . getLength ( ) ) ) { offset = doc . getLength ( ) ; } if ( offset < _NUM ) { offset = _NUM ; } return offset ; }
45253	@ Override protected boolean doAuthenticate ( Request request , HttpServletResponse response ) throws IOException { if ( checkForCachedAuthentication ( request , response , _BOOL ) ) { if ( cache ) { request . getSessionInternal ( _BOOL ) . setPrincipal ( request . getUserPrincipal ( ) ) ; } return _BOOL ; } if ( containerLog . isDebugEnabled ( ) ) containerLog . debug ( _CHAR User authenticated without any roles _CHAR ) ; return _BOOL ; }
45318	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
45348	private void safeSetFeature ( DocumentBuilderFactory factory , String feature , boolean flag ) { try { factory . setFeature ( feature , flag ) ; } catch ( ParserConfigurationException e ) { if ( logFeatureWarnings . compareAndSet ( _BOOL , _BOOL ) ) { Logger . getLogger ( PKG_NAME ) . log ( Level . SEVERE , _CHAR DocumentBuilderFactory unsupported feature _CHAR + feature ) ; } } }
45438	public boolean hasExpired ( ) { if ( maxAge == - _NUM ) { return _BOOL ; } boolean expired = _BOOL ; if ( maxAge <= _NUM ) { expired = _BOOL ; } return expired ; }
45563	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
45630	public boolean isMemoryAvailable ( long size ) { if ( allowOvercommit ) { return _BOOL ; } if ( acquireMemory ( size ) ) { releaseMemory ( size ) ; return _BOOL ; } return _BOOL ; }
45682	public ByteVector putByteArray ( final byte [ ] b , final int off , final int len ) { if ( length + len > data . length ) { enlarge ( len ) ; } if ( b != _NULL ) { System . arraycopy ( b , off , data , length , len ) ; } length += len ; return this ; }
45705	public void print ( File file ) throws IOException { checkExec ( ) ; SecurityManager sm = System . getSecurityManager ( ) ; if ( sm != _NULL ) { sm . checkPrintJobAccess ( ) ; } checkActionSupport ( Action . PRINT ) ; checkFileValidation ( file ) ; peer . print ( file ) ; }
45718	public void moveToFront ( ) { if ( isIcon ( ) ) { if ( getDesktopIcon ( ) . getParent ( ) instanceof JLayeredPane ) { ( ( JLayeredPane ) getDesktopIcon ( ) . getParent ( ) ) . moveToFront ( getDesktopIcon ( ) ) ; } } else if ( getParent ( ) instanceof JLayeredPane ) { ( ( JLayeredPane ) getParent ( ) ) . moveToFront ( this ) ; } }
45730	public String join ( String separator ) { StringBuilder sb = new StringBuilder ( ) ; boolean isFirst = _BOOL ; for ( Object e : this ) { if ( isFirst ) isFirst = _BOOL ; else sb . append ( separator ) ; sb . append ( e ) ; } return sb . toString ( ) ; }
45737	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
45744	public void clear ( ) { match = _CHAR _CHAR ; bodyTexts . clear ( ) ; params . clear ( ) ; publicId = _NULL ; stack . clear ( ) ; log = _NULL ; saxLog = _NULL ; configured = _BOOL ; }
45878	public static void notifyRestoreBeginning ( Backend < ? > backend , RestoreConfig config ) { for ( RestoreTaskListener listener : directoryServer . restoreTaskListeners ) { try { listener . processRestoreBegin ( backend , config ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
45898	private void signalNotEmpty ( ) { final ReentrantLock takeLock = this . takeLock ; takeLock . lock ( ) ; try { notEmpty . signal ( ) ; } finally { takeLock . unlock ( ) ; } }
45928	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
45994	private void tuneToStation ( final int station ) { refreshImageButton ( _BOOL ) ; refreshActionMenuItem ( _BOOL ) ; refreshPopupMenuItem ( _BOOL ) ; refreshActionMenuPower ( _BOOL ) ; mService . tuneStationAsync ( FmRadioUtils . computeFrequency ( station ) ) ; if ( ! mIsPlaying ) { startAnimation ( ) ; } }
46017	@ Override public synchronized void flush ( ) { if ( writer != _NULL ) { try { writer . flush ( ) ; } catch ( Exception ex ) { reportError ( _NULL , ex , ErrorManager . FLUSH_FAILURE ) ; } } }
46089	public static void notifyImportEnded ( Backend < ? > backend , LDIFImportConfig config , boolean successful ) { for ( ImportTaskListener listener : directoryServer . importTaskListeners ) { try { listener . processImportEnd ( backend , config , successful ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
46247	public synchronized void startGrabbing ( ) { if ( ( flags & DONEBITS ) != _NUM ) { return ; } if ( ! grabbing ) { grabbing = _BOOL ; flags & =~ ( ImageObserver . ABORT ) ; producer . startProduction ( this ) ; } }
46261	public Object clone ( ) { try { DateFormatSymbols other = ( DateFormatSymbols ) super . clone ( ) ; copyMembers ( this , other ) ; return other ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
46310	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
46351	private String createLicenseKey ( final String licenseKey ) { if ( validateLicenseKey ( licenseKey ) ) { StringBuilder sb = new StringBuilder ( ) ; for ( int i : LICENSE_CHARS ) { sb . append ( licenseKey . charAt ( i ) ) ; } return sb . toString ( ) ; } return _CHAR _CHAR ; }
46398	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
46444	private PluggablePublisher createPublisher ( ) { if ( PublisherType . DISRUPTOR . equals ( publisherType ) ) { logger . debug ( _CHAR Event type : _CHAR + stringifiedName + _CHAR publisher : DISRUPTOR _CHAR ) ; return DisruptorReferringPublisher . getInstance ( ) ; } else { logger . debug ( _CHAR Event type : _CHAR + stringifiedName + _CHAR publisher : BLOCKING _CHAR ) ; return BlockingPublisher . getInstance ( ) ; } }
46514	final void toString ( StringBuilder buffer ) { if ( this . perm != _NULL ) { this . perm . toString ( buffer ) ; } buffer . append ( _CHAR _CHAR ) ; if ( this . bindRule != _NULL ) { this . bindRule . toString ( buffer ) ; } buffer . append ( _CHAR ) _CHAR ) ; }
46515	public static OAuth2BearerWWWAuthenticateHeader valueOf ( final String string ) { if ( string != _NULL ) { try { return new OAuth2BearerWWWAuthenticateHeader ( OAuth2Error . valueOfWWWAuthenticateHeader ( string ) ) ; } catch ( final IllegalArgumentException e ) { } } return new OAuth2BearerWWWAuthenticateHeader ( ) ; }
46553	public void showNextButton ( boolean animate ) { if ( animate ) { mButtonStyle = STYLE_DONE ; toggle ( ) ; } else { mButtonStyle = STYLE_NEXT ; setImageDrawable ( mNextDrawable ) ; } }
46612	public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } if ( obj instanceof AttributeSet ) { AttributeSet attrs = ( AttributeSet ) obj ; return isEqual ( attrs ) ; } return _BOOL ; }
46639	public boolean equals ( Object obj ) { if ( obj == _NULL || ( ! ( obj instanceof Timestamp ) ) ) { return _BOOL ; } Timestamp that = ( Timestamp ) obj ; if ( this == that ) { return _BOOL ; } return ( timestamp . equals ( that . getTimestamp ( ) ) && signerCertPath . equals ( that . getSignerCertPath ( ) ) ) ; }
46725	public Object clone ( ) { try { OutputProperties cloned = ( OutputProperties ) super . clone ( ) ; cloned . m_properties = ( Properties ) cloned . m_properties . clone ( ) ; return cloned ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
46778	@ Override public String [ ] findInitParameters ( ) { parametersLock . readLock ( ) . lock ( ) ; try { String results [ ] = new String [ parameters . size ( ) ] ; return parameters . keySet ( ) . toArray ( results ) ; } finally { parametersLock . readLock ( ) . unlock ( ) ; } }
46798	@ Override public void write ( int idx ) throws IOException { try { beforeWrite ( _NUM ) ; out . write ( idx ) ; afterWrite ( _NUM ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
46820	public boolean isBroken ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return generation . broken ; } finally { lock . unlock ( ) ; } }
46871	private void encodeValue ( String str , StringBuilder buffer ) { if ( StaticUtils . needsBase64Encoding ( str ) ) { buffer . append ( _CHAR : _CHAR ) ; buffer . append ( Base64 . encode ( getBytes ( str ) ) ) ; } else { buffer . append ( _CHAR _CHAR ) ; buffer . append ( str ) ; } }
46889	public Cursor fetch ( Long attributeID ) { if ( attributeID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_EVENTATTRIBUTEID + _CHAR = _CHAR + attributeID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
46914	@ Override public void write ( int idx ) throws IOException { try { beforeWrite ( _NUM ) ; out . write ( idx ) ; afterWrite ( _NUM ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
46915	public String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _CHAR ( _CHAR ) ; sb . append ( _CHAR Signer : _CHAR + signerCertPath . getCertificates ( ) . get ( _NUM ) ) ; if ( timestamp != _NULL ) { sb . append ( _CHAR timestamp : _CHAR + timestamp ) ; } sb . append ( _CHAR ) _CHAR ) ; return sb . toString ( ) ; }
46969	public void maintain ( ) { Key key ; while ( ( key = ( Key ) queue . poll ( ) ) != _NULL ) { if ( key . isDead ( ) ) { continue ; } key . ackDeath ( ) ; map . remove ( key ) ; } }
47026	public void clearChoices ( ) { if ( mCheckedStates != _NULL ) { mCheckedStates . clear ( ) ; } if ( mCheckedIdStates != _NULL ) { mCheckedIdStates . clear ( ) ; } mCheckedCount = _NUM ; updateOnScreenCheckedViews ( ) ; }
47064	public void dispose ( ) { close_files ( ) ; gdi_context = _NULL ; coordinate_transform = _NULL ; itera_settings = _NULL ; interactive_state = _NULL ; ratsnest = _NULL ; clearance_violations = _NULL ; r_board = _NULL ; }
47090	protected void uninstallComponents ( ) { if ( arrowButton != _NULL ) { unconfigureArrowButton ( ) ; } if ( editor != _NULL ) { unconfigureEditor ( ) ; } comboBox . removeAll ( ) ; arrowButton = _NULL ; }
47111	public org . omg . CORBA . TypeCode type ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR type _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . type ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
47270	public void remove ( BrdItem p_item ) { if ( ! p_item . is_on_the_board ( ) ) return ; for ( AwtreeShapeSearch curr_tree : search_trees ) { AwtreeNodeLeaf [ ] curr_tree_entries = p_item . get_search_tree_entries ( curr_tree ) ; if ( curr_tree_entries == _NULL ) continue ; curr_tree . remove ( curr_tree_entries ) ; } p_item . clear_search_tree_entries ( ) ; p_item . set_on_the_board ( _BOOL ) ; }
47282	@ Override public FSResponse processSAMLRequest ( FSSAMLRequest samlRequest ) { FSUtils . debug . message ( _CHAR FSSSOBrowserArtifactProfileHandler . processSAMLRequest : Called _CHAR ) ; try { return createSAMLResponse ( samlRequest ) ; } catch ( Exception e ) { FSUtils . debug . error ( _CHAR FSSSOBrowserArtifactProfileHandler . '' + _CHAR processSAMLRequest : Fatal error , _CHAR + _CHAR can not create status or response : _CHAR , e ) ; return _NULL ; } }
47325	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
47375	public int compareTo ( Object o1 ) { QCharset q1 = ( QCharset ) o1 ; if ( qFactor < q1 . qFactor ) { return _NUM ; } if ( qFactor > q1 . qFactor ) { return - _NUM ; } return name . compareTo ( q1 . name ) ; }
47391	@ Override public void onRender ( ) { if ( error ) { addModel ( _CHAR error _CHAR , _BOOL ) ; } else { addModel ( _CHAR currentVersion _CHAR , VersionUtils . getCurrentVersion ( ) ) ; addModel ( _CHAR newVersion _CHAR , VersionUtils . getWarFileVersion ( ) ) ; addModel ( _CHAR changelist _CHAR , upgrade . generateShortUpgradeReport ( adminToken , _BOOL ) ) ; } }
47397	public void onActivityResult ( int requestCode , int resultCode , Intent data ) { switch ( requestCode ) { case RESOLVE_CONNECTION_REQUEST_CODE : case NO_RESOLUTION_REQUEST_CODE : if ( resultCode == Activity . RESULT_OK ) { connect ( ) ; } break ; } }
47491	public static ApplicationType fromString ( String type ) { if ( type != _NULL ) { for ( ApplicationType applicationType : ApplicationType . values ( ) ) { if ( type . equalsIgnoreCase ( applicationType . type ) ) { return applicationType ; } } } return _NULL ; }
47560	public void objectRenamed ( AMEvent event ) { if ( event == _NULL ) { debug . error ( _CHAR AMConfiguration . objectChanged , event _NULL _CHAR ) ; return ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR objectRenamed , type = _CHAR + event . getEventType ( ) + _CHAR , sDN = _CHAR + event . getSourceDN ( ) + _CHAR , sType = _CHAR + event . getSourceType ( ) ) ; } processSDKNotification ( ) ; }
47588	private static int checkFieldTypeSignature ( final String signature , int pos ) { switch ( getChar ( signature , pos ) ) { case _CHAR : return checkClassTypeSignature ( signature , pos ) ; case _CHAR : return checkTypeSignature ( signature , pos + _NUM ) ; default : return checkTypeVariableSignature ( signature , pos ) ; } }
47779	@ Override public void recycle ( ) { lock ( ) ; try { super . recycle ( ) ; deltaRequest . clear ( ) ; } finally { unlock ( ) ; } }
47784	public static boolean processOperationResult ( Operation op , OperationResult opResult ) { if ( ! opResult . continueProcessing ( ) ) { op . setResultCode ( opResult . getResultCode ( ) ) ; op . appendErrorMessage ( opResult . getErrorMessage ( ) ) ; op . setMatchedDN ( opResult . getMatchedDN ( ) ) ; op . setReferralURLs ( opResult . getReferralURLs ( ) ) ; return _BOOL ; } return _BOOL ; }
47814	static String parseCDATA ( Element elem ) { if ( elem == _NULL ) { return _NULL ; } Node text = elem . getFirstChild ( ) ; if ( text != _NULL ) { return text . getNodeValue ( ) ; } return _NULL ; }
47941	@ Override protected int decryptMore ( ) throws IOException { int n = input . read ( inBuffer ) ; if ( n <= _NUM ) { return n ; } streamOffset += n ; decrypt ( ) ; padding = postDecryption ( streamOffset ) ; return outBuffer . remaining ( ) ; }
47953	public boolean canCreateInternalClients ( ) { boolean allow = _BOOL ; Set vals = getServiceAttribute ( ENABLE_CLIENT_CREATION_ATTR ) ; if ( vals != _NULL ) { Iterator iter = vals . iterator ( ) ; Boolean perms = Boolean . valueOf ( ( String ) iter . next ( ) ) ; allow = perms . booleanValue ( ) ; } return allow ; }
47958	private boolean updateStateEntry ( ) { ResultCode result = runUpdateStateEntry ( baseDN ) ; if ( result == ResultCode . NO_SUCH_OBJECT ) { SearchResultEntry configEntry = searchConfigEntry ( ) ; if ( configEntry != _NULL ) { result = runUpdateStateEntry ( configEntry . getName ( ) ) ; } } return result == ResultCode . SUCCESS ; }
47979	private JsonValue createJsonMessage ( String key , Object message ) { JsonValue result = new JsonValue ( new LinkedHashMap < String , Object > ( _NUM ) ) ; try { result . put ( key , message ) ; return result ; } catch ( final Exception e ) { throw new JsonValueException ( result ) ; } }
48003	public void invokePostSynchronizationModifyDNPlugins ( PostSynchronizationModifyDNOperation modifyDNOperation ) { for ( DirectoryServerPlugin p : postSynchronizationModifyDNPlugins ) { try { p . doPostSynchronization ( modifyDNOperation ) ; } catch ( Exception e ) { logException ( modifyDNOperation , p , e , ERR_PLUGIN_POST_SYNCHRONIZATION_PLUGIN_EXCEPTION ) ; } } }
48030	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException joe ) { PolicyConstants . DEBUG . error ( _CHAR UserESubject . toString ( ) , JSONException : _CHAR , joe ) ; } return s ; }
48036	public static List convertJAXBToElement ( List jaxbObjs ) throws JAXBException { List result = new ArrayList ( ) ; if ( jaxbObjs != _NULL && ! jaxbObjs . isEmpty ( ) ) { Iterator iter = jaxbObjs . iterator ( ) ; while ( iter . hasNext ( ) ) { result . add ( convertJAXBToElement ( iter . next ( ) ) ) ; } } return result ; }
48078	public Element first ( ) { if ( root == _NULL ) { return _NULL ; } elementStack = new Stack < StackItem > ( ) ; if ( root . getElementCount ( ) != _NUM ) { elementStack . push ( new StackItem ( root ) ) ; } return root ; }
48084	public void stop ( ) { getLock ( ) . lock ( ) ; try { cancelEvent ( ) ; timerQueue ( ) . removeTimer ( this ) ; } finally { getLock ( ) . unlock ( ) ; } }
48090	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
48115	public Cursor fetch ( Long ruleFilterID ) { if ( ruleFilterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_RULEFILTERID + _CHAR = _CHAR + ruleFilterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
48147	private boolean cacheComplete ( ) { final boolean complete ; if ( m_cache != _NULL ) { complete = m_cache . isComplete ( ) ; } else { complete = _BOOL ; } return complete ; }
48194	private void updateSchemaOnline ( ) throws OpenDsException { for ( AttributeType attr : attrsToAdd ) { addAttributeOnline ( attr ) ; appendNewLinesToProgress ( ) ; } for ( ObjectClass oc : ocsToAdd ) { addObjectClassOnline ( oc ) ; appendNewLinesToProgress ( ) ; } }
48329	private static String javaCharset ( String charset ) { if ( charset == _NULL ) { return _NULL ; } String mappedCharset = MIME2JAVA . get ( charset . toLowerCase ( Locale . ENGLISH ) ) ; if ( mappedCharset == _NULL ) { return charset ; } return mappedCharset ; }
48359	protected void writeEndParagraph ( ) throws IOException { writeEndMask ( fontMask ) ; if ( inFontTag ( ) ) { endSpanTag ( ) ; } else { write ( NEWLINE ) ; } writeEndTag ( _CHAR < / p > _CHAR ) ; }
48377	public boolean putRemoteUpdate ( LDAPUpdateMsg update ) { pendingChangesWriteLock . lock ( ) ; try { CSN csn = update . getCSN ( ) ; return pendingChanges . put ( csn , new PendingChange ( csn , _NULL , update ) ) == _NULL ; } finally { pendingChangesWriteLock . unlock ( ) ; } }
48395	public int next ( ) { if ( _currentNode == _startNodeID || _currentNode == DTM . NULL ) { return NULL ; } else { final int node = _currentNode ; _currentNode = _nextsib ( node ) ; return returnNode ( makeNodeHandle ( node ) ) ; } }
48464	public static void main ( final String [ ] args ) { try { Utils . checkJavaVersion ( ) ; System . exit ( _NUM ) ; } catch ( final IncompatibleVersionException ive ) { System . out . println ( ive . getMessageObject ( ) ) ; System . exit ( JAVA_VERSION_INCOMPATIBLE ) ; } }
48522	public boolean removeSubjectConfirmation ( ) { if ( _nameIdentifier == _NULL ) { if ( SAMLUtilsCommon . debug . messageEnabled ( ) ) { SAMLUtilsCommon . debug . message ( _CHAR Subject : At least one of _CHAR + _CHAR NameIdentifier and SubjectConfirmation is mandatory _CHAR ) ; } return _BOOL ; } _subjectConfirmation = _NULL ; return _BOOL ; }
48545	private static boolean isSameReplicationServerUrl ( String rs1Url , String rs2Url ) { try { final HostPort hp1 = HostPort . valueOf ( rs1Url ) ; final HostPort hp2 = HostPort . valueOf ( rs2Url ) ; return hp1 . isEquivalentTo ( hp2 ) ; } catch ( RuntimeException ex ) { return _BOOL ; } }
48548	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
48580	public boolean containsKey ( Object key ) { Object [ ] k ; try { k = ( Object [ ] ) key ; } catch ( ClassCastException e ) { return _BOOL ; } return this . containsKey ( k ) ; }
48598	public int read ( ) throws IOException { while ( in != _NULL ) { int c = in . read ( ) ; if ( c != - _NUM ) { return c ; } nextStream ( ) ; } return - _NUM ; }
48603	public void clear ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { setArray ( new Object [ _NUM ] ) ; } finally { lock . unlock ( ) ; } }
48638	@ Override public void reset ( ) { if ( included ) { return ; } getCoyoteResponse ( ) . reset ( ) ; outputBuffer . reset ( ) ; usingOutputStream = _BOOL ; usingWriter = _BOOL ; isCharacterEncodingSet = _BOOL ; }
48668	public void startDocument ( ) throws SAXException { try { if ( _NULL == m_resultContentHandler ) createResultContentHandler ( m_result ) ; } catch ( TransformerException te ) { throw new SAXException ( te . getMessage ( ) , te ) ; } m_flushedStartDoc = _BOOL ; m_foundFirstElement = _BOOL ; }
48711	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
48757	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
48787	private void encodeValue ( ByteSequence str , StringBuilder buffer ) { if ( StaticUtils . needsBase64Encoding ( str ) ) { buffer . append ( _CHAR : _CHAR ) ; buffer . append ( Base64 . encode ( str ) ) ; } else { buffer . append ( _CHAR _CHAR ) ; buffer . append ( str . toString ( ) ) ; } }
48805	public synchronized void addFlavorListener ( FlavorListener listener ) { if ( listener == _NULL ) { return ; } if ( flavorListeners == _NULL ) { currentDataFlavors = getAvailableDataFlavorSet ( ) ; flavorListeners = new EventListenerAggregate ( FlavorListener . class ) ; } flavorListeners . add ( listener ) ; }
48836	@ Override public void execute ( ) throws MojoExecutionException , MojoFailureException { createOutputDirectory ( ) ; generateConfigRef ( ) ; try { copyResources ( ) ; } catch ( IOException e ) { throw new MojoExecutionException ( _CHAR Failed to copy resource files . '' , e ) ; } }
48876	private JsonResourceType createJsonResourceType ( JsonValue jsonValue ) throws EntitlementException { try { String s = jsonValue . toString ( ) ; return MAPPER . readValue ( s , JsonResourceType . class ) ; } catch ( IOException e ) { logger . error ( _CHAR Caught IOException while creating JSON wrapper '' , e ) ; throw new EntitlementException ( INVALID_CLASS , getMessage ( e ) ) ; } }
48962	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
48963	public Cursor fetch ( Long ruleID ) { if ( ruleID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_RULEID + _CHAR = _CHAR + ruleID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
48969	public void start_scope ( LogfileScope p_logfile_scope ) { if ( ! write_enabled ) return ; try { file_writer . write ( p_logfile_scope . name ) ; file_writer . write ( _CHAR \ n _CHAR ) ; } catch ( IOException e2 ) { System . out . println ( _CHAR Logfile . start_scope : write failed _CHAR ) ; } }
49089	public void comment ( String comment ) throws SAXException { if ( m_firstTagNotEmitted && m_firstElementName != _NULL ) { emitFirstTag ( ) ; } else if ( m_needToCallStartDocument ) { m_handler . startDocument ( ) ; m_needToCallStartDocument = _BOOL ; } m_handler . comment ( comment ) ; }
49137	public static void access ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . access ( level , msgid , data , session ) ; } catch ( LogException le ) { debug . error ( _CHAR LogUtil . access : Could n _CHAR_CHAR , le ) ; } } }
49182	public void pushContext ( ) { Context2 parentContext = currentContext ; currentContext = parentContext . getChild ( ) ; if ( currentContext == _NULL ) { currentContext = new Context2 ( parentContext ) ; } else { currentContext . setParent ( parentContext ) ; } }
49186	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
49203	@ Override public void close ( ) { for ( final PooledConnectionManager manager : managers . values ( ) ) { try { ( ( CPDSConnectionFactory ) manager ) . getPool ( ) . close ( ) ; } catch ( final Exception closePoolException ) { } } InstanceKeyDataSourceFactory . removeInstance ( getInstanceKey ( ) ) ; }
49246	public View create ( Element elem ) { Document doc = elem . getDocument ( ) ; Object i18nFlag = doc . getProperty ( _CHAR i18n _CHAR ) ; if ( ( i18nFlag != _NULL ) && i18nFlag . equals ( Boolean . TRUE ) ) { return createI18N ( elem ) ; } else { return new WrappedPlainView ( elem ) ; } }
49271	public ArrayDeque < E > clone ( ) { try { @ SuppressWarnings ( _CHAR unchecked _CHAR ) ArrayDeque < E > result = ( ArrayDeque < E > ) super . clone ( ) ; result . elements = Arrays . copyOf ( elements , elements . length ) ; return result ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( ) ; } }
49308	public Cursor fetch ( Long failedActionID ) { if ( failedActionID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_FAILEDACTIONID + _CHAR = _CHAR + failedActionID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
49309	String formatAlphaNumerals ( int itemNum ) { String result ; if ( itemNum > _NUM ) { result = formatAlphaNumerals ( itemNum / _NUM ) + formatAlphaNumerals ( itemNum % _NUM ) ; } else { result = String . valueOf ( ( char ) ( _CHAR + itemNum - _NUM ) ) ; } return result ; }
49318	public boolean isSSOTokenValid ( ) { try { SMSEntry . validateToken ( token ) ; return _BOOL ; } catch ( SMSException smse ) { debug . warning ( _CHAR ServiceSchemaManager : token is not valid . '' , smse ) ; } return _BOOL ; }
49319	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
49361	private void doSignalAll ( Node first ) { lastWaiter = firstWaiter = _NULL ; do { Node next = first . nextWaiter ; first . nextWaiter = _NULL ; transferForSignal ( first ) ; first = next ; } while ( first != _NULL ) ; }
49449	public boolean remove ( Object o ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return q . remove ( o ) ; } finally { lock . unlock ( ) ; } }
49491	@ Override public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; try { msgFactory = MessageFactory . newInstance ( ) ; } catch ( SOAPException ex ) { Utils . debug . error ( _CHAR SOAPReceiver . init : create message _CHAR + _CHAR factory failed . '' ) ; throw new ServletException ( ex . getMessage ( ) ) ; } }
49499	public static void access ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . access ( level , msgid , data , session ) ; } catch ( LogException le ) { FSUtils . debug . error ( _CHAR LogUtil . access : Could n _CHAR_CHAR , le ) ; } } }
49504	public Node item ( int index ) { int handle = m_firstChild ; while ( -- index >= _NUM && handle != DTM . NULL ) { handle = m_parentDTM . getNextSibling ( handle ) ; } if ( handle == DTM . NULL ) { return _NULL ; } return m_parentDTM . getNode ( handle ) ; }
49507	protected void removeFromProfilesMap ( String ct , Client c ) { if ( c == _NULL ) { return ; } Set parentSet = c . getProperties ( PARENT_ID ) ; Map m = getStylesProfileMap ( ct , parentSet ) ; if ( m != _NULL ) { m . remove ( ct ) ; } }
49558	public int padCount ( byte [ ] in ) throws InvalidCipherTextException { int count = in . length ; while ( count > _NUM ) { if ( in [ count - _NUM ] != _NUM ) { break ; } count -- ; } return in . length - count ; }
49584	private Set searchResultsToSet ( SearchResults results ) throws UMSException { Set set = new OrderedSet ( ) ; if ( results != _NULL ) { while ( results . hasMoreElements ( ) ) { PersistentObject one = results . next ( ) ; set . add ( one . getGuid ( ) . toString ( ) ) ; } } return set ; }
49647	private void signalNotFull ( ) { final ReentrantLock putLock = this . putLock ; putLock . lock ( ) ; try { notFull . signal ( ) ; } finally { putLock . unlock ( ) ; } }
49668	public boolean hasMoreRequirements ( ) { authDebug . message ( _CHAR AuthContextLocal : : hasMoreRequirements ( ) _CHAR ) ; if ( ( amlc . getStatus ( ) == LoginStatus . AUTH_SUCCESS ) || ( amlc . getStatus ( ) == LoginStatus . AUTH_FAILED ) ) { return _BOOL ; } else { informationRequired = amlc . getRequiredInfo ( ) ; return ( informationRequired != _NULL ) ; } }
49677	public int size ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return count ; } finally { lock . unlock ( ) ; } }
49742	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; switch ( type ) { case Constants . ELEMNAME_TEXTLITERALRESULT : break ; default : error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; } return super . appendChild ( newChild ) ; }
49764	public boolean delete ( String name ) { String lcName = name . toLowerCase ( ) ; if ( this . containsKey ( lcName ) ) { this . remove ( lcName ) ; return _BOOL ; } else { return _BOOL ; } }
49773	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynEnumOperations $ self = ( DynEnumOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
49796	public void add ( AppInfo info ) { if ( mAppFilter != _NULL && ! mAppFilter . shouldShowApp ( info . componentName ) ) { return ; } if ( findActivity ( data , info . componentName , info . user ) ) { return ; } data . add ( info ) ; added . add ( info ) ; }
49859	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
49870	public boolean equal ( org . omg . DynamicAny . DynAny dyn_any ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR equal _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . equal ( dyn_any ) ; } finally { _servant_postinvoke ( $ so ) ; } }
49941	private static void parse ( String xml , ContentHandler contentHandler ) throws SAXException { try { XMLReader reader = new ExpatReader ( ) ; reader . setContentHandler ( contentHandler ) ; reader . parse ( new InputSource ( new StringReader ( xml ) ) ) ; } catch ( IOException e ) { throw new AssertionError ( e ) ; } }
50116	@ Override @ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized Object clone ( ) { try { Vector < E > vector = ( Vector < E > ) super . clone ( ) ; vector . elementData = elementData . clone ( ) ; return vector ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( e ) ; } }
50168	@ Override public void close ( ) throws IOException { try { super . close ( ) ; } finally { if ( closeBranch ) { branch . close ( ) ; } } }
50177	public boolean isMember ( User user ) throws UMSException { DN userdn = DN . valueOf ( user . getDN ( ) ) ; DN pcdn = DN . valueOf ( this . getDN ( ) ) ; if ( userdn . parent ( ) . equals ( pcdn ) ) { return _BOOL ; } else { return _BOOL ; } }
50201	public static boolean isFileTypeSupported ( int fileType ) { List providers = getMidiFileWriters ( ) ; for ( int i = _NUM ; i < providers . size ( ) ; i ++ ) { MidiFileWriter writer = ( MidiFileWriter ) providers . get ( i ) ; if ( writer . isFileTypeSupported ( fileType ) ) { return _BOOL ; } } return _BOOL ; }
50209	public static < T > T doUsing ( Object context , RestrictedTokenAction < T > action ) throws Exception { Object savedContext = currentContext . get ( ) ; try { currentContext . set ( context ) ; return action . run ( ) ; } finally { currentContext . set ( savedContext ) ; } }
50215	public static void dismissProgressDialog ( final ProgressDialog progressDialog ) { try { if ( progressDialog != _NULL && progressDialog . isShowing ( ) && ! progressDialog . getOwnerActivity ( ) . isChangingConfigurations ( ) && ! progressDialog . getOwnerActivity ( ) . isFinishing ( ) ) { progressDialog . dismiss ( ) ; ActivityUtils . unlockOrientation ( progressDialog . getOwnerActivity ( ) ) ; } } catch ( Exception e ) { } }
50261	public String toString ( ) { String answer = super . toString ( ) ; if ( rootException != _NULL ) { answer += _CHAR [ Root exception is _CHAR + rootException + _CHAR ] _CHAR ; } if ( remainingName != _NULL ) { answer += _CHAR ; remaining name _CHAR_CHAR_CHAR _CHAR ; } return answer ; }
50269	public void installUI ( JComponent c ) { splitPane = ( JSplitPane ) c ; dividerLocationIsSet = _BOOL ; dividerKeyboardResize = _BOOL ; keepHidden = _BOOL ; installDefaults ( ) ; installListeners ( ) ; installKeyboardActions ( ) ; setLastDragLocation ( - _NUM ) ; }
50288	public static boolean isForwardSuccess ( AuthContextLocal authContext , HttpServletRequest req ) { boolean isForward = forwardSuccessExists ( req ) ; if ( ! isForward ) { LoginState loginState = getLoginState ( authContext ) ; if ( loginState != _NULL ) { isForward = loginState . isForwardSuccess ( ) ; } } return isForward ; }
50293	@ Override public void flush ( ) { Cell [ ] row = _NULL ; if ( ! rows . isEmpty ( ) ) { row = rows . get ( rows . size ( ) - _NUM ) ; } document . add ( this ) ; if ( row != _NULL ) { lastAddedRow = row ; } }
50319	public boolean postProcessKeyEvent ( KeyEvent e ) { if ( ! e . isConsumed ( ) ) { Component target = e . getComponent ( ) ; Container p = ( Container ) ( target instanceof Container ? target : target . getParent ( ) ) ; if ( p != _NULL ) { p . postProcessKeyEvent ( e ) ; } } return _BOOL ; }
50320	private synchronized void addTracker ( String path , Object marker , FileDeleteStrategy deleteStrategy ) { if ( exitWhenFinished ) { throw new IllegalStateException ( _CHAR No new trackers can be added once exitWhenFinished ( ) is called _CHAR ) ; } if ( reaper == _NULL ) { reaper = new Reaper ( ) ; reaper . start ( ) ; } trackers . add ( new Tracker ( path , deleteStrategy , marker , q ) ) ; }
50337	public void restart ( ) { getLock ( ) . lock ( ) ; try { stop ( ) ; start ( ) ; } finally { getLock ( ) . unlock ( ) ; } }
50342	public void flush ( ) { if ( writer != _NULL ) { try { writer . flush ( ) ; } catch ( Exception ex ) { Debug . error ( logName + _CHAR : SecureFileHandler : _CHAR + _CHAR Could not Flush Output _CHAR , ex ) ; } } }
50352	public Cursor fetch ( Long parameterID ) { if ( parameterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_ACTIONPARAMETERID + _CHAR = _CHAR + parameterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
50411	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
50415	public void writeSkippedEntries ( String skipFile , ExistingFileBehavior existingFileBehavior ) throws IOException { if ( skipFile == _NULL ) { closeSkipWriter ( ) ; return ; } final BufferedWriter writer = newBufferedWriter ( skipFile , existingFileBehavior , ERR_SKIP_FILE_EXISTS ) ; if ( writer != _NULL ) { skipWriter = writer ; } }
50421	@ Override public final String toString ( ) { if ( stringRep == _NULL ) { StringBuilder buffer = new StringBuilder ( ) ; buffer . append ( this . name ) ; buffer . append ( _CHAR ) ; buffer . append ( Integer . toString ( this . defaultPort ) ) ; stringRep = buffer . toString ( ) ; } return stringRep ; }
50464	@ Override public void write ( int b ) { for ( OutputStream s : targetStreams ) { try { s . write ( b ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
50565	public void add_int ( int p_int ) { if ( ! write_enabled ) return ; try { file_writer . write ( ( new Integer ( p_int ) ) . toString ( ) ) ; file_writer . write ( _CHAR \ n _CHAR ) ; } catch ( IOException e2 ) { System . out . println ( _CHAR unable to write integer to logfile _CHAR ) ; } }
50610	private void processDelete ( Set < DN > deleteDNset , boolean log ) { if ( log ) { writeLog ( deleteDNset ) ; } else { for ( DN baseDN : getBaseDNsToSearch ( ) ) { doBaseDN ( baseDN , deleteDNset ) ; } } }
50666	public static void encode ( ASN1Writer writer , int opType , String value ) throws IOException { writer . writeStartSequence ( ) ; writer . writeEnumerated ( opType ) ; if ( value != _NULL ) { writer . writeStartSequence ( ) ; writer . writeOctetString ( value ) ; writer . writeEndSequence ( ) ; } writer . writeEndSequence ( ) ; }
50671	public void toggle_select_action ( Point2D p_point ) { if ( board_is_read_only ) return ; if ( ! is_StateSelectedItem ( ) ) return ; PlaPointFloat location = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; StateInteractive return_state = ( ( StateSelectedItem ) interactive_state ) . toggle_select ( location ) ; if ( return_state != interactive_state ) { set_interactive_state ( return_state ) ; repaint ( ) ; } }
50697	protected UndoableEdit editToBeUndone ( ) { int i = indexOfNextAdd ; while ( i > _NUM ) { UndoableEdit edit = edits . elementAt ( -- i ) ; if ( edit . isSignificant ( ) ) { return edit ; } } return _NULL ; }
50733	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
50796	public void trimToSize ( ) { balance ( ) ; redimNodeArrays ( freenode ) ; CharVector kx = new CharVector ( ) ; kx . alloc ( _NUM ) ; TernaryTree map = new TernaryTree ( ) ; compact ( kx , map , root ) ; kv = kx ; kv . trimToSize ( ) ; }
50841	private String cleanInput ( String input ) { if ( input == _NULL ) { return _NULL ; } input = input . trim ( ) ; if ( input . length ( ) == _NUM ) { return _NULL ; } return input . toUpperCase ( ) ; }
50899	protected void replacePane ( JComponent currentPane , JComponent newPane ) { if ( currentPane != _NULL ) { deinstallMouseHandlers ( currentPane ) ; frame . remove ( currentPane ) ; } if ( newPane != _NULL ) { frame . add ( newPane ) ; installMouseHandlers ( newPane ) ; } }
50977	public void encode ( OutputStream out ) throws IOException { DerOutputStream tmp = new DerOutputStream ( ) ; if ( this . extensionValue == _NULL ) { this . extensionId = PKIXExtensions . IssuingDistributionPoint_Id ; this . critical = _BOOL ; encodeThis ( ) ; } super . encode ( tmp ) ; out . write ( tmp . toByteArray ( ) ) ; }
50985	public String join ( String separator ) { StringBuilder sb = new StringBuilder ( ) ; boolean isFirst = _BOOL ; for ( Object e : this ) { if ( isFirst ) isFirst = _BOOL ; else sb . append ( separator ) ; sb . append ( e ) ; } return sb . toString ( ) ; }
50987	public void runTest ( ) throws Throwable { Document doc ; DocumentType docType ; NamedNodeMap attrList ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; docType = doc . getDoctype ( ) ; assertNotNull ( _CHAR docTypeNotNull _CHAR , docType ) ; attrList = docType . getAttributes ( ) ; assertNull ( _CHAR doctypeAttributesNull _CHAR , attrList ) ; }
50988	@ Override public void completeCycle ( ) { if ( ! runDeathSeq ) { main . Main . goombaHit . play ( _NUM . _NUM ) ; runDeathSeq = _BOOL ; main . Main . enemyCount ++ ; spriteFrame . setImage ( playerStates . get ( _NUM ) ) ; spriteBoundsArray [ _NUM ] = _NULL ; frameCounter = _NUM ; } }
51102	public void removeHandler ( Handler handler ) { if ( this . isNamed ) { LogManager . getLogManager ( ) . checkAccess ( ) ; } if ( handler == _NULL ) { return ; } this . handlers . remove ( handler ) ; updateDalvikLogHandler ( ) ; }
51111	private void readObject ( final ObjectInputStream in ) throws IOException , ClassNotFoundException { try { in . defaultReadObject ( ) ; final SharedPoolDataSource oldDS = ( SharedPoolDataSource ) new SharedPoolDataSourceFactory ( ) . getObjectInstance ( getReference ( ) , _NULL , _NULL , _NULL ) ; this . pool = oldDS . pool ; } catch ( final NamingException e ) { throw new IOException ( _CHAR NamingException : _CHAR + e ) ; } }
51170	public synchronized boolean next ( Writable key , Writable val ) throws IOException { if ( val . getClass ( ) != WALEntry . class ) { throw new IOException ( _CHAR wrong value class : _CHAR + val + _CHAR is not _CHAR + WALEntry . class ) ; } boolean more = next ( key ) ; if ( more ) { getCurrentValue ( val ) ; } return more ; }
51213	public final boolean isDeviceRooted ( ) { String su = _CHAR su _CHAR ; String [ ] locations = { _CHAR / sbin / _CHAR , _CHAR / system / bin / _CHAR , _CHAR / system / xbin / _CHAR , _CHAR / system / sd / xbin / _CHAR , _CHAR / system / bin / failsafe / _CHAR , _CHAR / data / local / xbin / _CHAR , _CHAR / data / local / bin / _CHAR , _CHAR / data / local / _CHAR } ; for ( String location : locations ) { if ( new File ( location + su ) . exists ( ) ) { return _BOOL ; } } return _BOOL ; }
51228	static Object newInstance ( ClassLoader classLoader , String className ) throws ClassNotFoundException , IllegalAccessException , InstantiationException { Class driverClass ; if ( classLoader == _NULL ) { driverClass = Class . forName ( className ) ; } else { driverClass = classLoader . loadClass ( className ) ; } return driverClass . newInstance ( ) ; }
51273	public SessionDescription createSessionDescription ( String s ) throws SdpParseException { try { SDPAnnounceParser sdpParser = new SDPAnnounceParser ( s ) ; return sdpParser . parse ( ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new SdpParseException ( _NUM , _NUM , _CHAR Could not parse message _CHAR ) ; } }
51313	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { if ( ( ! target . isEditable ( ) ) || ( ! target . isEnabled ( ) ) ) { UIManager . getLookAndFeel ( ) . provideErrorFeedback ( target ) ; return ; } target . replaceSelection ( _CHAR \ t _CHAR ) ; } }
51319	public boolean beginToLogoutDisplay ( ChildDisplayEvent event ) { boolean display = _BOOL ; if ( ! validSession ) { HttpServletRequest req = getRequestContext ( ) . getRequest ( ) ; AMConsoleConfig config = AMConsoleConfig . getInstance ( ) ; setDisplayFieldValue ( LOGOUT_URL , config . getLogoutURL ( req ) ) ; display = _BOOL ; } return display ; }
51330	public static void access ( Level level , String msgid , String [ ] data ) { if ( ( logger != _NULL ) && logger . isAccessLoggable ( level ) ) { try { logger . access ( level , msgid , data , _NULL ) ; } catch ( LogException le ) { debug . error ( _CHAR LogUtil . access : _CHAR , le ) ; } } }
51350	public boolean signatureCoversWholeDocument ( String name ) { getSignatureNames ( ) ; if ( ! sigNames . containsKey ( name ) ) return _BOOL ; try { return sigNames . get ( name ) [ _NUM ] == document . getReader ( ) . getFileLength ( ) ; } catch ( IOException e ) { throw new PdfException ( e ) ; } }
51390	public static void inflateData ( byte [ ] deflated , byte [ ] inflated ) { Inflater inflater = new Inflater ( ) ; inflater . setInput ( deflated ) ; try { inflater . inflate ( inflated ) ; } catch ( DataFormatException dfe ) { throw new IOException ( IOException . CannotInflateTiffImage ) ; } }
51434	private void internalSetOrientation ( Orientation orientation ) { switch ( orientation ) { case HORIZONTAL : this . mBounds = new RectF ( _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM ) ; break ; case VERTICAL : this . mBounds = new RectF ( _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM ) ; break ; } }
51467	public int compare ( File file1 , File file2 ) { int result = _NUM ; for ( Comparator < File > delegate : delegates ) { result = delegate . compare ( file1 , file2 ) ; if ( result != _NUM ) { break ; } } return result ; }
51528	public org . omg . DynamicAny . DynAny copy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR copy _CHAR , _opsClass ) ; DynUnionOperations $ self = ( DynUnionOperations ) $ so . servant ; try { return $ self . copy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
51529	public void mouse_dragged ( Point p_point ) { if ( interactive_state != _NULL && gdi_context != _NULL ) { current_mouse_position = gdi_context . coordinate_transform . screen_to_board ( p_point ) ; StateInteractive return_state = interactive_state . mouse_dragged ( current_mouse_position ) ; if ( return_state != interactive_state ) { set_interactive_state ( return_state ) ; repaint ( ) ; } } }
51576	@ Override public void cacheResult ( List < Foo > foos ) { for ( Foo foo : foos ) { if ( entityCache . getResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) ) == _NULL ) { cacheResult ( foo ) ; } else { foo . resetOriginalValues ( ) ; } } }
51593	public void createTable ( Table tbl ) throws InvalidObjectException , MetaException { if ( tbl == _NULL ) throw new InvalidObjectException ( _CHAR Table passed is _NULL _CHAR ) ; try { this . getDatabase ( tbl . getDbName ( ) ) ; this . metastore . createTable ( tbl ) ; } catch ( NoSuchObjectException ex ) { throw new MetaException ( ex . getMessage ( ) ) ; } }
51603	public boolean ignoreUserProfile ( ) { String profile = _NULL ; try { profile = ssoToken . getProperty ( ISAuthConstants . USER_PROFILE ) ; } catch ( SSOException e ) { debug . warning ( _CHAR AMModelBase . ignoreUserProfile _CHAR , e ) ; } return ( ( profile != _NULL ) && profile . equals ( ISAuthConstants . IGNORE ) ) ; }
51635	public static void error ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . error ( level , msgid , data , session ) ; } catch ( LogException le ) { FSUtils . debug . error ( _CHAR LogUtil . error : Could n _CHAR_CHAR , le ) ; } } }
51656	public void stop ( ) { if ( mShrinkingController != _NULL && mShrinkingController . isRunning ( ) ) { mShrinkingController . end ( ) ; mShrinkingController . cancel ( ) ; } if ( mProgressingController != _NULL && mProgressingController . isRunning ( ) ) { mProgressingController . end ( ) ; mProgressingController . cancel ( ) ; } }
51686	public Cursor fetch ( Long failedActionParameterID ) { if ( failedActionParameterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_FAILEDACTIONPARAMETERID + _CHAR = _CHAR + failedActionParameterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
51712	public String addListener ( ServiceListener listener ) { try { validateSCM ( ) ; return ( scm . addListener ( token , listener ) ) ; } catch ( Exception e ) { SMSEntry . debug . error ( _CHAR ServiceConfigManager : addListener exception _CHAR + _CHAR Service Name : _CHAR + serviceName , e ) ; } return ( _NULL ) ; }
51766	@ Override public void write ( byte [ ] b , int off , int len ) { for ( OutputStream s : targetStreams ) { try { s . write ( b , off , len ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
51773	public void clear ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { q . clear ( ) ; } finally { lock . unlock ( ) ; } }
51859	public static int toRealPosition ( int position , int count ) { position = position - _NUM ; if ( position < _NUM ) { position += count ; } else { position = position % count ; } return position ; }
51920	public void seek ( long pos ) throws IOException { checkClosed ( ) ; if ( pos < flushedPos ) { throw new IndexOutOfBoundsException ( ) ; } cache . seek ( pos ) ; this . streamPos = cache . getFilePointer ( ) ; maxStreamPos = Math . max ( maxStreamPos , streamPos ) ; this . bitOffset = _NUM ; }
51945	public Cursor fetch ( Long ruleActionParameterID ) { if ( ruleActionParameterID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_RULEACTIONPARAMETERID + _CHAR = _CHAR + ruleActionParameterID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
52001	public void add ( Set < IPrivilege > privileges ) throws EntitlementException { for ( IPrivilege p : privileges ) { if ( p instanceof Privilege ) { add ( ( Privilege ) p ) ; } else if ( p instanceof ReferralPrivilege ) { add ( ( ReferralPrivilege ) p ) ; } } }
52104	private void adjustFocus ( boolean inWindow ) { if ( ( component != _NULL ) && component . isEnabled ( ) && component . isRequestFocusEnabled ( ) ) { if ( inWindow ) { component . requestFocusInWindow ( ) ; } else { component . requestFocus ( ) ; } } }
52110	public Object clone ( ) { Object o ; try { o = super . clone ( ) ; } catch ( CloneNotSupportedException cnse ) { o = _NULL ; } return o ; }
52182	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
52290	static boolean useSystemFonts ( ) { if ( isWindows ( ) && useSystemFonts ) { if ( METAL_LOOK_AND_FEEL_INITED ) { Object value = UIManager . get ( _CHAR Application . useSystemFontSettings _CHAR ) ; return ( value == _NULL || Boolean . TRUE . equals ( value ) ) ; } return _BOOL ; } return _BOOL ; }
52325	public void stateChanged ( ChangeEvent e ) { if ( e == _NULL ) { return ; } if ( myBar != _NULL ) { Object newModelValue = myBar . getValue ( ) ; firePropertyChange ( ACCESSIBLE_VALUE_PROPERTY , oldModelValue , newModelValue ) ; oldModelValue = newModelValue ; } }
52418	public int component_count ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR component_count _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . component_count ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
52432	public boolean isExpanded ( TreePath path ) { if ( path == _NULL ) return _BOOL ; Object value ; do { value = expandedState . get ( path ) ; if ( value == _NULL || ! ( ( Boolean ) value ) . booleanValue ( ) ) return _BOOL ; } while ( ( path = path . getParentPath ( ) ) != _NULL ) ; return _BOOL ; }
52548	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
52633	public String encode ( ) { String encoded_string ; encoded_string = KEY_FIELD + type ; if ( keyData != _NULL ) { encoded_string += Separators . COLON ; encoded_string += keyData ; } encoded_string += Separators . NEWLINE ; return encoded_string ; }
52660	public boolean isIdentity ( ) { if ( ( eSubjects != _NULL ) && ! eSubjects . isEmpty ( ) ) { for ( EntitlementSubject e : eSubjects ) { if ( e . isIdentity ( ) ) { return _BOOL ; } } } return _BOOL ; }
52804	public static void notifyBackupBeginning ( Backend < ? > backend , BackupConfig config ) { for ( BackupTaskListener listener : directoryServer . backupTaskListeners ) { try { listener . processBackupBegin ( backend , config ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
52817	public org . omg . CORBA . TypeCode type ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR type _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { return $ self . type ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
52821	@ Override public void cacheResult ( List < Foo > foos ) { for ( Foo foo : foos ) { if ( entityCache . getResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) ) == _NULL ) { cacheResult ( foo ) ; } else { foo . resetOriginalValues ( ) ; } } }
52897	public org . omg . CORBA . TypeCode type ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR type _CHAR , _opsClass ) ; DynStructOperations $ self = ( DynStructOperations ) $ so . servant ; try { return $ self . type ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
52928	public boolean hasMoreRequirements ( boolean noFilter ) { authDebug . message ( _CHAR AuthContextLocal : : hasMoreRequirements ( ) _CHAR ) ; if ( ( amlc . getStatus ( ) == LoginStatus . AUTH_SUCCESS ) || ( amlc . getStatus ( ) == LoginStatus . AUTH_FAILED ) ) { return _BOOL ; } else { informationRequired = amlc . getRequiredInfo ( ) ; return ( getCallbacks ( informationRequired , noFilter ) != _NULL ) ; } }
52934	public void addAll ( AccessibleRelation [ ] relations ) { if ( relations . length != _NUM ) { if ( this . relations == _NULL ) { this . relations = new Vector ( relations . length ) ; } for ( int i = _NUM ; i < relations . length ; i ++ ) { add ( relations [ i ] ) ; } } }
53007	public List < AuditEvent > convertToAuditEvent ( Iterable < PersistentAuditEvent > persistentAuditEvents ) { if ( persistentAuditEvents == _NULL ) { return Collections . emptyList ( ) ; } List < AuditEvent > auditEvents = new ArrayList < > ( ) ; for ( PersistentAuditEvent persistentAuditEvent : persistentAuditEvents ) { auditEvents . add ( convertToAuditEvent ( persistentAuditEvent ) ) ; } return auditEvents ; }
53025	@ Override public boolean equals ( Object otherInstant ) { if ( this == otherInstant ) { return _BOOL ; } if ( otherInstant instanceof Instant ) { Instant other = ( Instant ) otherInstant ; return this . seconds == other . seconds && this . nanos == other . nanos ; } return _BOOL ; }
53046	private void exitRecordingMode ( boolean isInRecordingMode ) { refreshImageButton ( mIsPlaying ) ; refreshActionMenuItem ( mIsPlaying ) ; refreshPopupMenuItem ( mIsPlaying ) ; refreshActionMenuPower ( _BOOL ) ; if ( ! isInRecordingMode ) { mIsInRecordingMode = _BOOL ; switchRecordLayout ( isInRecordingMode ) ; } }
53063	@ Override public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } if ( obj instanceof MonthDay ) { MonthDay other = ( MonthDay ) obj ; return month == other . month && day == other . day ; } return _BOOL ; }
53076	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynFixedOperations $ self = ( DynFixedOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53106	public void updateState ( Path newFile ) throws IOException { Path cacheKey = newFile ; if ( ! Files . exists ( checksum . resolvePath ( newFile ) ) ) { checksum . remove ( cacheKey ) ; } else { checksum . put ( cacheKey , checksum . getCurrentDigest ( newFile ) ) ; } checksum . persistChecksums ( ) ; }
53232	public void processBye ( RequestEvent requestEvent , ServerTransaction serverTransactionId ) { final Request request = requestEvent . getRequest ( ) ; try { final Response response = messageFactory . createResponse ( _NUM , request ) ; ( ( SipProvider ) requestEvent . getSource ( ) ) . sendResponse ( response ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
53284	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SecurityCollection [ _CHAR ) ; sb . append ( name ) ; if ( description != _NULL ) { sb . append ( _CHAR , _CHAR ) ; sb . append ( description ) ; } sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
53351	public boolean seek ( int index ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR seek _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . seek ( index ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53395	private String quote ( String s ) { String str = _NULL ; if ( s == _NULL ) { str = _CHAR \ _CHAR \ _CHAR _CHAR ; } else { str = _CHAR \ _CHAR _CHAR + s + _CHAR \ _CHAR _CHAR ; } return str ; }
53469	public void readMessage ( final LDAPMessageHandler handler ) throws DecodeException , IOException { reader . readStartSequence ( ) ; try { final int messageID = ( int ) reader . readInteger ( ) ; readProtocolOp ( messageID , handler ) ; } finally { reader . readEndSequence ( ) ; } }
53479	public PrivilegeSet read ( InputStream xacml ) throws EntitlementException { PolicySet policySet ; try { policySet = XACMLPrivilegeUtils . streamToPolicySet ( xacml ) ; } catch ( JAXBException e ) { throw new EntitlementException ( INVALID_XML , e ) ; } return fromXACML ( policySet ) ; }
53492	public boolean next ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR next _CHAR , _opsClass ) ; DynArrayOperations $ self = ( DynArrayOperations ) $ so . servant ; try { return $ self . next ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53505	public org . omg . CORBA . TypeCode type ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR type _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . type ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53549	public void rewind ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR rewind _CHAR , _opsClass ) ; DynAnyOperations $ self = ( DynAnyOperations ) $ so . servant ; try { $ self . rewind ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
53581	@ Override public String toString ( ) { String s = _NULL ; try { s = toJSONObject ( ) . toString ( _NUM ) ; } catch ( JSONException e ) { PrivilegeManager . debug . error ( _CHAR EntitlementSubjectImpl . toString _CHAR , e ) ; } return s ; }
53720	public static void notifyBackupEnded ( Backend < ? > backend , BackupConfig config , boolean successful ) { for ( BackupTaskListener listener : directoryServer . backupTaskListeners ) { try { listener . processBackupEnd ( backend , config , successful ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
53724	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized E pop ( ) { if ( elementCount == _NUM ) { throw new EmptyStackException ( ) ; } final int index = -- elementCount ; final E obj = ( E ) elementData [ index ] ; elementData [ index ] = _NULL ; modCount ++ ; return obj ; }
53739	private void release ( ByteArray byteArray ) { synchronized ( syncRoot ) { if ( availableByteArrays . size ( ) >= maxAvailableArraysCount ) { return ; } if ( ! availableByteArrays . contains ( byteArray ) ) { availableByteArrays . add ( byteArray ) ; } } }
53813	@ Override protected void writeValue ( ASN1Writer writer ) throws IOException { writer . writeStartSequence ( ASN1 . UNIVERSAL_OCTET_STRING_TYPE ) ; writer . writeStartSequence ( ) ; writer . writeEnumerated ( resultCode ) ; if ( attributeType != _NULL ) { writer . writeOctetString ( TYPE_ATTRIBUTE_TYPE , attributeType ) ; } writer . writeEndSequence ( ) ; writer . writeEndSequence ( ) ; }
53818	@ Override public void shutdown ( ) { if ( DEBUG . messageEnabled ( ) ) { DEBUG . message ( _CHAR shutdown invoked _CHAR ) ; } super . shutdown ( ) ; removeListener ( ) ; IOUtils . closeIfNotNull ( connectionFactory ) ; IOUtils . closeIfNotNull ( bindConnectionFactory ) ; idRepoListener = _NULL ; }
53832	public boolean equals ( Area other ) { if ( other == this ) { return _BOOL ; } if ( other == _NULL ) { return _BOOL ; } Vector c = new AreaOp . XorOp ( ) . calculate ( this . curves , other . curves ) ; return c . isEmpty ( ) ; }
53845	void resetFromValue ( InternationalFormatter formatter ) { offset = _NUM ; try { text = formatter . valueToString ( value ) ; } catch ( ParseException pe ) { text = _CHAR _CHAR ; } length = fb . getDocument ( ) . getLength ( ) ; }
53861	public void run ( boolean canUseStartTLS ) throws ArgumentException { resetBeforeRun ( ) ; resolveHostName ( ) ; resolveConnectionType ( canUseStartTLS ) ; resolvePortNumber ( ) ; resolveTrustAndKeyManagers ( ) ; resolveCredentialLogin ( ) ; resolveCredentialPassword ( ) ; resolveConnectTimeout ( ) ; }
53905	protected final void process ( PdfObject obj ) { PdfIndirectReference ref = obj . getIndirectReference ( ) ; if ( ref == _NULL ) { loopOver ( obj ) ; } else if ( ! resources . containsKey ( ref . getObjNumber ( ) ) ) { resources . put ( ref . getObjNumber ( ) , obj ) ; loopOver ( obj ) ; } }
53921	@ Override public void write ( String str , int st , int len ) throws IOException { try { beforeWrite ( len ) ; out . write ( str , st , len ) ; afterWrite ( len ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
53927	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
54016	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { SipProvider sipProvider = ( SipProvider ) requestEvent . getSource ( ) ; try { System . out . println ( _CHAR shootme : got an ACK _CHAR + requestEvent . getRequest ( ) ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; System . exit ( _NUM ) ; } }
54034	public org . omg . CORBA . Any to_any ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR to_any _CHAR , _opsClass ) ; DynSequenceOperations $ self = ( DynSequenceOperations ) $ so . servant ; try { return $ self . to_any ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
54130	@ Override public void progressUpdate ( ProgressUpdateEvent ev ) { synchronized ( this ) { ProgressDescriptor desc = createProgressDescriptor ( ev ) ; boolean isLastDescriptor = desc . getProgressStep ( ) . isLast ( ) ; if ( isLastDescriptor ) { lastDescriptor = desc ; } descriptorToDisplay = desc ; } }
54182	public static File writeDataToTempFile ( final byte [ ] data , final String suffix ) { try { File file = File . createTempFile ( _CHAR jk - _CHAR , suffix ) ; return writeDataToFile ( data , file ) ; } catch ( IOException e ) { JKExceptionUtil . handle ( e ) ; return _NULL ; } }
54255	public void prepare ( ) { if ( COMPILE_THRESHOLD == _NUM && ! isCompiled ) { compileToBytecode ( ) ; } if ( this . vmentry != _NULL ) { return ; } LambdaForm prep = getPreparedForm ( basicTypeSignature ( ) ) ; this . vmentry = prep . vmentry ; }
54309	public static Map < String , MappedClass > mappingsFromJar ( File file ) { Map < String , ClassNode > nodes = _NULL ; try { nodes = JarUtils . loadClasses ( file ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return mappingsFromNodes ( nodes ) ; }
54322	private boolean allInitialReplicasAreOfflineOrAlive ( ) { for ( DN baseDN : lastAliveCSNs ) { for ( CSN csn : lastAliveCSNs . getServerState ( baseDN ) ) { if ( csn . getTime ( ) == _NUM && replicasOffline . getCSN ( baseDN , csn . getServerId ( ) ) == _NULL ) { return _BOOL ; } } } return _BOOL ; }
54360	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
54434	public boolean containsProvider ( String providerID ) { SPDescriptorType spDescriptor = _NULL ; try { spDescriptor = idffMetaManager . getSPDescriptor ( ROOT_REALM , providerID ) ; } catch ( IDFFMetaException imex ) { ProviderUtil . debug . error ( _CHAR IDFFProviderManager . containsProvider : _CHAR , imex ) ; } return ( spDescriptor != _NULL ) ; }
54446	public boolean is_null ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR is_null _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { return $ self . is_null ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
54458	public static File checkFolderPath ( final String path , final boolean create ) { final File file = new File ( path ) ; if ( ! file . exists ( ) ) { if ( create ) { file . mkdir ( ) ; } return _NULL ; } return file ; }
54463	public char previous ( ) { if ( pos > _NUM ) { pos -- ; return chars [ pos ] ; } else { pos = _NUM ; return DONE ; } }
54485	protected void startClient ( int port ) { t = new Thread ( new SSClient ( port ) , _CHAR SSClient _CHAR ) ; t . start ( ) ; try { Thread . sleep ( _NUM ) ; } catch ( InterruptedException e ) { System . out . println ( _CHAR Exception during startClinet ( ) _CHAR + e . toString ( ) ) ; } }
54495	void createPresenter ( ) { P presenter = delegateCallback . getPresenter ( ) ; if ( presenter == _NULL ) { presenter = delegateCallback . createPresenter ( ) ; } if ( presenter == _NULL ) { throw new NullPointerException ( _CHAR Presenter is _NULL ! Do you return _NULL in createPresenter ( ) ? _CHAR ) ; } delegateCallback . setPresenter ( presenter ) ; }
54516	public Object [ ] toArray ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return q . toArray ( ) ; } finally { lock . unlock ( ) ; } }
54518	@ Override public int compareTo ( EntryID that ) throws ClassCastException { final long result = this . id - that . id ; if ( result < _NUM ) { return - _NUM ; } else if ( result > _NUM ) { return _NUM ; } return _NUM ; }
54519	public List < AuditEvent > convertToAuditEvent ( Iterable < PersistentAuditEvent > persistentAuditEvents ) { if ( persistentAuditEvents == _NULL ) { return Collections . emptyList ( ) ; } List < AuditEvent > auditEvents = new ArrayList < > ( ) ; for ( PersistentAuditEvent persistentAuditEvent : persistentAuditEvents ) { auditEvents . add ( convertToAuditEvent ( persistentAuditEvent ) ) ; } return auditEvents ; }
54525	public String toBASE64EncodedString ( ) throws FSMsgException { if ( ( responseID == _NULL ) || ( responseID . length ( ) == _NUM ) ) { responseID = FSUtils . generateID ( ) ; if ( responseID == _NULL ) { FSUtils . debug . error ( _CHAR FSLogoutResponse . toBASE64EncodedString : _CHAR + _CHAR could n _CHAR_CHAR_CHAR_CHAR , null ) ; } } return Base64 . encode ( this . toXMLString ( ) . getBytes ( ) ) ; }
54582	@ Override public void cacheResult ( List < Foo > foos ) { for ( Foo foo : foos ) { if ( entityCache . getResult ( FooModelImpl . ENTITY_CACHE_ENABLED , FooImpl . class , foo . getPrimaryKey ( ) ) == _NULL ) { cacheResult ( foo ) ; } else { foo . resetOriginalValues ( ) ; } } }
54643	private void enqueueNextTask ( String queueName , DispatcherTask dispatcherTask ) { synchronized ( syncRoot ) { Queue < DispatcherTask > queue = taskQueuesMap . get ( queueName ) ; if ( queue == _NULL ) { queue = new LinkedList < > ( ) ; taskQueuesMap . put ( queueName , queue ) ; } queue . add ( dispatcherTask ) ; } }
54646	@ Override public void write ( char [ ] chr , int st , int len ) throws IOException { try { beforeWrite ( len ) ; out . write ( chr , st , len ) ; afterWrite ( len ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
54682	private boolean isOneOf ( char ch , final char [ ] charray ) { boolean result = _BOOL ; for ( char element : charray ) { if ( ch == element ) { result = _BOOL ; break ; } } return result ; }
54705	@ Override public void update ( ) { if ( ! bounce ) return ; counter ++ ; if ( counter == _NUM ) super . getSpriteFrame ( ) . setTranslateY ( super . getSpriteFrame ( ) . getTranslateY ( ) - BOUNCE_HEIGHT ) ; else if ( counter == _NUM ) { super . getSpriteFrame ( ) . setTranslateY ( super . getSpriteFrame ( ) . getTranslateY ( ) + BOUNCE_HEIGHT ) ; counter = _NUM ; bounce = _BOOL ; } }
54733	public boolean equals ( Object o ) { if ( ( o == _NULL ) || ! ( o instanceof SamplePrincipal ) ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } SamplePrincipal that = ( SamplePrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
54791	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
54832	void rescheduleForPurge ( long purgeAt ) { this . purgeAt = purgeAt ; cancel ( ) ; if ( ! isScheduled ( ) ) { SystemTimerPool . getTimerPool ( ) . schedule ( this , new Date ( purgeAt ) ) ; } else { sessionDebug . error ( _CHAR Unable to schedule destroyed session for purging '' ) ; } }
54841	public void destroy ( ) { if ( mDomThread != _NULL && mDomThread . isWXThreadAlive ( ) ) { mDomThread . quit ( ) ; } if ( mDomRegistries != _NULL ) { mDomRegistries . clear ( ) ; } mDomHandler = _NULL ; mDomThread = _NULL ; }
54901	@ Override public void addMapping ( String mapping ) { mappingsLock . writeLock ( ) . lock ( ) ; try { mappings . add ( mapping ) ; } finally { mappingsLock . writeLock ( ) . unlock ( ) ; } if ( parent . getState ( ) . equals ( LifecycleState . STARTED ) ) fireContainerEvent ( ADD_MAPPING_EVENT , mapping ) ; }
54920	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; if ( getUIClassID ( ) . equals ( uiClassID ) ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , -- count ) ; if ( count == _NUM && ui != _NULL ) { ui . installUI ( this ) ; } } }
54972	private static int checkIdentifier ( final String signature , int pos ) { if ( ! Character . isJavaIdentifierStart ( getChar ( signature , pos ) ) ) { throw new IllegalArgumentException ( signature + _CHAR : identifier expected at index _CHAR + pos ) ; } ++ pos ; while ( Character . isJavaIdentifierPart ( getChar ( signature , pos ) ) ) { ++ pos ; } return pos ; }
55009	protected void doClick ( MenuSelectionManager msm ) { if ( ! isInternalFrameSystemMenu ( ) ) { BasicLookAndFeel . playSound ( menuItem , getPropertyPrefix ( ) + _CHAR . commandSound _CHAR ) ; } if ( msm == _NULL ) { msm = MenuSelectionManager . defaultManager ( ) ; } msm . clearSelectedPath ( ) ; menuItem . doClick ( _NUM ) ; }
55015	public static int parseVersion ( String revision ) throws ConflictException { int ver =- _NUM ; try { ver = Integer . parseInt ( revision ) ; } catch ( NumberFormatException ex ) { throw new ConflictException ( _CHAR OrientDB repository expects revisions as int , _CHAR + _CHAR unable to parse passed revision : _CHAR + revision ) ; } return ver ; }
55025	protected void doHead ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { if ( DispatcherType . INCLUDE . equals ( req . getDispatcherType ( ) ) ) { doGet ( req , resp ) ; } else { NoBodyResponse response = new NoBodyResponse ( resp ) ; doGet ( req , response ) ; response . setContentLength ( ) ; } }
55063	@ Override public int hashCode ( ) { int code = _NUM ; if ( eSubject != _NULL ) { code += eSubject . hashCode ( ) ; } if ( pSubjectName != _NULL ) { code += pSubjectName . hashCode ( ) ; } return code ; }
55117	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } committed = _BOOL ; }
55185	private void zzScanError ( int errorCode ) { String message ; try { message = ZZ_ERROR_MSG [ errorCode ] ; } catch ( ArrayIndexOutOfBoundsException e ) { message = ZZ_ERROR_MSG [ ZZ_UNKNOWN_ERROR ] ; } throw new Error ( message ) ; }
55255	private void changeStateTo ( State newState ) throws SearchAbandonException { State oldState = state ; state = newState ; try { controller . invokeRefreshTaskDidProgress ( this , oldState , newState ) ; } catch ( InterruptedException x ) { throwAbandonIfNeeded ( x ) ; } }
55264	public void updateReadTime ( long time ) { if ( time > _NUM && time < readTimeMin ) { readTimeMin = time ; } if ( time > readTimeMax ) { readTimeMax = time ; } readCumulativeCount += time ; readTimeAverage = readCumulativeCount / totalReads ; }
55280	public static List < Foo > toModels ( FooSoap [ ] soapModels ) { if ( soapModels == _NULL ) { return _NULL ; } List < Foo > models = new ArrayList < Foo > ( soapModels . length ) ; for ( FooSoap soapModel : soapModels ) { models . add ( toModel ( soapModel ) ) ; } return models ; }
55311	final int strengthOrder ( int order ) { int s = owner . getStrength ( ) ; if ( s == Collator . PRIMARY ) { order & = RBCollationTables . PRIMARYDIFFERENCEONLY ; } else if ( s == Collator . SECONDARY ) { order & = RBCollationTables . SECONDARYDIFFERENCEONLY ; } return order ; }
55313	public boolean removeAudienceRestrictionCondition ( String audience ) { Iterator it = _arcs . iterator ( ) ; while ( it . hasNext ( ) ) { AudienceRestrictionCondition arc = ( AudienceRestrictionCondition ) it . next ( ) ; if ( arc . containsAudience ( audience ) ) { return arc . removeAudience ( audience ) ; } } return _BOOL ; }
55319	@ Override public synchronized void shutdown ( ) { shutdown = _BOOL ; debug ( _CHAR Shutdown triggered _CHAR ) ; try { factory . close ( ) ; } catch ( RuntimeException e ) { debug . error ( _CHAR Error whilst shutting down a Connection Factory _CHAR , e ) ; } }
55337	@ Override public void flush ( ) { for ( OutputStream s : targetStreams ) { try { s . flush ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
55348	public static void access ( Level level , String msgid , String data [ ] , Object session ) { if ( logger != _NULL ) { try { logger . access ( level , msgid , data , session ) ; } catch ( LogException le ) { COTUtils . debug . error ( _CHAR LogUtil . access : Could n _CHAR_CHAR , le ) ; } } }
55349	protected static Vector convertToVector ( final Object [ ] [ ] anArray ) { if ( anArray == _NULL ) { return _NULL ; } final Vector v = new Vector ( anArray . length ) ; for ( final Object [ ] element : anArray ) { v . addElement ( convertToVector ( element ) ) ; } return v ; }
55372	public static String formatSeconds ( Object obj ) { long time =- _NUM ; if ( obj instanceof Long ) { time = ( ( Long ) obj ) . longValue ( ) ; } else if ( obj instanceof Integer ) { time = ( ( Integer ) obj ) . intValue ( ) ; } return ( time + _CHAR s _CHAR ) ; }
55403	public void redrawScreenshot ( ) { if ( mScreenshot == _NULL ) { mStackLayout . topControl = mSetScreenshotComposite ; } else { mStackLayout . topControl = mScreenshotCanvas ; } mScreenshotComposite . layout ( ) ; mScreenshotCanvas . redraw ( ) ; }
55413	public Cursor fetch ( Long actionID ) { if ( actionID == _NULL ) { throw new IllegalArgumentException ( _CHAR primary key _NULL . _CHAR ) ; } Cursor mCursor = database . query ( _BOOL , DATABASE_TABLE , KEYS , KEY_ACTIONID + _CHAR = _CHAR + actionID , _NULL , _NULL , _NULL , _NULL , _NULL ) ; if ( mCursor != _NULL ) { mCursor . moveToFirst ( ) ; } return mCursor ; }
55441	public synchronized void addConsumer ( ImageConsumer ic ) { if ( proxies == _NULL ) { proxies = new Hashtable ( ) ; } if ( ! proxies . containsKey ( ic ) ) { ImageFilter imgf = filter . getFilterInstance ( ic ) ; proxies . put ( ic , imgf ) ; src . addConsumer ( imgf ) ; } }
55500	public static InetSocketAddress findFreeSocketAddress ( ) { try ( ServerSocket serverLdapSocket = new ServerSocket ( ) ) { serverLdapSocket . setReuseAddress ( _BOOL ) ; serverLdapSocket . bind ( new InetSocketAddress ( _CHAR _NUM . _NUM . _NUM . _NUM _CHAR , _NUM ) ) ; return ( InetSocketAddress ) serverLdapSocket . getLocalSocketAddress ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
55501	public void destroy ( ) { org . omg . CORBA . portable . ServantObject $ so = _servant_preinvoke ( _CHAR destroy _CHAR , _opsClass ) ; DynValueOperations $ self = ( DynValueOperations ) $ so . servant ; try { $ self . destroy ( ) ; } finally { _servant_postinvoke ( $ so ) ; } }
55707	boolean canJumpInto ( ) { switch ( kind ) { case Block : case Statement : case Switch : case Lambda : return _BOOL ; } return _BOOL ; }
55750	public void deleteProperty ( int property ) { if ( properties . containsKey ( property ) ) { properties . remove ( property ) ; } else { if ( modelElement != _NULL ) { modelElement . deleteOwnProperty ( property ) ; } } }
55774	void toString ( final StringBuilder buffer ) { boolean first = _BOOL ; for ( CSN csn : serverIdToCSN . values ( ) ) { if ( ! first ) { buffer . append ( _CHAR _CHAR ) ; } csn . toString ( buffer ) ; first = _BOOL ; } }
55782	public void stop ( ) { this . isRunning = _BOOL ; sock . close ( ) ; for ( Object messageChannel : messageChannels ) { ( ( MessageChannel ) messageChannel ) . close ( ) ; } if ( sipStack . stackCongenstionControlTimeout > _NUM && congestionAuditor != _NULL ) { this . congestionAuditor . stop ( ) ; } }
55797	synchronized void enqueue ( Reference < ? extends T > reference ) { if ( head == _NULL ) { reference . queueNext = reference ; } else { reference . queueNext = head ; } head = reference ; notify ( ) ; }
55899	public void invokePostSynchronizationAddPlugins ( PostSynchronizationAddOperation addOperation ) { for ( DirectoryServerPlugin p : postSynchronizationAddPlugins ) { try { p . doPostSynchronization ( addOperation ) ; } catch ( Exception e ) { logException ( addOperation , p , e , ERR_PLUGIN_POST_SYNCHRONIZATION_PLUGIN_EXCEPTION ) ; } } }
55951	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } committed = _BOOL ; }
55998	@ Override public void write ( ASN1Writer stream ) throws IOException { stream . writeStartSequence ( OP_TYPE_MODIFY_DN_REQUEST ) ; stream . writeOctetString ( entryDN ) ; stream . writeOctetString ( newRDN ) ; stream . writeBoolean ( deleteOldRDN ) ; if ( newSuperior != _NULL ) { stream . writeOctetString ( TYPE_MODIFY_DN_NEW_SUPERIOR , newSuperior ) ; } stream . writeEndSequence ( ) ; }
56033	public Phone createPhone ( String value ) { PhoneField phoneImpl = new PhoneField ( ) ; try { phoneImpl . setValue ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return phoneImpl ; }
56049	@ Override public void nullifyUsedVars ( ) { options = _NULL ; sharedState = _NULL ; bundle = _NULL ; secretKeyAttrName = _NULL ; counterAttrName = _NULL ; authLevel = _NULL ; amAuthOATH = _NULL ; loginTimeAttrName = _NULL ; }
56064	public boolean remove ( Object o ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return q . remove ( o ) ; } finally { lock . unlock ( ) ; } }
56090	public int read ( long pos ) throws IOException { if ( pos >= length ) { return - _NUM ; } byte [ ] buf = getCacheBlock ( pos / BUFFER_LENGTH ) ; if ( buf == _NULL ) { return - _NUM ; } return buf [ ( int ) ( pos % BUFFER_LENGTH ) ] & _NUM ; }
56092	public static void notifyExportEnded ( Backend < ? > backend , LDIFExportConfig config , boolean successful ) { for ( ExportTaskListener listener : directoryServer . exportTaskListeners ) { try { listener . processExportEnd ( backend , config , successful ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } }
56148	protected boolean isToggleEvent ( MouseEvent event ) { if ( ! SwingUtilities . isLeftMouseButton ( event ) ) { return _BOOL ; } int clickCount = tree . getToggleClickCount ( ) ; if ( clickCount <= _NUM ) { return _BOOL ; } return ( ( event . getClickCount ( ) % clickCount ) == _NUM ) ; }
56299	public boolean isBroken ( ) { final ReentrantLock lock = this . lock ; lock . lock ( ) ; try { return generation . broken ; } finally { lock . unlock ( ) ; } }
56312	public boolean canTraverseOutsideSubtree ( ) { if ( super . canTraverseOutsideSubtree ( ) ) return _BOOL ; else { int n = m_args . length ; for ( int i = _NUM ; i < n ; i ++ ) { if ( m_args [ i ] . canTraverseOutsideSubtree ( ) ) return _BOOL ; } return _BOOL ; } }
56320	public static void main ( String [ ] args ) { try { ProgressDialog dlg = new ProgressDialog ( new JFrame ( ) ) ; dlg . pack ( ) ; dlg . setVisible ( _BOOL ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
56323	private void updateError ( CSN csn ) { try { remotePendingChanges . commit ( csn ) ; } catch ( NoSuchElementException e ) { if ( logger . isTraceEnabled ( ) ) { logger . trace ( _CHAR LDAPReplicationDomain . updateError : Unable to find remote _CHAR + _CHAR pending change for CSN % s '' , csn ) ; } } }
56331	public void paint ( Graphics g , Shape allocation ) { Container host = getContainer ( ) ; if ( host != _NULL && visible != ( ( JTextComponent ) host ) . isEditable ( ) ) { visible = ( ( JTextComponent ) host ) . isEditable ( ) ; } if ( ! isVisible ( ) ) { return ; } super . paint ( g , allocation ) ; }
