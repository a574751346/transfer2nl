24	Collection < ? extends ClientRequestResult > handleCommandHandleRequest ( final ClientRequest commandRequest ) { switch ( commandRequest . getResultType ( ) ) { case TRANSFER_COMMAND_HANDLES_LIST : return commandExecutionManager . processRequest ( commandRequest . getTagIds ( ) ) ; default : LOG . error ( _CHAR handleCommandHandleRequest ( ) - Could not generate response message . Unknown enum ResultType _CHAR + commandRequest . getResultType ( ) ) ; } return _NULL ; }
47	public SiteAdminPage movePage ( String title , String destinationPath ) { grid . selectPageByTitle ( title ) ; grid . getActionBar ( ) . clickOnButton ( SiteAdminButtons . MOVE , movePageWindow ) ; movePageWindow . typeDestinationPath ( destinationPath ) ; movePageWindow . confirm ( ) ; clickYesOnConfirmationWindow ( ) ; grid . waitForLoaderNotPresent ( ) ; return this ; }
53	private static boolean isJRE11 ( ) { try { Class c = Class . forName ( _CHAR java . security . AccessController _CHAR ) ; return _BOOL ; } catch ( Exception ex ) { } return _BOOL ; }
74	private void init ( ) { mPaint = new Paint ( ) ; mPath = new Path ( ) ; startPoint = new Point ( _NUM , _NUM ) ; endPoint = new Point ( _NUM , _NUM ) ; assistPoint = new Point ( _NUM , _NUM ) ; mPaint . setAntiAlias ( _BOOL ) ; mPaint . setDither ( _BOOL ) ; }
112	public Object clone ( ) { MultipleReturnValueRuleExpression clone = ( MultipleReturnValueRuleExpression ) super . clone ( ) ; clone . conditions = new ArrayList < IRuleCondition > ( ) ; Iterator < IRuleCondition > i = conditions . iterator ( ) ; while ( i . hasNext ( ) ) { clone . conditions . add ( ( IRuleCondition ) i . next ( ) . clone ( ) ) ; } return clone ; }
160	private boolean isBeforeParent ( final BSPTree < Sphere1D > node ) { final BSPTree < Sphere1D > parent = node . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return node == childBefore ( parent ) ; } }
167	public boolean isKeyguardSecure ( ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . JELLY_BEAN ) { LogUtils . e ( _CHAR can not call isKeyguardSecure if SDK_INT < 16 '' ) ; return _BOOL ; } else { return keyguardManager . isKeyguardSecure ( ) ; } }
189	public void addPokestops ( Collection < FortData > pokestops ) { if ( pokestops == _NULL || pokestops . isEmpty ( ) ) { return ; } complete = _BOOL ; for ( FortData pokestop : pokestops ) { this . pokestops . add ( new Pokestop ( api , pokestop ) ) ; } }
207	public static void e ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_ERROR ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . e ( tag , msg ) ; }
223	public void createCheckpoint ( Transaction checkpointTx ) { List < Long > txNums ; synchronized ( this ) { txNums = new LinkedList < Long > ( activeTxs ) ; checkpointTx . bufferMgr ( ) . flushAll ( ) ; LogSeqNum lsn = checkpointTx . recoveryMgr ( ) . checkpoint ( txNums ) ; VanillaDb . logMgr ( ) . flush ( lsn ) ; } }
225	public void stop ( ) { ThreadUtils . assertOnUiThread ( ) ; Log . d ( TAG , _CHAR Disabling sync _CHAR ) ; InvalidationController . get ( mContext ) . stop ( ) ; mProfileSyncService . requestStop ( ) ; if ( AndroidSyncSettings . isMasterSyncEnabled ( mContext ) ) { AndroidSyncSettings . disableChromeSync ( mContext ) ; } }
287	private static boolean containsOnlyTransientAndStaticFields ( List < Field > fields ) { boolean containsNormalField = _BOOL ; for ( Field field : fields ) { if ( ! Modifier . isTransient ( field . getModifiers ( ) ) && ! Modifier . isStatic ( field . getModifiers ( ) ) ) { containsNormalField = _BOOL ; } } return ! containsNormalField ; }
363	public static void quit ( Socket sock ) throws IOException { PkgHeader header ; byte [ ] bs = new byte [ FDHT_PROTO_PKG_HEADER_SIZE ] ; header = new PkgHeader ( ) ; header . cmd = FDHT_PROTO_CMD_QUIT ; packHeader ( header , bs ) ; sock . getOutputStream ( ) . write ( bs ) ; sock . close ( ) ; }
379	private static String convertToQuotedString ( String s ) { if ( s == _NULL || s . isEmpty ( ) ) { return _NULL ; } if ( s . charAt ( _NUM ) == _CHAR_CHAR && s . charAt ( s . length ( ) - _NUM ) == _CHAR_CHAR ) { return s ; } return _CHAR_CHAR + s + _CHAR_CHAR ; }
398	private void checkCallingPackage ( ) throws SecurityException { String callingPkg = _NULL ; if ( android . os . Build . VERSION . SDK_INT >= android . os . Build . VERSION_CODES . KITKAT ) { callingPkg = getCallingPackage ( ) ; } if ( _CHAR org . kustom . wallpaper _CHAR . equals ( callingPkg ) ) return ; if ( _CHAR org . kustom . widget _CHAR . equals ( callingPkg ) ) return ; throw new SecurityException ( _CHAR Unauthorized _CHAR ) ; }
402	public static Object deepClone ( Object obj ) { try { byte [ ] bArray = objectToByteBuffer ( obj ) ; return objectFromByteBuffer ( bArray ) ; } catch ( Exception ex ) { throw new IllegalArgumentException ( _CHAR Failed to perform deep clone on [ _CHAR + obj + _CHAR ] object . Check that the all object context are implements java . io . Serializable . '' , ex ) ; } }
420	public boolean hasAccess ( String ... name ) { if ( this . getId ( ) == _NUM ) { return _BOOL ; } if ( role == _NULL ) { getRole ( ) ; } return role . hasAccess ( name ) ; }
441	public void addGlobalTypeDecl ( XSTypeDefinition decl ) { fGlobalTypeDecls . put ( decl . getName ( ) , decl ) ; if ( decl instanceof XSComplexTypeDecl ) { ( ( XSComplexTypeDecl ) decl ) . setNamespaceItem ( this ) ; } else if ( decl instanceof XSSimpleTypeDecl ) { ( ( XSSimpleTypeDecl ) decl ) . setNamespaceItem ( this ) ; } }
479	private boolean isEqual ( ActivitiEntityEvent event1 , ActivitiEvent activitiEvent ) { if ( activitiEvent instanceof ActivitiEntityEvent && event1 . getType ( ) . equals ( activitiEvent . getType ( ) ) ) { ActivitiEntityEvent activitiEntityEvent = ( ActivitiEntityEvent ) activitiEvent ; if ( activitiEntityEvent . getEntity ( ) . getClass ( ) . equals ( event1 . getEntity ( ) . getClass ( ) ) ) { return _BOOL ; } } return _BOOL ; }
513	public void removeRenderStatement ( String instanceId ) { if ( ! WXUtils . isUiThread ( ) ) { throw new WXRuntimeException ( _CHAR [ WXRenderManager ] removeRenderStatement can only be called in main thread _CHAR ) ; } WXRenderStatement statement = mRegistries . remove ( instanceId ) ; if ( statement != _NULL ) { statement . destroy ( ) ; } }
530	public void undoAll ( ) { undo ( ) ; setGroup ( lastSavedValues . getGroup ( ) ) ; getConnections ( ) . clear ( ) ; getConnections ( ) . addAll ( lastSavedValues . getConnections ( ) ) ; getSubgroups ( ) . clear ( ) ; getSubgroups ( ) . addAll ( lastSavedValues . getSubgroups ( ) ) ; groupingModified = _BOOL ; }
557	public void onSaveInstanceState ( Bundle outState ) { if ( activityResultCallback != _NULL ) { String serviceName = activityResultCallback . getServiceName ( ) ; outState . putString ( _CHAR callbackService _CHAR , serviceName ) ; } if ( pluginManager != _NULL ) { outState . putBundle ( _CHAR plugin _CHAR , pluginManager . onSaveInstanceState ( ) ) ; } }
610	static void dump ( String title , FloatList list ) { System . out . println ( title ) ; FloatList cur = list ; do { System . out . println ( _CHAR Item : _CHAR + cur . value ) ; cur = cur . next ; } while ( cur != list ) ; }
618	protected void applyParseHandlers ( ) { sequenceFlows = new HashMap < String , SequenceFlow > ( ) ; for ( Process process : bpmnModel . getProcesses ( ) ) { currentProcess = process ; if ( process . isExecutable ( ) ) { bpmnParserHandlers . parseElement ( this , process ) ; } } }
629	private boolean hasCurrentAccountChanged ( ) { Account account = AccountUtils . getCurrentOwnCloudAccount ( this ) ; if ( account == _NULL ) { return _BOOL ; } else { return ! mOriginalCurrentAccount . equals ( account . name ) ; } }
670	private static void removeAbsolutePositionAndSizes ( NlComponent component ) { for ( NlComponent child : component . getChildren ( ) ) { child . setAttribute ( TOOLS_URI , ATTR_LAYOUT_CONVERSION_ABSOLUTE_X , _NULL ) ; child . setAttribute ( TOOLS_URI , ATTR_LAYOUT_CONVERSION_ABSOLUTE_Y , _NULL ) ; child . setAttribute ( TOOLS_URI , ATTR_LAYOUT_CONVERSION_ABSOLUTE_WIDTH , _NULL ) ; child . setAttribute ( TOOLS_URI , ATTR_LAYOUT_CONVERSION_ABSOLUTE_HEIGHT , _NULL ) ; removeAbsolutePositionAndSizes ( child ) ; } }
732	@ Override public synchronized void close ( ) { if ( mIsInitializing ) { throw new IllegalStateException ( _CHAR Closed during initialization _CHAR ) ; } if ( mDatabase != _NULL && mDatabase . isOpen ( ) ) { mDatabase . close ( ) ; mDatabase = _NULL ; } }
734	public void clear ( ) { this . n = _NUM ; minImpl . clear ( ) ; maxImpl . clear ( ) ; sumImpl . clear ( ) ; sumOfLogsImpl . clear ( ) ; sumOfSquaresImpl . clear ( ) ; secondMoment . clear ( ) ; }
755	protected void initErrorReporter ( ) { if ( fErrorReporter == _NULL ) { fErrorReporter = new XMLErrorReporter ( ) ; } if ( fErrorHandler == _NULL ) { fErrorHandler = new XPointerErrorHandler ( ) ; } fErrorReporter . putMessageFormatter ( XPointerMessageFormatter . XPOINTER_DOMAIN , new XPointerMessageFormatter ( ) ) ; }
867	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
884	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
891	public void print ( char [ ] charArray ) { synchronized ( lock ) { try { appendLocked ( charArray , _NUM , charArray . length ) ; } catch ( IOException e ) { } } }
920	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( get ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
1038	@ Override public void validate ( ) { try { getLock ( ) . writeLock ( ) . lock ( ) ; invalidQualityStates . clear ( ) ; } finally { getLock ( ) . writeLock ( ) . unlock ( ) ; } }
1043	@ Override public boolean equals ( Object obj ) { if ( obj == this ) { return _BOOL ; } else if ( obj == _NULL || obj . getClass ( ) != getClass ( ) ) { return _BOOL ; } return getName ( ) . equals ( ( ( Permission ) obj ) . getName ( ) ) ; }
1133	public void beforeMovingToBackup ( ) throws SpaceComponentsInitializeException { switch ( _spaceMode ) { case NONE : initBackupComponents ( ) ; break ; case PRIMARY : break ; } }
1272	public static CredentialsDialogFragment newInstanceForCredentials ( WebView webView , HttpAuthHandler handler ) { if ( handler == _NULL ) { throw new IllegalArgumentException ( _CHAR Trying to create instance with parameter handler _CHAR + _CHAR == _NULL _CHAR ) ; } CredentialsDialogFragment frag = new CredentialsDialogFragment ( ) ; frag . mHandler = handler ; frag . mWebView = webView ; return frag ; }
1303	public void flushTermination ( ) { for ( int i = _NUM ; i < numberOfQueues ; i ++ ) { if ( ! terminateLists [ i ] . isEmpty ( ) ) { this . submitTaskToQueue ( this . createTerminateTask ( terminateLists [ i ] ) , i , processedTerminates ) ; this . terminateLists [ i ] = new ArrayList ( batchSize ) ; this . terminatesQueued ++ ; } } }
1333	public int [ ] unCompress ( byte [ ] compInput ) { try { return Snappy . uncompressIntArray ( compInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return _NULL ; }
1427	JSONStringer open ( Scope empty , String openBracket ) throws JSONException { if ( stack . isEmpty ( ) && out . length ( ) > _NUM ) { throw new JSONException ( _CHAR Nesting problem : multiple top - level roots _CHAR ) ; } beforeValue ( ) ; stack . add ( empty ) ; out . append ( openBracket ) ; return this ; }
1492	protected String encodedByte ( int b ) { String hex = Integer . toHexString ( b ) . toUpperCase ( ) ; if ( hex . length ( ) < _NUM ) { return _CHAR % _NUM _CHAR + hex ; } else { return _CHAR % _CHAR + hex ; } }
1501	@ Override protected void onResume ( ) { super . onResume ( ) ; LOG . d ( TAG , _CHAR Resumed the activity . '' ) ; if ( this . appView == _NULL ) { return ; } this . getWindow ( ) . getDecorView ( ) . requestFocus ( ) ; this . appView . handleResume ( this . keepRunning ) ; }
1506	public static JobTrigger . ExecutionWindowTrigger executionWindow ( int windowStart , int windowEnd ) { if ( windowStart < _NUM ) { throw new IllegalArgumentException ( _CHAR Window start ca n _CHAR_CHAR_CHAR t be less than window start _CHAR ) ; } return new JobTrigger . ExecutionWindowTrigger ( windowStart , windowEnd ) ; }
1518	public void delete ( int key ) { int i = ContainerHelpers . binarySearch ( mKeys , mSize , key ) ; if ( i >= _NUM ) { if ( mValues [ i ] != DELETED ) { mValues [ i ] = DELETED ; mGarbage = _BOOL ; } } }
1552	public void reset ( ) { schema = _NULL ; geometryType = GeometryTypeEnum . UNKNOWN ; typeName = _NULL ; dataStore = _NULL ; gridCoverageReader = _NULL ; fieldNameMap . clear ( ) ; fieldTypeMap . clear ( ) ; }
1603	private void addNotify ( ArrayList notifies , Map groupsMap , boolean discard ) { synchronized ( pendingNotifies ) { pendingNotifies . addLast ( new NotifyTask ( notifies , groupsMap , discard ) ) ; if ( notifierThread == _NULL ) { notifierThread = new Notifier ( ) ; notifierThread . start ( ) ; } } }
1604	public static Map ordinalMap ( TupleSet tuples , String field , Comparator cmp ) { if ( tuples instanceof Table ) { ColumnMetadata md = ( ( Table ) tuples ) . getMetadata ( field ) ; return md . getOrdinalMap ( ) ; } else { return ordinalMap ( tuples . tuples ( ) , field , cmp ) ; } }
1612	public static void dump ( String title , FloatList list ) { System . out . println ( title ) ; FloatList cur = list ; do { System . out . println ( _CHAR Item : _CHAR + cur . value ) ; cur = cur . next ; } while ( cur != list ) ; }
1618	public static String decode2S ( String data ) { byte [ ] bb = decode ( data ) ; try { return new String ( bb , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { } return new String ( bb ) ; }
1683	public INDArray asImageMiniBatches ( File f , int numMiniBatches , int numRowsPerSlice ) { try { INDArray d = asMatrix ( f ) ; return Nd4j . create ( numMiniBatches , numRowsPerSlice , d . columns ( ) ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
1704	public static void f ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
1854	public void close ( ) throws IOException { if ( log == _NULL ) return ; try { log . close ( ) ; } finally { log = _NULL ; } }
1859	void applyFacets1 ( XSFacets facets , short presentFacet , short fixedFacet , short patternType ) { try { applyFacets ( facets , presentFacet , fixedFacet , patternType , fDummyContext ) ; } catch ( InvalidDatatypeFacetException e ) { throw new RuntimeException ( _CHAR internal error _CHAR ) ; } fIsImmutable = _BOOL ; }
1864	public void addModule ( @ NotNull Module module ) { checkInitialized ( ) ; String moduleGradlePath = getModuleGradlePath ( module ) ; if ( moduleGradlePath != _NULL ) { VirtualFile moduleFile = module . getModuleFile ( ) ; assert moduleFile != _NULL ; addModule ( moduleGradlePath , VfsUtilCore . virtualToIoFile ( moduleFile . getParent ( ) ) ) ; } }
1900	boolean isModifiedBy ( long txNum ) { internalLock . writeLock ( ) . lock ( ) ; try { return modifiedBy . contains ( txNum ) ; } finally { internalLock . writeLock ( ) . unlock ( ) ; } }
1940	private static String prepare ( String imageName ) { AssertUtil . assertNotNull ( imageName , _CHAR imageName _CHAR ) ; for ( String registryPath : OFFICIAL_REGISTRY_ADDRESS_LIST ) { if ( imageName . startsWith ( registryPath ) ) { return imageName . substring ( registryPath . length ( ) ) ; } } return imageName ; }
1949	public void deleteDevice ( @ Nullable Device info ) { if ( info != _NULL ) { if ( ! initIfNecessary ( ) ) { return ; } ourDeviceManager . removeUserDevice ( info ) ; ourDeviceManager . saveUserDevices ( ) ; } }
1975	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
2004	@ Override protected void thresholdReached ( ) throws IOException { if ( prefix != _NULL ) { outputFile = File . createTempFile ( prefix , suffix , directory ) ; } FileOutputStream fos = new FileOutputStream ( outputFile ) ; memoryOutputStream . writeTo ( fos ) ; currentOutputStream = fos ; memoryOutputStream = _NULL ; }
2031	public void start ( ) { ThreadUtils . assertOnUiThread ( ) ; if ( AndroidSyncSettings . isMasterSyncEnabled ( mContext ) ) { Log . d ( TAG , _CHAR Enabling sync _CHAR ) ; InvalidationController . get ( mContext ) . ensureStartedAndUpdateRegisteredTypes ( ) ; mProfileSyncService . requestStart ( ) ; AndroidSyncSettings . enableChromeSync ( mContext ) ; } }
2043	public static byte [ ] toByteArray ( URLConnection urlConn ) throws IOException { InputStream inputStream = urlConn . getInputStream ( ) ; try { return IOUtils . toByteArray ( inputStream ) ; } finally { inputStream . close ( ) ; } }
2101	public Vector2f multLocal ( Vector2f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x *= vec . x ; y *= vec . y ; return this ; }
2149	private int klattRule4 ( Element segment ) { Element syllable = getSyllable ( segment ) ; if ( ! isWordFinal ( syllable ) ) { if ( isInNucleus ( segment ) ) { return getPropertyAsInteger ( _CHAR rule4 . nucleus _CHAR ) ; } } return _NUM ; }
2166	public @ NonNull ChargeRequest . Builder restrictTendersTo ( @ NonNull Collection < TenderType > tenderTypes ) { nonNull ( tenderTypes , _CHAR tenderTypes _CHAR ) ; if ( tenderTypes . isEmpty ( ) ) { throw new IllegalArgumentException ( _CHAR Please restrict to at least one TenderType . '' ) ; } this . tenderTypes . clear ( ) ; this . tenderTypes . addAll ( tenderTypes ) ; return this ; }
2232	public static String removeLast ( String string , int characters ) { if ( string == _NULL ) { return _NULL ; } if ( characters < _NUM || characters > string . length ( ) ) { return EMPTY ; } return string . substring ( _NUM , string . length ( ) - characters ) ; }
2262	public List < DependencyGraph > dependencyTreebankTest ( ) { switch ( language ) { case ENGLISH : return DependencyGraphReader . read ( _CHAR / export / dat / udt / en / en - ud - test . conllu _CHAR , _CHAR ) ; case VIETNAMESE : return DependencyGraphReader . read ( _CHAR / export / dat / udt / vi / _NUM - test . conll _CHAR , _CHAR ) ; } return _NULL ; }
2326	protected CharArrayBuffer initBuffer ( CharArrayBuffer buffer ) { if ( buffer != _NULL ) { buffer . clear ( ) ; } else { buffer = new CharArrayBuffer ( _NUM ) ; } return buffer ; }
2347	protected Object cloneBody ( ) { if ( Body == _NULL ) { return _NULL ; } byte [ ] body = ( byte [ ] ) Body ; byte [ ] cloned = new byte [ body . length ] ; System . arraycopy ( body , _NUM , cloned , _NUM , body . length ) ; return cloned ; }
2389	public static void w ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_WARNING ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . w ( tag , msg ) ; }
2460	@ Override protected void parseOptimizationData ( OptimizationData ... optData ) { super . parseOptimizationData ( optData ) ; for ( OptimizationData data : optData ) { if ( data instanceof ObjectiveFunctionGradient ) { gradient = ( ( ObjectiveFunctionGradient ) data ) . getObjectiveFunctionGradient ( ) ; break ; } } }
2493	@ Override public int available ( ) { try { int bytes = ais . available ( ) ; return bytes / bytesPerSample ; } catch ( IOException e ) { return _NUM ; } }
2536	public VUserInfo createUser ( String name , int flags ) { try { return mService . createUser ( name , flags ) ; } catch ( RemoteException re ) { Log . w ( TAG , _CHAR Could not create a user _CHAR , re ) ; return _NULL ; } }
2581	public void clear ( IValidatable bean ) { for ( Binding b : _optComponents . values ( ) ) { b . clear ( bean ) ; } for ( Binding b : _bindings . values ( ) ) { b . clear ( bean ) ; } _modified = _BOOL ; }
2586	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
2631	private static List < Vector2D > buildQuadrilateral ( final Vector2D ... points ) { List < Vector2D > quadrilateral = new ArrayList < Vector2D > ( ) ; for ( Vector2D p : points ) { if ( ! quadrilateral . contains ( p ) ) { quadrilateral . add ( p ) ; } } return quadrilateral ; }
2650	public final TableSubHeader render ( ) { TableSubHeader element = getElement ( ) ; if ( element == _NULL ) { element = new TableSubHeader ( this ) ; setElement ( element ) ; } render ( element ) ; return element ; }
2679	public static void v ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_VERBOSE ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . v ( tag , msg ) ; }
2749	public void toggleSelection ( final int position ) { if ( mSelectedItems . get ( position , _BOOL ) ) { mSelectedItems . delete ( position ) ; } else { mSelectedItems . put ( position , _BOOL ) ; } notifyItemChanged ( position ) ; }
2766	@ Override public boolean containsAll ( Collection < ? > collection ) { Iterator < ? > it = collection . iterator ( ) ; while ( it . hasNext ( ) ) { if ( ! contains ( it . next ( ) ) ) { return _BOOL ; } } return _BOOL ; }
2813	@ Override public String toString ( ) { StringBuilder builder = new StringBuilder ( super . toString ( ) ) ; builder . append ( _CHAR ( _CHAR ) ; builder . append ( new String ( magicNumbers ) ) ; builder . append ( _CHAR , _CHAR ) ; builder . append ( this . byteOffset ) ; builder . append ( _CHAR ) _CHAR ) ; return builder . toString ( ) ; }
2851	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
2860	private boolean isBeforeParent ( final BSPTree < Euclidean1D > node ) { final BSPTree < Euclidean1D > parent = node . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return node == childBefore ( parent ) ; } }
2879	public boolean write ( byte [ ] bytes , int offset , int size ) { try { os . write ( bytes , offset , size ) ; } catch ( IOException ioe ) { return _BOOL ; } return _BOOL ; }
2888	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( name , wildcard , caseSensitivity ) ) { return _BOOL ; } } return _BOOL ; }
2931	public M continueBest ( IMoveGenerator < M , G > generator ) { evaluationsPerformed = _NUM ; try { treeSearchLoop ( generator ) ; } catch ( TimeoutException e ) { } return returnCurrentBest ( rootNodes . get ( _NUM ) . father . getGame ( ) . currentPlayer ( ) ) ; }
2975	void pin ( ) { internalLock . writeLock ( ) . lock ( ) ; try { pins ++ ; } finally { internalLock . writeLock ( ) . unlock ( ) ; } }
3007	public static boolean isFileOlder ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileOlder ( file , reference . lastModified ( ) ) ; }
3030	@ Override protected void checkDuplicateValues ( ) { if ( contains ( ) ) { String code = _CHAR DuplicateUnique _CHAR ; String value = toString ( fLocalValues ) ; String eName = fIdentityConstraint . getElementName ( ) ; String cName = fIdentityConstraint . getIdentityConstraintName ( ) ; reportSchemaError ( code , new Object [ ] { value , eName , cName } ) ; } }
3031	public boolean removeAll ( int [ ] array ) { boolean changed = _BOOL ; for ( int i = array . length ; i -- > _NUM ; ) { if ( remove ( array [ i ] ) ) { changed = _BOOL ; } } return changed ; }
3032	private boolean canChangeNickname ( Legion legion , int targetObjectId , String newNickname ) { if ( ! isValidNickname ( newNickname ) ) { return _BOOL ; } else if ( ! legion . isMember ( targetObjectId ) ) { return _BOOL ; } return _BOOL ; }
3055	private int findOptionPanel ( Box box , FieldPanel panel ) { int index ; for ( index = _NUM ; index < box . getComponentCount ( ) ; index ++ ) { if ( box . getComponent ( index ) == panel ) { return index ; } } return - _NUM ; }
3145	public static String slurpURLNoExceptions ( String path ) { try { return slurpURL ( path ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
3159	private void populateFilter ( FilterNode node , Filter filter ) { FilterConfigInterface filterConfig = _NULL ; if ( filter != _NULL ) { filterConfig = FilterManager . getInstance ( ) . getFilterConfig ( filter ) ; } node . setFilter ( filter , filterConfig ) ; model . reload ( ) ; displayResult ( ) ; }
3165	public void notifyFileShown ( @ NotNull TextEditor editor , boolean renderImmediately ) { if ( renderImmediately ) { myRenderImmediately = _BOOL ; } processFileEditorChange ( editor ) ; if ( renderImmediately ) { myToolWindowUpdateQueue . sendFlush ( ) ; } }
3181	V readValueUnderLock ( IHashEntry < K , V > e ) { lock ( ) ; try { return _h . value ( e ) ; } finally { unlock ( ) ; } }
3185	public boolean implementsInterface ( String name ) { checkLevel ( HIERARCHY ) ; Iterator < SootClass > interfaceIt = getInterfaces ( ) . iterator ( ) ; while ( interfaceIt . hasNext ( ) ) { SootClass SootClass = interfaceIt . next ( ) ; if ( SootClass . getName ( ) . equals ( name ) ) return _BOOL ; } return _BOOL ; }
3236	@ Override public Node replaceChild ( Node newChild , Node oldChild ) throws DOMException { ownerDocument . replacingNode ( this ) ; internalInsertBefore ( newChild , oldChild , _BOOL ) ; if ( newChild != oldChild ) { internalRemoveChild ( oldChild , _BOOL ) ; } ownerDocument . replacedNode ( this ) ; return oldChild ; }
3361	public double optDouble ( String key , double defaultValue ) { try { Object o = opt ( key ) ; return o instanceof Number ? ( ( Number ) o ) . doubleValue ( ) : new Double ( ( String ) o ) . doubleValue ( ) ; } catch ( Exception e ) { return defaultValue ; } }
3363	public void removeSubFilterWithTag ( String tag ) { Iterator < SubFilter > iterator = subFilters . iterator ( ) ; while ( iterator . hasNext ( ) ) { SubFilter subFilter = iterator . next ( ) ; if ( subFilter . getTag ( ) . equals ( tag ) ) { iterator . remove ( ) ; } } }
3578	public static Plugin toBukkit ( cn . nukkit . plugin . Plugin plugin ) { if ( plugin == _NULL ) { return _NULL ; } if ( plugin instanceof PokkitPlugin ) { return ( ( PokkitPlugin ) plugin ) . bukkit ; } return new NukkitPluginWrapper ( plugin ) ; }
3592	private Map < Integer , Fraction > generateAbsent ( ) { Map < Integer , Fraction > generated = new HashMap < Integer , Fraction > ( ) ; do { generated . putAll ( generate ( ) ) ; for ( Integer key : javaMap . keySet ( ) ) generated . remove ( key ) ; } while ( generated . size ( ) < _NUM ) ; return generated ; }
3615	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
3638	@ Override public boolean implementsInterface ( @ Nonnull String iface ) { if ( getInterfaces ( ) . containsKey ( iface ) ) { return _BOOL ; } if ( ! interfacesFullyResolved ) { throw new UnresolvedClassException ( _CHAR Interfaces for class % s not fully resolved '' , getType ( ) ) ; } return _BOOL ; }
3662	private String splitNameWithoutGzipExtension ( String split ) throws IOException { if ( split == _NULL ) { throw new IOException ( _CHAR Path is not a split _CHAR ) ; } if ( split . endsWith ( _CHAR . gz _CHAR ) ) { return split . substring ( _NUM , split . length ( ) - _NUM ) ; } return split ; }
3666	public Body retrieveActiveBody ( ) { declaringClass . checkLevel ( SootClass . BODIES ) ; if ( declaringClass . isPhantomClass ( ) ) throw new RuntimeException ( _CHAR can not get resident body for phantom class : '' + getSignature ( ) + _CHAR ; maybe you want to call c . setApplicationClass ( ) on this class ! _CHAR ) ; if ( ! hasActiveBody ( ) ) { setActiveBody ( this . getBodyFromMethodSource ( _CHAR jb _CHAR ) ) ; ms = _NULL ; } return getActiveBody ( ) ; }
3756	public IObjectInfo < T > add ( T subject ) { lock . lock ( ) ; try { return store_impl ( subject ) ; } finally { lock . unlock ( ) ; } }
3801	private static Integer fetchDruidResponseTimeOut ( String timeOutSysProp ) { try { return SYSTEM_CONFIG . getIntProperty ( timeOutSysProp , DRUID_REQUEST_TIMEOUT_DEFAULT ) ; } catch ( SystemConfigException e ) { LOG . error ( e . getMessage ( ) , e ) ; throw new RuntimeException ( e . getMessage ( ) , e ) ; } }
3824	public static float asin ( float fValue ) { if ( - _NUM . _NUM < fValue ) { if ( fValue < _NUM . _NUM ) { return ( float ) Math . asin ( fValue ) ; } return HALF_PI ; } return - HALF_PI ; }
3843	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( MISSING_VALUE . equals ( get ( i ) ) ) { count ++ ; } } return count ; }
3878	@ Override public AbstractScannedResult scanBlocklet ( BlocksChunkHolder blocksChunkHolder ) throws QueryExecutionException { try { fillScannedResult ( blocksChunkHolder ) ; } catch ( FilterUnsupportedException e ) { throw new QueryExecutionException ( e . getMessage ( ) ) ; } return scannedResult ; }
3894	private void refreshProject ( ) { String projectPath = myProject . getBasePath ( ) ; if ( projectPath != _NULL ) { VirtualFile rootDir = LocalFileSystem . getInstance ( ) . findFileByPath ( projectPath ) ; if ( rootDir != _NULL && rootDir . isDirectory ( ) ) { rootDir . refresh ( _BOOL , _BOOL ) ; } } }
3955	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } }
3986	public static boolean isFileOlder ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) < timeMillis ; }
4018	private void handleReturnType ( String desc ) { Type ret = Type . getReturnType ( desc ) ; if ( ret . getSort ( ) == Type . VOID ) { pop ( ) ; } else { ByteCodeUtils . unbox ( this , ret ) ; } }
4092	private Json convertFile ( File file ) { try { return Json . read ( file . toURI ( ) . toURL ( ) ) ; } catch ( MalformedURLException e ) { LOG . warn ( _CHAR Problem reading Json file _CHAR + file . getPath ( ) ) ; return Json . object ( ) ; } }
4116	public static boolean isPotentiallyEncryptedBytes ( byte [ ] bytes ) { checkNotNull ( bytes , _CHAR bytes _CHAR ) ; try { return bytes . length != _NUM && bytes . length % Cipher . getInstance ( CIPHER ) . getBlockSize ( ) == _NUM ; } catch ( Throwable t ) { throw Throwables . propagate ( t ) ; } }
4201	public void onDestroy ( ) { if ( ! players . isEmpty ( ) ) { onLastPlayerReleased ( ) ; } for ( AudioPlayer audio : this . players . values ( ) ) { audio . destroy ( ) ; } this . players . clear ( ) ; }
4218	public static String [ ] toStringArray ( Object value ) { if ( value instanceof String [ ] ) { return ( String [ ] ) value ; } else { Object [ ] valueArray = ( Object [ ] ) value ; return Arrays . stream ( valueArray ) . map ( _NULL ) . toArray ( _NULL ) ; } }
4220	public void addNewFeatureTypeStyle ( FeatureTypeStyle featureTypeStyle ) { if ( this . symbolData . getStyle ( ) == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR style == _NULL _CHAR ) ; } else { List < FeatureTypeStyle > ftsList = this . symbolData . getStyle ( ) . featureTypeStyles ( ) ; ftsList . add ( featureTypeStyle ) ; } }
4232	protected void updateWidgetEnablements ( ) { if ( useUrlLabelButton . getSelection ( ) ) { customLabelText . setEnabled ( _BOOL ) ; } else { customLabelText . setEnabled ( _BOOL ) ; } validateFields ( ) ; }
4244	public boolean recomputeValue ( ) { if ( mResourceValue != _NULL ) { mResourceValue = _NULL ; return _BOOL ; } else { return _BOOL ; } }
4294	public static java . sql . Timestamp toTimestamp ( String dateTime ) { java . util . Date newDate = toDate ( dateTime ) ; if ( newDate != _NULL ) { return new java . sql . Timestamp ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
4309	public String process ( Item item ) throws ProcessException { int v = Integer . parseInt ( item . getFeatures ( ) . getString ( _CHAR name _CHAR ) ) ; if ( ( v > _NUM ) && ( v < _NUM ) ) { return _CHAR _NUM _CHAR ; } else { return _CHAR _NUM _CHAR ; } }
4321	public void reload ( ) { if ( delays != _NULL && delays . size ( ) > _NUM ) { for ( Future < ? > delay : delays ) { delay . cancel ( _BOOL ) ; } } announcements . clear ( ) ; load ( ) ; }
4349	public static boolean wildcardSimilar ( ItemStack template , ItemStack stranger ) { if ( template == _NULL || stranger == _NULL ) { return template == stranger ; } if ( template . getItemDamage ( ) == WILDCARD_DAMAGE ) { return template . getItem ( ) == stranger . getItem ( ) ; } return similar ( template , stranger ) ; }
4383	public static void init ( ) { Locale _locale = locale ; if ( _locale == _NULL ) { _locale = Locale . getDefault ( ) ; } domResourceBundle = ResourceBundle . getBundle ( _CHAR mf . org . apache . xerces . impl . msg . DOMMessages _CHAR , _locale ) ; serResourceBundle = ResourceBundle . getBundle ( _CHAR mf . org . apache . xerces . impl . msg . XMLSerializerMessages _CHAR , _locale ) ; xmlResourceBundle = ResourceBundle . getBundle ( _CHAR mf . org . apache . xerces . impl . msg . XMLMessages _CHAR , _locale ) ; }
4393	public void createData ( ) { if ( shouldCreateData ( ) ) { createSystemUser ( ) ; createDefaultUser ( ) ; } else { logger . debug ( _CHAR Data already present in the database , do n _CHAR_CHAR ) ; } }
4398	public boolean exactMatchExists ( String location ) { Set < String > keys = repositories . keySet ( ) ; for ( String url : keys ) { if ( url . equals ( location ) ) { return _BOOL ; } } return _BOOL ; }
4427	@ Override public void chooseNewSLD ( ) { NewSLDPanel panel = new NewSLDPanel ( ) ; List < SLDDataInterface > newSLDList = panel . showDialog ( Controller . getInstance ( ) . getFrame ( ) ) ; if ( newSLDList != _NULL ) { if ( this . loadSLDString ( _BOOL , _BOOL , newSLDList ) ) { uiMgr . populateUI ( _NUM ) ; } } }
4449	private static BigDecimal sanitize ( BigInteger value , int signum ) { if ( signum == _NUM || value == _NULL ) { return ZERO ; } if ( signum > _NUM ) { return new BigDecimal ( value ) ; } return new BigDecimal ( value . negate ( ) ) ; }
4458	public int key ( ) throws ConcurrentModificationException , NoSuchElementException { if ( referenceCount != count ) { throw new ConcurrentModificationException ( ) ; } if ( current < _NUM ) { throw new NoSuchElementException ( ) ; } return keys [ current ] ; }
4471	public void addSet ( String name , TupleSet set ) { if ( hasSet ( name ) ) { throw new IllegalArgumentException ( _CHAR Name already in use : _CHAR + name ) ; } m_map . put ( name , set ) ; m_sets . add ( set ) ; m_count += set . getTupleCount ( ) ; if ( m_lstnr != _NULL ) set . addTupleSetListener ( m_lstnr ) ; }
4474	public final int enableKey ( ) { if ( packetKey != _NULL ) { throw new KeyAlreadySetException ( ) ; } int key = Rnd . nextInt ( ) ; packetKey = new EncryptionKeyPair ( key ) ; log . debug ( _CHAR new encrypt key : _CHAR + packetKey ) ; return ( key ^ _NUM ) + _NUM ; }
4477	private void endAllActions ( ) { this . selectBodyAction . end ( ) ; this . editBodyAction . end ( ) ; this . selectFixtureAction . end ( ) ; this . moveBodyAction . end ( ) ; this . rotateBodyAction . end ( ) ; this . moveFixtureAction . end ( ) ; this . rotateFixtureAction . end ( ) ; }
4507	public static boolean isClassSupport ( String clzName ) { try { Class . forName ( clzName ) ; return _BOOL ; } catch ( ClassNotFoundException e ) { return _BOOL ; } }
4552	public Resource find ( String type , String id ) throws ResourceNotFoundException { if ( index != _NULL ) { final String key = indexName ( type , id ) ; if ( index . containsKey ( key ) ) { return index . get ( key ) ; } } throw new ResourceNotFoundException ( type , id ) ; }
4553	public void onLongPress ( long time , float x , float y ) { if ( mOverviewAnimationType == OverviewAnimationType . NONE ) { mLongPressSelected = getTabIndexAtPositon ( x , y ) ; if ( mLongPressSelected >= _NUM ) { startAnimation ( time , OverviewAnimationType . VIEW_MORE , mLongPressSelected , _BOOL ) ; mEvenOutProgress = _NUM . _NUM ; } } }
4592	public static String extractHostId ( String hostId ) { AssertUtil . assertNotNull ( hostId , _CHAR hostId _CHAR ) ; int idx = hostId . indexOf ( HOST_ID_TENANT_SEPARATOR ) ; String id = hostId ; if ( idx != - _NUM ) { id = hostId . substring ( idx + HOST_ID_TENANT_SEPARATOR . length ( ) ) ; } return id ; }
4593	private void incrementCounter ( Class < ? extends Joint > clazz ) { Integer n = N . get ( clazz ) ; if ( n == _NULL ) { N . put ( clazz , _NUM ) ; } else { N . put ( clazz , n . intValue ( ) + _NUM ) ; } }
4596	public void clean ( ) { clear ( ) ; ritems = new VisualItem [ DEFAULT_SIZE ] ; rscores = new int [ DEFAULT_SIZE ] ; pitems = new VisualItem [ DEFAULT_SIZE ] ; pscores = new int [ DEFAULT_SIZE ] ; items_buf = _NULL ; scores_buf = _NULL ; }
4638	private static void checkPermissions ( Permissions perms ) { SecurityManager sm = System . getSecurityManager ( ) ; if ( sm != _NULL ) { Enumeration en = perms . elements ( ) ; while ( en . hasMoreElements ( ) ) { sm . checkPermission ( ( Permission ) en . nextElement ( ) ) ; } } }
4642	public WordCloudDrawer createInstance ( ) { final WordCloudDrawer drawer = new WordCloudDrawer ( ) ; drawer . setViewer ( viewer ) ; drawer . setChartData ( new DefaultChartData ( ) ) ; drawer . setClass2HigherClassMapper ( class2HigherClassMapper ) ; drawer . setSeriesLabelGetter ( seriesLabelGetter ) ; drawer . setExecutorService ( executorService ) ; return drawer ; }
4648	public void onAccuracyChanged ( Sensor sensor , int accuracy ) { if ( sensor . getType ( ) != Sensor . TYPE_ACCELEROMETER ) { return ; } if ( this . status == AccelListener . STOPPED ) { return ; } this . accuracy = accuracy ; }
4708	public void updateView ( String what ) { this . uptodate = _BOOL ; if ( this . doClear ) { this . doClear = _BOOL ; } commandManager . updateEnableState ( ) ; this . setTitle ( ) ; this . uptodate = _BOOL ; }
4727	public double minValue ( ) { Iterator iIter = asTreeMap ( ) . values ( ) . iterator ( ) ; Double dMin = Double . POSITIVE_INFINITY ; while ( iIter . hasNext ( ) ) { Double dVal = ( Double ) iIter . next ( ) ; dMin = ( dVal < dMin ) ? dVal : dMin ; } return dMin ; }
4733	public static String slurpGBURLNoExceptions ( URL u ) { try { return slurpGBURL ( u ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
4784	public void onNewIntent ( Intent intent ) { if ( mInitializationComplete ) { mActivityDelegate . onNewIntentWithNative ( intent ) ; } else { if ( mPendingNewIntents == _NULL ) mPendingNewIntents = new ArrayList < Intent > ( _NUM ) ; mPendingNewIntents . add ( intent ) ; } }
4787	public static String toString ( final ByteBuffer buf ) { buf . flip ( ) ; final byte arr [ ] = new byte [ buf . remaining ( ) ] ; buf . get ( arr ) ; String ret = toString ( arr ) ; buf . flip ( ) ; buf . put ( arr ) ; return ret ; }
4856	public static float px2dp ( float px ) { if ( mMetrics == _NULL ) { Log . e ( _CHAR MPChartLib - Utils _CHAR , _CHAR Utils NOT INITIALIZED . You need to call Utils . init ( ... ) at least once before _CHAR + _CHAR calling Utils . px2dp ( ... ) . Otherwise conversion does not _CHAR + _CHAR take place . '' ) ; return px ; } DisplayMetrics metrics = mMetrics ; float dp = px / ( metrics . densityDpi / _NUM ) ; return dp ; }
4863	public Location add ( Location vec ) { if ( vec == _NULL || vec . getWorld ( ) != getWorld ( ) ) { throw new IllegalArgumentException ( _CHAR Can not add Locations of differing worlds _CHAR ) ; } x += vec . x ; y += vec . y ; z += vec . z ; return this ; }
4864	public byte [ ] compress ( int [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
4931	public int decrement ( int val ) { if ( val < _NUM ) { return increment ( - val ) ; } lock . lock ( ) ; int newValue = ( value -= val ) ; lock . unlock ( ) ; return newValue ; }
4945	public void loadPages ( ) { if ( optimalPageWidth == _NUM || optimalPageHeight == _NUM ) { return ; } renderingAsyncTask . removeAllTasks ( ) ; cacheManager . makeANewSet ( ) ; pagesLoader . loadPages ( ) ; redraw ( ) ; }
4967	public TIntArrayList grep ( TIntProcedure condition ) { TIntArrayList list = new TIntArrayList ( ) ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( condition . execute ( _data [ i ] ) ) { list . add ( _data [ i ] ) ; } } return list ; }
4990	boolean remove ( BinarySearchTreeNode < E > node ) { if ( node == _NULL ) return _BOOL ; if ( this . root == _NULL ) return _BOOL ; if ( this . contains ( node ) ) { this . removeNode ( node ) ; return _BOOL ; } return _BOOL ; }
5029	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
5055	public static void handleError ( String errorMessage , SimpleMethod method , Element element ) throws ValidationException { ValidationException e = new ValidationException ( errorMessage , method , element ) ; if ( strictOn ( ) ) { throw e ; } else { Debug . logWarning ( e . getMessage ( ) , module ) ; } }
5062	public void verifyDecisionTablesDoNotShareKeys ( Collection < DecisionTableEntity > decisionTables ) { Set < String > keySet = new LinkedHashSet < String > ( ) ; for ( DecisionTableEntity decisionTable : decisionTables ) { if ( keySet . contains ( decisionTable . getKey ( ) ) ) { throw new ActivitiDmnException ( _CHAR The deployment contains decision tables with the same key ( decision id attribute ) , this is not allowed _CHAR ) ; } keySet . add ( decisionTable . getKey ( ) ) ; } }
5076	public static byte [ ] toByteArray ( URLConnection urlConn ) throws IOException { InputStream inputStream = urlConn . getInputStream ( ) ; try { return IOUtils . toByteArray ( inputStream ) ; } finally { inputStream . close ( ) ; } }
5175	private Properties readSettings ( ) throws ProxyException { try { return this . settingsParser . parseSettings ( ) ; } catch ( IOException e ) { Logger . log ( getClass ( ) , LogLevel . ERROR , _CHAR Ca n _CHAR_CHAR , e ) ; throw new ProxyException ( e ) ; } }
5216	protected void calcYValueCount ( ) { mYValCount = _NUM ; if ( mDataSets == _NULL ) return ; int count = _NUM ; for ( int i = _NUM ; i < mDataSets . size ( ) ; i ++ ) { count += mDataSets . get ( i ) . getEntryCount ( ) ; } mYValCount = count ; }
5260	@ Override public void close ( ) { getConceptLog ( ) . clearTransaction ( ) ; try { graph . close ( ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
5324	private void pop ( final int elements ) { if ( outputStackTop >= elements ) { outputStackTop -= elements ; } else { owner . inputStackTop -= elements - outputStackTop ; outputStackTop = _NUM ; } }
5336	public String toString ( ) { final IOutputWriter w = new OutputWriterHumanReadable ( new StringWriter ( ) ) ; try { write ( w , _NULL ) ; } catch ( IOException e ) { } return w . toString ( ) ; }
5347	public static void i ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_INFO ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . i ( tag , msg ) ; }
5365	public void start ( ) { doGarbageCollecting ( ) ; startTime = nanoTime ( ) ; if ( hasStarted ) throw new RuntimeException ( _CHAR timer _CHAR + name + _CHAR has already been started ! _CHAR ) ; hasStarted = _BOOL ; if ( ! G . v ( ) . Timer_isGarbageCollecting ) { G . v ( ) . Timer_outstandingTimers . add ( this ) ; } }
5368	public boolean closeDatabase ( String dbfile ) { if ( databases . get ( dbfile ) != _NULL ) { SQLiteDatabase db = ( SQLiteDatabase ) databases . get ( dbfile ) ; db . close ( ) ; databases . remove ( dbfile ) ; return _BOOL ; } return _BOOL ; }
5493	public Set < Speaker > find ( final Speaker speaker ) { final ArrayList < Speaker > speakers = new ArrayList < > ( ) ; speakers . addAll ( this . speakers . values ( ) ) ; CollectionUtils . filter ( speakers , _NULL ) ; if ( ! speakers . isEmpty ( ) ) { return new HashSet < > ( speakers ) ; } return Collections . emptySet ( ) ; }
5573	@ Override public long skip ( long ln ) throws IOException { try { return in . skip ( ln ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _NUM ; } }
5592	public INDArray toRaveledTensor ( BufferedImage image ) { try { image = scalingIfNeed ( image , _BOOL ) ; return toINDArrayBGR ( image ) . ravel ( ) ; } catch ( Exception e ) { throw new RuntimeException ( _CHAR Unable to load image _CHAR , e ) ; } }
5608	public void WaitUntilAllViewersAreUptoDate ( ) { while ( ! isAllViewersUptodate ( ) ) { try { Thread . sleep ( _NUM ) ; } catch ( Exception e ) { } } }
5696	public static long factorial ( final int n ) { if ( n < _NUM ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR must have n >= _NUM for n ! , got n = { _NUM } _CHAR , n ) ; } if ( n > _NUM ) { throw new ArithmeticException ( _CHAR factorial value is too large to fit in a long _CHAR ) ; } return FACTORIALS [ n ] ; }
5702	public void appendError ( final String errorMessage ) { if ( this . errorMessage == _NULL ) { this . errorMessage = errorMessage ; } else { this . errorMessage += ( _CHAR \ n _CHAR + errorMessage ) ; } state = CHANGE_STATE . FAIL ; }
5708	public double [ ] unCompress ( byte [ ] compInput ) { try { return Snappy . uncompressDoubleArray ( compInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return _NULL ; }
5711	public static void log ( ) { RequestLog current = RLOG . get ( ) ; if ( current . info == _NULL ) { LOG . warn ( _CHAR Attempted to log while request log object was uninitialized '' ) ; return ; } LOG . info ( export ( ) ) ; current . clear ( ) ; }
5722	public void resetColor ( ) { if ( token . maxEv ) { setBackgroundColor ( maxEvColor ) ; } else { setBackgroundColor ( normalBackgroundColor ) ; } setTextColor ( textColor ) ; }
5728	public Node < K , V > first ( ) { Node < K , V > node = this ; Node < K , V > child = node . left ; while ( child != _NULL ) { node = child ; child = node . left ; } return node ; }
5739	private void addInsideTouching ( final SubHyperplane < S > sub , final List < BSPTree < S >> splitters ) { if ( insideTouching == _NULL ) { insideTouching = sub ; } else { insideTouching = insideTouching . reunite ( sub ) ; } insideSplitters . addAll ( splitters ) ; }
5743	public static Bitmap rotateBitmap ( Bitmap bitmap , int degrees ) { if ( bitmap != _NULL ) { Matrix m = new Matrix ( ) ; m . postRotate ( degrees ) ; bitmap = Bitmap . createBitmap ( bitmap , _NUM , _NUM , bitmap . getWidth ( ) , bitmap . getHeight ( ) , m , _BOOL ) ; return bitmap ; } return _NULL ; }
5764	public static String slurpFileNoExceptions ( String filename ) { try { return slurpFile ( filename ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
5766	public static String commentIsValid ( String comment ) { if ( comment == _NULL || comment . trim ( ) . isEmpty ( ) ) { return _NULL ; } if ( comment . length ( ) > VALUE_MAX_LENGTH ) { return _CHAR comment_length_greater_than_max_length _CHAR ; } return _NULL ; }
5816	public void print ( ) { System . out . println ( _CHAR mean : _CHAR ) ; mean . print ( _NUM , _NUM ) ; System . out . println ( _CHAR covariance matrix : _CHAR ) ; covariances . print ( _NUM , _NUM ) ; System . out . println ( _CHAR component weight : _CHAR ) ; System . out . println ( componentWeight ) ; System . out . println ( _CHAR --------------------------------------------- _CHAR ) ; }
5849	@ Override public void flush ( ) { if ( _line . length ( ) > _NUM || _text . length ( ) > _NUM ) breakLine ( ) ; try { _writer . flush ( ) ; } catch ( IOException except ) { if ( _exception == _NULL ) _exception = except ; } }
5854	@ Override public Expression createExpression ( FunctionName functionName ) { if ( functionName == _NULL ) { return _NULL ; } List < Expression > parameters = _NULL ; Literal fallback = _NULL ; Function function = functionFactory . function ( functionName . getFunctionName ( ) , parameters , fallback ) ; return function ; }
5925	private void analyzeAssociations ( DataSupport baseObj ) { try { Collection < AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName ( ) ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; } catch ( Exception e ) { throw new DataSupportException ( e . getMessage ( ) ) ; } }
5960	private void solveConstraints ( ) { IWorklist ptaList = worklist ; while ( ptaList . has_job ( ) ) { IVarAbstraction pn = ptaList . next ( ) ; pn . do_before_propagation ( ) ; pn . propagate ( this , ptaList ) ; pn . do_after_propagation ( ) ; } }
5968	private int findMaxY ( WeightedObservedPoint [ ] points ) { int maxYIdx = _NUM ; for ( int i = _NUM ; i < points . length ; i ++ ) { if ( points [ i ] . getY ( ) > points [ maxYIdx ] . getY ( ) ) { maxYIdx = i ; } } return maxYIdx ; }
5992	public final void addAlarmValues ( final List < AlarmValueImpl > alarmValues ) { if ( alarmValues != _NULL ) { for ( AlarmValueImpl alarmValue : alarmValues ) { if ( alarmValue != _NULL ) { addAlarmValue ( alarmValue ) ; } } } }
6000	public static Object [ ] ordinalArray ( TupleSet tuples , String field , Comparator cmp ) { if ( tuples instanceof Table ) { ColumnMetadata md = ( ( Table ) tuples ) . getMetadata ( field ) ; return md . getOrdinalArray ( ) ; } else { return ordinalArray ( tuples . tuples ( ) , field , cmp ) ; } }
6001	public EntityQuery filterByDate ( Timestamp moment , String ... filterByFieldName ) { this . filterByDate = _BOOL ; this . filterByDateMoment = moment ; if ( filterByFieldName . length % _NUM != _NUM ) { throw new IllegalArgumentException ( _CHAR You must pass an even sized array to this method , each pair should represent a from date field name and a thru date field name _CHAR ) ; } this . filterByFieldNames = Arrays . asList ( filterByFieldName ) ; return this ; }
6034	public String localName ( String name ) { int colon = name . indexOf ( _CHAR ) ; if ( colon == - _NUM ) { return name ; } else { return name . substring ( colon + _NUM ) . intern ( ) ; } }
6036	public Object decode ( Object object ) throws Exception { try { char [ ] charArray = object instanceof String ? ( ( String ) object ) . toCharArray ( ) : ( char [ ] ) object ; return decodeHex ( charArray ) ; } catch ( ClassCastException e ) { throw new Exception ( e . getMessage ( ) , e ) ; } }
6047	public int key ( ) throws ConcurrentModificationException , NoSuchElementException { if ( referenceCount != count ) { throw new ConcurrentModificationException ( ) ; } if ( current < _NUM ) { throw new NoSuchElementException ( ) ; } return keys [ current ] ; }
6087	public static void i ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_INFO ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . i ( tag , msg ) ; }
6097	@ Override public void reset ( XMLComponentManager componentManager ) throws XNIException { try { fContinueAfterFatalError = componentManager . getFeature ( CONTINUE_AFTER_FATAL_ERROR ) ; } catch ( XNIException e ) { fContinueAfterFatalError = _BOOL ; } fErrorHandler = ( XMLErrorHandler ) componentManager . getProperty ( ERROR_HANDLER ) ; }
6197	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
6212	public void populateColourField ( FieldIdEnum fieldId , Expression colour ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( fieldConfig != _NULL ) { fieldConfig . populateExpression ( colour ) ; } }
6217	private void populatePrevScanNarrowing ( ) { if ( ScanContainer . scanContainer . isScanRefinable ( ) ) { refine_by_last_scan . setVisibility ( View . VISIBLE ) ; exResPrevScan . setText ( String . format ( getString ( R . string . last_scan ) , ScanContainer . scanContainer . getPrevScanName ( ) ) ) ; } else { refine_by_last_scan . setVisibility ( View . GONE ) ; } }
6225	@ Override public void onRequestPermissionsResult ( int requestCode , String permissions [ ] , int [ ] grantResults ) { try { cordovaInterface . onRequestPermissionResult ( requestCode , permissions , grantResults ) ; } catch ( JSONException e ) { LOG . d ( TAG , _CHAR JSONException : Parameters fed into the method are not valid _CHAR ) ; e . printStackTrace ( ) ; } }
6266	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
6271	private void removeReadData ( final int size ) { if ( ! persistenceManager . getFallbackManager ( ) . removeReadData ( size ) ) { persistenceManager . getAlarmSender ( ) . fileNotReachable ( ACTIVATED , persistenceManager . getFallbackManager ( ) . getFallbackFileController ( ) . getDataFile ( ) ) ; FALLBACK_LOG . error ( _CHAR commitFallbackCommandLogs ( ) - CommandTags can not be removed from the fallback log file _CHAR ) ; } else { persistenceManager . getAlarmSender ( ) . fileNotReachable ( DOWN , persistenceManager . getFallbackManager ( ) . getFallbackFileController ( ) . getDataFile ( ) ) ; } }
6274	public static boolean isCraftingSkill ( int skillId ) { Iterator < Integer > it = craftingSkillIds . iterator ( ) ; while ( it . hasNext ( ) ) { if ( it . next ( ) == skillId ) { return _BOOL ; } } return _BOOL ; }
6294	public long increaseEquippedItemCount ( Item item , long count ) { if ( item . getItemTemplate ( ) . getCategory ( ) != ItemCategory . SHARD ) { return count ; } long leftCount = item . increaseItemCount ( count ) ; ItemPacketService . updateItemAfterInfoChange ( owner , item , ItemUpdateType . STATS_CHANGE ) ; setPersistentState ( PersistentState . UPDATE_REQUIRED ) ; return leftCount ; }
6359	public void updateColourRamp ( ColourRampData data ) { if ( data != _NULL ) { for ( ColourMapData row : colourMapList ) { Expression colour = data . getColourRamp ( ) . getColour ( data , row . getQuantity ( ) , data . reverseColours ( ) ) ; row . setColour ( colour ) ; } this . fireTableDataChanged ( ) ; } }
6399	private int klattRule5 ( Element segment ) { Element token = getToken ( segment ) ; if ( isPolysyllabic ( token ) ) { if ( isInNucleus ( segment ) ) { return getPropertyAsInteger ( _CHAR rule5 . nucleus _CHAR ) ; } } return _NUM ; }
6447	public boolean matches ( Line . Info info ) { if ( ! ( super . matches ( info ) ) ) { return _BOOL ; } if ( ! ( name . equals ( ( ( Info ) info ) . getName ( ) ) ) ) { return _BOOL ; } return isSource == ( ( Info ) info ) . isSource ( ) ; }
6516	private static void closeSafe ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( IOException ignored ) { } } }
6553	@ PreDestroy public void stop ( ) { if ( leaderLock != _NULL ) { leaderLock . release ( ) ; } if ( scheduler != _NULL ) { scheduler . shutdownNow ( ) ; } isLeader = _BOOL ; }
6565	public String upload_appender_file1 ( String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { String parts [ ] = this . upload_appender_file ( local_filename , file_ext_name , meta_list ) ; if ( parts != _NULL ) { return parts [ _NUM ] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts [ _NUM ] ; } else { return _NULL ; } }
6570	public static PageRespJson buildFailureResponse ( String errorMsg , Integer reqId ) { PageRespJson respJson = new PageRespJson ( ) ; respJson . setCode ( ResponseCode . FAILURE . getCode ( ) ) ; respJson . setMsg ( errorMsg ) ; respJson . setReqId ( reqId ) ; respJson . setRecordsTotal ( _NUM ) ; respJson . setRecordsFiltered ( _NUM ) ; return respJson ; }
6582	private static void writeln ( String line ) { try { writer . write ( line ) ; writer . write ( _CHAR \ n _CHAR ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
6625	private void skipToEndOfLine ( ) { for ( ; pos < in . length ( ) ; pos ++ ) { char c = in . charAt ( pos ) ; if ( c == _CHAR || c == _CHAR ) { pos ++ ; break ; } } }
6784	private static int clampX ( int x , ConstraintWidget base ) { if ( x < base . getX ( ) ) { x = base . getX ( ) ; } else if ( x > base . getRight ( ) ) { x = base . getRight ( ) ; } return x ; }
6847	private static void determineFirstDigit ( StringBuilder resultString , int lgPatternFound ) throws NotFoundException { for ( int d = _NUM ; d < _NUM ; d ++ ) { if ( lgPatternFound == FIRST_DIGIT_ENCODINGS [ d ] ) { resultString . insert ( _NUM , ( char ) ( _CHAR + d ) ) ; return ; } } throw NotFoundException . getNotFoundInstance ( ) ; }
6915	public void stop ( ) { running = _BOOL ; try { client . close ( ) ; } catch ( IOException exception ) { LOG . error ( _CHAR Exception while closing EtcdFlagFieldUpdater . '' , exception ) ; } }
6948	public static void hideKeyboard ( View view ) { try { InputMethodManager imm = ( InputMethodManager ) view . getContext ( ) . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; imm . hideSoftInputFromWindow ( view . getWindowToken ( ) , _NUM ) ; } catch ( RuntimeException e ) { Timber . w ( e , _CHAR Error on hideKeyboard ( ) _CHAR ) ; } }
6951	private static boolean resolveBoolean ( Context context , @ AttrRes int attr , boolean fallback ) { TypedArray a = context . getTheme ( ) . obtainStyledAttributes ( new int [ ] { attr } ) ; try { return a . getBoolean ( _NUM , fallback ) ; } finally { a . recycle ( ) ; } }
7004	public void grant ( Class cl , Principal [ ] principals , Permission [ ] permissions ) { Policy p = getCurrentSubPolicy ( ) ; if ( p instanceof DynamicPolicy ) { ( ( DynamicPolicy ) p ) . grant ( cl , principals , permissions ) ; } else { throw new UnsupportedOperationException ( _CHAR grants not supported _CHAR ) ; } }
7045	public synchronized void addIndex ( String indexName ) { if ( checkIndex ( indexName ) ) { cacheIndicesTypes . put ( indexName , new HashSet < > ( ) ) ; log . debug ( _CHAR addIndex ( ) - Added index _CHAR + indexName + _CHAR in memory list _CHAR ) ; } else { throw new IllegalArgumentException ( _CHAR addIndex ( ) - Index _CHAR + indexName + _CHAR does not follow the format \ _CHAR indexPrefix_dateFormat \ _CHAR _CHAR ) ; } }
7102	protected void load ( Document d ) { for ( String name : d . keySet ( ) ) { Object o = d . get ( name ) ; if ( o instanceof ObjectId ) { o = ( ( ObjectId ) o ) . toString ( ) ; } this . set ( name , o ) ; } }
7138	public static boolean strictlyBetween ( Date baseDate , Date startDate , Date endDate ) { if ( startDate . equals ( endDate ) || endDate . before ( startDate ) ) { return _BOOL ; } if ( startDate . before ( baseDate ) && endDate . after ( baseDate ) ) { return _BOOL ; } return _BOOL ; }
7163	public static boolean isBoolean ( String expression , Map < String , Object > vars ) { try { Object result = evaluate ( expression , vars ) ; return ( result instanceof Boolean ) ; } catch ( JexlException ex ) { return _BOOL ; } }
7213	@ Override public void populateField ( TimePeriod value ) { if ( value != _NULL ) { populateDuration ( start , value . getStart ( ) ) ; populateDuration ( end , value . getEnd ( ) ) ; UndoManager . getInstance ( ) . addUndoEvent ( new UndoEvent ( this , getFieldId ( ) , oldValueObj , value ) ) ; oldValueObj = value ; valueUpdated ( ) ; } }
7215	@ Override public long skip ( long ln ) throws IOException { try { return in . skip ( ln ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _NUM ; } }
7330	public static boolean isAttribute ( Object objValue ) { if ( objValue instanceof String ) { String stringValue = ( String ) objValue ; if ( stringValue . startsWith ( ATTRIBUTE_START ) && stringValue . endsWith ( ATTRIBUTE_END ) ) { return _BOOL ; } } return _BOOL ; }
7545	@ Nullable @ Override @ CallSuper public List < String > validate ( JobTrigger trigger ) { if ( trigger == Trigger . NOW ) { return _NULL ; } if ( ! ( trigger instanceof JobTrigger . ExecutionWindowTrigger ) ) { return getMutableSingletonList ( _CHAR Unknown trigger provided _CHAR ) ; } return _NULL ; }
7576	private void showSticky ( ) { WXCell headComponent = headComponentStack . pop ( ) ; headComponentStack . push ( headComponent ) ; View headerView = headComponent . getRealView ( ) ; if ( headerView == _NULL ) return ; headerViewStack . push ( headerView ) ; headComponent . removeSticky ( ) ; ( ( ViewGroup ) getParent ( ) ) . addView ( headerView ) ; }
7588	public boolean removeTuple ( Tuple t ) { if ( containsTuple ( t ) ) { removeRow ( t . getRow ( ) ) ; return _BOOL ; } else { return _BOOL ; } }
7610	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T extends Comparable > T limit ( final T min , final T value , final T max ) { if ( value . compareTo ( min ) < _NUM ) { return min ; } if ( value . compareTo ( max ) > _NUM ) { return max ; } return value ; }
7619	public ControlZoomOptions build ( ) { ControlZoomOptions options = new ControlZoomOptions ( ) ; options . position = this . position ; options . zoomInText = this . zoomInText ; options . zoomOutText = this . zoomOutText ; options . zoomInTitle = this . zoomInTitle ; options . zoomOutTitle = this . zoomOutTitle ; return options ; }
7637	protected void garbageCollect ( VisualTable labels ) { Iterator iter = labels . tuples ( ) ; while ( iter . hasNext ( ) ) { VisualItem item = ( VisualItem ) iter . next ( ) ; if ( ! item . isStartVisible ( ) && ! item . isEndVisible ( ) ) { labels . removeTuple ( item ) ; } } }
7643	@ Override @ Transactional public void run ( ) { try { runInternal ( ) ; } catch ( RuntimeException ex ) { log . error ( DebugUtils . getStackTrace ( ex ) ) ; throw ex ; } }
7648	protected void restoreBaseURI ( ) { fBaseURI . pop ( ) ; fLiteralSystemID . pop ( ) ; fExpandedSystemID . pop ( ) ; fBaseURIScope . pop ( ) ; fCurrentBaseURI . setBaseSystemId ( ( String ) fBaseURI . peek ( ) ) ; fCurrentBaseURI . setLiteralSystemId ( ( String ) fLiteralSystemID . peek ( ) ) ; fCurrentBaseURI . setExpandedSystemId ( ( String ) fExpandedSystemID . peek ( ) ) ; }
7746	public static void v ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_VERBOSE ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . v ( tag , msg ) ; }
7800	public static cn . nukkit . inventory . Inventory toNukkit ( Inventory inventory ) { if ( inventory == _NULL ) { return _NULL ; } if ( inventory instanceof PokkitLiveInventory ) { return ( ( PokkitLiveInventory ) inventory ) . nukkit ; } throw new IllegalArgumentException ( _CHAR Can not convert inventory _CHAR + inventory . getClass ( ) + _CHAR to a Nukkit inventory _CHAR ) ; }
7834	private boolean isIntervalEnd ( final BSPTree < Euclidean1D > node ) { if ( ! ( Boolean ) leafBefore ( node ) . getAttribute ( ) ) { return _BOOL ; } if ( ( Boolean ) leafAfter ( node ) . getAttribute ( ) ) { return _BOOL ; } return _BOOL ; }
7838	@ Override public void close ( ) { try { raf . close ( ) ; System . err . println ( _CHAR Closing file : _CHAR + file . getName ( ) + _CHAR ( _CHAR + pages + _CHAR / _CHAR + data . length + _CHAR pages ) _CHAR ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
7840	public DivIconOptions build ( ) { DivIconOptions options = new DivIconOptions ( ) ; options . iconSize = this . iconSize ; options . iconAnchor = this . iconAnchor ; options . popUpAnchor = this . popUpAnchor ; options . className = this . className ; options . html = this . html ; return options ; }
7847	private boolean isTypedTimeFullyLegal ( ) { if ( mIs24HourMode ) { int [ ] values = getEnteredTime ( _NULL ) ; return ( values [ _NUM ] >= _NUM && values [ _NUM ] >= _NUM && values [ _NUM ] < _NUM ) ; } else { return ( mTypedTimes . contains ( getAmOrPmKeyCode ( HALF_DAY_1 ) ) || mTypedTimes . contains ( getAmOrPmKeyCode ( HALF_DAY_2 ) ) ) ; } }
7850	public static String encodeParam ( String param ) { try { return URLEncoder . encode ( param , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; return _CHAR _CHAR ; } }
7872	public AttribsExpression putAll ( AttribsExpression otherExpr ) { String origStr = otherExpr . attribsExpr . getOriginal ( ) ; if ( UtilValidate . isNotEmpty ( origStr ) ) { return new AttribsExpression ( FlexibleStringExpander . getInstance ( concatMapExpr ( attribsExpr . getOriginal ( ) , origStr ) ) ) ; } else { return new AttribsExpression ( attribsExpr ) ; } }
7912	public String taggerModelFileName ( ) { switch ( language ) { case ENGLISH : return _CHAR / export / dat / tag / en / cmm _CHAR ; case VIETNAMESE : return _CHAR / export / dat / tag / vi / cmm _CHAR ; } return _NULL ; }
7919	public boolean catchHandlesException ( TypeDecl exceptionType ) { ASTNode $ State state = state ( ) ; try { for ( int i = _NUM ; i < getNumCatchClause ( ) ; i ++ ) if ( getCatchClause ( i ) . handles ( exceptionType ) ) return _BOOL ; return _BOOL ; } finally { } }
7921	public void removeLocation ( int terminalId , int height ) { int i , size = l_locations . size ( ) ; for ( i = _NUM ; i < size ; i ++ ) { if ( l_locations . get ( i ) . matches ( terminalId , height ) ) { l_locations . remove ( i ) ; break ; } } }
7971	public static List < String > propertyAsList ( Properties props , String propertyName ) { String prop = props . getProperty ( propertyName ) ; if ( prop != _NULL ) { return Arrays . asList ( prop . split ( Pattern . quote ( _CHAR , _CHAR ) ) ) ; } else { return _NULL ; } }
7978	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String prefix : this . prefixes ) { if ( caseSensitivity . checkStartsWith ( name , prefix ) ) { return _BOOL ; } } return _BOOL ; }
8017	public static String escapeCharacters ( String s ) { if ( s == _NULL ) { throw new NullPointerException ( ) ; } s = s . replace ( _CHAR . _CHAR , _CHAR { SEP } _CHAR ) ; s = s . replace ( _CHAR / _CHAR , _CHAR { FSEP } _CHAR ) ; s = s . replace ( _CHAR $ _CHAR , _CHAR { DSEP } _CHAR ) ; return s ; }
8022	@ Override public CarbonDictionaryColumnMetaChunk readLastEntryOfDictionaryMetaChunk ( ) throws IOException { ColumnDictionaryChunkMeta dictionaryChunkMeta = _NULL ; openThriftReader ( ) ; while ( dictionaryMetadataFileReader . hasNext ( ) ) { dictionaryChunkMeta = ( ColumnDictionaryChunkMeta ) dictionaryMetadataFileReader . read ( ) ; } CarbonDictionaryColumnMetaChunk columnMetaChunkForLastSegment = getNewInstanceOfCarbonDictionaryColumnMetaChunk ( dictionaryChunkMeta ) ; return columnMetaChunkForLastSegment ; }
8028	public JSONObject putOnce ( String key , Object value ) throws JSONException { if ( key != _NULL && value != _NULL ) { if ( opt ( key ) != _NULL ) { throw new JSONException ( _CHAR Duplicate key \ _CHAR _CHAR + key + _CHAR \ _CHAR _CHAR ) ; } put ( key , value ) ; } return this ; }
8032	public void onBitmapRendered ( PagePart part ) { if ( part . isThumbnail ( ) ) { cacheManager . cacheThumbnail ( part ) ; } else { cacheManager . cachePart ( part ) ; } redraw ( ) ; }
8066	private void ping ( ) { try ( Jedis jedis = pool . getResource ( ) ) { String pong = jedis . ping ( ) ; redisIsHealthy = _CHAR PONG _CHAR . equals ( pong ) ; } catch ( JedisException ignored ) { redisIsHealthy = _BOOL ; } }
8072	public void addStateChangedListener ( ISharedDataIteratorSourceStateChangedListener < T > listener ) { _sharedObjectListLock . writeLock ( ) . lock ( ) ; try { _listener = listener ; } finally { _sharedObjectListLock . writeLock ( ) . unlock ( ) ; } }
8097	public void clearSelection ( ) { Iterator < Integer > iterator = selectedItems . iterator ( ) ; while ( iterator . hasNext ( ) ) { int i = iterator . next ( ) ; iterator . remove ( ) ; Log . v ( TAG , _CHAR clearSelection notifyItemChanged on position _CHAR + i ) ; notifyItemChanged ( i ) ; } }
8151	public boolean addSiblingBefore ( AXmlNode sibling ) { if ( this . parent != _NULL ) { this . parent . addChild ( sibling , this . parent . getChildren ( ) . indexOf ( this ) ) ; return _BOOL ; } else { return _BOOL ; } }
8174	public void writeStringNoCompression ( String str ) throws IOException { if ( str == _NULL ) { writeInt ( _NUM ) ; } else { writeInt ( str . length ( ) ) ; for ( int i = _NUM ; i < str . length ( ) ; i ++ ) io . write ( ( byte ) str . charAt ( i ) ) ; } }
8189	protected VirtualFile createFile ( String filePath , String contents ) { assertPathIsNotAbsolute ( filePath ) ; try { return testFixture . getTempDirFixture ( ) . createFile ( filePath , contents ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
8232	public static void databaseMigrations ( ) { Data data = injector . getInstance ( Data . class ) ; Repo repo = injector . getInstance ( Repo . class ) ; Api api = injector . getInstance ( Api . class ) ; data . createTableIfMissing ( ) ; repo . addSourceToTable ( ) ; repo . addBranchToTable ( ) ; api . createTableIfMissing ( ) ; }
8280	public void close ( ) { if ( textStorageReader != _NULL ) textStorageReader . closeAllFiles ( ) ; if ( dataIndexReader != _NULL ) try { dataIndexReader . close ( ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
8286	public void addListener ( AirMapTrafficListener listener ) { if ( listeners . isEmpty ( ) ) { listeners . add ( listener ) ; connect ( ) ; } else { listeners . add ( listener ) ; } }
8334	public static void e ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_ERROR ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . e ( tag , msg ) ; }
8339	@ Override public void onCheckedChanged ( CompoundButton switchView , boolean isChecked ) { if ( ! isResumed ( ) ) { return ; } ( ( FileActivity ) getActivity ( ) ) . getFileOperationsHelper ( ) . setUploadPermissionsToShare ( mFile , isChecked ) ; switchView . setOnCheckedChangeListener ( _NULL ) ; switchView . toggle ( ) ; switchView . setOnCheckedChangeListener ( mOnEditPermissionInteractionListener ) ; }
8368	public boolean isValid ( ) { if ( startDate == _NULL || endDate == _NULL || periodType == _NULL ) { return _BOOL ; } if ( ! DailyPeriodType . NAME . equals ( periodType . getName ( ) ) && getDaysInPeriod ( ) < _NUM ) { return _BOOL ; } return _BOOL ; }
8472	void removePreDrawListener ( ) { if ( mIsAttachedToWindow ) { if ( mOnPreDrawListener != _NULL ) { final ViewTreeObserver vto = getViewTreeObserver ( ) ; vto . removeOnPreDrawListener ( mOnPreDrawListener ) ; } } mNeedsPreDrawListener = _BOOL ; }
8498	public static synchronized void removeInstance ( String storeName ) { if ( storeName != _NULL ) { RedisStore redisStore = REDIS_STORES . get ( storeName ) ; if ( redisStore != _NULL ) { redisStore . removeAllKeys ( ) ; REDIS_STORES . remove ( storeName ) ; } } }
8517	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
8608	public static void performSaveAs ( String schemaPrefixFileName , String selFilePath , ContainerConfig containerConfig ) { try { File fileWithDefaultConfiguration = createContainerSchemaFile ( schemaPrefixFileName , selFilePath ) ; updateFile ( containerConfig , fileWithDefaultConfiguration . getPath ( ) , schemaPrefixFileName ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
8617	public static int compareTo ( double x , double y , double eps ) { if ( equals ( x , y , eps ) ) { return _NUM ; } else if ( x < y ) { return - _NUM ; } return _NUM ; }
8665	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
8667	public String diff_text1 ( List < Diff > diffs ) { StringBuilder text = new StringBuilder ( ) ; for ( Diff aDiff : diffs ) { if ( aDiff . operation != Operation . INSERT ) { text . append ( aDiff . text ) ; } } return text . toString ( ) ; }
8694	public long size ( String fileName ) { try { IoChannel fileChannel = getFileChannel ( fileName ) ; return fileChannel . size ( ) / BLOCK_SIZE ; } catch ( IOException e ) { throw new RuntimeException ( _CHAR can not access _CHAR + fileName ) ; } }
8815	public ISourceDataTag findDataTag ( final Long dataTagId ) { Map < Long , EquipmentConfiguration > equipmentMap = getProcessConfiguration ( ) . getEquipmentConfigurations ( ) ; for ( EquipmentConfiguration equipmentConfiguration : equipmentMap . values ( ) ) { if ( equipmentConfiguration . hasSourceDataTag ( dataTagId ) ) { return equipmentConfiguration . getSourceDataTag ( dataTagId ) ; } } return _NULL ; }
8875	public boolean contains ( T obj ) { lock . lock ( ) ; try { return contains_impl ( obj ) ; } finally { lock . unlock ( ) ; } }
8965	private synchronized void messageProcessed ( Message msg ) { ClientCnx currentCnx = cnx ( ) ; ClientCnx msgCnx = ( ( MessageImpl ) msg ) . getCnx ( ) ; if ( msgCnx != currentCnx ) { return ; } increaseAvailablePermits ( currentCnx ) ; stats . updateNumMsgsReceived ( msg ) ; }
8977	public void cancelJob ( int uid , int jobId ) { JobStatus toCancel ; synchronized ( mJobs ) { toCancel = mJobs . getJobByUidAndJobId ( uid , jobId ) ; } if ( toCancel != _NULL ) { cancelJobImpl ( toCancel ) ; } }
9033	public void addSubReport ( final ConfigurationElementReport pReport ) { this . subreports . add ( pReport ) ; if ( pReport . isFailure ( ) ) { setFailure ( pReport . getStatusMessage ( ) ) ; } else if ( pReport . requiresReboot ( ) ) { status = Status . RESTART ; } }
9048	public String resolveSystemReverse ( String systemId ) throws IOException { Vector resolved = resolveAllSystemReverse ( systemId ) ; if ( resolved != _NULL && resolved . size ( ) > _NUM ) { return ( String ) resolved . elementAt ( _NUM ) ; } else { return _NULL ; } }
9089	public static boolean checkStartConditions ( QuestEnv env , boolean warn ) { try { return checkStartConditionsImpl ( env , warn ) ; } catch ( Exception ex ) { log . error ( _CHAR QE : exception in checkStartCondition _CHAR , ex ) ; } return _BOOL ; }
9127	public boolean isHighlightEnabled ( ) { for ( int i = _NUM , size = mDataSets . size ( ) ; i < size ; i ++ ) { T set = mDataSets . get ( i ) ; if ( ! set . isHighlightEnabled ( ) ) { return _BOOL ; } } return _BOOL ; }
9129	public static boolean runSubOps ( List < MethodOperation > methodOperations , MethodContext methodContext ) throws MiniLangException { Assert . notNull ( _CHAR methodOperations _CHAR , methodOperations , _CHAR methodContext _CHAR , methodContext ) ; for ( MethodOperation methodOperation : methodOperations ) { if ( ! methodOperation . exec ( methodContext ) ) { return _BOOL ; } } return _BOOL ; }
9151	private void initializeWebView ( ) { mWebViewClient = new FacebookWebViewClient ( ) ; setWebViewClient ( mWebViewClient ) ; mWebChromeClient = new FacebookWebChromeClient ( mContext ) ; setWebChromeClient ( mWebChromeClient ) ; mWebSettings = getSettings ( ) ; mInitialized = _BOOL ; setDefaults ( ) ; }
9152	public DirectedGraph load ( String fileName ) throws IOException , MaryConfigurationException { InputStream is = new FileInputStream ( fileName ) ; try { return load ( is ) ; } finally { is . close ( ) ; } }
9164	protected void checkNotation ( String notName ) { Notation not = new Notation ( ) ; not . name = notName ; int index = fNotations . indexOf ( not ) ; if ( index != - _NUM ) { not = ( Notation ) fNotations . get ( index ) ; checkAndSendNotation ( not ) ; } }
9294	public static boolean isFileOlder ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileOlder ( file , reference . lastModified ( ) ) ; }
9295	public void parseFileInput ( ) { builder . setDebugMode ( ApplicationManager . getApplication ( ) . isUnitTestMode ( ) ) ; while ( ! builder . eof ( ) ) { if ( matches ( TokenKind . NEWLINE ) ) { continue ; } parseTopLevelStatement ( ) ; } }
9300	boolean isAlive ( ) { if ( vertex == _NULL ) return _BOOL ; try { return vertex . property ( Schema . BaseType . TYPE . name ( ) ) . isPresent ( ) ; } catch ( IllegalStateException e ) { return _BOOL ; } }
9307	public boolean indexExists ( String tableName , String columnName ) { try { resolveIndexFromName ( tableName , columnName ) ; } catch ( DatabaseException e ) { return _BOOL ; } return _BOOL ; }
9373	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( getLong ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
9449	static BigDecimal sanitize ( BigDecimal value , int signum ) { if ( signum == _NUM || value == _NULL ) { return ZERO ; } if ( signum > _NUM ) { return value ; } return value . negate ( ) ; }
9484	public void add ( String uid ) { cleanIfNeeded ( ) ; if ( currentSet ) { _idSet0 . add ( uid ) ; } else { _idSet1 . add ( uid ) ; } }
9490	public void finishGathering ( Player player ) { if ( currentGatherer == player . getObjectId ( ) ) { if ( state == GatherState . GATHERING ) { task . abort ( ) ; } currentGatherer = _NUM ; state = GatherState . IDLE ; } }
9507	public static double max ( final double [ ] values ) { double max = values [ _NUM ] ; for ( int i = _NUM ; i < values . length ; i ++ ) { if ( values [ i ] > max ) { max = values [ i ] ; } } return max ; }
9532	protected String resolveExternalPublic ( String publicId , String resolver ) throws IOException { Resolver r = queryResolver ( resolver , _CHAR fpi2l _CHAR , publicId , _NULL ) ; if ( r != _NULL ) { return r . resolvePublic ( publicId , _NULL ) ; } else { return _NULL ; } }
9570	public void remove ( IObjectInfo < T > oi ) { lock . lock ( ) ; try { remove_impl ( ( ObjectInfo < T > ) oi ) ; } finally { lock . unlock ( ) ; } }
9573	protected void moveToUnusable ( ) { try { _space . stopInternal ( ) ; } catch ( SpaceAlreadyStoppedException e ) { } catch ( RemoteException e ) { } }
9601	TypeNode typeNode ( int id , Type type , ClassHierarchy hierarchy ) { if ( type == _NULL || hierarchy == _NULL ) { throw new InternalTypingException ( ) ; } this . id = id ; this . hierarchy = hierarchy ; type . apply ( this ) ; return result ; }
9609	private OverrideUrlLoadingResult clobberCurrentTabWithFallbackUrl ( String browserFallbackUrl , ExternalNavigationParams params ) { if ( ! params . isMainFrame ( ) ) { return OverrideUrlLoadingResult . NO_OVERRIDE ; } if ( params . getRedirectHandler ( ) != _NULL ) { params . getRedirectHandler ( ) . setShouldNotOverrideUrlLoadingUntilNewUrlLoading ( ) ; } return mDelegate . clobberCurrentTab ( browserFallbackUrl , params . getReferrerUrl ( ) , params . getTab ( ) ) ; }
9642	public boolean rollback ( ) { myLock . writeLock ( ) . lock ( ) ; try { return finishTransaction ( ) ; } finally { myLock . writeLock ( ) . unlock ( ) ; } }
9693	@ Override protected void checkDuplicateValues ( ) { if ( contains ( ) ) { String code = _CHAR DuplicateKey _CHAR ; String value = toString ( fLocalValues ) ; String eName = fIdentityConstraint . getElementName ( ) ; String cName = fIdentityConstraint . getIdentityConstraintName ( ) ; reportSchemaError ( code , new Object [ ] { value , eName , cName } ) ; } }
9709	protected void enableField ( FieldIdEnum fieldId , boolean enable ) { FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( fieldConfig != _NULL ) { fieldConfig . setEnabled ( enable ) ; } else { ConsoleManager . getInstance ( ) . error ( this , String . format ( _CHAR enableField - % s : % s _CHAR , Localisation . getString ( StandardPanel . class , _CHAR StandardPanel . unknownField _CHAR ) , fieldId ) ) ; } }
9714	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
9735	public synchronized void checkOwnershipAndReacquire ( ) throws LockingException { if ( _NULL == lockAcquireFuture || ! lockAcquireFuture . isDefined ( ) ) { throw new LockingException ( lockPath , _CHAR check ownership before acquiring _CHAR ) ; } if ( haveLock ( ) ) { return ; } reacquireLock ( _BOOL ) ; }
9763	@ Override protected void restore ( GeneratorAdapter mv , List < Type > args ) { if ( type == Type . VOID_TYPE ) { mv . pop ( ) ; } else { ByteCodeUtils . unbox ( mv , type ) ; } mv . returnValue ( ) ; }
9805	public boolean remove ( Predicate p ) { if ( m_clauses . remove ( p ) ) { fireExpressionChange ( ) ; return _BOOL ; } else { return _BOOL ; } }
9843	public static Constructor < ? > findInjectedCtor ( Class < ? > clazz ) { Constructor < ? > [ ] ctors = clazz . getDeclaredConstructors ( ) ; for ( Constructor < ? > ctor : ctors ) { if ( isInjected ( ctor ) ) { return ctor ; } } return _NULL ; }
9960	private boolean isIntervalStart ( final BSPTree < Euclidean1D > node ) { if ( ( Boolean ) leafBefore ( node ) . getAttribute ( ) ) { return _BOOL ; } if ( ! ( Boolean ) leafAfter ( node ) . getAttribute ( ) ) { return _BOOL ; } return _BOOL ; }
10013	@ Override public boolean isSchemaLanguageSupported ( String schemaLanguage ) { if ( schemaLanguage == _NULL ) { throw new NullPointerException ( JAXPValidationMessageFormatter . formatMessage ( fXMLSchemaLoader . getLocale ( ) , _CHAR SchemaLanguageNull _CHAR , _NULL ) ) ; } if ( schemaLanguage . length ( ) == _NUM ) { throw new IllegalArgumentException ( JAXPValidationMessageFormatter . formatMessage ( fXMLSchemaLoader . getLocale ( ) , _CHAR SchemaLanguageLengthZero _CHAR , _NULL ) ) ; } return schemaLanguage . equals ( XMLConstants . W3C_XML_SCHEMA_NS_URI ) ; }
10061	public Grammar parseGrammar ( String type , XMLInputSource is ) throws XNIException , IOException { if ( type . equals ( XMLGrammarDescription . XML_SCHEMA ) ) { return parseXMLSchema ( is ) ; } else if ( type . equals ( XMLGrammarDescription . XML_DTD ) ) { return parseDTD ( is ) ; } return _NULL ; }
10064	public static boolean isBinFile ( String fileName ) { try ( DataInputStream dis = new DataInputStream ( new FileInputStream ( fileName ) ) ) { int firstInt = dis . readInt ( ) ; return firstInt == _NUM || firstInt == MAGIC_NUMBER ; } catch ( Exception e ) { return _BOOL ; } }
10108	public synchronized long incRefLastCommitGen ( ) throws IOException { long nextGen = saveLoadState . getNextWriteGen ( ) ; if ( nextGen == _NUM ) { throw new IllegalStateException ( _CHAR no commit exists _CHAR ) ; } long result = nextGen - _NUM ; incRef ( result ) ; return result ; }
10167	void applyFacets1 ( XSFacets facets , short presentFacet , short fixedFacet ) { try { applyFacets ( facets , presentFacet , fixedFacet , SPECIAL_PATTERN_NONE , fDummyContext ) ; } catch ( InvalidDatatypeFacetException e ) { throw new RuntimeException ( _CHAR internal error _CHAR ) ; } fIsImmutable = _BOOL ; }
10188	private static String toString ( double coeff ) { final String c = Double . toString ( coeff ) ; if ( c . endsWith ( _CHAR . _NUM _CHAR ) ) { return c . substring ( _NUM , c . length ( ) - _NUM ) ; } else { return c ; } }
10293	public void flush ( LogSeqNum lsn ) { logMgrLock . lock ( ) ; try { if ( lsn . compareTo ( lastFlushedLsn ) >= _NUM ) flush ( ) ; } finally { logMgrLock . unlock ( ) ; } }
10404	private void createVendorOptionPanel ( ) { vendorOptionTextFactory = new VendorOptionTextFactory ( getClass ( ) , getFunctionManager ( ) ) ; List < VendorOptionInterface > veList = vendorOptionTextFactory . getVendorOptionList ( ) ; if ( veList != _NULL ) { for ( VendorOptionInterface extension : veList ) { extension . setParentPanel ( this ) ; } } }
10490	public void onUpOrCancel ( long time ) { if ( mPinch0TabIndex >= _NUM ) { startAnimation ( time , OverviewAnimationType . REACH_TOP ) ; requestUpdate ( ) ; } commitDiscard ( time , _BOOL ) ; resetInputActionIndices ( ) ; springBack ( time ) ; }
10575	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; if ( obj instanceof MarshalledInstance ) { MarshalledInstance other = ( MarshalledInstance ) obj ; if ( hash != other . hash ) return _BOOL ; return Arrays . equals ( objBytes , other . objBytes ) ; } return _BOOL ; }
10619	public void clear ( ) { uid = _NUM ; bitScore = _NUM ; percentIdentity = _NUM ; expected = _NUM ; length = _NUM ; text = _NULL ; fName2Id . clear ( ) ; }
10623	public void addValue ( double value ) { secondMoment . increment ( value ) ; minImpl . increment ( value ) ; maxImpl . increment ( value ) ; sumImpl . increment ( value ) ; sumOfSquaresImpl . increment ( value ) ; sumOfLogsImpl . increment ( value ) ; n ++ ; }
10659	public PieChartDrawer createInstance ( ) { final PieChartDrawer drawer = new PieChartDrawer ( ) ; drawer . setViewer ( viewer ) ; drawer . setChartData ( new DefaultChartData ( ) ) ; drawer . setClass2HigherClassMapper ( class2HigherClassMapper ) ; drawer . setSeriesLabelGetter ( seriesLabelGetter ) ; drawer . setExecutorService ( executorService ) ; return drawer ; }
10670	public final void browserInfo ( ) { final WebDriver webDriver = webDriverProvider . get ( ) ; if ( webDriver instanceof HasCapabilities ) { currentTest . get ( ) . addBrowserInfo ( ) ; } else { currentTest . get ( ) . error ( _CHAR Your WebDriver does n _CHAR t log its info . '' ) ; } }
10681	public void changeSpaceBackgroundColor ( @ ColorInt int color ) { if ( color == spaceBackgroundColor ) { Log . d ( TAG , _CHAR changeSpaceBackgroundColor : color already changed _CHAR ) ; return ; } spaceBackgroundColor = color ; setBackgroundColors ( ) ; centreContent . changeBackgroundColor ( color ) ; }
10692	public void readDataFile ( URL fileUrl ) throws DataFileException { if ( fileUrl == _NULL ) { throw new IllegalStateException ( _CHAR File URL is _NULL , can not load file _CHAR ) ; } RecordIterator recordIterator = this . makeRecordIterator ( fileUrl ) ; while ( recordIterator . hasNext ( ) ) { this . records . add ( recordIterator . next ( ) ) ; } }
10699	protected void removeStmts ( List < IfStmt > deadStmts ) { Chain units = sb . getUnits ( ) ; Iterator < IfStmt > deadIt = deadStmts . iterator ( ) ; while ( deadIt . hasNext ( ) ) { Unit dead = deadIt . next ( ) ; units . remove ( dead ) ; dead . clearUnitBoxes ( ) ; } }
10710	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
10749	public static int compareTo ( double x , double y , double eps ) { if ( equals ( x , y , eps ) ) { return _NUM ; } else if ( x < y ) { return - _NUM ; } return _NUM ; }
10862	public boolean canSet ( Class type ) { if ( type == _NULL ) return _BOOL ; if ( m_columnType . isPrimitive ( ) ) { return m_columnType . isAssignableFrom ( type ) || TypeLib . getWrapperType ( m_columnType ) . isAssignableFrom ( type ) || String . class . isAssignableFrom ( type ) ; } else { return m_columnType . isAssignableFrom ( type ) ; } }
10913	private FlatServoRail flatten ( ) { if ( isStatic ( ) ) { return this ; } if ( color == FzColor . NO_COLOR && component instanceof GenericPlaceholder ) { return ServoFeature . static_rail ; } return this ; }
10918	public void disconnectFromBroker ( final MqttAsyncConnection connection ) { try { connection . disconnect ( new MqttDisconnectionResultHandler ( ) ) ; } catch ( SpyException e ) { Platform . runLater ( new MqttEventHandler ( new MqttDisconnectionAttemptFailureEvent ( connection , e ) ) ) ; logger . error ( e . getMessage ( ) , e ) ; } }
10928	private boolean isArcStart ( final BSPTree < Sphere1D > node ) { if ( ( Boolean ) leafBefore ( node ) . getAttribute ( ) ) { return _BOOL ; } if ( ! ( Boolean ) leafAfter ( node ) . getAttribute ( ) ) { return _BOOL ; } return _BOOL ; }
11028	private void inflateEmptyView ( ) { emptyView . removeAllViewsInLayout ( ) ; LayoutInflater . from ( mContext ) . inflate ( mEmptyLayout , emptyView ) ; if ( mEmptyLayout == R . layout . layout_empty ) { textEmpty = ( TextView ) emptyView . findViewById ( R . id . text_empty ) ; inflateEmptyText ( ) ; inflateEmptyTextColor ( ) ; } }
11085	public double maxValue ( ) { Iterator iIter = asTreeMap ( ) . values ( ) . iterator ( ) ; Double dMax = Double . NEGATIVE_INFINITY ; while ( iIter . hasNext ( ) ) { Double dVal = ( Double ) iIter . next ( ) ; dMax = ( dVal > dMax ) ? dVal : dMax ; } return dMax ; }
11086	private boolean isInSameEvolutionChain ( Pokemon p1 , Pokemon p2 ) { ArrayList < Pokemon > evolutionLine = getEvolutionLine ( p1 ) ; for ( Pokemon poke : evolutionLine ) { if ( poke . number == p2 . number ) { return _BOOL ; } } return _BOOL ; }
11093	public boolean removeByObject ( T obj ) { lock . lock ( ) ; try { return removeByObject_impl ( obj ) ; } finally { lock . unlock ( ) ; } }
11151	public void save ( ) throws IOException { setPathIfApplicable ( myAndroidSdkPathModified , SDK_DIR_PROPERTY , getAndroidSdkPathFromFile ( ) , myNewAndroidSdkPath ) ; setPathIfApplicable ( myAndroidNdkPathModified , NDK_DIR_PROPERTY , getAndroidNdkPathFromFile ( ) , myNewAndroidNdkPath ) ; if ( myAndroidSdkPathModified || myAndroidNdkPathModified ) { savePropertiesToFile ( myProperties , myPropertiesFilePath , getHeaderComment ( ) ) ; } myNewAndroidSdkPath = myNewAndroidNdkPath = _NULL ; myAndroidSdkPathModified = myAndroidNdkPathModified = _BOOL ; }
11201	public static double factorialDouble ( final int n ) { if ( n < _NUM ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR must have n >= _NUM for n ! , got n = { _NUM } _CHAR , n ) ; } if ( n < _NUM ) { return factorial ( n ) ; } return Math . floor ( Math . exp ( factorialLog ( n ) ) + _NUM . _NUM ) ; }
11216	@ Override public boolean accept ( File directory , String fileName ) { if ( ! super . accept ( directory , fileName ) ) return _BOOL ; try { return DAAParser . isMeganizedDAAFile ( ( new File ( directory , fileName ) ) . getPath ( ) , _BOOL ) ; } catch ( IOException e ) { return _BOOL ; } }
11225	public boolean addSiblingAfter ( AXmlNode sibling ) { if ( this . parent != _NULL ) { this . parent . addChild ( sibling , this . parent . getChildren ( ) . indexOf ( this ) + _NUM ) ; return _BOOL ; } else { return _BOOL ; } }
11279	@ Override public void close ( ) { try { raf . close ( ) ; System . err . println ( _CHAR Closing file : _CHAR + file . getName ( ) ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
11294	public void verifyProcessDefinitionsDoNotShareKeys ( Collection < ProcessDefinitionEntity > processDefinitions ) { Set < String > keySet = new LinkedHashSet < String > ( ) ; for ( ProcessDefinitionEntity processDefinition : processDefinitions ) { if ( keySet . contains ( processDefinition . getKey ( ) ) ) { throw new ActivitiException ( _CHAR The deployment contains process definitions with the same key ( process id attribute ) , this is not allowed _CHAR ) ; } keySet . add ( processDefinition . getKey ( ) ) ; } }
11379	@ Override public void beforeFirst ( ) { currentScan = _NULL ; s1 . beforeFirst ( ) ; hasMore1 = s1 . next ( ) ; if ( s2 != _NULL ) { s2 . beforeFirst ( ) ; hasMore2 = s2 . next ( ) ; } }
11395	@ Override public int compareTo ( ViterbiCandidate o ) { if ( targetCost < o . targetCost ) { return - _NUM ; } else if ( targetCost > o . targetCost ) { return _NUM ; } return _NUM ; }
11421	@ Override public long limit ( ) { try { return length ( ) >> > _NUM ; } catch ( IOException e ) { Basic . caught ( e ) ; return _NUM ; } }
11434	private boolean filterUser ( ILogEntry logEntry , String user ) { if ( user == _NULL ) return _BOOL ; if ( regExp ) { return matchesExpression ( logEntry . getAuthor ( ) , user + CHAR_MATCH_MANY ) ; } else { return containsExpression ( logEntry . getAuthor ( ) , user ) ; } }
11444	@ Override public void write ( String str ) { synchronized ( lock ) { try { appendLocked ( str , _NUM , str . length ( ) ) ; } catch ( IOException e ) { } } }
11464	public int removeStack ( int amount ) { stack -= amount ; if ( stack < _NUM ) { int remainder = stack * - _NUM ; stack = _NUM ; return remainder ; } return _NUM ; }
11514	public byte [ ] unCompress ( byte [ ] compInput ) { try { return Snappy . uncompress ( compInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return compInput ; }
11610	protected final int nextIndex ( ) { if ( _expectedSize != _hash . size ( ) ) { throw new ConcurrentModificationException ( ) ; } byte [ ] states = _hash . _states ; int i = _index ; while ( i -- > _NUM && ( states [ i ] != TPrimitiveHash . FULL ) ) ; return i ; }
11636	protected void addChild ( LazyNode token ) { if ( lastChild == _NULL ) { child = token ; lastChild = token ; return ; } lastChild . next = token ; lastChild = token ; }
11658	public synchronized void repaint ( ) { Iterator items = items ( ValidatedPredicate . FALSE ) ; while ( items . hasNext ( ) ) { ( ( VisualItem ) items . next ( ) ) . validateBounds ( ) ; } for ( int i = _NUM ; i < m_displays . size ( ) ; ++ i ) { getDisplay ( i ) . repaint ( ) ; } }
11671	public void removeFreeShippingProductPromoAction ( GenericPK productPromoActionPK ) { if ( productPromoActionPK == _NULL ) return ; Iterator < GenericValue > fsppas = this . freeShippingProductPromoActions . iterator ( ) ; while ( fsppas . hasNext ( ) ) { if ( productPromoActionPK . equals ( ( fsppas . next ( ) ) . getPrimaryKey ( ) ) ) { fsppas . remove ( ) ; } } }
11681	@ Override public void close ( ) { try { raf . close ( ) ; System . err . println ( _CHAR Closing file : _CHAR + file . getName ( ) + _CHAR ( _CHAR + pages + _CHAR / _CHAR + data . length + _CHAR pages ) _CHAR ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
11698	private void formatPeriods ( Collection < ValidationResult > results , I18nFormat format ) { if ( format != _NULL ) { for ( ValidationResult result : results ) { if ( result != _NULL && result . getPeriod ( ) != _NULL ) { result . getPeriod ( ) . setName ( format . formatPeriod ( result . getPeriod ( ) ) ) ; } } } }
11753	public static boolean isFileOlder ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) < timeMillis ; }
11831	private static boolean resolveBoolean ( Context context , @ AttrRes int attr , boolean fallback ) { TypedArray a = context . getTheme ( ) . obtainStyledAttributes ( new int [ ] { attr } ) ; try { return a . getBoolean ( _NUM , fallback ) ; } finally { a . recycle ( ) ; } }
11945	public Observable < EncounterResult > encounterPokemonAsync ( ) { if ( encounterKind == EncounterKind . NORMAL ) { return encounterNormalPokemonAsync ( ) ; } else if ( encounterKind == EncounterKind . DISK ) { return encounterDiskPokemonAsync ( ) ; } throw new IllegalStateException ( _CHAR Catchable pokemon missing encounter type _CHAR ) ; }
11962	public static ProcessEngineInfo retry ( String resourceUrl ) { log . debug ( _CHAR retying initializing of resource { } _CHAR , resourceUrl ) ; try { return initProcessEnginFromResource ( new URL ( resourceUrl ) ) ; } catch ( MalformedURLException e ) { throw new ActivitiIllegalArgumentException ( _CHAR invalid url : _CHAR + resourceUrl , e ) ; } }
11996	public void addDiagIfNotSuppressed ( Object elementOrLocation , Diag diag ) { if ( elementOrLocation instanceof Element && isSuppressedDiag ( diag , ( Element ) elementOrLocation ) ) { return ; } else if ( elementOrLocation instanceof Location && isSuppressedDiag ( diag , getModel ( ) ) ) { return ; } diagCollector . addDiag ( diag ) ; }
12040	public boolean closeDatabase ( String dbfile ) { if ( databases . get ( dbfile ) != _NULL ) { SQLiteDatabase db = ( SQLiteDatabase ) databases . get ( dbfile ) ; db . close ( ) ; databases . remove ( dbfile ) ; return _BOOL ; } return _BOOL ; }
12061	public static byte [ ] toByteArray ( URL url ) throws IOException { URLConnection conn = url . openConnection ( ) ; try { return IOUtils . toByteArray ( conn ) ; } finally { close ( conn ) ; } }
12092	public void removeBites ( ) { setImageDrawable ( drawableChomp ) ; bitesTakenMap = new HashMap < > ( ) ; for ( int direction : BITE_DIRECTIONS_LIST ) { bitesTakenMap . put ( direction , _NUM ) ; } hasAllBitesTaken = _BOOL ; numBitesForOneDirection = ( imageCircleRadius * _NUM ) / biteRadius ; }
12118	public void resize ( int maxSize ) { if ( maxSize <= _NUM ) { throw new IllegalArgumentException ( _CHAR maxSize <= _NUM _CHAR ) ; } synchronized ( this ) { this . maxSize = maxSize ; } trimToSize ( maxSize ) ; }
12131	public static AnalysisEngine defaultAnalysisEngine ( ) { try { if ( defaultAnalysisEngine == _NULL ) defaultAnalysisEngine = AnalysisEngineFactory . createEngine ( AnalysisEngineFactory . createEngineDescription ( SentenceAnnotator . getDescription ( ) , TokenizerAnnotator . getDescription ( ) ) ) ; return defaultAnalysisEngine ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
12136	@ Override public void stop ( ) throws ConnectException { fLog . trace ( _CHAR Stopping _CHAR ) ; try { iWriter . close ( ) ; } catch ( IOException exception ) { throw new ConnectException ( exception ) ; } }
12175	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
12193	private Response assureAcceptJSON ( IHTTPSession session ) { final Map < String , String > headers = session . getHeaders ( ) ; if ( ! APPLICATION_JSON . equals ( headers . get ( ACCEPT_FIELD ) ) ) { return newFixedLengthResponse ( Response . Status . NOT_ACCEPTABLE , MIME_PLAINTEXT , _CHAR set accept to application / json or remove it _CHAR ) ; } else { return _NULL ; } }
12207	public Matrix refresh ( Matrix newMatrix , View chart , boolean invalidate ) { mMatrixTouch . set ( newMatrix ) ; limitTransAndScale ( mMatrixTouch , mContentRect ) ; if ( invalidate ) { chart . invalidate ( ) ; } newMatrix . set ( mMatrixTouch ) ; return newMatrix ; }
12223	public static byte [ ] toByteArray ( URL url ) throws IOException { URLConnection conn = url . openConnection ( ) ; try { return IOUtils . toByteArray ( conn ) ; } finally { close ( conn ) ; } }
12228	public void calculateCenter ( ) { if ( center == _NULL ) { center = new Vector3f ( pointa ) ; } else { center . set ( pointa ) ; } center . addLocal ( pointb ) . addLocal ( pointc ) . multLocal ( FastMath . ONE_THIRD ) ; }
12283	public synchronized SlabRef detach ( ) { if ( ! isAttached ( ) ) { return _NULL ; } SlabRef slab = _slab ; _slab = _NULL ; _slabExpiresAt = _NUM ; return slab ; }
12286	private Dimension resolveDimensionName ( String dimensionName ) { Dimension dimension = dimensionDictionary . findByApiName ( dimensionName ) ; if ( dimension == _NULL ) { String msg = ErrorMessageFormat . UNABLE_TO_FIND_DIMENSION_FROM_DICTIONARY . format ( dimensionName ) ; LOG . error ( msg ) ; throw new DeserializationException ( msg ) ; } return dimension ; }
12415	public static java . sql . Date toSqlDate ( int month , int day , int year ) { java . util . Date newDate = toDate ( month , day , year , _NUM , _NUM , _NUM ) ; if ( newDate != _NULL ) { return new java . sql . Date ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
12462	public static byte [ ] toByteArray ( URL url ) throws IOException { URLConnection conn = url . openConnection ( ) ; try { return IOUtils . toByteArray ( conn ) ; } finally { close ( conn ) ; } }
12563	public V remove ( int key ) { V prev = _NULL ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
12624	public static byte [ ] toByteArray ( URLConnection urlConn ) throws IOException { InputStream inputStream = urlConn . getInputStream ( ) ; try { return IOUtils . toByteArray ( inputStream ) ; } finally { inputStream . close ( ) ; } }
12761	@ Override public String toString ( ) { StringBuffer uriSpecString = new StringBuffer ( ) ; if ( m_scheme != _NULL ) { uriSpecString . append ( m_scheme ) ; uriSpecString . append ( _CHAR ) ; } uriSpecString . append ( getSchemeSpecificPart ( ) ) ; return uriSpecString . toString ( ) ; }
12764	public Collection < IDevice > filterByUsed ( @ NotNull Collection < IDevice > devices ) { Set < IDevice > used = Sets . newHashSetWithExpectedSize ( myDevicesUsedInLaunch . size ( ) ) ; for ( IDevice d : devices ) { if ( myDevicesUsedInLaunch . contains ( d . getSerialNumber ( ) ) ) { used . add ( d ) ; } } return used ; }
12799	private StringBuffer formatImaginary ( double absIm , StringBuffer toAppendTo , FieldPosition pos ) { pos . setBeginIndex ( _NUM ) ; pos . setEndIndex ( _NUM ) ; CompositeFormat . formatDouble ( absIm , getImaginaryFormat ( ) , toAppendTo , pos ) ; if ( toAppendTo . toString ( ) . equals ( _CHAR _NUM _CHAR ) ) { toAppendTo . setLength ( _NUM ) ; } return toAppendTo ; }
12860	public Preference inflate ( int resource , PreferenceGroup root ) { XmlResourceParser parser = getContext ( ) . getResources ( ) . getXml ( resource ) ; try { return inflate ( parser , root ) ; } finally { parser . close ( ) ; } }
12915	@ CalledByNative static void openDateAndTimeSettings ( Context context ) { Intent intent = new Intent ( android . provider . Settings . ACTION_DATE_SETTINGS ) ; try { intent . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK ) ; context . startActivity ( intent ) ; } catch ( android . content . ActivityNotFoundException ex ) { } }
12942	public float nextFloat ( boolean includeZero , boolean includeOne ) { float d = _NUM . _NUM ; do { d = nextFloat ( ) ; if ( includeOne && nextBoolean ( ) ) d += _NUM . _NUM ; } while ( ( d > _NUM . _NUM ) || ( ! includeZero && d == _NUM . _NUM ) ) ; return d ; }
13026	public int writeTypeList ( TypeList typeList ) { int off = data . position ( ) ; short [ ] types = typeList . types ; writeInt ( types . length ) ; for ( short type : types ) { writeShort ( type ) ; } return off ; }
13037	public static java . sql . Timestamp toTimestamp ( String date , String time ) { java . util . Date newDate = toDate ( date , time ) ; if ( newDate != _NULL ) { return new java . sql . Timestamp ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
13046	private static int parseNotificationId ( String id ) { try { return Integer . parseInt ( id ) ; } catch ( NumberFormatException nfe ) { Log . w ( TAG , _CHAR Exception while parsing download id : '' + id ) ; return - _NUM ; } }
13051	public static < T > boolean contains ( Enumeration < T > enumeration , T element ) { if ( enumeration != _NULL ) { while ( enumeration . hasMoreElements ( ) ) { T candidate = enumeration . nextElement ( ) ; if ( ObjectUtils . nullSafeEquals ( candidate , element ) ) return _BOOL ; } } return _BOOL ; }
13057	public boolean hasSelectedMatchLevelNode ( ) { TreePath [ ] paths = dataTree . getSelectionPaths ( ) ; if ( paths != _NULL ) { for ( TreePath path : paths ) { if ( getMatchLevelNodeFromPath ( path ) != _NULL ) return _BOOL ; } } return _BOOL ; }
13062	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( getInt ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
13075	private void createVendorOptionPanel ( ) { vendorOptionFillFactory = new VendorOptionFillFactory ( getPanelId ( ) , getFunctionManager ( ) ) ; List < VendorOptionInterface > voList = vendorOptionFillFactory . getVendorOptionList ( ) ; if ( voList != _NULL ) { for ( VendorOptionInterface vendorOption : voList ) { vendorOption . setParentPanel ( this ) ; } } }
13106	public void goToPreviousBackStack ( ) throws NavigatorException { FragmentManager fragmentManager = ( ( FragmentActivity ) mContextReference . getContext ( ) ) . getSupportFragmentManager ( ) ; if ( canGoBack ( fragmentManager ) ) { fragmentManager . popBackStack ( ) ; } else { throw new NavigatorException ( _CHAR You do n _CHAR_CHAR ) ; } }
13114	public void close ( ) { try { if ( textStorageReader != _NULL ) textStorageReader . closeAllFiles ( ) ; if ( dataIndexReader != _NULL ) dataIndexReader . close ( ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
13152	public static float limit ( float number , float between , float and ) { if ( number <= between ) { return between ; } if ( number >= and ) { return and ; } return number ; }
13170	private static void determineFirstDigit ( StringBuilder resultString , int lgPatternFound ) throws NotFoundException { for ( int d = _NUM ; d < _NUM ; d ++ ) { if ( lgPatternFound == FIRST_DIGIT_ENCODINGS [ d ] ) { resultString . insert ( _NUM , ( char ) ( _CHAR + d ) ) ; return ; } } throw NotFoundException . getNotFoundInstance ( ) ; }
13201	public void changeAlpha ( int value ) { this . alpha += value ; if ( alpha > _NUM ) { alpha = _NUM ; } else if ( alpha < _NUM ) { alpha = _NUM ; } }
13210	public static long stringToMilliseconds ( String formattedDate , SimpleDateFormat dateFormat ) { try { return dateFormat . parse ( formattedDate ) . getTime ( ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; } return - _NUM ; }
13249	@ Override public void openFile ( URL url ) { List < SLDDataInterface > sldDataList = _NULL ; for ( ExtensionInterface extension : extensionList ) { if ( sldDataList == _NULL ) { sldDataList = extension . open ( url ) ; } } loadSLDString ( _BOOL , _BOOL , sldDataList ) ; }
13251	public void shutdown ( final long timeout , final TimeUnit timeUnit ) throws TimeoutException { final long timeOutAt = System . currentTimeMillis ( ) + timeUnit . toMillis ( timeout ) ; while ( hasBacklog ( ) ) { if ( timeout >= _NUM && System . currentTimeMillis ( ) > timeOutAt ) { throw TimeoutException . INSTANCE ; } } halt ( ) ; }
13269	private void addWindowsPath ( int id , String path ) { if ( path == _NULL || path . equals ( _CHAR _CHAR ) ) { return ; } _sb . append ( id ) ; _sb . append ( _CHAR RCDATA BEGIN \ _CHAR _CHAR ) ; _sb . append ( path . replaceAll ( _CHAR \\\\ _CHAR , _CHAR \\\\\\\\ _CHAR ) . replaceAll ( _CHAR / _CHAR , _CHAR \\\\\\\\ _CHAR ) ) ; _sb . append ( _CHAR \\ _NUM \ _CHAR END \ n _CHAR ) ; }
13304	private boolean maybeDisableSync ( ) { if ( mSyncEverything . isChecked ( ) || ! getSelectedModelTypes ( ) . isEmpty ( ) || ! canDisableSync ( ) ) { return _BOOL ; } SyncController . get ( getActivity ( ) ) . stop ( ) ; mSyncSwitchPreference . setChecked ( _BOOL ) ; updateSyncStateFromSwitch ( ) ; return _BOOL ; }
13375	public Node < K , V > first ( ) { Node < K , V > node = this ; Node < K , V > child = node . left ; while ( child != _NULL ) { node = child ; child = node . left ; } return node ; }
13384	public JSONObject putOnce ( String key , Object value ) throws JSONException { if ( key != _NULL && value != _NULL ) { if ( this . opt ( key ) != _NULL ) { throw new JSONException ( _CHAR Duplicate key \ _CHAR _CHAR + key + _CHAR \ _CHAR _CHAR ) ; } this . put ( key , value ) ; } return this ; }
13393	private boolean matches ( String selector , String name ) { if ( selector . equals ( _CHAR * _CHAR ) ) { return _BOOL ; } if ( selector . endsWith ( _CHAR . * _CHAR ) ) { return name . startsWith ( selector . substring ( _NUM , selector . length ( ) - _NUM ) ) ; } return name . equals ( selector ) ; }
13403	public static boolean isRootModuleWithNoSources ( @ NotNull Module module ) { if ( ModuleRootManager . getInstance ( module ) . getSourceRoots ( ) . length == _NUM ) { String gradlePath = getGradlePath ( module ) ; if ( gradlePath == _NULL || gradlePath . equals ( _CHAR : _CHAR ) ) { return _BOOL ; } } return _BOOL ; }
13483	public static void f ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
13495	public void destroyReaderModeControl ( ) { if ( mControl != _NULL ) { ( ( ViewGroup ) mControl . getParent ( ) ) . removeView ( mControl ) ; mControl = _NULL ; if ( mResourceLoader != _NULL ) { mResourceLoader . unregisterResource ( R . id . reader_mode_view ) ; } } }
13660	private void selectEngine ( PacScriptSource pacSource ) { try { Logger . log ( getClass ( ) , LogLevel . INFO , _CHAR Using javax . script JavaScript engine . '' ) ; this . pacScriptParser = new JavaxPacScriptParser ( pacSource ) ; } catch ( Exception e ) { Logger . log ( getClass ( ) , LogLevel . ERROR , _CHAR PAC parser error . '' , e ) ; } }
13664	public void updateEnableStateFXItems ( ) { for ( MenuItem menuItem : menuItem2CommandFX . keySet ( ) ) { ICommand command = menuItem2CommandFX . get ( menuItem ) ; menuItem . setDisable ( ! command . isApplicable ( ) ) ; if ( command instanceof ICheckBoxCommand ) { ( ( CheckMenuItem ) menuItem ) . setSelected ( ( ( ICheckBoxCommand ) command ) . isSelected ( ) ) ; } } }
13666	@ Override public LSSerializer createLSSerializer ( ) { try { Class serializerClass = ObjectFactory . findProviderClass ( _CHAR org . apache . xml . serializer . dom3 . LSSerializerImpl _CHAR , ObjectFactory . findClassLoader ( ) , _BOOL ) ; return ( LSSerializer ) serializerClass . newInstance ( ) ; } catch ( Exception e ) { } return new DOMSerializerImpl ( ) ; }
13691	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
13739	private boolean isAfterParent ( final BSPTree < Euclidean1D > node ) { final BSPTree < Euclidean1D > parent = node . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return node == childAfter ( parent ) ; } }
13741	public void back ( ) throws JSONException { if ( usePrevious || index <= _NUM ) { throw new JSONException ( _CHAR Stepping back two steps is not supported _CHAR ) ; } this . index -= _NUM ; this . character -= _NUM ; this . usePrevious = _BOOL ; this . eof = _BOOL ; }
13768	public static String createFilePath ( File cacheDir , String key ) { try { return cacheDir . getAbsolutePath ( ) + File . separator + CACHE_FILENAME_PREFIX + URLEncoder . encode ( key . replace ( _CHAR * _CHAR , _CHAR _CHAR ) , _CHAR UTF - _NUM _CHAR ) ; } catch ( final UnsupportedEncodingException e ) { Log . e ( TAG , _CHAR createFilePath - _CHAR + e ) ; } return _NULL ; }
13792	private boolean checkDisband ( Legion legion ) { if ( legion . isDisbanding ( ) ) { if ( ( System . currentTimeMillis ( ) / _NUM ) > legion . getDisbandTime ( ) ) { disbandLegion ( legion ) ; return _BOOL ; } } return _BOOL ; }
13819	private Map < Integer , Double > generateAbsent ( ) { Map < Integer , Double > generated = new HashMap < Integer , Double > ( ) ; do { generated . putAll ( generate ( ) ) ; for ( Integer key : javaMap . keySet ( ) ) generated . remove ( key ) ; } while ( generated . size ( ) < _NUM ) ; return generated ; }
13826	private int findMax ( int [ ] lastPositions ) { int max = lastPositions [ _NUM ] ; for ( int value : lastPositions ) { if ( value > max ) { max = value ; } } return max ; }
13887	protected RegisterType mergePreRegisterTypeFromPredecessors ( int registerNumber ) { RegisterType mergedRegisterType = _NULL ; for ( AnalyzedInstruction predecessor : predecessors ) { RegisterType predecessorRegisterType = predecessor . postRegisterMap [ registerNumber ] ; assert predecessorRegisterType != _NULL ; mergedRegisterType = predecessorRegisterType . merge ( mergedRegisterType ) ; } return mergedRegisterType ; }
13916	public int minEffectiveTotalRange ( ) { if ( fType == XSParticleDecl . PARTICLE_EMPTY ) { return _NUM ; } if ( fType == PARTICLE_MODELGROUP ) { return ( ( XSModelGroupImpl ) fValue ) . minEffectiveTotalRange ( ) * fMinOccurs ; } return fMinOccurs ; }
13945	@ Override public int read ( ) throws IOException { InputStream input = m_streams . get ( ) ; if ( _NULL != input ) { return input . read ( ) ; } else { return - _NUM ; } }
13946	public final boolean equals ( Object obj ) { if ( toString ( ) == _NULL ) { return ( obj != _NULL ) && ( obj . toString ( ) == _NULL ) ; } if ( obj instanceof Encoding ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
13996	public Node < K , V > last ( ) { Node < K , V > node = this ; Node < K , V > child = node . right ; while ( child != _NULL ) { node = child ; child = node . right ; } return node ; }
13997	public String upload_file1 ( String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { String parts [ ] = this . upload_file ( local_filename , file_ext_name , meta_list ) ; if ( parts != _NULL ) { return parts [ _NUM ] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts [ _NUM ] ; } else { return _NULL ; } }
14028	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; overridePendingTransition ( _NUM , _NUM ) ; Scoop . getInstance ( ) . apply ( this ) ; setContentView ( R . layout . activity_main ) ; ButterKnife . bind ( this ) ; Scoop . getInstance ( ) . bind ( this ) ; setSupportActionBar ( mAppBar ) ; }
14101	public void removeMember ( String targetMemberName ) throws ClusterException { removeMemberFromReplGroup ( targetMemberName ) ; try { saveFile ( ) ; } catch ( FileNotFoundException ex ) { throw new ClusterException ( _CHAR Failed to remove _CHAR + targetMemberName + _CHAR member from _CHAR + clusterConfigFile + _CHAR . _CHAR + ex . toString ( ) , ex ) ; } }
14105	public static final Vector2 [ ] show ( Window owner ) { ApplyForceAtPointDialog afd = new ApplyForceAtPointDialog ( owner ) ; afd . setLocationRelativeTo ( owner ) ; afd . setVisible ( _BOOL ) ; if ( ! afd . canceled ) { return new Vector2 [ ] { afd . forceAtPointPanel . getForce ( ) , afd . forceAtPointPanel . getPoint ( ) } ; } return _NULL ; }
14187	private synchronized void sendMesssage ( Message message , Peer peer ) throws IOException { System . out . println ( _CHAR Sending _CHAR + message ) ; outBuffer . clear ( ) ; message . writeToByteBuffer ( outBuffer ) ; outBuffer . flip ( ) ; channel . send ( outBuffer , peer . getAddress ( ) ) ; peer . sentData ( ) ; updatePeerLists ( ) ; }
14243	public static String convertTeamColorToName ( final int teamValue ) { final Team [ ] teams = Team . values ( ) ; for ( final Team team : teams ) { if ( team . getValue ( ) == teamValue ) { return StringUtils . capitalize ( team . toString ( ) . toLowerCase ( ) . replaceAll ( _CHAR team_ _CHAR , _CHAR _CHAR ) ) ; } } return _CHAR UNKNOWN_TEAM _CHAR ; }
14252	public void renew ( long duration ) throws UnknownLeaseException , LeaseDeniedException , RemoteException { super . renew ( duration ) ; synchronized ( this ) { if ( createdXtn != _NULL ) { ServerTransaction txn = ( ServerTransaction ) createdXtn ; txn . setLease ( duration ) ; } } }
14270	public BlockId block ( ) { internalLock . readLock ( ) . lock ( ) ; try { return blk ; } finally { internalLock . readLock ( ) . unlock ( ) ; } }
14298	@ Override public void init ( String configPrefix ) throws MaryConfigurationException { String precomputedJoinCostFileName = MaryProperties . getFilename ( configPrefix + _CHAR . precomputedJoinCostFile _CHAR ) ; try { load ( precomputedJoinCostFileName , _NULL , _NULL , _NUM ) ; } catch ( IOException ioe ) { throw new MaryConfigurationException ( _CHAR Problem loading join file _CHAR + precomputedJoinCostFileName , ioe ) ; } }
14376	public static int sign ( int iValue ) { if ( iValue > _NUM ) { return _NUM ; } if ( iValue < _NUM ) { return - _NUM ; } return _NUM ; }
14392	private String fixMalformedJson ( String string ) { string = string . trim ( ) ; if ( ! string . startsWith ( _CHAR { _CHAR ) ) { string = _CHAR { _CHAR + string + _CHAR } _CHAR ; string = string . replaceAll ( START_OF_TEXT , _CHAR , _CHAR ) ; string = string . replaceAll ( END_OF_TEXT , _CHAR : _CHAR ) ; } return string ; }
14469	public static void v ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_VERBOSE ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . v ( tag , msg ) ; }
14472	protected ActionBar supportActionBar ( Toolbar toolbar ) { setSupportActionBar ( toolbar ) ; ActionBar actionBar = getSupportActionBar ( ) ; if ( actionBar != _NULL ) { actionBar . setDisplayHomeAsUpEnabled ( _BOOL ) ; actionBar . setDisplayShowHomeEnabled ( _BOOL ) ; } return actionBar ; }
14516	public void init ( Table t , Graph g , Class tupleType ) { if ( m_table != _NULL ) { throw new IllegalStateException ( _CHAR This TupleManager has already been initialized _CHAR ) ; } m_table = t ; m_graph = g ; m_tupleType = tupleType ; m_tuples = _NULL ; }
14576	public boolean isShortFeature ( String featureName ) { try { int index = getFeatureIndex ( featureName ) ; return isShortFeature ( index ) ; } catch ( Exception e ) { return _BOOL ; } }
14591	private InputStream downloadUrl ( final URL url ) throws IOException { HttpURLConnection conn = ( HttpURLConnection ) url . openConnection ( ) ; conn . setReadTimeout ( NET_READ_TIMEOUT_MILLIS ) ; conn . setConnectTimeout ( NET_CONNECT_TIMEOUT_MILLIS ) ; conn . setRequestMethod ( _CHAR GET _CHAR ) ; conn . setDoInput ( _BOOL ) ; conn . connect ( ) ; return conn . getInputStream ( ) ; }
14625	public Fraction divide ( Fraction fraction ) { if ( fraction == _NULL ) { throw MathRuntimeException . createIllegalArgumentException ( NULL_FRACTION ) ; } if ( fraction . numerator == _NUM ) { throw MathRuntimeException . createArithmeticException ( _CHAR the fraction to divide by must not be zero : { _NUM } / { _NUM } _CHAR , fraction . numerator , fraction . denominator ) ; } return multiply ( fraction . reciprocal ( ) ) ; }
14673	public void back ( ) throws JSONException { if ( this . usePrevious || this . index <= _NUM ) { throw new JSONException ( _CHAR Stepping back two steps is not supported _CHAR ) ; } this . index -= _NUM ; this . character -= _NUM ; this . usePrevious = _BOOL ; this . eof = _BOOL ; }
14746	public void execute ( IAction action ) throws InvocationTargetException , InterruptedException { if ( action != _NULL && ! action . isEnabled ( ) ) { action . setEnabled ( _BOOL ) ; } else { final ISVNRemoteFile svnResource = getSingleSelectedSVNRemoteFile ( ) ; execute ( svnResource ) ; } }
14758	private void showMultiPanel ( WKTType wktType ) { boolean enabled = _BOOL ; if ( wktType != _NULL ) { wktType . canHaveMultipleShapes ( ) ; } multiList . setVisible ( enabled ) ; addMultiButton . setEnabled ( enabled ) ; removeMultiButton . setEnabled ( enabled ) ; }
14777	public LocalVarNode findLocalVarNode ( Object value ) { if ( opts . rta ( ) ) { value = _NULL ; } else if ( value instanceof Local ) { return localToNodeMap . get ( ( Local ) value ) ; } return valToLocalVarNode . get ( value ) ; }
14857	public static void d ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_DEBUG ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . d ( tag , msg ) ; }
14866	private BSPTree < Euclidean1D > nextInternalNode ( BSPTree < Euclidean1D > node ) { if ( childAfter ( node ) . getCut ( ) != _NULL ) { return leafAfter ( node ) . getParent ( ) ; } while ( isAfterParent ( node ) ) { node = node . getParent ( ) ; } return node . getParent ( ) ; }
14960	public void stopReplicationService ( ) throws Exception { if ( _BOOL == isAutoRecoveryEnabled ( ) ) { return ; } for ( Entry < BookieServer , AutoRecoveryMain > autoRecoveryProcess : autoRecoveryProcesses . entrySet ( ) ) { autoRecoveryProcess . getValue ( ) . shutdown ( ) ; LOG . debug ( _CHAR Shutdown Auditor Recovery for the bookie : '' + autoRecoveryProcess . getKey ( ) . getLocalAddress ( ) ) ; } }
14976	public void retry ( Context context , OCUpload upload ) { if ( upload != _NULL && context != _NULL ) { Account account = AccountUtils . getOwnCloudAccountByName ( context , upload . getAccountName ( ) ) ; retry ( context , account , upload ) ; } else { throw new IllegalArgumentException ( _CHAR Null parameter ! _CHAR ) ; } }
14989	private void checkWhitespace ( XMLString value ) { int end = value . offset + value . length ; for ( int i = value . offset ; i < end ; ++ i ) { if ( ! XMLChar . isSpace ( value . ch [ i ] ) ) { reportFatalError ( _CHAR ContentIllegalAtTopLevel _CHAR ) ; return ; } } }
15015	private String serializeJobRow ( JobRow jobRow , UriInfo uriInfo ) { try { return objectMappers . getMapper ( ) . writeValueAsString ( jobPayloadBuilder . buildPayload ( jobRow , uriInfo ) ) ; } catch ( JsonProcessingException e ) { LOG . error ( _CHAR Error serializing JobRow : % s _CHAR , e ) ; throw new RuntimeException ( e ) ; } }
15016	@ Override protected Class < ? > resolveClass ( ObjectStreamClass objectStreamClass ) throws IOException , ClassNotFoundException { Class < ? > clazz = Class . forName ( objectStreamClass . getName ( ) , _BOOL , classLoader ) ; if ( clazz != _NULL ) { return clazz ; } else { return super . resolveClass ( objectStreamClass ) ; } }
15024	public String parse ( String str , Model m ) { try { str = VEngine . parse ( str , m . context ) ; } catch ( Exception e ) { log . error ( str , e ) ; } return str ; }
15060	@ Override public int size ( ) { int size = _NUM ; for ( Node < E > node = top . get ( ) ; node != _NULL ; node = node . next ) { if ( node . get ( ) != _NULL ) { size ++ ; } } return size ; }
15135	public final void privateInitialize ( String serviceName , CordovaInterface cordova , CordovaWebView webView , CordovaPreferences preferences ) { assert this . cordova == _NULL ; this . serviceName = serviceName ; this . cordova = cordova ; this . webView = webView ; this . preferences = preferences ; initialize ( cordova , webView ) ; pluginInitialize ( ) ; }
15201	public boolean removeDataSet ( T d ) { if ( d == _NULL ) return _BOOL ; boolean removed = mDataSets . remove ( d ) ; if ( removed ) { mYValCount -= d . getEntryCount ( ) ; calcMinMax ( _NUM , mYValCount ) ; } return removed ; }
15204	public CustomConfiguration tryGetHostConfiguration ( String hostName , HttpServletRequest request ) { try { return ConfigurationService . getHostConfiguration ( hostName , request . getRemoteAddr ( ) , request . getSession ( ) . getId ( ) ) ; } catch ( ConfigurationException e ) { Logger . debug ( getClass ( ) , _CHAR Failed to retrieve host configuration : _CHAR + hostName ) ; return _NULL ; } }
15289	boolean isPinned ( ) { internalLock . readLock ( ) . lock ( ) ; try { return pins > _NUM ; } finally { internalLock . readLock ( ) . unlock ( ) ; } }
15333	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } }
15348	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( IOException e ) { } } }
15372	public Tuple [ ] clearInternal ( ) { Tuple [ ] t = new Tuple [ getTupleCount ( ) ] ; Iterator iter = tuples ( ) ; for ( int i = _NUM ; iter . hasNext ( ) ; ++ i ) { t [ i ] = ( Tuple ) iter . next ( ) ; } m_tuples . clear ( ) ; return t ; }
15378	protected final Class < ? > compileToClass ( Java . CompilationUnit compilationUnit ) throws CompileException { ClassLoader cl = this . compileToClassLoader ( compilationUnit ) ; try { return cl . loadClass ( this . className ) ; } catch ( ClassNotFoundException ex ) { throw new JaninoRuntimeException ( ( _CHAR SNO : Generated compilation unit does not declare class _CHAR_CHAR_CHAR _CHAR ) , ex ) ; } }
15386	public void select ( List < String > columnNames ) throws QueryPlanException { if ( ! this . selectColumns . isEmpty ( ) ) { throw new QueryPlanException ( _CHAR Can not add more than one select operator to this query . '' ) ; } if ( columnNames . isEmpty ( ) ) { throw new QueryPlanException ( _CHAR Can not select no columns . '' ) ; } this . selectColumns = columnNames ; }
15415	public static void main ( String [ ] args ) { if ( args . length < _NUM ) { System . err . println ( _CHAR Usage : HTTPDStatus URL1 [ URL2 ... URLN ] _CHAR ) ; return ; } for ( int i = _NUM ; i < args . length ; i ++ ) { httpdWarning ( args [ i ] ) ; } }
15446	public static byte [ ] toByteArray ( URL url ) throws IOException { URLConnection conn = url . openConnection ( ) ; try { return IOUtils . toByteArray ( conn ) ; } finally { close ( conn ) ; } }
15470	private void extendTail ( int count ) { if ( terminated || count < _NUM ) { return ; } while ( -- count >= _NUM ) { final Slot inserted = insertSlotAt ( size , lastSlot ) ; inserted . withTags ( TAG_EXTENSION ) ; } }
15516	public AemRadioGroup selectByLabel ( String label ) { for ( AemRadioOption option : values ) { if ( label . equals ( option . getLabel ( ) ) ) { option . setSelected ( ) ; break ; } } return this ; }
15541	private void restoreFromKeypress ( final KeyEvent keyEvent , final int keyNumber ) { if ( keyEvent . isAltDown ( ) ) { final int arrayIndex = ( keyNumber > _NUM ? keyNumber : MAX_RECENT_MESSAGES ) - _NUM ; if ( arrayIndex < recentMessages . size ( ) ) { displayMessage ( recentMessages . get ( arrayIndex ) ) ; } keyEvent . consume ( ) ; } }
15549	@ Override public void terminate ( ) { synchronized ( mutex ) { refCounter -- ; if ( refCounter == _NUM ) { super . terminate ( ) ; ldms . remove ( entry ) ; } } }
15563	public WebElement clickElementIfExists ( final List < WebElement > elements , final String elementName ) { for ( WebElement element : elements ) { if ( elementName . equals ( element . getText ( ) ) ) { element . click ( ) ; return element ; } } throw new IllegalArgumentException ( String . format ( _CHAR There is no element named % s _CHAR , elementName ) ) ; }
15672	public void discard ( ServiceRegistrar reg ) { synchronized ( registrars ) { if ( terminated ) { throw new IllegalStateException ( _CHAR discovery terminated _CHAR ) ; } if ( reg == _NULL ) return ; sendDiscarded ( reg , _NULL ) ; } }
15701	public void unlockUserInput ( ) { locked = _BOOL ; samplesSpreadSheet . unlockUserInput ( ) ; getCommandManager ( ) . setEnableCritical ( _BOOL ) ; frame . setCursor ( Cursor . getDefaultCursor ( ) ) ; searchManager . getFindDialogAsToolBar ( ) . setEnableCritical ( _BOOL ) ; frame . setCursor ( Cursor . getDefaultCursor ( ) ) ; updateStatusBar ( ) ; }
15702	public long [ ] unCompress ( byte [ ] compInput ) { try { return Snappy . uncompressLongArray ( compInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return _NULL ; }
15738	public static void e ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_ERROR ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . e ( tag , msg ) ; }
15763	public void addSymbolizerToRule ( Symbolizer newSymbolizer ) { if ( this . symbolData . getRule ( ) == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR rule == _NULL _CHAR ) ; } else { List < Symbolizer > symbolizerList = ( List < Symbolizer > ) this . symbolData . getRule ( ) . symbolizers ( ) ; symbolizerList . add ( newSymbolizer ) ; } }
15829	public boolean isKeyguardLocked ( ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . JELLY_BEAN ) { LogUtils . e ( _CHAR can not call isKeyguardLocked if SDK_INT < 16 '' ) ; return _BOOL ; } else { return keyguardManager . isKeyguardLocked ( ) ; } }
15870	private static boolean checkNullForMeasures ( Object object ) { Object [ ] measures = ( Object [ ] ) object ; for ( Object measure : measures ) { if ( _NULL != measure ) { return _BOOL ; } } return _BOOL ; }
15958	public CART load ( String fileName ) throws IOException , MaryConfigurationException { FileInputStream fis = new FileInputStream ( fileName ) ; try { return loadFromStream ( fis ) ; } finally { fis . close ( ) ; } }
15959	@ Override public boolean waitForYellowStatus ( ) { if ( client == _NULL ) { log . warn ( _CHAR waitForYellowStatus ( ) - client for the ElasticSearch cluster seems to have null value . '' ) ; return _BOOL ; } checkYellowStatus ( ) ; log . debug ( _CHAR waitForYellowStatus ( ) - Everything is alright . '' ) ; return _BOOL ; }
15973	public boolean isValid ( long startTime , long dateTime ) { long testTime = startTime ; if ( testTime == dateTime ) return _BOOL ; while ( testTime < dateTime ) { testTime = next ( startTime , testTime , _NUM ) ; if ( testTime == dateTime ) return _BOOL ; } return _BOOL ; }
15981	public static URL stringToURL ( String string ) { try { return new URL ( string ) ; } catch ( MalformedURLException exception ) { System . err . println ( _CHAR invalid URL : _CHAR + string + _CHAR : _CHAR + exception ) ; return _NULL ; } }
16158	private static void usage ( boolean printDebugOptions ) { SmaliHelpFormatter formatter = new SmaliHelpFormatter ( ) ; int consoleWidth = ConsoleUtil . getConsoleWidth ( ) ; if ( consoleWidth <= _NUM ) { consoleWidth = _NUM ; } formatter . setWidth ( consoleWidth ) ; formatter . printHelp ( _CHAR java - jar smali . jar [ options ] [ -- ] [ < smali - file > | folder ] * _CHAR , _CHAR assembles a set of smali files into a dex file _CHAR , basicOptions , printDebugOptions ? debugOptions : _NULL ) ; }
16213	public boolean containsHeader ( String name ) { for ( int i = _NUM ; i < headers . size ( ) ; i ++ ) { Header header = ( Header ) headers . get ( i ) ; if ( header . getName ( ) . equalsIgnoreCase ( name ) ) { return _BOOL ; } } return _BOOL ; }
16236	private void handleResponse ( int response , ResponseData rawData ) { mPolicy . processServerResponse ( response , rawData ) ; if ( mPolicy . allowAccess ( ) ) { mCallback . allow ( response ) ; } else { mCallback . dontAllow ( response ) ; } }
16316	public OrderedScheduler build ( ) { if ( corePoolSize <= _NUM ) { corePoolSize = Runtime . getRuntime ( ) . availableProcessors ( ) ; } if ( _NULL == threadFactory ) { threadFactory = Executors . defaultThreadFactory ( ) ; } return new OrderedScheduler ( name , corePoolSize , threadFactory , traceTaskExecution , traceTaskExecutionWarnTimeUs , statsLogger , perExecutorStatsLogger ) ; }
16385	static void silentlyClose ( Closeable closeable ) { try { if ( closeable != _NULL ) { closeable . close ( ) ; } } catch ( IOException e ) { } }
16517	public static String asSql ( String expression ) { if ( expression == _NULL ) { return _NULL ; } for ( String key : EL_SQL_MAP . keySet ( ) ) { expression = expression . replaceAll ( key , EL_SQL_MAP . get ( key ) ) ; } return expression ; }
16528	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { if ( fPerformValidation && fInElementContent ) { charDataInContent ( ) ; } fInCDATASection = _BOOL ; if ( fDocumentHandler != _NULL ) { fDocumentHandler . startCDATA ( augs ) ; } }
16547	public String upload_appender_file1 ( byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { String parts [ ] = this . upload_appender_file ( file_buff , file_ext_name , meta_list ) ; if ( parts != _NULL ) { return parts [ _NUM ] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts [ _NUM ] ; } else { return _NULL ; } }
16579	public void saveMovie ( String descriptor , VideoFormat vf ) throws MovieSaveException { try { this . videoFormat = vf ; itm . saveMovie ( mip . getMediaLocator ( ) , descriptor , videoFormat ) ; } catch ( Exception e ) { throw new MovieSaveException ( e ) ; } }
16591	public void updateLogo ( Logo logo ) { if ( logo == _NULL ) { updateLogo ( getDefaultLogo ( ) , _NULL , _BOOL ) ; } else { String contentDescription = TextUtils . isEmpty ( logo . altText ) ? _NULL : getResources ( ) . getString ( R . string . accessibility_google_doodle , logo . altText ) ; updateLogo ( logo . image , contentDescription , _BOOL ) ; } }
16593	@ Override public boolean equals ( Object obj ) { if ( ! ( obj instanceof GenericEntity ) ) return _BOOL ; try { return this . compareTo ( ( GenericEntity ) obj ) == _NUM ; } catch ( ClassCastException e ) { return _BOOL ; } }
16658	public RingBuffer < T > start ( ) { final Sequence [ ] gatingSequences = consumerRepository . getLastSequenceInChain ( _BOOL ) ; ringBuffer . addGatingSequences ( gatingSequences ) ; checkOnlyStartedOnce ( ) ; for ( final ConsumerInfo consumerInfo : consumerRepository ) { consumerInfo . start ( executor ) ; } return ringBuffer ; }
16662	public void toNativeArray ( short [ ] dest , int offset , int len ) { if ( len == _NUM ) { return ; } if ( offset < _NUM || offset >= _pos ) { throw new ArrayIndexOutOfBoundsException ( offset ) ; } System . arraycopy ( _data , offset , dest , _NUM , len ) ; }
16668	private void startFileBasedMerge ( ) throws CarbonSortKeyAndGroupByException { try { dataSorterAndWriterExecutorService . shutdown ( ) ; dataSorterAndWriterExecutorService . awaitTermination ( _NUM , TimeUnit . DAYS ) ; } catch ( InterruptedException e ) { throw new CarbonSortKeyAndGroupByException ( _CHAR Problem while shutdown the server '' , e ) ; } }
16707	public byte [ ] compress ( long [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
16739	public boolean disableCharacteristicIndicate ( BluetoothGattCharacteristic characteristic ) { if ( characteristic != _NULL && ( characteristic . getProperties ( ) | BluetoothGattCharacteristic . PROPERTY_NOTIFY ) > _NUM ) { BleLog . w ( TAG , _CHAR characteristic . getProperties ( ) : _CHAR + characteristic . getProperties ( ) ) ; return setCharacteristicIndication ( getBluetoothGatt ( ) , characteristic , _BOOL ) ; } else { return _BOOL ; } }
16760	public short [ ] unCompress ( byte [ ] compInput ) { try { return Snappy . uncompressShortArray ( compInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return _NULL ; }
16765	public static byte [ ] toByteArray ( URLConnection urlConn ) throws IOException { InputStream inputStream = urlConn . getInputStream ( ) ; try { return IOUtils . toByteArray ( inputStream ) ; } finally { inputStream . close ( ) ; } }
16781	private synchronized void handleServiceConnectionError ( LicenseValidator validator ) { mPolicy . processServerResponse ( Policy . RETRY , _NULL ) ; if ( mPolicy . allowAccess ( ) ) { validator . getCallback ( ) . allow ( Policy . RETRY ) ; } else { validator . getCallback ( ) . dontAllow ( Policy . RETRY ) ; } }
16796	public JSONWriter array ( ) throws JSONException { if ( this . mode == _CHAR || this . mode == _CHAR || this . mode == _CHAR ) { this . push ( _NULL ) ; this . append ( _CHAR [ _CHAR ) ; this . comma = _BOOL ; return this ; } throw new JSONException ( _CHAR Misplaced array . '' ) ; }
16913	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( colourButton != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof Color ) { Color newValue = ( Color ) undoRedoObject . getNewValue ( ) ; colourButton . setColour ( newValue ) ; valueUpdated ( ) ; } } }
16945	public boolean onOverrideUrlLoading ( String url ) { for ( PluginEntry entry : this . entryMap . values ( ) ) { CordovaPlugin plugin = pluginMap . get ( entry . service ) ; if ( plugin != _NULL && plugin . onOverrideUrlLoading ( url ) ) { return _BOOL ; } } return _BOOL ; }
16985	public final void sendPacket ( AionServerPacket bp ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } sendMsgQueue . addLast ( bp ) ; enableWriteInterest ( ) ; } }
16993	public static String baseTypeName ( String s ) { int index = s . indexOf ( _CHAR [ _CHAR ) ; if ( index < _NUM ) { return s ; } else { return s . substring ( _NUM , index ) ; } }
16997	public double value ( ) throws ConcurrentModificationException , NoSuchElementException { if ( referenceCount != count ) { throw new ConcurrentModificationException ( ) ; } if ( current < _NUM ) { throw new NoSuchElementException ( ) ; } return values [ current ] ; }
17005	private void doSendEquipmentAlive ( final SourceDataTagValue aliveTagValue ) { int ttl = aliveTagValue . getTimeToLive ( ) ; if ( aliveTagInterval <= Integer . MAX_VALUE ) { ttl = aliveTagInterval . intValue ( ) ; } aliveTagValue . setTimeToLive ( ttl ) ; aliveTagValue . setPriority ( DataTagConstants . PRIORITY_HIGH ) ; this . processMessageSender . addValue ( aliveTagValue ) ; }
17032	public void updateView ( ) { Graphics2D graphics = ( Graphics2D ) getGraphics ( ) ; if ( graphics != _NULL ) { Dimension size = new Dimension ( ) ; draw ( graphics , size ) ; setPreferredSize ( size ) ; revalidate ( ) ; } }
17035	public static Double calcMaxDecisions ( final long min_impressions , final long max_impressions ) { if ( min_impressions <= _NUM ) { throw new IllegalArgumentException ( _CHAR Minimum number of unique impressions must be positive . '' ) ; } if ( max_impressions <= _NUM ) { throw new IllegalArgumentException ( _CHAR Maximum number of unique impressions must be positive . '' ) ; } return log ( _NUM . _NUM * max_impressions / min_impressions ) ; }
17065	private static ArrayList < ConstraintWidgetContainer > gatherContainers ( ConstraintWidgetContainer container ) { ArrayList < ConstraintWidgetContainer > containers = new ArrayList < > ( ) ; for ( ConstraintWidget widget : container . getChildren ( ) ) { if ( widget instanceof ConstraintWidgetContainer ) { containers . add ( ( ConstraintWidgetContainer ) widget ) ; } } return containers ; }
17147	@ Override public void actionPerformed ( ActionEvent ev ) { final megan . remote . RemoteServiceBrowser remoteServiceBrowser = ( megan . remote . RemoteServiceBrowser ) getViewer ( ) ; if ( remoteServiceBrowser != _NULL ) { String url = remoteServiceBrowser . getURL ( ) ; if ( url . length ( ) > _NUM ) { execute ( _CHAR detach remoteServer = _CHAR + url + _CHAR ; _CHAR ) ; } } }
17217	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
17228	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( server == _NULL ) { throw new InvalidObjectException ( _CHAR TxnMgrAdminProxy . readObject _CHAR + _CHAR failure - server _CHAR + _CHAR field is _NULL _CHAR ) ; } if ( proxyID == _NULL ) { throw new InvalidObjectException ( _CHAR TxnMgrAdminProxy . proxyID _CHAR + _CHAR failure - proxyID _CHAR + _CHAR field is _NULL _CHAR ) ; } }
17373	protected void validateSuperUserAccess ( ) { if ( config ( ) . isAuthenticationEnabled ( ) ) { String appId = clientAppId ( ) ; log . debug ( _CHAR [ { } ] Check super user access : Authenticated : { } -- Role : { } _CHAR , uri . getRequestUri ( ) , isClientAuthenticated ( ) , appId ) ; if ( ! config ( ) . getSuperUserRoles ( ) . contains ( appId ) ) { throw new RestException ( Status . UNAUTHORIZED , _CHAR This operation requires super - user access _CHAR ) ; } } }
17396	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } }
17414	public boolean mouseMoved ( @ AndroidCoordinate int x , @ AndroidCoordinate int y ) { if ( myMouseInteraction != _NULL ) { myMouseInteraction . mouseMoved ( pxToDp ( x ) , pxToDp ( y ) ) ; } if ( mySceneDraw . getCurrentUnderneathAnchor ( ) != _NULL ) { return _BOOL ; } return _BOOL ; }
17431	public static double entropy ( double [ ] vector ) { if ( vector == _NULL ) return _NUM ; else if ( vector . length < _NUM ) return _NUM ; else { double ret = _NUM ; for ( double d : vector ) ret += d * Math . log ( d ) ; return ret ; } }
17460	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
17462	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( userData != _NULL ) { userData = new WeakHashMap ( userData ) ; } if ( nodeTable != _NULL ) { nodeTable = new WeakHashMap ( nodeTable ) ; } }
17493	public boolean isSharedBroker ( String host ) { for ( NamespaceIsolationData policyData : this . policies . values ( ) ) { NamespaceIsolationPolicyImpl policy = new NamespaceIsolationPolicyImpl ( policyData ) ; if ( policy . isPrimaryBroker ( host ) ) { return _BOOL ; } } return _BOOL ; }
17523	public static String readFile ( final File file ) { try { return readFileWithExceptions ( file ) ; } catch ( IOException e ) { System . out . println ( ExceptionMessages . COULD_NOT_READ . with ( e ) ) ; } return _NULL ; }
17569	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } }
17573	public void updateUI ( ) { super . updateUI ( ) ; TreeCellRenderer tcr = getCellRenderer ( ) ; if ( tcr instanceof DefaultTreeCellRenderer ) { DefaultTreeCellRenderer dtcr = ( ( DefaultTreeCellRenderer ) tcr ) ; dtcr . setTextSelectionColor ( UIManager . getColor ( _CHAR Table . selectionForeground _CHAR ) ) ; dtcr . setBackgroundSelectionColor ( UIManager . getColor ( _CHAR Table . selectionBackground _CHAR ) ) ; } }
17610	public void hideBudgeAtIndex ( final int index ) { if ( badgeList . get ( index ) . getVisibility ( ) == GONE ) { Log . d ( TAG , _CHAR Budge at index : _CHAR + index + _CHAR already hidden _CHAR ) ; } else { BadgeHelper . hideBadge ( badgeList . get ( index ) ) ; badgeSaveInstanceHashMap . remove ( index ) ; } }
17680	public DataTagCacheObject createEmptyDataTag ( Long id ) { DataTagCacheObject dataTagCacheObject = new DataTagCacheObject ( ) ; dataTagCacheObject . setId ( id ) ; dataTagCacheObject . setName ( _CHAR UNKNOWN _CHAR ) ; dataTagCacheObject . setMode ( DataTagConstants . MODE_TEST ) ; dataTagCacheObject . setLogged ( _BOOL ) ; dataTagCacheObject . setSimulated ( _BOOL ) ; return dataTagCacheObject ; }
17700	private boolean isArcEnd ( final BSPTree < Sphere1D > node ) { if ( ! ( Boolean ) leafBefore ( node ) . getAttribute ( ) ) { return _BOOL ; } if ( ( Boolean ) leafAfter ( node ) . getAttribute ( ) ) { return _BOOL ; } return _BOOL ; }
17734	public static void f ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
17741	public void toggleSelection ( int position ) { if ( selectedItems . get ( position , _BOOL ) ) { selectedItems . delete ( position ) ; } else { selectedItems . put ( position , _BOOL ) ; } notifyItemChanged ( position ) ; }
17755	private static int nonEmptyLists ( List < ? > ... lists ) { int nonEmpty = _NUM ; for ( List < ? > list : lists ) { if ( list != _NULL && list . size ( ) > _NUM ) { ++ nonEmpty ; } } return nonEmpty ; }
17816	@ NotNull public ImageOverlayBuilder verify ( @ NotNull String candidateImageAsUrl , @ NotNull VerificationSet verificationSet ) { try { verify ( ImageIO . read ( new URL ( candidateImageAsUrl ) ) , verificationSet ) ; } catch ( IOException e ) { throw new ImageNotFoundException ( candidateImageAsUrl ) ; } return this ; }
17827	@ Override public boolean accept ( File file ) { if ( file . isDirectory ( ) ) { File [ ] files = file . listFiles ( ) ; return files == _NULL || files . length == _NUM ; } else { return file . length ( ) == _NUM ; } }
17904	public static int calculateSecurityServerCount ( int externalsessioncount ) { Float f = ( externalsessioncount / ( float ) _NUM . _NUM ) ; f = ( float ) Math . ceil ( f ) ; if ( f > _NUM . _NUM ) { f ++ ; } final int i = f . intValue ( ) ; return i ; }
18040	private void createTry ( polyglot . ast . Try tryStmt ) { polyglot . ast . Block finallyBlock = tryStmt . finallyBlock ( ) ; if ( finallyBlock == _NULL ) { createTryCatch ( tryStmt ) ; } else { createTryCatchFinally ( tryStmt ) ; } }
18068	private synchronized void invokeReadAheadCallback ( ) { if ( _NULL != readAheadCallback ) { if ( LOG . isTraceEnabled ( ) ) { LOG . trace ( _CHAR Cache has space , schedule the read ahead _CHAR ) ; } readAheadCallback . resumeReadAhead ( ) ; readAheadCallback = _NULL ; } }
18072	private static void createAndShowGUI ( ) { JFrame frame = new JFrame ( _CHAR MenuLookDemo _CHAR ) ; frame . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ) ; MenuLookDemo demo = new MenuLookDemo ( ) ; frame . setJMenuBar ( demo . createMenuBar ( ) ) ; frame . setContentPane ( demo . createContentPane ( ) ) ; frame . setSize ( _NUM , _NUM ) ; frame . setVisible ( _BOOL ) ; }
18090	public static void d ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_DEBUG ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . d ( tag , msg ) ; }
18111	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( getInt ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
18165	public int available ( ) throws IOException { int temp = stream . available ( ) ; if ( ( frameLength != AudioSystem . NOT_SPECIFIED ) && ( ( temp / frameSize ) > ( frameLength - framePos ) ) ) { return ( int ) ( frameLength - framePos ) * frameSize ; } else { return temp ; } }
18193	private void skipToNextBlock ( ) { while ( ! builder . eof ( ) ) { if ( atTokenSequence ( ProjectViewTokenType . NEWLINE , ProjectViewTokenType . IDENTIFIER ) ) { builder . advanceLexer ( ) ; return ; } builder . advanceLexer ( ) ; } }
18220	@ Override protected void assertDependentMetricsExist ( List < String > dependentDimensions ) { for ( String dependentDimension : dependentDimensions ) { if ( dimensionDictionary . findByApiName ( dependentDimension ) == _NULL ) { String message = String . format ( _CHAR Cardinality metric dependent dimension % s is not in the dimension dictionary _CHAR , dependentDimension ) ; LOG . error ( message ) ; throw new IllegalArgumentException ( message ) ; } } }
18247	@ Override public int hashCode ( ) { if ( fExpandedSystemId != _NULL ) { return fExpandedSystemId . hashCode ( ) ; } if ( fPublicId != _NULL ) { return fPublicId . hashCode ( ) ; } return _NUM ; }
18282	public static Map < String , Object > createUserPrefMap ( List < GenericValue > recList ) throws GeneralException { Map < String , Object > userPrefMap = new LinkedHashMap < String , Object > ( ) ; if ( recList != _NULL ) { for ( GenericValue value : recList ) { addPrefToMap ( value , userPrefMap ) ; } } return userPrefMap ; }
18358	public Node < K , V > last ( ) { Node < K , V > node = this ; Node < K , V > child = node . right ; while ( child != _NULL ) { node = child ; child = node . right ; } return node ; }
18415	public boolean commit ( ) { if ( mIsSuccess ) { mDatabase . setTransactionSuccessful ( ) ; mDatabase . endTransaction ( ) ; } boolean isRealSuccess = mIsSuccess ; mIsSuccess = _BOOL ; return isRealSuccess ; }
18418	public static void w ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_WARNING ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . w ( tag , msg ) ; }
18441	private void storeLegionMember ( LegionMember legionMember , boolean newMember ) { if ( newMember ) { addCachedLegionMember ( legionMember ) ; DAOManager . getDAO ( LegionMemberDAO . class ) . saveNewLegionMember ( legionMember ) ; } else { DAOManager . getDAO ( LegionMemberDAO . class ) . storeLegionMember ( legionMember . getObjectId ( ) , legionMember ) ; } }
18494	public void selectItem ( final int location , final boolean value ) { if ( value ) { this . selectedItems . put ( location , _BOOL ) ; } else { this . selectedItems . delete ( location ) ; } this . notifyItemChanged ( location ) ; }
18509	public static final String toString ( Object obj ) { if ( obj == _NULL ) return _CHAR _NULL _CHAR ; if ( obj instanceof String ) { return toString ( ( String ) obj ) ; } StringBuffer output = new StringBuffer ( ) ; toString ( output , obj ) ; return output . toString ( ) ; }
18577	public void populateColourMapField ( FieldIdEnum fieldId , ColorMap colourMap ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( fieldConfig != _NULL ) { fieldConfig . populateField ( colourMap ) ; } }
18648	@ Override public void onClick ( View v ) { if ( v . getId ( ) == R . id . upload_files_btn_cancel ) { setResult ( RESULT_CANCELED ) ; finish ( ) ; } else if ( v . getId ( ) == R . id . upload_files_btn_upload ) { new CheckAvailableSpaceTask ( ) . execute ( mBehaviourSpinner . getSelectedItemPosition ( ) == _NUM ) ; } }
18651	public void resetZoom ( ) { Iterator < FileFragment > entries = mCachedFragments . values ( ) . iterator ( ) ; while ( entries . hasNext ( ) ) { FileFragment fileFragment = ( FileFragment ) entries . next ( ) ; if ( fileFragment instanceof PreviewImageFragment ) { ( ( PreviewImageFragment ) fileFragment ) . getImageView ( ) . resetZoom ( ) ; } } }
18690	public boolean copyReference ( ) { final SelectedBlock selectedBlock = getSelectedBlock ( ) ; if ( selectedBlock . isSelected ( ) ) { StringSelection ss = new StringSelection ( getSelectedReference ( ) ) ; Toolkit . getDefaultToolkit ( ) . getSystemClipboard ( ) . setContents ( ss , _NULL ) ; return _BOOL ; } return _BOOL ; }
18696	public boolean isAssignableFrom ( final Class < ? > other ) { if ( other == _NULL ) { return _BOOL ; } if ( this . isParameterized ( ) ) { return _BOOL ; } return this . getRawType ( ) . isAssignableFrom ( other ) ; }
18731	private void removeHelpersSpawn ( ) { for ( Integer object : spawnedNpc ) { VisibleObject npc = World . getInstance ( ) . findVisibleObject ( object ) ; if ( npc != _NULL && npc . isSpawned ( ) ) { npc . getController ( ) . onDelete ( ) ; } } spawnedNpc . clear ( ) ; }
18748	private boolean filterComment ( ILogEntry logEntry , String comment ) { if ( comment == _NULL ) return _BOOL ; if ( regExp ) { return matchesExpression ( logEntry . getComment ( ) , comment + CHAR_MATCH_MANY ) ; } else { return containsExpression ( logEntry . getComment ( ) , comment ) ; } }
18760	public static String filenameEncode ( String string ) { if ( string != _NULL ) { string = string . replaceAll ( ILLEGAL_FILENAME_CHARS_REGEX , _CHAR _CHAR ) ; if ( string . length ( ) > _NUM ) { string = string . substring ( _NUM , _NUM ) ; } } return string ; }
18788	public boolean isThirdParty ( ) { if ( isOptionEnabled ( UrlFilterRuleOption . THIRD_PARTY ) ) { return _BOOL ; } if ( isOptionDisabled ( UrlFilterRuleOption . THIRD_PARTY ) ) { return _BOOL ; } return _BOOL ; }
18824	private static void usage ( boolean printDebugOptions ) { SmaliHelpFormatter formatter = new SmaliHelpFormatter ( ) ; int consoleWidth = ConsoleUtil . getConsoleWidth ( ) ; if ( consoleWidth <= _NUM ) { consoleWidth = _NUM ; } formatter . setWidth ( consoleWidth ) ; formatter . printHelp ( _CHAR java - jar baksmali . jar [ options ] < dex - file > _CHAR , _CHAR disassembles and / or dumps a dex file _CHAR , basicOptions , printDebugOptions ? debugOptions : _NULL ) ; }
18839	public static < T extends Bean > T load ( String collection , Bson query , Class < T > clazz ) { try { return load ( collection , query , clazz . newInstance ( ) ) ; } catch ( Exception e ) { if ( log . isErrorEnabled ( ) ) log . error ( e . getMessage ( ) , e ) ; } return _NULL ; }
18871	private ProxySelector autodetectProxyIfAvailable ( Dict proxySettings , ProxySelector result ) throws ProxyException { if ( isActive ( proxySettings . get ( _CHAR ProxyAutoDiscoveryEnable _CHAR ) ) ) { ProxySelector wp = new WpadProxySearchStrategy ( ) . getProxySelector ( ) ; if ( wp != _NULL ) { result = wp ; } } return result ; }
18880	@ Override public final long available ( ) { try { return is . available ( ) ; } catch ( IOException e ) { System . err . println ( _CHAR ERROR _CHAR + e ) ; return _NUM ; } }
18905	public void closeAllFiles ( ) { for ( InputReader r : fileId2raf ) { try { if ( r != _NULL ) r . close ( ) ; } catch ( Exception ex ) { } } }
18929	public void clear ( ) { actions . clear ( ) ; errorCodeMap . clear ( ) ; otherwiseActions . clear ( ) ; alwaysActions . clear ( ) ; if ( localContext != _NULL ) { localContext . get ( ) . clear ( ) ; } }
18953	public boolean isComponentPresent ( String componentName , String groupName ) { if ( isComponentGroupPresent ( groupName ) ) { if ( ! SidekickActions . isSectionExpanded ( getSectionByName ( groupName ) ) ) { clickComponentGroupToggle ( groupName ) ; } return getComponentNames ( groupName ) . contains ( componentName ) ; } throw new IllegalArgumentException ( _CHAR Group name _CHAR + groupName + _CHAR does not exist _CHAR ) ; }
18954	public int addNewShape ( ) { WKTSegmentList newSegmentList = new WKTSegmentList ( ) ; newSegmentList . addPoint ( new WKTPoint ( ) ) ; if ( geometryType . getNumOfPoints ( ) > _NUM ) { newSegmentList . addPoint ( new WKTPoint ( ) ) ; } addSegmentList ( segmentList . size ( ) , newSegmentList ) ; return segmentList . size ( ) ; }
18970	private boolean checkDuelCondition ( Effect effect ) { Creature creature = effect . getEffector ( ) ; if ( creature instanceof Player ) { if ( ! getOwner ( ) . isEnemy ( creature ) && effect . getTargetSlot ( ) == SkillTargetSlot . DEBUFF . ordinal ( ) ) { return _BOOL ; } } return _BOOL ; }
18991	public int read ( ) throws IOException { if ( count - pos <= _NUM ) { fill ( ) ; if ( count - pos <= _NUM ) { return - _NUM ; } } return buf [ pos ++ ] & _NUM ; }
19113	public void tryVibrate ( ) { if ( mVibrator != _NULL && mIsGloballyEnabled ) { long now = SystemClock . uptimeMillis ( ) ; if ( now - mLastVibrate >= VIBRATE_DELAY_MS ) { mVibrator . vibrate ( VIBRATE_LENGTH_MS ) ; mLastVibrate = now ; } } }
19159	public void addContext ( String str ) { if ( str == _NULL ) { throw new NullPointerException ( _CHAR str == _NULL _CHAR ) ; } context . append ( str ) ; if ( ! str . endsWith ( _CHAR \ n _CHAR ) ) { context . append ( _CHAR ) ; } }
19172	private void clearCurrentNotifications ( ) { mbeanNotifications . clearCurrentNotifications ( ) ; if ( mbeanNotifications . isListenerRegistered ( mbean ) ) { clearNotifications0 ( ) ; } else { clearNotifications ( ) ; } }
19214	public static byte [ ] toByteArray ( URL url ) throws IOException { URLConnection conn = url . openConnection ( ) ; try { return IOUtils . toByteArray ( conn ) ; } finally { close ( conn ) ; } }
19218	public void writeNullTerminatedString ( byte [ ] bytes ) throws IOException { int pos = _NUM ; while ( pos < bytes . length ) { if ( bytes [ pos ] == _NUM ) break ; pos ++ ; } if ( pos > _NUM ) write ( bytes , _NUM , pos ) ; write ( ( byte ) _NUM ) ; }
19249	public static < T1 , T2 > Pattern2 < T1 , T2 > and ( Observable < T1 > left , Observable < T2 > right ) { if ( left == _NULL ) { throw new NullPointerException ( _CHAR left _CHAR ) ; } if ( right == _NULL ) { throw new NullPointerException ( _CHAR right _CHAR ) ; } return new Pattern2 < T1 , T2 > ( left , right ) ; }
19360	public void groupBars ( float fromX , float groupSpace , float barSpace ) { if ( getBarData ( ) == _NULL ) { throw new RuntimeException ( _CHAR batData = _NULL _CHAR ) ; } else { getBarData ( ) . groupBars ( fromX , groupSpace , barSpace ) ; notifyDataSetChanged ( ) ; } }
19396	@ Override public void rollback ( ) throws RemoteException { tx . rollback ( ) ; try { tx = VanillaDb . txMgr ( ) . newTransaction ( isolationLevel , readOnly ) ; } catch ( Exception e ) { throw new RemoteException ( _CHAR error creating transaction _CHAR , e ) ; } }
19397	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( colourButton != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof Color ) { Color oldValue = ( Color ) undoRedoObject . getOldValue ( ) ; colourButton . setColour ( oldValue ) ; valueUpdated ( ) ; } } }
19402	private void refill ( ) { long nowNano = time . getNanoTime ( ) ; long deltaMs = time . getTimeDeltaMs ( lastRefill , nowNano ) ; if ( deltaMs < _NUM ) { return ; } tokens = Math . min ( tokens + deltaMs * rate , capacity ) ; lastRefill = nowNano ; }
19608	protected void removeAllAfterModel ( EpoxyModel < ? > model ) { List < EpoxyModel < ? >> modelsToRemove = getAllModelsAfter ( model ) ; int numModelsRemoved = modelsToRemove . size ( ) ; int initialModelCount = models . size ( ) ; pauseModelListNotifications ( ) ; modelsToRemove . clear ( ) ; resumeModelListNotifications ( ) ; notifyItemRangeRemoved ( initialModelCount - numModelsRemoved , numModelsRemoved ) ; }
19668	public int remove ( K key ) { int prev = ( int ) _NUM ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
19833	public int executeUpdate ( ) throws GenericDataSourceException { try { return _ps . executeUpdate ( ) ; } catch ( SQLException sqle ) { this . checkLockWaitInfo ( sqle ) ; throw new GenericDataSourceException ( _CHAR SQL Exception while executing the following : '' + _sql , sqle ) ; } }
19856	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T extends DimensionalItemObject > List < T > asTypedList ( Collection < DimensionalItemObject > collection ) { List < T > list = new ArrayList < > ( ) ; if ( collection != _NULL ) { for ( DimensionalItemObject object : collection ) { list . add ( ( T ) object ) ; } } return list ; }
19919	public static byte [ ] toByteArray ( URLConnection urlConn ) throws IOException { InputStream inputStream = urlConn . getInputStream ( ) ; try { return IOUtils . toByteArray ( inputStream ) ; } finally { inputStream . close ( ) ; } }
19923	private boolean isValidApiKeyDefinition ( ApiKeyAuthDefinition apiKeydef ) { if ( apiKeydef . getName ( ) . equalsIgnoreCase ( _CHAR key _CHAR ) || apiKeydef . getIn ( ) == In . QUERY ) { return _BOOL ; } else { diagCollector . addDiag ( Diag . warning ( SimpleLocation . UNKNOWN , _CHAR apiKey _CHAR is ignored . Only apiKey with _CHAR as _CHAR and _CHAR as _CHAR are _CHAR + _CHAR supported _CHAR , apiKeydef . getName ( ) ) ) ; return _BOOL ; } }
19936	public void finish ( ) { try { queryExecutor . finish ( ) ; } catch ( QueryExecutionException e ) { LOGGER . error ( e , _CHAR Problem while finish : '' ) ; } clearDictionaryFromQueryModel ( ) ; }
19983	public static String base64EncodeByteArray ( byte [ ] bytes ) { try { byte [ ] encodeBase64 = Base64 . encodeBase64 ( bytes ) ; return new String ( encodeBase64 , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { throw new RuntimeException ( _CHAR Exception while encoding bytes : '' + Arrays . toString ( bytes ) ) ; } }
19985	@ Override public void commit ( ) throws RemoteException { tx . commit ( ) ; try { tx = VanillaDb . txMgr ( ) . newTransaction ( isolationLevel , readOnly ) ; } catch ( Exception e ) { throw new RemoteException ( _CHAR error creating transaction _CHAR , e ) ; } }
19986	public static Locale ensureLocale ( Object localeObject ) { if ( localeObject instanceof String ) { return parseLocale ( ( String ) localeObject ) ; } else if ( localeObject instanceof Locale ) { return ( Locale ) localeObject ; } return Locale . getDefault ( ) ; }
20000	private boolean atBinaryOperator ( int prec ) { if ( matchesAnyOf ( OPERATOR_PRECEDENCE . get ( prec ) ) ) { return _BOOL ; } if ( matchesSequence ( TokenKind . NOT , TokenKind . IN ) ) { return _BOOL ; } return _BOOL ; }
20024	public static AudioFileFormat . Type findTargetType ( String strExtension ) { AudioFileFormat . Type [ ] aTypes = AudioSystem . getAudioFileTypes ( ) ; for ( int i = _NUM ; i < aTypes . length ; i ++ ) { if ( aTypes [ i ] . getExtension ( ) . equals ( strExtension ) ) { return aTypes [ i ] ; } } return _NULL ; }
20072	private void restoreNaNs ( double [ ] ranks , List < Integer > nanPositions ) { if ( nanPositions . size ( ) == _NUM ) { return ; } Iterator < Integer > iterator = nanPositions . iterator ( ) ; while ( iterator . hasNext ( ) ) { ranks [ iterator . next ( ) . intValue ( ) ] = Double . NaN ; } }
20082	private void updateVideoSessionPlayState ( int playbackState ) { if ( mVideoSession == _NULL ) { return ; } PlaybackState . Builder playbackStateBuilder = new PlaybackState . Builder ( ) ; long currentPosition = getCurrentPosition ( ) ; playbackStateBuilder . setState ( playbackState , currentPosition , ( float ) _NUM . _NUM ) . setActions ( getPlaybackStateActions ( ) ) ; mVideoSession . setPlaybackState ( playbackStateBuilder . build ( ) ) ; }
20171	public static boolean isAndroidSdkDirInLocalPropertiesFile ( @ NotNull File projectDir ) { String androidHome = getAndroidHomeFromLocalPropertiesFile ( projectDir ) ; if ( ! Strings . isNullOrEmpty ( androidHome ) ) { String msg = String . format ( _CHAR Found Android SDK home at _CHAR ( from local . properties file ) _CHAR , androidHome ) ; LOG . info ( msg ) ; return _BOOL ; } return _BOOL ; }
20203	public byte [ ] compress ( double [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
20241	public float [ ] unCompress ( byte [ ] compInput ) { try { return Snappy . uncompressFloatArray ( compInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } return _NULL ; }
20284	public void cancelAllTasks ( ) { for ( int i : tasks . keySet ( ) ) { Future < ? > task = tasks . get ( i ) ; if ( task != _NULL && i != TaskId . RESPAWN . ordinal ( ) ) { task . cancel ( _BOOL ) ; } } tasks . clear ( ) ; }
20322	public File [ ] filterHiddenFiles ( File [ ] files ) { List < File > ret = new ArrayList < > ( ) ; for ( File file : files ) { if ( ! file . isHidden ( ) ) { ret . add ( file ) ; } } return ret . toArray ( new File [ ret . size ( ) ] ) ; }
20338	public void plot ( String filename ) { try { BufferedOutputStream out = new BufferedOutputStream ( new FileOutputStream ( filename ) ) ; render ( out , _NUM ) ; out . close ( ) ; } catch ( IOException ioe ) { } }
20381	public static void w ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_WARNING ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . w ( tag , msg ) ; }
20394	protected Object cloneBody ( ) { if ( Body == _NULL ) { return _NULL ; } HashMap < String , Object > body = ( HashMap < String , Object > ) Body ; HashMap < String , Object > cloned = new HashMap < String , Object > ( body . size ( ) ) ; cloned . putAll ( body ) ; return cloned ; }
20409	public static Colour attemptToGetAsColour ( String part ) { Colour col = _NULL ; try { col = Colour . valueOf ( part . toUpperCase ( ) ) ; } catch ( Exception e ) { } return col ; }
20586	public void toNativeArray ( int [ ] dest , int offset , int len ) { if ( len == _NUM ) { return ; } if ( offset < _NUM || offset >= _pos ) { throw new ArrayIndexOutOfBoundsException ( offset ) ; } System . arraycopy ( _data , offset , dest , _NUM , len ) ; }
20645	public void write ( DataOutput raf ) throws IOException { assert duration >= _NUM ; if ( data == _NULL ) { throw new IllegalStateException ( _CHAR This method can only be called for data that is not null '' ) ; } raf . writeLong ( duration ) ; raf . writeInt ( data . length ) ; raf . write ( data ) ; }
20662	private void moveOverlayUpOrDownToMatchAppraisalBox ( ) { if ( windowManager == _NULL ) { return ; } if ( infoLayout . getLayoutParams ( ) == _NULL ) { return ; } moveOverlay ( inputBox . getVisibility ( ) == View . VISIBLE && appraisalBox . getVisibility ( ) == View . VISIBLE ) ; }
20700	private void removeHelpersSpawn ( ) { for ( Integer object : spawnedNpc ) { VisibleObject npc = World . getInstance ( ) . findVisibleObject ( object ) ; if ( npc != _NULL && npc . isSpawned ( ) ) { npc . getController ( ) . onDelete ( ) ; } } spawnedNpc . clear ( ) ; }
20766	private void populateResultListView ( List < BookmarkMatch > ids ) { if ( ids . isEmpty ( ) ) { setUIState ( UIState . EMPTY ) ; } else { setUIState ( UIState . RESULT ) ; mResultList . setAdapter ( new ResultListAdapter ( ids , mDelegate ) ) ; } }
20769	public void populateFieldTypeConstraint ( FieldIdEnum fieldId , List < FeatureTypeConstraint > ftcList ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( fieldConfig != _NULL ) { fieldConfig . populateField ( ftcList ) ; } }
20782	public static boolean isFilterClass ( String clzName ) { if ( clzName == _NULL || clzName . length ( ) == _NUM ) return _BOOL ; for ( String prefix : Constants . FILTER_PREFIX ) { if ( clzName . startsWith ( prefix ) ) { return _BOOL ; } } return _BOOL ; }
20845	private static byte [ ] sign ( String stringData , final byte [ ] key ) throws AWSIotException { try { byte [ ] data = stringData . getBytes ( UTF8 ) ; return sign ( data , key ) ; } catch ( Exception e ) { throw new AWSIotException ( _CHAR Unable to calculate a request signature : _CHAR + e . getMessage ( ) ) ; } }
20863	@ Override public void close ( ) { try { raf . close ( ) ; System . err . println ( _CHAR Closing file : _CHAR + file . getName ( ) ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
20866	public void clear ( ) { super . clear ( ) ; int [ ] set = _set ; byte [ ] states = _states ; for ( int i = set . length ; i -- > _NUM ; ) { set [ i ] = ( int ) _NUM ; states [ i ] = FREE ; } }
20872	public void delete ( int key ) { int i = binarySearch ( mKeys , _NUM , mSize , key ) ; if ( i >= _NUM ) { if ( mValues [ i ] != DELETED ) { mValues [ i ] = DELETED ; mGarbage = _BOOL ; } } }
20883	protected void mouseClicked ( int mouseX , int mouseY , int mouseButton ) { try { super . mouseClicked ( mouseX , mouseY , mouseButton ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } this . guiTextField . mouseClicked ( mouseX , mouseY , mouseButton ) ; }
20906	public int find ( int x ) { if ( array [ x ] < _NUM ) { return x ; } else { array [ x ] = find ( array [ x ] ) ; return array [ x ] ; } }
20964	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
21001	@ Override public synchronized XSObject item ( int index ) { if ( fArray == _NULL ) { getLength ( ) ; } if ( index < _NUM || index >= fLength ) { return _NULL ; } return fArray [ index ] ; }
21021	public static void d ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_DEBUG ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . d ( tag , msg ) ; }
21059	private boolean isTypedTimeFullyLegal ( ) { if ( mIs24HourMode ) { int [ ] values = getEnteredTime ( _NULL ) ; return ( values [ _NUM ] >= _NUM && values [ _NUM ] >= _NUM && values [ _NUM ] < _NUM ) ; } else { return ( mTypedTimes . contains ( getAmOrPmKeyCode ( AM ) ) || mTypedTimes . contains ( getAmOrPmKeyCode ( PM ) ) ) ; } }
21086	public TShortArrayList inverseGrep ( TShortProcedure condition ) { TShortArrayList list = new TShortArrayList ( ) ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( ! condition . execute ( _data [ i ] ) ) { list . add ( _data [ i ] ) ; } } return list ; }
21119	private double doRemove ( int index ) { keys [ index ] = _NUM ; states [ index ] = REMOVED ; final double previous = values [ index ] ; values [ index ] = missingEntries ; -- size ; ++ count ; return previous ; }
21123	public boolean removeTuple ( Tuple t ) { Table table = t . getTable ( ) ; if ( m_sets . contains ( table ) ) { return table . removeTuple ( t ) ; } else { return _BOOL ; } }
21265	public void removeIdentifier ( String idName ) { if ( needsSyncData ( ) ) { synchronizeData ( ) ; } if ( identifiers == _NULL ) { return ; } identifiers . remove ( idName ) ; }
21316	public boolean copyAlignment ( ) { final SelectedBlock selectedBlock = getSelectedBlock ( ) ; if ( selectedBlock . isSelected ( ) ) { StringSelection ss = new StringSelection ( getSelectedAlignment ( ) ) ; Toolkit . getDefaultToolkit ( ) . getSystemClipboard ( ) . setContents ( ss , _NULL ) ; return _BOOL ; } return _BOOL ; }
21325	public FlowImageLoader resize ( int width , int height ) { if ( ! mHasUri ) { throw new RuntimeException ( _CHAR not impl _CHAR ) ; } else { mDna . digest ( new ResizeGene ( width , height ) ) ; } return this ; }
21355	Code_attribute locate_code_attribute ( ) { attribute_info ai ; int i ; for ( i = _NUM ; i < attributes_count ; i ++ ) { ai = attributes [ i ] ; if ( ai instanceof Code_attribute ) return ( Code_attribute ) ai ; } return _NULL ; }
21368	public void print ( char ch ) { synchronized ( lock ) { try { appendLocked ( ch ) ; } catch ( IOException e ) { } } }
21402	public Location subtract ( Location vec ) { if ( vec == _NULL || vec . getWorld ( ) != getWorld ( ) ) { throw new IllegalArgumentException ( _CHAR Can not add Locations of differing worlds _CHAR ) ; } x -= vec . x ; y -= vec . y ; z -= vec . z ; return this ; }
21413	public void onAccuracyChanged ( Sensor sensor , int accuracy ) { if ( sensor . getType ( ) != Sensor . TYPE_ACCELEROMETER ) { return ; } if ( this . status == AccelListener . STOPPED ) { return ; } this . accuracy = accuracy ; }
21440	private String addDefaultProfile ( ) { String profile = System . getProperty ( _CHAR spring . profiles . active _CHAR ) ; if ( profile != _NULL ) { log . info ( _CHAR Running with Spring profile ( s ) : { } _CHAR , profile ) ; return profile ; } log . warn ( _CHAR No Spring profile configured , running with default configuration _CHAR ) ; return Constants . SPRING_PROFILE_DEVELOPMENT ; }
21525	public Iterator < Unit > iterator ( ) { if ( mBody != _NULL ) { Chain < Unit > units = mBody . getUnits ( ) ; return units . iterator ( mHead , mTail ) ; } else { return _NULL ; } }
21531	public List < SootMethod > clinitsOf ( SootClass cl ) { List < SootMethod > ret = new ArrayList < SootMethod > ( ) ; while ( _BOOL ) { addMethod ( ret , cl , sigClinit ) ; if ( ! cl . hasSuperclass ( ) ) break ; cl = cl . getSuperclass ( ) ; } return ret ; }
21598	public String pulling ( ClientSession client , Map < String , String > configItems , HttpServletRequest req , HttpServletResponse resp ) { boolean longPulling = isLongPulling ( req ) ; if ( longPulling ) { longPulling ( client , configItems , req ) ; return _CHAR _CHAR ; } shortPulling ( client , configItems , resp ) ; return _CHAR _CHAR ; }
21613	public static boolean isFileOlder ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileOlder ( file , reference . lastModified ( ) ) ; }
21704	protected void createContainer ( ) throws Throwable { sendCreateContainerRequest ( ) ; waitForPropertyValue ( provisioningTaskLink , MockTaskState . class , _CHAR taskInfo . stage _CHAR , TaskState . TaskStage . FINISHED ) ; verifyContainerStateExists ( containerStateReference ) ; sendGetContainerStateRequest ( ) ; containerId = containerState . id ; assertNotNull ( _CHAR Container ID is _NULL _CHAR , containerId ) ; assertEquals ( _CHAR container id should be _NUM characters long : _CHAR + containerId , _NUM , containerId . length ( ) ) ; }
21724	private boolean spaceOnPage ( Page p ) { byte [ ] header = this . readPageHeader ( p ) ; for ( byte b : header ) { if ( b != ( byte ) _NUM ) { return _BOOL ; } } return _BOOL ; }
21736	public static boolean dateTimeIsValid ( final String dateTimeString ) { try { DATE_TIME_FORMAT . parseDateTime ( dateTimeString ) ; return _BOOL ; } catch ( IllegalArgumentException ex ) { return _BOOL ; } }
21738	public synchronized void panAbs ( double dx , double dy ) { damageReport ( ) ; m_transform . translate ( dx , dy ) ; try { m_itransform = m_transform . createInverse ( ) ; } catch ( Exception e ) { } }
21795	private boolean isAfterParent ( final BSPTree < Sphere1D > node ) { final BSPTree < Sphere1D > parent = node . getParent ( ) ; if ( parent == _NULL ) { return _BOOL ; } else { return node == childAfter ( parent ) ; } }
21811	public static float acos ( float fValue ) { if ( - _NUM . _NUM < fValue ) { if ( fValue < _NUM . _NUM ) { return ( float ) Math . acos ( fValue ) ; } return _NUM . _NUM ; } return PI ; }
21827	@ Override public boolean hasNext ( ) { if ( done ) return _BOOL ; if ( nextMatches == _NULL ) nextMatches = getNext ( ) ; if ( nextMatches == sentinel ) { done = _BOOL ; nextMatches = _NULL ; } return ! done ; }
21844	public INDArray toBgr ( InputStream inputStream ) { try { BufferedImage image = ImageIO . read ( inputStream ) ; return toBgr ( image ) ; } catch ( IOException e ) { throw new RuntimeException ( _CHAR Unable to load image _CHAR , e ) ; } }
21851	public static void updateGatherableStatus ( Player player ) { if ( player . isNotGatherable ( ) ) { long gatherableTimer = player . getGatherableTimer ( ) ; if ( gatherableTimer > _NUM ) { scheduleGatherableTask ( player , gatherableTimer ) ; player . setStopGatherable ( System . currentTimeMillis ( ) ) ; } } }
21918	protected String skipEmptyLines ( ) { while ( _BOOL ) { if ( hasNextLine ( ) ) { String next = nextLine ( ) . trim ( ) ; if ( next . length ( ) > _NUM ) return next ; } else return _NULL ; } }
21979	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String suffix : this . suffixes ) { if ( caseSensitivity . checkEndsWith ( name , suffix ) ) { return _BOOL ; } } return _BOOL ; }
22000	private ProxySelector installBufferingAndFallbackBehaviour ( ProxySelector selector ) { if ( selector instanceof PacProxySelector ) { if ( this . pacCacheSize > _NUM ) { selector = new BufferedProxySelector ( this . pacCacheSize , this . pacCacheTTL , selector , pacCacheScope ) ; } selector = new ProxyListFallbackSelector ( selector ) ; } return selector ; }
22050	@ Override protected void loader ( ) { try { setupFeatureSet ( ) ; setupFeatureProcessors ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
22065	public static void i ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_INFO ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . i ( tag , msg ) ; }
22178	public void addNewRule ( Rule rule ) { if ( this . symbolData . getFeatureTypeStyle ( ) == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR featureTypeStyle == _NULL _CHAR ) ; } else { List < Rule > ruleList = ( List < Rule > ) this . symbolData . getFeatureTypeStyle ( ) . rules ( ) ; ruleList . add ( rule ) ; } }
22182	public V remove ( long key ) { V prev = _NULL ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
22188	@ SuppressWarnings ( _CHAR unchecked _CHAR ) protected D restoreContextOnReturnedFact ( D d4 , D d5 ) { if ( d5 instanceof LinkedNode ) { ( ( LinkedNode < D > ) d5 ) . setCallingContext ( d4 ) ; } if ( d5 instanceof JoinHandlingNode ) { ( ( JoinHandlingNode < D > ) d5 ) . setCallingContext ( d4 ) ; } return d5 ; }
22357	public String diff_text2 ( List < Diff > diffs ) { StringBuilder text = new StringBuilder ( ) ; for ( Diff aDiff : diffs ) { if ( aDiff . operation != Operation . DELETE ) { text . append ( aDiff . text ) ; } } return text . toString ( ) ; }
22429	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
22513	public void resize ( int maxSize ) { if ( maxSize <= _NUM ) { throw new IllegalArgumentException ( _CHAR maxSize <= _NUM _CHAR ) ; } synchronized ( this ) { this . maxSize = maxSize ; } trimToSize ( maxSize ) ; }
22525	int relabel ( Instruction i ) { int index = _NUM ; while ( i != _NULL ) { i . label = index ; index = i . nextOffset ( index ) ; i = i . next ; } return index ; }
22660	public int determineInsertionIndex ( TabLaunchType type , int position , Tab newTab ) { if ( linkClicked ( type ) ) { position = determineInsertionIndex ( type , newTab ) ; } if ( willOpenInForeground ( type , newTab . isIncognito ( ) ) ) { forgetAllOpeners ( ) ; } return position ; }
22685	public static int decodeVIntSize ( byte value ) { if ( value >= - _NUM ) { return _NUM ; } else if ( value < - _NUM ) { return - _NUM - value ; } return - _NUM - value ; }
22707	private boolean skipTripleQuote ( char quot ) { if ( pos + _NUM < buffer . length && buffer [ pos ] == quot && buffer [ pos + _NUM ] == quot ) { pos += _NUM ; return _BOOL ; } else { return _BOOL ; } }
22714	public void queueNow ( Job job ) throws InvalidJobException { job . queue ( ) ; try { executor . execute ( job ) ; } catch ( Exception e ) { job . deQueue ( ) ; } }
22748	public boolean tryReadLockOnKey ( K id , Long timeout ) { try { return cache . tryReadLockOnKey ( id , timeout ) ; } catch ( InterruptedException e ) { LOGGER . debug ( _CHAR Thread interrupted for id = '' + String . valueOf ( id ) + _CHAR ( _CHAR + this . getClass ( ) + _CHAR ) _CHAR ) ; return _BOOL ; } }
22792	@ SuppressFBWarnings ( _CHAR DM_EXIT _CHAR ) @ VisibleForTesting void prepareNativeLibraries ( ) { try { BrowserStartupController . get ( getApplicationContext ( ) , LibraryProcessType . PROCESS_BROWSER ) . startBrowserProcessesSync ( _BOOL ) ; } catch ( ProcessInitException e ) { Log . e ( TAG , _CHAR ProcessInitException while starting the browser process '' ) ; System . exit ( - _NUM ) ; } }
22796	public boolean closeDatabase ( String dbfile ) { if ( databases . get ( dbfile ) != _NULL ) { SQLiteDatabase db = ( SQLiteDatabase ) databases . get ( dbfile ) ; db . close ( ) ; databases . remove ( dbfile ) ; return _BOOL ; } return _BOOL ; }
22834	public static void i ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_INFO ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . i ( tag , msg ) ; }
22920	public void interrupt ( ) { if ( waitingQuery ) { sendJson ( Json . object ( ACTION , ACTION_QUERY_ABORT ) ) ; waitingQuery = _BOOL ; } else { System . exit ( _NUM ) ; } }
22926	public synchronized void resume ( ) { if ( isPaused ( ) ) { setPaused ( _BOOL ) ; if ( ! isCancelled ( ) && line != _NULL ) { line . start ( ) ; notify ( ) ; } } }
22972	static int calcExpr ( int a , int b , int c , int d ) { if ( d == _NUM ) { System . out . println ( _CHAR Error : Division by zero _CHAR ) ; return - _NUM ; } else { return a * ( b + ( c / d ) ) ; } }
22982	public String localName ( String name ) { int colon = name . indexOf ( _CHAR ) ; if ( colon == - _NUM ) { return name ; } else { return name . substring ( colon + _NUM ) . intern ( ) ; } }
22990	public void unsubscribe ( ) { try { listenersLock . writeLock ( ) . lock ( ) ; listeners . clear ( ) ; } finally { listenersLock . writeLock ( ) . unlock ( ) ; } }
23057	public boolean isScreenOn ( ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . ECLAIR_MR1 ) { LogUtils . e ( _CHAR can not call isScreenOn if SDK_INT < 7 '' ) ; return _BOOL ; } else { return powerManager . isScreenOn ( ) ; } }
23060	public static Intent createDeepLinkIntent ( Context context , VRDeepLinkParam param ) { if ( param == _NULL || isStringNullOrEmpty ( param . mediaFbId ) ) { return _NULL ; } if ( IsVideoDeepLink ( param ) ) { return createDeepLinkIntentForVideoContent ( context , param ) ; } return createDeepLinkIntentForPhotoContent ( context , param ) ; }
23095	private void cancelRepeatingAlarm ( ) { Intent requestIntent = createRegisterRequestIntent ( this ) ; PendingIntent pendingIntent = PendingIntent . getService ( this , _NUM , requestIntent , PendingIntent . FLAG_NO_CREATE ) ; if ( pendingIntent != _NULL ) { AlarmManager am = ( AlarmManager ) getSystemService ( Context . ALARM_SERVICE ) ; am . cancel ( pendingIntent ) ; pendingIntent . cancel ( ) ; } }
23129	private Date parseDate ( String date ) { try { return DateFormat . getDateInstance ( DateFormat . SHORT ) . parse ( date ) ; } catch ( ParseException e ) { MessageDialog . openError ( getShell ( ) , Policy . bind ( _CHAR HistorySearchDialog . dateParseErrorTitle _CHAR ) , Policy . bind ( _CHAR HistorySearchDialog . dateParseErrorMessage _CHAR ) ) ; return _NULL ; } }
23164	private T doRemove ( int index ) { keys [ index ] = _NUM ; states [ index ] = REMOVED ; final T previous = values [ index ] ; values [ index ] = missingEntries ; -- size ; ++ count ; return previous ; }
23247	public void save ( Boolean isCreate , Config config ) { configDao . save ( config ) ; if ( isCreate ) { configDao . index ( config ) ; if ( ! configDao . bindApp ( config ) ) { Logs . error ( _CHAR failed to bind app of config ( { } ) _CHAR , config ) ; } } }
23271	public boolean addAll ( int [ ] array ) { boolean changed = _BOOL ; for ( int i = array . length ; i -- > _NUM ; ) { if ( add ( array [ i ] ) ) { changed = _BOOL ; } } return changed ; }
23328	@ Override public final long available ( ) { try { return raf . length ( ) - raf . getFilePointer ( ) ; } catch ( IOException e ) { System . err . println ( _CHAR ERROR _CHAR + e ) ; return _NUM ; } }
23363	public static String toGbk ( String str ) { try { return new String ( str . getBytes ( _CHAR utf - _NUM _CHAR ) , _CHAR gbk _CHAR ) ; } catch ( UnsupportedEncodingException e ) { LogUtils . warn ( e . getMessage ( ) ) ; return str ; } }
23487	public void populate ( Map < String , List < StyleWrapper >> styleMap , List < GeoServerLayer > layerList ) { this . layerMap . clear ( ) ; this . layerList = layerList ; if ( layerList != _NULL ) { for ( GeoServerLayer layer : layerList ) { this . layerMap . put ( layer , Boolean . FALSE ) ; } } }
23507	public ByteArray copy ( ) { ByteArray result = new ByteArray ( ) ; if ( buf != _NULL ) { byte [ ] data = new byte [ length ] ; System . arraycopy ( buf , offset , data , _NUM , length ) ; result . reset ( data ) ; } return result ; }
23510	@ Nullable public FuncallExpression findRule ( String name ) { for ( FuncallExpression expr : findChildrenByClass ( FuncallExpression . class ) ) { String ruleName = expr . getNameArgumentValue ( ) ; if ( name . equals ( ruleName ) ) { return expr ; } } return _NULL ; }
23594	public void startInitialisation ( ZWaveNodeInitStage startStage ) { logger . debug ( _CHAR NODE { } : Starting initialisation from { } _CHAR , node . getNodeId ( ) , startStage ) ; currentStage = startStage ; queryStageTimeStamp = Calendar . getInstance ( ) . getTime ( ) ; retryTimer = BACKOFF_TIMER_START ; wakeupCount = _NUM ; controller . addEventListener ( this ) ; advanceNodeStage ( _NULL ) ; }
23628	public boolean isTemplateOnList ( String title , String template ) { boolean isOnList ; SiteAdminGridRow row = getRowByTitle ( title ) ; isOnList = template . equals ( row . getTemplateName ( ) ) ; if ( ! isOnList ) { LOG . debug ( _CHAR there is no template { } with title { } on the list _CHAR , template , title ) ; } return isOnList ; }
23644	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; overridePendingTransition ( _NUM , _NUM ) ; Scoop . getInstance ( ) . apply ( this ) ; setContentView ( R . layout . activity_main ) ; ButterKnife . bind ( this ) ; Scoop . sugarCone ( ) . bind ( this ) ; setSupportActionBar ( mAppBar ) ; }
23646	public void clear ( ) { int n = mSize ; Object [ ] values = mValues ; for ( int i = _NUM ; i < n ; i ++ ) { values [ i ] = _NULL ; } mSize = _NUM ; mGarbage = _BOOL ; }
23767	public void start ( ) throws ErlangVersionException , DownloadException , ExtractionException , StartupException { if ( rabbitMqProcess != _NULL ) { throw new IllegalStateException ( _CHAR Start should n _CHAR_CHAR ) ; } check ( ) ; download ( ) ; extract ( ) ; run ( ) ; }
23788	public void handleClick ( long time , float x , float y ) { mHasDetectedTouchGesture = _BOOL ; if ( isCoordinateInsideBasePage ( x , y ) ) { closePanel ( StateChangeReason . BASE_PAGE_TAP , _BOOL ) ; } else if ( isCoordinateInsideBar ( x , y ) && ! onInterceptBarClick ( ) ) { handleBarClick ( time , x , y ) ; } }
23912	private boolean hasBacklog ( ) { final long cursor = ringBuffer . getCursor ( ) ; for ( final Sequence consumer : consumerRepository . getLastSequenceInChain ( _BOOL ) ) { if ( cursor > consumer . get ( ) ) { return _BOOL ; } } return _BOOL ; }
23921	private static boolean inKingSectionLikeHash ( String key , String value ) { String hashValue = ( String ) kingSectionLikeHash . get ( key ) ; if ( hashValue != _NULL ) { return ( hashValue . equals ( value ) ) ; } else { return _BOOL ; } }
23936	public static int limit ( int number , int between , int and ) { if ( number <= between ) { return between ; } if ( number >= and ) { return and ; } return number ; }
23971	public < T > T load ( Class < T > service ) { synchronized ( providers ) { List < RegisteredServiceProvider < ? >> registered = providers . get ( service ) ; if ( registered == _NULL ) { return _NULL ; } return service . cast ( registered . get ( _NUM ) . getProvider ( ) ) ; } }
23975	public void delete ( final PutFlags ... f ) { if ( SHOULD_CHECK ) { checkNotClosed ( ) ; txn . checkReady ( ) ; txn . checkWritesAllowed ( ) ; } final int flags = mask ( f ) ; checkRc ( LIB . mdb_cursor_del ( ptrCursor , flags ) ) ; }
23990	private boolean peerExists ( String id ) { if ( id == _NULL ) return _BOOL ; for ( Peer peer : peerList ) { if ( id . equals ( peer . getPeerId ( ) ) ) { return _BOOL ; } } return _BOOL ; }
24075	public String taggerCorpusFileName ( ) { switch ( language ) { case ENGLISH : return _CHAR / export / dat / tag / en / brown . txt _CHAR ; case VIETNAMESE : return _CHAR / export / dat / tag / vi / vtb - tagged . txt _CHAR ; } return _NULL ; }
24076	private < T > T readValue ( TypeReference < T > typeReference , String value ) { try { return objectMapper . readValue ( value , typeReference ) ; } catch ( IOException e ) { LOG . error ( _CHAR Exception while reading dimension rows { } _CHAR , e ) ; throw new RuntimeException ( e ) ; } }
24079	private BSPTree < Sphere1D > nextInternalNode ( BSPTree < Sphere1D > node ) { if ( childAfter ( node ) . getCut ( ) != _NULL ) { return leafAfter ( node ) . getParent ( ) ; } while ( isAfterParent ( node ) ) { node = node . getParent ( ) ; } return node . getParent ( ) ; }
24088	public void collapseToTop ( ) { getCollapsedIds ( ) . clear ( ) ; if ( getTree ( ) . getRoot ( ) != _NULL ) { for ( Edge e = getTree ( ) . getRoot ( ) . getFirstOutEdge ( ) ; e != _NULL ; e = getTree ( ) . getRoot ( ) . getNextOutEdge ( e ) ) { getCollapsedIds ( ) . add ( ( Integer ) e . getTarget ( ) . getInfo ( ) ) ; } updateTree ( ) ; } }
24098	private String appendNationalNumber ( String nationalNumber ) { int prefixBeforeNationalNumberLength = prefixBeforeNationalNumber . length ( ) ; if ( shouldAddSpaceAfterNationalPrefix && prefixBeforeNationalNumberLength > _NUM && prefixBeforeNationalNumber . charAt ( prefixBeforeNationalNumberLength - _NUM ) != SEPARATOR_BEFORE_NATIONAL_NUMBER ) { return new String ( prefixBeforeNationalNumber ) + SEPARATOR_BEFORE_NATIONAL_NUMBER + nationalNumber ; } else { return prefixBeforeNationalNumber + nationalNumber ; } }
24111	public byte [ ] compress ( float [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
24133	public static void addRows ( Grid grid , SqlRowSet rs ) { int cols = rs . getMetaData ( ) . getColumnCount ( ) ; while ( rs . next ( ) ) { grid . addRow ( ) ; for ( int i = _NUM ; i <= cols ; i ++ ) { grid . addValue ( rs . getObject ( i ) ) ; } } }
24141	public void write ( TBase t ) throws IOException { try { t . write ( binaryOut ) ; dataOutputStream . flush ( ) ; } catch ( TException e ) { throw new IOException ( e ) ; } }
24157	public void initGui ( ) { this . buttonList . clear ( ) ; if ( this . mc . playerController . isInCreativeMode ( ) ) { this . mc . displayGuiScreen ( new GuiContainerCreative ( this . mc . thePlayer ) ) ; } else { super . initGui ( ) ; } }
24172	public static SecretKey generateKey ( byte [ ] key , String algorithm ) throws EncodingException { try { SecretKey skey = new SecretKeySpec ( key , algorithm ) ; return skey ; } catch ( Exception e ) { throw new EncodingException ( e ) ; } }
24193	private void addOutsideTouching ( final SubHyperplane < S > sub , final List < BSPTree < S >> splitters ) { if ( outsideTouching == _NULL ) { outsideTouching = sub ; } else { outsideTouching = outsideTouching . reunite ( sub ) ; } outsideSplitters . addAll ( splitters ) ; }
24200	private boolean isTypedTimeFullyLegal ( ) { if ( mIs24HourView ) { int [ ] values = getEnteredTime ( _NULL ) ; return ( values [ _NUM ] >= _NUM && values [ _NUM ] >= _NUM && values [ _NUM ] < _NUM ) ; } else { return ( mTypedTimes . contains ( getAmOrPmKeyCode ( AM ) ) || mTypedTimes . contains ( getAmOrPmKeyCode ( PM ) ) ) ; } }
24253	public Properties readSettings ( ) throws ProxyException { try { Properties settings = settingsParser . parseSettings ( profileScanner ) ; return settings ; } catch ( IOException e ) { throw new ProxyException ( _CHAR No Firefox installation found _CHAR ) ; } }
24276	public static java . sql . Date toSqlDate ( String date ) { java . util . Date newDate = toDate ( date , _CHAR _NUM : _NUM : _NUM _CHAR ) ; if ( newDate != _NULL ) { return new java . sql . Date ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
24278	private boolean equal ( byte [ ] key1 , byte [ ] key2 ) { if ( key1 . length != key2 . length ) return _BOOL ; else { for ( int i = _NUM ; i < key1 . length ; i ++ ) { if ( key1 [ i ] != key2 [ i ] ) return _BOOL ; } return _BOOL ; } }
24286	private static String convertToQuotedString ( String s ) { if ( s == _NULL || s . isEmpty ( ) ) { return _NULL ; } if ( s . charAt ( _NUM ) == _CHAR_CHAR && s . charAt ( s . length ( ) - _NUM ) == _CHAR_CHAR ) { return s ; } return _CHAR_CHAR + s + _CHAR_CHAR ; }
24306	public static boolean isGiftCard ( String stPassed ) { if ( isOFBGiftCard ( stPassed ) ) { return _BOOL ; } else if ( isValueLinkCard ( stPassed ) ) { return _BOOL ; } return _BOOL ; }
24346	public long remove ( K key ) { long prev = ( long ) _NUM ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
24415	protected void updateNodeData ( int r , boolean added ) { if ( added ) { m_links . addRow ( ) ; } else { m_nodeTuples . invalidate ( r ) ; m_links . removeRow ( r ) ; } }
24425	public int read ( ) throws IOException { if ( count <= pos ) { fill ( ) ; if ( count <= pos ) { return - _NUM ; } } return buf [ pos ++ ] & _NUM ; }
24439	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
24546	public V remove ( short key ) { V prev = _NULL ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
24579	public byte [ ] compress ( short [ ] unCompInput ) { try { return Snappy . compress ( unCompInput ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
24611	public void minimizePalette ( ) { if ( myToolWindow != _NULL ) { try { LightToolWindow . class . getDeclaredMethod ( _CHAR minimize _CHAR ) . invoke ( myToolWindow ) ; } catch ( Exception ignore ) { } } }
24632	protected void clearCategories ( ) { for ( CategoryComponent category : categories ) { TableSubHeader subheader = category . getElement ( ) ; if ( subheader != _NULL ) { subheader . removeFromParent ( ) ; } } categories . clear ( ) ; }
24650	private static boolean inKingSectionLikeHash ( String key , String value ) { String hashValue = ( String ) kingSectionLikeHash . get ( key ) ; if ( hashValue != _NULL ) { return ( hashValue . equals ( value ) ) ; } else { return _BOOL ; } }
24707	protected void okButtonPressed ( ) { String selectedItem = ( String ) comboBoxNewSLD . getSelectedItem ( ) ; if ( selectedItem != _NULL ) { if ( newSLDObjectMap != _NULL ) { selected = newSLDObjectMap . get ( selectedItem ) ; } } setVisible ( _BOOL ) ; }
24718	static String winaltNotation ( int value ) { String result ; result = Integer . toString ( value ) ; if ( result . length ( ) < _NUM ) { result = _CHAR _NUM _CHAR . substring ( result . length ( ) ) + result ; } result = _CHAR Alt + _CHAR + result ; return ( result ) ; }
24762	public static boolean isFileNewer ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileNewer ( file , reference . lastModified ( ) ) ; }
24771	public static boolean isFileNewer ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileNewer ( file , reference . lastModified ( ) ) ; }
24801	public static void f ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
24927	private void push ( final ClassWriter cw , final String desc ) { int type = type ( cw , desc ) ; if ( type != _NUM ) { push ( type ) ; if ( type == LONG || type == DOUBLE ) { push ( TOP ) ; } } }
24939	public static float dp2px ( float dp ) { if ( mMetrics == _NULL ) { Log . e ( _CHAR MPChartLib - Utils _CHAR , _CHAR Utils NOT INITIALIZED . You need to call Utils . init ( ... ) at least once before _CHAR + _CHAR calling Utils . dp2px ( ... ) . Otherwise conversion does not _CHAR + _CHAR take place . '' ) ; return dp ; } DisplayMetrics metrics = mMetrics ; float px = dp * ( metrics . densityDpi / _NUM ) ; return px ; }
24943	public void writeToFile ( ) throws JAXBException { if ( mergedItt == _NULL ) { System . out . println ( _CHAR Resulting iTT is empty . No data to write . '' ) ; return ; } Marshaller jaxbMarshaller = TtmlUtils . createTtmlJaxbContext ( ) . createMarshaller ( ) ; jaxbMarshaller . setProperty ( Marshaller . JAXB_FORMATTED_OUTPUT , _BOOL ) ; jaxbMarshaller . marshal ( new ObjectFactory ( ) . createTt ( mergedItt ) , outputFile ) ; }
25016	private Doc evalParsingTime ( Elem elem ) { try { return Values . convertToDoc ( elem . eval ( new Context ( ImmutableMap . < SnippetKey , Snippet > of ( ) ) ) ) ; } catch ( EvalException e ) { error ( _CHAR parsing time evaluation error : % s _CHAR , e . getMessage ( ) ) ; return Doc . BREAK ; } }
25020	public boolean enterTheRoom ( Client client ) { if ( roomClients . size ( ) < nMaxmumClients ) if ( ! roomClients . contains ( client ) ) { client . setClientGameTag ( clientGameTag ++ ) ; client . setsEnteredRoom ( getsRoomName ( ) ) ; return roomClients . add ( client ) ; } else return _BOOL ; else return _BOOL ; }
25045	public boolean shippingApplies ( ) { GenericValue product = getProduct ( ) ; if ( product != _NULL ) { return ProductWorker . shippingApplies ( product ) ; } else { return _BOOL ; } }
25069	public void stop ( ) { synchronized ( contents ) { contents . clear ( ) ; kickerThread = _NULL ; head = _NULL ; dead = _BOOL ; contents . notifyAll ( ) ; } }
25073	private WatchedObject addWatch ( WatchedObject watched ) { try { _watchedObjects . put ( new WeakReference < WatchedObject > ( watched ) ) ; } catch ( InterruptedException e ) { interrupt ( ) ; } return watched ; }
25082	void receiveReplacedText ( CharacterDataImpl node ) { if ( node == _NULL ) return ; if ( node == fStartContainer ) { fStartOffset = _NUM ; } if ( node == fEndContainer ) { fEndOffset = _NUM ; } }
25135	private void locationPlacesIntent ( ) { try { PlacePicker . IntentBuilder builder = new PlacePicker . IntentBuilder ( ) ; startActivityForResult ( builder . build ( this ) , PLACE_PICKER_REQUEST ) ; } catch ( GooglePlayServicesRepairableException | GooglePlayServicesNotAvailableException e ) { e . printStackTrace ( ) ; } }
25143	private Bundle updateAppSecretProof ( ) { if ( configuration . useAppsecretProof ( ) ) { if ( mBundle == _NULL ) { mBundle = new Bundle ( ) ; } mBundle . putString ( _CHAR appsecret_proof _CHAR , Utils . encode ( configuration . getAppSecret ( ) , sessionManager . getAccessToken ( ) . getToken ( ) ) ) ; } return mBundle ; }
25180	public static String storedByIsValid ( String storedBy ) { if ( storedBy == _NULL || storedBy . trim ( ) . isEmpty ( ) ) { return _NULL ; } if ( storedBy . length ( ) > _NUM ) { return _CHAR stored_by_length_greater_than_max_length _CHAR ; } return _NULL ; }
25263	private void notifyConsumer ( final Consumer < Object > consumer , final Object event ) { final Executor executor = consumerExecutors . get ( consumer ) ; if ( executor == _NULL ) { consumer . accept ( event ) ; } else { executor . execute ( _NULL ) ; } }
25264	protected String formatTitle ( String title ) { if ( this . isNoFormat ( ) ) { return title ; } else { int colourCode = Utils . ansiColorCodes ( ) . get ( this . titleColour ) ; return _CHAR \ _NUM [ _NUM ; _CHAR + colourCode + _CHAR m _CHAR + title + _CHAR \ _NUM [ _NUM _CHAR ; } }
25296	public static < T > T resolveDefault ( ResourceResolverFactory factory , String userId , ResolveCallback callback , T defaultValue ) { try { return resolve ( factory , userId , callback ) ; } catch ( ResolveException e ) { LOG . error ( RESOLVE_ERROR_MESSAGE , e ) ; } return defaultValue ; }
25299	public T withRatingColors ( final double min , final double max ) { if ( min >= max ) { throw new IllegalArgumentException ( String . format ( _CHAR Rating limits wrong . min ( % s ) has to be lower than max ( % s ) . _CHAR , min , max ) ) ; } this . withColors = _BOOL ; this . minValue = min ; this . maxValue = max ; return ( T ) this ; }
25345	private void removeHelpersSpawn ( ) { for ( Integer object : spawnedNpc ) { VisibleObject npc = World . getInstance ( ) . findVisibleObject ( object ) ; if ( npc != _NULL && npc . isSpawned ( ) ) { npc . getController ( ) . onDelete ( ) ; } } spawnedNpc . clear ( ) ; }
25359	void updateCountersForOpen ( ) { mPreferenceManager . setContextualSearchTapCount ( _NUM ) ; if ( isPromoAvailable ( ) ) { getPromoTapCounter ( ) . disable ( ) ; int count = mPreferenceManager . getContextualSearchPromoOpenCount ( ) ; mPreferenceManager . setContextualSearchPromoOpenCount ( ++ count ) ; ContextualSearchUma . logPromoOpenCount ( count ) ; } }
25415	public static String unicodeNotation ( int value ) { String result ; result = Integer . toHexString ( value ) . toUpperCase ( ) ; if ( result . length ( ) < _NUM ) { result = _CHAR _NUM _CHAR . substring ( result . length ( ) ) + result ; } result = UNICODE_PREFIX + result ; return ( result ) ; }
25427	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( get ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
25438	public boolean saveHtmlCache ( String url , byte [ ] bytes ) { if ( TextUtils . isEmpty ( url ) || _NULL == bytes || bytes . length == _NUM ) { return _BOOL ; } if ( ! checkUrl ( url ) ) { return _BOOL ; } return mInternalHtmlCache . saveCache ( url , bytes ) ; }
25506	private void initialize ( ) { if ( _map == _NULL ) { synchronized ( lazyLock ) { if ( _map == _NULL ) { _map = new ConcurrentHashMap < Key , SoftReference < Value >> ( ) ; } } } }
25514	public BigFraction reduce ( ) { final BigInteger gcd = numerator . gcd ( denominator ) ; if ( BigInteger . ONE . compareTo ( gcd ) < _NUM ) { return new BigFraction ( numerator . divide ( gcd ) , denominator . divide ( gcd ) ) ; } else { return this ; } }
25542	@ Override public void close ( ) { try { reader . close ( ) ; refReader . close ( ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
25544	private static boolean checkNullForDims ( Object object ) { Integer [ ] dimensions = ( Integer [ ] ) object ; for ( Integer dimension : dimensions ) { if ( _NULL != dimension ) { return _BOOL ; } } return _BOOL ; }
25553	public int addStack ( int amount ) { stack += amount ; if ( stack > item . getMaxItemStack ( ) ) { int remainder = stack - item . getMaxItemStack ( ) ; stack = item . getMaxItemStack ( ) ; return remainder ; } return _NUM ; }
25556	public static String slurpFileNoExceptions ( File file ) { try { return slurpReader ( new FileReader ( file ) ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
25581	private static boolean throwsException ( IMethod method , Class < ? > exceptionClass ) { Class < ? > [ ] exceptionClasses = method . getExceptionTypes ( ) ; for ( Class < ? > c : exceptionClasses ) { if ( exceptionClass . isAssignableFrom ( c ) ) { return _BOOL ; } } return _BOOL ; }
25601	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
25622	public String upload_file1 ( byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { String parts [ ] = this . upload_file ( file_buff , file_ext_name , meta_list ) ; if ( parts != _NULL ) { return parts [ _NUM ] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts [ _NUM ] ; } else { return _NULL ; } }
25663	private Date parseDate ( String date ) { try { return DateFormat . getDateInstance ( DateFormat . SHORT ) . parse ( date ) ; } catch ( ParseException e ) { MessageDialog . openError ( getShell ( ) , Messages . FilterRevisionsDialog_dateParseErrorTitle , Messages . FilterRevisionsDialog_dateParseErrorMessage ) ; return _NULL ; } }
25681	public void onDestroy ( ) { if ( ! players . isEmpty ( ) ) { onLastPlayerReleased ( ) ; } for ( AudioPlayer audio : this . players . values ( ) ) { audio . destroy ( ) ; } this . players . clear ( ) ; }
25683	private void addToQueue ( SerialMessage serialMessage ) { if ( serialMessage == _NULL ) { return ; } if ( ! msgQueue . contains ( serialMessage ) && msgQueue . remainingCapacity ( ) > _NUM ) { msgQueue . add ( serialMessage ) ; } sendMessage ( ) ; }
25778	private int peek ( ) throws CompileException , IOException { if ( this . nextChar != - _NUM ) return this . nextChar ; try { return ( this . nextChar = this . internalRead ( ) ) ; } catch ( UnicodeUnescapeException ex ) { throw new CompileException ( ex . getMessage ( ) , this . location ( ) , ex ) ; } }
25782	@ Override public void commit ( ) { alerts_ = unmodifiableMap ( alerts ) ; try { getHistory ( ) . ifPresent ( _NULL ) ; } catch ( Exception ex ) { logger . log ( Level . WARNING , _CHAR unable to add collection data to history ( dropped ) _CHAR , ex ) ; } }
25817	public static int countCharacters ( final String str , final char chr ) { int ret = _NUM ; for ( int i = _NUM ; i < str . length ( ) ; i ++ ) { if ( str . charAt ( i ) == chr ) { ret ++ ; } } return ret ; }
25854	public static boolean exists ( long id ) { try { return Helper . exists ( id , User . class ) ; } catch ( Exception e1 ) { log . error ( e1 . getMessage ( ) , e1 ) ; } return _BOOL ; }
25930	public static boolean bookmark ( String id ) { init ( context ) ; if ( ! isBookmarked ( id ) ) { Inquiry . get ( ) . insertInto ( Constants . DATABASE_NAME , BookmarksDB . class ) . values ( new BookmarksDB ( id ) ) . run ( ) ; return _BOOL ; } else unbookmark ( id ) ; return _BOOL ; }
25952	protected void populateStandardData ( Symbolizer symbolizer ) { StandardData standardData = new StandardData ( ) ; if ( symbolizer != _NULL ) { standardData . name = symbolizer . getName ( ) ; standardData . description = symbolizer . getDescription ( ) ; standardData . unit = symbolizer . getUnitOfMeasure ( ) ; } populateStandardData ( standardData ) ; }
25963	private synchronized void populateFontFamilyList ( ) { if ( fontFamilyList == _NULL ) { fontFamilyList = new ArrayList < ValueComboBoxData > ( ) ; String [ ] families = GraphicsEnvironment . getLocalGraphicsEnvironment ( ) . getAvailableFontFamilyNames ( ) ; for ( String fontFamily : families ) { fontFamilyList . add ( new ValueComboBoxData ( fontFamily , fontFamily , getPanelId ( ) ) ) ; } } }
25970	@ Override protected void parseOptimizationData ( OptimizationData ... optData ) { super . parseOptimizationData ( optData ) ; for ( OptimizationData data : optData ) { if ( data instanceof AbstractSimplex ) { simplex = ( AbstractSimplex ) data ; break ; } } }
25989	@ Override protected final synchronized boolean writeData ( ByteBuffer data ) { AionServerPacket packet = sendMsgQueue . pollFirst ( ) ; if ( packet == _NULL ) { return _BOOL ; } packet . setBuf ( data ) ; packet . write ( this ) ; return _BOOL ; }
26012	private void capacityWarn ( ) { if ( warningCounter == _NUM ) { LOGGER . warn ( _CHAR The maximum capacity of the SynchroBuffer was reached ( current size is _CHAR + buffer . size ( ) + _CHAR ) - FIFO was applied to the buffer . '' ) ; warningCounter = WARNING_FREQUENCY ; } else { warningCounter = warningCounter - _NUM ; } }
26027	public boolean copyConsensus ( ) { final SelectedBlock selectedBlock = getSelectedBlock ( ) ; if ( selectedBlock . isSelected ( ) ) { StringSelection ss = new StringSelection ( getSelectedConsensus ( ) ) ; Toolkit . getDefaultToolkit ( ) . getSystemClipboard ( ) . setContents ( ss , _NULL ) ; return _BOOL ; } return _BOOL ; }
26058	public final boolean equals ( Object obj ) { if ( toString ( ) == _NULL ) { return ( obj != _NULL ) && ( obj . toString ( ) == _NULL ) ; } if ( obj instanceof Type ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
26060	protected void removeModel ( EpoxyModel < ? > model ) { int index = getModelPosition ( model ) ; if ( index != - _NUM ) { pauseModelListNotifications ( ) ; models . remove ( index ) ; resumeModelListNotifications ( ) ; notifyItemRemoved ( index ) ; } }
26067	private void tryLogin ( final LoginData loginData ) { final BpmResult loginResult = accountManager . login ( loginData ) ; if ( loginResult . isSuccess ( ) ) { openMainWindow ( ) ; } else { alertFailedLogin ( loginResult . getErrorMessage ( ) ) ; } }
26134	public static SecretKey generateKey ( String key , String algorithm ) throws EncodingException { try { SecretKey skey = new SecretKeySpec ( key . getBytes ( _CHAR UTF - _NUM _CHAR ) , algorithm ) ; return skey ; } catch ( Exception e ) { throw new EncodingException ( e ) ; } }
26149	public static void writeAnalysisHTMLToFile ( String outputPath , DataAnalysis dataAnalysis , JavaSparkContext sc ) { try { String analysisAsHtml = HtmlAnalysis . createHtmlAnalysisString ( dataAnalysis ) ; writeStringToFile ( outputPath , analysisAsHtml , sc ) ; } catch ( Exception e ) { throw new RuntimeException ( _CHAR Error generating or writing HTML analysis file ( normalized data ) _CHAR , e ) ; } }
26191	public static void e ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_ERROR ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . e ( tag , msg ) ; }
26234	public long ticks ( ) { long ret = _NUM ; synchronized ( eventsList ) { if ( eventsList . size ( ) > _NUM ) { ret = ( ( MidiEvent ) eventsList . get ( eventsList . size ( ) - _NUM ) ) . getTick ( ) ; } } return ret ; }
26261	public static void writeln ( String fileName , Object [ ] objects ) { if ( writer == _NULL ) { createWriter ( fileName ) ; for ( Object obj : objects ) { writeln ( obj . toString ( ) ) ; } closeWriter ( ) ; } }
26308	public Vector2f addLocal ( Vector2f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x += vec . x ; y += vec . y ; return this ; }
26339	void unpin ( ) { internalLock . writeLock ( ) . lock ( ) ; try { pins -- ; } finally { internalLock . writeLock ( ) . unlock ( ) ; } }
26364	@ Override public boolean accept ( File directory , String fileName ) { if ( ! super . accept ( directory , fileName ) ) return _BOOL ; try { return DAAParser . isMeganizedDAAFile ( ( new File ( directory , fileName ) ) . getPath ( ) , _BOOL ) ; } catch ( IOException e ) { return _BOOL ; } }
26369	synchronized double acquire ( double minTokens , double maxTokens ) { refill ( ) ; double avail = Math . floor ( Math . min ( maxTokens , tokens ) ) ; if ( avail >= minTokens ) { tokens -= avail ; return avail ; } return _NUM . _NUM ; }
26375	public Action removeAction ( String name ) { Action a = getAction ( name ) ; if ( a != _NULL ) { a . cancel ( ) ; m_actions . remove ( name ) ; a . setVisualization ( _NULL ) ; } return a ; }
26409	private void stop ( ) { if ( start == _NUM ) { LOG . warn ( _CHAR Tried to stop timer that has not been started : { } _CHAR , name ) ; return ; } duration += System . nanoTime ( ) - start ; REGISTRY . timer ( name ) . update ( duration , TimeUnit . NANOSECONDS ) ; start = _NUM ; }
26430	private synchronized void refreshPermissions ( ) { if ( userData == _NULL ) { return ; } UserData ud = userData ; ud . recalculatePermissions ( ) ; ud . recalculateMeta ( ) ; getPlugin ( ) . getApiProvider ( ) . fireEventAsync ( new UserPermissionRefreshEvent ( new UserLink ( this ) ) ) ; }
26449	public TShortArrayList grep ( TShortProcedure condition ) { TShortArrayList list = new TShortArrayList ( ) ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( condition . execute ( _data [ i ] ) ) { list . add ( _data [ i ] ) ; } } return list ; }
26459	@ Override public int available ( ) throws IOException { try { return super . available ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _NUM ; } }
26569	@ Override public void reset ( ) throws XNIException { super . reset ( ) ; fInDTD = _BOOL ; fVersion = _CHAR _NUM . _NUM _CHAR ; fStandalone = _BOOL ; fNamespaces = fConfiguration . getFeature ( NAMESPACES ) ; fAugmentations = _NULL ; fDeclaredAttrs = _NULL ; }
26598	public Header nextHeader ( ) throws NoSuchElementException { final int current = this . currentIndex ; if ( current < _NUM ) { throw new NoSuchElementException ( _CHAR Iteration already finished . '' ) ; } this . lastIndex = current ; this . currentIndex = findNext ( current ) ; return ( Header ) this . allHeaders . get ( current ) ; }
26637	public synchronized void resume ( ) { if ( paused ) { setPaused ( _BOOL ) ; if ( currentClip != _NULL ) { currentClip . start ( ) ; } notifyAll ( ) ; } }
26650	private void updateUI ( WKTType wktType ) { multiListModel . clear ( ) ; segmentListModel . clear ( ) ; tablePointModel . clear ( ) ; showMultiPanel ( wktType ) ; tablePointModel . setWKTType ( wktType ) ; updateSegmentButtons ( ) ; updatePointButtons ( ) ; }
26722	@ Bean public MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter ( ) { MappingJackson2HttpMessageConverter mjhmc = new MappingJackson2HttpMessageConverter ( ) ; Jackson2ObjectMapperFactoryBean jomfb = new Jackson2ObjectMapperFactoryBean ( ) ; jomfb . setAutoDetectFields ( _BOOL ) ; jomfb . setIndentOutput ( shouldIndentJacksonOutput ) ; jomfb . afterPropertiesSet ( ) ; mjhmc . setObjectMapper ( jomfb . getObject ( ) ) ; return mjhmc ; }
26765	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( get ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
26777	public static String readPemStringFromFile ( File file ) { try { byte [ ] fileContents = FileUtils . readFileToByteArray ( file ) ; return new String ( fileContents , Charset . forName ( _CHAR US - ASCII _CHAR ) ) ; } catch ( IOException e ) { throw new ImportException ( _CHAR Unable to read PEM - encoded data from file : _CHAR + file . getName ( ) ) ; } }
26804	private void createVendorOptionPanel ( ) { vendorOptionRasterFactory = new VendorOptionRasterFactory ( getClass ( ) , getFunctionManager ( ) , this ) ; List < VendorOptionInterface > veList = vendorOptionRasterFactory . getVendorOptionList ( ) ; if ( veList != _NULL ) { for ( VendorOptionInterface extension : veList ) { extension . setParentPanel ( this ) ; } } }
26806	protected synchronized void addType ( String index , String typeName ) { if ( cacheIndicesTypes . containsKey ( index ) ) { cacheIndicesTypes . get ( index ) . add ( typeName ) ; log . debug ( _CHAR addType ( ) - Added type { } in memory list _CHAR , typeName ) ; } else { throw new IllegalArgumentException ( _CHAR Types must follow the format \ _CHAR tag_dataType \ _CHAR _CHAR ) ; } }
26824	public static final Vector2 show ( Window owner ) { ShiftWorldDialog swd = new ShiftWorldDialog ( owner ) ; swd . setLocationRelativeTo ( owner ) ; swd . setVisible ( _BOOL ) ; if ( ! swd . canceled ) { return swd . shiftPanel . getShift ( ) ; } return _NULL ; }
26845	public IMethod findDeclaringMethod ( IMethod overriding , boolean testVisibility ) throws JavaModelException { IMethod result = _NULL ; IMethod overridden = findOverriddenMethod ( overriding , testVisibility ) ; while ( overridden != _NULL ) { result = overridden ; overridden = findOverriddenMethod ( result , testVisibility ) ; } return result ; }
26874	private void checkLegal ( ) { if ( mDataSets == _NULL ) return ; if ( this instanceof ScatterData || this instanceof CombinedData ) return ; for ( int i = _NUM ; i < mDataSets . size ( ) ; i ++ ) { if ( mDataSets . get ( i ) . getEntryCount ( ) > mXVals . size ( ) ) { throw new IllegalArgumentException ( _CHAR One or more of the DataSet Entry arrays are longer than the x - values array of this ChartData object . '' ) ; } } }
26887	public static DataFileFooter readMetadatFile ( String filePath , long blockOffset , long blockLength ) throws CarbonUtilException { DataFileFooterConverter fileFooterConverter = new DataFileFooterConverter ( ) ; try { return fileFooterConverter . readDataFileFooter ( filePath , blockOffset , blockLength ) ; } catch ( IOException e ) { throw new CarbonUtilException ( _CHAR Problem while reading the file metadata '' , e ) ; } }
26930	public void commit ( ) throws IOException { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; remove ( entry . key ) ; } else { completeEdit ( this , _BOOL ) ; } }
26997	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
27075	protected void doIteration ( final SimplexTableau tableau ) throws MathIllegalStateException { incrementIterationCount ( ) ; Integer pivotCol = getPivotColumn ( tableau ) ; Integer pivotRow = getPivotRow ( tableau , pivotCol ) ; if ( pivotRow == _NULL ) { throw new MathIllegalStateException ( LocalizedOptimFormats . UNBOUNDED_SOLUTION ) ; } tableau . performRowOperations ( pivotCol , pivotRow ) ; }
27090	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
27135	public static boolean isFullyEvolved ( PokemonId pokemonId ) { if ( EEVEE_FINAL_EVOLUTIONS . contains ( pokemonId ) ) { return _BOOL ; } else { PokemonId [ ] info = EVOLUTION_INFO . get ( pokemonId ) ; return info [ info . length - _NUM ] == pokemonId ; } }
27139	private StringBuilder appendIfNotNull ( StringBuilder source , String addStr , String delimiter ) { if ( addStr != _NULL ) { if ( addStr . length ( ) == _NUM ) { delimiter = _CHAR _CHAR ; } return source . append ( addStr ) . append ( delimiter ) ; } return source ; }
27210	public boolean removeUser ( int handle ) { try { return mService . removeUser ( handle ) ; } catch ( RemoteException re ) { Log . w ( TAG , _CHAR Could not remove user _CHAR , re ) ; return _BOOL ; } }
27362	protected void makeDecisionTablesConsistentWithPersistedVersions ( ParsedDeployment parsedDeployment ) { for ( DecisionTableEntity decisionTable : parsedDeployment . getAllDecisionTables ( ) ) { DecisionTableEntity persistedDecisionTable = dmnDeploymentHelper . getPersistedInstanceOfDecisionTable ( decisionTable ) ; if ( persistedDecisionTable != _NULL ) { decisionTable . setId ( persistedDecisionTable . getId ( ) ) ; decisionTable . setVersion ( persistedDecisionTable . getVersion ( ) ) ; } } }
27414	public boolean hasNext ( ) { try { return ! error && dataIndexReader . getPosition ( ) < dataIndexReader . length ( ) ; } catch ( IOException e ) { Basic . caught ( e ) ; return _BOOL ; } }
27479	public boolean isGuestEnabled ( ) { try { return mService . isGuestEnabled ( ) ; } catch ( RemoteException re ) { Log . w ( TAG , _CHAR Could not retrieve guest enabled state _CHAR ) ; return _BOOL ; } }
27508	@ Nullable public Interface resolveInterface ( String inPackage , String name ) { for ( String cand : nameCandidates ( inPackage , name ) ) { Interface endpointInterface = lookupInterface ( cand ) ; if ( endpointInterface != _NULL ) { return endpointInterface ; } } return _NULL ; }
27553	public byte [ ] compress ( byte [ ] unCompInput ) { try { return Snappy . rawCompress ( unCompInput , unCompInput . length ) ; } catch ( IOException e ) { LOGGER . error ( e , e . getMessage ( ) ) ; return _NULL ; } }
27562	public static boolean identical ( ItemStack a , ItemStack b ) { if ( a == _NULL && b == _NULL ) { return _BOOL ; } else if ( a == _NULL || b == _NULL ) { return _BOOL ; } return couldMerge ( a , b ) ; }
27607	public static boolean isFileOlder ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) < timeMillis ; }
27639	private Response requireJSON ( IHTTPSession session ) { final Map < String , String > headers = session . getHeaders ( ) ; if ( ! APPLICATION_JSON . equals ( headers . get ( CONTENT_TYPE ) ) ) { return newFixedLengthResponse ( Response . Status . NOT_ACCEPTABLE , MIME_PLAINTEXT , _CHAR Set content - type to application / json _CHAR ) ; } else { return _NULL ; } }
27669	public boolean isPingOptIn ( ) { if ( StatisticsUploadAssistant . isSendAllowed ( ) ) { return _BOOL ; } PreferenceStore prefs = getPreferenceStore ( ) ; synchronized ( DdmsPreferenceStore . class ) { return prefs != _NULL && prefs . contains ( PING_OPT_IN ) ; } }
27677	public static AudioFileFormat . Type findTargetType ( String strExtension ) { AudioFileFormat . Type [ ] aTypes = AudioSystem . getAudioFileTypes ( ) ; for ( int i = _NUM ; i < aTypes . length ; i ++ ) { if ( aTypes [ i ] . getExtension ( ) . equals ( strExtension ) ) { return aTypes [ i ] ; } } return _NULL ; }
27693	private boolean shouldAuthenticate ( String username , String password ) { if ( username == _NULL && password != _NULL ) { throw new EmailConnectionException ( PASSWORD_NO_USERNAME_ERROR ) ; } if ( username != _NULL && password == _NULL ) { throw new EmailConnectionException ( USERNAME_NO_PASSWORD_ERROR ) ; } return username != _NULL ; }
27766	public ISourceCommandTag findCommandTag ( final Long commandTagId ) { Map < Long , EquipmentConfiguration > equipmentMap = getProcessConfiguration ( ) . getEquipmentConfigurations ( ) ; for ( EquipmentConfiguration equipmentConfiguration : equipmentMap . values ( ) ) { if ( equipmentConfiguration . hasSourceCommandTag ( commandTagId ) ) { return equipmentConfiguration . getSourceCommandTag ( commandTagId ) ; } } return _NULL ; }
27775	public void mouseMoved ( float x , float y ) { if ( mMoveOnlyMode ) { return ; } mClickListener . mEnableBaseline = _BOOL ; mHoverListener . mEnableBaseline = _BOOL ; mBaselineTimer . restart ( ) ; updateFromHoverListener ( mViewTransform . getSwingFX ( x ) , mViewTransform . getSwingFY ( y ) ) ; }
27796	@ Override public void syncStateChanged ( ) { boolean wasSyncInitialized = mIsBackendInitialized ; boolean wasPassphraseRequired = mIsPassphraseRequired ; mIsBackendInitialized = mProfileSyncService . isBackendInitialized ( ) ; mIsPassphraseRequired = mIsBackendInitialized && mProfileSyncService . isPassphraseRequiredForDecryption ( ) ; if ( mIsBackendInitialized != wasSyncInitialized || mIsPassphraseRequired != wasPassphraseRequired ) { updateSyncStateFromSwitch ( ) ; } }
27826	public void invalidate ( int row ) { if ( m_tuples == _NULL || row < _NUM || row >= m_tuples . length ) { return ; } else if ( m_tuples [ row ] != _NULL ) { m_tuples [ row ] . invalidate ( ) ; m_tuples [ row ] = _NULL ; } }
27928	public float [ ] toArray ( float [ ] floats ) { if ( floats == _NULL ) { floats = new float [ _NUM ] ; } floats [ _NUM ] = x ; floats [ _NUM ] = y ; floats [ _NUM ] = z ; return floats ; }
27954	public static void showToastWhenPossible ( Context context , String message ) { Activity activity = Restarter . getForegroundActivity ( context ) ; if ( activity != _NULL ) { Restarter . showToast ( activity , message ) ; } else { showToastWhenPossible ( context , message , _NUM ) ; } }
27976	public List < DependencyGraph > dependencyTreebankDevelopment ( ) { switch ( language ) { case ENGLISH : return DependencyGraphReader . read ( _CHAR / export / dat / udt / en / en - ud - dev . conllu _CHAR , _CHAR ) ; case VIETNAMESE : return DependencyGraphReader . read ( _CHAR / export / dat / udt / vi / _NUM - test . conll _CHAR , _CHAR ) ; } return _NULL ; }
27980	private char read ( ) throws CompileException , IOException { this . peek ( ) ; if ( this . nextChar == - _NUM ) throw new CompileException ( _CHAR Unexpected end - of - input _CHAR , this . location ( ) ) ; final char result = ( char ) this . nextChar ; this . sb . append ( result ) ; this . nextChar = this . nextButOneChar ; this . nextButOneChar =- _NUM ; return result ; }
27982	@ Override public Command watch ( HostChangeMonitor < ServiceInstance > monitor ) throws MonitorException { synchronized ( watchers ) { watchers . add ( monitor ) ; } if ( resolutionPending . compareAndSet ( _BOOL , _BOOL ) ) { monitor . onChange ( hostSet ) ; } return Commands . NOOP ; }
28016	public static String generateSummary ( Resources resources ) { if ( DataReductionProxySettings . getInstance ( ) . isDataReductionProxyEnabled ( ) ) { String percent = DataReductionProxySettings . getInstance ( ) . getContentLengthPercentSavings ( ) ; return resources . getString ( R . string . data_reduction_menu_item_summary , percent ) ; } else { return ( String ) resources . getText ( R . string . text_off ) ; } }
28026	boolean shouldPreviousTapResolve ( @ Nullable URL url ) { if ( isTapResolveBeyondTheLimit ( ) ) { return _BOOL ; } if ( isPromoAvailable ( ) ) { return isBasePageHTTP ( url ) ; } return _BOOL ; }
28030	public void removeUnusedTransaction ( XtnEntry xtnEntry , boolean needLock ) { try { if ( needLock ) xtnEntry . lock ( ) ; if ( ( ( ConcurrentHashMap < ServerTransaction , XtnEntry > ) getXtnTable ( ) ) . remove ( xtnEntry . m_Transaction , xtnEntry ) ) m_TimedXtns . remove ( xtnEntry . m_Transaction ) ; } finally { if ( needLock ) xtnEntry . unlock ( ) ; } }
28087	public static void d ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_DEBUG ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . d ( tag , msg ) ; }
28105	public boolean isByteFeature ( String featureName ) { try { int index = getFeatureIndex ( featureName ) ; return isByteFeature ( index ) ; } catch ( Exception e ) { return _BOOL ; } }
28127	public static boolean isNullEmptyOrWhitespace ( String test ) { if ( test == _NULL ) { return _BOOL ; } if ( test . trim ( ) . length ( ) == _NUM ) { return _BOOL ; } return _BOOL ; }
28142	public Vector2f subtractLocal ( Vector2f vec ) { if ( _NULL == vec ) { logger . warning ( _CHAR Provided vector is _NULL , _NULL returned . '' ) ; return _NULL ; } x -= vec . x ; y -= vec . y ; return this ; }
28171	public List < Contentlet > executeSafe ( ) { try { return APILocator . getContentletAPI ( ) . search ( query . toString ( ) , this . limit , this . offset , this . sortBy , APILocator . getUserAPI ( ) . getSystemUser ( ) , _BOOL ) ; } catch ( DotDataException | DotSecurityException e ) { Logger . warn ( this , _CHAR Exception while executing query '' , e ) ; } return new ArrayList < Contentlet > ( ) ; }
28197	public static void buildUnpaidOrderTable ( Connection conn ) { try { Statement stmt = conn . createStatement ( ) ; stmt . execute ( _CHAR CREATE TABLE UnpaidOrder _CHAR + _CHAR ( CustomerNumber CHAR ( _NUM ) NOT NULL REFERENCES Customer ( CustomerNumber ) , _CHAR + _CHAR ProdNum CHAR ( _NUM ) NOT NULL REFERENCES Coffee ( ProdNum ) , _CHAR + _CHAR OrderDate CHAR ( _NUM ) , _CHAR + _CHAR Quantity DOUBLE , _CHAR + _CHAR Cost DOUBLE ) _CHAR ) ; } catch ( SQLException ex ) { System . out . println ( _CHAR ERROR : _CHAR + ex . getMessage ( ) ) ; } }
28204	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
28229	public static void v ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_VERBOSE ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . v ( tag , msg ) ; }
28249	public int increment ( int val ) { if ( val < _NUM ) { return decrement ( - val ) ; } lock . lock ( ) ; int newValue = ( value += val ) ; lock . unlock ( ) ; return newValue ; }
28294	public final void sendPacket ( GsServerPacket bp ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } sendMsgQueue . addLast ( bp ) ; enableWriteInterest ( ) ; } }
28327	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public final boolean hasNext ( ) { if ( q [ index ] == _NULL ) return _BOOL ; if ( index == q . length - _NUM ) { q = ( E [ ] ) q [ index ] ; index = _NUM ; if ( q [ index ] == _NULL ) return _BOOL ; } return _BOOL ; }
28333	public static String slurpURLNoExceptions ( URL u , String encoding ) { try { return slurpURL ( u , encoding ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
28360	public static File removeExtension ( File file ) { String absolutePath = file . getAbsolutePath ( ) ; if ( absolutePath . contains ( _CHAR . _CHAR ) ) { return new File ( absolutePath . substring ( _NUM , absolutePath . lastIndexOf ( _CHAR ) ) ) ; } else { return file ; } }
28380	public static boolean matches ( IIngredient ingredient , IItemStack itemStack ) { if ( ingredient == _NULL ) { return _BOOL ; } if ( ! ingredient . matches ( itemStack ) ) { return _BOOL ; } return _BOOL ; }
28491	public static int toOffset ( IBuffer buffer , int line , int column ) { try { return toDocument ( buffer ) . getLineOffset ( line ) + column ; } catch ( BadLocationException e ) { e . printStackTrace ( ) ; } return - _NUM ; }
28499	public String process ( Item item ) throws ProcessException { int count = _NUM ; Item daughter = item . getItemAs ( Relation . SYLLABLE_STRUCTURE ) . getDaughter ( ) ; while ( daughter != _NULL ) { count ++ ; daughter = daughter . getNext ( ) ; } return Integer . toString ( rail ( count ) ) ; }
28548	private void showNextSuperToast ( ) { if ( superToastPriorityQueue . isEmpty ( ) ) return ; final SuperToast superToast = superToastPriorityQueue . peek ( ) ; if ( ! superToast . isShowing ( ) ) { final Message message = obtainMessage ( Messages . DISPLAY_SUPERTOAST ) ; message . obj = superToast ; sendMessage ( message ) ; } }
28568	@ Override public void populateField ( ProcessFunction value ) { processFunction = value ; if ( textField != _NULL ) { textField . setText ( ParameterFunctionUtils . getString ( processFunction ) ) ; UndoManager . getInstance ( ) . addUndoEvent ( new UndoEvent ( this , getFieldId ( ) , oldValueObj , value ) ) ; oldValueObj = value ; valueUpdated ( ) ; } }
28571	public void onUpOrCancel ( long time ) { if ( mModelSelectorButton . onUpOrCancel ( ) && mTabModelSelector != _NULL ) { getActiveStripLayoutHelper ( ) . finishAnimation ( ) ; if ( ! mModelSelectorButton . isVisible ( ) ) return ; mTabModelSelector . selectModel ( ! mTabModelSelector . isIncognitoSelected ( ) ) ; return ; } getActiveStripLayoutHelper ( ) . onUpOrCancel ( time ) ; }
28606	public T value ( ) throws ConcurrentModificationException , NoSuchElementException { if ( referenceCount != count ) { throw new ConcurrentModificationException ( ) ; } if ( current < _NUM ) { throw new NoSuchElementException ( ) ; } return values [ current ] ; }
28611	private boolean shouldCheckApiVersionOnPath ( String path ) { for ( Pattern filterPattern : API_VERSION_FILTER_PATTERNS ) { Matcher matcher = filterPattern . matcher ( path ) ; if ( matcher . matches ( ) ) { return _BOOL ; } } return _BOOL ; }
28634	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( server == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL server _CHAR ) ; } else if ( lease == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL lease _CHAR ) ; } }
28642	boolean sameClass ( String cfn ) { String s = cfn ; int i = s . lastIndexOf ( _CHAR . class _CHAR ) ; if ( i > _NUM ) { s = s . substring ( _NUM , i ) ; } if ( s . compareTo ( toString ( ) ) == _NUM ) return _BOOL ; return _BOOL ; }
28698	private BSPTree < Euclidean1D > previousInternalNode ( BSPTree < Euclidean1D > node ) { if ( childBefore ( node ) . getCut ( ) != _NULL ) { return leafBefore ( node ) . getParent ( ) ; } while ( isBeforeParent ( node ) ) { node = node . getParent ( ) ; } return node . getParent ( ) ; }
28731	@ VisibleForTesting static boolean hasAppInstalled ( Context context , String packageName ) { try { context . getPackageManager ( ) . getPackageInfo ( packageName , _NUM ) ; return _BOOL ; } catch ( PackageManager . NameNotFoundException e ) { return _BOOL ; } }
28742	public static < T > boolean contains ( Iterator < T > iterator , T element ) { if ( iterator != _NULL ) { while ( iterator . hasNext ( ) ) { T candidate = iterator . next ( ) ; if ( ObjectUtils . nullSafeEquals ( candidate , element ) ) return _BOOL ; } } return _BOOL ; }
28771	public boolean isContinuousFeature ( String featureName ) { try { int index = getFeatureIndex ( featureName ) ; return isContinuousFeature ( index ) ; } catch ( Exception e ) { return _BOOL ; } }
28772	public void updateTopControlsState ( ) { if ( mContent == _NULL ) return ; if ( isFullscreenSizePanel ( ) ) { mContent . updateTopControlsState ( _BOOL , _BOOL , _BOOL ) ; } else { mContent . updateTopControlsState ( _BOOL , _BOOL , _BOOL ) ; } }
28773	public static java . sql . Time toSqlTime ( String time ) { java . util . Date newDate = toDate ( _CHAR _NUM / _NUM / _NUM _CHAR , time ) ; if ( newDate != _NULL ) { return new java . sql . Time ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
28795	public void addEventListener ( ZWaveEventListener eventListener ) { synchronized ( zwaveEventListeners ) { if ( zwaveEventListeners . contains ( eventListener ) ) { logger . debug ( _CHAR Event Listener { } already registered _CHAR , eventListener ) ; return ; } zwaveEventListeners . add ( eventListener ) ; } }
28803	static boolean isAlive ( Vertex vertex ) { if ( vertex == _NULL ) return _BOOL ; try { return vertex . property ( Schema . BaseType . TYPE . name ( ) ) . isPresent ( ) ; } catch ( IllegalStateException e ) { return _BOOL ; } }
28902	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( undoRedoObject != _NULL ) { if ( undoRedoObject . getOldValue ( ) instanceof TimePeriod ) { TimePeriod oldValue = ( TimePeriod ) undoRedoObject . getOldValue ( ) ; populateDuration ( start , oldValue . getStart ( ) ) ; populateDuration ( end , oldValue . getEnd ( ) ) ; } } }
28910	private static Optional < Set < String >> includedFields ( String resourceType , TypedParams < IncludedFieldsParams > includedFields ) { IncludedFieldsParams typeIncludedFields = findIncludedFields ( includedFields , resourceType ) ; if ( noResourceIncludedFieldsSpecified ( typeIncludedFields ) ) { return Optional . empty ( ) ; } else { return Optional . of ( typeIncludedFields . getParams ( ) ) ; } }
28929	public String next ( int n ) { int i = this . myIndex ; int j = i + n ; if ( j >= this . mySource . length ( ) ) { throw syntaxError ( _CHAR Substring bounds error _CHAR ) ; } this . myIndex += n ; return this . mySource . substring ( i , j ) ; }
28949	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
28968	private boolean peekRead ( int expected ) throws CompileException , IOException { if ( this . peek ( ) == expected ) { if ( this . nextChar != - _NUM ) this . sb . append ( ( char ) this . nextChar ) ; this . nextChar = this . nextButOneChar ; this . nextButOneChar =- _NUM ; return _BOOL ; } return _BOOL ; }
28997	@ Override public Expression createExpression ( FunctionName functionName ) { if ( functionName == _NULL ) { return _NULL ; } List < Expression > parameters = _NULL ; Literal fallback = _NULL ; Function function = functionFactory . function ( functionName . getFunctionName ( ) , parameters , fallback ) ; return function ; }
29015	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
29042	public void saveCache ( String url , byte [ ] bytes ) { if ( TextUtils . isEmpty ( url ) || _NULL == bytes || bytes . length == _NUM ) { return ; } if ( ! checkUrl ( url ) ) { return ; } mInternalCache . putCache ( url , bytes ) ; }
29071	public double nextDouble ( boolean includeZero , boolean includeOne ) { double d = _NUM . _NUM ; do { d = nextDouble ( ) ; if ( includeOne && nextBoolean ( ) ) d += _NUM . _NUM ; } while ( ( d > _NUM . _NUM ) || ( ! includeZero && d == _NUM . _NUM ) ) ; return d ; }
29088	@ Override protected void initData ( ) { videoFilePresenter = new VideoFilePresenter ( ) ; videoFilePresenter . attachView ( this ) ; if ( path != _NULL && ! TextUtils . isEmpty ( path ) ) { tvFilePath . setText ( path ) ; rootFile = new File ( path ) ; videoFilePresenter . getVideoData ( rootFile ) ; } }
29264	public JsonObject merge ( JsonObject object ) { if ( object == _NULL ) { throw new NullPointerException ( _CHAR object is _NULL _CHAR ) ; } for ( Member member : object ) { this . set ( member . name , member . value ) ; } return this ; }
29318	public boolean isBeginningInstruction ( ) { if ( predecessors . size ( ) == _NUM ) { return _BOOL ; } if ( predecessors . first ( ) . instructionIndex == - _NUM ) { return _BOOL ; } return _BOOL ; }
29377	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( undoRedoObject != _NULL ) { if ( undoRedoObject . getNewValue ( ) instanceof TimePeriod ) { TimePeriod newValue = ( TimePeriod ) undoRedoObject . getNewValue ( ) ; populateDuration ( start , newValue . getStart ( ) ) ; populateDuration ( end , newValue . getEnd ( ) ) ; } } }
29408	public void changeCenterButtonIcon ( int icon ) { if ( fab == _NULL ) { Log . e ( TAG , _CHAR You should call setCentreButtonIcon ( ) instead , _CHAR + _CHAR changeCenterButtonIcon works if space navigation already set up '' ) ; } else { fab . setImageResource ( icon ) ; centreButtonIcon = icon ; } }
29456	@ SuppressWarnings ( _CHAR unused _CHAR ) private void broadcastInfluencePacket ( ) { SM_INFLUENCE_RATIO pkt = new SM_INFLUENCE_RATIO ( ) ; Player player ; Iterator < Player > iter = World . getInstance ( ) . getPlayersIterator ( ) ; while ( iter . hasNext ( ) ) { player = iter . next ( ) ; PacketSendUtility . sendPacket ( player , pkt ) ; } }
29545	protected boolean atAnyOfTokens ( TokenKind ... kinds ) { TokenKind current = currentToken ( ) ; for ( TokenKind kind : kinds ) { if ( current == kind ) { return _BOOL ; } } return _BOOL ; }
29594	public void modifyEnergyStored ( int energy ) { this . energy += energy ; if ( this . energy > capacity ) { this . energy = capacity ; } else if ( this . energy < _NUM ) { this . energy = _NUM ; } }
29605	public static boolean isFileNewer ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileNewer ( file , reference . lastModified ( ) ) ; }
29608	@ Override public void close ( ) { try { raf . close ( ) ; System . err . println ( _CHAR Closing file : _CHAR + file . getName ( ) + _CHAR ( _CHAR + pages + _CHAR / _CHAR + data . length + _CHAR pages ) _CHAR ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
29610	@ Override public boolean ready ( ) throws IOException { try { return in . ready ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _BOOL ; } }
29632	public static byte [ ] toByteArray ( URLConnection urlConn ) throws IOException { InputStream inputStream = urlConn . getInputStream ( ) ; try { return IOUtils . toByteArray ( inputStream ) ; } finally { inputStream . close ( ) ; } }
29662	private void connectToGeoServer ( GeoServerConnection connection ) { GeoServerClientInterface client = connectionMap . get ( connection ) ; if ( client != _NULL ) { client . connect ( ) ; if ( client . isConnected ( ) ) { client . retrieveData ( ) ; } } }
29666	private static Object maybeConvertToString ( Object value ) { if ( value instanceof Doc ) { return ( ( Doc ) value ) . prettyPrint ( Integer . MAX_VALUE ) ; } if ( value instanceof Enum ) { return value . toString ( ) ; } return value ; }
29681	public TIntArrayList inverseGrep ( TIntProcedure condition ) { TIntArrayList list = new TIntArrayList ( ) ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( ! condition . execute ( _data [ i ] ) ) { list . add ( _data [ i ] ) ; } } return list ; }
29848	public void end ( ) { String tag = ( String ) m_tagStack . remove ( m_tagStack . size ( ) - _NUM ) ; spacing ( ) ; m_out . print ( _CHAR ) ; m_out . print ( _CHAR ) ; m_out . print ( tag ) ; m_out . print ( _CHAR ) ; println ( ) ; }
29856	public static final void removePlayer ( Player player ) { PlayerAlliance alliance = player . getPlayerAlliance2 ( ) ; if ( alliance != _NULL ) { if ( alliance . getTeamType ( ) . isDefence ( ) ) { VortexService . getInstance ( ) . removeDefenderPlayer ( player ) ; } alliance . onEvent ( new PlayerAllianceLeavedEvent ( alliance , player ) ) ; } }
29864	public void flattenHierarchy ( ConstraintWidgetContainer root ) { ArrayList < ConstraintWidgetContainer > containers = gatherContainers ( root ) ; while ( containers . size ( ) > _NUM ) { for ( ConstraintWidgetContainer container : containers ) { removeContainer ( container ) ; } containers = gatherContainers ( root ) ; } }
29869	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String name2 : this . names ) { if ( caseSensitivity . checkEquals ( name , name2 ) ) { return _BOOL ; } } return _BOOL ; }
29897	public static JSON from ( Object object ) throws IOException { Assert . notNull ( _CHAR object _CHAR , object ) ; try { return from ( mapper . writeValueAsString ( object ) ) ; } catch ( Exception e ) { throw new IOException ( e ) ; } }
29898	public void tabSelected ( long time , int id , int prevId ) { if ( findTabById ( id ) == _NULL ) { tabCreated ( time , id , prevId , _BOOL ) ; } else { updateVisualTabOrdering ( ) ; mUpdateHost . requestUpdate ( ) ; } }
30024	public static boolean isLegacyIdeaAndroidProject ( @ NotNull Project project ) { ModuleManager moduleManager = ModuleManager . getInstance ( project ) ; for ( Module module : moduleManager . getModules ( ) ) { if ( isLegacyIdeaAndroidModule ( module ) ) { return _BOOL ; } } return _BOOL ; }
30042	@ NotNull public ImageOverlayBuilder toDisk ( @ NotNull File file ) { try { ImageIO . write ( copy ( bufferedImage , BufferedImage . TYPE_INT_ARGB ) , _CHAR png _CHAR , file ) ; } catch ( IOException e ) { throw new CognitiveException ( _CHAR Could not write to disk _CHAR , e ) ; } return this ; }
30103	public Set < RefType > catchableSubset ( ThrowableSet thrownSet ) { Set < RefType > result = new ExceptionHashSet < RefType > ( ALL_TEST_THROWABLES . size ( ) ) ; for ( RefType e : ALL_TEST_THROWABLES ) { if ( thrownSet . catchableAs ( e ) ) { result . add ( e ) ; } } return result ; }
30140	private int calculateDepth ( TemplateDruidQuery candidate ) { int theDepth = _NUM ; TemplateDruidQuery iterator = candidate . nestedQuery ; while ( iterator != _NULL ) { theDepth ++ ; iterator = iterator . getInnerQuery ( ) ; } return theDepth ; }
30150	public static java . sql . Time toSqlTime ( int hour , int minute , int second ) { java . util . Date newDate = toDate ( _NUM , _NUM , _NUM , hour , minute , second ) ; if ( newDate != _NULL ) { return new java . sql . Time ( newDate . getTime ( ) ) ; } else { return _NULL ; } }
30159	private BSPTree < Sphere1D > previousInternalNode ( BSPTree < Sphere1D > node ) { if ( childBefore ( node ) . getCut ( ) != _NULL ) { return leafBefore ( node ) . getParent ( ) ; } while ( isBeforeParent ( node ) ) { node = node . getParent ( ) ; } return node . getParent ( ) ; }
30178	public final void detach ( ) { if ( isAttachedToRecycler ) { isAttachedToRecycler = _BOOL ; recyclerWantsTouch = _BOOL ; recyclerView . reset ( ) ; recyclerView = _NULL ; layoutManager = _NULL ; } }
30194	protected Augmentations modifyAugmentations ( Augmentations augs , boolean force ) { if ( force || isTopLevelIncludedItem ( ) ) { if ( augs == _NULL ) { augs = new AugmentationsImpl ( ) ; } augs . putItem ( XINCLUDE_INCLUDED , Boolean . TRUE ) ; } return augs ; }
30198	public static boolean parseBooleanParam ( String value ) { if ( value == _NULL ) { return _BOOL ; } if ( value . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) || value . equals ( _CHAR _NUM _CHAR ) ) { return _BOOL ; } return _BOOL ; }
30257	public void addDetailsView ( DetailsView detailsView , int location ) { DisplayArea displayArea = getDisplayArea ( location ) ; if ( displayArea != _NULL ) { if ( _CHAR _CHAR . equals ( displayArea . getCaption ( ) ) ) displayArea . setCaption ( detailsView . getTab ( ) . getName ( ) ) ; displayArea . addTab ( detailsView . getTab ( ) ) ; revalidate ( ) ; repaint ( ) ; } }
30267	private ItemApplication findApplicationInfoLocked ( String packageName , String className ) { for ( ItemApplication info : data ) { final ComponentName component = info . mIntent . getComponent ( ) ; if ( packageName . equals ( component . getPackageName ( ) ) && className . equals ( component . getClassName ( ) ) ) { return info ; } } return _NULL ; }
30283	protected Granularity generateGranularity ( String granularity , GranularityParser granularityParser ) throws BadApiRequestException { try { return granularityParser . parseGranularity ( granularity ) ; } catch ( GranularityParseException e ) { LOG . error ( UNKNOWN_GRANULARITY . logFormat ( granularity ) , granularity ) ; throw new BadApiRequestException ( e . getMessage ( ) ) ; } }
30290	@ Override public int countMissing ( ) { int count = _NUM ; for ( int i = _NUM ; i < size ( ) ; i ++ ) { if ( getByte ( i ) == MISSING_VALUE ) { count ++ ; } } return count ; }
30345	public void stopWatching ( String fileName ) { synchronized ( mObservedChildren ) { mObservedChildren . remove ( fileName ) ; if ( mObservedChildren . isEmpty ( ) ) { stopWatching ( ) ; Log_OC . d ( TAG , _CHAR Stopped watching parent folder _CHAR + mPath + _CHAR / _CHAR ) ; } } }
30408	public void populateFontField ( FieldIdEnum fieldId , Font font ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( fieldConfig != _NULL ) { fieldConfig . populateField ( font ) ; } }
30427	public boolean contains ( T dataSet ) { for ( int i = _NUM ; i < mDataSets . size ( ) ; i ++ ) { T set = mDataSets . get ( i ) ; if ( set . equals ( dataSet ) ) { return _BOOL ; } } return _BOOL ; }
30442	public static int charFromName ( String name ) { Object value ; initialize ( ) ; value = _byName . get ( name ) ; if ( value != _NULL && value instanceof Integer ) { return ( ( Integer ) value ) . intValue ( ) ; } return - _NUM ; }
30453	public static void init ( Context context ) { if ( sInstance == _NULL ) { final ExecutorService service = Executors . newSingleThreadExecutor ( ) ; sTrainingTaskFuture = service . submit ( new TrainingTask ( context ) ) ; } else { throw new IllegalStateException ( _CHAR Attempt to train code classifier twice .\ n _CHAR + _CHAR It should be initialized once at start to make train asynchronously . '' ) ; } }
30464	public static int unsignedLeb128Size ( int value ) { int remaining = value >> > _NUM ; int count = _NUM ; while ( remaining != _NUM ) { remaining >> >= _NUM ; count ++ ; } return count + _NUM ; }
30500	public void lockUserInput ( ) { locked = _BOOL ; statusbar . setText1 ( _CHAR _CHAR ) ; statusbar . setText2 ( _CHAR Busy ... _CHAR ) ; frame . setCursor ( Cursor . getPredefinedCursor ( Cursor . WAIT_CURSOR ) ) ; getCommandManager ( ) . setEnableCritical ( _BOOL ) ; searchManager . getFindDialogAsToolBar ( ) . setEnableCritical ( _BOOL ) ; samplesSpreadSheet . lockUserInput ( ) ; }
30509	public synchronized boolean addMacro ( int macroPosition , String macroXML ) { if ( macrosses . containsKey ( macroPosition ) ) { macrosses . remove ( macroPosition ) ; macrosses . put ( macroPosition , macroXML ) ; return _BOOL ; } macrosses . put ( macroPosition , macroXML ) ; return _BOOL ; }
30522	public static void w ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_WARNING ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . w ( tag , msg ) ; }
30546	public void populate ( ColorMap value ) { ValueComboBoxData selectedValue = typeComboBox . getSelectedValue ( ) ; if ( selectedValue != _NULL ) { ColourRampPanelInterface selectedPanel = this . colourRampMapCache . get ( selectedValue . getKey ( ) ) ; if ( selectedPanel != _NULL ) { selectedPanel . populate ( value ) ; } } }
30570	private static int clampY ( int y , ConstraintWidget base ) { if ( y < base . getY ( ) ) { y = base . getY ( ) ; } else if ( y > base . getBottom ( ) ) { y = base . getBottom ( ) ; } return y ; }
30575	@ Override public void write ( byte [ ] value ) throws IOException { if ( isFirstTime ) { init ( ) ; isFirstTime = _BOOL ; } checkAndWriteDictionaryChunkToFile ( ) ; oneDictionaryChunkList . add ( ByteBuffer . wrap ( value ) ) ; totalRecordCount ++ ; }
30612	@ Override public void log ( final DataTagCacheObject dataTagCacheObject ) { tagCache . acquireReadLockOnKey ( dataTagCacheObject . getId ( ) ) ; try { TAGLOG . info ( dataTagCacheObject . toString ( ) ) ; } finally { tagCache . releaseReadLockOnKey ( dataTagCacheObject . getId ( ) ) ; } }
30675	private File findSettingsFile ( File settingsFile ) { Logger . log ( getClass ( ) , LogLevel . TRACE , _CHAR Searching Kde settings in { _NUM } _CHAR , settingsFile ) ; if ( ! settingsFile . exists ( ) ) { Logger . log ( getClass ( ) , LogLevel . DEBUG , _CHAR Settings not found _CHAR ) ; return _NULL ; } Logger . log ( getClass ( ) , LogLevel . TRACE , _CHAR Settings found _CHAR ) ; return settingsFile ; }
30678	private final void putIdentifier0 ( String idName , Element element ) { if ( DEBUG_IDS ) { System . out . println ( _CHAR putIdentifier0 ( _CHAR + idName + _CHAR , _CHAR + element + _CHAR ) ; } if ( identifiers == _NULL ) { identifiers = new java . util . Hashtable ( ) ; } identifiers . put ( idName , element ) ; }
30775	public static boolean exists ( W q ) { try { return Helper . exists ( q , User . class ) ; } catch ( Exception e1 ) { log . error ( e1 . getMessage ( ) , e1 ) ; } return _BOOL ; }
30827	public void clearSticky ( ) { int size = headComponentStack . size ( ) ; while ( size > _NUM && headerViewStack . size ( ) == size ) { WXCell headComponent = headComponentStack . pop ( ) ; View headerView = headerViewStack . pop ( ) ; ( ( ViewGroup ) getParent ( ) ) . removeView ( headerView ) ; headComponent . recoverySticky ( ) ; } }
30829	public void clear ( ) { int n = mSize ; Object [ ] values = mValues ; for ( int i = _NUM ; i < n ; i ++ ) { values [ i ] = _NULL ; } mSize = _NUM ; mGarbage = _BOOL ; }
30831	public boolean checkAllophoneSyntax ( String allophoneString ) { try { splitIntoAllophoneList ( allophoneString , _BOOL ) ; return _BOOL ; } catch ( IllegalArgumentException e ) { return _BOOL ; } }
30836	public JSONWriter array ( ) throws JSONException { if ( this . mode == _CHAR || this . mode == _CHAR || this . mode == _CHAR ) { this . push ( _NULL ) ; this . append ( _CHAR [ _CHAR ) ; this . comma = _BOOL ; return this ; } throw new JSONException ( _CHAR Misplaced array . '' ) ; }
30846	public String toString ( ) { final IOutputWriter w = new OutputWriterHumanReadable ( new StringWriter ( ) ) ; try { write ( w , _NULL ) ; } catch ( IOException e ) { } return w . toString ( ) ; }
30899	private static void write ( GigaSpace space , Phrase phrase ) { LeaseContext < Phrase > context = space . write ( phrase ) ; if ( context . getVersion ( ) == _NUM ) { System . out . println ( _CHAR write - _CHAR + phrase ) ; } else { System . out . println ( _CHAR update - _CHAR + phrase ) ; } }
30910	public String read ( ) { switchToTextArea ( ) ; try { return webDriver . findElement ( By . xpath ( _CHAR .// body '' ) ) . getText ( ) ; } finally { frameSwitcher . switchTo ( '' / $ cq '' ) ; } }
30931	public List < DependencyGraph > dependencyTreebankTraining ( ) { switch ( language ) { case ENGLISH : return DependencyGraphReader . read ( _CHAR / export / dat / udt / en / en - ud - train . conllu _CHAR , _CHAR ) ; case VIETNAMESE : return DependencyGraphReader . read ( _CHAR / export / dat / udt / vi / _NUM - training . conll _CHAR , _CHAR ) ; } return _NULL ; }
30971	public static String slurpURLNoExceptions ( URL u ) { try { return slurpURL ( u ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _NULL ; } }
30992	public ConsoleWriter erasePreviouslyPrintedLines ( ) { if ( consoleWriterConfig . isAnsiCodeEnabled ( ) ) { for ( int i = _NUM ; i < numberOfNewLinesInLastPrintedString ; i ++ ) { ansi . cursorUp ( _NUM ) ; ansi . eraseLine ( ) ; } } return this ; }
31015	public boolean moveStream ( final String streamName ) { try { doMoveStream ( streamName ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
31038	private int klattRule8 ( Element segment ) { Element syllable = getSyllable ( segment ) ; if ( hasAccent ( syllable ) ) { if ( isInNucleus ( segment ) ) { return getPropertyAsInteger ( _CHAR rule8 . accent _CHAR ) ; } } return _NUM ; }
31059	public boolean canSet ( Class type ) { if ( type == _NULL ) return _BOOL ; if ( Number . class . isAssignableFrom ( type ) || String . class . isAssignableFrom ( type ) ) { return _BOOL ; } else { return m_columnType . isAssignableFrom ( type ) ; } }
31168	public boolean taxApplies ( ) { GenericValue product = getProduct ( ) ; if ( product != _NULL ) { return ProductWorker . taxApplies ( product ) ; } else { return _BOOL ; } }
31273	public void cleanPatch ( ) { if ( patchDirectory == _NULL ) { return ; } if ( isTinkerLoaded ( ) ) { TinkerLog . e ( TAG , _CHAR it is not safety to clean patch when tinker is loaded , you should kill all your process after clean ! _CHAR ) ; } SharePatchFileUtil . deleteDir ( patchDirectory ) ; }
31285	public static void splashInit ( ) { splashScreenObj = SplashScreen . getSplashScreen ( ) ; if ( splashScreenObj != _NULL ) { createTextArea ( ) ; splashGraphics = splashScreenObj . createGraphics ( ) ; splashGraphics . setFont ( font ) ; splashText ( getVersionString ( ) ) ; } }
31294	public static boolean isHasSdcard ( ) { String status = Environment . getExternalStorageState ( ) ; if ( status . equals ( Environment . MEDIA_MOUNTED ) ) { return _BOOL ; } else { return _BOOL ; } }
31339	protected String resolveExternalSystem ( String systemId , String resolver ) throws IOException { Resolver r = queryResolver ( resolver , _CHAR i2l _CHAR , systemId , _NULL ) ; if ( r != _NULL ) { return r . resolveSystem ( systemId ) ; } else { return _NULL ; } }
31343	public long remove ( short key ) { long prev = ( long ) _NUM ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
31363	private static boolean isDebugEnabled ( ) { try { String val = SecuritySupport . getSystemProperty ( _CHAR xerces . debug _CHAR ) ; return ( val != _NULL && ( ! _CHAR _BOOL _CHAR . equals ( val ) ) ) ; } catch ( SecurityException se ) { } return _BOOL ; }
31370	private void handleStaticInitializerBlocks ( soot . SootMethod sootMethod ) { ArrayList < Block > staticInitializerBlocks = ( ( soot . javaToJimple . PolyglotMethodSource ) sootMethod . getSource ( ) ) . getStaticInitializerBlocks ( ) ; if ( staticInitializerBlocks != _NULL ) { Iterator < Block > staticInitBlocksIt = staticInitializerBlocks . iterator ( ) ; while ( staticInitBlocksIt . hasNext ( ) ) { createBlock ( staticInitBlocksIt . next ( ) ) ; } } }
31433	public void pixelsToValue ( float [ ] pixels ) { Matrix tmp = new Matrix ( ) ; mMatrixOffset . invert ( tmp ) ; tmp . mapPoints ( pixels ) ; mViewPortHandler . getMatrixTouch ( ) . invert ( tmp ) ; tmp . mapPoints ( pixels ) ; mMatrixValueToPx . invert ( tmp ) ; tmp . mapPoints ( pixels ) ; }
31435	public static final SandboxRay show ( Window owner , SandboxRay ray ) { EditRayDialog ard = new EditRayDialog ( owner , ray ) ; ard . setLocationRelativeTo ( owner ) ; ard . setVisible ( _BOOL ) ; if ( ! ard . canceled ) { return ard . rayPanel . getRay ( ) ; } return ray ; }
31491	@ Override public void emptyElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { if ( fNamespaces ) { handleStartElement ( element , attributes , augs , _BOOL ) ; handleEndElement ( element , augs , _BOOL ) ; } else if ( fDocumentHandler != _NULL ) { fDocumentHandler . emptyElement ( element , attributes , augs ) ; } }
31523	public ByteVector putByte ( final int b ) { int length = this . length ; if ( length + _NUM > data . length ) { enlarge ( _NUM ) ; } data [ length ++ ] = ( byte ) b ; this . length = length ; return this ; }
31536	public static final Vector2 show ( Window owner ) { ApplyForceDialog afd = new ApplyForceDialog ( owner ) ; afd . setLocationRelativeTo ( owner ) ; afd . setVisible ( _BOOL ) ; if ( ! afd . canceled ) { return afd . forcePanel . getForce ( ) ; } return _NULL ; }
31563	@ SuppressWarnings ( _CHAR unchecked _CHAR ) void updateBoxes ( ) { Value val = stackOrValue ( ) ; if ( boxes instanceof List ) { for ( ValueBox vb : ( List < ValueBox > ) boxes ) vb . setValue ( val ) ; } else if ( boxes instanceof ValueBox ) { ( ( ValueBox ) boxes ) . setValue ( val ) ; } }
31580	public void reset ( ) { this . normalizedValue = _NULL ; this . actualValue = _NULL ; this . actualValueType = XSConstants . UNAVAILABLE_DT ; this . actualType = _NULL ; this . memberType = _NULL ; this . memberTypes = _NULL ; this . itemValueTypes = _NULL ; }
31636	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
31652	private boolean quietSleep ( long ms ) { try { Thread . sleep ( ms ) ; } catch ( InterruptedException e ) { return _BOOL ; } return _BOOL ; }
31718	public static DmnEngineInfo retry ( String resourceUrl ) { log . debug ( _CHAR retying initializing of resource { } _CHAR , resourceUrl ) ; try { return initDmnEngineFromResource ( new URL ( resourceUrl ) ) ; } catch ( MalformedURLException e ) { throw new ActivitiDmnException ( _CHAR invalid url : _CHAR + resourceUrl , e ) ; } }
31746	public static boolean isFileOlder ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileOlder ( file , reference . lastModified ( ) ) ; }
31804	public void clear ( ) { for ( int i = _NUM ; i < this . counters . length ; i ++ ) { this . cachedCounters [ i ] = this . counters [ i ] ; this . counters [ i ] = _NUM ; } this . cachedContacts . clear ( ) ; this . cachedContacts . addAll ( this . contacts ) ; this . contacts . clear ( ) ; }
31877	public static byte [ ] toByteArray ( URL url ) throws IOException { URLConnection conn = url . openConnection ( ) ; try { return IOUtils . toByteArray ( conn ) ; } finally { close ( conn ) ; } }
31891	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
31931	public static FilterResolverIntf resolveFilter ( Expression filterExpression , AbsoluteTableIdentifier absoluteTableIdentifier ) { try { FilterExpressionProcessor filterExpressionProcessor = new FilterExpressionProcessor ( ) ; return filterExpressionProcessor . getFilterResolver ( filterExpression , absoluteTableIdentifier ) ; } catch ( Exception e ) { throw new RuntimeException ( _CHAR Error while resolving filter expression '' , e ) ; } }
31960	public byte [ ] decodeAuto ( String s ) { int nRemain = s . length ( ) % _NUM ; if ( nRemain == _NUM ) { return this . decode ( s ) ; } else { return this . decode ( s + new String ( this . charToPad , _NUM , _NUM - nRemain ) ) ; } }
31988	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; try { check ( ) ; } catch ( RuntimeException e ) { rethrow ( e ) ; } }
32055	public void timeToSpeech ( String time ) { String theTime = timeToString ( time ) ; if ( theTime != _NULL ) { textToSpeech ( theTime ) ; } else { throw new IllegalArgumentException ( _CHAR Bad time format _CHAR ) ; } }
32092	public static boolean isFileOlder ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) < timeMillis ; }
32167	public boolean addChild ( DominatorNode < N > child ) { if ( children . contains ( child ) ) { return _BOOL ; } else { children . add ( child ) ; return _BOOL ; } }
32197	public double maxValue ( ) { Iterator iIter = asTreeMap ( ) . values ( ) . iterator ( ) ; Double dMax = Double . NEGATIVE_INFINITY ; while ( iIter . hasNext ( ) ) { Double dVal = ( Double ) iIter . next ( ) ; dMax = ( dVal > dMax ) ? dVal : dMax ; } return dMax ; }
32241	public boolean tryWriteLockOnKey ( K id , Long timeout ) { try { return cache . tryWriteLockOnKey ( id , timeout ) ; } catch ( InterruptedException e ) { LOGGER . debug ( _CHAR Thread interrupted for id = '' + String . valueOf ( id ) + _CHAR ( _CHAR + this . getClass ( ) + _CHAR ) _CHAR ) ; return _BOOL ; } }
32284	@ Nullable public static String extractMajorVersionFromSemanticVersion ( String semanticVersion ) { Matcher matcher = SEMANTIC_VERSION_REGEX_PATTERN . matcher ( semanticVersion ) ; if ( matcher . find ( ) ) { return matcher . group ( _NUM ) ; } else { return _NULL ; } }
32403	@ Override public boolean next ( ) throws RemoteException { try { return s . next ( ) ; } catch ( RuntimeException e ) { rconn . rollback ( ) ; throw e ; } }
32443	public double minValue ( ) { Iterator iIter = asTreeMap ( ) . values ( ) . iterator ( ) ; Double dMin = Double . POSITIVE_INFINITY ; while ( iIter . hasNext ( ) ) { Double dVal = ( Double ) iIter . next ( ) ; dMin = ( dVal < dMin ) ? dVal : dMin ; } return dMin ; }
32495	protected void prepareTableView ( ) { if ( fAttributeTableView == _NULL ) { fAttributeTableView = new Attribute [ fTableViewBuckets ] ; fAttributeTableViewChainState = new int [ fTableViewBuckets ] ; } else { cleanTableView ( ) ; } }
32521	public Vector3f mult ( float scalar , Vector3f product ) { if ( _NULL == product ) { product = new Vector3f ( ) ; } product . x = x * scalar ; product . y = y * scalar ; product . z = z * scalar ; return product ; }
32528	public static boolean isFileNewer ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileNewer ( file , reference . lastModified ( ) ) ; }
32559	public static String toString ( URL url , Charset encoding ) throws IOException { InputStream inputStream = url . openStream ( ) ; try { return toString ( inputStream , encoding ) ; } finally { inputStream . close ( ) ; } }
32675	public boolean isPronounceable ( String word ) { String lowerCaseWord = word . toLowerCase ( ) ; if ( prefixFSM == _NULL || suffixFSM == _NULL ) { throw new Error ( _CHAR _NULL _CHAR ) ; } else { return ( prefixFSM . accept ( lowerCaseWord ) && suffixFSM . accept ( lowerCaseWord ) ) ; } }
32789	public final boolean equals ( Object obj ) { if ( obj instanceof Uuid ) { Uuid other = ( Uuid ) obj ; return bits0 == other . bits0 && bits1 == other . bits1 ; } else { return _BOOL ; } }
32792	public boolean disableCharacteristicNotify ( BluetoothGattCharacteristic characteristic ) { if ( characteristic != _NULL && ( characteristic . getProperties ( ) | BluetoothGattCharacteristic . PROPERTY_NOTIFY ) > _NUM ) { BleLog . w ( TAG , _CHAR characteristic . getProperties ( ) : _CHAR + characteristic . getProperties ( ) ) ; return setCharacteristicNotification ( getBluetoothGatt ( ) , characteristic , _BOOL ) ; } else { return _BOOL ; } }
32796	public short remove ( K key ) { short prev = ( short ) _NUM ; int index = index ( key ) ; if ( index >= _NUM ) { prev = _values [ index ] ; removeAt ( index ) ; } return prev ; }
32866	public void remove ( String name ) { Integer tt = name2index . get ( name ) ; if ( tt != _NULL ) { name2index . keySet ( ) . remove ( name ) ; index2name . remove ( tt ) ; ntax -- ; bits . set ( tt , _BOOL ) ; } }
32870	public boolean containsColumn ( String columnName ) { for ( int i = _NUM ; i < columnModels . size ( ) ; i ++ ) { ColumnModel columnModel = columnModels . get ( i ) ; if ( columnName . equalsIgnoreCase ( columnModel . getColumnName ( ) ) ) { return _BOOL ; } } return _BOOL ; }
32912	public ControlScaleOptions build ( ) { ControlScaleOptions options = new ControlScaleOptions ( ) ; options . position = this . position ; options . maxWidth = maxWidth ; options . metric = metric ; options . imperial = imperial ; options . updateWhenIdle = updateWhenIdle ; return options ; }
32921	public boolean isRole ( Role r ) { try { return Helper . exists ( W . create ( _CHAR uid _CHAR , this . getId ( ) ) . and ( _CHAR rid _CHAR , r . getId ( ) ) , UserRole . class ) ; } catch ( Exception e ) { log . error ( e . getMessage ( ) , e ) ; } return _BOOL ; }
32926	public static Object deepClone ( Object obj ) { try { byte [ ] bArray = objectToByteBuffer ( obj ) ; return objectFromByteBuffer ( bArray ) ; } catch ( Exception ex ) { throw new IllegalArgumentException ( _CHAR Failed to perform deep clone on [ _CHAR + obj + _CHAR ] object . Check that the all object context are implements java . io . Serializable . '' , ex ) ; } }
32969	private void updateExhaustionWithTime ( EntityPlayer player ) { ++ this . exhaustionTimer ; if ( this . exhaustionTimer >= EXHAUSTION_WITH_TIME_PERIOD ) { if ( ! player . capabilities . disableDamage ) { this . addExhaustion ( EXHAUSTION_WITH_TIME_AMOUNT ) ; } this . exhaustionTimer = _NUM ; } }
33009	public void clearPaymentMethodsById ( List < String > paymentMethodIdsToRemove ) { if ( UtilValidate . isEmpty ( paymentMethodIdsToRemove ) ) return ; for ( Iterator < CartPaymentInfo > iter = paymentInfo . iterator ( ) ; iter . hasNext ( ) ; ) { CartPaymentInfo info = iter . next ( ) ; if ( paymentMethodIdsToRemove . contains ( info . paymentMethodId ) ) { iter . remove ( ) ; } } }
33049	public static void startPermissionFlow ( Activity activity , String rationale ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( activity , permission ) ) { Toast . makeText ( activity , rationale , Toast . LENGTH_LONG ) . show ( ) ; requestPermissions ( activity ) ; } else { requestPermissions ( activity ) ; } }
33082	public static void closeQuietly ( Socket socket ) { if ( socket != _NULL ) { try { socket . close ( ) ; } catch ( Exception ignored ) { } } }
33088	public ImmutableList < MessageType > filterDocumentingMessages ( ProtoContainerElement element ) { ImmutableList . Builder < MessageType > builder = ImmutableList . builder ( ) ; for ( MessageType msg : element . getMessages ( ) ) { if ( ! msg . isMapEntry ( ) ) { builder . add ( msg ) ; } } return builder . build ( ) ; }
33093	private boolean isCauseException ( Throwable ex , Class < ? > clazz , int maxLevels ) { if ( maxLevels > _NUM ) { Throwable cause = ex . getCause ( ) ; if ( cause != _NULL ) { return clazz . isInstance ( cause ) || isCauseException ( cause , clazz , maxLevels - _NUM ) ; } } return _BOOL ; }
33118	public AuthnQuery createAuthnQuery ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_QUERY , value ) ; if ( obj == _NULL ) { return new AuthnQueryImpl ( value ) ; } else { return ( AuthnQuery ) obj ; } }
33138	@ Override public boolean valueIsAcceptable ( final String valueString , final LocalizableMessageBuilder invalidReason ) { for ( final V allowedValue : allowedValues ) { if ( allowedValue . toString ( ) . equalsIgnoreCase ( valueString ) ) { return _BOOL ; } } invalidReason . append ( ERR_MCARG_VALUE_NOT_ALLOWED . get ( longIdentifier , valueString ) ) ; return _BOOL ; }
33156	@ Nullable private P retrievePresenterFromExistingLoader ( PresenterRetainLoader loader , Class < ? extends P > presenterClazz ) { Object presenter = loader . getPresenter ( ) ; if ( presenterClazz . isInstance ( presenter ) ) { return presenterClazz . cast ( presenter ) ; } else { return _NULL ; } }
33193	protected void configurePopup ( ) { setLayout ( new BoxLayout ( this , BoxLayout . Y_AXIS ) ) ; setBorderPainted ( _BOOL ) ; setBorder ( LIST_BORDER ) ; setOpaque ( _BOOL ) ; add ( scroller ) ; setDoubleBuffered ( _BOOL ) ; setFocusable ( _BOOL ) ; }
33195	public boolean isValid ( File file ) { try { validateRootDirectory ( file ) ; return _BOOL ; } catch ( IllegalArgumentException e ) { return _BOOL ; } }
33230	public static String encode ( String s ) { String ret = _NULL ; try { ret = encode ( s , UTF_8 ) ; } catch ( UnsupportedEncodingException e ) { } return ret ; }
33262	protected boolean isPlainFlavor ( DataFlavor flavor ) { DataFlavor [ ] flavors = plainFlavors ; for ( int i = _NUM ; i < flavors . length ; i ++ ) { if ( flavors [ i ] . equals ( flavor ) ) { return _BOOL ; } } return _BOOL ; }
33283	private boolean isValidField ( final TagField field ) { if ( field == _NULL ) { return _BOOL ; } if ( ! ( field instanceof AsfTagField ) ) { return _BOOL ; } return ! field . isEmpty ( ) ; }
33292	public KeyInfoConfirmationData createKeyInfoConfirmationData ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . KEYINFO_CONFIRMATION_DATA , elem ) ; if ( obj == _NULL ) { return new KeyInfoConfirmationDataImpl ( elem ) ; } else { return ( KeyInfoConfirmationData ) obj ; } }
33295	public static File createTemporaryDirectory ( String prefix ) { while ( _BOOL ) { String candidateName = prefix + TEMPORARY_DIRECTORY_PRNG . nextInt ( ) ; File result = new File ( System . getProperty ( _CHAR java . io . tmpdir _CHAR ) , candidateName ) ; if ( result . mkdir ( ) ) { return result ; } } }
33317	private static ClassLoader findClassLoader ( ) throws ConfigurationError { ClassLoader classLoader = Thread . currentThread ( ) . getContextClassLoader ( ) ; if ( debug ) debugPrintln ( _CHAR Using context class loader : _CHAR + classLoader ) ; if ( classLoader == _NULL ) { classLoader = FactoryFinder . class . getClassLoader ( ) ; if ( debug ) debugPrintln ( _CHAR Using the class loader of FactoryFinder : _CHAR + classLoader ) ; } return classLoader ; }
33335	public static int collectDefaults ( ) { int flags = _NUM ; for ( Feature f : values ( ) ) { if ( f . enabledByDefault ( ) ) { flags |= f . getMask ( ) ; } } return flags ; }
33372	public StatusMessage createStatusMessage ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_MESSAGE , elem ) ; if ( object == _NULL ) { return new StatusMessageImpl ( elem ) ; } else { return ( StatusMessage ) object ; } }
33383	public boolean containsAttrValue ( String attrName , String attrValue ) { if ( attrSet != _NULL ) { Set attr = ( Set ) attrSet . get ( attrName ) ; if ( attr != _NULL ) { return ( attr . contains ( attrValue ) ) ; } } return ( _BOOL ) ; }
33387	protected final void fireServiceRevoked ( BeanContextServiceRevokedEvent bcsre ) { Object [ ] copy ; synchronized ( bcsListeners ) { copy = bcsListeners . toArray ( ) ; } for ( int i = _NUM ; i < copy . length ; i ++ ) { ( ( BeanContextServiceRevokedListener ) copy [ i ] ) . serviceRevoked ( bcsre ) ; } }
33411	public Resource createResource ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESOURCE , xml ) ; if ( obj == _NULL ) { return new ResourceImpl ( xml ) ; } else { return ( Resource ) obj ; } }
33438	public JSONObject toJSONObject ( ) throws JSONException { JSONObject jo = new JSONObject ( ) ; jo . put ( _CHAR id _CHAR , id ) ; jo . put ( _CHAR value _CHAR , value ) ; if ( exclusive ) { jo . put ( _CHAR exclusive _CHAR , exclusive ) ; } return jo ; }
33469	public int indexOfObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( int i = _NUM ; i < array . length ; i ++ ) { if ( array [ i ] . equals ( nso ) ) { return i ; } } return - _NUM ; }
33474	private boolean checkXMLENC ( final byte [ ] msg ) { if ( ! checkSecond ( msg ) ) { return _BOOL ; } if ( hasCorrectKeySize ( _NUM , msg ) || hasCorrectKeySize ( _NUM , msg ) || hasCorrectKeySize ( _NUM , msg ) ) { return _BOOL ; } return _BOOL ; }
33497	private static Charset toCharset ( String csn ) throws UnsupportedEncodingException { requireNonNull ( csn , _CHAR charsetName _CHAR ) ; try { return Charset . forName ( csn ) ; } catch ( IllegalCharsetNameException | UnsupportedCharsetException unused ) { throw new UnsupportedEncodingException ( csn ) ; } }
33512	public static boolean isTerminationCancelled ( HttpServletRequest request ) { String status = request . getParameter ( IFSConstants . TERMINATION_STATUS ) ; if ( status != _NULL && status . equalsIgnoreCase ( IFSConstants . CANCEL ) ) { return _BOOL ; } else { return _BOOL ; } }
33517	public void remove ( int pos ) { if ( pos < _NUM ) { throw new IllegalArgumentException ( _CHAR index less than zero . '' ) ; } if ( pos > getItemCount ( ) ) { throw new IllegalArgumentException ( _CHAR index greater than the number of items . '' ) ; } if ( popupMenu != _NULL ) popupMenu . remove ( pos ) ; }
33523	protected void uninstallComponents ( ) { uninstallTabContainer ( ) ; if ( scrollableTabLayoutEnabled ( ) ) { tabPane . remove ( tabScroller . viewport ) ; tabPane . remove ( tabScroller . scrollForwardButton ) ; tabPane . remove ( tabScroller . scrollBackwardButton ) ; tabScroller = _NULL ; } }
33533	public boolean addEdge ( DigraphNode node ) { if ( outNodes . contains ( node ) ) { return _BOOL ; } outNodes . add ( node ) ; node . inNodes . add ( this ) ; node . incrementInDegree ( ) ; return _BOOL ; }
33664	public boolean containsValue ( String val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSString . class ) ) { NSString str = ( NSString ) o ; if ( str . getContent ( ) . equals ( val ) ) return _BOOL ; } } return _BOOL ; }
33685	private void append ( StringBuffer result , CharacterIterator iterator ) { if ( iterator . first ( ) != CharacterIterator . DONE ) { char aChar ; result . append ( iterator . first ( ) ) ; while ( ( aChar = iterator . next ( ) ) != CharacterIterator . DONE ) { result . append ( aChar ) ; } } }
33747	public AnnotationVisitor visitTypeAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( fv != _NULL ) { return fv . visitTypeAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
33769	static int debugComponentCount ( ) { DebugGraphicsInfo debugGraphicsInfo = info ( ) ; if ( debugGraphicsInfo != _NULL && debugGraphicsInfo . componentToDebug != _NULL ) { return debugGraphicsInfo . componentToDebug . size ( ) ; } else { return _NUM ; } }
33817	public void makeImmutable ( ) { if ( ! mutable ) { return ; } super . makeImmutable ( ) ; if ( ( keyInfo != _NULL ) && ( ! keyInfo . isEmpty ( ) ) ) { keyInfo = Collections . unmodifiableList ( keyInfo ) ; } }
33824	public static void closeIfNotNull ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( IOException ignored ) { } } }
33872	public ManageNameIDRequest createManageNameIDRequest ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_REQUEST , value ) ; if ( obj == _NULL ) { return new ManageNameIDRequestImpl ( value ) ; } else { return ( ManageNameIDRequest ) obj ; } }
33888	public static void closeQuietly ( final Statement stmt ) { if ( stmt != _NULL ) { try { stmt . close ( ) ; } catch ( final Exception e ) { } } }
33902	public boolean isSiteUp ( String siteId ) { try { return getClusterMonitor ( ) . isSiteUp ( siteId ) ; } catch ( SessionException e ) { sessionDebug . error ( _CHAR Failed to check isSiteUp for { _NUM } _CHAR , siteId , e ) ; return _BOOL ; } }
33913	void registerInternalPlugin ( InternalDirectoryServerPlugin plugin ) { pluginLock . lock ( ) ; try { registerPlugin0 ( plugin , plugin . getPluginTypes ( ) ) ; } finally { pluginLock . unlock ( ) ; } }
33927	public Request createRequest ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . REQUEST ) ; if ( obj == _NULL ) { return new RequestImpl ( ) ; } else { return ( Request ) obj ; } }
33947	public void save ( ) throws SSOException , SMSException { if ( readOnly ) { if ( debug . warningEnabled ( ) ) { debug . warning ( _CHAR SMSEntry : Attempted to save an entry that _CHAR + _CHAR is marked as read - only : _CHAR + dn ) ; } throw ( new SMSException ( SMSException . STATUS_NO_PERMISSION , _CHAR sms - INSUFFICIENT_ACCESS_RIGHTS _CHAR ) ) ; } save ( ssoToken ) ; }
33950	public OneTimeUse createOneTimeUse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ONE_TIME_USE ) ; if ( obj == _NULL ) { return new OneTimeUseImpl ( ) ; } else { return ( OneTimeUse ) obj ; } }
33964	protected void writeContent ( Element elem , boolean needsIndenting ) throws IOException , BadLocationException { AttributeSet attr = elem . getAttributes ( ) ; writeNonHTMLAttributes ( attr ) ; if ( needsIndenting ) { indent ( ) ; } writeHTMLTags ( attr ) ; text ( elem ) ; }
34044	public boolean recalculate_length_violations ( ) { boolean result = _BOOL ; for ( int i = _NUM ; i < net_incompletes . length ; ++ i ) { if ( net_incompletes [ i ] . calc_length_violation ( ) ) { result = _BOOL ; } } return result ; }
34072	public ManageNameIDResponse createManageNameIDResponse ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_RESPONSE , value ) ; if ( obj == _NULL ) { return new ManageNameIDResponseImpl ( value ) ; } else { return ( ManageNameIDResponse ) obj ; } }
34104	@ Override public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } if ( obj instanceof Year ) { return year == ( ( Year ) obj ) . year ; } return _BOOL ; }
34109	public boolean validate ( ResponseHeaders networkResponse ) { if ( networkResponse . headers . getResponseCode ( ) == HttpURLConnection . HTTP_NOT_MODIFIED ) { return _BOOL ; } if ( lastModified != _NULL && networkResponse . lastModified != _NULL && networkResponse . lastModified . getTime ( ) < lastModified . getTime ( ) ) { return _BOOL ; } return _BOOL ; }
34135	boolean matchesOptionalSpacesFollowedBy ( String s ) { Mark mark = mark ( ) ; skipSpaces ( ) ; boolean result = matches ( s ) ; if ( ! result ) { setCurrent ( mark ) ; } return result ; }
34144	public ArtifactResponse createArtifactResponse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESPONSE ) ; if ( obj == _NULL ) { return new ArtifactResponseImpl ( ) ; } else { return ( ArtifactResponse ) obj ; } }
34163	public String transform ( String password ) { if ( AuthnSvcUtils . debug . messageEnabled ( ) ) { AuthnSvcUtils . debug . message ( _CHAR LowercaseTransform . transform _CHAR ) ; } if ( password == _NULL ) { return _NULL ; } return password . toLowerCase ( ) ; }
34210	public static boolean isDouble ( final String txt ) { try { Double . parseDouble ( txt ) ; return _BOOL ; } catch ( final Exception e ) { return _BOOL ; } }
34251	private static int [ ] intArrayFromCollection ( Collection < Integer > v ) { int [ ] result = new int [ v . size ( ) ] ; int i = _NUM ; for ( Integer value : v ) { result [ i ] = value ; i ++ ; } return result ; }
34306	public boolean containsValue ( String val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSString . class ) ) { NSString str = ( NSString ) o ; if ( str . getContent ( ) . equals ( val ) ) return _BOOL ; } } return _BOOL ; }
34307	public static int collectDefaults ( ) { int flags = _NUM ; for ( Feature f : values ( ) ) { if ( f . enabledByDefault ( ) ) { flags |= f . getMask ( ) ; } } return flags ; }
34323	public static boolean isFileNewer ( File file , long timeMillis ) { if ( file == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified file _CHAR ) ; } if ( ! file . exists ( ) ) { return _BOOL ; } return file . lastModified ( ) > timeMillis ; }
34327	public static GifImageData createGif ( byte [ ] bytes ) { byte [ ] imageType = readImageType ( bytes ) ; if ( imageTypeIs ( imageType , gif ) ) { GifImageData image = new GifImageData ( bytes ) ; GifImageHelper . processImage ( image ) ; return image ; } throw new IllegalArgumentException ( _CHAR GIF image expected . '' ) ; }
34357	public Assertion createAssertion ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION , xml ) ; if ( obj == _NULL ) { return new AssertionImpl ( xml ) ; } else { return ( Assertion ) obj ; } }
34375	public void modifyService ( String serviceName , Map attributes ) throws SMSException { try { getServiceConfig ( serviceName ) . setAttributes ( attributes ) ; } catch ( SSOException ssoe ) { SMSEntry . debug . error ( _CHAR OrganizationConfigManager . modifyService _CHAR + _CHAR SSOException in modify service _CHAR , ssoe ) ; throw ( new SMSException ( SMSEntry . bundle . getString ( SMS_INVALID_SSO_TOKEN ) , SMS_INVALID_SSO_TOKEN ) ) ; } }
34475	public boolean equals ( java . lang . Object obj ) { if ( stubDelegate == _NULL ) { setDefaultDelegate ( ) ; } if ( stubDelegate != _NULL ) { return stubDelegate . equals ( this , obj ) ; } return _BOOL ; }
34486	public static String replaceBackWithForward ( String str ) { char backSlash =_CHAR ; char forwardSlash =_CHAR ; String returnStr = str ; if ( str != _NULL ) { returnStr = str . replace ( backSlash , forwardSlash ) ; } return returnStr ; }
34502	protected void addIcon ( Container top ) { Icon sideIcon = getIcon ( ) ; if ( sideIcon != _NULL ) { JLabel iconLabel = new JLabel ( sideIcon ) ; iconLabel . setName ( _CHAR OptionPane . iconLabel _CHAR ) ; iconLabel . setVerticalAlignment ( SwingConstants . TOP ) ; top . add ( iconLabel , BorderLayout . BEFORE_LINE_BEGINS ) ; } }
34511	public StatusDetail createStatusDetail ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_DETAIL , value ) ; if ( obj == _NULL ) { return new StatusDetailImpl ( value ) ; } else { return ( StatusDetail ) obj ; } }
34545	public Builder addUnicodeLocaleAttribute ( String attribute ) { try { localeBuilder . addUnicodeLocaleAttribute ( attribute ) ; } catch ( LocaleSyntaxException e ) { throw new IllformedLocaleException ( e . getMessage ( ) , e . getErrorIndex ( ) ) ; } return this ; }
34572	public boolean isServerTerminated ( ) { try { process . exitValue ( ) ; } catch ( IllegalThreadStateException itse ) { return _BOOL ; } return _BOOL ; }
34588	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String suffix : this . suffixes ) { if ( caseSensitivity . checkEndsWith ( name , suffix ) ) { return _BOOL ; } } return _BOOL ; }
34704	public Status createStatus ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS , elem ) ; if ( object == _NULL ) { return new StatusImpl ( elem ) ; } else { return ( Status ) object ; } }
34790	public Object peek ( int n ) { try { return ( stack . peek ( n ) ) ; } catch ( EmptyStackException e ) { log . warn ( _CHAR Empty stack ( returning _NULL ) _CHAR ) ; return ( _NULL ) ; } }
34798	public AuthnStatement createAuthnStatement ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_STATEMENT , elem ) ; if ( obj == _NULL ) { return new AuthnStatementImpl ( elem ) ; } else { return ( AuthnStatement ) obj ; } }
34825	@ Override protected boolean checkParam ( final String reqParam ) throws ConnectorException { if ( reqParam == _NULL || reqParam . equals ( _CHAR _CHAR ) ) { return _BOOL ; } if ( Pattern . compile ( Constants . INVALID_PATH_REGEX ) . matcher ( reqParam ) . find ( ) ) { return _BOOL ; } return _BOOL ; }
34835	public void update ( Token token , ResultHandler < Token , ? > handler ) throws CoreTokenException { Reject . ifNull ( token ) ; try { taskExecutor . execute ( token . getTokenId ( ) , taskFactory . update ( token , handler ) ) ; } catch ( DataLayerException e ) { throw new CoreTokenException ( _CHAR Error in data layer _CHAR , e ) ; } }
34850	public boolean addAudience ( java . lang . String audience ) { if ( ( audience != _NULL ) && ! ( audience . length ( ) == _NUM ) ) { _audience . add ( audience ) ; return _BOOL ; } else { return _BOOL ; } }
34885	protected void notifyRowChanged ( ) throws SQLException { checkforRowSetInterface ( ) ; if ( listeners . isEmpty ( ) == _BOOL ) { RowSetEvent event = new RowSetEvent ( ( RowSet ) this ) ; for ( RowSetListener rsl : listeners ) { rsl . rowChanged ( event ) ; } } }
34930	@ Override public void removeNotificationListener ( NotificationListener listener ) throws ListenerNotFoundException { synchronized ( entries ) { Iterator < BaseNotificationBroadcasterEntry > items = entries . iterator ( ) ; while ( items . hasNext ( ) ) { BaseNotificationBroadcasterEntry item = items . next ( ) ; if ( item . listener == listener ) items . remove ( ) ; } } }
34950	private E dequeue ( ) { Node < E > h = head ; Node < E > first = h . next ; h . next = h ; head = first ; E x = first . item ; first . item = _NULL ; return x ; }
34966	public StatusCode createStatusCode ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_CODE , elem ) ; if ( object == _NULL ) { return new StatusCodeImpl ( elem ) ; } else { return ( StatusCode ) object ; } }
34976	@ Override protected void writeValue ( ASN1Writer writer ) throws IOException { writer . writeStartSequence ( ASN1 . UNIVERSAL_OCTET_STRING_TYPE ) ; writer . writeStartSequence ( ) ; writer . writeInteger ( PersistentSearchChangeType . changeTypesToInt ( changeTypes ) ) ; writer . writeBoolean ( changesOnly ) ; writer . writeBoolean ( returnECs ) ; writer . writeEndSequence ( ) ; writer . writeEndSequence ( ) ; }
34978	void deleteTree ( WriteableTransaction txn , Tree tree ) throws StorageRuntimeException { if ( tree == state ) { return ; } tree . delete ( txn ) ; if ( tree instanceof Index ) { state . deleteRecord ( txn , tree . getName ( ) ) ; } }
34980	public void writeSearchResult ( final int messageID , final Result result ) throws IOException { logger . trace ( _CHAR ENCODE LDAP SEARCH RESULT ( messageID = % d , result = % s ) _CHAR , messageID , result ) ; writeMessageHeader ( messageID ) ; { writeResultHeader ( LDAP . OP_TYPE_SEARCH_RESULT_DONE , result ) ; writeResultFooter ( writer ) ; } writeMessageFooter ( result . getControls ( ) ) ; }
34982	public void runTest ( ) throws Throwable { Document doc ; DocumentType docType ; String internal ; doc = ( Document ) load ( _CHAR staff2 _CHAR , _BOOL ) ; docType = doc . getDoctype ( ) ; internal = docType . getInternalSubset ( ) ; assertNull ( _CHAR internalSubsetNull _CHAR , internal ) ; }
35000	@ Override public Class < ? > resolveClass ( ObjectStreamClass classDesc ) throws ClassNotFoundException , IOException { String name = classDesc . getName ( ) ; try { return resolveClass ( name ) ; } catch ( ClassNotFoundException e ) { return super . resolveClass ( classDesc ) ; } }
35006	static boolean isEncoded ( final ByteSequence value ) { try { decodeAuthPassword ( value . toString ( ) ) ; return _BOOL ; } catch ( final Exception e ) { return _BOOL ; } }
35031	public ArtifactResolve createArtifactResolve ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESOLVE ) ; if ( obj == _NULL ) { return new ArtifactResolveImpl ( ) ; } else { return ( ArtifactResolve ) obj ; } }
35056	public boolean isDefined ( Object key ) { if ( key instanceof StyleConstants ) { Object cssKey = css . styleConstantsKeyToCSSKey ( ( StyleConstants ) key ) ; if ( cssKey != _NULL ) { key = cssKey ; } } return super . isDefined ( key ) ; }
35136	public void runTest ( ) throws Throwable { Document doc ; Element elementNode ; String elementValue ; doc = ( Document ) load ( _CHAR hc_staff _CHAR , _BOOL ) ; elementNode = doc . getDocumentElement ( ) ; elementValue = elementNode . getNodeValue ( ) ; assertNull ( _CHAR elementNodeValue _CHAR , elementValue ) ; }
35143	boolean is_layer_dependent ( ) { int compare_value = layer [ _NUM ] ; for ( int index = _NUM ; index < layer_structure . size ( ) ; ++ index ) { if ( layer [ index ] != compare_value ) { return _BOOL ; } } return _BOOL ; }
35200	public void recycle ( ) { type = T_NULL ; byteC . recycle ( ) ; charC . recycle ( ) ; strValue = _NULL ; hasStrValue = _BOOL ; hasHashCode = _BOOL ; hasLongValue = _BOOL ; }
35210	protected final void flushBuffer ( ) throws IOException { if ( bufferSize == _NUM ) return ; flushed = _BOOL ; ensureOpen ( ) ; if ( nextChar == _NUM ) return ; initOut ( ) ; out . write ( cb , _NUM , nextChar ) ; nextChar = _NUM ; }
35227	public String toHostString ( ) { CharArrayBuffer buffer = new CharArrayBuffer ( _NUM ) ; buffer . append ( this . hostname ) ; if ( this . port != - _NUM ) { buffer . append ( _CHAR ) ; buffer . append ( Integer . toString ( this . port ) ) ; } return buffer . toString ( ) ; }
35237	public static List < ImageData > createGifFrames ( byte [ ] bytes ) { byte [ ] imageType = readImageType ( bytes ) ; if ( imageTypeIs ( imageType , gif ) ) { GifImageData image = new GifImageData ( bytes ) ; GifImageHelper . processImage ( image ) ; return image . getFrames ( ) ; } throw new IllegalArgumentException ( _CHAR GIF image expected . '' ) ; }
35238	private void reInitiateOnWSOpenFailure ( ) { if ( clientEndPoint != _NULL ) { System . out . println ( _CHAR WebsocketThread . reInitiateOnWSOpenFailure ( ) : Force closing previous WS session _CHAR ) ; clientEndPoint . forceClose ( _BOOL ) ; } else { System . out . println ( _CHAR WebsocketThread . reInitiateOnWSOpenFailure ( ) : ERROR : clientEndPoint is _NULL _CHAR ) ; } }
35352	public Obligation createObligation ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . REQUEST , xml ) ; if ( obj == _NULL ) { return new ObligationImpl ( xml ) ; } else { return ( Obligation ) obj ; } }
35353	public void runTest ( ) throws Throwable { Document doc ; Node rootNode ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; state = rootNode . isSupported ( _CHAR xml _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR throw_True _CHAR , state ) ; }
35379	public static boolean isValidCredentials ( String dsHost , String dsPort , String bindDN , String bindPass ) { try ( Connection conn = factory . getConnection ( ) ) { return _BOOL ; } catch ( Exception e ) { System . out . println ( bundle . getString ( _CHAR upg - error - credentials _CHAR ) + _CHAR ! ! _CHAR ) ; } return _BOOL ; }
35416	public Duration multipliedBy ( long multiplicand ) { if ( multiplicand == _NUM ) { return ZERO ; } if ( multiplicand == _NUM ) { return this ; } return create ( toSeconds ( ) . multiply ( BigDecimal . valueOf ( multiplicand ) ) ) ; }
35423	public void removeNotify ( ) { synchronized ( getTreeLock ( ) ) { ListPeer peer = ( ListPeer ) this . peer ; if ( peer != _NULL ) { selected = peer . getSelectedIndexes ( ) ; } super . removeNotify ( ) ; } }
35445	private static String convertToQuotedString ( String s ) { if ( s == _NULL || s . isEmpty ( ) ) { return _NULL ; } if ( s . charAt ( _NUM ) == _CHAR_CHAR && s . charAt ( s . length ( ) - _NUM ) == _CHAR_CHAR ) { return s ; } return _CHAR_CHAR + s + _CHAR_CHAR ; }
35455	public void addMetaObject ( MetaObject object ) { for ( int k = _NUM ; k < MetaObjects . size ( ) ; ++ k ) { if ( MetaObjects . get ( k ) == _NULL ) { MetaObjects . set ( k , object ) ; return ; } } MetaObjects . add ( object ) ; }
35460	public ShapeTileSimplex remove_border_line ( int p_no ) { if ( p_no < _NUM || p_no >= lines_size ( ) ) { return this ; } ArrayList < PlaLineInt > new_arr = new ArrayList < PlaLineInt > ( lines_size ( ) ) ; new_arr . addAll ( lines_list ) ; new_arr . remove ( p_no ) ; return new ShapeTileSimplex ( new_arr ) ; }
35503	public synchronized String toString ( ) { String toString = _CHAR Thread Auditor - List of monitored threads : \ n _CHAR ; Iterator < ThreadHandle > it = threadHandles . values ( ) . iterator ( ) ; while ( it . hasNext ( ) ) { ThreadHandle threadHandle = ( ThreadHandle ) it . next ( ) ; toString += _CHAR _CHAR + threadHandle . toString ( ) + _CHAR \ n _CHAR ; } return toString ; }
35512	@ Override public String findInitParameter ( String name ) { parametersLock . readLock ( ) . lock ( ) ; try { return parameters . get ( name ) ; } finally { parametersLock . readLock ( ) . unlock ( ) ; } }
35523	boolean removeEq ( Object o ) { for ( int i = _NUM ; i < size ; i ++ ) { if ( o == queue [ i ] ) { removeAt ( i ) ; return _BOOL ; } } return _BOOL ; }
35549	public boolean findDefaultApp ( ) { if ( mResId == _NUM ) { return _BOOL ; } parsedIntent = _NULL ; parsedValues = _NULL ; new MyLayoutParser ( ) . parseValues ( ) ; return ( parsedValues != _NULL ) && ( parsedIntent != _NULL ) ; }
35601	public void addCertStore ( CertStore store ) { if ( store == _NULL ) { return ; } if ( certStores == _NULL ) { certStores = new ArrayList < CertStore > ( ) ; } certStores . add ( store ) ; }
35674	public boolean isLoaded ( String id ) { try { if ( super . findSession ( id ) != _NULL ) return _BOOL ; } catch ( IOException e ) { log . error ( _CHAR checking isLoaded for id , _CHAR + id + _CHAR , _CHAR + e . getMessage ( ) , e ) ; } return _BOOL ; }
35735	public AnnotationVisitor visitTypeAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { return mv . visitTypeAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
35741	public Action createAction ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ACTION , xml ) ; if ( obj == _NULL ) { return new ActionImpl ( xml ) ; } else { return ( Action ) obj ; } }
35824	public boolean isPolygonal ( ) { Enumeration enum_ = curves . elements ( ) ; while ( enum_ . hasMoreElements ( ) ) { if ( ( ( Curve ) enum_ . nextElement ( ) ) . getOrder ( ) > _NUM ) { return _BOOL ; } } return _BOOL ; }
35894	private boolean handleCallbacksInternally ( HttpServletRequest request , HttpServletResponse response , Callback [ ] callbacks ) throws RestAuthException { for ( Callback callback : callbacks ) { RestAuthCallbackHandler restAuthCallbackHandler = restAuthCallbackHandlerFactory . getRestAuthCallbackHandler ( callback . getClass ( ) ) ; if ( ! restAuthCallbackHandler . updateCallbackFromRequest ( request , response , callback ) ) { return _BOOL ; } } return _BOOL ; }
35926	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR CompareRequest ( dn = _CHAR ) ; buffer . append ( dn ) ; buffer . append ( _CHAR , attribute = _CHAR ) ; buffer . append ( attributeType ) ; buffer . append ( _CHAR , value = _CHAR ) ; buffer . append ( assertionValue ) ; buffer . append ( _CHAR ) _CHAR ) ; }
35963	public void addVetoableChangeListener ( String propertyName , VetoableChangeListener listener ) { if ( listener == _NULL || propertyName == _NULL ) { return ; } listener = this . map . extract ( listener ) ; if ( listener != _NULL ) { this . map . add ( propertyName , listener ) ; } }
36002	void removeListeners ( ) { try { serviceSchemaManager . removeListener ( schemaListenerId ) ; serviceConfigManager . removeListener ( configListenerId ) ; } catch ( Exception e ) { debug . error ( _CHAR AMAuthLevelManager : removeListeners _CHAR , e ) ; } }
36037	public void refreshSession ( SSOToken token ) throws SSOException { try { getProvider ( token ) . refreshSession ( token ) ; } catch ( Exception e ) { debug . error ( _CHAR Error in refreshing the session from session server _CHAR ) ; throw new SSOException ( e ) ; } }
36039	public void addQuery ( QueryElement qryElement ) { if ( qryElement == _NULL ) { return ; } if ( this . queries == _NULL ) { this . queries = new ArrayList ( ) ; } this . queries . add ( qryElement ) ; }
36079	@ Override public boolean isActive ( String value , String inactiveValue ) { try { int attrValue = Integer . parseInt ( value ) ; return ! ( ( attrValue & DISABLED_MASK ) != _NUM ) ; } catch ( NumberFormatException nfe ) { return _BOOL ; } }
36092	public void addResourceData ( SMDiscoEntryData data ) { try { data . setDiscoStr ( isUserResourceOffering ( ) ) ; discoData . add ( data ) ; } catch ( AMConsoleException e ) { debug . error ( _CHAR SMDiscoveryServiceData . addResourceData _CHAR , e ) ; } }
36106	public void removeAccessibleSelection ( int i ) { TreeModel model = JTree . this . getModel ( ) ; if ( model != _NULL ) { if ( i >= _NUM && i < getAccessibleChildrenCount ( ) ) { TreePath path = getChildTreePath ( i ) ; JTree . this . removeSelectionPath ( path ) ; } } }
36128	public IDPEntry createIDPEntry ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . IDPENTRY , value ) ; if ( obj == _NULL ) { return new IDPEntryImpl ( value ) ; } else { return ( IDPEntry ) obj ; } }
36164	public boolean offer ( E o ) { if ( o == _NULL ) { throw new NullPointerException ( _CHAR o == _NULL _CHAR ) ; } growToSize ( size + _NUM ) ; elements [ size ] = o ; siftUp ( size ++ ) ; return _BOOL ; }
36178	public XACMLAuthzDecisionQuery createXACMLAuthzDecisionQuery ( Element elem ) throws XACMLException , SAML2Exception { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_QUERY , elem ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionQueryImpl ( elem ) ; } else { return ( XACMLAuthzDecisionQuery ) obj ; } }
36193	public int length ( ) { ImmutableList < A > l = this ; int len = _NUM ; while ( l . tail != _NULL ) { l = l . tail ; len ++ ; } return len ; }
36195	public synchronized void dragEnter ( DropTargetDragEvent dtde ) { isDraggingInside = _BOOL ; if ( ! active ) return ; if ( dtListener != _NULL ) { dtListener . dragEnter ( dtde ) ; } else dtde . getDropTargetContext ( ) . setTargetActions ( DnDConstants . ACTION_NONE ) ; initializeAutoscrolling ( dtde . getLocation ( ) ) ; }
36203	@ Override public String toString ( ) { StringBuilder builder = new StringBuilder ( super . toString ( ) ) ; builder . append ( _CHAR ( _CHAR ) ; builder . append ( new String ( magicNumbers ) ) ; builder . append ( _CHAR , _CHAR ) ; builder . append ( this . byteOffset ) ; builder . append ( _CHAR ) _CHAR ) ; return builder . toString ( ) ; }
36283	LogExtracts tryParse ( String message ) { for ( Extractor extractor : Extractor . values ( ) ) { Matcher matcher = extractor . newMatcher ( message ) ; if ( matcher . matches ( ) ) { return extract ( extractor , matcher ) ; } } return _NULL ; }
36285	@ Override public synchronized void load ( InputStream inStream ) throws IOException { check ( _CHAR putProviderProperty . '' + name ) ; if ( debug != _NULL ) { debug . println ( _CHAR Load _CHAR + name + _CHAR provider properties _CHAR ) ; } Properties tempProperties = new Properties ( ) ; tempProperties . load ( inStream ) ; implPutAll ( tempProperties ) ; }
36312	public int indexOfTabComponent ( Component tabComponent ) { for ( int i = _NUM ; i < getTabCount ( ) ; i ++ ) { Component c = getTabComponentAt ( i ) ; if ( c == tabComponent ) { return i ; } } return - _NUM ; }
36387	public int read_int ( ) { Object curr_ob = next_token ( ) ; if ( ! ( curr_ob instanceof Integer ) ) { System . out . println ( _CHAR Logfile . read_int : Integer expected _CHAR ) ; pending_token = curr_ob ; return - _NUM ; } return ( ( ( Integer ) curr_ob ) . intValue ( ) ) ; }
36492	public void removeAttribute ( String name ) { if ( request != _NULL ) { this . request . removeAttribute ( name ) ; internalAttributes . remove ( name ) ; } else { internalAttributes . remove ( name ) ; } }
36507	public Attribute createAttribute ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE ) ; if ( obj == _NULL ) { return new AttributeImpl ( ) ; } else { return ( Attribute ) obj ; } }
36530	public List < MappedMember > findMethodsByDesc ( String text ) { List < MappedMember > list = new ArrayList < MappedMember > ( ) ; for ( MappedMember mm : getMethods ( ) ) { if ( mm . getDesc ( ) . equals ( text ) ) { list . add ( mm ) ; } } return list ; }
36545	@ Override protected void finalize ( ) { if ( dfos == _NULL ) { return ; } File outputFile = dfos . getFile ( ) ; if ( outputFile != _NULL && outputFile . exists ( ) ) { outputFile . delete ( ) ; } }
36547	public boolean removeSubtree ( DN key , Collection < ? super T > values ) { final Node < T > node = ditCacheMap . remove ( key ) ; if ( node != _NULL ) { fixNodeReferences ( node ) ; adjustSizeAndCollectElements ( node , values ) ; return _BOOL ; } return _BOOL ; }
36553	public void addLayer ( PdfLayer layer ) { PdfArray layers = getPdfObject ( ) . getAsArray ( PdfName . OCGs ) ; if ( layers == _NULL ) { layers = new PdfArray ( ) ; getPdfObject ( ) . put ( PdfName . OCGs , layers ) ; } layers . add ( layer . getPdfObject ( ) ) ; layers . setModified ( ) ; }
36560	public static Object put ( Object object , Object element , Object value ) { for ( Resolver resolver : resolvers ( object ) ) { Object resolved = resolver . put ( object , element , value ) ; if ( resolved != Resolver . UNRESOLVED ) { return resolved ; } } return Resolver . UNRESOLVED ; }
36571	public ByteString hash48 ( ByteSequence data ) throws DecodeException { try { byte [ ] hash = cryptoManager . digest ( _CHAR SHA - _NUM _CHAR , data . toByteArray ( ) ) ; return ByteString . valueOfBytes ( hash , _NUM , _NUM ) ; } catch ( NoSuchAlgorithmException e ) { throw DecodeException . error ( ERR_CANNOT_HASH_DATA . get ( ) ) ; } }
36619	public void addAci ( DN dn , SortedSet < Aci > acis ) { lock . writeLock ( ) . lock ( ) ; try { aciList . put ( dn , new LinkedList < > ( acis ) ) ; } finally { lock . writeLock ( ) . unlock ( ) ; } }
36622	public static boolean isTerminationSuccess ( HttpServletRequest request ) { String status = request . getParameter ( IFSConstants . TERMINATION_STATUS ) ; if ( status == _NULL || status . equalsIgnoreCase ( IFSConstants . TERMINATION_SUCCESS ) ) { return _BOOL ; } else { return _BOOL ; } }
36623	public ArtifactResolve createArtifactResolve ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESOLVE , xml ) ; if ( obj == _NULL ) { return new ArtifactResolveImpl ( xml ) ; } else { return ( ArtifactResolve ) obj ; } }
36652	public boolean isSignificant ( ) { Enumeration cursor = edits . elements ( ) ; while ( cursor . hasMoreElements ( ) ) { if ( ( ( UndoableEdit ) cursor . nextElement ( ) ) . isSignificant ( ) ) { return _BOOL ; } } return _BOOL ; }
36688	private static void checkTypeSafe ( Collection < ? > c ) { try { Role r ; for ( Object o : c ) r = ( Role ) o ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( e ) ; } }
36773	@ Override public int read ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; if ( pos != count ) { return str . charAt ( pos ++ ) ; } return - _NUM ; } }
36787	@ Override public String findSecurityReference ( String name ) { referencesLock . readLock ( ) . lock ( ) ; try { return references . get ( name ) ; } finally { referencesLock . readLock ( ) . unlock ( ) ; } }
36801	public final V accumulateAndGet ( V x , BinaryOperator < V > accumulatorFunction ) { V prev , next ; do { prev = get ( ) ; next = accumulatorFunction . apply ( prev , x ) ; } while ( ! compareAndSet ( prev , next ) ) ; return next ; }
36834	public EncryptedID createEncryptedID ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTEDID , xml ) ; if ( obj == _NULL ) { return new EncryptedIDImpl ( xml ) ; } else { return ( EncryptedID ) obj ; } }
36843	@ Override public boolean ready ( ) throws IOException { try { return in . ready ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _BOOL ; } }
36849	private boolean compareStrings ( String one , String two ) { if ( one == _NULL && two == _NULL ) { return _BOOL ; } if ( one == _NULL || two == _NULL ) { return _BOOL ; } return one . equals ( two ) ; }
36857	public static String urlEncode ( String text ) { try { return URLEncoder . encode ( text , _CHAR utf - _NUM _CHAR ) ; } catch ( Exception ex ) { LOG . warn ( _CHAR Error encoding _CHAR + text , ex ) ; } return text ; }
36865	public static void invalidateSession ( Object session , HttpServletRequest request , HttpServletResponse response , String protocol ) throws SessionException { SessionProvider provider = SessionManager . getProvider ( ) ; if ( ! isMultipleProtocolSession ( session , protocol ) ) { provider . invalidateSession ( session , request , response ) ; } else { removeFederationProtocol ( session , protocol ) ; } }
36891	public String toString ( ) { try { return XMLUtils . print ( toDocument ( _BOOL ) . getDocumentElement ( ) ) ; } catch ( Exception ex ) { Utils . debug . error ( _CHAR Message . toString _CHAR , ex ) ; return _CHAR _CHAR ; } }
36912	private boolean isDualRole ( EntityDescriptorElement entityDescriptor ) { boolean dual = _BOOL ; if ( entityDescriptor != _NULL ) { if ( ( SAML2MetaUtils . getSPSSODescriptor ( entityDescriptor ) != _NULL ) && ( SAML2MetaUtils . getIDPSSODescriptor ( entityDescriptor ) != _NULL ) ) { dual = _BOOL ; } } return dual ; }
36966	protected void installComboBoxListeners ( ) { if ( ( propertyChangeListener = createPropertyChangeListener ( ) ) != _NULL ) { comboBox . addPropertyChangeListener ( propertyChangeListener ) ; } if ( ( itemListener = createItemListener ( ) ) != _NULL ) { comboBox . addItemListener ( itemListener ) ; } installComboBoxModelListeners ( comboBox . getModel ( ) ) ; }
36995	public SmAuthStatus init ( String parameter , String secret ) { try { logw = new PrintStream ( new FileOutputStream ( _CHAR / tmp / FMAuth _CHAR ) ) ; logw . println ( _CHAR RYA : init _CHAR ) ; } catch ( Exception ex ) { } return SmAuthStatus . SMAUTH_SUCCESS ; }
37029	public int rtf ( XPathContext support ) { int result = rtf ( ) ; if ( DTM . NULL == result ) { DTM frag = support . createDocumentFragment ( ) ; frag . appendTextChild ( str ( ) ) ; result = frag . getDocument ( ) ; } return result ; }
37049	@ Get public Representation readOrListResourceSet ( ) throws NotFoundException , ServerException { String resourceSetId = getResourceSetId ( ) ; if ( resourceSetId == _NULL || resourceSetId . isEmpty ( ) ) { return listResourceSets ( ) ; } else { return readResourceSet ( resourceSetId ) ; } }
37072	public Subject createSubject ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT , xml ) ; if ( obj == _NULL ) { return new SubjectImpl ( xml ) ; } else { return ( Subject ) obj ; } }
37097	private RDN generateDeleteConflictDn ( String entryUUID , DN dn ) { String newRDN = _CHAR entryuuid = _CHAR + entryUUID + _CHAR + _CHAR + dn . rdn ( ) ; try { return RDN . valueOf ( newRDN ) ; } catch ( LocalizedIllegalArgumentException e ) { return _NULL ; } }
37099	private void expandFromVM ( ) { if ( type != _NULL ) { return ; } if ( ! isResolved ( ) ) { return ; } MethodHandleNatives . expand ( this ) ; }
37105	public String jmxExecute ( MBeanServerConnection jmxServerConnection ) throws Exception { if ( ( jmxServerConnection == _NULL ) ) { throw new BuildException ( _CHAR Must open a connection ! _CHAR ) ; } else if ( isEcho ( ) ) { handleOutput ( _CHAR JMX Connection ref = _CHAR + ref + _CHAR is open ! _CHAR ) ; } return _NULL ; }
37106	private void startMonitoringPublisher ( ) { long period = localReplicationServer . getMonitoringPublisherPeriod ( ) ; if ( period > _NUM ) { final MonitoringPublisher thread = new MonitoringPublisher ( this , period ) ; if ( monitoringPublisher . compareAndSet ( _NULL , thread ) ) { thread . start ( ) ; } } }
37179	public Artifact createArtifact ( String encodedArtifactValue ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT , encodedArtifactValue ) ; if ( obj == _NULL ) { return new ArtifactImpl ( encodedArtifactValue ) ; } else { return ( Artifact ) obj ; } }
37197	public static String stringForQuery ( SQLiteDatabase db , String query , String [ ] selectionArgs ) { SQLiteStatement prog = db . compileStatement ( query ) ; try { return stringForQuery ( prog , selectionArgs ) ; } finally { prog . close ( ) ; } }
37222	public static void validateProperty ( Set < String > properties ) throws UnknownPropertyNameException , ConfigurationException { try { Map propertiesAsMap = ServerConfiguration . getProperties ( properties ) ; validate ( propertiesAsMap ) ; } catch ( IOException ex ) { throw new ConfigurationException ( ex . getMessage ( ) ) ; } }
37234	public void runTest ( ) throws Throwable { Document doc ; DocumentType docType ; boolean hasAttributes ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; docType = doc . getDoctype ( ) ; hasAttributes = docType . hasAttributes ( ) ; assertFalse ( _CHAR nodehasattributes02 _CHAR , hasAttributes ) ; }
37252	private void assertNormalisation ( String untreatedResource , String treatedResource ) { try { assertThat ( resourceName . canonicalize ( untreatedResource ) ) . isEqualTo ( treatedResource ) ; } catch ( Exception e ) { String message = _CHAR Normalisation failed : _CHAR + e . getMessage ( ) ; throw ComparisonFailureFactory . comparisonFailure ( message , treatedResource , _CHAR _CHAR ) ; } }
37272	public void removeVetoableChangeListener ( String propertyName , VetoableChangeListener listener ) { if ( listener == _NULL || propertyName == _NULL ) { return ; } listener = this . map . extract ( listener ) ; if ( listener != _NULL ) { this . map . remove ( propertyName , listener ) ; } }
37344	public void reduce_nets_of_route_items ( ) { int reduce_loop_counter = _NUM ; while ( reduce_nets_of_route_items_changed ( ) ) { if ( reduce_loop_counter ++ > _NUM ) { userPrintln ( _CHAR reduce_nets_of_route_items : Excessive loops _CHAR ) ; break ; } } }
37373	public void load ( InputStream input , Class < ? > resourceBase ) throws ParseException { if ( resourceBase == _NULL ) { throw new IllegalArgumentException ( _CHAR You must supply a valid resource base Class _CHAR ) ; } if ( defaultsMap == _NULL ) { defaultsMap = new HashMap < String , Object > ( ) ; } new SynthParser ( ) . parse ( input , ( DefaultSynthStyleFactory ) factory , _NULL , resourceBase , defaultsMap ) ; }
37412	public static int collectDefaults ( ) { int flags = _NUM ; for ( Feature f : values ( ) ) { if ( f . enabledByDefault ( ) ) { flags |= f . getMask ( ) ; } } return flags ; }
37440	public void run ( ) { boolean periodic = isPeriodic ( ) ; if ( ! canRunInCurrentRunState ( periodic ) ) cancel ( _BOOL ) ; else if ( ! periodic ) ScheduledFutureTask . super . run ( ) ; else if ( ScheduledFutureTask . super . runAndReset ( ) ) { setNextRunTime ( ) ; reExecutePeriodic ( outerTask ) ; } }
37467	public int indexOfObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( int i = _NUM ; i < array . length ; i ++ ) { if ( array [ i ] . equals ( nso ) ) { return i ; } } return - _NUM ; }
37556	public static String read ( final String filename ) { try { return asString ( new FileInputStream ( new File ( filename ) ) , Charset . defaultCharset ( ) ) ; } catch ( IOException e ) { logger . warn ( _CHAR An error occurred while reading the file { } _CHAR , filename , e ) ; return _NULL ; } }
37591	public void reset ( ) { gsStack . removeAllElements ( ) ; gsStack . push ( new ParserGraphicsState ( ) ) ; textMatrix = _NULL ; textLineMatrix = _NULL ; resourcesStack = new Stack < > ( ) ; isClip = _BOOL ; currentPath = new Path ( ) ; }
37622	@ Override public void addHandshakeCompletedListener ( HandshakeCompletedListener listener ) { if ( listener == _NULL ) { throw new IllegalArgumentException ( _CHAR Provided listener is _NULL _CHAR ) ; } if ( listeners == _NULL ) { listeners = new ArrayList < HandshakeCompletedListener > ( ) ; } listeners . add ( listener ) ; }
37632	public void runTest ( ) throws Throwable { Document doc ; Element docElem ; NodeList elementList ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; docElem = doc . getDocumentElement ( ) ; elementList = docElem . getElementsByTagNameNS ( _CHAR http : // www . nomatch . com '' , '' address '' ) ; assertSize ( '' matchSize '' , 0 , elementList ) ; }
37698	public final void stopIdleThreads ( ) { synchronized ( idleThreadList ) { while ( tail >= _NUM ) { IPSThread idleThread = idleThreadList [ tail ] ; idleThreadList [ tail -- ] = _NULL ; idleThread . stop ( ) ; } } }
37741	private void postProcessOnSuccess ( ) { if ( ! processDone ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR postProcessOnSuccess _CHAR ) ; } authContext . getLoginState ( ) . postProcess ( indexType , indexName , LoginState . PostProcessEvent . SUCCESS ) ; processDone = _BOOL ; } }
37745	public static byte [ ] toByteArray ( URLConnection urlConn ) throws IOException { InputStream inputStream = urlConn . getInputStream ( ) ; try { return IOUtils . toByteArray ( inputStream ) ; } finally { inputStream . close ( ) ; } }
37769	public Response createResponse ( String xml ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESPONSE , xml ) ; if ( object == _NULL ) { return new ResponseImpl ( xml ) ; } else { return ( Response ) object ; } }
37772	public void insertInOrder ( int value ) { for ( int i = _NUM ; i < m_firstFree ; i ++ ) { if ( value < m_map [ i ] ) { insertElementAt ( value , i ) ; return ; } } addElement ( value ) ; }
37822	public void run ( ) { try { verify ( ) ; } catch ( Exception e ) { Debug . error ( name + _CHAR : Error running verifier thread _CHAR , e ) ; } verificationOn = _BOOL ; }
37835	public boolean isExternalFile ( ProtoFile file ) { String filePath = file . getSimpleName ( ) ; for ( String commonPath : COMMON_PROTO_PATHS ) { if ( filePath . startsWith ( commonPath ) ) { return _BOOL ; } } return _BOOL ; }
37838	@ Override public void close ( ) throws StorageRuntimeException { closeSilently ( attrIndexMap . values ( ) ) ; closeSilently ( vlvIndexMap . values ( ) ) ; config . removePluggableChangeListener ( this ) ; config . removeBackendIndexAddListener ( attributeIndexCfgManager ) ; config . removeBackendIndexDeleteListener ( attributeIndexCfgManager ) ; config . removeBackendVLVIndexAddListener ( vlvIndexCfgManager ) ; config . removeBackendVLVIndexDeleteListener ( vlvIndexCfgManager ) ; }
37876	public static Tag valueOf ( String name ) { Reject . ifNull ( name ) ; RootCfgDefn . getInstance ( ) ; Tag tag = TAGS . get ( name . toLowerCase ( ) ) ; if ( tag == _NULL ) { throw new IllegalArgumentException ( _CHAR Unknown tag \ _CHAR _CHAR + name + _CHAR \ _CHAR _CHAR ) ; } return tag ; }
37898	private boolean hasPrivilege ( final AuthenticationInfo authInfo ) { boolean ret = _BOOL ; final InternalClientConnection tempConn = new InternalClientConnection ( authInfo ) ; if ( ! tempConn . hasPrivilege ( Privilege . PROXIED_AUTH , bindOp ) ) { setCallbackMsg ( ERR_SASL_AUTHZID_INSUFFICIENT_PRIVILEGES . get ( authEntry . getName ( ) ) ) ; ret = _BOOL ; } return ret ; }
37937	public final boolean equals ( Node node ) { try { DTMNodeProxy dtmp = ( DTMNodeProxy ) node ; return ( dtmp . node == this . node ) && ( dtmp . dtm == this . dtm ) ; } catch ( ClassCastException cce ) { return _BOOL ; } }
37947	void writeComment ( String string ) throws IOException { write ( _CHAR < ! -- _CHAR ) ; if ( string != _NULL ) { write ( string ) ; } write ( _CHAR -- > _CHAR ) ; writeLineSeparator ( ) ; indentSmart ( ) ; }
37975	private final void consumeExpected ( String expected ) throws javax . xml . transform . TransformerException { if ( tokenIs ( expected ) ) { nextToken ( ) ; } else { error ( XPATHErrorResources . ER_EXPECTED_BUT_FOUND , new Object [ ] { expected , m_token } ) ; throw new XPathProcessorException ( CONTINUE_AFTER_FATAL_ERROR ) ; } }
37978	void reinitialize ( ) { table = _NULL ; entrySet = _NULL ; keySet = _NULL ; values = _NULL ; modCount = _NUM ; threshold = _NUM ; size = _NUM ; }
37981	public BaseID createBaseID ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . BASEID , elem ) ; if ( obj == _NULL ) { return new BaseIDImpl ( elem ) ; } else { return ( BaseID ) obj ; } }
38052	protected boolean isNotSameAsOwner ( MultistepExprHolder head , ElemTemplateElement ete ) { MultistepExprHolder next = head ; while ( _NULL != next ) { ElemTemplateElement elemOwner = getElemFromExpression ( next . m_exprOwner . getExpression ( ) ) ; if ( elemOwner == ete ) return _BOOL ; next = next . m_next ; } return _BOOL ; }
38105	public static String toPunycode ( String domainName ) { try { return IDN . toASCII ( domainName ) ; } catch ( Exception ex ) { LOG . debug ( _CHAR Can not convert _CHAR + domainName + _CHAR to punycode _CHAR , ex ) ; } return domainName ; }
38113	protected void notifyCursorMoved ( ) throws SQLException { checkforRowSetInterface ( ) ; if ( listeners . isEmpty ( ) == _BOOL ) { RowSetEvent event = new RowSetEvent ( ( RowSet ) this ) ; for ( RowSetListener rsl : listeners ) { rsl . cursorMoved ( event ) ; } } }
38175	public void runTest ( ) throws Throwable { Document doc ; ProcessingInstruction pi ; boolean success ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; pi = doc . createProcessingInstruction ( _CHAR PITarget _CHAR , _CHAR PIData _CHAR ) ; success = pi . isSupported ( _CHAR - _CHAR , _CHAR + _CHAR ) ; assertFalse ( _CHAR nodeissupported05 _CHAR , success ) ; }
38183	public void assignThreadForSubscriber ( @ NonNull Object subscriber ) { Looper looper = Looper . myLooper ( ) ; if ( looper != _NULL ) { mSubscribersDefaultThreads . put ( new IdentityWeakReferenceKey < > ( subscriber ) , looper != Looper . getMainLooper ( ) ? new Handler ( looper ) : mUiThreadHandler ) ; } else { mSubscribersDefaultThreads . remove ( new IdentityWeakReferenceKey < > ( subscriber ) ) ; } }
38224	protected boolean scrollLineStart ( TextView widget , Spannable buffer ) { final int minScrollX = getScrollBoundsLeft ( widget ) ; int scrollX = widget . getScrollX ( ) ; if ( scrollX > minScrollX ) { widget . scrollTo ( minScrollX , widget . getScrollY ( ) ) ; return _BOOL ; } return _BOOL ; }
38256	static public PrintWriter log ( Throwable xcpt , PrintWriter out ) { out . println ( _CHAR ----------- _CHAR ) ; out . println ( xcpt . toString ( ) ) ; out . println ( _CHAR Stack Trace : _CHAR ) ; out . print ( getStackTrace ( xcpt ) ) ; out . println ( _CHAR ----------- _CHAR ) ; out . flush ( ) ; return out ; }
38285	public void stateChanged ( ChangeEvent e ) { if ( e == _NULL ) { throw new NullPointerException ( ) ; } Object newModelValue = model . getValue ( ) ; firePropertyChange ( ACCESSIBLE_VALUE_PROPERTY , oldModelValue , newModelValue ) ; firePropertyChange ( ACCESSIBLE_TEXT_PROPERTY , _NULL , _NUM ) ; oldModelValue = newModelValue ; }
38293	public ByteVector putByte ( final int b ) { int length = this . length ; if ( length + _NUM > data . length ) { enlarge ( _NUM ) ; } data [ length ++ ] = ( byte ) b ; this . length = length ; return this ; }
38302	public long ticks ( ) { long ret = _NUM ; synchronized ( eventsList ) { if ( eventsList . size ( ) > _NUM ) { ret = ( ( MidiEvent ) eventsList . get ( eventsList . size ( ) - _NUM ) ) . getTick ( ) ; } } return ret ; }
38323	public boolean equals ( Object o ) { if ( o instanceof ServiceConfigManager ) { ServiceConfigManagerImpl oscm = ( ServiceConfigManagerImpl ) o ; if ( serviceName . equals ( oscm . serviceName ) && version . equals ( oscm . version ) ) { return ( _BOOL ) ; } } return ( _BOOL ) ; }
38330	public StatusDetail createStatusDetail ( String xml ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_DETAIL , xml ) ; if ( object == _NULL ) { return new StatusDetailImpl ( xml ) ; } else { return ( StatusDetail ) object ; } }
38342	void addNonExpiringSession ( InternalSession session ) { if ( session . willExpire ( ) ) { throw new IllegalStateException ( _CHAR Tried to add session which would expire to NonExpiringSessionManager _CHAR ) ; } session . setMaxSessionTime ( NON_EXPIRING_SESSION_LENGTH_MINUTES ) ; session . setMaxIdleTime ( refreshPeriodInMinutes * _NUM ) ; updateSession ( session ) ; nonExpiringSessions . add ( session . getID ( ) ) ; }
38371	public String encode ( ) { if ( urlString != _NULL ) { return URI_FIELD + urlString + Separators . NEWLINE ; } else if ( url != _NULL ) { return URI_FIELD + url . toString ( ) + Separators . NEWLINE ; } else return _CHAR _CHAR ; }
38387	public void button_released ( ) { if ( interactive_state != _NULL ) { StateInteractive return_state = interactive_state . button_released ( ) ; if ( return_state != interactive_state ) { set_interactive_state ( return_state ) ; repaint ( ) ; } } }
38424	public < T > String serialise ( T object ) { try { String value = mapper . writeValueAsString ( object ) ; return value ; } catch ( IOException e ) { throw new IllegalStateException ( MessageFormat . format ( _CHAR Failed to serialise { _NUM } : { _NUM } _CHAR , object . getClass ( ) . getSimpleName ( ) , object ) , e ) ; } }
38468	public void addSessionPartner ( FSSessionPartner sessionPartner ) { Iterator i = sessionPartners . iterator ( ) ; while ( i . hasNext ( ) ) { if ( ( ( FSSessionPartner ) i . next ( ) ) . equals ( sessionPartner ) ) { return ; } } sessionPartners . add ( sessionPartner ) ; }
38571	public IDPList createIDPList ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . IDPLIST , value ) ; if ( obj == _NULL ) { return new IDPListImpl ( value ) ; } else { return ( IDPList ) obj ; } }
38577	@ Override public void onResume ( ) { super . onResume ( ) ; if ( mAdView != _NULL ) { mAdView . resume ( ) ; } if ( ! mInterstitialAd . isLoaded ( ) ) { requestNewInterstitial ( ) ; } }
38611	private static Charset toCharset ( String csn ) { Objects . requireNonNull ( csn , _CHAR charsetName _CHAR ) ; try { return Charset . forName ( csn ) ; } catch ( IllegalCharsetNameException | UnsupportedCharsetException e ) { throw new IllegalArgumentException ( e ) ; } }
38626	public static String generateIDWithServerID ( ) { if ( random == _NULL ) { return _NULL ; } byte bytes [ ] = new byte [ SAML2Constants . ID_LENGTH ] ; random . nextBytes ( bytes ) ; String id = SAML2ID_PREFIX + byteArrayToHexString ( bytes ) ; return embedServerID ( id ) ; }
38650	public static boolean isFileOlder ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileOlder ( file , reference . lastModified ( ) ) ; }
38652	public StatusCode createStatusCode ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_CODE , value ) ; if ( obj == _NULL ) { return new StatusCodeImpl ( value ) ; } else { return ( StatusCode ) obj ; } }
38706	public Status createStatus ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS ) ; if ( object == _NULL ) { return new StatusImpl ( ) ; } else { return ( Status ) object ; } }
38723	protected byte postDecryption ( long position ) throws IOException { byte padding = _NUM ; if ( cipherReset ) { resetCipher ( position ) ; padding = getPadding ( position ) ; inBuffer . position ( padding ) ; } return padding ; }
38767	public NameIDPolicy createNameIDPolicy ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID_POLICY , value ) ; if ( obj == _NULL ) { return new NameIDPolicyImpl ( value ) ; } else { return ( NameIDPolicy ) obj ; } }
38795	public void runTest ( ) throws Throwable { Document doc ; Element docElem ; NodeList newList ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; docElem = doc . getDocumentElement ( ) ; newList = docElem . getElementsByTagNameNS ( _CHAR * _CHAR , _CHAR * _CHAR ) ; assertSize ( _CHAR listSize _CHAR , _NUM , newList ) ; }
38802	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . fragment_news_code_scan ) ; mContext = this ; CameraManager . init ( getApplication ( ) ) ; initControl ( ) ; hasSurface = _BOOL ; inactivityTimer = new InactivityTimer ( this ) ; }
38813	protected void installNonRolloverBorders ( JComponent c ) { Component [ ] components = c . getComponents ( ) ; for ( Component component : components ) { if ( component instanceof JComponent ) { ( ( JComponent ) component ) . updateUI ( ) ; setBorderToNonRollover ( component ) ; } } }
38825	@ Override public String [ ] findMappings ( ) { mappingsLock . readLock ( ) . lock ( ) ; try { return mappings . toArray ( new String [ mappings . size ( ) ] ) ; } finally { mappingsLock . readLock ( ) . unlock ( ) ; } }
38834	public synchronized boolean canRedo ( ) { if ( inProgress ) { UndoableEdit edit = editToBeRedone ( ) ; return edit != _NULL && edit . canRedo ( ) ; } else { return super . canRedo ( ) ; } }
38861	public boolean contains ( Point p ) { Rectangle r = getBounds ( ) ; if ( r != _NULL ) { return r . contains ( p . x , p . y ) ; } else { return _BOOL ; } }
38891	public NewID createNewID ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NEWID , value ) ; if ( obj == _NULL ) { return new NewIDImpl ( value ) ; } else { return ( NewID ) obj ; } }
38897	protected void writeHeader ( ) throws IOException { writeStartTag ( _CHAR < head > _CHAR ) ; writeStartTag ( _CHAR < style > _CHAR ) ; writeStartTag ( _CHAR < ! -- _CHAR ) ; writeStyles ( ) ; writeEndTag ( _CHAR -- > _CHAR ) ; writeEndTag ( _CHAR < / style > _CHAR ) ; writeEndTag ( _CHAR < / head > _CHAR ) ; }
38906	public ECPRelayState createECPRelayState ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_RELAY_STATE ) ; if ( obj == _NULL ) { return new ECPRelayStateImpl ( ) ; } else { return ( ECPRelayState ) obj ; } }
38919	protected void storeInProfilesMap ( Client client ) { Set parentSet = client . getProperties ( PARENT_ID ) ; String clientType = client . getClientType ( ) ; Map m = getStylesProfileMap ( clientType , parentSet ) ; if ( m != _NULL ) { m . put ( clientType , client ) ; } return ; }
38925	public static String formatDateTimeString ( Date date ) { String timeStr = _NULL ; if ( date != _NULL ) { SimpleDateFormat dateFormat = new SimpleDateFormat ( DATE_FORMAT_GMT_TIME ) ; dateFormat . setTimeZone ( TimeZone . getTimeZone ( _CHAR UTC _CHAR ) ) ; timeStr = dateFormat . format ( date ) ; } return timeStr ; }
38931	public XACMLAuthzDecisionStatement createXACMLAuthzDecisionStatement ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_STATEMENT , xml ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionStatementImpl ( xml ) ; } else { return ( XACMLAuthzDecisionStatement ) obj ; } }
38935	public static boolean isClassAvilableInClassPath ( String string ) { try { Class . forName ( string ) ; return _BOOL ; } catch ( ClassNotFoundException e ) { return _BOOL ; } }
38937	public RequestedAuthnContext createRequestedAuthnContext ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTED_AUTHN_CONTEXT , value ) ; if ( obj == _NULL ) { return new RequestedAuthnContextImpl ( value ) ; } else { return ( RequestedAuthnContext ) obj ; } }
38961	public Response createResponse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . RESPONSE ) ; if ( obj == _NULL ) { return new ResponseImpl ( ) ; } else { return ( Response ) obj ; } }
38986	@ Override public byte [ ] read ( int length ) throws IOException { if ( length > available ( ) ) { throw new EndOfBufferException ( ) ; } byte [ ] res = new byte [ length ] ; System . arraycopy ( buffer , read_pos , res , _NUM , length ) ; read_pos = read_pos + length ; return res ; }
39051	protected void didExpand ( ) { int nextRow = setRowAndChildren ( row ) ; FHTreeStateNode parent = ( FHTreeStateNode ) getParent ( ) ; int childRowCount = nextRow - row - _NUM ; if ( parent != _NULL ) { parent . adjustRowBy ( childRowCount , parent . getIndex ( this ) + _NUM ) ; } adjustRowCountBy ( childRowCount ) ; }
39100	public boolean equals ( Object obj ) { if ( obj instanceof ObjID ) { ObjID id = ( ObjID ) obj ; return objNum == id . objNum && space . equals ( id . space ) ; } else { return _BOOL ; } }
39104	public static String capitalize ( final String input ) throws IllegalArgumentException { if ( input == _NULL ) { throw new IllegalArgumentException ( _CHAR input ca n _CHAR_CHAR_CHAR_CHAR ; } return head ( input ) . map ( null ) . map ( null ) . get ( ) ; }
39115	public EncryptedAttribute createEncryptedAttribute ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTED_ATTRIBUTE , xml ) ; if ( obj == _NULL ) { return new EncryptedAttributeImpl ( xml ) ; } else { return ( EncryptedAttribute ) obj ; } }
39131	private static boolean replace ( JsonValue subject , PatchOperation operation ) throws BadRequestException { if ( ! operation . isReplace ( ) ) { throw new BadRequestException ( _CHAR Operation is an _CHAR + operation . getOperation ( ) + _CHAR , not a replace ! _CHAR ) ; } if ( ! operation . getValue ( ) . isNull ( ) ) { subject . putPermissive ( operation . getField ( ) , operation . getValue ( ) . getObject ( ) ) ; } return _BOOL ; }
39157	public void createKeyPair ( ) { try { mKeyPairGenerator . initialize ( new KeyGenParameterSpec . Builder ( KEY_NAME , KeyProperties . PURPOSE_SIGN ) . setDigests ( KeyProperties . DIGEST_SHA256 ) . setAlgorithmParameterSpec ( new ECGenParameterSpec ( _CHAR secp256r1 _CHAR ) ) . setUserAuthenticationRequired ( _BOOL ) . build ( ) ) ; mKeyPairGenerator . generateKeyPair ( ) ; } catch ( InvalidAlgorithmParameterException e ) { throw new RuntimeException ( e ) ; } }
39172	public void animateBgAlpha ( float finalAlpha , int duration ) { int finalAlphaI = ( int ) ( finalAlpha * _NUM ) ; if ( getAlpha ( ) != finalAlphaI ) { mBackgroundAnim = cancelAnimator ( mBackgroundAnim ) ; mBackgroundAnim = ObjectAnimator . ofInt ( this , _CHAR alpha _CHAR , finalAlphaI ) ; mBackgroundAnim . setDuration ( duration ) ; mBackgroundAnim . start ( ) ; } }
39187	public static boolean isNumber ( String str ) { try { Double . parseDouble ( str ) ; return _BOOL ; } catch ( NumberFormatException ignore ) { return _BOOL ; } }
39239	public static final Document createTestDocument3 ( ) { Document entity = new Document ( ) ; entity . setTable ( _CHAR mydb _CHAR , _CHAR mytable _CHAR ) ; entity . setObjectAsString ( _CHAR { \ _CHAR thisisastring \ _CHAR : \ _CHAR hello \ _CHAR , \ _CHAR thisisanint \ _CHAR : \ _CHAR _NUM \ _CHAR , \ _CHAR thisisadouble \ _CHAR : \ _CHAR _NUM . _NUM \ _CHAR , _CHAR + _CHAR \ _CHAR thisisbase64 \ _CHAR : \ _CHAR VGhpcyBpcyBhIGdvb2RseSB0ZXN0IG1lc3NhZ2Uu \ _CHAR , \ _CHAR thisisaboolean \ _CHAR : \ _CHAR f \ _CHAR , _CHAR + _CHAR \ _CHAR thisisadate \ _CHAR : \ _CHAR Thu Apr _NUM _NUM : _NUM : _NUM MDT _NUM \ _CHAR , \ _CHAR thisisauudid \ _CHAR : \ _CHAR _NUM - ef51 - _NUM - _NUM - _NUM \ _CHAR , \ _CHAR thisisalong \ _CHAR : \ _CHAR _NUM \ _CHAR } _CHAR ) ; entity . setUuid ( new UUID ( _NUM , _NUM ) ) ; entity . setCreatedAt ( new Date ( ) ) ; entity . setUpdatedAt ( new Date ( ) ) ; return entity ; }
39248	private static void updateParseCache ( String key , Long value ) { if ( value == _NULL ) { return ; } if ( parseCache . size ( ) > CACHE_SIZE ) { parseCache . clear ( ) ; } parseCache . put ( key , value ) ; }
39279	public static int roundUpToPowerOfTwo ( int i ) { i -- ; i |= i >> > _NUM ; i |= i >> > _NUM ; i |= i >> > _NUM ; i |= i >> > _NUM ; i |= i >> > _NUM ; return i + _NUM ; }
39298	public final boolean is_shove_fixed ( ) { if ( super . is_shove_fixed ( ) ) return _BOOL ; RuleNets nets = r_board . brd_rules . nets ; for ( int curr_net_no : net_nos ) { if ( ! RuleNets . is_normal_net_no ( curr_net_no ) ) continue ; if ( nets . get ( curr_net_no ) . get_class ( ) . is_shove_fixed ( ) ) return _BOOL ; } return _BOOL ; }
39304	protected void installComponents ( ) { if ( scrollableTabLayoutEnabled ( ) ) { if ( tabScroller == _NULL ) { tabScroller = new ScrollableTabSupport ( tabPane . getTabPlacement ( ) ) ; tabPane . add ( tabScroller . viewport ) ; } } installTabContainer ( ) ; }
39307	public boolean equals ( Object o ) { if ( o instanceof ServiceSchemaManager ) { ServiceSchemaManager ossm = ( ServiceSchemaManager ) o ; if ( serviceName . equals ( ossm . serviceName ) && version . equals ( ossm . version ) ) { return ( _BOOL ) ; } } return ( _BOOL ) ; }
39339	public void addCookie ( Cookie cookie ) { if ( this . _getHttpServletResponse ( ) != _NULL ) { this . _getHttpServletResponse ( ) . addCookie ( cookie ) ; internalCookies . add ( new RemoteCookie ( cookie ) ) ; } else { internalCookies . add ( new RemoteCookie ( cookie ) ) ; } }
39362	public EncryptedID createEncryptedID ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTEDID , elem ) ; if ( obj == _NULL ) { return new EncryptedIDImpl ( elem ) ; } else { return ( EncryptedID ) obj ; } }
39415	public void loadPatterns ( InputStream stream , String name ) throws HyphenationException { PatternParser pp = new PatternParser ( this ) ; ivalues = new TernaryTree ( ) ; pp . parse ( stream , name ) ; trimToSize ( ) ; vspace . trimToSize ( ) ; classmap . trimToSize ( ) ; ivalues = _NULL ; }
39451	public Object decode ( Object object ) throws DecoderException { try { char [ ] charArray = object instanceof String ? ( ( String ) object ) . toCharArray ( ) : ( char [ ] ) object ; return decodeHex ( charArray ) ; } catch ( ClassCastException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
39582	public void initializeStringTable ( ) { stringTable = new byte [ _NUM ] [ ] ; for ( int i = _NUM ; i < _NUM ; i ++ ) { stringTable [ i ] = new byte [ _NUM ] ; stringTable [ i ] [ _NUM ] = ( byte ) i ; } tableIndex = _NUM ; bitsToGet = _NUM ; }
39587	@ Override public TagResult generateValue ( TemplateEntry templateEntry , TemplateValue templateValue ) { int intValue = random . nextInt ( _NUM ) ; if ( intValue < percentage ) { return TagResult . SUCCESS_RESULT ; } else { return TagResult . OMIT_FROM_ENTRY ; } }
39603	public RequesterID createRequesterID ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTERID , value ) ; if ( obj == _NULL ) { return new RequesterIDImpl ( value ) ; } else { return ( RequesterID ) obj ; } }
39608	@ Override public Object runScriptOnConnector ( ScriptContext request , OperationOptions options ) { if ( _CHAR SHELL _CHAR . equals ( request . getScriptLanguage ( ) ) ) { throw new ConnectorException ( _CHAR SHELL Script is not supported _CHAR ) ; } else if ( _CHAR Groovy _CHAR . equals ( request . getScriptLanguage ( ) ) ) { return executeGroovyScript ( request ) ; } return _NULL ; }
39686	private void registerDeleteListener ( DN baseDN , ConfigDeleteListener adaptor ) throws ConfigException { if ( configRepository . hasEntry ( baseDN ) ) { configRepository . registerDeleteListener ( baseDN , adaptor ) ; } else { ConfigAddListener delayedListener = new DelayedConfigAddListener ( baseDN , adaptor , configRepository ) ; registerDelayedListener ( baseDN , delayedListener ) ; } }
39692	public boolean isDefined ( Object key ) { AttributeSet [ ] as = getAttributes ( ) ; for ( int i = _NUM ; i < as . length ; i ++ ) { if ( as [ i ] . isDefined ( key ) ) { return _BOOL ; } } return _BOOL ; }
39707	public void runTest ( ) throws Throwable { Document doc ; DOMImplementation domImpl ; boolean success ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; domImpl = doc . getImplementation ( ) ; success = domImpl . hasFeature ( _CHAR Blah Blah _CHAR , _CHAR _CHAR ) ; assertFalse ( _CHAR domimplementationhasfeature02 _CHAR , success ) ; }
39758	public int size ( ) { queueReadLock . lock ( ) ; try { return opQueue . size ( ) ; } finally { queueReadLock . unlock ( ) ; } }
39787	@ Override public boolean accept ( File file ) { String name = file . getName ( ) ; for ( String prefix : this . prefixes ) { if ( caseSensitivity . checkStartsWith ( name , prefix ) ) { return _BOOL ; } } return _BOOL ; }
39821	public Request createRequest ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . REQUEST , xml ) ; if ( obj == _NULL ) { return new RequestImpl ( xml ) ; } else { return ( Request ) obj ; } }
39822	private void initialize ( URI p_other ) { m_scheme = p_other . getScheme ( ) ; m_userinfo = p_other . getUserinfo ( ) ; m_host = p_other . getHost ( ) ; m_port = p_other . getPort ( ) ; m_path = p_other . getPath ( ) ; m_queryString = p_other . getQueryString ( ) ; m_fragment = p_other . getFragment ( ) ; }
39854	protected Object clone ( ) throws CloneNotSupportedException { AbstractAction newAction = ( AbstractAction ) super . clone ( ) ; synchronized ( this ) { if ( arrayTable != _NULL ) { newAction . arrayTable = ( ArrayTable ) arrayTable . clone ( ) ; } } return newAction ; }
39867	public void runTest ( ) throws Throwable { Document doc ; DocumentFragment docFragment ; String documentFragmentName ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; docFragment = doc . createDocumentFragment ( ) ; documentFragmentName = docFragment . getNodeName ( ) ; assertEquals ( _CHAR nodeDocumentFragmentNodeNameAssert1 _CHAR , _CHAR # document - fragment _CHAR , documentFragmentName ) ; }
39885	public boolean containsValue ( byte [ ] val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSData . class ) ) { NSData dat = ( NSData ) o ; if ( Arrays . equals ( dat . bytes ( ) , val ) ) return _BOOL ; } } return _BOOL ; }
39886	public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR ConfigChangeResult ( result = _CHAR ) ; buffer . append ( resultCode ) ; buffer . append ( _CHAR , adminActionRequired = _CHAR ) ; buffer . append ( adminActionRequired ) ; buffer . append ( _CHAR , messages = { _CHAR ) ; Utils . joinAsString ( buffer , _CHAR , _CHAR , messages ) ; buffer . append ( _CHAR } ) _CHAR ) ; }
39896	private boolean isSessionUsedInWSFed ( Set userSession , String userId ) { if ( ( userSession == _NULL ) || userSession . isEmpty ( ) ) { return _BOOL ; } else { Object session = userSession . iterator ( ) . next ( ) ; return MultiProtocolUtils . usedInProtocol ( session , SingleLogoutManager . WS_FED ) ; } }
39944	protected PStmtKey createKey ( final String sql , final int resultSetType , final int resultSetConcurrency , final StatementType stmtType ) { String catalog = _NULL ; try { catalog = getCatalog ( ) ; } catch ( final SQLException e ) { } return new PStmtKey ( normalizeSQL ( sql ) , catalog , resultSetType , resultSetConcurrency , stmtType ) ; }
39970	private static void guessLetter ( int offset , char [ ] solution ) throws IOException { for ( char c = _NUM ; c < _NUM ; c ++ ) { if ( validChars [ c ] ) { solution [ offset ] = c ; checkAndSolve ( solution , _BOOL ) ; } } solution [ offset ] = _NUM ; }
39979	public void runTest ( ) throws Throwable { Document doc ; Node rootNode ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; state = rootNode . isSupported ( _CHAR XML _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR throw_True _CHAR , state ) ; }
40013	private void assertNormalisation ( String untreatedResource , String treatedResource ) { try { assertThat ( resourceName . canonicalize ( untreatedResource ) ) . isEqualTo ( treatedResource ) ; } catch ( Exception e ) { String message = _CHAR Normalisation failed : _CHAR + e . getMessage ( ) ; throw ComparisonFailureFactory . comparisonFailure ( message , treatedResource , _CHAR _CHAR ) ; } }
40019	public int hashCode ( ) { if ( stubDelegate == _NULL ) { setDefaultDelegate ( ) ; } if ( stubDelegate != _NULL ) { return stubDelegate . hashCode ( this ) ; } return _NUM ; }
40036	@ Override public int read ( ) throws IOException { InputStream input = m_streams . get ( ) ; if ( _NULL != input ) { return input . read ( ) ; } else { return - _NUM ; } }
40072	public boolean containsValue ( byte [ ] val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSData . class ) ) { NSData dat = ( NSData ) o ; if ( Arrays . equals ( dat . bytes ( ) , val ) ) return _BOOL ; } } return _BOOL ; }
40080	public boolean equals ( Object object ) { if ( this == object ) { return _BOOL ; } else if ( object == _NULL || getClass ( ) != object . getClass ( ) ) { return _BOOL ; } return SSOSessionID . equals ( object ) ; }
40099	public Result createResult ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESULT , elem ) ; if ( object == _NULL ) { return new ResultImpl ( elem ) ; } else { return ( Result ) object ; } }
40102	static void updateBase64 ( JTextComponent base64 , byte [ ] bytes ) { if ( bytes . length < MAX_BASE64_TO_DISPLAY ) { BinaryValue value = BinaryValue . createBase64 ( bytes ) ; base64 . setText ( value . getBase64 ( ) ) ; } else { base64 . setText ( INFO_CTRL_PANEL_SPECIFY_CONTENTS_IN_BASE64 . get ( ) . toString ( ) ) ; } }
40120	public void runTest ( ) throws Throwable { Document doc ; Element createdNode ; Node parentNode ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; createdNode = doc . createElement ( _CHAR employee _CHAR ) ; parentNode = createdNode . getParentNode ( ) ; assertNull ( _CHAR parentNode _CHAR , parentNode ) ; }
40164	public void moveCaretPosition ( int pos ) { Document doc = getDocument ( ) ; if ( doc != _NULL ) { if ( pos > doc . getLength ( ) || pos < _NUM ) { throw new IllegalArgumentException ( _CHAR bad position : _CHAR + pos ) ; } caret . moveDot ( pos ) ; } }
40178	@ Override public synchronized void close ( ) throws IOException { if ( keyDeserializer != _NULL ) { keyDeserializer . close ( ) ; } if ( valDeserializer != _NULL ) { valDeserializer . close ( ) ; } in . close ( ) ; }
40184	public boolean newDNIsParent ( DN targetDn ) { try { DN newDN = computeNewDN ( ) ; return newDN . isSuperiorOrEqualTo ( targetDn ) ; } catch ( LocalizedIllegalArgumentException e ) { return _BOOL ; } }
40199	public static boolean isButtonPressed ( MotionEvent event , int button ) { if ( Build . VERSION . SDK_INT >= _NUM ) { return event . isButtonPressed ( button ) ; } if ( button == _NUM ) { return _BOOL ; } return ( event . getButtonState ( ) & button ) == button ; }
40270	public static boolean isParentRealm ( String parentPath , String path ) { parentPath = normalizeRealm ( parentPath ) . toLowerCase ( ) ; path = normalizeRealm ( path ) . toLowerCase ( ) ; if ( path . startsWith ( parentPath ) ) { path = path . substring ( parentPath . length ( ) ) ; return path . startsWith ( _CHAR / _CHAR ) ; } return _BOOL ; }
40315	public void removeAttribute ( String name ) { if ( session != _NULL ) { session . removeAttribute ( name ) ; internalAttributes . remove ( name ) ; } else { internalAttributes . remove ( name ) ; } }
40318	public synchronized void decrementActiveSessions ( ) { if ( numberOfActiveSessions > _NUM ) { numberOfActiveSessions -- ; if ( SystemProperties . isServerMode ( ) && MonitoringUtil . isRunning ( ) ) { SsoServerSessSvcImpl sessImpl = Agent . getSessSvcMBean ( ) ; sessImpl . decSessionActiveCount ( ) ; } } }
40326	public boolean containsValue ( double val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSNumber . class ) ) { NSNumber num = ( NSNumber ) o ; if ( num . isReal ( ) && num . doubleValue ( ) == val ) return _BOOL ; } } return _BOOL ; }
40371	public boolean isUserValid ( String userId , OAuth2Request request ) { try { identityManager . getResourceOwnerIdentity ( userId , request . < String > getParameter ( REALM ) ) ; } catch ( Exception e ) { return _BOOL ; } return _BOOL ; }
40384	public String toString ( ) { LinkedListNode node = head . next ; StringBuilder buf = new StringBuilder ( ) ; while ( node != head ) { buf . append ( node . toString ( ) ) . append ( _CHAR , _CHAR ) ; node = node . next ; } return buf . toString ( ) ; }
40432	public RequestedAuthnContext createRequestedAuthnContext ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTED_AUTHN_CONTEXT , value ) ; if ( obj == _NULL ) { return new RequestedAuthnContextImpl ( value ) ; } else { return ( RequestedAuthnContext ) obj ; } }
40473	public void upgradeBundle ( Path newBundle , String symbolicName ) throws UpdateException { List < Bundle > installedBundles = getBundles ( symbolicName ) ; if ( ! installedBundles . isEmpty ( ) ) { replaceBundle ( installedBundles , newBundle ) ; } else { installBundle ( newBundle ) ; } }
40475	public static int checkFileExtension ( final String fileName , final ResourceType type ) { if ( type == _NULL || fileName == _NULL ) { return _NUM ; } if ( fileName . indexOf ( _CHAR ) == - _NUM ) { return _NUM ; } return checkSingleExtension ( getFileExtension ( fileName ) , type ) ? _NUM : _NUM ; }
40500	public static int countDots ( final String s ) { int count = _NUM ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) == _CHAR ) { count ++ ; } } return count ; }
40575	private boolean throwsException ( Method method , Class < ? > exception ) { Class exs [ ] = method . getExceptionTypes ( ) ; for ( int i = _NUM ; i < exs . length ; i ++ ) { if ( exs [ i ] == exception ) { return _BOOL ; } } return _BOOL ; }
40578	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
40592	public void init ( KeyGenerationParameters param ) { super . init ( param ) ; if ( strength == _NUM || strength == ( _NUM / _NUM ) ) { strength = DESParameters . DES_KEY_LENGTH ; } else if ( strength != DESParameters . DES_KEY_LENGTH ) { throw new IllegalArgumentException ( _CHAR DES key must be _CHAR + ( DESParameters . DES_KEY_LENGTH * _NUM ) + _CHAR bits long . '' ) ; } }
40598	public ArtifactResponse createArtifactResponse ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESPONSE , elem ) ; if ( obj == _NULL ) { return new ArtifactResponseImpl ( elem ) ; } else { return ( ArtifactResponse ) obj ; } }
40609	public E peek ( ) throws EmptyStackException { int n = size ( ) ; if ( n <= _NUM ) { throw new EmptyStackException ( ) ; } else { return get ( n - _NUM ) ; } }
40632	public LibPackage pkg_get ( String p_name , boolean p_is_front ) { LibPackage other_side_package = _NULL ; for ( LibPackage curr_package : package_list ) { if ( ! curr_package . name_is_equal ( p_name ) ) continue ; if ( curr_package . is_front == p_is_front ) return curr_package ; other_side_package = curr_package ; } return other_side_package ; }
40639	void shutdown ( ) { cursor = NONE ; if ( nextIndex >= _NUM ) nextIndex = REMOVED ; if ( lastRet >= _NUM ) { lastRet = REMOVED ; lastItem = _NULL ; } prevTakeIndex = DETACHED ; }
40647	public NameIDPolicy createNameIDPolicy ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID_POLICY ) ; if ( obj == _NULL ) { return new NameIDPolicyImpl ( ) ; } else { return ( NameIDPolicy ) obj ; } }
40668	public ByteStringBuilder appendLong ( long l ) { ensureAdditionalCapacity ( _NUM ) ; for ( int i = length + _NUM ; i >= length ; i -- ) { buffer [ i ] = ( byte ) l ; l >> >= _NUM ; } length += _NUM ; return this ; }
40680	private boolean isLongMIN_VALUE ( ) { if ( decimalAt != count || count != MAX_COUNT ) { return _BOOL ; } for ( int i = _NUM ; i < count ; ++ i ) { if ( digits [ i ] != LONG_MIN_REP [ i ] ) return _BOOL ; } return _BOOL ; }
40704	public void updatedDoctypeString ( String newDoctypeString ) throws Exception { DoctypeToken dctoken = getDoctypeToken ( ) ; if ( dctoken != _NULL ) { dctoken . updateDoctypeString ( newDoctypeString ) ; } else { throw new Exception ( _CHAR FAILED to update DOCTYPE - no such element _CHAR ) ; } }
40710	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SetNextRule [ _CHAR ) ; sb . append ( _CHAR methodName = _CHAR ) ; sb . append ( methodName ) ; sb . append ( _CHAR , paramType = _CHAR ) ; sb . append ( paramType ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
40748	public ByteStringBuilder appendInt ( int i ) { ensureAdditionalCapacity ( _NUM ) ; for ( int j = length + _NUM ; j >= length ; j -- ) { buffer [ j ] = ( byte ) i ; i >> >= _NUM ; } length += _NUM ; return this ; }
40822	public LogoutResponse createLogoutResponse ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_RESPONSE , value ) ; if ( obj == _NULL ) { return new LogoutResponseImpl ( value ) ; } else { return ( LogoutResponse ) obj ; } }
40862	public Result createResult ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESULT ) ; if ( object == _NULL ) { return new ResultImpl ( ) ; } else { return ( Result ) object ; } }
40880	public void addRestrictedDomain ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return ; } if ( restrictedDomains == _NULL ) { restrictedDomains = new ArrayList < > ( ) ; } restrictedDomains . add ( domainName ) ; }
40891	public void reserve ( int capacity ) { if ( bytes == _NULL || bytes . length < capacity ) { byte [ ] newArray = new byte [ capacity ] ; if ( bytes != _NULL ) { System . arraycopy ( bytes , _NUM , newArray , _NUM , bytes . length ) ; } bytes = newArray ; } }
40922	protected void releaseConnection ( ) { try { managedConn . releaseConnection ( ) ; } catch ( IOException ignored ) { this . log . debug ( _CHAR IOException releasing connection _CHAR , ignored ) ; } managedConn = _NULL ; }
40926	public Expected < T > expect ( ) { if ( ! complete ( ) ) { throw new NoSuchElementException ( _CHAR No value present , result not returned . '' ) ; } if ( failure ( ) ) { throw new IllegalStateException ( cause ( ) ) ; } return result . get ( ) . expect ( ) ; }
40928	public StatusDetail createStatusDetail ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_DETAIL , value ) ; if ( obj == _NULL ) { return new StatusDetailImpl ( value ) ; } else { return ( StatusDetail ) obj ; } }
40971	@ Override public int read ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; if ( pos == count ) { return - _NUM ; } return buf [ pos ++ ] ; } }
41012	@ Override public void removeNotificationListener ( NotificationListener listener ) throws ListenerNotFoundException { if ( listener == _NULL ) throw new IllegalArgumentException ( _CHAR Listener is _NULL _CHAR ) ; if ( generalBroadcaster != _NULL ) { generalBroadcaster . removeNotificationListener ( listener ) ; } if ( attributeBroadcaster != _NULL ) { attributeBroadcaster . removeNotificationListener ( listener ) ; } }
41022	public boolean equals ( XObject obj2 ) { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . equals ( this ) ; if ( _NULL != m_obj ) { return m_obj . equals ( obj2 . m_obj ) ; } else { return obj2 . m_obj == _NULL ; } }
41041	public static boolean matchName ( Set < String > patternSet , String fileName ) { char [ ] fileNameArray = fileName . toCharArray ( ) ; for ( String pattern : patternSet ) { if ( match ( pattern , fileNameArray , _BOOL ) ) { return _BOOL ; } } return _BOOL ; }
41069	public boolean visitTopLevelInstruction ( ElemTemplateElement elem ) { int type = elem . getXSLToken ( ) ; switch ( type ) { case Constants . ELEMNAME_TEMPLATE : return visitInstruction ( elem ) ; default : return _BOOL ; } }
41078	public String transform ( String password ) { if ( AuthnSvcUtils . debug . messageEnabled ( ) ) { AuthnSvcUtils . debug . message ( _CHAR UppercaseTransform . transform _CHAR ) ; } if ( password == _NULL ) { return _NULL ; } return password . toUpperCase ( ) ; }
41083	public void log ( LogRecord record ) { if ( record instanceof ILogRecord ) { log ( ( ILogRecord ) record ) ; } else { Object obj = token . get ( ) ; log ( record , obj ) ; } }
41084	private InetAddress socksGetServerAddress ( ) throws UnknownHostException { String proxyName ; InetSocketAddress addr = ( InetSocketAddress ) proxy . address ( ) ; proxyName = addr . getHostName ( ) ; if ( proxyName == _NULL ) { proxyName = addr . getAddress ( ) . getHostAddress ( ) ; } return InetAddress . getByName ( proxyName ) ; }
41133	public void removePropertyChangeListener ( String propertyName , PropertyChangeListener listener ) { if ( listener == _NULL || propertyName == _NULL ) { return ; } listener = this . map . extract ( listener ) ; if ( listener != _NULL ) { this . map . remove ( propertyName , listener ) ; } }
41154	public void addNodes ( NodeIterator iterator ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESET_NOT_MUTABLE , _NULL ) ) ; if ( _NULL != iterator ) { Node obj ; while ( _NULL != ( obj = iterator . nextNode ( ) ) ) { addElement ( obj ) ; } } }
41181	public static boolean stackTraceContainsCause ( Throwable throwable , Class < ? extends Throwable > searchedCause ) { Throwable t = throwable ; while ( ( t = t . getCause ( ) ) != _NULL ) { if ( searchedCause . isAssignableFrom ( t . getClass ( ) ) ) { return _BOOL ; } } return _BOOL ; }
41188	public SubjectConfirmation createSubjectConfirmation ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION ) ; if ( obj == _NULL ) { return new SubjectConfirmationImpl ( ) ; } else { return ( SubjectConfirmation ) obj ; } }
41202	public void translate ( int deltaX , int deltaY ) { for ( int i = _NUM ; i < npoints ; i ++ ) { xpoints [ i ] += deltaX ; ypoints [ i ] += deltaY ; } if ( bounds != _NULL ) { bounds . translate ( deltaX , deltaY ) ; } }
41374	public void addPropertyChangeListener ( PropertyChangeListener l ) { AccessibleContext ac = getCurrentAccessibleContext ( ) ; if ( ac != _NULL ) { ac . addPropertyChangeListener ( l ) ; } else { super . addPropertyChangeListener ( l ) ; } }
41387	private void pop ( final int elements ) { if ( outputStackTop >= elements ) { outputStackTop -= elements ; } else { owner . inputStackTop -= elements - outputStackTop ; outputStackTop = _NUM ; } }
41416	public void push ( final double value ) { long bits = Double . doubleToLongBits ( value ) ; if ( bits == _NUM || bits == _NUM ) { mv . visitInsn ( Opcodes . DCONST_0 + ( int ) value ) ; } else { mv . visitLdcInsn ( value ) ; } }
41420	public boolean removeAttribute ( Attribute attribute , Collection < ? super ByteString > missingValues ) { attachment = _NULL ; AttributeDescription attrDesc = attribute . getAttributeDescription ( ) ; AttributeType attrType = attrDesc . getAttributeType ( ) ; if ( attrType . isObjectClass ( ) ) { return removeObjectClassAttribute ( attribute , missingValues ) ; } return removeNonObjectClassAttribute ( attribute , missingValues ) ; }
41449	public void completePendingPageChanges ( ) { if ( ! mPendingAnimations . isEmpty ( ) ) { HashMap < View , Runnable > pendingViews = new HashMap < > ( mPendingAnimations ) ; for ( Map . Entry < View , Runnable > e : pendingViews . entrySet ( ) ) { e . getKey ( ) . animate ( ) . cancel ( ) ; e . getValue ( ) . run ( ) ; } } }
41456	static Set search ( String filter ) throws SMSException { try { return ( smsObject . search ( _NULL , baseDN , filter , _NUM , _NUM , _BOOL , _BOOL ) ) ; } catch ( SSOException ssoe ) { debug . error ( _CHAR SMSEntry : Search ERROR : _CHAR + filter , ssoe ) ; throw new SMSException ( bundle . getString ( _CHAR sms - error - in - searching _CHAR ) , ssoe , _CHAR sms - error - in - searching _CHAR ) ; } }
41526	public boolean isSubjectExclusive ( String subjectName ) throws NameNotFoundException { if ( ! users . containsKey ( subjectName ) ) { String [ ] objs = { subjectName } ; throw ( new NameNotFoundException ( ResBundleUtils . rbName , _CHAR name_not_present _CHAR , objs , subjectName , PolicyException . USER_COLLECTION ) ) ; } else { return ( ( QualifiedSubject ) users . get ( subjectName ) ) . isExclusive ( ) ; } }
41527	public void printAll ( Graphics g ) { setFlag ( IS_PRINTING_ALL , _BOOL ) ; try { print ( g ) ; } finally { setFlag ( IS_PRINTING_ALL , _BOOL ) ; } }
41575	public IDPList createIDPList ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . IDPLIST ) ; if ( obj == _NULL ) { return new IDPListImpl ( ) ; } else { return ( IDPList ) obj ; } }
41577	private void writeErrorContents ( ServerDescriptor desc ) { for ( Exception ex : desc . getExceptions ( ) ) { LocalizableMessage errorMsg = ex instanceof AdminException ? ( ( AdminException ) ex ) . getMessageObject ( ) : LocalizableMessage . raw ( ex . getMessage ( ) ) ; if ( errorMsg != _NULL ) { println ( ) ; println ( errorMsg ) ; } } }
41583	public ProxyRestriction createProxyRestriction ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . PROXY_RESTRICTION ) ; if ( obj == _NULL ) { return new ProxyRestrictionImpl ( ) ; } else { return ( ProxyRestriction ) obj ; } }
41606	public void runTest ( ) throws Throwable { Document doc ; DocumentFragment documentFragmentNode ; int nodeType ; doc = ( Document ) load ( _CHAR hc_staff _CHAR , _BOOL ) ; documentFragmentNode = doc . createDocumentFragment ( ) ; nodeType = ( int ) documentFragmentNode . getNodeType ( ) ; assertEquals ( _CHAR nodeDocumentFragmentNodeTypeAssert1 _CHAR , _NUM , nodeType ) ; }
41608	protected void updateDNValue ( ) { String value = name . getText ( ) . trim ( ) ; if ( value . length ( ) > _NUM ) { dn . setText ( _CHAR o _CHAR + _CHAR = _CHAR + value + _CHAR , _CHAR + parentNode . getDN ( ) ) ; } else { dn . setText ( _CHAR , _CHAR + parentNode . getDN ( ) ) ; } }
41645	public int hashCode ( ) { int h = _NUM ; for ( int i = _NUM ; i < keyUniverse . length ; i ++ ) { if ( _NULL != vals [ i ] ) { h += entryHashCode ( i ) ; } } return h ; }
41660	public Response createResponse ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESPONSE , elem ) ; if ( object == _NULL ) { return new ResponseImpl ( elem ) ; } else { return ( Response ) object ; } }
41662	public void resetLabels ( ) { AbstractInsnNode insn = first ; while ( insn != _NULL ) { if ( insn instanceof LabelNode ) { ( ( LabelNode ) insn ) . resetLabel ( ) ; } insn = insn . next ; } }
41716	public Block next ( ) { scan ( ) ; if ( currentBlock <= - _NUM ) { throw new NoSuchElementException ( ) ; } else { return blockQueue [ currentBlock -- ] ; } }
41741	public Attribute createAttribute ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE , xml ) ; if ( obj == _NULL ) { return new AttributeImpl ( xml ) ; } else { return ( Attribute ) obj ; } }
41760	public boolean canBeEncoded ( ) { for ( Pair entry : ( ( ValuePairs ) value ) . mapping ) { TextEncodedStringNullTerminated next = new TextEncodedStringNullTerminated ( identifier , frameBody , entry . getValue ( ) ) ; if ( ! next . canBeEncoded ( ) ) { return _BOOL ; } } return _BOOL ; }
41818	public boolean addOperation ( Operation operation ) { if ( isRunning ) { if ( operationHandlerThreadHandler == _NULL ) return _BOOL ; return operationHandlerThreadHandler . post ( new AndroidOperation ( this , operation ) ) ; } else { return operationQueue . add ( new AndroidOperation ( this , operation ) ) ; } }
41825	public void removeResourceLink ( String name ) { try { envCtx . unbind ( name ) ; } catch ( NamingException e ) { log . error ( sm . getString ( _CHAR naming . unbindFailed _CHAR , e ) ) ; } ResourceLinkFactory . deregisterGlobalResourceAccess ( getGlobalNamingContext ( ) , name ) ; }
41826	@ Override public Foo create ( long fooId ) { Foo foo = new FooImpl ( ) ; foo . setNew ( _BOOL ) ; foo . setPrimaryKey ( fooId ) ; String uuid = PortalUUIDUtil . generate ( ) ; foo . setUuid ( uuid ) ; foo . setCompanyId ( companyProvider . getCompanyId ( ) ) ; return foo ; }
41835	public ManageNameIDRequest createManageNameIDRequest ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_REQUEST ) ; if ( obj == _NULL ) { return new ManageNameIDRequestImpl ( ) ; } else { return ( ManageNameIDRequest ) obj ; } }
41839	public StatusMessage createStatusMessage ( String xml ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_MESSAGE , xml ) ; if ( object == _NULL ) { return new StatusMessageImpl ( xml ) ; } else { return ( StatusMessage ) object ; } }
41878	public static boolean isFederationCancelled ( HttpServletRequest request ) { String status = request . getParameter ( IFSConstants . TERMINATION_STATUS ) ; if ( status != _NULL && status . equalsIgnoreCase ( IFSConstants . CANCEL ) ) { return _BOOL ; } else { return _BOOL ; } }
41893	public void finalizeGroupManager ( ) { DirectoryServer . deregisterInternalPlugin ( this ) ; DirectoryServer . deregisterBackendInitializationListener ( this ) ; deregisterAllGroups ( ) ; for ( Group < ? > groupImplementation : groupImplementations . values ( ) ) { groupImplementation . finalizeGroupImplementation ( ) ; } groupImplementations . clear ( ) ; }
41905	public static boolean isNumeric ( String s ) { try { Double . parseDouble ( s ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
41927	private static void checkTypeSafe ( Collection < ? > c ) { try { RoleUnresolved r ; for ( Object o : c ) r = ( RoleUnresolved ) o ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( e ) ; } }
41959	public Scoping createScoping ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SCOPING , value ) ; if ( obj == _NULL ) { return new ScopingImpl ( value ) ; } else { return ( Scoping ) obj ; } }
41973	public StateInteractive key_typed ( char p_key_char ) { if ( p_key_char == _CHAR ) { i_brd . generate_snapshot ( ) ; } else { return super . key_typed ( p_key_char ) ; } return this ; }
41978	public static ToolTipManager sharedInstance ( ) { Object value = SwingUtilities . appContextGet ( TOOL_TIP_MANAGER_KEY ) ; if ( value instanceof ToolTipManager ) { return ( ToolTipManager ) value ; } ToolTipManager manager = new ToolTipManager ( ) ; SwingUtilities . appContextPut ( TOOL_TIP_MANAGER_KEY , manager ) ; return manager ; }
42025	public LogoutRequest createLogoutRequest ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_REQUEST ) ; if ( obj == _NULL ) { return new LogoutRequestImpl ( ) ; } else { return ( LogoutRequest ) obj ; } }
42125	public boolean hasUnsupportedCriticalExtension ( ) { Set extns = getCriticalExtensionOIDs ( ) ; if ( extns == _NULL ) { return _BOOL ; } extns . remove ( RFC3280CertPathUtilities . ISSUING_DISTRIBUTION_POINT ) ; extns . remove ( RFC3280CertPathUtilities . DELTA_CRL_INDICATOR ) ; return ! extns . isEmpty ( ) ; }
42158	public Dimension minimumLayoutSize ( Container parent ) { Dimension minimumSize = insetSize ( parent ) ; if ( parent . getComponentCount ( ) > _NUM ) { Dimension childSize = getComponent ( _NUM ) . getMinimumSize ( ) ; minimumSize . width += childSize . width ; minimumSize . height += childSize . height ; } return minimumSize ; }
42205	public boolean shouldReInitialize ( ) { for ( DN domainDN : eclDisabledDomains ) { if ( predicate . isECLEnabledDomain ( domainDN ) ) { eclDisabledDomains . clear ( ) ; return _BOOL ; } } return _BOOL ; }
42215	public void runTest ( ) throws Throwable { Document doc ; Element element ; NodeList elementList ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; element = doc . getDocumentElement ( ) ; elementList = element . getElementsByTagNameNS ( _CHAR http : // www . altavista . com '' , '' * '' ) ; assertSize ( '' elementgetelementsbytagnamens05 '' , 1 , elementList ) ; }
42240	public static SchemaBuilder addOpenDJProviderSchema ( final SchemaBuilder builder ) { for ( final AttributeType attributeType : ATTRIBUTE_TYPES ) { builder . buildAttributeType ( attributeType ) . addToSchema ( ) ; } for ( final ObjectClass objectClass : OBJECT_CLASSES ) { builder . buildObjectClass ( objectClass ) . addToSchema ( ) ; } return builder ; }
42248	public SSOToken createSSOToken ( String tokenId ) throws UnsupportedOperationException , SSOException { for ( SSOProviderPlugin ssoProvider : getSsoProviderPlugins ( ) ) { if ( ssoProvider . isApplicable ( tokenId ) ) { return ssoProvider . createSSOToken ( tokenId ) ; } } if ( dProProvider != _NULL ) return ( dProProvider . createSSOToken ( tokenId ) ) ; else return ( grappaProvider . createSSOToken ( tokenId ) ) ; }
42256	public Issuer createIssuer ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ISSUER ) ; if ( obj == _NULL ) { return new IssuerImpl ( ) ; } else { return ( Issuer ) obj ; } }
42281	protected PStmtKey createKey ( final String sql , final int resultSetType , final int resultSetConcurrency ) { String catalog = _NULL ; try { catalog = getCatalog ( ) ; } catch ( final SQLException e ) { } return new PStmtKey ( normalizeSQL ( sql ) , catalog , resultSetType , resultSetConcurrency ) ; }
42283	public void runTest ( ) throws Throwable { Document doc ; Node rootNode ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; state = rootNode . isSupported ( _CHAR CORE _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR throw_True _CHAR , state ) ; }
42289	@ Override public Foo create ( long fooId ) { Foo foo = new FooImpl ( ) ; foo . setNew ( _BOOL ) ; foo . setPrimaryKey ( fooId ) ; String uuid = PortalUUIDUtil . generate ( ) ; foo . setUuid ( uuid ) ; foo . setCompanyId ( companyProvider . getCompanyId ( ) ) ; return foo ; }
42295	public SessionID addRestrictedToken ( SessionID sid , TokenRestriction restriction ) { SessionID previousValue = restrictedTokensByRestriction . putIfAbsent ( restriction , sid ) ; if ( previousValue == _NULL ) { restrictedTokensBySid . put ( sid , restriction ) ; notifyPersistenceManager ( ) ; return _NULL ; } return previousValue ; }
42296	private RealConnection findHealthyConnection ( int connectTimeout , int readTimeout , int writeTimeout , boolean connectionRetryEnabled , boolean doExtensiveHealthChecks ) throws IOException , RouteException { while ( _BOOL ) { RealConnection candidate = findConnection ( connectTimeout , readTimeout , writeTimeout , connectionRetryEnabled ) ; if ( connection . isHealthy ( doExtensiveHealthChecks ) ) { return candidate ; } connectionFailed ( ) ; } }
42338	public void writeModifyResult ( final int messageID , final Result result ) throws IOException { logger . trace ( _CHAR ENCODE LDAP MODIFY RESULT ( messageID = % d , result = % s ) _CHAR , messageID , result ) ; writeMessageHeader ( messageID ) ; { writeResultHeader ( LDAP . OP_TYPE_MODIFY_RESPONSE , result ) ; writeResultFooter ( writer ) ; } writeMessageFooter ( result . getControls ( ) ) ; }
42381	private boolean has_corner_loopt ( ) { if ( ! is_valid ( ) ) return _BOOL ; PlaPoint first_corner = corner_first ( ) ; for ( int index = _NUM ; index < corner_count ( ) ; ++ index ) { if ( corner ( index ) . equals ( first_corner ) ) continue ; return _BOOL ; } return _BOOL ; }
42427	public void readBoolean ( ) throws IOException { if ( tag != ASN1Constants . TAG_BOOLEAN ) { throw expected ( _CHAR boolean _CHAR ) ; } if ( length != _NUM ) { throw new ASN1Exception ( _CHAR Wrong length for ASN . 1 boolean at [ '' + tagOffset + '' ] '' ) ; } readContent ( ) ; }
42434	static public PrintWriter log ( Throwable xcpt , PrintWriter out ) { out . println ( _CHAR ----------- _CHAR ) ; out . println ( xcpt . toString ( ) ) ; out . println ( _CHAR Stack Trace : _CHAR ) ; out . print ( getStackTrace ( xcpt ) ) ; out . println ( _CHAR ----------- _CHAR ) ; out . flush ( ) ; return out ; }
42456	public int indexOfIdenticalObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( int i = _NUM ; i < array . length ; i ++ ) { if ( array [ i ] == nso ) { return i ; } } return - _NUM ; }
42488	private void writeDataToFile ( File file ) throws FileNotFoundException , IOException { FileOutputStream fos = new FileOutputStream ( file ) ; try { fos . write ( CONTENT_AS_BYTES ) ; } finally { fos . close ( ) ; } }
42572	public IDPEntry createIDPEntry ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . IDPENTRY , value ) ; if ( obj == _NULL ) { return new IDPEntryImpl ( value ) ; } else { return ( IDPEntry ) obj ; } }
42606	public final boolean hasConflict ( DocumentBuilderSetting other ) { if ( other == _NULL ) { throw new NullPointerException ( _CHAR other _CHAR ) ; } if ( other == this ) { return _BOOL ; } return strategy . hasConflict ( other . strategy ) ; }
42612	public static boolean isInt ( final String str ) { try { Integer . parseInt ( str ) ; return _BOOL ; } catch ( final NumberFormatException e ) { return _BOOL ; } }
42617	public synchronized void initialize ( ) { if ( cacheDir == _NULL ) { throw new RuntimeException ( _CHAR No cache directory has been specified . '' ) ; } if ( gson == _NULL ) { gson = createGson ( ) ; } Storo . initialize ( this ) ; }
42631	private StringBuilder encodeProduct ( StringBuilder tokens ) { ListIterator it = productTokens . listIterator ( ) ; while ( it . hasNext ( ) ) { tokens . append ( ( String ) it . next ( ) ) ; if ( it . hasNext ( ) ) tokens . append ( _CHAR ) ; else break ; } return tokens ; }
42682	public ECPRequest createECPRequest ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_REQUEST ) ; if ( obj == _NULL ) { return new ECPRequestImpl ( ) ; } else { return ( ECPRequest ) obj ; } }
42693	public Artifact createArtifact ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT , elem ) ; if ( obj == _NULL ) { return new ArtifactImpl ( elem ) ; } else { return ( Artifact ) obj ; } }
42694	public XACMLAuthzDecisionStatement createXACMLAuthzDecisionStatement ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_STATEMENT , elem ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionStatementImpl ( elem ) ; } else { return ( XACMLAuthzDecisionStatement ) obj ; } }
42696	private void sendSubscribeMessage ( ) { currWSstateLock . lock ( ) ; currWSstate = WSstate . WS_SUBSCRIBED ; currWSstateLock . unlock ( ) ; String instrumentString = getInstrumentString ( instrumentList ) ; String msg = _CHAR { \ _CHAR a \ _CHAR : \ _CHAR subscribe \ _CHAR , \ _CHAR v \ _CHAR : [ _CHAR + instrumentString + _CHAR ] } _CHAR ; System . out . println ( _CHAR WebsocketThread . sendSubscribeMessage ( ) : WS Subscribe msg : _CHAR + msg ) ; clientEndPoint . sendMessage ( msg ) ; }
42711	public static Object parse ( Reader in ) { try { JSONParser parser = new JSONParser ( ) ; return parser . parse ( in ) ; } catch ( Exception e ) { return _NULL ; } }
42725	public void runTest ( ) throws Throwable { Document doc ; Node rootNode ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; state = rootNode . isSupported ( _CHAR XXX _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertFalse ( _CHAR throw_False _CHAR , state ) ; }
42738	public static ResourceIDElement createResourceIDElement ( String resourceID ) throws JAXBException , IDPPException { if ( resourceID == _NULL ) { debug . error ( _CHAR IDPPUtils : ResourceIDType : Resource id is _NULL _CHAR ) ; throw new IDPPException ( _CHAR ResourceID is _NULL _CHAR ) ; } ResourceIDElement resourceIDElement = idppFactory . createResourceIDElement ( ) ; resourceIDElement . setValue ( resourceID ) ; return resourceIDElement ; }
42778	public NameIDPolicy createNameIDPolicy ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID_POLICY , value ) ; if ( obj == _NULL ) { return new NameIDPolicyImpl ( value ) ; } else { return ( NameIDPolicy ) obj ; } }
42787	protected void threadStart ( ) { if ( thread != _NULL ) return ; if ( backgroundProcessorDelay <= _NUM ) return ; threadDone = _BOOL ; String threadName = _CHAR ContainerBackgroundProcessor [ _CHAR + toString ( ) + _CHAR ] _CHAR ; thread = new Thread ( new ContainerBackgroundProcessor ( ) , threadName ) ; thread . setDaemon ( _BOOL ) ; thread . start ( ) ; }
42792	static public PrintWriter log ( Throwable xcpt , PrintWriter out ) { out . println ( _CHAR ----------- _CHAR ) ; out . println ( xcpt . toString ( ) ) ; out . println ( _CHAR Stack Trace : _CHAR ) ; out . print ( getStackTrace ( xcpt ) ) ; out . println ( _CHAR ----------- _CHAR ) ; out . flush ( ) ; return out ; }
42796	public void makeImmutable ( ) { if ( ! mutable ) { return ; } mutable = _BOOL ; if ( ( content != _NULL ) && ( ! content . isEmpty ( ) ) ) { content = Collections . unmodifiableList ( content ) ; } }
42819	private synchronized void unlinkStyleSheet ( StyleSheet ss , int index ) { if ( resolvedStyles . size ( ) > _NUM ) { Enumeration < ResolvedStyle > values = resolvedStyles . elements ( ) ; while ( values . hasMoreElements ( ) ) { ResolvedStyle rule = values . nextElement ( ) ; rule . removeExtendedStyleAt ( index ) ; } } }
42821	public static boolean isNameRegistrationCancelled ( HttpServletRequest request ) { String status = request . getParameter ( IFSConstants . REGISTRATION_STATUS ) ; if ( status != _NULL && status . equalsIgnoreCase ( IFSConstants . CANCEL ) ) { return _BOOL ; } else { return _BOOL ; } }
42860	public void disconnect ( ) { if ( isClosed ( ) || ! isConnected ( ) ) { return ; } impl . disconnect ( ) ; address = _NULL ; port =- _NUM ; isConnected = _BOOL ; }
42881	public ProxyRestriction createProxyRestriction ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . PROXY_RESTRICTION , xml ) ; if ( obj == _NULL ) { return new ProxyRestrictionImpl ( xml ) ; } else { return ( ProxyRestriction ) obj ; } }
42887	public void runTest ( ) throws Throwable { String namespaceURI = _CHAR http : // www . nist . gov '' ; String localName = '' nomatch '' ; Document doc ; NodeList elementList ; doc = ( Document ) load ( '' staffNS '' , false ) ; elementList = doc . getElementsByTagNameNS ( namespaceURI , localName ) ; assertSize ( '' throw_Size '' , 0 , elementList ) ; }
42888	public LogoutRequest createLogoutRequest ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_REQUEST , value ) ; if ( obj == _NULL ) { return new LogoutRequestImpl ( value ) ; } else { return ( LogoutRequest ) obj ; } }
42897	public void close ( ) throws IOException { long length = cache . getLength ( ) ; seek ( length ) ; flushBefore ( length ) ; super . close ( ) ; cache . reset ( ) ; cache = _NULL ; stream = _NULL ; }
42915	public StatusCode createStatusCode ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_CODE ) ; if ( obj == _NULL ) { return new StatusCodeImpl ( ) ; } else { return ( StatusCode ) obj ; } }
42933	K highestKey ( ) { Comparator < ? super K > cmp = m . comparator ; ConcurrentSkipListMap . Node < K , V > n = hiNode ( cmp ) ; if ( n != _NULL ) { K last = n . key ; if ( inBounds ( last , cmp ) ) return last ; } throw new NoSuchElementException ( ) ; }
42967	public static void main ( String [ ] args ) { try { WebBrowserErrorDialog dlg = new WebBrowserErrorDialog ( new JFrame ( ) , new WebBrowserException ( _CHAR http : // opendj . org '' , LocalizableMessage . raw ( '' toto '' ) , null ) ) ; dlg . packAndShow ( ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
42970	public void run ( ) { boolean periodic = isPeriodic ( ) ; if ( ! canRunInCurrentRunState ( periodic ) ) cancel ( _BOOL ) ; else if ( ! periodic ) ScheduledFutureTask . super . run ( ) ; else if ( ScheduledFutureTask . super . runAndReset ( ) ) { setNextRunTime ( ) ; reExecutePeriodic ( outerTask ) ; } }
42975	public static String toString ( final Object object , boolean useCurrentTostringIfAvailable ) { if ( object == _NULL ) { return _CHAR [ NULL ] _CHAR ; } if ( useCurrentTostringIfAvailable && isMethodDirectlyExists ( object , _CHAR toString _CHAR ) ) { return object . toString ( ) ; } return ToStringBuilder . reflectionToString ( object , ToStringStyle . SHORT_PREFIX_STYLE ) ; }
42986	public void remove ( MutableTreeNode aChild ) { if ( aChild == _NULL ) { throw new IllegalArgumentException ( _CHAR argument is _NULL _CHAR ) ; } if ( ! isNodeChild ( aChild ) ) { throw new IllegalArgumentException ( _CHAR argument is not a child _CHAR ) ; } remove ( getIndex ( aChild ) ) ; }
43022	public boolean equals ( Object o ) { if ( o instanceof Name ) { Comparator < String > c = ASCIICaseInsensitiveComparator . CASE_INSENSITIVE_ORDER ; return c . compare ( name , ( ( Name ) o ) . name ) == _NUM ; } else { return _BOOL ; } }
43026	public void runTest ( ) throws Throwable { Document doc ; Element element ; NodeList elementList ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; element = doc . getDocumentElement ( ) ; elementList = element . getElementsByTagNameNS ( _CHAR ** _CHAR , _CHAR * _CHAR ) ; assertSize ( _CHAR elementgetelementsbytagnamens02 _CHAR , _NUM , elementList ) ; }
43058	public char next ( ) { pos += _NUM ; int end = offset + count ; if ( pos >= end ) { pos = end ; return DONE ; } return current ( ) ; }
43075	public void executeFallback ( TransformerImpl transformer ) throws TransformerException { int parentElemType = m_parentNode . getXSLToken ( ) ; if ( Constants . ELEMNAME_EXTENSIONCALL == parentElemType || Constants . ELEMNAME_UNDEFINED == parentElemType ) { transformer . executeChildTemplates ( this , _BOOL ) ; } else { System . out . println ( _CHAR Error ! parent of xsl : fallback must be an extension or unknown element ! _CHAR ) ; } }
43094	public Attribute createAttribute ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ATTRIBUTE , elem ) ; if ( obj == _NULL ) { return new AttributeImpl ( elem ) ; } else { return ( Attribute ) obj ; } }
43123	protected boolean scrollLineEnd ( TextView widget , Spannable buffer ) { final int maxScrollX = getScrollBoundsRight ( widget ) - getInnerWidth ( widget ) ; int scrollX = widget . getScrollX ( ) ; if ( scrollX < maxScrollX ) { widget . scrollTo ( maxScrollX , widget . getScrollY ( ) ) ; return _BOOL ; } return _BOOL ; }
43157	public ECPRelayState createECPRelayState ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_RELAY_STATE , value ) ; if ( obj == _NULL ) { return new ECPRelayStateImpl ( value ) ; } else { return ( ECPRelayState ) obj ; } }
43195	public boolean contains ( LDAPURL url ) { if ( ! isUnreliableEntryListEmpty ) { boolean isInServer = serverHost . equalsIgnoreCase ( url . getHost ( ) ) && serverPort == url . getPort ( ) ; if ( isInServer ) { return unreliableEntryList . contains ( DN . valueOf ( url . getRawBaseDN ( ) ) ) ; } } return _BOOL ; }
43205	private void sendUnSubscribeMessage ( ) { currWSstateLock . lock ( ) ; currWSstate = WSstate . WS_UNSUBSCRIBED ; currWSstateLock . unlock ( ) ; String instrumentString = getInstrumentString ( instrumentList ) ; String msg = _CHAR { \ _CHAR a \ _CHAR : \ _CHAR unsubscribe \ _CHAR , \ _CHAR v \ _CHAR : [ _CHAR + instrumentString + _CHAR ] } _CHAR ; System . out . println ( _CHAR WebsocketThread . sendUnSubscribeMessage ( ) : WS UnSubscribe msg : _CHAR + msg ) ; clientEndPoint . sendMessage ( msg ) ; }
43209	private byte [ ] calculateConfigDigest ( ) throws DirectoryException { try ( InputStream inputStream = new FileInputStream ( configFile ) ) { return calculateDigest ( inputStream ) ; } catch ( Exception e ) { LocalizableMessage message = ERR_CONFIG_CANNOT_CALCULATE_DIGEST . get ( configFile , stackTraceToSingleLineString ( e ) ) ; throw new DirectoryException ( DirectoryServer . getServerErrorResultCode ( ) , message , e ) ; } }
43224	public void closeLayout ( final String id ) { synchronized ( stateChangeLock ) { mapStates . put ( id , SwipeRevealLayout . STATE_CLOSE ) ; if ( mapLayouts . containsKey ( id ) ) { final SwipeRevealLayout layout = mapLayouts . get ( id ) ; layout . close ( _BOOL ) ; } } }
43265	private int findMax ( int [ ] lastPositions ) { int max = lastPositions [ _NUM ] ; for ( int value : lastPositions ) { if ( value > max ) { max = value ; } } return max ; }
43314	public void init ( Subject subject , Map sharedState , Map options ) { locale = getLoginLocale ( ) ; bundle = amCache . getResBundle ( amAuthMSISDN , locale ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR MSISDN resbundle locale = _CHAR + locale ) ; } this . options = options ; initAuthConfig ( ) ; }
43329	boolean entryExists ( DN dn ) throws LdapException { try { connection . readEntry ( dn , _CHAR _NUM . _NUM _CHAR ) ; return _BOOL ; } catch ( EntryNotFoundException e ) { return _BOOL ; } }
43334	public static java . util . Date parseDate ( String strDate , String pattern ) { try { SimpleDateFormat parser = new SimpleDateFormat ( pattern , Locale . US ) ; return parser . parse ( strDate ) ; } catch ( ParseException e ) { throw new JKException ( e ) ; } }
43347	public int next ( ) { for ( ++ _currentNode ; _sp >= _NUM ; ++ _currentNode ) { if ( _currentNode < _stack [ _sp ] ) { if ( _type ( _currentNode ) != ATTRIBUTE_NODE && _type ( _currentNode ) != NAMESPACE_NODE ) return returnNode ( makeNodeHandle ( _currentNode ) ) ; } else -- _sp ; } return NULL ; }
43377	public ArtifactResolve createArtifactResolve ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESOLVE , elem ) ; if ( obj == _NULL ) { return new ArtifactResolveImpl ( elem ) ; } else { return ( ArtifactResolve ) obj ; } }
43461	public boolean validate ( String value ) { try { Float . parseFloat ( value ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
43473	public AuthnContext createAuthnContext ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_CONTEXT , xml ) ; if ( obj == _NULL ) { return new AuthnContextImpl ( xml ) ; } else { return ( AuthnContext ) obj ; } }
43483	public void forceToDisplay ( ) { this . forceToDisplay = _BOOL ; framePanel = _NULL ; frame . getContentPane ( ) . removeAll ( ) ; frame . getContentPane ( ) . add ( getFramePanel ( ) ) ; frame . pack ( ) ; Utilities . centerOnScreen ( frame ) ; setFocusOnButton ( ButtonName . NEXT ) ; }
43501	public void addSegment ( IShape segment ) { if ( closed ) { return ; } if ( isSinglePointOpen ( ) ) { startPoint = segment . getBasePoints ( ) . get ( _NUM ) ; } segments . add ( segment ) ; }
43528	private void subtreeDelete ( DN entryDN ) { entryMap . remove ( entryDN ) ; Set < DN > childDNSet = childDNs . remove ( entryDN ) ; if ( childDNSet != _NULL ) { for ( DN childDN : childDNSet ) { subtreeDelete ( childDN ) ; } } }
43532	private ConditionResult containsReferrals ( ReadableTransaction txn ) { try ( Cursor < ? , ? > cursor = txn . openCursor ( getName ( ) ) ) { return ConditionResult . valueOf ( cursor . next ( ) ) ; } catch ( Exception e ) { logger . traceException ( e ) ; return ConditionResult . UNDEFINED ; } }
43548	public boolean equals ( Object o ) { if ( o instanceof ISSecurityPermission ) { ISSecurityPermission p = ( ISSecurityPermission ) o ; if ( p . hashCode ( ) == hashCode ) { return _BOOL ; } } return _BOOL ; }
43550	public boolean isFocusTraversable ( ) { Component comp = getTextComponent ( ) ; if ( comp instanceof JTextComponent ) { if ( ( ( JTextComponent ) comp ) . isEditable ( ) ) { return _BOOL ; } } return _BOOL ; }
43553	public static Date parseDate ( String dateStr ) { try { return mSimpleDateFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( _CHAR date formatDateTime error _CHAR ) ; } }
43584	public void runTest ( ) throws Throwable { Document doc ; Node rootNode ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; state = rootNode . isSupported ( _CHAR XML _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR throw_True _CHAR , state ) ; }
43589	public static boolean isHasSdcard ( ) { String status = Environment . getExternalStorageState ( ) ; if ( status . equals ( Environment . MEDIA_MOUNTED ) ) { return _BOOL ; } else { return _BOOL ; } }
43611	public Subject createSubject ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . SUBJECT , xml ) ; if ( obj == _NULL ) { return new SubjectImpl ( xml ) ; } else { return ( Subject ) obj ; } }
43615	public static boolean isInteger ( final String txt ) { try { Integer . parseInt ( txt ) ; return _BOOL ; } catch ( final NumberFormatException e ) { return _BOOL ; } }
43749	public static boolean contains ( @ NonNull String key ) { failIfNotInitialized ( ) ; try { return mCache . contains ( key ) ; } catch ( Exception e ) { return _BOOL ; } }
43767	public void moveLeadSelectionIndex ( int leadIndex ) { if ( leadIndex == - _NUM ) { if ( this . anchorIndex != - _NUM ) { return ; } } updateLeadAnchorIndices ( this . anchorIndex , leadIndex ) ; fireValueChanged ( ) ; }
43785	private final void consumeExpected ( char expected ) throws javax . xml . transform . TransformerException { if ( tokenIs ( expected ) ) { nextToken ( ) ; } else { error ( XPATHErrorResources . ER_EXPECTED_BUT_FOUND , new Object [ ] { String . valueOf ( expected ) , m_token } ) ; throw new XPathProcessorException ( CONTINUE_AFTER_FATAL_ERROR ) ; } }
43822	public void runTest ( ) throws Throwable { Document doc ; DOMImplementation domImpl ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; domImpl = doc . getImplementation ( ) ; state = domImpl . hasFeature ( _CHAR core _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR domimplementationFeaturecoreAssert _CHAR , state ) ; }
43843	public void runTest ( ) throws Throwable { Document doc ; DocumentFragment docFragment ; String documentFragmentName ; doc = ( Document ) load ( _CHAR hc_staff _CHAR , _BOOL ) ; docFragment = doc . createDocumentFragment ( ) ; documentFragmentName = docFragment . getNodeName ( ) ; assertEquals ( _CHAR nodeDocumentFragmentNodeNameAssert1 _CHAR , _CHAR # document - fragment _CHAR , documentFragmentName ) ; }
43850	public void freeEntry ( BasicPoolEntry entry ) { if ( numEntries < _NUM ) { throw new IllegalStateException ( _CHAR No entry created for this pool . '' + route ) ; } if ( numEntries <= freeEntries . size ( ) ) { throw new IllegalStateException ( _CHAR No entry allocated from this pool . '' + route ) ; } freeEntries . add ( entry ) ; }
43880	private static void waitForOpsToComplete ( ) { try { WorkQueue < ? > workQueue = DirectoryServer . getWorkQueue ( ) ; final long NO_TIMEOUT =- _NUM ; workQueue . waitUntilIdle ( NO_TIMEOUT ) ; } catch ( Exception e ) { } }
43889	public Assertion createAssertion ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION ) ; if ( obj == _NULL ) { return new AssertionImpl ( ) ; } else { return ( Assertion ) obj ; } }
43909	public void writeCompareResult ( final int messageID , final CompareResult result ) throws IOException { logger . trace ( _CHAR ENCODE LDAP COMPARE RESULT ( messageID = % d , result = % s ) _CHAR , messageID , result ) ; writeMessageHeader ( messageID ) ; { writeResultHeader ( LDAP . OP_TYPE_COMPARE_RESPONSE , result ) ; writeResultFooter ( writer ) ; } writeMessageFooter ( result . getControls ( ) ) ; }
43953	protected void reset ( int linksSize , int varArraySize ) { _frameTop = _NUM ; _linksTop = _NUM ; if ( _links == _NULL ) { _links = new int [ linksSize ] ; } _links [ _linksTop ++ ] = _NUM ; _stackFrames = new XObject [ varArraySize ] ; }
43981	public void runTest ( ) throws Throwable { Document doc ; Node ownerElement ; Attr attr ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; attr = doc . createAttributeNS ( _CHAR http : // www . w3 . org / DOM '' , '' dom : attr '' ) ; ownerElement = attr . getOwnerElement ( ) ; assertNull ( '' attrgetownerelement03 '' , ownerElement ) ; }
44032	public void removeAccessibleSelection ( int i ) { if ( i >= _NUM && i < getMenuCount ( ) ) { JMenu menu = getMenu ( i ) ; if ( menu != _NULL ) { MenuSelectionManager . defaultManager ( ) . setSelectedPath ( _NULL ) ; } getSelectionModel ( ) . setSelectedIndex ( - _NUM ) ; } }
44050	public boolean isValid ( boolean reset ) { try { final SessionState state = session . getState ( reset ) ; return state == SessionState . VALID && ! session . isTimedOut ( ) ; } catch ( SessionException e ) { return _BOOL ; } }
44142	public Severity put ( PrinterStateReason reason , Severity severity ) { if ( reason == _NULL ) { throw new NullPointerException ( _CHAR reason is _NULL _CHAR ) ; } if ( severity == _NULL ) { throw new NullPointerException ( _CHAR severity is _NULL _CHAR ) ; } return super . put ( reason , severity ) ; }
44158	static ReplicationServerInfo newInstance ( ReplicationMsg msg ) throws IllegalArgumentException { if ( msg instanceof ReplServerStartMsg ) { return new ReplicationServerInfo ( ( ReplServerStartMsg ) msg ) ; } else if ( msg instanceof ReplServerStartDSMsg ) { return new ReplicationServerInfo ( ( ReplServerStartDSMsg ) msg ) ; } throw new IllegalArgumentException ( _CHAR Unexpected PDU type : _CHAR + msg . getClass ( ) . getName ( ) + _CHAR : \ n _CHAR + msg ) ; }
44232	public Action createAction ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ACTION ) ; if ( obj == _NULL ) { return new ActionImpl ( ) ; } else { return ( Action ) obj ; } }
44241	public void runTest ( ) throws Throwable { Document doc ; DOMImplementation domImpl ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; domImpl = doc . getImplementation ( ) ; state = domImpl . hasFeature ( _CHAR xml _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR hasXML1 _CHAR , state ) ; }
44283	public GetComplete createGetComplete ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . GET_COMPLETE , value ) ; if ( obj == _NULL ) { return new GetCompleteImpl ( value ) ; } else { return ( GetComplete ) obj ; } }
44327	protected int length ( ) { int length = _NUM ; for ( IRenderer child : childRenderers ) { if ( child instanceof TextRenderer ) { length += ( ( TextRenderer ) child ) . lineLength ( ) ; } } return length ; }
44349	protected void CopyHeader ( ) { seek ( _NUM ) ; int major = getCard8 ( ) ; int minor = getCard8 ( ) ; int hdrSize = getCard8 ( ) ; int offSize = getCard8 ( ) ; nextIndexOffset = hdrSize ; OutputList . addLast ( new RangeItem ( buf , _NUM , hdrSize ) ) ; }
44406	public Dimension preferredLayoutSize ( Container parent ) { Dimension preferredSize = insetSize ( parent ) ; if ( parent . getComponentCount ( ) > _NUM ) { Dimension childSize = getComponent ( _NUM ) . getPreferredSize ( ) ; preferredSize . width += childSize . width ; preferredSize . height += childSize . height ; } return preferredSize ; }
44421	private static void executeOnRootDSE ( Operation operation , LocalBackendWorkflowElement workflow ) throws CanceledOperationException { OperationType operationType = operation . getOperationType ( ) ; if ( operationType == OperationType . SEARCH ) { executeSearch ( ( SearchOperation ) operation , workflow ) ; } else { workflow . execute ( operation ) ; } }
44443	public static void d ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_DEBUG ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . d ( tag , msg ) ; }
44466	public NameIDMappingRequest createNameIDMappingRequest ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_REQ , elem ) ; if ( obj == _NULL ) { return new NameIDMappingRequestImpl ( elem ) ; } else { return ( NameIDMappingRequest ) obj ; } }
44479	public void removeOperations ( Operation operation , Object token ) { if ( isRunning ) { if ( operationHandlerThreadHandler == _NULL ) return ; operationHandlerThreadHandler . removeCallbacks ( new AndroidOperation ( this , operation ) , token ) ; } else { operationQueue . remove ( new AndroidOperation ( this , operation , AndroidOperation . Type . NORMAL , token , _NUM ) ) ; } }
44544	private boolean acquireValidLock ( ) { if ( shutdownCalled ) { return _BOOL ; } else { rwlock . writeLock ( ) . lock ( ) ; } return _BOOL ; }
44548	public void propertyChange ( PropertyChangeEvent e ) { if ( e . getPropertyName ( ) . equals ( _CHAR defaultButton _CHAR ) ) { JRootPane rootpane = ( JRootPane ) e . getSource ( ) ; updateDefaultButtonBindings ( rootpane ) ; if ( rootpane . getClientProperty ( _CHAR temporaryDefaultButton _CHAR ) == _NULL ) { rootpane . putClientProperty ( _CHAR initialDefaultButton _CHAR , e . getNewValue ( ) ) ; } } }
44562	public Evidence createEvidence ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EVIDENCE , xml ) ; if ( obj == _NULL ) { return _NULL ; } else { return ( Evidence ) obj ; } }
44572	@ Override public int hashCode ( ) { int result = _NUM ; Iterator < ? > it = iterator ( ) ; while ( it . hasNext ( ) ) { Object next = it . next ( ) ; result += next == _NULL ? _NUM : next . hashCode ( ) ; } return result ; }
44576	public LogoutResponse createLogoutResponse ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_RESPONSE , value ) ; if ( obj == _NULL ) { return new LogoutResponseImpl ( value ) ; } else { return ( LogoutResponse ) obj ; } }
44668	public void serialize ( Node node ) throws IOException { try { TreeWalker walker = new TreeWalker ( this ) ; walker . traverse ( node ) ; } catch ( org . xml . sax . SAXException se ) { throw new WrappedRuntimeException ( se ) ; } }
44693	private void push ( final ClassWriter cw , final String desc ) { int type = type ( cw , desc ) ; if ( type != _NUM ) { push ( type ) ; if ( type == LONG || type == DOUBLE ) { push ( TOP ) ; } } }
44710	public Environment createEnvironment ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ENVIRONMENT , elem ) ; if ( obj == _NULL ) { return new EnvironmentImpl ( elem ) ; } else { return ( Environment ) obj ; } }
44717	public EncryptedAttribute createEncryptedAttribute ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTED_ATTRIBUTE , elem ) ; if ( obj == _NULL ) { return new EncryptedAttributeImpl ( elem ) ; } else { return ( EncryptedAttribute ) obj ; } }
44728	public static UIComponent findComponentInRoot ( String id ) { UIComponent component = _NULL ; FacesContext facesContext = FacesContext . getCurrentInstance ( ) ; if ( facesContext != _NULL ) { UIComponent root = facesContext . getViewRoot ( ) ; component = findComponent ( root , id ) ; } return component ; }
44781	private static void determineFirstDigit ( StringBuilder resultString , int lgPatternFound ) throws NotFoundException { for ( int d = _NUM ; d < _NUM ; d ++ ) { if ( lgPatternFound == FIRST_DIGIT_ENCODINGS [ d ] ) { resultString . insert ( _NUM , ( char ) ( _CHAR + d ) ) ; return ; } } throw NotFoundException . getNotFoundInstance ( ) ; }
44804	public XACMLAuthzDecisionQuery createXACMLAuthzDecisionQuery ( String xml ) throws XACMLException , SAML2Exception { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_QUERY , xml ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionQueryImpl ( xml ) ; } else { return ( XACMLAuthzDecisionQuery ) obj ; } }
44808	private final void dispatachChars ( Node node ) throws org . xml . sax . SAXException { if ( m_Serializer != _NULL ) { this . m_Serializer . characters ( node ) ; } else { String data = ( ( Text ) node ) . getData ( ) ; this . m_contentHandler . characters ( data . toCharArray ( ) , _NUM , data . length ( ) ) ; } }
44809	public static Long counter32Value ( Long V ) { long v = V . longValue ( ) ; if ( v > ( pow ( _NUM , _NUM ) - _NUM ) ) { return new Long ( v % pow ( _NUM , _NUM ) ) ; } else { return V ; } }
44867	public GetComplete createGetComplete ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . GET_COMPLETE , value ) ; if ( obj == _NULL ) { return new GetCompleteImpl ( value ) ; } else { return ( GetComplete ) obj ; } }
44901	public int indexOfIdenticalObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( int i = _NUM ; i < array . length ; i ++ ) { if ( array [ i ] == nso ) { return i ; } } return - _NUM ; }
44918	@ Override public long skip ( long ln ) throws IOException { try { return in . skip ( ln ) ; } catch ( IOException e ) { handleIOException ( e ) ; return _NUM ; } }
44939	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { try { handleButton1Request ( getCachedPolicy ( ) ) ; } catch ( AMConsoleException e ) { debug . warning ( _CHAR ResponseProviderEditViewBean . handleButton1Request _CHAR , e ) ; redirectToStartURL ( ) ; } }
44944	private static Charset toCharset ( String csn ) throws UnsupportedEncodingException { Objects . requireNonNull ( csn , _CHAR charsetName _CHAR ) ; try { return Charset . forName ( csn ) ; } catch ( IllegalCharsetNameException | UnsupportedCharsetException unused ) { throw new UnsupportedEncodingException ( csn ) ; } }
44952	public SubjectConfirmationData createSubjectConfirmationData ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION_DATA , elem ) ; if ( obj == _NULL ) { return new SubjectConfirmationDataImpl ( elem ) ; } else { return ( SubjectConfirmationData ) obj ; } }
44964	private void assertNormalisation ( String untreatedResource , String treatedResource ) { try { assertThat ( resourceName . canonicalize ( untreatedResource ) ) . isEqualTo ( treatedResource ) ; } catch ( Exception e ) { String message = _CHAR Normalisation failed : _CHAR + e . getMessage ( ) ; throw ComparisonFailureFactory . comparisonFailure ( message , treatedResource , _CHAR _CHAR ) ; } }
44970	public synchronized void remove ( String item ) { int index = items . indexOf ( item ) ; if ( index < _NUM ) { throw new IllegalArgumentException ( _CHAR item _CHAR + item + _CHAR not found in list _CHAR ) ; } else { remove ( index ) ; } }
44974	public String encode ( ) { StringBuilder retval = new StringBuilder ( ) ; ListIterator li = sdpFields . listIterator ( ) ; while ( li . hasNext ( ) ) { SDPField sdphdr = ( SDPField ) li . next ( ) ; retval . append ( sdphdr . encode ( ) ) ; } return retval . toString ( ) ; }
45015	public final int updateAndGet ( IntUnaryOperator updateFunction ) { int prev , next ; do { prev = get ( ) ; next = updateFunction . applyAsInt ( prev ) ; } while ( ! compareAndSet ( prev , next ) ) ; return next ; }
45044	public NewEncryptedID createNewEncryptedID ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NEW_ENCRYPTEDID , value ) ; if ( obj == _NULL ) { return new NewEncryptedIDImpl ( value ) ; } else { return ( NewEncryptedID ) obj ; } }
45063	public char previous ( ) { if ( pos > begin ) { pos -- ; return text . charAt ( pos ) ; } else { return DONE ; } }
45079	public String encryptKey ( SessionID key ) { try { return SessionUtils . getEncryptedStorageKey ( key ) ; } catch ( Exception e ) { String message = MessageFormat . format ( _CHAR Failed to create encrypted storage key for : \ n '' + '' Session ID : { _NUM } _CHAR , key ) ; throw new IllegalStateException ( message , e ) ; } }
45126	protected boolean isStringFlavor ( DataFlavor flavor ) { DataFlavor [ ] flavors = stringFlavors ; for ( int i = _NUM ; i < flavors . length ; i ++ ) { if ( flavors [ i ] . equals ( flavor ) ) { return _BOOL ; } } return _BOOL ; }
45170	public void submitRequiredInformation ( Callback [ ] info ) { authDebug . message ( _CHAR AuthContext : : submitRequestedInformation ( ) _CHAR ) ; informationRequired = _NULL ; synchronized ( loginThread ) { submittedInformation = info ; loginThread . notify ( ) ; } authDebug . message ( _CHAR AuthContext : : submitRequestedInformation _CHAR + _CHAR ( ) sending notify to sleeping threads _CHAR ) ; }
45177	public boolean equals ( Object o ) { if ( o instanceof Organization ) { Organization org = ( Organization ) o ; if ( ( selectedOrgDNs != _NULL ) && ( org . selectedOrgDNs != _NULL ) && ( selectedOrgDNs . equals ( org . selectedOrgDNs ) ) ) { return _BOOL ; } } return _BOOL ; }
45179	public void init ( boolean encrypting , CipherParameters params ) { if ( params instanceof KeyParameter ) { this . encrypting = encrypting ; this . workingKey = ( ( KeyParameter ) params ) . getKey ( ) ; setKey ( this . workingKey ) ; return ; } throw new IllegalArgumentException ( _CHAR invalid parameter passed to Blowfish init - _CHAR + params . getClass ( ) . getName ( ) ) ; }
45270	public Response createResponse ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESPONSE ) ; if ( object == _NULL ) { return new ResponseImpl ( ) ; } else { return ( Response ) object ; } }
45301	protected void installRolloverBorders ( JComponent c ) { Component [ ] components = c . getComponents ( ) ; for ( Component component : components ) { if ( component instanceof JComponent ) { ( ( JComponent ) component ) . updateUI ( ) ; setBorderToRollover ( component ) ; } } }
45328	private static byte [ ] serializeDocument ( Node n ) throws IOException { XmlDomWriter xw = new XmlDomWriter ( ) ; ByteArrayOutputStream fout = new ByteArrayOutputStream ( ) ; xw . setOutput ( fout , _NULL ) ; xw . setCanonical ( _BOOL ) ; xw . write ( n ) ; fout . close ( ) ; return fout . toByteArray ( ) ; }
45333	public boolean equals ( Object obj ) { if ( ! super . equals ( obj ) ) { return _BOOL ; } if ( obj . getClass ( ) != getClass ( ) ) { return _BOOL ; } return _BOOL ; }
45349	public Name addAll ( Name suffix ) throws InvalidNameException { if ( suffix instanceof CompoundName ) { impl . addAll ( suffix . getAll ( ) ) ; return this ; } else { throw new InvalidNameException ( _CHAR Not a compound name : _CHAR + suffix . toString ( ) ) ; } }
45363	private boolean isValidTelephoneChars ( char theChar ) { int aVal = theChar ; if ( ( aVal == _NUM ) || ( aVal == _NUM ) || ( aVal == _NUM ) || ( aVal == _NUM ) ) { return _BOOL ; } else { return _BOOL ; } }
45367	private boolean contains ( String [ ] names , String name ) { assert name != _NULL ; for ( int i = _NUM ; i < names . length ; i ++ ) { if ( name . equals ( names [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
45389	public String convertValueToText ( Object value , boolean selected , boolean expanded , boolean leaf , int row , boolean hasFocus ) { if ( value != _NULL ) { String sValue = value . toString ( ) ; if ( sValue != _NULL ) { return sValue ; } } return _CHAR _CHAR ; }
45413	public static URL toURL ( URI uri ) { if ( uri == _NULL ) throw new NullPointerException ( _CHAR ` uri _CHAR_CHAR_CHAR_CHAR , e ) ; } }
45418	public AuthnStatement createAuthnStatement ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_STATEMENT ) ; if ( obj == _NULL ) { return new AuthnStatementImpl ( ) ; } else { return ( AuthnStatement ) obj ; } }
45445	public void runTest ( ) throws Throwable { Document doc ; Element rootNode ; int nodeType ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; nodeType = ( int ) rootNode . getNodeType ( ) ; assertEquals ( _CHAR nodeElementNodeTypeAssert1 _CHAR , _NUM , nodeType ) ; }
45454	private boolean isSessionUsedInSAML2 ( Set userSession , String userId ) { if ( ( userSession == _NULL ) || userSession . isEmpty ( ) ) { return _BOOL ; } else { Object session = userSession . iterator ( ) . next ( ) ; return MultiProtocolUtils . usedInProtocol ( session , SingleLogoutManager . SAML2 ) ; } }
45461	public boolean addOperationAtFirst ( Operation operation ) { if ( isRunning ) { if ( operationHandlerThreadHandler == _NULL ) return _BOOL ; return operationHandlerThreadHandler . postAtFrontOfQueue ( new AndroidOperation ( this , operation ) ) ; } else { return operationQueue . add ( new AndroidOperation ( this , operation , AndroidOperation . Type . ATFIRST , _NULL , _NUM ) ) ; } }
45472	private synchronized ConnectionPool pCreatePool ( ) throws SQLException { if ( pool != _NULL ) { return pool ; } else { pool = new ConnectionPool ( poolProperties ) ; return pool ; } }
45556	public static boolean isFloat ( final String txt ) { try { Float . parseFloat ( txt ) ; return _BOOL ; } catch ( final Exception e ) { return _BOOL ; } }
45562	public void writeAddResult ( final int messageID , final Result result ) throws IOException { logger . trace ( _CHAR ENCODE LDAP ADD RESULT ( messageID = % d , result = % s ) _CHAR , messageID , result ) ; writeMessageHeader ( messageID ) ; { writeResultHeader ( LDAP . OP_TYPE_ADD_RESPONSE , result ) ; writeResultFooter ( writer ) ; } writeMessageFooter ( result . getControls ( ) ) ; }
45584	protected void notifyRowSetChanged ( ) throws SQLException { checkforRowSetInterface ( ) ; if ( listeners . isEmpty ( ) == _BOOL ) { RowSetEvent event = new RowSetEvent ( ( RowSet ) this ) ; for ( RowSetListener rsl : listeners ) { rsl . rowSetChanged ( event ) ; } } }
45616	@ NonNull public static Agera merge ( @ NonNull Observable ... sources ) { if ( sources . length == _NUM ) { return empty ( ) ; } else if ( sources . length == _NUM ) { return wrap ( sources [ _NUM ] ) ; } return new AgeraMerge ( sources ) ; }
45617	public boolean renameFile ( File oldFile , File newFile ) { synchronized ( fileCache ) { if ( oldFile . renameTo ( newFile ) ) { validateFileCache ( ) ; return _BOOL ; } return _BOOL ; } }
45685	public NameIDMappingResponse createNameIDMappingResponse ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_RES , elem ) ; if ( obj == _NULL ) { return new NameIDMappingResponseImpl ( elem ) ; } else { return ( NameIDMappingResponse ) obj ; } }
45731	protected void paintChildren ( Graphics g ) { super . paintChildren ( g ) ; SplitPaneUI ui = getUI ( ) ; if ( ui != _NULL ) { Graphics tempG = g . create ( ) ; ui . finishedPaintingChildren ( this , tempG ) ; tempG . dispose ( ) ; } }
45749	private void runDetectChildren ( ) throws SearchAbandonException , LdapException { if ( controller . isShowContainerOnly ( ) || ! isNumSubOrdinatesUsable ( ) ) { runDetectChildrenManually ( ) ; } else { SearchResultEntry entry = getDisplayedEntry ( ) ; isLeafNode = ! BrowserController . getHasSubOrdinates ( entry ) ; } }
45770	public boolean hasAccessType ( EnumAccessType accessType ) { List < PermBindRulePair > pairs = getPermBindRulePairs ( ) ; for ( PermBindRulePair p : pairs ) { if ( p . hasAccessType ( accessType ) ) { return _BOOL ; } } return _BOOL ; }
45780	protected PStmtKey createKey ( final String sql , final StatementType stmtType ) { String catalog = _NULL ; try { catalog = getCatalog ( ) ; } catch ( final SQLException e ) { } return new PStmtKey ( normalizeSQL ( sql ) , catalog , stmtType , _NULL ) ; }
45835	protected void send ( ClusterManager manager , String sessionId ) { ClusterMessage msg = manager . requestCompleted ( sessionId ) ; if ( msg != _NULL && cluster != _NULL ) { cluster . send ( msg ) ; if ( doStatistics ( ) ) { nrOfSendRequests ++ ; } } }
45838	public void reuse ( Tag handler ) { synchronized ( this ) { if ( current < ( handlers . length - _NUM ) ) { handlers [ ++ current ] = handler ; return ; } } doRelease ( handler ) ; }
45841	public Condition createCondition ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITION ) ; if ( obj == _NULL ) { return new ConditionImpl ( ) ; } else { return ( Condition ) obj ; } }
45847	public JSONObject toJSONObject ( ) throws JSONException { JSONObject jo = new JSONObject ( ) ; jo . put ( _CHAR uuid _CHAR , uuid ) ; jo . put ( _CHAR pSubjectName _CHAR , pSubjectName ) ; if ( exclusive ) { jo . put ( _CHAR exclusive _CHAR , exclusive ) ; } return jo ; }
45851	public Request createRequest ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . REQUEST , elem ) ; if ( obj == _NULL ) { return new RequestImpl ( elem ) ; } else { return ( Request ) obj ; } }
45861	@ Override public void accept ( final LongHashSet targetForOwnedSocketInodes ) { targetForOwnedSocketInodes . clear ( ) ; try { Files . list ( Paths . get ( _CHAR / proc / self / fd _CHAR ) ) . filter ( _NULL ) . mapToLong ( _NULL ) . filter ( _NULL ) . forEach ( _NULL ) ; } catch ( final IOException e ) { throw new UncheckedIOException ( e ) ; } }
45871	public Action createAction ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ACTION ) ; if ( obj == _NULL ) { return new ActionImpl ( ) ; } else { return ( Action ) obj ; } }
45891	private File preInitialization ( ) throws InitializationException { final DirectoryEnvironmentConfig environment = serverContext . getEnvironment ( ) ; useLastKnownGoodConfig = environment . useLastKnownGoodConfiguration ( ) ; configFile = environment . getConfigFile ( ) ; File configFileToUse = findConfigFileToUse ( configFile ) ; ensureArchiveExistsAndIsUpToDate ( environment , configFileToUse ) ; applyConfigChangesIfNeeded ( configFileToUse ) ; return configFileToUse ; }
45893	public static boolean isClassAvailable ( final String className ) { try { Class . forName ( className ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
45975	public InitCodeView generateInitCode ( MethodTransformerContext methodContext , InitCodeContext initCodeContext ) { InitCodeNode rootNode = InitCodeNode . createTree ( initCodeContext ) ; if ( initCodeContext . outputType ( ) == InitCodeOutputType . FieldList ) { return buildInitCodeViewFlattened ( methodContext , rootNode ) ; } else { return buildInitCodeViewRequestObject ( methodContext , rootNode ) ; } }
45999	public StatusCode createStatusCode ( String xml ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_CODE , xml ) ; if ( object == _NULL ) { return new StatusCodeImpl ( xml ) ; } else { return ( StatusCode ) object ; } }
46019	public ManageNameIDResponse createManageNameIDResponse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_RESPONSE ) ; if ( obj == _NULL ) { return new ManageNameIDResponseImpl ( ) ; } else { return ( ManageNameIDResponse ) obj ; } }
46050	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR FactoryCreateRule [ _CHAR ) ; if ( creationFactory != _NULL ) { sb . append ( _CHAR creationFactory = _CHAR ) ; sb . append ( creationFactory ) ; } sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
46071	public void addPattern ( String pattern ) throws ParseException { if ( pattern == _NULL ) return ; PatternEntry . Parser parser = new PatternEntry . Parser ( pattern ) ; PatternEntry entry = parser . next ( ) ; while ( entry != _NULL ) { fixEntry ( entry ) ; entry = parser . next ( ) ; } }
46082	public ValueExp apply ( ObjectName name ) throws BadStringOperationException , BadBinaryOpValueExpException , BadAttributeValueExpException , InvalidApplicationException { Object result = getValue ( name ) ; if ( result instanceof String ) { return new StringValueExp ( ( String ) result ) ; } else { throw new BadAttributeValueExpException ( result ) ; } }
46107	public void deleteGroup ( String groupId ) { try { DeleteRequest request = Requests . newDeleteRequest ( GROUP_PATH + groupId ) ; getConnection ( ) . delete ( context , request ) ; } catch ( ResourceException e ) { throw new RuntimeException ( e ) ; } }
46110	public boolean isDefined ( Object key ) { if ( key instanceof StyleConstants ) { Object cssKey = css . styleConstantsKeyToCSSKey ( ( StyleConstants ) key ) ; if ( cssKey != _NULL ) { return super . isDefined ( cssKey ) ; } } return super . isDefined ( key ) ; }
46208	public void repaint ( ) { if ( paint_immediately ) { final Rectangle MAX_RECTAMGLE = new Rectangle ( _NUM , _NUM , Integer . MAX_VALUE , Integer . MAX_VALUE ) ; board_panel . paintImmediately ( MAX_RECTAMGLE ) ; } else { board_panel . repaint ( ) ; } }
46237	public StatusDetail createStatusDetail ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_DETAIL , elem ) ; if ( object == _NULL ) { return new StatusDetailImpl ( elem ) ; } else { return ( StatusDetail ) object ; } }
46242	public void updateBorder ( ) { boolean displayBorder = scroll . getVerticalScrollBar ( ) . isVisible ( ) || scroll . getHorizontalScrollBar ( ) . isVisible ( ) ; if ( displayBorder ) { scroll . setBorder ( etchedBorder ) ; } else { scroll . setBorder ( emptyBorder ) ; } }
46267	public Action createAction ( String xml ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ACTION , xml ) ; if ( obj == _NULL ) { return new ActionImpl ( xml ) ; } else { return ( Action ) obj ; } }
46359	private static boolean evalAttrType ( AttributeType a , TargetAttr targetAttr ) { final EnumTargetOperator op = targetAttr . getOperator ( ) ; if ( a . isOperational ( ) ) { return evalAttrType ( a , targetAttr . isAllOpAttributes ( ) , targetAttr . opAttributes , op ) ; } else { return evalAttrType ( a , targetAttr . isAllUserAttributes ( ) , targetAttr . attributes , op ) ; } }
46396	public double trace_length ( ) { double result = _NUM ; for ( BrdItem curr_item : item_list ) { if ( curr_item instanceof BrdTracep ) { result += ( ( BrdTracep ) curr_item ) . get_length ( ) ; } } return result ; }
46413	public static ServerSideSortResponseControl newControl ( final ResultCode result , final String attributeDescription ) { Reject . ifNull ( result ) ; if ( attributeDescription != _NULL ) { return new ServerSideSortResponseControl ( _BOOL , result , AttributeDescription . valueOf ( attributeDescription ) ) ; } else { return new ServerSideSortResponseControl ( _BOOL , result , _NULL ) ; } }
46477	public AnnotationVisitor visitInsnAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { return mv . visitInsnAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
46499	ByteStringBuilder toNormalizedByteString ( final ByteStringBuilder builder ) { builder . appendUtf8 ( toLowerCase ( attributeType . getNameOrOID ( ) ) ) ; builder . appendUtf8 ( _CHAR = _CHAR ) ; final ByteString value = getEqualityNormalizedValue ( ) ; if ( value . length ( ) > _NUM ) { builder . appendBytes ( escapeBytes ( value ) ) ; } return builder ; }
46509	private static void updateFormatCache ( Long key , String value ) { if ( value == _NULL ) { return ; } if ( formatCache . size ( ) > CACHE_SIZE ) { formatCache . clear ( ) ; } formatCache . put ( key , value ) ; }
46541	private ConstraintResult verifyActions ( Set < String > actions , ResourceType resourceType ) { Set < String > acceptableActions = resourceType . getActions ( ) . keySet ( ) ; for ( String action : actions ) { if ( ! acceptableActions . contains ( action ) ) { return ConstraintResults . newFailure ( _CHAR actionValues _CHAR , action ) ; } } return ConstraintResults . newSuccess ( ) ; }
46581	@ Override public void submitOperation ( Operation operation ) throws DirectoryException { if ( shutdownRequested ) { LocalizableMessage message = WARN_OP_REJECTED_BY_SHUTDOWN . get ( ) ; throw new DirectoryException ( ResultCode . UNAVAILABLE , message ) ; } opQueue . add ( operation ) ; queueSemaphore . release ( ) ; opsSubmitted . incrementAndGet ( ) ; }
46610	protected void swapOut ( Session session ) throws IOException { if ( store == _NULL || ! session . isValid ( ) ) { return ; } ( ( StandardSession ) session ) . passivate ( ) ; writeSession ( session ) ; super . remove ( session , _BOOL ) ; session . recycle ( ) ; }
46670	@ Override public int read ( ) { if ( saveBufferReader . remaining ( ) > _NUM ) { return _NUM & saveBufferReader . readByte ( ) ; } if ( byteBuffer . remaining ( ) > _NUM ) { return _NUM & byteBuffer . get ( ) ; } throw new IllegalBlockingModeException ( ) ; }
46671	public int compareTo ( Object o ) { ObjectStreamField f = ( ObjectStreamField ) o ; boolean thisPrimitive = this . isPrimitive ( ) ; boolean fPrimitive = f . isPrimitive ( ) ; if ( thisPrimitive != fPrimitive ) { return thisPrimitive ? - _NUM : _NUM ; } return this . getName ( ) . compareTo ( f . getName ( ) ) ; }
46673	@ Override public void removeTransformer ( ClassFileTransformer transformer ) { if ( transformer == _NULL ) { return ; } if ( this . transformers . remove ( transformer ) ) { log . info ( sm . getString ( _CHAR webappClassLoader . removeTransformer _CHAR , transformer , getContextName ( ) ) ) ; return ; } }
46726	public String readStringUtf8 ( final int length ) { if ( remaining ( ) < length ) { throw new IndexOutOfBoundsException ( ) ; } final int newPos = pos + length ; final String str = sequence . subSequence ( pos , pos + length ) . toString ( ) ; pos = newPos ; return str ; }
46735	public void replicaOffline ( DN baseDN , CSN offlineCSN ) { if ( ! predicate . isECLEnabledDomain ( baseDN ) ) { return ; } replicasOffline . update ( baseDN , offlineCSN ) ; final CSN oldestCSNBefore = getOldestLastAliveCSN ( ) ; lastAliveCSNs . update ( baseDN , offlineCSN ) ; tryNotify ( oldestCSNBefore ) ; }
46744	public ProxyRestriction createProxyRestriction ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . PROXY_RESTRICTION , elem ) ; if ( obj == _NULL ) { return new ProxyRestrictionImpl ( elem ) ; } else { return ( ProxyRestriction ) obj ; } }
46803	public void start_batch_autorouter ( ) { if ( board_is_read_only ) { stat . userPrintln ( classname + _CHAR start_batch_autorouter : FAIL board is read only _CHAR ) ; return ; } r_board . generate_snapshot ( ) ; interactive_action_thread = new BatchAutorouteThread ( this ) ; interactive_action_thread . start ( ) ; }
46806	public A last ( ) { A last = _NULL ; ImmutableList < A > t = this ; while ( t . tail != _NULL ) { last = t . head ; t = t . tail ; } return last ; }
46833	public NameID createNameID ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID ) ; if ( obj == _NULL ) { return new NameIDImpl ( ) ; } else { return ( NameID ) obj ; } }
46907	@ Override public synchronized Set < Map . Entry < Object , Object >> entrySet ( ) { checkInitialized ( ) ; if ( entrySet == _NULL ) { if ( entrySetCallCount ++ == _NUM ) entrySet = Collections . unmodifiableMap ( this ) . entrySet ( ) ; else return super . entrySet ( ) ; } if ( entrySetCallCount != _NUM ) throw new RuntimeException ( _CHAR Internal error . '' ) ; return entrySet ; }
46942	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR FilterDef [ _CHAR ) ; sb . append ( _CHAR filterName = _CHAR ) ; sb . append ( this . filterName ) ; sb . append ( _CHAR , filterClass = _CHAR ) ; sb . append ( this . filterClass ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
46983	public Status createStatus ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS , value ) ; if ( obj == _NULL ) { return new StatusImpl ( value ) ; } else { return ( Status ) obj ; } }
47002	public void runTest ( ) throws Throwable { Document doc ; DocumentType docType ; boolean success ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; docType = doc . getDoctype ( ) ; success = docType . isSupported ( _CHAR _CHAR , _CHAR _CHAR ) ; assertFalse ( _CHAR nodeissupported03 _CHAR , success ) ; }
47083	public Attribute createAttribute ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE , elem ) ; if ( obj == _NULL ) { return new AttributeImpl ( elem ) ; } else { return ( Attribute ) obj ; } }
47092	public static < T > ObjectPool < T > erodingPool ( final ObjectPool < T > pool , final float factor ) { if ( pool == _NULL ) { throw new IllegalArgumentException ( _CHAR pool must not be _NULL . _CHAR ) ; } if ( factor <= _NUM ) { throw new IllegalArgumentException ( _CHAR factor must be positive . '' ) ; } return new ErodingObjectPool < > ( pool , factor ) ; }
47094	protected ActionBar supportActionBar ( Toolbar toolbar ) { setSupportActionBar ( toolbar ) ; ActionBar actionBar = getSupportActionBar ( ) ; if ( actionBar != _NULL ) { actionBar . setDisplayHomeAsUpEnabled ( _BOOL ) ; actionBar . setDisplayShowHomeEnabled ( _BOOL ) ; } return actionBar ; }
47114	public void runTest ( ) throws Throwable { Document doc ; Element docElem ; NodeList elementList ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; docElem = doc . getDocumentElement ( ) ; elementList = docElem . getElementsByTagNameNS ( _CHAR http : // www . nist . gov '' , '' nomatch '' ) ; assertSize ( '' size '' , 0 , elementList ) ; }
47144	public static RpcContext init ( Request request ) { RpcContext context = new RpcContext ( ) ; if ( request != _NULL ) { context . setRequest ( request ) ; context . setClientRequestId ( request . getAttachments ( ) . get ( URLParamType . requestIdFromClient . getName ( ) ) ) ; } localContext . set ( context ) ; return context ; }
47167	public boolean checkServerUp ( String serverID ) { try { return getClusterMonitor ( ) . checkServerUp ( serverID ) ; } catch ( SessionException e ) { sessionDebug . error ( _CHAR Failed to check Server Up for { _NUM } _CHAR , serverID , e ) ; return _BOOL ; } }
47243	public boolean containsValue ( Date val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSDate . class ) ) { NSDate dat = ( NSDate ) o ; if ( dat . getDate ( ) . equals ( val ) ) return _BOOL ; } } return _BOOL ; }
47253	public static boolean isECLEnabled ( ) { waitForStartup ( ) ; for ( LDAPReplicationDomain domain : domains . values ( ) ) { if ( domain . isECLEnabled ( ) ) { return _BOOL ; } } return _BOOL ; }
47308	public void log ( Level level , String msg , Object param1 ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; Object params [ ] = { param1 } ; lr . setParameters ( params ) ; doLog ( lr ) ; }
47309	public void toggle_ratsnest ( ) { if ( ratsnest == _NULL || ratsnest . is_hidden ( ) ) { create_ratsnest ( ) ; } else { ratsnest = _NULL ; } repaint ( ) ; }
47348	public Issuer createIssuer ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ISSUER , xml ) ; if ( obj == _NULL ) { return new IssuerImpl ( xml ) ; } else { return ( Issuer ) obj ; } }
47365	protected void cleanConfigEntries ( ) throws Exception { logger . error ( LocalizableMessage . raw ( _CHAR ReplicationTestCase / Cleaning config entries _CHAR ) ) ; for ( DN dn : configEntriesToCleanup ) { deleteEntry ( dn ) ; } configEntriesToCleanup . clear ( ) ; synchroServerEntry = _NULL ; replServerEntry = _NULL ; }
47382	public static synchronized void sdkInitialize ( Context context ) { if ( sdkInitialized == _BOOL ) { return ; } Settings . loadDefaultsFromMetadataIfNeeded ( context ) ; Utility . loadAppSettingsAsync ( context , Settings . getApplicationId ( ) ) ; BoltsMeasurementEventListener . getInstance ( context . getApplicationContext ( ) ) ; sdkInitialized = _BOOL ; }
47421	public NameID createNameID ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID , elem ) ; if ( obj == _NULL ) { return new NameIDImpl ( elem ) ; } else { return ( NameID ) obj ; } }
47426	public void shutdown ( ) { initiateShutdown ( ) ; synchronized ( shutdownLock ) { shutdownLock . notifyAll ( ) ; } if ( logger . isTraceEnabled ( ) ) { logger . trace ( getMessage ( _CHAR Shutting down monitoring publisher . '' ) ) ; } }
47523	public EncryptedAssertion createEncryptedAssertion ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTED_ASSERTION , elem ) ; if ( obj == _NULL ) { return new EncryptedAssertionImpl ( elem ) ; } else { return ( EncryptedAssertion ) obj ; } }
47526	public Response createResponse ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . RESPONSE , xml ) ; if ( obj == _NULL ) { return new ResponseImpl ( xml ) ; } else { return ( Response ) obj ; } }
47594	@ Override public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } if ( obj instanceof AbstractChronology ) { return compareTo ( ( AbstractChronology ) obj ) == _NUM ; } return _BOOL ; }
47632	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { try { handleButton1Request ( getCachedPolicy ( ) ) ; } catch ( AMConsoleException e ) { debug . warning ( _CHAR SubjectEditViewBean . handleButton1Request _CHAR , e ) ; redirectToStartURL ( ) ; } }
47689	public boolean containsHeader ( String name ) { for ( int i = _NUM ; i < headers . size ( ) ; i ++ ) { Header header = ( Header ) headers . get ( i ) ; if ( header . getName ( ) . equalsIgnoreCase ( name ) ) { return _BOOL ; } } return _BOOL ; }
47700	public Evidence createEvidence ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EVIDENCE , elem ) ; if ( obj == _NULL ) { return _NULL ; } else { return ( Evidence ) obj ; } }
47708	public ECPRelayState createECPRelayState ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_RELAY_STATE , value ) ; if ( obj == _NULL ) { return new ECPRelayStateImpl ( value ) ; } else { return ( ECPRelayState ) obj ; } }
47712	public JKTableRecord deleteRow ( final int selectedRow ) { final JKTableRecord removed = removeRecord ( selectedRow ) ; removed . setStatus ( RecordStatus . DELETED ) ; if ( removed != _NULL ) { this . deletedRecords . add ( removed ) ; } fireTableRowsDeleted ( selectedRow , selectedRow ) ; return removed ; }
47739	public boolean isWrapperFor ( Class < ? > wrappedType ) { if ( wrappedType . isAssignableFrom ( request . getClass ( ) ) ) { return _BOOL ; } if ( request instanceof ServletRequestWrapper ) { return ( ( ServletRequestWrapper ) request ) . isWrapperFor ( wrappedType ) ; } return _BOOL ; }
47745	public static void deleteDomain ( DN dn ) { LDAPReplicationDomain domain = domains . remove ( dn ) ; if ( domain != _NULL ) { domain . delete ( ) ; } if ( domains . isEmpty ( ) ) { stopReplayThreads ( ) ; } }
47747	public static String unsetThread ( ) { ByteArrayOutputStream baos = data . get ( ) ; if ( baos == _NULL ) { return _NULL ; } streams . set ( _NULL ) ; data . set ( _NULL ) ; return baos . toString ( ) ; }
47794	private static void handleForwardError ( String url , Exception exception , HttpServletResponse response ) { debug . error ( _CHAR SAMLUtils . sendError : Exception occurred while trying to forward to resource : '' + url , exception ) ; try { response . sendError ( HttpServletResponse . SC_INTERNAL_SERVER_ERROR , exception . getMessage ( ) ) ; } catch ( IOException ioE ) { debug . error ( _CHAR Failed to inform the response of caught exception _CHAR , ioE ) ; } }
47929	public TagField createField ( VorbisCommentFieldKey vorbisCommentFieldKey , String value ) throws KeyNotFoundException , FieldDataInvalidException { if ( value == _NULL ) { throw new IllegalArgumentException ( ErrorMessage . GENERAL_INVALID_NULL_ARGUMENT . getMsg ( ) ) ; } if ( vorbisCommentFieldKey == _NULL ) { throw new KeyNotFoundException ( ) ; } return new VorbisCommentTagField ( vorbisCommentFieldKey . getFieldName ( ) , value ) ; }
47933	public void removeOperation ( Operation operation ) { if ( isRunning ) { if ( operationHandlerThreadHandler == _NULL ) return ; operationHandlerThreadHandler . removeCallbacks ( new AndroidOperation ( this , operation ) ) ; } else { operationQueue . remove ( new AndroidOperation ( this , operation ) ) ; } }
47947	private boolean isNumSubOrdinatesUsable ( ) throws LdapException { SearchResultEntry entry = getDisplayedEntry ( ) ; boolean hasSubOrdinates = BrowserController . getHasSubOrdinates ( entry ) ; if ( ! hasSubOrdinates ) { LDAPURL url = getDisplayedUrl ( ) ; return ! controller . getNumSubordinateHacker ( ) . contains ( url ) ; } return _BOOL ; }
48007	public static String encodeForPOST ( final String str ) { try { return Base64 . encode ( str . getBytes ( _CHAR UTF - _NUM _CHAR ) , _BOOL ) ; } catch ( UnsupportedEncodingException uee ) { debug . error ( _CHAR SAML2Utils . encodeForPOST _CHAR , uee ) ; return _NULL ; } }
48023	void release ( ) { for ( int i = _NUM ; i < n ; i ++ ) { filters [ i ] = _NULL ; } n = _NUM ; pos = _NUM ; servlet = _NULL ; servletSupportsAsync = _BOOL ; }
48027	public OneTimeUse createOneTimeUse ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ONE_TIME_USE , xml ) ; if ( obj == _NULL ) { return new OneTimeUseImpl ( xml ) ; } else { return ( OneTimeUse ) obj ; } }
48096	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( name ) ; if ( hasDescription ( ) ) { sb . append ( _CHAR ( _CHAR ) ; sb . append ( description ) ; sb . append ( _CHAR ) _CHAR ) ; } return sb . toString ( ) ; }
48107	private static void notifyDependencies ( ) { for ( Thread t : Thread . getAllStackTraces ( ) . keySet ( ) ) { if ( t . getName ( ) . equals ( SystemTimerPool . SCHEDULER_NAME ) || t . getName ( ) . equals ( SystemTimer . SCHEDULER_NAME ) ) { synchronized ( t ) { t . notify ( ) ; } } } }
48149	@ Override public int read ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; if ( pos < buf . length ) { return buf [ pos ++ ] ; } return in . read ( ) ; } }
48222	public StatusCode createStatusCode ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_CODE , value ) ; if ( obj == _NULL ) { return new StatusCodeImpl ( value ) ; } else { return ( StatusCode ) obj ; } }
48242	public static < T > List < T > synchronizedList ( List < T > list ) { if ( list == _NULL ) { throw new NullPointerException ( _CHAR list == _NULL _CHAR ) ; } if ( list instanceof RandomAccess ) { return new SynchronizedRandomAccessList < T > ( list ) ; } return new SynchronizedList < T > ( list ) ; }
48269	public static void closeQuietly ( final Connection conn ) { if ( conn != _NULL ) { try { conn . close ( ) ; } catch ( final Exception e ) { } } }
48284	private void checkGenerationId ( ) { if ( localGenerationId <= _NUM ) { oldGenerationId = replicationServerDomain . changeGenerationId ( generationId ) ; return ; } if ( generationId > _NUM && generationId != localGenerationId ) { logger . warn ( WARN_BAD_GENERATION_ID_FROM_RS , serverId , session . getReadableRemoteAddress ( ) , generationId , getBaseDN ( ) , getReplicationServerId ( ) , localGenerationId ) ; } }
48299	public boolean hasUnsupportedCriticalExtension ( ) { Set extns = getCriticalExtensionOIDs ( ) ; if ( extns == _NULL ) { return _BOOL ; } extns . remove ( RFC3280CertPathUtilities . ISSUING_DISTRIBUTION_POINT ) ; extns . remove ( RFC3280CertPathUtilities . DELTA_CRL_INDICATOR ) ; return ! extns . isEmpty ( ) ; }
48319	protected int estimateNameValuePairLen ( final NameValuePair nvp ) { if ( nvp == _NULL ) return _NUM ; int result = nvp . getName ( ) . length ( ) ; final String value = nvp . getValue ( ) ; if ( value != _NULL ) { result += _NUM + value . length ( ) ; } return result ; }
48326	public String [ ] split ( String res ) { if ( resourceNameUtil == _NULL ) { PolicyManager . debug . error ( _CHAR split : Do n _CHAR_CHAR ) ; String [ ] list = new String [ 1 ] ; list [ 0 ] = res ; return ( list ) ; } return ( resourceNameUtil . split ( res ) ) ; }
48349	public boolean addAudienceRestrictionCondition ( AudienceRestrictionCondition arc ) { if ( arc != _NULL ) { _arcs . add ( arc ) ; return _BOOL ; } else { return _BOOL ; } }
48376	private Future < Job > reattempt ( ) { if ( this . backoff != _NULL ) { long delay = this . getBackoffImpl ( ) . apply ( attempts ) ; return this . setDelay ( delay ) . setPromote_at ( System . currentTimeMillis ( ) + delay ) . update ( ) . compose ( _NULL ) ; } else { return this . inactive ( ) ; } }
48378	public void runTest ( ) throws Throwable { Document doc ; Node rootNode ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; state = rootNode . isSupported ( _CHAR xml _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR throw_True _CHAR , state ) ; }
48393	public NewEncryptedID createNewEncryptedID ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NEW_ENCRYPTEDID , value ) ; if ( obj == _NULL ) { return new NewEncryptedIDImpl ( value ) ; } else { return ( NewEncryptedID ) obj ; } }
48407	public Enumeration elements ( ) { debug . message ( _CHAR ISPermissionCollection : : calling elements ... . _CHAR ) ; if ( debug . messageEnabled ( ) ) { for ( Enumeration e = perms . elements ( ) ; e . hasMoreElements ( ) ; ) { debug . message ( _CHAR ISPC : : perms : : _CHAR + e . nextElement ( ) . toString ( ) ) ; } } return perms . elements ( ) ; }
48421	public void run ( ) { try { TimerAlarmClockNotification notif = new TimerAlarmClockNotification ( this ) ; listener . notifyAlarmClock ( notif ) ; } catch ( Exception e ) { TIMER_LOGGER . logp ( Level . FINEST , Timer . class . getName ( ) , _CHAR run _CHAR , _CHAR Got unexpected exception when sending a notification _CHAR , e ) ; } }
48449	public AuthzDecisionStatement createAuthzDecisionStatement ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHZ_DECISION_STATEMENT ) ; if ( obj == _NULL ) { return _NULL ; } else { return ( AuthzDecisionStatement ) obj ; } }
48490	public static void e ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_ERROR ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . e ( tag , msg ) ; }
48511	private final boolean is7BitClean ( ByteSequence value ) { for ( int i = _NUM ; i < value . length ( ) ; i ++ ) { byte b = value . byteAt ( i ) ; if ( ( b & MASK ) != b ) { return _BOOL ; } } return _BOOL ; }
48542	ByteString entryToDatabase ( Entry entry , DataConfig dataConfig ) throws DirectoryException { EntryCodec codec = acquireEntryCodec ( ) ; try { return codec . encode ( entry , dataConfig ) ; } finally { codec . release ( ) ; } }
48559	public boolean equals ( Object o ) { if ( o instanceof WebServicesClients ) { WebServicesClients client = ( WebServicesClients ) o ; if ( ( selectedWebServicesClients != _NULL ) && ( client . selectedWebServicesClients != _NULL ) && ( selectedWebServicesClients . equals ( client . selectedWebServicesClients ) ) ) { return ( _BOOL ) ; } } return ( _BOOL ) ; }
48581	public static void main ( String [ ] args ) { try { SelectAliasDialog dlg = new SelectAliasDialog ( new JDialog ( ) ) ; dlg . display ( new String [ ] { _CHAR test1 _CHAR , _CHAR test2 _CHAR } ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
48588	public void runTest ( ) throws Throwable { Document doc ; Element element ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; element = doc . getDocumentElement ( ) ; state = element . hasAttribute ( _CHAR _CHAR ) ; assertFalse ( _CHAR elementhasattribute01 _CHAR , state ) ; }
48590	private boolean isAllowedByIp ( String ip ) throws PolicyException { boolean allowed = _BOOL ; IPv6AddressRange iPv6AddressRange = IPv6AddressRange . fromFirstAndLast ( startIP , endIP ) ; IPv6Address requestIP = IPv6Address . fromString ( ip ) ; if ( iPv6AddressRange . contains ( requestIP ) ) { allowed = _BOOL ; } return allowed ; }
48640	public boolean canBeEncoded ( ) { for ( ListIterator < String > li = ( ( Values ) value ) . getList ( ) . listIterator ( ) ; li . hasNext ( ) ; ) { TextEncodedStringNullTerminated next = new TextEncodedStringNullTerminated ( identifier , frameBody , li . next ( ) ) ; if ( ! next . canBeEncoded ( ) ) { return _BOOL ; } } return _BOOL ; }
48731	public AnnotationVisitor visitTypeAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { return mv . visitTypeAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
48733	@ Override public Object clone ( ) { try { Locale that = ( Locale ) super . clone ( ) ; return that ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
48761	public static Issuer createIssuer ( String entityID ) throws SAML2Exception { String method = _CHAR createIssuer : _CHAR ; Issuer issuer = assertionFactory . createIssuer ( ) ; issuer . setValue ( entityID ) ; if ( debug . messageEnabled ( ) ) { debug . message ( method + _CHAR Issuer : _CHAR + issuer . toXMLString ( ) ) ; } return issuer ; }
48767	public List < MappedMember > findFieldsByDesc ( String text ) { List < MappedMember > list = new ArrayList < MappedMember > ( ) ; for ( MappedMember mm : getFields ( ) ) { if ( mm . getDesc ( ) . equals ( text ) ) { list . add ( mm ) ; } } return list ; }
48775	public boolean containsValue ( double val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSNumber . class ) ) { NSNumber num = ( NSNumber ) o ; if ( num . isReal ( ) && num . doubleValue ( ) == val ) return _BOOL ; } } return _BOOL ; }
48777	public SubjectLocality createSubjectLocality ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_LOCALITY , elem ) ; if ( obj == _NULL ) { return new SubjectLocalityImpl ( elem ) ; } else { return ( SubjectLocality ) obj ; } }
48784	public ECPResponse createECPResponse ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ECP_RESPONSE , value ) ; if ( obj == _NULL ) { return new ECPResponseImpl ( value ) ; } else { return ( ECPResponse ) obj ; } }
48793	public void pause ( ) { if ( isPaused ( ) ) { return ; } suspended . set ( _BOOL ) ; while ( ! sessionDone . get ( ) ) { TestCaseUtils . sleep ( _NUM ) ; } }
48817	@ Override public void startDocument ( ) throws SAXException { if ( saxLog . isDebugEnabled ( ) ) { saxLog . debug ( _CHAR startDocument ( ) _CHAR ) ; } if ( locator instanceof Locator2 && root instanceof DocumentProperties . Encoding ) { ( ( DocumentProperties . Encoding ) root ) . setEncoding ( ( ( Locator2 ) locator ) . getEncoding ( ) ) ; } configure ( ) ; }
48827	public static boolean checkIfEntryExists ( String dn , SSOToken token ) { try { return ( smsObject . entryExists ( token , dn ) ) ; } catch ( Exception e ) { debug . error ( _CHAR SMSEntry : Error in checking if entry exists : '' + dn , e ) ; } return ( _BOOL ) ; }
48831	public boolean isWrapperFor ( ServletResponse wrapped ) { if ( response == wrapped ) { return _BOOL ; } if ( response instanceof ServletResponseWrapper ) { return ( ( ServletResponseWrapper ) response ) . isWrapperFor ( wrapped ) ; } return _BOOL ; }
48867	@ Override public synchronized void write ( int b ) { int inBufferPos = count - filledBufferSum ; if ( inBufferPos == currentBuffer . length ) { needNewBuffer ( count + _NUM ) ; inBufferPos = _NUM ; } currentBuffer [ inBufferPos ] = ( byte ) b ; count ++ ; }
48933	public AttributeQuery createAttributeQuery ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE_QUERY ) ; if ( obj == _NULL ) { return new AttributeQueryImpl ( ) ; } else { return ( AttributeQuery ) obj ; } }
48944	private void addDependency ( PendingChange dependentChange ) { dependentChangesLock . lock ( ) ; try { dependentChanges . add ( dependentChange ) ; } finally { dependentChangesLock . unlock ( ) ; } }
48947	@ Override public int hashCode ( ) { try { return getNormalizedValue ( ) . hashCode ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; return value . hashCode ( ) ; } }
48980	public static boolean isIA5String ( String str ) { for ( int i = str . length ( ) - _NUM ; i >= _NUM ; i -- ) { char ch = str . charAt ( i ) ; if ( ch > _NUM ) { return _BOOL ; } } return _BOOL ; }
48984	public boolean equals ( Object obj ) { if ( obj instanceof ActivationID ) { ActivationID id = ( ActivationID ) obj ; return ( uid . equals ( id . uid ) && activator . equals ( id . activator ) ) ; } else { return _BOOL ; } }
48991	public Extensions createExtensions ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EXTENSIONS ) ; if ( obj == _NULL ) { return new ExtensionsImpl ( ) ; } else { return ( Extensions ) obj ; } }
48994	@ Override protected void uninstallDefaults ( ) { if ( spinner . getLayout ( ) instanceof UIResource ) { spinner . setLayout ( _NULL ) ; } SynthContext context = getContext ( spinner , ENABLED ) ; style . uninstallDefaults ( context ) ; context . dispose ( ) ; style = _NULL ; }
48997	public static final Index createTestBankIndexCountryName ( ) { Index lastname = new Index ( _CHAR countryname _CHAR ) ; lastname . isUnique ( _BOOL ) ; ArrayList < IndexField > fields = new ArrayList < > ( _NUM ) ; fields . add ( new IndexField ( _CHAR countryshortname _CHAR ) ) ; lastname . setFields ( fields ) ; lastname . setTable ( Fixtures . createTestWorldBankTable ( ) ) ; return lastname ; }
49065	public Component add ( String title , Component component ) { if ( ! ( component instanceof UIResource ) ) { addTab ( title , component ) ; } else { super . add ( title , component ) ; } return component ; }
49085	public Decision createDecision ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . DECISION ) ; if ( object == _NULL ) { return new DecisionImpl ( ) ; } else { return ( Decision ) object ; } }
49094	@ Activate @ Modified protected void activate ( ComponentContext context ) { JsonValue config = new JsonValue ( enhancedConfig . getConfiguration ( context ) ) ; try { mappings = initMappings ( config ) ; } catch ( JsonValueException jve ) { throw new ComponentException ( _CHAR Configuration error : _CHAR + jve . getMessage ( ) , jve ) ; } }
49095	@ Override protected void shutdownInput ( ) throws IOException { shutdownInput = _BOOL ; try { Libcore . os . shutdown ( fd , SHUT_RD ) ; } catch ( ErrnoException errnoException ) { throw errnoException . rethrowAsSocketException ( ) ; } }
49100	public AuthnRequest createAuthnRequest ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_REQUEST , value ) ; if ( obj == _NULL ) { return new AuthnRequestImpl ( value ) ; } else { return ( AuthnRequest ) obj ; } }
49102	public AudienceRestriction createAudienceRestriction ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUDIENCE_RESTRICTION , xml ) ; if ( obj == _NULL ) { return new AudienceRestrictionImpl ( xml ) ; } else { return ( AudienceRestriction ) obj ; } }
49105	public AuthnRequest createAuthnRequest ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_REQUEST ) ; if ( obj == _NULL ) { return new AuthnRequestImpl ( ) ; } else { return ( AuthnRequest ) obj ; } }
49111	public void closeAllOpenPositions ( ) { if ( recyclerView == _NULL ) { return ; } for ( int i = openedPositions . size ( ) - _NUM ; i >= _NUM ; i -- ) { closeOpenPosition ( openedPositions . keyAt ( i ) ) ; } openedPositions . clear ( ) ; }
49134	public ArtifactResponse createArtifactResponse ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ARTIFACT_RESPONSE , xml ) ; if ( obj == _NULL ) { return new ArtifactResponseImpl ( xml ) ; } else { return ( ArtifactResponse ) obj ; } }
49140	private void toString ( StringBuilder buffer ) { buffer . append ( _CHAR LDIFImportResult ( entriesRead = _CHAR ) ; buffer . append ( entriesRead ) ; buffer . append ( _CHAR , entriesRejected = _CHAR ) ; buffer . append ( entriesRejected ) ; buffer . append ( _CHAR , entriesSkipped = _CHAR ) ; buffer . append ( entriesSkipped ) ; buffer . append ( _CHAR ) _CHAR ) ; }
49162	public Result createResult ( String xml ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESULT , xml ) ; if ( object == _NULL ) { return new ResultImpl ( xml ) ; } else { return ( Result ) object ; } }
49176	public synchronized void delay ( int ms ) { checkDelayArgument ( ms ) ; try { Thread . sleep ( ms ) ; } catch ( InterruptedException ite ) { ite . printStackTrace ( ) ; } }
49214	protected final void fireServiceAdded ( BeanContextServiceAvailableEvent bcssae ) { Object [ ] copy ; synchronized ( bcsListeners ) { copy = bcsListeners . toArray ( ) ; } for ( int i = _NUM ; i < copy . length ; i ++ ) { ( ( BeanContextServicesListener ) copy [ i ] ) . serviceAvailable ( bcssae ) ; } }
49221	private boolean createFolder ( ) throws ConnectorException { File dir = new File ( configuration . getTypes ( ) . get ( type ) . getPath ( ) + currentFolder + newFolderName ) ; if ( dir . exists ( ) ) { throw new ConnectorException ( Constants . Errors . CKFINDER_CONNECTOR_ERROR_ALREADY_EXIST ) ; } else { return FileUtils . mkdir ( dir , configuration ) ; } }
49223	@ CpsVmThreadOnly private void propagateErrorToWorkflow ( Throwable t ) { Map . Entry < Integer , CpsThread > lastEntry = threads . lastEntry ( ) ; if ( lastEntry != _NULL ) { lastEntry . getValue ( ) . resume ( new Outcome ( _NULL , t ) ) ; } else { LOGGER . log ( Level . WARNING , _CHAR encountered error but could not pass it to the flow _CHAR , t ) ; } }
49225	protected static boolean isPredefinedCidFont ( String fontName ) { if ( ! registryNames . containsKey ( FONTS_PROP ) ) { return _BOOL ; } else if ( ! registryNames . get ( FONTS_PROP ) . contains ( fontName ) ) { return _BOOL ; } return _BOOL ; }
49248	public static boolean isLowerCase ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; for ( int i = _NUM ; i < value . length ( ) ; i ++ ) { if ( Character . isUpperCase ( value . charAt ( i ) ) ) { return _BOOL ; } } return _BOOL ; }
49249	public Object clone ( ) { try { StringCharacterIterator other = ( StringCharacterIterator ) super . clone ( ) ; return other ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
49292	public NameID createNameID ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEID , xml ) ; if ( obj == _NULL ) { return new NameIDImpl ( xml ) ; } else { return ( NameID ) obj ; } }
49315	boolean printUsageGroupHeaders ( ) { int groupsContainingArgs = _NUM ; for ( final ArgumentGroup argGroup : argumentGroups ) { if ( argGroup . containsNonHiddenArguments ( ) ) { groupsContainingArgs ++ ; } } return groupsContainingArgs > _NUM ; }
49339	public int available ( ) throws IOException { int temp = stream . available ( ) ; if ( ( frameLength != AudioSystem . NOT_SPECIFIED ) && ( ( temp / frameSize ) > ( frameLength - framePos ) ) ) { return ( int ) ( frameLength - framePos ) * frameSize ; } else { return temp ; } }
49375	public static final Index createTestIndexOneField ( ) { Index index = new Index ( _CHAR myindexwithonefield _CHAR ) ; index . setTable ( DB , _CHAR mytable _CHAR ) ; ArrayList < IndexField > fields = new ArrayList < > ( ) ; fields . add ( new IndexField ( _CHAR myindexedfield _CHAR ) ) ; index . setFields ( fields ) ; index . isUnique ( _BOOL ) ; return index ; }
49408	public boolean equals ( Object o ) { if ( this == o ) { return _BOOL ; } if ( o == _NULL || this . getClass ( ) != o . getClass ( ) ) { return _BOOL ; } return Arrays . equals ( oid , ( ( ObjectIdentifier ) o ) . oid ) ; }
49425	public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR EntryEncodeConfig ( excludeDN = _CHAR ) ; buffer . append ( excludeDN ) ; buffer . append ( _CHAR , compressAttrDescriptions = _CHAR ) ; buffer . append ( compressAttrDescriptions ) ; buffer . append ( _CHAR , compressObjectClassSets = _CHAR ) ; buffer . append ( compressObjectClassSets ) ; buffer . append ( _CHAR ) _CHAR ) ; }
49497	protected String accessJMXValue ( ) { try { Object result = getJMXConnection ( ) . getAttribute ( new ObjectName ( name ) , attribute ) ; if ( result != _NULL ) return result . toString ( ) ; } catch ( Exception e ) { } return _NULL ; }
49587	public void addObligation ( Obligation obligation ) throws XACMLException { if ( ! mutable ) { throw new XACMLException ( XACMLSDKUtils . xacmlResourceBundle . getString ( _CHAR objectImmutable _CHAR ) ) ; } if ( obligations == _NULL ) { obligations = new ArrayList ( ) ; } obligations . add ( obligation ) ; }
49611	public static < S > ServiceLoader < S > loadInstalled ( Class < S > service ) { ClassLoader cl = ClassLoader . getSystemClassLoader ( ) ; if ( cl != _NULL ) { while ( cl . getParent ( ) != _NULL ) { cl = cl . getParent ( ) ; } } return ServiceLoader . load ( service , cl ) ; }
49650	private static void deleteDirectoryOnExit ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } directory . deleteOnExit ( ) ; if ( ! isSymlink ( directory ) ) { cleanDirectoryOnExit ( directory ) ; } }
49723	public AttributeQuery createAttributeQuery ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE_QUERY , value ) ; if ( obj == _NULL ) { return new AttributeQueryImpl ( value ) ; } else { return ( AttributeQuery ) obj ; } }
49734	public Subject createSubject ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT ) ; if ( obj == _NULL ) { return new SubjectImpl ( ) ; } else { return ( Subject ) obj ; } }
49751	public Conditions createConditions ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITIONS , elem ) ; if ( obj == _NULL ) { return new ConditionsImpl ( elem ) ; } else { return ( Conditions ) obj ; } }
49757	public static void flushFromCaches ( Class < ? > clz ) { if ( clz == _NULL ) { throw new NullPointerException ( ) ; } synchronized ( declaredMethodCache ) { ThreadGroupContext . getContext ( ) . removeBeanInfo ( clz ) ; declaredMethodCache . put ( clz , _NULL ) ; } }
49758	public void onPause ( ) { broadcastManager . unregisterReceiver ( receiver ) ; if ( callback != _NULL ) { Session session = Session . getActiveSession ( ) ; if ( session != _NULL ) { session . removeCallback ( callback ) ; } } }
49795	public WorldCreator copy ( World world ) { if ( world == _NULL ) { throw new IllegalArgumentException ( _CHAR World can not be _NULL _CHAR ) ; } seed = world . getSeed ( ) ; environment = world . getEnvironment ( ) ; generator = world . getGenerator ( ) ; return this ; }
49818	public GetComplete createGetComplete ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . GET_COMPLETE ) ; if ( obj == _NULL ) { return new GetCompleteImpl ( ) ; } else { return ( GetComplete ) obj ; } }
49822	public boolean equals ( Object o ) { if ( o instanceof Manifest ) { Manifest m = ( Manifest ) o ; return attr . equals ( m . getMainAttributes ( ) ) && entries . equals ( m . getEntries ( ) ) ; } else { return _BOOL ; } }
49839	Entry entryFromDatabase ( ByteString bytes , CompressedSchema compressedSchema ) throws DirectoryException , DecodeException , LDAPException , DataFormatException , IOException { EntryCodec codec = acquireEntryCodec ( ) ; try { return codec . decode ( bytes , compressedSchema ) ; } finally { codec . release ( ) ; } }
49878	@ Override public boolean equals ( Object ox ) { try { Level lx = ( Level ) ox ; return ( lx . value == this . value ) ; } catch ( Exception ex ) { return _BOOL ; } }
49968	public boolean isSiteEnabled ( ) { try { return WebtopNaming . isSiteEnabled ( getLocalServerID ( _BOOL ) ) ; } catch ( Exception e ) { sessionDebug . error ( _CHAR Failed to check if local server { _NUM } is part of site _CHAR , getLocalServerID ( ) , e ) ; throw new IllegalStateException ( e ) ; } }
50011	public boolean hasSdcard ( ) { String state = Environment . getExternalStorageState ( ) ; if ( state . equals ( Environment . MEDIA_MOUNTED ) ) { return _BOOL ; } else { return _BOOL ; } }
50013	protected void completeUIInstall ( ) { this . setShowsRootHandles ( tree . getShowsRootHandles ( ) ) ; updateRenderer ( ) ; updateDepthOffset ( ) ; setSelectionModel ( tree . getSelectionModel ( ) ) ; treeState = createLayoutCache ( ) ; configureLayoutCache ( ) ; updateSize ( ) ; }
50036	public AuthnContext createAuthnContext ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_CONTEXT , elem ) ; if ( obj == _NULL ) { return new AuthnContextImpl ( elem ) ; } else { return ( AuthnContext ) obj ; } }
50038	private boolean startsWithStringArray ( String sArray [ ] , String value ) { if ( value == _NULL ) return _BOOL ; for ( int i = _NUM ; i < sArray . length ; i ++ ) { if ( value . startsWith ( sArray [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
50051	private static boolean isAccessible ( Path path , AccessMode ... modes ) { try { provider ( path ) . checkAccess ( path , modes ) ; return _BOOL ; } catch ( IOException x ) { return _BOOL ; } }
50062	public static String decode ( String s ) { String str = _NULL ; try { str = decode ( s , _CHAR UTF8 _CHAR ) ; } catch ( UnsupportedEncodingException e ) { } return str ; }
50067	private final static boolean isOwnerAppContextDisposed ( SequencedEvent se ) { if ( se != _NULL ) { Object target = se . nested . getSource ( ) ; if ( target instanceof Component ) { return ( ( Component ) target ) . appContext . isDisposed ( ) ; } } return _BOOL ; }
50073	public ByteVector putByte ( final int b ) { int length = this . length ; if ( length + _NUM > data . length ) { enlarge ( _NUM ) ; } data [ length ++ ] = ( byte ) b ; this . length = length ; return this ; }
50088	public static long copyFile ( File input , OutputStream output ) throws IOException { final FileInputStream fis = new FileInputStream ( input ) ; try { return IOUtils . copyLarge ( fis , output ) ; } finally { fis . close ( ) ; } }
50096	final ElemContext push ( ) { ElemContext frame = this . m_next ; if ( frame == _NULL ) { frame = new ElemContext ( this ) ; this . m_next = frame ; } frame . m_startTagOpen = _BOOL ; return frame ; }
50119	private static synchronized void createReplayThreads ( ) { replayThreads . clear ( ) ; ReentrantLock switchQueueLock = new ReentrantLock ( ) ; for ( int i = _NUM ; i < replayThreadNumber ; i ++ ) { ReplayThread replayThread = new ReplayThread ( updateToReplayQueue , switchQueueLock ) ; replayThread . start ( ) ; replayThreads . add ( replayThread ) ; } }
50122	public void runTest ( ) throws Throwable { Document doc ; Element rootNode ; int nodeType ; doc = ( Document ) load ( _CHAR hc_staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; nodeType = ( int ) rootNode . getNodeType ( ) ; assertEquals ( _CHAR nodeElementNodeTypeAssert1 _CHAR , _NUM , nodeType ) ; }
50147	public void updateLineNumberCount ( int lineNumber , long numOccurrences ) { Long existingCount = lineNumbers . get ( lineNumber ) ; if ( existingCount == _NULL ) { lineNumbers . put ( lineNumber , numOccurrences ) ; } else { lineNumbers . put ( lineNumber , existingCount + numOccurrences ) ; } }
50152	protected void repaintRoot ( JComponent root ) { assert ( repaintManager . repaintRoot == _NULL ) ; if ( repaintManager . painting ) { repaintManager . repaintRoot = root ; } else { root . repaint ( ) ; } }
50163	static public PrintWriter log ( Throwable xcpt , PrintWriter out ) { out . println ( _CHAR ----------- _CHAR ) ; out . println ( xcpt . toString ( ) ) ; out . println ( _CHAR Stack Trace : _CHAR ) ; out . print ( getStackTrace ( xcpt ) ) ; out . println ( _CHAR ----------- _CHAR ) ; out . flush ( ) ; return out ; }
50246	public InputStream openStream ( ) throws IOException { if ( entryName == _NULL ) { return url . openStream ( ) ; } else { URL entryUrl = JarFactory . getJarEntryURL ( url , entryName ) ; return entryUrl . openStream ( ) ; } }
50296	public AuthnStatement createAuthnStatement ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_STATEMENT , xml ) ; if ( obj == _NULL ) { return new AuthnStatementImpl ( xml ) ; } else { return ( AuthnStatement ) obj ; } }
50330	public Action createAction ( org . w3c . dom . Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ACTION , elem ) ; if ( obj == _NULL ) { return new ActionImpl ( elem ) ; } else { return ( Action ) obj ; } }
50341	public NameIDMappingResponse createNameIDMappingResponse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_RES ) ; if ( obj == _NULL ) { return new NameIDMappingResponseImpl ( ) ; } else { return ( NameIDMappingResponse ) obj ; } }
50359	public static boolean isFileNewer ( File file , File reference ) { if ( reference == _NULL ) { throw new IllegalArgumentException ( _CHAR No specified reference file _CHAR ) ; } if ( ! reference . exists ( ) ) { throw new IllegalArgumentException ( _CHAR The reference file _CHAR_CHAR_CHAR does n _CHAR_CHAR ) ; } return isFileNewer ( file , reference . lastModified ( ) ) ; }
50388	void purgeUpTo ( final CSN purgeCSN ) throws ChangelogException { if ( purgeCSN == _NULL ) { return ; } final Record < CSN , UpdateMsg > oldestRecord = log . purgeUpTo ( purgeCSN ) ; if ( oldestRecord != _NULL ) { csnLimits = new CSNLimits ( oldestRecord . getKey ( ) , csnLimits . newestCSN ) ; } }
50395	public void runTest ( ) throws Throwable { Document doc ; DOMImplementation domImpl ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; domImpl = doc . getImplementation ( ) ; state = domImpl . hasFeature ( _CHAR XML _CHAR , _CHAR _CHAR ) ; assertTrue ( _CHAR hasXMLEmpty _CHAR , state ) ; }
50399	private void onTaskFinished ( String queueName ) { synchronized ( syncRoot ) { currentTasksMap . remove ( queueName ) ; DispatcherTask nextTask = dequeueNextTask ( queueName ) ; if ( nextTask != _NULL ) { submit ( nextTask ) ; } } }
50402	public NameIDMappingRequest createNameIDMappingRequest ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_REQ ) ; if ( obj == _NULL ) { return new NameIDMappingRequestImpl ( ) ; } else { return ( NameIDMappingRequest ) obj ; } }
50403	public void addPermittedDomain ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return ; } if ( permittedDomains == _NULL ) { permittedDomains = new ArrayList < > ( ) ; } permittedDomains . add ( domainName ) ; }
50441	public AuthzDecisionStatement createAuthzDecisionStatement ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHZ_DECISION_STATEMENT , xml ) ; if ( obj == _NULL ) { return _NULL ; } else { return ( AuthzDecisionStatement ) obj ; } }
50454	public AuthnQuery createAuthnQuery ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_QUERY , value ) ; if ( obj == _NULL ) { return new AuthnQueryImpl ( value ) ; } else { return ( AuthnQuery ) obj ; } }
50525	public void addResult ( Result result ) throws XACMLException { if ( ! mutable ) { throw new XACMLException ( XACMLSDKUtils . xacmlResourceBundle . getString ( _CHAR objectImmutable _CHAR ) ) ; } if ( results == _NULL ) { results = new ArrayList ( ) ; } results . add ( result ) ; }
50540	public String toString ( ) { StringBuffer sb = new StringBuffer ( _NUM ) ; sb . append ( _CHAR < RemoveEntry xmlns =\ _CHAR _CHAR ) . append ( DiscoConstants . DISCO_NS ) . append ( _CHAR \ _CHAR _CHAR ) ; if ( entryID != _NULL ) { sb . append ( _CHAR entryID =\ _CHAR _CHAR ) . append ( entryID ) . append ( _CHAR \ _CHAR _CHAR ) ; } sb . append ( _CHAR > < / RemoveEntry > _CHAR ) ; return sb . toString ( ) ; }
50547	@ Override public boolean accept ( File file ) { if ( file . isDirectory ( ) ) { File [ ] files = file . listFiles ( ) ; return files == _NULL || files . length == _NUM ; } else { return file . length ( ) == _NUM ; } }
50561	private static int compareTo ( byte [ ] ip1 , byte [ ] ip2 ) { if ( Arrays . areEqual ( ip1 , ip2 ) ) { return _NUM ; } if ( Arrays . areEqual ( max ( ip1 , ip2 ) , ip1 ) ) { return _NUM ; } return - _NUM ; }
50563	private boolean isInteractionResponseExists ( Message msg ) { try { return ( InteractionManager . getInstance ( ) . getInteractionResponseElement ( msg ) != _NULL ) ; } catch ( Exception e ) { IDPPUtils . debug . error ( _CHAR PPRequestHandler . isInteractionResponse _CHAR + _CHAR Exists : Exception while getting interaction response . '' , e ) ; return _BOOL ; } }
50577	public RequesterID createRequesterID ( ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTERID ) ; if ( obj == _NULL ) { return new RequesterIDImpl ( ) ; } else { return ( RequesterID ) obj ; } }
50604	public String toXML ( ) { StringBuilder sb = new StringBuilder ( ) ; Iterator iter = resourceResults . iterator ( ) ; while ( iter . hasNext ( ) ) { ResourceResult rr = ( ResourceResult ) iter . next ( ) ; sb . append ( rr . toXML ( ) ) ; } return sb . toString ( ) ; }
50665	protected void propertyChange ( PropertyChangeEvent evt ) { super . propertyChange ( evt ) ; if ( evt . getPropertyName ( ) . equals ( _CHAR lineWrap _CHAR ) || evt . getPropertyName ( ) . equals ( _CHAR wrapStyleWord _CHAR ) || evt . getPropertyName ( ) . equals ( _CHAR tabSize _CHAR ) ) { modelChanged ( ) ; } else if ( _CHAR editable _CHAR . equals ( evt . getPropertyName ( ) ) ) { updateFocusTraversalKeys ( ) ; } }
50677	public Advice createAdvice ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ADVICE , elem ) ; if ( obj == _NULL ) { return new AdviceImpl ( elem ) ; } else { return ( Advice ) obj ; } }
50699	private void processAck ( RequestEvent r , ServerTransaction tid ) { try { logger . info ( _CHAR Got an ACK ! _CHAR ) ; } catch ( Exception ex ) { logger . error ( _CHAR unexpected exception _CHAR , ex ) ; ChallengeTest . fail ( _CHAR unexpected exception _CHAR ) ; } }
50701	public static void registerConnectionHandler ( ConnectionHandler < ? extends ConnectionHandlerCfg > handler ) { synchronized ( directoryServer . connectionHandlers ) { directoryServer . connectionHandlers . add ( handler ) ; ConnectionHandlerMonitor monitor = new ConnectionHandlerMonitor ( handler ) ; monitor . initializeMonitorProvider ( _NULL ) ; handler . setConnectionHandlerMonitor ( monitor ) ; registerMonitorProvider ( monitor ) ; } }
50713	public void runTest ( ) throws Throwable { Document doc ; DOMImplementation domImpl ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; domImpl = doc . getImplementation ( ) ; state = domImpl . hasFeature ( _CHAR xml _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR domimplementationFeaturexmlVersion2Assert _CHAR , state ) ; }
50728	public static boolean isCertificateException ( Throwable t ) { while ( t != _NULL ) { if ( t instanceof SSLHandshakeException || t instanceof GeneralSecurityException ) { return _BOOL ; } t = t . getCause ( ) ; } return _BOOL ; }
50751	public LogoutRequest createLogoutRequest ( org . w3c . dom . Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_REQUEST , value ) ; if ( obj == _NULL ) { return new LogoutRequestImpl ( value ) ; } else { return ( LogoutRequest ) obj ; } }
50774	public Conditions createConditions ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITIONS ) ; if ( obj == _NULL ) { return new ConditionsImpl ( ) ; } else { return ( Conditions ) obj ; } }
50852	public BaseID createBaseID ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . BASEID , xml ) ; if ( obj == _NULL ) { return new BaseIDImpl ( xml ) ; } else { return ( BaseID ) obj ; } }
50879	private boolean toRetransmitFinalResponse ( int T2 ) { if ( -- retransmissionTicksLeft == _NUM ) { if ( _NUM * prevRetransmissionTicks <= T2 ) this . retransmissionTicksLeft = _NUM * prevRetransmissionTicks ; else this . retransmissionTicksLeft = prevRetransmissionTicks ; this . prevRetransmissionTicks = retransmissionTicksLeft ; return _BOOL ; } else return _BOOL ; }
50884	public void addColumn ( TableColumn aColumn ) { if ( aColumn == _NULL ) { throw new IllegalArgumentException ( _CHAR Object is _NULL _CHAR ) ; } tableColumns . addElement ( aColumn ) ; aColumn . addPropertyChangeListener ( this ) ; invalidateWidthCache ( ) ; fireColumnAdded ( new TableColumnModelEvent ( this , _NUM , getColumnCount ( ) - _NUM ) ) ; }
50887	public AnnotationVisitor visitTypeAnnotation ( int typeRef , TypePath typePath , String desc , boolean visible ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( cv != _NULL ) { return cv . visitTypeAnnotation ( typeRef , typePath , desc , visible ) ; } return _NULL ; }
50916	public char last ( ) { if ( end != begin ) { pos = end - _NUM ; } else { pos = end ; } return current ( ) ; }
50929	public SubjectLocality createSubjectLocality ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_LOCALITY ) ; if ( obj == _NULL ) { return new SubjectLocalityImpl ( ) ; } else { return ( SubjectLocality ) obj ; } }
50937	private void positionClockAndNotifications ( ) { boolean animate = mStackScroller . isAddOrRemoveAnimationPending ( ) ; int stackScrollerPadding = _NUM ; int bottom = mHeader . getCollapsedHeight ( ) ; stackScrollerPadding = bottom + mScrollLayoutPeekHeight + mNotificationTopPadding ; mTopPaddingAdjustment = _NUM ; mStackScroller . setIntrinsicPadding ( stackScrollerPadding ) ; requestScrollerTopPaddingUpdate ( animate ) ; }
50938	public Obligations createObligations ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESOURCE ) ; if ( obj == _NULL ) { return new ObligationsImpl ( ) ; } else { return ( Obligations ) obj ; } }
51020	public void flush ( ) { lock . readLock ( ) . lock ( ) ; try { map . clear ( ) ; } finally { lock . readLock ( ) . unlock ( ) ; } }
51025	public void selectAllAccessibleSelection ( ) { TreeModel model = JTree . this . getModel ( ) ; if ( model != _NULL ) { Object [ ] objPath = { model . getRoot ( ) } ; if ( objPath [ _NUM ] == _NULL ) return ; TreePath path = new TreePath ( objPath ) ; JTree . this . addSelectionPath ( path ) ; } }
51027	JSONStringer open ( Scope empty , String openBracket ) throws JSONException { if ( stack . isEmpty ( ) && out . length ( ) > _NUM ) { throw new JSONException ( _CHAR Nesting problem : multiple top - level roots _CHAR ) ; } beforeValue ( ) ; stack . add ( empty ) ; out . append ( openBracket ) ; return this ; }
51073	private boolean isInternalFrameSystemMenu ( ) { String actionCommand = menuItem . getActionCommand ( ) ; if ( ( actionCommand == _CHAR Close _CHAR ) || ( actionCommand == _CHAR Minimize _CHAR ) || ( actionCommand == _CHAR Restore _CHAR ) || ( actionCommand == _CHAR Maximize _CHAR ) ) { return _BOOL ; } else { return _BOOL ; } }
51086	public < T > T deserialise ( String text , Class < T > clazz ) { try { T value = mapper . readValue ( text , clazz ) ; return value ; } catch ( IOException e ) { throw new IllegalStateException ( MessageFormat . format ( _CHAR Failed to deserailise { _NUM } _CHAR , clazz . getSimpleName ( ) ) , e ) ; } }
51105	public void mark ( int readAheadLimit ) throws IOException { if ( readAheadLimit < _NUM ) { throw new IllegalArgumentException ( _CHAR Read - ahead limit < _NUM _CHAR ) ; } synchronized ( lock ) { ensureOpen ( ) ; mark = next ; } }
51153	public AssertionIDRef createAssertionIDRef ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION_ID_REF , elem ) ; if ( obj == _NULL ) { return new AssertionIDRefImpl ( elem ) ; } else { return ( AssertionIDRef ) obj ; } }
51165	void deregisterAllGroups ( ) { lock . writeLock ( ) . lock ( ) ; try { groupInstances . clear ( ) ; } finally { lock . writeLock ( ) . unlock ( ) ; } }
51195	public Assertion createAssertion ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION , elem ) ; if ( obj == _NULL ) { return new AssertionImpl ( elem ) ; } else { return ( Assertion ) obj ; } }
51202	public NameIDMappingResponse createNameIDMappingResponse ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NAMEIDMAPPING_RES , value ) ; if ( obj == _NULL ) { return new NameIDMappingResponseImpl ( value ) ; } else { return ( NameIDMappingResponse ) obj ; } }
51230	public SubjectConfirmationData createSubjectConfirmationData ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION_DATA ) ; if ( obj == _NULL ) { return new SubjectConfirmationDataImpl ( ) ; } else { return ( SubjectConfirmationData ) obj ; } }
51234	public synchronized void shutdown ( ) { if ( ! destroyed ) { destroyed = _BOOL ; SSL . freeBIO ( networkBIO ) ; SSL . freeSSL ( ssl ) ; ssl = networkBIO = _NUM ; isInboundDone = isOutboundDone = engineClosed = _BOOL ; } }
51240	public static final Index createTestIndexWithBulkDataHit ( ) { Index index = new Index ( _CHAR myindexbulkdata _CHAR ) ; index . setTable ( DB , _CHAR mytable _CHAR ) ; ArrayList < IndexField > fields = new ArrayList < > ( ) ; fields . add ( new IndexField ( _CHAR field1 _CHAR ) ) ; index . setFields ( fields ) ; index . isUnique ( _BOOL ) ; return index ; }
51243	public Object peek ( ) { try { return ( stack . peek ( ) ) ; } catch ( EmptyStackException e ) { log . warn ( _CHAR Empty stack ( returning _NULL ) _CHAR ) ; return ( _NULL ) ; } }
51244	public boolean implies ( Permission permission ) { if ( ! ( permission instanceof DelegationPermission ) ) return _BOOL ; synchronized ( this ) { for ( Permission x : perms ) { if ( x . implies ( permission ) ) return _BOOL ; } } return _BOOL ; }
51246	private void updateMnemonics ( ) { resetMnemonics ( ) ; for ( int counter = tabPane . getTabCount ( ) - _NUM ; counter >= _NUM ; counter -- ) { int mnemonic = tabPane . getMnemonicAt ( counter ) ; if ( mnemonic > _NUM ) { addMnemonic ( counter , mnemonic ) ; } } }
51254	private void waitForClockUpdate ( ) throws InterruptedException { long startTime = System . currentTimeMillis ( ) ; int waitTime = _NUM ; do { Thread . sleep ( waitTime ) ; waitTime *= _NUM ; } while ( System . currentTimeMillis ( ) == startTime ) ; }
51269	public boolean newParentIsEqual ( DN targetDN ) { try { DN newSuperiorDN = newSuperior != _NULL ? DN . valueOf ( newSuperior ) : DN . rootDN ( ) ; return newSuperiorDN . equals ( targetDN ) ; } catch ( LocalizedIllegalArgumentException e ) { return _BOOL ; } }
51295	private void pop ( ) { String removed = encodedPathSegments . remove ( encodedPathSegments . size ( ) - _NUM ) ; if ( removed . isEmpty ( ) && ! encodedPathSegments . isEmpty ( ) ) { encodedPathSegments . set ( encodedPathSegments . size ( ) - _NUM , _CHAR _CHAR ) ; } else { encodedPathSegments . add ( _CHAR _CHAR ) ; } }
51304	@ Get public Representation userCodeForm ( ) throws OAuth2RestletException , InvalidGrantException , NotFoundException , ServerException { final OAuth2Request request = requestFactory . create ( getRequest ( ) ) ; if ( request . getParameter ( OAuth2Constants . DeviceCode . USER_CODE ) != _NULL ) { return verify ( _NULL ) ; } else { return getTemplateRepresentation ( FORM , request , _NULL ) ; } }
51318	public static < T > T unmarshal ( File xml , Class < T > type ) { try { JAXBElement < T > item = getContext ( type ) . createUnmarshaller ( ) . unmarshal ( new StreamSource ( xml ) , type ) ; return item . getValue ( ) ; } catch ( JAXBException e ) { throw new DataBindingException ( e ) ; } }
51343	public static String convertFrameID23To22 ( String identifier ) { if ( identifier . length ( ) < _NUM ) { return _NULL ; } if ( ID3v23Frames . getInstanceOf ( ) . getIdToValueMap ( ) . containsKey ( identifier ) ) { return ID3Frames . convertv23Tov22 . get ( identifier . substring ( _NUM , _NUM ) ) ; } return _NULL ; }
51344	public Condition createCondition ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITION , elem ) ; if ( obj == _NULL ) { return new ConditionImpl ( elem ) ; } else { return ( Condition ) obj ; } }
51364	public Subject createSubject ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT , elem ) ; if ( obj == _NULL ) { return new SubjectImpl ( elem ) ; } else { return ( Subject ) obj ; } }
51388	final void loadText ( Segment segment , int p0 , int p1 ) { try { Document doc = getDocument ( ) ; doc . getText ( p0 , p1 - p0 , segment ) ; } catch ( BadLocationException bl ) { throw new StateInvariantError ( _CHAR Ca n _CHAR_CHAR ) ; } }
51422	private static boolean isTainted ( Object o ) { try { checkTypeSafe ( o ) ; } catch ( IllegalArgumentException e ) { return _BOOL ; } return _BOOL ; }
51441	public void characters ( org . w3c . dom . Node node ) throws org . xml . sax . SAXException { if ( m_state != _NULL ) { m_state . setCurrentNode ( node ) ; } String data = node . getNodeValue ( ) ; if ( data != _NULL ) { this . characters ( data ) ; } }
51460	protected void paintComponent ( Graphics g ) { if ( ui != _NULL ) { super . paintComponent ( g ) ; } else if ( isOpaque ( ) ) { g . setColor ( getBackground ( ) ) ; g . fillRect ( _NUM , _NUM , getWidth ( ) , getHeight ( ) ) ; } }
51470	public boolean isEqualTo ( ChangelogState other ) { if ( other == _NULL ) { return _BOOL ; } if ( this == other ) { return _BOOL ; } return domainToGenerationId . equals ( other . domainToGenerationId ) && domainToServerIds . equals ( other . domainToServerIds ) && offlineReplicas . getSnapshot ( ) . equals ( other . offlineReplicas . getSnapshot ( ) ) ; }
51527	public static boolean isUpperCase ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; for ( int i = _NUM ; i < value . length ( ) ; i ++ ) { if ( Character . isLowerCase ( value . charAt ( i ) ) ) { return _BOOL ; } } return _BOOL ; }
51533	public boolean validate ( Set < String > properties ) { try { validateProperty ( properties ) ; return _BOOL ; } catch ( UnknownPropertyNameException | ConfigurationException ex ) { return _BOOL ; } }
51566	public static boolean isPortInUse ( String hostname , int port ) { try { InetSocketAddress socketAddress = new InetSocketAddress ( hostname , port ) ; return ! isPortBound ( socketAddress ) && ! isPortBeingListenedOn ( socketAddress ) ; } catch ( NullPointerException e ) { return _BOOL ; } }
51577	public void runTest ( ) throws Throwable { Document doc ; Node createdNode ; String localName ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; createdNode = doc . createElement ( _CHAR test : employee _CHAR ) ; localName = createdNode . getLocalName ( ) ; assertNull ( _CHAR localNameNull _CHAR , localName ) ; }
51589	public boolean containsValue ( boolean val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSNumber . class ) ) { NSNumber num = ( NSNumber ) o ; if ( num . isBoolean ( ) && num . boolValue ( ) == val ) return _BOOL ; } } return _BOOL ; }
51634	boolean hasActionListener ( ) { Object [ ] listeners = listenerList . getListenerList ( ) ; for ( int i = listeners . length - _NUM ; i >= _NUM ; i -= _NUM ) { if ( listeners [ i ] == ActionListener . class ) { return _BOOL ; } } return _BOOL ; }
51638	private void copyData ( ) { try { String aLine ; while ( ( aLine = inputReader . readLine ( ) ) != _NULL ) writeHere . println ( aLine ) ; } catch ( Exception exc ) { System . err . println ( classname + _CHAR copyData ( ) input closed _CHAR ) ; } }
51671	public Decision createDecision ( String xml ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . DECISION , xml ) ; if ( object == _NULL ) { return new DecisionImpl ( xml ) ; } else { return ( Decision ) object ; } }
51678	public Resource createResource ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . RESOURCE , elem ) ; if ( obj == _NULL ) { return new ResourceImpl ( elem ) ; } else { return ( Resource ) obj ; } }
51729	public RequesterID createRequesterID ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . REQUESTERID , value ) ; if ( obj == _NULL ) { return new RequesterIDImpl ( value ) ; } else { return ( RequesterID ) obj ; } }
51732	public void write ( Writer out ) throws IOException { Document doc = getDocument ( ) ; try { getUI ( ) . getEditorKit ( this ) . write ( out , doc , _NUM , doc . getLength ( ) ) ; } catch ( BadLocationException e ) { throw new IOException ( e . getMessage ( ) ) ; } }
51754	public boolean validate ( String value ) { try { Integer . parseInt ( value ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
51780	@ Override public Object runScriptOnResource ( ScriptContext request , OperationOptions options ) { if ( _CHAR SHELL _CHAR . equals ( request . getScriptLanguage ( ) ) ) { return _CHAR OK _CHAR ; } else if ( _CHAR Groovy _CHAR . equals ( request . getScriptLanguage ( ) ) ) { return executeGroovyScript ( request ) ; } throw new ConnectorException ( request . getScriptLanguage ( ) + _CHAR script language is not supported _CHAR ) ; }
51790	public static long bytesUsed ( ) { failIfNotInitialized ( ) ; try { return mCache . bytesUsed ( ) ; } catch ( Exception e ) { return - _NUM ; } }
51841	void installBorder ( JRootPane root ) { int style = root . getWindowDecorationStyle ( ) ; if ( style == JRootPane . NONE ) { LookAndFeel . uninstallBorder ( root ) ; } else { LookAndFeel . installBorder ( root , borderKeys [ style ] ) ; } }
51935	public void valueChanged ( TreeSelectionEvent e ) { if ( tree != _NULL ) { if ( tree . getSelectionCount ( ) == _NUM ) lastPath = tree . getSelectionPath ( ) ; else lastPath = _NULL ; } if ( timer != _NULL ) { timer . stop ( ) ; } }
51960	public static boolean isEncoded ( ByteSequence value ) { try { decodeAuthPassword ( value . toString ( ) ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
51983	public boolean equals ( Object object ) { if ( ! ( object instanceof ObjectInstance ) ) { return _BOOL ; } ObjectInstance val = ( ObjectInstance ) object ; if ( ! name . equals ( val . getObjectName ( ) ) ) return _BOOL ; if ( className == _NULL ) return ( val . getClassName ( ) == _NULL ) ; return className . equals ( val . getClassName ( ) ) ; }
51985	public void replace ( Attr attr ) { int index = indexOf ( attr . getName ( ) ) ; if ( index != - _NUM ) { _attrs . set ( index , attr ) ; } else { _attrs . add ( attr ) ; } }
51988	public boolean hasRights ( int rights ) { List < PermBindRulePair > pairs = getPermBindRulePairs ( ) ; for ( PermBindRulePair p : pairs ) { if ( p . hasRights ( rights ) ) { return _BOOL ; } } return _BOOL ; }
52019	public OneTimeUse createOneTimeUse ( Element elem ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ONE_TIME_USE , elem ) ; if ( obj == _NULL ) { return new OneTimeUseImpl ( elem ) ; } else { return ( OneTimeUse ) obj ; } }
52027	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( ( ui != _NULL ) && ( getUIClassID ( ) . equals ( uiClassID ) ) ) { ui . installUI ( this ) ; } if ( getToolTipText ( ) == _NULL && haveRegistered ) { ToolTipManager . sharedInstance ( ) . registerComponent ( this ) ; } }
52054	@ Override public void toString ( StringBuilder buffer ) { buffer . append ( _CHAR ExtendedRequest ( oid = _CHAR ) ; buffer . append ( oid ) ; if ( value != _NULL ) { buffer . append ( _CHAR , value = _CHAR ) ; buffer . append ( value ) ; } buffer . append ( _CHAR ) _CHAR ) ; }
52072	public Extensions createExtensions ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EXTENSIONS , value ) ; if ( obj == _NULL ) { return new ExtensionsImpl ( value ) ; } else { return ( Extensions ) obj ; } }
52136	public Object encode ( Object object ) throws EncoderException { try { byte [ ] byteArray = object instanceof String ? ( ( String ) object ) . getBytes ( ) : ( byte [ ] ) object ; return encodeHex ( byteArray ) ; } catch ( ClassCastException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
52146	public static SAXSource createSAXSource ( InputSource source ) throws JAXBException { try { SAXParser saxParser = getSafeSAXParser ( _BOOL ) ; return new SAXSource ( saxParser . getXMLReader ( ) , source ) ; } catch ( Exception ex ) { throw new JAXBException ( _CHAR Unable to create SAXSource _CHAR , ex ) ; } }
52156	public void removeNotify ( ComponentPeer peer ) { if ( nativePeer != _NULL ) ( ( DropTargetPeer ) nativePeer ) . removeDropTarget ( this ) ; componentPeer = nativePeer = _NULL ; synchronized ( this ) { if ( isDraggingInside ) { dragExit ( new DropTargetEvent ( getDropTargetContext ( ) ) ) ; } } }
52190	String handleGetRestrictedTokenIdRemotely ( SessionID masterSid , TokenRestriction restriction ) { try { return sessionOperationStrategy . getOperation ( masterSid ) . getRestrictedTokenId ( masterSid , restriction ) ; } catch ( Exception ex ) { sessionDebug . error ( _CHAR Failed to create restricted token remotely _CHAR , ex ) ; } return _NULL ; }
52204	public void runTest ( ) throws Throwable { Document doc ; Attr newAttr ; Element elementNode ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; newAttr = doc . createAttribute ( _CHAR newAttribute _CHAR ) ; elementNode = newAttr . getOwnerElement ( ) ; assertNull ( _CHAR throw_Null _CHAR , elementNode ) ; }
52241	public static void w ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_WARNING ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . w ( tag , msg ) ; }
52285	private int fractionalConfigToInt ( ) { if ( ! fractional ) { return NOT_FRACTIONAL ; } else if ( fractionalExclusive ) { return EXCLUSIVE_FRACTIONAL ; } return INCLUSIVE_FRACTIONAL ; }
52323	public static boolean isValidFilter ( String filter ) { try { getFilterFromString ( filter ) ; } catch ( IllegalArgumentException e ) { return _BOOL ; } return _BOOL ; }
52350	private boolean checkFirst ( final byte [ ] msg ) { boolean result = _BOOL ; for ( int i = _NUM ; i < blockSize - _NUM ; i ++ ) { if ( msg [ i ] == _NUM ) { result = _BOOL ; } } return result ; }
52366	public static TempLogFile newTempLogFile ( final String prefix ) { try { return new TempLogFile ( File . createTempFile ( prefix , _CHAR . log _CHAR ) ) ; } catch ( final IOException e ) { localizedLogger . error ( LocalizableMessage . raw ( _CHAR Unable to create temp log file because : _CHAR + e . getMessage ( ) ) , e ) ; return new TempLogFile ( ) ; } }
52421	public static boolean isDate ( String strDate , String pattern ) { try { parseDate ( strDate , pattern ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
52428	public E peek ( int n ) throws EmptyStackException { int m = ( size ( ) - n ) - _NUM ; if ( m < _NUM ) { throw new EmptyStackException ( ) ; } else { return get ( m ) ; } }
52460	public static long decodeResponseValue ( ByteString responseValue ) throws DecodeException { ASN1Reader reader = ASN1 . getReader ( responseValue ) ; try { return reader . readInteger ( ) ; } catch ( Exception e ) { return _NUM ; } }
52462	public void push ( final float value ) { int bits = Float . floatToIntBits ( value ) ; if ( bits == _NUM || bits == _NUM || bits == _NUM ) { mv . visitInsn ( Opcodes . FCONST_0 + ( int ) value ) ; } else { mv . visitLdcInsn ( value ) ; } }
52469	private Object doPrivileged ( final String methodName , final Object [ ] params ) { try { return invokeMethod ( context , methodName , params ) ; } catch ( Throwable t ) { ExceptionUtils . handleThrowable ( t ) ; throw new RuntimeException ( t . getMessage ( ) , t ) ; } }
52475	private static void readIndex ( ) { try { readIndexMulti ( ) ; } catch ( Exception ex ) { throw new AssertionError ( ex ) ; } zoneInfos = new ZoneInfo [ ids . length ] ; }
52509	public Extensions createExtensions ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . EXTENSIONS , value ) ; if ( obj == _NULL ) { return new ExtensionsImpl ( value ) ; } else { return ( Extensions ) obj ; } }
52598	@ Override protected void onStartLoading ( ) { super . onStartLoading ( ) ; if ( objectToRetain != _NULL ) { deliverResult ( objectToRetain ) ; } else { forceLoad ( ) ; } }
52627	public static Date parse ( String dateStr ) { try { return mSimpleDateTimeFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( _CHAR date formatDateTime error _CHAR ) ; } }
52642	boolean isValidProtocolType ( String protocolType ) throws COTException { String classMethod = _CHAR COTManager : isValidProtocolType _CHAR ; if ( ! COTUtils . isValidProtocolType ( protocolType ) ) { debug . error ( classMethod + _CHAR Invalid protocol Type _CHAR + protocolType ) ; String [ ] data = { protocolType } ; throw new COTException ( _CHAR invalidProtocolType _CHAR , data ) ; } return _BOOL ; }
52702	public static Date parseText ( String dateStr ) { try { return mSimpleTextFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( _CHAR date formatDateTime error _CHAR ) ; } }
52744	public AssertionIDRequest createAssertionIDRequest ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ASSERTION_ID_REQUEST , value ) ; if ( obj == _NULL ) { return new AssertionIDRequestImpl ( value ) ; } else { return ( AssertionIDRequest ) obj ; } }
52783	public boolean equals ( Object obj ) { if ( obj instanceof UID ) { UID uid = ( UID ) obj ; return ( unique == uid . unique && count == uid . count && time == uid . time ) ; } else { return _BOOL ; } }
52806	public final boolean hasConflict ( DocumentBuilderSetting other ) { if ( other == _NULL ) { throw new NullPointerException ( _CHAR other _CHAR ) ; } if ( other == this ) { return _BOOL ; } return strategy . hasConflict ( other . strategy ) ; }
52820	public boolean shutdownRequested ( ) { queueReadLock . lock ( ) ; try { return shutdownRequested ; } finally { queueReadLock . unlock ( ) ; } }
52892	private void sendAccessReject ( RadiusRequestContext reqCtx ) { try { reqCtx . send ( new AccessReject ( ) ) ; LOG . message ( _CHAR Rejected access request . '' ) ; } catch ( final Exception e1 ) { LOG . warning ( _CHAR Failed to send AccessReject ( ) response to client . '' ) ; } }
52893	protected void registerChildren ( ) { super . registerChildren ( ) ; registerChild ( PGTITLE , CCPageTitle . class ) ; registerChild ( SEC_MH_COMMON , CCSecondaryMasthead . class ) ; registerChild ( TF_ORIG_CLIENT_TYPE , CCTextField . class ) ; registerChild ( PROPERTY_ATTRIBUTE , AMPropertySheet . class ) ; ptModel . registerChildren ( this ) ; propertySheetModel . registerChildren ( this ) ; }
52895	public Advice createAdvice ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ADVICE ) ; if ( obj == _NULL ) { return new AdviceImpl ( ) ; } else { return ( Advice ) obj ; } }
52899	public Object pop ( ) { try { return ( stack . pop ( ) ) ; } catch ( EmptyStackException e ) { log . warn ( _CHAR Empty stack ( returning _NULL ) _CHAR ) ; return ( _NULL ) ; } }
52930	@ Override public void removeManager ( Manager manager ) { if ( manager instanceof ClusterManager ) { ClusterManager cmgr = ( ClusterManager ) manager ; fireLifecycleEvent ( BEFORE_MANAGERUNREGISTER_EVENT , manager ) ; managers . remove ( getManagerName ( cmgr . getName ( ) , manager ) ) ; cmgr . setCluster ( _NULL ) ; fireLifecycleEvent ( AFTER_MANAGERUNREGISTER_EVENT , manager ) ; } }
52938	@ Override protected void onReceiveResult ( int resultCode , Bundle resultData ) { addressOutput = resultData . getString ( Constants . RESULT_DATA_KEY ) ; displayAddressOutput ( ) ; if ( resultCode == Constants . SUCCESS_RESULT ) { showToast ( getString ( R . string . address_found ) ) ; } addressRequested = _BOOL ; updateUiWidgets ( ) ; }
52957	public LogoutResponse createLogoutResponse ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . LOGOUT_RESPONSE ) ; if ( obj == _NULL ) { return new LogoutResponseImpl ( ) ; } else { return ( LogoutResponse ) obj ; } }
52983	public void close ( ) { try { writer . close ( ) ; JNAOpus . INSTANCE . opus_encoder_destroy ( this . opusEncoder ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
52985	private void notify_writers ( ) { if ( writerLocks . size ( ) > _NUM ) { Object oldest = writerLocks . removeFirst ( ) ; ++ currentWriters ; synchronized ( oldest ) { oldest . notify ( ) ; } } }
53012	public static Subject createSubject ( String tokenId ) { try { SSOToken ssoToken = SSOTokenManager . getInstance ( ) . createSSOToken ( tokenId ) ; return createSubject ( ssoToken ) ; } catch ( SSOException e ) { return _NULL ; } }
53029	public IConfiguration prepareConfiguration ( final HttpServletRequest request , final IConfiguration baseConf ) throws Exception { if ( baseConf != _NULL ) { IConfiguration conf = baseConf . cloneConfiguration ( ) ; conf . prepareConfigurationForRequest ( request ) ; updateResourceTypesPaths ( request , conf ) ; return conf ; } return _NULL ; }
53058	public boolean isComplete ( ) { String s = getParameter ( _CHAR stale _CHAR ) ; if ( _CHAR _BOOL _CHAR . equalsIgnoreCase ( s ) ) { return _BOOL ; } else { return this . complete ; } }
53092	public static void f ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_FATAL ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . wtf ( tag , msg ) ; }
53138	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException , InvalidObjectException { s . defaultReadObject ( ) ; if ( firstDayOfWeek == _NULL ) { throw new InvalidObjectException ( _CHAR firstDayOfWeek is _NULL _CHAR ) ; } if ( minimalDays < _NUM || minimalDays > _NUM ) { throw new InvalidObjectException ( _CHAR Minimal number of days is invalid _CHAR ) ; } }
53143	public void writeModifyDNResult ( final int messageID , final Result result ) throws IOException { logger . trace ( _CHAR ENCODE LDAP MODIFY DN RESULT ( messageID = % d , result = % s ) _CHAR , messageID , result ) ; writeMessageHeader ( messageID ) ; { writeResultHeader ( LDAP . OP_TYPE_MODIFY_DN_RESPONSE , result ) ; writeResultFooter ( writer ) ; } writeMessageFooter ( result . getControls ( ) ) ; }
53152	public static void v ( String tag , String msg , Object ... args ) { if ( sLevel > LEVEL_VERBOSE ) { return ; } if ( args . length > _NUM ) { msg = String . format ( msg , args ) ; } Log . v ( tag , msg ) ; }
53153	public synchronized boolean canUndo ( ) { if ( inProgress ) { UndoableEdit edit = editToBeUndone ( ) ; return edit != _NULL && edit . canUndo ( ) ; } else { return super . canUndo ( ) ; } }
53280	public void initializeStringTable ( ) { stringTable = new byte [ _NUM ] [ ] ; for ( int i = _NUM ; i < _NUM ; i ++ ) { stringTable [ i ] = new byte [ _NUM ] ; stringTable [ i ] [ _NUM ] = ( byte ) i ; } tableIndex = _NUM ; bitsToGet = _NUM ; }
53286	private void finalizeAuthProcess ( RadiusResponse response , ContextHolder holder ) throws RadiusProcessingException { LOG . message ( _CHAR Entering OpenAMAuthHandler . finalizeAuthProcess ( ) _CHAR ) ; final AuthContext . Status status = holder . getAuthContext ( ) . getStatus ( ) ; if ( status . equals ( AuthContext . Status . SUCCESS ) ) { allowAccessAndTerminateProcess ( response , holder ) ; return ; } rejectAccessAndTerminateProcess ( response , holder ) ; }
53289	public boolean equals ( Object o ) { if ( o instanceof LDAPUsers ) { LDAPUsers g = ( LDAPUsers ) o ; if ( ( selectedUserDNs != _NULL ) && ( g . selectedUserDNs != _NULL ) && ( selectedUserDNs . equals ( g . selectedUserDNs ) ) ) { return _BOOL ; } } return _BOOL ; }
53338	public < T > T load ( Class < T > service ) { synchronized ( providers ) { List < RegisteredServiceProvider < ? >> registered = providers . get ( service ) ; if ( registered == _NULL ) { return _NULL ; } return service . cast ( registered . get ( _NUM ) . getProvider ( ) ) ; } }
53341	public static String cropWww ( String domainName ) { if ( StringUtils . isEmpty ( domainName ) ) { return _NULL ; } if ( domainName . startsWith ( _CHAR www . '' ) ) { return domainName . substring ( _NUM ) ; } return domainName ; }
53439	public void runTest ( ) throws Throwable { Document doc ; Node createdNode ; String prefix ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; createdNode = doc . createElement ( _CHAR test : employee _CHAR ) ; prefix = createdNode . getPrefix ( ) ; assertNull ( _CHAR throw_Null _CHAR , prefix ) ; }
53478	public void addAccessibleSelection ( int i ) { TreeModel model = JTree . this . getModel ( ) ; if ( model != _NULL ) { if ( i >= _NUM && i < getAccessibleChildrenCount ( ) ) { TreePath path = getChildTreePath ( i ) ; JTree . this . addSelectionPath ( path ) ; } } }
53548	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SetNextRule [ _CHAR ) ; sb . append ( _CHAR methodName = _CHAR ) ; sb . append ( methodName ) ; sb . append ( _CHAR , paramType = _CHAR ) ; sb . append ( paramType ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
53558	public void delete ( RandomAccessFile raf , RandomAccessFile rafTemp ) throws IOException { Mp4Tag tag = new Mp4Tag ( ) ; try { write ( tag , raf , rafTemp ) ; } catch ( CannotWriteException cwe ) { throw new IOException ( cwe . getMessage ( ) ) ; } }
53569	public void animateViewIfNecessary ( final int position , @ NonNull final View view , @ NonNull final Animator [ ] animators ) { if ( mShouldAnimate && position > mLastAnimatedPosition ) { if ( mFirstAnimatedPosition == - _NUM ) { mFirstAnimatedPosition = position ; } animateView ( position , view , animators ) ; mLastAnimatedPosition = position ; } }
53621	@ Override public boolean removeAll ( Collection c ) { if ( c instanceof CaseInsensitiveHashSet ) { return super . removeAll ( c ) ; } else { Set < String > ciHashSet = new CaseInsensitiveHashSet ( c ) ; return super . removeAll ( ciHashSet ) ; } }
53630	protected PStmtKey createKey ( final String sql ) { String catalog = _NULL ; try { catalog = getCatalog ( ) ; } catch ( final SQLException e ) { } return new PStmtKey ( normalizeSQL ( sql ) , catalog ) ; }
53673	public boolean isDataFlavorSupported ( DataFlavor flavor ) { DataFlavor [ ] flavors = getTransferDataFlavors ( ) ; for ( int i = _NUM ; i < flavors . length ; i ++ ) { if ( flavors [ i ] . equals ( flavor ) ) { return _BOOL ; } } return _BOOL ; }
53682	public Name addAll ( int posn , Name n ) throws InvalidNameException { if ( n instanceof CompositeName ) { impl . addAll ( posn , n . getAll ( ) ) ; return this ; } else { throw new InvalidNameException ( _CHAR Not a composite name : _CHAR + n . toString ( ) ) ; } }
53687	private void initialize ( URI p_other ) { m_scheme = p_other . getScheme ( ) ; m_userinfo = p_other . getUserinfo ( ) ; m_host = p_other . getHost ( ) ; m_port = p_other . getPort ( ) ; m_path = p_other . getPath ( ) ; m_queryString = p_other . getQueryString ( ) ; m_fragment = p_other . getFragment ( ) ; }
53716	public static boolean validate ( SSOToken token , String clazz , Set values ) throws SMSException { try { SMSJAXRPCObject smsObj = new SMSJAXRPCObject ( ) ; return smsObj . validateServiceAttributes ( token , clazz , values ) ; } catch ( SSOException e ) { return _BOOL ; } }
53729	@ Override protected Class < ? > resolveClass ( ObjectStreamClass objectStreamClass ) throws IOException , ClassNotFoundException { Class < ? > clazz = Class . forName ( objectStreamClass . getName ( ) , _BOOL , classLoader ) ; if ( clazz != _NULL ) { return clazz ; } else { return super . resolveClass ( objectStreamClass ) ; } }
53738	protected static final String find ( CharChunk name ) { int pos = findClosest ( name , ccCache , ccCache . length ) ; if ( ( pos < _NUM ) || ( compare ( name , ccCache [ pos ] . name ) != _NUM ) ) { return _NULL ; } else { return ccCache [ pos ] . value ; } }
53741	private static boolean classExists ( final String className ) { try { Class . forName ( className ) ; return _BOOL ; } catch ( ClassNotFoundException | ClassCastException e ) { return _BOOL ; } }
53750	public static void deregisterPasswordStorageScheme ( DN configEntryDN ) { PasswordStorageScheme < ? > scheme = directoryServer . passwordStorageSchemesByDN . remove ( configEntryDN ) ; if ( scheme != _NULL ) { directoryServer . passwordStorageSchemes . remove ( toLowerCase ( scheme . getStorageSchemeName ( ) ) ) ; if ( scheme . supportsAuthPasswordSyntax ( ) ) { directoryServer . authPasswordStorageSchemes . remove ( scheme . getAuthPasswordSchemeName ( ) ) ; } } }
53756	public boolean equals ( Object obj ) { if ( obj instanceof CommandEnvironment ) { CommandEnvironment env = ( CommandEnvironment ) obj ; return ( ( command == _NULL ? env . command == _NULL : command . equals ( env . command ) ) && Arrays . equals ( options , env . options ) ) ; } else { return _BOOL ; } }
53773	public void addPropertyChangeListener ( String propertyName , PropertyChangeListener listener ) { if ( listener == _NULL || propertyName == _NULL ) { return ; } listener = this . map . extract ( listener ) ; if ( listener != _NULL ) { this . map . add ( propertyName , listener ) ; } }
53842	public Name addAll ( Name suffix ) throws InvalidNameException { if ( suffix instanceof CompositeName ) { impl . addAll ( suffix . getAll ( ) ) ; return this ; } else { throw new InvalidNameException ( _CHAR Not a composite name : _CHAR + suffix . toString ( ) ) ; } }
53885	public static boolean isDN ( String candidateDN , int minNumComponent ) { try { return newDN ( candidateDN ) . size ( ) > minNumComponent ; } catch ( LocalizedIllegalArgumentException e ) { DEBUG . error ( _CHAR LDAPUtils . isDN : Invalid DN _CHAR , e ) ; } return _BOOL ; }
53889	public boolean newDNIsEqual ( DN targetDN ) { try { DN newDN = computeNewDN ( ) ; return newDN . equals ( targetDN ) ; } catch ( LocalizedIllegalArgumentException e ) { return _BOOL ; } }
53935	public String toString ( ) { StringBuffer uriSpecString = new StringBuffer ( ) ; if ( m_scheme != _NULL ) { uriSpecString . append ( m_scheme ) ; uriSpecString . append ( _CHAR ) ; } uriSpecString . append ( getSchemeSpecificPart ( ) ) ; return uriSpecString . toString ( ) ; }
53946	public Decision createDecision ( Element elem ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . DECISION , elem ) ; if ( object == _NULL ) { return new DecisionImpl ( elem ) ; } else { return ( Decision ) object ; } }
53949	public SubjectConfirmation createSubjectConfirmation ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION , xml ) ; if ( obj == _NULL ) { return new SubjectConfirmationImpl ( xml ) ; } else { return ( SubjectConfirmation ) obj ; } }
53977	public void paintDirtyRegions ( ) { synchronized ( this ) { Map < Component , Rectangle > tmp = tmpDirtyComponents ; tmpDirtyComponents = dirtyComponents ; dirtyComponents = tmp ; dirtyComponents . clear ( ) ; } paintDirtyRegions ( tmpDirtyComponents ) ; }
53994	@ Override public boolean equals ( Object that ) { if ( this == that ) { return _BOOL ; } if ( ! ( that instanceof EntryID ) ) { return _BOOL ; } return this . id == ( ( EntryID ) that ) . id ; }
54025	public boolean isLocalNotificationService ( URL url ) { try { URL localURL = WebtopNaming . getNotificationURL ( ) ; return isUrlPrefix ( localURL , url ) ; } catch ( URLNotFoundException ex ) { return _BOOL ; } }
54053	public static String encode ( String s ) { String str = _NULL ; try { str = encode ( s , _CHAR UTF8 _CHAR ) ; } catch ( UnsupportedEncodingException e ) { } return str ; }
54089	public static String generateMessageHandleWithServerID ( ) { if ( random == _NULL ) { return _NULL ; } byte bytes [ ] = new byte [ SAML2Constants . ID_LENGTH ] ; random . nextBytes ( bytes ) ; String id = byteArrayToString ( bytes ) ; return embedServerID ( id ) ; }
54105	public Attribute createAttribute ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . ATTRIBUTE ) ; if ( obj == _NULL ) { return new AttributeImpl ( ) ; } else { return ( Attribute ) obj ; } }
54148	public NewID createNewID ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . NEWID , value ) ; if ( obj == _NULL ) { return new NewIDImpl ( value ) ; } else { return ( NewID ) obj ; } }
54157	public final boolean equals ( Object obj ) { if ( toString ( ) == _NULL ) { return ( obj != _NULL ) && ( obj . toString ( ) == _NULL ) ; } if ( obj instanceof Encoding ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
54190	public ImmutableList < MessageType > filterDocumentingMessages ( ProtoContainerElement element ) { ImmutableList . Builder < MessageType > builder = ImmutableList . builder ( ) ; for ( MessageType msg : element . getMessages ( ) ) { if ( ! msg . isMapEntry ( ) ) { builder . add ( msg ) ; } } return builder . build ( ) ; }
54191	public void remove ( MutableTreeNode aChild ) { if ( aChild == _NULL ) { throw new IllegalArgumentException ( _CHAR argument is _NULL _CHAR ) ; } if ( ! isNodeChild ( aChild ) ) { throw new IllegalArgumentException ( _CHAR argument is not a child _CHAR ) ; } remove ( getIndex ( aChild ) ) ; }
54230	public void remove ( int pos ) { if ( pos < _NUM ) { throw new IllegalArgumentException ( _CHAR index less than zero . '' ) ; } if ( pos > getComponentCount ( ) - _NUM ) { throw new IllegalArgumentException ( _CHAR index greater than the number of items . '' ) ; } super . remove ( pos ) ; }
54236	public KeyInfoConfirmationData createKeyInfoConfirmationData ( ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . KEYINFO_CONFIRMATION_DATA ) ; if ( obj == _NULL ) { return new KeyInfoConfirmationDataImpl ( ) ; } else { return ( KeyInfoConfirmationData ) obj ; } }
54277	public Status createStatus ( String xml ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS , xml ) ; if ( object == _NULL ) { return new StatusImpl ( xml ) ; } else { return ( Status ) object ; } }
54278	public void runTest ( ) throws Throwable { Document doc ; Node rootNode ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; state = rootNode . isSupported ( _CHAR core _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR throw_True _CHAR , state ) ; }
54280	public boolean isAffiliationMember ( String providerID , String affID ) { try { return idffMetaManager . isAffiliateMember ( ROOT_REALM , providerID , affID ) ; } catch ( IDFFMetaException imex ) { ProviderUtil . debug . error ( _CHAR IDFFProviderManager . isAffiliationMember : _CHAR , imex ) ; } return _BOOL ; }
54285	public final V updateAndGet ( UnaryOperator < V > updateFunction ) { V prev , next ; do { prev = get ( ) ; next = updateFunction . apply ( prev ) ; } while ( ! compareAndSet ( prev , next ) ) ; return next ; }
54331	public final byte [ ] genExemptionBlob ( ) throws IllegalStateException , ExemptionMechanismException { if ( ! isInit ) { throw new IllegalStateException ( _CHAR ExemptionMechanism is not initialized _CHAR ) ; } generated = _BOOL ; byte [ ] result = spiImpl . engineGenExemptionBlob ( ) ; generated = _BOOL ; return result ; }
54420	public boolean add ( Object attrVal ) { if ( isOrdered ( ) || ( find ( attrVal ) < _NUM ) ) { values . addElement ( attrVal ) ; return _BOOL ; } else { return _BOOL ; } }
54441	public void resetStatistics ( ) { totalRequestTime = _NUM ; totalSendTime = _NUM ; lastSendTime = _NUM ; nrOfFilterRequests = _NUM ; nrOfRequests = _NUM ; nrOfSendRequests = _NUM ; nrOfCrossContextSendRequests = _NUM ; }
54473	public AttributeStatement createAttributeStatement ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ATTRIBUTE_STATEMENT , xml ) ; if ( obj == _NULL ) { return new AttributeStatementImpl ( xml ) ; } else { return ( AttributeStatement ) obj ; } }
54503	private void removeClearedReferences ( final Iterator < PooledSoftReference < T >> iterator ) { PooledSoftReference < T > ref ; while ( iterator . hasNext ( ) ) { ref = iterator . next ( ) ; if ( ref . getReference ( ) == _NULL || ref . getReference ( ) . isEnqueued ( ) ) { iterator . remove ( ) ; } } }
54612	public StatusMessage createStatusMessage ( String value ) { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . STATUS_MESSAGE , value ) ; if ( obj == _NULL ) { return new StatusMessageImpl ( value ) ; } else { return ( StatusMessage ) obj ; } }
54649	public synchronized void stop ( ) { if ( isRunning == _BOOL ) return ; isRunning = _BOOL ; removeAllOperations ( ) ; operationHandlerThread . quit ( ) ; operationHandlerThread = _NULL ; operationHandlerThreadHandler = _NULL ; bundle . clear ( ) ; }
54673	private synchronized void readObject ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { synchronized ( BeanContext . globalHierarchyLock ) { ois . defaultReadObject ( ) ; initialize ( ) ; bcsPreDeserializationHook ( ois ) ; if ( serializable > _NUM && this . equals ( getBeanContextPeer ( ) ) ) readChildren ( ois ) ; deserialize ( ois , bcmListeners = new ArrayList ( _NUM ) ) ; } }
54687	private FSLogoutStatus doHttpGet ( String providerId ) { FSUtils . debug . message ( _CHAR doHttpGet - Entered _CHAR ) ; if ( isWMLAgent ) { return doWMLGet ( providerId ) ; } else { return doHTMLGet ( providerId ) ; } }
54751	public static HostPort toHostPort ( String ldapUrl ) throws LdapException { try { URI uri = new URI ( ldapUrl ) ; return new HostPort ( uri . getHost ( ) , uri . getPort ( ) ) ; } catch ( URISyntaxException e ) { throw newLdapException ( CLIENT_SIDE_PARAM_ERROR , e . getLocalizedMessage ( ) + _CHAR . LDAP URL was : \ _CHAR _CHAR + ldapUrl + _CHAR \ _CHAR _CHAR ) ; } }
54772	private boolean isValidCommandMethod ( Object service , String commandName ) { try { service . getClass ( ) . getMethod ( commandName , InputStream . class , PrintStream . class , String [ ] . class ) ; return _BOOL ; } catch ( NoSuchMethodException e ) { return _BOOL ; } }
54896	public static void convert ( RandomAccessFileOrArray input , OutputStream output ) throws java . io . IOException { Pfm2afm p = new Pfm2afm ( input , output ) ; p . openpfm ( ) ; p . putheader ( ) ; p . putchartab ( ) ; p . putkerntab ( ) ; p . puttrailer ( ) ; p . output . flush ( ) ; }
54909	public Subject createSubject ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . SUBJECT ) ; if ( obj == _NULL ) { return new SubjectImpl ( ) ; } else { return ( Subject ) obj ; } }
54911	public void runTest ( ) throws Throwable { Document doc ; Element element ; String tagname ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; element = doc . getElementById ( _CHAR CANADA _CHAR ) ; tagname = element . getTagName ( ) ; assertEquals ( _CHAR throw_Equals _CHAR , _CHAR emp : address _CHAR , tagname ) ; }
54957	public void grantReadPermission ( Collection attributeNames ) { Iterator it = attributeNames . iterator ( ) ; if ( it != _NULL ) { while ( it . hasNext ( ) ) { String temp = ( String ) it . next ( ) ; readables . add ( temp . toLowerCase ( ) ) ; } } }
54964	public XACMLAuthzDecisionStatement createXACMLAuthzDecisionStatement ( ) { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . XACML_AUTHZ_DECISION_STATEMENT ) ; if ( obj == _NULL ) { return new XACMLAuthzDecisionStatementImpl ( ) ; } else { return ( XACMLAuthzDecisionStatement ) obj ; } }
54981	public void applyModification ( Modification mod , boolean relaxConstraints ) throws DirectoryException { AttributeType t = mod . getAttribute ( ) . getAttributeDescription ( ) . getAttributeType ( ) ; if ( t . isObjectClass ( ) ) { applyModificationToObjectclass ( mod , relaxConstraints ) ; } else { applyModificationToNonObjectclass ( mod , relaxConstraints ) ; } }
55026	private int hashCode ( Collection < List < Attribute >> attributesLists ) { int result = _NUM ; for ( List < Attribute > attributes : attributesLists ) { for ( Attribute a : attributes ) { result += a . hashCode ( ) ; } } return result ; }
55030	public AuthnRequest createAuthnRequest ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . AUTHN_REQUEST , value ) ; if ( obj == _NULL ) { return new AuthnRequestImpl ( value ) ; } else { return ( AuthnRequest ) obj ; } }
55037	public static byte [ ] toByteArray ( URL url ) throws IOException { URLConnection conn = url . openConnection ( ) ; try { return IOUtils . toByteArray ( conn ) ; } finally { close ( conn ) ; } }
55048	private void writeObject ( ObjectOutputStream out ) throws IOException { if ( diff == _NULL ) { out . writeBoolean ( _BOOL ) ; } else { out . writeBoolean ( _BOOL ) ; out . writeUTF ( diff ) ; } }
55068	public static String decodeAsUTF8String ( String s ) { byte [ ] decodedValue = decode ( s ) ; if ( decodedValue != _NULL ) { return new String ( decode ( s ) , Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ; } else { return _NULL ; } }
55108	@ Override public synchronized void start ( int svc ) throws ChannelException { setupDefaultStack ( ) ; if ( optionCheck ) checkOptionFlags ( ) ; super . start ( svc ) ; if ( hbthread == _NULL && heartbeat ) { hbthread = new HeartbeatThread ( this , heartbeatSleeptime ) ; hbthread . start ( ) ; } }
55113	public final boolean equals ( Object obj ) { if ( toString ( ) == _NULL ) { return ( obj != _NULL ) && ( obj . toString ( ) == _NULL ) ; } if ( obj instanceof Type ) { return toString ( ) . equals ( obj . toString ( ) ) ; } return _BOOL ; }
55130	public boolean equals ( Object o ) { if ( o instanceof LDAPGroups ) { LDAPGroups g = ( LDAPGroups ) o ; if ( ( selectedGroupDNs != _NULL ) && ( g . selectedGroupDNs != _NULL ) && ( selectedGroupDNs . equals ( g . selectedGroupDNs ) ) ) { return _BOOL ; } } return _BOOL ; }
55134	private Bindings mergeBindings ( Bindings ... allBindings ) { Bindings result = new SimpleBindings ( ) ; for ( Bindings scope : allBindings ) { if ( scope != _NULL ) { result = new ChainedBindings ( result , scope ) ; } } return result ; }
55157	public int compareTo ( java . util . Date o ) { if ( o instanceof Timestamp ) { return compareTo ( ( Timestamp ) o ) ; } else { Timestamp ts = new Timestamp ( o . getTime ( ) ) ; return this . compareTo ( ts ) ; } }
55167	private static boolean isBinary ( Map map ) { if ( map instanceof AMHashMap ) { return ( ( AMHashMap ) map ) . isByteValues ( ) ; } else if ( map != _NULL && ! map . isEmpty ( ) ) { return map . values ( ) . iterator ( ) . next ( ) instanceof byte [ ] [ ] ; } return _BOOL ; }
55220	public boolean isWrapperFor ( Class < ? > wrappedType ) { if ( wrappedType . isAssignableFrom ( response . getClass ( ) ) ) { return _BOOL ; } if ( response instanceof ServletResponseWrapper ) { return ( ( ServletResponseWrapper ) response ) . isWrapperFor ( wrappedType ) ; } return _BOOL ; }
55224	private void updateDNValue ( ) { String value = name . getText ( ) . trim ( ) ; if ( value . length ( ) > _NUM ) { dn . setText ( _CHAR ou _CHAR + _CHAR = _CHAR + value + _CHAR , _CHAR + parentNode . getDN ( ) ) ; } else { dn . setText ( _CHAR , _CHAR + parentNode . getDN ( ) ) ; } }
55267	public void runTest ( ) throws Throwable { Document doc ; DOMImplementation docImpl ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; docImpl = doc . getImplementation ( ) ; state = docImpl . hasFeature ( _CHAR XML _CHAR , _CHAR _NUM . _NUM _CHAR ) ; assertTrue ( _CHAR documentGetImplementationAssert _CHAR , state ) ; }
55312	public Scoping createScoping ( Element value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SCOPING , value ) ; if ( obj == _NULL ) { return new ScopingImpl ( value ) ; } else { return ( Scoping ) obj ; } }
55325	public static final Document createTestDocument2 ( ) { Document entity = new Document ( ) ; entity . setTable ( _CHAR mydb _CHAR , _CHAR mytable _CHAR ) ; entity . setObjectAsString ( _CHAR { \ _CHAR greeting \ _CHAR : \ _CHAR hello \ _CHAR , \ _CHAR myindexedfield \ _CHAR : \ _CHAR this is my field \ _CHAR , \ _CHAR myindexedfield1 \ _CHAR : \ _CHAR my second field \ _CHAR , \ _CHAR myindexedfield2 \ _CHAR : \ _CHAR my third field \ _CHAR } _CHAR ) ; entity . setUuid ( new UUID ( _NUM , _NUM ) ) ; entity . setCreatedAt ( new Date ( ) ) ; entity . setUpdatedAt ( new Date ( ) ) ; return entity ; }
55373	public EncryptedAssertion createEncryptedAssertion ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . ENCRYPTED_ASSERTION , xml ) ; if ( obj == _NULL ) { return new EncryptedAssertionImpl ( xml ) ; } else { return ( EncryptedAssertion ) obj ; } }
55385	public void clearance_value_changed ( ) { Iterator < AwtreeShapeSearch > iter = search_trees . iterator ( ) ; while ( iter . hasNext ( ) ) { AwtreeShapeSearch curr_tree = iter . next ( ) ; if ( curr_tree . compensated_clearance_class_no != default_tree . compensated_clearance_class_no ) { iter . remove ( ) ; } } }
55386	public char next ( ) { pos += _NUM ; int end = offset + count ; if ( pos >= end ) { pos = end ; return DONE ; } return current ( ) ; }
55397	public void runTest ( ) throws Throwable { Document doc ; Node rootNode ; boolean state ; doc = ( Document ) load ( _CHAR staff _CHAR , _BOOL ) ; rootNode = doc . getDocumentElement ( ) ; state = rootNode . isSupported ( _CHAR Core _CHAR , _CHAR _CHAR ) ; assertTrue ( _CHAR Core _CHAR , state ) ; }
55400	public static Date parseTime ( String dateStr ) { try { return mSimpleTimeFormat . parse ( dateStr ) ; } catch ( ParseException e ) { e . printStackTrace ( ) ; throw new RuntimeException ( _CHAR date formatDateTime error _CHAR ) ; } }
55439	private boolean tokenClientExists ( String clientId , String relam , Context context ) { try { clientRegistrationStore . get ( clientId , relam , context ) ; } catch ( InvalidClientException | NotFoundException e ) { return _BOOL ; } return _BOOL ; }
55467	public void grantWritePermission ( Collection attributeNames ) { Iterator it = attributeNames . iterator ( ) ; if ( it != _NULL ) { while ( it . hasNext ( ) ) { String temp = ( String ) it . next ( ) ; writables . add ( temp . toLowerCase ( ) ) ; } } }
55474	public SubjectConfirmationData createSubjectConfirmationData ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . SUBJECT_CONFIRMATION_DATA , xml ) ; if ( obj == _NULL ) { return new SubjectConfirmationDataImpl ( xml ) ; } else { return ( SubjectConfirmationData ) obj ; } }
55507	public Builder removeUnicodeLocaleAttribute ( String attribute ) { try { localeBuilder . removeUnicodeLocaleAttribute ( attribute ) ; } catch ( LocaleSyntaxException e ) { throw new IllformedLocaleException ( e . getMessage ( ) , e . getErrorIndex ( ) ) ; } return this ; }
55509	protected void writeLeaf ( Element elem ) throws IOException { indent ( ) ; if ( elem . getName ( ) == StyleConstants . IconElementName ) { writeImage ( elem ) ; } else if ( elem . getName ( ) == StyleConstants . ComponentElementName ) { writeComponent ( elem ) ; } }
55525	void installListeners ( ) { Window [ ] windows = getOwnedWindows ( ) ; for ( Window window : windows ) { if ( window != _NULL ) { window . removeWindowListener ( this ) ; window . addWindowListener ( this ) ; } } }
55569	public int available ( ) throws IOException { ensureOpen ( ) ; if ( entryEOF ) { return _NUM ; } else { return _NUM ; } }
55580	private E dequeue ( ) { Node < E > h = head ; Node < E > first = h . next ; h . next = h ; head = first ; E x = first . item ; first . item = _NULL ; return x ; }
55614	public static void initCause ( Throwable throwable , Throwable cause ) { if ( INIT_CAUSE_METHOD != _NULL ) { try { INIT_CAUSE_METHOD . invoke ( throwable , new Object [ ] { cause } ) ; } catch ( Exception e ) { } } }
55647	public void appendByteChunk ( ByteChunk bc ) { if ( bc == _NULL ) { log . error ( sm . getString ( _CHAR ajpmessage . null _CHAR ) , new NullPointerException ( ) ) ; appendInt ( _NUM ) ; appendByte ( _NUM ) ; return ; } appendBytes ( bc . getBytes ( ) , bc . getStart ( ) , bc . getLength ( ) ) ; }
55654	public static byte stringToToken ( String value ) { try { Field f = Token . class . getField ( value ) ; return f . getByte ( _NULL ) ; } catch ( Exception e ) { return - _NUM ; } }
55667	protected void postClosingEvent ( JInternalFrame frame ) { InternalFrameEvent e = new InternalFrameEvent ( frame , InternalFrameEvent . INTERNAL_FRAME_CLOSING ) ; try { Toolkit . getDefaultToolkit ( ) . getSystemEventQueue ( ) . postEvent ( e ) ; } catch ( SecurityException se ) { frame . dispatchEvent ( e ) ; } }
55681	public void removeRange ( int fromIndex , int toIndex ) { if ( fromIndex > toIndex ) { throw new IllegalArgumentException ( _CHAR fromIndex must be <= toIndex _CHAR ) ; } for ( int i = toIndex ; i >= fromIndex ; i -- ) { delegate . removeElementAt ( i ) ; } fireIntervalRemoved ( this , fromIndex , toIndex ) ; }
55685	public boolean managedObjectExists ( ManagedObjectPath < ? , ? > path ) { DN targetDN = DNBuilder . create ( path ) ; try { return configRepository . getEntry ( targetDN ) != _NULL ; } catch ( ConfigException e ) { return _BOOL ; } }
55690	public boolean containsValue ( long val ) { for ( NSObject o : dict . values ( ) ) { if ( o . getClass ( ) . equals ( NSNumber . class ) ) { NSNumber num = ( NSNumber ) o ; if ( num . isInteger ( ) && num . intValue ( ) == val ) return _BOOL ; } } return _BOOL ; }
55714	private boolean is_legal_class_name ( String p_string ) { if ( p_string . equals ( _CHAR _CHAR ) ) return _BOOL ; for ( int i = _NUM ; i < reserved_name_chars . length ; ++ i ) { if ( p_string . contains ( reserved_name_chars [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
55716	public boolean isRealmSubject ( String subjectName ) throws NameNotFoundException { if ( ! users . containsKey ( subjectName ) ) { String [ ] objs = { subjectName } ; throw ( new NameNotFoundException ( ResBundleUtils . rbName , _CHAR name_not_present _CHAR , objs , subjectName , PolicyException . USER_COLLECTION ) ) ; } else { return ( ( QualifiedSubject ) users . get ( subjectName ) ) . isRealmSubject ( ) ; } }
55747	protected void pushMessage ( byte [ ] data , boolean reconnect , boolean waitForAck ) throws IOException { keepalive ( ) ; if ( reconnect ) closeSocket ( ) ; if ( ! isConnected ( ) ) openSocket ( ) ; soOut . write ( data ) ; soOut . flush ( ) ; if ( waitForAck ) waitForAck ( ) ; SenderState . getSenderState ( getDestination ( ) ) . setReady ( ) ; }
55749	@ Deprecated public static Component findFocusOwner ( Component c ) { Component focusOwner = KeyboardFocusManager . getCurrentKeyboardFocusManager ( ) . getFocusOwner ( ) ; for ( Component temp = focusOwner ; temp != _NULL ; temp = ( temp instanceof Window ) ? _NULL : temp . getParent ( ) ) { if ( temp == c ) { return focusOwner ; } } return _NULL ; }
55759	public void save ( java . io . ObjectOutputStream p_object_stream ) { try { p_object_stream . writeObject ( filter_string . getText ( ) ) ; } catch ( java . io . IOException e ) { System . out . println ( _CHAR WindowObjectListWithFilter . save : save failed _CHAR ) ; } super . save ( p_object_stream ) ; }
55765	public boolean equals ( Object object ) { if ( this == object ) { return _BOOL ; } else if ( object == _NULL || getClass ( ) != object . getClass ( ) ) { return _BOOL ; } return principal . equals ( object . toString ( ) ) ; }
55804	public long length ( ) { try { checkClosed ( ) ; return raf . length ( ) ; } catch ( IOException e ) { return - _NUM ; } }
55816	public Name addAll ( int posn , Name n ) throws InvalidNameException { if ( n instanceof CompoundName ) { impl . addAll ( posn , n . getAll ( ) ) ; return this ; } else { throw new InvalidNameException ( _CHAR Not a compound name : _CHAR + n . toString ( ) ) ; } }
55830	public void makeImmutable ( ) { if ( isMutable ) { super . makeImmutable ( ) ; if ( ( nameid != _NULL ) && ( nameid . isMutable ( ) ) ) { nameid . makeImmutable ( ) ; } isMutable = _BOOL ; } }
55840	public ManageNameIDResponse createManageNameIDResponse ( String value ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . MANAGE_NAMEID_RESPONSE , value ) ; if ( obj == _NULL ) { return new ManageNameIDResponseImpl ( value ) ; } else { return ( ManageNameIDResponse ) obj ; } }
55848	@ Override public Foo create ( long fooId ) { Foo foo = new FooImpl ( ) ; foo . setNew ( _BOOL ) ; foo . setPrimaryKey ( fooId ) ; String uuid = PortalUUIDUtil . generate ( ) ; foo . setUuid ( uuid ) ; foo . setCompanyId ( companyProvider . getCompanyId ( ) ) ; return foo ; }
55882	public static boolean isValidFilter ( String filter ) { try { getFilterFromString ( filter ) ; } catch ( IllegalArgumentException e ) { return _BOOL ; } return _BOOL ; }
55892	private static boolean isURLEncoded ( String s ) { boolean urlEncoded = _BOOL ; if ( s != _NULL ) { if ( ( s . indexOf ( _CHAR % _CHAR ) != - _NUM ) || ( s . indexOf ( _CHAR + _CHAR ) != - _NUM ) ) { urlEncoded = _BOOL ; } } return urlEncoded ; }
55908	public void runTest ( ) throws Throwable { Document doc ; Element docElem ; NodeList elementList ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; docElem = doc . getDocumentElement ( ) ; elementList = docElem . getElementsByTagNameNS ( _CHAR http : // www . nist . gov '' , '' address '' ) ; assertSize ( '' addresses '' , 3 , elementList ) ; }
55917	private void createAndRegisterRemainingWorkflows ( ) throws ConfigException { try { createAndRegisterWorkflows ( getConfigurationBackend ( ) ) ; createAndRegisterWorkflows ( rootDSEBackend ) ; } catch ( DirectoryException de ) { throw new ConfigException ( de . getMessageObject ( ) ) ; } }
55927	private final void dispatachChars ( Node node ) throws org . xml . sax . SAXException { if ( fSerializer != _NULL ) { this . fSerializer . characters ( node ) ; } else { String data = ( ( Text ) node ) . getData ( ) ; this . fSerializer . characters ( data . toCharArray ( ) , _NUM , data . length ( ) ) ; } }
55930	public void addBinaryAttr ( Attr attr ) { Attr attr1 = findAttribute ( attr . getName ( ) ) ; if ( attr1 == _NULL ) { _attrs . add ( attr ) ; } else { attr1 . addValues ( attr . getByteValues ( ) ) ; } }
55966	public ValidationMessage [ ] validate ( PageData thePage ) { TagLibraryValidator tlv = getTagLibraryValidator ( ) ; if ( tlv == _NULL ) return _NULL ; String uri = getURI ( ) ; if ( uri . startsWith ( _CHAR / _CHAR ) ) { uri = URN_JSPTLD + uri ; } return tlv . validate ( getPrefixString ( ) , uri , thePage ) ; }
55969	private void registerAddListener ( DN baseDN , ConfigAddListener adaptor ) throws ConfigException { if ( configRepository . hasEntry ( baseDN ) ) { configRepository . registerAddListener ( baseDN , adaptor ) ; } else { ConfigAddListener delayedListener = new DelayedConfigAddListener ( baseDN , adaptor , configRepository ) ; registerDelayedListener ( baseDN , delayedListener ) ; } }
56081	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { try { handleButton1Request ( getCachedPolicy ( ) ) ; } catch ( AMConsoleException e ) { debug . warning ( _CHAR ConditionEditViewBean . handleButton1Request _CHAR , e ) ; redirectToStartURL ( ) ; } }
56131	public Conditions createConditions ( String xml ) throws SAML2Exception { Object obj = SAML2SDKUtils . getObjectInstance ( SAML2SDKUtils . CONDITIONS , xml ) ; if ( obj == _NULL ) { return new ConditionsImpl ( xml ) ; } else { return ( Conditions ) obj ; } }
56165	public static boolean isWhiteSpace ( String s ) { if ( _NULL != s ) { int n = s . length ( ) ; for ( int i = _NUM ; i < n ; i ++ ) { if ( ! isWhiteSpace ( s . charAt ( i ) ) ) return _BOOL ; } } return _BOOL ; }
56212	public StatusCode createStatusCode ( ) throws XACMLException { Object object = XACMLSDKUtils . getObjectInstance ( XACMLConstants . STATUS_CODE ) ; if ( object == _NULL ) { return new StatusCodeImpl ( ) ; } else { return ( StatusCode ) object ; } }
56221	public Subject createSubject ( Element elem ) throws XACMLException { Object obj = XACMLSDKUtils . getObjectInstance ( XACMLConstants . SUBJECT , elem ) ; if ( obj == _NULL ) { return new SubjectImpl ( elem ) ; } else { return ( Subject ) obj ; } }
56222	private void flushMyWriter ( ) { if ( m_writer != _NULL ) { try { m_writer . flush ( ) ; } catch ( IOException ioe ) { } } }
56259	public void logp ( Level level , String sourceClass , String sourceMethod , String msg ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; lr . setSourceClassName ( sourceClass ) ; lr . setSourceMethodName ( sourceMethod ) ; doLog ( lr ) ; }
56280	public Header nextHeader ( ) throws NoSuchElementException { final int current = this . currentIndex ; if ( current < _NUM ) { throw new NoSuchElementException ( _CHAR Iteration already finished . '' ) ; } this . lastIndex = current ; this . currentIndex = findNext ( current ) ; return ( Header ) this . allHeaders . get ( current ) ; }
56283	public char last ( ) { if ( chars . length > _NUM ) { pos = chars . length - _NUM ; } else { pos = _NUM ; } return current ( ) ; }
56295	public static synchronized void deregisterSupportedLDAPVersion ( int supportedLDAPVersion , ConnectionHandler < ? > connectionHandler ) { List < ConnectionHandler < ? >> handlers = directoryServer . supportedLDAPVersions . get ( supportedLDAPVersion ) ; if ( handlers != _NULL ) { handlers . remove ( connectionHandler ) ; if ( handlers . isEmpty ( ) ) { directoryServer . supportedLDAPVersions . remove ( supportedLDAPVersion ) ; } } }
56325	private void skipToEndOfLine ( ) { for ( ; pos < in . length ( ) ; pos ++ ) { char c = in . charAt ( pos ) ; if ( c == _CHAR || c == _CHAR ) { pos ++ ; break ; } } }
56332	public boolean hasValue ( ) throws SdpParseException { NameValue nameValue = getAttribute ( ) ; if ( nameValue == _NULL ) return _BOOL ; else { Object value = nameValue . getValueAsObject ( ) ; if ( value == _NULL ) return _BOOL ; else return _BOOL ; } }
