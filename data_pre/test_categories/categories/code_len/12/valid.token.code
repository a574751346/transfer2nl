43	private static boolean treeHasConflicts ( Node root ) { if ( root . isConflicted ) { return _BOOL ; } for ( Node n : root . children ) { if ( treeHasConflicts ( n ) ) { return _BOOL ; } } return _BOOL ; }
110	public void onDrawerOpened ( View drawerView ) { super . onDrawerOpened ( drawerView ) ; try { if ( pokemonGo != _NULL && pokemonGo . getPlayerProfile ( ) != _NULL ) { renderProfile ( pokemonGo . getPlayerProfile ( ) ) ; } } catch ( Exception e ) { } getSupportActionBar ( ) . setTitle ( R . string . profile ) ; }
169	public int addRow ( ) { int r ; if ( m_openrows == _NULL || m_openrows . isEmpty ( ) ) { r = ( m_firstid == _NUM ? ++ m_curid : -- m_firstid ) ; } else { int key = m_openrows . firstKey ( ) ; r = m_openrows . remove ( key ) ; } return r ; }
191	public boolean interiorContains ( double p ) { if ( p == - S2 . M_PI ) { p = S2 . M_PI ; } if ( isInverted ( ) ) { return p > lo ( ) || p < hi ( ) ; } else { return ( p > lo ( ) && p < hi ( ) ) || isFull ( ) ; } }
212	public static void closeReader ( ) { try { if ( reader != _NULL ) { reader . close ( ) ; reader = _NULL ; } } catch ( IOException e ) { e . printStackTrace ( ) ; } }
219	public SiteAdminGridRow selectPageByTitle ( String title ) { final SiteAdminGridRow row = getRowByTitle ( title ) ; if ( row != _NULL ) { selectRow ( row ) ; } else { String msg = String . format ( _CHAR Could not find a page titled % s _CHAR , title ) ; throw new IllegalArgumentException ( msg ) ; } return row ; }
236	private List < CarbonDictionaryColumnMetaChunk > readDictionaryMetadataFile ( ) throws IOException { CarbonDictionaryMetadataReaderImpl columnMetadataReaderImpl = new CarbonDictionaryMetadataReaderImpl ( this . carbonStorePath , this . carbonTableIdentifier , this . columnIdentifier ) ; List < CarbonDictionaryColumnMetaChunk > dictionaryMetaChunkList = _NULL ; try { dictionaryMetaChunkList = columnMetadataReaderImpl . read ( ) ; } finally { columnMetadataReaderImpl . close ( ) ; } return dictionaryMetaChunkList ; }
283	public void writeChar ( char value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeChar ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
296	private void preProcess ( ProgramNotificationTemplate template ) { if ( template . getNotificationTrigger ( ) . isImmediate ( ) ) { template . setRelativeScheduledDays ( _NULL ) ; } if ( NotificationRecipient . USER_GROUP != template . getNotificationRecipient ( ) ) { template . setRecipientUserGroup ( _NULL ) ; } if ( ! ( template . getNotificationRecipient ( ) . isExternalRecipient ( ) ) ) { template . setDeliveryChannels ( Sets . newHashSet ( ) ) ; } }
323	public boolean isManagedBy ( User user ) { if ( user == _NULL || user . getGroups ( ) == _NULL ) { return _BOOL ; } for ( UserGroup group : user . getGroups ( ) ) { if ( isManagedBy ( group ) ) { return _BOOL ; } } return _BOOL ; }
488	protected void checkProperty ( String propertyId ) throws XMLConfigurationException { if ( ! fRecognizedProperties . contains ( propertyId ) ) { if ( fParentSettings != _NULL ) { fParentSettings . getProperty ( propertyId ) ; } else { short type = XMLConfigurationException . NOT_RECOGNIZED ; throw new XMLConfigurationException ( type , propertyId ) ; } } }
600	public static Shape parse ( String s , ShapeFormat shapeFormat ) { try { return fromSpatial4JShape ( getReader ( shapeFormat ) . read ( s ) ) ; } catch ( IOException e ) { throw new IllegalStateException ( _CHAR Failed to parse shape using _CHAR + shapeFormat , e ) ; } catch ( ParseException e ) { throw new IllegalArgumentException ( _CHAR Failed to parse shape using _CHAR + shapeFormat , e ) ; } }
609	public static ContextSet singleton ( String key , String value ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value _CHAR ) ; } MutableContextSet set = new MutableContextSet ( ) ; set . add ( key , value ) ; return set . immutableCopy ( ) ; }
675	public void stopDragDropInteraction ( ) { for ( Layer layer : myLayers ) { if ( layer instanceof ConstraintsLayer ) { ConstraintsLayer constraintsLayer = ( ConstraintsLayer ) layer ; if ( constraintsLayer . isShowOnHover ( ) ) { constraintsLayer . setShowOnHover ( _BOOL ) ; repaint ( ) ; } } } }
869	public synchronized void stopCollecting ( ) { started = _BOOL ; if ( thread != _NULL ) { try { thread . join ( ) ; } catch ( InterruptedException e ) { } thread = _NULL ; } }
1079	private void toggleSelection ( final int position ) { mTicketsAdapter . toggleSelection ( position ) ; int count = mTicketsAdapter . getSelectedItemCount ( ) ; if ( count == _NUM ) { mActionMode . finish ( ) ; } else { mActionMode . setTitle ( String . valueOf ( count ) ) ; mActionMode . invalidate ( ) ; } }
1108	@ Override public void startCDATA ( Augmentations augs ) throws XNIException { fInCDATASection = _BOOL ; if ( ! fDeferNodeExpansion ) { if ( fFilterReject ) { return ; } if ( fCreateCDATANodes ) { setCharacterData ( _BOOL ) ; } } }
1115	private String modifyProjectName ( String originalProjectName ) { final StringBuffer buffer = new StringBuffer ( ) ; if ( getProjectNamePrefix ( ) != _NULL ) { buffer . append ( getProjectNamePrefix ( ) . trim ( ) ) ; } buffer . append ( originalProjectName ) ; if ( getProjectNameSuffix ( ) != _NULL ) { buffer . append ( getProjectNameSuffix ( ) . trim ( ) ) ; } return buffer . toString ( ) ; }
1139	private List < Integer > muxToList ( PageResultMultiplexer < Integer > mux ) throws InterruptedException , IOException { Integer n ; List < Integer > list = new ArrayList < > ( ) ; while ( _BOOL ) { if ( ( n = mux . next ( ) ) == _NULL ) { break ; } list . add ( n ) ; } return list ; }
1499	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
1556	private void beforeKey ( ) throws JSONException { Scope context = peek ( ) ; if ( context == Scope . NONEMPTY_OBJECT ) { out . append ( _CHAR ) ; } else if ( context != Scope . EMPTY_OBJECT ) { throw new JSONException ( _CHAR Nesting problem _CHAR ) ; } newline ( ) ; replaceTop ( Scope . DANGLING_KEY ) ; }
1659	public static boolean verifyPermissions ( int ... grantResults ) { if ( grantResults . length == _NUM ) { return _BOOL ; } for ( int result : grantResults ) { if ( result != PackageManager . PERMISSION_GRANTED ) { return _BOOL ; } } return _BOOL ; }
1693	private void notifyListenersWithSupervision ( final T tag ) { listenerLock . readLock ( ) . lock ( ) ; try { for ( CacheSupervisionListener < ? super T > cacheListener : listenersWithSupervision ) { cacheListener . onSupervisionChange ( tag ) ; } } finally { listenerLock . readLock ( ) . unlock ( ) ; } }
1836	public void remove ( String key , String value ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value _CHAR ) ; } synchronized ( contexts ) { contexts . removeIf ( _NULL ) ; } }
1872	boolean isAliveTag ( Long tagId ) { if ( equipmentConfiguration . getAliveTagId ( ) == tagId ) { return _BOOL ; } for ( SubEquipmentConfiguration subEquipmentConfiguration : equipmentConfiguration . getSubEquipmentConfigurations ( ) . values ( ) ) { if ( subEquipmentConfiguration . getAliveTagId ( ) != _NULL && subEquipmentConfiguration . getAliveTagId ( ) . equals ( tagId ) ) { return _BOOL ; } } return _BOOL ; }
1914	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
2070	private void notifyAllSupervisedCachesOfUpdate ( ) { for ( Long key : processCache . getKeys ( ) ) { processFacade . refreshAndnotifyCurrentSupervisionStatus ( key ) ; } for ( Long key : equipmentCache . getKeys ( ) ) { equipmentFacade . refreshAndnotifyCurrentSupervisionStatus ( key ) ; } for ( Long key : subEquipmentCache . getKeys ( ) ) { subEquipmentFacade . refreshAndnotifyCurrentSupervisionStatus ( key ) ; } }
2188	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
2226	public final static boolean isJavaKeyword ( String s ) { if ( s == _NULL || s . length ( ) == _NUM ) { return _BOOL ; } for ( int i = _NUM ; i < keywords . length ; i ++ ) { if ( keywords [ i ] . equals ( s ) ) { return _BOOL ; } } return _BOOL ; }
2398	public void login ( CredentialProvider credentialProvider ) throws LoginFailedException , RemoteServerException { if ( credentialProvider == _NULL ) { throw new NullPointerException ( _CHAR Credential Provider is _NULL _CHAR ) ; } this . credentialProvider = credentialProvider ; startTime = currentTimeMillis ( ) ; playerProfile = new PlayerProfile ( this ) ; settings = new Settings ( this ) ; inventories = new Inventories ( this ) ; initialize ( ) ; }
2400	int positionOfItem ( Item item ) { int offset = _NUM ; for ( List < ? > section : mSections ) { int index = section . indexOf ( item ) ; if ( index != - _NUM ) { return offset + index ; } offset += section . size ( ) ; } return - _NUM ; }
2403	public boolean removeAllEdgesOutOf ( Unit u ) { boolean hasRemoved = _BOOL ; for ( QueueReader < Edge > edgeRdr = listener ( ) ; edgeRdr . hasNext ( ) ; ) { Edge e = edgeRdr . next ( ) ; if ( e . srcUnit ( ) == u ) { removeEdge ( e ) ; hasRemoved = _BOOL ; } } return hasRemoved ; }
2442	public boolean fileToSpeech ( String filePath ) { boolean ok = _BOOL ; try { InputStream is = new FileInputStream ( filePath ) ; ok = streamToSpeech ( is ) ; } catch ( IOException ioe ) { System . err . println ( _CHAR Ca n _CHAR_CHAR + filePath ) ; } return ok ; }
2451	@ Override public boolean writeAnnotation ( Object target , short targetType ) { if ( targetType == XSAnnotation . W3C_DOM_ELEMENT || targetType == XSAnnotation . W3C_DOM_DOCUMENT ) { writeToDOM ( ( Node ) target , targetType ) ; return _BOOL ; } else if ( targetType == SAX_CONTENTHANDLER ) { writeToSAX ( ( ContentHandler ) target ) ; return _BOOL ; } return _BOOL ; }
2594	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
2726	public void writeDouble ( double value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeDouble ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
2732	public static double pow ( double d , long e ) { if ( e == _NUM ) { return _NUM . _NUM ; } else if ( e > _NUM ) { return new Split ( d ) . pow ( e ) . full ; } else { return new Split ( d ) . reciprocal ( ) . pow ( - e ) . full ; } }
2817	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isWindowsSystem ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
2989	public Decision suggestCategory ( String sFilename ) { DocumentNGramGraph dDoc = new DocumentNGramSymWinGraph ( ) ; try { dDoc . loadDataStringFromFile ( sFilename ) ; } catch ( IOException ex ) { Logger . getLogger ( Decider . class . getName ( ) ) . log ( Level . SEVERE , _NULL , ex ) ; return _NULL ; } return suggestCategory ( dDoc ) ; }
3132	private void updateSkillEnabledStates ( ) { if ( talismanSkillContainers [ _NUM ] . getSkillTree ( ) != _NULL ) { talismanSkillContainers [ _NUM ] . setEnabled ( _BOOL ) ; } else { if ( talismanSkillContainers [ _NUM ] . getSkillTree ( ) != _NULL ) { talismanSkillContainers [ _NUM ] . setSkillTree ( _NULL ) ; } talismanSkillContainers [ _NUM ] . setEnabled ( _BOOL ) ; } }
3164	private void regulateAverageAngle ( double endAngleRadians , int expandButtonCount ) { if ( ! angleStartEqualsEnd && startAngleRadians == endAngleRadians ) { double tmp = _NUM * Math . PI / expandButtonCount ; if ( averageAngleRadians < _NUM ) { averageAngleRadians =- tmp ; } else { averageAngleRadians = tmp ; } } }
3237	public boolean matchesCurrentAvailableDevices ( @ NotNull Collection < IDevice > devices ) { if ( myDevicesAvailableAtLaunch . size ( ) != devices . size ( ) ) { return _BOOL ; } for ( IDevice d : devices ) { if ( ! myDevicesAvailableAtLaunch . contains ( d . getSerialNumber ( ) ) ) { return _BOOL ; } } return _BOOL ; }
3457	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
3480	public static boolean isPositiveInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { long temp = Long . parseLong ( s ) ; if ( temp > _NUM ) return _BOOL ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
3663	public boolean gotoNext ( ) { if ( currentIterator == _NULL ) { gotoFirst ( ) ; } else if ( currentIterator . hasNext ( ) ) currentId = currentIterator . next ( ) ; else { currentIterator = _NULL ; currentId = _NULL ; } return isCurrentSet ( ) ; }
3724	public void goToStep ( int stepNumber , boolean restoration ) { if ( activeStep != stepNumber || restoration ) { if ( hideKeyboard ) { hideSoftKeyboard ( ) ; } boolean previousStepsAreCompleted = arePreviousStepsCompleted ( stepNumber ) ; if ( stepNumber == _NUM || previousStepsAreCompleted ) { openStep ( stepNumber , restoration ) ; } } }
3931	private void sendSensorEventDataRequests ( ) { try { Log . v ( TAG , _CHAR Updating sensor event data request _CHAR ) ; for ( Map . Entry < String , SensorDataRequest > sensorDataRequestEntry : sensorDataRequests . entrySet ( ) ) { sendSensorEventDataRequest ( sensorDataRequestEntry . getKey ( ) , sensorDataRequestEntry . getValue ( ) ) ; } } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
4088	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
4180	private void ensureDependenciesResolved ( ) { ClassLoader ldr = getClass ( ) . getClassLoader ( ) ; if ( ldr == _NULL ) { ldr = ClassLoader . getSystemClassLoader ( ) ; } trustGetContextClassLoader0 ( Thread . class ) ; getContextClassLoader ( ) ; synchronized ( subPolicies ) { lookupSubPolicy ( ldr ) ; } }
4241	public static Long writeOpCRC32 ( String stream , byte [ ] payload ) { CRC32 crc = requestCRC . get ( ) ; try { crc . update ( stream . getBytes ( UTF_8 ) ) ; crc . update ( payload ) ; return crc . getValue ( ) ; } finally { crc . reset ( ) ; } }
4345	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
4347	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( this . crsComboBox != _NULL ) { return crsComboBox . isEnabled ( ) ; } } return _BOOL ; }
4469	private LocatorReg removeDiscoveredLocator ( LookupLocator lct ) { Iterator iter = discoveredLocators . iterator ( ) ; while ( iter . hasNext ( ) ) { LocatorReg reg = ( LocatorReg ) iter . next ( ) ; if ( reg . l . equals ( lct ) ) { iter . remove ( ) ; return reg ; } } return _NULL ; }
4565	@ Override public void create ( final SubEquipmentCacheObject subEquipment ) throws SubEquipmentException { if ( LOGGER . isDebugEnabled ( ) ) { LOGGER . debug ( _CHAR create ( ) - Create a subEquipment with the id : _CHAR + subEquipment . getId ( ) ) ; } try { subEquipmentMapper . insertSubEquipment ( subEquipment ) ; } catch ( DataAccessException e ) { throw new SubEquipmentException ( e . getMessage ( ) ) ; } }
4631	private void subCheckTheTicTacTocWin ( int tag , int i , int j ) { if ( _isGameContinueCheck ) if ( getTictactocBoardStatues ( ) [ j ] [ i ] == tag ) { _counter ++ ; if ( _counter >= Settings . nWinTheTicTacTocCountNumber ) { setTheClientScoreAboutTicTacTok ( tag ) ; } } else { _counter = _NUM ; } }
4715	private void unsubscribe ( final Long processId ) { LOGGER . trace ( _CHAR Unsubscribing from updates for Process '' + processId ) ; if ( jmsContainers . containsKey ( processId ) ) { DefaultMessageListenerContainer container = jmsContainers . get ( processId ) ; container . shutdown ( ) ; jmsContainers . remove ( processId ) ; } else { LOGGER . warn ( _CHAR Attempt to remove an unrecognized JMS listener container . '' ) ; } }
4793	public void addQuery ( boolean and , ContentletQuery contentletQuery ) { if ( and ) { query . append ( _CHAR _CHAR + contentletQuery . getQuery ( ) ) ; } else { query . insert ( _NUM , _CHAR ( _CHAR ) ; query . append ( _CHAR ) ( _CHAR ) ; query . append ( contentletQuery . getQuery ( ) ) ; query . append ( _CHAR ) _CHAR ) ; } }
4820	private static long millisecondsToTimeUnit ( long milliseconds , int timeUnit ) { switch ( timeUnit ) { case TU_MILLISECONDS : case TU_SECONDS : case TU_MINUTES : case TU_HOURS : case TU_DAYS : return Math . abs ( milliseconds ) / timeUnit ; } return - _NUM ; }
4867	@ ObjectiveCName ( _CHAR clearWithUniqueName : _CHAR ) private boolean clear ( String uniqueName ) { ScheduledFuture scheduledFuture = register . get ( uniqueName ) ; if ( scheduledFuture != _NULL ) { scheduledFuture . cancel ( _BOOL ) ; register . remove ( uniqueName ) ; return _BOOL ; } else { return _BOOL ; } }
5108	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
5129	public static BigDecimal parseBigDecimalForEntity ( String bigDecimalString ) throws NumberFormatException { if ( bigDecimalString == _NULL ) { return _NULL ; } bigDecimalString = bigDecimalString . trim ( ) ; bigDecimalString = bigDecimalString . replaceAll ( _CHAR , _CHAR , _CHAR _CHAR ) ; if ( bigDecimalString . length ( ) < _NUM ) { return _NULL ; } return new BigDecimal ( bigDecimalString ) ; }
5158	public String toString ( ) { String sRes = _CHAR [ _CHAR ; Iterator iIter = iterator ( ) ; while ( iIter . hasNext ( ) ) { Object oNext = iIter . next ( ) ; sRes += oNext . toString ( ) ; if ( iIter . hasNext ( ) ) sRes += _CHAR , _CHAR ; } sRes += _CHAR ] _CHAR ; return sRes ; }
5221	public static boolean isNonnegativeInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { int temp = Integer . parseInt ( s ) ; if ( temp >= _NUM ) return _BOOL ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
5358	public void clear ( ) { uid = _NUM ; bitScore = _NUM ; percentIdentity = _NUM ; refSeqId = _NULL ; expected = _NUM ; length = _NUM ; ignore = _BOOL ; text = _NULL ; cName2id . clear ( ) ; }
5420	public static void initAllResources ( ) { if ( ! isLoaded ) { databaseManager = new SQLdatabaseManager ( applicationContext ) ; SettingsManager . getInstace ( ) . init ( ) ; Category . initPodcastsCatrgories ( ) ; SimpleCacheManager . getInstance ( ) . removeExpiredCache ( ) ; runMainService ( ) ; setAlarmManagerTasks ( ) ; isLoaded = _BOOL ; } }
5447	public void notifyLockInput ( ) { if ( ! locked ) { synchronized ( directorListeners ) { IDirectorListener [ ] listeners = directorListeners . toArray ( new IDirectorListener [ directorListeners . size ( ) ] ) ; for ( IDirectorListener directorListener : listeners ) { if ( directorListener != this ) directorListener . lockUserInput ( ) ; } } } locked = _BOOL ; }
5500	public static int min ( int a , int b , int c ) { int mi ; mi = a ; if ( b < mi ) { mi = b ; } if ( c < mi ) { mi = c ; } return mi ; }
5519	public String toString ( ) { String sRes = _CHAR [ _CHAR ; Iterator iIter = iterator ( ) ; while ( iIter . hasNext ( ) ) { Object oNext = iIter . next ( ) ; sRes += oNext . toString ( ) ; if ( iIter . hasNext ( ) ) sRes += _CHAR | _CHAR ; } sRes += _CHAR ] _CHAR ; return sRes ; }
5725	protected static void addSourceFileTag ( SootClass sc , String fileName ) { soot . tagkit . SourceFileTag tag = _NULL ; if ( sc . hasTag ( _CHAR SourceFileTag _CHAR ) ) { return ; } else { tag = new soot . tagkit . SourceFileTag ( ) ; sc . addTag ( tag ) ; } tag . setSourceFile ( fileName ) ; }
5741	public InputStream newInputStream ( int index ) throws IOException { synchronized ( DiskLruCache . this ) { if ( entry . currentEditor != this ) { throw new IllegalStateException ( ) ; } if ( ! entry . readable ) { return _NULL ; } return new FileInputStream ( entry . getCleanFile ( index ) ) ; } }
5796	public void addBitmapToCache ( String data , BitmapDrawable value ) { if ( data == _NULL || value == _NULL ) { return ; } if ( mMemoryCache != _NULL ) { if ( RecyclingBitmapDrawable . class . isInstance ( value ) ) { ( ( RecyclingBitmapDrawable ) value ) . setIsCached ( _BOOL ) ; } mMemoryCache . put ( data , value ) ; } }
5834	public void printSources ( ) { if ( this . sourceSinkProvider == _NULL ) { System . err . println ( _CHAR Sources not calculated yet _CHAR ) ; return ; } System . out . println ( _CHAR Sources : _CHAR ) ; for ( SourceSinkDefinition am : getSources ( ) ) { System . out . println ( am . toString ( ) ) ; } System . out . println ( _CHAR End of Sources _CHAR ) ; }
6014	public void renew ( final Txn < T > newTxn ) { if ( SHOULD_CHECK ) { requireNonNull ( newTxn ) ; checkNotClosed ( ) ; this . txn . checkReadOnly ( ) ; newTxn . checkReadOnly ( ) ; newTxn . checkReady ( ) ; } checkRc ( LIB . mdb_cursor_renew ( newTxn . pointer ( ) , ptrCursor ) ) ; this . txn = newTxn ; }
6027	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( datePicker != _NULL ) { return datePicker . isEnabled ( ) ; } } return _BOOL ; }
6041	private static String translate ( String s , Locale locale ) { try { ResourceBundle bundle = ResourceBundle . getBundle ( _CHAR org . apache . commons . math . MessagesResources _CHAR , locale ) ; if ( bundle . getLocale ( ) . getLanguage ( ) . equals ( locale . getLanguage ( ) ) ) { return bundle . getString ( s ) ; } } catch ( MissingResourceException mre ) { } return s ; }
6239	public TimeColumn selectIf ( IntPredicate predicate ) { TimeColumn column = emptyCopy ( ) ; IntIterator iterator = intIterator ( ) ; while ( iterator . hasNext ( ) ) { int next = iterator . nextInt ( ) ; if ( predicate . test ( next ) ) { column . add ( next ) ; } } return column ; }
6464	public static boolean checkIfRightExpressionRequireEvaluation ( Expression expression ) { if ( expression . getFilterExpressionType ( ) == ExpressionType . UNKNOWN || ! ( expression instanceof LiteralExpression ) && ! ( expression instanceof ListExpression ) ) { return _BOOL ; } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfRightExpressionRequireEvaluation ( child ) ) { return _BOOL ; } } return _BOOL ; }
6635	protected void handleListenerSetupFailure ( Throwable ex , boolean alreadyRecovered ) { if ( ex instanceof Exception ) { invokeExceptionListener ( ( Exception ) ex ) ; } if ( alreadyRecovered ) { logger . debug ( message ( _CHAR Setup of event listener invoker failed - already recovered by other invoker _CHAR ) , ex ) ; } else { logger . error ( message ( _CHAR Setup of event listener invoker failed - trying to recover _CHAR ) , ex ) ; } }
6646	private void callShortcutManager ( BooleanSupplier r ) { try { if ( ! r . getAsBoolean ( ) ) { Utils . showToast ( mContext , _CHAR Call to ShortcutManager is rate - limited _CHAR ) ; } } catch ( Exception e ) { Log . e ( TAG , _CHAR Caught Exception _CHAR , e ) ; Utils . showToast ( mContext , _CHAR Error while calling ShortcutManager : '' + e . toString ( ) ) ; } }
6702	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( textField != _NULL ) { return textField . isEnabled ( ) ; } } return _BOOL ; }
6745	public static String toDateTimeString ( java . util . Date date ) { if ( date == _NULL ) return _CHAR _CHAR ; String dateString = toDateString ( date ) ; String timeString = toTimeString ( date ) ; if ( dateString != _NULL && timeString != _NULL ) { return dateString + _CHAR _CHAR + timeString ; } else { return _CHAR _CHAR ; } }
6817	@ Override public void close ( ) { if ( reusable ) { cleanDriver ( ) ; sendEvent ( _BOOL ) ; } else { super . close ( ) ; alive = _BOOL ; sendEvent ( _BOOL ) ; } }
6893	public static String quote ( String sentence ) { if ( ! sentence . contains ( _CHAR _CHAR_CHAR_CHAR _CHAR ) && ! sentence . contains ( _CHAR \ _CHAR _CHAR ) ) { return addDoubleQuotation ( sentence ) ; } else { return changeToConcat ( sentence ) ; } }
6919	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
7249	protected DominatorNode < N > fetchDode ( N gode ) { DominatorNode < N > dode ; if ( godeToDode . containsKey ( gode ) ) { dode = godeToDode . get ( gode ) ; } else { dode = new DominatorNode ( gode ) ; godeToDode . put ( gode , dode ) ; } return dode ; }
7461	public void saveFingerprintAsFile ( byte [ ] fingerprint , String filename ) { FileOutputStream fileOutputStream ; try { fileOutputStream = new FileOutputStream ( filename ) ; fileOutputStream . write ( fingerprint ) ; fileOutputStream . close ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
7516	public final TestSubscriber < T > assertComplete ( ) { assertNoError ( ) ; int c = completionCount ; if ( c == _NUM ) { throw new AssertionError ( _CHAR Not completed _CHAR , _NULL ) ; } if ( c > _NUM ) { throw new AssertionError ( _CHAR Multiple completions : _CHAR + c , _NULL ) ; } return this ; }
7806	private void openCounterDataOutputStream ( ) throws DataFallbackException { if ( dOutput == _NULL ) { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR openDataOutputStream ( ) ; Opening the writer for the '' + counterFile . getName ( ) + _CHAR file _CHAR ) ; try { dOutput = new BufferedWriter ( new FileWriter ( counterFile ) ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } } }
7820	public static Bitmap blurJava ( Bitmap original , int radius , boolean canReuseInBitmap ) { if ( radius < _NUM ) { return ( _NULL ) ; } Bitmap bitmap = buildBitmap ( original , canReuseInBitmap ) ; if ( radius == _NUM ) { return bitmap ; } StackJava . blur ( bitmap , radius ) ; return ( bitmap ) ; }
7888	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
7944	public void collapsed ( boolean collapsed ) { this . collapsed = collapsed ; if ( collapsed ) { Assert . IsNull ( entryLookup ) ; entryLookup = new ConsoleEntryLookupTable ( ) ; } else { entryLookup = _NULL ; } applyFilter ( ) ; }
7989	public static final boolean allNonNull ( Object ... objects ) { if ( objects == _NULL ) { return _BOOL ; } for ( Object object : objects ) { if ( object == _NULL ) { return _BOOL ; } } return _BOOL ; }
8250	public void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( mInitializationComplete ) { mActivityDelegate . onActivityResultWithNative ( requestCode , resultCode , data ) ; } else { if ( mPendingActivityResults == _NULL ) { mPendingActivityResults = new ArrayList < ActivityResult > ( _NUM ) ; } mPendingActivityResults . add ( new ActivityResult ( requestCode , resultCode , data ) ) ; } }
8265	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( this . checkBox != _NULL ) { return checkBox . isEnabled ( ) ; } } return _BOOL ; }
8360	public void closeQQClient ( ) { if ( _NULL == xiaoV ) { return ; } try { xiaoV . close ( ) ; } catch ( final Exception e ) { LOGGER . log ( Level . ERROR , _CHAR Closes QQ client failed _CHAR , e ) ; } }
8533	public static boolean hasAddressChanged ( final IEquipmentConfiguration equipmentConfiguration , final IEquipmentConfiguration oldEquipmentConfiguration ) { boolean hasChanged ; if ( oldEquipmentConfiguration . getAddress ( ) == _NULL ) { if ( equipmentConfiguration . getAddress ( ) == _NULL ) hasChanged = _BOOL ; else hasChanged = _BOOL ; } else { hasChanged = ! oldEquipmentConfiguration . getAddress ( ) . equals ( equipmentConfiguration . getAddress ( ) ) ; } return hasChanged ; }
8549	private void distributeValues ( final DataTagValueUpdate dataTagValueUpdate ) throws JMSException { for ( JmsSender jmsSender : jmsSenders ) { try { jmsSender . processValues ( dataTagValueUpdate ) ; } catch ( Exception e ) { LOGGER . error ( _CHAR Unhandled exception caught while sending a collection of source values - the updates will be lost . '' , e ) ; } } dataTagValueUpdate . log ( ) ; }
8560	protected final void notifyInvalidated ( ) { if ( ! myNotificationsEnabled ) { return ; } for ( InvalidationListener listener : myListeners ) { listener . onInvalidated ( this ) ; } for ( InvalidationListener listener : myWeakListeners ) { listener . onInvalidated ( this ) ; } }
8696	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
8786	public boolean gotoNext ( ) { if ( isCurrentSet ( ) ) { current . set1 ( current . get1 ( ) + _NUM ) ; if ( current . get1 ( ) >= table . getGrid ( ) . getRowCount ( ) ) { current . set1 ( _NUM ) ; current . set2 ( current . get2 ( ) + _NUM ) ; } } else gotoFirst ( ) ; return isCurrentSet ( ) ; }
8795	public static String decompressToStringForZlib ( byte [ ] bytesToDecompress ) { byte [ ] bytesDecompressed = decompressForZlib ( bytesToDecompress ) ; String returnValue = _NULL ; try { returnValue = new String ( bytesDecompressed , _NUM , bytesDecompressed . length , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return returnValue ; }
8907	public static boolean cancelPlayerDeletion ( PlayerAccountData accData ) { if ( accData . getDeletionDate ( ) == _NULL ) { return _BOOL ; } if ( accData . getDeletionDate ( ) . getTime ( ) > System . currentTimeMillis ( ) ) { accData . setDeletionDate ( _NULL ) ; storeDeletionTime ( accData ) ; return _BOOL ; } return _BOOL ; }
8929	public static boolean verifyPermissions ( int ... grantResults ) { if ( grantResults . length == _NUM ) { return _BOOL ; } for ( int result : grantResults ) { if ( result != PackageManager . PERMISSION_GRANTED ) { return _BOOL ; } } return _BOOL ; }
8941	protected void releaseResources ( boolean releaseMediaPlayer ) { stopForeground ( _BOOL ) ; if ( releaseMediaPlayer && mPlayer != _NULL ) { mPlayer . reset ( ) ; mPlayer . release ( ) ; mPlayer = _NULL ; } if ( mWifiLock . isHeld ( ) ) { mWifiLock . release ( ) ; } }
9009	public boolean gotoNext ( ) { if ( currentTaxonIterator == _NULL ) { gotoFirst ( ) ; } else if ( currentTaxonIterator . hasNext ( ) ) currentTaxonId = currentTaxonIterator . next ( ) ; else { currentTaxonIterator = _NULL ; currentTaxonId = _NULL ; } return isCurrentSet ( ) ; }
9025	public void writeByte ( byte value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeByte ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
9040	@ Override public void onAttach ( Context context ) { super . onAttach ( context ) ; if ( mTask != _NULL ) { if ( context instanceof ReceiveExternalFilesActivity ) { mTask . setListener ( ( CopyAndUploadContentUrisTask . OnCopyTmpFilesTaskListener ) context ) ; } else { mTask . setListener ( _NULL ) ; } } }
9064	public boolean isValid ( String value ) { if ( value == _NULL ) { return _BOOL ; } for ( int i = _NUM ; i < patterns . length ; i ++ ) { if ( patterns [ i ] . matcher ( value ) . matches ( ) ) { return _BOOL ; } } return _BOOL ; }
9278	public void loadScript ( ) { if ( script != _NULL ) { return ; } try { script = FileCopyUtils . copyToString ( new BufferedReader ( new InputStreamReader ( resourceLoader . getResource ( resourceLocation ) . getInputStream ( ) ) ) ) ; } catch ( IOException e ) { throw new ScriptingException ( _CHAR Failed to load script resource [ _CHAR + resourceLocation + _CHAR ] _CHAR , e ) ; } }
9412	public boolean selectedFragmentPicture ( ) { Intent intent = new Intent ( Intent . ACTION_PICK , android . provider . MediaStore . Images . Media . EXTERNAL_CONTENT_URI ) ; intent . setType ( _CHAR image /* '' ) ; if ( intent . resolveActivity ( this . activity . getPackageManager ( ) ) != null ) { this . intentFragment = intent ; return true ; } else { return false ; } }
9442	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
9542	@ Override public Settings init ( String tag ) { if ( tag == _NULL ) { throw new NullPointerException ( _CHAR tag may not be _NULL _CHAR ) ; } if ( tag . trim ( ) . length ( ) == _NUM ) { throw new IllegalStateException ( _CHAR tag may not be empty _CHAR ) ; } this . tag = tag ; this . settings = new Settings ( ) ; return settings ; }
9593	public static boolean isExpressionNeedsToResolved ( Expression rightExp , boolean isIncludeFilter ) { if ( ! isIncludeFilter && rightExp instanceof LiteralExpression && ( DataType . NULL == ( ( LiteralExpression ) rightExp ) . getLiteralExpDataType ( ) ) ) { return _BOOL ; } for ( Expression child : rightExp . getChildren ( ) ) { if ( isExpressionNeedsToResolved ( child , isIncludeFilter ) ) { return _BOOL ; } } return _BOOL ; }
9672	private boolean checkCameraHardware ( Context context ) { if ( isInEditMode ( ) ) { return _BOOL ; } if ( context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA ) ) { return _BOOL ; } else { return _BOOL ; } }
9680	public void distributeAndUpdateMapObjectsInIntervalSet ( ) { for ( InternalMapObject mapObject : mapObjects ) { for ( Interval interval : intervalSet . getIntervals ( ) ) { if ( mapObject . getValue ( ) >= interval . getValueLow ( ) && mapObject . getValue ( ) <= interval . getValueHigh ( ) ) { interval . addMember ( mapObject ) ; mapObject . setInterval ( interval ) ; break ; } } } }
9728	public String [ ] parseConfiguration ( URL xmlURL ) throws IOException , SAXException { InputStream is = xmlURL . openStream ( ) ; Document document = _NULL ; try { document = builder . parse ( is ) ; } finally { is . close ( ) ; } return ( parseConfiguration ( document ) ) ; }
9729	public static void deleteSortLocationIfExists ( String tempFileLocation ) throws CarbonSortKeyAndGroupByException { File file = new File ( tempFileLocation ) ; if ( file . exists ( ) ) { try { CarbonUtil . deleteFoldersAndFiles ( file ) ; } catch ( CarbonUtilException e ) { LOGGER . error ( e ) ; } } }
9910	private void createExampleDataSource ( ) { if ( internalDataSource == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR No internal data source creation object set _CHAR ) ; } else { List < DataSourceInfo > dataSourceInfoList = internalDataSource . connect ( this . editorFileInterface ) ; if ( ( dataSourceInfoList != _NULL ) && ( dataSourceInfoList . size ( ) == _NUM ) ) { exampleDataSourceInfo = dataSourceInfoList . get ( _NUM ) ; } } }
9945	private void checkIfNext ( ) { for ( ; _pos != _NULL ; _pos = _templates . next ( _pos ) ) { TemplateCacheInfo pTemplate = _pos . getSubject ( ) ; if ( pTemplate == _NULL ) continue ; if ( pTemplate . m_TemplateHolder . isDeleted ( ) ) continue ; _currentTemplate = pTemplate ; _pos = _templates . next ( _pos ) ; return ; } _currentTemplate = _NULL ; }
9954	public boolean isEmpty ( ) { if ( entries == _NULL || entries . length == _NUM ) { return _BOOL ; } for ( LogEntries x : entries ) { if ( x != _NULL ) { return _BOOL ; } } return _BOOL ; }
10015	public void write ( OutputStream os ) throws IOException { if ( responseFormatType == ResponseFormatType . CSV ) { writeCsvResponse ( os ) ; } else if ( responseFormatType == ResponseFormatType . JSONAPI ) { writeJsonApiResponse ( os , missingIntervals , volatileIntervals , pagination ) ; } else { writeJsonResponse ( os , missingIntervals , volatileIntervals , pagination ) ; } }
10150	public static boolean isPotentiallyEncryptedString ( String string ) { checkNotNull ( string , _CHAR string _CHAR ) ; byte [ ] encryptedBytes ; try { encryptedBytes = BaseEncoding . base64 ( ) . omitPadding ( ) . decode ( string ) ; } catch ( IllegalArgumentException e ) { return _BOOL ; } return isPotentiallyEncryptedBytes ( encryptedBytes ) ; }
10210	@ Override public void close ( ) { try { if ( auth != _NULL ) { auth . close ( ) ; } } catch ( IOException e ) { LOG . error ( _CHAR Failed to close the authentication service _CHAR , e ) ; } client . close ( ) ; }
10294	public static String decode ( String str ) throws RuntimeException { byte [ ] bytes ; try { bytes = str . getBytes ( _CHAR ASCII _CHAR ) ; } catch ( UnsupportedEncodingException e ) { throw new RuntimeException ( _CHAR ASCII is not supported ! _CHAR , e ) ; } byte [ ] decoded = decode ( bytes ) ; return new String ( decoded ) ; }
10297	protected void waitForImage ( Image image ) { int id =++ nextTrackerID ; tracker . addImage ( image , id ) ; try { tracker . waitForID ( id , _NUM ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } tracker . removeImage ( image , id ) ; }
10349	private void writeDictionaryFile ( CarbonDictionaryWriterImpl writer , List < String > list ) throws IOException { try { for ( String value : list ) { writer . write ( value ) ; } } finally { writer . close ( ) ; writer . commit ( ) ; } }
10538	public IObjectInfo < T > add ( T subject ) { lock . lock ( ) ; try { IObjectInfo < T > oi = store_impl ( subject ) ; updateHashAfterInsertion ( oi ) ; return oi ; } finally { lock . unlock ( ) ; } }
10607	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
10701	private void checkModified ( ) { final long currentModifiedTime = file . lastModified ( ) ; if ( currentModifiedTime != lastModified ) { System . out . print ( _CHAR Modified config . json externally . Will be reloaded now . '' ) ; final String content = FileHelper . readFile ( file ) ; if ( content != _NULL ) { json = new JSONObject ( content ) ; } lastModified = currentModifiedTime ; } }
10718	public String process ( Item seg ) throws ProcessException { if ( seg == _NULL ) { return _CHAR _NUM _CHAR ; } else if ( seg . getPrevious ( ) == _NULL ) { return seg . getFeatures ( ) . getObject ( _CHAR end _CHAR ) . toString ( ) ; } else { return Float . toString ( seg . getFeatures ( ) . getFloat ( _CHAR end _CHAR ) - seg . getPrevious ( ) . getFeatures ( ) . getFloat ( _CHAR end _CHAR ) ) ; } }
10725	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
10802	private void postBufferAccess ( ) { _lock . lock ( ) ; try { if ( -- _bufferUseCount == _NUM ) { _flushReady . signalAll ( ) ; } } finally { _lock . unlock ( ) ; } }
10826	public void reset ( ) throws IOException { stream . reset ( ) ; framePos = markpos ; pushBackLen = markPushBackLen ; if ( pushBackLen > _NUM ) { if ( pushBackBuffer == _NULL ) { pushBackBuffer = new byte [ frameSize - _NUM ] ; } System . arraycopy ( markPushBackBuffer , _NUM , pushBackBuffer , _NUM , pushBackLen ) ; } }
10855	public InputStream newInputStream ( int index ) throws IOException { synchronized ( DiskLruCache . this ) { if ( entry . currentEditor != this ) { throw new IllegalStateException ( ) ; } if ( ! entry . readable ) { return _NULL ; } return new FileInputStream ( entry . getCleanFile ( index ) ) ; } }
10978	public void startWatching ( String fileName ) { synchronized ( mObservedChildren ) { if ( ! mObservedChildren . containsKey ( fileName ) ) { mObservedChildren . put ( fileName , Boolean . valueOf ( _BOOL ) ) ; } } if ( new File ( mPath ) . exists ( ) ) { startWatching ( ) ; Log_OC . d ( TAG , _CHAR Started watching parent folder _CHAR + mPath + _CHAR / _CHAR ) ; } }
10999	public View detachViewAndClearPreInfo ( ) { View original = mHost ; if ( mBorder != _NULL ) { mBorder . detachView ( ) ; } mPreRealLeft = _NUM ; mPreRealWidth = _NUM ; mPreRealHeight = _NUM ; mPreRealTop = _NUM ; return original ; }
11006	public static ByteBuf deflate ( ByteBuf buffer ) throws DataFormatException { ByteBuf dest = PooledByteBufAllocator . DEFAULT . directBuffer ( ) ; try { deflate ( buffer , dest ) ; } catch ( DataFormatException e ) { dest . release ( ) ; throw e ; } return dest ; }
11046	public InputStream newInputStream ( int index ) throws IOException { synchronized ( DiskLruCache . this ) { if ( entry . currentEditor != this ) { throw new IllegalStateException ( ) ; } if ( ! entry . readable ) { return _NULL ; } return new FileInputStream ( entry . getCleanFile ( index ) ) ; } }
11056	private void fireUpdateReceivedEvent ( ) { try { listenersLock . readLock ( ) . lock ( ) ; for ( BaseTagListener listener : listeners ) { listener . onUpdate ( this ) ; } } finally { listenersLock . readLock ( ) . unlock ( ) ; } }
11071	private boolean queryRelativeCatalogs ( ) { if ( resources == _NULL ) readProperties ( ) ; if ( resources == _NULL ) return defaultRelativeCatalogs ; try { String allow = resources . getString ( _CHAR relative - catalogs _CHAR ) ; return ( allow . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) || allow . equalsIgnoreCase ( _CHAR yes _CHAR ) || allow . equalsIgnoreCase ( _CHAR _NUM _CHAR ) ) ; } catch ( MissingResourceException e ) { return defaultRelativeCatalogs ; } }
11090	public static GeometryTypeEnum combineGeometryType ( List < GeometryTypeEnum > geometryFeatures ) { if ( geometryFeatures != _NULL ) { if ( geometryFeatures . size ( ) == _NUM ) { return geometryFeatures . get ( _NUM ) ; } else { return geometryFeatures . get ( _NUM ) ; } } return GeometryTypeEnum . UNKNOWN ; }
11325	public boolean isValid ( String value ) { if ( value == _NULL ) { return _BOOL ; } for ( int i = _NUM ; i < patterns . length ; i ++ ) { if ( patterns [ i ] . matcher ( value ) . matches ( ) ) { return _BOOL ; } } return _BOOL ; }
11333	public void clearAllInsertions ( ) { List < MODEL > items = new ArrayList < > ( ) ; items . addAll ( getOnlyItems ( ) ) ; mInserts . clear ( ) ; getItems ( ) . clear ( ) ; mOnlyInsertsCount = _NUM ; mHeadersCount = _NUM ; mFootersCount = _NUM ; reAddAllItems ( items ) ; notifyIfNeed ( ) ; }
11439	@ Override public void generateReport ( ) { this . cfg = new Configuration ( ) ; try { configureFreeMarker ( ) ; getTemplate ( ) ; merge ( ) ; } catch ( IOException e ) { LOG . error ( _CHAR Exception when setting template directory _CHAR , e ) ; } }
11450	public void scrollOnce ( ) { if ( _NULL != mAdapter && mAdapter . getCount ( ) > _NUM ) { int totalCount = mAdapter . getCount ( ) ; int currentItem = getCurrentItem ( ) ; int nextItem = currentItem % totalCount + _NUM ; setCurrentItem ( nextItem , _BOOL ) ; } else { stopAutoScroll ( ) ; } }
11461	private boolean hasLegalRootContainer ( Node node ) { if ( node == _NULL ) return _BOOL ; Node rootContainer = getRootContainer ( node ) ; switch ( rootContainer . getNodeType ( ) ) { case Node . ATTRIBUTE_NODE : case Node . DOCUMENT_NODE : case Node . DOCUMENT_FRAGMENT_NODE : return _BOOL ; } return _BOOL ; }
11547	public static ItemStack sanitize ( ItemStack stack ) { if ( stack != _NULL ) { if ( stack . hasTagCompound ( ) && stack . getTagCompound ( ) . hasKey ( DATA_TAG ) ) { stack . getTagCompound ( ) . removeTag ( DATA_TAG ) ; } if ( stack . hasTagCompound ( ) && stack . getTagCompound ( ) . hasNoTags ( ) ) { stack . setTagCompound ( _NULL ) ; } } return stack ; }
11564	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; if ( id == _NULL ) { throw new InvalidObjectException ( _CHAR id is _NULL _CHAR ) ; } else { if ( ! hasConsistentConstraints ( ) ) { throw new InvalidObjectException ( _CHAR inconsistent constraints between underlying proxy and invocation handler _CHAR ) ; } } }
11607	public void writeBytes ( byte [ ] value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
11727	public void writeBoolean ( boolean value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeBoolean ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
11988	@ Override public int hashCode ( ) { if ( generateHashCode ) { cachedHashCode = _NUM ; if ( getEntityName ( ) != _NULL ) { cachedHashCode += getEntityName ( ) . hashCode ( ) >> _NUM ; } cachedHashCode += fields . hashCode ( ) >> _NUM ; generateHashCode = _BOOL ; } return cachedHashCode ; }
12039	private void deleteResult ( String name , Concept result ) { VarAdmin deleter = deleters . get ( name ) ; if ( deleter == _NULL ) return ; String id = result . getId ( ) ; if ( deleter . hasNoProperties ( ) ) { deleteConcept ( id ) ; } else { deleter . getProperties ( ) . forEach ( _NULL ) ; } }
12113	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( spinner != _NULL ) { return spinner . isEnabled ( ) ; } } return _BOOL ; }
12215	public long queueNewOperation ( Intent operationIntent ) { Pair < Target , RemoteOperation > itemToQueue = newOperation ( operationIntent ) ; if ( itemToQueue != _NULL ) { mServiceHandler . mPendingOperations . add ( itemToQueue ) ; startService ( new Intent ( OperationsService . this , OperationsService . class ) ) ; return itemToQueue . second . hashCode ( ) ; } else { return Long . MAX_VALUE ; } }
12306	protected boolean validRowCheck ( int row , boolean throwException ) { if ( isValidRow ( row ) ) { return _BOOL ; } else if ( throwException ) { throw new IllegalArgumentException ( _CHAR Invalid row value : _CHAR + row ) ; } else { return _BOOL ; } }
12411	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
12450	public void waitUntilClosed ( ) throws InterruptedException { mutex . lock ( ) ; try { while ( state != State . Closed ) { isClosedCondition . await ( ) ; } } finally { mutex . unlock ( ) ; } }
12456	public final TestSubscriber < T > assertError ( ) { assertNotComplete ( ) ; int s = errors . size ( ) ; if ( s == _NUM ) { throw new AssertionError ( _CHAR No error _CHAR , _NULL ) ; } if ( s > _NUM ) { throw new AssertionError ( _CHAR Multiple errors : _CHAR + s , _NULL ) ; } return this ; }
12652	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
12728	public void flush ( ) throws IOException { try { _writer . write ( _buffer , _NUM , _pos ) ; _writer . flush ( ) ; } catch ( IOException except ) { if ( _exception == _NULL ) _exception = except ; throw except ; } _pos = _NUM ; }
13018	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
13111	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
13135	public void startDragDropInteraction ( ) { for ( Layer layer : myLayers ) { if ( layer instanceof ConstraintsLayer ) { ConstraintsLayer constraintsLayer = ( ConstraintsLayer ) layer ; if ( ! constraintsLayer . isShowOnHover ( ) ) { constraintsLayer . setShowOnHover ( _BOOL ) ; repaint ( ) ; } } } }
13141	private void afterMovingToPrimary ( ) { switch ( _spaceMode ) { case NONE : startComponents ( _BOOL ) ; startComponents ( _BOOL ) ; break ; case BACKUP : startComponents ( _BOOL ) ; break ; } }
13221	private void resetTimer ( ) { if ( fadeOutTime > _NUM ) { if ( timer == _NULL || timer . _run == _BOOL ) { timer = new FadeTimer ( ) ; timer . execute ( ) ; } else { timer . resetTimer ( ) ; } } }
13450	protected void removeContainer ( ) throws Throwable { if ( containerId == _NULL ) { return ; } sendDeleteContainerRequest ( ) ; waitForPropertyValue ( provisioningTaskLink , MockTaskState . class , _CHAR taskInfo . stage _CHAR , TaskState . TaskStage . FINISHED ) ; if ( ! isMockTarget ( ) ) { Thread . sleep ( _NUM ) ; } verifyContainerDoesNotExist ( containerId ) ; }
13492	protected void stopResetExpiredJobsThread ( ) { if ( resetExpiredJobThread != _NULL ) { try { resetExpiredJobThread . join ( ) ; } catch ( InterruptedException e ) { log . warn ( _CHAR Interrupted while waiting for the reset expired jobs thread to terminate '' , e ) ; } resetExpiredJobThread = _NULL ; } }
13509	public TrustManagerBuilder or ( ) { if ( mgr . isMatchAll ( ) ) { if ( mgr . size ( ) < _NUM ) { mgr . setMatchAll ( _BOOL ) ; } else { mgr = CompositeTrustManager . matchAny ( mgr ) ; } } return ( this ) ; }
13553	public boolean isValid ( ) { if ( categories == _NULL || categories . isEmpty ( ) ) { return _BOOL ; } for ( DataElementCategory category : categories ) { if ( category == _NULL || category . getCategoryOptions ( ) == _NULL || category . getCategoryOptions ( ) . isEmpty ( ) ) { return _BOOL ; } } return _BOOL ; }
13564	private void enableSubGroups ( boolean enabled ) { for ( FieldConfigBase field : getFieldConfigList ( ) ) { FieldPanel panel = field . getPanel ( ) ; if ( panel != _NULL ) { panel . enablePanel ( enabled ) ; } } for ( GroupConfigInterface subGroup : subGroupList ) { subGroup . enable ( enabled ) ; } }
13601	public void install ( boolean synchronous ) throws Exception { status = Status . INSTALLING ; stateChanged ( ) ; Installer inst = new Installer ( ) ; if ( synchronous ) { inst . run ( ) ; } else { new Thread ( inst ) . start ( ) ; } }
13608	public static Bitmap blurNatively ( Bitmap original , int radius , boolean canReuseInBitmap ) { if ( radius < _NUM ) { return _NULL ; } Bitmap bitmap = buildBitmap ( original , canReuseInBitmap ) ; if ( radius == _NUM ) { return bitmap ; } blurBitmap ( bitmap , radius ) ; return ( bitmap ) ; }
13668	public void registerBootstrapNamespaces ( ) throws PulsarServerException { if ( registerNamespace ( getHeartbeatNamespace ( host , config ) , _BOOL ) ) { this . uncountedNamespaces ++ ; LOG . info ( _CHAR added heartbeat namespace name in local cache : ns = { } _CHAR , getHeartbeatNamespace ( host , config ) ) ; } for ( String namespace : config . getBootstrapNamespaces ( ) ) { if ( registerNamespace ( namespace , _BOOL ) ) { LOG . info ( _CHAR added bootstrap namespace name in local cache : ns = { } _CHAR , namespace ) ; } } }
13694	public INDArray toRaveledTensor ( File file ) { try { BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( file ) ) ; INDArray ret = toRaveledTensor ( bis ) ; bis . close ( ) ; return ret . ravel ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
13733	public void clearOnlyItems ( ) { List < Insertion > insertions = new ArrayList < > ( ) ; insertions . addAll ( getHeaders ( ) ) ; insertions . addAll ( getOnlyInsertions ( ) ) ; insertions . addAll ( getFooters ( ) ) ; mInserts . clear ( ) ; getItems ( ) . clear ( ) ; mOnlyItemsCount = _NUM ; reAddAllInserts ( insertions ) ; notifyIfNeed ( ) ; }
13771	public static Document openDocument ( OutputStream outputStream , Rectangle pageSize ) { try { Document document = new Document ( pageSize ) ; PdfWriter . getInstance ( document , outputStream ) ; document . open ( ) ; return document ; } catch ( DocumentException ex ) { throw new RuntimeException ( _CHAR Failed to open PDF document _CHAR , ex ) ; } }
13883	public static < T > T lockResult ( Future < T > result , String lockPath ) throws LockingException { try { return Await . result ( result ) ; } catch ( LockingException le ) { throw le ; } catch ( Exception e ) { throw new LockingException ( lockPath , _CHAR Encountered exception on locking _CHAR , e ) ; } }
13912	private void parseHeader ( String header ) { Log . v ( _CHAR HttpHeader _CHAR , _CHAR HttpAuthHeader . parseHeader ( ) : header : _CHAR + header ) ; if ( header != _NULL ) { String parameters = parseScheme ( header ) ; if ( parameters != _NULL ) { if ( mScheme != UNKNOWN ) { parseParameters ( parameters ) ; } } } }
13982	public void kickAccount ( int accountId ) { synchronized ( this ) { AionConnection client = loggedInAccounts . get ( accountId ) ; if ( client != _NULL ) { closeClientWithCheck ( client , accountId ) ; } else { sendAccountDisconnected ( accountId ) ; } } }
14088	public static String utf8Encode ( String str , String defultReturn ) { if ( ! isEmpty ( str ) && str . getBytes ( ) . length != str . length ( ) ) { try { return URLEncoder . encode ( str , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException e ) { return defultReturn ; } } return str ; }
14119	public static String utf8Encode ( String str , String defultReturn ) { if ( ! isEmpty ( str ) && str . getBytes ( ) . length != str . length ( ) ) { try { return URLEncoder . encode ( str , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException e ) { return defultReturn ; } } return str ; }
14341	private int replicateAndfreeCache ( Context context ) { if ( context != _NULL ) { try { return performReplication ( context ) ; } finally { _cacheManager . freeCacheContext ( context ) ; } } return _NUM ; }
14358	public boolean canManage ( User user ) { if ( user == _NULL || user . getGroups ( ) == _NULL ) { return _BOOL ; } for ( UserGroup group : user . getGroups ( ) ) { if ( canManage ( group ) ) { return _BOOL ; } } return _BOOL ; }
14399	private void syncProgress ( SeekBar seekBar ) { float value = seekBarProgressToPrefValue ( seekBar . getProgress ( ) ) ; if ( value != mValue ) { if ( callChangeListener ( value ) ) { setValue ( value , _BOOL ) ; } else { seekBar . setProgress ( prefValueToSeekBarProgress ( mValue ) ) ; } } }
14419	@ Override public void onDestroy ( ) { Log_OC . d ( TAG , _CHAR onDestroy - finishing observation of favorite files _CHAR ) ; unregisterReceiver ( mDownloadReceiver ) ; Iterator < FolderObserver > itOCFolder = mFolderObserversMap . values ( ) . iterator ( ) ; while ( itOCFolder . hasNext ( ) ) { itOCFolder . next ( ) . stopWatching ( ) ; } mFolderObserversMap . clear ( ) ; mFolderObserversMap = _NULL ; super . onDestroy ( ) ; }
14484	public static Boolean toBoolean ( String value ) { if ( _CHAR Y _CHAR . equalsIgnoreCase ( value ) ) { return _BOOL ; } else if ( _CHAR N _CHAR . equalsIgnoreCase ( value ) ) { return _BOOL ; } else { return _NULL ; } }
14538	private synchronized boolean waitResume ( ) { while ( isPaused ( ) && ! isCancelled ( ) && ! isDone ( ) ) { try { debugPrint ( _CHAR paused waiting _CHAR ) ; wait ( ) ; } catch ( InterruptedException ie ) { } } return ! isCancelled ( ) && ! isDone ( ) ; }
14656	private String encode ( String str ) { if ( str == _NULL ) { return _NULL ; } try { return URLEncoder . encode ( str , Charsets . UTF_8 . name ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw Throwables . propagate ( e ) ; } }
14704	public static String bind ( String key ) { try { return getResourceBundle ( ) . getString ( key ) ; } catch ( MissingResourceException e ) { return key ; } catch ( NullPointerException e ) { return _CHAR ! _CHAR + key + _CHAR ! _CHAR ; } }
14709	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
14719	void openURI ( final String uri ) { try { java . awt . Desktop . getDesktop ( ) . browse ( new URI ( uri ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } catch ( URISyntaxException e ) { e . printStackTrace ( ) ; } }
14829	public static ResolveInfo resolveActivity ( Intent intent ) { try { Context context = ApplicationStatus . getApplicationContext ( ) ; PackageManager pm = context . getPackageManager ( ) ; return pm . resolveActivity ( intent , _NUM ) ; } catch ( RuntimeException e ) { logTransactionTooLargeOrRethrow ( e , intent ) ; } return _NULL ; }
14847	public RoleDTO toDTO ( Role role , int depth ) { if ( role == _NULL ) { return _NULL ; } RoleDTO dto = new RoleDTO ( ) ; dto . id = role . getId ( ) ; dto . roleName = role . getRoleName ( ) ; if ( depth -- > _NUM ) { } return dto ; }
15055	public void requestAutoFocus ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { autoFocusCallback . setHandler ( handler , message ) ; try { camera . autoFocus ( autoFocusCallback ) ; } catch ( RuntimeException re ) { Log . w ( TAG , _CHAR Unexpected exception while focusing '' , re ) ; } } }
15073	public static void loadArmLibrary ( ApplicationLike applicationLike , String libName ) { if ( libName == _NULL || libName . isEmpty ( ) || applicationLike == _NULL ) { throw new TinkerRuntimeException ( _CHAR libName or context is _NULL ! _CHAR ) ; } if ( TinkerApplicationHelper . isTinkerEnableForNativeLib ( applicationLike ) ) { if ( TinkerApplicationHelper . loadLibraryFromTinker ( applicationLike , _CHAR lib / armeabi _CHAR , libName ) ) { return ; } } System . loadLibrary ( libName ) ; }
15075	public void updateErrorDisplay ( @ Nullable final RenderResult result ) { assert ApplicationManager . getApplication ( ) . isDispatchThread ( ) || ! ApplicationManager . getApplication ( ) . isReadAccessAllowed ( ) : _CHAR Do not hold read lock when calling updateErrorDisplay ! _CHAR ; getErrorQueue ( ) . cancelAllUpdates ( ) ; myRenderHasProblems = result != _NULL && result . getLogger ( ) . hasProblems ( ) ; if ( myRenderHasProblems ) { updateErrors ( result ) ; } else { UIUtil . invokeLaterIfNeeded ( _NULL ) ; } }
15109	private void putIntoCache ( String diphoneName , Diphone diphone ) { if ( diphoneMap == _NULL ) { return ; } if ( useSoftCache ) { diphoneMap . put ( diphoneName , new WeakReference ( diphone ) ) ; } else { diphoneMap . put ( diphoneName , diphone ) ; } }
15127	public static boolean canTrade ( Player player ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canTrade . ordinal ( ) ] ) { if ( ! restrictions . canTrade ( player ) ) { return _BOOL ; } } if ( player . getLifeStats ( ) . isAlreadyDead ( ) ) { return _BOOL ; } return _BOOL ; }
15160	private boolean areClassesEqual ( Class < ? > c1 , Class < ? > c2 ) { if ( isMap ( c1 ) ) { return isMap ( c2 ) ; } else if ( isList ( c1 ) ) { return isList ( c2 ) ; } else { return c1 . equals ( c2 ) ; } }
15227	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
15251	public void selectClosestPack ( PackModel pack ) { ensurePackExists ( pack ) ; Array < PackModel > packs = getProject ( ) . getPacks ( ) ; int index = packs . indexOf ( pack , _BOOL ) ; if ( index > _NUM ) { selectPrevPack ( pack ) ; } else { selectNextPack ( pack ) ; } }
15271	@ Override public void finished ( ) { QueueFinalizer queueFinalizer = new QueueFinalizer ( ) ; queueFinalizer . finalizeQueue ( tasks , completionService , executorService ) ; try { webDriverRegistry . shutdown ( ) ; reportingHandler . endOfSuite ( ) ; } catch ( InterruptedException e ) { Thread . currentThread ( ) . interrupt ( ) ; } }
15310	public void pause ( ) { if ( ! paused ) { setPaused ( _BOOL ) ; if ( currentClip != _NULL ) { currentClip . stop ( ) ; } synchronized ( this ) { notifyAll ( ) ; } } }
15344	@ Override public void write ( byte [ ] bts ) throws IOException { try { int len = bts != _NULL ? bts . length : _NUM ; beforeWrite ( len ) ; out . write ( bts ) ; afterWrite ( len ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
15353	@ Override public String object2Relation ( String fieldType ) { if ( fieldType != _NULL ) { if ( fieldType . equals ( _CHAR float _CHAR ) || fieldType . equals ( _CHAR java . lang . Float _CHAR ) ) { return _CHAR real _CHAR ; } if ( fieldType . equals ( _CHAR double _CHAR ) || fieldType . equals ( _CHAR java . lang . Double _CHAR ) ) { return _CHAR real _CHAR ; } } return _NULL ; }
15453	private void cleanupService ( ) { if ( mService != _NULL ) { try { mContext . unbindService ( this ) ; } catch ( IllegalArgumentException e ) { Log . e ( TAG , _CHAR Unable to unbind from licensing service ( already unbound ) _CHAR ) ; } mService = _NULL ; } }
15622	private boolean applyFilter ( ) { boolean needsFiltering = collapsed || length ( filterText ) > _NUM || hasLogTypeFilters ( ) ; if ( needsFiltering ) { if ( entryLookup != _NULL ) { entryLookup . clear ( ) ; } useFilteredFromEntries ( entries ) ; return _BOOL ; } return removeFilter ( ) ; }
15646	public void writeUTF ( String value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeUTF ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
15690	public void save ( EpoxyViewHolder holder ) { if ( ! holder . getModel ( ) . shouldSaveViewState ( ) ) { return ; } ViewState state = get ( holder . getItemId ( ) ) ; if ( state == _NULL ) { state = new ViewState ( ) ; } state . save ( holder . itemView ) ; put ( holder . getItemId ( ) , state ) ; }
15740	public static void clear ( String collection ) { try { MongoCollection < Document > c = MongoHelper . getCollection ( collection ) ; if ( c != _NULL ) { c . deleteMany ( new BasicDBObject ( ) ) ; } } catch ( Exception e ) { if ( log . isErrorEnabled ( ) ) log . error ( e . getMessage ( ) , e ) ; } }
15745	@ Override public void endDocument ( ) throws SAXException { writeText4Links ( ) ; write ( _CHAR ) ; super . endDocument ( ) ; try { flush ( ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
15789	void pairWithSelf ( ) { if ( pair != _NULL ) { throw new IllegalStateException ( _CHAR Already paired . '' ) ; } pair = new ModelState ( ) ; pair . lastMoveOp = _NUM ; pair . id = id ; pair . position = position ; pair . hashCode = hashCode ; pair . pair = this ; }
15951	public boolean containsKey ( String key ) { if ( mLinkedHashMap . containsKey ( key ) ) { return _BOOL ; } final String existingFile = createFilePath ( mCacheDir , key ) ; if ( new File ( existingFile ) . exists ( ) ) { put ( key , existingFile ) ; return _BOOL ; } return _BOOL ; }
16112	public QueryParams buildQueryParams ( QueryParamsParserContext context ) { try { return queryParamsParser . parse ( context ) ; } catch ( KatharsisException e ) { throw e ; } catch ( RuntimeException e ) { throw new ParametersDeserializationException ( e . getMessage ( ) , e ) ; } }
16114	@ Override public Node removeChild ( Node oldChild ) throws DOMException { super . removeChild ( oldChild ) ; int type = oldChild . getNodeType ( ) ; if ( type == Node . ELEMENT_NODE ) { docElement = _NULL ; } else if ( type == Node . DOCUMENT_TYPE_NODE ) { docType = _NULL ; } return oldChild ; }
16246	private ByteBuffer read ( FileChannel channel , int size ) { ByteBuffer byteBffer = ByteBuffer . allocate ( size ) ; try { channel . read ( byteBffer ) ; } catch ( Exception e ) { LOGGER . error ( e , e . getMessage ( ) ) ; } byteBffer . rewind ( ) ; return byteBffer ; }
16326	private void openCounterDataInputStream ( ) throws DataFallbackException { if ( dInput == _NULL ) { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR openDataInputStream ( ) ; Opening the reader for the '' + counterFile . getName ( ) + _CHAR file _CHAR ) ; try { dInput = new BufferedReader ( new FileReader ( counterFile ) ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } } }
16339	public void releaseScan ( ) throws SAException { if ( _curValueList != _NULL ) { _curValueList . releaseScan ( ) ; _curValueList = _NULL ; } if ( _entriesIter != _NULL ) { _entriesIter . releaseScan ( ) ; _entriesIter = _NULL ; } _curValueListHolder = _NULL ; }
16410	@ Override public void parse ( String systemId ) throws IOException , SAXException { allowXMLCatalogPI = _BOOL ; setupBaseURI ( systemId ) ; try { super . parse ( systemId ) ; } catch ( InternalError ie ) { explain ( systemId ) ; throw ie ; } }
16433	public static byte [ ] encryptSHA ( byte [ ] bytes ) { try { MessageDigest md = MessageDigest . getInstance ( _CHAR SHA _CHAR ) ; md . update ( bytes ) ; return md . digest ( ) ; } catch ( NoSuchAlgorithmException e ) { e . printStackTrace ( ) ; } return new byte [ _NUM ] ; }
16458	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( textField != _NULL ) { return textField . isEnabled ( ) ; } } return _BOOL ; }
16488	@ Override public boolean next ( ) { if ( isLhsEmpty ) return _BOOL ; if ( s2 . next ( ) ) return _BOOL ; else if ( ! ( isLhsEmpty = ! s1 . next ( ) ) ) { s2 . beforeFirst ( ) ; return s2 . next ( ) ; } else { return _BOOL ; } }
16583	public void add ( String key , String value ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value _CHAR ) ; } synchronized ( contexts ) { contexts . add ( Maps . immutableEntry ( key , value ) ) ; } }
16600	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
16637	public synchronized void press ( int value ) { if ( this . state != Input . State . WAITING_FOR_RELEASE ) { this . value = this . value + value ; if ( this . holdType == Input . Hold . HOLD ) { this . state = Input . State . WAITING_FOR_RELEASE ; } else { this . state = Input . State . PRESSED ; } } }
16655	public boolean removeClientDataTagUpdateListener ( final BaseTagListener listener ) { boolean retval = _BOOL ; try { listenersLock . writeLock ( ) . lock ( ) ; retval = listeners . remove ( listener ) ; } finally { listenersLock . writeLock ( ) . unlock ( ) ; } return retval ; }
16717	@ Override public void handleMessage ( final SoapMessage msg ) throws Fault { if ( mode . isCheckOnly ( ) ) { logger . warn ( _CHAR Running in _CHAR + mode + _CHAR mode , no response signature verification available ! _CHAR ) ; } else if ( isErrorResponse ( msg ) ) { logger . warn ( _CHAR Validation error , no response signature verification available ! _CHAR ) ; } else { super . handleMessage ( msg ) ; } }
16766	public static Long truncateOpCRC32 ( String stream , DLSN dlsn ) { CRC32 crc = requestCRC . get ( ) ; try { crc . update ( stream . getBytes ( UTF_8 ) ) ; crc . update ( dlsn . serializeBytes ( ) ) ; return crc . getValue ( ) ; } finally { crc . reset ( ) ; } }
16788	public ItemStack removeStack ( ItemStack itemStack ) { stack -= itemStack . getStack ( ) ; if ( stack < _NUM ) { itemStack . stack = stack * - _NUM ; stack = _NUM ; } else { itemStack . stack = _NUM ; } return itemStack ; }
16897	public int read ( ) throws IOException { if ( frameSize != _NUM ) { throw new IOException ( _CHAR can not read a single byte if frame size > 1 '' ) ; } byte [ ] data = new byte [ _NUM ] ; int temp = read ( data ) ; if ( temp <= _NUM ) { return - _NUM ; } return data [ _NUM ] & _NUM ; }
17026	public static void closeSilently ( Closeable c ) { if ( c == _NULL ) { return ; } try { c . close ( ) ; } catch ( Throwable t ) { LogUtils . warn ( t ) ; } }
17095	public final void openFallbackOutputStream ( ) throws DataFallbackException { if ( output == _NULL ) { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR openOutputStream ( ) : Opening the writer for the '' + dataFile . getName ( ) + _CHAR file _CHAR ) ; try { output = new BufferedWriter ( new FileWriter ( dataFile , _BOOL ) ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } } }
17159	protected ArrayList computeNames ( AbstractTextEditor editor ) { IJavaElement jElem = getJavaElement ( editor ) ; ArrayList names = new ArrayList ( ) ; if ( jElem instanceof ICompilationUnit ) { ICompilationUnit cu = ( ICompilationUnit ) jElem ; return getNames ( cu ) ; } else { return names ; } }
17196	@ NotNull public ImageOverlayBuilder toDiskAndLaunchViewer ( @ NotNull File file ) { toDisk ( file ) ; try { Desktop . getDesktop ( ) . open ( file ) ; Utils . waitFor ( _NUM , TimeUnit . SECONDS ) ; } catch ( IOException e ) { throw new CognitiveException ( _CHAR Could not open image _CHAR , e ) ; } return this ; }
17265	private void widgetModified ( ) { if ( mWidget == _NULL ) { return ; } if ( ! mWidgetModified ) { mConstraintModel . getSelection ( ) . addModifiedWidget ( mWidget ) ; } mWidgetModified = _BOOL ; mConstraintModel . getDrawConstraintModels ( ) . forEach ( _NULL ) ; saveWidget ( ) ; }
17437	public boolean implies ( Permission permission ) { if ( ! ( permission instanceof GrantPermission ) ) { return _BOOL ; } if ( implier == _NULL ) { Implier imp = new Implier ( ) ; imp . add ( this ) ; implier = imp ; } return implier . implies ( permission ) ; }
17499	private Object writeReplace ( ) throws ObjectStreamException { Object impl_proxy = impl ; if ( impl instanceof ProxyAccessor ) { impl_proxy = ( ( ProxyAccessor ) impl ) . getProxy ( ) ; logger . log ( Level . FINEST , _CHAR Obtained implementation proxy : { _NUM } _CHAR , impl_proxy ) ; if ( impl_proxy == _NULL ) { throw new InvalidObjectException ( _CHAR Implementation _CHAR_CHAR ) ; } } return impl_proxy ; }
17581	private static String translate ( final String s , final Locale locale ) { try { ResourceBundle bundle = ResourceBundle . getBundle ( _CHAR org . apache . commons . math . MessagesResources _CHAR , locale ) ; if ( bundle . getLocale ( ) . getLanguage ( ) . equals ( locale . getLanguage ( ) ) ) { return bundle . getString ( s ) ; } } catch ( MissingResourceException mre ) { } return s ; }
17586	public static boolean checkIfExpressionContainsColumn ( Expression expression ) { if ( expression instanceof ColumnExpression ) { return _BOOL ; } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfExpressionContainsColumn ( child ) ) { return _BOOL ; } } return _BOOL ; }
17635	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( colourButton != _NULL ) { return colourButton . isEnabled ( ) ; } } return _BOOL ; }
17653	public static void writeByteArrayToFile ( File file , byte [ ] data , boolean append ) throws IOException { OutputStream out = _NULL ; try { out = openOutputStream ( file , append ) ; out . write ( data ) ; out . close ( ) ; } finally { IOUtils . closeQuietly ( out ) ; } }
17748	public static void drawSnapIndicator ( ViewTransform transform , Graphics2D g , SnapCandidate candidate ) { if ( candidate . source == _NULL || candidate . target == _NULL ) { return ; } if ( candidate . source . isVerticalAnchor ( ) ) { drawSnapVerticalIndicator ( transform , g , candidate ) ; } else { drawSnapHorizontalIndicator ( transform , g , candidate ) ; } }
17785	public int CalcBonusGloryReward ( boolean isWin , boolean isBossKilled ) { int BossKilled = _NUM ; int Win = _NUM ; int Loss = _NUM ; if ( isBossKilled ) { return isWin ? ( Win + BossKilled ) : ( Loss + BossKilled ) ; } else { return isWin ? Win : Loss ; } }
17933	@ SpaceDataEvent public Data processData ( Data data ) { try { Thread . sleep ( workDuration ) ; } catch ( InterruptedException e ) { } data . setProcessed ( _BOOL ) ; data . setData ( _CHAR PROCESSED : _CHAR + data . getRawData ( ) ) ; log . info ( _CHAR ------ PROCESSED : _CHAR + data ) ; return data ; }
17957	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
17976	public String toString ( ) { String sRes = _CHAR [ _CHAR ; Iterator iIter = iterator ( ) ; while ( iIter . hasNext ( ) ) { Object oNext = iIter . next ( ) ; sRes += oNext . toString ( ) ; if ( iIter . hasNext ( ) ) sRes += _CHAR , _CHAR ; } sRes += _CHAR ] _CHAR ; return sRes ; }
18012	public MyDialog heightParam ( int height ) { if ( mLayoutHeight != height ) { mLayoutHeight = height ; if ( isShowing ( ) && mContentView != _NULL ) { mRunShowAnimation = _BOOL ; mContainer . forceLayout ( ) ; mContainer . requestLayout ( ) ; } } return this ; }
18044	public DateColumn selectIf ( IntPredicate predicate ) { DateColumn column = emptyCopy ( ) ; IntIterator iterator = intIterator ( ) ; while ( iterator . hasNext ( ) ) { int next = iterator . nextInt ( ) ; if ( predicate . test ( next ) ) { column . add ( next ) ; } } return column ; }
18110	public boolean add ( int val ) { int index = insertionIndex ( val ) ; if ( index < _NUM ) { return _BOOL ; } byte previousState = _states [ index ] ; _set [ index ] = val ; _states [ index ] = FULL ; postInsertHook ( previousState == FREE ) ; return _BOOL ; }
18286	public static String format ( char text , char strand ) { if ( strand == _CHAR ) { return _CHAR \ _NUM [ _NUM ; _NUM ; _NUM ; _NUM ; _NUM ; _NUM _CHAR + text + _CHAR \ _NUM [ _NUM _CHAR ; } else if ( strand == _CHAR ) { return _CHAR \ _NUM [ _NUM ; _NUM ; _NUM ; _NUM ; _NUM ; _NUM _CHAR + text + _CHAR \ _NUM [ _NUM _CHAR ; } else { return _CHAR \ _NUM [ _NUM ; _NUM ; _NUM ; _NUM ; _NUM ; _NUM _CHAR + text + _CHAR \ _NUM [ _NUM _CHAR ; } }
18332	public void addBitmapToCache ( String data , BitmapDrawable value ) { if ( data == _NULL || value == _NULL ) { return ; } if ( mMemoryCache != _NULL ) { if ( RecyclingBitmapDrawable . class . isInstance ( value ) ) { ( ( RecyclingBitmapDrawable ) value ) . setIsCached ( _BOOL ) ; } mMemoryCache . put ( data , value ) ; } }
18420	private boolean release ( String id ) { AudioPlayer audio = players . remove ( id ) ; if ( audio == _NULL ) { return _BOOL ; } if ( players . isEmpty ( ) ) { onLastPlayerReleased ( ) ; } audio . destroy ( ) ; return _BOOL ; }
18432	@ Override public void onDestroy ( ) { Log_OC . v ( TAG , _CHAR Destroying service _CHAR ) ; mBinder = _NULL ; mServiceHandler = _NULL ; mServiceLooper . quit ( ) ; mServiceLooper = _NULL ; mNotificationManager = _NULL ; AccountManager am = AccountManager . get ( getApplicationContext ( ) ) ; am . removeOnAccountsUpdatedListener ( this ) ; super . onDestroy ( ) ; }
18508	public static SecretKey generateKey ( String algorithm ) throws EncodingException { try { KeyGenerator kgen = KeyGenerator . getInstance ( algorithm ) ; kgen . init ( _NUM ) ; SecretKey key = kgen . generateKey ( ) ; return key ; } catch ( Exception e ) { throw new EncodingException ( e ) ; } }
18557	public void resetRowSelection ( ) { if ( ! updatingListSelectionModel ) { updatingListSelectionModel = _BOOL ; try { super . resetRowSelection ( ) ; } finally { updatingListSelectionModel = _BOOL ; } } }
18695	private MultipartFile findByFileName ( String filename , Map < String , MultipartFile > files ) { if ( files . containsKey ( filename ) ) { return files . get ( filename ) ; } for ( MultipartFile file : files . values ( ) ) { if ( filename . equals ( file . getOriginalFilename ( ) ) ) { return file ; } } return _NULL ; }
18775	public void add ( int val ) { IntListNode node = new IntListNode ( val ) ; if ( head == _NULL ) { head = node ; tail = node ; } else { tail . next = node ; tail = node ; } }
18809	private void reduce ( ) { if ( reqs == _NULL ) { reqs = empty ; } if ( prefs == _NULL ) { prefs = empty ; } reduce ( _NUM , _NUM ) ; setRelative ( reqs , REL_REQS ) ; setRelative ( prefs , REL_PREFS ) ; }
18826	void flushAll ( ) { for ( Buffer buff : bufferPool ) { try { buff . getExternalLock ( ) . lock ( ) ; buff . flush ( ) ; } finally { buff . getExternalLock ( ) . unlock ( ) ; } } }
18847	public String toString ( ) { String sRes = _CHAR [ _CHAR ; Iterator iIter = iterator ( ) ; while ( iIter . hasNext ( ) ) { Object oNext = iIter . next ( ) ; sRes += oNext . toString ( ) ; if ( iIter . hasNext ( ) ) sRes += _CHAR | _CHAR ; } sRes += _CHAR ] _CHAR ; return sRes ; }
18884	public IReadBlock next ( ) { try { countReads ++ ; return ReadBlockRMA2 . read ( rma2Formatter , - _NUM , wantReadText , wantMatchData , wantMatchText , minScore , maxExpected , textStorageReader , dataIndexReader ) ; } catch ( IOException e ) { Basic . caught ( e ) ; error = _BOOL ; return _NULL ; } }
18960	private boolean newSeqNum ( long currentNum , long oldNum ) { if ( oldNum == - _NUM ) { return _BOOL ; } else if ( currentNum > oldNum ) { return _BOOL ; } else { return _BOOL ; } }
18995	@ Override public Settings init ( String tag ) { if ( tag == _NULL ) { throw new NullPointerException ( _CHAR tag may not be _NULL _CHAR ) ; } if ( tag . trim ( ) . length ( ) == _NUM ) { throw new IllegalStateException ( _CHAR tag may not be empty _CHAR ) ; } this . tag = tag ; this . settings = new Settings ( ) ; return settings ; }
19124	private boolean canReadFile ( File file ) { if ( ! file . exists ( ) ) { log . info ( _CHAR File _CHAR + file . getAbsolutePath ( ) + _CHAR does not exist _CHAR ) ; return _BOOL ; } if ( ! file . canRead ( ) ) { log . info ( _CHAR File _CHAR + file . getAbsolutePath ( ) + _CHAR can not be read _CHAR ) ; return _BOOL ; } return _BOOL ; }
19135	public InputStream newInputStream ( int index ) throws IOException { synchronized ( DiskLruCache . this ) { if ( entry . currentEditor != this ) { throw new IllegalStateException ( ) ; } if ( ! entry . readable ) { return _NULL ; } return new FileInputStream ( entry . getCleanFile ( index ) ) ; } }
19146	private static int computeCapacity ( final int expectedSize ) { if ( expectedSize == _NUM ) { return _NUM ; } final int capacity = ( int ) FastMath . ceil ( expectedSize / LOAD_FACTOR ) ; final int powerOfTwo = Integer . highestOneBit ( capacity ) ; if ( powerOfTwo == capacity ) { return capacity ; } return nextPowerOfTwo ( capacity ) ; }
19158	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( comboBox != _NULL ) { return comboBox . isEnabled ( ) ; } } return _BOOL ; }
19209	public void addBitmapToCache ( String data , BitmapDrawable value ) { if ( data == _NULL || value == _NULL ) { return ; } if ( mMemoryCache != _NULL ) { if ( RecyclingBitmapDrawable . class . isInstance ( value ) ) { ( ( RecyclingBitmapDrawable ) value ) . setIsCached ( _BOOL ) ; } mMemoryCache . put ( data , value ) ; } }
19403	@ Override public boolean accept ( File dir , String name ) { if ( dir != _NULL && new File ( dir , name ) . isDirectory ( ) ) { return _BOOL ; } for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( name , wildcard ) ) { return _BOOL ; } } return _BOOL ; }
19503	public void writeLong ( long value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeLong ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
19563	private List < CarbonDictionaryColumnMetaChunk > readDictionaryMetadataFile ( ) throws IOException { CarbonDictionaryMetadataReader columnMetadataReaderImpl = getDictionaryMetadataReader ( ) ; List < CarbonDictionaryColumnMetaChunk > dictionaryMetaChunkList = _NULL ; try { dictionaryMetaChunkList = columnMetadataReaderImpl . read ( ) ; } finally { columnMetadataReaderImpl . close ( ) ; } return dictionaryMetaChunkList ; }
19666	private void beforeMovingToPrimary ( ) throws SpaceComponentsInitializeException { switch ( _spaceMode ) { case NONE : initPrimaryOnlyComponents ( ) ; initBackupComponents ( ) ; break ; case BACKUP : initPrimaryOnlyComponents ( ) ; break ; } }
19733	public void flushBase64 ( ) throws java . io . IOException { if ( position > _NUM ) { if ( encode ) { out . write ( encode3to4 ( b4 , buffer , position , options ) ) ; position = _NUM ; } else { throw new java . io . IOException ( _CHAR Base64 input not properly padded . '' ) ; } } }
19925	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
20081	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
20225	boolean hasUUID ( long uuid ) { if ( _readStorage . hasUUID ( uuid ) ) { return _BOOL ; } for ( AstyanaxStorage storage : _writeStorage ) { if ( storage . hasUUID ( uuid ) ) { return _BOOL ; } } return _BOOL ; }
20249	boolean hasWildcard ( ) { boolean wildcarded = _BOOL ; for ( int i = _NUM ; i < websterRoot . length ; i ++ ) { String root = websterRoot [ i ] ; if ( ( root . indexOf ( _CHAR ) ) != - _NUM ) { wildcarded = _BOOL ; break ; } } return ( wildcarded ) ; }
20260	public static String bind ( String key , Object [ ] args ) { try { return MessageFormat . format ( bind ( key ) , args ) ; } catch ( MissingResourceException e ) { return key ; } catch ( NullPointerException e ) { return _CHAR ! _CHAR + key + _CHAR ! _CHAR ; } }
20343	@ Override public String object2Relation ( String fieldType ) { if ( fieldType != _NULL ) { if ( fieldType . equals ( _CHAR char _CHAR ) || fieldType . equals ( _CHAR java . lang . Character _CHAR ) ) { return _CHAR text _CHAR ; } if ( fieldType . equals ( _CHAR java . lang . String _CHAR ) ) { return _CHAR text _CHAR ; } } return _NULL ; }
20352	public InputStream newInputStream ( int index ) throws IOException { synchronized ( DiskLruCache . this ) { if ( entry . currentEditor != this ) { throw new IllegalStateException ( ) ; } if ( ! entry . readable ) { return _NULL ; } return new FileInputStream ( entry . getCleanFile ( index ) ) ; } }
20396	@ Override public Writer append ( char c ) throws IOException { try { beforeWrite ( _NUM ) ; out . append ( c ) ; afterWrite ( _NUM ) ; } catch ( IOException e ) { handleIOException ( e ) ; } return this ; }
20425	public void printSinks ( ) { if ( this . sourceSinkProvider == _NULL ) { System . err . println ( _CHAR Sinks not calculated yet _CHAR ) ; return ; } System . out . println ( _CHAR Sinks : _CHAR ) ; for ( SourceSinkDefinition am : getSinks ( ) ) { System . out . println ( am . toString ( ) ) ; } System . out . println ( _CHAR End of Sinks _CHAR ) ; }
20453	private static boolean sameConstraints ( Lease l1 , Lease l2 ) { if ( ! ( l1 instanceof RemoteMethodControl ) ) { return ! ( l2 instanceof RemoteMethodControl ) ; } else if ( ! ( l2 instanceof RemoteMethodControl ) ) { return _BOOL ; } else { return ConstrainableProxyUtil . equivalentConstraints ( ( ( RemoteMethodControl ) l1 ) . getConstraints ( ) , ( ( RemoteMethodControl ) l2 ) . getConstraints ( ) , leaseToLeaseMethods ) ; } }
20709	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
20789	public void reset ( ) { if ( ! isSourcesModified ( ) ) { if ( myInitialItems == _NULL ) { refreshUi ( ) ; } return ; } myConfigurable . getRepoManager ( ) . getSources ( new StudioDownloader ( ) , myLogger , _BOOL ) ; myInitialItems = _NULL ; refreshUi ( ) ; }
20847	private boolean checkForNameCollision ( List < JobDefinition > jobDefinitions , JobDefinition jobDefinitionToAdd ) { for ( JobDefinition jobDefinition : jobDefinitions ) { if ( jobDefinition . getId ( ) . equals ( jobDefinitionToAdd . getId ( ) ) ) { continue ; } if ( jobDefinition . getName ( ) . equals ( jobDefinitionToAdd . getName ( ) ) ) { return _BOOL ; } } return _BOOL ; }
20930	public final synchronized void close ( AionServerPacket closePacket , boolean forced ) { if ( isWriteDisabled ( ) ) { return ; } log . info ( _CHAR sending packet : _CHAR + closePacket + _CHAR and closing connection after that . '' ) ; pendingClose = _BOOL ; isForcedClosing = forced ; sendMsgQueue . clear ( ) ; sendMsgQueue . addLast ( closePacket ) ; enableWriteInterest ( ) ; }
21087	public static boolean isNonpositiveInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { int temp = Integer . parseInt ( s ) ; if ( temp <= _NUM ) return _BOOL ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
21126	public static Flag evaluateByCharacter ( final char flag ) { Check . notNegative ( flag , _CHAR flag _CHAR ) ; Flag result = _NULL ; for ( final Flag value : values ( ) ) { if ( value . getCharacter ( ) == flag ) { result = value ; break ; } } return result ; }
21165	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( comboBox != _NULL ) { return comboBox . isEnabled ( ) ; } } return _BOOL ; }
21195	public String encode ( final Cigar cigar ) { if ( cigar . isEmpty ( ) ) { return _CHAR * _CHAR ; } final StringBuilder ret = new StringBuilder ( ) ; for ( final CigarElement cigarElement : cigar . getCigarElements ( ) ) { ret . append ( cigarElement . getLength ( ) ) ; ret . append ( cigarElement . getOperator ( ) ) ; } return ret . toString ( ) ; }
21205	private String modifyProjectName ( String originalProjectName ) { final StringBuffer buffer = new StringBuffer ( ) ; if ( getProjectNamePrefix ( ) != _NULL ) { buffer . append ( getProjectNamePrefix ( ) . trim ( ) ) ; } buffer . append ( originalProjectName ) ; if ( getProjectNameSuffix ( ) != _NULL ) { buffer . append ( getProjectNameSuffix ( ) . trim ( ) ) ; } return buffer . toString ( ) ; }
21318	method_info findMethod ( String s ) { method_info m ; int i ; for ( i = _NUM ; i < methods_count ; i ++ ) { m = methods [ i ] ; if ( s . equals ( m . toName ( constant_pool ) ) ) { return m ; } } return _NULL ; }
21386	public static String toString ( Serializable serializable ) { if ( _NULL == serializable ) { return _NULL ; } try { return ( String ) serializable ; } catch ( Exception e ) { return serializable . toString ( ) ; } }
21503	public static byte [ ] encryptMD5 ( byte [ ] bytes ) { try { MessageDigest md = MessageDigest . getInstance ( _CHAR MD5 _CHAR ) ; md . update ( bytes ) ; return md . digest ( ) ; } catch ( NoSuchAlgorithmException e ) { e . printStackTrace ( ) ; } return new byte [ _NUM ] ; }
21509	public void saveIntoFile ( String path , Bitmap bitmap ) { try { FileOutputStream out = new FileOutputStream ( path ) ; bitmap . compress ( Bitmap . CompressFormat . PNG , _NUM , out ) ; out . flush ( ) ; out . close ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
21894	protected final boolean handleAllocNode ( AllocNode src ) { boolean ret = _BOOL ; Node [ ] targets = pag . allocLookup ( src ) ; for ( Node element : targets ) { if ( element . makeP2Set ( ) . add ( src ) ) { varNodeWorkList . add ( element ) ; ret = _BOOL ; } } return ret ; }
22018	public static boolean isTableExists ( String tableName , SQLiteDatabase db ) { boolean exist ; try { exist = BaseUtility . containsIgnoreCases ( findAllTableNames ( db ) , tableName ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; exist = _BOOL ; } return exist ; }
22033	private static boolean rotateIfLandScapeCamera ( ) { if ( Build . BRAND . toLowerCase ( ) . equals ( _CHAR samsung _CHAR ) ) { return _BOOL ; } else if ( Build . BRAND . toLowerCase ( ) . equals ( _CHAR sony _CHAR ) ) { return _BOOL ; } else { return _BOOL ; } }
22110	@ Override public void populateField ( String value ) { if ( comboBox != _NULL ) { ValueComboBoxData valueComboBoxData = comboDataMap . get ( value ) ; if ( valueComboBoxData != _NULL ) { comboBox . setSelectedItem ( valueComboBoxData ) ; } else { logger . error ( _CHAR Unknown ValueComboBoxData value : _CHAR + value ) ; } } }
22126	private void ensureLoaded ( ) throws IOException { if ( ! _loaded ) { if ( _backingFile != _NULL ) { _log . debug ( _CHAR Loading buffer for index { } from { } _CHAR , _startIndex , _backingFile ) ; try ( ByteChannel in = Files . newByteChannel ( _backingFile , READ ) ) { in . read ( _buffer ) ; } } _loaded = _BOOL ; } }
22272	public static int cleanSuspendedTransactions ( ) throws GenericTransactionException { Transaction trans = _NULL ; int num = _NUM ; while ( ( trans = popSuspendedTransaction ( ) ) != _NULL ) { resume ( trans ) ; rollback ( ) ; num ++ ; } clearTransactionStartStampStack ( ) ; return num ; }
22324	@ Override public Settings init ( String tag ) { if ( tag == _NULL ) { throw new NullPointerException ( _CHAR tag may not be _NULL _CHAR ) ; } if ( tag . trim ( ) . length ( ) == _NUM ) { throw new IllegalStateException ( _CHAR tag may not be empty _CHAR ) ; } this . tag = tag ; this . settings = new Settings ( ) ; return settings ; }
22387	public INDArray toBgr ( File file ) { try { BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( file ) ) ; INDArray ret = toBgr ( bis ) ; bis . close ( ) ; return ret ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
22389	public void addQuery ( boolean and , ContentletQuery contentletQuery ) { if ( and ) { query . append ( _CHAR _CHAR + contentletQuery . getQuery ( ) ) ; } else { query . insert ( _NUM , _CHAR ( _CHAR ) ; query . append ( _CHAR ) ( _CHAR ) ; query . append ( contentletQuery . getQuery ( ) ) ; query . append ( _CHAR ) _CHAR ) ; } }
22400	@ Override public void characters ( XMLString text , Augmentations augs ) throws XNIException { text = handleCharacters ( text ) ; if ( fDocumentHandler != _NULL ) { if ( fNormalizeData && fUnionType ) { if ( augs != _NULL ) fDocumentHandler . characters ( fEmptyXMLStr , augs ) ; } else { fDocumentHandler . characters ( text , augs ) ; } } }
22441	public static void validateConfAndURI ( DistributedLogConfiguration conf , URI uri ) throws IllegalArgumentException { if ( _NULL == conf ) { throw new IllegalArgumentException ( _CHAR Incorrect Configuration _CHAR ) ; } else { conf . validate ( ) ; } if ( ( _NULL == uri ) || ( _NULL == uri . getAuthority ( ) ) || ( _NULL == uri . getPath ( ) ) ) { throw new IllegalArgumentException ( _CHAR Incorrect ZK URI _CHAR ) ; } }
22452	public synchronized void close ( ) throws JMSException { if ( m_closed ) { return ; } if ( _logger . isLoggable ( Level . FINE ) ) { _logger . fine ( _CHAR GSMessageProducerImpl . close ( ) : _CHAR + toString ( ) ) ; } m_session . removeProducer ( this ) ; m_session = _NULL ; m_closed = _BOOL ; }
22461	private void compareOriginalData ( FieldConfigValuePopulateInterface field ) { if ( field != _NULL ) { String nextText = field . getStringValue ( ) ; String originalText = valueMap . get ( field ) ; if ( originalText != _NULL ) { if ( originalText . compareTo ( nextText ) != _NUM ) { treeDataUpdated = _BOOL ; } } } }
22538	private void executeBadgeByContentProvider ( Context context , ComponentName componentName , int badgeCount ) { if ( badgeCount < _NUM ) { return ; } if ( mQueryHandler == _NULL ) { mQueryHandler = new AsyncQueryHandler ( context . getApplicationContext ( ) . getContentResolver ( ) ) { } ; } insertBadgeAsync ( badgeCount , componentName . getPackageName ( ) , componentName . getClassName ( ) ) ; }
22568	public void addJar ( String name ) { try { if ( name . endsWith ( _CHAR . jar _CHAR ) ) { JarFile f = new JarFile ( name ) ; jarFiles . add ( f ) ; } } catch ( IOException e ) { e . printStackTrace ( ) ; } }
22618	public SampleAttributeTable copy ( ) { final SampleAttributeTable sampleAttributeTable = new SampleAttributeTable ( ) ; try ( StringWriter w = new StringWriter ( ) ) { write ( w , _BOOL , _BOOL ) ; sampleAttributeTable . read ( new StringReader ( w . toString ( ) ) , getSampleOrder ( ) , _BOOL ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } return sampleAttributeTable ; }
22655	@ Override public void onRequestPermissionsResult ( int requestCode , @ NonNull String [ ] permissions , @ NonNull int [ ] grantResults ) { switch ( requestCode ) { case REQUEST_STORAGE_READ_ACCESS_PERMISSION : if ( grantResults [ _NUM ] == PackageManager . PERMISSION_GRANTED ) { pickFromGallery ( ) ; } break ; default : super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } }
22669	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
22770	@ Override public void onDestroy ( ) { Log_OC . v ( TAG , _CHAR Destroying service _CHAR ) ; mBinder = _NULL ; mServiceHandler = _NULL ; mServiceLooper . quit ( ) ; mServiceLooper = _NULL ; mNotificationManager = _NULL ; AccountManager am = AccountManager . get ( getApplicationContext ( ) ) ; am . removeOnAccountsUpdatedListener ( this ) ; super . onDestroy ( ) ; }
22819	public static void writeByteArrayToFile ( File file , byte [ ] data , boolean append ) throws IOException { OutputStream out = _NULL ; try { out = openOutputStream ( file , append ) ; out . write ( data ) ; out . close ( ) ; } finally { IOUtils . closeQuietly ( out ) ; } }
22898	protected void checkFeature ( String featureId ) throws XMLConfigurationException { if ( ! fRecognizedFeatures . contains ( featureId ) ) { if ( fParentSettings != _NULL ) { fParentSettings . getFeature ( featureId ) ; } else { short type = XMLConfigurationException . NOT_RECOGNIZED ; throw new XMLConfigurationException ( type , featureId ) ; } } }
22933	public void clearAllBetweenHeadersAndFooters ( ) { List < Insertion > headersAndFooters = new ArrayList < > ( ) ; headersAndFooters . addAll ( getHeaders ( ) ) ; headersAndFooters . addAll ( getFooters ( ) ) ; mInserts . clear ( ) ; getItems ( ) . clear ( ) ; mOnlyInsertsCount = _NUM ; mOnlyItemsCount = _NUM ; reAddAllInserts ( headersAndFooters ) ; notifyIfNeed ( ) ; }
23012	protected boolean expect ( TokenKind kind , String message , boolean alwaysConsume ) { TokenKind current = currentToken ( ) ; if ( current == kind || alwaysConsume ) { builder . advanceLexer ( ) ; } if ( current != kind ) { builder . error ( message ) ; return _BOOL ; } return _BOOL ; }
23180	private String pickCharset ( ) { if ( charset != _NULL ) { return charset ; } else if ( utf8Supported ) { return _CHAR UTF - _NUM _CHAR ; } else { return System . getProperty ( _CHAR file . encoding _CHAR ) ; } }
23185	public void requestRender ( boolean invalidateModel ) { ScreenView screenView = getCurrentScreenView ( ) ; if ( screenView != _NULL ) { if ( invalidateModel ) { screenView . getModel ( ) . notifyModified ( NlModel . ChangeType . REQUEST_RENDER ) ; } else { screenView . getModel ( ) . requestRender ( ) ; } } }
23200	public static boolean anyDimensionHasItems ( Collection < DimensionalObject > dimensions ) { if ( dimensions == _NULL || dimensions . isEmpty ( ) ) { return _BOOL ; } for ( DimensionalObject dim : dimensions ) { if ( dim . hasItems ( ) ) { return _BOOL ; } } return _BOOL ; }
23205	@ Override public void handleUseItemFinish ( Player player , Npc npc ) { switch ( npc . getNpcId ( ) ) { case _NUM : case _NUM : case _NUM : case _NUM : despawnNpc ( npc ) ; SkillEngine . getInstance ( ) . getSkill ( npc , _NUM , _NUM , player ) . useNoAnimationSkill ( ) ; break ; } }
23303	public void removeLastEmails ( int limit ) { List < Message > messages = getMessageList ( limit ) ; for ( Message message : messages ) { try { message . setFlag ( Flags . Flag . DELETED , _BOOL ) ; } catch ( MessagingException e ) { LOGGER . error ( _CHAR error when removing emails from server _CHAR , e ) ; } } }
23348	public void destroySelf ( ) { if ( mPager == _NULL || mPager . getAdapter ( ) == _NULL ) { return ; } InfinitePagerAdapter wrapper = ( InfinitePagerAdapter ) mPager . getAdapter ( ) ; PagerAdapter adapter = wrapper . getRealAdapter ( ) ; if ( adapter != _NULL ) { adapter . unregisterDataSetObserver ( dataChangeObserver ) ; } removeAllViews ( ) ; }
23432	public void saveFingerprintAsFile ( byte [ ] fingerprint , String filename ) { FileOutputStream fileOutputStream ; try { fileOutputStream = new FileOutputStream ( filename ) ; fileOutputStream . write ( fingerprint ) ; fileOutputStream . close ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
23457	public static int max ( int a , int b , int c ) { int ma ; ma = a ; if ( b > ma ) { ma = b ; } if ( c > ma ) { ma = c ; } return ma ; }
23591	public static Flag evaluateByNumber ( final int flag ) { Check . notNegative ( flag , _CHAR flag _CHAR ) ; Flag result = _NULL ; for ( final Flag value : values ( ) ) { if ( value . getNumber ( ) == flag ) { result = value ; break ; } } return result ; }
23600	public synchronized boolean receive ( DHCPMessage outMessage ) { try { DatagramPacket incoming = new DatagramPacket ( new byte [ this . mtu ] , this . mtu ) ; receive ( incoming ) ; outMessage . internalize ( incoming . getData ( ) ) ; } catch ( java . io . IOException e ) { return _BOOL ; } return _BOOL ; }
23620	public String checkIDRefID ( ) { Iterator iter = fIdRefTable . keySet ( ) . iterator ( ) ; String key ; while ( iter . hasNext ( ) ) { key = ( String ) iter . next ( ) ; if ( ! fIdTable . containsKey ( key ) ) { return key ; } } return _NULL ; }
23717	public Boolean isValidOptionValue ( String value ) { if ( ! hasOptionSet ( ) || value == _NULL ) { return _BOOL ; } for ( Option option : getOptionSet ( ) . getOptions ( ) ) { if ( value . equals ( option . getCode ( ) ) ) { return _BOOL ; } } return _BOOL ; }
23793	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
23813	protected boolean matchesSequence ( TokenKind ... kinds ) { PsiBuilder . Marker marker = builder . mark ( ) ; for ( TokenKind kind : kinds ) { if ( ! matches ( kind ) ) { marker . rollbackTo ( ) ; return _BOOL ; } } marker . drop ( ) ; return _BOOL ; }
23817	private static String readKeyValue ( Integer keyHandle , String keyPath , String valueName ) { Integer actualKeyHandle = _NULL ; try { actualKeyHandle = openKey ( keyHandle , keyPath ) ; if ( actualKeyHandle == _NULL ) return _NULL ; return queryKeyValue ( actualKeyHandle , valueName ) ; } finally { closeKey ( actualKeyHandle ) ; } }
24095	@ Override public void handleMessage ( final SoapMessage msg ) throws Fault { if ( mode . isCheckOnly ( ) ) { logger . warn ( _CHAR Running in _CHAR + mode + _CHAR mode , no response signature verification available ! _CHAR ) ; } else if ( isErrorResponse ( msg ) ) { logger . warn ( _CHAR Validation error , no response signature verification available ! _CHAR ) ; } else { super . handleMessage ( msg ) ; } }
24181	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
24187	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( textField != _NULL ) { return textField . isEnabled ( ) ; } } return _BOOL ; }
24316	public Object postMessage ( String id , Object data ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL ) { Object obj = plugin . onMessage ( id , data ) ; if ( obj != _NULL ) { return obj ; } } } return ctx . onMessage ( id , data ) ; }
24362	public JsonWriter newJsonWriter ( Writer writer ) throws IOException { if ( generateNonExecutableJson ) { writer . write ( JSON_NON_EXECUTABLE_PREFIX ) ; } JsonWriter jsonWriter = new JsonWriter ( writer ) ; if ( prettyPrinting ) { jsonWriter . setIndent ( _CHAR _CHAR ) ; } jsonWriter . setSerializeNulls ( serializeNulls ) ; return jsonWriter ; }
24515	public boolean isComponentNotPresent ( final String cssClassName ) { boolean missing = _BOOL ; try { wait . withTimeout ( Timeouts . SMALL ) . until ( _NULL ) ; missing = _BOOL ; } catch ( TimeoutException e ) { LOG . debug ( String . format ( _CHAR component located by : % s is not present _CHAR , cssClassName ) , e ) ; } return missing ; }
24529	public TrustManagerBuilder and ( ) { if ( ! mgr . isMatchAll ( ) ) { if ( mgr . size ( ) < _NUM ) { mgr . setMatchAll ( _BOOL ) ; } else { mgr = CompositeTrustManager . matchAll ( mgr ) ; } } return ( this ) ; }
24531	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
24645	private void disconnectFromGeoServer ( GeoServerClientInterface client ) { if ( client != _NULL ) { client . disconnect ( ) ; GeoServerConnection connection = client . getConnection ( ) ; if ( connection != _NULL ) { geoServerStyleMap . remove ( connection ) ; geoServerLayerMap . remove ( connection ) ; progress . disconnect ( connection ) ; } } }
24733	public static void writeByteArrayToFile ( File file , byte [ ] data , boolean append ) throws IOException { OutputStream out = _NULL ; try { out = openOutputStream ( file , append ) ; out . write ( data ) ; out . close ( ) ; } finally { IOUtils . closeQuietly ( out ) ; } }
24735	public static boolean isRestricted ( Player player , Class < ? extends Restrictions > callingRestriction ) { if ( player == _NULL ) { return _BOOL ; } for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . isRestricted . ordinal ( ) ] ) { if ( ! restrictions . isRestricted ( player , callingRestriction ) ) { return _BOOL ; } } return _BOOL ; }
24799	public Decision suggestCategory ( String sFilename ) { DocumentNGramGraph dDoc = new DocumentNGramSymWinGraph ( ) ; try { dDoc . loadDataStringFromFile ( sFilename ) ; } catch ( IOException ex ) { Logger . getLogger ( Decider . class . getName ( ) ) . log ( Level . SEVERE , _NULL , ex ) ; return _NULL ; } return suggestCategory ( dDoc ) ; }
24824	public static String lowerFirst ( String s ) { if ( s . isEmpty ( ) ) { return s ; } char c = s . charAt ( _NUM ) ; if ( Character . isLowerCase ( c ) ) { return s ; } c = Character . toLowerCase ( c ) ; return c + s . substring ( _NUM ) ; }
24910	private Object writeReplace ( ) throws ObjectStreamException { Object impl_proxy = impl ; if ( impl instanceof ProxyAccessor ) { impl_proxy = ( ( ProxyAccessor ) impl ) . getProxy ( ) ; logger . log ( Level . FINEST , _CHAR Obtained implementation proxy : { _NUM } _CHAR , impl_proxy ) ; if ( impl_proxy == _NULL ) { throw new InvalidObjectException ( _CHAR Implementation _CHAR_CHAR ) ; } } return impl_proxy ; }
25278	public DatagramPacket readPacket ( ) throws IOException { DatagramPacket dp = new DatagramPacket ( new byte [ _NUM ] , _NUM ) ; try { socket . receive ( dp ) ; dp . setData ( Arrays . copyOf ( dp . getData ( ) , dp . getLength ( ) ) ) ; return dp ; } catch ( SocketTimeoutException e ) { return _NULL ; } }
25306	private boolean release ( String id ) { AudioPlayer audio = players . remove ( id ) ; if ( audio == _NULL ) { return _BOOL ; } if ( players . isEmpty ( ) ) { onLastPlayerReleased ( ) ; } audio . destroy ( ) ; return _BOOL ; }
25377	public boolean ContainsFunction ( PetFunctionType type ) { if ( type . getId ( ) < _NUM ) { return _BOOL ; } for ( PetFunction t : getPetFunctions ( ) ) { if ( t . getPetFunctionType ( ) == type ) { return _BOOL ; } } return _BOOL ; }
25495	private void flushAndRelease ( ) { final int flushResult = SimpleLame . flush ( mp3Buffer ) ; if ( flushResult > _NUM ) { try { os . write ( mp3Buffer , _NUM , flushResult ) ; } catch ( final IOException e ) { Log . e ( TAG , _CHAR Lame flush error _CHAR ) ; } } }
25519	public static void storeKey ( SecretKey key , File file ) { try { ObjectOutputStream out = new ObjectOutputStream ( new FileOutputStream ( file ) ) ; out . writeObject ( key ) ; out . flush ( ) ; out . close ( ) ; } catch ( Exception e ) { throw new EncodingException ( e ) ; } }
25526	public void waitForConsistentState ( ) { if ( isReplicated ( ) ) { try { if ( shouldFlushPendingReplication ( ) ) getReplicationNode ( ) . getAdmin ( ) . flushPendingReplication ( _clusterPolicy . getReplicationPolicy ( ) . getAsyncChannelShutdownTimeout ( ) , TimeUnit . MILLISECONDS ) ; } catch ( RuntimeException e ) { if ( _logger . isLoggable ( Level . SEVERE ) ) _logger . log ( Level . SEVERE , _CHAR Flush pending replication raised an exception : _CHAR , e ) ; throw e ; } } }
25637	public Item add_CharacterTransfer ( Item item ) { if ( item . getItemTemplate ( ) . isKinah ( ) ) { this . kinahItem = item ; } else if ( ! itemStorage . putItem ( item ) ) { return _NULL ; } item . setItemLocation ( storageType . getId ( ) ) ; setPersistentState ( PersistentState . UPDATE_REQUIRED ) ; return item ; }
25850	public int writeGraphToFile ( byte [ ] img , File to ) { try { FileOutputStream fos = new FileOutputStream ( to ) ; fos . write ( img ) ; fos . close ( ) ; } catch ( java . io . IOException ioe ) { return - _NUM ; } return _NUM ; }
25891	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( slider != _NULL ) { return slider . isEnabled ( ) ; } } return _BOOL ; }
25905	public Properties readSettings ( ) throws ProxyException { Properties settings = new Properties ( ) ; try { parseSettings ( settings ) ; } catch ( IOException e ) { Logger . log ( getClass ( ) , LogLevel . ERROR , _CHAR Gnome settings read error . '' , e ) ; throw new ProxyException ( e ) ; } return settings ; }
25925	private boolean checkIfExpressionContainsColumn ( Expression expression ) { if ( expression instanceof ColumnExpression ) { return _BOOL ; } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfExpressionContainsColumn ( child ) ) { return _BOOL ; } } return _BOOL ; }
25929	@ Override public void onEnd ( boolean result , BaseSliderView target ) { if ( target . isErrorDisappear ( ) == _BOOL || result == _BOOL ) { return ; } for ( BaseSliderView slider : mImageContents ) { if ( slider . equals ( target ) ) { removeSlider ( target ) ; break ; } } }
25965	private ClientCommandTagImpl createCommandTag ( Long id ) { ClientCommandTagImpl commandTag = new ClientCommandTagImpl ( id ) ; commandTag . update ( createCommandTagHandleImpl ( id ) ) ; try { commandTag . setValue ( ( Object ) ( new String ( _CHAR HI ! _CHAR ) ) ) ; } catch ( CommandTagValueException e ) { e . printStackTrace ( ) ; } return commandTag ; }
25976	public static double clamp ( double value , double min , double max ) { if ( value <= max && value >= min ) { return value ; } else if ( max < value ) { return max ; } else { return min ; } }
26106	public void flushBase64 ( ) throws java . io . IOException { if ( position > _NUM ) { if ( encode ) { out . write ( encode3to4 ( b4 , buffer , position , options ) ) ; position = _NUM ; } else { throw new java . io . IOException ( _CHAR Base64 input not properly padded . '' ) ; } } }
26118	public void enqueueLaunch ( boolean incognito , int parentId , AsyncTabCreationParams asyncParams ) { ThreadUtils . assertOnUiThread ( ) ; LaunchRunnable runnable = new LaunchRunnable ( incognito , parentId , asyncParams ) ; if ( mCurrentRunnable == _NULL ) { mCurrentRunnable = runnable ; mCurrentRunnable . launch ( ) ; } else { mQueue . add ( runnable ) ; } }
26187	protected void processPlayRequest ( ) { tryToGetAudioFocus ( ) ; if ( mState == State . STOPPED ) { playMedia ( ) ; } else if ( mState == State . PAUSED ) { mState = State . PLAYING ; setUpAsForeground ( String . format ( getString ( R . string . media_state_playing ) , mFile . getFileName ( ) ) ) ; configAndStartMediaPlayer ( ) ; } }
26217	public Role toEntity ( RoleDTO dto , int depth ) { if ( dto == _NULL ) { return _NULL ; } Role role = new Role ( ) ; role . setId ( dto . id ) ; role . setRoleName ( dto . roleName ) ; if ( depth -- > _NUM ) { } return role ; }
26230	public static boolean containsAnyIgnoreCase ( String string , Collection < String > searchStrings ) { if ( string == _NULL || searchStrings == _NULL ) { return _BOOL ; } for ( String searchString : searchStrings ) { if ( string . trim ( ) . toLowerCase ( ) . contains ( searchString . trim ( ) . toLowerCase ( ) ) ) { return _BOOL ; } } return _BOOL ; }
26273	public void type ( char c ) { if ( Character . isAlphabetic ( c ) ) { typeAlphabetic ( c ) ; } else if ( charShiftType . containsKey ( c ) ) { charShiftType . get ( c ) . apply ( controller ) ; } else if ( ! typeSpecialChar ( c ) ) { typeUnknown ( c ) ; } }
26285	public void copy ( DataTable megan4Table ) { clear ( ) ; StringWriter sw = new StringWriter ( ) ; try { megan4Table . write ( sw , _BOOL ) ; read ( new BufferedReader ( new StringReader ( sw . toString ( ) ) ) , _BOOL ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
26297	public static Integer parseInt ( String string ) { if ( string == _NULL || string . trim ( ) . isEmpty ( ) ) { return _NULL ; } try { return Integer . parseInt ( string ) ; } catch ( NumberFormatException ex ) { return _NULL ; } }
26333	public final void finalize ( ) { try { closeFallbackInputStream ( ) ; closeFallbackOutputStream ( ) ; closeCounterDataInputStream ( ) ; closeCounterDataOutputStream ( ) ; } catch ( Exception e ) { LOG . error ( _CHAR finalize ( ) - The opened streams to the files could not be closed _CHAR ) ; } }
26352	private void initConnectivity ( ) { if ( ! isConnectivityLayoutOverridden ( ) ) { if ( connectivityText == _NULL ) { connectivityText = ( TextView ) connectivityView . findViewById ( R . id . connectivity_text ) ; } } if ( mReceiver == _NULL ) { mReceiver = new NetworkReceiver ( this ) ; mContext . registerReceiver ( mReceiver , new IntentFilter ( ConnectivityManager . CONNECTIVITY_ACTION ) ) ; } }
26373	public void clear ( ) { lock . lock ( ) ; try { onceUsedObservers . clear ( ) ; } finally { lock . unlock ( ) ; } observers . clear ( ) ; attackCalcObservers . clear ( ) ; }
26392	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( table != _NULL ) { return table . isEnabled ( ) ; } } return _BOOL ; }
26529	protected boolean searchForRecursiveIncludes ( String includedSysId ) { if ( includedSysId . equals ( fCurrentBaseURI . getExpandedSystemId ( ) ) ) { return _BOOL ; } else if ( fParentXIncludeHandler == _NULL ) { return _BOOL ; } else { return fParentXIncludeHandler . searchForRecursiveIncludes ( includedSysId ) ; } }
26571	public static void loadArmV7aLibrary ( ApplicationLike applicationLike , String libName ) { if ( libName == _NULL || libName . isEmpty ( ) || applicationLike == _NULL ) { throw new TinkerRuntimeException ( _CHAR libName or context is _NULL ! _CHAR ) ; } if ( TinkerApplicationHelper . isTinkerEnableForNativeLib ( applicationLike ) ) { if ( TinkerApplicationHelper . loadLibraryFromTinker ( applicationLike , _CHAR lib / armeabi - v7a _CHAR , libName ) ) { return ; } } System . loadLibrary ( libName ) ; }
26626	private void authorizeDomain ( Registration registration , String domain ) { try { val authorization = getAuthorization ( registration , domain ) ; val challenge = prepareDnsChallenge ( authorization ) ; completeChallenge ( challenge ) ; } catch ( AcmeException e ) { e . printStackTrace ( ) ; throw new LetsencryptException ( e . getMessage ( ) ) ; } }
26753	private void clone ( final Properties properties ) { if ( properties . isEmpty ( ) ) return ; synchronized ( properties ) { for ( final String key : properties . stringPropertyNames ( ) ) { final String value = properties . getProperty ( key ) ; if ( ! Strings . isNullOrEmpty ( value ) ) { data . put ( key , value ) ; } } } }
26870	public void clear ( ) { this . n = _NUM ; minImpl . clear ( ) ; maxImpl . clear ( ) ; sumImpl . clear ( ) ; sumLogImpl . clear ( ) ; sumSqImpl . clear ( ) ; geoMeanImpl . clear ( ) ; meanImpl . clear ( ) ; covarianceImpl . clear ( ) ; }
27021	public synchronized void readLock ( ) { while ( activeWriter || waitingWriters != _NUM ) { try { wait ( ) ; } catch ( InterruptedException e ) { throw new ConcurrentLockException ( _CHAR read lock interrupted in thread _CHAR ) ; } } activeReaders ++ ; }
27132	public void writeInt ( int value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeInt ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
27192	public static String bind ( String key ) { try { return getResourceBundle ( ) . getString ( key ) ; } catch ( MissingResourceException e ) { return key ; } catch ( NullPointerException e ) { return _CHAR ! _CHAR + key + _CHAR ! _CHAR ; } }
27361	public void add ( Legion legion ) { if ( legion == _NULL || legion . getLegionName ( ) == _NULL ) { return ; } if ( legionsById . put ( legion . getLegionId ( ) , legion ) != _NULL ) { throw new DuplicateAionObjectException ( ) ; } if ( legionsByName . put ( legion . getLegionName ( ) . toLowerCase ( ) , legion ) != _NULL ) { throw new DuplicateAionObjectException ( ) ; } }
27490	public void notifyUnlockInput ( ) { if ( locked ) { synchronized ( directorListeners ) { IDirectorListener [ ] listeners = directorListeners . toArray ( new IDirectorListener [ directorListeners . size ( ) ] ) ; for ( IDirectorListener directorListener : listeners ) { if ( directorListener != this ) directorListener . unlockUserInput ( ) ; } } } locked = _BOOL ; }
27993	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( comboBox != _NULL ) { return comboBox . isEnabled ( ) ; } } return _BOOL ; }
27998	public void writeBytes ( byte [ ] value , int offset , int length ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . write ( _BYTES ) ; this . dataOut . writeInt ( length ) ; this . dataOut . write ( value , offset , length ) ; } catch ( IOException ioe ) { raise ( ioe ) ; } }
28313	@ Override public void innerDelete ( ) { Collection < ? extends Concept > subSet = subTypes ( ) ; Collection < ? extends Concept > instanceSet = instances ( ) ; subSet . remove ( this ) ; if ( subSet . isEmpty ( ) && instanceSet . isEmpty ( ) ) { deleteNode ( ) ; } else { throw new ConceptException ( ErrorMessage . CANNOT_DELETE . getMessage ( toString ( ) ) ) ; } }
28381	public static String serializeToString ( Document doc ) { ByteArrayOutputStream baos = new ByteArrayOutputStream ( ) ; try { MaryNormalisedWriter mnw = new MaryNormalisedWriter ( ) ; mnw . output ( doc , baos ) ; } catch ( Exception e1 ) { return _CHAR _CHAR ; } return baos . toString ( ) ; }
28415	public static void initSPFactory ( ) { Class < ? > spFactoryCls = CoreProperties . getLoader ( ) . getPropertyAsClass ( VanillaDb . class . getName ( ) + _CHAR . SP_FACTORY _CHAR , SampleStoredProcedureFactory . class , StoredProcedureFactory . class ) ; if ( spFactoryCls != _NULL ) { try { spFactory = ( StoredProcedureFactory ) spFactoryCls . newInstance ( ) ; } catch ( InstantiationException | IllegalAccessException e ) { e . printStackTrace ( ) ; } } }
28429	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
28575	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( start . datePicker != _NULL ) { return start . datePicker . isEnabled ( ) ; } } return _BOOL ; }
28673	@ Override public boolean isEnabled ( ) { if ( ( attributeSelectionPanel != _NULL ) && ! isValueOnly ( ) ) { return attributeSelectionPanel . isEnabled ( ) ; } else { if ( spinner != _NULL ) { return spinner . isEnabled ( ) ; } } return _BOOL ; }
28686	private static int computeCapacity ( final int expectedSize ) { if ( expectedSize == _NUM ) { return _NUM ; } final int capacity = ( int ) FastMath . ceil ( expectedSize / LOAD_FACTOR ) ; final int powerOfTwo = Integer . highestOneBit ( capacity ) ; if ( powerOfTwo == capacity ) { return capacity ; } return nextPowerOfTwo ( capacity ) ; }
28716	private void processDataTag ( final SourceDataTagValue sourceDataTagValue ) { try { if ( LOGGER . isTraceEnabled ( ) ) { LOGGER . trace ( _CHAR Processing incoming update for datatag # '' + sourceDataTagValue . getId ( ) ) ; } dataTagFacade . updateFromSource ( sourceDataTagValue . getId ( ) , sourceDataTagValue ) ; } catch ( CacheElementNotFoundException cacheEx ) { LOGGER . warn ( _CHAR Received unrecognized data tag # _CHAR + sourceDataTagValue . getId ( ) + _CHAR : ignoring the update _CHAR ) ; } }
28770	public void discard ( ) { synchronized ( this ) { bDiscarded = _BOOL ; } if ( ( from & FROM_GROUP ) != _NUM ) { lookupDisc . discard ( proxy ) ; } else if ( ( from & FROM_LOCATOR ) != _NUM ) { locatorDisc . discard ( proxy ) ; } }
28955	public static String bind ( String key , Object [ ] args ) { try { return MessageFormat . format ( bind ( key ) , args ) ; } catch ( MissingResourceException e ) { return key ; } catch ( NullPointerException e ) { return _CHAR ! _CHAR + key + _CHAR ! _CHAR ; } }
28988	public final void openFallbackInputStream ( ) throws DataFallbackException { if ( inputBuf == _NULL ) { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR openFallbackInputStream ( ) : Opening the reader for the '' + dataFile . getName ( ) + _CHAR file _CHAR ) ; try { setInput ( new BufferedReader ( new FileReader ( dataFile ) ) ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } } }
29150	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
29266	public final static boolean isEjbQlIdentifier ( String s ) { if ( s == _NULL || s . length ( ) == _NUM ) { return _BOOL ; } for ( int i = _NUM ; i < ejbQlIdentifiers . length ; i ++ ) { if ( ejbQlIdentifiers [ i ] . equalsIgnoreCase ( s ) ) { return _BOOL ; } } return _BOOL ; }
29337	public static boolean verifyPermissions ( int ... grantResults ) { if ( grantResults . length == _NUM ) { return _BOOL ; } for ( int result : grantResults ) { if ( result != PackageManager . PERMISSION_GRANTED ) { return _BOOL ; } } return _BOOL ; }
29433	@ Override public void quit ( ) { if ( reusable ) { cleanDriver ( ) ; sendEvent ( _BOOL ) ; } else { super . quit ( ) ; alive = _BOOL ; sendEvent ( _BOOL ) ; } }
29480	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
29546	public void close ( ) { synchronized ( lock ) { if ( closed ) { return ; } if ( cluster != _NULL ) { HFactory . shutdownCluster ( cluster ) ; } closed = _BOOL ; } }
29635	public static boolean isNegativeInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; try { int temp = Integer . parseInt ( s ) ; if ( temp < _NUM ) return _BOOL ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
29658	protected void stopJobAcquisitionThread ( ) { if ( asyncJobAcquisitionThread != _NULL ) { try { asyncJobAcquisitionThread . join ( ) ; } catch ( InterruptedException e ) { log . warn ( _CHAR Interrupted while waiting for the async job acquisition thread to terminate '' , e ) ; } asyncJobAcquisitionThread = _NULL ; } }
29756	private void removeOptionFields ( Box box , GraphicPanelFieldManager fieldConfigManager ) { if ( optionPanel != _NULL ) { box . remove ( optionPanel ) ; for ( FieldConfigBase field : optionFieldList ) { fieldConfigManager . removeField ( field ) ; } optionFieldList . clear ( ) ; optionPanel = _NULL ; box . revalidate ( ) ; } }
29862	public void endDocument ( ) throws SAXException { writeText4Links ( ) ; write ( _CHAR ) ; super . endDocument ( ) ; try { flush ( ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
29937	public static boolean isPackageInstalled ( Context context , String packageName ) { if ( ! TextUtils . isEmpty ( packageName ) ) { try { PackageInfo packageInfo = context . getPackageManager ( ) . getPackageInfo ( packageName , _NUM ) ; return packageInfo != _NULL ; } catch ( PackageManager . NameNotFoundException e ) { } } return _BOOL ; }
30146	public static Double parseDouble ( String value ) { if ( value == _NULL || value . trim ( ) . isEmpty ( ) ) { return _NULL ; } try { return Double . parseDouble ( value ) ; } catch ( NumberFormatException ex ) { return _NULL ; } }
30293	public int CalcBonusAbyssReward ( boolean isWin , boolean isBossKilled ) { int BossKilled = _NUM ; int Win = _NUM ; int Loss = _NUM ; if ( isBossKilled ) { return isWin ? ( Win + BossKilled ) : ( Loss + BossKilled ) ; } else { return isWin ? Win : Loss ; } }
30360	private static int convert ( ConstraintWidget . DimensionBehaviour behaviour ) { switch ( behaviour ) { case FIXED : return SingleWidgetView . FIXED ; case WRAP_CONTENT : return SingleWidgetView . WRAP_CONTENT ; case ANY : return SingleWidgetView . ANY ; } return SingleWidgetView . FIXED ; }
30373	T cycle ( ) { if ( _prioritize != _NULL ) { return _prioritize ; } if ( ! _queue . isEmpty ( ) ) { T first = _queue . keySet ( ) . iterator ( ) . next ( ) ; _queue . get ( first ) ; return first ; } return _NULL ; }
30391	private static boolean containsOrExtends ( @ NotNull Set < PsiClass > resolvedClasses , @ NotNull PsiClass relatedActivity ) { if ( resolvedClasses . contains ( relatedActivity ) ) { return _BOOL ; } for ( PsiClass resolvedClass : resolvedClasses ) { if ( relatedActivity . isInheritor ( resolvedClass , _BOOL ) ) { return _BOOL ; } } return _BOOL ; }
30452	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
30628	public void onDrawerOpened ( View drawerView ) { super . onDrawerOpened ( drawerView ) ; try { if ( pokemonGo != _NULL && pokemonGo . getPlayerProfile ( ) != _NULL ) { renderProfile ( pokemonGo . getPlayerProfile ( ) ) ; } } catch ( Exception e ) { } getSupportActionBar ( ) . setTitle ( R . string . profile ) ; }
30652	public void writeShort ( short value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeShort ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
30765	public int insertFromScan ( Scan s ) { if ( ! super . insertIntoNextEmptySlot ( ) ) { return _NUM ; } for ( String fldName : sch . fields ( ) ) { Constant val = s . getVal ( fldName ) ; this . setVal ( fldName , val ) ; } if ( s . next ( ) ) return _NUM ; else return - _NUM ; }
30833	private void beforeName ( ) throws IOException { int context = peek ( ) ; if ( context == NONEMPTY_OBJECT ) { out . write ( _CHAR ) ; } else if ( context != EMPTY_OBJECT ) { throw new IllegalStateException ( _CHAR Nesting problem . '' ) ; } newline ( ) ; replaceTop ( DANGLING_NAME ) ; }
30968	public Bitmap onTakePhotoResult ( ) { Uri takenPhotoUri = getPhotoFileUri ( this . thePhotoName , this . anotherPhotoName , this . activity ) ; if ( takenPhotoUri != _NULL ) { Bitmap takenImage = BitmapFactory . decodeFile ( takenPhotoUri . getPath ( ) ) ; takenImage = resizePhoto ( takenImage , this . resizePhoto , _BOOL ) ; return takenImage ; } else { return _NULL ; } }
30969	@ Override public void close ( ) throws CannotCloseContainerException { if ( applicationContext instanceof DisposableBean ) { try { ( ( DisposableBean ) applicationContext ) . destroy ( ) ; } catch ( Exception e ) { throw new CannotCloseContainerException ( _CHAR Failed to close container with application context [ _CHAR + applicationContext + _CHAR ] _CHAR , e ) ; } } super . close ( ) ; }
31091	@ Override public boolean accept ( File file ) { if ( file . isDirectory ( ) ) { return _BOOL ; } for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( file . getName ( ) , wildcard ) ) { return _BOOL ; } } return _BOOL ; }
31170	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
31257	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
31318	public static void checkConstraints ( InvocationConstraints constraints ) throws UnsupportedConstraintException { if ( constraints == _NULL ) { return ; } for ( Iterator i = constraints . requirements ( ) . iterator ( ) ; i . hasNext ( ) ; ) { InvocationConstraint c = ( InvocationConstraint ) i . next ( ) ; if ( ! supported ( c ) ) { throw new UnsupportedConstraintException ( _CHAR unsupported constraint : _CHAR + c ) ; } } }
31592	public static CompressionCodec . Type stringToType ( String compressionString ) { if ( compressionString . equals ( LZ4 ) ) { return CompressionCodec . Type . LZ4 ; } else if ( compressionString . equals ( NONE ) ) { return CompressionCodec . Type . NONE ; } else { return CompressionCodec . Type . UNKNOWN ; } }
31622	public boolean resourceInitializationException ( TypeDecl catchType ) { ASTNode $ State state = state ( ) ; try { for ( ResourceDeclaration resource : getResourceList ( ) ) { if ( resource . reachedException ( catchType ) ) return _BOOL ; } return _BOOL ; } finally { } }
31659	public void writeFloat ( float value ) throws JMSException { initializeWriting ( ) ; try { this . dataOut . writeFloat ( value ) ; } catch ( IOException ioe ) { JMSException jmsEx = new JMSException ( _CHAR Could not write data : _CHAR + ioe . toString ( ) ) ; jmsEx . setLinkedException ( ioe ) ; throw jmsEx ; } }
31665	private boolean jumpToPage ( int position , boolean smooth ) { if ( mShowWelcomePage && ! didAcceptTermsOfService ( ) ) { return position == _NUM ; } if ( position >= mPagerAdapter . getCount ( ) ) { completeFirstRunExperience ( ) ; return _BOOL ; } mPager . setCurrentItem ( position , smooth ) ; return _BOOL ; }
31831	protected double adjust ( double v ) { switch ( m_scale ) { case Constants . LOG_SCALE : return Math . pow ( _NUM , v ) ; case Constants . SQRT_SCALE : return v * v ; case Constants . LINEAR_SCALE : default : return v ; } }
31855	public static boolean checkIfLeftExpressionRequireEvaluation ( Expression expression ) { if ( expression . getFilterExpressionType ( ) == ExpressionType . UNKNOWN || ! ( expression instanceof ColumnExpression ) ) { return _BOOL ; } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfLeftExpressionRequireEvaluation ( child ) ) { return _BOOL ; } } return _BOOL ; }
32062	public static void writeByteArrayToFile ( File file , byte [ ] data , boolean append ) throws IOException { OutputStream out = _NULL ; try { out = openOutputStream ( file , append ) ; out . write ( data ) ; out . close ( ) ; } finally { IOUtils . closeQuietly ( out ) ; } }
32249	@ Override public void stop ( boolean force ) { try { if ( force ) { getProcessAdmin ( ) . killVM ( ) ; } } catch ( RemoteException ex ) { ProcessLogger . log ( _CHAR Exception caught while killing VM '' , ex ) ; } super . stop ( force ) ; }
32367	public static String decompressToStringForZlib ( byte [ ] bytesToDecompress ) { byte [ ] bytesDecompressed = decompressForZlib ( bytesToDecompress ) ; String returnValue = _NULL ; try { returnValue = new String ( bytesDecompressed , _NUM , bytesDecompressed . length , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException uee ) { uee . printStackTrace ( ) ; } return returnValue ; }
32379	private void distributeValue ( final SourceDataTagValue sourceDataTagValue ) throws JMSException { for ( JmsSender jmsSender : jmsSenders ) { try { jmsSender . processValue ( sourceDataTagValue ) ; } catch ( Exception e ) { LOGGER . error ( _CHAR Unhandled exception caught while sending a source value ( tag id _CHAR + sourceDataTagValue . getId ( ) + _CHAR ) - the value update will be lost . '' , e ) ; } } sourceDataTagValue . log ( ) ; }
32523	public final void fallback ( final IFallback fallbackObj ) throws DataFallbackException { try { if ( isFallbackFileEmpty ( ) ) fFileController . closeFallbackInputStream ( ) ; fFileController . openFallbackOutputStream ( ) ; fFileController . writeLine ( fallbackObj ) ; fFileController . setNumberOfLines ( fFileController . getNumberOfLines ( ) + _NUM ) ; } catch ( DataFallbackException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } }
32535	public boolean parseBoolean ( String text ) throws DataParseException { if ( TRUE . equalsIgnoreCase ( text ) ) { return _BOOL ; } else if ( FALSE . equalsIgnoreCase ( text ) ) { return _BOOL ; } else { throw new DataParseException ( _CHAR Input does not represent a boolean value : _CHAR + text ) ; } }
32601	public static void logDuration ( boolean wereResultsSeen , boolean isChained , long durationMs ) { if ( wereResultsSeen ) { RecordHistogram . recordTimesHistogram ( _CHAR Search . ContextualSearchDurationSeen _CHAR , durationMs , TimeUnit . MILLISECONDS ) ; } else if ( isChained ) { RecordHistogram . recordTimesHistogram ( _CHAR Search . ContextualSearchDurationUnseenChained _CHAR , durationMs , TimeUnit . MILLISECONDS ) ; } else { RecordHistogram . recordTimesHistogram ( _CHAR Search . ContextualSearchDurationUnseen _CHAR , durationMs , TimeUnit . MILLISECONDS ) ; } }
32669	private void createLeftOver ( ) { int lineLengthBytes = currentLastBytePos + _NUM ; if ( lineLengthBytes > _NUM ) { leftOver = new byte [ lineLengthBytes ] ; System . arraycopy ( data , _NUM , leftOver , _NUM , lineLengthBytes ) ; } else { leftOver = _NULL ; } currentLastBytePos =- _NUM ; }
32684	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
32747	@ Override public int read ( ) throws IOException { int c = in . read ( ) ; if ( c == - _NUM ) return - _NUM ; if ( ( c & ~ _NUM ) != _NUM ) { System . out . println ( _CHAR MD5InputStream . read ( ) got character with ( c & ~ _NUM ) != _NUM ) ! _CHAR ) ; } else { md5 . Update ( c ) ; } return c ; }
32791	public static String quote ( String string ) { StringWriter sw = new StringWriter ( ) ; synchronized ( sw . getBuffer ( ) ) { try { return quote ( string , sw ) . toString ( ) ; } catch ( IOException ignored ) { return _CHAR _CHAR ; } } }
32806	public boolean removeItemContent ( String uid ) { if ( ! users . isEmpty ( ) ) { return removeContent ( uid , users ) ; } else if ( ! reports . isEmpty ( ) ) { return removeContent ( uid , reports ) ; } else { return removeContent ( uid , resources ) ; } }
32817	public void flushBase64 ( ) throws java . io . IOException { if ( position > _NUM ) { if ( encode ) { out . write ( encode3to4 ( b4 , buffer , position , options ) ) ; position = _NUM ; } else { throw new java . io . IOException ( _CHAR Base64 input not properly padded . '' ) ; } } }
32936	public boolean removeTuple ( Tuple t ) { if ( t instanceof Node ) { return removeNode ( ( Node ) t ) ; } else if ( t instanceof Edge ) { return removeEdge ( ( Edge ) t ) ; } else { throw new IllegalArgumentException ( _CHAR Input tuple must be part of this graph _CHAR ) ; } }
33019	protected void tearDown ( ) { objArray = _NULL ; myobjArray = _NULL ; ll = _NULL ; myll = _NULL ; reversedLinkedList = _NULL ; myReversedLinkedList = _NULL ; s = _NULL ; mys = _NULL ; hm = _NULL ; }
33086	public boolean validate ( Set < String > values ) { if ( values . size ( ) > _NUM ) { for ( String value : values ) { if ( ! StringUtils . isNotEmpty ( value ) ) { return _BOOL ; } } return _BOOL ; } return _BOOL ; }
33173	private void removeUnusedWidgetsFromFields ( PdfPage page ) { if ( page . isFlushed ( ) ) { return ; } List < PdfAnnotation > annots = page . getAnnotations ( ) ; for ( PdfAnnotation annot : annots ) { if ( annot . getSubtype ( ) . equals ( PdfName . Widget ) ) { ( ( PdfWidgetAnnotation ) annot ) . releaseFormFieldFromWidgetAnnotation ( ) ; } } }
33319	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
33426	public static File writeDataToFile ( final byte [ ] data , final File file , final boolean append ) { try ( FileOutputStream out = new FileOutputStream ( file , append ) ) { out . write ( data ) ; out . close ( ) ; return file ; } catch ( Exception e ) { JKExceptionUtil . handle ( e ) ; return _NULL ; } }
33489	@ Override public void start ( ) { if ( session == _NULL ) { status = NEED_UNWRAP ; return ; } if ( clientHello != _NULL && this . status != FINISHED ) { return ; } sendHelloRequest ( ) ; status = NEED_UNWRAP ; }
33604	public void addEditor ( ) { removeEditor ( ) ; editor = comboBox . getEditor ( ) . getEditorComponent ( ) ; if ( editor != _NULL ) { configureEditor ( ) ; comboBox . add ( editor ) ; if ( comboBox . isFocusOwner ( ) ) { editor . requestFocusInWindow ( ) ; } } }
33707	public static void serverFailed ( String serviceName ) { if ( validRemoteURL == _NULL ) { if ( debug . warningEnabled ( ) ) { debug . warning ( _CHAR JAXRPCHelper : No valid server found _CHAR ) ; } serverFailed = _BOOL ; } else if ( serviceName . startsWith ( validRemoteURL ) ) { serverFailed = _BOOL ; } }
33766	public void makeImmutable ( ) { if ( mutable ) { if ( decision != _NULL ) { decision . makeImmutable ( ) ; } if ( status != _NULL ) { status . makeImmutable ( ) ; } mutable = _BOOL ; } }
33783	private boolean canAccessClipboard ( ) { SecurityManager sm = System . getSecurityManager ( ) ; if ( sm == _NULL ) return _BOOL ; try { sm . checkPermission ( SecurityConstants . AWT . ACCESS_CLIPBOARD_PERMISSION ) ; return _BOOL ; } catch ( SecurityException e ) { } return _BOOL ; }
33803	public static JButton makeJButton ( LocalizableMessage label , LocalizableMessage tooltip ) { JButton b = new JButton ( ) ; if ( label != _NULL ) { b . setText ( label . toString ( ) ) ; } if ( tooltip != _NULL ) { b . setToolTipText ( tooltip . toString ( ) ) ; } b . setOpaque ( _BOOL ) ; return b ; }
33878	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
33928	public final Signum negate ( ) { if ( this == POSITIVE ) { return NEGATIVE ; } else if ( this == NEGATIVE ) { return POSITIVE ; } else { return this ; } }
33933	private final void prevToken ( ) { if ( m_queueMark > _NUM ) { m_queueMark -- ; m_token = ( String ) m_ops . m_tokenQueue . elementAt ( m_queueMark ) ; m_tokenChar = m_token . charAt ( _NUM ) ; } else { m_token = _NULL ; m_tokenChar = _NUM ; } }
33988	private void cleanSession ( final Session session ) { logger . debug ( _CHAR End of SLO - Processing to session cleanup _CHAR ) ; session . remove ( subjectMapping ) ; session . remove ( sessionIndexMapping ) ; session . remove ( authnContext ) ; if ( attributeMapping != _NULL ) { for ( final String key : attributeMapping . keySet ( ) ) { session . remove ( key ) ; } } }
34133	public static Properties loadProperties ( String fileName ) throws IOException { Properties prop = new Properties ( ) ; InputStream propIn = new FileInputStream ( fileName ) ; try { prop . load ( propIn ) ; } finally { propIn . close ( ) ; } return prop ; }
34141	@ Override public void recycle ( ) { remaining = _NUM ; pos = _NUM ; lastValid = _NUM ; endChunk = _BOOL ; needCRLFParse = _BOOL ; trailingHeaders . recycle ( ) ; trailingHeaders . setLimit ( maxTrailerSize ) ; extensionSize = _NUM ; error = _BOOL ; }
34265	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
34343	public C create ( ) throws DataLayerException { boolean success = _BOOL ; try { C response = connectionFactory . create ( ) ; success = _BOOL ; return response ; } finally { monitorStore . addConnection ( success ) ; } }
34409	public Attribute createAttribute ( String name , String value ) { AttributeField attributeImpl = new AttributeField ( ) ; try { attributeImpl . setName ( name ) ; attributeImpl . setValueAllowNull ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return attributeImpl ; }
34436	public static byte [ ] charToByte ( char [ ] charArray ) { byte bytearray [ ] = _NULL ; try { if ( charArray != _NULL ) { bytearray = ( byte [ ] ) new String ( charArray ) . getBytes ( _CHAR UTF - _NUM _CHAR ) ; } } catch ( UnsupportedEncodingException e ) { } return bytearray ; }
34604	static int findDNKeyParent ( ByteSequence dnKey ) { if ( dnKey . length ( ) == _NUM ) { return - _NUM ; } for ( int i = dnKey . length ( ) - _NUM ; i >= _NUM ; i -- ) { if ( positionIsRDNSeparator ( dnKey , i ) ) { return i ; } } return _NUM ; }
34632	private void waitForScenarioExecutedOnRs ( String testCase , FakeReplicationServer rs ) throws Exception { int nsec =- _NUM ; do { nsec ++ ; if ( nsec == _NUM ) { fail ( testCase + _CHAR : timeout waiting for scenario to be exectued on fake RS after '' + nsec + '' seconds . '' ) ; } Thread . sleep ( 1000 ) ; } while ( ! rs . isScenarioExecuted ( ) ) ; }
34659	public static MemoryNotificationInfo from ( CompositeData cd ) { if ( cd == _NULL ) { return _NULL ; } if ( cd instanceof MemoryNotifInfoCompositeData ) { return ( ( MemoryNotifInfoCompositeData ) cd ) . getMemoryNotifInfo ( ) ; } else { return new MemoryNotificationInfo ( cd ) ; } }
34700	public static void handleThrowable ( Throwable t ) { if ( t instanceof ThreadDeath ) { throw ( ThreadDeath ) t ; } if ( t instanceof StackOverflowError ) { return ; } if ( t instanceof VirtualMachineError ) { throw ( VirtualMachineError ) t ; } }
34765	private static boolean startsWithStringArray ( String sArray [ ] , String value ) { if ( value == _NULL ) { return _BOOL ; } for ( int i = _NUM ; i < sArray . length ; i ++ ) { if ( value . startsWith ( sArray [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
34956	public void maybePerformFinishedAnimation ( ) { if ( mAnimationProgress > ANIMATION_PROGRESS_STOPPED ) { return ; } if ( mAnimator != _NULL ) { mAnimator . cancel ( ) ; } setAnimationProgress ( ANIMATION_PROGRESS_STARTED ) ; mAnimator = ObjectAnimator . ofFloat ( this , _CHAR animationProgress _CHAR , ANIMATION_PROGRESS_STARTED , ANIMATION_PROGRESS_COMPLETED ) ; mAnimator . start ( ) ; }
35011	public String decodeKey ( final String hexEncodedKey ) { if ( StringUtils . isEmpty ( hexEncodedKey ) ) { throw new IllegalArgumentException ( _CHAR hexEncodedKey can not be empty _CHAR ) ; } try { return new String ( Hex . decodeHex ( hexEncodedKey . toCharArray ( ) ) ) ; } catch ( DecoderException de ) { throw new IllegalStateException ( de ) ; } }
35014	void compWriteObjectNotify ( ) { byte count = JComponent . getWriteObjCounter ( this ) ; JComponent . setWriteObjCounter ( this , ( byte ) ( count + _NUM ) ) ; if ( count != _NUM ) { return ; } uninstallUIAndProperties ( ) ; if ( getToolTipText ( ) != _NULL || this instanceof javax . swing . table . JTableHeader ) { ToolTipManager . sharedInstance ( ) . unregisterComponent ( JComponent . this ) ; } }
35065	public boolean isFulfilled ( ) { if ( requiredExtensions == _NULL ) { return _BOOL ; } Iterator < Extension > it = requiredExtensions . iterator ( ) ; while ( it . hasNext ( ) ) { Extension ext = it . next ( ) ; if ( ! ext . isFulfilled ( ) ) return _BOOL ; } return _BOOL ; }
35263	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; switch ( type ) { case Constants . ELEMNAME_WHEN : case Constants . ELEMNAME_OTHERWISE : break ; default : error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; } return super . appendChild ( newChild ) ; }
35294	public void flush ( ) { try { synchronized ( lock ) { ensureOpen ( ) ; out . flush ( ) ; } } catch ( IOException x ) { trouble = _BOOL ; } }
35316	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
35409	private void writeObject ( ObjectOutputStream oos ) throws IOException { PrincipalName krb5Principal ; try { krb5Principal = new PrincipalName ( fullName , nameType ) ; oos . writeObject ( krb5Principal . asn1Encode ( ) ) ; oos . writeObject ( krb5Principal . getRealm ( ) . asn1Encode ( ) ) ; } catch ( Exception e ) { throw new IOException ( e ) ; } }
35448	public void readOctetString ( ) throws IOException { if ( tag == ASN1Constants . TAG_OCTETSTRING ) { readContent ( ) ; } else if ( tag == ASN1Constants . TAG_C_OCTETSTRING ) { throw new ASN1Exception ( _CHAR Decoding constructed ASN . 1 octet string type is not supported _CHAR ) ; } else { throw expected ( _CHAR octetstring _CHAR ) ; } }
35677	public void enable ( ) { try { loadDataState ( ) ; } catch ( Exception e ) { logger . error ( ERR_LOADING_GENERATION_ID , getBaseDN ( ) , stackTraceToSingleLineString ( e ) ) ; return ; } enableService ( ) ; disabled = _BOOL ; }
35708	public Enumeration < Permission > elements ( ) { List < Permission > results = new ArrayList < > ( ) ; synchronized ( this ) { for ( List < UnresolvedPermission > l : perms . values ( ) ) { synchronized ( l ) { results . addAll ( l ) ; } } } return Collections . enumeration ( results ) ; }
35712	private void updateCurrentStation ( ) { int freq = mService . getFrequency ( ) ; if ( FmRadioUtils . isValidStation ( freq ) ) { if ( mCurrentStation != freq ) { Log . d ( TAG , _CHAR frequency in service is n _CHAR_CHAR ) ; mCurrentStation = freq ; FmRadioStation . setCurrentStation ( mContext , mCurrentStation ) ; refreshStationUI ( mCurrentStation ) ; } } }
35761	@ Deprecated public static LogStream log ( String name ) { LogStream stream ; synchronized ( known ) { stream = known . get ( name ) ; if ( stream == _NULL ) { stream = new LogStream ( name , defaultStream ) ; } known . put ( name , stream ) ; } return stream ; }
35795	protected void firePropertyChange ( String propertyName , Object oldValue , Object newValue ) { super . firePropertyChange ( propertyName , oldValue , newValue ) ; if ( propertyName . equals ( EnableWindowBlit ) ) { if ( newValue != _NULL ) { setScrollMode ( BLIT_SCROLL_MODE ) ; } else { setScrollMode ( SIMPLE_SCROLL_MODE ) ; } } }
35855	void createContext ( SSOToken appSSOToken ) throws SessionException { if ( appSSOToken == _NULL ) { if ( sessionDebug . warningEnabled ( ) ) { sessionDebug . warning ( _CHAR Session . '' + _CHAR createContext ( ) : , _CHAR + _CHAR can not obtain application SSO token , _CHAR + _CHAR defaulting to IP address _CHAR ) ; } } else { sessionDebug . message ( _CHAR Session . '' + _CHAR createContext ( ) : , _CHAR + _CHAR setting context to application SSO token _CHAR ) ; context = appSSOToken ; } }
35862	public void configChanged ( ConfigurationActionEvent e ) { if ( IDPPUtils . debug . messageEnabled ( ) ) { IDPPUtils . debug . message ( _CHAR IDPPServiceManager : configChanged : _CHAR ) ; } try { initializeService ( ) ; } catch ( IDPPException ie ) { IDPPUtils . debug . error ( _CHAR IDPPServiceManager : configChanged : _CHAR + _CHAR Error in updating service configuration . '' , ie ) ; } }
35944	public static boolean callsSuper ( MethodNode mn ) { for ( AbstractInsnNode ain : mn . instructions . toArray ( ) ) { if ( ain . getOpcode ( ) == Opcodes . INVOKESPECIAL ) { MethodInsnNode min = ( MethodInsnNode ) ain ; if ( min . name . equals ( mn . name ) ) { return _BOOL ; } } } return _BOOL ; }
36044	private void throwAbandonIfNeeded ( Exception x ) throws SearchAbandonException { if ( x != _NULL ) { if ( x instanceof InterruptedException ) { throw new SearchAbandonException ( State . INTERRUPTED , x , _NULL ) ; } throw new SearchAbandonException ( State . FAILED , x , _NULL ) ; } else if ( isCanceled ( ) ) { throw new SearchAbandonException ( State . CANCELLED , _NULL , _NULL ) ; } }
36277	@ Override public String toString ( ) { String s = _NULL ; try { JSONObject jo = toJSONObject ( ) ; s = ( jo == _NULL ) ? super . toString ( ) : jo . toString ( _NUM ) ; } catch ( JSONException e ) { PolicyConstants . DEBUG . error ( _CHAR NotSubject . toString ( ) _CHAR , e ) ; } return s ; }
36290	private static void swingInvoke ( Runnable r ) throws InterruptedException { try { SwingUtilities . invokeAndWait ( r ) ; } catch ( InterruptedException x ) { throw x ; } catch ( InvocationTargetException x ) { x . printStackTrace ( ) ; } }
36327	private static LocalizableMessage createLocalizableMessage ( AbstractManagedObjectDefinition < ? , ? > d , Reason reason ) { LocalizableMessage ufn = d . getUserFriendlyName ( ) ; switch ( reason ) { case NO_TYPE_INFORMATION : return ERR_DECODING_EXCEPTION_NO_TYPE_INFO . get ( ufn ) ; case WRONG_TYPE_INFORMATION : return ERR_DECODING_EXCEPTION_WRONG_TYPE_INFO . get ( ufn ) ; default : return ERR_DECODING_EXCEPTION_ABSTRACT_TYPE_INFO . get ( ufn ) ; } }
36423	protected void delegateFocus ( MouseEvent e ) { if ( comboBox . isEditable ( ) ) { Component comp = comboBox . getEditor ( ) . getEditorComponent ( ) ; if ( ( ! ( comp instanceof JComponent ) ) || ( ( JComponent ) comp ) . isRequestFocusEnabled ( ) ) { comp . requestFocus ( ) ; } } else if ( comboBox . isRequestFocusEnabled ( ) ) { comboBox . requestFocus ( ) ; } }
36450	public String decode ( String pString ) throws DecoderException { if ( pString == _NULL ) { return _NULL ; } try { return decode ( pString , getDefaultCharset ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
36499	public void removeResourceEnvRef ( String name ) { entries . remove ( name ) ; ContextResourceEnvRef resourceEnvRef = _NULL ; synchronized ( resourceEnvRefs ) { resourceEnvRef = resourceEnvRefs . remove ( name ) ; } if ( resourceEnvRef != _NULL ) { support . firePropertyChange ( _CHAR resourceEnvRef _CHAR , resourceEnvRef , _NULL ) ; resourceEnvRef . setNamingResources ( _NULL ) ; } }
36663	public void decrement ( ) { int counterVal = counter . decrementAndGet ( ) ; if ( counterVal == _NUM ) { if ( _NULL != resourceCallback ) { resourceCallback . onTransitionToIdle ( ) ; } } if ( counterVal < _NUM ) { throw new IllegalArgumentException ( _CHAR Counter has been corrupted ! _CHAR ) ; } }
36725	@ Override public int read ( ) throws IOException { synchronized ( lock ) { checkNotClosed ( ) ; int ch = readChar ( ) ; if ( lastWasCR && ch == _CHAR ) { ch = readChar ( ) ; } lastWasCR = _BOOL ; return ch ; } }
36761	private void startExpandingAnimation ( ) { if ( ! isWindowFocused ) return ; if ( mExpandingController == _NULL ) { initExpandingAnimationController ( ) ; } if ( mExpandingController . isRunning ( ) || mExpandingController . isStarted ( ) ) { mExpandingController . end ( ) ; mExpandingController . cancel ( ) ; } mExpandingController . start ( ) ; }
36774	protected void adjustVisibility ( Rectangle nloc ) { if ( component == _NULL ) { return ; } if ( SwingUtilities . isEventDispatchThread ( ) ) { component . scrollRectToVisible ( nloc ) ; } else { SwingUtilities . invokeLater ( new SafeScroller ( nloc ) ) ; } }
36818	public int hashCode ( ) { if ( myhash == - _NUM ) { if ( timestamp == _NULL ) { myhash = signerCertPath . hashCode ( ) ; } else { myhash = signerCertPath . hashCode ( ) + timestamp . hashCode ( ) ; } } return myhash ; }
36832	private String checkForTopLevelRealm ( String realm ) { if ( StringUtils . isBlank ( realm ) ) { return _NULL ; } if ( realm . equalsIgnoreCase ( TOP_LEVEL_REALM ) ) { return FORWARD_SLASH ; } else { return realm ; } }
36948	public void init ( ) throws ServletException { super . init ( ) ; try { String def = PROVIDER_DEFAULT . toString ( ) ; String provider = getInitParameter ( PARAM_PROVIDER , def ) ; this . factory = IdentityServicesFactory . getInstance ( provider ) ; } catch ( Exception e ) { throw new ServletException ( e ) ; } }
37048	@ Override public Writer append ( char c ) throws IOException { try { beforeWrite ( _NUM ) ; out . append ( c ) ; afterWrite ( _NUM ) ; } catch ( IOException e ) { handleIOException ( e ) ; } return this ; }
37091	static SkipResult skipUntil ( StringReader input , int c , char target ) throws IOException { while ( c != - _NUM && c != target ) { c = input . read ( ) ; } if ( c == - _NUM ) { return SkipResult . EOF ; } else { return SkipResult . FOUND ; } }
37092	public void forceTermination ( ) { final Phaser root = this . root ; long s ; while ( ( s = root . state ) >= _NUM ) { if ( UNSAFE . compareAndSwapLong ( root , stateOffset , s , s | TERMINATION_BIT ) ) { releaseWaiters ( _NUM ) ; releaseWaiters ( _NUM ) ; return ; } } }
37137	public static void deregisterConnectionHandler ( ConnectionHandler < ? > handler ) { synchronized ( directoryServer . connectionHandlers ) { directoryServer . connectionHandlers . remove ( handler ) ; ConnectionHandlerMonitor monitor = handler . getConnectionHandlerMonitor ( ) ; if ( monitor != _NULL ) { deregisterMonitorProvider ( monitor ) ; monitor . finalizeMonitorProvider ( ) ; handler . setConnectionHandlerMonitor ( _NULL ) ; } } }
37184	private void prepareDirectory ( String path ) { File dir = new File ( path ) ; if ( ! dir . exists ( ) ) { if ( ! dir . mkdirs ( ) ) { Log . e ( TAG , _CHAR ERROR : Creation of directory _CHAR + path + _CHAR failed , check does Android Manifest have permission to write to external storage . '' ) ; } } else { Log . i ( TAG , _CHAR Created directory _CHAR + path ) ; } }
37286	private void closeConnectionPool ( ) { final GenericObjectPool < ? > oldpool = connectionPool ; connectionPool = _NULL ; try { if ( oldpool != _NULL ) { oldpool . close ( ) ; } } catch ( final Exception e ) { } }
37330	public boolean delete ( final String alias ) { try { this . keyStore . deleteEntry ( alias ) ; this . dirty . set ( _BOOL ) ; return _BOOL ; } catch ( final KeyStoreException ex ) { KeyStoreHandler . LOGGER . debug ( _CHAR Entry _CHAR not deleted . '' , alias , ex ) ; return _BOOL ; } }
37374	@ Override public String toString ( ) { String s = _NULL ; try { JSONObject jo = toJSONObject ( ) ; s = ( jo == _NULL ) ? super . toString ( ) : jo . toString ( _NUM ) ; } catch ( JSONException joe ) { PolicyConstants . DEBUG . error ( _CHAR Entitlement . toString ( ) _CHAR , joe ) ; } return s ; }
37402	public static @ Nonnull EnvActionImpl forRun ( @ Nonnull Run < ? , ? > run ) throws IOException { synchronized ( run ) { EnvActionImpl action = run . getAction ( EnvActionImpl . class ) ; if ( action == _NULL ) { action = new EnvActionImpl ( ) ; run . addAction ( action ) ; run . save ( ) ; } return action ; } }
37405	private void startSpanTag ( String style ) throws IOException { boolean callIndent = _BOOL ; if ( inFontTag ( ) ) { endSpanTag ( ) ; callIndent = _BOOL ; } writeStartTag ( _CHAR < span style =\ _CHAR _CHAR + style + _CHAR \ _CHAR > _CHAR ) ; if ( callIndent ) { indent ( ) ; } }
37477	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
37508	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { if ( select ) { target . moveCaretPosition ( _NUM ) ; } else { target . setCaretPosition ( _NUM ) ; } } }
37612	private void clear ( ) { valid = _BOOL ; if ( ( listenerObjects == _NULL ) || listenerObjects . isEmpty ( ) ) { deregisterListener ( ) ; } ssm = _NULL ; if ( SMSEntry . cacheSMSEntries ) { orgConfigs . clear ( ) ; globalConfigs . clear ( ) ; } }
37680	public Object command ( ActionRequest request ) throws ResourceException { ODatabaseDocumentTx db = getConnection ( ) ; try { return commands . query ( request . getResourcePath ( ) , request , db ) ; } finally { if ( db != _NULL ) { db . close ( ) ; } } }
37734	boolean containKey ( String handler ) { if ( ( handler == _NULL ) || ( handler . length ( ) == _NUM ) ) { return _BOOL ; } if ( relayStateMap . containsKey ( handler ) ) { return _BOOL ; } else { return _BOOL ; } }
37809	public static int filterExitCode ( final int exitCode ) { if ( exitCode < _NUM ) { return _NUM ; } else if ( exitCode > _NUM ) { return _NUM ; } else { return exitCode ; } }
37825	protected boolean checkWritable ( ) throws NamingException { if ( isWritable ( ) ) { return _BOOL ; } else { if ( exceptionOnFailedWrite ) { throw new javax . naming . OperationNotSupportedException ( sm . getString ( _CHAR namingContext . readOnly _CHAR ) ) ; } } return _BOOL ; }
37890	public synchronized void stop ( ) { stopPointAdder = _BOOL ; while ( ! pointAdderStopped ) { try { t . interrupt ( ) ; Thread . sleep ( _NUM ) ; } catch ( Throwable t ) { } } }
37949	void queueIsEmpty ( ) { for ( Node p = head ; p != _NULL ; p = p . next ) { Itr it = p . get ( ) ; if ( it != _NULL ) { p . clear ( ) ; it . shutdown ( ) ; } } head = _NULL ; itrs = _NULL ; }
37963	private void updateValuesFromBundle ( Bundle savedInstanceState ) { if ( savedInstanceState != _NULL ) { if ( savedInstanceState . keySet ( ) . contains ( ADDRESS_REQUESTED_KEY ) ) { addressRequested = savedInstanceState . getBoolean ( ADDRESS_REQUESTED_KEY ) ; } if ( savedInstanceState . keySet ( ) . contains ( LOCATION_ADDRESS_KEY ) ) { addressOutput = savedInstanceState . getString ( LOCATION_ADDRESS_KEY ) ; displayAddressOutput ( ) ; } } }
37985	public static void handleThrowable ( Throwable t ) { if ( t instanceof ThreadDeath ) { throw ( ThreadDeath ) t ; } if ( t instanceof StackOverflowError ) { return ; } if ( t instanceof VirtualMachineError ) { throw ( VirtualMachineError ) t ; } }
38119	private XMPNode find ( List list , String expr ) { if ( list != _NULL ) { for ( Iterator it = list . iterator ( ) ; it . hasNext ( ) ; ) { XMPNode child = ( XMPNode ) it . next ( ) ; if ( child . getName ( ) . equals ( expr ) ) { return child ; } } } return _NULL ; }
38132	public void doSetInput ( boolean force ) { IEditorInput input = getEditorInput ( ) ; try { if ( doOpenBuffer ( input , force ) ) { super . doSetInput ( input ) ; } } catch ( Exception e ) { JavaDecompilerPlugin . logError ( e , _CHAR _CHAR ) ; } }
38210	public Object clone ( ) { ExtendedPKIXBuilderParameters params = _NULL ; try { params = new ExtendedPKIXBuilderParameters ( getTrustAnchors ( ) , getTargetConstraints ( ) ) ; } catch ( Exception e ) { throw new RuntimeException ( e . getMessage ( ) ) ; } params . setParams ( this ) ; return params ; }
38271	private boolean isDescendant ( ObjectClass ocParent , ObjectClass oChild ) { Set < ObjectClass > superiors = oChild . getSuperiorClasses ( ) ; if ( superiors != _NULL ) { for ( ObjectClass o : superiors ) { if ( ocParent == o || isDescendant ( ocParent , o ) ) { return _BOOL ; } } } return _BOOL ; }
38296	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; if ( getParent ( ) != _NULL ) { sb . append ( getParent ( ) . toString ( ) ) ; sb . append ( _CHAR . _CHAR ) ; } sb . append ( _CHAR StandardContext [ _CHAR ) ; sb . append ( getName ( ) ) ; sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
38340	public String decode ( String pString ) throws DecoderException { if ( pString == _NULL ) { return _NULL ; } try { return decodeText ( pString ) ; } catch ( UnsupportedEncodingException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
38469	@ Override public void flush ( ) throws IOException { if ( debug > _NUM ) { System . out . println ( _CHAR flush ( ) @ CompressionResponseStream _CHAR ) ; } if ( closed ) { throw new IOException ( _CHAR Can not flush a closed output stream _CHAR ) ; } if ( gzipstream != _NULL ) { gzipstream . flush ( ) ; } }
38487	private static int typeMapping ( int smsType ) { switch ( smsType ) { case ServiceListener . ADDED : return ConfigurationActionEvent . ADDED ; case ServiceListener . REMOVED : return ConfigurationActionEvent . DELETED ; case ServiceListener . MODIFIED : return ConfigurationActionEvent . MODIFIED ; } return smsType ; }
38503	public void addBitmapToCache ( String data , BitmapDrawable value ) { if ( data == _NULL || value == _NULL ) { return ; } if ( mMemoryCache != _NULL ) { if ( RecyclingBitmapDrawable . class . isInstance ( value ) ) { ( ( RecyclingBitmapDrawable ) value ) . setIsCached ( _BOOL ) ; } mMemoryCache . put ( data , value ) ; } }
38534	public boolean typeExists ( String type ) { if ( ! types . containsKey ( type ) ) { try { loadClass ( type ) ; } catch ( ClassNotFoundException | NoClassDefFoundError e ) { return _BOOL ; } } return _BOOL ; }
38541	public void removeNotify ( ) { synchronized ( getTreeLock ( ) ) { TextComponentPeer peer = ( TextComponentPeer ) this . peer ; if ( peer != _NULL ) { text = peer . getText ( ) ; selectionStart = peer . getSelectionStart ( ) ; selectionEnd = peer . getSelectionEnd ( ) ; } super . removeNotify ( ) ; } }
38595	public StringBuilder encodeBody ( StringBuilder retval ) { if ( callId == _NULL ) return retval ; else { retval . append ( callId ) ; if ( ! parameters . isEmpty ( ) ) { retval . append ( SEMICOLON ) ; parameters . encode ( retval ) ; } return retval ; } }
38871	public static void handleThrowable ( Throwable t ) { if ( t instanceof ThreadDeath ) { throw ( ThreadDeath ) t ; } if ( t instanceof StackOverflowError ) { return ; } if ( t instanceof VirtualMachineError ) { throw ( VirtualMachineError ) t ; } }
38910	boolean compareMethods ( Method a , Method b ) { if ( ( a == _NULL ) != ( b == _NULL ) ) { return _BOOL ; } if ( a != _NULL && b != _NULL ) { if ( ! a . equals ( b ) ) { return _BOOL ; } } return _BOOL ; }
38981	public void animateVisibility ( boolean visible ) { if ( mVisible != visible ) { mVisible = visible ; if ( mAlphaAnimator != _NULL ) { mAlphaAnimator . cancel ( ) ; } mAlphaAnimator = ObjectAnimator . ofFloat ( this , _CHAR alpha _CHAR , visible ? _NUM : _NUM ) ; mAlphaAnimator . setDuration ( visible ? _NUM : _NUM ) ; mAlphaAnimator . start ( ) ; } }
39012	private void fillReservoir ( int min ) { if ( pos >= reservoir . length - min ) { try { IoUtils . readFully ( stream , reservoir , _NUM , reservoir . length ) ; } catch ( IOException e ) { throw new RuntimeException ( _CHAR failed to fill reservoir _CHAR , e ) ; } pos = _NUM ; } }
39192	public Object clone ( ) { try { ArrayList < ? > v = ( ArrayList < ? > ) super . clone ( ) ; v . elementData = Arrays . copyOf ( elementData , size ) ; v . modCount = _NUM ; return v ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
39287	protected static EventListener removeInternal ( EventListener l , EventListener oldl ) { if ( l == oldl || l == _NULL ) { return _NULL ; } else if ( l instanceof AWTEventMulticaster ) { return ( ( AWTEventMulticaster ) l ) . remove ( oldl ) ; } else { return l ; } }
39470	public int readInt ( ) { if ( remaining ( ) < _NUM ) { throw new IndexOutOfBoundsException ( ) ; } int v = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) { v <<= _NUM ; v |= sequence . byteAt ( pos ++ ) & _NUM ; } return v ; }
39522	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { try { s . defaultReadObject ( ) ; this . queue = new Object [ q . size ( ) ] ; comparator = q . comparator ( ) ; addAll ( q ) ; } finally { q = _NULL ; } }
39536	public void uninstallUI ( JComponent c ) { uninstallListeners ( ) ; uninstallDefaults ( ) ; uninstallKeyboardActions ( ) ; cellWidth = cellHeight =- _NUM ; cellHeights = _NULL ; listWidth = listHeight =- _NUM ; list . remove ( rendererPane ) ; rendererPane = _NULL ; list = _NULL ; }
39538	public BandWidth createBandwidth ( String modifier , int value ) { BandwidthField bandWidthImpl = new BandwidthField ( ) ; try { bandWidthImpl . setType ( modifier ) ; bandWidthImpl . setValue ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; } return bandWidthImpl ; }
39912	@ Override public synchronized void clear ( ) { File [ ] files = mRootDirectory . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { file . delete ( ) ; } } mEntries . clear ( ) ; mTotalSize = _NUM ; VolleyLog . d ( _CHAR Cache cleared . '' ) ; }
39947	public void deleteEntities ( String name , String protocol , String realm ) throws AMConsoleException { if ( protocol . equals ( IDFF ) ) { deleteIDFFEntity ( name , realm ) ; } else if ( protocol . equals ( WSFED ) ) { deleteWSFedEntity ( name , realm ) ; } else { deleteSAMLv2Entity ( name , realm ) ; } }
39961	public String encode ( String pString ) throws EncoderException { if ( pString == _NULL ) { return _NULL ; } try { return encode ( pString , getDefaultCharset ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
39995	public String toString ( ) { switch ( mod_op ) { case DirContext . ADD_ATTRIBUTE : return ( _CHAR Add attribute : _CHAR + attr . toString ( ) ) ; case DirContext . REPLACE_ATTRIBUTE : return ( _CHAR Replace attribute : _CHAR + attr . toString ( ) ) ; case DirContext . REMOVE_ATTRIBUTE : return ( _CHAR Remove attribute : _CHAR + attr . toString ( ) ) ; } return _CHAR _CHAR ; }
40117	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR SecurityRoleRef [ _CHAR ) ; sb . append ( _CHAR name = _CHAR ) ; sb . append ( name ) ; if ( link != _NULL ) { sb . append ( _CHAR , link = _CHAR ) ; sb . append ( link ) ; } sb . append ( _CHAR ] _CHAR ) ; return ( sb . toString ( ) ) ; }
40150	@ TargetApi ( _NUM ) public static boolean hasTranslucentNavigation ( @ Nullable final Activity activity ) { if ( _NULL == activity ) { return _BOOL ; } if ( Build . VERSION . SDK_INT >= _NUM ) { return ( ( activity . getWindow ( ) . getAttributes ( ) . flags & LayoutParams . FLAG_TRANSLUCENT_NAVIGATION ) == LayoutParams . FLAG_TRANSLUCENT_NAVIGATION ) ; } else { return _BOOL ; } }
40253	public void cleanDeletedOrgCache ( String orgDN ) { String tdn = orgDN ; while ( ! tdn . equalsIgnoreCase ( rootSuffix ) ) { if ( deletedOrg . containsKey ( tdn ) ) { synchronized ( deletedOrg ) { deletedOrg . remove ( tdn ) ; } } tdn = DN . valueOf ( tdn ) . parent ( ) . toString ( ) . toLowerCase ( ) ; } }
40267	public void insert ( String str , int pos ) { Document doc = getDocument ( ) ; if ( doc != _NULL ) { try { doc . insertString ( pos , str , _NULL ) ; } catch ( BadLocationException e ) { throw new IllegalArgumentException ( e . getMessage ( ) ) ; } } }
40329	private int nextInt ( StringTokenizer tok , String errorMsg ) throws SAXException { if ( ! tok . hasMoreTokens ( ) ) { throw new SAXException ( errorMsg ) ; } try { return Integer . parseInt ( tok . nextToken ( ) ) ; } catch ( NumberFormatException nfe ) { throw new SAXException ( errorMsg ) ; } }
40463	public void decrement ( ) { int counterVal = counter . decrementAndGet ( ) ; if ( counterVal == _NUM ) { if ( _NULL != resourceCallback ) { resourceCallback . onTransitionToIdle ( ) ; } } if ( counterVal < _NUM ) { throw new IllegalArgumentException ( _CHAR Counter has been corrupted ! _CHAR ) ; } }
40675	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
40685	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; try { msgFactory = MessageFactory . newInstance ( ) ; } catch ( SOAPException ex ) { FSUtils . debug . error ( _CHAR FSSSOAndFedService . init : create message factory failed . '' , ex ) ; throw new ServletException ( ex . getMessage ( ) ) ; } metaManager = FSUtils . getIDFFMetaManager ( ) ; }
40687	public void generateImportSteps ( ) throws EntitlementException { indexingApplicationsExisting ( ) ; indexingApplicationsReadFromFile ( ) ; indexingResourceTypesReadFromFile ( ) ; indexingResourceTypesExisting ( ) ; assignApplicationTypeToApplication ( ) ; generateResourceTypeImportSteps ( ) ; resolveResourceTypeDependencies ( ) ; generatePrivilegeImportSteps ( ) ; generateApplicationImportSteps ( ) ; }
40772	private void checkIsCorrectClass ( ) { if ( checkIsSubClass ( ACT_NAME ) ) { type = ElementType . ACTTIVITY ; } else if ( checkIsSubClass ( FRAG_NAME ) || checkIsSubClass ( V4_FRAG_NAME ) ) { type = ElementType . FRAGMENT ; } else { throw new IllegalArgumentException ( String . format ( _CHAR class % s must be extends from % s or % s or % s _CHAR , element . getQualifiedName ( ) , ACT_NAME , FRAG_NAME , V4_FRAG_NAME ) ) ; } }
40774	public static void processRESTNotification ( String message ) throws PolicyEvaluationException { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ResultsCacheUtil . processRESTNotification ( ) : _CHAR + _CHAR recieved notification = _CHAR + message ) ; } if ( message != _NULL ) { ResourceResultCache . processRESTPolicyNotification ( message ) ; } else { debug . error ( _CHAR ResultsCacheUtil . processRESTNotification ( ) : _CHAR + _CHAR notification message is _NULL _CHAR ) ; } }
40776	public static void close ( Closeable closeable ) { if ( closeable == _NULL ) { return ; } try { closeable . close ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e . getMessage ( ) , e ) ; } }
40792	protected void processEvent ( AWTEvent e ) { if ( e instanceof ItemEvent ) { processItemEvent ( ( ItemEvent ) e ) ; return ; } else if ( e instanceof ActionEvent ) { processActionEvent ( ( ActionEvent ) e ) ; return ; } super . processEvent ( e ) ; }
40868	private void findSeparator ( ) { pos = MultipartStream . this . findSeparator ( ) ; if ( pos == - _NUM ) { if ( tail - head > keepRegion ) { pad = keepRegion ; } else { pad = tail - head ; } } }
40875	public int toInt ( ) { if ( length < _NUM ) { throw new IndexOutOfBoundsException ( ) ; } int v = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) { v <<= _NUM ; v |= buffer [ offset + i ] & _NUM ; } return v ; }
40967	protected UndoableEdit editToBeRedone ( ) { int count = edits . size ( ) ; int i = indexOfNextAdd ; while ( i < count ) { UndoableEdit edit = edits . elementAt ( i ++ ) ; if ( edit . isSignificant ( ) ) { return edit ; } } return _NULL ; }
41020	public static ImageTypeSpecifier createFromBufferedImageType ( int bufferedImageType ) { if ( bufferedImageType >= BufferedImage . TYPE_INT_RGB && bufferedImageType <= BufferedImage . TYPE_BYTE_INDEXED ) { return getSpecifier ( bufferedImageType ) ; } else if ( bufferedImageType == BufferedImage . TYPE_CUSTOM ) { throw new IllegalArgumentException ( _CHAR Can not create from TYPE_CUSTOM ! _CHAR ) ; } else { throw new IllegalArgumentException ( _CHAR Invalid BufferedImage type ! _CHAR ) ; } }
41034	public ByteArrayBuilder appendString ( String s ) { try { if ( s != _NULL && s . length ( ) > _NUM ) { appendByteArray ( s . getBytes ( _CHAR UTF - _NUM _CHAR ) ) ; } return appendZeroSeparator ( ) ; } catch ( UnsupportedEncodingException e ) { throw new RuntimeException ( _CHAR Should never happen _CHAR , e ) ; } }
41045	public String decode ( String value ) throws DecoderException { if ( value == _NULL ) { return _NULL ; } try { return decodeText ( value ) ; } catch ( UnsupportedEncodingException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
41139	@ Override public void deallocate ( Servlet servlet ) throws ServletException { if ( ! singleThreadModel ) { countAllocated . decrementAndGet ( ) ; return ; } synchronized ( instancePool ) { countAllocated . decrementAndGet ( ) ; instancePool . push ( servlet ) ; instancePool . notify ( ) ; } }
41158	public void resetBuffer ( boolean resetWriterStreamFlags ) { if ( isCommitted ( ) ) { throw new IllegalStateException ( sm . getString ( _CHAR coyoteResponse . resetBuffer . ise _CHAR ) ) ; } outputBuffer . reset ( resetWriterStreamFlags ) ; if ( resetWriterStreamFlags ) { usingOutputStream = _BOOL ; usingWriter = _BOOL ; isCharacterEncodingSet = _BOOL ; } }
41328	public long toLong ( ) { if ( length < _NUM ) { throw new IndexOutOfBoundsException ( ) ; } long v = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) { v <<= _NUM ; v |= buffer [ offset + i ] & _NUM ; } return v ; }
41371	private void playBlastSeq ( ) { if ( frameControl % _NUM == _NUM ) { spriteFrame . setImage ( playerStates . get ( ( frameControl / _NUM ) + _NUM ) ) ; if ( frameControl == _NUM ) { dispose ( ) ; isReadyForRemoval = _BOOL ; return ; } } frameControl ++ ; }
41393	@ Override public void run ( ) { try { Connection con = get ( ) ; con . close ( ) ; } catch ( ExecutionException ex ) { } catch ( Exception x ) { ConnectionPool . log . error ( _CHAR Unable to cancel ConnectionFuture . '' , x ) ; } }
41460	public final void entityReference ( String name ) throws org . xml . sax . SAXException { try { final java . io . Writer writer = m_writer ; writer . write ( _CHAR ) ; writer . write ( name ) ; writer . write ( _CHAR ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
41499	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
41510	public static boolean isRealmEnabled ( ) { if ( ! initialized ) { try { initialize ( ( SSOToken ) AccessController . doPrivileged ( AdminTokenAction . getInstance ( ) ) ) ; } catch ( Exception ssme ) { debug . error ( _CHAR ServiceManager : : isRealmEnabled unable to _CHAR + _CHAR initialize _CHAR , ssme ) ; } } return ( realmCache ) ; }
41641	protected Integer parseNumber ( String number , Integer emptyValue , Integer invalidValue ) { if ( StringUtils . isEmpty ( number ) ) { return emptyValue ; } try { return Integer . parseInt ( number ) ; } catch ( NumberFormatException e ) { return invalidValue ; } }
41680	public void delete ( AbstractTag mp3tag ) throws FileNotFoundException , IOException { RandomAccessFile raf = new RandomAccessFile ( this . file , _CHAR rw _CHAR ) ; mp3tag . delete ( raf ) ; raf . close ( ) ; if ( mp3tag instanceof ID3v1Tag ) { id3v1tag = _NULL ; } if ( mp3tag instanceof AbstractID3v2Tag ) { id3v2tag = _NULL ; } }
41772	@ Override protected void doDelete ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { if ( readOnly ) { resp . sendError ( WebdavStatus . SC_FORBIDDEN ) ; return ; } if ( isLocked ( req ) ) { resp . sendError ( WebdavStatus . SC_LOCKED ) ; return ; } deleteResource ( req , resp ) ; }
41907	void push ( int from ) { int len = sortedArray . length ; -- len ; if ( len == _NUM ) { return ; } while ( from < len ) { sortedArray [ len ] = sortedArray [ len - _NUM ] ; -- len ; } }
41911	public DTMAxisIterator cloneIterator ( ) { _isRestartable = _BOOL ; try { final AncestorIterator clone = ( AncestorIterator ) super . clone ( ) ; clone . _startNode = _startNode ; return clone ; } catch ( CloneNotSupportedException e ) { throw new DTMException ( XMLMessages . createXMLMessage ( XMLErrorResources . ER_ITERATOR_CLONE_NOT_SUPPORTED , _NULL ) ) ; } }
42029	protected static String removeQuotes ( String quotedString , boolean quotesRequired ) { if ( quotedString . length ( ) > _NUM && quotedString . charAt ( _NUM ) != _CHAR_CHAR && ! quotesRequired ) { return quotedString ; } else if ( quotedString . length ( ) > _NUM ) { return quotedString . substring ( _NUM , quotedString . length ( ) - _NUM ) ; } else { return _CHAR _CHAR ; } }
42137	public String paramString ( ) { String typeStr ; switch ( id ) { case INVOCATION_DEFAULT : typeStr = _CHAR INVOCATION_DEFAULT _CHAR ; break ; default : typeStr = _CHAR unknown type _CHAR ; } return typeStr + _CHAR , runnable = _CHAR + runnable + _CHAR , notifier = _CHAR + notifier + _CHAR , catchExceptions = _CHAR + catchExceptions + _CHAR , when = _CHAR + when ; }
42151	boolean isFinished ( ) { if ( lastValid > pos ) { return _BOOL ; } if ( lastActiveFilter >= _NUM ) { return activeFilters [ lastActiveFilter ] . isFinished ( ) ; } else { return _BOOL ; } }
42164	private void beforeKey ( ) throws JSONException { Scope context = peek ( ) ; if ( context == Scope . NONEMPTY_OBJECT ) { out . append ( _CHAR ) ; } else if ( context != Scope . EMPTY_OBJECT ) { throw new JSONException ( _CHAR Nesting problem _CHAR ) ; } newline ( ) ; replaceTop ( Scope . DANGLING_KEY ) ; }
42408	@ Override public synchronized void close ( ) throws SecurityException { super . close ( ) ; if ( sock != _NULL ) { try { sock . close ( ) ; } catch ( IOException ix ) { } } sock = _NULL ; }
42428	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . getCamera ( ) . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
42443	@ Override public void close ( ) throws SQLException { if ( ! isClosedInternal ( ) ) { try { passivate ( ) ; } finally { setClosedInternal ( _BOOL ) ; pooledConnection . notifyListeners ( ) ; } } }
42455	private Issuer fromSupportedDomainNames ( final String givenDomainName ) throws HeapException { for ( final Issuer definedIssuer : heap . getAll ( Issuer . class ) ) { final List < Pattern > domainNames = definedIssuer . getSupportedDomains ( ) ; for ( final Pattern domainName : domainNames ) { if ( domainName . matcher ( givenDomainName ) . matches ( ) ) { return definedIssuer ; } } } return _NULL ; }
42511	public int countTokens ( ) { int count = _NUM ; int currpos = currentPosition ; while ( currpos < maxPosition ) { currpos = skipDelimiters ( currpos ) ; if ( currpos >= maxPosition ) break ; currpos = scanToken ( currpos ) ; count ++ ; } return count ; }
42563	private void checkIsCorrectClass ( ) { if ( checkIsSubClass ( ACT_NAME ) ) { type = ElementType . ACTTIVITY ; } else if ( checkIsSubClass ( FRAG_NAME ) || checkIsSubClass ( V4_FRAG_NAME ) ) { type = ElementType . FRAGMENT ; } else { throw new IllegalArgumentException ( String . format ( _CHAR class % s must be extends from % s or % s or % s _CHAR , element . getQualifiedName ( ) , ACT_NAME , FRAG_NAME , V4_FRAG_NAME ) ) ; } }
42598	public void stopProfiling ( ) { stopProfiling = _BOOL ; try { if ( captureThread != _NULL ) { captureThread . join ( ) ; } } catch ( Exception e ) { logger . traceException ( e ) ; } }
42770	public String paramString ( ) { String typeStr ; switch ( id ) { case TEXT_VALUE_CHANGED : typeStr = _CHAR TEXT_VALUE_CHANGED _CHAR ; break ; default : typeStr = _CHAR unknown type _CHAR ; } return typeStr ; }
42836	private void waitUntilReadable ( ) throws IOException { readTimeout . enter ( ) ; try { while ( readBuffer . size ( ) == _NUM && ! finished && ! closed && errorCode == _NULL ) { waitForIo ( ) ; } } finally { readTimeout . exitAndThrowIfTimedOut ( ) ; } }
42851	public boolean isWindows ( ) { if ( isLocal ( ) ) { return OperatingSystem . isWindows ( ) ; } SearchResultEntry sr = getSystemInformationMonitor ( ) ; if ( sr == _NULL ) { return _BOOL ; } String os = firstValueAsString ( sr , _CHAR operatingSystem _CHAR ) ; return os != _NULL && OperatingSystem . WINDOWS . equals ( OperatingSystem . forName ( os ) ) ; }
43007	public void start_scope ( LogfileScope p_logfile_scope , boolean p_boolean_value ) { start_scope ( p_logfile_scope ) ; int int_value ; if ( p_boolean_value ) { int_value = _NUM ; } else { int_value = _NUM ; } add_int ( int_value ) ; }
43017	protected PublicKey engineGeneratePublic ( KeySpec keySpec ) throws InvalidKeySpecException { if ( keySpec != _NULL ) { if ( keySpec instanceof DSAPublicKeySpec ) { return new DSAPublicKeyImpl ( ( DSAPublicKeySpec ) keySpec ) ; } if ( keySpec instanceof X509EncodedKeySpec ) { return new DSAPublicKeyImpl ( ( X509EncodedKeySpec ) keySpec ) ; } } throw new InvalidKeySpecException ( _CHAR _CHAR is neither DSAPublicKeySpec nor X509EncodedKeySpec _CHAR ) ; }
43024	public String decode ( String pString ) throws DecoderException { if ( pString == _NULL ) { return _NULL ; } try { return decode ( pString , getDefaultCharset ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new DecoderException ( e . getMessage ( ) ) ; } }
43060	@ Override public void destroy ( ) { String onStr = _CHAR JMImplementation : type = MBeanServerDelegate _CHAR ; ObjectName objectName ; try { objectName = new ObjectName ( onStr ) ; mBeanServer . removeNotificationListener ( objectName , this , _NULL , _NULL ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
43127	public Object clone ( ) { UserSelfCheckCondition theClone = _NULL ; try { theClone = ( UserSelfCheckCondition ) super . clone ( ) ; theClone . properties = Collections . unmodifiableMap ( com . sun . identity . sm . SMSUtils . copyAttributes ( properties ) ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } return theClone ; }
43286	public boolean start_write ( File p_file ) { try { file_writer = new FileWriter ( p_file ) ; } catch ( IOException e ) { System . out . println ( _CHAR unable to create logfile _CHAR ) ; return _BOOL ; } write_enabled = _BOOL ; return _BOOL ; }
43322	public static void deleteContents ( File dir ) throws IOException { File [ ] files = dir . listFiles ( ) ; if ( files != _NULL ) { for ( File file : files ) { if ( file . isDirectory ( ) ) { deleteContents ( file ) ; } file . delete ( ) ; } } }
43421	protected void modifyFlags ( ) { String str = getIdentifier ( ) ; if ( ID3v24Frames . getInstanceOf ( ) . isDiscardIfFileAltered ( str ) ) { writeFlags |= ( byte ) MASK_FILE_ALTER_PRESERVATION ; writeFlags & = ( byte ) ~ MASK_TAG_ALTER_PRESERVATION ; } else { writeFlags & = ( byte ) ~ MASK_FILE_ALTER_PRESERVATION ; writeFlags & = ( byte ) ~ MASK_TAG_ALTER_PRESERVATION ; } }
43465	protected void threadStop ( ) { if ( thread == _NULL ) return ; threadDone = _BOOL ; thread . interrupt ( ) ; try { thread . join ( ) ; } catch ( InterruptedException e ) { } thread = _NULL ; }
43783	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case MENU_SETTINGS_ID : startActivity ( new Intent ( this , ActivitySettings . class ) ) ; return _BOOL ; case MENU_ABOUT_ID : showAbout ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
43799	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
43927	public Object clone ( ) { try { IdentityHashMap < ? , ? > m = ( IdentityHashMap < ? , ? > ) super . clone ( ) ; m . entrySet = _NULL ; m . table = table . clone ( ) ; return m ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
44000	public int indexOf ( PdfObject o ) { if ( o == _NULL ) return list . indexOf ( _NULL ) ; int index = _NUM ; for ( PdfObject pdfObject : this ) { if ( PdfObject . equalContent ( o , pdfObject ) ) { return index ; } index ++ ; } return - _NUM ; }
44132	private Locale createLocale ( String language , String country ) { Locale locale ; if ( country != _NULL ) { locale = new Locale ( language , country ) ; } else { DEBUG . message ( _CHAR country not set . Only using localeLanguage _CHAR ) ; locale = new Locale ( language ) ; } return locale ; }
44239	boolean hasAttribute ( final AttributeType attributeType ) { if ( branchDN . rdn ( ) . getAttributeValue ( attributeType ) != _NULL ) { return _BOOL ; } for ( final TemplateLine line : extraLines ) { if ( line . getAttributeType ( ) . equals ( attributeType ) ) { return _BOOL ; } } return _BOOL ; }
44376	public static String encodeBytes ( byte [ ] source ) { String encoded = _NULL ; try { encoded = encodeBytes ( source , _NUM , source . length , NO_OPTIONS ) ; } catch ( java . io . IOException ex ) { assert _BOOL : ex . getMessage ( ) ; } assert encoded != _NULL ; return encoded ; }
44432	private void completeIfNecessary ( final PromiseImpl < QueryResponse , ResourceException > handler ) { if ( pendingResourceCount == _NUM && pendingResult != _NULL && ! resultSent ) { if ( pendingResult == SUCCESS ) { handler . handleResult ( newQueryResponse ( cookie ) ) ; } else { handler . handleException ( pendingResult ) ; } resultSent = _BOOL ; } }
44504	public Object encode ( Object pObject ) throws EncoderException { if ( pObject == _NULL ) { return _NULL ; } else if ( pObject instanceof String ) { return encode ( ( String ) pObject ) ; } else { throw new EncoderException ( _CHAR Objects of type _CHAR + pObject . getClass ( ) . getName ( ) + _CHAR can not be encoded using Q codec _CHAR ) ; } }
44543	public void finish ( ) throws IOException { if ( done ) { return ; } def . finish ( ) ; while ( ! def . finished ( ) ) { int byteCount = def . deflate ( buf ) ; out . write ( buf , _NUM , byteCount ) ; } done = _BOOL ; }
44575	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { if ( ! useOneShotPreviewCallback ) { camera . setPreviewCallback ( _NULL ) ; } camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
44595	public void store ( ) { try { amIdentity . store ( ) ; } catch ( IdRepoException e ) { LOGGER . warn ( _CHAR Exception persisting attribute _CHAR , e ) ; } catch ( SSOException e ) { LOGGER . warn ( _CHAR Exception persisting attribute _CHAR , e ) ; } }
44608	private void initDsTables ( ) { initializeDsTable ( ) ; initializeDsApplIfOpsTable ( ) ; try { ObjectName name = new ObjectName ( _CHAR JMImplementation : type = MBeanServerDelegate _CHAR ) ; this . server . addNotificationListener ( name , this , _NULL , _NULL ) ; } catch ( Exception ex ) { logger . traceException ( ex ) ; } }
44806	public void decrement ( ) { int counterVal = counter . decrementAndGet ( ) ; if ( counterVal == _NUM ) { if ( _NULL != resourceCallback ) { resourceCallback . onTransitionToIdle ( ) ; } } if ( counterVal < _NUM ) { throw new IllegalArgumentException ( _CHAR Counter has been corrupted ! _CHAR ) ; } }
44913	public void select_items ( Set < BrdItem > p_items ) { if ( board_is_read_only ) return ; display_layer_messsage ( ) ; if ( interactive_state instanceof StateMenu ) { set_interactive_state ( StateSelectedItem . get_instance ( p_items , interactive_state , this , actlog ) ) ; } else if ( interactive_state instanceof StateSelectedItem ) { ( ( StateSelectedItem ) interactive_state ) . get_item_list ( ) . addAll ( p_items ) ; repaint ( ) ; } }
45043	public Boolean put ( Object key , Object value ) { try { hash . updateObject ( key , value ) ; notifyObservers ( ) ; return _BOOL ; } catch ( Exception e ) { e . printStackTrace ( ) ; return _BOOL ; } }
45124	public synchronized ContextHolder createCachedContextHolder ( ) { updateCacheSize ( ) ; while ( _BOOL ) { final String key = UUID . randomUUID ( ) . toString ( ) ; if ( ! cache . containsKey ( key ) ) { final ContextHolder holder = new ContextHolder ( key ) ; cache . put ( key , holder ) ; return holder ; } } }
45192	public void close ( ) throws IOException { if ( ! closed ) { try { finish ( ) ; } finally { out . close ( ) ; closed = _BOOL ; } } }
45205	public IdentityServicesImpl newInstance ( ) { if ( providerImpl == _NULL ) { try { providerImpl = ( IdentityServicesImpl ) provider . newInstance ( ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } } return ( providerImpl ) ; }
45259	protected boolean popNamespace ( String prefix ) { try { if ( m_prefixMap . popNamespace ( prefix ) ) { m_saxHandler . endPrefixMapping ( prefix ) ; return _BOOL ; } } catch ( SAXException e ) { } return _BOOL ; }
45276	private void writeObject ( java . io . ObjectOutputStream out ) throws java . io . IOException { if ( sourcePath != _NULL ) { PdfTokenizer tempTokens = tokens ; tokens = _NULL ; out . defaultWriteObject ( ) ; tokens = tempTokens ; } else { out . defaultWriteObject ( ) ; } }
45303	protected void HandelStack ( ) { int StackHandel = StackOpp ( ) ; if ( StackHandel < _NUM ) { if ( StackHandel == _NUM ) PushStack ( ) ; else { StackHandel *=- _NUM ; for ( int i = _NUM ; i < StackHandel ; i ++ ) PopStack ( ) ; } } else EmptyStack ( ) ; }
45352	public void save ( ) throws IOException { try ( final OutputStream os = new BufferedOutputStream ( new FileOutputStream ( this . keyStoreFile ) ) ) { try { this . keyStore . store ( os , this . password ) ; this . dirty . set ( _BOOL ) ; } catch ( final KeyStoreException | NoSuchAlgorithmException | CertificateException ex ) { throw new IllegalStateException ( _CHAR Should not happen . '' , ex ) ; } } }
45371	public static boolean isEqual ( byte [ ] digesta , byte [ ] digestb ) { if ( digesta . length != digestb . length ) { return _BOOL ; } for ( int i = _NUM ; i < digesta . length ; i ++ ) { if ( digesta [ i ] != digestb [ i ] ) { return _BOOL ; } } return _BOOL ; }
45453	public void reset ( ) { super . reset ( ) ; H1 = _NUM ; H2 = _NUM ; H3 = _NUM ; H4 = _NUM ; xOff = _NUM ; for ( int i = _NUM ; i != X . length ; i ++ ) { X [ i ] = _NUM ; } }
45537	public void writeStatement ( Statement oldStm ) { Statement newStm = cloneStatement ( oldStm ) ; if ( oldStm . getTarget ( ) != this && executeStatements ) { try { newStm . execute ( ) ; } catch ( Exception e ) { getExceptionListener ( ) . exceptionThrown ( new Exception ( _CHAR Encoder : discarding statement _CHAR + newStm , e ) ) ; } } }
45552	public Version createVersion ( int value ) { ProtoVersionField protoVersionField = new ProtoVersionField ( ) ; try { protoVersionField . setVersion ( value ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; return _NULL ; } return protoVersionField ; }
45572	private boolean supportedType ( Class < ? > ret ) { for ( int i = _NUM ; i < supportedTypes . length ; i ++ ) { if ( ret == supportedTypes [ i ] ) { return _BOOL ; } } if ( isBeanCompatible ( ret ) ) { return _BOOL ; } return _BOOL ; }
45653	public void logTrace ( String message ) { if ( needsLogging ) { String newMessage = this . enhanceMessage ( message ) ; if ( this . lineCount == _NUM ) { getLogger ( ) . debug ( _CHAR BUILD TIMESTAMP = _CHAR + this . buildTimeStamp ) ; getLogger ( ) . debug ( _CHAR Config Propeties = _CHAR + this . configurationProperties ) ; } countLines ( newMessage ) ; getLogger ( ) . trace ( newMessage ) ; } }
45743	public static void write ( OutputStream out , int c ) { if ( out == _NULL ) { throw new IllegalArgumentException ( _CHAR output stream _NULL . _CHAR ) ; } try { out . write ( c ) ; } catch ( IOException e ) { throw new RuntimeException ( e . getMessage ( ) , e ) ; } }
45758	public boolean hasMoreRequirements ( ) { if ( localFlag ) { return ( acLocal . hasMoreRequirements ( _BOOL ) ) ; } else { if ( ( ! loginStatus . equals ( Status . IN_PROGRESS ) ) || ( ( getCallbacks ( receivedDocument , _BOOL ) ) == _NULL ) ) { return ( _BOOL ) ; } return ( _BOOL ) ; } }
45801	public synchronized boolean addEdit ( UndoableEdit anEdit ) { boolean retVal ; trimEdits ( indexOfNextAdd , edits . size ( ) - _NUM ) ; retVal = super . addEdit ( anEdit ) ; if ( inProgress ) { retVal = _BOOL ; } indexOfNextAdd = edits . size ( ) ; trimForLimit ( ) ; return retVal ; }
45828	public void addDefaultValue ( String value ) throws SMSException , SSOException { Set defaultValues = getDefaultValues ( ) ; if ( defaultValues != Collections . EMPTY_SET ) { defaultValues . add ( value ) ; } else { defaultValues = new HashSet ( ) ; defaultValues . add ( value ) ; } updateDefaultValues ( defaultValues ) ; }
45829	public void logDebug ( String message ) { if ( needsLogging ) { String newMessage = this . enhanceMessage ( message ) ; if ( this . lineCount == _NUM ) { getLogger ( ) . debug ( _CHAR BUILD TIMESTAMP = _CHAR + this . buildTimeStamp ) ; getLogger ( ) . debug ( _CHAR Config Propeties = _CHAR + this . configurationProperties ) ; } countLines ( newMessage ) ; getLogger ( ) . debug ( newMessage ) ; } }
45877	private void calculatePercentComplete ( ) { if ( getTotalRecords ( ) == _NUM ) { percentComplete = _NUM ; } else if ( getRecordsCompleted ( ) == _NUM ) { percentComplete = _NUM ; } else { percentComplete = ( double ) ( ( double ) getRecordsCompleted ( ) / ( double ) getTotalRecords ( ) ) * _NUM ; } }
45902	public void refreshInstance ( String jsonData ) { if ( jsonData == _NULL ) { return ; } mRefreshStartTime = System . currentTimeMillis ( ) ; if ( mLastRefreshData != _NULL ) { mLastRefreshData . isDirty = _BOOL ; } mLastRefreshData = new WXRefreshData ( jsonData , _BOOL ) ; WXSDKManager . getInstance ( ) . refreshInstance ( mInstanceId , mLastRefreshData ) ; }
46009	public static boolean isUserExists ( String userDN ) { try { return userProvider . isUserExists ( userDN ) ; } catch ( DataStoreProviderException dspe ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR IDPPUtils . isUserExists : Userentry is _NULL _CHAR , dspe ) ; } return _BOOL ; } }
46130	private void initConnection ( ) throws CoreTokenException { if ( connection == _NULL || ! factory . isValid ( connection ) ) { try { connection = factory . create ( ) ; query . setConnection ( connection ) ; } catch ( DataLayerException e ) { throw new CoreTokenException ( _CHAR Failed to init connection to data layer _CHAR , e ) ; } } }
46183	protected void startFontTag ( String style ) throws IOException { boolean callIndent = _BOOL ; if ( inFontTag ( ) ) { endFontTag ( ) ; callIndent = _BOOL ; } writeStartTag ( _CHAR < font style =\ _CHAR _CHAR + style + _CHAR \ _CHAR > _CHAR ) ; if ( callIndent ) { indent ( ) ; } }
46244	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { try { s . defaultReadObject ( ) ; this . queue = new Object [ q . size ( ) ] ; comparator = q . comparator ( ) ; addAll ( q ) ; } finally { q = _NULL ; } }
46523	public StringBuilder encodeBody ( StringBuilder retval ) { if ( callId == _NULL ) return retval ; else { retval . append ( callId ) ; if ( ! parameters . isEmpty ( ) ) { retval . append ( SEMICOLON ) ; parameters . encode ( retval ) ; } return retval ; } }
46566	public boolean use ( String name ) { if ( includes != _NULL && includes . contains ( name ) ) { return _BOOL ; } else if ( excludes != _NULL && excludes . contains ( name ) ) { return _BOOL ; } else { return includes != _NULL ? _BOOL : _BOOL ; } }
46578	protected void checkState ( boolean openForWrite ) throws IllegalArgumentException { if ( this . openForWrite != openForWrite ) { cleanup ( ) ; if ( openForWrite ) throw new IllegalArgumentException ( _CHAR Ca n _CHAR_CHAR_CHAR t read message , this factory is writing . '' ) ; } if ( this . closed ) { cleanup ( ) ; throw new IllegalArgumentException ( _CHAR Factory has been closed . '' ) ; } }
46652	public synchronized void stopPreview ( ) { if ( autoFocusManager != _NULL ) { autoFocusManager . stop ( ) ; autoFocusManager = _NULL ; } if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
46797	@ Override public int read ( ) throws IOException { synchronized ( lock ) { if ( isOpen ( ) ) { if ( pos != count ) { return str . charAt ( pos ++ ) ; } return - _NUM ; } throw new IOException ( _CHAR StringReader is closed _CHAR ) ; } }
46822	public LoginConfiguration indexValue ( String indexValue ) { switch ( indexType ) { case COMPOSITE : { httpRequest = new RestAuthHttpRequestWrapper ( httpRequest ) ; ( ( RestAuthHttpRequestWrapper ) httpRequest ) . addParameter ( AuthClientUtils . COMPOSITE_ADVICE , indexValue ) ; } } this . indexValue = indexValue ; return this ; }
46857	protected void paintComponent ( Graphics g ) { if ( ui != _NULL ) { Graphics scratchGraphics = ( g == _NULL ) ? _NULL : g . create ( ) ; try { ui . update ( scratchGraphics , this ) ; } finally { scratchGraphics . dispose ( ) ; } } }
46936	public static void writeByteArrayToFile ( File file , byte [ ] data , boolean append ) throws IOException { OutputStream out = _NULL ; try { out = openOutputStream ( file , append ) ; out . write ( data ) ; out . close ( ) ; } finally { IOUtils . closeQuietly ( out ) ; } }
46956	protected String generateSessionId ( ) { String result = _NULL ; do { if ( result != _NULL ) { duplicates ++ ; } result = sessionIdGenerator . generateSessionId ( ) ; } while ( sessions . containsKey ( result ) ) ; return result ; }
47030	protected void installComponents ( ) { arrowButton = createArrowButton ( ) ; if ( arrowButton != _NULL ) { comboBox . add ( arrowButton ) ; configureArrowButton ( ) ; } if ( comboBox . isEditable ( ) ) { addEditor ( ) ; } comboBox . add ( currentValuePane ) ; }
47249	public void destroy ( ) { synchronized ( SyncOp ) { rtmpSender . destroy ( ) ; videoClient . destroy ( ) ; audioClient . destroy ( ) ; rtmpSender = _NULL ; videoClient = _NULL ; audioClient = _NULL ; LogTools . d ( _CHAR RESClient , destroy ( ) _CHAR ) ; } }
47470	private boolean tokenStartsWithPrefix ( String token , String ... prefixes ) { String [ ] tokenParts = token . split ( _CHAR : _CHAR , _NUM ) ; if ( tokenParts . length == _NUM ) { for ( String prefix : prefixes ) { if ( prefix . equals ( tokenParts [ _NUM ] ) ) { return _BOOL ; } } } return _BOOL ; }
47558	public void pack ( ) { if ( popup != _NULL ) { Dimension pref = getPreferredSize ( ) ; if ( pref == _NULL || pref . width != getWidth ( ) || pref . height != getHeight ( ) ) { showPopup ( ) ; } else { validate ( ) ; } } }
47618	public String encode ( final String pString , final String charset ) throws EncoderException { if ( pString == _NULL ) { return _NULL ; } try { return encodeText ( pString , charset ) ; } catch ( UnsupportedEncodingException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
47710	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
47714	private Future < Job > attemptAdd ( ) { Future < Job > future = Future . future ( ) ; String key = RedisHelper . getKey ( _CHAR job : _CHAR + this . id ) ; if ( this . attempts < this . max_attempts ) { client . hincrby ( key , _CHAR attempts _CHAR , _NUM , _NULL ) ; } else { future . complete ( this ) ; } return future ; }
47732	public ListBuffer < A > append ( final A x ) { x . getClass ( ) ; if ( shared ) { copy ( ) ; } last . head = x ; last . setTail ( new ImmutableList < A > ( _NULL , _NULL ) ) ; last = last . tail ; count ++ ; return this ; }
47826	private void closeConnection ( ) { try { if ( connection != _NULL ) { connection . close ( ) ; connection = _NULL ; } } catch ( Exception e ) { DEBUG . warning ( _CHAR Connection failed to close . '' , e ) ; } }
47871	void queueIsEmpty ( ) { for ( Node p = head ; p != _NULL ; p = p . next ) { Itr it = p . get ( ) ; if ( it != _NULL ) { p . clear ( ) ; it . shutdown ( ) ; } } head = _NULL ; itrs = _NULL ; }
48252	public boolean hasAttribute ( AttributeType attributeType ) { if ( branchDN . rdn ( ) . hasAttributeType ( attributeType ) ) { return _BOOL ; } for ( TemplateLine l : extraLines ) { if ( l . getAttributeType ( ) . equals ( attributeType ) ) { return _BOOL ; } } return _BOOL ; }
48344	protected void Pattern ( ) throws javax . xml . transform . TransformerException { while ( _BOOL ) { LocationPathPattern ( ) ; if ( tokenIs ( _CHAR ) ) { nextToken ( ) ; } else { break ; } } }
48507	protected static EventListener removeInternal ( EventListener l , EventListener oldl ) { if ( l == oldl || l == _NULL ) { return _NULL ; } else if ( l instanceof DnDEventMulticaster ) { return ( ( DnDEventMulticaster ) l ) . remove ( oldl ) ; } else { return l ; } }
48568	public void removeAncestorListener ( AncestorListener listener ) { AncestorNotifier ancestorNotifier = getAncestorNotifier ( ) ; if ( ancestorNotifier == _NULL ) { return ; } ancestorNotifier . removeAncestorListener ( listener ) ; if ( ancestorNotifier . listenerList . getListenerList ( ) . length == _NUM ) { ancestorNotifier . removeAllListeners ( ) ; putClientProperty ( JComponent_ANCESTOR_NOTIFIER , _NULL ) ; } }
48639	public boolean isSubTypeOf ( final AttributeType type ) { AttributeType tmp = this ; do { if ( tmp . matches ( type ) ) { return _BOOL ; } tmp = tmp . getSuperiorType ( ) ; } while ( tmp != _NULL ) ; return _BOOL ; }
48796	private void closeSearch ( ) { try { if ( searchStatus != _NULL ) { searchStatus . cancel ( _BOOL ) ; searchStatus = _NULL ; } } catch ( Exception e ) { DEBUG . warning ( _CHAR Connection failed to close . '' , e ) ; } }
48924	private static UnbindRequestProtocolOp readUnbindRequest ( ASN1Reader reader ) throws LDAPException { try { reader . readNull ( ) ; return new UnbindRequestProtocolOp ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; LocalizableMessage message = ERR_LDAP_UNBIND_DECODE . get ( e ) ; throw new LDAPException ( PROTOCOL_ERROR , message , e ) ; } }
48955	@ Override public void write ( byte [ ] bts ) throws IOException { try { int len = bts != _NULL ? bts . length : _NUM ; beforeWrite ( len ) ; out . write ( bts ) ; afterWrite ( len ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
49000	void add ( CTSOperation operation ) { OperationMonitor rate ; synchronized ( operationRate ) { rate = operationRate . get ( operation ) ; if ( rate == _NULL ) { rate = operationRateFactory . createOperationRate ( ) ; operationRate . put ( operation , rate ) ; } } rate . increment ( ) ; }
49171	public void invokeShutdownPlugins ( LocalizableMessage reason ) { for ( DirectoryServerPlugin p : shutdownPlugins ) { try { p . doShutdown ( reason ) ; } catch ( Exception e ) { logger . traceException ( e ) ; logger . error ( ERR_PLUGIN_SHUTDOWN_PLUGIN_EXCEPTION , p . getPluginEntryDN ( ) , stackTraceToSingleLineString ( e ) ) ; } } }
49254	public void close_output ( ) { if ( file_writer != _NULL ) { try { file_writer . close ( ) ; } catch ( IOException e ) { System . out . println ( _CHAR unable to close logfile _CHAR ) ; } } write_enabled = _BOOL ; }
49327	public Subject removeSubject ( Subject subject ) { Subject s = _NULL ; String subjectName = getSubjectName ( subject ) ; if ( subjectName != _NULL ) { QualifiedSubject qualifiedSubject = ( QualifiedSubject ) users . remove ( subjectName ) ; if ( qualifiedSubject != _NULL ) { s = qualifiedSubject . getSubject ( ) ; } } return s ; }
49362	@ Override public void removeHandshakeCompletedListener ( HandshakeCompletedListener listener ) { if ( listener == _NULL ) { throw new IllegalArgumentException ( _CHAR Provided listener is _NULL _CHAR ) ; } if ( listeners == _NULL ) { throw new IllegalArgumentException ( _CHAR Provided listener is not registered _CHAR ) ; } if ( ! listeners . remove ( listener ) ) { throw new IllegalArgumentException ( _CHAR Provided listener is not registered _CHAR ) ; } }
49576	public void reset ( ) { super . reset ( ) ; H1 = _NUM ; H2 = _NUM ; H3 = _NUM ; H4 = _NUM ; H5 = _NUM ; H6 = _NUM ; H7 = _NUM ; H8 = _NUM ; }
49589	public void decrement ( ) { int counterVal = counter . decrementAndGet ( ) ; if ( counterVal == _NUM ) { if ( _NULL != resourceCallback ) { resourceCallback . onTransitionToIdle ( ) ; } } if ( counterVal < _NUM ) { throw new IllegalArgumentException ( _CHAR Counter has been corrupted ! _CHAR ) ; } }
49648	public static void rebuildSessionFactory ( ) { try { configuration . configure ( ) ; serviceRegistry = new ServiceRegistryBuilder ( ) . applySettings ( configuration . getProperties ( ) ) . buildServiceRegistry ( ) ; sessionFactory = configuration . buildSessionFactory ( serviceRegistry ) ; } catch ( Exception e ) { System . err . println ( _CHAR % % % % Error Creating SessionFactory % % % % _CHAR ) ; e . printStackTrace ( ) ; } }
49657	protected void processTextEvent ( TextEvent e ) { TextListener listener = textListener ; if ( listener != _NULL ) { int id = e . getID ( ) ; switch ( id ) { case TextEvent . TEXT_VALUE_CHANGED : listener . textValueChanged ( e ) ; break ; } } }
49689	public long readLong ( ) { if ( remaining ( ) < _NUM ) { throw new IndexOutOfBoundsException ( ) ; } long v = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) { v <<= _NUM ; v |= sequence . byteAt ( pos ++ ) & _NUM ; } return v ; }
49915	protected boolean userAgentCheck ( String httpUA , String clientUA ) { if ( ( httpUA == _NULL ) || ( clientUA == _NULL ) ) { return _BOOL ; } if ( ( httpUA . equalsIgnoreCase ( clientUA ) ) || ( httpUA . indexOf ( clientUA ) > - _NUM ) ) { return _BOOL ; } else { return _BOOL ; } }
49939	@ Override protected void finalize ( ) { try { if ( mWindow != _NULL ) { mCloseGuard . warnIfOpen ( ) ; close ( ) ; } } finally { super . finalize ( ) ; } }
50191	public void close ( ) { if ( jmxc != _NULL ) { try { jmxc . close ( ) ; } catch ( IOException e ) { logger . error ( _CHAR Error while trying to close jmx connection '' , e ) ; } jmxc = _NULL ; } }
50194	protected PrivateKey engineGeneratePrivate ( KeySpec keySpec ) throws InvalidKeySpecException { if ( keySpec != _NULL ) { if ( keySpec instanceof DSAPrivateKeySpec ) { return new DSAPrivateKeyImpl ( ( DSAPrivateKeySpec ) keySpec ) ; } if ( keySpec instanceof PKCS8EncodedKeySpec ) { return new DSAPrivateKeyImpl ( ( PKCS8EncodedKeySpec ) keySpec ) ; } } throw new InvalidKeySpecException ( _CHAR _CHAR is neither DSAPrivateKeySpec nor PKCS8EncodedKeySpec _CHAR ) ; }
50693	public void loadArgArray ( ) { push ( argumentTypes . length ) ; newArray ( OBJECT_TYPE ) ; for ( int i = _NUM ; i < argumentTypes . length ; i ++ ) { dup ( ) ; push ( i ) ; loadArg ( i ) ; box ( argumentTypes [ i ] ) ; arrayStore ( OBJECT_TYPE ) ; } }
50736	public Object decode ( Object pObject ) throws DecoderException { if ( pObject == _NULL ) { return _NULL ; } else if ( pObject instanceof String ) { return decode ( ( String ) pObject ) ; } else { throw new DecoderException ( _CHAR Objects of type _CHAR + pObject . getClass ( ) . getName ( ) + _CHAR can not be decoded using Q codec _CHAR ) ; } }
50809	public void removeLocalEjb ( String name ) { entries . remove ( name ) ; ContextLocalEjb localEjb = _NULL ; synchronized ( localEjbs ) { localEjb = localEjbs . remove ( name ) ; } if ( localEjb != _NULL ) { support . firePropertyChange ( _CHAR localEjb _CHAR , localEjb , _NULL ) ; localEjb . setNamingResources ( _NULL ) ; } }
50966	private static byte convertV24textEncodingToV23textEncoding ( byte textEncoding ) { if ( textEncoding == TextEncoding . UTF_16BE ) { return TextEncoding . UTF_16 ; } else if ( textEncoding == TextEncoding . UTF_8 ) { return TextEncoding . ISO_8859_1 ; } else { return textEncoding ; } }
51124	private void createLeftOver ( ) { int lineLengthBytes = currentLastBytePos + _NUM ; if ( lineLengthBytes > _NUM ) { leftOver = new byte [ lineLengthBytes ] ; System . arraycopy ( data , _NUM , leftOver , _NUM , lineLengthBytes ) ; } else { leftOver = _NULL ; } currentLastBytePos =- _NUM ; }
51331	private FieldNode findField ( ClassNode cn , String name , String desc ) { if ( cn == _NULL ) { return _NULL ; } for ( FieldNode fn : cn . fields ) { if ( fn . desc . equals ( desc ) && fn . name . equals ( name ) ) { return fn ; } } return _NULL ; }
51352	public static boolean delete ( final File file ) { if ( file . isDirectory ( ) ) { for ( String item : file . list ( ) ) { File subFile = new File ( file . getAbsolutePath ( ) + File . separator + item ) ; if ( ! delete ( subFile ) ) { return _BOOL ; } } } return file . delete ( ) ; }
51369	public void flushBase64 ( ) throws java . io . IOException { if ( position > _NUM ) { if ( encode ) { out . write ( encode3to4 ( b4 , buffer , position , options ) ) ; position = _NUM ; } else { throw new java . io . IOException ( _CHAR base64 . input . not . properly . padded _CHAR ) ; } } }
51378	public boolean shouldYieldConnection ( SQLiteConnection connection , int connectionFlags ) { synchronized ( mLock ) { if ( ! mAcquiredConnections . containsKey ( connection ) ) { throw new IllegalStateException ( _CHAR Can not perform this operation _CHAR + _CHAR because the specified connection was not acquired _CHAR + _CHAR from this pool or has already been released . '' ) ; } if ( ! mIsOpen ) { return _BOOL ; } return isSessionBlockingImportantConnectionWaitersLocked ( connection . isPrimaryConnection ( ) , connectionFlags ) ; } }
51483	public String encode ( final String value , final String charset ) throws EncoderException { if ( value == _NULL ) { return _NULL ; } try { return encodeText ( value , charset ) ; } catch ( UnsupportedEncodingException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
51487	public String resolveFrom ( OAuth2Request request ) { AccessToken accessToken = request . getToken ( AccessToken . class ) ; String realm ; if ( accessToken != _NULL ) { realm = accessToken . getRealm ( ) ; } else { realm = request . getParameter ( RestletRealmRouter . REALM ) ; } return realm ; }
51553	private void removeSubentry ( Entry entry ) { lock . writeLock ( ) . lock ( ) ; try { if ( ! removeSubEntry ( dn2SubEntry , entry ) ) { removeSubEntry ( dn2CollectiveSubEntry , entry ) ; } } finally { lock . writeLock ( ) . unlock ( ) ; } }
51579	public void decrement ( ) { int counterVal = counter . decrementAndGet ( ) ; if ( counterVal == _NUM ) { if ( _NULL != resourceCallback ) { resourceCallback . onTransitionToIdle ( ) ; } } if ( counterVal < _NUM ) { throw new IllegalArgumentException ( _CHAR Counter has been corrupted ! _CHAR ) ; } }
51702	public void removeMessageDestinationRef ( String name ) { entries . remove ( name ) ; MessageDestinationRef mdr = _NULL ; synchronized ( mdrs ) { mdr = mdrs . remove ( name ) ; } if ( mdr != _NULL ) { support . firePropertyChange ( _CHAR messageDestinationRef _CHAR , mdr , _NULL ) ; mdr . setNamingResources ( _NULL ) ; } }
51787	void createOpenDJBackup ( ) throws ConfiguratorException { createBackupDirectories ( ) ; File backupFile = getBackupFileLocation ( ) ; File opendjDirectory = new File ( baseDirectory , OPENDJ_DIR ) ; try { zipUtils . zipDirectory ( opendjDirectory , backupFile ) ; } catch ( IOException e ) { throw new ConfiguratorException ( _CHAR Failed to create OpenDJ backup : _CHAR + e . getMessage ( ) ) ; } }
51843	private NSObject parseDateString ( ) { String numericalString = parseString ( ) ; if ( numericalString . length ( ) > _NUM && numericalString . charAt ( _NUM ) == DATE_DATE_FIELD_DELIMITER ) { try { return new NSDate ( numericalString ) ; } catch ( Exception ex ) { } } return new NSString ( numericalString ) ; }
51915	public void removeEnvironment ( String envName ) { NamingResourcesImpl nresources = ( NamingResourcesImpl ) this . resource ; if ( nresources == _NULL ) { return ; } ContextEnvironment env = nresources . findEnvironment ( envName ) ; if ( env == _NULL ) { throw new IllegalArgumentException ( _CHAR Invalid environment name _CHAR_CHAR_CHAR _CHAR ) ; } nresources . removeEnvironment ( envName ) ; }
52012	private String urlEncode ( String value ) { if ( _NULL == value || value . length ( ) == _NUM ) { return _NULL ; } try { return URLEncoder . encode ( value , _CHAR UTF - _NUM _CHAR ) ; } catch ( UnsupportedEncodingException e ) { return _NULL ; } }
52060	public void trimToSize ( ) { if ( _size < _NUM ) { return ; } final Object [ ] array = ( Object [ ] ) _data ; final int oldCapacity = array . length ; if ( _size < oldCapacity ) { modCount ++ ; _data = Arrays . copyOf ( array , _size ) ; } }
52065	@ Deprecated public boolean isSharped ( byte id ) { if ( id == getId ( _BOOL ) ) { return _BOOL ; } else if ( id == getId ( _BOOL ) ) { return _BOOL ; } else { throw new IllegalArgumentException ( _CHAR The id is n _CHAR_CHAR ) ; } }
52219	public String encode ( String pString ) throws EncoderException { if ( pString == _NULL ) { return _NULL ; } try { return encode ( pString , getDefaultCharset ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw new EncoderException ( e . getMessage ( ) ) ; } }
52331	public void addToListenersMap ( String name , Object listener ) { synchronized ( listenersMap ) { Set < Object > set = listenersMap . get ( name ) ; if ( set == _NULL ) { listenersMap . put ( name , CollectionUtils . asSet ( listener ) ) ; } else { set . add ( listener ) ; } } }
52515	public void stopTracking ( ) { if ( ! isTracking ) { return ; } Session session = getSession ( ) ; if ( session != _NULL ) { session . removeCallback ( callback ) ; } broadcastManager . unregisterReceiver ( receiver ) ; isTracking = _BOOL ; }
52531	boolean popNamespace ( String prefix ) { if ( prefix . startsWith ( XML_PREFIX ) ) { return _BOOL ; } Stack stack ; if ( ( stack = getPrefixStack ( prefix ) ) != _NULL ) { stack . pop ( ) ; return _BOOL ; } return _BOOL ; }
52558	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
52583	public boolean isPropertySetSettable ( SSOToken caller , Collection < String > properties ) { for ( String property : properties ) { try { SessionUtils . checkPermissionToSetProperty ( caller , property , _NULL ) ; } catch ( SessionException e ) { return _BOOL ; } } return _BOOL ; }
52649	public boolean remove_items ( Collection < BrdItem > p_item_list , boolean with_delete_fixed ) { boolean all_deleted = _BOOL ; for ( BrdItem curr_item : p_item_list ) { if ( ! curr_item . can_delete ( with_delete_fixed ) ) { all_deleted = _BOOL ; continue ; } remove_item ( curr_item ) ; } return all_deleted ; }
52657	public void flushBase64 ( ) throws java . io . IOException { if ( position > _NUM ) { if ( encode ) { out . write ( encode3to4 ( b4 , buffer , position , options ) ) ; position = _NUM ; } else { throw new java . io . IOException ( _CHAR Base64 input not properly padded . '' ) ; } } }
52695	public void reload ( ) { isRunning . set ( _BOOL ) ; logger . info ( _CHAR Reloading diagnostics configuation . '' ) ; diagnosticsProcessor . shutdown ( ) ; unregisterMXBean ( ) ; config = loadConfiguration ( ) ; diagnosticsProcessor = new DiagnosticsProcessor ( config ) ; initMXBean ( ) ; logger . info ( _CHAR Configuration realoaded _CHAR ) ; isRunning . set ( _BOOL ) ; }
52748	public Object put ( Object key , Object value ) { Object oldValue = _NULL ; synchronized ( map ) { oldValue = map . put ( key , value ) ; if ( oldValue != _NULL ) { removeElement ( key ) ; } addElement ( key ) ; } return oldValue ; }
52815	private void processSDKNotification ( ) { try { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR processSDKNotification name = _CHAR + configName ) ; } ( ( AMConfiguration ) Configuration . getConfiguration ( ) ) . processListenerEvent ( configName ) ; } catch ( Exception e ) { debug . error ( _CHAR processSDKNotification _CHAR , e ) ; } }
52865	public int compareTo ( ModelLog anotherItem ) { if ( anotherItem . timestamp > this . timestamp ) { return _NUM ; } else if ( anotherItem . timestamp < this . timestamp ) { return - _NUM ; } else { return _NUM ; } }
52972	public synchronized void okToUseGui ( ) { if ( ! okToUseGui ) { okToUseGui = _BOOL ; synchronized ( children ) { for ( Iterator i = children . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { Visibility v = getChildVisibility ( i . next ( ) ) ; if ( v != _NULL ) v . okToUseGui ( ) ; } } } }
52988	protected boolean pushNamespace ( String prefix , String uri ) { try { if ( m_prefixMap . pushNamespace ( prefix , uri , m_elemContext . m_currentElemDepth ) ) { startPrefixMapping ( prefix , uri ) ; return _BOOL ; } } catch ( SAXException e ) { } return _BOOL ; }
53048	static boolean internalPut ( @ NonNull String key , @ NonNull Object object ) { try { OutputStreamWriter osw = new OutputStreamWriter ( mCache . openStream ( key ) ) ; mGson . toJson ( object , osw ) ; osw . close ( ) ; return _BOOL ; } catch ( Exception e ) { return _BOOL ; } }
53081	public DsnNet add_net ( DsnNetId p_net_id ) { DsnNet result ; if ( nets . containsKey ( p_net_id ) ) { result = _NULL ; } else { result = new DsnNet ( p_net_id ) ; nets . put ( p_net_id , result ) ; } return result ; }
53270	public synchronized Object co_entry_pause ( int thisCoroutine ) throws java . lang . NoSuchMethodException { if ( ! m_activeIDs . get ( thisCoroutine ) ) throw new java . lang . NoSuchMethodException ( ) ; while ( m_nextCoroutine != thisCoroutine ) { try { wait ( ) ; } catch ( java . lang . InterruptedException e ) { } } return m_yield ; }
53320	public Object decode ( Object value ) throws DecoderException { if ( value == _NULL ) { return _NULL ; } else if ( value instanceof String ) { return decode ( ( String ) value ) ; } else { throw new DecoderException ( _CHAR Objects of type _CHAR + value . getClass ( ) . getName ( ) + _CHAR can not be decoded using BCodec _CHAR ) ; } }
53329	public static void uncheckListViewSingleChoice ( ListView listView ) { if ( listView . getChoiceMode ( ) == ListView . CHOICE_MODE_SINGLE ) { int checkedPosition = listView . getCheckedItemPosition ( ) ; if ( checkedPosition > - _NUM ) { listView . setItemChecked ( checkedPosition , _BOOL ) ; } } else { throw new IllegalArgumentException ( _CHAR UtilUI . uncheckListView ( ) only works on lists using choice mode : CHOICE_MODE_SINGLE . '' ) ; } }
53342	public void appendRemainingComponent ( String name ) { if ( name != _NULL ) { CompositeName rname = new CompositeName ( ) ; try { rname . add ( name ) ; } catch ( InvalidNameException e ) { } appendRemainingName ( rname ) ; } }
53559	private boolean append ( String p_string , String p_style ) { StyledDocument document = text_pane . getStyledDocument ( ) ; try { document . insertString ( document . getLength ( ) , p_string , document . getStyle ( p_style ) ) ; } catch ( BadLocationException e ) { System . out . println ( _CHAR ObjectInfoWindow . append : unable to insert text into text pane . '' ) ; return _BOOL ; } return _BOOL ; }
53606	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( resourceBundleName != _NULL ) { try { rb = ResourceBundle . getBundle ( resourceBundleName ) ; } catch ( MissingResourceException e ) { rb = _NULL ; } } }
53675	public void mark ( int readAheadLimit ) throws IOException { if ( readAheadLimit < _NUM ) { throw new IllegalArgumentException ( _CHAR Read - ahead limit < _NUM _CHAR ) ; } synchronized ( lock ) { ensureOpen ( ) ; this . readAheadLimit = readAheadLimit ; markedChar = nextChar ; markedSkipLF = skipLF ; } }
53836	@ Override public void receiveChangeCipherSpec ( ) { if ( isResuming ) { if ( serverHello == _NULL ) { unexpectedMessage ( ) ; } } else if ( clientFinished == _NULL ) { unexpectedMessage ( ) ; } changeCipherSpecReceived = _BOOL ; }
53839	public void flush ( ) { synchronized ( this ) { try { ensureOpen ( ) ; out . flush ( ) ; } catch ( IOException x ) { trouble = _BOOL ; } } }
53886	private void installClientDecorations ( JRootPane root ) { installBorder ( root ) ; JComponent titlePane = createTitlePane ( root ) ; setTitlePane ( root , titlePane ) ; installWindowListeners ( root , root . getParent ( ) ) ; installLayout ( root ) ; if ( window != _NULL ) { root . revalidate ( ) ; root . repaint ( ) ; } }
54008	private void updateMnemonicProperties ( ) { int newMnemonic = model . getMnemonic ( ) ; if ( mnemonic != newMnemonic ) { int oldValue = mnemonic ; mnemonic = newMnemonic ; firePropertyChange ( MNEMONIC_CHANGED_PROPERTY , oldValue , mnemonic ) ; updateDisplayedMnemonicIndex ( getText ( ) , mnemonic ) ; revalidate ( ) ; repaint ( ) ; } }
54031	public DTMAxisIterator cloneIterator ( ) { _isRestartable = _BOOL ; try { final AncestorIterator clone = ( AncestorIterator ) super . clone ( ) ; clone . _startNode = _startNode ; return clone ; } catch ( CloneNotSupportedException e ) { throw new DTMException ( XMLMessages . createXMLMessage ( XMLErrorResources . ER_ITERATOR_CLONE_NOT_SUPPORTED , _NULL ) ) ; } }
54170	public View detachViewAndClearPreInfo ( ) { View original = mHost ; if ( mBorder != _NULL ) { mBorder . detachView ( ) ; } mPreRealLeft = _NUM ; mPreRealWidth = _NUM ; mPreRealHeight = _NUM ; mPreRealTop = _NUM ; return original ; }
54174	public void reset ( ) { super . reset ( ) ; H1 = _NUM ; H2 = _NUM ; H3 = _NUM ; H4 = _NUM ; H5 = _NUM ; H6 = _NUM ; H7 = _NUM ; H8 = _NUM ; }
54267	public void removeEjb ( String name ) { entries . remove ( name ) ; ContextEjb ejb = _NULL ; synchronized ( ejbs ) { ejb = ejbs . remove ( name ) ; } if ( ejb != _NULL ) { support . firePropertyChange ( _CHAR ejb _CHAR , ejb , _NULL ) ; ejb . setNamingResources ( _NULL ) ; } }
54427	public static boolean mustObfuscate ( String attrName , Schema schema ) { if ( schema != _NULL ) { return hasPasswordSyntax ( attrName , schema ) ; } for ( String attr : attrsToObfuscate ) { if ( attr . equalsIgnoreCase ( attrName ) ) { return _BOOL ; } } return _BOOL ; }
54479	@ Override public void close ( ) throws IOException { synchronized ( lock ) { if ( encoder != _NULL ) { drainEncoder ( ) ; flushBytes ( _BOOL ) ; out . close ( ) ; encoder = _NULL ; bytes = _NULL ; } } }
54548	public void regenerate ( ) { if ( code != _NULL ) { try { QRCodeWriter qc = new QRCodeWriter ( ) ; bm = qc . encode ( code , _NUM , _NUM , hints ) ; } catch ( WriterException ex ) { throw new IllegalArgumentException ( ex . getMessage ( ) , ex . getCause ( ) ) ; } } }
54642	protected void updateXmpMetadata ( ) { try { if ( writer . properties . addXmpMetadata ) { setXmpMetadata ( updateDefaultXmpMetadata ( ) ) ; } } catch ( XMPException e ) { Logger logger = LoggerFactory . getLogger ( PdfDocument . class ) ; logger . error ( LogMessageConstant . EXCEPTION_WHILE_UPDATING_XMPMETADATA , e ) ; } }
54669	public JavaClass parse ( ) throws IOException , ClassFormatException { readID ( ) ; readVersion ( ) ; readConstantPool ( ) ; readClassInfo ( ) ; readInterfaces ( ) ; readFields ( ) ; readMethods ( ) ; readAttributes ( ) ; return new JavaClass ( class_name , superclass_name , access_flags , constant_pool , interface_names , runtimeVisibleAnnotations ) ; }
54723	void resetRealmSubjects ( ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR Resetting realm subjects in realm : _CHAR + pmRealmName ) ; } synchronized ( this ) { realmSubjects = _NULL ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR Reset realm subjects in realm : _CHAR + pmRealmName ) ; } }
54728	@ Override public boolean containsValue ( Object value ) { if ( value == _NULL ) { value = NULL_OBJECT ; } for ( int i = _NUM ; i < elementData . length ; i = i + _NUM ) { if ( elementData [ i ] == value ) { return _BOOL ; } } return _BOOL ; }
54740	void enableFilterUseStats ( boolean enabled ) { if ( enabled && ! filterUseEnabled ) { startTimeStamp = TimeThread . getGMTTime ( ) ; indexedSearchCount . set ( _NUM ) ; unindexedSearchCount . set ( _NUM ) ; } else if ( ! enabled ) { filterToStats . clear ( ) ; } filterUseEnabled = enabled ; }
54773	public void removeService ( String name ) { entries . remove ( name ) ; ContextService service = _NULL ; synchronized ( services ) { service = services . remove ( name ) ; } if ( service != _NULL ) { support . firePropertyChange ( _CHAR service _CHAR , service , _NULL ) ; service . setNamingResources ( _NULL ) ; } }
54898	public synchronized void dontUseGui ( ) { if ( okToUseGui ) { okToUseGui = _BOOL ; synchronized ( children ) { for ( Iterator i = children . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { Visibility v = getChildVisibility ( i . next ( ) ) ; if ( v != _NULL ) v . dontUseGui ( ) ; } } } }
54908	public void requestPreviewFrame ( Handler handler , int message ) { if ( camera != _NULL && previewing ) { previewCallback . setHandler ( handler , message ) ; if ( useOneShotPreviewCallback ) { camera . setOneShotPreviewCallback ( previewCallback ) ; } else { camera . setPreviewCallback ( previewCallback ) ; } } }
54927	public void commit ( ) throws CannotWriteException { try { save ( ) ; } catch ( IOException ioe ) { throw new CannotWriteException ( ioe ) ; } catch ( TagException te ) { throw new CannotWriteException ( te ) ; } }
54995	public static final Signum of ( double p_value ) { if ( p_value > _NUM ) { return POSITIVE ; } else if ( p_value < _NUM ) { return NEGATIVE ; } else { return ZERO ; } }
55000	public static Set wrapInSet ( Object obj ) { Set set = _NULL ; if ( obj != _NULL ) { set = new HashSet ( _NUM ) ; set . add ( obj ) ; } else { set = Collections . EMPTY_SET ; } return set ; }
55035	public Object clone ( ) { SimpleAttributeSet attr ; try { attr = ( SimpleAttributeSet ) super . clone ( ) ; attr . table = ( LinkedHashMap ) table . clone ( ) ; } catch ( CloneNotSupportedException cnse ) { attr = _NULL ; } return attr ; }
55072	public void reset ( ) throws IOException { stream . reset ( ) ; framePos = markpos ; pushBackLen = markPushBackLen ; if ( pushBackLen > _NUM ) { if ( pushBackBuffer == _NULL ) { pushBackBuffer = new byte [ frameSize - _NUM ] ; } System . arraycopy ( markPushBackBuffer , _NUM , pushBackBuffer , _NUM , pushBackLen ) ; } }
55104	public static String DNToName ( AMModel model , String dn ) { if ( LDAPUtils . isDN ( dn ) ) { if ( DN . valueOf ( dn ) . equals ( DN . valueOf ( SMSEntry . getRootSuffix ( ) ) ) ) { return model . getLocalizedString ( _CHAR top . level . realm _CHAR ) ; } else { return LDAPUtils . rdnValueFromDn ( dn ) ; } } return dn ; }
55309	boolean isTLSEnabled ( ) { synchronized ( stateLock ) { final FilterChain currentFilterChain = ( FilterChain ) connection . getProcessor ( ) ; for ( final Filter filter : currentFilterChain ) { if ( filter instanceof SSLFilter ) { return _BOOL ; } } return _BOOL ; } }
55336	private boolean hasPath ( String uri ) { int pos = uri . indexOf ( _CHAR : // '' ) ; if ( pos < 0 ) { return false ; } pos = uri . indexOf ( '/ ' , pos + 3 ) ; if ( pos < 0 ) { return false ; } return true ; }
55347	public static String separatorsToSystem ( String path ) { if ( path == _NULL ) { return _NULL ; } if ( isSystemWindows ( ) ) { return separatorsToWindows ( path ) ; } else { return separatorsToUnix ( path ) ; } }
55650	public static boolean isAnyBlank ( final Set < String > xs ) { if ( xs == _NULL || xs . isEmpty ( ) ) { return _BOOL ; } for ( String x : xs ) { if ( isBlank ( x ) ) { return _BOOL ; } } return _BOOL ; }
55745	public void forceTermination ( ) { final Phaser root = this . root ; long s ; while ( ( s = root . state ) >= _NUM ) { if ( UNSAFE . compareAndSwapLong ( root , stateOffset , s , s | TERMINATION_BIT ) ) { releaseWaiters ( _NUM ) ; releaseWaiters ( _NUM ) ; return ; } } }
55760	public static ByteString encodeResponseValue ( long connectionID ) { ByteStringBuilder builder = new ByteStringBuilder ( _NUM ) ; ASN1Writer writer = ASN1 . getWriter ( builder ) ; try { writer . writeInteger ( connectionID ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } return builder . toByteString ( ) ; }
55790	public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; if ( certificate != _NULL ) { sb . append ( certificate . getSubjectDN ( ) . getName ( ) ) ; sb . append ( _CHAR verified with _CHAR ) ; } sb . append ( verifierClass . getName ( ) ) ; sb . append ( _CHAR : _CHAR ) ; sb . append ( message ) ; return sb . toString ( ) ; }
55853	public static void deleteDirectory ( File dir ) throws IOException { if ( dir == _NULL || ! dir . exists ( ) ) { return ; } if ( dir . isDirectory ( ) ) { for ( String child : dir . list ( ) ) { deleteDirectory ( new File ( dir , child ) ) ; } } dir . delete ( ) ; }
55883	static String toString ( final byte [ ] b , final int offset , final int length ) { if ( length == _NUM ) { return _CHAR _CHAR ; } try { return new String ( b , offset , length , _CHAR UTF - _NUM _CHAR ) ; } catch ( final UnsupportedEncodingException e ) { throw new RuntimeException ( _CHAR Unable to decode bytes as UTF - _NUM string _CHAR , e ) ; } }
56144	public synchronized void start ( ) { if ( isActive ( ) ) { MONITOR_LOGGER . logp ( Level . FINER , StringMonitor . class . getName ( ) , _CHAR start _CHAR , _CHAR the monitor is already active _CHAR ) ; return ; } for ( ObservedObject o : observedObjects ) { final StringMonitorObservedObject smo = ( StringMonitorObservedObject ) o ; smo . setStatus ( MATCHING_OR_DIFFERING ) ; } doStart ( ) ; }
56198	private static void writeLine ( Writer writer , String line ) { if ( ( writer != _NULL ) && ( line != _NULL ) ) { try { writer . write ( line ) ; writer . write ( LINE_SEP ) ; } catch ( Exception ex ) { Debug . log ( _CHAR FileUtils . writeLine ( ) threw exception : _CHAR , ex ) ; } } }
56247	private void waitForConnectionToRs ( String testCase , FakeReplicationServer rs ) throws Exception { int nsec =- _NUM ; do { nsec ++ ; if ( nsec == _NUM ) { fail ( testCase + _CHAR : timeout waiting for domain connection to fake RS after '' + nsec + '' seconds . '' ) ; } Thread . sleep ( 1000 ) ; } while ( ! rs . isHandshakeOk ( ) ) ; }
56303	private static int handleResources ( QueryResourceHandler handler , List < ResourceResponse > resources ) { int count = _NUM ; for ( ResourceResponse response : resources ) { count ++ ; boolean handled = handler . handleResource ( response ) ; if ( ! handled ) { break ; } } return count ; }
56314	@ Override public String toString ( ) { String s = _NULL ; try { JSONObject jo = toJSONObject ( ) ; s = ( jo == _NULL ) ? super . toString ( ) : jo . toString ( _NUM ) ; } catch ( JSONException e ) { PolicyConstants . DEBUG . error ( _CHAR NotCondition . toString ( ) _CHAR , e ) ; } return s ; }
