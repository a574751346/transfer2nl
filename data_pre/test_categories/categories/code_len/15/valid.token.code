22	private boolean playMode ( ) { switch ( this . mode ) { case NONE : this . setMode ( MODE . PLAY ) ; break ; case PLAY : break ; case RECORD : Log . d ( LOG_TAG , _CHAR AudioPlayer Error : Ca n _CHAR_CHAR ) ; sendErrorStatus ( MEDIA_ERR_ABORTED ) ; return false ; } return true ; }
98	@ Override public boolean isEnemyFrom ( Player enemy ) { if ( this . getObjectId ( ) == enemy . getObjectId ( ) ) { return _BOOL ; } else if ( ( this . getAdminEnmity ( ) > _NUM || enemy . getAdminEnmity ( ) > _NUM ) ) { return _BOOL ; } else if ( canPvP ( enemy ) || this . getController ( ) . isDueling ( enemy ) ) { return _BOOL ; } else { return _BOOL ; } }
653	public synchronized void acquireLock ( String tableName , long transNum , LockType lockType ) { while ( this . databaseLocked ) { if ( this . databaseTransactionOwner == transNum ) { break ; } try { wait ( ) ; } catch ( InterruptedException e ) { } } this . databaseTransactionOwner = transNum ; this . databaseLocked = _BOOL ; }
1276	public final boolean contains ( Node n ) { if ( bits == _NULL ) { for ( Node node : nodes ) { if ( node == n ) return _BOOL ; if ( node == _NULL ) { break ; } } return _BOOL ; } else { return bits . get ( n . getNumber ( ) ) ; } }
1706	protected String domain ( ) { if ( uri . getPath ( ) . startsWith ( _CHAR queues / _CHAR ) ) { return _CHAR queue _CHAR ; } else if ( uri . getPath ( ) . startsWith ( _CHAR topics / _CHAR ) ) { return _CHAR topic _CHAR ; } else if ( uri . getPath ( ) . startsWith ( _CHAR persistent / _CHAR ) ) { return _CHAR persistent _CHAR ; } else { throw new RestException ( Status . INTERNAL_SERVER_ERROR , _CHAR domain ( ) invoked from wrong resource _CHAR ) ; } }
1709	public static Boolean booleanValue ( Object value ) { if ( value == _NULL || value instanceof Boolean ) { return ( Boolean ) value ; } else if ( _CHAR _BOOL _CHAR . equals ( value ) ) { return Boolean . TRUE ; } else if ( _CHAR _BOOL _CHAR . equals ( value ) ) { return Boolean . FALSE ; } else { return _NULL ; } }
2047	public final void closeFallbackOutputStream ( ) throws DataFallbackException { if ( output != _NULL ) { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR Closing the file writer for the file '' + dataFile . getName ( ) ) ; try { output . close ( ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } finally { output = _NULL ; } } }
2399	public String queryCatalogClassName ( ) { String className = System . getProperty ( pClassname ) ; if ( className == _NULL ) { if ( resources == _NULL ) readProperties ( ) ; if ( resources == _NULL ) return _NULL ; try { return resources . getString ( _CHAR catalog - class - name _CHAR ) ; } catch ( MissingResourceException e ) { return _NULL ; } } return className ; }
2977	public boolean isSet ( _Fields field ) { if ( field == _NULL ) { throw new IllegalArgumentException ( ) ; } switch ( field ) { case SEQUENCE_ID : return isSetSequenceId ( ) ; case STATUS : return isSetStatus ( ) ; case MESSAGE : return isSetMessage ( ) ; } throw new IllegalStateException ( ) ; }
3746	public ElasticListView enableLoadFooter ( boolean enable ) { if ( enable ) { if ( ! mEnableLoader ) { super . addFooterView ( mLoadFooter , _NULL , _BOOL ) ; } } else { if ( mEnableLoader ) { removeFooterView ( mLoadFooter ) ; } } mEnableLoader = enable ; return this ; }
3830	private boolean typeSpecialChar ( char c ) { switch ( c ) { case _CHAR : controller . keyPress ( KeyEvent . VK_TAB ) ; controller . keyRelease ( KeyEvent . VK_TAB ) ; return _BOOL ; case _CHAR : controller . keyPress ( KeyEvent . VK_ENTER ) ; controller . keyRelease ( KeyEvent . VK_ENTER ) ; return _BOOL ; default : return _BOOL ; } }
4063	public synchronized void post ( Utterance utterance ) { if ( closed ) { throw new IllegalStateException ( _CHAR output queue closed _CHAR ) ; } while ( list . size ( ) >= size ) { try { wait ( ) ; } catch ( InterruptedException ie ) { } } list . add ( utterance ) ; notify ( ) ; }
4298	public synchronized void close ( ) { if ( currentClip != _NULL ) { currentClip . drain ( ) ; if ( drainDelay > _NUM ) { try { Thread . sleep ( drainDelay ) ; } catch ( InterruptedException e ) { } } currentClip . close ( ) ; } notifyAll ( ) ; }
4478	public void startPause ( ) { if ( mTimer . hasStarted ( ) ) { if ( mTimer . isRunning ( ) ) { mTimer . pause ( ) ; } else { mTimer . resume ( ) ; } } else { mTimer . start ( ) ; } update ( ) ; }
4574	public void updateAnchor ( ) { if ( mOwner != _NULL ) { ConstraintWidget widget = mOwner . getConstraintWidget ( ) ; if ( widget instanceof Guideline ) { mAnchor = ( ( Guideline ) widget ) . getAnchor ( ) ; } else { mAnchor = widget . getAnchor ( mType ) ; } } else { mAnchor = _NULL ; } }
4935	private synchronized void closeOutputStreamQuietly ( ) { if ( ! mClosed ) { try { mOutputStream . close ( ) ; reportDecodedSizeIfApplicable ( ) ; } catch ( IOException e ) { CLog . writeToConsole ( mNetworkPeerManager , Console . MessageLevel . ERROR , Console . MessageSource . NETWORK , _CHAR Could not close the output stream _CHAR + e ) ; } finally { mClosed = _BOOL ; } } }
5783	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
5934	private < T > T send ( String method , @ Nullable Object entity ) { try { if ( entity == _NULL ) { builder ( ) . method ( method ) ; } else { builder ( ) . method ( method , entity ) ; } return _NULL ; } catch ( UniformInterfaceException e ) { throw asEmoClientException ( e ) ; } }
6778	@ Override public void onCheckedChanged ( CompoundButton switchView , boolean isChecked ) { if ( ! isResumed ( ) ) { return ; } if ( isChecked ) { requestPasswordForShareViaLink ( _BOOL ) ; } else { ( ( FileActivity ) getActivity ( ) ) . getFileOperationsHelper ( ) . setPasswordToShareViaLink ( mFile , _CHAR _CHAR ) ; } switchView . setOnCheckedChangeListener ( _NULL ) ; switchView . toggle ( ) ; switchView . setOnCheckedChangeListener ( mOnPasswordInteractionListener ) ; }
6838	private synchronized void disconnectQuietly ( ) { connected = _BOOL ; for ( Map . Entry < String , MessageListenerWrapper > entry : topicToWrapper . entrySet ( ) ) { entry . getValue ( ) . stop ( ) ; } if ( connection != _NULL ) { try { connection . close ( ) ; } catch ( JMSException jmsEx ) { LOGGER . error ( _CHAR disconnect ( ) - Exception caught while attempting to disconnect from JMS - aborting this attempt . '' , jmsEx ) ; } } }
7199	@ Override public final int readByte ( ) { int temp ; try { temp = raf . read ( ) ; if ( temp == - _NUM ) { throw new RuntimeException ( _CHAR EOF _CHAR ) ; } read ++ ; return temp ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
7245	private static boolean isJsonString ( final Object json ) { boolean valid = _BOOL ; try { if ( json instanceof String ) { final JsonParser parser = mapper . getFactory ( ) . createParser ( ( String ) json ) ; while ( parser . nextToken ( ) != _NULL ) { } valid = _BOOL ; } } catch ( IOException ignored ) { } return valid ; }
7252	public static Boolean booleanValueIndicator ( Object value ) { if ( value == _NULL || value instanceof Boolean ) { return ( Boolean ) value ; } else if ( _CHAR Y _CHAR . equals ( value ) ) { return Boolean . TRUE ; } else if ( _CHAR N _CHAR . equals ( value ) ) { return Boolean . FALSE ; } else { return _NULL ; } }
7853	private void Hunter_SniperSkills ( ) { if ( getOwner ( ) . isCasting ( ) || isAlreadyDead ( ) ) { return ; } int rand = Rnd . get ( _NUM , _NUM ) ; switch ( rand ) { case _NUM : useSkill ( _NUM ) ; break ; case _NUM : useSkill ( _NUM ) ; break ; } }
8187	public synchronized Utterance pend ( ) { Utterance utterance = _NULL ; while ( list . size ( ) == _NUM ) { try { wait ( ) ; } catch ( InterruptedException ie ) { return _NULL ; } } utterance = ( Utterance ) list . removeFirst ( ) ; notify ( ) ; return utterance ; }
8405	@ Override public void reset ( ) { super . reset ( ) ; fNamespaceDeclarations = fConfiguration . getFeature ( Constants . DOM_NAMESPACE_DECLARATIONS ) ; if ( fNullFilterInUse ) { fDOMFilter = _NULL ; fNullFilterInUse = _BOOL ; } if ( fSkippedElemStack != _NULL ) { fSkippedElemStack . removeAllElements ( ) ; } fRejectedElementDepth = _NUM ; fFilterReject = _BOOL ; fSchemaType = _NULL ; }
8680	public final TestSubscriber < T > await ( Duration timeout ) { if ( cdl . getCount ( ) == _NUM ) { return this ; } try { if ( ! cdl . await ( timeout . toMillis ( ) , TimeUnit . MILLISECONDS ) ) { throw new AssertionError ( _CHAR No complete or error signal before timeout _CHAR ) ; } return this ; } catch ( InterruptedException ex ) { throw new AssertionError ( _CHAR Wait interrupted _CHAR , ex ) ; } }
8987	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
9234	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
9262	public void writerWait ( Object notifier , long time ) { try { synchronized ( notifier ) { writeUnlock ( ) ; notifier . wait ( time ) ; } } catch ( InterruptedException e ) { throw new ConcurrentLockException ( _CHAR write wait interrupted in thread _CHAR ) ; } finally { writeLock ( ) ; } }
9292	@ PostConstruct public void init ( ) { cache . acquireWriteLockOnKey ( clusterInitializedKey ) ; try { if ( ! skipCachePreloading && cacheMode . equalsIgnoreCase ( _CHAR single _CHAR ) ) { cache . removeAll ( ) ; } if ( cache . get ( clusterInitializedKey ) == _NULL ) { this . put ( clusterInitializedKey , Boolean . TRUE ) ; } } finally { cache . releaseWriteLockOnKey ( clusterInitializedKey ) ; } }
9940	private boolean checkCameraHardware ( Context context ) { if ( context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA ) ) { return _BOOL ; } else if ( context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA_FRONT ) ) { return _BOOL ; } else if ( context . getPackageManager ( ) . hasSystemFeature ( PackageManager . FEATURE_CAMERA_ANY ) ) { return _BOOL ; } else { return _BOOL ; } }
10047	@ Override public void destroy ( ) { mInitialized = _BOOL ; if ( mWebChromeClient != _NULL ) { mWebChromeClient . destroy ( ) ; } if ( mWebViewClient != _NULL ) { mWebViewClient . destroy ( ) ; } mContext = _NULL ; mWebSettings = _NULL ; mWebViewClient = _NULL ; mWebChromeClient = _NULL ; super . destroy ( ) ; }
10747	public R1Interval addPoint ( double p ) { if ( isEmpty ( ) ) { return R1Interval . fromPoint ( p ) ; } else if ( p < lo ( ) ) { return new R1Interval ( p , hi ( ) ) ; } else if ( p > hi ( ) ) { return new R1Interval ( lo ( ) , p ) ; } else { return new R1Interval ( lo ( ) , hi ( ) ) ; } }
10834	public static File [ ] sortLocalFolder ( File [ ] files ) { switch ( mSortOrder ) { case _NUM : files = FileStorageUtils . sortLocalFilesByName ( files ) ; break ; case _NUM : files = FileStorageUtils . sortLocalFilesByDate ( files ) ; break ; case _NUM : files = FileStorageUtils . sortLocalFilesBySize ( files ) ; break ; } return files ; }
11181	public static boolean isValidBedGraphLine ( String line ) { String [ ] bdg = line . split ( _CHAR \ t _CHAR ) ; if ( bdg . length < _NUM ) { return _BOOL ; } try { Integer . parseInt ( bdg [ _NUM ] ) ; Integer . parseInt ( bdg [ _NUM ] ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
11580	public static void recordOmniboxNavigation ( String destinationUrl , int transitionType ) { if ( ( transitionType & PageTransition . CORE_MASK ) == PageTransition . GENERATED ) { recordAction ( ACTION_SEARCHED_USING_OMNIBOX ) ; } else { if ( UrlUtilities . nativeIsGoogleHomePageUrl ( destinationUrl ) ) { recordAction ( ACTION_NAVIGATED_TO_GOOGLE_HOMEPAGE ) ; } else { recordAction ( ACTION_NAVIGATED_USING_OMNIBOX ) ; } recordExplicitUserNavigation ( destinationUrl , RAPPOR_ACTION_NAVIGATED_USING_OMNIBOX ) ; } }
11631	private boolean _hasNext ( ) { try { if ( _iterator . hasNext ( ) ) return _BOOL ; else while ( _cursor < _listOfIterators . size ( ) ) { _iterator = _listOfIterators . get ( _cursor ++ ) ; if ( _iterator . hasNext ( ) ) return _BOOL ; } return _BOOL ; } catch ( NullPointerException npe ) { if ( _iterator == _NULL ) return _BOOL ; else throw npe ; } }
11899	@ Override public void endDTD ( Augmentations augs ) throws XNIException { fInDTD = _BOOL ; try { if ( fLexicalHandler != _NULL ) { fLexicalHandler . endDTD ( ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } if ( fDeclaredAttrs != _NULL ) { fDeclaredAttrs . clear ( ) ; } }
12155	@ Override public void execute ( @ NotNull RecipeExecutor executor ) throws TemplateProcessingException { if ( myFolder == _NULL ) { executeInstructions ( executor ) ; } else { executor . pushFolder ( myFolder ) ; try { executeInstructions ( executor ) ; } finally { executor . popFolder ( ) ; } } }
12529	@ Override public void run ( ) { try { if ( _delay > _NUM ) { fallAsleep ( _delay ) ; } while ( ! isInterrupted ( ) ) { super . run ( ) ; fallAsleep ( ) ; } } catch ( InterruptedException ie ) { interrupt ( ) ; } }
13014	public static boolean isValidBedLine ( String line ) { String [ ] bdg = line . split ( _CHAR \ t _CHAR ) ; if ( bdg . length < _NUM ) { return _BOOL ; } try { Integer . parseInt ( bdg [ _NUM ] ) ; Integer . parseInt ( bdg [ _NUM ] ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
13970	public static ItemStatus convertVersionStatus ( final ReleaseStatus release ) { switch ( release . getUpdateStatus ( ) ) { case CRITICAL : return ItemStatus . ERROR ; case UPDATE_RECOMMENDED : return ItemStatus . WARN ; case NEW_AVAILABLE : return ItemStatus . INFO ; case ON_LATEST : return ItemStatus . OK ; default : return ItemStatus . ERROR ; } }
14049	private boolean playMode ( ) { switch ( this . mode ) { case NONE : this . setMode ( MODE . PLAY ) ; break ; case PLAY : break ; case RECORD : Log . d ( LOG_TAG , _CHAR AudioPlayer Error : Ca n _CHAR_CHAR ) ; sendErrorStatus ( MEDIA_ERR_ABORTED ) ; return false ; } return true ; }
14160	public BoundingVolume mergeLocal ( BoundingVolume volume ) { if ( volume == _NULL ) { return this ; } switch ( volume . getType ( ) ) { case AABB : { BoundingBox vBox = ( BoundingBox ) volume ; return merge ( vBox . center , vBox . xExtent , vBox . yExtent , vBox . zExtent , this ) ; } default : return _NULL ; } }
14409	void initOutputDirectory ( ) throws CommandException { if ( outputDirectoryParam == _NULL ) { outputDirectoryPath = Paths . get ( nameParam ) ; } else { outputDirectoryPath = Paths . get ( outputDirectoryParam ) ; } try { java . nio . file . Files . createDirectories ( outputDirectoryPath ) ; } catch ( IOException ioe ) { throw new CommandException ( _CHAR Error creating output directory _CHAR , ioe ) ; } }
14605	private TrustAnchor findTrustAnchorBySubjectAndPublicKey ( X509Certificate cert ) { TrustAnchor trustAnchor = trustedCertificateIndex . findBySubjectAndPublicKey ( cert ) ; if ( trustAnchor != _NULL ) { return trustAnchor ; } if ( trustedCertificateStore == _NULL ) { return _NULL ; } X509Certificate systemCert = trustedCertificateStore . getTrustAnchor ( cert ) ; if ( systemCert != _NULL ) { return new TrustAnchor ( systemCert , _NULL ) ; } return _NULL ; }
14727	private void closeCounterDataInputStream ( ) throws DataFallbackException { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR Closing the counter file reader for the file '' + counterFile . getName ( ) ) ; if ( dInput != _NULL ) { try { dInput . close ( ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } finally { dInput = _NULL ; } } }
15041	private synchronized void reschedule ( long millis ) { currentFut = _NULL ; if ( ! closed ) { SCHEDULER . schedule ( _NULL , millis , TimeUnit . MILLISECONDS ) ; } else { try { underlying . close ( ) ; } catch ( Exception ex ) { LOG . log ( Level . WARNING , _CHAR failed to close resolver _CHAR + underlying . configString ( ) , ex ) ; } } }
15053	@ Override public void closeKeepAliveService ( ) { synchronized ( this ) { if ( this . scheduledFuture != _NULL ) { this . keepAliveRequestStreamObserver . onCompleted ( ) ; this . keepAliveRequestStreamObserver = _NULL ; this . keepAliveResponseStreamObserver = _NULL ; this . scheduledFuture . cancel ( _BOOL ) ; this . scheduledFuture = _NULL ; } else { throw new IllegalStateException ( _CHAR Lease keep alive service not start yet _CHAR ) ; } } }
15117	protected void closeApplicationContext ( ) { if ( applicationContext != _NULL ) { if ( logger . isDebugEnabled ( ) ) { logger . debug ( _CHAR Closing application context [ _CHAR + location + _CHAR ] _CHAR ) ; } try { applicationContext . setParent ( _NULL ) ; applicationContext . close ( ) ; } finally { applicationContext = _NULL ; } } }
16202	@ Override public final int readByte ( ) { int temp ; try { temp = is . read ( ) ; if ( temp == - _NUM ) { throw new RuntimeException ( _CHAR EOF _CHAR ) ; } read ++ ; return temp ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
16318	public String makeStringLiteral ( String value ) { if ( value == _NULL ) { return this . literalDQStringDefault ; } else if ( value . isEmpty ( ) ) { return _CHAR \ _CHAR \ _CHAR _CHAR ; } else if ( ! value . contains ( _CHAR \ _CHAR _CHAR ) ) { return _CHAR r \ _CHAR _CHAR + value + _CHAR \ _CHAR _CHAR ; } else { return _CHAR \ _CHAR _CHAR + makeStringValue ( value ) + _CHAR \ _CHAR _CHAR ; } }
16608	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return APPKEY ; case _NUM : return SEND_TIME ; case _NUM : return LOAD_INFO ; case _NUM : return STATUS ; default : return _NULL ; } }
17422	public String makeStringLiteralSQ ( String value ) { if ( value == _NULL ) { return this . literalSQStringDefault ; } else if ( value . isEmpty ( ) ) { return _CHAR _CHAR _CHAR ; } else if ( ! value . contains ( _CHAR _CHAR_CHAR_CHAR _CHAR + value + _CHAR _CHAR_CHAR_CHAR _CHAR + makeStringValueSQ ( value ) + _CHAR _CHAR_CHAR ; } }
17544	public void addDocument ( Document d ) { if ( ! m_readMode ) { try { writer . addDocument ( d ) ; m_hitCountCache . clear ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } else { throw new IllegalStateException ( _CHAR Documents can not be added to the index unless _CHAR + _CHAR the LuceneSearcher is not in read mode _CHAR ) ; } }
17576	public static boolean isUnboxType ( TypeName tn ) { switch ( tn . toString ( ) ) { case _CHAR boolean _CHAR : case _CHAR byte _CHAR : case _CHAR char _CHAR : case _CHAR short _CHAR : case _CHAR int _CHAR : case _CHAR long _CHAR : case _CHAR float _CHAR : case _CHAR double _CHAR : return _BOOL ; } return _BOOL ; }
17840	protected void keyTyped ( char typedChar , int keyCode ) { if ( this . buttonId != _NULL ) { buttonId . FunctionExt = typedChar ; this . buttonId = _NULL ; } else { try { super . keyTyped ( typedChar , keyCode ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } }
18769	public synchronized boolean commit ( ) { checkNotClosedOrEditingConcurrently ( ) ; close ( ) ; mIsClosed = _BOOL ; if ( mHasErrors ) { mCache . abortEdit ( mEntry ) ; mCache . remove ( mEntry . getKey ( ) ) ; return _BOOL ; } else { mCache . commitEdit ( mEntry ) ; return _BOOL ; } }
20199	public void populateComboBoxField ( FieldIdEnum fieldId , String value ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( fieldConfig != _NULL ) { if ( value != _NULL ) { ( ( FieldConfigValuePopulateInterface ) fieldConfig ) . populateField ( value ) ; } else { fieldConfig . revertToDefaultValue ( ) ; } } }
20504	@ Override public String toString ( ) { if ( nans != FINITE ) { if ( nans == INFINITE ) { return ( sign < _NUM ) ? NEG_INFINITY_STRING : POS_INFINITY_STRING ; } else { return NAN_STRING ; } } if ( exp > mant . length || exp < - _NUM ) { return dfp2sci ( ) ; } return dfp2string ( ) ; }
20684	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
21333	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
21731	public final void closeFallbackInputStream ( ) throws DataFallbackException { if ( getInput ( ) != _NULL ) { try { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR closeInputStream ( ) : Closing the file reader for the file '' + dataFile . getName ( ) ) ; getInput ( ) . close ( ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } finally { setInput ( _NULL ) ; } } }
22507	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
22883	public void closeFile ( ) { try { writeDatasets ( ) ; writeGroups ( ) ; long indexPosition = bytesWritten ; writeIndex ( ) ; int nbytes = ( int ) ( bytesWritten - indexPosition ) ; fos . close ( ) ; writeIndexPosition ( indexPosition , nbytes ) ; } catch ( IOException ex ) { log . error ( _CHAR Error closing file _CHAR , ex ) ; } }
23317	private boolean isSpatialSupport ( ) { try { jdbcTemplate . execute ( _CHAR create extension postgis ; _CHAR ) ; } catch ( Exception ex ) { } try { String version = jdbcTemplate . queryForObject ( _CHAR select postgis_full_version ( ) ; _CHAR , String . class ) ; return version != _NULL ; } catch ( Exception ex ) { return _BOOL ; } }
23430	public static void closeStreams ( Closeable ... streams ) { if ( _NULL != streams ) { for ( Closeable stream : streams ) { if ( _NULL != stream ) { try { stream . close ( ) ; } catch ( IOException e ) { LOGGER . error ( _CHAR Error while closing stream '' + stream ) ; } } } } }
23798	@ Override public final void run ( ) { try { if ( isValid ( ) ) { runImpl ( ) ; } } catch ( Throwable e ) { String name = getConnection ( ) . getAccount ( ) . getName ( ) ; if ( name == _NULL ) { name = getConnection ( ) . getIP ( ) ; } log . error ( _CHAR Error handling client ( _CHAR + name + _CHAR ) message : _CHAR + this , e ) ; } }
24009	public void readerWait ( Object notifier , long time ) { try { synchronized ( notifier ) { readUnlock ( ) ; notifier . wait ( time ) ; } } catch ( InterruptedException e ) { throw new ConcurrentLockException ( _CHAR read wait interrupted in thread _CHAR ) ; } finally { readLock ( ) ; } }
24245	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
24535	private void writeFileClean ( ) { PrintWriter pw ; try { pw = new PrintWriter ( Settings . sServerInfo ) ; pw . println ( _CHAR _CHAR ) ; pw . close ( ) ; } catch ( FileNotFoundException e ) { System . out . println ( _CHAR serverinfo . jrc do not exist _CHAR ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
24637	private void closeCounterDataOutputStream ( ) throws DataFallbackException { if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR Closing the counter file writer for the file '' + counterFile . getName ( ) ) ; if ( dOutput != _NULL ) { try { dOutput . close ( ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } finally { dOutput = _NULL ; } } }
25037	protected void init ( ) { fSchemeName = _NULL ; fSchemeData = _NULL ; fShortHandPointerName = _NULL ; fIsResolveElement = _BOOL ; fIsElementFound = _BOOL ; fWasOnlyEmptyElementFound = _BOOL ; fFoundDepth = _NUM ; fCurrentChildPosition = _NUM ; fCurrentChildDepth = _NUM ; fIsFragmentResolved = _BOOL ; fShortHandPointer = _NULL ; initErrorReporter ( ) ; }
25158	public static void onActivityCreateSetTheme ( Activity activity ) { switch ( sTheme ) { default : case THEME_DEFAULT : activity . setTheme ( R . style . PizzaTheme ) ; break ; case THEME_WHITE : activity . setTheme ( R . style . DonutTheme ) ; break ; case THEME_BLUE : activity . setTheme ( R . style . IceCreamTheme ) ; break ; } }
25259	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return SERVICE_NAME ; case _NUM : return SEQUENCE_ID ; case _NUM : return CALL_TYPE ; case _NUM : return TIMEOUT ; default : return _NULL ; } }
25859	private boolean isSyncComplete ( JSONObject taskStatus , JSONObject taskDetails ) { try { if ( taskStatus . getBoolean ( _CHAR complete _CHAR ) ) { return _BOOL ; } if ( taskDetails . has ( _CHAR error _CHAR ) ) { throw new RuntimeException ( _CHAR Sync failed with error : _CHAR_CHAR_CHAR_CHAR_CHAR ! _CHAR ) ; } return _BOOL ; } catch ( JSONException e ) { throw new RuntimeException ( e ) ; } }
26184	public static void validateCmdLineArguments ( DppInputParameters inputParameters ) throws ArgumentValidationException { switch ( inputParameters . getCmdLineArgs ( ) . getMode ( ) ) { case convert : validateConvertMode ( inputParameters ) ; break ; case metadata : validateMetadataMode ( inputParameters ) ; break ; case audiomap : validateAudiomapMode ( inputParameters ) ; break ; default : } }
27606	public Object [ ] fetchConverted ( ) throws KeyGenException { if ( _NULL != currentConveretedRawRow ) { return currentConveretedRawRow ; } if ( hasNext ( ) ) { Object [ ] rawRow = batch . getRawRow ( counter ) ; currentConveretedRawRow = convertRow ( rawRow ) ; ; return currentConveretedRawRow ; } else { return _NULL ; } }
28335	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
28891	public Transaction createTask ( Task task ) { if ( ! mIsSuccess ) { return this ; } long id = mDatabase . insert ( TasksTable . TABLE_NAME , _NULL , task . toContentValues ( ) ) ; if ( id != - _NUM ) { task . id = id ; } else { mIsSuccess = _BOOL ; mDatabase . endTransaction ( ) ; } return this ; }
30166	private < T > T send ( String method , @ Nullable Object entity ) { try { if ( entity == _NULL ) { builder ( ) . method ( method ) ; } else { builder ( ) . method ( method , shadingSafeEntity ( entity ) ) ; } return _NULL ; } catch ( UniformInterfaceException e ) { throw asEmoClientException ( e ) ; } }
30199	public MethodDecl lookupClose ( ResourceDeclaration resource ) { ASTNode $ State state = state ( ) ; try { TypeDecl resourceType = resource . getTypeAccess ( ) . type ( ) ; for ( MethodDecl method : ( Collection < MethodDecl > ) resourceType . memberMethods ( _CHAR close _CHAR ) ) { if ( method . getNumParameter ( ) == _NUM ) { return method ; } } return _NULL ; } finally { } }
30911	public long generateNewPingId ( ) { PreferenceStore prefs = getPreferenceStore ( ) ; Random rnd = new Random ( ) ; long id = rnd . nextLong ( ) ; synchronized ( DdmsPreferenceStore . class ) { prefs . setValue ( PING_ID , id ) ; try { prefs . save ( ) ; } catch ( IOException e ) { } } return id ; }
31173	private void closeStreams ( Closeable ... streams ) { if ( _NULL != streams ) { for ( Closeable stream : streams ) { if ( _NULL != stream ) { try { stream . close ( ) ; } catch ( IOException e ) { LOG . error ( _CHAR Error while closing stream '' + stream ) ; } } } } }
33423	protected void clearReferences ( ) { clearReferencesJdbc ( ) ; clearReferencesThreads ( ) ; checkThreadLocalsForLeaks ( ) ; if ( clearReferencesRmiTargets ) { clearReferencesRmiTargets ( ) ; } IntrospectionUtils . clear ( ) ; if ( clearReferencesLogFactoryRelease ) { org . apache . juli . logging . LogFactory . release ( this ) ; } java . beans . Introspector . flushCaches ( ) ; TomcatURLStreamHandlerFactory . release ( this ) ; }
33516	public void makeImmutable ( ) { if ( isMutable ) { if ( subjectConfirmationData != _NULL ) { subjectConfirmationData . makeImmutable ( ) ; } if ( baseId != _NULL ) { baseId . makeImmutable ( ) ; } if ( nameId != _NULL ) { nameId . makeImmutable ( ) ; } isMutable = _BOOL ; } }
33557	public Object clone ( ) { LDAPUsers theClone = _NULL ; try { theClone = ( LDAPUsers ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( selectedRFCUserDNs != _NULL ) { theClone . selectedRFCUserDNs = new HashSet ( ) ; theClone . selectedRFCUserDNs . addAll ( selectedRFCUserDNs ) ; } return theClone ; }
33595	public void appendRemainingName ( Name name ) { if ( name != _NULL ) { if ( this . remainingName != _NULL ) { try { this . remainingName . addAll ( name ) ; } catch ( InvalidNameException e ) { } } else { this . remainingName = ( Name ) ( name . clone ( ) ) ; } } }
33925	protected void finalize ( ) { synchronized ( statsMap ) { statsMap . remove ( statsName ) ; } synchronized ( this ) { if ( statsFile == _NULL ) { return ; } statsState = Stats . OFF ; statsFile . flush ( ) ; statsFile . close ( ) ; statsFile = _NULL ; } }
34178	public String encode ( ) { String encoded_string ; if ( displayName != _NULL ) { encoded_string = displayName + Separators . LESS_THAN ; } else { encoded_string = _CHAR _CHAR ; } encoded_string += email . encode ( ) ; if ( displayName != _NULL ) { encoded_string += Separators . GREATER_THAN ; } return encoded_string ; }
34469	private boolean tryToNotifyReset ( ) { if ( ( mStatus == PTR_STATUS_COMPLETE || mStatus == PTR_STATUS_PREPARE ) && mPtrIndicator . isInStartPosition ( ) ) { if ( mPtrUIHandlerHolder . hasHandler ( ) ) { mPtrUIHandlerHolder . onUIReset ( this ) ; if ( DEBUG ) { PtrCLog . i ( LOG_TAG , _CHAR PtrUIHandler : onUIReset _CHAR ) ; } } mStatus = PTR_STATUS_INIT ; clearFlag ( ) ; return _BOOL ; } return _BOOL ; }
34789	public void endDocument ( ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # endDocument _CHAR ) ; m_insideParse = _BOOL ; if ( m_contentHandler != _NULL ) { m_contentHandler . endDocument ( ) ; } if ( m_incremental ) { m_transformer . waitTransformThread ( ) ; } else { m_transformer . setSourceTreeDocForThread ( m_dtm . getDocument ( ) ) ; m_transformer . run ( ) ; } }
36155	public static Object call ( Object object ) { if ( object instanceof Closure < ? > ) { try { return ( ( Closure < ? > ) object ) . call ( ) ; } catch ( Exception e ) { return _NULL ; } } if ( object instanceof CharSequence && object . toString ( ) . isEmpty ( ) ) { return _NULL ; } return object ; }
36653	private static synchronized void stopReplayThreads ( ) { for ( ReplayThread replayThread : replayThreads ) { replayThread . shutdown ( ) ; } for ( ReplayThread replayThread : replayThreads ) { try { replayThread . join ( ) ; } catch ( InterruptedException e ) { Thread . currentThread ( ) . interrupt ( ) ; } } replayThreads . clear ( ) ; }
37369	public static int size ( final Iterable < ? > iterable ) { if ( iterable instanceof Collection ) { return ( ( Collection < ? > ) iterable ) . size ( ) ; } else { final Iterator < ? > i = iterable . iterator ( ) ; int sz = _NUM ; while ( i . hasNext ( ) ) { i . next ( ) ; sz ++ ; } return sz ; } }
37820	public ElemTemplateElement appendChild ( ElemTemplateElement elem ) { if ( _NULL == elem ) { error ( XSLTErrorResources . ER_NULL_CHILD , _NULL ) ; } if ( _NULL == m_firstChild ) { m_firstChild = elem ; } else { ElemTemplateElement last = getLastChildElem ( ) ; last . m_nextSibling = elem ; } elem . setParentElem ( this ) ; return elem ; }
37828	public void parse ( InputSource input ) throws IOException , SAXException { if ( parsing ) { throw new SAXException ( _CHAR Parser is already in use _CHAR ) ; } setupParser ( ) ; parsing = _BOOL ; try { parser . parse ( input ) ; } finally { parsing = _BOOL ; } parsing = _BOOL ; }
38142	public void throwException ( ) throws BufferUnderflowException , BufferOverflowException , UnmappableCharacterException , MalformedInputException , CharacterCodingException { switch ( this . type ) { case TYPE_UNDERFLOW : throw new BufferUnderflowException ( ) ; case TYPE_OVERFLOW : throw new BufferOverflowException ( ) ; case TYPE_UNMAPPABLE_CHAR : throw new UnmappableCharacterException ( this . length ) ; case TYPE_MALFORMED_INPUT : throw new MalformedInputException ( this . length ) ; default : throw new CharacterCodingException ( ) ; } }
38149	public String paramString ( ) { String typeStr ; switch ( id ) { case FOCUS_GAINED : typeStr = _CHAR FOCUS_GAINED _CHAR ; break ; case FOCUS_LOST : typeStr = _CHAR FOCUS_LOST _CHAR ; break ; default : typeStr = _CHAR unknown type _CHAR ; } return typeStr + ( temporary ? _CHAR , temporary _CHAR : _CHAR , permanent _CHAR ) + _CHAR , opposite = _CHAR + getOppositeComponent ( ) ; }
38223	public boolean equals ( Object rhs ) { if ( rhs != _NULL ) { try { TransformAttribute that = ( TransformAttribute ) rhs ; if ( transform == _NULL ) { return that . transform == _NULL ; } return transform . equals ( that . transform ) ; } catch ( ClassCastException e ) { } } return _BOOL ; }
38883	public Object clone ( ) { WebServicesClients theClone = _NULL ; try { theClone = ( WebServicesClients ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( selectedWebServicesClients != _NULL ) { theClone . selectedWebServicesClients = new HashSet ( ) ; theClone . selectedWebServicesClients . addAll ( selectedWebServicesClients ) ; } return theClone ; }
39336	public String createNameIdentifier ( ) { if ( FSUtils . debug . messageEnabled ( ) ) { FSUtils . debug . message ( _CHAR FSNameIdentifierGeneratorHelper . '' + _CHAR createNameIdentifier called _CHAR ) ; } if ( generator != _NULL ) { return generator . createNameIdentifier ( ) ; } else { if ( FSUtils . debug . messageEnabled ( ) ) { FSUtils . debug . message ( _CHAR FSNameIdentifierGeneratorHelper . create _CHAR + _CHAR NameIdentifier returning _NULL as generator is _NULL _CHAR ) ; } return _NULL ; } }
40283	public int nearest_target_layer ( ) { if ( nearest_target_item == _NULL ) return layer_active_no ; int first_layer = nearest_target_item . first_layer ( ) ; int last_layer = nearest_target_item . last_layer ( ) ; if ( layer_active_no < first_layer ) { return first_layer ; } else if ( layer_active_no > last_layer ) { return last_layer ; } else { return layer_active_no ; } }
40879	public boolean removeElement ( Object obj ) { synchronized ( actions ) { if ( allowToChange ) { boolean result = actions . remove ( obj ) ; if ( actions . isEmpty ( ) ) { if ( headTask != _NULL ) { cancel ( ) ; } } return result ; } } return _BOOL ; }
41156	public PlaDelTriTriangle other_neighbour ( PlaDelTriTriangle p_triangle ) { PlaDelTriTriangle result ; if ( p_triangle == left_triangle ) { result = right_triangle ; } else if ( p_triangle == right_triangle ) { result = left_triangle ; } else { System . out . println ( _CHAR Edge . other_neighbour : inconsistant neigbour triangle _CHAR ) ; result = _NULL ; } return result ; }
41249	private void assertBounded ( SortedSet < String > deserialized , boolean bounded ) { if ( bounded ) { try { deserialized . add ( _CHAR e _CHAR ) ; fail ( ) ; } catch ( IllegalArgumentException expected ) { } } else { assertTrue ( deserialized . add ( _CHAR e _CHAR ) ) ; assertTrue ( deserialized . remove ( _CHAR e _CHAR ) ) ; } }
41289	private int injectCallbacks ( final Callback [ ] realCallbacks , final int state ) throws AuthLoginException { if ( authenticationContext . hasMoreRequirements ( ) ) { if ( realCallbacks != _NULL ) { authenticationContext . submitRequirements ( realCallbacks ) ; } if ( authenticationContext . hasMoreRequirements ( ) ) { return injectAndReturn ( state ) ; } else { return finishLoginModule ( state ) ; } } return processError ( bundle . getString ( _CHAR invalidLoginState _CHAR ) , _CHAR SAML2 : : injectCallbacks ( ) : Authentication Module - invalid login state _CHAR ) ; }
41316	public void close ( ) throws IOException { guard . close ( ) ; RandomAccessFile localRaf = raf ; if ( localRaf != _NULL ) { synchronized ( localRaf ) { raf = _NULL ; localRaf . close ( ) ; } if ( fileToDeleteOnClose != _NULL ) { fileToDeleteOnClose . delete ( ) ; fileToDeleteOnClose = _NULL ; } } }
41663	@ Deprecated public boolean requestDefaultFocus ( ) { Container nearestRoot = ( isFocusCycleRoot ( ) ) ? this : getFocusCycleRootAncestor ( ) ; if ( nearestRoot == _NULL ) { return _BOOL ; } Component comp = nearestRoot . getFocusTraversalPolicy ( ) . getDefaultComponent ( nearestRoot ) ; if ( comp != _NULL ) { comp . requestFocus ( ) ; return _BOOL ; } else { return _BOOL ; } }
42026	private boolean isDeployAllowed ( String user ) { if ( deny != _NULL && deny . matcher ( user ) . matches ( ) ) { return _BOOL ; } if ( allow != _NULL ) { if ( allow . matcher ( user ) . matches ( ) ) { return _BOOL ; } else { return _BOOL ; } } return _BOOL ; }
42113	@ Override public int compare ( File o1 , File o2 ) { if ( o1 == o2 ) { return _NUM ; } if ( o1 . lastModified ( ) > o2 . lastModified ( ) ) { return - _NUM ; } else if ( o1 . lastModified ( ) < o2 . lastModified ( ) ) { return _NUM ; } else { return _NUM ; } }
42270	public void addShutdownListener ( ShutdownListener listener , ShutdownPriority priority ) throws IllegalMonitorStateException { if ( acquireValidLock ( ) ) { try { removeShutdownListener ( listener ) ; listeners [ priority . getIntValue ( ) - _NUM ] . add ( listener ) ; } finally { releaseLockAndNotify ( ) ; } } else { throw new IllegalMonitorStateException ( _CHAR Failed to acquire lock registering the ShutdownListener _CHAR ) ; } }
42570	public void cancel ( ) { if ( acquireValidLock ( ) ) { try { synchronized ( this ) { if ( parent != _NULL ) { parent . trigger ( time ) ; } } } finally { releaseLockAndNotify ( ) ; } } }
42916	public void write ( char buf [ ] , int off , int len ) { try { synchronized ( lock ) { ensureOpen ( ) ; out . write ( buf , off , len ) ; } } catch ( InterruptedIOException x ) { Thread . currentThread ( ) . interrupt ( ) ; } catch ( IOException x ) { trouble = _BOOL ; } }
43162	public boolean isAckSent ( long cseqNo ) { if ( this . getLastTransaction ( ) == _NULL ) return _BOOL ; if ( this . getLastTransaction ( ) instanceof ClientTransaction ) { if ( this . getLastAckSent ( ) == _NULL ) { return _BOOL ; } else { return cseqNo <= ( ( SIPRequest ) this . getLastAckSent ( ) ) . getCSeq ( ) . getSeqNumber ( ) ; } } else { return _BOOL ; } }
43324	public static < T > boolean exists ( Collection < T > collection , Predicate < T > predicate ) { if ( CollectionUtils . isEmpty ( collection ) ) { return _BOOL ; } if ( predicate == _NULL ) { return _BOOL ; } for ( T element : collection ) { if ( predicate . evaluate ( element ) ) { return _BOOL ; } } return _BOOL ; }
43719	public void parse ( InputSource input ) throws IOException , SAXException { if ( parsing ) { throw new SAXException ( _CHAR Parser is already in use _CHAR ) ; } setupParser ( ) ; parsing = _BOOL ; try { parser . parse ( input ) ; } finally { parsing = _BOOL ; } parsing = _BOOL ; }
43733	private void checkShutdownAccess ( ) { SecurityManager security = System . getSecurityManager ( ) ; if ( security != _NULL ) { security . checkPermission ( shutdownPerm ) ; final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { for ( Worker w : workers ) security . checkAccess ( w . thread ) ; } finally { mainLock . unlock ( ) ; } } }
44006	private Level errorLoggerSeverityToJulLevel ( Severity severity ) { switch ( severity ) { case DEBUG : case INFORMATION : case NOTICE : return Level . INFO ; case WARNING : return Level . WARNING ; case ERROR : return Level . SEVERE ; default : return Level . OFF ; } }
44199	public void validate ( ) throws SSOException { try { if ( ldapConnect ) { return ; } SessionState state = session . getState ( _BOOL ) ; if ( state != SessionState . VALID ) { throw new SSOException ( SSOProviderBundle . rbName , _CHAR invalidstate _CHAR , _NULL ) ; } } catch ( Exception e ) { throw new SSOException ( e ) ; } }
44207	@ Override protected void handleOutput ( String output ) { if ( redirectOutput ) { if ( redirectOutPrintStream == _NULL ) { openRedirector ( ) ; } redirectOutPrintStream . println ( output ) ; if ( alwaysLog ) { log ( output , Project . MSG_INFO ) ; } } else { log ( output , Project . MSG_INFO ) ; } }
44784	private synchronized void closeOutputStreamQuietly ( ) { if ( ! mClosed ) { try { mOutputStream . close ( ) ; reportDecodedSizeIfApplicable ( ) ; } catch ( IOException e ) { CLog . writeToConsole ( mNetworkPeerManager , Console . MessageLevel . ERROR , Console . MessageSource . NETWORK , _CHAR Could not close the output stream _CHAR + e ) ; } finally { mClosed = _BOOL ; } } }
44898	private void nextStream ( ) throws IOException { if ( in != _NULL ) { in . close ( ) ; } if ( e . hasMoreElements ( ) ) { in = e . nextElement ( ) ; if ( in == _NULL ) { throw new NullPointerException ( _CHAR element is _NULL _CHAR ) ; } } else { in = _NULL ; } }
45104	private String resolveDebugFileName ( ) { if ( mergeAllMode ) { return DebugConstants . CONFIG_DEBUG_MERGEALL_FILE ; } else { String nm = INSTANCE_NAMES . get ( debugName ) ; if ( nm != _NULL ) { return nm ; } else { return debugName ; } } }
45120	public static boolean isAscii ( String s ) { if ( s == _NULL ) { return _BOOL ; } try { if ( ! s . equals ( new String ( s . getBytes ( ASCII_CHARSET ) , ASCII_CHARSET ) ) ) { return _BOOL ; } } catch ( java . io . UnsupportedEncodingException uee ) { return _BOOL ; } return _BOOL ; }
45554	public boolean read_scope ( DsnReadScopeParameters p_par ) { try { DsnComponentPlacement component_placement = read_scope ( p_par . scanner ) ; if ( component_placement == _NULL ) { return _BOOL ; } p_par . placement_list . add ( component_placement ) ; } catch ( java . io . IOException e ) { System . out . println ( _CHAR Component . read_scope : IO error scanning file _CHAR ) ; return _BOOL ; } return _BOOL ; }
45716	private void deregisterPlugin ( DN configEntryDN ) { pluginLock . lock ( ) ; DirectoryServerPlugin < ? extends PluginCfg > plugin ; try { plugin = registeredPlugins . remove ( configEntryDN ) ; if ( plugin != _NULL ) { deregisterPlugin0 ( plugin ) ; plugin . finalizePlugin ( ) ; } } finally { pluginLock . unlock ( ) ; } }
45868	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; trimToFileCount ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
46105	public Object validateValue ( ) throws Throwable { if ( tag == ERROR ) { rethrowError ( ) ; } if ( value == NO_VALUE ) { return _NULL ; } if ( elementType == value . getClass ( ) || elementType . isInstance ( value ) ) { return copyValue ( ) ; } else { throw new AnnotationTypeMismatchException ( definingMethod , value . getClass ( ) . getName ( ) ) ; } }
46306	private void checkShutdownAccess ( ) { SecurityManager security = System . getSecurityManager ( ) ; if ( security != _NULL ) { security . checkPermission ( shutdownPerm ) ; final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { for ( Worker w : workers ) security . checkAccess ( w . thread ) ; } finally { mainLock . unlock ( ) ; } } }
46462	public void monitor ( FileChangeListener listener ) { if ( lock . tryLock ( ) ) { try { FileChangeSet fileChangeSet = createFileChangeSet ( ) ; if ( fileChangeSet . isEmpty ( ) ) { return ; } listener . onChanges ( fileChangeSet ) ; } finally { lock . unlock ( ) ; } } }
46548	public Object clone ( ) { DSAMERole theClone = _NULL ; try { theClone = ( DSAMERole ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( subjectRoles != _NULL ) { theClone . subjectRoles = new HashSet ( ) ; theClone . subjectRoles . addAll ( subjectRoles ) ; } return theClone ; }
47273	public void twoPath ( Object obj1 , Object obj2 , int x ) { Object localObj ; synchronized ( obj1 ) { synchronized ( obj2 ) { if ( x == _NUM ) { localObj = obj2 ; } else { localObj = obj1 ; } } } doNothing ( localObj ) ; }
47807	private String parseToken ( final char [ ] terminators ) { char ch ; i1 = pos ; i2 = pos ; while ( hasChar ( ) ) { ch = chars [ pos ] ; if ( isOneOf ( ch , terminators ) ) { break ; } i2 ++ ; pos ++ ; } return getToken ( _BOOL ) ; }
48146	public void makeImmutable ( ) { if ( mutable ) { if ( attrValues != _NULL ) { attrValues = Collections . unmodifiableList ( attrValues ) ; } if ( valueStrings != _NULL ) { valueStrings = Collections . unmodifiableList ( valueStrings ) ; } if ( anyMap != _NULL ) { anyMap = Collections . unmodifiableMap ( anyMap ) ; } mutable = _BOOL ; } }
48467	@ Override public int read ( ) throws IOException { if ( closed ) { throw new FileItemStream . ItemSkippedException ( ) ; } if ( available ( ) == _NUM && makeAvailable ( ) == _NUM ) { return - _NUM ; } ++ total ; int b = buffer [ head ++ ] ; if ( b >= _NUM ) { return b ; } return b + BYTE_POSITIVE_OFFSET ; }
48589	public void makeImmutable ( ) { if ( isMutable ) { if ( ( issuer != _NULL ) && ( issuer . isMutable ( ) ) ) { issuer . makeImmutable ( ) ; } if ( ( extensions != _NULL ) && ( extensions . isMutable ( ) ) ) { extensions . makeImmutable ( ) ; } if ( ( status != _NULL ) && ( status . isMutable ( ) ) ) { status . makeImmutable ( ) ; } isMutable = _BOOL ; } }
48753	public static boolean scheduleTask ( Runnable task ) { boolean success = _BOOL ; if ( ! initialized ) { initialize ( _BOOL ) ; } try { thrdPool . run ( task ) ; } catch ( ThreadPoolException e ) { debug . error ( _CHAR SMSThreadPool : unable to schedule task _CHAR + e ) ; success = _BOOL ; } return success ; }
48918	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; refreshTextStatus ( view , index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
48999	protected void finalize ( ) { synchronized ( debugMap ) { debugMap . remove ( debugName ) ; } synchronized ( this ) { if ( debugFile == _NULL ) { return ; } debugLevel = Debug . OFF ; debugFile . flush ( ) ; debugFile . close ( ) ; debugFile = _NULL ; } }
49435	@ Override public void execute ( ) throws BuildException { super . execute ( ) ; if ( type != _NULL ) { try { execute ( _CHAR / resources ? type = _CHAR + URLEncoder . encode ( type , getCharset ( ) ) ) ; } catch ( UnsupportedEncodingException e ) { throw new BuildException ( _CHAR Invalid _CHAR attribute : _CHAR + getCharset ( ) ) ; } } else { execute ( _CHAR / resources _CHAR ) ; } }
49840	@ Override public void removeErrorPage ( ErrorPage errorPage ) { String exceptionType = errorPage . getExceptionType ( ) ; if ( exceptionType != _NULL ) { synchronized ( exceptionPages ) { exceptionPages . remove ( exceptionType ) ; } } else { synchronized ( statusPages ) { statusPages . remove ( Integer . valueOf ( errorPage . getErrorCode ( ) ) ) ; } } fireContainerEvent ( _CHAR removeErrorPage _CHAR , errorPage ) ; }
50306	@ Override public void run ( ) { while ( ! isShuttingDown ( ) ) { try { sleep ( getInterval ( ) ) ; } catch ( InterruptedException e ) { continue ; } catch ( Exception e ) { logger . traceException ( e ) ; } processLog ( ) ; } }
50542	public synchronized void initializeGeneralTopics ( ) { yaml = new HelpYamlReader ( server ) ; for ( HelpTopic topic : yaml . getGeneralTopics ( ) ) { addTopic ( topic ) ; } for ( HelpTopic topic : yaml . getIndexTopics ( ) ) { if ( topic . getName ( ) . equals ( _CHAR Default _CHAR ) ) { defaultTopic = topic ; } else { addTopic ( topic ) ; } } }
50661	public void windowClosed ( WindowEvent e ) { synchronized ( getTreeLock ( ) ) { Window [ ] windows = getOwnedWindows ( ) ; for ( Window window : windows ) { if ( window != _NULL ) { if ( window . isDisplayable ( ) ) { return ; } window . removeWindowListener ( this ) ; } } dispose ( ) ; } }
50837	protected void closeRedirector ( ) { try { if ( redirectOutput && redirectOutPrintStream != _NULL ) { redirector . complete ( ) ; } } catch ( IOException ioe ) { log ( _CHAR Error closing redirector : _CHAR + ioe . getMessage ( ) , Project . MSG_ERR ) ; } redirectOutStream = _NULL ; redirectOutPrintStream = _NULL ; redirectErrStream = _NULL ; redirectErrPrintStream = _NULL ; }
51159	@ Override protected void handleErrorOutput ( String output ) { if ( redirectOutput ) { if ( redirectErrPrintStream == _NULL ) { openRedirector ( ) ; } redirectErrPrintStream . println ( output ) ; if ( alwaysLog ) { log ( output , Project . MSG_ERR ) ; } } else { log ( output , Project . MSG_ERR ) ; } }
51219	@ Override public void endAccess ( ) { isNew = _BOOL ; if ( LAST_ACCESS_AT_START ) { this . lastAccessedTime = this . thisAccessedTime ; this . thisAccessedTime = System . currentTimeMillis ( ) ; } else { this . thisAccessedTime = System . currentTimeMillis ( ) ; this . lastAccessedTime = this . thisAccessedTime ; } if ( ACTIVITY_CHECK ) { accessCount . decrementAndGet ( ) ; } }
51438	public Object clone ( ) { Organization theClone = _NULL ; try { theClone = ( Organization ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( selectedRFCOrgDNs != _NULL ) { theClone . selectedRFCOrgDNs = new HashSet ( ) ; theClone . selectedRFCOrgDNs . addAll ( selectedRFCOrgDNs ) ; } return theClone ; }
51823	private static void loadFilesPath ( Context context ) { if ( context != _NULL ) { try { File file = context . getFilesDir ( ) ; if ( file != _NULL ) { CrashConstants . FILES_PATH = file . getAbsolutePath ( ) ; } } catch ( Exception e ) { L . e ( _CHAR Exception thrown when accessing the files dir : _CHAR ) ; e . printStackTrace ( ) ; } } }
51894	public void shutdown ( ) { if ( shutdown ) { return ; } shutdown = _BOOL ; if ( session != _NULL ) { session . close ( ) ; } try { join ( ) ; } catch ( InterruptedException ignored ) { } }
52128	private String toUIString ( final SearchScope scope ) { switch ( scope . asEnum ( ) ) { case BASE_OBJECT : return INFO_CTRL_PANEL_VLV_INDEX_BASE_OBJECT_LABEL . get ( ) . toString ( ) ; case SINGLE_LEVEL : return INFO_CTRL_PANEL_VLV_INDEX_SINGLE_LEVEL_LABEL . get ( ) . toString ( ) ; case SUBORDINATES : return INFO_CTRL_PANEL_VLV_INDEX_SUBORDINATE_SUBTREE_LABEL . get ( ) . toString ( ) ; case WHOLE_SUBTREE : return INFO_CTRL_PANEL_VLV_INDEX_WHOLE_SUBTREE_LABEL . get ( ) . toString ( ) ; default : throw new IllegalArgumentException ( _CHAR Unknown scope : _CHAR + scope ) ; } }
52150	public void write ( String s , int off , int len ) { try { synchronized ( lock ) { ensureOpen ( ) ; out . write ( s , off , len ) ; } } catch ( InterruptedIOException x ) { Thread . currentThread ( ) . interrupt ( ) ; } catch ( IOException x ) { trouble = _BOOL ; } }
52465	public void makeImmutable ( ) { if ( mutable ) { if ( statusCode != _NULL ) { statusCode . makeImmutable ( ) ; } if ( statusMessage != _NULL ) { statusMessage . makeImmutable ( ) ; } if ( statusDetail != _NULL ) { statusDetail . makeImmutable ( ) ; } mutable = _BOOL ; } }
52520	private void doPostDelete ( PluginOperation deleteOperation , Entry entry ) { if ( hasGroupMembershipUpdateControl ( deleteOperation ) ) { return ; } lock . writeLock ( ) . lock ( ) ; try { if ( groupInstances . removeSubtree ( entry . getName ( ) , _NULL ) ) { refreshToken ++ ; } } finally { lock . writeLock ( ) . unlock ( ) ; } }
52831	@ Override public int hashCode ( ) { rwlock . readLock ( ) . lock ( ) ; int h = _NUM ; try { Iterator i = entrySet ( ) . iterator ( ) ; while ( i . hasNext ( ) ) { h += i . next ( ) . hashCode ( ) ; } } finally { rwlock . readLock ( ) . unlock ( ) ; } return h ; }
53655	public void flushPending ( ) throws SAXException { if ( m_needToCallStartDocument ) { startDocumentInternal ( ) ; m_needToCallStartDocument = _BOOL ; } if ( m_elemContext . m_startTagOpen ) { closeStartTag ( ) ; m_elemContext . m_startTagOpen = _BOOL ; } if ( m_cdataTagOpen ) { closeCDATA ( ) ; m_cdataTagOpen = _BOOL ; } }
53787	public boolean remove ( URI uri , HttpCookie ck ) { if ( ck == _NULL ) { throw new NullPointerException ( _CHAR cookie is _NULL _CHAR ) ; } boolean modified = _BOOL ; lock . lock ( ) ; try { modified = cookieJar . remove ( ck ) ; } finally { lock . unlock ( ) ; } return modified ; }
53906	private void checkState ( ) throws IllegalStateException { if ( consonants == _NULL ) { throw new IllegalStateException ( _CHAR The list of consonants is _NULL . _CHAR ) ; } if ( vowels == _NULL ) { throw new IllegalStateException ( _CHAR The list of vowels is _NULL . _CHAR ) ; } if ( consonants . size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR The list of consonants is empty . '' ) ; } if ( vowels . size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR The list of vowels is empty . '' ) ; } }
54019	public void put ( KeyStroke keyStroke , Object actionMapKey ) { if ( keyStroke == _NULL ) { return ; } if ( actionMapKey == _NULL ) { remove ( keyStroke ) ; } else { if ( arrayTable == _NULL ) { arrayTable = new ArrayTable ( ) ; } arrayTable . put ( keyStroke , actionMapKey ) ; } }
54307	public static Properties readPropertiesStream ( InputStream inputStream ) { try { final Properties prop = new Properties ( ) ; prop . load ( inputStream ) ; return prop ; } catch ( IOException e ) { JKExceptionUtil . handle ( e ) ; return _NULL ; } finally { close ( inputStream ) ; } }
54813	public void validate ( ) throws AMConsoleException { if ( isSelected ( ) ) { if ( isPersonalQuestion ( ) ) { if ( ( question . length ( ) == _NUM ) || ( answer . length ( ) == _NUM ) ) { throw new AMConsoleException ( _CHAR user . password . reset . missing . personal . question . answer . message _CHAR ) ; } } else { if ( answer . length ( ) == _NUM ) { throw new AMConsoleException ( _CHAR user . password . reset . missing . answer . message _CHAR ) ; } } } }
55942	@ Override public void processServerShutdown ( LocalizableMessage reason ) { stopRequested = _BOOL ; while ( rotaterThread != _NULL && rotaterThread . isAlive ( ) ) { try { rotaterThread . interrupt ( ) ; rotaterThread . join ( ) ; } catch ( InterruptedException ex ) { } } DirectoryServer . deregisterShutdownListener ( this ) ; removeAllRotationPolicies ( ) ; removeAllRetentionPolicies ( ) ; }
