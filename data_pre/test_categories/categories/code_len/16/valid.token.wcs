990	private void captureImageWithPermission ( ) if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M ) ifnot ( rc == PackageManager . PERMISSION_GRANTED ) then requestCameraPermission ( ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M ) if ( rc == PackageManager . PERMISSION_GRANTED ) then captureImage ( ) ; if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M ) ifnot ( rc == PackageManager . PERMISSION_GRANTED ) then Log . w ( TAG , _STR ) ;
1475	private void readColumnSortInfo ( ) init ( ) ; LOGGER . error ( ie , _STR ) ; if ( _NULL != dictionarySortIndexThriftReader ) then dictionarySortIndexThriftReader . close ( ) ;
1561	public void onEviction ( ResourceKey < K > resourceKey ) for ( ; ; ) and if ( resourceKey . goFromIdleToRetired ( ) ) then return ; for ( ; ; ) and if ( resourceKey . goFromIdleToRetired ( ) ) then cache . remove ( resourceKey ) ;
1740	public static double ceil ( double x ) if ( y == _NUM ) then return x * y ; if ( Double . isNaN ( x ) ) then return x ; y += _NUM . _NUM ; if ( y == x ) then return y ;
2643	private void populateResultsBox ( IVScanResult ivScanResult ) populateAdvancedInformation ( ivScanResult ) ; ivScanResult . sortCombinations ( ) ; ifnot ( ivScanResult . getCount ( ) == _NUM ) then populateMultipleIVMatch ( ivScanResult ) ; if ( ivScanResult . getCount ( ) == _NUM ) then populateSingleIVMatch ( ivScanResult ) ; hideSeeAllLinkIfFlagSet ( ivScanResult ) ; adjustSeekbarsThumbs ( ) ; populatePrevScanNarrowing ( ) ; populateResultsHeader ( ivScanResult ) ; setResultScreenPercentageRange ( ivScanResult ) ;
2939	public static Map < String , String > parseKeyAndValueToMap ( String source ) return parseKeyAndValueToMap ( jsonObject ) ; if ( StringUtil . isEmpty ( source ) ) then return _NULL ; if ( isPrintException ) then e . printStackTrace ( ) ;
4594	private void sortIfNeeded ( List listToSort ) if ( sortLists ) if ( listToSort . stream ( ) . anyMatch ( _NULL ) ) then Collections . sort ( listToSort ) ; if ( sortLists ) if ( listToSort . stream ( ) . anyMatch ( _NULL ) ) then Collections . sort ( listToSort , variableTypedComparator ) ;
4734	private void lockIds ( int ... ids ) lock . lock ( ) ; lock . unlock ( ) ; for ( int id : ids ) then idList . set ( id ) ;
4743	public void despawnObjects ( boolean remove ) for ( HouseObject < ? > obj : getSpawnedObjects ( ) ) and if ( remove ) then obj . removeFromHouse ( ) ; if ( remove ) then save ( ) ; for ( HouseObject < ? > obj : getSpawnedObjects ( ) ) and if ( obj . isInWorld ( ) ) then obj . getController ( ) . onDelete ( ) ; for ( HouseObject < ? > obj : getSpawnedObjects ( ) ) and if ( obj . isInWorld ( ) ) then obj . clearKnownlist ( ) ; if ( remove ) then setPersistentState ( PersistentState . UPDATE_REQUIRED ) ;
5202	private static Object newInstanceNoServiceLoader ( Class < ? > providerClass ) return creationMethod . invoke ( _NULL , ( Object [ ] ) _NULL ) ; if ( System . getSecurityManager ( ) == _NULL ) then return _NULL ;
5327	public static String pennPOSToWordnetPOS ( String s ) return _NULL ; if ( s . matches ( _STR ) ) then return _STR ;
6031	public boolean isRasterSymbol ( ) if ( style != _NULL ) for ( FeatureTypeStyle fts : style . featureTypeStyles ( ) ) and for ( Rule rule : fts . rules ( ) ) and for ( Symbolizer symbolizer : rule . symbolizers ( ) ) and if ( symbolizer instanceof RasterSymbolizer ) then return _BOOL ;
6401	public void resetTemplates ( int instanceId ) for ( SpawnTemplate template : states . keySet ( ) ) then states . put ( template , _BOOL ) ; if ( states == _NULL ) then return ; super . writeUnlock ( ) ; super . writeLock ( ) ;
9537	public void save ( ) if ( myChanged ) then save ( out , _NULL ) ; if ( myChanged ) then out . close ( ) ;
9977	public static void spawnAll ( ) ConquestSpawnManager . spawnAll ( ) ; for ( WorldMapTemplate worldMapTemplate : DataManager . WORLD_MAPS_DATA ) then spawnBasedOnTemplate ( worldMapTemplate ) ; if ( ! DeveloperConfig . SPAWN_ENABLE ) then return ; DataManager . SPAWNS_DATA2 . clearTemplates ( ) ; printWorldSpawnStats ( ) ; if ( ! DeveloperConfig . SPAWN_ENABLE ) then log . info ( _STR ) ;
10031	public String process ( Item syl ) ifnot ( ss == _NULL )ifnot ( ss . getNext ( ) != _NULL )ifnot ( ss . getParent ( ) == _NULL ) then return wordBreak ( ss . getParent ( ) ) ; if ( ss == _NULL ) then return _STR ;
10444	private void stopRequestingSensorEventData ( ) if ( ! isRequestingSensorEventData ( ) ) then return ; ex . printStackTrace ( ) ; for ( Map . Entry < String , SensorDataRequest > sensorDataRequestEntry : sensorDataRequests . entrySet ( ) ) then sensorDataRequestEntry . getValue ( ) . setEndTimestamp ( System . currentTimeMillis ( ) ) ; Log . v ( TAG , _STR ) ; sendSensorEventDataRequests ( ) ;
11127	public synchronized void stop ( long stopInterval ) thread . join ( stopInterval ) ; for ( FileAlterationObserver observer : observers ) then observer . destroy ( ) ; Thread . currentThread ( ) . interrupt ( ) ;
11673	public void selectFirstSymbol ( ) if ( SelectedSymbol . getInstance ( ) . getSld ( ) != _NULL ) then symbolTree . setSelectionRow ( _NUM ) ; ifnot ( SelectedSymbol . getInstance ( ) . getSld ( ) != _NULL ) and if ( displayPanel != _NULL ) then displayPanel . show ( _NULL , _NULL ) ; ifnot ( SelectedSymbol . getInstance ( ) . getSld ( ) != _NULL ) and if ( renderList != _NULL ) for ( RenderSymbolInterface render : renderList ) then render . renderSymbol ( ) ;
12025	private boolean _removeActivity ( Activity a ) if ( r ) then a . setScheduled ( _BOOL ) ; return r ;
12863	public void writeString ( String value ) ifnot ( value == _NULL ) then this . dataOut . write ( _STRING ) ; raise ( ioe ) ; ifnot ( value == _NULL ) then this . dataOut . writeUTF ( value ) ; initializeWriting ( ) ; if ( value == _NULL ) then this . dataOut . write ( _NULL ) ;
13721	public void activate ( ) if ( ! inSelection ) then inSelection = _BOOL ; getViewer ( ) . getSearchManager ( ) . getFindDialogAsToolBar ( ) . clearMessage ( ) ; if ( ! inSelection ) then chartSelection . setSelectedAttribute ( getSelectedLabels ( ) , _BOOL ) ; getViewer ( ) . getSearchManager ( ) . setSearcher ( getSearcher ( ) ) ; if ( ! inSelection ) then this . repaint ( ) ; if ( ! inSelection ) then chartSelection . clearSelectionAttributes ( ) ;
15064	public int reduceFp ( int value ) return currentFp ; fpLock . unlock ( ) ; onReduceFp ( ) ; fpLock . lock ( ) ;
15252	private void createUserLayerDataSources ( ) ifnot ( inlineDataSource == _NULL ) and if ( userLayerDataSourceInfo != _NULL ) for ( DataSourceInfo dsInfo : userLayerDataSourceInfo ) and if ( dsInfo . hasData ( ) ) then dsInfo . populateFieldMap ( ) ; if ( inlineDataSource == _NULL ) then ConsoleManager . getInstance ( ) . error ( this , _STR ) ;
16435	public static void createFile ( String filePath , String content ) writer . write ( content ) ; if ( writer != _NULL ) then writer . close ( ) ;
17236	public void activate ( ) if ( ! inSelection ) then inSelection = _BOOL ; getViewer ( ) . getSearchManager ( ) . getFindDialogAsToolBar ( ) . clearMessage ( ) ; if ( ! inSelection ) then chartSelection . clearSelectionClasses ( ) ; getViewer ( ) . getSearchManager ( ) . setSearcher ( getSearcher ( ) ) ; if ( ! inSelection ) then this . repaint ( ) ; if ( ! inSelection ) then chartSelection . setSelectedClass ( getSelectedLabels ( ) , _BOOL ) ;
19979	protected boolean edgeCheck ( Edge e , boolean throwException ) if ( ! e . isValid ( ) ) then return _BOOL ;
20722	private void createFeature ( ) ifnot ( geometryType == GeometryTypeEnum . UNKNOWN ) and ifnot ( geometryType == GeometryTypeEnum . RASTER ) then dataLoaded = _BOOL ;
20794	public static long tick ( ) return end ; Thread . sleep ( _NUM ) ; end = System . currentTimeMillis ( ) ;
21448	public long queryCount ( ) return delegator . findCountByCondition ( entityName , makeWhereCondition ( _BOOL ) , havingEntityCondition , makeEntityFindOptions ( ) ) ; if ( dynamicViewEntity != _NULL ) then return iterator . getResultsSizeAfterPartialList ( ) ; if ( dynamicViewEntity != _NULL ) if ( iterator != _NULL ) then iterator . close ( ) ;
21690	public void shutdown ( ) threadMonitorObject . notify ( ) ; while ( ! incomingQueue . isEmpty ( ) ) then LOGGER . error ( _STR ) ; while ( ! incomingQueue . isEmpty ( ) ) then Thread . sleep ( _NUM ) ; while ( ! incomingQueue . isEmpty ( ) ) then e . printStackTrace ( ) ;
21717	public static RxJavaAssemblyException find ( Throwable ex ) while ( ex != _NULL ) and if ( ex instanceof RxJavaAssemblyException ) then return ( RxJavaAssemblyException ) ex ; while ( ex != _NULL ) and ifnot ( memory . add ( ex ) ) then return _NULL ; while ( ex != _NULL ) and if ( memory . add ( ex ) ) then ex = ex . getCause ( ) ;
22262	public boolean isEmpty ( ) for ( ; ; ) and if ( node == _NULL ) then return _BOOL ; for ( ; ; ) and if ( e == _NULL ) then top . compareAndSet ( node , node . next ) ;
22585	public boolean dynomiteCheck ( ) if ( ! dynomiteRedisCheck ( ) ) then logger . error ( _STR ) ; if ( ! dynomiteRedisCheck ( ) ) then logger . error ( _STR + e . getMessage ( ) ) ; if ( ! dynomiteRedisCheck ( ) ) then sleeper . sleepQuietly ( _NUM ) ; if ( ! dynomiteRedisCheck ( ) ) then this . dynProcess . stop ( ) ; logger . info ( _STR ) ; if ( ! dynomiteRedisCheck ( ) ) then return _BOOL ;
22689	private static boolean showFlagsForLanguages ( ) if ( ourFlagSettingAvailable ) then return ourLanguageFlagField . getBoolean ( UISettings . getInstance ( ) ) ; if ( ourFlagSettingAvailable ) then return _BOOL ; if ( ourFlagSettingAvailable ) then ourFlagSettingAvailable = _BOOL ;
23111	public void deliverResult ( T data ) if ( isStarted ( ) ) then super . deliverResult ( data ) ; if ( isReset ( ) ) if ( data != _NULL ) then onReleaseResources ( data ) ; if ( oldData != _NULL ) then onReleaseResources ( oldData ) ;
23165	protected void awaitCompletionComputeValuesAndShutdown ( ) while ( ! executor . isTerminated ( ) ) then e . printStackTrace ( ) ; runExecutorAndAwaitCompletion ( ) ; if ( logger . isDebugEnabled ( ) ) then printStats ( ) ; executor . shutdown ( ) ; while ( ! executor . isTerminated ( ) ) then Thread . sleep ( _NUM ) ;
24315	public void stopRecording ( ) if ( this . recorder != _NULL ) if ( this . state == STATE . MEDIA_RUNNING ) then this . recorder . stop ( ) ; if ( this . recorder != _NULL ) then this . moveFile ( this . audioFile ) ; if ( this . recorder != _NULL ) then e . printStackTrace ( ) ; if ( this . recorder != _NULL ) then this . recorder . reset ( ) ; if ( this . recorder != _NULL ) if ( this . state == STATE . MEDIA_RUNNING ) then this . setState ( STATE . MEDIA_STOPPED ) ;
26031	public void stopTasks ( ) if ( periodicTasks != _NULL ) for ( Future < ? > periodicTask : this . periodicTasks ) and if ( periodicTask != _NULL ) then periodicTask . cancel ( _BOOL ) ; if ( task != _NULL ) then task . cancel ( _BOOL ) ; stopPeriodicActions ( ) ;
26714	public void useItem ( ItemId type ) useIncense ( type ) ;
27421	public void select ( ) if ( _spaceMode == SpaceMode . NONE ) then _electManager . elect ( ) ; ifnot ( _spaceMode == SpaceMode . NONE ) then _electManager . reelect ( ) ;
27534	protected boolean lockJobIfNeeded ( ) return _BOOL ; if ( log . isDebugEnabled ( ) ) then log . debug ( _STR + lockException . getMessage ( ) ) ; unacquireJob ( ) ; if ( job . isExclusive ( ) ) then processEngineConfiguration . getCommandExecutor ( ) . execute ( new LockExclusiveJobCmd ( job ) ) ;
27783	public static boolean exists ( String name ) if ( cache . contains ( name ) ) then return _BOOL ; if ( Helper . exists ( name , Access . class ) ) then cache . add ( name ) ; log . error ( e1 . getMessage ( ) , e1 ) ;
28509	public void activate ( ) if ( ! inSelection ) then inSelection = _BOOL ; if ( ! inSelection ) then chartSelection . clearSelectionSeries ( ) ; getViewer ( ) . getSearchManager ( ) . setSearcher ( getSearcher ( ) ) ; if ( ! inSelection ) then chartSelection . setSelectedSeries ( getSelectedLabels ( ) , _BOOL ) ; if ( ! inSelection ) then this . repaint ( ) ; getViewer ( ) . getSearchManager ( ) . getFindDialogAsToolBar ( ) . clearMessage ( ) ;
29613	final public void put ( String name , Object o ) if ( name == _NULL ) then return ; if ( o == _NULL ) then context . remove ( name ) ; ifnot ( o == _NULL ) then context . put ( name , o ) ;
29922	public void dataSinkUpdate ( DataSinkEvent evt ) if ( evt instanceof EndOfStreamEvent ) then waitFileSync . notifyAll ( ) ;
30749	private void transferToSpecificBuilderAndReset ( ) addToBrowserPatternBuilder ( ) ; addToDeviceBuilder ( ) ; addToRobotBuilder ( ) ; if ( currentTag == Tag . VERSION ) then dataBuilder . setVersion ( buffer . toString ( ) ) ; addToOperatingSystemBuilder ( ) ; addToOperatingSystemPatternBuilder ( ) ; addToBrowserTypeBuilder ( ) ; buffer = new StringBuilder ( ) ; addToBrowserBuilder ( ) ; addToDevicePatternBuilder ( ) ; addToBrowserOsMappingBuilder ( ) ;
31104	public void cleanResult ( ) constraints . clear ( ) ; func2int . clear ( ) ; edgeMapping . clear ( ) ; int2func . clear ( ) ; System . gc ( ) ; allocations . clear ( ) ; pointers . clear ( ) ; consG . clear ( ) ;
31593	public void stopRecording ( ) if ( this . recorder != _NULL ) then e . printStackTrace ( ) ; if ( this . recorder != _NULL ) then this . moveFile ( this . audioFile ) ; if ( this . recorder != _NULL ) then this . recorder . reset ( ) ; if ( this . recorder != _NULL ) if ( this . state == STATE . MEDIA_RUNNING ) then this . setState ( STATE . MEDIA_STOPPED ) ; if ( this . recorder != _NULL ) if ( this . state == STATE . MEDIA_RUNNING ) then this . recorder . stop ( ) ;
32620	public E peek ( ) for ( ; ; ) and if ( node == _NULL ) then return _NULL ; for ( ; ; ) and ifnot ( e == _NULL ) then return e ; for ( ; ; ) and if ( e == _NULL ) then top . compareAndSet ( node , node . next ) ;
34174	void computeNextElement ( ) while ( _BOOL ) and if ( currentBits != _NUM ) then return ; while ( _BOOL ) and ifnot ( currentBits != _NUM )ifnot ( ++ index < bits . length ) then mask = _NUM ;
34194	public boolean isTimedOut ( ) return timedOutAt > _NUM ; if ( timedOutAt > _NUM ) then return _BOOL ; if ( ! usingCachedBasedPolling ( ) && maxCachingTimeReached ( ) ) then refresh ( _BOOL ) ; if ( ! usingCachedBasedPolling ( ) && maxCachingTimeReached ( ) ) then timedOutAt = latestRefreshTime ;
34934	public void truncate ( long length ) isValid ( ) ; ifnot ( length > len ) and ifnot ( len == _NUM ) then buf = ( this . getSubString ( _NUM , ( int ) len ) ) . toCharArray ( ) ;
35100	public void pack ( ) return ; validate ( ) ; if ( isMaximum ( ) ) then setMaximum ( _BOOL ) ; setSize ( getPreferredSize ( ) ) ; if ( isIcon ( ) ) then setIcon ( _BOOL ) ;
35690	public void closeJDBCConn ( ) if ( conn != _NULL ) then e . printStackTrace ( ) ; if ( conn != _NULL ) then conn . close ( ) ; if ( conn != _NULL ) then System . out . println ( _STR ) ;
36426	protected static Long convertTimepointToBucketingLong ( Date timepointToBeConverted ) if ( timepointToBeConverted == _NULL ) then return _NULL ; if ( toReturn < _NUM ) then return _NUM ; if ( toReturn > PrimaryIndexBucketGeneratorImpl . TIMEPOINT_MAX ) then return PrimaryIndexBucketGeneratorImpl . TIMEPOINT_MAX ; ifnot ( toReturn < _NUM )ifnot ( toReturn > PrimaryIndexBucketGeneratorImpl . TIMEPOINT_MAX ) then return toReturn ;
36458	public boolean equals ( String s ) return strValue . equals ( s ) ; if ( strValue == _NULL ) then return s == _NULL ; return charC . equals ( s ) ; return _BOOL ; return byteC . equals ( s ) ;
38587	protected void deleteLeastUsedEntry ( ) if ( entry != _NULL ) then deleteEntry ( entry ) ; poolLock . unlock ( ) ; poolLock . lock ( ) ; if ( log . isDebugEnabled ( ) ) then log . debug ( _STR ) ;
38628	public static ObjectId massageToObjectId ( Object o ) if ( o == _NULL ) then return _NULL ; if ( o instanceof String ) if ( isValid ( s ) ) then return new ObjectId ( s ) ; if ( o instanceof ObjectId ) then return ( ObjectId ) o ;
38765	private static void checkInitialization ( ) if ( assertionManager == _NULL ) if ( assertionManager == _NULL ) then SAMLUtils . debug . error ( _STR + _STR , samle ) ;
38837	public boolean addLogger ( Logger logger ) if ( cx . addLocalLogger ( logger ) ) then loadLoggerHandlers ( logger , name , name + _STR ) ; if ( cx . addLocalLogger ( logger ) ) then return _BOOL ; drainLoggerRefQueueBounded ( ) ;
39111	public void flush ( ) if ( this . os != _NULL ) if ( this . writer != _NULL ) then this . writer . flush ( ) ; if ( this . os != _NULL ) ifnot ( this . writer != _NULL ) then this . os . flush ( ) ; if ( this . os != _NULL ) then getErrorManager ( ) . error ( _STR , e , ErrorManager . FLUSH_FAILURE ) ;
39691	void removeEQ ( Object o ) lock . unlock ( ) ; for ( Iterator < E > it = q . iterator ( ) ; it . hasNext ( ) ; ) and if ( o == it . next ( ) ) then it . remove ( ) ; lock . lock ( ) ;
39928	protected boolean isError ( final int code ) return _BOOL ;
41190	private boolean isDisplayedEntryRemote ( BasicNode node ) if ( isFollowReferrals ( ) ) if ( parent != _NULL ) then return isDisplayedEntryRemote ( parent ) ; if ( isFollowReferrals ( ) ) if ( node == rootNode ) then return _BOOL ;
41557	public boolean isNodeChild ( TreeNode aNode ) return retval ; ifnot ( aNode == _NULL ) and ifnot ( getChildCount ( ) == _NUM ) then retval = ( aNode . getParent ( ) == this ) ;
42134	public void flush ( ) if ( compressionStream != _NULL ) if ( log . isDebugEnabled ( ) ) then log . debug ( _STR , e ) ; if ( compressionStream != _NULL ) then compressionStream . flush ( ) ; if ( compressionStream != _NULL ) if ( log . isDebugEnabled ( ) ) then log . debug ( _STR ) ;
42293	public void closeJDBCConn ( ) if ( conn != _NULL ) then e . printStackTrace ( ) ; if ( conn != _NULL ) then conn . close ( ) ; if ( conn != _NULL ) then System . out . println ( _STR ) ;
42707	private boolean closeInternal ( ErrorCode errorCode ) if ( this . errorCode != _NULL ) then return _BOOL ; connection . removeStream ( id ) ; notifyAll ( ) ;
42889	public int nextMessageID ( ) if ( msgID < _NUM ) if ( nextMessageID . get ( ) < _NUM ) then return _NUM ; if ( msgID < _NUM ) ifnot ( nextMessageID . get ( ) < _NUM ) then return nextMessageID . getAndIncrement ( ) ; if ( msgID < _NUM ) if ( nextMessageID . get ( ) < _NUM ) then nextMessageID . set ( _NUM ) ; return msgID ;
43477	void updateValue ( Object value ) setEditValid ( _BOOL ) ; if ( getCommitsOnValidEdit ( ) ) then commitEdit ( ) ;
44749	public void closeJDBCConn ( ) if ( conn != _NULL ) then e . printStackTrace ( ) ; if ( conn != _NULL ) then conn . close ( ) ; if ( conn != _NULL ) then System . out . println ( _STR ) ;
45197	public boolean offer ( E e ) return _BOOL ; if ( q . peek ( ) == e ) then available . signal ( ) ; lock . lock ( ) ; q . offer ( e ) ; lock . unlock ( ) ;
45850	public Socket accept ( ) return aSocket ; aSocket . close ( ) ; implAccept ( aSocket ) ; checkOpen ( ) ;
46564	public static void resetAllCounters ( ) resetPostDisconnectCount ( ) ; resetLDIFExportCount ( ) ; resetPreParseCount ( ) ; resetPostOperationCount ( ) ; resetSearchEntryCount ( ) ; resetIntermediateResponseCount ( ) ; resetLDIFImportCount ( ) ; resetPreOperationCount ( ) ; resetSearchReferenceCount ( ) ; resetPostResponseCount ( ) ; resetSubordinateModifyDNCount ( ) ; resetPostSynchronizationCount ( ) ; resetPostConnectCount ( ) ;
47453	public boolean equalsIgnoreCase ( String s ) if ( strValue == _NULL ) then return s == _NULL ; return charC . equalsIgnoreCase ( s ) ; return _BOOL ; return strValue . equalsIgnoreCase ( s ) ; return byteC . equalsIgnoreCase ( s ) ;
47465	public void write ( int b ) trouble = _BOOL ; ensureOpen ( ) ; if ( ( b == _CHAR ) && autoFlush ) then out . flush ( ) ; Thread . currentThread ( ) . interrupt ( ) ; out . write ( b ) ;
47593	public void ssoTokenChanged ( SSOTokenEvent evt ) clearAllData ( token . getTokenID ( ) ) ;
47659	public void mark ( int readLimit ) if ( readLimit >= _NUM ) if ( isOpen ( ) ) then markpos = pos ;
49707	public void revalidate ( ) if ( getParent ( ) == _NULL ) then return ; if ( SunToolkit . isDispatchThreadForAppContext ( this ) ) then invalidate ( ) ; if ( SunToolkit . isDispatchThreadForAppContext ( this ) ) then RepaintManager . currentManager ( this ) . addInvalidComponent ( this ) ; ifnot ( SunToolkit . isDispatchThreadForAppContext ( this ) ) then SunToolkit . executeOnEventHandlerThread ( this , _NULL ) ;
50260	public boolean hasNext ( Pattern pattern ) ensureOpen ( ) ; while ( _BOOL ) and if ( getCompleteTokenInBuffer ( pattern ) != _NULL ) then return revertState ( _BOOL ) ; while ( _BOOL ) and if ( needInput ) then readInput ( ) ; saveState ( ) ; while ( _BOOL ) and if ( getCompleteTokenInBuffer ( pattern ) != _NULL ) then cacheResult ( ) ;
50434	public void sync ( ) if ( Libcore . os . isatty ( this ) ) then Libcore . os . tcdrain ( this ) ; sfe . initCause ( errnoException ) ; ifnot ( Libcore . os . isatty ( this ) ) then Libcore . os . fsync ( this ) ;
50799	public static boolean verifyTimestampCertificates ( TimeStampToken ts , KeyStore keystore , String provider ) for ( X509Certificate certStoreX509 : SignUtils . getCertificates ( keystore ) ) then return _BOOL ; for ( X509Certificate certStoreX509 : SignUtils . getCertificates ( keystore ) ) then SignUtils . isSignatureValid ( ts , certStoreX509 , provider ) ;
50849	public static long nextOperationID ( ) if ( opID < _NUM ) if ( nextOperationID . get ( ) < _NUM ) then nextOperationID . set ( _NUM ) ; return opID ; if ( opID < _NUM ) ifnot ( nextOperationID . get ( ) < _NUM ) then return nextOperationID . getAndIncrement ( ) ; if ( opID < _NUM ) if ( nextOperationID . get ( ) < _NUM ) then return _NUM ;
50850	private void processMenuKeyEvent ( MenuKeyEvent e ) fireMenuKeyTyped ( e ) ; fireMenuKeyPressed ( e ) ; fireMenuKeyReleased ( e ) ;
50931	private static void garbageCollect ( ) Thread . sleep ( _NUM ) ; System . runFinalization ( ) ; ex . printStackTrace ( ) ; System . gc ( ) ;
51031	public long nextOperationID ( ) if ( opID < _NUM ) if ( nextOperationID . get ( ) < _NUM ) then nextOperationID . set ( _NUM ) ; return opID ; if ( opID < _NUM ) ifnot ( nextOperationID . get ( ) < _NUM ) then return nextOperationID . getAndIncrement ( ) ; if ( opID < _NUM ) if ( nextOperationID . get ( ) < _NUM ) then return _NUM ;
51076	private boolean closeInternal ( int rstStatusCode ) if ( this . rstStatusCode != - _NUM ) then return _BOOL ; connection . removeStream ( id ) ; notifyAll ( ) ;
51770	public static boolean isJSF22 ( ) ifnot ( version != _NULL ) then return _BOOL ; if ( version != _NULL ) then return version . startsWith ( _STR ) ; ifnot ( version != _NULL ) then Class . forName ( _STR ) ;
52280	public boolean removeAll ( ) cookieJar . clear ( ) ; if ( cookieJar . isEmpty ( ) ) then return _BOOL ; lock . lock ( ) ; lock . unlock ( ) ; uriIndex . clear ( ) ; domainIndex . clear ( ) ;
52489	public StreamAllocation close ( ) return streamAllocation ; if ( requestBodyOut != _NULL ) then closeQuietly ( requestBodyOut ) ; if ( userResponse != _NULL ) then closeQuietly ( userResponse . body ( ) ) ; if ( bufferedRequestBody != _NULL ) then closeQuietly ( bufferedRequestBody ) ; ifnot ( userResponse != _NULL ) then streamAllocation . connectionFailed ( ) ;
52536	public void shutdown ( ) if ( ! shutdownThePool ) for ( WorkerThread thread : threads ) then thread . terminate ( ) ; if ( ! shutdownThePool ) then hasTasks . signalAll ( ) ; if ( ! shutdownThePool ) then lock . unlock ( ) ; if ( ! shutdownThePool ) then lock . lock ( ) ;
52698	public boolean handleRequest ( final HttpServletRequest req , final HttpServletResponse res ) ifnot ( isPreflightFlow ( req ) ) then return handleActualRequestFlow ( req , res ) ; if ( req . getHeader ( CORSConstants . ORIGIN ) == _NULL ) then return _BOOL ; if ( isPreflightFlow ( req ) ) then handlePreflightFlow ( req , res ) ;
53093	public String toString ( ) initState = _STR ; return _STR + getAlgorithm ( ) + initState ;
53279	public PersistentObject assertOneEntry ( ) if ( hasMoreElements ( ) ) then abandon ( ) ; return entry ;
53862	static SearchBuffer obtainSearchBuffer ( ) return sb ; sb = new SearchBuffer ( ) ;
54260	public void add ( AbstractButton b ) if ( b == _NULL ) then return ; buttons . addElement ( b ) ; if ( b . isSelected ( ) ) ifnot ( selection == _NULL ) then b . setSelected ( _BOOL ) ; b . getModel ( ) . setGroup ( this ) ;
54703	public static int nextMessageID ( ) if ( msgID < _NUM ) if ( nextMessageID . get ( ) < _NUM ) then return _NUM ; if ( msgID < _NUM ) ifnot ( nextMessageID . get ( ) < _NUM ) then return nextMessageID . getAndIncrement ( ) ; if ( msgID < _NUM ) if ( nextMessageID . get ( ) < _NUM ) then nextMessageID . set ( _NUM ) ; return msgID ;
55366	public void addExecutor ( Executor ex ) if ( ! executors . contains ( ex ) ) then executors . add ( ex ) ; if ( ! executors . contains ( ex ) ) if ( getState ( ) . isAvailable ( ) ) then ex . start ( ) ; if ( ! executors . contains ( ex ) ) if ( getState ( ) . isAvailable ( ) ) then log . error ( _STR , x ) ;
56031	private int calculatePosition ( int spot , int width ) if ( spot < BORDER_DRAG_THICKNESS ) then return _NUM ;
