6	public void push ( ) { Map < K , V > newMap = new HashMap < K , V > ( ) ; this . stackList . add ( _NUM , newMap ) ; }
10	public static int hash ( float value ) { assert ! Float . isNaN ( value ) : _CHAR Values of NaN are not supported . '' ; return Float . floatToIntBits ( value * _NUM . _NUM ) ; }
21	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
26	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( principals ) ; }
32	private void applyThirdPartyApiSettings ( ) { serviceBuilder . getControlBuilder ( ) . setEnvironment ( ControlConfigUtil . PROD_SERVICE_CONTROL ) ; serviceBuilder . setConfigVersion ( UInt32Value . newBuilder ( ) . setValue ( TOOLS_CONFIG_VERSION_3 ) . build ( ) ) ; }
33	@ NotNull public static BufferedImage trim ( @ NotNull BufferedImage image ) { BufferedImage cropped = ImageUtils . cropBlank ( image , _NULL , TYPE_INT_ARGB ) ; return cropped != _NULL ? cropped : image ; }
48	public void addRenderscriptDirectory ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myRenderscriptDirectories . add ( directory ) ; }
49	public boolean clearCart ( ) { this . cart . clear ( ) ; return _BOOL ; }
60	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR newfriend \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
63	public boolean hasAnyAuthority ( Collection < String > auths ) { Set < String > all = new HashSet < > ( getAllAuthorities ( ) ) ; return all . removeAll ( auths ) ; }
81	public static void writeln ( String fileName , List < String > lines ) { String [ ] a = lines . toArray ( new String [ lines . size ( ) ] ) ; writeln ( fileName , a ) ; }
92	public static WxMaterialCountResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxMaterialCountResult . class ) ; }
101	public static boolean startsWith ( String columnPath , String tableName ) { if ( tableName == _NULL || columnPath == _NULL ) return _BOOL ; return columnPath . startsWith ( tableName + _CHAR . _CHAR ) ; }
119	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
123	public static Map < String , Object > deleteParty ( DispatchContext ctx , Map < String , ? extends Object > context ) { Locale locale = ( Locale ) context . get ( _CHAR locale _CHAR ) ; return ServiceUtil . returnError ( UtilProperties . getMessage ( resourceError , _CHAR partyservices . cannot_delete_party_not_implemented _CHAR , locale ) ) ; }
134	public void grow ( double b ) { clip [ _NUM ] += b ; clip [ _NUM ] += b ; }
149	void updateItem ( Barcode barcode ) { mBarcode = barcode ; postInvalidate ( ) ; }
152	public void confirm ( ) { okButton . click ( ) ; verifyIsHidden ( ) ; }
164	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
168	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
193	@ Override public void notationDecl ( String name , String publicId , String systemId ) throws SAXException { allowXMLCatalogPI = _BOOL ; super . notationDecl ( name , publicId , systemId ) ; }
202	public void writeSizedPrefixedBytes ( byte [ ] bytes , int offset , int length ) throws IOException { writeInt ( length ) ; write ( bytes , offset , length ) ; }
205	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR WEEK_FORE_CAST \ _CHAR ( _CHAR + _CHAR \ _CHAR AREAID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR WEATHER_DATE \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR WEATHER_CONDITION_START \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR WEATHER_CONDITION_END \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR TEMP_H \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR TEMP_L \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR FX \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR FJ \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR RAIN_PER_CENT \ _CHAR INTEGER ) ; _CHAR ) ; }
214	public static DLSN deserialize ( String dlsn ) { byte [ ] data = Base64 . decodeBase64 ( dlsn ) ; return deserializeBytes ( data ) ; }
239	private static int secondaryHash ( int h ) { h ^= ( h >> > _NUM ) ^ ( h >> > _NUM ) ; return h ^ ( h >> > _NUM ) ^ ( h >> > _NUM ) ; }
275	@ Override public void actionPerformed ( ActionEvent ev ) { String result = JOptionPane . showInputDialog ( getViewer ( ) . getFrame ( ) , _CHAR Enter name _CHAR , _CHAR Select Node _CHAR , JOptionPane . QUESTION_MESSAGE ) ; if ( result != _NULL ) execute ( _CHAR select name = _CHAR + result + _CHAR ; _CHAR ) ; }
284	public synchronized void clear ( ) { this . value = _NUM ; this . released = _BOOL ; }
285	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
293	public boolean monitorMemoryUsageWithNoEviction ( boolean isWriteTypeOperation ) { MemoryEvictionDecision res = monitorMemoryUsageWithNoEviction_Impl ( isWriteTypeOperation ) ; return res != MemoryEvictionDecision . NO_EVICTION ; }
297	public DistributedLogNamespaceBuilder perLogStatsLogger ( StatsLogger statsLogger ) { this . _perLogStatsLogger = statsLogger ; return this ; }
299	public String process ( Item item ) throws ProcessException { String name = item . getFeatures ( ) . getString ( _CHAR name _CHAR ) ; return Integer . toString ( rail ( name . length ( ) ) ) ; }
316	public final ProgressEvent updateSubtask ( String sSubtaskName ) { SubtaskName = sSubtaskName ; return this ; }
321	public LeastSquaresBuilder checker ( final ConvergenceChecker < Evaluation > newChecker ) { this . checker = newChecker ; return this ; }
328	public void nextGroup ( ) throws SAException { releaseScan ( ) ; return ; }
349	public GsonBuilder addDeserializationExclusionStrategy ( ExclusionStrategy strategy ) { excluder = excluder . withExclusionStrategy ( strategy , _BOOL , _BOOL ) ; return this ; }
373	public EmailBuilder withBody ( String body ) { this . body = new DefaultEmailBody ( body , TEXT_PLAIN , UTF8 ) ; return this ; }
377	@ Override public void redoAction ( UndoInterface undoRedoObject ) { String newValue = ( String ) undoRedoObject . getNewValue ( ) ; fieldConfigVisitor . populateTextField ( FieldIdEnum . TTF_SYMBOL , ( String ) newValue ) ; }
384	public void clear ( ) { getProps ( ) . clear ( ) ; getOverlay ( ) . clear ( ) ; }
389	public Builder shouldStartProxy ( boolean startProxy ) { this . _shouldStartProxy = startProxy ; return this ; }
391	public static < T > String createJSONStringFromPojo ( Context context , T data ) { Gson gson = new Gson ( ) ; return gson . toJson ( data ) ; }
422	@ Deprecated public boolean isSelected ( Map < String , Object > context ) { ModelMenuItem selMenuItem = getModelMenu ( ) . getSelectedMenuAndItem ( context ) . getMenuItem ( ) ; return ( isSame ( selMenuItem ) ) ; }
428	public void startEntity ( String name , XMLResourceIdentifier identifier , String encoding , Augmentations augs ) throws XNIException { fEntityDepth ++ ; fEntityScanner = fEntityManager . getEntityScanner ( ) ; }
430	public JSONArray put ( int index , long value ) throws JSONException { this . put ( index , new Long ( value ) ) ; return this ; }
446	public RequestHandle delete ( Context context , String url , ResponseHandlerInterface responseHandler ) { final HttpDelete delete = new HttpDelete ( url ) ; return sendRequest ( httpClient , httpContext , delete , _NULL , responseHandler , context ) ; }
447	public void removeSelections ( ) { this . selectedItems . clear ( ) ; this . notifyDataSetChanged ( ) ; }
461	public Builder fill ( Boolean fill ) { this . fill = fill ; return this ; }
471	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < K , V > Map < K , V > toMap ( Object object ) { if ( object != _NULL && ! ( object instanceof Map ) ) return _NULL ; return ( Map < K , V > ) object ; }
483	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
495	public void begin ( int size ) { outputData = new byte [ size / _NUM ] ; curIndex = _NUM ; }
498	public void clear ( ) { log . d ( LOG_TAG , _CHAR Clear Belvedere cache _CHAR ) ; belvedereStorage . clearStorage ( context ) ; }
503	public Builder corePoolSize ( int corePoolSize ) { this . corePoolSize = corePoolSize ; return this ; }
506	public Builder maxNativeZoom ( Number maxNativeZoom ) { this . maxNativeZoom = maxNativeZoom ; return this ; }
525	public SiteAdminGridRow select ( ) { pageNumber . click ( ) ; return this ; }
532	public AemContextMenu openContextMenuNthComponent ( Class < ? > componentClass , int n ) { contextMenu . open ( getComponentScope ( componentClass , n ) ) ; return contextMenu ; }
540	public static boolean interfaceOf ( Object obj , String interfaceName ) throws ClassNotFoundException { Class < ? > interfaceClass = loadClass ( interfaceName ) ; return interfaceOf ( obj , interfaceClass ) ; }
541	protected long unScaleTime ( int reqSampleRate , long timelineTimeInSamples ) { if ( reqSampleRate == sampleRate ) return ( timelineTimeInSamples ) ; return ( Math . round ( ( double ) ( sampleRate ) * ( double ) ( timelineTimeInSamples ) / ( reqSampleRate ) ) ) ; }
544	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL && viewer . getJList ( ) . getSelectedValuesList ( ) . size ( ) >= _NUM ; }
551	private void sendBroadcastUploadsAdded ( ) { Intent start = new Intent ( getUploadsAddedMessage ( ) ) ; sendStickyBroadcast ( start ) ; }
554	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Utf8_info ci = ( CONSTANT_Utf8_info ) ( constant_pool [ name_index ] ) ; return ci . convert ( ) ; }
558	public String [ ] upload_file ( byte [ ] file_buff , int offset , int length , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_file ( group_name , file_buff , offset , length , file_ext_name , meta_list ) ; }
568	public Builder withRange ( ByteString endKey ) { this . endKey = Optional . ofNullable ( endKey ) ; return this ; }
569	public static void main ( String [ ] args ) { MousePicking simulation = new MousePicking ( ) ; simulation . run ( ) ; }
570	public boolean isApplicationEnabled ( ) { AXmlAttribute < ? > attr = this . application . getAttribute ( _CHAR enabled _CHAR ) ; return attr == _NULL || ! attr . getValue ( ) . equals ( Boolean . FALSE ) ; }
576	public int findFirstVisibleItemPosition ( ) { final View child = findOneVisibleChild ( _NUM , layoutManager . getChildCount ( ) , _BOOL , _BOOL ) ; return child == _NULL ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }
578	@ Override public double [ ] makeDensityTestValues ( ) { double d = _NUM / _NUM . _NUM ; return new double [ ] { _NUM , d , d , d , d , d , d , d , d , d , d , _NUM } ; }
592	public static String compileProgressSuccessAction ( String progressSuccessAction ) throws TemplateModelException { Environment env = CommonFtlUtil . getCurrentEnvironment ( ) ; return compileProgressSuccessAction ( progressSuccessAction , ContextFtlUtil . getRequest ( env ) , ContextFtlUtil . getResponse ( env ) ) ; }
597	public void replaceLineAt ( int pos , String newLines ) throws BadLocationException { Element e = getParagraphElement ( pos ) ; replace ( e . getStartOffset ( ) , getElementLength ( e ) , newLines , _NULL ) ; }
604	public void startRecordingAudio ( String id , String file ) { AudioPlayer audio = getOrCreatePlayer ( id , file ) ; audio . startRecording ( file ) ; }
612	public RevealBuilder withEndAction ( @ NonNull final Runnable endAction ) { this . mEndAction = endAction ; return this ; }
620	boolean inOpenRange ( K key , K least , K fence ) { if ( key == _NULL ) throw new NullPointerException ( ) ; return ( ( least == _NULL || compare ( key , least ) >= _NUM ) && ( fence == _NULL || compare ( key , fence ) <= _NUM ) ) ; }
621	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryGaussNormEvaluator - do = ( char | word | all ) [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - wordMin = # ] [ - wordMax = # ] [ - wordDist = # ] [ - charMin = # ] [ - charMax = # ] [ - charDist = # ] [ - o = outFile ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] [ - lowmem ] _CHAR ) ; System . err . println ( _CHAR wordMin = # \ tMin word n - gram size .\ nwordMax = # \ tMax word n - gram size .\ nwordDist = # \ tWord n - gram window \ n _CHAR + _CHAR charMin = # \ tMin char n - gram size .\ ncharMax = # \ tMax char n - gram size .\ ncharDist = # \ tChar n - gram window .\ n _CHAR + _CHAR - o = outFile \ tThe file to output data . Default is stdout .\ n - t = # \ tNumber of threads . Defaults to _NUM .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR - use = o | d \ tUse [ o ] ccurences or average [ d ] istance to assign weights to the graph . Defaults to o .\ n _CHAR + _CHAR - lowmem \ tDo not use caching for documents . Less memory used , more time required .\ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
630	public void incrementCount ( K key , V value , double count ) { Counter < V > valueCounter = ensureCounter ( key ) ; valueCounter . incrementCount ( value , count ) ; }
646	public void clear ( ) { m_source . clear ( ) ; super . clear ( ) ; }
674	public LruCachePolicy initialLoadPercentage ( int initialLoadPercentage ) { setInitialLoadPercentage ( initialLoadPercentage ) ; return this ; }
677	public Builder rows ( int rows ) { this . rows = rows ; return this ; }
698	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
713	private void createUI ( ) { setLayout ( new BorderLayout ( ) ) ; add ( createApplyRevertPanel ( ) , BorderLayout . CENTER ) ; }
714	public Future < Boolean > analyzeTraffic ( final RequestPredicate requestPredicate , final int timeout ) { Future < Boolean > future = Executors . newSingleThreadExecutor ( ) . submit ( new AnalyzerCallable ( requestPredicate , timeout , proxyEnabled , proxyListeners , controller , registry ) ) ; return new DispatchingFuture ( future , proxyListeners ) ; }
719	@ Override public void flush ( ) throws IOException { super . flush ( ) ; this . branch . flush ( ) ; }
728	@ Override public WebElement findElement ( ) { WebElement context = scopeFactory . createLocator ( scopeField ) . findElement ( ) ; return new DefaultElementLocator ( context , searchField ) . findElement ( ) ; }
737	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
742	public void insertEntryIndexedField ( IEntryCacheInfo pEntry , K fieldValue , TypeData pType ) { if ( _fifoGroupsIndexExtention == _NULL ) insertEntryIndexedField_impl ( pEntry , fieldValue , pType , pEntry . getBackRefs ( ) ) ; else _fifoGroupsIndexExtention . insertEntryIndexedField ( pEntry , fieldValue , pType ) ; }
743	@ Override public void dropTo ( Droppable droppable ) { Offset offset = new Offset ( getCurrentLocation ( ) , droppable . getCurrentLocation ( ) ) ; dropByOffset ( offset . getX ( ) , offset . getY ( ) ) ; }
758	public void showDetailsArea ( int location ) { DisplayArea displayArea = getDisplayArea ( location ) ; if ( displayArea != _NULL ) displayArea . setVisible ( _BOOL ) ; }
763	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getLength ( ) > _NUM ; }
769	private void updateCookies ( Collection < IdentifiableCookie > cookies ) { this . cookies . removeAll ( cookies ) ; this . cookies . addAll ( cookies ) ; }
775	@ Override public void start ( BundleContext bc ) throws Exception { context = bc ; logger . debug ( _CHAR Z - Wave binding started . Version { } _CHAR , ZWaveActivator . getVersion ( ) ) ; }
807	public void java_lang_System_setErr0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable sysErr = helper . staticField ( _CHAR java . lang . System _CHAR , _CHAR err _CHAR ) ; helper . assign ( sysErr , params [ _NUM ] ) ; }
808	public void sample ( int column , String value ) { rangeCheck ( column , _BOOL ) ; ( ( ParserFactory ) m_factories . get ( column ) ) . sample ( value ) ; }
831	private void readObject ( ObjectInputStream ois ) throws ClassNotFoundException , IOException { ois . defaultReadObject ( ) ; needsSyncChildren ( _BOOL ) ; }
840	public Book withDefaults ( ) { setBestSeller ( _BOOL ) ; return this ; }
842	public Bundler putShortArray ( String key , short [ ] value ) { bundle . putShortArray ( key , value ) ; return this ; }
850	public static Stroke createDefaultStroke ( ) { Stroke stroke = styleFactory . getDefaultStroke ( ) ; return stroke ; }
856	@ Override public void renderSymbol ( ) { dataEditedFlag = _BOOL ; notifySLDEditorFileHasUpdated ( ) ; }
857	private Builder smoothFactor ( Number smoothFactor ) { this . smoothFactor = smoothFactor ; return this ; }
859	public int findFirstVisibleItemPosition ( ) { final View child = findOneVisibleChild ( _NUM , layoutManager . getChildCount ( ) , _BOOL , _BOOL ) ; return child == _NULL ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }
860	public boolean isSelected ( String series , String className ) { if ( isSelectedBasedOnSeries ) return selectedSeries . contains ( series ) ; else return selectedClasses . contains ( className ) ; }
861	public static boolean modelSupportsInstantRun ( @ NotNull AndroidGradleModel model ) { GradleVersion modelVersion = model . getModelVersion ( ) ; return modelVersion == _NULL || modelVersion . compareTo ( InstantRunManager . MINIMUM_GRADLE_PLUGIN_VERSION ) >= _NUM ; }
872	public TSDataOptimizerTask add ( TSData tsdata ) { files . add ( tsdata ) ; return this ; }
876	public Bundler putIntArray ( String key , int [ ] value ) { bundle . putIntArray ( key , value ) ; return this ; }
889	public static boolean isOrSubOf ( Class < ? > objectClass , String parentName ) throws ClassNotFoundException { Class < ? > parentClass = loadClass ( parentName ) ; return isOrSubOf ( objectClass , parentClass ) ; }
894	@ Override public void clearDataTags ( ) { sourceDataTags . clear ( ) ; movingAverages . clear ( ) ; }
912	private static String readFile ( File file , Charset encoding ) throws IOException { byte [ ] encoded = Files . readAllBytes ( Paths . get ( file . getAbsolutePath ( ) ) ) ; return new String ( encoded , encoding ) ; }
915	public static void switchTiming ( String nextPhase ) { stopMostRecentTimer ( ) ; startTiming ( nextPhase ) ; }
926	public void delete ( ) throws IOException { close ( ) ; deleteContents ( directory ) ; }
936	public String [ ] listUsers ( ) { ResponseEntity < String [ ] > response = restTemplate . exchange ( url + RMAControllerMappings . LIST_USERS_MAPPING , HttpMethod . GET , request , String [ ] . class ) ; return response . getBody ( ) ; }
942	public void reloadPreviewContents ( ) { myPreviewPanel . invalidateGraphicsRenderer ( ) ; myPreviewPanel . revalidate ( ) ; }
944	public static int dayNumber ( Timestamp stamp ) { Calendar tempCal = toCalendar ( stamp , TimeZone . getDefault ( ) , Locale . getDefault ( ) ) ; return tempCal . get ( Calendar . DAY_OF_WEEK ) ; }
954	public StatelessHibernateSpaceDataSourceConfigurer initialLoadChunkSize ( int initalLoadChunkSize ) { this . initialLoadChunkSize = initalLoadChunkSize ; return this ; }
956	private static boolean contains ( Entry [ ] eSet , Entry e ) { for ( int i = _NUM ; i < eSet . length ; i ++ ) if ( equal ( eSet [ i ] , e ) ) return _BOOL ; return _BOOL ; }
970	public Builder transform ( Transform transform ) { actionList . add ( new DataAction ( transform ) ) ; return this ; }
972	public static double fro ( Zmat A ) { A . getProperties ( ) ; return Norm . fro ( A , A . bx , A . rx , A . bx , A . cx ) ; }
983	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
1004	public boolean contains ( String uid ) { cleanIfNeeded ( ) ; return _idSet0 . contains ( uid ) || _idSet1 . contains ( uid ) ; }
1012	public static boolean isWifiConnected ( Context context ) { ConnectivityManager cm = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; return cm != _NULL && cm . getActiveNetworkInfo ( ) . getType ( ) == ConnectivityManager . TYPE_WIFI ; }
1025	private static Optional < Map . Entry < String , String >> createTagEntry ( Map . Entry < String , MetricValue > tag_entry ) { final Optional < String > opt_tag_value = tag_entry . getValue ( ) . asString ( ) ; return opt_tag_value . map ( _NULL ) ; }
1029	@ Override protected void synchronizeChildren ( ) { DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) ownerDocument ( ) ; ownerDocument . synchronizeChildren ( this , fNodeIndex ) ; }
1036	private void readObject ( java . io . ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; _identityExportObjTable = new HashMap < WeakKey , WeakReference < Remote >> ( ) ; }
1051	private void handleEvent ( ) { Object value = txtName . getText ( ) ; bodyFixture . setUserData ( value ) ; }
1055	public RecognitionRequest addCustomOperation ( String customOperation ) { operations . add ( customOperation ) ; return this ; }
1058	public static boolean instanceOf ( Object obj , Object typeObject ) { Class < ? > typeClass = typeObject . getClass ( ) ; return instanceOf ( obj , typeClass ) ; }
1082	public void addFocusGroup ( String group , TupleSet tset ) { checkGroupExists ( group ) ; m_focus . put ( group , tset ) ; }
1110	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
1132	public Builder withRationaleEnabled ( boolean enabled ) { buildObj . rationaleEnabled = enabled ; return this ; }
1140	public static URI toLocation ( URI sourceUri , String table ) { getLocationType ( sourceUri ) ; return UriBuilder . fromUri ( sourceUri ) . path ( table ) . build ( ) ; }
1149	public EmailBuilder to ( String to ) { this . to . add ( to ) ; return this ; }
1151	public void close ( ) { Log . d ( _CHAR MusicPlaybackService _CHAR , _CHAR MusicMediaPlayerGlue closed ! _CHAR ) ; mContext . unbindService ( mPlaybackServiceConnection ) ; }
1152	public String stripContentExtras ( String contentType ) { int index = contentType . indexOf ( _CHAR ) ; return ( index >= _NUM ) ? contentType . substring ( _NUM , index ) : contentType ; }
1153	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRetainInstance ( _BOOL ) ; }
1165	private static void increment ( Map < ResultPoint , Integer > table , ResultPoint key ) { Integer value = table . get ( key ) ; table . put ( key , value == _NULL ? _NUM : value + _NUM ) ; }
1167	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
1190	protected Builder owningType ( final Type < ? > owningType ) { this . owningType = owningType ; return this ; }
1197	public void delete ( final ConfigKey configKey ) { final FindResult res = findNode ( configKey . keyName , _BOOL ) ; res . getNode ( ) . remove ( res . getName ( ) ) ; }
1198	@ Override public ListenableFuture < MemberRemoveResponse > removeMember ( long memberID ) { MemberRemoveRequest memberRemoveRequest = MemberRemoveRequest . newBuilder ( ) . setID ( memberID ) . build ( ) ; return clusterStub . memberRemove ( memberRemoveRequest ) ; }
1201	public static boolean hasLayoutRenderingIssue ( @ NotNull AndroidProject model ) { String modelVersion = model . getModelVersion ( ) ; return modelVersion . startsWith ( _CHAR _NUM . _NUM . _NUM _CHAR ) || modelVersion . equals ( _CHAR _NUM . _NUM . _NUM _CHAR ) || modelVersion . equals ( _CHAR _NUM . _NUM . _NUM _CHAR ) ; }
1210	public static void launchSettingsPage ( Context context , String fragmentName ) { Intent intent = createIntentForSettingsPage ( context , fragmentName ) ; context . startActivity ( intent ) ; }
1227	public Bundler putBundle ( String key , Bundle value ) { bundle . putBundle ( key , value ) ; return this ; }
1229	private List < XtnEntry > initReadLockOwnersIfNeed ( ) { if ( _readLocksOwners == _NULL ) _readLocksOwners = new ArrayList < XtnEntry > ( ) ; return _readLocksOwners ; }
1230	public TrustManagerBuilder denyAll ( ) { mgr . add ( new DenyAllTrustManager ( ) ) ; return ( this ) ; }
1235	public void write ( int a ) throws IOException { outs . write ( a ) ; position ++ ; }
1245	private void sortDrawablesAZ ( ) { Sort . instance ( ) . sort ( drawables , _NULL ) ; refreshDrawableDisplay ( ) ; }
1251	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
1255	public void emitWithGravity ( View emiter , int gravity , int particlesPerSecond ) { configureEmiter ( emiter , gravity ) ; startEmiting ( particlesPerSecond ) ; }
1264	public void checkCompatibility ( final DSCompiler compiler ) throws MathIllegalArgumentException { MathUtils . checkDimension ( parameters , compiler . parameters ) ; MathUtils . checkDimension ( order , compiler . order ) ; }
1266	public static String extractCSVOutputLineFreq ( String csvOut ) { String tokens [ ] = csvOut . split ( _CHAR , ( ? = ( [ ^\ _CHAR ] *\ _CHAR [ ^\ _CHAR ] *\ _CHAR ) * [ ^\ _CHAR ] * $ ) _CHAR , - _NUM ) ; return tokens [ _NUM ] ; }
1298	public static final void addAlliance ( League league , PlayerAlliance alliance ) { Preconditions . checkNotNull ( league , _CHAR League should not be _NULL _CHAR ) ; league . onEvent ( new LeagueEnteredEvent ( league , alliance ) ) ; }
1312	public < T extends Fragment > T into ( T fragment ) { fragment . setArguments ( get ( ) ) ; return fragment ; }
1326	private void layout ( int width , int height ) { int itemsWidth = width - _NUM * PADDING ; itemsLayout . layout ( _NUM , _NUM , itemsWidth , height ) ; }
1330	public Builder cacheConcurrencyLevel ( int cacheConcurrencyLevel ) { this . cacheConcurrencyLevel = cacheConcurrencyLevel ; return this ; }
1339	public DefaultHibernateSpaceDataSourceConfigurer performOrderById ( boolean performOrderById ) { this . performOrderById = performOrderById ; return this ; }
1347	@ Override protected void scanStartElementName ( ) throws IOException , XNIException { fEntityScanner . scanQName ( fElementQName ) ; fSawSpace = fEntityScanner . skipSpaces ( ) ; }
1349	public Bindings add ( String property , JComboBox combo ) { combo . addActionListener ( this ) ; return add ( new JComboBoxBinding ( property , combo , _NUM ) ) ; }
1353	private MetricGroup up_down_host_ ( String host , boolean up ) { final GroupName group = GroupName . valueOf ( getBasePath ( ) , Tags . valueOf ( singletonMap ( _CHAR host _CHAR , MetricValue . fromStrValue ( host ) ) ) ) ; return new SimpleMetricGroup ( group , singleton ( up ? UP_METRIC : DOWN_METRIC ) ) ; }
1372	public static byte [ ] loadImageAs32bitRGB ( File imageLoc ) throws IOException { BufferedImage img = ImageIO . read ( imageLoc ) ; return int32RGBBufferedImageToByteArray ( img ) ; }
1378	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
1393	public static WxCurMenuInfoResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxCurMenuInfoResult . class ) ; }
1413	protected final void fireColumnEvent ( int idx , long prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
1422	@ Override public synchronized void mark ( int readlimit ) { in . mark ( readlimit ) ; mark = pos ; }
1423	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
1428	public static String formatQuantity ( Float quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return formatQuantity ( quantity . doubleValue ( ) ) ; }
1440	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
1469	public Bundler putBoolean ( String key , boolean value ) { bundle . putBoolean ( key , value ) ; return this ; }
1477	private DateTime boundaryAt ( int n ) { long instant = intervalStart . getChronology ( ) . add ( period , intervalStart . getMillis ( ) , n ) ; return new DateTime ( instant ) ; }
1512	public void addXValue ( String xVal ) { if ( xVal != _NULL && xVal . length ( ) > mXValMaximumLength ) mXValMaximumLength = xVal . length ( ) ; mXVals . add ( xVal ) ; }
1523	public void unexport ( long remoteObjID ) { List < ChannelEntry > channelEntries = getChannels ( remoteObjID ) ; for ( ChannelEntry chEntry : channelEntries ) closeConnection ( chEntry ) ; }
1534	public boolean isApplicable ( ) { ViewerBase viewer = ( ViewerBase ) getViewer ( ) ; return viewer . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
1564	@ Override public Object analyse ( double [ ] frame ) { if ( frame . length != getFrameLengthSamples ( ) ) throw new IllegalArgumentException ( _CHAR Expected frame of length _CHAR + getFrameLengthSamples ( ) + _CHAR , got _CHAR + frame . length ) ; return calcLPC ( frame , lpOrder , preemphasisCoefficient ) ; }
1577	public synchronized void removeListener ( final Long tagId ) { listeners . remove ( tagId ) ; eventTimes . remove ( tagId ) ; }
1579	public static String guessBuildSystemName ( ) { Project project = guessCurrentProject ( ) ; return buildSystemName ( project ) ; }
1594	public void open ( ) { ScreenManager . setScreen ( this . inventoryScreen ) ; this . open = _BOOL ; }
1605	public boolean isPronounceable ( String word ) { String lowerCaseWord = word . toLowerCase ( ) ; return ( prefixFSM . accept ( lowerCaseWord ) && suffixFSM . accept ( lowerCaseWord ) ) ; }
1608	public TapTarget dimColor ( @ ColorRes int color ) { this . dimColor = color ; return this ; }
1635	public static boolean isAssignableValue ( Class type , Object value ) { Assert . notNull ( type , _CHAR Type must not be _NULL _CHAR ) ; return ( value != _NULL ? isAssignable ( type , value . getClass ( ) ) : ! type . isPrimitive ( ) ) ; }
1640	public void startRecordingAudio ( String id , String file ) { AudioPlayer audio = getOrCreatePlayer ( id , file ) ; audio . startRecording ( file ) ; }
1642	public Builder updateWhenIdle ( Boolean updateWhenIdle ) { this . updateWhenIdle = updateWhenIdle ; return this ; }
1643	public void reset ( ) { fSubGroupsB . clear ( ) ; fSubGroups . clear ( ) ; }
1645	public static < K , V > Type < Entry < K , V >> entryType ( Type < ? extends Map < K , V >> mapType ) { Type < ? > type = TypeFactory . valueOf ( Entry . class , mapType . getActualTypeArguments ( ) ) ; return ( Type < Entry < K , V >> ) type ; }
1658	private void addToMap ( LocatorReg reg ) { undiscoveredLocators . add ( reg ) ; queueDiscoveryTask ( reg ) ; }
1668	@ Override public void onRenderSurfaceSizeChanged ( GL10 gl , int width , int height ) { super . onRenderSurfaceSizeChanged ( gl , width , height ) ; sceneCameraConfigured = _BOOL ; }
1682	public void delete ( String id ) { log . debug ( _CHAR Request to delete Pet : { } _CHAR , id ) ; petRepository . delete ( UUID . fromString ( id ) ) ; }
1687	@ Override protected void onDestroy ( ) { super . onDestroy ( ) ; resetData ( ) ; }
1689	public void remove ( Vertex v ) throws Exception { if ( hVertexTypes . containsKey ( v ) ) hVertexTypes . remove ( v ) ; super . remove ( v ) ; }
1695	public Bundler putFloatArray ( String key , float [ ] value ) { bundle . putFloatArray ( key , value ) ; return this ; }
1712	public static FloatBuffer createVector3Buffer ( int vertices ) { FloatBuffer vBuff = createFloatBuffer ( _NUM * vertices ) ; return vBuff ; }
1720	@ SubscribeEvent public void saveFoodSystem ( PlayerLoggedOutEvent event ) { if ( ! ( event . player . getFoodStats ( ) instanceof BWMFoodStats ) ) return ; event . player . getFoodStats ( ) . writeNBT ( event . player . getEntityData ( ) ) ; }
1721	public boolean isBoolean ( String key ) { Object val = get ( key ) ; return val instanceof Boolean ; }
1726	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR REAL_WEATHER \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
1744	public void readExternal ( ObjectInput in ) throws IOException , ClassNotFoundException { x = in . readFloat ( ) ; y = in . readFloat ( ) ; }
1752	public static Map < String , Object > updateImage ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = updateImageMethod ( dctx , context ) ; return result ; }
1756	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
1759	public RevealBuilder withTranslateDuration ( final int translateDuration ) { this . mTranslateDuration = translateDuration ; return this ; }
1763	protected final void fireColumnEvent ( int type , int start , int end ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , type , start , end ) ; }
1764	public Builder materialDesignInDisabledSteps ( boolean materialDesignInDisabledSteps ) { this . materialDesignInDisabledSteps = materialDesignInDisabledSteps ; return this ; }
1780	public void stopRecording ( ) { m_line . stop ( ) ; m_line . close ( ) ; }
1783	protected void addOnPropertyChangedCallback ( Observable . OnPropertyChangedCallback callback ) { onPropertyChangedCallbacks . add ( callback ) ; getViewModel ( ) . addOnPropertyChangedCallback ( callback ) ; }
1787	private static void mockPackPanel ( JPanel panel ) { panel . setSize ( panel . getPreferredSize ( ) ) ; panel . doLayout ( ) ; }
1788	public EntityQuery where ( EntityCondition ... entityCondition ) { this . whereEntityCondition = EntityCondition . makeCondition ( Arrays . asList ( entityCondition ) ) ; return this ; }
1795	public static float calculateLeft ( float top , float right , float bottom , float targetAspectRatio ) { final float height = bottom - top ; return right - ( targetAspectRatio * height ) ; }
1801	public boolean contains ( Object o ) { Object [ ] elements = getArray ( ) ; return indexOf ( o , elements , _NUM , elements . length ) >= _NUM ; }
1814	public void write ( DataOutput out ) throws IOException { WritableUtils . writeVInt ( out , length ) ; out . write ( bytes , _NUM , length ) ; }
1817	private void updateButtonState ( boolean dataChanged ) { btnApply . setEnabled ( dataChanged ) ; btnRevert . setEnabled ( dataChanged ) ; }
1821	@ Override public void onSaveInstanceState ( Bundle outState ) { super . onSaveInstanceState ( outState ) ; outState . putString ( POKE_MODEL_STATE_KEY , new Gson ( ) . toJson ( mPokeModel ) ) ; }
1830	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
1832	public Builder conditionalReduction ( String column , String outputName , ReduceOp reduction , Condition condition ) { this . conditionalReductions . put ( column , new ConditionalReduction ( column , outputName , reduction , condition ) ) ; return this ; }
1833	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
1847	public Builder inertiaThreshold ( Number inertiaThreshold ) { this . inertiaThreshold = inertiaThreshold ; return this ; }
1851	public Expression bindVariable ( Value var , Value coll ) { _joinBindings . put ( var . getName ( ) , coll . getName ( ) ) ; return new BindVariableExpression ( ) ; }
1871	public static X509Certificate decodeCertificate ( byte [ ] certificateBytes ) throws UaException { Preconditions . checkNotNull ( certificateBytes , _CHAR certificateBytes can not be _NULL _CHAR ) ; return decodeCertificate ( new ByteArrayInputStream ( certificateBytes ) ) ; }
1874	@ Override public final Node namedItem ( String name ) { if ( name == _NULL ) throw new NullPointerException ( _CHAR HTM013 Argument _CHAR is _NULL . _CHAR ) ; return namedItem ( _topLevel , name ) ; }
1882	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_about ) ; }
1888	public void reinitialiseNode ( int nodeId ) { this . zwaveNodes . remove ( nodeId ) ; addNode ( nodeId ) ; }
1895	public Builder bufferSize ( int bufferSize ) { this . _bufferSize = bufferSize ; return this ; }
1896	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . getFirstPC ( ) == _NUM && viewer . getPcoaTab ( ) . getSecondPC ( ) == _NUM && ! viewer . getPcoaTab ( ) . isIs3dMode ( ) ; }
1906	public Bundler putSerializable ( String key , Serializable value ) { bundle . putSerializable ( key , value ) ; return this ; }
1910	public static final void emoteStartWalking ( Npc owner ) { owner . setState ( CreatureState . WALKING ) ; PacketSendUtility . broadcastPacket ( owner , new SM_EMOTION ( owner , EmotionType . WALK ) ) ; }
1932	@ Override protected void onPreExecute ( ) { mCurrentDialog = IndeterminateProgressDialog . newInstance ( R . string . wait_a_moment , _BOOL ) ; mCurrentDialog . show ( getSupportFragmentManager ( ) , WAIT_DIALOG_TAG ) ; }
1946	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR ZHISHU \ _CHAR ( _CHAR + _CHAR \ _CHAR AREAID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR NAME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR LEVEL \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR TEXT \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR DETAIL \ _CHAR TEXT ) ; _CHAR ) ; }
1950	public void updateWithItemHandler ( String key ) { remove ( key ) ; put ( key , itemHandler . get ( key ) ) ; }
1971	@ Override public void onSensorSelectionClosed ( DialogFragment dialog ) { Log . d ( TAG , _CHAR Sensor selection closed _CHAR ) ; sensorSelectionDialog = _NULL ; }
1997	public void squareSize ( float squareSize ) { this . squareSize = squareSize ; invalidate ( ) ; }
1998	public static void showImage ( Context context , @ NonNull String imageUrl , String title ) { if ( context == _NULL ) return ; showImage ( context , imageView , imageUrl , title ) ; }
2006	public void onSaveInstanceState ( Bundle outState ) { outState . putBoolean ( _CHAR SlidingActivityHelper . open _CHAR , mSlidingMenu . isMenuShowing ( ) ) ; outState . putBoolean ( _CHAR SlidingActivityHelper . secondary _CHAR , mSlidingMenu . isSecondaryMenuShowing ( ) ) ; }
2048	public void addInterface ( CP ifc ) { addCPItem ( ifc ) ; interfaces . addElement ( ifc ) ; }
2059	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; serviceID . writeBytes ( out ) ; }
2060	public JSONObject put ( String key , int value ) throws JSONException { this . put ( key , new Integer ( value ) ) ; return this ; }
2080	public void dispose ( ) { if ( metadata != _NULL ) metadata . dispose ( ) ; if ( index != _NULL ) index . dispose ( ) ; }
2087	@ NotNull public ImageOverlayBuilder toClipboard ( ) { new CopyImagetoClipBoard ( ) . copyImage ( bufferedImage ) ; return this ; }
2116	public static boolean extractTimeZoneAndTestDate ( Date date , String filter ) { String [ ] timezoneAndFilter = extractTimeZone ( filter ) ; return StringUtils . containsIgnoreCase ( formatDateTimeAsUI ( convertDateToOffsetDateTime ( date ) , timezoneAndFilter [ _NUM ] ) , timezoneAndFilter [ _NUM ] ) ; }
2121	public AdaptableList add ( IAdaptable a ) { children . add ( a ) ; return this ; }
2123	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
2134	public boolean showDialog ( ) { dialog . setVisible ( _BOOL ) ; return ! canceled ; }
2139	private static void addToParentGroup ( final ConfiguredConnectionGroupDetails groupDetails , final ConfiguredConnectionGroupDetails parent ) { groupDetails . setGroup ( new ConnectionGroupReference ( parent ) ) ; parent . getSubgroups ( ) . add ( new ConnectionGroupReference ( groupDetails ) ) ; }
2143	public static URI toLocation ( String source , String table ) { URI sourceUri = URI . create ( source ) ; return toLocation ( sourceUri , table ) ; }
2148	@ NotNull public DeletePersonGroupAction deleteGroup ( @ NotNull String personGroupId ) { Validation . validate ( personGroupId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR personGroupId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new DeletePersonGroupAction ( cognitiveContext , personGroupId ) ; }
2158	public static void printf ( Locale locale , String format , Object ... args ) { out . printf ( locale , format , args ) ; out . flush ( ) ; }
2165	@ Override public void onRequestError ( int code , String message ) { progressDialog . cancel ( ) ; showMessage ( message ) ; }
2177	public void updateWithItemHandler ( K key ) { remove ( key ) ; put ( key , itemHandler . get ( key ) ) ; }
2184	public ABTester doNotRetain ( ) { noSave = _BOOL ; return this ; }
2194	public void startSwipe ( RecyclerView . ViewHolder viewHolder ) { initializeItemTouchHelper ( ) ; mDefaultItemTouchHelper . startSwipe ( viewHolder ) ; }
2196	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
2198	@ Override public void onConfirmation ( String callerTag ) { ComponentsGetter cg = ( ComponentsGetter ) getActivity ( ) ; cg . getFileOperationsHelper ( ) . removeFiles ( mTargetFiles , _BOOL ) ; }
2200	protected static void parseAndIgnoreWhitespace ( final String source , final ParsePosition pos ) { parseNextCharacter ( source , pos ) ; pos . setIndex ( pos . getIndex ( ) - _NUM ) ; }
2206	protected void writePixels ( ) throws IOException { Encoder encoder = new Encoder ( width , height , indexedPixels , colorDepth ) ; encoder . encode ( out ) ; }
2213	public MapCursor addCursor ( MapCursor cursor ) { cursors . add ( cursor ) ; return cursor ; }
2215	public Builder className ( String className ) { this . className = className ; return this ; }
2220	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; registrarID . writeBytes ( out ) ; }
2224	public void changeSpaceState ( int state , boolean electable , boolean replicable ) { _spaceState . setState ( state ) ; modifyLookupAttributes ( new Entry [ ] { new State ( ) } , new Entry [ ] { new State ( state , electable , replicable ) } ) ; }
2248	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR ZHISHU \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
2258	private void scheduleValueProcessing ( ValuePropagationTask vpt ) { if ( executor . isTerminating ( ) ) return ; executor . execute ( vpt ) ; }
2260	synchronized void checkStateAndTransmit ( ) throws BKTransmitException , WriteException , InvalidEnvelopedEntryException , LockingException { checkStateBeforeTransmit ( ) ; transmit ( ) ; }
2263	protected Object invokeRemote ( Object proxy , final IMethod method , Object [ ] args ) throws Throwable { ProxyInvocationHandler remoteInvocationHandler = getInvocationHandler ( ) ; return remoteInvocationHandler . invoke ( proxy , method , args ) ; }
2267	@ Override protected final void addContentSpecToElement ( XMLElementDecl elementDecl ) { int contentSpec = fGroupIndexStackSizes [ _NUM ] > _NUM ? fGroupIndexStack [ _NUM ] [ _NUM ] : - _NUM ; setContentSpecIndex ( fCurrentElementIndex , contentSpec ) ; }
2303	public Builder animate ( Boolean animate ) { this . animate = animate ; return this ; }
2317	public void leftClick ( int x , int y , int delay ) throws InterruptedException { move ( x , y ) ; click ( InputEvent . BUTTON1_MASK , delay ) ; }
2334	public Bundler putInt ( String key , int value ) { bundle . putInt ( key , value ) ; return this ; }
2338	@ Override public void onCanceled ( T data ) { super . onCanceled ( data ) ; onReleaseResources ( data ) ; }
2346	public static void registerFuel ( ItemStack stack , boolean checkNBT , int duration ) { Predicate < ItemStack > matcher = ItemStackDictionary . matcherOf ( stack , checkNBT ) ; OpenModLoader . getEventBus ( ) . register ( FuelEvent . class , _NULL ) ; }
2352	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - nMin = # ] [ - nMax = # ] [ - dist = # ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] [ - docClass = ... ] [ - compClass = ... ] _CHAR ) ; System . err . println ( _CHAR nMin = # \ tMin n - gram size .\ nnMax = # \ tMax n - gram size .\ n _CHAR + _CHAR dist = # \ tN - gram window .\ n _CHAR + _CHAR - o = outFile \ tThe file to output data . Default is stdout .\ n _CHAR + _CHAR - t = # \ tNumber of threads . Defaults to number of available processors declared by system .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR - docClass = ... \ tA java class identifier to use as Document class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramDocument \ n _CHAR + _CHAR - compClass = ... \ tA java class identifier to use as Comparator class . _CHAR + _CHAR Defaults to jinsect . documentModel . StandardDocumentComparator \ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
2353	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
2390	public Builder buttonBackgroundColor ( int buttonBackgroundColor ) { this . buttonBackgroundColor = buttonBackgroundColor ; return this ; }
2393	public void clearMemoryCache ( ) { checkConfiguration ( ) ; configuration . memoryCache . clear ( ) ; }
2394	public Builder alphaOfDisabledElements ( float alpha ) { this . alphaOfDisabledElements = alpha ; return this ; }
2431	public Builder clientCiphers ( Collection < String > clientCiphers ) { this . clientCiphers = clientCiphers ; return this ; }
2432	public void updateData ( LegendOptionData newOptionData ) { data = newOptionData ; populate ( newOptionData ) ; }
2455	String determineInstallSource ( ) { boolean isInSystemImage = ( getApplicationFlags ( ) & ApplicationInfo . FLAG_SYSTEM ) != _NUM ; return isInSystemImage ? INSTALL_SOURCE_SYSTEM : INSTALL_SOURCE_ORGANIC ; }
2459	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
2461	public void destroy ( ) { mContextControl . destroy ( ) ; mSearchTermControl . destroy ( ) ; }
2471	public void zoom ( float percentage ) { double zoomDelta = mViewRange . getLength ( ) * percentage ; requestZoom ( mViewRange . getMin ( ) - zoomDelta , mViewRange . getMax ( ) + zoomDelta ) ; }
2491	public void loading ( ) { mHintView . setVisibility ( View . GONE ) ; mProgressBar . setVisibility ( View . VISIBLE ) ; }
2497	@ Override public WebDriver frame ( String nameOrId ) { frameSwitcher . putFramePathOnStack ( nameOrId ) ; return targetLocator . frame ( nameOrId ) ; }
2499	public AemListItem down ( ) { buttonDown . click ( ) ; return this ; }
2508	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator - do = ( char | word | all ) [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - wordMin = # ] [ - wordMax = # ] [ - wordDist = # ] [ - charMin = # ] [ - charMax = # ] [ - charDist = # ] [ - o = outFile ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] _CHAR ) ; System . err . println ( _CHAR wordMin = # \ tMin word n - gram size .\ nwordMax = # \ tMax word n - gram size .\ nwordDist = # \ tWord n - gram window \ n _CHAR + _CHAR charMin = # \ tMin char n - gram size .\ ncharMax = # \ tMax char n - gram size .\ ncharDist = # \ tChar n - gram window .\ n _CHAR + _CHAR o = outFile \ tThe file to output data . Default is stdout .\ n - t = # \ tNumber of threads . Defaults to _NUM .\ n _CHAR + _CHAR s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR use = o | d \ tUse [ o ] ccurences or average [ d ] istance to assign weights to the graph . Defaults to o .\ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
2510	public Builder styles ( String styles ) { this . styles = styles ; return this ; }
2513	public DefaultHibernateSpaceDataSourceConfigurer initialLoadChunkSize ( int initalLoadChunkSize ) { this . initialLoadChunkSize = initalLoadChunkSize ; return this ; }
2523	public StatelessHibernateSpaceDataSourceConfigurer fetchSize ( int fetchSize ) { this . fetchSize = fetchSize ; return this ; }
2527	@ Override public boolean next ( ) { while ( s . next ( ) ) if ( pred . isSatisfied ( s ) ) return _BOOL ; return _BOOL ; }
2529	public static double standardDeviation ( double [ ] data , int opt ) { if ( opt == _NUM ) return Math . sqrt ( variance ( data , opt ) ) ; else return Math . sqrt ( variance ( data , opt ) ) ; }
2530	public boolean isApplicable ( ) { final SamplesViewer samplesViewer = ( ( SamplesViewer ) getViewer ( ) ) ; return samplesViewer != _NULL && samplesViewer . getSamplesTable ( ) . getNumberOfSelectedSamples ( ) > _NUM ; }
2542	public SiteAdminPage clickYesOnConfirmationWindow ( ) { siteAdminConfirmationWindow . confirm ( ) ; return this ; }
2553	public void add ( String expr , FontAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
2559	public static boolean hasExtension ( File file , String extension ) { String noDotExtension = extension . startsWith ( _CHAR . _CHAR ) ? extension . substring ( _NUM ) : extension ; return Files . getFileExtension ( file . getName ( ) ) . equalsIgnoreCase ( noDotExtension ) ; }
2561	private MouseGesture processCurrentData ( ) throws IOException { int size = coordinates . size ( ) ; return mouseGestureRecognizer . classifyGesture ( coordinates , size ) ; }
2579	public Clock startClock ( ) { this . start ( ) ; return this ; }
2587	public Expression notMatches ( Value str , Value regexp , String single , String multi , String escape ) { if ( escape != _NULL ) throw new IllegalArgumentException ( _CHAR JPQL ESCAPE keyword is not supported . '' ) ; return new NotMatchesExpression ( str , regexp ) ; }
2605	public static void showLogin ( android . support . v4 . app . Fragment fragment , int requestCode ) { Intent intent = new Intent ( fragment . getContext ( ) , LoginActivity . class ) ; fragment . startActivityForResult ( intent , requestCode ) ; }
2610	protected boolean isVertical ( @ NotNull NlComponent component ) { String orientation = component . getAttribute ( ANDROID_URI , ATTR_ORIENTATION ) ; return VALUE_VERTICAL . equals ( orientation ) ; }
2612	public int createTexture ( ) { if ( mFullScreen == _NULL ) throw new IllegalStateException ( _CHAR FullScreen is _NULL , please invoke initialize _CHAR ) ; return mFullScreen . createTexture ( ) ; }
2621	public void Notify ( Object oSender , Object oParams ) { double dProgress = ( ( Double ) oParams ) . doubleValue ( ) ; System . err . print ( _CHAR Comparison _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , dProgress ) + _CHAR \ r _CHAR ) ; }
2627	public static boolean isSdcardExist ( ) { if ( android . os . Environment . getExternalStorageState ( ) . equals ( android . os . Environment . MEDIA_MOUNTED ) ) return _BOOL ; else return _BOOL ; }
2646	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
2649	public Builder worldCopyJump ( Boolean worldCopyJump ) { this . worldCopyJump = worldCopyJump ; return this ; }
2654	public AemToolbar edit ( ) { click ( MenuOption . EDIT ) ; return this ; }
2656	public void add ( IResource [ ] resources , int depth , IProgressMonitor progress ) throws SVNException { AddResourcesCommand command = new AddResourcesCommand ( getSVNWorkspaceRoot ( ) , resources , depth ) ; command . run ( progress ) ; }
2686	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
2693	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
2698	public T remove ( ServletRequest request , Map < String , Object > expandContext ) { AttributeAccessor < T > aa = new AttributeAccessor < T > ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; return aa . remove ( request ) ; }
2700	private static String readFile ( File file , Charset encoding ) throws IOException { byte [ ] encoded = Files . readAllBytes ( Paths . get ( file . getAbsolutePath ( ) ) ) ; return new String ( encoded , encoding ) ; }
2702	public Builder stroke ( Boolean stroke ) { this . stroke = stroke ; return this ; }
2705	public Builder type ( final String typeName ) { this . propertyTypeName = typeName ; return this ; }
2721	private HarRequest createHarRequestForHttpRequest ( HttpRequest httpRequest ) { String url = getFullUrl ( httpRequest ) ; return new HarRequest ( httpRequest . getMethod ( ) . toString ( ) , url , httpRequest . getProtocolVersion ( ) . text ( ) ) ; }
2722	public EntityQuery distinct ( ) { this . distinct = _BOOL ; return this ; }
2727	private String resolveLoggerProperty ( LogManager manager , String property ) { String propertyKey = HANDLER_PROP_PREFIX + property ; return System . getProperty ( propertyKey , manager . getProperty ( propertyKey ) ) ; }
2739	public Builder paddingTopLeft ( Point paddingTopLeft ) { this . paddingTopLeft = paddingTopLeft ; return this ; }
2748	public Bundler putDoubleArray ( String key , double [ ] value ) { bundle . putDoubleArray ( key , value ) ; return this ; }
2752	public boolean isValidGeometricNode ( Node sparkNode ) { IVarAbstraction pNode = consG . get ( sparkNode ) ; return pNode != _NULL && pNode . reachable ( ) ; }
2759	public static void print ( byte x ) { out . print ( x ) ; out . flush ( ) ; }
2761	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
2774	public static void with ( @ NonNull Application application , @ NonNull ShakeDelegate delegate ) { LifecycleCallbacks lifecycleCallbacks = new LifecycleCallbacks ( application , delegate ) ; application . registerActivityLifecycleCallbacks ( lifecycleCallbacks ) ; }
2778	public boolean isEdgeVector ( int edgeIndex ) { String edgeValue = getFeature ( edgeIndex ) . toString ( ) ; return ( ! edgeValue . equals ( FeatureDefinition . NULLVALUE ) ) ; }
2782	public void lerp ( Vector2 dp , double da , double alpha ) { this . translate ( dp . x * alpha , dp . y * alpha ) ; this . rotate ( da * alpha , this . getTranslationX ( ) , this . getTranslationY ( ) ) ; }
2789	public CatchOptions noMasterBall ( boolean skipMasterBall ) { this . skipMasterBall = skipMasterBall ; return this ; }
2797	private void removeExtentEntry ( ) { extentModel . removeEntries ( extentTable . getSelectionModel ( ) . getMinSelectionIndex ( ) , extentTable . getSelectionModel ( ) . getMaxSelectionIndex ( ) ) ; removeExtentButton . setEnabled ( _BOOL ) ; }
2798	public int addAdjustment ( GenericValue adjustment ) { itemAdjustments . add ( adjustment ) ; return itemAdjustments . indexOf ( adjustment ) ; }
2812	private JobField extractJobField ( Matcher tokenizedQuery ) throws BadFilterException { String fieldName = tokenizedQuery . group ( _NUM ) ; return Arrays . stream ( DefaultJobField . values ( ) ) . filter ( _NULL ) . findFirst ( ) . orElseThrow ( _NULL ) ; }
2821	public boolean isApplicable ( ) { ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return viewer . getChartData ( ) . getNumberOfSeries ( ) > _NUM && viewer . getChartSelection ( ) . getSelectedSeries ( ) . size ( ) < viewer . getChartData ( ) . getNumberOfSeries ( ) ; }
2831	public void terminateTimer ( ) { timer . cancel ( ) ; running = _BOOL ; }
2862	private boolean isOptionDisabled ( UrlFilterRuleOption option ) { loadRuleProperties ( ) ; return disabledOptions != _NULL && disabledOptions . contains ( option ) ; }
2863	public static boolean isArrowKey ( KeyEvent e ) { int code = e . getKeyCode ( ) ; return code >= KeyEvent . VK_LEFT && code <= KeyEvent . VK_DOWN ; }
2866	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
2871	public JSONArray put ( int index , double value ) throws JSONException { this . put ( index , new Double ( value ) ) ; return this ; }
2891	public Builder addColumnsDouble ( String ... columnNames ) { for ( String s : columnNames ) addColumnDouble ( s ) ; return this ; }
2892	public void addProvider ( AXmlNode node ) { if ( providers . isEmpty ( ) ) providers = new ArrayList < AXmlNode > ( ) ; providers . add ( node ) ; }
2901	protected void updateRoot ( int pNum ) { this . rootPageNum = pNum ; writeHeader ( ) ; }
2916	public Builder zoomInText ( String zoomInText ) { this . zoomInText = zoomInText ; return this ; }
2921	public ObjectName preRegister ( MBeanServer mbs , ObjectName objName ) throws Exception { m_mbeanServer = mbs ; return objName ; }
2943	private synchronized void applyException ( Throwable t ) { exception = t ; reschedule ( FAILURE_RESCHEDULE_DELAY ) ; }
2951	public static ExpectedCondition < Boolean > hasNodeProperty ( final Session session , final String nodePath , final String propertyName ) { LOG . debug ( _CHAR Checking if node ' { } ' has property ' { } ' '' , nodePath , propertyName ) ; return _NULL ; }
2960	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
2991	protected void removeAt ( int index ) { _values [ index ] = _NUM ; super . removeAt ( index ) ; }
3004	public synchronized void end ( ) { this . active = _BOOL ; this . beginPosition = _NULL ; }
3005	@ Override public void onChanged ( boolean status ) { isConnected = status ; inflateConnectivity ( ) ; }
3014	public PacketBuilder send ( String id ) { if ( ! specs . containsKey ( id ) ) throw new IllegalArgumentException ( _CHAR Invalid PacketSpec name _CHAR + id ) ; return new PacketBuilder ( this , specs . get ( id ) ) ; }
3015	public void addToOptionBox ( Box optionBox ) { this . optionBox = optionBox ; updateVendorOptionPanels ( vendorOptionVersionsList ) ; }
3023	public void add ( String [ ] str ) { for ( int i = _NUM ; i < str . length ; i ++ ) add ( str [ i ] ) ; hasChanged = _BOOL ; }
3040	@ Override public void clear ( ) { super . clear ( ) ; mIconUrlToIconMap . clear ( ) ; }
3059	public Iterator < SootMethod > methodIterator ( ) { checkLevel ( SIGNATURES ) ; return methodList . iterator ( ) ; }
3060	public synchronized ZooKeeperClientBuilder uri ( URI uri ) { this . zkServers = DLUtils . getZKServersFromDLUri ( uri ) ; return this ; }
3066	@ Override public void stop ( ) throws ContainerException { this . pollTimer . shutdown ( ) ; Debug . logWarning ( _CHAR stop JavaMail poller _CHAR , module ) ; }
3084	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
3089	public void addInitialSeeds ( Unit unit , Set < Abstraction > seeds ) { if ( this . initialSeeds . containsKey ( unit ) ) this . initialSeeds . get ( unit ) . addAll ( seeds ) ; else this . initialSeeds . put ( unit , new HashSet < Abstraction > ( seeds ) ) ; }
3095	@ Override public void notifyElementUpdated ( final Tag tag ) { List < Alarm > alarmList = evaluateAlarms ( tag ) ; notifyListeners ( tag , alarmList ) ; }
3113	public boolean isActive ( ) { Date now = new Date ( ) ; return startsAt != _NULL && endsAt != _NULL && now . after ( startsAt ) && now . before ( endsAt ) ; }
3121	private boolean isOptionEnabled ( UrlFilterRuleOption option ) { loadRuleProperties ( ) ; return enabledOptions != _NULL && enabledOptions . contains ( option ) ; }
3123	public void dumpASCII ( String path ) throws IOException { Writer writer = new FileWriter ( path , _BOOL ) ; getWave ( ) . dump ( writer ) ; }
3146	@ Override public void beforeFirst ( ) { ss1 . beforeFirst ( ) ; ss2 . beforeFirst ( ) ; }
3147	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { UserInfoDao . createTable ( db , ifNotExists ) ; BookInfoDao . createTable ( db , ifNotExists ) ; }
3151	public int findLastVisibleItemPosition ( ) { final View child = findOneVisibleChild ( layoutManager . getChildCount ( ) - _NUM , - _NUM , _BOOL , _BOOL ) ; return child == _NULL ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }
3182	public void deleteItem ( final int _index ) { this . model . remove ( _index ) ; notifyItemRemoved ( _index ) ; }
3189	private void updateButtonState ( ) { Button clearButton = mDialog . getButton ( AlertDialog . BUTTON_POSITIVE ) ; if ( clearButton != _NULL ) clearButton . setEnabled ( ! mSelectedOptions . isEmpty ( ) ) ; }
3205	public void processUtterance ( Utterance utterance ) throws ProcessException { fixPhoneme_AH ( utterance ) ; englishPostLex . processUtterance ( utterance ) ; }
3208	private void createUI ( ) { readConfigFileNoScrollPane ( _NULL , this , _CHAR symboltype / TTFSymbol . xml _CHAR ) ; registerForTextFieldButton ( FieldIdEnum . TTF_SYMBOL , this ) ; }
3210	public static Map < String , Object > updateDataResource ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = updateDataResourceMethod ( dctx , context ) ; return result ; }
3226	public Builder html ( String html ) { this . html = html ; return this ; }
3234	public boolean isEmpty ( ) { if ( getRbacClass ( ) == _NULL && getRbacDevice ( ) == _NULL && getRbacProperty ( ) == _NULL ) return _BOOL ; return _BOOL ; }
3241	public void beforeFirst ( ) { close ( ) ; currentBlkNum = _NUM ; }
3242	private void resetOutputBuilders ( ) { ansi = Ansi . ansi ( ) ; stringBuilder = new StringBuilder ( ) ; }
3248	public String formatText ( String text ) { text = StringEscapeUtils . escapeHtml ( text ) ; return text . replaceAll ( url , _CHAR $ _NUM < a rel =_CHAR href = _CHAR target =_CHAR > $ _NUM < / a > _CHAR ) . replaceAll ( tweep , _CHAR < a rel =_CHAR href =_CHAR target =_CHAR > $ _NUM < / a > _CHAR ) . replaceAll ( hashtag , _CHAR < a rel =_CHAR href =_CHAR target =_CHAR > $ _NUM < / a > _CHAR ) ; }
3255	public void open ( ) { select ( ) ; actions . doubleClick ( pageNumber ) . perform ( ) ; }
3260	public void add ( String expr , double size ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; add ( p , size ) ; }
3261	public static boolean bookmarkNodeExists ( Context context , long nodeId ) { Boolean result = chromeBrowserProviderCall ( Boolean . class , ChromeBrowserProvider . CLIENT_API_BOOKMARK_NODE_EXISTS , context , argsToBundle ( nodeId ) ) ; return result != _NULL ? result . booleanValue ( ) : _BOOL ; }
3263	protected void addOnPropertyChangedCallback ( Observable . OnPropertyChangedCallback callback ) { onPropertyChangedCallbacks . add ( callback ) ; getViewModel ( ) . addOnPropertyChangedCallback ( callback ) ; }
3265	public IntIterator rangeSortedBy ( String field , long lo , long hi , int indexType ) { Index index = getIndex ( field , long . class , _BOOL ) ; return index . rows ( lo , hi , indexType ) ; }
3266	public void loadDataStringFromFile ( String sFilename ) throws java . io . IOException , java . io . FileNotFoundException { String sDataString = utils . loadFileToStringWithNewlines ( sFilename ) ; setDataString ( sDataString ) ; }
3273	@ ExceptionHandler ( ObjectNotFoundException . class ) @ ResponseStatus ( value = HttpStatus . NOT_FOUND ) public @ ResponseBody ErrorResponse resolveDocumentNotFoundException ( ObjectNotFoundException e ) throws IOException { if ( logger . isLoggable ( Level . FINE ) ) logger . fine ( _CHAR space id query has no results , returning error response : _CHAR + e . getMessage ( ) ) ; return new ErrorResponse ( new ErrorMessage ( e . getMessage ( ) ) ) ; }
3274	public JSONArray put ( int index , int value ) throws JSONException { this . put ( index , new Integer ( value ) ) ; return this ; }
3275	public void addService ( String service , String className ) { PluginEntry entry = new PluginEntry ( service , className , _BOOL ) ; this . addService ( entry ) ; }
3288	public static int saturate ( int c , float saturation ) { float [ ] hsb = Color . RGBtoHSB ( red ( c ) , green ( c ) , blue ( c ) , _NULL ) ; return ColorLib . hsb ( hsb [ _NUM ] , saturation , hsb [ _NUM ] ) ; }
3290	protected void removeAt ( int index ) { _values [ index ] = _NUM ; super . removeAt ( index ) ; }
3310	public static WordRelation createWordRelation ( Utterance utterance , TokenToWords tokenToWords ) { Relation relation = utterance . createRelation ( Relation . WORD ) ; return new WordRelation ( relation , tokenToWords ) ; }
3336	public static void registerKryoClasses ( SparkConf conf ) { List < Class < ? >> classes = Arrays . asList ( ( Class < ? > ) BooleanWritable . class , ByteWritable . class , DoubleWritable . class , FloatWritable . class , IntWritable . class , LongWritable . class , NullWritable . class , Text . class ) ; conf . registerKryoClasses ( ( Class < ? > [ ] ) classes . toArray ( ) ) ; }
3337	@ VisibleForTesting static boolean isPrecachingEnabled ( Context context ) { SharedPreferences prefs = PreferenceManager . getDefaultSharedPreferences ( context ) ; return prefs . getBoolean ( PREF_IS_PRECACHING_ENABLED , _BOOL ) ; }
3339	public static WxBatchGetMaterialResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxBatchGetMaterialResult . class ) ; }
3351	public void allowAll ( PermissionFlag flag ) { generalPermissions . remove ( flag ) ; strictPermission . getOrDefault ( flag , emptyMap ( ) ) . values ( ) . removeIf ( _NULL ) ; }
3368	public void destroyView ( ) throws CanceledException { MeganProperties . removePropertiesListListener ( getJMenuBar ( ) . getRecentFilesListener ( ) ) ; super . destroyView ( ) ; }
3372	public void addTaintPropagationHandler ( TaintPropagationHandler handler ) { if ( this . taintPropagationHandlers == _NULL ) this . taintPropagationHandlers = new HashSet < > ( ) ; this . taintPropagationHandlers . add ( handler ) ; }
3375	@ Override public void undo ( Transaction tx ) { LogSeqNum lsn = tx . recoveryMgr ( ) . logLogicalAbort ( this . txNum , this . lsn ) ; VanillaDb . logMgr ( ) . flush ( lsn ) ; }
3391	@ Override public int compareTo ( byte [ ] other , int off , int len ) { ensureTextSet ( ) ; return _comparatorInstance . compare ( getBytes ( ) , _NUM , getLength ( ) , other , off , len ) ; }
3395	public void createFile ( FiltersInfo newFilterInfo ) throws Exception { filterInfo = newFilterInfo ; flush ( newFilterInfo ) ; }
3403	public ViewsFinder not ( ) { this . complementNextWithFilter = _BOOL ; return this ; }
3407	protected long scaleTime ( int reqSampleRate , long targetTimeInSamples ) { if ( reqSampleRate == sampleRate ) return ( targetTimeInSamples ) ; return ( Math . round ( ( double ) ( reqSampleRate ) * ( double ) ( targetTimeInSamples ) / ( sampleRate ) ) ) ; }
3432	public static float calculateTop ( float left , float right , float bottom , float targetAspectRatio ) { final float width = right - left ; return bottom - ( width / targetAspectRatio ) ; }
3434	public static double randomStep ( ) { Random random = new Random ( ) ; return random . nextDouble ( ) / _NUM . _NUM ; }
3439	public void importXLIFF ( Repository repository , String xliffContent , boolean updateTM ) { ImportExportedXliffStep importExportedXliffStep = new ImportExportedXliffStep ( repository , xliffContent , updateTM ) ; importXLIFF ( importExportedXliffStep , xliffContent ) ; }
3442	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
3443	public Timestamp recalculateEstimatedCompletionDate ( ) { this . updateCompletionDate = _BOOL ; return recalculateEstimatedCompletionDate ( Long . valueOf ( _NUM ) , estimatedStartDate ) ; }
3448	@ Override public boolean addAll ( Collection < ? extends T > c ) { for ( T t : c ) add ( t ) ; return _BOOL ; }
3449	public EventBuilder async ( ) { this . event . setAsync ( _BOOL ) ; return this ; }
3458	private void init ( ) { LOGGER . debug ( _CHAR Initializing TestBase _CHAR ) ; TestBase . pingSuccess = _BOOL ; }
3459	public Bundler putParcelableArray ( String key , Parcelable [ ] value ) { bundle . putParcelableArray ( key , value ) ; return this ; }
3464	@ Override public void onSaveInstanceState ( Bundle outState ) { super . onSaveInstanceState ( outState ) ; outState . putParcelable ( KEY_FILE , mFile ) ; }
3488	public Builder flushIntervalMs ( int flushIntervalMs ) { this . _flushIntervalMicros = TimeUnit . MILLISECONDS . toMicros ( flushIntervalMs ) ; return this ; }
3502	private void updateButtonState ( boolean dataChanged ) { btnApply . setEnabled ( dataChanged ) ; btnRevert . setEnabled ( dataChanged ) ; }
3515	public JSONArray put ( int index , long value ) throws JSONException { put ( index , new Long ( value ) ) ; return this ; }
3532	@ Override public Vector2D toSubSpace ( final Point < Euclidean3D > point ) { final Vector3D p3D = ( Vector3D ) point ; return new Vector2D ( p3D . dotProduct ( u ) , p3D . dotProduct ( v ) ) ; }
3575	public void queryAddASBSet ( long setId ) { ASBSet set = getASBSet ( setId ) ; mHelper . queryAddASBSet ( set . getName ( ) , set . getRank ( ) , set . getHunterType ( ) ) ; }
3582	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
3622	public int findLastVisibleItemPosition ( ) { final View child = findOneVisibleChild ( layoutManager . getChildCount ( ) - _NUM , - _NUM , _BOOL , _BOOL ) ; return child == _NULL ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }
3631	protected void addOnPropertyChangedCallback ( Observable . OnPropertyChangedCallback callback ) { onPropertyChangedCallbacks . add ( callback ) ; getViewModel ( ) . addOnPropertyChangedCallback ( callback ) ; }
3633	public JSONObject put ( String key , Collection < Object > value ) throws JSONException { this . put ( key , new JSONArray ( value ) ) ; return this ; }
3647	public void addString ( String word , Tuple t ) { TrieLeaf leaf = new TrieLeaf ( word , t ) ; addLeaf ( root , leaf , _NUM ) ; }
3648	public CreatePageWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentWindow ) ) ; return this ; }
3679	public void resetViewPortOffsets ( ) { mCustomViewPortEnabled = _BOOL ; calculateOffsets ( ) ; }
3698	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
3700	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
3708	public void unify ( Atomic parentAtom ) { unifyViaAtom ( parentAtom ) ; propagateConstraints ( parentAtom ) ; }
3710	public ContentletQuery addHost ( String hostIdentifier ) { query . append ( _CHAR + conhost : _CHAR + hostIdentifier ) ; return this ; }
3721	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator - do = ( char | word | all ) [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - wordMin = # ] [ - wordMax = # ] [ - wordDist = # ] [ - charMin = # ] [ - charMax = # ] [ - charDist = # ] [ - o = outFile ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] _CHAR ) ; System . err . println ( _CHAR wordMin = # \ tMin word n - gram size .\ nwordMax = # \ tMax word n - gram size .\ nwordDist = # \ tWord n - gram window \ n _CHAR + _CHAR charMin = # \ tMin char n - gram size .\ ncharMax = # \ tMax char n - gram size .\ ncharDist = # \ tChar n - gram window .\ n _CHAR + _CHAR o = outFile \ tThe file to output data . Default is stdout .\ n - t = # \ tNumber of threads . Defaults to _NUM .\ n _CHAR + _CHAR s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR use = o | d \ tUse [ o ] ccurences or average [ d ] istance to assign weights to the graph . Defaults to o .\ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
3734	public Instruction reconstructInstructions ( ) { if ( cfg != _NULL ) return cfg . head ; else return _NULL ; }
3736	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL ; }
3742	@ Override public void updateValue ( String key , Color backgroundColour ) { String value = String . format ( _CHAR % _NUM % s % _NUM % s % _NUM % s % _NUM _CHAR , backgroundColour . getRed ( ) , DELIMETER , backgroundColour . getGreen ( ) , DELIMETER , backgroundColour . getBlue ( ) , DELIMETER , backgroundColour . getAlpha ( ) ) ; updateValue ( key , value ) ; }
3753	public CriteriaHibernateSpaceDataSourceConfigurer useScrollableResultSet ( boolean useScrollableResultSet ) { this . useScrollableResultSet = useScrollableResultSet ; return this ; }
3754	protected void startRecoarding ( ) { coordinates . clear ( ) ; enabled = _BOOL ; }
3755	public void eatKeyword ( String keyword ) { if ( ! matchKeyword ( keyword ) ) throw new BadSyntaxException ( ) ; nextToken ( ) ; }
3757	public void spin ( ) { isSpinning = _BOOL ; spinHandler . sendEmptyMessage ( _NUM ) ; }
3778	public AemDialog open ( final By clickableArea ) { open ( currentScope . findElement ( clickableArea ) ) ; return this ; }
3796	public void requestUpdate ( ) { mRecomputePosition = _BOOL ; mLayout . requestUpdate ( ) ; }
3800	public static boolean isOrSubOf ( Object obj , Class < ? > parentClass ) { Class < ? > objectClass = obj . getClass ( ) ; return isOrSubOf ( objectClass , parentClass ) ; }
3836	public IteratorBuilder eventSessionConfig ( EventSessionConfig eventSessionConfig ) { this . iteratorConfig . setEventSessionConfig ( eventSessionConfig ) ; return this ; }
3841	public void addFixedTimeStatistic ( String message , long timetaken ) { this . timeTaken = timetaken ; this . message = message ; }
3849	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
3861	public void add ( String expr , ShapeAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
3866	@ NotNull public DesignSurfaceFixture requireSelection ( @ NotNull List < NlComponentFixture > components ) { assertEquals ( components , getSelection ( ) ) ; return this ; }
3874	public static long smpteTimecodeToMilliSeconds ( String tc , String unitsInSecStr ) { BigFraction unitsInSec = parseEditRate ( unitsInSecStr ) ; return smpteTimecodeToMilliSeconds ( tc , unitsInSec ) ; }
3892	public String toString ( cp_info constant_pool [ ] ) { cp_info target = constant_pool [ target_index ] ; return target . toString ( constant_pool ) ; }
3893	@ Override public LogSeqNum writeToLog ( ) { List < Constant > rec = buildRecord ( ) ; return logMgr . append ( rec . toArray ( new Constant [ rec . size ( ) ] ) ) ; }
3901	void register ( RTEditTextListener listener , RTMediaFactory < RTImage , RTAudio , RTVideo > mediaFactory ) { mListener = listener ; mMediaFactory = mediaFactory ; }
3930	public static boolean booleanValueVersatile ( Object value , boolean defaultValue ) { Boolean res = booleanValueVersatile ( value ) ; return res != _NULL ? res : defaultValue ; }
3940	public boolean contains ( Object o ) { if ( o == _NULL ) return _BOOL ; return map . containsKey ( o ) ; }
3965	public void zoom ( float scaleX , float scaleY , float xValue , float yValue , AxisDependency axis ) { Runnable job = new ZoomJob ( mViewPortHandler , scaleX , scaleY , xValue , yValue , getTransformer ( axis ) , axis , this ) ; addViewportJob ( job ) ; }
3966	public static void prepareKeysFromSurrogates ( DimColumnFilterInfo filterValues , SegmentProperties segmentProperties , CarbonDimension dimension , DimColumnExecuterFilterInfo dimColumnExecuterInfo ) { byte [ ] [ ] keysBasedOnFilter = getKeyArray ( filterValues , dimension , segmentProperties ) ; dimColumnExecuterInfo . setFilterKeys ( keysBasedOnFilter ) ; }
3971	public static String formatQuantity ( Double quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return formatQuantity ( quantity . doubleValue ( ) ) ; }
3975	public static int sp2px ( Context context , float spValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( spValue * scale + _NUM . _NUM ) ; }
3988	public Builder zIndexOffset ( Number zIndexOffset ) { this . zIndexOffset = zIndexOffset ; return this ; }
3990	public boolean isApplicable ( ) { megan . remote . RemoteServiceBrowser remoteServiceBrowser = ( megan . remote . RemoteServiceBrowser ) getViewer ( ) ; return remoteServiceBrowser != _NULL && remoteServiceBrowser . getServicePanel ( ) != _NULL && remoteServiceBrowser . getServicePanel ( ) . getSelectedFiles ( ) . size ( ) > _NUM ; }
3996	public void finish ( ) { m_bias = _NUM ; m_out . flush ( ) ; }
3999	public SQLSchemaMigrator graph ( MindmapsGraph graph ) { this . graph = graph ; return this ; }
4002	public void removePendingFifoSearchObject ( boolean disableInitialSearch ) { _pendingFifoSearch = _NULL ; if ( disableInitialSearch ) resetInitialFifoSearchActive ( ) ; }
4004	public boolean isApplicable ( ) { final ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return viewer . getActiveLabelsJList ( ) != _NULL && viewer . getActiveLabelsJList ( ) . getSelectedIndex ( ) != - _NUM ; }
4005	@ Override protected int sizeOf ( String key , BitmapDrawable value ) { final int bitmapSize = getBitmapSize ( value ) / _NUM ; return bitmapSize == _NUM ? _NUM : bitmapSize ; }
4015	public static < E > RingBuffer < E > createMultiProducer ( EventFactory < E > factory , int bufferSize , WaitStrategy waitStrategy ) { MultiProducerSequencer sequencer = new MultiProducerSequencer ( bufferSize , waitStrategy ) ; return new RingBuffer < E > ( factory , sequencer ) ; }
4017	public void populate ( FunctionName functionName , ProcessFunction existingProcessFunction ) { this . selectedFunction . setBuiltInProcessFunction ( functionName , existingProcessFunction ) ; valueList = this . selectedFunction . extractParameters ( ) ; }
4019	public void typeCheck ( ) { TypeDecl type = getExpr ( ) . type ( ) ; if ( ( ! type . isIntegralType ( ) || type . isLong ( ) ) && ! type . isEnumDecl ( ) && ! type . isString ( ) ) error ( _CHAR Switch expression must be of type _CHAR + _CHAR char , byte , short , int , enum , or string _CHAR ) ; }
4040	public static void print ( Object x ) { out . print ( x ) ; out . flush ( ) ; }
4049	private void registerLabelRenderers ( ) { logger . info ( _CHAR Label Renderers supported : _CHAR ) ; addLabelRenderer ( new LabelEngineLayerProperties ( ) ) ; }
4061	public DistributedLogNamespaceBuilder statsLogger ( StatsLogger statsLogger ) { this . _statsLogger = statsLogger ; return this ; }
4071	public Bundler putByteArray ( String key , byte [ ] value ) { bundle . putByteArray ( key , value ) ; return this ; }
4078	@ RequestMapping ( method = RequestMethod . POST , value = _CHAR { clientVersion } / orgUnits / { id } / dataSets _CHAR ) @ ResponseBody public String saveDataSetValues ( @ PathVariable int id , @ RequestBody DataSetValue dataSetValue ) throws NotAllowedException { facilityReportingService . saveDataSetValues ( getUnit ( id ) , dataSetValue ) ; return DATASET_REPORT_UPLOADED ; }
4082	public boolean isConvertible ( final SourceDataTag tag , final Object tagValue ) { this . equipmentLogger . trace ( _CHAR isConvertible - Tag # _CHAR + tag . getId ( ) + _CHAR casting _CHAR + tagValue + _CHAR to _CHAR + tag . getDataType ( ) ) ; return TypeConverter . isConvertible ( tagValue , tag . getDataType ( ) ) ; }
4087	private void broadcastNewFile ( Uri nativeUri ) { Intent intent = new Intent ( Intent . ACTION_MEDIA_SCANNER_SCAN_FILE , nativeUri ) ; context . sendBroadcast ( intent ) ; }
4093	@ Override public AemTextArea clear ( ) { thisAemElement . clear ( ) ; return this ; }
4095	public void backup ( int amount ) { inBuf += amount ; if ( ( bufpos -= amount ) < _NUM ) bufpos += bufsize ; }
4096	public ColumnQuery addSort ( Sort sort ) throws NullPointerException { this . sorts . add ( Objects . requireNonNull ( sort , _CHAR Sort is required _CHAR ) ) ; return this ; }
4100	public IntIterator rangeSortedBy ( String field , double lo , double hi , int indexType ) { Index index = getIndex ( field , double . class , _BOOL ) ; return index . rows ( lo , hi , indexType ) ; }
4107	public void scroll ( int itemsToScroll , int time ) { int distance = itemsToScroll * getItemHeight ( ) - scrollingOffset ; scroller . scroll ( distance , time ) ; }
4109	private void populateResultsHeader ( IVScanResult ivScanResult ) { resultsPokemonName . setText ( ivScanResult . pokemon . name ) ; resultsPokemonLevel . setText ( getString ( R . string . level_num , ivScanResult . estimatedPokemonLevel ) ) ; }
4114	public void putDouble ( String key , double value ) { checkForNullKey ( key ) ; putString ( key , String . valueOf ( value ) ) ; }
4126	public UnrevealBuilder to ( final View toView ) { this . mToView = toView ; return this ; }
4128	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR book_table \ _CHAR ( _CHAR + _CHAR \ _CHAR BOOK_ID \ _CHAR TEXT PRIMARY KEY NOT NULL , _CHAR + _CHAR \ _CHAR BOOK_NAME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR USER_ID \ _CHAR TEXT ) ; _CHAR ) ; }
4133	public static < T > void update ( Map < String , String > properties , T obj ) throws IllegalArgumentException { Field [ ] fields = obj . getClass ( ) . getDeclaredFields ( ) ; Arrays . stream ( fields ) . forEach ( _NULL ) ; }
4136	public void removeFifoXtnInfoForEntry ( IEntryHolder eh ) { FifoXtnEntryInfo Xe = new FifoXtnEntryInfo ( eh . getUID ( ) , eh . getSCN ( ) , eh . getOrder ( ) ) ; _terminatingXtnsEntries . remove ( Xe ) ; }
4151	@ Override public ASObject cloneASObject ( boolean deep ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
4157	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
4158	public void loadConf ( URL confURL ) throws ConfigurationException { Configuration loadedConf = new PropertiesConfiguration ( confURL ) ; addConfiguration ( loadedConf ) ; }
4160	public static void main ( String [ ] args ) throws IOException { ParseSinaXmlData parser = new ParseSinaXmlData ( ) ; parser . buildRawText ( _CHAR res / sina_data / alldata . txt _CHAR , _CHAR res / sina_data / SinaRawText . txt _CHAR ) ; }
4164	public CommandBuilder withLongSwitch ( String switchName , Object value ) { withLongSwitch ( switchName , value , UnaryOperator . identity ( ) ) ; return this ; }
4165	public static JSONObject rowToJSONObject ( JSONArray names , JSONTokener x ) throws JSONException { JSONArray ja = rowToJSONArray ( x ) ; return ja != _NULL ? ja . toJSONObject ( names ) : _NULL ; }
4171	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
4173	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
4174	public void removeLastHistoryEntry ( String historyUrl , long urlTimeMs ) { if ( mContent == _NULL ) return ; mContent . removeLastHistoryEntry ( historyUrl , urlTimeMs ) ; }
4207	public TapTarget targetCircleColor ( @ ColorRes int color ) { this . targetCircleColor = color ; return this ; }
4226	public Builder fillOpacity ( Number fillOpacity ) { this . fillOpacity = fillOpacity ; return this ; }
4231	public boolean removeEdge ( Edge e ) { edgeCheck ( e , _BOOL ) ; return removeEdge ( e . getRow ( ) ) ; }
4234	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
4245	public Bundler putCharSequence ( String key , CharSequence value ) { bundle . putCharSequence ( key , value ) ; return this ; }
4257	public Bundler putDouble ( String key , double value ) { bundle . putDouble ( key , value ) ; return this ; }
4258	public DistributedLogNamespaceBuilder conf ( DistributedLogConfiguration conf ) { this . _conf = conf ; return this ; }
4268	public JsonArray add ( float value ) { values . add ( Json . value ( value ) ) ; return this ; }
4275	@ Override protected final void synchronizeChildren ( ) { DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) ownerDocument ( ) ; ownerDocument . synchronizeChildren ( this , fNodeIndex ) ; }
4276	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR _CHAR _CHAR ; db . execSQL ( sql ) ; }
4312	public void addResDirectory ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myResDirectories . add ( directory ) ; }
4319	public void lockUserInput ( ) { locked = _BOOL ; commandManager . setEnableCritical ( _BOOL ) ; }
4339	public void dispose ( ) { getNodeTable ( ) . removeTableListener ( m_listener ) ; getEdgeTable ( ) . removeTableListener ( m_listener ) ; }
4344	public static boolean booleanValue ( Object value , boolean defaultValue ) { Boolean res = booleanValue ( value ) ; return res != _NULL ? res : defaultValue ; }
4354	public void actionPerformed ( ActionEvent ev ) { final Object choice = JOptionPane . showInputDialog ( getViewer ( ) . getFrame ( ) , _CHAR Choose node shape _CHAR , _CHAR MEGAN - Choose _CHAR , JOptionPane . QUESTION_MESSAGE , ProgramProperties . getProgramIcon ( ) , SHAPES , SHAPES [ _NUM ] ) ; if ( choice != _NULL ) execute ( _CHAR set nodeShape = _CHAR + choice . toString ( ) + _CHAR ; _CHAR ) ; }
4355	public TransactionManager manager ( ) { readyState . check ( ) ; return txnMgrProxy ; }
4362	public Builder boxZoom ( Boolean boxZoom ) { this . boxZoom = boxZoom ; return this ; }
4378	public void showOverlapGraph ( Director dir , ProgressListener progress ) throws CanceledException { final OverlapGraphViewer overlapGraphViewer = new OverlapGraphViewer ( dir , overlapGraph , node2ReadNameMap , paths ) ; overlapGraphViewer . apply ( progress ) ; }
4381	public void Notify ( Object oSender , Object oParams ) { double dProgress = ( ( Double ) oParams ) . doubleValue ( ) ; System . err . print ( _CHAR Comparison _CHAR + String . format ( _CHAR % _NUM . _NUM % % _CHAR , dProgress ) + _CHAR \ r _CHAR ) ; }
4382	public void addMutualEdges ( Object from , Object to , int weight ) { addEdge ( from , to , weight ) ; addEdge ( to , from , - weight ) ; }
4404	public void resetTracking ( ) { totalTime = _NUM ; drawCycles = _NUM ; }
4428	@ Override public void markEndOfStream ( ) throws IOException { FutureUtils . result ( getLedgerWriter ( DistributedLogConstants . MAX_TXID , _BOOL ) . markEndOfStream ( ) ) ; closeAndComplete ( ) ; }
4447	public void addImportDecl ( ImportDecl node ) { List < ImportDecl > list = ( parent == _NULL || state == _NULL ) ? getImportDeclListNoTransform ( ) : getImportDeclList ( ) ; list . addChild ( node ) ; }
4452	public void clear ( ) { clearHelper ( root ) ; root = factory . getQuadTreeNode ( ) ; }
4455	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
4465	public void forEach ( TriConsumer < Integer , K , V > action ) { Objects . requireNonNull ( action ) ; forEach ( _NULL ) ; }
4499	public static WxUserGroupResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxUserGroupResult . class ) ; }
4512	public Builder intoPlugins ( @ Nullable Collection < String > plugins ) { myPlugins = plugins ; return this ; }
4513	@ NotNull public DeleteFaceListFaceAction deleteFaceListFace ( @ NotNull String faceListId , @ NotNull String persistedFaceId ) { Validation . validate ( faceListId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR faceListId _CHAR , _CHAR FaceListId is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new DeleteFaceListFaceAction ( cognitiveContext , faceListId , persistedFaceId ) ; }
4544	public void removeEntityClass ( Class < ? > entityClass ) { checkNotInitialized ( ) ; entityClasses . remove ( entityClass ) ; }
4545	public static void dropTable ( Database db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR COLLECT \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
4555	public void run ( ) { processMessageSender . sendAlive ( ) ; LOGGER . debug ( _CHAR Alive sent . '' ) ; }
4570	@ Override protected Expression generateExpression ( ) { Expression expression = getFilterFactory ( ) . literal ( getStringValue ( ) ) ; return expression ; }
4601	public void isFilterNameUnique ( String userName , String filterName , String projectName ) { UserFilter existingFilter = userFilterRepository . findOneByName ( userName , filterName , projectName ) ; BusinessRule . expect ( existingFilter , Predicates . isNull ( ) ) . verify ( ErrorType . USER_FILTER_ALREADY_EXISTS , filterName , userName , projectName ) ; }
4609	@ MainThread public static void onPause ( @ NonNull final String componentId ) { checkMainThread ( ) ; activeComponentIdsToTargets . remove ( componentId ) ; }
4620	public JSONArray put ( int index , Collection < Object > value ) throws JSONException { this . put ( index , new JSONArray ( value ) ) ; return this ; }
4625	public void signalRewrittenEntry ( String uid ) { if ( _reWrittenEntries == _NULL ) _reWrittenEntries = new ConcurrentHashMap < String , String > ( ) ; _reWrittenEntries . put ( uid , uid ) ; }
4640	private void writeEscUTF16 ( String s , int start , int length , boolean isAttVal ) throws SAXException { String subString = s . substring ( start , start + length ) ; write ( StringEscapeUtils . escapeHtml4 ( subString ) ) ; }
4649	public int next ( ) { moveToNextIndex ( ) ; return _hash . _set [ _index ] ; }
4656	public void changeProgram ( Texture2dProgram program ) { this . program . release ( ) ; this . program = program ; }
4658	public static boolean isMinute ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return isIntegerInRange ( s , _NUM , _NUM ) ; }
4699	@ Override public Scan open ( ) { Scan s = p . open ( ) ; return new SelectScan ( s , pred ) ; }
4700	public Iterator < RecordID > sortedScan ( ) { LeafNode firstLeaf = new LeafNode ( this , firstLeafPageNum ) ; return new BPlusIterator ( firstLeaf ) ; }
4702	public Optional < Double > max ( ) { if ( isEmpty ( ) ) return Optional . empty ( ) ; return Optional . of ( buckets_ . get ( buckets_ . size ( ) - _NUM ) . getRange ( ) . getCeil ( ) ) ; }
4705	public boolean verify ( Endorser endorser , PublicKey key ) { byte [ ] hash = Hash . of ( outputs . get ( _NUM ) ) . toByteArray ( ) ; return endorser . verify ( hash , key ) ; }
4714	public void add ( String expr , SizeAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
4723	public static String makeLinkAuto ( ServletContext servletContext , HttpServletRequest request , HttpServletResponse response , String uri ) { RequestHandler rh = RequestHandler . getRequestHandler ( servletContext ) ; return rh . makeLinkAuto ( request , response , uri , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL ) ; }
4731	public void typeSystemInit ( TypeSystem typeSystem ) throws AnalysisEngineProcessException { super . typeSystemInit ( typeSystem ) ; probabilityFeature = AnnotatorUtil . getOptionalFeatureParameter ( context , tokenType , UimaUtil . PROBABILITY_FEATURE_PARAMETER , CAS . TYPE_NAME_DOUBLE ) ; }
4740	public synchronized void stop ( ) { this . running = _BOOL ; if ( runningThread != _NULL ) runningThread . interrupt ( ) ; }
4747	static void updateFileListener ( @ NotNull Project project ) { InstantRunManager manager = get ( project ) ; manager . myFileChangeListener . setEnabled ( InstantRunSettings . isInstantRunEnabled ( ) ) ; }
4749	public void detach ( ) { mEffect . removeParameter ( mParameter ) ; mEffect = _NULL ; }
4752	public static boolean isOrSubOf ( Object obj , String parentName ) throws ClassNotFoundException { Class < ? > parentClass = loadClass ( parentName ) ; return isOrSubOf ( obj , parentClass ) ; }
4755	SecurityContext trust ( SecurityContext securityContext ) { TrustedSecurityContext trustedContext = new TrustedSecurityContext ( securityContext ) ; return trustedContext ; }
4756	@ Override public void removeDataTag ( final SourceDataTag sourceDataTag ) { dataTagTable . remove ( sourceDataTag . getId ( ) ) ; sourceDataTag . getAddress ( ) . setTimeDeadband ( _NUM ) ; }
4759	public void loadAndRun ( final String configurationFile ) throws SpyException { loader . loadConfiguration ( configurationFile ) ; loadAndRun ( loader . getConfiguration ( ) ) ; }
4767	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public final S withValueSupplier ( Splittable . LongIndexed < T > valueSupplier ) { this . valueSupplier = valueSupplier ; return ( S ) this ; }
4773	public static synchronized RemoteHostsContainer sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new RemoteHostsContainer ( ) ; return sharedInstance ; }
4779	public void disable ( ) { LOGGER . debug ( _CHAR disable listener _CHAR ) ; setEnabled ( _BOOL ) ; }
4798	public void resetIDTables ( ) { fIdTable . clear ( ) ; fIdRefTable . clear ( ) ; }
4829	@ NotNull public NlConfigurationToolbarFixture requireApi ( int apiLevel ) { Wait . seconds ( _NUM ) . expecting ( _CHAR configuration to be updated _CHAR ) . until ( _NULL ) ; return this ; }
4837	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; servID . writeBytes ( out ) ; }
4843	@ Override public void revertToDefaultValue ( ) { TimePeriod timePeriod = new TimePeriod ( ) ; populateField ( timePeriod ) ; }
4845	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR ALARMS \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
4851	public static SketchSetOperationPostAggregation makePostAggFromAgg ( SketchSetOperationPostAggFunction function , String name , List < FilteredAggregation > filteredAggregationList ) { List < PostAggregation > operands = filteredAggregationList . stream ( ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; return new SketchSetOperationPostAggregation ( name , function , operands ) ; }
4860	public void updateDatabaseUploadStart ( UploadFileOperation upload ) { String localPath = ( FileUploader . LOCAL_BEHAVIOUR_MOVE == upload . getLocalBehaviour ( ) ) ? upload . getStoragePath ( ) : _NULL ; updateUploadStatus ( upload . getOCUploadId ( ) , UploadStatus . UPLOAD_IN_PROGRESS , UploadResult . UNKNOWN , upload . getRemotePath ( ) , localPath ) ; }
4897	public Bundler putBooleanArray ( String key , boolean [ ] value ) { bundle . putBooleanArray ( key , value ) ; return this ; }
4898	public int replaceAll ( String regularExpression , String replaceText , boolean selectionOnly ) { System . err . println ( _CHAR not implemented _CHAR ) ; return _NUM ; }
4903	protected void addLanguageVariables ( BundleContext context ) { Language defaultLanguage = APILocator . getLanguageAPI ( ) . getLanguage ( _CHAR en _CHAR , _CHAR US _CHAR ) ; addLanguageVariables ( context , defaultLanguage ) ; }
4923	public EmailBuilder bcc ( List < String > bccAddresses ) { this . bcc . addAll ( bccAddresses ) ; return this ; }
4937	public Builder keyboardPanOffset ( Number keyboardPanOffset ) { this . keyboardPanOffset = keyboardPanOffset ; return this ; }
4944	public Builder controller ( LogController val ) { controller = val ; return this ; }
4954	@ Override public final Node item ( int index ) { if ( index < _NUM ) throw new IllegalArgumentException ( _CHAR HTM012 Argument _CHAR is negative . '' ) ; return item ( _topLevel , new CollectionIndex ( index ) ) ; }
4958	public static void main ( String [ ] args ) { Ragdoll simulation = new Ragdoll ( ) ; simulation . run ( ) ; }
4962	void unregister ( ) { mListener = _NULL ; mMediaFactory = _NULL ; }
4975	public void addStatistics ( String message , long currentTime ) { this . timeTaken = currentTime - startTime ; this . message = message ; }
4983	protected void removeAt ( int index ) { _set [ index ] = ( int ) _NUM ; super . removeAt ( index ) ; }
4993	public RabbitMqCommand logWith ( Logger logger ) { this . processOutputLogger = logger ; return this ; }
4999	@ Override public boolean showDialog ( ) { EnvVarDlg envVarDlg = new EnvVarDlg ( this ) ; return envVarDlg . showDialog ( ) ; }
5028	@ Override public List < Period > generateRollingPeriods ( Date date ) { date = createPeriod ( date ) . getStartDate ( ) ; return generateRollingPeriods ( createLocalDateUnitInstance ( date ) ) ; }
5038	public Builder bkConf ( ServerConfiguration bkConf ) { this . _bkConf = bkConf ; return this ; }
5040	public void unregisterCategory ( SnapshotCategory category ) { categories . remove ( category ) ; fireCategoryUnregistered ( category ) ; }
5043	public Builder withGalleryRequestCode ( int requestCode ) { this . mGalleryRequestCode = requestCode ; return this ; }
5081	private void init ( ) { updateCount =- _NUM ; resultSet = _NULL ; }
5084	@ Override public void onUpdate ( Detector . Detections < Barcode > detectionResults , Barcode item ) { mOverlay . add ( mGraphic ) ; mGraphic . updateItem ( item ) ; }
5091	private void handleInitialize ( ) { scheduleRepeatingAlarm ( ) ; if ( hasRequest ( ) ) startService ( createPostRequestIntent ( this ) ) ; }
5107	private Literal syntaxError ( String msg ) { String err = _CHAR in _CHAR + name ( ) + _CHAR literal _CHAR + _CHAR \ _CHAR _CHAR + getLITERAL ( ) + _CHAR \ _CHAR _CHAR + _CHAR : _CHAR + msg ; return new IllegalLiteral ( err ) ; }
5116	public Builder cacheOnDisk ( boolean cacheOnDisk ) { this . cacheOnDisk = cacheOnDisk ; return this ; }
5119	public static boolean isConnectedByWifi ( ) { NetworkInfo info = getNetworkInfos ( ) ; return info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_WIFI ; }
5120	private void finalizeFailed ( final TestItem testItem ) { FailReferenceResource resource = failReferenceResourceBuilder . get ( ) . addLaunchRef ( testItem . getLaunchRef ( ) ) . addTestItemRef ( testItem . getId ( ) ) . build ( ) ; issuesRepository . save ( resource ) ; }
5141	public Builder color ( String color ) { this . color = color ; return this ; }
5144	public Builder autoPanPadding ( Point autoPanPadding ) { this . autoPanPadding = autoPanPadding ; return this ; }
5146	public Builder watch ( Boolean watch ) { this . watch = watch ; return this ; }
5171	private void appendVal ( Constant val ) { myPage . setVal ( currentPos , val ) ; currentPos += Page . size ( val ) ; }
5181	public Builder addAction ( String actionType , Action action ) { mActions . add ( new ActionPair ( actionType , action ) ) ; return this ; }
5183	public static long hash64 ( final String text ) { final byte [ ] bytes = text . getBytes ( ) ; return hash64 ( bytes , bytes . length ) ; }
5195	public static JSON from ( String jsonString ) { Assert . notNull ( _CHAR jsonString _CHAR , jsonString ) ; return new JSON ( jsonString ) ; }
5200	public CarouselOptions animationDuration ( int animationDuration ) { mAnimationDuration = animationDuration ; return this ; }
5201	public static void main ( String [ ] arguments ) { final Knock024A ab = new Knock024B ( ) ; System . out . println ( ab . getString ( ) ) ; }
5222	public void onDrawerClosed ( View view ) { super . onDrawerClosed ( view ) ; getSupportActionBar ( ) . setTitle ( getString ( R . string . app_name ) ) ; }
5239	public static boolean isPosterMethod ( HttpRequest request ) { String method = request . getRequestLine ( ) . getMethod ( ) ; return _CHAR POST _CHAR . equalsIgnoreCase ( method ) ; }
5240	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; return chartViewer . getChartDrawer ( ) != _NULL && chartViewer . getChartDrawer ( ) . canShowXAxis ( ) ; }
5242	public static void createTable ( Database db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR NEWS \ _CHAR ( _CHAR + _CHAR \ _CHAR DATE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR JSON_STRING \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR CREATED_TIME \ _CHAR INTEGER ) ; _CHAR ) ; }
5252	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + TABLENAME + _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR FIRSTCLOUMN \ _CHAR TEXT NOT NULL , _CHAR + _CHAR \ _CHAR SECONDCLOUMN \ _CHAR TEXT NOT NULL , _CHAR + _CHAR \ _CHAR THIRDCLOUMN \ _CHAR TEXT NOT NULL ) ; _CHAR ) ; }
5257	public Builder keyboardZoomOffset ( Number keyboardZoomOffset ) { this . keyboardZoomOffset = keyboardZoomOffset ; return this ; }
5258	public static void installToStorage ( Context context ) { mContext = context ; new Thread ( runnable ) . start ( ) ; }
5264	public synchronized void zoom ( final Point2D p , double scale ) { m_itransform . transform ( p , m_tmpPoint ) ; zoomAbs ( m_tmpPoint , scale ) ; }
5265	public boolean isLongPressDragEnabled ( ) { initializeItemTouchHelper ( ) ; return this . mDefaultItemTouchHelper . isLongPressDragEnabled ( ) ; }
5267	public static void checkMatrixIndex ( final AnyMatrix m , final int row , final int column ) throws MathIllegalArgumentException { checkRowIndex ( m , row ) ; checkColumnIndex ( m , column ) ; }
5279	public static synchronized CoreDumpsContainer sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new CoreDumpsContainer ( ) ; return sharedInstance ; }
5282	public Builder iconSize ( Point iconSize ) { this . iconSize = iconSize ; return this ; }
5290	public JSONArray optJSONArray ( String key ) { Object o = opt ( key ) ; return o instanceof JSONArray ? ( JSONArray ) o : _NULL ; }
5307	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
5312	public Builder bounds ( LatLngBounds bounds ) { this . bounds = bounds ; return this ; }
5323	boolean isSterile ( ) { if ( ( access_flags & ACC_PUBLIC ) != _NUM && ( access_flags & ACC_FINAL ) == _NUM ) return _BOOL ; return _BOOL ; }
5329	protected void removeAt ( int index ) { _set [ index ] = ( long ) _NUM ; super . removeAt ( index ) ; }
5334	public SlickForm withField ( FormField field ) { this . formFields . add ( field ) ; return this ; }
5342	public Builder addColumnsLong ( String ... names ) { for ( String s : names ) addColumnLong ( s ) ; return this ; }
5360	public void add ( String expr , BasicStroke stroke ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; add ( p , stroke ) ; }
5363	void unregister ( ) { mListener = _NULL ; mMediaFactory = _NULL ; }
5369	protected void handleUpdate ( T oldObject , T newObject ) { this . preprocessMatch ( oldObject , newObject ) ; executor . addForUpdate ( oldObject , newObject ) ; }
5370	public T proxy ( ) { eventDrivenFactoryBean . afterPropertiesSet ( ) ; return ( T ) eventDrivenFactoryBean . getObject ( ) ; }
5371	public static void initAndStartProfiler ( ) { profiler = new Profiler ( ) ; profiler . startCollecting ( ) ; }
5376	public boolean isValidGenericTld ( String gTld ) { gTld = unicodeToASCII ( gTld ) ; return Arrays . binarySearch ( GENERIC_TLDS , chompLeadingDot ( gTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
5381	public void putBoolean ( String key , boolean value ) { checkForNullKey ( key ) ; preferences . edit ( ) . putBoolean ( key , value ) . apply ( ) ; }
5384	public static Intent createAddToHomeIntent ( String url , String title , Bitmap icon ) { Intent shortcutIntent = createShortcutIntent ( url ) ; return createAddToHomeIntent ( url , title , icon , shortcutIntent ) ; }
5387	public static boolean hasStatusBar ( Activity activity ) { LayoutParams params = activity . getWindow ( ) . getAttributes ( ) ; return ( params . flags & LayoutParams . FLAG_FULLSCREEN ) != LayoutParams . FLAG_FULLSCREEN ; }
5415	@ Override public void updateValue ( String key , Color backgroundColour ) { String value = String . format ( _CHAR % _NUM % s % _NUM % s % _NUM % s % _NUM _CHAR , backgroundColour . getRed ( ) , DELIMETER , backgroundColour . getGreen ( ) , DELIMETER , backgroundColour . getBlue ( ) , DELIMETER , backgroundColour . getAlpha ( ) ) ; updateValue ( key , value ) ; }
5417	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
5418	public void decreaseShield ( ) { this . shield -- ; if ( shield <= _NUM ) this . isDead = _BOOL ; }
5426	public void process ( int direction , IReplicationFilterEntry replicationFilterEntry , String remoteSpaceMemberName ) { if ( ! isInitialized ( ) ) return ; _filter . process ( direction , replicationFilterEntry , remoteSpaceMemberName ) ; }
5430	private void initHideFileListingListener ( View shareView ) { mOnHideFileListingPermissionInteractionListener = new OnHideFileListingPermissionInteractionListener ( ) ; ( ( SwitchCompat ) shareView . findViewById ( R . id . shareViaLinkFileListingPermissionSwitch ) ) . setOnCheckedChangeListener ( mOnHideFileListingPermissionInteractionListener ) ; }
5432	public void addParent ( Permission perm , boolean value ) { perm . getChildren ( ) . put ( getName ( ) , value ) ; perm . recalculatePermissibles ( ) ; }
5433	@ TargetApi ( _NUM ) public Bundler putSizeF ( String key , SizeF value ) { bundle . putSizeF ( key , value ) ; return this ; }
5446	public static boolean isTrue ( String expression , Map < String , Object > vars ) { Object result = evaluate ( expression , vars ) ; return ( result != _NULL && result instanceof Boolean ) ? ( Boolean ) result : _BOOL ; }
5457	public static void openSecuritySettings ( @ NonNull Context context ) { Intent intent = new Intent ( Settings . ACTION_SECURITY_SETTINGS ) ; context . startActivity ( intent ) ; }
5472	public void addMatcher ( XPathMatcher matcher ) { ensureMatcherCapacity ( ) ; fMatchers [ fMatchersCount ++ ] = matcher ; }
5484	public void addToken ( ClipboardToken token ) { tokens . add ( token ) ; saveTokenChanges ( ) ; }
5487	protected void addLanguageVariables ( BundleContext context ) { Language defaultLanguage = APILocator . getLanguageAPI ( ) . getLanguage ( _CHAR en _CHAR , _CHAR US _CHAR ) ; addLanguageVariables ( context , defaultLanguage ) ; }
5489	public Builder threadFactory ( ThreadFactory threadFactory ) { this . threadFactory = threadFactory ; return this ; }
5501	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
5508	public TrafficLogPredicate add ( TrafficLogPredicate query ) { predicates . addAll ( query . getPredicates ( ) ) ; return this ; }
5515	public void removeEdge ( Edge edge ) throws Exception { if ( EdgeDistros . containsKey ( edge ) ) EdgeDistros . remove ( edge ) ; super . removeEdge ( edge ) ; }
5518	public void writeExternal ( ObjectOutput out ) throws IOException { out . writeFloat ( x ) ; out . writeFloat ( y ) ; }
5522	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL ; }
5547	public static void dropTable ( Database db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR NEWS \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
5550	public synchronized ZooKeeperClientBuilder name ( String name ) { this . name = name ; return this ; }
5559	public void update ( PhysicalTable table , DataSourceMetadata metadata ) { ConcurrentSkipListMap < DateTime , Map < String , SegmentInfo >> current = metadata . getSegments ( ) . stream ( ) . collect ( Collectors . groupingBy ( _NULL , _NULL , Collectors . mapping ( _NULL , COLLECTOR ) ) ) ; allSegments . computeIfAbsent ( table , _NULL ) . set ( current ) ; }
5560	public void stopAndGone ( ) { mBasoStatus = BasoStatus . GONE ; toggleLayout ( ) ; }
5585	public static WxNewsMediaResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxNewsMediaResult . class ) ; }
5588	public boolean isLoggedIn ( ) { AccessToken accessToken = getAccessToken ( ) ; return accessToken != _NULL && ! accessToken . isExpired ( ) ; }
5606	public boolean isTopLevel ( ) { ASTNode parent = getNode ( ) . getTreeParent ( ) ; return parent == _NULL || parent . getElementType ( ) == BuildElementTypes . BUILD_FILE ; }
5612	public static Zutmat o ( Zutmat U ) throws JampackException { if ( U . nrow != U . ncol ) throw new JampackException ( _CHAR Can not compute the inverse of a rectangular matrix . '' ) ; return new Zutmat ( Solve . aib ( U , Eye . o ( U . nrow ) ) ) ; }
5626	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
5634	public void addElementValuePair ( ElementValuePair node ) { List < ElementValuePair > list = ( parent == _NULL || state == _NULL ) ? getElementValuePairListNoTransform ( ) : getElementValuePairList ( ) ; list . addChild ( node ) ; }
5651	private void updateAndValidateQuietly ( final T dataTag , final Object value , final String valueDescription , final Timestamp sourceTimestamp , final Timestamp daqTimestamp , final Timestamp cacheTimestamp ) { dataTagCacheObjectFacade . validate ( dataTag ) ; dataTagCacheObjectFacade . update ( dataTag , value , valueDescription , sourceTimestamp , daqTimestamp , cacheTimestamp ) ; }
5652	public Builder position ( String position ) { this . position = position ; return this ; }
5668	public EntityQuery having ( EntityCondition entityCondition ) { this . havingEntityCondition = entityCondition ; return this ; }
5669	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
5680	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
5687	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( principals ) ; }
5688	@ SuppressFBWarnings ( _CHAR CHROMIUM_SYNCHRONIZED_METHOD _CHAR ) public synchronized boolean calledOnValidThread ( ) { ensureThreadIdAssigned ( ) ; return mThreadId . equals ( Thread . currentThread ( ) . getId ( ) ) ; }
5690	public ProviderBuilder < T > encrypt ( boolean encrypt ) { this . encrypted = encrypt ; return this ; }
5701	public JsonObject add ( String name , long value ) { add ( name , Json . value ( value ) ) ; return this ; }
5717	public Iterator < E > snapshotIterator ( ) { List < E > l = new LinkedList < E > ( this ) ; return l . iterator ( ) ; }
5747	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
5748	public static boolean hasCapability ( @ Nullable Entity targetEntity ) { if ( targetEntity == _NULL ) return _BOOL ; return targetEntity . hasCapability ( CYBERWARE_CAPABILITY , EnumFacing . EAST ) ; }
5774	public ViewsAnimator animateWith ( final AnimationProvider animationProvider ) { FunctionUtils . checkParameterIsNotNull ( _CHAR animationProvider _CHAR , animationProvider ) ; return new ViewsAnimator ( this , animationProvider ) ; }
5777	public Builder title ( String title ) { this . title = title ; return this ; }
5782	@ Override public Object call ( ) { cachePersistenceDAO . persistBatch ( keyList ) ; return _NULL ; }
5784	public Object [ ] toArray ( ) { Object [ ] elements = getArray ( ) ; return copyOf ( elements , elements . length ) ; }
5786	@ Override public void computeTargetFeatures ( Target target ) { FeatureVector fv = targetFeatureComputer . computeFeatureVector ( target ) ; target . setFeatureVector ( fv ) ; }
5795	private void observe ( Future < ? > future ) { Observable observable = new Observable ( future , timeout ) ; queue . add ( observable ) ; }
5798	@ SkylarkCallable ( name = _CHAR first_line_message _CHAR , doc = _CHAR The message of the change _CHAR , structField = _BOOL ) public String firstLineMessage ( ) { int idx = message . indexOf ( _CHAR ) ; return idx == - _NUM ? message : message . substring ( _NUM , idx ) ; }
5801	@ ManagedOperation ( description = _CHAR Stop this JMS container _CHAR ) public void stopContainer ( String processName ) { LOGGER . info ( _CHAR Stopping JMS container for Process '' + processName ) ; jmsContainers . get ( processCache . getProcessId ( processName ) ) . stop ( ) ; }
5807	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T > List < T > toList ( Object object ) { if ( object != _NULL && ! ( object instanceof List ) ) return _NULL ; return ( List < T > ) object ; }
5810	private void addRenderer ( EsriRendererInterface rendererObj ) { logger . info ( _CHAR \ t _CHAR + rendererObj . getName ( ) ) ; rendererMap . put ( rendererObj . getName ( ) , rendererObj ) ; }
5833	@ Override public void writePacketData ( PacketBuffer buf ) throws IOException { buf . writeInt ( ChannelManager . getID ( channel ) ) ; channel . write ( buf , packet ) ; }
5842	public short put ( K key , short value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
5878	public void onDrawerClosed ( View view ) { super . onDrawerClosed ( view ) ; getSupportActionBar ( ) . setTitle ( getString ( R . string . app_name ) ) ; }
5902	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
5959	private boolean isConnectivityLayoutOverridden ( ) { verifyOverrideRulesForConnectivity ( ) ; return mConnectedLayout != _NUM && mDisconnectedLayout != _NUM ; }
5961	@ Override public void onAddIndex ( AddIndexData addIndexData ) { SpaceSynchronizationEndpoint endpointInterceptor = getEndpoint ( addIndexData . getTypeName ( ) ) ; if ( endpointInterceptor != _NULL ) endpointInterceptor . onAddIndex ( addIndexData ) ; }
5964	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
5970	public static void dropTable ( Database db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR THEME_LIST \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
5975	public static void showManagedByParentToast ( Context context ) { boolean singleParentIsManager = PrefServiceBridge . getInstance ( ) . getSupervisedUserSecondCustodianName ( ) . isEmpty ( ) ; Toast . makeText ( context , context . getString ( singleParentIsManager ? R . string . managed_by_your_parent : R . string . managed_by_your_parents ) , Toast . LENGTH_LONG ) . show ( ) ; }
5978	public Cal now ( ) { dateTimeUnit = getCalendar ( ) . today ( ) ; return this ; }
5987	public void write ( int b ) { ensureCapacity ( _NUM ) ; _buffer [ _count ++ ] = ( byte ) b ; }
5991	@ Override public void redoAction ( UndoInterface undoRedoObject ) { String newValue = ( String ) undoRedoObject . getNewValue ( ) ; fieldConfigVisitor . populateTextField ( FieldIdEnum . WKT , ( String ) newValue ) ; }
6025	public RealMatrix computeCorrelationMatrix ( final RealMatrix matrix ) { final RealMatrix matrixCopy = rankTransform ( matrix ) ; return new PearsonsCorrelation ( ) . computeCorrelationMatrix ( matrixCopy ) ; }
6033	public void incrementValue ( T v , long increment ) { Long count = freqTable . getOrDefault ( v , Long . valueOf ( _NUM ) ) ; freqTable . put ( v , Long . valueOf ( count . longValue ( ) + increment ) ) ; }
6043	public static void main ( String [ ] args ) { final DeploymentEventDTO build = createTestDeploymentEvent ( ) ; send ( build , ElasticsearchClient . DEPLOYMENT ) ; }
6049	public void addEntityClass ( Class < ? > entityClass ) { checkNotInitialized ( ) ; entityClasses . add ( entityClass ) ; }
6060	public Builder zoomReverse ( Boolean zoomReverse ) { this . zoomReverse = zoomReverse ; return this ; }
6075	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
6077	Type toInt ( Type type ) { type . apply ( this ) ; return result ; }
6081	protected boolean cellConsumesEventType ( Cell < ? > cell , String eventType ) { Set < String > consumedEvents = cell . getConsumedEvents ( ) ; return consumedEvents != _NULL && consumedEvents . contains ( eventType ) ; }
6082	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
6086	@ Override public void onPatchInfoCorrupted ( File patchFile , String oldVersion , String newVersion , boolean isUpgradePatch ) { TinkerLog . i ( TAG , _CHAR patchReporter : patch info is corrupted . old : % s , new : % s , isUpgradeP : % b _CHAR , oldVersion , newVersion , isUpgradePatch ) ; Tinker . with ( context ) . cleanPatch ( ) ; }
6094	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
6107	public final void writePos ( final Point s ) { writeShort ( s . x ) ; writeShort ( s . y ) ; }
6119	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL && inspectorWindow . getDataTree ( ) != _NULL && inspectorWindow . getDataTree ( ) . getModel ( ) . getRoot ( ) != _NULL && inspectorWindow . getDataTree ( ) . getModel ( ) . getChildCount ( inspectorWindow . getDataTree ( ) . getModel ( ) . getRoot ( ) ) > _NUM ; }
6154	public void addGeneratedResourceFolder ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myGeneratedResourceFolders . add ( directory ) ; }
6155	public void execute ( DelegateExecution execution ) { boolean exists = FileExistsMock . getInstance ( ) . fileExists ( ) ; execution . setVariable ( _CHAR fileexists _CHAR , exists ) ; }
6157	private static double gTest ( final double [ ] expected , final long [ ] observed ) { final ChiSquaredDistribution distribution = new ChiSquaredDistribution ( expected . length - _NUM . _NUM ) ; return _NUM . _NUM - distribution . cumulativeProbability ( g ( expected , observed ) ) ; }
6171	public Builder errorTileUrl ( String errorTileUrl ) { this . errorTileUrl = errorTileUrl ; return this ; }
6176	public boolean binomialTest ( int numberOfTrials , int numberOfSuccesses , double probability , AlternativeHypothesis alternativeHypothesis , double alpha ) { double pValue = binomialTest ( numberOfTrials , numberOfSuccesses , probability , alternativeHypothesis ) ; return pValue < alpha ; }
6184	private boolean hasXGeoLocationPermission ( Context context ) { String searchUrl = TemplateUrlService . getInstance ( ) . getUrlForSearchQuery ( _CHAR foo _CHAR ) ; return mSite . getAddress ( ) . matches ( searchUrl ) && GeolocationHeader . isGeoHeaderEnabledForUrl ( context , searchUrl , _BOOL ) ; }
6190	public void train ( Map CategoryValues , String sSuggestedCategory , String sFinalCategory ) { if ( CategoryValues == _NULL ) CategoryValues = new HashMap ( ) ; if ( CategoryValues . size ( ) > _NUM ) vPreviousDecisions . add ( new DecisionSupport ( CategoryValues , sSuggestedCategory , sFinalCategory ) ) ; }
6192	public static boolean isWindowsPlatform ( ) { String os = System . getProperty ( _CHAR os . name _CHAR ) ; return ( os != _NULL && os . startsWith ( WIN_ID ) ) ; }
6204	public TapTarget transparentTarget ( boolean transparent ) { this . transparentTarget = transparent ; return this ; }
6208	public JSONObject put ( String key , Map < String , Object > value ) throws JSONException { this . put ( key , new JSONObject ( value ) ) ; return this ; }
6219	public void addElem ( AnnotationElem elem ) { if ( elems == _NULL ) elems = new ArrayList < AnnotationElem > ( ) ; elems . add ( elem ) ; }
6230	public void stopRecording ( ) { m_line . stop ( ) ; m_line . close ( ) ; }
6231	public boolean isValidInfrastructureTld ( String iTld ) { iTld = unicodeToASCII ( iTld ) ; return Arrays . binarySearch ( INFRASTRUCTURE_TLDS , ( chompLeadingDot ( iTld . toLowerCase ( Locale . ENGLISH ) ) ) ) >= _NUM ; }
6234	public boolean supportsHeapDump ( Application application ) { if ( application . getState ( ) != Stateful . STATE_AVAILABLE ) return _BOOL ; return JvmFactory . getJVMFor ( application ) . isTakeHeapDumpSupported ( ) ; }
6236	@ CheckReturnValue public AddCmd files ( Iterable < String > files ) { Preconditions . checkState ( ! all , _CHAR _CHAR and passing files is incompatible _CHAR ) ; return new AddCmd ( force , _BOOL , files ) ; }
6241	public static Stream < String > wavefrontLine ( DateTime ts , TimeSeriesValue tsv ) { final GroupName group = tsv . getGroup ( ) ; return tsv . getMetrics ( ) . entrySet ( ) . stream ( ) . flatMap ( _NULL ) ; }
6242	protected void draw ( Graphics2D gc , Dimension size ) { if ( ! chartViewer . isTranspose ( ) ) drawLegend ( gc , size ) ; else drawLegendTransposed ( gc , size ) ; }
6255	public Bundler putShortArray ( String key , short [ ] value ) { bundle . putShortArray ( key , value ) ; return this ; }
6263	public void dropAllCache ( ) { cacheTypeToLRUCacheMap . clear ( ) ; cacheTypeToCacheMap . clear ( ) ; }
6280	@ Override public void redoAction ( UndoInterface undoRedoObject ) { String newValueObj = ( String ) undoRedoObject . getNewValue ( ) ; envVarComboBox . setSelectedItem ( newValueObj ) ; }
6288	public static synchronized ApplicationViewsSupport sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new ApplicationViewsSupport ( ) ; return sharedInstance ; }
6305	@ Override public boolean equals ( Object obj ) { if ( obj instanceof SpaceProxyImpl ) return super . equals ( obj ) ; return _BOOL ; }
6308	@ Override public ASAttributeDeclaration createASAttributeDeclaration ( String namespaceURI , String name ) throws DOMException { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
6312	public void freeConnection ( ConnectionResource clientPeer ) { activeConnections . decrement ( ) ; _peersPool . freeResource ( clientPeer ) ; }
6320	public static Item registerItem ( Item item ) { item . setUnlocalizedName ( _CHAR bwm _CHAR + item . getRegistryName ( ) . toString ( ) . substring ( BWMod . MODID . length ( ) ) ) ; return GameRegistry . register ( item ) ; }
6323	private void updateButtonState ( boolean dataChanged ) { btnApply . setEnabled ( dataChanged ) ; btnRevert . setEnabled ( dataChanged ) ; }
6329	public static int px2sp ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
6335	public int compare ( Object o1 , Object o2 ) { Split split1 = ( Split ) o1 ; return split1 . compareTo ( o2 ) ; }
6336	@ Override protected void onSaveInstanceState ( Bundle outState ) { outState . putParcelableArrayList ( SAVED_INSTANCE_MEIZHI , mainPresenter . getData ( ) ) ; super . onSaveInstanceState ( outState ) ; }
6346	public synchronized void doneAppending ( ) { doneAppending = _BOOL ; notifyAll ( ) ; }
6355	public void addCDirectory ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myCDirectories . add ( directory ) ; }
6378	public synchronized void completed ( ) { completed = _BOOL ; notifyAll ( ) ; }
6380	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
6381	public static < T > List < T > sort ( List < T > list , Comparator < ? super T > comparator ) { Collections . sort ( list , comparator ) ; return list ; }
6385	public int available ( ) throws IOException { if ( reduceChannels ) return ( super . available ( ) / ratio ) / _NUM ; else return super . available ( ) / ratio ; }
6397	@ PostConstruct public void init ( ) { LOGGER . debug ( _CHAR Registering short - term - log module for supervision updates '' ) ; listenerContainer = supervisionNotifier . registerAsListener ( this ) ; }
6400	public static double turnAngle ( S2Point a , S2Point b , S2Point c ) { double outAngle = S2Point . crossProd ( b , a ) . angle ( S2Point . crossProd ( c , b ) ) ; return ( robustCCW ( a , b , c ) > _NUM ) ? outAngle : - outAngle ; }
6412	@ TargetApi ( _NUM ) public Bundler putSizeF ( String key , SizeF value ) { bundle . putSizeF ( key , value ) ; return this ; }
6425	private Color createColor ( Display display , String preference ) { RGB rgb = PreferenceConverter . getColor ( SVNUIPlugin . getPlugin ( ) . getPreferenceStore ( ) , preference ) ; return new Color ( display , rgb ) ; }
6426	public void cancel ( ) { pause ( ) ; mRunnable = _NULL ; }
6453	private void saveTokenChanges ( ) { GoIVSettings . getInstance ( context ) . setClipboardPreference ( tokens ) ; Log . d ( _CHAR NahojjjenClippy _CHAR , _CHAR Saved token Changes _CHAR ) ; }
6461	@ Override public void parse ( String aLine ) throws IOException { String [ ] tokens = aLine . trim ( ) . split ( _CHAR \ t _CHAR ) ; parse ( tokens , tokens . length ) ; }
6472	public static Table read ( String fileName , boolean header , char delimiter ) throws IOException { ColumnType [ ] columnTypes = detectColumnTypes ( fileName , header , delimiter ) ; return read ( columnTypes , _BOOL , delimiter , fileName ) ; }
6476	public Builder zoomInTitle ( String zoomInTitle ) { this . zoomInTitle = zoomInTitle ; return this ; }
6487	public boolean isApplicable ( ) { final Document doc = ( ( MainViewer ) getDir ( ) . getMainViewer ( ) ) . getDocument ( ) ; return doc . getNumberOfReads ( ) > _NUM ; }
6490	public Bindings add ( String property , JTextArea textArea ) { registerPropertyChangeListener ( textArea ) ; return add ( new JTextAreaBinding ( property , textArea ) ) ; }
6497	public boolean isApplicable ( ) { ExtractReadsViewer viewer = ( ExtractReadsViewer ) getParent ( ) ; return viewer != _NULL && viewer . getMode ( ) . equals ( ClassificationType . Taxonomy . toString ( ) ) ; }
6498	@ Override public void channelClosed ( ChannelHandlerContext channelHandlerContext , ChannelStateEvent channelStateEvent ) throws Exception { curr_conns . decrementAndGet ( ) ; channelGroup . remove ( channelHandlerContext . getChannel ( ) ) ; }
6499	public synchronized static void ensureSecurityManager ( @ SuppressWarnings ( _CHAR UnusedParameters _CHAR ) String [ ] args ) { SecurityPolicyLoader . load ( SystemBoot . class , _CHAR policy . all _CHAR ) ; System . setSecurityManager ( new RMISecurityManager ( ) ) ; }
6502	private static boolean matches ( Pattern pattern , String input ) { Matcher m = pattern . matcher ( input ) ; return m . matches ( ) ; }
6504	public void addHandler ( String columnName , SQLDataHandler handler ) { if ( m_overrides == _NULL ) m_overrides = new HashMap ( _NUM ) ; m_overrides . put ( columnName , handler ) ; }
6505	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getLength ( ) > _NUM ; }
6512	private void monitorReplicationStateForModifyingOperation ( Transaction transaction ) { if ( transaction != _NULL ) return ; monitorReplicationState ( ) ; }
6517	public void clear ( ) { this . normal = _NULL ; this . depth = _NUM ; }
6527	public void detach ( ) { mEffect . removeParameter ( mParameter ) ; mEffect = _NULL ; }
6544	boolean inHalfOpenRange ( K key , K least , K fence ) { if ( key == _NULL ) throw new NullPointerException ( ) ; return ( ( least == _NULL || compare ( key , least ) >= _NUM ) && ( fence == _NULL || compare ( key , fence ) < _NUM ) ) ; }
6546	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
6574	public static void removeAccess ( long rid , String name ) { Helper . delete ( W . create ( _CHAR rid _CHAR , rid ) . and ( _CHAR name _CHAR , name ) , RoleAccess . class ) ; Helper . update ( W . create ( X . ID , rid ) , V . create ( _CHAR updated _CHAR , System . currentTimeMillis ( ) ) , Role . class ) ; }
6578	@ Override public void emptyElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { startElement ( element , attributes , augs ) ; endElement ( element , augs ) ; }
6585	public static void createTable ( Database db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR USER \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY NOT NULL , _CHAR + _CHAR \ _CHAR NAME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR AGE \ _CHAR INTEGER NOT NULL ) ; _CHAR ) ; }
6587	public SecurityManagerBuilder withAnonymousAccessAs ( @ Nullable String id ) { _anonymousId = id ; return this ; }
6590	public static boolean bernoulli ( double p ) { if ( ! ( p >= _NUM . _NUM && p <= _NUM . _NUM ) ) throw new IllegalArgumentException ( _CHAR Probability must be between _NUM . _NUM and _NUM . _NUM _CHAR ) ; return uniform ( ) < p ; }
6611	public void addCatchClause ( CatchClause node ) { List < CatchClause > list = ( parent == _NULL || state == _NULL ) ? getCatchClauseListNoTransform ( ) : getCatchClauseList ( ) ; list . addChild ( node ) ; }
6617	public String toUuidString ( ) { String result = String . join ( _CHAR - _CHAR , contentAsHex ( _NUM , _NUM ) , contentAsHex ( _NUM , _NUM ) , contentAsHex ( _NUM , _NUM ) , contentAsHex ( _NUM , _NUM ) , contentAsHex ( _NUM , _NUM ) ) ; return result . toLowerCase ( ) ; }
6619	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
6621	public void updateView ( ) { updateGraph ( ) ; embedGraph ( ) ; }
6628	public Bundler putStringArray ( String key , String [ ] value ) { bundle . putStringArray ( key , value ) ; return this ; }
6630	public static int round ( float value ) { long lx = ( long ) ( value * ( _NUM * _NUM ) ) ; return ( int ) ( ( lx + _NUM ) >> _NUM ) ; }
6633	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
6636	@ PreDestroy public void shutdown ( ) { LOGGER . info ( _CHAR shutdown - Stopping tag publisher . '' ) ; republisher . stop ( ) ; }
6644	public void addColor ( int color ) { if ( mColors == _NULL ) mColors = new ArrayList < Integer > ( ) ; mColors . add ( color ) ; }
6647	private void configureLogging ( final Client clientProxy ) { clientProxy . getInInterceptors ( ) . add ( WebserviceLogging . LOGGING_IN_INTERCEPTOR ) ; clientProxy . getOutInterceptors ( ) . add ( WebserviceLogging . LOGGING_OUT_INTERCEPTOR ) ; }
6655	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
6656	@ Override public void updateValue ( String key , int count , String value ) { String updatedKey = String . format ( _CHAR % s % s % d _CHAR , key , DELIMETER , count ) ; updateValue ( updatedKey , value ) ; }
6670	protected void addLanguageVariables ( BundleContext context ) { Language defaultLanguage = APILocator . getLanguageAPI ( ) . getLanguage ( _CHAR en _CHAR , _CHAR US _CHAR ) ; addLanguageVariables ( context , defaultLanguage ) ; }
6671	public static void uinstallApplication ( final Context context , final String packageName ) { final Intent intent = new Intent ( Intent . ACTION_DELETE , Uri . fromParts ( _CHAR package '' , packageName , null ) ) ; context . startActivity ( intent ) ; }
6672	private void expectException ( ) { expectedException . expect ( IllegalArgumentException . class ) ; expectedException . expectMessage ( EMPTY_ERROR_MESSAGE ) ; }
6674	public ResourceLazyLoadingScript type ( String type ) { this . type = type ; return this ; }
6698	public boolean isApplicable ( ) { AttributesWindow viewer = ( AttributesWindow ) getViewer ( ) ; return viewer != _NULL && viewer . selectedTaxon != _NULL ; }
6706	public void addCondition ( FallbackCondition condition ) { this . fallbackConditions . add ( condition ) ; Collections . sort ( this . fallbackConditions ) ; }
6707	public Builder iconAnchor ( Point iconAnchor ) { this . iconAnchor = iconAnchor ; return this ; }
6718	static synchronized ExplorerContextMenuFactory instance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new ExplorerContextMenuFactory ( ) ; return sharedInstance ; }
6726	public Shape ellipse ( double x , double y , double width , double height ) { m_ellipse . setFrame ( x , y , width , height ) ; return m_ellipse ; }
6731	public Builder withStreaming ( ) { this . streaming = _BOOL ; return this ; }
6734	public static boolean isOrSubOf ( Object obj , Object parentObject ) { Class < ? > parentClass = parentObject . getClass ( ) ; return isOrSubOf ( obj , parentClass ) ; }
6738	private static String digits ( long val , int digits ) { long hi = _NUM << ( digits * _NUM ) ; return Long . toHexString ( hi | ( val & ( hi - _NUM ) ) ) . substring ( _NUM ) ; }
6740	@ Override public void onConfigurationChanged ( Configuration newConfig ) { super . onConfigurationChanged ( newConfig ) ; orientationBasedUI ( newConfig . orientation ) ; }
6750	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . isShowTriPlot ( ) ; }
6751	public void close ( ) throws RemoteException { if ( _transactionManagerProvider != _NULL ) _transactionManagerProvider . destroy ( ) ; _queryCache . clear ( ) ; }
6753	public void addAidlDirectory ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myAidlDirectories . add ( directory ) ; }
6758	@ Override public V put ( K key , V value ) { if ( ! containsKey ( key ) ) keys . add ( key ) ; return super . put ( key , value ) ; }
6762	public void loadData ( List < ScaleSLDData > dataList ) { scaleList = dataList ; this . fireTableDataChanged ( ) ; }
6769	public Builder zIndex ( Number zIndex ) { this . zIndex = zIndex ; return this ; }
6772	@ Override public void close ( ) throws SAException { if ( _entries != _NULL ) _entries . freeSLHolder ( _pos ) ; super . close ( ) ; }
6790	public TextFormatForTest registerAnyInstance ( String typeUrl , Message defaultInstance ) { anyConverterRegistry . put ( typeUrl , defaultInstance ) ; return this ; }
6812	public Builder add ( String property ) { properties . add ( property ) ; return this ; }
6818	@ Override public ASNotationDeclaration createASNotationDeclaration ( String namespaceURI , String name , String systemId , String publicId ) throws DOMException { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
6826	private int readFirstBytes ( ) throws IOException { getBOM ( ) ; return fbIndex < fbLength ? firstBytes [ fbIndex ++ ] : - _NUM ; }
6843	private static boolean detectAmazonWebServices ( ) { val region = Regions . getCurrentRegion ( ) ; return ( region != _NULL ) ; }
6845	public Builder zkPort ( int zkPort ) { this . _zkPort = zkPort ; return this ; }
6846	public Builder icon ( Icon icon ) { this . icon = icon ; return this ; }
6853	public AemDialog clickTab ( final String label ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ( ExpectedCondition < Object > ) _NULL , _NUM ) ; return this ; }
6862	public static String nowDateString ( String format ) { SimpleDateFormat df = new SimpleDateFormat ( format ) ; return df . format ( new Date ( ) ) ; }
6881	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
6904	public void commitHistogram ( ) { RecordHistogram . recordBooleanHistogram ( mHistogramName , mIsHit ) ; mIsHit = _BOOL ; }
6916	protected void handleResultsResponse ( Observable < PreResponse > preResponseObservable , AsyncResponse asyncResponse , ApiRequest apiRequest ) { HttpResponseMaker httpResponseMaker = new HttpResponseMaker ( objectMappers , dimensionDictionary ) ; preResponseObservable . flatMap ( _NULL ) . subscribe ( new HttpResponseChannel ( asyncResponse , httpResponseMaker , apiRequest . getFormat ( ) , apiRequest . getUriInfo ( ) ) ) ; }
6930	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
6931	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getSelectedBlock ( ) . isSelected ( ) && ( viewer . getAlignment ( ) . getSequenceType ( ) . equalsIgnoreCase ( Alignment . DNA ) || viewer . getAlignment ( ) . getSequenceType ( ) . equalsIgnoreCase ( Alignment . cDNA ) ) && ! viewer . isShowAminoAcids ( ) ; }
6935	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR _CHAR ( _CHAR + _CHAR _CHAR TEXT PRIMARY KEY NOT NULL , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR INTEGER ) ; _CHAR ) ; }
6936	public Builder position ( String position ) { this . position = position ; return this ; }
6939	public void removeAll ( ) { DotCacheAdministrator cache = CacheLocator . getCacheAdministrator ( ) ; cache . flushGroup ( groupName ) ; }
6942	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR USE_AREA \ _CHAR ( _CHAR + _CHAR \ _CHAR AREAID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR AREAID2345 \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR AREA_NAME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR MAIN \ _CHAR INTEGER ) ; _CHAR ) ; }
6954	public static void load ( ) { gameservers = getDAO ( ) . getAllGameServers ( ) ; log . info ( _CHAR GameServerTable loaded _CHAR + gameservers . size ( ) + _CHAR registered GameServers . '' ) ; }
6958	public void cascadeParamChanges ( boolean cascade ) { this . cascadeChanges = cascade ; requestLayout ( ) ; }
6959	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
6967	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { TcNoteDao . createTable ( db , ifNotExists ) ; CustomerDao . createTable ( db , ifNotExists ) ; }
6968	public Builder iconRetinaUrl ( String iconRetinaUrl ) { this . iconRetinaUrl = iconRetinaUrl ; return this ; }
6970	public SiteAdminActionBar clickOnButton ( final SiteAdminButtons button , final Object pageObject ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return this ; }
6977	public Point2D convertWindowToReference ( Point2D apt ) { if ( scrollBackReferenceRect == _NULL ) return _NULL ; else return new Point2D . Double ( ( apt . getX ( ) - scrollBackReferenceRect . getX ( ) ) / scrollBackReferenceRect . getWidth ( ) , ( apt . getY ( ) - scrollBackReferenceRect . getY ( ) ) / scrollBackReferenceRect . getHeight ( ) ) ; }
6982	public Builder envVar ( String key , String value ) { this . envVars . put ( key , value ) ; return this ; }
6997	public static boolean isPrimitiveWrapper ( Class clazz ) { Assert . notNull ( clazz , _CHAR Class must not be _NULL _CHAR ) ; return primitiveWrapperTypeMap . containsKey ( clazz ) ; }
7000	@ Override public void exitApplication ( ) { UILayoutFactory . writeLayout ( _NULL ) ; System . exit ( _NUM ) ; }
7013	public boolean isApplicable ( ) { ViewerBase viewer = ( ViewerBase ) getViewer ( ) ; return viewer . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
7014	public static void assertSameMembers ( ThrowableSet . Pair p , Set < ? extends RefLikeType > caughtIncluded , Set < AnySubType > caughtExcluded , Set < ? extends RefLikeType > uncaughtIncluded , Set < AnySubType > uncaughtExcluded ) { assertSameMembers ( p . getCaught ( ) , caughtIncluded , caughtExcluded ) ; assertSameMembers ( p . getUncaught ( ) , uncaughtIncluded , uncaughtExcluded ) ; }
7015	public JSONArray put ( long value ) { this . put ( new Long ( value ) ) ; return this ; }
7018	public JSONObject put ( String key , double value ) throws JSONException { put ( key , new Double ( value ) ) ; return this ; }
7022	public Builder fillColor ( String fillColor ) { this . fillColor = fillColor ; return this ; }
7088	private static int resolvePoolSize ( int poolSize ) { if ( poolSize == _NUM ) return Runtime . getRuntime ( ) . availableProcessors ( ) ; return poolSize ; }
7103	public void removeEntryIndexedField ( IEntryHolder eh , Object fieldValue , TemplateCacheInfo pTemplate , IObjectInfo oi ) { removeNonUniqueIndexedField ( eh , fieldValue , pTemplate , oi ) ; _size . decrementAndGet ( ) ; }
7104	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
7107	protected boolean applyRules ( Node n ) { Element intonation = ( Element ) DomUtils . getAncestor ( n , MaryXML . PROSODY ) ; return intonation == _NULL || ! intonation . getAttribute ( _CHAR rules _CHAR ) . equals ( _CHAR off _CHAR ) ; }
7109	public static final void fillCircleFromTopLeft ( GL2 gl , double sx , double sy , double w , double h ) { double r = Math . min ( w , h ) * _NUM . _NUM ; RenderUtilities . fillCircleFromCenter ( gl , r , sx + r , sy - r ) ; }
7117	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
7123	public Builder scrollWheelZoom ( Boolean scrollWheelZoom ) { this . scrollWheelZoom = scrollWheelZoom ; return this ; }
7130	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( JensenShannonDivergence . SqrtJensenShannonDivergence ) ; }
7141	public Builder addConverterFactory ( Converter . Factory factory ) { converterFactories . add ( checkNotNull ( factory , _CHAR factory == _NULL _CHAR ) ) ; return this ; }
7144	public static void main ( String [ ] arguments ) { final Knock025A ab = new Knock025B ( ) ; System . out . println ( ab . getValue ( ) ) ; }
7148	private void onInvalidTapDetectionTimeout ( ) { mHandler . handleInvalidTap ( ) ; mIsWaitingForInvalidTapDetection = _BOOL ; }
7152	public void startObservingFontPrefs ( ) { mFontSizePrefs . addObserver ( mFontSizeObserver ) ; updatePreview ( ) ; }
7161	@ SuppressLint ( _CHAR NewApi _CHAR ) public static void postInvalidateOnAnimation ( View view ) { if ( Build . VERSION . SDK_INT >= _NUM ) view . postInvalidateOnAnimation ( ) ; else view . postInvalidateDelayed ( _NUM ) ; }
7171	public static boolean isSecond ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return isIntegerInRange ( s , _NUM , _NUM ) ; }
7172	protected void saveLanguage ( String language ) { fLanguageScope . push ( fDepth ) ; fLanguageStack . push ( language ) ; }
7192	public void flush ( ) { trimToSizeAndCount ( ) ; mJournal . rebuildIfNeeded ( ) ; }
7216	@ Override public void useAntiAliasUpdated ( boolean value ) { useAntiAlias = value ; renderSymbol ( ) ; }
7224	public TrackedEntityInstanceQueryParams addOrganisationUnit ( OrganisationUnit unit ) { this . organisationUnits . add ( unit ) ; return this ; }
7233	public int minEffectiveTotalRange ( ) { if ( fCompositor == MODELGROUP_CHOICE ) return minEffectiveTotalRangeChoice ( ) ; else return minEffectiveTotalRangeAllSeq ( ) ; }
7239	public static long toSeconds ( BigInteger eu , BigFraction unitsInSec ) { BigFraction editUnits = new BigFraction ( eu ) ; return editUnits . divide ( unitsInSec ) . longValue ( ) ; }
7253	boolean tryTransfer ( E e ) { int start = startIndex ( ) ; return scanAndTransferToWaiter ( e , start ) || awaitExchange ( e , start ) ; }
7272	public boolean isModuleDependency ( @ NotNull String artifact ) { AndroidGradleModel gradleModel = AndroidGradleModel . get ( myFacet ) ; return gradleModel != _NULL && GradleUtil . dependsOn ( gradleModel , artifact ) ; }
7276	public static JpaQueryExecutor newExecutor ( QueryExpressions expression , ClassMetaData cm , Object [ ] parameters ) { if ( expression . projections . length > _NUM ) return new JpaJdbcQueryExecutor ( expression , cm , parameters ) ; return new JpaSqlQueryExecutor ( expression , cm , parameters ) ; }
7282	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
7283	public void add ( String expr , ColorAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
7287	@ Override public void close ( ) { ss1 . close ( ) ; ss2 . close ( ) ; }
7300	private void showMessage ( String message , boolean error ) { lblError . setForeground ( error ? Color . RED : Color . BLACK ) ; lblError . setText ( message ) ; }
7310	public Bundler putByte ( String key , byte value ) { bundle . putByte ( key , value ) ; return this ; }
7311	public void updateTime ( int hourOfDay , int minuteOfHour ) { mTimePicker . setCurrentHour ( hourOfDay ) ; mTimePicker . setCurrentMinute ( minuteOfHour ) ; }
7328	public static int extractOpcodeFromUnit ( int opcodeUnit ) { int lowByte = opcodeUnit & _NUM ; return ( ( lowByte == _NUM ) || ( lowByte == _NUM ) ) ? opcodeUnit : lowByte ; }
7329	public Builder addStringDerivedColumn ( String columnName , String format , DateTimeZone timeZone ) { derivedColumns . add ( new DerivedColumn ( columnName , ColumnType . String , format , timeZone , _NULL ) ) ; return this ; }
7341	public void readFrom ( Reader from ) throws ParserConfigurationException , SAXException , IOException { String inputData = FileUtils . getReaderAsString ( from ) ; setData ( inputData ) ; }
7347	public HectorCassandraClientConfigurer port ( Integer port ) { this . port = port ; return this ; }
7353	public Schema lockSchema ( ) { m_locked = _BOOL ; return this ; }
7373	public Bundler putBundle ( String key , Bundle value ) { bundle . putBundle ( key , value ) ; return this ; }
7388	@ Override public StyledLayerDescriptor create ( ) { StyledLayerDescriptor sld = DefaultSymbols . createNewPolygon ( ) ; return sld ; }
7391	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR _CHAR ( _CHAR + _CHAR _CHAR TEXT NOT NULL , _CHAR + _CHAR _CHAR TEXT NOT NULL , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT ) ; _CHAR ) ; }
7392	public JSONArray put ( Map value ) { put ( new JSONObject ( value ) ) ; return this ; }
7410	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
7417	public void fileOpenedSaved ( ) { dataEditedFlag = _BOOL ; notifySLDEditorFileHasUpdated ( ) ; }
7418	public static ITextComponent handle ( ITextComponent message , Side side ) { final MessageEvent . Snackbar event = new MessageEvent . Snackbar ( message , side ) ; return OpenModLoader . getEventBus ( ) . post ( event ) ? event . getMessage ( ) : _NULL ; }
7423	public BaseViewHolder addOnClickListener ( int viewId ) { childClickViewIds . add ( viewId ) ; return this ; }
7481	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
7485	public EmailBuilder cc ( String cc ) { this . cc . add ( cc ) ; return this ; }
7489	public static void clearEditorPosition ( @ NotNull AttributesTransaction attributes ) { attributes . setAttribute ( SdkConstants . TOOLS_URI , SdkConstants . ATTR_LAYOUT_EDITOR_ABSOLUTE_X , _NULL ) ; attributes . setAttribute ( SdkConstants . TOOLS_URI , SdkConstants . ATTR_LAYOUT_EDITOR_ABSOLUTE_Y , _NULL ) ; }
7512	public void actionPerformed ( ActionEvent ev ) { String result = JOptionPane . showInputDialog ( getViewer ( ) . getFrame ( ) , _CHAR Enter Id _CHAR , _CHAR Select Node by Id _CHAR , JOptionPane . QUESTION_MESSAGE ) ; if ( result != _NULL ) execute ( _CHAR select id = _CHAR + result + _CHAR ; _CHAR ) ; }
7551	public void selectDataSource ( final DataSource dataSource ) { if ( dataSource == _NULL ) return ; selectDataSources ( Collections . singleton ( dataSource ) ) ; }
7562	@ Override public void close ( ) { s1 . close ( ) ; s2 . close ( ) ; }
7573	public EmailBuilder withHeaders ( Map < String , String > headers ) { this . headers . putAll ( headers ) ; return this ; }
7583	public final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , Vertex vHead , Vertex vTail ) { Edge eRes = locateDirectedEdgeInGraph ( gGraph , vHead , vTail ) ; return eRes == _NULL ? locateDirectedEdgeInGraph ( gGraph , vTail , vHead ) : eRes ; }
7590	private boolean hasProxySettings ( Properties settings ) { String proxyHost = settings . getProperty ( _CHAR org . gnome . system . proxy . http host _CHAR , _NULL ) ; return proxyHost != _NULL && proxyHost . length ( ) > _NUM ; }
7592	@ Override public boolean containsVertex ( Set < String > labels ) { Objects . requireNonNull ( labels , _CHAR labels can not be _NULL _CHAR ) ; return this . labels . stream ( ) . anyMatch ( _NULL ) ; }
7609	public Builder elementType ( final Type < ? > elementType ) { this . elementType = elementType ; return this ; }
7613	NewProjectDescriptor withPackageName ( @ NotNull String pkg ) { myPkg = pkg ; return this ; }
7616	private String validated ( String permissionString ) throws InvalidPermissionStringException { _permissionResolver . resolvePermission ( permissionString ) ; return permissionString ; }
7620	public static ExpectedCondition < Boolean > nodeExist ( final Session session , final String nodePath ) { LOG . debug ( _CHAR Checking if node ' { } ' exists '' , nodePath ) ; return _NULL ; }
7623	public boolean isApplicable ( ) { final LabelsJList list = ( ( ChartViewer ) getViewer ( ) ) . getActiveLabelsJList ( ) ; return list != _NULL && list . getSelectedIndex ( ) != - _NUM ; }
7631	private void onPostScrollToPosition ( int pos ) { if ( pos < _NUM ) return ; checkLastSticky ( pos ) ; }
7633	public void cleanupTabs ( ) { mStackTabs = _NULL ; resetInputActionIndices ( ) ; }
7638	public static final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , Vertex vHead , Vertex vTail ) { Edge eRes = locateDirectedEdgeInGraph ( gGraph , vHead , vTail ) ; return eRes == _NULL ? locateDirectedEdgeInGraph ( gGraph , vTail , vHead ) : eRes ; }
7644	public CreatePageWindow selectNthTemplate ( int i ) { templatesList . get ( i ) . click ( ) ; return this ; }
7649	public Builder diskCacheSize ( Integer megabytes ) { this . diskCacheSize = megabytes ; return this ; }
7650	private void createResultLayout ( ) { createExtendedResultEvolutionSpinner ( ) ; createExtendedResultLevelSeekbar ( ) ; }
7652	public ResultSet executeQuery ( String sql ) throws GenericDataSourceException , GenericEntityException { prepareStatement ( sql ) ; return executeQuery ( ) ; }
7668	public void removeDetailsView ( DetailsView detailsView ) { DisplayArea displayArea = getDisplayArea ( detailsView . getTab ( ) ) ; if ( displayArea != _NULL ) displayArea . removeTab ( detailsView . getTab ( ) ) ; }
7696	public JsonArray add ( int value ) { values . add ( Json . value ( value ) ) ; return this ; }
7697	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR SEARCH_SUFFIX \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
7706	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
7709	public void press ( ) { this . isDown = _BOOL ; this . justPressed = _BOOL ; }
7711	public static boolean isSeqTransactionGT ( long xtn1 , long xtn2 ) { if ( xtn1 != UNKNOWN_FIFO_XTN && xtn2 != UNKNOWN_FIFO_XTN && ( xtn1 > xtn2 || ( xtn1 < xtn2 && xtn2 - xtn1 > _NUM ) ) ) return _BOOL ; else return _BOOL ; }
7712	public static FeatureTypeStyle createNewFeatureTypeStyle ( ) { FeatureTypeStyle featureTypeStyle = styleFactory . createFeatureTypeStyle ( ) ; return featureTypeStyle ; }
7714	public Builder streams ( List < String > streams ) { this . _streams = streams ; return this ; }
7721	public int skip ( int len ) { pos += len ; return pos ; }
7737	@ Override public void write ( int b ) throws IOException { out . write ( b ) ; md5 . Update ( ( byte ) b ) ; }
7745	public static synchronized DataSourceViewsManager sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new DataSourceViewsManager ( ) ; return sharedInstance ; }
7748	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
7770	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
7772	public AemInsertWindow openInsertWindow ( ) { wait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return insertWindow ; }
7785	protected void addPageLink ( PaginationLink link , int pageNumber ) { UriBuilder uriBuilder = uriInfo . getRequestUriBuilder ( ) . replaceQueryParam ( _CHAR page _CHAR , pageNumber ) ; builder . header ( HttpHeaders . LINK , Link . fromUriBuilder ( uriBuilder ) . rel ( link . getHeaderName ( ) ) . build ( ) ) ; }
7814	public static Map < String , Object > updateElectronicText ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = updateElectronicTextMethod ( dctx , context ) ; return result ; }
7826	public ResourceLazyLoadingScript metaArguments ( Object ... metaArguments ) { this . metaArguments = metaArguments ; return this ; }
7827	public JsonObject add ( String name , boolean value ) { add ( name , Json . value ( value ) ) ; return this ; }
7832	public BinaryBitmap crop ( int left , int top , int width , int height ) { LuminanceSource newSource = binarizer . getLuminanceSource ( ) . crop ( left , top , width , height ) ; return new BinaryBitmap ( binarizer . createBinarizer ( newSource ) ) ; }
7835	public void reset ( ) { fNoNSGrammar = _NULL ; fGrammarRegistry . clear ( ) ; }
7854	public Builder displayBottomNavigation ( boolean displayBottomNavigationBar ) { this . displayBottomNavigation = displayBottomNavigationBar ; return this ; }
7856	public void destroy ( ) { mTabStripTreeProvider . destroy ( ) ; mTabStripTreeProvider = _NULL ; }
7861	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
7871	public static String jsonToString ( JsonRootNode node ) { JsonFormatter JSON_FORMATTER = new PrettyJsonFormatter ( ) ; return JSON_FORMATTER . format ( node ) ; }
7901	public static int generateBackgroundColor ( BookmarkItem item ) { int normalizedIndex = MathUtils . positiveModulo ( item . getUrl ( ) . hashCode ( ) , DEFAULT_BACKGROUND_COLORS . length ) ; return DEFAULT_BACKGROUND_COLORS [ normalizedIndex ] ; }
7903	public void normal ( ) { mHintView . setVisibility ( View . VISIBLE ) ; mProgressBar . setVisibility ( View . GONE ) ; }
7905	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
7931	public static boolean isConnected ( Context context ) { NetworkInfo info = NetworkUtil . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) ) ; }
7945	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
7967	public static < T > T readRepetitiveObject ( ObjectInput in ) throws IOException , ClassNotFoundException { if ( in instanceof MarshalInputStream ) return ( T ) ( ( MarshalInputStream ) in ) . readRepetitiveObject ( ) ; return ( T ) readObject ( in ) ; }
7968	public void onSearchTermResolutionResponse ( String searchTerm ) { getSearchBarControl ( ) . setSearchTerm ( searchTerm ) ; animateSearchTermResolution ( ) ; }
7974	@ Override public int next ( ) { moveToNext ( ) ; return matchesInResult ; }
7983	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL ; }
7991	public CatchOptions usePokeball ( Pokeball pokeBall ) { this . pokeBall = pokeBall ; return this ; }
7994	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
8023	private static void addToParentGroup ( final ModifiableConnection connectionDetails , final ConfiguredConnectionGroupDetails parent ) { connectionDetails . setGroup ( new ConnectionGroupReference ( parent ) ) ; parent . getConnections ( ) . add ( new ConnectionReference ( connectionDetails ) ) ; }
8029	public StyleImageView enableAnimation ( long animationDuration ) { styler . enableAnimation ( animationDuration ) ; return this ; }
8044	public static boolean isScreenLocked ( Context context ) { KeyguardManager km = ( KeyguardManager ) context . getSystemService ( Context . KEYGUARD_SERVICE ) ; return km . inKeyguardRestrictedInputMode ( ) ; }
8045	public boolean isApplicable ( ) { RemoteServiceBrowser remoteServiceBrowser = ( RemoteServiceBrowser ) getViewer ( ) ; return remoteServiceBrowser != _NULL && remoteServiceBrowser . getServicePanel ( ) != _NULL && remoteServiceBrowser . getServicePanel ( ) . getSelectedFiles ( ) . size ( ) > _NUM ; }
8051	@ VisibleForTesting static boolean shouldOpenAfterDownload ( DownloadInfo downloadInfo ) { String type = downloadInfo . getMimeType ( ) ; return downloadInfo . hasUserGesture ( ) && ! isAttachment ( downloadInfo . getContentDisposition ( ) ) && MIME_TYPES_TO_OPEN . contains ( type ) ; }
8059	public static void createFolder ( String path ) { File file = new File ( path ) ; file . mkdirs ( ) ; }
8064	public synchronized BookKeeperClientBuilder requestTimer ( HashedWheelTimer requestTimer ) { this . requestTimer = requestTimer ; return this ; }
8069	public static double dbSPL ( double energy ) { if ( energy <= _NUM ) return Double . NaN ; else return _NUM * log10 ( energy / PASCALSQUARE ) ; }
8073	public boolean isSynchronizing ( Account account , String remotePath ) { if ( account == _NULL || remotePath == _NULL ) return _BOOL ; return ( mPendingOperations . contains ( account . name , remotePath ) ) ; }
8084	private void upgradeMapViewsToColumns ( ) { String sql = _CHAR insert into mapview_columns _CHAR + _CHAR select mapviewid , ' dx ' , 0 '' + '' from mapview mv '' + '' where not exists ( _CHAR + _CHAR select mc . mapviewid _CHAR + _CHAR from mapview_columns mc _CHAR + _CHAR where mv . mapviewid = mc . mapviewid ) '' ; executeSql ( sql ) ; }
8095	public synchronized BookKeeperClientBuilder zkc ( ZooKeeperClient zkc ) { this . zkc = zkc ; return this ; }
8098	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
8114	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
8124	public boolean contains ( T obj ) { if ( ! map . contains ( obj ) ) return _BOOL ; return bits . get ( map . getInt ( obj ) ) ; }
8125	public EntityQuery cache ( boolean useCache ) { this . useCache = useCache ; return this ; }
8132	void addAcceptableFilterID ( String destID ) { initAcceptableFilterList ( _NUM ) ; _acceptableFilterIDList . add ( destID ) ; }
8134	public EntityQuery distinct ( boolean distinct ) { this . distinct = distinct ; return this ; }
8139	public static boolean isGetMethod ( HttpRequest request ) { String method = request . getRequestLine ( ) . getMethod ( ) ; return _CHAR GET _CHAR . equalsIgnoreCase ( method ) ; }
8143	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
8148	static protected void registerNonXS ( String name ) { if ( Token . nonxs == _NULL ) Token . nonxs = new Hashtable ( ) ; Token . nonxs . put ( name , name ) ; }
8163	public String [ ] upload_appender_file ( byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_appender_file ( group_name , file_buff , _NUM , file_buff . length , file_ext_name , meta_list ) ; }
8178	@ Override public void xmlDecl ( String version , String encoding , String standalone , Augmentations augs ) throws XNIException { fVersion = version ; fStandalone = _CHAR yes _CHAR . equals ( standalone ) ; }
8181	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR _CHAR ( _CHAR + _CHAR _CHAR TEXT PRIMARY KEY NOT NULL , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR INTEGER ) ; _CHAR ) ; }
8186	@ Override public ListenableFuture < LeaseGrantResponse > grant ( long ttl ) { LeaseGrantRequest leaseGrantRequest = LeaseGrantRequest . newBuilder ( ) . setTTL ( ttl ) . build ( ) ; return this . leaseFutureStub . leaseGrant ( leaseGrantRequest ) ; }
8200	public void back ( ) { checkState ( myIndex > _NUM ) ; this . myIndex -= _NUM ; }
8210	private static void increment ( Map < ResultPoint , Integer > table , ResultPoint key ) { Integer value = table . get ( key ) ; table . put ( key , value == _NULL ? _NUM : value + _NUM ) ; }
8213	public static String localizePath ( String path ) { String fileNameSeparator = ( _CHAR \\ _CHAR . equals ( File . separator ) ? _CHAR \\ _CHAR + File . separator : File . separator ) ; return path . replaceAll ( _CHAR /+|\\\\+ _CHAR , fileNameSeparator ) ; }
8223	public void addItemBoundsListener ( ItemBoundsListener ibl ) { if ( m_bounders == _NULL ) m_bounders = new CopyOnWriteArrayList ( ) ; m_bounders . add ( ibl ) ; }
8239	public V put ( short key , V value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
8240	public Project withDefaults ( ) { setOpenSource ( _BOOL ) ; return this ; }
8251	public String sampa2voice ( String sampaPhoneme ) { if ( sampa2voiceMap != _NULL && sampa2voiceMap . containsKey ( sampaPhoneme ) ) return sampa2voiceMap . get ( sampaPhoneme ) ; else return sampaPhoneme ; }
8259	public Builder enableHighAccuracy ( Boolean enableHighAccuracy ) { this . enableHighAccuracy = enableHighAccuracy ; return this ; }
8260	@ Override protected void synchronizeChildren ( ) { DeferredDocumentImpl ownerDocument = ( DeferredDocumentImpl ) ownerDocument ( ) ; ownerDocument . synchronizeChildren ( this , fNodeIndex ) ; }
8261	public static String formatPercentage ( Double percentage ) { if ( percentage == _NULL ) return _CHAR _CHAR ; return formatPercentage ( percentage . doubleValue ( ) ) ; }
8266	public static boolean saveConfig ( FunktionConfig config , File file ) throws IOException { createObjectMapper ( ) . writeValue ( file , config ) ; return _BOOL ; }
8273	public Bundler putCharArray ( String key , char [ ] value ) { bundle . putCharArray ( key , value ) ; return this ; }
8281	private boolean isNotUnresponsive ( Proxy proxy ) { Long lastFailTime = this . failedDelayCache . get ( proxy . address ( ) ) ; return retryDelayHasPassedBy ( lastFailTime ) ; }
8292	public void resetTask ( ) { this . mate = _NULL ; this . spawnBabyDelay = _NUM ; }
8296	public void verifyPostAjax ( ExpectedCondition condition ) { authorLoader . verifyIsHidden ( ) ; verify ( condition , Timeouts . MEDIUM ) ; }
8304	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
8309	private void delayedHide ( int delayMillis ) { mHideHandler . removeCallbacks ( mHideRunnable ) ; mHideHandler . postDelayed ( mHideRunnable , delayMillis ) ; }
8322	public Builder noMoveStart ( Boolean noMoveStart ) { this . noMoveStart = noMoveStart ; return this ; }
8323	public Object convertFieldValue ( ModelField modelField , Object value , Delegator delegator , Map < String , ? extends Object > context ) { ModelFieldTypeReader modelFieldTypeReader = delegator . getModelFieldTypeReader ( this ) ; return this . convertFieldValue ( modelField , value , modelFieldTypeReader , context ) ; }
8325	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
8343	public Builder keyColumns ( String ... keyColumns ) { this . keyColumns = keyColumns ; return this ; }
8361	@ Override public void justSelected ( ) { setCachedExpression ( generateExpression ( ) ) ; checkSymbolIsValid ( ) ; }
8371	public ResourceLazyLoadingScript routing ( Object routing ) { this . routing = routing ; return this ; }
8374	public static File createUniqueFile ( File targetFolder , String originalFile , boolean keepOriginal ) { String mimeType = MimeTypeMap . getSingleton ( ) . getMimeTypeFromExtension ( originalFile ) ; return createUniqueFile ( targetFolder , originalFile , mimeType , keepOriginal ) ; }
8388	public AemContentFinder search ( String query ) { getCurrentTab ( ) . search ( query ) ; return this ; }
8402	@ Override public void vendorOptionsUpdated ( List < VersionData > vendorOptionVersionsList ) { this . vendorOptionVersionList = vendorOptionVersionsList ; updateVendorOptionPanels ( ) ; }
8404	public static Cleaner create ( Object ob , Runnable thunk ) { if ( thunk == _NULL ) return _NULL ; return add ( new Cleaner ( ob , thunk ) ) ; }
8407	public float toFloatBits ( ) { int color = ( ( int ) ( _NUM * a ) << _NUM ) | ( ( int ) ( _NUM * b ) << _NUM ) | ( ( int ) ( _NUM * g ) << _NUM ) | ( ( int ) ( _NUM * r ) ) ; return NumberUtils . intToFloatColor ( color ) ; }
8408	protected void updateClientIDInternally ( final String updatedClientID ) throws JMSException { if ( closed ) throw new IllegalStateException ( _CHAR Forbidden call on a closed connection . '' ) ; this . m_clientID = updatedClientID ; }
8419	public void dump ( ) { System . out . println ( _CHAR PList _CHAR ) ; dumpInternal ( this , _NUM ) ; }
8424	public Builder minZoom ( Number minZoom ) { this . minZoom = minZoom ; return this ; }
8436	void updateItem ( Barcode barcode ) { mBarcode = barcode ; postInvalidate ( ) ; }
8443	private void ensureInstanceExists ( ServiceDocument state , Consumer < Throwable > callback ) { final AtomicBoolean documentExists = new AtomicBoolean ( ) ; QueryTaskClientHelper . create ( state . getClass ( ) ) . setDocumentLink ( state . documentSelfLink ) . setResultHandler ( _NULL ) . sendWith ( getHost ( ) ) ; }
8447	private void moveTemplateToSecondPhase ( ITemplateHolder template ) { if ( template . isDeleted ( ) || ! template . isInCache ( ) ) return ; template . setSecondPhase ( ) ; }
8453	public static String formatDateLong ( Context context , Date date ) { DateFormat dateFormat = android . text . format . DateFormat . getLongDateFormat ( context ) ; return dateFormat . format ( date ) ; }
8457	public AsyncCatchOptions useRazzberries ( boolean useRazzBerries ) { this . useRazzBerry = useRazzBerries ? _NUM : _NUM ; return this ; }
8459	public synchronized ZooKeeperClientBuilder zkServers ( String zkServers ) { this . zkServers = zkServers ; return this ; }
8461	protected boolean checkCast ( AccessPath accessPath , Type type ) { if ( accessPath . isStaticFieldRef ( ) ) return canCastType ( type , accessPath . getFirstFieldType ( ) ) ; else return canCastType ( type , accessPath . getBaseType ( ) ) ; }
8474	public Builder zoomOffset ( Number zoomOffset ) { this . zoomOffset = zoomOffset ; return this ; }
8476	public Builder transparent ( Boolean transparent ) { this . transparent = transparent ; return this ; }
8492	public AemContextMenu openContextMenu ( int n ) { contextMenu . open ( currentScope . findElements ( By . cssSelector ( SELECTOR_FOR_COMPONENT_IN_PARSYS ) ) . get ( n ) ) ; return contextMenu ; }
8514	public void unlockUserInput ( ) { commandManager . setEnableCritical ( _BOOL ) ; locked = _BOOL ; }
8526	private void addEntry ( ) { model . addNewEntry ( ) ; removeButton . setEnabled ( _BOOL ) ; }
8532	public static int monthsBetween ( Date startDate , Date endDate ) { final Months days = Months . monthsBetween ( new DateTime ( startDate ) , new DateTime ( endDate ) ) ; return days . getMonths ( ) ; }
8536	public void movePrevPosition ( boolean smooth ) { if ( getRealAdapter ( ) == _NULL ) throw new IllegalStateException ( _CHAR You did not set a slider adapter _CHAR ) ; mViewPager . setCurrentItem ( mViewPager . getCurrentItem ( ) - _NUM , smooth ) ; }
8548	public Bundler putByteArray ( String key , byte [ ] value ) { bundle . putByteArray ( key , value ) ; return this ; }
8558	public static String formatPrice ( BigDecimal price ) { if ( price == _NULL ) return _CHAR _CHAR ; return priceDecimalFormat . format ( price ) ; }
8563	public boolean tTest ( final double mu , final double [ ] sample , final double alpha ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSignificanceLevel ( alpha ) ; return tTest ( mu , sample ) < alpha ; }
8602	public void overrideBackbutton ( boolean override ) { LOG . i ( _CHAR App _CHAR , _CHAR WARNING : Back Button Default Behavior will be overridden . The backbutton event will be fired ! _CHAR ) ; webView . setButtonPlumbedToJs ( KeyEvent . KEYCODE_BACK , override ) ; }
8625	static Pair < DistributedLogClient , MonitorServiceClient > createDistributedLogClient ( SocketAddress host , DistributedLogClientBuilder clientBuilder ) { DistributedLogClientBuilder newBuilder = DistributedLogClientBuilder . newBuilder ( clientBuilder ) . host ( host ) ; return ClientUtils . buildClient ( newBuilder ) ; }
8648	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
8652	public boolean equals ( Math_Vector other ) { if ( this . x == other . x && this . y == other . y ) return _BOOL ; return _BOOL ; }
8664	public boolean hasSuperclass ( ) { checkLevel ( HIERARCHY ) ; return superClass != _NULL ; }
8686	public AemParsys insertComponent ( String componentGroup , String componentName ) { openInsertWindow ( ) . insertComponent ( componentGroup , componentName ) ; return this ; }
8688	public void clearDiskCache ( ) { checkConfiguration ( ) ; configuration . diskCache . clear ( ) ; }
8689	public CatchOptions useSmartSelect ( boolean smartSelect ) { this . smartSelect = smartSelect ; return this ; }
8690	public void fromAngleAxis ( float angle , Vector3f axis ) { Vector3f normAxis = axis . normalize ( ) ; fromAngleNormalAxis ( angle , normAxis ) ; }
8712	public Builder intoClasspathEntries ( @ Nullable Collection < String > classpathEntries ) { myClasspathEntries = classpathEntries ; return this ; }
8729	public static boolean isConnectedWifi ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_WIFI ) ; }
8733	public Builder logger ( Logger val ) { logger = val ; return this ; }
8739	@ Override public void monitor ( Object proxy , ServiceID serviceID ) throws Exception { spaceProxy = proxy ; super . monitor ( proxy , serviceID ) ; }
8741	public static List < File > find ( File base , final Pattern pattern ) { checkArgument ( base . isDirectory ( ) , _CHAR _CHAR must be a directory . '' ) ; return Files . fileTreeTraverser ( ) . preOrderTraversal ( base ) . filter ( Predicates . compose ( Predicates . contains ( pattern ) , GET_PATH ) ) . toList ( ) ; }
8760	private void widgetChanged ( ) { configureUI ( ) ; repaint ( ) ; }
8765	public StaticScript cache ( boolean shouldCache ) { this . shouldCache = shouldCache ; return this ; }
8772	@ Override protected void reset ( ) throws XNIException { super . reset ( ) ; fInDTD = _BOOL ; }
8788	protected void removeAt ( int index ) { _set [ index ] = ( short ) _NUM ; super . removeAt ( index ) ; }
8789	protected void drawGuiContainerForegroundLayer ( int mouseX , int mouseY ) { this . fontRendererObj . drawString ( this . name , _NUM , _NUM , _NUM ) ; this . fontRendererObj . drawString ( this . playerInventory . getDisplayName ( ) . getUnformattedText ( ) , _NUM , this . ySize - _NUM + _NUM , _NUM ) ; }
8808	public void addSystemPropParameter ( String key , String value ) { if ( key == _NULL || value == _NULL ) throw new IllegalArgumentException ( _CHAR Illegal system property argument for key : [ '' + key + '' ] value : [ '' + value + '' ] '' ) ; _systemProp . put ( key , value ) ; }
8814	public static Optional < String > wavefrontValue ( MetricValue mv ) { if ( mv . isInfiniteOrNaN ( ) ) return Optional . empty ( ) ; return mv . value ( ) . map ( _NULL ) ; }
8817	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { TcNoteDao . dropTable ( db , ifExists ) ; CustomerDao . dropTable ( db , ifExists ) ; }
8827	public void squaresColor ( @ ColorInt int color ) { squaresPaint . setColor ( color ) ; invalidate ( ) ; }
8839	@ Override public final char readChar ( ) throws IOException { dis . readFully ( work , _NUM , _NUM ) ; return ( char ) ( ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) ) ; }
8840	NewProjectDescriptor withName ( @ NotNull String name ) { myName = name ; return this ; }
8841	public static final void addPlayer ( PlayerAlliance alliance , Player player ) { Preconditions . checkNotNull ( alliance , _CHAR Alliance should not be _NULL _CHAR ) ; alliance . onEvent ( new PlayerEnteredEvent ( alliance , player ) ) ; }
8862	public void addCategory ( String category ) { if ( TextUtils . isEmpty ( category ) ) return ; mIntent . addCategory ( category ) ; }
8871	public void print ( ) { System . out . println ( _CHAR ----- _CHAR ) ; center . print ( _NUM , _NUM ) ; }
8872	public static WordRelation createWordRelation ( Utterance utterance , TokenToWords tokenToWords ) { Relation relation = utterance . createRelation ( Relation . WORD ) ; return new WordRelation ( relation , tokenToWords ) ; }
8874	public void startDrag ( RecyclerView . ViewHolder viewHolder ) { initializeItemTouchHelper ( ) ; mDefaultItemTouchHelper . startDrag ( viewHolder ) ; }
8879	public FormField withIcon ( int resId ) { this . mIconView . setImageResource ( resId ) ; return this ; }
8885	@ GET @ Path ( _CHAR / logout _CHAR ) @ Produces ( APPLICATION_JSON ) @ ApiOperation ( value = _CHAR Log a user out _CHAR ) @ Timed public Response logUserOut ( @ HeaderParam ( AUTHORIZATION ) @ ApiParam ( value = EXAMPLE_AUTHORIZATION_HEADER , required = _BOOL ) final String tokenHeader ) { authentication . logOut ( tokenHeader ) ; return httpHeader . headers ( NO_CONTENT ) . build ( ) ; }
8903	public void add ( PokedexEntry entry ) { PokemonId id = PokemonId . forNumber ( entry . getPokemonId ( ) . getNumber ( ) ) ; pokedexMap . put ( id , entry ) ; }
8915	@ Override public void undoAction ( UndoInterface undoRedoObject ) { String oldValueObj = ( String ) undoRedoObject . getOldValue ( ) ; attributeChooserComboBox . setSelectedItem ( oldValueObj ) ; }
8918	protected void onOptionSelected ( final EnumSet < DialogOption > selectedOptions ) { showProgressDialog ( ) ; clearBrowsingData ( selectedOptions ) ; }
8928	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR BOOK \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
8933	public String optString ( int index , String defaultValue ) { Object o = opt ( index ) ; return o != _NULL ? o . toString ( ) : defaultValue ; }
8948	public void received ( ByteBuffer buffer ) { hasReceivedData = _BOOL ; lastReceiveTime = System . currentTimeMillis ( ) ; }
8974	private void requestRemoveNodesStop ( ) { enqueue ( new RemoveNodeMessageClass ( ) . doRequestStop ( ) ) ; logger . debug ( _CHAR ZWave controller end exclusion _CHAR ) ; }
8979	private static TxnManager constrainServer ( TxnManager server , MethodConstraints constraints ) { RemoteMethodControl constrainedServer = ( ( RemoteMethodControl ) server ) . setConstraints ( constraints ) ; return ( ( TxnManager ) constrainedServer ) ; }
8997	public RabbitMqCommand listenToEvents ( ProcessListener listener ) { this . eventsListener = listener ; return this ; }
9007	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR _CHAR _CHAR ; db . execSQL ( sql ) ; }
9020	public FormField withLabel ( String label ) { this . stepLabel = label ; return this ; }
9023	public void addAssetsDirectory ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myAssetsDirectories . add ( directory ) ; }
9024	@ Override public void write ( byte b [ ] , int off , int len ) throws IOException { out . write ( b , off , len ) ; md5 . Update ( b , off , len ) ; }
9028	private boolean hasBaseline ( ) { ConstraintAnchor anchor = mWidget . getAnchor ( ConstraintAnchor . Type . BASELINE ) ; return anchor != _NULL && anchor . isConnected ( ) ; }
9046	public Bundler putString ( String key , String value ) { bundle . putString ( key , value ) ; return this ; }
9056	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
9063	public static ChannelBuilder create ( String name ) { if ( exists ( name ) ) throw new IllegalArgumentException ( String . format ( _CHAR Channel % s already exists _CHAR , name ) ) ; return new ChannelBuilder ( name ) ; }
9068	public JSONObject put ( String key , Collection value ) throws JSONException { put ( key , new JSONArray ( value ) ) ; return this ; }
9087	public void drag ( long time , float x , float y , float deltaX , float deltaY , float totalX , float totalY ) { mModelSelectorButton . drag ( x , y ) ; getActiveStripLayoutHelper ( ) . drag ( time , x , y , deltaX , deltaY , totalX , totalY ) ; }
9098	protected void startZKCluster ( ) throws Exception { zkUtil . startServer ( ) ; zkc = zkUtil . getZooKeeperClient ( ) ; }
9103	public void addImportDecl ( ImportDecl node ) { List < ImportDecl > list = ( parent == _NULL || state == _NULL ) ? getImportDeclListNoTransform ( ) : getImportDeclList ( ) ; list . addChild ( node ) ; }
9109	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR TRANSLATE \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
9112	@ Override public PacketBuffer write ( PacketBuffer buf ) { values . forEach ( _NULL ) ; return buf ; }
9113	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR _CHAR _CHAR ; db . execSQL ( sql ) ; }
9114	public static void organizeAndSpawn ( int worldId , int instanceId ) { InstanceWalkerFormations formations = WalkerFormationsCache . getInstanceFormations ( worldId , instanceId ) ; formations . organizeAndSpawn ( ) ; }
9115	public Bundler putParcelableArray ( String key , Parcelable [ ] value ) { bundle . putParcelableArray ( key , value ) ; return this ; }
9116	public static byte [ ] decode ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decode ( bytes , _NUM , bytes . length ) ; }
9119	public CreatePageWindow typeTitle ( String title ) { titleField . setValue ( title ) ; return this ; }
9131	private boolean isJarURL ( URL url ) { String protocol = url . getProtocol ( ) ; return _CHAR jar _CHAR . equals ( protocol ) || _CHAR zip _CHAR . equals ( protocol ) || _CHAR wsjar _CHAR . equals ( protocol ) || _CHAR code - source _CHAR . equals ( protocol ) && url . getPath ( ) . contains ( _CHAR ! / _CHAR ) ; }
9135	public void addObserver ( Observer observer ) { Assert . notNull ( _CHAR observer _CHAR , observer ) ; observers . addIfAbsent ( observer ) ; }
9137	public CriteriaHibernateSpaceDataSourceConfigurer performOrderById ( boolean performOrderById ) { this . performOrderById = performOrderById ; return this ; }
9147	public static int handle ( BiomeColor color ) { OpenModLoader . getEventBus ( ) . post ( color ) ; return color . getColorModifier ( ) ; }
9148	@ Override public Future < List < Future < DLSN >> > writeBulk ( final List < LogRecord > records ) { final Stopwatch stopwatch = Stopwatch . createStarted ( ) ; return Future . value ( asyncWriteBulk ( records ) ) . addEventListener ( new OpStatsListener < List < Future < DLSN >> > ( bulkWriteOpStatsLogger , stopwatch ) ) ; }
9153	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR httpFile \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
9169	public void updateSchema ( TableId table , String topic , Set < Schema > schemas ) { Schema kafkaConnectSchema = schemaRetriever . retrieveSchema ( table , topic , schemas ) ; bigQuery . update ( constructTableInfo ( table , kafkaConnectSchema ) ) ; }
9187	public void delete ( ) throws IOException { close ( ) ; deleteContents ( directory ) ; }
9190	public double inference ( Document d , double [ ] pzd ) { initializeTopics ( d ) ; return inferenceByGibbsSampling ( d , pzd , _NUM , _NUM ) ; }
9195	private void init ( ) { parseActions ( ) ; parseName ( new StringTokenizer ( getName ( ) , _CHAR _CHAR , _BOOL ) , _BOOL ) ; }
9206	public boolean isValidCountryCodeTld ( String ccTld ) { ccTld = unicodeToASCII ( ccTld ) ; return Arrays . binarySearch ( COUNTRY_CODE_TLDS , chompLeadingDot ( ccTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
9207	@ Override public void startDocument ( ) throws SAXException { litePalAttr = LitePalAttr . getInstance ( ) ; litePalAttr . getClassNames ( ) . clear ( ) ; }
9210	boolean isLeftChild ( ) { if ( this . parent == _NULL ) return _BOOL ; return ( this . parent . left == this ) ; }
9219	public double calculateResidualSumOfSquares ( ) { final RealVector residuals = calculateResiduals ( ) ; return residuals . dotProduct ( residuals ) ; }
9224	private static int hashOf ( final int key ) { final int h = key ^ ( ( key >> > _NUM ) ^ ( key >> > _NUM ) ) ; return h ^ ( h >> > _NUM ) ^ ( h >> > _NUM ) ; }
9231	public static void dropAllTables ( Database db , boolean ifExists ) { BangumiCalendarDao . dropTable ( db , ifExists ) ; MyCollectionDao . dropTable ( db , ifExists ) ; }
9232	public void removeSubscriptionFromStore ( final String topic , final String clientId ) { subscriptionsStore . removeSubscription ( topic , clientId ) ; topics . remove ( topic ) ; }
9238	private void resetSearchBarContextOpacity ( ) { mSearchBarContextOpacity = _NUM . f ; mSearchBarTermOpacity = _NUM . f ; }
9240	public Builder shadowRetinaUrl ( String shadowRetinaUrl ) { this . shadowRetinaUrl = shadowRetinaUrl ; return this ; }
9242	public int findLastCompletelyVisibleItemPosition ( ) { final View child = findOneVisibleChild ( layoutManager . getChildCount ( ) - _NUM , - _NUM , _BOOL , _BOOL ) ; return child == _NULL ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }
9249	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
9260	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
9273	public synchronized void readUnlock ( ) { activeReaders -- ; if ( activeReaders == _NUM ) notifyAll ( ) ; }
9274	private void scheduleValueComputationTask ( ValueComputationTask task ) { if ( executor . isTerminating ( ) ) return ; executor . execute ( task ) ; }
9293	public void put ( String name , int id ) { name2id . put ( name , id ) ; id2name . put ( id , name ) ; }
9296	public static void createTable ( Database db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR COLLECT \ _CHAR ( _CHAR + _CHAR \ _CHAR ID \ _CHAR INTEGER NOT NULL , _CHAR + _CHAR \ _CHAR DESC \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR URL \ _CHAR TEXT PRIMARY KEY NOT NULL , _CHAR + _CHAR \ _CHAR COLLECT_DATE \ _CHAR INTEGER NOT NULL ) ; _CHAR ) ; }
9302	public Builder calculateSortedRank ( String newColumnName , String sortOnColumn , WritableComparator comparator , boolean ascending ) { actionList . add ( new DataAction ( new CalculateSortedRank ( newColumnName , sortOnColumn , comparator , ascending ) ) ) ; return this ; }
9318	public void train ( Map CategoryValues , String sSuggestedCategory , String sFinalCategory ) { if ( CategoryValues == _NULL ) CategoryValues = new HashMap ( ) ; if ( CategoryValues . size ( ) > _NUM ) vPreviousDecisions . add ( new DecisionSupport ( CategoryValues , sSuggestedCategory , sFinalCategory ) ) ; }
9320	public void spacing ( ) { int len = m_bias + m_tagStack . size ( ) * m_tab ; for ( int i = _NUM ; i < len ; ++ i ) m_out . print ( _CHAR ) ; }
9326	public void zoom ( float scaleX , float scaleY , float xValue , float yValue , AxisDependency axis ) { Runnable job = ZoomJob . getInstance ( mViewPortHandler , scaleX , scaleY , xValue , yValue , getTransformer ( axis ) , axis , this ) ; addViewportJob ( job ) ; }
9338	@ RequestMapping ( method = RequestMethod . POST , value = _CHAR { clientVersion } / orgUnits / { id } / activities _CHAR ) @ ResponseBody public String saveActivityReport ( @ PathVariable int id , @ RequestBody ActivityValue activityValue ) throws NotAllowedException { activityReportingService . saveActivityReport ( getUnit ( id ) , activityValue , _NUM ) ; return ACTIVITY_REPORT_UPLOADED ; }
9345	public static String removeLastAnd ( String string ) { string = StringUtils . stripEnd ( string , _CHAR _CHAR ) ; return StringUtils . removeEndIgnoreCase ( string , _CHAR and _CHAR ) ; }
9349	public void addVariableDecl ( VariableDecl node ) { List < VariableDecl > list = ( parent == _NULL || state == _NULL ) ? getVariableDeclListNoTransform ( ) : getVariableDeclList ( ) ; list . addChild ( node ) ; }
9367	public void clearMemoryCache ( ) { checkConfiguration ( ) ; configuration . memoryCache . clear ( ) ; }
9368	public Bundler putSparseParcelableArray ( String key , SparseArray < ? extends Parcelable > value ) { bundle . putSparseParcelableArray ( key , value ) ; return this ; }
9374	public JsonArray remove ( int index ) { values . remove ( index ) ; return this ; }
9380	public String toString ( ) { SimpleDateFormat df = new SimpleDateFormat ( _CHAR yyyy - MM - dd HH : mm : ss _CHAR ) ; return _CHAR source_ip_addr = _CHAR + this . source_ip_addr + _CHAR , _CHAR + _CHAR file_size = _CHAR + this . file_size + _CHAR , _CHAR + _CHAR create_timestamp = _CHAR + df . format ( this . create_timestamp ) + _CHAR , _CHAR + _CHAR crc32 = _CHAR + this . crc32 ; }
9383	public static boolean isSupportedHardware ( Context context ) { FingerprintManagerCompat fingerprintManager = FingerprintManagerCompat . from ( context ) ; return fingerprintManager . isHardwareDetected ( ) ; }
9388	public JSONArray put ( int value ) { this . put ( new Integer ( value ) ) ; return this ; }
9396	@ Override public void delete ( ) throws ConceptException { ConceptImpl properType = getMindmapsGraph ( ) . getElementFactory ( ) . buildUnknownConcept ( vertex ) ; properType . innerDelete ( ) ; }
9400	public void cleanupTableSetForScan ( String id ) { String path = getPathForScan ( id ) ; DistributedTableSerializer . cleanup ( _curator , path ) ; }
9410	public static Future < BoxedUnit > zkAsyncCreateFullPathOptimistic ( final ZooKeeperClient zkc , final String pathToCreate , final byte [ ] data , final List < ACL > acl , final CreateMode createMode ) { Optional < String > parentPathShouldNotCreate = Optional . absent ( ) ; return zkAsyncCreateFullPathOptimistic ( zkc , pathToCreate , parentPathShouldNotCreate , data , acl , createMode ) ; }
9413	public static void copyRawFile ( Context context , int resid , File file , String mode ) throws IOException , InterruptedException { final InputStream is = context . getResources ( ) . openRawResource ( resid ) ; copyFile ( file , is , mode ) ; }
9432	public static Value rhs ( Unit unit ) { if ( unit instanceof AssignStmt ) return ( ( AssignStmt ) unit ) . getRightOp ( ) ; else return _NULL ; }
9436	@ Override protected void readImpl ( ) { macroPosition = readC ( ) ; macroXML = readS ( ) ; }
9448	private String separeMetaTagsContent ( String content ) { String result = Regex . pregMatch ( content , Regex . METATAG_CONTENT_PATTERN , _NUM ) ; return htmlDecode ( result ) ; }
9452	public Builder pointerEvents ( String pointerEvents ) { this . pointerEvents = pointerEvents ; return this ; }
9453	public void addDims ( Dims node ) { List < Dims > list = ( parent == _NULL || state == _NULL ) ? getDimsListNoTransform ( ) : getDimsList ( ) ; list . addChild ( node ) ; }
9463	private void updateLayoutParams ( View currentHeader ) { MarginLayoutParams params = ( MarginLayoutParams ) currentHeader . getLayoutParams ( ) ; matchMarginsToPadding ( params ) ; }
9466	private void initializeGooglePlusVariables ( ) { GoogleSignInOptions gso = new GoogleSignInOptions . Builder ( GoogleSignInOptions . DEFAULT_SIGN_IN ) . requestEmail ( ) . requestProfile ( ) . build ( ) ; mGoogleApiClient = new GoogleApiClient . Builder ( this ) . enableAutoManage ( this , this ) . addApi ( Auth . GOOGLE_SIGN_IN_API , gso ) . build ( ) ; }
9473	public float [ ] evaluate ( List < String > taggedSentences ) { DataFrame dataset = createDataFrame ( taggedSentences ) ; return evaluate ( dataset ) ; }
9488	public static int clearListInfo ( Delegator delegator , String shoppingListId ) throws GenericEntityException { delegator . removeByAnd ( _CHAR ShoppingListItemSurvey _CHAR , UtilMisc . toMap ( _CHAR shoppingListId _CHAR , shoppingListId ) ) ; return delegator . removeByAnd ( _CHAR ShoppingListItem _CHAR , UtilMisc . toMap ( _CHAR shoppingListId _CHAR , shoppingListId ) ) ; }
9500	public Builder duration ( Number duration ) { this . duration = duration ; return this ; }
9506	public static void writeSwappedShort ( byte [ ] data , int offset , short value ) { data [ offset + _NUM ] = ( byte ) ( ( value >> _NUM ) & _NUM ) ; data [ offset + _NUM ] = ( byte ) ( ( value >> _NUM ) & _NUM ) ; }
9509	private static Set < URL > urlsToReflect ( List < String > packagePrefixes ) { List < String > prefixesWithFlags = ImmutableList . < String > builder ( ) . addAll ( packagePrefixes ) . add ( _CHAR org . flagz _CHAR ) . build ( ) ; return prefixesWithFlags . stream ( ) . flatMap ( _NULL ) . collect ( Collectors . toSet ( ) ) ; }
9513	public SortedSet < String > fields ( ) { if ( myFieldSet == _NULL ) myFieldSet = new TreeSet < String > ( fields . keySet ( ) ) ; return myFieldSet ; }
9529	public Vector2f zero ( ) { x = y = _NUM ; return this ; }
9531	@ SubscribeEvent public void onSleepInBed ( PlayerSleepInBedEvent event ) { if ( ! BWConfig . hardcoreBeds ) return ; if ( EntityPlayerExt . isSurvival ( event . getEntityPlayer ( ) ) ) event . setResult ( EntityPlayer . SleepResult . NOT_SAFE ) ; }
9533	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
9553	public static RecyclerView . ViewHolder createViewHolder ( ViewGroup parent ) { View view = LayoutInflater . from ( parent . getContext ( ) ) . inflate ( R . layout . item_message , _NULL ) ; return new MessageHolder ( view ) ; }
9580	@ Override public void close ( ) throws SAException { if ( _templates != _NULL ) _templates . freeSLHolder ( _pos ) ; super . close ( ) ; }
9588	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
9595	public void removeValue ( int row ) { valueList . remove ( row ) ; this . fireTableDataChanged ( ) ; }
9596	public final void unschedule ( final ScheduledTask task ) { if ( task == _NULL ) return ; task . suspend ( ) ; }
9597	private boolean permissionOnInAndroid ( String permission , Context context ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . M ) return _BOOL ; return PackageManager . PERMISSION_GRANTED == context . getPackageManager ( ) . checkPermission ( permission , context . getPackageName ( ) ) ; }
9600	public static final void addPlayer ( PlayerGroup group , Player player ) { Preconditions . checkNotNull ( group , _CHAR Group should not be _NULL _CHAR ) ; group . onEvent ( new PlayerEnteredEvent ( group , player ) ) ; }
9634	private void writeObject ( ObjectOutputStream oos ) throws IOException { oos . defaultWriteObject ( ) ; MatrixUtils . serializeRealVector ( coefficients , oos ) ; }
9636	public Optional < Double > min ( ) { if ( isEmpty ( ) ) return Optional . empty ( ) ; return Optional . of ( buckets_ . get ( _NUM ) . getRange ( ) . getFloor ( ) ) ; }
9643	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
9655	public JSONArray put ( boolean value ) { this . put ( value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
9658	public Vector3f zero ( ) { x = y = z = _NUM ; return this ; }
9666	public Builder withLimit ( long limit ) { this . limit = limit ; return this ; }
9686	public BaseFlag < T > withListener ( Consumer < T > predicate ) { listeners . add ( predicate ) ; return this ; }
9691	@ Override public Data read ( @ Nonnull final String data ) { Check . notNull ( data , _CHAR data _CHAR ) ; return readXml ( new ByteArrayInputStream ( data . getBytes ( DEFAULT_CHARSET ) ) , DEFAULT_CHARSET ) ; }
9698	public static boolean isDailyReminderSet ( Context context ) { SharedPreferences prefs = PreferenceManager . getDefaultSharedPreferences ( context ) ; return prefs . getBoolean ( context . getString ( R . string . key_daily_reminder ) , _BOOL ) ; }
9720	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
9726	public static void initFileAndLogMgr ( String dirName ) { initFileMgr ( dirName ) ; logMgr = new LogMgr ( ) ; }
9742	public boolean isRtlSupported ( ) { sync ( ) ; return myApplicationSupportsRtl ; }
9743	public Builder maxWidth ( Number maxWidth ) { this . maxWidth = maxWidth ; return this ; }
9756	public synchronized BookKeeperClientBuilder dlConfig ( DistributedLogConfiguration dlConfig ) { this . dlConfig = dlConfig ; return this ; }
9757	public JSONArray put ( Object value ) { this . myArrayList . add ( value ) ; return this ; }
9774	public static double roundDouble ( double value , int afterDecimalPoint ) { double mask = Math . pow ( _NUM . _NUM , ( double ) afterDecimalPoint ) ; return ( double ) ( Math . round ( value * mask ) ) / mask ; }
9782	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . main ) ; }
9798	public ResourceLazyLoadingScript name ( String name ) { this . name = name ; return this ; }
9803	@ Override protected void onRestoreInstanceState ( Bundle savedInstanceState ) { super . onRestoreInstanceState ( savedInstanceState ) ; contentManager . onRestoreInstanceState ( savedInstanceState ) ; }
9809	private String generateChartHtml ( Chart chart , User user ) throws IOException { JFreeChart jFreechart = chartService . getJFreeChart ( chart , new Date ( ) , _NULL , i18nManager . getI18nFormat ( ) , user ) ; return uploadImage ( chart . getUid ( ) , ChartUtils . getChartAsPngByteArray ( jFreechart , _NUM , _NUM ) ) ; }
9823	protected void writeAnnotation ( String loc ) throws IOException { hadAnnotations |= ( loc != _NULL ) ; locOut . writeObject ( loc ) ; }
9824	public void add ( short val ) { ensureCapacity ( _pos + _NUM ) ; _data [ _pos ++ ] = val ; }
9845	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
9848	public synchronized void rotate ( final Point2D p , double theta ) { m_itransform . transform ( p , m_tmpPoint ) ; rotateAbs ( m_tmpPoint , theta ) ; }
9851	public ResourcesPoet addInteger ( String name , Integer value ) { addInteger ( name , String . valueOf ( value ) ) ; return this ; }
9856	public Bundler putFloat ( String key , float value ) { bundle . putFloat ( key , value ) ; return this ; }
9861	private void addLabelRenderer ( EsriLabelRendererInterface labelRendererObj ) { logger . info ( _CHAR \ t _CHAR + labelRendererObj . getName ( ) ) ; labelRendererMap . put ( labelRendererObj . getName ( ) , labelRendererObj ) ; }
9865	protected String createAgentID ( int iLen ) { String sTemp = String . valueOf ( new Date ( ) . getTime ( ) ) ; return sTemp . substring ( sTemp . length ( ) - iLen ) ; }
9877	public static void main ( String [ ] args ) { MouseDrag simulation = new MouseDrag ( ) ; simulation . run ( ) ; }
9889	protected void writeShort ( int value ) throws IOException { out . write ( value & _NUM ) ; out . write ( ( value >> _NUM ) & _NUM ) ; }
9908	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
9918	public HumanTime s ( int n ) { delta += SECOND * Math . abs ( n ) ; return this ; }
9919	public CarouselOptions maxQuantity ( int maxQuantity ) { mMaxQuantity = maxQuantity ; return this ; }
9961	public void write ( int a ) throws IOException { outs . write ( a ) ; position ++ ; }
9965	public void addCatchClause ( CatchClause node ) { List < CatchClause > list = ( parent == _NULL || state == _NULL ) ? getCatchClauseListNoTransform ( ) : getCatchClauseList ( ) ; list . addChild ( node ) ; }
9967	@ Override public void onRequestPermissionsResult ( int requestCode , @ NonNull String [ ] permissions , @ NonNull int [ ] grantResults ) { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; contentManager . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; }
9970	@ Override public void start ( ) { m_line . start ( ) ; super . start ( ) ; }
9972	protected boolean invalidStandaloneAttDef ( QName element , QName attribute ) { boolean state = _BOOL ; return state ; }
9978	NewProjectDescriptor withCompanyDomain ( @ NotNull String domain ) { myDomain = domain ; return this ; }
9980	public void onDown ( long time , float x , float y , boolean fromMouse , int buttons ) { if ( mModelSelectorButton . onDown ( x , y ) ) return ; getActiveStripLayoutHelper ( ) . onDown ( time , x , y , fromMouse , buttons ) ; }
9981	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
9989	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
9992	@ Override public void cacheGrammars ( String grammarType , Grammar [ ] grammars ) { super . cacheGrammars ( grammarType , grammars ) ; fGrammarPool . cacheGrammars ( grammarType , grammars ) ; }
9994	public static boolean isRestartActivity ( ) { InstantRunConfiguration configuration = InstantRunConfiguration . getInstance ( ) ; return configuration . RESTART_ACTIVITY ; }
9995	@ Override public void startElement ( String uri , String localName , String qName , Attributes atts ) throws SAXException { allowXMLCatalogPI = _BOOL ; super . startElement ( uri , localName , qName , atts ) ; }
10006	public void pasteComponentByContextMenu ( ) { final int componentsCount = componentsCount ( ) ; wait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; }
10007	public Collection values ( ) { processQueue ( ) ; return map . values ( ) ; }
10008	public void removeInputProcessor ( InputProcessor ip ) { processors . removeProcessor ( ip ) ; Gdx . input . setInputProcessor ( processors ) ; }
10014	public static float handle ( float digSpeed , World world , IBlockState state , BlockPos pos ) { DigSpeed event = new DigSpeed ( digSpeed , world , state , pos ) ; return ! OpenModLoader . getEventBus ( ) . post ( event ) || event . getDigSpeed ( ) < _NUM . _NUM ? _NUM . _NUM : event . getDigSpeed ( ) ; }
10020	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
10037	public static void makeSnackBar ( View parentView , String str , int length ) { final Snackbar snackbar = Snackbar . make ( parentView , str , length ) ; snackbar . show ( ) ; }
10045	@ NotNull GetPersonGroupTrainingStatusAction personGroupTrainingStatus ( @ NotNull String personGroupId ) { Validation . validate ( personGroupId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR personGroupId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new GetPersonGroupTrainingStatusAction ( cognitiveContext , personGroupId ) ; }
10065	@ CheckReturnValue public Notice withWorld ( World world ) { this . world = world ; return this ; }
10066	private boolean journalRebuildRequired ( ) { final int REDUNDANT_OP_COMPACT_THRESHOLD = _NUM ; return redundantOpCount >= REDUNDANT_OP_COMPACT_THRESHOLD && redundantOpCount >= lruEntries . size ( ) ; }
10071	public ExportDropConfig exportDrop ( ExportDropConfig exportDropConfig ) { String exportPath = UriComponentsBuilder . fromPath ( getBasePathForEntity ( ) ) . pathSegment ( _CHAR export _CHAR ) . toUriString ( ) ; return authenticatedRestTemplate . postForObject ( exportPath , exportDropConfig , ExportDropConfig . class ) ; }
10074	public DefaultHibernateSpaceDataSourceConfigurer fetchSize ( int fetchSize ) { this . fetchSize = fetchSize ; return this ; }
10075	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
10081	public double chiSquareTest ( final double [ ] expected , final long [ ] observed ) throws MathIllegalArgumentException , MathIllegalStateException { final ChiSquaredDistribution distribution = new ChiSquaredDistribution ( expected . length - _NUM . _NUM ) ; return _NUM . _NUM - distribution . cumulativeProbability ( chiSquare ( expected , observed ) ) ; }
10111	public String directionFromBearing ( double bearing ) { int index = ( int ) ( ( bearing / _NUM . _NUM ) + _NUM . _NUM ) % _NUM ; return compassDirections [ index ] ; }
10119	public static float calculateBottom ( float left , float top , float right , float targetAspectRatio ) { final float width = right - left ; return ( width / targetAspectRatio ) + top ; }
10123	private void delayedHide ( int delayMillis ) { mHideHandler . removeCallbacks ( mHideRunnable ) ; mHideHandler . postDelayed ( mHideRunnable , delayMillis ) ; }
10131	public static boolean isConnectedWifi ( Context context ) { NetworkInfo info = NetworkUtil . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_WIFI ) ; }
10132	private void refreshPages ( ) { timelineDisplayFragment . setImage ( currentPhase . getImageUrl ( ) ) ; timelineAboutFragment . setAboutText ( currentPhase . getDescription ( ) ) ; }
10136	public void registerWith ( @ NotNull ScopedDataBinder binder ) { assert myFormFactor != _NULL : _CHAR register ( ) called on FormFactorApiComboBox before init ( ) _CHAR ; binder . register ( FormFactorUtils . getTargetComboBoxKey ( myFormFactor ) , this , TARGET_COMBO_BINDING ) ; }
10144	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_user ) ; }
10173	public JSONArray put ( long value ) { put ( new Long ( value ) ) ; return this ; }
10184	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = StringCodingUtils . getBytes ( input , Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
10186	public String optString ( String key , String defaultValue ) { Object o = opt ( key ) ; return o != _NULL ? o . toString ( ) : defaultValue ; }
10192	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
10208	public void onError ( int taskId , String reason ) { this . transfers . remove ( taskId ) ; textLog . info ( _CHAR taskId : _CHAR + taskId + _CHAR ; [ Error . Transfer failed ] _CHAR + reason ) ; }
10220	public void load ( String featureFileName , String weightsFile , FeatureProcessorManager featProc ) throws IOException , MaryConfigurationException { HalfPhoneFeatureFileReader ffr = new HalfPhoneFeatureFileReader ( featureFileName ) ; load ( ffr , weightsFile , featProc ) ; }
10226	protected void clearRowsAndCategories ( boolean clearData ) { clearRows ( clearData ) ; clearCategories ( ) ; }
10231	public final ProgressEvent increaseProgress ( ) { Progress ++ ; return this ; }
10237	@ Override public synchronized void write ( byte [ ] b ) throws IOException { super . write ( b ) ; this . branch . write ( b ) ; }
10238	public Builder maxZoom ( Number maxZoom ) { this . maxZoom = maxZoom ; return this ; }
10246	NewProjectDescriptor withMinSdk ( @ NotNull String minSdk ) { myMinSdk = minSdk ; return this ; }
10249	@ Override public void clear ( ) { super . clear ( ) ; fEntityName = _NULL ; }
10265	private void close ( ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) this . supportFinishAfterTransition ( ) ; else finish ( ) ; }
10280	public CreateSiteWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentWindow ) ) ; return this ; }
10281	public static void removeSpaceProperties ( String fullSpaceName ) { m_UrlTable . remove ( fullSpaceName ) ; m_spaceProperties . remove ( fullSpaceName ) ; }
10282	protected final void fireColumnEvent ( int idx , float prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
10286	public boolean add ( E o ) { if ( o == _NULL ) return _BOOL ; return map . put ( o , PRESENT ) == _NULL ; }
10296	public static PokkitMaterialData fromBukkit ( Material material , int bukkitDamage ) { @ SuppressWarnings ( _CHAR deprecation _CHAR ) int bukkitId = material . getId ( ) ; return new PokkitMaterialData ( bukkitId , bukkitDamage ) ; }
10307	void discardResource ( ) { R old = resource ; lifecycle . onRemoval ( resourceKey . getKey ( ) , old ) ; }
10321	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
10335	public synchronized void end ( ) { this . active = _BOOL ; this . beginPosition = _NULL ; }
10338	public Bindings add ( String property , JToggleButton c , boolean defaultValue ) { registerPropertyChangeListener ( c ) ; return add ( new JToggleButtonBinding ( property , c , defaultValue ) ) ; }
10342	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
10348	@ Override public String toString ( ) { String condition = acceptLarger ? _CHAR >= _CHAR : _CHAR < _CHAR ; return super . toString ( ) + _CHAR ( _CHAR + condition + size + _CHAR ) _CHAR ; }
10356	@ Override public void onActivityResult ( int requestCode , int resultCode , Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; ReactiveLogin . onActivityResult ( requestCode , resultCode , data ) ; }
10357	public final ProgressEvent updateSubtask ( String sSubtaskName ) { SubtaskName = sSubtaskName ; return this ; }
10371	public void clearDiskCache ( ) { checkConfiguration ( ) ; configuration . diskCache . clear ( ) ; }
10374	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Utf8_info ci = ( CONSTANT_Utf8_info ) ( constant_pool [ name_index ] ) ; return ci . convert ( ) ; }
10380	public SiteAdminPage waitForConfirmationWindow ( ) { siteAdminConfirmationWindow . waitToBeDisplayed ( ) ; return this ; }
10381	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
10383	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
10384	public static Value noInvoke ( Value val ) { if ( val == _NULL || isInvoke ( val ) ) return _NULL ; else return val ; }
10402	public FieldRefNode makeGlobalFieldRefNode ( Object baseValue , Type baseType , SparkField field ) { VarNode base = makeGlobalVarNode ( baseValue , baseType ) ; return makeFieldRefNode ( base , field ) ; }
10405	public static void startMe ( Context _context ) { Intent intent = new Intent ( _context , CreateTaskActivity . class ) ; _context . startActivity ( intent ) ; }
10410	@ GET public String reset ( ) { this . map . clear ( ) ; return _CHAR Reset endpoints _CHAR ; }
10431	@ Override public void printStackTrace ( ) { super . printStackTrace ( ) ; if ( nested != _NULL ) nested . printStackTrace ( ) ; }
10432	public void writeToByteBuffer ( ByteBuffer buffer ) throws IOException { buffer . clear ( ) ; writeToStream ( new ByteBufferOutputStream ( buffer ) ) ; }
10446	@ Override protected int sizeOf ( String key , BitmapDrawable value ) { final int bitmapSize = getBitmapSize ( value ) / _NUM ; return bitmapSize == _NUM ? _NUM : bitmapSize ; }
10448	public boolean isApplicable ( ) { final CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL && viewer . getMode ( ) == Comparer . COMPARISON_MODE . RELATIVE ; }
10450	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
10455	public void requestSaveToXML ( ) { updateXml ( ) ; mySaveXmlTimer . reset ( ) ; }
10468	private Stream < String > resolve ( String template , CSVReader reader ) throws IOException { String [ ] header = reader . readNext ( ) ; return partitionedStream ( reader . iterator ( ) ) . map ( _NULL ) . map ( _NULL ) ; }
10469	public static StyledLayerDescriptor createNewSLD ( ) { StyledLayerDescriptor sld = styleFactory . createStyledLayerDescriptor ( ) ; return sld ; }
10471	public Builder calculateSortedRank ( String newColumnName , String sortOnColumn , WritableComparator comparator ) { actionList . add ( new DataAction ( new CalculateSortedRank ( newColumnName , sortOnColumn , comparator ) ) ) ; return this ; }
10483	public static boolean removeFromCache ( String imageUri , DiscCacheAware discCache ) { File image = discCache . get ( imageUri ) ; return image . delete ( ) ; }
10493	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
10495	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
10498	public boolean isItemViewSwipeEnabled ( ) { initializeItemTouchHelper ( ) ; return this . mDefaultItemTouchHelper . isItemViewSwipeEnabled ( ) ; }
10505	public static List < Writable > sampleFromColumnSequence ( int count , String columnName , Schema schema , JavaRDD < List < List < Writable >> > sequenceData ) { JavaRDD < List < Writable >> flattenedSequence = sequenceData . flatMap ( new SequenceFlatMapFunction ( ) ) ; return sampleFromColumn ( count , columnName , schema , flattenedSequence ) ; }
10516	public Builder primaryDarkColor ( int colorPrimaryDark ) { this . buttonPressedBackgroundColor = colorPrimaryDark ; return this ; }
10517	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
10529	protected void mouseClicked ( int mouseX , int mouseY , int mouseButton ) throws IOException { super . mouseClicked ( mouseX , mouseY , mouseButton ) ; for ( GuiTextField gtf : this . fields ) gtf . mouseClicked ( mouseX , mouseY , mouseButton ) ; }
10543	public static boolean isDay ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return isIntegerInRange ( s , _NUM , _NUM ) ; }
10555	public Builder timeout ( Number timeout ) { this . timeout = timeout ; return this ; }
10561	private static SubjectKeyIdentifier createSubjectKeyIdentifier ( Key key ) { SubjectPublicKeyInfo publicKeyInfo = SubjectPublicKeyInfo . getInstance ( key . getEncoded ( ) ) ; return new BcX509ExtensionUtils ( ) . createSubjectKeyIdentifier ( publicKeyInfo ) ; }
10580	public static void showCreateAircraft ( Activity activity , int requestCode ) { Intent intent = new Intent ( activity , CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; }
10582	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; registrarID . writeBytes ( out ) ; }
10586	@ Override public void applyInline ( double [ ] data , int off , int len ) { Window w = Window . get ( windowType , len ) ; w . applyInline ( data , off , len ) ; }
10595	void submit ( ProcessAndDisplayImageTask task ) { initExecutorsIfNeed ( ) ; taskExecutorForCachedImages . execute ( task ) ; }
10598	public void requestPasswordForShareViaLink ( boolean createShare ) { SharePasswordDialogFragment dialog = SharePasswordDialogFragment . newInstance ( mFile , createShare ) ; dialog . show ( getFragmentManager ( ) , SharePasswordDialogFragment . PASSWORD_FRAGMENT ) ; }
10600	public RevealBuilder withDelayBetweenChildAnimation ( final int delayBetweenChildAnimation ) { this . mDelayBetweenChildAnimation = delayBetweenChildAnimation ; return this ; }
10606	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_me ) ; }
10609	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
10614	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . getFirstPC ( ) == _NUM && viewer . getPcoaTab ( ) . getSecondPC ( ) == _NUM && viewer . getPcoaTab ( ) . getThirdPC ( ) == _NUM && viewer . getPcoaTab ( ) . isIs3dMode ( ) ; }
10622	public void invalidate ( RuleTag ruleTag , TagQualityStatus status , String statusDescription , Timestamp timestamp ) { updateQuality ( ruleTag , status , statusDescription ) ; setTimestamp ( ruleTag , timestamp ) ; }
10629	public void removeToken ( int i ) { tokens . remove ( i ) ; saveTokenChanges ( ) ; }
10669	public Builder touchZoom ( Boolean touchZoom ) { this . touchZoom = touchZoom ; return this ; }
10671	public Querier encrypt ( ) throws InterruptedException , PIRException { int numThreads = SystemConfiguration . getIntProperty ( _CHAR numThreads _CHAR , _NUM ) ; return encrypt ( numThreads ) ; }
10673	public void scroll ( int itemsToScroll , int time ) { int distance = itemsToScroll * getItemHeight ( ) - scrollingOffset ; scroller . scroll ( distance , time ) ; }
10686	public DistributedLogNamespaceBuilder uri ( URI uri ) { this . _uri = uri ; return this ; }
10691	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = input . getBytes ( Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
10719	public IntIterator rangeSortedBy ( String field , int lo , int hi , int indexType ) { Index index = getIndex ( field , int . class , _BOOL ) ; return index . rows ( lo , hi , indexType ) ; }
10732	public RabbitMqServer listeningToEventsWith ( ProcessListener listener ) { this . listener = listener ; return this ; }
10750	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
10754	public TapTarget outerCircleColor ( @ ColorRes int color ) { this . outerCircleColor = color ; return this ; }
10757	public static ThetaSketchSetOperationPostAggregation makePostAggFromAgg ( SketchSetOperationPostAggFunction function , String name , List < FilteredAggregation > filteredAggregationList ) { List < PostAggregation > operands = filteredAggregationList . stream ( ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; return new ThetaSketchSetOperationPostAggregation ( name , function , operands ) ; }
10762	public static String removeLast ( String string , String remove ) { string = StringUtils . stripEnd ( string , _CHAR _CHAR ) ; return StringUtils . removeEndIgnoreCase ( string , remove ) ; }
10777	public String readPassword ( ) throws CommandException { char [ ] readPassword = getSystemConsole ( ) . readPassword ( ) ; return new String ( readPassword ) ; }
10780	public void onContextChanged ( Context context ) { mNormalHelper . onContextChanged ( context ) ; mIncognitoHelper . onContextChanged ( context ) ; }
10795	public void selectAll ( boolean select ) { classificationViewer . selectAllNodes ( select ) ; classificationViewer . repaint ( ) ; }
10814	public static float pxToDp ( float px ) { float densityDpi = Resources . getSystem ( ) . getDisplayMetrics ( ) . densityDpi ; return pxToDp ( px , densityDpi ) ; }
10822	@ Override public void vendorOptionsUpdated ( List < VersionData > vendorOptionVersionsList ) { this . vendorOptionOptionsList = vendorOptionVersionsList ; updateVendorOptionPanels ( ) ; }
10824	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . isUseColors ( ) ; }
10840	public static void give ( IDimensionSlice idc , TransformData < Any > target , int tickTime , Interpolation interp ) { BasicTransformOrder order = new BasicTransformOrder ( idc . getTransform ( ) . copy ( ) . elide ( ) , target , _NUM . _NUM / tickTime , interp ) ; idc . giveOrder ( order ) ; }
10852	public Builder version ( String version ) { this . version = version ; return this ; }
10884	protected final void fireColumnEvent ( int idx , double prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
10891	public void onCompletion ( MediaPlayer player ) { Log . d ( LOG_TAG , _CHAR on completion is calling stopped _CHAR ) ; this . setState ( STATE . MEDIA_STOPPED ) ; }
10897	private boolean isSentenceStart ( int index ) { FeatureVector fv = features . getFeatureVector ( index ) ; return fv . getByteFeature ( fiSentenceStart ) == _NUM && fv . getByteFeature ( fiWordStart ) == _NUM && ( ! isHalfphone || fv . getByteFeature ( fiLR ) == fvLR_L ) ; }
10907	public static int discretize ( double value , double min , double max , int binCount ) { int discreteValue = ( int ) ( binCount * normalize ( value , min , max ) ) ; return clamp ( discreteValue , _NUM , binCount - _NUM ) ; }
10910	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
10933	public static Optional < String [ ] > lookup ( long code ) { String [ ] desc = DESCRIPTIONS . get ( code & _NUM ) ; return Optional . ofNullable ( desc ) ; }
10935	public void sendRestorePasswordEmail ( final String subject , final String [ ] recipients , final String url , final String login ) { MimeMessagePreparator preparator = _NULL ; this . send ( preparator ) ; }
10943	public EmailBuilder withSubject ( String subject ) { this . subject = subject ; return this ; }
10948	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
10949	public void reload ( SampleAttributeTable sampleAttributeTable ) { originalBytes = _NULL ; load ( sampleAttributeTable ) ; }
10953	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
10957	public static File createUniqueFile ( File targetFolder , String originalFile , boolean keepOriginal ) { String mimeType = MimeTypeMap . getSingleton ( ) . getMimeTypeFromExtension ( originalFile ) ; return createUniqueFile ( targetFolder , originalFile , mimeType , keepOriginal ) ; }
10965	public static synchronized PropertiesSupport sharedInstance ( ) { if ( INSTANCE == _NULL ) INSTANCE = new PropertiesSupport ( ) ; return INSTANCE ; }
10970	NewProjectDescriptor withActivity ( @ NotNull String activity ) { myActivity = activity ; return this ; }
10996	public void sentData ( ) { hasSentData = _BOOL ; lastSendTime = System . currentTimeMillis ( ) ; }
11002	public int size ( String group ) { TupleSet tset = getGroup ( group ) ; return ( tset == _NULL ? _NUM : tset . getTupleCount ( ) ) ; }
11008	public AemSidekick clickCustomOperation ( String optionName ) { getCustomOperation ( optionName ) . click ( ) ; return this ; }
11010	public static int dip2px ( Context context , float dpValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpValue * scale + _NUM . _NUM ) ; }
11025	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
11027	@ Override public void printStackTrace ( PrintWriter pw ) { super . printStackTrace ( pw ) ; if ( nested != _NULL ) nested . printStackTrace ( pw ) ; }
11031	@ PostConstruct public void init ( ) { cacheRegistrationService . registerSynchronousToAllTags ( this ) ; cacheRegistrationService . registerForSupervisionChanges ( this ) ; }
11053	@ Override public boolean hasMoreData ( ) { if ( inputSource == _NULL ) return _BOOL ; return inputSource . hasMoreData ( ) ; }
11062	public void cancel ( Lease lease ) throws UnknownLeaseException , RemoteException { remove ( lease ) ; lease . cancel ( ) ; }
11063	public void addModifier ( Modifier node ) { List < Modifier > list = ( parent == _NULL || state == _NULL ) ? getModifierListNoTransform ( ) : getModifierList ( ) ; list . addChild ( node ) ; }
11079	public static < T > T assertArgumentNotNull ( T argument , String argumentName ) { if ( argument == _NULL ) throw new IllegalArgumentException ( _CHAR Argument can not be _NULL - _CHAR_CHAR_CHAR _CHAR ) ; return argument ; }
11110	public void commit ( ) { for ( TransactionLifecycleListener l : lifecycleListeners ) l . onTxCommit ( this ) ; if ( logger . isLoggable ( Level . FINE ) ) logger . fine ( _CHAR transaction _CHAR + txNum + _CHAR committed _CHAR ) ; }
11120	public static JSONObject rowToJSONObject ( JSONArray names , JSONTokener x ) throws JSONException { JSONArray ja = rowToJSONArray ( x ) ; return ja != _NULL ? ja . toJSONObject ( names ) : _NULL ; }
11138	void addField ( FieldRefNode frn , SparkField field ) { if ( fields == _NULL ) fields = new HashMap < SparkField , FieldRefNode > ( ) ; fields . put ( field , frn ) ; }
11139	public static boolean isConnectedMobile ( Context context ) { NetworkInfo info = NetworkUtil . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_MOBILE ) ; }
11140	public synchronized ZooKeeperClientBuilder connectionTimeoutMs ( int connectionTimeoutMs ) { this . conectionTimeoutMs = connectionTimeoutMs ; return this ; }
11144	public static synchronized DataSourceWindowManager sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new DataSourceWindowManager ( ) ; return sharedInstance ; }
11148	@ Override public int compareTo ( @ SuppressWarnings ( _CHAR NullableProblems _CHAR ) Fragment other ) { if ( this == other ) return _NUM ; return priority . compareTo ( other . getPriority ( ) ) ; }
11149	public < T extends Fragment > T into ( T fragment ) { fragment . setArguments ( get ( ) ) ; return fragment ; }
11150	private void updateButtonState ( boolean dataChanged ) { btnApply . setEnabled ( dataChanged ) ; btnRevert . setEnabled ( dataChanged ) ; }
11152	public @ NonNull ChargeRequest . Builder enforceBusinessLocation ( @ Nullable String locationId ) { this . locationId = locationId ; return this ; }
11204	public static void addStrut ( JComponent b , int layout , int size ) { if ( size < _NUM ) return ; b . add ( getAxis ( b , layout ) == BoxLayout . X_AXIS ? Box . createHorizontalStrut ( size ) : Box . createVerticalStrut ( size ) ) ; }
11208	public static String slurpFile ( String filename , String encoding ) throws IOException { Reader r = new InputStreamReader ( new FileInputStream ( filename ) , encoding ) ; return slurpReader ( r ) ; }
11209	public AsyncCatchOptions noMasterBall ( boolean skipMasterBall ) { this . skipMasterBall = skipMasterBall ; return this ; }
11218	public CriteriaHibernateSpaceDataSourceConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
11219	public static void sendVerificationToken ( AirMapCallback < Void > listener ) { String url = String . format ( pilotSendVerifyUrl , AirMap . getUserId ( ) ) ; AirMap . getClient ( ) . post ( url , new VoidCallback ( listener ) ) ; }
11223	public Builder stepNumberTextColor ( int stepNumberTextColor ) { this . stepNumberTextColor = stepNumberTextColor ; return this ; }
11234	private void sortDrawablesZA ( ) { Sort . instance ( ) . sort ( drawables , _NULL ) ; refreshDrawableDisplay ( ) ; }
11235	@ Override public ASEntityDeclaration createASEntityDeclaration ( String name ) throws DOMException { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
11240	public GroupFacesAction groupFaces ( List < String > faceIds ) { Validation . validateArray ( faceIds , _NUM , _NUM , new ParameterValidationException ( _CHAR faceIds _CHAR , _CHAR length must be between _NUM & _NUM _CHAR ) ) ; return new GroupFacesAction ( cognitiveContext , faceIds ) ; }
11245	public V put ( long key , V value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
11251	@ Override public void start ( ) { m_line . start ( ) ; super . start ( ) ; }
11256	public void restartWithNewConfiguration ( ) { setWeather ( currentWeather , currentWeather == Constants . weatherStatus . RAIN ? rainTime : snowTime , fadeOutTime , currentWeather == Constants . weatherStatus . RAIN ? rainParticles : snowParticles ) ; startAnimation ( ) ; }
11260	public StatelessHibernateSpaceDataSourceConfigurer useScrollableResultSet ( boolean useScrollableResultSet ) { this . useScrollableResultSet = useScrollableResultSet ; return this ; }
11269	public StructStorageStat [ ] listStorages ( TrackerServer trackerServer , String groupName ) throws IOException { final String storageIpAddr = _NULL ; return this . listStorages ( trackerServer , groupName , storageIpAddr ) ; }
11277	public void unlockUserInput ( ) { commandManager . setEnableCritical ( _BOOL ) ; locked = _BOOL ; }
11285	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
11297	public static long deserializeTransactionId ( byte [ ] data ) { String seqNoStr = new String ( data , UTF_8 ) ; return Long . parseLong ( seqNoStr ) ; }
11299	public boolean needsOffset ( ) { if ( isEnabled ( ) && isDrawLabelsEnabled ( ) && getLabelPosition ( ) == YAxisLabelPosition . OUTSIDE_CHART ) return _BOOL ; else return _BOOL ; }
11305	public LruCachePolicy size ( int size ) { setSize ( size ) ; return this ; }
11316	public void subtractSupplements ( int count , int supplementId ) { subtractedSupplementsCount = count ; subtractedSupplementId = supplementId ; }
11318	@ Override public void onUIRefreshBegin ( PtrFrameLayout frame ) { mDrawable . setAlpha ( _NUM ) ; mDrawable . start ( ) ; }
11323	public CatchOptions useBestBall ( boolean useBestPokeball ) { this . useBestPokeball = useBestPokeball ; return this ; }
11327	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
11330	public ChangeSet lease ( long lease ) { _lease = lease ; return this ; }
11331	public static boolean isNetworkAvailable ( Context mContext ) { ConnectivityManager connectivityManager = ( ConnectivityManager ) mContext . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; return connectivityManager . getActiveNetworkInfo ( ) != _NULL && connectivityManager . getActiveNetworkInfo ( ) . isConnectedOrConnecting ( ) ; }
11336	public void moveViewToX ( float xIndex ) { Runnable job = new MoveViewJob ( mViewPortHandler , xIndex , _NUM , getTransformer ( AxisDependency . LEFT ) , this ) ; addViewportJob ( job ) ; }
11339	public < T > List < T > apply ( Iterable < T > resources ) { InMemoryEvaluator eval = new InMemoryEvaluator ( ) ; return eval . eval ( resources , this ) ; }
11340	private Builder className ( String className ) { this . className = className ; return this ; }
11349	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
11352	public AsyncCatchOptions useSmartSelect ( boolean smartSelect ) { this . smartSelect = smartSelect ; return this ; }
11358	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
11365	public boolean isEnabled ( String type ) { String enabled = options . get ( type ) ; return stringIsTrue ( enabled ) || ( enabled == _NULL && assumeTrue ) ; }
11374	public JSONArray put ( Collection value ) { put ( new JSONArray ( value ) ) ; return this ; }
11382	public Path copyTestDataAndGetPath ( String name ) { copyTestData ( name ) ; return Paths . get ( tempDir , name ) ; }
11384	@ Override public Change updateConfig ( T abstractEquipment , Properties properties ) throws IllegalAccessException { Change change = super . updateConfig ( abstractEquipment , properties ) ; return change ; }
11390	public String [ ] parseConfiguration ( File xmlFile ) throws SAXException , IOException { Document document = builder . parse ( xmlFile ) ; return ( parseConfiguration ( document ) ) ; }
11401	public static BaseRecordReader createRecordReader ( Configuration config , Path path ) throws IOException { EmoInputSplittable emoFs = ( EmoInputSplittable ) path . getFileSystem ( config ) ; return emoFs . getBaseRecordReader ( config , path , getSplitSize ( config ) ) ; }
11408	public final ProgressEvent updateProgress ( double dNewProgress ) { Progress = dNewProgress ; return this ; }
11416	public Builder weight ( Number weight ) { this . weight = weight ; return this ; }
11420	public boolean checkCloseHitTest ( float x , float y , boolean isRTL ) { RectF closeRectangle = getCloseBounds ( isRTL ) ; return closeRectangle != _NULL ? closeRectangle . contains ( x , y ) : _BOOL ; }
11433	private void registerHealthChecks ( DimensionConfig dimension ) { healthCheckRegistry . register ( dimension . getApiName ( ) + _CHAR keyValueStore check _CHAR , new KeyValueStoreHealthCheck ( dimension . getKeyValueStore ( ) ) ) ; healthCheckRegistry . register ( dimension . getApiName ( ) + _CHAR searchProvider check _CHAR , new SearchProviderHealthCheck ( dimension . getSearchProvider ( ) ) ) ; }
11448	@ Override public void draw ( Canvas canvas ) { canvas . drawCircle ( mRadius , mRadius , mRadius , mBackground ) ; canvas . drawText ( mText , mRadius , mRadius - ( ( mTextPaint . descent ( ) + mTextPaint . ascent ( ) ) / _NUM ) , mTextPaint ) ; }
11471	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException { setHints ( _NULL ) ; return decodeInternal ( image ) ; }
11476	public boolean isTransient ( ) { Allophone allophone = getAllophone ( ) ; return allophone . isPlosive ( ) || allophone . isAffricate ( ) ; }
11487	public void insertGroup ( Group group , int position ) throws ObjectAlreadyHasException , IndexOutOfBoundsException { assertNotContains ( group ) ; groups . add ( position , group . getName ( ) ) ; }
11490	public EmailBuilder from ( String fromAddress ) { this . from . add ( fromAddress ) ; return this ; }
11493	public static int px2dip ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
11505	@ NotNull public DeleteFaceListAction deleteFaceList ( @ NotNull String faceListId ) { Validation . validate ( faceListId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR faceListId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new DeleteFaceListAction ( cognitiveContext , faceListId ) ; }
11527	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
11529	public static List < String > loadAll ( W q ) { String node = Model . node ( ) ; return Helper . distinct ( _CHAR name _CHAR , q . and ( _CHAR node _CHAR , node ) , String . class , Jar . class ) ; }
11535	@ Override public void redoAction ( UndoInterface undoRedoObject ) { String newValueObj = ( String ) undoRedoObject . getNewValue ( ) ; functionComboBox . setSelectedItem ( newValueObj ) ; }
11546	public String optString ( int index , String defaultValue ) { Object object = this . opt ( index ) ; return JSONObject . NULL . equals ( object ) ? defaultValue : object . toString ( ) ; }
11550	private static boolean is32BitJvm ( ) { Integer bits = Integer . getInteger ( _CHAR sun . arch . data . model _CHAR ) ; return bits != _NULL && bits == _NUM ; }
11553	public MovePageWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
11562	public int indexOf ( Object e , int index ) { Object [ ] elements = getArray ( ) ; return indexOf ( e , elements , index , elements . length ) ; }
11565	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
11568	public StaticScript name ( String name ) { this . name = name ; return this ; }
11581	public boolean hasDeletedSlots ( ) { long blkNum = ( Long ) getVal ( OFFSET_LDS_BLOCKID , BIGINT ) . asJavaVal ( ) ; return blkNum != NO_SLOT_BLOCKID ? _BOOL : _BOOL ; }
11595	public void print ( int ch ) throws IOException { write ( ch ) ; throw new RuntimeException ( ) ; }
11606	public static String trim ( String path ) { while ( path . startsWith ( _CHAR \ _CHAR _CHAR ) && path . endsWith ( _CHAR \ _CHAR _CHAR ) ) path = path . substring ( _NUM , path . length ( ) - _NUM ) ; return path ; }
11622	public boolean isInterface ( ) { checkLevel ( HIERARCHY ) ; return Modifier . isInterface ( this . getModifiers ( ) ) ; }
11633	public ViewsFinder andFrom ( final ViewGroup ... rootViews ) { FunctionUtils . checkParameterIsNotNull ( _CHAR rootViews _CHAR , rootViews ) ; return new ViewsFinder ( this , rootViews ) ; }
11639	@ Override public boolean add ( MODEL object ) { add ( getItemCount ( ) , object ) ; return _BOOL ; }
11647	public Builder easeLinearity ( Number easeLinearity ) { this . easeLinearity = easeLinearity ; return this ; }
11664	public void addItems ( List < Task > _model ) { this . model . addAll ( _model ) ; notifyDataSetChanged ( ) ; }
11667	public static String extractCSVOutputLineDomain ( String csvOut ) { String tokens [ ] = csvOut . split ( _CHAR , ( ? = ( [ ^\ _CHAR ] *\ _CHAR [ ^\ _CHAR ] *\ _CHAR ) * [ ^\ _CHAR ] * $ ) _CHAR , - _NUM ) ; return tokens [ _NUM ] ; }
11678	@ RequestMapping ( value = _CHAR / authenticate _CHAR , method = RequestMethod . GET , produces = MediaType . APPLICATION_JSON_VALUE ) @ Timed public String isAuthenticated ( HttpServletRequest request ) { log . debug ( _CHAR REST request to check if the current user is authenticated '' ) ; return request . getRemoteUser ( ) ; }
11699	@ Override public double [ ] makeDensityTestValues ( ) { double d = _NUM . _NUM / ( _NUM -- _NUM + _NUM ) ; return new double [ ] { _NUM , d , d , d , d , d , d , d , d , d , _NUM } ; }
11700	public boolean add ( Node n ) { if ( oldSet . contains ( n ) ) return _BOOL ; return newSet . add ( n ) ; }
11702	public TextEditor trim ( ) { text = new StringBuilder ( text . toString ( ) . trim ( ) ) ; return this ; }
11708	public Bundler putByte ( String key , byte value ) { bundle . putByte ( key , value ) ; return this ; }
11739	public static String fromInternalForm ( String internalForm ) { if ( internalForm . charAt ( _NUM ) == _CHAR ) return internalForm ; return _CHAR + internalForm + _CHAR ; }
11743	public Interceptor [ ] buildResourceInterceptors ( Class < ? extends Resource > resourceClass ) { Interceptors before = resourceClass . getAnnotation ( Interceptors . class ) ; return before != _NULL ? createInterceptors ( before ) : NULL_INTERCEPTOR_ARRAY ; }
11749	private void sortDrawablesOldest ( ) { Sort . instance ( ) . sort ( drawables , _NULL ) ; refreshDrawableDisplay ( ) ; }
11757	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
11767	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL && inspectorWindow . getDataTree ( ) != _NULL && inspectorWindow . getDataTree ( ) . getModel ( ) . getRoot ( ) != _NULL && inspectorWindow . getDataTree ( ) . getModel ( ) . getChildCount ( inspectorWindow . getDataTree ( ) . getModel ( ) . getRoot ( ) ) > _NUM ; }
11774	private List < Integer > convertToList ( int [ ] data ) { Integer [ ] wrapperType = ArrayUtils . toObject ( data ) ; return Arrays . asList ( wrapperType ) ; }
11780	public static void dataReductionProxyUIAction ( int action ) { assert action >= _NUM && action < ACTION_INDEX_BOUNDARY ; RecordHistogram . recordEnumeratedHistogram ( _CHAR DataReductionProxy . UIAction _CHAR , action , DataReductionProxyUma . ACTION_INDEX_BOUNDARY ) ; }
11781	public int readByte ( ) { bytesRead ++ ; return ( ( int ) arr [ pos ++ ] ) & _NUM ; }
11787	public void reset ( ) { super . reset ( ) ; m_prevRoot = _NULL ; }
11830	public void printContext ( PrintStream out ) { out . println ( getMessage ( ) ) ; out . print ( context ) ; }
11834	public void increment ( float score ) { cntGenomicLoci ++ ; sumScore += score ; }
11847	public synchronized void reloadConfiguration ( ) { properties = _NULL ; finalParameters . clear ( ) ; }
11848	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
11856	public void handleOMADownload ( DownloadInfo downloadInfo , long downloadId ) { OMAParserTask task = new OMAParserTask ( downloadInfo , downloadId ) ; task . execute ( ) ; }
11868	private boolean isChildService ( Operation op ) { String path = op . getUri ( ) . getPath ( ) ; return ! path . equals ( getParentPath ( op ) ) ; }
11888	public Builder autoPan ( Boolean autoPan ) { this . autoPan = autoPan ; return this ; }
11907	public Builder continuousWorld ( Boolean continuousWorld ) { this . continuousWorld = continuousWorld ; return this ; }
11908	public static void showCreateAircraft ( android . support . v4 . app . Fragment fragment , int requestCode ) { Intent intent = new Intent ( fragment . getContext ( ) , CreateEditAircraftActivity . class ) ; fragment . startActivityForResult ( intent , requestCode ) ; }
11916	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
11920	public String toJson ( ) throws JsonGenerationException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . writeValueAsString ( this ) ; }
11922	public HectorCassandraClientConfigurer columnFamilyGcGraceSeconds ( Integer columnFamilyGcGraceSeconds ) { this . columnFamilyGcGraceSeconds = columnFamilyGcGraceSeconds ; return this ; }
11925	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
11927	public boolean canBeUsed ( Context ctx , @ Nullable Activity activity ) { UserRecoverableErrorHandler errorHandler = activity != _NULL ? new UserRecoverableErrorHandler . ModalDialog ( activity ) : new UserRecoverableErrorHandler . SystemNotification ( ) ; return ExternalAuthUtils . getInstance ( ) . canUseGooglePlayServices ( ctx , errorHandler ) ; }
11938	public void init ( MissionInit minit ) { initBusses ( ) ; this . stateMachine = new ServerStateMachine ( ServerState . WAITING_FOR_MOD_READY , minit ) ; }
11942	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR Stroke . xml _CHAR ) ; fillFactory . populate ( this , fieldConfigManager ) ; }
11946	public GenericValue queryOne ( ) throws GenericEntityException { GenericValue result = EntityUtil . getOnly ( queryList ( ) ) ; return result ; }
11984	public void java_lang_Class_setProtectionDomain0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable protdmn = helper . tempField ( _CHAR < java . lang . Class ProtDmn > _CHAR ) ; helper . assign ( protdmn , params [ _NUM ] ) ; }
11985	public void readInputData ( Reader inputReader ) throws Exception { String inputText = FileUtils . getReaderAsString ( inputReader ) ; setInputData ( inputText ) ; }
11993	public void init ( final Long aliveTagInterval , final String confName ) { this . aliveTagInterval = aliveTagInterval ; this . confName = confName ; }
12009	public void startTimer ( double durationInMilliseconds ) { startTime = System . nanoTime ( ) ; timeout = startTime + ( long ) ( durationInMilliseconds * _NUM ) ; }
12013	public static void main ( String [ ] args ) { RenderingImagesOnBodies simulation = new RenderingImagesOnBodies ( ) ; simulation . run ( ) ; }
12017	public Bundler putCharArray ( String key , char [ ] value ) { bundle . putCharArray ( key , value ) ; return this ; }
12024	public void switchToUrl ( IResource resource , final SVNUrl svnUrl , final SVNRevision svnRevision , IProgressMonitor progress ) throws TeamException { SwitchToUrlCommand command = new SwitchToUrlCommand ( getSVNWorkspaceRoot ( ) , resource , svnUrl , svnRevision ) ; command . run ( progress ) ; }
12033	public Builder messageDigest ( String messageDigest ) { this . messageDigest = messageDigest ; return this ; }
12037	public static DateTime quarterlyRound ( DateTime from ) { DateTime . Property property = from . monthOfYear ( ) ; return property . addToCopy ( - _NUM * ( ( property . get ( ) - _NUM ) % _NUM ) ) . monthOfYear ( ) . roundFloorCopy ( ) ; }
12050	private void sourceIteratorExhaushted ( ) { if ( _logger . isLoggable ( Level . FINEST ) ) _logger . finest ( _CHAR shared iterator source wrapped iterator is exhausted [ _CHAR + _identifier + _CHAR ] _CHAR ) ; _sourceIteratorExhausted = _BOOL ; }
12051	public static int uniform ( int n ) { if ( n <= _NUM ) throw new IllegalArgumentException ( _CHAR Parameter N must be positive _CHAR ) ; return random . nextInt ( n ) ; }
12058	public void writeResponseHeader ( String version , ResponseCode code ) throws IOException { if ( code == _NULL ) throw new IllegalArgumentException ( ) ; writeHeader ( version + _CHAR _CHAR + code . value ( ) + _CHAR _CHAR + code . message ( ) ) ; }
12065	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
12066	public void reparse ( ) { clear ( ) ; parse ( ) ; }
12067	public Builder serverCiphers ( Collection < String > serverCiphers ) { this . serverCiphers = serverCiphers ; return this ; }
12085	public void actionPerformed ( ActionEvent ev ) { Color color = ChooseColorDialog . showChooseColorDialog ( getViewer ( ) . getFrame ( ) , _CHAR Choose label fill color _CHAR , _NULL ) ; if ( color != _NULL ) execute ( _CHAR set labelFillColor = _CHAR + color . getRed ( ) + _CHAR _CHAR + color . getGreen ( ) + _CHAR _CHAR + color . getBlue ( ) + _CHAR ; _CHAR ) ; }
12088	public String inputDigit ( char nextChar ) { currentOutput = inputDigitWithOptionToRememberPosition ( nextChar , _BOOL ) ; return currentOutput ; }
12089	public static void registerServiceConfigListener ( ServiceConfigListener listener ) { Assert . notNull ( _CHAR listener _CHAR , listener ) ; configListeners . add ( listener ) ; }
12094	public static int randomNumberBetween ( double begin , double end ) { if ( begin > end ) throw new IllegalArgumentException ( _CHAR Begin must not be less than end _CHAR ) ; return ( int ) begin + ( int ) ( Math . random ( ) * ( ( end - begin ) + _NUM ) ) ; }
12095	private void sortDrawablesNewest ( ) { Sort . instance ( ) . sort ( drawables , _NULL ) ; refreshDrawableDisplay ( ) ; }
12098	public CarouselOptions maxScrollingVelocity ( int maxScrollingVelocity ) { mMaxScrollingVelocity = maxScrollingVelocity ; return this ; }
12099	public void putFloat ( String key , float value ) { checkForNullKey ( key ) ; preferences . edit ( ) . putFloat ( key , value ) . apply ( ) ; }
12112	public Object put ( Object key , Object value ) { processQueue ( ) ; return map . put ( Key . create ( key , queue ) , value ) ; }
12120	public EntityQuery cursorScrollSensitive ( ) { this . resultSetType = EntityFindOptions . TYPE_SCROLL_SENSITIVE ; return this ; }
12121	public void startFirstSampleTimer ( ) { firstSound = _BOOL ; timer . start ( _CHAR AudioFirstSound _CHAR ) ; }
12123	@ Override protected void flowThrough ( FlowSet in , Unit node , FlowSet out ) { kill ( in , node , out ) ; gen ( out , node ) ; }
12125	public void outASTWhileNode ( ASTWhileNode node ) { if ( nodeStack . isEmpty ( ) ) throw new RuntimeException ( _CHAR trying to remove node from empty stack : ClosestBreakTargetFinder _CHAR ) ; nodeStack . remove ( nodeStack . size ( ) - _NUM ) ; }
12135	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR USE_AREA \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
12137	public Lexicon removeLowCoverageWords ( double coverage ) { int minDf = ( int ) ( numDocs * coverage ) ; return removeLowDfWords ( minDf ) ; }
12145	public static void copy ( InputStream input , Writer output ) throws IOException { InputStreamReader in = new InputStreamReader ( input ) ; copy ( in , output ) ; }
12158	private static void populateExtensions ( ToolSelectionInterface toolMgr ) { extensionList . add ( new GeoServerInput ( toolMgr ) ) ; extensionList . add ( new FileSystemInput ( toolMgr ) ) ; }
12184	protected void writePixels ( ) throws IOException { Encoder encoder = new Encoder ( width , height , indexedPixels , colorDepth ) ; encoder . encode ( out ) ; }
12188	public CatchOptions maxRazzberries ( int maxRazzBerries ) { this . maxRazzBerries = maxRazzBerries ; return this ; }
12198	public void addModule ( Module module ) { module . setupModule ( new ModuleContextImpl ( ) ) ; modules . add ( module ) ; }
12202	public void onUpdateFromCloseToPeek ( float percentage ) { if ( ! isVisible ( ) ) return ; mHeightPx = Math . round ( mDefaultHeightPx ) ; }
12204	public void add ( Metric m ) { final MetricName key = m . getName ( ) ; metrics_ . put ( key , m ) ; }
12213	public static void print ( float x ) { out . print ( x ) ; out . flush ( ) ; }
12220	private boolean isChildService ( Operation op ) { String path = op . getUri ( ) . getPath ( ) ; return ! path . equals ( getParentPath ( op ) ) ; }
12227	public PickRequest withAllowedMimeType ( @ Nullable final String pAllowedMimeType ) { this . mMimeType = pAllowedMimeType == _NULL ? QiPick . MIME_TYPE_IMAGES_ALL : pAllowedMimeType ; return this ; }
12239	@ Override public void onCancel ( String callerTag ) { ComponentsGetter cg = ( ComponentsGetter ) getActivity ( ) ; cg . getFileOperationsHelper ( ) . removeFiles ( mTargetFiles , _BOOL ) ; }
12252	public void checkWarnings ( ) { super . checkWarnings ( ) ; if ( ! suppressWarnings ( _CHAR unchecked _CHAR ) && ! hasAnnotationSafeVarargs ( ) && isVariableArity ( ) && ! getParameter ( getNumParameter ( ) - _NUM ) . type ( ) . isReifiable ( ) ) warning ( _CHAR possible heap pollution for '' + '' variable arity parameter '' ) ; }
12258	public void removeGroup ( String group ) throws ObjectLacksException { assertContains ( group ) ; groups . remove ( group ) ; }
12261	public final static String formatStatusLine ( final StatusLine statline , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = SaveLineFormatter . DEFAULT ; return formatter . formatStatusLine ( _NULL , statline ) . toString ( ) ; }
12291	public void encryptWallet ( String password ) throws WalletCallException , IOException , InterruptedException { String response = this . executeCommandAndGetSingleStringResponse ( _CHAR encryptwallet _CHAR , password ) ; System . out . println ( _CHAR Result of wallet encryption is : \ n _CHAR + response ) ; }
12298	public Node addNode ( ) { int nrow = addNodeRow ( ) ; return ( Node ) m_nodeTuples . getTuple ( nrow ) ; }
12312	public static boolean booleanValueIndicator ( Object value , boolean defaultValue ) { Boolean res = booleanValueIndicator ( value ) ; return res != _NULL ? res : defaultValue ; }
12321	public void onStackAnimationFinished ( ) { mStackAnimationCount -- ; if ( mStackAnimationCount == _NUM ) super . onAnimationFinished ( ) ; }
12333	public Bundler putDoubleArray ( String key , double [ ] value ) { bundle . putDoubleArray ( key , value ) ; return this ; }
12334	public void fail ( String errorMessage ) { testEventCollector . fail ( errorMessage ) ; throw new AssertionError ( errorMessage ) ; }
12337	public void removeValidationRuleGroup ( ValidationRuleGroup validationRuleGroup ) { groups . remove ( validationRuleGroup ) ; validationRuleGroup . getMembers ( ) . remove ( this ) ; }
12348	private int dp2px ( float dpValue ) { final float scale = getContext ( ) . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpValue * scale + _NUM . _NUM ) ; }
12349	public void toAllInRadius ( WorldServer world , Vec3d pos , double radius ) { double maxDistance = radius * radius + radius * radius + radius * radius ; toAll ( world . getPlayers ( EntityPlayerMP . class , _NULL ) ) ; }
12361	public static void quitApplication ( ) { android . os . Process . killProcess ( android . os . Process . myPid ( ) ) ; System . exit ( _NUM ) ; }
12380	public void clearValues ( ) { mDataSets . clear ( ) ; notifyDataChanged ( ) ; }
12386	public static final void emoteStartReturning ( Npc owner ) { PacketSendUtility . broadcastPacket ( owner , new SM_EMOTION ( owner , EmotionType . START_EMOTE2 , _NUM , _NUM ) ) ; PacketSendUtility . broadcastPacket ( owner , new SM_EMOTION ( owner , EmotionType . NEUTRALMODE , _NUM , _NUM ) ) ; }
12387	private CarbonDictionaryWriterImpl prepareWriter ( ) throws IOException { initDictionaryDirPaths ( ) ; return new CarbonDictionaryWriterImpl ( this . carbonStorePath , carbonTableIdentifier , columnIdentifier ) ; }
12392	public void rectValuesToPixel ( List < RectF > rects ) { Matrix m = getValueToPixelMatrix ( ) ; for ( int i = _NUM ; i < rects . size ( ) ; i ++ ) m . mapRect ( rects . get ( i ) ) ; }
12395	public Builder stepsSubtitles ( String [ ] stepsSubtitles ) { this . stepsSubtitles = stepsSubtitles ; return this ; }
12407	public Builder attributionControl ( Boolean attributionControl ) { this . attributionControl = attributionControl ; return this ; }
12421	public ViewsAnimator withViewsVisibilityBeforeAnimation ( final int viewsVisibilityBeforeAnimation ) { this . viewsVisibilityBeforeAnimation = viewsVisibilityBeforeAnimation ; return this ; }
12438	public DefaultHibernateSpaceSynchronizationEndpointConfigurer useMerge ( boolean useMerge ) { this . useMerge = useMerge ; return this ; }
12443	public void trackNextPageLoadFromTimestamp ( long timestamp ) { mIntentReceivedTimestamp = timestamp ; mCurrentState = STATE_WAITING_LOAD_START ; }
12454	private double sigmoid ( double x ) { x = _NUM . _NUM * x - _NUM . _NUM ; return ( _NUM . _NUM / ( _NUM . _NUM + Math . exp ( - _NUM . _NUM * x ) ) ) ; }
12457	public EntityQuery orderBy ( String ... fields ) { this . orderBy = Arrays . asList ( fields ) ; return this ; }
12461	public LeastSquaresBuilder model ( final MultivariateJacobianFunction newModel ) { this . model = newModel ; return this ; }
12463	public static void line ( double x0 , double y0 , double x1 , double y1 ) { offscreen . draw ( new Line2D . Double ( scaleX ( x0 ) , scaleY ( y0 ) , scaleX ( x1 ) , scaleY ( y1 ) ) ) ; draw ( ) ; }
12471	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
12475	public void changeMember ( String sourceMember , String targetMember , String targetMemberURL ) throws ClusterException { addMember ( sourceMember , targetMember , targetMemberURL ) ; removeMember ( sourceMember ) ; }
12477	void freeNodeListCache ( NodeListCache c ) { c . next = fFreeNLCache ; fFreeNLCache = c ; }
12481	public static IProgressMonitor monitorFor ( IProgressMonitor monitor ) { if ( monitor == _NULL ) return new NullProgressMonitor ( ) ; return monitor ; }
12484	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( CalculateEcologicalIndices . GOODALL ) ; }
12499	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getDataType ( ) . equalsIgnoreCase ( _CHAR SEED _CHAR ) ; }
12510	void attach ( Item item ) { this . next = item ; item . prev = this ; }
12521	public Bindings add ( String property , JList list ) { registerPropertyChangeListener ( list ) ; return add ( new JListBinding ( property , list ) ) ; }
12523	@ Override public void onCardboardTrigger ( ) { Log . i ( TAG , _CHAR onCardboardTrigger _CHAR ) ; vibrator . vibrate ( _NUM ) ; }
12530	public static void updatePilot ( AirMapPilot pilot , AirMapCallback < AirMapPilot > listener ) { String url = String . format ( pilotByIdUrl , pilot . getPilotId ( ) ) ; AirMap . getClient ( ) . patch ( url , pilot . getAsParams ( ) , new GenericOkHttpCallback ( listener , AirMapPilot . class ) ) ; }
12538	public GeneralOptions init ( Map < String , String > environment , FileSystem fileSystem , Console console ) throws IOException { Path root = configRoot != _NULL ? fileSystem . getPath ( configRoot ) : _NULL ; return new GeneralOptions ( environment , fileSystem , verbose , console , root , disableReversibleCheck ) ; }
12545	private void startThread ( Context context ) { this . mContext = context ; post ( this ) ; }
12546	public boolean equivTo ( Object c ) { if ( sourcename instanceof Value ) return ( c instanceof AbstractDataSource && ( ( Value ) sourcename ) . equivTo ( ( ( AbstractDataSource ) c ) . sourcename ) ) ; return ( c instanceof AbstractDataSource && ( ( AbstractDataSource ) c ) . sourcename . equals ( sourcename ) ) ; }
12548	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
12564	public void drawScreen ( int mouseX , int mouseY , float partialTicks ) { this . profileListCtrl . drawScreen ( mouseX , mouseY , partialTicks ) ; super . drawScreen ( mouseX , mouseY , partialTicks , _BOOL ) ; }
12578	public void addGlobalNotationDecl ( XSNotationDecl decl ) { fGlobalNotationDecls . put ( decl . fName , decl ) ; decl . setNamespaceItem ( this ) ; }
12595	private float smoothInput ( float current , float input ) { current = MathUtils . clamp ( current , input - _NUM , input + _NUM ) ; return MathUtils . interpolate ( current , input , _NUM . _NUM ) ; }
12596	public void increment ( int i , int j ) { matrix [ i - _NUM ] [ j - _NUM ] ++ ; matrix [ j - _NUM ] [ i - _NUM ] ++ ; }
12630	public SQLDataMigrator graph ( MindmapsGraph graph ) { this . graph = graph ; return this ; }
12641	public void addGlobalAttributeGroupDecl ( XSAttributeGroupDecl decl ) { fGlobalAttrGrpDecls . put ( decl . fName , decl ) ; decl . setNamespaceItem ( this ) ; }
12645	public static int geometric ( double p ) { if ( ! ( p >= _NUM . _NUM && p <= _NUM . _NUM ) ) throw new IllegalArgumentException ( _CHAR Probability must be between _NUM . _NUM and _NUM . _NUM _CHAR ) ; return ( int ) Math . ceil ( Math . log ( uniform ( ) ) / Math . log ( _NUM . _NUM - p ) ) ; }
12646	public void tabPageLoadStarted ( int id ) { StripLayoutTab tab = findTabById ( id ) ; if ( tab != _NULL ) tab . pageLoadingStarted ( ) ; }
12653	public final boolean canGetDate ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canGetDate ( ) ) ; }
12656	public void resetTracking ( ) { totalTime = _NUM ; drawCycles = _NUM ; }
12661	public boolean isPropDirty ( ) { SVNStatusKind thePropStatus = getPropStatus ( ) ; return thePropStatus . equals ( SVNStatusKind . CONFLICTED ) || thePropStatus . equals ( SVNStatusKind . MODIFIED ) ; }
12669	public void addOverlappingView ( View view ) { mFrameLayoutOverlappingViewContainer . addView ( view , COMMON_LAYOUT_PARAMS ) ; mOverlappingViewsMap . put ( view . getId ( ) , view ) ; }
12683	@ Override public boolean onUnbind ( Intent intent ) { ( ( FileUploaderBinder ) mBinder ) . clearListeners ( ) ; return _BOOL ; }
12705	private void determineGeometryType ( GeometryType type ) { Class < ? > bindingType = type . getBinding ( ) ; dsInfo . setGeometryType ( GeometryTypeMapping . getGeometryType ( bindingType ) ) ; }
12706	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getCustomerDao ( ) : _NULL ; }
12710	public synchronized ZooKeeperClientBuilder statsLogger ( StatsLogger statsLogger ) { this . statsLogger = statsLogger ; return this ; }
12712	private void drawSolidLineProgress ( Canvas canvas ) { canvas . drawArc ( mProgressRectF , DEFAULT_START_DEGREE , _NUM . _NUM , _BOOL , mProgressBackgroundPaint ) ; canvas . drawArc ( mProgressRectF , DEFAULT_START_DEGREE , _NUM . _NUM * getProgress ( ) / getMax ( ) , _BOOL , mProgressPaint ) ; }
12718	private boolean hasProxySettings ( Properties settings ) { String proxyHost = settings . getProperty ( _CHAR / system / http_proxy / host _CHAR , _NULL ) ; return proxyHost != _NULL && proxyHost . length ( ) > _NUM ; }
12732	public void clear ( AbsoluteTableIdentifier absoluteTableIdentifier ) { tableLockMap . remove ( absoluteTableIdentifier ) ; tableBlocksMap . remove ( absoluteTableIdentifier ) ; }
12733	public void addArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getArgumentListNoTransform ( ) : getArgumentList ( ) ; list . addChild ( node ) ; }
12735	public static void recordAction ( int action ) { assert action >= _NUM && action < SIGNIN_PROMO_COUNT ; RecordHistogram . recordEnumeratedHistogram ( _CHAR Signin . AndroidSigninPromoAction _CHAR , action , SIGNIN_PROMO_COUNT ) ; }
12746	void submit ( ProcessAndDisplayImageTask task ) { initExecutorsIfNeed ( ) ; taskExecutorForCachedImages . execute ( task ) ; }
12752	public void addGlobalGroupDecl ( XSGroupDecl decl ) { fGlobalGroupDecls . put ( decl . fName , decl ) ; decl . setNamespaceItem ( this ) ; }
12768	protected static void deleteFile ( @ Nonnull final File file ) { Check . notNull ( file , _CHAR file _CHAR ) ; Check . stateIsTrue ( ! file . exists ( ) || file . delete ( ) , _CHAR Can not delete file _CHAR . _CHAR , file . getPath ( ) ) ; }
12770	public Builder autoPanPaddingTopLeft ( Point autoPanPaddingTopLeft ) { this . autoPanPaddingTopLeft = autoPanPaddingTopLeft ; return this ; }
12775	public Map < C , V > row ( R rowKey ) { if ( rowKey == _NULL ) return _NULL ; return dataMap . get ( rowKey ) ; }
12780	public void clearDiscCache ( ) { checkConfiguration ( ) ; configuration . discCache . clear ( ) ; }
12796	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
12800	@ Override public synchronized void close ( ) { if ( myDataBase != _NULL ) myDataBase . close ( ) ; super . close ( ) ; }
12804	@ Override public IString2IntegerMap create ( IName2IdMap label2id , String fileName , ProgressListener progress ) throws IOException , CanceledException { if ( String2IntegerFileBasedABinMap . isTableFile ( fileName ) ) return new String2IntegerFileBasedABinMap ( fileName ) ; else return new Accession2IdMap ( label2id , fileName , progress ) ; }
12814	public final static String formatRequestLine ( final RequestLine reqline , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = SaveLineFormatter . DEFAULT ; return formatter . formatRequestLine ( _NULL , reqline ) . toString ( ) ; }
12815	public JSONArray optJSONArray ( int index ) { Object o = this . opt ( index ) ; return o instanceof JSONArray ? ( JSONArray ) o : _NULL ; }
12816	protected soot . Local generateLocal ( polyglot . types . Type polyglotType ) { soot . Type type = Util . getSootType ( polyglotType ) ; return lg . generateLocal ( type ) ; }
12844	public void addTypeDecl ( TypeDecl node ) { List < TypeDecl > list = ( parent == _NULL || state == _NULL ) ? getTypeDeclListNoTransform ( ) : getTypeDeclList ( ) ; list . addChild ( node ) ; }
12846	public boolean isApplicable ( ) { TaxonomicProfileDialog viewer = ( TaxonomicProfileDialog ) getParent ( ) ; return viewer != _NULL ; }
12862	@ Override public void clear ( ) { mItems . clear ( ) ; notifyIfNeed ( ) ; }
12865	@ Override public boolean isEnemyFrom ( Player player ) { int worldId = getPosition ( ) . getMapId ( ) ; return player . getRace ( ) != this . ownerRace ; }
12866	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
12902	public static void showImage ( Context context , @ NonNull String imageUrl ) { if ( context == _NULL ) return ; showImage ( context , imageView , imageUrl , _NULL ) ; }
12903	void start ( ) { this . scheduleAckTimeout ( ) ; this . sendListen ( ) ; }
12907	public Builder withContentType ( String contentType ) { this . mContentType = contentType ; return this ; }
12913	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR _CHAR ( _CHAR + _CHAR _CHAR TEXT PRIMARY KEY NOT NULL , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR INTEGER ) ; _CHAR ) ; }
12922	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
12941	public String time ( ) { super . split ( ) ; return DurationFormatUtils . formatDurationHMS ( super . getSplitTime ( ) ) ; }
12943	@ RequestMapping ( method = RequestMethod . POST , value = _CHAR orgUnits / { id } / dataSets _CHAR ) @ ResponseBody public String saveDataSetValues2_8 ( @ PathVariable int id , @ RequestBody DataSetValue dataSetValue ) throws NotAllowedException { facilityReportingService . saveDataSetValues ( getUnit ( id ) , dataSetValue ) ; return DATASET_REPORT_UPLOADED ; }
12945	public void suspendEncoding ( ) throws java . io . IOException { flushBase64 ( ) ; this . suspendEncoding = _BOOL ; }
12947	public AemContentFinder clickListView ( ) { getCurrentTab ( ) . clickListView ( ) ; return this ; }
12957	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( CalculateEcologicalIndices . EUCLIDEAN ) ; }
12959	private boolean isPermissionRequested ( String permission ) { SharedPreferences preferences = PreferenceManager . getDefaultSharedPreferences ( this ) ; return preferences . getBoolean ( permission , _BOOL ) ; }
12967	public EntityQuery select ( String ... fields ) { this . fieldsToSelect = UtilMisc . toSetArray ( fields ) ; return this ; }
12971	public boolean isApplicable ( ) { MainViewer mainViewer = ( MainViewer ) getDir ( ) . getViewerByClass ( MainViewer . class ) ; return mainViewer != _NULL && mainViewer . hasComparableData ( ) ; }
12986	public static Record createRecord ( ModelRecord modelRecord ) throws DataFileException { Record record = new Record ( modelRecord ) ; return record ; }
12991	public static void main ( String [ ] args ) { SimplePlatformer simulation = new SimplePlatformer ( ) ; simulation . run ( ) ; }
12995	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_download_mange ) ; }
13013	public boolean isJavaLibraryClass ( ) { if ( name . startsWith ( _CHAR java . '' ) || name . startsWith ( _CHAR sun . '' ) || name . startsWith ( _CHAR javax . '' ) || name . startsWith ( _CHAR com . sun . '' ) || name . startsWith ( _CHAR org . omg . '' ) || name . startsWith ( _CHAR org . xml . '' ) ) return _BOOL ; return _BOOL ; }
13024	@ Override public Result decode ( BinaryBitmap image , Map < DecodeHintType , ? > hints ) throws NotFoundException { setHints ( hints ) ; return decodeInternal ( image ) ; }
13027	static public Document convertToClusterConfiguration ( Document clusterXMLDomElement , InputStream clusterXSLPolicy ) throws IOException , TransformerConfigurationException , TransformerException , ParserConfigurationException , SAXException { Document rootDoc = ( Document ) XSLTConverter . transformDOM2DOM ( clusterXMLDomElement , clusterXSLPolicy ) ; return rootDoc ; }
13039	void agg2way ( NetNode x , NetNode y ) { x . nbr = y ; y . nbr = x ; }
13041	public Iterator edges ( Node node ) { nodeCheck ( node , _BOOL ) ; return m_edgeTuples . iterator ( edgeRows ( node . getRow ( ) , UNDIRECTED ) ) ; }
13047	public static boolean isAccountPenaltyActive ( Account account ) { AccountTime accountTime = account . getAccountTime ( ) ; return accountTime != _NULL && accountTime . getPenaltyEnd ( ) != _NULL && ( accountTime . getPenaltyEnd ( ) . getTime ( ) == _NUM || accountTime . getPenaltyEnd ( ) . getTime ( ) >= System . currentTimeMillis ( ) ) ; }
13048	public String toJson ( ) throws JsonGenerationException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . writeValueAsString ( this ) ; }
13054	@ Override public void vendorOptionsUpdated ( List < VersionData > vendorOptionVersionsList ) { this . vendorOptionVersionList = vendorOptionVersionsList ; updateVendorOptionPanels ( ) ; }
13059	private void addExtentEntry ( ) { extentModel . addNewEntry ( ) ; removeExtentButton . setEnabled ( _BOOL ) ; }
13061	public static void dropTable ( Database db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR MY_COLLECTION \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
13080	private void openFile ( ) { mContainerActivity . getFileOperationsHelper ( ) . openFile ( getFile ( ) ) ; finish ( ) ; }
13087	public void reset ( ) { this . baseAddressMap . clear ( ) ; this . cursor = _NUM ; }
13096	public JsonObject add ( String name , float value ) { add ( name , Json . value ( value ) ) ; return this ; }
13107	public boolean pairedTTest ( final double [ ] sample1 , final double [ ] sample2 , final double alpha ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSignificanceLevel ( alpha ) ; return pairedTTest ( sample1 , sample2 ) < alpha ; }
13119	public HectorCassandraClientConfigurer hosts ( String hosts ) { this . hosts = hosts ; return this ; }
13131	public void loadDataStringFromFile ( String sFilename ) throws java . io . IOException , java . io . FileNotFoundException { String sDataString = utils . loadFileToStringWithNewlines ( sFilename ) ; setDataString ( sDataString ) ; }
13154	public static SpaceTypeDescriptor fromSerializableForm ( Serializable versionedSerializableForm ) { if ( ! ( versionedSerializableForm instanceof TypeDescVersionedSerializable ) ) throw new IllegalArgumentException ( _CHAR wrapper must be an instance of _CHAR + TypeDescVersionedSerializable . class . getName ( ) ) ; return ( ( TypeDescVersionedSerializable ) versionedSerializableForm ) . getTypeDesc ( ) ; }
13155	public static boolean canImportAsGradleProject ( @ NotNull VirtualFile importSource ) { VirtualFile target = findImportTarget ( importSource ) ; return target != _NULL && GradleConstants . EXTENSION . equals ( target . getExtension ( ) ) ; }
13175	public void initRawSwap ( ArrayList < S2CellId > cellIds ) { this . cellIds = new ArrayList < S2CellId > ( cellIds ) ; cellIds . clear ( ) ; }
13183	public RevealBuilder withHideFromViewAtTranslateInterpolatedTime ( final float hideFromViewAtInterpolatedTime ) { this . mHideFromViewAtInterpolatedTime = hideFromViewAtInterpolatedTime ; return this ; }
13187	public < D > void removeMappedEntityClass ( Class < D > dtoClass ) { checkNotInitialized ( ) ; mappings . remove ( dtoClass ) ; }
13192	public AemList removeItem ( int index ) { AemListItem item = getItem ( index ) ; return removeItem ( item ) ; }
13200	public CarouselOptions scrollToFlingUncertaintyTimeout ( int scrollToFlingUncertaintyTimeout ) { mScrollToFlingUncertaintyTimeout = scrollToFlingUncertaintyTimeout ; return this ; }
13211	@ Override public Future < DLSN > write ( final LogRecord record ) { final Stopwatch stopwatch = Stopwatch . createStarted ( ) ; return asyncWrite ( record , _BOOL ) . addEventListener ( new OpStatsListener < DLSN > ( writeOpStatsLogger , stopwatch ) ) ; }
13215	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
13223	public void addTag ( Tag t ) { if ( mTagList == _NULL ) mTagList = new ArrayList < Tag > ( _NUM ) ; mTagList . add ( t ) ; }
13225	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
13236	public RevealBuilder withRevealDuration ( final int revealDuration ) { this . mRevealDuration = revealDuration ; return this ; }
13241	public Builder addConverterFactory ( Converter . Factory factory ) { converterFactories . add ( checkNotNull ( factory , _CHAR factory == _NULL _CHAR ) ) ; return this ; }
13242	public void resetViewPortOffsets ( ) { mCustomViewPortEnabled = _BOOL ; calculateOffsets ( ) ; }
13243	public Builder className ( String className ) { this . className = className ; return this ; }
13250	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR BOOK \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR BOOK_NAME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR BOOK_ISBN \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR BOOK_ID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR REQUEST_ID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR DOWNLOAD_STATUS \ _CHAR TEXT ) ; _CHAR ) ; }
13255	public Iterator < Interval > periodIterator ( ReadablePeriod readablePeriod ) { List < Iterator < ? extends Interval >> periodIterators = this . stream ( ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; return IteratorUtils . chainedIterator ( periodIterators ) ; }
13256	protected boolean isInitialMethod ( SootMethod sm ) { for ( Unit u : this . initialSeeds . keySet ( ) ) if ( interproceduralCFG ( ) . getMethodOf ( u ) == sm ) return _BOOL ; return _BOOL ; }
13271	public static Map < String , Object > alwaysFailProcessor ( DispatchContext dctx , Map < String , ? extends Object > context ) { Locale locale = ( Locale ) context . get ( _CHAR locale _CHAR ) ; return ServiceUtil . returnError ( UtilProperties . getMessage ( resource , _CHAR AccountingPaymentTestAuthorizationAlwaysFailed _CHAR , locale ) ) ; }
13273	private synchronized void removeChildNode ( DefaultMutableTreeNode child ) { DefaultTreeModel model = ( DefaultTreeModel ) getModel ( ) ; model . removeNodeFromParent ( child ) ; }
13274	public void destroy ( ) { mBookmarksModel . removeDeleteObserver ( this ) ; mSnackbarManager . dismissSnackbars ( this ) ; }
13290	public void chooseDayNightMode ( @ AppCompatDelegate . NightMode int mode ) { checkInit ( ) ; mPreferences . edit ( ) . putInt ( PREFERENCE_DAYNIGHT_KEY , mode ) . apply ( ) ; }
13325	public ConversationFactory withInitialSessionData ( Map < Object , Object > initialSessionData ) { this . initialSessionData = initialSessionData ; return this ; }
13330	public static Map < String , Object > createElectronicText ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = createElectronicTextMethod ( dctx , context ) ; return result ; }
13345	public Builder name ( final String name ) { this . name = name ; return this ; }
13346	public void scroll ( int itemsToScroll , int time ) { int distance = itemsToScroll * getItemHeight ( ) - scrollingOffset ; scroller . scroll ( distance , time ) ; }
13355	public static void print ( long x ) { out . print ( x ) ; out . flush ( ) ; }
13373	public void click ( int mask , int x , int y ) throws InterruptedException { move ( x , y ) ; click ( mask ) ; }
13379	public void increaseCounts ( Map < String , Integer > eventCount , Predicate < String > predicate ) { increaseEventCount ( eventCount , predicate ) ; increaseActionCount ( eventCount , predicate ) ; }
13383	@ TargetApi ( _NUM ) public Bundler putSize ( String key , Size value ) { bundle . putSize ( key , value ) ; return this ; }
13385	public boolean isList ( String key ) { Object val = get ( key ) ; return val instanceof List ; }
13402	private void resetSearchBarTermOpacity ( ) { mSearchBarContextOpacity = _NUM . f ; mSearchBarTermOpacity = _NUM . f ; }
13429	public RabbitMqCommand writeOutputTo ( OutputStream outputStream ) { this . outputStream = outputStream ; return this ; }
13432	public void openDatabase ( ) { String path = DB_PATH + DB_NAME ; mDatabase = SQLiteDatabase . openDatabase ( path , _NULL , SQLiteDatabase . OPEN_READONLY ) ; }
13445	public static void enable ( String event ) { instance . disabled . remove ( event ) ; log ( event + _CHAR enabled _CHAR ) ; }
13451	public Builder customReduction ( String column , ColumnReduction columnReduction ) { customReductions . put ( column , columnReduction ) ; return this ; }
13454	@ Override public void onUIReset ( PtrFrameLayout frame ) { mScale = _NUM ; mDrawable . stop ( ) ; }
13456	public int findFirstCompletelyVisibleItemPosition ( ) { final View child = findOneVisibleChild ( _NUM , layoutManager . getChildCount ( ) , _BOOL , _BOOL ) ; return child == _NULL ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }
13462	@ Override public boolean authenticate ( String username , String password , boolean isServiceAuth ) throws AuthenticatorException { Debug . logInfo ( this . getClass ( ) . getName ( ) + _CHAR Authenticator authenticate ( ) -- returning _BOOL _CHAR , module ) ; return _BOOL ; }
13480	private void removeEntry ( ) { model . removeEntries ( table . getSelectionModel ( ) . getMinSelectionIndex ( ) , table . getSelectionModel ( ) . getMaxSelectionIndex ( ) ) ; removeButton . setEnabled ( _BOOL ) ; }
13493	public int findLastCompletelyVisibleItemPosition ( ) { final View child = findOneVisibleChild ( getChildCount ( ) - _NUM , - _NUM , _BOOL ) ; return child == _NULL ? NO_POSITION : getPosition ( child ) ; }
13511	public Builder shadowAnchor ( Point shadowAnchor ) { this . shadowAnchor = shadowAnchor ; return this ; }
13516	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
13525	void beginEndElement ( Augmentations elementAugs ) { fInEndElement = _BOOL ; fElementAugs = elementAugs ; }
13537	@ Override public void onUIReset ( PtrFrameLayout frame ) { mScale = _NUM ; mDrawable . stop ( ) ; }
13543	public AemDialog openByContextMenu ( final By clickableArea ) { openByContextMenu ( currentScope . findElement ( clickableArea ) ) ; return this ; }
13544	public Bundler putParcelable ( String key , Parcelable value ) { bundle . putParcelable ( key , value ) ; return this ; }
13551	@ Override public void createUI ( ) { createFieldPanel ( _NUM , _CHAR _CHAR ) ; initialised = _BOOL ; }
13552	@ Override public void onAddCommandTag ( final ISourceCommandTag sourceCommandTag , final ChangeReport changeReport ) { changeReport . appendError ( _CHAR The equipment has no implementation to _CHAR + _CHAR add command tags . You have to restart the DAQ . '' ) ; changeReport . setState ( CHANGE_STATE . REBOOT ) ; }
13554	public void addPaintListener ( PaintListener pl ) { if ( m_painters == _NULL ) m_painters = new CopyOnWriteArrayList ( ) ; m_painters . add ( pl ) ; }
13556	public boolean remove ( String str ) { hasChanged = _BOOL ; return ( bList . remove ( str ) ) ; }
13557	public static double db ( double energy ) { if ( energy <= _NUM - _NUM ) return - _NUM . _NUM ; else return _NUM * log10 ( energy ) ; }
13568	public static void createAllTables ( Database db , boolean ifNotExists ) { CollectDao . createTable ( db , ifNotExists ) ; UserDao . createTable ( db , ifNotExists ) ; }
13569	public boolean isApplicable ( ) { RemoteServiceBrowser remoteServiceBrowser = ( RemoteServiceBrowser ) getViewer ( ) ; return remoteServiceBrowser != _NULL && remoteServiceBrowser . getServicePanel ( ) != _NULL && remoteServiceBrowser . getServicePanel ( ) . getFileTree ( ) . getModel ( ) . getRoot ( ) != _NULL && remoteServiceBrowser . getServicePanel ( ) . getFileTree ( ) . getModel ( ) . getChildCount ( remoteServiceBrowser . getServicePanel ( ) . getFileTree ( ) . getModel ( ) . getRoot ( ) ) > _NUM ; }
13574	public static boolean isAccountExpired ( Account account ) { AccountTime accountTime = account . getAccountTime ( ) ; return accountTime != _NULL && accountTime . getExpirationTime ( ) != _NULL && accountTime . getExpirationTime ( ) . getTime ( ) < System . currentTimeMillis ( ) ; }
13575	public void listenAndFire ( @ NotNull ObservableValue < ? > src , @ NotNull InvalidationListener listener ) { listen ( src , listener ) ; listener . onInvalidated ( src ) ; }
13586	public Object toObject ( SpaceDocument document ) { FromDocumentConvertionContext conversionContext = new FromDocumentConvertionContext ( ) ; return toObjectInternal ( document , conversionContext ) ; }
13587	public static final int doubleToShortBits ( final double d ) { long l = Double . doubleToLongBits ( d ) ; return ( int ) ( l >> _NUM ) ; }
13604	public MaxReducer ignoreExceptions ( ) { this . ignoreExceptions = _BOOL ; return this ; }
13626	@ ObjectiveCName ( _CHAR error : err : _CHAR ) void error ( String rpcName , String err ) { this . callback . onRpcError ( rpcName , err ) ; this . clearTimeouts ( ) ; }
13628	public void stopSchedule ( ) { StatLog . d ( LOG_TAG , _CHAR stopSchedule ( ) _CHAR ) ; statiPollMgr . stop ( ) ; }
13633	@ Override public String createToken ( int my_slot , int rac_count , int rac_size , String region ) { int regionCount = rac_count * rac_size ; return initialToken ( regionCount , my_slot , regionOffset ( region ) ) . toString ( ) ; }
13635	public Builder translationX ( float translationX ) { this . translationX = translationX ; return this ; }
13655	private void addSymbol ( EsriSymbolInterface symbolObj ) { logger . debug ( _CHAR \ t _CHAR + symbolObj . getName ( ) ) ; symbolMap . put ( symbolObj . getName ( ) , symbolObj ) ; }
13659	public JSONArray put ( int index , Collection value ) throws JSONException { put ( index , new JSONArray ( value ) ) ; return this ; }
13662	public boolean hasAndroidPlugin ( ) { List < String > plugins = getPlugins ( ) ; return plugins . contains ( GradleDetector . APP_PLUGIN_ID ) || plugins . contains ( GradleDetector . OLD_APP_PLUGIN_ID ) || plugins . contains ( GradleDetector . LIB_PLUGIN_ID ) || plugins . contains ( GradleDetector . OLD_LIB_PLUGIN_ID ) ; }
13663	@ Override public void flush ( ) throws IOException { writer . write ( buffer , _NUM , fill ) ; fill = _NUM ; }
13667	protected void accumulateLabel ( String path ) { String name = getLabel ( path ) ; if ( ! labels . contains ( name ) ) labels . add ( name ) ; }
13692	public Builder withSerializable ( boolean serializable ) { this . serializable = serializable ; return this ; }
13702	public static void writeSwappedShort ( OutputStream output , short value ) throws IOException { output . write ( ( byte ) ( ( value >> _NUM ) & _NUM ) ) ; output . write ( ( byte ) ( ( value >> _NUM ) & _NUM ) ) ; }
13704	public void normal ( ) { mHintView . setVisibility ( View . VISIBLE ) ; mProgressBar . setVisibility ( View . GONE ) ; }
13709	public Builder alt ( String alt ) { this . alt = alt ; return this ; }
13715	public void addComponent ( String parsys , String componentName ) { getParsys ( parsys ) . insertComponent ( componentName ) ; verifyParsysRerendered ( parsys ) ; }
13723	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getReference ( ) != _NULL && viewer . getAlignment ( ) . getReference ( ) . getLength ( ) > _NUM ; }
13754	public static boolean isTime ( String hour , String minute , String second ) { if ( isHour ( hour ) && isMinute ( minute ) && isSecond ( second ) ) return _BOOL ; else return _BOOL ; }
13759	public SiteAdminConfirmationWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
13764	public Builder position ( String position ) { this . position = position ; return this ; }
13767	public void swapItems ( List < T > items ) { this . items = items ; notifyDataSetChanged ( ) ; }
13787	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getNumberOfSequences ( ) > _NUM ; }
13800	public void openThriftReader ( String filePath ) throws IOException { thriftReader = new ThriftReader ( filePath ) ; thriftReader . open ( ) ; }
13801	public void alwaysFails ( ) throws BrokenServiceException { LOG . info ( _CHAR { } called _CHAR , this . getClass ( ) . getSimpleName ( ) ) ; throw new BrokenServiceException ( _CHAR Provoked failure _CHAR ) ; }
13805	public SlickForm withProcessingLabel ( String label ) { this . endTag = label ; return this ; }
13811	@ Override public void clear ( ) { super . clear ( ) ; boot = _NULL ; }
13812	private static boolean permissionExists ( String permission ) { Integer minVersion = MIN_SDK_PERMISSIONS . get ( permission ) ; return minVersion == _NULL || Build . VERSION . SDK_INT >= minVersion ; }
13838	public void refresh ( ) { loaderPolicy . refresh ( ) ; defaultPolicy . refresh ( ) ; }
13851	public boolean removeChildEdge ( Edge e ) { edgeCheck ( e , _BOOL ) ; return removeChild ( getTargetNode ( e . getRow ( ) ) ) ; }
13853	public static void registerContentType ( String type , String classname ) { JEditorPane . registerEditorKitForContentType ( type , classname ) ; CONTENTS . add ( type ) ; }
13854	public static String [ ] handle ( String [ ] args , ICommand command , ICommandSender sender ) { final CommandEvent event = new CommandEvent ( args , command , sender ) ; return OpenModLoader . getEventBus ( ) . post ( event ) ? event . getArgs ( ) : _NULL ; }
13860	public Builder offset ( Point offset ) { this . offset = offset ; return this ; }
13875	public Builder markerZoomAnimation ( Boolean markerZoomAnimation ) { this . markerZoomAnimation = markerZoomAnimation ; return this ; }
13878	public boolean supportsThreadDump ( Application application ) { if ( application . getState ( ) != Stateful . STATE_AVAILABLE ) return _BOOL ; return JvmFactory . getJVMFor ( application ) . isTakeThreadDumpSupported ( ) ; }
13882	public void tabSelectingEffect ( long time , int id ) { int index = TabModelUtils . getTabIndexById ( mTabModel , id ) ; startAnimation ( time , OverviewAnimationType . TAB_FOCUSED , index , - _NUM , _BOOL ) ; }
13885	public JSONArray put ( Object value ) { this . myArrayList . add ( value ) ; return this ; }
13902	public final boolean canSetFloat ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canSetFloat ( ) ) ; }
13904	public static RasterSymbolizer createDefaultRasterSymbolizer ( ) { RasterSymbolizer rasterSymbolizer = styleFactory . createRasterSymbolizer ( ) ; return rasterSymbolizer ; }
13907	public Builder withParams ( @ NotNull Map < String , Object > params ) { myParams = params ; return this ; }
13911	public void ReInit ( SimpleCharStream stream , int lexState ) { ReInit ( stream ) ; SwitchTo ( lexState ) ; }
13923	public void addNewPoint ( ) { pointList . add ( new WKTPoint ( ) ) ; this . fireTableDataChanged ( ) ; }
13934	@ Override public void selectedStyle ( StyleWrapper styleWrapper ) { int [ ] selectedRows = table . getSelectedRows ( ) ; dataModel . updateStyle ( selectedRows , styleWrapper ) ; }
13939	public float computeAlignmentExpected ( int queryLength , int rawScore ) { double bitScore = ( float ) ( ( lambda * rawScore - lnK ) / LN_2 ) ; return ( float ) ( ( ( double ) getDbLetters ( ) * queryLength * Math . pow ( _NUM , - bitScore ) ) ) ; }
13952	public void resetBonusPotential ( ) { final int rank = Randomizer . nextInt ( _NUM ) < _NUM ? ( Randomizer . nextInt ( _NUM ) < _NUM ? - UNIQUE : - EPIC ) : - RARE ; resetBonusPotentialWithRank ( rank , _BOOL ) ; }
13962	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
13967	public final void writeMapleAsciiString ( final String s ) { writeShort ( ( short ) s . length ( ) ) ; writeAsciiString ( s ) ; }
13974	public boolean isCallerValidForPackage ( Context context , int authRequirements , String packageToMatch ) { assert ! TextUtils . isEmpty ( packageToMatch ) ; return isCallerValid ( context , authRequirements , packageToMatch ) ; }
13976	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
13980	public boolean isNeverUploadCrashDump ( ) { if ( isCellularExperimentEnabled ( ) ) return ! isUsageAndCrashReportingEnabled ( ) ; return ! isUploadCrashDumpEnabled ( ) ; }
13981	private boolean isSentenceEnd ( int index ) { FeatureVector fv = features . getFeatureVector ( index ) ; return fv . getByteFeature ( fiSentenceEnd ) == _NUM && fv . getByteFeature ( fiWordEnd ) == _NUM && ( ! isHalfphone || fv . getByteFeature ( fiLR ) == fvLR_R ) ; }
13983	private void clearPendingOMADownload ( long downloadId , String installNotifyURI ) { ClearPendingOMADownloadTask task = new ClearPendingOMADownloadTask ( downloadId , installNotifyURI ) ; task . execute ( ) ; }
13999	public void addCppDirectory ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myCppDirectories . add ( directory ) ; }
14012	public AemToolbar newComponent ( ) { click ( MenuOption . NEW ) ; return this ; }
14013	public AemContextMenu open ( final WebElement webElement ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return this ; }
14017	@ Override protected int sizeOf ( String key , BitmapDrawable value ) { final int bitmapSize = getBitmapSize ( value ) / _NUM ; return bitmapSize == _NUM ? _NUM : bitmapSize ; }
14025	public void unRegister ( Object listener ) { eventBus . unregister ( listener ) ; Logs . info ( _CHAR un register an listener ( { } ) _CHAR , listener ) ; }
14029	public void sort ( final Comparator < ? super T > comparator ) { Collections . sort ( this . data , comparator ) ; this . notifyItemRangeChanged ( _NUM , this . getItemCount ( ) ) ; }
14033	public Builder migrations ( List < MigrationCache > migrationsCache ) { this . migrationsCache = migrationsCache ; return this ; }
14037	public CriteriaHibernateSpaceDataSourceConfigurer initialLoadChunkSize ( int initalLoadChunkSize ) { this . initialLoadChunkSize = initalLoadChunkSize ; return this ; }
14048	public static void enableTrafficAlerts ( AirMapTrafficListener listener ) { getAirMapTrafficService ( ) . addListener ( listener ) ; getAirMapTrafficService ( ) . connect ( ) ; }
14054	private void loadPosts ( ) { PostsFragment . this . showProgress ( _BOOL ) ; RxFirebaseDatabase . getInstance ( ) . observeValueEvent ( firebaseRef ) . subscribe ( new GetPostsSubscriber ( ) ) ; }
14056	public void applyInlineLeftHalf ( double [ ] data , int off , int len ) { Window w = Window . get ( windowType , _NUM * len , prescale ) ; w . apply ( data , off , data , off , _NUM , len ) ; }
14063	public EntityQuery where ( Map < String , Object > fieldMap ) { this . whereEntityCondition = EntityCondition . makeCondition ( fieldMap ) ; return this ; }
14068	public static boolean removeFromCache ( String imageUri , DiskCache diskCache ) { File image = diskCache . get ( imageUri ) ; return image != _NULL && image . exists ( ) && image . delete ( ) ; }
14073	public void clearDiskCache ( ) { checkConfiguration ( ) ; configuration . diskCache . clear ( ) ; }
14077	@ Override public void onException ( final JMSException exception ) { LOGGER . error ( _CHAR JMSException caught by JMS connection exception listener . Attempting to reconnect . '' , exception ) ; startReconnectThread ( ) ; }
14086	public static void printf ( Locale locale , String format , Object ... args ) { out . printf ( locale , format , args ) ; out . flush ( ) ; }
14099	public Builder serverMessageDigest ( String serverMessageDigest ) { this . serverMessageDigest = serverMessageDigest ; return this ; }
14109	protected final void fireColumnEvent ( int idx , int prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
14120	private static int try_warning ( int count , String s , String e ) { print ( _CHAR > _CHAR + s + _CHAR *** warning ***\ n > Message : _CHAR + e + _CHAR \ n _CHAR ) ; return ++ count ; }
14122	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
14130	public int equivHashCode ( ) { if ( sourcename instanceof Value ) return ( ( Value ) sourcename ) . equivHashCode ( ) ; return sourcename . hashCode ( ) ; }
14133	public static Zltmat o ( Zltmat L ) throws JampackException { if ( L . nrow != L . ncol ) throw new JampackException ( _CHAR Can not compute the inverse of a rectangular matrix . '' ) ; return new Zltmat ( Solve . aib ( L , Eye . o ( L . nrow ) ) ) ; }
14142	private boolean journalRebuildRequired ( ) { final int REDUNDANT_OP_COMPACT_THRESHOLD = _NUM ; return redundantOpCount >= REDUNDANT_OP_COMPACT_THRESHOLD && redundantOpCount >= lruEntries . size ( ) ; }
14180	public static void main ( String [ ] args ) { MouseInteraction simulation = new MouseInteraction ( ) ; simulation . run ( ) ; }
14196	public Builder reduce ( IReducer reducer ) { actionList . add ( new DataAction ( reducer ) ) ; return this ; }
14200	public void moveToRecordId ( RecordId rid ) { moveTo ( rid . block ( ) . number ( ) ) ; rp . moveToId ( rid . id ( ) ) ; }
14205	public static void captureBitmap ( View view , Canvas canvas ) { recursiveInvalidate ( view ) ; view . draw ( canvas ) ; }
14206	public MinReducer ignoreExceptions ( ) { this . ignoreExceptions = _BOOL ; return this ; }
14207	public Builder withSortOrder ( RangeRequest . SortOrder order ) { this . sortOrder = order ; return this ; }
14224	@ Override protected Expression generateExpression ( ) { ReferencedEnvelope envelope = getBBox ( ) ; return getFilterFactory ( ) . literal ( envelope ) ; }
14228	public GsonBuilder addSerializationExclusionStrategy ( ExclusionStrategy strategy ) { excluder = excluder . withExclusionStrategy ( strategy , _BOOL , _BOOL ) ; return this ; }
14242	private void loadProcHeader ( ByteBuffer bb ) throws BufferUnderflowException , UTFDataFormatException { procHeader = StreamUtils . readUTF ( bb ) ; assert procHeader != _NULL ; }
14244	protected String [ ] upload_appender_file ( String group_name , String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final byte cmd = ProtoCommon . STORAGE_PROTO_CMD_UPLOAD_APPENDER_FILE ; return this . upload_file ( cmd , group_name , local_filename , file_ext_name , meta_list ) ; }
14246	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR AQI \ _CHAR ( _CHAR + _CHAR \ _CHAR AREAID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR AQI \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR QUALITY \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR PM2_5 \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR PM10 \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR SO2 \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR NO2 \ _CHAR INTEGER ) ; _CHAR ) ; }
14255	public boolean isSuccessCode ( ) { int aux = code - _NUM ; return aux >= _NUM && aux < _NUM ; }
14266	public void addArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getArgumentListNoTransform ( ) : getArgumentList ( ) ; list . addChild ( node ) ; }
14277	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { UserInfoDao . dropTable ( db , ifExists ) ; BookInfoDao . dropTable ( db , ifExists ) ; }
14280	public static void main ( String [ ] args ) { Raycast simulation = new Raycast ( ) ; simulation . run ( ) ; }
14286	public void clear ( AbsoluteTableIdentifier absoluteTableIdentifier ) { tableLockMap . remove ( absoluteTableIdentifier ) ; tableSegmentMap . remove ( absoluteTableIdentifier ) ; }
14295	@ Provides @ Singleton @ BlackListIpValueStore MapStore < Long > provideBlackListIps ( @ Global CuratorFramework curator , LifeCycleRegistry lifeCycle ) { CuratorFramework webCurator = withComponentNamespace ( curator , _CHAR web _CHAR ) ; return lifeCycle . manage ( new ZkMapStore < > ( webCurator , _CHAR / blacklist _CHAR , new ZkTimestampSerializer ( ) ) ) ; }
14306	public void shutdown ( ) { audioPlayer . close ( ) ; voice . deallocate ( ) ; }
14307	public static Document parseDocument ( Reader inputData , boolean validating ) throws ParserConfigurationException , SAXException , IOException { DocumentBuilder builder = createDocumentBuilder ( validating ) ; return builder . parse ( new InputSource ( inputData ) ) ; }
14317	public static void dropAllTables ( Database db , boolean ifExists ) { CollectDao . dropTable ( db , ifExists ) ; UserDao . dropTable ( db , ifExists ) ; }
14318	private static boolean visible ( SootMethod mPrime ) { SootClass cPrime = mPrime . getDeclaringClass ( ) ; return ( cPrime . isPublic ( ) || cPrime . isProtected ( ) || ( ! cPrime . isPrivate ( ) && ! ASSUME_PACKAGES_SEALED ) ) && ( mPrime . isPublic ( ) || mPrime . isProtected ( ) || ( ! mPrime . isPrivate ( ) && ! ASSUME_PACKAGES_SEALED ) ) ; }
14323	private int nextToken ( ) throws XNIException { if ( fCurrentTokenIndex == fTokenCount ) reportError ( _CHAR XPointerElementSchemeProcessingError _CHAR , _NULL ) ; return fTokens [ fCurrentTokenIndex ++ ] ; }
14327	public static String purgeNonBreakingSpaces ( String input ) { String output = input . replaceAll ( _CHAR \\ xA0 _CHAR , _CHAR _CHAR ) ; return output ; }
14328	public void actionPerformed ( ActionEvent ev ) { Color color = ChooseColorDialog . showChooseColorDialog ( getViewer ( ) . getFrame ( ) , _CHAR Choose label color _CHAR , _NULL ) ; if ( color != _NULL ) execute ( _CHAR set labelColor = _CHAR + color . getRed ( ) + _CHAR _CHAR + color . getGreen ( ) + _CHAR _CHAR + color . getBlue ( ) + _CHAR ; _CHAR ) ; }
14329	@ Override public String toString ( ) { String condition = acceptOlder ? _CHAR <= _CHAR : _CHAR > _CHAR ; return super . toString ( ) + _CHAR ( _CHAR + condition + cutoff + _CHAR ) _CHAR ; }
14332	public GraphSimilarity compareMeaningsOf ( Vertex vNode1 , Vertex vNode2 ) { GraphSimilarity isRes = new GraphSimilarity ( ) ; return isRes ; }
14335	public void processUtterance ( Utterance utterance ) throws ProcessException { fixApostrophe ( utterance ) ; fixTheIy ( utterance ) ; }
14340	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
14349	public Builder addColumnsInteger ( String ... names ) { for ( String s : names ) addColumnInteger ( s ) ; return this ; }
14371	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
14374	protected void peekPanel ( StateChangeReason reason ) { startShowing ( ) ; animatePanelToState ( PanelState . PEEKED , reason ) ; }
14379	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
14380	public void clear ( ) { m_head = new ObjectLiteral ( _NULL ) ; m_tail = _NULL ; }
14401	public Builder updateWhenIdle ( Boolean updateWhenIdle ) { this . updateWhenIdle = updateWhenIdle ; return this ; }
14411	public static long countSlicedIntervals ( Collection < Interval > rawIntervals , Granularity grain ) { Iterable < Interval > requestIterable = grain . intervalsIterable ( rawIntervals ) ; return StreamSupport . stream ( requestIterable . spliterator ( ) , _BOOL ) . count ( ) ; }
14412	public String [ ] upload_file ( String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_file ( group_name , local_filename , file_ext_name , meta_list ) ; }
14413	public Builder detectRetina ( Boolean detectRetina ) { this . detectRetina = detectRetina ; return this ; }
14421	public static void copy ( byte [ ] input , Writer output ) throws IOException { ByteArrayInputStream in = new ByteArrayInputStream ( input ) ; copy ( in , output ) ; }
14432	@ RequestMapping ( method = RequestMethod . POST , value = _CHAR orgUnits / { id } / activities _CHAR ) @ ResponseBody public String saveActivityReport2_8 ( @ PathVariable int id , @ RequestBody ActivityValue activityValue ) throws NotAllowedException { activityReportingService . saveActivityReport ( getUnit ( id ) , activityValue , _NUM ) ; return ACTIVITY_REPORT_UPLOADED ; }
14454	@ Override protected void readImpl ( ) { name = readS ( ) ; message = readS ( ) ; }
14467	private void onFetchVideosInfoError ( Exception ex ) { Log . e ( TAG , _CHAR Error fetching videos from _CHAR + getResources ( ) . getString ( R . string . videos_url ) + _CHAR , Exception : _CHAR + ex . toString ( ) ) ; Toast . makeText ( getContext ( ) , _CHAR Error fetching videos from json file _CHAR , Toast . LENGTH_LONG ) . show ( ) ; }
14477	public static void printf ( String format , Object ... args ) { out . printf ( LOCALE , format , args ) ; out . flush ( ) ; }
14491	public boolean replaceNext ( String regularExpression , String replaceText ) { System . err . println ( _CHAR not implemented _CHAR ) ; return _BOOL ; }
14493	public void provideStepResult ( ConditionStatus status ) { LOG . debug ( _CHAR Evaluated loadable condition _CHAR + progressData . peekLast ( ) . getLoadableComponentInfo ( ) + _CHAR with status _CHAR + status . getMessage ( ) ) ; progressData . peekLast ( ) . setStepStatus ( status ) ; }
14499	public Builder prefix ( String prefix ) { this . prefix = prefix ; return this ; }
14502	public final ProgressEvent updateProgress ( double dNewProgress ) { Progress = dNewProgress ; return this ; }
14531	protected void flowThrough ( Object inValue , Object unit , Object outValue ) { FlowSet in = ( FlowSet ) inValue , out = ( FlowSet ) outValue ; in . union ( unitToGenerateSet . get ( unit ) , out ) ; }
14545	public boolean isExpired ( Period period , Date now ) { int expiryDays = getExpiryDays ( ) ; return expiryDays != DataSet . NO_EXPIRY && new DateTime ( period . getEndDate ( ) ) . plusDays ( expiryDays ) . isBefore ( new DateTime ( now ) ) ; }
14555	private void printTo ( Body b , PrintWriter out ) { b . validate ( ) ; printStatementsInBody ( b , out ) ; }
14577	public static Map < String , Object > returnErrorService ( DispatchContext dctx , Map < String , ? > context ) { Locale locale = ( Locale ) context . get ( _CHAR locale _CHAR ) ; return ServiceUtil . returnError ( UtilProperties . getMessage ( resource , _CHAR CommonServiceReturnError _CHAR , locale ) ) ; }
14580	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
14586	public static WxMenu fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxMenu . class ) ; }
14590	public BafBody newBody ( Body b , String phase ) { Map < String , String > options = PhaseOptions . v ( ) . getPhaseOptions ( phase ) ; return new BafBody ( b , options ) ; }
14599	public static WxUserListResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxUserListResult . class ) ; }
14608	public void show ( ) { mDialog . show ( ) ; mUsernameView . requestFocus ( ) ; }
14614	public void hideDetailsArea ( int location ) { DisplayArea displayArea = getDisplayArea ( location ) ; if ( displayArea != _NULL ) displayArea . setVisible ( _BOOL ) ; }
14615	public static boolean removeFromCache ( String imageUri , DiskCache diskCache ) { File image = diskCache . get ( imageUri ) ; return image != _NULL && image . exists ( ) && image . delete ( ) ; }
14629	public Plan makeProductPlan ( Plan trunk ) { Plan p = makeSelectPlan ( ) ; return new MultiBufferProductPlan ( trunk , p , tx ) ; }
14630	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . isShowAxes ( ) ; }
14637	public < T > void receiveAndFire ( @ NotNull final ObservableValue < T > src , @ NotNull final Receiver < T > receiver ) { receive ( src , receiver ) ; receiver . receive ( src . get ( ) ) ; }
14648	public void saveToFileSystem ( final String appName , final File propertyFileLocation ) throws IOException { final OutputStream outputStream = new FileOutputStream ( propertyFileLocation ) ; properties . store ( outputStream , _CHAR === _CHAR + appName + _CHAR properties === _CHAR ) ; }
14654	@ Override public int run ( ) { this . model = setupModel ( ) ; return super . run ( ) ; }
14664	@ Override public ListenableFuture < AlarmResponse > listAlarms ( ) { AlarmRequest alarmRequest = AlarmRequest . newBuilder ( ) . setAlarm ( AlarmType . NONE ) . setAction ( AlarmRequest . AlarmAction . GET ) . setMemberID ( _NUM ) . build ( ) ; return this . futureStub . alarm ( alarmRequest ) ; }
14670	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
14671	public void paint ( Graphics g ) { g . translate ( _NUM , - visibleRow * getRowHeight ( ) ) ; super . paint ( g ) ; }
14700	public void addTypeDecl ( TypeDecl node ) { List < TypeDecl > list = ( parent == _NULL || state == _NULL ) ? getTypeDeclListNoTransform ( ) : getTypeDeclList ( ) ; list . addChild ( node ) ; }
14702	private void update ( DataApprovalLevel dataApprovalLevel , int index ) { dataApprovalLevel . setLevel ( index + _NUM ) ; dataApprovalLevelStore . update ( dataApprovalLevel ) ; }
14707	public ViewsAnimator animateWith ( @ NonNull final Context context , @ AnimRes final int animResId ) { FunctionUtils . checkParameterIsNotNull ( _CHAR context _CHAR , context ) ; return new ViewsAnimator ( context , this , animResId ) ; }
14712	public Bundler putLongArray ( String key , long [ ] value ) { bundle . putLongArray ( key , value ) ; return this ; }
14716	public static int positiveModulo ( int a , int b ) { int mod = a % b ; return mod >= _NUM ? mod : mod + b ; }
14729	public TapTarget descriptionTextColor ( @ ColorRes int color ) { this . descriptionTextColor = color ; return this ; }
14739	public void drawNodeAndLabel ( Node v , boolean selected ) { draw ( v , selected ) ; drawLabel ( v , selected ) ; }
14752	public void addUpdateStmt ( Stmt node ) { List < Stmt > list = ( parent == _NULL || state == _NULL ) ? getUpdateStmtListNoTransform ( ) : getUpdateStmtList ( ) ; list . addChild ( node ) ; }
14753	public MapContext < K , V > standAloneStack ( ) { MapContext < K , V > standAlone = MapContext . createMapContext ( this ) ; return standAlone ; }
14759	public EventBuilder minPriority ( ) { this . event . setPriority ( Thread . MIN_PRIORITY ) ; return this ; }
14802	public void select ( StyleWrapper styleWrapper ) { originalStyleWrapper = styleWrapper ; showSelectedStyle ( styleWrapper ) ; }
14803	private boolean journalRebuildRequired ( ) { final int redundantOpCompactThreshold = _NUM ; return redundantOpCount >= redundantOpCompactThreshold && redundantOpCount >= lruEntries . size ( ) ; }
14808	public void drawLabel ( Node v , boolean selected ) { viewer . getNV ( v ) . drawLabel ( gc , viewer . trans , viewer . getFont ( ) , selected ) ; if ( selected ) hiliteLabel ( v , ( NodeData ) v . getData ( ) ) ; }
14812	private static void writeStringToOutput ( String str , DataOutput out ) throws IOException { out . writeInt ( str . length ( ) ) ; out . writeChars ( str ) ; }
14816	public double t ( final double mu , final double [ ] observed ) throws MathIllegalArgumentException , NullArgumentException { checkSampleData ( observed ) ; return t ( StatUtils . mean ( observed ) , mu , StatUtils . variance ( observed ) , observed . length ) ; }
14818	public boolean isInterface ( ) { ClassDef classDef = getClassDef ( ) ; return ( classDef . getAccessFlags ( ) & AccessFlags . INTERFACE . getValue ( ) ) != _NUM ; }
14821	private void addAnnotationOnTarget ( ITextUnit textUnit , Issue issue ) { TextContainer targetContainer = textUnit . getTarget ( targetLocale ) ; addAnnotation ( targetContainer , issue ) ; }
14826	static void register ( IDimensionSlice idc , IDCController constraint ) { rejoin ( idc , constraint ) ; changeCount ( idc , + _NUM ) ; }
14878	public static boolean isWide ( TypeReference typeReference ) { String t = typeReference . getType ( ) ; return isWide ( t ) ; }
14893	public Builder layers ( ILayer [ ] layers ) { this . layers = layers ; return this ; }
14895	public void solve ( ) { submitInitialSeeds ( ) ; awaitCompletionComputeValuesAndShutdown ( ) ; }
14896	private void createUI ( ) { readConfigFileNoScrollPane ( _NULL , this , _CHAR symboltype / WKT . xml _CHAR ) ; registerForTextFieldButton ( FieldIdEnum . WKT , this ) ; }
14897	public static int dpToPx ( int dp ) { float density = Resources . getSystem ( ) . getDisplayMetrics ( ) . density ; return Math . round ( dp * density ) ; }
14898	public E removeMinimum ( ) { if ( this . root == _NULL ) return _NULL ; return this . removeMinimum ( this . root ) . comparable ; }
14900	private void readObject ( ObjectInputStream ois ) throws ClassNotFoundException , IOException { ois . defaultReadObject ( ) ; MatrixUtils . deserializeRealVector ( this , _CHAR coefficients _CHAR , ois ) ; }
14901	public static String formatQuantity ( Integer quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return formatQuantity ( quantity . doubleValue ( ) ) ; }
14920	public void startAction ( MotionEvent me ) { OnChartGestureListener l = mChart . getOnChartGestureListener ( ) ; if ( l != _NULL ) l . onChartGestureStart ( me , mLastGesture ) ; }
14922	public void moveNextPosition ( boolean smooth ) { if ( getRealAdapter ( ) == _NULL ) throw new IllegalStateException ( _CHAR You did not set a slider adapter _CHAR ) ; mViewPager . setCurrentItem ( mViewPager . getCurrentItem ( ) + _NUM , smooth ) ; }
14928	public AccessPath copyWithNewValue ( Value val , Type newType , boolean cutFirstField ) { if ( this . value != _NULL && this . value . equals ( val ) && this . baseType . equals ( newType ) ) return this ; return new AccessPath ( val , fields , newType , fieldTypes , this . taintSubFields , cutFirstField , _BOOL ) ; }
14929	public boolean establishStage ( Key < ? > key ) { Deque < Key < ? >> computing = Queues . newArrayDeque ( ) ; return establishStage ( computing , key ) ; }
14930	private void readObject ( ObjectInputStream ois ) throws ClassNotFoundException , IOException { ois . defaultReadObject ( ) ; needsSyncChildren ( _BOOL ) ; }
14939	public void addArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getArgumentListNoTransform ( ) : getArgumentList ( ) ; list . addChild ( node ) ; }
14943	public static boolean isUrl ( String url ) { Pattern pattern = Pattern . compile ( _CHAR ^ ( [ hH ] [ tT ] { _NUM } [ pP ] : //| [ hH ] [ tT ] { 2 } [ pP ] [ sS ] : // ) ( ( [ A - Za - z0 - 9 -~ ] + ) . ) + ( [ A - Za - z0 - 9 -~\\/ ] ) + $ '' ) ; return pattern . matcher ( url ) . matches ( ) ; }
14946	public Builder withKeysOnly ( boolean keysOnly ) { this . keysOnly = keysOnly ; return this ; }
14959	public boolean isParameter ( ) { if ( o1 instanceof SootMethod && o2 instanceof Integer ) return _BOOL ; return _BOOL ; }
14965	private void populateScaleRange ( boolean enabled ) { GroupConfigInterface group = getGroup ( GroupIdEnum . SCALE ) ; group . enable ( enabled ) ; }
14973	public EntityQuery orderBy ( List < String > orderBy ) { this . orderBy = orderBy ; return this ; }
14980	public int hashCode ( ) { this . combineOperands ( ) ; return operands . hashCode ( ) ; }
14990	public CriteriaHibernateSpaceDataSourceConfigurer fetchSize ( int fetchSize ) { this . fetchSize = fetchSize ; return this ; }
14998	@ SuppressWarnings ( _CHAR unchecked _CHAR ) static < T extends Type > T decodeStaticArray ( String input , int offset , TypeReference < T > typeReference , int length ) { BiFunction < List < T > , String , T > function = _NULL ; return decodeArrayElements ( input , offset , typeReference , length , function ) ; }
15017	public Expression matches ( Value str , Value regexp , String single , String multi , String escape ) { if ( escape != _NULL ) throw new IllegalArgumentException ( _CHAR JPQL ESCAPE keyword is not supported . '' ) ; return new MatchesExpression ( str , regexp ) ; }
15020	@ Override public String matchPredicateOperand ( String alias ) { Objects . requireNonNull ( alias , _CHAR alias can not be _NULL _CHAR ) ; return _CHAR ID ( _CHAR + alias + _CHAR ) _CHAR ; }
15022	@ Override public Scan open ( ) { Scan ss = sp . open ( ) ; return new GroupByScan ( ss , groupFlds , aggFns ) ; }
15029	public ResourceLazyLoadingScript cache ( boolean shouldCache ) { this . shouldCache = shouldCache ; return this ; }
15030	public JSONObject put ( String key , boolean value ) throws JSONException { put ( key , value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
15035	public void printContext ( PrintWriter out ) { out . println ( getMessage ( ) ) ; out . print ( context ) ; }
15039	public String showAndGetCommand ( ) { setVisible ( _BOOL ) ; return result ; }
15042	public ConfettiManager disableFadeOut ( ) { this . fadeOutInterpolator = _NULL ; return this ; }
15044	public static float roundFloat ( float value , int afterDecimalPoint ) { float mask = ( float ) Math . pow ( _NUM , ( float ) afterDecimalPoint ) ; return ( float ) ( Math . round ( value * mask ) ) / mask ; }
15045	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
15080	private void formWindowClosed ( java . awt . event . WindowEvent evt ) { saveSettings ( ) ; System . exit ( _NUM ) ; }
15092	public HumanTime m ( int n ) { delta += MINUTE * Math . abs ( n ) ; return this ; }
15101	public static boolean removeFromCache ( String imageUri , DiscCacheAware discCache ) { File image = discCache . get ( imageUri ) ; return image . delete ( ) ; }
15111	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL && viewer . getJList ( ) . getSelectedValuesList ( ) . size ( ) >= _NUM ; }
15114	boolean equivTo ( Operand other ) { if ( other . value == _NULL && value == _NULL ) return _BOOL ; return stackOrValue ( ) . equivTo ( other . stackOrValue ( ) ) ; }
15116	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public final S withValueSupplier ( Splittable . BigIntegerIndexed < T > valueSupplier ) { this . valueSupplier = valueSupplier ; return ( S ) this ; }
15119	@ Override public WebDriver defaultContent ( ) { frameSwitcher . putDefaultFramePathOnStack ( ) ; return targetLocator . defaultContent ( ) ; }
15125	@ Override public boolean containsVertex ( Set < String > labels ) { Objects . requireNonNull ( labels , _CHAR labels can not be _NULL _CHAR ) ; return this . labels . stream ( ) . allMatch ( _NULL ) ; }
15133	private void continueSet ( Channel channel , SessionStatus state , byte [ ] remainder , ChannelHandlerContext channelHandlerContext ) { state . cmd . element . setData ( remainder ) ; Channels . fireMessageReceived ( channelHandlerContext , state . cmd , channelHandlerContext . getChannel ( ) . getRemoteAddress ( ) ) ; }
15142	public static void create ( FSTree tree , DefaultTreeModel model ) { fileSystemTreeComponent = tree ; treeModel = model ; }
15167	public float angleBetween ( Vector2f otherVector ) { float angle = FastMath . atan2 ( otherVector . y , otherVector . x ) - FastMath . atan2 ( y , x ) ; return angle ; }
15170	public void selectAll ( boolean select ) { mainViewer . selectAllNodes ( select ) ; mainViewer . repaint ( ) ; }
15171	@ Override public void stop ( Runnable callback ) { stop ( ) ; callback . run ( ) ; }
15191	public static boolean isLeaf ( Object userObject ) { boolean leaf = ( userObject instanceof TextSymbolizer ) || ( userObject instanceof RasterSymbolizer ) || showCheckbox ( userObject ) ; return leaf ; }
15199	public void addTypeBound ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeBoundListNoTransform ( ) : getTypeBoundList ( ) ; list . addChild ( node ) ; }
15221	private String detectScriptUrlPerDHCP ( ) { Logger . log ( getClass ( ) , LogLevel . DEBUG , _CHAR Searching per DHCP not supported yet . '' ) ; return _NULL ; }
15240	public Builder lineJoin ( String lineJoin ) { this . lineJoin = lineJoin ; return this ; }
15250	@ Override public final int readUnsignedShort ( ) throws IOException { dis . readFully ( work , _NUM , _NUM ) ; return ( ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) ) ; }
15261	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR user_table \ _CHAR ( _CHAR + _CHAR \ _CHAR USER_ID \ _CHAR TEXT PRIMARY KEY NOT NULL , _CHAR + _CHAR \ _CHAR USER_NAME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR USER_PWD \ _CHAR TEXT ) ; _CHAR ) ; }
15266	private void broadcastNewFile ( Uri nativeUri ) { Intent intent = new Intent ( Intent . ACTION_MEDIA_SCANNER_SCAN_FILE , nativeUri ) ; context . sendBroadcast ( intent ) ; }
15288	private boolean isRegisterUsed ( int register ) { Instruction35c i = ( Instruction35c ) instruction ; return register == i . getRegisterD ( ) || register == i . getRegisterE ( ) || register == i . getRegisterF ( ) || register == i . getRegisterG ( ) || register == i . getRegisterC ( ) ; }
15291	public static int floor_double ( double value ) { int i = ( int ) value ; return value < ( double ) i ? i - _NUM : i ; }
15311	@ Override public void close ( ) throws IOException { super . close ( ) ; closed = _BOOL ; }
15313	public void unsetPermission ( String name ) { permissions . remove ( name . toLowerCase ( java . util . Locale . ENGLISH ) ) ; permissible . recalculatePermissions ( ) ; }
15340	private void writeObject ( ObjectOutputStream out ) throws IOException { out . defaultWriteObject ( ) ; registrarID . writeBytes ( out ) ; }
15355	public Builder addColumnsString ( String ... columnNames ) { for ( String s : columnNames ) addColumnString ( s ) ; return this ; }
15362	public final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , Vertex vHead , Vertex vTail ) { Edge eRes = locateDirectedEdgeInGraph ( gGraph , vHead , vTail ) ; return eRes == _NULL ? locateDirectedEdgeInGraph ( gGraph , vTail , vHead ) : eRes ; }
15379	public HumanTime d ( int n ) { delta += DAY * Math . abs ( n ) ; return this ; }
15390	public static InputStream needStream ( String propertyName ) throws NoSuchPropertyException , FileNotFoundException , MaryConfigurationException { MaryProperties . needProperty ( propertyName ) ; return getStream ( propertyName ) ; }
15396	@ Override public void close ( ) { idx . close ( ) ; ts . close ( ) ; }
15403	public void onNativeLibraryReady ( ) { mRegularTabModel . initializeNative ( ) ; mIncognitoTabModel . initializeNative ( ) ; }
15443	@ Override public void onUIReset ( PtrFrameLayout frame ) { mScale = _NUM ; mDrawable . stop ( ) ; }
15462	private boolean closeToMaxRange ( ) { BoundedRangeModel model = getModel ( ) ; return model . getMaximum ( ) - ( model . getValue ( ) + model . getExtent ( ) ) < STREAMING_POSITION_THRESHOLD * model . getExtent ( ) ; }
15464	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
15477	public final boolean canGetDouble ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canGetDouble ( ) ) ; }
15484	public String optString ( String key , String defaultValue ) { Object object = this . opt ( key ) ; return NULL . equals ( object ) ? defaultValue : object . toString ( ) ; }
15496	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
15497	private void formWindowClosed ( java . awt . event . WindowEvent evt ) { saveSettings ( ) ; System . exit ( _NUM ) ; }
15528	public Builder globalTag ( String val ) { globalTag = val ; return this ; }
15550	public Builder closePopupOnClick ( Boolean closePopupOnClick ) { this . closePopupOnClick = closePopupOnClick ; return this ; }
15555	public void addActivity ( AXmlNode node ) { if ( activities . isEmpty ( ) ) activities = new ArrayList < AXmlNode > ( ) ; activities . add ( node ) ; }
15559	protected double computeObjectiveValue ( double x ) { super . incrementEvaluationCount ( ) ; return function . value ( x ) ; }
15562	private boolean isThisPrefix ( char [ ] string ) { if ( string == _NULL || string . length < _NUM ) return _BOOL ; return string [ _NUM ] == _CHAR && string [ _NUM ] == _CHAR && string [ _NUM ] == _CHAR && string [ _NUM ] == _CHAR && string [ _NUM ] == _CHAR ; }
15567	protected void writePixels ( ) throws IOException { LZWEncoder encoder = new LZWEncoder ( width , height , indexedPixels , colorDepth ) ; encoder . encode ( out ) ; }
15572	@ Override public Vector3D toSpace ( final Point < Euclidean2D > point ) { final Vector2D p2D = ( Vector2D ) point ; return new Vector3D ( p2D . getX ( ) , u , p2D . getY ( ) , v , - originOffset , w ) ; }
15575	public LeastSquaresBuilder parameterValidator ( final ParameterValidator newValidator ) { paramValidator = newValidator ; return this ; }
15583	public Complex [ ] transform ( final UnivariateFunction f , final double min , final double max , final int n , final TransformType type ) { final double [ ] data = FunctionUtils . sample ( f , min , max , n ) ; return transform ( data , type ) ; }
15588	public void addOverlappingView ( View view , int width , int height ) { mFrameLayoutOverlappingViewContainer . addView ( view , width , height ) ; mOverlappingViewsMap . put ( view . getId ( ) , view ) ; }
15597	@ Subscribe public void onEvent ( ServerUnreachableEvent event ) { Snackbar . make ( findViewById ( R . id . root ) , getString ( R . string . toast_server_unreachable ) , Snackbar . LENGTH_LONG ) . show ( ) ; event . getE ( ) . printStackTrace ( ) ; }
15600	public static boolean saveTime ( ) { log . info ( _CHAR Game time saved ... _CHAR ) ; return DAOManager . getDAO ( ServerVariablesDAO . class ) . store ( _CHAR time _CHAR , getGameTime ( ) . getTime ( ) ) ; }
15608	public void addValidationRuleGroup ( ValidationRuleGroup validationRuleGroup ) { groups . add ( validationRuleGroup ) ; validationRuleGroup . getMembers ( ) . add ( this ) ; }
15612	public boolean isApplicable ( ) { InspectorWindow inspectorWindow = ( InspectorWindow ) getViewer ( ) ; return inspectorWindow != _NULL ; }
15626	public Builder showVerticalLineWhenStepsAreCollapsed ( boolean showVerticalLineWhenStepsAreCollapsed ) { this . showVerticalLineWhenStepsAreCollapsed = showVerticalLineWhenStepsAreCollapsed ; return this ; }
15637	public void solve ( ) { submitInitialSeeds ( ) ; awaitCompletionComputeValuesAndShutdown ( ) ; }
15643	public Builder attribution ( String attribution ) { this . attribution = attribution ; return this ; }
15653	@ Override public void confirm ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( copyButton ) ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( copyButton ) ) ; }
15664	public final void startAliveTimer ( ) { ProcessConfiguration processConfiguration = getConfigurationController ( ) . getProcessConfiguration ( ) ; aliveTimer . setInterval ( processConfiguration . getAliveInterval ( ) ) ; }
15689	public ActivateReferencesWindow waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
15693	public void clearBody ( ) throws JMSException { super . clearBody ( ) ; Body = new HashMap < String , Object > ( ) ; }
15698	public void addTag ( Map . Entry < String , TimeSeriesMetricDeltaSet > tag ) { tag . getValue ( ) . asScalar ( ) . ifPresent ( _NULL ) ; tag . getValue ( ) . asVector ( ) . ifPresent ( _NULL ) ; }
15725	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
15734	public double computeObjectiveValue ( double [ ] params ) { super . incrementEvaluationCount ( ) ; return function . value ( params ) ; }
15750	public static void main ( String [ ] args ) { File f = new File ( _CHAR / Users / wujun / d / workspace / giiwa / README . md _CHAR ) ; System . out . println ( md5 ( f ) ) ; }
15756	public void initFromIds ( ArrayList < Long > cellIds ) { initRawIds ( cellIds ) ; normalize ( ) ; }
15760	public PayloadBuilder withScheme ( String scheme ) { _scheme = checkNotNull ( scheme , _CHAR scheme _CHAR ) ; return this ; }
15771	public void encoding ( ) { outputRes ( ) ; rdp_encoding ( ) ; }
15783	public static void endFlight ( AirMapFlight flight , AirMapCallback < AirMapFlight > listener ) { String url = String . format ( flightEndUrl , flight . getFlightId ( ) ) ; AirMap . getClient ( ) . post ( url , new GenericOkHttpCallback ( listener , AirMapFlight . class ) ) ; }
15784	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; return chartViewer . getChartDrawer ( ) != _NULL && chartViewer . getChartDrawer ( ) . canShowXAxis ( ) ; }
15799	public void addElementValue ( ElementValue node ) { List < ElementValue > list = ( parent == _NULL || state == _NULL ) ? getElementValueListNoTransform ( ) : getElementValueList ( ) ; list . addChild ( node ) ; }
15810	public static NamedLayer createNewNamedLayer ( ) { NamedLayer namedLayer = styleFactory . createNamedLayer ( ) ; return namedLayer ; }
15812	private static final boolean hasWildcard ( String s ) { String test = s . replace ( _CHAR \\* _CHAR , _CHAR _CHAR ) . replace ( _CHAR \\ ? _CHAR , _CHAR _CHAR ) ; return ( test . contains ( _CHAR * _CHAR ) || test . contains ( _CHAR ? _CHAR ) ) ; }
15828	public void addGeneratedSourceFolder ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myGeneratedSourceFolders . add ( directory ) ; }
15834	@ Override protected void onRestoreInstanceState ( Bundle state ) { ensureList ( ) ; super . onRestoreInstanceState ( state ) ; }
15854	public Builder insertAfter ( String columnName ) { this . insertAfter = columnName ; return this ; }
15859	public static void renderTemplate ( String templateLocation , Map < String , Object > context , Appendable outWriter ) throws TemplateException , IOException { Template template = getTemplate ( templateLocation ) ; renderTemplate ( template , context , outWriter ) ; }
15879	public static GsonBuilder createGsonBuilder ( ) { GsonBuilder gsonBuilder = new GsonBuilder ( ) . registerTypeAdapter ( Timestamp . class , new TimestampSerializer ( ) ) . registerTypeAdapter ( Timestamp . class , new TimestampDeserializer ( ) ) . registerTypeAdapter ( Object . class , new TagValueDeserializer ( ) ) ; return gsonBuilder ; }
15901	public void maximizePanelThenPromoteToTab ( StateChangeReason reason , long duration ) { mShouldPromoteToTabAfterMaximizing = _BOOL ; animatePanelToState ( PanelState . MAXIMIZED , reason , duration ) ; }
15903	public void paint ( Graphics g ) { g . translate ( _NUM , - visibleRow * getRowHeight ( ) ) ; super . paint ( g ) ; }
15905	private Set < AccessPath > handleStringGetChars ( InvokeExpr invokeExpr , AccessPath taintedPath ) { if ( ( ( InstanceInvokeExpr ) invokeExpr ) . getBase ( ) == taintedPath . getPlainValue ( ) ) return new TwoElementSet < AccessPath > ( taintedPath , new AccessPath ( invokeExpr . getArg ( _NUM ) , _BOOL ) ) ; return Collections . singleton ( taintedPath ) ; }
15915	public Builder withVerbosity ( ) { this . verbose = _BOOL ; return this ; }
15935	public Builder withModuleRoot ( @ NotNull File moduleRoot ) { myModuleRoot = moduleRoot ; return this ; }
15945	void subscribe ( final Set < Long > tagIds , final BaseListener listener , final boolean sendInitialUpdateSeperately ) throws CacheSynchronizationException { Set < Long > newTagIds = cacheSynchronizer . initTags ( tagIds ) ; handleTagSubscription ( tagIds , newTagIds , listener , sendInitialUpdateSeperately ) ; }
15953	private Builder noClip ( Boolean noClip ) { this . noClip = noClip ; return this ; }
15967	public Builder withDryRun ( boolean dryRun ) { myDryRun = dryRun ; return this ; }
15968	public FieldRefNode makeLocalFieldRefNode ( Object baseValue , Type baseType , SparkField field , SootMethod method ) { VarNode base = makeLocalVarNode ( baseValue , baseType , method ) ; return makeFieldRefNode ( base , field ) ; }
15979	public void java_lang_Class_getProtectionDomain0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable protdmn = helper . tempField ( _CHAR < java . lang . Class ProtDmn > _CHAR ) ; helper . assign ( returnVar , protdmn ) ; }
15986	void releaseToPool ( long timeout , TimeUnit unit ) { registerAsIdle ( ) ; offerToPool ( timeout , unit ) ; }
16003	public EventBuilder maxPriority ( ) { this . event . setPriority ( Thread . MAX_PRIORITY ) ; return this ; }
16023	private void finish ( ) { Activity container = getActivity ( ) ; container . finish ( ) ; }
16028	private boolean journalRebuildRequired ( ) { final int redundantOpCompactThreshold = _NUM ; return redundantOpCount >= redundantOpCompactThreshold && redundantOpCount >= lruEntries . size ( ) ; }
16032	public void destroy ( ) { destroyReaderModeControl ( ) ; mParentView = _NULL ; }
16040	public EntityQuery fetchSize ( int fetchSize ) { this . fetchSize = fetchSize ; return this ; }
16067	public void OMTG_ENV_005_Webview_Remote ( View view ) { Intent intent = new Intent ( this , OMTG_ENV_005_WebView_Remote . class ) ; startActivity ( intent ) ; }
16080	public AemListItem up ( ) { buttonUp . click ( ) ; return this ; }
16121	public static boolean showCheckbox ( Object userObject ) { boolean showCheckbox = ( userObject instanceof Stroke ) || ( userObject instanceof Fill ) ; return showCheckbox ; }
16140	@ Override public void endEffect ( Effect effect ) { Creature effected = effect . getEffected ( ) ; effected . getGameStats ( ) . endEffect ( effect ) ; }
16141	public void maximizePanelThenPromoteToTab ( StateChangeReason reason ) { mShouldPromoteToTabAfterMaximizing = _BOOL ; maximizePanel ( reason ) ; }
16154	public Builder shadowSize ( Point shadowSize ) { this . shadowSize = shadowSize ; return this ; }
16156	public ColumnQuery addColumn ( String column ) throws NullPointerException { this . columns . add ( Objects . requireNonNull ( column , _CHAR column is required _CHAR ) ) ; return this ; }
16160	void increment ( ) { assert isEnabled ( ) ; setRawCounter ( getCount ( ) + _NUM ) ; }
16163	public boolean isUserSynchronized ( ) { Debug . logInfo ( this . getClass ( ) . getName ( ) + _CHAR Authenticator isUserSynchronized ( ) _CHAR , module ) ; return _BOOL ; }
16181	public void SwitchTo ( int lexState ) { if ( lexState >= _NUM || lexState < _NUM ) throw new TokenMgrError ( _CHAR Error : Ignoring invalid lexical state : _CHAR + lexState + _CHAR . State unchanged . '' , TokenMgrError . INVALID_LEXICAL_STATE ) ; else curLexState = lexState ; }
16182	private < T > Iterator < T > touch ( Iterator < T > iter ) { iter . hasNext ( ) ; return iter ; }
16185	@ AfterClass public void afterClass ( ) { toCleanUp . add ( initialExperiment ) ; toCleanUp . add ( completeExperiment ) ; }
16201	private static Configuration configure ( Configuration config , String hibernateFile ) { if ( hibernateFile == _NULL ) return config . configure ( ) ; else return config . configure ( hibernateFile ) ; }
16203	private void resetAllStates ( ) { resetSelectionStates ( ) ; mWasLastTapValid = _BOOL ; }
16208	private void processCandidateForUnaassign ( Iterable < User > users , String projectName ) { List < User > updated = StreamSupport . stream ( users . spliterator ( ) , _BOOL ) . filter ( _NULL ) . map ( _NULL ) . collect ( toList ( ) ) ; userRepository . save ( updated ) ; }
16215	public static boolean isSetTrue ( String propertyName ) { String value = props . getProperty ( propertyName ) ; return _CHAR _BOOL _CHAR . equals ( value ) ; }
16223	public void loadMithraConfiguration ( String mithraConfigXml ) { MithraRuntimeType runtimeType = loadConfigXml ( mithraConfigXml ) ; this . loadMithraConfiguration ( runtimeType ) ; }
16232	public void init ( Context context ) { boolean isNightModel = PersistenceUtils . isNightModel ( context ) ; AppCompatDelegate . setDefaultNightMode ( isNightModel ? AppCompatDelegate . MODE_NIGHT_YES : AppCompatDelegate . MODE_NIGHT_NO ) ; }
16242	public IteratorBuilder iteratorScope ( IteratorScope iteratorScope ) { iteratorConfig . setIteratorScope ( iteratorScope ) ; return this ; }
16282	@ Override public double [ ] makeInverseCumulativeTestPoints ( ) { IntegerDistribution dist = getDistribution ( ) ; return new double [ ] { _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , _NUM . _NUM , dist . cumulativeProbability ( _NUM ) , dist . cumulativeProbability ( _NUM ) , dist . cumulativeProbability ( _NUM ) , dist . cumulativeProbability ( _NUM ) , dist . cumulativeProbability ( _NUM ) } ; }
16289	public Builder metric ( Boolean metric ) { this . metric = metric ; return this ; }
16294	public void invalidateHeaders ( ) { mHeaderProvider . invalidate ( ) ; mHeaderRects . clear ( ) ; }
16298	public void startProgress ( ) { mBasoStatus = BasoStatus . PROGRESSING ; toggleLayout ( ) ; }
16323	private void updateButtonState ( boolean dataChanged ) { btnApply . setEnabled ( dataChanged ) ; btnRevert . setEnabled ( dataChanged ) ; }
16337	@ Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( CatchablePokemonEvent event ) { setPokemonMarkers ( event . getCatchablePokemon ( ) ) ; drawCatchedPokemonCircle ( event . getLat ( ) , event . getLongitude ( ) ) ; }
16341	private void visitAncestors ( NodeItem n ) { if ( n == m_root ) return ; visitFocus ( ( NodeItem ) n . getParent ( ) , n ) ; }
16345	public FileProcessor addInputSuffix ( String ... suffixes ) { for ( String suffix : suffixes ) addInputRegex ( _CHAR ( ? i ) . * _CHAR + Pattern . quote ( suffix ) ) ; return this ; }
16347	@ Override protected int sizeOf ( String key , BitmapDrawable value ) { final int bitmapSize = getBitmapSize ( value ) / _NUM ; return bitmapSize == _NUM ? _NUM : bitmapSize ; }
16351	public static boolean isLegal ( boolean expression , String message ) { if ( ! expression ) throw new IllegalArgumentException ( message ) ; return expression ; }
16355	private void resetLayout ( ) { mLayoutTabs = _NULL ; mBaseTab = _NULL ; }
16358	public static void resetGameTime ( ) { gameTime = _NUM ; startGameTime = _BOOL ; }
16359	private static int stToIJ ( double s ) { final int m = MAX_SIZE / _NUM ; return ( int ) Math . max ( _NUM , Math . min ( _NUM * m - _NUM , Math . round ( m * s + ( m - _NUM . _NUM ) ) ) ) ; }
16377	public static boolean isVisa ( String cc ) { if ( ( ( cc . length ( ) == _NUM ) || ( cc . length ( ) == _NUM ) ) && ( cc . substring ( _NUM , _NUM ) . equals ( _CHAR _NUM _CHAR ) ) ) return isCreditCard ( cc ) ; return _BOOL ; }
16381	public synchronized double forceUpdate ( double delta ) { tokens = Math . min ( tokens + delta , capacity ) ; return tokens ; }
16406	public T nearest ( final double [ ] key ) throws KeySizeException { final List < T > nbrs = nearest ( key , _NUM , _NULL ) ; return nbrs . get ( _NUM ) ; }
16420	public void destroyView ( ) throws CanceledException { dir . removeViewer ( this ) ; setVisible ( _BOOL ) ; }
16451	public IEntryCacheInfo safeInsertEntryToCache ( Context context , IEntryHolder entryHolder , boolean newEntry , TypeData pType , boolean pin ) { _engine . getMemoryManager ( ) . monitorMemoryUsage ( _BOOL ) ; return insertEntryToCache ( context , entryHolder , newEntry , pType , pin ) ; }
16477	public void sendDelayedTimeDeadbandValues ( ) { equipmentLogger . debug ( _CHAR Sending all time deadband delayed values to the server _CHAR ) ; this . equipmentTimeDeadband . sendDelayedTimeDeadbandValues ( ) ; }
16482	public static void main ( final String [ ] args ) { final List < Integer > zeroToNine = Arrays . asList ( _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM , _NUM ) ; zeroToNine . stream ( ) . filter ( _NULL ) . forEach ( _NULL ) ; }
16491	public void splashscreenVisible ( ) { assert mSplashScreenVisibleTime == _NUM ; mSplashScreenVisibleTime = SystemClock . elapsedRealtime ( ) ; }
16495	public void pushBackLine ( String line ) { if ( pushedBackLine != _NULL ) System . err . println ( _CHAR Error : Push back line , but buffer not empty _CHAR ) ; pushedBackLine = line ; }
16501	@ Override public void undoAction ( UndoInterface undoRedoObject ) { Object oldValue = undoRedoObject . getOldValue ( ) ; fieldConfigVisitor . populateTextField ( FieldIdEnum . TTF_SYMBOL , ( String ) oldValue ) ; }
16508	public AvgReducer ignoreExceptions ( ) { super . ignoreExceptions ( ) ; return this ; }
16514	public void clearMemoryCache ( ) { checkConfiguration ( ) ; configuration . memoryCache . clear ( ) ; }
16520	public LeastSquaresBuilder target ( final RealVector newTarget ) { this . target = newTarget ; return this ; }
16529	public DistributedLogNamespaceBuilder featureProvider ( FeatureProvider featureProvider ) { this . _featureProvider = featureProvider ; return this ; }
16538	public static double db2linear ( double dbEnergy ) { if ( Double . isNaN ( dbEnergy ) ) return _NUM . ; else return exp10 ( dbEnergy / _NUM ) ; }
16549	public Builder maxZoom ( Number maxZoom ) { this . maxZoom = maxZoom ; return this ; }
16552	public static void dataReductionProxyLoFiUIAction ( int action ) { assert action >= _NUM && action < LOFI_ACTION_INDEX_BOUNDARY ; RecordHistogram . recordEnumeratedHistogram ( _CHAR DataReductionProxy . LoFi . UIAction _CHAR , action , DataReductionProxyUma . LOFI_ACTION_INDEX_BOUNDARY ) ; }
16562	public static final Edge locateEdgeInGraph ( UniqueVertexGraph gGraph , Vertex vHead , Vertex vTail ) { Edge eRes = locateDirectedEdgeInGraph ( gGraph , vHead , vTail ) ; return eRes == _NULL ? locateDirectedEdgeInGraph ( gGraph , vTail , vHead ) : eRes ; }
16574	public static void dump ( PrintWriter pw , int padding , String string ) { pw . print ( pad ( padding ) ) ; pw . println ( string ) ; }
16575	public Partitions add ( String partition ) { partitions . add ( partition ) ; return this ; }
16604	public TapTarget titleTextColor ( @ ColorRes int color ) { this . titleTextColor = color ; return this ; }
16606	public static int posToOrientation ( int position ) { if ( ! ( _NUM <= position && position < _NUM ) ) throw new IllegalArgumentException ( ) ; return POS_TO_ORIENTATION [ position ] ; }
16628	public void clear ( int capacity ) { _data = new int [ capacity ] ; _pos = _NUM ; }
16629	public RevealBuilder withChildAnimationDuration ( final int childAnimationDuration ) { this . mChildAnimationDuration = childAnimationDuration ; return this ; }
16644	public static void writeRepetitiveObject ( ObjectOutput out , Object obj ) throws IOException { if ( out instanceof MarshalOutputStream ) ( ( MarshalOutputStream ) out ) . writeRepetitiveObject ( obj ) ; else writeObject ( out , obj ) ; }
16646	public static int pxToDp ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
16648	public Bindings add ( String property , JTextComponent c ) { registerPropertyChangeListener ( c ) ; return add ( new JTextComponentBinding ( property , c , _CHAR _CHAR ) ) ; }
16650	private static boolean approximately ( float x , float y , float affordance ) { float difference = Math . abs ( x - y ) ; return difference <= affordance ; }
16660	public Bundler putShort ( String key , short value ) { bundle . putShort ( key , value ) ; return this ; }
16677	public Builder withRevision ( long revision ) { this . revision = revision ; return this ; }
16678	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
16700	public void updatePosition ( ViewTransform viewTransform ) { updateResizeHandlesPositions ( viewTransform ) ; updateConstraintHandlesPositions ( ) ; }
16702	public SlickForm withFields ( FormField [ ] fields ) { Collections . addAll ( this . formFields , fields ) ; return this ; }
16706	@ Override public boolean next ( ) { while ( rf . next ( ) ) if ( rf . getVal ( SCHEMA_KEY ) . compareTo ( searchKey ) == _NUM ) return _BOOL ; return _BOOL ; }
16718	public CreateSiteWindow typeName ( String name ) { textField . setValue ( name ) ; return this ; }
16726	public AemDialog open ( ) { open ( currentScope ) ; return this ; }
16740	@ Override protected Expression generateExpression ( ) { Expression expression = _NULL ; return expression ; }
16746	public synchronized void onDestroy ( ) { cleanupService ( ) ; mHandler . getLooper ( ) . quit ( ) ; }
16769	static public boolean domWriter ( Node node , PrintStream ps , String prefix ) { ps . print ( XML_VERSION_TAG ) ; return _domWriter ( node , ps , prefix ) ; }
16770	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
16778	public static float enlarge ( float startValue , float endValue , float time ) { if ( startValue > endValue ) throw new IllegalArgumentException ( _CHAR Start size ca n _CHAR_CHAR ) ; return startValue + ( endValue - startValue ) * time ; }
16797	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
16799	public Builder scheduler ( ScheduledExecutorService executorService ) { this . _executorService = executorService ; return this ; }
16811	@ Override public boolean isKeyDown ( ) { boolean bReturn = this . isOverridingPresses ? this . isDown : super . isKeyDown ( ) ; return bReturn ; }
16828	private void internal_addVendorOption ( VendorOptionTypeInterface vendorOption ) { vendorOptionClassMap . put ( vendorOption . getClass ( ) , vendorOption ) ; vendorOptionMap . put ( vendorOption . getName ( ) , vendorOption ) ; }
16836	@ Override public void onIntroduceType ( IntroduceTypeData introduceTypeData ) { SpaceSynchronizationEndpoint endpointInterceptor = getEndpoint ( introduceTypeData . getTypeDescriptor ( ) . getTypeName ( ) ) ; if ( endpointInterceptor != _NULL ) endpointInterceptor . onIntroduceType ( introduceTypeData ) ; }
16837	public void clearTokens ( ) { tokens . clear ( ) ; saveTokenChanges ( ) ; }
16840	public Session remove ( String key ) { a . remove ( key ) ; return this ; }
16852	public void remove ( Player player ) { playersById . remove ( player . getObjectId ( ) ) ; playersByName . remove ( player . getName ( ) ) ; }
16868	public void swapWith ( E out , E in ) { innerChain . swapWith ( out , in ) ; out . redirectJumpsToThisTo ( in ) ; }
16870	public SharedPreferences . Editor putStringNoEncrypted ( String key , String value ) { mEditor . putString ( SecurePreferences . encrypt ( key ) , value ) ; return this ; }
16888	public void delete ( ) throws IOException { close ( ) ; IoUtils . deleteContents ( directory ) ; }
16894	public static byte [ ] decode ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decode ( bytes , _NUM , bytes . length ) ; }
16902	public static void remove ( String module , String name ) { String node = Model . node ( ) ; Helper . delete ( W . create ( _CHAR module _CHAR , module ) . and ( _CHAR name _CHAR , name ) . and ( _CHAR node _CHAR , node ) , Jar . class ) ; }
16906	public boolean isString ( String key ) { Object val = get ( key ) ; return val instanceof String ; }
16912	private void updateReceivedNotifications ( DefaultMutableTreeNode emitter , long received ) { String text = Resources . getText ( _CHAR LBL_Notifications _CHAR ) + _CHAR [ _CHAR + received + _CHAR ] _CHAR ; updateNotificationsNodeLabel ( emitter , text ) ; }
16915	public Builder inertiaMaxSpeed ( Number inertiaMaxSpeed ) { this . inertiaMaxSpeed = inertiaMaxSpeed ; return this ; }
16935	public Vector3f divide ( float scalar ) { scalar = _NUM / scalar ; return new Vector3f ( x * scalar , y * scalar , z * scalar ) ; }
16942	private void analyzeClass ( SootClass sootClass , SootClass lifecycleElement ) { if ( sootClass . getName ( ) . startsWith ( _CHAR android . '' ) || sootClass . getName ( ) . startsWith ( _CHAR java . '' ) ) return ; analyzeClassInterfaceCallbacks ( sootClass , sootClass , lifecycleElement ) ; }
16955	public static long tankiness ( final PokemonId pokemonId , final int defenseIV , final int staminaIV ) { final PokemonMeta meta = PokemonMetaRegistry . getMeta ( pokemonId ) ; return ( meta . getBaseStamina ( ) + staminaIV ) * ( meta . getBaseDefense ( ) + defenseIV ) ; }
16963	@ Override public void redoAction ( UndoInterface undoRedoObject ) { String newValueObj = ( String ) undoRedoObject . getNewValue ( ) ; attributeComboBox . setSelectedItem ( newValueObj ) ; }
16971	public Builder intoOpenFiles ( @ Nullable Collection < File > openFiles ) { myOpenFiles = openFiles ; return this ; }
16972	public ShimpleBody newBody ( SootMethod m ) { Map < String , String > options = PhaseOptions . v ( ) . getPhaseOptions ( PHASE ) ; return new ShimpleBody ( m , options ) ; }
16980	@ Override public void deleteMetadata ( ) throws IOException { checkClosedOrInError ( _CHAR createOrUpdateMetadata _CHAR ) ; createOrUpdateMetadata ( _NULL ) ; }
16987	@ Override protected final void invalidateQuietly ( final DataTag tag , final TagQualityStatus statusToAdd , final String description , final Timestamp timestamp ) { dataTagCacheObjectFacade . addQualityFlag ( tag , statusToAdd , description ) ; ( ( DataTagCacheObject ) tag ) . setCacheTimestamp ( timestamp ) ; }
16995	public EntityQuery filterByDate ( Date moment ) { this . filterByDate ( new java . sql . Timestamp ( moment . getTime ( ) ) ) ; return this ; }
16999	public static void showLogin ( Activity activity , int requestCode ) { Intent intent = new Intent ( activity , LoginActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; }
17013	void onSaveFast ( DataSupport baseObj ) throws SecurityException , IllegalArgumentException , NoSuchMethodException , IllegalAccessException , InvocationTargetException { ignoreAssociations = _BOOL ; onSave ( baseObj ) ; }
17022	public static void applyDrawableToImageView ( Drawable drawable , ImageView view , int color ) { drawable . mutate ( ) . setColorFilter ( color , PorterDuff . Mode . MULTIPLY ) ; view . setImageDrawable ( drawable ) ; }
17028	protected void syncSummaryView ( PreferenceViewHolder holder ) { View view = holder . findViewById ( android . R . id . summary ) ; syncSummaryView ( view ) ; }
17033	public Builder withPrevKV ( ) { this . prevKV = _BOOL ; return this ; }
17046	public static TypeRef of ( Type primitiveType ) { Preconditions . checkArgument ( primitiveType != Type . TYPE_MESSAGE && primitiveType != Type . TYPE_ENUM ) ; return interner . intern ( new TypeRef ( primitiveType , Cardinality . OPTIONAL , _NULL , _NULL ) ) ; }
17058	public Builder format ( String format ) { this . format = format ; return this ; }
17061	public void clear ( ) { _outgoingEvents . clear ( ) ; _alreadyTriggeredEvents . clear ( ) ; }
17070	public Builder envVars ( Map < String , String > map ) { this . envVars . putAll ( map ) ; return this ; }
17075	public AemToolbar delete ( ) { click ( MenuOption . DELETE ) ; return this ; }
17089	public int currentlyInBuffer ( ) { assert writePos >= readPos ; return writePos - readPos ; }
17094	private static void log ( String log , Object ... args ) { if ( verbose ) if ( args . length > _NUM ) Log . d ( TAG , log + _CHAR _CHAR + Arrays . asList ( args ) ) ; else Log . d ( TAG , log ) ; }
17102	public boolean isPerLogicalSubjectLockObject ( boolean isEvictable ) { if ( isEvictable ) throw new RuntimeException ( _CHAR AllInCacheLockManager : : no evictable object _CHAR ) ; return _BOOL ; }
17111	public boolean useToken ( String tokenuid , String ip ) { cleanExpiredTokens ( ) ; return _BOOL ; }
17115	public static void writeRepetitiveString ( ObjectOutput out , String s ) throws IOException { if ( out instanceof MarshalOutputStream ) ( ( MarshalOutputStream ) out ) . writeRepetitiveObject ( s ) ; else writeString ( out , s ) ; }
17130	public synchronized void switchCurrentCounter ( ) { currentCounter = ( currentCounter + _NUM ) % counters . length ; counters [ currentCounter ] = _NUM ; }
17132	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR ALARMS \ _CHAR ( _CHAR + _CHAR \ _CHAR ALARM_CONTENT \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR ALARM_ID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR ALARM_LEVEL_NO \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR ALARM_LEVEL_NO_DESC \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR ALARM_TYPE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR ALARM_TYPE_DESC \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR PUBLISH_TIME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR AREAID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR AREA_NAME \ _CHAR TEXT ) ; _CHAR ) ; }
17134	public synchronized final void close ( ) { _closed = _BOOL ; if ( _leaseReaperDaemon != _NULL ) _leaseReaperDaemon . clean ( ) ; }
17145	public static byte [ ] decodeWebSafe ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decodeWebSafe ( bytes , _NUM , bytes . length ) ; }
17176	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . isShowGroupsAsEllipses ( ) ; }
17183	boolean hasFired ( ) { int status = getSequenceStatus ( ) ; return ( status == SEQUENCE_FINISHED ) ; }
17200	private void handleEntryByIdAndOperateSA ( Context context , ITemplateHolder template ) throws TransactionException , TemplateDeletedException , SAException { IEntryHolder eh = getEntryByIdAndOperateSA ( context , template , _BOOL , _BOOL ) ; performReplIfChunkReached ( context ) ; }
17211	@ Override public boolean validate ( ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
17216	protected void jimplifyStatic ( DexBody body ) { invocation = Jimple . v ( ) . newStaticInvokeExpr ( getStaticSootMethodRef ( ) , buildParameters ( body , _BOOL ) ) ; body . setDanglingInstruction ( this ) ; }
17221	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
17225	public static FloatBuffer createVector2Buffer ( int vertices ) { FloatBuffer vBuff = createFloatBuffer ( _NUM * vertices ) ; return vBuff ; }
17230	private final void createChunk ( int data [ ] [ ] , int chunk ) { data [ chunk ] = new int [ CHUNK_SIZE + _NUM ] ; System . arraycopy ( INIT_ARRAY , _NUM , data [ chunk ] , _NUM , CHUNK_SIZE ) ; }
17234	public Builder zoomAnimationThreshold ( Number zoomAnimationThreshold ) { this . zoomAnimationThreshold = zoomAnimationThreshold ; return this ; }
17269	public JsonArray add ( String value ) { values . add ( Json . value ( value ) ) ; return this ; }
17295	public double [ ] computeDerivatives ( final double t , final double [ ] y ) throws MathIllegalArgumentException , MathIllegalStateException , NullPointerException { evaluations . increment ( ) ; return equations . computeDerivatives ( t , y ) ; }
17311	public float angle ( Vector other ) { double dot = dot ( other ) / ( length ( ) * other . length ( ) ) ; return ( float ) Math . acos ( dot ) ; }
17325	public < X extends DataSource > boolean hasProperties ( X dataSource ) { if ( dataSource == _NULL ) throw new IllegalArgumentException ( _CHAR DataSource can not be _NULL _CHAR ) ; return hasProperties ( dataSource , ( Class < X > ) dataSource . getClass ( ) ) ; }
17336	public Builder statsLogger ( StatsLogger statsLogger ) { this . statsLogger = statsLogger ; return this ; }
17338	private void openFile ( ) { mContainerActivity . getFileOperationsHelper ( ) . openFile ( getFile ( ) ) ; finish ( ) ; }
17359	public AemPathWindow clickCancel ( ) { cancelButton . click ( ) ; return this ; }
17361	public static String timeStampToString ( Timestamp stamp , String dateTimeFormat , TimeZone tz , Locale locale ) { DateFormat dateFormat = toDateTimeFormat ( dateTimeFormat , tz , locale ) ; return dateFormat . format ( stamp ) ; }
17369	private void observeChangingBook ( ) { Observable < Book > observable = bookRepository . observeChangingBooks ( ) . filter ( _NULL ) . observeOn ( AndroidSchedulers . mainThread ( ) ) ; subscribe ( observable , _NULL , _NULL , _NULL ) ; }
17377	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getSelectedReference ( ) != _NULL ; }
17381	public UnrevealBuilder withShowFromViewInterpolatedDuration ( final float showFromViewInterpolatedDuration ) { this . mShowFromViewInterpolatedDuration = showFromViewInterpolatedDuration ; return this ; }
17382	public boolean remove ( Object o ) { if ( o == _NULL ) return _BOOL ; return map . remove ( o ) == PRESENT ; }
17392	public Builder zkServers ( String zkServers ) { this . _zkHost = zkServers ; return this ; }
17406	void removeLocals ( ) { locals = new HashMultiMap ( ) ; backLocals = new HashMultiMap ( ) ; }
17421	public StaticScript script ( String script ) { this . script = script ; return this ; }
17438	public EntityQuery where ( EntityCondition entityCondition ) { this . whereEntityCondition = entityCondition ; return this ; }
17444	@ Override public void dataSourceLoaded ( GeometryTypeEnum geometryType , boolean isConnectedToDataSourceFlag ) { DataSourceInterface dataSource = DataSourceFactory . getDataSource ( ) ; dataSourceAttributePanel . dataSourceLoaded ( dataSource ) ; }
17464	public boolean isApplicable ( ) { ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return viewer . getChartData ( ) . getNumberOfSeries ( ) > _NUM && viewer . getChartSelection ( ) . getSelectedSeries ( ) . size ( ) < viewer . getChartData ( ) . getNumberOfSeries ( ) ; }
17471	public Builder hideKeyboard ( boolean hideKeyboard ) { this . hideKeyboard = hideKeyboard ; return this ; }
17472	@ POST @ Consumes ( _CHAR text / plain _CHAR ) @ Verify public void post ( @ HeaderParam ( DKIMSignature . DKIM_SIGNATURE ) DKIMSignature signature , String input ) { Assert . assertNotNull ( signature ) ; Assert . assertEquals ( input , _CHAR hello world _CHAR ) ; }
17474	public static void log ( CoreException e ) { IStatus status = e . getStatus ( ) ; log ( status . getSeverity ( ) , status . getMessage ( ) , e ) ; }
17492	public Job build ( ) { mValidator . ensureValid ( this ) ; return new Job ( this ) ; }
17495	public void delete ( RecordId rid ) { moveToRecordId ( rid ) ; delete ( ) ; }
17522	public static int calculateHate ( Creature creature , int value ) { Stat2 stat = new AdditionStat ( StatEnum . BOOST_HATE , value , creature , _NUM . _NUM ) ; return ( int ) ( creature . getGameStats ( ) . getStat ( StatEnum . BOOST_HATE , stat ) . getCurrent ( ) ) ; }
17540	public Builder maxBounds ( LatLngBounds maxBounds ) { this . maxBounds = maxBounds ; return this ; }
17550	public boolean handleRequest ( ZWaveController zController , SerialMessage lastSentMessage , SerialMessage incomingMessage ) throws ZWaveSerialMessageException { logger . warn ( _CHAR TODO : { } unsupported REQUEST . '' , incomingMessage . getMessageClass ( ) . getLabel ( ) ) ; return _BOOL ; }
17555	public CreateSiteWindow selectNthTemplate ( int i ) { templatesList . get ( i ) . click ( ) ; return this ; }
17561	public void putImplementationDataTagChanger ( final long equipmentId , final IDataTagChanger dataTagChanger ) { if ( dataTagChanger == _NULL ) dataTagChangers . remove ( equipmentId ) ; else dataTagChangers . put ( equipmentId , dataTagChanger ) ; }
17577	private void sendIntroductionRequest ( Peer peer ) throws IOException { IntroductionRequest request = new IntroductionRequest ( hashId , peer . getAddress ( ) , connectionType , networkOperator ) ; sendMesssage ( request , peer ) ; }
17585	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL ; }
17603	public JSONArray put ( int index , boolean value ) throws JSONException { put ( index , value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
17605	public EntityQuery cursorForwardOnly ( ) { this . resultSetType = EntityFindOptions . TYPE_FORWARD_ONLY ; return this ; }
17609	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
17614	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
17618	public Builder collapsed ( Boolean collapsed ) { this . collapsed = collapsed ; return this ; }
17629	public void moveBy ( int amountX , int amountY ) { Point p = getPosition ( ) ; move ( p . x + amountX , p . y + amountY ) ; }
17638	public void updateHardwareAddress ( final HardwareAddressUpdate hardwareAddressUpdate , final HardwareAddress hardwareAddress ) throws NoSuchFieldException , IllegalAccessException { updateListOfFields ( hardwareAddressUpdate . getChangedValues ( ) , hardwareAddress ) ; removeListOfFields ( hardwareAddressUpdate . getFieldsToRemove ( ) , hardwareAddress ) ; }
17644	public DocumentQuery addColumn ( String document ) throws NullPointerException { this . documents . add ( Objects . requireNonNull ( document , _CHAR document is required _CHAR ) ) ; return this ; }
17645	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR WEEK_FORE_CAST \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
17647	public boolean isSatisfied ( Record rec ) { for ( Term t : terms ) if ( ! t . isSatisfied ( rec ) ) return _BOOL ; return _BOOL ; }
17656	@ Deprecated public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
17665	public Shape rectangle ( double x , double y , double width , double height ) { m_rect . setFrame ( x , y , width , height ) ; return m_rect ; }
17667	public static boolean sectionLike ( Item tokenItem ) { String sectionType = ( ( String ) tokenItem . findFeature ( _CHAR p . name _CHAR ) ) . toLowerCase ( ) ; return inKingSectionLikeHash ( sectionType , SECTION_TYPES ) ; }
17670	public Optional < Double > median ( ) { if ( isEmpty ( ) ) return Optional . empty ( ) ; return Optional . of ( percentile ( _NUM ) ) ; }
17676	public Builder intoDependencies ( @ Nullable SetMultimap < String , String > dependencies ) { myDependencies = dependencies ; return this ; }
17684	public final boolean canSetBoolean ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canSetBoolean ( ) ) ; }
17692	public Builder inertiaDeceleration ( Number inertiaDeceleration ) { this . inertiaDeceleration = inertiaDeceleration ; return this ; }
17695	public Iterator inEdges ( Node node ) { nodeCheck ( node , _BOOL ) ; return m_edgeTuples . iterator ( inEdgeRows ( node . getRow ( ) ) ) ; }
17711	public Builder passIntentBundleOnCreate ( boolean passIntentBundleOnCreate ) { this . passIntentBundleOnCreate = passIntentBundleOnCreate ; return this ; }
17715	public ProcessConfiguration createProcessConfiguration ( final String processName , final Long processPIK , final Document confXMLDoc , final boolean localConfiguration , String jmsDaqQueueTrunk ) throws ConfUnknownTypeException , ConfRejectedTypeException { this . jmsDaqQueueTrunk = jmsDaqQueueTrunk ; return createProcessConfiguration ( processName , processPIK , confXMLDoc , localConfiguration ) ; }
17728	public static < T > void removeAll ( List < T > list , Integer ... indexes ) { List < Integer > inx = new ArrayList < > ( Arrays . asList ( indexes ) ) ; removeAll ( list , inx ) ; }
17738	public static List < Writable > sampleInvalidFromColumnSequence ( int numToSample , String columnName , Schema schema , JavaRDD < List < List < Writable >> > data ) { JavaRDD < List < Writable >> flattened = data . flatMap ( new SequenceFlatMapFunction ( ) ) ; return sampleInvalidFromColumn ( numToSample , columnName , schema , flattened ) ; }
17743	private void layout ( int width , int height ) { int itemsWidth = width - _NUM * PADDING ; itemsLayout . layout ( _NUM , _NUM , itemsWidth , height ) ; }
17754	public boolean isPluginEnabled ( String name ) { Plugin plugin = getPlugin ( name ) ; return isPluginEnabled ( plugin ) ; }
17757	protected boolean isEnabled ( ) throws TeamException { ISVNRemoteFile resource = getSingleSelectedSVNRemoteFile ( ) ; return ( resource != _NULL ) ; }
17758	private void ongetTokenBtnClicked ( final ActionEvent ignored ) { tokenField . setDisable ( _BOOL ) ; Browser . openUrl ( GoogleUserCredentialProvider . LOGIN_URL ) ; }
17760	private int dip2px ( float dip ) { float v = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dip , getResources ( ) . getDisplayMetrics ( ) ) ; return ( int ) ( v + _NUM . _NUM ) ; }
17765	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
17769	public static double uniform ( double a , double b ) { if ( ! ( a < b ) ) throw new IllegalArgumentException ( _CHAR Invalid range _CHAR ) ; return a + uniform ( ) * ( b - a ) ; }
17779	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
17786	public void dragAndDrop ( ConstraintWidget widget , int x , int y ) { mMouseMode = MouseMode . MOVE ; mWidgetMotion . dragWidget ( new Point ( x , y ) , new Selection . Element ( widget ) , x , y , _BOOL , isShiftDown ( ) , mViewTransform ) ; }
17787	public synchronized SlabAllocation attachAndAllocate ( SlabRef slab , int desired ) { attach ( slab ) ; return allocate ( desired ) ; }
17814	public void disableDragItem ( ) { itemDragEnabled = _BOOL ; mItemTouchHelper = _NULL ; }
17835	public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
17838	public void addGlobalAttributeDecl ( XSAttributeDecl decl ) { fGlobalAttrDecls . put ( decl . fName , decl ) ; decl . setNamespaceItem ( this ) ; }
17842	public JSONObject put ( String key , long value ) throws JSONException { put ( key , new Long ( value ) ) ; return this ; }
17848	private void cancelUploadsForAccount ( Account account ) { mPendingUploads . remove ( account . name ) ; mUploadsStorageManager . removeUploads ( account . name ) ; }
17860	public static String formatQuantity ( Long quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return formatQuantity ( quantity . doubleValue ( ) ) ; }
17862	@ Nullable public static TypeRef fromPrimitiveName ( String name ) { Type kind = PRIMITIVE_TYPE_MAP . get ( name ) ; return kind == _NULL ? _NULL : of ( kind ) ; }
17863	public void addMethod ( Method m ) { m . resolve ( this ) ; methods . addElement ( m ) ; }
17872	@ Override public void undoAction ( UndoInterface undoRedoObject ) { String oldValueObj = ( String ) undoRedoObject . getOldValue ( ) ; attributeComboBox . setSelectedItem ( oldValueObj ) ; }
17875	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
17893	public final static String base64Decode ( String str ) { if ( str == _NULL ) return _NULL ; return new String ( base64Decode ( str . getBytes ( ) ) ) ; }
17894	public static Settings init ( String tag ) { printer = new LoggerPrinter ( ) ; return printer . init ( tag ) ; }
17905	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR HOUR_FORE_CAST \ _CHAR ( _CHAR + _CHAR \ _CHAR AREAID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR HOUR \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR WEATHER_CONDITION \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR TEMP \ _CHAR INTEGER ) ; _CHAR ) ; }
17914	public JSONObject put ( String key , int value ) throws JSONException { put ( key , new Integer ( value ) ) ; return this ; }
17924	public void refined__Program_addCompilationUnit ( CompilationUnit node ) { List < CompilationUnit > list = ( parent == _NULL || state == _NULL ) ? getCompilationUnitListNoTransform ( ) : getCompilationUnitList ( ) ; list . addChild ( node ) ; }
17928	public void addTypeDecl ( TypeDecl node ) { List < TypeDecl > list = ( parent == _NULL || state == _NULL ) ? getTypeDeclListNoTransform ( ) : getTypeDeclList ( ) ; list . addChild ( node ) ; }
17932	public static void main ( String [ ] args ) { Billiards simulation = new Billiards ( ) ; simulation . run ( ) ; }
17934	public boolean is ( String k , String value ) { String v = get ( k ) ; return v == _NULL && value == _NULL || v != _NULL && v . equals ( value ) ; }
17966	public void sendRequest ( String url , final ISimpleRequestCallback uiUpdater ) { Request request = new Request . Builder ( ) . url ( url ) . build ( ) ; sendRequest ( request , uiUpdater ) ; }
17974	public void addLine ( @ NotNull RangedContinuousSeries series ) { mLinesConfig . put ( series , new LineConfig ( LineConfig . COLORS [ mNextLineColorIndex ++ ] ) ) ; mNextLineColorIndex % = LineConfig . COLORS . length ; }
17978	public boolean isSystemLocationSettingEnabled ( ) { LocationManager locationManager = ( LocationManager ) mContext . getSystemService ( Context . LOCATION_SERVICE ) ; return ( locationManager . isProviderEnabled ( LocationManager . NETWORK_PROVIDER ) || locationManager . isProviderEnabled ( LocationManager . GPS_PROVIDER ) ) ; }
17984	public boolean compare ( ClusterUnitDatabase other ) { System . out . println ( _CHAR Warning : Compare not implemented yet _CHAR ) ; return _BOOL ; }
17998	private void pushAnnotatorsRef ( String values ) { annotatorsRef . push ( annotatorsRef . peek ( ) ) ; setAnnotatorsRef ( values ) ; }
18006	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_settings ) ; }
18009	public static void skip ( DataInput in ) throws IOException { int length = WritableUtils . readVInt ( in ) ; WritableUtils . skipFully ( in , length ) ; }
18042	public static CommandResult execute ( String command , File dir ) { SimpleCommand simpleCommand = new SimpleCommand ( command ) ; return execute ( simpleCommand , dir ) ; }
18049	@ Override public int available ( ) { if ( inputSource == _NULL ) return _NUM ; return inputSource . available ( ) ; }
18070	@ SuppressLint ( _CHAR NewApi _CHAR ) public static void postInvalidateOnAnimation ( View view ) { if ( Build . VERSION . SDK_INT >= _NUM ) view . postInvalidateOnAnimation ( ) ; else view . postInvalidateDelayed ( _NUM ) ; }
18086	public static int divideToFloor ( int numerator , int denominator ) { Double result = Math . floor ( ( double ) numerator / denominator ) ; return result . intValue ( ) ; }
18099	public Builder withStreaming ( ) { this . streaming = _BOOL ; return this ; }
18104	public EntityQuery select ( Set < String > fieldsToSelect ) { this . fieldsToSelect = fieldsToSelect ; return this ; }
18115	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
18128	public Builder dashArray ( String dashArray ) { this . dashArray = dashArray ; return this ; }
18136	public void clearDoubleHeaderCache ( ) { clearSubHeaderCache ( ) ; clearHeaderCache ( ) ; }
18146	public static boolean interfaceOf ( Object obj , Object interfaceObject ) { Class < ? > interfaceClass = interfaceObject . getClass ( ) ; return interfaceOf ( obj , interfaceClass ) ; }
18153	public void tabLoadFinished ( int id ) { StripLayoutTab tab = findTabById ( id ) ; if ( tab != _NULL ) tab . loadingFinished ( ) ; }
18157	private void signInWithGPlus ( ) { Intent signInIntent = Auth . GoogleSignInApi . getSignInIntent ( mGoogleApiClient ) ; startActivityForResult ( signInIntent , RC_SIGN_IN ) ; }
18158	public static Color fromBGR ( int bgr ) throws IllegalArgumentException { Validate . isTrue ( ( bgr >> _NUM ) == _NUM , _CHAR Extrenuous data in : _CHAR , bgr ) ; return fromBGR ( bgr >> _NUM & BIT_MASK , bgr >> _NUM & BIT_MASK , bgr >> _NUM & BIT_MASK ) ; }
18167	private boolean shouldHideOverlayPanelLayout ( ) { final PanelState state = getPanelState ( ) ; return ( state == PanelState . PEEKED || state == PanelState . CLOSED ) && getHeight ( ) == getPanelHeightFromState ( state ) ; }
18173	@ Override public void onConnected ( Bundle connectionHint ) { initializeUI ( ) ; startLocationUpdates ( ) ; }
18178	private void sendPuncture ( Peer peer ) throws IOException { Puncture puncture = new Puncture ( hashId , peer . getAddress ( ) , internalSourceAddress ) ; sendMesssage ( puncture , peer ) ; }
18196	public Builder stepTitleTextColor ( int stepTitleTextColor ) { this . stepTitleTextColor = stepTitleTextColor ; return this ; }
18198	public JSONArray put ( int index , Map value ) throws JSONException { put ( index , new JSONObject ( value ) ) ; return this ; }
18199	public void clearReads ( ) { dataTable . clear ( ) ; setNumberReads ( _NUM ) ; }
18204	@ Override public void onUIRefreshBegin ( PtrFrameLayout frame ) { mDrawable . setAlpha ( _NUM ) ; mDrawable . start ( ) ; }
18206	public final boolean canSetInt ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canSetInt ( ) ) ; }
18207	public Builder buttonPressedTextColor ( int buttonPressedTextColor ) { this . buttonPressedTextColor = buttonPressedTextColor ; return this ; }
18209	public synchronized void panTo ( Point2D p ) { m_itransform . transform ( p , m_tmpPoint ) ; panToAbs ( m_tmpPoint ) ; }
18210	private void startFeedbackActivity ( @ NonNull Result result ) { Intent intent = FeedbackActivity . newIntent ( activity , result . getScreenshotUri ( ) , result . getData ( ) ) ; activity . startActivity ( intent ) ; }
18215	public void commitOutstandingModelState ( long time ) { mStacks [ _NUM ] . ensureCleaningUpDyingTabs ( time ) ; mStacks [ _NUM ] . ensureCleaningUpDyingTabs ( time ) ; }
18225	public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
18242	public static ITextComponent handle ( ITextComponent message , ICommandSender sender ) { final MessageEvent . Chat event = new MessageEvent . Chat ( message , sender , sender == _NULL ? Side . CLIENT : Side . SERVER ) ; return OpenModLoader . getEventBus ( ) . post ( event ) ? event . getMessage ( ) : _NULL ; }
18246	public void stopAutoScroll ( ) { isAutoScroll = _BOOL ; mCircleHandler . removeCallbacksAndMessages ( _NULL ) ; }
18251	@ Override public < T > T read ( InputStream inputStream , Class < T > classType ) throws IOException { Reader reader = new InputStreamReader ( inputStream ) ; return gson . fromJson ( reader , classType ) ; }
18252	public Builder draggable ( Boolean draggable ) { this . draggable = draggable ; return this ; }
18279	public void register ( DispatchContext context ) { if ( Debug . infoOn ( ) ) Debug . logInfo ( _CHAR Registering dispatcher : _CHAR + context . getName ( ) , module ) ; this . localContext . put ( context . getName ( ) , context ) ; }
18298	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
18305	public void hideToolbar ( boolean clearSelection ) { if ( mFindToolbar == _NULL ) return ; mFindToolbar . deactivate ( clearSelection ) ; }
18313	public StaticScript type ( String type ) { this . type = type ; return this ; }
18318	private void sendPunctureRequest ( Peer peer , Peer puncturePeer ) throws IOException { PunctureRequest request = new PunctureRequest ( hashId , peer . getAddress ( ) , internalSourceAddress , puncturePeer ) ; sendMesssage ( request , peer ) ; }
18321	private static int try_failure ( int count , String s , String e ) { print ( _CHAR > _CHAR + s + _CHAR *** failure ***\ n > Message : _CHAR + e + _CHAR \ n _CHAR ) ; return ++ count ; }
18335	public Optional < Double > avg ( ) { if ( isEmpty ( ) ) return Optional . empty ( ) ; return Optional . of ( sum ( ) / getEventCount ( ) ) ; }
18343	public SpaceContext trustContext ( SpaceContext spaceContext ) { SecurityContext trustedContext = trustInterceptor . trust ( SpaceContextHelper . getSecurityContext ( spaceContext ) ) ; return spaceContext . createCopy ( trustedContext ) ; }
18351	void submit ( ProcessAndDisplayImageTask task ) { initExecutorsIfNeed ( ) ; taskExecutorForCachedImages . execute ( task ) ; }
18352	public void addVariableDecl ( VariableDecl node ) { List < VariableDecl > list = ( parent == _NULL || state == _NULL ) ? getVariableDeclListNoTransform ( ) : getVariableDeclList ( ) ; list . addChild ( node ) ; }
18359	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( classes ) ; }
18375	public void click ( ) { new ComponentDriver ( myRobot ) . click ( mySurface , getMidPoint ( ) ) ; myRobot . waitForIdle ( ) ; }
18376	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
18387	public static int spToPx ( Context context , float spValue ) { final float fontScale = context . getResources ( ) . getDisplayMetrics ( ) . scaledDensity ; return ( int ) ( spValue * fontScale + _NUM . _NUM ) ; }
18388	private DataQueryParams removeDimension ( String dimension ) { this . dimensions . remove ( new BaseDimensionalObject ( dimension ) ) ; return this ; }
18398	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
18425	public JSONArray put ( Collection < Object > value ) { this . put ( new JSONArray ( value ) ) ; return this ; }
18431	public static String makeLinkAuto ( HttpServletRequest request , HttpServletResponse response , String uri ) { RequestHandler rh = RequestHandler . getRequestHandler ( request . getServletContext ( ) ) ; return rh . makeLinkAuto ( request , response , uri , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL ) ; }
18449	public Bundler putSparseParcelableArray ( String key , SparseArray < ? extends Parcelable > value ) { bundle . putSparseParcelableArray ( key , value ) ; return this ; }
18456	public Builder doubleClickZoom ( Boolean doubleClickZoom ) { this . doubleClickZoom = doubleClickZoom ; return this ; }
18473	public boolean isApplicable ( ) { ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return ( viewer . isSeriesTabSelected ( ) && viewer . getChartData ( ) . getChartSelection ( ) . getSelectedSeries ( ) . size ( ) > _NUM ) || ( ! viewer . isSeriesTabSelected ( ) && viewer . getChartData ( ) . getChartSelection ( ) . getSelectedClasses ( ) . size ( ) > _NUM ) ; }
18475	private void insertEntry ( Entry e , long now ) { e . calcRenew ( now ) ; leases . put ( e , e ) ; }
18484	public static void copy ( byte [ ] input , Writer output , String encoding ) throws IOException { ByteArrayInputStream in = new ByteArrayInputStream ( input ) ; copy ( in , output , encoding ) ; }
18504	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
18523	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
18526	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
18533	public PickRequest withCameraPicsDirectory ( @ Nullable final File pDirFile ) { this . mCustomCameraPicsDirPath = pDirFile == _NULL ? _NULL : pDirFile . getAbsolutePath ( ) ; return this ; }
18543	public void add ( String fldName , Schema sch ) { Type type = sch . type ( fldName ) ; addField ( fldName , type ) ; }
18544	@ Override protected boolean doDelete ( File fileToDelete ) throws IOException { FileUtils . forceDelete ( fileToDelete ) ; return _BOOL ; }
18546	public Builder traceTaskExecutionWarnTimeUs ( long timeUs ) { this . traceTaskExecutionWarnTimeUs = timeUs ; return this ; }
18548	protected void performDefaults ( ) { super . performDefaults ( ) ; initializeValues ( ) ; }
18567	public Builder maxLengthPerLine ( int val ) { maxLengthPerLine = val ; return this ; }
18581	public CarouselOptions minQuantity ( int minQuantity ) { mMinQuantity = minQuantity ; return this ; }
18606	private void reset ( ) { rootNode . removeAllChildren ( ) ; treeModel . reload ( ) ; }
18608	public Builder withVerbosity ( ) { this . verbose = _BOOL ; return this ; }
18610	public JsonArray add ( double value ) { values . add ( Json . value ( value ) ) ; return this ; }
18625	public void addField ( FieldIdEnum fieldId , boolean enabled ) { logger . debug ( String . format ( _CHAR AddField % s % s _CHAR , fieldId . toString ( ) , enabled ) ) ; fieldMap . put ( fieldId , enabled ) ; }
18647	public static < K , V > Type < MapEntry < K , V >> concreteEntryType ( Type < ? extends Map < K , V >> mapType ) { Type < ? > type = TypeFactory . valueOf ( MapEntry . class , mapType . getActualTypeArguments ( ) ) ; return ( Type < MapEntry < K , V >> ) type ; }
18650	public RabbitMqCommand writeErrorOutputTo ( OutputStream outputStream ) { this . errorOutputStream = outputStream ; return this ; }
18655	public PickRequest withRequestType ( final int pRequestType ) { this . mRequestType = pRequestType ; return this ; }
18656	public void close ( ) { if ( rp != _NULL ) rp . close ( ) ; if ( fhp != _NULL ) closeHeader ( ) ; }
18667	public static boolean isGZipFile ( String file ) { String ext = getExtension ( file ) ; return _CHAR gz _CHAR . equals ( ext ) || _CHAR z _CHAR . equals ( ext ) ; }
18670	public void uploadBuild ( ) { binary . initPath ( apkAbsolutePath ) ; uploadService . sendBuild ( _NULL , apkAbsolutePath , apiToken , binary , changeLogTa ) ; }
18672	public static void main ( String [ ] args ) { ScaleToolPanel dlg = new ScaleToolPanel ( _NULL ) ; dlg . setVisible ( _BOOL ) ; }
18680	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
18691	public void updateEquipmentConfiguration ( final EquipmentConfigurationUpdate equipmentConfigurationUpdate , final IEquipmentConfiguration equipmentConfiguration ) throws IllegalAccessException , NoSuchFieldException { fillNonNullFields ( equipmentConfigurationUpdate , equipmentConfiguration , CHANGE_ID_FIELD , EQUIPMENT_ID_FIELD ) ; removeListOfFields ( equipmentConfigurationUpdate . getFieldsToRemove ( ) , equipmentConfiguration ) ; }
18697	public static boolean isExternalStorageReadable ( ) { String state = Environment . getExternalStorageState ( ) ; return Environment . MEDIA_MOUNTED . equals ( state ) || Environment . MEDIA_MOUNTED_READ_ONLY . equals ( state ) ; }
18706	public Builder encrypt ( String key ) { this . encryptKey = key ; return this ; }
18729	public StaticScript metaArguments ( Object ... metaArguments ) { this . metaArguments = metaArguments ; return this ; }
18732	public void rightClick ( ) { myRobot . click ( mySurface , getMidPoint ( ) , MouseButton . RIGHT_BUTTON , _NUM ) ; myRobot . waitForIdle ( ) ; }
18738	public static UserFeedback createUserFeedback ( ) { UserFeedback userFeedback = new UserFeedback ( Constants . DEFAULT_PREFIX_USER_FEEDBACK + internalId ++ ) ; return userFeedback ; }
18743	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR _CHAR _CHAR ; db . execSQL ( sql ) ; }
18744	public static Object unflatten ( Object array , int [ ] dimensions ) { Class < ? > type = getType ( array ) ; return unflatten ( type , array , dimensions , _NUM ) ; }
18751	@ Override public void endExternalSubset ( Augmentations augs ) throws XNIException { fInDTDExternalSubset = _BOOL ; fBaseURIStack . pop ( ) ; }
18757	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
18758	public AemInsertWindow openInsertWindowByContextMenu ( ) { wait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return insertWindow . waitToBeDisplayed ( ) ; }
18762	public void spacing ( float spacing ) { this . spacing = spacing ; invalidate ( ) ; }
18764	public static void updateOnlineResources ( URL resourceLocator , StyledLayerDescriptor sld ) { List < String > externalImageList = new ArrayList < String > ( ) ; internal_updateOnlineResources ( resourceLocator , sld , externalImageList ) ; }
18785	private boolean hasPrefix ( byte [ ] nal ) { if ( nal [ _NUM ] == _NUM && nal [ _NUM ] == _NUM && nal [ _NUM ] == _NUM && nal [ _NUM ] == _NUM ) return _BOOL ; else return _BOOL ; }
18793	public boolean drain ( ) { timer . stop ( _CHAR speakableOut _CHAR ) ; return _BOOL ; }
18814	protected void init ( Table table , Graph graph , int row ) { m_table = table ; m_row = m_table . isValidRow ( row ) ? row : - _NUM ; }
18819	@ Override public DOMASWriter createDOMASWriter ( ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
18829	public long put ( K key , long value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
18834	public void abort ( ) { Log . i ( Mary . LOG , _CHAR Requesting abort . '' ) ; abortRequested = _BOOL ; }
18837	public static String tokenText ( Element t ) { if ( ! t . getNodeName ( ) . equals ( MaryXML . TOKEN ) ) throw new DOMException ( DOMException . INVALID_ACCESS_ERR , _CHAR Only t elements allowed , received _CHAR + t . getNodeName ( ) + _CHAR . _CHAR ) ; return getPlainTextBelow ( t ) . trim ( ) ; }
18838	private void initRealmConfiguration ( ) { RealmConfiguration realmConfiguration = new RealmConfiguration . Builder ( this ) . build ( ) ; Realm . setDefaultConfiguration ( realmConfiguration ) ; }
18842	public EntityQuery cache ( ) { this . useCache = _BOOL ; return this ; }
18851	private void populateAllIvPossibilities ( IVScanResult ivScanResult ) { IVResultsAdapter ivResults = new IVResultsAdapter ( ivScanResult ) ; rvResults . setAdapter ( ivResults ) ; }
18853	public static Direction directionForArrowKey ( KeyEvent e ) { int index = Math . max ( _NUM , Math . min ( e . getKeyCode ( ) , KeyEvent . VK_DOWN ) - KeyEvent . VK_LEFT ) ; return Direction . values ( ) [ index ] ; }
18858	public void execute ( EventCallback callback ) { this . event . setCallback ( callback ) ; instance . register ( event ) ; }
18861	@ Deprecated public SpaceTypeDescriptorBuilder addCompoundIndex ( String [ ] paths , SpaceIndexType indexType ) { if ( indexType != SpaceIndexType . BASIC ) throw new UnsupportedOperationException ( _CHAR only BASIC index type is supported for compoundindex '' ) ; return addCompoundIndex ( paths , indexType , _BOOL ) ; }
18862	protected String [ ] upload_file ( String group_name , String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final byte cmd = ProtoCommon . STORAGE_PROTO_CMD_UPLOAD_FILE ; return this . upload_file ( cmd , group_name , local_filename , file_ext_name , meta_list ) ; }
18870	public int addMarker ( String cfg ) { if ( ! initedNative ) return - _NUM ; return NativeInterface . arwAddMarker ( cfg ) ; }
18873	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
18897	public boolean isCDATAAttribute ( QName elName , QName atName ) { int elDeclIdx = getElementDeclIndex ( elName ) ; return ! ( getAttributeDecl ( elDeclIdx , fAttributeDecl ) && fAttributeDecl . simpleType . type != XMLSimpleType . TYPE_CDATA ) ; }
18900	public CarouselOptions minAlpha ( int minAlpha ) { mMinAlpha = minAlpha ; return this ; }
18903	public Builder tap ( Boolean tap ) { this . tap = tap ; return this ; }
18916	public JSONArray put ( boolean value ) { put ( value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
18942	public boolean add ( E o ) { if ( o == _NULL ) return _BOOL ; return map . put ( o , PRESENT ) == _NULL ; }
18949	@ Override protected XMLDocumentScanner createDocumentScanner ( ) { fNamespaceScanner = new XMLNSDocumentScannerImpl ( ) ; return fNamespaceScanner ; }
18955	public int findColumn ( String name ) { for ( int col = _NUM ; col < getColumnCount ( ) ; col ++ ) if ( getColumnName ( col ) . equals ( name ) ) return col ; return - _NUM ; }
18964	public static Settings init ( String tag ) { printer = new LoggerPrinter ( ) ; return printer . init ( tag ) ; }
18972	protected boolean preCastCheck ( ) { Conditions skillConditions = skillTemplate . getStartconditions ( ) ; return skillConditions != _NULL ? skillConditions . validate ( this ) : _BOOL ; }
18975	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . isAllowAminoAcids ( ) && ! viewer . isShowAminoAcids ( ) ; }
18976	protected boolean isViewAvailable ( ) { Tab currentTab = mTabModelSelector . getCurrentTab ( ) ; return currentTab != _NULL && currentTab . getContentViewCore ( ) != _NULL ; }
18980	private void createChunkList ( ) { this . oneDictionaryChunkList = new ArrayList < ByteBuffer > ( dictionary_one_chunk_size ) ; chunk_count ++ ; }
19000	public static String sanitizeText ( String text ) { if ( text == _NULL ) return _NULL ; return text . replace ( OBJ_CHARACTER , _CHAR _CHAR ) . trim ( ) ; }
19035	public void clearMemoryCache ( ) { checkConfiguration ( ) ; configuration . memoryCache . clear ( ) ; }
19046	public static void logThreadStarting ( final String threadName ) { Thread . currentThread ( ) . setName ( APP_NAME + _CHAR [ _CHAR + threadName + _CHAR ] _CHAR ) ; logThreadStarting ( ) ; }
19065	@ Override protected void onDestroy ( ) { super . onDestroy ( ) ; resetData ( ) ; }
19085	@ Override public void onStartTrackingTouch ( SeekBar seekBar ) { mDragging = _BOOL ; mHandler . removeMessages ( SHOW_PROGRESS ) ; }
19090	public static float reduce ( float startValue , float endValue , float time ) { if ( startValue < endValue ) throw new IllegalArgumentException ( _CHAR End size ca n _CHAR_CHAR ) ; return endValue + ( startValue - endValue ) * ( 1 - time ) ; }
19093	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
19110	public static void applyForPermit ( AirMapAvailablePermit permit , AirMapCallback < AirMapPilotPermit > listener ) { String url = String . format ( permitApplyUrl , permit . getId ( ) ) ; AirMap . getClient ( ) . postWithJsonBody ( url , permit . getAsParams ( ) , new GenericOkHttpCallback ( listener , AirMapPilotPermit . class ) ) ; }
19119	public void tag ( String inputFileName , String outputFileName , OutputFormat outputFormat ) { List < String > sentences = jsc . textFile ( inputFileName ) . collect ( ) ; tag ( sentences , outputFileName , outputFormat ) ; }
19120	public PipelineModel load ( String pipelineModelFileName ) { model = PipelineModel . load ( pipelineModelFileName ) ; return model ; }
19130	public static String formatQuantity ( BigDecimal quantity ) { if ( quantity == _NULL ) return _CHAR _CHAR ; else return quantityDecimalFormat . format ( quantity ) ; }
19131	private void readObject ( ObjectInputStream ois ) throws ClassNotFoundException , IOException { ois . defaultReadObject ( ) ; MatrixUtils . deserializeRealVector ( this , _CHAR coefficients _CHAR , ois ) ; }
19140	public Builder complexViewDetector ( @ Nullable ComplexViewDetector complexViewDetector ) { this . complexViewDetector = complexViewDetector ; return this ; }
19157	public IExtendedIndexIterator < IEntryCacheInfo > establishScan ( K startPos , short relation , K endPos , boolean endPosInclusive , boolean ordered ) { ordered |= FORCE_ORDERED_SCAN ; return ordered ? establishScanOrdered ( startPos , relation , endPos , endPosInclusive ) : establishScanUnOrdered ( startPos , relation , endPos , endPosInclusive ) ; }
19161	public Iterator outEdges ( Node node ) { nodeCheck ( node , _BOOL ) ; return m_edgeTuples . iterator ( outEdgeRows ( node . getRow ( ) ) ) ; }
19173	public DefaultHibernateSpaceSynchronizationEndpointConfigurer deleteById ( boolean deleteById ) { this . deleteById = deleteById ; return this ; }
19174	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . isShowLabels ( ) ; }
19178	public boolean isVoiced ( ) { Allophone allophone = getAllophone ( ) ; return allophone . isVoiced ( ) ; }
19188	public int put ( K key , int value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
19200	public void addTypeDecl ( TypeDecl node ) { List < TypeDecl > list = ( parent == _NULL || state == _NULL ) ? getTypeDeclListNoTransform ( ) : getTypeDeclList ( ) ; list . addChild ( node ) ; }
19202	public LeastSquaresBuilder start ( final RealVector newStart ) { this . start = newStart ; return this ; }
19206	public void putLong ( String key , long value ) { checkForNullKey ( key ) ; preferences . edit ( ) . putLong ( key , value ) . apply ( ) ; }
19263	private void onPause ( ) { mSubscription . unsubscribe ( ) ; mDispatchedObservablesHistory . clear ( ) ; }
19272	public PackageScanner useClassLoader ( ClassLoader classLoader ) { this . classLoader = classLoader ; return this ; }
19274	public Bundler putStringArrayList ( String key , ArrayList < String > value ) { bundle . putStringArrayList ( key , value ) ; return this ; }
19278	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
19288	public Builder paddingBottomRight ( Point paddingBottomRight ) { this . paddingBottomRight = paddingBottomRight ; return this ; }
19298	public static void main ( String [ ] args ) { PlayerControl simulation = new PlayerControl ( ) ; simulation . run ( ) ; }
19301	private boolean isAlreadySetup ( RetrieveAndRank service ) { SolrClusters clusters = service . getSolrClusters ( ) . execute ( ) ; return clusters . getSolrClusters ( ) . size ( ) > _NUM ? _BOOL : _BOOL ; }
19307	public void rightClick ( int x , int y , int delay ) throws InterruptedException { move ( x , y ) ; click ( InputEvent . BUTTON3_MASK , delay ) ; }
19315	private void layout ( int width , int height ) { int itemsWidth = width - _NUM * PADDING ; itemsLayout . layout ( _NUM , _NUM , itemsWidth , height ) ; }
19323	public void clearMemoryCache ( ) { checkConfiguration ( ) ; configuration . memoryCache . clear ( ) ; }
19329	public void connectNamePanel2AlignmentPane ( boolean connect ) { if ( connect ) namesScrollPane . getVerticalScrollBar ( ) . setModel ( alignmentScrollPane . getVerticalScrollBar ( ) . getModel ( ) ) ; else namesScrollPane . getVerticalScrollBar ( ) . setModel ( new DefaultBoundedRangeModel ( ) ) ; }
19335	private void acquireWakeLockAndStartService ( Context context ) { acquireWakeLock ( context ) ; startPrecacheService ( context ) ; }
19343	@ Override public boolean accept ( File file ) { boolean newer = FileUtils . isFileNewer ( file , cutoff ) ; return acceptOlder ? ! newer : newer ; }
19346	@ Override public final short readShort ( ) throws IOException { dis . readFully ( work , _NUM , _NUM ) ; return ( short ) ( ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) ) ; }
19353	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
19386	public T proxy ( ) { executorFactoryBean . afterPropertiesSet ( ) ; return ( T ) executorFactoryBean . getObject ( ) ; }
19399	public Builder cacheOnDisc ( boolean cacheOnDisc ) { this . cacheOnDisc = cacheOnDisc ; return this ; }
19401	public void addHandlerSideQuestDrop ( int questId , int npcId , int itemId , int amount , int chance ) { HandlerSideDrop hsd = new HandlerSideDrop ( questId , npcId , itemId , amount , chance ) ; QuestService . addQuestDrop ( hsd . getNpcId ( ) , hsd ) ; }
19411	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
19414	public void saveRootCertificateAsPemFile ( File file ) { String pemEncodedCertificate = securityProviderTool . encodeCertificateAsPem ( generatedCertificateAndKey . get ( ) . getCertificate ( ) ) ; EncryptionUtil . writePemStringToFile ( file , pemEncodedCertificate ) ; }
19439	public void removeHalfEdges ( int index ) { DoubleEdgeListHalfEdge e = this . edges . get ( index ) ; this . removeHalfEdges ( index , e ) ; }
19449	public Builder withRevision ( long revision ) { this . revision = revision ; return this ; }
19450	public Matrix3f transposeNew ( ) { Matrix3f ret = new Matrix3f ( m00 , m10 , m20 , m01 , m11 , m21 , m02 , m12 , m22 ) ; return ret ; }
19453	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( CalculateEcologicalIndices . BRAYCURTIS ) ; }
19459	public S2CellId parent ( int level ) { long newLsb = lowestOnBitForLevel ( level ) ; return new S2CellId ( ( id & - newLsb ) | newLsb ) ; }
19463	public void updateConfig ( String serviceURL , ClientConfiguration newConfig ) { this . serviceURL = serviceURL ; this . clientConfig = newConfig ; }
19471	public Bundler putParcelable ( String key , Parcelable value ) { bundle . putParcelable ( key , value ) ; return this ; }
19483	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
19506	public V remove ( Object key ) { int hash = hash ( key . hashCode ( ) ) ; return segmentFor ( hash ) . remove ( key , hash , _NULL ) ; }
19508	public void toAll ( List < EntityPlayerMP > players ) { PacketWrapper packet = new PacketWrapper ( channel , new Packet ( this ) ) ; players . stream ( ) . map ( _NULL ) . forEach ( _NULL ) ; }
19534	public Builder intoTargetFiles ( @ Nullable Collection < File > targetFiles ) { myTargetFiles = targetFiles ; return this ; }
19538	public final static String formatHeader ( final Header header , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = SaveLineFormatter . DEFAULT ; return formatter . formatHeader ( _NULL , header ) . toString ( ) ; }
19539	public Builder addColumnTime ( String columnName , DateTimeZone timeZone , Long minValidValue , Long maxValidValue ) { addColumn ( new TimeMetaData ( columnName , timeZone , minValidValue , maxValidValue ) ) ; return this ; }
19552	public RevealBuilder withCurvedTranslation ( ) { this . mCurvedTranslation = _BOOL ; return this ; }
19556	@ NotNull public DeletePersonAction deletePerson ( @ NotNull String personGroupId , @ NotNull String personId ) { Validation . validate ( personGroupId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR personGroupId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new DeletePersonAction ( cognitiveContext , personGroupId , personId ) ; }
19569	private void badIndex ( int index ) throws ArrayIndexOutOfBoundsException { String msg = _CHAR Attempt to modify attribute at illegal index : _CHAR + index ; throw new ArrayIndexOutOfBoundsException ( msg ) ; }
19575	@ Override public int available ( ) { int available = ( int ) ( currentlyInBuffer ( ) + dataLength - totalRead ) ; return available ; }
19589	@ Override public synchronized void write ( int b ) throws IOException { super . write ( b ) ; this . branch . write ( b ) ; }
19603	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
19610	public boolean isSuperUser ( String role ) { Set < String > superUserRoles = conf . getSuperUserRoles ( ) ; return role != _NULL && superUserRoles . contains ( role ) ? _BOOL : _BOOL ; }
19613	public static int dpToPx ( Context context , float dpValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpValue * scale + _NUM . _NUM ) ; }
19625	private static void populateInternal ( UILayoutInterface layout ) { String className = layout . getClass ( ) . getName ( ) ; uiLayoutMap . put ( className , layout ) ; }
19632	public Builder addIntegerDerivedColumn ( String columnName , DateTimeFieldType type ) { derivedColumns . add ( new DerivedColumn ( columnName , ColumnType . Integer , _NULL , _NULL , type ) ) ; return this ; }
19633	public static ExpectedCondition < Boolean > hasNodePropertyValue ( final Session session , final String nodePath , final String propertyName , final String propertyValue ) { LOG . debug ( _CHAR Checking if node ' { } ' has property ' { } ' with value ' { } ' '' , nodePath , propertyName , propertyValue ) ; return _NULL ; }
19635	public void startFirstSampleTimer ( ) { timer . start ( _CHAR firstAudio _CHAR ) ; firstSample = _BOOL ; }
19636	public Builder iconSize ( Point iconSize ) { this . iconSize = iconSize ; return this ; }
19639	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
19641	public boolean isApplicable ( ) { RemoteServiceBrowser remoteServiceBrowser = ( RemoteServiceBrowser ) getViewer ( ) ; return remoteServiceBrowser != _NULL && remoteServiceBrowser . getServicePanel ( ) != _NULL ; }
19685	public String toString ( cp_info constant_pool [ ] ) { CONSTANT_Utf8_info ci = ( CONSTANT_Utf8_info ) ( constant_pool [ string_index ] ) ; return _CHAR \ _CHAR _CHAR + ci . convert ( ) + _CHAR \ _CHAR _CHAR ; }
19691	private void writeObject ( ObjectOutputStream oos ) throws IOException { oos . defaultWriteObject ( ) ; MatrixUtils . serializeRealMatrix ( tableau , oos ) ; }
19696	private static boolean permissionExists ( String permission ) { Integer minVersion = MIN_SDK_PERMISSIONS . get ( permission ) ; return minVersion == _NULL || Build . VERSION . SDK_INT >= minVersion ; }
19705	public void java_lang_Class_newInstance0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable instanceVar = helper . newInstanceOf ( thisVar ) ; helper . assign ( returnVar , instanceVar ) ; }
19708	public UnrevealBuilder withCurvedTranslation ( ) { this . mCurvedTranslation = _BOOL ; return this ; }
19710	public JSONArray put ( int index , Map < String , Object > value ) throws JSONException { this . put ( index , new JSONObject ( value ) ) ; return this ; }
19718	public long nextLong ( long least , long bound ) { if ( least >= bound ) throw new IllegalArgumentException ( ) ; return nextLong ( bound - least ) + least ; }
19722	public Boolean hasNodePropertyValue ( String nodePath , String propertyName , String propertyValue ) throws RepositoryException { LOG . debug ( _CHAR Checking if node ' { } ' has property ' { } ' with value ' { } ' '' , nodePath , propertyName , propertyValue ) ; return getNodeProperty ( nodePath , propertyName ) . getValue ( ) . getString ( ) . equals ( propertyValue ) ; }
19738	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR print ; _CHAR ) ; System . err . println ( _CHAR Print command : not implemented _CHAR ) ; }
19753	private void checkApplyingFilter ( UserFilter filter , String filterID , String userName ) { expect ( filter , notNull ( ) ) . verify ( USER_FILTER_NOT_FOUND , filterID , userName ) ; expect ( filter . isLink ( ) , equalTo ( _BOOL ) ) . verify ( UNABLE_TO_CREATE_WIDGET , _CHAR Can not create widget based on a link . '' ) ; }
19783	public ViewsAnimator withDelayBetweenEachChild ( final int delayBetweenEachChild ) { this . delayBetweenEachChild = delayBetweenEachChild ; return this ; }
19789	@ Override protected void onNewIntent ( Intent intent ) { super . onNewIntent ( intent ) ; if ( this . appView != _NULL ) this . appView . onNewIntent ( intent ) ; }
19795	public JsonArray add ( boolean value ) { values . add ( Json . value ( value ) ) ; return this ; }
19815	private static Path qualified ( Path rootPath , Path path ) { URI rootUri = rootPath . toUri ( ) ; return path . makeQualified ( rootUri , new Path ( rootUri . getPath ( ) ) ) ; }
19824	public static void main ( String [ ] args ) { Host h = Host . local ( ) ; System . out . println ( h ) ; }
19832	@ Override public boolean validateLabel ( String label ) { Objects . requireNonNull ( label , _CHAR label can not be _NULL _CHAR ) ; return ! labels . contains ( label ) ; }
19861	@ NotNull public static byte [ ] rewriteClass ( @ NotNull byte [ ] classData , int layoutlibApi ) { int current = getCurrentClassVersion ( ) ; return rewriteClass ( classData , current , _NUM , layoutlibApi ) ; }
19862	@ Override public boolean onUnbind ( Intent intent ) { mOperationsBinder . clearListeners ( ) ; return _BOOL ; }
19863	public HectorCassandraClientConfigurer keyspaceName ( String keyspaceName ) { this . keyspaceName = keyspaceName ; return this ; }
19865	void addContext ( ContextVarNode cvn , Object context ) { if ( cvns == _NULL ) cvns = new HashMap < Object , ContextVarNode > ( ) ; cvns . put ( context , cvn ) ; }
19885	public boolean removeChild ( Node n ) { nodeCheck ( n , _BOOL ) ; return removeChild ( n . getRow ( ) ) ; }
19886	@ Override public void onUIRefreshBegin ( PtrFrameLayout frame ) { mDrawable . setAlpha ( _NUM ) ; mDrawable . start ( ) ; }
19887	public void emit ( String eventName , Object data ) { this . connection . send ( MessageBuilder . getMsg ( Topic . EVENT , Actions . EVENT , eventName , MessageBuilder . typed ( data ) ) ) ; this . broadcastEvent ( eventName , data ) ; }
19890	public EntityListIterator queryStartupJobsAlways ( EntityCondition commonCondition ) throws GenericEntityException { EntityCondition mainCondition = EntityCondition . makeCondition ( commonCondition , EntityCondition . makeCondition ( _CHAR eventId _CHAR , _CHAR SCH_EVENT_STARTUP _CHAR ) ) ; return EntityQuery . use ( delegator ) . from ( _CHAR JobSandbox _CHAR ) . where ( mainCondition ) . orderBy ( _CHAR runTime _CHAR ) . queryIterator ( ) ; }
19893	public CommandBuilder withLongSwitchIfPresent ( Map < String , Object > properties , String ... keys ) { withLongSwitchIfPresent ( properties , UnaryOperator . identity ( ) , keys ) ; return this ; }
19904	public synchronized TrueTime withSharedPreferences ( Context context ) { DISK_CACHE_CLIENT . enableDiskCaching ( context ) ; return INSTANCE ; }
19906	public static void main ( final String [ ] args ) { GlobalSettingsController . setup ( ) ; launch ( args ) ; }
19907	public void reset ( ) { m_offscreen = _NULL ; m_queue . clean ( ) ; }
19908	public boolean isSection ( String key ) { Object value = this . get ( key ) ; return value instanceof ConfigSection ; }
19912	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getDataType ( ) . equalsIgnoreCase ( ClassificationType . Taxonomy . toString ( ) ) ; }
19916	public static void dropAllTables ( Database db , boolean ifExists ) { NewsDao . dropTable ( db , ifExists ) ; ThemeListDao . dropTable ( db , ifExists ) ; }
19929	public ConfettiManager enableFadeOut ( Interpolator fadeOutInterpolator ) { this . fadeOutInterpolator = fadeOutInterpolator ; return this ; }
19933	public void addElement ( int element ) { ensureCapacity ( size + _NUM ) ; data [ size ++ ] = element ; }
19939	public Builder clickable ( Boolean clickable ) { this . clickable = clickable ; return this ; }
19948	private ListenableFuture < AuthenticateResponse > authenticate ( ManagedChannel channel , ByteString name , ByteString password ) { ListenableFuture < AuthenticateResponse > authResp = AuthGrpc . newFutureStub ( channel ) . authenticate ( AuthenticateRequest . newBuilder ( ) . setNameBytes ( name ) . setPasswordBytes ( password ) . build ( ) ) ; return authResp ; }
19957	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
19960	public void add ( String expr , int color ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; add ( p , color ) ; }
19974	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
19976	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
19980	private void initEditPermissionListener ( View shareView ) { mOnEditPermissionInteractionListener = new OnEditPermissionInteractionListener ( ) ; ( ( SwitchCompat ) shareView . findViewById ( R . id . shareViaLinkEditPermissionSwitch ) ) . setOnCheckedChangeListener ( mOnEditPermissionInteractionListener ) ; }
19994	public void tabLoadStarted ( int id ) { StripLayoutTab tab = findTabById ( id ) ; if ( tab != _NULL ) tab . loadingStarted ( ) ; }
20006	public void disposeRepository ( ISVNRepositoryLocation repository ) throws SVNException { ( ( SVNRepositoryLocation ) repository ) . dispose ( ) ; removeFromRepositoriesCache ( repository ) ; }
20009	public boolean execute ( String action , JSONArray args , CallbackContext callbackContext ) throws JSONException { CordovaArgs cordovaArgs = new CordovaArgs ( args ) ; return execute ( action , cordovaArgs , callbackContext ) ; }
20010	public static boolean isPrimitiveOrWrapper ( Class clazz ) { Assert . notNull ( clazz , _CHAR Class must not be _NULL _CHAR ) ; return ( clazz . isPrimitive ( ) || isPrimitiveWrapper ( clazz ) ) ; }
20019	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
20030	public void copyNode ( String nodePath , String destinationPath ) throws RepositoryException { copyNode ( getNode ( nodePath ) , getNode ( destinationPath ) ) ; session . save ( ) ; }
20031	public void rectValuesToPixel ( List < RectF > rects ) { Matrix m = getValueToPixelMatrix ( ) ; for ( int i = _NUM ; i < rects . size ( ) ; i ++ ) m . mapRect ( rects . get ( i ) ) ; }
20037	public ReplicateLaterWindow fillDay ( String date ) { dateField . sendKeys ( date ) ; return this ; }
20040	public static void deleteFile ( String path ) { File file = new File ( path ) ; file . deleteOnExit ( ) ; }
20060	public PreResponse deserialize ( String preResponse ) throws IOException { JsonNode serializedPreResponse = nonResponseContextMapper . readTree ( preResponse ) ; return new PreResponse ( getResultSet ( serializedPreResponse . get ( RESULT_SET_KEY ) ) , getResponseContext ( serializedPreResponse . get ( RESPONSE_CONTEXT_KEY ) ) ) ; }
20091	@ Override public void redoAction ( UndoInterface undoRedoObject ) { String newValueObj = ( String ) undoRedoObject . getNewValue ( ) ; filterComboBox . setSelectedItem ( newValueObj ) ; }
20100	public boolean addListener ( IClassLoaderCacheStateListener listener ) { _specificListeners . add ( new WeakReference < IClassLoaderCacheStateListener > ( listener ) ) ; return ! _dispatchingRemoved ; }
20106	public void loading ( ) { mHintView . setVisibility ( View . GONE ) ; mProgressBar . setVisibility ( View . VISIBLE ) ; }
20122	void submit ( ProcessAndDisplayImageTask task ) { initExecutorsIfNeed ( ) ; taskExecutorForCachedImages . execute ( task ) ; }
20127	private boolean matchValue ( Collection < ? > collection , int tokenIndex ) { if ( tokenIndex == _tokens . length ) return match ( collection , getExpectedValue ( ) ) ; return matchCollectionItemNestedProperty ( collection , tokenIndex ) ; }
20128	public void destroyView ( ) throws CanceledException { MeganProperties . removePropertiesListListener ( getJMenuBar ( ) . getRecentFilesListener ( ) ) ; super . destroyView ( ) ; }
20129	public String toIdString ( Object id ) { if ( id == _NULL ) return _NULL ; return id . toString ( ) ; }
20144	public boolean replaceNext ( String regularExpression , String replaceText ) { System . err . println ( _CHAR not implemented _CHAR ) ; return _BOOL ; }
20154	protected void removeAt ( int index ) { _values [ index ] = ( long ) _NUM ; super . removeAt ( index ) ; }
20159	public static double chiSquareTest ( final double [ ] expected , final long [ ] observed ) { final org . hipparchus . distribution . continuous . ChiSquaredDistribution distribution = new ChiSquaredDistribution ( expected . length - _NUM . _NUM ) ; return _NUM . _NUM - distribution . cumulativeProbability ( chiSquare ( expected , observed ) ) ; }
20162	public void addSequenceNumber ( GSEventRegistration registration ) { if ( _sequenceNumbers == _NULL ) _sequenceNumbers = new HashMap < Uuid , Long > ( ) ; _sequenceNumbers . put ( registration . getSpaceUID ( ) , registration . getSequenceNumber ( ) ) ; }
20163	public void clearDiskCache ( ) { checkConfiguration ( ) ; configuration . diskCache . clear ( ) ; }
20180	public Builder perExecutorStatsLogger ( StatsLogger perExecutorStatsLogger ) { this . perExecutorStatsLogger = perExecutorStatsLogger ; return this ; }
20193	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR _CHAR _CHAR ; db . execSQL ( sql ) ; }
20201	public Builder lineJoin ( String lineJoin ) { this . lineJoin = lineJoin ; return this ; }
20204	public void sendConfirmationEmail ( final String subject , final String [ ] recipients , final String url ) { MimeMessagePreparator preparator = _NULL ; this . send ( preparator ) ; }
20208	public void push ( boolean value ) { ensureCapacity ( fDepth + _NUM ) ; fData [ fDepth ++ ] = value ; }
20214	public static String formatTimeDiff ( long finishTime , long startTime ) { long timeDiff = finishTime - startTime ; return formatTime ( timeDiff ) ; }
20218	private static EntryClass toEntryClass ( Class cls ) throws MarshalException { if ( cls != _NULL ) return toEntryClassBase ( cls , _BOOL ) . eclass ; return _NULL ; }
20222	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getDataType ( ) . equalsIgnoreCase ( _CHAR KEGG _CHAR ) ; }
20227	public void printTable ( ScoutWidget [ ] list ) { printCenterTable ( list ) ; printBaseTable ( list ) ; }
20243	public void createTable ( TableId table , String topic ) { Schema kafkaConnectSchema = schemaRetriever . retrieveSchema ( table , topic ) ; bigQuery . create ( constructTableInfo ( table , kafkaConnectSchema ) ) ; }
20259	protected void writeShort ( int value ) throws IOException { out . write ( value & _NUM ) ; out . write ( ( value >> _NUM ) & _NUM ) ; }
20267	public static void main ( String [ ] args ) { System . out . println ( merge ( _CHAR http : // www . haodf . com / wenda / adele_g_4491037166 . htm '' , '' http : // www . haodf . com / wenda / aiai6905_g_4377802805 . htm '' ) ) ; System . out . println ( merge ( '' http : // www . haodf . com / wenda / y .* _g_44959 .* 9 .* 9 .*. htm '' , '' http : // www . haodf . com / wenda / doc .* _g_4 .* 4 .* 5 .* 7 . *. htm '' ) ) ; }
20275	protected void merge ( Object in1 , Object in2 , Object out ) { FlowSet inSet1 = ( FlowSet ) in1 , inSet2 = ( FlowSet ) in2 , outSet = ( FlowSet ) out ; inSet1 . intersection ( inSet2 , outSet ) ; }
20276	public void writeChar ( char a ) throws IOException { io . write ( ( byte ) ( a >> _NUM ) ) ; io . write ( ( byte ) ( a ) ) ; }
20278	public Builder traceTaskExecution ( boolean trace ) { this . traceTaskExecution = trace ; return this ; }
20282	public Future < DLSN > writeControlRecord ( final LogRecord record ) { record . setControl ( ) ; return write ( record ) ; }
20285	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
20303	private static void killCurrentProcess ( ) { android . os . Process . killProcess ( android . os . Process . myPid ( ) ) ; System . exit ( _NUM ) ; }
20307	@ Override public void schedule ( Runnable childStatement ) { Future < Void > submittedStatement = completionService . submit ( childStatement , _NULL ) ; tasks . add ( submittedStatement ) ; }
20326	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
20341	public String [ ] upload_appender_file ( byte [ ] file_buff , int offset , int length , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_appender_file ( group_name , file_buff , offset , length , file_ext_name , meta_list ) ; }
20346	public AemSidekick clickOperation ( PageOperation optionName ) { getOperation ( optionName ) . click ( ) ; return this ; }
20351	private int dp2px ( float dpValue ) { final float scale = getContext ( ) . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpValue * scale + _NUM . _NUM ) ; }
20354	@ Override public void onRemoveCommandTag ( final ISourceCommandTag sourceCommandTag , final ChangeReport changeReport ) { changeReport . appendError ( _CHAR The equipment has no implementation to _CHAR + _CHAR remove command tags . You have to restart the DAQ . '' ) ; changeReport . setState ( CHANGE_STATE . REBOOT ) ; }
20356	public boolean isSelected ( int fId ) { Node v = getANode ( fId ) ; return v != _NULL && getSelected ( v ) ; }
20357	public String matchPattern ( String alias ) { if ( alias != _NULL ) return _CHAR ( _CHAR + alias + processLabels ( matchLabels , _BOOL ) + _CHAR ) _CHAR ; return _CHAR ( _CHAR + processLabels ( matchLabels , _BOOL ) + _CHAR ) _CHAR ; }
20361	public synchronized static DataSourceRepository sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new DataSourceRepository ( ) ; return sharedInstance ; }
20371	public ISpaceSynchronizeReplicaState recoverFromOtherSpace ( ) throws Exception { boolean transientOnly = ! _space . getEngine ( ) . isColdStart ( ) ; return _recoveryGroup . recover ( transientOnly , transientOnly ) ; }
20373	public String [ ] upload_file ( byte [ ] file_buff , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_file ( group_name , file_buff , _NUM , file_buff . length , file_ext_name , meta_list ) ; }
20374	public void addDoubleOpt ( String key , String val ) { addSingleOpt ( key ) ; addSingleOpt ( val ) ; }
20386	public static boolean isShowToastEnabled ( ) { InstantRunConfiguration configuration = InstantRunConfiguration . getInstance ( ) ; return configuration . SHOW_TOAST ; }
20399	private void createUI ( ) { createVendorOptionPanel ( ) ; readRasterConfigFile ( vendorOptionRasterFactory , this , _CHAR Raster . xml _CHAR ) ; }
20419	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = input . getBytes ( Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
20439	public void updateModelBound ( ) { mesh . updateBound ( ) ; worldBound = getModelBound ( ) . transform ( cachedWorldMat , worldBound ) ; }
20444	public boolean isUpdateListenerRegistered ( final BaseListener < ? extends Tag > pListener ) { boolean isRegistered = listeners . contains ( pListener ) ; return isRegistered ; }
20447	public boolean isComponentPresent ( Class < ? > componentClass ) { final String cssClassName = new AemComponentHandler ( componentClass ) . getCssClassName ( ) ; return isComponentPresent ( cssClassName ) ; }
20465	public void add ( int position , T item ) { items . add ( position , item ) ; notifyItemInserted ( position ) ; }
20468	public void unsubscribe ( String subscriptionName ) throws JMSException { ensureOpen ( ) ; throw new JMSException ( _CHAR This version of JMS does not support durable subscribers . '' ) ; }
20473	public void unsetQuota ( ServiceUnitId suName ) throws Exception { String suNameStr = ( suName == _NULL ) ? _NULL : suName . toString ( ) ; this . unsetQuota ( suNameStr ) ; }
20476	@ Override public int read ( ) throws IOException { int b = readFirstBytes ( ) ; return b >= _NUM ? b : in . read ( ) ; }
20479	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException { setHints ( _NULL ) ; return decodeInternal ( image ) ; }
20497	@ Override public void undoAction ( UndoInterface undoRedoObject ) { Object oldValue = undoRedoObject . getOldValue ( ) ; fieldConfigVisitor . populateTextField ( FieldIdEnum . WKT , ( String ) oldValue ) ; }
20498	public boolean hasMoreElements ( ) { if ( iterator == _NULL ) return _BOOL ; return iterator . hasNext ( ) ; }
20499	@ NotNull public TrainPersonGroupAction trainGroup ( @ NotNull String personGroupId ) { Validation . validate ( personGroupId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR personGroupId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new TrainPersonGroupAction ( cognitiveContext , personGroupId ) ; }
20506	@ Override public boolean isDynamicTimeDeadband ( final SourceDataTag tag ) { DataTagAddress address = tag . getAddress ( ) ; return ( ! address . isStaticTimedeadband ( ) && this . equipmentConfiguration . isDynamicTimeDeadbandEnabled ( ) ) ; }
20509	@ VisibleForTesting protected void cancelAlarmOnSystem ( Context context , PendingIntent operation ) { AlarmManager alarmManager = ( AlarmManager ) context . getSystemService ( Context . ALARM_SERVICE ) ; alarmManager . cancel ( operation ) ; }
20524	private void openActivity ( Class activityToOpen ) { Intent intent = new Intent ( this , activityToOpen ) ; startActivity ( intent ) ; }
20527	public void put ( HttpSession session , T value , Map < String , Object > expandContext ) { AttributeAccessor < T > aa = new AttributeAccessor < T > ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; aa . put ( session , value ) ; }
20531	void add ( SuperToast superToast ) { superToastPriorityQueue . add ( superToast ) ; this . showNextSuperToast ( ) ; }
20551	public ResourcesPoet addBool ( String name , boolean value ) { addBool ( name , String . valueOf ( value ) ) ; return this ; }
20554	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
20565	private static void handleError ( Collection errors , File path ) throws IOException { if ( errors == _NULL ) throw new IOException ( _CHAR could n _CHAR_CHAR + path ) ; errors . add ( path ) ; }
20568	public void checkLevel ( int level ) { if ( ! Scene . v ( ) . doneResolving ( ) ) return ; checkLevelIgnoreResolving ( level ) ; }
20569	public static MultilayerPerceptronClassificationModel load ( JavaSparkContext jsc , String classifierFileName ) { Object object = jsc . objectFile ( classifierFileName ) . first ( ) ; return ( ( MultilayerPerceptronClassificationModel ) object ) ; }
20573	public static byte [ ] decodeWebSafe ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decodeWebSafe ( bytes , _NUM , bytes . length ) ; }
20578	public static boolean sectionLike ( Item tokenItem ) { String sectionType = ( ( String ) tokenItem . findFeature ( _CHAR p . name _CHAR ) ) . toLowerCase ( ) ; return inKingSectionLikeHash ( sectionType , SECTION_TYPES ) ; }
20581	public Bindings add ( String property , JTextComponent c , String defaultValue ) { registerPropertyChangeListener ( c ) ; return add ( new JTextComponentBinding ( property , c , defaultValue ) ) ; }
20591	private float y ( TouchState s ) { final float currToTan = ( float ) Math . sqrt ( ( s . distance * s . distance ) - ( mScaledTouchSlop * mScaledTouchSlop ) ) ; return currToTan * ( mScaledTouchSlop / s . distance ) ; }
20593	public static void assertSameMembers ( ThrowableSet . Pair p , RefLikeType [ ] caughtIncluded , AnySubType [ ] caughtExcluded , RefLikeType [ ] uncaughtIncluded , AnySubType [ ] uncaughtExcluded ) { assertSameMembers ( p . getCaught ( ) , caughtIncluded , caughtExcluded ) ; assertSameMembers ( p . getUncaught ( ) , uncaughtIncluded , uncaughtExcluded ) ; }
20607	public void addEntry ( Label l , int line ) { pc . addElement ( l ) ; this . line . addElement ( new Integer ( line ) ) ; }
20610	public AsyncCatchOptions usePokeball ( Pokeball pokeBall ) { this . pokeBall = pokeBall ; return this ; }
20631	@ Override public String matchPredicateOperand ( String alias ) { Objects . requireNonNull ( alias , _CHAR alias can not be _NULL _CHAR ) ; return alias + _CHAR . _CHAR + idFieldName ; }
20632	public static boolean interfaceOf ( Class < ? > objectClass , String interfaceName ) throws ClassNotFoundException { Class < ? > interfaceClass = loadClass ( interfaceName ) ; return interfaceOf ( objectClass , interfaceClass ) ; }
20640	public void java_lang_System_setOut0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable sysOut = helper . staticField ( _CHAR java . lang . System _CHAR , _CHAR out _CHAR ) ; helper . assign ( sysOut , params [ _NUM ] ) ; }
20644	public RevealBuilder withCurvedTranslation ( final PointF curveControlPoint ) { this . mCurveControlPoint = curveControlPoint ; return this . withCurvedTranslation ( ) ; }
20652	public void initialize ( MediaRouteController controller ) { setRouteSelector ( controller . buildMediaRouteSelector ( ) ) ; setDialogFactory ( new ChromeMediaRouteDialogFactory ( ) ) ; }
20659	public void saveConfig ( ) { FileHelper . saveFile ( file , json . toString ( FileHelper . INDENT ) ) ; lastModified = file . lastModified ( ) ; }
20666	public Bundler putBoolean ( String key , boolean value ) { bundle . putBoolean ( key , value ) ; return this ; }
20667	public DataQueryParams removeFilter ( String filter ) { this . filters . remove ( new BaseDimensionalObject ( filter ) ) ; return this ; }
20677	public BinaryBitmap crop ( int left , int top , int width , int height ) { LuminanceSource newSource = binarizer . getLuminanceSource ( ) . crop ( left , top , width , height ) ; return new BinaryBitmap ( binarizer . createBinarizer ( newSource ) ) ; }
20681	public void registerCategory ( SnapshotCategory category ) { categories . add ( category ) ; fireCategoryRegistered ( category ) ; }
20685	public void startIntent ( String title ) { Intent chooser = Intent . createChooser ( mIntent , title ) ; mContext . startActivity ( chooser ) ; }
20694	public ConversationFactory withFirstPrompt ( Prompt firstPrompt ) { this . firstPrompt = firstPrompt ; return this ; }
20707	@ Override public void onExceededDatabaseQuota ( String url , String databaseIdentifier , long currentQuota , long estimatedSize , long totalUsedQuota , WebStorage . QuotaUpdater quotaUpdater ) { LOG . d ( LOG_TAG , _CHAR onExceededDatabaseQuota estimatedSize : % d currentQuota : % d totalUsedQuota : % d _CHAR , estimatedSize , currentQuota , totalUsedQuota ) ; quotaUpdater . updateQuota ( MAX_QUOTA ) ; }
20740	@ Override public void redoAction ( UndoInterface undoRedoObject ) { String newValueObj = ( String ) undoRedoObject . getNewValue ( ) ; attributeChooserComboBox . setSelectedItem ( newValueObj ) ; }
20744	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
20749	@ Override protected int sizeOf ( String key , BitmapDrawable value ) { final int bitmapSize = getBitmapSize ( value ) / _NUM ; return bitmapSize == _NUM ? _NUM : bitmapSize ; }
20773	public void lockUserInput ( ) { locked = _BOOL ; commandManager . setEnableCritical ( _BOOL ) ; }
20776	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
20788	@ Override public void bindViewHolder ( @ NonNull ViewHolder viewHolder , @ NonNull String item , int position ) { Glide . with ( viewHolder . itemView . getContext ( ) ) . load ( item ) . diskCacheStrategy ( DiskCacheStrategy . NONE ) . into ( viewHolder . photo ) ; viewHolder . itemView . setOnClickListener ( _NULL ) ; }
20799	public void putInt ( String key , int value ) { checkForNullKey ( key ) ; preferences . edit ( ) . putInt ( key , value ) . apply ( ) ; }
20802	private void refreshCurrentEventTitles ( ) { title . setText ( currentPhase . getTitle ( ) ) ; timer . setText ( TimelineAlgos . getTime ( currentPhase . getStartTime ( ) ) + _CHAR - _CHAR + TimelineAlgos . getTime ( currentPhase . getEndTime ( ) ) ) ; }
20803	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
20804	private void generateGetModuleMethod ( NewBindingKey key , NewDependencyInfo dependencyInfo ) { TypeElement scope = scopeCalculator . calculate ( key ) ; generateGetModuleMethod ( scope , dependencyInfo ) ; }
20805	public void unsetPeak ( ) { peak = Integer . MIN_VALUE ; repaint ( ) ; }
20816	public static boolean isConnectedFast ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && Connectivity . isConnectionFast ( info . getType ( ) , info . getSubtype ( ) ) ) ; }
20831	public void addAll ( Schema sch ) { fields . putAll ( sch . fields ) ; if ( myFieldSet != _NULL ) myFieldSet = new TreeSet < String > ( fields . keySet ( ) ) ; }
20832	public Bundler putFloat ( String key , float value ) { bundle . putFloat ( key , value ) ; return this ; }
20864	public RabbitMqServer writeOutputTo ( OutputStream outputStream ) { this . outputStream = outputStream ; return this ; }
20869	public boolean isApplicable ( ) { ParametersDialog viewer = ( ParametersDialog ) getParent ( ) ; return viewer != _NULL ; }
20882	public RequestHandle delete ( Context context , String url , ResponseHandlerInterface responseHandler ) { final HttpDelete delete = new HttpDelete ( url ) ; return sendRequest ( httpClient , httpContext , delete , _NULL , responseHandler , context ) ; }
20891	public long put ( short key , long value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
20893	public double nextDouble ( double least , double bound ) { if ( least >= bound ) throw new IllegalArgumentException ( ) ; return nextDouble ( ) * ( bound - least ) + least ; }
20898	public TrackedEntityInstanceQueryParams addFilter ( QueryItem filter ) { this . filters . add ( filter ) ; return this ; }
20903	public int replaceAll ( String regularExpression , String replaceText , boolean selectionOnly ) { System . err . println ( _CHAR not implemented _CHAR ) ; return _NUM ; }
20908	private List < ResourceState > sortResourcesByImportance ( Set < ResourceState > resourcesStates ) { List < ResourceState > sortedResources = resourcesStates . stream ( ) . sorted ( _NULL ) . collect ( Collectors . toList ( ) ) ; return sortedResources ; }
20917	public int calculateStorageSize ( int vmfullclonesize , int vmdeltasize , int vmpersistentdisksize , int vmdisposabledisksize , int vmlogsize , int vmswapsize , int vmvideoswapsize ) { final int i = vmfullclonesize + vmdeltasize + vmpersistentdisksize + vmdisposabledisksize + vmlogsize + vmswapsize + vmvideoswapsize ; return i ; }
20919	public Builder name ( String name ) { this . name = name ; return this ; }
20922	@ Override public void onMapReady ( MapboxMap mapboxMap ) { map = mapboxMap ; map . setOnMapLongClickListener ( this ) ; }
20926	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setHasOptionsMenu ( _BOOL ) ; }
20929	public int findRow ( String name ) { for ( int row = _NUM ; row < getRowCount ( ) ; row ++ ) if ( getRowName ( row ) . equals ( name ) ) return row ; return - _NUM ; }
20933	public Builder dashArray ( String dashArray ) { this . dashArray = dashArray ; return this ; }
20942	public EmailBuilder withBody ( EmailBody body ) { this . body = body ; return this ; }
20945	@ RequestMapping ( value = _CHAR / servers / clean_cache _CHAR , method = RequestMethod . POST ) public JsonResponse cleanServerCache ( @ RequestParam ( _CHAR server _CHAR ) String server ) { serverService . cleanCache ( server ) ; return JsonResponse . ok ( _BOOL ) ; }
20971	public static double dpsForMove ( final Pokemon p , final boolean primary ) { final PokemonMove move = primary ? p . getMove1 ( ) : p . getMove2 ( ) ; return dpsForMove ( p . getPokemonId ( ) , move , primary ) ; }
20977	@ Override public void startValueScopeFor ( IdentityConstraint identityConstraint , int initialDepth ) { ValueStoreBase valueStore = fValueStoreCache . getValueStoreFor ( identityConstraint , initialDepth ) ; valueStore . startValueScope ( ) ; }
20998	public void write ( OutputStream outp ) throws IOException , jasError { class_env . setSource ( source_name ) ; class_env . write ( new DataOutputStream ( outp ) ) ; }
21008	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR TRANSLATE \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR SEARCH_NAME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR SEARCH_RESULT \ _CHAR TEXT ) ; _CHAR ) ; }
21012	public final boolean canSetDouble ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canSetDouble ( ) ) ; }
21019	void hideFooter ( ) { state = FooterState . STATE_GONE ; hideView ( ) ; }
21020	public boolean tTest ( final double mu , final StatisticalSummary sampleStats , final double alpha ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSignificanceLevel ( alpha ) ; return tTest ( mu , sampleStats ) < alpha ; }
21022	private long wakeupTime ( ) { if ( leases . isEmpty ( ) ) return Long . MAX_VALUE ; return leases . lastKey ( ) . actualRenew ; }
21037	@ Override public MapStack < K > standAloneStack ( ) { MapStack < K > standAlone = MapStack . create ( this ) ; return standAlone ; }
21040	public int drawText ( Segment segment , int x , int y , Graphics graphics , TabExpander e , Token token ) { SyntaxStyle s = getStyle ( token . type ) ; return s . drawText ( segment , x , y , graphics , e , token . start ) ; }
21042	public void enable ( ) { LOGGER . debug ( _CHAR enable listener _CHAR ) ; setEnabled ( _BOOL ) ; }
21044	private static int hashOf ( final int key ) { final int h = key ^ ( ( key >> > _NUM ) ^ ( key >> > _NUM ) ) ; return h ^ ( h >> > _NUM ) ^ ( h >> > _NUM ) ; }
21046	public void requestQueryFocus ( ) { mFindQuery . requestFocus ( ) ; showKeyboard ( ) ; }
21058	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
21071	public UnrevealBuilder withEndAction ( @ NonNull final Runnable endAction ) { this . mEndAction = endAction ; return this ; }
21094	public boolean isApplicable ( ) { if ( getViewer ( ) instanceof ViewerBase ) return ( ( ViewerBase ) getViewer ( ) ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; else return getViewer ( ) instanceof ClusterViewer && ( ( ClusterViewer ) getViewer ( ) ) . getGraphView ( ) != _NULL && ( ( ClusterViewer ) getViewer ( ) ) . getGraphView ( ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
21103	public final void writeShort ( final int i ) { baos . write ( ( byte ) ( i & _NUM ) ) ; baos . write ( ( byte ) ( ( i >> > _NUM ) & _NUM ) ) ; }
21104	public static void reload ( ) { banList = getDAO ( ) . getAllBans ( ) ; log . info ( _CHAR BannedIpController loaded _CHAR + banList . size ( ) + _CHAR IP bans . '' ) ; }
21105	public void addImportDecl ( ImportDecl node ) { List < ImportDecl > list = ( parent == _NULL || state == _NULL ) ? getImportDeclListNoTransform ( ) : getImportDeclList ( ) ; list . addChild ( node ) ; }
21113	public void waitForAnimationFinish ( final WebElement element , int timeout ) { final Deque < Point > locations = new ArrayDeque < > ( ) ; isConditionMet ( _NULL , timeout ) ; }
21120	public < T > void bindTwoWay ( @ NotNull SettableValue < T > first , @ NotNull SettableValue < T > second ) { releaseTwoWay ( first , second ) ; myTwoWayBindings . add ( new TwoWayBinding < > ( first , second ) ) ; }
21124	private void observeChangingBooks ( ) { Observable < Book > observable = bookRepository . observeChangingBooks ( ) . observeOn ( AndroidSchedulers . mainThread ( ) ) ; subscribe ( observable , _NULL , _NULL , _NULL ) ; }
21135	public int send ( OutputStream out ) throws IOException { out . write ( this . fileBuff , this . offset , this . length ) ; return _NUM ; }
21136	protected boolean enabledForChrome ( Context context ) { if ( mAndroidPermission . isEmpty ( ) ) return _BOOL ; return permissionOnInAndroid ( mAndroidPermission , context ) ; }
21141	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
21152	public boolean hasMoreElements ( ) { if ( curindex < length ) return _BOOL ; return _BOOL ; }
21163	public static void main ( String [ ] args ) { StopBodyAfterCollision simulation = new StopBodyAfterCollision ( ) ; simulation . run ( ) ; }
21164	public RevealBuilder withChildsAnimation ( ) { this . mChildsAnimation = mViewToReveal instanceof ViewGroup ; return this ; }
21191	protected void removeAt ( int index ) { _values [ index ] = _NULL ; super . removeAt ( index ) ; }
21192	public synchronized BookKeeperClientBuilder ledgersPath ( String ledgersPath ) { this . ledgersPath = ledgersPath ; return this ; }
21198	private static boolean haveChecked ( String category , String name , boolean createWithProject ) { String key = getCheckKey ( category , name , createWithProject ) ; return ourTemplatesChecked . contains ( key ) ; }
21200	public Builder stroke ( Boolean stroke ) { this . stroke = stroke ; return this ; }
21201	@ NotNull private ImageOverlayBuilder outlineOCRRegion ( @ NotNull OCRResult . Region region ) { region . lines . forEach ( _NULL ) ; return this ; }
21212	public boolean has ( String name ) { if ( name == _NULL ) return _BOOL ; return data . containsKey ( name ) ; }
21218	public void sendRequest ( String url , final IRequestCallback uiUpdater ) { Request request = new Request . Builder ( ) . url ( url ) . build ( ) ; sendRequest ( request , uiUpdater ) ; }
21220	public SumReducer ignoreExceptions ( ) { this . ignoreExceptions = _BOOL ; return this ; }
21235	public boolean isUserInRole ( List < String > allowedUserRoles , ContainerRequestContext containerRequestContext ) { SecurityContext securityContext = containerRequestContext . getSecurityContext ( ) ; return allowedUserRoles . stream ( ) . anyMatch ( _NULL ) ; }
21236	public void onDrawerOpened ( View drawerView ) { super . onDrawerOpened ( drawerView ) ; activity . invalidateOptionsMenu ( ) ; }
21239	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
21252	public AsyncCatchOptions withProbability ( double probability ) { this . probability = probability ; return this ; }
21258	public static int dpToPx ( float dp , Resources resources ) { float px = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dp , resources . getDisplayMetrics ( ) ) ; return ( int ) px ; }
21271	public static EnhancedBookmarkPage buildPage ( Activity activity , Tab tab ) { if ( DeviceFormFactor . isTablet ( activity ) ) return new EnhancedBookmarkPage ( activity , tab ) ; else return _NULL ; }
21278	private String detectScriptUrlPerDHCP ( ) { Logger . log ( getClass ( ) , LogLevel . DEBUG , _CHAR Searching per DHCP not supported yet . '' ) ; return _NULL ; }
21281	public Builder certificateInfo ( CertificateInfo certificateInfo ) { this . certificateInfo = certificateInfo ; return this ; }
21284	@ Override public int readByte ( ) { bytesRead ++ ; return ( ( int ) arr [ pos ++ ] ) & _NUM ; }
21287	public static void loadPropsFromFile ( String filename , FileSystem fs ) throws IOException { Path p = new Path ( filename ) ; loadPropsFromFile ( p , fs ) ; }
21295	public Builder useExpiredDataWhenNoLoaderAvailable ( ) { this . useExpiredDataIfLoaderNotAvailable = _BOOL ; return this ; }
21302	public static boolean isHour ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return isIntegerInRange ( s , _NUM , _NUM ) ; }
21315	public void clear ( ) { read = write = count = _NUM ; Arrays . fill ( buffer , _NULL ) ; }
21322	public static void disable ( String event ) { instance . disabled . add ( event ) ; log ( event + _CHAR disabled _CHAR ) ; }
21324	public GUIHandler registerContainer ( String id , Function < GUIContext , Container > creator ) { containers . put ( id , creator ) ; return this ; }
21346	public Bundler putCharSequence ( String key , CharSequence value ) { bundle . putCharSequence ( key , value ) ; return this ; }
21347	public void clear ( ) { numElements = _NUM ; startIndex = _NUM ; }
21350	@ TargetApi ( Build . VERSION_CODES . LOLLIPOP ) public Scoop bindStatusBar ( Activity activity , int toppingId , @ Nullable Interpolator interpolator ) { IBinding binding = new StatusBarBinding ( toppingId , activity , interpolator ) ; return bind ( activity , toppingId , binding ) ; }
21356	public boolean isSubsetOf ( PointsToBitVector other ) { BitVector andResult = BitVector . and ( this , other ) ; return andResult . equals ( this ) ; }
21361	@ Override public void stop ( BundleContext bc ) throws Exception { context = _NULL ; logger . debug ( _CHAR ZWave binding stopped . '' ) ; }
21367	public Builder minWidth ( Number minWidth ) { this . minWidth = minWidth ; return this ; }
21401	public void putGrammar ( SchemaGrammar grammar ) { if ( grammar . getTargetNamespace ( ) == _NULL ) fNoNSGrammar = grammar ; else fGrammarRegistry . put ( grammar . getTargetNamespace ( ) , grammar ) ; }
21411	public static boolean isUrl ( String url ) { Pattern pattern = Pattern . compile ( _CHAR ^ ( [ hH ] [ tT ] { _NUM } [ pP ] : //| [ hH ] [ tT ] { 2 } [ pP ] [ sS ] : // ) ( ( [ A - Za - z0 - 9 -~ ] + ) . ) + ( [ A - Za - z0 - 9 -~\\/ ] ) + $ '' ) ; return pattern . matcher ( url ) . matches ( ) ; }
21425	public void sortPickingQueue ( ) { sort ( pitems , pscores , psize ) ; psorted = _BOOL ; }
21430	public TapTarget cancelable ( boolean status ) { this . cancelable = status ; return this ; }
21432	private void waitForSearchToEnd ( ) { By loaderLocator = By . xpath ( _CHAR .// div [ @ class =' loading - indicator ' and text ( ) =' Loading content ... ' ] '' ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( CommonExpectedConditions . scopedElementLocatedByNotPresent ( resultsPanel , loaderLocator ) ) ; }
21436	public static void restartBridge ( boolean debug ) { WXEnvironment . sDebugMode = debug ; WXSDKManager . getInstance ( ) . restartBridge ( ) ; }
21444	public void addTypeBound ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeBoundListNoTransform ( ) : getTypeBoundList ( ) ; list . addChild ( node ) ; }
21451	public JsonArray add ( long value ) { values . add ( Json . value ( value ) ) ; return this ; }
21460	private static ExternalSystem resetOAuthFields ( ExternalSystem input ) { input . setAccessKey ( _NULL ) ; return input ; }
21466	private void reportDisplaySelection ( @ Nullable GSAContextDisplaySelection displaySelection ) { Tab currentTab = mActivity . getActivityTab ( ) ; reportUsageOfCurrentContextIfPossible ( currentTab , _BOOL , displaySelection ) ; }
21476	@ BeforeClass public void retrieveOAuthToken ( ) { RestAssured . baseURI = _CHAR http : // localhost : 9876 '' ; given ( ) . when ( ) . then ( ) ; }
21478	public void clear ( ) { m_trie = new Trie ( m_trie . isCaseSensitive ( ) ) ; super . clear ( ) ; }
21488	public Bundler putString ( String key , String value ) { bundle . putString ( key , value ) ; return this ; }
21490	public void clear ( ) { this . root = _NULL ; this . size = _NUM ; }
21500	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator [ - summary = summary . txt ] [ - modelDir = models / ] _CHAR + _CHAR [ - nMin = # ] [ - nMax = # ] [ - dist = # ] _CHAR + _CHAR [ - s ] [ - docClass = ... ] [ - compClass = ... ] [ - merge ] _CHAR ) ; System . err . println ( _CHAR nMin = # \ tMin n - gram size .\ nnMax = # \ tMax n - gram size .\ n _CHAR + _CHAR dist = # \ tN - gram window .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - docClass = ... \ tA java class identifier to use as Document class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramDocument \ n _CHAR + _CHAR - compClass = ... \ tA java class identifier to use as Comparator class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramCachedGraphComparator \ n _CHAR + _CHAR - merge \ tIf indicated then the model files _CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR ) ; }
21502	public boolean hasAttribute ( String name ) { if ( this . attributes == _NULL ) return _BOOL ; return this . attributes . containsKey ( name ) ; }
21505	public Bundler putIntegerArrayList ( String key , ArrayList < Integer > value ) { bundle . putIntegerArrayList ( key , value ) ; return this ; }
21511	public Dependencies resolve ( SootClass sc ) { if ( Options . v ( ) . verbose ( ) ) G . v ( ) . out . println ( _CHAR resolving _CHAR + className + _CHAR from file _CHAR + path . getPath ( ) ) ; return DexResolver . v ( ) . resolveFromFile ( path , className , sc ) ; }
21518	private void removeSpotlightView ( ) { if ( listener != _NULL ) listener . onUserClicked ( usageId ) ; if ( getParent ( ) != _NULL ) ( ( ViewGroup ) getParent ( ) ) . removeView ( this ) ; }
21521	public void tabTitleChanged ( int tabId , String title ) { StripLayoutTab tab = findTabById ( tabId ) ; if ( tab != _NULL ) tab . setAccessibilityDescription ( title ) ; }
21535	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
21539	public T [ ] computeDerivatives ( final T t , final T [ ] y ) throws MathIllegalArgumentException , MathIllegalStateException , NullPointerException { evaluations . increment ( ) ; return equations . computeDerivatives ( t , y ) ; }
21545	public JSONArray put ( int value ) { put ( new Integer ( value ) ) ; return this ; }
21555	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
21557	@ Override protected void monitor ( ) throws Exception { checkAvailability ( ) ; if ( serviceMonitor == _NULL ) serviceMonitor = new GSPingManager ( ) ; }
21564	public boolean isDouble ( String key ) { Object val = get ( key ) ; return val instanceof Double ; }
21565	@ Override public void revertToDefaultValue ( ) { Date currentDate = new Date ( ) ; populateField ( currentDate ) ; }
21568	public void writeToStream ( OutputStream out ) throws IOException { BencodeWriter writer = new BencodeWriter ( out ) ; writer . write ( this ) ; }
21594	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - nMin = # ] [ - nMax = # ] [ - dist = # ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] [ - docClass = ... ] [ - compClass = ... ] _CHAR ) ; System . err . println ( _CHAR nMin = # \ tMin n - gram size .\ nnMax = # \ tMax n - gram size .\ n _CHAR + _CHAR dist = # \ tN - gram window .\ n _CHAR + _CHAR - o = outFile \ tThe file to output data . Default is stdout .\ n _CHAR + _CHAR - t = # \ tNumber of threads . Defaults to number of available processors declared by system .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR - docClass = ... \ tA java class identifier to use as Document class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramDocument \ n _CHAR + _CHAR - compClass = ... \ tA java class identifier to use as Comparator class . _CHAR + _CHAR Defaults to jinsect . documentModel . StandardDocumentComparator \ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
21596	public StatelessHibernateSpaceSynchronizationEndpointConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
21612	private void parseFile ( String filename , Handler < AsyncResult < Void >> handler ) { OpenOptions options = new OpenOptions ( ) . setRead ( _BOOL ) . setWrite ( _BOOL ) ; vertx . fileSystem ( ) . open ( filename , options , _NULL ) ; }
21632	public static boolean toBoolean ( String indicator , boolean defaultVal ) { Boolean result = toBoolean ( indicator ) ; return result != _NULL ? result : defaultVal ; }
21635	@ Override public void redoAction ( UndoInterface undoRedoObject ) { PrefData prefData = ( PrefData ) undoRedoObject . getNewValue ( ) ; setPrefData ( prefData ) ; }
21650	public boolean isApplicable ( ) { final LabelsJList list = ( ( ChartViewer ) getViewer ( ) ) . getActiveLabelsJList ( ) ; return list != _NULL && list . getDisabledLabels ( ) . size ( ) > _NUM ; }
21667	public void incrementSendCount ( ) { sendCount ++ ; lastSent = Calendar . getInstance ( ) . getTime ( ) ; }
21685	@ Override public String toString ( ) { String delegate = fileFilter != _NULL ? fileFilter . toString ( ) : filenameFilter . toString ( ) ; return super . toString ( ) + _CHAR ( _CHAR + delegate + _CHAR ) _CHAR ; }
21699	public void tabPageLoadFinished ( int id ) { StripLayoutTab tab = findTabById ( id ) ; if ( tab != _NULL ) tab . pageLoadingFinished ( ) ; }
21705	public CustomCachePolicy evictionStrategy ( SpaceEvictionStrategy evictionStrategy ) { setEvictionStrategy ( evictionStrategy ) ; return this ; }
21721	public void clear ( ) { mIntentToken = _NULL ; mUri = _NULL ; }
21725	public void saveSelectedFeatures ( PrintWriter toSopFile ) { for ( int j = _NUM ; j < coeffs . length ; j ++ ) toSopFile . print ( coeffs [ j ] + _CHAR _CHAR + factors [ j ] + _CHAR _CHAR ) ; toSopFile . println ( ) ; }
21726	public Builder unloadInvisibleTiles ( Boolean unloadInvisibleTiles ) { this . unloadInvisibleTiles = unloadInvisibleTiles ; return this ; }
21728	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
21747	public boolean isApplicable ( ) { TaxonomicProfileDialog viewer = ( TaxonomicProfileDialog ) getParent ( ) ; return viewer != _NULL ; }
21750	private void requestInputMethod ( Dialog dialog ) { Window window = dialog . getWindow ( ) ; window . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_STATE_ALWAYS_VISIBLE ) ; }
21756	public Bundler putChar ( String key , char value ) { bundle . putChar ( key , value ) ; return this ; }
21762	int onDeleteAll ( String tableName , String ... conditions ) { BaseUtility . checkConditionsCorrect ( conditions ) ; return mDatabase . delete ( tableName , getWhereClause ( conditions ) , getWhereArgs ( conditions ) ) ; }
21767	public static float spToPx ( float sp ) { float scaledDensity = Resources . getSystem ( ) . getDisplayMetrics ( ) . scaledDensity ; return Math . round ( sp * scaledDensity ) ; }
21799	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
21806	public V putIfAbsentElseGet ( K key , V value ) { V oldVal = this . putIfAbsent ( key , value ) ; return oldVal == _NULL ? value : oldVal ; }
21810	public Builder fillRule ( String fillRule ) { this . fillRule = fillRule ; return this ; }
21817	public static void shutdown ( ) { LRMIRuntime . getRuntime ( ) . shutdown ( ) ; ClassLoaderCache . getCache ( ) . shutdown ( ) ; }
21845	public Builder convertFromSequence ( ) { actionList . add ( new DataAction ( new ConvertFromSequence ( ) ) ) ; return this ; }
21849	private static void killRunningApplication ( ) throws IOException { String [ ] cmd = { _CHAR / bin / sh _CHAR , _CHAR - c _CHAR , _CHAR kill - _NUM $ ( cat application . pid ) _CHAR } ; Process p = Runtime . getRuntime ( ) . exec ( cmd ) ; }
21852	public DocumentQuery addSort ( Sort sort ) { this . sorts . add ( Objects . requireNonNull ( sort , _CHAR Sort is required _CHAR ) ) ; return this ; }
21874	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
21882	private void unscheduleInvalidTapNotification ( ) { mRunnableHandler . removeCallbacks ( mHandleInvalidTapRunnable ) ; mIsWaitingForInvalidTapDetection = _BOOL ; }
21899	private void updateLimitedRanks ( ) { updateAllRanksForRace ( Race . ASMODIANS , AbyssRankEnum . GRADE9_SOLDIER . getRequiredAp ( ) , RankingConfig . TOP_RANKING_MAX_OFFLINE_DAYS ) ; updateAllRanksForRace ( Race . ELYOS , AbyssRankEnum . GRADE9_SOLDIER . getRequiredAp ( ) , RankingConfig . TOP_RANKING_MAX_OFFLINE_DAYS ) ; }
21900	public void push ( int value ) { ensureCapacity ( fDepth + _NUM ) ; fData [ fDepth ++ ] = value ; }
21920	public void selectDetailsView ( DetailsView detailsView ) { DisplayArea displayArea = getDisplayArea ( detailsView . getTab ( ) ) ; if ( displayArea != _NULL ) displayArea . setSelectedTab ( detailsView . getTab ( ) ) ; }
21928	protected void removeAt ( int index ) { _states [ index ] = REMOVED ; super . removeAt ( index ) ; }
21933	public static S2Cap fromAxisAngle ( S2Point axis , S1Angle angle ) { double d = Math . sin ( _NUM . _NUM * angle . radians ( ) ) ; return new S2Cap ( axis , _NUM * d * d ) ; }
21938	public String removeUser ( String user ) { ResponseEntity < String > response = restTemplate . exchange ( url + RMAControllerMappings . REMOVE_USER_MAPPING + _CHAR userName = _CHAR + user , HttpMethod . GET , request , String . class ) ; return response . getBody ( ) ; }
21955	public void toString ( StringBuffer sb ) { getTypeAccess ( ) . toString ( sb ) ; sb . append ( _CHAR < > _CHAR ) ; }
21960	public FormField withHint ( String hint ) { this . mFieldInput . setHint ( hint ) ; return this ; }
21962	public void clearMemoryCache ( ) { checkConfiguration ( ) ; configuration . memoryCache . clear ( ) ; }
21970	protected void buildMetricMakers ( MetricDictionary metricDictionary ) { countMaker = new CountMaker ( metricDictionary ) ; doubleSumMaker = new DoubleSumMaker ( metricDictionary ) ; }
21971	@ VisibleForTesting public Optional < Zone > findMatchingZone ( String recordName ) { val matchingZone = fetchMatchingZones ( recordName ) . stream ( ) . reduce ( ( _NULL ) ) ; return matchingZone ; }
21972	public static < T extends Component > void waitUntilGone ( @ NotNull Robot robot , @ NotNull Container root , @ NotNull GenericTypeMatcher < T > matcher ) { String typeName = matcher . supportedType ( ) . getSimpleName ( ) ; Wait . minutes ( _NUM ) . expecting ( _CHAR absence of matching _CHAR + typeName ) . until ( _NULL ) ; }
21980	public void revertSelf ( ) { y = y . negate ( ) ; pole = pole . negate ( ) ; }
21984	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
21989	public EmailBuilder withAttachment ( EmailAttachment attachment ) { this . attachments . add ( attachment ) ; return this ; }
21991	public void stopBroker ( ) throws Exception { broker . stop ( ) ; broker . waitUntilStopped ( ) ; }
21992	@ Override public void endParameterEntity ( String name , Augmentations augs ) throws XNIException { fPEDepth -- ; fReadingExternalDTD = fPEntityStack [ fPEDepth ] ; }
21998	public String quotedNameOf ( String s ) { if ( reservedNames . contains ( s ) ) return _CHAR \ _CHAR_CHAR_CHAR _CHAR ; else return s ; }
22029	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR CUSTOMER \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR NAME \ _CHAR TEXT NOT NULL ) ; _CHAR ) ; }
22032	private void initNavHelper ( Context context ) { this . mContext = context ; this . mNavBean = new NavigatorBean ( ) ; }
22037	private static void read ( GigaSpace space , Phrase template ) { Phrase [ ] results = space . readMultiple ( template ) ; System . out . println ( _CHAR read - _CHAR + Arrays . toString ( results ) ) ; }
22043	private boolean journalRebuildRequired ( ) { final int REDUNDANT_OP_COMPACT_THRESHOLD = _NUM ; return redundantOpCount >= REDUNDANT_OP_COMPACT_THRESHOLD && redundantOpCount >= lruEntries . size ( ) ; }
22047	public static void assertEquals ( Complex expected , Complex actual , double delta ) { Assert . assertEquals ( expected . getReal ( ) , actual . getReal ( ) , delta ) ; Assert . assertEquals ( expected . getImaginary ( ) , actual . getImaginary ( ) , delta ) ; }
22063	public void requestRequestNetworkUpdate ( ) { enqueue ( new RequestNetworkUpdateMessageClass ( ) . doRequest ( ) ) ; logger . debug ( _CHAR ZWave controller request network update _CHAR ) ; }
22076	public static boolean expressionIsTrue ( double leftSide , Operator operator , double rightSide ) { final String expression = leftSide + operator . getMathematicalOperator ( ) + rightSide ; return expressionIsTrue ( expression ) ; }
22078	public static Optional < String > findPhysicalName ( Dimension value , JsonGenerator gen ) { String apiName = value . getApiName ( ) ; return mapNearestDruidQuery ( gen , _NULL ) ; }
22083	public void remove ( Vertex v ) throws Exception { if ( hVertexTypes . containsKey ( v ) ) hVertexTypes . remove ( v ) ; super . remove ( v ) ; }
22086	public boolean queryMarkerVisible ( int markerUID ) { if ( ! initedNative ) return _BOOL ; return NativeInterface . arwQueryMarkerVisibility ( markerUID ) ; }
22099	@ Override public boolean shouldVisit ( WebURL url ) { String href = url . getURL ( ) . toLowerCase ( ) ; return ! FILTERS . matcher ( href ) . matches ( ) && href . startsWith ( _CHAR http : // www . vottakskidka . ru '' ) ; }
22102	public CreateSiteWindow typeTitle ( String title ) { textField . setValue ( title ) ; return this ; }
22103	public AemBubbleMessage waitForAemBubbleMessage ( ) { bobcatWait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . presenceOfElementLocated ( BUBBLE_MSG_BY_SELECTOR ) ) ; return this ; }
22117	public JSONArray put ( int index , int value ) throws JSONException { put ( index , new Integer ( value ) ) ; return this ; }
22125	private void showCreateEditDialog ( @ Nullable Task task ) { EditTaskDialogFragment fragment = EditTaskDialogFragment . newInstance ( task ) ; fragment . show ( getSupportFragmentManager ( ) , EditTaskDialogFragment . TAG ) ; }
22151	public Vector3D intersection ( final Line line ) { final Vector3D closest = closestPoint ( line ) ; return line . contains ( closest ) ? closest : _NULL ; }
22181	public int length ( ) { if ( tokens != _NULL ) return tokens . length ; else return _NUM ; }
22185	public void saveViewsFor ( DataSource dataSource , Snapshot snapshot ) { Set < DataSourceViewProvider > compatibleProviders = getCompatibleProviders ( dataSource ) ; for ( DataSourceViewProvider compatibleProvider : compatibleProviders ) if ( compatibleProvider . supportsViewFor ( dataSource ) && compatibleProvider . supportsSaveViewFor ( dataSource , snapshot . getClass ( ) ) ) compatibleProvider . viewSaveView ( dataSource , snapshot ) ; }
22186	public void onPause ( ) { mOnResumePending = _BOOL ; if ( mInitializationComplete ) mActivityDelegate . onPauseWithNative ( ) ; }
22199	public static < T > List < T > stringToList ( String val , Class < T > type ) { String [ ] tokens = trim ( val ) . split ( _CHAR , _CHAR ) ; return Arrays . stream ( tokens ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; }
22204	private void updateButtonState ( boolean dataChanged ) { btnApply . setEnabled ( dataChanged ) ; btnRevert . setEnabled ( dataChanged ) ; }
22205	public void clearPayment ( String id ) { CartPaymentInfo inf = this . getPaymentInfo ( id ) ; paymentInfo . remove ( inf ) ; }
22214	public Message fromJson ( TransportMessage message ) { if ( message == _NULL ) throw new IllegalArgumentException ( _CHAR Message can not be _NULL _CHAR ) ; return gson . fromJson ( message . getContent ( ) , Message . class ) ; }
22229	public ContextVarNode makeContextVarNode ( Object baseValue , Type baseType , Context context , SootMethod method ) { LocalVarNode base = makeLocalVarNode ( baseValue , baseType , method ) ; return makeContextVarNode ( base , context ) ; }
22231	private void sleep ( ) { state = STATE . SLEEPING ; this . nextActTime += ( SLEEP_TIME_MS + ( int ) ( SLEEP_FUZZ * rnd . nextDouble ( ) ) ) * MockTimeSource . NANOSECONDS_IN_MILLISECOND ; }
22234	public void removeCartItem ( ShoppingCartItem item , boolean triggerExternalOps , LocalDispatcher dispatcher ) throws CartItemModifyException { if ( item == _NULL ) return ; this . removeCartItem ( this . getItemIndex ( item ) , triggerExternalOps , dispatcher ) ; }
22236	public static void startMe ( Context _context ) { Intent intent = new Intent ( _context , LaunchScreen . class ) ; _context . startActivity ( intent ) ; }
22256	@ Override protected void readImpl ( ) { targetObjectId = readD ( ) ; type = readC ( ) ; }
22260	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
22276	public void scroll ( int itemsToScroll , int time ) { int distance = itemsToScroll * getItemHeight ( ) - scrollingOffset ; scroller . scroll ( distance , time ) ; }
22288	@ TargetApi ( _NUM ) public Bundler putCharSequenceArrayList ( String key , ArrayList < CharSequence > value ) { bundle . putCharSequenceArrayList ( key , value ) ; return this ; }
22289	public synchronized void begin ( E selectedObject ) { this . active = _BOOL ; this . selectedObject = selectedObject ; }
22297	public Bundler putParcelableArrayList ( String key , ArrayList < ? extends Parcelable > value ) { bundle . putParcelableArrayList ( key , value ) ; return this ; }
22320	public static void clearCommKey ( AirMapFlight flight , final AirMapCallback < Void > listener ) { String url = String . format ( flightEndCommUrl , flight . getFlightId ( ) ) ; AirMap . getClient ( ) . post ( url , new VoidCallback ( listener ) ) ; }
22326	public Builder requestTimeoutMs ( long requestTimeoutMs ) { this . _requestTimeoutMs = requestTimeoutMs ; return this ; }
22328	public static void dropTable ( Database db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR BANGUMI_CALENDAR \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
22334	public Builder weight ( Number weight ) { this . weight = weight ; return this ; }
22336	private static boolean isCertificateRequest ( Service service ) { val annotations = service . getMetadata ( ) . getAnnotations ( ) ; return ( annotations != _NULL && annotations . containsKey ( REQUEST_ANNOTATION ) ) ; }
22341	public Builder imperial ( Boolean imperial ) { this . imperial = imperial ; return this ; }
22342	public Builder zoomControl ( Boolean zoomControl ) { this . zoomControl = zoomControl ; return this ; }
22343	public void build ( ) throws XmlParsingException , FileNotFoundException { strategy . parse ( cplFile ) ; strategy . build ( ) ; }
22348	public void put ( int ii , Z val ) { re [ ii - bx ] = val . re ; im [ ii - bx ] = val . im ; }
22366	public static void main ( final String [ ] args ) { System . out . println ( _CHAR i : int = _CHAR + convertString ( _NUM ) ) ; System . out . println ( _CHAR f : float = _CHAR + convertString ( _NUM ) ) ; }
22373	public boolean validate ( ) throws IOException , XmlParsingException { executeValidationCommand ( ) ; return analyzeResult ( ) ; }
22382	public void insertASObject ( ASObject asobject ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
22383	protected DerivativeStructure computeObjectiveValueAndDerivative ( double point ) throws MathIllegalStateException { incrementEvaluationCount ( ) ; return function . value ( new DerivativeStructure ( _NUM , _NUM , _NUM , point ) ) ; }
22397	public static long availableMemory ( ) { Runtime rt = Runtime . getRuntime ( ) ; return rt . maxMemory ( ) - rt . totalMemory ( ) + rt . freeMemory ( ) ; }
22405	public boolean has ( Access a ) { List < String > list = getAccesses ( ) ; return list == _NULL ? _BOOL : list . contains ( a . getName ( ) ) ; }
22421	public Future < String > classify ( String snippet ) { final ExecutorService service = Executors . newSingleThreadExecutor ( ) ; return service . submit ( new ClassifyingTask ( snippet ) ) ; }
22422	public void runSimulator ( long timestep ) { accumulate ( ) ; integrator . integrate ( this , timestep ) ; }
22423	public static String formatPercentage ( BigDecimal percentage ) { if ( percentage == _NULL ) return _CHAR _CHAR ; return percentageDecimalFormat . format ( percentage ) ; }
22443	public static boolean instanceOf ( Class < ? > objectClass , Object typeObject ) { Class < ? > typeClass = typeObject . getClass ( ) ; return instanceOf ( objectClass , typeClass ) ; }
22448	public static double exp ( double lambda ) { if ( ! ( lambda > _NUM . _NUM ) ) throw new IllegalArgumentException ( _CHAR Rate lambda must be positive _CHAR ) ; return - Math . log ( _NUM - uniform ( ) ) / lambda ; }
22455	protected void addLanguageVariables ( BundleContext context ) { Language defaultLanguage = APILocator . getLanguageAPI ( ) . getLanguage ( _CHAR en _CHAR , _CHAR US _CHAR ) ; addLanguageVariables ( context , defaultLanguage ) ; }
22464	protected void writeEntityToNBT ( NBTTagCompound compound ) { compound . setShort ( _CHAR Fuse _CHAR , ( short ) this . getFuse ( ) ) ; compound . setByte ( _CHAR Facing _CHAR , ( byte ) this . getFacing ( ) . getIndex ( ) ) ; }
22468	public void putImplementationCommandTagChanger ( final long equipmentId , final ICommandTagChanger commandTagChanger ) { if ( commandTagChanger == _NULL ) commandTagChangers . remove ( equipmentId ) ; else commandTagChangers . put ( equipmentId , commandTagChanger ) ; }
22469	public long timeSinceStart ( ) { long currentTime = System . currentTimeMillis ( ) ; return currentTime - startTime ; }
22483	public void reset ( ) { Iterator iIter = Arrays . asList ( getAvailableCategories ( ) ) . iterator ( ) ; while ( iIter . hasNext ( ) ) Repository . deleteObject ( ( String ) iIter . next ( ) , INSECTDB . CATEGORY_TYPE ) ; }
22487	public static String appendTail ( Matcher matcher , StringBuffer sb ) { matcher . appendTail ( sb ) ; return sb . toString ( ) ; }
22493	public boolean isInt ( String key ) { Object val = get ( key ) ; return val instanceof Integer ; }
22494	public Activity currentActivity ( ) { Activity activity = activityStack . lastElement ( ) ; return activity ; }
22510	public void addService ( AXmlNode node ) { if ( services . isEmpty ( ) ) services = new ArrayList < AXmlNode > ( ) ; services . add ( node ) ; }
22511	@ Override public synchronized void reset ( ) throws IOException { in . reset ( ) ; pos = mark ; }
22518	public static long createBookmarksFolderOnce ( Context context , String title , long parentId ) { Long id = chromeBrowserProviderCall ( Long . class , ChromeBrowserProvider . CLIENT_API_CREATE_BOOKMARKS_FOLDER_ONCE , context , argsToBundle ( title , parentId ) ) ; return id != _NULL ? id . longValue ( ) : INVALID_BOOKMARK_ID ; }
22532	public final boolean canGetFloat ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canGetFloat ( ) ) ; }
22543	public static void registerEntity ( Class < ? extends Entity > entityClass , String entityName , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) { EntityRegistry . registerModEntity ( entityClass , entityName , availableEntityId , BWMod . instance , trackingRange , updateFrequency , sendsVelocityUpdates ) ; availableEntityId ++ ; }
22547	public static void print ( boolean x ) { out . print ( x ) ; out . flush ( ) ; }
22548	public void clear ( ) { _objMap . clear ( ) ; _objIdMap . clear ( ) ; }
22551	public void reset ( ) { count = _NUM ; totalTime = _NUM ; }
22586	public void user_init ( ) throws java . lang . Exception { action_obj . scanner = scanner ; action_obj . classFile = classFile ; }
22588	private void mark ( ) { theLastColumn = theCurrentColumn ; theLastLine = theCurrentLine ; }
22592	private < T > Iterator < T > touch ( Iterator < T > iter ) { iter . hasNext ( ) ; return iter ; }
22598	public GsonBuilder registerTypeAdapterFactory ( TypeAdapterFactory factory ) { factories . add ( factory ) ; return this ; }
22604	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_login ) ; }
22605	public void delete ( ) throws IOException { close ( ) ; deleteContents ( directory ) ; }
22622	private float sweep ( float tan1X , float tan1Y , float tan2X , float tan2Y ) { final float minorSweep = ( float ) Math . toDegrees ( _NUM * ( Math . asin ( . _NUM * Geometry . distance ( tan1X , tan1Y , tan2X , tan2Y ) / mScaledTouchSlop ) ) ) ; return _NUM - minorSweep ; }
22628	@ ManagedOperation ( description = _CHAR Start this JMS container . '' ) public void startContainer ( String processName ) { LOGGER . info ( _CHAR Starting JMS container for Process '' + processName ) ; jmsContainers . get ( processCache . getProcessId ( processName ) ) . start ( ) ; }
22637	@ Override public void accept ( TestValueVisitor visitor , FieldIdEnum fieldId ) { Expression attributeExpression = ff . property ( this . attribute ) ; visitor . setTestValue ( fieldId , attributeExpression ) ; }
22648	public void updateTimestamp ( long timestamp ) { mTimestamps [ mBufferIn ] = timestamp ; setLong ( mBuffers [ mBufferIn ] , ( timestamp / _NUM ) * ( mClock / _NUM ) / _NUM , _NUM , _NUM ) ; }
22656	public static int abs ( final int x ) { final int i = x >> > _NUM ; return ( x ^ ( ~ i + _NUM ) ) + i ; }
22661	public static double pareto ( double alpha ) { if ( ! ( alpha > _NUM . _NUM ) ) throw new IllegalArgumentException ( _CHAR Shape parameter alpha must be positive _CHAR ) ; return Math . pow ( _NUM - uniform ( ) , - _NUM . _NUM / alpha ) - _NUM . _NUM ; }
22662	public ResourceLoader addIncludePackages ( String ... packages ) { Collections . addAll ( includeResourcePackages , packages ) ; return this ; }
22665	protected String createAgentID ( int iLen ) { String sTemp = String . valueOf ( new Date ( ) . getTime ( ) ) ; return sTemp . substring ( sTemp . length ( ) - iLen ) ; }
22666	public boolean isJavaLibraryMethod ( ) { SootClass cl = getDeclaringClass ( ) ; return cl . isJavaLibraryClass ( ) ; }
22670	@ Override public ListenableFuture < MemberUpdateResponse > updateMember ( long memberID , List < String > endpoints ) { MemberUpdateRequest memberUpdateRequest = MemberUpdateRequest . newBuilder ( ) . addAllPeerURLs ( endpoints ) . setID ( memberID ) . build ( ) ; return clusterStub . memberUpdate ( memberUpdateRequest ) ; }
22709	private void clickByText ( String text ) throws UiObjectNotFoundException { UiObject obj = new UiObject ( new UiSelector ( ) . text ( text ) ) ; obj . clickAndWaitForNewWindow ( ) ; }
22715	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
22718	public AemContentFinder clickMosaicView ( ) { getCurrentTab ( ) . clickMosaicView ( ) ; return this ; }
22719	private void joinRoom ( final Invitation invitation ) { controller = createController ( ) ; Games . RealTimeMultiplayer . join ( client , RoomConfig . builder ( controller ) . setRoomStatusUpdateListener ( controller ) . setMessageReceivedListener ( controller ) . setVariant ( invitation . getVariant ( ) ) . setInvitationIdToAccept ( invitation . getInvitationId ( ) ) . build ( ) ) ; }
22726	public void endAction ( MotionEvent me ) { OnChartGestureListener l = mChart . getOnChartGestureListener ( ) ; if ( l != _NULL ) l . onChartGestureEnd ( me , mLastGesture ) ; }
22729	public static void timedRecord ( String filename , long millis , AudioFormat audioFormat ) { File outputFile = new File ( filename ) ; timedRecord ( outputFile , millis , audioFormat ) ; }
22732	public JSONObject put ( String key , double value ) throws JSONException { this . put ( key , new Double ( value ) ) ; return this ; }
22738	void restoreRotationState ( @ NonNull ContentResolver contentResolver ) { Settings . System . putInt ( contentResolver , Settings . System . ACCELEROMETER_ROTATION , originalAccelerometer ) ; Settings . System . putInt ( contentResolver , Settings . System . USER_ROTATION , originalUserRotation ) ; }
22741	public static void apply ( ) { applyOpenSSLFix ( ) ; installLinuxPRNGSecureRandom ( ) ; }
22759	public ProviderBuilder < T > expirable ( boolean expirable ) { this . expirable = expirable ; return this ; }
22763	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
22766	public boolean isApplicable ( ) { AttributesWindow viewer = ( AttributesWindow ) getViewer ( ) ; return viewer != _NULL ; }
22772	private void createUI ( ) { readConfigFileNoScrollPane ( _NULL , this , _CHAR symboltype / ExternalGraphicSymbol . xml _CHAR ) ; registerForTextFieldButton ( FieldIdEnum . EXTERNAL_GRAPHIC , this ) ; }
22779	@ Override public synchronized void write ( byte [ ] b , int off , int len ) throws IOException { super . write ( b , off , len ) ; this . branch . write ( b , off , len ) ; }
22783	public void changeProgram ( IFilter newFilter ) { mFilter . releaseProgram ( ) ; mFilter = newFilter ; }
22785	public synchronized void end ( ) { this . active = _BOOL ; this . selectedObject = _NULL ; }
22786	@ CheckReturnValue public AddCmd all ( ) { Preconditions . checkState ( Iterables . isEmpty ( files ) , _CHAR _CHAR and passing files is incompatible _CHAR ) ; return new AddCmd ( force , _BOOL , files ) ; }
22813	private void expandAllNodes ( JTree tree ) { TreeNode root = ( TreeNode ) tree . getModel ( ) . getRoot ( ) ; expandAllNodes ( tree , new TreePath ( root ) ) ; }
22814	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
22832	public double t ( final double mu , final StatisticalSummary sampleStats ) throws MathIllegalArgumentException , NullArgumentException { checkSampleData ( sampleStats ) ; return t ( sampleStats . getMean ( ) , mu , sampleStats . getVariance ( ) , sampleStats . getN ( ) ) ; }
22835	public void attachView ( final V view ) { detachView ( ) ; mPresenter . attachView ( view ) ; }
22840	protected void onAdjustChildViews ( boolean down ) { if ( down ) correctTooHigh ( getChildCount ( ) ) ; else correctTooLow ( getChildCount ( ) ) ; }
22849	@ Override public ASModel parseASURI ( String uri ) throws Exception { XMLInputSource source = new XMLInputSource ( _NULL , uri , _NULL ) ; return parseASInputSource ( source ) ; }
22850	public static void addStrut ( JComponent b , boolean horiz , int size ) { if ( size < _NUM ) return ; b . add ( horiz ? Box . createHorizontalStrut ( size ) : Box . createVerticalStrut ( size ) ) ; }
22872	@ Override protected Expression generateExpression ( ) { Expression expression = _NULL ; return expression ; }
22873	public static int randomNumberBetween ( double begin , double end , RandomGenerator rng ) { if ( begin > end ) throw new IllegalArgumentException ( _CHAR Begin must not be less than end _CHAR ) ; return ( int ) begin + ( int ) ( rng . nextDouble ( ) * ( ( end - begin ) + _NUM ) ) ; }
22891	public Builder lineCap ( String lineCap ) { this . lineCap = lineCap ; return this ; }
22896	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( UniFrac . TOPOLOGICAL_UNIFRAC ) ; }
22902	private void addCallbackMethod ( String layoutFile , String callback ) { addToMapSet ( callbackMethods , layoutFile , callback ) ; if ( includeDependencies . containsKey ( layoutFile ) ) for ( String target : includeDependencies . get ( layoutFile ) ) addCallbackMethod ( target , callback ) ; }
22911	public IteratorBuilder addTemplate ( ISpaceQuery query ) { templates . add ( query ) ; return this ; }
22914	@ Override public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; return _map . equals ( obj ) ; }
22919	@ Override public ASElementDeclaration createASElementDeclaration ( String namespaceURI , String name ) throws DOMException { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
22922	public EtcdClient build ( ) throws ConnectException , AuthFailedException { checkState ( ! endpoints . isEmpty ( ) || nameResolverFactory != _NULL , _CHAR please configure ectd serve endpoints or nameResolverFactory before build . '' ) ; return new EtcdClient ( _NULL , this ) ; }
22925	void update ( @ NonNull Bitmap icon , @ NonNull String description ) { mIcon = icon ; mDescription = description ; }
22927	@ Override public void onBindViewHolder ( T holder , int position ) { ItemIndex index = getItemIndex ( position ) ; onBindViewHolderItemType ( holder , index , index . getType ( ) ) ; }
22928	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
22936	@ ObjectiveCName ( _CHAR clear : action : name : _CHAR ) void clear ( Topic topic , Actions action , String name ) { String uniqueName = this . getUniqueName ( topic , action , name ) ; this . clear ( uniqueName ) ; }
22938	public static Optional < File > find ( File base , final String name ) { checkArgument ( base . isDirectory ( ) , _CHAR _CHAR must be a directory . '' ) ; return Files . fileTreeTraverser ( ) . preOrderTraversal ( base ) . filter ( Predicates . compose ( Predicates . equalTo ( name ) , GET_NAME ) ) . last ( ) ; }
22941	public void tabClosureCancelled ( long time , int id ) { final boolean selected = TabModelUtils . getCurrentTabId ( mModel ) == id ; tabCreated ( time , id , Tab . INVALID_TAB_ID , selected ) ; }
22942	public IteratorBuilder addTemplate ( Object template ) { templates . add ( template ) ; return this ; }
22954	private void showPanel ( String selectedItem ) { CardLayout cl = ( CardLayout ) ( outerPanel . getLayout ( ) ) ; cl . show ( outerPanel , selectedItem ) ; }
22958	public void reelect ( ) throws InterruptedException , ActiveElectionException , RemoteException { changeState ( getState ( ) , State . PENDING , _BOOL ) ; elect ( ) ; }
22963	public boolean isDetailsAreaShown ( int location ) { DisplayArea displayArea = getDisplayArea ( location ) ; return displayArea != _NULL ? displayArea . isVisible ( ) : _BOOL ; }
22984	public char nextClean ( ) throws JSONException { int nextCleanInt = nextCleanInternal ( ) ; return nextCleanInt == - _NUM ? _CHAR : ( char ) nextCleanInt ; }
22997	private void badIndex ( int index ) { String msg = _CHAR Attempt to modify attribute at illegal index : _CHAR + index ; throw new ArrayIndexOutOfBoundsException ( msg ) ; }
23005	void localEscapes ( Local l ) { globEscape . addAll ( locals . get ( l ) ) ; if ( doCheck ) sanityCheck ( ) ; }
23008	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
23067	@ Override public boolean equals ( Object o ) { GameTime other = ( GameTime ) o ; return this . getTime ( ) == other . getTime ( ) ; }
23073	private String resolvePolicyProperty ( LogManager manager , String property ) { String propertyKey = SYSPROP_PROP_PREFIX + property ; return System . getProperty ( propertyKey , manager . getProperty ( propertyKey ) ) ; }
23077	public Node addChild ( Node parent ) { nodeCheck ( parent , _BOOL ) ; return getNode ( addChild ( parent . getRow ( ) ) ) ; }
23084	public void writePacket ( byte [ ] buffer , SocketAddress dest ) throws IOException { DatagramPacket dp = new DatagramPacket ( buffer , buffer . length , dest ) ; socket . send ( dp ) ; }
23093	private void readObject ( final ObjectInputStream stream ) throws IOException , ClassNotFoundException { stream . defaultReadObject ( ) ; count = _NUM ; }
23100	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL ; }
23119	public boolean isApplicable ( ) { ClassificationViewer viewer = ( ClassificationViewer ) ( ( Director ) getDir ( ) ) . getViewerByClassName ( _CHAR SEED _CHAR ) ; return viewer != _NULL && viewer . hasComparableData ( ) ; }
23127	public void loadIdentity ( ) { m01 = m02 = m10 = m12 = m20 = m21 = _NUM ; m00 = m11 = m22 = _NUM ; }
23142	public final boolean canGetInt ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canGetInt ( ) ) ; }
23145	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
23150	private void checkApproximateTable ( int n , int m , double criticalValue , double alpha , double epsilon ) { final KolmogorovSmirnovTest test = new KolmogorovSmirnovTest ( ) ; Assert . assertEquals ( alpha , test . approximateP ( criticalValue , n , m ) , epsilon ) ; }
23151	public void sendDelayedTimeDeadbandValues ( ) { this . equipmentLogger . debug ( _CHAR sendDelayedTimeDeadbandValues - Sending all time deadband delayed values to the server _CHAR ) ; this . equipmentSenderValid . sendDelayedTimeDeadbandValues ( ) ; }
23157	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
23166	private void readObject ( java . io . ObjectInputStream stream ) throws java . io . IOException , ClassNotFoundException { stream . defaultReadObject ( ) ; super . source = source ; }
23167	public void clearExpressions ( ) { this . generator = _NULL ; this . sampleSkipTest = _NULL ; }
23169	public void handleFling ( float velocity ) { mHasDetectedTouchGesture = _BOOL ; animateToProjectedState ( velocity ) ; }
23170	public Bundler putChar ( String key , char value ) { bundle . putChar ( key , value ) ; return this ; }
23181	private void resetPokeflyStateMachine ( ) { receivedInfo = _BOOL ; infoShownSent = _BOOL ; }
23186	public boolean isLong ( String key ) { Object val = get ( key ) ; return val instanceof Long ; }
23209	private Collection < Var > migrateAsEntity ( SQLTable currentTable ) { Var type = var ( ) . isa ( _CHAR entity - type _CHAR ) . id ( currentTable . getEntityType ( ) ) ; return Lists . newArrayList ( type ) ; }
23210	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; return chartViewer . getChartDrawer ( ) != _NULL && chartViewer . getChartDrawer ( ) . canShowXAxis ( ) ; }
23212	public static void drawResizeHandleSelection ( ViewTransform transform , Graphics2D g , ResizeHandle selectedResizeHandle ) { Rectangle bounds = selectedResizeHandle . getSwingBounds ( transform ) ; g . drawRect ( bounds . x , bounds . y , bounds . width , bounds . height ) ; }
23216	private void writeObject ( ObjectOutputStream oos ) throws IOException { oos . defaultWriteObject ( ) ; MatrixUtils . serializeRealVector ( coefficients , oos ) ; }
23241	public static int divideToCeil ( int numerator , int denominator ) { Double result = Math . ceil ( ( double ) numerator / denominator ) ; return result . intValue ( ) ; }
23261	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
23262	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
23277	@ Override public void initialize ( CordovaInterface cordova , CordovaWebView webView ) { super . initialize ( cordova , webView ) ; this . sensorManager = ( SensorManager ) cordova . getActivity ( ) . getSystemService ( Context . SENSOR_SERVICE ) ; }
23280	public synchronized void reset ( ) { this . state = Input . State . RELEASED ; this . value = _NUM ; }
23284	public List < ModelEntity > induceModelFromDb ( Collection < String > messages ) { DatabaseUtil dbUtil = new DatabaseUtil ( this . helperInfo ) ; return dbUtil . induceModelFromDb ( messages ) ; }
23292	public ImageFixture withMaxDifference ( double percent ) { myMaxPercentDifference = percent ; return this ; }
23295	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
23320	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( PearsonDistance . PEARSON_DISTANCE ) ; }
23324	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
23337	@ Override public Output apply ( Input input ) { if ( input == _NULL ) return fn_ . apply ( input ) ; return match_ ( input ) . orElseGet ( _NULL ) . getOutput ( ) ; }
23339	public Builder fadeAnimation ( Boolean fadeAnimation ) { this . fadeAnimation = fadeAnimation ; return this ; }
23341	public ParticleSystem addModifier ( ParticleModifier modifier ) { mModifiers . add ( modifier ) ; return this ; }
23356	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR AQI \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
23383	public void loading ( ) { mHintView . setVisibility ( View . GONE ) ; mProgressBar . setVisibility ( View . VISIBLE ) ; }
23387	protected void newCovarianceData ( double [ ] [ ] omega ) { this . Omega = new Array2DRowRealMatrix ( omega ) ; this . OmegaInverse = _NULL ; }
23392	public String post ( String stream ) throws HttpClientException { this . rawStream = stream ; return sendHttpRequest ( _CHAR post _CHAR ) ; }
23394	public AemDialog openByContextMenu ( ) { openByContextMenu ( currentScope ) ; return this ; }
23396	public void addModifier ( Modifier node ) { List < Modifier > list = ( parent == _NULL || state == _NULL ) ? getModifierListNoTransform ( ) : getModifierList ( ) ; list . addChild ( node ) ; }
23408	public Builder cacheExpirationInterval ( long cacheExpirationInterval , TimeUnit timeUnit ) { this . cacheExpirationIntervalMs = TimeUnit . MILLISECONDS . convert ( cacheExpirationInterval , timeUnit ) ; return this ; }
23476	@ Override public void write ( int b ) { ensureCapacity ( _NUM ) ; _buffer [ _count ++ ] = ( byte ) b ; }
23483	public CompletableFuture < Tuple2 < UInteger [ ] , UInteger [ ] >> invoke ( UInteger subscriptionId ) { Variant [ ] inputArguments = new Variant [ ] { new Variant ( subscriptionId ) } ; return invoke ( inputArguments ) . thenCompose ( _NULL ) ; }
23488	@ Override public long blocksAccessed ( ) { Plan mp = new MaterializePlan ( p , tx ) ; return mp . blocksAccessed ( ) ; }
23497	@ Subscribe public void onEvent ( InternalExceptionEvent event ) { event . getE ( ) . printStackTrace ( ) ; Snackbar . make ( findViewById ( R . id . root ) , getString ( R . string . toast_internal_error ) , Snackbar . LENGTH_LONG ) . show ( ) ; }
23517	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getLength ( ) > _NUM ; }
23528	private static boolean isAccessibilityManagerEnabled ( Context context ) { AccessibilityManager accessibilityManager = ( ( AccessibilityManager ) context . getSystemService ( Context . ACCESSIBILITY_SERVICE ) ) ; return accessibilityManager != _NULL && accessibilityManager . isEnabled ( ) ; }
23534	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
23543	public Bundler putStringArray ( String key , String [ ] value ) { bundle . putStringArray ( key , value ) ; return this ; }
23552	public static int hash32 ( final String text ) { final byte [ ] bytes = text . getBytes ( ) ; return hash32 ( bytes , bytes . length ) ; }
23555	public void onStartMove ( ) { getOwner ( ) . getObserveController ( ) . notifyMoveObservers ( ) ; notifyAIOnMove ( ) ; }
23568	public EmailBuilder replyTo ( List < String > replyToAddresses ) { this . replyTo = replyToAddresses ; return this ; }
23574	public void clickOption ( ToolbarOptions option ) { By locator = By . xpath ( String . format ( BUTTON_XPATH_TEMPLATE , option . getTitle ( ) ) ) ; toolbar . findElement ( locator ) . click ( ) ; }
23580	private void clickByDescription ( String text ) throws UiObjectNotFoundException { UiObject obj = new UiObject ( new UiSelector ( ) . description ( text ) ) ; obj . clickAndWaitForNewWindow ( ) ; }
23583	public void removeEntry ( Remote object ) { Entry entry = _objMap . remove ( object ) ; _objIdMap . remove ( entry . m_ObjectId ) ; }
23589	public EmailBuilder withAttachments ( List < EmailAttachment > attachments ) { this . attachments . addAll ( attachments ) ; return this ; }
23604	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
23612	@ Override public long blocksAccessed ( ) { double rpb = ( double ) ( Buffer . BUFFER_SIZE / RecordPage . slotSize ( p . schema ( ) ) ) ; return ( int ) Math . ceil ( p . recordsOutput ( ) / rpb ) ; }
23614	@ NotNull public ListPersonsInPersonGroupAction listPersonsInPersonGroup ( @ NotNull String personGroupId ) { Validation . validate ( personGroupId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR personGroupId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new ListPersonsInPersonGroupAction ( cognitiveContext , personGroupId ) ; }
23615	@ Override public V put ( K key , V value ) { V oldValue = super . put ( key , value ) ; return ( oldValue == _NULL ) ? delegate . get ( key ) : oldValue ; }
23622	public void updateConfig ( String serviceURL , ClientConfiguration newConfig ) { this . serviceURL = serviceURL ; this . clientConfig = newConfig ; }
23627	public boolean isValidLocalTld ( String lTld ) { lTld = unicodeToASCII ( lTld ) ; return Arrays . binarySearch ( LOCAL_TLDS , chompLeadingDot ( lTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
23633	public static boolean hasFileAccessPermission ( WindowAndroid windowAndroid ) { assert windowAndroid != _NULL ; return windowAndroid . hasPermission ( permission . WRITE_EXTERNAL_STORAGE ) ; }
23636	public String syllabify ( String phones ) { Syllabifier sfr = new Syllabifier ( this . allophoneSet , this . removeTrailingOneFromPhones ) ; return sfr . syllabify ( phones ) ; }
23640	public TSDataOptimizerTask addAll ( Collection < ? extends TSData > tsdata ) { tsdata . forEach ( _NULL ) ; return this ; }
23641	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
23645	public static String localePrefix ( Locale locale ) { if ( locale == _NULL ) return _NULL ; return locale . toString ( ) ; }
23662	public Builder withSortField ( RangeRequest . SortTarget field ) { this . sortTarget = field ; return this ; }
23685	public void translate ( float xAmount , float yAmount ) { x += xAmount ; y += yAmount ; }
23688	public Builder color ( String color ) { this . color = color ; return this ; }
23695	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
23697	public void start ( ) { this . startTime = this . world . getTotalWorldTime ( ) ; this . stopTime = _NUM ; }
23713	public SiteAdminActionBar waitToBeDisplayed ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
23720	public CreatePageWindow openCreatePageWindow ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL , _NUM ) ; return createPageWindow ; }
23725	public void begin ( int size ) { outputData = new byte [ size ] ; curIndex = _NUM ; }
23733	public ColumnQuery addCondition ( ColumnCondition condition ) throws NullPointerException { this . conditions . add ( Objects . requireNonNull ( condition , _CHAR condition is required _CHAR ) ) ; return this ; }
23740	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
23758	public boolean declaresMethod ( String subsignature ) { checkLevel ( SIGNATURES ) ; return declaresMethod ( Scene . v ( ) . getSubSigNumberer ( ) . findOrAdd ( subsignature ) ) ; }
23765	public static int pxToSp ( Context context , float pxValue ) { final float fontScale = context . getResources ( ) . getDisplayMetrics ( ) . scaledDensity ; return ( int ) ( pxValue / fontScale + _NUM . _NUM ) ; }
23770	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
23772	@ VisibleForTesting void overrideDecidedStateForTesting ( boolean decidedState ) { mDidOverrideDecidedStateForTesting = _BOOL ; mDecidedStateForTesting = decidedState ; }
23776	public AemListItem addItem ( ) { addItemButton . click ( ) ; return getLastItem ( ) ; }
23779	public void denyAll ( PermissionFlag flag , Message message ) { generalPermissions . put ( flag , message ) ; strictPermission . getOrDefault ( flag , emptyMap ( ) ) . values ( ) . removeIf ( _NULL ) ; }
23785	public Builder flushIntervalMicros ( int flushIntervalMicros ) { this . _flushIntervalMicros = flushIntervalMicros ; return this ; }
23791	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
23792	protected void removeAt ( int index ) { _values [ index ] = _NUM ; super . removeAt ( index ) ; }
23797	public static long abs ( final long x ) { final long l = x >> > _NUM ; return ( x ^ ( ~ l + _NUM ) ) + l ; }
23804	public Builder withPhysical ( boolean physical ) { this . physical = physical ; return this ; }
23805	public int truncate_file ( String group_name , String appender_filename ) throws IOException , MyException { final long truncated_file_size = _NUM ; return this . truncate_file ( group_name , appender_filename , truncated_file_size ) ; }
23807	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
23816	public CreatePageWindow typeName ( String name ) { nameField . setValue ( name ) ; return this ; }
23820	public void dumpASCII ( Writer writer ) { Wave wave = getWave ( ) ; wave . dump ( writer ) ; }
23826	public E removeMaximum ( ) { if ( this . root == _NULL ) return _NULL ; return this . removeMaximum ( this . root ) . comparable ; }
23828	public void addTask ( TaskId taskId , Future < ? > task ) { cancelTask ( taskId ) ; tasks . put ( taskId . ordinal ( ) , task ) ; }
23830	private void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( this ) ; onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
23833	public void addReceiver ( AXmlNode node ) { if ( receivers . isEmpty ( ) ) receivers = new ArrayList < AXmlNode > ( ) ; receivers . add ( node ) ; }
23838	public static void writeString ( PacketBuffer buf , String value ) { buf . writeInt ( value . length ( ) ) ; buf . writeString ( value ) ; }
23852	public final boolean canSetDate ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canSetDate ( ) ) ; }
23859	public CarouselOptions selectedItem ( int selectedItem ) { mSelectedItem = selectedItem ; return this ; }
23866	public void finishTemplatesSearch ( NotifyContext notifyContext ) { decreaseCounter ( notifyContext ) ; _backupLog . clearTriggered ( notifyContext . getOperationId ( ) ) ; }
23872	public void cleanStop ( ) { keepAlive = _BOOL ; interrupt ( ) ; }
23875	public static void main ( String [ ] args ) { Vertx vertx = Vertx . vertx ( ) ; vertx . deployVerticleObservable ( WebServiceExample . class . getName ( ) ) . subscribe ( _NULL , _NULL ) ; }
23878	public Grammar parseGrammar ( String type , String uri ) throws XNIException , IOException { XMLInputSource source = new XMLInputSource ( _NULL , uri , _NULL ) ; return parseGrammar ( type , source ) ; }
23879	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR _CHAR ( _CHAR + _CHAR _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR _CHAR TEXT NOT NULL , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR INTEGER ) ; _CHAR ) ; }
23883	public static void logPromoSeen ( boolean wasPanelSeen , boolean wasTap ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchFirstRunPanelSeen _CHAR , wasPanelSeen ? RESULTS_SEEN : RESULTS_NOT_SEEN , RESULTS_SEEN_BOUNDARY ) ; logHistogramByGesture ( wasPanelSeen , wasTap , _CHAR Search . ContextualSearchPromoSeenByGesture _CHAR ) ; }
23897	public static boolean isBookmarkInMobileBookmarksBranch ( Context context , long nodeId ) { Boolean result = chromeBrowserProviderCall ( Boolean . class , ChromeBrowserProvider . CLIENT_API_IS_BOOKMARK_IN_MOBILE_BOOKMARKS_BRANCH , context , argsToBundle ( nodeId ) ) ; return result != _NULL ? result . booleanValue ( ) : _BOOL ; }
23899	public Builder client ( DistributedLogClient client ) { this . _client = client ; return this ; }
23900	public TrackedEntityInstanceQueryParams addAttribute ( QueryItem attribute ) { this . attributes . add ( attribute ) ; return this ; }
23901	public Builder withDebug ( boolean enabled ) { this . mDebugEnabled = enabled ; return this ; }
23902	public void initialise ( ) throws XMLException { loader = new MqttSpyDaemonConfigLoader ( ) ; showInfo ( ) ; }
23914	public static int daysBetween ( Date startDate , Date endDate ) { final Days days = Days . daysBetween ( new DateTime ( startDate ) , new DateTime ( endDate ) ) ; return days . getDays ( ) ; }
23916	public float length ( int u , int v ) { if ( u == v ) return _NUM ; else return _NUM / ( v - u ) ; }
23928	public void freeCacheContext ( Context ctx ) { ctx . clean ( ) ; ctx . setActive ( _BOOL ) ; }
23932	public static void println ( Object ... msg ) { String line = joiner . join ( msg ) ; trace . println ( line ) ; }
23933	public Builder cacheOnDisk ( boolean cacheOnDisk ) { this . cacheOnDisk = cacheOnDisk ; return this ; }
23950	final public static long updateCollection ( String collection , Object id , V v , boolean adding ) { BasicDBObject q = new BasicDBObject ( ) . append ( X . ID , id ) ; return updateCollection ( collection , q , v ) ; }
23954	public static void cleanInternalCache ( Context context ) { File directory = context . getCacheDir ( ) ; deleteFilesByDirectory ( directory ) ; }
23957	public static void createAllTables ( Database db , boolean ifNotExists ) { BangumiCalendarDao . createTable ( db , ifNotExists ) ; MyCollectionDao . createTable ( db , ifNotExists ) ; }
23960	@ Override public void justSelected ( ) { setCachedExpression ( generateExpression ( ) ) ; checkSymbolIsValid ( ) ; }
23966	@ Override public void readPacketData ( PacketBuffer buf ) throws IOException { AbstractChannel < ? > channel = ChannelManager . get ( buf . readInt ( ) ) ; packet = channel . read ( buf ) ; }
23970	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
23973	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
23978	public IVarAbstraction findInstanceField ( AllocNode obj , SparkField field ) { AllocDotField af = findAllocDotField ( obj , field ) ; return consG . get ( af ) ; }
23985	public void write ( OutputStream outputStream , Storable obj ) throws IOException { ObjectOutputStream oos = new ObjectOutputStream ( outputStream ) ; oos . writeObject ( obj ) ; }
24000	public void addField ( String fldName , Type type ) { fields . put ( fldName , type ) ; if ( myFieldSet != _NULL ) myFieldSet . add ( fldName ) ; }
24038	@ Override public void unparsedEntityDecl ( String name , String publicId , String systemId , String notationName ) throws SAXException { allowXMLCatalogPI = _BOOL ; super . unparsedEntityDecl ( name , publicId , systemId , notationName ) ; }
24054	protected static boolean exists ( JsonObject obj , String field ) { JsonElement element = obj . get ( field ) ; return ( element != _NULL ) ; }
24057	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
24058	protected void resetInternalState ( ) { setStepStart ( _NULL ) ; setStepSize ( FastMath . sqrt ( minStep * maxStep ) ) ; }
24060	public void writeBytes ( DataOutput out ) throws IOException { out . writeLong ( mostSig ) ; out . writeLong ( leastSig ) ; }
24068	public Builder pointerEvents ( String pointerEvents ) { this . pointerEvents = pointerEvents ; return this ; }
24073	public final boolean canSetLong ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canSetLong ( ) ) ; }
24078	public void loadState ( final Graph graph , final Configuration configuration ) { configuration . subset ( PREFIX_SELECTED_TYPE_KEY ) . getKeys ( ) . forEachRemaining ( _NULL ) ; configuration . subset ( PREFIX_PERSISTENT_PROPERTIES ) . getKeys ( ) . forEachRemaining ( _NULL ) ; }
24094	@ Deprecated public void resetTo ( long sequence ) { sequencer . claim ( sequence ) ; sequencer . publish ( sequence ) ; }
24096	private void verifyValidation ( ) { setErrorMessage ( _NULL ) ; setValid ( getErrorMessage ( ) == _NULL ) ; }
24100	@ NotNull private static GeneralCommandLine addInstallParameters ( @ NotNull GeneralCommandLine cl , int memorySize ) { cl . addParameters ( _CHAR - m _CHAR , String . valueOf ( memorySize ) ) ; return cl ; }
24115	public EmailBuilder withHeader ( String key , String val ) { this . headers . put ( key , val ) ; return this ; }
24119	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
24122	public Builder padding ( Point padding ) { this . padding = padding ; return this ; }
24130	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
24164	private void clearMessages ( ) { animationHandler . removeMessages ( MESSAGE_SCROLL ) ; animationHandler . removeMessages ( MESSAGE_JUSTIFY ) ; }
24170	public AemContextMenu clickOption ( final MenuOption option ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( _NULL ) ; return this ; }
24177	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
24183	public void configure ( ComponentConfiguration config ) { openDialog ( ) ; configDialog . configureWith ( config ) ; }
24186	public StyleImageView disableAnimation ( ) { styler . disableAnimation ( ) ; return this ; }
24196	public Builder zoomAnimation ( Boolean zoomAnimation ) { this . zoomAnimation = zoomAnimation ; return this ; }
24198	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getLength ( ) > _NUM ; }
24216	public ViewsFinder excludingChildsFromFilteredGroupViews ( ) { this . addChildsFromFilteredGroupViews = _BOOL ; return this ; }
24230	public void delete ( ) { DataSourceWindowManager . sharedInstance ( ) . closeDataSource ( this ) ; getOwner ( ) . getRepository ( ) . removeDataSource ( this ) ; }
24236	public boolean isAssumedNullBefore ( Unit s , Immediate i ) { AnalysisInfo ai = ( AnalysisInfo ) getFlowBefore ( s ) ; return ai . get ( i ) == NULL ; }
24268	public void java_lang_System_setIn0 ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable sysIn = helper . staticField ( _CHAR java . lang . System _CHAR , _CHAR in _CHAR ) ; helper . assign ( sysIn , params [ _NUM ] ) ; }
24269	public HumanTime h ( int n ) { delta += HOUR * Math . abs ( n ) ; return this ; }
24270	public void loadData ( Table t , String query , String keyField , Object lock , DataSourceWorker . Listener listener ) { DataSourceWorker . Entry e = new DataSourceWorker . Entry ( this , t , query , keyField , lock , listener ) ; DataSourceWorker . submit ( e ) ; }
24291	void reset ( ) { if ( sUidToThrottler != _NULL ) sUidToThrottler . remove ( mUid ) ; mSharedPreferences . edit ( ) . remove ( SCORE + mUid ) . remove ( LAST_REQUEST + mUid ) . remove ( BANNED_UNTIL + mUid ) . apply ( ) ; }
24301	@ Override public void onUIReset ( PtrFrameLayout frame ) { mScale = _NUM ; mDrawable . stop ( ) ; }
24302	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
24303	public void put ( ServletRequest request , T value , Map < String , Object > expandContext ) { AttributeAccessor < T > aa = new AttributeAccessor < T > ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; aa . put ( request , value ) ; }
24304	private float smoothInput ( float current , float input ) { current = MathUtils . clamp ( current , input - _NUM , input + _NUM ) ; return MathUtils . interpolate ( current , input , _NUM . _NUM ) ; }
24307	public synchronized void begin ( Vector2 mousePosition ) { this . active = _BOOL ; this . beginPosition = mousePosition ; }
24309	public void softAssertion ( String message ) { fail ( ) ; logEntries . add ( new SoftAssertionFailedEntry ( message ) ) ; }
24313	public boolean match ( Context context , IEntryHolder entry , ITemplateHolder template , int skipAlreadyMatchedFixedPropertyIndex , String skipAlreadyMatchedIndexPath , boolean safeEntry ) { MatchResult res = template . match ( _cacheManager , entry , skipAlreadyMatchedFixedPropertyIndex , skipAlreadyMatchedIndexPath , safeEntry , context , _regexCache ) ; return res != MatchResult . NONE ; }
24319	public PackageScanner usePatternFactory ( PatternFactory factory ) { this . patternFactory = factory ; return this ; }
24334	@ Override public void onGlobalLayout ( ) { mTargetWrapperView . getViewTreeObserver ( ) . removeOnGlobalLayoutListener ( this ) ; continueAnimation ( ) ; }
24340	protected void resetInternalState ( ) { setStepStart ( _NULL ) ; setStepSize ( minStep . multiply ( maxStep ) . sqrt ( ) ) ; }
24342	public void incrementReceiveCount ( ) { receiveCount ++ ; lastReceived = Calendar . getInstance ( ) . getTime ( ) ; }
24360	public boolean isDownloading ( Account account , OCFile file ) { if ( account == _NULL || file == _NULL ) return _BOOL ; return ( mPendingDownloads . contains ( account . name , file . getRemotePath ( ) ) ) ; }
24389	public static void remove ( String tag ) { String node = Model . node ( ) ; Helper . delete ( W . create ( _CHAR tag _CHAR , tag ) . and ( _CHAR node _CHAR , node ) , Menu . class ) ; }
24399	public @ NonNull ChargeRequest . Builder customerId ( @ Nullable String customerId ) { this . customerId = customerId ; return this ; }
24411	public float [ ] queryMarkerTransformation ( int markerUID ) { if ( ! initedNative ) return _NULL ; return NativeInterface . arwQueryMarkerTransformation ( markerUID ) ; }
24421	public boolean isAttr ( ) { ResourceUrl url = ResourceUrl . parse ( getSelectedValue ( ) . getRawXmlValue ( ) , getSelectedValue ( ) . isFramework ( ) ) ; return url != _NULL && url . type == ResourceType . ATTR ; }
24426	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( CalculateEcologicalIndices . GOODALL_NORMALIZED ) ; }
24433	public JSONArray optJSONArray ( int index ) { Object o = opt ( index ) ; return o instanceof JSONArray ? ( JSONArray ) o : _NULL ; }
24454	public Bindings add ( String property , JRadioButton [ ] cs , int defaultValue ) { registerPropertyChangeListener ( cs ) ; return add ( new JRadioButtonBinding ( property , cs , defaultValue ) ) ; }
24455	public void addSupportedType ( @ NotNull AnnotatedClass object ) { mSupportedTypesMap . put ( TypeUtils . getOuterClassType ( object . getType ( ) ) , object ) ; mSupportedTypes . add ( object . getElement ( ) ) ; }
24464	public void appendGroup ( Group group ) throws ObjectAlreadyHasException { assertNotContains ( group ) ; groups . add ( group . getName ( ) ) ; }
24469	public void openThriftWriter ( String filePath ) throws IOException { thriftWriter = new ThriftWriter ( filePath , _BOOL ) ; thriftWriter . open ( ) ; }
24487	public Builder position ( String position ) { this . position = position ; return this ; }
24499	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = StringCodingUtils . getBytes ( input , Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
24500	public void navigateToMain ( ) { activity . startActivity ( new Intent ( activity , MainActivity . class ) ) ; activity . finish ( ) ; }
24501	@ Override public long skip ( long n ) throws IOException { double [ ] data = source . getData ( ( int ) n ) ; return data . length ; }
24513	public boolean isApplicable ( ) { final Document doc = ( ( MainViewer ) getDir ( ) . getMainViewer ( ) ) . getDocument ( ) ; return doc . getNumberOfReads ( ) > _NUM && doc . getMeganFile ( ) . hasDataConnector ( ) ; }
24532	public boolean isRunning ( ) { if ( ! initedNative ) return _BOOL ; return NativeInterface . arwIsRunning ( ) ; }
24533	public AemContentFinder refreshResults ( ) { getCurrentTab ( ) . refreshResults ( ) ; return this ; }
24543	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
24544	public void addInputProcessor ( InputProcessor ip ) { processors . addProcessor ( ip ) ; Gdx . input . setInputProcessor ( processors ) ; }
24549	@ Override protected Expression generateExpression ( ) { Expression expression = _NULL ; return expression ; }
24557	public boolean isAssumedNonNullBefore ( Unit s , Immediate i ) { AnalysisInfo ai = ( AnalysisInfo ) getFlowBefore ( s ) ; return ai . get ( i ) == NON_NULL ; }
24562	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryGaussNormEvaluator - do = ( char | word | all ) [ - summaryDir = summaries / ] [ - modelDir = models / ] _CHAR + _CHAR [ - wordMin = # ] [ - wordMax = # ] [ - wordDist = # ] [ - charMin = # ] [ - charMax = # ] [ - charDist = # ] [ - o = outFile ] [ - t = # ] _CHAR + _CHAR [ - s ] [ - use = o | d ] [ - progress ] [ - lowmem ] _CHAR ) ; System . err . println ( _CHAR wordMin = # \ tMin word n - gram size .\ nwordMax = # \ tMax word n - gram size .\ nwordDist = # \ tWord n - gram window \ n _CHAR + _CHAR charMin = # \ tMin char n - gram size .\ ncharMax = # \ tMax char n - gram size .\ ncharDist = # \ tChar n - gram window .\ n _CHAR + _CHAR - o = outFile \ tThe file to output data . Default is stdout .\ n - t = # \ tNumber of threads . Defaults to _NUM .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - progress \ tFor progress indication ( even in silent mode ) .\ n _CHAR + _CHAR - use = o | d \ tUse [ o ] ccurences or average [ d ] istance to assign weights to the graph . Defaults to o .\ n _CHAR + _CHAR - lowmem \ tDo not use caching for documents . Less memory used , more time required .\ n _CHAR + _CHAR - ? \ tShow this screen . '' ) ; }
24569	public SiteAdminGrid waitForLoaderNotPresent ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( CommonExpectedConditions . elementNotPresentOrVisible ( LOADER_LOCATOR ) ) ; return this ; }
24574	@ Override public void beforeFirst ( ) { nextBlkNum = _NUM ; useNextChunk ( ) ; }
24582	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
24590	void build ( int bezierWidth , int bezierHeight ) { this . bezierWidth = bezierWidth ; this . bezierHeight = bezierHeight ; }
24594	NewProjectDescriptor withBriefNames ( ) { withActivity ( _CHAR A _CHAR ) . withCompanyDomain ( _CHAR C _CHAR ) . withName ( _CHAR P _CHAR ) . withPackageName ( _CHAR a . b _CHAR ) ; return this ; }
24596	public void updateProcessConfiguration ( final ProcessConfigurationUpdate processConfigurationUpdate , final ProcessConfiguration processConfiguration ) throws IllegalAccessException , NoSuchFieldException { fillNonNullFields ( processConfigurationUpdate , processConfiguration , CHANGE_ID_FIELD , PROCESS_ID_FIELD ) ; removeListOfFields ( processConfigurationUpdate . getFieldsToRemove ( ) , processConfiguration ) ; }
24610	public Lexicon removeLowCoverageWords ( double coverage ) { int minDf = ( int ) ( numDocs * coverage ) ; return removeLowDfWords ( minDf ) ; }
24616	private boolean handleSingleTapUp ( MotionEvent e ) { setEventTarget ( mSearchPanel . isCoordinateInsideContent ( e . getX ( ) * mPxToDp , e . getY ( ) * mPxToDp ) ? EventTarget . SEARCH_CONTENT_VIEW : EventTarget . SEARCH_PANEL ) ; return _BOOL ; }
24619	public static RequestLog copy ( ) { RequestLog current = RLOG . get ( ) ; return new RequestLog ( current ) ; }
24621	public Builder piecesSpacing ( float piecesSpacing ) { this . piecesSpacing = piecesSpacing ; return this ; }
24624	void print ( cp_info constant_pool [ ] ) { G . v ( ) . out . println ( prototype ( constant_pool ) ) ; ByteCode . showCode ( instructions , constant_pool ) ; }
24628	public void updateConfiguration ( @ NotNull Configuration configuration ) { myConfiguration = configuration ; invalidateGraphicsRenderer ( ) ; }
24630	public boolean check ( Player player , boolean warn ) { QuestStateList qsl = player . getQuestStateList ( ) ; return checkFinishedQuests ( qsl ) && checkUnfinishedQuests ( qsl ) && checkAcquiredQuests ( qsl ) && checkNoAcquiredQuests ( qsl ) && checkEquippedItems ( player , warn ) ; }
24652	public Object remove ( Object key ) { Object underlying = this . underlyingObjectGetter . getUnderlyingObject ( key ) ; return removeUsingUnderlying ( underlying ) ; }
24660	public Bundler putShort ( String key , short value ) { bundle . putShort ( key , value ) ; return this ; }
24669	public AsyncCatchOptions useBestBall ( boolean useBestPokeball ) { this . useBestPokeball = useBestPokeball ; return this ; }
24671	public JSONObject optJSONObject ( int index ) { Object o = opt ( index ) ; return o instanceof JSONObject ? ( JSONObject ) o : _NULL ; }
24684	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
24687	public void disableDragItem ( ) { itemDragEnabled = _BOOL ; mItemTouchHelper = _NULL ; }
24690	public RecordId currentRecordId ( ) { int id = rp . currentId ( ) ; return new RecordId ( new BlockId ( fileName , currentBlkNum ) , id ) ; }
24699	public void addParameter ( Expression e ) { if ( m_group == _NULL ) m_group = e ; else throw new IllegalStateException ( _CHAR This function takes only _NUM parameter . '' ) ; }
24709	private boolean isCharType ( Field field ) { String type = field . getType ( ) . getName ( ) ; return type . equals ( _CHAR char _CHAR ) || type . endsWith ( _CHAR Character _CHAR ) ; }
24732	public void addContactMech ( String contactMechPurposeTypeId , String contactMechId ) { if ( contactMechPurposeTypeId == _NULL ) throw new IllegalArgumentException ( _CHAR You must specify a contactMechPurposeTypeId to add a ContactMech _CHAR ) ; contactMechIdsMap . put ( contactMechPurposeTypeId , contactMechId ) ; }
24736	@ Override public void onClick ( View v ) { LogUtil . e ( _CHAR position = _CHAR + position ) ; new BossZoomHelper ( ( Activity ) context , bossJumpView , _NUM ) ; }
24743	public void updateClipPreview ( ) { clipboardPreview . setText ( cth . getPreviewString ( ) ) ; clipboardMaxLength . setText ( _CHAR ( _CHAR + cth . getMaxLength ( ) + _CHAR characters ) _CHAR ) ; }
24744	public static void createCodeGroupMethod ( ICodeUnit unit , StructureInfo struInfo ) { IMetadataGroup grp = new DexMetadataGroupMethod ( _CHAR codeAnalysisMethods _CHAR , MetadataGroupType . CLASSID , struInfo ) ; unit . getMetadataManager ( ) . addGroup ( grp ) ; }
24745	public void init ( ) { sqlInsert = new BufferedReader ( new InputStreamReader ( this . getClass ( ) . getResourceAsStream ( _CHAR / sql / cache - data - insert . sql _CHAR ) ) ) ; sqlRemove = new BufferedReader ( new InputStreamReader ( this . getClass ( ) . getResourceAsStream ( _CHAR / sql / cache - data - remove . sql _CHAR ) ) ) ; }
24761	public void add ( int val ) { ensureCapacity ( _pos + _NUM ) ; _data [ _pos ++ ] = val ; }
24783	public static void switchJunction ( NetHandlerPlayServer net , boolean state ) { ensurePlay ( net . netManager . channel ( ) ) ; net . sendPacket ( state ? WRAP_ON_S : WRAP_OFF_S ) ; }
24787	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( ( objBytes == _NULL ) && ( ( hash != _NUM ) || ( locBytes != _NULL ) ) ) throw new InvalidObjectException ( _CHAR Bad hash or annotation _CHAR ) ; }
24791	@ Override public void writeExternal ( ObjectOutput out ) throws IOException { PlatformLogicalVersion version = LRMIInvocationContext . getEndpointLogicalVersion ( ) ; writeExternal ( out , version ) ; }
24813	public void add ( String expr , Font font ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , font ) ; }
24835	public boolean isSimilarTo ( final Line line ) { final double angle = Vector3D . angle ( direction , line . direction ) ; return ( ( angle < tolerance ) || ( angle > ( FastMath . PI - tolerance ) ) ) && contains ( line . zero ) ; }
24839	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . getFirstPC ( ) == _NUM && viewer . getPcoaTab ( ) . getSecondPC ( ) == _NUM && ! viewer . getPcoaTab ( ) . isIs3dMode ( ) ; }
24841	public void putGrammar ( DTDGrammar grammar ) { XMLDTDDescription desc = ( XMLDTDDescription ) grammar . getGrammarDescription ( ) ; fGrammars . put ( desc , grammar ) ; }
24858	public Point2D convertReferenceToWindow ( Point2D refPoint ) { if ( scrollBackReferenceRect == _NULL ) return _NULL ; else return new Point2D . Double ( Math . round ( refPoint . getX ( ) * scrollBackReferenceRect . getWidth ( ) + scrollBackReferenceRect . getX ( ) ) , Math . round ( refPoint . getY ( ) * scrollBackReferenceRect . getHeight ( ) + scrollBackReferenceRect . getY ( ) ) ) ; }
24859	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( classes ) ; }
24860	public Bundler putLong ( String key , long value ) { bundle . putLong ( key , value ) ; return this ; }
24865	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
24869	public synchronized void begin ( Vector2 mousePosition ) { this . active = _BOOL ; this . beginPosition = mousePosition ; }
24870	private boolean preUsageCheck ( ) { Conditions skillConditions = skillTemplate . getUseconditions ( ) ; return skillConditions != _NULL ? skillConditions . validate ( this ) : _BOOL ; }
24874	public Map < String , Object > makeValidContext ( String serviceName , String mode , Map < String , ? extends Object > context ) throws GenericServiceException { ModelService model = getModelService ( serviceName ) ; return makeValidContext ( model , mode , context ) ; }
24884	public void java_lang_Class_setSigners ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable tempFld = helper . tempField ( _CHAR < java . lang . Class signers > _CHAR ) ; helper . assign ( tempFld , params [ _NUM ] ) ; }
24891	public LeastSquaresBuilder maxIterations ( final int newMaxIterations ) { this . maxIterations = newMaxIterations ; return this ; }
24896	@ Override public ListenableFuture < LeaseRevokeResponse > revoke ( long leaseId ) { LeaseRevokeRequest leaseRevokeRequest = LeaseRevokeRequest . newBuilder ( ) . setID ( leaseId ) . build ( ) ; return this . leaseFutureStub . leaseRevoke ( leaseRevokeRequest ) ; }
24898	public void addTypeBound ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeBoundListNoTransform ( ) : getTypeBoundList ( ) ; list . addChild ( node ) ; }
24907	public boolean itemExists ( String name ) throws JMSException { HashMap body = ( HashMap ) Body ; return body . containsKey ( name ) ; }
24913	public CMMModel train ( List < String > taggedSentences , String modelFileName , CMMParams params ) { DataFrame dataset = createDataFrame ( taggedSentences ) ; return train ( dataset , modelFileName , params ) ; }
24918	public static String checkNull ( String string1 ) { if ( string1 != _NULL ) return string1 ; else return _CHAR _CHAR ; }
24924	private boolean useEquipmentConditionsCheck ( ) { Conditions useEquipConditions = skillTemplate . getUseEquipmentconditions ( ) ; return useEquipConditions != _NULL ? useEquipConditions . validate ( this ) : _BOOL ; }
24937	public Builder withDefaultDenyDialog ( boolean useDefault ) { buildObj . showDenyDialog = useDefault ; return this ; }
24955	static boolean isLaunchNameMatched ( Launch launch , EmailSenderCase oneCase ) { List < String > configuredNames = oneCase . getLaunchNames ( ) ; return ( _NULL == configuredNames ) || ( configuredNames . isEmpty ( ) ) || configuredNames . contains ( launch . getName ( ) ) ; }
24967	public void normal ( ) { mHintView . setVisibility ( View . VISIBLE ) ; mProgressBar . setVisibility ( View . GONE ) ; }
24972	public static boolean isPrimitiveArray ( Class clazz ) { Assert . notNull ( clazz , _CHAR Class must not be _NULL _CHAR ) ; return ( clazz . isArray ( ) && clazz . getComponentType ( ) . isPrimitive ( ) ) ; }
24984	@ Override public void onRemoveDataTag ( final ISourceDataTag sourceDataTag , final ChangeReport changeReport ) { changeReport . appendError ( _CHAR The equipment has no implementation to _CHAR + _CHAR remove data tags . You have to restart the DAQ . '' ) ; changeReport . setState ( CHANGE_STATE . REBOOT ) ; }
24991	public PickRequest withCameraPicsDirectory ( @ Nullable final String pDirPath ) { this . mCustomCameraPicsDirPath = pDirPath ; return this ; }
24993	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
24996	private void comfirmOperation ( final OperationId operation ) { final List < Operation > operations = Operation . generateOperations ( operation , getSelectedItems ( ) ) ; new OperationConfirmationController ( new ObservableListWrapper < > ( operations ) ) ; }
25007	@ Override public void stopWatch ( ) { super . stopWatch ( ) ; _retries = _NUM ; }
25008	public void addColumn ( String name , Class type , Object defaultValue ) { Column col = ColumnFactory . getColumn ( type , m_rows . getMaximumRow ( ) + _NUM , defaultValue ) ; addColumn ( name , col ) ; }
25009	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
25014	private void flush ( ) { myPage . write ( currentBlk ) ; lastFlushedLsn = lastLsn ; }
25051	public void add ( String expr , int shape ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; add ( p , shape ) ; }
25059	public Bundler putLongArray ( String key , long [ ] value ) { bundle . putLongArray ( key , value ) ; return this ; }
25066	public static String makeString ( Object obj1 ) { if ( obj1 != _NULL ) return obj1 . toString ( ) ; else return _CHAR _CHAR ; }
25077	public boolean remove ( Object o ) { if ( o == _NULL ) return _BOOL ; return map . remove ( o ) == PRESENT ; }
25083	@ Override public void initialize ( CordovaInterface cordova , CordovaWebView webView ) { super . initialize ( cordova , webView ) ; this . sensorManager = ( SensorManager ) cordova . getActivity ( ) . getSystemService ( Context . SENSOR_SERVICE ) ; }
25094	public StaticScript routing ( Object routing ) { this . routing = routing ; return this ; }
25096	public boolean handleResponse ( ZWaveController zController , SerialMessage lastSentMessage , SerialMessage incomingMessage ) throws ZWaveSerialMessageException { logger . warn ( _CHAR TODO : { } unsupported RESPONSE . '' , incomingMessage . getMessageClass ( ) . getLabel ( ) ) ; return _BOOL ; }
25106	public static long toLong ( Object obj ) { Long result = toLongObject ( obj ) ; return result == _NULL ? _NUM : result . longValue ( ) ; }
25107	public Peek with ( PeekViewOptions options ) { this . options = options ; return this ; }
25111	public boolean isValidInfrastructureTld ( String iTld ) { iTld = unicodeToASCII ( iTld ) ; return Arrays . binarySearch ( INFRASTRUCTURE_TLDS , ( chompLeadingDot ( iTld . toLowerCase ( Locale . ENGLISH ) ) ) ) >= _NUM ; }
25127	public boolean isApplicable ( ) { ChartViewer chartViewer = ( ChartViewer ) getViewer ( ) ; return chartViewer . getChartDrawer ( ) != _NULL && chartViewer . getChartDrawer ( ) . canShowXAxis ( ) ; }
25129	@ Override public void undoAction ( UndoInterface undoRedoObject ) { PrefData prefData = ( PrefData ) undoRedoObject . getOldValue ( ) ; setPrefData ( prefData ) ; }
25171	public TopicSubscriber createDurableSubscriber ( Topic topic , String name , String messageSelector , boolean noLocal ) throws JMSException { ensureOpen ( ) ; throw new JMSException ( _CHAR This version of JMS does not support durable subscribers . '' ) ; }
25185	@ Override public void start ( ) { m_line . start ( ) ; super . start ( ) ; }
25194	public Builder bitmapScale ( float bitmapScale ) { this . bitmapScale = bitmapScale ; return this ; }
25202	private static void formatTwoDigits ( int n , StringBuilder buf ) { if ( n < _NUM ) buf . append ( _CHAR ) ; buf . append ( n ) ; }
25206	public SpaceTypeDescriptorBuilder supportsOptimisticLocking ( boolean supportsOptimisticLocking ) { this . _supportsOptimisticLocking = supportsOptimisticLocking ; return this ; }
25217	private TaskDefinition extractTaskDefinitionFromJobDefinition ( JobDefinition jobDefinition , String taskDefinitionId ) { TaskDefinition result = jobDefinition . getTaskDefinitions ( ) . stream ( ) . filter ( _NULL ) . findFirst ( ) . orElse ( _NULL ) ; return result ; }
25220	public SQLQuery < ? > build ( ITemplateHolder template , String typeName , ITypeDesc typeDesc ) { if ( typeDesc == _NULL ) return new SQLQuery < Object > ( typeName , _CHAR _CHAR ) ; return template . toSQLQuery ( typeDesc ) ; }
25242	public void addArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getArgumentListNoTransform ( ) : getArgumentList ( ) ; list . addChild ( node ) ; }
25254	public JSONObject put ( String key , boolean value ) throws JSONException { this . put ( key , value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
25258	public synchronized ZooKeeperClientBuilder retryPolicy ( RetryPolicy retryPolicy ) { this . retryPolicy = retryPolicy ; return this ; }
25272	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR CUSTOMER \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
25282	public Builder withCommandName ( @ NotNull String commandName ) { myCommandName = commandName ; return this ; }
25287	public void reset ( ) { fileMap = new HashMap < String , LinkedHashSet < FileAsset >> ( ) ; inlineMap = new HashMap < String , LinkedHashSet < String >> ( ) ; }
25290	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_update_me ) ; }
25308	void register ( Event event ) { instance . events . put ( event . getEvent ( ) , event ) ; log ( event . getEvent ( ) + _CHAR registered _CHAR ) ; }
25310	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( CalculateEcologicalIndices . CHISSQUARE ) ; }
25331	public void moveViewToX ( float xValue ) { Runnable job = MoveViewJob . getInstance ( mViewPortHandler , xValue , _NUM , getTransformer ( AxisDependency . LEFT ) , this ) ; addViewportJob ( job ) ; }
25346	public Builder extractionFolder ( File extractionFolder ) { this . extractionFolder = extractionFolder ; return this ; }
25354	public Builder withOutputRoot ( @ NotNull File outputRoot ) { myOutputRoot = outputRoot ; return this ; }
25355	public static void createFederatedNamespace ( URI namespace , ZooKeeperClient zkc ) throws InterruptedException , ZooKeeperClient . ZooKeeperConnectionException , KeeperException { String zkSubNamespacesPath = namespace . getPath ( ) + _CHAR / _CHAR + ZNODE_SUB_NAMESPACES ; Utils . zkCreateFullPathOptimistic ( zkc , zkSubNamespacesPath , new byte [ _NUM ] , zkc . getDefaultACL ( ) , CreateMode . PERSISTENT ) ; }
25363	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( getSyntax ( ) ) ; Director . showMessageWindow ( ) ; }
25364	static void decorate ( @ NotNull ColoredTextContainer container , @ NotNull NlComponent component ) { append ( container , component ) ; container . setIcon ( getViewHandler ( component ) . getIcon ( component ) ) ; }
25369	public Builder type ( final java . lang . reflect . Type type ) { this . propertyType = TypeFactory . valueOf ( type ) ; return this ; }
25371	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = input . getBytes ( Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
25383	public static void closeApplication ( Activity activity ) { activity . finish ( ) ; killCurrentProcess ( ) ; }
25387	public Builder splitSequence ( SequenceSplit split ) { actionList . add ( new DataAction ( split ) ) ; return this ; }
25391	@ Override public Result decode ( BinaryBitmap image , Map < DecodeHintType , ? > hints ) throws NotFoundException { setHints ( hints ) ; return decodeInternal ( image ) ; }
25401	public void fail ( ) { screenshot ( ) ; this . testResult = new Fail ( ) ; }
25412	public void flip ( int x , int y ) { int offset = y * rowSize + ( x / _NUM ) ; bits [ offset ] ^= _NUM << ( x & _NUM ) ; }
25432	public static void copy ( InputStream input , Writer output , String encoding ) throws IOException { InputStreamReader in = new InputStreamReader ( input , encoding ) ; copy ( in , output ) ; }
25433	public Map < String , List < Pair < SequenceUUID , Integer >> > guessAlternatives ( String mainLang ) { List < SoundfieldGroupInfo > stereo = findInputForChannelGroup ( STEREO_LAYOUT ) ; return stereo . stream ( ) . filter ( _NULL ) . filter ( _NULL ) . collect ( Collectors . toMap ( _NULL , _NULL ) ) ; }
25453	private void parse ( BufferedReader reader ) { this . messages . clear ( ) ; reader . lines ( ) . map ( _NULL ) . filter ( _NULL ) . forEach ( _NULL ) ; }
25460	public JavaRDD < String > readTextFile ( String fileName ) { JavaRDD < String > input = jsc . textFile ( fileName ) ; return input . map ( normalizationFunction ) ; }
25463	public Bundler putStringArrayList ( String key , ArrayList < String > value ) { bundle . putStringArrayList ( key , value ) ; return this ; }
25475	public void write ( byte [ ] bytes , int offset , int length ) throws IOException { outs . write ( bytes , offset , length ) ; position += length ; }
25487	private void createBody ( soot . SootMethod sootMethod ) { body = soot . jimple . Jimple . v ( ) . newBody ( sootMethod ) ; sootMethod . setActiveBody ( body ) ; }
25489	public static double hz2bark ( double freqInHz ) { double f = freqInHz / _NUM ; return _NUM * Math . log ( f + Math . sqrt ( ( f * f ) + _NUM ) ) ; }
25508	public static void add ( int tabId , AsyncTabCreationParams params ) { ensureInitialized ( ) ; sAsyncTabCreationParams . put ( tabId , params ) ; }
25511	private void readObject ( ObjectInputStream ois ) throws ClassNotFoundException , IOException { ois . defaultReadObject ( ) ; MatrixUtils . deserializeRealMatrix ( this , _CHAR tableau _CHAR , ois ) ; }
25538	@ Override public boolean accept ( File file ) { boolean smaller = file . length ( ) < size ; return acceptLarger ? ! smaller : smaller ; }
25540	public void addSuperInterfaceId ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getSuperInterfaceIdListNoTransform ( ) : getSuperInterfaceIdList ( ) ; list . addChild ( node ) ; }
25557	public boolean hasPermissionByInternalId ( String internalId , String permission ) { Permission resolvedPermission = getPermissionResolver ( ) . resolvePermission ( permission ) ; return hasPermissionByInternalId ( internalId , resolvedPermission ) ; }
25560	public void closeStream ( ) { CarbonUtil . closeStreams ( stream ) ; executorService . shutdown ( ) ; }
25561	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR newfriend \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY AUTOINCREMENT , _CHAR + _CHAR \ _CHAR UID \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR MSG \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR NAME \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR AVATAR \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR STATUS \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR TIME \ _CHAR INTEGER ) ; _CHAR ) ; }
25567	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
25569	public void add ( String str ) { if ( ! bList . contains ( str ) ) bList . add ( str ) ; hasChanged = _BOOL ; }
25573	public Builder crs ( ICRS crs ) { this . crs = crs ; return this ; }
25589	public UnrevealBuilder withTranslateDuration ( final int translateDuration ) { this . mTranslateDuration = translateDuration ; return this ; }
25596	@ Override public void clearNodes ( ) { super . clearNodes ( ) ; getPlugin ( ) . getUserManager ( ) . giveDefaultIfNeeded ( this , _BOOL ) ; }
25600	public Builder autoZIndex ( Boolean autoZIndex ) { this . autoZIndex = autoZIndex ; return this ; }
25630	public JsonObject add ( String name , int value ) { add ( name , Json . value ( value ) ) ; return this ; }
25638	public void put ( int i , Z z ) { re [ i ] = z . re ; im [ i ] = z . im ; }
25643	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public final E next ( ) { lastElement = ( E ) numberToObj [ cur ++ ] ; return lastElement ; }
25654	public Builder zoomAnimation ( Boolean zoomAnimation ) { this . zoomAnimation = zoomAnimation ; return this ; }
25666	private void processDownloadedImage ( RequestContext context , File tempFile , CompletionHandler imageCompletionHandler ) { Operation fileReadOp = Operation . createPatch ( _NULL ) . setContextId ( context . request . getRequestId ( ) ) . setCompletion ( _NULL ) ; FileUtils . readFileAndComplete ( fileReadOp , tempFile ) ; }
25671	public String toString ( ) { String prettyText = this . text . replace ( _CHAR , _CHAR ) ; return _CHAR Diff ( _CHAR + this . operation + _CHAR , \ _CHAR _CHAR + prettyText + _CHAR \ _CHAR ) _CHAR ; }
25672	@ Override public boolean showDialog ( ) { Class < ? > dataType = Object . class ; return showFilterDialog ( dataType , filter ) ; }
25678	public void delete ( ) throws IOException { close ( ) ; deleteContents ( directory ) ; }
25689	public void clearIndicators ( ) { mWidgetMotion . getSnapCandidates ( ) . clear ( ) ; mWidgetMotion . getSimilarMargins ( ) . clear ( ) ; }
25704	public void clear ( int capacity ) { _data = new short [ capacity ] ; _pos = _NUM ; }
25705	@ Override protected void scanStartElementName ( ) throws IOException , XNIException { fEntityScanner . scanQName ( fElementQName ) ; fSawSpace = fEntityScanner . skipSpaces ( ) ; }
25708	public Builder forceConcatGlobalTag ( boolean val ) { forceConcatGlobalTag = val ; return this ; }
25720	public < T extends EntityCondition > EntityQuery where ( List < T > andConditions ) { this . whereEntityCondition = EntityCondition . makeCondition ( andConditions ) ; return this ; }
25727	public Object remove ( Object key ) { Object underlying = this . underlyingObjectGetter . getUnderlyingObject ( key ) ; return removeUsingUnderlying ( underlying ) ; }
25731	public boolean hasUpdateListeners ( ) { boolean isEmpty = ! listeners . isEmpty ( ) ; return isEmpty ; }
25736	public Builder stepNumberBackgroundColor ( int stepNumberBackgroundColor ) { this . stepNumberBackgroundColor = stepNumberBackgroundColor ; return this ; }
25742	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
25744	private boolean isIndexExisting ( String index ) { ActionFuture < IndicesExistsResponse > response = client . admin ( ) . indices ( ) . exists ( new IndicesExistsRequest ( index ) ) ; return response . actionGet ( _NUM ) . isExists ( ) ; }
25766	public static void clearCache ( Context context , String uniqueName ) { File cacheDir = CacheManager . getDiskCacheDir ( context , uniqueName ) ; clearCache ( cacheDir ) ; }
25771	public static WxMenuResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , WxMenuResult . class ) ; }
25789	public void registerPeekPromoSeen ( ) { final int peekPromoShowCount = mPreferenceManager . getContextualSearchPeekPromoShowCount ( ) ; mPreferenceManager . setContextualSearchPeekPromoShowCount ( peekPromoShowCount + _NUM ) ; }
25792	public static void saveBookmarkOffline ( long bookmarkId , EnhancedBookmarksModel bookmarkModel , Tab tab , final SnackbarManager snackbarManager , Activity activity ) { assert bookmarkId != ChromeBrowserProviderClient . INVALID_BOOKMARK_ID ; bookmarkModel . saveOfflinePage ( new BookmarkId ( bookmarkId , BookmarkType . NORMAL ) , tab . getWebContents ( ) , createAddBookmarkCallback ( bookmarkModel , snackbarManager , activity ) ) ; }
25798	public JsonObject add ( String name , double value ) { add ( name , Json . value ( value ) ) ; return this ; }
25815	public Builder iconAnchor ( Point iconAnchor ) { this . iconAnchor = iconAnchor ; return this ; }
25819	@ VisibleForTesting protected static void releaseWakeLock ( ) { ThreadUtils . assertOnUiThread ( ) ; if ( sWakeLock != _NULL && sWakeLock . isHeld ( ) ) sWakeLock . release ( ) ; }
25834	public TapTarget drawShadow ( boolean draw ) { this . drawShadow = draw ; return this ; }
25836	public static QrCodeResult fromJson ( String json ) throws JsonParseException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . readValue ( json , QrCodeResult . class ) ; }
25837	public void register ( Object listener ) { eventBus . register ( listener ) ; Logs . info ( _CHAR register an listener ( { } ) _CHAR , listener ) ; }
25844	protected void afterMove ( ) { getContentManager ( ) . registerLanguage ( new SLCodec ( ) , FIPANames . ContentLanguage . FIPA_SL0 ) ; getContentManager ( ) . registerOntology ( MobilityOntology . getInstance ( ) ) ; }
25845	public static UserLayer createNewUserLayer ( ) { UserLayer userLayer = styleFactory . createUserLayer ( ) ; return userLayer ; }
25846	private void writeEscUTF16 ( String s , int start , int length , boolean isAttVal ) throws SAXException { String subString = s . substring ( start , start + length ) ; write ( StringEscapeUtils . escapeHtml4 ( subString ) ) ; }
25853	private void loadDictionaryData ( DictionaryInfo dictionaryInfo , DictionaryColumnUniqueIdentifier dictionaryColumnUniqueIdentifier , long dictionaryChunkStartOffset , long dictionaryChunkEndOffset , boolean loadSortIndex ) throws IOException { DictionaryCacheLoader dictionaryCacheLoader = new DictionaryCacheLoaderImpl ( dictionaryColumnUniqueIdentifier . getCarbonTableIdentifier ( ) , carbonStorePath ) ; dictionaryCacheLoader . load ( dictionaryInfo , dictionaryColumnUniqueIdentifier . getColumnIdentifier ( ) , dictionaryChunkStartOffset , dictionaryChunkEndOffset , loadSortIndex ) ; }
25871	public Builder keepLineNumber ( boolean val ) { keepLineNumber = val ; return this ; }
25876	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
25881	@ Override public void commence ( HttpServletRequest request , HttpServletResponse response , AuthenticationException arg2 ) throws IOException , ServletException { log . debug ( _CHAR Pre - authenticated entry point called . Rejecting access _CHAR ) ; response . sendError ( HttpServletResponse . SC_UNAUTHORIZED , _CHAR Access Denied _CHAR ) ; }
25895	public static void assertSame ( Complex expected , Complex actual ) { assertSame ( expected . getReal ( ) , actual . getReal ( ) ) ; assertSame ( expected . getImaginary ( ) , actual . getImaginary ( ) ) ; }
25897	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
25899	private void launchNtp ( boolean incognito ) { if ( incognito && ! PrefServiceBridge . getInstance ( ) . isIncognitoModeEnabled ( ) ) return ; getTabCreator ( incognito ) . launchNTP ( ) ; }
25906	private Table readTable ( int index ) { TableBlock block = _blocks . get ( getBlock ( index ) ) ; return block . getTable ( getBlockOffset ( index ) ) ; }
25927	private String printEFormat ( double x ) { if ( conversionCharacter == _CHAR ) return eFormatString ( x , _CHAR ) ; else return eFormatString ( x , _CHAR ) ; }
25933	@ Override public void onAddDataTag ( final ISourceDataTag sourceDataTag , final ChangeReport changeReport ) { changeReport . appendError ( _CHAR The equipment has no implementation to _CHAR + _CHAR add data tags . You have to restart the DAQ . '' ) ; changeReport . setState ( CHANGE_STATE . REBOOT ) ; }
25942	public static double normalize ( double val , double min , double max ) { if ( max < min ) throw new IllegalArgumentException ( _CHAR Max must be greather than min _CHAR ) ; return ( val - min ) / ( max - min ) ; }
25964	public boolean isApplicable ( ) { CompareWindow viewer = ( CompareWindow ) getParent ( ) ; return viewer != _NULL ; }
25967	public void destroyView ( ) throws CanceledException { MeganProperties . removePropertiesListListener ( getJMenuBar ( ) . getRecentFilesListener ( ) ) ; super . destroyView ( ) ; }
25982	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( CalculateEcologicalIndices . HELLINGER ) ; }
25991	public Builder closeOnClick ( Boolean closeOnClick ) { this . closeOnClick = closeOnClick ; return this ; }
25996	@ Override public final int readInt ( ) throws IOException { dis . readFully ( work , _NUM , _NUM ) ; return ( work [ _NUM ] ) << _NUM | ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) << _NUM | ( work [ _NUM ] & _NUM ) ; }
26020	public void init ( float startX , float startY , float endX , float endY ) { setStart ( new PointF ( startX , startY ) ) ; setEnd ( new PointF ( endX , endY ) ) ; }
26033	public static void shutDown ( ) { isShutDown = _BOOL ; JobPoller . getInstance ( ) . stop ( ) ; }
26034	public boolean isApplicable ( ) { ParametersDialog viewer = ( ParametersDialog ) getParent ( ) ; return viewer != _NULL ; }
26035	public Builder cacheOnDisc ( ) { cacheOnDisc = _BOOL ; return this ; }
26053	protected void invalidateSchema ( ) { super . invalidateSchema ( ) ; this . filterColumns ( ) ; }
26054	private boolean endCondCheck ( ) { Conditions skillConditions = skillTemplate . getEndConditions ( ) ; return skillConditions != _NULL ? skillConditions . validate ( this ) : _BOOL ; }
26071	public CriteriaHibernateSpaceDataSourceConfigurer augmentInitialLoadEntries ( boolean augmentInitialLoadEntries ) { this . augmentInitialLoadEntries = augmentInitialLoadEntries ; return this ; }
26082	public void post ( Object event ) { eventBus . post ( event ) ; Logs . info ( _CHAR published an event ( { } ) _CHAR , event ) ; }
26085	private boolean journalRebuildRequired ( ) { final int redundantOpCompactThreshold = _NUM ; return redundantOpCount >= redundantOpCompactThreshold && redundantOpCount >= lruEntries . size ( ) ; }
26092	public SpaceTypeDescriptorBuilder idProperty ( String idPropertyName , boolean autoGenerateId ) { final SpaceIndexType indexType = autoGenerateId ? SpaceIndexType . NONE : SpaceIndexType . BASIC ; return idProperty ( idPropertyName , autoGenerateId , indexType ) ; }
26096	public void addSourcePath ( PathPart pathPart ) { sourcePath . add ( pathPart ) ; pathPart . program = this ; }
26101	@ Override public void printStackTrace ( PrintStream ps ) { super . printStackTrace ( ps ) ; if ( nested != _NULL ) nested . printStackTrace ( ps ) ; }
26136	public Interceptor [ ] buildMethodInterceptors ( Method method ) { Interceptors before = method . getAnnotation ( Interceptors . class ) ; return before != _NULL ? createInterceptors ( before ) : NULL_INTERCEPTOR_ARRAY ; }
26140	private void attachTransaction ( QuerySession session , Query query ) throws TransactionException , RemoteException , LeaseDeniedException { if ( ( ! session . isAutoCommit ( ) && session . getTransaction ( ) == _NULL ) || query . isForceUnderTransaction ( ) ) session . setTransaction ( createTransaction ( ) ) ; session . setQueryHandler ( this ) ; }
26141	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
26151	public static String slurpFile ( File file ) throws IOException { Reader r = new FileReader ( file ) ; return slurpReader ( r ) ; }
26188	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
26197	public void suspendEncoding ( ) throws java . io . IOException { flushBase64 ( ) ; this . suspendEncoding = _BOOL ; }
26200	@ NotNull public NlConfigurationToolbarFixture requireOrientation ( @ NotNull String name ) { Wait . seconds ( _NUM ) . expecting ( _CHAR configuration to be updated _CHAR ) . until ( _NULL ) ; return this ; }
26227	public JSONArray put ( int index , boolean value ) throws JSONException { this . put ( index , value ? Boolean . TRUE : Boolean . FALSE ) ; return this ; }
26229	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR SEARCH_SUFFIX \ _CHAR ( _CHAR + _CHAR \ _CHAR ID \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR SUFFIX \ _CHAR TEXT ) ; _CHAR ) ; }
26251	public void java_lang_Class_getSigners ( SootMethod method , ReferenceVariable thisVar , ReferenceVariable returnVar , ReferenceVariable params [ ] ) { ReferenceVariable tempFld = helper . tempField ( _CHAR < java . lang . Class signers > _CHAR ) ; helper . assign ( returnVar , tempFld ) ; }
26279	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
26293	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
26309	protected final void fireColumnEvent ( int idx , boolean prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
26315	public Object remove ( Object key ) { processQueue ( ) ; return map . remove ( Key . create ( key , _NULL ) ) ; }
26327	public PointsToSet reachingObjects ( PointsToSet s , final SootField f ) { if ( f . isStatic ( ) ) throw new RuntimeException ( _CHAR The parameter f must be an * instance * field . '' ) ; return reachingObjectsInternal ( s , f ) ; }
26336	public DocumentQuery addCondition ( DocumentCondition condition ) { this . conditions . add ( Objects . requireNonNull ( condition , _CHAR condition is required _CHAR ) ) ; return this ; }
26360	public Bundler putDouble ( String key , double value ) { bundle . putDouble ( key , value ) ; return this ; }
26361	private int peekToken ( ) throws XNIException { if ( fCurrentTokenIndex == fTokenCount ) reportError ( _CHAR XPointerElementSchemeProcessingError _CHAR , _NULL ) ; return fTokens [ fCurrentTokenIndex ] ; }
26383	@ Override public void computeTargetFeatures ( Target target ) { FeatureVector fv = targetFeatureComputer . computeFeatureVector ( target ) ; target . setFeatureVector ( fv ) ; }
26421	@ TargetApi ( _NUM ) public Bundler putCharSequenceArrayList ( String key , ArrayList < CharSequence > value ) { bundle . putCharSequenceArrayList ( key , value ) ; return this ; }
26446	public Builder className ( String className ) { this . className = className ; return this ; }
26452	public Builder autoPanPaddingBottomRight ( Point autoPanPaddingBottomRight ) { this . autoPanPaddingBottomRight = autoPanPaddingBottomRight ; return this ; }
26489	public static void pickImage ( Activity activity , String chooserTitle ) { Intent chooseImageIntent = getPickImageIntent ( activity , chooserTitle ) ; activity . startActivityForResult ( chooseImageIntent , PICK_IMAGE_ID ) ; }
26504	public int available ( ) throws IOException { int avail = ( count - pos - _NUM ) + in . available ( ) ; return ( avail < _NUM ? _NUM : avail ) ; }
26513	@ Override public void actionPerformed ( ActionEvent ev ) { executeImmediately ( _CHAR show window = message ; _CHAR ) ; execute ( _CHAR list assignmentsToLevels ; _CHAR ) ; }
26522	public void closeRows ( ) { SQLModel . closeQuietly ( currentRow ) ; SQLModel . closeQuietly ( currentStatement ) ; }
26532	public EntityQuery where ( Object ... fields ) { this . whereEntityCondition = EntityCondition . makeCondition ( UtilMisc . toMap ( fields ) ) ; return this ; }
26536	public void connectionLost ( final Throwable cause ) { logger . error ( _CHAR Connection lost _CHAR , cause ) ; connection . connectionLost ( cause ) ; }
26537	public void clearPayments ( ) { this . expireSingleUsePayments ( ) ; paymentInfo . clear ( ) ; }
26542	protected final void fireColumnEvent ( int idx , Object prev ) { Object [ ] lstnrs = m_listeners . getArray ( ) ; for ( int i = _NUM ; i < lstnrs . length ; ++ i ) ( ( ColumnListener ) lstnrs [ i ] ) . columnChanged ( this , idx , prev ) ; }
26552	private void createUI ( ) { readConfigFile ( _NULL , this , _CHAR Rule . xml _CHAR ) ; createFilter ( ) ; }
26557	@ Override public final void writeMapleAsciiString ( final String s ) { writeShort ( ( short ) s . length ( ) ) ; writeAsciiString ( s ) ; }
26566	public static void main ( String [ ] args ) { LinkTerrain simulation = new LinkTerrain ( ) ; simulation . run ( ) ; }
26583	public JsonObject add ( String name , String value ) { add ( name , Json . value ( value ) ) ; return this ; }
26587	public ResourcesPoet indent ( boolean indent ) { this . indent = indent ; return this ; }
26591	@ Override public WebDriver frame ( int index ) { frameSwitcher . putFramePathOnStack ( index ) ; return targetLocator . frame ( index ) ; }
26599	private void mark ( ) { theLastColumn = theCurrentColumn ; theLastLine = theCurrentLine ; }
26616	@ RequestMapping ( value = _CHAR / { namespace } _CHAR , method = RequestMethod . DELETE ) public void deleteKeys ( @ PathVariable String namespace , HttpServletResponse response ) throws WebMessageException { userKeyJsonValueService . deleteNamespaceFromUser ( currentUserService . getCurrentUser ( ) , namespace ) ; messageService . sendJson ( WebMessageUtils . ok ( _CHAR All keys from namespace _CHAR_CHAR_CHAR deleted . '' ) , response ) ; }
26619	private static int transformClassAccessForInstantRun ( int access ) { AccessRight accessRight = AccessRight . fromNodeAccess ( access ) ; return accessRight == AccessRight . PACKAGE_PRIVATE ? access | Opcodes . ACC_PUBLIC : access ; }
26624	public static boolean isConnectedFast ( Context context ) { NetworkInfo info = NetworkUtil . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && NetworkUtil . isConnectionFast ( info . getType ( ) , info . getSubtype ( ) ) ) ; }
26630	protected void createAccount ( ) { AccountManager am = AccountManager . get ( getApplicationContext ( ) ) ; am . addAccount ( MainApp . getAccountType ( ) , _NULL , _NULL , _NULL , this , new AccountCreationCallback ( ) , new Handler ( ) ) ; }
26645	public static ServiceType toServiceType ( Class cls ) throws MarshalException { if ( cls != _NULL ) return toServiceTypeBase ( cls , _BOOL ) . type ; return _NULL ; }
26649	private static void forceSet ( Object obj , Field f , Object val ) throws IllegalAccessException { f . setAccessible ( _BOOL ) ; f . set ( obj , val ) ; }
26651	public TrafficLogPredicate add ( Predicate < HarEntry > entry ) { predicates . add ( entry ) ; return this ; }
26659	public Builder zoomOutText ( String zoomOutText ) { this . zoomOutText = zoomOutText ; return this ; }
26689	public void reset ( ) { Iterator iIter = Arrays . asList ( getAvailableCategories ( ) ) . iterator ( ) ; while ( iIter . hasNext ( ) ) Repository . deleteObject ( ( String ) iIter . next ( ) , INSECTDB . CATEGORY_TYPE ) ; }
26695	public EmailBuilder to ( List < String > toAddresses ) { this . to . addAll ( toAddresses ) ; return this ; }
26702	public final TestSubscriber < T > requestedFusionMode ( int requestMode ) { this . requestedFusionMode = requestMode ; return this ; }
26703	public double reduce ( String numericColumnName , NumericReduceFunction function ) { Column column = column ( numericColumnName ) ; return function . reduce ( column . subset ( rowMap ) . toDoubleArray ( ) ) ; }
26705	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . isAllowNucleotides ( ) && viewer . isShowAminoAcids ( ) ; }
26708	public boolean isApplicable ( ) { ImportBlastDialog importBlastDialog = ( ImportBlastDialog ) getParent ( ) ; return importBlastDialog . isAppliable ( ) ; }
26709	private void drawSolidProgress ( Canvas canvas ) { canvas . drawArc ( mProgressRectF , DEFAULT_START_DEGREE , _NUM . _NUM , _BOOL , mProgressBackgroundPaint ) ; canvas . drawArc ( mProgressRectF , DEFAULT_START_DEGREE , _NUM . _NUM * getProgress ( ) / getMax ( ) , _BOOL , mProgressPaint ) ; }
26710	public void add ( short value ) { ensureCapacity ( fLength + _NUM ) ; fData [ fLength ++ ] = value ; }
26712	private String toHexString ( long value , int digits ) { long cutoff = _NUM << ( digits * _NUM ) ; return Long . toHexString ( cutoff | ( value & ( cutoff - _NUM ) ) ) . substring ( _NUM ) ; }
26713	public Builder subdomains ( String [ ] subdomains ) { this . subdomains = subdomains ; return this ; }
26726	private static String wrapWithMergeConflict ( String original , String added ) { String sep = _CHAR \ n _CHAR ; return _CHAR << << << < Original _CHAR + sep + original + sep + _CHAR ======= _CHAR + sep + added + _CHAR >> >> >> > Added _CHAR + sep ; }
26751	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
26758	@ Override protected void finalize ( ) throws Throwable { super . finalize ( ) ; _map . remove ( _key , _value ) ; }
26767	public static void checkout ( final ISVNRemoteFolder [ ] resources , final IProject [ ] projects , final IProgressMonitor monitor ) throws SVNException { CheckoutCommand command = new CheckoutCommand ( resources , projects ) ; command . run ( monitor ) ; }
26769	private boolean isUserLimitReachedLocked ( ) { int nUsers = mUsers . size ( ) ; return nUsers >= VUserManager . getMaxSupportedUsers ( ) ; }
26776	public final boolean canGetString ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canGetString ( ) ) ; }
26779	public int findFirstCompletelyVisibleItemPosition ( ) { final View child = findOneVisibleChild ( _NUM , layoutManager . getChildCount ( ) , _BOOL , _BOOL ) ; return child == _NULL ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }
26780	public DistributedLogNamespaceBuilder regionId ( int regionId ) { this . _regionId = regionId ; return this ; }
26784	@ Override public boolean onUnbind ( Intent intent ) { ( ( FileDownloaderBinder ) mBinder ) . clearListeners ( ) ; return _BOOL ; }
26787	@ Deprecated public SpaceTypeDescriptorBuilder addCompoundIndex ( String [ ] paths , SpaceIndexType indexType , boolean unique ) { if ( indexType != SpaceIndexType . BASIC ) throw new UnsupportedOperationException ( _CHAR only BASIC index type is supported for compoundindex '' ) ; return addIndex ( SpaceIndexFactory . createCompoundIndex ( paths , indexType , _NULL , unique ) ) ; }
26805	protected static void parseAndIgnoreWhitespace ( final String source , final ParsePosition pos ) { parseNextCharacter ( source , pos ) ; pos . setIndex ( pos . getIndex ( ) - _NUM ) ; }
26812	private synchronized void disconnect ( ) { disconnectQuietly ( ) ; notifyConnectionListenerOnDisconnection ( ) ; }
26822	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
26830	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
26835	public Builder dragging ( Boolean dragging ) { this . dragging = dragging ; return this ; }
26841	public synchronized ZooKeeperClientBuilder zkc ( ZooKeeperClient zkc ) { this . cachedClient = zkc ; return this ; }
26850	public void addResource ( ResourceDeclaration node ) { List < ResourceDeclaration > list = ( parent == _NULL || state == _NULL ) ? getResourceListNoTransform ( ) : getResourceList ( ) ; list . addChild ( node ) ; }
26855	public void renewUntil ( Lease lease , long desiredExpiration , long renewDuration , LeaseListener listener ) { validateDuration ( renewDuration , desiredExpiration == Lease . FOREVER , _CHAR desiredExpiration _CHAR ) ; addLease ( lease , desiredExpiration , renewDuration , listener , SystemTime . timeMillis ( ) ) ; }
26860	@ Override public int hashCode ( ) { if ( _stubId != _NULL ) return _stubId . hashCode ( ) ; return _part . hashCode ( ) ; }
26876	public void delete ( PushLog log ) { configPushLogDao . unBindApp ( log ) ; configPushLogDao . delete ( log . getId ( ) ) ; }
26886	public void upgradeDataDimensionItemsToReportingRateMetric ( ) { String sql = _CHAR update datadimensionitem _CHAR + _CHAR set metric =_CHAR _CHAR + _CHAR where datasetid is not _NULL _CHAR + _CHAR and metric is _NULL ; _CHAR ; executeSql ( sql ) ; }
26901	public static synchronized HostViewsSupport sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new HostViewsSupport ( ) ; return sharedInstance ; }
26905	public Bundler putFloatArray ( String key , float [ ] value ) { bundle . putFloatArray ( key , value ) ; return this ; }
26913	public void updateCloud ( int pointCount , FloatBuffer pointBuffer ) { calculateColors ( pointCount , pointBuffer ) ; updatePoints ( pointCount , pointBuffer , mColorArray ) ; }
26917	public void addGenericAttr ( GenericAttr g ) { generic . addElement ( g ) ; g . resolve ( this ) ; }
26918	public void addInit ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getInitListNoTransform ( ) : getInitList ( ) ; list . addChild ( node ) ; }
26922	public static Document parseDocument ( InputStream is , boolean validating ) throws ParserConfigurationException , SAXException , IOException { DocumentBuilder builder = createDocumentBuilder ( validating ) ; return builder . parse ( is ) ; }
26927	@ NotNull public NlConfigurationToolbarFixture requireDevice ( @ NotNull String id ) { Wait . seconds ( _NUM ) . expecting ( _CHAR configuration to be updated _CHAR ) . until ( _NULL ) ; return this ; }
26939	public void add ( final int location , final T object ) { this . data . add ( location , object ) ; this . notifyItemInserted ( location ) ; }
26963	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new Opt ( ) , _NUM ) ; }
26975	@ Override public void stop ( Runnable arg0 ) { stop ( ) ; arg0 . run ( ) ; }
26985	public Bundler putAll ( Bundle bundle ) { this . bundle . putAll ( bundle ) ; return this ; }
26986	public Builder clickable ( Boolean clickable ) { this . clickable = clickable ; return this ; }
26989	public int failed ( String ip , String sid , String useragent ) { set ( _CHAR failtimes _CHAR , getInt ( _CHAR failtimes _CHAR ) + _NUM ) ; return Lock . locked ( getId ( ) , sid , ip , useragent ) ; }
27012	public static Record createRecord ( ModelRecord modelRecord , Map < String , Object > fields ) throws DataFileException { Record record = new Record ( modelRecord , fields ) ; return record ; }
27016	public JSONArray optJSONArray ( String key ) { Object o = this . opt ( key ) ; return o instanceof JSONArray ? ( JSONArray ) o : _NULL ; }
27038	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
27048	public Builder withPrevKV ( boolean prevKV ) { this . prevKV = prevKV ; return this ; }
27056	public EmailBuilder cc ( List < String > ccAddresses ) { this . cc . addAll ( ccAddresses ) ; return this ; }
27062	public void invalidate ( ) { damageReport ( ) ; super . invalidate ( ) ; }
27068	private void expectException ( ) { expectedException . expect ( IllegalArgumentException . class ) ; expectedException . expectMessage ( EMPTY_ERROR_MESSAGE ) ; }
27096	public static void print ( short x ) { out . print ( x ) ; out . flush ( ) ; }
27099	public void close ( ) throws IOException { infoSection . updateModificationDate ( ) ; infoSection . write ( io ) ; }
27103	public boolean isActive ( ) { if ( getStatus ( ) == XtnStatus . UNINITIALIZED || getStatus ( ) == XtnStatus . BEGUN ) return _BOOL ; return _BOOL ; }
27109	public void openProperties ( DataSource dataSource , int propertiesCategory ) { if ( dataSource == _NULL ) throw new IllegalArgumentException ( _CHAR DataSource can not be _NULL _CHAR ) ; PropertiesConfigurator . editProperties ( dataSource , propertiesCategory ) ; }
27138	public T remove ( HttpSession session , Map < String , Object > expandContext ) { AttributeAccessor < T > aa = new AttributeAccessor < T > ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; return aa . remove ( session ) ; }
27147	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . getFirstPC ( ) == _NUM && viewer . getPcoaTab ( ) . getSecondPC ( ) == _NUM && ! viewer . getPcoaTab ( ) . isIs3dMode ( ) ; }
27151	public Builder maxHeight ( Number maxHeight ) { this . maxHeight = maxHeight ; return this ; }
27163	public boolean isValidLocalTld ( String lTld ) { lTld = unicodeToASCII ( lTld ) ; return Arrays . binarySearch ( LOCAL_TLDS , chompLeadingDot ( lTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
27167	public void activate ( ) { mSensorManager . registerListener ( this , mSensor , SensorManager . SENSOR_DELAY_UI ) ; mActive = _BOOL ; }
27177	public Builder popUpAnchor ( Point popUpAnchor ) { this . popUpAnchor = popUpAnchor ; return this ; }
27188	public boolean isApplicable ( ) { AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; return viewer . getAlignment ( ) . getNumberOfSequences ( ) > _NUM && viewer . getSelectedBlock ( ) . isSelected ( ) && viewer . getSelectedBlock ( ) . getLastRow ( ) < viewer . getAlignment ( ) . getNumberOfSequences ( ) - _NUM ; }
27232	public static Value noLocal ( Value val ) { if ( val != _NULL && ! isLocal ( val ) ) return val ; else return _NULL ; }
27237	public static String formatPrice ( Double price ) { if ( price == _NULL ) return _CHAR _CHAR ; return formatPrice ( price . doubleValue ( ) ) ; }
27256	public QueryAnswers resolve ( MatchQuery inputQuery , boolean materialise ) { Query query = new ReasonerMatchQuery ( inputQuery , graph ) ; return resolveQuery ( query , materialise ) ; }
27260	private int parseLastInt ( String line ) { String lastInt = line . trim ( ) . substring ( line . lastIndexOf ( _CHAR _CHAR ) ) ; return Integer . parseInt ( lastInt . trim ( ) ) ; }
27278	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
27282	private static boolean permissionExists ( String permission ) { Integer minVersion = MIN_SDK_PERMISSIONS . get ( permission ) ; return minVersion == _NULL || Build . VERSION . SDK_INT >= minVersion ; }
27283	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
27313	public Bindings add ( String property , JToggleButton c ) { registerPropertyChangeListener ( c ) ; return add ( new JToggleButtonBinding ( property , c , _BOOL ) ) ; }
27325	public static double toDouble ( Object obj ) { Double result = toDoubleObject ( obj ) ; return result == _NULL ? _NUM . _NUM : result . doubleValue ( ) ; }
27326	public void emitWithGravity ( View emiter , int gravity , int particlesPerSecond , int emitingTime ) { configureEmiter ( emiter , gravity ) ; startEmiting ( particlesPerSecond , emitingTime ) ; }
27328	public void loading ( ) { mHintView . setVisibility ( View . GONE ) ; mProgressBar . setVisibility ( View . VISIBLE ) ; }
27333	private double nextAfter ( final double t ) { final double dir = forward ? Double . POSITIVE_INFINITY : Double . NEGATIVE_INFINITY ; return FastMath . nextAfter ( t , dir ) ; }
27336	public boolean hasDataRecords ( ) { long blkNum = ( Long ) getVal ( OFFSET_TS_BLOCKID , BIGINT ) . asJavaVal ( ) ; return blkNum != NO_SLOT_BLOCKID ? _BOOL : _BOOL ; }
27339	public CatchOptions withProbability ( double probability ) { this . probability = probability ; return this ; }
27345	public ViewsFinder includingFromViews ( ) { this . includeRootView = _BOOL ; return this ; }
27363	public static byte [ ] readPackedSequence ( ByteInputBuffer buffer , int query_len , int bits ) { int size = ( query_len * bits + _NUM ) / _NUM ; return buffer . readBytes ( size ) ; }
27364	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . isShowGroupsAsConvexHulls ( ) ; }
27365	public static void delete ( String event ) { instance . events . remove ( event ) ; log ( event + _CHAR deleted _CHAR ) ; }
27370	public static synchronized void removeInstance ( String providerName ) { LUCENE_SEARCH_PROVIDERS . remove ( providerName ) ; Utils . deleteFiles ( getProviderPath ( providerName ) ) ; }
27371	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
27375	public static void sendFCMTokenToServer ( Context context , boolean sent ) { SharedPreferences pref = PreferenceManager . getDefaultSharedPreferences ( context . getApplicationContext ( ) ) ; pref . edit ( ) . putBoolean ( SENT_TOKEN_TO_SERVER , sent ) . apply ( ) ; }
27378	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
27381	public Builder considerExifParams ( boolean considerExifParams ) { this . considerExifParams = considerExifParams ; return this ; }
27382	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; ConstrainableProxyUtil . verifyConsistentConstraints ( constraints , server , methodMappings ) ; }
27389	public final static String formatProtocolVersion ( final SaveProtocolVersion version , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = SaveLineFormatter . DEFAULT ; return formatter . appendProtocolVersion ( _NULL , version ) . toString ( ) ; }
27390	@ Override public void parseXPointer ( String part ) throws XNIException { fShortHandPointer = part ; fIsFragmentResolved = _BOOL ; }
27392	public DefaultHibernateSpaceSynchronizationEndpointConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
27395	public void delete ( String id ) { log . debug ( _CHAR Request to delete PetCategory : { } _CHAR , id ) ; petCategoryRepository . delete ( UUID . fromString ( id ) ) ; }
27400	public final boolean canGetBoolean ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canGetBoolean ( ) ) ; }
27401	private void layout ( int width , int height ) { int itemsWidth = width - _NUM * PADDING ; itemsLayout . layout ( _NUM , _NUM , itemsWidth , height ) ; }
27416	public HumanTime ms ( int n ) { delta += Math . abs ( n ) ; return this ; }
27432	public Builder preProcessor ( BitmapProcessor preProcessor ) { this . preProcessor = preProcessor ; return this ; }
27433	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
27442	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
27448	@ SuppressWarnings ( _CHAR unused _CHAR ) public void hideBackButton ( ) { backButton . setVisibility ( View . INVISIBLE ) ; skipButton . setVisibility ( View . GONE ) ; }
27452	public void putObject ( String key , Object obj , Gson gson ) { checkForNullKey ( key ) ; putString ( key , gson . toJson ( obj ) ) ; }
27454	public void translate ( double x , double y ) { this . translation . x += x ; this . translation . y += y ; }
27459	public void addStmt ( Stmt node ) { List < Stmt > list = ( parent == _NULL || state == _NULL ) ? getStmtListNoTransform ( ) : getStmtList ( ) ; list . addChild ( node ) ; }
27487	public Object clone ( ) { Object retval = super . clone ( ) ; return retval ; }
27499	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
27504	private void initBulkProcessor ( ) { this . bulkProcessor = BulkProcessor . builder ( client , createBulkProcessorListener ( ) ) . setName ( bulkProcessorName ) . setBulkActions ( bulkActions ) . setBulkSize ( new ByteSizeValue ( bulkSize , ByteSizeUnit . GB ) ) . setFlushInterval ( TimeValue . timeValueSeconds ( flushInterval ) ) . setConcurrentRequests ( concurrent ) . build ( ) ; log . debug ( _CHAR initBulkSettings ( ) - BulkProcessor created . '' ) ; }
27505	public void close ( ) { currentPage . close ( ) ; dirsMayBeUpdated = _NULL ; }
27513	@ Override public void readExternal ( ObjectInput in ) throws IOException , ClassNotFoundException { PlatformLogicalVersion version = LRMIInvocationContext . getEndpointLogicalVersion ( ) ; readExternal ( in , version ) ; }
27517	@ Override public void onStart ( ) { super . onStart ( ) ; setData ( ) ; }
27518	public void my_readFromParcel ( Parcel in ) { x = in . readFloat ( ) ; y = in . readFloat ( ) ; }
27530	public void refreshPanel ( ) { revalidate ( ) ; repaint ( ) ; }
27541	@ NotNull public static String attrOrDefault ( @ NotNull Attributes attributes , @ NotNull String name , @ NotNull String defaultValue ) { String value = attributes . getValue ( name ) ; return ( value != _NULL ) ? value : defaultValue ; }
27554	public Builder opacity ( Number opacity ) { this . opacity = opacity ; return this ; }
27558	@ Override public void close ( ) { s1 . close ( ) ; if ( s2 != _NULL ) s2 . close ( ) ; }
27559	public boolean isXMLDoc ( ) { if ( isXMLDoc == UNKNOWN_TYPE ) isXMLDoc = getDocumentType ( ) ; return isXMLDoc == VALID_XML ; }
27563	protected boolean sameLanguageAsIncludeParent ( ) { String parentLanguage = getIncludeParentLanguage ( ) ; return parentLanguage != _NULL && parentLanguage . equalsIgnoreCase ( fCurrentLanguage ) ; }
27581	public static void printf ( String format , Object ... args ) { out . printf ( LOCALE , format , args ) ; out . flush ( ) ; }
27594	public void addColor ( int color ) { if ( mColors == _NULL ) mColors = new ArrayList < > ( ) ; mColors . add ( color ) ; }
27595	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
27597	@ Deprecated public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
27601	private boolean resolveEverything ( ) { if ( Options . v ( ) . on_the_fly ( ) ) return _BOOL ; return ( Options . v ( ) . whole_program ( ) || Options . v ( ) . whole_shimple ( ) || Options . v ( ) . full_resolver ( ) || Options . v ( ) . output_format ( ) == Options . output_format_dava ) ; }
27610	public void monitor ( String key ) { Timer t = new Timer ( _BOOL ) ; t . schedule ( new WatchableRegistration ( key ) , _NUM * _NUM , _NUM * _NUM ) ; }
27611	public Builder fillColor ( String fillColor ) { this . fillColor = fillColor ; return this ; }
27612	public Builder position ( String position ) { this . position = position ; return this ; }
27613	protected void modify ( ) { ++ m_modCount ; m_cur =- _NUM ; }
27619	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
27631	@ Override public void onActivityResult ( int requestCode , int resultCode , Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; ReactiveLogin . onActivityResult ( requestCode , resultCode , data ) ; }
27640	void submit ( ProcessAndDisplayImageTask task ) { initExecutorsIfNeed ( ) ; taskExecutorForCachedImages . execute ( task ) ; }
27643	public void destroy ( ) { BackgroundExecutor . cancelAll ( _CHAR _CHAR , _BOOL ) ; UiThreadExecutor . cancelAll ( _CHAR _CHAR ) ; }
27653	public static void parseAndIgnoreWhitespace ( final String source , final ParsePosition pos ) { parseNextCharacter ( source , pos ) ; pos . setIndex ( pos . getIndex ( ) - _NUM ) ; }
27674	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
27701	public Provider < T > withKey ( Object key ) { this . key = key . toString ( ) ; return new Provider < > ( this ) ; }
27702	private static void decreaseItemFromPlayer ( Player seller , Item item , TradeItem tradeItem ) { seller . getInventory ( ) . decreaseItemCount ( item , tradeItem . getCount ( ) ) ; seller . getStore ( ) . getTradeItemByObjId ( item . getObjectId ( ) ) . decreaseCount ( tradeItem . getCount ( ) ) ; }
27709	public DefaultHibernateSpaceDataSourceConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
27715	public void invalidateAuthToken ( ) { mAccountManager . invalidateAuthToken ( AccountConstants . ACCOUNT_TYPE , mAuthToken ) ; mAuthToken = _NULL ; }
27719	public boolean willOpenInForeground ( TabLaunchType type , boolean isNewTabIncognito ) { if ( type == TabLaunchType . FROM_RESTORE ) return _BOOL ; return type != TabLaunchType . FROM_LONGPRESS_BACKGROUND || ( ! mTabModelSelector . isIncognitoSelected ( ) && isNewTabIncognito ) ; }
27729	private static double computeJSD ( double [ ] px , double [ ] py ) { double [ ] m = computeMean ( px , py ) ; return _NUM . _NUM * ( computeKLD ( px , m ) + computeKLD ( py , m ) ) ; }
27734	public void write ( Writer w ) throws IOException { boolean useOriginal = ( originalData != _NULL && disabledSamples . size ( ) > _NUM ) ; write ( w , useOriginal ) ; }
27735	public static String [ ] splitMultiplePacket ( String packet ) { String _partitioningPacket [ ] = packet . split ( Settings . sReceiverSplitMultipleToken ) ; return _partitioningPacket ; }
27736	public void addRelationshipFilter ( RelatedFinder relatedFinder , Operation filter ) { Operation existing = this . filters . get ( relatedFinder ) ; this . filters . put ( relatedFinder , existing == _NULL ? filter : existing . or ( filter ) ) ; }
27742	public ServerConfiguration enableDurableWrite ( boolean enabled ) { setProperty ( SERVER_DURABLE_WRITE_ENABLED , enabled ) ; return this ; }
27749	public void onCompletion ( MediaPlayer player ) { Log . d ( LOG_TAG , _CHAR on completion is calling stopped _CHAR ) ; this . setState ( STATE . MEDIA_STOPPED ) ; }
27751	public static boolean isConnected ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) ) ; }
27755	@ Override public DocumentType createDocumentType ( String qualifiedName , String publicID , String systemID ) { checkQName ( qualifiedName ) ; return new DocumentTypeImpl ( _NULL , qualifiedName , publicID , systemID ) ; }
27768	public Builder clickable ( Boolean clickable ) { this . clickable = clickable ; return this ; }
27770	public void loadDataStringFromFile ( String sFilename ) throws java . io . IOException , java . io . FileNotFoundException { String sDataString = utils . loadFileToStringWithNewlines ( sFilename ) ; setDataString ( sDataString ) ; }
27771	public Builder useAutoTag ( boolean val ) { useAutoTag = val ; return this ; }
27776	public int addOrderTerm ( GenericValue orderTerm ) { orderTerms . add ( orderTerm ) ; return orderTerms . indexOf ( orderTerm ) ; }
27786	@ Deprecated public static String percentageWithTwoCharacters ( final double decimalNumber ) { final int percentage = ( int ) Math . round ( decimalNumber * PERCENTAGE_FACTOR ) ; return ( percentage < PERCENTAGE_FACTOR ) ? StringUtils . leftPad ( String . valueOf ( percentage ) , _NUM , _CHAR ) : _CHAR XX _CHAR ; }
27789	public RequestHandle delete ( Context context , String url , ResponseHandlerInterface responseHandler ) { final HttpDelete delete = new HttpDelete ( url ) ; return sendRequest ( httpClient , httpContext , delete , _NULL , responseHandler , context ) ; }
27794	public static JsonRootNode readJSON ( File file ) { StringBuffer strings = FileUtility . readFromFile ( file ) ; return jsonFromString ( strings . toString ( ) ) ; }
27800	public void confirm ( ) { okButton . click ( ) ; bobcatWait . withTimeout ( Timeouts . SMALL ) . until ( elementNotPresentOrVisible ( By . cssSelector ( CSS ) ) ) ; }
27818	public static void deleteAircraft ( AirMapAircraft aircraft , AirMapCallback < Void > listener ) { String url = String . format ( pilotAircraftByIdUrl , AirMap . getUserId ( ) , aircraft . getAircraftId ( ) ) ; AirMap . getClient ( ) . delete ( url , new VoidCallback ( listener ) ) ; }
27825	public DefaultHibernateSpaceDataSourceConfigurer augmentInitialLoadEntries ( boolean augmentInitialLoadEntries ) { this . augmentInitialLoadEntries = augmentInitialLoadEntries ; return this ; }
27832	@ Override public void updateUserLayers ( ) { createUserLayerDataSources ( ) ; notifyDataSourceLoaded ( ) ; }
27855	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
27862	public void clear ( ) { coveringView = _NULL ; touchPoint = _NULL ; }
27863	private boolean regionDialingFromMatchesNumber ( PhoneNumber number , String regionDialingFrom ) { List < String > regionCodes = getRegionCodesForCountryCode ( number . getCountryCode ( ) ) ; return regionCodes . contains ( regionDialingFrom ) ; }
27876	private static void markChecked ( String category , String name , boolean createWithProject ) { String key = getCheckKey ( category , name , createWithProject ) ; ourTemplatesChecked . add ( key ) ; }
27900	public void suspendEncoding ( ) throws java . io . IOException { flushBase64 ( ) ; this . suspendEncoding = _BOOL ; }
27916	public void beginOperation ( ISVNClientAdapter aSvnClient , OperationProgressNotifyListener anOperationNotifyListener ) { this . operationNotifyListener = anOperationNotifyListener ; beginOperation ( aSvnClient ) ; }
27930	protected void merge ( Object in1 , Object in2 , Object out ) { FlowSet inSet1 = ( ( FlowSet ) in1 ) . clone ( ) , inSet2 = ( ( FlowSet ) in2 ) . clone ( ) , outSet = ( FlowSet ) out ; inSet1 . union ( inSet2 , outSet ) ; }
27932	public static String extractCSVOutputByFieldNum ( String csvOut , int fieldNum ) { String tokens [ ] = csvOut . split ( _CHAR , ( ? = ( [ ^\ _CHAR ] *\ _CHAR [ ^\ _CHAR ] *\ _CHAR ) * [ ^\ _CHAR ] * $ ) _CHAR , - _NUM ) ; return tokens [ fieldNum ] ; }
27937	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = StringCodingUtils . getBytes ( input , Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
27944	public HumanTime y ( int n ) { delta += YEAR * Math . abs ( n ) ; return this ; }
27945	public static String removeLastComma ( String string ) { string = StringUtils . stripEnd ( string , _CHAR _CHAR ) ; return StringUtils . removeEndIgnoreCase ( string , _CHAR , _CHAR ) ; }
27952	public synchronized BookKeeperClientBuilder bkc ( BookKeeperClient bkc ) { this . cachedClient = bkc ; return this ; }
27966	public void addJavaDirectory ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myJavaDirectories . add ( directory ) ; }
27970	public static float calculateRight ( float left , float top , float bottom , float targetAspectRatio ) { final float height = bottom - top ; return ( targetAspectRatio * height ) + left ; }
27974	public static void print ( double x ) { out . print ( x ) ; out . flush ( ) ; }
27975	private void clearIssueReferences ( String launchId ) { List < FailReferenceResource > issues = issuesRepository . findAllLaunchIssues ( launchId ) ; issuesRepository . delete ( issues ) ; }
27994	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR HOUR_FORE_CAST \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
27997	public boolean isShortFeature ( int index ) { index -= numByteFeatures ; return _NUM <= index && index < numShortFeatures ; }
28004	public static void primeLocationForGeoHeader ( Context context ) { if ( ! hasGeolocationPermission ( context ) ) return ; GeolocationTracker . refreshLastKnownLocation ( context , REFRESH_LOCATION_AGE ) ; }
28010	public MyDialog outDuration ( int duration ) { mOutDuration = duration ; return this ; }
28017	public RecognitionRequest addTagForSelectClasses ( String tag ) { selectClasses . add ( tag ) ; return this ; }
28020	public Builder translationY ( float translationY ) { this . translationY = translationY ; return this ; }
28033	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
28036	@ NotNull public static BufferedImage trim ( @ NotNull BufferedImage image ) { BufferedImage cropped = ImageUtils . cropBlank ( image , _NULL , TYPE_INT_ARGB ) ; return cropped != _NULL ? cropped : image ; }
28037	public final ProgressEvent increaseProgress ( ) { Progress ++ ; return this ; }
28043	@ Override public Scan open ( ) { Scan s = p . open ( ) ; return new ProjectScan ( s , schema . fields ( ) ) ; }
28051	public static synchronized SnapshotsContainer sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new SnapshotsContainer ( ) ; return sharedInstance ; }
28055	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + TABLENAME ; db . execSQL ( sql ) ; }
28058	private static String separeMetaTagsContent ( String content ) { String result = Regex . pregMatch ( content , Regex . METATAG_CONTENT_PATTERN , _NUM ) ; return htmlDecode ( result ) ; }
28070	public Builder animate ( Boolean animate ) { this . animate = animate ; return this ; }
28075	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( CalculateEcologicalIndices . KULCZYNSKI ) ; }
28076	@ RequestMapping ( value = _CHAR / servers / shutdown _CHAR , method = RequestMethod . POST ) public JsonResponse shutdownServer ( @ RequestParam ( _CHAR server _CHAR ) String server ) { serverService . shutdownServer ( server ) ; return JsonResponse . ok ( _BOOL ) ; }
28085	public LogSubject containsNoMoreMessages ( ) { assertThat ( messages ) . isEmpty ( ) ; return this ; }
28099	private void updateFieldStates ( ) { backgroundColourButton . setEnabled ( ! chckboxTransparent . isSelected ( ) ) ; borderColourButton . setEnabled ( chckboxShowBorder . isSelected ( ) ) ; }
28107	public void animateApperance ( ) { mIsVisible = _BOOL ; mPanel . addToAnimation ( this , AnimationType . APPEARANCE , _NUM . f , _NUM . f , ContextualSearchPanelAnimation . MAXIMUM_ANIMATION_DURATION_MS , _NUM ) ; }
28119	final void removeHalfEdges ( DoubleEdgeListHalfEdge edge ) { int index = this . edges . indexOf ( edge ) ; this . removeHalfEdges ( index , edge ) ; }
28130	private FieldVector3D < T > vector ( final double x , final double y , final double z ) { final T zero = q0 . getField ( ) . getZero ( ) ; return new FieldVector3D < T > ( zero . add ( x ) , zero . add ( y ) , zero . add ( z ) ) ; }
28133	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
28136	public void loadDataStringFromFile ( String sFilename ) throws java . io . IOException , java . io . FileNotFoundException { String sDataString = utils . loadFileToStringWithNewlines ( sFilename ) ; setDataString ( sDataString ) ; }
28145	public Bundler putLong ( String key , long value ) { bundle . putLong ( key , value ) ; return this ; }
28161	public String createAuthorityName ( Role role ) { String roleName = role . getRoleName ( ) . toUpperCase ( ) ; return rolePrefix + roleName ; }
28176	public static byte [ ] decode ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decode ( bytes , _NUM , bytes . length ) ; }
28183	@ Override public void onClick ( View v ) { LogUtil . e ( _CHAR position = _CHAR + position ) ; new BossZoomHelper ( ( Activity ) context , bossJumpView , _NUM ) ; }
28185	public static void startPhysicalWeb ( ChromeApplication application ) { PhysicalWebBleClient physicalWebBleClient = PhysicalWebBleClient . getInstance ( application ) ; physicalWebBleClient . subscribe ( ) ; }
28192	public BaseViewHolder addOnLongClickListener ( int viewId ) { itemChildLongClickViewIds . add ( viewId ) ; return this ; }
28193	public static void updateAircraft ( AirMapAircraft aircraft , AirMapCallback < AirMapAircraft > listener ) { String url = String . format ( pilotAircraftByIdUrl , AirMap . getUserId ( ) , aircraft . getAircraftId ( ) ) ; AirMap . getClient ( ) . patch ( url , aircraft . getAsParamsPatch ( ) , new GenericOkHttpCallback ( listener , AirMapAircraft . class ) ) ; }
28196	public static void main ( String [ ] args ) { Thrust simulation = new Thrust ( ) ; simulation . run ( ) ; }
28199	public Bundler putIntArray ( String key , int [ ] value ) { bundle . putIntArray ( key , value ) ; return this ; }
28200	public void destroyView ( ) throws CanceledException { MeganProperties . removePropertiesListListener ( getJMenuBar ( ) . getRecentFilesListener ( ) ) ; super . destroyView ( ) ; }
28209	public double estimateCost ( double effortApplied , double averageWage ) { double estimatedCost = effortApplied * ( averageWage / _NUM ) * _NUM . _NUM ; return estimatedCost ; }
28219	@ Override public void onLoadPackageCheckFail ( File patchFile , int errorCode ) { TinkerLog . i ( TAG , _CHAR load patch package check fail file path : % s , errorCode : % d '' , patchFile . getAbsolutePath ( ) , errorCode ) ; Tinker . with ( context ) . cleanPatch ( ) ; }
28221	public int writeGraphToFile ( byte [ ] img , String file ) { File to = new File ( file ) ; return writeGraphToFile ( img , to ) ; }
28230	public Builder marginTop ( int marginTop ) { this . marginTop = marginTop ; return this ; }
28236	private void delayedHide ( int delayMillis ) { mHideHandler . removeCallbacks ( mHideRunnable ) ; mHideHandler . postDelayed ( mHideRunnable , delayMillis ) ; }
28240	public Builder filter ( Filter filter ) { actionList . add ( new DataAction ( filter ) ) ; return this ; }
28242	private void init ( ) throws IOException { initPath ( ) ; openThriftReader ( ) ; }
28244	public boolean isValidGenericTld ( String gTld ) { gTld = unicodeToASCII ( gTld ) ; return Arrays . binarySearch ( GENERIC_TLDS , chompLeadingDot ( gTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
28255	public void add ( String expr , StrokeAction f ) { Predicate p = ( Predicate ) ExpressionParser . parse ( expr ) ; super . add ( p , f ) ; }
28279	public SpaceTypeDescriptorBuilder replicable ( boolean replicable ) { this . _replicable = replicable ; return this ; }
28282	public boolean equals ( ShoppingCartItem item ) { if ( item == _NULL ) return _BOOL ; return this . equals ( item . getProductId ( ) , item . additionalProductFeatureAndAppls , item . attributes , item . prodCatalogId , item . selectedAmount , item . getItemType ( ) , item . getItemGroup ( ) , item . getIsPromo ( ) ) ; }
28288	public Builder keepInView ( Boolean keepInView ) { this . keepInView = keepInView ; return this ; }
28293	public void clear ( ) { m_lucene = new LuceneSearcher ( ) ; super . clear ( ) ; }
28317	public Builder buttonTextColor ( int buttonTextColor ) { this . buttonTextColor = buttonTextColor ; return this ; }
28332	public Builder fillRule ( String fillRule ) { this . fillRule = fillRule ; return this ; }
28356	protected void readEntityFromNBT ( NBTTagCompound compound ) { this . setFuse ( compound . getShort ( _CHAR Fuse _CHAR ) ) ; this . setFacing ( compound . getByte ( _CHAR Facing _CHAR ) ) ; }
28377	public boolean authenticate ( String username , String password , boolean isServiceAuth ) throws AuthenticatorException { Debug . logInfo ( this . getClass ( ) . getName ( ) + _CHAR Authenticator authenticate ( ) -- returning _BOOL _CHAR , module ) ; return _BOOL ; }
28399	public Builder bounceAtZoomLimits ( Boolean bounceAtZoomLimits ) { this . bounceAtZoomLimits = bounceAtZoomLimits ; return this ; }
28403	@ Override public void fatalError ( String domain , String key , XMLParseException ex ) throws XNIException { printError ( _CHAR Fatal Error _CHAR , ex ) ; throw ex ; }
28408	public void fromAngleAxis ( float angle , Vector3f axis ) { Vector3f normAxis = axis . normalize ( ) ; fromAngleNormalAxis ( angle , normAxis ) ; }
28416	@ Deprecated public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
28417	public boolean equals ( Object obj ) { if ( ! ( obj instanceof LocatorReg ) ) return _BOOL ; return l . equals ( ( ( LocatorReg ) obj ) . l ) ; }
28426	public static void main ( String [ ] args ) { Thread thread = new Thread ( new WebBrowserConnection ( ) ) ; thread . start ( ) ; }
28427	private float x ( TouchState s ) { final float currToTan = ( float ) Math . sqrt ( ( s . distance * s . distance ) - ( mScaledTouchSlop * mScaledTouchSlop ) ) ; return currToTan * ( currToTan / s . distance ) ; }
28439	@ Override public void onUIRefreshBegin ( PtrFrameLayout frame ) { mDrawable . setAlpha ( _NUM ) ; mDrawable . start ( ) ; }
28445	private void addDataSource ( EsriDataSourceInterface dataSourceObj ) { logger . info ( _CHAR \ t _CHAR + dataSourceObj . getName ( ) ) ; dataSourceMap . put ( dataSourceObj . getType ( ) , dataSourceObj ) ; }
28469	public static boolean isMonth ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return isIntegerInRange ( s , _NUM , _NUM ) ; }
28472	public AemPathWindow clickOk ( ) { okButton . click ( ) ; return this ; }
28482	public static Zmat o ( Zmat A ) throws JampackException { if ( A . nrow != A . ncol ) throw new JampackException ( _CHAR Can not compute the inverse of a rectangular matrix . '' ) ; return Solve . aib ( A , Eye . o ( A . nrow ) ) ; }
28483	public void removeLocations ( Collection < PBLocation > locations ) { l_locations . removeAll ( locations ) ; if ( ! l_locations . isEmpty ( ) ) l_locations . get ( _NUM ) . setType ( StringConst . EMPTY ) ; }
28500	public Bundler putInt ( String key , int value ) { bundle . putInt ( key , value ) ; return this ; }
28523	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
28531	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
28532	@ Override public void onResume ( ) { super . onResume ( ) ; startCameraSource ( ) ; }
28534	public static Map < String , Object > createDataResource ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = createDataResourceMethod ( dctx , context ) ; return result ; }
28538	public RetrofitClient createBaseApi ( ) { apiService = create ( BaseApiService . class ) ; return this ; }
28543	public UnrevealBuilder withUnrevealDuration ( final int unrevealDuration ) { this . mUnrevealDuration = unrevealDuration ; return this ; }
28561	public void finish ( ) { this . done = _BOOL ; this . interrupt ( ) ; }
28564	public static void main ( final String [ ] args ) throws InterruptedException { withGeneric ( ) ; withoutGeneric ( ) ; }
28574	private boolean journalRebuildRequired ( ) { final int REDUNDANT_OP_COMPACT_THRESHOLD = _NUM ; return redundantOpCount >= REDUNDANT_OP_COMPACT_THRESHOLD && redundantOpCount >= lruEntries . size ( ) ; }
28582	private static String readFile ( File file , Charset encoding ) throws IOException { byte [ ] encoded = Files . readAllBytes ( Paths . get ( file . getAbsolutePath ( ) ) ) ; return new String ( encoded , encoding ) ; }
28596	private void readObject ( final ObjectInputStream stream ) throws IOException , ClassNotFoundException { stream . defaultReadObject ( ) ; count = _NUM ; }
28601	public AemInsertWindow waitToBeDisplayed ( ) { wait . withTimeout ( Timeouts . MEDIUM ) . until ( ExpectedConditions . visibilityOf ( currentScope ) ) ; return this ; }
28613	public void join ( TransactionParticipant part , long crashCount ) throws UnknownTransactionException , CannotJoinException , CrashCountException , RemoteException { if ( crashCount == EMBEDDED_CRASH_COUNT ) mgr . join ( id , part , crashCount , this ) ; else mgr . join ( id , part , crashCount ) ; }
28639	public Bundler putIntegerArrayList ( String key , ArrayList < Integer > value ) { bundle . putIntegerArrayList ( key , value ) ; return this ; }
28643	public static void createCodeGroupClass ( ICodeUnit unit , StructureInfo struInfo ) { IMetadataGroup grp = new DexMetadataGroupClass ( _CHAR codeAnalysisClasses _CHAR , MetadataGroupType . CLASSID , struInfo ) ; unit . getMetadataManager ( ) . addGroup ( grp ) ; }
28675	@ Override public void close ( ) { idx = _NUM ; mark = _NUM ; }
28689	public static int convertDPItoPixels ( Context context , int dpi ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpi * scale + _NUM . _NUM ) ; }
28690	void discardFromRetired ( ResourceKey < K > resourceKey , R resource ) { resourceKey . removeFromTransferStack ( ) ; lifecycle . onRemoval ( resourceKey . getKey ( ) , resource ) ; }
28697	public final boolean canSetString ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canSetString ( ) ) ; }
28700	public void enqueueDownloadManagerRequest ( final DownloadInfo info , boolean notifyCompleted ) { EnqueueDownloadRequestTask task = new EnqueueDownloadRequestTask ( info ) ; task . execute ( notifyCompleted ) ; }
28702	@ ObjectiveCName ( _CHAR addRecordEventsListener : _CHAR ) public List addRecordEventsListener ( RecordEventsListener recordEventsListener ) { this . record . addRecordEventsListener ( recordEventsListener ) ; return this ; }
28718	public boolean drain ( ) { timer . stop ( _CHAR AudioOutput _CHAR ) ; return _BOOL ; }
28740	public static int modulateAlpha ( int colorAlpha , int alpha ) { int scale = alpha + ( alpha >> _NUM ) ; return colorAlpha * scale >> _NUM ; }
28747	public static void main ( String [ ] args ) { TrackingContactIds simulation = new TrackingContactIds ( ) ; simulation . run ( ) ; }
28752	private void magnitudePhaseFFT ( double [ ] re , double [ ] im ) { powerPhaseFFT ( re , im ) ; toMagnitude ( re ) ; }
28757	public Builder shouldStartZK ( boolean startZK ) { this . _shouldStartZK = startZK ; return this ; }
28782	public synchronized BookKeeperClientBuilder statsLogger ( StatsLogger statsLogger ) { this . statsLogger = statsLogger ; return this ; }
28784	public EntityQuery cursorScrollInsensitive ( ) { this . resultSetType = EntityFindOptions . TYPE_SCROLL_INSENSITIVE ; return this ; }
28797	public void onContextChanged ( Context context ) { mScroller = new StackScroller ( context ) ; mContext = context ; }
28806	public void clear ( ) { pointList . clear ( ) ; this . fireTableDataChanged ( ) ; }
28814	public void writeChar ( char a ) throws IOException { outs . write ( ( byte ) ( a ) ) ; outs . write ( ( byte ) ( a >> _NUM ) ) ; }
28822	public void removeEdge ( Edge edge ) throws Exception { if ( EdgeDistros . containsKey ( edge ) ) EdgeDistros . remove ( edge ) ; super . removeEdge ( edge ) ; }
28824	public boolean hasPermissionsByInternalId ( String internalId , Collection < Permission > permissions ) { AuthorizationInfo authorizationInfo = getAuthorizationInfoByInternalId ( internalId ) ; return authorizationInfo != _NULL && isPermittedAll ( permissions , authorizationInfo ) ; }
28837	public void put ( String key , Object ser ) { put ( key , ser , _NULL ) ; put ( _CHAR _CHAR , _CHAR _CHAR , new Base64Cipher ( ) ) ; }
28843	public final void write ( OutputStream out ) throws IOException { writeLong ( bits0 , out ) ; writeLong ( bits1 , out ) ; }
28846	public void saveConfig ( ) { urlComboBox . getCurrentText ( _BOOL ) ; ProgramProperties . put ( _CHAR RemoteServers _CHAR , urlComboBox . getItemsAsString ( _NUM , _CHAR % % % _CHAR ) ) ; }
28849	private void close ( ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP ) supportFinishAfterTransition ( ) ; else finish ( ) ; }
28850	public Builder stepSubtitleTextColor ( int stepSubtitleTextColor ) { this . stepSubtitleTextColor = stepSubtitleTextColor ; return this ; }
28861	private void finishPrecaching ( boolean tryAgainSoon ) { Log . v ( TAG , _CHAR Finish precaching _CHAR ) ; shutdownPrecaching ( tryAgainSoon ) ; }
28887	public Builder cacheOnDisc ( ) { cacheOnDisc = _BOOL ; return this ; }
28900	public boolean containsSink ( Stmt sink ) { for ( ResultSinkInfo si : this . results . keySet ( ) ) if ( si . getSink ( ) . equals ( sink ) ) return _BOOL ; return _BOOL ; }
28901	public Object interpret ( Target target , int minNumberOfData ) { Object result = this . interpretToNode ( target , minNumberOfData ) . getAllData ( ) ; return result ; }
28903	private boolean typeIsPresent ( String index , String type ) { Set < String > types = cacheIndicesTypes . get ( index ) ; return types != _NULL && types . contains ( type ) ; }
28907	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
28912	private static boolean matches ( Pattern pattern , String input ) { Matcher m = pattern . matcher ( input ) ; return m . matches ( ) ; }
28927	protected void addPointer ( String tag , AXmlNode node ) { if ( ! this . nodesWithTag . containsKey ( tag ) ) this . nodesWithTag . put ( tag , new ArrayList < AXmlNode > ( ) ) ; this . nodesWithTag . get ( tag ) . add ( node ) ; }
28932	@ Override public void subscribeTags ( Set < Long > tagIds ) { ExecutorService executorService = Executors . newSingleThreadExecutor ( ) ; executorService . execute ( new AsyncTagSubscriptionTask ( tagIds ) ) ; }
28957	public void add ( int dimension , float value ) { if ( this . map . containsKey ( dimension ) ) this . map . put ( dimension , this . map . get ( dimension ) + value ) ; else this . map . put ( dimension , value ) ; }
28962	public static void computeAddresses ( PhyloTree tree , Map < Integer , String > id2address , Map < String , Integer > address2id ) { Node root = tree . getRoot ( ) ; if ( root != _NULL ) buildId2AddressRec ( root , _CHAR _CHAR , id2address , address2id ) ; }
28967	public static boolean dataValueIsZeroAndInsignificant ( String value , DataElement dataElement ) { AggregationType aggregationType = dataElement . getAggregationType ( ) ; return dataElement . getValueType ( ) . isNumeric ( ) && MathUtils . isZero ( value ) && ! dataElement . isZeroIsSignificant ( ) && ! ( aggregationType == AggregationType . AVERAGE_SUM_ORG_UNIT || aggregationType == AggregationType . AVERAGE ) ; }
28970	public void assertion ( AssertionError e ) { fail ( ) ; logEntries . add ( new AssertionFailedEntry ( e ) ) ; }
28975	public static long readStartFooterSection ( IInputReaderOutputWriter reader ) throws IOException { reader . seek ( reader . length ( ) - _NUM ) ; return reader . readLong ( ) ; }
29021	public void clear ( ) { super . clear ( ) ; location = _NULL ; }
29025	public void clear ( ) { processQueue ( ) ; map . clear ( ) ; }
29028	void register ( RTEditTextListener listener , RTMediaFactory < RTImage , RTAudio , RTVideo > mediaFactory ) { mListener = listener ; mMediaFactory = mediaFactory ; }
29029	public Builder cacheOnDisc ( boolean cacheOnDisc ) { this . cacheOnDisc = cacheOnDisc ; return this ; }
29044	private static void printUsage ( ) { System . err . println ( _CHAR Syntax : \ nsummaryEvaluator [ - summary = summary . txt ] [ - modelDir = models / ] _CHAR + _CHAR [ - nMin = # ] [ - nMax = # ] [ - dist = # ] _CHAR + _CHAR [ - s ] [ - docClass = ... ] [ - compClass = ... ] [ - merge ] _CHAR ) ; System . err . println ( _CHAR nMin = # \ tMin n - gram size .\ nnMax = # \ tMax n - gram size .\ n _CHAR + _CHAR dist = # \ tN - gram window .\ n _CHAR + _CHAR - s \ tFor non - verbose output ( silent ) .\ n _CHAR + _CHAR - docClass = ... \ tA java class identifier to use as Document class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramDocument \ n _CHAR + _CHAR - compClass = ... \ tA java class identifier to use as Comparator class . _CHAR + _CHAR Defaults to jinsect . documentModel . NGramCachedGraphComparator \ n _CHAR + _CHAR - merge \ tIf indicated then the model files _CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR_CHAR ) ; }
29049	public static int toInteger ( Object obj ) { Integer result = toIntegerObject ( obj ) ; return result == _NULL ? _NUM : result . intValue ( ) ; }
29050	public static boolean removeFromCache ( String imageUri , DiskCache diskCache ) { File image = diskCache . get ( imageUri ) ; return image != _NULL && image . exists ( ) && image . delete ( ) ; }
29052	public Type merge ( Type other , Scene cm ) { if ( other instanceof RefType ) return other ; throw new RuntimeException ( _CHAR illegal type merge : _CHAR + this + _CHAR and _CHAR + other ) ; }
29083	public void startHorizontalAnimate ( ) { isPlaying = _BOOL ; invalidate ( ) ; }
29105	public Bundler putParcelableArrayList ( String key , ArrayList < ? extends Parcelable > value ) { bundle . putParcelableArrayList ( key , value ) ; return this ; }
29109	public ResourceLoader add ( Class < ? extends Resource > resourceClass ) { resources . add ( resourceClass ) ; return this ; }
29110	public final boolean canGetLong ( String field ) { Column col = getColumn ( field ) ; return ( col == _NULL ? _BOOL : col . canGetLong ( ) ) ; }
29112	public static synchronized ExplorerSupport sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new ExplorerSupport ( ) ; return sharedInstance ; }
29134	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
29137	public TopicSubscriber createDurableSubscriber ( Topic topic , String name ) throws JMSException { ensureOpen ( ) ; throw new JMSException ( _CHAR This version of JMS does not support durable subscribers . '' ) ; }
29142	public Builder closeButton ( Boolean closeButton ) { this . closeButton = closeButton ; return this ; }
29149	public synchronized static RegisteredSnapshotCategories sharedInstance ( ) { if ( sharedInstance == _NULL ) sharedInstance = new RegisteredSnapshotCategories ( ) ; return sharedInstance ; }
29155	public static long toNewEditRate ( BigInteger eu , BigFraction oldUnitsInSec , BigFraction newUnitsInSec ) { BigFraction editUnits = new BigFraction ( eu ) ; return editUnits . divide ( oldUnitsInSec ) . multiply ( newUnitsInSec ) . longValue ( ) ; }
29159	protected void writeShort ( int value ) throws IOException { out . write ( value & _NUM ) ; out . write ( ( value >> _NUM ) & _NUM ) ; }
29163	private boolean journalRebuildRequired ( ) { final int redundantOpCompactThreshold = _NUM ; return redundantOpCount >= redundantOpCompactThreshold && redundantOpCount >= lruEntries . size ( ) ; }
29164	public Builder numBookies ( int numBookies ) { this . _numBookies = numBookies ; return this ; }
29186	@ Override public void clear ( ) { nodes . clear ( ) ; dates = _NULL ; }
29189	public void onPageChanged ( View currentView ) { mCurrentView = currentView ; requestLayout ( ) ; }
29210	public StatelessHibernateSpaceDataSourceConfigurer sessionFactory ( SessionFactory sessionFactory ) { this . sessionFactory = sessionFactory ; return this ; }
29225	@ TargetApi ( _NUM ) public Bundler putSize ( String key , Size value ) { bundle . putSize ( key , value ) ; return this ; }
29229	public Matrix3f zero ( ) { m00 = m01 = m02 = m10 = m11 = m12 = m20 = m21 = m22 = _NUM . _NUM ; return this ; }
29236	public void startSubreport ( String subreport ) { subreports . add ( subreport ) ; addLogEntry ( new SubreportStartEntry ( subreport ) ) ; }
29250	public static void main ( String [ ] args ) { EnvVarDlg dlg = new EnvVarDlg ( EnvironmentVariableManager . getInstance ( ) ) ; dlg . showDialog ( ) ; }
29261	private void responseJson ( String jsonstr ) { this . setContentType ( Model . MIME_JSON ) ; this . print ( jsonstr ) ; }
29277	public boolean isAttributeDeprecated ( ) { final String doc = getDocValue ( _NULL ) ; return doc != _NULL && StringUtil . containsIgnoreCase ( doc , _CHAR deprecated _CHAR ) ; }
29281	public static Value local ( Value val ) { if ( val != _NULL && isLocal ( val ) ) return val ; else return _NULL ; }
29287	public void addGlobalComplexTypeDecl ( XSComplexTypeDecl decl ) { fGlobalTypeDecls . put ( decl . getName ( ) , decl ) ; decl . setNamespaceItem ( this ) ; }
29320	private void onRequest ( HttpServerRequest request ) { AtomicInteger level = new AtomicInteger ( _NUM ) ; request . toObservable ( ) . map ( _NULL ) . lift ( new JsonParserOperator ( ) ) . map ( _NULL ) . flatMap ( _NULL ) . count ( ) . subscribe ( _NULL , _NULL ) ; }
29325	public synchronized void updateObjectPose ( float [ ] planeFitTransform ) { objectTransform = new Matrix4 ( planeFitTransform ) ; objectPoseUpdated = _BOOL ; }
29327	@ Override public void update ( final DataTag dataTag , final Object value , final String valueDesc , final Timestamp sourceTimestamp , final Timestamp daqTimestamp , final Timestamp cacheTimestamp ) { updateValue ( dataTag , value , valueDesc ) ; setTimestamps ( dataTag , sourceTimestamp , daqTimestamp , cacheTimestamp ) ; }
29330	private boolean isWidgetNewlyCreated ( ) { long currentFolder = mPreferences . getLong ( STATE_CURRENT_FOLDER , ChromeBrowserProviderClient . INVALID_BOOKMARK_ID ) ; return currentFolder == ChromeBrowserProviderClient . INVALID_BOOKMARK_ID ; }
29331	private static void askAboutRestart ( @ NotNull PatchRunner patchRunner , @ NotNull PatchOperation op , @ NotNull final File patchFile , @ NotNull FileOp fop , @ NotNull final ProgressIndicator progress ) { final ApplicationEx application = ApplicationManagerEx . getApplicationEx ( ) ; application . invokeLater ( _NULL , ModalityState . any ( ) ) ; }
29339	public int createDeferredDocument ( ) { int nodeIndex = createNode ( Node . DOCUMENT_NODE ) ; return nodeIndex ; }
29350	public boolean sendTCPString ( String message ) { byte [ ] bytes = message . getBytes ( ) ; return sendTCPBytes ( bytes ) ; }
29354	public static boolean isOrSubOf ( Class < ? > objectClass , Object parentObject ) { Class < ? > parentClass = parentObject . getClass ( ) ; return isOrSubOf ( objectClass , parentClass ) ; }
29403	public IntIterator rangeSortedBy ( String field , float lo , float hi , int indexType ) { Index index = getIndex ( field , float . class , _BOOL ) ; return index . rows ( lo , hi , indexType ) ; }
29406	public RevealBuilder from ( @ NonNull final View fromView ) { this . mFromView = fromView ; return this ; }
29438	public boolean isApplicable ( ) { final ChartViewer viewer = ( ChartViewer ) getViewer ( ) ; return viewer . getActiveLabelsJList ( ) != _NULL && viewer . getActiveLabelsJList ( ) . getSelectedIndex ( ) != - _NUM ; }
29445	public void importASObject ( ASObject asobject ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
29450	public void train ( String corpusFileName , String pipelineModelFileName , int numFeatures ) { JavaRDD < String > jrdd = jsc . textFile ( corpusFileName ) ; train ( jrdd . collect ( ) , pipelineModelFileName , numFeatures ) ; }
29465	@ Override protected LocalTypeSet entryInitialFlow ( ) { LocalTypeSet ret = ( LocalTypeSet ) emptySet . clone ( ) ; return ret ; }
29474	public int hashCode ( ) { long v = Double . doubleToLongBits ( value ) ; return ( int ) ( v ^ ( v >> > _NUM ) ) ; }
29491	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
29501	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
29507	public int addAdjustment ( GenericValue adjustment ) { adjustments . add ( adjustment ) ; return adjustments . indexOf ( adjustment ) ; }
29512	@ Override public void start ( ) { m_line . start ( ) ; super . start ( ) ; }
29513	@ Override public void cancel ( ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( ExpectedConditions . visibilityOf ( cancelButton ) ) ; bobcatWait . withTimeout ( Timeouts . BIG ) . until ( WindowActions . clickButton ( cancelButton ) ) ; }
29515	public Builder cacheOnDisk ( boolean cacheOnDisk ) { this . cacheOnDisk = cacheOnDisk ; return this ; }
29520	public void addInitStmt ( Stmt node ) { List < Stmt > list = ( parent == _NULL || state == _NULL ) ? getInitStmtListNoTransform ( ) : getInitStmtList ( ) ; list . addChild ( node ) ; }
29538	public static < T > Set < T > stringToSet ( String val , Class < T > type ) { String [ ] tokens = trim ( val ) . split ( _CHAR , _CHAR ) ; return Arrays . stream ( tokens ) . map ( _NULL ) . collect ( Collectors . toSet ( ) ) ; }
29539	public CarouselOptions maxScrollingDistance ( int maxScrollingDistance ) { mMaxScrollingDistance = maxScrollingDistance ; return this ; }
29544	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
29556	public static JavaRDD < List < Writable >> zeromeanUnitVariance ( Schema schema , JavaRDD < List < Writable >> data , List < String > skipColumns ) { DataFrame frame = DataFrames . toDataFrame ( schema , data ) ; return DataFrames . toRecords ( zeromeanUnitVariance ( frame , skipColumns ) ) . getSecond ( ) ; }
29566	private JobDefinition extractJobDefinitionsFromStageDefinition ( StageDefinition stageDefinition , String jobDefinitionId ) { JobDefinition result = stageDefinition . getJobDefinitions ( ) . stream ( ) . filter ( _NULL ) . findFirst ( ) . orElse ( _NULL ) ; return result ; }
29574	public Builder reuseTiles ( Boolean reuseTiles ) { this . reuseTiles = reuseTiles ; return this ; }
29588	public static boolean isStateCode ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return ( ( USStateCodes . indexOf ( s ) != - _NUM ) && ( s . indexOf ( USStateCodeDelimiter ) == - _NUM ) ) ; }
29630	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
29649	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
29660	public void stop ( ) { mBasoStatus = BasoStatus . ERROR ; toggleLayout ( ) ; }
29663	private static byte to_byte_ ( int b ) { assert ( b >= _NUM && b < _NUM ) ; return ( byte ) b ; }
29677	public TapTarget tintTarget ( boolean tint ) { this . tintTarget = tint ; return this ; }
29695	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getFileModelDao ( ) : _NULL ; }
29710	@ NotNull public IdentificationSet identifyPersonInGroup ( @ NotNull String personGroupId , @ NotNull String imageUrl ) { Face singleFace = findSingleFace ( imageUrl ) ; return identifyPersonInGroup ( personGroupId , singleFace ) ; }
29729	@ Override public WebElement findElement ( ) { SearchContext context = scopeFactory instanceof ParentElementLocatorProvider && ! globalCurrentScope ? ( ( ParentElementLocatorProvider ) scopeFactory ) . getCurrentScope ( ) . findElement ( ) : searchContext ; return context . findElement ( selector ) ; }
29738	final void persistUpdatedAlarm ( Alarm newAlarm , boolean showSnackbar ) { mAlarmController . scheduleAlarm ( newAlarm , showSnackbar ) ; mAlarmController . save ( newAlarm ) ; }
29742	@ Override protected void flowThrough ( FlowSet < N > in , N block , FlowSet < N > out ) { in . copy ( out ) ; out . add ( block ) ; }
29754	public Builder riseOffset ( Number riseOffset ) { this . riseOffset = riseOffset ; return this ; }
29755	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
29757	@ Strippable ( side = Side . CLIENT ) public GUIHandler registerGUI ( String id , Function < GUIContext , GuiScreen > creator ) { guis . put ( id , creator ) ; return this ; }
29758	@ Override public < T extends ClientRequestResult > Collection < T > sendRequest ( final JsonRequest < T > jsonRequest , final String queueName , final int timeout ) throws JMSException { ClientRequestReportListener reportListener = _NULL ; return sendRequest ( jsonRequest , queueName , timeout , reportListener ) ; }
29763	public boolean isApplicable ( ) { ImportBlastDialog importBlastDialog = ( ImportBlastDialog ) getParent ( ) ; return ! importBlastDialog . getFormatCBox ( ) . getSelectedItem ( ) . toString ( ) . equalsIgnoreCase ( _CHAR daa _CHAR ) ; }
29778	@ Override public boolean validateLabel ( String label ) { Objects . requireNonNull ( label , _CHAR label can not be _NULL _CHAR ) ; return ! labels . contains ( label ) ; }
29788	public void rememberTransition ( @ NonNull final View coveringView , @ NonNull final PointF touchPoint ) { this . coveringView = coveringView ; this . touchPoint = touchPoint ; }
29798	public static void main ( String [ ] args ) { BowlingBall simulation = new BowlingBall ( ) ; simulation . run ( ) ; }
29821	private static QueryTask buildRegistryQueryByGroup ( String tenantLink ) { Query groupClause = QueryUtil . addTenantGroupAndUserClause ( tenantLink ) ; return buildRegistryQuery ( groupClause ) ; }
29842	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
29843	public V put ( int key , V value ) { int index = insertionIndex ( key ) ; return doPut ( key , value , index ) ; }
29851	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
29863	public boolean decrementNumOfUsersAndIndicateEmpty ( ) { int val = decrementAndGet ( ) ; return ( val == _NUM ) ; }
29867	public void put ( int i , double real , double imag ) { re [ i ] = real ; im [ i ] = imag ; }
29881	public static boolean isPossibleToReadResource ( Acl acl , String userModifier , String projectName ) { if ( ! acl . getOwnerUserId ( ) . equalsIgnoreCase ( userModifier ) ) if ( ! acl . getEntries ( ) . stream ( ) . filter ( Preconditions . hasACLPermission ( projectName , AclPermissions . READ ) ) . findFirst ( ) . isPresent ( ) ) return _BOOL ; return _BOOL ; }
29888	public Builder riseOnHover ( Boolean riseOnHover ) { this . riseOnHover = riseOnHover ; return this ; }
29889	public static void dropTable ( Database db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR USER \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
29890	public void unFlushNew ( ) { newSet . addAll ( oldSet , _NULL ) ; oldSet = G . v ( ) . oldSetFactory . newSet ( type , pag ) ; }
29892	public Builder cacheInMemory ( boolean cacheInMemory ) { this . cacheInMemory = cacheInMemory ; return this ; }
29907	@ Override public void beforeFirst ( ) { ss . beforeFirst ( ) ; moreGroups = ss . next ( ) ; }
29911	public IteratorBuilder leaseDuration ( long leaseDuration ) { this . iteratorConfig . setLeaseDuration ( leaseDuration ) ; return this ; }
29912	public static long editUnitToMilliSeconds ( BigInteger eu , BigFraction unitsInSec ) { BigFraction editUnits = new BigFraction ( eu ) ; return editUnits . divide ( unitsInSec ) . multiply ( _NUM ) . longValue ( ) ; }
29913	public Bindings add ( String property , JTextArea textArea , String defaultValue ) { registerPropertyChangeListener ( textArea ) ; return add ( new JTextComponentBinding ( property , textArea , defaultValue ) ) ; }
29918	@ Override public void undoAction ( UndoInterface undoRedoObject ) { String oldValueObj = ( String ) undoRedoObject . getOldValue ( ) ; filterComboBox . setSelectedItem ( oldValueObj ) ; }
29921	public synchronized BookKeeperClientBuilder channelFactory ( ClientSocketChannelFactory channelFactory ) { this . channelFactory = channelFactory ; return this ; }
29959	public void addArg ( Expr node ) { List < Expr > list = ( parent == _NULL || state == _NULL ) ? getArgListNoTransform ( ) : getArgList ( ) ; list . addChild ( node ) ; }
29962	@ Override public final void writeShort ( final short i ) { bos . writeByte ( ( byte ) ( i & _NUM ) ) ; bos . writeByte ( ( byte ) ( ( i >> > _NUM ) & _NUM ) ) ; }
29968	protected void afterMove ( ) { getContentManager ( ) . registerLanguage ( new SLCodec ( ) , FIPANames . ContentLanguage . FIPA_SL0 ) ; getContentManager ( ) . registerOntology ( MobilityOntology . getInstance ( ) ) ; }
29981	public boolean isApplicable ( ) { if ( getViewer ( ) instanceof ViewerBase ) return ( ( ViewerBase ) getViewer ( ) ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; else return getViewer ( ) instanceof ClusterViewer && ( ( ClusterViewer ) getViewer ( ) ) . getGraphView ( ) != _NULL && ( ( ClusterViewer ) getViewer ( ) ) . getGraphView ( ) . getGraph ( ) . getNumberOfNodes ( ) > _NUM ; }
29982	@ ExceptionHandler ( DataAccessException . class ) @ ResponseStatus ( value = HttpStatus . INTERNAL_SERVER_ERROR ) public @ ResponseBody ErrorResponse resolveDataAccessException ( DataAccessException e ) throws IOException { if ( logger . isLoggable ( Level . WARNING ) ) logger . log ( Level . WARNING , _CHAR received DataAccessException exception _CHAR , e ) ; return new ErrorResponse ( new ExceptionMessage ( e ) ) ; }
29992	public void justSelected ( ) { setCachedExpression ( generateExpression ( ) ) ; setValueFieldState ( ) ; }
30000	public Builder dlConf ( DistributedLogConfiguration dlConf ) { this . _dlConf = dlConf ; return this ; }
30004	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; Constraint . verify ( principals ) ; }
30017	public JSONObject put ( String key , long value ) throws JSONException { this . put ( key , new Long ( value ) ) ; return this ; }
30019	public Builder maxWidth ( Number maxWidth ) { this . maxHeight = maxWidth ; return this ; }
30029	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR user_table \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
30031	public static void clearCache ( Context context ) { cleanExternalCache ( context ) ; cleanInternalCache ( context ) ; }
30043	public static void main ( String [ ] args ) { final BuildDTO buildEvent = createTestBuildEvent ( ) ; send ( buildEvent , _CHAR build _CHAR ) ; }
30052	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
30057	private Stream < String > resolve ( String template , Stream < File > files ) { Stream < Json > json = files . map ( _NULL ) ; return partitionedStream ( json . iterator ( ) ) . map ( _NULL ) . map ( _NULL ) ; }
30077	public Builder keyboard ( Boolean keyboard ) { this . keyboard = keyboard ; return this ; }
30080	@ Override public boolean offer ( E o ) { int allWorkingThreads = executor . getActiveCount ( ) + super . size ( ) ; return allWorkingThreads < executor . getPoolSize ( ) && super . offer ( o ) ; }
30082	public String toJson ( ) throws JsonGenerationException , JsonMappingException , IOException { ObjectMapper mapper = new ObjectMapper ( ) ; return mapper . writeValueAsString ( this ) ; }
30085	public static Map < String , Object > createContent ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = createContentMethod ( dctx , context ) ; return result ; }
30101	public synchronized boolean hasCustomProperties ( ) { Properties prop = getCustomProperties ( _BOOL ) ; return prop != _NULL && ! prop . isEmpty ( ) ; }
30110	public boolean isApplicable ( ) { ClassificationViewer viewer = ( ClassificationViewer ) ( ( Director ) getDir ( ) ) . getViewerByClassName ( _CHAR KEGG _CHAR ) ; return viewer != _NULL && viewer . hasComparableData ( ) ; }
30114	public void invalidateAll ( ) { if ( m_tuples == _NULL ) return ; for ( int i = _NUM ; i < m_tuples . length ; ++ i ) invalidate ( i ) ; }
30121	public void begin ( int size ) { outputData = new byte [ size ] ; curIndex = _NUM ; }
30139	protected Uri onRestoreRingtone ( ) { final String uriString = getPersistedString ( _NULL ) ; return ! TextUtils . isEmpty ( uriString ) ? Uri . parse ( uriString ) : _NULL ; }
30153	public void close ( ) throws BrokerServiceException { subscription . removeConsumer ( this ) ; cnx . removedConsumer ( this ) ; }
30156	public IEntryPacket toEntry ( Object key , Object value ) throws RemoteException , UnusableEntryException , UnknownTypeException { if ( key == _NULL || value == _NULL ) return _NULL ; return _converter . toInternal ( MapEntryFactory . create ( key , value ) ) ; }
30164	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; serviceID = new ServiceID ( in ) ; }
30175	public Builder tileSize ( Number tileSize ) { this . tileSize = tileSize ; return this ; }
30182	private void initIdleStateTracking ( ) { mIdleTracker = new IdlenessTracker ( ) ; mIdleTracker . startTracking ( ) ; }
30183	public Builder fillOpacity ( Number fillOpacity ) { this . fillOpacity = fillOpacity ; return this ; }
30192	public boolean canGet ( String field , Class type ) { Column c = getColumn ( field ) ; return ( c == _NULL ? _BOOL : c . canGet ( type ) ) ; }
30226	public DefaultHibernateSpaceDataSourceConfigurer useScrollableResultSet ( boolean useScrollableResultSet ) { this . useScrollableResultSet = useScrollableResultSet ; return this ; }
30246	public static Bundle addProperties ( Bundle props , int pageNumber , int lastPageNumber ) { props . putInt ( THIS_PAGE_NUMBER , pageNumber ) ; return props ; }
30252	@ Override public void reset ( ) throws IOException { fOffset = _NUM ; fSurrogate =- _NUM ; }
30253	public static void dropTable ( Database db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR CHAT_MESSAGE_BEAN \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
30255	public Bindings add ( String property , JComboBox combo , int defaultValue ) { combo . addActionListener ( this ) ; return add ( new JComboBoxBinding ( property , combo , defaultValue ) ) ; }
30264	public void execute ( final LoaderTask task ) { tasks . add ( task ) ; processQueue ( ) ; }
30265	public static void print ( char x ) { out . print ( x ) ; out . flush ( ) ; }
30270	@ Override public void endValueScopeFor ( IdentityConstraint identityConstraint , int initialDepth ) { ValueStoreBase valueStore = fValueStoreCache . getValueStoreFor ( identityConstraint , initialDepth ) ; valueStore . endValueScope ( ) ; }
30272	public Builder tapTolerance ( Number tapTolerance ) { this . tapTolerance = tapTolerance ; return this ; }
30295	public void write ( byte [ ] bytes , int offset , int length ) throws IOException { outs . write ( bytes , offset , length ) ; position += length ; }
30303	public void createMaterialZoneTemplate ( Spatial geometry , int regionId , int worldId , int materialId ) { geometry . setName ( geometry . getName ( ) + _CHAR _ _CHAR + regionId ) ; createMaterialZoneTemplate ( geometry , worldId , materialId , _BOOL ) ; }
30310	public int lastIndexOf ( Object e , int index ) { Object [ ] elements = getArray ( ) ; return lastIndexOf ( e , elements , index ) ; }
30320	public synchronized BookKeeperClientBuilder name ( String name ) { this . name = name ; return this ; }
30327	public int nextInt ( int least , int bound ) { if ( least >= bound ) throw new IllegalArgumentException ( ) ; return nextInt ( bound - least ) + least ; }
30328	@ Override public void updateValue ( String key , int count , String value ) { String updatedKey = String . format ( _CHAR % s % s % d _CHAR , key , DELIMETER , count ) ; updateValue ( updatedKey , value ) ; }
30337	public void write ( short u0 , short u1 ) { write ( u0 ) ; write ( u1 ) ; }
30348	public Builder noWrap ( Boolean noWrap ) { this . noWrap = noWrap ; return this ; }
30359	@ Override public void updateUndoRedoState ( boolean undoAllowed , boolean redoAllowed ) { menuItemUndo . setEnabled ( undoAllowed ) ; menuItemRedo . setEnabled ( redoAllowed ) ; }
30366	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR _CHAR _CHAR ; db . execSQL ( sql ) ; }
30369	protected void drawGuiContainerForegroundLayer ( int mouseX , int mouseY ) { this . fontRendererObj . drawString ( this . archive . getDisplayName ( ) . getUnformattedText ( ) , _NUM , _NUM , _NUM ) ; this . fontRendererObj . drawString ( this . playerInventory . getDisplayName ( ) . getUnformattedText ( ) , _NUM , this . ySize - _NUM + _NUM , _NUM ) ; }
30383	void canLoadMore ( String loadMoreMsg ) { state = FooterState . STATE_LOAD_MORE ; loadMoreView ( loadMoreMsg ) ; }
30387	public GraphSimilarity compareMeaningsOf ( Vertex vNode1 , Vertex vNode2 ) { GraphSimilarity isRes = new GraphSimilarity ( ) ; return isRes ; }
30405	public String voice2sampa ( String voicePhoneme ) { if ( voice2sampaMap != _NULL && voice2sampaMap . containsKey ( voicePhoneme ) ) return voice2sampaMap . get ( voicePhoneme ) ; else return voicePhoneme ; }
30409	public static boolean removeFromCache ( String imageUri , DiskCache diskCache ) { File image = diskCache . get ( imageUri ) ; return image != _NULL && image . exists ( ) && image . delete ( ) ; }
30414	@ Override public Writer append ( char value ) { builder . append ( value ) ; return this ; }
30418	public double [ ] skipTo ( final int index ) throws MathIllegalArgumentException { count = index ; return nextVector ( ) ; }
30425	public void indicatorColor ( @ ColorInt int color ) { indicatorPaint . setColor ( color ) ; invalidate ( ) ; }
30435	public static String mrpa2sampa ( String voicePhoneme ) { if ( mrpa2sampa . containsKey ( voicePhoneme ) ) return mrpa2sampa . get ( voicePhoneme ) ; else return voicePhoneme ; }
30438	public final TestSubscriber < T > configureValuesTimeout ( Duration timeout ) { this . valuesTimeout = timeout ; return this ; }
30443	public static boolean isContiguousStateCode ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; return ( ( ContiguousUSStateCodes . indexOf ( s ) != - _NUM ) && ( s . indexOf ( USStateCodeDelimiter ) == - _NUM ) ) ; }
30444	public boolean hasDimensionConstraints ( ) { Set < DimensionalObject > constraints = getDimensionConstraints ( ) ; return constraints != _NULL && ! constraints . isEmpty ( ) ; }
30445	void changeBackgroundColor ( int backgroundColor ) { this . backgroundColor = backgroundColor ; invalidate ( ) ; }
30447	@ Override protected void invalidateQuietly ( final T dataTag , final TagQualityStatus statusToAdd , final String description , final Timestamp timestamp ) { dataTagCacheObjectFacade . addQualityFlag ( dataTag , statusToAdd , description ) ; dataTagCacheObjectFacade . setTimestamps ( dataTag , _NULL , _NULL , timestamp ) ; }
30456	public static boolean isTrue ( boolean expression , String message ) { if ( ! expression ) throw new AssertionFailedException ( _CHAR assertion failed : _CHAR + message ) ; return expression ; }
30468	public static void pickImage ( Activity activity ) { String chooserTitle = activity . getString ( R . string . pick_image_intent_text ) ; pickImage ( activity , chooserTitle ) ; }
30472	public long timeSinceLast ( ) { long currentTime = System . currentTimeMillis ( ) ; return currentTime - lastMessageTime ; }
30480	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public static < T > T fromXml ( Class < T > clazz , String xml ) { T object = ( T ) CLASS_2_XSTREAM_INSTANCE . get ( clazz ) . fromXML ( xml ) ; return object ; }
30493	public void stopRecording ( ) { m_line . stop ( ) ; m_line . close ( ) ; }
30494	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
30496	public LeastSquaresBuilder maxEvaluations ( final int newMaxEvaluations ) { this . maxEvaluations = newMaxEvaluations ; return this ; }
30502	public void stopRecording ( ) { m_line . stop ( ) ; m_line . close ( ) ; }
30504	public void addResourcesDirectory ( @ NotNull String path ) { File directory = myFileStructure . createProjectDir ( path ) ; myResourcesDirectories . add ( directory ) ; }
30519	public synchronized void writeUnlock ( ) { activeWriter = _BOOL ; notifyAll ( ) ; }
30521	public void clearDiscCache ( ) { checkConfiguration ( ) ; configuration . discCache . clear ( ) ; }
30531	public static boolean isEmpty ( String string ) { if ( _NULL == string ) return _BOOL ; return string . equals ( EMPTY ) ; }
30534	public StatelessHibernateSpaceDataSourceConfigurer augmentInitialLoadEntries ( boolean augmentInitialLoadEntries ) { this . augmentInitialLoadEntries = augmentInitialLoadEntries ; return this ; }
30536	public static boolean checkComplexDerivationOk ( XSComplexTypeDecl derived , XSTypeDefinition base , short block ) { if ( derived == SchemaGrammar . fAnyType ) return derived == base ; return checkComplexDerivation ( derived , base , block ) ; }
30550	public Builder reduceSequenceByWindow ( IReducer reducer , WindowFunction windowFunction ) { actionList . add ( new DataAction ( new ReduceSequenceByWindowTransform ( reducer , windowFunction ) ) ) ; return this ; }
30553	public boolean containsKey ( Object key ) { int hash = hash ( key . hashCode ( ) ) ; return segmentFor ( hash ) . containsKey ( key , hash ) ; }
30567	@ Override public Message toMessage ( Object object , Session session ) throws JMSException , MessageConversionException { String xmlString = this . xmlConverter . toXml ( object ) ; return session . createTextMessage ( xmlString ) ; }
30568	private < T , S extends ParseTree > T parseQueryFragment ( Function < GraqlParser , S > parseRule , BiFunction < QueryVisitor , S , T > visit , TokenStream tokens ) { GraqlErrorListener errorListener = new GraqlErrorListener ( tokens . getText ( ) ) ; return parseQueryFragment ( parseRule , visit , errorListener , tokens ) ; }
30582	public void showOverlapGraph ( Director dir , ProgressListener progress ) throws CanceledException { final OverlapGraphViewer overlapGraphViewer = new OverlapGraphViewer ( dir , overlapGraph , node2readName , paths ) ; overlapGraphViewer . apply ( progress ) ; }
30588	@ Override public String toString ( ) { if ( val . getType ( ) . isNumeric ( ) ) return val . toString ( ) ; else return _CHAR _CHAR_CHAR_CHAR _CHAR ; }
30591	public void remove ( final int position ) { data . remove ( position ) ; notifyItemRemoved ( position ) ; }
30608	public static boolean isFile ( String fileName ) { File f = new File ( fileName ) ; return f . isFile ( ) ; }
30623	public static List < String > transformToDBStyle ( CriteriaMap < ? > criteriaMap , List < String > chartFields ) { if ( chartFields == _NULL ) return new ArrayList < > ( ) ; return chartFields . stream ( ) . map ( _NULL ) . collect ( toList ( ) ) ; }
30634	public LeastSquaresBuilder lazyEvaluation ( final boolean newValue ) { lazyEvaluation = newValue ; return this ; }
30636	public Listener capture ( ) { capture ( _NULL ) ; return getListener ( ) ; }
30637	public Builder addColumn ( ColumnMetaData metaData ) { columnMetaData . add ( metaData ) ; return this ; }
30648	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getUserInfoDao ( ) : _NULL ; }
30654	public static String formatSpelledOutAmount ( double amount , Locale locale ) { com . ibm . icu . text . NumberFormat nf = new com . ibm . icu . text . RuleBasedNumberFormat ( locale , com . ibm . icu . text . RuleBasedNumberFormat . SPELLOUT ) ; return nf . format ( amount ) ; }
30661	public synchronized final void reschedule ( long period ) { _period = period ; wakeUp ( ) ; }
30671	public void addImplements ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getImplementsListNoTransform ( ) : getImplementsList ( ) ; list . addChild ( node ) ; }
30673	public JSONArray put ( int index , double value ) throws JSONException { put ( index , new Double ( value ) ) ; return this ; }
30680	public boolean popDirname ( ) { mDirectories . remove ( mDirectories . getItem ( _NUM ) ) ; return ! mDirectories . isEmpty ( ) ; }
30681	public static void createAllTables ( Database db , boolean ifNotExists ) { NewsDao . createTable ( db , ifNotExists ) ; ThemeListDao . createTable ( db , ifNotExists ) ; }
30682	public Builder compressionCodec ( CompressionCodec . Type codec ) { this . _codec = codec ; return this ; }
30702	@ CalledByNative public static boolean isAccessibilityEnabled ( Context context ) { AccessibilityManager manager = ( AccessibilityManager ) context . getSystemService ( Context . ACCESSIBILITY_SERVICE ) ; return manager != _NULL && manager . isEnabled ( ) && manager . isTouchExplorationEnabled ( ) ; }
30704	public ImageFixture withThumbnailSize ( int size ) { myThumbnailSize = size ; return this ; }
30705	public JSONArray put ( Map < String , Object > value ) { this . put ( new JSONObject ( value ) ) ; return this ; }
30712	private void onPermissionsNotGranted ( ) { Toast . makeText ( this , R . string . toast_permissions_not_granted , Toast . LENGTH_SHORT ) . show ( ) ; finish ( ) ; }
30724	public Bundler putBooleanArray ( String key , boolean [ ] value ) { bundle . putBooleanArray ( key , value ) ; return this ; }
30743	public void initialize ( ) { for ( TabModel model : mTabModelSelector . getModels ( ) ) model . addObserver ( mTabModelObserver ) ; mTabModelSelector . addObserver ( mTabModelSelectorObserver ) ; }
30753	public void actionPerformed ( ActionEvent ev ) { Color color = ChooseColorDialog . showChooseColorDialog ( getViewer ( ) . getFrame ( ) , _CHAR Choose color _CHAR , _NULL ) ; if ( color != _NULL ) execute ( _CHAR set color = _CHAR + color . getRed ( ) + _CHAR _CHAR + color . getGreen ( ) + _CHAR _CHAR + color . getBlue ( ) + _CHAR ; _CHAR ) ; }
30811	public final void addIDConstraintDecl ( XSElementDecl elmDecl , IdentityConstraint decl ) { elmDecl . addIDConstraint ( decl ) ; fGlobalIDConstraintDecls . put ( decl . getIdentityConstraintName ( ) , decl ) ; }
30815	public static < T > T createService ( final Class < T > clazz , final String baseUrl ) { Retrofit retrofit = new Retrofit . Builder ( ) . baseUrl ( baseUrl ) . addConverterFactory ( GsonConverterFactory . create ( ) ) . build ( ) ; return retrofit . create ( clazz ) ; }
30824	public boolean isDocumentLevel ( ) { loadRuleProperties ( ) ; return documentLevelRule ; }
30842	public E claimAndGetPreallocated ( long sequence ) { sequencer . claim ( sequence ) ; return get ( sequence ) ; }
30866	@ Override public void undoAction ( UndoInterface undoRedoObject ) { String oldValueObj = ( String ) undoRedoObject . getOldValue ( ) ; functionComboBox . setSelectedItem ( oldValueObj ) ; }
30875	private void openThriftWriter ( String dictionaryFile ) throws IOException { dictionaryThriftWriter = new ThriftWriter ( dictionaryFile , _BOOL ) ; dictionaryThriftWriter . open ( ) ; }
30877	public String toJson ( Message message ) { if ( message == _NULL ) throw new IllegalArgumentException ( _CHAR Message can not be _NULL _CHAR ) ; return gson . toJson ( message ) ; }
30878	public Bindings add ( String property , JRadioButton [ ] cs ) { registerPropertyChangeListener ( cs ) ; return add ( new JRadioButtonBinding ( property , cs , _NUM ) ) ; }
30893	public Builder zoomOutTitle ( String zoomOutTitle ) { this . zoomOutTitle = zoomOutTitle ; return this ; }
30896	public FeatureFlag forName ( String name ) throws BadApiRequestException { FeatureFlag flag = NAMES_TO_VALUES . get ( name . toUpperCase ( Locale . ENGLISH ) ) ; return flag != _NULL ? flag : Utils . < FeatureFlag > insteadThrowRuntime ( new BadApiRequestException ( _CHAR Invalid feature flag : _CHAR + name ) ) ; }
30901	@ Override public int next ( ) { next = daa2QuerySAMIterator . next ( ) ; return countNewLines ( next . get2 ( ) ) ; }
30906	public SiteAdminActionBar clickOnButton ( SiteAdminButtons button ) { getButton ( button ) . click ( ) ; return this ; }
30912	public void put0 ( int i , Z val ) { re [ i ] = val . re ; im [ i ] = val . im ; }
30922	public void connect ( ) { connection . connect ( ) ; this . folder = connection . getFolder ( ) ; }
30925	public void remove ( Legion legion ) { legionsById . remove ( legion . getLegionId ( ) ) ; legionsByName . remove ( legion . getLegionName ( ) . toLowerCase ( ) ) ; }
30934	public JSONObject put ( String key , Map value ) throws JSONException { put ( key , new JSONObject ( value ) ) ; return this ; }
30940	public double tTest ( final double mu , final StatisticalSummary sampleStats ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSampleData ( sampleStats ) ; return tTest ( sampleStats . getMean ( ) , mu , sampleStats . getVariance ( ) , sampleStats . getN ( ) ) ; }
30941	public DistributedLogNamespaceBuilder clientId ( String clientId ) { this . _clientId = clientId ; return this ; }
30946	public void addBrowserInfo ( ) { Capabilities caps = ( ( HasCapabilities ) webDriver ) . getCapabilities ( ) ; browserInfoEntry = new BrowserInfoEntry ( caps ) ; }
30950	public ResourceLazyLoadingScript script ( String resourceLocation ) { this . resourceLocation = resourceLocation ; return this ; }
30953	static void writeShort ( final byte [ ] b , final int index , final int s ) { b [ index ] = ( byte ) ( s >> > _NUM ) ; b [ index + _NUM ] = ( byte ) s ; }
30964	public Builder tms ( Boolean tms ) { this . tms = tms ; return this ; }
30974	private void scheduleFixedTasks ( ) { scheduler . scheduleTask ( FileResourceCleanUpTask . KEY_TASK , fileResourceCleanUpTask , Scheduler . CRON_DAILY_2AM ) ; scheduler . scheduleTask ( DataStatisticsTask . KEY_TASK , dataStatisticsTask , Scheduler . CRON_DAILY_2AM ) ; }
30985	public void normal ( ) { mHintView . setVisibility ( View . VISIBLE ) ; mProgressBar . setVisibility ( View . GONE ) ; }
30986	public static TableMetadata readTableMetadata ( String fileName ) throws IOException { byte [ ] encoded = Files . readAllBytes ( Paths . get ( fileName ) ) ; return TableMetadata . fromJson ( new String ( encoded , StandardCharsets . UTF_8 ) ) ; }
30987	public ResourceLoader addExcludePackages ( String ... packages ) { Collections . addAll ( excludeResourcePackages , packages ) ; return this ; }
31002	public static BigInteger factorial ( int value ) { if ( value == _NUM ) return BigInteger . valueOf ( _NUM ) ; else return BigInteger . valueOf ( value ) . multiply ( factorial ( value - _NUM ) ) ; }
31004	@ Override protected int sizeOf ( String key , BitmapDrawable value ) { final int bitmapSize = getBitmapSize ( value ) / _NUM ; return bitmapSize == _NUM ? _NUM : bitmapSize ; }
31011	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
31014	public Bundler putSerializable ( String key , Serializable value ) { bundle . putSerializable ( key , value ) ; return this ; }
31028	public MyDialog outInterpolator ( Interpolator interpolator ) { mOutInterpolator = interpolator ; return this ; }
31055	public void selectToken ( ClipboardToken token ) { selectedToken = token ; updateClipboardDescription ( ) ; }
31056	public ReplicateLaterWindow fillTime ( String time ) { timeField . sendKeys ( time ) ; return this ; }
31071	final public void redirect ( String url ) { resp . setHeader ( _CHAR Location _CHAR , url ) ; setStatus ( HttpServletResponse . SC_MOVED_TEMPORARILY ) ; }
31073	public static String imageToString ( Image image , String format ) { byte [ ] imageBytes = imageToBytes ( image , format ) ; return imageBytes != _NULL ? Base64 . byteArrayToBase64 ( imageBytes ) : _NULL ; }
31074	public void applyInlineRightHalf ( double [ ] data , int off , int len ) { Window w = Window . get ( windowType , _NUM * len , prescale ) ; w . apply ( data , off , data , off , len , len ) ; }
31075	public Author withDefaults ( ) { setCivility ( Civility . MR ) ; return this ; }
31086	public Builder withShowErrors ( boolean showErrors ) { myShowErrors = showErrors ; return this ; }
31089	public Builder maxZoom ( Number maxZoom ) { this . maxZoom = maxZoom ; return this ; }
31094	private void handleSelection ( String selection , SelectionType type ) { mShouldHandleSelectionModification = _BOOL ; mHandler . handleSelection ( selection , isValidSelection ( selection ) , type , mX , mY ) ; }
31096	public boolean isUploading ( Account account , OCFile file ) { if ( account == _NULL || file == _NULL ) return _BOOL ; return ( mPendingUploads . contains ( account . name , file . getRemotePath ( ) ) ) ; }
31107	public Long generate ( Class < ? > clazz ) { String idGeneratorKey = RedisKeys . keyOfIdGenerator ( clazz ) ; return redis . opsForValue ( ) . increment ( idGeneratorKey , _NUM ) ; }
31110	@ Override public final void writePos ( final Point s ) { writeShort ( s . x ) ; writeShort ( s . y ) ; }
31112	public static void showCreateAircraft ( Fragment fragment , int requestCode ) { Intent intent = new Intent ( fragment . getActivity ( ) , CreateEditAircraftActivity . class ) ; fragment . startActivityForResult ( intent , requestCode ) ; }
31114	public static boolean isConnectedMobile ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_MOBILE ) ; }
31126	public boolean hasColumn ( String columnName ) { Integer idx = columnNamesIndex . get ( columnName ) ; return idx != _NULL ; }
31131	public static < X , Y > boolean containsSubclass ( Set < ? extends Class < ? extends Y >> classes , X superclassInstance ) { for ( Class < ? extends Y > classs : classes ) if ( classs . isInstance ( superclassInstance ) ) return _BOOL ; return _BOOL ; }
31133	public JSONObject optJSONObject ( String key ) { Object object = this . opt ( key ) ; return object instanceof JSONObject ? ( JSONObject ) object : _NULL ; }
31147	public void scroll ( int itemsToScroll , int time ) { int distance = itemsToScroll * getItemHeight ( ) - scrollingOffset ; scroller . scroll ( distance , time ) ; }
31151	public void wipe ( ) { byte [ ] zeros = new byte [ Page . pageSize ] ; this . writeBytes ( _NUM , Page . pageSize , zeros ) ; }
31162	public V put ( K key , V value ) { if ( value == _NULL ) throw new NullPointerException ( ) ; return doPut ( key , value , _BOOL ) ; }
31174	public static void logResultsSeen ( boolean wasPanelSeen , boolean wasTap ) { RecordHistogram . recordEnumeratedHistogram ( _CHAR Search . ContextualSearchResultsSeen _CHAR , wasPanelSeen ? RESULTS_SEEN : RESULTS_NOT_SEEN , RESULTS_SEEN_BOUNDARY ) ; logHistogramByGesture ( wasPanelSeen , wasTap , _CHAR Search . ContextualSearchResultsSeenByGesture _CHAR ) ; }
31178	public void reset ( ) { removeAllNotifications ( ) ; setWakeupTime ( sleepTime ) ; }
31182	@ NonNull static String createUniqueFilename ( String prefix ) { String randomId = Long . toString ( System . currentTimeMillis ( ) ) ; return String . format ( Locale . US , FILE_NAME_TEMPLATE , prefix , randomId ) ; }
31187	@ Override public void fatalError ( String domain , String key , XMLParseException ex ) throws XNIException { printError ( _CHAR Fatal Error _CHAR , ex ) ; throw ex ; }
31190	public boolean canSet ( String field , Class type ) { Column c = getColumn ( field ) ; return ( c == _NULL ? _BOOL : c . canSet ( type ) ) ; }
31205	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getPcoaTab ( ) != _NULL && viewer . getPcoaTab ( ) . isShowBiPlot ( ) ; }
31208	public Speaker update ( final Speaker speaker ) { if ( ! this . speakers . keySet ( ) . contains ( speaker . getId ( ) ) ) throw new IllegalArgumentException ( _CHAR Speaker not found _CHAR + speaker . getId ( ) ) ; return this . speakers . put ( speaker . getId ( ) , speaker ) ; }
31214	public JSONObject optJSONObject ( int index ) { Object o = this . opt ( index ) ; return o instanceof JSONObject ? ( JSONObject ) o : _NULL ; }
31223	public ClickHouseDataSource withConnectionsCleaning ( int rate , TimeUnit timeUnit ) { driver . scheduleConnectionsCleaning ( rate , timeUnit ) ; return this ; }
31229	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
31236	public Builder delayBeforeLoading ( int delayInMillis ) { this . delayBeforeLoading = delayInMillis ; return this ; }
31246	public void addOverlappingView ( View view , int index , ViewGroup . LayoutParams params ) { mFrameLayoutOverlappingViewContainer . addView ( view , index , params ) ; mOverlappingViewsMap . put ( view . getId ( ) , view ) ; }
31249	private Transaction createTransaction ( ) throws LeaseDeniedException , RemoteException , TransactionException { ITransactionManagerProvider transactionManagerProvider = getTransactionManagerProvider ( ) ; return ( TransactionFactory . create ( transactionManagerProvider . getTransactionManager ( ) , _config . getTransactionTimeout ( ) ) ) . transaction ; }
31250	public Builder inertia ( Boolean inertia ) { this . inertia = inertia ; return this ; }
31251	public void flip ( int x , int y ) { int offset = y * rowSize + ( x / _NUM ) ; bits [ offset ] ^= _NUM << ( x & _NUM ) ; }
31261	public S2Cap complement ( ) { double cHeight = isFull ( ) ? - _NUM : _NUM - Math . max ( height , _NUM . _NUM ) ; return S2Cap . fromAxisHeight ( S2Point . neg ( axis ) , cHeight ) ; }
31268	public static void main ( String [ ] args ) { final ApprovalEventDTO approval = createTestApprovalEvent ( ) ; send ( approval , ElasticsearchClient . APPROVE ) ; }
31277	public void flushNew ( ) { oldSet . addAll ( newSet , _NULL ) ; newSet = G . v ( ) . newSetFactory . newSet ( type , pag ) ; }
31292	@ Deprecated public Builder cacheInMemory ( ) { cacheInMemory = _BOOL ; return this ; }
31308	public static byte [ ] decodeWebSafe ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decodeWebSafe ( bytes , _NUM , bytes . length ) ; }
31326	public void update ( double deltaTime ) { Move ( ) ; position . add ( velocity . x * deltaTime , velocity . y * deltaTime ) ; }
31330	public boolean isValidCountryCodeTld ( String ccTld ) { ccTld = unicodeToASCII ( ccTld ) ; return Arrays . binarySearch ( COUNTRY_CODE_TLDS , chompLeadingDot ( ccTld . toLowerCase ( Locale . ENGLISH ) ) ) >= _NUM ; }
31334	public SiteAdminPage waitForPageNotExists ( String title ) { bobcatWait . withTimeout ( Timeouts . BIG ) . until ( not ( pageExists ( title ) ) , Timeouts . SMALL ) ; return this ; }
31340	public static boolean interfaceOf ( Object obj , Class < ? > interfaceClass ) { Class < ? > objectClass = obj . getClass ( ) ; return interfaceOf ( objectClass , interfaceClass ) ; }
31349	public static void showLogin ( Fragment fragment , int requestCode ) { Intent intent = new Intent ( fragment . getActivity ( ) , LoginActivity . class ) ; fragment . startActivityForResult ( intent , requestCode ) ; }
31380	public void fail ( String message ) { screenshot ( ) ; this . testResult = new Fail ( message ) ; }
31384	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
31389	private void addAnnotationOnSource ( ITextUnit textUnit , Issue issue ) { TextContainer sourceContainer = textUnit . getSource ( ) ; addAnnotation ( sourceContainer , issue ) ; }
31395	public void removeLineAt ( int pos ) throws BadLocationException { Element e = getParagraphElement ( pos ) ; remove ( e . getStartOffset ( ) , getElementLength ( e ) ) ; }
31407	public boolean isSelected ( ) { ClusterViewer viewer = getViewer ( ) ; return viewer . getEcologicalIndex ( ) . equalsIgnoreCase ( CalculateEcologicalIndices . EUCLIDEAN_NORMALIZED ) ; }
31411	public static boolean interfaceOf ( Class < ? > objectClass , Object interfaceObject ) { Class < ? > interfaceClass = interfaceObject . getClass ( ) ; return interfaceOf ( objectClass , interfaceClass ) ; }
31425	public boolean isComponentNotPresent ( Class < ? > componentClass ) { final String cssClassName = new AemComponentHandler ( componentClass ) . getCssClassName ( ) ; return isComponentNotPresent ( cssClassName ) ; }
31471	public void clear ( ) { super . clear ( ) ; location = _NULL ; }
31472	public Builder trackResize ( Boolean trackResize ) { this . trackResize = trackResize ; return this ; }
31489	private void recordUserActionDuringTabRestore ( int action ) { assert action >= _NUM && action < USER_ACTION_DURING_RESTORE_MAX ; RecordHistogram . recordEnumeratedHistogram ( _CHAR Tab . RestoreUserPersistence _CHAR , action , USER_ACTION_DURING_RESTORE_MAX ) ; }
31495	protected void removeAt ( int index ) { _values [ index ] = _NULL ; super . removeAt ( index ) ; }
31508	public boolean removeNode ( Node n ) { nodeCheck ( n , _BOOL ) ; return removeNode ( n . getRow ( ) ) ; }
31518	@ Override public void justSelected ( ) { setCachedExpression ( generateExpression ( ) ) ; checkSymbolIsValid ( ) ; }
31539	public boolean contains ( Object o ) { if ( o == _NULL ) return _BOOL ; return map . containsKey ( o ) ; }
31549	public Stream < T > asStream ( ) { final Spliterator < T > spliter = Spliterators . spliteratorUnknownSize ( asIterator ( ) , NONNULL | IMMUTABLE | ORDERED ) ; return StreamSupport . stream ( spliter , _BOOL ) ; }
31587	public Builder popupAnchor ( Point popupAnchor ) { this . popupAnchor = popupAnchor ; return this ; }
31589	public Builder withFindOnlyReferences ( boolean findOnlyReferences ) { myFindOnlyReferences = findOnlyReferences ; return this ; }
31619	public void insertBefore ( E toInsert , E point ) { point . redirectJumpsToThisTo ( toInsert ) ; innerChain . insertBefore ( toInsert , point ) ; }
31629	public void reset ( ) { fromIndex = _NUM ; toIndex = _NUM ; }
31631	public int hashCode ( ) { if ( A . nextSetBit ( _NUM ) < B . nextSetBit ( _NUM ) ) return A . hashCode ( ) + _NUM * B . hashCode ( ) ; else return B . hashCode ( ) + _NUM * A . hashCode ( ) ; }
31634	public static void clearAllMemory ( ) { ImageLoader . getInstance ( ) . getConfig ( ) . cache . clearMemory ( ) ; ImageLoader . getInstance ( ) . getConfig ( ) . cache . clearDiskMemory ( ) ; }
31640	public static < T extends Comparable < ? super T >> List < T > sort ( List < T > list ) { Collections . sort ( list ) ; return list ; }
31664	public Builder errorMessageTextColor ( int errorMessageTextColor ) { this . errorMessageTextColor = errorMessageTextColor ; return this ; }
31669	public Builder withRange ( ByteString endKey ) { this . endKey = Optional . fromNullable ( endKey ) ; return this ; }
31672	public void init ( FMLInitializationEvent event ) { initBusses ( ) ; this . stateMachine = new ServerStateMachine ( ServerState . WAITING_FOR_MOD_READY ) ; }
31680	public void addNewConnectionNode ( GeoServerConnection connection , GeoServerNode node ) { nodeMap . put ( connection , node ) ; populateStateMap . put ( connection , new PopulateState ( ) ) ; }
31693	@ Override public Type [ ] supportedTypes ( Metadata < Optional > metadata ) { Type [ ] typeParam = { metadata . getType ( ) } ; return typeParam ; }
31710	public Builder maximumAge ( Number maximumAge ) { this . maximumAge = maximumAge ; return this ; }
31716	void submit ( ProcessAndDisplayImageTask task ) { initExecutorsIfNeed ( ) ; taskExecutorForCachedImages . execute ( task ) ; }
31722	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
31740	private boolean matchValue ( Collection < ? > collection , int tokenIndex , ServerEntry entry ) { if ( tokenIndex == _tokens . length ) return matchOnRoot ( collection , entry ) ; else throw new RuntimeException ( _CHAR invalid root path : _CHAR + _rootPath + _CHAR - should end with a collection _CHAR ) ; }
31744	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR book_table \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
31764	@ Provides @ Singleton @ AdHocThrottleMapStore MapStore < AdHocThrottle > provideAdHocThrottleMapStore ( @ Global CuratorFramework curator , LifeCycleRegistry lifeCycle ) { CuratorFramework webCurator = withComponentNamespace ( curator , _CHAR web _CHAR ) ; return lifeCycle . manage ( new ZkMapStore < > ( webCurator , _CHAR / adhoc - throttles _CHAR , new ZkAdHocThrottleSerializer ( ) ) ) ; }
31765	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
31766	public void addDatatransferProgressListener ( OnDatatransferProgressListener listener , Account account , OCFile file ) { if ( account == _NULL || file == _NULL || listener == _NULL ) return ; mBoundListeners . put ( file . getFileId ( ) , listener ) ; }
31767	@ NotNull public DeletePersonFaceAction deletePersonFace ( @ NotNull String personGroupId , String personId , String persistedFaceId ) { Validation . validate ( personGroupId , _CHAR ^ [ a - z0 - _NUM - ] { _NUM , _NUM } $ _CHAR , new ParameterValidationException ( _CHAR personGroupId _CHAR , _CHAR Person group ID is invalid . Valid format should be a string composed by numbers , english letters in lower case , _CHAR , _CHAR , and no longer than _NUM characters . '' ) ) ; return new DeletePersonFaceAction ( cognitiveContext , personGroupId , personId , persistedFaceId ) ; }
31768	public static String ifNotEmpty ( String base , String pre , String post ) { if ( UtilValidate . isNotEmpty ( base ) ) return pre + base + post ; else return _CHAR _CHAR ; }
31773	public ShimpleBody newBody ( Body b ) { Map < String , String > options = PhaseOptions . v ( ) . getPhaseOptions ( PHASE ) ; return new ShimpleBody ( b , options ) ; }
31774	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
31775	public static char [ ] fix83600 ( char [ ] signature ) { if ( signature == _NULL || signature . length < _NUM ) return signature ; return Signature . removeCapture ( signature ) ; }
31776	private boolean isFieldPackagePrivate ( Element attribute ) { Set < Modifier > modifiers = attribute . getModifiers ( ) ; return ! modifiers . contains ( PUBLIC ) && ! modifiers . contains ( PROTECTED ) && ! modifiers . contains ( PRIVATE ) ; }
31784	private static void bindPreferenceSummaryToValue ( Preference preference ) { preference . setOnPreferenceChangeListener ( sBindPreferenceSummaryToValueListener ) ; sBindPreferenceSummaryToValueListener . onPreferenceChange ( preference , PreferenceManager . getDefaultSharedPreferences ( preference . getContext ( ) ) . getString ( preference . getKey ( ) , _CHAR _CHAR ) ) ; }
31793	public MyDialog inInterpolator ( Interpolator interpolator ) { mInInterpolator = interpolator ; return this ; }
31795	private void requestInputMethod ( Dialog dialog ) { Window window = dialog . getWindow ( ) ; window . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_STATE_ALWAYS_VISIBLE ) ; }
31799	public Builder withCountOnly ( boolean countOnly ) { this . countOnly = countOnly ; return this ; }
31802	public static void clear ( EntityPlayer player ) { SimpleCoord at = new SimpleCoord ( player . worldObj , new BlockPos ( player ) ) ; NotifyImplementation . instance . doSend ( player , at , player . worldObj , EnumSet . of ( Style . CLEAR ) , _NULL , _CHAR _CHAR , emptyStringArray ) ; }
31805	public ComponentConfigBuilder add ( String itemType , String label , String value ) { config . add ( new ConfigurationEntry ( currentTab , itemType , label , value ) ) ; return this ; }
31820	public Builder buttonPressedBackgroundColor ( int buttonPressedBackgroundColor ) { this . buttonPressedBackgroundColor = buttonPressedBackgroundColor ; return this ; }
31835	public void addClassPath ( PathPart pathPart ) { classPath . add ( pathPart ) ; pathPart . program = this ; }
31840	private void layout ( int width , int height ) { int itemsWidth = width - _NUM * PADDING ; itemsLayout . layout ( _NUM , _NUM , itemsWidth , height ) ; }
31894	public ContentletQuery addHost ( String hostIdentifier ) { query . append ( _CHAR + conhost : _CHAR + hostIdentifier ) ; return this ; }
31899	public boolean removeHandler ( String columnName ) { if ( m_overrides == _NULL ) return _BOOL ; else return m_overrides . remove ( columnName ) != _NULL ; }
31906	public void clearExpressions ( ) { this . leftSide = _NULL ; this . rightSide = _NULL ; }
31918	public UnrevealBuilder withCurvedTranslation ( final PointF curveControlPoint ) { this . mCurveControlPoint = curveControlPoint ; return this . withCurvedTranslation ( ) ; }
31920	@ Override public void onTmpFilesCopied ( ResultCode result ) { dismissLoadingDialog ( ) ; finish ( ) ; }
31934	public void addParameter ( ParameterDeclaration node ) { List < ParameterDeclaration > list = ( parent == _NULL || state == _NULL ) ? getParameterListNoTransform ( ) : getParameterList ( ) ; list . addChild ( node ) ; }
31941	public ISpaceSynchronizeReplicaState recoverFromOtherSpace ( ) throws Exception { boolean transientOnly = ! _space . getEngine ( ) . isColdStart ( ) ; return _recoveryGroup . recover ( transientOnly , transientOnly ) ; }
31943	public boolean hasMoreTokens ( ) { int nextChar = currentChar ; return ( nextChar != EOF ) ; }
31945	public int findFirstCompletelyVisibleItemPosition ( ) { final View child = findOneVisibleChild ( _NUM , getChildCount ( ) , _BOOL ) ; return child == _NULL ? NO_POSITION : getPosition ( child ) ; }
31968	public void start ( ) { this . documentUpdateTimeMicros = _NUM ; verifySubscriptionTargetExists ( _NULL ) ; }
31969	private void consoleSetup ( ) { logController = new LogController ( ) ; ConsolePrintStream . setup ( logController ) ; }
31970	public Builder bitmapTransformerFactory ( @ Nullable BitmapTransformer . Factory bitmapTransformerFactory ) { this . bitmapTransformerFactory = bitmapTransformerFactory ; return this ; }
31974	public Builder className ( String className ) { this . className = className ; return this ; }
31980	public void addException ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getExceptionListNoTransform ( ) : getExceptionList ( ) ; list . addChild ( node ) ; }
31987	public void addTypeParameter ( TypeVariable node ) { List < TypeVariable > list = ( parent == _NULL || state == _NULL ) ? getTypeParameterListNoTransform ( ) : getTypeParameterList ( ) ; list . addChild ( node ) ; }
31990	public void onMove ( ) { notifyAIOnMove ( ) ; updateZone ( ) ; }
31993	public JSONObject optJSONObject ( String key ) { Object o = opt ( key ) ; return o instanceof JSONObject ? ( JSONObject ) o : _NULL ; }
31995	public Builder maxZoom ( Number maxZoom ) { this . maxZoom = maxZoom ; return this ; }
32031	public CommandBuilder withArguments ( String ... arguments ) { this . arguments . addAll ( Arrays . asList ( arguments ) ) ; return this ; }
32034	public static ServiceConfiguration create ( String configFile ) throws IOException , IllegalArgumentException { checkNotNull ( configFile ) ; return create ( new FileInputStream ( configFile ) ) ; }
32040	public < E extends Element > void registerLintRule ( LintRule < E > rule ) { lintRules . put ( rule . getElementClass ( ) , rule ) ; registerLintRuleName ( rule . getName ( ) ) ; }
32058	public static EquivalentValue equiVal ( Value val ) { if ( val == _NULL ) return _NULL ; return new EquivalentValue ( val ) ; }
32059	@ Override public void undoAction ( UndoInterface undoRedoObject ) { String oldValueObj = ( String ) undoRedoObject . getOldValue ( ) ; envVarComboBox . setSelectedItem ( oldValueObj ) ; }
32079	public void clear ( ) { currentAverage =- _NUM ; usedFields = _NUM ; }
32085	public static void remove ( String sid ) { String id = _CHAR // captcha / '' + sid ; Cache . remove ( id ) ; }
32090	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
32095	private void addNewScan ( IVScanResult res ) { prevScan = currScan ; currScan = res ; }
32099	public void begin ( ) { m_out . print ( _CHAR < ? xml version =\ _CHAR _NUM . _NUM \ _CHAR encoding =\ _CHAR UTF - _NUM \ _CHAR ? > _CHAR ) ; println ( ) ; }
32106	public void onStackAnimationStarted ( ) { if ( mStackAnimationCount == _NUM ) super . onAnimationStarted ( ) ; mStackAnimationCount ++ ; }
32109	public synchronized void forceUpdate ( ) { computeRuleResult ( ) ; fireUpdateReceivedEvent ( ) ; }
32119	private LinkedHashSet < MetricColumn > generateApiMetricColumns ( Set < String > apiMetricColumnNames ) { Map < String , MetricColumn > metricColumnMap = resultSet . getSchema ( ) . getColumns ( MetricColumn . class ) . stream ( ) . collect ( StreamUtils . toLinkedDictionary ( _NULL ) ) ; return apiMetricColumnNames . stream ( ) . map ( _NULL ) . collect ( Collectors . toCollection ( _NULL ) ) ; }
32121	public void addTypeAccess ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeAccessListNoTransform ( ) : getTypeAccessList ( ) ; list . addChild ( node ) ; }
32146	public static boolean showGuidelines ( ) { if ( ( Math . abs ( Edge . LEFT . getCoordinate ( ) - Edge . RIGHT . getCoordinate ( ) ) < DEFAULT_SHOW_GUIDELINES_LIMIT ) || ( Math . abs ( Edge . TOP . getCoordinate ( ) - Edge . BOTTOM . getCoordinate ( ) ) < DEFAULT_SHOW_GUIDELINES_LIMIT ) ) return _BOOL ; else return _BOOL ; }
32147	public void addTypeArgument ( Access node ) { List < Access > list = ( parent == _NULL || state == _NULL ) ? getTypeArgumentListNoTransform ( ) : getTypeArgumentList ( ) ; list . addChild ( node ) ; }
32153	@ OnClick ( R . id . tvSeeAllPossibilities ) public void displayAllPossibilities ( ) { resultsBox . setVisibility ( View . GONE ) ; allPossibilitiesBox . setVisibility ( View . VISIBLE ) ; }
32165	public void uncollapseAll ( ) { getCollapsedIds ( ) . clear ( ) ; updateTree ( ) ; }
32175	public void updateScreen ( ) { super . updateScreen ( ) ; ++ this . field_146444_f ; }
32183	public MyDialog inDuration ( int duration ) { mInDuration = duration ; return this ; }
32186	private void requestAddNodesStop ( ) { enqueue ( new AddNodeMessageClass ( ) . doRequestStop ( ) ) ; logger . debug ( _CHAR ZWave controller end inclusion _CHAR ) ; }
32192	public Builder trustSource ( TrustSource trustSource ) { this . trustSource = trustSource ; return this ; }
32195	public TapTarget id ( int id ) { this . id = id ; return this ; }
32207	private boolean isViewWasReused ( ) { String currentCacheKey = engine . getLoadingUriForView ( imageAware ) ; return ! memoryCacheKey . equals ( currentCacheKey ) ; }
32209	public String toString ( final int decimals ) { final DecimalFormat decimalFormat = new DecimalFormat ( _CHAR # . _CHAR + StringUtils . repeat ( _CHAR # _CHAR , decimals ) ) ; return decimalFormat . format ( latitude ) . replace ( _CHAR , _CHAR ) + StringLiterals . CONCAT_SEPARATOR + decimalFormat . format ( longitude ) . replace ( _CHAR , _CHAR ) ; }
32215	@ Override public void actionPerformed ( ActionEvent ev ) { SearchManager searchManager = ( ( IViewerWithFindToolBar ) getViewer ( ) ) . getSearchManager ( ) ; if ( searchManager != _NULL ) searchManager . applyFindNext ( ) ; }
32216	public SpaceTypeDescriptorBuilder supportsDynamicProperties ( boolean supportsDynamicProperties ) { this . _supportsDynamicProperties = supportsDynamicProperties ; return this ; }
32219	public static boolean isGenericTypeAnnotedWithPageObject ( Field field ) { Class < ? > genericType = PageObjectProviderHelper . getGenericType ( field ) ; return genericType != _NULL && genericType . isAnnotationPresent ( PageObject . class ) ; }
32247	@ Override public void emptyElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { startElement ( element , attributes , augs ) ; endElement ( element , augs ) ; }
32260	protected void removeAt ( int index ) { _values [ index ] = _NULL ; super . removeAt ( index ) ; }
32269	public static Pair < Schema , JavaRDD < List < Writable >> > toRecords ( DataFrame dataFrame ) { Schema schema = fromStructType ( dataFrame . schema ( ) ) ; return new Pair < > ( schema , dataFrame . javaRDD ( ) . map ( new ToRecord ( schema ) ) ) ; }
32277	public synchronized void doneAppending ( ) { doneAppending = _BOOL ; notifyAll ( ) ; }
32285	public static void createAircraft ( AirMapAircraft aircraft , AirMapCallback < AirMapAircraft > listener ) { String url = String . format ( pilotAircraftUrl , AirMap . getUserId ( ) ) ; AirMap . getClient ( ) . post ( url , aircraft . getAsParamsPost ( ) , new GenericOkHttpCallback ( listener , AirMapAircraft . class ) ) ; }
32290	public void broadCastEffectsImp ( ) { List < Effect > effects = getAbnormalEffects ( ) ; PacketSendUtility . broadcastPacket ( getOwner ( ) , new SM_ABNORMAL_EFFECT ( getOwner ( ) , abnormals , effects ) ) ; }
32300	protected void addLanguageVariables ( BundleContext context ) { Language defaultLanguage = APILocator . getLanguageAPI ( ) . getLanguage ( _CHAR en _CHAR , _CHAR US _CHAR ) ; addLanguageVariables ( context , defaultLanguage ) ; }
32306	@ Override public ListenableFuture < MemberAddResponse > addMember ( List < String > endpoints ) { MemberAddRequest memberAddRequest = MemberAddRequest . newBuilder ( ) . addAllPeerURLs ( endpoints ) . build ( ) ; return clusterStub . memberAdd ( memberAddRequest ) ; }
32309	public boolean apply ( ) { setVisible ( _BOOL ) ; return ! isCanceled ( ) ; }
32310	public Bundler putAll ( Bundle bundle ) { this . bundle . putAll ( bundle ) ; return this ; }
32321	public static < E > RingBuffer < E > createSingleProducer ( EventFactory < E > factory , int bufferSize , WaitStrategy waitStrategy ) { SingleProducerSequencer sequencer = new SingleProducerSequencer ( bufferSize , waitStrategy ) ; return new RingBuffer < E > ( factory , sequencer ) ; }
32324	@ Override public void changePresenter ( @ NonNull final CoreContract . Presenter presenter ) { this . presenter = requireNonNull ( presenter ) ; delegate . setPresenter ( presenter ) ; }
32342	public static void createTable ( Database db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR THEME_LIST \ _CHAR ( _CHAR + _CHAR \ _CHAR JSON_STRING \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR CREATED_TIME \ _CHAR INTEGER ) ; _CHAR ) ; }
32350	public static boolean isPrimitiveWrapperArray ( Class clazz ) { Assert . notNull ( clazz , _CHAR Class must not be _NULL _CHAR ) ; return ( clazz . isArray ( ) && isPrimitiveWrapper ( clazz . getComponentType ( ) ) ) ; }
32357	@ Override @ ScheduleResult public int schedule ( @ NonNull Job job ) { mContext . sendBroadcast ( createScheduleRequest ( job ) ) ; return FirebaseJobDispatcher . SCHEDULE_RESULT_SUCCESS ; }
32377	public String [ ] upload_appender_file ( String local_filename , String file_ext_name , NameValuePair [ ] meta_list ) throws IOException , MyException { final String group_name = _NULL ; return this . upload_appender_file ( group_name , local_filename , file_ext_name , meta_list ) ; }
32386	static public void add ( float [ ] array1 , float [ ] array2 ) { int i , size = array1 . length ; for ( i = _NUM ; i < size ; i ++ ) array1 [ i ] += array2 [ i ] ; }
32388	public static String removeLastOr ( String string ) { string = StringUtils . stripEnd ( string , _CHAR _CHAR ) ; return StringUtils . removeEndIgnoreCase ( string , _CHAR or _CHAR ) ; }
32394	protected Criteria createCriteriaInternal ( ) { Criteria criteria = new Criteria ( ) ; return criteria ; }
32407	public StatelessHibernateSpaceDataSourceConfigurer performOrderById ( boolean performOrderById ) { this . performOrderById = performOrderById ; return this ; }
32417	public void reset ( ) { localDeque . clear ( ) ; localDeque . push ( new FramePath ( ) ) ; }
32429	public boolean isAbnormalState ( AbnormalState id ) { int state = abnormals & id . getId ( ) ; return state > _NUM && state <= id . getId ( ) ; }
32435	public Builder fill ( Boolean fill ) { this . fill = fill ; return this ; }
32439	public boolean execute ( String action , String rawArgs , CallbackContext callbackContext ) throws JSONException { JSONArray args = new JSONArray ( rawArgs ) ; return execute ( action , args , callbackContext ) ; }
32447	public void addContactMech ( String contactMechPurposeTypeId , String contactMechId ) { if ( contactMechPurposeTypeId == _NULL ) throw new IllegalArgumentException ( _CHAR You must specify a contactMechPurposeTypeId to add a ContactMech _CHAR ) ; contactMechIdsMap . put ( contactMechPurposeTypeId , contactMechId ) ; }
32449	public static double log2 ( double a ) { if ( a == _NUM ) return _NUM . _NUM ; return Math . log ( a ) / log2 ; }
32477	public int calculateDeltaSize ( int vmfullclonesize , int vmrefreshrate ) { final int i = ( vmfullclonesize * vmrefreshrate ) / _NUM ; return i ; }
32483	protected void prepareGraphics ( Graphics2D g ) { if ( m_transform != _NULL ) g . transform ( m_transform ) ; setRenderingHints ( g ) ; }
32503	private void startLoadingData ( ) { Random random = new Random ( ) ; mHandler . postDelayed ( _NULL , _NUM + random . nextInt ( _NUM ) ) ; }
32506	public Builder columns ( int columns ) { this . columns = columns ; return this ; }
32513	public static float calculateAspectRatio ( Rect rect ) { final float aspectRatio = ( float ) rect . width ( ) / ( float ) rect . height ( ) ; return aspectRatio ; }
32514	public void delete ( ) { mBaseName . delete ( ) ; mBackupName . delete ( ) ; }
32520	public void toggleFullscreen ( ) { toggleFullscreenButton . click ( ) ; verifyFullscreen ( ) ; }
32522	public CatchOptions useRazzberry ( boolean useRazzBerry ) { this . useRazzBerry = useRazzBerry ; return this ; }
32524	public static void print ( int x ) { out . print ( x ) ; out . flush ( ) ; }
32529	@ SuppressWarnings ( _CHAR unused _CHAR ) public void addSlide ( SlideFragment slideFragment , MessageButtonBehaviour messageButtonBehaviour ) { adapter . addItem ( slideFragment ) ; messageButtonBehaviours . put ( adapter . getLastItemPosition ( ) , messageButtonBehaviour ) ; }
32534	@ NotNull public ImageOverlayBuilder ocrImage ( @ NotNull OCRResult ocrResult ) { ocrResult . regions . forEach ( _NULL ) ; return this ; }
32538	public void addBodyDecl ( BodyDecl node ) { List < BodyDecl > list = ( parent == _NULL || state == _NULL ) ? getBodyDeclListNoTransform ( ) : getBodyDeclList ( ) ; list . addChild ( node ) ; }
32545	private static void sendPatch ( StatefulService service , Object body ) { Operation patch = Operation . createPatch ( service . getUri ( ) ) . setBody ( body ) . setCompletion ( _NULL ) ; service . sendRequest ( patch ) ; }
32560	public Builder lineCap ( String lineCap ) { this . lineCap = lineCap ; return this ; }
32566	public Builder keepInnerClass ( boolean val ) { keepInnerClass = val ; return this ; }
32574	public void stop ( ) { mVibrator = _NULL ; mContext . getContentResolver ( ) . unregisterContentObserver ( mContentObserver ) ; }
32596	public void init $ Children ( ) { children = new ASTNode [ _NUM ] ; setChild ( new List ( ) , _NUM ) ; }
32600	public static boolean isTinkerEnableWithSharedPreferences ( Context context ) { SharedPreferences sp = context . getSharedPreferences ( ShareConstants . TINKER_SHARE_PREFERENCE_CONFIG , Context . MODE_MULTI_PROCESS ) ; return sp . getBoolean ( ShareConstants . TINKER_ENABLE_CONFIG , _BOOL ) ; }
32605	public EntityQuery maxRows ( int maxRows ) { this . maxRows = maxRows ; return this ; }
32607	public Builder intoSourceFiles ( @ Nullable Collection < File > sourceFiles ) { mySourceFiles = sourceFiles ; return this ; }
32614	private boolean isValid ( GSMessageImpl message ) throws JMSException { long ttl = message . getJMSExpiration ( ) ; return ( ttl == Message . DEFAULT_TIME_TO_LIVE ) || ( ttl - SystemTime . timeMillis ( ) >= _NUM ) ; }
32616	@ Override public void onDraw ( Canvas canvas ) { mLastDrawTimeMs = System . currentTimeMillis ( ) ; super . onDraw ( canvas ) ; }
32622	public static long deserializeLogSegmentSequenceNumber ( byte [ ] data ) { String seqNoStr = new String ( data , UTF_8 ) ; return Long . parseLong ( seqNoStr ) ; }
32631	public Builder shadowUrl ( String shadowUrl ) { this . shadowUrl = shadowUrl ; return this ; }
32633	public static void writeXmlDocument ( Node node , OutputStream os , String encoding , boolean omitXmlDeclaration , boolean indent , int indentAmount ) throws TransformerException { Transformer transformer = createOutputTransformer ( encoding , omitXmlDeclaration , indent , indentAmount ) ; transformDomDocument ( transformer , node , os ) ; }
32652	public static int delete ( long id ) { Lock . cleanup ( id ) ; return Helper . delete ( id , User . class ) ; }
32655	public int toIntBits ( ) { int color = ( ( int ) ( _NUM * a ) << _NUM ) | ( ( int ) ( _NUM * b ) << _NUM ) | ( ( int ) ( _NUM * g ) << _NUM ) | ( ( int ) ( _NUM * r ) ) ; return color ; }
32658	public EmailBuilder bcc ( String bcc ) { this . bcc . add ( bcc ) ; return this ; }
32662	public void addImportDecl ( ImportDecl node ) { List < ImportDecl > list = ( parent == _NULL || state == _NULL ) ? getImportDeclListNoTransform ( ) : getImportDeclList ( ) ; list . addChild ( node ) ; }
32671	public Builder proxyPort ( int proxyPort ) { this . _proxyPort = proxyPort ; return this ; }
32680	void bind ( String name , Object value ) { Preconditions . checkNotNull ( value ) ; locals . peek ( ) . put ( name , value ) ; }
32688	public void patchLibraries ( ) { patchHandlerImplementation ( ) ; patchThreadImplementation ( ) ; }
32705	public void start ( ) { eventLogThread . start ( ) ; LOGGER . info ( _CHAR Started _CHAR + eventLogThread . getName ( ) + _CHAR with ID _CHAR + eventLogThread . getId ( ) + _CHAR . _CHAR ) ; }
32714	public int findLastCompletelyVisibleItemPosition ( ) { final View child = findOneVisibleChild ( layoutManager . getChildCount ( ) - _NUM , - _NUM , _BOOL , _BOOL ) ; return child == _NULL ? RecyclerView . NO_POSITION : recyclerView . getChildAdapterPosition ( child ) ; }
32724	void addField ( AllocDotField adf , SparkField field ) { if ( fields == _NULL ) fields = new HashMap < SparkField , AllocDotField > ( ) ; fields . put ( field , adf ) ; }
32726	public double tTest ( final double mu , final double [ ] sample ) throws MathIllegalArgumentException , NullArgumentException , MathIllegalStateException { checkSampleData ( sample ) ; return tTest ( StatUtils . mean ( sample ) , mu , StatUtils . variance ( sample ) , sample . length ) ; }
32729	@ Override public void accept ( TestValueVisitor visitor , FieldIdEnum fieldId ) { Expression expression = ff . property ( this . expression ) ; visitor . setTestValue ( fieldId , expression ) ; }
32730	public static void requestFileAccessPermission ( WindowAndroid windowAndroid , PermissionCallback callback ) { assert windowAndroid != _NULL ; windowAndroid . requestPermissions ( new String [ ] { android . Manifest . permission . WRITE_EXTERNAL_STORAGE } , callback ) ; }
32736	public static boolean hasFCMToken ( Context context ) { SharedPreferences pref = PreferenceManager . getDefaultSharedPreferences ( context . getApplicationContext ( ) ) ; return pref . getBoolean ( SENT_TOKEN_TO_SERVER , _BOOL ) ; }
32762	public long start ( ) { t = System . currentTimeMillis ( ) ; return t ; }
32763	@ TargetApi ( _NUM ) public Bundler putCharSequenceArray ( String key , CharSequence [ ] value ) { bundle . putCharSequenceArray ( key , value ) ; return this ; }
32767	public void encoding ( ) { outputRes ( ) ; rdp_encoding ( ) ; }
32772	public Builder clockTicker ( Ticker ticker ) { this . _ticker = ticker ; return this ; }
32774	public boolean save ( File file , boolean async ) { this . file = file ; return save ( async ) ; }
32785	public LeastSquaresBuilder weight ( final RealMatrix newWeight ) { this . weight = newWeight ; return this ; }
32797	public boolean add ( E item ) { addLast ( item ) ; return _BOOL ; }
32807	public Builder withGradleSync ( boolean gradleSync ) { myGradleSync = gradleSync ; return this ; }
32834	public static < T > Iterator < T > toIterator ( Collection < T > col ) { if ( col == _NULL ) return _NULL ; else return col . iterator ( ) ; }
32843	public static Map < String , Object > createImage ( DispatchContext dctx , Map < String , ? extends Object > context ) { Map < String , Object > result = createImageMethod ( dctx , context ) ; return result ; }
32847	public int read ( byte [ ] bytes , int offset , int len ) throws IOException { if ( ins . read ( bytes , offset , len ) < len ) throw new IOException ( _CHAR buffer underflow _CHAR ) ; return len ; }
32849	void finishEndElement ( ) { fInEndElement = _BOOL ; fElementAugs = _NULL ; }
32864	public TrustManagerBuilder withCertChainListener ( CertChainListener listener ) { mgr . addCertChainListener ( listener ) ; return ( this ) ; }
32879	private boolean journalRebuildRequired ( ) { final int REDUNDANT_OP_COMPACT_THRESHOLD = _NUM ; return redundantOpCount >= REDUNDANT_OP_COMPACT_THRESHOLD && redundantOpCount >= lruEntries . size ( ) ; }
32880	public void resetPotential ( ) { final int rank = Randomizer . nextInt ( _NUM ) < _NUM ? ( Randomizer . nextInt ( _NUM ) < _NUM ? - UNIQUE : - EPIC ) : - RARE ; resetPotentialWithRank ( rank , _NUM ) ; }
32887	private boolean trafficExpired ( AirMapTraffic traffic ) { int timeInterval = _NUM ; return new Date ( traffic . getIncomingTime ( ) . getTime ( ) + timeInterval * _NUM ) . before ( new Date ( ) ) ; }
32891	private void deleteLegionFromDB ( Legion legion ) { this . allCachedLegions . remove ( legion ) ; DAOManager . getDAO ( LegionDAO . class ) . deleteLegion ( legion . getLegionId ( ) ) ; }
32893	public final TestSubscriber < T > configureValuesStorage ( boolean enabled ) { this . valuesStorage = enabled ; return this ; }
32897	public void sendEffectIconsTo ( Player player ) { List < Effect > effects = getAbnormalEffects ( ) ; PacketSendUtility . sendPacket ( player , new SM_ABNORMAL_EFFECT ( getOwner ( ) , abnormals , effects ) ) ; }
32913	@ TargetApi ( _NUM ) public Bundler putCharSequenceArray ( String key , CharSequence [ ] value ) { bundle . putCharSequenceArray ( key , value ) ; return this ; }
32915	public void addOption ( String key , String title ) { keyOrderList . add ( key ) ; optionMap . put ( key , title ) ; }
32916	public Builder cacheOnDisk ( boolean cacheOnDisk ) { this . cacheOnDisk = cacheOnDisk ; return this ; }
32922	public boolean decrypt ( byte [ ] data , int offset , int length ) { cipher . decipher ( data , offset , length ) ; return verifyChecksum ( data , offset , length ) ; }
32930	@ Override protected void successfulAuthentication ( HttpServletRequest request , HttpServletResponse response , FilterChain chain , Authentication authResult ) throws IOException , ServletException { super . successfulAuthentication ( request , response , chain , authResult ) ; chain . doFilter ( request , response ) ; }
32941	public Builder expression ( final String expression ) { this . expression = expression ; return this ; }
32942	@ Override public ASContentModel createASContentModel ( int minOccurs , int maxOccurs , short operator ) throws DOMASException { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NOT_SUPPORTED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NOT_SUPPORTED_ERR , msg ) ; }
32945	public static void disableTrafficAlerts ( ) { getAirMapTrafficService ( ) . disconnect ( ) ; getAirMapTrafficService ( ) . removeAllListeners ( ) ; }
32951	public boolean isSingleAuthenticator ( ) { Debug . logInfo ( this . getClass ( ) . getName ( ) + _CHAR Authenticator isSingleAuthenticator ( ) _CHAR , module ) ; return _BOOL ; }
32984	public HectorCassandraClientConfigurer clusterName ( String clusterName ) { this . clusterName = clusterName ; return this ; }
32998	public void eatDelim ( char delimiter ) { if ( ! matchDelim ( delimiter ) ) throw new BadSyntaxException ( ) ; nextToken ( ) ; }
32999	protected void markTabStateInitialized ( ) { mTabStateInitialized = _BOOL ; for ( TabModelSelectorObserver listener : mObservers ) listener . onTabStateInitialized ( ) ; }
33001	private static int toEven ( float value ) { int i = Math . round ( value ) ; return ( i % _NUM == _NUM ) ? i - _NUM : i ; }
33011	@ Override protected int sizeOf ( String key , BitmapDrawable value ) { final int bitmapSize = getBitmapSize ( value ) / _NUM ; return bitmapSize == _NUM ? _NUM : bitmapSize ; }
33012	public static ProxiedAuthV1RequestControl newControl ( final DN authorizationName ) { Reject . ifNull ( authorizationName ) ; return new ProxiedAuthV1RequestControl ( authorizationName ) ; }
33037	protected static boolean isWhiteSpaceExceptSpace ( char ch ) { if ( ch >= _NUM ) return _BOOL ; return ch == _NUM || ch == _NUM || ch == _NUM ; }
33044	public Builder withFlicker ( ) { flicker = _BOOL ; return this ; }
33046	public synchronized NSObject anyObject ( ) { if ( set . isEmpty ( ) ) return _NULL ; else return set . iterator ( ) . next ( ) ; }
33052	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
33066	private void readObject ( java . io . ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; updateRangesFields ( ) ; }
33089	public PlaPointInt round ( ) { if ( is_NaN ( ) ) return new PlaPointInt ( ) ; return new PlaPointInt ( Math . round ( v_x ) , Math . round ( v_y ) ) ; }
33096	public static String defaultOrgAdminRoleCreateDuringOrgConfig ( ) { initialize ( ) ; return ( defaultORGADMIN ) ; }
33099	public static NodeList selectNodeList ( Node doc , String str , Node nsNode ) throws XPathException { SimpleNamespaceContext nsctx = new SimpleNamespaceContext ( nsNode ) ; return selectNodeList ( doc , str , nsctx ) ; }
33101	public static int dip2px ( Context context , float dpValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( dpValue * scale + _NUM . _NUM ) ; }
33107	public float readFloat ( ) throws SQLException { Float attrib = ( Float ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . floatValue ( ) ; }
33125	public AMActivityAuditEventBuilder component ( AuditConstants . Component value ) { putComponent ( jsonValue , value . toString ( ) ) ; return this ; }
33130	public void deactivate ( ) throws AMException , SSOException { setStringAttribute ( statusAN , _CHAR inactive _CHAR ) ; store ( ) ; }
33159	public JobService jobRange ( long from , long to , String order , Handler < AsyncResult < List < Job >> > handler ) { delegate . jobRange ( from , to , order , handler ) ; return this ; }
33182	public static MatchedValuesFilter createSubstringsFilter ( String rawAttributeType , ByteString subInitial , List < ByteString > subAny , ByteString subFinal ) { Reject . ifNull ( rawAttributeType ) ; return new MatchedValuesFilter ( SUBSTRINGS_TYPE , rawAttributeType , _NULL , subInitial , subAny , subFinal , _NULL ) ; }
33184	boolean verifyDeveloperPayload ( Purchase p ) { String payload = p . getDeveloperPayload ( ) ; return _BOOL ; }
33186	public BuilderImages < T > crop ( ) { this . config . setCrop ( ) ; return this ; }
33189	public int showSaveDialog ( Component parent ) throws HeadlessException { setDialogType ( SAVE_DIALOG ) ; return showDialog ( parent , _NULL ) ; }
33207	public SetupParameters jmxPort ( int jmxPort ) { this . jmxPort = jmxPort ; return this ; }
33218	public Encoder withoutPadding ( ) { if ( ! doPadding ) return this ; return new Encoder ( isURL , newline , linemax , _BOOL ) ; }
33222	public StringBuffer append ( long l ) { IntegralToString . appendLong ( this , l ) ; return this ; }
33224	protected void reportWrongNumberArgs ( ) throws WrongNumberArgsException { String fMsg = XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_INCORRECT_PROGRAMMER_ASSERTION , new Object [ ] { _CHAR Programmer _CHAR_CHAR } ) ; throw new RuntimeException ( fMsg ) ; }
33228	public E remove ( int index ) { checkElementIndex ( index ) ; return unlink ( node ( index ) ) ; }
33232	public Builder noStore ( ) { this . noStore = _BOOL ; return this ; }
33236	public final void popQuick ( ) { m_firstFree -- ; m_map [ m_firstFree ] = DTM . NULL ; }
33238	public boolean hasValue ( AttributeDescription attributeDescription , ByteString value ) { Attribute attr = getAttribute ( attributeDescription ) ; return attr != _NULL && attr . contains ( value ) ; }
33240	public static ArgumentException unknownValueForMultiValuedProperty ( String value , String propertyName ) { LocalizableMessage msg = ERR_DSCFG_ERROR_VALUE_DOES_NOT_EXIST . get ( value , propertyName ) ; return new ArgumentException ( msg ) ; }
33242	public void unload ( ) { setEstimatedMajorSpan ( _BOOL ) ; removeAll ( ) ; }
33256	public static String printBase64Binary ( byte [ ] val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printBase64Binary ( val ) ; }
33265	public CompositeData remove ( Object [ ] key ) { checkKeyType ( key ) ; return dataMap . remove ( Arrays . asList ( key ) ) ; }
33277	public void addOperand ( PdfVisibilityExpression expression ) { getPdfObject ( ) . add ( expression . getPdfObject ( ) ) ; getPdfObject ( ) . setModified ( ) ; }
33284	public Wrapper addServlet ( String contextPath , String servletName , String servletClass ) { Container ctx = getHost ( ) . findChild ( contextPath ) ; return addServlet ( ( Context ) ctx , servletName , servletClass ) ; }
33289	private void badIndex ( int index ) throws ArrayIndexOutOfBoundsException { String msg = _CHAR Attempt to modify attribute at illegal index : _CHAR + index ; throw new ArrayIndexOutOfBoundsException ( msg ) ; }
33291	public ReconAuditEventBuilder reconId ( String reconId ) { jsonValue . put ( RECON_ID , reconId ) ; return self ( ) ; }
33299	public RESTEndpointBuilder apiVersion ( String apiVersion ) { headers . put ( _CHAR Accept - API - Version _CHAR , _CHAR protocol = _NUM . _NUM , resource = _CHAR + apiVersion ) ; return this ; }
33303	public double nextDouble ( double least , double bound ) { if ( least >= bound ) throw new IllegalArgumentException ( ) ; return nextDouble ( ) * ( bound - least ) + least ; }
33308	public PVisitedNetworkIDHeader createPVisitedNetworkIDHeader ( ) { PVisitedNetworkID visitedNetworkID = new PVisitedNetworkID ( ) ; return visitedNetworkID ; }
33320	public void deleteSubConfigurations ( Set names ) throws AMConsoleException { subConfigMeta . setParentId ( _CHAR / _CHAR ) ; subConfigMeta . deleteSubConfigurations ( names ) ; }
33332	public static Set < String > asSetOfString ( Entry entry , String attrDesc ) { Attribute attr = entry . getAttribute ( attrDesc ) ; return attr != _NULL ? attr . parse ( ) . asSetOfString ( ) : Collections . < String > emptySet ( ) ; }
33343	public void addReturnAttribute ( CoreTokenField field ) { Reject . ifNull ( field ) ; returnFields . add ( field ) ; }
33357	public static void assertDefaultCipherSuites ( String [ ] cipherSuites ) { assertValidCipherSuites ( CIPHER_SUITES , cipherSuites ) ; assertEquals ( CIPHER_SUITES_DEFAULT , Arrays . asList ( cipherSuites ) ) ; }
33378	public static Node selectSingleNode ( Node doc , String str , Node nsNode ) throws XPathException { SimpleNamespaceContext nsctx = new SimpleNamespaceContext ( nsNode ) ; return selectSingleNode ( doc , str , nsctx ) ; }
33386	public static String before ( String self , String pattern ) { Matcher matcher = compile ( pattern , CASE_INSENSITIVE | UNICODE_CHARACTER_CLASS ) . matcher ( self ) ; return matcher . find ( ) ? self . substring ( _NUM , matcher . start ( ) ) . trim ( ) : self ; }
33388	@ Override public void postDelayed ( Runnable runnable , long delayMillis ) { if ( runnable == _NULL ) return ; TaskProxy . sHandler . postDelayed ( runnable , delayMillis ) ; }
33407	@ Override public void close ( ) throws SecurityException { target . close ( ) ; setLevel ( Level . OFF ) ; }
33424	public static File createTempFile ( final String ext ) throws IOException { final File file = File . createTempFile ( _CHAR fs - _CHAR , _CHAR . _CHAR + ext ) ; return file ; }
33432	public void write ( byte [ ] b , int off , int len ) throws IOException { out . write ( b , off , len ) ; cksum . update ( b , off , len ) ; }
33440	final boolean isRunningOrShutdown ( boolean shutdownOK ) { int rs = runStateOf ( ctl . get ( ) ) ; return rs == RUNNING || ( rs == SHUTDOWN && shutdownOK ) ; }
33449	protected String paramString ( ) { String rootPaneCheckingEnabledString = ( rootPaneCheckingEnabled ? _CHAR _BOOL _CHAR : _CHAR _BOOL _CHAR ) ; return super . paramString ( ) + _CHAR , rootPaneCheckingEnabled = _CHAR + rootPaneCheckingEnabledString ; }
33460	private boolean hasImageSyntax ( String attrName ) { Schema schema = getInfo ( ) . getServerDescriptor ( ) . getSchema ( ) ; return Utilities . hasImageSyntax ( attrName , schema ) ; }
33461	public WhereBuilder or ( String columnName , String op , Object value ) { appendCondition ( whereItems . size ( ) == _NUM ? _NULL : _CHAR OR _CHAR , columnName , op , value ) ; return this ; }
33467	public void mouseReleased ( MouseEvent e ) { ( ( MouseListener ) a ) . mouseReleased ( e ) ; ( ( MouseListener ) b ) . mouseReleased ( e ) ; }
33478	public static Remote register ( ActivationDesc desc ) throws UnknownGroupException , ActivationException , RemoteException { ActivationID id = ActivationGroup . getSystem ( ) . registerObject ( desc ) ; return sun . rmi . server . ActivatableRef . getStub ( desc , id ) ; }
33483	public boolean isExists ( ) throws IdRepoException , SSOException { IdServices idServices = IdServicesFactory . getDataStoreServices ( ) ; return idServices . isExists ( token , type , name , orgName ) ; }
33488	public Host parseHost ( String host ) throws ParseException { Lexer lexer = new Lexer ( _CHAR charLexer _CHAR , host ) ; return new HostNameParser ( lexer ) . host ( ) ; }
33491	static String createFilter ( String providerID , String nameID ) { String str = FED_INFO_DELIM + providerID + FED_INFO_DELIM + nameID + FED_INFO_DELIM ; return str ; }
33503	public static void main ( String [ ] args ) { int retCode = mainCLI ( args , System . out , System . err , System . in ) ; System . exit ( retCode ) ; }
33507	public synchronized BukkitTask runTaskTimer ( Plugin plugin , long delay , long period ) throws IllegalArgumentException , IllegalStateException { checkState ( ) ; return setupId ( Bukkit . getScheduler ( ) . runTaskTimer ( plugin , ( Runnable ) this , delay , period ) ) ; }
33508	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
33510	public Builder ca ( boolean ca ) { this . ca = ca ; return this ; }
33511	public boolean writeEntry ( Entry entry ) throws IOException , LDIFException { ifNull ( entry ) ; return entry . toLDIF ( exportConfig ) ; }
33559	public static TargetControl decode ( EnumTargetOperator operator , String expr ) throws AciException { Set < String > controlOIDs = Aci . decodeOID ( expr , WARN_ACI_SYNTAX_INVALID_TARGETCONTROL_EXPRESSION . get ( expr ) ) ; return new TargetControl ( operator , controlOIDs ) ; }
33560	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
33563	public void handleButton3Request ( RequestInvocationEvent event ) { CloseWindowViewBean vb = ( CloseWindowViewBean ) getViewBean ( CloseWindowViewBean . class ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
33572	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
33581	AuditLogFilterBuilder remove ( String configPath ) { auditLogFilterBuilder . remove ( configPath ) ; return this ; }
33585	public static DataFlavor decodeDataFlavor ( String nat ) throws ClassNotFoundException { String retval_str = SystemFlavorMap . decodeJavaMIMEType ( nat ) ; return ( retval_str != _NULL ) ? new DataFlavor ( retval_str ) : _NULL ; }
33632	public List < Order > queryDeep ( String where , String ... selectionArg ) { Cursor cursor = db . rawQuery ( getSelectDeep ( ) + where , selectionArg ) ; return loadDeepAllAndCloseCursor ( cursor ) ; }
33633	public Builder removeAllSuperiorObjectClass ( ) { this . superiorClasses . clear ( ) ; return this ; }
33648	public boolean isValid ( Object session ) throws SessionException { debug . message ( _CHAR FedletSessionProvider . isValid called _CHAR ) ; return _BOOL ; }
33655	@ Indexable ( type = IndexableType . REINDEX ) @ Override public Foo addFoo ( Foo foo ) { foo . setNew ( _BOOL ) ; return fooPersistence . update ( foo ) ; }
33656	public WorldCreator generator ( ChunkGenerator generator ) { this . generator = generator ; return this ; }
33662	void fullyUnlock ( ) { takeLock . unlock ( ) ; putLock . unlock ( ) ; }
33669	public int start ( ) { if ( first < _NUM ) throw new IllegalStateException ( _CHAR No match available _CHAR ) ; return first ; }
33674	public byte [ ] fromUTF8 ( String contents ) throws UnsupportedEncodingException { Reject . ifNull ( contents ) ; return contents . getBytes ( ENCODING ) ; }
33687	public boolean authenticate ( IdType idType , Callback [ ] credentials ) throws IdRepoException , com . sun . identity . authentication . spi . AuthLoginException { IdServices idServices = IdServicesFactory . getDataStoreServices ( ) ; return idServices . authenticate ( organizationDN , credentials , idType ) ; }
33704	boolean persistValue ( int id ) { int bit = _NUM << id ; return ( persistValue & bit ) != _NUM ; }
33712	public void reset ( ) { extensions = new Hashtable ( ) ; extOrdering = new Vector ( ) ; }
33725	public static String guessDisplayUserFromSession ( Session in_session ) { Object user = SessionUtils . guessUserFromSession ( in_session ) ; return escapeXml ( user ) ; }
33734	public AppLauncher forward ( int localPort ) { this . localPort = localPort ; return this ; }
33737	public NodeIterator nodeset ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_NODELIST , new Object [ ] { getTypeString ( ) } ) ; return _NULL ; }
33743	@ NonNull public static < T > Put < T > put ( @ NonNull String key , @ NonNull T object ) { failIfNotInitialized ( ) ; return new Put < > ( key , object ) ; }
33763	public static ArgumentException missingNameInPropertyArgument ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_NAME_IN_PROPERTY_VALUE . get ( arg ) ; return new ArgumentException ( msg ) ; }
33774	public T message ( String message ) { jsonValue . put ( MESSAGE , message ) ; return self ( ) ; }
33798	public void reset ( ) { System . arraycopy ( IV , _NUM , cfbV , _NUM , IV . length ) ; cipher . reset ( ) ; }
33805	@ Override public void init ( Subject subject , Map sharedState , Map options ) { this . sharedState = sharedState ; authLoginModule . init ( subject , sharedState , options ) ; }
33822	public static AsfHeader readHeader ( final RandomAccessFile file ) throws IOException { final InputStream stream = createStream ( file ) ; return FULL_READER . read ( Utils . readGUID ( stream ) , stream , _NUM ) ; }
33823	public KeyStoreBuilder withPassword ( final char [ ] password ) { this . password = password ; return this ; }
33837	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getCustomerDao ( ) : _NULL ; }
33845	public synchronized StringBuffer append ( char ch ) { append0 ( ch ) ; return this ; }
33849	public boolean lessThan ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . greaterThan ( this ) ; return this . num ( ) < obj2 . num ( ) ; }
33854	public static byte parseByte ( String lexicalXSDByte ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseByte ( lexicalXSDByte ) ; }
33857	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR ORDERS \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR DATE \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR CUSTOMER_ID \ _CHAR INTEGER NOT NULL ) ; _CHAR ) ; }
33869	public static int length ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . length ( ) ; }
33871	public void beginDisplay ( DisplayEvent e ) throws ModelControlException { super . beginDisplay ( e ) ; setInlineAlertMessage ( messageType , messageTitle , message ) ; }
33873	protected void tearDown ( ) { objArray = _NULL ; s = _NULL ; }
33876	private static void disableLogging ( ) { LogManager . getLogManager ( ) . reset ( ) ; Logger . getLogger ( _CHAR _CHAR ) . setLevel ( Level . OFF ) ; }
33897	void writeLine ( BufferedWriter writer , String line ) throws IOException { writer . write ( line ) ; writer . newLine ( ) ; }
33907	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton1Request ( event ) ; }
33914	public void componentHidden ( ComponentEvent e ) { ( ( ComponentListener ) a ) . componentHidden ( e ) ; ( ( ComponentListener ) b ) . componentHidden ( e ) ; }
33922	public boolean change_layer_action ( int p_new_layer ) { int r_layer = i_brd . set_layer ( p_new_layer ) ; return r_layer == p_new_layer ; }
33926	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
33931	void appendStartDocument ( ) { m_docElement = NULL ; initDocument ( _NUM ) ; }
33937	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; configDN = DN . valueOf ( _CHAR cn = Referential Integrity , cn = Plugins , cn = config _CHAR ) ; }
33951	public Result modifyDN ( ModifyDNRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . modifyDN ( request ) ; }
33962	public static void message ( CommandManager mgr , String msg , Throwable t ) { dumpToOutput ( mgr , msg , t ) ; mgr . getDebugger ( ) . message ( msg , t ) ; }
33975	public void change_user_unit ( UnitMeasure p_unit ) { PlaCoordTransform old_transform = coordinate_transform ; coordinate_transform = new PlaCoordTransform ( old_transform . user_unit_factor , p_unit , old_transform . board_unit_factor , old_transform . board_unit ) ; }
33993	public BuilderImage < T > crop ( ) { this . config . setCrop ( ) ; return this ; }
34000	public Node selectSingleNode ( Node contextNode , String str , Node namespaceNode ) throws TransformerException { NodeIterator nl = selectNodeIterator ( contextNode , str , namespaceNode ) ; return nl . nextNode ( ) ; }
34004	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; UIManager . getLookAndFeel ( ) . provideErrorFeedback ( target ) ; }
34007	public final static String formatProtocolVersion ( final ProtocolVersion version , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicLineFormatter . DEFAULT ; return formatter . appendProtocolVersion ( _NULL , version ) . toString ( ) ; }
34025	public Resource supportedAction ( final Action action ) { this . supportedActions . add ( action ) ; return this ; }
34026	public SAML2ConfigBuilder nameIdFormat ( String nameIdFormat ) { this . nameIdFormat = nameIdFormat ; return this ; }
34029	public String toString ( ) { if ( m_namespace != _NULL && m_namespace . length ( ) > _NUM ) return _CHAR { _CHAR + m_namespace + _CHAR } _CHAR + m_extensionName ; else return m_extensionName ; }
34046	public void enter ( MetricReference metricReference ) { Thread threadId = Thread . currentThread ( ) ; enter ( threadId , metricReference ) ; }
34049	public XObject operate ( XObject right ) throws javax . xml . transform . TransformerException { if ( XObject . CLASS_BOOLEAN == right . getType ( ) ) return right ; else return right . bool ( ) ? XBoolean . S_TRUE : XBoolean . S_FALSE ; }
34052	@ Override public void contextDestroyed ( ServletContextEvent event ) { log ( _CHAR contextDestroyed ( ) _CHAR ) ; this . context = _NULL ; }
34060	static public void assertSame ( String message , Object expected , Object actual ) { if ( expected == actual ) return ; failNotSame ( message , expected , actual ) ; }
34062	public final void lazySet ( boolean newValue ) { int v = newValue ? _NUM : _NUM ; unsafe . putOrderedInt ( this , valueOffset , v ) ; }
34063	public static boolean isConnectedWifi ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_WIFI ) ; }
34068	public Builder requiredAttributes ( final Collection < String > attributeNamesOrOIDs ) { this . requiredAttributes . addAll ( attributeNamesOrOIDs ) ; return this ; }
34071	@ Deactivate protected void deactivate ( ComponentContext context ) { managedRouter . removeAllRoutes ( ) ; managedRoutes . clear ( ) ; }
34079	public static void main ( String [ ] args ) { JKLogger logger = JKLoggerFactory . getLogger ( Integer . class ) ; logger . info ( _CHAR asdfads _CHAR ) ; }
34088	Future < Job > updateNow ( ) { this . updated_at = System . currentTimeMillis ( ) ; return this . set ( _CHAR updated_at _CHAR , String . valueOf ( updated_at ) ) ; }
34090	public static Object convertNodeToJAXB ( Node node ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( node ) ; }
34103	public void mouseExited ( MouseEvent e ) { hasMouseOver = _BOOL ; repaint ( ) ; }
34119	public void handleButton3Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToRealmView ( event ) ; }
34123	public void removeNode ( Node n ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESET_NOT_MUTABLE , _NULL ) ) ; this . removeElement ( n ) ; }
34151	@ Override public void close ( ) throws IOException { writer . flush ( ) ; writer . close ( ) ; }
34162	public static String printDouble ( double val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printDouble ( val ) ; }
34165	@ Override public void execute ( ) throws BuildException { super . execute ( ) ; execute ( _CHAR / sslConnectorCiphers _CHAR ) ; }
34169	public net . aimeizi . person . Person . Builder clearAge ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
34214	public void appendToFsb ( org . apache . xml . utils . FastStringBuffer fsb ) { XString xstring = ( XString ) xstr ( ) ; xstring . appendToFsb ( fsb ) ; }
34220	public String format ( DateTimeFormatter formatter ) { Objects . requireNonNull ( formatter , _CHAR formatter _CHAR ) ; return formatter . format ( this ) ; }
34225	public SubResourceCollection useClientDnNaming ( final String dnAttribute ) { this . namingStrategy = new DnNamingStrategy ( dnAttribute ) ; return this ; }
34269	public String encodeURL ( HttpServletResponse res , String url , String cookieName , Session session ) { String httpEncodeUrl = res . encodeURL ( url ) ; return encodeSessionURL ( httpEncodeUrl , SessionUtils . QUERY , _BOOL , cookieName , session ) ; }
34271	public void addNode ( int n ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; this . addElement ( n ) ; }
34273	public MarkovNameGenerator build ( ) throws IllegalStateException { checkState ( ) ; return new MarkovNameGenerator ( this ) ; }
34301	public void register ( String elemname , String classname ) { if ( elemmap == _NULL ) elemmap = new Hashtable ( ) ; elemmap . put ( elemname , classname ) ; }
34318	static String format ( String property , Object [ ] args ) { String text = ResourceBundle . getBundle ( Messages . class . getName ( ) ) . getString ( property ) ; return MessageFormat . format ( text , args ) ; }
34319	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
34337	public void insert_pin ( int p_component_no , int p_pin_no , NetNosList p_net_no_arr , int p_clearance_class , ItemFixState p_fixed_state ) { BrdAbitPin new_pin = new BrdAbitPin ( p_component_no , p_pin_no , p_net_no_arr , p_clearance_class , _NUM , p_fixed_state , this ) ; insert_item ( new_pin ) ; }
34355	public boolean hasTag ( ) { if ( parameters == _NULL ) return _BOOL ; return hasParameter ( ParameterNames . TAG ) ; }
34358	public static void releaseMBeanServer ( MBeanServer mbeanServer ) { checkPermission ( _CHAR releaseMBeanServer _CHAR ) ; removeMBeanServer ( mbeanServer ) ; }
34359	private BigDecimal convertIntToBigDecimal ( int quoteParam ) { BigDecimal quoteParamBigDecimal = new BigDecimal ( quoteParam ) . divide ( new BigDecimal ( _NUM ) , new MathContext ( _NUM , RoundingMode . HALF_DOWN ) ) ; return quoteParamBigDecimal ; }
34360	public static ModifyRequest newModifyRequest ( final String name ) { Reject . ifNull ( name ) ; return new ModifyRequestImpl ( DN . valueOf ( name ) ) ; }
34371	@ Override public void sendSearchEntry ( SearchOperation searchOperation , SearchResultEntry searchEntry ) { SearchResultEntryProtocolOp protocolOp = new SearchResultEntryProtocolOp ( searchEntry , ldapVersion ) ; sendLDAPMessage ( new LDAPMessage ( searchOperation . getMessageID ( ) , protocolOp , searchEntry . getControls ( ) ) ) ; }
34374	public static String defaultPeopleContainerName ( ) { initialize ( ) ; return ( defaultPC ) ; }
34381	public LoginConfiguration indexType ( AuthIndexType indexType ) { this . indexType = indexType ; return this ; }
34384	public boolean add ( E e ) { if ( offer ( e ) ) return _BOOL ; else throw new IllegalStateException ( _CHAR Queue full _CHAR ) ; }
34391	protected void uninstallKeyboardActions ( ) { SwingUtilities . replaceUIActionMap ( list , _NULL ) ; SwingUtilities . replaceUIInputMap ( list , JComponent . WHEN_FOCUSED , _NULL ) ; }
34400	public boolean hasAccessToken ( ) { final String token = getAccessToken ( ) ; return token != _NULL && ! token . isEmpty ( ) ; }
34403	public static synchronized String [ ] [ ] read ( String logName , String logType , String timeStamp , Object userCrdential ) throws IOException , NoSuchFieldException , IllegalArgumentException , RuntimeException , Exception { queryResult = read ( logName , logType , timeStamp , _NULL , userCrdential ) ; return queryResult ; }
34404	public void removeMember ( Guid guid ) throws UMSException { PersistentObject member = UMSObject . getObject ( getPrincipal ( ) , guid ) ; removeMember ( member ) ; }
34424	public void windowActivated ( WindowEvent e ) { ( ( WindowListener ) a ) . windowActivated ( e ) ; ( ( WindowListener ) b ) . windowActivated ( e ) ; }
34429	public static short parseShort ( String lexicalXSDShort ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseShort ( lexicalXSDShort ) ; }
34447	@ Indexable ( type = IndexableType . REINDEX ) @ Override public Foo addFoo ( Foo foo ) { foo . setNew ( _BOOL ) ; return fooPersistence . update ( foo ) ; }
34448	public static ProxiedAuthV1RequestControl newControl ( final String authorizationName ) { Reject . ifNull ( authorizationName ) ; return new ProxiedAuthV1RequestControl ( DN . valueOf ( authorizationName ) ) ; }
34453	public void reset ( ) { start = _NUM ; end = _NUM ; }
34455	public boolean match ( MimeType type ) { if ( type == _NULL ) return _BOOL ; return primaryType . equals ( type . getPrimaryType ( ) ) && ( subType . equals ( _CHAR * _CHAR ) || type . getSubType ( ) . equals ( _CHAR * _CHAR ) || ( subType . equals ( type . getSubType ( ) ) ) ) ; }
34472	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiMenuBarUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiMenuBarUI ) mui ) . uis , a ) ; }
34488	public static Note natural ( int octave , Tone tone ) { Validate . isTrue ( octave != _NUM , _CHAR Octave can not be _NUM for naturals '' ) ; return new Note ( octave , tone , _BOOL ) ; }
34489	public static void initializePropertyDefinition ( PropertyDefinition < ? > propertyDef ) throws Exception { propertyDef . initialize ( ) ; propertyDef . getDefaultBehaviorProvider ( ) . initialize ( ) ; }
34508	@ Override public Foo removeByUUID_G ( String uuid , long groupId ) throws NoSuchFooException { Foo foo = findByUUID_G ( uuid , groupId ) ; return remove ( foo ) ; }
34520	void noteBytesRead ( int pBytes ) { bytesRead += pBytes ; notifyListener ( ) ; }
34531	@ Override public void destroy ( ) { this . attribute = _NULL ; this . filterConfig = _NULL ; }
34533	public void add ( N nodeA , N nodeB ) throws NullPointerException { theNeighbors . get ( nodeA ) . add ( nodeB ) ; theNeighbors . get ( nodeB ) . add ( nodeA ) ; }
34542	public Builder syntax ( String syntaxOID ) { this . syntaxOID = syntaxOID ; return this ; }
34549	public Dimension minimumLayoutSize ( Container parent ) { GridBagLayoutInfo info = getLayoutInfo ( parent , MINSIZE ) ; return getMinSize ( parent , info ) ; }
34559	public SAML2ConfigBuilder customSubjectProviderClassName ( String customSubjectProviderClassName ) { this . customSubjectProviderClassName = customSubjectProviderClassName ; return this ; }
34561	public static void main ( final String [ ] args ) { final int retCode = new LDIFSearch ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
34599	public final void consume ( @ NonNull Receiver < Closeable > receiver ) { ConsumingUpdatable cu = new ConsumingUpdatable ( this , receiver ) ; addUpdatable ( cu ) ; }
34602	static int capacityForInitSize ( int size ) { int result = ( size >> _NUM ) + size ; return ( result & ~ ( MAXIMUM_CAPACITY - _NUM ) ) == _NUM ? result : MAXIMUM_CAPACITY ; }
34603	protected static final boolean isWhiteSpaceExceptSpace ( char ch ) { if ( ch >= _NUM ) return _BOOL ; return ch == _NUM || ch == _NUM || ch == _NUM ; }
34610	public Builder removeAllNames ( ) { this . names . clear ( ) ; return this ; }
34631	public void replaceResourceData ( int idx , SMDiscoEntryData data ) throws AMConsoleException { data . setDiscoStr ( isUserResourceOffering ( ) ) ; SMDiscoEntryData old = ( SMDiscoEntryData ) discoData . set ( idx , data ) ; }
34652	public boolean stopCellEditing ( ) { fireEditingStopped ( ) ; return _BOOL ; }
34676	public static ArgumentException missingValueInPropertyModification ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_NAME_IN_PROPERTY_MOD . get ( arg ) ; return new ArgumentException ( msg ) ; }
34681	public < T > void addProperty ( PropertyDefinition < T > pd , Collection < T > defaultValues , Collection < T > activeValues ) { MyProperty < T > p = new MyProperty < > ( pd , defaultValues , activeValues ) ; properties . put ( pd , p ) ; }
34682	public static String normalizeDigestName ( String algo ) { if ( fixNames . containsKey ( algo ) ) return fixNames . get ( algo ) ; return algo ; }
34687	public Set canHaveMembers ( ) { Set results = ( Set ) IdUtils . typesCanHaveMembers . get ( getName ( ) ) ; return ( results == _NULL ) ? Collections . EMPTY_SET : results ; }
34688	public Enumeration children ( ) { if ( ! loadedChildren ) loadChildren ( ) ; return super . children ( ) ; }
34692	public void show ( @ IdRes final int itemId ) { map . add ( itemId ) ; navigation . invalidateBadge ( itemId ) ; }
34707	public QueryResponseWrapper query ( Query toQuery , int limit , long offset ) throws IndexParseException , FieldNotIndexedException { ParsedQuery parsedQuery = ParsedQueryFactory . getParsedQuery ( toQuery . getDatabase ( ) , toQuery , queries . getSession ( ) ) ; return queries . query ( parsedQuery , limit , offset ) ; }
34713	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getCollectEntityDao ( ) : _NULL ; }
34725	public void startElement ( ) { nss . pushContext ( ) ; inCollectingMode = _BOOL ; }
34726	public SAML2ConfigBuilder customAttributeStatementsProviderClassName ( String customAttributeStatementsProviderClassName ) { this . customAttributeStatementsProviderClassName = customAttributeStatementsProviderClassName ; return this ; }
34738	public AccountService addAccount ( Account account , Handler < AsyncResult < Void >> resultHandler ) { delegate . addAccount ( account , resultHandler ) ; return this ; }
34756	public Node appendChild ( Node newChild ) throws DOMException { error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; return _NULL ; }
34759	protected String paramString ( ) { String defaultCapableString = ( defaultCapable ? _CHAR _BOOL _CHAR : _CHAR _BOOL _CHAR ) ; return super . paramString ( ) + _CHAR , defaultCapable = _CHAR + defaultCapableString ; }
34760	protected void vmInfo ( PrintWriter writer , StringManager smClient , Enumeration < Locale > requestedLocales ) { writer . println ( smClient . getString ( _CHAR managerServlet . vminfo _CHAR ) ) ; writer . print ( Diagnostics . getVMInfo ( requestedLocales ) ) ; }
34761	@ Override public boolean sendSearchReference ( SearchOperation searchOperation , SearchResultReference searchReference ) throws DirectoryException { ( ( InternalSearchOperation ) searchOperation ) . addSearchReference ( searchReference ) ; return _BOOL ; }
34780	@ Override public TagResult generateValue ( TemplateEntry templateEntry , TemplateValue templateValue ) { templateValue . append ( text ) ; return TagResult . SUCCESS_RESULT ; }
34801	public void removeUserLockoutEntry ( String userDN ) { pwResetFailHash . remove ( userDN ) ; userWarningCount = _NUM ; }
34805	public long tryOptimisticRead ( ) { long s ; return ( ( ( s = state ) & WBIT ) == _NUM ) ? ( s & SBITS ) : _NUM ; }
34815	public boolean isTerminalDataDependency ( ) { EventKind kind = getTrace ( ) . getKind ( getEventID ( ) ) ; return kind . isDefinition || kind . isArgument || kind . isInvocation || kind == EventKind . RETURN || kind . isInstantiation ; }
34827	public boolean containsAll ( Collection < ? > c ) { for ( Object o : c ) if ( ! contains ( o ) ) return _BOOL ; return _BOOL ; }
34834	public static boolean isHistoricalAttribute ( Attribute attr ) { AttributeType attrType = attr . getAttributeDescription ( ) . getAttributeType ( ) ; return HISTORICAL_ATTRIBUTE_NAME . equals ( attrType . getNameOrOID ( ) ) ; }
34843	public PdfCanvas moveTo ( double x , double y ) { contentStream . getOutputStream ( ) . writeDouble ( x ) . writeSpace ( ) . writeDouble ( y ) . writeSpace ( ) . writeBytes ( m ) ; return this ; }
34864	public static ArgumentException unknownProperty ( AbstractManagedObjectDefinition < ? , ? > d , String name ) { LocalizableMessage message = ERR_DSCFG_ERROR_PROPERTY_UNRECOGNIZED . get ( name , d . getUserFriendlyPluralName ( ) ) ; return new ArgumentException ( message ) ; }
34866	public boolean isAuthnContextMatching ( List requestedACClassRefs , String acClassRef , String comparison , String realm , String hostEntityID ) { Map authRefMap = getAuthRefMap ( realm , hostEntityID ) ; return SAML2Utils . isAuthnContextMatching ( requestedACClassRefs , acClassRef , comparison , authRefMap ) ; }
34884	public static void copy ( byte [ ] input , Writer output , String encoding ) throws IOException { ByteArrayInputStream in = new ByteArrayInputStream ( input ) ; copy ( in , output , encoding ) ; }
34931	@ SuppressWarnings ( _CHAR unchecked _CHAR ) private Segment < K , V > segmentForHash ( int h ) { long u = ( ( ( h >> > segmentShift ) & segmentMask ) << SSHIFT ) + SBASE ; return ( Segment < K , V > ) UNSAFE . getObjectVolatile ( segments , u ) ; }
34935	public static void main ( final String [ ] args ) { final int retCode = new LDIFModify ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
34941	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiMenuItemUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiMenuItemUI ) mui ) . uis , a ) ; }
34963	public static String removeSpaces ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . replaceAll ( _CHAR \\ s _CHAR , _CHAR _CHAR ) ; }
34967	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { XMLString s1 = getArg0AsString ( xctxt ) ; return ( XString ) s1 . fixWhiteSpace ( _BOOL , _BOOL , _BOOL ) ; }
34977	void initialize ( ) { UIManager . addPropertyChangeListener ( defaultsListener ) ; UIManager . getDefaults ( ) . addPropertyChangeListener ( colorTree ) ; }
35016	public final void writeLong ( long val ) throws IOException { Memory . pokeLong ( scratch , _NUM , val , ByteOrder . BIG_ENDIAN ) ; write ( scratch , _NUM , SizeOf . LONG ) ; }
35026	public void addTextValue ( String value ) { TextEncodedStringSizeTerminated text = ( TextEncodedStringSizeTerminated ) getObject ( DataTypes . OBJ_TEXT ) ; text . addValue ( value ) ; }
35033	private void safeDamageRange ( int a0 , int a1 ) throws BadLocationException { Document doc = component . getDocument ( ) ; safeDamageRange ( doc . createPosition ( a0 ) , doc . createPosition ( a1 ) ) ; }
35055	public JMenu add ( JMenu c ) { super . add ( c ) ; return c ; }
35073	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
35090	public void recycle ( ) { decoder . reset ( ) ; leftovers . position ( _NUM ) ; }
35094	public ProductService retrieveProductPrice ( String productId , Handler < AsyncResult < JsonObject >> resultHandler ) { delegate . retrieveProductPrice ( productId , resultHandler ) ; return this ; }
35096	public long readLong ( ) throws SQLException { Long attrib = ( Long ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . longValue ( ) ; }
35102	public void process ( String name , Vector elems , Hashtable atts , String pcdata ) { paramIndex = ( ( ParamIndex ) elems . elementAt ( _NUM ) ) . intValue ; paramValue = ( ( ParamValue ) elems . elementAt ( _NUM ) ) . str ; }
35108	public List unshift ( Collection < ? > elements ) { addAll ( _NUM , elements ) ; return this ; }
35120	private boolean mustAdd ( MatchingRule matchingRule ) { String f = filter . getText ( ) . trim ( ) ; return f . length ( ) == _NUM || ( FILTER_NAME . equals ( filterAttribute . getSelectedItem ( ) ) && mustAdd ( f , matchingRule . getOID ( ) , matchingRule . getNameOrOID ( ) ) ) ; }
35131	public ReplicationParameters replicationPortDestination ( int port ) { this . replicationPortDestination = port ; return this ; }
35169	public PdfExtGState put ( PdfName key , PdfObject value ) { getPdfObject ( ) . put ( key , value ) ; return this ; }
35172	void uninitialize ( ) { UIManager . removePropertyChangeListener ( defaultsListener ) ; UIManager . getDefaults ( ) . removePropertyChangeListener ( colorTree ) ; }
35173	@ Override public void putAll ( Map < ? extends K , ? extends V > map ) { ensureCapacity ( map . size ( ) ) ; super . putAll ( map ) ; }
35206	public String deferenceRestrictedID ( Session session , String restrictedID ) throws SessionException { SessionID sessionId = new SessionID ( restrictedID ) ; return sessionOperationStrategy . getOperation ( session . getSessionID ( ) ) . deferenceRestrictedID ( session , sessionId ) ; }
35209	@ Override protected void onResume ( ) { super . onResume ( ) ; syncUIControlState ( ) ; }
35216	public static void clear ( ) { sigHash . clear ( ) ; encHash . clear ( ) ; }
35233	public PdfCanvas closePath ( ) { contentStream . getOutputStream ( ) . writeBytes ( h ) ; return this ; }
35239	public Object put ( Object key , Object value ) { internalPut ( ( CompositeData ) value ) ; return value ; }
35242	public void normal ( ) { mHintView . setVisibility ( View . VISIBLE ) ; mProgressBar . setVisibility ( View . GONE ) ; }
35246	public void addLiteralResultAttribute ( AVT avt ) { if ( _NULL == m_avts ) m_avts = new ArrayList ( ) ; m_avts . add ( avt ) ; }
35260	public void close ( ) throws IOException { isClosed = _BOOL ; impl . close ( ) ; }
35267	public boolean equals ( Object other ) { if ( other instanceof BigInt ) return equals ( ( BigInt ) other ) ; return _BOOL ; }
35269	public AuthenticationEnforcer exceptRead ( ) { exceptRead = _BOOL ; return this ; }
35288	public String toXMLString ( ) throws FSMsgException { String xml = this . toXMLString ( _BOOL , _BOOL ) ; return xml ; }
35292	public void abort ( ) { aborted = _BOOL ; if ( waitingThread != _NULL ) waitingThread . interrupt ( ) ; }
35309	private boolean isSubcommand ( String name ) { SubCommand subCommand = getSubCommand ( ) ; return subCommand != _NULL && subCommand . getName ( ) . equalsIgnoreCase ( name ) ; }
35319	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
35322	@ Override public String toString ( ) { String delegate = fileFilter != _NULL ? fileFilter . toString ( ) : filenameFilter . toString ( ) ; return super . toString ( ) + _CHAR ( _CHAR + delegate + _CHAR ) _CHAR ; }
35336	public PAccessNetworkInfoHeader createPAccessNetworkInfoHeader ( ) { PAccessNetworkInfo accessNetworkInfo = new PAccessNetworkInfo ( ) ; return accessNetworkInfo ; }
35340	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiTabbedPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiTabbedPaneUI ) mui ) . uis , a ) ; }
35350	public AuditEvent convertToAuditEvent ( PersistentAuditEvent persistentAuditEvent ) { Instant instant = persistentAuditEvent . getAuditEventDate ( ) . atZone ( ZoneId . systemDefault ( ) ) . toInstant ( ) ; return new AuditEvent ( Date . from ( instant ) , persistentAuditEvent . getPrincipal ( ) , persistentAuditEvent . getAuditEventType ( ) , convertDataToObjects ( persistentAuditEvent . getData ( ) ) ) ; }
35351	public static void usage ( ) { System . out . println ( _CHAR Tribes MapDemo . '' ) ; System . out . println ( _CHAR Usage : \ n \ t _CHAR + _CHAR java MapDemo [ channel options ] mapName \ n \ t _CHAR + _CHAR \ tChannel options : _CHAR + ChannelCreator . usage ( ) ) ; }
35374	public static InputStream toInputStream ( String input , String encoding ) throws IOException { byte [ ] bytes = input . getBytes ( Charsets . toCharset ( encoding ) ) ; return new ByteArrayInputStream ( bytes ) ; }
35375	public Builder addActions ( Map < String , Boolean > actions ) { this . actions . putAll ( actions ) ; return this ; }
35376	public static boolean isAuthenticated ( ) throws IOException { AuthenticatedFaceletsTag authenticatedTag = new AuthenticatedFaceletsTag ( ) ; return authenticatedTag . authorize ( ) ; }
35378	public void joinGroup ( SocketAddress groupAddress , NetworkInterface netInterface ) throws IOException { checkJoinOrLeave ( groupAddress , netInterface ) ; impl . joinGroup ( groupAddress , netInterface ) ; }
35380	public Builder names ( final Collection < String > names ) { this . names . addAll ( names ) ; return this ; }
35390	public Object object ( ) { if ( m_DTMXRTreeFrag . getXPathContext ( ) != _NULL ) return new org . apache . xml . dtm . ref . DTMNodeIterator ( ( DTMIterator ) ( new org . apache . xpath . NodeSetDTM ( m_dtmRoot , m_DTMXRTreeFrag . getXPathContext ( ) . getDTMManager ( ) ) ) ) ; else return super . object ( ) ; }
35399	@ Override public Result decode ( BinaryBitmap image ) throws NotFoundException { setHints ( _NULL ) ; return decodeInternal ( image ) ; }
35407	public synchronized void mark ( int readlimit ) { marklimit = readlimit ; markpos = pos ; }
35413	public Builder generateUUID ( ) { this . uuid = UUID . randomUUID ( ) . toString ( ) ; return this ; }
35414	@ Override public V remove ( Object key ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR parameterMap . locked _CHAR ) ) ; return ( super . remove ( key ) ) ; }
35426	public void changedUpdate ( FlowView fv , DocumentEvent e , Rectangle alloc ) { sync ( fv ) ; super . changedUpdate ( fv , e , alloc ) ; }
35427	public Builder equalityMatchingRule ( String equalityMatchingRuleOID ) { this . equalityMatchingRuleOID = equalityMatchingRuleOID ; return this ; }
35434	public Object clone ( ) throws CloneNotSupportedException { AxesWalker clone = ( AxesWalker ) super . clone ( ) ; return clone ; }
35435	public KeyStoreJwtTokenConfig withEncryptionKeyPairAlias ( String encryptionKeyPairAlias ) { this . encryptionKeyPairAlias = encryptionKeyPairAlias ; return this ; }
35436	public void flush ( ) throws IOException { flushCache ( ) ; this . out . flush ( ) ; }
35467	public Executor inheritEnv ( boolean b ) { this . inheritEnv = b ; return this ; }
35478	public Node item ( int index ) { runTo ( index ) ; return ( Node ) this . elementAt ( index ) ; }
35479	@ Override public synchronized void stop ( ) { getTransport ( ) . disconnect ( ) ; channel = _NULL ; }
35494	private boolean isCutoverYear ( int normalizedYear ) { int cutoverYear = ( calsys == gcal ) ? gregorianCutoverYear : gregorianCutoverYearJulian ; return normalizedYear == cutoverYear ; }
35500	public T timestamp ( String timestamp ) { jsonValue . put ( TIMESTAMP , timestamp ) ; return self ( ) ; }
35508	public boolean append ( double p_value ) { Float value = ( float ) coordinate_transform . board_to_user ( p_value ) ; return append ( number_format . format ( value ) ) ; }
35515	public void comment ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { flushPending ( ) ; if ( m_tracer != _NULL ) super . fireCommentEvent ( ch , start , length ) ; }
35521	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
35524	public ScriptCompiler shiftLeft ( String sourceName , String source ) { sources . put ( sourceName , source ) ; return this ; }
35532	public static String printInt ( int val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printInt ( val ) ; }
35536	public static NSObject parse ( final byte [ ] bytes ) throws ParserConfigurationException , ParseException , SAXException , PropertyListFormatException , IOException { ByteArrayInputStream bis = new ByteArrayInputStream ( bytes ) ; return parse ( bis ) ; }
35542	@ Override public boolean isAllowed ( LocalBackendDeleteOperation operation ) { AciContainer container = new AciLDAPOperationContainer ( operation , ACI_DELETE ) ; return isAllowed ( container , operation ) ; }
35552	@ Override public Set < Object > keySet ( ) { checkInitialized ( ) ; return Collections . unmodifiableSet ( super . keySet ( ) ) ; }
35553	public void enter ( Thread threadId , MetricReference metricReference ) { HashMap < MetricReference , Object > attribs = getAttributes ( threadId ) ; attribs . put ( metricReference , System . currentTimeMillis ( ) ) ; }
35565	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR SAVED_DAILY_DETAIL \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
35572	public void destroyModuleState ( ) { userPrincipal = _NULL ; userTokenId = _NULL ; }
35590	public void startEditingAtPath ( JTree tree , TreePath path ) { tree . scrollPathToVisible ( path ) ; if ( path != _NULL && tree . isVisible ( path ) ) startEditing ( path , _NULL ) ; }
35603	public JMenuItem add ( JMenuItem menuItem ) { super . add ( menuItem ) ; return menuItem ; }
35614	public int next ( ) { _currentNode = ( _currentNode == DTM . NULL ) ? DTM . NULL : _nextsib ( _currentNode ) ; return returnNode ( makeNodeHandle ( _currentNode ) ) ; }
35630	private static ClassLoader createSystemClassLoader ( ) { String classPath = System . getProperty ( _CHAR java . class . path _CHAR , _CHAR . _CHAR ) ; return new PathClassLoader ( classPath , BootClassLoader . getInstance ( ) , _BOOL ) ; }
35631	public Compiler add ( URL url ) { config . classpath . add ( url ) ; return this ; }
35642	public void removePeopleContainerRule ( Guid guid , String filter ) throws UMSException { PCMappingTable mt = PCMappingTable . getPCMappingTable ( this ) ; mt . removeRule ( guid , filter ) ; }
35644	void elementDequeued ( ) { if ( count == _NUM ) queueIsEmpty ( ) ; else if ( takeIndex == _NUM ) takeIndexWrapped ( ) ; }
35648	static boolean isLoggingStackTraceElement ( StackTraceElement trace ) { String name = trace . getClassName ( ) ; return name . startsWith ( Thread . class . getName ( ) ) || name . startsWith ( DebugTracer . class . getName ( ) ) || name . startsWith ( OPENDJ_LOGGER_ADAPTER_CLASS_NAME ) || name . startsWith ( LocalizedLogger . class . getName ( ) ) ; }
35669	public static ManagementContext newLDIFManagementContext ( final File ldifFile ) throws IOException { final List < IOException > exceptions = new ArrayList < > ( ) ; return new ManagementContextWrapper ( newLDIFManagementContext ( ldifFile , exceptions ) , exceptions ) ; }
35683	private JapaneseDate withYear ( JapaneseEra era , int yearOfEra ) { int year = JapaneseChronology . INSTANCE . prolepticYear ( era , yearOfEra ) ; return with ( isoDate . withYear ( year ) ) ; }
35689	private void log ( String message ) { if ( context != _NULL ) context . log ( _CHAR ContextListener : _CHAR + message ) ; else System . out . println ( _CHAR ContextListener : _CHAR + message ) ; }
35719	public static ServerSideSortResponseControl newControl ( final ResultCode result ) { Reject . ifNull ( result ) ; return new ServerSideSortResponseControl ( _BOOL , result , _NULL ) ; }
35759	private static String makeKeyFromLDAPUrl ( LDAPURL url ) { String protocol = isSecureLDAPUrl ( url ) ? _CHAR LDAPS _CHAR : _CHAR LDAP _CHAR ; return protocol + _CHAR : _CHAR + url . getHost ( ) + _CHAR : _CHAR + url . getPort ( ) ; }
35765	public void modifyDN ( ModifyDNRequest request ) throws LdapException { addControls ( request ) ; conn . getConnection ( ) . modifyDN ( request ) ; }
35780	public static void main ( String [ ] args ) { int retCode = mainCLI ( args , _BOOL , System . out , System . err , System . in ) ; System . exit ( retCode ) ; }
35792	public void enableInputMethods ( boolean enable ) { checkForEnableIM = _BOOL ; super . enableInputMethods ( enable ) ; }
35800	private synchronized void readObject ( java . io . ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getName ( ) ) ; }
35806	void updateItem ( Barcode barcode ) { mBarcode = barcode ; postInvalidate ( ) ; }
35809	private static byte [ ] readFileBytes ( File file ) throws IOException { FileInputStream fis = new FileInputStream ( file ) ; return readInputStreamBytes ( fis , _BOOL ) ; }
35814	public static byte [ ] decode ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decode ( bytes , _NUM , bytes . length ) ; }
35830	private boolean journalRebuildRequired ( ) { final int redundantOpCompactThreshold = _NUM ; return redundantOpCount >= redundantOpCompactThreshold && redundantOpCount >= lruEntries . size ( ) ; }
35836	public static boolean isSAML2FailoverEnabled ( ) { String enableFailOver = ( String ) SAML2ConfigService . getAttribute ( SAML2ConfigService . SAML2_FAILOVER_ATTR ) ; return Boolean . parseBoolean ( enableFailOver ) ; }
35840	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR COLLECT_ENTITY \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
35852	public static String parseString ( String lexicalXSDString ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseString ( lexicalXSDString ) ; }
35863	public GSERParser skipSP ( ) throws DecodeException { skip ( GSER_SP ) ; return this ; }
35864	public RxGalleryFinal cropMaxScaleMultiplier ( @ FloatRange ( from = _NUM . _NUM , fromInclusive = _BOOL ) float maxScaleMultiplier ) { configuration . setMaxScaleMultiplier ( maxScaleMultiplier ) ; return this ; }
35868	public Result add ( AddRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . add ( request ) ; }
35879	public boolean visitVariableRef ( ExpressionOwner owner , Variable var ) { m_isAbs = _BOOL ; return _BOOL ; }
35880	public ConfigParameters serverInstanceDirectory ( String dir ) { serverInstanceDirectory = dir ; return this ; }
35910	public void reset ( ) { super . reset ( ) ; if ( _NULL != m_iterator ) m_iterator . reset ( ) ; }
35916	public void delete ( InternalSession session ) throws CoreTokenException { String tokenId = tokenIdFactory . toSessionTokenId ( session . getID ( ) ) ; coreTokenService . delete ( tokenId ) ; }
35928	public ReplicationParameters replicationPortSource ( int port ) { this . replicationPortSource = port ; return this ; }
35930	public void makeVisible ( ) { TreeStateNode parent = ( TreeStateNode ) getParent ( ) ; if ( parent != _NULL ) parent . expandParentAndReceiver ( ) ; }
35931	protected void uninstallDefaults ( ) { LookAndFeel . installColorsAndFont ( comboBox , _CHAR ComboBox . background _CHAR , _CHAR ComboBox . foreground _CHAR , _CHAR ComboBox . font _CHAR ) ; LookAndFeel . uninstallBorder ( comboBox ) ; }
35941	public ConversationFactory withFirstPrompt ( Prompt firstPrompt ) { this . firstPrompt = firstPrompt ; return this ; }
35952	@ Override public void shutdown ( ) { super . shutdown ( ) ; clearRemoteLSHandlers ( ) ; }
35956	public int readInt ( ) throws SQLException { Integer attrib = ( Integer ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . intValue ( ) ; }
35964	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
35972	public static void executeRandomModifiableVariableModification ( ModifiableVariableHolder object ) { Field field = object . getRandomModifiableVariableField ( ) ; executeModifiableVariableModification ( object , field ) ; }
35975	public byte [ ] writeByteArray ( ) { logger . config ( _CHAR Writing byte array _CHAR + this . getIdentifier ( ) ) ; return ( byte [ ] ) value ; }
35983	public void detach ( ) { m_iterator = _NULL ; super . detach ( ) ; }
35986	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR _CHAR _CHAR ; db . execSQL ( sql ) ; }
35999	public final static String formatParameters ( final NameValuePair [ ] nvps , final boolean quote , HeaderValueFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicHeaderValueFormatter . DEFAULT ; return formatter . formatParameters ( _NULL , nvps , quote ) . toString ( ) ; }
36012	private void executeNotAssuredScenario ( ) throws Exception { checkAssuredParametersOnReceivedUpdateMsg ( ) ; scenarioExecuted = _BOOL ; }
36020	public PdfCanvas curveFromTo ( double x1 , double y1 , double x3 , double y3 ) { contentStream . getOutputStream ( ) . writeDouble ( x1 ) . writeSpace ( ) . writeDouble ( y1 ) . writeSpace ( ) . writeDouble ( x3 ) . writeSpace ( ) . writeDouble ( y3 ) . writeSpace ( ) . writeBytes ( y ) ; return this ; }
36032	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
36043	private String buildCacheKey ( String orgName , String policyName ) { String serviceComponent = CACHE_KEY_DELIMITER + PolicyManager . NAMED_POLICY + CACHE_KEY_DELIMITER + policyName ; return buildCacheKey ( PolicyManager . POLICY_SERVICE_NAME , PolicyManager . POLICY_VERSION , orgName , _CHAR default _CHAR , serviceComponent ) ; }
36067	public MaterialBarcodeScannerBuilder withFlashLightEnabledByDefault ( ) { mFlashEnabledByDefault = _BOOL ; return this ; }
36068	private void executeTimeoutScenario ( ) throws Exception { checkAssuredParametersOnReceivedUpdateMsg ( ) ; scenarioExecuted = _BOOL ; }
36072	public Builder superiorType ( String superiorTypeOID ) { this . superiorTypeOID = superiorTypeOID ; return this ; }
36077	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
36099	public boolean isSessionEncrypted ( ) { final Session session = connectedRS . get ( ) . session ; return session != _NULL ? session . isEncrypted ( ) : _BOOL ; }
36103	public void endHeaders ( ) { headerBuffer [ pos ++ ] = Constants . CR ; headerBuffer [ pos ++ ] = Constants . LF ; }
36145	public static Object convertStringToJAXB ( String str ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( new StringReader ( str ) ) ) ) ; }
36146	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public boolean sendSearchReference ( SearchResultReference searchReference ) throws DirectoryException { addSearchReference ( searchReference ) ; return _BOOL ; }
36151	public AttributeFilter includeAllOperationalAttributes ( final boolean include ) { this . includeAllOperationalAttributes = include ; return this ; }
36184	public static void fill ( float [ ] a , int fromIndex , int toIndex , float val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
36204	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
36209	public Collection values ( ) { if ( values == _NULL ) values = new SynchronizedCollection ( new ValueCollection ( ) , this ) ; return values ; }
36228	public SAML2ConfigBuilder keystoreFile ( String keystoreFileName ) { this . keystoreFileName = keystoreFileName ; return this ; }
36229	public void init ( KeyGenerationParameters param ) { this . random = param . getRandom ( ) ; this . strength = ( param . getStrength ( ) + _NUM ) / _NUM ; }
36239	public SAML2ConfigBuilder encryptionAlgorithmStrength ( int encryptionAlgorithmStrength ) { this . encryptionAlgorithmStrength = encryptionAlgorithmStrength ; return this ; }
36247	public Builder implementation ( final SyntaxImpl implementation ) { this . impl = implementation ; return this ; }
36267	@ Override public void publish ( LogRecord record ) { super . publish ( record ) ; super . flush ( ) ; }
36268	private void removeTestParent ( ManagementContext context , String name ) throws Exception { ManagedObject < RootCfgClient > root = context . getRootConfigurationManagedObject ( ) ; root . removeChild ( TestCfg . getTestOneToManyParentRelationDefinition ( ) , name ) ; }
36276	@ Override public void handleRequest ( RequestContext rc ) throws CLIException { super . handleRequest ( rc ) ; ldapLogin ( ) ; }
36278	public void addUsers ( Set users ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; dsServices . modifyMemberShip ( super . token , users , super . entryDN , GROUP , ADD_MEMBER ) ; }
36282	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
36288	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton1Request ( event ) ; }
36289	void replace ( DocumentFilter . FilterBypass fb , int offset , int length , String text , AttributeSet attrs ) throws BadLocationException { ReplaceHolder rh = getReplaceHolder ( fb , offset , length , text , attrs ) ; replace ( rh ) ; }
36292	public boolean containsKey ( Object key ) { checkKey ( key ) ; return map . containsKey ( key ) ; }
36309	public void addRule ( String pattern , Rule rule ) { rule . setDigester ( this ) ; getRules ( ) . add ( pattern , rule ) ; }
36324	public void cut ( int startIndex , int endIndex ) { selectText ( startIndex , endIndex ) ; JTextComponent . this . cut ( ) ; }
36339	public boolean equals ( String ns , String localPart ) { String thisnamespace = getNamespaceURI ( ) ; return getLocalName ( ) . equals ( localPart ) && ( ( ( _NULL != thisnamespace ) && ( _NULL != ns ) ) ? thisnamespace . equals ( ns ) : ( ( _NULL == thisnamespace ) && ( _NULL == ns ) ) ) ; }
36340	public boolean addIfAbsent ( E e ) { Object [ ] snapshot = getArray ( ) ; return indexOf ( e , snapshot , _NUM , snapshot . length ) >= _NUM ? _BOOL : addIfAbsent ( e , snapshot ) ; }
36342	public SAML2ConfigBuilder idpId ( String idpId ) { this . idpId = idpId ; return this ; }
36359	public void addOperand ( PdfLayer layer ) { getPdfObject ( ) . add ( layer . getPdfObject ( ) ) ; getPdfObject ( ) . setModified ( ) ; }
36363	protected String paramString ( ) { String orientationString = ( orientation == HORIZONTAL ? _CHAR HORIZONTAL _CHAR : _CHAR VERTICAL _CHAR ) ; return super . paramString ( ) + _CHAR , orientation = _CHAR + orientationString ; }
36379	public Object eval ( String script , Bindings bindings ) throws ScriptException { ScriptContext ctxt = getScriptContext ( bindings ) ; return eval ( script , ctxt ) ; }
36384	public void collectTimeoutEvent ( SipProvider provider ) throws TooManyListenersException { initCollectors ( provider ) ; provider . addSipListener ( timeoutCollector ) ; }
36390	public QueryResponseWrapper query ( String db , Query toQuery ) throws IndexParseException , FieldNotIndexedException { ParsedQuery parsedQuery = ParsedQueryFactory . getParsedQuery ( db , toQuery , queries . getSession ( ) ) ; return queries . query ( parsedQuery ) ; }
36401	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { super . fixupVariables ( vars , globalsSize ) ; m_expr . fixupVariables ( vars , globalsSize ) ; }
36407	public static byte [ ] serializeECPoint ( ECPointFormat [ ] ecPointFormats , ECPoint point ) throws IOException { short [ ] pf = convertPointFormats ( ecPointFormats ) ; return TlsECCUtils . serializeECPoint ( pf , point ) ; }
36410	@ Override public synchronized void write ( byte [ ] b ) throws IOException { super . write ( b ) ; this . branch . write ( b ) ; }
36416	private void validateResponseBody ( TesterAjpMessage message , String expectedBody ) throws Exception { String body = extractResponseBody ( message ) ; Assert . assertTrue ( body . contains ( expectedBody ) ) ; }
36417	public void updateUI ( ) { setUI ( ( SplitPaneUI ) UIManager . getUI ( this ) ) ; revalidate ( ) ; }
36434	public static String leftTrim ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . replaceAll ( _CHAR ^\\ s + _CHAR , _CHAR _CHAR ) ; }
36435	@ Override public Set < K > keySet ( ) { Set < K > ks = keySet ; return ( ks != _NULL ) ? ks : ( keySet = new KeySet ( ) ) ; }
36456	@ Override public void close ( ) throws IOException { getIOChannel ( ) . socket ( ) . close ( ) ; getIOChannel ( ) . close ( ) ; }
36457	private void writeObject ( ObjectOutputStream s ) throws java . io . IOException { s . defaultWriteObject ( ) ; s . writeObject ( toString ( ) ) ; }
36459	@ Override public void onDestroy ( ) { super . onDestroy ( ) ; destroyFloat ( ) ; }
36468	public JMenuItem add ( JMenuItem menuItem ) { ensurePopupMenuCreated ( ) ; return popupMenu . add ( menuItem ) ; }
36471	public static void fill ( byte [ ] a , int fromIndex , int toIndex , byte val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
36472	public void suspendEncoding ( ) throws java . io . IOException { flushBase64 ( ) ; this . suspendEncoding = _BOOL ; }
36486	@ Override public Name composeName ( Name name , Name prefix ) throws NamingException { Name prefixClone = ( Name ) prefix . clone ( ) ; return prefixClone . addAll ( name ) ; }
36500	private final boolean parkAndCheckInterrupt ( ) { LockSupport . park ( this ) ; return Thread . interrupted ( ) ; }
36506	public void keyTyped ( KeyEvent e ) { ( ( KeyListener ) a ) . keyTyped ( e ) ; ( ( KeyListener ) b ) . keyTyped ( e ) ; }
36508	public static int dpToPixel ( Context context , int dp ) { DisplayMetrics displayMetrics = context . getResources ( ) . getDisplayMetrics ( ) ; return dp < _NUM ? dp : Math . round ( dp * displayMetrics . density ) ; }
36512	public W3CEndpointReferenceBuilder serviceName ( QName serviceName ) { this . serviceName = serviceName ; return this ; }
36531	public boolean hasMoreTokens ( ) { newPosition = skipDelimiters ( currentPosition ) ; return ( newPosition < maxPosition ) ; }
36533	@ Override public V put ( K key , V value ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR parameterMap . locked _CHAR ) ) ; return ( super . put ( key , value ) ) ; }
36535	public void columns ( String coldata [ ] ) { column = coldata ; ncolumns = column . length ; }
36536	private void clear ( ) { webContainer . unregister ( contextRoot ) ; logger . debug ( _CHAR Unregistered UI servlet at { } _CHAR , contextRoot ) ; }
36556	public Builder removeAllSuperiorRules ( ) { this . superiorRuleIDs . clear ( ) ; return this ; }
36576	@ BeforeClass public void beforeClass ( ) throws Exception { TestCaseUtils . startServer ( ) ; policyDN = DN . valueOf ( policyDNString ) ; }
36582	public int addNodeInDocOrder ( Node node , XPathContext support ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESET_NOT_MUTABLE , _NULL ) ) ; return addNodeInDocOrder ( node , _BOOL , support ) ; }
36587	public UpgradeParameters isIgnoreErrors ( boolean ignore ) { ignoreErrors = ignore ; return this ; }
36595	protected void initializeAutoscrolling ( Point p ) { if ( component == _NULL || ! ( component instanceof Autoscroll ) ) return ; autoScroller = createDropTargetAutoScroller ( component , p ) ; }
36596	public Builder superiorObjectClasses ( final Collection < String > objectClassNamesOrOIDs ) { this . superiorClasses . addAll ( objectClassNamesOrOIDs ) ; return this ; }
36597	private static LocalizableMessage createMessage ( final PropertyDefinition < ? > pd , final Object value ) { final PropertyDefinitionUsageBuilder builder = new PropertyDefinitionUsageBuilder ( _BOOL ) ; return ERR_ILLEGAL_PROPERTY_VALUE_EXCEPTION . get ( value , pd . getName ( ) , builder . getUsage ( pd ) ) ; }
36599	public String format ( DateTimeFormatter formatter ) { Objects . requireNonNull ( formatter , _CHAR formatter _CHAR ) ; return formatter . format ( this ) ; }
36606	public static void registerSynchronizationProvider ( SynchronizationProvider < SynchronizationProviderCfg > provider ) { directoryServer . synchronizationProviders . add ( provider ) ; provider . completeSynchronizationProvider ( ) ; }
36631	@ Override public void onFocusChange ( View v , boolean hasFocus ) { mRecyclerViewBridge . setFocusView ( v , oldView , _NUM . _NUM ) ; oldView = v ; }
36635	public void recycle ( ) { encoder . reset ( ) ; leftovers . position ( _NUM ) ; }
36638	@ SuppressWarnings ( { _CHAR rawtypes _CHAR , _CHAR unchecked _CHAR } ) public static void swap ( List < ? > list , int i , int j ) { final List l = list ; l . set ( i , l . set ( j , l . get ( i ) ) ) ; }
36646	public void commitResize ( ) { resizeWidgetIfNeeded ( _BOOL ) ; requestLayout ( ) ; }
36656	public void keyReleased ( KeyEvent e ) { ( ( KeyListener ) a ) . keyReleased ( e ) ; ( ( KeyListener ) b ) . keyReleased ( e ) ; }
36662	public static void register ( Class < ? > clazz ) { checkInit ( ) ; TYPE_CENTER . register ( clazz ) ; }
36676	final Node < E > succ ( Node < E > p ) { Node < E > next = p . next ; return ( p == next ) ? head : next ; }
36684	public Builder prohibitedAttributes ( final Collection < String > attributeNamesOrOIDs ) { this . prohibitedAttributeOIDs . addAll ( attributeNamesOrOIDs ) ; return this ; }
36687	public void parse ( InputSource input ) throws SAXException , IOException { setupParse ( ) ; parent . parse ( input ) ; }
36689	public void handleButton1Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToRealmView ( event ) ; }
36693	public void remove ( ) { previous . next = next ; next . previous = previous ; }
36699	public static PendingIntent buildTriggerServicePendingIntent ( Context context ) { final Intent intent = buildTriggerServiceIntent ( ) ; return PendingIntent . getService ( context , EXECUTE_SCRIPT_REQUEST_CODE , intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; }
36708	public boolean isAllowed ( final String input ) { final String lowerCaseInput = input . toLowerCase ( ) ; return ! disallowedStrings . parallelStream ( ) . anyMatch ( _NULL ) ; }
36714	public String encodeURL ( String url ) { checkTokenType ( _CHAR encodeURL _CHAR ) ; return sessionURL . encodeURL ( url , session ) ; }
36732	public static String base64Decode ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return new String ( Base64 . getDecoder ( ) . decode ( value ) ) ; }
36741	void recomposeWhiteSpaceInfo ( WhiteSpaceInfo wsi ) { if ( _NULL == m_whiteSpaceInfoList ) m_whiteSpaceInfoList = new TemplateList ( ) ; m_whiteSpaceInfoList . setTemplate ( wsi ) ; }
36742	@ Override public String toString ( ) { String condition = acceptLarger ? _CHAR >= _CHAR : _CHAR < _CHAR ; return super . toString ( ) + _CHAR ( _CHAR + condition + size + _CHAR ) _CHAR ; }
36744	protected void writeLocation ( String loc ) throws IOException { hadAnnotations |= ( loc != _NULL ) ; locOut . writeObject ( loc ) ; }
36759	@ Override public void execute ( ) throws BuildException { super . execute ( ) ; execute ( _CHAR / vminfo _CHAR ) ; }
36770	public JobService inactiveCount ( String type , Handler < AsyncResult < Long >> handler ) { delegate . inactiveCount ( type , handler ) ; return this ; }
36771	private File retrieveLastRotationTimeFile ( ) { File [ ] files = getCNIndexDBPath ( ) . listFiles ( LAST_ROTATION_TIME_FILE_FILTER ) ; return ( files != _NULL && files . length > _NUM ) ? files [ _NUM ] : _NULL ; }
36776	public static JsonValue jsonFromFile ( String resourceFilePath ) throws IOException { final InputStream configStream = JsonUtils . class . getResourceAsStream ( resourceFilePath ) ; return new JsonValue ( MAPPER . readValue ( configStream , Map . class ) ) ; }
36780	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiTableUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiTableUI ) mui ) . uis , a ) ; }
36790	public void cleanup ( PdfCanvas cb ) { int k = savedStates . size ( ) ; while ( k -- > _NUM ) cb . restoreState ( ) ; }
36806	public boolean isVorbisSetupHeader ( byte [ ] headerData ) { String vorbis = Utils . getString ( headerData , VorbisHeader . FIELD_CAPTURE_PATTERN_POS , VorbisHeader . FIELD_CAPTURE_PATTERN_LENGTH , _CHAR ISO - _NUM - _NUM _CHAR ) ; return ! ( headerData [ VorbisHeader . FIELD_PACKET_TYPE_POS ] != VorbisPacketType . SETUP_HEADER . getType ( ) || ! vorbis . equals ( VorbisHeader . CAPTURE_PATTERN ) ) ; }
36811	public void close ( ) throws java . io . IOException { flushBuffer ( ) ; m_os . close ( ) ; }
36814	public Rectangle moveLeft ( float move ) { x -= move ; return this ; }
36819	public void replaceChild ( int index , XMPNode node ) { node . setParent ( this ) ; getChildren ( ) . set ( index - _NUM , node ) ; }
36824	public SimplePropertyMapper defaultJsonValues ( final Collection < ? > defaultValues ) { this . defaultJsonValues = defaultValues != _NULL ? new ArrayList < > ( defaultValues ) : emptyList ( ) ; return this ; }
36850	public boolean textareaUI ( String opt ) { String shortName = getShortOptionName ( opt ) ; return ! textBoxUI . contains ( opt ) && ( ! shortName . equals ( shortName . toLowerCase ( ) ) || textAreaUI . contains ( opt ) ) ; }
36851	public void pushPairCurrentMatched ( ElemTemplateElement template , int child ) { m_currentMatchTemplates . push ( template ) ; m_currentMatchedNodes . push ( child ) ; }
36852	public boolean isPrimitive ( ) { Class < ? > t = getTypeInternal ( ) ; return t != _NULL && t . isPrimitive ( ) ; }
36877	public Builder removeName ( String name ) { this . names . remove ( name ) ; return this ; }
36917	public void handleBtnRealmRequest ( RequestInvocationEvent event ) { bRealmSelect = _BOOL ; forwardTo ( ) ; }
36922	@ Override public void onTokenAvailable ( Context context , String token , boolean updated ) { Core . registerDeviceToken ( context , token ) ; Log . d ( _CHAR HSRL _CHAR , _CHAR New token available , setting it to helpshift _CHAR ) ; }
36923	private Object readResolve ( ) { if ( loadedScripts == _NULL ) loadedScripts = new HashMap < String , String > ( ) ; return this ; }
36925	public static void restartBridge ( boolean debug ) { WXEnvironment . sDebugMode = debug ; WXSDKManager . getInstance ( ) . restartBridge ( ) ; }
36937	public boolean on ( ASN1ObjectIdentifier stem ) { String id = getId ( ) , stemId = stem . getId ( ) ; return id . length ( ) > stemId . length ( ) && id . charAt ( stemId . length ( ) ) == _CHAR && id . startsWith ( stemId ) ; }
36963	static Subscription registerForNotifyChangesToNode ( String dn , SMSEventListener eventListener ) { initialize ( ) ; return addNotificationObject ( nodeChanges , DN . valueOf ( dn ) , eventListener ) ; }
36968	public SAML2ConfigBuilder encryptionAlgorithm ( String encryptionAlgorithm ) { this . encryptionAlgorithm = encryptionAlgorithm ; return this ; }
36969	public PdfCanvas beginText ( ) { contentStream . getOutputStream ( ) . writeBytes ( BT ) ; return this ; }
36994	public static BigInteger probablePrime ( int bitLength , Random rnd ) { if ( bitLength < _NUM ) throw new ArithmeticException ( _CHAR bitLength < _NUM _CHAR ) ; return ( bitLength < SMALL_PRIME_THRESHOLD ? smallPrime ( bitLength , DEFAULT_PRIME_CERTAINTY , rnd ) : largePrime ( bitLength , DEFAULT_PRIME_CERTAINTY , rnd ) ) ; }
37006	public void endDocument ( ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . endDocument ( ) ; }
37028	protected final boolean _loadToHaveAtLeast ( int minAvailable ) throws IOException { _throwInternal ( ) ; return _BOOL ; }
37043	protected void callChildVisitors ( XSLTVisitor visitor , boolean callAttrs ) { if ( callAttrs ) m_test . getExpression ( ) . callVisitors ( m_test , visitor ) ; super . callChildVisitors ( visitor , callAttrs ) ; }
37047	public T targetObjectId ( String targetObjectId ) { jsonValue . put ( TARGET_OBJECT_ID , targetObjectId ) ; return self ( ) ; }
37052	public final void remove_from_tree ( AwtreeShapeSearch p_shape_tree ) { if ( p_shape_tree == _NULL ) return ; p_shape_tree . remove ( tree_entries ) ; }
37063	public String endTblDataActionDeleteHrefDisplay ( ChildContentDisplayEvent event ) { String lbl = ( String ) tblModel . getValue ( TBL_DATA_ACTION_DELETE_LABEL ) ; return ( ( lbl != _NULL ) && ( lbl . length ( ) > _NUM ) ) ? event . getContent ( ) : _CHAR _CHAR ; }
37066	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; }
37078	public void write ( byte b ) { check ( _NUM ) ; buffer [ write_pos ++ ] = b ; }
37081	public boolean readBoolean ( ) throws SQLException { Boolean attrib = ( Boolean ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _BOOL : attrib . booleanValue ( ) ; }
37084	public void clear ( ) { Arrays . fill ( elements , _NUM ) ; size = _NUM ; }
37096	public static String decToHex ( int dec ) { String hex = Integer . toHexString ( dec ) ; return hex . length ( ) == _NUM ? _CHAR _NUM _CHAR + hex : hex ; }
37102	public Name add ( String comp ) throws InvalidNameException { impl . add ( comp ) ; return this ; }
37111	public < V > V post ( final String uri , final Object params , final Type type ) throws IOException { HttpURLConnection request = createPost ( uri ) ; return sendJson ( request , params , type ) ; }
37112	public Builder withAccessKey ( String accessKey ) { config . setAccessKey ( accessKey ) ; return this ; }
37129	public static SessionRequest parseXML ( String xml ) { SessionRequestParser parser = new SessionRequestParser ( xml ) ; return parser . parseXML ( ) ; }
37136	public Builder removeAllNames ( ) { this . names . clear ( ) ; return this ; }
37158	public void writingRequestHeaders ( ) { if ( sentRequestMillis != - _NUM ) throw new IllegalStateException ( ) ; sentRequestMillis = System . currentTimeMillis ( ) ; }
37165	@ Override public void onResume ( ) { mWebView . onResume ( ) ; super . onResume ( ) ; }
37175	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiPopupMenuUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiPopupMenuUI ) mui ) . uis , a ) ; }
37182	private static String generateEncryptedID ( SessionServerConfig serverConfig ) { String r = Long . toHexString ( secureRandom . getInstanceForCurrentThread ( ) . nextLong ( ) ) ; return AccessController . doPrivileged ( new EncodeAction ( r + _CHAR @ _CHAR + serverConfig . getPrimaryServerID ( ) , Crypt . getHardcodedKeyEncryptor ( ) ) ) ; }
37204	public void addSortKey ( int column , Comparator < String > comparator ) { sortKeys . add ( column ) ; sortComparators . add ( comparator ) ; }
37217	public Builder removeAllNames ( ) { this . names . clear ( ) ; return this ; }
37224	static String format ( String property , Object [ ] args ) { String text = ResourceBundle . getBundle ( Messages . class . getName ( ) ) . getString ( property ) ; return MessageFormat . format ( text , args ) ; }
37227	public static GenericExtendedRequest newGenericExtendedRequest ( final String requestName ) { Reject . ifNull ( requestName ) ; return new GenericExtendedRequestImpl ( requestName ) ; }
37229	public static void fill ( short [ ] a , int fromIndex , int toIndex , short val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
37235	@ Override public void connect ( SocketAddress endpoint , int timeout ) throws IOException { super . connect ( endpoint , timeout ) ; init ( ) ; }
37247	public static NodeList selectNodeList ( Node contextNode , String str , Node namespaceNode ) throws TransformerException { XObject list = eval ( contextNode , str , namespaceNode ) ; return list . nodelist ( ) ; }
37254	public static String defaultPCCreateDuringOrgConfig ( ) { initialize ( ) ; return ( defaultPCCreateDuringOrgConfig ) ; }
37267	public static boolean removeFromCache ( String key , DiskCache diskCache ) { File file = diskCache . getFile ( key ) ; return file != _NULL && file . exists ( ) && file . delete ( ) ; }
37270	public void signXML ( ) throws SAMLException { String certAlias = SystemConfigurationUtil . getProperty ( _CHAR com . sun . identity . saml . xmlsig . certalias _CHAR ) ; signXML ( certAlias ) ; }
37292	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
37314	@ Override public void invalidate ( ) { if ( ! isValidInternal ( ) ) throw new IllegalStateException ( sm . getString ( _CHAR standardSession . invalidate . ise _CHAR ) ) ; expire ( ) ; }
37315	@ SuppressLint ( _CHAR NewApi _CHAR ) private void disableControls ( ) { this . getSettings ( ) . setBuiltInZoomControls ( _BOOL ) ; this . getSettings ( ) . setDisplayZoomControls ( _BOOL ) ; }
37335	private synchronized void readObject ( java . io . ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getName ( ) , getMask ( actions ) ) ; }
37337	public void addEmptyValue ( final JKTableColumn col ) { final JKTableColumnValue value = new JKTableColumnValue ( col ) ; this . columnsValues . add ( value ) ; }
37347	public void logError ( String message , Exception ex ) { Logger logger = this . getLogger ( ) ; logger . error ( message , ex ) ; }
37362	public void handleToken ( Segment seg , byte id , int offset , int length , TokenMarker . LineContext context ) { Token token = createToken ( id , offset , length , context ) ; if ( token != _NULL ) addToken ( token , context ) ; }
37363	public static boolean isModifiableVariableHolder ( Object object ) { List < Field > fields = getAllModifiableVariableFields ( object ) ; return ! fields . isEmpty ( ) ; }
37391	public String toString ( ) { StringBuilder bindRule = new StringBuilder ( ) ; return bindRule . toString ( ) ; }
37394	public LineMessagingServiceBuilder connectTimeout ( long connectTimeout ) { this . connectTimeout = connectTimeout ; return this ; }
37399	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiButtonUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiButtonUI ) mui ) . uis , a ) ; }
37423	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . dsconfig ( _CHAR set - sasl - mechanism - handler - prop _CHAR , _CHAR -- handler - name _CHAR , _CHAR DIGEST - MD5 _CHAR , _CHAR -- set _CHAR , _CHAR server - fqdn : _CHAR + _CHAR _NUM . _NUM . _NUM . _NUM _CHAR ) ; }
37426	public static int parseUnsignedShort ( String lexicalXSDUnsignedShort ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseUnsignedShort ( lexicalXSDUnsignedShort ) ; }
37437	public static org . primefaces . behavior . ajax . AjaxBehavior createAjax ( ) { final Behavior behavior = FacesContext . getCurrentInstance ( ) . getApplication ( ) . createBehavior ( AjaxBehavior . BEHAVIOR_ID ) ; return ( AjaxBehavior ) behavior ; }
37439	private void writeObject ( java . io . ObjectOutputStream oos ) throws java . io . IOException { if ( guard != _NULL ) guard . checkGuard ( object ) ; oos . defaultWriteObject ( ) ; }
37448	@ Override public Writer append ( CharSequence value ) { builder . append ( value ) ; return this ; }
37449	@ Deprecated public void disallow ( final PlayerPreLoginEvent . Result result , final String message ) { this . result = result == _NULL ? _NULL : Result . valueOf ( result . name ( ) ) ; this . message = message ; }
37457	public Resource superType ( final String resourceId ) { this . superTypeId = resourceId ; return this ; }
37465	public static void send ( URL url , NotificationSet set ) throws SendNotificationException { NotificationSender sender = new NotificationSender ( url , set ) ; sender . run ( ) ; }
37466	public synchronized static void free ( FastStringBuffer sb ) { sb . setLength ( _NUM ) ; m_stringBufPool . freeInstance ( sb ) ; }
37513	static int toCodePoint ( char highSurrogate , char lowSurrogate ) { int codePoint = ( ( highSurrogate - _NUM ) << _NUM ) + ( lowSurrogate - _NUM ) + _NUM ; return codePoint ; }
37516	public void unFollow ( String login , String access_token , Callback < ActionResponse > callback ) { userApi = getRetrofitForSimpleJson ( ) . create ( UserApi . class ) ; userApi . unFollow ( login , access_token ) . enqueue ( callback ) ; }
37528	public void reset ( ) { len = _NUM ; pos = _NUM ; }
37543	public static AlertDialog create ( final Context context ) { if ( SDK_INT >= ICE_CREAM_SANDWICH ) return new LightAlertDialog ( context , THEME_HOLO_LIGHT ) ; else return new LightAlertDialog ( context ) ; }
37561	public String toString ( ) { String s = ( ( getValueIsAdjusting ( ) ) ? _CHAR ~ _CHAR : _CHAR = _CHAR ) + value . toString ( ) ; return getClass ( ) . getName ( ) + _CHAR _CHAR + Integer . toString ( hashCode ( ) ) + _CHAR _CHAR + s ; }
37564	private static < T > T requireNonNull ( T obj , String message ) { if ( obj == _NULL ) throw new NullPointerException ( message ) ; return obj ; }
37567	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { super . fixupVariables ( vars , globalsSize ) ; m_expr . fixupVariables ( vars , globalsSize ) ; }
37572	public EncryptedAttribute encrypt ( Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID ) throws SAML2Exception { Element el = EncManager . getEncInstance ( ) . encrypt ( toXMLString ( _BOOL , _BOOL ) , recipientPublicKey , dataEncAlgorithm , dataEncStrength , recipientEntityID , _CHAR EncryptedAttribute _CHAR ) ; return AssertionFactory . getInstance ( ) . createEncryptedAttribute ( el ) ; }
37573	public void windowLostFocus ( WindowEvent e ) { ( ( WindowFocusListener ) a ) . windowLostFocus ( e ) ; ( ( WindowFocusListener ) b ) . windowLostFocus ( e ) ; }
37576	public static boolean isTargetControlApplicable ( Aci aci , AciTargetMatchContext matchCtx ) { TargetControl targetControl = aci . getTargets ( ) . getTargetControl ( ) ; return targetControl != _NULL && targetControl . isApplicable ( matchCtx ) ; }
37592	public List reverse ( ) { Collections . reverse ( this ) ; return this ; }
37606	private static void usage ( String msg ) { System . err . println ( msg ) ; System . err . println ( _CHAR Usage : java Base64 - e |- d inputfile outputfile _CHAR ) ; }
37610	private void initFromCollection ( Collection < ? extends E > c ) { initElementsFromCollection ( c ) ; heapify ( ) ; }
37613	static boolean ensureParentsExist ( File f ) { final File parent = f . getParentFile ( ) ; return parent . exists ( ) || parent . mkdirs ( ) ; }
37619	public void removeUsers ( Set users ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; dsServices . modifyMemberShip ( super . token , users , super . entryDN , GROUP , REMOVE_MEMBER ) ; }
37620	public void removeUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { super . removeUpdate ( changes , adjustAllocation ( a ) , f ) ; updateVisibilityModel ( ) ; }
37624	public WriterProperties useSmartMode ( ) { this . smartMode = _BOOL ; return this ; }
37625	private void createInitializeReplicationSubCommand ( ) throws ArgumentException { initializeReplicationSubCmd = new SubCommand ( this , INITIALIZE_REPLICATION_SUBCMD_NAME , INFO_DESCRIPTION_SUBCMD_INITIALIZE_REPLICATION . get ( INITIALIZE_ALL_REPLICATION_SUBCMD_NAME ) ) ; addArgumentsToSubCommand ( initializeReplicationSubCmd , hostNameSourceArg , portSourceArg , hostNameDestinationArg , portDestinationArg ) ; }
37634	public static byte [ ] parseHexBinary ( String lexicalXSDHexBinary ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseHexBinary ( lexicalXSDHexBinary ) ; }
37641	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR SAVED_STORY \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR IMAGE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR TITLE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR DATE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR POSITION \ _CHAR INTEGER ) ; _CHAR ) ; }
37649	public final int _firstch2 ( int identity ) { if ( identity < m_blocksize ) return m_firstch_map0 [ identity ] ; else return m_firstch_map [ identity >> > m_SHIFT ] [ identity & m_MASK ] ; }
37658	public PdfFormXObject put ( PdfName key , PdfObject value ) { getPdfObject ( ) . put ( key , value ) ; return this ; }
37664	public PollingWaitCallbackBuilder asCopyOf ( PollingWaitCallback callback ) { this . waitTime = callback . getWaitTime ( ) ; return this ; }
37674	private void cancelClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
37678	public final static String formatHeaderElement ( final HeaderElement elem , boolean quote , HeaderValueFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicHeaderValueFormatter . DEFAULT ; return formatter . formatHeaderElement ( _NULL , elem , quote ) . toString ( ) ; }
37682	@ Override public void reset ( ) throws IOException { fOffset = _NUM ; fSurrogate =- _NUM ; }
37690	public SAML2ConfigBuilder customAuthenticationStatementsProviderClassName ( String customAuthenticationStatementsProviderClassName ) { this . customAuthenticationStatementsProviderClassName = customAuthenticationStatementsProviderClassName ; return this ; }
37692	public synchronized String toString ( ) { String params = _CHAR autoDelay = _CHAR + getAutoDelay ( ) + _CHAR , '' + '' autoWaitForIdle = _CHAR + isAutoWaitForIdle ( ) ; return getClass ( ) . getName ( ) + _CHAR [ _CHAR + params + _CHAR ] _CHAR ; }
37703	public static String printQName ( javax . xml . namespace . QName val , NamespaceContext nsc ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printQName ( val , nsc ) ; }
37704	public ConnectionParameters adminPassword ( String password ) { adminPassword = password ; return this ; }
37712	void elementDequeued ( ) { if ( count == _NUM ) queueIsEmpty ( ) ; else if ( takeIndex == _NUM ) takeIndexWrapped ( ) ; }
37714	@ Override public Foo removeByUUID_G ( String uuid , long groupId ) throws NoSuchFooException { Foo foo = findByUUID_G ( uuid , groupId ) ; return remove ( foo ) ; }
37738	public static String removeNonWords ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . replaceAll ( _CHAR [ ^\\ w ] + _CHAR , _CHAR _CHAR ) ; }
37743	public StringSQLRenderer append ( String s ) { sb . append ( s ) ; return this ; }
37747	protected byte [ ] wrap ( ) { byte [ ] res = recordProtocol . wrap ( ContentType . ALERT , alert , _NUM , _NUM ) ; return res ; }
37751	private void addEntry ( ) throws Exception { TestCaseUtils . clearBackend ( _CHAR userRoot _CHAR , _CHAR dc = example , dc = com _CHAR ) ; TestCaseUtils . addEntries ( _CHAR dn : cn = Jos \ u00E9 , dc = example , dc = com _CHAR , _CHAR objectClass : person _CHAR , _CHAR cn : Jos \ u00E9 _CHAR , _CHAR sn : This \ u00AD \ u180D \ uFE00 \ u0085 \ u0085is \ u202A \ u2028a \ u0020test _CHAR ) ; }
37760	@ Descriptor ( _CHAR Encrypt the input string . '' ) public void encrypt ( CommandSession session , @ Parameter ( names = { _CHAR - j _CHAR , _CHAR -- json _CHAR } , presentValue = _CHAR _BOOL _CHAR , absentValue = _CHAR _BOOL _CHAR ) boolean isString ) { session . getConsole ( ) . append ( _CHAR Enter the _CHAR ) . append ( isString ? _CHAR String _CHAR : _CHAR Json _CHAR ) . println ( _CHAR value _CHAR ) ; encrypt ( session , isString , loadFromConsole ( session ) ) ; }
37765	public boolean cover ( DN baseDN , CSN csn ) { final ServerState state = list . get ( baseDN ) ; return state != _NULL && state . cover ( csn ) ; }
37781	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiColorChooserUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiColorChooserUI ) mui ) . uis , a ) ; }
37783	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
37792	public static boolean isLocationGranted ( Activity activity ) { int permissionCheck = ContextCompat . checkSelfPermission ( activity , permission ) ; return ( permissionCheck == PackageManager . PERMISSION_GRANTED ) ; }
37830	public static String printByte ( byte val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printByte ( val ) ; }
37833	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
37834	public synchronized void flush ( ) throws IOException { flushBuffer ( ) ; out . flush ( ) ; }
37843	public void removeThread ( WaitingThread wt ) { if ( wt == _NULL ) return ; this . waitingThreads . remove ( wt ) ; }
37850	protected void tearDown ( ) { hs = _NULL ; objArray = _NULL ; }
37877	private void deleteSchedule ( String jobName ) throws SchedulerException { inMemoryScheduler . deleteJobIfPresent ( jobName ) ; persistentScheduler . deleteJobIfPresent ( jobName ) ; }
37880	@ Override protected void handleErrorFlush ( String output ) { handleErrorOutput ( output ) ; redirectErrPrintStream . flush ( ) ; }
37893	public int hashCode ( ) { int fhash = ( family != _NULL ) ? family . hashCode ( ) : _NUM ; return fhash ^ style ^ size ; }
37908	public void repaint_all ( ) { work_frame . repaint ( ) ; for ( GuiSubWindowSavable cur_subwindow : permanent_subwindows ) cur_subwindow . repaint ( ) ; }
37918	public int lower_y_value ( int p_x ) { int result = Math . max ( oct_ly , oct_llx - p_x ) ; return Math . max ( result , p_x - oct_lrx ) ; }
37920	public DTMAxisIterator reset ( ) { _sp = _oldsp ; return resetPosition ( ) ; }
37930	public long stdDev ( ) { final long m = deltaCount . get ( ) - _NUM ; return m > _NUM ? ( long ) Math . sqrt ( deltaStdDev . get ( ) / ( double ) m ) : _NUM ; }
37965	public SIPResponse createResponse ( int statusCode ) { String reasonPhrase = SIPResponse . getReasonPhrase ( statusCode ) ; return this . createResponse ( statusCode , reasonPhrase ) ; }
37967	public boolean isInStep ( Position position , RouteLeg route , int stepIndex ) throws ServicesException , TurfException { double distance = getDistanceToStep ( position , route , stepIndex ) ; return ( distance <= offRouteThresholdKm ) ; }
37974	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
37980	public void writeLog ( String msgId , String msg , String userDN ) { String [ ] obj = { userDN } ; logger . doLog ( MessageFormat . format ( getLocalizedString ( msgId ) , ( Object [ ] ) obj ) + _CHAR _CHAR + msg ) ; }
37986	static float powerOfTwoF ( int n ) { assert ( n >= FloatConsts . MIN_EXPONENT && n <= FloatConsts . MAX_EXPONENT ) ; return Float . intBitsToFloat ( ( ( n + FloatConsts . EXP_BIAS ) << ( FloatConsts . SIGNIFICAND_WIDTH - _NUM ) ) & FloatConsts . EXP_BIT_MASK ) ; }
37995	public LineMessagingServiceBuilder writeTimeout ( long writeTimeout ) { this . writeTimeout = writeTimeout ; return this ; }
38014	public void delete ( DeleteRequest request ) throws LdapException { addControls ( request ) ; conn . getConnection ( ) . delete ( request ) ; }
38023	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiListUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiListUI ) mui ) . uis , a ) ; }
38024	@ Override public void close ( ) { StaticUtils . close ( asn1Writer , debugOutputStream ) ; StaticUtils . close ( socket ) ; }
38032	final void forgetContents ( ) { UNSAFE . putObject ( this , itemOffset , this ) ; UNSAFE . putObject ( this , waiterOffset , _NULL ) ; }
38037	public AuthenticationEnforcer exceptDelete ( ) { exceptDelete = _BOOL ; return this ; }
38061	@ Override public void handleResult ( final Connection connection ) { connection . close ( ) ; notifyOnline ( ) ; }
38077	private void assertThatCursorCanBeFullyReadFromStart ( DBCursor < Record < String , String >> cursor , int fromIndex , int endIndex ) throws Exception { assertThat ( cursor . getRecord ( ) ) . isNull ( ) ; assertThatCursorCanBeFullyRead ( cursor , fromIndex , endIndex ) ; }
38084	public static void main ( final String [ ] args ) { final int retCode = new LDAPPasswordModify ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
38102	public SubjectDecision evaluate ( String realm , SubjectAttributesManager mgr , Subject subject , String resourceName , Map < String , Set < String >> environment ) throws EntitlementException { boolean satified = hasPrincipal ( subject , getID ( ) ) ^ isExclusive ( ) ; return new SubjectDecision ( satified , Collections . EMPTY_MAP ) ; }
38104	public void registerSSOToken ( SSOToken ssoToken ) { ssoTokens . add ( ssoToken ) ; Logger . token . set ( ssoToken ) ; }
38131	public void deactivate ( ) throws AMException , SSOException { setStringAttribute ( statusAN , _CHAR inactive _CHAR ) ; store ( ) ; }
38148	public void init ( ServletConfig config ) throws ServletException { servletCtx = config . getServletContext ( ) ; super . init ( config ) ; }
38165	public SipRequestLine createRequestLine ( String requestLine ) throws ParseException { RequestLineParser requestLineParser = new RequestLineParser ( requestLine ) ; return ( SipRequestLine ) requestLineParser . parse ( ) ; }
38170	public MaterialBarcodeScannerBuilder withText ( String text ) { mText = text ; return this ; }
38172	public MockResponse clearHeaders ( ) { headers . clear ( ) ; return this ; }
38182	@ Override protected boolean checkCollision ( ) { Shape intersection = SVGPath . intersect ( SpriteHandler . getCurrentCast ( ) . get ( _NUM ) . getSpriteBounds ( ) , spriteBounds ) ; return intersection . getBoundsInParent ( ) . getWidth ( ) != - _NUM ; }
38190	private Future < List < Product >> prepareProduct ( ProductService service , ShoppingCart cart ) { List < Future < Product >> futures = cart . getAmountMap ( ) . keySet ( ) . stream ( ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; return Functional . sequenceFuture ( futures ) ; }
38203	public static void main ( final String [ ] args ) { final int retCode = new LDAPCompare ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
38204	public boolean requiredResourceName ( Policy policy , String realmName , String name ) { getSvcTypeNameToActionsMap ( policy , realmName ) ; return requiredResourceNameService . contains ( name ) ; }
38213	protected Rectangle applyBorderBox ( Rectangle rect , boolean reverse ) { Border [ ] borders = getBorders ( ) ; return applyBorderBox ( rect , borders , reverse ) ; }
38214	public static int reverseBytes ( int i ) { i = ( ( i >> > _NUM ) & _NUM ) | ( ( i & _NUM ) << _NUM ) ; return ( i >> > _NUM ) | ( i << _NUM ) ; }
38215	public net . aimeizi . person . Person . Builder clearSex ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
38221	public void handleDeleteError ( RetentionPolicy retentionPolicy , Throwable ex ) { LocalizableMessage msg = ERR_LOGGER_ERROR_ENFORCING_RETENTION_POLICY . get ( retentionPolicy , publisherConfigDN , stackTraceToSingleLineString ( ex ) ) ; System . err . println ( msg ) ; }
38233	@ Override public int read ( ) throws IOException { int b = readFirstBytes ( ) ; return b >= _NUM ? b : in . read ( ) ; }
38239	public boolean isReadOnly ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . readOnly ; }
38246	public void follow ( String login , String access_token , Callback < ActionResponse > callback ) { userApi = getRetrofitForSimpleJson ( ) . create ( UserApi . class ) ; userApi . follow ( login , access_token ) . enqueue ( callback ) ; }
38249	public MaterialBarcodeScannerBuilder withTrackerColor ( int color ) { mTrackerColor = color ; return this ; }
38251	void dndDone ( ) { cancelDropTimer ( ) ; dropTimer = _NULL ; }
38254	public boolean hasUnsupportedCriticalExtension ( ) { Set extns = getCriticalExtensionOIDs ( ) ; return extns != _NULL && ! extns . isEmpty ( ) ; }
38292	public boolean isNowWithinInterval ( String intervalString ) throws IllegalArgumentException { Interval interval = Interval . parse ( intervalString ) ; return interval . contains ( DateTime . now ( ) ) ; }
38294	public static ConnectionFactory configureConnectionFactory ( final JsonValue configuration , final String name , final TrustManager trustManager , final X509KeyManager keyManager , final ClassLoader providerClassLoader ) { final JsonValue normalizedConfiguration = normalizeConnectionFactory ( configuration , name , _NUM ) ; return configureConnectionFactory ( normalizedConfiguration , trustManager , keyManager , providerClassLoader ) ; }
38309	public OrderService initializePersistence ( Handler < AsyncResult < Void >> resultHandler ) { delegate . initializePersistence ( resultHandler ) ; return this ; }
38310	public Builder requiredAttributes ( final String ... attributeNamesOrOIDs ) { this . requiredAttributes . addAll ( asList ( attributeNamesOrOIDs ) ) ; return this ; }
38313	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
38324	public boolean offerFirst ( E e ) { addFirst ( e ) ; return _BOOL ; }
38351	public Resource isAbstract ( final boolean isAbstract ) { this . isAbstract = isAbstract ; return this ; }
38354	public static boolean containsAll ( final String value , final String [ ] needles , final boolean caseSensitive ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return Arrays . stream ( needles ) . allMatch ( _NULL ) ; }
38367	public int viewToModel ( float x , float y , Shape a , Position . Bias [ ] bias ) { load ( ) ; return super . viewToModel ( x , y , a , bias ) ; }
38389	public void recycle ( ) { nextRequest ( ) ; socketWrapper = _NULL ; }
38410	public Resource subResources ( final SubResource ... subResources ) { this . subResources . addAll ( asList ( subResources ) ) ; return this ; }
38416	public Builder optionalAttributes ( final Collection < String > attributeNamesOrOIDs ) { this . optionalAttributeOIDs . addAll ( attributeNamesOrOIDs ) ; return this ; }
38441	@ Override public void onUpgrade ( SQLiteDatabase db , int oldVersion , int newVersion ) { dropAllTables ( db ) ; onCreate ( db ) ; }
38442	public Builder removeRequiredAttribute ( String attributeNameOrOID ) { this . requiredAttributes . remove ( attributeNameOrOID ) ; return this ; }
38444	public static int convertDpToPixel ( Context context , int dp ) { Resources resources = context . getResources ( ) ; return ( int ) TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dp , resources . getDisplayMetrics ( ) ) ; }
38450	@ Override public boolean iTableExists ( Index index ) { logger . info ( _CHAR Checking for existance of iTable for index : '' + index . toString ( ) ) ; return iTableExists ( Utils . calculateITableName ( index ) ) ; }
38476	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
38482	public static java . util . Calendar parseDate ( String lexicalXSDDate ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseDate ( lexicalXSDDate ) ; }
38491	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
38495	protected void log ( Level level , String methodName , String message ) { Object [ ] args = { methodName , message } ; logger . log ( level , MessageFormat . format ( logEntryTemplate , args ) ) ; }
38496	public static ArgumentException missingBindPassword ( char [ ] bindDN ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_PASSWORD . get ( bindDN ) ; return new ArgumentException ( msg ) ; }
38514	public static void main ( final String [ ] args ) throws Exception { System . out . println ( HardWare . MAC ) ; System . out . println ( getMacAddress ( ) ) ; }
38526	public void sendHeaders ( ) { action ( ActionCode . COMMIT , this ) ; setCommitted ( _BOOL ) ; }
38529	private void initializeExtendedOperations ( ) throws ConfigException , InitializationException { extendedOperationConfigManager = new ExtendedOperationConfigManager ( serverContext ) ; extendedOperationConfigManager . initializeExtendedOperationHandlers ( ) ; }
38547	public MethodHandle guardWithTest ( MethodHandle target , MethodHandle fallback ) { if ( mcs . getTarget ( ) == K_false ) return fallback ; return MethodHandles . guardWithTest ( mcsInvoker , target , fallback ) ; }
38553	public static Node selectSingleNode ( Node contextNode , String str , Node namespaceNode ) throws TransformerException { NodeIterator nl = selectNodeIterator ( contextNode , str , namespaceNode ) ; return nl . nextNode ( ) ; }
38568	public void process ( String name , Vector elems , Hashtable atts , String pcdata ) { infoKey = ( ( InfoKey ) elems . elementAt ( _NUM ) ) . str ; infoValue = ( ( InfoValue ) elems . elementAt ( _NUM ) ) . str ; }
38570	public PermissionCollection newPermissionCollection ( ) { debug . message ( _CHAR ISPermission : : newISPermissionCollection ( ) called _CHAR ) ; return new ISPermissionCollection ( ) ; }
38575	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; return ( obj instanceof TransactionState ) && ( ( TransactionState ) obj ) . m_transactionState == m_transactionState ; }
38585	public boolean notEquals ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . notEquals ( this ) ; return ! equals ( obj2 ) ; }
38604	public long nextLong ( long least , long bound ) { if ( least >= bound ) throw new IllegalArgumentException ( ) ; return nextLong ( bound - least ) + least ; }
38623	public String toString ( ) { String modelString = _CHAR value = _CHAR + getValue ( ) + _CHAR , '' + '' extent = _CHAR + getExtent ( ) + _CHAR , '' + '' min = _CHAR + getMinimum ( ) + _CHAR , '' + '' max = _CHAR + getMaximum ( ) + _CHAR , '' + '' adj = _CHAR + getValueIsAdjusting ( ) ; return getClass ( ) . getName ( ) + _CHAR [ _CHAR + modelString + _CHAR ] _CHAR ; }
38634	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
38639	public Set keySet ( ) { if ( keySet == _NULL ) keySet = new SynchronizedSet ( new KeySet ( ) , this ) ; return keySet ; }
38643	@ Override public boolean equals ( Object obj ) { if ( ! ( obj instanceof Matrix ) ) return _BOOL ; return Arrays . equals ( vals , ( ( Matrix ) obj ) . vals ) ; }
38646	public DN child ( final String dn ) { Reject . ifNull ( dn ) ; return child ( valueOf ( dn ) ) ; }
38647	public static String [ ] words ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . split ( _CHAR \\ W + _CHAR ) ; }
38661	public LoginConfiguration httpRequest ( HttpServletRequest httpRequest ) { this . httpRequest = httpRequest ; return this ; }
38669	public Attribute toAttribute ( ) { AttributeDescription ad = AttributeDescription . create ( attributeType ) ; return new LinkedAttribute ( ad , attributeValue ) ; }
38679	public void createEntityDescriptor ( String realm , EntityDescriptorElement descriptor ) throws SAML2MetaException { debug . message ( _CHAR SAML2MetaManager . createEntityDescriptor : called . '' ) ; createEntity ( realm , descriptor , _NULL ) ; }
38694	public void addChargingCollectionFunctionAddress ( String ccfAddress ) throws ParseException { if ( ccfAddress == _NULL ) throw new NullPointerException ( _CHAR JAIN - SIP Exception , _CHAR + _CHAR P - Charging - Function - Addresses , setChargingCollectionFunctionAddress ( ) , the ccfAddress parameter is _NULL . _CHAR ) ; this . parameters . set ( ParameterNamesIms . CCF , ccfAddress ) ; }
38695	public static int mainRestoreDB ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { RestoreDB tool = new RestoreDB ( ) ; return tool . process ( args , initializeServer , outStream , errStream ) ; }
38722	private void typeCheck ( K key ) { Class < ? > keyClass = key . getClass ( ) ; if ( keyClass != keyType && keyClass . getSuperclass ( ) != keyType ) throw new ClassCastException ( keyClass + _CHAR != _CHAR + keyType ) ; }
38730	public SimplePropertyMapper encoder ( final Function < Object , ByteString , ? extends Exception > f ) { this . encoder = f ; return this ; }
38732	private void enableBle ( ) { final Intent enableIntent = new Intent ( BluetoothAdapter . ACTION_REQUEST_ENABLE ) ; startActivityForResult ( enableIntent , REQUEST_ENABLE_BT ) ; }
38736	@ Override public boolean is_empty ( ) { if ( is_nan ) return _BOOL ; return this == EMPTY ; }
38744	public static void addFile ( String s ) throws IOException { File f = new File ( s ) ; addFile ( f ) ; }
38748	@ Override public int hashCode ( ) { long hash = minSmallest + minLargest << _NUM + minLargest >> _NUM + maxSmallest << _NUM + maxSmallest >> _NUM + maxLargest << _NUM + maxLargest >> _NUM ; return ( int ) ( hash ^ ( hash >> > _NUM ) ) ; }
38750	final void forgetContents ( ) { UNSAFE . putObject ( this , itemOffset , this ) ; UNSAFE . putObject ( this , waiterOffset , _NULL ) ; }
38755	protected void makeVisible ( ) { FHTreeStateNode parent = ( FHTreeStateNode ) getParent ( ) ; if ( parent != _NULL ) parent . expandParentAndReceiver ( ) ; }
38769	public SimplePropertyMapper decoder ( final Function < ByteString , ? , ? extends Exception > f ) { this . decoder = f ; return this ; }
38770	protected void log ( Level level , String methodName , String message , Object [ ] params ) { Object [ ] args = { methodName , message } ; logger . log ( level , MessageFormat . format ( logEntryTemplate , args ) , params ) ; }
38785	public Builder withSecurityManager ( final SecurityManager securityManager ) { this . securityManager = securityManager ; return this ; }
38796	@ org . opends . server . types . PublicAPI ( stability = org . opends . server . types . StabilityLevel . PRIVATE , mayInstantiate = _BOOL , mayExtend = _BOOL , mayInvoke = _BOOL ) @ Override public boolean sendSearchReference ( SearchOperation searchOperation , SearchResultReference searchReference ) throws DirectoryException { ( ( InternalSearchOperation ) searchOperation ) . addSearchReference ( searchReference ) ; return _BOOL ; }
38801	static boolean isSet ( ) { PolicyInfo pi = policy . get ( ) ; return pi . policy != _NULL && pi . initialized == _BOOL ; }
38804	public boolean cover ( CSN covered ) { final CSN csn = this . serverIdToCSN . get ( covered . getServerId ( ) ) ; return csn != _NULL && ! csn . isOlderThan ( covered ) ; }
38812	public void leaveGroup ( InetAddress groupAddr ) throws IOException { checkJoinOrLeave ( groupAddr ) ; impl . leave ( groupAddr ) ; }
38856	public boolean hasFeature ( String feature , String version ) { if ( ( _CHAR CORE _CHAR . equals ( feature . toUpperCase ( ) ) || _CHAR XML _CHAR . equals ( feature . toUpperCase ( ) ) ) && ( _CHAR _NUM . _NUM _CHAR . equals ( version ) || _CHAR _NUM . _NUM _CHAR . equals ( version ) ) ) return _BOOL ; return _BOOL ; }
38879	public static void fill ( double [ ] a , int fromIndex , int toIndex , double val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
38896	private void broadcastUnlockRequest ( ) { final Intent intent = new Intent ( ACTION_DISSMISS_UNLOCK ) ; LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
38924	public boolean isWritable ( String attributeName ) { if ( writables . contains ( attributeName . toLowerCase ( ) ) ) return _BOOL ; else return _BOOL ; }
38930	public void stop ( ) throws LifecycleException { getServer ( ) ; server . stop ( ) ; }
38960	public MaterialBarcodeScannerBuilder withResultListener ( @ NonNull MaterialBarcodeScanner . OnResultListener onResultListener ) { this . onResultListener = onResultListener ; return this ; }
38973	public static void writeWord ( OutputStream os , int v ) throws IOException { os . write ( v & _NUM ) ; os . write ( v >> > _NUM & _NUM ) ; }
38977	public ByteArrayBuilder appendByte ( int b ) { builder . appendByte ( b ) ; return this ; }
38978	public void handleBtnClassificationRequest ( RequestInvocationEvent event ) { setDisplayFieldValue ( SINGLECHOICE_CLASSIFICATION , getDisplayFieldValue ( TF_CLASSIFICATION ) ) ; forwardTo ( ) ; }
38982	public boolean isValidOn ( Date date ) { AttCertValidityPeriod certValidityPeriod = attrCert . getAcinfo ( ) . getAttrCertValidityPeriod ( ) ; return ! date . before ( CertUtils . recoverDate ( certValidityPeriod . getNotBeforeTime ( ) ) ) && ! date . after ( CertUtils . recoverDate ( certValidityPeriod . getNotAfterTime ( ) ) ) ; }
38992	@ Override public long end ( ) throws IOException { buffer . doWrite ( END_CHUNK ) ; return _NUM ; }
38993	static String format ( String property , Object [ ] args ) { String text = ResourceBundle . getBundle ( Messages . class . getName ( ) ) . getString ( property ) ; return MessageFormat . format ( text , args ) ; }
38995	public static int combine ( int hashCode , double value ) { long v = Double . doubleToLongBits ( value ) ; return combine ( hashCode , v ) ; }
38996	public ProductService deleteProduct ( String productId , Handler < AsyncResult < Void >> resultHandler ) { delegate . deleteProduct ( productId , resultHandler ) ; return this ; }
38998	@ Override public void recycle ( ) { super . recycle ( ) ; outputStream = _NULL ; }
39022	public synchronized void write ( int b ) throws IOException { out . write ( b ) ; incCount ( _NUM ) ; }
39056	public MaterialBarcodeScannerBuilder withBleepEnabled ( boolean enabled ) { mBleepEnabled = enabled ; return this ; }
39057	public void overrideSeeds ( String seeds ) { properties . setProperty ( _CHAR cassandra . contactPoints _CHAR , seeds ) ; properties . setProperty ( _CHAR cassandra . port _CHAR , _CHAR _NUM _CHAR ) ; }
39071	public MaterialBarcodeScannerBuilder withOnly2DScanning ( ) { mBarcodeFormats = Barcode . EAN_13 | Barcode . EAN_8 | Barcode . UPC_A | Barcode . UPC_A | Barcode . UPC_E | Barcode . CODE_39 | Barcode . CODE_93 | Barcode . CODE_128 | Barcode . ITF | Barcode . CODABAR ; return this ; }
39089	public static long parseUnsignedInt ( String lexicalXSDUnsignedInt ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseUnsignedInt ( lexicalXSDUnsignedInt ) ; }
39112	public V remove ( Object key ) { Node < K , V > e ; return ( e = removeNode ( hash ( key ) , key , _NULL , _BOOL , _BOOL ) ) == _NULL ? _NULL : e . value ; }
39117	private void createLayout ( ) { createBasicLayout ( this , new GridBagConstraints ( ) ) ; setBorder ( PANEL_BORDER ) ; }
39145	public static void fill ( Object [ ] a , int fromIndex , int toIndex , Object val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
39164	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
39196	static float min ( float red , float green , float blue ) { float min = ( red < green ) ? red : green ; return ( min < blue ) ? min : blue ; }
39208	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; dictionaryFile = TestCaseUtils . createTempFile ( _CHAR love _CHAR , _CHAR sex _CHAR , _CHAR secret _CHAR , _CHAR god _CHAR , _CHAR password _CHAR ) ; }
39217	public static Object convertNodeToJAXB ( Node node ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( node ) ; }
39221	private MemberName loadMethod ( byte [ ] classFile ) { Class < ? > invokerClass = loadAndInitializeInvokerClass ( classFile , cpPatches ( classFile ) ) ; return resolveInvokerMember ( invokerClass , invokerName , invokerType ) ; }
39237	public void destroyModuleState ( ) { validatedUserID = _NULL ; userPrincipal = _NULL ; }
39238	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
39241	public static void main ( final String [ ] args ) { final int retCode = new LDAPModify ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
39276	private void registerInstanceKeyCertificate ( Map < ServerProperty , Object > serverProperties , DN serverEntryDn ) throws ADSContextException { ADSContextHelper helper = new ADSContextHelper ( ) ; helper . registerInstanceKeyCertificate ( connectionWrapper , serverProperties , serverEntryDn ) ; }
39288	public void uninstallUI ( JComponent c ) { super . uninstallUI ( c ) ; MetalToolBarUI . unregister ( c ) ; }
39301	public BaseViewHolder addOnClickListener ( int viewId ) { childClickViewIds . add ( viewId ) ; return this ; }
39316	public void relayoutToCompressAndAlign ( ) { this . relayoutToCompress ( ) ; this . relayoutToAlign ( ) ; }
39317	public SwitchFilter addRequestCase ( final Expression < Boolean > condition , final Handler handler ) { requestCases . add ( new Case ( condition , handler ) ) ; return this ; }
39321	public static int mainExportLDIF ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { ExportLDIF tool = new ExportLDIF ( ) ; return tool . process ( args , initializeServer , outStream , errStream ) ; }
39331	public AMSearchResults searchAllRoles ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { int [ ] objectTypes = { AMObject . ROLE , AMObject . FILTERED_ROLE } ; return searchObjects ( objectTypes , wildcard , avPairs , searchControl ) ; }
39343	public boolean isVimeoURLValid ( ) { String videoID = getExtractedIdentifier ( ) ; return videoID . length ( ) > _NUM && TextUtils . isDigitsOnly ( videoID ) ; }
39348	public Builder auxiliaryObjectClasses ( String ... objectClassNamesOrOIDs ) { this . auxiliaryClassOIDs . addAll ( asList ( objectClassNamesOrOIDs ) ) ; return this ; }
39363	public long readLock ( ) { long s = state , next ; return ( ( whead == wtail && ( s & ABITS ) < RFULL && U . compareAndSwapLong ( this , STATE , s , next = s + RUNIT ) ) ? next : acquireRead ( _BOOL , _NUM ) ) ; }
39368	public final AMAccessAuditEventBuilder realm ( String realm ) { putRealm ( jsonValue , realm ) ; return this ; }
39375	public void doWrite ( ByteChunk chunk ) throws IOException { outputBuffer . doWrite ( chunk ) ; contentWritten += chunk . getLength ( ) ; }
39380	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getMask ( actions ) ) ; }
39385	public Object [ ] calculateIndex ( CompositeData value ) { checkValueType ( value ) ; return internalCalculateIndex ( value ) . toArray ( ) ; }
39388	static float max ( float red , float green , float blue ) { float max = ( red > green ) ? red : green ; return ( max > blue ) ? max : blue ; }
39397	public E peek ( ) { final Node < E > f = first ; return ( f == _NULL ) ? _NULL : f . item ; }
39410	private void read ( char symbol ) throws ParseException { expect ( symbol ) ; index ++ ; }
39427	public MaterialBarcodeScannerBuilder withBarcodeFormats ( int barcodeFormats ) { mBarcodeFormats = barcodeFormats ; return this ; }
39439	@ Indexable ( type = IndexableType . REINDEX ) @ Override public Foo addFoo ( Foo foo ) { foo . setNew ( _BOOL ) ; return fooPersistence . update ( foo ) ; }
39441	public Builder removeProhibitedAttribute ( String attributeNameOrOID ) { this . prohibitedAttributeOIDs . remove ( attributeNameOrOID ) ; return this ; }
39456	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
39458	public ProcessBuilder redirectErrorStream ( boolean redirectErrorStream ) { this . redirectErrorStream = redirectErrorStream ; return this ; }
39468	public void RemoveAllNoClear ( ) { if ( _NULL == m_map ) return ; m_firstFree = _NUM ; }
39475	Cursor sqlQuery ( SQLiteQueryBuilder queryBuilder ) { queryBuilder . setTables ( DATABASE_TABLE ) ; return queryBuilder . query ( database , _NULL , _NULL , _NULL , _NULL , _NULL , _NULL ) ; }
39484	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
39502	public boolean isUnsubscribed ( int restartableId ) { Subscription subscription = restartableSubscriptions . get ( restartableId ) ; return subscription == _NULL || subscription . isUnsubscribed ( ) ; }
39505	void signedAdd ( SignedMutableBigInteger addend ) { if ( sign == addend . sign ) add ( addend ) ; else sign = sign * subtract ( addend ) ; }
39508	public net . aimeizi . person . Person . Builder clearSalary ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
39512	public static NSObject parse ( byte [ ] bytes ) throws ParseException { ASCIIPropertyListParser parser = new ASCIIPropertyListParser ( bytes ) ; return parser . parse ( ) ; }
39518	public static Object convertStringToJAXB ( String str ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( new StringReader ( str ) ) ) ) ; }
39523	public void release ( ) { this . contentLength = _NUM ; parentPool . release ( this ) ; }
39537	public MethodHandle findSetter ( Class < ? > refc , String name , Class < ? > type ) throws NoSuchFieldException , IllegalAccessException { MemberName field = resolveOrFail ( REF_putField , refc , name , type ) ; return getDirectField ( REF_putField , refc , field ) ; }
39540	public RequirementsBuilder addRequireProperty ( String name , String type , String description ) { addRequireProperty ( name , type , description , _NULL ) ; return this ; }
39548	public void restartable ( int restartableId , Func0 < Subscription > factory ) { restartables . put ( restartableId , factory ) ; if ( requested . contains ( restartableId ) ) start ( restartableId ) ; }
39550	public Object clone ( ) throws CloneNotSupportedException { NodeSetDTM clone = ( NodeSetDTM ) super . clone ( ) ; return clone ; }
39557	@ Override public void write ( byte [ ] buffer , int off , int nbytes ) throws IOException { super . write ( buffer , off , nbytes ) ; crc . update ( buffer , off , nbytes ) ; }
39589	protected LocPathIterator createDTMIterator ( Compiler compiler , int opPos ) throws javax . xml . transform . TransformerException { LocPathIterator lpi = ( LocPathIterator ) WalkerFactory . newDTMIterator ( compiler , opPos , ( compiler . getLocationPathDepth ( ) <= _NUM ) ) ; return lpi ; }
39609	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
39622	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton1Request ( event ) ; }
39628	public void undo ( ) { super . undo ( ) ; this . object . restoreState ( preState ) ; }
39649	protected List < Modification > generatemods ( String attrName , String attrValue ) { Attribute attr = Attributes . create ( attrName , attrValue ) ; return newArrayList ( new Modification ( REPLACE , attr ) ) ; }
39658	private void displayError ( LocalizableMessage msg , LocalizableMessage title ) { Utilities . displayError ( parent , msg , title ) ; toFront ( ) ; }
39678	protected void callChildVisitors ( XSLTVisitor visitor , boolean callAttrs ) { if ( _NULL != m_selectPattern ) m_selectPattern . getExpression ( ) . callVisitors ( m_selectPattern , visitor ) ; super . callChildVisitors ( visitor , callAttrs ) ; }
39685	public boolean boolValue ( ) { if ( type == BOOLEAN ) return boolValue ; else return longValue != _NUM ; }
39716	public Remote toStub ( ) throws IOException { final Remote stub = IIOPHelper . toStub ( this ) ; return stub ; }
39719	void repaintCurrentValue ( ) { Rectangle r = rectangleForCurrentValue ( ) ; comboBox . repaint ( r . x , r . y , r . width , r . height ) ; }
39722	public boolean isFlavorJavaFileListType ( ) { if ( mimeType == _NULL || representationClass == _NULL ) return _BOOL ; return java . util . List . class . isAssignableFrom ( representationClass ) && mimeType . match ( javaFileListFlavor . mimeType ) ; }
39729	public static < T > T orderAccesses ( T ref ) { theVolatile = _NUM ; return ref ; }
39747	private ModifyOperation addAttrEntry ( DN dn , String attrName , Object ... attrValStrings ) { ModifyRequest modifyRequest = Requests . newModifyRequest ( dn ) . addModification ( ADD , attrName , attrValStrings ) ; return getRootConnection ( ) . processModify ( modifyRequest ) ; }
39757	@ Override public void save ( java . io . ObjectOutputStream p_object_stream ) { super . save ( p_object_stream ) ; manual_rule_window . save ( p_object_stream ) ; }
39768	protected void freeBuffers ( ) { CryptoInputStream . freeDirectBuffer ( inBuffer ) ; CryptoInputStream . freeDirectBuffer ( outBuffer ) ; }
39784	public String format ( DateTimeFormatter formatter ) { Objects . requireNonNull ( formatter , _CHAR formatter _CHAR ) ; return formatter . format ( this ) ; }
39799	public JobService jobRangeByType ( String type , String state , long from , long to , String order , Handler < AsyncResult < List < Job >> > handler ) { delegate . jobRangeByType ( type , state , from , to , order , handler ) ; return this ; }
39801	public static void main ( final String [ ] args ) { final int retCode = new LDAPSearch ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
39811	public static float pxToDp ( float px ) { float densityDpi = Resources . getSystem ( ) . getDisplayMetrics ( ) . densityDpi ; return pxToDp ( px , densityDpi ) ; }
39826	public void applyPattern ( String template ) { validatePattern ( template ) ; pattern = template ; }
39843	public List unshift ( Object element ) { add ( _NUM , element ) ; return this ; }
39850	@ Override public EnumEvalResult evaluate ( AciEvalContext evalCtx ) { EnumEvalResult matched = evaluate ( ) ? EnumEvalResult . TRUE : EnumEvalResult . FALSE ; return matched . getRet ( type , _BOOL ) ; }
39851	public boolean stopCellEditing ( ) { fireEditingStopped ( ) ; return _BOOL ; }
39860	public static void warning ( CommandManager mgr , String msg ) { dumpToOutput ( mgr , msg , _NULL ) ; mgr . getDebugger ( ) . warning ( msg ) ; }
39874	public static String ifNullOrEmpty ( final String original , final String defaultString ) { Reject . ifNull ( defaultString , _CHAR Default string must not be _NULL _CHAR ) ; return ( original == _NULL || original . isEmpty ( ) ) ? defaultString : original ; }
39876	public void cancelSearch ( ) { Log . d ( TAG , _CHAR FmRadioActivity . cancelSearch _CHAR ) ; mService . stopScan ( ) ; }
39878	public static int parseInt ( String lexicalXSDInt ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseInt ( lexicalXSDInt ) ; }
39888	private void writeObject ( ObjectOutputStream s ) throws IOException { if ( actions == _NULL ) getActions ( ) ; s . defaultWriteObject ( ) ; }
39891	public static SchemaElement updateSchemaElementExtraPropertySingleValue ( ServerContext serverContext , SchemaElement element , String property , String value ) { List < String > values = value != _NULL ? Arrays . asList ( value ) : _NULL ; return updateSchemaElementExtraPropertyMultiplesValues ( serverContext , element , property , values ) ; }
39901	public SetupParameters backendType ( String backendType ) { this . backendType = backendType ; return this ; }
39924	public void endCDATA ( ) throws org . xml . sax . SAXException { if ( m_cdataTagOpen ) closeCDATA ( ) ; m_cdataStartCalled = _BOOL ; }
39950	public Builder nameForm ( final String nameFormOID ) { this . nameFormOID = nameFormOID ; return this ; }
39957	protected void registerListeners ( ) { component . addMouseListener ( this ) ; component . addMouseMotionListener ( this ) ; }
39959	public Object remove ( int posn ) throws InvalidNameException { unparsed = _NULL ; return rdns . remove ( posn ) . toString ( ) ; }
39973	public static float parseFloat ( String lexicalXSDFloat ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseFloat ( lexicalXSDFloat ) ; }
39986	public Builder withMessageDispatcherConcurrency ( int concurrency ) { config . setMessageDispatcherConcurrency ( concurrency ) ; return this ; }
39992	protected void doChecks ( ) { checkOsUser ( ) ; checkUmask ( ) ; }
40002	public SipStatusLine createStatusLine ( String statusLine ) throws ParseException { StatusLineParser statusLineParser = new StatusLineParser ( statusLine ) ; return ( SipStatusLine ) statusLineParser . parse ( ) ; }
40003	public static void createAllTables ( SQLiteDatabase db , boolean ifNotExists ) { HtmlEntityDao . createTable ( db , ifNotExists ) ; CollectEntityDao . createTable ( db , ifNotExists ) ; }
40014	protected void close ( ) throws IOException { shutdownEntry ( ) ; if ( connection . isOpen ( ) ) connection . close ( ) ; }
40033	protected void maximizeFrame ( JInternalFrame f ) { BasicLookAndFeel . playSound ( frame , _CHAR InternalFrame . maximizeSound _CHAR ) ; getDesktopManager ( ) . maximizeFrame ( f ) ; }
40035	public AMActivityAuditEventBuilder realm ( String value ) { putRealm ( jsonValue , value ) ; return this ; }
40040	public StringBuilder reverse ( ) { reverse0 ( ) ; return this ; }
40059	public void encode ( ByteStringBuilder buffer ) { buffer . appendBERLength ( _NUM ) ; buffer . appendByte ( encodedRepresentation ) ; }
40097	private String convertIntToIntString ( int quoteParam ) { String quoteParamString = ( new Integer ( quoteParam ) ) . toString ( ) ; return quoteParamString ; }
40098	public void windowDeactivated ( WindowEvent e ) { ( ( WindowListener ) a ) . windowDeactivated ( e ) ; ( ( WindowListener ) b ) . windowDeactivated ( e ) ; }
40127	@ Override public void checkClientTrusted ( X509Certificate [ ] chain , String authType ) throws CertificateException { LocalizableMessage message = ERR_PROMPTTM_REJECTING_CLIENT_CERT . get ( ) ; throw new CertificateException ( message . toString ( ) ) ; }
40135	public static int lastIndexOf ( final String value , final String needle ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return lastIndexOf ( value , needle , value . length ( ) , _BOOL ) ; }
40137	public Builder removeName ( String name ) { this . names . remove ( name ) ; return this ; }
40140	public Builder addAction ( String actionName , Boolean defaultValue ) { actions . put ( actionName , defaultValue ) ; return this ; }
40151	public void onFedletSLOFailure ( HttpServletRequest request , HttpServletResponse response , LogoutRequest logoutReq , LogoutResponse logoutRes , String hostedEntityID , String idpEntityID , String binding ) throws SAML2Exception { onFedletSLOSuccessOrFailure ( request , response , logoutReq , logoutRes , hostedEntityID , idpEntityID , binding , _BOOL ) ; return ; }
40182	public String errorsToString ( ) { final String idList = ! failedServers . isEmpty ( ) ? failedServers . toString ( ) : _CHAR none _CHAR ; return _CHAR hasTimeout : _CHAR + ( hasTimeout ? _CHAR yes _CHAR : _CHAR no _CHAR ) + _CHAR , _CHAR + _CHAR hasWrongStatus : _CHAR + ( hasWrongStatus ? _CHAR yes _CHAR : _CHAR no _CHAR ) + _CHAR , _CHAR + _CHAR hasReplayError : _CHAR + ( hasReplayError ? _CHAR yes _CHAR : _CHAR no _CHAR ) + _CHAR , _CHAR + _CHAR concerned server ids : _CHAR + idList ; }
40203	public void notifyEntryChanged ( BrowserNodeInfo nodeInfo ) { BasicNode node = nodeInfo . getNode ( ) ; startRefreshNode ( node , _NULL , _BOOL ) ; }
40205	public String formatMulticastAddress ( String addr , int ttl , int numAddrs ) { String res = addr + _CHAR / _CHAR + ttl + _CHAR / _CHAR + numAddrs ; return res ; }
40207	public static void disableLogging ( ) { LogManager . getLogManager ( ) . reset ( ) ; Logger . getLogger ( _CHAR _CHAR ) . setLevel ( Level . OFF ) ; }
40210	public void addNodes ( NodeSet ns ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESET_NOT_MUTABLE , _NULL ) ) ; addNodes ( ( NodeIterator ) ns ) ; }
40230	public CompareResult compare ( CompareRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . compare ( request ) ; }
40231	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
40232	public static void main ( final String [ ] args ) { final int retCode = new AuthRate ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
40233	public SoapSTSServerCryptoStateBuilder decryptionKeyAlias ( String decryptionKeyAlias ) { this . decryptionKeyAlias = decryptionKeyAlias ; return this ; }
40241	public static void init ( final InputStream mimeTypes , final InputStream magicStream ) throws IOException { MimeUtil . mimeTypes . load ( mimeTypes ) ; parse ( new InputStreamReader ( magicStream ) ) ; }
40254	protected Object createPolicyEvaluationMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { policyEvaluation = new PolicyEvaluationImpl ( this ) ; return policyEvaluation ; }
40281	public String formatDateTime ( final Date date , final String format ) { final DateTime dateTime = new DateTime ( date , chrono ) ; return format == _NULL ? dateTime . toString ( ) : dateTime . toString ( format ) ; }
40284	public int end ( ) { if ( first < _NUM ) throw new IllegalStateException ( _CHAR No match available _CHAR ) ; return last ; }
40286	public void close ( ) throws IOException { in =- _NUM ; closedByReader = _BOOL ; }
40290	public void add ( MutableTreeNode newChild ) { if ( newChild != _NULL && newChild . getParent ( ) == this ) insert ( newChild , getChildCount ( ) - _NUM ) ; else insert ( newChild , getChildCount ( ) ) ; }
40298	private static void logEncodingMessageError ( String messageType , DN entryDN , Exception exception ) { logger . traceException ( exception ) ; logger . error ( LocalizableMessage . raw ( _CHAR An exception was encountered while trying to encode a replication '' + messageType + '' message for entry \ '' '' + entryDN + '' \ '' into an External Change Log entry : '' + exception . getMessage ( ) ) ) ; }
40307	private static HttpHost [ ] toChain ( HttpHost proxy ) { if ( proxy == _NULL ) return _NULL ; return new HttpHost [ ] { proxy } ; }
40324	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . restartServer ( ) ; isMemberOfType = DirectoryServer . getSchema ( ) . getAttributeType ( _CHAR ismemberof _CHAR ) ; }
40334	public void reset ( ) { tbsGen = new V3TBSCertificateGenerator ( ) ; extGenerator . reset ( ) ; }
40379	public final int readInt ( ) throws IOException { readFully ( scratch , _NUM , SizeOf . INT ) ; return Memory . peekInt ( scratch , _NUM , ByteOrder . BIG_ENDIAN ) ; }
40381	public static void registerRotationPolicy ( DN configEntryDN , RotationPolicy < ? > policy ) { Reject . ifNull ( configEntryDN , policy ) ; directoryServer . rotationPolicies . put ( configEntryDN , policy ) ; }
40394	@ Override public void init ( ) throws ServletException { registry = Registry . getRegistry ( _NULL , _NULL ) ; mBeanServer = Registry . getRegistry ( _NULL , _NULL ) . getMBeanServer ( ) ; }
40399	public OIDCIdTokenConfigBuilder customAuthenticationMethodReferencesMapperClass ( String customAuthenticationMethodReferencesMapperClass ) { this . customAuthenticationMethodReferencesMapper = customAuthenticationMethodReferencesMapperClass ; return this ; }
40412	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { if ( _NUM == length ) return ; characters ( ch , start , length ) ; }
40418	public synchronized StringBuffer append ( char [ ] chars , int start , int length ) { append0 ( chars , start , length ) ; return this ; }
40420	protected Object createCtsConnectionFailureRateMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { ctsConnectionFailureRate = new CtsConnectionFailureRateImpl ( this ) ; return ctsConnectionFailureRate ; }
40426	public long position ( Clob searchStr , long start ) throws SerialException , SQLException { isValid ( ) ; return position ( searchStr . getSubString ( _NUM , ( int ) searchStr . length ( ) ) , start ) ; }
40448	static final int hash ( Object key ) { int h ; return ( key == _NULL ) ? _NUM : ( h = key . hashCode ( ) ) ^ ( h >> > _NUM ) ; }
40454	public SubResourceSingleton isReadOnly ( final boolean readOnly ) { isReadOnly = readOnly ; return this ; }
40471	private void readObject ( java . io . ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; installShowFilesListener ( ) ; }
40482	public boolean authenticate ( Callback [ ] credentials ) throws IdRepoException , com . sun . identity . authentication . spi . AuthLoginException { IdServices idServices = IdServicesFactory . getDataStoreServices ( ) ; return ( idServices . authenticate ( organizationDN , credentials ) ) ; }
40491	@ Override public void publish ( LogRecord record ) { super . publish ( record ) ; flush ( ) ; }
40495	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
40504	public void leaveGroup ( SocketAddress groupAddress , NetworkInterface netInterface ) throws IOException { checkJoinOrLeave ( groupAddress , netInterface ) ; impl . leaveGroup ( groupAddress , netInterface ) ; }
40507	private synchronized void writeObject ( java . io . ObjectOutputStream s ) throws IOException { if ( actions == _NULL ) getActions ( ) ; s . defaultWriteObject ( ) ; }
40521	public void save ( ) throws Exception { String xml = strXMLDeclarationHdr + SMSSchema . nodeToString ( root ) ; ServerConfiguration . setServerConfigXML ( ssoToken , SystemProperties . getServerInstanceName ( ) , xml ) ; }
40526	public void handleButton3Request ( RequestInvocationEvent event ) { CloseWindowViewBean vb = ( CloseWindowViewBean ) getViewBean ( CloseWindowViewBean . class ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
40530	public String toString ( ) { String classname = Util . getUnqualifiedName ( getClass ( ) ) ; return ( ref == _NULL ) ? classname : classname + _CHAR [ _CHAR + ref . remoteToString ( ) + _CHAR ] _CHAR ; }
40544	public Query whereContains ( Contact . Field field , Object value ) { addNewConstraint ( field , Where . contains ( field . getColumn ( ) , value ) ) ; return this ; }
40547	@ Override public ContainerListener [ ] findContainerListeners ( ) { ContainerListener [ ] results = new ContainerListener [ _NUM ] ; return listeners . toArray ( results ) ; }
40555	public static ArgumentException unknownCategory ( String categoryName ) { LocalizableMessage msg = ERR_DSCFG_ERROR_CATEGORY_UNRECOGNIZED . get ( categoryName ) ; return new ArgumentException ( msg ) ; }
40577	public static void addParams ( final Map < String , String > params , final StringBuilder uri ) { if ( params == _NULL || params . isEmpty ( ) ) return ; for ( Entry < String , String > param : params . entrySet ( ) ) addParam ( param . getKey ( ) , param . getValue ( ) , uri ) ; }
40584	@ Override protected void uninstallListeners ( ) { super . uninstallListeners ( ) ; splitPane . removePropertyChangeListener ( this ) ; }
40587	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR PICTURE_INFO \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
40589	public void addLiteralResultAttribute ( String attrUri , String attrLocalName , String attrRawName , String attrValue ) { QName key = new QName ( attrUri , attrLocalName ) ; m_outputProperties . setProperty ( key , attrValue ) ; }
40614	private String convertIntToIntString ( int quoteParam ) { String quoteParamString = ( new Integer ( quoteParam ) ) . toString ( ) ; return quoteParamString ; }
40619	public void mousePressed ( MouseEvent e ) { ( ( MouseListener ) a ) . mousePressed ( e ) ; ( ( MouseListener ) b ) . mousePressed ( e ) ; }
40621	public JobService failedCount ( String type , Handler < AsyncResult < Long >> handler ) { delegate . failedCount ( type , handler ) ; return this ; }
40628	public ScriptCompiler shiftLeft ( Map < String , ? > sources ) { this . sources . putAll ( sources ) ; return this ; }
40657	private void modifyIndexOnline ( final ConnectionWrapper connWrapper ) throws Exception { final BackendCfgClient backend = connWrapper . getRootConfiguration ( ) . getBackend ( backendName ) ; modifyBackendIndexOnline ( ( PluggableBackendCfgClient ) backend ) ; }
40662	public void onEvent ( final DisruptorReferringEventEntry eventEntryWrap , final long sequence , final boolean endOfBatch ) throws Exception { EventEntryImpl eventEntry = eventEntryWrap . delegate ; onEvent ( eventEntry , sequence , endOfBatch ) ; }
40674	void updateValue ( Object value ) { super . updateValue ( value ) ; updateMaskIfNecessary ( ) ; }
40679	private static boolean isDirectory ( URL url ) { String file = url . getFile ( ) ; return ( file . length ( ) > _NUM && file . charAt ( file . length ( ) - _NUM ) == _CHAR ) ; }
40692	public static String bytesToPascalString ( byte [ ] data ) { int len = ( int ) data [ _NUM ] ; return new String ( data , _NUM , len , LATIN1 ) ; }
40694	protected byte [ ] wrap ( byte content_type , DataStream dataStream ) { byte [ ] fragment = dataStream . getData ( MAX_DATA_LENGTH ) ; return wrap ( content_type , fragment , _NUM , fragment . length ) ; }
40701	static ZoneOffset readOffset ( DataInput in ) throws IOException { int offsetByte = in . readByte ( ) ; return ( offsetByte == _NUM ? ZoneOffset . ofTotalSeconds ( in . readInt ( ) ) : ZoneOffset . ofTotalSeconds ( offsetByte * _NUM ) ) ; }
40733	public Builder type ( final ObjectClassType type ) { this . type = type ; return this ; }
40734	public void logError ( String message , Exception ex ) { Logger logger = this . getLogger ( ) ; logger . error ( message , ex ) ; }
40739	private void siftDown ( int k , E x ) { if ( comparator != _NULL ) siftDownUsingComparator ( k , x ) ; else siftDownComparable ( k , x ) ; }
40743	public void callPredicateVisitors ( XPathVisitor visitor ) { m_expr . callVisitors ( new filterExprOwner ( ) , visitor ) ; super . callPredicateVisitors ( visitor ) ; }
40760	public void handleButton1Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToRealmView ( event ) ; }
40764	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
40770	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiLabelUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiLabelUI ) mui ) . uis , a ) ; }
40775	public static void copy ( InputStream input , Writer output ) throws IOException { InputStreamReader in = new InputStreamReader ( input ) ; copy ( in , output ) ; }
40779	public AccountService deleteAccount ( String id , Handler < AsyncResult < Void >> resultHandler ) { delegate . deleteAccount ( id , resultHandler ) ; return this ; }
40783	public AccountService retrieveAllAccounts ( Handler < AsyncResult < List < Account >> > resultHandler ) { delegate . retrieveAllAccounts ( resultHandler ) ; return this ; }
40786	public Builder attributes ( Collection < String > attributeOIDs ) { this . attributeOIDs . addAll ( attributeOIDs ) ; return this ; }
40788	public Builder withUserId ( String userId ) { this . userId = userId ; return this ; }
40811	private static void updateEntry ( final Connection connection , final String name , final String attributeDescription ) throws LdapException { ModifyRequest request = Requests . newModifyRequest ( name ) . addModification ( ModificationType . REPLACE , attributeDescription , _CHAR This is a String . '' ) ; connection . modify ( request ) ; }
40815	public Builder removeRequiredAttribute ( final String nameOrOID ) { this . requiredAttributes . remove ( nameOrOID ) ; return this ; }
40816	@ Override public void close ( ) throws IOException { super . close ( ) ; closed = _BOOL ; }
40824	public static boolean isFullyAuthenticated ( ) throws IOException { FullyAuthenticatedFaceletsTag authenticatedTag = new FullyAuthenticatedFaceletsTag ( ) ; return authenticatedTag . authorize ( ) ; }
40844	public synchronized void clearCache ( ) { sdkCache . clear ( ) ; initializeCache ( ) ; }
40855	public static int main ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { final UpgradeCli app = new UpgradeCli ( System . in , outStream , errStream ) ; return app . run ( args , initializeServer ) ; }
40858	@ Override public EventHandlers defineEventHandlers ( EventHandlersBuilder builder ) { builder . setEventHandler ( CargoRegistered . class , _NULL ) ; return builder . build ( ) ; }
40863	public Builder withDelegateFactory ( String delegateFactory ) { config . setDelegateFactory ( delegateFactory ) ; return this ; }
40878	public SAML2ConfigBuilder customAuthzDecisionStatementsProviderClassName ( String customAuthzDecisionStatementsProviderClassName ) { this . customAuthzDecisionStatementsProviderClassName = customAuthzDecisionStatementsProviderClassName ; return this ; }
40884	protected Object createSelfTimingMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { selfPolicyTiming = new SelfTimingImpl ( this ) ; return selfPolicyTiming ; }
40921	void dump ( OutputStream out , int length ) throws IOException { if ( count < mark + length ) throw new IOException ( _CHAR short DER value ( encode ) _CHAR ) ; out . write ( buf , mark , length ) ; }
40925	public short readShort ( ) throws SQLException { Short attrib = ( Short ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . shortValue ( ) ; }
40934	public LdapConnection connect ( final String host , final int port , final Options options ) throws LdapException { final ConnectionFactory factory = getConnectionFactory ( host , port , options ) ; return new LdapConnection ( factory . getConnection ( ) , options . get ( TRANSACTIONID_OPTION ) ) ; }
40936	public NodeList convertToNodeset ( ) { if ( m_obj instanceof NodeList ) return ( NodeList ) m_obj ; else return new org . apache . xml . dtm . ref . DTMNodeList ( asNodeIterator ( ) ) ; }
40950	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
40961	public static void define ( String name ) { Tag tag = new Tag ( name ) ; TAGS . put ( name , tag ) ; }
40970	public DiffOptions useExactMatching ( ) { this . useExactMatching = _BOOL ; return this ; }
40977	public void clearFailureLockout ( ) { clearAuthFailureTimes ( ) ; clearFailureLockedTime ( ) ; }
40978	protected String configureUri ( final String uri ) { if ( prefix == _NULL || uri . startsWith ( prefix ) ) return uri ; else return prefix + uri ; }
41008	public void skippedEntity ( String name ) throws org . xml . sax . SAXException { if ( ! m_shouldProcess ) return ; getCurrentProcessor ( ) . skippedEntity ( this , name ) ; }
41010	public Builder noCache ( ) { this . noCache = _BOOL ; return this ; }
41013	public Matcher reset ( CharSequence input ) { text = input ; return reset ( ) ; }
41046	private static Locale createConstant ( String lang , String country ) { BaseLocale base = BaseLocale . createInstance ( lang , country ) ; return getInstance ( base , _NULL ) ; }
41065	public static int configMain ( final String [ ] args , final OutputStream outStream , final OutputStream errStream ) { final ConfigureDS tool = new ConfigureDS ( args , outStream , errStream ) ; return tool . run ( ) ; }
41072	public boolean validate ( ) { if ( end >= length ) end = length - _NUM ; return ( start >= _NUM ) && ( end >= _NUM ) && ( start <= end ) && ( length > _NUM ) ; }
41073	public void beginMonitoringOf ( final InetAddress inetAddress ) { final long socketIdentifier = fromInet4Address ( inetAddress ) ; candidateSockets . beginMonitoringSocketIdentifier ( new InetSocketAddress ( inetAddress , _NUM ) , socketIdentifier ) ; }
41075	public static ArgumentException unknownProperty ( String name ) { LocalizableMessage message = ERR_DSCFG_ERROR_PROPERTY_UNRECOGNIZED_NO_DEFN . get ( name ) ; return new ArgumentException ( message ) ; }
41090	final void eraseThreadLocals ( ) { U . putObject ( this , THREADLOCALS , _NULL ) ; U . putObject ( this , INHERITABLETHREADLOCALS , _NULL ) ; }
41092	protected void unregisterListeners ( ) { component . removeMouseListener ( this ) ; component . removeMouseMotionListener ( this ) ; }
41093	protected void uninstallKeyboardActions ( ) { SwingUtilities . replaceUIActionMap ( splitPane , _NULL ) ; SwingUtilities . replaceUIInputMap ( splitPane , JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT , _NULL ) ; }
41108	public NodeSetDTM mutableNodeset ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_MUTABLENODELIST , new Object [ ] { getTypeString ( ) } ) ; return ( NodeSetDTM ) m_obj ; }
41112	public RESTEndpointBuilder realm ( String s ) { realm = s ; return this ; }
41118	public SAML2ConfigBuilder attributeMap ( Map < String , String > attributeMap ) { this . attributeMap = Collections . unmodifiableMap ( attributeMap ) ; return this ; }
41127	public Builder requiredAttributes ( final String ... attributeNamesOrOIDs ) { this . requiredAttributeOIDs . addAll ( asList ( attributeNamesOrOIDs ) ) ; return this ; }
41131	public static String printDecimal ( java . math . BigDecimal val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printDecimal ( val ) ; }
41141	@ Fluent public Job priority ( Priority level ) { if ( level != _NULL ) this . priority = level ; return this ; }
41150	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
41163	public void reset ( ) { count = _NUM ; totalTime = _NUM ; }
41184	@ Override public void uninitialize ( ) { KeyboardFocusManager . getCurrentKeyboardFocusManager ( ) . removePropertyChangeListener ( _handler ) ; super . uninitialize ( ) ; }
41198	public static boolean isConnectedFast ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && Connectivity . isConnectionFast ( info . getType ( ) , info . getSubtype ( ) ) ) ; }
41208	@ Override public Foo removeByUUID_G ( String uuid , long groupId ) throws NoSuchFooException { Foo foo = findByUUID_G ( uuid , groupId ) ; return remove ( foo ) ; }
41209	public synchronized void write ( byte [ ] buf , int off , int len ) throws IOException { super . write ( buf , off , len ) ; crc . update ( buf , off , len ) ; }
41214	public Query or ( List < Query > queries ) { innerQueries = queries ; return this ; }
41228	private boolean shouldDrawItemDivider ( ViewHolder holder , List < AlphabeticalAppsList . AdapterItem > items ) { int pos = holder . getPosition ( ) ; return items . get ( pos ) . viewType == AllAppsGridAdapter . PREDICTION_ICON_VIEW_TYPE ; }
41236	public static boolean isSiteExist ( SSOToken ssoToken , String siteName ) throws SMSException , SSOException { Set sites = getSites ( ssoToken ) ; return sites . contains ( siteName ) ; }
41243	public static long fromInet4Address ( final InetAddress inetAddress ) { ensureIsInet4Address ( inetAddress ) ; return Integer . toUnsignedLong ( inetAddress . hashCode ( ) ) ; }
41245	public StringBuffer append ( int i ) { IntegralToString . appendInt ( this , i ) ; return this ; }
41252	SmsRouteTreeBuilder filtered ( Filter filter ) { this . filter = filter ; return this ; }
41257	public void mouseExited ( MouseEvent e ) { ( ( MouseListener ) a ) . mouseExited ( e ) ; ( ( MouseListener ) b ) . mouseExited ( e ) ; }
41258	public long roundTripTime ( ) throws InterruptedException { latch . await ( ) ; return received - sent ; }
41262	private void initResourceBundle ( UIDefaults table ) { table . setDefaultLocale ( Locale . getDefault ( ) ) ; table . addResourceBundle ( _CHAR com . sun . swing . internal . plaf . basic . resources . basic _CHAR ) ; }
41265	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; DirectoryServer . registerMonitorProvider ( testMonitorProvider ) ; }
41266	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
41267	public int update ( byte [ ] input , int inputOffset , int inputLen , byte [ ] output , int outputOffset ) throws ShortBufferException { checkState ( ) ; return OpenSslNative . updateByteArray ( context , input , inputOffset , inputLen , output , outputOffset , output . length - outputOffset ) ; }
41291	public Paragraph addTabStops ( TabStop ... tabStops ) { addTabStopsAsProperty ( Arrays . asList ( tabStops ) ) ; return this ; }
41300	public static MatchedValuesFilter createPresentFilter ( String rawAttributeType ) { Reject . ifNull ( rawAttributeType ) ; return new MatchedValuesFilter ( PRESENT_TYPE , rawAttributeType , _NULL , _NULL , _NULL , _NULL , _NULL ) ; }
41303	public static boolean checkAlarmService ( Context context , PendingIntent servicePendingIntent ) { final Intent i = new Intent ( context , GithubWidgetService . class ) ; return PendingIntent . getService ( context , _NUM , i , PendingIntent . FLAG_NO_CREATE ) != _NULL ; }
41306	public boolean hasSession ( SessionID sessionID ) { Reject . ifNull ( sessionID ) ; return sessionTable . containsKey ( sessionID ) ; }
41310	private void handleActionFoo ( String param1 , String param2 ) { String text = _CHAR Foo : _CHAR + param1 + _CHAR , '' + param2 ; Log . v ( TAG , text ) ; }
41315	public static void writeSwappedShort ( OutputStream output , short value ) throws IOException { output . write ( ( byte ) ( ( value >> _NUM ) & _NUM ) ) ; output . write ( ( byte ) ( ( value >> _NUM ) & _NUM ) ) ; }
41323	void addSubordinateTemplate ( final String name , final int numEntries ) { subordinateTemplateNames . add ( name ) ; numEntriesPerTemplate . add ( numEntries ) ; }
41332	public void write ( int b ) throws IOException { output . write ( b ) ; bytesWritten ++ ; }
41336	public static Color fromBGR ( int bgr ) throws IllegalArgumentException { Validate . isTrue ( ( bgr >> _NUM ) == _NUM , _CHAR Extrenuous data in : _CHAR , bgr ) ; return fromBGR ( bgr >> _NUM & BIT_MASK , bgr >> _NUM & BIT_MASK , bgr >> _NUM & BIT_MASK ) ; }
41339	public static Set < DN > asSetOfDN ( Entry entry , String attrDesc ) { Attribute attr = entry . getAttribute ( attrDesc ) ; return attr != _NULL ? attr . parse ( ) . asSetOfDN ( ) : Collections . < DN > emptySet ( ) ; }
41341	public boolean hasCache ( ) { final NodeVector nv = getVector ( ) ; return ( nv != _NULL ) ; }
41344	private synchronized void writeObject ( ObjectOutputStream oos ) throws IOException { oos . defaultWriteObject ( ) ; serialize ( oos , ( Collection ) bcsListeners ) ; }
41349	protected void loadChildren ( ) { loadedChildren = _BOOL ; createChildren ( this , childValue ) ; }
41408	public void configChanged ( ConfigurationActionEvent e ) { debug . message ( _CHAR DiscoServiceManager . configChanged . '' ) ; setValues ( ) ; }
41410	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; s . writeObject ( SerializationTester . test ( events ) ? events : _NULL ) ; }
41424	public AddressImpl parseAddress ( String address ) throws ParseException { AddressParser addressParser = new AddressParser ( address ) ; return addressParser . address ( _BOOL ) ; }
41429	protected void layout ( int width , int height ) { setSpanOnAxis ( X_AXIS , width ) ; setSpanOnAxis ( Y_AXIS , height ) ; }
41441	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR GREEN_WATCHED_VIDEO \ _CHAR ( _CHAR + _CHAR \ _CHAR VIDEOYOUKUVID \ _CHAR TEXT PRIMARY KEY NOT NULL , _CHAR + _CHAR \ _CHAR VIDEOBACKGROUND \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR VIDEOTITLE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR VIDEOWATCHTIME \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR VIDEODURATION \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR VIDEOPLAYTIME \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR VIDEO_ENDED \ _CHAR INTEGER ) ; _CHAR ) ; }
41447	private void read ( char symbol ) throws ParseException { expect ( symbol ) ; index ++ ; }
41453	public int read ( ) throws IOException { char cbuf [ ] = new char [ _NUM ] ; return read ( cbuf , _NUM , _NUM ) == _NUM ? cbuf [ _NUM ] : - _NUM ; }
41467	public WorldCreator generator ( String generator , CommandSender output ) { this . generator = getGeneratorForName ( name , generator , output ) ; return this ; }
41488	public void writeUint8 ( long n ) { check ( _NUM ) ; buffer [ write_pos ++ ] = ( byte ) ( n & _NUM ) ; }
41489	private void cancelClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
41502	public RunnerSearchConfig markTestsWithoutAnnotationAsIgnored ( ) { isToMarkTestsWithoutAnnotationAsIgnored = _BOOL ; return this ; }
41509	public final int _exptype2 ( int identity ) { if ( identity < m_blocksize ) return m_exptype_map0 [ identity ] ; else return m_exptype_map [ identity >> > m_SHIFT ] [ identity & m_MASK ] ; }
41553	public ByteArrayBuilder appendByteArray ( byte [ ] bytes ) { builder . appendBytes ( bytes ) ; return this ; }
41559	public boolean orgTemplateExists ( String serviceName ) throws AMException , SSOException { ServiceConfig sc = AMServiceUtils . getOrgConfig ( token , entryDN , serviceName ) ; return ( sc != _NULL ) ; }
41566	public void put ( String key , Object ser ) { put ( key , ser , _NULL ) ; put ( _CHAR _CHAR , _CHAR _CHAR , new Base64Cipher ( ) ) ; }
41568	public void focusLost ( FocusEvent e ) { ( ( FocusListener ) a ) . focusLost ( e ) ; ( ( FocusListener ) b ) . focusLost ( e ) ; }
41590	protected void enableClusteredSession ( Router router ) { router . route ( ) . handler ( CookieHandler . create ( ) ) ; router . route ( ) . handler ( SessionHandler . create ( ClusteredSessionStore . create ( vertx , _CHAR shopping . user . session _CHAR ) ) ) ; }
41603	@ Override public void initialize ( MessagePolicy requestPolicy , MessagePolicy responsePolicy , CallbackHandler handler , Map < String , Object > options ) throws AuthenticationException { JsonValue properties = json ( options ) ; authenticationIdAttribute = properties . get ( AUTHENTICATION_ID ) . required ( ) . asString ( ) ; }
41605	public void appendInt ( int val ) { buf [ pos ++ ] = ( byte ) ( ( val >> > _NUM ) & _NUM ) ; buf [ pos ++ ] = ( byte ) ( val & _NUM ) ; }
41612	public static boolean isConnected ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) ) ; }
41619	public static float dip2Dimension ( float dip , Context context ) { DisplayMetrics displayMetrics = context . getResources ( ) . getDisplayMetrics ( ) ; return TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dip , displayMetrics ) ; }
41622	public void addPair ( String function , String name ) { PairedTextEncodedStringNullTerminated . ValuePairs value = ( ( PairedTextEncodedStringNullTerminated ) getObject ( DataTypes . OBJ_TEXT ) ) . getValue ( ) ; value . add ( function , name ) ; }
41627	public Builder optionalAttributes ( final Collection < String > nameOrOIDs ) { this . optionalAttributes . addAll ( nameOrOIDs ) ; return this ; }
41632	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiSeparatorUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiSeparatorUI ) mui ) . uis , a ) ; }
41637	public final Collection < AwtreeFindEntry > find_overlap_tree_entries_with_clearance ( ShapeTile p_shape , int p_layer , NetNosList p_ignore_net_nos , int p_clearance_class ) { if ( is_clearance_compensation_used ( ) ) return find_overlap_tree_entries ( p_shape , p_layer , p_ignore_net_nos ) ; else return find_overlap_tree_entries_with_clearance_fun ( p_shape , p_layer , p_ignore_net_nos , p_clearance_class ) ; }
41638	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; return _NULL ; }
41640	public final HashCode append ( double value ) { hashCode = combine ( hashCode , value ) ; return this ; }
41642	public AMSearchResults searchAllRoles ( String wildcard , Map avPairs , AMSearchControl searchControl ) throws AMException , SSOException { int [ ] objectTypes = { AMObject . ROLE , AMObject . FILTERED_ROLE } ; return searchObjects ( objectTypes , wildcard , avPairs , searchControl ) ; }
41656	public static String doFix ( String path , @ Nullable String fileContent , HighlightInfo . IntentionActionDescriptor intentionActionDescriptor ) { UIUtil . invokeAndWaitIfNeeded ( ( Runnable ) _NULL ) ; return _NULL ; }
41671	public static boolean isValidQName ( String localPart ) { QName parseqn = DatatypeConverter . parseQName ( localPart , nsc ) ; return parseqn != _NULL ; }
41675	public V put ( K key , V value ) { if ( value == _NULL ) throw new NullPointerException ( ) ; return doPut ( key , value , _BOOL ) ; }
41678	public void addCompleteIndex ( String index ) { Reject . ifNull ( index ) ; completeList . add ( index ) ; }
41692	public Builder subject ( X500Principal subject ) { this . subject = subject ; return this ; }
41701	public static NotificationSet parseXML ( String xml ) { NotificationSetParser parser = new NotificationSetParser ( xml ) ; return parser . parseXML ( ) ; }
41709	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiScrollBarUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiScrollBarUI ) mui ) . uis , a ) ; }
41714	public boolean isSigned ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . signed ; }
41734	public Builder names ( final Collection < String > names ) { this . names . addAll ( names ) ; return this ; }
41737	public void changePassword ( String oldPassword , String newPassword ) throws IdRepoException , SSOException { IdServices idServices = IdServicesFactory . getDataStoreServices ( ) ; idServices . changePassword ( token , type , name , oldPassword , newPassword , orgName , getDN ( ) ) ; }
41742	public void characters ( char ch [ ] , int start , int length ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . characters ( ch , start , length ) ; }
41746	@ Override public void onClick ( View v ) { setResult ( RESULT_OK , new Intent ( ) . putExtra ( KEY_STRETCH , convertToInt ( mStretchRect ) ) . putExtra ( KEY_PADDING , convertToInt ( mPaddingRect ) ) ) ; finish ( ) ; }
41752	public boolean acceptFirstLine ( String firstLine ) { if ( firstlineMatcher == _NULL ) return _BOOL ; return firstLine != _NULL && firstlineMatcher . reset ( firstLine ) . matches ( ) ; }
41763	public boolean isDone ( ) { TaskState ts = getTaskState ( ) ; return ts != _NULL && TaskState . isDone ( ts ) ; }
41785	public boolean isValid ( ) { checkState ( ) ; return invalidUsers . isEmpty ( ) ; }
41795	public boolean contains ( Object o ) { if ( ! ( o instanceof Map . Entry ) ) return _BOOL ; return c . contains ( new UnmodifiableEntry < > ( ( Map . Entry < ? , ? > ) o ) ) ; }
41820	public void onResume ( ) { super . onResume ( ) ; readTickEvent ( ) ; }
41823	public Builder substringMatchingRule ( String substringMatchingRuleOID ) { this . substringMatchingRuleOID = substringMatchingRuleOID ; return this ; }
41832	public void flush ( ) throws java . io . IOException { if ( m_writer != _NULL ) m_writer . flush ( ) ; flushBuffer ( ) ; }
41842	static int checkBufferSize ( CryptoCipher cipher , int bufferSize ) { Utils . checkArgument ( bufferSize >= CryptoInputStream . MIN_BUFFER_SIZE , _CHAR Minimum value of buffer size is _CHAR + CryptoInputStream . MIN_BUFFER_SIZE + _CHAR . _CHAR ) ; return bufferSize - bufferSize % cipher . getBlockSize ( ) ; }
41845	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; FSUtils . debug . message ( _CHAR FSSingleLogoutServlet Initializing ... _CHAR ) ; }
41849	@ Override public boolean onCreateOptionsMenu ( Menu menu ) { menu . add ( Menu . NONE , MENU_HELP , Menu . NONE , getString ( R . string . help ) ) . setIcon ( android . R . drawable . ic_menu_help ) . setAlphabeticShortcut ( _CHAR ) ; return super . onCreateOptionsMenu ( menu ) ; }
41870	public void ReInit ( SimpleCharStream stream , int lexState ) { ReInit ( stream ) ; SwitchTo ( lexState ) ; }
41872	protected Rectangle applyMargins ( Rectangle rect , float [ ] margins , boolean reverse ) { if ( isPositioned ( ) ) return rect ; return rect . < Rectangle > applyMargins ( margins [ _NUM ] , margins [ _NUM ] , margins [ _NUM ] , margins [ _NUM ] , reverse ) ; }
41876	public void stop ( ) { timer . cancel ( ) ; timer = _NULL ; }
41879	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { Reject . ifFalse ( tokenFilter . getReturnFields ( ) . isEmpty ( ) ) ; handler . processResults ( adapter . query ( tokenFilter ) ) ; }
41899	public void adjustmentValueChanged ( AdjustmentEvent e ) { ( ( AdjustmentListener ) a ) . adjustmentValueChanged ( e ) ; ( ( AdjustmentListener ) b ) . adjustmentValueChanged ( e ) ; }
41903	private void handleActionBaz ( String param1 , String param2 ) { String text = _CHAR Baz : _CHAR + param1 + _CHAR , '' + param2 ; Log . v ( TAG , text ) ; }
41910	public static ResponseSet parseXML ( String xml ) { ResponseSetParser parser = new ResponseSetParser ( xml ) ; return parser . parseXML ( ) ; }
41929	public boolean isAutoIncrement ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . autoIncrement ; }
41932	public Builder removeAllProhibitedAttributes ( ) { this . prohibitedAttributeOIDs . clear ( ) ; return this ; }
41951	public Result modify ( ModifyRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . modify ( request ) ; }
41957	private void invokeInsn ( final int opcode , final Type type , final Method method , final boolean itf ) { String owner = type . getSort ( ) == Type . ARRAY ? type . getDescriptor ( ) : type . getInternalName ( ) ; mv . visitMethodInsn ( opcode , owner , method . getName ( ) , method . getDescriptor ( ) , itf ) ; }
41961	public void callPredicateVisitors ( XPathVisitor visitor ) { m_expr . callVisitors ( new filterExprOwner ( ) , visitor ) ; super . callPredicateVisitors ( visitor ) ; }
41962	private int monthLength ( int month ) { assert jdate . isNormalized ( ) ; return jdate . isLeapYear ( ) ? GregorianCalendar . LEAP_MONTH_LENGTH [ month ] : GregorianCalendar . MONTH_LENGTH [ month ] ; }
41979	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
41984	protected void uninstallListeners ( ) { desktop . removePropertyChangeListener ( pcl ) ; pcl = _NULL ; }
41986	void signedSubtract ( SignedMutableBigInteger addend ) { if ( sign == addend . sign ) sign = sign * subtract ( addend ) ; else add ( addend ) ; }
41994	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
42007	public ByteArrayBuilder appendCSN ( CSN csn ) { csn . toByteString ( builder ) ; return this ; }
42015	public void clear ( ) { methods . clear ( ) ; argLists . clear ( ) ; }
42019	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; configFilePath = DirectoryServer . getInstanceRoot ( ) + File . separator + _CHAR config _CHAR + File . separator + _CHAR config . ldif _CHAR ; }
42021	public String toString ( ) { StringBuilder toString = new StringBuilder ( ) . append ( _CHAR Thread Name : _CHAR ) . append ( thread . getName ( ) ) . append ( _CHAR , Alive : _CHAR ) . append ( thread . isAlive ( ) ) ; return toString . toString ( ) ; }
42045	public T exception ( Exception exception ) { jsonValue . put ( EXCEPTION , exception ) ; return self ( ) ; }
42048	public static String makeRelatedSessionID ( String encryptedID , SessionID prototype ) throws SessionException { prototype . parseSessionString ( ) ; return makeSessionID ( encryptedID , prototype . getExtension ( ) , prototype . tail ) ; }
42060	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK _CHAR + requestEvent . getRequest ( ) ) ; ackReceived = _BOOL ; }
42068	protected void installListeners ( ) { pcl = createPropertyChangeListener ( ) ; desktop . addPropertyChangeListener ( pcl ) ; }
42075	public void println ( String s ) { javaLine ++ ; writer . println ( s ) ; }
42078	public void addObfuscatedArgument ( final Argument argument ) { addArgument ( argument ) ; obfuscatedArgs . add ( argument ) ; }
42080	@ Override public void removeFilterMap ( FilterMap filterMap ) { filterMaps . remove ( filterMap ) ; fireContainerEvent ( _CHAR removeFilterMap _CHAR , filterMap ) ; }
42090	public static String defaultGCCreateDuringOrgConfig ( ) { initialize ( ) ; return ( defaultGCCreateDuringOrgConfig ) ; }
42093	public final void writeBoolean ( boolean val ) throws IOException { out . write ( val ? _NUM : _NUM ) ; written ++ ; }
42112	public static long longForQuery ( SQLiteStatement prog , String [ ] selectionArgs ) { prog . bindAllArgsAsStrings ( selectionArgs ) ; return prog . simpleQueryForLong ( ) ; }
42120	public void paint ( Graphics g , Shape a ) { Rectangle alloc = a . getBounds ( ) ; c . paintIcon ( getContainer ( ) , g , alloc . x , alloc . y ) ; }
42133	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { super . fixupVariables ( vars , globalsSize ) ; if ( _NULL != m_arg2 ) m_arg2 . fixupVariables ( vars , globalsSize ) ; }
42155	protected void invalidate ( boolean first ) { super . invalidate ( first ) ; getParent ( ) . invalidate ( _BOOL ) ; }
42156	private Entry createTestEntry ( AttributeType type , String value ) { String [ ] values = new String [ ] { value } ; return createTestEntry ( type , values ) ; }
42159	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiSplitPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiSplitPaneUI ) mui ) . uis , a ) ; }
42160	public Builder withEventTopicsMetaData ( EventTopicsMetaData eventTopicsMetaData ) { this . eventTopicsMetaData = eventTopicsMetaData ; return this ; }
42161	public void clearRecords ( ) { this . records . clear ( ) ; fireTableDataChanged ( ) ; }
42162	@ Override public int compareTo ( RuleNet p_other ) { if ( p_other == _NULL ) return _NUM ; return name . compareToIgnoreCase ( p_other . name ) ; }
42171	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
42189	private void readObject ( ObjectInputStream p_stream ) throws IOException , ClassNotFoundException { p_stream . defaultReadObject ( ) ; settings_read_only = _BOOL ; }
42192	public boolean boolValue ( ) { if ( type == BOOLEAN ) return boolValue ; else return longValue != _NUM ; }
42214	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiFileChooserUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiFileChooserUI ) mui ) . uis , a ) ; }
42218	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
42223	private void writePendingText ( ) throws SAXException { int len = textBuf . length ( ) ; if ( len != _NUM ) writer . characters ( textBuf . toString ( ) . toCharArray ( ) , _NUM , len ) ; }
42225	public synchronized NSObject anyObject ( ) { if ( set . isEmpty ( ) ) return _NULL ; else return set . iterator ( ) . next ( ) ; }
42238	public AuthenticationEnforcer exceptActions ( String ... actions ) { exceptActions . addAll ( Arrays . asList ( actions ) ) ; return this ; }
42253	public AccountService retrieveAccount ( String id , Handler < AsyncResult < Account >> resultHandler ) { delegate . retrieveAccount ( id , resultHandler ) ; return this ; }
42259	public void addOrReplace ( E element ) { remove ( element ) ; add ( element ) ; }
42274	public void handleButton2Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToPolicyViewBean ( ) ; }
42278	public String str ( ) { String str = m_DTMXRTreeFrag . getDTM ( ) . getStringValue ( m_dtmRoot ) . toString ( ) ; return ( _NULL == str ) ? _CHAR _CHAR : str ; }
42285	@ Override protected int sizeOf ( String key , BitmapDrawable value ) { final int bitmapSize = getBitmapSize ( value ) / _NUM ; return bitmapSize == _NUM ? _NUM : bitmapSize ; }
42297	public PdfCanvas closePathStroke ( ) { contentStream . getOutputStream ( ) . writeBytes ( s ) ; return this ; }
42318	public static String printFloat ( float val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printFloat ( val ) ; }
42331	public void cancelAllAnimations ( ) { removeCallbacks ( mWrapCropBoundsRunnable ) ; removeCallbacks ( mZoomImageToPositionRunnable ) ; }
42357	public AttributeFilter typesOnly ( final boolean typesOnly ) { this . typesOnly = typesOnly ; return this ; }
42361	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
42372	@ Override public Object clone ( ) { RuleBasedCollator clone = ( RuleBasedCollator ) super . clone ( ) ; return clone ; }
42388	public static GeneralizedTime valueOf ( final long timeMS ) { Reject . ifTrue ( timeMS < MIN_GENERALIZED_TIME_MS , _CHAR timeMS is too old to represent as a generalized time _CHAR ) ; return new GeneralizedTime ( _NULL , _NULL , timeMS , _NULL ) ; }
42389	public Builder superiorObjectClasses ( final String ... objectClassNamesOrOIDs ) { this . superiorClasses . addAll ( asList ( objectClassNamesOrOIDs ) ) ; return this ; }
42400	private int min ( int a , int b ) { if ( a < b ) return a ; return b ; }
42409	private void modifyAttribute ( String baseDN , ModificationType modType , String attrName , String attrValue ) throws Exception { ModifyOperation modifyOperation = getModifyOperation ( baseDN , modType , attrName , attrValue ) ; assertEquals ( modifyOperation . getResultCode ( ) , ResultCode . SUCCESS ) ; }
42410	public boolean offerFirst ( E e ) { addFirst ( e ) ; return _BOOL ; }
42430	private void addEntry ( Entry entry ) throws Exception { connection . processAdd ( entry ) ; assertNotNull ( getEntry ( entry . getName ( ) , _NUM , _BOOL ) ) ; }
42436	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiPanelUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiPanelUI ) mui ) . uis , a ) ; }
42478	public void removeUsers ( Set users ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; dsServices . modifyMemberShip ( super . token , users , super . entryDN , ROLE , REMOVE_MEMBER ) ; }
42479	public static String installHook ( String s ) { DatatypeConverter . setDatatypeConverter ( theInstance ) ; return s ; }
42480	public Templater androidSdkVersion ( String androidSdkVersion ) { this . androidSdkVersion = androidSdkVersion ; return this ; }
42483	public SAML2ConfigBuilder signatureKeyAlias ( String signatureKeyAlias ) { this . signatureKeyAlias = signatureKeyAlias ; return this ; }
42484	public SearchResults searchIDs ( java . security . Principal principal , Guid guid , int scope , String searchFilter , SearchControl searchControl ) throws InvalidSearchFilterException , UMSException { String attrNames [ ] = { _CHAR objectclass _CHAR } ; return search ( principal , guid , scope , searchFilter , attrNames , _BOOL , searchControl ) ; }
42486	public synchronized BukkitTask runTaskTimerAsynchronously ( Plugin plugin , long delay , long period ) throws IllegalArgumentException , IllegalStateException { checkState ( ) ; return setupId ( Bukkit . getScheduler ( ) . runTaskTimerAsynchronously ( plugin , ( Runnable ) this , delay , period ) ) ; }
42490	public static String printShort ( short val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printShort ( val ) ; }
42491	@ Override public void handleRequest ( RequestContext rc ) throws CLIException { super . handleRequest ( rc ) ; ldapLogin ( ) ; }
42500	public boolean isLeaf ( Object node ) { if ( asksAllowsChildren ) return ! ( ( TreeNode ) node ) . getAllowsChildren ( ) ; return ( ( TreeNode ) node ) . isLeaf ( ) ; }
42508	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
42521	public static AddRequest newAddRequest ( final DN name ) { final Entry entry = new LinkedHashMapEntry ( ) . setName ( name ) ; return new AddRequestImpl ( entry ) ; }
42526	private void delEntry ( DN dn ) throws Exception { connection . processDelete ( dn ) ; assertNull ( getEntry ( dn , _NUM , _BOOL ) ) ; }
42528	private void badIndex ( int index ) throws ArrayIndexOutOfBoundsException { String msg = _CHAR Attempt to modify attribute at illegal index : _CHAR + index ; throw new ArrayIndexOutOfBoundsException ( msg ) ; }
42530	private void userCredentialsAdd ( DirContext context , String dn , String credentials ) throws NamingException { context . addToEnvironment ( Context . SECURITY_PRINCIPAL , dn ) ; context . addToEnvironment ( Context . SECURITY_CREDENTIALS , credentials ) ; }
42531	public void update ( Client client , OAuth2Request request ) throws InvalidClientMetadata , UnauthorizedClientException { delete ( client . getClientID ( ) , request ) ; create ( client , request ) ; }
42535	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { bSearchForRealm = _BOOL ; forwardTo ( ) ; }
42546	public Style addStyle ( String nm , Style parent ) { StyledDocument doc = getStyledDocument ( ) ; return doc . addStyle ( nm , parent ) ; }
42568	public void destroyModuleState ( ) { userPrincipal = _NULL ; userTokenId = _NULL ; }
42574	public ImmutableList < A > toList ( ) { shared = _BOOL ; return elements ; }
42595	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR SAVED_TOP_STORY \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
42603	public void suspendEncoding ( ) throws java . io . IOException { flushBase64 ( ) ; this . suspendEncoding = _BOOL ; }
42614	public void add ( N node ) { if ( theNeighbors . containsKey ( node ) ) return ; theNeighbors . put ( node , new ArraySet < N > ( ) ) ; }
42620	public final String toString ( ) { int length = ( m_lastChunk << m_chunkBits ) + m_firstFree ; return getString ( new StringBuffer ( length ) , _NUM , _NUM , length ) . toString ( ) ; }
42622	public void pushRTFContext ( ) { m_last_pushed_rtfdtm . push ( m_which_rtfdtm ) ; if ( _NULL != m_rtfdtm_stack ) ( ( SAX2RTFDTM ) ( getRTFDTM ( ) ) ) . pushRewindMark ( ) ; }
42630	public String endTblDataActionDefaultHrefDisplay ( ChildContentDisplayEvent event ) { String lbl = ( String ) tblModel . getValue ( TBL_DATA_ACTION_DEFAULT_LABEL ) ; return ( ( lbl != _NULL ) && ( lbl . length ( ) > _NUM ) ) ? event . getContent ( ) : _CHAR _CHAR ; }
42632	@ Override public List < IndexCreatedEvent > readAll ( ) { BoundStatement bs = new BoundStatement ( readAllStmt ) ; return ( marshalAll ( getSession ( ) . execute ( bs ) ) ) ; }
42635	public SAML2ConfigBuilder tokenLifetimeInSeconds ( long lifetimeInSeconds ) { this . tokenLifetimeInSeconds = lifetimeInSeconds ; return this ; }
42651	private static boolean jwtHasAudienceClaim ( JwtClaimsSet jwtClaims ) throws AuthLoginException { List < String > audienceClaim = jwtClaims . getAudience ( ) ; return ( audienceClaim != _NULL && ! audienceClaim . isEmpty ( ) ) ; }
42653	public synchronized BukkitTask runTaskLater ( Plugin plugin , long delay ) throws IllegalArgumentException , IllegalStateException { checkState ( ) ; return setupId ( Bukkit . getScheduler ( ) . runTaskLater ( plugin , ( Runnable ) this , delay ) ) ; }
42657	@ SuppressWarnings ( _CHAR unused _CHAR ) public void refresh ( ) { this . mPathMeasure . setPath ( this . mPath , _BOOL ) ; this . mPathLength = this . mPathMeasure . getLength ( ) ; }
42666	public < T extends IElement > Cell add ( BlockElement < T > element ) { childElements . add ( element ) ; return this ; }
42680	@ Override public void addChild ( Container child ) { if ( ! ( child instanceof Host ) ) throw new IllegalArgumentException ( sm . getString ( _CHAR standardEngine . notHost _CHAR ) ) ; super . addChild ( child ) ; }
42681	public JobService existsJob ( long id , Handler < AsyncResult < Boolean >> handler ) { delegate . existsJob ( id , handler ) ; return this ; }
42691	public static boolean isServerInstanceExist ( SSOToken ssoToken , String instanceName ) throws SMSException , SSOException { Set servers = getServers ( ssoToken ) ; return servers . contains ( instanceName ) ; }
42741	public int countAllTokens ( ) throws CoreTokenException { TokenFilter filter = new TokenFilterBuilder ( ) . returnAttribute ( CoreTokenField . TOKEN_ID ) . build ( ) ; return store . attributeQuery ( filter ) . size ( ) ; }
42743	public static String printTime ( java . util . Calendar val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printTime ( val ) ; }
42744	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
42765	public NewEncryptedID encrypt ( Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID ) throws SAML2Exception { Element el = EncManager . getEncInstance ( ) . encrypt ( toXMLString ( _BOOL , _BOOL ) , recipientPublicKey , dataEncAlgorithm , dataEncStrength , recipientEntityID , _CHAR NewEncryptedID _CHAR ) ; return ProtocolFactory . getInstance ( ) . createNewEncryptedID ( el ) ; }
42771	public JsonValue query ( QueryFilter < CoreTokenField > query ) throws CoreTokenException { Collection < Token > tokens = cts . query ( new TokenFilterBuilder ( ) . withQuery ( query ) . build ( ) ) ; return convertResults ( tokens ) ; }
42777	public void saveAuthenticatedPrincipal ( String principalName ) { authenticatedPrincipals . add ( principalName ) ; requestMap . put ( ISAuthConstants . AUTHENTICATED_PRINCIPALS , StringUtils . join ( authenticatedPrincipals , _CHAR | _CHAR ) ) ; }
42782	protected HttpURLConnection createConnection ( String uri ) throws IOException { URL url = new URL ( createUri ( uri ) ) ; return ( HttpURLConnection ) url . openConnection ( ) ; }
42791	public static boolean isValidCodePoint ( int codePoint ) { int plane = codePoint >> > _NUM ; return plane < ( ( MAX_CODE_POINT + _NUM ) >> > _NUM ) ; }
42795	public void processingInstruction ( String target , String data ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . processingInstruction ( target , data ) ; }
42799	public static boolean isHexDigit ( final char c ) { final ASCIICharProp cp = ASCIICharProp . valueOf ( c ) ; return cp != _NULL ? cp . isHexDigit ( ) : _BOOL ; }
42804	public boolean isStrikeThrough ( ) { sync ( ) ; return strike ; }
42838	public boolean hasKey ( ) throws SdpParseException { String key = getKeyData ( ) ; return key != _NULL ; }
42846	public void mouseWheelMoved ( MouseWheelEvent e ) { ( ( MouseWheelListener ) a ) . mouseWheelMoved ( e ) ; ( ( MouseWheelListener ) b ) . mouseWheelMoved ( e ) ; }
42852	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR GREEN_NEWS \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
42861	public static String [ ] chars ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . split ( _CHAR _CHAR ) ; }
42871	@ RequestMapping ( value = _CHAR / user / add _CHAR , method = RequestMethod . POST , produces = MediaTypes . JSON_UTF_8 ) public User addUser ( @ PostParam User user ) { user . setDesc ( _CHAR Blog : http : // www . bysocket . com https : // github . com / JeffLi1993 '' ) ; return user ; }
42898	public MethodHandle findStaticGetter ( Class < ? > refc , String name , Class < ? > type ) throws NoSuchFieldException , IllegalAccessException { MemberName field = resolveOrFail ( REF_getStatic , refc , name , type ) ; return getDirectField ( REF_getStatic , refc , field ) ; }
42902	public Set canBeMemberOf ( ) { Set results = ( Set ) IdUtils . typesCanBeMemberOf . get ( getName ( ) ) ; return ( results == _NULL ) ? Collections . EMPTY_SET : results ; }
42908	public void remove ( ) { Log . w ( TAG , _CHAR Removing _CHAR + DATABASE_NAME ) ; IOUtil . remove ( databaseDir ( ) + DATABASE_NAME ) ; }
42912	public void deleteFavorite ( ) { FmRadioStation . updateStationToDb ( mContext , mDlgStationName , FmRadioStation . STATION_TYPE_SEARCHED , mDlgStationFreq ) ; mAdapter . notifyDataSetChanged ( ) ; }
42920	public WorldCreator type ( WorldType type ) { this . type = type ; return this ; }
42921	public ParameterBlock addSource ( Object source ) { sources . addElement ( source ) ; return this ; }
42956	public Builder removeAllRequiredAttributes ( ) { this . requiredAttributes . clear ( ) ; return this ; }
42959	public void addReply ( String topicId , String body , String access_token , Callback < ResponseBody > callback ) { topicApi = getRetrofitForSimpleJson ( ) . create ( TopicApi . class ) ; topicApi . addReply ( topicId , body , access_token ) . enqueue ( callback ) ; }
42962	@ Override public Object deepclone ( ) { byte [ ] d = this . getDataPackage ( ) ; return ChannelData . getDataFromPackage ( d ) ; }
42966	public net . aimeizi . person . QueryParameter . Builder clearAgeEnd ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
42968	@ Override public void release ( ) { bodyContent = _NULL ; super . release ( ) ; }
43002	public ProductService initializePersistence ( Handler < AsyncResult < Void >> resultHandler ) { delegate . initializePersistence ( resultHandler ) ; return this ; }
43006	private String retrieveFullID ( String resourceID , JsonValue value ) { String id = value . get ( _CHAR _id _CHAR ) . required ( ) . asString ( ) ; return retrieveFullID ( resourceID , id ) ; }
43012	public static String defaultPolicyAdminRoleCreateDuringOrgConfig ( ) { initialize ( ) ; return ( defaultPOLICY_ADMIN ) ; }
43015	private Long convertIntToLong ( int quoteParam ) { Long quoteParamLong = new Long ( convertIntToIntString ( quoteParam ) ) ; return quoteParamLong ; }
43034	public Builder withAttributes ( Map < String , Set < String >> configAttributes ) { this . configAttributes = configAttributes ; return this ; }
43040	public UpdateLogEntry addFile ( JsonValue file ) { files . add ( file ) ; return this ; }
43045	public void init ( String [ ] arguments ) throws Exception { init ( ) ; load ( arguments ) ; }
43052	public Builder removeOptionalAttribute ( String attributeNameOrOID ) { this . optionalAttributeOIDs . remove ( attributeNameOrOID ) ; return this ; }
43059	public void clearMarkers ( ) { mGoogleMap . clear ( ) ; markers . clear ( ) ; }
43069	public < O extends UCrop . Options > BuilderImages < T > crop ( O options ) { this . config . setCrop ( options ) ; return this ; }
43079	private void add ( String key , String value ) { addModel ( key , value ) ; getContext ( ) . setSessionAttribute ( key , value ) ; }
43090	private void cacheStyle ( List styles , SynthStyle style ) { BakedArrayList cachedStyles = new BakedArrayList ( styles ) ; _resolvedStyles . put ( cachedStyles , style ) ; }
43091	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR GREEN_UPDATE \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR UPDATELISTJSON \ _CHAR TEXT ) ; _CHAR ) ; }
43092	public Entity defEntity ( String name , int type , int ch ) { char data [ ] = { ( char ) ch } ; return defineEntity ( name , type , data ) ; }
43093	@ Override public void putAll ( Map < ? extends K , ? extends V > map ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR parameterMap . locked _CHAR ) ) ; super . putAll ( map ) ; }
43101	public Builder usage ( AttributeUsage attributeUsage ) { this . attributeUsage = attributeUsage ; return this ; }
43112	public int size ( ) { int len = getArrayLength ( ) - ( getGapEnd ( ) - getGapStart ( ) ) ; return len ; }
43116	public RxGalleryFinal cropOvalDimmedLayer ( boolean isOval ) { configuration . setOvalDimmedLayer ( isOval ) ; return this ; }
43118	public synchronized void clearMemoryBackend ( ) { entryMap . clear ( ) ; childDNs . clear ( ) ; }
43122	public PdfImageXObject put ( PdfName key , PdfObject value ) { getPdfObject ( ) . put ( key , value ) ; return this ; }
43128	private void unRegisterToken ( InstanceID instanceID , String senderId ) throws IOException { instanceID . deleteToken ( senderId , GoogleCloudMessaging . INSTANCE_ID_SCOPE ) ; GcmHelper . getInstance ( ) . onTokenDeleted ( getApplicationContext ( ) ) ; }
43140	@ Override public void execute ( ) throws BuildException { super . execute ( ) ; execute ( createQueryString ( _CHAR / stop _CHAR ) . toString ( ) ) ; }
43159	private final boolean parkAndCheckInterrupt ( ) { LockSupport . park ( this ) ; return Thread . interrupted ( ) ; }
43169	public void initializeConfiguration ( String configFile ) throws InitializationException { environmentConfig . setConfigFile ( new File ( configFile ) ) ; initializeConfiguration ( ) ; }
43178	public static VbriFrame parseVBRIFrame ( ByteBuffer header ) throws InvalidAudioFrameException { VbriFrame VBRIFrame = new VbriFrame ( header ) ; return VBRIFrame ; }
43180	public void decrementMaxForwards ( ) throws TooManyHopsException { if ( maxForwards > _NUM ) maxForwards -- ; else throw new TooManyHopsException ( _CHAR has already reached _NUM ! _CHAR ) ; }
43187	private void indentAndWrap ( StringBuilder buffer , String indent , LocalizableMessage text ) { int actualSize = MAX_LINE_WIDTH - indent . length ( ) - COLUMN_ADJUST ; indentAndWrap ( indent , buffer , actualSize , text ) ; }
43194	public boolean hasNext ( ) { scan ( ) ; return currentBlock != - _NUM ; }
43203	public static PasswordPolicyResponseControl newControl ( final PasswordPolicyErrorType errorType ) { Reject . ifNull ( errorType ) ; return new PasswordPolicyResponseControl ( _BOOL , _NULL , - _NUM , errorType ) ; }
43223	public Object object ( ) { if ( _NULL == m_obj ) setObject ( new Boolean ( m_val ) ) ; return m_obj ; }
43252	public void paint ( Graphics g , Shape a ) { load ( ) ; super . paint ( g , a ) ; }
43262	static boolean shouldUpdateStyle ( PropertyChangeEvent event ) { LookAndFeel laf = UIManager . getLookAndFeel ( ) ; return ( laf instanceof SynthLookAndFeel && ( ( SynthLookAndFeel ) laf ) . shouldUpdateStyleOnEvent ( event ) ) ; }
43269	public static int dpToPx ( float dp , Resources resources ) { float px = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_DIP , dp , resources . getDisplayMetrics ( ) ) ; return ( int ) px ; }
43278	static String encodeStub ( RMIServer rmiServer , Map < String , ? > env ) throws IOException { if ( IIOPHelper . isStub ( rmiServer ) ) return _CHAR / ior / _CHAR + encodeIIOPStub ( rmiServer , env ) ; else return _CHAR / stub / _CHAR + encodeJRMPStub ( rmiServer , env ) ; }
43289	public void insertUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { super . insertUpdate ( changes , adjustAllocation ( a ) , f ) ; updateVisibilityModel ( ) ; }
43300	public void cancelEditing ( ) { TreeUI tree = getUI ( ) ; if ( tree != _NULL ) tree . cancelEditing ( this ) ; }
43302	@ Override public Principal authenticate ( String username , String credentials ) { Principal authenticatedUser = super . authenticate ( username , credentials ) ; return filterLockedAccounts ( username , authenticatedUser ) ; }
43313	final Node succ ( Node p ) { Node next = p . next ; return ( p == next ) ? head : next ; }
43327	public void registerEngineName ( String name , ScriptEngineFactory factory ) { if ( name == _NULL || factory == _NULL ) throw new NullPointerException ( ) ; nameAssociations . put ( name , factory ) ; }
43340	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
43344	public final void popQuick ( ) { m_firstFree -- ; m_map [ m_firstFree ] = _NULL ; }
43348	public SampleModel createCompatibleSampleModel ( int w , int h ) { SampleModel sampleModel = new MultiPixelPackedSampleModel ( dataType , w , h , pixelBitStride ) ; return sampleModel ; }
43349	public final boolean popAndTop ( ) { m_index -- ; return ( m_index >= _NUM ) ? m_values [ m_index ] : _BOOL ; }
43359	public Builder collective ( boolean isCollective ) { this . isCollective = isCollective ; return this ; }
43360	protected JButton createIncreaseButton ( int orientation ) { increaseButton = new MetalScrollButton ( orientation , scrollBarWidth , isFreeStanding ) ; return increaseButton ; }
43362	public static boolean isConfigMigratedTo70 ( ) { isRealmEnabled ( ) ; return ( ditUpgradedCache ) ; }
43366	public void startPrefixMapping ( String prefix , String uri ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . startPrefixMapping ( prefix , uri ) ; }
43367	public boolean mayUseGraceLogin ( ) { refreshIfUndefined ( mayUseGraceLogin ) ; return mayUseGraceLogin == ConditionResult . TRUE ; }
43392	public PdfCanvas moveText ( double x , double y ) { contentStream . getOutputStream ( ) . writeDouble ( x ) . writeSpace ( ) . writeDouble ( y ) . writeSpace ( ) . writeBytes ( Td ) ; return this ; }
43395	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
43403	public void componentRemoved ( ContainerEvent e ) { ( ( ContainerListener ) a ) . componentRemoved ( e ) ; ( ( ContainerListener ) b ) . componentRemoved ( e ) ; }
43408	private static void writeUntouchedImage ( final File sourceFile , final File destFile ) throws IOException { FileInputStream fileIS = new FileInputStream ( sourceFile ) ; writeUntouchedImage ( fileIS , destFile ) ; }
43418	private void flushCharacters ( ) throws org . xml . sax . SAXException { XSLTElementProcessor elemProcessor = getCurrentProcessor ( ) ; if ( _NULL != elemProcessor ) elemProcessor . startNonText ( this ) ; }
43424	public static void convertToBinary ( File in , File out ) throws IOException , ParserConfigurationException , ParseException , SAXException , PropertyListFormatException { NSObject root = parse ( in ) ; saveAsBinary ( root , out ) ; }
43425	public void popCurrentMatched ( ) { m_currentMatchTemplates . pop ( ) ; m_currentMatchedNodes . pop ( ) ; }
43431	public TokenFilterBuilder withSizeLimit ( int sizeLimit ) { tokenFilter . setSizeLimit ( sizeLimit ) ; return this ; }
43442	public boolean isTypeSubstituted ( ) { if ( value == _NULL ) return _BOOL ; return value . getClass ( ) != declaredType ; }
43446	public MaterialBarcodeScannerBuilder withBackfacingCamera ( ) { mFacing = CameraSource . CAMERA_FACING_BACK ; return this ; }
43449	public final long readLong ( ) throws IOException { readFully ( scratch , _NUM , SizeOf . LONG ) ; return Memory . peekLong ( scratch , _NUM , ByteOrder . BIG_ENDIAN ) ; }
43456	@ Hidden static Object invoke__L ( MethodHandle mh , Object [ ] a ) throws Throwable { assert ( arityCheck ( _NUM , mh , a ) ) ; return mh . invokeBasic ( ) ; }
43459	public void hierarchyChanged ( HierarchyEvent e ) { ( ( HierarchyListener ) a ) . hierarchyChanged ( e ) ; ( ( HierarchyListener ) b ) . hierarchyChanged ( e ) ; }
43510	public void remove ( RxAction action ) { Pair < Integer , Subscription > old = mMap . remove ( action . getType ( ) ) ; if ( old != _NULL && ! old . second . isUnsubscribed ( ) ) old . second . unsubscribe ( ) ; }
43514	public boolean isDefinitelyWritable ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return _BOOL ; }
43519	public String addImport ( String namespace ) { imports . add ( namespace ) ; return _CHAR _CHAR ; }
43526	private static String unqualify ( String path ) { path = path . replace ( _CHAR , _CHAR ) ; return path . substring ( path . lastIndexOf ( _CHAR ) + _NUM ) ; }
43529	private static void writeDelete ( LDIFWriter writer , Entry entry ) throws IOException { writer . writeDeleteChangeRecord ( entry , _BOOL ) ; writer . flush ( ) ; }
43530	public boolean beginResetPageDisplay ( ChildDisplayEvent event ) { PWResetUserValidationModel model = ( PWResetUserValidationModel ) getModel ( ) ; return isPWResetEnabled ( ) && model . isValidRealm ( ) ; }
43535	public void clear ( ) throws ChangelogException { log . clear ( ) ; newestChangeNumber = NO_KEY ; }
43545	private static void logOptionValues ( final CommandLine cli ) { final List < String > optionsString = Arrays . stream ( cli . getOptions ( ) ) . filter ( _NULL ) . filter ( _NULL ) . map ( _NULL ) . collect ( Collectors . toList ( ) ) ; CommandLineInterface . LOGGER . debug ( _CHAR Processing command line : { } . _CHAR , optionsString ) ; }
43546	private boolean journalRebuildRequired ( ) { final int redundantOpCompactThreshold = _NUM ; return redundantOpCount >= redundantOpCompactThreshold && redundantOpCount >= lruEntries . size ( ) ; }
43547	public static java . util . Calendar parseTime ( String lexicalXSDTime ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseTime ( lexicalXSDTime ) ; }
43549	public void installUI ( JComponent c ) { super . installUI ( c ) ; MetalToolBarUI . register ( c ) ; }
43559	@ Deactivate void deactivate ( ComponentContext compContext ) { logger . debug ( _CHAR Deactivating Service { } _CHAR , compContext ) ; logger . info ( _CHAR Repository stopped . '' ) ; }
43578	protected void callSubtreeVisitors ( XPathVisitor visitor ) { m_functionExpr . callVisitors ( new FunctionOwner ( ) , visitor ) ; super . callSubtreeVisitors ( visitor ) ; }
43592	private void enableSSL ( ConnectionSecurityProvider sslProvider ) { tlsActiveProvider = sslProvider ; tlsChannel . redirect ( sslProvider ) ; }
43598	public void addNotify ( ) { super . addNotify ( ) ; KeyboardManager . getCurrentManager ( ) . registerMenuBar ( this ) ; }
43608	public void disallow ( final Result result , final String message ) { this . result = result ; this . message = message ; }
43610	public void error ( String msg ) { System . out . println ( _CHAR DOM ERROR ! class : _CHAR + this . getClass ( ) . getName ( ) ) ; throw new RuntimeException ( XMLMessages . createXMLMessage ( msg , _NULL ) ) ; }
43635	private static String digits ( long val , int digits ) { long hi = _NUM << ( digits * _NUM ) ; return Long . toHexString ( hi | ( val & ( hi - _NUM ) ) ) . substring ( _NUM ) ; }
43641	protected void forwardUpdateToView ( View v , DocumentEvent e , Shape a , ViewFactory f ) { v . setParent ( this ) ; super . forwardUpdateToView ( v , e , a , f ) ; }
43650	@ Fluent public Job onRemove ( Handler < JsonObject > removeHandler ) { this . on ( _CHAR start _CHAR , _NULL ) ; return this ; }
43651	@ Override public TagResult generateValue ( TemplateEntry templateEntry , TemplateValue templateValue ) { templateValue . append ( templateFile . getLastName ( ) ) ; return TagResult . SUCCESS_RESULT ; }
43664	public boolean isFirstWarning ( ) { refreshIfUndefined ( isFirstWarning ) ; return isFirstWarning == ConditionResult . TRUE ; }
43672	public String toXMLString ( ) throws FSMsgException { String xml = this . toXMLString ( _BOOL , _BOOL ) ; return xml ; }
43700	public int compareTo ( LibPadstack p_other ) { if ( p_other == _NULL ) return _NUM ; return pads_name . compareToIgnoreCase ( p_other . pads_name ) ; }
43704	public void clear ( ) { valueToName . clear ( ) ; nameToCount . clear ( ) ; }
43743	private void highLightMarker ( Marker marker ) { marker . setIcon ( BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory . HUE_AZURE ) ) ; this . selectedMarker = marker ; }
43747	public RequirementsBuilder addRequireProperty ( String name , String description ) { addRequireProperty ( name , _CHAR string _CHAR , description ) ; return this ; }
43778	@ Override protected void dispatchDraw ( Canvas canvas ) { canvas . clipRect ( mBackgroundPadding . left , mBackgroundPadding . top , getWidth ( ) - mBackgroundPadding . right , getHeight ( ) - mBackgroundPadding . bottom ) ; super . dispatchDraw ( canvas ) ; }
43804	public int left_x_value ( int p_y ) { int result = Math . max ( oct_lx , oct_ulx + p_y ) ; return Math . max ( result , oct_llx - p_y ) ; }
43821	public static < T > Callable < T > privilegedCallableUsingCurrentClassLoader ( Callable < T > callable ) { if ( callable == _NULL ) throw new NullPointerException ( ) ; return new PrivilegedCallableUsingCurrentClassLoader < T > ( callable ) ; }
43839	public boolean start_read ( InputStream p_input_stream ) { scanner = new LogfileScanner ( p_input_stream ) ; return ( scanner != _NULL ) ; }
43841	public AppLauncher launchOnLockedRetries ( int launchOnLockedRetries ) { this . launchOnLockedRetries = launchOnLockedRetries ; return this ; }
43846	public static TransactionIdControl newControl ( final String transactionId ) { Reject . ifNull ( transactionId ) ; return new TransactionIdControl ( transactionId ) ; }
43896	public void dragDropEnd ( DragSourceDropEvent dsde ) { ( ( DragSourceListener ) a ) . dragDropEnd ( dsde ) ; ( ( DragSourceListener ) b ) . dragDropEnd ( dsde ) ; }
43916	@ Override public void destroyModuleState ( ) { userId = _NULL ; userName = _NULL ; }
43931	public Builder removeName ( final String name ) { names . remove ( name ) ; return this ; }
43941	@ Override public void execute ( ) throws BuildException { super . execute ( ) ; execute ( _CHAR / serverinfo _CHAR ) ; }
43958	@ Override public void displayMessage ( LocalizableMessage msg ) { noEntryPanel . setMessage ( msg ) ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , noEntryPanelTitle ) ; }
43959	public Set < BrdItem > overlapping_items_with_clearance ( ShapeTile p_shape , int p_layer , NetNosList p_ignore_net_nos , int p_clearance_class ) { AwtreeShapeSearch default_tree = search_tree_manager . get_default_tree ( ) ; return default_tree . find_overlap_items_with_clearance ( p_shape , p_layer , p_ignore_net_nos , p_clearance_class ) ; }
43969	public void delete ( Index index ) { logger . debug ( _CHAR Deleting index : _CHAR + index . toString ( ) ) ; indexesRepo . delete ( index ) ; }
43972	public PdfCanvas newPath ( ) { contentStream . getOutputStream ( ) . writeBytes ( n ) ; return this ; }
44027	private static int mix32 ( long z ) { z = ( z ^ ( z >> > _NUM ) ) * _NUM ; return ( int ) ( ( ( z ^ ( z >> > _NUM ) ) * _NUM ) >> > _NUM ) ; }
44029	public boolean isSuperscript ( ) { sync ( ) ; return superscript ; }
44030	public static void main ( String [ ] args ) { OpenAMUpgrade upgrade = InjectorHolder . getInstance ( OpenAMUpgrade . class ) ; upgrade . execute ( args ) ; }
44033	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
44048	void delete ( ) { shutdown ( ) ; removeECLDomainCfg ( ) ; }
44051	public void finalizeSubentryManager ( ) { DirectoryServer . deregisterInternalPlugin ( this ) ; DirectoryServer . deregisterBackendInitializationListener ( this ) ; }
44070	public boolean isUnderline ( ) { sync ( ) ; return underline ; }
44080	public MaterialBarcodeScannerBuilder withEnableAutoFocus ( boolean enabled ) { mAutoFocusEnabled = enabled ; return this ; }
44084	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
44094	public void disallow ( final Result result , final String message ) { this . result = result ; this . message = message ; }
44115	public V put ( K key , V value ) { if ( value == _NULL ) throw new NullPointerException ( ) ; return doPut ( key , value , _BOOL ) ; }
44120	public void addEditActionListener ( ActionListener listener ) { editButton . addActionListener ( listener ) ; iconButton . addActionListener ( listener ) ; }
44124	public void deleteTag ( int tagId ) { int ifdId = getDefinedTagDefaultIfd ( tagId ) ; deleteTag ( tagId , ifdId ) ; }
44136	public LibPackage add ( LibPackagePin [ ] p_pin_arr ) { String package_name = _CHAR Package # _CHAR + Integer . toString ( pkg_count ( ) + _NUM ) ; return add ( package_name , p_pin_arr , _NULL , new DsnPackageKeepout [ _NUM ] , new DsnPackageKeepout [ _NUM ] , new DsnPackageKeepout [ _NUM ] , _BOOL ) ; }
44138	public XMLString xstr ( ) { if ( _NULL == m_xmlStr ) m_xmlStr = m_DTMXRTreeFrag . getDTM ( ) . getStringValue ( m_dtmRoot ) ; return m_xmlStr ; }
44190	public static byte [ ] decode ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decode ( bytes , _NUM , bytes . length ) ; }
44216	public final boolean containsDescriptor ( final MetadataDescriptor lookup ) { assert lookup != _NULL ; return this . descriptors . containsKey ( this . perfPoint . setDescriptor ( lookup ) ) ; }
44217	public static DeleteRequest newDeleteRequest ( final DN name ) { Reject . ifNull ( name ) ; return new DeleteRequestImpl ( name ) ; }
44224	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR COLLECT_ENTITY \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR HTML_ID \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR COLLECT \ _CHAR TEXT ) ; _CHAR ) ; }
44226	public PChargingFunctionAddressesHeader createPChargingFunctionAddressesHeader ( ) { PChargingFunctionAddresses cfa = new PChargingFunctionAddresses ( ) ; return cfa ; }
44229	public Result delete ( DeleteRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . delete ( request ) ; }
44235	public RESTEndpointBuilder header ( String header , String value ) { headers . put ( header , value ) ; return this ; }
44257	public MapCursor addCursor ( MapCursor cursor ) { cursors . add ( cursor ) ; return cursor ; }
44260	public void error ( String msg , Object [ ] args ) { System . out . println ( _CHAR DOM ERROR ! class : _CHAR + this . getClass ( ) . getName ( ) ) ; throw new RuntimeException ( XMLMessages . createXMLMessage ( msg , args ) ) ; }
44270	public Builder removeOptionalAttribute ( final String nameOrOID ) { this . optionalAttributes . remove ( nameOrOID ) ; return this ; }
44273	public byte readByte ( ) throws SQLException { Byte attrib = ( Byte ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . byteValue ( ) ; }
44275	protected String paramString ( ) { String orientationString = ( orientation == HORIZONTAL ? _CHAR HORIZONTAL _CHAR : _CHAR VERTICAL _CHAR ) ; return super . paramString ( ) + _CHAR , blockIncrement = _CHAR + blockIncrement + _CHAR , orientation = _CHAR + orientationString + _CHAR , unitIncrement = _CHAR + unitIncrement ; }
44279	public boolean canCreateRule ( Policy policy , String realmName ) { getSvcTypeNameToActionsMap ( policy , realmName ) ; return ! requiredResourceNameService . isEmpty ( ) || ! notRequiredResourceNameService . isEmpty ( ) ; }
44289	public JsonObject addLast ( Object value ) { add ( value ) ; return build ( ) ; }
44290	@ Override public void post ( Runnable runnable ) { if ( runnable == _NULL ) return ; TaskProxy . sHandler . post ( runnable ) ; }
44295	public void error ( String msg , Object [ ] args ) throws javax . xml . transform . TransformerException { java . lang . String fmsg = org . apache . xalan . res . XSLMessages . createXPATHMessage ( msg , args ) ; throw new javax . xml . transform . TransformerException ( fmsg ) ; }
44313	public static byte [ ] decodeWebSafe ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decodeWebSafe ( bytes , _NUM , bytes . length ) ; }
44317	public char first ( ) { pos = begin ; return current ( ) ; }
44323	public void error ( SAXParseException spe ) throws SAXParseException { PolicyManager . debug . error ( spe . getMessage ( ) + _CHAR \ nLine Number in XML file : _CHAR + spe . getLineNumber ( ) + _CHAR \ nColumn Number in XML file : _CHAR + spe . getColumnNumber ( ) ) ; throw spe ; }
44326	public ReplicationParameters connectionParamsForDestination ( ConnectionParameters destinationParams ) { this . connParamsForDestination = destinationParams ; return this ; }
44328	private boolean isJwtValid ( SignedJwt jwt , ClientRegistration clientRegistration ) { final SigningHandler signingHandler = signingManager . newHmacSigningHandler ( clientRegistration . getClientSecret ( ) . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ) ; return jwt == _NULL || ! jwt . verify ( signingHandler ) ; }
44331	public Set entrySet ( ) { if ( entrySet == _NULL ) entrySet = new SynchronizedSet ( new EntrySet ( ) , this ) ; return entrySet ; }
44335	public AppLauncher secondsBetweenLaunchOnLockedRetries ( int secondsBetweenLaunchOnLockedRetries ) { this . secondsBetweenLaunchOnLockedRetries = secondsBetweenLaunchOnLockedRetries ; return this ; }
44341	boolean verifyDeveloperPayload ( Purchase p ) { String payload = p . getDeveloperPayload ( ) ; return _BOOL ; }
44360	protected void zoneWasLoaded ( View zone ) { loadedZones . addElement ( zone ) ; unloadOldZones ( ) ; }
44368	public static int combine ( int hashCode , long value ) { int v = ( int ) ( value ^ ( value >> > _NUM ) ) ; return combine ( hashCode , v ) ; }
44398	public boolean match ( String rawdata ) throws MimeTypeParseException { if ( rawdata == _NULL ) return _BOOL ; return match ( new MimeType ( rawdata ) ) ; }
44420	@ Override public boolean isValidToken ( SSOToken token , boolean refresh ) { SSOTokenImpl tokenImpl = ( SSOTokenImpl ) token ; return ( tokenImpl . isValid ( refresh ) ) ; }
44424	public void addRecord ( final JKTableRecord record ) { geteRecords ( ) . add ( record ) ; fireTableRowsInserted ( getRowCount ( ) - _NUM , getRowCount ( ) - _NUM ) ; }
44428	public String [ ] listChildren ( SetRelationDefinition < ? , ? > d ) { validateRelationDefinition ( d ) ; return serverContext . listManagedObjects ( path , d ) ; }
44446	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
44447	public Builder removeAllRequiredAttributes ( ) { this . requiredAttributes . clear ( ) ; return this ; }
44450	public JsonPropertyMapper defaultJsonValue ( final Object defaultValue ) { this . defaultJsonValues = defaultValue != _NULL ? singletonList ( defaultValue ) : emptyList ( ) ; return this ; }
44457	private static String makeKeyFromRecord ( ConnectionRecord rec ) { ConnectionWrapper conn = rec . conn . getConnectionWrapper ( ) ; return ( conn . isLdaps ( ) ? _CHAR LDAPS _CHAR : _CHAR LDAP _CHAR ) + _CHAR : _CHAR + conn . getHostPort ( ) ; }
44458	public QRCallbackBuilder withUriPath ( String path ) { this . path = path ; return this ; }
44459	public boolean isSearchable ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . searchable ; }
44482	@ SuppressWarnings ( _CHAR unused _CHAR ) public static void translatePoint ( PointF point , float offsetX , float offsetY , float angle ) { ScFeature . translatePoint ( point , offsetX , angle ) ; ScFeature . translatePoint ( point , offsetY , angle + _NUM . _NUM ) ; }
44513	public String toString ( ) { BigInteger b = toBigInteger ( _NUM ) ; return b . toString ( ) ; }
44530	boolean isSessionInvalid ( ) { InternalSession session = getReferencedSession ( ) ; return ( session == _NULL || session . getState ( ) == SessionState . INVALID || session . getState ( ) == SessionState . DESTROYED ) ; }
44532	public void dragOver ( DragSourceDragEvent dsde ) { ( ( DragSourceListener ) a ) . dragOver ( dsde ) ; ( ( DragSourceListener ) b ) . dragOver ( dsde ) ; }
44535	@ Override public void flush ( ) throws IOException { super . flush ( ) ; this . branch . flush ( ) ; }
44564	@ Override public EncryptedAssertion encrypt ( Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID ) throws SAML2Exception { Element el = EncManager . getEncInstance ( ) . encrypt ( toXMLString ( _BOOL , _BOOL ) , recipientPublicKey , dataEncAlgorithm , dataEncStrength , recipientEntityID , _CHAR EncryptedAssertion _CHAR ) ; return AssertionFactory . getInstance ( ) . createEncryptedAssertion ( el ) ; }
44567	public void init ( Instrumentation inst , QueryReporter queryReporter , ConnectorConfiguration configuration ) { executeStatementWrapper = new ExecuteStatementWrapper ( queryReporter , configuration ) ; setIntercepters ( inst ) ; }
44569	public void addUrlLink ( String value ) { TextEncodedStringSizeTerminated text = ( TextEncodedStringSizeTerminated ) getObject ( DataTypes . OBJ_URLLINK ) ; text . addValue ( value ) ; }
44573	public Builder removeAuxiliaryObjectClass ( String objectClassNameOrOID ) { this . auxiliaryClassOIDs . remove ( objectClassNameOrOID ) ; return this ; }
44579	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; return _NULL ; }
44581	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
44597	public static Object convertInputStreamToJAXB ( InputStream is ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( is ) ) ) ; }
44604	public StaticResponseHandler addHeader ( final String key , final Expression < String > expression ) { headers . add ( key , expression ) ; return this ; }
44617	private void start ( ) { if ( host . getLogger ( ) . isDebugEnabled ( ) ) host . getLogger ( ) . debug ( sm . getString ( _CHAR userConfig . start _CHAR ) ) ; deploy ( ) ; }
44638	protected void childJustRemovedHook ( Object child , BCSChild bcsc ) { BCSSChild bcssc = ( BCSSChild ) bcsc ; bcssc . cleanupReferences ( ) ; }
44641	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { XNumber xnum = new XNumber ( ( double ) getCountOfContextNodeList ( xctxt ) ) ; return xnum ; }
44644	@ Override public String toString ( ) { String condition = acceptOlder ? _CHAR <= _CHAR : _CHAR > _CHAR ; return super . toString ( ) + _CHAR ( _CHAR + condition + cutoff + _CHAR ) _CHAR ; }
44696	public void write ( byte [ ] buf , int off , int len ) throws IOException { output . write ( buf , off , len ) ; bytesWritten += len ; }
44708	public static void error ( CommandManager mgr , String msg ) { dumpToOutput ( mgr , msg , _NULL ) ; mgr . getDebugger ( ) . error ( msg ) ; }
44727	public static Object eval ( ClassLoader loader , String e ) throws Exception { Evaluator evaluator = new Evaluator ( new ClassPathLoader ( loader ) ) ; return evaluator . eval ( e ) . result ; }
44746	private Insets parseInsets ( String insets , String errorMsg ) throws SAXException { StringTokenizer tokenizer = new StringTokenizer ( insets ) ; return new Insets ( nextInt ( tokenizer , errorMsg ) , nextInt ( tokenizer , errorMsg ) , nextInt ( tokenizer , errorMsg ) , nextInt ( tokenizer , errorMsg ) ) ; }
44753	public boolean isLockedOut ( ) { String userDN = loginState . getUserToken ( ) ; return isLockedOut ( userDN ) ; }
44755	@ Override public boolean onCreateOptionsMenu ( Menu menu ) { menu . add ( Menu . NONE , MENU_HELP , Menu . NONE , getString ( R . string . help ) ) . setIcon ( android . R . drawable . ic_menu_help ) . setAlphabeticShortcut ( _CHAR ) ; return super . onCreateOptionsMenu ( menu ) ; }
44756	public void scheduleAtFixedRate ( TimerTask task , Date firstTime , long period ) { if ( period <= _NUM ) throw new IllegalArgumentException ( _CHAR Non - positive period . '' ) ; sched ( task , firstTime . getTime ( ) , period ) ; }
44765	@ Override public void handleRequest ( RequestContext rc ) throws CLIException { super . handleRequest ( rc ) ; ldapLogin ( ) ; }
44774	public SAML2ConfigBuilder signAssertion ( boolean signAssertion ) { this . signAssertion = signAssertion ; return this ; }
44776	@ Override public void publish ( LogRecord record ) { super . publish ( record ) ; super . flush ( ) ; }
44801	public ApiHandlerAssert hasI18nTitle ( ) { assertI18nTitle ( actual . title ( ) , annotatedClass ) ; return this ; }
44807	public void reset ( ) { digest . reset ( ) ; digest . update ( inputPad , _NUM , inputPad . length ) ; }
44813	public boolean removeArgument ( final Argument argument ) { obfuscatedArgs . remove ( argument ) ; return args . remove ( argument ) ; }
44820	public void cancelCellEditing ( ) { realEditor . cancelCellEditing ( ) ; cleanupAfterEditing ( ) ; }
44844	public Builder structuralObjectClassOID ( final String nameOrOID ) { this . structuralObjectClassOID = nameOrOID ; return this ; }
44845	public Builder removeName ( String name ) { this . names . remove ( name ) ; return this ; }
44885	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiRootPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiRootPaneUI ) mui ) . uis , a ) ; }
44904	private E peekExpired ( ) { E first = q . peek ( ) ; return ( first == _NULL || first . getDelay ( NANOSECONDS ) > _NUM ) ? _NULL : first ; }
44910	public Wrapper addServlet ( String contextPath , String servletName , Servlet servlet ) { Container ctx = getHost ( ) . findChild ( contextPath ) ; return addServlet ( ( Context ) ctx , servletName , servlet ) ; }
44926	public static void addErrorMessage ( ConfigChangeResult ccr , LocalizableMessage message ) { ccr . setResultCode ( DirectoryServer . getServerErrorResultCode ( ) ) ; ccr . addMessage ( message ) ; }
44953	private void enableBle ( ) { final Intent enableIntent = new Intent ( BluetoothAdapter . ACTION_REQUEST_ENABLE ) ; startActivityForResult ( enableIntent , Utils . REQUEST_ENABLE_BT ) ; }
44959	protected void indent ( int depth ) throws IOException { if ( m_startNewLine ) outputLineSep ( ) ; if ( m_indentAmount > _NUM ) printSpace ( depth * m_indentAmount ) ; }
44980	public static void copy ( InputStream input , Writer output , String encoding ) throws IOException { InputStreamReader in = new InputStreamReader ( input , encoding ) ; copy ( in , output ) ; }
44983	public boolean isTransientChild ( String classname ) { if ( transientChildren != _NULL ) return transientChildren . contains ( classname ) ; return _BOOL ; }
44984	private static int bitLength ( int [ ] val , int len ) { if ( len == _NUM ) return _NUM ; return ( ( len - _NUM ) << _NUM ) + bitLengthForInt ( val [ _NUM ] ) ; }
45013	final boolean isRunningOrShutdown ( boolean shutdownOK ) { int rs = runStateOf ( ctl . get ( ) ) ; return rs == RUNNING || ( rs == SHUTDOWN && shutdownOK ) ; }
45017	private synchronized void readObject ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { ois . defaultReadObject ( ) ; deserialize ( ois , ( Collection ) bcsListeners ) ; }
45034	static public void assertSame ( String message , Object expected , Object actual ) { if ( expected == actual ) return ; failNotSame ( message , expected , actual ) ; }
45042	private static long calcSliceFence ( long skip , long limit ) { long sliceFence = limit >= _NUM ? skip + limit : Long . MAX_VALUE ; return ( sliceFence >= _NUM ) ? sliceFence : Long . MAX_VALUE ; }
45049	public static void main ( final String [ ] args ) { final int retCode = new MakeLDIF ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
45061	public static ClientException wrongManagedObjectType ( RelationDefinition < ? , ? > r , ManagedObjectDefinition < ? , ? > d , String subcommandName ) { LocalizableMessage msg = ERR_DSCFG_ERROR_TYPE_UNRECOGNIZED_FOR_SUBCOMMAND . get ( d . getUserFriendlyName ( ) , subcommandName ) ; return new ClientException ( ReturnCode . ERROR_USER_DATA , msg ) ; }
45083	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
45087	public void stop ( boolean playerDied ) { game . setGameOverUI ( playerDied ) ; super . stop ( ) ; }
45113	public E push ( E object ) { addElement ( object ) ; return object ; }
45118	public boolean export_eagle_session_file ( java . io . InputStream p_input_stream , OutputStream p_output_stream ) { if ( board_is_read_only ) return _BOOL ; return SpectraSesToEagle . get_instance ( p_input_stream , p_output_stream , r_board ) ; }
45130	public static View showTips ( View targetView , TipsType tipsType ) { Tips tips = tipsType . createTips ( targetView . getContext ( ) ) ; return tips . applyTo ( targetView , tipsType . ordinal ( ) ) ; }
45131	protected void uninstallKeyboardActions ( ) { SwingUtilities . replaceUIInputMap ( header , JComponent . WHEN_FOCUSED , _NULL ) ; SwingUtilities . replaceUIActionMap ( header , _NULL ) ; }
45154	public static LDAPUrl valueOf ( final String url , final Schema schema ) { Reject . ifNull ( url , schema ) ; return new LDAPUrl ( url , schema ) ; }
45173	public static void deregisterRetentionPolicy ( DN configEntryDN ) { Reject . ifNull ( configEntryDN ) ; directoryServer . retentionPolicies . remove ( configEntryDN ) ; }
45201	private Bitmap processBitmap ( int resId ) { Log . d ( TAG , _CHAR processBitmap - _CHAR + resId ) ; return decodeSampledBitmapFromResource ( mResources , resId , mImageWidth , mImageHeight , getImageCache ( ) ) ; }
45211	public Executor wd ( File wd ) { this . wd = wd ; return this ; }
45226	public MethodHandle findGetter ( Class < ? > refc , String name , Class < ? > type ) throws NoSuchFieldException , IllegalAccessException { MemberName field = resolveOrFail ( REF_getField , refc , name , type ) ; return getDirectField ( REF_getField , refc , field ) ; }
45227	void clear ( ) { for ( int i = _NUM ; i <= size ; i ++ ) queue [ i ] = _NULL ; size = _NUM ; }
45241	public int readByte ( ) throws IOException { ++ length ; return in . read ( ) & _NUM ; }
45266	public Builder requiredAttributes ( final Collection < String > nameOrOIDs ) { this . requiredAttributes . addAll ( nameOrOIDs ) ; return this ; }
45273	public Object [ ] toArray ( ) { Object [ ] elements = getArray ( ) ; return Arrays . copyOf ( elements , elements . length ) ; }
45274	public static String printInteger ( java . math . BigInteger val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printInteger ( val ) ; }
45283	public Object clone ( ) { XMPNode clonedTree = ( XMPNode ) tree . clone ( ) ; return new XMPMetaImpl ( clonedTree ) ; }
45287	public static ServerSideSortResponseControl newControl ( final ResultCode result , final AttributeDescription attributeDescription ) { Reject . ifNull ( result ) ; return new ServerSideSortResponseControl ( _BOOL , result , attributeDescription ) ; }
45293	@ Override public void rejectedExecution ( Runnable r , ThreadPoolExecutor executor ) { RadiusRequestHandler handler = ( RadiusRequestHandler ) r ; LOG . warning ( _CHAR RADIUS thread pool queue full . Dropping packet from _CHAR + handler . getClientName ( ) ) ; }
45320	private static JAXBException handleClassCastException ( Class originalType , Class targetType ) { final URL targetTypeURL = which ( targetType ) ; return new JAXBException ( Messages . format ( Messages . ILLEGAL_CAST , getClassClassLoader ( originalType ) . getResource ( _CHAR javax / xml / bind / JAXBContext . class _CHAR ) , targetTypeURL ) ) ; }
45324	@ ForceInline @ SuppressWarnings ( _CHAR unchecked _CHAR ) static < T , U > T castReference ( Class < ? extends T > t , U x ) { if ( x != _NULL && ! t . isInstance ( x ) ) throw newClassCastException ( t , x ) ; return ( T ) x ; }
45327	public void parse ( InputSource input ) throws IOException , SAXException { setupXMLReader ( ) ; xmlReader . parse ( input ) ; }
45337	public GSERParser skipSP ( ) throws GSERException { skip ( GSER_SP ) ; return this ; }
45357	public static void writeSwappedShort ( byte [ ] data , int offset , short value ) { data [ offset + _NUM ] = ( byte ) ( ( value >> _NUM ) & _NUM ) ; data [ offset + _NUM ] = ( byte ) ( ( value >> _NUM ) & _NUM ) ; }
45359	@ Override public void start ( ) throws java . lang . Exception { start ( MembershipService . MBR_RX ) ; start ( MembershipService . MBR_TX ) ; }
45373	public SubResourceCollection glueObjectClasses ( final String ... objectClasses ) { this . glueObjectClasses . add ( ( Object [ ] ) objectClasses ) ; return this ; }
45375	public Builder removeRequiredAttribute ( String attributeNameOrOID ) { this . requiredAttributeOIDs . remove ( attributeNameOrOID ) ; return this ; }
45382	private void initialize ( ) { final BluetoothManager bluetoothManager = ( BluetoothManager ) getSystemService ( BLUETOOTH_SERVICE ) ; mAdapter = bluetoothManager . getAdapter ( ) ; }
45383	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
45384	@ Override protected void onDestroy ( ) { super . onDestroy ( ) ; Hermes . disconnect ( this ) ; }
45394	public void commit ( ) { activeValues . clear ( ) ; activeValues . addAll ( pendingValues ) ; }
45404	public static void saveApplicationType ( Subject adminSubject , ApplicationType appType ) throws EntitlementException { EntitlementConfiguration ec = getEntitlementConfiguration ( adminSubject , _CHAR / _CHAR ) ; ec . storeApplicationType ( appType ) ; }
45406	public Builder structuralClassOID ( String strucuralClassOID ) { this . structuralClassOID = strucuralClassOID ; return this ; }
45412	@ Override public void clearBatch ( ) throws SQLException { batchAdded = _BOOL ; super . clearBatch ( ) ; }
45417	public MethodHandle findStaticSetter ( Class < ? > refc , String name , Class < ? > type ) throws NoSuchFieldException , IllegalAccessException { MemberName field = resolveOrFail ( REF_putStatic , refc , name , type ) ; return getDirectField ( REF_putStatic , refc , field ) ; }
45426	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR SAVED_DAILY_DETAIL \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR BODY \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR IMAGE_SOURCE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR IMAGE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR TITLE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR SHARE_URL \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR JS \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR CSS \ _CHAR TEXT ) ; _CHAR ) ; }
45449	public boolean greaterThanOrEqual ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . lessThanOrEqual ( this ) ; return this . num ( ) >= obj2 . num ( ) ; }
45457	public void reset ( ) { super . reset ( ) ; bodyContent = _NULL ; }
45464	public PdfCanvas lineTo ( double x , double y ) { contentStream . getOutputStream ( ) . writeDouble ( x ) . writeSpace ( ) . writeDouble ( y ) . writeSpace ( ) . writeBytes ( l ) ; return this ; }
45465	private void rehash ( ) { expungeStaleEntries ( ) ; if ( size >= threshold - threshold / _NUM ) resize ( ) ; }
45475	@ Override public boolean hasMembers ( ) { if ( getNext ( ) != _NULL ) return getNext ( ) . hasMembers ( ) ; else return _BOOL ; }
45485	public void addMessageDestinationRef ( MessageDestinationRef mdr ) { namingResources . addMessageDestinationRef ( mdr ) ; fireContainerEvent ( _CHAR addMessageDestinationRef _CHAR , mdr . getName ( ) ) ; }
45489	public Object remove ( Object oldInstance ) { Expression exp = bindings . remove ( oldInstance ) ; return getValue ( exp ) ; }
45493	public void append ( byte b ) { ensureCapacity ( length + _NUM ) ; buffer [ length ++ ] = b ; }
45504	private void addChildView ( View view , int newWidth ) { mRow . addView ( view ) ; resizeRow ( newWidth , view ) ; }
45512	public void reset ( Reader in ) { lexer . yyreset ( in ) ; reset ( ) ; }
45519	public void removeUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { handleRemove ( changes . getOffset ( ) , changes . getLength ( ) ) ; super . removeUpdate ( changes , a , f ) ; }
45524	public static byte [ ] parseBase64Binary ( String lexicalXSDBase64Binary ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseBase64Binary ( lexicalXSDBase64Binary ) ; }
45536	public void update ( byte [ ] buf , int off , int len ) throws SignatureException { if ( RSAdata != _NULL || digestAttr != _NULL || isTsp ) messageDigest . update ( buf , off , len ) ; else sig . update ( buf , off , len ) ; }
45543	private void stopAnimation ( ) { mAnimImage . setVisibility ( View . INVISIBLE ) ; mAnimImage . setAnimation ( _NULL ) ; }
45546	public void addMarkerToMap ( LatLng latLng ) { Marker marker = mGoogleMap . addMarker ( new MarkerOptions ( ) . position ( latLng ) . title ( _CHAR title _CHAR ) . snippet ( _CHAR snippet _CHAR ) ) ; markers . add ( marker ) ; }
45549	public void error ( String msg , Object [ ] args ) { String themsg = XSLMessages . createMessage ( msg , args ) ; throw new RuntimeException ( XSLMessages . createMessage ( XSLTErrorResources . ER_ELEMTEMPLATEELEM_ERR , new Object [ ] { themsg } ) ) ; }
45550	public static void fill ( boolean [ ] a , int fromIndex , int toIndex , boolean val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
45551	public static void convertToBinary ( File in , File out ) throws IOException , ParserConfigurationException , ParseException , SAXException , PropertyListFormatException { NSObject root = parse ( in ) ; saveAsBinary ( root , out ) ; }
45566	public void focusLost ( FocusEvent e ) { setVisible ( _BOOL ) ; setSelectionVisible ( ownsSelection || e . isTemporary ( ) ) ; }
45568	public boolean isPasswordExpired ( ) { refreshIfUndefined ( isPasswordExpired ) ; return isPasswordExpired == ConditionResult . TRUE ; }
45578	private Long convertIntToLong ( int quoteParam ) { Long quoteParamLong = new Long ( convertIntToIntString ( quoteParam ) ) ; return quoteParamLong ; }
45579	public Builder removeAllNames ( ) { this . names . clear ( ) ; return this ; }
45594	@ Override public TagResult generateValue ( TemplateEntry templateEntry , TemplateValue templateValue ) { templateValue . getValue ( ) . append ( nextValue ++ ) ; return TagResult . SUCCESS_RESULT ; }
45604	public void addSubTree ( Tree < E > node ) { node . parent = this ; children . add ( node ) ; }
45605	public WorldCreator generatorSettings ( String generatorSettings ) { this . generatorSettings = generatorSettings ; return this ; }
45613	final boolean isMatched ( ) { Object x = item ; return ( x == this ) || ( ( x == _NULL ) == isData ) ; }
45625	public void replicaOfflineMsgSent ( DN baseDN ) { stopInstanceTimestamp . compareAndSet ( _NUM , System . currentTimeMillis ( ) ) ; replicaOfflineMsgs . add ( baseDN ) ; }
45628	private void modifyVLVIndexOnline ( ConnectionWrapper connWrapper ) throws Exception { final RootCfgClient root = connWrapper . getRootConfiguration ( ) ; modifyBackendVLVIndexOnline ( ( PluggableBackendCfgClient ) root . getBackend ( backendID ) ) ; }
45648	public Tasker withCondition ( Condition condition ) { lastAddedTask . setCondition ( condition ) ; return this ; }
45654	public Builder removeAllRequiredAttributes ( ) { this . requiredAttributeOIDs . clear ( ) ; return this ; }
45660	public void clearParameters ( ) { if ( _NULL == m_params ) return ; m_params . clear ( ) ; }
45664	public Builder removeAllNames ( ) { this . names . clear ( ) ; return this ; }
45666	public void reloadWorkspace ( ) { mModel . resetLoadedState ( _BOOL , _BOOL ) ; mModel . startLoaderFromBackground ( ) ; }
45672	public void loadTagFiles ( Compiler compiler , Node . Nodes page ) throws JasperException { tempVector = new Vector < > ( ) ; page . visit ( new TagFileLoaderVisitor ( compiler ) ) ; }
45688	public static ConnectionFactory newRootConnectionFactory ( ) { InternalClientConnection icc = InternalClientConnection . getRootConnection ( ) ; return newConnectionFactory ( icc ) ; }
45707	protected String paramString ( ) { String desktopManagerString = ( desktopManager != _NULL ? desktopManager . toString ( ) : _CHAR _CHAR ) ; return super . paramString ( ) + _CHAR , desktopManager = _CHAR + desktopManagerString ; }
45712	public int transformToGlobalRTF ( ElemTemplateElement templateParent ) throws TransformerException { DTM dtmFrag = m_xcontext . getGlobalRTFDTM ( ) ; return transformToRTF ( templateParent , dtmFrag ) ; }
45713	public boolean contains ( int s ) { runTo ( - _NUM ) ; return super . contains ( s ) ; }
45715	public void calculateValues ( ) { calculatePercentComplete ( ) ; calculateEta ( ) ; }
45729	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { super . beginDisplay ( event ) ; setInlineAlertMessage ( CCAlert . TYPE_ERROR , _CHAR message . error _CHAR , _CHAR invalid . url . message _CHAR ) ; }
45740	public PdfCanvas openTag ( CanvasTag tag ) { if ( tag . getRole ( ) == _NULL ) return this ; return beginMarkedContent ( tag . getRole ( ) , tag . getProperties ( ) ) ; }
45748	public boolean nextBoolean ( ) { clearCaches ( ) ; return Boolean . parseBoolean ( next ( boolPattern ( ) ) ) ; }
45753	static void moveToForeignTarget ( Path source , Path target , CopyOption ... options ) throws IOException { copyToForeignTarget ( source , target , convertMoveToCopyOptions ( options ) ) ; Files . delete ( source ) ; }
45762	public static void hideSoftKeyBoard ( Context context , IBinder windowToken ) { InputMethodManager mgr = ( InputMethodManager ) context . getSystemService ( Context . INPUT_METHOD_SERVICE ) ; mgr . hideSoftInputFromWindow ( windowToken , _NUM ) ; }
45776	protected void closeFrame ( JInternalFrame f ) { BasicLookAndFeel . playSound ( frame , _CHAR InternalFrame . closeSound _CHAR ) ; getDesktopManager ( ) . closeFrame ( f ) ; }
45824	protected void forwardUpdateToView ( View v , DocumentEvent e , Shape a , ViewFactory f ) { v . setParent ( this ) ; super . forwardUpdateToView ( v , e , a , f ) ; }
45843	public final void writeInt ( int val ) throws IOException { Memory . pokeInt ( scratch , _NUM , val , ByteOrder . BIG_ENDIAN ) ; write ( scratch , _NUM , SizeOf . INT ) ; }
45848	public boolean maxCachingTimeReached ( ) { long cachingtime = currentTimeMillis ( ) / _NUM - latestRefreshTime ; return cachingtime > maxCachingTime * _NUM ; }
45853	public boolean isQuestionAvailable ( String uuid , String realm ) { Map map = getSecretQuestions ( uuid , realm ) ; return ( map != _NULL ) && ! map . isEmpty ( ) ; }
45854	public static ArgumentException unableToResetPropertyWithValue ( String name , String resetOption ) { LocalizableMessage message = ERR_DSCFG_ERROR_UNABLE_TO_RESET_PROPERTY_WITH_VALUE . get ( resetOption , name , resetOption ) ; return new ArgumentException ( message ) ; }
45858	public void newRowsAdded ( final TableModelEvent e ) { justifyRows ( e . getFirstRow ( ) , e . getLastRow ( ) + _NUM ) ; fireTableChanged ( e ) ; }
45875	public static NSObject parse ( InputStream is ) throws IOException , PropertyListFormatException { byte [ ] buf = PropertyListParser . readAll ( is ) ; return parse ( buf ) ; }
45886	public void delete ( ) throws IOException { close ( ) ; Util . deleteContents ( directory ) ; }
45901	public Builder optionalAttributes ( final Collection < String > attributeNamesOrOIDs ) { this . optionalAttributes . addAll ( attributeNamesOrOIDs ) ; return this ; }
45908	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR PICTURE_INFO \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR PATH \ _CHAR TEXT NOT NULL , _CHAR + _CHAR \ _CHAR DISTANCE \ _CHAR TEXT NOT NULL , _CHAR + _CHAR \ _CHAR TIME \ _CHAR TEXT NOT NULL , _CHAR + _CHAR \ _CHAR TIPS \ _CHAR TEXT ) ; _CHAR ) ; }
45926	public void removeSelectionRow ( int row ) { int [ ] rows = { row } ; removeSelectionRows ( rows ) ; }
45931	public void updateVLVIndex ( VLVIndexDescriptor index ) { vlvIndexPanel . update ( index ) ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , vlvIndexPanel . getTitle ( ) . toString ( ) ) ; }
45934	public void cache ( SessionInfo info , String jwtToken ) { Reject . ifNull ( info , jwtToken , _CHAR Arguments can not be _NULL . _CHAR ) ; sessionInfoCache . put ( jwtToken , info ) ; }
45939	public void removeSubSchema ( String subSchemaName ) throws SSOException , SMSException { SMSEntry . validateToken ( ssm . getSSOToken ( ) ) ; removeChildNode ( SMSUtils . SUB_SCHEMA , subSchemaName ) ; }
45942	private int readFirstBytes ( ) throws IOException { getBOM ( ) ; return fbIndex < fbLength ? firstBytes [ fbIndex ++ ] : - _NUM ; }
45949	public void startElement ( ) { nss . pushContext ( ) ; inCollectingMode = _BOOL ; }
45957	public void log ( String logName , Level level , String message , Object actor , Object cred ) { LogRecord rec = new LogRecord ( level , message , actor ) ; ( ( Logger ) Logger . getLogger ( logName ) ) . log ( rec , cred ) ; }
45967	private void VisitLineNumber ( MethodVisitor methodVisitor , LineCol lineCol , Label label ) { if ( lineCol == _NULL || lineCol . line <= _NUM ) return ; methodVisitor . visitLineNumber ( lineCol . line , label ) ; }
45970	public Paragraph add ( ILeafElement element ) { childElements . add ( element ) ; return this ; }
45997	private void writeObject ( ObjectOutputStream s ) throws java . io . IOException { s . defaultWriteObject ( ) ; s . writeObject ( toString ( ) ) ; }
46004	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
46008	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { if ( ! m_shouldProcess ) return ; getCurrentProcessor ( ) . ignorableWhitespace ( this , ch , start , length ) ; }
46013	public boolean isValidID3v2FrameIdentifier ( String identifier ) { Matcher m = ID3v23Frame . validFrameIdentifier . matcher ( identifier ) ; return m . matches ( ) ; }
46038	private static void register ( String URI , String filename , String MIME ) { OfflineResolver . _uriMap . put ( URI , filename ) ; OfflineResolver . _mimeMap . put ( URI , MIME ) ; }
46042	public boolean isPopupMenuVisible ( ) { ensurePopupMenuCreated ( ) ; return popupMenu . isVisible ( ) ; }
46044	private boolean isPreflightFlow ( final HttpServletRequest req ) { final String reqMethodHeader = req . getHeader ( CORSConstants . AC_REQUEST_METHOD ) ; return CORSConstants . HTTP_OPTIONS . equals ( req . getMethod ( ) ) && reqMethodHeader != _NULL && ! reqMethodHeader . isEmpty ( ) ; }
46056	public void replace ( int offset , int length , View [ ] views ) { super . replace ( offset , length , views ) ; invalidateGrid ( ) ; }
46066	private boolean isInsideCastle ( ) { Shape intersection = SVGPath . intersect ( spriteBoundsArray [ _NUM ] , SpriteHandler . getCurrentCast ( ) . get ( _NUM ) . getSpriteBoundsArray ( ) [ _NUM ] ) ; return intersection . getBoundsInParent ( ) . getWidth ( ) != - _NUM ; }
46067	public void add ( MutableTreeNode newChild ) { if ( newChild != _NULL && newChild . getParent ( ) == this ) insert ( newChild , getChildCount ( ) - _NUM ) ; else insert ( newChild , getChildCount ( ) ) ; }
46070	private void writeToFile ( final String input , final File output ) throws IOException { InputStream is = new ByteArrayInputStream ( input . getBytes ( Charset . forName ( _CHAR UTF - _NUM _CHAR ) ) ) ; writeToFile ( is , output ) ; }
46081	public void delete ( ) throws IOException { close ( ) ; fileSystem . deleteContents ( directory ) ; }
46101	public static ArgumentException unableToSetNamingProperty ( AbstractManagedObjectDefinition < ? , ? > d , PropertyDefinition < ? > pd ) { LocalizableMessage message = ERR_DSCFG_ERROR_UNABLE_TO_SET_NAMING_PROPERTY . get ( pd . getName ( ) , d . getUserFriendlyName ( ) ) ; return new ArgumentException ( message ) ; }
46103	public String format ( DateTimeFormatter formatter ) { Objects . requireNonNull ( formatter , _CHAR formatter _CHAR ) ; return formatter . format ( this ) ; }
46124	public static boolean isMainDisplayInLandscape ( Context context ) { int rotation = DisplayManagerCompat . getInstance ( context ) . getDisplay ( _NUM ) . getRotation ( ) ; return rotation == Surface . ROTATION_90 || rotation == Surface . ROTATION_270 ; }
46125	public Duration withNanos ( int nanoOfSecond ) { NANO_OF_SECOND . checkValidIntValue ( nanoOfSecond ) ; return create ( seconds , nanoOfSecond ) ; }
46131	public QRCallbackBuilder withUriPort ( String port ) { this . port = port ; return this ; }
46137	private void removeBranchID ( Request request ) { ViaHeader viaHeader = ( ViaHeader ) request . getHeader ( ViaHeader . NAME ) ; viaHeader . removeParameter ( _CHAR branch _CHAR ) ; }
46147	public static NamingResponse parseXML ( String xml ) { NamingResponseParser parser = new NamingResponseParser ( xml ) ; return parser . parseXML ( ) ; }
46149	public SAML2ConfigBuilder signatureKeyPassword ( byte [ ] signatureKeyPassword ) { this . signatureKeyPassword = signatureKeyPassword ; return this ; }
46156	public int indexOf ( int elem , int index ) { runTo ( - _NUM ) ; return super . indexOf ( elem , index ) ; }
46163	public CombinatorialNameGenerator build ( final boolean usesMiddles ) throws IllegalStateException { checkState ( usesMiddles ) ; return new CombinatorialNameGenerator ( this , usesMiddles ) ; }
46174	public PlaSide side_of ( PlaPointFloat p_other , double p_tolerance ) { double det = MathAux . determinant ( dir_x , dir_y , p_other . v_x , p_other . v_y ) ; return PlaSide . get_side_of ( det , p_tolerance ) ; }
46175	public void registerEngineMimeType ( String type , ScriptEngineFactory factory ) { if ( type == _NULL || factory == _NULL ) throw new NullPointerException ( ) ; mimeTypeAssociations . put ( type , factory ) ; }
46177	boolean isTransient ( ) { Object value = getValue ( TRANSIENT ) ; return ( value instanceof Boolean ) ? ( Boolean ) value : _BOOL ; }
46181	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { double pos = ( double ) getPositionInContextNodeList ( xctxt ) ; return new XNumber ( pos ) ; }
46194	private void loadConfiguration ( ) { mApiToken = mConfigurationManager . getString ( PREF_API_TOKEN , _CHAR _CHAR ) ; mKitUrl = mConfigurationManager . getString ( PREF_KIT_URL , _CHAR _CHAR ) ; }
46195	public void appendNodes ( NodeVector nodes ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; super . appendNodes ( nodes ) ; }
46197	public static Object convertElementToJAXB ( Element element ) throws JAXBException { Unmarshaller u = jc . createUnmarshaller ( ) ; return u . unmarshal ( element ) ; }
46200	private SOAPMessage FormSOAPError ( String faultCode , String faultStringKey , Message req ) { String faultString = Utils . bundle . getString ( faultStringKey ) ; return FormSOAPError ( req , faultCode , faultString ) ; }
46202	public static DN makeChildDN ( DN parentDN , AttributeType rdnAttrType , String rdnStringValue ) { ByteString attrValue = ByteString . valueOfUtf8 ( rdnStringValue ) ; return parentDN . child ( new RDN ( rdnAttrType , attrValue ) ) ; }
46209	protected final DTMAxisIterator resetPosition ( ) { _position = _NUM ; return this ; }
46212	public Object clone ( ) { RenderContext newRenderContext = new RenderContext ( usr2dev , aoi , hints ) ; return newRenderContext ; }
46219	private void initSkinLoader ( ) { SkinManager . getInstance ( ) . init ( mContext ) ; SkinManager . getInstance ( ) . load ( ) ; }
46223	@ Override public void clear ( ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR resourceSet . locked _CHAR ) ) ; super . clear ( ) ; }
46229	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
46243	private void disableMapper ( ) throws Exception { String mapperDN = _CHAR cn = Subject Equals DN , cn = Certificate Mappers , cn = config _CHAR ; replace ( _CHAR cn = EXTERNAL , cn = SASL Mechanisms , cn = config _CHAR , _CHAR ds - cfg - certificate - mapper _CHAR , mapperDN ) ; }
46248	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR GREEN_WATCHED_VIDEO \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
46249	private void cancelClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
46262	public final static String formatElements ( final HeaderElement [ ] elems , final boolean quote , HeaderValueFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicHeaderValueFormatter . DEFAULT ; return formatter . formatElements ( _NULL , elems , quote ) . toString ( ) ; }
46266	public static String format ( String pattern , Map arguments ) { MapFormat temp = new MapFormat ( arguments ) ; return temp . format ( pattern ) ; }
46283	private static void extractAndAddValueUsingIfNotEmpty ( final HttpServletRequest request , final Map < String , List < String >> paramsMap , final String parameterName ) { String parameterValue = request . getParameter ( parameterName ) ; insertValueUsingIfNotEmpty ( paramsMap , parameterValue , parameterName ) ; }
46289	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
46300	synchronized void receivedLast ( ) { closedByWriter = _BOOL ; notifyAll ( ) ; }
46318	static Subscription registerForNotifyChangesToSubNodes ( String dn , SMSEventListener eventListener ) { initialize ( ) ; return addNotificationObject ( subNodeChanges , DN . valueOf ( dn ) , eventListener ) ; }
46321	public int length ( ) { int len = getArrayLength ( ) - ( getGapEnd ( ) - getGapStart ( ) ) ; return len ; }
46324	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { if ( xctxt . getIteratorRoot ( ) == xctxt . getCurrentNode ( ) ) return getStaticScore ( ) ; else return this . SCORE_NONE ; }
46327	public void replaceAll ( Collection < ByteString > values ) { clear ( ) ; addAll ( values ) ; }
46328	protected void uninstallKeyboardActions ( ) { SwingUtilities . replaceUIInputMap ( comboBox , JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT , _NULL ) ; SwingUtilities . replaceUIActionMap ( comboBox , _NULL ) ; }
46329	public void stop ( ) throws Exception { Method method = catalinaDaemon . getClass ( ) . getMethod ( _CHAR stop _CHAR , ( Class [ ] ) _NULL ) ; method . invoke ( catalinaDaemon , ( Object [ ] ) _NULL ) ; }
46331	public void removeElementAt ( int i ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; super . removeElementAt ( i ) ; }
46339	public WhereBuilder or ( WhereBuilder where ) { String condition = whereItems . size ( ) == _NUM ? _CHAR _CHAR : _CHAR OR _CHAR ; return expr ( condition + _CHAR ( _CHAR + where . toString ( ) + _CHAR ) _CHAR ) ; }
46341	public static void fill ( int [ ] a , int fromIndex , int toIndex , int val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
46342	public final void add ( final String problem , final Severity severity ) { this . problems . add ( new Problem ( problem , severity ) ) ; this . hasFatal |= severity == Severity . FATAL ; }
46360	public static CompareResult newCompareResult ( final ResultCode resultCode ) { Reject . ifNull ( resultCode ) ; return new CompareResultImpl ( resultCode ) ; }
46366	public Builder add ( String name , String value ) { checkNameAndValue ( name , value ) ; return addLenient ( name , value ) ; }
46371	public boolean retainAll ( Collection < ? > c ) { Objects . requireNonNull ( c ) ; return batchRemove ( c , _BOOL ) ; }
46384	public Matcher useAnchoringBounds ( boolean b ) { anchoringBounds = b ; return this ; }
46385	public LoginConfiguration httpResponse ( HttpServletResponse httpResponse ) { this . httpResponse = httpResponse ; return this ; }
46388	public void flip ( int x , int y ) { int offset = y * rowSize + ( x >> _NUM ) ; bits [ offset ] ^= _NUM << ( x & _NUM ) ; }
46400	private void decodeRules ( ) { decodeStartRule ( ) ; decodeEndRule ( ) ; }
46437	protected boolean processSocket ( long socket , SocketEvent event ) { SocketWrapperBase < Long > socketWrapper = connections . get ( Long . valueOf ( socket ) ) ; return processSocket ( socketWrapper , event , _BOOL ) ; }
46451	public Builder auxiliaryObjectClasses ( final Collection < String > objectClassNamesOrOIDs ) { this . auxiliaryClassOIDs . addAll ( objectClassNamesOrOIDs ) ; return this ; }
46467	@ Deprecated public static void initializeForClientUse ( ) { DirectoryServer . getInstance ( ) ; DirectoryServer . bootstrapClient ( ) ; }
46485	public boolean verify ( PublicKey key , Provider sigProvider ) throws NoSuchAlgorithmException , NoSuchProviderException , CMSException { getSigningTime ( ) ; return doVerify ( key , sigProvider ) ; }
46488	public int elementAt ( int i ) { runTo ( i ) ; return super . elementAt ( i ) ; }
46492	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
46501	public void disallow ( final Result result , final String message ) { this . result = result ; this . message = message ; }
46525	public < T extends IElement > Div add ( BlockElement < T > element ) { childElements . add ( element ) ; return this ; }
46527	public void add ( int index , E element ) { delegate . insertElementAt ( element , index ) ; fireIntervalAdded ( this , index , index ) ; }
46530	public boolean visitFunction ( ExpressionOwner owner , Function func ) { if ( ( func instanceof FuncPosition ) || ( func instanceof FuncLast ) ) m_hasPositionalPred = _BOOL ; return _BOOL ; }
46568	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
46575	public E push ( E item ) { add ( item ) ; return item ; }
46590	public static String printLong ( long val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printLong ( val ) ; }
46609	public void removeChild ( XMPNode node ) { getChildren ( ) . remove ( node ) ; cleanupChildren ( ) ; }
46613	public ConnectionParameters adminPort ( int port ) { adminPort = port ; return this ; }
46617	public static void dropAllTables ( SQLiteDatabase db , boolean ifExists ) { HtmlEntityDao . dropTable ( db , ifExists ) ; CollectEntityDao . dropTable ( db , ifExists ) ; }
46622	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiComboBoxUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiComboBoxUI ) mui ) . uis , a ) ; }
46628	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
46647	private File retrieveGenerationIdFile ( final File directory ) { File [ ] generationIds = directory . listFiles ( GENERATION_ID_FILE_FILTER ) ; return ( generationIds != _NULL && generationIds . length > _NUM ) ? generationIds [ _NUM ] : _NULL ; }
46648	public void handleButton1Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToRealmView ( event ) ; }
46681	public static void dumbTradingLogic ( String company , int numberOfShares , PortfolioService portfolio , Map < String , Object > quote ) { JsonObject json = new JsonObject ( quote ) ; dumbTradingLogic ( company , numberOfShares , portfolio , json ) ; }
46682	@ Override @ Deprecated public Object resolveVariable ( String pName ) throws ELException { ELContext ctx = this . getELContext ( ) ; return ctx . getELResolver ( ) . getValue ( ctx , _NULL , pName ) ; }
46727	public static boolean endsWith ( final String value , final String search ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return endsWith ( value , search , value . length ( ) , _BOOL ) ; }
46743	public void invalidate ( ) { net_no =- _NUM ; drill_list . clear ( ) ; }
46750	@ Override public String format ( DateTimeFormatter formatter ) { Objects . requireNonNull ( formatter , _CHAR formatter _CHAR ) ; return formatter . format ( this ) ; }
46753	public ConnectionParameters bindDn ( String dn ) { bindDn = dn ; return this ; }
46754	void signedAdd ( MutableBigInteger addend ) { if ( sign == _NUM ) add ( addend ) ; else sign = sign * subtract ( addend ) ; }
46760	@ Override public void stop ( int svc ) throws ChannelException { if ( getNext ( ) != _NULL ) getNext ( ) . stop ( svc ) ; channel = _NULL ; }
46767	public void dropActionChanged ( DragSourceDragEvent dsde ) { ( ( DragSourceListener ) a ) . dropActionChanged ( dsde ) ; ( ( DragSourceListener ) b ) . dropActionChanged ( dsde ) ; }
46781	public void signXML ( ) throws SAMLException { String certAlias = SystemConfigurationUtil . getProperty ( Constants . SAML_XMLSIG_CERT_ALIAS ) ; signXML ( certAlias ) ; }
46782	private void readObject ( java . io . ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getName ( ) , getMask ( actions ) ) ; }
46800	public ConfigException createDecodingExceptionAdaptor ( DN dn , DefinitionDecodingException e ) { LocalizableMessage message = ERR_ADMIN_MANAGED_OBJECT_DECODING_PROBLEM . get ( dn , stackTraceToSingleLineString ( e , _BOOL ) ) ; return new ConfigException ( message , e ) ; }
46808	@ Override public boolean remove ( Object o ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR resourceSet . locked _CHAR ) ) ; return ( super . remove ( o ) ) ; }
46811	public static void writeDWord ( OutputStream os , int v ) throws IOException { writeWord ( os , v & _NUM ) ; writeWord ( os , v >> > _NUM & _NUM ) ; }
46831	@ Override public String toString ( ) { final Statement statement = getDelegate ( ) ; return statement == _NULL ? _CHAR NULL _CHAR : statement . toString ( ) ; }
46837	private void disconnectAndRemove ( ConnectionRecord cr ) { connectionTable . remove ( makeKeyFromRecord ( cr ) ) ; cr . conn . close ( ) ; }
46838	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiViewportUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiViewportUI ) mui ) . uis , a ) ; }
46844	public boolean lessThanOrEqual ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . greaterThanOrEqual ( this ) ; return this . num ( ) <= obj2 . num ( ) ; }
46852	public void onFedletSLOSuccess ( HttpServletRequest request , HttpServletResponse response , LogoutRequest logoutReq , LogoutResponse logoutRes , String hostedEntityID , String idpEntityID , String binding ) throws SAML2Exception { onFedletSLOSuccessOrFailure ( request , response , logoutReq , logoutRes , hostedEntityID , idpEntityID , binding , _BOOL ) ; return ; }
46869	public static boolean isIntendedForAudience ( String audienceName , JwtClaimsSet jwtClaims ) throws AuthLoginException { List < String > jwtAudiences = jwtClaims . getAudience ( ) ; return jwtAudiences . contains ( audienceName ) ; }
46876	public void incrementTotalDeletes ( ) { totalDeletes ++ ; totalRequests ++ ; }
46898	public void replaceAll ( Attribute attribute ) { clear ( ) ; addAll ( attribute ) ; }
46899	@ Override public void onRecordingDialogClick ( String recordingName ) { mService . saveRecordingAsync ( recordingName ) ; mService . setModifiedRecordingName ( _NULL ) ; }
46925	private E peekExpired ( ) { E first = q . peek ( ) ; return ( first == _NULL || first . getDelay ( NANOSECONDS ) > _NUM ) ? _NULL : first ; }
46938	JwtSessionMapperBuilder compressedUsing ( CompressionAlgorithm compressionAlgorithm ) { this . compressionAlgorithm = checkNotNull ( compressionAlgorithm ) ; return this ; }
46950	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
46975	public static ArgumentException unableToResetMandatoryProperty ( AbstractManagedObjectDefinition < ? , ? > d , String name , String setOption ) { LocalizableMessage message = ERR_DSCFG_ERROR_UNABLE_TO_RESET_MANDATORY_PROPERTY . get ( d . getUserFriendlyPluralName ( ) , name , setOption ) ; return new ArgumentException ( message ) ; }
46978	public Rectangle increaseHeight ( float extra ) { this . height += extra ; return this ; }
46987	public void useHttps ( SSLSocketFactory sslSocketFactory , boolean tunnelProxy ) { this . sslSocketFactory = sslSocketFactory ; this . tunnelProxy = tunnelProxy ; }
46988	public void start ( ) { flushThread . start ( ) ; startListenService ( ) ; }
46993	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
47007	public static SimplePagedResultsControl newControl ( final boolean isCritical , final int size , final ByteString cookie ) { Reject . ifNull ( cookie ) ; return new SimplePagedResultsControl ( isCritical , size , cookie ) ; }
47011	@ Override public void run ( ) { logger . trace ( _CHAR Directory Server shutdown hook has been invoked . '' ) ; DirectoryServer . shutDown ( CLASS_NAME , ERR_SHUTDOWN_DUE_TO_SHUTDOWN_HOOK . get ( ) ) ; }
47013	@ Override public EnumEvalResult evaluate ( AciEvalContext evalCtx ) { EnumEvalResult matched = evalCtx . hasAuthenticationMethod ( authMethod , saslMech ) ; return matched . getRet ( type , _BOOL ) ; }
47017	private String separeMetaTagsContent ( String content ) { String result = Utils . pregMatch ( content , Constants . METATAG_CONTENT_PATTERN , _NUM ) ; return htmlDecode ( result ) ; }
47023	public void collectResponseEvent ( SipProvider provider ) throws TooManyListenersException { initCollectors ( provider ) ; provider . addSipListener ( responseCollector ) ; }
47039	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
47056	public void reset ( ) { this . count . set ( _NUM ) ; released = _BOOL ; }
47057	public SAML2ConfigBuilder encryptAttributes ( boolean encryptAttributes ) { this . encryptAttributes = encryptAttributes ; return this ; }
47059	public void printData ( final String data ) { passFirstSeparatorColumn ( ) ; printCell ( data , Alignment . RIGHT ) ; }
47063	protected void tearDown ( ) throws Exception { if ( rt != _NULL ) rt . interrupt ( ) ; super . tearDown ( ) ; }
47089	public ImportParameters backendId ( String id ) { backendID = id ; return this ; }
47093	public String entryTypeName ( Field field ) { Type items = getApiaryConfig ( ) . getType ( field . getTypeUrl ( ) ) ; return String . format ( _CHAR % s . Entry < % s , % s > _CHAR , getTypeName ( _CHAR java . util . Map _CHAR ) , typeName ( items , getField ( items , _CHAR key _CHAR ) ) , typeName ( items , getField ( items , _CHAR value _CHAR ) ) ) ; }
47098	public void startAutoScroll ( int delayTimeInMills ) { isAutoScroll = _BOOL ; sendScrollMessage ( delayTimeInMills ) ; }
47110	public void initNodeTest ( int whatToShow ) { m_whatToShow = whatToShow ; calcScore ( ) ; }
47112	private void initializeRootDNConfigManager ( ) throws ConfigException , InitializationException { rootDNConfigManager = new RootDNConfigManager ( serverContext ) ; rootDNConfigManager . initializeRootDNs ( ) ; }
47140	public static long countSubstr ( final String value , final String subStr , final boolean caseSensitive , boolean allowOverlapping ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return countSubstr ( caseSensitive ? value : value . toLowerCase ( ) , caseSensitive ? subStr : subStr . toLowerCase ( ) , allowOverlapping , _NUM ) ; }
47148	public ByteArrayBuilder appendDN ( DN dn ) { appendString ( dn . toString ( ) ) ; return this ; }
47151	private boolean matchPattern ( final String remoteHostName ) { final int len = remoteHostName . length ( ) - hostPattern . length ( ) ; return len > _NUM && remoteHostName . regionMatches ( _BOOL , len , hostPattern , _NUM , hostPattern . length ( ) ) ; }
47172	public Document read ( String database , String table , Identifier id ) { verifyTable ( database , table ) ; return docRepo . read ( id ) ; }
47174	public void reset ( ) { curves = new Vector ( ) ; invalidateBounds ( ) ; }
47176	public W3CEndpointReferenceBuilder address ( String address ) { this . address = address ; return this ; }
47181	public boolean bool ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_NUMBER , new Object [ ] { getTypeString ( ) } ) ; return _BOOL ; }
47188	public void replaceText ( int startIndex , int endIndex , String s ) { selectText ( startIndex , endIndex ) ; JTextComponent . this . replaceSelection ( s ) ; }
47192	public LineMessagingServiceBuilder apiEndPoint ( @ NonNull String apiEndPoint ) { this . apiEndPoint = apiEndPoint ; return this ; }
47193	public static void convertToXml ( File in , File out ) throws ParserConfigurationException , ParseException , SAXException , PropertyListFormatException , IOException { NSObject root = parse ( in ) ; saveAsXML ( root , out ) ; }
47204	public void backup ( ) { Log . w ( TAG , _CHAR Backing up _CHAR + DATABASE_NAME ) ; IOUtil . copy ( databaseDir ( ) + DATABASE_NAME , databaseDir ( ) + DATABASE_NAME_BACKUP ) ; }
47228	public Builder ruleID ( final int ruleID ) { this . ruleID = ruleID ; return this ; }
47233	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
47252	@ Override public void onDismiss ( PopupMenu menu ) { Log . d ( TAG , _CHAR popmenu dismiss listener : _CHAR + menu ) ; invalidateOptionsMenu ( ) ; }
47256	public static void main ( final String [ ] args ) { final int retCode = new LDIFDiff ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
47258	public void addParent ( Permission perm , boolean value ) { perm . getChildren ( ) . put ( getName ( ) , value ) ; perm . recalculatePermissibles ( ) ; }
47260	public final void add_target_door ( ExpandDoorItem p_door ) { if ( p_door == _NULL ) return ; target_doors . add ( p_door ) ; }
47265	public static ArgumentException incompatiblePropertyModification ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_INCOMPATIBLE_PROPERTY_MOD . get ( arg ) ; return new ArgumentException ( msg ) ; }
47303	public int next ( ) { _currentNode = ( _currentNode == DTM . NULL ) ? DTM . NULL : _nextsib2 ( _currentNode ) ; return returnNode ( makeNodeHandle ( _currentNode ) ) ; }
47312	public void endPrefixMapping ( String prefix ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . endPrefixMapping ( prefix ) ; }
47313	public TokenFilterBuilder withTimeLimit ( Duration timeLimit ) { tokenFilter . setTimeLimit ( timeLimit ) ; return this ; }
47332	protected boolean isRequestWithoutSessionChange ( String uri ) { Pattern f = filter ; return f != _NULL && f . matcher ( uri ) . matches ( ) ; }
47337	public void dragMouseMoved ( DragSourceDragEvent dsde ) { ( ( DragSourceMotionListener ) a ) . dragMouseMoved ( dsde ) ; ( ( DragSourceMotionListener ) b ) . dragMouseMoved ( dsde ) ; }
47340	public void zoom_out ( Point2D p_position ) { double zoom_factor = _NUM / ZOOM_FACTOR ; zoom ( zoom_factor , p_position ) ; }
47342	public static boolean jwtHasAuthorizedPartyClaim ( JwtClaimsSet jwtClaims ) throws AuthLoginException { String authorizedPartyClaim = ( String ) jwtClaims . getClaim ( AUTHORIZED_PARTY_CLAIM_KEY ) ; return ( authorizedPartyClaim != _NULL && ! authorizedPartyClaim . isEmpty ( ) ) ; }
47350	@ Override public StringBuffer format ( Date date , StringBuffer toAppendTo , FieldPosition pos ) { pos . beginIndex = pos . endIndex = _NUM ; return format ( date , toAppendTo , pos . getFieldDelegate ( ) ) ; }
47359	public boolean isSpecified ( int index ) { if ( index < _NUM || index >= getLength ( ) ) throw new ArrayIndexOutOfBoundsException ( _CHAR No attribute at index : _CHAR + index ) ; return specified [ index ] ; }
47369	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { Token created = adapter . create ( token ) ; handler . processResults ( created ) ; }
47383	public Builder withMessageDispatcherDuration ( long duration ) { config . setMessageDispatcherDuration ( duration ) ; return this ; }
47394	public Object object ( ) { if ( _NULL == m_obj ) setObject ( new Double ( m_val ) ) ; return m_obj ; }
47398	public PdfCanvas eoClip ( ) { contentStream . getOutputStream ( ) . writeBytes ( WStar ) ; return this ; }
47401	public static boolean isNodeTheSame ( Node node1 , Node node2 ) { if ( node1 instanceof DTMNodeProxy && node2 instanceof DTMNodeProxy ) return ( ( DTMNodeProxy ) node1 ) . equals ( ( DTMNodeProxy ) node2 ) ; else return ( node1 == node2 ) ; }
47409	public MaterialBarcodeScannerBuilder withOnly3DScanning ( ) { mBarcodeFormats = Barcode . QR_CODE | Barcode . DATA_MATRIX | Barcode . PDF417 | Barcode . AZTEC ; return this ; }
47417	public boolean checkPlayerCollided ( ) { Shape intersection = SVGPath . intersect ( getSpriteBoundsArray ( ) [ _NUM ] , SpriteHandler . getCurrentCast ( ) . get ( _NUM ) . getSpriteBoundsArray ( ) [ _NUM ] ) ; return intersection . getBoundsInParent ( ) . getWidth ( ) != - _NUM ; }
47430	@ Override public boolean onCreateOptionsMenu ( Menu menu ) { menu . add ( Menu . NONE , MENU_HELP , Menu . NONE , getString ( R . string . help ) ) . setIcon ( android . R . drawable . ic_menu_help ) . setAlphabeticShortcut ( _CHAR ) ; return super . onCreateOptionsMenu ( menu ) ; }
47438	public static void convertToXml ( File in , File out ) throws ParserConfigurationException , ParseException , SAXException , PropertyListFormatException , IOException { NSObject root = parse ( in ) ; saveAsXML ( root , out ) ; }
47448	public XObject operate ( XObject right ) throws javax . xml . transform . TransformerException { if ( XObject . CLASS_NUMBER == right . getType ( ) ) return right ; else return new XNumber ( right . num ( ) ) ; }
47473	boolean cancel0 ( ) { setPeriod ( - _NUM ) ; return _BOOL ; }
47478	@ Override public void removeParameter ( String name ) { parameters . remove ( name ) ; fireContainerEvent ( _CHAR removeParameter _CHAR , name ) ; }
47483	public ProductService retrieveProduct ( String productId , Handler < AsyncResult < Product >> resultHandler ) { delegate . retrieveProduct ( productId , resultHandler ) ; return this ; }
47485	public void invoke ( String callbackName , Marshallable callbackParam ) { TransactInfo transactInfo = TransactInfo . createCallbackInvoke ( mCallbackId , callbackName ) ; mJsBridge . dispatchServerCallback ( transactInfo , callbackParam ) ; }
47500	public void destroy ( ) throws LifecycleException { getServer ( ) ; server . destroy ( ) ; }
47516	public static void stop ( Context context ) { Intent intent = new Intent ( context , DebugPortService . class ) ; context . stopService ( intent ) ; }
47524	public boolean isNumeric ( ) { final Class c = getColumnClass ( ) ; return c . equals ( Integer . class ) || c . equals ( Float . class ) || c . equals ( Long . class ) || c . equals ( BigDecimal . class ) ; }
47538	public static XingFrame parseXingFrame ( ByteBuffer header ) throws InvalidAudioFrameException { XingFrame xingFrame = new XingFrame ( header ) ; return xingFrame ; }
47540	public ConnectionParameters ldapSecurePort ( int port ) { ldapsPort = port ; return this ; }
47589	public void actionPerformed ( ActionEvent e ) { start . actionPerformed ( e ) ; end . actionPerformed ( e ) ; }
47591	@ Override public synchronized void write ( int b ) throws IOException { super . write ( b ) ; this . branch . write ( b ) ; }
47616	public void addSubpath ( Subpath subpath ) { subpaths . add ( subpath ) ; currentPoint = subpath . getLastPoint ( ) ; }
47626	public static int px2sp ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
47629	public boolean canStripWhiteSpace ( ) { StylesheetRoot sroot = this . getStylesheetRoot ( ) ; return ( _NULL != sroot ) ? sroot . canStripWhiteSpace ( ) : _BOOL ; }
47630	public Builder removeAllOptionalAttributes ( ) { this . optionalAttributes . clear ( ) ; return this ; }
47631	public Shape createStrokedShape ( Shape s ) { sun . java2d . pipe . RenderingEngine re = sun . java2d . pipe . RenderingEngine . getInstance ( ) ; return re . createStrokedShape ( s , width , cap , join , miterlimit , dash , dash_phase ) ; }
47638	public < R > Kue on ( String eventType , Handler < Message < R >> handler ) { vertx . eventBus ( ) . consumer ( Kue . workerAddress ( eventType ) , handler ) ; return this ; }
47666	private void layout ( int width , int height ) { int itemsWidth = width - _NUM * PADDING ; itemsLayout . layout ( _NUM , _NUM , itemsWidth , height ) ; }
47673	public Builder singleValue ( boolean isSingleValue ) { this . isSingleValue = isSingleValue ; return this ; }
47703	public void addSeparator ( Dimension size ) { JToolBar . Separator s = new JToolBar . Separator ( size ) ; add ( s ) ; }
47738	public void dispatchAsComment ( org . xml . sax . ext . LexicalHandler lh ) throws org . xml . sax . SAXException { String str = str ( ) ; lh . comment ( str . toCharArray ( ) , _NUM , str . length ( ) ) ; }
47740	public static < T > T orderWrites ( final T ref ) { theVolatile = _NUM ; return ref ; }
47771	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { super . fixupVariables ( vars , globalsSize ) ; m_functionExpr . fixupVariables ( vars , globalsSize ) ; }
47790	public void removeNode ( int n ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; this . removeElement ( n ) ; }
47806	public T linkQualifier ( String linkQualifier ) { jsonValue . put ( LINK_QUALIFIER , linkQualifier ) ; return self ( ) ; }
47818	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR CUSTOMER \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
47825	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { error ( XSLTErrorResources . ER_CANNOT_ADD , new Object [ ] { newChild . getNodeName ( ) , this . getNodeName ( ) } ) ; return _NULL ; }
47831	public void removeCOSTemplate ( String name ) throws UMSException { Guid tGuid = new Guid ( COSTemplate . DEFAULT_NAMING_ATTR + _CHAR = _CHAR + name + _CHAR , _CHAR + this . getGuid ( ) ) ; this . removeChild ( tGuid ) ; }
47840	public boolean hasUnsupportedCriticalExtension ( ) { Set extns = getCriticalExtensionOIDs ( ) ; return extns != _NULL && ! extns . isEmpty ( ) ; }
47841	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
47852	public @ CheckForNull QueueTaskFuture run ( @ Nonnull String replacementMainScript , @ Nonnull Map < String , String > replacementLoadedScripts ) { Queue . Item item = run2 ( replacementMainScript , replacementLoadedScripts ) ; return item == _NULL ? _NULL : item . getFuture ( ) ; }
47870	private static boolean exceptionIsMapFailureException ( java . io . IOException e ) { if ( e . getMessage ( ) != _NULL && e . getMessage ( ) . contains ( _CHAR Map failed _CHAR ) ) return _BOOL ; return _BOOL ; }
47875	public JDialog createDialog ( Component parentComponent , String title ) throws HeadlessException { int style = styleFromMessageType ( getMessageType ( ) ) ; return createDialog ( parentComponent , title , style ) ; }
47878	public void preDeregister ( ) throws java . lang . Exception { TIMER_LOGGER . logp ( Level . FINER , Timer . class . getName ( ) , _CHAR preDeregister _CHAR , _CHAR stop the timer _CHAR ) ; stop ( ) ; }
47894	public static boolean isConnectedMobile ( Context context ) { NetworkInfo info = Connectivity . getNetworkInfo ( context ) ; return ( info != _NULL && info . isConnected ( ) && info . getType ( ) == ConnectivityManager . TYPE_MOBILE ) ; }
47901	protected boolean isIDPProxyEnabled ( String requestID ) { FSSessionManager sessionManager = FSSessionManager . getInstance ( hostMetaAlias ) ; return ( sessionManager . getProxySPDescriptor ( requestID ) != _NULL ) ; }
47905	private ConsulResponse < List < ConsulService >> lookupConsulService ( String serviceName , Long lastConsulIndexId ) { ConsulResponse < List < ConsulService >> response = client . lookupHealthService ( ConsulUtils . convertGroupToServiceName ( serviceName ) , lastConsulIndexId ) ; return response ; }
47911	public void createAdminData ( String backendName ) throws ADSContextException { createAdministrationSuffix ( backendName ) ; createAdminDataContainers ( ) ; }
47913	public static int mainRebuildIndex ( final String [ ] args , final boolean initializeServer , final OutputStream outStream , final OutputStream errStream ) { final RebuildIndex tool = new RebuildIndex ( ) ; return tool . process ( args , initializeServer , outStream , errStream ) ; }
47918	public void validateAttributeQuery ( HttpServletRequest request , HttpServletResponse response , AttributeQuery attrQuery , String attrAuthorityEntityID , String realm ) throws SAML2Exception { AttributeQueryUtil . verifyAttrQuerySignature ( attrQuery , attrAuthorityEntityID , realm ) ; ; }
47921	@ Override public void log ( String message , Throwable exception ) { myLogWriter . println ( message ) ; exception . printStackTrace ( myLogWriter ) ; }
47957	protected void parseEndChunk ( ) throws IOException { while ( parseHeader ( ) ) { } }
47961	public void update ( byte input ) { engineUpdate ( input ) ; state = IN_PROGRESS ; }
47967	public static long hash64 ( final String text ) { final byte [ ] bytes = text . getBytes ( ) ; return hash64 ( bytes , bytes . length ) ; }
47973	private void classFileEpilogue ( ) { mv . visitMaxs ( _NUM , _NUM ) ; mv . visitEnd ( ) ; }
47996	public static void main ( final String [ ] args ) { final int retCode = new AddRate ( ) . run ( args ) ; System . exit ( filterExitCode ( retCode ) ) ; }
48008	public void activate ( ) throws AMException , SSOException { setStringAttribute ( statusAN , _CHAR active _CHAR ) ; store ( ) ; }
48016	public int showOpenDialog ( Component parent ) throws HeadlessException { setDialogType ( OPEN_DIALOG ) ; return showDialog ( parent , _NULL ) ; }
48018	public static String decodePassword ( String password ) { String decodedPassword = AccessController . doPrivileged ( new DecodeAction ( password ) ) ; return decodedPassword == _NULL ? password : decodedPassword ; }
48021	public final void mouseReleased ( MouseEvent e ) { dragActive = _BOOL ; fire ( ) ; }
48026	public final void clearPassword ( ) { Arrays . fill ( password , _CHAR ) ; password = _NULL ; }
48028	public void addAttribute ( Object key , Object value ) { keys . addElement ( key ) ; data . addElement ( value ) ; }
48037	protected void connected ( Connection connection ) { policy . setSelectedProxy ( connection . getRoute ( ) . getProxy ( ) ) ; connected = _BOOL ; }
48042	public Builder addPatterns ( Set < String > patterns ) { this . patterns . addAll ( patterns ) ; return this ; }
48049	void replacePolicyInResourceTree ( ServiceTypeManager svtm , SSOToken token , Policy oldPolicy , Policy newPolicy ) throws PolicyException , SSOException { removePolicyFromResourceTree ( svtm , token , oldPolicy ) ; addPolicyToResourceTree ( svtm , token , newPolicy ) ; }
48056	public ConfigParameters configurationFile ( String file ) { configurationFile = file ; return this ; }
48060	void rescheduleMin ( long newTime ) { queue [ _NUM ] . nextExecutionTime = newTime ; fixDown ( _NUM ) ; }
48064	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; this . config = config ; }
48070	public ProductService addProduct ( Product product , Handler < AsyncResult < Void >> resultHandler ) { delegate . addProduct ( product , resultHandler ) ; return this ; }
48102	void noteItem ( ) { ++ items ; notifyListener ( ) ; }
48109	void validateOptions ( LocalizableMessageBuilder buf ) { validateGlobalOptions ( buf ) ; validateSubcommandOptions ( buf ) ; }
48113	BigInteger toBigInteger ( int sign ) { if ( intLen == _NUM || sign == _NUM ) return BigInteger . ZERO ; return new BigInteger ( getMagnitudeArray ( ) , sign ) ; }
48119	public PdfIndirectReference createNextIndirectReference ( ) { checkClosingStatus ( ) ; return xref . createNextIndirectReference ( this ) ; }
48120	public boolean offerFirst ( E e ) { addFirst ( e ) ; return _BOOL ; }
48123	public boolean equals ( Object other ) { if ( other instanceof DerInputBuffer ) return equals ( ( DerInputBuffer ) other ) ; else return _BOOL ; }
48128	static MemberName generateCustomizedCode ( LambdaForm form , MethodType invokerType ) { InvokerBytecodeGenerator g = new InvokerBytecodeGenerator ( _CHAR MH _CHAR , form , invokerType ) ; return g . loadMethod ( g . generateCustomizedCodeBytes ( ) ) ; }
48140	public static void main ( String [ ] args ) { ControlPanelSplashScreen screen = new ControlPanelSplashScreen ( ) ; screen . display ( args ) ; }
48141	public final void calcScore ( ) { m_score = SCORE_OTHER ; if ( _NULL == m_targetString ) calcTargetString ( ) ; }
48145	static boolean packageHasActivities ( Context context , String packageName , UserHandleCompat user ) { final LauncherAppsCompat launcherApps = LauncherAppsCompat . getInstance ( context ) ; return launcherApps . getActivityList ( packageName , user ) . size ( ) > _NUM ; }
48157	public Builder withGoogleEndpoint ( String googleEndpoint ) { config . setGoogleEndpoint ( googleEndpoint ) ; return this ; }
48170	public BaseViewHolder addOnLongClickListener ( int viewId ) { itemChildLongClickViewIds . add ( viewId ) ; return this ; }
48173	public BuilderImage < T > size ( Size size ) { this . config . setSize ( size ) ; return this ; }
48174	@ Override public void accept ( final MethodVisitor mv ) { mv . visitInsn ( opcode ) ; acceptAnnotations ( mv ) ; }
48176	public static void replaceAttributeSchema ( String serviceName , String subSchemaName , String schemaType , String attributeName , SSOToken adminToken , Node attributeSchemaNode ) throws UpgradeException { ServiceSchema ss = getServiceSchema ( serviceName , subSchemaName , schemaType , adminToken ) ; replaceAttributeSchema ( ss , attributeName , attributeSchemaNode ) ; }
48180	public boolean isVorbisCommentHeader ( byte [ ] headerData ) { String vorbis = Utils . getString ( headerData , VorbisHeader . FIELD_CAPTURE_PATTERN_POS , VorbisHeader . FIELD_CAPTURE_PATTERN_LENGTH , _CHAR ISO - _NUM - _NUM _CHAR ) ; return ! ( headerData [ VorbisHeader . FIELD_PACKET_TYPE_POS ] != VorbisPacketType . COMMENT_HEADER . getType ( ) || ! vorbis . equals ( VorbisHeader . CAPTURE_PATTERN ) ) ; }
48202	public Name add ( String comp ) throws InvalidNameException { impl . add ( comp ) ; return this ; }
48206	private Border createNonRolloverToggleBorder ( ) { UIDefaults table = UIManager . getLookAndFeelDefaults ( ) ; return new CompoundBorder ( new BasicBorders . RadioButtonBorder ( table . getColor ( _CHAR ToggleButton . shadow _CHAR ) , table . getColor ( _CHAR ToggleButton . darkShadow _CHAR ) , table . getColor ( _CHAR ToggleButton . light _CHAR ) , table . getColor ( _CHAR ToggleButton . highlight _CHAR ) ) , new BasicBorders . RolloverMarginBorder ( ) ) ; }
48209	private int performModifyOperation ( boolean authenticate ) throws Exception { String path = TestCaseUtils . createTempFile ( _CHAR dn : o = rejectTestCase , o = test _CHAR , _CHAR changetype : modify _CHAR , _CHAR replace : description _CHAR , _CHAR description : New Description _CHAR ) ; return LDAPModify . mainModify ( modifyArgs ( authenticate , path ) , _BOOL , _NULL , _NULL ) ; }
48212	public Builder requiredAttributes ( final Collection < String > attributeNamesOrOIDs ) { this . requiredAttributeOIDs . addAll ( attributeNamesOrOIDs ) ; return this ; }
48230	public Builder removeName ( final String name ) { this . names . remove ( name ) ; return this ; }
48238	public int elementAt ( int i ) { if ( _NULL == m_map ) return DTM . NULL ; return m_map [ i ] ; }
48239	@ Deactivate public void deactivate ( @ SuppressWarnings ( _CHAR unused _CHAR ) ComponentContext context ) { logger . debug ( _CHAR Deactivating key store service _CHAR ) ; store = _NULL ; }
48246	public void addNamedDestination ( String key , PdfObject value ) { checkClosingStatus ( ) ; catalog . addNamedDestination ( key , value ) ; }
48274	public Set searchAllRoles ( String wildcard , Map avPairs , int level ) throws AMException , SSOException { int [ ] objectTypes = { AMObject . ROLE , AMObject . FILTERED_ROLE } ; return searchObjects ( objectTypes , wildcard , avPairs , level ) ; }
48286	public static String rdnValue ( RDN rdn ) { Reject . ifTrue ( rdn . isMultiValued ( ) , _CHAR Multivalued RDNs not supported _CHAR ) ; return rdn . getFirstAVA ( ) . getAttributeValue ( ) . toString ( ) ; }
48309	public boolean offerLast ( E e ) { addLast ( e ) ; return _BOOL ; }
48313	void add ( JScrollPane scroll , Point p ) { scrolls . add ( scroll ) ; points . add ( p ) ; }
48334	@ Override public void clear ( ) { offset = _NUM ; length = _NUM ; }
48345	public final static int primaryOrder ( int order ) { order & = RBCollationTables . PRIMARYORDERMASK ; return ( order >> > RBCollationTables . PRIMARYORDERSHIFT ) ; }
48351	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
48356	public void updateUI ( ) { setUI ( ( SliderUI ) UIManager . getUI ( this ) ) ; updateLabelUIs ( ) ; }
48360	private void writeObject ( ObjectOutputStream oos ) throws IOException { if ( ! equals ( beanContextChildPeer ) && ! ( beanContextChildPeer instanceof Serializable ) ) throw new IOException ( _CHAR BeanContextChildSupport beanContextChildPeer not Serializable _CHAR ) ; else oos . defaultWriteObject ( ) ; }
48367	private void writeObject ( java . io . ObjectOutputStream p_stream ) throws java . io . IOException { p_stream . defaultWriteObject ( ) ; p_stream . writeInt ( trace_angle_restriction . get_no ( ) ) ; }
48371	public static void shutdown ( ) throws IOException { reset ( ) ; mockWebServer . shutdown ( ) ; }
48387	public static < A extends Annotation > A createAnnotation ( Class < ? extends Annotation > annotationType , AnnotationMember [ ] elements ) { AnnotationFactory factory = new AnnotationFactory ( annotationType , elements ) ; return ( A ) Proxy . newProxyInstance ( annotationType . getClassLoader ( ) , new Class [ ] { annotationType } , factory ) ; }
48391	public void yypushback ( int number ) { if ( number > yylength ( ) ) zzScanError ( ZZ_PUSHBACK_2BIG ) ; zzMarkedPos -= number ; }
48392	public static ArgumentException missingValueInPropertyArgument ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_VALUE_IN_PROPERTY_VALUE . get ( arg ) ; return new ArgumentException ( msg ) ; }
48405	public static boolean checkSecurityToken ( Object name , Object token ) { Object refToken = securityTokens . get ( name ) ; return ( refToken == _NULL || refToken . equals ( token ) ) ; }
48406	void fullyLock ( ) { putLock . lock ( ) ; takeLock . lock ( ) ; }
48409	protected void checkOuputStreams ( ByteStringBuilder out , ByteStringBuilder err , Object expectedOutput , Object expectedError ) throws Exception { checkOutputStream ( out , expectedOutput ) ; checkOutputStream ( err , expectedError ) ; }
48412	public static ArgumentException missingSeparatorInPropertyArgument ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_SEPARATOR_IN_PROPERTY_VALUE . get ( arg ) ; return new ArgumentException ( msg ) ; }
48413	public final static String formatRequestLine ( final RequestLine reqline , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicLineFormatter . DEFAULT ; return formatter . formatRequestLine ( _NULL , reqline ) . toString ( ) ; }
48420	@ VisibleForTesting static boolean isTextualContent ( final ContentTypeHeader contentType ) { String type = ( contentType . getType ( ) != _NULL ? contentType . getType ( ) . toLowerCase ( ) : _NULL ) ; return contentType . getCharset ( ) != _NULL || ( type != _NULL && ( TEXT_TYPES . contains ( type ) || type . startsWith ( _CHAR text / _CHAR ) ) ) ; }
48422	public void startPreserving ( ) throws org . xml . sax . SAXException { m_preserves . push ( _BOOL ) ; m_ispreserve = _BOOL ; }
48429	public static BindResult newBindResult ( final ResultCode resultCode ) { Reject . ifNull ( resultCode ) ; return new BindResultImpl ( resultCode ) ; }
48432	public final int hashCode ( ) { if ( address ( ) == _NULL ) return type ( ) . hashCode ( ) ; return type ( ) . hashCode ( ) + address ( ) . hashCode ( ) ; }
48442	public void insertRecord ( final int row , final JKTableRecord record ) { this . records . insertElementAt ( record , row ) ; fireTableRowsInserted ( row , row ) ; }
48451	public void reset ( ) { engineReset ( ) ; state = INITIAL ; }
48482	public Builder implementation ( final MatchingRuleImpl implementation ) { this . impl = implementation ; return this ; }
48497	public synchronized void terminate ( ) { this . shouldTerminate = _BOOL ; this . notify ( ) ; }
48510	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { adapter . delete ( tokenId , etag ) ; handler . processResults ( tokenId ) ; }
48544	public boolean isCurrency ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . currency ; }
48549	public void handleButton3Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToPolicyViewBean ( ) ; }
48551	public void updateStandardIndex ( IndexDescriptor index ) { standardIndexPanel . update ( index ) ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , standardIndexPanel . getTitle ( ) . toString ( ) ) ; }
48584	public ScriptCompiler add ( URL classPath ) { compiler . add ( classPath ) ; return this ; }
48594	private void reportInterruptAfterWait ( int interruptMode ) throws InterruptedException { if ( interruptMode == THROW_IE ) throw new InterruptedException ( ) ; else if ( interruptMode == REINTERRUPT ) selfInterrupt ( ) ; }
48609	public OrderService createOrder ( Order order , Handler < AsyncResult < Void >> resultHandler ) { delegate . createOrder ( order , resultHandler ) ; return this ; }
48624	public void processLECPAuthnRequest ( FSAuthnRequest authnRequest ) { processAuthnRequest ( authnRequest , _BOOL ) ; return ; }
48625	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR CUSTOMER \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR NAME \ _CHAR TEXT NOT NULL ) ; _CHAR ) ; }
48636	public SerializationHandler createSerializationHandler ( Result outputTarget ) throws TransformerException { SerializationHandler xoh = createSerializationHandler ( outputTarget , getOutputFormat ( ) ) ; return xoh ; }
48642	public void windowGainedFocus ( WindowEvent e ) { ( ( WindowFocusListener ) a ) . windowGainedFocus ( e ) ; ( ( WindowFocusListener ) b ) . windowGainedFocus ( e ) ; }
48673	@ Override public void onPause ( ) { super . onPause ( ) ; mWebView . onPause ( ) ; }
48693	public void ensureCapacity ( int additionalCapacity ) { int sizeNeeded = size + additionalCapacity ; if ( sizeNeeded >= threshold ) resize ( nextPowerOfTwo ( ( int ) ( sizeNeeded / loadFactor ) ) ) ; }
48695	public boolean isDeclared ( int index ) { if ( index < _NUM || index >= getLength ( ) ) throw new ArrayIndexOutOfBoundsException ( _CHAR No attribute at index : _CHAR + index ) ; return declared [ index ] ; }
48699	public void beginMonitoringOf ( final InetAddress inetAddress ) { final long socketIdentifier = SocketIdentifier . fromInet4Address ( inetAddress ) ; candidateSockets . beginMonitoringSocketIdentifier ( new InetSocketAddress ( inetAddress , _NUM ) , socketIdentifier ) ; }
48707	public PdfCanvas newlineText ( ) { contentStream . getOutputStream ( ) . writeBytes ( TStar ) ; return this ; }
48710	public static GetConnectionIDExtendedResult newResult ( final ResultCode resultCode ) { Reject . ifNull ( resultCode ) ; return new GetConnectionIDExtendedResult ( resultCode ) ; }
48729	static ObjectName createObjectName ( String domain , User user ) throws MalformedObjectNameException { ObjectName name = new ObjectName ( domain + _CHAR : type = User , username = _CHAR + ObjectName . quote ( user . getUsername ( ) ) + _CHAR , database = _CHAR + user . getUserDatabase ( ) . getId ( ) ) ; return name ; }
48730	public AttributeParser parseAttribute ( String attributeDescription ) throws LocalizedIllegalArgumentException , NullPointerException { Iterator < Attribute > it = getAllAttributes ( attributeDescription ) . iterator ( ) ; return AttributeParser . parseAttribute ( it . hasNext ( ) ? it . next ( ) : _NULL ) ; }
48737	@ Override public void clear ( ) { this . callStack . clear ( ) ; super . clear ( ) ; }
48758	public boolean add ( HDR objectToAdd ) { hlist . add ( ( HDR ) objectToAdd ) ; return _BOOL ; }
48760	public void ancestorMoved ( HierarchyEvent e ) { ( ( HierarchyBoundsListener ) a ) . ancestorMoved ( e ) ; ( ( HierarchyBoundsListener ) b ) . ancestorMoved ( e ) ; }
48807	public PdfCollectionSchema addField ( String name , PdfCollectionField field ) { getPdfObject ( ) . put ( new PdfName ( name ) , field . getPdfObject ( ) ) ; return this ; }
48809	private void initializeSASLMechanisms ( ) throws ConfigException , InitializationException { saslConfigManager = new SASLConfigManager ( serverContext ) ; saslConfigManager . initializeSASLMechanismHandlers ( ) ; }
48816	static void writeShort ( final byte [ ] b , final int index , final int s ) { b [ index ] = ( byte ) ( s >> > _NUM ) ; b [ index + _NUM ] = ( byte ) s ; }
48824	public void start_scope ( LogfileScope p_logfile_scope , int p_int_value ) { start_scope ( p_logfile_scope ) ; add_int ( p_int_value ) ; }
48826	protected void diagnoseLineNumber ( Expression expr ) { ElemTemplateElement e = getElemFromExpression ( expr ) ; System . err . println ( _CHAR _CHAR + e . getSystemId ( ) + _CHAR Line _CHAR + e . getLineNumber ( ) ) ; }
48850	public int doFinal ( byte [ ] output , int outputOffset ) throws ShortBufferException , IllegalBlockSizeException , BadPaddingException { checkState ( ) ; return OpenSslNative . doFinalByteArray ( context , output , outputOffset , output . length - outputOffset ) ; }
48857	SmsRouteTreeBuilder subTrees ( SmsRouteTreeBuilder ... subTreeBuilders ) { this . subTreeBuilders = asSet ( subTreeBuilders ) ; return this ; }
48866	public JsonArray add ( Object value ) { list . add ( value ) ; return this ; }
48875	protected void freeBuffers ( ) { CryptoInputStream . freeDirectBuffer ( inBuffer ) ; CryptoInputStream . freeDirectBuffer ( outBuffer ) ; }
48901	@ Override public boolean onCreateOptionsMenu ( Menu menu ) { menu . add ( Menu . NONE , MENU_HELP , Menu . NONE , getString ( R . string . help ) ) . setIcon ( android . R . drawable . ic_menu_help ) . setAlphabeticShortcut ( _CHAR ) ; return super . onCreateOptionsMenu ( menu ) ; }
48906	public synchronized ContextHolder put ( String key , ContextHolder contextHolder ) { updateCacheSize ( ) ; return cache . put ( key , contextHolder ) ; }
48908	public static void main ( String [ ] args ) throws FileNotFoundException , UnsupportedEncodingException { PrimaryIndexBucketGeneratorImpl gen = new PrimaryIndexBucketGeneratorImpl ( args ) ; gen . generateAndWrite ( ) ; }
48917	public boolean isRemote ( ) { int index = combo . getSelectedIndex ( ) ; return index == _NUM ; }
48927	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR URL_COLLECT \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
48929	public static void addAttributeToSchema ( String serviceName , String subSchemaName , String schemaType , Node attributeSchemaNode , SSOToken adminToken ) throws UpgradeException { ServiceSchema ss = getServiceSchema ( serviceName , subSchemaName , schemaType , adminToken ) ; addAttributeToSchema ( ss , attributeSchemaNode ) ; }
48934	protected void error ( String msg , Object args [ ] , Exception e ) throws org . xml . sax . SAXException { String formattedMsg = XSLMessages . createMessage ( msg , args ) ; error ( formattedMsg , e ) ; }
48938	public static int px2dip ( Context context , float pxValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( pxValue / scale + _NUM . _NUM ) ; }
48965	public static ArgumentException unknownTypeForCategory ( String typeName , String categoryName ) { LocalizableMessage msg = ERR_DSCFG_ERROR_CATEGORY_TYPE_UNRECOGNIZED . get ( typeName , categoryName ) ; return new ArgumentException ( msg ) ; }
48968	public static String ensureRight ( final String value , final String suffix , boolean caseSensitive ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return endsWith ( value , suffix , caseSensitive ) ? value : append ( value , suffix ) ; }
48970	protected Object validateExchange ( Object exchange ) { Objects . requireNonNull ( exchange , _CHAR The exchange object ca n _CHAR_CHAR ) ; return exchange ; }
48986	public int countTokenEntries ( TokenType tokenType ) throws CoreTokenException { final TokenFilter tokenFilter = new TokenFilterBuilder ( ) . returnAttribute ( CoreTokenField . TOKEN_ID ) . and ( ) . withAttribute ( CoreTokenField . TOKEN_TYPE , tokenType ) . build ( ) ; return store . attributeQuery ( tokenFilter ) . size ( ) ; }
48989	public void insertNode ( Node n , int pos ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESET_NOT_MUTABLE , _NULL ) ) ; insertElementAt ( n , pos ) ; }
49003	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
49004	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49007	public void addCleanIndex ( String index ) { Reject . ifNull ( index ) ; cleanList . add ( index ) ; }
49014	public final void writeByte ( int v ) throws IOException { out . write ( v ) ; incCount ( _NUM ) ; }
49022	private int yearMonthToDayOfYear ( int prolepticYear , int month ) { int epochMonthFirst = yearToEpochMonth ( prolepticYear ) ; return epochMonthToEpochDay ( epochMonthFirst + month ) - epochMonthToEpochDay ( epochMonthFirst ) ; }
49025	public void redo ( ) { super . redo ( ) ; this . object . restoreState ( postState ) ; }
49030	public boolean beginContentHrefExceptionDisplay ( ChildDisplayEvent event ) { setDisplayFieldValue ( TXT_GOTO_LOGIN_AFTER_FAIL , rb . getString ( _CHAR gotoLoginAfterFail _CHAR ) ) ; return _BOOL ; }
49038	@ Override public void onRenderSurfaceSizeChanged ( GL10 gl , int width , int height ) { super . onRenderSurfaceSizeChanged ( gl , width , height ) ; mSceneCameraConfigured = _BOOL ; }
49052	public static String defaultGroupContainerName ( ) { initialize ( ) ; return ( defaultGC ) ; }
49060	public static < T > List < T > nCopies ( int n , T o ) { if ( n < _NUM ) throw new IllegalArgumentException ( _CHAR List length = _CHAR + n ) ; return new CopiesList < > ( n , o ) ; }
49070	public boolean isIgnorableWhitespace ( Text node ) { boolean isIgnorable = _BOOL ; return isIgnorable ; }
49080	public void addUsers ( Set users ) throws AMException , SSOException { SSOTokenManager . getInstance ( ) . validateToken ( super . token ) ; dsServices . modifyMemberShip ( super . token , users , super . entryDN , ASSIGNABLE_DYNAMIC_GROUP , ADD_MEMBER ) ; }
49082	public SearchResultEntry searchSingleEntry ( SearchRequest request ) throws LdapException { addControls ( request ) ; return conn . getConnection ( ) . searchSingleEntry ( request ) ; }
49086	public double num ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_NUMBER , new Object [ ] { getTypeString ( ) } ) ; return _NUM . _NUM ; }
49106	public void handleButton1Request ( RequestInvocationEvent event ) { CloseWindowViewBean vb = ( CloseWindowViewBean ) getViewBean ( CloseWindowViewBean . class ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
49115	@ Override public boolean onCreate ( ) { mDbHelper = new DatabaseHelper ( getContext ( ) ) ; return ( _NULL == mDbHelper ) ? _BOOL : _BOOL ; }
49119	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49138	public Tasker addFinisher ( TaskFinisher finisher ) { this . finisher = finisher ; return this ; }
49145	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiToolTipUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiToolTipUI ) mui ) . uis , a ) ; }
49155	public void treeDidChange ( ) { revalidate ( ) ; repaint ( ) ; }
49160	public synchronized void clearCache ( ) { idRepoCache . clear ( ) ; initializeCache ( ) ; }
49170	private synchronized void writeObject ( java . io . ObjectOutputStream s ) throws IOException { if ( actions == _NULL ) getActions ( ) ; s . defaultWriteObject ( ) ; }
49179	public static boolean isEncoded ( final HttpEntity entity ) { final Header contentType = entity . getContentType ( ) ; return ( contentType != _NULL && contentType . getValue ( ) . equalsIgnoreCase ( CONTENT_TYPE ) ) ; }
49195	public static Collection < Tag > values ( ) { RootCfgDefn . getInstance ( ) ; return Collections . unmodifiableCollection ( TAGS . values ( ) ) ; }
49197	private void readObject ( ObjectInputStream s ) throws ClassNotFoundException , IOException { s . defaultReadObject ( ) ; myMimeType = new MimeType ( ( String ) s . readObject ( ) ) ; }
49205	public boolean containsAny ( Collection < ? > collection ) { for ( Object item : collection ) if ( this . contains ( item ) ) return _BOOL ; return _BOOL ; }
49232	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; init ( getName ( ) ) ; }
49238	public static Attributes parseAttributes ( ParserController pc , JspReader reader ) throws JasperException { Parser tmpParser = new Parser ( pc , reader , _BOOL , _BOOL , _NULL ) ; return tmpParser . parseAttributes ( _BOOL ) ; }
49244	void replacePolicyInResourceTree ( Policy oldPolicy , Policy newPolicy ) throws PolicyException , SSOException { removePolicyFromResourceTree ( oldPolicy ) ; addPolicyToResourceTree ( newPolicy ) ; }
49245	public static ArgumentException missingSeparatorInPropertyModification ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_SEPARATOR_IN_PROPERTY_MOD . get ( arg ) ; return new ArgumentException ( msg ) ; }
49251	public static long parseLong ( String lexicalXSDLong ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseLong ( lexicalXSDLong ) ; }
49255	public void incrementTotalReadRecordCount ( ) { totalReadRecordCount ++ ; totalRequests ++ ; }
49258	public static ArgumentException missingMandatoryNonInteractiveArgument ( Argument arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_MISSING_NON_INTERACTIVE_ARG . get ( arg . getLongIdentifier ( ) ) ; return new ArgumentException ( msg ) ; }
49270	public KeyStoreJwtTokenConfig withTokenLifeTimeInSeconds ( long tokenLifeTimeInSeconds ) { this . tokenLifeTimeInSeconds = tokenLifeTimeInSeconds ; return this ; }
49284	final boolean shouldMapTextChar ( int value ) { if ( value < ASCII_MAX ) return shouldMapTextChar_ASCII [ value ] ; return get ( value ) ; }
49310	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49312	public static ExtOp decode ( EnumTargetOperator operator , String expr ) throws AciException { Set < String > extOpOIDs = Aci . decodeOID ( expr , WARN_ACI_SYNTAX_INVALID_TARGEXTOP_EXPRESSION . get ( expr ) ) ; return new ExtOp ( operator , extOpOIDs ) ; }
49320	public static String firstValueAsString ( Entry entry , String attrDesc ) { Attribute attr = entry . getAttribute ( attrDesc ) ; return ( attr != _NULL && ! attr . isEmpty ( ) ) ? attr . firstValueAsString ( ) : _NULL ; }
49326	@ Override public void onMessageReceived ( Context context , String from , Bundle data ) { String notificationMesg = data . getString ( _CHAR mp_message _CHAR ) ; Log . d ( _CHAR MP _CHAR , notificationMesg ) ; }
49336	private void siftUp ( int k , E x ) { if ( comparator != _NULL ) siftUpUsingComparator ( k , x ) ; else siftUpComparable ( k , x ) ; }
49347	public static boolean isGenericHTMLClient ( String clientType ) { String type = getProperty ( clientType , _CHAR genericHTML _CHAR ) ; return type == _NULL || _CHAR _BOOL _CHAR . equals ( type ) ; }
49355	public void changedUpdate ( DocumentEvent e , Shape a , ViewFactory f ) { font = _NULL ; super . changedUpdate ( e , a , f ) ; }
49358	public Query hasPhoneNumber ( ) { defaultWhere = addWhere ( defaultWhere , Where . notEqualTo ( ContactsContract . Data . HAS_PHONE_NUMBER , _NUM ) ) ; return this ; }
49360	public void insert ( BrdItem p_item ) { for ( AwtreeShapeSearch curr_tree : search_trees ) curr_tree . insert ( p_item ) ; p_item . set_on_the_board ( _BOOL ) ; }
49372	public void windowClosing ( WindowEvent e ) { ( ( WindowListener ) a ) . windowClosing ( e ) ; ( ( WindowListener ) b ) . windowClosing ( e ) ; }
49376	public void drawResultBitmap ( Bitmap barcode ) { resultBitmap = barcode ; invalidate ( ) ; }
49384	public Builder withSampleable ( boolean sampleable ) { this . sampleable = sampleable ; return this ; }
49390	public Object remove ( Object key ) { checkKey ( key ) ; return map . remove ( key ) ; }
49397	public boolean nextIsSep ( ) { if ( Character . isLetterOrDigit ( str . charAt ( currentPosition ) ) ) return _BOOL ; else return _BOOL ; }
49403	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49404	public T mapping ( String mapping ) { jsonValue . put ( MAPPING , mapping ) ; return self ( ) ; }
49461	public String stripContentExtras ( String contentType ) { int index = contentType . indexOf ( _CHAR ) ; return ( index >= _NUM ) ? contentType . substring ( _NUM , index ) : contentType ; }
49462	@ Override public void nullifyUsedVars ( ) { authLevel = _NULL ; amAuthOATH = _NULL ; }
49468	public ProductService retrieveAllProducts ( Handler < AsyncResult < List < Product >> > resultHandler ) { delegate . retrieveAllProducts ( resultHandler ) ; return this ; }
49472	@ Override public void deleteITable ( IndexIdentifier indexId ) { String tableToDelete = Utils . calculateITableName ( indexId ) ; deleteITable ( tableToDelete ) ; }
49473	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
49481	public ConnectionEntryReader search ( SearchRequest request ) { addControls ( request ) ; return conn . getConnection ( ) . search ( request ) ; }
49506	public void invalidate ( ) { isValid = _BOOL ; sessionContext = _NULL ; }
49521	@ Override protected Object createCtsMonitoringMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { ctsMonitoringGroup = new CtsMonitoringImpl < OperationType , TokenType > ( this , OperationType . class , TokenType . class ) ; return ctsMonitoringGroup ; }
49523	public void install ( JFormattedTextField ftf ) { super . install ( ftf ) ; positionCursorAtInitialLocation ( ) ; }
49525	public long length ( ) throws SerialException { isValid ( ) ; return len ; }
49536	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
49537	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
49539	public JobService removeJob ( long id , Handler < AsyncResult < Void >> handler ) { delegate . removeJob ( id , handler ) ; return this ; }
49546	@ SuppressWarnings ( _CHAR unused _CHAR ) public float dipToPixel ( float dip ) { DisplayMetrics metrics = this . getDisplayMetrics ( this . getContext ( ) ) ; return dip * metrics . density ; }
49552	public DispatchHandler addUnconditionalBinding ( Handler handler , URI baseURI ) { bindings . add ( new Binding ( _NULL , handler , baseURI ) ) ; return this ; }
49555	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; }
49560	public WhereBuilder and ( WhereBuilder where ) { String condition = whereItems . size ( ) == _NUM ? _CHAR _CHAR : _CHAR AND _CHAR ; return expr ( condition + _CHAR ( _CHAR + where . toString ( ) + _CHAR ) _CHAR ) ; }
49562	synchronized void receivedLast ( ) { closedByWriter = _BOOL ; notifyAll ( ) ; }
49564	public static byte [ ] decodeWebSafe ( String s ) throws Base64DecoderException { byte [ ] bytes = s . getBytes ( ) ; return decodeWebSafe ( bytes , _NUM , bytes . length ) ; }
49583	public MessageDispatcher build ( long maxSize , int concurrency , long expireAfter , Debug debug ) { Cache < String , MessagePromise > cache = CacheBuilder . newBuilder ( ) . concurrencyLevel ( concurrency ) . maximumSize ( maxSize ) . expireAfterWrite ( expireAfter , TimeUnit . SECONDS ) . build ( ) ; return new MessageDispatcher ( cache , debug ) ; }
49596	private void clearGlobals ( ) { ac = _NULL ; cookie = _NULL ; }
49633	public void __setDaoSession ( DaoSession daoSession ) { this . daoSession = daoSession ; myDao = daoSession != _NULL ? daoSession . getOrderDao ( ) : _NULL ; }
49634	public HttpParams copy ( ) { HttpParams clone = this . local . copy ( ) ; return new DefaultedHttpParams ( clone , this . defaults ) ; }
49637	public synchronized void clearCache ( ) { idRepoCache . invalidateAll ( ) ; initializeCache ( ) ; }
49649	@ Override public final boolean cancellationRequested ( ) { cancellationWasRequested = _BOOL ; return _BOOL ; }
49651	private void initSkinLoader ( ) { SkinManager . getInstance ( ) . init ( this ) ; SkinManager . getInstance ( ) . load ( ) ; }
49661	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiScrollPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiScrollPaneUI ) mui ) . uis , a ) ; }
49679	public static Executor createExecutor ( int threadPoolSize , int threadPriority ) { BlockingQueue < Runnable > taskQueue = new LinkedBlockingQueue < Runnable > ( ) ; return new ThreadPoolExecutor ( threadPoolSize , threadPoolSize , _NUM , TimeUnit . MILLISECONDS , taskQueue , createThreadFactory ( threadPriority , _CHAR uil - pool - _CHAR ) ) ; }
49703	public void start_scope ( LogfileScope p_logfile_scope , PlaPointFloat p_start_corner ) { start_scope ( p_logfile_scope ) ; add_corner ( p_start_corner ) ; }
49719	@ Override public void contextInitialized ( ServletContextEvent event ) { this . context = event . getServletContext ( ) ; log ( _CHAR contextInitialized ( ) _CHAR ) ; }
49720	public ByteArrayBuilder appendInt ( int i ) { builder . appendInt ( i ) ; return this ; }
49721	public RxGalleryFinal cropAllowedGestures ( @ UCropActivity . GestureTypes int tabScale , @ UCropActivity . GestureTypes int tabRotate , @ UCropActivity . GestureTypes int tabAspectRatio ) { configuration . setAllowedGestures ( new int [ ] { tabScale , tabRotate , tabAspectRatio } ) ; return this ; }
49728	public boolean isArmed ( ) { ButtonModel model = getModel ( ) ; return model . isArmed ( ) ; }
49740	public void quit ( ) { mQuit = _BOOL ; interrupt ( ) ; }
49765	@ Override public void recycle ( ) { contentLength =- _NUM ; remaining = _NUM ; }
49790	private void prepareAndStart ( ) { cleanup ( ) ; this . getJobFromBackend ( ) . setHandler ( _NULL ) ; }
49816	public void loadConfig ( String configUrl ) { this . configUrl = configUrl ; downloadConfig ( configUrl ) ; }
49821	public final static String formatHeader ( final Header header , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicLineFormatter . DEFAULT ; return formatter . formatHeader ( _NULL , header ) . toString ( ) ; }
49853	@ Override protected void onProviderChanged ( int appWidgetId , AppWidgetProviderInfo appWidget ) { LauncherAppWidgetProviderInfo info = LauncherAppWidgetProviderInfo . fromProviderInfo ( mLauncher , appWidget ) ; super . onProviderChanged ( appWidgetId , info ) ; }
49854	@ Override public void processChallenge ( final Header header ) throws MalformedChallengeException { super . processChallenge ( header ) ; this . complete = _BOOL ; }
49856	public void close ( ) throws IOException { in . close ( ) ; monitor . close ( ) ; }
49858	public RxGalleryFinal cropHideBottomControls ( boolean hide ) { configuration . setHideBottomControls ( hide ) ; return this ; }
49872	public final void pushCurrentNodeAndExpression ( int cn , int en ) { m_currentNodes . push ( cn ) ; m_currentExpressionNodes . push ( cn ) ; }
49882	private < T > void buildImpl ( PropertyDefinition < T > pd ) { T value = pd . decodeValue ( propertyStringValue ) ; this . impl = new Impl < > ( pd , value ) ; }
49918	public Builder removeOptionalAttribute ( String attributeNameOrOID ) { this . optionalAttributes . remove ( attributeNameOrOID ) ; return this ; }
49927	public synchronized void login ( String username , String password , String language ) throws XmlRpcFault { Map < ? , ? > response = invoke ( _CHAR LogIn _CHAR , username , password , language , useragent ) ; token = response . get ( _CHAR token _CHAR ) . toString ( ) ; }
49945	@ Fluent public Job onFailure ( Handler < JsonObject > failureHandler ) { this . on ( _CHAR failed _CHAR , _NULL ) ; return this ; }
49953	public boolean validateAttributes ( Map attributeSet ) throws SMSException { SMSEntry . validateToken ( ssm . getSSOToken ( ) ) ; return ( ss . validateAttributes ( ssm . getSSOToken ( ) , attributeSet , _BOOL , _NULL ) ) ; }
49955	public static void enqueueRequest ( Operation operation ) throws DirectoryException { checkCanEnqueueRequest ( operation , _BOOL ) ; directoryServer . workQueue . submitOperation ( operation ) ; }
49959	public void dragExit ( DragSourceEvent dse ) { ( ( DragSourceListener ) a ) . dragExit ( dse ) ; ( ( DragSourceListener ) b ) . dragExit ( dse ) ; }
49986	public void comment ( char ch [ ] , int start , int length ) throws SAXException { flushStartDoc ( ) ; if ( _NULL != m_resultLexicalHandler ) m_resultLexicalHandler . comment ( ch , start , length ) ; }
49988	@ Fluent public Job onProgress ( Handler < Integer > progressHandler ) { this . on ( _CHAR progress _CHAR , _NULL ) ; return this ; }
49995	public void clearInterceptors ( ) { clearRequestInterceptors ( ) ; clearResponseInterceptors ( ) ; }
50027	public SetupParameters baseDn ( String baseDn ) { this . baseDn = baseDn ; return this ; }
50032	public static AddRequest newAddRequest ( final String name ) { final Entry entry = new LinkedHashMapEntry ( ) . setName ( name ) ; return new AddRequestImpl ( entry ) ; }
50048	private void writeObject ( java . io . ObjectOutputStream out ) throws IOException { updateKeyMaskFields ( ) ; out . defaultWriteObject ( ) ; }
50076	final Node < E > succ ( Node < E > p ) { Node < E > next = p . next ; return ( p == next ) ? head : next ; }
50089	public static boolean compareRef ( Object a , Object b ) { if ( a == b ) return _BOOL ; return _BOOL ; }
50094	@ Override public void onUIReset ( PtrFrameLayout frame ) { mScale = _NUM ; mDrawable . stop ( ) ; }
50097	public Node elementAt ( int i ) { if ( _NULL == m_map ) return _NULL ; return m_map [ i ] ; }
50104	public void modify ( ModifyRequest request ) throws LdapException { addControls ( request ) ; conn . getConnection ( ) . modify ( request ) ; }
50106	public static GenericBindRequest newGenericBindRequest ( final byte authenticationType , final byte [ ] authenticationValue ) { Reject . ifNull ( authenticationValue ) ; return new GenericBindRequestImpl ( _CHAR _CHAR , authenticationType , authenticationValue ) ; }
50115	public void close ( ) throws java . io . IOException { isBack = _BOOL ; byteSource . close ( ) ; }
50132	public void updateCloud ( int pointCount , FloatBuffer pointBuffer ) { calculateColors ( pointCount , pointBuffer ) ; updatePoints ( pointCount , pointBuffer , mColorArray ) ; }
50134	public Builder trail ( boolean trail ) { this . trail = trail ; return this ; }
50171	EntryIDSet evaluate ( ) { appendToDebugBuffer ( _CHAR filter = _CHAR ) ; return evaluateFilter ( searchOp . getFilter ( ) ) ; }
50178	public synchronized long size ( ) throws IOException { initialize ( ) ; return size ; }
50183	public void addInternalFrameListener ( InternalFrameListener l ) { listenerList . add ( InternalFrameListener . class , l ) ; enableEvents ( _NUM ) ; }
50206	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { System . out . println ( _CHAR shootme : got an ACK ! _CHAR ) ; System . out . println ( _CHAR Dialog State = _CHAR + dialog . getState ( ) ) ; }
50214	public void reset ( ) { extensions = new Hashtable ( ) ; extOrdering = new Vector ( ) ; }
50258	public void leave ( MetricReference metricReference ) { Thread threadId = Thread . currentThread ( ) ; leave ( threadId , metricReference ) ; }
50265	private static int capacityForInitSize ( int size ) { int result = ( size >> _NUM ) + size ; return ( result & ~ ( MAXIMUM_CAPACITY - _NUM ) ) == _NUM ? result : MAXIMUM_CAPACITY ; }
50277	public Builder addPattern ( String pattern ) { patterns . add ( pattern ) ; return this ; }
50304	private static void executeWithLog ( Session session , String statement ) { logger . info ( _CHAR Executing CQL statement : _CHAR + statement ) ; session . execute ( statement ) ; }
50311	public void invalidateHeaders ( ) { mHeaderProvider . invalidate ( ) ; mHeaderRects . clear ( ) ; }
50322	void clear ( ) { clearInMemory ( ) ; save ( ) ; }
50329	private boolean journalRebuildRequired ( ) { final int redundantOpCompactThreshold = _NUM ; return redundantOpCount >= redundantOpCompactThreshold && redundantOpCount >= lruEntries . size ( ) ; }
50350	public Builder names ( final Collection < String > names ) { this . names . addAll ( names ) ; return this ; }
50351	private final boolean parkAndCheckInterrupt ( ) { LockSupport . park ( this ) ; return Thread . interrupted ( ) ; }
50362	@ Override public ConnectionChangeRecordWriter writeComment ( final CharSequence comment ) { Reject . ifNull ( comment ) ; return this ; }
50364	@ BeforeClass public static void beforeClass ( ) throws Exception { RestAssured . baseURI = BASE_URI ; RestAssured . port = PORT ; }
50365	public boolean webEnabled ( ) { String url = getWebEnabledURL ( ) ; return ( url != _NULL ) && ( url . length ( ) > _NUM ) ; }
50367	public AttributeSet parseDeclaration ( Reader r ) throws IOException { parse ( base , r , _BOOL , _BOOL ) ; return declaration . copyAttributes ( ) ; }
50368	public void handleButton2Request ( RequestInvocationEvent event ) { propertySheetModel . clear ( ) ; forwardTo ( ) ; }
50376	public void updateUI ( ) { setUI ( ( TextUI ) UIManager . getUI ( this ) ) ; invalidate ( ) ; }
50381	public static String printDate ( java . util . Calendar val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printDate ( val ) ; }
50393	public boolean isNodeDescendant ( DefaultMutableTreeNode anotherNode ) { if ( anotherNode == _NULL ) return _BOOL ; return anotherNode . isNodeAncestor ( this ) ; }
50394	protected String paramString ( ) { String tipTextString = ( tipText != _NULL ? tipText : _CHAR _CHAR ) ; return super . paramString ( ) + _CHAR , tipText = _CHAR + tipTextString ; }
50439	public void startCDATA ( ) throws org . xml . sax . SAXException { m_inCData = _BOOL ; append ( m_doc . createCDATASection ( _CHAR _CHAR ) ) ; }
50443	private void process ( ) { long curTime = System . currentTimeMillis ( ) ; this . job . setStarted_at ( curTime ) . set ( _CHAR started_at _CHAR , String . valueOf ( curTime ) ) . compose ( _NULL ) . setHandler ( _NULL ) ; }
50450	void notifyWidgetSizeChanged ( Launcher launcher ) { AppWidgetResizeFrame . updateWidgetSizeRanges ( hostView , launcher , spanX , spanY ) ; mHasNotifiedInitialWidgetSizeChanged = _BOOL ; }
50455	public void backup ( int amount ) { inBuf += amount ; if ( ( bufpos -= amount ) < _NUM ) bufpos += bufsize ; }
50456	private boolean flagPoleHit ( ) { Shape intersection = SVGPath . intersect ( spriteBoundsArray [ _NUM ] , SpriteHandler . getCurrentCast ( ) . get ( _NUM ) . getSpriteBounds ( ) ) ; return intersection . getBoundsInParent ( ) . getWidth ( ) != - _NUM ; }
50470	public void postTopic ( String title , String body , String nodeId , String access_token , Callback < TopicResponse > callback ) { topicApi = getRetrofitForSimpleJson ( ) . create ( TopicApi . class ) ; topicApi . postTopic ( title , body , nodeId , access_token ) . enqueue ( callback ) ; }
50475	public void sendSAXComment ( org . xml . sax . ext . LexicalHandler ch , int start , int length ) throws org . xml . sax . SAXException { String comment = getString ( start , length ) ; ch . comment ( comment . toCharArray ( ) , _NUM , length ) ; }
50485	@ Override public void finalize ( ) { listeners . clear ( ) ; backend . clear ( ) ; }
50495	public void addRepeatField ( RepeatField repeatField ) { if ( repeatField == _NULL ) throw new NullPointerException ( _CHAR _NULL repeatField _CHAR ) ; this . repeatList . add ( repeatField ) ; }
50509	@ Deprecated public void write ( byte b [ ] , int off , int len ) { if ( len < _NUM ) throw new ArrayIndexOutOfBoundsException ( len ) ; for ( int i = _NUM ; i < len ; ++ i ) write ( b [ off + i ] ) ; }
50511	public boolean isPrimitive ( ) { char tcode = signature . charAt ( _NUM ) ; return ( ( tcode != _CHAR ) && ( tcode != _CHAR ) ) ; }
50538	public NamePath append ( String head ) { pathPieces . add ( head ) ; return this ; }
50559	public float angle ( Vector other ) { double dot = dot ( other ) / ( length ( ) * other . length ( ) ) ; return ( float ) Math . acos ( dot ) ; }
50560	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR ORDERS \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
50576	public SAML2ConfigBuilder spEntityId ( String spEntityId ) { this . spEntityId = spEntityId ; return this ; }
50586	public boolean domainMatch ( String host , String domain ) { boolean match = host . equals ( domain ) || ( domain . startsWith ( _CHAR . _CHAR ) && host . endsWith ( domain ) ) ; return match ; }
50602	private void deleteBackend ( BackendDescriptor backend ) throws OpenDsException , ConfigException { DN dn = DN . valueOf ( _CHAR ds - cfg - backend - id _CHAR + _CHAR = _CHAR + backend . getBackendID ( ) + _CHAR , cn = Backends , cn = config _CHAR ) ; Utilities . deleteConfigSubtree ( DirectoryServer . getConfigurationHandler ( ) , dn ) ; }
50606	public Builder orderingMatchingRule ( String orderingMatchingRuleOID ) { this . orderingMatchingRuleOID = orderingMatchingRuleOID ; return this ; }
50622	@ Override public MapboxGeocoding build ( ) throws ServicesException { validateAccessToken ( accessToken ) ; return new MapboxGeocoding ( this ) ; }
50633	public boolean isValidID3v2FrameIdentifier ( String identifier ) { Matcher m = ID3v22Frame . validFrameIdentifier . matcher ( identifier ) ; return m . matches ( ) ; }
50636	public boolean isLeaf ( ) { TreeModel model = getModel ( ) ; return ( model != _NULL ) ? model . isLeaf ( this . getUserObject ( ) ) : _BOOL ; }
50643	@ Override public void close ( ) { LogManager . getLogManager ( ) . checkAccess ( ) ; close ( _BOOL ) ; }
50670	public char nextClean ( ) throws JSONException { int nextCleanInt = nextCleanInternal ( ) ; return nextCleanInt == - _NUM ? _CHAR : ( char ) nextCleanInt ; }
50678	public static void main ( String [ ] args ) { int result = configureWindowsService ( args , System . out , System . err ) ; System . exit ( filterExitCode ( result ) ) ; }
50690	public boolean equals ( Object o1 ) { if ( o1 instanceof StringComparator ) return ( _BOOL ) ; else return ( _BOOL ) ; }
50691	@ Override public void onWZAudioPaused ( boolean paused ) { mPaused = paused ; setVisibility ( paused ? View . GONE : View . VISIBLE ) ; }
50694	@ Override public int write ( ByteBuffer src ) throws IOException { checkInterruptStatus ( ) ; return sc . write ( src ) ; }
50722	public void add_door ( ExpandDoor p_door ) { if ( p_door == _NULL ) return ; doors_list . add ( p_door ) ; }
50724	public final PlaSide side_of ( PlaPoint p_point ) { PlaSide result = p_point . side_of ( this ) ; return result . negate ( ) ; }
50752	public Object createSession ( Map info , HttpServletRequest request , HttpServletResponse response , StringBuffer targetApplication ) throws SessionException { debug . message ( _CHAR FedletSessionProvider . createSession ( _NUM ) called _CHAR + info ) ; return info . get ( SessionProvider . PRINCIPAL_NAME ) ; }
50753	public void replace ( int offset , int length , View [ ] views ) { super . replace ( offset , length , views ) ; invalidateGrid ( ) ; }
50758	public static AsfHeader readInfoHeader ( final RandomAccessFile file ) throws IOException { final InputStream stream = createStream ( file ) ; return INFO_READER . read ( Utils . readGUID ( stream ) , stream , _NUM ) ; }
50766	public EncryptedID encrypt ( Key recipientPublicKey , String dataEncAlgorithm , int dataEncStrength , String recipientEntityID ) throws SAML2Exception { Element el = EncManager . getEncInstance ( ) . encrypt ( toXMLString ( _BOOL , _BOOL ) , recipientPublicKey , dataEncAlgorithm , dataEncStrength , recipientEntityID , _CHAR EncryptedID _CHAR ) ; return AssertionFactory . getInstance ( ) . createEncryptedID ( el ) ; }
50777	protected void countProximityPosition ( int i ) { if ( ! isReverseAxes ( ) ) super . countProximityPosition ( i ) ; else if ( i < m_proximityPositions . length ) m_proximityPositions [ i ] -- ; }
50782	private ResourceResponse readResource ( Context context , String resourceId ) throws ResourceException { ReadRequest readRequest = Requests . newReadRequest ( resourceId ) ; return connectionFactory . getConnection ( ) . read ( context , readRequest ) ; }
50791	public ReplicationParameters baseDn ( String baseDn ) { this . baseDn = baseDn ; return this ; }
50810	public void inputMethodTextChanged ( InputMethodEvent e ) { ( ( InputMethodListener ) a ) . inputMethodTextChanged ( e ) ; ( ( InputMethodListener ) b ) . inputMethodTextChanged ( e ) ; }
50826	public static ModifyRequest newModifyRequest ( final DN name ) { Reject . ifNull ( name ) ; return new ModifyRequestImpl ( name ) ; }
50866	public void mouseMoved ( MouseEvent e ) { ( ( MouseMotionListener ) a ) . mouseMoved ( e ) ; ( ( MouseMotionListener ) b ) . mouseMoved ( e ) ; }
50874	public void throwDOMException ( short code , String msg ) { String themsg = XSLMessages . createMessage ( msg , _NULL ) ; throw new DOMException ( code , themsg ) ; }
50902	public boolean is_stop_requested ( ) { if ( stoppable == _NULL ) return _BOOL ; return stoppable . is_stop_requested ( ) ; }
50921	public String toString ( boolean detail ) { if ( ! detail || this . linkResolvedObj == _NULL ) return this . toString ( ) ; return this . toString ( ) + _CHAR ; Link Resolved Object : _CHAR + this . linkResolvedObj ; }
50925	public boolean isUserQuestionEnabled ( String realmName ) { Set values = getAttributeValues ( realmName , PW_RESET_PERSONAL_ANSWER , AMAdminConstants . PW_RESET_SERVICE ) ; return ( ( String ) AMAdminUtils . getValue ( values ) ) . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ; }
50936	public ConsonantVowelNameGenerator build ( ) throws IllegalStateException { checkState ( ) ; return new ConsonantVowelNameGenerator ( this ) ; }
50942	public boolean shouldStripWhiteSpace ( org . apache . xpath . XPathContext support , org . w3c . dom . Element targetElement ) throws TransformerException { StylesheetRoot sroot = this . getStylesheetRoot ( ) ; return ( _NULL != sroot ) ? sroot . shouldStripWhiteSpace ( support , targetElement ) : _BOOL ; }
50946	public ScriptCompiler shiftLeft ( String sourceName , Reader source ) { sources . put ( sourceName , source ) ; return this ; }
50963	public NodeList selectNodeList ( Node contextNode , String str , Node namespaceNode ) throws TransformerException { XObject list = eval ( contextNode , str , namespaceNode ) ; return list . nodelist ( ) ; }
50969	public void doClick ( int pressTime ) { MenuElement me [ ] = buildMenuElementArray ( this ) ; MenuSelectionManager . defaultManager ( ) . setSelectedPath ( me ) ; }
50978	public boolean isIssued ( ) { Set < String > issued = getParameter ( ISSUED ) ; return issued != _NULL && Boolean . parseBoolean ( issued . iterator ( ) . next ( ) ) ; }
50989	public MaterialBarcodeScannerBuilder withCameraFacing ( int cameraFacing ) { mFacing = cameraFacing ; return this ; }
50992	public DTMAxisIterator reset ( ) { _sp = _oldsp ; return resetPosition ( ) ; }
50997	public void stopAutoScroll ( ) { isAutoScroll = _BOOL ; handler . removeMessages ( SCROLL_WHAT ) ; }
51002	public static boolean containsAll ( final String value , final String [ ] needles ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return Arrays . stream ( needles ) . allMatch ( _NULL ) ; }
51003	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
51014	public AuditEvent convertToAuditEvent ( PersistentAuditEvent persistentAuditEvent ) { Instant instant = persistentAuditEvent . getAuditEventDate ( ) . atZone ( ZoneId . systemDefault ( ) ) . toInstant ( ) ; return new AuditEvent ( Date . from ( instant ) , persistentAuditEvent . getPrincipal ( ) , persistentAuditEvent . getAuditEventType ( ) , convertDataToObjects ( persistentAuditEvent . getData ( ) ) ) ; }
51022	public static boolean tryEnqueueRequest ( Operation operation ) throws DirectoryException { checkCanEnqueueRequest ( operation , _BOOL ) ; return directoryServer . workQueue . trySubmitOperation ( operation ) ; }
51044	public void postEvent ( AWTEvent theEvent ) { SunToolkit . flushPendingEvents ( appContext ) ; postEventPrivate ( theEvent ) ; }
51048	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR SAVED_STORY \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
51080	public void actionPerformed ( ActionEvent e ) { start . actionPerformed ( e ) ; end . actionPerformed ( e ) ; }
51081	private static int bit ( int i ) { int ret = ( _NUM << ( i & LOW_ORDER_BITMASK ) ) ; return ret ; }
51085	public boolean greaterThan ( XObject obj2 ) throws javax . xml . transform . TransformerException { if ( obj2 . getType ( ) == XObject . CLASS_NODESET ) return obj2 . lessThan ( this ) ; return this . num ( ) > obj2 . num ( ) ; }
51093	private void reportInterruptAfterWait ( int interruptMode ) throws InterruptedException { if ( interruptMode == THROW_IE ) throw new InterruptedException ( ) ; else if ( interruptMode == REINTERRUPT ) selfInterrupt ( ) ; }
51103	public void close ( ) { flush ( ) ; stopBufferTimer ( ) ; }
51106	private void doNotAccept ( ) { returnValue = ReturnType . NOT_ACCEPTED ; dispose ( ) ; }
51117	protected final Map < ObjectClass , String > loadObjectClasses ( final byte [ ] encodedObjectClasses , final Collection < String > objectClassNames ) { final int id = decodeId ( encodedObjectClasses ) ; return loadObjectClassesToMaps ( id , objectClassNames , mappings , _BOOL ) ; }
51137	public void close ( ) throws IOException { super . close ( ) ; buf = _NULL ; }
51143	public PdfCanvas clip ( ) { contentStream . getOutputStream ( ) . writeBytes ( W ) ; return this ; }
51145	public void endElement ( StylesheetHandler handler , String uri , String localName , String rawName ) throws org . xml . sax . SAXException { ProcessorCharacters charProcessor = ( ProcessorCharacters ) handler . getProcessorFor ( _NULL , _CHAR text ( ) _CHAR , _CHAR text _CHAR ) ; charProcessor . setXslTextElement ( _NULL ) ; }
51149	public Builder removeSuperiorRule ( final int superiorRuleID ) { this . superiorRuleIDs . remove ( superiorRuleID ) ; return this ; }
51160	@ Override public void forceResort ( ) { updateDataArray ( ) ; fireTableDataChanged ( ) ; }
51164	public SubResourceCollection glueObjectClass ( final String objectClass ) { this . glueObjectClasses . add ( objectClass ) ; return this ; }
51167	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; getFQDN ( ) ; }
51174	public void reset ( ) { totalInvokes = _NUM ; totalTime = _NUM ; }
51176	public void replace ( ByteString value ) { clear ( ) ; add ( value ) ; }
51207	private void shutdown ( ) throws Exception { TestCaseUtils . dsconfig ( _CHAR delete - replication - server _CHAR , _CHAR -- provider - name _CHAR , _CHAR Multimaster Synchronization _CHAR ) ; replicationServer = _NULL ; }
51218	public void windowOpened ( WindowEvent e ) { ( ( WindowListener ) a ) . windowOpened ( e ) ; ( ( WindowListener ) b ) . windowOpened ( e ) ; }
51223	private void assertThatCursorCanBeFullyRead ( DBCursor < Record < String , String >> cursor , int fromIndex , int endIndex ) throws Exception { advanceCursorUpTo ( cursor , fromIndex , endIndex ) ; assertThatCursorIsExhausted ( cursor ) ; }
51235	public StateInteractive process_logfile_point ( PlaPointFloat p_point ) { circle_radius = circle_center . distance ( p_point ) ; return this ; }
51241	public Builder withTrail ( ) { trail = _BOOL ; return this ; }
51245	@ Override protected void installListeners ( ) { super . installListeners ( ) ; splitPane . addPropertyChangeListener ( this ) ; }
51255	public static void copy ( byte [ ] input , Writer output ) throws IOException { ByteArrayInputStream in = new ByteArrayInputStream ( input ) ; copy ( in , output ) ; }
51260	public boolean removeCSN ( DN baseDN , CSN expectedCSN ) { final ServerState ss = list . get ( baseDN ) ; return ss != _NULL && ss . removeCSN ( expectedCSN ) ; }
51278	public final static short secondaryOrder ( int order ) { order = order & RBCollationTables . SECONDARYORDERMASK ; return ( ( short ) ( order >> RBCollationTables . SECONDARYORDERSHIFT ) ) ; }
51283	public String toString ( ) { validate ( ) ; return ( ssm . toString ( ) ) ; }
51308	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject ( ) ; updateMaskIfNecessary ( ) ; }
51317	public ScriptCompiler add ( File classPath ) throws IOException { compiler . add ( classPath ) ; return this ; }
51323	public SAML2ConfigBuilder customAuthNContextMapperClassName ( String customAuthNContextMapperClassName ) { this . customAuthNContextMapperClassName = customAuthNContextMapperClassName ; return this ; }
51328	public static void error ( CommandManager mgr , String msg , Throwable t ) { dumpToOutput ( mgr , msg , t ) ; mgr . getDebugger ( ) . error ( msg , t ) ; }
51341	@ Override protected void handleFlush ( String output ) { handleOutput ( output ) ; redirectOutPrintStream . flush ( ) ; }
51345	@ Override public void write ( int oneByte ) throws IOException { mSingleByteArray [ _NUM ] = ( byte ) ( _NUM & oneByte ) ; write ( mSingleByteArray ) ; }
51356	private void init_key ( ) { P = P_orig . clone ( ) ; S = S_orig . clone ( ) ; }
51359	@ Fluent public Job onStart ( Handler < Job > handler ) { this . on ( _CHAR start _CHAR , _NULL ) ; return this ; }
51389	public final static String formatNameValuePair ( final NameValuePair nvp , final boolean quote , HeaderValueFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicHeaderValueFormatter . DEFAULT ; return formatter . formatNameValuePair ( _NULL , nvp , quote ) . toString ( ) ; }
51398	public DispatchHandler addBinding ( Expression < Boolean > condition , Handler handler , URI baseURI ) { bindings . add ( new Binding ( condition , handler , baseURI ) ) ; return this ; }
51399	public Builder removeAllOptionalAttributes ( ) { this . optionalAttributes . clear ( ) ; return this ; }
51414	public boolean acceptFile ( String filePath , String fileName ) { if ( filepathMatcher == _NULL ) return _BOOL ; return fileName != _NULL && filepathMatcher . reset ( fileName ) . matches ( ) || filePath != _NULL && filepathMatcher . reset ( filePath ) . matches ( ) ; }
51416	public static AdditionalLogItem unquotedKeyValue ( final Class < ? > source , final String key , final Object value ) { Reject . ifNull ( source , key , value ) ; return new AdditionalLogItem ( source , key , value , _BOOL ) ; }
51425	public static void fill ( long [ ] a , int fromIndex , int toIndex , long val ) { rangeCheck ( a . length , fromIndex , toIndex ) ; for ( int i = fromIndex ; i < toIndex ; i ++ ) a [ i ] = val ; }
51426	public AccountService deleteAllAccounts ( Handler < AsyncResult < Void >> resultHandler ) { delegate . deleteAllAccounts ( resultHandler ) ; return this ; }
51427	@ Override public void deleteITable ( Index index ) { String tableToDelete = Utils . calculateITableName ( index ) ; deleteITable ( tableToDelete ) ; }
51442	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { Reject . ifTrue ( tokenFilter . getReturnFields ( ) . isEmpty ( ) ) ; handler . processResults ( adapter . partialQuery ( tokenFilter ) ) ; }
51443	public void change_user_unit_factor ( double p_new_factor ) { PlaCoordTransform old_transform = coordinate_transform ; coordinate_transform = new PlaCoordTransform ( p_new_factor , old_transform . user_unit , old_transform . board_unit_factor , old_transform . board_unit ) ; }
51452	private void initSkinLoader ( ) { SkinManager . getInstance ( ) . init ( this ) ; SkinManager . getInstance ( ) . load ( ) ; }
51456	private void clampYTranslation ( StackScrollState . ViewState childViewState , int childHeight ) { clampPositionToBottomStackStart ( childViewState , childHeight ) ; clampPositionToTopStackEnd ( childViewState , childHeight ) ; }
51468	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
51474	protected JButton createDecreaseButton ( int orientation ) { decreaseButton = new MetalScrollButton ( orientation , scrollBarWidth , isFreeStanding ) ; return decreaseButton ; }
51475	@ Override public void performTask ( TokenStorageAdapter adapter ) throws DataLayerException { Token token = adapter . read ( tokenId ) ; handler . processResults ( token ) ; }
51504	public ByteArrayBuilder appendShort ( int s ) { builder . appendShort ( s ) ; return this ; }
51508	public static < T > Callable < T > privilegedCallable ( Callable < T > callable ) { if ( callable == _NULL ) throw new NullPointerException ( ) ; return new PrivilegedCallable < T > ( callable ) ; }
51509	public void endElement ( String ns , String localName , String name ) throws org . xml . sax . SAXException { m_elemStack . pop ( ) ; m_currentNode = m_elemStack . isEmpty ( ) ? _NULL : ( Node ) m_elemStack . peek ( ) ; }
51511	public static void dumbTradingLogic ( String company , int numberOfShares , PortfolioService portfolio , Map < String , Object > quote ) { JsonObject json = new JsonObject ( quote ) ; dumbTradingLogic ( company , numberOfShares , portfolio , json ) ; }
51534	public QRCallbackBuilder withUriHost ( String host ) { this . host = host ; return this ; }
51549	public OrderService retrieveOrder ( Long orderId , Handler < AsyncResult < Order >> resultHandler ) { delegate . retrieveOrder ( orderId , resultHandler ) ; return this ; }
51551	public static String printHexBinary ( byte [ ] val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printHexBinary ( val ) ; }
51570	public Rectangle moveRight ( float move ) { x += move ; return this ; }
51573	protected Object createCtsConnectionSuccessRateMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { ctsConnectionSuccessRate = new CtsConnectionSuccessRateImpl ( this ) ; return ctsConnectionSuccessRate ; }
51599	public static DeleteRequest newDeleteRequest ( final String name ) { Reject . ifNull ( name ) ; return new DeleteRequestImpl ( DN . valueOf ( name ) ) ; }
51622	public synchronized void mouseWheel ( int wheelAmt ) { peer . mouseWheel ( wheelAmt ) ; afterEvent ( ) ; }
51625	public static float spToPx ( float sp ) { float scaledDensity = Resources . getSystem ( ) . getDisplayMetrics ( ) . scaledDensity ; return Math . round ( sp * scaledDensity ) ; }
51636	@ Override protected void doHead ( HttpServletRequest request , HttpServletResponse response ) throws IOException , ServletException { boolean serveContent = DispatcherType . INCLUDE . equals ( request . getDispatcherType ( ) ) ; serveResource ( request , response , serveContent , fileEncoding ) ; }
51642	public InternalSession removeSession ( SessionID sessionID ) { Reject . ifNull ( sessionID ) ; return store . remove ( sessionID ) ; }
51661	public AppLauncher appLauncherCallback ( AppLauncherCallback callback ) { this . appLauncherCallback = callback ; return this ; }
51676	public SoapSTSServerCryptoStateBuilder decryptionKeyPassword ( String decryptionKeyPassword ) { this . decryptionKeyPassword = decryptionKeyPassword ; return this ; }
51687	private void recalculateHashCode ( ) { String s = _CHAR _CHAR + getType ( ) + getAgeOfOldestMissingChange ( ) + getDn ( ) + getBackend ( ) . getBackendID ( ) + getMissingChanges ( ) ; hashCode = s . hashCode ( ) ; }
51693	@ Override public boolean accept ( Serializable msg , Member source ) { table . dataModel . getValueAt ( - _NUM , - _NUM ) ; return _BOOL ; }
51705	@ Override public void execute ( ) throws BuildException { super . execute ( ) ; execute ( _CHAR / findleaks ? statusLine = _CHAR + Boolean . toString ( statusLine ) ) ; }
51708	public boolean add ( E e ) { if ( offer ( e ) ) return _BOOL ; else throw new IllegalStateException ( _CHAR Queue full _CHAR ) ; }
51710	@ SuppressWarnings ( _CHAR rawtypes _CHAR ) protected Class resolveClass ( ObjectStreamClass classDesc ) throws IOException , ClassNotFoundException { String cname = classDesc . getName ( ) ; return ClassFinder . resolveClass ( cname , this . loader ) ; }
51721	public Executor addEnv ( String name , String value ) { this . env . put ( name , value ) ; return this ; }
51722	public boolean containsExtensionElementURI ( String uri ) { if ( _NULL == m_ExtensionElementURIs ) return _BOOL ; return m_ExtensionElementURIs . contains ( uri ) ; }
51731	private JsonValue execScript ( String type , Script script , Map < String , Object > scope , Context context ) throws ScriptException { Object results = script . exec ( scope , context ) ; return json ( results ) ; }
51733	private void cancelClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
51736	private void removeOneNode ( BasicNode node ) { stopRefreshNode ( node ) ; treeModel . removeNodeFromParent ( node ) ; }
51753	@ Override public void close ( ) { closed = _BOOL ; ioException = _NULL ; }
51755	public void callPredicateVisitors ( XPathVisitor visitor ) { m_expr . callVisitors ( new filterExprOwner ( ) , visitor ) ; super . callPredicateVisitors ( visitor ) ; }
51772	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR GREEN_NEWS \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR NEWSLISTJSON \ _CHAR TEXT ) ; _CHAR ) ; }
51776	protected void callChildVisitors ( XSLTVisitor visitor , boolean callAttrs ) { if ( callAttrs && ( _NULL != m_selectPattern ) ) m_selectPattern . getExpression ( ) . callVisitors ( m_selectPattern , visitor ) ; super . callChildVisitors ( visitor , callAttrs ) ; }
51791	public static AdditionalLogItem keyOnly ( final Class < ? > source , final String key ) { Reject . ifNull ( source , key ) ; return new AdditionalLogItem ( source , key , _NULL , _BOOL ) ; }
51803	public static MatchedValuesFilter createGreaterOrEqualFilter ( String rawAttributeType , ByteString rawAssertionValue ) { Reject . ifNull ( rawAttributeType , rawAssertionValue ) ; return new MatchedValuesFilter ( GREATER_OR_EQUAL_TYPE , rawAttributeType , rawAssertionValue , _NULL , _NULL , _NULL , _NULL ) ; }
51805	@ Advice . OnMethodEnter public static long enter ( ) { final long startTime = System . currentTimeMillis ( ) ; return startTime ; }
51816	private BigDecimal convertIntToBigDecimal ( int quoteParam ) { BigDecimal quoteParamBigDecimal = new BigDecimal ( quoteParam ) . divide ( new BigDecimal ( _NUM ) , new MathContext ( _NUM , RoundingMode . HALF_DOWN ) ) ; return quoteParamBigDecimal ; }
51830	public Expected < T > ifNotEmpty ( final Consumer < ? super T > consumer ) { if ( ! isEmpty ( ) ) consumer . accept ( this . value ) ; return this ; }
51835	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
51837	public void removeNotify ( ) { super . removeNotify ( ) ; KeyboardManager . getCurrentManager ( ) . unregisterMenuBar ( this ) ; }
51847	public void stop ( ) throws IOException , InterruptedException { thread . interrupt ( ) ; selector . wakeup ( ) ; }
51866	public Cell add ( Table element ) { childElements . add ( element ) ; return this ; }
51887	public Builder oid ( final String oid ) { this . oid = oid ; return this ; }
51892	public int indexOf ( int elem ) { runTo ( - _NUM ) ; return super . indexOf ( elem ) ; }
51908	protected static void unconfigureMDC ( ) { MDC . remove ( TRACE_ID_MDC_KEY ) ; MDC . remove ( SPAN_JSON_MDC_KEY ) ; }
51936	public void pushBack ( byte b ) { back = b ; isBack = _BOOL ; }
51950	public void updateBackendIndexes ( String backendName ) { backendIndexesPanel . update ( backendName ) ; ( ( CardLayout ) mainPanel . getLayout ( ) ) . show ( mainPanel , backendIndexesPanel . getTitle ( ) . toString ( ) ) ; }
51952	public Resource objectClass ( final String objectClass ) { this . objectClasses . add ( objectClass ) ; return this ; }
51957	final synchronized void process ( Runnable task ) throws InterruptedException { this . task = task ; notify ( ) ; }
51958	public void actionPerformed ( ActionEvent e ) { start . actionPerformed ( e ) ; end . actionPerformed ( e ) ; }
51962	private static void handleForwardException ( Exception exception ) throws SAML2Exception { debug . error ( _CHAR Failed to forward to auto submitting JSP _CHAR , exception ) ; throw new SAML2Exception ( bundle . getString ( _CHAR postToTargetFailed _CHAR ) ) ; }
51973	public void syncBeforeInvoke ( ) { copyTagToPageScope ( VariableInfo . NESTED ) ; copyTagToPageScope ( VariableInfo . AT_BEGIN ) ; }
51976	@ AfterMethod ( alwaysRun = _BOOL ) public void reenableBackend ( ) throws DirectoryException { Backend < ? > b = DirectoryServer . getBackend ( DN . valueOf ( _CHAR o = test _CHAR ) ) ; b . setWritabilityMode ( WritabilityMode . ENABLED ) ; }
51979	public boolean notRequiredResourceName ( Policy policy , String realmName , String name ) { getSvcTypeNameToActionsMap ( policy , realmName ) ; return notRequiredResourceNameService . contains ( name ) ; }
51991	public AuditEvent convertToAuditEvent ( PersistentAuditEvent persistentAuditEvent ) { Instant instant = persistentAuditEvent . getAuditEventDate ( ) . atZone ( ZoneId . systemDefault ( ) ) . toInstant ( ) ; return new AuditEvent ( Date . from ( instant ) , persistentAuditEvent . getPrincipal ( ) , persistentAuditEvent . getAuditEventType ( ) , convertDataToObjects ( persistentAuditEvent . getData ( ) ) ) ; }
52031	public static Class < ? > loadClassWithout ( ClassLoader loader , String className ) throws ClassNotFoundException { MBEANSERVER_LOGGER . logp ( Level . FINEST , DefaultLoaderRepository . class . getName ( ) , _CHAR loadClassWithout _CHAR , className ) ; return load ( loader , className ) ; }
52041	public PdfCanvas curveTo ( double x2 , double y2 , double x3 , double y3 ) { contentStream . getOutputStream ( ) . writeDouble ( x2 ) . writeSpace ( ) . writeDouble ( y2 ) . writeSpace ( ) . writeDouble ( x3 ) . writeSpace ( ) . writeDouble ( y3 ) . writeSpace ( ) . writeBytes ( v ) ; return this ; }
52048	public static NodeIterator selectNodeIterator ( Node contextNode , String str , Node namespaceNode ) throws TransformerException { XObject list = eval ( contextNode , str , namespaceNode ) ; return list . nodeset ( ) ; }
52055	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
52064	public static void deregisterRotationPolicy ( DN configEntryDN ) { Reject . ifNull ( configEntryDN ) ; directoryServer . rotationPolicies . remove ( configEntryDN ) ; }
52068	public boolean isReadable ( String attributeName ) { if ( readables . contains ( attributeName . toLowerCase ( ) ) ) return _BOOL ; else return _BOOL ; }
52076	protected void initTransportLayer ( ) throws IOException { input = super . getInputStream ( ) ; output = super . getOutputStream ( ) ; }
52090	private void okClicked ( ) { isCanceled = _BOOL ; dispose ( ) ; }
52099	public static NSObject parse ( byte [ ] data ) throws PropertyListFormatException , UnsupportedEncodingException { BinaryPropertyListParser parser = new BinaryPropertyListParser ( ) ; return parser . doParse ( data ) ; }
52111	private void createLayout ( ) { createBasicLayout ( this , new GridBagConstraints ( ) ) ; setBorder ( PANEL_BORDER ) ; }
52126	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiOptionPaneUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiOptionPaneUI ) mui ) . uis , a ) ; }
52140	public QRCallbackBuilder withCallbackIndex ( int index ) { this . callbackIndex = index ; return this ; }
52141	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
52142	@ Override public void onFocusChange ( View v , boolean hasFocus ) { mRecyclerViewBridge . setFocusView ( v , oldView , _NUM . _NUM ) ; oldView = v ; }
52147	public static JsonValue jsonFromFile ( String resourceFilePath ) throws IOException { final InputStream configStream = JsonUtils . class . getResourceAsStream ( resourceFilePath ) ; return new JsonValue ( MAPPER . readValue ( configStream , Map . class ) ) ; }
52148	public void add ( ) { count . incrementAndGet ( ) ; rateWindow . incrementForTimestamp ( timer . now ( ) ) ; }
52159	public static int lastIndexOf ( final String value , final String needle , boolean caseSensitive ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return lastIndexOf ( value , needle , value . length ( ) , caseSensitive ) ; }
52161	public void remove ( Component child ) { child . removeComponentListener ( viewListener ) ; super . remove ( child ) ; }
52175	public String str ( ) { if ( _NULL == m_strCache ) m_strCache = new String ( ( char [ ] ) m_obj , m_start , m_length ) ; return m_strCache ; }
52177	public static int pixelToDp ( Context context , int pixel ) { DisplayMetrics displayMetrics = context . getResources ( ) . getDisplayMetrics ( ) ; return pixel < _NUM ? pixel : Math . round ( pixel / displayMetrics . density ) ; }
52179	public MaterialBarcodeScannerBuilder withFrontfacingCamera ( ) { mFacing = CameraSource . CAMERA_FACING_FRONT ; return this ; }
52180	private static String cleanUpLanguageCode ( String language ) { String languageCode = StringUtils . substringBefore ( language , _CHAR _ _CHAR ) ; return StringUtils . lowerCase ( languageCode ) ; }
52202	@ Advice . OnMethodEnter public static long enter ( ) { final long startTime = System . currentTimeMillis ( ) ; return startTime ; }
52218	boolean inHalfOpenRange ( K key , K least , K fence ) { if ( key == _NULL ) throw new NullPointerException ( ) ; return ( ( least == _NULL || compare ( key , least ) >= _NUM ) && ( fence == _NULL || compare ( key , fence ) < _NUM ) ) ; }
52225	public Builder clear ( ) { localeBuilder . clear ( ) ; return this ; }
52232	public Div add ( Image element ) { childElements . add ( element ) ; return this ; }
52236	public net . aimeizi . person . Person . Builder clearChildrenCount ( ) { fieldSetFlags ( ) [ _NUM ] = _BOOL ; return this ; }
52242	public void gdi_update_join ( ShapeTileBox p_box ) { if ( p_box == _NULL ) return ; update_box = update_box . union ( p_box ) ; }
52245	public boolean isLocallyInitiated ( ) { boolean streamIsClient = ( ( id & _NUM ) == _NUM ) ; return connection . client == streamIsClient ; }
52246	public boolean add ( Attribute attribute ) { Object oldAttribute = attrMap . put ( attribute . getCategory ( ) , AttributeSetUtilities . verifyAttributeValue ( attribute , myInterface ) ) ; return ( ! attribute . equals ( oldAttribute ) ) ; }
52265	@ Override public boolean accept ( File file ) { boolean newer = FileUtils . isFileNewer ( file , cutoff ) ; return acceptOlder ? ! newer : newer ; }
52277	public final void writeBoolean ( boolean v ) throws IOException { out . write ( v ? _NUM : _NUM ) ; incCount ( _NUM ) ; }
52297	protected static void configureMDC ( Span span ) { MDC . put ( TRACE_ID_MDC_KEY , span . getTraceId ( ) ) ; MDC . put ( SPAN_JSON_MDC_KEY , span . toJSON ( ) ) ; }
52298	public void loadLocal ( final int local , final Type type ) { setLocalType ( local , type ) ; loadInsn ( type , local ) ; }
52309	public static NSObject parse ( InputStream is ) throws IOException , PropertyListFormatException { byte [ ] buf = PropertyListParser . readAll ( is ) ; return parse ( buf ) ; }
52314	public Builder removeName ( String name ) { this . names . remove ( name ) ; return this ; }
52315	protected Object createInternalSessionsMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { internalSessions = new InternalSessionsImpl ( this , InjectorHolder . getInstance ( SessionMonitoringStore . class ) ) ; return internalSessions ; }
52322	public void addResult ( AMIdentity id , Map attrs ) { searchResults . add ( id ) ; resultsMap . put ( id , attrs ) ; }
52324	public static String after ( String self , String pattern ) { Matcher matcher = compile ( pattern , CASE_INSENSITIVE | UNICODE_CHARACTER_CLASS ) . matcher ( self ) ; return matcher . find ( ) ? self . substring ( matcher . end ( ) , self . length ( ) ) . trim ( ) : self ; }
52338	public void change_side ( PlaPointInt p_pole ) { on_front = ! on_front ; if ( location != _NULL ) location = location . mirror_vertical ( p_pole ) ; }
52343	public byte [ ] encrypt ( byte [ ] data ) throws GeneralSecurityException , CryptoManagerException { CipherInfo currentCipher = cipherInfo ; return cryptoManager . encrypt ( currentCipher . cipherTransformation , currentCipher . cipherKeyLength , data ) ; }
52384	public BuilderImage < T > useInternalStorage ( ) { this . config . setUseInternalStorage ( ) ; return this ; }
52385	public boolean isServer ( ) { if ( this . firstTransactionSeen == _BOOL ) return this . serverTransactionFlag ; else return this . firstTransactionIsServerTransaction ; }
52389	public String addImport ( String typeName ) { getTypeName ( typeName ) ; return _CHAR _CHAR ; }
52393	public AppLauncher closeOutOnExit ( boolean closeOutOnExit ) { this . closeOutOnExit = closeOutOnExit ; return this ; }
52397	public void ellipsized ( int start , int end ) { mEllipsizedStart = start ; mEllipsizedCount = end - start ; }
52402	public synchronized StringBuffer replace ( int start , int end , String string ) { replace0 ( start , end , string ) ; return this ; }
52411	public double readDouble ( ) throws SQLException { Double attrib = ( Double ) getNextAttribute ( ) ; return ( attrib == _NULL ) ? _NUM : attrib . doubleValue ( ) ; }
52415	public synchronized void end ( ) { super . end ( ) ; this . trimEdits ( indexOfNextAdd , edits . size ( ) - _NUM ) ; }
52467	public static int mainBackUpDB ( String [ ] args , boolean initializeServer , OutputStream outStream , OutputStream errStream ) { BackUpDB tool = new BackUpDB ( ) ; return tool . process ( args , initializeServer , outStream , errStream ) ; }
52472	public void focusGained ( FocusEvent e ) { ( ( FocusListener ) a ) . focusGained ( e ) ; ( ( FocusListener ) b ) . focusGained ( e ) ; }
52487	private void requestNewInterstitial ( ) { AdRequest adRequest = new AdRequest . Builder ( ) . build ( ) ; mInterstitialAd . loadAd ( adRequest ) ; }
52492	static ObjectName createObjectName ( String domain , Role role ) throws MalformedObjectNameException { ObjectName name = new ObjectName ( domain + _CHAR : type = Role , rolename = _CHAR + ObjectName . quote ( role . getRolename ( ) ) + _CHAR , database = _CHAR + role . getUserDatabase ( ) . getId ( ) ) ; return name ; }
52513	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
52516	public StringBuilder deleteCharAt ( int index ) { deleteCharAt0 ( index ) ; return this ; }
52543	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; }
52546	public void insertElementAt ( MarkData m , int index ) { oneMark [ _NUM ] = m ; replace ( index , _NUM , oneMark , _NUM ) ; }
52555	public void removeMessageDestinationRef ( String name ) { namingResources . removeMessageDestinationRef ( name ) ; fireContainerEvent ( _CHAR removeMessageDestinationRef _CHAR , name ) ; }
52564	private TestParentCfgClient createTestParent ( ManagementContext context , String name ) throws Exception { ManagedObject < RootCfgClient > root = context . getRootConfigurationManagedObject ( ) ; return root . createChild ( TestCfg . getTestOneToManyParentRelationDefinition ( ) , TestParentCfgDefn . getInstance ( ) , name , _NULL ) . getConfiguration ( ) ; }
52589	private void reportInterruptAfterWait ( int interruptMode ) throws InterruptedException { if ( interruptMode == THROW_IE ) throw new InterruptedException ( ) ; else if ( interruptMode == REINTERRUPT ) selfInterrupt ( ) ; }
52590	public void changeProgram ( Texture2dProgram program ) { mProgram . release ( ) ; mProgram = program ; }
52595	public static void write ( File file , CharSequence data , Charset encoding , boolean append ) throws IOException { String str = data == _NULL ? _NULL : data . toString ( ) ; writeStringToFile ( file , str , encoding , append ) ; }
52605	public static Object convertInputStreamToJAXB ( InputStream is ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( is ) ) ) ; }
52610	public Builder clearExtensions ( ) { localeBuilder . clearExtensions ( ) ; return this ; }
52629	public void initializeOutlines ( ) { checkClosingStatus ( ) ; getOutlines ( _BOOL ) ; }
52630	@ Fluent public Job done ( Throwable ex ) { eventBus . send ( Kue . workerAddress ( _CHAR done_fail _CHAR , this ) , ex . getMessage ( ) ) ; return this ; }
52631	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { System . out . println ( _CHAR shootme : got an ACK ! _CHAR ) ; System . out . println ( _CHAR Dialog State = _CHAR + dialog . getState ( ) ) ; }
52632	boolean persistValue ( int id ) { int bit = _NUM << id ; return ( persistValue & bit ) != _NUM ; }
52643	public void addField ( String vorbisCommentKey , String value ) throws KeyNotFoundException , FieldDataInvalidException { TagField tagfield = createField ( vorbisCommentKey , value ) ; addField ( tagfield ) ; }
52654	public static synchronized String [ ] [ ] read ( String logName , String logType , Object userCrdential ) throws IOException , NoSuchFieldException , IllegalArgumentException , RuntimeException , Exception { queryResult = read ( logName , logType , ( String ) _NULL , ( LogQuery ) _NULL , userCrdential ) ; return queryResult ; }
52670	public boolean isTransientAttribute ( String attribute ) { if ( transientAttributes != _NULL ) return transientAttributes . contains ( attribute ) ; return _BOOL ; }
52671	public boolean append ( freert . planar . PlaPointFloat p_point ) { freert . planar . PlaPointFloat transformed_point = coordinate_transform . board_to_user ( p_point ) ; return append ( transformed_point . to_string ( board_frame . get_locale ( ) ) ) ; }
52696	public void removeDefinition ( String name ) throws UMSException { Guid guid = new Guid ( ICOSDefinition . DEFAULT_NAMING_ATTR + _CHAR = _CHAR + name + _CHAR , _CHAR + _parentObject . getGuid ( ) . getDn ( ) ) ; _parentObject . removeChild ( guid ) ; }
52700	public void insertUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { super . insertUpdate ( changes , adjustAllocation ( a ) , f ) ; updateVisibilityModel ( ) ; }
52701	public static void chmodFileReadOnly ( File f ) throws IOException { if ( ! ( f . setReadOnly ( ) && f . setReadable ( _BOOL , _BOOL ) && f . setReadable ( _BOOL , _BOOL ) ) ) { } }
52709	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR _CHAR _CHAR ; db . execSQL ( sql ) ; }
52725	public void removeAttribute ( String name , boolean notify ) { if ( ! isValidInternal ( ) ) throw new IllegalStateException ( sm . getString ( _CHAR standardSession . removeAttribute . ise _CHAR ) ) ; removeAttributeInternal ( name , notify ) ; }
52729	@ Override public boolean rotateFile ( RotatableLogFile writer ) { long fileSize = writer . getBytesWritten ( ) ; return fileSize >= sizeLimit ; }
52752	protected void iconifyFrame ( JInternalFrame f ) { BasicLookAndFeel . playSound ( frame , _CHAR InternalFrame . minimizeSound _CHAR ) ; getDesktopManager ( ) . iconifyFrame ( f ) ; }
52755	@ Override public void init ( FilterConfig fConfig ) throws ServletException { this . filterConfig = fConfig ; this . attribute = fConfig . getInitParameter ( _CHAR attribute _CHAR ) ; }
52763	public ConnectionParameters hostName ( String hostName ) { this . hostName = hostName ; return this ; }
52778	public synchronized StringBuffer reverse ( ) { reverse0 ( ) ; return this ; }
52780	public void incrementTotalWrites ( ) { totalWrites ++ ; totalRequests ++ ; }
52794	public static AsfHeader readTagHeader ( final RandomAccessFile file ) throws IOException { final InputStream stream = createStream ( file ) ; return TAG_READER . read ( Utils . readGUID ( stream ) , stream , _NUM ) ; }
52797	@ Override public synchronized void write ( byte [ ] b , int off , int len ) throws IOException { super . write ( b , off , len ) ; this . branch . write ( b , off , len ) ; }
52798	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
52799	public void handleRequest ( RequestContext rc ) throws CLIException { super . handleRequest ( rc ) ; ldapLogin ( ) ; }
52802	public W3CEndpointReferenceBuilder interfaceName ( QName interfaceName ) { this . interfaceName = interfaceName ; return this ; }
52803	public void componentAdded ( ContainerEvent e ) { ( ( ContainerListener ) a ) . componentAdded ( e ) ; ( ( ContainerListener ) b ) . componentAdded ( e ) ; }
52814	public long position ( Blob pattern , long start ) throws SerialException , SQLException { isValid ( ) ; return position ( pattern . getBytes ( _NUM , ( int ) ( pattern . length ( ) ) ) , start ) ; }
52837	public static String slice ( final String value , int begin , int end ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . substring ( begin , end ) ; }
52856	@ Override public void onDowngrade ( SQLiteDatabase db , int oldVersion , int newVersion ) { dropAllTables ( db ) ; onCreate ( db ) ; }
52873	boolean isPersisted ( int id ) { int bit = _NUM << id ; return ( persisted & bit ) != _NUM ; }
52876	public int hashCode ( ) { if ( this == POINT_INFINITY ) return _NUM ; return x . hashCode ( ) << _NUM + y . hashCode ( ) ; }
52881	@ Override public void contextInitialized ( ServletContextEvent event ) { this . context = event . getServletContext ( ) ; log ( _CHAR contextInitialized ( ) _CHAR ) ; }
52896	public int compare ( Object o1 , Object o2 ) { String s1 = ( String ) o1 ; return ( s1 . compareTo ( ( String ) o2 ) ) ; }
52909	public static final boolean isWhiteSpace ( char ch ) { if ( ch > _NUM ) return _BOOL ; return ch == _NUM || ch == _NUM || ch == _NUM || ch == _NUM ; }
52912	public AuthenticationEnforcer exceptQuery ( ) { exceptQuery = _BOOL ; return this ; }
52922	@ Override public void clear ( ) { cache . clear ( ) ; rules . clear ( ) ; }
52935	@ DataProvider ( name = _CHAR createDeleteData _CHAR ) public Object [ ] [ ] createDeleteData ( ) { List < Attribute > entryAttrList = getEntryAttributes ( ) ; return new Object [ ] [ ] { { _CHAR dc = com _CHAR , entryAttrList , _BOOL } , { _CHAR dc = delete , dc = an , dc = entry , dc = with , dc = a , dc = long dn _CHAR , _NULL , _BOOL } } ; }
52943	public int transformToRTF ( ElemTemplateElement templateParent ) throws TransformerException { DTM dtmFrag = m_xcontext . getRTFDTM ( ) ; return transformToRTF ( templateParent , dtmFrag ) ; }
52950	public final void popContextNodeList ( ) { if ( m_contextNodeLists . isEmpty ( ) ) System . err . println ( _CHAR Warning : popContextNodeList when stack is empty ! _CHAR ) ; else m_contextNodeLists . pop ( ) ; }
53000	public String addListener ( ServiceListener listener ) { validate ( ) ; return ( ssm . addListener ( listener ) ) ; }
53015	public NodeList nodelist ( ) throws javax . xml . transform . TransformerException { error ( XPATHErrorResources . ER_CANT_CONVERT_TO_NODELIST , new Object [ ] { getTypeString ( ) } ) ; return _NULL ; }
53022	public final static String formatStatusLine ( final StatusLine statline , LineFormatter formatter ) { if ( formatter == _NULL ) formatter = BasicLineFormatter . DEFAULT ; return formatter . formatStatusLine ( _NULL , statline ) . toString ( ) ; }
53079	public void skippedEntity ( String name ) throws SAXException { flushStartDoc ( ) ; m_resultContentHandler . skippedEntity ( name ) ; }
53107	private static void increment ( Map < ResultPoint , Integer > table , ResultPoint key ) { Integer value = table . get ( key ) ; table . put ( key , value == _NULL ? _NUM : value + _NUM ) ; }
53109	public String toString ( ) { ensureCache ( ) ; return textLine . toString ( ) ; }
53118	public void signXML ( ) throws SAMLException { String certAlias = SystemConfigurationUtil . getProperty ( Constants . SAML_XMLSIG_CERT_ALIAS ) ; signXML ( certAlias ) ; }
53124	protected Object createCtsSessionsMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { ctsSessions = new CtsSessionsImpl ( InjectorHolder . getInstance ( CtsPersistenceOperationsMonitor . class ) , this , InjectorHolder . getInstance ( SessionMonitoringStore . class ) ) ; return ctsSessions ; }
53136	public static boolean isDynamicProfile ( String realm ) { String profileAttribute = getProfileAttribute ( realm ) ; return DYNAMIC_PROFILE . equalsIgnoreCase ( profileAttribute ) || CREATE_ALIAS_PROFILE . equalsIgnoreCase ( profileAttribute ) ; }
53144	public final HashCode append ( int value ) { hashCode = combine ( hashCode , value ) ; return this ; }
53166	public Object put ( String name , Object value ) { checkKey ( name ) ; return map . put ( name , value ) ; }
53171	public static Object convertNodeToJAXB ( Node node ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( node ) ; }
53177	public void start ( ) { start = currentTimeMillis ( ) ; end = start ; }
53190	public void update ( Graphics g ) { g . clearRect ( _NUM , _NUM , width , height ) ; paint ( g ) ; }
53200	@ Override public void connect ( SocketAddress endpoint ) throws IOException { super . connect ( endpoint ) ; init ( ) ; }
53210	public void process ( String name , Vector elems , Hashtable atts , String pcdata ) { this . name = name ; intValue = Integer . parseInt ( pcdata ) ; }
53218	public Rectangle decreaseHeight ( float extra ) { this . height -= extra ; return this ; }
53219	public SubResourceCollection isReadOnly ( final boolean readOnly ) { isReadOnly = readOnly ; return this ; }
53227	public void mouseClicked ( MouseEvent e ) { ( ( MouseListener ) a ) . mouseClicked ( e ) ; ( ( MouseListener ) b ) . mouseClicked ( e ) ; }
53228	private static void writeAdd ( LDIFWriter writer , Entry entry ) throws IOException { writer . writeAddChangeRecord ( entry ) ; writer . flush ( ) ; }
53238	public WorldCreator generator ( String generator ) { this . generator = getGeneratorForName ( name , generator , Bukkit . getConsoleSender ( ) ) ; return this ; }
53247	private String randomDigits ( ) { Random random = new Random ( ) ; return String . valueOf ( random . nextInt ( _NUM ) ) ; }
53257	public Expression locationPathPattern ( int opPos ) throws TransformerException { opPos = getFirstChildPos ( opPos ) ; return stepPattern ( opPos , _NUM , _NULL ) ; }
53261	public void addNotify ( ) { super . addNotify ( ) ; enableInputMethodsIfNecessary ( ) ; }
53267	private BigDecimal convertIntToBigDecimal ( int quoteParam ) { BigDecimal quoteParamBigDecimal = new BigDecimal ( quoteParam ) . divide ( new BigDecimal ( _NUM ) , new MathContext ( _NUM , RoundingMode . HALF_DOWN ) ) ; return quoteParamBigDecimal ; }
53268	public Executor env ( Map < String , String > env ) { this . env = env ; return this ; }
53276	protected Object createRemoteSessionsMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { remoteSessions = new RemoteSessionsImpl ( this , InjectorHolder . getInstance ( SessionMonitoringStore . class ) ) ; return remoteSessions ; }
53281	public void initWebappDefaults ( String contextPath ) { Container ctx = getHost ( ) . findChild ( contextPath ) ; initWebappDefaults ( ( Context ) ctx ) ; }
53285	public static byte [ ] serializeToBuffer ( XMPMeta xmp , SerializeOptions options ) throws XMPException { assertImplementation ( xmp ) ; return XMPSerializerHelper . serializeToBuffer ( ( XMPMetaImpl ) xmp , options ) ; }
53299	public static int combine ( int hashCode , float value ) { int v = Float . floatToIntBits ( value ) ; return combine ( hashCode , v ) ; }
53300	public SAML2ConfigBuilder encryptionKeyAlias ( String encryptionKeyAlias ) { this . encryptionKeyAlias = encryptionKeyAlias ; return this ; }
53310	public boolean name_is_equal ( String p_name ) { if ( p_name == _NULL ) return _BOOL ; return p_name . equalsIgnoreCase ( pkg_name ) ; }
53330	public boolean offerLast ( E e ) { addLast ( e ) ; return _BOOL ; }
53334	public OIDCIdTokenConfigBuilder customClaimMapperClass ( String customClaimMapperClass ) { this . customClaimMapperClass = customClaimMapperClass ; return this ; }
53360	public ParameterBlock add ( Object obj ) { parameters . addElement ( obj ) ; return this ; }
53364	protected RuntimeException manageInterruptedException ( Exception ex ) { Thread . currentThread ( ) . interrupt ( ) ; return new RuntimeException ( ex . getMessage ( ) , ex ) ; }
53367	private synchronized void writeObject ( java . io . ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; s . writeChar ( separatorChar ) ; }
53368	public static String printUnsignedShort ( int val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printUnsignedShort ( val ) ; }
53383	protected void shutdown ( ) throws IOException { shutdownEntry ( ) ; if ( connection . isOpen ( ) ) connection . shutdown ( ) ; }
53392	public void not ( ) { mv . visitInsn ( Opcodes . ICONST_1 ) ; mv . visitInsn ( Opcodes . IXOR ) ; }
53397	@ Override public boolean accept ( File file ) { boolean smaller = file . length ( ) < size ; return acceptLarger ? ! smaller : smaller ; }
53403	public void handleHrefExceptionRequest ( RequestInvocationEvent event ) throws ServletException , IOException { ViewBean targetView = getViewBean ( LoginViewBean . class ) ; targetView . forwardTo ( getRequestContext ( ) ) ; }
53414	@ Override public void sendMessage ( ChannelMessage message , Member [ ] destination ) throws ChannelException { MultiPointSender sender = getTransport ( ) ; sender . sendMessage ( destination , message ) ; }
53418	public final void popCurrentNodeAndExpression ( ) { m_currentNodes . quickPop ( _NUM ) ; m_currentExpressionNodes . quickPop ( _NUM ) ; }
53426	public static boolean isAnonymous ( ) throws IOException { AnonymousFaceletsTag anonymousTag = new AnonymousFaceletsTag ( ) ; return anonymousTag . authorize ( ) ; }
53438	public static MatchedValuesFilter createEqualityFilter ( String rawAttributeType , ByteString rawAssertionValue ) { Reject . ifNull ( rawAttributeType , rawAssertionValue ) ; return new MatchedValuesFilter ( EQUALITY_MATCH_TYPE , rawAttributeType , rawAssertionValue , _NULL , _NULL , _NULL , _NULL ) ; }
53456	public < V > V put ( final String uri , final Object params , final Type type ) throws IOException { HttpURLConnection request = createPut ( uri ) ; return sendJson ( request , params , type ) ; }
53473	protected void destroy ( ) { close = _BOOL ; selector . wakeup ( ) ; }
53483	public static String printString ( String val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printString ( val ) ; }
53503	public static void disableCache ( ) { typeVariableCache . clear ( ) ; CACHE_ENABLED = _BOOL ; }
53506	public WorldCreator environment ( World . Environment env ) { this . environment = env ; return this ; }
53515	public int elementAt ( int i ) { if ( i < m_blocksize ) return m_map0 [ i ] ; return m_map [ i >> > m_SHIFT ] [ i & m_MASK ] ; }
53519	public void incrementTotalReads ( ) { totalReads ++ ; totalRequests ++ ; }
53524	private String [ ] listTestParents ( ManagementContext context ) throws Exception { ManagedObject < RootCfgClient > root = context . getRootConfigurationManagedObject ( ) ; return root . listChildren ( TestCfg . getTestOneToManyParentRelationDefinition ( ) ) ; }
53530	public final double angle_approx ( ) { PlaDirection a_dir = new PlaDirection ( this ) ; return a_dir . angle_approx ( ) ; }
53531	@ Fluent public Job onFailureAttempt ( Handler < JsonObject > failureHandler ) { this . on ( _CHAR failed_attempt _CHAR , _NULL ) ; return this ; }
53536	public static SessionNotification parseXML ( String xml ) { SessionNotificationParser parser = new SessionNotificationParser ( xml ) ; return parser . parseXML ( ) ; }
53538	private void writePendingText ( ) throws SAXException { int len = textBuf . length ( ) ; if ( len != _NUM ) writer . characters ( textBuf . toString ( ) . toCharArray ( ) , _NUM , len ) ; }
53542	public ConversationFactory withInitialSessionData ( Map < Object , Object > initialSessionData ) { this . initialSessionData = initialSessionData ; return this ; }
53564	public void SwitchTo ( int lexState ) { if ( lexState >= _NUM || lexState < _NUM ) throw new TokenMgrError ( _CHAR Error : Ignoring invalid lexical state : _CHAR + lexState + _CHAR . State unchanged . '' , TokenMgrError . INVALID_LEXICAL_STATE ) ; else curLexState = lexState ; }
53572	public OIDCIdTokenConfigBuilder customAuthenticationContextMapperClass ( String customAuthenticationContextMapperClass ) { this . customAuthenticationContextMapper = customAuthenticationContextMapperClass ; return this ; }
53580	public BindResult bind ( BindRequest request ) throws LdapException { addTransactionIdControl ( request ) ; return connection . bind ( request ) ; }
53592	@ Override public FileVisitResult visitFileFailed ( T file , IOException exc ) throws IOException { Objects . requireNonNull ( file ) ; throw exc ; }
53603	public void addBitrateRecord ( final int streamNum , final long averageBitrate ) { this . streamNumbers . add ( streamNum ) ; this . bitRates . add ( averageBitrate ) ; }
53618	public static BufferedImage createColorModelCompatibleImage ( BufferedImage image ) { ColorModel cm = image . getColorModel ( ) ; return new BufferedImage ( cm , cm . createCompatibleWritableRaster ( image . getWidth ( ) , image . getHeight ( ) ) , cm . isAlphaPremultiplied ( ) , _NULL ) ; }
53620	public void removeSelectedMarker ( ) { this . markers . remove ( this . selectedMarker ) ; this . selectedMarker . remove ( ) ; }
53624	public RunnerSearchConfig ignorePackageOrClass ( String name ) { ignoredPaths . add ( name ) ; return this ; }
53625	public RESTEndpointBuilder post ( ) { this . httpMethod = HTTPMethod . POST ; return this ; }
53631	public void handleButton2Request ( RequestInvocationEvent event ) { populateValues = _BOOL ; forwardTo ( ) ; }
53652	public String format ( DateTimeFormatter formatter ) { Objects . requireNonNull ( formatter , _CHAR formatter _CHAR ) ; return formatter . format ( this ) ; }
53669	public static NSObject parse ( byte [ ] data ) throws PropertyListFormatException , UnsupportedEncodingException { BinaryPropertyListParser parser = new BinaryPropertyListParser ( ) ; return parser . doParse ( data ) ; }
53690	public byte [ ] computeUserPassword ( ) { if ( ! encrypted || ! decrypt . isOpenedWithFullPermission ( ) ) return _NULL ; return decrypt . computeUserPassword ( properties . password ) ; }
53711	public Builder attributes ( String ... attributeOIDs ) { this . attributeOIDs . addAll ( asList ( attributeOIDs ) ) ; return this ; }
53732	public void alist_append_to ( PlaLineIntAlist dest , int src_pos ) { int poly_len = plaline_len ( ) ; for ( int index = src_pos ; index < poly_len ; index ++ ) dest . add ( plaline ( index ) ) ; }
53737	public static void print ( Object ... params ) { String fullText = buildToString ( params ) ; System . out . println ( fullText ) ; }
53768	public static InvalidScopeException create ( final String message , final OAuth2Request request ) { final Set < String > responseTypes = Utils . splitResponseType ( request . < String > getParameter ( RESPONSE_TYPE ) ) ; return new InvalidScopeException ( message , Utils . isOAuth2FragmentErrorType ( responseTypes ) ? FRAGMENT : QUERY ) ; }
53769	public static boolean isTargetFilterApplicable ( Aci aci , AciTargetMatchContext matchCtx ) { TargetFilter targetFilter = aci . getTargets ( ) . getTargetFilter ( ) ; return targetFilter == _NULL || targetFilter . isApplicable ( matchCtx ) ; }
53770	public boolean writeTemplateEntry ( TemplateEntry templateEntry ) throws IOException , LDIFException { ifNull ( templateEntry ) ; return templateEntry . toLDIF ( exportConfig ) ; }
53789	@ Fluent public Job done ( ) { eventBus . send ( Kue . workerAddress ( _CHAR done _CHAR , this ) , this . toJson ( ) ) ; return this ; }
53791	public TreePath pathByAddingChild ( Object child ) { if ( child == _NULL ) throw new NullPointerException ( _CHAR Null child not allowed _CHAR ) ; return new TreePath ( this , child ) ; }
53796	public java . lang . String toString ( ) { String xml = this . toString ( _BOOL , _BOOL ) ; return xml ; }
53802	public static void main ( final String [ ] args ) { parseArgs ( args ) ; connect ( ) ; }
53811	public void register ( ReplicationServerHandler rsHandler ) { startMonitoringPublisher ( ) ; connectedRSs . put ( rsHandler . getServerId ( ) , rsHandler ) ; }
53866	public static List < String > readLines ( InputStream input , Charset encoding ) throws IOException { InputStreamReader reader = new InputStreamReader ( input , Charsets . toCharset ( encoding ) ) ; return readLines ( reader ) ; }
53867	public final void lazySet ( boolean newValue ) { int v = newValue ? _NUM : _NUM ; unsafe . putOrderedInt ( this , valueOffset , v ) ; }
53880	public static String collapseWhitespace ( final String value ) { validate ( value , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return value . trim ( ) . replaceAll ( _CHAR \\ s \\ s + _CHAR , _CHAR _CHAR ) ; }
53882	public Builder flicker ( boolean flicker ) { this . flicker = flicker ; return this ; }
53884	public void write ( int b ) throws IOException { out . write ( b ) ; written ++ ; }
53893	private static void legacyMergeSort ( Object [ ] a , int fromIndex , int toIndex ) { Object [ ] aux = copyOfRange ( a , fromIndex , toIndex ) ; mergeSort ( aux , a , fromIndex , toIndex , - fromIndex ) ; }
53897	public void endCompose ( StylesheetRoot sroot ) throws TransformerException { StylesheetRoot . ComposeState cstate = sroot . getComposeState ( ) ; cstate . popStackMark ( ) ; }
53904	static void clear ( ) { federationCache . clear ( ) ; configCache . clear ( ) ; }
53913	public static ArgumentException unknownSubType ( RelationDefinition < ? , ? > r , String typeName , String typeUsage ) { LocalizableMessage msg = ERR_DSCFG_ERROR_SUB_TYPE_UNRECOGNIZED . get ( typeName , r . getUserFriendlyName ( ) , typeUsage ) ; return new ArgumentException ( msg ) ; }
53924	protected Expression numberlit ( int opPos ) { opPos = getFirstChildPos ( opPos ) ; return ( XNumber ) getTokenQueue ( ) . elementAt ( getOp ( opPos ) ) ; }
53942	public int isNullable ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . nullable ; }
53957	public void caretPositionChanged ( InputMethodEvent e ) { ( ( InputMethodListener ) a ) . caretPositionChanged ( e ) ; ( ( InputMethodListener ) b ) . caretPositionChanged ( e ) ; }
53958	protected void callChildVisitors ( XSLTVisitor visitor , boolean callAttrs ) { if ( callAttrs ) m_selectExpression . getExpression ( ) . callVisitors ( m_selectExpression , visitor ) ; super . callChildVisitors ( visitor , callAttrs ) ; }
53959	public ConnectionParameters bindPassword ( String password ) { bindPassword = password ; return this ; }
53962	@ Override public EnumEvalResult evaluate ( AciEvalContext evalCtx ) { EnumEvalResult matched = getMatched ( evalCtx . getCurrentSSF ( ) ) ; return matched . getRet ( type , _BOOL ) ; }
53981	public Builder withAppleEndpoint ( String appleEndpoint ) { config . setAppleEndpoint ( appleEndpoint ) ; return this ; }
53986	@ Override public void clear_doors ( ) { super . clear_doors ( ) ; target_doors . clear ( ) ; }
54000	@ Override public boolean rotateFile ( RotatableLogFile writer ) { long currInterval = TimeThread . getTime ( ) - writer . getLastRotationTime ( ) . getTimeInMillis ( ) ; return currInterval > timeInterval ; }
54001	@ Deprecated public static void accessStatistic ( String name , long currentTimeMillis , long costTimeMillis , long bizProcessTime , AccessStatus accessStatus ) { Application application = new Application ( URLParamType . application . getValue ( ) , URLParamType . module . getValue ( ) ) ; accessStatistic ( name , application , currentTimeMillis , costTimeMillis , bizProcessTime , accessStatus ) ; }
54013	public boolean isWritable ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . writable ; }
54015	@ Deprecated public boolean equals ( String s ) { if ( s == _NULL || mimeType == _NULL ) return _BOOL ; return isMimeTypeEqual ( s ) ; }
54028	public Node item ( int i ) { if ( getLength ( ) == _NUM || i >= m_avts . size ( ) ) return _NULL ; else return new Attribute ( ( ( AVT ) m_avts . get ( i ) ) , ElemLiteralResult . this ) ; }
54045	public String returnTypeOrEmpty ( Method method , PythonImportHandler importHandler ) { TypeRef returnType = method . getOutputType ( ) ; return messages ( ) . isEmptyType ( returnType ) ? _CHAR _CHAR : typeCardinalityComment ( returnType , importHandler ) ; }
54063	private static byte [ ] encode3to4 ( byte [ ] b4 , byte [ ] threeBytes , int numSigBytes , int options ) { encode3to4 ( threeBytes , _NUM , numSigBytes , b4 , _NUM , options ) ; return b4 ; }
54079	public MaterialBarcodeScannerBuilder withCenterTracker ( ) { mScannerMode = MaterialBarcodeScanner . SCANNER_MODE_CENTER ; return this ; }
54082	public void componentResized ( ComponentEvent e ) { ( ( ComponentListener ) a ) . componentResized ( e ) ; ( ( ComponentListener ) b ) . componentResized ( e ) ; }
54086	public void handleBtnSearchRequest ( RequestInvocationEvent event ) { submitCycle = _BOOL ; forwardTo ( ) ; }
54099	public void parse ( InputSource input ) throws IOException , SAXException { setupXMLReader ( ) ; xmlReader . parse ( input ) ; }
54103	protected Expression literal ( int opPos ) { opPos = getFirstChildPos ( opPos ) ; return ( XString ) getTokenQueue ( ) . elementAt ( getOp ( opPos ) ) ; }
54109	public OrderService retrieveOrdersForAccount ( String accountId , Handler < AsyncResult < List < Order >> > resultHandler ) { delegate . retrieveOrdersForAccount ( accountId , resultHandler ) ; return this ; }
54114	public static String parseAnySimpleType ( String lexicalXSDAnySimpleType ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseAnySimpleType ( lexicalXSDAnySimpleType ) ; }
54117	protected void callChildVisitors ( XSLTVisitor visitor , boolean callAttrs ) { if ( callAttrs ) m_selectExpression . getExpression ( ) . callVisitors ( m_selectExpression , visitor ) ; super . callChildVisitors ( visitor , callAttrs ) ; }
54160	public static java . math . BigDecimal parseDecimal ( String lexicalXSDDecimal ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseDecimal ( lexicalXSDDecimal ) ; }
54162	public void removeMember ( PersistentObject member ) throws UMSException { member . modify ( new Attr ( MEMBER_ATTR_NAME , this . getDN ( ) ) , ModificationType . DELETE ) ; member . save ( ) ; }
54181	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { super . fixupVariables ( vars , globalsSize ) ; if ( _NULL != m_arg1 ) m_arg1 . fixupVariables ( vars , globalsSize ) ; }
54214	final boolean shouldMapAttrChar ( int value ) { if ( value < ASCII_MAX ) return shouldMapAttrChar_ASCII [ value ] ; return get ( value ) ; }
54216	@ Override public Name composeName ( Name name , Name prefix ) throws NamingException { prefix = ( Name ) prefix . clone ( ) ; return prefix . addAll ( name ) ; }
54219	public void loading ( ) { mHintView . setVisibility ( View . GONE ) ; mProgressBar . setVisibility ( View . VISIBLE ) ; }
54222	public void removeRow ( int row ) { dataVector . removeElementAt ( row ) ; fireTableRowsDeleted ( row , row ) ; }
54240	protected void parseDOMAttributes ( Element element ) throws SAML2Exception { super . parseDOMAttributes ( element ) ; sessionIndex = element . getAttribute ( SAML2Constants . SESSION_INDEX ) ; }
54247	boolean isViewableAs ( MethodType newType , boolean keepInterfaces ) { if ( ! VerifyType . isNullConversion ( returnType ( ) , newType . returnType ( ) , keepInterfaces ) ) return _BOOL ; return parametersAreViewableAs ( newType , keepInterfaces ) ; }
54256	private AuthTargetMappingBuilder addMapping ( String tokenTypeId , String authIndexType , String authIndexValue , Map < String , String > context ) { mappings . put ( tokenTypeId , new AuthTarget ( authIndexType , authIndexValue , context ) ) ; return this ; }
54259	public StampingProperties preserveEncryption ( ) { this . preserveEncryption = _BOOL ; return this ; }
54261	public static SimpleBindRequest newSimpleBindRequest ( final String name , final char [ ] password ) { Reject . ifNull ( name , password ) ; return new SimpleBindRequestImpl ( name , getBytes ( password ) ) ; }
54262	public int readOggVorbisRawSize ( RandomAccessFile raf ) throws CannotReadException , IOException { byte [ ] rawVorbisCommentData = readRawPacketData ( raf ) ; return rawVorbisCommentData . length + VorbisHeader . FIELD_PACKET_TYPE_LENGTH + VorbisHeader . FIELD_CAPTURE_PATTERN_LENGTH ; }
54263	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { super . beginDisplay ( event ) ; setInlineAlertMessage ( CCAlert . TYPE_ERROR , _CHAR message . error _CHAR , _CHAR uncaughtException . message _CHAR ) ; }
54281	@ Override public void updateOperationErrMsgAndResCode ( ) { setResultCode ( ResultCode . NO_SUCH_OBJECT ) ; appendErrorMessage ( ERR_COMPARE_NO_SUCH_ENTRY . get ( getEntryDN ( ) ) ) ; }
54291	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR HTML_ENTITY \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR URL \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR TYPE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR TITLE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR HTML \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR SUMMARY \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR COLLECT \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR HIRE_DATE \ _CHAR INTEGER ) ; _CHAR ) ; }
54300	public void removeUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { super . removeUpdate ( changes , adjustAllocation ( a ) , f ) ; updateVisibilityModel ( ) ; }
54302	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
54304	private ModifyOperation replaceAttrEntry ( DN dn , String attrName , Object ... attrValStrings ) { ModifyRequest modifyRequest = Requests . newModifyRequest ( dn ) . addModification ( REPLACE , attrName , attrValStrings ) ; return getRootConnection ( ) . processModify ( modifyRequest ) ; }
54312	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR GREEN_UPDATE \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
54313	protected void validate ( ) { super . validate ( ) ; updateGrid ( ) ; }
54316	public synchronized void addStratum ( SmapStratum stratum , boolean defaultStratum ) { strata . add ( stratum ) ; if ( defaultStratum ) this . defaultStratum = stratum . getStratumName ( ) ; }
54333	public GSERParser skipMSP ( ) throws GSERException { skip ( GSER_MSP ) ; return this ; }
54347	public ConfigParameters disableConnectionHandlers ( boolean disable ) { disableConnectionHandlers = disable ; return this ; }
54354	protected void callChildVisitors ( XSLTVisitor visitor , boolean callAttrs ) { if ( callAttrs ) m_test . getExpression ( ) . callVisitors ( m_test , visitor ) ; super . callChildVisitors ( visitor , callAttrs ) ; }
54362	public Query whereEqualTo ( Contact . Field field , Object value ) { addNewConstraint ( field , Where . equalTo ( field . getColumn ( ) , value ) ) ; return this ; }
54373	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR _CHAR ( _CHAR + _CHAR _CHAR INTEGER PRIMARY KEY AUTOINCREMENT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR TEXT , _CHAR + _CHAR _CHAR INTEGER ) ; _CHAR ) ; }
54375	public void handleButton1Request ( RequestInvocationEvent event ) { backTrail ( ) ; forwardToRealmView ( event ) ; }
54384	@ NonNull public static Expired hasExpired ( @ NonNull String key ) { failIfNotInitialized ( ) ; return new Expired ( key ) ; }
54390	public String format ( DateTimeFormatter formatter ) { Objects . requireNonNull ( formatter , _CHAR formatter _CHAR ) ; return formatter . format ( this ) ; }
54394	public AuthenticationEnforcer exceptPatch ( ) { exceptPatch = _BOOL ; return this ; }
54397	public static ArgumentException missingNameInPropertyModification ( String arg ) { LocalizableMessage msg = ERR_DSCFG_ERROR_NO_NAME_IN_PROPERTY_MOD . get ( arg ) ; return new ArgumentException ( msg ) ; }
54405	public void addEventHandler ( final EventTypes event , final Class < ? extends IEventHandler > eventHandler ) { EventCommandData eventCommandData = new EventCommandData ( eventHandler ) ; eventHandlers . get ( event ) . add ( eventCommandData ) ; }
54406	public void append_to ( PlaLineIntAlist dest , int src_pos ) { int poly_len = size ( ) ; for ( int index = src_pos ; index < poly_len ; index ++ ) dest . add ( get ( index ) ) ; }
54408	public PdfCanvas endText ( ) { contentStream . getOutputStream ( ) . writeBytes ( ET ) ; return this ; }
54410	public static SearchResultEntry newSearchResultEntry ( final String name ) { final Entry entry = new LinkedHashMapEntry ( ) . setName ( name ) ; return new SearchResultEntryImpl ( entry ) ; }
54433	public AuthTargetMappingBuilder addMapping ( TokenTypeId tokenTypeId , String authIndexType , String authIndexValue , Map < String , String > context ) { mappings . put ( tokenTypeId . getId ( ) , new AuthTarget ( authIndexType , authIndexValue , context ) ) ; return this ; }
54456	public static MatchedValuesFilter createApproximateFilter ( String rawAttributeType , ByteString rawAssertionValue ) { Reject . ifNull ( rawAttributeType , rawAssertionValue ) ; return new MatchedValuesFilter ( APPROXIMATE_MATCH_TYPE , rawAttributeType , rawAssertionValue , _NULL , _NULL , _NULL , _NULL ) ; }
54460	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { removePageSessionAttribute ( PAGE_MODIFIED ) ; super . handleButton2Request ( event ) ; }
54470	private boolean inNestedFrameSet ( ) { FrameSetView parent = ( FrameSetView ) getParent ( ) ; return ( parent . getParent ( ) instanceof FrameSetView ) ; }
54477	public static SimpleBindRequest newSimpleBindRequest ( final String name , final byte [ ] password ) { Reject . ifNull ( name , password ) ; return new SimpleBindRequestImpl ( name , password ) ; }
54484	public Builder rootCa ( Certificate rootCa ) { this . rootCa = rootCa ; return this ; }
54524	public static final boolean isWhiteSpace ( CharSequence s ) { for ( int i = s . length ( ) - _NUM ; i >= _NUM ; i -- ) if ( ! isWhiteSpace ( s . charAt ( i ) ) ) return _BOOL ; return _BOOL ; }
54531	public void reset ( ) { System . arraycopy ( IV , _NUM , ofbV , _NUM , IV . length ) ; cipher . reset ( ) ; }
54536	public PollingWaitCallbackBuilder withWaitTime ( String waitTime ) { this . waitTime = waitTime ; return this ; }
54537	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { super . fixupVariables ( vars , globalsSize ) ; m_expr . fixupVariables ( vars , globalsSize ) ; }
54539	public void close ( ) throws java . io . IOException { if ( m_writer != _NULL ) m_writer . close ( ) ; flushBuffer ( ) ; }
54561	private void displayError ( LocalizableMessage msg , LocalizableMessage title ) { Utilities . displayError ( this , msg , title ) ; toFront ( ) ; }
54576	public boolean equals ( Object obj ) { if ( obj == this ) return _BOOL ; return ( obj instanceof DialogState ) && ( ( DialogState ) obj ) . m_dialogState == m_dialogState ; }
54577	private static int fastfloor ( double x ) { final int xi = ( int ) x ; return x < xi ? xi - _NUM : xi ; }
54579	public final boolean popAndTop ( ) { m_index -- ; return ( m_index >= _NUM ) ? m_values [ m_index ] : _BOOL ; }
54586	private void handleSaveException ( Subject subject , String realm , String uuid , Exception e ) throws EntitlementException { OpenSSOLogger . log ( ERROR , Level . INFO , FAILED_SAVE_RESOURCE_TYPE , new String [ ] { realm , uuid , e . getMessage ( ) } , subject ) ; throw new EntitlementException ( MODIFY_RESOURCE_TYPE_FAIL , e , uuid ) ; }
54597	@ AfterClass public void cleanup ( ) throws Exception { int resultCode = TestCaseUtils . applyModifications ( _BOOL , _CHAR dn : cn = schema _CHAR , _CHAR changetype : modify _CHAR , _CHAR delete : ditStructureRules _CHAR , _CHAR dITStructureRules : ( _NUM NAME _CHAR FORM organizationalNameForm SUP _NUM ) _CHAR , _CHAR dITStructureRules : ( _NUM NAME _CHAR FORM domainNameForm ) _CHAR , _CHAR - _CHAR , _CHAR delete : nameForms _CHAR , _CHAR nameForms : ( domainNameForm - oid NAME _CHAR OC domain MUST ( dc ) ) _CHAR , _CHAR nameForms : ( organizationalNameForm - oid NAME _CHAR OC organization MUST ( o ) ) _CHAR ) ; assertEquals ( resultCode , _NUM ) ; }
54604	protected Object createSubtreeTimingMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { subtreePolicyTiming = new SubtreeTimingImpl ( this ) ; return subtreePolicyTiming ; }
54616	static boolean doesIconReferenceImage ( Icon icon , Image image ) { Image iconImage = ( icon != _NULL && ( icon instanceof ImageIcon ) ) ? ( ( ImageIcon ) icon ) . getImage ( ) : _NULL ; return ( iconImage == image ) ; }
54630	public void keyPressed ( KeyEvent e ) { ( ( KeyListener ) a ) . keyPressed ( e ) ; ( ( KeyListener ) b ) . keyPressed ( e ) ; }
54653	public boolean offerLast ( E e ) { addLast ( e ) ; return _BOOL ; }
54690	private RunnableScheduledFuture < ? > peekExpired ( ) { RunnableScheduledFuture < ? > first = queue [ _NUM ] ; return ( first == _NULL || first . getDelay ( NANOSECONDS ) > _NUM ) ? _NULL : first ; }
54706	public JobService jobRangeByState ( String state , long from , long to , String order , Handler < AsyncResult < List < Job >> > handler ) { delegate . jobRangeByState ( state , from , to , order , handler ) ; return this ; }
54729	public void addCertificatesAndCRLs ( CertStore certStore ) throws CertStoreException , CMSException { certs . addAll ( CMSUtils . getCertificatesFromStore ( certStore ) ) ; crls . addAll ( CMSUtils . getCRLsFromStore ( certStore ) ) ; }
54731	@ Override public int doFinal ( ByteBuffer inBuffer , ByteBuffer outBuffer ) throws ShortBufferException , IllegalBlockSizeException , BadPaddingException { int n = cipher . update ( inBuffer , outBuffer ) ; return n + cipher . doFinal ( outBuffer ) ; }
54734	public void write ( byte [ ] buf ) throws IOException { output . write ( buf ) ; bytesWritten += buf . length ; }
54745	public XObject execute ( XPathContext xctxt ) throws javax . xml . transform . TransformerException { System . out . println ( _CHAR Error ! Function . execute should not be called ! _CHAR ) ; return _NULL ; }
54753	public void skip ( int len ) throws IOException { length += len ; StreamUtil . skip ( in , len ) ; }
54754	public void add ( HDR sipheader , boolean top ) { if ( top ) this . addFirst ( sipheader ) ; else this . add ( sipheader ) ; }
54761	public Builder keyAlgorithms ( String ... keyAlgorithms ) { this . keyAlgorithms = keyAlgorithms ; return this ; }
54763	public void windowStateChanged ( WindowEvent e ) { ( ( WindowStateListener ) a ) . windowStateChanged ( e ) ; ( ( WindowStateListener ) b ) . windowStateChanged ( e ) ; }
54771	@ Override public void onTokenRefresh ( ) { Intent intent = new Intent ( this , RegistrationIntentService . class ) ; startService ( intent ) ; }
54774	public static String printBoolean ( boolean val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printBoolean ( val ) ; }
54776	public void mouseEntered ( MouseEvent e ) { ( ( MouseListener ) a ) . mouseEntered ( e ) ; ( ( MouseListener ) b ) . mouseEntered ( e ) ; }
54781	public void insertUpdate ( DocumentEvent changes , Shape a , ViewFactory f ) { handleInsert ( changes . getOffset ( ) , changes . getLength ( ) ) ; super . insertUpdate ( changes , a , f ) ; }
54795	public void resetPairs ( ) { PairedTextEncodedStringNullTerminated . ValuePairs value = ( ( PairedTextEncodedStringNullTerminated ) getObject ( DataTypes . OBJ_TEXT ) ) . getValue ( ) ; value . getMapping ( ) . clear ( ) ; }
54807	public ConfigException createClassLoadingExceptionAdaptor ( DN dn , String className , Exception e ) { LocalizableMessage message = ERR_ADMIN_CANNOT_INSTANTIATE_CLASS . get ( className , dn , stackTraceToSingleLineString ( e , _BOOL ) ) ; return new ConfigException ( message , e ) ; }
54809	public boolean handleError ( DOMError error ) { errors . add ( new DOMErrorImpl ( error ) ) ; return _BOOL ; }
54843	public SecurityServerHeader createSecurityServerHeader ( ) { SecurityServer secServer = new SecurityServer ( ) ; return secServer ; }
54847	javax . xml . transform . Templates processFromNode ( Node node , String systemID ) throws TransformerConfigurationException { m_DOMsystemID = systemID ; return processFromNode ( node ) ; }
54850	public final boolean push ( boolean val ) { if ( m_index == m_allocatedSize - _NUM ) grow ( ) ; return ( m_values [ ++ m_index ] = val ) ; }
54854	@ Override protected void detach ( ) { super . detach ( ) ; poolEntry = _NULL ; }
54861	public ProductService retrieveProductsByPage ( int page , Handler < AsyncResult < List < Product >> > resultHandler ) { delegate . retrieveProductsByPage ( page , resultHandler ) ; return this ; }
54874	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiToolBarUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiToolBarUI ) mui ) . uis , a ) ; }
54876	public Scanner useDelimiter ( Pattern pattern ) { delimPattern = pattern ; return this ; }
54885	public void startElement ( ) { nss . pushContext ( ) ; inCollectingMode = _BOOL ; }
54887	public StringBuffer append ( double d ) { RealToString . getInstance ( ) . appendDouble ( this , d ) ; return this ; }
54891	public void flush ( ) throws java . io . IOException { flushBuffer ( ) ; m_os . flush ( ) ; }
54941	public static String printUnsignedInt ( long val ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . printUnsignedInt ( val ) ; }
54943	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
54976	public void startPrefixMapping ( String prefix , String uri ) throws org . xml . sax . SAXException { m_prefixMappings . addElement ( prefix ) ; m_prefixMappings . addElement ( uri ) ; }
54992	private static void checkCanReadConfig ( ConnectionWrapper conn ) throws IOException { SearchRequest request = newSearchRequest ( _CHAR cn = config _CHAR , BASE_OBJECT , _CHAR objectclass =* _CHAR , NO_ATTRIBUTES ) ; conn . getConnection ( ) . searchSingleEntry ( request ) ; }
54996	public boolean isCaseSensitive ( int columnIndex ) throws SQLException { checkColRange ( columnIndex ) ; return colInfo [ columnIndex ] . caseSensitive ; }
55017	@ Override public boolean hasMembers ( ) { if ( impl == _NULL || impl . membership == _NULL ) return _BOOL ; return impl . membership . hasMembers ( ) ; }
55020	public static Object convertStringToJAXB ( String str ) throws JAXBException { Unmarshaller u = jaxbContext . createUnmarshaller ( ) ; return u . unmarshal ( XMLUtils . createSAXSource ( new InputSource ( new StringReader ( str ) ) ) ) ; }
55031	private void writeObject ( java . io . ObjectOutputStream s ) throws IOException { if ( actions == _NULL ) getActions ( ) ; s . defaultWriteObject ( ) ; }
55053	public void reset ( ) { currentContext = new Context2 ( _NULL ) ; currentContext . declarePrefix ( _CHAR xml _CHAR , XMLNS ) ; }
55059	public RequirementsBuilder addProperty ( String name , String description ) { addProperty ( name , _CHAR string _CHAR , description ) ; return this ; }
55061	public static boolean isDigit ( final char c ) { final ASCIICharProp cp = ASCIICharProp . valueOf ( c ) ; return cp != _NULL ? cp . isDigit ( ) : _BOOL ; }
55078	private void requestInputMethod ( Dialog dialog ) { Window window = dialog . getWindow ( ) ; window . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_STATE_ALWAYS_VISIBLE ) ; }
55086	private int socksGetServerPort ( ) { InetSocketAddress addr = ( InetSocketAddress ) proxy . address ( ) ; return addr . getPort ( ) ; }
55128	protected void deepMarkSizeInvalid ( ) { markSizeInvalid ( ) ; for ( int counter = getChildCount ( ) - _NUM ; counter >= _NUM ; counter -- ) ( ( TreeStateNode ) getChildAt ( counter ) ) . deepMarkSizeInvalid ( ) ; }
55143	private void recordScreenView ( ) { String screenName = getCurrentImageId ( ) + _CHAR - _CHAR + getCurrentImageTitle ( ) ; mFirebaseAnalytics . setCurrentScreen ( this , screenName , _NULL ) ; }
55148	public RequestLine parseSIPRequestLine ( String requestLine ) throws ParseException { requestLine += _CHAR \ n _CHAR ; return new RequestLineParser ( requestLine ) . parse ( ) ; }
55162	private void enableBle ( ) { final Intent enableIntent = new Intent ( BluetoothAdapter . ACTION_REQUEST_ENABLE ) ; startActivityForResult ( enableIntent , Utils . REQUEST_ENABLE_BT ) ; }
55164	public void removeEntry ( SSOToken token , String entryDN , int objectType , boolean recursive , boolean softDelete ) throws AMException , SSOException { super . removeEntry ( token , entryDN , objectType , recursive , softDelete ) ; removeFromCache ( entryDN ) ; }
55183	public void remove ( ) { checkState ( ) ; iterator . remove ( ) ; }
55207	public static void serialize ( XMPMeta xmp , OutputStream out , SerializeOptions options ) throws XMPException { assertImplementation ( xmp ) ; XMPSerializerHelper . serialize ( ( XMPMetaImpl ) xmp , out , options ) ; }
55209	public int right_x_value ( int p_y ) { int result = Math . min ( oct_rx , oct_urx - p_y ) ; return Math . min ( result , oct_lrx + p_y ) ; }
55221	public void schedule ( TimerTask task , Date firstTime , long period ) { if ( period <= _NUM ) throw new IllegalArgumentException ( _CHAR Non - positive period . '' ) ; sched ( task , firstTime . getTime ( ) , - period ) ; }
55227	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR URL_COLLECT \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR URL \ _CHAR TEXT NOT NULL , _CHAR + _CHAR \ _CHAR COMMENT \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR DATE \ _CHAR INTEGER , _CHAR + _CHAR \ _CHAR G_TYPE \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR G_AUTHOR \ _CHAR TEXT ) ; _CHAR ) ; }
55228	@ RequestMapping ( value = _CHAR / authenticate _CHAR , method = RequestMethod . GET , produces = MediaType . APPLICATION_JSON_VALUE ) @ Timed public String isAuthenticated ( HttpServletRequest request ) { log . debug ( _CHAR REST request to check if the current user is authenticated '' ) ; return request . getRemoteUser ( ) ; }
55244	public final short readShort ( ) throws IOException { readFully ( scratch , _NUM , SizeOf . SHORT ) ; return Memory . peekShort ( scratch , _NUM , ByteOrder . BIG_ENDIAN ) ; }
55254	public CTSDJLDAPv3PersistentSearchBuilder returnAttributes ( String ... attributeNames ) { this . attributeNames = attributeNames ; return this ; }
55259	public final HashCode append ( boolean value ) { hashCode = combine ( hashCode , value ) ; return this ; }
55276	@ Override public void updateDrawState ( TextPaint ds ) { ds . setColor ( editorDelegate . mEditText . getCurrentTextColor ( ) ) ; ds . setUnderlineText ( _BOOL ) ; }
55288	public void reset ( ) { npoints = _NUM ; bounds = _NULL ; }
55307	public AwtreeNode pop ( ) { if ( node_list . isEmpty ( ) ) return _NULL ; return node_list . removeLast ( ) ; }
55310	public void ancestorResized ( HierarchyEvent e ) { ( ( HierarchyBoundsListener ) a ) . ancestorResized ( e ) ; ( ( HierarchyBoundsListener ) b ) . ancestorResized ( e ) ; }
55318	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
55321	public void removeEditActionListener ( ActionListener listener ) { editButton . removeActionListener ( listener ) ; iconButton . removeActionListener ( listener ) ; }
55331	private boolean canBeFetched ( int i ) { AbstractNodeTask task = waitingQueue . get ( i ) ; return workingList . get ( task . getNode ( ) ) == _NULL ; }
55339	public final HashCode append ( Object value ) { hashCode = combine ( hashCode , value ) ; return this ; }
55371	@ Override public void execute ( ) throws BuildException { super . execute ( ) ; execute ( _CHAR / threaddump _CHAR ) ; }
55384	@ Override public synchronized void mark ( int readlimit ) { in . mark ( readlimit ) ; mark = pos ; }
55396	public static byte [ ] scalarMultBase ( byte [ ] n ) { toPrivateKey ( n ) ; return scalarMult ( n , BASE_POINT ) ; }
55407	public static List < SearchResultEntry > findStringsSimiliar ( String text ) { List < SearchResultEntry > results = findStringsContaining ( text ) ; return results ; }
55409	public static void dropTable ( SQLiteDatabase db , boolean ifExists ) { String sql = _CHAR DROP TABLE _CHAR + ( ifExists ? _CHAR IF EXISTS _CHAR : _CHAR _CHAR ) + _CHAR \ _CHAR HTML_ENTITY \ _CHAR _CHAR ; db . execSQL ( sql ) ; }
55416	@ Fluent public Job onComplete ( Handler < Job > completeHandler ) { this . on ( _CHAR complete _CHAR , _NULL ) ; return this ; }
55418	public boolean isSharped ( ) { byte note = getToneByte ( ) ; return Tone . getById ( note ) . isSharped ( note ) ; }
55444	public void reinsert_tree_items ( ) { remove_all_board_items ( ) ; insert_all_board_items ( ) ; }
55453	public PdfCanvas rectangle ( double x , double y , double width , double height ) { contentStream . getOutputStream ( ) . writeDouble ( x ) . writeSpace ( ) . writeDouble ( y ) . writeSpace ( ) . writeDouble ( width ) . writeSpace ( ) . writeDouble ( height ) . writeSpace ( ) . writeBytes ( re ) ; return this ; }
55463	public void collectTransactionTermiatedEvent ( SipProvider provider ) throws TooManyListenersException { initCollectors ( provider ) ; provider . addSipListener ( transactionTerminationCollector ) ; }
55465	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiTextUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiTextUI ) mui ) . uis , a ) ; }
55470	public String toXML ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; return stringBuilder . toString ( ) ; }
55472	public boolean orgTemplateExists ( String serviceName ) throws AMException , SSOException { ServiceConfig sc = AMServiceUtils . getOrgConfig ( token , entryDN , serviceName ) ; return ( sc != _NULL ) ; }
55475	public static boolean doesHandleProperties ( final Argument argument ) { final String id = argument . getLongIdentifier ( ) ; return ( _CHAR add _CHAR . equals ( id ) || _CHAR remove _CHAR . equals ( id ) || _CHAR reset _CHAR . equals ( id ) || _CHAR set _CHAR . equals ( id ) ) ; }
55478	public BuilderImages < T > useInternalStorage ( ) { this . config . setUseInternalStorage ( ) ; return this ; }
55483	public Builder noTransform ( ) { this . noTransform = _BOOL ; return this ; }
55487	public byte [ ] close ( ) { Fax4PostEncode ( ) ; return outBuf . toByteArray ( ) ; }
55498	public QRCallbackBuilder withUriScheme ( String scheme ) { this . scheme = scheme ; return this ; }
55506	public void loadRules ( Reader in , URL ref ) throws IOException { CssParser parser = new CssParser ( ) ; parser . parse ( ref , in , _BOOL , _BOOL ) ; }
55510	public JobService activeCount ( String type , Handler < AsyncResult < Long >> handler ) { delegate . activeCount ( type , handler ) ; return this ; }
55530	@ Override public long end ( ) throws IOException { if ( remaining > _NUM ) return remaining ; return _NUM ; }
55536	protected void paintChild ( Graphics g , Rectangle alloc , int index ) { View child = getView ( index ) ; child . paint ( g , alloc ) ; }
55558	public void addElement ( int value ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; super . addElement ( value ) ; }
55559	private void acceptForSession ( ) { returnValue = ReturnType . ACCEPTED_FOR_SESSION ; dispose ( ) ; }
55568	public static String serializeToString ( XMPMeta xmp , SerializeOptions options ) throws XMPException { assertImplementation ( xmp ) ; return XMPSerializerHelper . serializeToString ( ( XMPMetaImpl ) xmp , options ) ; }
55570	private static String keyAlgorithmFromTransformation ( String transformation ) { final int separatorIndex = transformation . indexOf ( _CHAR ) ; return _NUM < separatorIndex ? transformation . substring ( _NUM , separatorIndex ) : transformation ; }
55573	public int upper_y_value ( int p_x ) { int result = Math . min ( oct_uy , p_x - oct_ulx ) ; return Math . min ( result , oct_urx - p_x ) ; }
55588	public static int dpToPx ( int dp ) { float density = Resources . getSystem ( ) . getDisplayMetrics ( ) . density ; return Math . round ( dp * density ) ; }
55591	public void mouseDragged ( MouseEvent e ) { ( ( MouseMotionListener ) a ) . mouseDragged ( e ) ; ( ( MouseMotionListener ) b ) . mouseDragged ( e ) ; }
55593	AuditLogFilterBuilder add ( String configPath , JsonValueObjectConverter < AuditLogFilter > filterFactory ) { auditLogFilterBuilder . put ( configPath , filterFactory ) ; return this ; }
55600	public static GenericExtendedResult newGenericExtendedResult ( final ResultCode resultCode ) { Reject . ifNull ( resultCode ) ; return new GenericExtendedResultImpl ( resultCode ) ; }
55608	public static SearchResultEntry newSearchResultEntry ( final DN name ) { final Entry entry = new LinkedHashMapEntry ( ) . setName ( name ) ; return new SearchResultEntryImpl ( entry ) ; }
55612	@ Override public void destroyModuleState ( ) { UUID = _NULL ; userName = _NULL ; }
55624	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiSliderUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiSliderUI ) mui ) . uis , a ) ; }
55626	public void show_layer_name ( BrdLayer p_layer ) { if ( write_protected ) return ; statusPanel . current_layer . setText ( active_layer_string + p_layer . name ) ; }
55652	public void move_mouse ( PlaPointFloat p_to_location ) { if ( board_is_read_only ) return ; board_panel . move_mouse ( gdi_context . coordinate_transform . board_to_screen ( p_to_location ) ) ; }
55657	public synchronized void actionPerformed ( ActionEvent e ) { updateRegion ( ) ; if ( outer . contains ( locn ) && ! inner . contains ( locn ) ) autoScroll . autoscroll ( locn ) ; }
55659	@ Override public void clear ( ) { if ( locked ) throw new IllegalStateException ( sm . getString ( _CHAR parameterMap . locked _CHAR ) ) ; super . clear ( ) ; }
55675	protected Object createSelfEvaluationMBean ( String groupName , String groupOid , ObjectName groupObjname , MBeanServer server ) { selfPolicyEvaluation = new SelfEvaluationImpl ( this ) ; return selfPolicyEvaluation ; }
55679	@ Override public void onWZAudioSampleListenerRelease ( ) { mUpdateThread . shutdown ( ) ; mUpdateThread = _NULL ; }
55682	public final HashCode append ( float value ) { hashCode = combine ( hashCode , value ) ; return this ; }
55692	public static boolean parseBoolean ( String lexicalXSDBoolean ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseBoolean ( lexicalXSDBoolean ) ; }
55699	public int nextInt ( int least , int bound ) { if ( least >= bound ) throw new IllegalArgumentException ( ) ; return nextInt ( bound - least ) + least ; }
55700	public BinaryBitmap crop ( int left , int top , int width , int height ) { LuminanceSource newSource = binarizer . getLuminanceSource ( ) . crop ( left , top , width , height ) ; return new BinaryBitmap ( binarizer . createBinarizer ( newSource ) ) ; }
55705	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
55721	public void handleTblDataServerActionHrefRequest ( RequestInvocationEvent event ) throws ModelControlException { String serverName = ( String ) getDisplayFieldValue ( TBL_DATA_SERVER_ACTION_HREF ) ; forwardToServerProfilePage ( serverName ) ; }
55722	public static int sp2px ( Context context , float spValue ) { final float scale = context . getResources ( ) . getDisplayMetrics ( ) . density ; return ( int ) ( spValue * scale + _NUM . _NUM ) ; }
55726	public static ComponentUI createUI ( JComponent a ) { ComponentUI mui = new MultiTreeUI ( ) ; return MultiLookAndFeel . createUIs ( mui , ( ( MultiTreeUI ) mui ) . uis , a ) ; }
55737	public Builder removeAttribute ( String attributeOID ) { this . attributeOIDs . remove ( attributeOID ) ; return this ; }
55748	private void writePendingText ( ) throws SAXException { int len = textBuf . length ( ) ; if ( len != _NUM ) writer . characters ( textBuf . toString ( ) . toCharArray ( ) , _NUM , len ) ; }
55756	public synchronized void mouseMove ( int x , int y ) { peer . mouseMove ( x , y ) ; afterEvent ( ) ; }
55758	public void write ( byte [ ] b ) throws IOException { out . write ( b ) ; written += b . length ; }
55766	static void recycleWriter ( LDAPWriter < ASN1BufferWriter > writer ) { writer . getASN1Writer ( ) . recycle ( ) ; ThreadCache . putToCache ( WRITER_INDEX , writer ) ; }
55770	public ByteArrayBuilder appendBoolean ( boolean b ) { appendByte ( b ? _NUM : _NUM ) ; return this ; }
55794	public static TypeReference newSuperTypeReference ( int itfIndex ) { itfIndex & = _NUM ; return new TypeReference ( ( CLASS_EXTENDS << _NUM ) | ( itfIndex << _NUM ) ) ; }
55817	static void releaseSearchBuffer ( SearchBuffer sb ) { sb . empty ( ) ; searchBuffers . push ( sb ) ; }
55825	@ Override public void addBatch ( ) throws SQLException { super . addBatch ( ) ; batchAdded = _BOOL ; }
55855	public Name add ( int posn , String comp ) throws InvalidNameException { impl . add ( posn , comp ) ; return this ; }
55890	public SecurityVerifyHeader createSecurityVerifyHeader ( ) { SecurityVerify secVerify = new SecurityVerify ( ) ; return secVerify ; }
55894	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { bRealmSelect = _BOOL ; super . handleButton2Request ( event ) ; }
55895	public void increment ( ) { count . incrementAndGet ( ) ; rateWindow . incrementForTimestamp ( timerGetter . now ( ) ) ; }
55896	@ Override public void contextDestroyed ( ServletContextEvent event ) { log ( _CHAR contextDestroyed ( ) _CHAR ) ; this . context = _NULL ; }
55909	public StringBuilder replace ( int start , int end , String string ) { replace0 ( start , end , string ) ; return this ; }
55915	public void write ( int b ) throws IOException { wbuf [ _NUM ] = ( byte ) b ; write ( wbuf , _NUM , _NUM ) ; }
55925	public void startEditingAtPath ( TreePath path ) { TreeUI tree = getUI ( ) ; if ( tree != _NULL ) tree . startEditingAtPath ( this , path ) ; }
55928	@ Override public int doStartTag ( ) throws JspException { i = _NUM ; return EVAL_BODY_BUFFERED ; }
55934	public boolean allowsAllContentTypes ( ) { if ( mediaRange == _NULL ) return _BOOL ; else return mediaRange . type . compareTo ( STAR ) == _NUM ; }
55935	public void windowClosed ( WindowEvent e ) { ( ( WindowListener ) a ) . windowClosed ( e ) ; ( ( WindowListener ) b ) . windowClosed ( e ) ; }
55949	public static String htmlEncode ( final String html ) { validate ( html , NULL_STRING_PREDICATE , NULL_STRING_MSG_SUPPLIER ) ; return html . chars ( ) . mapToObj ( _NULL ) . map ( _NULL ) . collect ( joining ( ) ) ; }
55957	public static void createTable ( SQLiteDatabase db , boolean ifNotExists ) { String constraint = ifNotExists ? _CHAR IF NOT EXISTS _CHAR : _CHAR _CHAR ; db . execSQL ( _CHAR CREATE TABLE _CHAR + constraint + _CHAR \ _CHAR GREEN_STRATEGY \ _CHAR ( _CHAR + _CHAR \ _CHAR _id \ _CHAR INTEGER PRIMARY KEY , _CHAR + _CHAR \ _CHAR STRATEGYLISTJSON \ _CHAR TEXT , _CHAR + _CHAR \ _CHAR STRATEGYTYPE \ _CHAR TEXT ) ; _CHAR ) ; }
55960	public static void main ( String [ ] args ) throws Exception { Server server = buildNormalServer ( args [ _NUM ] , args [ _NUM ] , Integer . parseInt ( args [ _NUM ] ) ) ; server . start ( ) ; }
55965	public void init ( String componentName ) throws LogException { accessLogger = Logger . getLogger ( componentName + _CHAR . access _CHAR ) ; errorLogger = Logger . getLogger ( componentName + _CHAR . error _CHAR ) ; }
55977	public Builder signer ( PrivateKeyEntry signer ) { this . signer = signer ; return this ; }
55985	void pushChar ( ) { current . cursor -- ; current . col -- ; }
56004	synchronized void commitAndPushCommittedChanges ( CSN csn , LDAPUpdateMsg msg ) { commit ( csn , msg ) ; pushCommittedChanges ( ) ; }
56007	private void updatePacketRecvAddress ( DatagramPacket packet ) { packet . setAddress ( connectedAddress ) ; packet . setPort ( connectedPort ) ; }
56008	private boolean journalRebuildRequired ( ) { final int redundantOpCompactThreshold = _NUM ; return redundantOpCount >= redundantOpCompactThreshold && redundantOpCount >= lruEntries . size ( ) ; }
56020	public static void writeAttribue ( final UIComponent component , final String sourceKey , final String targetKey , final Object defaultValue ) throws IOException { final Object value = JKJsfUtil . getAttribute ( component , sourceKey , defaultValue ) ; JKJsfUtil . context ( ) . getResponseWriter ( ) . writeAttribute ( targetKey == _NULL ? sourceKey : targetKey , value , _NULL ) ; }
56030	public boolean validateAttributes ( Map attributeSet , String orgName ) throws SMSException { SMSEntry . validateToken ( ssm . getSSOToken ( ) ) ; return ( ss . validateAttributes ( ssm . getSSOToken ( ) , attributeSet , _BOOL , orgName ) ) ; }
56034	public void resizeAndRepaint ( ) { revalidate ( ) ; repaint ( ) ; }
56040	public static void removeApplicationType ( Subject adminSubject , String name ) throws EntitlementException { EntitlementConfiguration ec = getEntitlementConfiguration ( adminSubject , _CHAR / _CHAR ) ; ec . removeApplicationType ( name ) ; }
56041	public ListeningPoint createListeningPoint ( int port , String transport ) throws TransportNotSupportedException , InvalidArgumentException { if ( super . stackAddress == _NULL ) throw new NullPointerException ( _CHAR Stack does not have a default IP Address ! _CHAR ) ; return this . createListeningPoint ( super . stackAddress , port , transport ) ; }
56050	public static synchronized String [ ] [ ] read ( String logName , String logType , LogQuery logQuery , Object userCrdential ) throws IOException , NoSuchFieldException , IllegalArgumentException , RuntimeException , Exception { queryResult = read ( logName , logType , _NULL , logQuery , userCrdential ) ; return queryResult ; }
56052	public SAML2ConfigBuilder encryptAssertion ( boolean encryptAssertion ) { this . encryptAssertion = encryptAssertion ; return this ; }
56070	@ Override public AvroGenerator createGenerator ( OutputStream out ) throws IOException { IOContext ctxt = _createContext ( out , _BOOL ) ; return _createGenerator ( _decorate ( out , ctxt ) , ctxt ) ; }
56071	public void add ( AddRequest request ) throws LdapException { addControls ( request ) ; conn . getConnection ( ) . add ( request ) ; }
56094	public void appendErrorNodeChild ( final int errorCode , final String name , final String path , final String type ) { ErrorNode errorNode = new ErrorNode ( path , type , name , errorCode ) ; errorList . add ( errorNode ) ; }
56100	public Set keySet ( ) { if ( keySet == _NULL ) keySet = new SynchronizedSet ( new KeySet ( ) , this ) ; return keySet ; }
56120	public static javax . xml . namespace . QName parseQName ( String lexicalXSDQName , NamespaceContext nsc ) { if ( theConverter == _NULL ) initConverter ( ) ; return theConverter . parseQName ( lexicalXSDQName , nsc ) ; }
56124	protected void enableLocalSession ( Router router ) { router . route ( ) . handler ( CookieHandler . create ( ) ) ; router . route ( ) . handler ( SessionHandler . create ( LocalSessionStore . create ( vertx , _CHAR shopping . user . session _CHAR ) ) ) ; }
56128	private boolean isServerToUninstall ( ServerDescriptor server ) { Boolean sameInstanceInstallPaths = isSameInstanceInstallPaths ( server ) ; return sameInstanceInstallPaths != _NULL ? sameInstanceInstallPaths : isSamePort ( server ) && isSameHostName ( server ) ; }
56135	public RESTEndpointBuilder postData ( String s ) { this . postData = s ; return this ; }
56149	public E poll ( ) { final Node < E > f = first ; return ( f == _NULL ) ? _NULL : unlinkFirst ( f ) ; }
56153	public Builder obsolete ( final boolean isObsolete ) { this . isObsolete = isObsolete ; return this ; }
56164	public void removeAllElements ( ) { if ( ! m_mutable ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_NOT_MUTABLE , _NULL ) ) ; super . removeAllElements ( ) ; }
56166	public StatusLine parseSIPStatusLine ( String statusLine ) throws ParseException { statusLine += _CHAR \ n _CHAR ; return new StatusLineParser ( statusLine ) . parse ( ) ; }
56190	public static SearchResultReference newSearchResultReference ( final String uri ) { Reject . ifNull ( uri ) ; return new SearchResultReferenceImpl ( uri ) ; }
56215	private float calculateDeltaScale ( float t ) { float zoom = startZoom + t * ( targetZoom - startZoom ) ; return zoom / normalizedScale ; }
56217	public ImportParameters ldifFile ( String ldifFile ) { this . ldifFile = ldifFile ; return this ; }
56219	public boolean contains ( RxAction action ) { Pair < Integer , Subscription > old = mMap . get ( action . getType ( ) ) ; return ( old != _NULL && old . first == action . hashCode ( ) && ! old . second . isUnsubscribed ( ) ) ; }
56220	public LineMessagingServiceBuilder readTimeout ( long readTimeout ) { this . readTimeout = readTimeout ; return this ; }
56229	public AMAccessAuditEventBuilder component ( Component value ) { putComponent ( jsonValue , value == _NULL ? _NULL : value . toString ( ) ) ; return this ; }
56240	@ Override public void execute ( ) throws BuildException { super . execute ( ) ; execute ( createQueryString ( _CHAR / undeploy _CHAR ) . toString ( ) ) ; }
56251	private void unpackTimes ( int [ ] times ) { startTime = times [ _NUM ] ; endTime = times [ _NUM ] ; }
56257	public Builder prohibitedAttributes ( final String ... attributeNamesOrOIDs ) { this . prohibitedAttributeOIDs . addAll ( asList ( attributeNamesOrOIDs ) ) ; return this ; }
56260	public boolean remove_via_padstack ( LibPadstack p_padstack ) { if ( p_padstack == _NULL ) return _BOOL ; return via_padstacks . remove ( p_padstack ) ; }
56267	public SimplePropertyMapper defaultJsonValue ( final Object defaultValue ) { this . defaultJsonValues = defaultValue != _NULL ? singletonList ( defaultValue ) : emptyList ( ) ; return this ; }
56274	public synchronized void write ( byte b [ ] , int off , int len ) throws IOException { out . write ( b , off , len ) ; incCount ( len ) ; }
56282	public Builder removeAllNames ( ) { this . names . clear ( ) ; return this ; }
56298	public static String stringForQuery ( SQLiteStatement prog , String [ ] selectionArgs ) { prog . bindAllArgsAsStrings ( selectionArgs ) ; return prog . simpleQueryForString ( ) ; }
56329	public static String generateCQLStatementForWhereClauses ( String CQL , Index index ) { String iTableToUpdate = Utils . calculateITableName ( index ) ; return String . format ( CQL , iTableToUpdate , getWhereClauseHelper ( index ) ) ; }
