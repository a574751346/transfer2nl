66	public static Connection enlistConnection ( XAConnection xacon ) throws GenericTransactionException { if ( xacon == _NULL ) { return _NULL ; } try { XAResource resource = xacon . getXAResource ( ) ; TransactionUtil . enlistResource ( resource ) ; return xacon . getConnection ( ) ; } catch ( SQLException e ) { throw new GenericTransactionException ( _CHAR SQL error , could not enlist connection in transaction even though transactions are available _CHAR , e ) ; } }
493	public void invalidateWheel ( boolean clearCaches ) { if ( clearCaches ) { recycle . clearAll ( ) ; if ( itemsLayout != _NULL ) { itemsLayout . removeAllViews ( ) ; } scrollingOffset = _NUM ; } else if ( itemsLayout != _NULL ) { recycle . recycleItems ( itemsLayout , firstItem , new ItemsRange ( ) ) ; } invalidate ( ) ; }
985	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
1194	public static String convertName ( String name ) { if ( ! name . isEmpty ( ) ) { if ( NameConfig . ALLOW_CUSTOM_NAMES ) { return name ; } else { return name . substring ( _NUM , _NUM ) . toUpperCase ( ) + name . toLowerCase ( ) . substring ( _NUM ) ; } } else { return _CHAR _CHAR ; } }
1209	public boolean update ( long elapsedTime ) { this . frames ++ ; this . time += elapsedTime ; if ( this . time >= Fps . ONE_SECOND_IN_NANOSECONDS ) { synchronized ( this ) { this . fps = this . frames * Fps . ONE_SECOND_IN_NANOSECONDS / this . time ; } this . frames = _NUM ; this . time = _NUM ; return _BOOL ; } return _BOOL ; }
1889	public void waitUntilDone ( IProgressMonitor monitor ) { monitor . worked ( _NUM ) ; while ( handler . getEventHandlerJob ( ) . getState ( ) != Job . NONE ) { monitor . worked ( _NUM ) ; try { Thread . sleep ( _NUM ) ; } catch ( InterruptedException e ) { } Policy . checkCanceled ( monitor ) ; } monitor . worked ( _NUM ) ; }
2146	private Movie startMovieRequest ( String id ) throws InternetConnectionException { if ( isThereInternetConnection ( mContext ) ) { try { return mWebServicesApiCallsImpl . getMovieDetail ( id ) ; } catch ( RetrofitError e ) { throw new InternetConnectionException ( e . getMessage ( ) ) ; } } else { throw new InternetConnectionException ( mContext . getString ( R . string . internet_connection_error ) ) ; } }
2271	public void hideKeyboard ( Runnable postHideTask ) { if ( mUrlBar != _NULL ) mUrlBar . clearFocus ( ) ; boolean wasVisible = _BOOL ; if ( hasFocus ( ) ) { wasVisible = UiUtils . hideKeyboard ( this ) ; } if ( wasVisible ) { mPostHideKeyboardTask = postHideTask ; } else { postHideTask . run ( ) ; } }
2600	public static String whichDoctypePublic ( Document doc ) { DocumentType doctype ; doctype = doc . getDoctype ( ) ; if ( doctype != _NULL ) { try { return doctype . getPublicId ( ) ; } catch ( Error except ) { } } if ( doc instanceof HTMLDocument ) return DTD . XHTMLPublicId ; return _NULL ; }
2688	@ Nullable public static DocumentBuilder createNewDocumentBuilder ( ) { DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance ( ) ; factory . setNamespaceAware ( _BOOL ) ; factory . setValidating ( _BOOL ) ; factory . setIgnoringComments ( _BOOL ) ; try { return factory . newDocumentBuilder ( ) ; } catch ( ParserConfigurationException e ) { Logger . getInstance ( DomPullParser . class ) . error ( e ) ; } return _NULL ; }
3163	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
3607	private void createLogDir ( ) { File file ; boolean mkOk ; if ( Environment . getExternalStorageState ( ) . equals ( Environment . MEDIA_MOUNTED ) ) { file = new File ( LOG_PATH_SDCARD_DIR ) ; if ( ! file . isDirectory ( ) ) { mkOk = file . mkdirs ( ) ; if ( ! mkOk ) { return ; } } } }
3998	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getSecondOfPairFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getSecondOfPairFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
4479	public JsonWriter name ( String name ) throws IOException { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name == _NULL _CHAR ) ; } if ( deferredName != _NULL ) { throw new IllegalStateException ( ) ; } if ( stackSize == _NUM ) { throw new IllegalStateException ( _CHAR JsonWriter is closed . '' ) ; } deferredName = name ; return this ; }
4541	@ Override public synchronized CompletableFuture < Void > disconnect ( ) { closeFuture = new CompletableFuture < > ( ) ; if ( ! consumers . isEmpty ( ) ) { consumers . forEach ( _NULL ) ; if ( havePendingRead && cursor . cancelPendingReadRequest ( ) ) { havePendingRead = _BOOL ; } } else { closeFuture . complete ( _NULL ) ; } return closeFuture ; }
4978	public void close ( ) throws IOException { RandomAccessFile localRaf = raf ; if ( localRaf != _NULL ) { synchronized ( localRaf ) { raf = _NULL ; localRaf . close ( ) ; } if ( fileToDeleteOnClose != _NULL ) { fileToDeleteOnClose . delete ( ) ; fileToDeleteOnClose = _NULL ; } } }
5139	public JSONObject put ( String key , Object value ) throws JSONException { if ( key == _NULL ) { throw new NullPointerException ( _CHAR Null key . '' ) ; } if ( value != _NULL ) { testValidity ( value ) ; this . map . put ( key , value ) ; } else { this . remove ( key ) ; } return this ; }
5285	public static int currentPlatform ( ) { String os = System . getProperty ( _CHAR os . name _CHAR ) ; if ( os . startsWith ( _CHAR Mac OS _CHAR ) ) { return PLATFORM_DARWIN ; } else if ( os . startsWith ( _CHAR Windows _CHAR ) ) { return PLATFORM_WINDOWS ; } else if ( os . startsWith ( _CHAR Linux _CHAR ) ) { return PLATFORM_LINUX ; } return PLATFORM_UNKNOWN ; }
5528	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getNotPrimaryAlignmentFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getNotPrimaryAlignmentFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
5685	public void apply ( Predicate < TM > predicate ) { lock ( ) ; try { for ( TM member : members . values ( ) ) { if ( ! predicate . apply ( member ) ) { return ; } } } finally { unlock ( ) ; } }
5845	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
6739	public void gameServerDisconnected ( ) { synchronized ( this ) { serverShutdown = _BOOL ; for ( AionConnection client : loginRequests . values ( ) ) { client . close ( _BOOL ) ; } loginRequests . clear ( ) ; if ( loginServer != _NULL ) { loginServer . close ( _BOOL ) ; } } log . info ( _CHAR GameServer disconnected from the Login Server ... _CHAR ) ; }
7001	public boolean start ( OutputStream os ) { if ( os == _NULL ) return _BOOL ; boolean ok = _BOOL ; closeStream = _BOOL ; out = os ; try { writeString ( _CHAR GIF89a _CHAR ) ; } catch ( IOException e ) { ok = _BOOL ; } return started = ok ; }
7115	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
8158	private static void writeResource ( ResourceCreator resourceCreator , String resourceName , byte [ ] data ) throws IOException { OutputStream os = resourceCreator . createResource ( resourceName ) ; try { os . write ( data ) ; } finally { try { os . close ( ) ; } catch ( IOException ex ) { } } }
8278	@ Override public String toString ( ) { String str = _NULL ; if ( denominator == _NUM ) { str = Integer . toString ( numerator ) ; } else if ( numerator == _NUM ) { str = _CHAR _NUM _CHAR ; } else { str = numerator + _CHAR / _CHAR + denominator ; } return str ; }
8379	void executeOp ( StreamOp op , boolean success ) { closeLock . readLock ( ) . lock ( ) ; try { if ( StreamStatus . isUnavailable ( status ) ) { op . fail ( new StreamUnavailableException ( _CHAR Stream _CHAR + name + _CHAR is closed . '' ) ) ; return ; } doExecuteOp ( op , success ) ; } finally { closeLock . readLock ( ) . unlock ( ) ; } }
8802	public boolean containsKey ( String key ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } synchronized ( contexts ) { for ( Map . Entry < String , String > e : contexts ) { if ( e . getKey ( ) . equalsIgnoreCase ( key ) ) { return _BOOL ; } } } return _BOOL ; }
8823	private static String generateFilename ( String layerName ) { String fileExtension = _CHAR _CHAR ; switch ( outputFormat ) { case YSLD : fileExtension = _CHAR ysld _CHAR ; break ; case SLD : default : fileExtension = _CHAR sld _CHAR ; break ; } return String . format ( _CHAR % s . % s _CHAR , layerName , fileExtension ) ; }
9138	private boolean isLegalContainer ( Node node ) { if ( node == _NULL ) return _BOOL ; while ( node != _NULL ) { switch ( node . getNodeType ( ) ) { case Node . ENTITY_NODE : case Node . NOTATION_NODE : case Node . DOCUMENT_TYPE_NODE : return _BOOL ; } node = node . getParentNode ( ) ; } return _BOOL ; }
9356	private boolean canUploadEmblemInfo ( Player activePlayer ) { if ( ! isBrigadeGeneral ( activePlayer ) ) { return _BOOL ; } else if ( activePlayer . getLegion ( ) . getLegionLevel ( ) < _NUM ) { return _BOOL ; } else if ( activePlayer . getLegion ( ) . getLegionEmblem ( ) . isUploading ( ) ) { activePlayer . getLegion ( ) . getLegionEmblem ( ) . setUploading ( _BOOL ) ; return _BOOL ; } return _BOOL ; }
9377	public static Planner newPlanner ( ) { QueryPlanner qplanner ; UpdatePlanner uplanner ; try { qplanner = ( QueryPlanner ) queryPlannerCls . newInstance ( ) ; uplanner = ( UpdatePlanner ) updatePlannerCls . newInstance ( ) ; } catch ( InstantiationException | IllegalAccessException e ) { e . printStackTrace ( ) ; return _NULL ; } return new Planner ( qplanner , uplanner ) ; }
9849	private boolean isRequestingSensorEventData ( String nodeId , String sensorName ) { if ( ! isRequestingSensorEventData ( nodeId ) ) { return _BOOL ; } boolean sensorIsRequested = _BOOL ; for ( DeviceSensor deviceSensor : selectedSensors . get ( nodeId ) ) { if ( ! deviceSensor . getName ( ) . equals ( sensorName ) ) { continue ; } sensorIsRequested = _BOOL ; } return sensorIsRequested ; }
9850	public void putIdentifier ( String idName , Element element ) { if ( element == _NULL ) { removeIdentifier ( idName ) ; return ; } if ( needsSyncData ( ) ) { synchronizeData ( ) ; } if ( identifiers == _NULL ) { identifiers = new Hashtable ( ) ; } identifiers . put ( idName , element ) ; }
10093	public void invalidateWheel ( boolean clearCaches ) { if ( clearCaches ) { recycle . clearAll ( ) ; if ( itemsLayout != _NULL ) { itemsLayout . removeAllViews ( ) ; } scrollingOffset = _NUM ; } else if ( itemsLayout != _NULL ) { recycle . recycleItems ( itemsLayout , firstItem , new ItemsRange ( ) ) ; } invalidate ( ) ; }
10728	public static ServiceConfiguration create ( InputStream inStream ) throws IOException , IllegalArgumentException { try { checkNotNull ( inStream ) ; Properties properties = new Properties ( ) ; properties . load ( inStream ) ; return ( create ( properties ) ) ; } finally { if ( inStream != _NULL ) { inStream . close ( ) ; } } }
11077	public static boolean containsInLineFeatures ( StyledLayerDescriptor sld ) { if ( sld != _NULL ) { for ( StyledLayer layer : sld . layers ( ) ) { if ( layer instanceof UserLayer ) { UserLayer userLayer = ( UserLayer ) layer ; if ( userLayer . getInlineFeatureDatastore ( ) != _NULL ) { return _BOOL ; } } } } return _BOOL ; }
11128	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
11596	public void createDatabase ( ) throws Exception { boolean dbExists = checkDatabase ( ) ; if ( ! dbExists ) { this . getReadableDatabase ( ) ; try { copyDatabase ( ) ; } catch ( Exception e ) { Log . e ( _CHAR DB_ERROR _CHAR , _CHAR createDatabase ( ) : Could not copy DB _CHAR ) ; throw new Error ( _CHAR Could not copy DB _CHAR_CHAR ) ; } } }
11964	public int detachChild ( Spatial child ) { if ( child == _NULL ) { throw new NullPointerException ( ) ; } if ( child . getParent ( ) == this ) { int index = children . indexOf ( child ) ; if ( index != - _NUM ) { detachChildAt ( index ) ; } return index ; } return - _NUM ; }
11994	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
12651	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
12707	public void safeTimeToSpeech ( String time ) { try { if ( time . equals ( _CHAR now _CHAR ) ) { speakNow ( ) ; } else { timeToSpeech ( time ) ; } } catch ( IllegalArgumentException iae ) { System . err . println ( _CHAR Bad time format _CHAR ) ; } }
12825	@ SuppressWarnings ( _CHAR unused _CHAR ) public SelectionBuilder reset ( ) { mTable = _NULL ; if ( mProjectionMap != _NULL ) { mProjectionMap . clear ( ) ; } if ( mSelection != _NULL ) { mSelection . setLength ( _NUM ) ; } if ( mSelectionArgs != _NULL ) { mSelectionArgs . clear ( ) ; } return this ; }
13023	protected final void clean ( ) { if ( ! isAlive ( ) ) return ; synchronized ( this ) { _shouldDie = _BOOL ; notify ( ) ; } try { join ( ) ; } catch ( InterruptedException e ) { } if ( _expirationList != _NULL ) _expirationList . clear ( ) ; }
13076	protected void writeImageDesc ( ) throws IOException { out . write ( _NUM ) ; writeShort ( _NUM ) ; writeShort ( _NUM ) ; writeShort ( width ) ; writeShort ( height ) ; if ( firstFrame ) { out . write ( _NUM ) ; } else { out . write ( _NUM | _NUM | _NUM | _NUM | palSize ) ; } }
13136	protected final void clean ( ) { if ( ! isAlive ( ) ) return ; synchronized ( this ) { _shouldDie = _BOOL ; notify ( ) ; } try { join ( ) ; } catch ( InterruptedException e ) { } if ( _expirationList != _NULL ) _expirationList . clear ( ) ; }
13205	@ Override public void finish ( ) { for ( Entry < String , FileChannel > entry : fileNameAndStreamCache . entrySet ( ) ) { try { FileChannel channel = entry . getValue ( ) ; if ( _NULL != channel ) { channel . close ( ) ; } } catch ( IOException exception ) { LOGGER . error ( exception , exception . getMessage ( ) ) ; } } }
13206	public boolean isManagedByCustodian ( ) { PrefServiceBridge prefs = PrefServiceBridge . getInstance ( ) ; if ( showGeolocationSites ( ) ) { return prefs . isAllowLocationManagedByCustodian ( ) ; } if ( showCameraSites ( ) ) { return prefs . isCameraManagedByCustodian ( ) ; } if ( showMicrophoneSites ( ) ) { return prefs . isMicManagedByCustodian ( ) ; } return _BOOL ; }
13321	@ Override public void normalize ( ) { if ( isNormalized ( ) ) { return ; } if ( needsSyncChildren ( ) ) { synchronizeChildren ( ) ; } ChildNode kid ; for ( kid = firstChild ; kid != _NULL ; kid = kid . nextSibling ) { kid . normalize ( ) ; } isNormalized ( _BOOL ) ; }
13785	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getMateUnmappedFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getMateUnmappedFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
14655	@ Override public boolean equals ( Object o ) { if ( this == o ) { return _BOOL ; } if ( o == _NULL ) { return _BOOL ; } if ( ! ( o instanceof Column ) ) { return _BOOL ; } Column column = ( Column ) o ; return Objects . equals ( name , column . name ) ; }
14780	public void addValue ( double v ) { if ( windowSize != INFINITE_WINDOW ) { if ( getN ( ) == windowSize ) { eDA . addElementRolling ( v ) ; } else if ( getN ( ) < windowSize ) { eDA . addElement ( v ) ; } } else { eDA . addElement ( v ) ; } }
15002	private String attemptToChooseFormattingPattern ( ) { if ( nationalNumber . length ( ) >= MIN_LEADING_DIGITS_LENGTH ) { getAvailableFormats ( nationalNumber . toString ( ) ) ; String formattedNumber = attemptToFormatAccruedDigits ( ) ; if ( formattedNumber . length ( ) > _NUM ) { return formattedNumber ; } return maybeCreateNewTemplate ( ) ? inputAccruedNationalNumber ( ) : accruedInput . toString ( ) ; } else { return appendNationalNumber ( nationalNumber . toString ( ) ) ; } }
15246	void assignToBlock ( BlockId blk ) { internalLock . writeLock ( ) . lock ( ) ; try { flush ( ) ; this . blk = blk ; contents . read ( blk ) ; pins = _NUM ; lastLsn = LogSeqNum . readFromPage ( contents , LAST_LSN_OFFSET ) ; } finally { internalLock . writeLock ( ) . unlock ( ) ; } }
15328	public void appendData ( String data ) { if ( isReadOnly ( ) ) { String msg = DOMMessageFormatter . formatMessage ( DOMMessageFormatter . DOM_DOMAIN , _CHAR NO_MODIFICATION_ALLOWED_ERR _CHAR , _NULL ) ; throw new DOMException ( DOMException . NO_MODIFICATION_ALLOWED_ERR , msg ) ; } if ( data == _NULL ) { return ; } if ( needsSyncData ( ) ) { synchronizeData ( ) ; } setNodeValue ( this . data + data ) ; }
15506	@ Path ( ) public void onGet ( ) { try { if ( Helper . isConfigured ( ) ) { this . redirect ( _CHAR / _CHAR ) ; return ; } this . show ( _CHAR / admin / setup . html _CHAR ) ; } catch ( Exception e1 ) { log . debug ( e1 . getMessage ( ) , e1 ) ; this . error ( e1 ) ; } }
15564	static < T > T parseJsonAndClose ( InputStream in , Class < T > cls ) throws JsonParseException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( in ) ) ; try { return GSON . fromJson ( reader , cls ) ; } finally { try { reader . close ( ) ; } catch ( IOException e ) { } } }
15847	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getDuplicateReadFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getDuplicateReadFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
16329	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getReadFailsVendorQualityCheckFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getReadFailsVendorQualityCheckFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
16676	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getReadNegativeStrandFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getReadNegativeStrandFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
16759	public static void main ( String [ ] arguments ) { try { try { throw new Exception ( _CHAR _NUM _CHAR ) ; } finally { throw new Exception ( _CHAR _NUM _CHAR ) ; } } catch ( Exception happened ) { System . out . println ( happened . getMessage ( ) ) ; } }
16831	public boolean isUnloadDisabledInLoadShedding ( ) { if ( ! pulsar . getConfiguration ( ) . isLoadBalancerEnabled ( ) ) { return _BOOL ; } boolean unloadDisabledInLoadShedding = _BOOL ; try { unloadDisabledInLoadShedding = pulsar . getGlobalZkCache ( ) . exists ( AdminResource . LOAD_SHEDDING_UNLOAD_DISABLED_FLAG_PATH ) ; } catch ( Exception e ) { log . warn ( _CHAR Unable to fetch contents of [ { } ] from global zookeeper _CHAR , AdminResource . LOAD_SHEDDING_UNLOAD_DISABLED_FLAG_PATH , e ) ; } return unloadDisabledInLoadShedding ; }
16835	public static String parseValue ( String value , CarbonDimension dimension ) { try { switch ( dimension . getDataType ( ) ) { case DECIMAL : return parseStringToBigDecimal ( value , dimension ) ; default : return value ; } } catch ( Exception e ) { return _NULL ; } }
16962	private HttpEntity paramsToEntity ( RequestParams params ) { HttpEntity entity = _NULL ; try { if ( params != _NULL ) { entity = params . getEntity ( _NULL ) ; Log . e ( tag , _CHAR params : _CHAR + params . toString ( ) ) ; } } catch ( IOException e ) { e . printStackTrace ( ) ; } return entity ; }
17007	public void connect ( ) { if ( listeners . isEmpty ( ) ) { AirMapLog . i ( _CHAR TrafficService _CHAR , _CHAR No listeners , not connecting _CHAR ) ; return ; } AirMapLog . i ( _CHAR TrafficService _CHAR , _CHAR Connecting to Traffic Service _CHAR ) ; if ( connectionState == ConnectionState . Connecting ) { return ; } connectionState = ConnectionState . Connecting ; allTraffic . clear ( ) ; AirMap . getCurrentFlight ( currentFlightCallback ) ; }
17259	public static String extractLocalFunctionName ( String functionName ) { String functionNameString = _NULL ; if ( functionName != _NULL ) { String [ ] components = functionName . split ( _CHAR : _CHAR ) ; if ( components . length == _NUM ) { functionNameString = components [ _NUM ] ; } else { functionNameString = functionName ; } } return functionNameString ; }
17927	public boolean start ( OutputStream os ) { if ( os == _NULL ) return _BOOL ; boolean ok = _BOOL ; closeStream = _BOOL ; out = os ; try { writeString ( _CHAR GIF89a _CHAR ) ; } catch ( IOException e ) { ok = _BOOL ; } return started = ok ; }
18121	public void collectErrors ( ) { nameCheck ( ) ; typeCheck ( ) ; accessControl ( ) ; exceptionHandling ( ) ; checkUnreachableStmt ( ) ; definiteAssignment ( ) ; checkModifiers ( ) ; checkWarnings ( ) ; for ( int i = _NUM ; i < getNumChild ( ) ; i ++ ) { getChild ( i ) . collectErrors ( ) ; } }
18391	protected void fireUpdateSymbol ( ) { if ( ! Controller . getInstance ( ) . isPopulating ( ) ) { for ( RenderSymbolInterface renderer : rendererList ) { renderer . renderSymbol ( ) ; } if ( fieldConfigVisitor . isTreeDataUpdated ( ) ) { for ( SLDTreeUpdatedInterface sldTree : treeUpdateList ) { sldTree . textUpdated ( ) ; } fieldConfigVisitor . resetTreeDataUpdated ( ) ; } } }
18440	public static String currentPlatformName ( ) { String os = System . getProperty ( _CHAR os . name _CHAR ) ; if ( os . startsWith ( _CHAR Mac OS _CHAR ) ) { return _CHAR Mac OS X _CHAR ; } else if ( os . startsWith ( _CHAR Windows _CHAR ) ) { return _CHAR Windows _CHAR ; } else if ( os . startsWith ( _CHAR Linux _CHAR ) ) { return _CHAR Linux _CHAR ; } return _CHAR Other _CHAR ; }
18737	public void clear ( ) { for ( VisibleObject object : knownObjects . values ( ) ) { object . getKnownList ( ) . del ( owner , _BOOL ) ; } knownObjects . clear ( ) ; if ( knownPlayers != _NULL ) { knownPlayers . clear ( ) ; } visualObjects . clear ( ) ; if ( visualPlayers != _NULL ) { visualPlayers . clear ( ) ; } }
18776	@ Override protected void parseOptimizationData ( OptimizationData ... optData ) { super . parseOptimizationData ( optData ) ; for ( OptimizationData data : optData ) { if ( data instanceof GoalType ) { goal = ( GoalType ) data ; continue ; } if ( data instanceof ObjectiveFunction ) { function = ( ( ObjectiveFunction ) data ) . getObjectiveFunction ( ) ; continue ; } } }
18898	public static void copy ( InputStream in , boolean closeIn , OutputStream out , boolean closeOut ) throws IOException { try { try { IOUtils . copy ( in , out ) ; } finally { if ( closeIn ) IOUtils . closeQuietly ( in ) ; } } finally { if ( closeOut ) IOUtils . closeQuietly ( out ) ; } }
19024	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getProperPairFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getProperPairFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
19195	protected void close ( ) { try { if ( to != _NULL ) to . close ( ) ; if ( from != _NULL ) from . close ( ) ; } catch ( IOException e ) { } if ( process != _NULL ) process . destroy ( ) ; process = _NULL ; to = _NULL ; from = _NULL ; errorLogger = _NULL ; }
19355	void flushAll ( long txNum ) { for ( Buffer buff : bufferPool ) { try { buff . getExternalLock ( ) . lock ( ) ; if ( buff . isModifiedBy ( txNum ) ) { buff . flush ( ) ; } } finally { buff . getExternalLock ( ) . unlock ( ) ; } } }
19760	private Object calculateReturnValue ( final Object result ) throws RuleEvaluationException { try { if ( ( ( Boolean ) result ) . equals ( Boolean . TRUE ) ) { return this . resultValue ; } else { return _NULL ; } } catch ( ClassCastException ce ) { throw new RuleEvaluationException ( new StringBuffer ( _CHAR Condition does not evaluate to TRUE or FALSE : _CHAR ) . append ( this . condition . getExpression ( ) ) . toString ( ) ) ; } }
20069	protected static String concatMapExpr ( String first , String second ) { first = stripTrimMapExprDelims ( first ) ; second = stripTrimMapExprDelims ( second ) ; if ( first . isEmpty ( ) ) { return second ; } else if ( second . isEmpty ( ) ) { return first ; } else { return first + _CHAR , _CHAR + second ; } }
20192	public void clearSelection ( String target ) { switch ( target . toLowerCase ( ) ) { case _CHAR series _CHAR : clearSelectionSeries ( ) ; break ; case _CHAR classes _CHAR : clearSelectionClasses ( ) ; break ; case _CHAR attributes _CHAR : clearSelectionAttributes ( ) ; break ; } }
20424	public void paint ( Graphics2D gc , Rectangle rect ) { try { if ( gc instanceof SelectionGraphics ) { final SelectionGraphics sgc = ( SelectionGraphics ) gc ; select ( rect , sgc . getSelectionRectangle ( ) , sgc . getMouseClicks ( ) ) ; } else if ( ! inUpdate ) { doPaint ( gc , rect ) ; } } catch ( Exception ex ) { } }
20450	public static String md5 ( String str ) { if ( str == _NULL ) { return _NULL ; } try { MessageDigest messageDigest = MessageDigest . getInstance ( _CHAR MD5 _CHAR ) ; messageDigest . update ( str . getBytes ( ) ) ; return new String ( encodeHex ( messageDigest . digest ( ) ) ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }
20503	public static String whichDoctypeSystem ( Document doc ) { DocumentType doctype ; doctype = doc . getDoctype ( ) ; if ( doctype != _NULL ) { try { return doctype . getSystemId ( ) ; } catch ( Error except ) { } } if ( doc instanceof HTMLDocument ) return DTD . XHTMLSystemId ; return _NULL ; }
21304	public void showSvnProperties ( ISVNRemoteResource resource ) throws SVNException { this . remoteResource = resource ; this . resource = _NULL ; if ( remoteResource != _NULL ) { if ( remoteResource . getRevision ( ) != _NULL ) { setContentDescription ( Policy . bind ( _CHAR SvnRevPropertiesView . titleWithTwoArguments _CHAR , remoteResource . getRevision ( ) . toString ( ) , remoteResource . getName ( ) ) ) ; } } else { setContentDescription ( _CHAR _CHAR ) ; } updateStatus ( ) ; }
21320	public boolean isCellEditable ( EventObject e ) { if ( e instanceof MouseEvent ) { MouseEvent me = ( MouseEvent ) e ; if ( me . getClickCount ( ) >= _NUM ) { return _BOOL ; } return _BOOL ; } if ( e == _NULL ) { return _BOOL ; } return _BOOL ; }
21491	public int hashCode ( ) { int h = _NUM ; if ( name != _NULL ) { h += name . hashCode ( ) ; } if ( types != _NULL ) { h += hash ( types ) ; } if ( constraints != _NULL ) { h += constraints . hashCode ( ) ; } return h ; }
21608	public void commitDragComponent ( NlComponent component ) { if ( USE_GUIDELINES_DURING_DND ) { if ( myDragDropWidget != _NULL ) { myWidgetsScene . removeWidget ( myDragDropWidget ) ; WidgetCompanion companion = ( WidgetCompanion ) myDragDropWidget . getCompanionWidget ( ) ; companion . setWidgetModel ( component ) ; companion . setWidgetTag ( component ) ; } } else { removeDragComponent ( ) ; } }
21715	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getFirstOfPairFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getFirstOfPairFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
22080	public void generateSourcesOnly ( boolean cleanProject ) { if ( ! isSourceGenerationEnabled ( ) ) { return ; } if ( requiresAndroidModel ( myProject ) ) { if ( isDirectGradleInvocationEnabled ( myProject ) ) { GradleInvoker . getInstance ( myProject ) . generateSources ( cleanProject ) ; } else { buildProjectWithJps ( SOURCE_GEN ) ; } } }
22209	public Object nextValue ( ) { char c = lookAhead ( ) ; switch ( c ) { case _CHAR_CHAR : return nextString ( ) ; case _CHAR : return nextObject ( ) ; case _CHAR : return nextArray ( ) ; } String s = nextToken ( ) ; return tokenToValue ( s ) ; }
22339	@ Override public boolean isCellEditable ( int row , int col ) { if ( isConnectedToDataSource ) { if ( col != FIELD_COLUMN_ID ) { return _BOOL ; } else { return _BOOL ; } } else { return _BOOL ; } }
22372	public static byte [ ] toByteArray ( Writable ... writables ) { final DataOutputBuffer out = new DataOutputBuffer ( ) ; try { for ( Writable w : writables ) { w . write ( out ) ; } out . close ( ) ; } catch ( IOException e ) { throw new RuntimeException ( _CHAR Fail to convert writables to a byte array _CHAR , e ) ; } return out . getData ( ) ; }
22541	private void invokeResources ( AppCompatActivity activity ) { try { Field resources = AppCompatActivity . class . getDeclaredField ( _CHAR mResources _CHAR ) ; resources . setAccessible ( _BOOL ) ; resources . set ( activity , _NULL ) ; } catch ( NoSuchFieldException e ) { e . printStackTrace ( ) ; } catch ( IllegalAccessException e ) { e . printStackTrace ( ) ; } }
22613	private void validateAndLoadDefaultProperties ( ) { if ( _NULL == carbonProperties . getProperty ( CarbonCommonConstants . STORE_LOCATION ) ) { carbonProperties . setProperty ( CarbonCommonConstants . STORE_LOCATION , CarbonCommonConstants . STORE_LOCATION_DEFAULT_VAL ) ; } validateBlockletSize ( ) ; validateNumCores ( ) ; validateNumCoresBlockSort ( ) ; validateSortSize ( ) ; validateBadRecordsLocation ( ) ; validateHighCardinalityIdentify ( ) ; validateHighCardinalityThreshold ( ) ; validateHighCardinalityInRowCountPercentage ( ) ; }
22929	public void stem ( ) { k = i - _NUM ; if ( k > _NUM ) { step1 ( ) ; step2 ( ) ; step3 ( ) ; step4 ( ) ; step5 ( ) ; step6 ( ) ; } i_end = k + _NUM ; i = _NUM ; }
23058	private void emitParticles ( ) { switch ( currentWeather ) { case RAIN : ps . emitWithGravity ( this , Gravity . BOTTOM , rainParticles ) ; break ; case SNOW : ps . emitWithGravity ( this , Gravity . BOTTOM , snowParticles ) ; break ; default : break ; } isPlaying = _BOOL ; }
23267	public void cancel ( ) { ProgressIndicator indicator = myCurrentProgressIndicator . get ( ) ; if ( indicator == _NULL ) { myWizard . doCancelAction ( ) ; } else { indicator . cancel ( ) ; JButton button = myActionToButtonMap . get ( myCancelAction ) ; if ( button != _NULL ) { button . setEnabled ( _BOOL ) ; } } }
23421	protected void writeImageDesc ( ) throws IOException { out . write ( _NUM ) ; writeShort ( _NUM ) ; writeShort ( _NUM ) ; writeShort ( width ) ; writeShort ( height ) ; if ( firstFrame ) { out . write ( _NUM ) ; } else { out . write ( _NUM | _NUM | _NUM | _NUM | palSize ) ; } }
23459	public boolean evalPermissions ( DispatchContext dctx , Map < String , ? extends Object > context ) { if ( this . containsPermissions ( ) ) { for ( ModelPermGroup group : this . permissionGroups ) { if ( ! group . evalPermissions ( dctx , context ) ) { return _BOOL ; } } return _BOOL ; } else { return _BOOL ; } }
23464	final void advance ( ) { if ( next == _NULL ) throw new NoSuchElementException ( ) ; lastReturned = next ; for ( ; ; ) { next = next . next ; if ( next == _NULL ) break ; Object x = next . value ; if ( x != _NULL && x != next ) { nextValue = ( V ) x ; break ; } } }
23618	protected void writeImageDesc ( ) throws IOException { out . write ( _NUM ) ; writeShort ( x ) ; writeShort ( y ) ; writeShort ( width ) ; writeShort ( height ) ; if ( firstFrame ) { out . write ( _NUM ) ; } else { out . write ( _NUM | _NUM | _NUM | _NUM | palSize ) ; } }
24020	private MarshObject compressObject ( Object objToCompress ) throws IOException { CompressedMarshObjectConvertor cv = _NULL ; try { cv = _compressedConvertorPool . getResource ( ) ; MarshObject cmo = cv . getMarshObject ( objToCompress ) ; return cmo ; } finally { if ( cv != _NULL ) { _compressedConvertorPool . freeResource ( cv ) ; } } }
24195	public static boolean incrementIfLessThan ( AtomicInteger counter , int max ) { while ( _BOOL ) { int current = counter . intValue ( ) ; if ( current < max ) { if ( counter . compareAndSet ( current , current + _NUM ) ) { return _BOOL ; } } else { return _BOOL ; } } }
24443	public void invalidateWheel ( boolean clearCaches ) { if ( clearCaches ) { recycle . clearAll ( ) ; if ( itemsLayout != _NULL ) { itemsLayout . removeAllViews ( ) ; } scrollingOffset = _NUM ; } else if ( itemsLayout != _NULL ) { recycle . recycleItems ( itemsLayout , firstItem , new ItemsRange ( ) ) ; } invalidate ( ) ; }
24504	@ Override public void endDocument ( Augmentations augs ) throws XNIException { try { if ( fDocumentHandler != _NULL ) { fDocumentHandler . endDocument ( ) ; } if ( fContentHandler != _NULL ) { fContentHandler . endDocument ( ) ; } } catch ( SAXException e ) { throw new XNIException ( e ) ; } }
24646	public synchronized long commit ( ) throws IOException { long gen ; if ( writer != _NULL ) { if ( taxoWriter != _NULL ) { taxoWriter . commit ( ) ; } gen = writer . commit ( ) ; } else { gen =- _NUM ; } return gen ; }
24829	public EntityQuery filterByDate ( Timestamp moment ) { if ( moment != _NULL ) { this . filterByDate = _BOOL ; this . filterByDateMoment = moment ; this . filterByFieldNames = _NULL ; } else { this . filterByDate = _BOOL ; this . filterByDateMoment = _NULL ; this . filterByFieldNames = _NULL ; } return this ; }
24921	private SearchJSONResults startMovieFromListRequest ( String query ) throws InternetConnectionException { if ( isThereInternetConnection ( mContext ) ) { try { return mWebServicesApiCallsImpl . getMoviesList ( query ) ; } catch ( RetrofitError e ) { throw new InternetConnectionException ( e . getMessage ( ) ) ; } } else { throw new InternetConnectionException ( mContext . getString ( R . string . internet_connection_error ) ) ; } }
25551	public static void copy ( Reader reader , boolean closeIn , Writer writer , boolean closeOut ) throws IOException { try { try { IOUtils . copy ( reader , writer ) ; } finally { if ( closeIn ) IOUtils . closeQuietly ( reader ) ; } } finally { if ( closeOut ) IOUtils . closeQuietly ( writer ) ; } }
25640	private void _cancelActivity ( Activity a ) { boolean fire = _BOOL ; synchronized ( this ) { synchronized ( a ) { if ( a . isScheduled ( ) ) { _removeActivity ( a ) ; fire = _BOOL ; } a . setRunning ( _BOOL ) ; } } if ( fire ) a . fireActivityCancelled ( ) ; }
25835	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( sharedGroupLog == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL shared group log _CHAR ) ; } if ( host == _NULL ) { throw new InvalidObjectException ( _CHAR _NULL activation host name _CHAR ) ; } if ( port <= _NUM ) { throw new InvalidObjectException ( _CHAR invalid activation port value : _CHAR + port ) ; } innerProxyPreparer = _NULL ; }
25913	private ChannelBuffer storeResponse ( SpaceCache . StoreResponse storeResponse ) { switch ( storeResponse ) { case EXISTS : return EXISTS . duplicate ( ) ; case NOT_FOUND : return NOT_FOUND . duplicate ( ) ; case NOT_STORED : return NOT_STORED . duplicate ( ) ; case STORED : return STORED . duplicate ( ) ; } throw new RuntimeException ( _CHAR unknown store response from cache : _CHAR + storeResponse ) ; }
26144	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getSupplementaryAlignmentFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getSupplementaryAlignmentFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
26880	@ Override public int read ( ) throws IOException { for ( ; ; ) { if ( encoderOut . hasRemaining ( ) ) { return encoderOut . get ( ) & _NUM ; } else { fillBuffer ( ) ; if ( endOfInput && ! encoderOut . hasRemaining ( ) ) { return - _NUM ; } } } }
27107	private void skipToEndOfLine ( ) throws IOException { while ( pos < limit || fillBuffer ( _NUM ) ) { char c = buffer [ pos ++ ] ; if ( c == _CHAR ) { lineNumber ++ ; lineStart = pos ; break ; } else if ( c == _CHAR ) { break ; } } }
27495	void onException ( JMSException jE ) { if ( errorHandler != _NULL ) { if ( _logger . isLoggable ( Level . FINE ) ) { _logger . fine ( _CHAR calling ExceptionListener . onException ( ) : _CHAR + cnxKey ) ; } errorHandler . onException ( jE ) ; } else { if ( _logger . isLoggable ( Level . FINE ) ) { _logger . fine ( _CHAR ExceptionListener is not set for connection : '' + cnxKey ) ; } } }
27840	private boolean scrollToChildRect ( Rect rect , boolean immediate ) { final int delta = computeScrollDeltaToGetChildRectOnScreen ( rect ) ; final boolean scroll = delta != _NUM ; if ( scroll ) { if ( immediate ) { scrollBy ( delta , _NUM ) ; } else { smoothScrollBy ( delta , _NUM ) ; } } return scroll ; }
27891	public static DataSourceInterface createDataSource ( DataSourceInterface override ) { if ( override != _NULL ) { if ( ( dataSource == _NULL ) || override . getClass ( ) != dataSource . getClass ( ) ) { dataSource = override ; } } else { if ( dataSource == _NULL ) { dataSource = new DataSourceImpl ( ) ; } } return dataSource ; }
28003	public final void close ( LsServerPacket closePacket , boolean forced ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } log . debug ( _CHAR sending packet : _CHAR + closePacket + _CHAR and closing connection after that . '' ) ; pendingClose = _BOOL ; isForcedClosing = forced ; sendMsgQueue . clear ( ) ; sendMsgQueue . addLast ( closePacket ) ; enableWriteInterest ( ) ; } }
28062	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getReadPairedFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getReadPairedFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
28132	public void run ( ) { ThreadingUtils . logThreadStarting ( _CHAR Reconnection Manager _CHAR ) ; running = _BOOL ; while ( running ) { synchronized ( connections ) { oneCycle ( ) ; } if ( ThreadingUtils . sleep ( SLEEP ) ) { break ; } } ThreadingUtils . logThreadEnding ( ) ; }
28352	public static void waitForCompletion ( Collection < Future < ? >> futures ) { for ( Future < ? > future : futures ) { try { future . get ( ) ; } catch ( ExecutionException ex ) { throw new RuntimeException ( _CHAR Exception during execution _CHAR , ex ) ; } catch ( InterruptedException ex ) { throw new RuntimeException ( _CHAR Thread interrupted _CHAR , ex ) ; } } }
28524	public void applyOnMembers ( Predicate < M > predicate ) { lock ( ) ; try { for ( TM member : members . values ( ) ) { if ( ! predicate . apply ( member . getObject ( ) ) ) { return ; } } } finally { unlock ( ) ; } }
28657	private void internalSetValue ( Double value ) { if ( spinner != _NULL ) { if ( value . doubleValue ( ) < minValue ) { spinner . setValue ( minValue ) ; } else if ( value . doubleValue ( ) > maxValue ) { spinner . setValue ( maxValue ) ; } else { spinner . setValue ( value ) ; } } }
28777	private void internalSetValue ( Integer value ) { if ( spinner != _NULL ) { if ( value . intValue ( ) < minValue ) { spinner . setValue ( minValue ) ; } else if ( value . intValue ( ) > maxValue ) { spinner . setValue ( maxValue ) ; } else { spinner . setValue ( value ) ; } } }
28911	@ Override public String toString ( ) { String str = _NULL ; if ( BigInteger . ONE . equals ( denominator ) ) { str = numerator . toString ( ) ; } else if ( BigInteger . ZERO . equals ( numerator ) ) { str = _CHAR _NUM _CHAR ; } else { str = numerator + _CHAR / _CHAR + denominator ; } return str ; }
29136	public boolean start ( OutputStream os ) { if ( os == _NULL ) return _BOOL ; boolean ok = _BOOL ; closeStream = _BOOL ; out = os ; try { writeString ( _CHAR GIF89a _CHAR ) ; } catch ( IOException e ) { ok = _BOOL ; } return started = ok ; }
29423	public static boolean checkIfDataTypeNotTimeStamp ( Expression expression ) { if ( expression . getFilterExpressionType ( ) == ExpressionType . LITERAL ) { if ( ! ( ( ( LiteralExpression ) expression ) . getLiteralExpDataType ( ) == DataType . TIMESTAMP ) ) { return _BOOL ; } } for ( Expression child : expression . getChildren ( ) ) { if ( checkIfDataTypeNotTimeStamp ( child ) ) { return _BOOL ; } } return _BOOL ; }
29827	public void save ( ) { if ( file == _NULL ) { throw new UnsupportedOperationException ( _CHAR Only root configs can be saved ! _CHAR ) ; } if ( hasChanged ( ) ) { try { FileUtils . writeStringToFile ( file , config . root ( ) . render ( ConfigRenderOptions . defaults ( ) . setJson ( _BOOL ) . setOriginComments ( _BOOL ) . setComments ( _BOOL ) ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } }
30006	public static void deleteFile ( final File file , final boolean deleteDir ) { if ( file . isDirectory ( ) ) { for ( final File subFile : file . listFiles ( ) ) { deleteFile ( subFile , _BOOL ) ; } if ( deleteDir ) { file . delete ( ) ; } } else { file . delete ( ) ; } }
30168	public synchronized static AccessToken buildAccessToken ( String accessToken ) { if ( accessToken == _NULL || _CHAR _CHAR . equals ( accessToken ) ) { return _NULL ; } try { JSONObject jsonObject = new JSONObject ( accessToken ) ; return new AccessToken ( jsonObject ) ; } catch ( JSONException e ) { Log . d ( TAG , e . getMessage ( ) ) ; return _NULL ; } }
30188	public JSONObject put ( String key , Object value ) throws JSONException { if ( key == _NULL ) { throw new JSONException ( _CHAR Null key . '' ) ; } if ( value != _NULL ) { testValidity ( value ) ; this . map . put ( key , value ) ; } else { remove ( key ) ; } return this ; }
30432	private void startPeerSync ( String peer , int port ) { boolean isDone = _BOOL ; localRedisConnect ( ) ; while ( ! isDone ) { try { isDone = ( this . localJedis . slaveof ( peer , port ) != _NULL ) ; sleeper . sleepQuietly ( _NUM ) ; } catch ( Exception e ) { localRedisConnect ( ) ; } } }
30650	public boolean filterOut ( final SAMRecord record ) { if ( include ) { if ( record . getMateNegativeStrandFlag ( ) ) { return _BOOL ; } } else { if ( ! record . getMateNegativeStrandFlag ( ) ) { return _BOOL ; } } return _BOOL ; }
31125	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
31743	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
31936	@ Override public boolean equals ( Object object ) { if ( this == object ) { return _BOOL ; } if ( object == _NULL ) { return _BOOL ; } if ( getClass ( ) != object . getClass ( ) ) { return _BOOL ; } JsonArray other = ( JsonArray ) object ; return values . equals ( other . values ) ; }
32504	public void invalidateWheel ( boolean clearCaches ) { if ( clearCaches ) { recycle . clearAll ( ) ; if ( itemsLayout != _NULL ) { itemsLayout . removeAllViews ( ) ; } scrollingOffset = _NUM ; } else if ( itemsLayout != _NULL ) { recycle . recycleItems ( itemsLayout , firstItem , new ItemsRange ( ) ) ; } invalidate ( ) ; }
32617	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
32642	public void beginObject ( ) throws IOException { int p = peeked ; if ( p == PEEKED_NONE ) { p = doPeek ( ) ; } if ( p == PEEKED_BEGIN_OBJECT ) { push ( JsonScope . EMPTY_OBJECT ) ; peeked = PEEKED_NONE ; } else { throw new IllegalStateException ( _CHAR Expected BEGIN_OBJECT but was _CHAR + peek ( ) + locationString ( ) ) ; } }
32757	public void load ( ) throws IOException { if ( myFilename == _NULL ) { throw new IOException ( _CHAR No filename specified for PreferenceStore . '' ) ; } FileInputStream in = new FileInputStream ( myFilename ) ; try { myProperties . load ( in ) ; myChanged = _BOOL ; } finally { in . close ( ) ; } }
32975	public void invalidateWheel ( boolean clearCaches ) { if ( clearCaches ) { recycle . clearAll ( ) ; if ( itemsLayout != _NULL ) { itemsLayout . removeAllViews ( ) ; } scrollingOffset = _NUM ; } else if ( itemsLayout != _NULL ) { recycle . recycleItems ( itemsLayout , firstItem , new ItemsRange ( ) ) ; } invalidate ( ) ; }
33043	private void cancelCurrentSound ( Clip clip ) { Clip lastClip = _NULL ; synchronized ( audioLock ) { if ( clip == _NULL || clip == clipPlaying ) { lastClip = clipPlaying ; clipPlaying = _NULL ; } } if ( lastClip != _NULL ) { lastClip . removeLineListener ( this ) ; lastClip . close ( ) ; } }
33175	public SIPHeader parse ( ) throws ParseException { if ( debug ) dbg_enter ( _CHAR OrganizationParser . parse _CHAR ) ; Organization organization = new Organization ( ) ; try { headerName ( TokenTypes . ORGANIZATION ) ; String value = this . lexer . getRest ( ) ; organization . setOrganization ( value . trim ( ) ) ; return organization ; } finally { if ( debug ) dbg_leave ( _CHAR OrganizationParser . parse _CHAR ) ; } }
33281	private void processSynchPostOperationPlugins ( ) { for ( SynchronizationProvider < ? > provider : getSynchronizationProviders ( ) ) { try { provider . doPostOperation ( this ) ; } catch ( DirectoryException de ) { logger . traceException ( de ) ; logger . error ( ERR_MODIFY_SYNCH_POSTOP_FAILED , getConnectionID ( ) , getOperationID ( ) , getExceptionMessage ( de ) ) ; setResponseData ( de ) ; return ; } } }
33384	public boolean mustCheckUnsavedChanges ( ) { boolean mustCheckUnsavedChanges ; if ( vlvIndexPanel . isVisible ( ) ) { mustCheckUnsavedChanges = vlvIndexPanel . mustCheckUnsavedChanges ( ) ; } else if ( standardIndexPanel . isVisible ( ) ) { mustCheckUnsavedChanges = standardIndexPanel . mustCheckUnsavedChanges ( ) ; } else { mustCheckUnsavedChanges = _BOOL ; } return mustCheckUnsavedChanges ; }
33389	private void stopRefreshNode ( BasicNode node ) { if ( node == rootNode ) { refreshQueue . cancelAll ( ) ; } else { Enumeration < ? > e = node . children ( ) ; while ( e . hasMoreElements ( ) ) { BasicNode child = ( BasicNode ) e . nextElement ( ) ; stopRefreshNode ( child ) ; } refreshQueue . cancelForNode ( node ) ; } }
33767	@ Override public void sendError ( int status , String message ) throws IOException { if ( isCommitted ( ) ) { throw new IllegalStateException ( sm . getString ( _CHAR coyoteResponse . sendError . ise _CHAR ) ) ; } if ( included ) { return ; } setError ( ) ; getCoyoteResponse ( ) . setStatus ( status ) ; getCoyoteResponse ( ) . setMessage ( message ) ; resetBuffer ( ) ; setSuspended ( _BOOL ) ; }
33847	public boolean isDefaultValueMutable ( Field field ) { TypeRef type = field . getType ( ) ; if ( type . getCardinality ( ) == Cardinality . REPEATED ) { return _BOOL ; } switch ( type . getKind ( ) ) { case TYPE_MESSAGE : case TYPE_ENUM : return _BOOL ; default : return _BOOL ; } }
34117	private void writeStartMask ( int mask ) throws IOException { if ( mask != _NUM ) { if ( ( mask & UNDERLINE ) != _NUM ) { write ( _CHAR < u > _CHAR ) ; } if ( ( mask & ITALIC ) != _NUM ) { write ( _CHAR < i > _CHAR ) ; } if ( ( mask & BOLD ) != _NUM ) { write ( _CHAR < b > _CHAR ) ; } } }
34221	public URI normalize ( ) { if ( opaque ) { return this ; } String normalizedPath = normalize ( path , _BOOL ) ; if ( path . equals ( normalizedPath ) ) { return this ; } URI result = duplicate ( ) ; result . path = normalizedPath ; result . setSchemeSpecificPart ( ) ; return result ; }
34463	@ Override public int read ( ) throws IOException { if ( closed ) { return - _NUM ; } else if ( ioException != _NULL ) { throw ioException ; } if ( ( entryBytes == _NULL || ! entryBytes . hasRemaining ( ) ) && ! getNextEntry ( ) ) { closed = _BOOL ; return - _NUM ; } return _NUM & entryBytes . get ( ) ; }
35003	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { Document doc = target . getDocument ( ) ; int dot = doc . getLength ( ) ; if ( select ) { target . moveCaretPosition ( dot ) ; } else { target . setCaretPosition ( dot ) ; } } }
35290	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { if ( getPrimaryModel ( ) == _NULL ) { throw new ModelControlException ( _CHAR Primary model is _NULL _CHAR ) ; } if ( callbacks != _NULL ) { getPrimaryModel ( ) . setSize ( callbacks . length ) ; } else { getPrimaryModel ( ) . setSize ( _NUM ) ; } super . beginDisplay ( event ) ; resetTileIndex ( ) ; }
35461	public static String generateAssertionHandle ( ) { String result = _NULL ; String encodedID = generateID ( ) ; if ( encodedID != _NULL ) { try { result = encodedID . substring ( _NUM , _NUM ) ; } catch ( Exception e ) { FSUtils . debug . error ( _CHAR FSUtil . generateAssertionHandle : _CHAR , e ) ; } } return result ; }
35908	void updateMonitoringPeriod ( long period ) { if ( period == _NUM ) { stopMonitoringPublisher ( ) ; return ; } final MonitoringPublisher mpThread = monitoringPublisher . get ( ) ; if ( mpThread != _NULL ) { mpThread . setPeriod ( period ) ; } else if ( ! connectedDSs . isEmpty ( ) || ! connectedRSs . isEmpty ( ) ) { startMonitoringPublisher ( ) ; } }
36101	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof MSISDNPrincipal ) ) { return _BOOL ; } MSISDNPrincipal that = ( MSISDNPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
36112	private void invokePostResponsePlugins ( boolean workflowExecuted ) { if ( workflowExecuted ) { List localOperations = ( List ) getAttachment ( Operation . LOCALBACKENDOPERATIONS ) ; if ( localOperations != _NULL ) { for ( Object localOp : localOperations ) { LocalBackendBindOperation localOperation = ( LocalBackendBindOperation ) localOp ; getPluginConfigManager ( ) . invokePostResponseBindPlugins ( localOperation ) ; } } else { } } }
36615	@ Override public void closePool ( final String username ) throws SQLException { synchronized ( this ) { if ( username == _NULL || ! username . equals ( _username ) ) { return ; } } try { _pool . close ( ) ; } catch ( final Exception ex ) { throw new SQLException ( _CHAR Error closing connection pool _CHAR , ex ) ; } }
37009	public synchronized void readRequest ( ) { if ( currentWriters == _NUM && writerLocks . size ( ) == _NUM ) { ++ currentReaders ; } else { ++ queuedReaders ; try { wait ( ) ; } catch ( InterruptedException e ) { } } }
37188	private void scrollBack ( int headerVisible , int footerVisible ) { synchronized ( lockSpring ) { mIsScrollBack = _BOOL ; isSpringFirstValue = _BOOL ; mRecyclerView . stopScroll ( ) ; if ( headerVisible > _NUM ) { startSpringScroll ( headerVisible ) ; } else { startSpringScroll ( footerVisible ) ; } } }
37385	private static boolean isNotImplemented ( MonitoringAttributes attr , SearchResultEntry monitoringEntry ) { Attribute monitoringValue = monitoringEntry . getAttribute ( attr . getAttributeName ( ) ) ; if ( attr . isNumeric ( ) && monitoringValue != _NULL ) { try { monitoringValue . parse ( ) . asLong ( ) ; return _BOOL ; } catch ( Throwable t ) { return _BOOL ; } } return _BOOL ; }
37451	private int nextTlsMode ( ) { if ( nextTlsMode == TLS_MODE_MODERN ) { nextTlsMode = TLS_MODE_COMPATIBLE ; return TLS_MODE_MODERN ; } else if ( nextTlsMode == TLS_MODE_COMPATIBLE ) { nextTlsMode = TLS_MODE_NULL ; return TLS_MODE_COMPATIBLE ; } else { throw new AssertionError ( ) ; } }
37602	public UnsavedChangesDialog . Result checkUnsavedChanges ( ) { UnsavedChangesDialog . Result result ; if ( vlvIndexPanel . isVisible ( ) ) { result = vlvIndexPanel . checkUnsavedChanges ( ) ; } else if ( standardIndexPanel . isVisible ( ) ) { result = standardIndexPanel . checkUnsavedChanges ( ) ; } else { result = UnsavedChangesDialog . Result . DO_NOT_SAVE ; } return result ; }
37845	@ Override public boolean equals ( final Object obj ) { if ( obj == _NULL ) { return _BOOL ; } if ( this == obj ) { return _BOOL ; } if ( obj instanceof Size ) { Size other = ( Size ) obj ; return mWidth == other . mWidth && mHeight == other . mHeight ; } return _BOOL ; }
37969	public void init ( PrivateKey key ) { try { if ( signature != _NULL ) { signature . initSign ( key ) ; } else if ( cipher != _NULL ) { cipher . init ( Cipher . ENCRYPT_MODE , key ) ; } } catch ( InvalidKeyException e ) { throw new AlertException ( AlertProtocol . BAD_CERTIFICATE , new SSLException ( _CHAR init - invalid private key _CHAR , e ) ) ; } }
38443	public void abort ( ) throws AuthLoginException { authDebug . message ( _CHAR AuthContextLocal : : abort ( ) _CHAR ) ; try { amlc . abort ( ) ; } catch ( Exception e ) { if ( authDebug . messageEnabled ( ) ) { authDebug . message ( _CHAR Exception in AMLoginContext : : abort ( ) _CHAR + e . getMessage ( ) ) ; } throw new AuthLoginException ( amAuthContextLocal , _CHAR abortError _CHAR , _NULL , e ) ; } loginStatus = AuthContext . Status . COMPLETED ; }
38500	public static Border createEtchedBorder ( int type ) { switch ( type ) { case EtchedBorder . RAISED : if ( sharedRaisedEtchedBorder == _NULL ) { sharedRaisedEtchedBorder = new EtchedBorder ( EtchedBorder . RAISED ) ; } return sharedRaisedEtchedBorder ; case EtchedBorder . LOWERED : return sharedEtchedBorder ; default : throw new IllegalArgumentException ( _CHAR type must be one of EtchedBorder . RAISED or EtchedBorder . LOWERED _CHAR ) ; } }
38549	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof ADPrincipal ) ) { return _BOOL ; } ADPrincipal that = ( ADPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
38700	public void stop ( ) { write . lock ( ) ; try { sorted . clear ( ) ; for ( Route route : routes . values ( ) ) { route . destroy ( ) ; } routes . clear ( ) ; } finally { write . unlock ( ) ; } }
38949	public void flush ( ) { try { File currentDir = new File ( path ) ; for ( File f : currentDir . listFiles ( ) ) { if ( f . isDirectory ( ) ) FileUtils . deleteDirectory ( f ) ; else FileUtils . deleteQuietly ( f ) ; } notifyObservers ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
38965	public void removePrivilege ( String privilegeName ) throws DelegationException { if ( pluginInstance != _NULL ) { try { pluginInstance . removePrivilege ( token , orgName , privilegeName ) ; } catch ( SSOException se ) { throw new DelegationException ( se ) ; } } else { throw new DelegationException ( ResBundleUtils . rbName , _CHAR no_plugin_specified _CHAR , _NULL , _NULL ) ; } }
39252	protected void decodeLineStyle ( Object lineStyleFlag ) { if ( lineStyleFlag == _NULL || lineStyleFlag . equals ( LEG_LINE_STYLE_STRING ) ) { lineStyle = LEG_LINE_STYLE ; } else { if ( lineStyleFlag . equals ( NO_STYLE_STRING ) ) { lineStyle = NO_LINE_STYLE ; } else if ( lineStyleFlag . equals ( HORIZ_STYLE_STRING ) ) { lineStyle = HORIZ_LINE_STYLE ; } } }
39265	protected View createChild ( String name ) { if ( name . equals ( VALUE_TEXTFIELD ) ) { if ( model . getValueOptionList ( ) == _NULL ) { return new TextField ( this , name , _NULL ) ; } else { return new CCSelect ( this , name , ( Object ) _NULL , model . getValueOptionList ( ) ) ; } } else { return super . createChild ( name ) ; } }
39310	private boolean isVowel ( final char c ) { switch ( c ) { case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : case _CHAR : return _BOOL ; default : return _BOOL ; } }
39311	void invoke ( @ NonNull EventBus bus , @ NonNull Object event ) { try { Object subscriber = mSubscriber . get ( ) ; if ( subscriber != _NULL ) { mMethod . invoke ( subscriber , event ) ; } } catch ( InvocationTargetException e ) { } catch ( Throwable e ) { e . printStackTrace ( ) ; } }
39314	protected boolean validateIfNecessary ( ) { if ( ! isValid ( ) && canBeValid ) { children = _NULL ; Object lock = lock ( ) ; try { validate ( ) ; } finally { unlock ( lock ) ; } } return isValid ( ) ; }
39449	public final void endDocument ( ) throws org . xml . sax . SAXException { flushPending ( ) ; if ( m_doIndent && ! m_isprevtext ) { try { outputLineSep ( ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } } flushWriter ( ) ; if ( m_tracer != _NULL ) super . fireEndDoc ( ) ; }
39597	public boolean checkIfReloadConfig ( ) throws Exception { File cfgFile ; try { cfgFile = new File ( FileUtils . getFullPath ( xmlFilePath ) ) ; } catch ( Exception e ) { if ( this . debug ) { throw e ; } return _BOOL ; } return ( cfgFile . lastModified ( ) > this . lastCfgModificationDate ) ; }
39953	public void init ( Certificate cert ) { try { if ( signature != _NULL ) { signature . initVerify ( cert ) ; } else if ( cipher != _NULL ) { cipher . init ( Cipher . DECRYPT_MODE , cert ) ; } } catch ( InvalidKeyException e ) { throw new AlertException ( AlertProtocol . BAD_CERTIFICATE , new SSLException ( _CHAR init - invalid certificate _CHAR , e ) ) ; } }
40138	public boolean addAssertion ( Assertion assertion ) { if ( signed ) { return _BOOL ; } if ( assertion == _NULL ) { return _BOOL ; } if ( ( assertions == _NULL ) || ( assertions == Collections . EMPTY_LIST ) ) { assertions = new ArrayList ( ) ; } assertions . add ( assertion ) ; return _BOOL ; }
40640	@ Override public void close ( ) { super . close ( ) ; allLocks . remove ( fileName ) ; try { FileChannel channel = lock . channel ( ) ; lock . release ( ) ; channel . close ( ) ; File file = new File ( fileName + LCK_EXT ) ; file . delete ( ) ; } catch ( IOException e ) { } }
40643	private void fullyDecode ( ) { if ( ! decoded ) { getAttributeType ( ) ; getAssertionValue ( ) ; getSubstringAssertion ( ) ; getMatchingRule ( ) ; getApproximateMatchingRule ( ) ; getEqualityMatchingRule ( ) ; getOrderingMatchingRule ( ) ; getSubstringMatchingRule ( ) ; decoded = _BOOL ; } }
40722	protected static Long convertDoubleToLong ( Double inDoubleValue ) { if ( inDoubleValue == _NULL ) { return _NULL ; } if ( inDoubleValue > Long . MAX_VALUE ) { return Long . MAX_VALUE ; } if ( inDoubleValue < Long . MIN_VALUE ) { return Long . MIN_VALUE ; } Long outLongValue = Math . round ( inDoubleValue ) ; return outLongValue ; }
40740	AttributeSet convertToHTML ( AttributeSet from , MutableAttributeSet to ) { if ( to == _NULL ) { to = convAttr ; } to . removeAttributes ( to ) ; if ( writeCSS ) { convertToHTML40 ( from , to ) ; } else { convertToHTML32 ( from , to ) ; } return to ; }
40780	public void init ( String realm ) throws PushNotificationException { if ( ! pushRealmMap . containsKey ( realm ) ) { synchronized ( pushRealmMap ) { if ( ! pushRealmMap . containsKey ( realm ) ) { updatePreferences ( realm ) ; if ( ! pushRealmMap . containsKey ( realm ) ) { debug . warning ( _CHAR No Push Notification Delegate configured for realm { } _CHAR , realm ) ; throw new PushNotificationException ( _CHAR No Push Notification Delegate configured for this realm . '' ) ; } } } } }
40810	public SIPHeader parse ( ) throws ParseException { Subject subject = new Subject ( ) ; if ( debug ) dbg_enter ( _CHAR SubjectParser . parse _CHAR ) ; try { headerName ( TokenTypes . SUBJECT ) ; String s = this . lexer . getRest ( ) ; subject . setSubject ( s . trim ( ) ) ; } finally { if ( debug ) dbg_leave ( _CHAR SubjectParser . parse _CHAR ) ; } return subject ; }
40920	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof UserPrincipal ) ) { return _BOOL ; } UserPrincipal that = ( UserPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
41442	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof SAML2Principal ) ) { return _BOOL ; } SAML2Principal that = ( SAML2Principal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
41504	public int registerOrUpdateServer ( Map < ServerProperty , Object > serverProperties ) throws ADSContextException { try { registerServer ( serverProperties ) ; return _NUM ; } catch ( ADSContextException x ) { if ( x . getError ( ) == ErrorType . ALREADY_REGISTERED ) { updateServer ( serverProperties ) ; return _NUM ; } throw x ; } }
41528	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof HTTPBasicPrincipal ) ) { return _BOOL ; } HTTPBasicPrincipal that = ( HTTPBasicPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
41589	public synchronized void updateWindowAfterReplay ( ) { try { updateDoneCount ++ ; final Session session = connectedRS . get ( ) . session ; if ( updateDoneCount >= halfRcvWindow && session != _NULL ) { session . publish ( new WindowMsg ( updateDoneCount ) ) ; rcvWindow += updateDoneCount ; updateDoneCount = _NUM ; } } catch ( IOException e ) { } }
41995	public String simpleQueryForString ( ) { acquireReference ( ) ; try { return getSession ( ) . executeForString ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
42020	public void addCompletedTask ( Task completedTask ) { schedulerLock . lock ( ) ; try { completedTasks . add ( completedTask ) ; runningTasks . remove ( completedTask ) ; if ( completedTask . getCompletionTime ( ) == - _NUM ) { completedTask . setCompletionTime ( TimeThread . getTime ( ) ) ; } } finally { schedulerLock . unlock ( ) ; } }
42200	public Object clone ( ) { QualifiedCollection theClone = _NULL ; try { theClone = ( QualifiedCollection ) super . clone ( ) ; } catch ( CloneNotSupportedException ingnored ) { } if ( theClone != _NULL ) { theClone . setCollection ( getCollection ( ) ) ; theClone . setExclusive ( isExclusive ( ) ) ; } return theClone ; }
42462	private void registerHandlerWithPLLClient ( PolicyNotificationHandler handler ) { try { PLLClient . addNotificationHandler ( POLICY_SERVICE_ID_FOR_NAMING , handler ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ResourceResultCache . '' + _CHAR registerHandlerWithPLLClient ( ) : _CHAR + _CHAR registered notification handler _CHAR ) ; } } catch ( AlreadyRegisteredException ae ) { if ( debug . warningEnabled ( ) ) { debug . message ( _CHAR ResourceResultCache . '' + _CHAR registerHandlerWithPLLClient ( ) : _CHAR + _CHAR AlreadyRegisteredException _CHAR , ae ) ; } } }
42492	public static String decryptOrDeobfuscate ( String encrypted ) { if ( encrypted == _NULL ) { return _NULL ; } final String decrypted ; try { decrypted = new String ( CryptoUtil . unfold ( encrypted ) ) ; } catch ( GeneralSecurityException ex ) { throw new RuntimeException ( _CHAR Failed to decrypt / de - obfuscate value of string _CHAR , ex ) ; } return decrypted ; }
42831	@ Override public void writeValue ( ASN1Writer writer ) throws IOException { writer . writeStartSequence ( ASN1 . UNIVERSAL_OCTET_STRING_TYPE ) ; { writer . writeStartSequence ( ) ; if ( rawAttributes != _NULL ) { for ( String attr : rawAttributes ) { writer . writeOctetString ( attr ) ; } } writer . writeEndSequence ( ) ; } writer . writeEndSequence ( ) ; }
42992	public void shutdown ( ) { if ( shutdown ) { return ; } shutdown = _BOOL ; StaticUtils . close ( listenSocket ) ; StaticUtils . close ( session ) ; try { join ( ) ; } catch ( InterruptedException ie ) { } }
43020	private void validatePurgeHistoricalOptions ( LocalizableMessageBuilder buf ) { try { if ( ! isInteractive ( ) && ! connectionArgumentsPresent ( ) ) { taskArgs . validateArgsIfOffline ( ) ; } else { taskArgs . validateArgs ( ) ; } } catch ( ClientException | ArgumentException e ) { addMessage ( buf , e . getMessageObject ( ) ) ; } }
43035	private void updateIndexStats ( EntryIDSet entryIDSet ) { if ( ! entryIDSet . isDefined ( ) ) { entryLimitExceededCount ++ ; multiReferenceCount ++ ; } else { if ( entryIDSet . size ( ) > _NUM ) { multiReferenceCount ++ ; } entryReferencesCount += entryIDSet . size ( ) ; maxEntryPerValue = Math . max ( maxEntryPerValue , entryIDSet . size ( ) ) ; } }
43520	public void update ( int b , ManifestEntryVerifier mev ) throws IOException { if ( b != - _NUM ) { if ( parsingBlockOrSF ) { baos . write ( b ) ; } else { mev . update ( ( byte ) b ) ; } } else { processEntry ( mev ) ; } }
43669	public void finish ( ) throws IOException { ensureOpen ( ) ; if ( finished ) { return ; } if ( current != _NULL ) { closeEntry ( ) ; } long off = written ; for ( XEntry xentry : xentries ) writeCEN ( xentry ) ; writeEND ( off , written - off ) ; finished = _BOOL ; }
43696	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { if ( getPrimaryModel ( ) == _NULL ) { throw new ModelControlException ( _CHAR Primary model is _NULL _CHAR ) ; } if ( buttons != _NULL ) { getPrimaryModel ( ) . setSize ( buttons . length ) ; } else { getPrimaryModel ( ) . setSize ( _NUM ) ; } super . beginDisplay ( event ) ; resetTileIndex ( ) ; }
43761	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof ApplicationPrincipal ) ) { return _BOOL ; } ApplicationPrincipal that = ( ApplicationPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
43763	public boolean containsObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( NSObject elem : array ) { if ( elem == _NULL ) { if ( obj == _NULL ) return _BOOL ; continue ; } if ( elem . equals ( nso ) ) { return _BOOL ; } } return _BOOL ; }
43768	protected String parseName ( String name ) throws NamingException { if ( ( ! initialContext ) && ( name . startsWith ( prefix ) ) ) { return ( name . substring ( prefixLength ) ) ; } else { if ( initialContext ) { return ( name ) ; } else { throw new NamingException ( sm . getString ( _CHAR selectorContext . noJavaUrl _CHAR ) ) ; } } }
43771	protected void expand ( ) { if ( ! isExpanded && ! isLeaf ( ) ) { boolean visible = isVisible ( ) ; isExpanded = _BOOL ; childCount = treeModel . getChildCount ( getUserObject ( ) ) ; if ( visible ) { didExpand ( ) ; } if ( visible && treeSelectionModel != _NULL ) { treeSelectionModel . resetRowSelection ( ) ; } } }
44085	public void clearPasswordChangedTime ( ) { logger . trace ( _CHAR Clearing password changed time for user % s '' , userDNString ) ; clearAttribute ( OP_ATTR_PWPOLICY_CHANGED_TIME_LC ) ; try { passwordChangedTime = getGeneralizedTime0 ( userEntry , OP_ATTR_CREATE_TIMESTAMP_LC ) ; if ( passwordChangedTime < _NUM ) { passwordChangedTime = _NUM ; } } catch ( Exception e ) { passwordChangedTime = _NUM ; } }
44112	private void voiceSetting ( ) { if ( mMeetingVoiceFlag ) { mVoiceButton . setImageResource ( R . drawable . btn_voice_off ) ; mAnyrtcViews . updateLocalVoiceImage ( _BOOL ) ; mAnyM2Mutlier . SetLocalAudioEnable ( _BOOL ) ; } else { mVoiceButton . setImageResource ( R . drawable . btn_voice_on ) ; mAnyrtcViews . updateLocalVoiceImage ( _BOOL ) ; mAnyM2Mutlier . SetLocalAudioEnable ( _BOOL ) ; } mMeetingVoiceFlag = ! mMeetingVoiceFlag ; }
44205	public long executeInsert ( ) { acquireReference ( ) ; try { return getSession ( ) . executeForLastInsertedRowId ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
44222	public boolean isNodeAncestor ( TreeNode anotherNode ) { if ( anotherNode == _NULL ) { return _BOOL ; } TreeNode ancestor = this ; do { if ( ancestor == anotherNode ) { return _BOOL ; } } while ( ( ancestor = ancestor . getParent ( ) ) != _NULL ) ; return _BOOL ; }
44251	private void initIndeterminateValues ( ) { initIndeterminateDefaults ( ) ; numFrames = cycleTime / repaintInterval ; initAnimationIndex ( ) ; boxRect = new Rectangle ( ) ; nextPaintRect = new Rectangle ( ) ; componentInnards = new Rectangle ( ) ; oldComponentInnards = new Rectangle ( ) ; progressBar . addHierarchyListener ( getHandler ( ) ) ; if ( progressBar . isDisplayable ( ) ) { startAnimationTimer ( ) ; } }
44351	public void close ( ) throws IOException { maxStreamPos = cache . length ( ) ; seek ( maxStreamPos ) ; flushBefore ( maxStreamPos ) ; super . close ( ) ; cache . close ( ) ; cache = _NULL ; cacheFile . delete ( ) ; cacheFile = _NULL ; stream . flush ( ) ; stream = _NULL ; StreamCloser . removeFromQueue ( closeAction ) ; }
44506	private void consumeAllMessages ( ReplicationBroker broker ) { final List < ReplicationMsg > msgs = new ArrayList < > ( ) ; try { while ( _BOOL ) { msgs . add ( broker . receive ( ) ) ; } } catch ( SocketTimeoutException expectedAtSomeStage ) { } if ( ! msgs . isEmpty ( ) ) { logger . error ( LocalizableMessage . raw ( _CHAR Leftover messages from previous test runs _CHAR + msgs ) ) ; } }
44695	void removeListener ( String listenerID ) { if ( listenerObjects != _NULL ) { synchronized ( listenerObjects ) { listenerObjects . remove ( listenerID ) ; if ( listenerObjects . isEmpty ( ) ) { deregisterListener ( ) ; } } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ServiceConfigManagerImpl ( _CHAR + serviceName + _CHAR ) : removeListener ListenerId : _CHAR + listenerID ) ; } } }
44767	public void write ( String p_name , OutputStreamWriter p_file ) { try { if ( is_legal ( p_name ) ) { p_file . write ( p_name ) ; } else { p_file . write ( quote ( p_name ) ) ; } } catch ( java . io . IOException e ) { System . out . println ( _CHAR IndentFileWriter . new_line : unable to write to file _CHAR ) ; } }
44987	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof OblixPrincipal ) ) { return _BOOL ; } OblixPrincipal that = ( OblixPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
45005	public void close ( ) throws IOException { if ( in != _NULL ) { try { if ( usesDefaultDeflater ) { def . end ( ) ; } in . close ( ) ; } finally { in = _NULL ; } } }
45112	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof DataStorePrincipal ) ) { return _BOOL ; } DataStorePrincipal that = ( DataStorePrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
45779	public static boolean containsModifiedHandshake ( TlsContext tlsContext ) { int unexpected = getUnexpectedMessagePosition ( tlsContext ) ; int finished = getServerFinishedMessagePosition ( tlsContext ) ; if ( unexpected != - _NUM ) { if ( finished == - _NUM ) { return _BOOL ; } else { return unexpected < finished ; } } return _BOOL ; }
45987	public ParcelFileDescriptor simpleQueryForBlobFileDescriptor ( ) { acquireReference ( ) ; try { return getSession ( ) . executeForBlobFileDescriptor ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
46006	public void close ( ) throws IOException { if ( ! closed ) { try { if ( ! eof ) { exhaustInputStream ( this ) ; } } finally { eof = _BOOL ; closed = _BOOL ; } } }
46094	@ Override public void flush ( ) { writerLock . readLock ( ) . lock ( ) ; try { if ( writer == _NULL ) return ; writer . flush ( ) ; } catch ( Exception e ) { reportError ( _NULL , e , ErrorManager . FLUSH_FAILURE ) ; } finally { writerLock . readLock ( ) . unlock ( ) ; } }
46349	private DispatcherTask dequeueNextTask ( String queueName ) { synchronized ( syncRoot ) { Queue < DispatcherTask > queue = taskQueuesMap . get ( queueName ) ; if ( queue == _NULL ) { return _NULL ; } DispatcherTask dispatcherTask = queue . poll ( ) ; if ( queue . isEmpty ( ) ) { taskQueuesMap . remove ( queueName ) ; } return dispatcherTask ; } }
46382	public void addLayoutComponent ( Component comp , Object constraints ) { synchronized ( comp . getTreeLock ( ) ) { if ( constraints == _NULL ) { constraints = _CHAR _CHAR ; } if ( constraints instanceof String ) { addLayoutComponent ( ( String ) constraints , comp ) ; } else { throw new IllegalArgumentException ( _CHAR can not add to layout : constraint must be a string _CHAR ) ; } } }
46480	void syncToFileSystem ( ) throws ChangelogException { checkLogIsEnabledForWrite ( ) ; sharedLock . lock ( ) ; try { writer . sync ( ) ; } catch ( Exception e ) { throw new ChangelogException ( ERR_CHANGELOG_UNABLE_TO_SYNC . get ( getPath ( ) ) , e ) ; } finally { sharedLock . unlock ( ) ; } }
46913	protected Jedis fetchJedisConnector ( ) { try { if ( pool != _NULL ) { return pool . getResource ( ) ; } Jedis jedis = new Jedis ( getShardInfo ( ) ) ; jedis . connect ( ) ; return jedis ; } catch ( Exception ex ) { throw new RuntimeException ( _CHAR Can not get Jedis connection _CHAR , ex ) ; } }
47050	void updateMaskIfNecessary ( ) { if ( ! getAllowsInvalid ( ) && ( getFormat ( ) != _NULL ) ) { if ( ! isValidMask ( ) ) { updateMask ( ) ; } else { String newString = getFormattedTextField ( ) . getText ( ) ; if ( ! newString . equals ( string ) ) { updateMask ( ) ; } } } }
47127	private boolean tryAcquireParentSubtreeReadLock ( ) { if ( parent == _NULL ) { return _BOOL ; } if ( ! parent . tryAcquireParentSubtreeReadLock ( ) ) { return _BOOL ; } if ( tryLockWithTimeout ( parent . subtreeLock . readLock ( ) ) ) { return _BOOL ; } releaseParentSubtreeReadLock ( ) ; return _BOOL ; }
47169	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof NTPrincipal ) ) { return _BOOL ; } NTPrincipal that = ( NTPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
48297	public int executeUpdateDelete ( ) { acquireReference ( ) ; try { return getSession ( ) . executeForChangedRowCount ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
48430	public boolean equals ( Timestamp ts ) { if ( super . equals ( ts ) ) { if ( nanos == ts . nanos ) { return _BOOL ; } else { return _BOOL ; } } else { return _BOOL ; } }
48453	private TrustAnchor findTrustAnchorBySubjectAndPublicKey ( X509Certificate cert ) { TrustAnchor trustAnchor = trustedCertificateIndex . findBySubjectAndPublicKey ( cert ) ; if ( trustAnchor != _NULL ) { return trustAnchor ; } if ( trustedCertificateStore == _NULL ) { return _NULL ; } if ( trustedCertificateStore . isTrustAnchor ( cert ) ) { return trustedCertificateIndex . index ( cert ) ; } return _NULL ; }
48456	public void uninstallingUI ( ) { if ( propertyChangeListener != _NULL ) { comboBox . removePropertyChangeListener ( propertyChangeListener ) ; } if ( itemListener != _NULL ) { comboBox . removeItemListener ( itemListener ) ; } uninstallComboBoxModelListeners ( comboBox . getModel ( ) ) ; uninstallKeyboardActions ( ) ; uninstallListListeners ( ) ; uninstallScrollerListeners ( ) ; list . setModel ( EmptyListModel ) ; }
48512	public boolean matchesEntry ( Entry entry ) throws DirectoryException { ConditionResult result = matchesEntryInternal ( this , entry , _NUM ) ; switch ( result ) { case TRUE : return _BOOL ; case FALSE : case UNDEFINED : return _BOOL ; default : logger . error ( ERR_SEARCH_FILTER_INVALID_RESULT_TYPE , entry . getName ( ) , this , result ) ; return _BOOL ; } }
49027	public void execute ( ) { acquireReference ( ) ; try { getSession ( ) . execute ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
49311	public String waitForConfigChange ( ) throws InterruptedException { logger . message ( _CHAR Entering ConfigChangeListener . waitForConfigChange ( ) _CHAR ) ; String msg = _NULL ; try { msg = configChangedQueue . take ( ) ; } catch ( final InterruptedException e ) { logger . warning ( _CHAR Thread waiting for config change has been interrupted . '' ) ; throw e ; } logger . message ( _CHAR Exiting ConfigChangeListener . waitForConfigChange , returning _CHAR + msg ) ; return msg ; }
49492	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { if ( isXuiAdminConsoleEnabled ( ) ) { redirectToXui ( getRequestContext ( ) . getRequest ( ) , XuiRedirectHelper . DEPLOYMENT_SERVERS ) ; } else { super . beginDisplay ( event ) ; } resetButtonState ( TBL_SERVER_BUTTON_DELETE ) ; resetButtonState ( TBL_SERVER_BUTTON_CLONE ) ; resetButtonState ( TBL_SITE_BUTTON_DELETE ) ; getSiteNames ( ) ; getServerNames ( ) ; }
49743	public List < Challenge > challenges ( ) { String responseField ; if ( code == HTTP_UNAUTHORIZED ) { responseField = _CHAR WWW - Authenticate _CHAR ; } else if ( code == HTTP_PROXY_AUTH ) { responseField = _CHAR Proxy - Authenticate _CHAR ; } else { return Collections . emptyList ( ) ; } return OkHeaders . parseChallenges ( headers ( ) , responseField ) ; }
50080	public void unsetTiling ( ) { if ( ! canWriteTiles ( ) ) { throw new UnsupportedOperationException ( _CHAR Tiling not supported ! _CHAR ) ; } if ( getTilingMode ( ) != MODE_EXPLICIT ) { throw new IllegalStateException ( _CHAR Tiling mode not MODE_EXPLICIT ! _CHAR ) ; } this . tilingSet = _BOOL ; this . tileWidth = _NUM ; this . tileHeight = _NUM ; this . tileGridXOffset = _NUM ; this . tileGridYOffset = _NUM ; }
50361	public void shutdown ( int statusCode ) throws IOException { synchronized ( spdyWriter ) { int lastGoodStreamId ; synchronized ( this ) { if ( shutdown ) { return ; } shutdown = _BOOL ; lastGoodStreamId = this . lastGoodStreamId ; } spdyWriter . goAway ( _NUM , lastGoodStreamId , statusCode ) ; } }
50391	protected static Long convertUuidToLong ( UUID uuid ) { if ( uuid == _NULL ) { return _NULL ; } Long convertedUuid ; if ( uuid . version ( ) == _NUM ) { convertedUuid = uuid . timestamp ( ) ; } else { convertedUuid = uuid . getMostSignificantBits ( ) ; } return convertedUuid ; }
50438	public PdfPage removePage ( int pageNum ) { PdfPage pdfPage = getPage ( pageNum ) ; if ( pdfPage . isFlushed ( ) ) { Logger logger = LoggerFactory . getLogger ( PdfPage . class ) ; logger . warn ( LogMessageConstant . REMOVING_PAGE_HAS_ALREADY_BEEN_FLUSHED ) ; } if ( internalRemovePage ( -- pageNum ) ) { return pdfPage ; } else { return _NULL ; } }
50605	public static double convertToDouble ( String rawValue ) throws XMPException { try { if ( rawValue == _NULL || rawValue . length ( ) == _NUM ) { throw new XMPException ( _CHAR Empty convert - string _CHAR , XMPError . BADVALUE ) ; } else { return Double . parseDouble ( rawValue ) ; } } catch ( NumberFormatException e ) { throw new XMPException ( _CHAR Invalid double string _CHAR , XMPError . BADVALUE ) ; } }
50815	public void addService ( ContextService service ) { if ( entries . contains ( service . getName ( ) ) ) { return ; } else { entries . add ( service . getName ( ) ) ; } synchronized ( services ) { service . setNamingResources ( this ) ; services . put ( service . getName ( ) , service ) ; } support . firePropertyChange ( _CHAR service _CHAR , _NULL , service ) ; }
51302	public void addEjb ( ContextEjb ejb ) { if ( entries . contains ( ejb . getName ( ) ) ) { return ; } else { entries . add ( ejb . getName ( ) ) ; } synchronized ( ejbs ) { ejb . setNamingResources ( this ) ; ejbs . put ( ejb . getName ( ) , ejb ) ; } support . firePropertyChange ( _CHAR ejb _CHAR , _NULL , ejb ) ; }
51333	public void interruptTask ( TaskState interruptState , LocalizableMessage interruptReason , boolean exitThread ) { if ( getAssociatedTask ( ) != _NULL ) { try { getAssociatedTask ( ) . interruptTask ( interruptState , interruptReason ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } if ( exitThread ) { exitRequested = _BOOL ; } }
51471	TemporalAccessor resolve ( ResolverStyle resolverStyle , Set < TemporalField > resolverFields ) { if ( resolverFields != _NULL ) { fieldValues . keySet ( ) . retainAll ( resolverFields ) ; } this . resolverStyle = resolverStyle ; resolveFields ( ) ; resolveTimeLenient ( ) ; crossCheck ( ) ; resolvePeriod ( ) ; resolveFractional ( ) ; resolveInstant ( ) ; return this ; }
51600	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { if ( getPrimaryModel ( ) == _NULL ) { throw new ModelControlException ( _CHAR Primary model is _NULL _CHAR ) ; } if ( choices != _NULL ) { getPrimaryModel ( ) . setSize ( choices . length ) ; } else { getPrimaryModel ( ) . setSize ( _NUM ) ; } super . beginDisplay ( event ) ; resetTileIndex ( ) ; }
51695	public MaterialBarcodeScanner build ( ) { if ( mUsed ) { throw new RuntimeException ( _CHAR You must not reuse a MaterialBarcodeScanner builder _CHAR ) ; } if ( mActivity == _NULL ) { throw new RuntimeException ( _CHAR Please pass an activity to the MaterialBarcodeScannerBuilder _CHAR ) ; } mUsed = _BOOL ; buildMobileVisionBarcodeDetector ( ) ; MaterialBarcodeScanner materialBarcodeScanner = new MaterialBarcodeScanner ( this ) ; materialBarcodeScanner . setOnResultListener ( onResultListener ) ; return materialBarcodeScanner ; }
51784	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof CertAuthPrincipal ) ) { return _BOOL ; } CertAuthPrincipal that = ( CertAuthPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
51849	public long simpleQueryForLong ( ) { acquireReference ( ) ; try { return getSession ( ) . executeForLong ( getSql ( ) , getBindArgs ( ) , getConnectionFlags ( ) , _NULL ) ; } catch ( SQLiteDatabaseCorruptException ex ) { onCorruption ( ) ; throw ex ; } finally { releaseReference ( ) ; } }
52250	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof LDAPPrincipal ) ) { return _BOOL ; } LDAPPrincipal that = ( LDAPPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
52262	public void appendRemainingComponent ( String name ) { if ( name != _NULL ) { try { if ( remainingName == _NULL ) { remainingName = new CompositeName ( ) ; } remainingName . add ( name ) ; } catch ( NamingException e ) { throw new IllegalArgumentException ( e . toString ( ) ) ; } } }
52386	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof AnonymousAuthPrincipal ) ) { return _BOOL ; } AnonymousAuthPrincipal that = ( AnonymousAuthPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
52426	private boolean addViewItem ( int index , boolean first ) { View view = getItemView ( index ) ; if ( view != _NULL ) { if ( first ) { itemsLayout . addView ( view , _NUM ) ; } else { itemsLayout . addView ( view ) ; } return _BOOL ; } return _BOOL ; }
52676	public synchronized void stopPooling ( ) { stopPooling = _BOOL ; while ( poolingThread != _NULL && pooling ) { try { poolingThread . interrupt ( ) ; Thread . sleep ( _NUM ) ; } catch ( Throwable t ) { } } poolingThread = _NULL ; pooling = _BOOL ; }
52704	private static SearchScope elaborateScopeForSearchInSubordinates ( SearchScope currentScope ) { switch ( currentScope . asEnum ( ) ) { case BASE_OBJECT : return _NULL ; case SINGLE_LEVEL : return SearchScope . BASE_OBJECT ; case SUBORDINATES : case WHOLE_SUBTREE : return SearchScope . WHOLE_SUBTREE ; default : return currentScope ; } }
52759	public DTMAxisIterator reset ( ) { if ( _isConstant ) { _currentNode = _startNode ; return resetPosition ( ) ; } else { final boolean temp = _isRestartable ; _isRestartable = _BOOL ; setStartNode ( _startNode ) ; _isRestartable = temp ; } return this ; }
52777	public void clear ( ) { synchronized ( map ) { synchronized ( nextTurn [ containerNeeded - _NUM ] ) { for ( int i = ( containerNeeded - _NUM ) ; i >= _NUM ; i -- ) { nextTurn [ i ] . clear ( ) ; } synchronized ( thisTurn ) { thisTurn . clear ( ) ; } } map . clear ( ) ; } }
52890	private void processSynchPostOperationPlugins ( ) { for ( SynchronizationProvider < ? > provider : DirectoryServer . getSynchronizationProviders ( ) ) { try { provider . doPostOperation ( this ) ; } catch ( DirectoryException de ) { logger . traceException ( de ) ; logger . error ( ERR_MODDN_SYNCH_POSTOP_FAILED , getConnectionID ( ) , getOperationID ( ) , getExceptionMessage ( de ) ) ; setResponseData ( de ) ; return ; } } }
53014	private void makeRoom ( ) { if ( size <= MAX_SIZE ) { return ; } indexFiles ( ) ; int removals = size - MAX_SIZE ; Iterator < File > i = accessOrder . values ( ) . iterator ( ) ; do { delete ( i . next ( ) ) ; i . remove ( ) ; } while ( -- removals > _NUM ) ; }
53032	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof SMPrincipal ) ) { return _BOOL ; } SMPrincipal that = ( SMPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
53269	public boolean hasResourceNames ( ) { boolean hasResources = _BOOL ; Collection actionSchemas = getActionSchemas ( ) . values ( ) ; Iterator iter = actionSchemas . iterator ( ) ; while ( iter . hasNext ( ) ) { ActionSchema actionSchema = ( ActionSchema ) iter . next ( ) ; if ( actionSchema . requiresResourceName ( ) ) { hasResources = _BOOL ; break ; } } return hasResources ; }
53447	public void removeNotify ( ) { super . removeNotify ( ) ; firePropertyChange ( _CHAR ancestor _CHAR , getParent ( ) , _NULL ) ; unregisterWithKeyboardManager ( ) ; deregisterNextFocusableComponent ( ) ; if ( getCreatedDoubleBuffer ( ) ) { RepaintManager . currentManager ( this ) . resetDoubleBuffer ( ) ; setCreatedDoubleBuffer ( _BOOL ) ; } if ( autoscrolls ) { Autoscroller . stop ( this ) ; } }
53514	private void sync ( ) { int s = state ; if ( ( s & RELOAD_IMAGE_FLAG ) != _NUM ) { refreshImage ( ) ; } s = state ; if ( ( s & RELOAD_FLAG ) != _NUM ) { synchronized ( this ) { state = ( state | RELOAD_FLAG ) ^ RELOAD_FLAG ; } setPropertiesFromAttributes ( ) ; } }
53610	public boolean isRedirect ( ) { switch ( code ) { case HTTP_PERM_REDIRECT : case HTTP_TEMP_REDIRECT : case HTTP_MULT_CHOICE : case HTTP_MOVED_PERM : case HTTP_MOVED_TEMP : case HTTP_SEE_OTHER : return _BOOL ; default : return _BOOL ; } }
53970	public void endDocument ( ) throws org . xml . sax . SAXException { flushPending ( ) ; if ( m_doIndent && ! m_isprevtext ) { try { outputLineSep ( ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } } flushWriter ( ) ; if ( m_tracer != _NULL ) super . fireEndDoc ( ) ; }
54037	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof MembershipPrincipal ) ) { return _BOOL ; } MembershipPrincipal that = ( MembershipPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
54072	private Future < Void > publish ( Record record ) { if ( discovery == _NULL ) { try { start ( ) ; } catch ( Exception e ) { throw new IllegalStateException ( _CHAR Can not create discovery service _CHAR ) ; } } Future < Void > future = Future . future ( ) ; discovery . publish ( record , _NULL ) ; return future ; }
54074	public boolean containsObject ( Object obj ) { NSObject nso = NSObject . wrap ( obj ) ; for ( NSObject elem : array ) { if ( elem == _NULL ) { if ( obj == _NULL ) return _BOOL ; continue ; } if ( elem . equals ( nso ) ) { return _BOOL ; } } return _BOOL ; }
54090	@ Override public int hashCode ( ) { int code = _NUM ; if ( propertyName != _NULL ) { code += propertyName . hashCode ( ) ; } if ( propertyValues != _NULL ) { code += propertyValues . hashCode ( ) ; } if ( pResponseProviderName != _NULL ) { code += pResponseProviderName . hashCode ( ) ; } return code ; }
54113	@ Override public int read ( ) throws IOException { for ( ; ; ) { if ( encoderOut . hasRemaining ( ) ) { return encoderOut . get ( ) & _NUM ; } else { fillBuffer ( ) ; if ( endOfInput && ! encoderOut . hasRemaining ( ) ) { return - _NUM ; } } } }
54139	private void processSynchPostOperationPlugins ( ) { for ( SynchronizationProvider < ? > provider : getSynchronizationProviders ( ) ) { try { provider . doPostOperation ( this ) ; } catch ( DirectoryException de ) { logger . traceException ( de ) ; logger . error ( ERR_DELETE_SYNCH_POSTOP_FAILED , getConnectionID ( ) , getOperationID ( ) , getExceptionMessage ( de ) ) ; setResponseData ( de ) ; return ; } } }
54276	public void commitTransaction ( ) throws SQLException { try { this . currentConection . commit ( ) ; } catch ( SQLException e ) { if ( this . currentConection != _NULL ) { this . currentConection . rollback ( ) ; } } finally { this . currentConection . setAutoCommit ( _BOOL ) ; } }
54509	private void parsePropertyAttributes ( Element property ) { if ( property == _NULL ) { return ; } String temp = property . getAttribute ( _CHAR name _CHAR ) ; if ( temp != _NULL ) { sessionRequest . setPropertyName ( temp ) ; } temp = property . getAttribute ( _CHAR value _CHAR ) ; if ( temp != _NULL ) { sessionRequest . setPropertyValue ( temp ) ; } }
54907	public synchronized void close ( ) throws IOException { if ( journalWriter == _NULL ) { return ; } for ( Entry entry : new ArrayList < Entry > ( lruEntries . values ( ) ) ) { if ( entry . currentEditor != _NULL ) { entry . currentEditor . abort ( ) ; } } trimToSize ( ) ; journalWriter . close ( ) ; journalWriter = _NULL ; }
54932	public void updateUI ( ) { if ( isAcceptAllFileFilterUsed ( ) ) { removeChoosableFileFilter ( getAcceptAllFileFilter ( ) ) ; } FileChooserUI ui = ( ( FileChooserUI ) UIManager . getUI ( this ) ) ; if ( fileSystemView == _NULL ) { setFileSystemView ( FileSystemView . getFileSystemView ( ) ) ; } setUI ( ui ) ; if ( isAcceptAllFileFilterUsed ( ) ) { addChoosableFileFilter ( getAcceptAllFileFilter ( ) ) ; } }
55170	public String encode ( ) { String encoded_string ; encoded_string = PHONE_FIELD ; if ( name != _NULL ) { encoded_string += name + Separators . LESS_THAN ; } encoded_string += phoneNumber ; if ( name != _NULL ) { encoded_string += Separators . GREATER_THAN ; } encoded_string += Separators . NEWLINE ; return encoded_string ; }
55476	@ Override public int realReadBytes ( ) throws IOException { if ( closed ) { return - _NUM ; } if ( coyoteRequest == _NULL ) { return - _NUM ; } if ( state == INITIAL_STATE ) { state = BYTE_STATE ; } int result = coyoteRequest . doRead ( bb ) ; return result ; }
55746	public void initialize ( ) { try { startCommonRegistry ( ) ; startConnectorNoClientCertificate ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; throw new RuntimeException ( _CHAR Error while starting the RMI module : '' + e . getMessage ( ) ) ; } if ( logger . isTraceEnabled ( ) ) { logger . trace ( _CHAR RMI module started _CHAR ) ; } }
55795	@ Override public void unbind ( ) throws Exception { if ( running ) { stop ( ) ; } serverSock . close ( ) ; serverSock = _NULL ; destroySsl ( ) ; super . unbind ( ) ; shutdownExecutor ( ) ; if ( getHandler ( ) != _NULL ) { getHandler ( ) . recycle ( ) ; } }
56225	@ Override public Object clone ( ) { PrivilegeSubject cloned = _NULL ; try { cloned = ( PrivilegeSubject ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } if ( state != _NULL ) { cloned . state = state ; } return cloned ; }
56231	public void poll ( final SoftnetStatsHandler softnetStatsHandler ) { this . softnetStatsHandler = softnetStatsHandler ; try { fileLoader . load ( ) ; final ByteBuffer buffer = fileLoader . getBuffer ( ) ; cpuId = _NUM ; lineParser . reset ( ) ; lineParser . handleToken ( buffer , buffer . position ( ) , buffer . limit ( ) ) ; } finally { this . softnetStatsHandler = _NULL ; } }
56281	public boolean equals ( Object o ) { if ( o == _NULL ) { return _BOOL ; } if ( this == o ) { return _BOOL ; } if ( ! ( o instanceof JDBCPrincipal ) ) { return _BOOL ; } JDBCPrincipal that = ( JDBCPrincipal ) o ; return this . getName ( ) . equals ( that . getName ( ) ) ; }
