224	@ Override public boolean hasMoreData ( ) { int c =- _NUM ; try { reader . mark ( _NUM ) ; c = reader . read ( ) ; reader . reset ( ) ; } catch ( IOException ioe ) { ioe . printStackTrace ( ) ; } return c != - _NUM ; }
250	public boolean remove ( MidiEvent event ) { synchronized ( eventsList ) { if ( set . remove ( event ) ) { int i = eventsList . indexOf ( event ) ; if ( i >= _NUM ) { eventsList . remove ( i ) ; return _BOOL ; } } } return _BOOL ; }
454	private int klattRule3 ( Element segment ) { Element syllable = getSyllable ( segment ) ; if ( ! isMajIPFinal ( syllable ) ) { if ( isInNucleus ( segment ) ) { return getPropertyAsInteger ( _CHAR rule3 . nucleus _CHAR ) ; } } else if ( isInCoda ( segment ) && ( isLiquid ( segment ) || isNasal ( segment ) ) ) { return getPropertyAsInteger ( _CHAR rule3 . coda _CHAR ) ; } return _NUM ; }
518	public int max ( ) { if ( size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR can not find maximum of an empty list _CHAR ) ; } int max = Integer . MIN_VALUE ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( _data [ i ] > max ) { max = _data [ i ] ; } } return max ; }
778	public static void disable ( ) { if ( lock . compareAndSet ( _BOOL , _BOOL ) ) { RxJavaPlugins . setOnCompletableAssembly ( _NULL ) ; RxJavaPlugins . setOnSingleAssembly ( _NULL ) ; RxJavaPlugins . setOnMaybeAssembly ( _NULL ) ; RxJavaPlugins . setOnObservableAssembly ( _NULL ) ; RxJavaPlugins . setOnFlowableAssembly ( _NULL ) ; RxJavaPlugins . setOnConnectableObservableAssembly ( _NULL ) ; RxJavaPlugins . setOnConnectableFlowableAssembly ( _NULL ) ; lock . set ( _BOOL ) ; } }
791	public FastConcurrentSkipListMap < K , V > clone ( ) { FastConcurrentSkipListMap < K , V > clone = _NULL ; try { clone = ( FastConcurrentSkipListMap < K , V > ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } clone . initialize ( ) ; clone . buildFromSorted ( this ) ; return clone ; }
923	protected static void deleteRecursiveSilent ( CarbonFile f ) { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursiveSilent ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { return ; } }
938	public void readConfiguration ( InputStream ins ) throws IOException { super . readConfiguration ( ins ) ; synchronized ( this ) { if ( probe == _NULL ) { long interval = getInterval ( ) ; if ( interval > _NUM ) { probe = new Probe ( interval ) ; probe . start ( ) ; } } } }
1018	public boolean levelEquals ( DataApprovalLevel other ) { if ( other == _NULL ) { return _BOOL ; } if ( level != other . getLevel ( ) ) { return _BOOL ; } if ( categoryOptionGroupSet != _NULL ? ! categoryOptionGroupSet . equals ( other . getCategoryOptionGroupSet ( ) ) : other . getCategoryOptionGroupSet ( ) != _NULL ) { return _BOOL ; } return _BOOL ; }
1053	private static void deleteRecursive ( CarbonFile f ) throws CarbonUtilException { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursive ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { throw new CarbonUtilException ( _CHAR Error while deleting the folders and files '' ) ; } }
1615	@ Override public void processingInstruction ( String target , String data ) throws SAXException { writeText4Links ( ) ; write ( _CHAR < ? _CHAR ) ; write ( target ) ; write ( _CHAR ) ; write ( data ) ; write ( _CHAR ? > _CHAR ) ; if ( elementLevel < _NUM ) { write ( _CHAR ) ; } super . processingInstruction ( target , data ) ; }
1823	public static boolean isValidVector ( Vector2f vector ) { if ( vector == _NULL ) { return _BOOL ; } if ( Float . isNaN ( vector . x ) || Float . isNaN ( vector . y ) ) { return _BOOL ; } if ( Float . isInfinite ( vector . x ) || Float . isInfinite ( vector . y ) ) { return _BOOL ; } return _BOOL ; }
2118	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
2207	private void onGoogleAuthBtnClicked ( final ActionEvent ignored ) { final LoginData loginData = new LoginData ( ) ; if ( configLoginData . hasToken ( ) ) { loginData . setToken ( configLoginData . getToken ( ) ) ; loginData . setSavedToken ( _BOOL ) ; } else { loginData . setToken ( tokenField . getText ( ) ) ; } loginData . setLoginType ( LoginType . GOOGLE_AUTH ) ; tryLogin ( loginData ) ; }
2209	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
2273	public JSONWriter object ( ) throws JSONException { if ( this . mode == _CHAR ) { this . mode = _CHAR ; } if ( this . mode == _CHAR || this . mode == _CHAR ) { this . append ( _CHAR { _CHAR ) ; this . push ( new JSONObject ( ) ) ; this . comma = _BOOL ; return this ; } throw new JSONException ( _CHAR Misplaced object . '' ) ; }
2541	public boolean subtractFrom ( Rectangle bounds ) { if ( isEmpty ( ) ) { return _BOOL ; } bounds . x -= left ; bounds . width += left ; bounds . y -= top ; bounds . height += top ; bounds . width += right ; bounds . height += bottom ; return _BOOL ; }
2555	public static boolean isFileExtensionSupported ( File file , List < String > fileExtensionList ) { if ( file == _NULL ) { return _BOOL ; } String fileExtension = ExternalFilenames . getFileExtension ( file . getAbsolutePath ( ) ) ; for ( String allowedFileExtension : fileExtensionList ) { if ( fileExtension . compareToIgnoreCase ( allowedFileExtension ) == _NUM ) { return _BOOL ; } } return _BOOL ; }
2578	private boolean isNumber ( String string ) { String s = string . trim ( ) ; if ( s . length ( ) < _NUM ) return _BOOL ; double value = _NUM ; try { value = Double . parseDouble ( s ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
2617	public boolean contains ( T obj ) { lock . lock ( ) ; try { if ( _objectsMap != _NULL ) { return _objectsMap . containsKey ( obj ) ; } return contains_impl ( obj ) ; } finally { lock . unlock ( ) ; } }
2626	public static String pad ( int padding ) { if ( padding > _NUM ) { StringBuffer sb = new StringBuffer ( padding ) ; for ( int i = _NUM ; i < padding ; i ++ ) { sb . append ( _CHAR ) ; } return sb . toString ( ) ; } else { return _CHAR _CHAR ; } }
2694	private void initializationSteps ( ) { if ( isLocal ) { setHost ( LOCAL_HOST ) ; setPort ( LOCAL_PORT ) ; localNode = launchLocalCluster ( ) ; log . debug ( _CHAR init ( ) - Connecting to local ElasticSearch instance ( inside same JVM ) is enabled . '' ) ; } else { log . debug ( _CHAR init ( ) - Connecting to local ElasticSearch instance ( inside same JVM ) is disabled . '' ) ; } client = createClient ( ) ; }
2772	protected boolean isValidScheme ( String scheme ) { if ( scheme == _NULL ) { return _BOOL ; } if ( ! SCHEME_PATTERN . matcher ( scheme ) . matches ( ) ) { return _BOOL ; } if ( isOff ( ALLOW_ALL_SCHEMES ) && ! allowedSchemes . contains ( scheme . toLowerCase ( Locale . ENGLISH ) ) ) { return _BOOL ; } return _BOOL ; }
2904	public int min ( ) { if ( size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR can not find minimum of an empty list _CHAR ) ; } int min = Integer . MAX_VALUE ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( _data [ i ] < min ) { min = _data [ i ] ; } } return min ; }
3129	private boolean checkValidation ( final SourceDataTag currentSourceDataTag , final ValueUpdate update ) { if ( ! isTimestampValid ( currentSourceDataTag , update ) ) { return _BOOL ; } if ( ! isConvertible ( currentSourceDataTag , update ) ) { return _BOOL ; } if ( isNumber ( currentSourceDataTag . getDataType ( ) ) && ! isInRange ( currentSourceDataTag , update ) ) { return _BOOL ; } return _BOOL ; }
3144	@ Nullable public static PsiFile asFileSearch ( PsiElement elementToSearch ) { if ( elementToSearch instanceof PsiFile ) { return ( PsiFile ) elementToSearch ; } for ( PsiFileProvider provider : PsiFileProvider . EP_NAME . getExtensions ( ) ) { PsiFile file = provider . asFileSearch ( elementToSearch ) ; if ( file != _NULL ) { return file ; } } return _NULL ; }
3358	private static boolean overflowInParse ( long current , int digit , int radix ) { if ( current >= _NUM ) { if ( current < maxValueDivs [ radix ] ) { return _BOOL ; } if ( current > maxValueDivs [ radix ] ) { return _BOOL ; } return ( digit > maxValueMods [ radix ] ) ; } return _BOOL ; }
3366	public void addUserDefPts ( Set < Node > initVars ) { for ( Node vn : initVars ) { IVarAbstraction pn = geomPTA . findInternalNode ( vn ) ; if ( pn == _NULL ) { continue ; } pn = pn . getRepresentative ( ) ; if ( pn . reachable ( ) ) { pn . willUpdate = _BOOL ; } } }
3684	private void isaac ( ) { isaacI = _NUM ; isaacJ = H_SIZE ; isaacB +=++ isaacC ; while ( isaacI < H_SIZE ) { isaac2 ( ) ; } isaacJ = _NUM ; while ( isaacJ < H_SIZE ) { isaac2 ( ) ; } }
3886	public void disconnect ( ) { if ( connecting || ! connected ) { return ; } connected = _BOOL ; logger . fine ( _CHAR Disconnecting from Skype _CHAR ) ; notifConnector . disconnect ( ) ; for ( Map . Entry < String , User > user : users . entrySet ( ) ) { user . getValue ( ) . setPresence ( Presence . OFFLINE , _BOOL ) ; } reset ( ) ; }
3964	public void finishZombieTasksWithError ( ) { List < PollableTask > zombiePollableTasks ; do { logger . debug ( _CHAR Fetching _NUM zombie pollable tasks to clean up _CHAR ) ; PageRequest pageable = new PageRequest ( _NUM , _NUM ) ; zombiePollableTasks = pollableTaskRepository . findZombiePollableTasks ( pageable ) ; for ( PollableTask zombiePollableTask : zombiePollableTasks ) { markAsFinishedWithError ( zombiePollableTask ) ; } } while ( ! zombiePollableTasks . isEmpty ( ) ) ; }
4029	public static final void toStringArray ( StringBuffer output , Object tab ) { if ( tab == _NULL ) { output . append ( _CHAR _NULL _CHAR ) ; return ; } Class type = tab . getClass ( ) ; if ( ! type . isArray ( ) ) { toString ( output , tab ) ; return ; } toString ( output , tab , type . getComponentType ( ) ) ; }
4316	public boolean isSilence ( ) { if ( isSilence == - _NUM ) { String silenceSymbol = _CHAR _ _CHAR ; if ( name . startsWith ( silenceSymbol ) ) { isSilence = _NUM ; } else { isSilence = _NUM ; } } return isSilence == _NUM ; }
4560	public boolean start ( String file ) { boolean ok = _BOOL ; try { out = new BufferedOutputStream ( new FileOutputStream ( file ) ) ; ok = start ( out ) ; closeStream = _BOOL ; } catch ( IOException e ) { ok = _BOOL ; } return started = ok ; }
4664	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
4721	public static void deleteDirectory ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } if ( ! isSymlink ( directory ) ) { cleanDirectory ( directory ) ; } if ( ! directory . delete ( ) ) { String message = _CHAR Unable to delete directory _CHAR + directory + _CHAR . _CHAR ; throw new IOException ( message ) ; } }
4997	public void onMessage ( Message message ) { MapMessage mapMessage = _NULL ; if ( Debug . verboseOn ( ) ) Debug . logVerbose ( _CHAR JMS Message Received -- > _CHAR + message , module ) ; if ( message instanceof MapMessage ) { mapMessage = ( MapMessage ) message ; } else { Debug . logError ( _CHAR Received message is not a MapMessage ! _CHAR , module ) ; return ; } runService ( mapMessage ) ; }
5008	private void overwriteDictionaryMetaFile ( ColumnDictionaryChunkMeta firstDictionaryChunkMeta , String dictionaryFile ) throws IOException { ThriftWriter thriftMetaChunkWriter = new ThriftWriter ( dictionaryFile , _BOOL ) ; try { thriftMetaChunkWriter . open ( ) ; thriftMetaChunkWriter . write ( firstDictionaryChunkMeta ) ; } catch ( IOException e ) { } finally { thriftMetaChunkWriter . close ( ) ; } }
5229	public static Date parseTimestamp ( @ Nullable String string ) { Date date = _NULL ; try { if ( string != _NULL ) { date = ISO8601Utils . parse ( string , new ParsePosition ( _NUM ) ) ; } } catch ( ParseException e ) { throw Throwables . propagate ( e ) ; } return date ; }
5338	private static void deleteRecursiveSilent ( CarbonFile f ) { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursiveSilent ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { return ; } }
5471	public static boolean templatesAreValid ( ) { try { File templateRootFolder = getTemplateRootFolder ( ) ; if ( templateRootFolder == _NULL ) { return _BOOL ; } return templateRootIsValid ( templateRootFolder ) ; } catch ( Exception e ) { return _BOOL ; } }
5572	public int decrement ( ) { lock . lock ( ) ; if ( value != _NUM ) { -- value ; } else { value = Integer . MAX_VALUE ; } int newValue = value ; lock . unlock ( ) ; return newValue ; }
5812	@ Override public Supervised clone ( ) { try { AbstractSupervisedCacheObject cacheObject = ( AbstractSupervisedCacheObject ) super . clone ( ) ; if ( this . statusTime != _NULL ) { cacheObject . statusTime = ( Timestamp ) this . statusTime . clone ( ) ; } return cacheObject ; } catch ( CloneNotSupportedException e ) { throw new RuntimeException ( _CHAR Exception caught in cloning Supervised object - this should not happen ! _CHAR , e ) ; } }
5847	public static void closeQuietly ( AutoCloseable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
5948	public boolean matches ( String url ) { if ( ! enabled ) { return _BOOL ; } for ( Pattern pattern : getPatterns ( ) ) { Matcher matcher = pattern . matcher ( url ) ; if ( matcher . matches ( ) ) { return _BOOL ; } } return _BOOL ; }
6240	public List < Entry > filter ( List < Entry > points , double tolerance ) { if ( tolerance <= _NUM ) return points ; keep = new boolean [ points . size ( ) ] ; switch ( mType ) { case DOUGLAS_PEUCKER : return reduceWithDouglasPeuker ( points , tolerance ) ; case NONE : return points ; default : return points ; } }
6249	protected View reuseOrInflateView ( View convertView , ViewGroup parent , AdapterType type ) { int itemLayout = getItemLayoutResId ( ) ; switch ( type ) { case BASE_RECIPIENT : case RECIPIENT_ALTERNATES : break ; case SINGLE_RECIPIENT : itemLayout = getAlternateItemLayoutResId ( ) ; break ; } return convertView != _NULL ? convertView : mInflater . inflate ( itemLayout , parent , _BOOL ) ; }
6254	public void ready ( ) { switch ( state ) { case INITIALIZE : state = READY ; synchronized ( this ) { notifyAll ( ) ; } break ; default : throw new AssertionError ( _CHAR ready is only called when the _CHAR + _CHAR service is in the INITIALIZE _CHAR + _CHAR state _CHAR ) ; } }
6459	protected boolean skipComponent ( Component c ) { if ( c instanceof JComponent ) { JComponent jComponent = ( JComponent ) c ; if ( jComponent . getClientProperty ( SCALE_FACTOR_KEY ) != _NULL ) return _BOOL ; } if ( c instanceof ComponentWithBrowseButton ) { if ( c . isPreferredSizeSet ( ) ) { return _BOOL ; } } return _BOOL ; }
6608	public IReadBlock next ( ) { try { currentCount ++ ; countReads ++ ; return ReadBlockRMA2 . read ( rma2Formatter , classDumpReader . readLong ( ) , wantReadText , wantMatchData , wantMatchText , minScore , maxExpected , textStorageReader , dataIndexReader ) ; } catch ( IOException e ) { Basic . caught ( e ) ; error = _BOOL ; return _NULL ; } }
6766	private void runExecutorAndAwaitCompletion ( ) { try { executor . awaitCompletion ( ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } Throwable exception = executor . getException ( ) ; if ( exception != _NULL ) { throw new RuntimeException ( _CHAR There were exceptions during IFDS analysis . Exiting . '' , exception ) ; } }
6878	public String isRestorable ( ) { if ( restoreToken == _NULL ) { return _CHAR account_restoreToken_is_null _CHAR ; } if ( restoreCode == _NULL ) { return _CHAR account_restoreCode_is_null _CHAR ; } if ( restoreExpiry == _NULL ) { return _CHAR account_restoreExpiry_is_null _CHAR ; } return _NULL ; }
6965	public void resetMove ( ) { if ( owner . getAi2 ( ) . isLogging ( ) ) { AI2Logger . moveinfo ( owner , _CHAR MC perform stop _CHAR ) ; } started . set ( _BOOL ) ; targetDestX = _NUM ; targetDestY = _NUM ; targetDestZ = _NUM ; pointX = _NUM ; pointY = _NUM ; pointZ = _NUM ; }
7069	public static final SandboxRay show ( Window owner ) { AddRayDialog ard = new AddRayDialog ( owner ) ; ard . setLocationRelativeTo ( owner ) ; ard . setVisible ( _BOOL ) ; if ( ! ard . canceled ) { synchronized ( AddRayDialog . class ) { N ++ ; } return ard . rayPanel . getRay ( ) ; } return _NULL ; }
7176	private static void deleteRecursiveSilent ( CarbonFile f ) { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursiveSilent ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { return ; } }
7459	public void resetOffset ( ) { mXInStackInfluence = _NUM . _NUM ; mYInStackInfluence = _NUM . _NUM ; mScrollOffset = _NUM . _NUM ; mXInStackOffset = _NUM . _NUM ; mYInStackOffset = _NUM . _NUM ; mXOutOfStack = _NUM . _NUM ; mYOutOfStack = _NUM . _NUM ; mDiscardOriginX = _NUM . f ; mDiscardOriginY = _NUM . f ; mDiscardFromClick = _BOOL ; }
7499	public void onCompletion ( MediaPlayer player ) { Toast . makeText ( this , String . format ( getString ( R . string . media_event_done , mFile . getFileName ( ) ) ) , Toast . LENGTH_LONG ) . show ( ) ; if ( mMediaController != _NULL ) { player . seekTo ( _NUM ) ; processPauseRequest ( ) ; mMediaController . updatePausePlay ( ) ; } else { processStopRequest ( _BOOL ) ; } return ; }
7549	public boolean shouldExecute ( ) { if ( this . villager . getGrowingAge ( ) != _NUM || this . villager . getRNG ( ) . nextInt ( _NUM ) != _NUM ) { return _BOOL ; } if ( ! isWillingToMate ( villager ) ) { return _BOOL ; } else { this . mate = this . getNearbyMate ( ) ; return this . mate != _NULL && this . mate . getGrowingAge ( ) == _NUM ; } }
7589	private void runExecutorAndAwaitCompletion ( ) { try { executor . awaitCompletion ( ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } Throwable exception = executor . getException ( ) ; if ( exception != _NULL ) { throw new RuntimeException ( _CHAR There were exceptions during IDE analysis . Exiting . '' , exception ) ; } }
7698	public static void toggleFullScreen ( Activity activity ) { Window window = activity . getWindow ( ) ; int flagFullscreen = WindowManager . LayoutParams . FLAG_FULLSCREEN ; if ( isFullScreen ) { window . clearFlags ( flagFullscreen ) ; isFullScreen = _BOOL ; } else { window . setFlags ( flagFullscreen , flagFullscreen ) ; isFullScreen = _BOOL ; } }
7928	public boolean hasFeatureValue ( int featureIndex , String featureValue ) { if ( featureIndex < _NUM ) { return _BOOL ; } if ( featureIndex < numByteFeatures ) { return byteFeatureValues [ featureIndex ] . contains ( featureValue ) ; } if ( featureIndex < numByteFeatures + numShortFeatures ) { return shortFeatureValues [ featureIndex - numByteFeatures ] . contains ( featureValue ) ; } return _BOOL ; }
8262	public static double sum ( Iterator tuples , String field ) { try { double sum = _NUM ; while ( tuples . hasNext ( ) ) { sum += ( ( Tuple ) tuples . next ( ) ) . getDouble ( field ) ; } return sum ; } catch ( Exception e ) { return Double . NaN ; } }
8397	private void blockIfNecessaryUntilCleaned ( ) throws SpaceCleanedException , InterruptedException { if ( _isCleaned ) { if ( Thread . holdsLock ( _cleanedLock ) ) return ; synchronized ( _cleanedLock ) { long CLEAN_TIMEOUT = _NUM * _NUM ; while ( _isCleaned ) { _cleanedLock . wait ( CLEAN_TIMEOUT ) ; if ( _isCleaned ) throw new SpaceCleanedException ( getServiceName ( ) , _CHAR Clean operation timed out after _CHAR + CLEAN_TIMEOUT + _CHAR ms . for space : _CHAR + getServiceName ( ) ) ; } } } }
8403	public void reset ( ) { fDeclaration = _NULL ; fTypeDecl = _NULL ; fNil = _BOOL ; fSpecified = _BOOL ; fNotation = _NULL ; fValidationAttempted = ItemPSVI . VALIDATION_NONE ; fValidity = ItemPSVI . VALIDITY_NOTKNOWN ; fErrors = _NULL ; fValidationContext = _NULL ; fValue . reset ( ) ; }
8547	public Matrix3f transposeLocal ( ) { float tmp = m01 ; m01 = m10 ; m10 = tmp ; tmp = m02 ; m02 = m20 ; m20 = tmp ; tmp = m12 ; m12 = m21 ; m21 = tmp ; return this ; }
8553	private static Interpolator createInterpolator ( int type ) { switch ( type ) { case INTERP_ACCELERATE : return new AccelerateInterpolator ( ) ; case INTERP_DECELERATE : return new DecelerateInterpolator ( ) ; case INTERP_ACCELERATE_DECELERATE : return new AccelerateDecelerateInterpolator ( ) ; default : return new LinearInterpolator ( ) ; } }
8634	public void revertSelf ( ) { unlinkReverse ( ) ; if ( angle < FastMath . PI ) { angle += FastMath . PI ; } else { angle -= FastMath . PI ; } cos =- cos ; sin =- sin ; originOffset =- originOffset ; }
8647	private boolean isLegalContainedNode ( Node node ) { if ( node == _NULL ) return _BOOL ; switch ( node . getNodeType ( ) ) { case Node . DOCUMENT_NODE : case Node . DOCUMENT_FRAGMENT_NODE : case Node . ATTRIBUTE_NODE : case Node . ENTITY_NODE : case Node . NOTATION_NODE : return _BOOL ; } return _BOOL ; }
8658	private void centerOnOriginAction ( ) { TreePath path = this . tree . getSelectionPath ( ) ; if ( path != _NULL ) { DefaultMutableTreeNode node = ( DefaultMutableTreeNode ) path . getLastPathComponent ( ) ; if ( node . getUserObject ( ) instanceof SandboxBody ) { SandboxBody body = ( SandboxBody ) node . getUserObject ( ) ; synchronized ( Simulation . LOCK ) { body . translateToOrigin ( ) ; } } } }
8793	public final void updateNumberOfProcessedLines ( ) throws DataFallbackException { openCounterDataOutputStream ( ) ; try { this . getDOutput ( ) . write ( new Integer ( getReadBackLines ( ) ) . toString ( ) ) ; getDOutput ( ) . newLine ( ) ; if ( LOG . isDebugEnabled ( ) ) LOG . debug ( _CHAR removeLines ( ) - The counter file has been updated with the value _CHAR + getReadBackLines ( ) ) ; } catch ( IOException e ) { throw new DataFallbackException ( e . getMessage ( ) ) ; } closeCounterDataOutputStream ( ) ; }
8930	public static boolean isNumber ( String string ) { String s = string . trim ( ) ; if ( s . length ( ) < _NUM ) return _BOOL ; double value = _NUM ; try { value = Double . parseDouble ( s ) ; } catch ( NumberFormatException e ) { return _BOOL ; } return _BOOL ; }
8943	public int increment ( ) { lock . lock ( ) ; if ( value != Integer . MAX_VALUE ) { ++ value ; } else { value = _NUM ; } int newValue = value ; lock . unlock ( ) ; return newValue ; }
9128	private static void deleteRecursive ( File f ) throws CarbonUtilException { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( File c : f . listFiles ( ) ) { deleteRecursive ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { throw new CarbonUtilException ( _CHAR Error while deleting the folders and files '' ) ; } }
9145	public boolean hasSelectedSubTree ( ) { boolean foundASelectedRoot = _BOOL ; if ( treeView . getNumberSelectedNodes ( ) > _NUM ) { for ( Node v : treeView . getSelectedNodes ( ) ) { if ( v . getInDegree ( ) == _NUM || ! treeView . getSelected ( v . getFirstInEdge ( ) . getSource ( ) ) ) { if ( foundASelectedRoot ) return _BOOL ; else foundASelectedRoot = _BOOL ; } } } return foundASelectedRoot ; }
9397	public void clear ( ) { entries . clear ( ) ; if ( filteredEntries != _NULL ) { filteredEntries . clear ( ) ; } if ( entryLookup != _NULL ) { entryLookup . clear ( ) ; } logCount = _NUM ; warningCount = _NUM ; errorCount = _NUM ; }
9487	public void beforeFirst ( ) throws GenericEntityException { try { resultSet . beforeFirst ( ) ; } catch ( SQLException e ) { if ( ! closed ) { this . close ( ) ; Debug . logWarning ( _CHAR Warning : auto - closed EntityListIterator because of exception : _CHAR + e . toString ( ) , module ) ; } throw new GenericEntityException ( _CHAR Error setting the cursor to beforeFirst _CHAR , e ) ; } }
9604	Object decompressObject ( MarshObject objToDecompress ) throws IOException , ClassNotFoundException { CompressedMarshObjectConvertor cv = _NULL ; Object obj = _NULL ; try { cv = _compressedConvertorPool . getResource ( ) ; obj = cv . getObject ( objToDecompress ) ; } finally { if ( cv != _NULL ) _compressedConvertorPool . freeResource ( cv ) ; } return obj ; }
9707	public static TeleportCause toNukkit ( org . bukkit . event . player . PlayerTeleportEvent . TeleportCause cause ) { switch ( cause ) { case COMMAND : return TeleportCause . COMMAND ; case NETHER_PORTAL : return TeleportCause . NETHER_PORTAL ; case PLUGIN : return TeleportCause . PLUGIN ; default : return TeleportCause . UNKNOWN ; } }
10325	@ SubscribeEvent public void onClientTick ( TickEvent . ClientTickEvent ev ) { if ( ev != _NULL && ev . phase == Phase . START ) { for ( InternalKey binding : this . additionalKeys ) { if ( binding . isKeyDown ( ) ) { binding . onKeyDown ( ) ; } if ( binding . isPressed ( ) ) { binding . onPressed ( ) ; } } } }
10388	public void populateIntegerField ( FieldIdEnum fieldId , Integer value ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( value != _NULL ) { ( ( FieldConfigValuePopulateInterface ) fieldConfig ) . populateField ( value ) ; } else { fieldConfig . revertToDefaultValue ( ) ; } }
10408	public boolean first ( ) throws GenericEntityException { try { return resultSet . first ( ) ; } catch ( SQLException e ) { if ( ! closed ) { this . close ( ) ; Debug . logWarning ( _CHAR Warning : auto - closed EntityListIterator because of exception : _CHAR + e . toString ( ) , module ) ; } throw new GenericEntityException ( _CHAR Error setting the cursor to first _CHAR , e ) ; } }
10514	public static void addAllJARsInAssets ( final Context cxt ) { try { if ( debug ) { Log . d ( TAG , _CHAR addAllJARsInAssets on _CHAR + Thread . currentThread ( ) ) ; } String [ ] arrJars = createSubDexList ( cxt ) ; copyJarsFromAssets ( cxt , arrJars ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
10888	public static Properties readPropertyFileFromFileSystem ( final File propertyFileLocation ) throws ConfigurationException { final Properties fileProperties = new Properties ( ) ; try { final InputStream inputStream = new FileInputStream ( propertyFileLocation ) ; fileProperties . load ( inputStream ) ; inputStream . close ( ) ; } catch ( IOException e ) { throw new ConfigurationException ( _CHAR Can not load the properties file _CHAR , e ) ; } return fileProperties ; }
10912	public static void recordExplicitUserNavigation ( String destinationUrl , int rapporMetric ) { switch ( rapporMetric ) { case RAPPOR_ACTION_NAVIGATED_USING_OMNIBOX : RapporServiceBridge . sampleDomainAndRegistryFromURL ( _CHAR NTP . ExplicitUserAction . PageNavigation . OmniboxNonSearch _CHAR , destinationUrl ) ; return ; case RAPPOR_ACTION_VISITED_SUGGESTED_TILE : RapporServiceBridge . sampleDomainAndRegistryFromURL ( _CHAR NTP . ExplicitUserAction . PageNavigation . NTPTileClick _CHAR , destinationUrl ) ; return ; default : return ; } }
11113	public void addImageOutlineSymbolizerToRaster ( Symbolizer symbolizer ) { Symbolizer selectedSymbolizer = this . symbolData . getSymbolizer ( ) ; if ( selectedSymbolizer == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR symbolizer == _NULL _CHAR ) ; } else { if ( selectedSymbolizer instanceof RasterSymbolizer ) { RasterSymbolizer rasterSymbolizer = ( RasterSymbolizer ) selectedSymbolizer ; rasterSymbolizer . setImageOutline ( symbolizer ) ; } } }
11264	protected Object create ( ) throws ResourceUnavailableException { PoolableThread thread = new PoolableThread ( this ) ; thread . setDaemon ( _BOOL ) ; thread . start ( ) ; try { Thread . sleep ( _NUM ) ; } catch ( InterruptedException e ) { logger . log ( Level . WARNING , _CHAR Creating a resource interrupted _CHAR , e ) ; } return ( thread ) ; }
11385	public static void closeWriter ( ) { try { if ( writer != _NULL ) { writer . flush ( ) ; writer . close ( ) ; writer = _NULL ; } } catch ( IOException e ) { e . printStackTrace ( ) ; } }
11588	public short min ( ) { if ( size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR can not find minimum of an empty list _CHAR ) ; } short min = Short . MAX_VALUE ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( _data [ i ] < min ) { min = _data [ i ] ; } } return min ; }
11763	public final TestSubscriber < T > await ( ) { if ( cdl . getCount ( ) == _NUM ) { return this ; } try { cdl . await ( ) ; } catch ( InterruptedException ex ) { throw new AssertionError ( _CHAR Wait interrupted _CHAR , ex ) ; } return this ; }
12168	@ Override protected void loadData ( ) throws IOException , MaryConfigurationException { cart = new DirectedGraphReader ( ) . load ( dataStream ) ; try { predictionFeatureNames = cart . getFeatureDefinition ( ) . getFeatureNames ( ) ; } catch ( NullPointerException e ) { throw new IOException ( _CHAR Could not get FeatureDefinition from CART _CHAR , e ) ; } if ( predictionFeatureNames . length ( ) == _NUM ) { throw new IOException ( _CHAR Could not get prediction feature names _CHAR ) ; } }
12209	private void doMatch ( FileEntry entry , File file ) { if ( entry . refresh ( file ) ) { for ( FileAlterationListener listener : listeners ) { if ( entry . isDirectory ( ) ) { listener . onDirectoryChange ( file ) ; } else { listener . onFileChange ( file ) ; } } } }
12299	public static void deleteDirectory ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } if ( ! isSymlink ( directory ) ) { cleanDirectory ( directory ) ; } if ( ! directory . delete ( ) ) { String message = _CHAR Unable to delete directory _CHAR + directory + _CHAR . _CHAR ; throw new IOException ( message ) ; } }
12327	private void refreshCardinality ( ) { int numDocs ; initializeIndexSearcher ( ) ; lock . readLock ( ) . lock ( ) ; try { numDocs = luceneIndexSearcher . getIndexReader ( ) . numDocs ( ) ; } finally { lock . readLock ( ) . unlock ( ) ; } keyValueStore . put ( DimensionStoreKeyUtils . getCardinalityKey ( ) , Integer . toString ( numDocs ) ) ; }
12435	public void loadMoreComplate ( ) { isLoadingMoreData = _BOOL ; if ( mFooterView != _NULL ) { if ( isManualLoadMoreData ) { mFooterView . getLayoutParams ( ) . height = _NUM ; } else { mFooterView . setVisibility ( GONE ) ; } } getAdapter ( ) . notifyDataSetChanged ( ) ; }
12536	private void displayResult ( ) { String result = Localisation . getString ( ExpressionPanelv2 . class , _CHAR FilterPanelv2 . invalidResult _CHAR ) ; if ( rootNode instanceof FilterNode ) { overallFilter = addFilter ( ( FilterNode ) rootNode ) ; try { result = CQL . toCQL ( overallFilter ) ; } catch ( Exception e ) { } } textArea . setText ( result ) ; }
12696	public void populateBooleanField ( FieldIdEnum fieldId , Boolean value ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( value != _NULL ) { ( ( FieldConfigValuePopulateInterface ) fieldConfig ) . populateField ( value ) ; } else { fieldConfig . revertToDefaultValue ( ) ; } }
12697	@ Override public void run ( ) { while ( ! isInterrupted ( ) ) { try { Reference ref = _queue . remove ( ) ; _entryInfos . remove ( ref ) ; } catch ( InterruptedException e ) { interrupt ( ) ; break ; } } }
12840	private void tryLoadData ( ) { if ( fullBookModel != _NULL ) { onLoadDataSuccess ( fullBookModel ) ; } else if ( isSubscriptionInactive ( loadFullBookSubscription ) ) { getView ( ) . showLoading ( ) ; loadData ( ) ; } else { getView ( ) . showLoading ( ) ; } }
12996	public static boolean isAuthenticated ( ) { SecurityContext securityContext = SecurityContextHolder . getContext ( ) ; Collection < ? extends GrantedAuthority > authorities = securityContext . getAuthentication ( ) . getAuthorities ( ) ; if ( authorities != _NULL ) { for ( GrantedAuthority authority : authorities ) { if ( authority . getAuthority ( ) . equals ( AuthoritiesConstants . ANONYMOUS ) ) { return _BOOL ; } } } return _BOOL ; }
13153	public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set flipH = _CHAR ) ; boolean flip = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; getViewer ( ) . getPcoaTab ( ) . setFlipH ( flip ) ; try { getViewer ( ) . updateDistances ( ) ; } catch ( Exception ex ) { Basic . caught ( ex ) ; } }
13673	public synchronized boolean waitCompleted ( ) { while ( ! completed ) { try { wait ( ) ; } catch ( InterruptedException ie ) { System . err . println ( _CHAR FreeTTSSpeakableImpl : Wait interrupted _CHAR ) ; return _BOOL ; } } return ! cancelled ; }
13961	private DateTimeZone generateTimeZone ( String timeZoneId , DateTimeZone systemTimeZone ) { if ( timeZoneId == _NULL ) { return systemTimeZone ; } try { return DateTimeZone . forID ( timeZoneId ) ; } catch ( IllegalArgumentException ignored ) { LOG . debug ( INVALID_TIME_ZONE . logFormat ( timeZoneId ) ) ; throw new BadApiRequestException ( INVALID_TIME_ZONE . format ( timeZoneId ) ) ; } }
14002	private static boolean parse ( ) { URLClassLoader cLoader = ( URLClassLoader ) ManifestParser . class . getClassLoader ( ) ; try { URL url = cLoader . findResource ( _CHAR META - INF / MANIFEST . MF _CHAR ) ; manifest = new Manifest ( url . openStream ( ) ) ; return _BOOL ; } catch ( IOException ex ) { ex . printStackTrace ( ) ; return _BOOL ; } }
14043	protected void init ( ModelEntity modelEntity ) { assertIsMutable ( ) ; if ( modelEntity == _NULL ) { throw new IllegalArgumentException ( _CHAR Can not create a GenericEntity with a _NULL modelEntity parameter _CHAR ) ; } this . modelEntity = modelEntity ; this . entityName = modelEntity . getEntityName ( ) ; this . observable = new Observable ( ) ; if ( this . entityName == _NULL ) { throw new IllegalArgumentException ( _CHAR Can not create a GenericEntity with a _NULL entityName in the modelEntity parameter _CHAR ) ; } }
14053	public static boolean showEnhancedBookmarkIfEnabled ( Activity activity ) { if ( ! isEnhancedBookmarkEnabled ( ) ) { return _BOOL ; } if ( DeviceFormFactor . isTablet ( activity ) ) { openBookmark ( activity , UrlConstants . BOOKMARKS_URL ) ; } else { activity . startActivity ( new Intent ( activity , EnhancedBookmarkActivity . class ) ) ; } return _BOOL ; }
14213	private static String capitalize ( String s ) { if ( s == _NULL || s . length ( ) == _NUM ) { return _CHAR _CHAR ; } char first = s . charAt ( _NUM ) ; if ( Character . isUpperCase ( first ) ) { return s ; } else { return Character . toUpperCase ( first ) + s . substring ( _NUM ) ; } }
14361	private void sendResponse ( int response ) { try { synchronized ( serialPort . getOutputStream ( ) ) { serialPort . getOutputStream ( ) . write ( response ) ; serialPort . getOutputStream ( ) . flush ( ) ; logger . trace ( _CHAR Response SENT _CHAR ) ; } } catch ( IOException e ) { logger . error ( e . getMessage ( ) ) ; } }
14695	private static void deleteRecursiveSilent ( CarbonFile f ) { if ( f . isDirectory ( ) ) { if ( f . listFiles ( ) != _NULL ) { for ( CarbonFile c : f . listFiles ( ) ) { deleteRecursiveSilent ( c ) ; } } } if ( f . exists ( ) && ! f . delete ( ) ) { return ; } }
14908	public boolean removeHeaderView ( View v ) { if ( mHeaderViewInfos . size ( ) > _NUM ) { boolean result = _BOOL ; if ( ( ( PLA_HeaderViewListAdapter ) mAdapter ) . removeHeader ( v ) ) { mDataSetObserver . onChanged ( ) ; result = _BOOL ; } removeFixedViewInfo ( v , mHeaderViewInfos ) ; return result ; } return _BOOL ; }
14931	public boolean onUpdateAnimation ( long time , boolean jumpToEnd ) { if ( mContentAnimations == _NULL ) return _BOOL ; boolean finished = _BOOL ; if ( jumpToEnd ) { finished = mContentAnimations . finished ( ) ; } else { finished = mContentAnimations . update ( time ) ; } if ( jumpToEnd || finished ) finishAnimation ( ) ; return finished ; }
15205	void unpin ( Buffer ... buffs ) { for ( Buffer buff : buffs ) { try { buff . getExternalLock ( ) . lock ( ) ; buff . unpin ( ) ; if ( ! buff . isPinned ( ) ) numAvailable . incrementAndGet ( ) ; } finally { buff . getExternalLock ( ) . unlock ( ) ; } } }
15207	protected Object resolve ( ) { GigaSpace gs = findGigaSpaceByName ( this . name ) ; if ( GigaSpace . class . isAssignableFrom ( getMemberType ( ) ) ) { if ( ! getMemberType ( ) . isInstance ( gs ) ) { throw new IllegalArgumentException ( _CHAR Can not inject _CHAR + this . member + _CHAR with GigaSpaces [ _CHAR + this . name + _CHAR ] : type mismatch _CHAR ) ; } return gs ; } else { throw new IllegalArgumentException ( _CHAR Failure to inject _CHAR ) ; } }
16033	public void populateDoubleField ( FieldIdEnum fieldId , Double value ) { if ( fieldConfigManager == _NULL ) { return ; } FieldConfigBase fieldConfig = fieldConfigManager . get ( fieldId ) ; if ( value != _NULL ) { ( ( FieldConfigValuePopulateInterface ) fieldConfig ) . populateField ( value ) ; } else { fieldConfig . revertToDefaultValue ( ) ; } }
16097	protected Object resolve ( ) { GigaSpace gs = findGigaSpaceByName ( this . name ) ; if ( GigaSpace . class . isAssignableFrom ( getMemberType ( ) ) ) { if ( ! getMemberType ( ) . isInstance ( gs ) ) { throw new IllegalArgumentException ( _CHAR Can not inject _CHAR + this . member + _CHAR with GigaSpaces [ _CHAR + this . name + _CHAR ] : type mismatch _CHAR ) ; } return gs ; } else { throw new IllegalArgumentException ( _CHAR Failure to inject _CHAR ) ; } }
16166	@ Override public void onDraw ( Canvas c , RecyclerView parent ) { switch ( orientation ) { case VERTICAL_LIST : drawVertical ( c , parent ) ; break ; case HORIZONTAL_LIST : drawHorizontal ( c , parent ) ; break ; default : break ; } }
16188	public void applyConstraints ( ScoutWidget [ ] list ) { pickColumnWidgets ( list ) ; pickCenterOverlap ( list ) ; pickBaseLineConnections ( list ) ; pickCenteredConnections ( list , _BOOL ) ; pickMarginConnections ( list , _NUM ) ; pickCenteredConnections ( list , _BOOL ) ; pickMarginConnections ( list , _NUM ) ; if ( DEBUG ) { printBaseTable ( list ) ; } }
16193	public static String keyForImage ( String imagePath ) { String key = _NULL ; try { MessageDigest messageDigest = MessageDigest . getInstance ( _CHAR md5 _CHAR ) ; messageDigest . update ( imagePath . getBytes ( ) ) ; key = byteToHex ( messageDigest . digest ( ) ) ; } catch ( NoSuchAlgorithmException e ) { e . printStackTrace ( ) ; } return key ; }
16276	public JSONWriter object ( ) throws JSONException { if ( this . mode == _CHAR ) { this . mode = _CHAR ; } if ( this . mode == _CHAR || this . mode == _CHAR ) { this . append ( _CHAR { _CHAR ) ; this . push ( new JSONObject ( ) ) ; this . comma = _BOOL ; return this ; } throw new JSONException ( _CHAR Misplaced object . '' ) ; }
16312	private static boolean isVerticallyConstrained ( ConstraintWidget widget ) { if ( widget . getAnchor ( ConstraintAnchor . Type . BOTTOM ) . isConnected ( ) ) { return _BOOL ; } if ( widget . getAnchor ( ConstraintAnchor . Type . TOP ) . isConnected ( ) ) { return _BOOL ; } if ( widget . getAnchor ( ConstraintAnchor . Type . BASELINE ) . isConnected ( ) ) { return _BOOL ; } return _BOOL ; }
16327	public void waitToFinish ( ) { flush ( ) ; if ( future != _NULL ) { try { future . get ( ) ; } catch ( InterruptedException | ExecutionException e ) { LOG . error ( e . getMessage ( ) ) ; } } LOG . info ( _CHAR All tasks done ! _CHAR ) ; }
16353	public final void close ( GsServerPacket closePacket , boolean forced ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } pendingClose = _BOOL ; isForcedClosing = forced ; sendMsgQueue . clear ( ) ; sendMsgQueue . addLast ( closePacket ) ; enableWriteInterest ( ) ; } }
16986	private boolean canUploadEmblem ( Player activePlayer ) { if ( ! isBrigadeGeneral ( activePlayer ) ) { return _BOOL ; } else if ( activePlayer . getLegion ( ) . getLegionLevel ( ) < _NUM ) { return _BOOL ; } else if ( ! activePlayer . getLegion ( ) . getLegionEmblem ( ) . isUploading ( ) ) { return _BOOL ; } return _BOOL ; }
17388	public static long floorMod ( final long a , final long b ) { if ( b == _NUM ) { throw new MathRuntimeException ( LocalizedCoreFormats . ZERO_DENOMINATOR ) ; } final long m = a % b ; if ( ( a ^ b ) >= _NUM || m == _NUM ) { return m ; } else { return b + m ; } }
17409	private void openChooseRootDialog ( ) { ChooseRootUrlDialog dialog = new ChooseRootUrlDialog ( getShell ( ) , location . getUrl ( ) ) ; if ( dialog . open ( ) == Window . OK ) { SVNUrl url = dialog . getRootUrl ( ) ; if ( url == _NULL ) { repositoryRootText . setText ( _CHAR _CHAR ) ; } else { repositoryRootText . setText ( dialog . getRootUrl ( ) . toString ( ) ) ; } } }
17633	protected boolean isValidScheme ( String scheme ) { if ( scheme == _NULL ) { return _BOOL ; } if ( ! SCHEME_PATTERN . matcher ( scheme ) . matches ( ) ) { return _BOOL ; } if ( isOff ( ALLOW_ALL_SCHEMES ) && ! allowedSchemes . contains ( scheme . toLowerCase ( Locale . ENGLISH ) ) ) { return _BOOL ; } return _BOOL ; }
17818	public boolean isDisplayedExpectingComponents ( ) { boolean result = _BOOL ; if ( conditions . isConditionMet ( visibilityOf ( window ) ) ) { if ( components . isEmpty ( ) ) { closeButton . click ( ) ; } else { result = _BOOL ; } } return result ; }
17918	protected void buttonPressed ( int buttonId ) { if ( buttonId == REPLACE_ID ) { try { input . replaceLocalWithCurrentlySelectedRevision ( ) ; } catch ( CoreException e ) { handle ( e ) ; } buttonId = IDialogConstants . OK_ID ; } super . buttonPressed ( buttonId ) ; }
17935	public final void close ( AionServerPacket closePacket , boolean forced ) { synchronized ( guard ) { if ( isWriteDisabled ( ) ) { return ; } pendingClose = _BOOL ; isForcedClosing = forced ; sendMsgQueue . clear ( ) ; sendMsgQueue . addLast ( closePacket ) ; enableWriteInterest ( ) ; } }
18045	public Future < Long > markEndOfStream ( ) { synchronized ( this ) { try { writeEndOfStreamMarker ( ) ; } catch ( IOException e ) { return Future . exception ( e ) ; } streamEnded = _BOOL ; } return flushAndCommit ( ) ; }
18221	public Side whichSide ( Vector3f point ) { float dis = pseudoDistance ( point ) ; if ( dis < _NUM ) { return Side . Negative ; } else if ( dis > _NUM ) { return Side . Positive ; } else { return Side . None ; } }
18328	public boolean isCurrentFileBestMatchFor ( @ NotNull FolderConfiguration config ) { if ( myResources != _NULL && myFile != _NULL ) { VirtualFile match = myResources . getMatchingFile ( myFile , getResourceType ( ) , config ) ; if ( match != _NULL ) { return myFile . equals ( match ) ; } else { LOG . info ( _CHAR Current file is not a match for the given config . '' ) ; } } return _BOOL ; }
18389	public void clear ( ) { uid = _NUM ; readHeader = _NULL ; readSequence = _NULL ; readWeight = _NUM ; mateReadUId = _NUM ; mateType = _NUM ; readLength = _NUM ; complexity = _NUM ; numberOfMatches = _NUM ; matchBlocks = new MatchBlockRMA2 [ _NUM ] ; }
18454	protected void newline ( ) { if ( mode == LexerMode . SyntaxHighlighting ) { addToken ( TokenKind . NEWLINE , pos - _NUM , pos ) ; return ; } if ( openParenStackDepth > _NUM ) { newlineInsideExpression ( ) ; } else { newlineOutsideExpression ( ) ; } }
18507	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { if ( isRawType ( ) ) return _BOOL ; for ( int i = _NUM ; i < getNumArgument ( ) ; ++ i ) { if ( ! getArgument ( i ) . type ( ) . isWildcard ( ) ) return _BOOL ; } return _BOOL ; } finally { } }
18906	public static void closeQuietly ( Closeable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
19022	public boolean addTo ( Rectangle bounds ) { if ( isEmpty ( ) ) { return _BOOL ; } bounds . x += left ; bounds . width -= left ; bounds . y += top ; bounds . height -= top ; bounds . width -= right ; bounds . height -= bottom ; return _BOOL ; }
19071	@ Override public int read ( ) throws IOException { try { beforeRead ( _NUM ) ; int b = in . read ( ) ; afterRead ( b != - _NUM ? _NUM : - _NUM ) ; return b ; } catch ( IOException e ) { handleIOException ( e ) ; return - _NUM ; } }
19222	public synchronized boolean end ( ) { if ( line != _NULL ) { drain ( ) ; synchronized ( lineLock ) { line . close ( ) ; line = _NULL ; } notify ( ) ; debugPrint ( _CHAR ended stream ... _CHAR ) ; } return _BOOL ; }
19314	public boolean removeFooterView ( View v ) { if ( mFooterViewInfos . size ( ) > _NUM ) { boolean result = _BOOL ; if ( ( ( PLA_HeaderViewListAdapter ) mAdapter ) . removeFooter ( v ) ) { mDataSetObserver . onChanged ( ) ; result = _BOOL ; } removeFixedViewInfo ( v , mFooterViewInfos ) ; return result ; } return _BOOL ; }
19320	public boolean remove ( JobStatus jobStatus ) { boolean removed = mJobSet . remove ( jobStatus ) ; if ( ! removed ) { if ( DEBUG ) { } return _BOOL ; } if ( jobStatus . isPersisted ( ) ) { maybeWriteStatusToDiskAsync ( ) ; } return removed ; }
19420	@ Nullable public static String readTextFromDisk ( @ NotNull File file , boolean warnIfNotExists ) { assert file . isAbsolute ( ) ; try { return Files . toString ( file , Charsets . UTF_8 ) ; } catch ( IOException e ) { if ( warnIfNotExists ) { LOG . warn ( e ) ; } return _NULL ; } }
19555	public void initializeGeo ( ) { switch ( getConfiguredGeoType ( ) ) { case GEO_MESHES : geoData = new RealGeoData ( ) ; break ; case NO_GEO : geoData = new DummyGeoData ( ) ; break ; } log . info ( _CHAR Configured Geo type : _CHAR + getConfiguredGeoType ( ) ) ; geoData . loadGeoMaps ( ) ; }
19643	public short max ( ) { if ( size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR can not find maximum of an empty list _CHAR ) ; } short max = Short . MIN_VALUE ; for ( int i = _NUM ; i < _pos ; i ++ ) { if ( _data [ i ] > max ) { max = _data [ i ] ; } } return max ; }
19757	private synchronized void writeToOutputStream ( int oneByte ) { if ( mClosed ) { return ; } try { mOutputStream . write ( oneByte ) ; reportDecodedSizeIfApplicable ( ) ; } catch ( IOException e ) { handleIOExceptionWritingToStream ( e ) ; } }
19787	public static String clearEnsureCart ( HttpServletRequest request , HttpServletResponse response ) { String result ; result = clearCart ( request , response ) ; if ( ! _CHAR success _CHAR . equals ( result ) ) { return _CHAR error _CHAR ; } ShoppingCart cart = getCartObject ( request ) ; if ( cart == _NULL ) { return _CHAR error _CHAR ; } return _CHAR success _CHAR ; }
19993	public void close ( ) { LOGGER . debug ( _CHAR synchro close _CHAR ) ; setClosed ( _BOOL ) ; while ( ! isEmpty ( ) || isFiring ( ) && ! checkingThread . isDaemon ( ) ) { try { Thread . sleep ( minWindowSize ) ; } catch ( Exception e ) { LOGGER . debug ( _CHAR Exception _CHAR ) ; } } }
20108	public void closeServer ( ServerInfo server ) { if ( server . sock == _NULL || this . keep_alive ) { return ; } try { server . sock . close ( ) ; server . sock = _NULL ; } catch ( IOException ex ) { System . err . println ( _CHAR close socket error : _CHAR + ex . getMessage ( ) ) ; } }
20188	public void deactivate ( ) { if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionClasses ( ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
20512	public static String md5File ( String fullFilename ) { String result = _NULL ; if ( fullFilename != _NULL ) { try { result = md5File ( new FileInputStream ( fullFilename ) ) ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } } return result ; }
20548	private static boolean possiblyValidListLiteral ( PsiElement element ) { if ( element instanceof ListLiteral || element instanceof GlobExpression ) { return _BOOL ; } if ( element instanceof LiteralExpression ) { return _BOOL ; } if ( element instanceof LoadStatement || element instanceof FunctionStatement ) { return _BOOL ; } return _BOOL ; }
20648	public void insertBEntry ( BEntry ent ) { if ( ! hasSpace ( ) ) { throw new BPlusTreeException ( _CHAR Node should have split before ; Currently is full _CHAR ) ; } List < BEntry > entries = getAllValidEntries ( ) ; entries . add ( ent ) ; Collections . sort ( entries ) ; overwriteBNodeEntries ( entries ) ; if ( ! hasSpace ( ) ) { splitNode ( ) ; } }
20808	public Properties readSettings ( ) throws ProxyException { Properties settings = new Properties ( ) ; try { parseSettings ( _CHAR / system / proxy / _CHAR , settings ) ; parseSettings ( _CHAR / system / http_proxy / _CHAR , settings ) ; } catch ( IOException e ) { Logger . log ( getClass ( ) , LogLevel . ERROR , _CHAR Gnome settings file error . '' , e ) ; throw new ProxyException ( e ) ; } return settings ; }
21182	public String toString ( ) { switch ( type ) { case APPEND : return _CHAR A _CHAR + parentId + _CHAR _CHAR + taxId + _CHAR _CHAR_CHAR_CHAR _CHAR ; case DELETE : return _CHAR D _CHAR + taxId ; case RENAME : return _CHAR R _CHAR + taxId + _CHAR _CHAR_CHAR_CHAR _CHAR ; default : return _CHAR NONE _CHAR ; } }
21266	public static _Fields findByThriftId ( int fieldId ) { switch ( fieldId ) { case _NUM : return SEQUENCE_ID ; case _NUM : return STATUS ; case _NUM : return MESSAGE ; default : return _NULL ; } }
21537	public Clock logTime ( String message ) { super . split ( ) ; String time = DurationFormatUtils . formatDurationHMS ( super . getSplitTime ( ) ) ; String msg = message + SEPARATOR + time ; if ( log != _NULL ) { log . info ( msg ) ; } else { defaultLog . info ( msg ) ; } return this ; }
21599	public static boolean isRedirect ( HttpResponse httpResponse ) { switch ( httpResponse . getStatus ( ) . code ( ) ) { case _NUM : case _NUM : case _NUM : case _NUM : case _NUM : return _BOOL ; default : return _BOOL ; } }
21888	public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set flipV = _CHAR ) ; boolean flip = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; getViewer ( ) . getPcoaTab ( ) . setFlipV ( flip ) ; try { getViewer ( ) . updateDistances ( ) ; } catch ( Exception ex ) { Basic . caught ( ex ) ; } }
21905	public void outputNextPrompt ( ) { if ( currentPrompt == _NULL ) { abandon ( new ConversationAbandonedEvent ( this ) ) ; } else { context . getForWhom ( ) . sendRawMessage ( prefix . getPrefix ( context ) + currentPrompt . getPromptText ( context ) ) ; if ( ! currentPrompt . blocksForInput ( context ) ) { currentPrompt = currentPrompt . acceptInput ( context , _NULL ) ; outputNextPrompt ( ) ; } } }
22754	@ Override public int read ( ) throws IOException { try { beforeRead ( _NUM ) ; int c = in . read ( ) ; afterRead ( c != - _NUM ? _NUM : - _NUM ) ; return c ; } catch ( IOException e ) { handleIOException ( e ) ; return - _NUM ; } }
22809	@ Override public void finish ( ) { if ( mAccountAuthenticatorResponse != _NULL ) { if ( mResultBundle != _NULL ) { mAccountAuthenticatorResponse . onResult ( mResultBundle ) ; } else { mAccountAuthenticatorResponse . onError ( AccountManager . ERROR_CODE_CANCELED , _CHAR canceled _CHAR ) ; } mAccountAuthenticatorResponse = _NULL ; } super . finish ( ) ; }
22917	public boolean last ( ) throws GenericEntityException { try { return resultSet . last ( ) ; } catch ( SQLException e ) { if ( ! closed ) { this . close ( ) ; Debug . logWarning ( _CHAR Warning : auto - closed EntityListIterator because of exception : _CHAR + e . toString ( ) , module ) ; } throw new GenericEntityException ( _CHAR Error setting the cursor to last _CHAR , e ) ; } }
22960	public static boolean isVersionNewerThan ( String oneVersion , String otherVersion ) { if ( oneVersion == _NULL || otherVersion == _NULL ) { return _BOOL ; } if ( otherVersion . equals ( oneVersion + _CHAR - SNAPSHOT _CHAR ) ) { return _BOOL ; } if ( oneVersion . equals ( otherVersion + _CHAR - SNAPSHOT _CHAR ) ) { return _BOOL ; } return oneVersion . compareTo ( otherVersion ) > _NUM ; }
23172	@ Nonnull public static File findOrCreateCacheFile ( ) { final File file = new File ( CACHE_DIR , PREFIX + SUFFIX ) ; if ( ! file . exists ( ) ) { try { file . createNewFile ( ) ; } catch ( final IOException e ) { throw new IllegalStateOfArgumentException ( _CHAR Can not create a cache file . '' , e ) ; } } return file ; }
23230	public void deactivate ( ) { if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionAttributes ( ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
23661	@ Override public void processingInstruction ( String target , String data ) throws SAXException { writeText4Links ( ) ; write ( _CHAR < ? _CHAR ) ; write ( target ) ; write ( _CHAR ) ; write ( data ) ; write ( _CHAR ? > _CHAR ) ; if ( elementLevel < _NUM ) { write ( _CHAR ) ; } super . processingInstruction ( target , data ) ; }
23675	protected void scheduleNewInvokerIfAppropriate ( ) { if ( isRunning ( ) ) { synchronized ( this . activeInvokerMonitor ) { if ( this . scheduledInvokers . size ( ) < this . maxConcurrentConsumers && ! hasIdleInvokers ( ) ) { scheduleNewInvoker ( ) ; if ( logger . isDebugEnabled ( ) ) { logger . debug ( message ( _CHAR Raised scheduled invoker count [ _CHAR + scheduledInvokers . size ( ) + _CHAR ] _CHAR ) ) ; } } } } }
23911	public static void deleteDirectory ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } if ( ! isSymlink ( directory ) ) { cleanDirectory ( directory ) ; } if ( ! directory . delete ( ) ) { String message = _CHAR Unable to delete directory _CHAR + directory + _CHAR . _CHAR ; throw new IOException ( message ) ; } }
24123	public static String toPEMformat ( X509Certificate certificate ) { StringWriter sw = new StringWriter ( ) ; PEMWriter pemWriter = new PEMWriter ( sw ) ; try { pemWriter . writeObject ( certificate ) ; pemWriter . close ( ) ; return sw . toString ( ) ; } catch ( IOException x ) { throw new RuntimeException ( _CHAR Failed to serialize certificate _CHAR , x ) ; } }
24241	public static boolean isValid ( String expression , Map < String , Object > vars ) { try { Object result = evaluate ( expression , vars , _BOOL ) ; return result != _NULL ; } catch ( JexlException ex ) { if ( ex . getMessage ( ) . contains ( _CHAR divide error _CHAR ) ) { return _BOOL ; } return _BOOL ; } }
24305	@ Override public int available ( ) { long avail = size - position ; if ( avail <= _NUM ) { return _NUM ; } else if ( avail > Integer . MAX_VALUE ) { return Integer . MAX_VALUE ; } else { return ( int ) avail ; } }
24352	@ Override public int read ( ) throws IOException { if ( this . remaining == _NUM ) { return - _NUM ; } else { int var1 = this . in . read ( ) ; if ( var1 >= _NUM ) { -- this . remaining ; } return var1 ; } }
24780	public boolean controllerHasRequestUriDirect ( String uri ) { try { ConfigXMLReader . RequestMap requestMap = getControllerConfig ( ) . getRequestMapMap ( ) . get ( uri ) ; if ( requestMap != _NULL && requestMap . securityDirectRequest ) { return _BOOL ; } } catch ( Exception e ) { ; } return _BOOL ; }
25027	public String writeDataFile ( ) throws DataFileException { ByteArrayOutputStream bos = new ByteArrayOutputStream ( ) ; writeDataFile ( bos ) ; String outString = bos . toString ( ) ; try { if ( bos != _NULL ) bos . close ( ) ; } catch ( IOException e ) { Debug . logWarning ( e , module ) ; } return outString ; }
25033	public Matrix3f multLocal ( float scale ) { m00 *= scale ; m01 *= scale ; m02 *= scale ; m10 *= scale ; m11 *= scale ; m12 *= scale ; m20 *= scale ; m21 *= scale ; m22 *= scale ; return this ; }
25235	protected void bindTextToView ( CharSequence text , TextView view ) { if ( view == _NULL ) { return ; } if ( text != _NULL ) { view . setText ( text ) ; view . setVisibility ( View . VISIBLE ) ; } else { view . setVisibility ( View . GONE ) ; } }
25348	@ Override public String encodeSLD ( URL resourceLocator , StyledLayerDescriptor sld ) { StringWriter out = new StringWriter ( ) ; if ( sld != _NULL ) { try { Ysld . encode ( sld , out ) ; } catch ( IOException e ) { ConsoleManager . getInstance ( ) . exception ( this , e ) ; } } return out . toString ( ) ; }
25375	private boolean warmUpTextLayoutCache ( Layout layout ) { boolean result ; try { layout . draw ( DUMMY_CANVAS ) ; result = _BOOL ; } catch ( Exception e ) { WXLogUtils . eTag ( TAG , e ) ; result = _BOOL ; } return result ; }
25625	public void close ( ) { if ( this . zip != _NULL ) { try { this . zip . close ( ) ; } catch ( IOException e ) { System . err . println ( _CHAR Could not close apk file : _CHAR + e . getMessage ( ) ) ; e . printStackTrace ( ) ; } this . zip = _NULL ; } }
25698	public boolean start ( String file ) { boolean ok = _BOOL ; try { out = new BufferedOutputStream ( new FileOutputStream ( file ) ) ; ok = start ( out ) ; closeStream = _BOOL ; } catch ( IOException e ) { ok = _BOOL ; } return started = ok ; }
25722	public static boolean isFileExists ( String fileName ) { try { FileFactory . FileType fileType = FileFactory . getFileType ( fileName ) ; if ( FileFactory . isFileExist ( fileName , fileType ) ) { return _BOOL ; } } catch ( IOException e ) { LOGGER . error ( _CHAR @ @ @ @ @ @ File not found at a given location @ @ @ @ @ @ : _CHAR + fileName ) ; } return _BOOL ; }
25919	public double totalCount ( ) { if ( ! dirty ) { return cacheTotal ; } double total = _NUM . _NUM ; for ( Entry < E , Double > entry : entries . entrySet ( ) ) { total += entry . getValue ( ) ; } cacheTotal = total ; dirty = _BOOL ; return total ; }
25948	public void finish ( ) { if ( mAccountAuthenticatorResponse != _NULL ) { if ( mResultBundle != _NULL ) { mAccountAuthenticatorResponse . onResult ( mResultBundle ) ; } else { mAccountAuthenticatorResponse . onError ( AccountManager . ERROR_CODE_CANCELED , _CHAR canceled _CHAR ) ; } mAccountAuthenticatorResponse = _NULL ; } super . finish ( ) ; }
26079	private static Principal [ ] checkPrincipals ( Principal [ ] principals ) { if ( principals == _NULL ) { return _NULL ; } principals = principals . clone ( ) ; for ( int i = principals . length ; -- i >= _NUM ; ) { if ( principals [ i ] == _NULL ) { throw new NullPointerException ( _CHAR principal can not be _NULL _CHAR ) ; } } return principals ; }
26121	public int readPacked ( int kind ) { switch ( kind ) { case _NUM : return read ( ) ; case _NUM : return readCharLittleEndian ( ) ; case _NUM : return readIntLittleEndian ( ) ; default : throw new RuntimeException ( _CHAR unknown kind _CHAR ) ; } }
26137	@ PostConstruct public void initProcess ( ) { this . startUp = System . currentTimeMillis ( ) ; try { log . trace ( _CHAR initProcess - Process Connection called . '' ) ; this . loadProcessConnection ( ) ; log . trace ( _CHAR initProcess - Process Configuration called . '' ) ; this . loadProcessConfiguration ( ) ; } catch ( Exception ex ) { throw new RuntimeException ( _CHAR Exception caught during DAQ startup _CHAR , ex ) ; } }
26274	private void tryLoadData ( ) { if ( books . size ( ) != _NUM ) { onLoadBooksSuccess ( books ) ; } else if ( isSubscriptionInactive ( loadBookSubscription ) ) { getView ( ) . showLoading ( ) ; loadData ( ) ; } else { getView ( ) . showLoading ( ) ; } }
26362	public void afterLast ( ) throws GenericEntityException { try { resultSet . afterLast ( ) ; } catch ( SQLException e ) { if ( ! closed ) { this . close ( ) ; Debug . logWarning ( _CHAR Warning : auto - closed EntityListIterator because of exception : _CHAR + e . toString ( ) , module ) ; } throw new GenericEntityException ( _CHAR Error setting the cursor to afterLast _CHAR , e ) ; } }
26455	public void addEvent ( String e ) { if ( TextUtils . isEmpty ( e ) ) { return ; } if ( event == _NULL ) { event = new WXEvent ( ) ; } if ( containsEvent ( e ) ) { return ; } event . add ( e ) ; }
26484	public boolean isAllowed ( VersionData versionData ) { if ( versionData == _NULL ) { return _BOOL ; } if ( versionData . getVendorOptionType ( ) == NoVendorOption . class ) { return _BOOL ; } if ( versionData . getVendorOptionType ( ) != this . classType ) { return _BOOL ; } return versionData . inRange ( this . minimumVersion , this . maximumVersion ) ; }
26491	protected void createMediaPlayerIfNeeded ( ) { if ( mPlayer == _NULL ) { mPlayer = new MediaPlayer ( ) ; mPlayer . setWakeMode ( getApplicationContext ( ) , PowerManager . PARTIAL_WAKE_LOCK ) ; mPlayer . setOnPreparedListener ( this ) ; mPlayer . setOnCompletionListener ( this ) ; mPlayer . setOnErrorListener ( this ) ; } else { mPlayer . reset ( ) ; } }
26508	@ Override public boolean next ( ) { if ( isLhsEmpty ) return _BOOL ; if ( idx . next ( ) ) { ts . moveToRecordId ( idx . getDataRecordId ( ) ) ; return _BOOL ; } else if ( ! ( isLhsEmpty = ! s . next ( ) ) ) { resetIndex ( ) ; return next ( ) ; } else return _BOOL ; }
26768	public void releaseWriteLockOnKey ( K id ) { if ( id != _NULL ) { cache . releaseWriteLockOnKey ( id ) ; if ( LOGGER . isTraceEnabled ( ) ) { LOGGER . trace ( cache . getName ( ) + _CHAR Released WRITE lock for id = '' + String . valueOf ( id ) ) ; } } else { LOGGER . error ( _CHAR Trying to release write lock with a NULL key - throwing an exception ! _CHAR ) ; throw new IllegalArgumentException ( _CHAR Trying to release write lock with _NULL key ! _CHAR ) ; } }
26903	public static void save ( ) { if ( conf != _NULL ) { String file = home + File . separator + confName + _CHAR . properties _CHAR ; conf . setProperty ( _CHAR home _CHAR , _NULL ) ; try { conf . save ( file ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } } }
27399	public void doStart ( ) { try { if ( gigaSpace == _NULL ) { initSpace ( ) ; } super . doStart ( ) ; } catch ( Exception e ) { Log . getLog ( ) . warn ( _CHAR Problem initialising session ids _CHAR , e ) ; throw new IllegalStateException ( e ) ; } }
27450	public int compare ( File file1 , File file2 ) { long result = file1 . lastModified ( ) - file2 . lastModified ( ) ; if ( result < _NUM ) { return - _NUM ; } else if ( result > _NUM ) { return _NUM ; } else { return _NUM ; } }
27463	private void updateHalfDayTogglesState ( int halfDay ) { switch ( halfDay ) { case HALF_DAY_1 : mFirstHalfDayToggle . setTextColor ( mHalfDayToggleSelectedColor ) ; mSecondHalfDayToggle . setTextColor ( mHalfDayToggleUnselectedColor ) ; break ; case HALF_DAY_2 : mSecondHalfDayToggle . setTextColor ( mHalfDayToggleSelectedColor ) ; mFirstHalfDayToggle . setTextColor ( mHalfDayToggleUnselectedColor ) ; break ; } }
27718	private static boolean possiblyValidStringLiteral ( PsiElement element ) { if ( element instanceof StringLiteral ) { return _BOOL ; } if ( element instanceof LiteralExpression ) { return _BOOL ; } if ( element instanceof LoadStatement || element instanceof FunctionStatement || element instanceof GlobExpression ) { return _BOOL ; } return _BOOL ; }
28006	public JsonObject remove ( String name ) { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name is _NULL _CHAR ) ; } int index = indexOf ( name ) ; if ( index != - _NUM ) { table . remove ( index ) ; names . remove ( index ) ; values . remove ( index ) ; } return this ; }
28182	public static float interpolateLinear ( float scale , float startValue , float endValue ) { if ( startValue == endValue ) { return startValue ; } if ( scale <= _NUM ) { return startValue ; } if ( scale >= _NUM ) { return endValue ; } return ( ( _NUM - scale ) * startValue ) + ( scale * endValue ) ; }
28218	@ Override public void run ( ) { while ( ! isInterrupted ( ) ) { try { ValueHolder < K , V > ref = ( ValueHolder < K , V > ) _queue . remove ( ) ; _table . remove ( ref . getKey ( ) ) ; } catch ( InterruptedException e ) { interrupt ( ) ; break ; } } }
28455	public boolean hasNext ( ) { if ( this . samIterator == _NULL ) { iterator ( ) ; } while ( complete . isEmpty ( ) && ( ( ! accumulator . isEmpty ( ) ) || samHasMore ( ) || hasRemainingMaskBases ( ) ) ) { final LocusInfo locusInfo = next ( ) ; if ( locusInfo != _NULL ) { complete . add ( _NUM , locusInfo ) ; } } return ! complete . isEmpty ( ) ; }
28693	public boolean isEmpty ( ) { if ( mySnippets . length == _NUM ) { return _BOOL ; } for ( KindredSnippets snip : mySnippets ) { Pathway path = snip . getPath ( ) ; if ( myPath . isPrefix ( path ) ) { return _BOOL ; } } return _BOOL ; }
28789	@ Override public boolean bulkAdd ( IndexRequest request ) { if ( bulkProcessor == _NULL ) { log . error ( _CHAR bulkProcessor is _NULL . This should not happen ! _CHAR ) ; return _BOOL ; } if ( request == _NULL ) { return _BOOL ; } bulkProcessor . add ( request ) ; log . trace ( _CHAR bulkAdd ( ) - BulkProcessor will handle indexing of new index . '' ) ; return _BOOL ; }
28857	public void stopServer ( ) { keepRunning = _BOOL ; if ( this . serverSocket != _NULL ) { try { this . serverSocket . close ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } this . serverSocket = _NULL ; } }
29459	public String encodeSLD ( StyledLayerDescriptor sld ) { StringWriter out = new StringWriter ( ) ; if ( sld != _NULL ) { try { Ysld . encode ( sld , out ) ; } catch ( IOException e ) { ConsoleManager . getInstance ( ) . exception ( this , e ) ; } } return out . toString ( ) ; }
29591	public static void deleteDirectory ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } if ( ! isSymlink ( directory ) ) { cleanDirectory ( directory ) ; } if ( ! directory . delete ( ) ) { String message = _CHAR Unable to delete directory _CHAR + directory + _CHAR . _CHAR ; throw new IOException ( message ) ; } }
29737	private boolean checkTombStones ( int level ) { switch ( level ) { case _NUM : if ( getNpcs ( _NUM ) . isEmpty ( ) && getNpcs ( _NUM ) . isEmpty ( ) && getNpcs ( _NUM ) . isEmpty ( ) ) { return _BOOL ; } break ; case _NUM : break ; } return _BOOL ; }
29789	public boolean useAuthor ( String userId ) { switch ( mode ) { case PASS_THRU : return _BOOL ; case USE_DEFAULT : return _BOOL ; case WHITELIST : return whitelist . contains ( userId ) ; default : throw new IllegalStateException ( String . format ( _CHAR Mode _CHAR not implemented . '' , mode ) ) ; } }
30026	public void doStart ( ) { try { if ( space == _NULL ) { initSpace ( ) ; } super . doStart ( ) ; } catch ( Exception e ) { Log . warn ( _CHAR Problem initialising session ids _CHAR , e ) ; throw new IllegalStateException ( e ) ; } }
30145	private void pauseAutoCycle ( ) { if ( mCycling ) { mCycleTimer . cancel ( ) ; mCycleTask . cancel ( ) ; mCycling = _BOOL ; } else { if ( mResumingTimer != _NULL && mResumingTask != _NULL ) { recoverCycle ( ) ; } } }
30180	public void stopEditing ( ) { m_editor . setVisible ( _BOOL ) ; if ( m_editItem != _NULL ) { String txt = m_editor . getText ( ) ; m_editItem . set ( m_editAttribute , txt ) ; m_editItem = _NULL ; m_editAttribute = _NULL ; m_editor . setBackground ( _NULL ) ; m_editor . setForeground ( _NULL ) ; } m_editing = _BOOL ; }
30269	private static boolean wasSuccessful ( Future < AndroidDebugBridge > future ) { if ( ! future . isDone ( ) ) { return _BOOL ; } try { AndroidDebugBridge bridge = future . get ( ) ; return bridge != _NULL && bridge . isConnected ( ) ; } catch ( Exception e ) { return _BOOL ; } }
30462	private static short convertToPrimitiveKind ( short valueType ) { if ( valueType <= XSConstants . NOTATION_DT ) { return valueType ; } if ( valueType <= XSConstants . ENTITY_DT ) { return XSConstants . STRING_DT ; } if ( valueType <= XSConstants . POSITIVEINTEGER_DT ) { return XSConstants . DECIMAL_DT ; } return valueType ; }
30578	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { if ( isRawType ( ) ) return _BOOL ; for ( int i = _NUM ; i < getNumArgument ( ) ; ++ i ) { if ( ! getArgument ( i ) . type ( ) . isWildcard ( ) ) return _BOOL ; } return _BOOL ; } finally { } }
30746	private void fireOnUnsubscribeEvent ( final Set < Long > tagIds ) { listenersLock . readLock ( ) . lock ( ) ; try { Set < Long > copyList = new HashSet < Long > ( tagIds ) ; for ( TagSubscriptionListener listener : tagSubscriptionListeners ) { listener . onUnsubscribe ( copyList ) ; } } finally { listenersLock . readLock ( ) . unlock ( ) ; } }
30768	private void abortLoading ( ) { if ( thread == _NULL ) return ; if ( thread . isAlive ( ) ) { thread . interrupt ( ) ; try { thread . join ( ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } } }
31221	public JsonObject add ( String name , JsonValue value ) { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name is _NULL _CHAR ) ; } if ( value == _NULL ) { throw new NullPointerException ( _CHAR value is _NULL _CHAR ) ; } table . add ( name , names . size ( ) ) ; names . add ( name ) ; values . add ( value ) ; return this ; }
31512	public synchronized void stop ( ) { if ( mStreaming ) { if ( mMode == MODE_MEDIACODEC_API ) { Log . d ( TAG , _CHAR Interrupting threads ... _CHAR ) ; mThread . interrupt ( ) ; mAudioRecord . stop ( ) ; mAudioRecord . release ( ) ; mAudioRecord = _NULL ; } super . stop ( ) ; } }
31524	@ Override public int read ( ) throws IOException { if ( this . remaining == _NUM ) { return - _NUM ; } else { int var1 = this . in . read ( ) ; if ( var1 >= _NUM ) { -- this . remaining ; } return var1 ; } }
31550	private void wait_ ( ) { final WakeupListener w = new WakeupListener ( _NULL ) ; BufferedIterator . this . setWakeup ( _NULL ) ; while ( ! w . isReleasable ( ) ) { try { ForkJoinPool . managedBlock ( w ) ; } catch ( InterruptedException ex ) { LOG . log ( Level . WARNING , _CHAR interrupted wait _CHAR , ex ) ; } } }
31736	public boolean hasMoreRecords ( ) throws IOException { row = parser . parseNext ( ) ; if ( row == _NULL && blockCounter + _NUM >= this . csvParserVo . getBlockDetailsList ( ) . size ( ) ) { close ( ) ; return _BOOL ; } if ( row == _NULL ) { initialize ( ) ; row = parser . parseNext ( ) ; } return _BOOL ; }
31796	public void shutdown ( ) throws DataSourceException { if ( createdSessionFactory ) { if ( sessionFactory != _NULL && ! sessionFactory . isClosed ( ) ) { try { sessionFactory . close ( ) ; } finally { sessionFactory = _NULL ; } } } }
32097	public < T > T toObject ( Class < T > targetClass ) throws IOException { Assert . notNull ( _CHAR targetClass _CHAR , targetClass ) ; try { return mapper . readValue ( jsonString , targetClass ) ; } catch ( IOException e ) { throw e ; } catch ( Exception e ) { throw new IOException ( e ) ; } }
32336	public Plane . Side whichSide ( Plane plane ) { float distance = plane . pseudoDistance ( center ) ; if ( distance <= - radius ) { return Plane . Side . Negative ; } else if ( distance >= radius ) { return Plane . Side . Positive ; } else { return Plane . Side . None ; } }
32573	private boolean imageOutline ( DefaultMutableTreeNode node ) { boolean isOutline = _BOOL ; if ( node != _NULL ) { DefaultMutableTreeNode parentNode = ( DefaultMutableTreeNode ) node . getParent ( ) ; if ( parentNode != _NULL ) { if ( parentNode . getUserObject ( ) instanceof RasterSymbolizer ) { isOutline = _BOOL ; } } } return isOutline ; }
32578	public void deactivate ( ) { if ( ! inSelection ) { inSelection = _BOOL ; try { chartSelection . clearSelectionSeries ( ) ; this . repaint ( ) ; } finally { inSelection = _BOOL ; } } }
33028	private ByteString evaluateResponse ( ByteString response ) throws SaslException { if ( response == _NULL ) { response = ByteString . empty ( ) ; } final byte [ ] evalResponse = saslServer . evaluateResponse ( response . toByteArray ( ) ) ; if ( evalResponse == _NULL ) { return ByteString . empty ( ) ; } else { return ByteString . wrap ( evalResponse ) ; } }
33050	public void sendUserCreateNotification ( Map attributes ) { try { if ( createNotifyList != _NULL && ! createNotifyList . isEmpty ( ) ) { sendEmail ( createNotifyList , attributes , _CHAR _NUM _CHAR , _CHAR _NUM _CHAR , _CHAR _NUM _CHAR ) ; } } catch ( MessagingException e ) { if ( debug . warningEnabled ( ) ) { debug . warning ( _CHAR EmailNotificationHelper . '' + _CHAR sendUserCreateNotification ( ) Unable to send _CHAR + _CHAR email for user : '' + entryDN , e ) ; } } }
33280	public String debugDump ( ) { String superstring = super . debugDump ( ) ; stringRepresentation = _CHAR _CHAR ; sprint ( SIPResponse . class . getCanonicalName ( ) ) ; sprint ( _CHAR { _CHAR ) ; if ( statusLine != _NULL ) { sprint ( statusLine . debugDump ( ) ) ; } sprint ( superstring ) ; sprint ( _CHAR } _CHAR ) ; return stringRepresentation ; }
33354	public static String map2AlgName ( String oid ) { checkCacheVersion ( ) ; String algUC = oid2AlgMap . get ( oid ) ; if ( algUC != _NULL ) { return algAliasesMap . get ( algUC ) ; } AlgNameMapperSource s = source ; if ( s != _NULL ) { return s . mapOidToName ( oid ) ; } return _NULL ; }
33721	protected void openRedirector ( ) { if ( ! redirectorConfigured ) { configureRedirector ( ) ; } if ( redirectOutput ) { redirector . createStreams ( ) ; redirectOutStream = redirector . getOutputStream ( ) ; redirectOutPrintStream = new PrintStream ( redirectOutStream ) ; redirectErrStream = redirector . getErrorStream ( ) ; redirectErrPrintStream = new PrintStream ( redirectErrStream ) ; } }
33899	@ Override @ SuppressWarnings ( _CHAR unchecked _CHAR ) public boolean remove ( Object o ) { if ( o == _NULL ) { return _BOOL ; } for ( int targetIndex = _NUM ; targetIndex < size ; targetIndex ++ ) { if ( o . equals ( elements [ targetIndex ] ) ) { removeAt ( targetIndex ) ; return _BOOL ; } } return _BOOL ; }
33920	public static void main ( final String [ ] args ) { parseArgs ( args ) ; if ( useStartTLS ) { connectStartTLS ( ) ; } else if ( useSSL ) { connectSSL ( ) ; } else { connect ( ) ; } }
33984	public void addPropertyChangeListener ( PropertyChangeListener listener ) { if ( listener == _NULL ) { return ; } if ( listener instanceof PropertyChangeListenerProxy ) { PropertyChangeListenerProxy proxy = ( PropertyChangeListenerProxy ) listener ; addPropertyChangeListener ( proxy . getPropertyName ( ) , proxy . getListener ( ) ) ; } else { this . map . add ( _NULL , listener ) ; } }
34142	public void addStringToTable ( byte [ ] string ) { stringTable [ tableIndex ++ ] = string ; if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } else if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } else if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } }
34349	static void make72Safe ( StringBuffer line ) { int length = line . length ( ) ; if ( length > _NUM ) { int index = _NUM ; while ( index < length - _NUM ) { line . insert ( index , _CHAR \ r \ n _CHAR ) ; index += _NUM ; length += _NUM ; } } return ; }
34406	public boolean isCompatibleSampleModel ( SampleModel sm ) { if ( ! ( sm instanceof ComponentSampleModel ) ) { return _BOOL ; } if ( numComponents != sm . getNumBands ( ) ) { return _BOOL ; } if ( sm . getTransferType ( ) != transferType ) { return _BOOL ; } return _BOOL ; }
34606	@ Override public boolean hasEntitlementDITs ( ) { try { new ServiceSchemaManager ( SERVICE_NAME , EntitlementUtils . getAdminToken ( ) ) ; return _BOOL ; } catch ( SMSException ex ) { return _BOOL ; } catch ( SSOException ex ) { return _BOOL ; } }
34670	public void close ( ) { try { synchronized ( lock ) { if ( out == _NULL ) return ; out . close ( ) ; out = _NULL ; } } catch ( IOException x ) { trouble = _BOOL ; } }
34785	protected final void cullCache ( ) { if ( maxCacheSize < _NUM ) { return ; } if ( cacheSize >= maxCacheSize * . _NUM ) { deleteExpiredEntries ( ) ; int desiredSize = ( int ) ( maxCacheSize * . _NUM ) ; while ( cacheSize > desiredSize ) { remove ( lastAccessedList . getLast ( ) . object ) ; } } }
34813	public boolean hasBeenModified ( ) { if ( ! hasSubSchema ( ) ) { return isAttributesModified ( ) ; } else { boolean modified = isAttributesModified ( ) ; for ( Map . Entry < String , ServiceSchemaModificationWrapper > subSchema : subSchemas . entrySet ( ) ) { modified |= subSchema . getValue ( ) . hasBeenModified ( ) ; } return modified ; } }
34949	private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException , InvalidObjectException { s . defaultReadObject ( ) ; if ( minSmallest > minLargest ) { throw new InvalidObjectException ( _CHAR Smallest minimum value must be less than largest minimum value _CHAR ) ; } if ( maxSmallest > maxLargest ) { throw new InvalidObjectException ( _CHAR Smallest maximum value must be less than largest maximum value _CHAR ) ; } if ( minLargest > maxLargest ) { throw new InvalidObjectException ( _CHAR Minimum value must be less than maximum value _CHAR ) ; } }
34971	public void put ( E e ) throws InterruptedException { checkNotNull ( e ) ; final ReentrantLock lock = this . lock ; lock . lockInterruptibly ( ) ; try { while ( count == items . length ) notFull . await ( ) ; enqueue ( e ) ; } finally { lock . unlock ( ) ; } }
35139	public String findNamespaceURI ( String prefix ) { ArrayStack < String > stack = namespaces . get ( prefix ) ; if ( stack == _NULL ) { return ( _NULL ) ; } try { return stack . peek ( ) ; } catch ( EmptyStackException e ) { return ( _NULL ) ; } }
35141	@ Override public Tag createDefaultTag ( ) { if ( TagOptionSingleton . getInstance ( ) . getID3V2Version ( ) == ID3V2Version . ID3_V24 ) { return new ID3v24Tag ( ) ; } else if ( TagOptionSingleton . getInstance ( ) . getID3V2Version ( ) == ID3V2Version . ID3_V23 ) { return new ID3v23Tag ( ) ; } else if ( TagOptionSingleton . getInstance ( ) . getID3V2Version ( ) == ID3V2Version . ID3_V22 ) { return new ID3v22Tag ( ) ; } return new ID3v24Tag ( ) ; }
35154	public int hashCode ( ) { int hash = ( ignoreCase ? _NUM : _NUM ) ; try { NamingEnumeration < ? > all = getAll ( ) ; while ( all . hasMore ( ) ) { hash += all . next ( ) . hashCode ( ) ; } } catch ( NamingException e ) { } return hash ; }
35205	public void addVetoableChangeListener ( VetoableChangeListener listener ) { if ( listener == _NULL ) { return ; } if ( listener instanceof VetoableChangeListenerProxy ) { VetoableChangeListenerProxy proxy = ( VetoableChangeListenerProxy ) listener ; addVetoableChangeListener ( proxy . getPropertyName ( ) , proxy . getListener ( ) ) ; } else { this . map . add ( _NULL , listener ) ; } }
35249	public static String removeDeployUri ( String uri ) { if ( ( uri == _NULL ) || ( uri . length ( ) == _NUM ) ) { return uri ; } int loc = uri . indexOf ( _CHAR / _CHAR , _NUM ) ; if ( loc == - _NUM ) { return _NULL ; } else { return uri . substring ( loc ) ; } }
35571	protected boolean applyFilter ( Node node , int nodeType ) { if ( fFilter != _NULL && ( fWhatToShowFilter & nodeType ) != _NUM ) { short code = fFilter . acceptNode ( node ) ; switch ( code ) { case NodeFilter . FILTER_REJECT : case NodeFilter . FILTER_SKIP : return _BOOL ; default : } } return _BOOL ; }
35940	private SAXUnmarshallerHandler createUnmarshallerHandler ( Locator locator ) { SAXUnmarshallerHandler unmarshaller = new SAXUnmarshallerHandlerImpl ( this , grammarInfo ) ; try { if ( isValidating ( ) ) { unmarshaller = ValidatingUnmarshaller . create ( context . getGrammar ( ) , unmarshaller , locator ) ; } } catch ( JAXBException e ) { e . printStackTrace ( ) ; } return unmarshaller ; }
36054	public StringBuilder encodeMessage ( StringBuilder retval ) { if ( requestLine != _NULL ) { this . setRequestLineDefaults ( ) ; requestLine . encode ( retval ) ; encodeSIPHeaders ( retval ) ; } else if ( this . isNullRequest ( ) ) { retval . append ( _CHAR \ r \ n \ r \ n _CHAR ) ; } else retval = encodeSIPHeaders ( retval ) ; return retval ; }
36082	private void cleanUpIndeterminateValues ( ) { if ( progressBar . isDisplayable ( ) ) { stopAnimationTimer ( ) ; } cycleTime = repaintInterval = _NUM ; numFrames = animationIndex = _NUM ; maxPosition = _NUM ; delta = _NUM . _NUM ; boxRect = nextPaintRect = _NULL ; componentInnards = oldComponentInnards = _NULL ; progressBar . removeHierarchyListener ( getHandler ( ) ) ; }
36107	public void commit ( ) throws IOException { synchronized ( DiskLruCache . this ) { if ( hasErrors ) { completeEdit ( this , _BOOL ) ; removeEntry ( entry ) ; } else { completeEdit ( this , _BOOL ) ; } committed = _BOOL ; } }
36226	@ Override public int hashCode ( ) { int code = _NUM ; if ( eSubjects != _NULL ) { for ( EntitlementSubject eSubject : eSubjects ) { code += eSubject . hashCode ( ) ; } } if ( pSubjectName != _NULL ) { code += pSubjectName . hashCode ( ) ; } return code ; }
36733	public JsonValue undeploy ( String routeId ) throws RouterHandlerException { write . lock ( ) ; try { JsonValue routeConfig = unload ( routeId ) ; directoryMonitor . delete ( routeId ) ; logger . info ( _CHAR Undeployed the route with id _CHAR _CHAR , routeId ) ; return routeConfig ; } finally { write . unlock ( ) ; } }
36740	@ Override public IndexCreatedEvent update ( IndexCreatedEvent entity ) { BoundStatement bs = new BoundStatement ( updateStmt ) ; bindUpdate ( bs , entity ) ; if ( entity . isDoneIndexing ( ) ) { markDone ( entity . getUuid ( ) ) ; } else { markIndexing ( entity . getUuid ( ) ) ; } getSession ( ) . execute ( bs ) ; return entity ; }
36813	public void addEvent ( String e ) { if ( TextUtils . isEmpty ( e ) ) { return ; } if ( event == _NULL ) { event = new WXEvent ( ) ; } if ( containsEvent ( e ) ) { return ; } event . add ( e ) ; }
36876	public static void writeToFile ( String content , String fileName ) throws IOException { FileWriter fw = _NULL ; try { fw = new FileWriter ( fileName ) ; fw . write ( content , _NUM , content . length ( ) ) ; } finally { if ( fw != _NULL ) { fw . close ( ) ; } } }
36893	@ Override public void publish ( final LogRecord logRecord ) { if ( ! isLoggable ( logRecord ) ) { return ; } String formatted = getFormatter ( ) . format ( logRecord ) ; synchronized ( logRecords ) { logRecords . add ( formatted ) ; if ( logRecords . size ( ) >= bufferSize ) { nonBlockingFlush ( ) ; } } }
36929	public void disconnect ( ) { synchronized ( this ) { if ( isClosed ( ) ) return ; if ( connectState == ST_CONNECTED ) { impl . disconnect ( ) ; } connectedAddress = _NULL ; connectedPort =- _NUM ; connectState = ST_NOT_CONNECTED ; explicitFilter = _BOOL ; } }
37021	@ Override public int read ( ) throws IOException { try { beforeRead ( _NUM ) ; int b = in . read ( ) ; afterRead ( b != - _NUM ? _NUM : - _NUM ) ; return b ; } catch ( IOException e ) { handleIOException ( e ) ; return - _NUM ; } }
37067	protected SecretKey generateSecretKey ( String algorithm , int keyStrength ) throws EncryptionException { try { KeyGenerator keygen = KeyGenerator . getInstance ( algorithm ) ; if ( keyStrength != _NUM ) { keygen . init ( keyStrength ) ; } return keygen . generateKey ( ) ; } catch ( NoSuchAlgorithmException ne ) { throw new EncryptionException ( ne ) ; } }
37116	private static void writeFully ( WritableByteChannel ch , ByteBuffer bb ) throws IOException { if ( ch instanceof SelectableChannel ) { SelectableChannel sc = ( SelectableChannel ) ch ; synchronized ( sc . blockingLock ( ) ) { if ( ! sc . isBlocking ( ) ) throw new IllegalBlockingModeException ( ) ; writeFullyImpl ( ch , bb ) ; } } else { writeFullyImpl ( ch , bb ) ; } }
37329	public ResponseEvent extractCollectedResponseEvent ( ) { if ( responseCollector == _NULL ) throw new TckInternalError ( _CHAR A response collect was attempted when the responseCollector was _NULL _CHAR ) ; ResponseEvent collectedEvent = responseCollector . collectedEvent ; responseCollector . provider . removeSipListener ( responseCollector ) ; resetCollectors ( ) ; try { Thread . sleep ( _NUM ) ; } catch ( InterruptedException ex ) { } return collectedEvent ; }
37406	public synchronized void start ( ) { if ( isActive ( ) ) { MONITOR_LOGGER . logp ( Level . FINER , GaugeMonitor . class . getName ( ) , _CHAR start _CHAR , _CHAR the monitor is already active _CHAR ) ; return ; } for ( ObservedObject o : observedObjects ) { final GaugeMonitorObservedObject gmo = ( GaugeMonitorObservedObject ) o ; gmo . setStatus ( RISING_OR_FALLING ) ; gmo . setPreviousScanGauge ( _NULL ) ; } doStart ( ) ; }
37553	public boolean isValid ( ) throws SMSException { if ( smsEntry . isValid ( ) ) { if ( smsEntry . isDirty ( ) ) { smsEntry . refresh ( ) ; } if ( smsEntry . isNewEntry ( ) ) { String [ ] msgs = { serviceName } ; throw ( new ServiceNotFoundException ( IUMSConstants . UMS_BUNDLE_NAME , IUMSConstants . SMS_service_does_not_exist , msgs ) ) ; } } return ( smsEntry . isValid ( ) ) ; }
37598	public static boolean save ( String aFileName , String aContent ) { try { FileWriter fOut = new FileWriter ( aFileName ) ; fOut . write ( aContent ) ; fOut . flush ( ) ; fOut . close ( ) ; return _BOOL ; } catch ( IOException e ) { return _BOOL ; } }
37655	public static void closeQuietly ( AutoCloseable closeable ) { if ( closeable != _NULL ) { try { closeable . close ( ) ; } catch ( RuntimeException rethrown ) { throw rethrown ; } catch ( Exception ignored ) { } } }
37706	@ Override public void clear ( ) throws IOException { if ( writer != _NULL ) { throw new IOException ( ) ; } else { nextChar = _NUM ; if ( LIMIT_BUFFER && ( cb . length > Constants . DEFAULT_TAG_BUFFER_SIZE ) ) { cb = new char [ Constants . DEFAULT_TAG_BUFFER_SIZE ] ; bufferSize = cb . length ; } } }
37868	public static String decodeCharset ( String s , String charset ) { if ( s == _NULL ) { return _NULL ; } try { byte buf [ ] = s . getBytes ( ASCII_CHARSET ) ; return ( new String ( buf , _NUM , buf . length , charset ) ) ; } catch ( UnsupportedEncodingException uee ) { return s ; } }
37905	private void processModifyDN ( Map < DN , DN > modDNMap , boolean log ) { if ( modDNMap != _NULL ) { if ( log ) { writeLog ( modDNMap ) ; } else { for ( DN baseDN : getBaseDNsToSearch ( ) ) { doBaseDN ( baseDN , modDNMap ) ; } } } }
38028	@ Override public void writeRecord ( String record ) { if ( writer != _NULL ) { while ( ! stopRequested . get ( ) ) { try { queue . put ( record ) ; break ; } catch ( InterruptedException e ) { } } } }
38079	public static UUID nameUUIDFromBytes ( byte [ ] name ) { if ( name == _NULL ) { throw new NullPointerException ( _CHAR name == _NULL _CHAR ) ; } try { MessageDigest md = MessageDigest . getInstance ( _CHAR MD5 _CHAR ) ; return makeUuid ( md . digest ( name ) , _NUM ) ; } catch ( NoSuchAlgorithmException e ) { throw new AssertionError ( e ) ; } }
38083	public void doLayout ( ) { if ( editingComponent != _NULL ) { int width = getWidth ( ) ; int height = getHeight ( ) ; if ( getComponentOrientation ( ) . isLeftToRight ( ) ) { editingComponent . setBounds ( offset , _NUM , width - offset , height ) ; } else { editingComponent . setBounds ( _NUM , _NUM , width - offset , height ) ; } } }
38376	public Object clone ( ) { Date d = _NULL ; try { d = ( Date ) super . clone ( ) ; if ( cdate != _NULL ) { d . cdate = ( BaseCalendar . Date ) cdate . clone ( ) ; } } catch ( CloneNotSupportedException e ) { } return d ; }
38481	public boolean isRecursiveAttrSet ( ElemAttributeSet attrSet ) { if ( _NULL == m_attrSetStack ) { m_attrSetStack = new Stack ( ) ; } if ( ! m_attrSetStack . empty ( ) ) { int loc = m_attrSetStack . search ( attrSet ) ; if ( loc > - _NUM ) { return _BOOL ; } } return _BOOL ; }
38588	protected void tearDown ( ) { try { os . close ( ) ; } catch ( Exception e ) { } try { dis . close ( ) ; } catch ( Exception e ) { } }
39003	@ Override public boolean isExists ( SSOToken token , IdType type , String name ) throws IdRepoException { if ( DEBUG . messageEnabled ( ) ) { DEBUG . message ( _CHAR isExists invoked _CHAR ) ; } try { getDN ( type , name ) ; } catch ( IdentityNotFoundException infe ) { return _BOOL ; } return _BOOL ; }
39027	public Node item ( int index ) { if ( m_iter != _NULL ) { int handle = m_iter . item ( index ) ; if ( handle == DTM . NULL ) { return _NULL ; } return m_iter . getDTM ( handle ) . getNode ( handle ) ; } else { return _NULL ; } }
39079	@ SuppressWarnings ( _CHAR WeakerAccess _CHAR ) public void updateData ( @ Nullable OrderedRealmCollection < T > data ) { if ( hasAutoUpdates ) { if ( adapterData != _NULL ) { removeListener ( adapterData ) ; } if ( data != _NULL ) { addListener ( data ) ; } } this . adapterData = data ; notifyDataSetChanged ( ) ; }
39177	private void doMatch ( FileEntry entry , File file ) { if ( entry . refresh ( file ) ) { for ( FileAlterationListener listener : listeners ) { if ( entry . isDirectory ( ) ) { listener . onDirectoryChange ( file ) ; } else { listener . onFileChange ( file ) ; } } } }
39186	public int hashCode ( ) { int hash = tx == _NULL ? _NUM : tx . hashCode ( ) ; if ( defaulting ) { hash += getAntiAliasingHint ( ) . hashCode ( ) ; hash += getFractionalMetricsHint ( ) . hashCode ( ) ; } else { hash += aaHintValue . hashCode ( ) ; hash += fmHintValue . hashCode ( ) ; } return hash ; }
39408	@ SuppressWarnings ( _CHAR deprecation _CHAR ) @ Deprecated public final void resume ( ) { synchronized ( threadRefs ) { for ( Thread thread : threads ) { thread . resume ( ) ; } } synchronized ( groups ) { for ( ThreadGroup group : groups ) { group . resume ( ) ; } } }
39457	@ Override public void onPropertyChanged ( Observable sender , int propertyId ) { Conversation conversation = ( Conversation ) sender ; switch ( propertyId ) { case Conversation . SUBJECT_PROPERTY_ID : setSubject ( conversation . getSubject ( ) ) ; break ; case Conversation . STATE_PROPERTY_ID : setState ( conversation . getState ( ) . toString ( ) ) ; break ; default : } }
39477	public final boolean isSecure ( Socket sock ) throws IllegalArgumentException { if ( sock == _NULL ) { throw new IllegalArgumentException ( _CHAR Socket may not be _NULL . _CHAR ) ; } if ( sock . getClass ( ) != Socket . class ) { throw new IllegalArgumentException ( _CHAR Socket not created by this factory . '' ) ; } if ( sock . isClosed ( ) ) { throw new IllegalArgumentException ( _CHAR Socket is closed . '' ) ; } return _BOOL ; }
39532	public Object clone ( ) { DefaultMutableTreeNode newNode = _NULL ; try { newNode = ( DefaultMutableTreeNode ) super . clone ( ) ; newNode . children = _NULL ; newNode . parent = _NULL ; } catch ( CloneNotSupportedException e ) { throw new Error ( e . toString ( ) ) ; } return newNode ; }
39745	@ Override public void close ( ) throws IOException { synchronized ( lock ) { if ( decoder != _NULL ) { decoder . reset ( ) ; } decoder = _NULL ; if ( in != _NULL ) { in . close ( ) ; in = _NULL ; } } }
39772	private static void updateNamingTable ( ) throws SMSException { Hashtable updatedNamingTable = updateNamingTable ( _BOOL ) ; if ( namingTable != _NULL ) { synchronized ( namingTable ) { namingTable . clear ( ) ; namingTable . putAll ( updatedNamingTable ) ; } } else { namingTable = updatedNamingTable ; } }
39815	private void restore ( ) { Frame frame = getFrame ( ) ; if ( frame == _NULL ) { return ; } if ( ( state & Frame . ICONIFIED ) != _NUM ) { frame . setExtendedState ( state & ~ Frame . ICONIFIED ) ; } else { frame . setExtendedState ( state & ~ Frame . MAXIMIZED_BOTH ) ; } }
39849	public static boolean match ( String name ) { if ( osName . equalsIgnoreCase ( name ) ) { return _BOOL ; } else { String winPrefix = name . substring ( _NUM , _NUM ) ; if ( osName . toLowerCase ( ) . contains ( winPrefix . toLowerCase ( ) ) ) { return _BOOL ; } } return _BOOL ; }
40169	private void buildInfo ( ) { Object lock = lock ( ) ; try { Document doc = getDocument ( ) ; Element root = doc . getDefaultRootElement ( ) ; rootElementInfo = new ElementInfo ( root ) ; rootElementInfo . validate ( ) ; } finally { unlock ( lock ) ; } }
40235	void delete ( ) throws ChangelogException { exclusiveLock . lock ( ) ; try { final boolean isDeleted = logfile . delete ( ) ; if ( ! isDeleted ) { throw new ChangelogException ( ERR_CHANGELOG_UNABLE_TO_DELETE_LOG_FILE . get ( getPath ( ) ) ) ; } } finally { exclusiveLock . unlock ( ) ; } }
40596	public SIPHeader parse ( ) throws ParseException { dbg_enter ( _CHAR parse _CHAR ) ; try { headerName ( TokenTypes . AUTHORIZATION ) ; Authorization auth = new Authorization ( ) ; super . parse ( auth ) ; return auth ; } finally { dbg_leave ( _CHAR parse _CHAR ) ; } }
40637	public boolean isDegenerate ( ) { if ( segments . size ( ) > _NUM && closed ) { return _BOOL ; } for ( IShape segment : segments ) { Set < Point > points = new HashSet < > ( segment . getBasePoints ( ) ) ; if ( points . size ( ) != _NUM ) { return _BOOL ; } } return segments . size ( ) > _NUM || closed ; }
40703	public void sendUserDeleteNotification ( Map attributes ) { try { if ( deleteNotifyList != _NULL && ! deleteNotifyList . isEmpty ( ) ) { sendEmail ( deleteNotifyList , attributes , _CHAR _NUM _CHAR , _CHAR _NUM _CHAR , _CHAR _NUM _CHAR ) ; } } catch ( MessagingException e ) { if ( debug . warningEnabled ( ) ) { debug . warning ( _CHAR EmailNotificationHelper . '' + _CHAR sendUserDeleteNotification ( ) Unable to send _CHAR + _CHAR email for user : '' + entryDN , e ) ; } } }
41122	public void install ( JFormattedTextField ftf ) { super . install ( ftf ) ; if ( ftf != _NULL ) { Object value = ftf . getValue ( ) ; try { stringToValue ( valueToString ( value ) ) ; } catch ( ParseException pe ) { setEditValid ( _BOOL ) ; } } }
41215	public int countRedos ( UndoOwner [ ] owners ) { if ( owners == _NULL ) { return mRedos . size ( ) ; } int count = _NUM ; int i = _NUM ; while ( ( i = findNextState ( mRedos , owners , i ) ) >= _NUM ) { count ++ ; i ++ ; } return count ; }
41254	protected Object readResolve ( ) throws InvalidObjectException { if ( this . getClass ( ) != TextAttribute . class ) { throw new InvalidObjectException ( _CHAR subclass did n _CHAR_CHAR_CHAR_CHAR ) ; } }
41565	private final void releaseDTMXRTreeFrags ( ) { if ( m_DTMXRTreeFrags == _NULL ) { return ; } final Iterator iter = ( m_DTMXRTreeFrags . values ( ) ) . iterator ( ) ; while ( iter . hasNext ( ) ) { DTMXRTreeFrag frag = ( DTMXRTreeFrag ) iter . next ( ) ; frag . destruct ( ) ; iter . remove ( ) ; } m_DTMXRTreeFrags = _NULL ; }
41657	protected void removeDescendantToggledPaths ( Enumeration < TreePath > toRemove ) { if ( toRemove != _NULL ) { while ( toRemove . hasMoreElements ( ) ) { Enumeration < ? > descendants = getDescendantToggledPaths ( toRemove . nextElement ( ) ) ; if ( descendants != _NULL ) { while ( descendants . hasMoreElements ( ) ) { expandedState . remove ( descendants . nextElement ( ) ) ; } } } } }
41757	public static boolean isPrintableString ( String s ) { if ( s == _NULL ) { return _BOOL ; } int length = s . length ( ) ; for ( int i = _NUM ; i < length ; i ++ ) { if ( ! isPrintableCharacter ( s . charAt ( i ) ) ) { return _BOOL ; } } return _BOOL ; }
41765	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( this . getClass ( ) . getName ( ) ) ; sb . append ( _CHAR ) ; if ( container == _NULL ) { sb . append ( _CHAR Container is _NULL _CHAR ) ; } else { sb . append ( container . getName ( ) ) ; } sb . append ( _CHAR ) ; return sb . toString ( ) ; }
41812	public SIPHeader parse ( ) throws ParseException { if ( debug ) dbg_enter ( _CHAR parse _CHAR ) ; try { headerName ( TokenTypes . WWW_AUTHENTICATE ) ; WWWAuthenticate wwwAuthenticate = new WWWAuthenticate ( ) ; super . parse ( wwwAuthenticate ) ; return wwwAuthenticate ; } finally { if ( debug ) dbg_leave ( _CHAR parse _CHAR ) ; } }
41833	public void stress_test_TestSSLSocketPair_create ( ) { final boolean verbose = _BOOL ; while ( _BOOL ) { TestSSLSocketPair test = TestSSLSocketPair . create ( ) ; if ( verbose ) { System . out . println ( _CHAR client = _CHAR + test . client . getLocalPort ( ) + _CHAR server = _CHAR + test . server . getLocalPort ( ) ) ; } else { System . out . print ( _CHAR X _CHAR ) ; } } }
41952	public static boolean hasClass ( MavenProject project , String ... classNames ) { URLClassLoader compileClassLoader = getCompileClassLoader ( project ) ; for ( String className : classNames ) { try { compileClassLoader . loadClass ( className ) ; return _BOOL ; } catch ( Throwable e ) { } } return _BOOL ; }
42142	public boolean isPollingEnabled ( ) { if ( ! SystemProperties . isServerMode ( ) ) { pollingEnabled = SystemProperties . getAsBoolean ( ENABLE_POLLING_PROPERTY , _BOOL ) ; } if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR Session . isPollingEnabled is _CHAR + pollingEnabled ) ; } if ( ! pollerPoolInitialized ) { initPollerPool ( ) ; } return pollingEnabled ; }
42176	public Dimension preferredLayoutSize ( Container parent ) { Component view = ( ( JViewport ) parent ) . getView ( ) ; if ( view == _NULL ) { return new Dimension ( _NUM , _NUM ) ; } else if ( view instanceof Scrollable ) { return ( ( Scrollable ) view ) . getPreferredScrollableViewportSize ( ) ; } else { return view . getPreferredSize ( ) ; } }
42219	public static boolean isASCII ( String input ) { if ( input == _NULL ) { return _BOOL ; } for ( int i = _NUM ; i < input . length ( ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > _NUM ) { return _BOOL ; } } return _BOOL ; }
42378	public void verifyStoragePermissions ( ) { xlog ( _CHAR Verify permission storage entered _CHAR ) ; int permission = ActivityCompat . checkSelfPermission ( this , Manifest . permission . WRITE_EXTERNAL_STORAGE ) ; if ( permission != PackageManager . PERMISSION_GRANTED ) { xlog ( _CHAR Prompting user for permission '' ) ; ActivityCompat . requestPermissions ( this , PERMISSIONS_STORAGE , REQUEST_EXTERNAL_STORAGE ) ; } else { xlog ( _CHAR We have permission _CHAR ) ; handleSendImage ( getIntent ( ) ) ; } }
42673	protected void resetLayoutManager ( ) { if ( orientation == JSplitPane . HORIZONTAL_SPLIT ) { layoutManager = new BasicHorizontalLayoutManager ( _NUM ) ; } else { layoutManager = new BasicHorizontalLayoutManager ( _NUM ) ; } splitPane . setLayout ( layoutManager ) ; layoutManager . updateComponents ( ) ; splitPane . revalidate ( ) ; splitPane . repaint ( ) ; }
42686	public void destroySession ( Session session ) throws SessionException { try { SessionOperations operation = sessionOperationStrategy . getOperation ( this . getID ( ) ) ; operation . destroy ( this , session ) ; } catch ( Exception e ) { throw new SessionException ( e ) ; } finally { sessionCache . removeSID ( session . getID ( ) ) ; } }
42722	protected DeltaRequest deserializeDeltaRequest ( DeltaSession session , byte [ ] data ) throws ClassNotFoundException , IOException { session . lock ( ) ; try { ReplicationStream ois = getReplicationStream ( data ) ; session . getDeltaRequest ( ) . readExternal ( ois ) ; ois . close ( ) ; return session . getDeltaRequest ( ) ; } finally { session . unlock ( ) ; } }
42748	public void selectInitialValue ( JOptionPane op ) { if ( inputComponent != _NULL ) inputComponent . requestFocus ( ) ; else { if ( initialFocusComponent != _NULL ) initialFocusComponent . requestFocus ( ) ; if ( initialFocusComponent instanceof JButton ) { JRootPane root = SwingUtilities . getRootPane ( initialFocusComponent ) ; if ( root != _NULL ) { root . setDefaultButton ( ( JButton ) initialFocusComponent ) ; } } } }
42774	private void addWorkerFailed ( Worker w ) { final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { if ( w != _NULL ) workers . remove ( w ) ; decrementWorkerCount ( ) ; tryTerminate ( ) ; } finally { mainLock . unlock ( ) ; } }
42812	public void execute ( TransformerImpl transformer ) throws TransformerException { try { if ( hasFallbackChildren ( ) ) { executeFallbacks ( transformer ) ; } else { } } catch ( TransformerException e ) { transformer . getErrorListener ( ) . fatalError ( e ) ; } }
42906	private boolean is_legal ( String p_string ) { if ( p_string == _NULL ) { System . out . println ( _CHAR IdentifierType . is_legal : p_string is _NULL _CHAR ) ; return _BOOL ; } for ( int i = _NUM ; i < reserved_chars . length ; ++ i ) { if ( p_string . contains ( reserved_chars [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
42979	private void DTDprolog ( ) throws SAXException , IOException { final java . io . Writer writer = m_writer ; if ( m_needToOutputDocTypeDecl ) { outputDocTypeDecl ( m_elemContext . m_elementName , _BOOL ) ; m_needToOutputDocTypeDecl = _BOOL ; } if ( m_inDoctype ) { writer . write ( _CHAR [ _CHAR ) ; writer . write ( m_lineSep , _NUM , m_lineSepLen ) ; m_inDoctype = _BOOL ; } }
43014	public void removeVetoableChangeListener ( VetoableChangeListener listener ) { if ( listener == _NULL ) { return ; } if ( listener instanceof VetoableChangeListenerProxy ) { VetoableChangeListenerProxy proxy = ( VetoableChangeListenerProxy ) listener ; removeVetoableChangeListener ( proxy . getPropertyName ( ) , proxy . getListener ( ) ) ; } else { this . map . remove ( _NULL , listener ) ; } }
43136	@ Override public void write ( int c ) throws IOException { ensureOpen ( ) ; if ( bufferSize == _NUM ) { initOut ( ) ; out . write ( c ) ; } else { if ( nextChar >= bufferSize ) if ( autoFlush ) flushBuffer ( ) ; else bufferOverflow ( ) ; cb [ nextChar ++ ] = ( char ) c ; } }
43838	public static boolean isMethodDirectlyExists ( Object object , String methodName , Class < ? > ... params ) { try { Method method = object . getClass ( ) . getMethod ( methodName , params ) ; return _BOOL ; } catch ( NoSuchMethodException e ) { return _BOOL ; } catch ( SecurityException e ) { throw new RuntimeException ( e ) ; } }
43984	public boolean contains ( long prefix_hash ) { if ( prefix_hash == _NUM ) { return _BOOL ; } int idx =- _NUM * Arrays . binarySearch ( hashes_idx , prefix_hash ) - _NUM ; if ( idx == cache_size ) { return _BOOL ; } else { return ( hashes_idx [ idx ] & PREFIX_HASH_MASK ) == prefix_hash ; } }
44022	@ Override public void nullifyUsedVars ( ) { bundle = _NULL ; sharedState = _NULL ; options = _NULL ; serviceStatus = _NULL ; defaultRoles = _NULL ; userID = _NULL ; userName = _NULL ; userAttrs = _NULL ; regEx = _NULL ; callbacks = _NULL ; }
44100	protected synchronized void engineSetSeed ( byte [ ] seed ) { if ( seed == _NULL ) { throw new NullPointerException ( _CHAR seed == _NULL _CHAR ) ; } if ( state == NEXT_BYTES ) { System . arraycopy ( copies , HASHCOPY_OFFSET , this . seed , HASH_OFFSET , EXTRAFRAME_OFFSET ) ; } state = SET_SEED ; if ( seed . length != _NUM ) { updateSeed ( seed ) ; } }
44315	private void destroy ( final PooledObject < T > toDestroy ) throws Exception { toDestroy . invalidate ( ) ; idleObjects . remove ( toDestroy ) ; allObjects . remove ( new IdentityWrapper < > ( toDestroy . getObject ( ) ) ) ; try { factory . destroyObject ( toDestroy ) ; } finally { destroyedCount . incrementAndGet ( ) ; createCount . decrementAndGet ( ) ; } }
44627	public boolean isSecure ( Socket sock ) throws IllegalArgumentException { if ( sock == _NULL ) { throw new IllegalArgumentException ( _CHAR Socket may not be _NULL . _CHAR ) ; } if ( ! ( sock instanceof SSLSocket ) ) { throw new IllegalArgumentException ( _CHAR Socket not created by this factory . '' ) ; } if ( sock . isClosed ( ) ) { throw new IllegalArgumentException ( _CHAR Socket is closed . '' ) ; } return _BOOL ; }
44718	public Object clone ( ) { PropertyOptions newOptions ; try { newOptions = new PropertyOptions ( getOptions ( ) . getOptions ( ) ) ; } catch ( XMPException e ) { newOptions = new PropertyOptions ( ) ; } XMPNode newNode = new XMPNode ( name , value , newOptions ) ; cloneSubtree ( newNode ) ; return newNode ; }
44743	public boolean update ( ServerState serverState ) { if ( serverState == _NULL ) { return _BOOL ; } boolean updated = _BOOL ; for ( CSN csn : serverState . serverIdToCSN . values ( ) ) { if ( update ( csn ) ) { updated = _BOOL ; } } return updated ; }
44848	public static boolean booleanValue ( String s ) { boolean b = _BOOL ; if ( s != _NULL ) { if ( s . equalsIgnoreCase ( _CHAR yes _CHAR ) ) { b = _BOOL ; } else { b = Boolean . parseBoolean ( s ) ; } } return b ; }
45317	private static boolean valueEquals ( Object obj1 , Object obj2 ) { if ( obj1 == obj2 ) { return _BOOL ; } if ( obj1 == _NULL ) { return _BOOL ; } if ( obj1 . getClass ( ) . isArray ( ) && obj2 . getClass ( ) . isArray ( ) ) { return arrayEquals ( obj1 , obj2 ) ; } return ( obj1 . equals ( obj2 ) ) ; }
45425	private static String property ( String string ) { int length = string . length ( ) ; if ( length == _NUM ) { return _CHAR _CHAR ; } else if ( length == _NUM ) { return string . toLowerCase ( ) ; } else { return string . substring ( _NUM , _NUM ) . toLowerCase ( ) + string . substring ( _NUM ) ; } }
45482	@ Override public int read ( ) throws IOException { try { beforeRead ( _NUM ) ; int c = in . read ( ) ; afterRead ( c != - _NUM ? _NUM : - _NUM ) ; return c ; } catch ( IOException e ) { handleIOException ( e ) ; return - _NUM ; } }
45632	public void outputNextPrompt ( ) { if ( currentPrompt == _NULL ) { abandon ( new ConversationAbandonedEvent ( this ) ) ; } else { context . getForWhom ( ) . sendRawMessage ( prefix . getPrefix ( context ) + currentPrompt . getPromptText ( context ) ) ; if ( ! currentPrompt . blocksForInput ( context ) ) { currentPrompt = currentPrompt . acceptInput ( context , _NULL ) ; outputNextPrompt ( ) ; } } }
45962	public static boolean keepName ( MappedMember mm ) { if ( mm . getDesc ( ) . equals ( _CHAR ( [ Ljava / lang / String ; ) V _CHAR ) && mm . getOriginalName ( ) . equals ( _CHAR main _CHAR ) ) { return _BOOL ; } if ( mm . getOriginalName ( ) . contains ( _CHAR < _CHAR ) ) { return _BOOL ; } if ( isNameWhitelisted ( mm . getOriginalName ( ) ) ) { return _BOOL ; } return _BOOL ; }
46257	public final boolean isSecure ( Socket sock ) throws IllegalArgumentException { if ( sock == _NULL ) { throw new IllegalArgumentException ( _CHAR Socket may not be _NULL . _CHAR ) ; } if ( sock . getClass ( ) != Socket . class ) { throw new IllegalArgumentException ( _CHAR Socket not created by this factory . '' ) ; } if ( sock . isClosed ( ) ) { throw new IllegalArgumentException ( _CHAR Socket is closed . '' ) ; } return _BOOL ; }
46278	public void makeImmutable ( ) { if ( isMutable ) { super . makeImmutable ( ) ; if ( ( baseId != _NULL ) && ( baseId . isMutable ( ) ) ) { baseId . makeImmutable ( ) ; } if ( ( nameId != _NULL ) && ( nameId . isMutable ( ) ) ) { nameId . makeImmutable ( ) ; } isMutable = _BOOL ; } }
46350	public boolean accept ( File path ) { if ( path . exists ( ) ) { if ( path . isDirectory ( ) ) { return _BOOL ; } else { String fileName = path . getName ( ) ; return Utils . isMatch ( fileName , fileNamePattern , wildCard ) ; } } return _BOOL ; }
46494	@ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( this . getClass ( ) . getName ( ) ) ; sb . append ( _CHAR ) ; if ( container == _NULL ) { sb . append ( _CHAR Container is _NULL _CHAR ) ; } else { sb . append ( container . getName ( ) ) ; } sb . append ( _CHAR ) ; return sb . toString ( ) ; }
46829	public void addStringToTable ( byte [ ] str ) { stringTable [ tableIndex ++ ] = str ; if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } else if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } else if ( tableIndex == _NUM ) { bitsToGet = _NUM ; } }
46867	public static String requestPath ( URL url ) { String fileOnly = url . getFile ( ) ; if ( fileOnly == _NULL ) { return _CHAR / _CHAR ; } else if ( ! fileOnly . startsWith ( _CHAR / _CHAR ) ) { return _CHAR / _CHAR + fileOnly ; } else { return fileOnly ; } }
46928	private boolean isPageStreaming ( Method method ) { Type type = apiaryConfig . getType ( method . getResponseTypeUrl ( ) ) ; if ( type == _NULL ) { return _BOOL ; } for ( Field field : type . getFieldsList ( ) ) { if ( field . getName ( ) . equals ( NEXT_PAGE_TOKEN_FIELD_NAME ) ) { return _BOOL ; } } return _BOOL ; }
47607	public void startDocument ( ) throws SAXException { if ( DEBUG ) System . out . println ( _CHAR TransformerHandlerImpl # startDocument _CHAR ) ; m_insideParse = _BOOL ; if ( m_contentHandler != _NULL ) { if ( m_incremental ) { m_transformer . setSourceTreeDocForThread ( m_dtm . getDocument ( ) ) ; int cpriority = Thread . currentThread ( ) . getPriority ( ) ; m_transformer . runTransformThread ( cpriority ) ; } m_contentHandler . startDocument ( ) ; } }
47621	protected final void invokePostResponseCallbacks ( ) { if ( postResponseCallbacks != _NULL ) { for ( Runnable callback : postResponseCallbacks ) { try { callback . run ( ) ; } catch ( Exception e ) { logger . traceException ( e ) ; } } } }
47677	public short acceptNode ( int n ) { try { if ( getPredicateCount ( ) > _NUM ) { countProximityPosition ( _NUM ) ; if ( ! executePredicates ( n , m_lpi . getXPathContext ( ) ) ) return DTMIterator . FILTER_SKIP ; } return DTMIterator . FILTER_ACCEPT ; } catch ( javax . xml . transform . TransformerException se ) { throw new RuntimeException ( se . getMessage ( ) ) ; } }
47704	public void removeAllElements ( ) { if ( objects . size ( ) > _NUM ) { int firstIndex = _NUM ; int lastIndex = objects . size ( ) - _NUM ; objects . removeAllElements ( ) ; selectedObject = _NULL ; fireIntervalRemoved ( this , firstIndex , lastIndex ) ; } else { selectedObject = _NULL ; } }
47890	public void configChanged ( ConfigurationActionEvent e ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR WSFederationMetaServiceListener . configChanged : _CHAR + _CHAR component = _CHAR + e . getComponentName ( ) + _CHAR , config = _CHAR + e . getConfigurationName ( ) ) ; } WSFederationMetaCache . clear ( ) ; if ( e . getRealm ( ) == _NULL ) { SPCache . clear ( ) ; } else { SPCache . clear ( e . getRealm ( ) ) ; } }
48025	public static MessageDigest hashing ( MessageDigest md , InputStream in ) { try { DigestInputStream din = new DigestInputStream ( in , md ) ; synchronized ( buf ) { while ( din . read ( buf ) != - _NUM ) ; } } catch ( IOException ex ) { ex . printStackTrace ( ) ; } return md ; }
48041	public void startTracking ( ) { if ( isTracking ) { return ; } if ( this . session == _NULL ) { addBroadcastReceiver ( ) ; } if ( getSession ( ) != _NULL ) { getSession ( ) . addCallback ( callback ) ; } isTracking = _BOOL ; }
48047	protected GenericObject next ( ) { if ( myListIterator == _NULL ) { myListIterator = this . listIterator ( _NUM ) ; } try { return ( GenericObject ) myListIterator . next ( ) ; } catch ( NoSuchElementException ex ) { myListIterator = _NULL ; return _NULL ; } }
48054	private boolean isScriptOwnMethodCall ( Object receiver , String method ) { if ( ! ( receiver instanceof Script ) ) { return _BOOL ; } final Method [ ] scriptOwnMethods = receiver . getClass ( ) . getDeclaredMethods ( ) ; for ( Method declaredMethod : scriptOwnMethods ) { if ( declaredMethod . getName ( ) . equals ( method ) ) { return _BOOL ; } } return _BOOL ; }
48077	public final byte [ ] update ( byte [ ] input ) { if ( mode != ENCRYPT_MODE && mode != DECRYPT_MODE ) { throw new IllegalStateException ( ) ; } if ( input == _NULL ) { throw new IllegalArgumentException ( _CHAR input == _NULL _CHAR ) ; } if ( input . length == _NUM ) { return _NULL ; } return spiImpl . engineUpdate ( input , _NUM , input . length ) ; }
48818	public synchronized void redo ( ) throws CannotRedoException { if ( inProgress ) { UndoableEdit edit = editToBeRedone ( ) ; if ( edit == _NULL ) { throw new CannotRedoException ( ) ; } redoTo ( edit ) ; } else { super . redo ( ) ; } }
48833	public Key createKey ( String method , String key ) { KeyField keyImpl = new KeyField ( ) ; try { keyImpl . setMethod ( method ) ; keyImpl . setKey ( key ) ; } catch ( SdpException s ) { s . printStackTrace ( ) ; return _NULL ; } return keyImpl ; }
49117	public String displayStructureAsPlainText ( ) { createPlainTextStructureFormatter ( ) ; tagFormatter . openHeadingElement ( _CHAR file _CHAR , this . getFile ( ) . getAbsolutePath ( ) ) ; if ( this . getID3v1Tag ( ) != _NULL ) { this . getID3v1Tag ( ) . createStructure ( ) ; } if ( this . getID3v2Tag ( ) != _NULL ) { this . getID3v2Tag ( ) . createStructure ( ) ; } tagFormatter . closeHeadingElement ( _CHAR file _CHAR ) ; return tagFormatter . toString ( ) ; }
49240	public Object clone ( ) { PageFormat newPage ; try { newPage = ( PageFormat ) super . clone ( ) ; newPage . mPaper = ( Paper ) mPaper . clone ( ) ; } catch ( CloneNotSupportedException e ) { e . printStackTrace ( ) ; newPage = _NULL ; } return newPage ; }
49317	@ Override public void removeExecutor ( Executor ex ) { synchronized ( executors ) { if ( executors . remove ( ex ) && getState ( ) . isAvailable ( ) ) { try { ex . stop ( ) ; } catch ( LifecycleException e ) { log . error ( _CHAR Executor . stop _CHAR , e ) ; } } } }
49340	@ Override public boolean equals ( final Object o ) { if ( this == o ) { return _BOOL ; } else if ( o instanceof ByteSequence ) { final ByteSequence other = ( ByteSequence ) o ; return other . equals ( buffer , offset , length ) ; } else { return _BOOL ; } }
49964	public void put ( E e ) throws InterruptedException { checkNotNull ( e ) ; final ReentrantLock lock = this . lock ; lock . lockInterruptibly ( ) ; try { while ( count == items . length ) notFull . await ( ) ; enqueue ( e ) ; } finally { lock . unlock ( ) ; } }
50086	public boolean matches ( Line . Info info ) { if ( ! ( super . matches ( info ) ) ) { return _BOOL ; } if ( ! ( name . equals ( ( ( Info ) info ) . getName ( ) ) ) ) { return _BOOL ; } if ( ! ( isSource == ( ( Info ) info ) . isSource ( ) ) ) { return _BOOL ; } return _BOOL ; }
50100	private void enqueueTopoInfoToAllDSsExcept ( DataServerHandler excludedDS ) { int excludedServerId = excludedDS != _NULL ? excludedDS . getServerId ( ) : - _NUM ; if ( sendDSTopologyMsg ) { if ( excludedServerId != excludedDSForTopologyMsg ) { excludedDSForTopologyMsg =- _NUM ; } } else { sendDSTopologyMsg = _BOOL ; excludedDSForTopologyMsg = excludedServerId ; } }
50113	public int hashCode ( ) { if ( init_with_ip || wildcard ) { return this . getName ( ) . hashCode ( ) ; } try { getCanonName ( ) ; } catch ( UnknownHostException uhe ) { } if ( invalid || cname == _NULL ) return this . getName ( ) . hashCode ( ) ; else return this . cname . hashCode ( ) ; }
50165	private boolean needsSizeRotation ( ) { fileLock . readLock ( ) . lock ( ) ; try { if ( currentFile != _NULL ) { return configuration . getRotationFileSizeInByte ( ) != - _NUM && currentFile . length ( ) >= configuration . getRotationFileSizeInByte ( ) ; } } finally { fileLock . readLock ( ) . unlock ( ) ; } return _BOOL ; }
50270	public boolean equals ( Object obj ) { if ( this == obj ) { return _BOOL ; } else if ( obj instanceof ActivationGroupID ) { ActivationGroupID id = ( ActivationGroupID ) obj ; return ( uid . equals ( id . uid ) && system . equals ( id . system ) ) ; } else { return _BOOL ; } }
50473	public void nodeClicked ( RequestInvocationEvent event , int nodeID ) { try { AMViewBeanBase vb = getTabNodeAssociatedViewBean ( _NULL , nodeID ) ; passPgSessionMapEx ( vb ) ; vb . resetView ( ) ; vb . forwardTo ( getRequestContext ( ) ) ; } catch ( AMConsoleException e ) { AMModelBase . debug . error ( _CHAR AMPrimaryMastHeadViewBean . nodeClicked _CHAR , e ) ; forwardTo ( ) ; } }
50479	public void remove ( int index ) { Component comp = getComponent ( index ) ; if ( comp == leftComponent ) { leftComponent = _NULL ; } else if ( comp == rightComponent ) { rightComponent = _NULL ; } super . remove ( index ) ; revalidate ( ) ; repaint ( ) ; }
50488	public boolean verify ( SignerInformationVerifier verifier ) throws CMSException { Time signingTime = getSigningTime ( ) ; if ( verifier . hasAssociatedCertificate ( ) ) { if ( signingTime != _NULL ) { X509CertificateHolder dcv = verifier . getAssociatedCertificate ( ) ; if ( ! dcv . isValidOn ( signingTime . getDate ( ) ) ) { throw new CMSVerifierCertificateNotValidException ( _CHAR verifier not valid at signingTime _CHAR ) ; } } } return doVerify ( verifier ) ; }
50498	public static void deleteDirectory ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } if ( ! isSymlink ( directory ) ) { cleanDirectory ( directory ) ; } if ( ! directory . delete ( ) ) { String message = _CHAR Unable to delete directory _CHAR + directory + _CHAR . _CHAR ; throw new IOException ( message ) ; } }
50648	@ Override public void write ( int c ) throws IOException { if ( writer != _NULL ) { writer . write ( c ) ; } else { ensureOpen ( ) ; if ( nextChar >= bufferSize ) { reAllocBuff ( _NUM ) ; } cb [ nextChar ++ ] = ( char ) c ; } }
50651	public static String extractKeywords ( String url ) { if ( StringUtils . isEmpty ( url ) ) { return _NULL ; } for ( KeywordMatcher matcher : SEARCH_ENGINES ) { String keywords = matcher . matchKeywords ( url ) ; if ( keywords != _NULL ) { return keywords . replace ( _CHAR + _CHAR , _CHAR _CHAR ) ; } } return _NULL ; }
50679	void sendFile ( PrintStream ps ) throws IOException { if ( testNum == - _NUM ) { if ( ! Support_TestWebData . test0DataAvailable ) { log ( _CHAR test data was not initialized _CHAR ) ; return ; } sendFile ( ps , Support_TestWebData . test0Data ) ; } else { sendFile ( ps , Support_TestWebData . tests [ testNum ] ) ; } }
50744	private boolean checkIsSubClass ( String target ) { TypeElement type = element ; while ( _BOOL ) { if ( type == _NULL ) { return _BOOL ; } else if ( target . equals ( type . getQualifiedName ( ) . toString ( ) ) ) { return _BOOL ; } type = getParentClass ( type ) ; } }
51005	ChangelogState readOnDiskChangelogState ( ) throws ChangelogException { final ChangelogState state = new ChangelogState ( ) ; final File changelogPath = new File ( replicationRootPath ) ; synchronized ( domainsLock ) { readDomainsStateFile ( ) ; checkDomainDirectories ( changelogPath ) ; for ( final Entry < DN , String > domainEntry : domains . entrySet ( ) ) { readStateForDomain ( domainEntry , state ) ; } } return state ; }
51016	public static String map2OID ( String algName ) { checkCacheVersion ( ) ; String result = alg2OidMap . get ( algName . toUpperCase ( Locale . US ) ) ; if ( result != _NULL ) { return result ; } AlgNameMapperSource s = source ; if ( s != _NULL ) { return s . mapNameToOid ( algName ) ; } return _NULL ; }
51019	@ Override public void close ( ) { try { super . close ( ) ; if ( this . socket != _NULL ) { this . socket . close ( ) ; this . socket = _NULL ; } } catch ( Exception e ) { getErrorManager ( ) . error ( _CHAR Exception occurred when closing the socket handler _CHAR , e , ErrorManager . CLOSE_FAILURE ) ; } }
51058	protected void releaseContent ( ) { super . releaseContent ( ) ; try { if ( outputStream != _NULL ) { outputStream . close ( ) ; outputStream = _NULL ; } } catch ( IOException e ) { throw new PdfException ( PdfException . IoException , e ) ; } }
51088	public int compare ( File file1 , File file2 ) { long result = file1 . lastModified ( ) - file2 . lastModified ( ) ; if ( result < _NUM ) { return - _NUM ; } else if ( result > _NUM ) { return _NUM ; } else { return _NUM ; } }
51374	public static void clear ( String realmName ) { if ( classRefSchemesHash != _NULL && ! classRefSchemesHash . isEmpty ( ) ) { classRefSchemesHash . clear ( ) ; } if ( classRefLevelHash != _NULL && ! classRefLevelHash . isEmpty ( ) ) { classRefLevelHash . clear ( ) ; } if ( defaultClassRefHash != _NULL && ! defaultClassRefHash . isEmpty ( ) ) { defaultClassRefHash . clear ( ) ; } formatAttributeHash . clear ( ) ; }
51496	public static ImageTypeSpecifier createFromRenderedImage ( RenderedImage image ) { if ( image == _NULL ) { throw new IllegalArgumentException ( _CHAR image == _NULL ! _CHAR ) ; } if ( image instanceof BufferedImage ) { int bufferedImageType = ( ( BufferedImage ) image ) . getType ( ) ; if ( bufferedImageType != BufferedImage . TYPE_CUSTOM ) { return getSpecifier ( bufferedImageType ) ; } } return new ImageTypeSpecifier ( image ) ; }
51523	private synchronized void writeToOutputStream ( int oneByte ) { if ( mClosed ) { return ; } try { mOutputStream . write ( oneByte ) ; reportDecodedSizeIfApplicable ( ) ; } catch ( IOException e ) { handleIOExceptionWritingToStream ( e ) ; } }
51672	public void addSSOTokenListener ( SSOTokenListener listener ) throws SSOException { if ( ! ldapConnect ) { try { SessionListener ssoListener = new SSOSessionListener ( listener ) ; session . addSessionListener ( ssoListener ) ; } catch ( Exception e ) { SSOProviderImpl . debug . error ( _CHAR Could n _CHAR_CHAR + getTokenID ( ) . toString ( ) ) ; throw new SSOException ( e ) ; } } }
51777	public boolean isCompressionLossless ( ) { if ( ! canWriteCompressed ( ) ) { throw new UnsupportedOperationException ( _CHAR Compression not supported _CHAR ) ; } if ( getCompressionMode ( ) != MODE_EXPLICIT ) { throw new IllegalStateException ( _CHAR Compression mode not MODE_EXPLICIT ! _CHAR ) ; } if ( ( getCompressionTypes ( ) != _NULL ) && ( getCompressionType ( ) == _NULL ) ) { throw new IllegalStateException ( _CHAR No compression type set ! _CHAR ) ; } return _BOOL ; }
51840	public static void unregisterAll ( ) { synchronized ( allLists ) { for ( HandlerList h : allLists ) { synchronized ( h ) { for ( List < RegisteredListener > list : h . handlerslots . values ( ) ) { list . clear ( ) ; } h . handlers = _NULL ; } } } }
51886	public boolean write ( String p_design_name , boolean p_compat_mode ) { try { write_dsn_scope ( p_design_name , p_compat_mode ) ; output_file . close ( ) ; board_handling . userPrintln ( classname + _CHAR write DONE _CHAR ) ; } catch ( java . io . IOException exc ) { board_handling . userPrintln ( _CHAR unable to write dsn file _CHAR , exc ) ; return _BOOL ; } return _BOOL ; }
52082	Class < ? > findBoundCallerClass ( MemberName m ) throws IllegalAccessException { Class < ? > callerClass = _NULL ; if ( MethodHandleNatives . isCallerSensitive ( m ) ) { if ( hasPrivateAccess ( ) ) { callerClass = lookupClass ; } else { throw new IllegalAccessException ( _CHAR Attempt to lookup caller - sensitive method using restricted lookup object _CHAR ) ; } } return callerClass ; }
52088	public final double cumulative_trace_length ( ) { double result = _NUM ; Iterator < UndoObjectNode > it = undo_items . start_read_object ( ) ; for ( ; ; ) { UndoObjectStorable curr_item = undo_items . read_next ( it ) ; if ( curr_item == _NULL ) break ; if ( curr_item instanceof BrdTracep ) { result += ( ( BrdTracep ) curr_item ) . get_length ( ) ; } } return result ; }
52372	public void debug ( int level , String msg ) { switch ( level ) { case _NUM : debugInst . error ( msg ) ; break ; case _NUM : debugInst . warning ( msg ) ; break ; default : debugInst . message ( msg ) ; } }
52430	private boolean checkIsSubClass ( String target ) { TypeElement type = element ; while ( _BOOL ) { if ( type == _NULL ) { return _BOOL ; } else if ( target . equals ( type . getQualifiedName ( ) . toString ( ) ) ) { return _BOOL ; } type = getParentClass ( type ) ; } }
52808	public void finishResponse ( ) { try { if ( writer != _NULL ) { writer . close ( ) ; } else { if ( stream != _NULL ) stream . close ( ) ; } } catch ( IOException e ) { } }
53049	private SAXUnmarshallerHandler createUnmarshallerHandler ( Locator locator ) { SAXUnmarshallerHandler unmarshaller = new SAXUnmarshallerHandlerImpl ( this , grammarInfo ) ; try { if ( isValidating ( ) ) { unmarshaller = ValidatingUnmarshaller . create ( context . getGrammar ( ) , unmarshaller , locator ) ; } } catch ( JAXBException e ) { e . printStackTrace ( ) ; } return unmarshaller ; }
53192	public static Date toDate ( final Object value ) { if ( value instanceof Date ) { return ( Date ) value ; } if ( value == _NULL || value . equals ( _CHAR _NULL _CHAR ) ) { return _NULL ; } if ( value instanceof String ) { throw new IllegalStateException ( _CHAR fix me _CHAR ) ; } return _NULL ; }
53363	public int peekChar ( ) throws IOException { if ( fCurrentEntity . position == fCurrentEntity . count ) { load ( _NUM , _BOOL ) ; } int c = fCurrentEntity . ch [ fCurrentEntity . position ] ; if ( fCurrentEntity . isExternal ( ) ) { return c != _CHAR ? c : _CHAR ; } else { return c ; } }
53721	private void addWorkerFailed ( Worker w ) { final ReentrantLock mainLock = this . mainLock ; mainLock . lock ( ) ; try { if ( w != _NULL ) workers . remove ( w ) ; decrementWorkerCount ( ) ; tryTerminate ( ) ; } finally { mainLock . unlock ( ) ; } }
53879	@ Override public EnumEvalResult evaluate ( AciEvalContext evalCtx ) { switch ( userAttrType ) { case ROLEDN : case GROUPDN : case USERDN : return evalDNKeywords ( evalCtx ) ; case URL : return evalURL ( evalCtx ) ; default : return evalVAL ( evalCtx ) ; } }
53936	private JsonValue validateSession ( final String tokenId ) { try { final SSOToken ssoToken = ssoTokenManager . createSSOToken ( tokenId ) ; return validateSession ( ssoToken ) ; } catch ( SSOException e ) { if ( LOGGER . errorEnabled ( ) ) { LOGGER . error ( _CHAR SessionResource . validateSession ( ) : : Unable to validate token _CHAR + tokenId , e ) ; } return sessionResourceUtil . invalidSession ( ) ; } }
53954	public void resetKeyboardActions ( ) { for ( int counter = _NUM ; counter < _NUM ; counter ++ ) { InputMap inputMap = getInputMap ( counter , _BOOL ) ; if ( inputMap != _NULL ) { inputMap . clear ( ) ; } } ActionMap am = getActionMap ( _BOOL ) ; if ( am != _NULL ) { am . clear ( ) ; } }
54150	public static void deleteDirectory ( File directory ) throws IOException { if ( ! directory . exists ( ) ) { return ; } if ( ! isSymlink ( directory ) ) { cleanDirectory ( directory ) ; } if ( ! directory . delete ( ) ) { String message = _CHAR Unable to delete directory _CHAR + directory + _CHAR . _CHAR ; throw new IOException ( message ) ; } }
54154	public void close ( ) { flush ( ) ; if ( writer != _NULL ) { try { writer . close ( ) ; } catch ( IOException e ) { Debug . error ( fileName + _CHAR : FileHandler : Error closing writer _CHAR , e ) ; } } stopBufferTimer ( ) ; }
54335	private boolean warmUpTextLayoutCache ( ) { boolean result ; try { layout . draw ( DUMMY_CANVAS ) ; result = _BOOL ; } catch ( Exception e ) { WXLogUtils . e ( TAG , WXLogUtils . getStackTrace ( e ) ) ; result = _BOOL ; } return result ; }
54403	public void removePropertyChangeListener ( PropertyChangeListener listener ) { if ( listener == _NULL ) { return ; } if ( listener instanceof PropertyChangeListenerProxy ) { PropertyChangeListenerProxy proxy = ( PropertyChangeListenerProxy ) listener ; removePropertyChangeListener ( proxy . getPropertyName ( ) , proxy . getListener ( ) ) ; } else { this . map . remove ( _NULL , listener ) ; } }
54482	void addServiceListener ( String service ) { debug . message ( _CHAR Adding service listener _CHAR ) ; try { schemaManager . addListener ( this ) ; } catch ( Exception ee ) { debug . error ( _CHAR addServiceListener : _CHAR + ee . getMessage ( ) ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR Stack trace : _CHAR , ee ) ; } } }
54567	private String formatQuoteListToJSON ( List < StreamingQuote > quoteList ) { String jsonData = _NULL ; ObjectMapper mapper = new ObjectMapper ( ) ; try { jsonData = mapper . writeValueAsString ( quoteList ) ; } catch ( JsonProcessingException e ) { System . out . println ( _CHAR TimeRangeStreamingQuoteActionHandler . formatQuoteListToJSON ( ) : ERROR : JsonProcessingException on quote list ! ! ! _CHAR ) ; e . printStackTrace ( ) ; } return jsonData ; }
54792	public boolean read ( ObjectInputStream p_object_stream ) { try { WindowSavedAttributes saved_attributes = ( WindowSavedAttributes ) p_object_stream . readObject ( ) ; setBounds ( saved_attributes . bounds ) ; setVisible ( saved_attributes . is_visible ) ; return _BOOL ; } catch ( Exception e ) { System . out . println ( _CHAR SelectParameterWindow . read : read failed _CHAR ) ; return _BOOL ; } }
54944	protected boolean RelativeLocationPath ( ) throws javax . xml . transform . TransformerException { if ( ! Step ( ) ) { return _BOOL ; } while ( tokenIs ( _CHAR ) ) { nextToken ( ) ; if ( ! Step ( ) ) { error ( XPATHErrorResources . ER_EXPECTED_LOC_STEP , _NULL ) ; } } return _BOOL ; }
55178	@ Override public boolean equals ( final Object o ) { if ( this == o ) { return _BOOL ; } else if ( o instanceof ByteSequence ) { final ByteSequence other = ( ByteSequence ) o ; return other . equals ( buffer , _NUM , length ) ; } else { return _BOOL ; } }
55531	private void nextChunk ( ) throws IOException { chunkSize = getChunkSize ( ) ; if ( chunkSize < _NUM ) { throw new MalformedChunkCodingException ( _CHAR Negative chunk size _CHAR ) ; } bof = _BOOL ; pos = _NUM ; if ( chunkSize == _NUM ) { eof = _BOOL ; parseTrailerHeaders ( ) ; } }
55620	@ Override public void run ( ) { running = _BOOL ; try { listen ( ) ; } catch ( Exception x ) { log . error ( sm . getString ( _CHAR nioReceiver . run . fail _CHAR ) , x ) ; } finally { running = _BOOL ; } }
55793	public Object clone ( ) { DefaultMutableTreeNode newNode ; try { newNode = ( DefaultMutableTreeNode ) super . clone ( ) ; newNode . children = _NULL ; newNode . parent = _NULL ; } catch ( CloneNotSupportedException e ) { throw new Error ( e . toString ( ) ) ; } return newNode ; }
55879	@ Override public Socket accept ( ) throws IOException { if ( logger != _NULL ) { logger . println ( _CHAR SSLServerSocketImpl . accept .. _CHAR ) ; } SSLSocketImpl s = new SSLSocketImpl ( ( SSLParametersImpl ) sslParameters . clone ( ) ) ; implAccept ( s ) ; s . init ( ) ; if ( logger != _NULL ) { logger . println ( _CHAR SSLServerSocketImpl : accepted , initialized _CHAR ) ; } return s ; }
55889	public boolean remove ( MidiEvent event ) { synchronized ( eventsList ) { if ( set . remove ( event ) ) { int i = eventsList . indexOf ( event ) ; if ( i >= _NUM ) { eventsList . remove ( i ) ; return _BOOL ; } } } return _BOOL ; }
55982	public boolean isValid ( boolean possiblyResetIdleTime ) { try { if ( ldapConnect ) { return _BOOL ; } SessionState state = session . getState ( possiblyResetIdleTime ) ; return state == SessionState . VALID ; } catch ( Exception e ) { return _BOOL ; } }
55992	public static Boolean StringToBoolean ( String str ) throws Exception { if ( str == _NULL ) { return _NULL ; } if ( str . equals ( _CHAR _BOOL _CHAR ) || str . equals ( _CHAR _NUM _CHAR ) ) { return Boolean . TRUE ; } if ( str . equals ( _CHAR _BOOL _CHAR ) || str . equals ( _CHAR _NUM _CHAR ) ) { return Boolean . FALSE ; } throw new Exception ( ) ; }
56326	public static void processNotification ( String xml ) throws PolicyEvaluationException { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ResultsCacheUtil . processNotification ( ) : _CHAR + _CHAR recieved notification xml = _CHAR + xml ) ; } PolicyNotification pn = extractPolicyNotification ( xml ) ; if ( pn != _NULL ) { ResourceResultCache . processPolicyNotification ( pn ) ; } else { debug . error ( _CHAR ResultsCacheUtil . processPolicyNotification ( ) : _CHAR + _CHAR PolicyNotification is _NULL _CHAR ) ; } }
