34	@ SuppressLint ( _CHAR NewApi _CHAR ) public static Boolean fragmentsSupported ( ) { try { return ( android . os . Build . VERSION . SDK_INT >= android . os . Build . VERSION_CODES . HONEYCOMB ) && classExists ( _CHAR android . app . Fragment _CHAR ) ; } catch ( NoClassDefFoundError e ) { return _BOOL ; } }
62	public void onDown ( long time ) { mDragLock = DragLock . NONE ; if ( mOverviewAnimationType == OverviewAnimationType . NONE ) { stopScrollingMovement ( time ) ; } mScrollingTab = _NULL ; commitDiscard ( time , _BOOL ) ; }
79	protected boolean isXml ( HttpServletRequest request ) { String type = request . getContentType ( ) ; type = ! StringUtils . isEmpty ( type ) ? type : MediaType . APPLICATION_JSON_VALUE ; if ( request . getPathInfo ( ) . endsWith ( _CHAR . xml _CHAR ) ) { type = MediaType . APPLICATION_XML_VALUE ; } return isCompatibleWith ( type , MediaType . APPLICATION_XML ) ; }
158	@ Override public void removeStroke ( Symbolizer symbolizer ) { if ( symbolizer instanceof LineSymbolizer ) { LineSymbolizer line = ( LineSymbolizer ) symbolizer ; if ( line != _NULL ) { line . setStroke ( _NULL ) ; } } }
190	public void startTransition ( ) { if ( mViewToShow != _NULL ) { ViewParent parent = mViewToShow . getParent ( ) ; ( ( ViewGroup ) parent ) . removeView ( mViewToShow ) ; addChildView ( mViewToShow ) ; if ( mViewToHide != _NULL ) mViewToShow . setAlpha ( _NUM . _NUM ) ; } }
235	public static ExpirationDatePickerDialogFragment newInstance ( OCFile file , long chosenDateInMillis ) { Bundle arguments = new Bundle ( ) ; arguments . putParcelable ( ARG_FILE , file ) ; arguments . putLong ( ARG_CHOSEN_DATE_IN_MILLIS , chosenDateInMillis ) ; ExpirationDatePickerDialogFragment dialog = new ExpirationDatePickerDialogFragment ( ) ; dialog . setArguments ( arguments ) ; return dialog ; }
261	void checkReadLock ( ) throws DLIllegalStateException , LockingException { synchronized ( this ) { if ( ( _NULL == lockAcquireFuture ) || ( ! lockAcquireFuture . isDefined ( ) ) ) { throw new DLIllegalStateException ( _CHAR Attempt to check for lock before it has been acquired successfully '' ) ; } } readLock . checkOwnership ( ) ; }
276	protected void renderMenuFull ( Appendable writer , Map < String , Object > context , ModelMenu menu , StringBuffer sb ) throws IOException { try { executeMacro ( writer , sb . toString ( ) ) ; } catch ( TemplateException e ) { throw new IOException ( e ) ; } }
280	private void onSearchPanelFirstView ( ) { if ( mIsSearchPanelFullyPreloaded ) { logSearchPanelLoadDuration ( _BOOL , _NUM ) ; } else { mSearchViewStartTimeNs = System . nanoTime ( ) ; } }
304	@ Override public final void storeData ( final List < T > data ) { if ( log ( data ) && ! fallbackManager . isFallbackFileEmpty ( ) ) { if ( ! this . dataRecovery . isRunning ( ) ) { dataRecovery . setPersistenceManager ( this ) ; new Thread ( dataRecovery ) . start ( ) ; } } }
311	@ Override public boolean isEmpty ( ) { if ( dsc != _NULL ) { return dsc . isEmpty ( ) ; } else { return _BOOL ; } }
312	public void addCPItem ( CP cp ) { String uniq = cp . getUniq ( ) ; CP intern ; if ( ( intern = ( CP ) ( cpe . get ( uniq ) ) ) == _NULL ) { cpe . put ( uniq , cp ) ; cp . resolve ( this ) ; } }
319	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
378	public static boolean shouldShowRequestPermissionRationale ( Activity activity , String ... permissions ) { for ( String permission : permissions ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( activity , permission ) ) { return _BOOL ; } } return _BOOL ; }
388	@ Override public void flush ( ) throws IOException { try { out . flush ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
390	public int skipBytes ( int n ) throws IOException { int remaining = n ; while ( remaining > _NUM ) { remaining -= ( int ) bif . skip ( remaining ) ; } position += n ; return n ; }
445	@ Override public int compareTo ( StyleWrapper o ) { if ( o == _NULL ) { return - _NUM ; } String s1 = this . workspace + this . style ; String s2 = o . workspace + o . style ; return s1 . compareTo ( s2 ) ; }
460	private void removeAnyUnneededPeriodTypes ( ) { Set < PeriodTypeExtended > periodTypeXs = new HashSet < > ( periodTypeExtendedMap . values ( ) ) ; for ( PeriodTypeExtended periodTypeX : periodTypeXs ) { if ( periodTypeX . getRules ( ) . isEmpty ( ) ) { periodTypeExtendedMap . remove ( periodTypeX . getPeriodType ( ) ) ; } } }
508	@ Override public final void run ( ) { try { runImpl ( ) ; } catch ( Throwable e ) { log . warn ( _CHAR error handling ls ( _CHAR + getConnection ( ) . getIP ( ) + _CHAR ) message _CHAR + this , e ) ; } }
512	public static LazyElement parse ( String str ) throws LazyException { if ( str . startsWith ( _CHAR [ _CHAR ) ) { return new LazyArray ( str ) ; } else { return new LazyObject ( str ) ; } }
535	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
606	private void handleException ( final Call call , final Exception e , final Callback callback ) { if ( call . isCanceled ( ) ) { callback . onCancellation ( ) ; } else { callback . onFailure ( e ) ; } }
631	private void write ( String s ) throws SAXException { try { output . write ( s ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
679	public static void closeZipEntry ( ZipOutputStream out ) { try { out . closeEntry ( ) ; } catch ( Exception ex ) { throw new RuntimeException ( _CHAR Failed to close the current ZipEntry _CHAR , ex ) ; } }
693	@ Override public int hashCode ( ) { if ( _NULL != xxHash32 ) { return xxHash32 . hash ( data , _NUM , data . length , _NUM ) ; } int result = Arrays . hashCode ( data ) ; result = _NUM * result ; return result ; }
699	public Remote lookup ( String key ) throws RegistryException { try { return registry . lookup ( key ) ; } catch ( Exception e ) { throw new RegistryException ( _CHAR Failed to lookup with key [ _CHAR + key + _CHAR ] _CHAR , e ) ; } }
764	public boolean requiresReboot ( ) { if ( processActionRequired ( ) ) { throw new UnsupportedOperationException ( _CHAR The method is not available for configuration changes that need sending to the DAQ ! '' ) ; } else { return requiresReboot ; } }
818	private int computeSize ( Map < Integer , Integer [ ] > integerMap ) { int count = _NUM ; for ( Integer taxonId : integerMap . keySet ( ) ) { Integer value = integerMap . get ( taxonId ) [ _NUM ] ; if ( value != _NULL ) count += value ; } return count ; }
833	public static boolean checkDeniedPermissionsNeverAskAgain ( Object object , String deniedPerms ) { if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . M ) { boolean shouldShowRationale ; shouldShowRationale = shouldShowRequestPermissionRationale ( object , deniedPerms ) ; return ! shouldShowRationale ; } return _BOOL ; }
846	private boolean isValueSupported ( Object value ) { for ( int i = _NUM ; i < values . length ; i ++ ) { if ( value . equals ( values [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
877	private Uri whichContentStore ( ) { if ( Environment . getExternalStorageState ( ) . equals ( Environment . MEDIA_MOUNTED ) ) { return android . provider . MediaStore . Images . Media . EXTERNAL_CONTENT_URI ; } else { return android . provider . MediaStore . Images . Media . INTERNAL_CONTENT_URI ; } }
892	void reportNewIdleState ( boolean isIdle ) { synchronized ( mTrackedTasks ) { for ( JobStatus task : mTrackedTasks ) { task . idleConstraintSatisfied . set ( isIdle ) ; } } mStateChangedListener . onControllerStateChanged ( ) ; }
953	private static void addStonesStats ( Item item , Set < ? extends ManaStone > itemStones , CreatureGameStats < ? > cgs ) { if ( itemStones == _NULL || itemStones . size ( ) == _NUM ) { return ; } for ( ManaStone stone : itemStones ) { addStoneStats ( item , stone , cgs ) ; } }
984	public boolean detectAdBlockers ( Info info ) { if ( info != _NULL ) { info . method = Method . NONE ; info . details1 = _CHAR _CHAR ; info . details2 = _CHAR _CHAR ; } return detectAppNames ( info ) || ( detectHostName ( info ) ) || detectInHostFile ( info ) ; }
1045	public boolean isValidPoint ( double x , double y ) { if ( x < xval [ _NUM ] || x > xval [ xval . length - _NUM ] || y < yval [ _NUM ] || y > yval [ yval . length - _NUM ] ) { return _BOOL ; } else { return _BOOL ; } }
1113	private void parseExtras ( Bundle savedInstanceState ) { if ( getIntent ( ) != _NULL ) { mTitle = getIntent ( ) . getStringExtra ( EXTRA_TITLE ) ; } if ( savedInstanceState != _NULL ) { mTitle = savedInstanceState . getString ( EXTRA_TITLE ) ; } }
1116	private void executeMacro ( Appendable writer , String macroName , Map < String , Object > macroParameters ) throws IOException , TemplateException { if ( oneShotMacro . isEnabled ( ) ) { oneShotMacro . appendData ( writer , macroName , macroParameters ) ; } else { executeMacroReal ( writer , macroName , macroParameters ) ; } }
1123	private RealDistribution findKernel ( double lower , double upper ) { if ( lower < _NUM ) { return new NormalDistribution ( _NUM , _NUM . _NUM ) ; } else { return new NormalDistribution ( ( upper + lower + _NUM ) / _NUM , _NUM . _NUM ) ; } }
1136	public void reset ( ) { startTime = _NUM ; count = _NUM ; sum = _NUM ; minTime = Long . MAX_VALUE ; maxTime = _NUM ; notReliable = _BOOL ; }
1147	public void editRow ( int index ) { Row r = getRowValue ( index ) ; EditSourceDialog input = showEditDialog ( r . mySource ) ; if ( input . isOK ( ) ) { removeRow ( index ) ; createSource ( input . getUrl ( ) , input . getUiName ( ) ) ; } }
1160	public boolean matches ( String url , String httpMethod ) { if ( httpMethodPattern != _NULL ) { return urlPattern . matcher ( url ) . matches ( ) && httpMethodPattern . matcher ( httpMethod ) . matches ( ) ; } else { return urlPattern . matcher ( url ) . matches ( ) ; } }
1162	public int writeAnnotationSetRefList ( AnnotationSetRefList annotationSetRefList ) { int off = data . position ( ) ; writeInt ( annotationSetRefList . annotationSetRefItems . length ) ; for ( int annotationSetRefItem : annotationSetRefList . annotationSetRefItems ) { writeInt ( annotationSetRefItem ) ; } return off ; }
1208	public boolean hasBuildFile ( @ NotNull String moduleGradlePath ) { Module module = GradleUtil . findModuleByGradlePath ( myProject , moduleGradlePath ) ; if ( module == _NULL ) { return _BOOL ; } VirtualFile gradleBuildFile = GradleUtil . getGradleBuildFile ( module ) ; return gradleBuildFile != _NULL && gradleBuildFile . exists ( ) ; }
1213	private static boolean hasSelfPermission ( Context context , String permission ) { try { return PermissionChecker . checkSelfPermission ( context , permission ) == PackageManager . PERMISSION_GRANTED ; } catch ( RuntimeException t ) { return _BOOL ; } }
1219	public void transformPath ( ) { Matrix matrix = new Matrix ( ) ; mPreviousChartRect . set ( getScreenX ( mXMinForPathCalcs ) , getScreenY ( mYMaxForPathCalcs ) , getScreenX ( mXMaxForPathCalcs ) , getScreenY ( mYMinForPathCalcs ) ) ; matrix . setRectToRect ( mChartRect , mPreviousChartRect , Matrix . ScaleToFit . FILL ) ; mPath . transform ( matrix ) ; updatePathCalcs ( ) ; postInvalidateOnAnimation ( ) ; }
1279	@ Override public boolean isPanelEnabled ( ) { if ( groupCheckbox == _NULL ) { return _BOOL ; } else { return groupCheckbox . isSelected ( ) ; } }
1324	boolean isPresent ( String name ) { if ( f == _NULL ) { return _BOOL ; } else { return getFeature ( name ) != _NULL ; } }
1325	public void applyMirroredCorrection ( ResultPoint [ ] points ) { if ( ! mirrored || points == _NULL || points . length < _NUM ) { return ; } ResultPoint bottomLeft = points [ _NUM ] ; points [ _NUM ] = points [ _NUM ] ; points [ _NUM ] = bottomLeft ; }
1334	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
1337	@ Override public boolean contains ( byte item ) { for ( int i = _NUM ; i < data . length ; ++ i ) { if ( data [ i ] == item ) { return _BOOL ; } } return _BOOL ; }
1357	public void actionPerformed ( ActionEvent ev ) { String fontName = ProgramProperties . get ( _CHAR Font _CHAR , _CHAR Arial - PLAIN - _NUM _CHAR ) ; fontName = JOptionPane . showInputDialog ( _CHAR Enter font _CHAR , fontName ) ; if ( fontName != _NULL ) { execute ( _CHAR set font = _CHAR_CHAR_CHAR ; _CHAR ) ; ProgramProperties . put ( _CHAR Font _CHAR , fontName ) ; } }
1394	public void notifyListeners ( final Long tagId ) { if ( LOGGER . isTraceEnabled ( ) ) { LOGGER . trace ( _CHAR notifyListeners - notify the Tag with id _CHAR + tagId + _CHAR has changed . Number of listeners : _CHAR + this . listeners . size ( ) ) ; } for ( ConfigurationUpdateListener listener : this . listeners ) { listener . notifyOnConfigurationUpdate ( tagId ) ; } }
1418	protected SchedulerDriver createInternal ( final Scheduler scheduler , final FrameworkInfo frameworkInfo , final String masterUrl , final Credential credential ) { if ( credential == _NULL ) { return new MesosSchedulerDriver ( scheduler , frameworkInfo , masterUrl ) ; } else { return new MesosSchedulerDriver ( scheduler , frameworkInfo , masterUrl , credential ) ; } }
1444	public void clear ( ) { BasicBlock b ; for ( BasicBlock basicBlock : q ) { b = ( basicBlock ) ; b . inq = _BOOL ; } q . clear ( ) ; }
1460	public static void runTask ( String id , Runnable task , long delay ) { if ( _CHAR _CHAR . equals ( id ) ) { HANDLER . postDelayed ( task , delay ) ; return ; } long time = SystemClock . uptimeMillis ( ) + delay ; HANDLER . postAtTime ( task , nextToken ( id ) , time ) ; }
1470	private void log ( final RuleTagCacheObject ruleTagCacheObject ) { if ( RULELOG . isInfoEnabled ( ) ) { RULELOG . info ( ruleTagCacheObject . toString ( ) ) ; } else if ( updateCount % _NUM == _NUM ) { RULELOG . warn ( _CHAR Total rule updates to the cache so far : _CHAR + updateCount ) ; } }
1484	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( table != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof ColorMap ) { ColorMap newValue = ( ColorMap ) undoRedoObject . getNewValue ( ) ; populateField ( newValue ) ; } } }
1504	public static FloatBuffer createFloatBuffer ( float [ ] coords ) { ByteBuffer bb = ByteBuffer . allocateDirect ( coords . length * SIZEOF_FLOAT ) ; bb . order ( ByteOrder . nativeOrder ( ) ) ; FloatBuffer fb = bb . asFloatBuffer ( ) ; fb . put ( coords ) ; fb . position ( _NUM ) ; return fb ; }
1551	@ Override public Node nextSibling ( ) { if ( fCurrentNode == _NULL ) return _NULL ; Node node = getNextSibling ( fCurrentNode ) ; if ( node != _NULL ) { fCurrentNode = node ; } return node ; }
1572	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
1589	@ Override public void showProgress ( ) { if ( mShotRecycler . getVisibility ( ) == View . VISIBLE && mBrowseAdapter . getItemCount ( ) > _NUM ) { mSwipeRefreshLayout . setRefreshing ( _BOOL ) ; } else { mRecyclerProgress . setVisibility ( View . VISIBLE ) ; } }
1607	public void deleteImage ( ) { if ( cameraBitmapPath != _NULL ) { File image = new File ( cameraBitmapPath ) ; if ( image . exists ( ) ) { image . delete ( ) ; } } }
1621	public final Abstraction deriveNewAbstractionOnThrow ( Stmt throwStmt ) { assert ! this . exceptionThrown ; Abstraction abs = clone ( ) ; abs . currentStmt = throwStmt ; abs . sourceContext = _NULL ; abs . exceptionThrown = _BOOL ; return abs ; }
1641	public boolean positiveOrNull ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( sign > _NUM ) || ( ( mant [ mant . length - _NUM ] == _NUM ) && ! isInfinite ( ) ) ; }
1663	@ Override public Node previousSibling ( ) { if ( fCurrentNode == _NULL ) return _NULL ; Node node = getPreviousSibling ( fCurrentNode ) ; if ( node != _NULL ) { fCurrentNode = node ; } return node ; }
1696	public void dismissLoadingDialog ( ) { Fragment frag = getSupportFragmentManager ( ) . findFragmentByTag ( DIALOG_WAIT_TAG ) ; if ( frag != _NULL ) { Log_OC . d ( TAG , _CHAR dismiss loading dialog _CHAR ) ; LoadingDialog loading = ( LoadingDialog ) frag ; loading . dismissAllowingStateLoss ( ) ; } }
1697	public void outputData ( ) { out . println ( _CHAR The res : _CHAR ) ; for ( int i = _NUM ; i < allNum ; i ++ ) { for ( int j = _NUM ; j < stripe_unit_size ; j ++ ) { out . printf ( _CHAR % c _CHAR , check_data [ i ] [ j ] ) ; } } }
1742	public void makeCurrent ( EGLSurface eglSurface ) { if ( eGLDisplay == EGL14 . EGL_NO_DISPLAY ) { Log . d ( TAG , _CHAR NOTE : makeCurrent w / o display _CHAR ) ; } if ( ! EGL14 . eglMakeCurrent ( eGLDisplay , eglSurface , eglSurface , eGLContext ) ) { throw new RuntimeException ( _CHAR eglMakeCurrent failed _CHAR ) ; } }
1748	public static float convertSpToPixel ( float sp , Context context ) { if ( pxForSp . containsKey ( sp ) ) { return pxForSp . get ( sp ) ; } float px = TypedValue . applyDimension ( TypedValue . COMPLEX_UNIT_SP , sp , context . getResources ( ) . getDisplayMetrics ( ) ) ; pxForSp . put ( sp , px ) ; return px ; }
1772	public ECDSASignature toCanonicalised ( ) { if ( ! isCanonical ( ) ) { return new ECDSASignature ( r , CURVE . getN ( ) . subtract ( s ) ) ; } else { return this ; } }
1782	public void cleanup ( ) { if ( ! initedNative ) return ; NativeInterface . arwStopRunning ( ) ; NativeInterface . arwShutdownAR ( ) ; if ( debugBitmap != _NULL ) debugBitmap . recycle ( ) ; debugBitmap = _NULL ; initedNative = _BOOL ; }
1785	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
1796	static protected boolean hasVowel ( String [ ] phones , int index ) { for ( int i = index ; i < phones . length ; i ++ ) { if ( isVowel ( phones [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
1831	private boolean unseenNode ( Node candidate ) { if ( candidate != _NULL && ! alreadySeen . contains ( candidate ) ) { current = candidate ; alreadySeen . add ( current ) ; return _BOOL ; } return _BOOL ; }
1849	public static Bitmap scaleImage ( Bitmap src , float scaleWidth , float scaleHeight ) { if ( src == _NULL ) { return _NULL ; } Matrix matrix = new Matrix ( ) ; matrix . postScale ( scaleWidth , scaleHeight ) ; return Bitmap . createBitmap ( src , _NUM , _NUM , src . getWidth ( ) , src . getHeight ( ) , matrix , _BOOL ) ; }
1886	public void updateForTabCount ( int tabCount , boolean incognito ) { if ( tabCount == mTabCount && incognito == mIncognito ) return ; mTabCount = tabCount ; mIncognito = incognito ; float textSizePx = mTabCount > _NUM ? mDoubleDigitTextSize : mSingleDigitTextSize ; mTextPaint . setTextSize ( textSizePx ) ; invalidateSelf ( ) ; }
1926	private int findNextIndexNonZero ( double [ ] contour , int current ) { for ( int i = current + _NUM ; i < contour . length ; i ++ ) { if ( contour [ i ] != _NUM ) { return i ; } } return - _NUM ; }
1930	public final void encrypt ( ByteBuffer buf ) { if ( ! isEnabled ) { isEnabled = _BOOL ; log . debug ( _CHAR packet is not encrypted ... send in SM_KEY _CHAR ) ; return ; } packetKey . encrypt ( buf ) ; }
1947	public boolean isPluginEnabled ( Plugin plugin ) { if ( ( plugin != _NULL ) && ( plugins . contains ( plugin ) ) ) { return plugin . isEnabled ( ) ; } else { return _BOOL ; } }
1973	public static void exec ( Runnable task ) { if ( isCurrent ( ) ) { task . run ( ) ; } else { nextTick ( task ) ; } }
1988	private boolean atTokenSequence ( ProjectViewTokenType ... kinds ) { for ( int i = _NUM ; i < kinds . length ; i ++ ) { if ( builder . lookAhead ( i ) != kinds [ i ] ) { return _BOOL ; } } return _BOOL ; }
2016	private boolean checkPlayServices ( ) { GoogleApiAvailability apiAvailability = GoogleApiAvailability . getInstance ( ) ; int resultCode = apiAvailability . isGooglePlayServicesAvailable ( context . getApplicationContext ( ) ) ; if ( resultCode != ConnectionResult . SUCCESS ) { return _BOOL ; } return _BOOL ; }
2019	private boolean isMenuDrawerOpen ( ) { if ( mDrawerLayout != _NULL ) { return mDrawerLayout . isDrawerOpen ( MENU_DRAWER_GRAVITY ) ; } else { return _BOOL ; } }
2030	@ Override public void startElement ( QName element , XMLAttributes attributes , Augmentations augs ) throws XNIException { if ( fNamespaces ) { handleStartElement ( element , attributes , augs , _BOOL ) ; } else if ( fDocumentHandler != _NULL ) { fDocumentHandler . startElement ( element , attributes , augs ) ; } }
2032	public static void record ( LogInfo logPhase ) { try { RLOG . get ( ) . info . add ( logPhase ) ; } catch ( NullPointerException ignored ) { LOG . warn ( _CHAR Attempted to append log info while request log object was uninitialized : { } _CHAR , logPhase . getClass ( ) . getSimpleName ( ) ) ; } }
2044	public boolean isApproveData ( ) { for ( DataSet dataSet : getDataSets ( ) ) { if ( dataSet != _NULL && dataSet . getWorkflow ( ) != _NULL ) { return _BOOL ; } } return _BOOL ; }
2069	static boolean isFieldFull ( ) { for ( int y = _NUM ; y < field_size ; y ++ ) { for ( int x = _NUM ; x < field_size ; x ++ ) { if ( field [ x ] [ y ] == dotEmpty ) return _BOOL ; } } return _BOOL ; }
2095	@ Override public boolean isXIncludeAware ( ) { try { return domParser . getFeature ( XINCLUDE_FEATURE ) ; } catch ( SAXException exc ) { return _BOOL ; } }
2136	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException ex ) { throw new InternalError ( ) ; } }
2193	protected final void endNamespaceMapping ( ) throws SAXException { int count = fNamespaceContext . getDeclaredPrefixCount ( ) ; if ( count > _NUM ) { for ( int i = _NUM ; i < count ; i ++ ) { fContentHandler . endPrefixMapping ( fNamespaceContext . getDeclaredPrefixAt ( i ) ) ; } } }
2210	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
2256	private ProxySelector installSimpleHostFilter ( Dict proxySettings , ProxySelector result ) { if ( isActive ( proxySettings . get ( _CHAR ExcludeSimpleHostnames _CHAR ) ) ) { List < UriFilter > localBypassFilter = new ArrayList < UriFilter > ( ) ; localBypassFilter . add ( new IELocalByPassFilter ( ) ) ; result = new ProxyBypassListSelector ( localBypassFilter , result ) ; } return result ; }
2268	public static final void show ( Window owner , Settings settings ) { SettingsDialog dialog = new SettingsDialog ( owner , settings ) ; dialog . setLocationRelativeTo ( owner ) ; dialog . setVisible ( _BOOL ) ; if ( ! dialog . canceled ) { dialog . pnlSettings . setSettings ( settings ) ; } }
2291	public String formatTweetText ( CustomStatus status ) { if ( status . isRetweet ( ) ) { return _CHAR RT _CHAR + formatText ( status . getRetweetedStatus ( ) . getText ( ) ) ; } else { return formatText ( status . getText ( ) ) ; } }
2310	public int addNewSegment ( int index ) { WKTSegmentList newSegmentList = new WKTSegmentList ( ) ; newSegmentList . addPoint ( new WKTPoint ( ) ) ; if ( geometryType . getNumOfPoints ( ) > _NUM ) { newSegmentList . addPoint ( new WKTPoint ( ) ) ; } return addSegmentList ( index , newSegmentList ) ; }
2377	protected void reset ( ) throws XNIException { if ( fValidationManager != _NULL ) fValidationManager . reset ( ) ; int count = fComponents . size ( ) ; for ( int i = _NUM ; i < count ; i ++ ) { XMLComponent c = ( XMLComponent ) fComponents . get ( i ) ; c . reset ( this ) ; } }
2416	private static boolean fieldExists ( List < DataSourceFieldInterface > processedFieldList , String fieldName ) { for ( DataSourceFieldInterface field : processedFieldList ) { if ( field . getName ( ) . compareTo ( fieldName ) == _NUM ) { return _BOOL ; } } return _BOOL ; }
2435	@ Override public boolean accept ( File dir , String name ) { for ( String name2 : names ) { if ( caseSensitivity . checkEquals ( name , name2 ) ) { return _BOOL ; } } return _BOOL ; }
2457	private void push ( JSONObject jo ) throws JSONException { if ( this . top >= maxdepth ) { throw new JSONException ( _CHAR Nesting too deep . '' ) ; } this . stack [ this . top ] = jo ; this . mode = jo == _NULL ? _CHAR : _CHAR ; this . top += _NUM ; }
2473	@ Override public void write ( char [ ] cbuf , int off , int len ) throws IOException { if ( xmlPrologWriter != _NULL ) { detectEncoding ( cbuf , off , len ) ; } else { writer . write ( cbuf , off , len ) ; } }
2539	private void fixScrollOffset ( ) { if ( offsetScroll < _NUM ) { offsetScroll = _NUM ; } if ( offsetScroll > getMaxOffsetX ( ) ) { offsetScroll = getMaxOffsetX ( ) ; } }
2585	private void releaseEquimentWriteLock ( final Long equipmentId ) { if ( subEquipmentCache . isWriteLockedByCurrentThread ( equipmentId ) ) { subEquipmentCache . releaseWriteLockOnKey ( equipmentId ) ; } if ( equipmentCache . isWriteLockedByCurrentThread ( equipmentId ) ) { equipmentCache . releaseWriteLockOnKey ( equipmentId ) ; } }
2615	public boolean isAllViewersUptodate ( ) { for ( IDirectableViewer viewer : viewers ) { if ( ! viewer . isUptoDate ( ) ) { return _BOOL ; } } return _BOOL ; }
2665	public synchronized void pause ( ) { if ( ! isPaused ( ) ) { setPaused ( _BOOL ) ; if ( line != _NULL ) { line . stop ( ) ; } } }
2666	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( spinner != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof Integer ) { Integer oldValue = ( Integer ) undoRedoObject . getOldValue ( ) ; internalSetValue ( oldValue ) ; } } }
2701	public synchronized boolean canThreadDecoding ( Thread t ) { ThreadStatus status = mThreadStatus . get ( t ) ; if ( status == _NULL ) { return _BOOL ; } boolean result = ( status . mState != State . CANCEL ) ; return result ; }
2707	public String stringValue ( ) { if ( actualValue == _NULL ) { return normalizedValue ; } else { return actualValue . toString ( ) ; } }
2713	public static int hash ( String key , int bitSize , String input ) { int fullHash = ( key + input ) . hashCode ( ) ; int bitLimitedHash = fullHash ; if ( bitSize < _NUM ) { bitLimitedHash = ( _NUM >> > ( _NUM - bitSize ) ) & fullHash ; } return bitLimitedHash ; }
2714	private void populateConnections ( final List < ConfiguredConnectionGroupDetails > groups ) { rootItem . getChildren ( ) . clear ( ) ; rootItemProperties . getChildren ( ) . clear ( ) ; final List < ConnectionTreeItemProperties > treeItemGroupProperties = new ArrayList < > ( ) ; final List < ConnectionTreeItemProperties > treeItemConnectionProperties = new ArrayList < > ( ) ; buildTree ( rootItemProperties , treeItemGroupProperties , treeItemConnectionProperties ) ; addToTree ( rootItem , rootItemProperties ) ; }
2747	public AemDropdown selectByText ( String text ) { if ( text == _NULL ) { return this ; } expandDropdown ( ) ; getItemByTextEquals ( text ) . click ( ) ; return this ; }
2779	public static String toString ( Object [ ] objects , String tag ) { StringBuilder sb = new StringBuilder ( ) ; for ( Object object : objects ) { sb . append ( object ) ; sb . append ( tag ) ; } return sb . toString ( ) ; }
2835	@ Override public void close ( ) throws IOException { try { in . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
2838	public static String capitalize ( String s ) { if ( s . charAt ( _NUM ) >= _CHAR ) { return ( ( char ) ( s . charAt ( _NUM ) + ( _CHAR - _CHAR ) ) + s . substring ( _NUM ) ) ; } else { return s ; } }
2868	public boolean isValidPoint ( double x ) { if ( x < knots [ _NUM ] || x > knots [ n ] ) { return _BOOL ; } else { return _BOOL ; } }
2873	protected void clean ( ) { if ( dirty ) { LU = _NULL ; HQR = _NULL ; CHOL = _NULL ; dirty = _BOOL ; } }
2897	void assignThisToLocal ( Local left ) { PurityNode node = PurityThisNode . node ; localsRemove ( left ) ; localsPut ( left , node ) ; nodes . add ( node ) ; paramNodes . add ( node ) ; if ( doCheck ) sanityCheck ( ) ; }
2907	public void updateSymbol ( PolygonSymbolizer polygonSymbolizer ) { for ( VendorOptionInterface extension : vendorOptionList ) { boolean displayVendorOption = VendorOptionManager . getInstance ( ) . isAllowed ( vendorOptionVersionList , extension . getVendorOption ( ) ) ; if ( displayVendorOption ) { extension . updateSymbol ( polygonSymbolizer ) ; } } }
2947	protected Entity cacheLoadOrStore ( Entity entity ) { Entity cachedEntity = entityCache . findInCache ( entity . getClass ( ) , entity . getId ( ) ) ; if ( cachedEntity != _NULL ) { return cachedEntity ; } entityCache . put ( entity , _BOOL ) ; return entity ; }
2968	private boolean resultExists ( List < CodeMatchResult > lst , int value ) { for ( CodeMatchResult s : lst ) { if ( s . getLineNumber ( ) == value ) { return _BOOL ; } } return _BOOL ; }
2984	public static BufferedReader createBufferedReaderFromResource ( final String name ) throws IOException { final InputStream resourceAsStream ; resourceAsStream = StatisticalReferenceDatasetFactory . class . getResourceAsStream ( name ) ; if ( resourceAsStream == _NULL ) { throw new IOException ( _CHAR could not find resource _CHAR + name ) ; } return new BufferedReader ( new InputStreamReader ( resourceAsStream ) ) ; }
2988	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
2995	private void showAtCalculatedPosition ( ) { if ( mAnchorBelow ) { showAtLocation ( mAnchorView . getRootView ( ) , Gravity . TOP | Gravity . START , mXPosition , mYPosition ) ; } else { showAtLocation ( mAnchorView . getRootView ( ) , Gravity . BOTTOM | Gravity . START , mXPosition , mYPosition ) ; } }
3000	public static void createWriter ( String fileName ) { try { createWriter ( new FileOutputStream ( fileName ) ) ; } catch ( FileNotFoundException e ) { e . printStackTrace ( ) ; } }
3006	public void wipeUser ( int handle ) { try { mService . wipeUser ( handle ) ; } catch ( RemoteException re ) { Log . w ( TAG , _CHAR Could not wipe user _CHAR + handle ) ; } }
3024	public static byte [ ] hexToArray ( final String data ) throws ConversionException { try { return Hex . decodeHex ( data . toCharArray ( ) ) ; } catch ( DecoderException e ) { throw new ConversionException ( _CHAR Can not convert given hex text into plain text _CHAR , e ) ; } }
3026	public boolean isRecursiveImport ( ) { if ( recursiveImport == _NULL ) { return _BOOL ; } else { return recursiveImport ; } }
3028	private void ensureDataConformance ( final double [ ] x , final double [ ] y ) throws MathIllegalArgumentException , NullArgumentException { if ( x == _NULL || y == _NULL ) { throw new NullArgumentException ( ) ; } if ( x . length == _NUM || y . length == _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . NO_DATA ) ; } }
3033	public static JSONObject toJSONObject ( String string ) throws JSONException { JSONObject o = new JSONObject ( ) ; XMLTokener x = new XMLTokener ( string ) ; while ( x . more ( ) && x . skipPast ( _CHAR < _CHAR ) ) { parse ( x , o , _NULL ) ; } return o ; }
3052	public void reportIgnored ( @ NonNull String module , @ NonNull String path ) { List < String > list = myNotMigrated . get ( module ) ; if ( list == _NULL ) { list = Lists . newArrayList ( ) ; myNotMigrated . put ( module , list ) ; } list . add ( path ) ; }
3058	public static final int find ( int [ ] a , int key , int length ) { for ( int i = _NUM ; i < length ; i ++ ) { if ( a [ i ] == key ) { return i ; } } return - _NUM ; }
3101	@ Override public void populateField ( String value ) { if ( textField != _NULL ) { textField . setText ( value ) ; UndoManager . getInstance ( ) . addUndoEvent ( new UndoEvent ( this , getFieldId ( ) , oldValueObj , value ) ) ; oldValueObj = value ; valueUpdated ( ) ; } }
3115	@ Override public Object oneTransition ( QName elementName , int [ ] currentState , SubstitutionGroupHandler subGroupHandler ) { if ( currentState [ _NUM ] < _NUM ) { currentState [ _NUM ] = XSCMValidator . SUBSEQUENT_ERROR ; return _NULL ; } currentState [ _NUM ] = XSCMValidator . FIRST_ERROR ; return _NULL ; }
3136	public void saveLegendImage ( BufferedImage image , String extension , File fileToSave ) { try { saveGridImage ( image , extension , fileToSave , legendOptionData . getDpi ( ) ) ; } catch ( IOException e ) { ConsoleManager . getInstance ( ) . exception ( this , e ) ; } }
3141	protected int indexOf ( String buffer , int start , int end , char ch ) { for ( int i = start ; i < end ; i ++ ) { if ( buffer . charAt ( i ) == ch ) { return i ; } } return - _NUM ; }
3174	public JToolTip createToolTip ( ) { if ( m_customToolTip == _NULL ) { return super . createToolTip ( ) ; } else { return m_customToolTip ; } }
3212	public void damageReport ( VisualItem item , Rectangle2D region ) { for ( int i = _NUM ; i < m_displays . size ( ) ; ++ i ) { Display d = getDisplay ( i ) ; if ( d . getPredicate ( ) . getBoolean ( item ) ) { d . damageReport ( region ) ; } } }
3217	public static int calculateDeliveryControllerCount ( int vmcount ) { int itmp = _NUM ; Float f = ( vmcount / _NUM . _NUM ) ; f = ( float ) Math . ceil ( f ) ; f ++ ; itmp = f . intValue ( ) ; return itmp ; }
3293	@ Override public void maybeStartTrackingJob ( JobStatus taskStatus ) { if ( taskStatus . hasIdleConstraint ( ) ) { synchronized ( mTrackedTasks ) { mTrackedTasks . add ( taskStatus ) ; taskStatus . idleConstraintSatisfied . set ( mIdleTracker . isIdle ( ) ) ; } } }
3308	public void insert ( ForceItem item ) { try { insert ( item , root , xMin , yMin , xMax , yMax ) ; } catch ( StackOverflowError e ) { e . printStackTrace ( ) ; } }
3311	public boolean onUpdateViewAnimation ( long time , boolean jumpToEnd ) { boolean finished = _BOOL ; if ( mViewAnimations != _NULL ) { finished = ! mViewAnimations . isRunning ( ) ; finishAnimationsIfDone ( time , jumpToEnd ) ; } return finished ; }
3369	public static boolean canUseItem ( Player player , Item item ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canUseItem . ordinal ( ) ] ) { if ( ! restrictions . canUseItem ( player , item ) ) { return _BOOL ; } } return _BOOL ; }
3413	public static void sendEvent ( final ReactContext context , final String eventName , final WritableMap params ) { if ( context . hasActiveCatalystInstance ( ) ) { context . getJSModule ( DeviceEventManagerModule . RCTDeviceEventEmitter . class ) . emit ( eventName , params ) ; } else { Log . d ( TAG , _CHAR Waiting for CatalystInstance before sending event '' ) ; } }
3416	public double sumOfValues ( ) { double dSum = _NUM ; Iterator iValIter = hDistro . values ( ) . iterator ( ) ; while ( iValIter . hasNext ( ) ) { dSum += ( Double ) iValIter . next ( ) ; } return dSum ; }
3419	private static int skipWhiteSpace ( BitArray row ) throws NotFoundException { int width = row . getSize ( ) ; int endStart = row . getNextSet ( _NUM ) ; if ( endStart == width ) { throw NotFoundException . getNotFoundInstance ( ) ; } return endStart ; }
3446	public KeyPair createKeys ( ) throws NoSuchAlgorithmException , InvalidAlgorithmParameterException , InvalidKeySpecException { DHPublicKey publicKey = ( DHPublicKey ) this . getValueLinkPublicKey ( ) ; DHParameterSpec dhParamSpec = publicKey . getParams ( ) ; KeyPairGenerator keyGen = KeyPairGenerator . getInstance ( _CHAR DH _CHAR ) ; keyGen . initialize ( dhParamSpec ) ; KeyPair keyPair = keyGen . generateKeyPair ( ) ; return keyPair ; }
3452	public static int toInt ( Object obj ) { try { return Integer . parseInt ( obj . toString ( ) ) ; } catch ( Exception e ) { return - _NUM ; } }
3462	public static String removeQueryStringFromTarget ( String target ) { if ( UtilValidate . isEmpty ( target ) ) return _NULL ; int queryStart = target . indexOf ( _CHAR ) ; if ( queryStart < _NUM ) { return target ; } return target . substring ( _NUM , queryStart ) ; }
3469	public boolean start ( ) { if ( ! mIsStarted && ! mIsStopped ) { mStopWatch . start ( ) ; mIsStarted = _BOOL ; return _BOOL ; } return _BOOL ; }
3518	public boolean intersects ( S2CellUnion union ) { for ( S2CellId id : union ) { if ( intersects ( id ) ) { return _BOOL ; } } return _BOOL ; }
3559	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
3561	private View fillFromTop ( int nextTop ) { mFirstPosition = Math . min ( mFirstPosition , - _NUM ) ; mFirstPosition = Math . min ( mFirstPosition , mItemCount - _NUM ) ; if ( mFirstPosition < _NUM ) { mFirstPosition = _NUM ; } return fillDown ( mFirstPosition , nextTop ) ; }
3601	@ Override protected void onPrimaryColorChanged ( boolean shouldAnimate ) { if ( mBackgroundColorSet ) return ; mBackgroundColorSet = _BOOL ; int primaryColor = getToolbarDataProvider ( ) . getPrimaryColor ( ) ; getBackground ( ) . setColor ( primaryColor ) ; mUseDarkColors = ! ColorUtils . shoudUseLightForegroundOnBackground ( primaryColor ) ; updateVisualsForState ( ) ; }
3658	public static IngredientsFragment newInstance ( Recipe recipe , int sectionNumber ) { IngredientsFragment fragment = new IngredientsFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
3780	private int transition ( int state , int symbol ) { for ( int i = state ; i < transitions . length ; i ++ ) { if ( ( transitions [ i ] % vocabularySize ) == symbol ) { return ( transitions [ i ] / vocabularySize ) ; } } return - _NUM ; }
3791	public synchronized void commit ( ) { synchronized ( mutex ) { Map < Column , Set < Interval >> temp = workingIntervals ; workingIntervals = Collections . synchronizedMap ( new LinkedHashMap < > ( ) ) ; availableIntervalsRef . set ( Collections . unmodifiableMap ( new LinkedHashMap < > ( temp ) ) ) ; super . columns = new LinkedHashSet < > ( temp . keySet ( ) ) ; } }
3821	public static void clearAll ( ) { if ( sManagers == _NULL ) return ; for ( int i = _NUM ; i < sManagers . size ( ) ; ++ i ) { MediaNotificationManager manager = sManagers . valueAt ( i ) ; manager . clearNotification ( ) ; } sManagers . clear ( ) ; }
3825	public static boolean isAlphanumeric ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { char c = s . charAt ( i ) ; if ( ! isLetterOrDigit ( c ) ) return _BOOL ; } return _BOOL ; }
3862	public boolean add ( Node n ) { int num = n . getNumber ( ) ; if ( ! get ( num ) ) { set ( num ) ; return _BOOL ; } else return _BOOL ; }
3881	public boolean strictlyNegative ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( sign < _NUM ) && ( ( mant [ mant . length - _NUM ] != _NUM ) || isInfinite ( ) ) ; }
3887	public void whitelistRequests ( String [ ] patterns , int responseCode ) { if ( patterns == _NULL || patterns . length == _NUM ) { this . enableEmptyWhitelist ( responseCode ) ; } else { this . whitelistRequests ( Arrays . asList ( patterns ) , responseCode ) ; } }
3932	public String toString ( ) { StringBuilder buffer = new StringBuilder ( ) ; buffer . append ( DiffMovingAverage . class . getSimpleName ( ) + _CHAR ; Current average : _CHAR + currentAverage + _CHAR ; Last Diffs : _CHAR ) ; for ( long i : diffs ) { buffer . append ( _CHAR [ _CHAR + i + _CHAR ] _CHAR ) ; } return buffer . toString ( ) ; }
3994	private static boolean isHandoff ( AndroidFirstRunPersistentData persistentData ) { if ( InstallerData . exists ( ) ) { if ( ! persistentData . isSdkUpToDate ( ) || ! persistentData . isSameTimestamp ( InstallerData . get ( ) . getTimestamp ( ) ) ) { return InstallerData . get ( ) . isCurrentVersion ( ) ; } } return _BOOL ; }
4016	public static PacProxySelector buildPacSelectorForUrl ( String url ) { PacProxySelector result = _NULL ; PacScriptSource pacSource = new UrlPacScriptSource ( url ) ; if ( pacSource . isScriptValid ( ) ) { result = new PacProxySelector ( pacSource ) ; } return result ; }
4055	private final void activateObjects ( ) { for ( VisibleObject visObject : objects . values ( ) ) { if ( visObject instanceof Creature ) { Creature creature = ( Creature ) visObject ; creature . getAi2 ( ) . onGeneralEvent ( AIEventType . ACTIVATE ) ; } } }
4081	public int next ( ) { if ( hasNext ( ) ) { currentMatches = nextMatches ; nextMatches = _NULL ; return currentMatches . getNumberOfMatches ( ) ; } return - _NUM ; }
4111	public void init ( ) { LOG . d ( TAG , _CHAR init ( ) _CHAR ) ; isInitialized = _BOOL ; this . onPause ( _BOOL ) ; this . onDestroy ( ) ; pluginMap . clear ( ) ; this . startupPlugins ( ) ; }
4118	public Builder withCameraRequestCode ( int startRequestCode , int endRequestCode ) { if ( ( endRequestCode - startRequestCode ) < _NUM ) { throw new IllegalArgumentException ( _CHAR The following formula must be apply for the given arguments : '' + '' ( endRequestCode - startRequestCode ) >= _NUM _CHAR ) ; } this . mCameraRequestCodeStart = startRequestCode ; this . mCameraRequestCodeEnd = endRequestCode ; return this ; }
4121	public static byte [ ] readFully ( InputStream in ) throws IOException { try { return readFullyNoClose ( in ) ; } finally { in . close ( ) ; } }
4138	@ Override public void selectionChanged ( @ Nullable ApkEntry entry ) { if ( myCurrentEditor != _NULL ) { Disposer . dispose ( myCurrentEditor ) ; } VirtualFile file = entry == _NULL ? _NULL : entry . getFile ( ) ; myCurrentEditor = getEditor ( file ) ; mySplitter . setSecondComponent ( myCurrentEditor . getComponent ( ) ) ; }
4149	public static void show ( Window owner , Joint joint ) { EditJointDialog dialog = new EditJointDialog ( owner , joint ) ; dialog . setLocationRelativeTo ( owner ) ; dialog . setVisible ( _BOOL ) ; if ( ! dialog . canceled ) { dialog . pnlJoint . setJoint ( joint ) ; } }
4178	public static ContextSet fromMap ( Map < String , String > map ) { if ( map == _NULL ) { throw new NullPointerException ( _CHAR map _CHAR ) ; } MutableContextSet set = new MutableContextSet ( ) ; set . addAll ( map ) ; return set . immutableCopy ( ) ; }
4215	public void updateSyncStateFromAndroid ( ) { if ( AndroidSyncSettings . isSyncEnabled ( mContext ) ) { start ( ) ; } else { stop ( ) ; } }
4225	@ Override @ TargetApi ( _NUM ) public void onReceivedClientCertRequest ( WebView view , ClientCertRequest request ) { PluginManager pluginManager = this . parentEngine . pluginManager ; if ( pluginManager != _NULL && pluginManager . onReceivedClientCertRequest ( _NULL , new CordovaClientCertRequest ( request ) ) ) { parentEngine . client . clearLoadTimeoutTimer ( ) ; return ; } super . onReceivedClientCertRequest ( view , request ) ; }
4251	public static boolean swordSimilar ( ItemStack a , ItemStack b ) { if ( a == _NULL || b == _NULL ) { return a == b ; } if ( a . getItem ( ) != b . getItem ( ) ) return _BOOL ; if ( a . getItem ( ) . isDamageable ( ) ) return _BOOL ; return a . getItemDamage ( ) == b . getItemDamage ( ) ; }
4333	private void hideSeeAllLinkIfFlagSet ( IVScanResult ivScanResult ) { if ( ivScanResult . tooManyPossibilities ) { seeAllPossibilities . setVisibility ( View . GONE ) ; } else { seeAllPossibilities . setVisibility ( View . VISIBLE ) ; } }
4374	public static void open ( EntityPlayer player , String owner , String guiID , GUIContext context ) { if ( player . worldObj . isRemote ) { openClient ( player , owner , guiID , context ) ; } else { openServer ( player , owner , guiID , context ) ; } }
4375	public void addInlines ( String inlineCode , String group ) { ParamValidationUtil . validateParamNotNull ( inlineCode , _CHAR inlineCode _CHAR ) ; ParamValidationUtil . validateParamNotNull ( group , _CHAR group _CHAR ) ; if ( ! inlineMap . containsKey ( group ) ) { inlineMap . put ( group , new LinkedHashSet < String > ( ) ) ; } inlineMap . get ( group ) . add ( inlineCode ) ; }
4386	private synchronized Object addAndGetSegmentLock ( String segmentId ) { Object segmentLoderLockObject = segmentLockMap . get ( segmentId ) ; if ( _NULL == segmentLoderLockObject ) { segmentLoderLockObject = new Object ( ) ; segmentLockMap . put ( segmentId , segmentLoderLockObject ) ; } return segmentLoderLockObject ; }
4408	public static double roundSignificant ( double value ) { if ( value >= _NUM . _NUM || value <= - _NUM . _NUM ) { return getRounded ( value , _NUM ) ; } else { return roundToSignificantDigits ( value , _NUM ) ; } }
4420	private static void forceInit ( Class < ? > cls ) { try { Class . forName ( cls . getName ( ) , _BOOL , cls . getClassLoader ( ) ) ; } catch ( ClassNotFoundException e ) { throw new IllegalArgumentException ( _CHAR Ca n _CHAR_CHAR + cls , e ) ; } }
4429	private static Comparable castToComparable ( Object obj ) { try { return ( Comparable ) obj ; } catch ( ClassCastException cce ) { throw new IllegalArgumentException ( _CHAR Type _CHAR + obj . getClass ( ) + _CHAR does n _CHAR_CHAR_CHAR_CHAR , cce ) ; } }
4459	void cancelPrerender ( IBinder session ) { ThreadUtils . assertOnUiThread ( ) ; if ( mPrerender != _NULL && ( session == _NULL || session . equals ( mPrerender . mSession ) ) ) { mExternalPrerenderHandler . cancelCurrentPrerender ( ) ; mPrerender . mWebContents . destroy ( ) ; mPrerender = _NULL ; } }
4490	@ Override public int available ( ) { int available = _NUM ; for ( int i = _NUM ; i < sources . length ; i ++ ) { int a = sources [ i ] . available ( ) ; if ( a > available ) available = a ; } return available ; }
4493	public static final String toStringArray ( Object tab ) { if ( tab == _NULL ) return _CHAR _NULL _CHAR ; Class type = tab . getClass ( ) ; if ( ! type . isArray ( ) ) return toString ( tab ) ; StringBuffer output = new StringBuffer ( ) ; toString ( output , tab , type . getComponentType ( ) ) ; return output . toString ( ) ; }
4496	private void readObject ( ObjectInputStream in ) throws IOException , ClassNotFoundException { in . defaultReadObject ( ) ; if ( landlord == _NULL ) throw new InvalidObjectException ( _CHAR _NULL landlord reference _CHAR ) ; if ( landlordUuid == _NULL ) throw new InvalidObjectException ( _CHAR _NULL landlordUuid reference _CHAR ) ; if ( ! ( landlord instanceof TrustEquivalence ) ) { throw new InvalidObjectException ( _CHAR server does not implement TrustEquivalence _CHAR ) ; } }
4569	private String fetchTableName ( String query ) { for ( String tableName : mTableNames ) { if ( query . contains ( tableName ) ) { return tableName ; } } return _CHAR _CHAR ; }
4577	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
4578	public boolean isElement ( String requestPrefix , String requestedElementName ) { if ( ( requestPrefix != _NULL ) && ( requestedElementName != _NULL ) ) { if ( ( requestPrefix . compareToIgnoreCase ( prefix ) == _NUM ) && ( requestedElementName . compareToIgnoreCase ( elementName ) == _NUM ) ) { return _BOOL ; } } return _BOOL ; }
4603	public boolean onReceivedHttpAuthRequest ( CordovaWebView view , ICordovaHttpAuthHandler handler , String host , String realm ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL && plugin . onReceivedHttpAuthRequest ( app , handler , host , realm ) ) { return _BOOL ; } } return _BOOL ; }
4604	public void commitBuffer ( ) throws IOException { if ( mThread == _NULL ) { mThread = new Thread ( this ) ; mThread . start ( ) ; } if ( ++ mBufferIn >= mBufferCount ) mBufferIn = _NUM ; mBufferCommitted . release ( ) ; }
4630	public synchronized static boolean isBrowseAvailable ( ) { if ( ! browseAvailableInitialized ) { if ( ! isDesktopSupported ( ) ) browseAvailable = _BOOL ; else browseAvailable = Desktop . getDesktop ( ) . isSupported ( Desktop . Action . BROWSE ) ; browseAvailableInitialized = _BOOL ; } return browseAvailable ; }
4701	public boolean isShowLabel ( ) { if ( showLabel == _NULL ) { return _BOOL ; } else { return showLabel ; } }
4732	public static boolean hasAndroidGradleFacet ( @ NotNull JpsProject project ) { for ( JpsModule module : project . getModules ( ) ) { if ( getExtension ( module ) != _NULL ) { return _BOOL ; } } return _BOOL ; }
4792	public int lastIndexOf ( int offset , short value ) { for ( int i = offset ; i -- > _NUM ; ) { if ( _data [ i ] == value ) { return i ; } } return - _NUM ; }
4811	private void removeKey ( String key ) { Cacheable cacheable = lruCacheMap . get ( key ) ; if ( _NULL != cacheable ) { currentSize = currentSize - cacheable . getMemorySize ( ) ; } lruCacheMap . remove ( key ) ; LOGGER . info ( _CHAR Removed level entry from InMemory level lru cache : : _CHAR + key ) ; }
4844	private static List < NewSLDInterface > populateAvailableList ( ) { List < NewSLDInterface > list = new ArrayList < NewSLDInterface > ( ) ; list . add ( new NewPointSLD ( ) ) ; list . add ( new NewLineSLD ( ) ) ; list . add ( new NewPolygonSLD ( ) ) ; list . add ( new NewRasterSLD ( ) ) ; return list ; }
4855	@ Override public String object2Relation ( String fieldType ) { if ( fieldType != _NULL ) { if ( fieldType . equals ( _CHAR boolean _CHAR ) || fieldType . equals ( _CHAR java . lang . Boolean _CHAR ) ) { return _CHAR integer _CHAR ; } } return _NULL ; }
4871	protected void persistProcessDefinitionsAndAuthorizations ( ParsedDeployment parsedDeployment ) { CommandContext commandContext = Context . getCommandContext ( ) ; ProcessDefinitionEntityManager processDefinitionManager = commandContext . getProcessDefinitionEntityManager ( ) ; for ( ProcessDefinitionEntity processDefinition : parsedDeployment . getAllProcessDefinitions ( ) ) { processDefinitionManager . insert ( processDefinition , _BOOL ) ; bpmnDeploymentHelper . addAuthorizationsForNewProcessDefinition ( parsedDeployment . getProcessModelForProcessDefinition ( processDefinition ) , processDefinition ) ; } }
4877	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
4956	public int optInt ( String key , int defaultValue ) { try { return this . getInt ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
5006	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
5033	@ Override public void addListener ( DataSourceUpdatedInterface listener ) { if ( ! listenerList . contains ( listener ) ) { listenerList . add ( listener ) ; if ( getGeometryType ( ) != GeometryTypeEnum . UNKNOWN ) { notifyDataSourceLoaded ( ) ; } } }
5049	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
5075	private void write ( char c ) throws SAXException { try { output . write ( c ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
5165	protected void populateStandardData ( Rule rule ) { StandardData standardData = new StandardData ( ) ; if ( rule != _NULL ) { standardData . name = rule . getName ( ) ; standardData . description = ( Description ) rule . getDescription ( ) ; } populateStandardData ( standardData ) ; }
5186	public boolean isApplicable ( ) { ClusterViewer viewer = getViewer ( ) ; if ( viewer . getMatrixTab ( ) != _NULL ) { TableModel model = viewer . getMatrixTab ( ) . getTable ( ) . getModel ( ) ; return model . getRowCount ( ) > _NUM ; } return _BOOL ; }
5188	@ Override public boolean accept ( File dir , String name ) { if ( filenameFilter != _NULL ) { return filenameFilter . accept ( dir , name ) ; } else { return super . accept ( dir , name ) ; } }
5207	private void skipToNewlineToken ( ) { while ( ! builder . eof ( ) ) { if ( currentToken ( ) == ProjectViewTokenType . NEWLINE ) { return ; } builder . advanceLexer ( ) ; } }
5230	@ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) public static void pickImage ( Context context , Fragment fragment , int requestCode ) { try { fragment . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( context ) ; } }
5233	public static String id ( Object ... ss ) { StringBuilder sb = new StringBuilder ( ) ; for ( Object s : ss ) { if ( sb . length ( ) > _NUM ) sb . append ( _CHAR / _CHAR ) ; sb . append ( s ) ; } return id ( hash ( sb . toString ( ) ) ) ; }
5270	public static boolean canChat ( Player player ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canChat . ordinal ( ) ] ) { if ( ! restrictions . canChat ( player ) ) { return _BOOL ; } } return _BOOL ; }
5271	public int compareTo ( Object o ) { if ( ( o == DONT_CARE ) || ( this == DONT_CARE ) ) { return _NUM ; } else { return ordinal - ( ( Gender ) o ) . ordinal ; } }
5278	public boolean isStreaming ( String file ) { if ( file . contains ( _CHAR http : // '' ) || file . contains ( '' https : // '' ) || file . contains ( '' rtsp : // '' ) ) { return true ; } else { return false ; } }
5300	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
5310	public void updateView ( String what ) { if ( getClassification ( ) . getName ( ) . equals ( _CHAR _NULL _CHAR ) ) { classification = ClassificationManager . get ( Classification . Taxonomy , _BOOL ) ; getViewerJTree ( ) . update ( ) ; } super . updateView ( what ) ; updateStatusBar ( ) ; }
5318	private boolean references ( QueryTableData dest ) { QueryTableData source = this ; while ( source != _NULL ) { if ( source . equals ( dest ) ) return _BOOL ; source = source . getJoinTable ( ) ; } return _BOOL ; }
5367	protected Object receiveEvent ( Object template ) throws DataAccessException { try { return receiveOperationHandler . receive ( template , getGigaSpace ( ) , getReceiveTimeout ( ) ) ; } catch ( SpaceInterruptedException e ) { return _NULL ; } }
5436	protected String encode ( Object obj ) throws EncodeException { try { return mapper . writeValueAsString ( obj ) ; } catch ( Exception e ) { throw new EncodeException ( _CHAR Failed to encode as JSON : _CHAR + e . getMessage ( ) ) ; } }
5478	public static BaseResource from ( IResource resource , LocalResourceStatus localResourceStatus ) { if ( SVNNodeKind . FILE . equals ( localResourceStatus . getNodeKind ( ) ) ) { return new BaseFile ( resource , localResourceStatus ) ; } else { return new BaseFolder ( resource , localResourceStatus ) ; } }
5494	public boolean removeDataSet ( T d ) { if ( d == _NULL ) return _BOOL ; boolean removed = mDataSets . remove ( d ) ; if ( removed ) { calcMinMax ( ) ; } return removed ; }
5504	public static String fromClassName ( String className ) { String res = ( String ) Descriptor . CLASS_NAME_TO_DESCRIPTOR . get ( className ) ; if ( res != _NULL ) { return res ; } if ( className . startsWith ( _CHAR [ _CHAR ) ) return className . replace ( _CHAR , _CHAR ) ; return _CHAR + className . replace ( _CHAR , _CHAR ) + _CHAR ; }
5517	synchronized protected boolean removeFromPendingCacheIfEqual ( IResource resource , byte [ ] syncBytes ) { byte [ ] old = ( byte [ ] ) pendingCacheWrites . get ( resource ) ; if ( equals ( old , syncBytes ) ) { pendingCacheWrites . remove ( resource ) ; return _BOOL ; } return _BOOL ; }
5531	private void updateCurrentEdition ( ) { try { getHistoryTableProvider ( ) . setRemoteResource ( ( ISVNRemoteFile ) SVNWorkspaceRoot . getBaseResourceFor ( resource ) ) ; } catch ( TeamException e ) { handle ( e ) ; } }
5535	public SQLDataMigrator migrate ( Loader loader ) { for ( Collection < Var > vars : this ) { loader . addToQueue ( vars ) ; } loader . flush ( ) ; loader . waitToFinish ( ) ; return this ; }
5563	public void zoomIn ( ) { MPPointF center = mViewPortHandler . getContentCenter ( ) ; mViewPortHandler . zoomIn ( center . x , - center . y , mZoomInMatrixBuffer ) ; mViewPortHandler . refresh ( mZoomInMatrixBuffer , this , _BOOL ) ; MPPointF . recycleInstance ( center ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
5580	public void addAllTagsOf ( Host h ) { List < Tag > tags = h . getTags ( ) ; if ( tags . isEmpty ( ) ) return ; if ( mTagList == _NULL ) { mTagList = new ArrayList < Tag > ( tags . size ( ) ) ; } mTagList . addAll ( tags ) ; }
5583	private void broadcastToGroupMembers ( final Player player ) { if ( player . isInTeam ( ) ) { player . getCurrentGroup ( ) . sendPacket ( new SM_MESSAGE ( player , message , type ) ) ; } else { PacketSendUtility . sendMessage ( player , _CHAR You are not in an alliance or group . ( Error _NUM ) _CHAR ) ; } }
5615	PorterDuffColorFilter updateTintFilter ( PorterDuffColorFilter tintFilter , ColorStateList tint , PorterDuff . Mode tintMode ) { if ( tint == _NULL || tintMode == _NULL ) { return _NULL ; } final int color = tint . getColorForState ( getState ( ) , Color . TRANSPARENT ) ; tintFilter = new PorterDuffColorFilter ( color , tintMode ) ; return tintFilter ; }
5617	@ Override public IdentityLinkEntity involveUser ( ExecutionEntity executionEntity , String userId , String type ) { for ( IdentityLinkEntity identityLink : executionEntity . getIdentityLinks ( ) ) { if ( identityLink . isUser ( ) && identityLink . getUserId ( ) . equals ( userId ) ) { return identityLink ; } } return addIdentityLink ( executionEntity , userId , _NULL , type ) ; }
5636	public void execute ( Runnable runnable ) throws IllegalStateException { if ( runObj != _NULL ) throw new IllegalStateException ( _CHAR Can not execute PoolableThread that _CHAR + _CHAR is busy _CHAR ) ; synchronized ( working ) { if ( runObj != _NULL ) throw new IllegalStateException ( _CHAR Can not execute PoolableThread _CHAR + _CHAR that is busy _CHAR ) ; runObj = runnable ; working . notifyAll ( ) ; } }
5661	private static boolean hasSelfPermission ( Context context , String permission ) { try { return checkSelfPermission ( context , permission ) == PackageManager . PERMISSION_GRANTED ; } catch ( RuntimeException t ) { return _BOOL ; } }
5679	static boolean isYearLeap ( int y ) { if ( ( ( y % _NUM == _NUM ) && ( y % _NUM != _NUM ) ) || ( y % _NUM == _NUM ) ) { return _BOOL ; } else { return _BOOL ; } }
5689	public static String keyOfIdGenerator ( Class < ? > clazz ) { try { return ID_GENERATOR_KEY_CACHE . get ( clazz ) ; } catch ( ExecutionException e ) { throw new KeyException ( e ) ; } }
5707	public void unlockUserInput ( ) { locked = _BOOL ; getCommandManager ( ) . setEnableCritical ( _BOOL ) ; searchManager . getFindDialogAsToolBar ( ) . setEnableCritical ( _BOOL ) ; if ( bottomToolBar != _NULL ) bottomToolBar . setEnabled ( _BOOL ) ; setCursor ( Cursor . getDefaultCursor ( ) ) ; getContentPane ( ) . setCursor ( Cursor . getDefaultCursor ( ) ) ; }
5727	private void del ( VisibleObject object , boolean isOutOfRange ) { if ( knownObjects . remove ( object . getObjectId ( ) ) != _NULL ) { if ( knownPlayers != _NULL ) { knownPlayers . remove ( object . getObjectId ( ) ) ; } delVisualObject ( object , isOutOfRange ) ; } }
5813	public static String androidCmdName ( ) { String os = System . getProperty ( _CHAR os . name _CHAR ) ; String cmd = _CHAR android _CHAR ; if ( os . startsWith ( _CHAR Windows _CHAR ) ) { cmd += _CHAR . bat _CHAR ; } return cmd ; }
5815	public void selectionChanged ( SelectionChangedEvent event ) { if ( event . getSelection ( ) instanceof IStructuredSelection ) { listSelectionChanged ( ( IStructuredSelection ) event . getSelection ( ) ) ; } else if ( event . getSelection ( ) instanceof ITextSelection ) { textSelectionChanged ( ( ITextSelection ) event . getSelection ( ) ) ; } }
5855	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
5875	public boolean hasLure ( ) { try { return hasLure ( _BOOL ) ; } catch ( LoginFailedException | RemoteServerException e ) { } return _BOOL ; }
5909	public int indexOf ( int offset , int value ) { for ( int i = offset ; i < _pos ; i ++ ) { if ( _data [ i ] == value ) { return i ; } } return - _NUM ; }
5982	public boolean hasNext ( ) { for ( int i = no - _NUM ; i >= _NUM ; i -- ) { if ( indexes [ i ] < objects [ i ] . length - _NUM ) { return _BOOL ; } } return _BOOL ; }
6042	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( slider != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof Integer ) { Integer oldValue = ( Integer ) undoRedoObject . getOldValue ( ) ; slider . setValue ( oldValue . intValue ( ) ) ; } } }
6058	public boolean isZero ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( mant [ mant . length - _NUM ] == _NUM ) && ! isInfinite ( ) ; }
6062	private static String extractTextData ( Document document , String elementName ) { String value = _CHAR _CHAR ; NodeList nodeList = document . getElementsByTagName ( elementName ) ; if ( nodeList . getLength ( ) > _NUM ) { value = nodeList . item ( _NUM ) . getTextContent ( ) ; } return value ; }
6096	public void clearCache ( ) { if ( mMemoryCache != _NULL ) { mMemoryCache . evictAll ( ) ; if ( BuildConfig . DEBUG ) { Log . d ( TAG , _CHAR Memory cache cleared _CHAR ) ; } } }
6098	private void scrollToChild ( View child ) { child . getDrawingRect ( mTempRect ) ; offsetDescendantRectToMyCoords ( child , mTempRect ) ; int scrollDelta = computeScrollDeltaToGetChildRectOnScreen ( mTempRect ) ; if ( scrollDelta != _NUM ) { scrollBy ( scrollDelta , _NUM ) ; } }
6110	static TxnMgrAdminProxy create ( TxnManager txnMgr , Uuid id ) { if ( txnMgr instanceof RemoteMethodControl ) { return new ConstrainableTxnMgrAdminProxy ( txnMgr , id , _NULL ) ; } else { return new TxnMgrAdminProxy ( txnMgr , id ) ; } }
6126	public void checkSymbolIsValid ( ) { boolean valid = _BOOL ; Expression expression = getExpression ( ) ; if ( expression != _NULL ) { valid = ! expression . toString ( ) . isEmpty ( ) ; } SelectedSymbol . getInstance ( ) . setValidSymbol ( VALIDITY_KEY , valid ) ; }
6140	@ Override public void onAdsLoaded ( ) { WritableMap adsManagersState = Arguments . createMap ( ) ; for ( String key : mAdsManagers . keySet ( ) ) { NativeAdsManager adsManager = mAdsManagers . get ( key ) ; adsManagersState . putBoolean ( key , adsManager . isLoaded ( ) ) ; } sendAppEvent ( _CHAR CTKNativeAdsManagersChanged _CHAR , adsManagersState ) ; }
6146	public static boolean isAccountOnAnyGameServer ( Account acc ) { for ( GameServerInfo gsi : getGameServers ( ) ) { if ( gsi . isAccountOnGameServer ( acc . getId ( ) ) ) { return _BOOL ; } } return _BOOL ; }
6245	public AemRadioGroup selectByValue ( String value ) { for ( AemRadioOption option : values ) { if ( value . equals ( option . getValue ( ) ) ) { option . setSelected ( ) ; } } return this ; }
6277	public SootClass makeClassRef ( String className ) { if ( Scene . v ( ) . containsClass ( className ) ) return Scene . v ( ) . getSootClass ( className ) ; SootClass newClass ; newClass = new SootClass ( className ) ; newClass . setResolvingLevel ( SootClass . DANGLING ) ; Scene . v ( ) . addClass ( newClass ) ; return newClass ; }
6299	public void update ( POGOProtos . Settings . FortSettingsOuterClass . FortSettings fortSettings ) { interactionRangeInMeters = fortSettings . getInteractionRangeMeters ( ) ; maxTotalDeployedPokemon = fortSettings . getMaxTotalDeployedPokemon ( ) ; maxPlayerDeployedPokemon = fortSettings . getMaxPlayerDeployedPokemon ( ) ; deployStaminaMultiplier = fortSettings . getDeployStaminaMultiplier ( ) ; deployAttackMultiplier = fortSettings . getDeployAttackMultiplier ( ) ; farInteractionRangeMeters = fortSettings . getFarInteractionRangeMeters ( ) ; }
6303	public static CertChainKeyPair generateSignedForClient ( String fqdn , X509Certificate issuerCertificate , PrivateKey issuerPrivateKey ) { try { return generateCertificateAndSign ( fqdn , issuerCertificate , issuerPrivateKey , getClientExtensions ( ) ) ; } catch ( CertIOException | CertificateException | OperatorCreationException e ) { throw new RuntimeException ( String . format ( _CHAR Failed to generate client certificate , reason : % s _CHAR , e . getMessage ( ) ) , e ) ; } }
6304	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
6315	public Properties readSettings ( ) { Properties result = new Properties ( ) ; result . setProperty ( this . httpEnv , this . httpProxy ) ; result . setProperty ( this . httpsEnv , this . httpsProxy ) ; result . setProperty ( this . ftpEnv , this . ftpProxy ) ; result . setProperty ( this . noProxyEnv , this . noProxy ) ; return result ; }
6349	public void clearCache ( ) { if ( mMemoryCache != _NULL ) { mMemoryCache . evictAll ( ) ; if ( BuildConfig . DEBUG ) { Log . d ( TAG , _CHAR Memory cache cleared _CHAR ) ; } } }
6353	public byte [ ] decode ( byte [ ] array ) throws Exception { try { return decodeHex ( new String ( array , getCharsetName ( ) ) . toCharArray ( ) ) ; } catch ( Exception e ) { throw new Exception ( e . getMessage ( ) , e ) ; } }
6393	public Iterator tuples ( Predicate filter ) { if ( filter == _NULL ) { return tuples ( ) ; } else { return new CompositeIterator ( m_edgeTuples . iterator ( getEdgeTable ( ) . rows ( filter ) ) , m_nodeTuples . iterator ( getNodeTable ( ) . rows ( filter ) ) ) ; } }
6436	public boolean isTimer ( ) { if ( timer == _NULL ) { return _BOOL ; } else { return timer ; } }
6437	public void clearCache ( ) { cachedCatchable . clear ( ) ; cachedMapObjects . getNearbyPokemons ( ) . clear ( ) ; cachedMapObjects . getCatchablePokemons ( ) . clear ( ) ; cachedMapObjects . getWildPokemons ( ) . clear ( ) ; cachedMapObjects . getDecimatedSpawnPoints ( ) . clear ( ) ; cachedMapObjects . getSpawnPoints ( ) . clear ( ) ; }
6455	private static File createReserveDiskCacheDir ( Context context ) { File cacheDir = StorageUtils . getCacheDirectory ( context , _BOOL ) ; File individualDir = new File ( cacheDir , _CHAR uil - images _CHAR ) ; if ( individualDir . exists ( ) || individualDir . mkdir ( ) ) { cacheDir = individualDir ; } return cacheDir ; }
6481	@ Nullable private static File findResDirectory ( @ NotNull SourceProvider sourceProvider ) { Collection < File > resDirectories = sourceProvider . getResDirectories ( ) ; File resDir = _NULL ; if ( ! resDirectories . isEmpty ( ) ) { resDir = resDirectories . iterator ( ) . next ( ) ; } return resDir ; }
6482	public static short readShort ( DataInputStream dis , boolean isBigEndian ) throws IOException { if ( ! isBigEndian ) { return readLittleEndianShort ( dis ) ; } else { return dis . readShort ( ) ; } }
6486	public ParameterDeclaration substituted ( Collection < TypeVariable > original , List < TypeVariable > substitution ) { ASTNode $ State state = state ( ) ; try { return new ParameterDeclaration ( ( Modifiers ) getModifiers ( ) . cloneSubtree ( ) , getTypeAccess ( ) . substituted ( original , substitution ) , getID ( ) ) ; } finally { } }
6494	@ Nullable private static File findManifestDirectory ( @ NotNull SourceProvider sourceProvider ) { File manifestFile = sourceProvider . getManifestFile ( ) ; File manifestDir = manifestFile . getParentFile ( ) ; if ( manifestDir != _NULL ) { return manifestDir ; } return _NULL ; }
6529	public boolean isCannotShare ( ) { if ( cannotShare == _NULL ) { return _BOOL ; } else { return cannotShare ; } }
6532	public boolean removeEntity ( final ProxyEntity proxyEntity ) { final Session session = this . sessionFactory . openSession ( ) ; final Transaction transaction = session . beginTransaction ( ) ; session . delete ( proxyEntity ) ; transaction . commit ( ) ; session . close ( ) ; return _BOOL ; }
6533	public boolean more ( ) throws JSONException { this . next ( ) ; if ( this . end ( ) ) { return _BOOL ; } this . back ( ) ; return _BOOL ; }
6547	public static void forceDeleteOnExit ( File file ) throws IOException { if ( file . isDirectory ( ) ) { deleteDirectoryOnExit ( file ) ; } else { file . deleteOnExit ( ) ; } }
6579	public static boolean between ( float value , float start , float end ) { if ( start > end ) { float tmp = start ; start = end ; end = tmp ; } return value >= start && value <= end ; }
6584	public static JSONObject toJSONObject ( String string ) throws JSONException { JSONObject jo = new JSONObject ( ) ; XMLTokener x = new XMLTokener ( string ) ; while ( x . more ( ) && x . skipPast ( _CHAR < _CHAR ) ) { parse ( x , jo , _NULL ) ; } return jo ; }
6629	protected void keyTyped ( char typedChar , int keyCode ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { GuiTextField txt = ( ( GuiQuickCommandsList . CommandEntry ) this . guiList . getListEntry ( i ) ) . txt ; if ( txt . isFocused ( ) ) { txt . textboxKeyTyped ( typedChar , keyCode ) ; } } }
6668	public void SLDLoaded ( LegendOptionData data ) { if ( data != _NULL ) { updateLegendOptionData ( data ) ; if ( legendOptionPanel != _NULL ) { legendOptionPanel . updateData ( data ) ; } } }
6683	@ Override public void valueChanged ( ListSelectionEvent e ) { if ( ! e . getValueIsAdjusting ( ) ) { int selectedIndex = multiList . getSelectedIndex ( ) ; if ( selectedIndex >= _NUM ) { populateSegmentList ( selectedIndex ) ; } } }
6689	public void removeFromAggregate ( int row , VisualItem member ) { validRowCheck ( row , _BOOL ) ; int ar = getAggregatedRow ( row , member ) ; if ( ar >= _NUM ) { m_aggregated . removeRow ( ar ) ; fireTableEvent ( row , row , EventConstants . ALL_COLUMNS , EventConstants . UPDATE ) ; } }
6700	public static Object objectFromByteBuffer ( byte [ ] buffer ) throws IOException , ClassNotFoundException { if ( buffer == _NULL ) return _NULL ; OptimizedByteArrayInputStream inStream = new OptimizedByteArrayInputStream ( buffer ) ; ObjectInputStream in = new ObjectInputStream ( inStream ) ; Object retval = in . readObject ( ) ; in . close ( ) ; return retval ; }
6712	@ Override public void flush ( ) throws IOException { try { out . flush ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
6721	protected void animateProperty ( Property property , float start , float end , long duration ) { if ( duration > _NUM ) { if ( animationIsRunning ( ) ) { cancelAnimation ( this , property ) ; } addToAnimation ( this , property , start , end , duration , _NUM ) ; } }
6825	@ Override public Object [ ] next ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( ) ; } Object [ ] row = rows . get ( counter ) ; counter ++ ; return row ; }
6865	private void createLock ( ) throws IOException { synchronized ( LockableFileWriter . class ) { if ( ! lockFile . createNewFile ( ) ) { throw new IOException ( _CHAR Ca n _CHAR_CHAR_CHAR_CHAR ) ; } lockFile . deleteOnExit ( ) ; } }
6868	private void finishNode ( Node node ) { if ( node . getNodeType ( ) == Node . ELEMENT_NODE ) { fCurrentElement = node ; fillQName ( fElementQName , node ) ; fSchemaValidator . endElement ( fElementQName , _NULL ) ; fNamespaceContext . popContext ( ) ; } }
6883	public static void toPdf ( Grid grid , OutputStream out ) { if ( isNonEmptyGrid ( grid ) ) { Document document = openDocument ( out ) ; toPdfInternal ( grid , document , _NUM ) ; addPdfTimestamp ( document , _BOOL ) ; closeDocument ( document ) ; } }
6898	private static void createStore ( Player activePlayer ) { if ( activePlayer . isInState ( CreatureState . RESTING ) ) { return ; } activePlayer . setStore ( new PrivateStore ( activePlayer ) ) ; activePlayer . setState ( CreatureState . PRIVATE_SHOP ) ; PacketSendUtility . broadcastPacket ( activePlayer , new SM_EMOTION ( activePlayer , EmotionType . OPEN_PRIVATESHOP , _NUM , _NUM ) , _BOOL ) ; }
6953	public static String compatibleFieldName ( String original ) { if ( ! original . matches ( _CHAR ^ [ A - Za - z_ ] . * _CHAR ) ) { return _CHAR _ _CHAR + original ; } else { return original ; } }
6971	private BEntry readEntry ( int slot ) { if ( isLeaf ( ) ) { return new LeafEntry ( this . keySchema , getPage ( ) . readBytes ( getOffset ( slot ) , entrySize ) ) ; } else { return new InnerEntry ( this . keySchema , getPage ( ) . readBytes ( getOffset ( slot ) , entrySize ) ) ; } }
6975	public boolean readBoolean ( ) { String s = readString ( ) ; if ( s . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( s . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( s . equals ( _CHAR _NUM _CHAR ) ) return _BOOL ; if ( s . equals ( _CHAR _NUM _CHAR ) ) return _BOOL ; throw new InputMismatchException ( ) ; }
7007	protected void actionPerformed ( GuiButton button ) throws IOException { if ( button . id == _NUM ) { this . mc . displayGuiScreen ( new GuiAchievements ( this , this . mc . thePlayer . getStatFileWriter ( ) ) ) ; } if ( button . id == _NUM ) { this . mc . displayGuiScreen ( new GuiStats ( this , this . mc . thePlayer . getStatFileWriter ( ) ) ) ; } }
7016	@ Override public void startExecuting ( ) { if ( entity . getGrowingAge ( ) < _NUM && ! entity . isInLove ( ) ) { if ( entity instanceof EntityWolf ) { if ( ( ( EntityWolf ) entity ) . isSitting ( ) ) return ; } this . entity . getNavigator ( ) . tryMoveToXYZ ( targetItem . posX , targetItem . posY , targetItem . posZ , _NUM . _NUM ) ; } }
7039	private void prepareNextRun ( ) { for ( IVarAbstraction pn : pointers ) { if ( pn . willUpdate == _BOOL ) { pn . reconstruct ( ) ; } } System . gc ( ) ; }
7042	public static void startAnimation ( View animView ) { Animation tx = new TranslateAnimation ( - _NUM , _NUM , _NUM , _NUM ) ; tx . setDuration ( _NUM ) ; tx . setRepeatCount ( Animation . INFINITE ) ; tx . setInterpolator ( new AccelerateDecelerateInterpolator ( ) ) ; tx . setRepeatMode ( Animation . REVERSE ) ; animView . startAnimation ( tx ) ; }
7049	public Access substituted ( Collection < TypeVariable > original , List < TypeVariable > substitution ) { ASTNode $ State state = state ( ) ; try { return ( Access ) cloneSubtree ( ) ; } finally { } }
7085	public void screenshot ( String message ) { try { addLogEntry ( new ScreenshotEntry ( webDriver , fileCreator , message ) ) ; } catch ( IOException e ) { LOG . error ( _CHAR Ca n _CHAR_CHAR , e ) ; } }
7096	public void remove ( ) throws UnsupportedOperationException { if ( this . lastIndex < _NUM ) { throw new IllegalStateException ( _CHAR No header to remove . '' ) ; } this . allHeaders . remove ( this . lastIndex ) ; this . lastIndex =- _NUM ; this . currentIndex -- ; }
7119	static boolean contains ( Object [ ] arr , int i , Object obj ) { while ( -- i >= _NUM ) { if ( obj . equals ( arr [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
7124	private void traverseAndResolveTree ( FilterResolverIntf filterResolverTree , AbsoluteTableIdentifier tableIdentifier ) throws FilterUnsupportedException { if ( _NULL == filterResolverTree ) { return ; } traverseAndResolveTree ( filterResolverTree . getLeft ( ) , tableIdentifier ) ; filterResolverTree . resolve ( tableIdentifier ) ; traverseAndResolveTree ( filterResolverTree . getRight ( ) , tableIdentifier ) ; }
7147	private void populateMap ( String key , PopulateDetailsInterface panelDetails ) { List < PopulateDetailsInterface > panelList = panelMap . get ( key ) ; if ( panelList == _NULL ) { panelList = new ArrayList < PopulateDetailsInterface > ( ) ; panelMap . put ( key , panelList ) ; } panelList . add ( panelDetails ) ; }
7175	private void gatherDrawables ( ) { drawables = new Array < > ( AtlasData . getInstance ( ) . getDrawables ( ) ) ; Iterator < DrawableData > iter = drawables . iterator ( ) ; while ( iter . hasNext ( ) ) { DrawableData drawable = iter . next ( ) ; if ( ! drawable . visible ) iter . remove ( ) ; } }
7200	public boolean isCompatibleWith ( @ NotNull ResourceTypeAllowedValues other ) { for ( ResourceType type : other . types ) { if ( isTypeAllowed ( type ) ) { return _BOOL ; } } return _BOOL ; }
7279	private void STAR_encoding_row ( ) { int i , j ; for ( i = _NUM ; i < stripe_unit_size ; i ++ ) { for ( j = _NUM ; j < data_disk_nbr ; j ++ ) { check_data [ data_disk_nbr ] [ i ] ^= check_data [ j ] [ i ] ; } } }
7284	@ Override public void onServiceConnected ( ComponentName name , IBinder service ) { if ( ! name . equals ( mRunningJob . getServiceComponent ( ) ) ) { mCallbackHandler . obtainMessage ( MSG_SHUTDOWN_EXECUTION ) . sendToTarget ( ) ; return ; } this . service = IJobService . Stub . asInterface ( service ) ; mCallbackHandler . obtainMessage ( MSG_SERVICE_BOUND ) . sendToTarget ( ) ; }
7286	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } }
7299	@ Override public Node parentNode ( ) { if ( fCurrentNode == _NULL ) return _NULL ; Node node = getParentNode ( fCurrentNode ) ; if ( node != _NULL ) { fCurrentNode = node ; } return node ; }
7303	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
7304	public void reset ( ) { super . clear ( ) ; fContextType = CONTEXT_INITIALIZE ; fLocationHints = _NULL ; fTriggeringComponent = _NULL ; fEnclosedElementName = _NULL ; fAttributes = _NULL ; }
7333	public JPanel createLegendPanel ( ) { JPanel legendPanel = new JPanel ( ) ; legendPanel . setLayout ( new GridLayout ( _NUM , _NUM ) ) ; legendPanel . add ( getLegendPanel ( ) ) ; JPanel symbolTreePanel = getSymbolTree ( ) ; legendPanel . add ( symbolTreePanel ) ; return legendPanel ; }
7338	@ Override public synchronized void reset ( ) throws IOException { try { in . reset ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
7355	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException ex ) { throw new InternalError ( ) ; } }
7384	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( undoRedoObject != _NULL ) { if ( undoRedoObject . getOldValue ( ) instanceof String ) { String oldValue = ( String ) undoRedoObject . getOldValue ( ) ; populateField ( oldValue ) ; } } }
7455	public TrackedEntityInstanceQueryParams addFiltersIfNotExist ( List < QueryItem > filtrs ) { for ( QueryItem filter : filtrs ) { if ( filters != _NULL && ! filters . contains ( filter ) ) { filters . add ( filter ) ; } } return this ; }
7460	private InputStream saveTmp ( InputStream in ) throws IOException { File tmpFile = File . createTempFile ( _CHAR dvs _CHAR , _NULL ) ; tmpFile . deleteOnExit ( ) ; try ( FileOutputStream out = new FileOutputStream ( tmpFile ) ) { IOUtils . copy ( in , out ) ; } return new BufferedInputStream ( new FileInputStream ( tmpFile ) ) ; }
7475	@ Override public void modelChanged ( @ NotNull NlModel model ) { if ( myDesignSurface != _NULL ) { updateDeviceConfiguration ( myDesignSurface . getConfiguration ( ) ) ; updateComponents ( model . getComponents ( ) ) ; updateScreenNumber ( myDesignSurface ) ; myMiniMap . repaint ( ) ; } }
7479	private void stop ( ) { stopTimeout ( ) ; if ( this . status != AccelListener . STOPPED ) { this . sensorManager . unregisterListener ( this ) ; } this . setStatus ( AccelListener . STOPPED ) ; this . accuracy = SensorManager . SENSOR_STATUS_UNRELIABLE ; }
7503	public static boolean canUseSkill ( Player player , Skill skill ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canUseSkill . ordinal ( ) ] ) { if ( ! restrictions . canUseSkill ( player , skill ) ) { return _BOOL ; } } return _BOOL ; }
7541	protected boolean isJson ( HttpServletRequest request ) { String type = request . getContentType ( ) ; type = ! StringUtils . isEmpty ( type ) ? type : MediaType . APPLICATION_JSON_VALUE ; if ( request . getPathInfo ( ) . endsWith ( _CHAR . json _CHAR ) ) { type = MediaType . APPLICATION_JSON_VALUE ; } return isCompatibleWith ( type , MediaType . APPLICATION_JSON ) ; }
7567	@ Override public void mkDir ( @ NotNull File at ) { try { myIO . mkDir ( getTargetFile ( at ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
7636	public static void showLong ( Context context , String text ) { if ( mToast == _NULL ) { mToast = Toast . makeText ( context , text , Toast . LENGTH_LONG ) ; } mToast . setDuration ( Toast . LENGTH_LONG ) ; mToast . setText ( text ) ; mToast . show ( ) ; }
7642	private void appendPermittedContentType ( ContentType contentType ) { if ( permittedContentTypesMask == ContentType . ANY . getFlagValue ( ) ) { permittedContentTypesMask = contentType . getFlagValue ( ) ; } else { permittedContentTypesMask |= contentType . getFlagValue ( ) ; } }
7691	public void release ( ) { if ( mReleased ) { return ; } mReleased = _BOOL ; clear ( _BOOL ) ; onRelease ( ) ; }
7699	private void addToQueue ( Collection < SerialMessage > msgs ) { if ( msgs == _NULL ) { return ; } for ( SerialMessage serialMessage : msgs ) { addToQueue ( serialMessage ) ; } }
7702	public void readFrom ( Reader from , String endMarker ) throws ParserConfigurationException , SAXException , IOException { Reader r = from ; if ( endMarker != _NULL ) { ReaderSplitter fromSplitter = new ReaderSplitter ( from , endMarker ) ; r = fromSplitter . nextReader ( ) ; } readFrom ( r ) ; }
7717	public int dnsDomainLevels ( String host ) { int count = _NUM ; int startPos = _NUM ; while ( ( startPos = host . indexOf ( _CHAR . _CHAR , startPos + _NUM ) ) > - _NUM ) { count ++ ; } return count ; }
7724	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
7761	public static void omitField ( JsonNode node , String fieldName , ObjectMapper mapper ) { if ( node . has ( _CHAR context _CHAR ) ) { ( ( ObjectNode ) node ) . replace ( fieldName , mapper . createObjectNode ( ) ) ; } for ( JsonNode child : node ) { omitField ( child , fieldName , mapper ) ; } }
7763	private String nestedTagsRegex ( int depth ) { if ( depth == _NUM ) { return _CHAR _CHAR ; } else { return _CHAR ( ? : < [ a - z / ! $ ] ( ? : [ ^ < > ] | _CHAR + nestedTagsRegex ( depth - _NUM ) + _CHAR ) * > ) _CHAR ; } }
7784	private void fillBuffer ( ) throws CharacterCodingException { this . bbuf . compact ( ) ; CoderResult result = this . encoder . encode ( this . cbuf , this . bbuf , _BOOL ) ; if ( result . isError ( ) ) { result . throwException ( ) ; } this . bbuf . flip ( ) ; }
7796	@ Override public void onPrepared ( MediaPlayer mp ) { Log_OC . v ( TAG , _CHAR onPrepare _CHAR ) ; mVideoPlayer . seekTo ( mSavedPlaybackPosition ) ; if ( mAutoplay ) { mVideoPlayer . start ( ) ; } mMediaController . show ( _NUM ) ; }
7802	public static < T > void unpublishService ( String url ) throws RpcException { try { ServicePublisher . unpublishService ( url ) ; } catch ( RegistryException e ) { throw new RpcException ( _CHAR error while unpublishing service : '' + url , e ) ; } }
7819	public Z Div ( Z a , double b ) throws JampackException { if ( b == _NUM ) { throw new JampackException ( _CHAR Divide by zero . '' ) ; } re = a . re / b ; im = a . im / b ; return this ; }
7828	public boolean optBoolean ( int index , boolean defaultValue ) { try { return getBoolean ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
7843	public void post ( Runnable runnable ) { synchronized ( mQueue ) { mQueue . add ( runnable ) ; if ( mQueue . size ( ) == _NUM ) { scheduleNextLocked ( ) ; } } }
7846	public boolean contains ( T listener ) { if ( mListeners != _NULL ) { return mListeners . contains ( listener ) ; } else { return _BOOL ; } }
7852	private boolean isSubsumed ( String selector , Iterable < String > others ) { for ( String other : others ) { if ( subsumes ( other , selector ) ) { return _BOOL ; } } return _BOOL ; }
7900	public static float convertPixelsToDp ( float px ) { if ( mMetrics == _NULL ) { Log . e ( _CHAR MPChartLib - Utils _CHAR , _CHAR Utils NOT INITIALIZED . You need to call Utils . init ( ... ) at least once before _CHAR + _CHAR calling Utils . convertPixelsToDp ( ... ) . Otherwise conversion does not _CHAR + _CHAR take place . '' ) ; return px ; } DisplayMetrics metrics = mMetrics ; return px / ( metrics . densityDpi / _NUM ) ; }
7929	public void addServiceItems ( ServiceMatches matches ) { if ( matches == _NULL || matches . items == _NULL ) { return ; } for ( ServiceItem item : matches . items ) { serviceItems . put ( item . serviceID , item ) ; } }
7932	public AemDropdown selectByPartialText ( String text ) { if ( text == _NULL ) { return this ; } expandDropdown ( ) ; getItemByTextContaining ( text ) . click ( ) ; return this ; }
7934	public FileFooter readFooter ( ) throws IOException { ThriftReader thriftReader = openThriftReader ( filePath ) ; thriftReader . open ( ) ; thriftReader . setReadOffset ( offset ) ; FileFooter footer = ( FileFooter ) thriftReader . read ( ) ; thriftReader . close ( ) ; return footer ; }
7940	public void addCoreDataTagChanger ( final Long equipmentId , final ICoreDataTagChanger dataTagChanger ) { List < ICoreDataTagChanger > changers = coreDataTagChangers . get ( equipmentId ) ; if ( changers == _NULL ) { changers = new ArrayList < > ( ) ; coreDataTagChangers . put ( equipmentId , changers ) ; } changers . add ( dataTagChanger ) ; }
7959	public SegmentTemplateParameterContext initSegment ( SegmentUUID uuid ) { if ( ! segments . containsKey ( uuid ) ) { int segmNum = segments . size ( ) ; doAddParameter ( uuid , SegmentContextParameters . UUID , uuid . getUuid ( ) ) ; doAddParameter ( uuid , SegmentContextParameters . NUM , String . valueOf ( segmNum ) ) ; } return this ; }
7993	public void notifyListener ( ) throws RemoteException , UnknownEventException { NotifyTemplateHolder template = ( NotifyTemplateHolder ) getEntryHolder ( ) ; RemoteEventListener listener = template . getREListener ( ) ; if ( listener != _NULL ) { if ( LRMIUtilities . isRemoteProxy ( listener ) ) LRMIInvocationContext . enableCustomPriorityForNextInvocation ( ) ; listener . notify ( getRemoteEvent ( ) ) ; } }
8003	public static boolean hasColumn ( String tableName ) { switch ( tableName ) { case COLUMN_NUMBER : return _BOOL ; default : return _BOOL ; } }
8024	static TxnMgrProxy create ( TxnManager txnMgr , Uuid id ) { if ( txnMgr instanceof RemoteMethodControl ) { return new ConstrainableTxnMgrProxy ( txnMgr , id , _NULL ) ; } else { return new TxnMgrProxy ( txnMgr , id ) ; } }
8050	private void write ( String s ) throws SAXException { try { output . write ( s ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
8075	public static void appendContentPrefix ( HttpServletRequest request , StringBuilder urlBuffer , String webSiteId ) { try { appendContentPrefix ( request , ( Appendable ) urlBuffer , webSiteId ) ; } catch ( IOException e ) { throw UtilMisc . initCause ( new InternalError ( e . getMessage ( ) ) , e ) ; } }
8121	public static final void onPlayerLogout ( Player player ) { PlayerGroup group = player . getPlayerGroup2 ( ) ; if ( group != _NULL ) { PlayerGroupMember member = group . getMember ( player . getObjectId ( ) ) ; member . updateLastOnlineTime ( ) ; group . onEvent ( new PlayerDisconnectedEvent ( group , player ) ) ; } }
8128	protected void populateStandardData ( Style style ) { StandardData standardData = new StandardData ( ) ; if ( style != _NULL ) { standardData . name = style . getName ( ) ; standardData . description = style . getDescription ( ) ; } populateStandardData ( standardData ) ; }
8153	public int optInt ( int index , int defaultValue ) { try { return this . getInt ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
8180	private static boolean isEmpty ( @ Nonnull final File file , @ Nonnull final Charset charset ) { try { return FileUtil . isEmpty ( file , charset ) ; } catch ( final IOException e ) { throw new IllegalStateException ( _CHAR The given file could not be read . '' ) ; } }
8197	private static boolean trusted ( Iterator iter , TrustVerifier . Context ctx ) throws RemoteException { while ( iter . hasNext ( ) ) { if ( ! ctx . isTrustedObject ( iter . next ( ) ) ) { return _BOOL ; } } return _BOOL ; }
8227	public static R1Interval fromPointPair ( double p1 , double p2 ) { if ( p1 <= p2 ) { return new R1Interval ( p1 , p2 ) ; } else { return new R1Interval ( p2 , p1 ) ; } }
8267	@ SuppressWarnings ( _CHAR unused _CHAR ) private void mapColumns ( String [ ] columns ) { for ( int i = _NUM ; i < columns . length ; i ++ ) { final String target = mProjectionMap . get ( columns [ i ] ) ; if ( target != _NULL ) { columns [ i ] = target ; } } }
8271	private static double tricube ( final double x ) { final double absX = FastMath . abs ( x ) ; if ( absX >= _NUM . _NUM ) { return _NUM . _NUM ; } final double tmp = _NUM - absX * absX * absX ; return tmp * tmp * tmp ; }
8307	public static boolean isLabeledAsFailed ( Protos . TaskInfo taskInfo ) { for ( Protos . Label label : taskInfo . getLabels ( ) . getLabelsList ( ) ) { if ( label . getKey ( ) . equals ( PERMANENTLY_FAILED_KEY ) && Boolean . valueOf ( label . getValue ( ) ) ) { return _BOOL ; } } return _BOOL ; }
8320	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; Mysplash . getInstance ( ) . addActivity ( this ) ; setTheme ( ) ; LanguageUtils . setLanguage ( this ) ; DisplayUtils . setWindowTop ( this ) ; setContentView ( R . layout . activity_preview_photo ) ; }
8329	public GenericValue findByPrimaryKey ( GenericPK primaryKey ) throws GenericEntityException { if ( primaryKey == _NULL ) { return _NULL ; } GenericValue genericValue = GenericValue . create ( primaryKey ) ; genericDAO . select ( genericValue ) ; return genericValue ; }
8364	@ Override public boolean isXIncludeAware ( ) { try { return xmlReader . getFeature ( XINCLUDE_FEATURE ) ; } catch ( SAXException exc ) { return _BOOL ; } }
8396	public void storeInfoSection ( ) throws IOException { try ( InputOutputReaderWriter io = new InputOutputReaderWriter ( file , _CHAR rw _CHAR ) ) { if ( infoSection . getInfoSectionStart ( ) <= _NUM ) throw new IOException ( _CHAR getInfoSectionStart ( ) , illegal value : _CHAR + infoSection . getInfoSectionStart ( ) ) ; io . seek ( infoSection . getInfoSectionStart ( ) ) ; infoSection . write ( io ) ; io . setLength ( io . getPosition ( ) ) ; } }
8420	public static boolean hasAll ( Intent intent , String ... extras ) { for ( String extra : extras ) { if ( ! intent . hasExtra ( extra ) ) { return _BOOL ; } } return _BOOL ; }
8425	public static boolean shouldShowRequestPermissionRationale ( Activity activity , String ... permissions ) { for ( String permission : permissions ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( activity , permission ) ) { return _BOOL ; } } return _BOOL ; }
8508	public Map . Entry < K , V > lastEntry ( ) { for ( ; ; ) { Node < K , V > n = findLast ( ) ; if ( n == _NULL ) return _NULL ; AbstractMap . SimpleImmutableEntry < K , V > e = n . createSnapshot ( ) ; if ( e != _NULL ) return e ; } }
8524	public void removeCommunicationListener ( FTPCommunicationListener listener ) { synchronized ( lock ) { communicationListeners . remove ( listener ) ; if ( communication != _NULL ) { communication . removeCommunicationListener ( listener ) ; } } }
8539	public void applyResult ( AnswerPacket answerPacket , int resultIndex ) { if ( accumulate ( ) ) { _results [ resultIndex ] = answerPacket . m_EntryPacket ; } else { if ( answerPacket . m_EntryPacket != _NULL ) _successCount ++ ; } }
8589	public void abruptlyCloseCommunication ( ) { if ( communication != _NULL ) { communication . close ( ) ; communication = _NULL ; } connected = _BOOL ; stopAutoNoopTimer ( ) ; }
8613	public static void checkGlError ( String op ) { int error = GLES20 . glGetError ( ) ; if ( error != GLES20 . GL_NO_ERROR ) { String msg = op + _CHAR : glError _NUM _CHAR + Integer . toHexString ( error ) ; Log . e ( TAG , msg ) ; throw new RuntimeException ( msg ) ; } }
8633	public void addAll ( ContextSet contextSet ) { if ( contextSet == _NULL ) { throw new NullPointerException ( _CHAR contextSet _CHAR ) ; } synchronized ( this . contexts ) { this . contexts . addAll ( contextSet . toSet ( ) ) ; } }
8653	private boolean isAnAncestor ( String className ) { for ( ClassNode parentNode : parentNodes ) { if ( parentNode . name . equals ( className ) ) { return _BOOL ; } } return _BOOL ; }
8659	@ Override protected void onStop ( ) { super . onStop ( ) ; LOG . d ( TAG , _CHAR Stopped the activity . '' ) ; if ( this . appView == _NULL ) { return ; } this . appView . handleStop ( ) ; }
8670	public static void forceDeleteOnExit ( File file ) throws IOException { if ( file . isDirectory ( ) ) { deleteDirectoryOnExit ( file ) ; } else { file . deleteOnExit ( ) ; } }
8673	public void updateSizes ( int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
8701	public Object nextElement ( ) { if ( iterator == _NULL || ! iterator . hasNext ( ) ) throw new NoSuchElementException ( ) ; Object o = iterator . next ( ) ; GSMessageImpl msg = ( GSMessageImpl ) o ; msg . setBodyReadOnly ( _BOOL ) ; msg . setPropertiesReadOnly ( _BOOL ) ; return o ; }
8764	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
8767	public void add ( final BSPTree < S > node ) { for ( final BSPTree < S > existing : list ) { if ( node == existing ) { return ; } } list . add ( node ) ; }
8796	public int lastIndexOf ( int offset , int value ) { for ( int i = offset ; i -- > _NUM ; ) { if ( _data [ i ] == value ) { return i ; } } return - _NUM ; }
8800	protected boolean confirmPassCode ( ) { mConfirmingPassCode = _BOOL ; boolean result = _BOOL ; for ( int i = _NUM ; i < mPassCodeEditTexts . length && result ; i ++ ) { result = ( ( mPassCodeEditTexts [ i ] . getText ( ) . toString ( ) ) . equals ( mPassCodeDigits [ i ] ) ) ; } return result ; }
8801	public static ContextSet fromSet ( ContextSet contextSet ) { if ( contextSet == _NULL ) { throw new NullPointerException ( _CHAR contextSet _CHAR ) ; } MutableContextSet set = new MutableContextSet ( ) ; set . addAll ( contextSet . toSet ( ) ) ; return set . immutableCopy ( ) ; }
8804	public static int findNextIndexNonZero ( double [ ] contour , int current ) { for ( int i = current + _NUM ; i < contour . length ; i ++ ) { if ( contour [ i ] != _NUM ) { return i ; } } return - _NUM ; }
8822	@ Transactional public AssetExtraction createAssetExtraction ( Asset asset , PollableTask pollableTask ) { AssetExtraction assetExtraction = new AssetExtraction ( ) ; assetExtraction . setAsset ( asset ) ; assetExtraction . setContentMd5 ( asset . getContentMd5 ( ) ) ; assetExtraction . setPollableTask ( pollableTask ) ; assetExtractionRepository . save ( assetExtraction ) ; return assetExtraction ; }
8826	private void migrate ( ) { if ( ! migrated ) { BlazeUserSettings userSettings = BlazeUserSettings . getInstance ( ) ; this . attachSourcesByDefault = userSettings . getAttachSourcesByDefault ( ) ; this . attachSourcesOnDemand = userSettings . getAttachSourcesOnDemand ( ) ; this . migrated = _BOOL ; } }
8867	public LegendOptionPanel createLegendOptionsPanel ( LegendPanel legendPanel ) { if ( legendOptionPanel == _NULL ) { legendOptionPanel = new LegendOptionPanel ( ) ; legendOptionPanel . addListener ( this ) ; refreshSymbol = legendPanel ; } return legendOptionPanel ; }
8873	public static Bitmap scaleImage ( Bitmap src , float scaleWidth , float scaleHeight ) { if ( src == _NULL ) { return _NULL ; } Matrix matrix = new Matrix ( ) ; matrix . postScale ( scaleWidth , scaleHeight ) ; return Bitmap . createBitmap ( src , _NUM , _NUM , src . getWidth ( ) , src . getHeight ( ) , matrix , _BOOL ) ; }
8921	public static void forceDeleteOnExit ( File file ) throws IOException { if ( file . isDirectory ( ) ) { deleteDirectoryOnExit ( file ) ; } else { file . deleteOnExit ( ) ; } }
8931	public boolean updateLibrariesToVersion ( @ NotNull Module module , @ NotNull List < GradleCoordinate > dependencies , @ Nullable Runnable callback ) { GradleBuildModel buildModel = GradleBuildModel . get ( module ) ; if ( buildModel == _NULL ) { return _BOOL ; } updateDependenciesInTransaction ( buildModel , module , dependencies , callback ) ; return _BOOL ; }
8945	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
8989	public static void rollback ( boolean beganTransaction , String causeMessage , Throwable causeThrowable ) throws GenericTransactionException { if ( beganTransaction ) { TransactionUtil . rollback ( causeThrowable ) ; } else { TransactionUtil . setRollbackOnly ( causeMessage , causeThrowable ) ; } }
9053	void finishScrolling ( ) { if ( isScrollingPerformed ) { notifyScrollingListenersAboutEnd ( ) ; isScrollingPerformed = _BOOL ; } invalidateLayouts ( ) ; invalidate ( ) ; }
9073	public float [ ] toArray ( float [ ] floats ) { if ( floats == _NULL ) { floats = new float [ _NUM ] ; } floats [ _NUM ] = x ; floats [ _NUM ] = y ; return floats ; }
9144	private void cleanupMinidumpFile ( ) { if ( ! CrashFileManager . tryMarkAsUploaded ( mFileToUpload ) ) { Log . w ( TAG , _CHAR Unable to mark _CHAR + mFileToUpload + _CHAR as uploaded . '' ) ; if ( ! mFileToUpload . delete ( ) ) { Log . w ( TAG , _CHAR Can not delete _CHAR + mFileToUpload ) ; } } }
9165	public boolean cancel ( boolean mayInterruptIfRunning ) { if ( cancelled != _NULL ) { return cancelled ; } Object retVal = gigaSpace . take ( remotingEntry , _NUM ) ; cancelled = retVal != _NULL ; return cancelled ; }
9170	public void updateSymbol ( RasterSymbolizer rasterSymbolizer ) { for ( VendorOptionInterface vendorOption : vendorOptionList ) { boolean displayVendorOption = VendorOptionManager . getInstance ( ) . isAllowed ( vendorOptionVersionsList , vendorOption . getVendorOption ( ) ) ; if ( displayVendorOption ) { vendorOption . updateSymbol ( rasterSymbolizer ) ; } } }
9281	public synchronized void close ( ) { done = _BOOL ; if ( line != _NULL && line . isOpen ( ) ) { line . close ( ) ; line = _NULL ; notify ( ) ; } }
9305	public boolean isFinal ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
9323	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
9328	@ Override public BigDecimal unmarshal ( final String v ) throws Exception { if ( v != _NULL && v . trim ( ) . length ( ) > _NUM ) { return new BigDecimal ( v ) ; } { return _NULL ; } }
9336	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
9344	private void buildNumPagePanel ( ) { numPagePanel . setInitialClasses ( TableCssName . NUM_PAGE_PANEL ) ; numPagePanel . setGrid ( _CHAR s12 m4 l3 _CHAR ) ; numPagePanel . setOffset ( _CHAR l3 _CHAR ) ; numPagePanel . add ( listPages ) ; numPagePanel . add ( pageLabel ) ; add ( numPagePanel ) ; }
9366	public static void checkBinomial ( final int n , final int k ) throws MathIllegalArgumentException { if ( n < k ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . BINOMIAL_INVALID_PARAMETERS_ORDER , k , n , _BOOL ) ; } if ( n < _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . BINOMIAL_NEGATIVE_PARAMETER , n ) ; } }
9451	@ Override public void saveFile ( URL urlToSave ) { String sldContents = getSLDString ( ) ; SLDDataInterface sldData = SLDEditorFile . getInstance ( ) . getSLDData ( ) ; sldData . updateSLDContents ( sldContents ) ; saveSLDData ( sldData ) ; SLDEditorFile . getInstance ( ) . fileOpenedSaved ( ) ; UndoManager . getInstance ( ) . fileSaved ( ) ; }
9497	void addAttributeValue ( String attribute , String value ) { if ( attribute . equals ( OMA_TYPE ) ) { mTypes . add ( value ) ; } else { mDescription . put ( attribute , value ) ; } }
9501	public void selectAll ( boolean select ) { if ( select ) { table . getSelectionModel ( ) . selectAll ( ) ; } else { table . getSelectionModel ( ) . clearSelection ( ) ; } }
9556	public String toString ( ) { try { return _CHAR + join ( _CHAR , _CHAR ) + _CHAR ; } catch ( Exception e ) { return _NULL ; } }
9574	public static void increment ( Calendar c , int field , int val ) { if ( isMultiYear ( field ) ) { c . add ( Calendar . YEAR , - field * val ) ; } else { c . add ( field , val ) ; } }
9607	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
9612	public boolean contains ( short value ) { for ( int i = _NUM ; i < fLength ; ++ i ) { if ( fData [ i ] == value ) { return _BOOL ; } } return _BOOL ; }
9618	void startRotate ( float startAngleDeg , float dAngleDeg , int durationMillis ) { mMode = SCROLL_MODE ; mFinished = _BOOL ; mDurationMillis = durationMillis ; mStartMillis = AnimationUtils . currentAnimationTimeMillis ( ) ; mStartAngleDeg = startAngleDeg ; mDeltaAngleDeg = dAngleDeg ; }
9640	Collection < ? extends ClientRequestResult > handleRetrieveConfigurationsRequest ( final ClientRequest configurationRequest , final Session session , final Destination replyDestination ) { if ( configurationRequest . getRequestParameter ( ) != _NULL ) { return configurationLoader . getConfigurationReports ( configurationRequest . getRequestParameter ( ) ) ; } else { return configurationLoader . getConfigurationReports ( ) ; } }
9645	private int findActivityElement ( int activityIndex ) { for ( int elementIndex = _NUM ; elementIndex < mActivityList . size ( ) ; elementIndex ++ ) { if ( mActivityList . get ( elementIndex ) . mActivityIndex == activityIndex ) { return elementIndex ; } } return - _NUM ; }
9649	public void mergeFieldDataManager ( GraphicPanelFieldManager mergedData ) { for ( String key : panelMap . keySet ( ) ) { List < PopulateDetailsInterface > panelList = panelMap . get ( key ) ; for ( PopulateDetailsInterface panel : panelList ) { mergedData . add ( panel . getFieldDataManager ( ) ) ; } } }
9661	public boolean isAnyStepCompleted ( ) { for ( boolean completedStep : completedSteps ) { if ( completedStep ) { return _BOOL ; } } return _BOOL ; }
9669	private boolean removeFilter ( ) { if ( isFiltering ( ) ) { currentEntries = entries ; filteredEntries = _NULL ; return _BOOL ; } return _BOOL ; }
9687	public static final void show ( Window owner ) { PreferencesDialog dialog = new PreferencesDialog ( owner ) ; dialog . setLocationRelativeTo ( owner ) ; dialog . setVisible ( _BOOL ) ; if ( ! dialog . canceled ) { dialog . pnlPreferences . setPreferences ( ) ; } }
9699	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
9712	public boolean containsAll ( int [ ] array ) { for ( int i = array . length ; i -- > _NUM ; ) { if ( ! contains ( array [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
9724	protected double populationVariance ( double [ ] v ) { double mean = StatUtils . mean ( v ) ; double sum = _NUM ; for ( double val : v ) { sum += ( val - mean ) * ( val - mean ) ; } return sum / v . length ; }
9727	protected boolean isPanelEnabled ( GroupIdEnum groupId ) { boolean isEnabled = _BOOL ; GroupConfigInterface group = getGroup ( groupId ) ; if ( group != _NULL ) { isEnabled = group . isPanelEnabled ( ) ; } return isEnabled ; }
9750	public void removeField ( FieldConfigBase fieldConfig ) { if ( fieldConfig != _NULL ) { Map < FieldIdEnum , FieldConfigBase > panelMap = fieldConfigMap . get ( panelId ) ; if ( panelMap != _NULL ) { panelMap . remove ( fieldConfig . getFieldId ( ) ) ; } } }
9772	public static void kickAccountFromGameServer ( Account account ) { for ( GameServerInfo gsi : getGameServers ( ) ) { if ( gsi . isAccountOnGameServer ( account . getId ( ) ) ) { gsi . getConnection ( ) . sendPacket ( new SM_REQUEST_KICK_ACCOUNT ( account . getId ( ) ) ) ; break ; } } }
9788	public boolean isShowLabel ( ) { if ( showLabel == _NULL ) { return _BOOL ; } else { return showLabel ; } }
9820	public static InvocationConstraint create ( Collection c ) { try { return reduce ( ( InvocationConstraint [ ] ) c . toArray ( new InvocationConstraint [ c . size ( ) ] ) , _BOOL ) ; } catch ( ArrayStoreException e ) { throw new IllegalArgumentException ( _CHAR element of collection is not an InvocationConstraint _CHAR ) ; } }
9838	public long optLong ( String key , long defaultValue ) { try { return getLong ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
9859	public boolean containsPrefix ( String prefix ) { for ( int i = fNamespaceSize ; i > _NUM ; i -= _NUM ) { if ( fNamespace [ i - _NUM ] == prefix ) { return _BOOL ; } } return _BOOL ; }
9874	public String assignIfPossible ( VariableRef value ) { if ( setter ( ) != _NULL ) { return format ( setter ( ) , cast ( value ) ) ; } else { return _CHAR _CHAR ; } }
9888	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
9890	public int pointsToSetHashCode ( ) { final int PRIME = _NUM ; int result = _NUM ; for ( AllocAndContext elem : this ) { result = PRIME * result + elem . hashCode ( ) ; } return result ; }
9896	private static Collection < TrustAnchor > sortPotentialAnchors ( Set < TrustAnchor > anchors ) { if ( anchors . size ( ) <= _NUM ) { return anchors ; } List < TrustAnchor > sortedAnchors = new ArrayList < TrustAnchor > ( anchors ) ; Collections . sort ( sortedAnchors , TRUST_ANCHOR_COMPARATOR ) ; return sortedAnchors ; }
9909	public void pushRect ( Rect rect , int color ) { if ( mFirstPush ) { mRectangles . clear ( ) ; mFirstPush = _BOOL ; } mRectangles . add ( new Pair < Rect , Integer > ( rect , color ) ) ; invalidate ( ) ; }
9973	public void readBody ( DataInput dataIn ) throws IOException { try { Body = SerializationHelper . readObject ( ( InputStream ) dataIn ) ; } catch ( ClassNotFoundException ex ) { throw new IOException ( ex . toString ( ) ) ; } }
9984	public static DoubleBuffer createDoubleBuffer ( DoubleBuffer buf , int size ) { if ( buf != _NULL && buf . limit ( ) == size ) { buf . rewind ( ) ; return buf ; } buf = createDoubleBuffer ( size ) ; return buf ; }
10010	private boolean isDistanceToRootCache ( Direction direction ) { int directionOrdinal = direction . getDirection ( ) ; Float f = mDistToRootCache [ directionOrdinal ] ; if ( f < _NUM ) { return _BOOL ; } return _BOOL ; }
10019	public static boolean isUnlimitedStrengthAllowed ( ) { try { return Cipher . getMaxAllowedKeyLength ( _CHAR AES _CHAR ) >= _NUM ; } catch ( NoSuchAlgorithmException e ) { return _BOOL ; } }
10029	static String unicodeToASCII ( String input ) { try { return toASCII ( input ) ; } catch ( IllegalArgumentException e ) { return input ; } }
10056	public boolean onReceivedClientCertRequest ( CordovaWebView view , ICordovaClientCertRequest request ) { for ( CordovaPlugin plugin : this . pluginMap . values ( ) ) { if ( plugin != _NULL && plugin . onReceivedClientCertRequest ( app , request ) ) { return _BOOL ; } } return _BOOL ; }
10068	private void stop ( ) { stopTimeout ( ) ; if ( this . status != AccelListener . STOPPED ) { this . sensorManager . unregisterListener ( this ) ; } this . setStatus ( AccelListener . STOPPED ) ; this . accuracy = SensorManager . SENSOR_STATUS_UNRELIABLE ; }
10088	public char nextClean ( ) { for ( ; ; ) { char c = next ( ) ; if ( c == _NUM || c > _CHAR ) { return c ; } } }
10105	@ Override public final void run ( ) { try { runImpl ( ) ; } catch ( Throwable e ) { log . warn ( _CHAR error handling ls ( _CHAR + getConnection ( ) . getIP ( ) + _CHAR ) message _CHAR + this , e ) ; } }
10117	protected void updateRowCount ( ) { int maxrow = m_rows . getMaximumRow ( ) + _NUM ; Iterator cols = getColumns ( ) ; while ( cols . hasNext ( ) ) { Column c = ( Column ) cols . next ( ) ; c . setMaximumRow ( maxrow ) ; } }
10133	public void run ( BlockExecutor blockExecutor ) { try { blockExecutor . invoke ( ) ; } catch ( Exception exception ) { handle ( exception ) ; } }
10141	@ Override public String object2Relation ( String fieldType ) { if ( fieldType != _NULL ) { if ( fieldType . equals ( _CHAR java . util . Date _CHAR ) ) { return _CHAR integer _CHAR ; } } return _NULL ; }
10148	public static boolean makeDirs ( String filePath ) { String folderName = getFolderName ( filePath ) ; if ( StringUtil . isEmpty ( folderName ) ) { return _BOOL ; } File folder = new File ( folderName ) ; return ( folder . exists ( ) && folder . isDirectory ( ) ) ? _BOOL : folder . mkdirs ( ) ; }
10169	public static boolean instanceOf ( Class < ? > objectClass , Class < ? > typeClass ) { if ( typeClass . isInterface ( ) && ! objectClass . isInterface ( ) ) { return interfaceOf ( objectClass , typeClass ) ; } else { return isOrSubOf ( objectClass , typeClass ) ; } }
10212	private LookupLocator findRegFromProxy ( ServiceRegistrar proxy ) { Iterator iter = discoveredLocators . iterator ( ) ; while ( iter . hasNext ( ) ) { LocatorReg reg = ( LocatorReg ) iter . next ( ) ; if ( ( reg . proxy ) . equals ( proxy ) ) return reg . l ; } return _NULL ; }
10284	public void resetPolicy ( ) { mPreferences . putString ( PREF_LAST_RESPONSE , Integer . toString ( Policy . RETRY ) ) ; setRetryUntil ( DEFAULT_RETRY_UNTIL ) ; setMaxRetries ( DEFAULT_MAX_RETRIES ) ; setRetryCount ( Long . parseLong ( DEFAULT_RETRY_COUNT ) ) ; setValidityTimestamp ( DEFAULT_VALIDITY_TIMESTAMP ) ; mPreferences . commit ( ) ; }
10440	public static < T > void publishService ( String url ) throws RpcException { try { ServicePublisher . publishService ( url ) ; } catch ( RegistryException t ) { throw new RpcException ( _CHAR error while publishing service : '' + url , t ) ; } }
10443	private void fixRotateOffset ( ) { if ( offsetRotate < _NUM ) { offsetRotate = _NUM ; } if ( offsetRotate > getMaxOffsetDegree ( ) ) { offsetRotate = getMaxOffsetDegree ( ) ; } }
10459	static String format ( double d ) { if ( d != d ) { return _CHAR Double . NaN , _CHAR ; } else { return ( ( d >= _NUM ) ? _CHAR + _CHAR : _CHAR _CHAR ) + Double . toString ( d ) + _CHAR d , _CHAR ; } }
10473	public void removeMostRecentValue ( ) throws MathIllegalStateException { try { eDA . discardMostRecentElements ( _NUM ) ; } catch ( MathIllegalArgumentException ex ) { throw new MathIllegalStateException ( LocalizedCoreFormats . NO_DATA ) ; } }
10515	public boolean isAbnormalPresentBySkillId ( int skillId ) { for ( Effect effect : abnormalEffectMap . values ( ) ) { if ( effect . getSkillId ( ) == skillId ) { return _BOOL ; } } return _BOOL ; }
10563	public boolean optBoolean ( String key , boolean defaultValue ) { try { return this . getBoolean ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
10585	public static void appendContentPrefix ( HttpServletRequest request , StringBuilder urlBuffer ) { try { appendContentPrefix ( request , ( Appendable ) urlBuffer ) ; } catch ( IOException e ) { throw UtilMisc . initCause ( new InternalError ( e . getMessage ( ) ) , e ) ; } }
10639	private void push ( JSONObject jo ) throws JSONException { if ( this . top >= maxdepth ) { throw new JSONException ( _CHAR Nesting too deep . '' ) ; } this . stack [ this . top ] = jo ; this . mode = jo == _NULL ? _CHAR : _CHAR ; this . top += _NUM ; }
10641	public void startSequence ( ) { if ( queue . isEmpty ( ) ) { Log . d ( TAG , _CHAR EMPTY SEQUENCE _CHAR ) ; } else { queue . poll ( ) . show ( ) ; } }
10642	private void sendCrashToServer ( Throwable ex ) { LogUtil . d ( _CHAR sendCrashToServer _CHAR ) ; if ( config . isReportToServer ( ) ) { if ( _NULL != config ) { config . getReporter ( ) . report ( ex ) ; } } }
10660	public void revertToDefaultValue ( ) { List < FieldConfigBase > fieldList = fieldConfigManager . getFields ( _NULL ) ; for ( FieldConfigBase field : fieldList ) { if ( field != _NULL ) { field . revertToDefaultValue ( ) ; } } }
10663	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set contract - gaps = _CHAR ) ; boolean collapse = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; AlignmentViewer viewer = ( AlignmentViewer ) getViewer ( ) ; viewer . getAlignmentViewerPanel ( ) . getSelectedBlock ( ) . clear ( ) ; viewer . setContractGaps ( collapse ) ; }
10672	public static byte [ ] base64DecodeString ( String base64String ) { try { return Base64 . decodeBase64 ( base64String . getBytes ( _CHAR UTF - _NUM _CHAR ) ) ; } catch ( Exception e ) { throw new RuntimeException ( _CHAR Exception while decoding '' + base64String ) ; } }
10706	public static void hidekeyboard ( Activity activity ) { try { ( ( InputMethodManager ) activity . getSystemService ( Context . INPUT_METHOD_SERVICE ) ) . hideSoftInputFromWindow ( activity . getCurrentFocus ( ) . getWindowToken ( ) , InputMethodManager . HIDE_NOT_ALWAYS ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
10717	private void reverseColourRamp ( boolean isSelected ) { int selectedIndex = rampComboBox . getSelectedIndex ( ) ; setPopulating ( _BOOL ) ; List < ValueComboBoxData > dataList = populateColourRamps ( isSelected ) ; rampComboBox . initialiseSingle ( dataList ) ; rampComboBox . setSelectedIndex ( selectedIndex ) ; setPopulating ( _BOOL ) ; }
10734	private static String fmt ( double doubleValue ) { if ( doubleValue == ( long ) doubleValue ) { return String . format ( _CHAR % d _CHAR , ( long ) doubleValue ) ; } else { return String . format ( _CHAR % s _CHAR , doubleValue ) ; } }
10745	public static void sampleInstallTinker ( ApplicationLike appLike ) { if ( isInstalled ) { TinkerLog . w ( TAG , _CHAR install tinker , but has installed , ignore _CHAR ) ; return ; } TinkerInstaller . install ( appLike ) ; isInstalled = _BOOL ; }
10756	public CsClientPacket clonePacket ( ) { try { return ( CsClientPacket ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
10783	public String toString ( ) { try { return this . toString ( _NUM ) ; } catch ( Exception e ) { return _NULL ; } }
10790	private boolean checkIfBatchIsProcessedCompletely ( BatchResult batch ) { if ( counter < batch . getSize ( ) ) { return _BOOL ; } else { return _BOOL ; } }
10866	public void reportNoop ( Console console , String message ) throws VoidOperationException { if ( ignoreNoop ) { console . warn ( message ) ; } else { throw new VoidOperationException ( message ) ; } }
10902	@ Override public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { View view = inflater . inflate ( R . layout . fragment_multi_filter , container , _BOOL ) ; initModel ( ) ; initPresenter ( ) ; initView ( view ) ; messageManagePresenter . sendMessage ( _NUM , _NULL ) ; return view ; }
10908	@ Override public boolean accept ( File file ) { if ( fileFilter != _NULL ) { return fileFilter . accept ( file ) ; } else { return super . accept ( file ) ; } }
10924	private int readSkipWs ( ) throws IOException { for ( ; ; ) { int c = _in . read ( ) ; if ( c == - _NUM || c > _CHAR ) { return c ; } } }
10934	public void eventDispatched ( AWTEvent event ) { Object source = event . getSource ( ) ; if ( event instanceof KeyEvent && source instanceof Component ) { if ( ( SwingUtilities . windowForComponent ( ( Component ) source ) == _window ) ) { ( ( KeyEvent ) event ) . consume ( ) ; } } }
10938	public boolean hasChild ( String name ) { for ( Node child : children ) { if ( child . name . equals ( name ) ) { return _BOOL ; } } return _BOOL ; }
10939	public void loadData ( ) { loadCustomers ( ) ; List < Supplier > suppliers = loadSuppliers ( ) ; List < Product > products = loadProducts ( suppliers ) ; List < CustomerReview > customerReviews = loadCustomerReviews ( products ) ; loadStock ( products ) ; loadProductCategories ( products ) ; }
10956	public void endServiceRecording ( boolean notifyRecordingEnded , String runId , String experimentTitle ) { clearNotification ( getApplicationContext ( ) , NotificationIds . RECORDER_SERVICE ) ; if ( notifyRecordingEnded ) { notifyRecordingEnded ( runId , experimentTitle ) ; } stopForeground ( _BOOL ) ; stopSelf ( ) ; }
10993	public void unregister ( String key ) throws RegistryException { try { registry . unbind ( key ) ; } catch ( Exception e ) { throw new RegistryException ( _CHAR Failed to unregister with key [ _CHAR + key + _CHAR ] _CHAR , e ) ; } }
11021	private int computeSize ( Map < Integer , Integer [ ] > integerMap ) { int count = _NUM ; for ( Integer taxonId : integerMap . keySet ( ) ) { Integer value = integerMap . get ( taxonId ) [ _NUM ] ; if ( value != _NULL ) count += value ; } return count ; }
11034	private static BigInteger toBigInteger ( BigDecimal value , boolean canBeNull ) { if ( canBeNull && value . signum ( ) == _NUM ) { return _NULL ; } else { return value . unscaledValue ( ) ; } }
11048	public void clearAll ( ) { if ( items != _NULL ) { items . clear ( ) ; } if ( emptyItems != _NULL ) { emptyItems . clear ( ) ; } }
11068	private static void checkBinomial ( final int n , final int k ) throws IllegalArgumentException { if ( n < k ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR must have n >= k for binomial coefficient ( n , k ) , got n = { _NUM } , k = { _NUM } _CHAR , n , k ) ; } if ( n < _NUM ) { throw MathRuntimeException . createIllegalArgumentException ( _CHAR must have n >= _NUM for binomial coefficient ( n , k ) , got n = { _NUM } _CHAR , n ) ; } }
11083	@ Override public boolean isEmpty ( ) { if ( dsc != _NULL ) { return dsc . isEmpty ( ) ; } else { return _BOOL ; } }
11099	public static ShortBuffer createShortBuffer ( int size ) { ShortBuffer buf = ByteBuffer . allocateDirect ( _NUM * size ) . order ( ByteOrder . nativeOrder ( ) ) . asShortBuffer ( ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
11121	public void validate ( List < ValidationException > exceptionList ) { super . validate ( exceptionList ) ; final boolean runAllValidators = Options . v ( ) . debug ( ) || Options . v ( ) . validate ( ) ; for ( BodyValidator validator : getValidators ( ) ) { if ( ! validator . isBasicValidator ( ) && ! runAllValidators ) continue ; validator . validate ( this , exceptionList ) ; } }
11147	public void disbandLegion ( Legion legion ) { for ( Integer memberObjId : legion . getLegionMembers ( ) ) { this . allCachedLegionMembers . remove ( getLegionMemberEx ( memberObjId ) ) ; } SiegeService . getInstance ( ) . cleanLegionId ( legion . getLegionId ( ) ) ; updateAfterDisbandLegion ( legion ) ; deleteLegionFromDB ( legion ) ; }
11153	private static boolean nsEquals ( String nsURI_1 , String nsURI_2 ) { if ( nsURI_1 == _NULL ) { return ( nsURI_2 == _NULL ) ; } else { return nsURI_1 . equals ( nsURI_2 ) ; } }
11178	public static boolean isJavaScriptEnabled ( HttpServletRequest request ) { HttpSession session = request . getSession ( ) ; Boolean javaScriptEnabled = ( Boolean ) session . getAttribute ( _CHAR javaScriptEnabled _CHAR ) ; if ( javaScriptEnabled != _NULL ) { return javaScriptEnabled . booleanValue ( ) ; } return _BOOL ; }
11179	public void close ( ) { if ( blk != _NULL ) { tx . bufferMgr ( ) . unpin ( currentBuff ) ; blk = _NULL ; currentBuff = _NULL ; numberOfRecords =- _NUM ; } }
11194	private boolean canUserAccessSource ( User user , OrganisationUnit source ) { for ( OrganisationUnit o : user . getOrganisationUnits ( ) ) { if ( source == o || source . getAncestors ( ) . contains ( o ) ) { return _BOOL ; } } return _BOOL ; }
11284	@ Override public void onBackPressed ( ) { if ( folderMode && ! isDisplayingFolderView ( ) ) { setFolderAdapter ( ) ; return ; } setResult ( RESULT_CANCELED ) ; super . onBackPressed ( ) ; }
11298	@ Override public boolean isDerivedFrom ( String typeNamespaceArg , String typeNameArg , int derivationMethod ) { if ( type != _NULL ) { if ( type instanceof XSSimpleTypeDecl ) { return ( ( XSSimpleTypeDecl ) type ) . isDOMDerivedFrom ( typeNamespaceArg , typeNameArg , derivationMethod ) ; } } return _BOOL ; }
11304	public boolean isIgnoreCheck ( ) { if ( ignoreCheck == _NULL ) { return _BOOL ; } else { return ignoreCheck ; } }
11428	public static Intent createWhatsAppShareIntent ( String body ) { Intent intent = new Intent ( ) ; intent . setAction ( Intent . ACTION_SEND ) ; intent . putExtra ( Intent . EXTRA_TEXT , body ) ; intent . setType ( _CHAR text / plain _CHAR ) ; intent . setPackage ( _CHAR com . whatsapp _CHAR ) ; return intent ; }
11466	public Math_Vector nor ( ) { double len = len ( ) ; if ( len != _NUM ) { this . x /= len ; this . y /= len ; } return this ; }
11472	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
11481	private String computeOverrideMethodDesc ( String desc , boolean isStatic ) { if ( isStatic ) { return desc ; } else { return instanceToStaticDescPrefix + desc . substring ( _NUM ) ; } }
11504	public boolean isIncluded ( int value ) { for ( Range r : ranges ) { if ( r . start <= value && value <= r . end ) { return _BOOL ; } } return _BOOL ; }
11507	private ConnectDatum tryConnect ( ) { try ( SocketChannel dstSocket = SocketChannel . open ( ) ) { return tryConnect ( dstSocket ) ; } catch ( IOException ex ) { throw new RuntimeException ( _CHAR socket creation failed _CHAR , ex ) ; } }
11532	public boolean isStreaming ( String file ) { if ( file . contains ( _CHAR http : // '' ) || file . contains ( '' https : // '' ) || file . contains ( '' rtsp : // '' ) ) { return true ; } else { return false ; } }
11536	public Color mul ( Color color ) { this . r *= color . r ; this . g *= color . g ; this . b *= color . b ; this . a *= color . a ; clamp ( ) ; return this ; }
11540	public void drawScreen ( int par1 , int par2 , float par3 ) { if ( reinit ) { initGui ( ) ; reinit = _BOOL ; } this . guiList . drawScreen ( par1 , par2 , par3 ) ; super . drawScreen ( par1 , par2 , par3 , _BOOL ) ; }
11563	@ Override public void onLoadHandler ( Item item ) { if ( item . getItemTemplate ( ) . isKinah ( ) ) { kinahItem = item ; } else { itemStorage . putItem ( item ) ; } }
11589	public boolean isCreateTab ( ) { if ( createTab == _NULL ) { return _BOOL ; } else { return createTab ; } }
11660	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public < T > T read ( InputStream inputStream , Class < T > classType ) throws IOException { try ( ObjectInputStream oin = new ObjectInputStream ( inputStream ) ) { return ( T ) oin . readObject ( ) ; } catch ( ClassNotFoundException e ) { throw new RuntimeException ( e ) ; } }
11672	public static void writeFloat ( DataOutputStream dos , boolean isBigEndian , float val ) throws IOException { if ( ! isBigEndian ) { writeLittleEndianFloat ( dos , val ) ; } else { dos . writeFloat ( val ) ; } }
11744	private void shiftWorldAction ( ) { Vector2 shift = ShiftWorldDialog . show ( ControlUtilities . getParentWindow ( this ) ) ; if ( shift != _NULL ) { synchronized ( Simulation . LOCK ) { this . simulation . getWorld ( ) . shift ( shift ) ; } } }
11777	public static final void onPlayerLogin ( Player player ) { for ( PlayerAlliance alliance : alliances . values ( ) ) { PlayerAllianceMember member = alliance . getMember ( player . getObjectId ( ) ) ; if ( member != _NULL ) { alliance . onEvent ( new PlayerConnectedEvent ( alliance , player ) ) ; } } }
11795	public long leafCellsCovered ( ) { long numLeaves = _NUM ; for ( S2CellId cellId : cellIds ) { int invertedLevel = S2CellId . MAX_LEVEL - cellId . level ( ) ; numLeaves += ( _NUM << ( invertedLevel << _NUM ) ) ; } return numLeaves ; }
11803	public void step ( int steps , double elapsedTime ) { if ( steps <= _NUM ) return ; if ( elapsedTime <= _NUM . _NUM ) return ; for ( int i = _NUM ; i < steps ; i ++ ) { this . step . update ( elapsedTime ) ; this . step ( ) ; } }
11845	public void writeToFileInDirectory ( File directory , String fileName , String content ) { try { Files . write ( content , new File ( directory , fileName ) , StandardCharsets . UTF_8 ) ; } catch ( IOException ioe ) { throw new RuntimeException ( ioe ) ; } }
11861	private ViewFilter complementFilterIfNecessary ( final ViewFilter viewFilter ) { FunctionUtils . checkParameterIsNotNull ( _CHAR viewFilter _CHAR , viewFilter ) ; if ( complementNextWithFilter ) { complementNextWithFilter = _BOOL ; return new ComplementedViewFilter ( viewFilter ) ; } return viewFilter ; }
11871	public boolean forEachDescending ( TIntProcedure procedure ) { for ( int i = _pos ; i -- > _NUM ; ) { if ( ! procedure . execute ( _data [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
11872	public static final void printDefaults ( ) { UIDefaults defaults = UIManager . getDefaults ( ) ; Enumeration < Object > keys = defaults . keys ( ) ; while ( keys . hasMoreElements ( ) ) { Object key = keys . nextElement ( ) ; System . out . println ( key + _CHAR : _CHAR + defaults . get ( key ) ) ; } }
11874	public static void main ( final String [ ] args ) throws InterruptedException { final CountDownLatch latch = new CountDownLatch ( _NUM ) ; final ExecutorService es = Executors . newFixedThreadPool ( _NUM ) ; es . submit ( _NULL ) ; es . submit ( _NULL ) ; latch . await ( ) ; es . shutdown ( ) ; }
11895	public boolean forEachDescending ( TShortProcedure procedure ) { for ( int i = _pos ; i -- > _NUM ; ) { if ( ! procedure . execute ( _data [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
11906	public boolean copyToScan ( UpdateScan s ) { if ( ! this . next ( ) ) return _BOOL ; s . insert ( ) ; for ( String fldName : sch . fields ( ) ) { s . setVal ( fldName , this . getVal ( fldName ) ) ; } return _BOOL ; }
11910	private static String generatePassword ( ) { String password = _CHAR sldEditor _CHAR ; StringBuilder sb = new StringBuilder ( ) ; sb . append ( getUniqueIdentifier ( ) ) ; sb . append ( System . getProperty ( _CHAR user . name _CHAR ) ) ; password = sb . toString ( ) ; return password ; }
11915	public TrackedEntityInstanceQueryParams addAttributesIfNotExist ( List < QueryItem > attrs ) { for ( QueryItem attr : attrs ) { if ( attributes != _NULL && ! attributes . contains ( attr ) ) { attributes . add ( attr ) ; } } return this ; }
11941	public Set < String > keySet ( ) { HashSet < String > set = new HashSet < String > ( ) ; Iterator < String > keys = keys ( ) ; while ( keys . hasNext ( ) ) { set . add ( keys . next ( ) ) ; } return set ; }
11958	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
11980	public boolean more ( ) throws JSONException { next ( ) ; if ( end ( ) ) { return _BOOL ; } back ( ) ; return _BOOL ; }
12068	public static final int find ( int [ ] a , int key ) { for ( int i = _NUM ; i < a . length ; i ++ ) { if ( a [ i ] == key ) { return i ; } } return - _NUM ; }
12069	private static void populate ( ) { if ( descriptionMap . isEmpty ( ) ) { descriptionMap . put ( jpg , _CHAR JPEG ( *. png ) _CHAR ) ; descriptionMap . put ( gif , _CHAR GIF ( *. gif ) _CHAR ) ; descriptionMap . put ( tif , _CHAR TIFF ( *. tif ) _CHAR ) ; descriptionMap . put ( png , _CHAR PNG ( *. png ) _CHAR ) ; } }
12079	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( undoRedoObject != _NULL ) { if ( undoRedoObject . getNewValue ( ) instanceof ReferencedEnvelope ) { ReferencedEnvelope oldValue = ( ReferencedEnvelope ) undoRedoObject . getNewValue ( ) ; populateField ( oldValue ) ; } } }
12101	public static < T > void unpublishService ( ProviderConfig < T > providerConfig ) throws RpcException { try { ServicePublisher . unpublishService ( providerConfig ) ; } catch ( RegistryException e ) { throw new RpcException ( _CHAR error while unpublishing service : '' + providerConfig , e ) ; } }
12151	public int peek ( ) { if ( type == MUST_READ ) { int argAndType = in . readByte ( ) & _NUM ; type = argAndType & _NUM ; arg = ( argAndType & _NUM ) >> _NUM ; } return type ; }
12181	private static String decode ( String pathElement ) { try { return URLDecoder . decode ( pathElement , Charsets . UTF_8 . name ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw Throwables . propagate ( e ) ; } }
12201	private static X509Certificate convertToJcaCertificate ( X509CertificateHolder bouncyCastleCertificate ) { try { return new JcaX509CertificateConverter ( ) . getCertificate ( bouncyCastleCertificate ) ; } catch ( CertificateException e ) { throw new CertificateCreationException ( _CHAR Unable to convert X590CertificateHolder to JCA X590Certificate _CHAR , e ) ; } }
12224	public S2LatLngRect intersection ( S2LatLngRect other ) { R1Interval intersectLat = lat . intersection ( other . lat ) ; S1Interval intersectLng = lng . intersection ( other . lng ) ; if ( intersectLat . isEmpty ( ) || intersectLng . isEmpty ( ) ) { return empty ( ) ; } return new S2LatLngRect ( intersectLat , intersectLng ) ; }
12248	private void checkHead ( ) { assert Thread . holdsLock ( contents ) ; final Ticket oldHead = head ; if ( contents . isEmpty ( ) ) head = _NULL ; else head = ( Ticket ) contents . first ( ) ; if ( head == oldHead ) return ; contents . notifyAll ( ) ; }
12281	final public void response ( List < JSON > arr ) { if ( arr == _NULL ) { responseJson ( _CHAR [ ] _CHAR ) ; } else { responseJson ( arr . toString ( ) ) ; } }
12293	@ Override public void saveSLDData ( SLDDataInterface sldData ) { boolean saved = _BOOL ; for ( ExtensionInterface extension : extensionList ) { if ( saved == _BOOL ) { saved = extension . save ( sldData ) ; } } }
12303	private int [ ] hashes ( InputStream input ) throws IOException { try { return ByteStreams . readBytes ( input , new HashingByteProcessor ( ) ) ; } finally { input . close ( ) ; } }
12328	public Module module ( String module ) { for ( Module m : modules . values ( ) ) { if ( m . name . equals ( module ) ) { return m ; } } return _NULL ; }
12346	@ Override public Node firstChild ( ) { if ( fCurrentNode == _NULL ) return _NULL ; Node node = getFirstChild ( fCurrentNode ) ; if ( node != _NULL ) { fCurrentNode = node ; } return node ; }
12368	public Builder baseUrl ( String baseUrl ) { checkNotNull ( baseUrl , _CHAR baseUrl == _NULL _CHAR ) ; HttpUrl httpUrl = HttpUrl . parse ( baseUrl ) ; if ( httpUrl == _NULL ) { throw new IllegalArgumentException ( _CHAR Illegal URL : _CHAR + baseUrl ) ; } return baseUrl ( httpUrl ) ; }
12469	protected void removeExecutionLink ( JobEntity jobEntity ) { if ( jobEntity . getExecutionId ( ) != _NULL ) { ExecutionEntity execution = getExecutionEntityManager ( ) . findById ( jobEntity . getExecutionId ( ) ) ; if ( execution != _NULL ) { execution . getJobs ( ) . remove ( jobEntity ) ; } } }
12491	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
12496	@ Override public void startEffect ( Effect effect ) { Creature effected = effect . getEffected ( ) ; if ( effected instanceof Player ) { effected . setTarget ( _NULL ) ; PacketSendUtility . sendPacket ( ( Player ) effected , new SM_TARGET_SELECTED ( _NULL ) ) ; PacketSendUtility . broadcastPacket ( effected , new SM_TARGET_UPDATE ( ( Player ) effected ) ) ; } }
12497	void removeFromDisplaySlots ( Objective objective ) { for ( Iterator < Entry < DisplaySlot , Objective >> it = objectivesByDisplaySlot . entrySet ( ) . iterator ( ) ; it . hasNext ( ) ; ) { Entry < DisplaySlot , Objective > entry = it . next ( ) ; if ( entry . getValue ( ) == objective ) { it . remove ( ) ; } } }
12559	@ Override public void onMapReady ( GoogleMap googleMap ) { this . annotationViewWrapper = ( AnnotationViewWrapper ) this . getView ( ) . findViewById ( R . id . annotationViewWrapper ) ; this . googleMap = googleMap ; this . googleMap . setOnCameraMoveListener ( this ) ; this . googleMap . setOnCameraMoveStartedListener ( this ) ; this . googleMap . setOnMapLoadedCallback ( this ) ; this . setMapRenderer ( this . mapRenderer ) ; }
12589	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
12616	@ Override public void actionPerformed ( ActionEvent ev ) { AttributesWindow viewer = ( AttributesWindow ) getViewer ( ) ; if ( viewer != _NULL ) { if ( TaxonomyData . getName2IdMap ( ) . get ( viewer . selectedTaxon ) != _NUM ) { execute ( _CHAR show webpage taxon = _CHAR_CHAR_CHAR ; _CHAR ) ; } } }
12672	private void unwatchScreen ( ) { windowManager . removeView ( touchView ) ; touchViewParams = _NULL ; touchView = _NULL ; screenScanHandler . removeCallbacks ( screenScanRunnable ) ; screenScanRunnable = _NULL ; screenScanHandler = _NULL ; }
12691	private void addToQueue ( Collection < SerialMessage > msgs , ZWaveCommandClass commandClass , int endpointId ) { if ( msgs == _NULL ) { return ; } for ( SerialMessage serialMessage : msgs ) { addToQueue ( node . encapsulate ( serialMessage , commandClass , endpointId ) ) ; } }
12699	public static boolean searchInArray ( int [ ] data , int key ) { for ( int i = _NUM ; i < data . length ; i ++ ) { if ( key == data [ i ] ) { return _BOOL ; } } return _BOOL ; }
12750	protected void updateEnablements ( ) { int type = getSaveType ( ) ; browseButton . setEnabled ( type == FILESYSTEM ) ; filenameCombo . setEnabled ( type == FILESYSTEM ) ; wsPathText . setEnabled ( type == WORKSPACE ) ; wsBrowseButton . setEnabled ( type == WORKSPACE ) ; if ( type == WORKSPACE ) wsBrowsed = _BOOL ; }
12753	synchronized void dropObservables ( UUID host ) { Map < CacheKey , Observable > map = mCache . snapshot ( ) ; for ( CacheKey cacheKey : map . keySet ( ) ) { if ( cacheKey . uuid == host ) { mCache . remove ( cacheKey ) ; } } }
12776	public void updateTask ( ) { this . villager . getLookHelper ( ) . setLookPositionWithEntity ( this . mate , _NUM . _NUM , ( float ) this . villager . getVerticalFaceSpeed ( ) ) ; this . villager . getNavigator ( ) . tryMoveToEntityLiving ( this . mate , this . moveSpeed ) ; ++ this . spawnBabyDelay ; if ( this . spawnBabyDelay >= _NUM && this . villager . getDistanceSqToEntity ( this . mate ) < _NUM . _NUM ) { this . spawnBaby ( ) ; } }
12778	@ Override public boolean next ( ) { boolean ok = idx . next ( ) ; if ( ok ) { RecordId rid = idx . getDataRecordId ( ) ; ts . moveToRecordId ( rid ) ; } return ok ; }
12785	public static int readInt ( DataInputStream dis , boolean isBigEndian ) throws IOException { if ( ! isBigEndian ) { return readLittleEndianInt ( dis ) ; } else { return dis . readInt ( ) ; } }
12802	public synchronized void removePeer ( JsonRpcPeer peer ) { if ( mReceivingPeers . remove ( peer ) != _NULL ) { mReceivingPeersSnapshot = _NULL ; if ( mListener != _NULL ) { mListener . onPeerUnregistered ( peer ) ; } } }
12830	public String nextLine ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( _CHAR No more lines _CHAR ) ; } String currentLine = cachedLine ; cachedLine = _NULL ; return currentLine ; }
12833	public void stopRefresh ( String time ) { if ( mPullRefreshing == _BOOL ) { mPullRefreshing = _BOOL ; mHeaderTimeView . setText ( time ) ; resetHeaderHeight ( ) ; } mHeaderTimeView . setText ( time ) ; }
12839	protected final Tuple addInternal ( Tuple t ) { if ( m_tuples . add ( t ) ) { return t ; } else { return _NULL ; } }
12850	private void removeDownloadIdFromSharedPrefs ( int downloadId ) { Set < String > downloadIds = getStoredDownloadInfo ( DOWNLOAD_NOTIFICATION_IDS ) ; String id = Integer . toString ( downloadId ) ; if ( downloadIds . contains ( id ) ) { downloadIds . remove ( id ) ; storeDownloadInfo ( DOWNLOAD_NOTIFICATION_IDS , downloadIds ) ; } }
12880	public static PlaceholderFragment newInstance ( int sectionNumber , String content ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; args . putString ( ARG_CONTENT , content ) ; fragment . setArguments ( args ) ; return fragment ; }
12885	public String cleanTextValueSafe ( String text ) { if ( text != _NULL ) { return text ; } else { return text ; } }
12908	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
13004	protected void removeExecutionLink ( TimerJobEntity jobEntity ) { if ( jobEntity . getExecutionId ( ) != _NULL ) { ExecutionEntity execution = getExecutionEntityManager ( ) . findById ( jobEntity . getExecutionId ( ) ) ; if ( execution != _NULL ) { execution . getTimerJobs ( ) . remove ( jobEntity ) ; } } }
13019	static protected boolean hasVowel ( List phones ) { for ( int i = _NUM ; i < phones . size ( ) ; i ++ ) { if ( isVowel ( ( String ) phones . get ( i ) ) ) { return _BOOL ; } } return _BOOL ; }
13079	private static boolean canDetermineAvailability ( Interval available , Interval needed ) { if ( available != _NULL && needed != _NULL ) { if ( available . contains ( needed ) || available . getStart ( ) . isAfter ( needed . getStart ( ) ) ) { return _BOOL ; } } return _BOOL ; }
13112	public boolean needsRewrite ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
13130	public void remove ( ) throws RecurrenceRuleException { try { rule . remove ( ) ; } catch ( GenericEntityException e ) { throw new RecurrenceRuleException ( e . getMessage ( ) , e ) ; } }
13151	public void onStart ( ) { if ( mInitializationComplete ) { startNowAndProcessPendingItems ( ) ; } else { mOnStartPending = _BOOL ; } }
13162	private void addRegion ( final SubHyperplane < S > sub , final List < Region < T >> list ) { if ( sub != _NULL ) { @ SuppressWarnings ( _CHAR unchecked _CHAR ) final Region < T > region = ( ( AbstractSubHyperplane < S , T > ) sub ) . getRemainingRegion ( ) ; if ( region != _NULL ) { list . add ( region ) ; } } }
13176	public static boolean isAnyInfinity ( double [ ] x ) { for ( double value : x ) { if ( Double . isInfinite ( value ) ) { return _BOOL ; } } return _BOOL ; }
13180	private void doInitialize ( ) { initAccessibility ( ) ; if ( _NULL == content ) { content = new StartPageContent ( ) ; add ( content , BorderLayout . CENTER ) ; setFocusable ( _BOOL ) ; } }
13189	private boolean hasIdleInvokers ( ) { for ( AsyncEventListenerInvoker invoker : this . scheduledInvokers ) { if ( invoker . isIdle ( ) ) { return _BOOL ; } } return _BOOL ; }
13212	@ Override public boolean accept ( File file , String name ) { for ( String prefix : prefixes ) { if ( caseSensitivity . checkStartsWith ( name , prefix ) ) { return _BOOL ; } } return _BOOL ; }
13222	public ItemStack dispenseStack ( IBlockSource source , ItemStack stack ) { if ( FluidUtil . getFluidContained ( stack ) != _NULL ) { return dumpContainer ( source , stack ) ; } else { return fillContainer ( source , stack ) ; } }
13265	@ Override public void populateField ( Double value ) { if ( slider != _NULL ) { double ratio = value / this . maxValue ; int sliderRatio = ( int ) ( ratio * slider . getMaximum ( ) ) ; slider . setValue ( sliderRatio ) ; oldValueObj = Integer . valueOf ( sliderRatio ) ; } }
13266	public static ShareFileFragment newInstance ( OCFile fileToShare , Account account ) { ShareFileFragment fragment = new ShareFileFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_FILE , fileToShare ) ; args . putParcelable ( ARG_ACCOUNT , account ) ; fragment . setArguments ( args ) ; return fragment ; }
13277	public static Bitmap scaleImage ( Bitmap org , float scaleWidth , float scaleHeight ) { if ( org == _NULL ) { return _NULL ; } Matrix matrix = new Matrix ( ) ; matrix . postScale ( scaleWidth , scaleHeight ) ; return Bitmap . createBitmap ( org , _NUM , _NUM , org . getWidth ( ) , org . getHeight ( ) , matrix , _BOOL ) ; }
13293	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR add file = _CHAR ) ; final String fileName = np . getAbsoluteFileName ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; Basic . checkFileReadableNonEmpty ( fileName ) ; CompareWindow viewer = ( CompareWindow ) getParent ( ) ; viewer . addFile ( fileName ) ; }
13305	public static void show ( Context context , String text ) { if ( mToast == _NULL ) { mToast = Toast . makeText ( context , text , Toast . LENGTH_SHORT ) ; } mToast . setDuration ( Toast . LENGTH_SHORT ) ; mToast . setText ( text ) ; mToast . show ( ) ; }
13317	public static void finishZipEntry ( ZipOutputStream out ) { try { out . finish ( ) ; } catch ( Exception ex ) { throw new RuntimeException ( _CHAR Failed to finish the content of the ZipOutputStream _CHAR , ex ) ; } }
13319	public Node item ( int index ) { try { return item ( index , _NULL ) ; } catch ( ParserConfigurationException e ) { throw new RuntimeException ( e ) ; } }
13329	public void clearAll ( ) { if ( items != _NULL ) { items . clear ( ) ; } if ( emptyItems != _NULL ) { emptyItems . clear ( ) ; } }
13342	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
13371	public void updatePositions ( ViewTransform viewTransform ) { for ( ConstraintWidget widget : mWidgets . values ( ) ) { widget . updateDrawPosition ( ) ; WidgetCompanion companion = ( WidgetCompanion ) widget . getCompanionWidget ( ) ; WidgetInteractionTargets widgetInteraction = companion . getWidgetInteractionTargets ( ) ; widgetInteraction . updatePosition ( viewTransform ) ; } }
13388	public static boolean isCollection ( Object value ) { if ( value != _NULL ) { if ( value . getClass ( ) . isArray ( ) || value instanceof Collection < ? > ) { return _BOOL ; } } return _BOOL ; }
13389	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
13434	public void appendInfo ( final String infoMessage ) { if ( this . infoMessage == _NULL ) { this . infoMessage = infoMessage ; } else { this . infoMessage += ( _CHAR \ n _CHAR + infoMessage ) ; } }
13501	public Color sub ( Color color ) { this . r -= color . r ; this . g -= color . g ; this . b -= color . b ; this . a -= color . a ; clamp ( ) ; return this ; }
13510	public static ByteBuffer createByteBuffer ( int size ) { ByteBuffer buf = ByteBuffer . allocateDirect ( size ) . order ( ByteOrder . nativeOrder ( ) ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
13527	private boolean containsPhoneDescendants ( List < Element > tokensAndBoundaries ) { for ( Element element : tokensAndBoundaries ) { if ( element . getTagName ( ) . equals ( MaryXML . TOKEN ) && element . getElementsByTagName ( MaryXML . PHONE ) . getLength ( ) > _NUM ) { return _BOOL ; } } return _BOOL ; }
13539	public GenericValue queryFirst ( ) throws GenericEntityException { EntityFindOptions efo = makeEntityFindOptions ( ) ; if ( ! this . useCache && ! this . filterByDate ) { efo . setMaxRows ( _NUM ) ; } GenericValue result = EntityUtil . getFirst ( query ( efo ) ) ; return result ; }
13555	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR show gridLines = _CHAR ) ; boolean show = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; if ( getViewer ( ) instanceof ChartViewer ) { ( ( ChartViewer ) getViewer ( ) ) . setShowVerticalGridLines ( show ) ; } }
13614	public void loadBasicClasses ( ) { addReflectionTraceClasses ( ) ; for ( int i = SootClass . BODIES ; i >= SootClass . HIERARCHY ; i -- ) { for ( String name : basicclasses [ i ] ) { tryLoadClass ( name , i ) ; } } }
13685	@ Override protected void onStartLoading ( ) { if ( mData != _NULL ) { deliverResult ( mData ) ; } if ( takeContentChanged ( ) || mData == _NULL ) { forceLoad ( ) ; } }
13690	public void beginOperation ( ISVNClientAdapter aSvnClient ) { lock . acquire ( ) ; this . svnClient = aSvnClient ; aSvnClient . addNotifyListener ( this ) ; if ( operationNotifyListener != _NULL ) { aSvnClient . setProgressListener ( operationNotifyListener ) ; } }
13722	public static void assertAndEnsureCleanDb ( DmnEngine dmnEngine ) { log . debug ( _CHAR verifying that db is clean after test _CHAR ) ; DmnRepositoryService repositoryService = dmnEngine . getDmnEngineConfiguration ( ) . getDmnRepositoryService ( ) ; List < DmnDeployment > deployments = repositoryService . createDeploymentQuery ( ) . list ( ) ; if ( deployments != _NULL && deployments . isEmpty ( ) == _BOOL ) { throw new AssertionError ( _CHAR DmnDeployments is not empty _CHAR ) ; } }
13778	public void dumpBinary ( DataOutputStream os ) throws IOException { os . writeInt ( numberOfChannels ) ; os . writeInt ( sampleRate ) ; os . writeFloat ( coeffMin ) ; os . writeFloat ( coeffRange ) ; os . writeFloat ( postEmphasis ) ; os . writeInt ( residualFold ) ; }
13781	public DexlibAbstractInstruction instructionAtAddress ( int address ) { DexlibAbstractInstruction i = _NULL ; while ( i == _NULL && address >= _NUM ) { i = instructionAtAddress . get ( address ) ; address -- ; } return i ; }
13803	public static void unpublishAllServices ( ) throws RpcException { try { ServicePublisher . unpublishAllServices ( ) ; } catch ( RegistryException e ) { throw new RpcException ( _CHAR error while unpublishing all services '' , e ) ; } }
13832	public static void stopTiming ( String timePhaseName ) { TimedPhase timePhase = RLOG . get ( ) . times . get ( timePhaseName ) ; if ( timePhase == _NULL ) { LOG . warn ( _CHAR Tried to stop non - existent phase : { } _CHAR , timePhaseName ) ; return ; } timePhase . stop ( ) ; }
13862	public boolean isEnabled ( ) { if ( enabled == _NULL ) { return _BOOL ; } else { return enabled ; } }
13863	@ Override public void onDestroyView ( ) { super . onDestroyView ( ) ; if ( mProgressAnimator != _NULL ) { mProgressAnimator . removeAllListeners ( ) ; } Log . d ( TAG , _CHAR onDestroyView ( ) _CHAR ) ; mPrefs . unregisterOnSharedPreferenceChangeListener ( mPrefChangeListener ) ; }
13892	private static boolean inStringArray ( String value , String [ ] stringArray ) { for ( int i = _NUM ; i < stringArray . length ; i ++ ) { if ( stringArray [ i ] . equals ( value ) ) { return _BOOL ; } } return _BOOL ; }
13900	public static boolean isValidMobile ( @ NonNull String mobile ) { if ( ! TextUtils . isEmpty ( mobile ) && mobile . length ( ) == _NUM ) { if ( mobile . startsWith ( _CHAR _NUM _CHAR ) || mobile . startsWith ( _CHAR _NUM _CHAR ) || mobile . startsWith ( _CHAR _NUM _CHAR ) ) { return _BOOL ; } } return _BOOL ; }
13943	private void populateMultiShapeList ( ) { multiListModel . clear ( ) ; segmentListModel . clear ( ) ; for ( int index = _NUM ; index < wktGeometry . getNoOfSegments ( ) ; index ++ ) { multiListModel . addElement ( wktGeometry . getMultiShapeName ( index ) ) ; } multiList . setSelectedIndex ( _NUM ) ; }
13987	public void closeAll ( ) { if ( this . servers == _NULL ) { return ; } for ( int i = _NUM ; i < this . servers . length ; i ++ ) { this . forceClose ( this . servers [ i ] ) ; } }
14009	@ Override public void clear ( ) { if ( mSize != _NUM ) { freeArrays ( mHashes , mArray , mSize ) ; mHashes = ContainerHelpers . EMPTY_INTS ; mArray = ContainerHelpers . EMPTY_OBJECTS ; mSize = _NUM ; } }
14084	public static boolean checkExtension ( String query ) { for ( String ext : getExtensions ( ) ) { if ( ext . equals ( query ) ) { return _BOOL ; } } return _BOOL ; }
14136	public boolean hasHiddenValue ( ) { for ( EnumValue value : values ) { if ( ! value . isReachable ( ) ) { return _BOOL ; } } return _BOOL ; }
14169	private void encodeStyle ( ) { if ( styleWrapper . getWorkspace ( ) == _NULL || ( defaultWorkspaceName == _NULL ) || ( styleWrapper . getWorkspace ( ) . compareTo ( defaultWorkspaceName ) == _NUM ) ) { styleString = styleWrapper . getStyle ( ) ; } else { styleString = String . format ( _CHAR % s % s % s _CHAR , styleWrapper . getWorkspace ( ) , SEPARATOR , styleWrapper . getStyle ( ) ) ; } }
14171	@ Override public void run ( ) { Context context = ApplicationStatus . getApplicationContext ( ) ; if ( ChromeVersionInfo . isOfficialBuild ( ) ) { Intent omahaIntent = OmahaClient . createInitializeIntent ( context ) ; context . startService ( omahaIntent ) ; } DelayedInvalidationsController . getInstance ( ) . notifyPendingInvalidations ( context ) ; }
14189	@ Override public boolean remove ( Object object ) { final int index = indexOf ( object ) ; if ( index >= _NUM ) { removeAt ( index ) ; return _BOOL ; } return _BOOL ; }
14212	public static JsonValue parse ( Reader reader ) throws IOException { if ( reader == _NULL ) { throw new NullPointerException ( _CHAR reader is _NULL _CHAR ) ; } DefaultHandler handler = new DefaultHandler ( ) ; new JsonParser ( handler ) . parse ( reader ) ; return handler . getValue ( ) ; }
14261	private void takeScreenshot ( ) { Bitmap bmp = screen . grabScreen ( ) ; if ( bmp == _NULL ) { return ; } scanPokemon ( bmp , Optional . < String > absent ( ) ) ; bmp . recycle ( ) ; }
14291	public boolean removeByObject ( T obj ) { if ( getNumSegments ( ) > _NUM ) throw new RuntimeException ( _CHAR ConcurrentSegmentedStoredList : : removeByObject not supported for multi segments list '' ) ; if ( _segments [ _NUM ] . removeByObject ( obj ) ) { sizeUpdater . decrementAndGet ( this ) ; return _BOOL ; } return _BOOL ; }
14292	public static boolean canAttack ( Player player , VisibleObject target ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canAttack . ordinal ( ) ] ) { if ( ! restrictions . canAttack ( player , target ) ) { return _BOOL ; } } return _BOOL ; }
14300	@ Override public final void storeData ( final T object ) { if ( log ( object ) && ! fallbackManager . isFallbackFileEmpty ( ) ) { if ( ! this . dataRecovery . isRunning ( ) ) { dataRecovery . setPersistenceManager ( this ) ; new Thread ( dataRecovery ) . start ( ) ; } } }
14304	private static RetainFragment findOrCreateRetainFragment ( FragmentManager fm ) { RetainFragment mRetainFragment = ( RetainFragment ) fm . findFragmentByTag ( TAG ) ; if ( mRetainFragment == _NULL ) { mRetainFragment = new RetainFragment ( ) ; fm . beginTransaction ( ) . add ( mRetainFragment , TAG ) . commitAllowingStateLoss ( ) ; } return mRetainFragment ; }
14310	public void addCandy ( PokemonFamilyId family , int amount ) { if ( candies . containsKey ( family ) ) { candies . put ( family , candies . get ( family ) + amount ) ; } else { candies . put ( family , amount ) ; } }
14321	public NodeReactor findNodeReactor ( IapMessageFields messageFields ) { for ( int i = _NUM ; i < nodeReactors . length ; i ++ ) { if ( messageFields . equalsReceiverNodeId ( this . nodeReactors [ i ] . nodeId ) ) { return nodeReactors [ i ] ; } } return _NULL ; }
14352	public void replaceToken ( Token token , String replacement ) { try { replace ( token . start , token . length , replacement , _NULL ) ; } catch ( BadLocationException ex ) { log . log ( Level . WARNING , _CHAR unable to replace token : _CHAR + token , ex ) ; } }
14356	public static BtHelperClient from ( Context context ) { if ( sBtHelperClient == _NULL ) { synchronized ( BtHelperClient . class ) { if ( sBtHelperClient == _NULL ) sBtHelperClient = new BtHelperClient ( context ) ; } } return sBtHelperClient ; }
14410	@ Override public final void run ( ) { try { runImpl ( ) ; } catch ( Throwable e ) { log . warn ( _CHAR error handling gs ( _CHAR + getConnection ( ) . getIP ( ) + _CHAR ) message _CHAR + this , e ) ; } }
14444	public void onResume ( ) { if ( mInitializationComplete ) { mActivityDelegate . onResumeWithNative ( ) ; } else { mOnResumePending = _BOOL ; } }
14460	private void resetList ( ) { getPreferenceScreen ( ) . removeAll ( ) ; addPreferencesFromResource ( R . xml . website_preferences ) ; configureGlobalToggles ( ) ; if ( ( mCategory . showJavaScriptSites ( ) && ! PrefServiceBridge . getInstance ( ) . javaScriptEnabled ( ) ) ) { getPreferenceScreen ( ) . addPreference ( new AddExceptionPreference ( getActivity ( ) , ADD_EXCEPTION_KEY , getAddExceptionDialogMessage ( ) , this ) ) ; } }
14503	public PanOptions build ( ) { PanOptions options = new PanOptions ( ) ; options . animate = this . animate ; options . duration = this . duration ; options . easeLinearity = this . easeLinearity ; options . noMoveStart = this . noMoveStart ; return options ; }
14510	public static String u2or4 ( int v ) { if ( v == ( char ) v ) { return u2 ( v ) ; } else { return u4 ( v ) ; } }
14524	@ NonNull private List < String > mapObsoleteElements ( List < String > names ) { List < String > elementsToRemove = new ArrayList < > ( names . size ( ) ) ; for ( String name : names ) { if ( name . startsWith ( _CHAR android _CHAR ) ) continue ; elementsToRemove . add ( name ) ; } return elementsToRemove ; }
14588	public AionClientPacket clonePacket ( ) { try { return ( AionClientPacket ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
14613	public static fra_list newInstance ( String param1 , String param2 ) { fra_list fragment = new fra_list ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
14628	public static boolean canUseWarehouse ( Player player ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canUseWarehouse . ordinal ( ) ] ) { if ( ! restrictions . canUseWarehouse ( player ) ) { return _BOOL ; } } return _BOOL ; }
14641	@ ObjectiveCName ( _CHAR removeEntry : index : _CHAR ) public List removeEntry ( String entry , int index ) { java . util . List entries = this . getEntries ( ) ; if ( entries . get ( index ) . equals ( entry ) ) { entries . remove ( index ) ; } this . updateList ( entries ) ; return this ; }
14665	public static Integer calcResultViewIndex ( SolrDocumentList results , Integer viewSize ) { Integer viewIndex = _NULL ; if ( results != _NULL && viewSize != _NULL && viewSize > _NUM ) { long start = results . getStart ( ) ; viewIndex = ( int ) ( start / ( long ) viewSize ) ; } return viewIndex ; }
14691	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
14698	public String lastError ( ) { try { return response . jsonPath ( ) . get ( _CHAR error . message _CHAR ) ; } catch ( IllegalArgumentException | JsonPathException e ) { return _CHAR _CHAR ; } }
14705	public static boolean readBool ( byte b ) { if ( b == _NUM ) { return _BOOL ; } else { return _BOOL ; } }
14741	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( theCamera . getCamera ( ) ) ; } }
14793	public static IngredientsFragment newInstance ( Recipe recipe , int sectionNumber ) { IngredientsFragment fragment = new IngredientsFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
14797	public boolean isPresent ( String name ) { if ( ! features . isPresent ( name ) ) { return getVoice ( ) . getFeatures ( ) . isPresent ( name ) ; } else { return _BOOL ; } }
14815	public static RecipeFragment newInstance ( Recipe recipe , int sectionNumber ) { RecipeFragment fragment = new RecipeFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
14845	public void deleteByAppId ( Long appId ) { List < Config > configs = configDao . listByAppId ( appId , _NUM , _NUM ) ; if ( configs != _NULL && ! configs . isEmpty ( ) ) { for ( Config config : configs ) { delete ( config ) ; } } }
14887	@ JsonIgnore public boolean isProcessValueDeadbandEnabled ( ) { if ( valueDeadbandType == DataTagDeadband . DEADBAND_PROCESS_ABSOLUTE || valueDeadbandType == DataTagDeadband . DEADBAND_PROCESS_RELATIVE || valueDeadbandType == DataTagDeadband . DEADBAND_PROCESS_ABSOLUTE_VALUE_DESCR_CHANGE || valueDeadbandType == DataTagDeadband . DEADBAND_PROCESS_RELATIVE_VALUE_DESCR_CHANGE ) { return _BOOL ; } else { return _BOOL ; } }
14903	public static void sleep ( double durationInSec ) { try { TimeUnit . SECONDS . sleep ( ( long ) ( durationInSec ) ) ; } catch ( InterruptedException e ) { LOG . error ( _CHAR Sleep was interrupted _CHAR , e ) ; } }
14905	@ Override public synchronized void reset ( ) throws IOException { try { in . reset ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
14948	public static FileDetailFragment newInstance ( OCFile fileToDetail , Account account ) { FileDetailFragment frag = new FileDetailFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_FILE , fileToDetail ) ; args . putParcelable ( ARG_ACCOUNT , account ) ; frag . setArguments ( args ) ; return frag ; }
14962	public GenericValue create ( GenericValue value ) throws GenericEntityException { if ( value == _NULL ) { return _NULL ; } int retVal = genericDAO . insert ( value ) ; if ( Debug . verboseOn ( ) ) Debug . logVerbose ( _CHAR Insert Return Value : _CHAR + retVal , module ) ; return value ; }
15005	private void displayExpression ( ExpressionNode node ) { if ( node == _NULL ) { return ; } dataSourceAttributePanel . setDataType ( node . getType ( ) ) ; dataSourceAttributePanel . setAttribute ( node . getExpression ( ) ) ; revalidate ( ) ; }
15023	public static boolean isWhitespace ( String s ) { if ( isEmpty ( s ) ) return _BOOL ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { char c = s . charAt ( i ) ; if ( whitespace . indexOf ( c ) == - _NUM ) return _BOOL ; } return _BOOL ; }
15100	public void afterCallingEvictionStrategy ( ) { int res = _numOfCurrentEvictionStrategyCallersUpdater . decrementAndGet ( this ) ; if ( res == _NUM && _needToRemoveFromEvictionStrategy ) { synchronized ( this ) { notifyAll ( ) ; } } }
15137	public static DoubleBuffer createDoubleBuffer ( int size ) { DoubleBuffer buf = ByteBuffer . allocateDirect ( _NUM * size ) . order ( ByteOrder . nativeOrder ( ) ) . asDoubleBuffer ( ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
15154	private static Class < ? extends Activity > guessErrorActivityClass ( Context context ) { Class < ? extends Activity > resolvedActivityClass ; resolvedActivityClass = CustomActivityOnCrash . getErrorActivityClassWithIntentFilter ( context ) ; if ( resolvedActivityClass == _NULL ) { resolvedActivityClass = DefaultErrorActivity . class ; } return resolvedActivityClass ; }
15178	public void populateExpression ( Expression expression ) { this . storedExpression = expression ; String expressionString = _CHAR _CHAR ; if ( expression != _NULL ) { expressionString = expression . toString ( ) ; } expressionTextField . setText ( expressionString ) ; }
15187	public synchronized void checkOwnership ( ) throws LockingException { if ( _NULL == lockAcquireFuture || ! lockAcquireFuture . isDefined ( ) ) { throw new LockingException ( lockPath , _CHAR check ownership before acquiring _CHAR ) ; } if ( ! haveLock ( ) ) { throw new LockingException ( lockPath , _CHAR Lost lock ownership _CHAR ) ; } }
15213	public static Type < ? > valueOf ( final String typeDescriptor ) { try { return TypeUtil . parseTypeDescriptor ( typeDescriptor ) ; } catch ( TypeUtil . InvalidTypeDescriptorException e ) { throw new IllegalArgumentException ( typeDescriptor + _CHAR is an invalid type descriptor _CHAR ) ; } }
15228	private synchronized void _stop ( ) { while ( m_activities . size ( ) > _NUM ) { Activity a = ( Activity ) m_activities . get ( m_activities . size ( ) - _NUM ) ; a . cancel ( ) ; } _setRunning ( _BOOL ) ; notify ( ) ; }
15267	public double sumOfValues ( ) { double dSum = _NUM ; Iterator iValIter = hDistro . values ( ) . iterator ( ) ; while ( iValIter . hasNext ( ) ) { dSum += ( Double ) iValIter . next ( ) ; } return dSum ; }
15295	public void clear ( ) { if ( mSize != _NUM ) { freeArrays ( mHashes , mArray , mSize ) ; mHashes = ContainerHelpers . EMPTY_INTS ; mArray = ContainerHelpers . EMPTY_OBJECTS ; mSize = _NUM ; } }
15296	public static boolean hasDataType ( DataType dataType , DataType [ ] dataTypes ) { for ( int i = _NUM ; i < dataTypes . length ; i ++ ) { if ( dataType . equals ( dataTypes [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
15309	public Split [ ] asArray ( ) { Split [ ] result = new Split [ size ( ) ] ; int count = _NUM ; for ( Iterator it = iterator ( ) ; it . hasNext ( ) ; ) { result [ count ++ ] = ( Split ) it . next ( ) ; } return result ; }
15324	private InvocationConstraints createInvocationConstraints ( ) { if ( MIN_RETRY >= sleepTime [ tryIndx ] ) { return new InvocationConstraints ( new ConnectionAbsoluteTime ( System . currentTimeMillis ( ) + sleepTime [ tryIndx ] ) , _NULL ) ; } else { return InvocationConstraints . EMPTY ; } }
15337	public synchronized void cancelConflictingJobs ( CopyJob newJob ) throws IOException { for ( CopyJob job : queue ) { if ( job . conflicts ( newJob ) ) { node . message ( _CHAR top : now cancel existing conflicting job = _CHAR + job + _CHAR due to newJob = _CHAR + newJob ) ; job . cancel ( _CHAR conflicts with new job _CHAR , _NULL ) ; } } }
15376	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
15387	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
15402	public void makeCurrent ( EGLSurface drawSurface , EGLSurface readSurface ) { if ( eGLDisplay == EGL14 . EGL_NO_DISPLAY ) { Log . d ( TAG , _CHAR NOTE : makeCurrent w / o display _CHAR ) ; } if ( ! EGL14 . eglMakeCurrent ( eGLDisplay , drawSurface , readSurface , eGLContext ) ) { throw new RuntimeException ( _CHAR eglMakeCurrent ( draw , read ) failed _CHAR ) ; } }
15413	public void destroyView ( ) throws CanceledException { searchManager . getFindDialogAsToolBar ( ) . close ( ) ; frame . setVisible ( _BOOL ) ; doc . getSampleSelection ( ) . removeSampleSelectionListener ( selectionListener ) ; MeganProperties . removePropertiesListListener ( menuBar . getRecentFilesListener ( ) ) ; dir . removeViewer ( this ) ; frame . dispose ( ) ; }
15421	public void findHighestTiles ( ) { if ( ! highestTilesFound ) { for ( int x = _NUM ; x < CHUNK_SIZE ; x ++ ) { findHighestTile ( x ) ; } highestTilesFound = _BOOL ; } }
15466	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
15524	public static void override ( List < FileSystemInterface > overrideExtensionList ) { if ( overrideExtensionList != _NULL ) { extensionList = overrideExtensionList ; } else { extensionList . clear ( ) ; } }
15539	public String encrypt ( String input ) { if ( input == _NULL || input . length ( ) == _NUM ) { return input ; } byte [ ] inputBytes = input . getBytes ( UTF_8 ) ; byte [ ] outputBytes = encrypt ( inputBytes ) ; return new String ( outputBytes , UTF_8 ) ; }
15543	public static JsonValue parse ( String string ) { if ( string == _NULL ) { throw new NullPointerException ( _CHAR string is _NULL _CHAR ) ; } DefaultHandler handler = new DefaultHandler ( ) ; new JsonParser ( handler ) . parse ( string ) ; return handler . getValue ( ) ; }
15576	public boolean showDialog ( ProcessFunction existingProcessFunction ) { this . existingProcessFunction = existingProcessFunction ; if ( existingProcessFunction != _NULL ) { displayFunction ( existingProcessFunction . getName ( ) ) ; } setVisible ( _BOOL ) ; return okButtonPressed ; }
15577	private void addToken ( String tokenStr ) { Integer tokenInt = ( Integer ) fTokenNames . get ( tokenStr ) ; if ( tokenInt == _NULL ) { tokenInt = new Integer ( fTokenNames . size ( ) ) ; fTokenNames . put ( tokenInt , tokenStr ) ; } addToken ( tokenInt . intValue ( ) ) ; }
15605	private boolean matchesFilter ( FunctionName functionName , List < FunctionNameFilterInterface > functionNameFilterList ) { for ( FunctionNameFilterInterface filter : functionNameFilterList ) { if ( filter . accept ( functionName ) ) { return _BOOL ; } } return _BOOL ; }
15642	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( ) ; } }
15651	@ TargetApi ( Build . VERSION_CODES . M ) public static boolean hasPermission ( Activity activity , String [ ] permissions ) { for ( String permission : permissions ) { if ( activity . checkSelfPermission ( permission ) != PackageManager . PERMISSION_GRANTED ) { return _BOOL ; } } return _BOOL ; }
15656	public Vector2f mult ( float scalar , Vector2f product ) { if ( _NULL == product ) { product = new Vector2f ( ) ; } product . x = x * scalar ; product . y = y * scalar ; return product ; }
15686	private Uri whichContentStore ( ) { if ( Environment . getExternalStorageState ( ) . equals ( Environment . MEDIA_MOUNTED ) ) { return android . provider . MediaStore . Images . Media . EXTERNAL_CONTENT_URI ; } else { return android . provider . MediaStore . Images . Media . INTERNAL_CONTENT_URI ; } }
15753	void remask ( ) { if ( parsedFormatInfo == _NULL ) { return ; } DataMask dataMask = DataMask . values ( ) [ parsedFormatInfo . getDataMask ( ) ] ; int dimension = bitMatrix . getHeight ( ) ; dataMask . unmaskBitMatrix ( bitMatrix , dimension ) ; }
15773	private boolean isDiscovered ( LookupLocator lct ) { Iterator iter = discoveredLocators . iterator ( ) ; while ( iter . hasNext ( ) ) { LocatorReg reg = ( LocatorReg ) iter . next ( ) ; if ( reg . l . equals ( lct ) ) return _BOOL ; } return _BOOL ; }
15774	public static CanFollow fromSnippets ( KindredSnippets [ ] snippets ) { for ( KindredSnippets obj : snippets ) { if ( obj instanceof CanFollow ) { return ( CanFollow ) obj ; } } return _NULL ; }
15781	public int totalSize ( ) { int total = _NUM ; for ( Map . Entry < K , Counter < V >> entry : counterMap . entrySet ( ) ) { Counter < V > counter = entry . getValue ( ) ; total += counter . size ( ) ; } return total ; }
15788	public static void splitAndLog ( String tag , String text ) { ArrayList < String > messageList = Utils . splitString ( text ) ; for ( String message : messageList ) { if ( isDebug ( ) ) { Log . d ( tag , message ) ; } } }
15827	public static boolean is3G ( Context context ) { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetInfo = connectivityManager . getActiveNetworkInfo ( ) ; if ( activeNetInfo != _NULL && activeNetInfo . getType ( ) == ConnectivityManager . TYPE_MOBILE ) { return _BOOL ; } return _BOOL ; }
15843	public JSONArray names ( ) { JSONArray ja = new JSONArray ( ) ; Iterator keys = keys ( ) ; while ( keys . hasNext ( ) ) { ja . put ( keys . next ( ) ) ; } return ja . length ( ) == _NUM ? _NULL : ja ; }
15848	public void preLoadSymbol ( ) { for ( String key : panelMap . keySet ( ) ) { List < PopulateDetailsInterface > panelList = panelMap . get ( key ) ; for ( PopulateDetailsInterface panel : panelList ) { panel . preLoadSymbol ( ) ; } } }
15862	public boolean insertIntoNextEmptySlot ( ) { boolean found = searchFor ( EMPTY ) ; if ( found ) { Constant flag = INUSE_CONST ; setVal ( currentPos ( ) , flag ) ; } return found ; }
15873	public static void writeFileRaw ( String fileName , byte [ ] [ ] contents ) throws IOException { try ( OutputStream output = new BufferedOutputStream ( new FileOutputStream ( fileName ) ) ) { for ( byte [ ] content : contents ) { output . write ( content ) ; } output . flush ( ) ; } }
15875	public void onStart ( ) { if ( mFullscreenManager != _NULL ) { mLastContentOffset = mFullscreenManager . getContentOffset ( ) ; mLastVisibleContentOffset = mFullscreenManager . getVisibleContentOffset ( ) ; mFullscreenManager . addListener ( this ) ; } requestRender ( ) ; }
15914	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
15997	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; Scoop . getInstance ( ) . apply ( this ) ; setContentView ( R . layout . activity_scoop_settings ) ; parseExtras ( savedInstanceState ) ; setupActionBar ( ) ; setupRecyclerView ( ) ; }
15999	public static ExecutorRequirement create ( ExecutorInfo executorInfo ) throws InvalidRequirementException { if ( executorInfo . getExecutorId ( ) . getValue ( ) . isEmpty ( ) ) { return createExecutorRequirement ( executorInfo ) ; } else { return getExistingExecutorRequirement ( executorInfo ) ; } }
16022	public void startAnimations ( ) { isStopSearchingAnim = _BOOL ; if ( animatorSet == _NULL ) { animatorSet = new AnimatorSet ( ) ; animatorSet . playTogether ( lineCircleAnim ( ) , rotateCircleAnim ( ) , smallCircleAnim ( ) , largeCircleAnim ( ) ) ; } animatorSet . start ( ) ; }
16047	private static InvocationConstraint reduce ( InvocationConstraint [ ] constraints , boolean allAbs ) { verify ( constraints , _NUM ) ; int n = reduce0 ( constraints ) ; if ( n == _NUM ) { return constraints [ _NUM ] ; } return new ConstraintAlternatives ( ( InvocationConstraint [ ] ) Constraint . trim ( constraints , n ) , allAbs ) ; }
16068	public static boolean hasSelfPermissions ( Context context , String ... permissions ) { for ( String permission : permissions ) { if ( permissionExists ( permission ) && ! hasSelfPermission ( context , permission ) ) { return _BOOL ; } } return _BOOL ; }
16075	boolean inSameSubroutine ( final Label block ) { for ( int i = _NUM ; i < srcAndRefPositions . length ; ++ i ) { if ( ( srcAndRefPositions [ i ] & block . srcAndRefPositions [ i ] ) != _NUM ) { return _BOOL ; } } return _BOOL ; }
16106	public String nextLine ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( _CHAR No more lines _CHAR ) ; } String currentLine = cachedLine ; cachedLine = _NULL ; return currentLine ; }
16165	public void createOffscreenSurface ( int width , int height ) { if ( eGLSurface != EGL14 . EGL_NO_SURFACE ) { throw new IllegalStateException ( _CHAR surface already created _CHAR ) ; } eGLSurface = eglCore . createOffscreenSurface ( width , height ) ; this . width = width ; this . height = height ; }
16196	private static String massageURI ( String uri ) { uri = uri . trim ( ) ; int protocolEnd = uri . indexOf ( _CHAR ) ; if ( protocolEnd < _NUM || isColonFollowedByPortNumber ( uri , protocolEnd ) ) { uri = _CHAR http : // '' + uri ; } return uri ; }
16222	public static void operateTraced ( ResourceResolverFactory factory , String userId , OperateCallback callback ) { try { operate ( factory , userId , callback ) ; } catch ( OperateException e ) { LOG . error ( OPERATE_ERROR_MESSAGE , e ) ; } }
16231	public boolean isApplicable ( ) { try { return getViewer ( ) . isPCoATab ( ) && getViewer ( ) . getPcoaTab ( ) . getPCoA ( ) . getEigenValues ( ) != _NULL ; } catch ( Exception ex ) { return _BOOL ; } }
16250	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
16259	public void stopPreview ( ) { if ( mCamera != _NULL && mPreviewing ) { mCamera . stopPreview ( ) ; mPreviewCallback . setHandler ( _NULL , _NUM ) ; mAutoFocusCallback . setHandler ( _NULL , _NUM ) ; mPreviewing = _BOOL ; } }
16274	private void fireEquipmentSupervisionUpdate ( final SupervisionEvent supervisionEvent ) { Set < SupervisionListener > listeners = equipmentSupervisionListeners . get ( supervisionEvent . getEntityId ( ) ) ; if ( listeners != _NULL ) { for ( SupervisionListener listener : listeners ) { listener . onSupervisionUpdate ( supervisionEvent ) ; } } }
16275	static String parseMethodDesc_return ( String s ) { int j ; j = s . lastIndexOf ( _CHAR ) ; if ( j >= _NUM ) { return parseDesc ( s . substring ( j + _NUM ) , _CHAR , _CHAR ) ; } return parseDesc ( s , _CHAR , _CHAR ) ; }
16288	public static ByteBuffer createByteBuffer ( ByteBuffer buf , int size ) { if ( buf != _NULL && buf . limit ( ) == size ) { buf . rewind ( ) ; return buf ; } buf = createByteBuffer ( size ) ; return buf ; }
16297	public static float parseFloat ( String text ) throws DataParseException { try { return Float . parseFloat ( text ) ; } catch ( NumberFormatException e ) { throw new DataParseException ( e ) ; } }
16348	public boolean isFullSplitSystem ( Taxa taxa ) { BitSet bits = taxa . getBits ( ) ; for ( Iterator it = iterator ( ) ; it . hasNext ( ) ; ) { Split split = ( Split ) it . next ( ) ; if ( ! split . getTaxa ( ) . equals ( bits ) ) return _BOOL ; } return _BOOL ; }
16399	public boolean isUncheckedConversionTo ( TypeDecl dest ) { ASTNode $ State state = state ( ) ; try { return ( ! dest . isRawType ( ) ) && this . isRawType ( ) ; } finally { } }
16480	private void notifyUpdated ( List < AirMapTraffic > updated ) { if ( updated == _NULL || updated . isEmpty ( ) ) { return ; } for ( AirMapTrafficListener listener : listeners ) { listener . onUpdateTraffic ( updated ) ; } }
16486	public int indexOf ( int offset , short value ) { for ( int i = offset ; i < _pos ; i ++ ) { if ( _data [ i ] == value ) { return i ; } } return - _NUM ; }
16494	public static IntBuffer createIntBuffer ( int size ) { IntBuffer buf = ByteBuffer . allocateDirect ( _NUM * size ) . order ( ByteOrder . nativeOrder ( ) ) . asIntBuffer ( ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
16521	@ SuppressWarnings ( _CHAR deprecation _CHAR ) public void exit ( Context context , boolean isClearCache ) { try { finishAllActivity ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
16534	public TupleSet removeSet ( String name ) { TupleSet ts = ( TupleSet ) m_map . remove ( name ) ; if ( ts != _NULL ) { m_sets . remove ( ts ) ; if ( m_lstnr != _NULL ) ts . removeTupleSetListener ( m_lstnr ) ; } return ts ; }
16568	public void addNewEntry ( ) { FeatureTypeConstraint ftc = styleFactory . createFeatureTypeConstraint ( DEFAULT_NAME , Filter . INCLUDE , new Extent [ _NUM ] ) ; ftcList . add ( ftc ) ; this . fireTableDataChanged ( ) ; if ( parentObj != _NULL ) { parentObj . featureTypeConstraintUpdated ( ) ; } }
16573	public static Observations fromSnippets ( KindredSnippets [ ] snippets ) { for ( KindredSnippets obj : snippets ) { if ( obj instanceof Observations ) { return ( Observations ) obj ; } } return _NULL ; }
16632	public void stopPreview ( ) { if ( camera != _NULL && previewing ) { camera . stopPreview ( ) ; previewCallback . setHandler ( _NULL , _NUM ) ; autoFocusCallback . setHandler ( _NULL , _NUM ) ; previewing = _BOOL ; } }
16695	private BSPTree < Euclidean1D > childAfter ( BSPTree < Euclidean1D > node ) { if ( isDirect ( node ) ) { return node . getPlus ( ) ; } else { return node . getMinus ( ) ; } }
16724	@ Override protected String dateToString ( DateTimeData date ) { StringBuffer message = new StringBuffer ( _NUM ) ; message . append ( _CHAR ) ; message . append ( _CHAR ) ; append ( message , date . month , _NUM ) ; append ( message , ( char ) date . utc , _NUM ) ; return message . toString ( ) ; }
16752	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( slider != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof Integer ) { Integer newValue = ( Integer ) undoRedoObject . getNewValue ( ) ; slider . setValue ( newValue . intValue ( ) ) ; } } }
16755	public SimplePollingContainerConfigurer eventListenerMethod ( Object eventListener , String methodName ) { MethodEventListenerAdapter methodEventListenerAdapter = new MethodEventListenerAdapter ( ) ; methodEventListenerAdapter . setDelegate ( eventListener ) ; methodEventListenerAdapter . setMethodName ( methodName ) ; methodEventListenerAdapter . afterPropertiesSet ( ) ; pollingEventListenerContainer . setEventListener ( methodEventListenerAdapter ) ; return this ; }
16779	public static void writePemStringToFile ( File file , String pemDataToWrite ) { try { FileUtils . write ( file , pemDataToWrite ) ; } catch ( IOException e ) { throw new ExportException ( _CHAR Unable to write PEM string to file : _CHAR + file . getName ( ) , e ) ; } }
16783	public static boolean hasAny ( Intent intent , String ... extras ) { for ( String extra : extras ) { if ( intent . hasExtra ( extra ) ) { return _BOOL ; } } return _BOOL ; }
16785	private LinkedHashSet < DimensionField > calculateDefaultDimensionFields ( @ NotNull LinkedHashSet < DimensionField > dimensionFields , @ NotNull LinkedHashSet < DimensionField > defaultDimensionFields ) { if ( defaultDimensionFields . isEmpty ( ) ) { return dimensionFields . stream ( ) . limit ( _NUM ) . collect ( Collectors . toCollection ( _NULL ) ) ; } else { return defaultDimensionFields ; } }
16791	void dumpBinary ( DataOutputStream os ) throws IOException { os . writeInt ( type ) ; os . writeInt ( phone ) ; os . writeInt ( start ) ; os . writeInt ( end ) ; os . writeInt ( prev ) ; os . writeInt ( next ) ; }
16815	@ Override public void populateExpression ( Object objValue ) { if ( comboBox != _NULL ) { if ( objValue instanceof String ) { String sValue = ( String ) objValue ; populateField ( sValue ) ; } } }
16846	public int truncate_file1 ( String appender_file_id ) throws IOException , MyException { String [ ] parts = new String [ _NUM ] ; this . errno = this . split_file_id ( appender_file_id , parts ) ; if ( this . errno != _NUM ) { return this . errno ; } return this . truncate_file ( parts [ _NUM ] , parts [ _NUM ] ) ; }
16850	public byte [ ] serialize ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( metadataFormatVersion ) . append ( LINE_SPLITTER ) ; sb . append ( dlType ) . append ( LINE_SPLITTER ) ; sb . append ( dlConfig . serialize ( ) ) ; LOG . debug ( _CHAR Serialized dl metadata { } . _CHAR , sb ) ; return sb . toString ( ) . getBytes ( UTF_8 ) ; }
16876	@ Override public void run ( ) { try { AudioSystem . write ( m_audioInputStream , m_targetType , m_outputFile ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
16881	private void acknowledgeQueueMessage ( String messageId ) { try { _queueService . acknowledge ( _queueName , ImmutableList . of ( messageId ) ) ; } catch ( Exception e ) { _log . error ( _CHAR Failed to acknowledge message : [ messageId = { } ] _CHAR , messageId , e ) ; } }
16890	protected < T > T decodeValue ( String str , Class < T > clazz ) throws DecodeException { try { return mapper . readValue ( str , clazz ) ; } catch ( Exception e ) { throw new DecodeException ( _CHAR Failed to decode : _CHAR + e . getMessage ( ) ) ; } }
16892	@ Deprecated public static int offset ( Schema sch , String fldName ) { int pos = _NUM ; for ( String fldname : sch . fields ( ) ) { if ( fldName . equals ( fldname ) ) break ; pos += Page . maxSize ( sch . type ( fldname ) ) ; } return pos ; }
16950	public static boolean isInTinkerPatchServiceProcess ( Context context ) { String process = getProcessName ( context ) ; String service = TinkerServiceInternals . getTinkerPatchServiceName ( context ) ; if ( service == _NULL || service . length ( ) == _NUM ) { return _BOOL ; } return process . equals ( service ) ; }
16968	@ Override public void addView ( View child , int index , ViewGroup . LayoutParams params ) { if ( contentView == _NULL ) { super . addView ( child , index , params ) ; } else { contentView . addView ( child , index , params ) ; } }
16978	private void showDrawableError ( ) { Dialog dialog = new Dialog ( _CHAR Error ... _CHAR , getSkin ( ) ) ; Label label = new Label ( _CHAR Error while adding new drawables .\ nEnsure that image dimensions are \ nless than maximums specified in project .\ nRolling back changes ... '' , getSkin ( ) ) ; label . setAlignment ( Align . center ) ; dialog . text ( label ) ; dialog . button ( _CHAR OK _CHAR ) ; dialog . show ( getStage ( ) ) ; }
16991	public void clearAll ( ) { if ( items != _NULL ) { items . clear ( ) ; } if ( emptyItems != _NULL ) { emptyItems . clear ( ) ; } }
17000	private Object parseElement ( Node element ) throws XmlParseException { try { return parseElementRaw ( element ) ; } catch ( Exception e ) { throw new XmlParseException ( _CHAR Failed to parse : _CHAR + element . getNodeName ( ) , e ) ; } }
17031	private BSPTree < Euclidean1D > childBefore ( BSPTree < Euclidean1D > node ) { if ( isDirect ( node ) ) { return node . getMinus ( ) ; } else { return node . getPlus ( ) ; } }
17045	public boolean isValidPoint ( double x , double y ) { if ( x < xval [ _NUM ] || x > xval [ xval . length - _NUM ] || y < yval [ _NUM ] || y > yval [ yval . length - _NUM ] ) { return _BOOL ; } else { return _BOOL ; } }
17056	protected void handlePreResponse ( String ticket , JobsApiRequest apiRequest , AsyncResponse asyncResponse , Observable < PreResponse > preResponseObservable , boolean isEmpty ) { if ( isEmpty ) { handleJobResponse ( ticket , apiRequest , asyncResponse ) ; } else { handleResultsResponse ( preResponseObservable , asyncResponse , apiRequest ) ; } }
17082	protected void populateStandardData ( FeatureTypeStyle featureTypeStyle ) { StandardData standardData = new StandardData ( ) ; if ( featureTypeStyle != _NULL ) { standardData . name = featureTypeStyle . getName ( ) ; standardData . description = featureTypeStyle . getDescription ( ) ; } populateStandardData ( standardData ) ; }
17093	public void updateSymbol ( TextSymbolizer textSymbolizer ) { for ( VendorOptionInterface vendorOption : vendorOptionList ) { boolean displayVendorOption = VendorOptionManager . getInstance ( ) . isAllowed ( vendorOptionVersionsList , vendorOption . getVendorOption ( ) ) ; if ( displayVendorOption ) { vendorOption . updateSymbol ( textSymbolizer ) ; } } }
17135	public static String mkSdCardCmdName ( ) { String os = System . getProperty ( _CHAR os . name _CHAR ) ; String cmd = _CHAR mksdcard _CHAR ; if ( os . startsWith ( _CHAR Windows _CHAR ) ) { cmd += _CHAR . exe _CHAR ; } return cmd ; }
17142	private Long createProcessPIK ( ) { Random r = new Random ( ) ; int pik = r . nextInt ( PIK_MAX + _NUM ) ; if ( pik < PIK_MIN ) { pik += PIK_MIN ; } return Long . valueOf ( pik ) ; }
17148	@ Override public boolean processData ( ByteBuffer data ) { LsClientPacket pck = lsPacketHandler . handle ( data , this ) ; log . debug ( _CHAR recived packet : _CHAR + pck ) ; if ( pck != _NULL && pck . read ( ) ) { ThreadPoolManager . getInstance ( ) . executeLsPacket ( pck ) ; } return _BOOL ; }
17165	public static Var map ( Resource resource ) { if ( isHasResourceResource ( resource ) ) { return var ( ) ; } Var var = base ( resource ) ; var = var . value ( resource . getValue ( ) ) ; return var ; }
17197	public boolean isResourceNotAJar ( Resource resource ) { try { return ! resource . getURI ( ) . getScheme ( ) . equals ( _CHAR jar _CHAR ) ; } catch ( IOException e ) { return _BOOL ; } }
17201	private MessageDigest cloneMessageDigest ( ) { try { return ( MessageDigest ) messageDigest . clone ( ) ; } catch ( CloneNotSupportedException e ) { return getMessageDigest ( ) ; } }
17213	public double optDouble ( int index , double defaultValue ) { try { return this . getDouble ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
17248	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( checkBox != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof Boolean ) { Boolean newValue = ( Boolean ) undoRedoObject . getNewValue ( ) ; checkBox . setSelected ( newValue . booleanValue ( ) ) ; } } }
17270	public static void removeService ( String url ) throws RpcException { try { ServicePublisher . removeService ( url ) ; } catch ( RegistryException e ) { throw new RpcException ( _CHAR error while removing service : '' + url , e ) ; } }
17281	public DockerPortMapping withHostPort ( int hostPort ) { DockerPortMapping newMapping = new DockerPortMapping ( ) ; newMapping . protocol = protocol ; newMapping . containerPort = containerPort ; newMapping . hostIp = hostIp ; newMapping . hostPort = String . valueOf ( hostPort ) ; return newMapping ; }
17296	Collection < ? extends ClientRequestResult > handleExecuteCommandRequest ( final ClientRequest executeCommandRequest ) { final Collection < CommandReport > commandReports = new ArrayList < CommandReport > ( _NUM ) ; commandReports . add ( commandExecutionManager . execute ( ( CommandExecuteRequest < ? > ) executeCommandRequest . getObjectParameter ( ) ) ) ; if ( LOG . isDebugEnabled ( ) ) { LOG . debug ( _CHAR Finished executing command - returning report . '' ) ; } return commandReports ; }
17334	static public double KL_symmetric ( Distribution p , Distribution q ) { if ( p . asTreeMap ( ) . size ( ) == q . asTreeMap ( ) . size ( ) ) { return ( _NUM . _NUM * ( KL_asymmetric ( p , q ) + KL_asymmetric ( q , p ) ) ) ; } else { return _NUM ; } }
17398	public void clear ( ) { Iterator sets = m_map . entrySet ( ) . iterator ( ) ; while ( sets . hasNext ( ) ) { Map . Entry entry = ( Map . Entry ) sets . next ( ) ; ( ( TupleSet ) entry . getValue ( ) ) . clear ( ) ; } m_count = _NUM ; }
17439	public static void fireNotification ( Context context , Task [ ] tasks ) { if ( tasks . length == _NUM ) { fireForSingleTask ( context , tasks [ _NUM ] ) ; } else { fireForMultipleTasks ( context , tasks ) ; } }
17443	private void finalizeRecord ( ) { myPage . setVal ( currentPos , new IntegerConstant ( getLastRecordPosition ( ) ) ) ; setPreviousNextRecordPosition ( currentPos + pointerSize ) ; setLastRecordPosition ( currentPos ) ; currentPos += pointerSize ; setNextRecordPosition ( currentPos ) ; currentPos += pointerSize ; }
17446	synchronized public void clear ( boolean clearPersistent ) throws KeyStoreException , NoSuchAlgorithmException , CertificateException , IOException { if ( clearPersistent ) { options . store . delete ( ) ; } initTransientStore ( ) ; initPersistentStore ( ) ; initTrustManager ( ) ; }
17466	public void addLanguage ( Long languageId ) { if ( languageId != _NULL ) { addLanguage ( languageId . toString ( ) ) ; } else { Logger . warn ( this , _CHAR Tried to add languageId Null ! _CHAR ) ; } }
17520	public boolean isLedgerHandleClosed ( LedgerDescriptor ledgerDesc ) throws BKException { RefCountedLedgerHandle refhandle = getLedgerHandle ( ledgerDesc ) ; if ( _NULL == refhandle ) { LOG . error ( _CHAR Accessing ledger { } without opening . '' , ledgerDesc ) ; throw BKException . create ( BKException . Code . UnexpectedConditionException ) ; } return refhandle . handle . isClosed ( ) ; }
17521	public Iterator < RecordID > scan ( ) { List < BEntry > validEntries = getAllValidEntries ( ) ; List < RecordID > rids = new ArrayList < RecordID > ( ) ; for ( BEntry le : validEntries ) { rids . add ( le . getRecordID ( ) ) ; } return rids . iterator ( ) ; }
17588	Collection < ? extends ClientRequestResult > handleDeviceClassNamesRequest ( final ClientRequest deviceClassNamesRequest ) { Collection < DeviceClassNameResponse > classNames = new ArrayList < > ( ) ; Collection < String > names = deviceClassFacade . getDeviceClassNames ( ) ; for ( String name : names ) { classNames . add ( TransferObjectFactory . createTransferDeviceName ( name ) ) ; } return classNames ; }
17590	private static String extractContentType ( String line ) throws IOException { line = line . toLowerCase ( ) ; int end = line . indexOf ( _CHAR ; _CHAR ) ; if ( end == - _NUM ) { end = line . length ( ) ; } return line . substring ( _NUM , end ) . trim ( ) ; }
17599	public static ExecutableElement findInjectedCtor ( TypeElement cls , ProcessingEnvironment env ) { for ( Element element : cls . getEnclosedElements ( ) ) { if ( element . getKind ( ) . equals ( ElementKind . CONSTRUCTOR ) && isInjected ( element , env ) ) { return ( ExecutableElement ) element ; } } return _NULL ; }
17716	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
17773	static < TypeOfValue > boolean arrayContains ( final TypeOfValue [ ] array , final TypeOfValue value ) { for ( final TypeOfValue arrayValue : array ) { if ( arrayValue == value || ( arrayValue != _NULL && arrayValue . equals ( value ) ) ) { return _BOOL ; } } return _BOOL ; }
17799	public void startValueScope ( ) { fValuesCount = _NUM ; for ( int i = _NUM ; i < fFieldCount ; i ++ ) { fLocalValues [ i ] = _NULL ; fLocalValueTypes [ i ] = _NUM ; fLocalItemValueTypes [ i ] = _NULL ; } }
17845	public List < ValidationError > validate ( @ Nullable AndroidFacet facet ) { List < ValidationError > errors = Lists . newArrayList ( ) ; if ( facet != _NULL ) { errors . addAll ( deployTargetManager . validate ( facet ) ) ; errors . addAll ( debuggerManager . validate ( facet ) ) ; } return errors ; }
17898	@ Override public void addListener ( DataSourceUpdatedInterface listener ) { if ( ! listenerList . contains ( listener ) ) { listenerList . add ( listener ) ; if ( getGeometryType ( ) != GeometryTypeEnum . UNKNOWN ) { notifyDataSourceLoaded ( ) ; } } }
17956	public char nextClean ( ) throws JSONException { for ( ; ; ) { char c = next ( ) ; if ( c == _NUM || c > _CHAR ) { return c ; } } }
17995	protected int nextChar ( ) throws IOException { if ( top < _NUM ) { return catfile . read ( ) ; } else { return stack [ top -- ] ; } }
18008	public static String unescape ( String s ) { try { return URLDecoder . decode ( s , _CHAR UTF - _NUM _CHAR ) ; } catch ( Exception e ) { return s ; } }
18011	public final void seek ( final long offset ) { try { bs . seek ( offset ) ; } catch ( IOException e ) { System . err . println ( _CHAR Seek failed _CHAR + e ) ; } }
18034	public void selectionChanged ( ISelection selection ) { if ( selection == _NULL ) { selection = StructuredSelection . EMPTY ; } if ( delegate != _NULL ) { delegate . selectionChanged ( this , selection ) ; } }
18039	private long calcLastProcessedkey ( ) { ReplicationInContext replicationInContext = getReplicationInContext ( ) ; ReplicationBlobstoreBulkContext replicationBlobstoreBulkContext = replicationInContext . getReplicationBlobstoreBulkContext ( ) ; if ( replicationBlobstoreBulkContext != _NULL && replicationBlobstoreBulkContext . getBlobStoreReplicationBulkConsumeHelper ( ) != _NULL ) { return replicationBlobstoreBulkContext . getBlobStoreReplicationBulkConsumeHelper ( ) . getLastProcessedKey ( ) ; } return _lastProcessedKey ; }
18063	public void encoding ( ) { if ( stripe_unit_size % block_nbr != _NUM ) { throw new RuntimeException ( _CHAR Can not striping . wrong DATA_LENGTH ! _CHAR ) ; } STAR_encoding_row ( ) ; STAR_encoding_diag1 ( ) ; STAR_encoding_diag2 ( ) ; }
18074	public void typeRepeat ( int key , int count ) throws InterruptedException { if ( count <= _NUM ) { return ; } for ( int i = _NUM ; i < count ; i ++ ) { type ( key ) ; } }
18093	private boolean isValid ( ) { try { return myTestValidity . call ( ) ; } catch ( Exception e ) { return _BOOL ; } }
18096	public void removeAll ( String key ) { if ( key == _NULL ) { throw new NullPointerException ( _CHAR key _CHAR ) ; } synchronized ( contexts ) { contexts . removeIf ( _NULL ) ; } }
18152	public void initGui ( ) { this . buttonList . clear ( ) ; this . initProfileList ( ) ; this . profileListCtrl = new GuiSelectSettingsProfile . List ( ) ; this . profileListCtrl . registerScrollButtons ( _NUM , _NUM ) ; this . initGuiButtons ( ) ; updateButtonEnablement ( this . selectedProfile ) ; }
18166	public Color add ( Color color ) { this . r += color . r ; this . g += color . g ; this . b += color . b ; this . a += color . a ; clamp ( ) ; return this ; }
18295	private int pop ( ) { if ( outputStackTop > _NUM ) { return outputStack [ -- outputStackTop ] ; } else { return STACK | - ( -- owner . inputStackTop ) ; } }
18304	public static boolean canChangeEquip ( Player player ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canChangeEquip . ordinal ( ) ] ) { if ( ! restrictions . canChangeEquip ( player ) ) { return _BOOL ; } } return _BOOL ; }
18306	public static void assertContains ( String msg , double [ ] values , double x , double epsilon ) { for ( double value : values ) { if ( Precision . equals ( value , x , epsilon ) ) { return ; } } Assert . fail ( msg + _CHAR Unable to find _CHAR + x ) ; }
18309	private void verifyOverrideRulesForConnectivity ( ) { if ( ( mConnectedLayout != _NUM && mDisconnectedLayout == _NUM ) ) { throw new RuntimeException ( _CHAR Error inflating custom connectivity layout . '' + _CHAR Have you forgot to override the disconnected layout ? _CHAR ) ; } if ( ( mConnectedLayout == _NUM && mDisconnectedLayout != _NUM ) ) { throw new RuntimeException ( _CHAR Error inflating custom connectivity layout . '' + _CHAR Have you forgot to override the connected layout ? _CHAR ) ; } }
18316	public static boolean nanSafeEqualsDoubles ( Double d1 , Double d2 ) { Boolean xIsNan = Double . isNaN ( d1 ) ; Boolean yIsNan = Double . isNaN ( d2 ) ; if ( ( xIsNan && yIsNan ) || ( d1 . doubleValue ( ) == d2 . doubleValue ( ) ) ) { return _BOOL ; } return _BOOL ; }
18364	public void changeLevel ( Legion legion , int newLevel , boolean save ) { legion . setLegionLevel ( newLevel ) ; PacketSendUtility . broadcastPacketToLegion ( legion , new SM_LEGION_EDIT ( _NUM , legion ) ) ; PacketSendUtility . broadcastPacketToLegion ( legion , SM_SYSTEM_MESSAGE . STR_GUILD_EVENT_LEVELUP ( newLevel ) ) ; if ( save ) { storeLegion ( legion ) ; } }
18374	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( comboBox != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof String ) { String newValue = ( String ) undoRedoObject . getNewValue ( ) ; comboBox . setSelectValueKey ( newValue ) ; } } }
18380	public static QQWXFragment newInstance ( String param1 , String param2 ) { QQWXFragment fragment = new QQWXFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
18385	@ Override public void populateField ( String value ) { if ( textField != _NULL ) { textField . setText ( value ) ; UndoManager . getInstance ( ) . addUndoEvent ( new UndoEvent ( this , getFieldId ( ) , oldValueObj , value ) ) ; oldValueObj = value ; valueUpdated ( ) ; } }
18421	@ Override protected void onReset ( ) { super . onReset ( ) ; onStopLoading ( ) ; if ( mData != _NULL ) { onReleaseResources ( mData ) ; mData = _NULL ; } }
18445	public static String hexToString ( final String data ) throws ConversionException { try { return ConversionUtils . arrayToString ( Hex . decodeHex ( data . toCharArray ( ) ) ) ; } catch ( DecoderException e ) { throw new ConversionException ( _CHAR Can not convert given hex text into plain text _CHAR , e ) ; } }
18448	SegmentationProfile mergePersonalizationResponseWithSegmentation ( SegmentationProfile segmentationProfile , PersonalizationEngineResponse personalizationEngineResponse ) { if ( personalizationEngineResponse != _NULL ) { segmentationProfile . addAttribute ( _CHAR tid _CHAR , personalizationEngineResponse . getTid ( ) ) ; segmentationProfile . addAttribute ( _CHAR data _CHAR , personalizationEngineResponse . getData ( ) ) ; segmentationProfile . addAttribute ( _CHAR model _CHAR , personalizationEngineResponse . getModel ( ) ) ; } return segmentationProfile ; }
18461	@ Override public Vector clone ( ) { try { return ( Vector ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new Error ( e ) ; } }
18521	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
18607	public void stopJumping ( ) { for ( JumpingBeansSpan bean : jumpingBeans ) { if ( bean != _NULL ) { bean . teardown ( ) ; } } cleanupSpansFrom ( textView . get ( ) ) ; }
18675	public Vector2f subtract ( Vector2f vec , Vector2f store ) { if ( store == _NULL ) { store = new Vector2f ( ) ; } store . x = x - vec . x ; store . y = y - vec . y ; return store ; }
18745	private void handleException ( final Call call , final Exception e , final Callback callback ) { if ( call . isCanceled ( ) ) { callback . onCancellation ( ) ; } else { callback . onFailure ( e ) ; } }
18802	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
18855	public boolean isStateTransitionValid ( State desiredState ) { if ( state == _NULL ) { return _BOOL ; } else { return state . isStateTransitionAllowed ( desiredState ) ; } }
18866	public double totalCount ( ) { double total = _NUM . _NUM ; for ( Map . Entry < K , Counter < V >> entry : counterMap . entrySet ( ) ) { Counter < V > counter = entry . getValue ( ) ; total += counter . totalCount ( ) ; } return total ; }
18874	public static int javaNew ( int luaState , Class clazz ) throws LuaException { LuaState L = LuaStateFactory . getExistingState ( luaState ) ; synchronized ( L ) { Object ret = getObjInstance ( L , clazz ) ; L . pushJavaObject ( ret ) ; return _NUM ; } }
18885	@ Override public void ttfValueUpdated ( ) { setCachedExpression ( generateExpression ( ) ) ; checkSymbolIsValid ( ) ; FieldConfigBase parent = getParent ( ) ; if ( parent != _NULL ) { parent . valueUpdated ( ) ; } }
18887	private static File createReserveDiskCacheDir ( Context context ) { File cacheDir = StorageUtils . getCacheDirectory ( context , _BOOL ) ; File individualDir = new File ( cacheDir , _CHAR uil - images _CHAR ) ; if ( individualDir . exists ( ) || individualDir . mkdir ( ) ) { cacheDir = individualDir ; } return cacheDir ; }
18894	public static RecipeFragment newInstance ( Recipe recipe , int sectionNumber ) { RecipeFragment fragment = new RecipeFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
18908	public static AnchorPane loadAnchorPane ( final FXMLLoader loader ) { try { return ( AnchorPane ) loader . load ( ) ; } catch ( IOException e ) { throw new CriticalException ( _CHAR Can not load FXML _CHAR , e ) ; } }
18910	public static String removeLast ( String input , int amount ) { if ( input . length ( ) >= amount ) { return input . substring ( _NUM , input . length ( ) - amount ) ; } else { return input ; } }
18933	public static boolean canInviteToAlliance ( Player player , Player target ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canInviteToAlliance . ordinal ( ) ] ) { if ( ! restrictions . canInviteToAlliance ( player , target ) ) { return _BOOL ; } } return _BOOL ; }
18940	HashMap < String , Object > cloneProperties ( ) { if ( Properties == _NULL ) { return _NULL ; } HashMap < String , Object > props = new HashMap < String , Object > ( Properties . size ( ) ) ; props . putAll ( Properties ) ; return props ; }
18990	public static void selectEditor ( Project project , VirtualFile file ) { ApplicationManager . getApplication ( ) . assertReadAccessAllowed ( ) ; PsiFile psiFile = PsiManager . getInstance ( project ) . findFile ( file ) ; if ( psiFile != _NULL ) { ProjectPaneSelectInTarget selectAction = new ProjectPaneSelectInTarget ( project ) ; selectAction . select ( psiFile , _BOOL ) ; } }
19010	public byte [ ] readBytes ( int position , int num ) { if ( Page . pageSize < position + num ) { throw new PageException ( _CHAR readBytes is out of bounds _CHAR ) ; } byte [ ] data = new byte [ num ] ; readBytes ( position , num , data ) ; return data ; }
19016	public void attachTo ( RecyclerView recycler , boolean headerAlreadyAligned ) { validateRecycler ( recycler , headerAlreadyAligned ) ; mRecycler = recycler ; mAlreadyAligned = headerAlreadyAligned ; mReversed = isLayoutManagerReversed ( recycler ) ; setupAlignment ( recycler ) ; setupHeader ( recycler ) ; }
19048	public void copyText ( ) { int end , start ; end = selectedCharField . getSelectionEnd ( ) ; start = selectedCharField . getSelectionStart ( ) ; selectedCharField . selectAll ( ) ; selectedCharField . copy ( ) ; selectedCharField . select ( start , end ) ; }
19051	public static byte [ ] fromHex ( String hex ) { try { return Hex . decodeHex ( hex . toCharArray ( ) ) ; } catch ( DecoderException e ) { return _NULL ; } }
19067	public void removeListener ( @ NotNull ConfigurationListener listener ) { if ( myListeners != _NULL ) { myListeners . remove ( listener ) ; if ( myListeners . isEmpty ( ) ) { myListeners = _NULL ; } } }
19070	public void addCoreEquipmentConfigurationChanger ( final long equipmentId , final ICoreEquipmentConfigurationChanger coreEquipmentConfigurationChanger ) { List < ICoreEquipmentConfigurationChanger > changers = coreEquipmentConfigurationChangers . get ( equipmentId ) ; if ( changers == _NULL ) { changers = new ArrayList < > ( ) ; coreEquipmentConfigurationChangers . put ( equipmentId , changers ) ; } changers . add ( coreEquipmentConfigurationChanger ) ; }
19088	private void inflateLayouts ( ) { inflateEmptyView ( ) ; inflateProgressView ( ) ; if ( mConnectivityAware ) { inflateConnectivityView ( ) ; initConnectivity ( ) ; } }
19096	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
19116	public static float toFloat ( Object obj ) { try { return Float . parseFloat ( obj . toString ( ) ) ; } catch ( Exception e ) { return - _NUM ; } }
19129	@ JsonIgnore public boolean isValid ( ) { if ( this . msgRateIn > _NUM . _NUM && this . msgRateOut > _NUM . _NUM && this . bandwidthIn > _NUM . _NUM && this . bandwidthOut > _NUM . _NUM && this . memory > _NUM . _NUM ) { return _BOOL ; } else { return _BOOL ; } }
19141	protected Definition parseWSDLDefinition ( ) throws WSDLException { WSDLFactory wsdlFactory = WSDLFactory . newInstance ( ) ; WSDLReader reader = wsdlFactory . newWSDLReader ( ) ; reader . setFeature ( _CHAR javax . wsdl . verbose _CHAR , _BOOL ) ; reader . setFeature ( _CHAR javax . wsdl . importDocuments _CHAR , _BOOL ) ; Definition definition = reader . readWSDL ( this . wsdlLocation ) ; return definition ; }
19144	private synchronized void update ( String query ) throws SQLException { Statement st = connection . createStatement ( ) ; int ok = st . executeUpdate ( query ) ; if ( ok == - _NUM ) { throw new SQLException ( _CHAR DB problem with query : _CHAR + query ) ; } st . close ( ) ; }
19166	public synchronized boolean removeMacro ( int macroPosition ) { String m = macrosses . remove ( macroPosition ) ; if ( m == _NULL ) { logger . warn ( _CHAR Trying to remove non existing macro . '' ) ; return _BOOL ; } return _BOOL ; }
19170	public static int convertToBitmask ( @ Nonnull final Collection < Flag > flags ) { Check . notNull ( flags , _CHAR flags _CHAR ) ; int bitmask = _NUM ; for ( final Flag flag : flags ) { bitmask = bitmask | flag . getNumber ( ) ; } return bitmask ; }
19213	public void zoomOut ( ) { MPPointF center = mViewPortHandler . getContentCenter ( ) ; mViewPortHandler . zoomOut ( center . x , - center . y , mZoomOutMatrixBuffer ) ; mViewPortHandler . refresh ( mZoomOutMatrixBuffer , this , _BOOL ) ; MPPointF . recycleInstance ( center ) ; calculateOffsets ( ) ; postInvalidate ( ) ; }
19239	public double optDouble ( int index , double defaultValue ) { try { return getDouble ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
19266	public void printCurrentStackTrace ( ) { try { throw new java . io . IOException ( _CHAR FAKE _CHAR ) ; } catch ( java . io . IOException e ) { e . printStackTrace ( G . v ( ) . out ) ; } }
19273	public static InstructionFragment newInstance ( Recipe recipe , int sectionNumber ) { InstructionFragment fragment = new InstructionFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
19334	void checkNormalizationAfterRemove ( ChildNode previousSibling ) { if ( previousSibling != _NULL && previousSibling . getNodeType ( ) == Node . TEXT_NODE ) { ChildNode next = previousSibling . nextSibling ; if ( next != _NULL && next . getNodeType ( ) == Node . TEXT_NODE ) { isNormalized ( _BOOL ) ; } } }
19389	public boolean isOption ( ) { if ( option == _NULL ) { return _BOOL ; } else { return option ; } }
19433	public void clearAll ( ) { nodeToPreds . clear ( ) ; nodeToSuccs . clear ( ) ; edgeToLabels . clear ( ) ; labelToEdges . clear ( ) ; heads . clear ( ) ; tails . clear ( ) ; }
19475	public void reset ( ) throws XNIException { fNamespaceContext . reset ( ) ; fValidationManager . reset ( ) ; fEntityManager . reset ( this ) ; fErrorReporter . reset ( this ) ; fSchemaValidator . reset ( this ) ; fConfigUpdated = _BOOL ; }
19477	public void write ( String filename ) throws DataIOException { try { write ( new FileOutputStream ( filename ) ) ; } catch ( FileNotFoundException e ) { throw new DataIOException ( e ) ; } }
19521	private static String encode ( String pathElement ) { try { return URLEncoder . encode ( pathElement , Charsets . UTF_8 . name ( ) ) ; } catch ( UnsupportedEncodingException e ) { throw Throwables . propagate ( e ) ; } }
19532	static public double KL_symmetric ( Distribution p , Distribution q ) { if ( p . asTreeMap ( ) . size ( ) == q . asTreeMap ( ) . size ( ) ) { return ( _NUM . _NUM * ( KL_asymmetric ( p , q ) + KL_asymmetric ( q , p ) ) ) ; } else { return _NUM ; } }
19566	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( textField != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof String ) { String newValue = ( String ) undoRedoObject . getNewValue ( ) ; textField . setText ( newValue ) ; } } }
19587	public boolean isShowLabel ( ) { if ( showLabel == _NULL ) { return _BOOL ; } else { return showLabel ; } }
19621	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
19631	public boolean addEdge ( Edge e ) { if ( ! edges . add ( e ) ) return _BOOL ; stream . add ( e ) ; srcMap . put ( e . getSrc ( ) , e ) ; tgtMap . put ( e . getTgt ( ) , e ) ; unitMap . put ( e . srcUnit ( ) , e ) ; return _BOOL ; }
19638	static boolean arrayContains ( final int [ ] array , final int value ) { for ( final int arrayValue : array ) { if ( arrayValue == value ) { return _BOOL ; } } return _BOOL ; }
19657	public boolean strictlyPositive ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( sign > _NUM ) && ( ( mant [ mant . length - _NUM ] != _NUM ) || isInfinite ( ) ) ; }
19763	private boolean matches ( ByteOrderMark bom ) { for ( int i = _NUM ; i < bom . length ( ) ; i ++ ) { if ( bom . get ( i ) != firstBytes [ i ] ) { return _BOOL ; } } return _BOOL ; }
19765	public void clearAll ( ) { if ( items != _NULL ) { items . clear ( ) ; } if ( emptyItems != _NULL ) { emptyItems . clear ( ) ; } }
19767	private boolean allowUploadCrashDump ( ) { if ( isCellularExperimentEnabled ( ) ) return isUsageAndCrashReportingEnabled ( ) ; if ( isMobileNetworkCapable ( ) ) { String option = mSharedPreferences . getString ( PREF_CRASH_DUMP_UPLOAD , mCrashDumpNeverUpload ) ; return option . equals ( mCrashDumpAlwaysUpload ) || ( option . equals ( mCrashDumpWifiOnlyUpload ) && isWiFiOrEthernetNetwork ( ) ) ; } return mSharedPreferences . getBoolean ( PREF_CRASH_DUMP_UPLOAD_NO_CELLULAR , _BOOL ) ; }
19770	public static void forceDeleteOnExit ( File file ) throws IOException { if ( file . isDirectory ( ) ) { deleteDirectoryOnExit ( file ) ; } else { file . deleteOnExit ( ) ; } }
19782	@ Override public void externalGraphicValueUpdated ( ) { setCachedExpression ( generateExpression ( ) ) ; checkSymbolIsValid ( ) ; FieldConfigBase parent = getParent ( ) ; if ( parent != _NULL ) { parent . valueUpdated ( ) ; } }
19802	public void prepareMatrixOffset ( boolean inverted ) { mMatrixOffset . reset ( ) ; if ( ! inverted ) mMatrixOffset . postTranslate ( mViewPortHandler . offsetLeft ( ) , mViewPortHandler . getChartHeight ( ) - mViewPortHandler . offsetBottom ( ) ) ; else { mMatrixOffset . setTranslate ( mViewPortHandler . offsetLeft ( ) , - mViewPortHandler . offsetTop ( ) ) ; mMatrixOffset . postScale ( _NUM . _NUM , - _NUM . _NUM ) ; } }
19819	private void reset ( ) { boolean isStarted = isStarted ( ) ; clear ( ) ; build ( ) ; if ( isStarted ) { start ( ) ; } }
19853	@ Override public String call ( ) { StringBuilder str = new StringBuilder ( ) ; Iterator < Long > it = keyList . iterator ( ) ; while ( it . hasNext ( ) ) { str . append ( dataTagFacade . getConfigXML ( it . next ( ) ) ) ; } return str . toString ( ) ; }
19911	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
19918	private String readAllContent ( BufferedReader r ) throws IOException { StringBuilder result = new StringBuilder ( ) ; String line ; while ( ( line = r . readLine ( ) ) != _NULL ) { result . append ( line ) . append ( _CHAR \ n _CHAR ) ; } return result . toString ( ) ; }
19921	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
19991	public static < T > String toJsonString ( T value ) { try { return MAPPER . writeValueAsString ( value ) ; } catch ( JsonProcessingException e ) { return _CHAR _CHAR ; } }
19996	public void onSearchResultsLoaded ( boolean wasPrefetch ) { if ( mHasExpanded || mHasMaximized ) { assert mSearchViewStartTimeNs != _NUM ; long durationMs = ( System . nanoTime ( ) - mSearchViewStartTimeNs ) / _NUM ; logSearchPanelLoadDuration ( wasPrefetch , durationMs ) ; } mIsSearchPanelFullyPreloaded = _BOOL ; }
20055	private MarkerOptions searchForId ( String id ) { for ( MarkerOptions options : markers ) { if ( options . getTitle ( ) . equals ( id ) ) { return options ; } } return _NULL ; }
20059	public void revertToDefaultValue ( ) { List < FieldConfigBase > fieldList = fieldConfigManager . getFields ( _NULL ) ; for ( FieldConfigBase field : fieldList ) { if ( field != _NULL ) { field . revertToDefaultValue ( ) ; } } }
20070	public static AboutFragment newInstance ( String param1 , String param2 ) { AboutFragment fragment = new AboutFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
20176	private static boolean sonyBadgeContentProviderExists ( Context context ) { boolean exists = _BOOL ; ProviderInfo info = context . getPackageManager ( ) . resolveContentProvider ( SONY_HOME_PROVIDER_NAME , _NUM ) ; if ( info != _NULL ) { exists = _BOOL ; } return exists ; }
20287	private void notifyRemoved ( List < AirMapTraffic > removed ) { if ( removed == _NULL || removed . isEmpty ( ) ) { return ; } for ( AirMapTrafficListener listener : listeners ) { listener . onRemoveTraffic ( removed ) ; } }
20314	public ProtocolReactor findProtocolReactor ( IapMessageFields messageFields ) { for ( int i = _NUM ; i < protocolReactors . length ; i ++ ) { if ( messageFields . equalsSemanticProtocolId ( protocolReactors [ i ] . protocolId ) && messageFields . equalsSemanticProtocolVersion ( protocolReactors [ i ] . protocolVersion ) ) { return protocolReactors [ i ] ; } } return _NULL ; }
20315	public void removeParalyzeEffects ( ) { for ( Effect effect : abnormalEffectMap . values ( ) ) { if ( effect . isParalyzeEffect ( ) ) { effect . endEffect ( ) ; abnormalEffectMap . remove ( effect . getStack ( ) ) ; } } }
20331	private List < EmailData > createEmailDataList ( List < Message > messageList ) { List < EmailData > emailDataList = new ArrayList < > ( ) ; for ( Message message : messageList ) { EmailData emailData = emailDataFactory . create ( message ) ; emailDataList . add ( emailData ) ; } return emailDataList ; }
20376	public static boolean areEqual ( ItemStack stack1 , ItemStack stack2 ) { if ( stack1 == _NULL || stack2 == _NULL ) { return _BOOL ; } else { return stack1 . isItemEqual ( stack2 ) ; } }
20382	public boolean hasUserGroupsToAlert ( ) { for ( ValidationRuleGroup group : groups ) { if ( group . hasUserGroupsToAlert ( ) ) { return _BOOL ; } } return _BOOL ; }
20395	public static Object objectFromByteBuffer ( byte [ ] buffer ) throws Exception { if ( buffer == _NULL ) return _NULL ; ByteArrayInputStream inStream = new ByteArrayInputStream ( buffer ) ; ObjectInputStream in = new ObjectInputStream ( inStream ) ; Object retval = in . readObject ( ) ; in . close ( ) ; return retval ; }
20428	public void addNewEntry ( ) { Extent extent = styleFactory . createExtent ( DEFAULT_NEW_EXTENT_NAME , _CHAR _NUM _NUM _NUM _NUM _CHAR ) ; extentList . add ( extent ) ; this . fireTableDataChanged ( ) ; if ( parentObj != _NULL ) { parentObj . extentUpdated ( ) ; } }
20435	protected void okPressed ( ) { if ( createNewConfig ( ) ) super . okPressed ( ) ; else { Shell defaultShell = SootPlugin . getDefault ( ) . getWorkbench ( ) . getActiveWorkbenchWindow ( ) . getShell ( ) ; String projectName = getSootMainProjectWidget ( ) . getText ( ) . getText ( ) ; MessageDialog . openError ( defaultShell , _CHAR Unable to find Soot Main Project _CHAR , _CHAR Project _CHAR + projectName + _CHAR does not exist , _CHAR + _CHAR is no Java project or is closed . '' ) ; } }
20445	public static String translateJavaVersion ( int javaVersion ) { if ( javaVersion == Options . java_version_default ) { return _CHAR _NUM . _NUM _CHAR ; } else { return _CHAR _NUM . _CHAR + ( javaVersion - _NUM ) ; } }
20446	public boolean negativeOrNull ( ) { if ( isNaN ( ) ) { field . setIEEEFlagsBits ( DfpField . FLAG_INVALID ) ; dotrap ( DfpField . FLAG_INVALID , LESS_THAN_TRAP , this , newInstance ( getZero ( ) ) ) ; return _BOOL ; } return ( sign < _NUM ) || ( ( mant [ mant . length - _NUM ] == _NUM ) && ! isInfinite ( ) ) ; }
20464	private Vector appendVector ( Vector vec , Vector appvec ) { if ( appvec != _NULL ) { for ( int count = _NUM ; count < appvec . size ( ) ; count ++ ) { vec . addElement ( appvec . elementAt ( count ) ) ; } } return vec ; }
20466	public static File addExtension ( File file , String extension ) { if ( extension . startsWith ( _CHAR . _CHAR ) ) { return new File ( file . getAbsolutePath ( ) + extension ) ; } else { return new File ( file . getAbsolutePath ( ) + _CHAR . _CHAR + extension ) ; } }
20480	private static int skipWhiteSpace ( BitArray row ) throws NotFoundException { int width = row . getSize ( ) ; int endStart = row . getNextSet ( _NUM ) ; if ( endStart == width ) { throw NotFoundException . getNotFoundInstance ( ) ; } return endStart ; }
20482	public static void stopMostRecentTimer ( ) { try { stopTiming ( RLOG . get ( ) . mostRecentTimer . name ) ; } catch ( NullPointerException ignored ) { LOG . warn ( _CHAR Stopping timing failed because mostRecentTimer was n _CHAR_CHAR ) ; } }
20486	protected boolean atTokenSequence ( TokenKind ... kinds ) { for ( int i = _NUM ; i < kinds . length ; i ++ ) { if ( kindFromElement ( builder . lookAhead ( i ) ) != kinds [ i ] ) { return _BOOL ; } } return _BOOL ; }
20514	private static String generatePassword ( ) { String password = _CHAR sldEditor _CHAR ; StringBuilder sb = new StringBuilder ( ) ; sb . append ( getUniqueIdentifier ( ) ) ; sb . append ( System . getProperty ( _CHAR user . name _CHAR ) ) ; password = sb . toString ( ) ; return password ; }
20530	@ Override public boolean isChildFragmentResolved ( ) { if ( fIsShortHand && fShortHandPointer != _NULL && fChildSequence . length <= _NUM ) { return fShortHandPointer . isChildFragmentResolved ( ) ; } else { return fWasOnlyEmptyElementFound ? ! fWasOnlyEmptyElementFound : ( fIsFragmentResolved && ( fCurrentChildDepth >= fFoundDepth ) ) ; } }
20537	static Class [ ] reduce ( Collection c , boolean keepSupers ) { try { return reduce0 ( ( Class [ ] ) c . toArray ( new Class [ c . size ( ) ] ) , keepSupers ) ; } catch ( ArrayStoreException e ) { throw new IllegalArgumentException ( _CHAR element of collection is not a Class _CHAR ) ; } }
20549	public boolean has ( String key ) { validateKey ( key ) ; Entry entry ; synchronized ( mDiskCacheLock ) { entry = mLruEntries . get ( key ) ; } return entry != _NULL && entry . isReadable ( ) && entry . getCleanFile ( ) . exists ( ) ; }
20559	public void registerSaveParticipant ( ) throws CoreException { IWorkspace ws = ResourcesPlugin . getWorkspace ( ) ; ISavedState ss = ws . addSaveParticipant ( SVNProviderPlugin . getPlugin ( ) , this ) ; if ( ss != _NULL ) { ss . processResourceChangeEvents ( this ) ; } ws . removeSaveParticipant ( SVNProviderPlugin . getPlugin ( ) ) ; }
20588	public double sumWithWeights ( ) { double dSum = _NUM ; for ( TKeyType dKey : hDistro . keySet ( ) ) { if ( dKey instanceof Double ) dSum += ( ( Double ) dKey * getValue ( dKey ) ) ; else dSum += getValue ( dKey ) ; } return dSum ; }
20624	@ Override public void start ( String testName ) { currentTest . get ( ) . setLast ( _BOOL ) ; currentTest . set ( injector . getInstance ( TestInfo . class ) ) ; currentTest . get ( ) . setLast ( _BOOL ) ; currentTest . get ( ) . setName ( testName ) ; browserInfo ( ) ; testInfoEntries . add ( currentTest . get ( ) ) ; }
20669	public static boolean hasColumn ( String tableName ) { switch ( tableName ) { case COLUMN_NUMBER : return _BOOL ; default : return _BOOL ; } }
20687	public void scroll ( int itemsToScroll , int time ) { scroller . forceFinished ( _BOOL ) ; lastScrollY = scrollingOffset ; int offset = itemsToScroll * getItemHeight ( ) ; scroller . startScroll ( _NUM , lastScrollY , _NUM , offset - lastScrollY , time ) ; setNextMessage ( MESSAGE_SCROLL ) ; startScrolling ( ) ; }
20693	public static final String removeDataFolderPath ( String fullPath ) { File sdCard = Environment . getExternalStorageDirectory ( ) ; String dataFolderPath = sdCard . getAbsolutePath ( ) + _CHAR / _CHAR + MainApp . getDataFolder ( ) + _CHAR / _CHAR ; if ( fullPath . indexOf ( dataFolderPath ) == _NUM ) { return fullPath . substring ( dataFolderPath . length ( ) ) ; } return fullPath ; }
20699	private < E > E castConcept ( Class < E > type ) { try { return type . cast ( this ) ; } catch ( ClassCastException e ) { throw new InvalidConceptTypeException ( ErrorMessage . INVALID_OBJECT_TYPE . getMessage ( this , type ) ) ; } }
20712	public void addCommunicationListener ( FTPCommunicationListener listener ) { synchronized ( lock ) { communicationListeners . add ( listener ) ; if ( communication != _NULL ) { communication . addCommunicationListener ( listener ) ; } } }
20715	public static boolean is3G ( Context context ) { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetInfo = connectivityManager . getActiveNetworkInfo ( ) ; if ( activeNetInfo != _NULL && activeNetInfo . getType ( ) == ConnectivityManager . TYPE_MOBILE ) { return _BOOL ; } return _BOOL ; }
20716	private static Class < ? extends Activity > guessRestartActivityClass ( Context context ) { Class < ? extends Activity > resolvedActivityClass ; resolvedActivityClass = CustomActivityOnCrash . getRestartActivityClassWithIntentFilter ( context ) ; if ( resolvedActivityClass == _NULL ) { resolvedActivityClass = getLauncherActivity ( context ) ; } return resolvedActivityClass ; }
20720	public static S2CellId fromFaceIJSame ( int face , int i , int j , boolean sameFace ) { if ( sameFace ) { return S2CellId . fromFaceIJ ( face , i , j ) ; } else { return S2CellId . fromFaceIJWrap ( face , i , j ) ; } }
20760	public void removeDiscoveryListener ( DiscoveryListener l ) { synchronized ( registrars ) { if ( terminated ) { throw new IllegalStateException ( _CHAR discovery terminated _CHAR ) ; } listeners . remove ( l ) ; } }
20770	public TapTarget icon ( Drawable icon , boolean hasSetBounds ) { if ( icon == _NULL ) throw new IllegalArgumentException ( _CHAR Can not use _NULL drawable _CHAR ) ; this . icon = icon ; if ( ! hasSetBounds ) { this . icon . setBounds ( new Rect ( _NUM , _NUM , this . icon . getIntrinsicWidth ( ) , this . icon . getIntrinsicHeight ( ) ) ) ; } return this ; }
20784	public void moveCartItem ( int fromIndex , int toIndex ) { if ( toIndex < fromIndex ) { cartLines . add ( toIndex , cartLines . remove ( fromIndex ) ) ; } else if ( toIndex > fromIndex ) { cartLines . add ( toIndex - _NUM , cartLines . remove ( fromIndex ) ) ; } }
20818	private ProcessFunction showTransformationDialog ( ProcessFunction existingProcessFunction ) { ProcessFunction processFunction = _NULL ; RenderTransformationDialog dlg = new RenderTransformationDialog ( GeoServerConnectionManager . getInstance ( ) ) ; if ( dlg . showDialog ( existingProcessFunction ) ) { processFunction = dlg . getTransformationProcessFunction ( ) ; } return processFunction ; }
20851	public void reset ( byte [ ] buf ) { if ( buf != _NULL ) { reset ( buf , _NUM , buf . length ) ; } else { clear ( ) ; } }
20887	private K highestKey ( ) { FastConcurrentSkipListMap . Node < K , V > n = hiNode ( ) ; if ( n != _NULL ) { K last = n . key ; if ( inBounds ( last ) ) return last ; } throw new NoSuchElementException ( ) ; }
20928	private long wc ( String text ) { long wc = _NUM ; String [ ] lines = text . split ( _CHAR \ n _CHAR ) ; for ( String line : lines ) { wc += line . split ( _CHAR \\ s + _CHAR ) . length ; } return wc ; }
20975	public void playAnimatedLogo ( BaseGifImage gifImage ) { mLoadingView . hideLoadingUI ( ) ; mAnimatedLogoDrawable = new BaseGifDrawable ( gifImage , Config . ARGB_8888 ) ; mAnimatedLogoMatrix = new Matrix ( ) ; setMatrix ( mAnimatedLogoDrawable . getIntrinsicWidth ( ) , mAnimatedLogoDrawable . getIntrinsicHeight ( ) , mAnimatedLogoMatrix , _BOOL ) ; mAnimatedLogoDrawable . setCallback ( this ) ; mAnimatedLogoDrawable . start ( ) ; }
21155	public void register ( String key , Remote value ) throws RegistryException { try { registry . rebind ( key , value ) ; } catch ( Exception e ) { throw new RegistryException ( _CHAR Failed to register with key [ _CHAR + key + _CHAR ] _CHAR , e ) ; } }
21162	@ Override public void toggleSelection ( T photo ) { if ( selectedPhotos . contains ( photo ) ) { selectedPhotos . remove ( photo ) ; } else { selectedPhotos . add ( photo ) ; } }
21166	private LocatorReg findReg ( LookupLocator lct ) { Iterator iter = undiscoveredLocators . iterator ( ) ; while ( iter . hasNext ( ) ) { LocatorReg reg = ( LocatorReg ) iter . next ( ) ; if ( reg . l . equals ( lct ) ) return reg ; } return _NULL ; }
21280	public void cancelAlarm ( Context context ) { if ( alarmMgr != _NULL ) { alarmMgr . cancel ( alarmIntent ) ; } ComponentName receiver = new ComponentName ( context , BootReceiver . class ) ; PackageManager pm = context . getPackageManager ( ) ; pm . setComponentEnabledSetting ( receiver , PackageManager . COMPONENT_ENABLED_STATE_DISABLED , PackageManager . DONT_KILL_APP ) ; }
21292	public String toString ( ) { try { return decode ( bytes , _NUM , length ) ; } catch ( CharacterCodingException e ) { throw new RuntimeException ( _CHAR Should not have happened _CHAR + e . toString ( ) ) ; } }
21308	public synchronized EntityListIterator queryStartupJobs ( EntityCondition commonCondition ) throws GenericEntityException { EntityListIterator res = _NULL ; if ( ! startupJobsQueued ) { res = queryStartupJobsAlways ( commonCondition ) ; startupJobsQueued = _BOOL ; } return res ; }
21372	protected CassandraDriver newDriver ( final String propertyContext , final HealthCheckRegistry registry , final String instanceName ) throws IOException , ConnectionException { DriverConfiguration config = new DriverConfiguration ( propertyContext ) ; CassandraDriver result = new DefaultCassandraDriver ( config , registry , instanceName ) ; if ( ! result . isKeyspaceInitialized ( ) ) { result . initializeKeyspace ( ) ; } return result ; }
21385	public boolean isSkipRoot ( ) { if ( skipRoot == _NULL ) { return _BOOL ; } else { return skipRoot ; } }
21406	private void checkTheMeteorGameFinishCondition ( String [ ] packet ) { increaseReceiveFinishEventCount ( ) ; if ( getnReceiveFinishEventCount ( ) >= getnMaxmumClients ( ) && isCheckMeteorGameCheckFinishOneTime ) { sendMessageInTheRoomPeople ( Settings . _ANSWER_METEORGAME_METEOR_GAME_FINISH + _CHAR _CHAR ) ; isCheckMeteorGameCheckFinishOneTime = _BOOL ; setTheClientScoreAboutMeteorGame ( packet [ _NUM ] ) ; } }
21408	public void updateSizes ( int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
21423	public static void openBrowser ( URI url ) throws IOException { if ( Desktop . isDesktopSupported ( ) ) { Desktop . getDesktop ( ) . browse ( url ) ; } else { LOGGER . error ( _CHAR Can not open browser because this capability is not supported on _CHAR + _CHAR your platform . You can use the link below to open the report manually . '' ) ; } }
21463	@ Override public void clear ( ) { sumX = _NUM ; sumXX = _NUM ; sumY = _NUM ; sumYY = _NUM ; sumXY = _NUM ; n = _NUM ; }
21464	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
21473	@ Override public void wktValueUpdated ( ) { setCachedExpression ( generateExpression ( ) ) ; checkSymbolIsValid ( ) ; FieldConfigBase parent = getParent ( ) ; if ( parent != _NULL ) { parent . valueUpdated ( ) ; } }
21482	private static RetainFragment findOrCreateRetainFragment ( FragmentManager fm ) { RetainFragment mRetainFragment = ( RetainFragment ) fm . findFragmentByTag ( TAG ) ; if ( mRetainFragment == _NULL ) { mRetainFragment = new RetainFragment ( ) ; fm . beginTransaction ( ) . add ( mRetainFragment , TAG ) . commitAllowingStateLoss ( ) ; } return mRetainFragment ; }
21498	@ Nullable public static Labels fromSnippets ( KindredSnippets [ ] snippets ) { for ( KindredSnippets obj : snippets ) { if ( obj instanceof Labels ) { return ( Labels ) obj ; } } return _NULL ; }
21543	static boolean checkSumm ( int a , int b ) { if ( ( a + b >= _NUM ) && ( a + b <= _NUM ) ) { return _BOOL ; } else { return _BOOL ; } }
21547	@ Override public Node lastChild ( ) { if ( fCurrentNode == _NULL ) return _NULL ; Node node = getLastChild ( fCurrentNode ) ; if ( node != _NULL ) { fCurrentNode = node ; } return node ; }
21554	public int optInt ( int index , int defaultValue ) { try { return getInt ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
21570	public JSONArray names ( ) { JSONArray ja = new JSONArray ( ) ; Iterator < String > keys = this . keys ( ) ; while ( keys . hasNext ( ) ) { ja . put ( keys . next ( ) ) ; } return ja . length ( ) == _NUM ? _NULL : ja ; }
21582	public void generateReport ( ) { if ( asynchronousThread != _NULL ) { requestScheduled = _BOOL ; } else { report ( ) ; } }
21604	public static void addTableToDocument ( Document document , PdfPTable table ) { try { document . add ( table ) ; } catch ( DocumentException ex ) { throw new RuntimeException ( _CHAR Failed to add table to document _CHAR , ex ) ; } }
21611	public static String upperCaseFirst ( String input ) { if ( input . charAt ( _NUM ) >= _CHAR && input . charAt ( _NUM ) <= _CHAR ) { return ( _CHAR _CHAR + input . charAt ( _NUM ) ) . toUpperCase ( ) + input . substring ( _NUM ) ; } else { return input ; } }
21651	public Builder baseUrl ( String baseUrl ) { checkNotNull ( baseUrl , _CHAR baseUrl == _NULL _CHAR ) ; HttpUrl httpUrl = HttpUrl . parse ( baseUrl ) ; if ( httpUrl == _NULL ) { throw new IllegalArgumentException ( _CHAR Illegal URL : _CHAR + baseUrl ) ; } return baseUrl ( httpUrl ) ; }
21668	public static long calculateDuration ( int dayCount ) { if ( dayCount == _NUM ) { return Integer . MAX_VALUE ; } Calendar cal = Calendar . getInstance ( ) ; cal . add ( Calendar . DATE , + dayCount ) ; return ( ( cal . getTimeInMillis ( ) - System . currentTimeMillis ( ) ) / _NUM ) ; }
21693	void assignParamToLocal ( int right , Local left ) { PurityNode node = cacheNode ( new PurityParamNode ( right ) ) ; localsRemove ( left ) ; localsPut ( left , node ) ; nodes . add ( node ) ; paramNodes . add ( node ) ; if ( doCheck ) sanityCheck ( ) ; }
21697	private void registerChangedResourceParent ( IResource changedResource ) throws TeamException { IContainer parent = changedResource . getParent ( ) ; if ( parent == _NULL ) return ; if ( remoteSyncStateStore . getBytes ( parent ) == _NULL ) { remoteSyncStateStore . setBytes ( parent , DUMMY_SYNC_BYTES ) ; registerChangedResourceParent ( parent ) ; } }
21748	public static GenericEntity createGenericEntity ( ModelEntity modelEntity ) { if ( modelEntity == _NULL ) { throw new IllegalArgumentException ( _CHAR Can not create a GenericEntity with a _NULL modelEntity parameter _CHAR ) ; } GenericEntity newEntity = new GenericEntity ( ) ; newEntity . init ( modelEntity ) ; return newEntity ; }
21771	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
21777	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( textField != _NULL ) { if ( undoRedoObject != _NULL ) { String oldValue = ( String ) undoRedoObject . getOldValue ( ) ; textField . setText ( oldValue ) ; } } }
21791	public void add ( Map . Entry < String , String > entry ) { if ( entry == _NULL ) { throw new NullPointerException ( _CHAR context _CHAR ) ; } synchronized ( contexts ) { contexts . add ( Maps . immutableEntry ( entry . getKey ( ) , entry . getValue ( ) ) ) ; } }
21824	private void maybePrefetchDnsInBackground ( ) { if ( getIntent ( ) != _NULL && Intent . ACTION_VIEW . equals ( getIntent ( ) . getAction ( ) ) ) { String maybeUrl = IntentHandler . getUrlFromIntent ( getIntent ( ) ) ; if ( maybeUrl != _NULL ) { WarmupManager . getInstance ( ) . maybePrefetchDnsForUrlInBackground ( this , maybeUrl ) ; } } }
21832	public void addPackage ( Context context , String packageName ) { final List < ResolveInfo > matches = findActivitiesForPackage ( context , packageName ) ; if ( matches . size ( ) > _NUM ) { for ( ResolveInfo info : matches ) { add ( new ItemApplication ( context . getPackageManager ( ) , info , mIconCache , _NULL ) ) ; } } }
21850	private void resetTimer ( ) { if ( mTimer != _NULL ) { mTimer . cancel ( ) ; mTimer . purge ( ) ; mTimer = _NULL ; times_current = _NUM ; } }
21861	public static IntBuffer createIntBuffer ( IntBuffer buf , int size ) { if ( buf != _NULL && buf . limit ( ) == size ) { buf . rewind ( ) ; return buf ; } buf = createIntBuffer ( size ) ; return buf ; }
21868	public Builder discCacheExtraOptions ( int maxImageWidthForDiscCache , int maxImageHeightForDiscCache , CompressFormat compressFormat , int compressQuality , BitmapProcessor processorForDiscCache ) { this . maxImageWidthForDiscCache = maxImageWidthForDiscCache ; this . maxImageHeightForDiscCache = maxImageHeightForDiscCache ; this . imageCompressFormatForDiscCache = compressFormat ; this . imageQualityForDiscCache = compressQuality ; this . processorForDiscCache = processorForDiscCache ; return this ; }
21895	public static PrintWriter openFileForPrintWriter ( final File file ) throws IOException { if ( file . getName ( ) . endsWith ( _CHAR . gz _CHAR ) ) { return new PrintWriter ( openFileForWriting ( file ) ) ; } else { return new PrintWriter ( file ) ; } }
21921	@ Override public void serializeAsPlaceholder ( Object bean , JsonGenerator jgen , SerializerProvider prov ) throws Exception { if ( _nullSerializer != _NULL ) { _nullSerializer . serialize ( _NULL , jgen , prov ) ; } else { jgen . writeNull ( ) ; } }
21943	@ Override public void close ( ) throws IOException { try { super . close ( ) ; } finally { this . branch . close ( ) ; } }
21956	public void write ( String id , String bundle ) { SQLiteDatabase db = this . getWritableDatabase ( ) ; ContentValues values = new ContentValues ( ) ; values . put ( KEY_ID , id ) ; values . put ( KEY_BUNDLE , bundle ) ; db . replace ( TABLE_BUNDLES , _NULL , values ) ; db . close ( ) ; }
21975	public void addRecognizedParamsAndSetDefaults ( XMLComponent component , XSGrammarPoolContainer grammarContainer ) { final String [ ] recognizedFeatures = component . getRecognizedFeatures ( ) ; addRecognizedFeatures ( recognizedFeatures ) ; final String [ ] recognizedProperties = component . getRecognizedProperties ( ) ; addRecognizedProperties ( recognizedProperties ) ; setFeatureDefaults ( component , recognizedFeatures , grammarContainer ) ; setPropertyDefaults ( component , recognizedProperties ) ; }
22002	public static boolean isEmpty ( String str ) { if ( str == _NULL || str . length ( ) == _NUM || str . equalsIgnoreCase ( _CHAR _NULL _CHAR ) || str . isEmpty ( ) || str . equals ( _CHAR _CHAR ) ) { return _BOOL ; } else { return _BOOL ; } }
22021	public static void validateKey ( String key ) throws StateStoreException { if ( StringUtils . isBlank ( key ) ) { throw new StateStoreException ( _CHAR Key can not be blank or _NULL _CHAR ) ; } if ( key . contains ( _CHAR / _CHAR ) ) { throw new StateStoreException ( _CHAR Key can not contain _CHAR _CHAR ) ; } }
22024	public static RefType v ( String className ) { RefType rt = Scene . v ( ) . getRefTypeUnsafe ( className ) ; if ( rt == _NULL ) { rt = new RefType ( className ) ; Scene . v ( ) . addRefType ( rt ) ; } return rt ; }
22030	static Set < String > parsePathParameters ( String path ) { Matcher m = PARAM_URL_REGEX . matcher ( path ) ; Set < String > patterns = new LinkedHashSet < > ( ) ; while ( m . find ( ) ) { patterns . add ( m . group ( _NUM ) ) ; } return patterns ; }
22056	public static byte writeBool ( boolean b ) { if ( b ) { return _NUM ; } else { return _NUM ; } }
22058	public static boolean hasRole ( String roleName ) { for ( String role : getRoles ( ) ) { if ( role . equalsIgnoreCase ( roleName ) ) { return _BOOL ; } } return _BOOL ; }
22062	private void skipPastNewline ( ) { while ( ! builder . eof ( ) ) { if ( matches ( ProjectViewTokenType . NEWLINE ) ) { return ; } builder . advanceLexer ( ) ; } }
22100	private ByteOrderMark find ( ) { for ( ByteOrderMark bom : boms ) { if ( matches ( bom ) ) { return bom ; } } return _NULL ; }
22119	private boolean isBetterThan ( int a , int b ) { if ( bigIsGood ) { return a > b ; } else { return a < b ; } }
22184	@ Override public final void seek ( final long offset ) { try { bs . seek ( offset ) ; } catch ( IOException e ) { System . err . println ( _CHAR Seek failed _CHAR + e ) ; } }
22190	public void addLanguage ( Long languageId ) { if ( languageId != _NULL ) { addLanguage ( languageId . toString ( ) ) ; } else { Logger . warn ( this , _CHAR Tried to add languageId Null ! _CHAR ) ; } }
22213	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
22257	public static FloatBuffer createFloatBuffer ( float [ ] coords ) { ByteBuffer bb = ByteBuffer . allocateDirect ( coords . length * SIZEOF_FLOAT ) ; bb . order ( ByteOrder . nativeOrder ( ) ) ; FloatBuffer fb = bb . asFloatBuffer ( ) ; fb . put ( coords ) ; fb . position ( _NUM ) ; return fb ; }
22300	public static boolean isWifi ( Context context ) { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetInfo = connectivityManager . getActiveNetworkInfo ( ) ; if ( activeNetInfo != _NULL && activeNetInfo . getType ( ) == ConnectivityManager . TYPE_WIFI ) { return _BOOL ; } return _BOOL ; }
22306	public static boolean isAlphabetic ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { char c = s . charAt ( i ) ; if ( ! isLetter ( c ) ) return _BOOL ; } return _BOOL ; }
22362	private static boolean isSuppressed ( @ NonNull Issue issue , @ NonNull String string ) { for ( String id : Splitter . on ( _CHAR ) . trimResults ( ) . split ( string ) ) { if ( id . equals ( issue . getId ( ) ) || id . equals ( SUPPRESS_ALL ) ) { return _BOOL ; } } return _BOOL ; }
22377	@ Override public void emptySLD ( ) { String emptyFilename = _CHAR _CHAR ; SelectedSymbol . getInstance ( ) . setFilename ( emptyFilename ) ; SLDEditorFile . getInstance ( ) . setSLDData ( _NULL ) ; dataSource . reset ( ) ; SelectedSymbol . getInstance ( ) . setSld ( _NULL ) ; uiMgr . populateUI ( _NUM ) ; }
22379	public boolean optBoolean ( int index , boolean defaultValue ) { try { return this . getBoolean ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
22381	private String resolveSystemId ( String systemId , String baseURI ) { try { return XMLEntityManager . expandSystemId ( systemId , baseURI , _BOOL ) ; } catch ( URI . MalformedURIException ex ) { return systemId ; } }
22385	public boolean canReuseProcessHandler ( ) { if ( myCurrentSession == _NULL || myCurrentSession . isProcessTerminated ( ) ) { return _BOOL ; } BuildSelection buildSelection = myContext . getBuildSelection ( ) ; assert buildSelection != _NULL : _CHAR Build must have completed before results are analyzed _CHAR ; return buildSelection . mode == BuildMode . HOT && ( myBuildInfo . hasNoChanges ( ) || myBuildInfo . canHotswap ( ) ) ; }
22410	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
22425	public void appendWarn ( final String warnMessage ) { if ( this . warnMessage == _NULL ) { this . warnMessage = warnMessage ; } else { this . warnMessage += ( _CHAR \ n _CHAR + warnMessage ) ; } }
22433	private void closeDialog ( boolean okButton ) { okButtonPressed = okButton ; DataSourceInterface dataSource = DataSourceFactory . getDataSource ( ) ; if ( dataSource != _NULL ) { dataSource . removeListener ( this ) ; } setVisible ( _BOOL ) ; }
22434	public long optLong ( String key , long defaultValue ) { try { return this . getLong ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
22435	public static void validateValue ( byte [ ] value ) throws StateStoreException { if ( value == _NULL ) { throw new StateStoreException ( _CHAR Property value must not be _NULL . _CHAR ) ; } if ( value . length > MAX_VALUE_LENGTH_BYTES ) { throw new StateStoreException ( String . format ( _CHAR Property value length % d exceeds limit of % d bytes . '' , value . length , MAX_VALUE_LENGTH_BYTES ) ) ; } }
22437	public void tabShown ( Tab tab ) { for ( int i = _NUM ; i < mRecentTabs . size ( ) ; i ++ ) { Tab t = mRecentTabs . get ( i ) . get ( ) ; if ( t == tab ) { mRecentTabs . remove ( i ) ; } } }
22460	public SimpleNotifyContainerConfigurer eventListenerMethod ( Object eventListener , String methodName ) { MethodEventListenerAdapter methodEventListenerAdapter = new MethodEventListenerAdapter ( ) ; methodEventListenerAdapter . setDelegate ( eventListener ) ; methodEventListenerAdapter . setMethodName ( methodName ) ; methodEventListenerAdapter . afterPropertiesSet ( ) ; notifyEventListenerContainer . setEventListener ( methodEventListenerAdapter ) ; return this ; }
22467	public void unRegisterEvent ( Object object ) { if ( noParamMap . containsKey ( object ) ) { noParamMap . remove ( object ) ; } if ( hasParamMap . containsKey ( object ) ) { hasParamMap . remove ( object ) ; } }
22472	public static void sampleInstallTinker ( ApplicationLike appLike ) { if ( isInstalled ) { TinkerLog . w ( TAG , _CHAR install tinker , but has installed , ignore _CHAR ) ; return ; } TinkerInstaller . install ( appLike ) ; isInstalled = _BOOL ; }
22477	private void removeObsoleteElements ( List < String > names , Map < String , View > sharedElements , List < String > elementsToRemove ) { if ( elementsToRemove . size ( ) > _NUM ) { names . removeAll ( elementsToRemove ) ; for ( String elementToRemove : elementsToRemove ) { sharedElements . remove ( elementToRemove ) ; } } }
22527	@ Override public String toString ( ) { if ( exception != _NULL ) { return exception . toString ( ) ; } else { return super . toString ( ) ; } }
22528	public static void writeInt ( DataOutputStream dis , boolean isBigEndian , int val ) throws IOException { if ( ! isBigEndian ) { writeLittleEndianInt ( dis , val ) ; } else { dis . writeInt ( val ) ; } }
22539	private static boolean isEmpty ( @ Nonnull final File file , @ Nonnull final Charset charset ) { try { return FileUtil . isEmpty ( file , charset ) ; } catch ( final IOException e ) { throw new IllegalStateOfArgumentException ( _CHAR The given file could not be read . '' , e ) ; } }
22575	@ Deprecated private boolean isDefinedAccent ( String accentAttribute ) { if ( _CHAR H * _CHAR . equals ( accentAttribute ) ) return _BOOL ; if ( _CHAR L * _CHAR . equals ( accentAttribute ) ) return _BOOL ; if ( _CHAR L *+ H _CHAR . equals ( accentAttribute ) ) return _BOOL ; if ( _CHAR L *+ ! H _CHAR . equals ( accentAttribute ) ) return _BOOL ; if ( _CHAR L + H * _CHAR . equals ( accentAttribute ) ) return _BOOL ; return _CHAR ! H * _CHAR . equals ( accentAttribute ) ; }
22615	public static boolean checkGeoJsonPointValid ( double longitude , double latitude ) { try { return getGeoJsonPoint ( longitude , latitude ) . isValid ( ) ; } catch ( Exception ex ) { return _BOOL ; } }
22632	public static void runOnUiThread ( Runnable runnable ) { if ( isMainThread ( ) ) { runnable . run ( ) ; } else { post ( runnable ) ; } }
22658	public static byte [ ] fetchPropertyOrEmptyArray ( StateStore stateStore , String key ) { if ( stateStore . fetchPropertyKeys ( ) . contains ( key ) ) { return stateStore . fetchProperty ( key ) ; } else { return new byte [ _NUM ] ; } }
22700	@ Override public void close ( ) { if ( leaf != _NULL ) { leaf . close ( ) ; leaf = _NULL ; } ccMgr . releaseIndexLocks ( ) ; dirsMayBeUpdated = _NULL ; }
22708	public boolean collideWith ( KeyChain other ) { if ( keys . size ( ) > other . keys . size ( ) ) { return Collections . indexOfSubList ( keys , other . keys ) == _NUM ; } else { return Collections . indexOfSubList ( other . keys , keys ) == _NUM ; } }
22725	public static boolean hasSelfPermissions ( Context context , String ... permissions ) { for ( String permission : permissions ) { if ( permissionExists ( permission ) && ! hasSelfPermission ( context , permission ) ) { return _BOOL ; } } return _BOOL ; }
22739	public static void showMessageWindow ( ) { if ( ProgramProperties . isUseGUI ( ) && MessageWindow . getInstance ( ) != _NULL ) { MessageWindow . getInstance ( ) . getFrame ( ) . setVisible ( _BOOL ) ; MessageWindow . getInstance ( ) . getFrame ( ) . setState ( JFrame . NORMAL ) ; MessageWindow . getInstance ( ) . getFrame ( ) . toFront ( ) ; MessageWindow . getInstance ( ) . startCapturingOutput ( ) ; } }
22776	public static Integer adjustPort ( Delegator delegator , Integer port ) { if ( port != _NULL && Start . getInstance ( ) . getConfig ( ) . portOffset != _NUM ) { return port + Start . getInstance ( ) . getConfig ( ) . portOffset ; } else { return port ; } }
22781	public static String encode ( String namespacePrefix , String element ) { if ( ( namespacePrefix != _NULL ) && ! namespacePrefix . isEmpty ( ) ) { return String . format ( _CHAR % s : % s _CHAR , namespacePrefix , element ) ; } else { return element ; } }
22798	public ResourcesPoet addIntegerArray ( String name , @ NotNull List < Integer > values ) { ArrayList < String > integers = new ArrayList < > ( ) ; for ( Integer value : values ) { integers . add ( String . valueOf ( value ) ) ; } addIntegerArrayStrings ( name , integers ) ; return this ; }
22801	public static void publishAllServices ( ) throws RpcException { try { ServicePublisher . publishAllServices ( ) ; } catch ( RegistryException e ) { throw new RpcException ( _CHAR error while publishing all services '' , e ) ; } }
22825	public static String addChild ( String parent , String child ) { if ( parent . endsWith ( String . valueOf ( FILE_SEPARATOR ) ) ) { return parent + child ; } else { return parent + FILE_SEPARATOR + child ; } }
22827	private boolean containsNaNs ( IntDoublePair [ ] ranks ) { for ( int i = _NUM ; i < ranks . length ; i ++ ) { if ( Double . isNaN ( ranks [ i ] . getValue ( ) ) ) { return _BOOL ; } } return _BOOL ; }
22833	public static InstructionFragment newInstance ( Recipe recipe , int sectionNumber ) { InstructionFragment fragment = new InstructionFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
22844	public boolean canIssueUserRoles ( Collection < UserAuthorityGroup > groups , boolean canGrantOwnUserAuthorityGroups ) { for ( UserAuthorityGroup group : groups ) { if ( ! canIssueUserRole ( group , canGrantOwnUserAuthorityGroups ) ) { return _BOOL ; } } return _BOOL ; }
22879	public View findViewById ( int id ) { View v ; if ( mSlidingMenu != _NULL ) { v = mSlidingMenu . findViewById ( id ) ; if ( v != _NULL ) return v ; } return _NULL ; }
22930	private static boolean inAppended ( String [ ] names ) { for ( int i = _NUM ; i < names . length ; i ++ ) { if ( ! theAppended . contains ( names [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
22978	@ Override public synchronized void mark ( int idx ) throws IOException { try { in . mark ( idx ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
23010	private Comparable < ? > castToComparable ( Object value ) { try { return ( Comparable < ? > ) value ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( _CHAR Contains operator requires a Comparable class type . '' , e ) ; } }
23037	public int maxId ( ) { int t =- _NUM ; while ( _BOOL ) { int s = bits . nextSetBit ( t + _NUM ) ; if ( s == - _NUM ) return t ; else t = s ; } }
23041	public boolean isCannotGiveup ( ) { if ( cannotGiveup == _NULL ) { return _BOOL ; } else { return cannotGiveup ; } }
23044	public boolean generate ( Set < ClassData > fileData ) { for ( ClassData classData : fileData ) { if ( ! generateFile ( classData , fileData ) ) { return _BOOL ; } } return _BOOL ; }
23046	public GeoServerConnection duplicate ( ) { GeoServerConnection newItem = new GeoServerConnection ( ) ; newItem . connectionName = DUPLICATE_PREFIX + this . connectionName ; newItem . url = this . url ; newItem . userName = this . userName ; newItem . password = this . password ; return newItem ; }
23054	public static void checkGlError ( String op ) { int error = GLES20 . glGetError ( ) ; if ( error != GLES20 . GL_NO_ERROR ) { String msg = op + _CHAR : glError _NUM _CHAR + Integer . toHexString ( error ) ; Log . e ( TAG , msg ) ; throw new RuntimeException ( msg ) ; } }
23068	@ Override public int read ( ) { if ( idx >= charSequence . length ( ) ) { return - _NUM ; } else { return charSequence . charAt ( idx ++ ) ; } }
23071	public String leaveDTD ( ) throws IOException { if ( _writer == _dtdWriter ) { flushLine ( _BOOL ) ; _writer = _docWriter ; return _dtdWriter . toString ( ) ; } return _NULL ; }
23112	public void clearCache ( ) { if ( mMemoryCache != _NULL ) { mMemoryCache . evictAll ( ) ; if ( BuildConfig . DEBUG ) { Log . d ( TAG , _CHAR Memory cache cleared _CHAR ) ; } } }
23238	private Typeface cacheFont ( String fontPath ) { Typeface cached = mTypefaceMap . get ( fontPath ) ; if ( cached == _NULL ) { cached = Typeface . createFromAsset ( mAssetManager , fontPath ) ; mTypefaceMap . put ( fontPath , cached ) ; } return cached ; }
23246	public static ItemStack writeQualityTag ( ItemStack stack , Quality quality ) { if ( stack == _NULL ) return stack ; if ( ! stack . hasTagCompound ( ) ) { stack . setTagCompound ( new NBTTagCompound ( ) ) ; } stack . getTagCompound ( ) . setString ( QUALITY_TAG , quality . getUnlocalizedName ( ) ) ; return stack ; }
23248	public boolean validateRequest ( String publicKey , String hmac , String query ) { ApiResult apiResult = this . api . getApiByPublicKey ( publicKey ) ; if ( apiResult == _NULL ) { return _BOOL ; } String myHmac = HmacUtils . hmacSha1Hex ( apiResult . getPrivateKey ( ) , query ) ; return myHmac . equals ( hmac ) ; }
23281	private static long convertToLong ( int [ ] seed ) { final long prime = _NUM ; long combined = _NUM ; for ( int s : seed ) { combined = combined * prime + s ; } return combined ; }
23300	public int readNullTerminatedBytes ( byte [ ] bytes ) throws IOException { int i = _NUM ; while ( _BOOL ) { byte letter = ( byte ) ins . read ( ) ; if ( letter == _NUM ) return i ; else bytes [ i ++ ] = letter ; } }
23309	public double sumWithWeights ( ) { double dSum = _NUM ; for ( TKeyType dKey : hDistro . keySet ( ) ) { if ( dKey instanceof Double ) dSum += ( ( Double ) dKey * getValue ( dKey ) ) ; else dSum += getValue ( dKey ) ; } return dSum ; }
23310	public static int parseInt ( String text ) throws DataParseException { try { return Integer . parseInt ( text ) ; } catch ( NumberFormatException e ) { throw new DataParseException ( e ) ; } }
23338	public int compareTo ( Object o ) { if ( ( o == DONT_CARE ) || ( this == DONT_CARE ) ) { return _NUM ; } else { return ordinal - ( ( Age ) o ) . ordinal ; } }
23364	@ Override public final void separator ( short separator , Augmentations augs ) throws XNIException { if ( separator == XMLDTDContentModelHandler . SEPARATOR_CHOICE ) { fOpStack [ fDepth ] = XMLContentSpec . CONTENTSPECNODE_CHOICE ; } else if ( separator == XMLDTDContentModelHandler . SEPARATOR_SEQUENCE ) { fOpStack [ fDepth ] = XMLContentSpec . CONTENTSPECNODE_SEQ ; } }
23377	public static boolean hasSelfPermissions ( Context context , String ... permissions ) { for ( String permission : permissions ) { if ( permissionExists ( permission ) && ! hasSelfPermission ( context , permission ) ) { return _BOOL ; } } return _BOOL ; }
23382	protected final boolean handleAllocNode ( AllocNode src ) { boolean ret = _BOOL ; Node [ ] targets = pag . allocLookup ( src ) ; for ( Node element : targets ) { ret = element . makeP2Set ( ) . add ( src ) | ret ; } return ret ; }
23388	public FileInfo query_file_info1 ( String file_id ) throws IOException , MyException { String [ ] parts = new String [ _NUM ] ; this . errno = this . split_file_id ( file_id , parts ) ; if ( this . errno != _NUM ) { return _NULL ; } return this . query_file_info ( parts [ _NUM ] , parts [ _NUM ] ) ; }
23425	@ NotNull public ImageDescription describeImage ( @ NotNull File image ) { try { return computerVisionBuilder . describeImage ( _NUM , new FileInputStream ( image ) ) . withResult ( ) ; } catch ( FileNotFoundException e ) { throw new ImageNotFoundException ( image ) ; } }
23429	public synchronized Chain < T > advance ( ) { if ( next_ == _NULL ) { if ( ! forward_ . hasNext ( ) ) throw new NoSuchElementException ( ) ; next_ = new Chain < > ( forward_ . next ( ) , forward_ ) ; forward_ = _NULL ; } return next_ ; }
23475	private void fillDeclaredPrefixes ( Iterator namespaces ) { fDeclaredPrefixes . clear ( ) ; while ( namespaces . hasNext ( ) ) { Namespace ns = ( Namespace ) namespaces . next ( ) ; String prefix = ns . getPrefix ( ) ; fDeclaredPrefixes . add ( prefix != _NULL ? prefix : _CHAR _CHAR ) ; } }
23537	public void addCoreCommandTagChanger ( final Long equipmentId , final ICoreCommandTagChanger commandTagChanger ) { List < ICoreCommandTagChanger > changers = coreCommandTagChangers . get ( equipmentId ) ; if ( changers == _NULL ) { changers = new ArrayList < > ( ) ; coreCommandTagChangers . put ( equipmentId , changers ) ; } changers . add ( commandTagChanger ) ; }
23539	@ Override public void createStroke ( Symbolizer symbolizer ) { if ( symbolizer instanceof LineSymbolizer ) { LineSymbolizer line = ( LineSymbolizer ) symbolizer ; if ( line != _NULL ) { line . setStroke ( styleFactory . getDefaultStroke ( ) ) ; } } }
23550	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( spinner != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof Integer ) { Integer newValue = ( Integer ) undoRedoObject . getNewValue ( ) ; internalSetValue ( newValue ) ; } } }
23681	public static void pickImage ( Context context , android . support . v4 . app . Fragment fragment , int requestCode ) { try { fragment . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( context ) ; } }
23762	private void fillXMLAttributes ( Attributes att ) { fAttributes . removeAllAttributes ( ) ; final int len = att . getLength ( ) ; for ( int i = _NUM ; i < len ; ++ i ) { fillXMLAttribute ( att , i ) ; fAttributes . setSpecified ( i , _BOOL ) ; } }
23764	@ Override public boolean accept ( File dir , String name ) { for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( name , wildcard , caseSensitivity ) ) { return _BOOL ; } } return _BOOL ; }
23773	protected void drawGridBackground ( Canvas c ) { if ( mDrawGridBackground ) { c . drawRect ( mViewPortHandler . getContentRect ( ) , mGridBackgroundPaint ) ; } if ( mDrawBorders ) { c . drawRect ( mViewPortHandler . getContentRect ( ) , mBorderPaint ) ; } }
23775	private void initState ( ) { ScopedStateStore state = getState ( ) ; Project project = getProject ( ) ; NewProjectWizardDynamic . initState ( state , determineGradlePluginVersion ( project ) ) ; if ( project != _NULL ) { state . put ( WizardConstants . PROJECT_LOCATION_KEY , project . getBasePath ( ) ) ; } }
23861	private boolean shouldContract ( ) { if ( expansionMode == ExpansionMode . MULTIPLICATIVE ) { return ( internalArray . length / ( ( float ) numElements ) ) > contractionCriterion ; } else { return ( internalArray . length - numElements ) > contractionCriterion ; } }
23894	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
23926	public boolean isSuper ( ) { for ( UserAuthorityGroup group : userAuthorityGroups ) { if ( group . isSuper ( ) ) { return _BOOL ; } } return _BOOL ; }
23976	void adjustSelection ( int selectionStartAdjust , int selectionEndAdjust ) { if ( selectionStartAdjust == _NUM && selectionEndAdjust == _NUM ) return ; ContentViewCore basePageContentView = getBaseContentView ( ) ; if ( basePageContentView != _NULL && basePageContentView . getWebContents ( ) != _NULL ) { mDidExpandSelection = _BOOL ; basePageContentView . getWebContents ( ) . adjustSelectionByCharacterOffset ( selectionStartAdjust , selectionEndAdjust ) ; } }
23982	public void encoding ( ) { if ( stripe_unit_size % block_nbr != _NUM ) { throw new RuntimeException ( _CHAR Can not striping . wrong DATA_LENGTH ! _CHAR ) ; } STAR_encoding_row ( ) ; STAR_encoding_diag1 ( ) ; STAR_encoding_diag2 ( ) ; }
24047	public boolean remove ( BasenameList bnl ) { boolean ret = _BOOL ; for ( int i = _NUM ; i < bnl . getLength ( ) ; i ++ ) { bList . remove ( bnl . getName ( i ) ) ; } hasChanged = _BOOL ; return ( ret ) ; }
24064	public static synchronized List < Proxy > noProxyList ( ) { if ( noProxyList == _NULL ) { ArrayList < Proxy > list = new ArrayList < Proxy > ( _NUM ) ; list . add ( Proxy . NO_PROXY ) ; noProxyList = Collections . unmodifiableList ( list ) ; } return noProxyList ; }
24071	@ Override public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR show gapBetweenBars = _CHAR ) ; boolean show = np . getBoolean ( ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; if ( getViewer ( ) instanceof ChartViewer ) { ( ( ChartViewer ) getViewer ( ) ) . setShowGapsBetweenBars ( show ) ; } }
24117	@ Nullable private static String guessBinaryPath ( ) { ByteArrayOutputStream stdout = new ByteArrayOutputStream ( ) ; int retVal = ExternalTask . builder ( ) . args ( _CHAR which _CHAR , _CHAR bazel _CHAR ) . stdout ( stdout ) . build ( ) . run ( ) ; if ( retVal != _NUM ) { return _NULL ; } return stdout . toString ( ) . trim ( ) ; }
24127	public void collapse ( NodeBase v ) { if ( v != _NULL ) { for ( Enumeration descendants = v . depthFirstEnumeration ( ) ; descendants . hasMoreElements ( ) ; ) { v = ( NodeBase ) descendants . nextElement ( ) ; dataTree . collapsePath ( new TreePath ( v . getPath ( ) ) ) ; } } }
24154	@ Override public boolean equals ( Object other ) { boolean result = _BOOL ; if ( other instanceof Unit ) { Unit that = ( Unit ) other ; result = ( this . index == that . index ) ; } return result ; }
24156	public static ExperimentDetailsFragment newInstance ( String experimentId , boolean createTaskStack ) { ExperimentDetailsFragment fragment = new ExperimentDetailsFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_EXPERIMENT_ID , experimentId ) ; args . putBoolean ( ARG_CREATE_TASK , createTaskStack ) ; fragment . setArguments ( args ) ; return fragment ; }
24176	public static boolean classExists ( String className ) { try { return Class . forName ( className ) != _NULL ; } catch ( ClassNotFoundException e ) { return _BOOL ; } }
24184	private static float calcSum ( float [ ] vals ) { if ( vals == _NULL ) return _NUM ; float sum = _NUM ; for ( float f : vals ) { sum += f ; } return sum ; }
24256	public boolean isCanReport ( ) { if ( canReport == _NULL ) { return _BOOL ; } else { return canReport ; } }
24280	private void trackRange ( final long value ) { if ( value < minValue ) { minValue = value ; } if ( value > maxValue ) { maxValue = value ; } }
24294	public static IntIterator rows ( Table t , Predicate p ) { IntIterator iter = _NULL ; iter = getOptimizedIterator ( t , p ) ; if ( iter == _NULL ) { iter = new FilterRowIterator ( t . rows ( ) , t , p ) ; } return iter ; }
24298	public static final void onPlayerLogin ( Player player ) { for ( PlayerGroup group : groups . values ( ) ) { PlayerGroupMember member = group . getMember ( player . getObjectId ( ) ) ; if ( member != _NULL ) { group . onEvent ( new PlayerConnectedEvent ( group , player ) ) ; } } }
24308	public static String slurpFileNoExceptions ( String filename , String encoding ) { try { return slurpFile ( filename , encoding ) ; } catch ( Exception e ) { throw new RuntimeException ( ) ; } }
24311	@ Nullable private static File findAidlDir ( @ NotNull SourceProvider sourceProvider ) { Collection < File > aidlDirectories = sourceProvider . getAidlDirectories ( ) ; File resDir = _NULL ; if ( ! aidlDirectories . isEmpty ( ) ) { resDir = aidlDirectories . iterator ( ) . next ( ) ; } return resDir ; }
24339	public static boolean hasRole ( String roleName ) { for ( String role : getRoles ( ) ) { if ( role . equalsIgnoreCase ( roleName ) ) { return _BOOL ; } } return _BOOL ; }
24348	private boolean exist ( String name ) { for ( EnvVar envVar : envVarList ) { if ( envVar . getName ( ) . compareTo ( name ) == _NUM ) { return _BOOL ; } } return _BOOL ; }
24380	private ProcessFunctionParameterValue findParameterValue ( List < ProcessFunctionParameterValue > valueList , String parameterName ) { for ( ProcessFunctionParameterValue paramValue : valueList ) { if ( paramValue . name . compareTo ( parameterName ) == _NUM ) { return paramValue ; } } return _NULL ; }
24397	public void moveReferences ( ) throws SQLException { if ( currentRow == _NULL || currentRow . isLast ( ) ) { nextTable ( ) ; } else { nextRow ( ) ; } }
24403	public boolean isSeparateGroup ( ) { if ( separateGroup == _NULL ) { return _BOOL ; } else { return separateGroup ; } }
24414	public static boolean canInviteToGroup ( Player player , Player target ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canInviteToGroup . ordinal ( ) ] ) { if ( ! restrictions . canInviteToGroup ( player , target ) ) { return _BOOL ; } } return _BOOL ; }
24452	public static final void onPlayerLogout ( Player player ) { PlayerAlliance alliance = player . getPlayerAlliance2 ( ) ; if ( alliance != _NULL ) { PlayerAllianceMember member = alliance . getMember ( player . getObjectId ( ) ) ; member . updateLastOnlineTime ( ) ; alliance . onEvent ( new PlayerDisconnectedEvent ( alliance , player ) ) ; } }
24456	public void showExpandableItems ( List < ExpandableItem > expandableItems ) { validateExpandableItems ( expandableItems ) ; reset ( ) ; setExpandableItems ( expandableItems ) ; renderExpandableItems ( ) ; hookListeners ( ) ; bringChildsToFront ( expandableItems ) ; }
24471	public void applyMirroredCorrection ( ResultPoint [ ] points ) { if ( ! mirrored || points == _NULL || points . length < _NUM ) { return ; } ResultPoint bottomLeft = points [ _NUM ] ; points [ _NUM ] = points [ _NUM ] ; points [ _NUM ] = bottomLeft ; }
24484	private boolean urlsMatchLoaderAnnotation ( URL [ ] urls , ClassLoader loader ) { try { return Arrays . equals ( urls , getLoaderAnnotationURLs ( loader ) ) ; } catch ( MalformedURLException e ) { return _BOOL ; } }
24498	public static void log ( MethodMsg methodMsg ) { if ( methodMsg != _NULL ) { treeMethods . add ( methodMsg ) ; } else { throw new NullPointerException ( _CHAR MethodMsg is _NULL ! _CHAR ) ; } }
24510	public void registerSaveParticipant ( ) throws CoreException { IWorkspace ws = ResourcesPlugin . getWorkspace ( ) ; ISavedState ss = ws . addSaveParticipant ( SVNProviderPlugin . getPlugin ( ) , this ) ; if ( ss != _NULL ) { ss . processResourceChangeEvents ( this ) ; } ws . removeSaveParticipant ( SVNProviderPlugin . getPlugin ( ) ) ; }
24538	public String process ( Item item ) throws ProcessException { if ( isAccented ( item ) ) { return _CHAR _NUM _CHAR ; } else { return _CHAR _NUM _CHAR ; } }
24575	public Builder discCacheExtraOptions ( int maxImageWidthForDiscCache , int maxImageHeightForDiscCache , CompressFormat compressFormat , int compressQuality , BitmapProcessor processorForDiscCache ) { this . maxImageWidthForDiscCache = maxImageWidthForDiscCache ; this . maxImageHeightForDiscCache = maxImageHeightForDiscCache ; this . imageCompressFormatForDiscCache = compressFormat ; this . imageQualityForDiscCache = compressQuality ; this . processorForDiscCache = processorForDiscCache ; return this ; }
24618	static Principal [ ] reduce ( Collection c ) { try { return reduce0 ( ( Principal [ ] ) c . toArray ( new Principal [ c . size ( ) ] ) ) ; } catch ( ArrayStoreException e ) { throw new IllegalArgumentException ( _CHAR element of collection is not a Principal _CHAR ) ; } }
24642	public void updateSupplements ( ) { if ( subtractedSupplementId == _NUM || subtractedSupplementsCount == _NUM ) { return ; } this . getInventory ( ) . decreaseByItemId ( subtractedSupplementId , subtractedSupplementsCount ) ; subtractedSupplementsCount = _NUM ; subtractedSupplementId = _NUM ; }
24663	public void clear ( ) { Iterator < MouseButton > buttons = this . buttons . values ( ) . iterator ( ) ; while ( buttons . hasNext ( ) ) { buttons . next ( ) . clear ( ) ; } this . moved = _BOOL ; this . scroll = _NUM ; }
24688	private static void rethrow ( RuntimeException e ) throws InvalidObjectException { if ( e instanceof NullPointerException || e instanceof IllegalArgumentException ) { InvalidObjectException ee = new InvalidObjectException ( e . getMessage ( ) ) ; ee . initCause ( e ) ; throw ee ; } throw e ; }
24726	private void hidePublicShare ( ) { getShareViaLinkSwitch ( ) . setVisibility ( View . GONE ) ; getExpirationDateSection ( ) . setVisibility ( View . GONE ) ; getPasswordSection ( ) . setVisibility ( View . GONE ) ; getEditPermissionSection ( ) . setVisibility ( View . GONE ) ; getGetLinkButton ( ) . setVisibility ( View . GONE ) ; getHideFileListingPermissionSection ( ) . setVisibility ( View . GONE ) ; }
24731	static void startAnimation ( View animView ) { Animation tx = new TranslateAnimation ( - _NUM , _NUM , _NUM , _NUM ) ; tx . setDuration ( _NUM ) ; tx . setRepeatCount ( Animation . INFINITE ) ; tx . setInterpolator ( new AccelerateDecelerateInterpolator ( ) ) ; tx . setRepeatMode ( Animation . REVERSE ) ; animView . startAnimation ( tx ) ; }
24752	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { return _BOOL ; } finally { } }
24843	public LsClientPacket clonePacket ( ) { try { return ( LsClientPacket ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
24890	private void initData ( ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { List < String > url = new ArrayList < > ( ) ; url . add ( _CHAR http : // g . hiphotos . baidu . com / image / pic / item / c75c10385343fbf25431e823b27eca8065388f95 . jpg '' ) ; url . add ( '' http : // g . hiphotos . baidu . com / image / pic / item / 960a304e251f95ca2f34115acd177f3e6609521d . jpg '' ) ; mLists . add ( url ) ; } }
24892	public static String filterMessage ( String message ) { for ( String word : message . split ( _CHAR _CHAR ) ) { if ( isForbiddenWord ( word ) ) { message = message . replace ( word , ENCODED_BAD_WORD ) ; } } return message ; }
24895	public void removeThrottle ( AdHocThrottleEndpoint endpoint ) { try { _throttleMap . remove ( endpoint . toString ( ) ) ; } catch ( Exception e ) { _log . warn ( _CHAR Failed to remove throttle for { } { } _CHAR , endpoint . getMethod ( ) , endpoint . getPath ( ) , e ) ; } }
24949	public int optInt ( String key , int defaultValue ) { try { return getInt ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
25001	public void addMethodForWrapping ( String className , String subSignature ) { Set < String > methods = this . classList . get ( className ) ; if ( methods == _NULL ) { methods = new HashSet < String > ( ) ; this . classList . put ( className , methods ) ; } methods . add ( subSignature ) ; }
25081	public String cleanTextValue ( String text ) { if ( text != _NULL ) { return text . trim ( ) ; } else { return text ; } }
25085	protected void displayAddressOutput ( ) { try { if ( mAreaOutput != _NULL ) mLocationAddress . setText ( mAddressOutput ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
25091	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
25114	public static void stopLocalZkServer ( ) { try { stopLocalZkServer ( _BOOL ) ; } catch ( Exception e ) { LOGGER . error ( _CHAR Failed to stop ZK : _CHAR + e ) ; } }
25159	public boolean optBoolean ( String key , boolean defaultValue ) { try { return getBoolean ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
25207	private void fireSubEquipmentSupervisionUpdate ( final SupervisionEvent supervisionEvent ) { Set < SupervisionListener > listeners = subEquipmentSupervisionListeners . get ( supervisionEvent . getEntityId ( ) ) ; if ( listeners != _NULL ) { for ( SupervisionListener listener : listeners ) { listener . onSupervisionUpdate ( supervisionEvent ) ; } } }
25223	public void dispose ( StepMetaInterface smi , StepDataInterface sdi ) { this . meta = ( ( SortKeyStepMeta ) smi ) ; this . data = ( ( SortKeyStepData ) sdi ) ; this . sortDataRows = _NULL ; super . dispose ( smi , sdi ) ; this . meta = _NULL ; this . data = _NULL ; }
25229	public void addNewValue ( int row ) { ProcessFunctionParameterValue value = getValue ( row ) ; if ( value != _NULL ) { ProcessFunctionParameterValue newValue = new ProcessFunctionParameterValue ( value ) ; valueList . add ( row , newValue ) ; this . fireTableDataChanged ( ) ; } }
25233	private void clear ( ) { logId = _NULL ; info = _NULL ; mostRecentTimer = _NULL ; times . clear ( ) ; threadIds . clear ( ) ; MDC . remove ( ID_KEY ) ; }
25237	private void markLocalizedFileAsInvalid ( DropExporter dropExporter , DropFile file , Throwable cause ) { try { dropExporter . addCommentToFile ( file . getId ( ) , _CHAR Invalid localized file must be reviewed .\ n _CHAR + cause . getMessage ( ) ) ; } catch ( Throwable t ) { logger . debug ( _CHAR Can not add mark source file as invalid _CHAR , t ) ; } }
25250	private void sleep ( long millis ) { try { Thread . sleep ( millis ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } }
25252	public static double sum ( double [ ] data ) { double sum = _NUM . _NUM ; for ( int i = _NUM ; i < data . length ; i ++ ) { if ( Double . isNaN ( data [ i ] ) ) continue ; sum += data [ i ] ; } return sum ; }
25255	public static int readByte ( byte b , boolean signed ) { if ( signed ) { return b ; } else { return b & _NUM ; } }
25267	public static void hideProgressDialogsAll ( ) { synchronized ( sLock ) { for ( ProgressDialog dialog : sDialogs . keySet ( ) ) { if ( isAlive ( dialog ) && dialog . isShowing ( ) ) dialog . dismiss ( ) ; } sDialogs . clear ( ) ; } }
25316	public void checkSymbolIsValid ( ) { boolean valid = _BOOL ; Expression expression = getExpression ( ) ; if ( expression != _NULL ) { valid = ! expression . toString ( ) . isEmpty ( ) ; } SelectedSymbol . getInstance ( ) . setValidSymbol ( VALIDITY_KEY , valid ) ; }
25392	public static void splitFilePath ( String sourcePath , List < String > partitionsFiles , String separator ) { if ( StringUtils . isNotEmpty ( sourcePath ) ) { String [ ] files = sourcePath . split ( separator ) ; for ( String file : files ) { partitionsFiles . add ( file ) ; } } }
25402	private static void requestToFireIntentAndFinish ( Activity activity ) { Log . e ( TAG , _CHAR Attempt to pass - through without completed FRE _CHAR ) ; FirstRunStatus . setFirstRunFlowComplete ( activity , _BOOL ) ; setFirstRunFlowSignInComplete ( activity , _BOOL ) ; setFirstRunFlowSignInAccountName ( activity , _NULL ) ; setFirstRunFlowSignInSetupSync ( activity , _BOOL ) ; activity . startActivity ( FirstRunFlowSequencer . createGenericFirstRunIntent ( activity , _BOOL ) ) ; }
25422	void restoreLocationServicesState ( @ NonNull ContentResolver contentResolver ) { if ( Build . VERSION . SDK_INT < Build . VERSION_CODES . KITKAT ) { setLocationServicesStatePreKitKat ( contentResolver , originalLocationProviders ) ; } else { setLocationServicesState ( contentResolver , originalLocationMode ) ; } }
25451	private static String massageURI ( String uri ) { uri = uri . trim ( ) ; int protocolEnd = uri . indexOf ( _CHAR ) ; if ( protocolEnd < _NUM || isColonFollowedByPortNumber ( uri , protocolEnd ) ) { uri = _CHAR http : // '' + uri ; } return uri ; }
25457	public void expand ( NodeBase v ) { if ( v != _NULL ) { for ( Enumeration descendants = v . breadthFirstEnumeration ( ) ; descendants . hasMoreElements ( ) ; ) { v = ( NodeBase ) descendants . nextElement ( ) ; dataTree . expandPath ( new TreePath ( v . getPath ( ) ) ) ; } } }
25492	private void displayExpression ( ExpressionNode node ) { if ( node == _NULL ) { return ; } envVarField . setDataType ( node . getType ( ) ) ; envVarField . setEnvironmentVariable ( node . getExpression ( ) ) ; revalidate ( ) ; }
25575	@ Override public void addView ( View child , int index , ViewGroup . LayoutParams params ) { if ( child . getId ( ) == R . id . card_root ) { super . addView ( child , index , params ) ; } else if ( child instanceof ActionButton ) { addActionButton ( ( ActionButton ) child ) ; } }
25611	public Image addImage ( String location , Image image ) { if ( m_maxImageWidth > - _NUM || m_maxImageHeight > - _NUM ) { image = getScaledImage ( image ) ; image . getWidth ( _NULL ) ; } imageCache . put ( location , image ) ; return image ; }
25660	public void addWord ( String word ) { Item tokenItem = tokenToWords . getTokenItem ( ) ; assert ( tokenItem != _NULL ) ; Item wordItem = tokenItem . createDaughter ( ) ; FeatureSet featureSet = wordItem . getFeatures ( ) ; featureSet . setString ( _CHAR name _CHAR , word ) ; relation . appendItem ( wordItem ) ; }
25690	public void removeAllEmails ( ) { try { removeLastEmails ( folder . getMessageCount ( ) ) ; } catch ( MessagingException e ) { LOGGER . error ( _CHAR error when removing all emails _CHAR , e ) ; } }
25739	public static PrettyPrint indentWithSpaces ( int number ) { if ( number < _NUM ) { throw new IllegalArgumentException ( _CHAR number is negative _CHAR ) ; } char [ ] chars = new char [ number ] ; Arrays . fill ( chars , _CHAR ) ; return new PrettyPrint ( chars ) ; }
25753	@ Override public void run ( ) { try { listener . notifySupervisionEvent ( event ) ; } catch ( RuntimeException e ) { LOGGER . error ( _CHAR Exception caught while notifying supervision event : the supervision status will no longer be correct and needs refreshing ! '' , e ) ; } }
25787	protected String nextLine ( ) { if ( pushedBackLine != _NULL ) { String result = pushedBackLine ; pushedBackLine = _NULL ; return result ; } else return iterator . next ( ) ; }
25790	private String readText ( XmlPullParser parser ) throws IOException , XmlPullParserException { String result = _NULL ; if ( parser . next ( ) == XmlPullParser . TEXT ) { result = parser . getText ( ) ; parser . nextTag ( ) ; } return result ; }
25794	public synchronized void addSubscription ( Subscription subscription ) { if ( waitList . isEmpty ( ) && ! serviceQueue . isEmpty ( ) ) { subscription . onPublish ( serviceQueue . poll ( ) ) ; } else { waitList . putIfAbsent ( subscription . getId ( ) , new WaitingSubscription ( subscription ) ) ; } }
25848	private String makeOTP ( ) { StringBuilder stringBuilder = new StringBuilder ( ) ; stringBuilder . append ( mOtpOneField . getText ( ) . toString ( ) ) ; stringBuilder . append ( mOtpTwoField . getText ( ) . toString ( ) ) ; stringBuilder . append ( mOtpThreeField . getText ( ) . toString ( ) ) ; stringBuilder . append ( mOtpFourField . getText ( ) . toString ( ) ) ; return stringBuilder . toString ( ) ; }
25864	public void drawScreen ( int par1 , int par2 , float par3 ) { if ( reinit ) { initGui ( ) ; reinit = _BOOL ; } this . guiList . drawScreen ( par1 , par2 , par3 ) ; super . drawScreen ( par1 , par2 , par3 , _BOOL ) ; }
25888	protected List < Target > createTargets ( List < Element > segmentsAndBoundaries ) { List < Target > targets = new ArrayList < Target > ( ) ; for ( Element sOrB : segmentsAndBoundaries ) { String phone = getPhoneSymbol ( sOrB ) ; targets . add ( new Target ( phone , sOrB ) ) ; } return targets ; }
25889	@ Override protected void onPause ( ) { super . onPause ( ) ; LOG . d ( TAG , _CHAR Paused the activity . '' ) ; if ( this . appView != _NULL ) { boolean keepRunning = this . keepRunning || this . cordovaInterface . activityResultCallback != _NULL ; this . appView . handlePause ( keepRunning ) ; } }
25907	public final boolean isValid ( ) { State state = getConnection ( ) . getState ( ) ; boolean valid = validStates . contains ( state ) ; if ( ! valid ) { log . info ( this + _CHAR wont be processed cuz its valid state do n _CHAR_CHAR + state ) ; } return valid ; }
25920	int indexOf ( Node child , Node parent ) { if ( child . getParentNode ( ) != parent ) return - _NUM ; int i = _NUM ; for ( Node node = parent . getFirstChild ( ) ; node != child ; node = node . getNextSibling ( ) ) { i ++ ; } return i ; }
25935	private String number2Full ( int time ) { if ( time < _NUM ) { return _CHAR _NUM _CHAR + time ; } else { return _CHAR _CHAR + time ; } }
26022	private static File createReserveDiskCacheDir ( Context context ) { File cacheDir = StorageUtils . getCacheDirectory ( context , _BOOL ) ; File individualDir = new File ( cacheDir , _CHAR uil - images _CHAR ) ; if ( individualDir . exists ( ) || individualDir . mkdir ( ) ) { cacheDir = individualDir ; } return cacheDir ; }
26037	static String unicodeToASCII ( String input ) { try { return toASCII ( input ) ; } catch ( IllegalArgumentException e ) { return input ; } }
26044	public boolean forEach ( TIntProcedure procedure ) { for ( int i = _NUM ; i < _pos ; i ++ ) { if ( ! procedure . execute ( _data [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
26051	public boolean isOverride ( ) { if ( override == _NULL ) { return _BOOL ; } else { return override ; } }
26068	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
26095	public void updateSizes ( int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
26103	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
26122	public void init ( ) { ProcessConfiguration processConfiguration = configurationController . getProcessConfiguration ( ) ; log . debug ( _CHAR Setting ActiveMessageReceiver listener destination to { } _CHAR , processConfiguration . getJmsDaqCommandQueue ( ) ) ; listenerContainer . setMessageListener ( this ) ; listenerContainer . setDestination ( new ActiveMQQueue ( processConfiguration . getJmsDaqCommandQueue ( ) ) ) ; listenerContainer . initialize ( ) ; listenerContainer . start ( ) ; }
26162	private Properties removeRedundantProperties ( Properties props ) { if ( props == _NULL ) { return _NULL ; } Properties clonedProps = ( Properties ) props . clone ( ) ; clonedProps . remove ( XPathProperties . CONTAINER_JNDI_URL ) ; return clonedProps ; }
26166	public static ConversationListFragment newInstance ( String anchorId , boolean isNormalStyle ) { ConversationListFragment fragment = new ConversationListFragment ( ) ; Bundle bundle = new Bundle ( ) ; bundle . putString ( ARG_ANCHOOR , anchorId ) ; bundle . putBoolean ( ARG_IS_NORMAL , isNormalStyle ) ; fragment . setArguments ( bundle ) ; return fragment ; }
26176	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
26208	public void authReconnectionResponse ( int accountId , int reconnectKey ) { AionConnection client = loginRequests . remove ( accountId ) ; if ( client == _NULL ) { return ; } log . info ( _CHAR Account reconnecting : _CHAR + accountId + _CHAR = _CHAR + client . getAccount ( ) . getName ( ) ) ; client . close ( new SM_RECONNECT_KEY ( reconnectKey ) , _BOOL ) ; }
26242	public PointsToSet reachingObjects ( SootField f ) { if ( ! f . isStatic ( ) ) throw new RuntimeException ( _CHAR The parameter f must be a * static * field . '' ) ; VarNode n = findGlobalVarNode ( f ) ; if ( n == _NULL ) { return EmptyPointsToSet . v ( ) ; } return n . getP2Set ( ) ; }
26244	public static void startLocalZkServer ( ) { try { startLocalZkServer ( DEFAULT_ZK_TEST_PORT ) ; } catch ( Exception e ) { LOGGER . error ( _CHAR Failed to start ZK : _CHAR + e ) ; } }
26253	public TrustManagerBuilder add ( TrustManager ... mgrs ) { for ( TrustManager tm : mgrs ) { if ( tm instanceof X509TrustManager ) { mgr . add ( ( X509TrustManager ) tm ) ; } } return ( this ) ; }
26271	final public void response ( JSON jo ) { if ( jo == _NULL ) { responseJson ( _CHAR { } _CHAR ) ; } else { responseJson ( jo . toString ( ) ) ; } }
26281	private void displayExpression ( ExpressionNode node ) { if ( node == _NULL ) { return ; } dataSourceAttributePanel . setDataType ( node . getType ( ) ) ; dataSourceAttributePanel . setAttribute ( node . getExpression ( ) ) ; revalidate ( ) ; }
26286	public static void assertEquals ( String msg , double expected , double actual , double delta ) { if ( Double . isNaN ( expected ) ) { Assert . assertTrue ( _CHAR _CHAR + actual + _CHAR is not NaN . '' , Double . isNaN ( actual ) ) ; } else { Assert . assertEquals ( msg , expected , actual , delta ) ; } }
26325	private void logExpiration ( Entry e ) { if ( e . renewalsDone ( ) ) { logger . log ( Level . FINE , _CHAR Reached desired expiration for lease { _NUM } _CHAR , e . lease ) ; } else { logger . log ( Levels . FAILED , _CHAR Lease { _NUM } expired before reaching desired expiration _CHAR , e . lease ) ; } }
26328	public static Var map ( Relation relation ) { if ( isHasResourceRelation ( relation ) ) { return var ( ) ; } Var var = base ( relation ) ; var = roleplayers ( var , relation ) ; return var ; }
26354	private void newDrawableDialog ( ) { if ( Utils . isWindows ( ) ) { newDrawableDialogWindows ( ) ; } else { newDrawableDialogVisUI ( ) ; } }
26366	public static SamlWebViewDialog newInstance ( String url , String targetUrl ) { SamlWebViewDialog fragment = new SamlWebViewDialog ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_INITIAL_URL , url ) ; args . putString ( ARG_TARGET_URL , targetUrl ) ; fragment . setArguments ( args ) ; return fragment ; }
26389	public boolean documentFitsView ( ) { if ( swipeVertical ) { return getPageCount ( ) * optimalPageHeight < getHeight ( ) ; } else { return getPageCount ( ) * optimalPageWidth < getWidth ( ) ; } }
26391	static boolean lessEqual ( Object v1 , Object v2 ) { v1 = maybeConvertToString ( v1 ) ; v2 = maybeConvertToString ( v2 ) ; if ( Objects . equals ( v1 , v2 ) ) { return _BOOL ; } return less ( v1 , v2 ) ; }
26406	public static void pickImage ( Activity activity , int requestCode ) { try { activity . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( activity ) ; } }
26416	public Color mul ( float value ) { this . r *= value ; this . g *= value ; this . b *= value ; this . a *= value ; clamp ( ) ; return this ; }
26432	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
26434	public static void openWirelessNetworkSettings ( Context context ) { if ( android . os . Build . VERSION . SDK_INT > _NUM ) { context . startActivity ( new Intent ( android . provider . Settings . ACTION_SETTINGS ) ) ; } else { context . startActivity ( new Intent ( android . provider . Settings . ACTION_WIRELESS_SETTINGS ) ) ; } }
26465	public String toString ( ) { StringBuilder classPathBuilder = new StringBuilder ( _CHAR _CHAR ) ; for ( String cpEntry : _classpathList ) { classPathBuilder . append ( cpEntry ) ; classPathBuilder . append ( File . pathSeparatorChar ) ; } return classPathBuilder . toString ( ) ; }
26486	@ Override protected void onStart ( ) { super . onStart ( ) ; LOG . d ( TAG , _CHAR Started the activity . '' ) ; if ( this . appView == _NULL ) { return ; } this . appView . handleStart ( ) ; }
26488	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( textField != _NULL ) { if ( undoRedoObject != _NULL ) { String newValue = ( String ) undoRedoObject . getNewValue ( ) ; textField . setText ( newValue ) ; } } }
26534	protected void fireChangeEvent ( ) { Iterator iter = m_listeners . iterator ( ) ; ChangeEvent evt = new ChangeEvent ( this ) ; while ( iter . hasNext ( ) ) { ChangeListener cl = ( ChangeListener ) iter . next ( ) ; cl . stateChanged ( evt ) ; } }
26544	public boolean isReifiable ( ) { ASTNode $ State state = state ( ) ; try { return elementType ( ) . isReifiable ( ) ; } finally { } }
26576	@ Override public void run ( ) { try { AudioSystem . write ( m_audioInputStream , m_targetType , m_outputFile ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
26608	public RTMClient rtm ( String apiToken ) throws IOException { try { return new RTMClient ( methods ( ) . rtmStart ( RTMStartRequest . builder ( ) . token ( apiToken ) . build ( ) ) . getUrl ( ) ) ; } catch ( SlackApiException | URISyntaxException e ) { throw new IllegalStateException ( _CHAR Could n _CHAR_CHAR ) ; } }
26618	public String name ( ) { if ( this . record != _NULL ) { return this . record . name ( ) ; } else { return _NULL ; } }
26627	public boolean hasAuthorities ( ) { for ( UserAuthorityGroup group : userAuthorityGroups ) { if ( group != _NULL && group . getAuthorities ( ) != _NULL && ! group . getAuthorities ( ) . isEmpty ( ) ) { return _BOOL ; } } return _BOOL ; }
26634	private boolean isRequestingSensorEventData ( ) { for ( Map . Entry < String , SensorDataRequest > sensorDataRequestEntry : sensorDataRequests . entrySet ( ) ) { if ( sensorDataRequestEntry . getValue ( ) . getEndTimestamp ( ) == DataRequest . TIMESTAMP_NOT_SET ) { return _BOOL ; } } return _BOOL ; }
26672	public double optDouble ( String key , double defaultValue ) { try { return this . getDouble ( key ) ; } catch ( Exception e ) { return defaultValue ; } }
26685	public void clearAll ( ) { if ( items != _NULL ) { items . clear ( ) ; } if ( emptyItems != _NULL ) { emptyItems . clear ( ) ; } }
26707	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case R . id . menu_refresh : SyncUtils . triggerRefresh ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
26723	public Map . Entry < K , V > firstEntry ( ) { for ( ; ; ) { Node < K , V > n = findFirst ( ) ; if ( n == _NULL ) return _NULL ; AbstractMap . SimpleImmutableEntry < K , V > e = n . createSnapshot ( ) ; if ( e != _NULL ) return e ; } }
26823	public boolean equalsShared ( Item otherItem ) { if ( otherItem == _NULL ) { return _BOOL ; } else { return getSharedContents ( ) . equals ( otherItem . getSharedContents ( ) ) ; } }
26840	public final synchronized void sendPacket ( AionServerPacket bp ) { if ( isWriteDisabled ( ) ) { return ; } log . debug ( _CHAR sending packet : _CHAR + bp ) ; sendMsgQueue . addLast ( bp ) ; enableWriteInterest ( ) ; }
26852	private void fillDeclaredPrefixes ( Iterator namespaces ) { fDeclaredPrefixes . clear ( ) ; while ( namespaces . hasNext ( ) ) { Namespace ns = ( Namespace ) namespaces . next ( ) ; String prefix = ns . getPrefix ( ) ; fDeclaredPrefixes . add ( prefix != _NULL ? prefix : _CHAR _CHAR ) ; } }
26868	private static File createReserveDiskCacheDir ( Context context ) { File cacheDir = StorageUtils . getCacheDirectory ( context , _BOOL ) ; File individualDir = new File ( cacheDir , _CHAR uil - images _CHAR ) ; if ( individualDir . exists ( ) || individualDir . mkdir ( ) ) { cacheDir = individualDir ; } return cacheDir ; }
26877	protected int indexOfLocal ( Value local ) { int localIndex = origLocals . indexOf ( local ) ; if ( localIndex == - _NUM ) { Local oldLocal = newLocalsToOldLocal . get ( local ) ; localIndex = origLocals . indexOf ( oldLocal ) ; } return localIndex ; }
26890	private void initThreadPoolSize ( ) { try { thread_pool_size = Integer . parseInt ( CarbonProperties . getInstance ( ) . getProperty ( CarbonCommonConstants . NUM_CORES_LOADING , CarbonCommonConstants . NUM_CORES_DEFAULT_VAL ) ) ; } catch ( NumberFormatException e ) { thread_pool_size = Integer . parseInt ( CarbonCommonConstants . NUM_CORES_DEFAULT_VAL ) ; } }
26895	public static String readFileAsString ( File file , String encoding ) throws IOException { ByteBuffer buffer = readFile ( file ) ; if ( _NULL == encoding ) { encoding = _CHAR UTF - _NUM _CHAR ; } String converted = new String ( buffer . array ( ) , encoding ) ; return converted ; }
26910	private boolean dynomiteRedisPing ( Jedis dynomiteJedis ) { if ( dynomiteJedis . ping ( ) . equals ( _CHAR PONG _CHAR ) == _BOOL ) { logger . warn ( _CHAR Pinging Dynomite failed _CHAR ) ; return _BOOL ; } logger . info ( _CHAR Dynomite is up and running _CHAR ) ; return _BOOL ; }
26924	public void add ( X509TrustManager mgr ) { if ( mgr instanceof X509Extensions ) { managers . add ( ( X509Extensions ) mgr ) ; } else { managers . add ( new X509ExtensionsWrapper ( mgr ) ) ; } }
26941	public T waitForResult ( ) throws InterruptedException { try { return waitForResult ( - _NUM , TimeUnit . MILLISECONDS ) ; } catch ( TimeoutException e ) { throw new RuntimeException ( _CHAR Should not occur as we are waiting forever _CHAR ) ; } }
27011	public SimpleAsyncPollingContainerConfigurer eventListenerMethod ( Object eventListener , String methodName ) { MethodEventListenerAdapter methodEventListenerAdapter = new MethodEventListenerAdapter ( ) ; methodEventListenerAdapter . setDelegate ( eventListener ) ; methodEventListenerAdapter . setMethodName ( methodName ) ; methodEventListenerAdapter . afterPropertiesSet ( ) ; pollingEventListenerContainer . setEventListener ( methodEventListenerAdapter ) ; return this ; }
27017	@ Override public int reapUnused ( ) { int res = _NUM ; for ( EvictionReplicationsMarkersSegment segment : _segments ) { if ( size ( ) == _NUM ) return res ; res += reapUnused ( segment ) ; } return res ; }
27051	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; setFocus ( ) ; } }
27142	protected void addClassPath ( String classpath ) { if ( classpath == _NULL ) return ; String sep = classpath . indexOf ( _CHAR ; _CHAR ) == - _NUM ? _CHAR : _CHAR : _CHAR ; _CHAR ; String [ ] parseCp = classpath . split ( sep ) ; for ( String cpEntry : parseCp ) { addEntry ( cpEntry ) ; } }
27179	public boolean isPrefixOf ( FieldSelector sel ) { for ( int i = _NUM ; i < fields . size ( ) ; i ++ ) { if ( i >= sel . fields . size ( ) || fields . get ( i ) != sel . fields . get ( i ) ) { return _BOOL ; } } return _BOOL ; }
27182	public GenericValue findByPrimaryKeyPartial ( GenericPK primaryKey , Set < String > keys ) throws GenericEntityException { if ( primaryKey == _NULL ) { return _NULL ; } GenericValue genericValue = GenericValue . create ( primaryKey ) ; genericDAO . partialSelect ( genericValue , keys ) ; return genericValue ; }
27183	void receiveMessages ( ClientCnx cnx , int numMessages ) { if ( cnx != _NULL ) { if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR [ { } ] [ { } ] Adding { } additional permits _CHAR , topic , subscription , numMessages ) ; } cnx . ctx ( ) . writeAndFlush ( Commands . newFlow ( consumerId , numMessages ) , cnx . ctx ( ) . voidPromise ( ) ) ; } }
27212	private void dump ( final Thread thread , final Throwable exception ) { if ( isWriting ) { return ; } isWriting = _BOOL ; SharePref . saveLastCrashLog ( mContext , mWriter . write ( thread , exception ) ) ; isWriting = _BOOL ; }
27216	public void reset ( ) { for ( int i = _NUM ; i < measureDataChunk . length ; i ++ ) { this . measureDataChunk [ i ] = _NULL ; } for ( int i = _NUM ; i < dimensionDataChunk . length ; i ++ ) { this . dimensionDataChunk [ i ] = _NULL ; } }
27245	static Set < String > parsePathParameters ( String path ) { Matcher m = PARAM_URL_REGEX . matcher ( path ) ; Set < String > patterns = new LinkedHashSet < > ( ) ; while ( m . find ( ) ) { patterns . add ( m . group ( _NUM ) ) ; } return patterns ; }
27248	public static void createReader ( String fileName ) { try { createReader ( new FileInputStream ( fileName ) ) ; } catch ( FileNotFoundException e ) { e . printStackTrace ( ) ; } }
27252	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
27266	private synchronized boolean incRef ( ) { if ( _closed ) { return _BOOL ; } _referenceCount += _NUM ; _log . info ( _CHAR Data store reference count updated : [ id = { } , reference count = { } ] _CHAR , _id , _referenceCount ) ; return _BOOL ; }
27288	private static RetainFragment findOrCreateRetainFragment ( FragmentManager fm ) { RetainFragment mRetainFragment = ( RetainFragment ) fm . findFragmentByTag ( TAG ) ; if ( mRetainFragment == _NULL ) { mRetainFragment = new RetainFragment ( ) ; fm . beginTransaction ( ) . add ( mRetainFragment , TAG ) . commitAllowingStateLoss ( ) ; } return mRetainFragment ; }
27309	public ContextVarNode makeContextVarNode ( LocalVarNode base , Context context ) { ContextVarNode ret = base . context ( context ) ; if ( ret == _NULL ) { ret = new ContextVarNode ( this , base , context ) ; addNodeTag ( ret , base . getMethod ( ) ) ; } return ret ; }
27315	private void tryStartingKbMode ( int keyCode ) { if ( keyCode == - _NUM || addKeyIfLegal ( keyCode ) ) { mInKbMode = _BOOL ; onValidationChanged ( _BOOL ) ; updateDisplay ( _BOOL ) ; mRadialTimePickerView . setInputEnabled ( _BOOL ) ; } }
27323	private void initRefreshData ( ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { List < String > url = new ArrayList < > ( ) ; url . add ( _CHAR http : // qq1234 . org / uploads / allimg / 140404 / 3_140404114606_1 . jpg '' ) ; url . add ( '' http : // qq1234 . org / uploads / allimg / 140404 / 3_140404114555_6 . jpg '' ) ; mLists . add ( url ) ; } }
27332	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( textField != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof String ) { String oldValue = ( String ) undoRedoObject . getOldValue ( ) ; textField . setText ( oldValue ) ; } } }
27357	public int delete_file1 ( String file_id ) throws IOException , MyException { String [ ] parts = new String [ _NUM ] ; this . errno = this . split_file_id ( file_id , parts ) ; if ( this . errno != _NUM ) { return this . errno ; } return this . delete_file ( parts [ _NUM ] , parts [ _NUM ] ) ; }
27396	public boolean isNextEvolutionOf ( Pokemon otherPokemon ) { for ( Pokemon evolution : otherPokemon . evolutions ) { if ( number == evolution . number ) { return _BOOL ; } } return _BOOL ; }
27402	public void parse ( ) { method_info mi ; int i ; for ( i = _NUM ; i < methods_count ; i ++ ) { mi = methods [ i ] ; mi . instructions = parseMethod ( mi ) ; } }
27472	public int size ( ) { if ( mListeners != _NULL ) { return mListeners . size ( ) ; } else { return _NUM ; } }
27502	public static String hexToStringNoException ( final String data ) { try { return ConversionUtils . arrayToString ( Hex . decodeHex ( data . toCharArray ( ) ) ) ; } catch ( DecoderException e ) { return _CHAR [ invalid hex ] _CHAR ; } }
27511	private static Comparable < ? > castToComparable ( Object obj ) { try { return ( Comparable < ? > ) obj ; } catch ( ClassCastException cce ) { throw new IllegalArgumentException ( _CHAR Type _CHAR + obj . getClass ( ) + _CHAR does n _CHAR_CHAR_CHAR_CHAR , cce ) ; } }
27538	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( attributeComboBox != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof String ) { String newValue = ( String ) undoRedoObject . getNewValue ( ) ; attributeComboBox . setSelectedItem ( newValue ) ; } } }
27561	void checkNormalizationAfterRemove ( ChildNode previousSibling ) { if ( previousSibling != _NULL && previousSibling . getNodeType ( ) == Node . TEXT_NODE ) { ChildNode next = previousSibling . nextSibling ; if ( next != _NULL && next . getNodeType ( ) == Node . TEXT_NODE ) { isNormalized ( _BOOL ) ; } } }
27566	private boolean supportsControllableClass ( ZWaveNode node ) { for ( CommandClass commandClass : controllableClasses ) { if ( node . supportsCommandClass ( commandClass ) == _BOOL ) { return _BOOL ; } } return _BOOL ; }
27568	public void clearCounters ( ) { this . hitCount . set ( _NUM ) ; this . missCountNotFound . set ( _NUM ) ; this . missCountExpired . set ( _NUM ) ; this . missCountSoftRef . set ( _NUM ) ; this . removeHitCount . set ( _NUM ) ; this . removeMissCount . set ( _NUM ) ; }
27587	public boolean isValueOnly ( ) { if ( valueOnly == _NULL ) { return _BOOL ; } else { return valueOnly ; } }
27596	public LogSeqNum logSetVal ( Buffer buff , int offset , Constant newVal ) { if ( enableLogging ) { BlockId blk = buff . block ( ) ; if ( isTempBlock ( blk ) ) return _NULL ; return new SetValueRecord ( txNum , blk , offset , buff . getVal ( offset , newVal . getType ( ) ) , newVal ) . writeToLog ( ) ; } else return _NULL ; }
27608	public static GenericEntity createGenericEntity ( Delegator delegator , ModelEntity modelEntity , Map < String , ? extends Object > fields ) { if ( modelEntity == _NULL ) { throw new IllegalArgumentException ( _CHAR Can not create a GenericEntity with a _NULL modelEntity parameter _CHAR ) ; } GenericEntity newEntity = new GenericEntity ( ) ; newEntity . init ( delegator , modelEntity , fields ) ; return newEntity ; }
27620	public static void threadSleep ( long millis ) { try { Thread . sleep ( millis ) ; } catch ( InterruptedException ex ) { Log . e ( _CHAR Exception _CHAR , StringUtils . exceptionStackTraceToString ( ex ) ) ; } }
27625	@ Override public String object2Relation ( String fieldType ) { if ( fieldType != _NULL ) { if ( fieldType . equals ( _CHAR byte _CHAR ) || fieldType . equals ( _CHAR java . lang . Byte _CHAR ) ) { return _CHAR blob _CHAR ; } } return _NULL ; }
27658	private static double doubleHighPart ( double d ) { if ( d > - Precision . SAFE_MIN && d < Precision . SAFE_MIN ) { return d ; } long xl = Double . doubleToRawLongBits ( d ) ; xl & = MASK_30BITS ; return Double . longBitsToDouble ( xl ) ; }
27665	public ZoomPanOptions build ( ) { ZoomPanOptions options = new ZoomPanOptions ( ) ; options . animate = this . animate ; options . pan = this . pan ; options . zoom = this . zoom ; options . reset = this . reset ; return options ; }
27679	String inprogressZNodeName ( long ledgerId , long firstTxId , long logSegmentSeqNo ) { if ( DistributedLogConstants . LOGSEGMENT_NAME_VERSION == conf . getLogSegmentNameVersion ( ) ) { return String . format ( _CHAR % s_ % _NUM _CHAR , DistributedLogConstants . INPROGRESS_LOGSEGMENT_PREFIX , logSegmentSeqNo ) ; } else { return DistributedLogConstants . INPROGRESS_LOGSEGMENT_PREFIX + _CHAR _ _CHAR + Long . toString ( firstTxId , _NUM ) ; } }
27680	public static boolean canAffectBySkill ( Player player , VisibleObject target , Skill skill ) { for ( Restrictions restrictions : RESTRICTIONS [ RestrictionMode . canAffectBySkill . ordinal ( ) ] ) { if ( ! restrictions . canAffectBySkill ( player , target , skill ) ) { return _BOOL ; } } return _BOOL ; }
27746	public static int readLittleEndianInt ( DataInputStream dataStream ) throws IOException { int bits = _NUM ; for ( int shift = _NUM ; shift < _NUM ; shift += _NUM ) { int byteRead = ( _NUM & dataStream . readByte ( ) ) ; bits |= ( byteRead << shift ) ; } return bits ; }
27750	public void closeDriver ( ) { if ( mCamera != _NULL ) { mCamera . release ( ) ; mInitialized = _BOOL ; mPreviewing = _BOOL ; mCamera = _NULL ; } }
27757	public boolean fastContains ( double p ) { if ( isInverted ( ) ) { return ( p >= lo ( ) || p <= hi ( ) ) && ! isEmpty ( ) ; } else { return p >= lo ( ) && p <= hi ( ) ; } }
27772	@ PostConstruct public void init ( ) { highPriorityBuffer = new SynchroBuffer ( _NUM , _NUM , _NUM , SynchroBuffer . DUPLICATE_OK , _NUM ) ; highPriorityBuffer . setSynchroBufferListener ( new HighPriorityListener ( ) ) ; highPriorityBuffer . enable ( ) ; lowPriorityBuffer = new SynchroBuffer ( _NUM , _NUM , _NUM , SynchroBuffer . DUPLICATE_OK , _NUM ) ; lowPriorityBuffer . setSynchroBufferListener ( new LowPriorityListener ( ) ) ; lowPriorityBuffer . enable ( ) ; }
27784	public void writeFileContent ( String content , Path path ) throws CommandException { try { Files . write ( content , path . toFile ( ) , StandardCharsets . UTF_8 ) ; } catch ( IOException e ) { throw new CommandException ( _CHAR Can not write file content in path : _CHAR + path . toString ( ) , e ) ; } }
27804	public static Bitmap scaleImage ( Bitmap src , float scaleWidth , float scaleHeight ) { if ( src == _NULL ) { return _NULL ; } Matrix matrix = new Matrix ( ) ; matrix . postScale ( scaleWidth , scaleHeight ) ; return Bitmap . createBitmap ( src , _NUM , _NUM , src . getWidth ( ) , src . getHeight ( ) , matrix , _BOOL ) ; }
27814	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( table != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof ColorMap ) { ColorMap oldValue = ( ColorMap ) undoRedoObject . getOldValue ( ) ; populateField ( oldValue ) ; } } }
27828	synchronized public int writeBulk ( List < LogRecord > records ) throws IOException { int numRecords = _NUM ; for ( LogRecord r : records ) { write ( r ) ; numRecords ++ ; } return numRecords ; }
27860	public void updateSizes ( int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
27866	public boolean isCellEditable ( int row , int col ) { if ( ! m_rows . isValidRow ( row ) ) { return _BOOL ; } else { return getColumn ( col ) . isCellEditable ( row ) ; } }
27868	public void onAccessibilityStatusChanged ( boolean enabled ) { if ( enabled && ( mNodeProvider == _NULL ) ) { mAccessibilityView = new View ( getContext ( ) ) ; addView ( mAccessibilityView ) ; mNodeProvider = new CompositorAccessibilityProvider ( mAccessibilityView ) ; ViewCompat . setAccessibilityDelegate ( mAccessibilityView , mNodeProvider ) ; } }
27886	private static String formattedLocationFromGoogleResponse ( final JSONObject json ) { final JSONArray matches = json . optJSONArray ( GoogleKey . RESULTS ) ; String formattedLocation = _NULL ; if ( matches != _NULL && matches . length ( ) > _NUM ) { formattedLocation = matches . getJSONObject ( _NUM ) . optString ( GoogleKey . FORMATTED_ADDRESS ) ; } return formattedLocation ; }
27903	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( comboBox != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof String ) { String oldValue = ( String ) undoRedoObject . getOldValue ( ) ; comboBox . setSelectValueKey ( oldValue ) ; } } }
27918	public boolean hasDataElement ( DataElement dataElement ) { for ( DataSet dataSet : dataSets ) { if ( dataSet . getDataElements ( ) . contains ( dataElement ) ) { return _BOOL ; } } return _BOOL ; }
27977	public String onValidate ( String text ) { if ( text . length ( ) >= _NUM ) { return _NULL ; } else { return getContext ( ) . getString ( R . string . error_msg_api_secret_length ) ; } }
28007	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
28039	public static byte parseByte ( String text ) throws DataParseException { try { return Byte . parseByte ( text ) ; } catch ( NumberFormatException e ) { throw new DataParseException ( e ) ; } }
28083	@ Override public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { View view = inflater . inflate ( R . layout . fragment_search , container , _BOOL ) ; initModel ( ) ; initPresenter ( ) ; initView ( view ) ; messageManagePresenter . sendMessage ( _NUM , _NULL ) ; return view ; }
28118	public synchronized boolean hasPendingTasks ( ) { Iterator < Future < ? >> futIter = pendingTasks . iterator ( ) ; while ( futIter . hasNext ( ) ) { Future < ? > fut = futIter . next ( ) ; if ( fut . isDone ( ) ) futIter . remove ( ) ; } return ! pendingTasks . isEmpty ( ) ; }
28140	public String nextLine ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( _CHAR No more lines _CHAR ) ; } String currentLine = cachedLine ; cachedLine = _NULL ; return currentLine ; }
28160	public void sendDelayedTimeDeadbandValues ( ) { this . equipmentLogger . trace ( _CHAR sendDelayedTimeDeadbandValues - Sending all time deadband delayed values to the server _CHAR ) ; for ( SDTTimeDeadbandScheduler tagScheduler : this . sdtTimeDeadbandSchedulers . values ( ) ) { if ( tagScheduler . isScheduledForSending ( ) ) { tagScheduler . run ( ) ; } } }
28175	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( undoRedoObject != _NULL ) { if ( undoRedoObject . getNewValue ( ) instanceof String ) { String newValue = ( String ) undoRedoObject . getNewValue ( ) ; populateField ( newValue ) ; } } }
28216	public void addLanguage ( Integer languageId ) { if ( languageId != _NULL ) { addLanguage ( languageId . toString ( ) ) ; } else { Logger . warn ( this , _CHAR Tried to add languageId Null ! _CHAR ) ; } }
28231	public static double parseDouble ( String text ) throws DataParseException { try { return Double . parseDouble ( text ) ; } catch ( NumberFormatException e ) { throw new DataParseException ( e ) ; } }
28235	void save ( PermissionHolder holder ) { if ( holder instanceof User ) { plugin . getDatastore ( ) . saveUser ( ( ( User ) holder ) , _NULL ) ; } if ( holder instanceof Group ) { plugin . getDatastore ( ) . saveGroup ( ( ( Group ) holder ) , _NULL ) ; } }
28247	public static TimeZone toTimeZone ( String tzId ) { if ( UtilValidate . isEmpty ( tzId ) ) { return TimeZone . getDefault ( ) ; } else { return TimeZone . getTimeZone ( tzId ) ; } }
28261	@ Override public boolean onPaint ( ViewTransform transform , Graphics2D g ) { boolean needsRepaint = super . onPaint ( transform , g ) ; if ( isSelected ( ) ) { ConstraintTableLayout table = ( ConstraintTableLayout ) mWidget ; WidgetDraw . drawTableControls ( transform , g , table ) ; } return needsRepaint ; }
28270	@ Override public boolean equals ( Object o ) { if ( this == o ) return _BOOL ; if ( o instanceof TxnMgrProxy ) { TxnMgrProxy other = ( TxnMgrProxy ) o ; return proxyID . getLeastSignificantBits ( ) == other . proxyID . getLeastSignificantBits ( ) && proxyID . getMostSignificantBits ( ) == other . proxyID . getMostSignificantBits ( ) ; } else return _BOOL ; }
28299	public void unregisterDrop ( Npc npc ) { Integer npcObjId = npc . getObjectId ( ) ; Map < Integer , DropNpc > dropRegmap = DropRegistrationService . getInstance ( ) . getDropRegistrationMap ( ) ; DropRegistrationService . getInstance ( ) . getCurrentDropMap ( ) . remove ( npcObjId ) ; if ( dropRegmap . containsKey ( npcObjId ) ) { dropRegmap . remove ( npcObjId ) ; } }
28323	public static boolean isEmpty ( String str ) { if ( str == _NULL || str . length ( ) == _NUM || str . equalsIgnoreCase ( _CHAR _NULL _CHAR ) || str . isEmpty ( ) || str . equals ( _CHAR _CHAR ) ) { return _BOOL ; } else { return _BOOL ; } }
28353	@ Override public void endElement ( QName element , Augmentations augs ) throws XNIException { if ( fNamespaces ) { handleEndElement ( element , augs , _BOOL ) ; } else if ( fDocumentHandler != _NULL ) { fDocumentHandler . endElement ( element , augs ) ; } }
28363	boolean acceptNode ( Node node ) { if ( fNodeFilter == _NULL ) { return ( fWhatToShow & ( _NUM << node . getNodeType ( ) - _NUM ) ) != _NUM ; } else { return ( ( fWhatToShow & ( _NUM << node . getNodeType ( ) - _NUM ) ) != _NUM ) && fNodeFilter . acceptNode ( node ) == NodeFilter . FILTER_ACCEPT ; } }
28396	public void apply ( NexusStreamParser np ) throws Exception { np . matchIgnoreCase ( _CHAR set index = _CHAR ) ; String method = np . getWordMatchesIgnoringCase ( METHODS ) ; np . matchIgnoreCase ( _CHAR ; _CHAR ) ; ClusterViewer viewer = getViewer ( ) ; viewer . setEcologicalIndex ( method ) ; execute ( _CHAR sync ; _CHAR ) ; }
28404	public void addNewStyledLayer ( NamedLayer namedLayer ) { if ( this . sld == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR sld == _NULL _CHAR ) ; } else { this . sld . addStyledLayer ( namedLayer ) ; } }
28434	@ Override public void copy ( @ NotNull File from , @ NotNull File to ) { try { copyTemplateResource ( from , to ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
28498	private < Q , R > void recordFinalStatus ( JobIdentifier < Q , R > jobId , JobStatus < Q , R > jobStatus ) { try { _jobStatusDAO . updateJobStatus ( jobId , jobStatus ) ; } catch ( Exception e ) { _log . error ( _CHAR Failed to record final status for job : [ id = { } , status = { } ] _CHAR , jobId , jobStatus . getStatus ( ) , e ) ; } }
28503	private void unsetBoundsAction ( ) { NullBounds bounds = new NullBounds ( ) ; synchronized ( Simulation . LOCK ) { this . simulation . getWorld ( ) . setBounds ( bounds ) ; } this . bounds . setUserObject ( bounds ) ; this . model . reload ( this . bounds ) ; }
28546	private void assertResult ( String expected , String result ) { if ( diagCollector . getErrorCount ( ) > _NUM ) { Truth . assertWithMessage ( _CHAR Errors detected while filtering comment '' ) . fail ( NEWLINE_JOINER . join ( diagCollector . getErrors ( ) ) ) ; } else { Truth . assertThat ( result ) . isEqualTo ( expected ) ; } }
28560	public void addNewStyledLayer ( UserLayer userLayer ) { if ( this . sld == _NULL ) { ConsoleManager . getInstance ( ) . error ( this , _CHAR sld == _NULL _CHAR ) ; } else { this . sld . addStyledLayer ( userLayer ) ; } }
28626	public long optLong ( int index , long defaultValue ) { try { return getLong ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
28638	public Map < K , V > pop ( ) { if ( this . stackList . size ( ) > _NUM ) { return stackList . remove ( _NUM ) ; } else { return _NULL ; } }
28650	public static void checkDirectoryIsWriteable ( @ NotNull File directory ) throws IOException { while ( ! directory . exists ( ) || ! directory . isDirectory ( ) ) { directory = directory . getParentFile ( ) ; } if ( ! directory . canWrite ( ) ) { throw new IOException ( _CHAR Can not write to folder : _CHAR + directory . getAbsolutePath ( ) ) ; } }
28661	public static ShortBuffer createShortBuffer ( ShortBuffer buf , int size ) { if ( buf != _NULL && buf . limit ( ) == size ) { buf . rewind ( ) ; return buf ; } buf = createShortBuffer ( size ) ; return buf ; }
28668	public JSONStringer key ( String name ) throws JSONException { if ( name == _NULL ) { throw new JSONException ( _CHAR Names must be non - _NULL _CHAR ) ; } beforeKey ( ) ; string ( name ) ; return this ; }
28680	public void enterFullScreen ( ) { View decorView = mContext . getWindow ( ) . getDecorView ( ) ; hideSystemUI ( decorView ) ; for ( View view : views ) { view . setVisibility ( View . GONE ) ; view . invalidate ( ) ; } }
28683	public static void main ( String [ ] args ) { if ( args . length != _NUM ) { System . err . println ( _CHAR Usage : VertxExample < json file > _CHAR ) ; System . exit ( _NUM ) ; } VertxExample example = new VertxExample ( ) ; example . parseFile ( args [ _NUM ] , _NULL ) ; }
28720	public char nextClean ( ) throws JSONException { for ( ; ; ) { char c = this . next ( ) ; if ( c == _NUM || c > _CHAR ) { return c ; } } }
28743	public static boolean isOFBGiftCard ( String stPassed ) { if ( isEmpty ( stPassed ) ) return defaultEmptyOK ; String st = stripCharsInBag ( stPassed , creditCardDelimiters ) ; if ( st . length ( ) == _NUM && sumIsMod10 ( getLuhnSum ( st ) ) ) { return _BOOL ; } return _BOOL ; }
28755	public JsonObject toJson ( ) { JsonObject json = new JsonObject ( ) ; json . put ( _CHAR request _CHAR , request . toJson ( ) ) ; if ( template != _NULL ) { json . put ( _CHAR template _CHAR , template ) ; } return json ; }
28765	public static boolean isCurrentParent ( List < ? extends IdentifiableObject > objects ) { for ( IdentifiableObject object : objects ) { if ( object != _NULL && object instanceof OrganisationUnit && ( ( OrganisationUnit ) object ) . isCurrentParent ( ) ) { return _BOOL ; } } return _BOOL ; }
28775	public synchronized static boolean isOpenAvailable ( ) { if ( ! openAvailableInitialized ) { if ( _CHAR _BOOL _CHAR . equals ( allowDesktopOpen ) && isDesktopSupported ( ) ) openAvailable = Desktop . getDesktop ( ) . isSupported ( Desktop . Action . OPEN ) ; else openAvailable = _BOOL ; openAvailableInitialized = _BOOL ; } return openAvailable ; }
28801	public void revertToDefaultValue ( ) { List < FieldConfigBase > fieldList = fieldConfigManager . getFields ( _NULL ) ; for ( FieldConfigBase field : fieldList ) { if ( field != _NULL ) { field . revertToDefaultValue ( ) ; } } }
28807	public void checkSymbolIsValid ( ) { boolean valid = _BOOL ; Expression expression = getExpression ( ) ; if ( expression != _NULL ) { valid = ! expression . toString ( ) . isEmpty ( ) ; } SelectedSymbol . getInstance ( ) . setValidSymbol ( VALIDITY_KEY , valid ) ; }
28818	private void addInitialPeer ( ) { try { addPeer ( _NULL , new InetSocketAddress ( InetAddress . getByName ( CONNECTABLE_ADDRESS ) , DEFAULT_PORT ) , Peer . OUTGOING ) ; } catch ( UnknownHostException e ) { e . printStackTrace ( ) ; } }
28847	protected void drawGridBackground ( Canvas c ) { if ( mDrawGridBackground ) { c . drawRect ( mViewPortHandler . getContentRect ( ) , mGridBackgroundPaint ) ; } if ( mDrawBorders ) { c . drawRect ( mViewPortHandler . getContentRect ( ) , mBorderPaint ) ; } }
28894	public static FloatBuffer createFloatBuffer ( int size ) { FloatBuffer buf = ByteBuffer . allocateDirect ( _NUM * size ) . order ( ByteOrder . nativeOrder ( ) ) . asFloatBuffer ( ) ; buf . clear ( ) ; if ( trackDirectMemory ) { trackingHash . put ( buf , ref ) ; } return buf ; }
28937	@ Override public boolean contains ( short item ) { for ( int i = _NUM ; i < fLength ; i ++ ) { if ( fArray [ i ] == item ) { return _BOOL ; } } return _BOOL ; }
28963	private static String convertRelevance ( int relevance ) { StringBuilder sb = new StringBuilder ( ) ; while ( relevance > _NUM ) { sb . insert ( _NUM , REVERSE_CHAR_MAP [ relevance % _NUM ] ) ; relevance = relevance / _NUM ; } return sb . toString ( ) ; }
29009	private static boolean inStringArray ( String value , String [ ] stringArray ) { for ( int i = _NUM ; i < stringArray . length ; i ++ ) { if ( stringArray [ i ] . equals ( value ) ) { return _BOOL ; } } return _BOOL ; }
29017	public boolean next ( ) throws GenericDataSourceException { try { return _rs . next ( ) ; } catch ( SQLException sqle ) { throw new GenericDataSourceException ( _CHAR SQL Exception while executing the following : '' + _sql , sqle ) ; } }
29023	@ Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity_main ) ; if ( savedInstanceState == _NULL ) { Fragment fragment = new MainFragment ( ) ; getFragmentManager ( ) . beginTransaction ( ) . replace ( R . id . fragmentContainer , fragment ) . commit ( ) ; } }
29067	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( attributeComboBox != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof String ) { String oldValue = ( String ) undoRedoObject . getOldValue ( ) ; attributeComboBox . setSelectedItem ( oldValue ) ; } } }
29072	private void deleteConcept ( String id ) { try { getGraph ( ) . getConcept ( id ) . delete ( ) ; } catch ( ConceptException e ) { throw new RuntimeException ( e ) ; } }
29090	public void damageEntity ( float x , float y , float damage ) { for ( TexturedEntity entity : entities ) { if ( entity instanceof LivingEntity && entity . getBounds ( ) . overlaps ( new Rectangle ( x , y , _NUM , _NUM ) ) ) { ( ( LivingEntity ) entity ) . damage ( damage ) ; break ; } } }
29119	public long optLong ( int index , long defaultValue ) { try { return this . getLong ( index ) ; } catch ( Exception e ) { return defaultValue ; } }
29130	@ Override public int read ( ) throws IOException { if ( max >= _NUM && pos >= max ) { return - _NUM ; } int result = in . read ( ) ; pos ++ ; return result ; }
29132	public void show ( ) { if ( mNextView == _NULL ) { throw new RuntimeException ( _CHAR setView must have been called _CHAR ) ; } TN tn = mTN ; tn . mNextView = mNextView ; Message . obtain ( mHandler , MSG_ENQUEUE_TOAST , this ) . sendToTarget ( ) ; }
29193	public static String keyOfIds ( Class < ? > clazz ) { try { return IDS_KEY_CACHE . get ( clazz ) ; } catch ( ExecutionException e ) { throw new KeyException ( e ) ; } }
29241	public void addLanguage ( Integer languageId ) { if ( languageId != _NULL ) { addLanguage ( languageId . toString ( ) ) ; } else { Logger . warn ( this , _CHAR Tried to add languageId Null ! _CHAR ) ; } }
29243	public GenericPrincipal authenticate ( String username , String password ) { GenericPrincipal principal = m_userPrincipal . get ( username ) ; if ( principal != _NULL ) { if ( ! password . equals ( principal . getPassword ( ) ) ) throw new SpaceSecurityException ( _CHAR Wrong password for user name : '' + username ) ; } else throw new SpaceSecurityException ( _CHAR Unknown user name : _CHAR + username ) ; return principal ; }
29249	public static boolean isValueLinkCard ( String stPassed ) { if ( isEmpty ( stPassed ) ) return defaultEmptyOK ; String st = stripCharsInBag ( stPassed , creditCardDelimiters ) ; if ( st . length ( ) == _NUM && ( st . startsWith ( _CHAR _NUM _CHAR ) || st . startsWith ( _CHAR _NUM _CHAR ) ) ) { return _BOOL ; } return _BOOL ; }
29254	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( undoRedoObject != _NULL ) { if ( undoRedoObject . getOldValue ( ) instanceof ReferencedEnvelope ) { ReferencedEnvelope oldValue = ( ReferencedEnvelope ) undoRedoObject . getOldValue ( ) ; populateField ( oldValue ) ; } } }
29293	public static boolean removeFile ( File file ) { if ( fileExists ( file ) ) { return file . delete ( ) ; } else { return _BOOL ; } }
29308	public String assign ( String value , Object ... replacements ) { if ( setter ( ) != _NULL ) { return assignIfPossible ( value , replacements ) ; } else { throw new IllegalArgumentException ( _CHAR Attempt was made to generate assignment / setter code for [ '' + name + '' . '' + ( property != _NULL ? property : type ) + _CHAR ] which has no setter / assignment method _CHAR ) ; } }
29319	private void notifyAdded ( List < AirMapTraffic > added ) { if ( added == _NULL || added . isEmpty ( ) ) { return ; } for ( AirMapTrafficListener listener : listeners ) { listener . onAddTraffic ( added ) ; } }
29412	public boolean isAssignable ( ) { for ( MatchingPart part : _parts ) { if ( ! part . isAssignable ( ) ) { return _BOOL ; } } return _BOOL ; }
29424	public static boolean isInteger ( String s ) { if ( isEmpty ( s ) ) return defaultEmptyOK ; for ( int i = _NUM ; i < s . length ( ) ; i ++ ) { char c = s . charAt ( i ) ; if ( ! isDigit ( c ) ) return _BOOL ; } return _BOOL ; }
29427	private BSPTree < Sphere1D > childAfter ( BSPTree < Sphere1D > node ) { if ( isDirect ( node ) ) { return node . getPlus ( ) ; } else { return node . getMinus ( ) ; } }
29451	private void appendRestrictedContentType ( ContentType contentType ) { if ( restrictedContentTypesMask == _NUM ) { restrictedContentTypesMask = contentType . getFlagValue ( ) ; } else { restrictedContentTypesMask |= contentType . getFlagValue ( ) ; } }
29489	public static PolygonSymbolizer createDefaultPolygonSymbolizer ( ) { Stroke stroke = styleFactory . createStroke ( ff . literal ( DEFAULT_LINE_COLOUR ) , ff . literal ( _NUM ) ) ; Fill fill = styleFactory . getDefaultFill ( ) ; PolygonSymbolizer polygonSymbolizer = styleFactory . createPolygonSymbolizer ( ) ; polygonSymbolizer . setStroke ( stroke ) ; polygonSymbolizer . setFill ( fill ) ; return polygonSymbolizer ; }
29530	public static boolean isMap ( NewBindingKey key ) { TypeName typeName = key . getTypeName ( ) ; if ( ! ( typeName instanceof ParameterizedTypeName ) ) { return _BOOL ; } ParameterizedTypeName parameterizedTypeName = ( ParameterizedTypeName ) typeName ; return parameterizedTypeName . rawType . equals ( ClassName . get ( Map . class ) ) ; }
29637	private float computeOverscrollPercent ( ) { if ( mOverScrollOffset >= _NUM ) { return mOverScrollOffset / mMaxOverScroll ; } else { return mOverScrollOffset / mMaxUnderScroll ; } }
29669	private BSPTree < Sphere1D > childBefore ( BSPTree < Sphere1D > node ) { if ( isDirect ( node ) ) { return node . getMinus ( ) ; } else { return node . getPlus ( ) ; } }
29723	@ Override public boolean equals ( Object other ) { boolean result = _BOOL ; if ( other instanceof DiphoneUnit ) { DiphoneUnit that = ( DiphoneUnit ) other ; result = ( this . left . equals ( that . left ) && this . right . equals ( that . right ) ) ; } return result ; }
29728	private void toggleMenuDrawer ( ) { if ( isMenuDrawerOpen ( ) ) { closeMenuDrawer ( ) ; } else { openMenuDrawer ( ) ; } }
29743	private void checkParameters ( double lower , double upper , double confidence ) { if ( lower >= upper ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . LOWER_BOUND_NOT_BELOW_UPPER_BOUND , lower , upper ) ; } if ( confidence <= _NUM || confidence >= _NUM ) { throw new MathIllegalArgumentException ( LocalizedCoreFormats . OUT_OF_BOUNDS_CONFIDENCE_LEVEL , confidence , _NUM , _NUM ) ; } }
29762	public String decrypt ( String input ) { if ( input == _NULL || input . length ( ) == _NUM ) { return input ; } byte [ ] inputBytes = input . getBytes ( UTF_8 ) ; byte [ ] outputBytes = decrypt ( inputBytes ) ; return new String ( outputBytes , UTF_8 ) ; }
29768	public boolean contains ( int level ) { for ( Expand expand : warehouseExpands ) { if ( expand . getLevel ( ) == level ) { return _BOOL ; } } return _BOOL ; }
29781	private void handleUpdateTimeMessage ( ) { invalidate ( ) ; if ( shouldTimerBeRunning ( ) ) { long timeMs = System . currentTimeMillis ( ) ; long delayMs = INTERACTIVE_UPDATE_RATE_MS - ( timeMs % INTERACTIVE_UPDATE_RATE_MS ) ; mUpdateTimeHandler . sendEmptyMessageDelayed ( MSG_UPDATE_TIME , delayMs ) ; } }
29791	public boolean haveUnread ( ) { for ( Letter letter : mails . values ( ) ) { if ( letter . isUnread ( ) ) { return _BOOL ; } } return _BOOL ; }
29871	public void parse ( ) { if ( singleShot ) { metricImpl = metric . constructMetric ( confidenceLevel , _NUM . _NUM ) ; } else { metricImpl = metric . constructMetric ( confidenceLevel ) ; } }
29901	public void registerShield ( int worldId , SiegeShield shield ) { List < SiegeShield > mapShields = registeredShields . get ( worldId ) ; if ( mapShields == _NULL ) { mapShields = new ArrayList < SiegeShield > ( ) ; registeredShields . put ( worldId , mapShields ) ; } mapShields . add ( shield ) ; }
29925	public void removeEnvVar ( int rowIndex ) { EnvVar envVar = dataList . get ( rowIndex ) ; if ( this . envMgr != _NULL ) { this . envMgr . removeEnvVar ( envVar ) ; } dataList . remove ( rowIndex ) ; this . fireTableDataChanged ( ) ; }
29935	@ Override protected void createOrUpgradeTable ( SQLiteDatabase db , boolean force ) { mDb = db ; for ( TableModel tableModel : getAllTableModels ( ) ) { mTableModel = tableModel ; mTableModelDB = getTableModelFromDB ( tableModel . getTableName ( ) ) ; upgradeTable ( ) ; } }
29944	private static String createFullTableName ( String table , String partition ) { if ( partition == _NULL ) { return table ; } else { return table + PARTITION_DELIMITER + partition ; } }
29960	private void addFolder ( boolean descend , String name ) throws FileNotFoundException { Path pathPath = Paths . get ( path ) ; FileTreeNode node = new FileTreeNode ( pathPath , name ) ; this . add ( node ) ; if ( descend ) { node . populateDirectories ( _BOOL ) ; } }
29998	private void write ( char c ) throws SAXException { try { output . write ( c ) ; } catch ( IOException e ) { throw new SAXException ( e ) ; } }
30033	public static int parseInt ( String text ) throws DataParseException { try { return ColorLib . hex ( text ) ; } catch ( Exception e ) { throw new DataParseException ( e ) ; } }
30046	public void validate ( ) { if ( isEmpty ( ) ) { setError ( mAlertMessage ) ; } else { if ( getError ( ) != _NULL ) setError ( _NULL ) ; } }
30060	private static InvocationConstraint [ ] reduce ( InvocationConstraint [ ] constraints ) { verify ( constraints , _NUM ) ; int n = reduce0 ( constraints ) ; if ( n == _NUM ) { throw new IllegalArgumentException ( _CHAR reduced to less than _NUM elements _CHAR ) ; } return ( InvocationConstraint [ ] ) Constraint . trim ( constraints , n ) ; }
30063	public void addCurrency ( String name , int amount ) throws InvalidCurrencyException { try { currencies . put ( Currency . valueOf ( name ) , amount ) ; } catch ( Exception e ) { throw new InvalidCurrencyException ( ) ; } }
30079	private Boolean isOptional ( InputDescriptionType input ) { int minOccurs = input . getMinOccurs ( ) . intValue ( ) ; int maxOccurs = input . getMaxOccurs ( ) . intValue ( ) ; if ( ( minOccurs == _NUM ) && ( maxOccurs == _NUM ) ) { return _BOOL ; } return _BOOL ; }
30086	public static boolean is3G ( Context context ) { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetInfo = connectivityManager . getActiveNetworkInfo ( ) ; if ( activeNetInfo != _NULL && activeNetInfo . getType ( ) == ConnectivityManager . TYPE_MOBILE ) { return _BOOL ; } return _BOOL ; }
30113	private void unloadDataStore ( ) { if ( dataSourceInfo != _NULL ) { dataSourceInfo . unloadDataStore ( ) ; } if ( exampleDataSourceInfo != _NULL ) { exampleDataSourceInfo . unloadDataStore ( ) ; } }
30157	public void save ( @ NotNull ProgressIndicator progress ) { if ( isSourcesModified ( ) ) { RepositorySourceProvider userSourceProvider = getUserSourceProvider ( ) ; assert userSourceProvider != _NULL ; userSourceProvider . save ( new RepoProgressIndicatorAdapter ( progress ) ) ; reset ( ) ; } }
30161	public boolean canAccessProgram ( Program program ) { for ( UserAuthorityGroup group : userAuthorityGroups ) { if ( group . getPrograms ( ) . contains ( program ) ) { return _BOOL ; } } return _BOOL ; }
30171	private void fireProcessSupervisionUpdate ( final SupervisionEvent supervisionEvent ) { Set < SupervisionListener > listeners = processSupervisionListeners . get ( supervisionEvent . getEntityId ( ) ) ; if ( listeners != _NULL ) { for ( SupervisionListener listener : listeners ) { listener . onSupervisionUpdate ( supervisionEvent ) ; } } }
30172	public static JsonRootNode jsonFromString ( String input ) { try { return new JdomParser ( ) . parse ( input ) ; } catch ( InvalidSyntaxException e ) { return _NULL ; } }
30179	public static Optional < String > createInputDialog ( final Window owner , final String title , final String label ) { final TextInputDialog dialog = new TextInputDialog ( ) ; dialog . setTitle ( title ) ; dialog . setHeaderText ( _NULL ) ; dialog . setContentText ( label ) ; dialog . initOwner ( owner ) ; return dialog . showAndWait ( ) ; }
30230	public boolean isOption ( ) { if ( option == _NULL ) { return _BOOL ; } else { return option ; } }
30248	private static void resolveNewExpression ( NewExpression objSubjectExpression , HashSet < String > objTypesSet ) { ClassReference objClassRef = objSubjectExpression . getClassReference ( ) ; if ( _NULL == objClassRef || _NULL == objClassRef . getFQN ( ) ) { objTypesSet . add ( Types . strResolvingAbortedOnPsiLevel ) ; return ; } objTypesSet . add ( objClassRef . getFQN ( ) ) ; }
30278	private void requestAudioPermissions ( ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( getActivity ( ) , AUDIO_PERMS ) ) { showPermissionRationale ( ) ; } else { ActivityCompat . requestPermissions ( this . getActivity ( ) , new String [ ] { AUDIO_PERMS } , REQUEST_AUDIO_PERMS ) ; } }
30309	public void shutdown ( ) { try { shutdown ( - _NUM , TimeUnit . MILLISECONDS ) ; } catch ( final TimeoutException e ) { exceptionHandler . handleOnShutdownException ( e ) ; } }
30311	public static boolean is3G ( Context context ) { ConnectivityManager connectivityManager = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo activeNetInfo = connectivityManager . getActiveNetworkInfo ( ) ; if ( activeNetInfo != _NULL && activeNetInfo . getType ( ) == ConnectivityManager . TYPE_MOBILE ) { return _BOOL ; } return _BOOL ; }
30313	public int writeAnnotationSet ( AnnotationSet annotationSet ) { int off = data . position ( ) ; writeInt ( annotationSet . annotationOffsets . length ) ; for ( int annotationOffset : annotationSet . annotationOffsets ) { writeInt ( annotationOffset ) ; } return off ; }
30333	public List < ProcessFunctionParameterValue > extractParameters ( ) { if ( builtInSelected ) { return builtIn . extractParameters ( builtInProcessFunction , selectedProcessFunctionData ) ; } else { return custom . extractParameters ( selectedCustomFunction ) ; } }
30389	public static float convertDpToPixel ( float dp ) { if ( mMetrics == _NULL ) { Log . e ( _CHAR MPChartLib - Utils _CHAR , _CHAR Utils NOT INITIALIZED . You need to call Utils . init ( ... ) at least once before _CHAR + _CHAR calling Utils . convertDpToPixel ( ... ) . Otherwise conversion does not _CHAR + _CHAR take place . '' ) ; return dp ; } DisplayMetrics metrics = mMetrics ; return dp * ( metrics . densityDpi / _NUM ) ; }
30461	public static SearchShareesFragment newInstance ( OCFile fileToShare , Account account ) { SearchShareesFragment fragment = new SearchShareesFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_FILE , fileToShare ) ; args . putParcelable ( ARG_ACCOUNT , account ) ; fragment . setArguments ( args ) ; return fragment ; }
30501	private void sendJson ( Json json ) { try { session . getRemote ( ) . sendString ( json . toString ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
30513	public void closeDriver ( ) { if ( camera != _NULL ) { camera . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
30574	private void saveAllHTMLToFolder ( File destinationFolder ) { if ( ! destinationFolder . exists ( ) ) { destinationFolder . mkdirs ( ) ; } String filename = INDEX_HTML ; Color backgroundColour = PrefManager . getInstance ( ) . getPrefData ( ) . getBackgroundColour ( ) ; ExportHTML . save ( destinationFolder , filename , sldDataList , backgroundColour ) ; }
30602	public static GenericEntity createGenericEntity ( GenericEntity value ) { if ( value == _NULL ) { throw new IllegalArgumentException ( _CHAR Can not create a GenericEntity with a _NULL value parameter _CHAR ) ; } GenericEntity newEntity = new GenericEntity ( ) ; newEntity . init ( value ) ; return newEntity ; }
30632	private void error ( String message , Object ... args ) { if ( input == _NULL ) { errors . add ( Issue . create ( Location . TOP_LEVEL , message , args ) ) ; } else { errors . add ( Issue . create ( input . location ( ) , message , args ) ) ; } }
30651	public void checkDayTimeChange ( ) { DayTime oldDayTime = this . dayTime ; calculateDayTime ( ) ; onHourChange ( ) ; if ( oldDayTime != this . dayTime ) { onDayTimeChange ( ) ; } }
30656	public static void removeAllServices ( ) throws RpcException { try { ServicePublisher . removeAllServices ( ) ; } catch ( RegistryException e ) { throw new RpcException ( _CHAR error while removing all services '' , e ) ; } }
30663	public boolean isNonEscapingElement ( String tagName ) { int i ; if ( _nonEscapingElements == _NULL ) { return _BOOL ; } for ( i = _NUM ; i < _nonEscapingElements . length ; ++ i ) if ( _nonEscapingElements [ i ] . equals ( tagName ) ) return _BOOL ; return _BOOL ; }
30668	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } finally { lockFile . delete ( ) ; } }
30698	public static boolean readBoolean ( ) { String s = readString ( ) ; if ( s . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( s . equalsIgnoreCase ( _CHAR _BOOL _CHAR ) ) return _BOOL ; if ( s . equals ( _CHAR _NUM _CHAR ) ) return _BOOL ; if ( s . equals ( _CHAR _NUM _CHAR ) ) return _BOOL ; throw new InputMismatchException ( ) ; }
30708	@ Override public boolean isEnemyFrom ( Creature creature ) { if ( creature instanceof SiegeNpc && this . getSiegeRace ( ) != ( ( SiegeNpc ) creature ) . getSiegeRace ( ) ) { return _BOOL ; } else { return super . isEnemyFrom ( creature ) ; } }
30729	private void afterSave ( DataSupport baseObj , List < Field > supportedFields , long id ) { throwIfSaveFailed ( id ) ; assignIdValue ( baseObj , getIdField ( supportedFields ) , id ) ; if ( ! ignoreAssociations ) { updateAssociatedTableWithFK ( baseObj ) ; insertIntermediateJoinTableValue ( baseObj , _BOOL ) ; } }
30761	@ Override public Dfp multiply ( final int x ) { if ( x >= _NUM && x < RADIX ) { return multiplyFast ( x ) ; } else { return multiply ( newInstance ( x ) ) ; } }
30816	private ColorMapEntry createColourMapEntry ( ColourMapData data ) { ColorMapEntry entry = new ColorMapEntryImpl ( ) ; entry . setColor ( data . getColourExpression ( ) ) ; entry . setOpacity ( data . getOpacity ( ) ) ; entry . setQuantity ( data . getQuantity ( ) ) ; entry . setLabel ( data . getLabel ( ) ) ; return entry ; }
30834	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( checkBox != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof Boolean ) { Boolean oldValue = ( Boolean ) undoRedoObject . getOldValue ( ) ; checkBox . setSelected ( oldValue . booleanValue ( ) ) ; } } }
30890	private void addCallbackMethod ( String layoutClass , AndroidMethod callbackMethod ) { Set < SootMethodAndClass > methods = this . callbackMethods . get ( layoutClass ) ; if ( methods == _NULL ) { methods = new HashSet < SootMethodAndClass > ( ) ; this . callbackMethods . put ( layoutClass , methods ) ; } methods . add ( new AndroidMethod ( callbackMethod ) ) ; }
31010	public void end ( ) { if ( ! hasStarted ) throw new RuntimeException ( _CHAR timer _CHAR + name + _CHAR has not been started ! _CHAR ) ; hasStarted = _BOOL ; duration += nanoTime ( ) - startTime ; if ( ! G . v ( ) . Timer_isGarbageCollecting ) { G . v ( ) . Timer_outstandingTimers . remove ( this ) ; } }
31066	public boolean isApplicable ( ) { try { return getViewer ( ) . isPCoATab ( ) && getViewer ( ) . getPcoaTab ( ) . getPCoA ( ) . getEigenValues ( ) != _NULL ; } catch ( Exception ex ) { return _BOOL ; } }
31070	public boolean isValidMethod ( SootMethod sm ) { if ( validMethods != _NULL ) { String sig = sm . toString ( ) ; if ( ! validMethods . containsKey ( sig ) ) return _BOOL ; validMethods . put ( sig , Boolean . TRUE ) ; } return _BOOL ; }
31191	private static byte [ ] bitmapToByte ( Bitmap b ) { if ( b == _NULL ) { return _NULL ; } ByteArrayOutputStream o = new ByteArrayOutputStream ( ) ; b . compress ( Bitmap . CompressFormat . PNG , _NUM , o ) ; return o . toByteArray ( ) ; }
31213	@ Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; Mysplash . getInstance ( ) . addActivity ( this ) ; setTheme ( ) ; LanguageUtils . setLanguage ( this ) ; DisplayUtils . setWindowTop ( this ) ; setContentView ( R . layout . activity_photo ) ; }
31216	public static boolean shouldShowRequestPermissionRationale ( Activity activity , String ... permissions ) { for ( String permission : permissions ) { if ( ActivityCompat . shouldShowRequestPermissionRationale ( activity , permission ) ) { return _BOOL ; } } return _BOOL ; }
31218	public static boolean unbookmark ( String id ) { if ( isBookmarked ( id ) ) { Inquiry . get ( ) . deleteFrom ( Constants . DATABASE_NAME , BookmarksDB . class ) . where ( _CHAR _id = ? _CHAR , id ) . run ( ) ; return _BOOL ; } else bookmark ( id ) ; return _BOOL ; }
31254	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
31317	public synchronized void startPreview ( ) { Camera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , camera ) ; } }
31336	@ Override public void close ( ) { try { reader . close ( ) ; } catch ( IOException e ) { Basic . caught ( e ) ; } }
31338	public void run ( ) { try { Thread . sleep ( timeout ) ; thread . interrupt ( ) ; } catch ( InterruptedException e ) { } }
31353	public static void startClock ( ) { if ( clockStarted ) { throw new IllegalStateException ( _CHAR Clock is already started _CHAR ) ; } updater = new GameTimeUpdater ( getGameTime ( ) ) ; ThreadPoolManager . getInstance ( ) . scheduleAtFixedRate ( updater , _NUM , _NUM ) ; clockStarted = _BOOL ; }
31369	public boolean forEach ( TShortProcedure procedure ) { for ( int i = _NUM ; i < _pos ; i ++ ) { if ( ! procedure . execute ( _data [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
31371	public void close ( ) { try { connection . close ( ) ; } catch ( Exception e ) { ; } }
31372	public static Class < ? > loadClass ( String className , boolean fastPath ) throws ClassNotFoundException { if ( _classProvider == _NULL ) { synchronized ( AdditionalClassProviderFactory . class ) { if ( _classProvider == _NULL ) throw new ClassNotFoundException ( _CHAR no class provider present _CHAR ) ; } } return _classProvider . loadClass ( className , fastPath ) ; }
31391	public void init ( ) { try { this . parser = new SimpleXMLParser ( ) ; } catch ( ParserConfigurationException e ) { throw new RuntimeException ( _CHAR Error creating instance of SimpleXMLParser : _CHAR , e ) ; } }
31405	public static final String replaceUnsafeSvgText ( String svg ) { if ( svg == _NULL ) { return _NULL ; } svg = replaceText ( svg ) ; svg = replaceInvalidPatterns ( svg ) ; return svg ; }
31419	public boolean isDead ( ) { if ( nodeState == ZWaveNodeState . DEAD || nodeState == ZWaveNodeState . FAILED ) { return _BOOL ; } else { return _BOOL ; } }
31421	public void delFriend ( int friendOid ) { Iterator < Friend > it = iterator ( ) ; while ( it . hasNext ( ) ) { if ( it . next ( ) . getOid ( ) == friendOid ) { it . remove ( ) ; } } }
31452	public static boolean isBanned ( String ip ) { for ( BannedIP ipBan : banList ) { if ( ipBan . isActive ( ) && NetworkUtils . checkIPMatching ( ipBan . getMask ( ) , ip ) ) { return _BOOL ; } } return _BOOL ; }
31530	void remask ( ) { if ( parsedFormatInfo == _NULL ) { return ; } DataMask dataMask = DataMask . forReference ( parsedFormatInfo . getDataMask ( ) ) ; int dimension = bitMatrix . getHeight ( ) ; dataMask . unmaskBitMatrix ( bitMatrix , dimension ) ; }
31532	@ Override public boolean equals ( Object dataTag ) { if ( dataTag instanceof AbstractTagCacheObject ) { return this . id . equals ( ( ( AbstractTagCacheObject ) dataTag ) . getId ( ) ) ; } else { return _BOOL ; } }
31575	public static SharePasswordDialogFragment newInstance ( OCFile file , boolean createShare ) { SharePasswordDialogFragment frag = new SharePasswordDialogFragment ( ) ; Bundle args = new Bundle ( ) ; args . putParcelable ( ARG_FILE , file ) ; args . putBoolean ( ARG_CREATE_SHARE , createShare ) ; frag . setArguments ( args ) ; return frag ; }
31585	public boolean remove ( int val ) { int index = index ( val ) ; if ( index >= _NUM ) { removeAt ( index ) ; return _BOOL ; } return _BOOL ; }
31650	private void attachReaderToCatalog ( Catalog catalog ) { SAXParserFactory spf = new SAXParserFactoryImpl ( ) ; spf . setNamespaceAware ( _BOOL ) ; spf . setValidating ( _BOOL ) ; SAXCatalogReader saxReader = new SAXCatalogReader ( spf ) ; saxReader . setCatalogParser ( OASISXMLCatalogReader . namespaceName , _CHAR catalog _CHAR , _CHAR org . apache . xml . resolver . readers . OASISXMLCatalogReader _CHAR ) ; catalog . addReader ( _CHAR application / xml _CHAR , saxReader ) ; }
31674	public static Object objectFromByteBuffer ( byte [ ] buffer ) throws Exception { if ( buffer == _NULL ) return _NULL ; ByteArrayInputStream inStream = new ByteArrayInputStream ( buffer ) ; ObjectInputStream in = new ObjectInputStreamExt ( inStream ) ; Object retval = in . readObject ( ) ; in . close ( ) ; return retval ; }
31676	@ Override public void close ( ) throws IOException { try { in . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
31688	public static boolean isEmpty ( CharSequence str ) { if ( str == _NULL || str . toString ( ) == _NULL || str . toString ( ) . trim ( ) . length ( ) == _NUM || str . length ( ) == _NUM || _CHAR _NULL _CHAR . equalsIgnoreCase ( str . toString ( ) ) ) { return _BOOL ; } else { } return _BOOL ; }
31723	@ Override public boolean accept ( File file , String name ) { for ( String suffix : this . suffixes ) { if ( caseSensitivity . checkEndsWith ( name , suffix ) ) { return _BOOL ; } } return _BOOL ; }
31728	public void printEntrypoints ( ) { if ( this . entrypoints == _NULL ) System . out . println ( _CHAR Entry points not initialized _CHAR ) ; else { System . out . println ( _CHAR Classes containing entry points : _CHAR ) ; for ( String className : entrypoints ) System . out . println ( _CHAR \ t _CHAR + className ) ; System . out . println ( _CHAR End of Entrypoints _CHAR ) ; } }
31734	@ Override public void populateExpression ( Object objValue ) { if ( objValue != _NULL ) { if ( objValue instanceof Boolean ) { populateField ( ( Boolean ) objValue ) ; valueUpdated ( ) ; } } }
31738	public void exitFullScreen ( ) { View decorView = mContext . getWindow ( ) . getDecorView ( ) ; showSystemUI ( decorView ) ; for ( View view : views ) { view . setVisibility ( View . VISIBLE ) ; view . invalidate ( ) ; } }
31759	public void inverseTranslateVect ( float [ ] vec ) { if ( vec . length != _NUM ) { throw new IllegalArgumentException ( _CHAR vec must be of size _NUM . _CHAR ) ; } vec [ _NUM ] = vec [ _NUM ] - m03 ; vec [ _NUM ] = vec [ _NUM ] - m13 ; vec [ _NUM ] = vec [ _NUM ] - m23 ; }
31817	private MatchQuery reasonMatchQuery ( MatchQuery query ) { if ( ! reasoner . getRules ( ) . isEmpty ( ) ) { return reasoner . resolveToQuery ( query ) ; } else { return query ; } }
31848	public Resource find ( String type , String id ) { try { return _doc . find ( type , id ) ; } catch ( ResourceNotFoundException e ) { return _NULL ; } }
31876	public void start ( ) { try { new StartHarness ( ) . startHarness ( ) ; } catch ( Exception e ) { throw ( e instanceof IllegalStateException ) ? ( IllegalStateException ) e : new IllegalStateException ( e ) ; } }
31924	public static ContextSet fromEntries ( Iterable < Map . Entry < String , String >> iterable ) { if ( iterable == _NULL ) { throw new NullPointerException ( _CHAR iterable _CHAR ) ; } MutableContextSet set = new MutableContextSet ( ) ; set . addAll ( iterable ) ; return set . immutableCopy ( ) ; }
31940	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
32016	public FitBoundsOptions build ( ) { FitBoundsOptions options = new FitBoundsOptions ( ) ; options . paddingTopLeft = this . paddingTopLeft ; options . paddingBottomRight = this . paddingBottomRight ; options . padding = this . padding ; options . maxZoom = this . maxZoom ; return options ; }
32037	public void removeCycles ( ) { if ( myHorizontalCycle != _NULL ) { removeCycles ( myHorizontalDeps ) ; } if ( myVerticalCycle != _NULL ) { removeCycles ( myVerticalDeps ) ; } }
32065	public void add ( Player player ) { if ( playersById . put ( player . getObjectId ( ) , player ) != _NULL ) { throw new DuplicateAionObjectException ( ) ; } if ( playersByName . put ( player . getName ( ) , player ) != _NULL ) { throw new DuplicateAionObjectException ( ) ; } }
32163	@ Override public void startContentModel ( String elementName , Augmentations augs ) throws XNIException { XMLElementDecl elementDecl = ( XMLElementDecl ) this . fElementDeclTab . get ( elementName ) ; if ( elementDecl != _NULL ) { fElementDecl = elementDecl ; } fDepth = _NUM ; initializeContentModelStack ( ) ; }
32210	@ VisibleForTesting void registerNewRequest ( long currentTimestamp ) { mCurrentRequest = createRequestData ( currentTimestamp , _NULL ) ; getBackoffScheduler ( ) . resetFailedAttempts ( ) ; mTimestampForNextPostAttempt = currentTimestamp ; mTimestampForNewRequest = currentTimestamp + MS_BETWEEN_REQUESTS ; scheduleRepeatingAlarm ( ) ; saveState ( ) ; }
32222	@ Override public void populateField ( String value ) { if ( textField != _NULL ) { textField . setText ( value ) ; UndoManager . getInstance ( ) . addUndoEvent ( new UndoEvent ( this , getFieldId ( ) , oldValueObj , value ) ) ; oldValueObj = value ; valueUpdated ( ) ; } }
32266	public static final int find ( int [ ] a , int key , int begin , int end ) { for ( int i = begin ; i < end ; i ++ ) { if ( a [ i ] == key ) { return i ; } } return - _NUM ; }
32334	public void addSource ( final DOMImplementationSource s ) { if ( s == _NULL ) { throw new NullPointerException ( ) ; } if ( ! sources . contains ( s ) ) { sources . addElement ( s ) ; } }
32337	public void startFirstSampleTimer ( ) { timer . start ( _CHAR firstAudio _CHAR ) ; firstSample = _BOOL ; if ( audioMetrics ) { timer . start ( _CHAR firstPlay _CHAR ) ; firstPlay = _BOOL ; } }
32340	@ Override public void releaseScan ( ) throws SAException { try { if ( iterator != _NULL ) iterator . close ( ) ; } catch ( Exception ex ) { throw new SAException ( ex ) ; } }
32341	@ Override public void redoAction ( UndoInterface undoRedoObject ) { if ( ( spinner != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getNewValue ( ) instanceof Double ) { Double newValue = ( Double ) undoRedoObject . getNewValue ( ) ; internalSetValue ( newValue ) ; } } }
32372	public void addPaging ( Integer pageSize , Integer pageIndex ) { ParamValidationUtil . validateParamNotNull ( pageSize , _CHAR pageSize _CHAR ) ; ParamValidationUtil . validateParamNotNull ( pageIndex , _CHAR pageIndex _CHAR ) ; int offset = pageIndex * pageSize ; this . offset = offset ; this . limit = pageSize ; this . usePaging = _BOOL ; }
32385	void registerAsIdle ( ) { if ( timeToIdlePolicy . isPresent ( ) ) { timeToIdlePolicy . get ( ) . add ( resourceKey ) ; if ( resourceKey . getStatus ( ) != Status . IDLE ) { timeToIdlePolicy . get ( ) . invalidate ( resourceKey ) ; } } }
32395	private void forgetObjects ( ) { for ( VisibleObject object : knownObjects . values ( ) ) { if ( ! checkObjectInRange ( object ) && ! object . getKnownList ( ) . checkReversedObjectInRange ( owner ) ) { del ( object , _BOOL ) ; object . getKnownList ( ) . del ( owner , _BOOL ) ; } } }
32414	static void verify ( Class c ) { if ( c == _NULL ) { throw new NullPointerException ( _CHAR elements can not be _NULL _CHAR ) ; } if ( c . isArray ( ) || c . isPrimitive ( ) || ( Modifier . isFinal ( c . getModifiers ( ) ) && ! Principal . class . isAssignableFrom ( c ) ) ) { throw new IllegalArgumentException ( _CHAR invalid class _CHAR ) ; } }
32461	private void initLoadMoreData ( ) { for ( int i = _NUM ; i < _NUM ; i ++ ) { List < String > url = new ArrayList < > ( ) ; url . add ( _CHAR http : // qq1234 . org / uploads / allimg / 140404 / 3_140404114555_5 . jpg '' ) ; url . add ( '' http : // qq1234 . org / uploads / allimg / 140404 / 3_140404114555_4 . jpg '' ) ; mLists . add ( url ) ; } }
32510	@ Override public final void finalize ( ) { if ( LOG . isDebugEnabled ( ) ) { LOG . debug ( _CHAR finalize ( ) - Removing the references to the fallbackManager and the dataRecoveryThread _CHAR ) ; } dataRecovery . stop ( ) ; dataRecovery = _NULL ; fallbackManager . finalize ( ) ; }
32550	public void clearAll ( ) { if ( items != _NULL ) { items . clear ( ) ; } if ( emptyItems != _NULL ) { emptyItems . clear ( ) ; } }
32571	public static String validateString ( String string ) { if ( string == _NULL ) { return _CHAR _CHAR ; } else { return string ; } }
32656	public Object optionalWait ( ExpectedCondition < WebElement > condition ) { try { return bobcatWait . withTimeout ( Timeouts . SMALL ) . until ( condition ) ; } catch ( TimeoutException ignored ) { return _NULL ; } }
32674	public static SettingsFragment newInstance ( String param1 , String param2 ) { SettingsFragment fragment = new SettingsFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
32676	public boolean exists ( String key , boolean ignoreCase ) { if ( ignoreCase ) key = key . toLowerCase ( ) ; for ( String existKey : this . getKeys ( _BOOL ) ) { if ( ignoreCase ) existKey = existKey . toLowerCase ( ) ; if ( existKey . equals ( key ) ) return _BOOL ; } return _BOOL ; }
32725	public static long toLong ( Object obj ) { try { return Long . parseLong ( obj . toString ( ) ) ; } catch ( Exception e ) { return - _NUM ; } }
32738	private Stream < String > generateDimensionColumnHeaders ( Map . Entry < Dimension , LinkedHashSet < DimensionField >> entry ) { if ( entry . getValue ( ) . isEmpty ( ) ) { return Stream . of ( entry . getKey ( ) . getApiName ( ) ) ; } else { return entry . getValue ( ) . stream ( ) . map ( _NULL ) ; } }
32802	@ Override public void undoAction ( UndoInterface undoRedoObject ) { if ( ( spinner != _NULL ) && ( undoRedoObject != _NULL ) ) { if ( undoRedoObject . getOldValue ( ) instanceof Double ) { Double oldValue = ( Double ) undoRedoObject . getOldValue ( ) ; internalSetValue ( oldValue ) ; } } }
32808	private static ColumnType selectType ( List < ColumnType > typeCandidates ) { if ( typeCandidates . isEmpty ( ) ) { return CATEGORY ; } else { return typeCandidates . get ( _NUM ) ; } }
32892	@ Override public void close ( ) throws IOException { if ( writer == _NULL ) { encoding = defaultEncoding ; writer = new OutputStreamWriter ( out , encoding ) ; writer . write ( xmlPrologWriter . toString ( ) ) ; } writer . close ( ) ; }
32906	public static void initOrBuild ( Project project ) { if ( hadInitFreeline ( project ) ) { build ( project ) ; } else { initFree ( project ) ; } }
32920	private void finish ( ) { mmLastY = _NUM ; mRunning = _BOOL ; removeCallbacks ( this ) ; if ( ! mAbort ) { autoScrollFinished ( ) ; } }
32974	public String toString ( ) { try { return this . toString ( _NUM ) ; } catch ( Exception e ) { return _NULL ; } }
32977	public void callEvent ( final Event event ) throws EventException { if ( event instanceof Cancellable ) { if ( ( ( Cancellable ) event ) . isCancelled ( ) && isIgnoringCancelled ( ) ) { return ; } } executor . execute ( listener , event ) ; }
33021	protected View createChild ( String name ) { if ( model . isChildSupported ( name ) ) { return model . createChild ( this , name ) ; } else { throw new IllegalArgumentException ( _CHAR Invalid child name [ _CHAR + name + _CHAR ] _CHAR ) ; } }
33030	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
33058	public void putByteArray ( final String key , final byte [ ] value ) { try { systemRoot . putByteArray ( fixKey ( key ) , value ) ; } catch ( final Exception e ) { System . err . print ( e ) ; } }
33061	public int hashCode ( ) { int hashCode = _NUM ; if ( context == _NULL ) return hashCode ; for ( int i = _NUM ; i < context . length ; i ++ ) { if ( context [ i ] != _NULL ) hashCode ^= context [ i ] . hashCode ( ) ; } return hashCode ; }
33074	public void deleteAssignableDynamicGroups ( Set assignableDynamicGroupDNs ) throws AMException , SSOException { Iterator iter = assignableDynamicGroupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String assignableDynamicGroupDN = ( String ) iter . next ( ) ; AMAssignableDynamicGroup assignableDynamicGroup = new AMAssignableDynamicGroupImpl ( super . token , assignableDynamicGroupDN ) ; assignableDynamicGroup . delete ( ) ; } }
33085	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
33094	public static String stripHtmlToSingleLine ( String s ) { String o = _NULL ; if ( s != _NULL ) { s = s . replaceAll ( _CHAR < br > _CHAR , _CHAR _CHAR ) ; o = s . replaceAll ( _CHAR \\ < . * ? \\ > _CHAR , _CHAR _CHAR ) ; } return o ; }
33127	private void addFQDNDigestMD5 ( ) throws ConfigureDSException { try { updateConfigEntryWithAttribute ( DN_DIGEST_MD5_SASL_MECHANISM , _CHAR ds - cfg - server - fqdn _CHAR , CoreSchema . getDirectoryStringSyntax ( ) , hostName . getValue ( ) ) ; } catch ( final Exception e ) { throw new ConfigureDSException ( e , ERR_CONFIGDS_CANNOT_UPDATE_DIGEST_MD5_FQDN . get ( e ) ) ; } }
33136	public X509Certificate generateX509Certificate ( PrivateKey key , SecureRandom random ) throws SecurityException , SignatureException , InvalidKeyException { try { return generateX509Certificate ( key , _CHAR BC _CHAR , random ) ; } catch ( NoSuchProviderException e ) { throw new SecurityException ( _CHAR BC provider not installed ! _CHAR ) ; } }
33152	public Enumeration children ( ) { if ( ! this . isExpanded ( ) ) { return DefaultMutableTreeNode . EMPTY_ENUMERATION ; } else { return super . children ( ) ; } }
33161	@ Override public Lookup createGlobalContext ( ) { if ( proxyLookup == _NULL ) { logger . config ( _CHAR Creating a proxy for Utilities . actionsGlobalContext ( ) _CHAR ) ; projectLookup = new AbstractLookup ( content ) ; proxyLookup = new ProxyLookup ( globalContextLookup , projectLookup ) ; } return proxyLookup ; }
33165	public static PlaceholderFragment newInstance ( View . OnClickListener listener , int sectionNumber ) { PlaceholderFragment fragment = new PlaceholderFragment ( ) ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; fragment . listener = listener ; return fragment ; }
33177	public final void toString ( StringBuilder buffer ) { if ( this . keywordRuleMap != _NULL ) { for ( KeywordBindRule rule : this . keywordRuleMap . values ( ) ) { rule . toString ( buffer ) ; buffer . append ( _CHAR ; _CHAR ) ; } } }
33180	public void deleteGroupContainers ( Set groupContainerDNs ) throws AMException , SSOException { Iterator iter = groupContainerDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupContainerDN = ( String ) iter . next ( ) ; AMGroupContainer groupContainer = new AMGroupContainerImpl ( token , groupContainerDN ) ; groupContainer . delete ( ) ; } }
33185	private void prefixMask ( int prefix ) { int i ; for ( i = _NUM ; prefix > _NUM ; i ++ ) { this . prefixMask [ i ] = ( byte ) _NUM ; prefix -= _NUM ; } this . prefixMask [ i ] = ( byte ) ( _NUM << _NUM - prefix ) ; }
33200	public static void resetJAASConfig ( ) { try { Configuration . setConfiguration ( defaultConfig ) ; } catch ( java . lang . SecurityException e ) { System . err . println ( _CHAR AMLoginContext : resetJAASConfig to default : _CHAR + e . getMessage ( ) ) ; } }
33221	private synchronized void createThreads ( ) { for ( int i = _NUM ; i < poolSize ; i ++ ) { WorkerThread t = new WorkerThread ( poolName + i , this ) ; t . setDaemon ( _BOOL ) ; t . start ( ) ; threads [ i ] = t ; } }
33223	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
33260	private Object [ ] objectClasses ( Schema schema , String ... names ) { ObjectClass [ ] attrs = new ObjectClass [ names . length ] ; int i = _NUM ; for ( String name : names ) { attrs [ i ++ ] = schema . getObjectClass ( name ) ; } return attrs ; }
33264	public int nextInt ( ) throws DataFormatException { try { return bytes . readInt ( ) ; } catch ( IndexOutOfBoundsException e ) { throw new DataFormatException ( e . getMessage ( ) ) ; } }
33340	public boolean isVisible ( TreePath path ) { if ( path != _NULL ) { TreePath parentPath = path . getParentPath ( ) ; if ( parentPath != _NULL ) return isExpanded ( parentPath ) ; return _BOOL ; } return _BOOL ; }
33344	private void resetStatusValues ( ) { dupToken = _BOOL ; oldToken = _BOOL ; unseqToken = _BOOL ; gapToken = _BOOL ; minorStatus = _NUM ; minorString = _NULL ; }
33350	private List < ? > checkValueAndIndex ( CompositeData value ) { checkValueType ( value ) ; List < ? > index = internalCalculateIndex ( value ) ; if ( dataMap . containsKey ( index ) ) { throw new KeyAlreadyExistsException ( _CHAR Argument value _CHAR_CHAR_CHAR s tabularType , already refers to a value in this table . '' ) ; } return index ; }
33373	public static Name from ( String ... pieces ) { List < NamePiece > namePieces = new ArrayList < > ( ) ; for ( String piece : pieces ) { validateLowerUnderscore ( piece ) ; namePieces . add ( new NamePiece ( piece , CaseFormat . LOWER_UNDERSCORE ) ) ; } return new Name ( namePieces ) ; }
33429	private boolean findNodeFromTail ( Node node ) { Node t = tail ; for ( ; ; ) { if ( t == node ) return _BOOL ; if ( t == _NULL ) return _BOOL ; t = t . prev ; } }
33457	public boolean hasAttribute ( AttributeType attributeType ) { for ( TemplateLine l : templateLines ) { if ( l . getAttributeType ( ) . equals ( attributeType ) ) { return _BOOL ; } } return _BOOL ; }
33473	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeRef ( Ref x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialRef ( x ) ) ; } }
33477	public boolean canDelete ( DN dn ) { try { return ! dn . equals ( DN . rootDN ( ) ) && ! nonDeletable . contains ( dn ) && isDescendantOfAny ( dn , parentReadOnly ) ; } catch ( Throwable t ) { throw new RuntimeException ( _CHAR Error decoding DNs : _CHAR + t , t ) ; } }
33499	private static boolean isManageDsaITOperation ( Operation operation ) { for ( Control control : operation . getRequestControls ( ) ) { if ( ServerConstants . OID_MANAGE_DSAIT_CONTROL . equals ( control . getOID ( ) ) ) { return _BOOL ; } } return _BOOL ; }
33502	public boolean containsAnnotation ( PdfAnnotation annotation ) { for ( PdfAnnotation a : getAnnotations ( ) ) { if ( a . getPdfObject ( ) . equals ( annotation . getPdfObject ( ) ) ) { return _BOOL ; } } return _BOOL ; }
33504	public int next ( ) { if ( _currentNode != NULL ) { int node = _currentNode ; _currentNode = _nextsib ( node ) ; return returnNode ( makeNodeHandle ( node ) ) ; } return END ; }
33518	void checkLabel ( final Label label , final boolean checkVisited , final String msg ) { if ( label == _NULL ) { throw new IllegalArgumentException ( _CHAR Invalid _CHAR + msg + _CHAR ( must not be _NULL ) _CHAR ) ; } if ( checkVisited && labels . get ( label ) == _NULL ) { throw new IllegalArgumentException ( _CHAR Invalid _CHAR + msg + _CHAR ( must be visited first ) _CHAR ) ; } }
33526	public final void cancel ( ) { synchronized ( this ) { if ( valid ) { valid = _BOOL ; ( ( AbstractSelector ) selector ( ) ) . cancel ( this ) ; } } }
33535	private synchronized void cleanupState ( ) { sourceIds = _NULL ; targets = _NULL ; if ( executor != _NULL ) { executor . shutdown ( ) ; executor = _NULL ; } }
33567	protected Map < Object , Object > createIssueMap ( Issue issue ) { Map < Object , Object > params = new HashMap < Object , Object > ( ) ; if ( issue != _NULL ) { params . put ( FIELD_BODY , issue . getBody ( ) ) ; params . put ( FIELD_TITLE , issue . getTitle ( ) ) ; } return params ; }
33616	void writeToUsageOutputStream ( CharSequence message ) { try { usageOutputStream . write ( getBytes ( message . toString ( ) ) ) ; } catch ( final Exception e ) { logger . traceException ( e ) ; } }
33639	public void deleteField ( FieldKey genericKey ) { if ( genericKey == FieldKey . TRACK ) { track = _NUM ; } else { super . deleteField ( genericKey ) ; } }
33695	@ SuppressWarnings ( { _CHAR unchecked _CHAR , _CHAR rawtypes _CHAR } ) protected void addRequestContextInCustomRequestScope ( R requestContext ) { Key key = Key . get ( new TypeLiteral < IRequestContext < ? >> ( ) { } ) ; getSpincastRequestScope ( ) . seed ( key , requestContext ) ; key = Key . get ( getRequestContextType ( ) ) ; getSpincastRequestScope ( ) . seed ( key , requestContext ) ; }
33715	public static void checkGlError ( String op ) { int error = GLES20 . glGetError ( ) ; if ( error != GLES20 . GL_NO_ERROR ) { String msg = op + _CHAR : glError _NUM _CHAR + Integer . toHexString ( error ) ; Log . e ( TAG , msg ) ; throw new RuntimeException ( msg ) ; } }
33719	protected void init ( ) throws IOException { if ( appDataIS != _NULL ) { return ; } initTransportLayer ( ) ; appDataIS = new SSLSocketInputStream ( this ) ; appDataOS = new SSLSocketOutputStream ( this ) ; }
33722	public void subscribe ( final Observable < M > observable , final boolean pullToRefresh ) { if ( isViewAttached ( ) ) { getView ( ) . showLoading ( pullToRefresh ) ; } unsubscribe ( ) ; subscriber = new RxSubscriber ( pullToRefresh ) ; observable . subscribeOn ( Schedulers . io ( ) ) . observeOn ( AndroidSchedulers . mainThread ( ) ) . subscribe ( subscriber ) ; }
33742	private long stringToIp ( String ip ) { StringTokenizer st = new StringTokenizer ( ip , _CHAR . _CHAR ) ; long ipValue = _NUM ; while ( st . hasMoreElements ( ) ) { ipValue = ipValue * _NUM + Short . parseShort ( st . nextToken ( ) ) ; } return ipValue ; }
33755	private boolean matchesFilter ( Entry e ) { try { return filter . matchesEntry ( e ) ; } catch ( DirectoryException ex ) { return _BOOL ; } }
33768	private void clearCallbacks ( Callback [ ] callbacks ) { for ( int i = _NUM ; i < callbacks . length ; i ++ ) { if ( callbacks [ i ] instanceof NameCallback ) { NameCallback nc = ( NameCallback ) callbacks [ i ] ; nc . setName ( _CHAR _CHAR ) ; } } }
33791	public boolean before ( String userDefinedValue ) throws IllegalArgumentException { try { return value . before ( getDate ( userDefinedValue ) ) ; } catch ( DataTypeValidationException e ) { throw new IllegalArgumentException ( e . getMessage ( ) ) ; } }
33796	public static Date parseDate ( String d ) { try { return new SimpleDateFormat ( DATE_FORMAT ) . parse ( d ) ; } catch ( Exception e ) { } return _NULL ; }
33807	protected byte [ ] serialize ( ) throws IOException { ByteArrayOutputStream bos = new ByteArrayOutputStream ( ) ; ObjectOutputStream oos = new ObjectOutputStream ( bos ) ; writeExternal ( oos ) ; oos . flush ( ) ; oos . close ( ) ; return bos . toByteArray ( ) ; }
33813	public String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _CHAR [ \ n _CHAR ) ; sb . append ( super . toString ( ) ) ; sb . append ( _CHAR Maximum Path Length : _CHAR + maxPathLength + _CHAR \ n _CHAR ) ; sb . append ( _CHAR ] \ n _CHAR ) ; return sb . toString ( ) ; }
33835	protected int _dataOrQName ( int identity ) { if ( identity < m_size ) return m_dataOrQName . elementAt ( identity ) ; while ( _BOOL ) { boolean isMore = nextNode ( ) ; if ( ! isMore ) return NULL ; else if ( identity < m_size ) return m_dataOrQName . elementAt ( identity ) ; } }
33841	public boolean isTokenRestricted ( ) throws SSOException { try { return session . isRestricted ( ) ; } catch ( SessionException se ) { throw new SSOException ( se ) ; } }
33855	public static boolean isErrorLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isErrorLoggable ( level ) ; } }
33864	@ Override public void write ( char [ ] cbuf , int off , int len ) throws IOException { if ( xmlPrologWriter != _NULL ) { detectEncoding ( cbuf , off , len ) ; } else { writer . write ( cbuf , off , len ) ; } }
33865	@ Override public Principal authenticate ( X509Certificate [ ] certs ) { String username = _NULL ; if ( certs != _NULL && certs . length > _NUM ) { username = certs [ _NUM ] . getSubjectDN ( ) . getName ( ) ; } Principal authenticatedUser = super . authenticate ( certs ) ; return filterLockedAccounts ( username , authenticatedUser ) ; }
33875	protected final void closeSession ( ) { if ( sessionTracker != _NULL ) { Session currentSession = sessionTracker . getOpenSession ( ) ; if ( currentSession != _NULL ) { currentSession . close ( ) ; } } }
33898	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { m_predicateIndex =- _NUM ; AxesWalker walker = m_firstWalker ; while ( _NULL != walker ) { walker . fixupVariables ( vars , globalsSize ) ; walker = walker . getNextWalker ( ) ; } }
33924	public boolean add ( ByteString attributeValue ) { AttributeValue value = createAttributeValue ( attributeDescription , attributeValue ) ; boolean isNewValue = values . add ( value ) ; if ( ! isNewValue ) { values . addOrReplace ( value ) ; } return isNewValue ; }
33932	private Node < E > nextNode ( Node < E > p ) { for ( ; ; ) { Node < E > s = p . next ; if ( s == p ) return head . next ; if ( s == _NULL || s . item != _NULL ) return s ; p = s ; } }
33935	public void stopBundle ( Bundle bundle ) throws UpdateException { try { bundle . stop ( ) ; } catch ( BundleException e ) { throw new UpdateException ( _CHAR Can not stop bundle _CHAR + bundle . toString ( ) , e ) ; } }
34016	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeArray ( Array x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialArray ( x , map ) ) ; } }
34034	public boolean isAbsolute ( LocPathIterator path ) { int analysis = path . getAnalysisBits ( ) ; boolean isAbs = ( WalkerFactory . isSet ( analysis , WalkerFactory . BIT_ROOT ) || WalkerFactory . isSet ( analysis , WalkerFactory . BIT_ANY_DESCENDANT_FROM_ROOT ) ) ; if ( isAbs ) { isAbs = m_absPathChecker . checkAbsolute ( path ) ; } return isAbs ; }
34055	private static byte [ ] min ( byte [ ] ip1 , byte [ ] ip2 ) { for ( int i = _NUM ; i < ip1 . length ; i ++ ) { if ( ( ip1 [ i ] & _NUM ) < ( ip2 [ i ] & _NUM ) ) { return ip1 ; } } return ip2 ; }
34070	public void update ( byte [ ] data ) { if ( sha != _NULL ) { sha . update ( data ) ; } if ( md5 != _NULL ) { md5 . update ( data ) ; } }
34115	public int indexOf ( int elem ) { if ( _NULL == m_map ) return - _NUM ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { int node = m_map [ i ] ; if ( node == elem ) return i ; } return - _NUM ; }
34160	private static int spinsFor ( Node pred , boolean haveData ) { if ( MP && pred != _NULL ) { if ( pred . isData != haveData ) return FRONT_SPINS + CHAINED_SPINS ; if ( pred . isMatched ( ) ) return FRONT_SPINS ; if ( pred . waiter == _NULL ) return CHAINED_SPINS ; } return _NUM ; }
34224	public void log ( Level level , String msg , Object params [ ] ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; lr . setParameters ( params ) ; doLog ( lr ) ; }
34236	public void makeImmutable ( ) { if ( isMutable ) { if ( ( statusCode != _NULL ) && ( statusCode . isMutable ( ) ) ) { statusCode . makeImmutable ( ) ; } isMutable = _BOOL ; } }
34249	public void writeObject ( Object o ) { if ( internal ) { super . writeObject ( o ) ; } else { writeStatement ( new Statement ( this , _CHAR writeObject _CHAR , new Object [ ] { o } ) ) ; } }
34257	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized E peek ( ) { try { return ( E ) elementData [ elementCount - _NUM ] ; } catch ( IndexOutOfBoundsException e ) { throw new EmptyStackException ( ) ; } }
34288	public void clear ( ) { LinkedListNode node = getLast ( ) ; while ( node != _NULL ) { node . remove ( ) ; node = getLast ( ) ; } head . next = head . previous = head ; }
34321	protected boolean isBlockTag ( AttributeSet attr ) { Object o = attr . getAttribute ( StyleConstants . NameAttribute ) ; if ( o instanceof HTML . Tag ) { HTML . Tag name = ( HTML . Tag ) o ; return name . isBlock ( ) ; } return _BOOL ; }
34335	public void endCompose ( StylesheetRoot sroot ) throws TransformerException { super . endCompose ( sroot ) ; if ( m_parentNode instanceof Stylesheet ) { StylesheetRoot . ComposeState cstate = sroot . getComposeState ( ) ; m_frameSize = cstate . getFrameSize ( ) ; cstate . resetStackFrameSize ( ) ; } }
34340	@ Override public IndexCreatedEvent read ( UUID uuid ) { if ( uuid == _NULL ) { return _NULL ; } BoundStatement bs = new BoundStatement ( readStmt ) ; bindUUIDWhere ( bs , uuid ) ; return marshalRow ( getSession ( ) . execute ( bs ) . one ( ) ) ; }
34354	static synchronized void cancel ( final TimerTask task ) { task . cancel ( ) ; _usageCount -- ; if ( _usageCount == _NUM ) { _timer . cancel ( ) ; _timer = _NULL ; } }
34361	private static void checkGettingStarted ( ) throws Exception { PreferencesEntry < String > started = Settings . forPackage ( Main . class ) . entry ( _CHAR getting . started _CHAR ) . defaultValue ( _CHAR _NUM _CHAR ) ; if ( _CHAR _NUM _CHAR . equals ( started . getValue ( ) ) ) { started . setValue ( _CHAR _NUM _CHAR ) ; started . flush ( ) ; SwingUtilities . invokeLater ( _NULL ) ; } }
34471	@ BeforeClass public void startServer ( ) throws Exception { TestCaseUtils . startServer ( ) ; TestCaseUtils . initializeTestBackend ( _BOOL ) ; user1 = DN . valueOf ( _CHAR cn = user1 , dc = example , dc = com _CHAR ) ; user2 = DN . valueOf ( _CHAR cn = user2 , dc = example , dc = com _CHAR ) ; user3 = DN . valueOf ( _CHAR cn = user3 , dc = example , dc = com _CHAR ) ; user4 = DN . valueOf ( _CHAR cn = user4 , dc = example , dc = com _CHAR ) ; }
34491	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
34514	protected void createHandler ( ) { if ( handler != _NULL ) return ; try { handler = new Handler ( Looper . getMainLooper ( ) ) ; } catch ( RuntimeException e ) { } }
34522	private void populateMap ( Map < String , StateInfo > map , StateInfo stateInfo ) { String serverId = stateInfo . id ; map . put ( serverId , stateInfo ) ; if ( ! stateInfo . isUp ) { down . add ( serverId ) ; } serverSelectionList [ getNextSelected ( ) ] = stateInfo ; }
34524	public static void error ( Level level , String msgId , String data [ ] , Object session ) { try { logger . error ( level , msgId , data , session ) ; } catch ( LogException le ) { SAMLUtils . debug . error ( _CHAR LogUtils . error : Error writing to _CHAR + _CHAR log : _CHAR , le ) ; } }
34526	public static < T > List < T > asList ( T ... values ) { if ( values == _NULL ) { return new ArrayList < T > ( _NUM ) ; } else { return new ArrayList < T > ( Arrays . asList ( values ) ) ; } }
34574	public synchronized void sendReset ( ) { if ( state == State . IDLE ) { throw new IllegalStateException ( sm . getString ( _CHAR streamStateMachine . debug . change _CHAR , stream . getConnectionId ( ) , stream . getIdentifier ( ) , state ) ) ; } if ( state . canReset ( ) ) { stateChange ( state , State . CLOSED_RST_TX ) ; } }
34600	public static boolean isAccessLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isAccessLoggable ( level ) ; } }
34601	public String toString ( ) { if ( keyCode == KeyEvent . VK_UNDEFINED ) { return getModifiersText ( modifiers ) + _CHAR typed _CHAR + keyChar ; } else { return getModifiersText ( modifiers ) + ( onKeyRelease ? _CHAR released _CHAR : _CHAR pressed _CHAR ) + _CHAR _CHAR + getVKText ( keyCode ) ; } }
34614	private ResourceResponse decrypt ( final ResourceResponse value ) throws InternalServerErrorException { try { return newResourceResponse ( value . getId ( ) , value . getRevision ( ) , _NULL != value . getContent ( ) ? cryptoService . decrypt ( value . getContent ( ) ) : _NULL ) ; } catch ( JsonException je ) { throw new InternalServerErrorException ( je ) ; } }
34629	public void handleMessage ( @ NotNull IUser user , @ NotNull TLUpdateShortMessage message ) { try { handleMessageInternal ( user , message . getMessage ( ) ) ; } catch ( RpcException e ) { BotLogger . severe ( LOGTAG , e ) ; } }
34660	public void deletePeopleContainers ( Set peopleContainerDNs ) throws AMException , SSOException { Iterator iter = peopleContainerDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String peopleContainerDN = ( String ) iter . next ( ) ; AMPeopleContainer peopleContainer = new AMPeopleContainerImpl ( super . token , peopleContainerDN ) ; peopleContainer . delete ( ) ; } }
34697	void reset ( final DN parentDN , final int numberOfEntries ) { this . parentDN = parentDN ; this . numberOfEntries = numberOfEntries ; entriesCount = _NUM ; currentEntryIsInitialized = _BOOL ; subTemplateIndex = _NUM ; nextEntry = _NULL ; }
34719	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
34739	public static boolean directoryExistsAndIsNotEmpty ( String path ) { final File f = new File ( path ) ; if ( f . isDirectory ( ) ) { final String [ ] ch = f . list ( ) ; return ch != _NULL && ch . length > _NUM ; } return _BOOL ; }
34743	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
34746	public static boolean isErrorLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isErrorLoggable ( level ) ; } }
34770	public void updateDefinition ( ICOSDefinition cosDef ) throws UMSException { PersistentObject pObject = ( PersistentObject ) cosDef ; if ( pObject . getGuid ( ) == _NULL ) { String msg = i18n . getString ( IUMSConstants . REPLACE_DEFINITION_NOT_PERSISTENT ) ; throw new UMSException ( msg ) ; } pObject . save ( ) ; }
34814	public static boolean newSessionArgExists ( Hashtable reqDataHash ) { String arg = ( String ) reqDataHash . get ( _CHAR arg _CHAR ) ; boolean newSessionArgExists = ( arg != _NULL ) && arg . equals ( _CHAR newsession _CHAR ) ; if ( utilDebug . messageEnabled ( ) ) { utilDebug . message ( _CHAR newSessionArgExists : _CHAR + newSessionArgExists ) ; } return newSessionArgExists ; }
34829	public final int value_at ( int class_i , int class_j , int p_layer ) { try { return clearance_rows [ class_j ] . column [ class_i ] . layer [ p_layer ] ; } catch ( Exception exc ) { return _NUM ; } }
34880	@ Override protected void writeValue ( ASN1Writer writer ) throws IOException { writer . writeStartSequence ( ASN1 . UNIVERSAL_OCTET_STRING_TYPE ) ; writer . writeStartSequence ( ) ; writer . writeInteger ( resultCode ) ; writer . writeOctetString ( section ) ; writer . writeEndSequence ( ) ; writer . writeEndSequence ( ) ; }
34907	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new RuntimeException ( e ) ; } }
34979	private static String makeSwingPropertiesFilename ( ) { String sep = File . separator ; String javaHome = System . getProperty ( _CHAR java . home _CHAR ) ; if ( javaHome == _NULL ) { javaHome = _CHAR < java . home undefined > _CHAR ; } return javaHome + sep + _CHAR lib _CHAR + sep + _CHAR swing . properties _CHAR ; }
34990	public boolean isDataFlavorSupported ( DataFlavor flavor ) { for ( int i = _NUM ; i < flavors . length ; i ++ ) { if ( flavor . equals ( flavors [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
34998	public String toMutilLineString ( ) { final String newLine = System . getProperty ( _CHAR line . separator _CHAR ) ; final StringBuffer problemStr = new StringBuffer ( ) ; for ( final Problem problem : this . problems ) { problemStr . append ( problem . getMessage ( ) + newLine ) ; } return problemStr . toString ( ) ; }
35021	public void addMembers ( Guid [ ] guids ) throws UMSException { if ( guids == _NULL ) { throw new IllegalArgumentException ( i18n . getString ( IUMSConstants . NULL_GUIDS ) ) ; } for ( int i = _NUM ; i < guids . length ; i ++ ) { addMember ( guids [ i ] ) ; } }
35040	private static void recycleLightWeightPopup ( LightWeightPopup popup ) { synchronized ( LightWeightPopup . class ) { List < LightWeightPopup > lightPopupCache = getLightWeightPopupCache ( ) ; if ( lightPopupCache . size ( ) < MAX_CACHE_SIZE ) { lightPopupCache . add ( popup ) ; } } }
35047	public void reset ( ) throws IOException { synchronized ( lock ) { ensureOpen ( ) ; if ( markedChar < _NUM ) throw new IOException ( ( markedChar == INVALIDATED ) ? _CHAR Mark invalid _CHAR : _CHAR Stream not marked _CHAR ) ; nextChar = markedChar ; skipLF = markedSkipLF ; } }
35050	@ Override public boolean isTimeValid ( ) { if ( conditions == _NULL ) { return _BOOL ; } else { return conditions . checkDateValidity ( currentTimeMillis ( ) ) ; } }
35106	private void checkState ( ) throws IllegalStateException { if ( trainingNames == _NULL ) { throw new IllegalStateException ( _CHAR The list of training names is _NULL . _CHAR ) ; } if ( trainingNames . size ( ) == _NUM ) { throw new IllegalStateException ( _CHAR The list of training names is empty . '' ) ; } }
35111	public byte nextByte ( ) throws DataFormatException { try { return bytes . readByte ( ) ; } catch ( IndexOutOfBoundsException e ) { throw new DataFormatException ( e . getMessage ( ) ) ; } }
35179	public int findHeader ( String name , int starting ) { for ( int i = starting ; i < count ; i ++ ) { if ( headers [ i ] . getName ( ) . equalsIgnoreCase ( name ) ) { return i ; } } return - _NUM ; }
35187	public char last ( ) { pos = offset + count ; if ( count != _NUM ) { pos -= _NUM ; return array [ pos ] ; } return DONE ; }
35195	public synchronized void addTask ( Runnable task ) { if ( worker == _NULL ) { worker = new LayoutThread ( ) ; worker . start ( ) ; } tasks . addElement ( task ) ; notifyAll ( ) ; }
35230	public boolean has_net_no ( int p_net_no ) { if ( p_net_no < _NUM ) return _BOOL ; int array_len = net_nos_arr . length ; for ( int index = _NUM ; index < array_len ; ++ index ) { if ( net_nos_arr [ index ] == p_net_no ) return _BOOL ; } return _BOOL ; }
35232	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
35247	protected Object readResolve ( ) throws java . io . ObjectStreamException { synchronized ( AWTKeyStroke . class ) { if ( getClass ( ) . equals ( getAWTKeyStrokeClass ( ) ) ) { return getCachedStroke ( keyChar , keyCode , modifiers , onKeyRelease ) ; } } return this ; }
35281	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
35287	public void processAck ( RequestEvent requestEvent , ServerTransaction serverTransaction ) { logger . info ( _CHAR shootme : got an ACK ! _CHAR ) ; logger . info ( _CHAR Dialog = _CHAR + requestEvent . getDialog ( ) ) ; if ( requestEvent . getDialog ( ) != _NULL ) { logger . info ( _CHAR Dialog State = _CHAR + requestEvent . getDialog ( ) . getState ( ) ) ; } this . ackSeen = _BOOL ; }
35326	public static long readUINT32 ( RandomAccessFile raf ) throws IOException { long result = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) { result <<= _NUM ; result |= ( long ) raf . read ( ) ; } return result ; }
35338	private boolean isValidChar ( String value ) { if ( inValidChars . contains ( value ) ) { return _BOOL ; } else { return _BOOL ; } }
35405	private void handleFlawedDiscovery ( String logAdapterClassName , ClassLoader classLoader , Throwable discoveryFlaw ) { if ( isDiagnosticsEnabled ( ) ) { logDiagnostic ( _CHAR Could not instantiate Log _CHAR_CHAR_CHAR -- _CHAR + discoveryFlaw . getClass ( ) . getName ( ) + _CHAR : _CHAR + discoveryFlaw . getLocalizedMessage ( ) ) ; } if ( ! allowFlawedDiscovery ) { throw new LogConfigurationException ( discoveryFlaw ) ; } }
35406	private void processPath ( ManagedObjectPath < ? , ? > path ) { AbstractManagedObjectDefinition < ? , ? > d = path . getManagedObjectDefinition ( ) ; for ( RelationDefinition < ? , ? > r : d . getRelationDefinitions ( ) ) { if ( ! r . hasOption ( RelationOption . HIDDEN ) ) { r . accept ( visitor , path ) ; } } }
35424	private void delayedExecute ( RunnableScheduledFuture < ? > task ) { if ( isShutdown ( ) ) reject ( task ) ; else { super . getQueue ( ) . add ( task ) ; if ( isShutdown ( ) && ! canRunInCurrentRunState ( task . isPeriodic ( ) ) && remove ( task ) ) task . cancel ( _BOOL ) ; else ensurePrestart ( ) ; } }
35443	public static SettingsFragment newInstance ( String param1 , String param2 ) { SettingsFragment fragment = new SettingsFragment ( ) ; Bundle args = new Bundle ( ) ; args . putString ( ARG_PARAM1 , param1 ) ; args . putString ( ARG_PARAM2 , param2 ) ; fragment . setArguments ( args ) ; return fragment ; }
35444	public static IngredientsFragment newInstance ( Recipe recipe , int sectionNumber ) { IngredientsFragment fragment = new IngredientsFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
35453	public String toString ( boolean detail ) { if ( ! detail || resolvedObj == _NULL ) { return toString ( ) ; } else { return ( toString ( ) + _CHAR ; resolved object _CHAR + resolvedObj ) ; } }
35540	protected void updateDepthOffset ( ) { if ( isRootVisible ( ) ) { if ( getShowsRootHandles ( ) ) depthOffset = _NUM ; else depthOffset = _NUM ; } else if ( ! getShowsRootHandles ( ) ) depthOffset =- _NUM ; else depthOffset = _NUM ; }
35547	public void beginDisplay ( DisplayEvent event ) throws ModelControlException { model = getModel ( ) ; setDisplayFieldValue ( TITLE_HTML_PAGE , model . getHTMLPageTitle ( ) ) ; setDisplayFieldValue ( COPYRIGHT_TEXT , model . getCopyRightText ( ) ) ; setDisplayFieldValue ( LBL_SUN_LOGO , model . getSunLogoLabel ( ) ) ; setDisplayFieldValue ( LBL_PRODUCT , model . getProductLabel ( ) ) ; setDisplayFieldValue ( LBL_JAVA_LOGO , model . getJavaLogoLabel ( ) ) ; }
35548	public boolean contains ( String attrName ) { boolean containsTheValue = _BOOL ; int index = indexOf ( attrName ) ; if ( index != - _NUM ) { containsTheValue = _BOOL ; } return containsTheValue ; }
35556	static void shutdownServer ( LocalizableMessage reason ) { if ( SERVER_STARTED ) { InvocationCounterPlugin . resetShutdownCalled ( ) ; DirectoryServer . shutDown ( _CHAR org . opends . server . TestCaseUtils _CHAR , reason ) ; assertTrue ( InvocationCounterPlugin . shutdownCalled ( ) ) ; SERVER_STARTED = _BOOL ; } }
35576	public Set < String > objectsChanged_idrepo ( int time ) throws RemoteException { initializeCacheSize ( ) ; Set < String > answer = collectChangesFromCache ( time , idrepoCache ) ; if ( idRepoDebug . messageEnabled ( ) ) { idRepoDebug . message ( _CHAR IdRepoJAXRPCObjectImpl . objectsChanged in time : _CHAR + time + _CHAR + _NUM minutes : \ n _CHAR + answer ) ; } return answer ; }
35593	TemplateEntry nextEntry ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( ) ; } final TemplateEntry entry = nextEntry ; nextEntry = _NULL ; return entry ; }
35604	public void deleteSubOrganizations ( Set subOrganizationDNs ) throws AMException , SSOException { Iterator iter = subOrganizationDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String subOrganizationDN = ( String ) iter . next ( ) ; AMOrganization org = new AMOrganizationImpl ( super . token , subOrganizationDN ) ; org . delete ( ) ; } }
35606	private static byte [ ] max ( byte [ ] ip1 , byte [ ] ip2 ) { for ( int i = _NUM ; i < ip1 . length ; i ++ ) { if ( ( ip1 [ i ] & _NUM ) > ( ip2 [ i ] & _NUM ) ) { return ip1 ; } } return ip2 ; }
35622	void dispose ( ) { try { saslServer . dispose ( ) ; } catch ( final SaslException e ) { logger . traceException ( e ) ; } }
35650	public synchronized void paintIcon ( Component c , Graphics g , int x , int y ) { if ( imageObserver == _NULL ) { g . drawImage ( image , x , y , c ) ; } else { g . drawImage ( image , x , y , imageObserver ) ; } }
35682	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
35688	private void installDefaultTransferHandlerIfNecessary ( ) { if ( getTransferHandler ( ) == _NULL ) { if ( defaultTransferHandler == _NULL ) { defaultTransferHandler = new DefaultTransferHandler ( ) ; } setTransferHandler ( defaultTransferHandler ) ; } }
35726	public boolean trace_width_is_layer_dependent ( ) { int compare_value = trace_half_width_arr [ _NUM ] ; for ( int index = _NUM ; index < trace_half_width_arr . length ; ++ index ) { if ( ! blayer_structure . is_signal ( index ) ) continue ; if ( trace_half_width_arr [ index ] != compare_value ) return _BOOL ; } return _BOOL ; }
35727	public static boolean isAccessLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isAccessLoggable ( level ) ; } }
35752	private static void reverseRange ( Object [ ] a , int lo , int hi ) { hi -- ; while ( lo < hi ) { Object t = a [ lo ] ; a [ lo ++ ] = a [ hi ] ; a [ hi -- ] = t ; } }
35786	public void removeService ( String name ) { try { envCtx . unbind ( name ) ; } catch ( NamingException e ) { log . error ( sm . getString ( _CHAR naming . unbindFailed _CHAR , e ) ) ; } }
35850	public void repaint ( Rectangle p_rect ) { if ( paint_immediately ) { board_panel . paintImmediately ( p_rect ) ; } else { board_panel . repaint ( p_rect ) ; } }
35907	private void createAdministrationSuffix ( String backendName ) throws ADSContextException { ADSContextHelper helper = new ADSContextHelper ( ) ; String ben = backendName ; if ( backendName == _NULL ) { ben = getDefaultBackendName ( ) ; } helper . createAdministrationSuffix ( connectionWrapper , ben ) ; }
35948	protected void installDefaults ( ) { super . installDefaults ( ) ; String prefix = getPropertyPrefix ( ) ; Character echoChar = ( Character ) UIManager . getDefaults ( ) . get ( prefix + _CHAR . echoChar _CHAR ) ; if ( echoChar != _NULL ) { LookAndFeel . installProperty ( getComponent ( ) , _CHAR echoChar _CHAR , echoChar ) ; } }
35958	private synchronized void flush ( AbstractNodeTask task ) { if ( task == _NULL ) { throw new IllegalArgumentException ( _CHAR _NULL argument _CHAR ) ; } workingList . remove ( task . getNode ( ) ) ; cancelList . remove ( task . getNode ( ) ) ; notify ( ) ; }
35966	public void makeImmutable ( ) { if ( isMutable ) { if ( ( statusCode != _NULL ) && ( statusCode . isMutable ( ) ) ) { statusCode . makeImmutable ( ) ; } isMutable = _BOOL ; } }
35998	public void addObjectClass ( ObjectClass oc ) throws DirectoryException { attachment = _NULL ; if ( objectClasses . containsKey ( oc ) ) { LocalizableMessage message = ERR_ENTRY_ADD_DUPLICATE_OC . get ( oc . getNameOrOID ( ) , dn ) ; throw new DirectoryException ( OBJECTCLASS_VIOLATION , message ) ; } objectClasses . put ( oc , oc . getNameOrOID ( ) ) ; }
36001	public boolean addCSSAttributeFromHTML ( MutableAttributeSet attr , CSS . Attribute key , String value ) { Object iValue = css . getCssValue ( key , value ) ; if ( iValue != _NULL ) { attr . addAttribute ( key , iValue ) ; return _BOOL ; } return _BOOL ; }
36007	public void handleButton2Request ( RequestInvocationEvent event ) throws ModelControlException { try { forwardToAMViewBean ( ) ; } catch ( AMConsoleException e ) { setInlineAlertMessage ( CCAlert . TYPE_ERROR , _CHAR message . error _CHAR , e . getMessage ( ) ) ; } }
36076	public boolean isLogEnabled ( ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isLogEnabled ( ) ; } }
36094	boolean isZero ( ) { for ( int i = _NUM ; i < count ; ++ i ) { if ( digits [ i ] != _CHAR ) { return _BOOL ; } } return _BOOL ; }
36153	protected LinearLayout createAndPrepareFoldingContainer ( ) { LinearLayout foldingContainer = new LinearLayout ( getContext ( ) ) ; foldingContainer . setClipToPadding ( _BOOL ) ; foldingContainer . setClipChildren ( _BOOL ) ; foldingContainer . setOrientation ( LinearLayout . VERTICAL ) ; foldingContainer . setLayoutParams ( new LinearLayout . LayoutParams ( LayoutParams . MATCH_PARENT , LayoutParams . WRAP_CONTENT ) ) ; return foldingContainer ; }
36156	protected JComponent createEditor ( ) { JComponent editor = spinner . getEditor ( ) ; maybeRemoveEditorBorder ( editor ) ; installEditorBorderListener ( editor ) ; editor . setInheritsPopupMenu ( _BOOL ) ; updateEditorAlignment ( editor ) ; return editor ; }
36176	public Enumeration children ( ) { if ( children == _NULL ) { return EMPTY_ENUMERATION ; } else { return children . elements ( ) ; } }
36185	public static final ParsedQuery createTestParsedQueryBulkData ( ) { Query query = new Query ( ) ; query . setWhere ( _CHAR field1 = _CHAR _CHAR ) ; query . setDatabase ( Fixtures . DB ) ; query . setTable ( _CHAR mytable _CHAR ) ; WhereClause whereClause = new WhereClause ( query . getWhere ( ) ) ; return new ParsedQuery ( query , whereClause , createTestIndexWithBulkDataHit ( ) ) ; }
36214	protected static Map convertJAXBToAttrMap ( String attrName , Object jaxbObj ) throws JAXBException { String xmlString = convertJAXBToString ( jaxbObj ) ; Map attrs = new HashMap ( ) ; Set values = new HashSet ( ) ; values . add ( xmlString ) ; attrs . put ( attrName , values ) ; return attrs ; }
36217	public static int findMSBSet ( int value ) { int numDigits = _NUM ; while ( value != _NUM ) { value >> >= _NUM ; ++ numDigits ; } return numDigits ; }
36231	private static boolean isV0Separator ( final char c ) { if ( c < _NUM || c >= _NUM ) { if ( c != _NUM ) { throw new IllegalArgumentException ( _CHAR Control character in cookie value or attribute . '' ) ; } } return V0_SEPARATOR_FLAGS . get ( c ) ; }
36250	public static JsonValue toJsonValue ( String json ) throws JsonException { try { return new JsonValue ( MAPPER . readValue ( json , Map . class ) ) ; } catch ( IOException e ) { throw new JsonException ( _CHAR Failed to parse json _CHAR , e ) ; } }
36258	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
36354	public void removeService ( String name ) throws Exception { if ( ! ( container instanceof Server ) ) { throw new Exception ( ) ; } ObjectName oname = new ObjectName ( name ) ; Service service = getService ( oname ) ; ( ( Server ) container ) . removeService ( service ) ; }
36406	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
36447	public static void sleep ( int ms ) { try { Thread . sleep ( ms ) ; } catch ( InterruptedException ie ) { System . err . println ( _CHAR sleep was interrupted _CHAR ) ; } }
36494	public void persistInternalSession ( InternalSession session ) { session . setStored ( _BOOL ) ; putInternalSessionIntoInternalSessionCache ( session ) ; update ( session ) ; if ( ! session . willExpire ( ) ) { nonExpiringSessionManager . addNonExpiringSession ( session ) ; } }
36497	public JKTagAttributeWrapper findAttribute ( final String key ) { for ( final JKTagAttributeWrapper attr : this . attributesList ) { if ( attr . getLocalName ( ) . equals ( key ) ) { return attr ; } } return _NULL ; }
36534	private void exportBackend ( ) throws Exception { if ( ldif == _NULL ) { ldif = File . createTempFile ( _CHAR LDAPBinaryOptionTestCase _CHAR , _CHAR . ldif _CHAR ) ; } exportConfig = new LDIFExportConfig ( ldif . getAbsolutePath ( ) , ExistingFileBehavior . OVERWRITE ) ; backend = DirectoryServer . getBackend ( _CHAR test _CHAR ) ; backend . exportLDIF ( exportConfig ) ; }
36543	final boolean transferAfterCancelledWait ( Node node ) { if ( compareAndSetWaitStatus ( node , Node . CONDITION , _NUM ) ) { enq ( node ) ; return _BOOL ; } while ( ! isOnSyncQueue ( node ) ) Thread . yield ( ) ; return _BOOL ; }
36654	public void printMultiLn ( String s ) { int index = _NUM ; while ( ( index = s . indexOf ( _CHAR , index ) ) > - _NUM ) { javaLine ++ ; index ++ ; } writer . print ( s ) ; }
36655	public JMenuItem insert ( JMenuItem mi , int pos ) { if ( pos < _NUM ) { throw new IllegalArgumentException ( _CHAR index less than zero . '' ) ; } ensurePopupMenuCreated ( ) ; popupMenu . insert ( mi , pos ) ; return mi ; }
36712	public static void putFloat ( String key , float value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putFloat ( key , value ) ; editor . apply ( ) ; }
36727	private String readLine ( ) throws IOException { StringBuilder sb = new StringBuilder ( ) ; int c ; while ( ( c = ctrlInput . read ( ) ) != _CHAR ) { sb . append ( ( char ) c ) ; } return sb . toString ( ) ; }
36746	public void callEvent ( final Event event ) throws EventException { if ( event instanceof Cancellable ) { if ( ( ( Cancellable ) event ) . isCancelled ( ) && isIgnoringCancelled ( ) ) { return ; } } executor . execute ( listener , event ) ; }
36751	@ Override public String toString ( ) { if ( className != _NULL ) { return className + _CHAR . _CHAR + super . toString ( ) ; } else { return super . toString ( ) ; } }
36803	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public synchronized E lastElement ( ) { try { return ( E ) elementData [ elementCount - _NUM ] ; } catch ( IndexOutOfBoundsException e ) { throw new NoSuchElementException ( ) ; } }
36842	public final void addInstanceOf ( String className ) { Reject . ifNull ( className ) ; String value = className . trim ( ) ; if ( ! value . matches ( CLASS_RE ) ) { throw new IllegalArgumentException ( _CHAR \ _CHAR _CHAR + value + _CHAR \ _CHAR is not a valid Java class name _CHAR ) ; } instanceOfInterfaces . add ( value ) ; }
36854	public void deleteStaticGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMStaticGroup group = new AMStaticGroupImpl ( super . token , groupDN ) ; group . delete ( ) ; } }
36859	public static byte parseByte ( String string , int radix ) throws NumberFormatException { int intValue = Integer . parseInt ( string , radix ) ; byte result = ( byte ) intValue ; if ( result == intValue ) { return result ; } throw new NumberFormatException ( _CHAR Value out of range for byte : \ '' '' + string + '' \ '' '' ) ; }
36873	protected File resolveFile ( final String s ) { if ( getProject ( ) == _NULL ) { return FileUtils . getFileUtils ( ) . resolveFile ( _NULL , s ) ; } else { return FileUtils . getFileUtils ( ) . resolveFile ( getProject ( ) . getBaseDir ( ) , s ) ; } }
36889	public void deleteUsers ( Set users ) throws AMException , SSOException { Iterator iter = users . iterator ( ) ; while ( iter . hasNext ( ) ) { String userDN = ( String ) iter . next ( ) ; AMUser user = new AMUserImpl ( super . token , userDN ) ; user . delete ( ) ; } }
36892	public static void putBoolean ( String key , boolean value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putBoolean ( key , value ) ; editor . apply ( ) ; }
36896	protected SSLEngineResult handshakeWrap ( ) throws IOException { netOutBuffer . clear ( ) ; getBufHandler ( ) . configureWriteBufferForRead ( ) ; SSLEngineResult result = sslEngine . wrap ( getBufHandler ( ) . getWriteBuffer ( ) , netOutBuffer ) ; netOutBuffer . flip ( ) ; handshakeStatus = result . getHandshakeStatus ( ) ; return result ; }
36927	protected void addWarInfo ( File warfile ) { WarInfo info = currentStatus . get ( warfile . getAbsolutePath ( ) ) ; if ( info == _NULL ) { info = new WarInfo ( warfile ) ; info . setLastState ( - _NUM ) ; currentStatus . put ( warfile . getAbsolutePath ( ) , info ) ; } }
36934	private void delete ( File file ) { if ( file . isDirectory ( ) ) { for ( File entry : getChildren ( file ) ) { delete ( entry ) ; } } file . delete ( ) ; }
36985	public void removeActionListener ( ActionListener l ) { if ( ( l != _NULL ) && ( getAction ( ) == l ) ) { setAction ( _NULL ) ; } else { listenerList . remove ( ActionListener . class , l ) ; } }
36999	public ElemTemplateElement appendChild ( ElemTemplateElement newChild ) { int type = ( ( ElemTemplateElement ) newChild ) . getXSLToken ( ) ; if ( Constants . ELEMNAME_SORT == type ) { setSortElem ( ( ElemSort ) newChild ) ; return newChild ; } else return super . appendChild ( newChild ) ; }
37037	public void removeListener ( String listenerID ) throws ConfigurationException { if ( hasOrgSchema ) { scm . removeListener ( listenerID ) ; } else { ssm . removeListener ( listenerID ) ; } }
37059	private boolean hasObjectClass ( String objectClassLowerCase ) { ObjectClass oc = DirectoryServer . getSchema ( ) . getObjectClass ( objectClassLowerCase ) ; if ( oc . isPlaceHolder ( ) ) { logger . trace ( _CHAR No % s objectclass is defined in the server schema . '' , objectClassLowerCase ) ; return containsObjectClassByName ( objectClassLowerCase ) ; } return objectClasses . containsKey ( oc ) ; }
37075	public void parse ( List < CMapObject > ls ) throws java . io . IOException { ls . clear ( ) ; CMapObject ob ; while ( ( ob = readObject ( ) ) != _NULL ) { ls . add ( ob ) ; if ( ob . isLiteral ( ) ) break ; } }
37130	public String toString ( ) { if ( attrs . size ( ) == _NUM ) { return ( _CHAR No attributes _CHAR ) ; } else { return attrs . toString ( ) ; } }
37138	public boolean equals ( Object o ) { if ( o == _NULL ) return _BOOL ; if ( this == o ) return _BOOL ; if ( ! ( o instanceof AuthPrincipal ) ) return _BOOL ; AuthPrincipal that = ( AuthPrincipal ) o ; if ( this . getName ( ) . equals ( that . getName ( ) ) ) return _BOOL ; return _BOOL ; }
37210	@ Override public int read ( ) { if ( idx >= charSequence . length ( ) ) { return - _NUM ; } else { return charSequence . charAt ( idx ++ ) ; } }
37212	public void addField ( TagField field ) { if ( field . getId ( ) . equals ( VorbisCommentFieldKey . VENDOR . getFieldName ( ) ) ) { super . setField ( field ) ; } else { super . addField ( field ) ; } }
37279	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { s . defaultReadObject ( ) ; for ( ; ; ) { @ SuppressWarnings ( _CHAR unchecked _CHAR ) E item = ( E ) s . readObject ( ) ; if ( item == _NULL ) break ; else offer ( item ) ; } }
37358	protected void lastResortExceptionHandling ( Throwable originalException , Throwable defaultHandlingException ) { try { this . logger . error ( _CHAR Error while trying to use the default exception '' + '' handling : '' + defaultHandlingException . getMessage ( ) + _CHAR .\ n _CHAR + _CHAR The original exception was : _CHAR + SpincastStatics . getStackTrace ( originalException ) ) ; } catch ( Throwable ex3 ) { } throw new RuntimeException ( _CHAR An error occured . '' ) ; }
37361	public static String escapeColonInString ( String str ) { if ( str != _NULL ) { if ( str . indexOf ( _CHAR : _CHAR ) >= _NUM ) { str = str . replaceAll ( _CHAR : _CHAR , _CHAR & # _NUM ; _CHAR ) ; } } return str ; }
37380	protected String jmxUuregister ( MBeanServerConnection jmxServerConnection , String name ) throws Exception { String error = _NULL ; if ( isEcho ( ) ) { handleOutput ( _CHAR Unregister MBean _CHAR + name ) ; } jmxServerConnection . unregisterMBean ( new ObjectName ( name ) ) ; return error ; }
37397	public void enableSuperAura ( ) { auraStateComplete = _BOOL ; spriteFrame . setFitHeight ( _NUM ) ; main . Main . auraLoop . stop ( ) ; frameControl = _NUM ; effectiveYPos = _NUM ; for ( int i = _NUM ; i < _NUM ; i ++ ) playerStates . remove ( _NUM ) ; }
37410	public void deleteOrganizations ( Set organizationDNs ) throws AMException , SSOException { Iterator iter = organizationDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String organizationDN = ( String ) iter . next ( ) ; AMOrganization org = new AMOrganizationImpl ( super . token , organizationDN ) ; org . delete ( ) ; } }
37421	public static void validateChannel ( String channel ) { if ( channel == _NULL ) { throw new IllegalArgumentException ( _CHAR Channel can not be _NULL _CHAR ) ; } if ( channel . length ( ) > Messenger . MAX_CHANNEL_SIZE ) { throw new ChannelNameTooLongException ( channel ) ; } }
37432	public boolean equals ( Object other ) { if ( ! this . getClass ( ) . equals ( other . getClass ( ) ) ) return _BOOL ; else { TLSMessageChannel that = ( TLSMessageChannel ) other ; if ( this . mySock != that . mySock ) return _BOOL ; else return _BOOL ; } }
37481	public boolean hasName ( final String name ) { for ( final String n : names ) { if ( n . equalsIgnoreCase ( name ) ) { return _BOOL ; } } return _BOOL ; }
37488	public int addPadding ( byte [ ] in , int inOff ) { int added = ( in . length - inOff ) ; while ( inOff < in . length ) { in [ inOff ] = ( byte ) _NUM ; inOff ++ ; } return added ; }
37494	public static SQLiteConnectionPool open ( SQLiteDatabaseConfiguration configuration ) { if ( configuration == _NULL ) { throw new IllegalArgumentException ( _CHAR configuration must not be _NULL . _CHAR ) ; } SQLiteConnectionPool pool = new SQLiteConnectionPool ( configuration ) ; pool . open ( ) ; return pool ; }
37499	public void append ( char digit ) { if ( count == digits . length ) { char [ ] data = new char [ count + _NUM ] ; System . arraycopy ( digits , _NUM , data , _NUM , count ) ; digits = data ; } digits [ count ++ ] = digit ; }
37521	boolean isTrusted ( ) { for ( Index index : indexIdToIndexes . values ( ) ) { if ( ! index . isTrusted ( ) ) { return _BOOL ; } } return _BOOL ; }
37529	protected String printStack ( ) { if ( stack . size ( ) == _NUM ) { return _CHAR _CHAR ; } StringBuilder s = new StringBuilder ( ) ; for ( int k = _NUM ; k < stack . size ( ) ; ++ k ) s . append ( _CHAR ) . append ( stack . get ( k ) ) ; return s . substring ( _NUM ) ; }
37530	public void createStructure ( ) { MP3File . getStructureFormatter ( ) . openHeadingElement ( TYPE_FRAME , getIdentifier ( ) ) ; MP3File . getStructureFormatter ( ) . addElement ( TYPE_FRAME_SIZE , frameSize ) ; statusFlags . createStructure ( ) ; encodingFlags . createStructure ( ) ; frameBody . createStructure ( ) ; MP3File . getStructureFormatter ( ) . closeHeadingElement ( TYPE_FRAME ) ; }
37552	static String doTargetResourceNormalization ( String originalTargetResource ) { String targetResource = originalTargetResource ; while ( targetResource . endsWith ( PARAM_WILDCARD ) ) { int len = targetResource . length ( ) ; targetResource = targetResource . substring ( _NUM , len - _NUM ) ; } return targetResource ; }
37600	private void createLock ( ) throws IOException { synchronized ( LockableFileWriter . class ) { if ( ! lockFile . createNewFile ( ) ) { throw new IOException ( _CHAR Ca n _CHAR_CHAR_CHAR_CHAR ) ; } lockFile . deleteOnExit ( ) ; } }
37626	public static Set asCaseInsensitiveHashSet ( Object ... values ) { if ( values == _NULL ) { return new CaseInsensitiveHashSet ( _NUM ) ; } else { return new CaseInsensitiveHashSet ( Arrays . asList ( values ) ) ; } }
37643	private String generateCNonce ( ) { if ( secureRandom == _NULL ) { secureRandom = new SecureRandom ( ) ; } byte [ ] cnonceBytes = new byte [ _NUM ] ; secureRandom . nextBytes ( cnonceBytes ) ; return Base64 . encode ( cnonceBytes ) ; }
37661	public JSONObject toJSONObject ( ) throws JSONException { JSONObject jo = new JSONObject ( ) ; toJSONObject ( jo ) ; jo . put ( _CHAR key _CHAR , key ) ; jo . put ( _CHAR value _CHAR , value ) ; jo . put ( _CHAR pConditionName _CHAR , pConditionName ) ; return jo ; }
37686	public void cut ( ) { if ( getClientProperty ( _CHAR JPasswordField . cutCopyAllowed _CHAR ) != Boolean . TRUE ) { UIManager . getLookAndFeel ( ) . provideErrorFeedback ( this ) ; } else { super . cut ( ) ; } }
37717	public MappedMember findFieldByNameAndDesc ( String name , String desc , boolean useOriginalName ) { for ( MappedMember mm : getFields ( ) ) { if ( mm . getDesc ( ) . equals ( desc ) && useOriginalName ? mm . getOriginalName ( ) . equals ( name ) : mm . getNewName ( ) . equals ( name ) ) { return mm ; } } return _NULL ; }
37721	public static < T > void removeAll ( Collection < T > collection , Collection < T > elements ) { if ( CollectionUtils . isEmpty ( collection ) || CollectionUtils . isEmpty ( elements ) ) { return ; } for ( T element : elements ) { collection . remove ( element ) ; } }
37749	boolean hasAttribute ( final AttributeType attributeType ) { for ( final TemplateLine line : templateLines ) { if ( line . getAttributeType ( ) . equals ( attributeType ) ) { return _BOOL ; } } return _BOOL ; }
37753	private void writeInternal ( byte [ ] b , int off , int len ) throws IOException { if ( listener == _NULL ) { socketWrapper . write ( _BOOL , b , off , len ) ; } else { socketWrapper . write ( _BOOL , b , off , len ) ; } }
37787	public void printStackTrace ( PrintStream s ) { if ( ! isJDK14OrAbove && causeOnJDK13OrBelow != _NULL ) { printStackTrace0 ( new PrintWriter ( s ) ) ; } else { super . printStackTrace ( s ) ; } }
37794	@ Override public void clear ( ) { if ( size != _NUM ) { Arrays . fill ( table , _NULL ) ; entryForNullKey = _NULL ; modCount ++ ; size = _NUM ; } }
37803	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
37817	public void unread ( byte [ ] b , int off , int len ) throws IOException { ensureOpen ( ) ; if ( len > pos ) { throw new IOException ( _CHAR Push back buffer is full _CHAR ) ; } pos -= len ; System . arraycopy ( b , off , buf , pos , len ) ; }
37821	public X509Certificate generateX509Certificate ( PrivateKey key , SecureRandom random ) throws SecurityException , SignatureException , InvalidKeyException { try { return generateX509Certificate ( key , _CHAR BC _CHAR , random ) ; } catch ( NoSuchProviderException e ) { throw new SecurityException ( _CHAR BC provider not installed ! _CHAR ) ; } }
37832	public NetClass find ( int p_trace_half_width , int p_trace_clearance_class , RuleViaInfoList p_via_rule ) { for ( NetClass curr_class : class_list ) { if ( curr_class . get_trace_clearance_class ( ) != p_trace_clearance_class ) continue ; if ( curr_class . get_via_rule ( ) != p_via_rule ) continue ; if ( curr_class . has_trace_half_width ( p_trace_half_width ) ) return curr_class ; } return _NULL ; }
37840	static DebugGraphicsInfo info ( ) { DebugGraphicsInfo debugGraphicsInfo = ( DebugGraphicsInfo ) SwingUtilities . appContextGet ( debugGraphicsInfoKey ) ; if ( debugGraphicsInfo == _NULL ) { debugGraphicsInfo = new DebugGraphicsInfo ( ) ; SwingUtilities . appContextPut ( debugGraphicsInfoKey , debugGraphicsInfo ) ; } return debugGraphicsInfo ; }
37878	public static void assertNotNull ( Object param ) throws XMPException { if ( param == _NULL ) { throw new XMPException ( _CHAR Parameter must not be _NULL _CHAR , XMPError . BADPARAM ) ; } else if ( ( param instanceof String ) && ( ( String ) param ) . length ( ) == _NUM ) { throw new XMPException ( _CHAR Parameter must not be _NULL or empty _CHAR , XMPError . BADPARAM ) ; } }
37892	private K highestKey ( ) { ConcurrentSkipListMap . Node < K , V > n = hiNode ( ) ; if ( n != _NULL ) { K last = n . key ; if ( inBounds ( last ) ) return last ; } throw new NoSuchElementException ( ) ; }
37903	synchronized void updatePlatformServiceGlobals ( ServiceSchemaManager scm ) throws SMSException { ServiceSchema platformSchema = scm . getGlobalSchema ( ) ; Map attrs = platformSchema . getAttributeDefaults ( ) ; platformLocale = CollectionHelper . getMapAttr ( attrs , ISAuthConstants . PLATFORM_LOCALE_ATTR ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR PlatformLocale = _CHAR + platformLocale ) ; } }
37910	private static String escapeString ( String s ) { if ( s == _NULL ) return _NULL ; s = s . replace ( _CHAR \\ _CHAR , _CHAR \\\\ _CHAR ) ; s = s . replace ( _CHAR * _CHAR , _CHAR \\* _CHAR ) ; s = s . replace ( _CHAR ? _CHAR , _CHAR \\ ? _CHAR ) ; s = s . replace ( _CHAR [ _CHAR , _CHAR \\ [ _CHAR ) ; return s ; }
37921	protected void paintVerticalLine ( Graphics g , JComponent c , int x , int top , int bottom ) { if ( lineTypeDashed ) { drawDashedVerticalLine ( g , x , top , bottom ) ; } else { g . drawLine ( x , top , x , bottom ) ; } }
37926	public long roundTripTime ( long timeout , TimeUnit unit ) throws InterruptedException { if ( latch . await ( timeout , unit ) ) { return received - sent ; } else { return - _NUM ; } }
37929	private void scrollXTo ( OverScroller scroller , float x , int duration ) { computeScrollSurfaceSize ( ) ; float dx = x - contentRect . centerX ( ) ; if ( dx != _NUM ) { scrollInProgress = _BOOL ; scroller . startScroll ( startX ( ) , startY ( ) , ( int ) dx , _NUM , duration ) ; } }
37944	private void sendResponse ( HttpServletRequest request , HttpServletResponse response , String returnURL ) { try { FSUtils . forwardRequest ( request , response , returnURL ) ; } catch ( Exception exp ) { FSUtils . debug . error ( _CHAR FSPreLogin : : sendError Error during sending error page _CHAR ) ; } }
37971	public void registerComponent ( JComponent component ) { component . removeMouseListener ( this ) ; component . addMouseListener ( this ) ; component . removeMouseMotionListener ( moveBeforeEnterListener ) ; component . addMouseMotionListener ( moveBeforeEnterListener ) ; component . removeKeyListener ( accessibilityKeyListener ) ; component . addKeyListener ( accessibilityKeyListener ) ; }
37991	private boolean hasMarker ( Component comp ) { for ( Iterator < TypeAheadMarker > iter = typeAheadMarkers . iterator ( ) ; iter . hasNext ( ) ; ) { if ( iter . next ( ) . untilFocused == comp ) { return _BOOL ; } } return _BOOL ; }
37999	@ Override public boolean ready ( ) throws IOException { synchronized ( lock ) { if ( isOpen ( ) ) { return _BOOL ; } throw new IOException ( _CHAR StringReader is closed _CHAR ) ; } }
38020	public static String formatBigDecimal ( BigDecimal v , Locale locale ) { NumberFormat numberFormat = NumberFormat . getInstance ( locale ) ; int scale = _NUM ; if ( v . intValue ( ) >= _NUM ) { scale = _NUM ; } return numberFormat . format ( v . setScale ( scale , RoundingMode . UP ) ) ; }
38069	public void flushOutputStreamOrWriter ( ) throws IOException { if ( servletOutputStream != _NULL ) { servletOutputStream . flush ( ) ; } if ( printWriter != _NULL ) { printWriter . flush ( ) ; } }
38094	private TextImpl nextTextNode ( ) { Node nextSibling = getNextSibling ( ) ; if ( nextSibling == _NULL ) { return _NULL ; } short nodeType = nextSibling . getNodeType ( ) ; return nodeType == Node . TEXT_NODE || nodeType == Node . CDATA_SECTION_NODE ? ( TextImpl ) nextSibling : _NULL ; }
38097	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e . toString ( ) , e ) ; } }
38101	@ Override public void showProgress ( ) { if ( mShotRecycler . getVisibility ( ) == View . VISIBLE && mBrowseAdapter . getItemCount ( ) > _NUM ) { mSwipeRefreshLayout . setRefreshing ( _BOOL ) ; } else { mRecyclerProgress . setVisibility ( View . VISIBLE ) ; } }
38176	private boolean defineEntity ( String name , char value ) { StringBuffer sb = new StringBuffer ( _CHAR & _CHAR ) ; sb . append ( name ) ; sb . append ( _CHAR ) ; String entityString = sb . toString ( ) ; boolean extra = defineChar2StringMapping ( entityString , value ) ; return extra ; }
38188	private void writeObject ( java . io . ObjectOutputStream s ) throws java . io . IOException { s . defaultWriteObject ( ) ; s . writeInt ( attrs . size ( ) ) ; Enumeration < Attribute > attrEnum = attrs . elements ( ) ; while ( attrEnum . hasMoreElements ( ) ) { s . writeObject ( attrEnum . nextElement ( ) ) ; } }
38192	public void addValue ( TemplateValue value ) { ArrayList < TemplateValue > valueList = attributes . get ( value . getAttributeType ( ) ) ; if ( valueList == _NULL ) { valueList = new ArrayList < > ( ) ; attributes . put ( value . getAttributeType ( ) , valueList ) ; } valueList . add ( value ) ; }
38205	public Object clone ( ) { GenericObjectList retval = ( GenericObjectList ) super . clone ( ) ; for ( ListIterator < GenericObject > iter = retval . listIterator ( ) ; iter . hasNext ( ) ; ) { GenericObject obj = ( GenericObject ) ( ( GenericObject ) iter . next ( ) ) . clone ( ) ; iter . set ( obj ) ; } return retval ; }
38217	private void addGlobalAttributesToIntent ( Intent intent ) { if ( ! intent . hasExtra ( Event . ATTRIBUTE_TIME ) ) { insertTimeStamp ( intent ) ; } if ( ! intent . hasExtra ( Event . ATTRIBUTE_LOCATION ) ) { insertLocationData ( intent ) ; } }
38245	@ TargetApi ( Build . VERSION_CODES . HONEYCOMB ) public static void pickImage ( Context context , Fragment fragment , int requestCode ) { try { fragment . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( context ) ; } }
38281	public JKTagMapping findTagMapping ( final String tagName ) { for ( final JKTagMapping mapping : this . tagMapping ) { if ( mapping . getSourceQName ( ) . equals ( tagName ) ) { return mapping ; } } return _NULL ; }
38320	public void addRole ( String user , String role ) { List < String > roles = userRoles . get ( user ) ; if ( roles == _NULL ) { roles = new ArrayList < > ( ) ; userRoles . put ( user , roles ) ; } roles . add ( role ) ; }
38334	protected Digester createStopDigester ( ) { Digester digester = new Digester ( ) ; digester . setUseContextClassLoader ( _BOOL ) ; digester . addObjectCreate ( _CHAR Server _CHAR , _CHAR org . apache . catalina . core . StandardServer _CHAR , _CHAR className _CHAR ) ; digester . addSetProperties ( _CHAR Server _CHAR ) ; digester . addSetNext ( _CHAR Server _CHAR , _CHAR setServer _CHAR , _CHAR org . apache . catalina . Server _CHAR ) ; return ( digester ) ; }
38383	private void checkStartWarningLabel ( ) { boolean visible = ! getStartCheckBox ( ) . isSelected ( ) ; if ( visible ) { final UserData userData = getApplication ( ) . getUserData ( ) ; visible = userData . getReplicationOptions ( ) . getType ( ) != DataReplicationOptions . Type . STANDALONE ; } getWarningLabel ( ) . setVisible ( visible ) ; }
38406	public boolean checkError ( ) { OutputStream delegate = out ; if ( delegate == _NULL ) { return ioError ; } flush ( ) ; return ioError || delegate . checkError ( ) ; }
38449	public int hashCode ( ) { int code = _NUM ; Object [ ] tbl = attributes ; for ( int i = _NUM ; i < tbl . length ; i += _NUM ) { code ^= tbl [ i ] . hashCode ( ) ; } return code ; }
38456	public void addLayoutComponent ( Component comp , Object constraints ) { if ( constraints instanceof GridBagConstraints ) { setConstraints ( comp , ( GridBagConstraints ) constraints ) ; } else if ( constraints != _NULL ) { throw new IllegalArgumentException ( _CHAR can not add to layout : constraints must be a GridBagConstraint _CHAR ) ; } }
38523	private void logMsgsSetLockDownMode ( LinkedList < LocalizableMessage > failedACIMsgs ) { for ( LocalizableMessage msg : failedACIMsgs ) { logger . warn ( WARN_ACI_SERVER_DECODE_FAILED , msg ) ; } if ( ! inLockDownMode ) { setLockDownMode ( ) ; } }
38578	protected void selectPreviousIndex ( ) { int s = list . getSelectedIndex ( ) ; if ( s > _NUM ) { s -= _NUM ; list . setSelectedIndex ( s ) ; list . ensureIndexIsVisible ( s ) ; } }
38593	public int compareTo ( Object obj ) { ObjectStreamField other = ( ObjectStreamField ) obj ; boolean isPrim = isPrimitive ( ) ; if ( isPrim != other . isPrimitive ( ) ) { return isPrim ? - _NUM : _NUM ; } return name . compareTo ( other . name ) ; }
38612	private void clearDbs ( ) { try { domainDB . removeDomain ( baseDN ) ; } catch ( ChangelogException e ) { logger . error ( ERR_ERROR_CLEARING_DB , baseDN , e . getMessage ( ) , e ) ; } }
38640	public static void shutdownCacheManger ( ) { if ( manager != _NULL ) { logger . info ( _CHAR Shutting down cache manager . '' ) ; manager . shutdown ( ) ; cacheMap = new ConcurrentHashMap < > ( ) ; cacheManagerEstablished = _BOOL ; } }
38648	protected void registerChildren ( ) { super . registerChildren ( ) ; registerChild ( PGTITLE , CCPageTitle . class ) ; registerChild ( SEC_MH_COMMON , CCSecondaryMasthead . class ) ; registerChild ( PROPERTY_ATTRIBUTE , AMPropertySheet . class ) ; ptModel . registerChildren ( this ) ; propertySheetModel . registerChildren ( this ) ; }
38692	public boolean contains ( int s ) { if ( _NULL == m_map ) return _BOOL ; for ( int i = _NUM ; i < m_firstFree ; i ++ ) { int node = m_map [ i ] ; if ( node == s ) return _BOOL ; } return _BOOL ; }
38699	public void clearGraceLoginTimes ( ) { logger . trace ( _CHAR Clearing grace login times for user % s '' , userDNString ) ; List < Long > graceTimes = getGraceLoginTimes ( ) ; if ( ! graceTimes . isEmpty ( ) ) { graceTimes . clear ( ) ; clearAttribute ( OP_ATTR_PWPOLICY_GRACE_LOGIN_TIME ) ; } }
38710	public boolean equals ( Object obj ) { try { return equals ( ( FontRenderContext ) obj ) ; } catch ( ClassCastException e ) { return _BOOL ; } }
38731	public synchronized void drop ( DropTargetDropEvent dtde ) { isDraggingInside = _BOOL ; clearAutoscroll ( ) ; if ( dtListener != _NULL && active ) dtListener . drop ( dtde ) ; else { dtde . rejectDrop ( ) ; } }
38738	protected void skipWhitespace ( final CharArrayBuffer buffer , final ParserCursor cursor ) { int pos = cursor . getPos ( ) ; int indexTo = cursor . getUpperBound ( ) ; while ( ( pos < indexTo ) && HTTP . isWhitespace ( buffer . charAt ( pos ) ) ) { pos ++ ; } cursor . updatePos ( pos ) ; }
38747	public void makeImmutable ( ) { if ( isMutable ) { if ( audiences != _NULL ) { audiences = Collections . unmodifiableList ( audiences ) ; } isMutable = _BOOL ; } }
38762	public static ECPoint . F2m tau ( ECPoint . F2m p ) { if ( p . isInfinity ( ) ) { return p ; } ECFieldElement x = p . getX ( ) ; ECFieldElement y = p . getY ( ) ; return new ECPoint . F2m ( p . getCurve ( ) , x . square ( ) , y . square ( ) , p . isCompressed ( ) ) ; }
38768	public void addField ( PdfFormField field ) { PdfPage page ; if ( document . getNumberOfPages ( ) == _NUM ) { document . addNewPage ( ) ; } page = document . getLastPage ( ) ; addField ( field , page ) ; }
38777	public static boolean isAccessLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isAccessLoggable ( level ) ; } }
38798	static RepaintManager currentManager ( AppContext appContext ) { RepaintManager rm = ( RepaintManager ) appContext . get ( repaintManagerKey ) ; if ( rm == _NULL ) { rm = new RepaintManager ( BUFFER_STRATEGY_TYPE ) ; appContext . put ( repaintManagerKey , rm ) ; } return rm ; }
38805	public void paint ( Graphics g ) { super . paint ( g ) ; Border border = getBorder ( ) ; if ( border != _NULL ) { Dimension size = getSize ( ) ; border . paintBorder ( this , g , _NUM , _NUM , size . width , size . height ) ; } }
38848	public static String formatDateTimeStringForEquivalentCommand ( final Date date ) { if ( date != _NULL ) { final SimpleDateFormat dateFormat = new SimpleDateFormat ( DATE_FORMAT_LOCAL_TIME ) ; dateFormat . setTimeZone ( TimeZone . getTimeZone ( _CHAR UTC _CHAR ) ) ; return dateFormat . format ( date ) ; } return _NULL ; }
38964	public void addObserver ( Observer observer ) { if ( observer == _NULL ) { throw new NullPointerException ( _CHAR observer == _NULL _CHAR ) ; } synchronized ( this ) { if ( ! observers . contains ( observer ) ) observers . add ( observer ) ; } }
38990	public static String decode ( final String value ) { try { return URLDecoder . decode ( value , CHARSET_ISO_8859_1 ) ; } catch ( UnsupportedEncodingException e ) { throw new IllegalArgumentException ( e ) ; } }
38999	void ensureCapacity ( final int size ) { if ( _length + size <= _data . length ) { return ; } final int length1 = _NUM * _data . length ; final int length2 = _length + size ; _data = Arrays . copyOf ( _data , length1 > length2 ? length1 : length2 ) ; }
39001	public static void hidekeyboard ( Activity activity ) { try { ( ( InputMethodManager ) activity . getSystemService ( Context . INPUT_METHOD_SERVICE ) ) . hideSoftInputFromWindow ( activity . getCurrentFocus ( ) . getWindowToken ( ) , InputMethodManager . HIDE_NOT_ALWAYS ) ; } catch ( Exception ex ) { ex . printStackTrace ( ) ; } }
39008	public Object clone ( ) { try { return new RoleUnresolved ( roleName , roleValue , problemType ) ; } catch ( IllegalArgumentException exc ) { return _NULL ; } }
39028	public boolean remove ( AccessibleState state ) { if ( states == _NULL ) { return _BOOL ; } else { return states . removeElement ( state ) ; } }
39064	@ Override public void updatePosition ( ) { for ( int i = _NUM ; i < spriteBoundsArray . length ; i ++ ) { spriteBoundsArray [ i ] . setTranslateX ( xPos ) ; spriteBoundsArray [ i ] . setTranslateY ( yPos ) ; } spriteFrame . setTranslateX ( xPos ) ; spriteFrame . setTranslateY ( yPos ) ; }
39097	private boolean hasNonSpecialAttribute ( Collection < String > keys ) { for ( String attr : keys ) { if ( ! attr . startsWith ( _CHAR _ _CHAR ) ) { return _BOOL ; } } return _BOOL ; }
39109	public boolean hasListeners ( String propertyName ) { for ( PropertyChangeListener p : listeners ) { if ( ! ( p instanceof PropertyChangeListenerProxy ) || Objects . equal ( propertyName , ( ( PropertyChangeListenerProxy ) p ) . getPropertyName ( ) ) ) { return _BOOL ; } } return _BOOL ; }
39122	private void writeHex ( int i ) throws IOException { int cursor = _NUM ; do { hex [ -- cursor ] = HEX_DIGITS [ i & _NUM ] ; } while ( ( i >> >= _NUM ) != _NUM ) ; socketOut . write ( hex , cursor , hex . length - cursor ) ; }
39134	private boolean hasTriggerMisfired ( Trigger trigger ) { long now = System . currentTimeMillis ( ) ; Date nextFireTime = trigger . getNextFireTime ( ) ; if ( nextFireTime . getTime ( ) <= ( now - misfireThreshold ) ) { return _BOOL ; } return _BOOL ; }
39154	public void onSelectMedia ( View v ) { if ( ! mPermissionsGranted ) { mStatusView . setErrorMessage ( _CHAR The application has not been granted permission to read from external storage _CHAR ) ; } else { selectVideoFile ( ) ; } }
39156	public Collection engineGenerateCRLs ( InputStream inStream ) throws CRLException { CRL crl ; List crls = new ArrayList ( ) ; while ( ( crl = engineGenerateCRL ( inStream ) ) != _NULL ) { crls . add ( crl ) ; } return crls ; }
39195	public int allocateRankForNewItem ( ShortcutInfo info ) { int rank = getItemCount ( ) ; ArrayList < View > views = new ArrayList < View > ( mFolder . getItemsInReadingOrder ( ) ) ; views . add ( rank , _NULL ) ; arrangeChildren ( views , views . size ( ) , _BOOL ) ; setCurrentPage ( rank / mMaxItemsPerPage ) ; return rank ; }
39207	public boolean contains ( AccessibleState state ) { if ( states == _NULL ) { return _BOOL ; } else { return states . contains ( state ) ; } }
39267	private SAXParseException makeException ( String message ) { if ( locator != _NULL ) { return new SAXParseException ( message , locator ) ; } else { return new SAXParseException ( message , _NULL , _NULL , - _NUM , - _NUM ) ; } }
39274	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
39290	public String toString ( ) { StringBuilder sb = new StringBuilder ( _CHAR AttrSet : _CHAR ) ; int size = _attrs . size ( ) ; for ( int i = _NUM ; i < size ; i ++ ) { sb . append ( _attrs . get ( i ) . toString ( ) ) . append ( _CHAR \ n _CHAR ) ; } return sb . toString ( ) ; }
39308	private void reinitializeAnimationArrays ( ) { final int childCount = mWorkspace . getChildCount ( ) ; if ( mLastChildCount == childCount ) return ; mOldBackgroundAlphas = new float [ childCount ] ; mOldAlphas = new float [ childCount ] ; mNewBackgroundAlphas = new float [ childCount ] ; mNewAlphas = new float [ childCount ] ; }
39312	@ Override public void close ( ) throws IOException { try { super . close ( ) ; } finally { this . branch . close ( ) ; } }
39328	public boolean isAccepted ( ) { for ( License license : licenses ) { if ( ! license . isAccepted ( ) ) { return _BOOL ; } } return _BOOL ; }
39332	public InputSource resolveEntity ( String publicId , String systemId ) throws SAXException , IOException { if ( m_entityResolver != _NULL ) { return m_entityResolver . resolveEntity ( publicId , systemId ) ; } else { return _NULL ; } }
39352	public static MappedMember findField ( MappedClass owner , String name , String desc ) { for ( MappedMember mm : owner . getFields ( ) ) { if ( matches ( mm , name , desc , _BOOL ) ) { return mm ; } } return _NULL ; }
39353	private boolean isSchemaFileDefined ( String schemaFile ) { try ( LDIFReader reader = new LDIFReader ( new LDIFImportConfig ( schemaFile ) ) ) { return reader . readEntry ( ) != _NULL ; } catch ( Throwable t ) { return _BOOL ; } }
39370	public AMAuthenticationAuditEventBuilder entryList ( List < AuthenticationAuditEntry > entries ) { List < Map < String , Object >> convertedEntries = new ArrayList < > ( ) ; for ( AuthenticationAuditEntry entry : entries ) { convertedEntries . add ( entry . toMap ( ) ) ; } super . entries ( convertedEntries ) ; return this ; }
39402	public void runSQL ( String connectionString , String createTable ) throws SQLException { Connection conn = DriverManager . getConnection ( connectionString ) ; Statement st = conn . createStatement ( ) ; System . err . println ( createTable ) ; st . execute ( createTable ) ; st . close ( ) ; conn . close ( ) ; }
39414	public void pause ( ) { try { protocolHandler . pause ( ) ; } catch ( Exception e ) { log . error ( sm . getString ( _CHAR coyoteConnector . protocolHandlerPauseFailed _CHAR ) , e ) ; } }
39482	public boolean startsWith ( Name n ) { if ( n instanceof CompositeName ) { return ( impl . startsWith ( n . size ( ) , n . getAll ( ) ) ) ; } else { return _BOOL ; } }
39485	public Origin createOrigin ( String userName , String address ) throws SdpException { OriginField originImpl = new OriginField ( ) ; originImpl . setUsername ( userName ) ; originImpl . setAddress ( address ) ; originImpl . setNetworkType ( SDPKeywords . IN ) ; originImpl . setAddressType ( SDPKeywords . IPV4 ) ; return originImpl ; }
39498	static boolean isApplicable ( AttributeType a , TargetAttr targetAttr ) { if ( targetAttr . isAllUserAttributes ( ) && targetAttr . isAllOpAttributes ( ) ) { return ! targetAttr . getOperator ( ) . equals ( EnumTargetOperator . NOT_EQUALITY ) ; } else { return evalAttrType ( a , targetAttr ) ; } }
39545	private static int skipWhiteSpace ( BitArray row ) throws NotFoundException { int width = row . getSize ( ) ; int endStart = row . getNextSet ( _NUM ) ; if ( endStart == width ) { throw NotFoundException . getNotFoundInstance ( ) ; } return endStart ; }
39567	public static int highestOneBit ( int i ) { i |= ( i >> _NUM ) ; i |= ( i >> _NUM ) ; i |= ( i >> _NUM ) ; i |= ( i >> _NUM ) ; i |= ( i >> _NUM ) ; return i - ( i >> > _NUM ) ; }
39615	@ Override public synchronized void reset ( ) throws IOException { try { in . reset ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
39619	public static String unqualifyPid ( String qualifiedPid ) { if ( qualifiedPid != _NULL && qualifiedPid . startsWith ( ServerConstants . SERVICE_RDN_PREFIX ) ) { return qualifiedPid . substring ( ServerConstants . SERVICE_RDN_PREFIX . length ( ) ) ; } else { return qualifiedPid ; } }
39627	public static void putBoolean ( final String key , final boolean value ) { try { systemRoot . putBoolean ( fixKey ( key ) , value ) ; } catch ( final Exception e ) { System . err . print ( e ) ; } }
39646	private void twoTasksLoadCallsToRepository ( TasksDataSource . LoadTasksCallback callback ) { mTasksRepository . getTasks ( callback ) ; verify ( mTasksLocalDataSource ) . getTasks ( mTasksCallbackCaptor . capture ( ) ) ; mTasksCallbackCaptor . getValue ( ) . onDataNotAvailable ( ) ; verify ( mTasksRemoteDataSource ) . getTasks ( mTasksCallbackCaptor . capture ( ) ) ; mTasksCallbackCaptor . getValue ( ) . onTasksLoaded ( TASKS ) ; mTasksRepository . getTasks ( callback ) ; }
39664	protected Class < ? > findClass ( String name ) throws ClassNotFoundException { if ( mDexClass != _NULL ) { return findClassDalvik ( name ) ; } else { return findClassNonDalvik ( name ) ; } }
39679	public static RecipeFragment newInstance ( Recipe recipe , int sectionNumber ) { RecipeFragment fragment = new RecipeFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
39711	public void layoutChanged ( int axis ) { if ( axis == majorAxis ) { majorAllocValid = _BOOL ; } else { minorAllocValid = _BOOL ; } }
39723	protected void tearDown ( ) { try { pis . close ( ) ; } catch ( IOException e ) { fail ( _CHAR IOException during tearDown : _CHAR + e . getMessage ( ) ) ; } }
39744	public void createStructure ( ) { MP3File . getStructureFormatter ( ) . openHeadingElement ( TYPE_FRAME , getIdentifier ( ) ) ; MP3File . getStructureFormatter ( ) . addElement ( TYPE_FRAME_SIZE , frameSize ) ; statusFlags . createStructure ( ) ; encodingFlags . createStructure ( ) ; frameBody . createStructure ( ) ; MP3File . getStructureFormatter ( ) . closeHeadingElement ( TYPE_FRAME ) ; }
39786	public boolean isDescendantOf ( final ObjectClass objectClass ) { for ( final ObjectClass sup : superiorClasses ) { if ( sup . equals ( objectClass ) || sup . isDescendantOf ( objectClass ) ) { return _BOOL ; } } return _BOOL ; }
39806	private static StatelessSession extractStatelessSession ( SSOToken token ) throws SSOException { if ( token instanceof StatelessSSOToken ) { return ( ( StatelessSSOToken ) token ) . getSession ( ) ; } else { throw new SSOException ( _CHAR Not a stateless SSOToken _CHAR ) ; } }
39820	public Enumeration children ( ) { if ( children == _NULL ) { return EMPTY_ENUMERATION ; } else { return children . elements ( ) ; } }
39829	protected static Map convertJAXBToAttrMap ( String attrName , Object jaxbObj ) throws JAXBException { String xmlString = convertJAXBToString ( jaxbObj ) ; Map attrs = new HashMap ( ) ; Set values = new HashSet ( ) ; values . add ( xmlString ) ; attrs . put ( attrName , values ) ; return attrs ; }
39877	public int findColumn ( String columnName ) { for ( int i = _NUM ; i < getColumnCount ( ) ; i ++ ) { if ( columnName . equals ( getColumnName ( i ) ) ) { return i ; } } return - _NUM ; }
39889	public String read ( final int length ) { if ( length > this . length || pos + length > this . length ) { throw new StringIndexOutOfBoundsException ( ) ; } final String substring = source . substring ( pos , pos + length ) ; pos += length ; return substring ; }
39898	protected void finalize ( ) { if ( cmmProfile != _NULL ) { CMSManager . getModule ( ) . freeProfile ( cmmProfile ) ; } else if ( profileActivator != _NULL ) { ProfileDeferralMgr . unregisterDeferral ( profileActivator ) ; } }
39917	final boolean tryMatchData ( ) { Object x = item ; if ( x != _NULL && x != this && casItem ( x , _NULL ) ) { LockSupport . unpark ( waiter ) ; return _BOOL ; } return _BOOL ; }
39919	void remask ( ) { if ( parsedFormatInfo == _NULL ) { return ; } DataMask dataMask = DataMask . forReference ( parsedFormatInfo . getDataMask ( ) ) ; int dimension = bitMatrix . getHeight ( ) ; dataMask . unmaskBitMatrix ( bitMatrix , dimension ) ; }
39922	public void uninstallUI ( JComponent c ) { uninstallComponents ( ) ; optionPane . setLayout ( _NULL ) ; uninstallKeyboardActions ( ) ; uninstallListeners ( ) ; uninstallDefaults ( ) ; optionPane = _NULL ; }
39945	@ Override protected void finalize ( ) throws Throwable { try { NativeCollation . closeElements ( address ) ; } finally { super . finalize ( ) ; } }
39963	public CodeStream putByteArray ( final byte [ ] b , final int offset , final int length ) { ensureCapacity ( length ) ; if ( b != _NULL ) { System . arraycopy ( b , offset , _data , _length , length ) ; } _length += length ; return this ; }
39981	private void readObject ( java . io . ObjectInputStream stream ) throws IOException , ClassNotFoundException { if ( stubDelegate == _NULL ) { setDefaultDelegate ( ) ; } if ( stubDelegate != _NULL ) { stubDelegate . readObject ( this , stream ) ; } }
40021	public boolean hasMember ( Guid guid ) throws UMSException { Principal principal = getPrincipal ( ) ; if ( principal == _NULL ) { throw new IllegalArgumentException ( i18n . getString ( IUMSConstants . BAD_PRINCIPAL_HDL ) ) ; } PersistentObject member = UMSObject . getObject ( principal , guid ) ; return hasMember ( member ) ; }
40062	public void cancel_state ( ) { if ( board_is_read_only ) return ; StateInteractive new_state = interactive_state . cancel ( ) ; if ( new_state != interactive_state ) { set_interactive_state ( new_state ) ; repaint ( ) ; } }
40071	public boolean startsWith ( Name n ) { if ( n == _NULL ) { return _BOOL ; } int len1 = rdns . size ( ) ; int len2 = n . size ( ) ; return ( len1 >= len2 && matches ( _NUM , len2 , n ) ) ; }
40093	protected void concatenate ( GenericObjectList objList , boolean topFlag ) { if ( ! topFlag ) { this . addAll ( objList ) ; } else { this . addAll ( _NUM , objList ) ; } }
40096	private boolean isNavigationKey ( KeyEvent event ) { InputMap inputMap = list . getInputMap ( JComponent . WHEN_ANCESTOR_OF_FOCUSED_COMPONENT ) ; KeyStroke key = KeyStroke . getKeyStrokeForEvent ( event ) ; if ( inputMap != _NULL && inputMap . get ( key ) != _NULL ) { return _BOOL ; } return _BOOL ; }
40122	private void seekStation ( final int station , boolean direction ) { startAnimation ( ) ; refreshImageButton ( _BOOL ) ; refreshActionMenuItem ( _BOOL ) ; refreshPopupMenuItem ( _BOOL ) ; refreshActionMenuPower ( _BOOL ) ; mService . seekStationAsync ( FmRadioUtils . computeFrequency ( station ) , direction ) ; }
40124	private static String unCapitalize ( String name ) { if ( name == _NULL || name . length ( ) == _NUM ) { return name ; } char chars [ ] = name . toCharArray ( ) ; chars [ _NUM ] = Character . toLowerCase ( chars [ _NUM ] ) ; return new String ( chars ) ; }
40175	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { super . fixupVariables ( vars , globalsSize ) ; if ( _NULL != m_args ) { for ( int i = _NUM ; i < m_args . length ; i ++ ) { m_args [ i ] . fixupVariables ( vars , globalsSize ) ; } } }
40196	public static String toXml ( final Object obj ) { final ByteArrayOutputStream out = new ByteArrayOutputStream ( ) ; final XMLEncoder e = new XMLEncoder ( out ) ; e . setExceptionListener ( new XmlEncoderExceptionListener ( ) ) ; e . writeObject ( obj ) ; e . close ( ) ; return out . toString ( ) ; }
40223	public boolean reset ( ) { boolean wasReset = _BOOL ; if ( super . reset ( ) ) { resetToXMLSAXHandler ( ) ; wasReset = _BOOL ; } return wasReset ; }
40245	public void startBundle ( Bundle bundle ) throws UpdateException { try { bundle . start ( ) ; } catch ( BundleException e ) { throw new UpdateException ( _CHAR Can not start bundle _CHAR + bundle . toString ( ) , e ) ; } }
40251	private void validateDnsNames ( Set dnsNameSet ) throws PolicyException { Iterator dnsNames = dnsNameSet . iterator ( ) ; while ( dnsNames . hasNext ( ) ) { String dnsName = ( String ) dnsNames . next ( ) ; validateDnsName ( dnsName ) ; dnsList . add ( dnsName . toLowerCase ( ) ) ; } }
40280	public int indexOf ( int elem , int index ) { if ( _NULL == m_map ) return - _NUM ; for ( int i = index ; i < m_firstFree ; i ++ ) { int node = m_map [ i ] ; if ( node == elem ) return i ; } return - _NUM ; }
40299	public String toString ( ) { if ( exception != _NULL ) { return exception . toString ( ) ; } else { return super . toString ( ) ; } }
40302	public View findViewById ( int id ) { View v ; if ( mSlidingMenu != _NULL ) { v = mSlidingMenu . findViewById ( id ) ; if ( v != _NULL ) return v ; } return _NULL ; }
40311	public void toggle ( boolean skipAnimation ) { if ( this . mUnfolded ) { this . fold ( skipAnimation ) ; } else { this . unfold ( skipAnimation ) ; } }
40330	public int next ( ) { final int node = _currentNode ; if ( node != NULL ) { _currentNode = getNextAttributeIdentity ( node ) ; return returnNode ( makeNodeHandle ( node ) ) ; } return NULL ; }
40346	private void writeObject ( java . io . ObjectOutputStream s ) throws java . io . IOException { s . writeObject ( mySyntax ) ; s . writeInt ( size ( ) ) ; Enumeration < String > comps = getAll ( ) ; while ( comps . hasMoreElements ( ) ) { s . writeObject ( comps . nextElement ( ) ) ; } }
40355	public void displayError ( LocalizableMessage msg , LocalizableMessage title ) { if ( isCli ( ) ) { System . err . println ( msg ) ; } else { getDialog ( ) . displayError ( msg , title ) ; } }
40368	final boolean addResult ( MembershipException membershipException ) { try { return resultQueue . offer ( membershipException , _NUM , TimeUnit . SECONDS ) ; } catch ( InterruptedException ie ) { return _BOOL ; } }
40385	boolean takeIndexWrapped ( ) { if ( isDetached ( ) ) return _BOOL ; if ( itrs . cycles - prevCycles > _NUM ) { shutdown ( ) ; return _BOOL ; } return _BOOL ; }
40455	public boolean equals ( Object target ) { if ( this == target ) return _BOOL ; if ( target == _NULL || ! getClass ( ) . equals ( target . getClass ( ) ) ) { return _BOOL ; } RuleBasedCollationKey other = ( RuleBasedCollationKey ) target ; return key . equals ( other . key ) ; }
40470	public static void println ( Object o ) { if ( o instanceof char [ ] ) { System . out . println ( ( char [ ] ) o ) ; } else { System . out . println ( o ) ; } }
40478	public void post ( Runnable runnable ) { synchronized ( mQueue ) { mQueue . add ( runnable ) ; if ( mQueue . size ( ) == _NUM ) { scheduleNextLocked ( ) ; } } }
40494	static XMPMeta process ( XMPMetaImpl xmp , ParseOptions options ) throws XMPException { XMPNode tree = xmp . getRoot ( ) ; touchUpDataModel ( xmp ) ; moveExplicitAliases ( tree , options ) ; tweakOldXMP ( tree ) ; deleteEmptySchemas ( tree ) ; return xmp ; }
40496	@ AfterClass public void tearDown ( ) throws Exception { deleteAttrsEntry ( configDN , dsConfigBaseDN ) ; deleteAttrsEntry ( configDN , dsConfigEnforceIntegrity ) ; deleteAttrsEntry ( configDN , dsConfigAttrFiltMapping ) ; replaceAttrEntry ( configDN , dsConfigAttrType , _CHAR seeAlso _CHAR ) ; replaceAttrEntry ( configDN , dsConfigUpdateInterval , _CHAR _NUM seconds _CHAR ) ; TestCaseUtils . clearBackend ( _CHAR userRoot _CHAR ) ; }
40499	public void addConfiguredRedirector ( RedirectorElement redirectorElement ) { if ( this . redirectorElement != _NULL ) { throw new BuildException ( _CHAR Can not have > _NUM nested < redirector > s _CHAR ) ; } else { this . redirectorElement = redirectorElement ; } }
40528	public Object [ ] parse ( String string ) throws ParseException { ParsePosition position = new ParsePosition ( _NUM ) ; Object [ ] result = parse ( string , position ) ; if ( position . getIndex ( ) == _NUM ) { throw new ParseException ( _CHAR Parse failure _CHAR , position . getErrorIndex ( ) ) ; } return result ; }
40644	public synchronized void childChanged ( ChildState cs ) { if ( lastValidOffset == _NULL ) { lastValidOffset = cs ; } else if ( cs . getChildView ( ) . getStartOffset ( ) < lastValidOffset . getChildView ( ) . getStartOffset ( ) ) { lastValidOffset = cs ; } }
40649	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
40684	private Proxy nextProxy ( ) throws IOException { if ( ! hasNextProxy ( ) ) { throw new SocketException ( _CHAR No route to _CHAR + address . url ( ) . host ( ) + _CHAR ; exhausted proxy configurations : _CHAR + proxies ) ; } Proxy result = proxies . get ( nextProxyIndex ++ ) ; resetNextInetSocketAddress ( result ) ; return result ; }
40709	public void removeEnvironment ( String name ) { try { envCtx . unbind ( name ) ; } catch ( NamingException e ) { log . error ( sm . getString ( _CHAR naming . unbindFailed _CHAR , e ) ) ; } }
40724	public void makeVisible ( TreePath path ) { if ( path != _NULL ) { TreePath parentPath = path . getParentPath ( ) ; if ( parentPath != _NULL ) { expandPath ( parentPath ) ; } } }
40727	public void dragOver ( DragSourceDragEvent dsde ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragOver ( dsde ) ; } getDragSource ( ) . processDragOver ( dsde ) ; updateCurrentCursor ( getSourceActions ( ) , dsde . getTargetActions ( ) , OVER ) ; }
40735	public void close ( ) throws IOException { if ( ! closed ) { finish ( ) ; if ( usesDefaultDeflater ) def . end ( ) ; out . close ( ) ; closed = _BOOL ; } }
40807	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
40833	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
40864	private boolean findNodeFromTail ( Node node ) { Node t = tail ; for ( ; ; ) { if ( t == node ) return _BOOL ; if ( t == _NULL ) return _BOOL ; t = t . prev ; } }
40881	protected LayoutManager createLayoutManager ( ) { if ( tabPane . getTabLayoutPolicy ( ) == JTabbedPane . SCROLL_TAB_LAYOUT ) { return new TabbedPaneScrollLayout ( ) ; } else { return new TabbedPaneLayout ( ) ; } }
40908	private void adjust_table ( ) { table_model = new ViaTableModel ( board_frame , resources ) ; table = new JTable ( table_model ) ; main_panel . remove ( scroll_pane ) ; add_table ( ) ; pack ( ) ; board_frame . refresh_windows ( ) ; }
40948	public static Long parseStringAsLong ( String in ) throws IndexParseFieldException { try { return Long . parseLong ( in ) ; } catch ( NumberFormatException e ) { throw new IndexParseFieldException ( in , e ) ; } }
40955	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
40974	public boolean includesSystemIndex ( ) { for ( String index : rebuildList ) { if ( _CHAR dn2id _CHAR . equalsIgnoreCase ( index ) || _CHAR dn2uri _CHAR . equalsIgnoreCase ( index ) ) { return _BOOL ; } } return _BOOL ; }
40975	String formatRomanNumerals ( int level , int num ) { if ( num < _NUM ) { return formatRomanDigit ( level , num ) ; } else { return formatRomanNumerals ( level + _NUM , num / _NUM ) + formatRomanDigit ( level , num % _NUM ) ; } }
40976	protected boolean isPersistable ( Class < ? > clazz ) { for ( int i = _NUM ; i < persistables . length ; i ++ ) { if ( persistables [ i ] == clazz || persistables [ i ] . isAssignableFrom ( clazz ) ) { return _BOOL ; } } return _BOOL ; }
41054	@ Override public Promise < QueryResponse , ResourceException > handleQuery ( Context context , QueryRequest request , final QueryResourceHandler handler ) { try { return connectionFactory . getConnection ( ) . queryAsync ( new UpdateContext ( context ) , copyOfQueryRequest ( request ) . setResourcePath ( updateStore ) , handler ) ; } catch ( ResourceException e ) { return e . asPromise ( ) ; } }
41063	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
41089	public static BinaryValue createBase64 ( byte [ ] bytes ) { BinaryValue value = new BinaryValue ( ) ; value . type = Type . BASE64_STRING ; value . bytes = bytes ; value . base64 = value . getBase64 ( ) ; value . hashCode = value . base64 . hashCode ( ) ; return value ; }
41115	public void scanJars ( ) { JarScanner scanner = JarScannerFactory . getJarScanner ( context ) ; TldScannerCallback callback = new TldScannerCallback ( ) ; scanner . scan ( JarScanType . TLD , context , callback ) ; if ( callback . scanFoundNoTLDs ( ) ) { log . info ( Localizer . getMessage ( _CHAR jsp . tldCache . noTldSummary _CHAR ) ) ; } }
41125	private static RetainFragment findOrCreateRetainFragment ( android . support . v4 . app . FragmentManager fm ) { RetainFragment mRetainFragment = ( RetainFragment ) fm . findFragmentByTag ( TAG ) ; if ( mRetainFragment == _NULL ) { mRetainFragment = new RetainFragment ( ) ; fm . beginTransaction ( ) . add ( mRetainFragment , TAG ) . commitAllowingStateLoss ( ) ; } return mRetainFragment ; }
41140	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
41165	static boolean canPopupOverlapTaskBar ( ) { boolean result = _BOOL ; Toolkit tk = Toolkit . getDefaultToolkit ( ) ; if ( tk instanceof SunToolkit ) { result = ( ( SunToolkit ) tk ) . canPopupOverlapTaskBar ( ) ; } return result ; }
41171	public Map < String , MappedClass > remapClasses ( Map < String , MappedClass > mappings , MappingMode mode ) { for ( MappedClass mc : mappings . values ( ) ) { if ( ! mc . isLibrary ( ) ) { remapClass ( mc , mappings , mode ) ; } } return mappings ; }
41196	public void deleteFilteredRoles ( Set roleDNs ) throws AMException , SSOException { Iterator iter = roleDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String roleDN = ( String ) iter . next ( ) ; AMFilteredRole role = new AMFilteredRoleImpl ( token , roleDN ) ; role . delete ( ) ; } }
41207	public Class < ? > type ( ) { if ( isClass ) { return ( Class < ? > ) object ; } else { return object . getClass ( ) ; } }
41221	public void repaint ( long time , int x , int y , int width , int height ) { if ( RepaintManager . HANDLE_TOP_LEVEL_PAINT ) { RepaintManager . currentManager ( this ) . addDirtyRegion ( this , x , y , width , height ) ; } else { super . repaint ( time , x , y , width , height ) ; } }
41223	private void deleteAccessTokensRefreshToken ( JsonValue token ) throws CoreTokenException { if ( OAUTH_ACCESS_TOKEN . equals ( getAttributeValue ( token , TOKEN_NAME ) ) ) { String refreshTokenId = getAttributeValue ( token , REFRESH_TOKEN ) ; if ( refreshTokenId != _NULL ) { tokenStore . delete ( refreshTokenId ) ; } } }
41275	protected int findByte ( byte value , int pos ) { for ( int i = pos ; i < tail ; i ++ ) { if ( buffer [ i ] == value ) { return i ; } } return - _NUM ; }
41292	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
41296	protected void resetLocation ( int endOffset , int g1 ) { if ( undoLocation != endOffset ) { this . rec . index = undoLocation ; } else { this . rec . index = g1 ; } }
41340	public static boolean isAccessLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isAccessLoggable ( level ) ; } }
41364	public String readLine ( ) throws IOException { synchronized ( lock ) { String l = super . readLine ( skipLF ) ; skipLF = _BOOL ; if ( l != _NULL ) lineNumber ++ ; return l ; } }
41434	public void deleteRoles ( Set roleDNs ) throws AMException , SSOException { Iterator iter = roleDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String roleDN = ( String ) iter . next ( ) ; AMRole role = new AMRoleImpl ( super . token , roleDN ) ; role . delete ( ) ; } }
41461	public V put ( K key , V value ) { typeCheck ( key ) ; int index = key . ordinal ( ) ; Object oldValue = vals [ index ] ; vals [ index ] = maskNull ( value ) ; if ( oldValue == _NULL ) size ++ ; return unmaskNull ( oldValue ) ; }
41505	public void output ( SessionDescription sd , OutputStream out ) throws IOException { if ( out instanceof ObjectOutputStream ) { ObjectOutputStream output = ( ObjectOutputStream ) out ; if ( sd != _NULL ) output . writeObject ( sd ) ; else throw new IOException ( _CHAR The parameter is _NULL _CHAR ) ; } else throw new IOException ( _CHAR The output stream has to be an instance of ObjectOutputStream _CHAR ) ; }
41536	@ Override public void close ( ) throws IOException { if ( ! closed ) { finish ( ) ; inf . end ( ) ; out . close ( ) ; closed = _BOOL ; } }
41545	private String fetchCharsetFromCache ( Client client , Locale loc ) { Map cCache = ( Map ) charsetCache . get ( client . getClientType ( ) ) ; String val = _NULL ; if ( cCache != _NULL ) { val = ( String ) cCache . get ( loc ) ; } return val ; }
41581	public A next ( ) { final A x = elements . head ; if ( elements != last ) { elements = elements . tail ; count -- ; } return x ; }
41584	public void stopAllServers ( boolean shutdown ) { for ( ReplicationServerHandler rsHandler : connectedRSs . values ( ) ) { stopServer ( rsHandler , shutdown ) ; } for ( DataServerHandler dsHandler : connectedDSs . values ( ) ) { stopServer ( dsHandler , shutdown ) ; } }
41610	public Object clone ( ) throws CloneNotSupportedException { InternationalFormatter formatter = ( InternationalFormatter ) super . clone ( ) ; formatter . literalMask = _NULL ; formatter . iterator = _NULL ; formatter . validMask = _BOOL ; formatter . string = _NULL ; return formatter ; }
41614	public static void main ( String [ ] args ) { while ( _BOOL ) { TaskToSchedulePanel p = new TaskToSchedulePanel ( _CHAR TEST TASK _CHAR ) ; GenericDialog dlg = new GenericDialog ( Utilities . createFrame ( ) , p ) ; dlg . setModal ( _BOOL ) ; dlg . setVisible ( _BOOL ) ; } }
41693	public void deleteSubOrganizationalUnits ( Set subOrganizationalUnitDNs ) throws AMException , SSOException { Iterator iter = subOrganizationalUnitDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String subOrganizationalUnitDN = ( String ) iter . next ( ) ; AMOrganizationalUnit subOrgUnit = new AMOrganizationalUnitImpl ( super . token , subOrganizationalUnitDN ) ; subOrgUnit . delete ( ) ; } }
41694	public Object shallowClone ( ) { try { return super . clone ( ) ; } catch ( Exception e ) { return _NULL ; } }
41783	public String nextToken ( ) throws NoSuchElementException , ParseException { if ( this . currentToken == _NULL ) { throw new NoSuchElementException ( _CHAR Iteration already finished . '' ) ; } final String result = this . currentToken ; this . searchPos = findNext ( this . searchPos ) ; return result ; }
41787	public AttributeSet parseDeclaration ( String string ) { try { return parseDeclaration ( new StringReader ( string ) ) ; } catch ( IOException ioe ) { } return _NULL ; }
41791	public void writeExpression ( Expression oldExp ) { Object oldValue = getValue ( oldExp ) ; if ( get ( oldValue ) != _NULL ) { return ; } bindings . put ( oldValue , ( Expression ) cloneStatement ( oldExp ) ) ; writeObject ( oldValue ) ; }
41805	public static UUID parseStringAsUUID ( String in ) throws IndexParseFieldException { try { return UUID . fromString ( in ) ; } catch ( IllegalArgumentException e ) { throw new IndexParseFieldException ( in , e ) ; } }
41834	public Set readAllFederatedProviderID ( String userID ) throws FSAccountMgmtException { if ( SP_PROVIDER_ID != _NULL && SP_PROVIDER_ID . length ( ) != _NUM ) { return readAllFederatedProviderID ( SP_PROVIDER_ID , userID ) ; } else { return readAllFederatedProviderID ( _NULL , userID ) ; } }
41858	public void publishHeartbeat ( DN baseDN , CSN heartbeatCSN ) { if ( ! predicate . isECLEnabledDomain ( baseDN ) ) { return ; } final CSN oldestCSNBefore = getOldestLastAliveCSN ( ) ; lastAliveCSNs . update ( baseDN , heartbeatCSN ) ; tryNotify ( oldestCSNBefore ) ; }
41859	private static int checkTypeArguments ( final String signature , int pos ) { pos = checkChar ( _CHAR , signature , pos ) ; pos = checkTypeArgument ( signature , pos ) ; while ( getChar ( signature , pos ) != _CHAR ) { pos = checkTypeArgument ( signature , pos ) ; } return pos + _NUM ; }
41909	public boolean isMethodHandleInvoke ( ) { final int bits = MH_INVOKE_MODS & ~ Modifier . PUBLIC ; final int negs = Modifier . STATIC ; if ( testFlags ( bits | negs , bits ) && clazz == MethodHandle . class ) { return isMethodHandleInvokeName ( name ) ; } return _BOOL ; }
41920	@ Override public boolean is_IntOctagon ( ) { for ( int index = _NUM ; index < lines_size ( ) ; ++ index ) { PlaLineInt curr_line = tline_get ( index ) ; if ( ! curr_line . is_multiple_of_45_degree ( ) ) return _BOOL ; if ( ! corner_is_bounded ( index ) ) return _BOOL ; } return _BOOL ; }
41923	public JsonValue build ( ) { if ( BuilderType . JSON_SCHEMA == builderType ) { Reject . ifTrue ( properties . isEmpty ( ) , _CHAR There must be at least one property _CHAR ) ; } removePropertiesIfEmpty ( _CHAR definitions _CHAR , jsonValue ) ; removePropertiesIfEmpty ( _CHAR required _CHAR , jsonValue ) ; return jsonValue ; }
41956	public void markCompletelyDirty ( JComponent aComponent ) { RepaintManager delegate = getDelegate ( aComponent ) ; if ( delegate != _NULL ) { delegate . markCompletelyDirty ( aComponent ) ; return ; } addDirtyRegion ( aComponent , _NUM , _NUM , Integer . MAX_VALUE , Integer . MAX_VALUE ) ; }
41992	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeClob ( Clob x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialClob ( x ) ) ; } }
41997	private static boolean isExclusive ( EntitlementSubject subject ) { if ( subject instanceof PolicySubject ) { return ( ( PolicySubject ) subject ) . isExclusive ( ) ; } else { return _BOOL ; } }
42008	protected void redoTo ( UndoableEdit edit ) throws CannotRedoException { boolean done = _BOOL ; while ( ! done ) { UndoableEdit next = edits . elementAt ( indexOfNextAdd ++ ) ; next . redo ( ) ; done = next == edit ; } }
42024	public int hashCode ( ) { int result = _NUM ; int n = members . length ; for ( int i = _NUM ; i < n ; ++ i ) { result += members [ i ] [ _NUM ] + members [ i ] [ _NUM ] ; } return result ; }
42050	public void schemaChanged ( String serviceName , String version ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR IdRepoAttributeValidatorManager . schemaChanged : _CHAR + _CHAR Service name = _CHAR + serviceName ) ; } synchronized ( validatorCache ) { validatorCache . clear ( ) ; } }
42053	void flushBuffer ( ) throws IOException { synchronized ( lock ) { ensureOpen ( ) ; if ( nextChar == _NUM ) return ; out . write ( cb , _NUM , nextChar ) ; nextChar = _NUM ; } }
42056	protected GenericObject next ( ListIterator iterator ) { try { return ( GenericObject ) iterator . next ( ) ; } catch ( NoSuchElementException ex ) { return _NULL ; } }
42059	public void actionPerformed ( ActionEvent ae ) { if ( scrollBar == _NULL || ! scrollBar . getValueIsAdjusting ( ) ) { if ( timer != _NULL ) timer . stop ( ) ; updateSize ( ) ; timer = _NULL ; scrollBar = _NULL ; } }
42079	public static InstructionFragment newInstance ( Recipe recipe , int sectionNumber ) { InstructionFragment fragment = new InstructionFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
42099	private void sendError ( HttpServletRequest request , HttpServletResponse response ) { try { FSUtils . forwardRequest ( request , response , errorPage ) ; } catch ( Exception exp ) { FSUtils . debug . error ( _CHAR FSPreLogin : : sendError _CHAR + _CHAR Error during sending error page _CHAR ) ; } }
42103	private static void recycleMediumWeightPopup ( MediumWeightPopup popup ) { synchronized ( MediumWeightPopup . class ) { List < MediumWeightPopup > mediumPopupCache = getMediumWeightPopupCache ( ) ; if ( mediumPopupCache . size ( ) < MAX_CACHE_SIZE ) { mediumPopupCache . add ( popup ) ; } } }
42117	public static String createPath ( String ... elements ) { StringBuilder result = new StringBuilder ( ) ; for ( String element : elements ) { result . append ( File . pathSeparator ) ; result . append ( element ) ; } return result . toString ( ) ; }
42131	public static void putLong ( String key , long value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putLong ( key , value ) ; editor . apply ( ) ; }
42145	RMIServerImpl newServer ( ) throws IOException { final boolean iiop = isIiopURL ( address , _BOOL ) ; final int port ; if ( address == _NULL ) port = _NUM ; else port = address . getPort ( ) ; if ( iiop ) return newIIOPServer ( attributes ) ; else return newJRMPServer ( attributes , port ) ; }
42178	public static SearchScope valueOf ( String name ) { for ( SearchScope searchScope : ELEMENTS ) { if ( searchScope . name . equals ( name ) ) { return searchScope ; } } return _NULL ; }
42184	private void checkValueType ( CompositeData value ) { if ( value == _NULL ) { throw new NullPointerException ( _CHAR Argument value can not be _NULL . _CHAR ) ; } if ( ! tabularType . getRowType ( ) . isValue ( value ) ) { throw new InvalidOpenTypeException ( _CHAR Argument value _CHAR_CHAR_CHAR_CHAR_CHAR s row type [ _CHAR + tabularType . getRowType ( ) + _CHAR ] . _CHAR ) ; } }
42193	public void flip ( int bitIndex ) { if ( bitIndex < _NUM ) throw new IndexOutOfBoundsException ( _CHAR bitIndex < _NUM : _CHAR + bitIndex ) ; int wordIndex = wordIndex ( bitIndex ) ; expandTo ( wordIndex ) ; words [ wordIndex ] ^= ( _NUM << bitIndex ) ; recalculateWordsInUse ( ) ; checkInvariants ( ) ; }
42221	private boolean hasPort ( List < ServicePort > ports , ServicePort port ) { for ( ServicePort aPort : ports ) { if ( Objects . equals ( port . getPort ( ) , aPort . getPort ( ) ) ) { return _BOOL ; } } return _BOOL ; }
42222	private void mainOutsideEventThread ( String [ ] args ) { displaySplashScreen ( ) ; long splashDisplayStartTime = System . currentTimeMillis ( ) ; constructApplication ( args ) ; sleepIfNecessary ( splashDisplayStartTime ) ; disposeSplashScreen ( ) ; displayApplication ( ) ; }
42254	public static void checkJavaVersion ( ) throws IncompatibleVersionException { try { com . forgerock . opendj . cli . Utils . checkJavaVersion ( ) ; } catch ( ClientException e ) { throw new IncompatibleVersionException ( e . getMessageObject ( ) , e ) ; } }
42309	void notify ( final LocalizableMessage message ) throws ClientException { try { handler . handle ( new Callback [ ] { new TextOutputCallback ( TextOutputCallback . INFORMATION , message . toString ( ) ) } ) ; } catch ( final Exception e ) { throw new ClientException ( ReturnCode . ERROR_UNEXPECTED , ERR_UPGRADE_DISPLAY_NOTIFICATION_ERROR . get ( e . getMessage ( ) ) ) ; } }
42314	private void initXMLTree ( ) throws Exception { updateFilteredTokens ( ) ; ArrayList elements = getElements ( getFilteredTokens ( ) ) ; if ( elements . size ( ) > _NUM ) { throw new Exception ( _CHAR More than one root elements encountered _CHAR ) ; } setRootElement ( ( XMLElement ) elements . get ( _NUM ) ) ; }
42323	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
42324	public boolean checkError ( ) { Writer delegate = out ; if ( delegate == _NULL ) { return ioError ; } flush ( ) ; return ioError || delegate . checkError ( ) ; }
42328	private static void checkTypeSafe ( Object o ) { try { o = ( RoleUnresolved ) o ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( e ) ; } }
42359	public void map ( MessageBytes host , MessageBytes uri , String version , MappingData mappingData ) throws IOException { if ( host . isNull ( ) ) { host . getCharChunk ( ) . append ( defaultHostName ) ; } host . toChars ( ) ; uri . toChars ( ) ; internalMap ( host . getCharChunk ( ) , uri . getCharChunk ( ) , version , mappingData ) ; }
42373	public static WaspDb openOrCreateDatabase ( String path , String name , String password ) { if ( WaspFactory . existsDatabase ( path , name ) ) { return WaspFactory . loadDatabase ( path , name , password ) ; } else { return WaspFactory . createDatabase ( path , name , password ) ; } }
42403	protected void addURL ( URL url ) { try { originalUrls . add ( url ) ; searchList . add ( createSearchURL ( url ) ) ; } catch ( MalformedURLException e ) { } }
42422	@ Override public void close ( ) throws IOException { if ( writer == _NULL ) { encoding = defaultEncoding ; writer = new OutputStreamWriter ( out , encoding ) ; writer . write ( xmlPrologWriter . toString ( ) ) ; } writer . close ( ) ; }
42445	public void dumpResourceConfigs ( Writer writer , boolean showKeys ) throws IOException { try ( AutoCloseableCsvWriter csvWriter = new AutoCloseableCsvWriter ( writer ) ) { csvWriter . writeNext ( CONFIGS_COLUMNS ) ; for ( TypeChunk typeChunk : getTypeChunksBySparsity ( ) ) { csvWriter . writeNext ( dumpResourceConfig ( typeChunk , showKeys ) ) ; } } }
42468	public static void clear ( ) { if ( ( authCtxObjHash != _NULL ) && ( ! authCtxObjHash . isEmpty ( ) ) ) { authCtxObjHash . clear ( ) ; } if ( ( authContextHash != _NULL ) && ( ! authContextHash . isEmpty ( ) ) ) { authContextHash . clear ( ) ; } }
42503	protected void createMBean ( ) { try { jmxPool = new org . apache . tomcat . jdbc . pool . jmx . ConnectionPool ( this ) ; } catch ( Exception x ) { log . warn ( _CHAR Unable to start JMX integration for connection pool . Instance [ '' + getName ( ) + _CHAR ] ca n _CHAR_CHAR , x ) ; } }
42518	Entry nextEntry ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( ) ; } final Entry entry = nextEntry . toEntry ( ) ; nextEntry = _NULL ; return entry ; }
42576	protected void paintHorizontalLine ( Graphics g , JComponent c , int y , int left , int right ) { if ( lineTypeDashed ) { drawDashedHorizontalLine ( g , y , left , right ) ; } else { g . drawLine ( left , y , right , y ) ; } }
42605	public void writeAddRequest ( final int messageID , final AddRequest request ) throws IOException { logger . trace ( _CHAR ENCODE LDAP ADD REQUEST ( messageID = % d , request = % s ) _CHAR , messageID , request ) ; writeMessageHeader ( messageID ) ; { LDAP . writeEntry ( writer , LDAP . OP_TYPE_ADD_REQUEST , request ) ; } writeMessageFooter ( request . getControls ( ) ) ; }
42623	public boolean equals ( Object other ) { if ( ! this . getClass ( ) . equals ( other . getClass ( ) ) ) return _BOOL ; else { TCPMessageChannel that = ( TCPMessageChannel ) other ; if ( this . mySock != that . mySock ) return _BOOL ; else return _BOOL ; } }
42661	private boolean matchFilterAttributeValues ( Attribute a , AttributeType attrType , SearchFilter filter ) { for ( ByteString value : a ) { if ( ! matchFilterAttributeValue ( attrType , value , filter ) ) { return _BOOL ; } } return _BOOL ; }
42716	private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { s . defaultReadObject ( ) ; int n = s . readInt ( ) ; values = new Vector < > ( n ) ; while ( -- n >= _NUM ) { values . addElement ( s . readObject ( ) ) ; } }
42754	public void addAncestorListener ( AncestorListener listener ) { AncestorNotifier ancestorNotifier = getAncestorNotifier ( ) ; if ( ancestorNotifier == _NULL ) { ancestorNotifier = new AncestorNotifier ( this ) ; putClientProperty ( JComponent_ANCESTOR_NOTIFIER , ancestorNotifier ) ; } ancestorNotifier . addAncestorListener ( listener ) ; }
42755	public void remove ( Component comp ) { if ( comp == rootPane ) { super . remove ( comp ) ; } else { getContentPane ( ) . remove ( comp ) ; } }
42756	boolean containsNonHiddenArguments ( ) { for ( final Argument arg : args ) { if ( ! arg . isHidden ( ) ) { return _BOOL ; } } return _BOOL ; }
42772	public String encodeMessage ( String function , Object param ) { Object params [ ] = _NULL ; if ( param != _NULL ) { params = new Object [ _NUM ] ; params [ _NUM ] = param ; } return ( encodeMessage ( function , params ) ) ; }
42776	public static boolean matchResources ( Set < String > resources , ResourceType resourceType , ResourceName resourceComparator ) { for ( String resource : resources ) { if ( matchResource ( resource , resourceType , resourceComparator ) ) { return _BOOL ; } } return _BOOL ; }
42794	@ Override public void close ( ) { if ( ! closed ) { while ( ! stack . isEmpty ( ) ) { pop ( ) ; } closed = _BOOL ; } }
42801	boolean isNormalized ( ) { for ( AttributeValue attrValue : values ) { if ( attrValue . isNormalized ( ) ) { return _BOOL ; } } return _BOOL ; }
42803	public void packAndShow ( ) { pack ( ) ; int minWidth = ( int ) getPreferredSize ( ) . getWidth ( ) ; int minHeight = ( int ) getPreferredSize ( ) . getHeight ( ) ; addComponentListener ( new MinimumSizeComponentListener ( this , minWidth , minHeight ) ) ; Utilities . centerOnComponent ( this , parent ) ; setVisible ( _BOOL ) ; }
42828	@ Override public synchronized void reset ( ) throws IOException { try { in . reset ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
42829	public boolean reset ( ) { boolean wasReset = _BOOL ; if ( super . reset ( ) ) { resetToStream ( ) ; wasReset = _BOOL ; } return wasReset ; }
42847	public boolean containsAll ( Collection < ? > values ) { for ( Object v : values ) { if ( ! contains ( ByteString . valueOfObject ( v ) ) ) { return _BOOL ; } } return _BOOL ; }
42853	private void runWrapped ( final Operation operation ) { try { operation . run ( ) ; } finally { nbRunningOperations . decrementAndGet ( ) ; } }
42855	private File doesLineMatchId ( Map < Pattern , File > contents , String line ) { for ( Pattern pattern : contents . keySet ( ) ) { if ( pattern . matcher ( line ) . matches ( ) ) { return contents . get ( pattern ) ; } } return _NULL ; }
42866	@ Override public void close ( ) throws IOException { synchronized ( lock ) { if ( ! isClosed ( ) ) { in . close ( ) ; buf = _NULL ; } } }
42870	void processPolicyNotification ( PolicyNotification pn ) { try { resourceResultCache . processPolicyNotification ( pn ) ; } catch ( Exception e ) { debug . error ( _CHAR PolicyNotificationHandler . processPolicyNotification ( ) : _CHAR + _CHAR Error while handling policy notification '' , e ) ; } }
42885	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeURL ( java . net . URL url ) throws SQLException { if ( url == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialDatalink ( url ) ) ; } }
42901	@ Override public void close ( ) throws IOException { try { out . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
42937	void endOptional ( boolean successful ) { if ( successful ) { parsed . remove ( parsed . size ( ) - _NUM ) ; } else { parsed . remove ( parsed . size ( ) - _NUM ) ; } }
42949	protected void defaultExceptionHandling ( Object exchange , Throwable ex ) throws Throwable { if ( ex instanceof IPublicException ) { defaultPublicExceptionHandling ( exchange , ( IPublicException ) ex ) ; } else { defaultPrivateExceptionHandling ( exchange , ex ) ; } }
42982	public void changedUpdate ( DocumentEvent e ) { if ( getUpdatePolicy ( ) == NEVER_UPDATE || ( getUpdatePolicy ( ) == UPDATE_WHEN_ON_EDT && ! SwingUtilities . isEventDispatchThread ( ) ) ) { return ; } if ( e instanceof AbstractDocument . UndoRedoDocumentEvent ) { setDot ( e . getOffset ( ) + e . getLength ( ) ) ; } }
43027	public void checkAbandoned ( ) { try { createPool ( ) . checkAbandoned ( ) ; } catch ( SQLException x ) { throw new RuntimeException ( x ) ; } }
43029	public void handleButton2Request ( RequestInvocationEvent event ) { FSSAMLTargetURLsEditViewBean vb = ( FSSAMLTargetURLsEditViewBean ) getViewBean ( FSSAMLTargetURLsEditViewBean . class ) ; backTrail ( ) ; unlockPageTrailForSwapping ( ) ; passPgSessionMap ( vb ) ; populateValues = _BOOL ; vb . forwardTo ( getRequestContext ( ) ) ; }
43076	public void appendByte ( int value ) { if ( size == _NUM || size >= bytes . length ) { int newSize = Math . max ( INITIAL_SIZE , size << _NUM ) ; reserve ( newSize ) ; } bytes [ size ] = ( byte ) value ; size ++ ; }
43089	public static String removeBinaryAttributeFlag ( String attributeName ) { if ( isBinaryAttribute ( attributeName ) ) { return attributeName . substring ( _NUM , attributeName . lastIndexOf ( BINARY_FLAG ) ) ; } else { return attributeName ; } }
43102	public void popContext ( ) { contexts [ contextPos ] . clear ( ) ; contextPos -- ; if ( contextPos < _NUM ) { throw new EmptyStackException ( ) ; } currentContext = contexts [ contextPos ] ; }
43135	private long cancelAnimatorAndGetNewDuration ( long duration , ValueAnimator previousAnimator ) { long newDuration = duration ; if ( previousAnimator != _NULL ) { newDuration = Math . max ( previousAnimator . getDuration ( ) - previousAnimator . getCurrentPlayTime ( ) , newDuration ) ; previousAnimator . cancel ( ) ; } return newDuration ; }
43176	public boolean passed ( ) { boolean passed = _BOOL ; for ( Iterator i = tests . iterator ( ) ; i . hasNext ( ) && passed ; ) { Test t = ( Test ) i . next ( ) ; passed = t . passed ( ) ; } return passed ; }
43179	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
43192	public boolean is_multiple_of_45_degree ( ) { int lmax = plaline_len ( ) ; for ( int index = _NUM ; index < lmax ; ++ index ) { if ( plaline ( index ) . is_multiple_of_45_degree ( ) ) continue ; return _BOOL ; } return _BOOL ; }
43197	public static boolean connect ( FileDescriptor fd , InetAddress inetAddress , int port ) throws SocketException { try { return IoBridge . connect ( fd , inetAddress , port , _NUM ) ; } catch ( SocketTimeoutException ex ) { throw new AssertionError ( ex ) ; } }
43233	private void scrollBy ( int dist ) { if ( directionVertical ( ) ) { mRecyclerView . scrollBy ( _NUM , dist ) ; } else { mRecyclerView . scrollBy ( dist , _NUM ) ; } }
43295	protected int checkVerticalKey ( int key , String message ) { if ( ( key == TOP ) || ( key == CENTER ) || ( key == BOTTOM ) ) { return key ; } else { throw new IllegalArgumentException ( message ) ; } }
43310	private static void checkTypeSafe ( Object o ) { try { o = ( Role ) o ; } catch ( ClassCastException e ) { throw new IllegalArgumentException ( e ) ; } }
43317	public static void putInt ( String key , int value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putInt ( key , value ) ; editor . apply ( ) ; }
43325	public static String convertMime2JavaEncoding ( String encoding ) { for ( int i = _NUM ; i < _encodings . length ; ++ i ) { if ( _encodings [ i ] . name . equalsIgnoreCase ( encoding ) ) { return _encodings [ i ] . javaName ; } } return encoding ; }
43351	protected void clearOrCreateWindow ( String name ) { if ( mWindow == _NULL ) { mWindow = new CursorWindow ( name ) ; } else { mWindow . clear ( ) ; } }
43357	private static boolean containsCertNicknameErrorMessage ( Collection < LocalizableMessage > msgs ) { for ( final LocalizableMessage msg : msgs ) { if ( StaticUtils . hasDescriptor ( msg , ERR_INSTALLDS_CERTNICKNAME_NOT_FOUND ) || StaticUtils . hasDescriptor ( msg , ERR_INSTALLDS_MUST_PROVIDE_CERTNICKNAME ) ) { return _BOOL ; } } return _BOOL ; }
43375	protected void deployApps ( ) { File appBase = host . getAppBaseFile ( ) ; File configBase = host . getConfigBaseFile ( ) ; String [ ] filteredAppPaths = filterAppPaths ( appBase . list ( ) ) ; deployDescriptors ( configBase , configBase . list ( ) ) ; deployWARs ( appBase , filteredAppPaths ) ; deployDirectories ( appBase , filteredAppPaths ) ; }
43379	public void deleteRoles ( Set roleDNs ) throws AMException , SSOException { Iterator iter = roleDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String roleDN = ( String ) iter . next ( ) ; AMRole role = new AMRoleImpl ( super . token , roleDN ) ; role . delete ( ) ; } }
43411	private void destroyInternalSession ( SessionID sessionID ) { InternalSession sess = sessionAccessManager . removeInternalSession ( sessionID ) ; if ( sess != _NULL && sess . getState ( ) != INVALID ) { signalRemove ( sess , SessionEventType . DESTROY ) ; sessionAuditor . auditActivity ( sess . toSessionInfo ( ) , AM_SESSION_DESTROYED ) ; } sessionAccessManager . removeSessionId ( sessionID ) ; }
43458	public String normalizeSourceId ( String aSourceId ) { if ( ! isSourceCaseSensitive ( ) ) { return ( aSourceId == _NULL ? _NULL : aSourceId . toLowerCase ( ) ) ; } else { return aSourceId ; } }
43488	public T create ( String realm ) throws SMSException , SSOException { T service = serviceCache . get ( realm ) ; if ( service == _NULL ) { service = factory . create ( serviceConfigManager , realm ) ; serviceCache . putIfAbsent ( realm , service ) ; } return serviceCache . get ( realm ) ; }
43513	private boolean delete ( WriteableTransaction txn , DN dn ) throws StorageRuntimeException { ByteString key = toKey ( dn ) ; if ( txn . delete ( getName ( ) , key ) ) { containsReferrals = containsReferrals ( txn ) ; return _BOOL ; } return _BOOL ; }
43515	private void clearProjectLookup ( ) { if ( projectLookup != _NULL ) { Collection < ? extends Project > projects = projectLookup . lookupAll ( Project . class ) ; for ( Project project : projects ) { content . remove ( project ) ; } } }
43523	public static MappedMember findMethodOverride ( MappedMember mm ) { if ( mm . doesOverride ( ) ) { for ( MappedMember mm2 : mm . getOverrides ( ) ) { return findMethodOverride ( mm2 ) ; } } return mm ; }
43555	public static Object convertByteString ( ByteString bs ) { try { return new String ( bs . toCharArray ( ) ) ; } catch ( Exception e ) { return bs . toByteArray ( ) ; } }
43595	public boolean hasAttributeType ( AttributeType attributeType ) { for ( AVA ava : avas ) { if ( ava . getAttributeType ( ) . equals ( attributeType ) ) { return _BOOL ; } } return _BOOL ; }
43603	public boolean endsWith ( Name n ) { if ( n == _NULL ) { return _BOOL ; } int len1 = rdns . size ( ) ; int len2 = n . size ( ) ; return ( len1 >= len2 && matches ( len1 - len2 , len1 , n ) ) ; }
43607	private void createRenamedFileNode ( final Element rootElement ) { Element element = creator . getDocument ( ) . createElement ( _CHAR RenamedFile _CHAR ) ; element . setAttribute ( _CHAR name _CHAR , this . fileName ) ; if ( renamed ) { element . setAttribute ( _CHAR newName _CHAR , this . newFileName ) ; } rootElement . appendChild ( element ) ; }
43609	public synchronized void start ( ) throws Exception { if ( isRunning ) { return ; } sslContext = new SSLContextBuilder ( ) . getSSLContext ( ) ; listener = new LDAPListener ( findFreeSocketAddress ( ) , getInstance ( ) , Options . defaultOptions ( ) . set ( CONNECT_MAX_BACKLOG , _NUM ) ) ; isRunning = _BOOL ; }
43637	public NamePath withoutHead ( ) { List < String > newPathPieces = new ArrayList < > ( ) ; newPathPieces . addAll ( pathPieces ) ; if ( ! newPathPieces . isEmpty ( ) ) { newPathPieces . remove ( newPathPieces . size ( ) - _NUM ) ; } return new NamePath ( newPathPieces ) ; }
43686	private void runOnEventThread ( Runnable r ) { if ( SwingUtilities . isEventDispatchThread ( ) ) { r . run ( ) ; } else { SwingUtilities . invokeLater ( r ) ; } }
43724	public void deleteAssignableDynamicGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMAssignableDynamicGroup group = new AMAssignableDynamicGroupImpl ( token , groupDN ) ; group . delete ( ) ; } }
43732	public boolean hasMember ( Guid guid ) throws UMSException { Principal principal = getPrincipal ( ) ; if ( principal == _NULL ) { throw new IllegalArgumentException ( i18n . getString ( IUMSConstants . BAD_PRINCIPAL_HDL ) ) ; } PersistentObject member = UMSObject . getObject ( principal , guid ) ; return hasMember ( member ) ; }
43815	public int hashCode ( ) { int hash = mask ; if ( rangeSet != _NULL ) { hash & = CONTEXTUAL_MASK ; hash ^= rangeSet . hashCode ( ) ; } return hash ; }
43820	public void recycle ( ) { jspConfig . isJspConfigSet = _BOOL ; sessionConfig . isSessionConfigSet = _BOOL ; loginConfig . isLoginConfigSet = _BOOL ; name . isNameSet = _BOOL ; absoluteOrdering . isAbsoluteOrderingSet = _BOOL ; relativeOrdering . isRelativeOrderingSet = _BOOL ; }
43845	public void handleMessage ( @ NotNull IUser user , @ NotNull TLMessage message ) { try { handleMessageInternal ( user , message . getMessage ( ) ) ; } catch ( RpcException e ) { BotLogger . severe ( LOGTAG , e ) ; } }
43865	public static void putInt ( final String key , final int value ) { try { systemRoot . putInt ( fixKey ( key ) , value ) ; } catch ( final Exception e ) { System . err . print ( e ) ; } }
43872	public boolean add ( Object o ) { if ( nodes . contains ( o ) ) { return _BOOL ; } DigraphNode node = new DigraphNode ( o ) ; poNodes . put ( o , node ) ; return _BOOL ; }
43881	private ByteOrderMark find ( ) { for ( ByteOrderMark bom : boms ) { if ( matches ( bom ) ) { return bom ; } } return _NULL ; }
43913	protected boolean removeDescendantSelectedPaths ( TreePath path , boolean includePath ) { TreePath [ ] toRemove = getDescendantSelectedPaths ( path , includePath ) ; if ( toRemove != _NULL ) { getSelectionModel ( ) . removeSelectionPaths ( toRemove ) ; return _BOOL ; } return _BOOL ; }
43923	protected void updateMetrics ( ) { Component host = getContainer ( ) ; Font f = host . getFont ( ) ; if ( font != f ) { calculateLongestLine ( ) ; tabSize = getTabSize ( ) * metrics . charWidth ( _CHAR ) ; } }
43935	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
43943	public String nextLine ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( _CHAR No more lines _CHAR ) ; } String currentLine = cachedLine ; cachedLine = _NULL ; return currentLine ; }
43948	public String toString ( ) { StringBuilder a = new StringBuilder ( ) ; String separator = _CHAR , '' ; for ( CoreTokenField field : getReturnFields ( ) ) { a . append ( field . toString ( ) ) . append ( separator ) ; } return MessageFormat . format ( _CHAR TokenFilter : Filter : [ { _NUM } ] Attributes : { _NUM } _CHAR , query , a ) ; }
43952	public static Integer integerValue ( Long V ) throws SnmpStatusException { long v = V . longValue ( ) ; if ( v > ( pow ( _NUM , _NUM ) - _NUM ) ) { throw new SnmpStatusException ( _CHAR Returned intrumented value size too big _CHAR ) ; } Integer ret = new Integer ( V . intValue ( ) ) ; return ret ; }
43983	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case MENU_HELP : help ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
44005	TemplateEntry nextEntry ( ) { if ( ! hasNext ( ) ) { throw new NoSuchElementException ( ) ; } final TemplateEntry entry = nextEntry ; nextEntry = _NULL ; return entry ; }
44016	public static long parseLong ( byte [ ] bytes , int startIndex , int endIndex ) { long l = _NUM ; for ( int i = startIndex ; i < endIndex ; i ++ ) { l <<= _NUM ; l |= bytes [ i ] & _NUM ; } return l ; }
44018	public static InstructionFragment newInstance ( Recipe recipe , int sectionNumber ) { InstructionFragment fragment = new InstructionFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
44023	protected void unconfigureEditor ( ) { if ( focusListener != _NULL ) { editor . removeFocusListener ( focusListener ) ; } editor . removePropertyChangeListener ( propertyChangeListener ) ; editor . removeFocusListener ( getHandler ( ) ) ; comboBox . getEditor ( ) . removeActionListener ( getHandler ( ) ) ; }
44040	public Subject removeSubject ( String subjectName ) { Subject subject = _NULL ; QualifiedSubject qualifiedSubject = ( QualifiedSubject ) users . remove ( subjectName ) ; if ( qualifiedSubject != _NULL ) { subject = qualifiedSubject . getSubject ( ) ; } return subject ; }
44056	public void draw ( java . awt . Graphics p_graphics ) { PlaPointFloat current_mouse_position = i_brd . get_current_mouse_position ( ) ; if ( current_mouse_position == _NULL ) { return ; } circle_radius = circle_center . distance ( current_mouse_position ) ; i_brd . gdi_context . draw_circle ( circle_center , circle_radius , _NUM , java . awt . Color . white , p_graphics , _NUM ) ; }
44077	public void dragExit ( DragSourceEvent dse ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragExit ( dse ) ; } getDragSource ( ) . processDragExit ( dse ) ; updateCurrentCursor ( DnDConstants . ACTION_NONE , DnDConstants . ACTION_NONE , DEFAULT ) ; }
44078	public void accept ( final ClassVisitor cv ) { String [ ] exceptions = new String [ this . exceptions . size ( ) ] ; this . exceptions . toArray ( exceptions ) ; MethodVisitor mv = cv . visitMethod ( access , name , desc , signature , exceptions ) ; if ( mv != _NULL ) { accept ( mv ) ; } }
44139	protected void handleOutput ( String output , int priority ) { if ( priority == Project . MSG_ERR ) { handleErrorOutput ( output ) ; } else { handleOutput ( output ) ; } }
44145	protected void stop ( ) { if ( logger . isLoggingEnabled ( LogLevels . TRACE_DEBUG ) ) logger . logDebug ( _CHAR Exiting provider _CHAR ) ; for ( Iterator it = listeningPoints . values ( ) . iterator ( ) ; it . hasNext ( ) ; ) { ListeningPointImpl listeningPoint = ( ListeningPointImpl ) it . next ( ) ; listeningPoint . removeSipProvider ( ) ; } this . eventScanner . stop ( ) ; }
44177	public String toString ( ) { if ( userObject == _NULL ) { return _CHAR _CHAR ; } else { return userObject . toString ( ) ; } }
44180	public static char [ ] readPassword ( ) throws ClientException { try { return System . console ( ) . readPassword ( ) ; } catch ( IOError e ) { throw ClientException . adaptInputException ( e ) ; } }
44246	public synchronized void enableAttribute ( String name ) throws java . lang . IllegalArgumentException { if ( name == _NULL ) { throw new java . lang . IllegalArgumentException ( _CHAR The name can not be _NULL . _CHAR ) ; } if ( ! enabledAttributes . contains ( name ) ) { enabledAttributes . addElement ( name ) ; } }
44255	protected void fill ( ) throws IOException { ensureOpen ( ) ; len = in . read ( buf , _NUM , buf . length ) ; if ( len == - _NUM ) { throw new EOFException ( _CHAR Unexpected end of ZLIB input stream _CHAR ) ; } inf . setInput ( buf , _NUM , len ) ; }
44258	public void writeDeleteRequest ( final int messageID , final DeleteRequest request ) throws IOException { logger . trace ( _CHAR ENCODE LDAP DELETE REQUEST ( messageID = % d , request = % s ) _CHAR , messageID , request ) ; writeMessageHeader ( messageID ) ; { writer . writeOctetString ( LDAP . OP_TYPE_DELETE_REQUEST , request . getName ( ) . toString ( ) ) ; } writeMessageFooter ( request . getControls ( ) ) ; }
44305	public int hashCode ( ) { int hash = _NUM ; for ( int i = _NUM ; i < rdns . size ( ) ; i ++ ) { Rdn rdn = rdns . get ( i ) ; hash += rdn . hashCode ( ) ; } return hash ; }
44359	@ Override public Vector clone ( ) { try { return ( Vector ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new Error ( e ) ; } }
44375	public void writeAttribute ( final String key , final Object defaultValue ) throws IOException { if ( key . equals ( _CHAR id _CHAR ) ) { FacesContext . getCurrentInstance ( ) . getResponseWriter ( ) . writeAttribute ( _CHAR id _CHAR , this . component . getClientId ( ) , _NULL ) ; } else { JKJsfUtil . writeAttribue ( getComponent ( ) , key , defaultValue ) ; } }
44389	public String addListener ( ConfigurationListener listener ) throws ConfigurationException { if ( hasOrgSchema ) { return scm . addListener ( new ServiceListenerImpl ( listener , componentName ) ) ; } else { return ssm . addListener ( new ServiceListenerImpl ( listener , componentName ) ) ; } }
44397	public void flush ( ) throws IOException { for ( Entry < String , Aggregator > entry : getFlushMap ( ) . entrySet ( ) ) { if ( store != _NULL ) { store . persist ( taskId , entry . getKey ( ) , entry . getValue ( ) ) ; } entry . getValue ( ) . reset ( ) ; } }
44415	private int readContent ( InputStream is ) { int nread = _NUM ; log ( _CHAR Read content _CHAR ) ; String lengthString = headers . get ( requestHeaders [ REQ_CONTENT_LENGTH ] ) ; int length = new Integer ( lengthString ) . intValue ( ) ; length = readData ( is , length ) ; return length ; }
44449	public void deleteDynamicGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMDynamicGroup group = new AMDynamicGroupImpl ( token , groupDN ) ; group . delete ( ) ; } }
44468	public void translate ( int x , int y ) { if ( debugLog ( ) ) { info ( ) . log ( toShortString ( ) + _CHAR Translating by : _CHAR + new Point ( x , y ) ) ; } xOffset += x ; yOffset += y ; graphics . translate ( x , y ) ; }
44491	public Duration minus ( Duration duration ) { long secsToSubtract = duration . getSeconds ( ) ; int nanosToSubtract = duration . getNano ( ) ; if ( secsToSubtract == Long . MIN_VALUE ) { return plus ( Long . MAX_VALUE , - nanosToSubtract ) . plus ( _NUM , _NUM ) ; } return plus ( - secsToSubtract , - nanosToSubtract ) ; }
44498	protected AbstractConnPool createConnectionPool ( final HttpParams params ) { AbstractConnPool acp = new ConnPoolByRoute ( connOperator , params ) ; boolean conngc = _BOOL ; if ( conngc ) { acp . enableConnectionGC ( ) ; } return acp ; }
44511	public void handleButton1Request ( RequestInvocationEvent event ) throws ModelControlException { String subSchema = ( String ) getDisplayFieldValue ( RB_SUBCONFIG ) ; SubConfigAddViewBean vb = ( SubConfigAddViewBean ) getViewBean ( SubConfigAddViewBean . class ) ; unlockPageTrailForSwapping ( ) ; passPgSessionMap ( vb ) ; vb . setPageSessionAttribute ( AMServiceProfile . PG_SESSION_SUB_SCHEMA_NAME , subSchema ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
44524	public CMSSignedData generate ( CMSProcessable content , boolean encapsulate , String sigProvider ) throws NoSuchAlgorithmException , NoSuchProviderException , CMSException { if ( content instanceof CMSTypedData ) { return this . generate ( ( ( CMSTypedData ) content ) . getContentType ( ) . getId ( ) , content , encapsulate , sigProvider ) ; } else { return this . generate ( DATA , content , encapsulate , sigProvider ) ; } }
44540	private Map readCurrentState ( String dn ) { try { return read ( AccessController . doPrivileged ( AdminTokenAction . getInstance ( ) ) , dn ) ; } catch ( SMSException | SSOException e ) { return _NULL ; } }
44556	public Node item ( int i ) { int count = _NUM ; for ( int n = dtm . getFirstAttribute ( element ) ; n != - _NUM ; n = dtm . getNextAttribute ( n ) ) { if ( count == i ) return dtm . getNode ( n ) ; else ++ count ; } return _NULL ; }
44571	public static < T > LinkedHashSet < T > asOrderedSet ( T ... values ) { if ( values == _NULL ) { return new LinkedHashSet < T > ( _NUM ) ; } else { return new LinkedHashSet < T > ( Arrays . asList ( values ) ) ; } }
44599	public static Remote toStub ( Remote obj ) throws NoSuchObjectException { if ( obj instanceof RemoteStub || ( obj != _NULL && Proxy . isProxyClass ( obj . getClass ( ) ) && Proxy . getInvocationHandler ( obj ) instanceof RemoteObjectInvocationHandler ) ) { return obj ; } else { return sun . rmi . transport . ObjectTable . getStub ( obj ) ; } }
44602	public boolean validate ( Set < String > values ) { for ( String value : values ) { if ( ! validate ( value ) ) { return _BOOL ; } } return _BOOL ; }
44632	protected boolean scrollTop ( TextView widget , Spannable buffer ) { final Layout layout = widget . getLayout ( ) ; if ( getTopLine ( widget ) >= _NUM ) { Touch . scrollTo ( widget , layout , widget . getScrollX ( ) , layout . getLineTop ( _NUM ) ) ; return _BOOL ; } return _BOOL ; }
44653	public void push ( final String value ) { if ( value == _NULL ) { mv . visitInsn ( Opcodes . ACONST_NULL ) ; } else { mv . visitLdcInsn ( value ) ; } }
44677	public Set < String > objectsChanged ( int time ) throws RemoteException { initializeCacheSize ( ) ; Set < String > answer = collectChangesFromCache ( time , cache ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR DirectoryManagerImpl : objectsChanged in time : _CHAR + time + _CHAR + _NUM minutes : \ n _CHAR + answer ) ; } return answer ; }
44689	@ Override public void close ( ) throws IOException { if ( ! closed ) { inf . end ( ) ; closed = _BOOL ; eof = _BOOL ; super . close ( ) ; } }
44706	protected int CalcBias ( int Offset , int Font ) { seek ( Offset ) ; int nSubrs = getCard16 ( ) ; if ( fonts [ Font ] . CharstringType == _NUM ) return _NUM ; else if ( nSubrs < _NUM ) return _NUM ; else if ( nSubrs < _NUM ) return _NUM ; else return _NUM ; }
44709	public static void initPackage ( String packageName ) throws IOException { Logger logger = Logger . getLogger ( packageName ) ; if ( disableLoggingToConsole ( ) ) { logger . setUseParentHandlers ( _BOOL ) ; } logger . addHandler ( fileHandler ) ; logger . info ( getInitialLogRecord ( ) ) ; }
44715	public TopologyMsg createTopologyMsgForRS ( ) { List < DSInfo > dsInfos = new ArrayList < > ( ) ; for ( DataServerHandler dsHandler : connectedDSs . values ( ) ) { dsInfos . add ( dsHandler . toDSInfo ( ) ) ; } List < RSInfo > rsInfos = newArrayList ( toRSInfo ( localReplicationServer , generationId ) ) ; return new TopologyMsg ( dsInfos , rsInfos ) ; }
44719	private boolean matches ( ByteOrderMark bom ) { for ( int i = _NUM ; i < bom . length ( ) ; i ++ ) { if ( bom . get ( i ) != firstBytes [ i ] ) { return _BOOL ; } } return _BOOL ; }
44723	public static Map toMap ( Object [ ] keys , Object [ ] values ) { Map map = new HashMap < > ( ) ; int i = _NUM ; for ( Object key : keys ) { map . put ( key , values [ i ++ ] ) ; } return map ; }
44729	public Graphics create ( ) { DebugGraphics debugGraphics ; debugGraphics = new DebugGraphics ( ) ; debugGraphics . graphics = graphics . create ( ) ; debugGraphics . debugOptions = debugOptions ; debugGraphics . buffer = buffer ; return debugGraphics ; }
44741	@ Override public void body ( String namespace , String name , String bodyText ) throws Exception { if ( attributeName == _NULL && ! fromStack ) { if ( bodyTextStack == _NULL ) { bodyTextStack = new ArrayStack < > ( ) ; } bodyTextStack . push ( bodyText . trim ( ) ) ; } }
44745	public static long gauge32Value ( long v ) { if ( v > ( pow ( _NUM , _NUM ) - _NUM ) ) { return ( pow ( _NUM , _NUM ) - _NUM ) ; } else { return v ; } }
44771	public void startElement ( String elementNamespaceURI , String elementLocalName , String elementName ) throws SAXException { if ( m_needToCallStartDocument ) startDocumentInternal ( ) ; if ( m_tracer != _NULL ) { super . fireStartElem ( elementName ) ; this . firePseudoAttributes ( ) ; } return ; }
44788	private void stopScan ( ) { if ( mIsScanning ) { mScanButton . setText ( R . string . scanner_action_scan ) ; final BluetoothLeScannerCompat scanner = BluetoothLeScannerCompat . getScanner ( ) ; scanner . stopScan ( scanCallback ) ; mIsScanning = _BOOL ; } }
44863	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
44875	public static SOAPElementFactory newInstance ( ) throws SOAPException { try { return new SOAPElementFactory ( SOAPFactory . newInstance ( ) ) ; } catch ( Exception ex ) { throw new SOAPException ( _CHAR Unable to create SOAP Element Factory : _CHAR + ex . getMessage ( ) ) ; } }
44895	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( nonGitDirectory ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + nonGitDirectory ) ; } }
44948	public void writeUnbindRequest ( final int messageID , final UnbindRequest request ) throws IOException { logger . trace ( _CHAR ENCODE LDAP UNBIND REQUEST ( messageID = % d , request = % s ) _CHAR , messageID , request ) ; writeMessageHeader ( messageID ) ; { writer . writeNull ( LDAP . OP_TYPE_UNBIND_REQUEST ) ; } writeMessageFooter ( request . getControls ( ) ) ; }
44956	public void initialize ( KeyProvider keyProvider ) { if ( keyProvider == _NULL ) { FSUtils . debug . error ( _CHAR FSSignatureProvider . initialize : Key Provider _CHAR + _CHAR is _NULL _CHAR ) ; } else { keystore = keyProvider ; } }
44992	public static void saveCurrentViewChecksum ( ) { final String currentView = JKJsfUtil . getCurrentView ( ) ; if ( currentView == _NULL ) { throw new IllegalStateException ( _CHAR current view is _NULL _CHAR ) ; } final long checksum = JKJsfUtil . calculateCurrentViewChecksum ( ) ; JKJsfUtil . getSessionMap ( ) . put ( JKJsfUtil . getChecksumKey ( currentView ) , checksum ) ; }
45000	public static boolean isErrorLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isErrorLoggable ( level ) ; } }
45004	static void rdf_RDF ( XMPMetaImpl xmp , Node rdfRdfNode ) throws XMPException { if ( rdfRdfNode . hasAttributes ( ) ) { rdf_NodeElementList ( xmp , xmp . getRoot ( ) , rdfRdfNode ) ; } else { throw new XMPException ( _CHAR Invalid attributes of rdf : RDF element _CHAR , BADRDF ) ; } }
45035	public void deleteStaticGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMStaticGroup group = new AMStaticGroupImpl ( token , groupDN ) ; group . delete ( ) ; } }
45037	protected void tearDown ( ) { try { ds . close ( ) ; sds . close ( ) ; } catch ( Exception e ) { } }
45056	public boolean hasName ( final String name ) { for ( final String n : names ) { if ( n . equalsIgnoreCase ( name ) ) { return _BOOL ; } } return _BOOL ; }
45074	@ Override public void save ( User u ) { if ( this . u == _NULL ) { this . u = getUser ( _NUM ) ; } this . u . setId ( u . getId ( ) ) ; this . u . setFirstName ( u . getFirstName ( ) ) ; this . u . setLastName ( u . getLastName ( ) ) ; }
45081	@ BeforeClass public static void beforeClass ( ) throws Exception { RestAssured . baseURI = BASE_URI ; RestAssured . port = PORT ; RestAssured . basePath = _CHAR / databases _CHAR ; logger . debug ( _CHAR Loading RestExpress Environment ... _CHAR ) ; f = Fixtures . getInstance ( ) ; RestExpressManager . getManager ( ) . ensureRestExpressRunning ( ) ; }
45082	public static void makeVersionInfoBits ( int version , BitVector bits ) throws WriterException { bits . appendBits ( version , _NUM ) ; int bchCode = calculateBCHCode ( version , VERSION_INFO_POLY ) ; bits . appendBits ( bchCode , _NUM ) ; if ( bits . size ( ) != _NUM ) { throw new WriterException ( _CHAR should not happen but we got : _CHAR + bits . size ( ) ) ; } }
45084	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
45094	public static void putString ( String key , String value ) { if ( mSharedPreferences == _NULL ) { return ; } Editor editor = mSharedPreferences . edit ( ) ; editor . putString ( key , value ) ; editor . apply ( ) ; }
45108	public void addListener ( Object session , SessionListener listener ) throws SessionException { try { ( ( SSOToken ) session ) . addSSOTokenListener ( new SSOTokenListenerImpl ( session , listener ) ) ; } catch ( SSOException se ) { throw new SessionException ( se ) ; } }
45123	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
45134	private void readObject ( ObjectInputStream stream ) throws IOException , ClassNotFoundException { stream . defaultReadObject ( ) ; if ( gdate == _NULL ) { gdate = ( BaseCalendar . Date ) gcal . newCalendarDate ( getZone ( ) ) ; cachedFixedDate = Long . MIN_VALUE ; } setGregorianChange ( gregorianCutover ) ; }
45137	private ClusterMonitor resolveClusterMonitor ( ) throws Exception { if ( isPartOfCluster ( ) ) { return new MultiServerClusterMonitor ( InjectorHolder . getInstance ( ForeignSessionHandler . class ) , sessionDebug , serviceConfig , serverConfig ) ; } else { return new SingleServerClusterMonitor ( ) ; } }
45171	private void onTLMessage ( @ NotNull TLMessage message ) { if ( message . hasFromId ( ) ) { final IUser user = databaseManager . getUserById ( message . getFromId ( ) ) ; if ( user != _NULL ) { this . tlMessageHandler . onTLMessage ( message ) ; } } }
45178	public void characters ( String characters ) throws SAXException { final int length = characters . length ( ) ; if ( length > m_charsBuff . length ) { m_charsBuff = new char [ length * _NUM + _NUM ] ; } characters . getChars ( _NUM , length , m_charsBuff , _NUM ) ; characters ( m_charsBuff , _NUM , length ) ; }
45238	private boolean dismissNoAntennaDialog ( ) { NoAntennaDialog newFragment = ( NoAntennaDialog ) mFragmentManager . findFragmentByTag ( TAG_NO_ANTENNA ) ; if ( _NULL != newFragment ) { newFragment . dismissAllowingStateLoss ( ) ; return _BOOL ; } return _BOOL ; }
45240	private File file ( String id ) throws IOException { if ( this . directory == _NULL ) { return _NULL ; } String filename = id + FILE_EXT ; File file = new File ( directory ( ) , filename ) ; return file ; }
45260	public boolean equals ( Object obj ) { if ( this == obj ) return _BOOL ; if ( this == POINT_INFINITY ) return _BOOL ; if ( obj instanceof ECPoint ) { return ( ( x . equals ( ( ( ECPoint ) obj ) . x ) ) && ( y . equals ( ( ( ECPoint ) obj ) . y ) ) ) ; } return _BOOL ; }
45268	public boolean writeEntries ( Collection < Entry > entries ) throws IOException , LDIFException { for ( Entry entry : entries ) { if ( ! writeEntry ( entry ) ) { return _BOOL ; } } return _BOOL ; }
45312	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
45354	public KeyStroke [ ] keys ( ) { if ( arrayTable == _NULL ) { return _NULL ; } KeyStroke [ ] keys = new KeyStroke [ arrayTable . size ( ) ] ; arrayTable . getKeys ( keys ) ; return keys ; }
45366	public void lineTo ( float x , float y ) { if ( currentPoint == _NULL ) { throw new RuntimeException ( START_PATH_ERR_MSG ) ; } Point targetPoint = new Point ( x , y ) ; getLastSubpath ( ) . addSegment ( new Line ( currentPoint , targetPoint ) ) ; currentPoint = targetPoint ; }
45388	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
45402	private void initializeBackGroundProcessing ( ) { if ( backgroundThread == _NULL ) { DirectoryServer . registerShutdownListener ( this ) ; stopRequested = _BOOL ; backgroundThread = new BackGroundThread ( ) ; backgroundThread . start ( ) ; } }
45421	public boolean validate ( Set < String > values ) { for ( String value : values ) { if ( ! validate ( value ) ) { return _BOOL ; } } return _BOOL ; }
45428	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
45474	static void createDirectory ( final String directory ) throws IOException { File dir = new File ( directory ) ; if ( ! dir . exists ( ) ) { if ( ! dir . mkdirs ( ) ) { throw new IOException ( _CHAR Failed to create directory : _CHAR + directory ) ; } } }
45496	public static boolean canWrite ( String path ) { final File file = new File ( path ) ; if ( file . exists ( ) ) { return file . canWrite ( ) ; } final File parentFile = file . getParentFile ( ) ; return parentFile != _NULL && parentFile . canWrite ( ) ; }
45503	public void printIndent ( int indentLevel ) { String indent = _CHAR _CHAR ; indentLevel = indentLevel * INDENT_WIDTH ; for ( int i = _NUM ; i < indentLevel ; i ++ ) { indent = indent + _CHAR _CHAR ; } writer . print ( indent ) ; }
45508	public void lostOwnership ( Clipboard clipboard , Transferable contents ) { if ( ownsSelection ) { ownsSelection = _BOOL ; if ( component != _NULL && ! component . hasFocus ( ) ) { setSelectionVisible ( _BOOL ) ; } } }
45521	protected byte [ ] computeSHAdigest ( final byte [ ] value ) { try { return MessageDigest . getInstance ( _CHAR SHA _CHAR ) . digest ( value ) ; } catch ( Exception e ) { throw new UnsupportedOperationException ( e . toString ( ) ) ; } }
45522	public boolean beginContentStaticWarningDisplay ( ChildDisplayEvent event ) { lockWarning = ac . getLockoutMsg ( ) ; accountLocked = ac . isLockedOut ( ) ; if ( loginDebug . messageEnabled ( ) ) { loginDebug . message ( _CHAR lock warning message is : _CHAR + lockWarning ) ; } return ( ( lockWarning != _NULL ) && ( lockWarning . length ( ) > _NUM ) ) ; }
45533	protected byte [ ] serializeSessionId ( String sessionId ) throws IOException { ByteArrayOutputStream bos = new ByteArrayOutputStream ( ) ; ObjectOutputStream oos = new ObjectOutputStream ( bos ) ; oos . writeUTF ( sessionId ) ; oos . flush ( ) ; oos . close ( ) ; return bos . toByteArray ( ) ; }
45580	public StringBuilder encodeBody ( StringBuilder retval ) { if ( subject != _NULL ) { return retval . append ( subject ) ; } else { return retval . append ( _CHAR _CHAR ) ; } }
45583	public void handleButton3Request ( RequestInvocationEvent event ) { FSSAMLServiceViewBean vb = ( FSSAMLServiceViewBean ) getViewBean ( FSSAMLServiceViewBean . class ) ; backTrail ( ) ; unlockPageTrailForSwapping ( ) ; passPgSessionMap ( vb ) ; vb . setValues ( ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
45586	public Collection < PdfObject > values ( boolean asDirects ) { if ( asDirects ) { return values ( ) ; } else { return map . values ( ) ; } }
45590	public void seekToPosition ( final long filePosition ) throws ChangelogException { try { reader . seek ( filePosition ) ; } catch ( IOException e ) { throw new ChangelogException ( ERR_CHANGELOG_UNABLE_TO_SEEK . get ( filePosition , file . getPath ( ) ) , e ) ; } }
45608	public void propertyChange ( PropertyChangeEvent e ) { String propertyName = e . getPropertyName ( ) ; if ( propertyName == _CHAR horizontalScrollBar _CHAR || propertyName == _CHAR verticalScrollBar _CHAR ) { if ( e . getNewValue ( ) instanceof JScrollBar ) { setScrollBarRelations ( ( JScrollBar ) e . getNewValue ( ) ) ; } } }
45640	public boolean implies ( Permission permission ) { for ( Enumeration elements = elements ( ) ; elements . hasMoreElements ( ) ; ) { if ( ( ( Permission ) elements . nextElement ( ) ) . implies ( permission ) ) { return _BOOL ; } } return _BOOL ; }
45647	public void modifyAttributes ( ModificationItem [ ] modItems ) { if ( modSet == _NULL ) { modSet = new HashSet ( ) ; } for ( int i = _NUM ; ( modItems != _NULL ) && ( i < modItems . length ) ; i ++ ) { modSet . add ( modItems [ i ] ) ; } }
45656	public boolean forget ( String messageId ) { MessagePromise messagePromise = cache . getIfPresent ( messageId ) ; if ( messagePromise != _NULL ) { cache . invalidate ( messageId ) ; return _BOOL ; } return _BOOL ; }
45659	private static boolean missingHashColorFormat ( String colStr ) { int len = colStr . length ( ) ; if ( len == _NUM || len == _NUM ) { String match = _CHAR [ _NUM - _NUM - f ] { _CHAR + len + _CHAR } _CHAR ; return colStr . matches ( match ) ; } return _BOOL ; }
45667	public boolean equals ( Object other ) { if ( this == other ) return _BOOL ; if ( other instanceof Address ) { final Address o = ( Address ) other ; return this . getURI ( ) . equals ( o . getURI ( ) ) ; } return _BOOL ; }
45697	@ Override public boolean validate ( Set < String > values ) { for ( String toTest : values ) { if ( StringUtils . isEmpty ( toTest ) || NOT_ALPHA_NUM . matcher ( toTest ) . find ( ) ) { return _BOOL ; } } return _BOOL ; }
45703	private ASN1Primitive toASN1Object ( X509Certificate cert ) throws CertificateEncodingException { try { return new ASN1InputStream ( cert . getEncoded ( ) ) . readObject ( ) ; } catch ( Exception e ) { throw new CertificateEncodingException ( _CHAR Exception while encoding certificate : '' + e . toString ( ) ) ; } }
45714	@ Override public Object clone ( ) { try { return ( DecimalFormatSymbols ) super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
45725	public ContentModel contentModel ( ) { if ( state == _NULL ) { return _NULL ; } else { return state . getModel ( ) ; } }
45755	@ Override public boolean accept ( File dir , String name ) { for ( String name2 : names ) { if ( caseSensitivity . checkEquals ( name , name2 ) ) { return _BOOL ; } } return _BOOL ; }
45764	public PdfImageXObject copyTo ( PdfDocument document ) { PdfImageXObject image = new PdfImageXObject ( getPdfObject ( ) . copyTo ( document ) ) ; image . width = width ; image . height = height ; image . mask = mask ; image . softMask = softMask ; return image ; }
45797	public static boolean isEmpty ( CharSequence str ) { if ( str == _NULL || str . length ( ) == _NUM ) { return _BOOL ; } else { return _BOOL ; } }
45821	public void runTest ( ) throws Throwable { Document doc ; NodeList childList ; String nullNS = _NULL ; doc = ( Document ) load ( _CHAR staffNS _CHAR , _BOOL ) ; childList = doc . getElementsByTagNameNS ( nullNS , _CHAR _NUM _CHAR ) ; assertSize ( _CHAR documentgetelementsbytagnameNS04 _CHAR , _NUM , childList ) ; }
45897	public void deleteStaticGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMStaticGroup group = new AMStaticGroupImpl ( super . token , groupDN ) ; group . delete ( ) ; } }
45916	public static int calculateBCHCode ( int value , int poly ) { int msbSetInPoly = findMSBSet ( poly ) ; value <<= msbSetInPoly - _NUM ; while ( findMSBSet ( value ) >= msbSetInPoly ) { value ^= poly << ( findMSBSet ( value ) - msbSetInPoly ) ; } return value ; }
45936	public String nextChoiceValueIdentifier ( ) throws GSERException { if ( ! hasNext ( GSER_CHOICE_IDENTIFIER ) ) { LocalizableMessage msg = ERR_GSER_NO_VALID_IDENTIFIEDCHOICE . get ( gserValue . substring ( pos , length ) ) ; throw new GSERException ( msg ) ; } String identifier = next ( GSER_CHOICE_IDENTIFIER ) ; return identifier . substring ( _NUM , identifier . length ( ) - _NUM ) ; }
45937	public void applyMirroredCorrection ( ResultPoint [ ] points ) { if ( ! mirrored || points == _NULL || points . length < _NUM ) { return ; } ResultPoint bottomLeft = points [ _NUM ] ; points [ _NUM ] = points [ _NUM ] ; points [ _NUM ] = bottomLeft ; }
45968	public void copy ( ) { if ( getClientProperty ( _CHAR JPasswordField . cutCopyAllowed _CHAR ) != Boolean . TRUE ) { UIManager . getLookAndFeel ( ) . provideErrorFeedback ( this ) ; } else { super . copy ( ) ; } }
45974	private static boolean isFractionalProhibitedAttr ( String attr ) { for ( String forbiddenAttr : FRACTIONAL_PROHIBITED_ATTRIBUTES ) { if ( forbiddenAttr . equalsIgnoreCase ( attr ) ) { return _BOOL ; } } return _BOOL ; }
45980	public static MappedMember findMethod ( MappedClass owner , String name , String desc , boolean originalNames ) { for ( MappedMember mm : owner . getMethods ( ) ) { if ( matches ( mm , name , desc , originalNames ) ) { return mm ; } } return _NULL ; }
46011	public static long parseDateAsEpoch ( String dateStr ) { try { return DateUtils . parseDate ( dateStr ) . getTime ( ) ; } catch ( DateParseException e ) { return _NUM ; } }
46043	private static boolean isPropertyElementName ( int term ) { if ( term == RDFTERM_DESCRIPTION || isOldTerm ( term ) ) { return _BOOL ; } else { return ( ! isCoreSyntaxTerm ( term ) ) ; } }
46046	public void init ( boolean forEncryption , CipherParameters params ) { if ( params instanceof KeyParameter ) { WorkingKey = generateWorkingKey ( ( ( KeyParameter ) params ) . getKey ( ) , forEncryption ) ; this . forEncryption = forEncryption ; return ; } throw new IllegalArgumentException ( _CHAR invalid parameter passed to AES init - _CHAR + params . getClass ( ) . getName ( ) ) ; }
46063	private static void reverseRange ( Object [ ] a , int lo , int hi ) { hi -- ; while ( lo < hi ) { Object t = a [ lo ] ; a [ lo ++ ] = a [ hi ] ; a [ hi -- ] = t ; } }
46072	public static long parseLong ( byte [ ] bytes , int startIndex , int endIndex ) { long l = _NUM ; for ( int i = startIndex ; i < endIndex ; i ++ ) { l <<= _NUM ; l |= bytes [ i ] & _NUM ; } return l ; }
46090	public Object remove ( Object key ) { synchronized ( map ) { if ( removeElement ( key ) ) { return map . remove ( key ) ; } } return _NULL ; }
46112	public void exprSetParent ( ExpressionNode n ) { super . exprSetParent ( n ) ; int nArgs = m_argVec . size ( ) ; for ( int i = _NUM ; i < nArgs ; i ++ ) { Expression arg = ( Expression ) m_argVec . elementAt ( i ) ; arg . exprSetParent ( n ) ; } }
46121	public long nextLong ( ) throws DataFormatException { try { return bytes . readLong ( ) ; } catch ( IndexOutOfBoundsException e ) { throw new DataFormatException ( e . getMessage ( ) ) ; } }
46139	public Node nextNode ( ) throws DOMException { if ( ( m_next ) < this . size ( ) ) { Node next = this . elementAt ( m_next ) ; m_next ++ ; return next ; } else return _NULL ; }
46231	public void die ( ) { int size = edits . size ( ) ; for ( int i = size - _NUM ; i >= _NUM ; i -- ) { UndoableEdit e = edits . elementAt ( i ) ; e . die ( ) ; } super . die ( ) ; }
46240	public boolean equals ( ExtendedType other ) { try { return other . nodetype == this . nodetype && other . localName . equals ( this . localName ) && other . namespace . equals ( this . namespace ) ; } catch ( NullPointerException e ) { return _BOOL ; } }
46264	private void fillBuf ( ) throws IOException { int result = in . read ( buf , _NUM , buf . length ) ; if ( result == - _NUM ) { throw new EOFException ( ) ; } pos = _NUM ; end = result ; }
46276	public synchronized void clear ( ) { int i ; int len = password . length ; for ( i = _NUM ; i < len ; i ++ ) { password [ i ] = _NUM ; } cleared = _BOOL ; }
46292	@ Override protected void finalize ( ) { try { super . finalize ( ) ; } catch ( Throwable t ) { throw new AssertionError ( t ) ; } }
46304	public int addPadding ( byte [ ] in , int inOff ) { byte code = ( byte ) ( in . length - inOff ) ; while ( inOff < in . length ) { in [ inOff ] = code ; inOff ++ ; } return code ; }
46308	@ Override public int read ( ) throws IOException { if ( max >= _NUM && pos >= max ) { return - _NUM ; } int result = in . read ( ) ; pos ++ ; return result ; }
46346	public void resume ( ) { try { protocolHandler . resume ( ) ; } catch ( Exception e ) { log . error ( sm . getString ( _CHAR coyoteConnector . protocolHandlerResumeFailed _CHAR ) , e ) ; } }
46394	public void makeCurrent ( EGLSurface drawSurface , EGLSurface readSurface ) { if ( mEGLDisplay == EGL14 . EGL_NO_DISPLAY ) { Log . d ( TAG , _CHAR NOTE : makeCurrent w / o display _CHAR ) ; } if ( ! EGL14 . eglMakeCurrent ( mEGLDisplay , drawSurface , readSurface , mEGLContext ) ) { throw new RuntimeException ( _CHAR eglMakeCurrent ( draw , read ) failed _CHAR ) ; } }
46401	public static boolean arrayequals ( byte [ ] a , byte [ ] b , int count ) { for ( int i = _NUM ; i < count ; i ++ ) { if ( a [ i ] != b [ i ] ) { return _BOOL ; } } return _BOOL ; }
46426	public void putNameAndTypeDef ( STypeDef type , LineCol lineCol ) throws SyntaxException { if ( types . containsKey ( type . fullName ( ) ) ) { err . SyntaxException ( _CHAR duplicate type names _CHAR + type . fullName ( ) , lineCol ) ; } else { types . put ( type . fullName ( ) , type ) ; } }
46497	private String readInputUntil ( char symbol ) { String s = _CHAR _CHAR ; while ( ! accept ( symbol ) ) { s += ( char ) data [ index ] ; skip ( ) ; } return s ; }
46534	public void remove ( Component comp ) { if ( comp == rootPane ) { super . remove ( comp ) ; } else { getContentPane ( ) . remove ( comp ) ; } }
46547	public static < T > JComboBox < T > createComboBox ( ) { JComboBox < T > combo = new JComboBox < > ( ) ; if ( isMacOS ( ) ) { combo . setOpaque ( _BOOL ) ; } combo . setKeySelectionManager ( new ComboKeySelectionManager ( combo ) ) ; return combo ; }
46572	public void cutout_traces ( Collection < BrdItem > p_item_list ) { for ( BrdItem curr_item : p_item_list ) { if ( ! ( curr_item instanceof BrdTracep ) ) continue ; BrdTracep a_trace = ( BrdTracep ) curr_item ; if ( a_trace . shares_net_no ( own_net_nos ) ) continue ; cutout_trace ( a_trace , shape , cl_class ) ; } }
46615	public void addConnection ( boolean success ) { if ( success ) { connectionMonitor . add ( ) ; } else { failureConnectionMonitor . add ( ) ; } }
46642	private void createEntry ( AddRequest request ) throws ADSContextException { try { throwIfNotSuccess ( getConnection ( ) . getConnection ( ) . add ( request ) ) ; } catch ( LdapException e ) { throw new ADSContextException ( ErrorType . ERROR_UNEXPECTED , e ) ; } }
46656	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
46659	public void writeSearchResultEntry ( final int messageID , final SearchResultEntry entry ) throws IOException { logger . trace ( _CHAR ENCODE LDAP SEARCH RESULT ENTRY ( messageID = % d , entry = % s ) _CHAR , messageID , entry ) ; writeMessageHeader ( messageID ) ; { LDAP . writeEntry ( writer , LDAP . OP_TYPE_SEARCH_RESULT_ENTRY , entry ) ; } writeMessageFooter ( entry . getControls ( ) ) ; }
46669	public void validate ( ValidatableObject vo ) throws SAXException { if ( validatedObjects . add ( ProxyGroup . unwrap ( vo ) ) ) { MSVValidator . validate ( jaxbContext , this , vo ) ; } else { reportEvent ( vo , Messages . format ( Messages . CYCLE_DETECTED ) ) ; } }
46686	public InputSource resolveEntity ( String publicId , String systemId ) throws SAXException , IOException { if ( entityResolver != _NULL ) { return entityResolver . resolveEntity ( publicId , systemId ) ; } else { return _NULL ; } }
46694	public void deleteSubGroupContainers ( Set groupContainers ) throws AMException , SSOException { Iterator iter = groupContainers . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupContainerDN = ( String ) iter . next ( ) ; AMGroupContainer groupContainer = new AMGroupContainerImpl ( token , groupContainerDN ) ; groupContainer . delete ( ) ; } }
46702	boolean connectionArgumentsPresent ( ) { if ( isPurgeHistoricalSubcommand ( ) ) { boolean secureArgsPresent = getSecureArgsList ( ) != _NULL && getSecureArgsList ( ) . argumentsPresent ( ) ; boolean adminArgsPresent = getAdminUidArg ( ) . isPresent ( ) || secureArgsList . getBindPasswordArg ( ) . isPresent ( ) || secureArgsList . getBindPasswordFileArg ( ) . isPresent ( ) ; return secureArgsPresent || adminArgsPresent ; } return _BOOL ; }
46714	protected GridBagConstraints lookupConstraints ( Component comp ) { GridBagConstraints constraints = comptable . get ( comp ) ; if ( constraints == _NULL ) { setConstraints ( comp , defaultConstraints ) ; constraints = comptable . get ( comp ) ; } return constraints ; }
46733	public void showSaveRecordingDialog ( ) { String sdcard = FmRadioService . getRecordingSdcard ( ) ; String defaultName = mService . getRecordingName ( ) ; String recordingName = mService . getModifiedRecordingName ( ) ; FmRecordDialogFragment newFragment = new FmRecordDialogFragment ( sdcard , defaultName , recordingName ) ; newFragment . show ( mFragmentManager , TAG_SAVE_RECORDINGD ) ; mFragmentManager . executePendingTransactions ( ) ; }
46745	public static ByteString valueOfInt ( int i ) { final byte [ ] bytes = new byte [ _NUM ] ; for ( int j = _NUM ; j >= _NUM ; j -- ) { bytes [ j ] = ( byte ) i ; i >> >= _NUM ; } return wrap ( bytes ) ; }
46756	@ SuppressWarnings ( _CHAR unused _CHAR ) public static float findMaxValue ( float ... values ) { if ( values == _NULL || values . length == _NUM ) return _NUM ; float max = Float . MIN_VALUE ; for ( float value : values ) { if ( max < value ) max = value ; } return max ; }
46777	public void checkIdle ( ) { try { createPool ( ) . checkIdle ( ) ; } catch ( SQLException x ) { throw new RuntimeException ( x ) ; } }
46795	public static boolean isFromValidAuthorizedParty ( Set < String > acceptedAuthorizedParties , JwtClaimsSet jwtClaims ) throws AuthLoginException { String authorizedPartyClaim = ( String ) jwtClaims . getClaim ( AUTHORIZED_PARTY_CLAIM_KEY ) ; if ( jwtHasAuthorizedPartyClaim ( jwtClaims ) ) { return acceptedAuthorizedParties . contains ( authorizedPartyClaim ) ; } logger . error ( _CHAR No authorized party found in JWT claims set . '' ) ; return _BOOL ; }
46799	public static ArrayList < String > arrayToList ( String ... stringArray ) { if ( stringArray == _NULL ) { return _NULL ; } ArrayList < String > stringList = new ArrayList < > ( stringArray . length ) ; Collections . addAll ( stringList , stringArray ) ; return stringList ; }
46817	Mark skipUntilETag ( String tag ) { Mark ret = skipUntil ( _CHAR < / _CHAR + tag ) ; if ( ret != _NULL ) { skipSpaces ( ) ; if ( nextChar ( ) != _CHAR ) ret = _NULL ; } return ret ; }
46823	@ AfterClass @ Override public void classCleanUp ( ) throws Exception { callParanoiaCheck = _BOOL ; entriesToCleanup . remove ( DN . valueOf ( EXAMPLE_DN ) ) ; super . classCleanUp ( ) ; TestCaseUtils . clearBackend ( _CHAR userRoot _CHAR ) ; TestCaseUtils . deleteDirectory ( reSyncTempDir ) ; paranoiaCheck ( ) ; }
46827	static String formatNsAsMs ( long nanoseconds ) { if ( nanoseconds >= _NUM ) { return MILLISEC_FORMAT . format ( nanoseconds / _NUM ) ; } else { return _CHAR N / A _CHAR ; } }
46881	public boolean remove ( AccessibleRelation relation ) { if ( relations == _NULL ) { return _BOOL ; } else { return relations . removeElement ( relation ) ; } }
46917	public void callVisitors ( ExpressionOwner owner , XPathVisitor visitor ) { if ( visitor . visitStep ( owner , this ) ) { callPredicateVisitors ( visitor ) ; if ( _NULL != m_nextWalker ) { m_nextWalker . callVisitors ( this , visitor ) ; } } }
46920	public boolean equals ( Object other ) { if ( other == _NULL ) return _BOOL ; if ( getClass ( ) != other . getClass ( ) ) { return _BOOL ; } HostPort that = ( HostPort ) other ; return port == that . port && host . equals ( that . host ) ; }
46929	public static SocketAddress findFreeSocketAddress ( ) { try ( ServerSocket serverLdapSocket = bindFreePort ( ) ) { return serverLdapSocket . getLocalSocketAddress ( ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }
46953	public boolean isActive ( ) { if ( stub != _NULL ) { return stub . isActive ( ) ; } else { return _BOOL ; } }
46970	protected void addImpl ( Component x , Object constraints , int index ) { if ( x . getParent ( ) == this ) { return ; } else { super . addImpl ( x , constraints , index ) ; } }
46996	public long length ( ) throws IOException { try { return Libcore . os . fstat ( fd ) . st_size ; } catch ( ErrnoException errnoException ) { throw errnoException . rethrowAsIOException ( ) ; } }
47006	private void updateSchema ( ) throws OpenDsException { if ( isServerRunning ( ) ) { updateSchemaOnline ( ) ; } else { updateSchemaOffline ( ) ; } }
47010	public int next ( ) { if ( _currentNode != NULL ) { int node = _currentNode ; _currentNode = _nextsib2 ( node ) ; return returnNode ( makeNodeHandle ( node ) ) ; } return END ; }
47029	public void fatalError ( TransformerException exception ) throws TransformerException { if ( m_throwExceptionOnError ) throw exception ; else { PrintWriter pw = getErrorWriter ( ) ; printLocation ( pw , exception ) ; pw . println ( exception . getMessage ( ) ) ; } }
47038	public static RecipeFragment newInstance ( Recipe recipe , int sectionNumber ) { RecipeFragment fragment = new RecipeFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
47042	public PdfPage addNewPage ( PageSize pageSize ) { checkClosingStatus ( ) ; PdfPage page = new PdfPage ( this , pageSize ) ; checkAndAddPage ( page ) ; dispatchEvent ( new PdfDocumentEvent ( PdfDocumentEvent . START_PAGE , page ) ) ; dispatchEvent ( new PdfDocumentEvent ( PdfDocumentEvent . INSERT_PAGE , page ) ) ; return page ; }
47049	public static void validate ( DefaultJAXBContextImpl jaxbCtx , ValidationContext context , ValidatableObject vo ) throws SAXException { try { new MSVValidator ( jaxbCtx , context , vo ) . _validate ( ) ; } catch ( RuntimeException e ) { context . reportEvent ( vo , e ) ; } }
47065	public static String toUpperCase ( String s ) { if ( s == _NULL ) { return _NULL ; } StringBuilder buffer = new StringBuilder ( s . length ( ) ) ; toUpperCase ( s , buffer ) ; return buffer . toString ( ) ; }
47113	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
47124	public void toggleExpanded ( ) { if ( isExpanded ( ) ) { collapse ( ) ; } else { expand ( ) ; } }
47156	void clearCachedDecisionsForService ( String serviceName ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR ResourceResultCache . '' + _CHAR clearCachedDecisionsForService ( ) : _CHAR + _CHAR serviceName = _CHAR + serviceName ) ; } synchronized ( resultCache ) { resultCache . remove ( serviceName ) ; } }
47184	public void init ( ServletConfig config ) throws ServletException { super . init ( config ) ; if ( ! AMSetupServlet . isCurrentConfigurationValid ( ) ) { return ; } ConfigFedMonitoring cm = new ConfigFedMonitoring ( ) ; cm . configureFedMonitoring ( ) ; }
47205	public static LocalBackendWorkflowElement createAndRegister ( DN baseDN , Backend < ? > backend ) { LocalBackendWorkflowElement localBackend = registeredLocalBackends . get ( baseDN ) ; if ( localBackend == _NULL ) { localBackend = new LocalBackendWorkflowElement ( baseDN , backend ) ; registerLocalBackend ( localBackend ) ; } return localBackend ; }
47208	public void deleteFilteredRoles ( Set roleDNs ) throws AMException , SSOException { Iterator iter = roleDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String roleDN = ( String ) iter . next ( ) ; AMFilteredRole role = new AMFilteredRoleImpl ( token , roleDN ) ; role . delete ( ) ; } }
47254	public void actionPerformed ( ActionEvent e ) { JTextComponent target = getTextComponent ( e ) ; if ( target != _NULL ) { Document doc = target . getDocument ( ) ; target . setCaretPosition ( _NUM ) ; target . moveCaretPosition ( doc . getLength ( ) ) ; } }
47316	public static void forceDeleteOnExit ( File file ) throws IOException { if ( file . isDirectory ( ) ) { deleteDirectoryOnExit ( file ) ; } else { file . deleteOnExit ( ) ; } }
47334	@ Override public void addCookie ( final Cookie cookie ) { if ( included || isCommitted ( ) ) { return ; } cookies . add ( cookie ) ; String header = generateCookieString ( cookie ) ; addHeader ( _CHAR Set - Cookie _CHAR , header , getContext ( ) . getCookieProcessor ( ) . getCharset ( ) ) ; }
47335	protected Object clone ( ) { PipelinedMsgParser p = new PipelinedMsgParser ( ) ; p . rawInputStream = this . rawInputStream ; p . sipMessageListener = this . sipMessageListener ; Thread mythread = new Thread ( p ) ; mythread . setName ( _CHAR PipelineThread _CHAR ) ; return p ; }
47395	public static boolean isBase64 ( final byte [ ] arrayOctet ) { for ( int i = _NUM ; i < arrayOctet . length ; i ++ ) { if ( ! isBase64 ( arrayOctet [ i ] ) && ! isWhiteSpace ( arrayOctet [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
47414	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
47429	protected synchronized void expire ( ) throws IllegalMonitorStateException { if ( owner == Thread . currentThread ( ) ) { expired = _BOOL ; } else { throw new IllegalMonitorStateException ( _CHAR The calling thread is not the owner of the lock ! _CHAR ) ; } }
47460	public boolean addStatement ( Statement statement ) { boolean addedStmt = _BOOL ; if ( statement != _NULL ) { super . addStatement ( statement ) ; addedStmt = _BOOL ; } return addedStmt ; }
47468	public boolean functionAvailable ( String methName ) { Object tblEntry = m_functionID . get ( methName ) ; if ( _NULL != tblEntry ) return _BOOL ; else { tblEntry = m_functionID_customer . get ( methName ) ; return ( _NULL != tblEntry ) ? _BOOL : _BOOL ; } }
47477	private Node < E > nextNode ( Node < E > p ) { for ( ; ; ) { Node < E > s = p . next ; if ( s == p ) return head . next ; if ( s == _NULL || s . item != _NULL ) return s ; p = s ; } }
47481	public void removeAttributes ( AttributeSet attr ) { Enumeration names = attr . getAttributeNames ( ) ; while ( names . hasMoreElements ( ) ) { Object name = names . nextElement ( ) ; Object value = attr . getAttribute ( name ) ; removeSearchAttribute ( name , value ) ; } }
47484	public static BinaryValue createBase64 ( String base64 ) throws ParseException { BinaryValue value = new BinaryValue ( ) ; value . type = Type . BASE64_STRING ; value . base64 = base64 ; value . bytes = value . getBytes ( ) ; value . hashCode = base64 . hashCode ( ) ; return value ; }
47497	@ Override public void flush ( ) { FlushTask task ; synchronized ( logRecords ) { task = new FlushTask ( new ArrayList < String > ( logRecords ) ) ; logRecords . clear ( ) ; } task . run ( ) ; }
47504	public String configure ( ) { if ( isConfigured ( ) ) { return baseDir ; } configData . put ( _CHAR DEPLOYMENT_URI _CHAR , uri ) ; configData . put ( _CHAR BASE_DIR _CHAR , baseDir ) ; return AMSetupServlet . configure ( servletct , configData ) ; }
47509	public synchronized void removePeer ( JsonRpcPeer peer ) { if ( mReceivingPeers . remove ( peer ) != _NULL ) { mReceivingPeersSnapshot = _NULL ; if ( mListener != _NULL ) { mListener . onPeerUnregistered ( peer ) ; } } }
47528	public < X extends Throwable > T orElseThrow ( Supplier < ? extends X > exceptionSupplier ) throws X { if ( value != _NULL ) { return value ; } else { throw exceptionSupplier . get ( ) ; } }
47537	public int previousNode ( ) { if ( ! m_cacheNodes ) throw new RuntimeException ( XSLMessages . createXPATHMessage ( XPATHErrorResources . ER_NODESETDTM_CANNOT_ITERATE , _NULL ) ) ; if ( ( m_next - _NUM ) > _NUM ) { m_next -- ; return this . elementAt ( m_next ) ; } else return DTM . NULL ; }
47564	private static synchronized Date parseDateString ( String textRepresentation ) throws ParseException { try { return sdfDefault . parse ( textRepresentation ) ; } catch ( ParseException ex ) { return sdfGnuStep . parse ( textRepresentation ) ; } }
47568	public void updateSizes ( @ ProgressDrawableSize int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
47610	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeBlob ( Blob x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialBlob ( x ) ) ; } }
47619	private JsonValue decrypt ( final JsonValue value ) throws InternalServerErrorException { try { return cryptoService . decrypt ( value ) ; } catch ( JsonException je ) { throw new InternalServerErrorException ( je ) ; } }
47640	@ Override public final void run ( ) { setProcessingStartTime ( ) ; getPluginConfigManager ( ) . invokePreParseUnbindPlugins ( this ) ; logUnbind ( this ) ; getClientConnection ( ) . disconnect ( DisconnectReason . UNBIND , _BOOL , _NULL ) ; getPluginConfigManager ( ) . invokePostOperationUnbindPlugins ( this ) ; setProcessingStopTime ( ) ; }
47664	@ Override public void close ( ) throws IOException { synchronized ( lock ) { if ( ! isClosed ( ) ) { in . close ( ) ; buf = _NULL ; } } }
47697	public void deleteSubPeopleContainers ( Set peopleContainers ) throws AMException , SSOException { Iterator iter = peopleContainers . iterator ( ) ; while ( iter . hasNext ( ) ) { String peopleContainerDN = ( String ) iter . next ( ) ; AMPeopleContainer peopleContainer = new AMPeopleContainerImpl ( super . token , peopleContainerDN ) ; peopleContainer . delete ( ) ; } }
47707	public final boolean isWifiEnabled ( ) { boolean wifiState = _BOOL ; WifiManager wifiManager = ( WifiManager ) context . getSystemService ( Context . WIFI_SERVICE ) ; if ( wifiManager != _NULL ) { wifiState = wifiManager . isWifiEnabled ( ) ; } return wifiState ; }
47709	public void stepInto ( ) { if ( ! isRunning ( ) ) return ; Line previousLine = currentLine ; do { setCurrentEventID ( trace . getNextEventIDInThread ( currentEventID ) ) ; } while ( isRunning ( ) && currentLine != _NULL && currentLine == previousLine && trace . getKind ( currentEventID ) != EventKind . START_METHOD ) ; }
47751	public synchronized void enableType ( String prefix ) throws IllegalArgumentException { if ( prefix == _NULL ) { throw new IllegalArgumentException ( _CHAR The prefix can not be _NULL . _CHAR ) ; } if ( ! enabledTypes . contains ( prefix ) ) { enabledTypes . add ( prefix ) ; } }
47755	public static boolean isAccessLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isAccessLoggable ( level ) ; } }
47758	private String readInputUntil ( char symbol ) { String s = _CHAR _CHAR ; while ( ! accept ( symbol ) ) { s += ( char ) data [ index ] ; skip ( ) ; } return s ; }
47822	public static Date parseDateTime ( String dt ) { try { return new SimpleDateFormat ( DATETIME_FORMAT ) . parse ( dt ) ; } catch ( Exception e ) { } return _NULL ; }
47823	protected final void endOfInput ( ) throws IOException { if ( state != STATE_READING_RESPONSE_BODY ) throw new IllegalStateException ( _CHAR state : _CHAR + state ) ; detachTimeout ( timeout ) ; state = STATE_CLOSED ; if ( streamAllocation != _NULL ) { streamAllocation . streamFinished ( Http1xStream . this ) ; } }
47863	@ Override public void addChannelListener ( ChannelListener channelListener ) { if ( ! this . channelListeners . contains ( channelListener ) ) { this . channelListeners . add ( channelListener ) ; } else { throw new IllegalArgumentException ( sm . getString ( _CHAR groupChannel . listener . alreadyExist _CHAR , channelListener , channelListener . getClass ( ) . getName ( ) ) ) ; } }
47877	public void referralSolveError ( DN dn , String [ ] referrals , BasicNodeError error ) { searchResult = _NULL ; errorSearchingPanel . setReferralError ( dn , referrals , error ) ; delete . setVisible ( _BOOL ) ; saveChanges . setVisible ( _BOOL ) ; cardLayout . show ( mainPanel , ERROR_SEARCHING ) ; displayedEntryPanel = _NULL ; }
47892	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
47906	public static void validate ( DefaultJAXBContextImpl jaxbCtx , ValidationContext context , ValidatableObject vo ) throws SAXException { try { new MSVValidator ( jaxbCtx , context , vo ) . _validate ( ) ; } catch ( RuntimeException e ) { context . reportEvent ( vo , e ) ; } }
47925	@ Override public void write ( char [ ] buf ) throws IOException { if ( writer != _NULL ) { writer . write ( buf ) ; } else { write ( buf , _NUM , buf . length ) ; } }
47955	public void start ( ) throws IOException { this . isRunning = _BOOL ; Thread thread = new Thread ( this ) ; thread . setDaemon ( _BOOL ) ; thread . setName ( _CHAR MessageProcessorThread - UDP - _CHAR + getIpAddress ( ) . getHostAddress ( ) + _CHAR+ getPort ( ) ) ; thread . setPriority ( sipStack . getThreadPriority ( ) ) ; thread . start ( ) ; }
48010	public boolean isDoneIndexing ( ) { if ( getIndex ( ) != _NULL ) { return getIndex ( ) . isActive ( ) ; } else { return _BOOL ; } }
48062	public static String removeStaticAttributeFlag ( String attributeName ) { if ( isStaticAttribute ( attributeName ) ) { return attributeName . substring ( STATIC_QUOTE . length ( ) , attributeName . length ( ) - STATIC_QUOTE . length ( ) ) ; } else { return attributeName ; } }
48110	private void enableComponents ( ) { for ( JComponent comp : comps ) { comp . setEnabled ( _BOOL ) ; } lInitContents . setVisible ( _BOOL ) ; argumentsScroll . setVisible ( _BOOL ) ; setEnabledOK ( _BOOL ) ; }
48122	private void rendering ( byte [ ] pixel ) { synchronized ( syncPreview ) { if ( previewRender == _NULL ) { return ; } previewRender . rendering ( pixel ) ; } }
48142	private void purge ( ) { synchronized ( queue ) { WeakKey key ; while ( ( key = ( WeakKey ) queue . poll ( ) ) != _NULL ) { super . remove ( key . getReferenced ( ) ) ; } } }
48254	public void addValue ( String value ) { if ( isNullSeperateMultipleValues ( ) ) { setValue ( this . value + _CHAR \ u0000 _CHAR + value ) ; } else { setValue ( this . value + value ) ; } }
48298	public void makeImmutable ( ) { if ( isMutable ) { if ( audiences != _NULL ) { audiences = Collections . unmodifiableList ( audiences ) ; } isMutable = _BOOL ; } }
48314	public static int parseStringAsInt ( String in ) throws IndexParseFieldException { try { return Integer . parseInt ( in ) ; } catch ( NumberFormatException e ) { throw new IndexParseFieldException ( in , e ) ; } }
48333	public void deleteDynamicGroups ( Set dynamicGroupDNs ) throws AMException , SSOException { Iterator iter = dynamicGroupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String dynamicGroupDN = ( String ) iter . next ( ) ; AMDynamicGroup dynamicGroup = new AMDynamicGroupImpl ( super . token , dynamicGroupDN ) ; dynamicGroup . delete ( ) ; } }
48335	public boolean isEditable ( ) { for ( final JKTableColumn col : this . tableColumns ) { if ( col . isEditable ( ) ) { return _BOOL ; } } return _BOOL ; }
48340	public Observable < DriveId > createFile ( DriveFolder folder , final Uri uri , String title , String mimeType ) { try { return createFile ( folder , getContentResolver ( ) . openInputStream ( uri ) , title , mimeType ) ; } catch ( FileNotFoundException e ) { return Observable . error ( e ) ; } }
48347	public void deletePeopleContainers ( Set peopleContainerDNs ) throws AMException , SSOException { Iterator iter = peopleContainerDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String peopleContainerDN = ( String ) iter . next ( ) ; AMPeopleContainer peopleContainer = new AMPeopleContainerImpl ( super . token , peopleContainerDN ) ; peopleContainer . delete ( ) ; } }
48350	@ Override public boolean accept ( File dir , String name ) { if ( filenameFilter != _NULL ) { return filenameFilter . accept ( dir , name ) ; } else { return super . accept ( dir , name ) ; } }
48353	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
48365	public void onRestoreInstanceState ( @ Nullable final Parcelable parcelable ) { if ( parcelable instanceof Bundle ) { Bundle bundle = ( Bundle ) parcelable ; mFirstAnimatedPosition = bundle . getInt ( SAVEDINSTANCESTATE_FIRSTANIMATEDPOSITION ) ; mLastAnimatedPosition = bundle . getInt ( SAVEDINSTANCESTATE_LASTANIMATEDPOSITION ) ; mShouldAnimate = bundle . getBoolean ( SAVEDINSTANCESTATE_SHOULDANIMATE ) ; } }
48411	public void Logi ( String msg ) { if ( mDebug ) { if ( TextUtils . isEmpty ( msg ) ) { throw new NullPointerException ( _CHAR The message is _NULL ! _CHAR ) ; } Log . i ( Constants . DEBUG_TAG , msg ) ; } }
48426	public static int indexOfLastSeparator ( String filename ) { if ( filename == _NULL ) { return - _NUM ; } int lastUnixPos = filename . lastIndexOf ( UNIX_SEPARATOR ) ; int lastWindowsPos = filename . lastIndexOf ( WINDOWS_SEPARATOR ) ; return Math . max ( lastUnixPos , lastWindowsPos ) ; }
48444	public static byte [ ] readStream ( final InputStream inStream ) { try { return IOUtils . toByteArray ( inStream ) ; } catch ( IOException e ) { throw new JKException ( e ) ; } }
48505	@ Override public String toString ( ) { if ( isSSL != _NULL ) { return ( isSSL ? _CHAR ldaps _CHAR : _CHAR ldap _CHAR ) + COLON_SLASH_SLASH + host + SEPARATOR + port ; } else { return host + SEPARATOR + port ; } }
48533	@ Override public void addObject ( ) throws Exception { assertOpen ( ) ; if ( factory == _NULL ) { throw new IllegalStateException ( _CHAR Can not add objects without a factory . '' ) ; } final PooledObject < T > p = create ( ) ; addIdleObject ( p ) ; }
48572	public String toString ( ) { if ( userObject == _NULL ) { return _NULL ; } else { return userObject . toString ( ) ; } }
48582	public static Intent buildStartInTerminalIntent ( File script ) { final ComponentName componentName = Constants . SL4A_SERVICE_LAUNCHER_COMPONENT_NAME ; Intent intent = new Intent ( ) ; intent . setComponent ( componentName ) ; intent . setAction ( Constants . ACTION_LAUNCH_FOREGROUND_SCRIPT ) ; intent . putExtra ( Constants . EXTRA_SCRIPT_PATH , script . getAbsolutePath ( ) ) ; return intent ; }
48611	public static boolean isErrorLoggable ( Level level ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isErrorLoggable ( level ) ; } }
48656	private void stopRecording ( ) { try { mLogcatViewerService . stopRecording ( ) ; } catch ( RemoteException e ) { Log . e ( LOG_TAG , _CHAR StopRecording : Trouble writing the log to a file _CHAR ) ; } }
48670	final boolean transferAfterCancelledWait ( Node node ) { if ( compareAndSetWaitStatus ( node , Node . CONDITION , _NUM ) ) { enq ( node ) ; return _BOOL ; } while ( ! isOnSyncQueue ( node ) ) Thread . yield ( ) ; return _BOOL ; }
48714	private static QueryResponse generateQueryResponse ( QueryRequest request , int total , int handled ) { if ( _CHAR _BOOL _CHAR . equalsIgnoreCase ( request . getAdditionalParameter ( REMAINING ) ) ) { return Responses . newRemainingResultsResponse ( _NULL , total - handled ) ; } else { return Responses . newQueryResponse ( _NULL , CountPolicy . EXACT , total ) ; } }
48715	public String toXMLString ( ) { int beginTokenIndex = getStartToken ( ) . getTokenIndex ( ) ; int endTokenIndex = beginTokenIndex ; if ( getEndToken ( ) != _NULL ) { endTokenIndex = getEndToken ( ) . getTokenIndex ( ) ; } return getDocument ( ) . toXMLFragment ( beginTokenIndex , endTokenIndex ) ; }
48726	public void addLayoutComponent ( Component comp , Object constraints ) { if ( ( constraints == _NULL ) || ( constraints instanceof String ) ) { addLayoutComponent ( ( String ) constraints , comp ) ; } else { throw new IllegalArgumentException ( _CHAR can not add to layout : _CHAR + _CHAR constraint must be a _CHAR + _CHAR string ( or _NULL ) _CHAR ) ; } }
48740	protected void entering ( String methodName , Object [ ] params ) { if ( params != _NULL ) { logger . entering ( className , methodName , params ) ; } else { logger . entering ( className , methodName ) ; } }
48743	private static Attribute makeAttrFromServerGroupProperty ( ServerGroupProperty property , Object value ) { switch ( property ) { case MEMBERS : return new LinkedAttribute ( ServerGroupProperty . MEMBERS . getAttributeName ( ) , ( Collection < ? > ) value ) ; default : return new LinkedAttribute ( property . getAttributeName ( ) , value ) ; } }
48749	protected synchronized void timeout ( ) throws IllegalMonitorStateException { if ( owner == Thread . currentThread ( ) ) { timeout = _BOOL ; } else { throw new IllegalMonitorStateException ( _CHAR The calling thread is not the owner of the lock ! _CHAR ) ; } }
48759	@ Override public boolean accept ( File file , String name ) { for ( String suffix : this . suffixes ) { if ( caseSensitivity . checkEndsWith ( name , suffix ) ) { return _BOOL ; } } return _BOOL ; }
48766	public static final ParsedQuery createTestParsedQuery2 ( ) { Query query = new Query ( ) ; query . setWhere ( _CHAR myindexedfield = _CHAR _CHAR ) ; query . setDatabase ( Fixtures . DB ) ; query . setTable ( _CHAR mytable _CHAR ) ; WhereClause whereClause = new WhereClause ( query . getWhere ( ) ) ; return new ParsedQuery ( query , whereClause , createTestIndexOneField ( ) ) ; }
48772	public void auditDelete ( ) { if ( shouldAudit ( ConfigOperation . DELETE ) ) { JsonValue afterState = json ( object ( ) ) ; AMConfigAuditEventBuilder builder = getBaseBuilder ( ) . operation ( ConfigOperation . DELETE ) . after ( afterState ) ; recordBeforeStateIfNotNull ( builder , beforeState ) ; auditEventPublisher . tryPublish ( CONFIG_TOPIC , builder . toEvent ( ) ) ; } }
48774	public void handleButton3Request ( RequestInvocationEvent event ) { backTrail ( ) ; AuthPropertiesViewBean vb = ( AuthPropertiesViewBean ) getViewBean ( AuthPropertiesViewBean . class ) ; removePageSessionAttribute ( ENTRY_LIST ) ; removePageSessionAttribute ( ReorderAuthChainsViewBean . PG_SESSION_TRACKING ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
48778	public void showCorner ( boolean leftTop , boolean rightTop , boolean leftBottom , boolean rightBottom ) { if ( SDK_LOLLIPOP ) { ( ( OptRoundRectDrawable ) getBackground ( ) ) . showCorner ( leftTop , rightTop , leftBottom , rightBottom ) ; } else { ( ( OptRoundRectDrawableWithShadow ) getBackground ( ) ) . showCorner ( leftTop , rightTop , leftBottom , rightBottom ) ; } }
48843	public DN nextDN ( ) throws DataFormatException { try { return DN . valueOf ( nextString ( ) ) ; } catch ( LocalizedIllegalArgumentException e ) { throw new DataFormatException ( e . getLocalizedMessage ( ) ) ; } }
48860	private String readAttributeName ( boolean returnLowerCase ) { skipWhitespace ( ) ; int c = find ( ATTRIBUTE_NAME_TERMINATORS ) ; String forSubstring = returnLowerCase ? inputLowerCase : input ; String result = pos < c ? forSubstring . substring ( pos , c ) : _NULL ; pos = c ; return result ; }
48874	private synchronized void commit ( CSN csn , LDAPUpdateMsg msg ) { final PendingChange curChange = pendingChanges . get ( csn ) ; if ( curChange == _NULL ) { throw new NoSuchElementException ( ) ; } curChange . setCommitted ( _BOOL ) ; curChange . setMsg ( msg ) ; }
48898	public static void access ( Level level , String msgId , String data [ ] , Object session ) { try { logger . access ( level , msgId , data , session ) ; } catch ( LogException le ) { SAMLUtils . debug . error ( _CHAR LogUtils . access : _CHAR + _CHAR Error writing to log : _CHAR , le ) ; } }
48914	public void updateSizes ( int size ) { if ( size == LARGE ) { setSizeParameters ( CIRCLE_DIAMETER_LARGE , CIRCLE_DIAMETER_LARGE , CENTER_RADIUS_LARGE , STROKE_WIDTH_LARGE , ARROW_WIDTH_LARGE , ARROW_HEIGHT_LARGE ) ; } else { setSizeParameters ( CIRCLE_DIAMETER , CIRCLE_DIAMETER , CENTER_RADIUS , STROKE_WIDTH , ARROW_WIDTH , ARROW_HEIGHT ) ; } }
48926	public void createVisibleAdminUidArgument ( final LocalizableMessage description ) { try { this . adminUidArg = adminUid ( description ) ; } catch ( final ArgumentException unexpected ) { throw new RuntimeException ( _CHAR Unexpected _CHAR ) ; } }
48939	public SignedJwt reconstructAuthId ( String authId ) throws RestAuthException { try { return jwtBuilderFactory . reconstruct ( authId , SignedJwt . class ) ; } catch ( JwtRuntimeException e ) { throw new RestAuthException ( ResourceException . BAD_REQUEST , _CHAR Failed to parse JWT , _CHAR + e . getLocalizedMessage ( ) , e ) ; } }
48952	protected Request createRiRegisterRequest ( ) throws TckInternalError { try { return createRequest ( Request . REGISTER , riAddressFactory , riHeaderFactory , riMessageFactory , riSipProvider , tiSipProvider , _NULL , _NULL , _NULL ) ; } catch ( Throwable exc ) { throw new TckInternalError ( _CHAR Failed to create an RI - > TI register request _CHAR , exc ) ; } }
48957	public void makeCurrent ( EGLSurface eglSurface ) { if ( mEGLDisplay == EGL14 . EGL_NO_DISPLAY ) { Log . d ( TAG , _CHAR NOTE : makeCurrent w / o display _CHAR ) ; } if ( ! EGL14 . eglMakeCurrent ( mEGLDisplay , eglSurface , eglSurface , mEGLContext ) ) { throw new RuntimeException ( _CHAR eglMakeCurrent failed _CHAR ) ; } }
48995	private static void reverseRange ( Object [ ] a , int lo , int hi ) { hi -- ; while ( lo < hi ) { Object t = a [ lo ] ; a [ lo ++ ] = a [ hi ] ; a [ hi -- ] = t ; } }
49002	public long scheduledExecutionTime ( ) { synchronized ( this ) { if ( headTask != _NULL ) { return headTask . scheduledExecutionTime ( ) ; } } return - _NUM ; }
49015	private RunnableScheduledFuture < ? > finishPoll ( RunnableScheduledFuture < ? > f ) { int s = -- size ; RunnableScheduledFuture < ? > x = queue [ s ] ; queue [ s ] = _NULL ; if ( s != _NUM ) siftDown ( _NUM , x ) ; setIndex ( f , - _NUM ) ; return f ; }
49041	private boolean isValueSupported ( Object value ) { for ( int i = _NUM ; i < values . length ; i ++ ) { if ( value . equals ( values [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
49045	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
49046	private static Class < ? > forName ( String name ) throws ReflectException { try { return Class . forName ( name ) ; } catch ( Exception e ) { throw new ReflectException ( e ) ; } }
49061	protected void flushCache ( ) throws IOException { if ( this . cachePosition > _NUM ) { this . out . writeLine ( Integer . toHexString ( this . cachePosition ) ) ; this . out . write ( this . cache , _NUM , this . cachePosition ) ; this . out . writeLine ( _CHAR _CHAR ) ; this . cachePosition = _NUM ; } }
49087	final boolean transferAfterCancelledWait ( Node node ) { if ( compareAndSetWaitStatus ( node , Node . CONDITION , _NUM ) ) { enq ( node ) ; return _BOOL ; } while ( ! isOnSyncQueue ( node ) ) Thread . yield ( ) ; return _BOOL ; }
49093	public boolean startsWith ( List < Rdn > rdns ) { if ( rdns == _NULL ) { return _BOOL ; } int len1 = this . rdns . size ( ) ; int len2 = rdns . size ( ) ; return ( len1 >= len2 && doesListMatch ( _NUM , len2 , rdns ) ) ; }
49163	@ Override protected Parcelable onSaveInstanceState ( ) { Parcelable superState = super . onSaveInstanceState ( ) ; Bundle state = new Bundle ( ) ; state . putParcelable ( _CHAR PARENT _CHAR , superState ) ; state . putFloat ( _CHAR mAngleStart _CHAR , this . mAngleStart ) ; state . putFloat ( _CHAR mAngleSweep _CHAR , this . mAngleSweep ) ; return state ; }
49217	public void writeExif ( InputStream jpegStream , OutputStream exifOutStream ) throws IOException { if ( jpegStream == _NULL || exifOutStream == _NULL ) { throw new IllegalArgumentException ( NULL_ARGUMENT_STRING ) ; } OutputStream s = getExifWriterStream ( exifOutStream ) ; doExifStreamIO ( jpegStream , s ) ; s . flush ( ) ; }
49228	public static int findPowerOfTwo ( int value ) { for ( int ii = value ; ii > _NUM ; ii -- ) { if ( isPowerOfTwo ( ii ) ) { return ii ; } } throw new IllegalArgumentException ( _CHAR No power of two found . '' ) ; }
49229	public static < T > void prefill ( final ObjectPool < T > pool , final int count ) throws Exception , IllegalArgumentException { if ( pool == _NULL ) { throw new IllegalArgumentException ( _CHAR pool must not be _NULL . _CHAR ) ; } for ( int i = _NUM ; i < count ; i ++ ) { pool . addObject ( ) ; } }
49235	private static void createAndCheckIsDirectory ( Path dir , FileAttribute < ? > ... attrs ) throws IOException { try { createDirectory ( dir , attrs ) ; } catch ( FileAlreadyExistsException x ) { if ( ! isDirectory ( dir , LinkOption . NOFOLLOW_LINKS ) ) throw x ; } }
49289	public boolean beginInfoBlockDisplay ( ChildDisplayEvent event ) { String msg = model . getInformationMessage ( ) ; if ( msg != _NULL && msg . length ( ) > _NUM ) { setDisplayFieldValue ( INFO_MSG , msg ) ; return _BOOL ; } return _BOOL ; }
49313	public long countDown ( ) { sync . releaseShared ( _NUM ) ; long result = getCount ( ) ; if ( log . isDebugEnabled ( ) ) { log . debug ( _CHAR Counting down [ _CHAR + Thread . currentThread ( ) . getName ( ) + _CHAR ] latch = _CHAR + result ) ; } return result ; }
49330	public synchronized void undoOrRedo ( ) throws CannotRedoException , CannotUndoException { if ( indexOfNextAdd == edits . size ( ) ) { undo ( ) ; } else { redo ( ) ; } }
49353	public boolean isVisible ( ) { if ( relativePosition == _NUM ) { return _BOOL ; } else { return _BOOL ; } }
49356	protected void removeIconFor ( JInternalFrame f ) { JInternalFrame . JDesktopIcon di = f . getDesktopIcon ( ) ; Container c = di . getParent ( ) ; if ( c != _NULL ) { c . remove ( di ) ; c . repaint ( di . getX ( ) , di . getY ( ) , di . getWidth ( ) , di . getHeight ( ) ) ; } }
49396	public void edit ( File file ) throws IOException { checkAWTPermission ( ) ; checkExec ( ) ; checkActionSupport ( Action . EDIT ) ; file . canWrite ( ) ; checkFileValidation ( file ) ; peer . edit ( file ) ; }
49440	public void updateBundle ( Bundle bundle ) throws UpdateException { try { bundle . update ( ) ; } catch ( BundleException e ) { throw new UpdateException ( _CHAR Can not update bundle _CHAR + bundle . toString ( ) , e ) ; } }
49489	private int pop ( ) { if ( outputStackTop > _NUM ) { return outputStack [ -- outputStackTop ] ; } else { return STACK | - ( -- owner . inputStackTop ) ; } }
49532	public void uninstallBundle ( Bundle bundle ) throws UpdateException { try { bundle . uninstall ( ) ; } catch ( BundleException e ) { throw new UpdateException ( _CHAR Can not uninstall bundle _CHAR + bundle . toString ( ) , e ) ; } }
49551	private void requestPermissions ( ) { if ( ContextCompat . checkSelfPermission ( this , Manifest . permission . WRITE_EXTERNAL_STORAGE ) != PackageManager . PERMISSION_GRANTED ) { ActivityCompat . requestPermissions ( this , new String [ ] { Manifest . permission . WRITE_EXTERNAL_STORAGE } , MY_PERMISSIONS_REQUEST_WRITE_STORAGE ) ; } else { dispatchTakePictureIntent ( ) ; } }
49590	protected boolean isAfter ( int x , int y , Rectangle innerAlloc ) { if ( majorAxis == View . X_AXIS ) { return ( x > ( innerAlloc . width + innerAlloc . x ) ) ; } else { return ( y > ( innerAlloc . height + innerAlloc . y ) ) ; } }
49595	public File makeDirty ( ) throws IOException { File f = File . createTempFile ( _CHAR dirty _CHAR , _CHAR . tmp _CHAR , repositoryLocation . getParentFile ( ) ) ; FileWriter fw = new FileWriter ( f ) ; fw . write ( _CHAR _CHAR + System . currentTimeMillis ( ) ) ; fw . flush ( ) ; fw . close ( ) ; return f ; }
49607	public StringBuilder encodeBody ( StringBuilder buffer ) { buffer . append ( protocol ) ; if ( parameters != _NULL && ! parameters . isEmpty ( ) ) { buffer = buffer . append ( SEMICOLON ) ; buffer = parameters . encode ( buffer ) ; } return buffer ; }
49612	public void log ( Level level , String msg , Throwable thrown ) { if ( ! isLoggable ( level ) ) { return ; } LogRecord lr = new LogRecord ( level , msg ) ; lr . setThrown ( thrown ) ; doLog ( lr ) ; }
49639	public Name add ( int posn , Rdn comp ) { if ( comp == _NULL ) { throw new NullPointerException ( _CHAR Can not set comp to _NULL _CHAR ) ; } rdns . add ( posn , comp ) ; unparsed = _NULL ; return this ; }
49660	public void addChunk ( final Chunk toAdd ) { final List < Chunk > list = assertChunkList ( toAdd . getGuid ( ) ) ; if ( ! list . isEmpty ( ) && ! MULTI_CHUNKS . contains ( toAdd . getGuid ( ) ) ) { throw new IllegalArgumentException ( _CHAR The GUID of the given chunk indicates , that there is no more instance allowed . '' ) ; } list . add ( toAdd ) ; assert chunkstartsUnique ( this ) : _CHAR Chunk has equal start position like an already inserted one . '' ; }
49663	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
49690	public boolean cover ( ServerState covered ) { for ( CSN coveredChange : covered . serverIdToCSN . values ( ) ) { if ( ! cover ( coveredChange ) ) { return _BOOL ; } } return _BOOL ; }
49693	private Object [ ] attrs ( Schema schema , String ... names ) { AttributeType [ ] attrs = new AttributeType [ names . length ] ; int i = _NUM ; for ( String name : names ) { attrs [ i ++ ] = schema . getAttributeType ( name ) ; } return attrs ; }
49697	protected void BuildFDArrayUsed ( int Font ) { int [ ] FDSelect = fonts [ Font ] . FDSelect ; for ( Integer glyphsInList1 : glyphsInList ) { int glyph = ( int ) glyphsInList1 ; int FD = FDSelect [ glyph ] ; FDArrayUsed . add ( FD ) ; } }
49704	static private String zeros ( int n ) { if ( n < _NUM ) return _CHAR _CHAR ; char [ ] buf = new char [ n ] ; for ( int i = _NUM ; i < n ; i ++ ) { buf [ i ] = _CHAR ; } return new String ( buf ) ; }
49705	public CMSSignedData generate ( CMSProcessable content , boolean encapsulate , Provider sigProvider ) throws NoSuchAlgorithmException , CMSException { if ( content instanceof CMSTypedData ) { return this . generate ( ( ( CMSTypedData ) content ) . getContentType ( ) . getId ( ) , content , encapsulate , sigProvider ) ; } else { return this . generate ( DATA , content , encapsulate , sigProvider ) ; } }
49726	public void visitParameter ( String name , int access ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { mv . visitParameter ( name , access ) ; } }
49727	@ Override public void run ( Runnable runnable ) { if ( ! TaskProxy . sDefaultExecutor . isBusy ( ) ) { TaskProxy . sDefaultExecutor . execute ( runnable ) ; } else { new Thread ( runnable ) . start ( ) ; } }
49739	public static void putFloat ( final String key , final float value ) { try { systemRoot . putFloat ( fixKey ( key ) , value ) ; } catch ( final Exception e ) { System . err . print ( e ) ; } }
49748	private static QueryResponseHandler createPagingHandler ( QueryResourceHandler handler , QueryRequest request ) { if ( isPagingRequested ( request ) ) { return new PagingQueryResponseHandler ( new QueryResponseHandler ( handler ) , Math . max ( _NUM , request . getPageSize ( ) ) , Math . max ( _NUM , request . getPagedResultsOffset ( ) ) ) ; } else { return new QueryResponseHandler ( handler ) ; } }
49785	public static Entry stripObjectClass ( Entry entry ) { Attribute attribute = entry . getAttribute ( CoreTokenConstants . OBJECT_CLASS ) ; if ( attribute != _NULL ) { AttributeDescription description = attribute . getAttributeDescription ( ) ; entry . removeAttribute ( description ) ; } return entry ; }
49786	public void promoteSession ( SessionID sessionID ) { InternalSession session = removeSession ( sessionID ) ; if ( session == _NULL ) { throw new IllegalStateException ( _CHAR Attempted to promote non existent session _CHAR ) ; } session . setStored ( _BOOL ) ; sessionAccessManager . persistInternalSession ( session ) ; }
49801	@ Override public void close ( ) throws IOException { try { in . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
49803	public void removeXfaForm ( ) { if ( hasXfaForm ( ) ) { PdfDictionary root = document . getCatalog ( ) . getPdfObject ( ) ; PdfDictionary acroform = root . getAsDictionary ( PdfName . AcroForm ) ; acroform . remove ( PdfName . XFA ) ; xfaForm = _NULL ; } }
49838	public void visitParameter ( String name , int access ) { if ( api < Opcodes . ASM5 ) { throw new RuntimeException ( ) ; } if ( mv != _NULL ) { mv . visitParameter ( name , access ) ; } }
49869	public static void serverFailed ( String serviceName ) { if ( serviceName . startsWith ( validRemoteURL ) ) { serverFailed = _BOOL ; } else { remoteStubs . remove ( serviceName ) ; } }
49876	final boolean tryMatchData ( ) { Object x = item ; if ( x != _NULL && x != this && casItem ( x , _NULL ) ) { LockSupport . unpark ( waiter ) ; return _BOOL ; } return _BOOL ; }
49898	protected void undoTo ( UndoableEdit edit ) throws CannotUndoException { boolean done = _BOOL ; while ( ! done ) { UndoableEdit next = edits . elementAt ( -- indexOfNextAdd ) ; next . undo ( ) ; done = next == edit ; } }
49914	public String toString ( ) { StringBuffer result = new StringBuffer ( ) ; result . append ( x ) ; result . append ( _CHAR ) ; result . append ( y ) ; result . append ( _CHAR um _CHAR ) ; return result . toString ( ) ; }
49932	protected void addUrl ( String url ) { try { addUrl ( new URL ( url ) ) ; } catch ( IOException e ) { LOGGER . info ( _CHAR Skipped CRL url ( malformed ) : _CHAR + url ) ; } }
49972	public ConnectionPool createPool ( ) throws SQLException { if ( pool != _NULL ) { return pool ; } else { return pCreatePool ( ) ; } }
49977	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
49994	private String findAlias ( String varName ) { if ( aliases == _NULL ) return varName ; String alias = aliases . get ( varName ) ; if ( alias == _NULL ) { return varName ; } return alias ; }
50002	private static int checkFormalTypeParameters ( final String signature , int pos ) { pos = checkChar ( _CHAR , signature , pos ) ; pos = checkFormalTypeParameter ( signature , pos ) ; while ( getChar ( signature , pos ) != _CHAR ) { pos = checkFormalTypeParameter ( signature , pos ) ; } return pos + _NUM ; }
50014	@ Override public void write ( String s ) throws IOException { if ( writer != _NULL ) { writer . write ( s ) ; } else { write ( s , _NUM , s . length ( ) ) ; } }
50055	public boolean enabled ( ) { for ( PublisherSettings settings : publisherSettings ) { if ( shouldLog ( settings . classSettings ) || settings . methodSettings != _NULL ) { return _BOOL ; } } return _BOOL ; }
50058	public static < T > T cloneBean ( final Object bean ) { try { return ( T ) BeanUtils . cloneBean ( bean ) ; } catch ( IllegalAccessException | InstantiationException | InvocationTargetException | NoSuchMethodException e ) { throw new RuntimeException ( e ) ; } }
50141	@ Override public synchronized boolean add ( E object ) { if ( elementCount == elementData . length ) { growByOne ( ) ; } elementData [ elementCount ++ ] = object ; modCount ++ ; return _BOOL ; }
50188	public static long counter32Value ( long v ) { if ( v > ( pow ( _NUM , _NUM ) - _NUM ) ) { return ( v % pow ( _NUM , _NUM ) ) ; } else { return v ; } }
50207	public static String marshal ( TokenRestriction tokenRestriction ) throws Exception { ByteArrayOutputStream bs = new ByteArrayOutputStream ( ) ; ObjectOutputStream os = new ObjectOutputStream ( bs ) ; os . writeObject ( tokenRestriction ) ; os . flush ( ) ; os . close ( ) ; return Base64 . encode ( bs . toByteArray ( ) ) ; }
50220	public boolean endsWith ( Name n ) { if ( n instanceof CompositeName ) { return ( impl . endsWith ( n . size ( ) , n . getAll ( ) ) ) ; } else { return _BOOL ; } }
50223	public boolean checkMinDegree ( int value ) { if ( value >= ROLE_CARDINALITY_INFINITY && ( minDegree == ROLE_CARDINALITY_INFINITY || value >= minDegree ) ) { return _BOOL ; } else { return _BOOL ; } }
50255	@ Override public StateInteractive left_button_clicked ( PlaPointFloat p_location ) { r_brd . end_notify_observers ( ) ; actlog_start_scope ( LogfileScope . COMPLETE_SCOPE ) ; for ( int curr_net_no : route_support . net_nos ) { i_brd . update_ratsnest ( curr_net_no ) ; } return this . return_state ; }
50278	public void consumeUpTo ( UpdateMsg finalMsg ) { final CSN finalCSN = finalMsg . getCSN ( ) ; UpdateMsg msg ; do { msg = removeFirst ( ) ; } while ( ! finalCSN . equals ( msg . getCSN ( ) ) ) ; }
50316	public void removeAttribute ( String name ) { int i = names . indexOf ( name ) ; if ( i >= _NUM ) { names . removeElementAt ( i ) ; types . removeElementAt ( i ) ; values . removeElementAt ( i ) ; } }
50323	public boolean equals ( Object obj ) { if ( obj == _NULL ) return _BOOL ; if ( ! this . getClass ( ) . equals ( obj . getClass ( ) ) ) { return _BOOL ; } Host otherHost = ( Host ) obj ; return otherHost . hostname . equals ( hostname ) ; }
50334	public static < T > T newInstance ( final Class < T > clas ) { try { return clas . newInstance ( ) ; } catch ( final Exception e ) { throw new RuntimeException ( e ) ; } }
50369	public String resolveRelativeUri ( String uri ) { if ( uri . startsWith ( _CHAR / _CHAR ) || uri . startsWith ( File . separator ) ) { return uri ; } else { return baseURI + uri ; } }
50371	public boolean isValidToken ( SSOToken token , boolean resetIdleTime ) { try { return ( getProvider ( token ) . isValidToken ( token , resetIdleTime ) ) ; } catch ( SSOException ignored ) { return ( _BOOL ) ; } }
50404	public void resetOriginals ( ) { mStartingStartTrim = _NUM ; mStartingEndTrim = _NUM ; mStartingRotation = _NUM ; setStartTrim ( _NUM ) ; setEndTrim ( _NUM ) ; setRotation ( _NUM ) ; }
50418	public void write ( String fileName ) throws IOException { FileOutputStream outputFile ; byte profileData [ ] ; profileData = getData ( ) ; outputFile = new FileOutputStream ( fileName ) ; outputFile . write ( profileData ) ; outputFile . close ( ) ; }
50430	public void addRestrictedDomains ( Collection < String > domainNames ) { if ( domainNames == _NULL ) { return ; } for ( String domainName : domainNames ) { addRestrictedDomain ( domainName ) ; } }
50451	private Object executeMethod ( final Method method , final ApplicationContext context , final Object [ ] params ) throws PrivilegedActionException , IllegalAccessException , InvocationTargetException { if ( SecurityUtil . isPackageProtectionEnabled ( ) ) { return AccessController . doPrivileged ( new PrivilegedExecuteMethod ( method , context , params ) ) ; } else { return method . invoke ( context , params ) ; } }
50458	private String normalizeString ( final String string ) { final StringBuilder builder = new StringBuilder ( string . length ( ) ) ; prepareUnicode ( builder , ByteString . valueOfUtf8 ( string ) , ignoreWhiteSpaceInStrings , ! caseSensitiveStrings ) ; if ( builder . length ( ) == _NUM && string . length ( ) > _NUM ) { return _CHAR _CHAR ; } return builder . toString ( ) ; }
50478	private static final boolean isWhiteSpace ( final byte c ) { if ( c == _CHAR || c == _CHAR || c == _CHAR || c == _CHAR || c == _CHAR ) { return _BOOL ; } else { return _BOOL ; } }
50487	public void deleteStaticGroups ( Set groupDNs ) throws AMException , SSOException { Iterator iter = groupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupDN = ( String ) iter . next ( ) ; AMStaticGroup group = new AMStaticGroupImpl ( super . token , groupDN ) ; group . delete ( ) ; } }
50529	public List < Integer > findCheapestPath ( int begin , int end , float [ ] [ ] matrix ) { init ( matrix ) ; floyd ( matrix ) ; result . add ( begin ) ; findPath ( begin , end ) ; result . add ( end ) ; return result ; }
50533	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
50555	public void printSet ( Set set , int indentLevel ) { Iterator itr = set . iterator ( ) ; while ( itr . hasNext ( ) ) { printIndent ( indentLevel ) ; writer . println ( itr . next ( ) . toString ( ) ) ; } writer . flush ( ) ; }
50558	public boolean runningWithGoal ( String ... goals ) throws MojoExecutionException { for ( String goal : goals ) { if ( goalFinder . runningWithGoal ( project , session , goal ) ) { return _BOOL ; } } return _BOOL ; }
50573	int useCount ( Name n ) { if ( arguments == _NULL ) return _NUM ; int count = _NUM ; for ( int i = arguments . length ; -- i >= _NUM ; ) { if ( arguments [ i ] == n ) ++ count ; } return count ; }
50583	public boolean isPluginEnabled ( Plugin plugin ) { if ( ( plugin != _NULL ) && ( plugins . contains ( plugin ) ) ) { return plugin . isEnabled ( ) ; } else { return _BOOL ; } }
50611	public void changeStateAndNotify ( SessionEventType eventType ) { fireSessionEvent ( eventType ) ; sessionLogging . logEvent ( toSessionInfo ( ) , eventType ) ; timedOutTimeInSeconds = MILLISECONDS . toSeconds ( currentTimeMillis ( ) ) ; putProperty ( _CHAR SessionTimedOut _CHAR , String . valueOf ( timedOutTimeInSeconds ) ) ; sessionService . execSessionTimeoutHandlers ( sessionID , eventType ) ; sessionService . destroyInternalSession ( sessionID ) ; }
50644	protected void http2Connect ( ) throws Exception { enableHttp2 ( ) ; configureAndStartWebApplication ( ) ; openClientConnection ( ) ; doHttpUpgrade ( ) ; sendClientPreface ( ) ; validateHttp2InitialResponse ( ) ; }
50654	protected void add ( Object ... components ) { if ( components == _NULL ) { return ; } for ( Object component : components ) { add ( component ) ; } }
50655	private String retrieveGenerationId ( final File directory ) { final File generationId = retrieveGenerationIdFile ( directory ) ; if ( generationId != _NULL ) { String filename = generationId . getName ( ) ; return filename . substring ( GENERATION_ID_FILE_PREFIX . length ( ) , filename . length ( ) - GENERATION_ID_FILE_SUFFIX . length ( ) ) ; } return _NULL ; }
50676	protected synchronized void bcsPreDeserializationHook ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { serializable = ois . readInt ( ) ; int count = serializable ; while ( count > _NUM ) { services . put ( ois . readObject ( ) , ois . readObject ( ) ) ; count -- ; } }
50717	@ Override protected void destroyInternal ( ) throws LifecycleException { for ( Realm realm : realms ) { if ( realm instanceof Lifecycle ) { ( ( Lifecycle ) realm ) . destroy ( ) ; } } super . destroyInternal ( ) ; }
50735	private static boolean isReferralEntry ( SearchResultEntry entry ) { for ( String value : asSetOfString ( entry , _CHAR objectClass _CHAR ) ) { if ( _CHAR referral _CHAR . equalsIgnoreCase ( value ) ) { return firstValueAsString ( entry , _CHAR ref _CHAR ) != _NULL ; } } return _BOOL ; }
50741	public static void main ( String [ ] args ) { try { new MergeProperties ( args [ _NUM ] , args [ _NUM ] , args [ _NUM ] ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } }
50781	public boolean addElement ( Object obj ) { synchronized ( actions ) { if ( allowToChange ) { return actions . add ( obj ) ; } } return _BOOL ; }
50806	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
50821	public String generateShortUpgradeReport ( SSOToken adminToken , boolean html ) { String delimiter = html ? HTML_BR : TXT_LF ; StringBuilder report = new StringBuilder ( ) ; for ( UpgradeStep upgradeStep : upgradeSteps ) { report . append ( upgradeStep . getShortReport ( delimiter ) ) ; } return report . toString ( ) ; }
50891	private void validateDnsNames ( Set dnsNameSet ) throws PolicyException { Iterator dnsNames = dnsNameSet . iterator ( ) ; while ( dnsNames . hasNext ( ) ) { String dnsName = ( String ) dnsNames . next ( ) ; validateDnsName ( dnsName ) ; dnsList . add ( dnsName . toLowerCase ( ) ) ; } }
50900	public boolean isValid ( Object session ) throws SessionException { try { return SSOTokenManager . getInstance ( ) . isValidToken ( ( SSOToken ) session ) ; } catch ( SSOException se ) { throw new SessionException ( se ) ; } }
50911	public void removeLocalEjb ( String name ) { try { envCtx . unbind ( name ) ; } catch ( NamingException e ) { log . error ( sm . getString ( _CHAR naming . unbindFailed _CHAR , e ) ) ; } }
50979	public int indexOfTab ( String title ) { for ( int i = _NUM ; i < getTabCount ( ) ; i ++ ) { if ( getTitleAt ( i ) . equals ( title == _NULL ? _CHAR _CHAR : title ) ) { return i ; } } return - _NUM ; }
51036	public static short parseShort ( String string , int radix ) throws NumberFormatException { int intValue = Integer . parseInt ( string , radix ) ; short result = ( short ) intValue ; if ( result == intValue ) { return result ; } throw new NumberFormatException ( _CHAR Value out of range for short : \ '' '' + string + '' \ '' '' ) ; }
51039	public Object clone ( ) throws CloneNotSupportedException { NamespaceMappings clone = new NamespaceMappings ( ) ; clone . m_nodeStack = ( NamespaceMappings . Stack ) m_nodeStack . clone ( ) ; clone . count = this . count ; clone . m_namespaces = ( Hashtable ) m_namespaces . clone ( ) ; clone . count = count ; return clone ; }
51065	public static Date parseyyyyMMddDate ( String d ) { try { return new SimpleDateFormat ( _CHAR yyyy - MM - dd _CHAR ) . parse ( d ) ; } catch ( Exception e ) { } return _NULL ; }
51116	private static String parseStringValue ( String parseString , String openTag , String closeTag , DataTypeValidationException exception ) throws DataTypeValidationException { String tagValue ; tagValue = parseTagValue ( parseString , openTag , closeTag ) ; if ( tagValue == _NULL ) { throw exception ; } return tagValue ; }
51121	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
51135	@ Override public void close ( ) throws IOException { try { in . close ( ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
51177	public void shutdown ( ) { shutdown = _BOOL ; try { join ( ) ; } catch ( InterruptedException ex ) { } }
51181	public synchronized void closeDriver ( ) { if ( camera != _NULL ) { camera . getCamera ( ) . release ( ) ; camera = _NULL ; framingRect = _NULL ; framingRectInPreview = _NULL ; } }
51182	public void publishUpdateMsg ( DN baseDN , UpdateMsg updateMsg ) throws ChangelogException { if ( ! predicate . isECLEnabledDomain ( baseDN ) ) { return ; } final CSN oldestCSNBefore = getOldestLastAliveCSN ( ) ; lastAliveCSNs . update ( baseDN , updateMsg . getCSN ( ) ) ; tryNotify ( oldestCSNBefore ) ; }
51231	public static void validate ( DefaultJAXBContextImpl jaxbCtx , ValidationContext context , ValidatableObject vo ) throws SAXException { try { new MSVValidator ( jaxbCtx , context , vo ) . _validate ( ) ; } catch ( RuntimeException e ) { context . reportEvent ( vo , e ) ; } }
51236	public static JsonValue toJsonValue ( byte [ ] json ) throws JsonException { try { return new JsonValue ( MAPPER . readValue ( json , Map . class ) ) ; } catch ( IOException e ) { throw new JsonException ( _CHAR Failed to parse json _CHAR , e ) ; } }
51256	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
51257	public void fix_items ( ) { for ( BrdItem curr_ob : items_list ) { if ( curr_ob . get_fixed_state ( ) . ordinal ( ) < ItemFixState . USER_FIXED . ordinal ( ) ) { curr_ob . set_fixed_state ( ItemFixState . USER_FIXED ) ; } } actlog_start_scope ( LogfileScope . FIX_SELECTED_ITEMS ) ; }
51301	private static File createReserveDiskCacheDir ( Context context ) { File cacheDir = StorageUtils . getCacheDirectory ( context , _BOOL ) ; File individualDir = new File ( cacheDir , _CHAR uil - cache _CHAR ) ; if ( individualDir . exists ( ) || individualDir . mkdir ( ) ) { cacheDir = individualDir ; } return cacheDir ; }
51312	void recomposeAttributeSets ( ElemAttributeSet attrSet ) { ArrayList attrSetList = ( ArrayList ) m_attrSets . get ( attrSet . getName ( ) ) ; if ( _NULL == attrSetList ) { attrSetList = new ArrayList ( ) ; m_attrSets . put ( attrSet . getName ( ) , attrSetList ) ; } attrSetList . add ( attrSet ) ; }
51361	public static String generateMessageHandle ( ) { if ( random == _NULL ) { return _NULL ; } byte bytes [ ] = new byte [ SAML2Constants . ID_LENGTH ] ; random . nextBytes ( bytes ) ; return byteArrayToString ( bytes ) ; }
51490	public void merge ( ) throws IOException { if ( used || validated . size ( ) == _NUM ) return ; used = _BOOL ; PdfDictionary catalog = document . getCatalog ( ) . getPdfObject ( ) ; PdfObject dss = catalog . get ( PdfName . DSS ) ; if ( dss == _NULL ) createDss ( ) ; else updateDss ( ) ; }
51503	private int pop ( ) { if ( outputStackTop > _NUM ) { return outputStack [ -- outputStackTop ] ; } else { return STACK | - ( -- owner . inputStackTop ) ; } }
51524	private Set < String > generateSecretHolder ( ) { final byte [ ] buff = new byte [ _NUM ] ; NUMGEN . nextBytes ( buff ) ; final String secret = Base64 . encode ( buff , _BOOL ) ; final Set < String > holder = new HashSet < String > ( ) ; holder . add ( secret ) ; return holder ; }
51575	private void updateEmptySearchBackgroundBounds ( ) { if ( mEmptySearchBackground == _NULL ) { return ; } int x = ( getMeasuredWidth ( ) - mEmptySearchBackground . getIntrinsicWidth ( ) ) / _NUM ; int y = mEmptySearchBackgroundTopOffset ; mEmptySearchBackground . setBounds ( x , y , x + mEmptySearchBackground . getIntrinsicWidth ( ) , y + mEmptySearchBackground . getIntrinsicHeight ( ) ) ; }
51613	public final void update ( byte [ ] input ) throws IllegalStateException { if ( ! isInitMac ) { throw new IllegalStateException ( ) ; } if ( input != _NULL ) { spiImpl . engineUpdate ( input , _NUM , input . length ) ; } }
51643	public < T > T unwrap ( java . lang . Class < T > iface ) throws java . sql . SQLException { if ( isWrapperFor ( iface ) ) { return iface . cast ( this ) ; } else { throw new SQLException ( _CHAR unwrap failed for : '' + iface ) ; } }
51664	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
51667	public void printStats ( ) { if ( table . size ( ) != _NUM ) { FSAssertionManager . assrtStats . record ( _CHAR Number of assertion in table for provider '' + providerId + '' under realm '' + realm + '' : '' + table . size ( ) ) ; } else { FSAssertionManager . assrtStats . record ( _CHAR No assertion found in table for provider '' + providerId + '' under realm '' + realm + '' . '' ) ; } }
51668	private void checkHeadingDisplayed ( ) { if ( ! state . isHeadingDisplayed ) { app . println ( ) ; app . println ( ) ; app . println ( heading ) ; state . isHeadingDisplayed = _BOOL ; } }
51674	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case MENU_HELP : help ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
51730	public < X extends Throwable > int orElseThrow ( Supplier < X > exceptionSupplier ) throws X { if ( isPresent ) { return value ; } else { throw exceptionSupplier . get ( ) ; } }
51745	private int convertLocationToModel ( int x , int y ) { int row = convertLocationToRow ( x , y , _BOOL ) ; int column = convertLocationToColumn ( x , y ) ; if ( row >= _NUM && column >= _NUM ) { return getModelIndex ( column , row ) ; } return - _NUM ; }
51788	@ Override public void release ( ) { parent = _NULL ; id = _NULL ; if ( values != _NULL ) { values . clear ( ) ; } values = _NULL ; }
51824	public String normalizeTargetId ( String aTargetId ) { if ( ! isTargetCaseSensitive ( ) ) { return ( aTargetId == _NULL ? _NULL : aTargetId . toLowerCase ( ) ) ; } else { return aTargetId ; } }
51825	Parsed copy ( ) { Parsed cloned = new Parsed ( ) ; cloned . fieldValues . putAll ( this . fieldValues ) ; cloned . zone = this . zone ; cloned . chrono = this . chrono ; cloned . leapSecond = this . leapSecond ; return cloned ; }
51857	public static void pickImage ( Activity activity , int requestCode ) { try { activity . startActivityForResult ( getImagePicker ( ) , requestCode ) ; } catch ( ActivityNotFoundException e ) { showImagePickerError ( activity ) ; } }
51861	public Observable < DriveFile > updateFileContent ( final DriveFile driveFile , Uri uri ) { try { return updateFileContent ( driveFile , getContentResolver ( ) . openInputStream ( uri ) ) ; } catch ( FileNotFoundException e ) { return Observable . error ( e ) ; } }
51879	public void refresh ( ) { RoutingBoard routing_board = board_frame . board_panel . itera_board . get_routing_board ( ) ; if ( clearance_table_model . getRowCount ( ) != routing_board . brd_rules . clearance_matrix . get_class_count ( ) ) { adjust_clearance_table ( ) ; } clearance_table_model . set_values ( layer_combo_box . get_selected_layer ( ) . index ) ; repaint ( ) ; }
51883	public static Name lowerCamel ( String ... pieces ) { List < NamePiece > namePieces = new ArrayList < > ( ) ; for ( String piece : pieces ) { validateCamel ( piece , CheckCase . LOWER ) ; namePieces . add ( new NamePiece ( piece , CaseFormat . LOWER_CAMEL ) ) ; } return new Name ( namePieces ) ; }
51884	@ Override public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { return _NULL ; } }
51888	private boolean isDatabaseIndex ( final String indexName ) { for ( final String dbIndex : DATABASE_INDEXES ) { if ( indexName . equalsIgnoreCase ( dbIndex ) ) { return _BOOL ; } } return _BOOL ; }
51937	@ Override public void newLine ( ) throws IOException { if ( writer != _NULL ) { writer . write ( System . lineSeparator ( ) ) ; } else { write ( System . lineSeparator ( ) ) ; } }
51938	public void createOffscreenSurface ( int width , int height ) { if ( mEGLSurface != EGL14 . EGL_NO_SURFACE ) { throw new IllegalStateException ( _CHAR surface already created _CHAR ) ; } mEGLSurface = mEglCore . createOffscreenSurface ( width , height ) ; mWidth = width ; mHeight = height ; }
51948	boolean takeIndexWrapped ( ) { if ( isDetached ( ) ) return _BOOL ; if ( itrs . cycles - prevCycles > _NUM ) { shutdown ( ) ; return _BOOL ; } return _BOOL ; }
52003	private static void createFile ( File file ) throws IOException { if ( ! file . exists ( ) ) { createDirectory ( file . getParent ( ) ) ; if ( ! file . createNewFile ( ) ) { throw new IOException ( _CHAR Failed to create _CHAR + file . getPath ( ) ) ; } } }
52013	@ Override protected synchronized void open ( ) { super . open ( ) ; if ( currentLogFile . length ( ) == _NUM ) { writer . println ( _CHAR # Fields : _CHAR + pattern ) ; writer . println ( _CHAR # Version : _NUM . _NUM _CHAR ) ; writer . println ( _CHAR # Software : _CHAR + ServerInfo . getServerInfo ( ) ) ; } }
52017	public Class < ? > type ( ) { if ( isClass ) { return ( Class < ? > ) object ; } else { return object . getClass ( ) ; } }
52083	@ Override public String encodeRedirectURL ( String url ) { if ( isEncodeable ( toAbsolute ( url ) ) ) { return ( toEncoded ( url , request . getSessionInternal ( ) . getIdInternal ( ) ) ) ; } else { return ( url ) ; } }
52087	private Object lock ( ) { Document document = getDocument ( ) ; if ( document instanceof AbstractDocument ) { ( ( AbstractDocument ) document ) . readLock ( ) ; return document ; } return _NULL ; }
52115	private void updateOver ( boolean o ) { boolean old = isRollover ( ) ; this . over = o && isEnabled ( ) ; boolean newo = isRollover ( ) ; if ( shouldActLikeButton ( ) && old != newo ) { comboBox . repaint ( ) ; } }
52214	public Object clone ( ) throws CloneNotSupportedException { if ( this instanceof Cloneable ) { return super . clone ( ) ; } else { throw new CloneNotSupportedException ( ) ; } }
52220	public void ignorableWhitespace ( char ch [ ] , int start , int length ) throws org . xml . sax . SAXException { try { writeNormalizedChars ( ch , start , length , m_lineSepUse ) ; } catch ( IOException ioe ) { throw new SAXException ( ioe ) ; } }
52221	public static Intent buildStartInBackgroundIntent ( File script ) { final ComponentName componentName = Constants . SL4A_SERVICE_LAUNCHER_COMPONENT_NAME ; Intent intent = new Intent ( ) ; intent . setComponent ( componentName ) ; intent . setAction ( Constants . ACTION_LAUNCH_BACKGROUND_SCRIPT ) ; intent . putExtra ( Constants . EXTRA_SCRIPT_PATH , script . getAbsolutePath ( ) ) ; return intent ; }
52229	@ Override public void close ( ) throws IOException { buf = _NULL ; InputStream localIn = in ; in = _NULL ; if ( localIn != _NULL ) { localIn . close ( ) ; } }
52235	public static IngredientsFragment newInstance ( Recipe recipe , int sectionNumber ) { IngredientsFragment fragment = new IngredientsFragment ( ) ; fragment . recipe = recipe ; Bundle args = new Bundle ( ) ; args . putInt ( ARG_SECTION_NUMBER , sectionNumber ) ; fragment . setArguments ( args ) ; return fragment ; }
52260	private void readObject ( ObjectInputStream stream ) throws IOException , TransformerException { try { stream . defaultReadObject ( ) ; } catch ( ClassNotFoundException cnfe ) { throw new TransformerException ( cnfe ) ; } }
52278	public boolean isSignatureValid ( BasicOCSPResp ocspResp , Certificate responderCert ) { try { return SignUtils . isSignatureValid ( ocspResp , responderCert , _CHAR BC _CHAR ) ; } catch ( Exception e ) { return _BOOL ; } }
52281	public CipherParameters generateDerivedParameters ( int keySize ) { keySize = keySize / _NUM ; if ( keySize > digest . getDigestSize ( ) ) { throw new IllegalArgumentException ( _CHAR Ca n _CHAR_CHAR_CHAR_CHAR ) ; } byte [ ] dKey = generateDerivedKey ( ) ; return new KeyParameter ( dKey , 0 , keySize ) ; }
52286	public Object nextElement ( ) { if ( i < attr . length ) { Object o = attr [ i ] ; i += _NUM ; return o ; } throw new NoSuchElementException ( ) ; }
52288	public void run ( ) { try { Thread . sleep ( timeout ) ; thread . interrupt ( ) ; } catch ( InterruptedException e ) { } }
52306	public Header nextHeader ( ) throws NoSuchElementException { final int current = this . currentIndex ; if ( current < _NUM ) { throw new NoSuchElementException ( _CHAR Iteration already finished . '' ) ; } this . currentIndex = findNext ( current ) ; return this . allHeaders [ current ] ; }
52318	public static boolean isEmpty ( String str ) { if ( str == _NULL || str . length ( ) == _NUM || str . equalsIgnoreCase ( _CHAR _NULL _CHAR ) || str . isEmpty ( ) || str . equals ( _CHAR _CHAR ) ) { return _BOOL ; } else { return _BOOL ; } }
52320	private void initializeSubentryManager ( ) throws InitializationException { try { subentryManager = new SubentryManager ( ) ; } catch ( DirectoryException de ) { throw new InitializationException ( de . getMessageObject ( ) ) ; } }
52354	@ Override public void write ( ASN1Writer stream ) throws IOException { stream . writeStartSequence ( OP_TYPE_EXTENDED_REQUEST ) ; stream . writeOctetString ( TYPE_EXTENDED_REQUEST_OID , oid ) ; if ( value != _NULL ) { stream . writeOctetString ( TYPE_EXTENDED_REQUEST_VALUE , value ) ; } stream . writeEndSequence ( ) ; }
52374	private void delayedExecute ( RunnableScheduledFuture < ? > task ) { if ( isShutdown ( ) ) reject ( task ) ; else { super . getQueue ( ) . add ( task ) ; if ( isShutdown ( ) && ! canRunInCurrentRunState ( task . isPeriodic ( ) ) && remove ( task ) ) task . cancel ( _BOOL ) ; else ensurePrestart ( ) ; } }
52392	private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject ( ) ; Attribute [ ] attrs = toArray ( ) ; s . writeInt ( attrs . length ) ; for ( int i = _NUM ; i < attrs . length ; i ++ ) { s . writeObject ( attrs [ i ] ) ; } }
52395	protected void updateReadyStatus ( ) { if ( command != _NULL && env != _NULL && wd != _NULL && params != _NULL && response != _NULL ) { readyToRun = _BOOL ; } else { readyToRun = _BOOL ; } }
52427	private void disconnectFromReplServer ( ) throws Exception { String synchroServerStringDN = _CHAR cn = _CHAR + testName + _CHAR , cn = domains , '' + SYNCHRO_PLUGIN_DN ; assertNotNull ( synchroServerEntry ) ; DN synchroServerDN = DN . valueOf ( synchroServerStringDN ) ; deleteEntry ( synchroServerDN ) ; synchroServerEntry = _NULL ; configEntriesToCleanup . remove ( synchroServerDN ) ; }
52438	public void deleteDynamicGroups ( Set dynamicGroupDNs ) throws AMException , SSOException { Iterator iter = dynamicGroupDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String dynamicGroupDN = ( String ) iter . next ( ) ; AMDynamicGroup dynamicGroup = new AMDynamicGroupImpl ( super . token , dynamicGroupDN ) ; dynamicGroup . delete ( ) ; } }
52449	public int peek ( int n ) { try { return m_map [ m_firstFree - ( _NUM + n ) ] ; } catch ( ArrayIndexOutOfBoundsException e ) { throw new EmptyStackException ( ) ; } }
52457	void notify ( final LocalizableMessage message , final int msgType ) throws ClientException { try { handler . handle ( new Callback [ ] { new FormattedNotificationCallback ( message , msgType ) } ) ; } catch ( final Exception e ) { throw new ClientException ( ReturnCode . ERROR_UNEXPECTED , ERR_UPGRADE_DISPLAY_NOTIFICATION_ERROR . get ( e . getMessage ( ) ) ) ; } }
52470	protected void applicationAnnotationsConfig ( ) { long t1 = System . currentTimeMillis ( ) ; WebAnnotationSet . loadApplicationAnnotations ( context ) ; long t2 = System . currentTimeMillis ( ) ; if ( context instanceof StandardContext ) { ( ( StandardContext ) context ) . setStartupTime ( t2 - t1 + ( ( StandardContext ) context ) . getStartupTime ( ) ) ; } }
52504	public boolean isLogEnabled ( ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isLogEnabled ( ) ; } }
52523	public static ByteString valueOfLong ( long l ) { final byte [ ] bytes = new byte [ _NUM ] ; for ( int i = _NUM ; i >= _NUM ; i -- ) { bytes [ i ] = ( byte ) l ; l >> >= _NUM ; } return wrap ( bytes ) ; }
52524	public void Logi ( String tag , String msg ) { if ( mDebug ) { if ( TextUtils . isEmpty ( msg ) ) { throw new NullPointerException ( _CHAR The message is _NULL ! _CHAR ) ; } Log . i ( tag == _NULL ? Constants . DEBUG_TAG : tag , msg ) ; } }
52530	public void addSubpaths ( List < ? extends Subpath > subpaths ) { if ( subpaths . size ( ) > _NUM ) { for ( Subpath subpath : subpaths ) { this . subpaths . add ( new Subpath ( subpath ) ) ; } currentPoint = this . subpaths . get ( subpaths . size ( ) - _NUM ) . getLastPoint ( ) ; } }
52534	public static void println ( String message ) { synchronized ( logSync ) { if ( logWriter != _NULL ) { logWriter . println ( message ) ; logWriter . flush ( ) ; } } }
52577	protected Request createTiRegisterRequest ( ) throws TiUnexpectedError { try { return createRequest ( Request . REGISTER , tiAddressFactory , tiHeaderFactory , tiMessageFactory , tiSipProvider , riSipProvider , _NULL , _NULL , _NULL ) ; } catch ( Throwable exc ) { throw new TiUnexpectedError ( _CHAR Failed to create a TI - > RI register request _CHAR , exc ) ; } }
52656	public void handleButton2Request ( RequestInvocationEvent event ) { acModel = ( AuthConfigurationModel ) getModel ( ) ; acModel . reset ( getRealmName ( ) , getConfigName ( ) ) ; tablePopulated = _BOOL ; removePageSessionAttribute ( ENTRY_LIST ) ; removePageSessionAttribute ( ReorderAuthChainsViewBean . PG_SESSION_TRACKING ) ; forwardTo ( ) ; }
52664	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
52672	@ AfterClass public static void cleanupClass ( ) { try { Misc . deleteDirectorySimple ( scenario . getRepositoryLocation ( ) ) ; } catch ( Exception ignore ) { System . err . println ( _CHAR can not remove _CHAR + scenario . getRepositoryLocation ( ) ) ; } }
52678	public void resetEffectiveRightsParams ( ) { this . targAttrFilterAcis . clear ( ) ; this . decidingAci = _NULL ; this . evalReason = _NULL ; this . targAttrFiltersMatch = _BOOL ; this . summaryString = _NULL ; this . targAttrMatch = _NUM ; }
52703	@ Override public void close ( ) throws IOException { if ( writer != _NULL ) { writer . close ( ) ; } else { closed = _BOOL ; } }
52711	public boolean equals ( Object obj ) { if ( obj instanceof Type ) { Type inType = ( Type ) obj ; SchemaType inSchemaType = inType . getInternalSchemaType ( ) ; return schemaType . equals ( inSchemaType ) ; } return ( _BOOL ) ; }
52746	public void deleteOrganizationalUnits ( Set organizationalUnitDNs ) throws AMException , SSOException { Iterator iter = organizationalUnitDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String organizationalUnitDN = ( String ) iter . next ( ) ; AMOrganizationalUnit orgUnit = new AMOrganizationalUnitImpl ( super . token , organizationalUnitDN ) ; orgUnit . delete ( ) ; } }
52767	private void unregisterServerHandler ( ServerHandler sHandler ) { if ( sHandler . isReplicationServer ( ) ) { connectedRSs . remove ( sHandler . getServerId ( ) ) ; } else { connectedDSs . remove ( sHandler . getServerId ( ) ) ; } }
52773	public boolean hasColumn ( ResultSetMetaData rsMetaData , String columnName ) throws SQLException { for ( int colPos = _NUM ; colPos <= rsMetaData . getColumnCount ( ) ; colPos ++ ) { if ( columnName . equalsIgnoreCase ( rsMetaData . getColumnName ( colPos ) ) ) { return _BOOL ; } } return _BOOL ; }
52791	public int skipWhitespaces ( ) { int skipped = _NUM ; while ( pos < length && source . charAt ( pos ) == _CHAR ) { skipped ++ ; pos ++ ; } return skipped ; }
52810	public boolean equals ( Object o ) { if ( o == _NULL ) return _BOOL ; if ( this == o ) return _BOOL ; if ( ! ( o instanceof SecurIDPrincipal ) ) return _BOOL ; SecurIDPrincipal that = ( SecurIDPrincipal ) o ; if ( this . getName ( ) . equals ( that . getName ( ) ) ) return _BOOL ; return _BOOL ; }
52832	private static void reverseRange ( Object [ ] a , int lo , int hi ) { hi -- ; while ( lo < hi ) { Object t = a [ lo ] ; a [ lo ++ ] = a [ hi ] ; a [ hi -- ] = t ; } }
52874	protected boolean isOnline ( ) { String isOnline = getConfig ( Config . online ) ; if ( isOnline != _NULL ) { return Configs . asBoolean ( isOnline ) ; } Boolean ret = asBooleanFromGlobalProp ( _CHAR fabric8 . online _CHAR ) ; return ret != _NULL ? ret : getDefaultOnline ( ) ; }
52939	protected final void closeSessionAndClearTokenInformation ( ) { if ( sessionTracker != _NULL ) { Session currentSession = sessionTracker . getOpenSession ( ) ; if ( currentSession != _NULL ) { currentSession . closeAndClearTokenInformation ( ) ; } } }
52945	public void printStackTrace ( PrintWriter s ) { if ( ! isJDK14OrAbove && causeOnJDK13OrBelow != _NULL ) { printStackTrace0 ( s ) ; } else { super . printStackTrace ( s ) ; } }
53051	private void adjustCaret ( MouseEvent e ) { if ( ( e . getModifiers ( ) & ActionEvent . SHIFT_MASK ) != _NUM && getDot ( ) != - _NUM ) { moveCaret ( e ) ; } else if ( ! e . isPopupTrigger ( ) ) { positionCaret ( e ) ; } }
53066	public static String generateID ( ) { if ( random == _NULL ) { return _NULL ; } byte bytes [ ] = new byte [ SAML2Constants . ID_LENGTH ] ; random . nextBytes ( bytes ) ; return ( SAML2ID_PREFIX + byteArrayToHexString ( bytes ) ) ; }
53085	public boolean startsWith ( Name n ) { if ( n instanceof CompoundName ) { return ( impl . startsWith ( n . size ( ) , n . getAll ( ) ) ) ; } else { return _BOOL ; } }
53089	private boolean containsObjectClassByName ( String objectClassName ) { for ( String ocName : objectClasses . values ( ) ) { if ( objectClassName . equalsIgnoreCase ( ocName ) ) { return _BOOL ; } } return _BOOL ; }
53094	public Object clone ( ) { AttrSet attrSet = new AttrSet ( ) ; int size = _attrs . size ( ) ; for ( int i = _NUM ; i < size ; i ++ ) { attrSet . add ( ( Attr ) ( ( Attr ) _attrs . get ( i ) ) . clone ( ) ) ; } return attrSet ; }
53128	public static IntroFragment newInstance ( String title , String description ) { Bundle args = new Bundle ( ) ; args . putString ( TITLE , title ) ; args . putString ( DESCRIPTION , description ) ; IntroFragment fragment = new IntroFragment ( ) ; fragment . setArguments ( args ) ; return fragment ; }
53133	public void fixupVariables ( java . util . Vector vars , int globalsSize ) { super . fixupVariables ( vars , globalsSize ) ; if ( m_nodeTests != _NULL ) { for ( int i = _NUM ; i < m_nodeTests . length ; i ++ ) { m_nodeTests [ i ] . fixupVariables ( vars , globalsSize ) ; } } }
53149	public static void deleteFileWithRetry ( Path path ) throws IOException { try { deleteFileWithRetry0 ( path ) ; } catch ( InterruptedException x ) { throw new IOException ( _CHAR Interrupted while deleting . '' , x ) ; } }
53164	public static boolean forwardSuccessExists ( HttpServletRequest req ) { String forward = req . getParameter ( _CHAR forward _CHAR ) ; boolean isForward = ( forward != _NULL ) && forward . equals ( _CHAR _BOOL _CHAR ) ; if ( utilDebug . messageEnabled ( ) ) { utilDebug . message ( _CHAR forwardSuccessExists : _CHAR + isForward ) ; } return isForward ; }
53173	private void save ( ) { try { FileUtils . write ( new File ( jarName + _CHAR - Scan . html _CHAR ) , text ) ; } catch ( IOException e ) { JOptionPane . showMessageDialog ( _NULL , e . getMessage ( ) , _CHAR Error saving file ! _CHAR , JOptionPane . ERROR_MESSAGE ) ; } }
53204	public int size ( ) { if ( relations == _NULL ) { return _NUM ; } else { return relations . size ( ) ; } }
53220	public boolean isTimeValid ( ) { boolean isTimeValid = _BOOL ; Conditions conditions = getConditions ( ) ; if ( conditions != _NULL ) { isTimeValid = conditions . checkDateValidity ( currentTimeMillis ( ) ) ; } return isTimeValid ; }
53253	public long scheduledExecutionTime ( ) { if ( expired ) { return - _NUM ; } else { return time . getTime ( ) ; } }
53260	public static ASN1Primitive convertValueToObject ( X509Extension ext ) throws IllegalArgumentException { try { return ASN1Primitive . fromByteArray ( ext . getValue ( ) . getOctets ( ) ) ; } catch ( IOException e ) { throw new IllegalArgumentException ( _CHAR ca n _CHAR_CHAR + e ) ; } }
53288	private String buildUploadUrl ( final String type ) { if ( pageContext . getRequest ( ) instanceof HttpServletRequest ) { return ( ( HttpServletRequest ) pageContext . getRequest ( ) ) . getContextPath ( ) . concat ( CKFINDER_UPLOAD_URL ) . concat ( type ) ; } else { return CKFINDER_UPLOAD_URL . concat ( type ) ; } }
53356	protected void storeLinkAnnotation ( PdfPage page , PdfLinkAnnotation annotation ) { List < PdfLinkAnnotation > pageAnnotations = linkAnnotations . get ( page ) ; if ( pageAnnotations == _NULL ) { pageAnnotations = new ArrayList < > ( ) ; linkAnnotations . put ( page , pageAnnotations ) ; } pageAnnotations . add ( annotation ) ; }
53361	protected boolean isLayoutValid ( int axis ) { if ( axis == majorAxis ) { return majorAllocValid ; } else { return minorAllocValid ; } }
53386	public boolean equals ( Object other ) { if ( ! this . getClass ( ) . equals ( other . getClass ( ) ) ) return _BOOL ; else { NioTcpMessageChannel that = ( NioTcpMessageChannel ) other ; if ( this . socketChannel != that . socketChannel ) return _BOOL ; else return _BOOL ; } }
53398	public boolean isLogEnabled ( ) { if ( logger == _NULL ) { return _BOOL ; } else { return logger . isLogEnabled ( ) ; } }
53423	public boolean isTransformed ( ) { if ( ! defaulting ) { return tx != _NULL ; } else { return ! getTransform ( ) . isIdentity ( ) ; } }
53442	public char last ( ) { pos = offset + count ; if ( count != _NUM ) { pos -= _NUM ; return array [ pos ] ; } return DONE ; }
53449	private void purgeOne ( ) { synchronized ( queue ) { WeakKey key = ( WeakKey ) queue . poll ( ) ; if ( key != _NULL ) { super . remove ( key . getReferenced ( ) ) ; } } }
53451	protected ApplicationWrapper createApplicationWrapper ( JsonValue jsonValue ) throws EntitlementException { try { return mapper . readValue ( jsonValue . toString ( ) , ApplicationWrapper . class ) ; } catch ( IOException e ) { throw new EntitlementException ( EntitlementException . INVALID_CLASS , e . getCause ( ) . getMessage ( ) ) ; } }
53477	private static boolean findActivity ( List < LauncherActivityInfoCompat > apps , ComponentName component ) { for ( LauncherActivityInfoCompat info : apps ) { if ( info . getComponentName ( ) . equals ( component ) ) { return _BOOL ; } } return _BOOL ; }
53512	public synchronized void cancelAll ( ) { waitingQueue . clear ( ) ; for ( BasicNode node : workingList . keySet ( ) ) { AbstractNodeTask task = workingList . get ( node ) ; cancelList . put ( node , node ) ; task . cancel ( ) ; } }
53532	public synchronized boolean removeElement ( Object object ) { int index ; if ( ( index = indexOf ( object , _NUM ) ) == - _NUM ) { return _BOOL ; } removeElementAt ( index ) ; return _BOOL ; }
53551	public Object clone ( ) { if ( ipv6 ) { return iPv6ConditionInstance . clone ( ) ; } else { return iPv4ConditionInstance . clone ( ) ; } }
53555	protected void togglePopup ( ) { if ( isVisible ( ) ) { hide ( ) ; } else { show ( ) ; } }
53638	@ Override protected void writeValue ( ASN1Writer writer ) throws IOException { if ( decodedKeyList != _NULL ) { writeValueFromString ( writer ) ; } else { writeValueFromSortOrder ( writer ) ; } }
53678	public synchronized long skip ( long n ) { long k = count - pos ; if ( n < k ) { k = n < _NUM ? _NUM : n ; } pos += k ; return k ; }
53698	private InetSocketAddress nextInetSocketAddress ( ) throws UnknownHostException { InetSocketAddress result = new InetSocketAddress ( socketAddresses [ nextSocketAddressIndex ++ ] , socketPort ) ; if ( nextSocketAddressIndex == socketAddresses . length ) { socketAddresses = _NULL ; nextSocketAddressIndex = _NUM ; } return result ; }
53701	public MappedMember findMethodByNameAndDesc ( String name , String desc , boolean useOriginalName ) { for ( MappedMember mm : getMethods ( ) ) { if ( mm . getDesc ( ) . equals ( desc ) && useOriginalName ? mm . getOriginalName ( ) . equals ( name ) : mm . getNewName ( ) . equals ( name ) ) { return mm ; } } return _NULL ; }
53758	public Object peek ( ) { try { return m_map [ m_firstFree - _NUM ] ; } catch ( ArrayIndexOutOfBoundsException e ) { throw new EmptyStackException ( ) ; } }
53777	public static < T > T newInstance ( final String className ) { try { return ( T ) Thread . currentThread ( ) . getContextClassLoader ( ) . loadClass ( className ) . newInstance ( ) ; } catch ( final Exception e ) { throw new RuntimeException ( e ) ; } }
53782	public void focusGained ( FocusEvent e ) { if ( component . isEnabled ( ) ) { if ( component . isEditable ( ) ) { setVisible ( _BOOL ) ; } setSelectionVisible ( _BOOL ) ; } }
53793	protected void registerChildren ( ) { super . registerChildren ( ) ; registerChild ( USER_VALIDATION_TITLE , StaticTextField . class ) ; registerChild ( LBL_USER_ATTR , StaticTextField . class ) ; registerChild ( TF_USER_ATTR , TextField . class ) ; registerChild ( NEXT_BUTTON , Button . class ) ; registerChild ( FLD_USER_ATTR , HiddenField . class ) ; }
53801	public TimeDescription createTimeDescription ( Date start , Date stop ) throws SdpException { TimeDescriptionImpl timeDescriptionImpl = new TimeDescriptionImpl ( ) ; TimeField timeImpl = new TimeField ( ) ; timeImpl . setStart ( start ) ; timeImpl . setStop ( stop ) ; timeDescriptionImpl . setTime ( timeImpl ) ; return timeDescriptionImpl ; }
53804	private Map mergeWithInternal ( String ct , Map dMap ) { Map rMap = _NULL ; Map sMap = ( Map ) internalClientData . get ( ct ) ; if ( sMap != _NULL ) { rMap = mergeMap ( sMap , dMap ) ; } return rMap ; }
53820	@ Override public void processSchemaChange ( List < Modification > modifications ) { if ( ! modifications . isEmpty ( ) ) { LDAPReplicationDomain domain = findDomain ( DirectoryServer . getSchemaDN ( ) , _NULL ) ; if ( domain != _NULL ) { domain . synchronizeSchemaModifications ( modifications ) ; } } }
53834	public ObjectName preRegister ( MBeanServer server , ObjectName name ) throws Exception { setMBeanServer ( server ) ; if ( name == _NULL ) { name = new ObjectName ( server . getDefaultDomain ( ) + _CHAR : _CHAR + ServiceName . MLET ) ; } this . mletObjectName = name ; return this . mletObjectName ; }
53837	public void addPermittedDomains ( Collection < String > domainNames ) { if ( domainNames == _NULL ) { return ; } for ( String domainName : domainNames ) { addPermittedDomain ( domainName ) ; } }
53844	protected static boolean isBufferEmpty ( byte [ ] buffer ) { for ( byte aBuffer : buffer ) { if ( aBuffer != _NUM ) { return _BOOL ; } } return _BOOL ; }
53874	public void deleteUsers ( Set users ) throws AMException , SSOException { Iterator iter = users . iterator ( ) ; while ( iter . hasNext ( ) ) { String userDN = ( String ) iter . next ( ) ; AMUser user = new AMUserImpl ( super . token , userDN ) ; user . delete ( ) ; } }
53908	public void format ( CommandManager mgr ) throws CLIException { StringBuffer buff = new StringBuffer ( ) ; buff . append ( _CHAR \ n \ n _CHAR ) ; formatUsage ( mgr , buff ) ; formatGlobalOptions ( mgr , buff ) ; formatSubcmds ( mgr , buff ) ; mgr . getOutputWriter ( ) . printlnMessage ( buff . toString ( ) ) ; }
53956	public Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new InternalError ( e ) ; } }
53979	@ Override public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { case MENU_HELP : help ( ) ; return _BOOL ; } return super . onOptionsItemSelected ( item ) ; }
53996	public synchronized void startPreview ( ) { OpenCamera theCamera = camera ; if ( theCamera != _NULL && ! previewing ) { theCamera . getCamera ( ) . startPreview ( ) ; previewing = _BOOL ; autoFocusManager = new AutoFocusManager ( context , theCamera . getCamera ( ) ) ; } }
54077	public < X extends Throwable > double orElseThrow ( Supplier < X > exceptionSupplier ) throws X { if ( isPresent ) { return value ; } else { throw exceptionSupplier . get ( ) ; } }
54088	private void lastChanceElection ( char searchTerm , TreeNode child , List < TreeNode > candidates , SearchContext context ) { if ( context . has ( ContextKey . LAST_CHARACTER ) ) { while ( child != _NULL ) { electWildcard ( searchTerm , child , candidates , context ) ; child = child . getSibling ( ) ; } } }
54151	@ SuppressWarnings ( _CHAR unchecked _CHAR ) public void writeObject ( SQLData x ) throws SQLException { if ( x == _NULL ) { attribs . add ( _NULL ) ; } else { attribs . add ( new SerialStruct ( x , map ) ) ; } }
54245	public void clear ( ) { while ( queue . poll ( ) != _NULL ) ; modCount ++ ; Entry < K > [ ] tab = table ; for ( int i = _NUM ; i < tab . length ; ++ i ) tab [ i ] = _NULL ; size = _NUM ; while ( queue . poll ( ) != _NULL ) ; }
54279	public boolean checkMaxDegree ( int value ) { if ( value >= ROLE_CARDINALITY_INFINITY && ( maxDegree == ROLE_CARDINALITY_INFINITY || ( value != ROLE_CARDINALITY_INFINITY && value <= maxDegree ) ) ) { return _BOOL ; } else { return _BOOL ; } }
54293	public boolean isSupported ( ) { try { return KeyPairGenerator . getInstance ( keyAlgorithm . toUpperCase ( ) ) != _NULL ; } catch ( NoSuchAlgorithmException e ) { return _BOOL ; } }
54311	public PlaPointFloat nearest_segment_point ( PlaPointFloat p_from_point ) { PlaPointFloat projection = perpendicular_projection ( p_from_point ) ; if ( projection . is_contained_in_box ( point_a , point_b , _NUM . _NUM ) ) { return projection ; } if ( p_from_point . distance_square ( point_a ) <= p_from_point . distance_square ( point_b ) ) return point_a ; else return point_b ; }
54315	public void requestTopDownLeftRightResend ( ImageConsumer ic ) { if ( proxies != _NULL ) { ImageFilter imgf = ( ImageFilter ) proxies . get ( ic ) ; if ( imgf != _NULL ) { imgf . resendTopDownLeftRight ( src ) ; } } }
54344	@ Override public void handleRequest ( RequestContext rc ) throws CLIException { super . handleRequest ( rc ) ; ssoToken = rc . getCLIRequest ( ) . getSSOToken ( ) ; if ( ssoToken == _NULL ) { adminID = getStringOptionValue ( AccessManagerConstants . ARGUMENT_ADMIN_ID ) ; adminPassword = getPassword ( ) ; } }
54359	public void close ( ) throws IOException { super . close ( ) ; disposerRecord . dispose ( ) ; stream = _NULL ; cache = _NULL ; cacheFile = _NULL ; StreamCloser . removeFromQueue ( closeAction ) ; }
54371	@ Override public int doRead ( ByteChunk chunk ) throws IOException { if ( hasRead || buffered . getLength ( ) <= _NUM ) { return - _NUM ; } chunk . setBytes ( buffered . getBytes ( ) , buffered . getStart ( ) , buffered . getLength ( ) ) ; hasRead = _BOOL ; return chunk . getLength ( ) ; }
54392	private void validateException ( InitializationException ie , LocalizableMessage message ) { if ( message == _NULL ) { assertNull ( ie . getMessageObject ( ) ) ; } else { assertEquals ( ie . getMessageObject ( ) , message ) ; } }
54393	public static void openGallery ( Activity activity ) { if ( activity == _NULL ) { throw new RuntimeException ( _CHAR Activity not set ! _CHAR ) ; } Intent galleryIntent = new Intent ( Intent . ACTION_PICK ) ; galleryIntent . setType ( _CHAR image /* '' ) ; activity . startActivityForResult ( galleryIntent , getGalleryRequestCode ( ) ) ; }
54500	private boolean findNodeFromTail ( Node node ) { Node t = tail ; for ( ; ; ) { if ( t == node ) return _BOOL ; if ( t == _NULL ) return _BOOL ; t = t . prev ; } }
54522	public void uninstallUI ( JComponent c ) { uninstallKeyboardActions ( ) ; uninstallListeners ( ) ; uninstallDefaults ( ) ; dividerLocationIsSet = _BOOL ; dividerKeyboardResize = _BOOL ; splitPane = _NULL ; }
54526	private String readInputUntil ( char ... symbols ) { String s = _CHAR _CHAR ; while ( ! accept ( symbols ) ) { s += ( char ) data [ index ] ; skip ( ) ; } return s ; }
54541	private static int spinsFor ( Node pred , boolean haveData ) { if ( MP && pred != _NULL ) { if ( pred . isData != haveData ) return FRONT_SPINS + CHAINED_SPINS ; if ( pred . isMatched ( ) ) return FRONT_SPINS ; if ( pred . waiter == _NULL ) return CHAINED_SPINS ; } return _NUM ; }
54544	public static boolean isOnline ( Context context ) { ConnectivityManager cm = ( ConnectivityManager ) context . getSystemService ( Context . CONNECTIVITY_SERVICE ) ; NetworkInfo netInfo = cm . getActiveNetworkInfo ( ) ; if ( netInfo != _NULL && netInfo . isConnectedOrConnecting ( ) ) { return _BOOL ; } return _BOOL ; }
54562	public static byte [ ] readFully ( InputStream in ) throws IOException { try { return readFullyNoClose ( in ) ; } finally { in . close ( ) ; } }
54603	private static String massageURI ( String uri ) { uri = uri . trim ( ) ; int protocolEnd = uri . indexOf ( _CHAR ) ; if ( protocolEnd < _NUM || isColonFollowedByPortNumber ( uri , protocolEnd ) ) { uri = _CHAR http : // '' + uri ; } return uri ; }
54632	public void repaint ( long time , int x , int y , int width , int height ) { if ( RepaintManager . HANDLE_TOP_LEVEL_PAINT ) { RepaintManager . currentManager ( this ) . addDirtyRegion ( this , x , y , width , height ) ; } else { super . repaint ( time , x , y , width , height ) ; } }
54638	private final void appendContents ( StringBuffer buf , CharacterIterator iterator ) { int index = iterator . getBeginIndex ( ) ; int end = iterator . getEndIndex ( ) ; while ( index < end ) { iterator . setIndex ( index ++ ) ; buf . append ( iterator . current ( ) ) ; } }
54656	public char last ( ) { pos = offset + count ; if ( count != _NUM ) { pos -= _NUM ; return array [ pos ] ; } return DONE ; }
54672	public char current ( ) { if ( pos >= _NUM && pos < chars . length ) { return chars [ pos ] ; } else { return DONE ; } }
54677	public void createParentTreeEntryForPage ( PdfPage page ) { Map < Integer , PdfMcr > mcrs = getPageMarkedContentReferences ( page ) ; if ( mcrs == _NULL ) { return ; } pageToPageMcrs . remove ( page . getPdfObject ( ) . getIndirectReference ( ) ) ; updateStructParentTreeEntries ( page . getStructParentIndex ( ) , mcrs ) ; }
54678	synchronized void removeListener ( String listenerID ) { if ( listenerObjects != _NULL ) { listenerObjects . remove ( listenerID ) ; if ( listenerObjects . isEmpty ( ) ) { SMSNotificationManager . getInstance ( ) . removeCallbackHandler ( listenerId ) ; } } }
54686	@ Override protected boolean syncUIControlState ( ) { boolean disableControls = super . syncUIControlState ( ) ; if ( getBroadcast ( ) != _NULL ) { mMP4Controls . setVisibility ( getBroadcast ( ) . getStatus ( ) . isRunning ( ) ? View . INVISIBLE : View . VISIBLE ) ; mSwitchMP4 . setEnabled ( ! disableControls ) ; } return disableControls ; }
54711	public boolean runningWithGoal ( String ... goals ) throws MojoExecutionException { for ( String goal : goals ) { if ( goalFinder . runningWithGoal ( project , session , goal ) ) { return _BOOL ; } } return _BOOL ; }
54713	public String toExternalForm ( ) { if ( entryName == _NULL ) { return url . toExternalForm ( ) ; } else { return _CHAR jar : _CHAR + url . toExternalForm ( ) + _CHAR ! / _CHAR + entryName ; } }
54738	public void shape ( char [ ] text , int start , int count , int context ) { if ( isContextual ( ) ) { contextualShape ( text , start , count , getIndexFromRange ( context ) ) ; } else { nonContextualShape ( text , start , count ) ; } }
54764	public void init ( SecureRandom random ) throws IllegalArgumentException { if ( random != _NULL ) { this . random = random ; } else { this . random = new SecureRandom ( ) ; } }
54797	@ Override public synchronized void mark ( int idx ) throws IOException { try { in . mark ( idx ) ; } catch ( IOException e ) { handleIOException ( e ) ; } }
54844	private static boolean isIdempotent ( Method method ) { HttpAttribute httpAttr = method . getAttribute ( HttpAttribute . KEY ) ; if ( httpAttr == _NULL ) { return _BOOL ; } MethodKind methodKind = httpAttr . getMethodKind ( ) ; return methodKind . isIdempotent ( ) ; }
54864	public void clearWarnedTime ( ) { logger . trace ( _CHAR Clearing warned time for user % s '' , userDNString ) ; if ( getWarnedTime ( ) >= _NUM ) { warnedTime =- _NUM ; clearAttribute ( OP_ATTR_PWPOLICY_WARNED_TIME ) ; logger . trace ( _CHAR Cleared the warned time for user % s '' , userDNString ) ; } }
54892	public static String generateNumricPassword ( final int numberOfChar ) { final Random randomGenerator = new Random ( ) ; String password = _CHAR _CHAR ; for ( int i = _NUM ; i <= numberOfChar ; ++ i ) { password += randomGenerator . nextInt ( _NUM ) ; } return password ; }
54894	private SAXParseException makeException ( String message ) { if ( locator != _NULL ) { return new SAXParseException ( message , locator ) ; } else { return new SAXParseException ( message , _NULL , _NULL , - _NUM , - _NUM ) ; } }
54904	private byte [ ] performUpdate ( byte [ ] data , BidiMap map ) throws TokenStrategyFailedException { try { return blobUtils . fromUTF8 ( applyReplacement ( map , blobUtils . toUTF8 ( data ) ) ) ; } catch ( UnsupportedEncodingException e ) { throw new TokenStrategyFailedException ( e ) ; } }
54906	public boolean mustReindex ( AbstractIndexDescriptor index ) { for ( AbstractIndexDescriptor i : modifiedIndexes ) { if ( i . getName ( ) . equals ( index . getName ( ) ) && i . getBackend ( ) . getBackendID ( ) . equals ( index . getBackend ( ) . getBackendID ( ) ) ) { return _BOOL ; } } return _BOOL ; }
54977	public void writeString ( byte [ ] string ) { try { uncompData . write ( string ) ; } catch ( IOException e ) { throw new PdfException ( PdfException . LzwDecoderException , e ) ; } }
54988	public static RationaleDialog newInstance ( int requestCode , boolean finishActivity ) { Bundle arguments = new Bundle ( ) ; arguments . putInt ( ARGUMENT_PERMISSION_REQUEST_CODE , requestCode ) ; arguments . putBoolean ( ARGUMENT_FINISH_ACTIVITY , finishActivity ) ; RationaleDialog dialog = new RationaleDialog ( ) ; dialog . setArguments ( arguments ) ; return dialog ; }
55006	private boolean isReadOnly ( DN dn ) { for ( DN parentDN : parentReadOnly ) { if ( dn . isSubordinateOrEqualTo ( parentDN ) ) { return _BOOL ; } } return dn . equals ( DN . rootDN ( ) ) ; }
55049	public Builder withFade ( Color color ) throws IllegalArgumentException { Validate . notNull ( color , _CHAR Can not have _NULL color _CHAR ) ; if ( fadeColors == _NULL ) { fadeColors = ImmutableList . builder ( ) ; } fadeColors . add ( color ) ; return this ; }
55054	private static ASN1Primitive convertValueToObject ( Extension ext ) throws IllegalArgumentException { try { return ASN1Primitive . fromByteArray ( ext . getExtnValue ( ) . getOctets ( ) ) ; } catch ( IOException e ) { throw new IllegalArgumentException ( _CHAR ca n _CHAR_CHAR + e ) ; } }
55056	private void logOutIfPossible ( ) { try { openActionBarOverflowOrOptionsMenu ( InstrumentationRegistry . getTargetContext ( ) ) ; onView ( withText ( R . string . menu_logout ) ) . perform ( click ( ) ) ; } catch ( NoMatchingViewException e ) { } }
55065	public void deleteGroupContainers ( Set groupContainerDNs ) throws AMException , SSOException { Iterator iter = groupContainerDNs . iterator ( ) ; while ( iter . hasNext ( ) ) { String groupContainerDN = ( String ) iter . next ( ) ; AMGroupContainer groupContainer = new AMGroupContainerImpl ( token , groupContainerDN ) ; groupContainer . delete ( ) ; } }
55082	public boolean isLetterOrDigitAhead ( ) { int pos = currentPosition ; while ( pos < maxPosition ) { if ( Character . isLetterOrDigit ( str . charAt ( pos ) ) ) return _BOOL ; pos ++ ; } return _BOOL ; }
55084	private ExpandRoomFreespaceComplete add_complete_room ( ExpandRoomFreespaceIncomplete p_room ) { ExpandRoomFreespaceComplete completed_room = ( ExpandRoomFreespaceComplete ) calculate_doors ( p_room ) ; if ( completed_room == _NULL ) return _NULL ; if ( completed_room . get_shape ( ) . dimension ( ) != PlaDimension . AREA ) return _NULL ; complete_expansion_rooms . add ( completed_room ) ; art_search_tree . insert ( completed_room ) ; return completed_room ; }
55107	public boolean equals ( XObject obj2 ) { try { return m_val == obj2 . bool ( ) ; } catch ( javax . xml . transform . TransformerException te ) { throw new org . apache . xml . utils . WrappedRuntimeException ( te ) ; } }
55154	private static byte [ ] longToByteArray ( long l ) { byte [ ] retVal = new byte [ _NUM ] ; for ( int i = _NUM ; i < _NUM ; i ++ ) { retVal [ i ] = ( byte ) l ; l >>= _NUM ; } return retVal ; }
55161	public void shutdown ( ) { try { radiusConn . disconnect ( ) ; } catch ( IOException e ) { } radiusConn = _NULL ; }
55172	public static DataReplicationOptions createInExistingTopology ( AuthenticationData authenticationData , int replicationPort , boolean secureReplication ) { DataReplicationOptions options = new DataReplicationOptions ( ) ; options . type = Type . IN_EXISTING_TOPOLOGY ; options . authenticationData = authenticationData ; options . replicationPort = replicationPort ; options . secureReplication = secureReplication ; return options ; }
55215	private static HashSet < Object > cloneIssuerNames ( Collection < Object > names ) { try { return cloneAndCheckIssuerNames ( names ) ; } catch ( IOException ioe ) { throw new RuntimeException ( ioe ) ; } }
55256	public void printStats ( ) { if ( table . size ( ) != _NUM ) { FSAssertionManager . artStats . record ( _CHAR Number of artifact in table for provider '' + providerId + '' under realm '' + realm + '' : '' + table . size ( ) ) ; } else { FSAssertionManager . artStats . record ( _CHAR No artifact found in table for provider '' + providerId + '' under realm '' + realm + '' . '' ) ; } }
55268	public SIPHeader parse ( ) throws ParseException { String name = lexer . getNextToken ( _CHAR ) ; lexer . consume ( _NUM ) ; String body = lexer . getLine ( ) . trim ( ) ; ExtensionHeaderImpl retval = new ExtensionHeaderImpl ( name ) ; retval . setValue ( body ) ; return retval ; }
55302	boolean equals ( ClearanceMatrixEntry p_other ) { for ( int i = _NUM ; i < layer_structure . size ( ) ; ++ i ) { if ( layer [ i ] != p_other . layer [ i ] ) { return _BOOL ; } } return _BOOL ; }
55317	protected void configure ( ) { if ( configured ) { return ; } log = LogFactory . getLog ( _CHAR org . apache . tomcat . util . digester . Digester _CHAR ) ; saxLog = LogFactory . getLog ( _CHAR org . apache . tomcat . util . digester . Digester . sax _CHAR ) ; configured = _BOOL ; }
55324	public void undo ( ) throws CannotUndoException { super . undo ( ) ; int i = edits . size ( ) ; while ( i -- > _NUM ) { UndoableEdit e = edits . elementAt ( i ) ; e . undo ( ) ; } }
55346	@ Override public void entryReadError ( EntryReadErrorEvent ev ) { searchResult = _NULL ; errorSearchingPanel . setError ( ev . getDN ( ) , ev . getError ( ) ) ; delete . setVisible ( _BOOL ) ; saveChanges . setVisible ( _BOOL ) ; cardLayout . show ( mainPanel , ERROR_SEARCHING ) ; displayedEntryPanel = _NULL ; }
55355	private void installListeners ( ) { if ( window != _NULL ) { windowListener = createWindowListener ( ) ; window . addWindowListener ( windowListener ) ; propertyChangeListener = createWindowPropertyChangeListener ( ) ; window . addPropertyChangeListener ( propertyChangeListener ) ; } }
55381	private void processWebInfLib ( ) { WebResource [ ] possibleJars = listResources ( _CHAR / WEB - INF / lib _CHAR , _BOOL ) ; for ( WebResource possibleJar : possibleJars ) { if ( possibleJar . isFile ( ) && possibleJar . getName ( ) . endsWith ( _CHAR . jar _CHAR ) ) { createWebResourceSet ( ResourceSetType . CLASSES_JAR , _CHAR / WEB - INF / classes _CHAR , possibleJar . getURL ( ) , _CHAR / _CHAR ) ; } } }
55398	public void authenticationInitialized ( ) { authInitialized = _BOOL ; appSSOToken = getSSOToken ( ) ; if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR AdminTokenAction : authenticationInit _CHAR + _CHAR called . AppSSOToken className = _CHAR + ( String ) ( ( appSSOToken == _NULL ) ? _CHAR _NULL _CHAR : appSSOToken . getClass ( ) . getName ( ) ) ) ; } internalAppSSOToken = _NULL ; }
55420	public boolean endsWith ( List < Rdn > rdns ) { if ( rdns == _NULL ) { return _BOOL ; } int len1 = this . rdns . size ( ) ; int len2 = rdns . size ( ) ; return ( len1 >= len2 && doesListMatch ( len1 - len2 , len1 , rdns ) ) ; }
55437	public void processListenerEvent ( String name ) { synchronized ( jaasConfig ) { if ( debug . messageEnabled ( ) ) { debug . message ( _CHAR pLE , remove config _CHAR + name ) ; } jaasConfig . remove ( name ) ; } }
55458	public static void main ( String [ ] args ) { try { UIManager . setLookAndFeel ( UIManager . getSystemLookAndFeelClassName ( ) ) ; } catch ( Exception e ) { } new Scanner ( ) ; }
55469	public void dragEnter ( DragSourceDragEvent dsde ) { DragSourceListener dsl = listener ; if ( dsl != _NULL ) { dsl . dragEnter ( dsde ) ; } getDragSource ( ) . processDragEnter ( dsde ) ; updateCurrentCursor ( getSourceActions ( ) , dsde . getTargetActions ( ) , ENTER ) ; }
55471	public Object clone ( ) throws CloneNotSupportedException { if ( this instanceof Cloneable ) { return super . clone ( ) ; } else { throw new CloneNotSupportedException ( ) ; } }
55482	public boolean contains ( BrdViaInfo p_via_info ) { for ( BrdViaInfo curr_info : this . vinfo_list ) { if ( p_via_info == curr_info ) { return _BOOL ; } } return _BOOL ; }
55494	public boolean is_overlap ( ) { Set < BrdItem > start_contacts = get_start_contacts ( ) ; Set < BrdItem > end_contacts = get_end_contacts ( ) ; for ( BrdItem end_contact : end_contacts ) { if ( start_contacts . contains ( end_contact ) ) return _BOOL ; } return _BOOL ; }
55504	protected AbstractElement createDefaultRoot ( ) { BranchElement map = ( BranchElement ) createBranchElement ( _NULL , _NULL ) ; Element line = createLeafElement ( map , _NULL , _NUM , _NUM ) ; Element [ ] lines = new Element [ _NUM ] ; lines [ _NUM ] = line ; map . replace ( _NUM , _NUM , lines ) ; return map ; }
55522	public InputSource resolveEntity ( String publicId , String systemId ) throws SAXException , IOException { if ( entityResolver != _NULL ) { return entityResolver . resolveEntity ( publicId , systemId ) ; } else { return _NULL ; } }
55529	public synchronized void removeActionListener ( ActionListener l ) { if ( ( l != _NULL ) && ( getAction ( ) == l ) ) { setAction ( _NULL ) ; } else { listenerList . remove ( ActionListener . class , l ) ; } }
55542	private void disableComponents ( ) { setEnabledOK ( _BOOL ) ; lInitContents . setVisible ( _BOOL ) ; argumentsScroll . setVisible ( _BOOL ) ; for ( JComponent comp : comps ) { comp . setEnabled ( _BOOL ) ; } }
55583	public void validate ( ValidatableObject vo ) throws SAXException { if ( validatedObjects . add ( ProxyGroup . unwrap ( vo ) ) ) { MSVValidator . validate ( jaxbContext , this , vo ) ; } else { reportEvent ( vo , Messages . format ( Messages . CYCLE_DETECTED ) ) ; } }
55597	void addControls ( Request request ) { if ( sortControl != _NULL && request instanceof SearchRequest ) { request . addControl ( sortControl ) ; } if ( followReferralsControl != _NULL ) { request . addControl ( followReferralsControl ) ; } }
55628	public void transform ( Source xmlSource , Result outputTarget , boolean shouldRelease ) throws TransformerException { synchronized ( m_reentryGuard ) { SerializationHandler xoh = createSerializationHandler ( outputTarget ) ; this . setSerializationHandler ( xoh ) ; m_outputTarget = outputTarget ; transform ( xmlSource , shouldRelease ) ; } }
55630	@ Override public Promise < ResourceResponse , ResourceException > handleRead ( Context context , ReadRequest request ) { try { return connectionFactory . getConnection ( ) . readAsync ( new UpdateContext ( context ) , copyOfReadRequest ( request ) . setResourcePath ( updateStore . concat ( request . getResourcePathObject ( ) ) ) ) ; } catch ( ResourceException e ) { return e . asPromise ( ) ; } }
55637	public String encodeMessage ( String function , Object param ) { Object params [ ] = _NULL ; if ( param != _NULL ) { params = new Object [ _NUM ] ; params [ _NUM ] = param ; } return ( encodeMessage ( function , params ) ) ; }
55689	public final boolean parentOf ( ThreadGroup g ) { for ( ; g != _NULL ; g = g . parent ) { if ( g == this ) { return _BOOL ; } } return _BOOL ; }
55702	public static void clear ( String realmName ) { if ( ( authCtxObjHash != _NULL ) && ( ! authCtxObjHash . isEmpty ( ) ) ) { authCtxObjHash . clear ( ) ; } if ( ( authContextHash != _NULL ) && ( ! authContextHash . isEmpty ( ) ) ) { authContextHash . clear ( ) ; } }
55730	public boolean isEmpty ( ) { synchronized ( actions ) { if ( allowToChange ) { return actions . isEmpty ( ) ; } } return _BOOL ; }
55751	public void handleButton2Request ( RequestInvocationEvent event ) { setPageSessionAttribute ( getTrackingTabIDName ( ) , AMAdminConstants . FED_TAB_ID ) ; setPageSessionAttribute ( AMAdminConstants . PREVIOUS_TAB_ID , getTrackingTabIDName ( ) ) ; FederationViewBean vb = ( FederationViewBean ) getViewBean ( FederationViewBean . class ) ; backTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
55752	public void handleTblDataActionHrefRequest ( RequestInvocationEvent event ) { String name = hexToString ( ( String ) getDisplayFieldValue ( TBL_DATA_ACTION_HREF ) ) ; setPageSessionAttribute ( DelegationPropertiesViewBean . CURRENT_IDENTITY , name ) ; DelegationPropertiesViewBean vb = ( DelegationPropertiesViewBean ) getViewBean ( DelegationPropertiesViewBean . class ) ; unlockPageTrail ( ) ; passPgSessionMap ( vb ) ; vb . forwardTo ( getRequestContext ( ) ) ; }
55772	public void remove ( ) throws UnsupportedOperationException { if ( this . lastIndex < _NUM ) { throw new IllegalStateException ( _CHAR No header to remove . '' ) ; } this . allHeaders . remove ( this . lastIndex ) ; this . lastIndex =- _NUM ; this . currentIndex -- ; }
55878	public static Method findCommandMethod ( Class < ? extends CustomCommandScope > commandsProvider , String methodName ) { try { return commandsProvider . getMethod ( methodName , InputStream . class , PrintStream . class , String [ ] . class ) ; } catch ( NoSuchMethodException e ) { return _NULL ; } }
55891	private String readUnicodeString ( int length ) throws java . io . IOException { StringBuilder buf = new StringBuilder ( ) ; length /= _NUM ; for ( int k = _NUM ; k < length ; ++ k ) { buf . append ( raf . readChar ( ) ) ; } return buf . toString ( ) ; }
55921	private boolean isVLVAttrs ( String name ) { for ( int i = _NUM ; i < vlvAttrNames . length ; i ++ ) { if ( name . equalsIgnoreCase ( vlvAttrNames [ i ] ) ) { return _BOOL ; } } return _BOOL ; }
55975	public String toString ( ) { StringBuffer sb = new StringBuffer ( ) ; sb . append ( _CHAR LDAPCertStoreParameters : [ \ n _CHAR ) ; sb . append ( _CHAR serverName : _CHAR + serverName + _CHAR \ n _CHAR ) ; sb . append ( _CHAR port : _CHAR + port + _CHAR \ n _CHAR ) ; sb . append ( _CHAR ] _CHAR ) ; return sb . toString ( ) ; }
55995	public void writeFile ( AudioFile f ) throws CannotWriteException { String ext = Utils . getExtension ( f . getFile ( ) ) ; AudioFileWriter afw = writers . get ( ext ) ; if ( afw == _NULL ) { throw new CannotWriteException ( ErrorMessage . NO_WRITER_FOR_THIS_FORMAT . getMsg ( ext ) ) ; } afw . write ( f ) ; }
56001	@ Override protected Object clone ( ) { try { return super . clone ( ) ; } catch ( CloneNotSupportedException e ) { throw new AssertionError ( e ) ; } }
56018	public void shape ( char [ ] text , int start , int count ) { if ( isContextual ( ) ) { contextualShape ( text , start , count , fDefaultContextIndex ) ; } else { nonContextualShape ( text , start , count ) ; } }
56051	public ByteStringBuilder trimToSize ( ) { if ( buffer . length > length ) { final byte [ ] newBuffer = new byte [ length ] ; System . arraycopy ( buffer , _NUM , newBuffer , _NUM , length ) ; buffer = newBuffer ; } return this ; }
56056	public static byte [ ] decodeBase64 ( String base64String ) throws XMPException { try { return Base64 . decode ( base64String . getBytes ( ) ) ; } catch ( Throwable e ) { throw new XMPException ( _CHAR Invalid base64 string _CHAR , XMPError . BADVALUE , e ) ; } }
56083	public void init ( FilterConfig filterConfig ) throws ServletException { setFilterConfig ( filterConfig ) ; servletCtx = filterConfig . getServletContext ( ) ; File file = new File ( configFile ) ; if ( file . exists ( ) ) { setIDPDiscoveryConfig ( configFile ) ; } }
56126	@ Override public boolean accept ( File file ) { if ( fileFilter != _NULL ) { return fileFilter . accept ( file ) ; } else { return super . accept ( file ) ; } }
56142	void addUnstarted ( ) { synchronized ( this ) { if ( destroyed ) { throw new IllegalThreadStateException ( ) ; } nUnstartedThreads ++ ; } }
56143	public static Set delimStringToSet ( String str , String delimiter ) { Set valSet = new HashSet ( ) ; StringTokenizer st = new StringTokenizer ( str , delimiter ) ; while ( st . hasMoreTokens ( ) ) { valSet . add ( st . nextToken ( ) . trim ( ) ) ; } return valSet ; }
56188	private boolean findNodeFromTail ( Node node ) { Node t = tail ; for ( ; ; ) { if ( t == node ) return _BOOL ; if ( t == _NULL ) return _BOOL ; t = t . prev ; } }
56191	protected Request createTiInviteRequest ( String contentType , String contentSubType , Object content ) throws TiUnexpectedError { try { return createRequest ( Request . INVITE , tiAddressFactory , tiHeaderFactory , tiMessageFactory , tiSipProvider , riSipProvider , contentType , contentSubType , content ) ; } catch ( Throwable exc ) { throw new TiUnexpectedError ( _CHAR Failed to create a TI - > RI invite request _CHAR , exc ) ; } }
56213	public static String read4Chars ( RandomAccessFile raf ) throws IOException { StringBuffer sbuf = new StringBuffer ( _NUM ) ; for ( int i = _NUM ; i < _NUM ; i ++ ) { char ch = ( char ) raf . read ( ) ; sbuf . append ( ch ) ; } return sbuf . toString ( ) ; }
56218	public E poll ( ) { if ( isEmpty ( ) ) { return _NULL ; } E result = elements [ _NUM ] ; removeAt ( _NUM ) ; return result ; }
56232	public static Class < ? > toClass ( final String name ) { try { return Class . forName ( name ) ; } catch ( final ClassNotFoundException e ) { throw new RuntimeException ( e ) ; } }
56233	@ Override public boolean accept ( File dir , String name ) { for ( String wildcard : wildcards ) { if ( FilenameUtils . wildcardMatch ( name , wildcard , caseSensitivity ) ) { return _BOOL ; } } return _BOOL ; }
56245	private boolean isConfidentialIntegrity ( ) { boolean ret = _BOOL ; final String qop = ( String ) saslServer . getNegotiatedProperty ( Sasl . QOP ) ; if ( qop . equalsIgnoreCase ( confidentiality ) || qop . equalsIgnoreCase ( integrity ) ) { ret = _BOOL ; } return ret ; }
56313	private void onlyKeepAttributesWithAllOptions ( List < Attribute > attributes , AttributeDescription attributeDescription ) { for ( Iterator < Attribute > it = attributes . iterator ( ) ; it . hasNext ( ) ; ) { Attribute a = it . next ( ) ; if ( ! a . getAttributeDescription ( ) . isSubTypeOf ( attributeDescription ) ) { it . remove ( ) ; } } }
56324	public void install ( JEditorPane c ) { c . addCaretListener ( inputAttributeUpdater ) ; c . addPropertyChangeListener ( inputAttributeUpdater ) ; Caret caret = c . getCaret ( ) ; if ( caret != _NULL ) { inputAttributeUpdater . updateInputAttributes ( caret . getDot ( ) , caret . getMark ( ) , c ) ; } }
56328	public void stopEncryption ( ) { if ( _BOOL ) { StaticUtils . close ( secureSocket ) ; } input = new BufferedInputStream ( plainInput ) ; output = new BufferedOutputStream ( plainOutput ) ; isEncrypted = _BOOL ; }
